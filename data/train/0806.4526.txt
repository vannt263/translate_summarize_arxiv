{
  "article_text": [
    "sniffing is a usual technique for monitoring wireless networks .",
    "it consists in spreading within some target area a number of monitors ( or _ sniffers _ ) that capture all wireless traffic they hear and produce traces consisting of macframe exchanges .",
    "wireless sniffing is a fundamental step in a number of network operations , including network diagnosis  @xcite , security enhancement  @xcite , and behavioral analysis of protocols  @xcite .",
    "wireless sniffing often involves a centralized process that is responsible for combining the traces  @xcite .",
    "the objective is to have a global view of the wireless activity from multiple local measurements .",
    "individual sniffers can also compensate for their frame losses with data from other sniffers .",
    "merging is however a difficult task ; it requires precise synchronization among traces ( up to a few microseconds ) and bearing the unreliable nature of the medium ( frame loss is unavoidable ) .",
    "the literature has provided the community with a number of merging tool , but they either require a wired infrastructure or are too specific to the experimentations conducted in the papers ( see more details in section  [ sec : probem_description ] )  @xcite .    in this paper we present wipal , an trace merging tool that focuses on ease - of - use , flexibility , and speed . by explaining wipal s design choices and internals , we intend to complete existing papers and give additional insights about the complex process of trace merging .",
    "wipalhas multiple characteristics that distinguish it from the few other traces mergers :    offline tool . : :    being an offline tool enables wipalto be independent of the monitors :    one may use any software to acquire data .",
    "most trace mergers expect    monitors to embed specific software  @xcite .",
    "independent of infrastructure .",
    ": :    wipal s algorithms do not expect features from traces that would    require monitors to access a network infrastructure    ( e.g.,synchronization ) .",
    "monitors just need to record data in a    compatible input format .",
    "compliant with multiple formats .",
    ": :    wipalsupports most of the existing input formats , whereas other trace    mergers require a specific format .",
    "some tools even require a custom    dedicated format  @xcite .",
    "hands - on tool .",
    ": :    wipalis usable in a straightforward fashion by just calling the    adequate programs on trace files .",
    "other mergers require more complex    setups ( e.g.,a database server  @xcite or a network setup involving    multiple servers  @xcite . )",
    "this paper provides an analysis that supports these choices ( cf.section  [ sec : eval ] ) .",
    "first , the proposed synchronization mechanism exhibits better precision than existing algorithms .",
    "second , wipalis an order of magnitude faster than the other publicly available offline merger , wit  @xcite .",
    "this analysis uses crawdad s uw / sigcomm2004 dataset  @xcite , recorded during the sigcomm 2004 conference .",
    "it allows us to calibrate various parameters of wipal , validate its operation , and show its efficiency .",
    "wipalis however _ not _ designed for a specific dataset and works on any wireless traces using the appropriate input format ( wipal s test suite includes various synthetic traces with different formats ) .",
    "we do believe that wipalwill be of great utility for the research community working on wireless network measurements .",
    "wireless sniffing requires the use of multiple monitors for _ coverage _ and _ redundancy _ reasons .",
    "coverage is concerned when the distance between the monitor and at least one of the transmitters to be sniffed is too large to ensure a minimum reception threshold .",
    "redundancy is the consequence of the unreliability of the wireless medium . even in good radio conditions monitors may miss successfully transmitted frames .",
    "after the collection phase , traces must be combined into one .",
    "a merged trace holds all the frames recorded by the different monitors and gives a global view of the network traffic .",
    "the traditional approach to merging traces involves a _ synchronization _ step , which aligns frames according to their timestamps .",
    "this enables identifying all frames that are identical in traces so that they appear once and only once in the output trace ( cheng et al  @xcite refer to it as _",
    "unification_. ) this process is illustrated in fig .",
    "[ fig : basics ] .",
    "synchronization is difficult to obtain because , in order to be useful , it must be very precise .",
    "imprecise frame timestamps may result in duplicate frames and incorrect ordering in the output trace .",
    "an invalid synchronization may also lead to distinct frames accounted for the same frame in the output trace . in order to avoid such undesirable effects",
    "one needs precision of less than @xmath0  @xcite . to the extent of our knowledge , no existing hardware supports synchronizing network cards clocks with such a precision ( note that we are interested in frame arrival times in the card , not in the operating system ) .",
    "therefore , all merging tools post - process traces to _ resynchronize _ them with the help of _ reference frames _ , which are frames that appear in multiple traces .",
    "one may readjust the traces timing information using the timestamps of the reference frames ( see fig .",
    "[ fig : basics ] . ) finding reference frames is however a hard task , since we must be sure a given reference frame is an occurrence of the same frame in every traces .",
    "that is , some frames that occur frequently ( e.g.,macacknowledgements ) can not be used as reference frames because their content does not vary enough .",
    "therefore , only a subset of frames are used as reference frames , as explained later in this paper ( cf.section  [ sec : details ] ) .",
    "a few trace merging tools exist in the literature , but they do not focus on the same set of features as this paper .",
    "for instance , jigsaw  @xcite is able to merge traces from hundreds of monitors , but requires monitors to access a network infrastructure .",
    "wismon  @xcite is an online tool that has similar requirements .",
    "this paper however considers smaller - scale systems ( dozens of monitors ) but where no monitor can access a network infrastructure .",
    "another system close to ours is wit  @xcite . despite wit",
    "provides valuable insights on how to develop a merging tool , it is difficult to use , modify , and extend in practice ( cf.authors note in crawdad  @xcite ) . thus our motivation to propose a new trace merger .",
    "note that this paper only refers to wit s merging process ( as wit has other features like , e.g.,a module to infer missing packets ) .",
    "wipalhas been designed according to the following constraints :    no wired connectivity .",
    ": :    the sniffers must be able to work in environments where no wired    connectivity is provided .",
    "this enables performing measurements when it    is difficult to have all sniffers access a shared network    infrastructure ( e.g.,in some conference venues , or when studying    interferences between two wireless networks belonging to distinct    entities ) .",
    "simplicity to the end - user .",
    ": :    we believe simplicity is the key to re - usability .",
    "users are not    expected to install and set up complex systems ( e.g.,a database    backend ) in order to use wipal .",
    "clean design .",
    ": :    wipalexhibits a modular design .",
    "developers can easily adapt part of    the trace merger ( e.g.,the reference frames identification process ,    the synchronization , or merging algorithm . )    for these reasons , we opted for an offline trace merger that does not require that traces be synchronized a priori . concretely , the sniffers only have to record their measurements on a local storage device , using the widely used pcap ( packet capture ) file format .",
    "wipalcomes as a set of binaries to manipulate wireless traces , including the merging tool presented in this paper .",
    "it works directly on pcap files both as input and output .",
    "wipalis composed of roughly 10k lines of c++ and makes heavy usage of modern generic and static programming techniques .",
    "wipalis downloadable from http://wipal.lip6.fr .",
    "[ fig : design ] depicts wipal s structure .",
    "each box represents a distinct module and arrows show wipal s data flow .",
    "wipaltakes two wireless traces as input and produces a single merged trace . in the following ,",
    "we explain in detail the functioning of each one of the modules .",
    "this section explains the process of extracting reference frames .",
    "this operation involves two steps : extraction of unique frames and intersection of unique frames ( see fig .",
    "[ fig : design ] . )",
    "let us first define what a unique frame means .",
    "a frame is said to be unique when it appears `` in the air '' once and only once for the whole duration of the measurement .",
    "a frame that is unique within each trace but that actually appeared twice on the wireless medium should not be considered as unique .",
    "the process of extracting unique frames finds candidates to become reference frames .",
    "the process of intersecting unique frames identifies then identical unique frames from both traces to become reference frames .",
    "wipalconsider every beacon frame and non - retransmitted probe response as a unique frame .",
    "these are management frames that access points send on a regular basis ( e.g.,every 100 ms for beacon frames ) .",
    "the uniqueness of these frames is due to the 64-bit timestamps they embed ( these timestamps are not related to the actual timestamps used for synchronization ) .    in practice ,",
    "the extraction process does not load full frames into memory .",
    "it uses 16-byte hashes instead , which are stored in memory and used for comparisons .",
    "limiting the size of stored information is an important aspect since , as we will see later , wipal s intersection process performs a lot of comparisons and needs to store many unique frames in memory .",
    "tests with crawdad s uw / sigcomm2004 dataset  @xcite have shown that this technique is practical .",
    "concretely , wipalneeds less than 600  mb to load 7,700,000 unique frames .",
    "there are some rare cases where the assumption that beacons and probe responses are unique does not hold .",
    "the uw / sigcomm2004 dataset has a total number of 50,375,921 unique frames ( about 14% of 364,081,644 frames ) . among those frames",
    ", we detected 5 collisions ( distinct unique frames sharing identical hashes . )",
    "wipal s intersection process includes a filtering mechanism to detect and filter such collisions out .",
    "the intersection process intersects the sets of unique frames from both input traces .",
    "there are multiple algorithms to perform such a task . based on cheng et al .",
    "@xcite , a solution is to `` bootstrap '' the system by finding the first unique frame common to both traces and then use this reference frame as a basis for the synchronization mechanism , as shown in algorithm  [ alg : inter - sync ] .",
    "one may also use subsequent reference frames to update synchronization .",
    "this algorithm is practical because the inner loop only searches a very limited subset of @xmath1 .",
    "it has several drawbacks though : ( i ) the performance of the algorithm strongly depends on the precision of the synchronization process ; ( ii ) finding the first reference frame is still an issue ; ( iii ) this algorithm couples intersection with synchronization , which is undesirable with respect to modularity ; and ( iv ) there is a possibility that some frames are read multiple times from @xmath1 .",
    "more specifically , access to @xmath1 is not sequential .",
    "* input : * two lists of unique frames @xmath2 and @xmath1 .",
    "* output : * a list of reference frames .",
    "@xmath3 synchronization precision @xmath4 append @xmath5 to output .",
    "wipalincludes an algorithm that is much simpler to implement and that avoids the drawbacks of the abovementioned solution .",
    "the main characteristics of the proposed algorithm ( detailed in algorithm  [ alg : inter - nosync ] ) are : ( i ) it does not require a bootstrapping phase ; ( ii ) it does not depend on any kind of synchronization ; and ( iii ) it sequentially reads each frame only once from @xmath2 and @xmath1 .",
    "the algorithm starts by loading all unique frames of the first trace into memory .",
    "this precludes using it as an online tool .",
    "note that loading all unique frames from a trace into memory may hog resources ; this justifies the importance of having small identifiers for the unique frames .",
    "these constraints are however negligible compared to those of algorithm  [ alg : inter - sync ] . to support our argument ,",
    "let us show an example using the uw / sigcomm2004 dataset .",
    "the biggest traces are those from sniffers _ mojave _ and _ sonoran _ on channel 11 ( roughly 19  gb each . ) extracting these traces unique frames and intersecting them using wipalneeds 575 mb of memory .",
    "therefore , memory aggressiveness is not a concern in algorithm  [ alg : inter - nosync ]",
    ".    * input : * two lists of unique frames @xmath2 and @xmath1 . *",
    "output : * a list of reference frames . @xmath6 insert @xmath7 into @xmath8 .",
    "append @xmath5 to output .",
    "another advantage of algorithm  [ alg : inter - nosync ] is its ability to detect collisions of unique frames within the first trace .",
    "collisions are detected by duplicate elements in @xmath8 .",
    "wipaldetects such cases , memorizes collisions , and filter them out of the hash table before starting the algorithm s second loop .",
    "of course , collisions in the second trace remain undetected .",
    "even if wipaldetected them , there would still be the possibility that a collision spans across both traces ( i.e.,each trace contains one occurrence of a colliding unique frame ) .",
    "such cases lead to producing invalid reference frames . to detect them ,",
    "wipallooks at possible anomalies w.r.t.the interarrival times between unique frames . in practice ,",
    "invalid references are rare : only three occurrences when merging uw / sigcomm2004 s channel 11 ( a 73  gb input which produces a 22  gb output ) .      synchronizing two traces",
    "means mapping trace one s timestamps to values compatible with trace two s .",
    "wipalcomputes such a mapping with an affine function .",
    "it estimates @xmath9 and @xmath10 with the help of reference frames as the process runs .",
    "wipal s synchronization process operates on windows of @xmath11 reference frames ( finding an optimal value of @xmath12 is discussed below ) .",
    "for each reference frame @xmath13 , the process performs a linear regression using reference frames @xmath14 ,  , @xmath15 .",
    "at the beginning and at the end of the trace , we use and ( @xmath16 is the number of reference frames . ) the result gives @xmath9 and @xmath10 for all frames between @xmath13 and @xmath17 .",
    "we performed a number of experiments that revealed that the optimal value for @xmath12 is 2 ( i.e.,wipalperforms linear regressions on 3-frame windows ) .",
    "[ fig : prec ] shows the results of performing two merge operations with varying window sizes . the merges concern channel 11 of the _ sahara   chihuahuan _ and _ kalahari   mojave _ sniffers from uw / sigcomm2004 .",
    "the average synchronization error is computed as follows .",
    "consider only the subset @xmath18 of frames that are shared by both the first and second trace @xmath19 and @xmath20 .",
    "for a given frame @xmath21 , let @xmath22 be the arrival time of @xmath21 inside @xmath19 ( after clock synchronization ) and @xmath23 be the arrival time of @xmath21 inside @xmath20 .",
    "the average synchronization error is given by .",
    "as previously underlined , @xmath24 leads to the minimum average synchronization error . note that techniques that use @xmath25 ( i.e.,that performs linear interpolations on couples of reference frames )",
    "would lead to the worst synchronization error . furthermore , merging traces with @xmath25 misses some shared frames .",
    "table  [ tab : sync ] shows the number of frames that are identified as duplicates in the input traces .",
    "whereas using @xmath26 always gives identical results , using @xmath27 leads to some missed duplicates ( 7,455 for _",
    "sahara   chihuahuan _ and 84 for _ kalahari   mojave _ ) .",
    "although this is a small number compared to the total number of frames in the output traces , it indicates that synchronizing traces using linear interpolation ( as wit  @xcite does ) may lead to incorrect results .",
    "unfortunately , it is difficult to know whether some duplicates were missed when @xmath26 ( we do not know which frames to expect as duplicates ) .",
    ".number of frames found to be shared by both input traces when merging _",
    "sahara   chihuahuan _ and _ kalahari   mojave _ with @xmath25 and @xmath26 ( channel 11 ) . [ cols=\"^,^,^ \" , ]      we now present how wipalperforms the final step , namely the merging process itself . its role is to copy frames from synchronized traces to the output trace . of course",
    ", it must order its output correctly while avoiding duplicate frames .    algorithm  [ alg : merge ] details wipal s merging algorithm . for the sake of illustration , we present here a simplified version that assumes that only one frame is emitted at a given time inside the monitoring area .",
    "it simultaneously iterates on both inputs , where each iteration adds the earliest input frame to the output ( lines  [ alg : merge : it-1 ] and  [ alg : merge : it-2 ] . )",
    "duplicate frames are the ones that have identical contents and that are spaced less than 106@xmath28 ( line  [ alg : merge : dup ] . )",
    "the rationale for this value is that 106@xmath28 is half of the minimum gap between two valid frames  @xcite .",
    "therefore , the appearance of identical frames during such an interval is in fact a unique occurrence of the same frame .    * input : * two synchronized traces @xmath19 and @xmath20 .",
    "* output : * the merge of @xmath19 and @xmath20 .",
    "append @xmath21 to output ; @xmath29 s next frame ( or @xmath30 ) @xmath31 s first frame ; @xmath32 s first frame advance(@xmath33 , @xmath20 ) advance(@xmath34 , @xmath19 ) @xmath35 s time of arrival @xmath36 s time of arrival [ alg : merge : dup ] append either @xmath34 or @xmath33 to output .",
    "s next frame ( or @xmath30 ) @xmath32 s next frame ( or @xmath30 ) advance(@xmath34 , @xmath19 ) [ alg : merge : it-1 ] advance(@xmath33 ,",
    "@xmath20 ) [ alg : merge : it-2 ]",
    "this section provides an evaluation of wipalusing crawdad s uw / sigcomm2004 dataset  @xcite .",
    "we investigate both the correctness and the efficiency of wipal .",
    "we merge all traces sniffed from channel 11 and then use some heuristics to evaluate the quality of the result .",
    "we also analyze wipal s speed .",
    "traces from five sniffers compose the uw / sigcomm2004 dataset : _ chihuahuan _ , _ kalahari _ , _ mojave _ , _ sahara _ , and _",
    "sonoran_. fig .",
    "[ fig : eval : merge ] shows the merging sequence we used to merge all traces .",
    "the reason why _ kalahari _ and _ mojave _ share so few frames is that _ kalahari _ is an order of magnitude smaller than _",
    "mojave_.           checking",
    "the correctness of the output is difficult .",
    "being able to test whether traces are correctly merged or not would be equivalent to knowing exactly in advance what the merge should look like .",
    "unfortunately , there is no reference output against which we could compare .",
    "thus , we propose several heuristics to check if wipalintroduces or not inconsistencies in its outputs .",
    "we also check wipal s correctness with a test - suite of synthetic traces for which we know exactly what to expect as output",
    ".    a broken merging process could lead to several inconsistencies in the output traces . regarding the uw / sigcomm2004 dataset",
    ", we investigate in particular two of those inconsistencies : duplicate unique frames and duplicate data frames .",
    "duplicate unique frames .",
    ": :    as seen previously , every unique frame should only occur once in the    traces ( including merged traces ) .",
    "yet , it is difficult to avoid    collisions in practice ( see section  [ sec : unique - frames : extract ] ) .",
    "thus    one should not consider all collisions as inconsistencies .",
    "when    merging uw / sigcomm2004 , the final trace has 5 collisions .",
    "we manually    verified that they are not inconsistencies introduced by wipal s    merging process .",
    "duplicate data frames .",
    ": :    we search traces on a per - sender basis for successive duplicate data    frames ( only considering non - retransmitted frames ) .",
    "such cases should    not occur in theory   without retransmissions sequence numbers should    at least vary .",
    "surprisingly , traces from uw / sigcomm2004 contain 20,303    such anomalies .",
    "we have no explanations why the dataset exhibits those    phenomena .",
    "we checked however that the merged trace does not have more    duplicates than the original traces .",
    "merging all the traces ( 73  gb ) takes about 2 hours and 20 minutes ( real time ) on a 3  ghz processor with 2  gb ram .",
    "we balance merge operations on two hard drives , whose average throughput during computations are about 60  mb / s and 30  mb / s .",
    "the average cpu usage is 75% , which means one could perform faster with faster hard drives ( about 1 hour and 40 minutes ) .",
    "comparing wipalwith online trace mergers does not make much sense : their mode of operation is different , and these also have different requirements ( e.g.,wired connectivity and loose synchronization . )",
    "the comparison would be unfair .",
    "we can however compare wipalwith wit  @xcite , another offline merger .",
    "wit works on top of a database backend , which means that trace files need to be imported into a database before any further operation can begin ( e.g.,merging or inferring missing packets ) . using the same machine as before ,",
    "importing channel 11 of uw / sigcomm2004 into wit s database takes around 33 hours ( user time ) .",
    "this means that , before wit begins its merge operations , wipalcan perform at least 14 runs of a full merge with the same data .",
    "wipalallows then tremendous speed improvements .",
    "one of the reasons for such a difference is wipaluses high performance c++ code while wit is just a set of perl scripts using sql to interact with a database .",
    "this paper introduced the wipaltrace merger . as an _ offline _ merger , wipaldoes not require sniffers to be synchronized nor to have access to a wired infrastructure .",
    "wipalprovides several improvements over existing equivalent software : ( i ) it comes as a simple program able to manipulate trace files directly , instead of requiring a more complex software setup , ( ii ) its synchronization algorithm offer better precision than the existing algorithms ; and ( iii ) it has a clean modular design .",
    "furthermore , we also showed wipalis an order of magnitude faster than wit  @xcite , the other available offline merger .",
    "we have several plans for the future of wipal .",
    "first , we are currently extending it to include other features ( besides merging ) . as a flavor of future features of wipal",
    ", it will perform traffic statistics on traces .",
    "we will also make better use of wipal s modularity and test other algorithms for the various stages of the merging operation .",
    "m.  rodrig , c.  reis , r.  mahajan , d.  wetherall , j.  zahorjan , and e.  lazowska , `` crawdad data set uw / sigcomm2004 ( v. 2006 - 10 - 17 ) , '' downloaded from http://crawdad.cs.dartmouth.edu/uw/sigcomm2004 , oct ."
  ],
  "abstract_text": [
    "<S> merging wireless traces is a fundamental step in measurement - based studies involving multiple packet sniffers . </S>",
    "<S> existing merging tools either require a wired infrastructure or are limited in their usability . </S>",
    "<S> we propose wipal , an offline merging tool for traces that has been designed to be efficient and simple to use . </S>",
    "<S> wipalis flexible in the sense that it does not require any specific services , neither from monitors ( like synchronization , access to a wired network , or embedding specific software ) nor from its software environment ( e.g.,an sql server ) . </S>",
    "<S> we present wipal s operation and show how its features   notably , its modular design   improve both ease of use and efficiency . experiments on real traces show that wipalis an order of magnitude faster than other tools providing the same features . </S>",
    "<S> to our knowledge , wipalis the only offline trace merger that can be used by the research community in a straightforward fashion . </S>"
  ]
}
{
  "article_text": [
    "caching is a data management technique that can alleviate the communication burden during peak traffic time , by prefetching and prestoring certain useful content at the users local caches during off - peak hours .",
    "maddah - ali and niesen @xcite recently considered the problem in an information theoretical framework . in this",
    "setting , there are a total of @xmath0 mutually independent files of equal size as well as @xmath1 users .",
    "the overall system operates in two phases : in the placement phase , each user stores in his local cache some content from these files ; in the delivery phase , each user will request one file , and the central server transmits ( multicasts ) certain common content to all the users to accommodate their requests .",
    "each user has a local cache memory of capacity @xmath2 , and the contents stored in the placement phase are determined without knowing a priori the precise requests in the delivery phase .",
    "the system should minimize the amount of multicast information which has rate @xmath3 for all possible combinations of user requests , under the memory cache constraint @xmath2 , both of which are measured as multiples of the file size .",
    "it is clear that there is a tradeoff between @xmath3 and @xmath2 , and thus the fundamental question is the characterization of the optimal tradeoff .",
    "it was shown in @xcite that coding can be very beneficial in this setting , and in fact provides a tradeoff within a constant factor of the optimum , while uncoded solutions suffer a significant loss .",
    "subsequent works extended it to decentralized caching placements @xcite , caching with nonuniform demands @xcite , and online caching placements @xcite , among other things .",
    "in many practical situations , the possible gain by using optimal codes instead of the suboptimal ones can still be significant , and both the outer bounds and inner bounds are believed to be loose in general .",
    "as such , identifying more precisely the fundamtal limits of caching systems are of critical importance .",
    "indeed , there are significant research activities recently @xcite in both refining the outer bounds and finding stronger codes .    despite these efforts ,",
    "the fundamental tradeoff between the cache memory capacity @xmath2 and the content delivery rate @xmath3 has not been fully characterized except for the case when @xmath4 , which was given in @xcite .",
    "this is partly due to the fact that the main focus of the initial investigations @xcite was on systems operating in the regime where the number of files @xmath0 and the number of users @xmath1 are both large , for which the coded solutions can provide the largest gain over the uncoded counterpart .",
    "however , in many applications , the number of simultaneous data requests can be small , or the collection of users or files need to divided into subgroups in order to account for various service and request inhomogeneities @xcite . more importantly , precise and conclusive results on such cases with small @xmath0 or @xmath1 usually provide insights into more general cases , as we shall show in this work .    in this work ,",
    "we investigate the fundamental limits of the caching systems .",
    "in contrast to the conventional analytical approach usually seen in the information theory literature , our investigation has a strong computer - aided flavor . using the linear programming ( lp ) outer bound of the entropy space @xcite as the starting point",
    ", we develop methods to compute outer bounds in caching systems , and more importantly , show that data obtained through computation can be used in several different manners to deduce meaningful structural understanding of the fundamental limits .    in order to utilize the computational tool , the symmetry structure in the problem",
    "must be understood and then used to reduce the problem to a manageable scale .",
    "the symmetry - reduced lp is then used to identify the boundary of the memory - transmission - rate tradeoff for several simple cases .",
    "general hypotheses on the optimal tradeoff region are formed from this data , which are then analytically proved .",
    "this leads to a complete characterization of the optimal tradeoff for systems with only two users , and certain partial characterization for systems with only two files .",
    "next , we show that by carefully analyzing the joint entropy structure of the outer bounds for certain cases , a novel code construction can be reverse - engineered , which eventually leads to a general class of codes .",
    "moreover , data can also be used to show certain tradeoff pair is not achievable using linear codes . finally , we show that strong outer bounds can be computed through strategically relaxing the lp .",
    "this allows us firstly to deduce generic characteristic of the converse proof , and secondly to compute outer bounds for larger problem cases , despite the seemingly impossible computation scale .",
    "although some of the best and the most conclusive results on the optimal memory - transmission - rate tradeoff in caching systems are presented in this work , one focus of this work is to provide several generic computer - aided methods that can be used to facilitate such investigations .",
    "we believe these methods are quite general , and can be applied to other coding and communication problems , particularly those related to data storage and data management .",
    "it is our belief that this work provides strong evidence that more machine intelligence can be effectively used in the field of information theory and communication research , particularly on the investigation of fundamental limits .",
    "indeed , our effort can be viewed as both data - driven and computational , and thus more advanced data analysis and machine learning technique may prove useful .",
    "the rest of the paper is organized as follows . in section [ sec : pre ] , existing results on the caching problem and some background information on the entropy lp framework are reviewed .",
    "the symmetry structure of the caching problem is identified and then used to show the existence of optimal symmetric solutions in section [ sec : symmetry ] . in section",
    "[ sec : hypo ] we show how the data obtained through computation can be used to form data - driven hypotheses , and then analytically prove these hypotheses . in section [ sec : reverseeng ]",
    "we show that the computed data can also be used to facilitate reverse - engineering new codes , and also to prove that certain memory - transmission - rate pair is not achievable using linear codes . in section",
    "[ sec : generalization ] , we explore the structure of the outer bounds computationally , and show that strong outer bounds can be obtained by enforcing only certain subsets of the constraints .",
    "this observation then enables us to produce strong bounds for larger problem cases , and some of these results thus obtained are presented and discussed .",
    "a few concluding remarks are given in section [ sec : conclusion ] . several technical proofs",
    "are relegated to the appendix .",
    "files and @xmath5 users . in this instance",
    "the users request files @xmath6 , respectively , and thus the multicast common information is written as @xmath7.[fig : system],width=377 ]      there are a total of @xmath0 mutually independent files of equal size and @xmath1 users in the system .",
    "as mentioned earlier , the overall system operates in two phases : the placement phase and the delivery phase . in the first phase , each user stores in his local cache some content , which has a capacity @xmath2 , without the knowledge of the requests in the second phase ; in the second phase , each user requests one file , and the same central server transmits ( multicasts ) certain common content , which has rate @xmath3 , to all the users to accommodate their requests .",
    "the system should minimize @xmath3 under the constraint @xmath2 , both of which are measured as multiples of the file size .",
    "the primary interest of this work is the optimal tradeoff between @xmath2 and @xmath3 . in the rest of the paper",
    ", we shall refer to a specific combination of the file requests of all users together as a _ demand _ , or a _ demand pattern _ , and reserve the word `` request '' as the particular file a user needs .",
    "since we are investigating the fundamental limits of the caching systems in this work , the notation for the various quantities in the systems needs to be specified .",
    "the @xmath0 files in the system are denoted as @xmath8 , the cached contents at the @xmath1 users are denoted as @xmath9 , and the transmissions to satisfy a given demand is denoted as @xmath10 , _",
    "i.e. _ , the transmitted information @xmath10 when user @xmath11 requests file @xmath12 , @xmath13 . occasionally , we shall write @xmath14 simply as @xmath15}$ ] , and similarly @xmath16 as @xmath17}$ ] , and @xmath18 as @xmath19}$ ]",
    ". there are other simplifications of the notation for certain special cases of the problem , which will be introduced as they become necessary .",
    "the cache contents are produced directly from the files , and the encoding function to produce the cached content at the @xmath11-th user is denoted as @xmath20})$ ] ; similarly the transmission contents are also produced directly from the files , and the encoding functions are denoted as @xmath21}}=g_{d_{[1:k]}}(w_{[1:n]})$ ] , which depends on the particular demands @xmath19}$ ] .",
    "since the cached contents and transmitted information are both deterministic functions of the files , we have @xmath22 it is also clear that @xmath23 _ i.e. , _ the file @xmath12 is a function of the cached content @xmath24 at user @xmath11 and the transmitted information when user @xmath11 requests @xmath12 .",
    "the memory satisfies the constraint @xmath25 and the transmission rate satisfies @xmath26 any valid caching code must satisfy the specific set of conditions in ( [ eqn : encoding])-([eqn : transmissionconstraint ] ) .",
    "the first achievability result on this problem was given in @xcite , which is directly quoted below .",
    "for @xmath0 files and @xmath1 users each with a cache of size @xmath27 , [ theorem : aliniesen ] @xmath28 is achievable . for general @xmath29 ,",
    "the lower convex envelope of these @xmath30 points is achievable .    the first term in the minimization is achieved by the scheme of uncoded placement together with coded transmission @xcite , while the latter term is by simple uncoded placement and uncoded transmission . in a recent work @xcite ,",
    "chen _ et al .",
    "_ extended a special scheme for the case @xmath31 discussed in @xcite to the general case @xmath32 , and showed that the tradeoff pair @xmath33 is achievable , which is in fact optimal .",
    "the scheme given in @xcite uses uncoded placement with coded transmission , while the scheme in @xcite uses coded placement and coded transmission .",
    "there were several additional efforts in attempting to find better codes @xcite , however , it appears that although these codes can provide improved memory - transmission - rate tradeoff in some cases , none of them gives any additional points on the optimal tradeoff .",
    "independent of these works , tian and chen @xcite proposed a class of new codes for @xmath32 , the origin of which will be discussed in more details in section [ sec : reverseeng ] ; several points achieved by this new class of codes are indeed optimal .",
    "it should also be noted that while all the previous schemes @xcite essentially use only binary codes , the codes in @xcite use a more general finite field .    a cut - set outer bound",
    "was also given in @xcite , which is again directly quoted below .    for @xmath0 files and @xmath1 users each with a cache of size @xmath29 , [",
    "theorem : aliniesenouter ] @xmath34    several efforts to improve this outer bound have also been reported @xcite . however , as mentioned earlier , even for the simplest cases beyond @xmath4 , complete characterizations are still elusive . in this work",
    "we specifically treat such small problem cases , and attempt to deduce more generic properties and outer bounds from these cases .",
    "whenever possible and meaningful , we shall compare our bounds with existing results in the literature , either analytically or numerically .",
    "the basic linear programing bound on the entropy space was introduced by yeung @xcite , which can be understood as follows .",
    "consider a total of @xmath35 discrete random variables @xmath36 with a given joint distribution .",
    "there are a total of @xmath37 joint entropies , each associated with a non - empty subset of these random variables .",
    "it is known that the entropy function is monotone and submodular , and thus any valid @xmath38 dimensional entropy vector must have such properties , which can be written as a set of inequalities .",
    "yeung showed ( see _ e.g. _ , @xcite ) that the minimal sufficient set of such inequalities is the so - call elemental inequalities @xmath39    the @xmath37 joint entropy terms can be viewed as the variables in a linear programming ( lp ) problem , and there are total of @xmath40 constraints in ( [ eqn : shannontype1])-([eqn : shannontype2 ] ) .",
    "in addition to this generic set of constraints , each specific coding problem will place additional constraints on the joint entropy values .",
    "these can be viewed as a constraint set of the given problem , although the problem might also induce constraints that are not in this form or even not possible to write in terms of joint entropies .",
    "for example , in the caching problem , the set of random variables are @xmath41 , and there are a total of @xmath42 variables in this lp , the problem specific constraints are those in ( [ eqn : encoding])-([eqn : transmissionconstraint ] ) , and there are @xmath43 elemental entropy constraints , which is in fact doubly exponential in the number of users @xmath1 .      in principle , with the afore - described constraint set , one can simply convert the outer bounding problem into an lp , and use a generic lp solver to compute it . unfortunately , despite the effectiveness of modern lp solvers , directly applying this approach on an engineering problem is usually not possible , since the scale of the lp is often very large even for simple settings .",
    "for example , for the caching problem , when @xmath44 , there are overall 200 million elemental inequalities . the key insight used in @xcite to make the problem tractable",
    "is that the lp can usually be significantly reduced , by taking into account of the symmetry and the implication relations in the problem .",
    "the details of the reductions can be found in @xcite , and here we only provide two examples in the context of the caching problem to illustrate the basic idea behind these reductions :    * assuming the optimal codes are symmetric , which will be defined more precisely later , the joint entropy @xmath45 should be equal to the joint entropy @xmath46 .",
    "this implies that in the lp , we can represent both quantities using a single variable . * because of the relation ( [ eqn : reconstruction ] ) , the joint entropy @xmath45 should be equal to the joint entropy @xmath47 .",
    "this again implies that in the lp , we can represent both quantities using a single variable .",
    "the reduced primal lp problem is usually significantly smaller , which allows us to find a lower bound for the tradeoff region for a specific instance with fixed file sizes .",
    "moreover , after identifying the region of interest using these computed boundary points , a human - readable proof can also be produced computationally by invoking the dual of the lp given above .",
    "more details can again be found in @xcite , however , this procedure can be intuitively viewed as follows .",
    "suppose a valid outer bound in the constraint set has the form of @xmath48 then it must be a linear combination of the known inequalities , _",
    "i.e. _ , ( [ eqn : shannontype1])-([eqn : shannontype2 ] ) , and the problem specific constraints , _",
    "e.g. _ , ( [ eqn : encoding])-([eqn : transmissionconstraint ] ) for the caching problem . to find a human readable proof is essentially to find a valid linear combination of these inequalities , and for the conciseness of the proof , the sparsest linear combination is preferred . by utilizing the lp dual with an additional linear objective",
    ", we can find within all valid combinations a sparse ( but not necessarily the sparsest ) one , which can yield a concise proof of the inequality ( [ eqn : conjectureineq ] ) .",
    "the proof found through this approach can be conveniently written as a table , or more precisely , a matrix to list all the linear combination coefficients , and one can easily produce a chain of inequalities using such a table to obtain a more conventional human - readable proof .",
    "this approach of generating human - readable proofs has subsequently been adopted by other researchers @xcite .",
    "though we shall present several results thus obtained in this current work in the tabulation form , our main goal here is not to provide the most comprehensive bounds , but to use these results to present further developments of the computer - aided approach beyond simply proving bounds for small problem cases , and show the effectiveness of our approach .",
    "the computer - aided approach to derive outer bounds mentioned earlier relies critically on the reduction of the basic entropy lp using symmetry and other problem structure . in this section ,",
    "we consider the symmetry in the caching problem . before presenting the symmetry structure formally ,",
    "let us consider it in a more intuitive manner .",
    "suppose a code for placement and transmission is given .",
    "if we place the cached contents in a permuted manner at the users , it will lead to a new code that is equivalent to the original one .",
    "similarly , if we reorder the files and apply the same encoding function , the transmissions can also be changed accordingly to accommodate the requests , which is again an equivalent code .",
    "the two types of symmetries can be combined , and they induce a permutation group on the joint entropies of the subsets of the random variables @xmath49 .    for concreteness , we sometimes specialize to the case @xmath50 in the discussion below , and for this case @xmath51      let a permutation function be defined as @xmath52 on the user index set of @xmath53 , which reflects the permuted placement of cached contents @xmath54 , _",
    "i.e. _ , @xmath55 . let the inverse of @xmath52 be denoted as @xmath56 , then @xmath52 also induces a permutation on @xmath57 as @xmath58    for example , the permutation function @xmath59 maps @xmath60 to @xmath61 , but maps @xmath62 to @xmath63 , @xmath64 to @xmath65 , and @xmath66 to @xmath67 .",
    "we define the mapping on a collection of such random variables as the collection of the elements after mapping each element individually .",
    "we call a caching code user - index - symmetric , if for any subsets @xmath68 , and any permutation @xmath69 , the following relation holds @xmath70 for example , for such a symmetric code , the entropy @xmath71 under the aforementioned permutation is equal to @xmath72 ; note that @xmath73 is a function of @xmath74 , and after the mapping it is a function of @xmath75 .    from a coding perspective , we can define the permutation through a set of new encoding functions . given the original encoding functions @xmath76 and @xmath77}}$ ] which will induce a probability distribution among @xmath49 and consequently @xmath42 joint entropy values , the new functions @xmath78 and @xmath79}}$ ] corresponding to a permutation @xmath69 are : @xmath80})&=f_{\\bar{\\pi}(k)}(w_{[1:n]}),\\nonumber\\\\ g^{\\bar{\\pi}}_{d_{[1:k]}}(w_{[1:n]})&=g_{d_{\\bar{\\pi}^{-1}([1:k])}}(w_{[1:n]}).\\end{aligned}\\ ] ]      let a permutation function be defined as @xmath81 on the file index set of @xmath82 , which reflects the renaming of the files @xmath83 , _",
    "i.e. _ , @xmath84 .",
    "it induces a permutation on @xmath57 @xmath85 for example , the permutation function @xmath86 maps @xmath73 to @xmath87 , but maps @xmath62 to @xmath88 , @xmath64 to @xmath89 , and @xmath66 to @xmath90 .",
    "we call a caching code file - index - symmetric , if for any subsets @xmath68 , and any permutation @xmath91 , the following relation holds @xmath92 for example , for such a symmetric code , @xmath93 under the aforementioned permutation is equal to @xmath94 ; note that @xmath95 is a function of @xmath96 , and after the mapping @xmath97 is a function of @xmath98 .    from a coding perspective",
    ", we can again define the permutation through a set of new encoding functions .",
    "given original encoding functions @xmath76 and @xmath77}}$ ] , the new functions @xmath99 and @xmath100}}$ ] associated with @xmath101 are : @xmath102})&=f_k(w_{\\hat{\\pi}([1:n])}),\\nonumber\\\\ g^{\\hat{\\pi}}_{d_{[1:k]}}(w_{[1:n]})&=g_{\\hat{\\pi}(d_{[1:k]})}(w_{\\hat{\\pi}([1:n])}).\\end{aligned}\\ ] ]      with the symmetry structure elucidated above , we can now state our first auxiliary result .    for any caching code",
    ", there is a code with the same or smaller caching memory and transmission rate , which is both user - index - symmetric and file - index - symmetric .",
    "[ prop : symmetry ]    we call a code that is both user - index - symmetric and file - index - symmetric a _ symmetric code_. this proposition implies that there is no loss of generality to consider only symmetric codes .",
    "the proof of this proposition relies on a simple space - sharing argument where each file is partitioned into a total of @xmath103 segments , and the @xmath104-th set of permuted ( both in user - indexing and file - indexing ) encoding functions are used on the @xmath104-th segements of all the files to produce random variables @xmath105 , @xmath106 .",
    "it is not difficult to see that for any joint entropy @xmath107 , where @xmath108 , @xmath109 and @xmath109 , the @xmath104-th permutation through composition @xmath110 will produce a joint entropy @xmath111 of the same value .",
    "it is now clear that the resultant code by space sharing is indeed symmetric , and it has ( normalized ) memory sizes and transmission rate no worse than the original one . in a separate work ,",
    "we investigate the properties of the induced permutation @xmath110 in more details , and particularly , showed that the composition is commutative ; readers are referred to @xcite for more details .      even for symmetric codes , the transmissions to satisfy different types of demands may use different rates .",
    "for example in the setting @xmath112 , @xmath113 may not be equal to @xmath114 , and @xmath115 may not be equal to @xmath116 .",
    "the transmission rate @xmath3 is then chosen to be the maximum among all cases . this motivates the notion of demand types .    in an @xmath117 caching system , for a specific demand",
    ", let the number of users requesting file @xmath35 be denoted as @xmath118 , @xmath119 .",
    "we call the vector obtained by sorting the values @xmath120 in a decreasing order as the demand type , denoted as @xmath121 .    proposition [ prop : symmetry ] implies that for optimal symmetric solutions , demands of the same type can always be satisfied with transmissions of the same rate , however , demands of different types may still require different rates .",
    "this observation is also important in setting up the linear program in the computer - aided approach outlined in the previous section . because we are interested in the worst case transmission rate among all types of demands , in the symmetry - reduced lp , an additional variable needs to be introduced to constrain the transmission rates of all possible types .    for an @xmath117 system ,",
    "determining the number of demand types is closely related to the integer partition problem , which is the number of possible ways to write an integer @xmath1 as the sum of positive integers .",
    "there is no explicit formula , but one can use a generator polynomial to compute it @xcite . for several small @xmath117 pairs , we list the demand types in table [ tab : types ] .    @xmath122    it can be seen that when @xmath32 , increasing @xmath0 induces more demand types , but this stops when @xmath123 ; however , increasing @xmath1 always induces more demand types .",
    "this suggests it might be easier to find solutions for a collection of cases with a fixed @xmath1 and arbitrary @xmath0 values , but more difficult for that of a fixed @xmath0 and arbitrary @xmath1 values .",
    "this intuition is partially confirmed with our results presented next .",
    "extending the computational approach developed in @xcite and the problem symmetry , in this section we first establish complete characterizations for the optimal memory - transmission - rate tradeoff for @xmath124 and @xmath125 .",
    "based on these results and the known result for @xmath4 , we are able to form a hypothesis regarding the optimal tradeoff for the case of @xmath126 .",
    "an analytical proof is then provided , which gives the complete characterization of the optimal tradeoff for the case of @xmath127 caching systems .",
    "we then present a characterization of the optimal tradeoff for @xmath128 and an outer bound for @xmath129 .",
    "these results also motivate a hypothesis on the optimal tradeoff for @xmath130 , which is subsequently proved analytically to yield a partial characterization .",
    "note that since both @xmath2 and @xmath3 must be nonnegative , we do not explicitly state their non - negativity from here on .",
    "our investigation starts with identifying the optimal tradeoff for @xmath124 and @xmath125 using the computation approach outline in section [ sec : pre ] , which are first summarized below as two propositions .",
    "[ prop : nk32 ] any memory - transmission - rate tradeoff pair for the @xmath124 caching problem must satisfy @xmath131 conversely , there exist codes for any nonnegative @xmath30 pair satisfying ( [ eqn : bounds3_2 ] ) .    [ prop : nk42 ] any memory - transmission - rate tradeoff pair for the @xmath125 caching problem must satisfy @xmath132 conversely , there exist codes for any nonnegative @xmath30 pair satisfying ( [ eqn : bounds4_2 ] ) .    the optimal tradeoff for @xmath4",
    "was found in @xcite , which we restated below .",
    "any memory - transmission - rate tradeoff pair for the @xmath4 caching problem must satisfy @xmath133 conversely , there exist codes for any nonnegative @xmath30 pair satisfying ( [ eqn : bounds2_2 ] ) .    , @xmath124 and @xmath125 caching systems .",
    "[ fig : cachingn_2 ] the red solid lines give the optimal tradeoffs , while the blue dashed - dot lines are the cut - set outer bounds , included here for reference .",
    ", width=642 ]    the proofs for proposition [ prop : nk32 ] and proposition [ prop : nk42 ] can be found in the appendix , which are given in the tabulation format mentioned earlier .",
    "strictly speaking , these two results are specialization of theorem [ theorem : nk_n_2 ] , and there is no need to provide the proofs separately , however we provide them to illustrate our computer - aided approach more explicitly .    the optimal tradeoff for the three cases are depicted in fig .",
    "[ fig : cachingn_2 ] .",
    "a few immediate observations are as follows    * for @xmath124 and @xmath125 , there is only one non - trivial corner point on the optimal tradeoff , but for @xmath4 there are in fact two non - trivial conner points . *",
    "the cut - set bound is tight at the high memory regime in all the cases . *",
    "the single non - trivial corner point is achieved by the uncoded - placement - coded - transmission scheme proposed in @xcite . for the @xmath4 case ,",
    "one of the corner point is achieved also by this scheme , but the other corner point requires a different coded - placement - uncoded - transmission coding strategy . * for both @xmath124 and @xmath125 ,",
    "the non - trivial corner point has transmission rate @xmath134 , and the corresponding memory value as specified in theorem [ theorem : aliniesen ] which is @xmath135 .",
    "given the above observations , a natural hypothesis regarding the optimal tradeoff for @xmath126 is as follows .",
    "there is only one non - trivial corner point on the optimal tradeoff for @xmath136 caching systems when @xmath137 , and it is @xmath138 , or equivalently the two facets of the optimal tradeoff should be @xmath139    we are indeed able to analytically confirm this hypothesis , as stated formally in the following theorem .    [",
    "theorem : nk_n_2 ] for any integer @xmath140 , any memory - transmission - rate tradeoff pair for the @xmath136 caching problem must satisfy @xmath141 conversely , for any integer @xmath140 , there exist codes for any nonnegative @xmath30 pair satisfying ( [ eqn : boundsn_2 ] ) . for @xmath4 ,",
    "the memory - transmission - rate tradeoff must satisfy @xmath142 conversely , for @xmath4 , there exist codes for any nonnegative @xmath30 pair satisfying ( [ eqn : bounds2_2b ] ) .",
    "since the solution for the special case @xmath4 was established in @xcite , we only need to consider the cases for @xmath137 .",
    "moreover , for the converse direction , only the bound @xmath143 needs to be proved , since the other one can be obtained using the cut - set bound in @xcite . to prove the remaining inequality ,",
    "the following auxiliary lemma is needed .",
    "[ lemma : peeling ] for any symmetric @xmath127 caching code where @xmath137 , and any integer @xmath144 , we have @xmath145},x_{n , n+1})\\nonumber\\\\ & \\quad\\geq ( n - n-2)h(z_1,w_{[1:n]})+(n+n).\\label{eqn : lemma}\\end{aligned}\\ ] ]    using lemma [ lemma : peeling ] , we can prove the converse part of theorem [ theorem : nk_n_2 ] through an induction ; the proofs of theorem [ theorem : nk_n_2 ] and lemma [ lemma : peeling ] can be found in the appendix , both of which heavily rely on the symmetry specified in the previous section .",
    "we note that although some clues can be found in the proof tables for the cases @xmath124 and @xmath125 , such as the effective joint entropy terms in the converse proof , finding the proof of theorem [ theorem : nk_n_2 ] still requires considerable human effort , and we were not able to complete this step directly through a computer program . one key observation simplifying",
    "the proof is that as the hypothesis states , the optimal corner point is achieved by the scheme given in @xcite . in this specific case",
    ", the scheme reduces to splitting each file into half , and placing one half at the first user , and the other half at the second user ; the corresponding delivery strategy is also extremely simple .",
    "we essentially combined this special structure and the clues from the proof tables to find the outer bounding steps .",
    "one isit reviewer pointed out to us that the result in @xcite can be used to establish the bound @xmath143 , however only for the cases when @xmath0 is an integer multiple of 3 . for @xmath146 ,",
    "the bounds developed in @xcite give @xmath147 , instead of @xmath148 , and thus they are loose in this case .",
    "we first summarize the characterizations of the optimal tradeoff for @xmath128 , and the computed outer bound for @xmath129 , in two propositions .",
    "[ prop : nk23 ] the memory - transmission - rate tradeoff for the @xmath128 caching problem must satisfy : @xmath149 conversely , there exist codes for any nonnegative @xmath30 pair satisfying ( [ eqn : bounds2_3 ] ) .",
    "[ prop : nk24 ] the memory - transmission - rate tradeoff for the @xmath129 caching problem must satisfy : @xmath150    , @xmath128 and computed outer bound @xmath129 caching systems .",
    "[ fig : caching2_n ] the red solid lines give the optimal tradeoffs for the first two case , and the red dotted line gives the computed outer bound @xmath129 ; the blue dashed - dot lines are the cut - set outer bounds , and the black dashed line is the inner bound using the scheme in @xcite and @xcite.,width=642 ]    for proposition [ prop : nk23 ] , the only new bound @xmath151 is a special case of the more general result of theorem [ theorem:2k ] and we thus do not provide this proof separately . for proposition [ prop : nk24 ] , only the second and the third inequalities need to be proved , since the fourth coincides with a bound in the @xmath152 case , the fifth is a special case of theorem [ theorem:2k ] , and the others can be produced from the cut - set bounds .",
    "the proofs for these two inequalities are omitted here , but the proof data file is included as a supplement to the paper , and is also made online at @xcite . the optimal tradeoff for @xmath153 and the outer bound for @xmath154",
    "are depicted in fig .",
    "[ fig : caching2_n ] . a few immediate observations and comments",
    "are as follows :    * there are two non - trivial corner points on the outer bounds for @xmath4 and @xmath128 , and there are five non - trivial corner points for @xmath129 .",
    "* the outer bounds coincide with known inner bounds for @xmath4 and @xmath128 , but not @xmath129 .",
    "the corner points at the high memory value @xmath155 ( and the corner point @xmath156 for @xmath129 ) are achieved by the scheme given in @xcite , while the corner points at the low memory value @xmath157 are achieved by the scheme given in @xcite . for @xmath129 ,",
    "two corner points at the intermediate memory regime can not be achieved by either the scheme in @xcite or that in @xcite .",
    "this suggests that at the intermediate memory regime , known schemes are not sufficient , and new codes are needed . indeed in the next section we discuss a new code to achieve one of the corner points that were previously not known to be achievable .",
    "* the cut - set outer bounds @xcite are tight at the highest and lowest memory segments ; a new bound for the second highest memory segment produced by the computer based method is also tight .",
    "the bounds developed in @xcite give @xmath158 for @xmath128 and @xmath129 , instead of @xmath151 , and thus they are loose in this case .",
    "from the above observations , we can hypothesize that for @xmath130 , the number of corner points will continue to increase as @xmath1 increases above @xmath159 , and at the high memory regime , the scheme @xcite is optimal .",
    "more precisely , the following hypothesis appear to be a natural first step .",
    "[ hypo:2k ] the first two non - trivial @xmath30 corner points of the optimal tradeoff for @xmath160 at the high memory regime when @xmath161 are @xmath162 conversely , when @xmath161 and @xmath130 , any @xmath30 pair must satisfy @xmath163    this following theorem confirms that the hypothesis is indeed true .",
    "[ theorem:2k ] when @xmath164 and @xmath130 , any @xmath30 pair must satisfy @xmath165 as a consequence , the uncoded - placement - coded - transmission scheme in @xcite ( with space - sharing ) is optimal when @xmath166 , for the cases with @xmath161 and @xmath130 .",
    "the first line segment at the high memory regime is @xmath167 , which is given by the cut - set bound ; its intersection with ( [ eqn:2k ] ) is indeed @xmath168",
    "the proof of this theorem now boils down to the proof of the bound ( [ eqn:2k ] ) .",
    "this requires a sophisticated induction , the digest of which is summarized in the following lemma .",
    "the symmetry of the problem is again heavily utilized throughout of the proof of this lemma . for notational simplicity",
    ", we use @xmath169 to denote @xmath170 , _",
    "i.e. _ , when the @xmath171-t user requests the second file , and all the other users request the first file ; we also write a collection of such variables @xmath172 as @xmath173}$ ] .",
    "[ lemma:2k ] for @xmath130 and @xmath164 , the following inequality holds for @xmath174 @xmath175})\\nonumber\\\\ & \\quad\\geq [ { ( k - k)(k - k+1)}-2]h(z_1,w_1,x_{\\rightarrow [ 2:k-1]})+2h(w_1,x_{\\rightarrow [ 2:k-1]})+2(k - k+1)h(w_1,w_2),\\label{eqn : lemma2k}\\end{aligned}\\ ] ] where we have taken the convention @xmath176})=h(z_1,w_1)$ ]    the proof of lemma [ lemma:2k ] can be found in the appendix .",
    "theorem [ theorem:2k ] can now be proved straightforwardly .",
    "we first write the following simple inequalities @xmath177 now applying lemma [ lemma:2k ] with @xmath178 gives @xmath179\\nonumber\\\\ & \\quad\\geq [ k^2 - 3k]h(z_1,w_1)+2h(w_1)+2(k-1)h(w_1,w_2).\\end{aligned}\\ ] ] observe that @xmath180 where in the first inequality the file index symmetry @xmath181 has been used .",
    "we can now continue to write @xmath179\\nonumber\\\\ & \\quad\\geq \\frac{k^2 - 3k}{2}[h(w_1,w_2)+h(z_1)]+2h(w_1)+2(k-1)h(w_1,w_2),\\end{aligned}\\ ] ] which has some a common term @xmath182 on both sizes with different coefficients . removing the common term and multiplying both sides by two lead to @xmath183h(w_1,w_2)+4h(w_1)\\nonumber\\\\ & = 2k^2 + 2k-4,\\end{aligned}\\ ] ] where the equality relies on the assumption that @xmath97 and @xmath73 are independent files of unit size . taking into consideration the memory and transmission rate constraints ( [ eqn : memoryconstraint ] ) and ( [ eqn : transmissionconstraint ] ) now completes the proof .",
    "lemma [ lemma:2k ] provides a way to reduce the number of @xmath184 variables in @xmath185})$ ] , and thus is the core of the proof .",
    "readers may observe that lemma [ lemma:2k ] is only used for the case @xmath178 in the proof of the theorem , however , the lemma is stated in a more general manner .",
    "we chose to present the lemma this way because the proof for the case @xmath178 in fact requires the inequalities for other cases , and we suspect this lemma ( or a lemma in a similar form ) can also be useful in proving outer bounds for other segments of the optimal tradeoff .",
    "even with the hypothesis regarding the scheme in @xcite being optimal , deriving the outer bound ( particularly the coefficients in the lemma above ) directly using this insight is far from being straightforward .",
    "some of the guidance in finding our derivation was in fact obtained through a strategic computational exploration of the outer bounds .",
    "this information is helpful because the computer - generated proofs are not unique , and some of these solutions can appear quite arbitrary , however , to deduce general rules in the proof requires a more structured proof instead . in section [ sec : generalization ] , we present in more details this new exploration method , and shall revisit this issue regarding the `` helpful '' information in this particular case as an illustrative example .",
    "we remark here that although we focused on the memory range @xmath166 for @xmath130 , the computed data collected so far suggests that the uncoded - placement - code - transmission scheme given in @xcite may be optimal for more general parameters , particularly at the high memory regime ; in a subsequent work , we explore this direction further , and will present characterizations for more general classes of problem cases in a forthcoming paper .",
    "in the previous section , outer bounds of the optimal tradeoff were presented for the case @xmath129 , which is given in fig . [",
    "fig : caching2_n ] . observe that the corner points @xmath186 can not be achieved by existing codes in the literature .",
    "the former point can indeed be achieved with a new code construction .",
    "this construction was first presented in @xcite , where it was generalized more systematically to yield a new class of codes for any @xmath32 , whose proof and analysis are more involved . in this paper",
    ", we focus on how a specific code for this corner point can be found through a reverse engineering approach , which should help dispel the mystery on this seemingly arbitrary code construction .",
    "this section is organized as follows : first the new code is presented , then the method to extract the related information in the lp is discussed , the data which leads to this code construction is then given and analyzed , and finally we present an example where this reverse engineering approach can be used to show linear codes can not be constructed for a given memory - transmission - rate tradeoff pair .      [ cols=\"^,^,^,^,^\",options=\"header \" , ]     again for the case when the first two users request @xmath188 , and the other two request @xmath189 , the server can send @xmath190",
    "the author wishes to thank dr .",
    "urs niesen and dr .",
    "vaneet aggarwal for early discussions which partly motivated this work .",
    "he also wishes to thank dr .",
    "jun chen for several discussions as well as the insightful comments on segments of a draft . additionally the author wishes to thank the authors of @xcite for making the source code to compute several outer bounds available online , which was conveniently used for several comparisons in this work .",
    "a.  sengupta , r.  tandon , and t.  c. clancy , `` improved approximation of storage - rate tradeoff for caching via new outer bounds , '' in _ proc .",
    "of 2015 ieee international symposium on information theory ( isit ) _ , hong kong , china , jun . 2015 .",
    "l.  song , s.  shuo , and j.  chen , `` a lower bound on the sum rate of multiple description coding with symmetric distortion constraints , '' _ ieee trans . on information theory _ ,",
    "60 , no .  12 , pp .",
    "75477567 , dec . 2014 .                  c.  lassez and j .- l .",
    "lassez , `` quantifier elimination for conjunctions of linear constraints via a convex hull algorithm , '' in _ symbolic and numerical computation for artificial intelligence _ , b.  r. donald , d.  kapur , and j.  l. mundy , eds.1em plus 0.5em minus 0.4emsan diego , ca : academic press , 1992 , ch .  4 , pp . 1031199 .",
    "j.  apte and j.  m. walsh , `` exploiting symmetry in computing polyhedral bounds on network coding rate regions , '' in _ proc . of international symposium on network coding ( netcod ) 2015",
    "_ , sydney , australia , jun .",
    "2015 , pp . 7680 ."
  ],
  "abstract_text": [
    "<S> we considered the optimal memory - transmission - rate tradeoff of caching systems . </S>",
    "<S> different from the conventional analytical approach usually seen in the information theory literature , we rely on a computer - aided approach in this investigation . the linear programming ( lp ) outer bound of the entropy space serves as the starting point of this approach , </S>",
    "<S> however our effort goes significantly beyond using it to prove information inequalities . </S>",
    "<S> we first identify and formalize the symmetry structure in the problem , which enables us to show the existence of optimal symmetric solutions . </S>",
    "<S> a symmetry - reduced linear program is then used to identify the boundary of the memory - transmission - rate tradeoff for several simple cases , for which we obtain a set of tight outer bounds . </S>",
    "<S> general hypotheses on the optimal tradeoff region are formed from these computed data , which are then analytically proved . </S>",
    "<S> this leads to a complete characterization of the optimal tradeoff for systems with only two users , and certain partial characterization for systems with only two files . </S>",
    "<S> next , we show that by carefully analyzing the joint entropy structure of the outer bounds for certain cases , a novel code construction can be reverse - engineered , which eventually leads to a general class of codes . </S>",
    "<S> finally , we show that strong outer bounds can be computed through strategically relaxing the lp . </S>",
    "<S> this allows us firstly to deduce generic characteristic of the converse proof , and secondly to compute outer bounds for larger problem cases , despite the seemingly impossible computation scale .    </S>",
    "<S> computer - aided analysis , information theory . </S>"
  ]
}
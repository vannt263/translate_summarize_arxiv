{
  "article_text": [
    "the study of recursive program schemes is one of the classic topics in programming language semantics .",
    "( see , e.g. ,  @xcite for some of the early references . )",
    "one of the main goals of this line of research is to define the semantics of systems of recursive equations such as @xmath0 in the above recursion scheme , the symbols ifzero , add , pred , @xmath1 and @xmath2 denote given function symbols ; these are used to define the derived unary function @xmath3 , which we will refer to as a functor variable . interpreting ifzero as the function over the set of triples of @xmath4 that returns its second argument when the first is zero and the third otherwise , mult as multiplication and pred as the predecessor function , intuitively one would expect the above recursion scheme to describe the function over the natural numbers that , given an input @xmath5 , returns @xmath6 .",
    "this expectation has been formalized in several ways in the literature on recursive program schemes .",
    "a classic answer can be summarized by the ` motto ' of the initial - algebra - semantics approach : ` the semantics of a recursive program scheme is the infinite term tree ( or ranked tree ) that is the least fixed point of the system of equations associated with the program scheme . '    in the light of the role that infinite term trees play in defining the semantics of recursive program schemes , it is not surprising that the study of infinite term trees has received a lot of attention in the research literature . here",
    "we limit ourselves to mentioning courcelle s classic survey paper  @xcite , which presents results on topological and order - theoretic properties of infinite trees , notions of substitutions for trees as well as regular and algebraic term trees .",
    "_ algebraic term trees _ are those that arise as solutions of recursive program schemes that , like ( [ algschema ] ) , are ` first order ' .",
    "on the other hand , _ regular term trees _ are the solutions of systems of equations like @xmath7 which define parameterless functions @xmath8 and @xmath9 .",
    "regular term trees arise naturally as the unfoldings of flowcharts , whereas algebraic term trees stem from the unfoldings of recursion schemes that correspond to functional programs  @xcite .    in this paper",
    ", we study recursion schemes from a process - algebraic perspective and investigate the expressive power of algebraic recursion schemes over the signatures of basic ccs  @xcite and of basic process algebra ( bpa )  @xcite as a way of defining possibly infinite synchronization trees  @xcite .",
    "both these signatures allow one to describe every finite synchronization tree and include a binary choice operator + .",
    "the difference between them is that the signature for basic ccs , which is denoted by @xmath10 in this paper , contains a unary action prefixing operation @xmath11 for each action @xmath12 , whereas the signature for bpa , which we denote by @xmath13 , has one constant @xmath12 for each action that may label the edge of a synchronization tree and offers a full - blown sequential composition , or sequential product , operator .",
    "intuitively , the sequential product @xmath14 of two synchronization trees is obtained by appending a copy of @xmath15 to the leaves of @xmath16 that describe successful termination of a computation . in order to distinguish successful and unsuccessful termination , both the signatures @xmath10 and @xmath13 contain constants @xmath17 and @xmath1 , which denote unsuccessful and successful termination , respectively .    as an example of a regular recursion scheme over the signature @xmath13 , consider @xmath18 on the other hand , the following recursion scheme is @xmath10-algebraic , but not @xmath10-regular : @xmath19 it turns out that both these recursion schemes define the infinitely branching synchronization tree depicted on figure  [ fig : anyfinitedepth ] .    in the setting of process algebras such as ccs  @xcite and acp  @xcite ,",
    "synchronization trees are a classic model of process behaviour .",
    "they arise as unfoldings of labelled transition systems that describe the operational semantics of process terms and have been used to give denotational semantics to process description languages  see , for instance ,  @xcite .",
    "regular synchronization trees over the signature @xmath10 are unfoldings of processes that can be described in the regular fragment of ccs , which is obtained by adding to the signature @xmath10 a facility for the recursive definition of processes .",
    "on the other hand , regular synchronization trees over the signature @xmath13 are unfoldings of processes that can be described in basic process algebra ( bpa )  @xcite augmented with constants for the deadlocked and the empty process as well as recursive definitions .",
    "as is well known , the collection of regular synchronization trees over the signature @xmath13 strictly includes that of regular synchronization trees over the signature @xmath10 even up to language equivalence .",
    "therefore , the notion of regularity depends on the signature .",
    "but what is the expressive power of algebraic recursion schemes over the signatures @xmath10 and @xmath13 ?",
    "the aim of this paper is to begin the analysis of the expressive power of those recursion schemes as a means for defining synchronization trees , and their bisimulation or language equivalence classes .    in order to characterize the expressive power of algebraic recursion schemes defining synchronization trees , we interpret such schemes in continuous categorical @xmath10- and @xmath13-algebras of synchronization trees .",
    "continuous categorical @xmath20-algebras are a categorical generalization of the classic notion of continuous @xmath20-algebra that underlies the work on algebraic semantics  @xcite , and have been used in @xcite to give semantics to recursion schemes over synchronization trees and words .",
    "( we refer the interested reader to  @xcite for a recent discussion of category - theoretic approaches to the solution of recursion schemes . ) in this setting , the @xmath10-regular ( respectively , @xmath10-algebraic ) synchronization trees are those that are initial solutions of regular ( respectively , algebraic ) recursion schemes over the signature @xmath10 .",
    "@xmath13-regular and @xmath13-algebraic synchronization trees are defined in similar fashion .",
    "our first contribution in the paper is therefore to provide a categorical semantics for first - order recursion schemes that define processes , whose behaviour is represented by synchronization trees .",
    "the use of continuous categorical @xmath20-algebras allows us to deal with arbitrary first - order recursion schemes ; there is no need to restrict oneself to , say , ` guarded ' recursion schemes , as one is forced to do when using a metric semantics ( see , for instance ,  @xcite for a tutorial introduction to metric semantics ) , and this categorical approach to giving semantics to first - order recursion schemes can be applied even when the order - theoretic framework either fails because of the lack of a ` natural ' order or leads to undesirable identities .    as a second contribution",
    ", we provide a comparison of the expressive power of regular and algebraic recursion schemes over the signatures @xmath10 and @xmath13 , as a formalism for defining processes described by their associated synchronization trees .",
    "we show that each @xmath13-regular tree is @xmath10-algebraic ( theorem  [ thm : delta2gamma ] ) by providing an algorithm for transforming a @xmath13-regular recursion scheme into an equivalent @xmath10-algebraic one that involves only unary functor variables .",
    "in addition , we prove that every synchronization tree that is defined by a @xmath10-algebraic recursion scheme of a certain form that involves only unary functor variables can be transformed into an equivalent @xmath13-regular recursion scheme .",
    "we provide examples of @xmath10-algebraic synchronization trees that are not @xmath13-regular and of @xmath13-algebraic trees that are not @xmath10-algebraic , not even up to bisimulation equivalence .",
    "in particular , in proposition  [ prop : bagnotalg ] we prove that the synchronization tree associated with the bag over a binary alphabet ( which is depicted on figure  [ fig : bag ] on page  ) is not @xmath10-algebraic , even up to language equivalence , and that it is not @xmath13-algebraic up to bisimilarity .",
    "these results are a strengthening of a classic theorem from the literature on process algebra proved by bergstra and klop in  @xcite .",
    "since each @xmath10-algebraic synchronization tree is also @xmath13-algebraic , we obtain the following strict expressiveness hierarchy , which holds up bisimilarity  @xcite :    @xmath10-regular @xmath21 @xmath13-regular @xmath21 @xmath10-algebraic @xmath21 @xmath13-algebraic .    in the setting of language equivalence ,",
    "the notion of @xmath10-regularity corresponds to the regular languages , the one of @xmath13-regularity or @xmath10-algebraicity corresponds to the context - free languages , and @xmath13-algebraicity corresponds to the macro languages  @xcite , which coincide with the languages generated by aho s indexed grammars  @xcite .",
    "( 0,-0.2 ) ellipse ( 1.65 * 0.90 and 1.8 ) ; ( 0,1.3 ) ellipse ( 3 * 0.90 and 3.3 ) ; ( 0,2.3 ) ellipse ( 3.5 * 0.90 and 4.3 ) ; at ( 0,3.2 ) @xmath10-alg .",
    "@xmath22 @xmath23 @xmath24 @xmath13-reg .",
    ";    at ( 0,5.8)[text width=1.4 cm , text centered ] @xmath25 @xmath26 @xmath13-alg .",
    "; at ( 0,0 ) @xmath27 @xmath28 @xmath29 @xmath30 @xmath28 @xmath31 @xmath28 @xmath10-reg . ; at ( 0,-2.5 ) ( a ) ;    @xmath32    ( 0,-0.2 ) ellipse ( 1.65 * 0.90 and 1.8 ) ; ( 0,2 ) ellipse ( 3.25 * 0.90 and 4 ) ; ( 0,1.3 ) ellipse ( 3 * 0.90 and 3.3 ) ; ( 0,2.3 ) ellipse ( 3.5 * 0.90 and 4.3 ) ; ( 0,0.3 ) ellipse ( 2.15 * 0.90 and 2.3 ) ; at ( 0,2.1 ) @xmath13-reg . ; at ( 0,3.7 ) @xmath10-alg .",
    "@xmath22 @xmath23 ; at ( 0,5.3 ) @xmath13-alg . ; at ( 0,6.3 ) @xmath33 ; at ( 0,0 ) @xmath27 @xmath28 @xmath29 @xmath30 @xmath28 @xmath31 @xmath28 @xmath10-reg . ; at ( 0,-2.5 ) ( b ) ;    @xmath32    ( 0,-0.2 ) ellipse ( 1.65 * 0.90 and 1.8 ) ; ( 0,2 ) ellipse ( 3.25 * 0.90 and 4 ) ; ( 0,1.3 ) ellipse ( 3 * 0.90 and 3.3 ) ; ( 0,2.3 ) ellipse ( 3.5 * 0.90 and 4.3 ) ; ( 0,0.8)[rotate=30 ] ellipse ( 2.15 * 0.94 and 2.8 ) ; ( 0,0.8)[rotate=-30 ] ellipse ( 2.15 * 0.94 and 2.8 ) ;    at ( -1.7,2.5 ) @xmath34 ; at ( 1.7,2.5 ) @xmath13-reg . ; at ( 0,4 ) @xmath10-alg . ; at ( 0,5.3 ) @xmath13-alg . ;",
    "at ( 0,6.3 ) @xmath33 ; at ( 0,0 ) @xmath30 @xmath28 @xmath31 @xmath28 @xmath10-reg . ; at ( 0,-2.5 ) ( c ) ;    in order to obtain a deeper understanding of @xmath10-algebraic recursion schemes , we characterize their expressive power by following the lead of courcelle  @xcite . in those references",
    ", courcelle proved that a term tree is algebraic if , and only if , its branch language is a deterministic context - free language . in our setting , we associate with each synchronization tree with bounded branching a family of branch languages and we show that a synchronization tree with bounded branching is @xmath10-algebraic if , and only if , the family of branch languages associated with it contains a deterministic context - free language ( theorem  [ thm - dcfl ] ) . in conjunction with standard tools from formal language theory ,",
    "this result can be used to show that certain synchronization trees are not @xmath10-algebraic .    as a final main contribution of the paper",
    ", we compare the expressiveness of those recursion schemes to that of the low levels in caucal s hierarchy .",
    "this hierarchy is already known to include the term trees defined by safe higher - order recursion schemes when interpreted over the free continuous algebra @xcite .",
    "unsurprisingly , we show that the classes of @xmath10-algebraic and @xmath13-algebraic synchronization trees belong to the third level of the caucal hierarchy .",
    "we provide a more detailed comparison , which is summarized in figure  [ fig : hierarchy ] .    as a benefit of the comparison with the caucal hierarchy ,",
    "we obtain structural properties and decidability of the monadic second - order theories of @xmath13-algebraic synchronization trees  @xcite . by contraposition",
    ", this implies that a synchronization tree with an undecidable monadic second - order theory can not be @xmath13-algebraic .",
    "this allows us to show that @xmath10-algebraic ( and hence @xmath13-algebraic trees ) are not closed under minimization with respect to bisimulation equivalence ( proposition  [ prop : quotientnotcaucal ] ) .",
    "the technical developments in this paper make use of techniques and results from a variety of areas of theoretical computer science .",
    "we employ elementary tools from category theory and initial - algebra semantics to define the meaning of recursion schemes over algebras of synchronization trees .",
    "tools from concurrency and formal - language theory are used to obtain separation results between the different classes of synchronization trees we consider in this paper .",
    "the proof of theorem  [ thm - dcfl ] , characterizing the expressive power of @xmath10-algebraic recursion schemes in the style of courcelle , uses a mezei - wright theorem for categorical algebras  @xcite as well as tools from monadic second - order logic  @xcite .",
    "overall , we find it pleasing that methods and results developed by different communities within theoretical computer science play a role in the study of natural structures like the synchronization trees that arise from the solution of algebraic recursion schemes .",
    "the paper is organized as follows . in section  [",
    "sect : definitions ] , we introduce ( first - order ) recursion schemes and the synchronization trees they define using continuous categorical algebras . in section  [ sect : comparison ] , we compare the classes of @xmath10-regular , @xmath13-regular , @xmath10-algebraic and @xmath13-algebraic synchronization trees up to isomorphism , bisimulation and language equivalence . in section  [",
    "sect : caucal ] , we compare our classes of synchronization trees to the first levels of the caucal hierarchy . in section  [",
    "sect : branchlang ] , following courcelle , we characterize the expressive power of @xmath10-algebraic recursion schemes by studying the branch languages of synchronization trees whose vertices have bounded outdegree . in section  [",
    "sect : treesandlogic ] , we show how the previous results can be used to prove that some synchronization trees can not be defined using algebraic recursion schemes . section  [ sect : concl ] concludes the paper and lists topics for future research .",
    "in this section , we provide a categorical semantics for first - order recursion schemes using continuous categorical algebras , and introduce several notions and results that will be used throughout the paper .",
    "section  [ sect : contalg ] introduces the necessary categorical background .",
    "the continuous categorical algebras associated with synchronization trees are introduced in section  [ sect : syntrees ] .",
    "sections  [ sect : edge - labelled - graphs][sect : graph - transformations ] present edge - labelled graphs , monadic second order logic over such structures and the kinds of graph transformations used in the paper . the definition of the synchronization tree defined by a recursion scheme is given in section  [ sec - algebraic objects ] .",
    "sections  [ sect : coa ] and [ sec : morphism ] describe the essentially unique morphisms from the initial continuous ordered @xmath10-algebra ( resp .",
    "@xmath13-algebra ) of @xmath10-term trees ( resp .",
    "@xmath13-term trees ) to the continuous @xmath10-algebra ( resp .",
    "@xmath13-algebra ) of synchronization trees . these morphisms play an important role when comparing the synchronization trees defined by recursion schemes to the low levels of the caucal hierarchy in section  [ sect : caucal ] .",
    "we conclude by giving some basic properties of synchronization trees defined by first - order recursion schemes in section  [ sect : closure ] .    throughout the paper ,",
    "when @xmath5 is a non - negative integer , we denote the set @xmath35 by @xmath36 $ ] .      in this section ,",
    "we recall the notion of continuous categorical @xmath20-algebra .",
    "these structures were used in @xcite to give semantics to recursion schemes over synchronization trees and words .",
    "let @xmath37 be a ranked set ( or ` signature ' ) .",
    "a * categorical @xmath20-algebra * is a small category @xmath38 equipped with a functor @xmath39 for each @xmath40 , @xmath41 .",
    "a * morphism * between categorical @xmath20-algebras @xmath38 and @xmath42 is a functor @xmath43 such that for each @xmath40 , the diagram @xmath44 \\efig\\end{aligned}\\ ] ] commutes _ up to a natural isomorphism_. here , the functor @xmath45 maps each object and morphism @xmath46 in @xmath47 to @xmath48 in @xmath49 .",
    "suppose that @xmath38 is a categorical @xmath20-algebra .",
    "we call @xmath38 * continuous * if @xmath38 has a distinguished initial object ( denoted @xmath50 or @xmath51 ) and colimits of all @xmath52-diagrams @xmath53 . moreover , each functor @xmath54 is continuous , i.e. , preserves colimits of @xmath52-diagrams .",
    "thus , if @xmath55 , say , and if @xmath56 are @xmath57-diagrams in @xmath38 with colimits @xmath58 and @xmath59 , respectively , then @xmath60 has colimit @xmath61 a morphism of continuous categorical @xmath20-algebras is a categorical @xmath20-algebra morphism which preserves the distinguished initial object and colimits of all @xmath52-diagrams . in what follows , we will often write just @xmath62 for @xmath63 , in particular when @xmath38 is understood .    for later use",
    ", we note that if @xmath38 and @xmath42 are continuous categorical @xmath20-algebras then so is @xmath64 .",
    "moreover , for each @xmath65 , the category @xmath66 $ ] of all continuous functors @xmath67 is also a continuous categorical @xmath20-algebra , where for each @xmath40 , @xmath68}(f_1,\\ldots , f_n ) = \\sigma^{c}\\circ \\langle f_1,\\ldots , f_n \\rangle\\ ] ] with @xmath69 standing for the target tupling of the continuous functors @xmath70 . on natural transformations , @xmath71}$ ]",
    "is defined in a similar fashion . in @xmath66",
    "$ ] , colimits of @xmath52-diagrams are formed pointwise .    in the rest of the paper , we will assume , without loss of generality , that the signature @xmath20 contains a special symbol denoted @xmath72 or @xmath17 of rank @xmath17 , interpreted in a continuous categorical @xmath20-algebra as its initial object .      a * synchronization tree * @xmath73 over an alphabet @xmath74 of ` action symbols ' consists of    * a finite or countably infinite set @xmath75 of ` vertices ' and an element @xmath76 , the ` root ' ; * a set @xmath77 of ` edges ' ; * a ` labelling function ' @xmath78 where @xmath79 is a label used to denote successful termination .",
    "these data obey the following restrictions .",
    "* @xmath80 is a rooted tree : for each @xmath81 , there is a unique path @xmath82 . * if @xmath83 and @xmath84 , then @xmath85 is a leaf , and @xmath86 is called an * exit vertex*.    a synchronization tree is _ deterministic _ if no node in the tree has two equally - labelled outgoing edges .",
    "a * morphism * @xmath87 of synchronization trees is a function @xmath88 which preserves the root , the edges and the labels , so that if @xmath89 is an edge of @xmath16 , then @xmath90 is an edge of @xmath15 , and @xmath91 .",
    "in particular such a morphism maps the root of @xmath16 to the root of @xmath15 .",
    "morphisms are therefore functional * simulations *  @xcite .",
    "it is clear that the trees over @xmath74 and tree morphisms form a category , which we denote by @xmath92 .",
    "the tree that has a single vertex and no edges is initial .",
    "it is known that the category of trees has colimits of all @xmath52-diagrams , see  @xcite .",
    "( it also has binary coproducts . ) in order to make the category of trees small , we may require that the vertices of a tree form a subset of some fixed infinite set .",
    "suppose that @xmath93 is an @xmath52-diagram in @xmath92 , where @xmath94 for each @xmath95",
    ". then the colimit @xmath96 can be constructed in the expected way .",
    "first , we define for each @xmath97 the tree morphism @xmath98 as the composition of the morphisms @xmath99 or the identify morphism if @xmath100 .",
    "then we take the disjoint union @xmath101 of the sets @xmath102 , @xmath41 , and define a vertex @xmath103 equivalent to a vertex @xmath104 if and only if there is some @xmath105 with @xmath106 .",
    "the set of vertices of the colimit tree will be the equivalence classes of @xmath101",
    ". the root will be the equivalence class containing the roots @xmath107 of the trees @xmath108",
    ", @xmath41 .",
    "when @xmath109 and @xmath110 are equivalence classes , the pair @xmath111 is an edge in the colimit tree exactly when there exist @xmath112 and @xmath113 for some @xmath5 such that @xmath114 contains the edge @xmath115 .",
    "the label of this edge is @xmath116 .",
    "note that , in this case , for each @xmath117 we have that @xmath118 , and that the label of this edge in @xmath119 is equal to @xmath120 .",
    "this defines the object part @xmath16 of the colimit .",
    "the canonical morphism @xmath121 maps a vertex @xmath122 to its equivalence class .",
    "in the particular case when the morphisms @xmath123 are injective , we may usually assume that @xmath124 for each @xmath5 and that the morphism @xmath123 is the inclusion of @xmath102 into @xmath125 . in this case",
    "the colimit is simply the ` union ' of the trees @xmath108 .",
    "consider the sequence @xmath126 , @xmath41 of synchronization trees , where @xmath127 and @xmath128 maps each edge in @xmath114 to the action symbol @xmath12 .",
    "let @xmath129 be the inclusion map from @xmath130 into @xmath131 .",
    "then @xmath132 is an @xmath52-diagram and its colimit is @xmath133 , where @xmath134 and @xmath135 maps each edge to @xmath12 .",
    "pictorially , we have :    = [ circle , draw = black , fill = black , inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0 mm , outer sep= 0 mm ]    at ( 0,0.75 ) @xmath136 ; ( n0 ) at ( 0,0 ) ;    at ( 0,0.75 ) @xmath137 ; ( n0 ) at ( 0,0 ) ; ( n1 ) at ( 0,-0.75 ) ; ( n0 ) to[right ] node[yshift=1 mm ] @xmath12 ( n1 ) ;    at ( 0,0.75 ) @xmath138 ; ( n0 ) at ( 0,0 ) ; ( n1 ) at ( 0,-0.75 ) ; ( n2 ) at ( 0,-1.5 ) ; ( n0 ) to[right ] node[yshift=1 mm ] @xmath12 ( n1 ) ; ( n1 ) to[right ] node[yshift=1 mm ] @xmath12 ( n2 ) ;    at ( 0,0.75 ) @xmath139 ; ( n0 ) at ( 0,0 ) ; ( n1 ) at ( 0,-0.75 ) ; ( n2 ) at ( 0,-1.5 ) ; ( n3 ) at ( 0,-2.25 ) ; ( n0 ) to[right ] node[yshift=1 mm ] @xmath12 ( n1 ) ; ( n1 ) to[right ] node[yshift=1 mm ] @xmath12 ( n2 ) ; ( n2 ) to[right ] node[yshift=1 mm ] @xmath12 ( n3 ) ;    ( 0,-0.5 )  ( 1,-0.5 ) ;    at ( 0,0.75 ) @xmath140 ; ( n0 ) at ( 0,0 ) ; ( n1 ) at ( 0,-0.75 ) ; ( n2 ) at ( 0,-1.5 ) ; ( n3 ) at ( 0,-2.25 ) ; ( n4 ) at ( 0,-3 ) ; ( n0 ) to[right ] node[yshift=1 mm ] @xmath12 ( n1 ) ; ( n1 ) to[right ] node[yshift=1 mm ] @xmath12 ( n2 ) ; ( n2 ) to[right ] node[yshift=1 mm ] @xmath12 ( n3 ) ; ( n3 ) to[right ] node[yshift=1 mm ] @xmath12 ( n4 ) ; ( n4 )  ( 0,-4 ) ;    the category @xmath92 of synchronization trees over @xmath74 is equipped with two binary operations : @xmath141 ( sum ) and @xmath142 ( sequential product or sequential composition ) , and either with a unary operation or a constant associated with each letter @xmath143 .",
    "the * sum * @xmath144 of two trees is obtained by taking the disjoint union of the vertices of @xmath16 and @xmath15 and identifying the roots .",
    "the edges and labelling are inherited . the * sequential product * @xmath14 of two trees",
    "is obtained by replacing each edge of @xmath16 labelled @xmath145 by a copy of @xmath15 . with each letter @xmath143",
    ", we can either associate a constant , or a unary * prefixing operation*. as a constant , @xmath12 denotes the tree with vertices @xmath146 and two edges : the edge @xmath147 , labelled @xmath12 , and the edge @xmath148 , labelled @xmath145 . as an operation",
    "@xmath149 is the tree @xmath150 , for each tree @xmath16 .",
    "let @xmath17 denote the tree with no edges and @xmath1 the tree with a single edge labelled @xmath145 . on morphisms ,",
    "all operations are defined in the expected way .",
    "for example , if @xmath151 and @xmath152 , then @xmath153 is the morphism that agrees with @xmath154 on the non - root vertices of @xmath16 and that agrees with @xmath155 on the non - root vertices of @xmath156 .",
    "the root of @xmath157 is mapped to the root of @xmath158 .    in the sequel we will consider two signatures for synchronization trees , @xmath10 and @xmath13 .",
    "the signature @xmath10 contains @xmath141 , @xmath159 and each letter @xmath143 as a _ unary _ symbol .",
    "in contrast , @xmath13 contains @xmath160 , @xmath159 and each letter @xmath161 as a _ nullary _ symbol .",
    "it is known that , for both signatures , @xmath92 is a continuous categorical algebra .",
    "see @xcite for details .    in what follows , for each @xmath143 and term / tree @xmath16 , we write @xmath162 for @xmath149 .",
    "we shall also abbreviate @xmath163 to @xmath12 , and write @xmath164 for @xmath165    note that @xmath142 is associative and has @xmath1 as unit , at least up to isomorphism , and that for all trees @xmath166 and @xmath156 , @xmath167 and @xmath168 up to isomorphism .",
    "[ rem : delta - implies - gamma ] a continuous categorical @xmath13-algebra @xmath109 naturally induces an associated @xmath10-algebra @xmath169 . for each letter",
    "@xmath143 , the functor @xmath170 associated to unary symbol @xmath12 is defined for each object and morphism @xmath171 by @xmath172 .",
    "the functors for the other symbols are inherited ( i.e. , for all @xmath173 , @xmath174 ) .",
    "it is easy to see that @xmath169 is indeed a continuous categorical @xmath10-algebra .",
    "in particular the @xmath13-algebra of synchronization trees induces in this sense the @xmath10-algebra of synchronization trees .",
    "[ def : bisimilarity - languageeq ] two synchronization trees @xmath73 and @xmath175 are _ bisimilar _",
    "@xcite if there is some symmetric relation @xmath176 , called a _ bisimulation _ , that relates their roots , and such that if @xmath177 and there is some edge @xmath178 , then there is an equally - labelled edge @xmath179 with @xmath180 .",
    "the _ path language _ of a synchronization tree is composed of the words in @xmath181 that label a path from the root to the source of an exit edge .",
    "two trees are _ language equivalent _ if they have the same path language .",
    "[ lem : bisim - det - iso ] if @xmath16 and @xmath15 are deterministic , bisimilar synchronization trees , then they are isomorphic .",
    "the above lemma fails up to language equivalence .",
    "for example , the trees and are language equivalent but not isomorphic .",
    "we conclude this section by defining an operation on synchronization trees over @xmath182 that contracts all edges labelled by some symbol in @xmath183 .",
    "the definition of this operation is illustrated in figure  [ fig : contraction - synchronization - trees ] .",
    "this notion will , in particular , be used to characterize @xmath10-algebraic trees in the caucal hierarchy .",
    "let @xmath73 be synchronization tree over an alphabet @xmath182 .",
    "the @xmath183-contraction of @xmath16 is the synchronization tree @xmath184 defined by :    * @xmath185 , * a pair @xmath186 is an edge in @xmath187 if there exists a path in @xmath16 from @xmath85 to @xmath188 labelled by a word in @xmath189 , * for each @xmath190 , @xmath191 is the unique letter @xmath192 such that the path from @xmath85 to @xmath188 in @xmath16 is labelled in @xmath193 .    = [ circle , draw = black , fill = black , inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0 mm , outer sep= 0 mm ] = [ font=,label distance=-1 mm ] = [ level distance=0.85cm , sibling distance=1 cm ] = [ level distance=0.85cm , sibling distance=1.25 cm ]    child node[n , label=[l]below:@xmath194 edge from parent node[draw = none , above left ] @xmath12 child node[n , label=[l]right:@xmath195 child node[n , label=[l]left:@xmath196 child node[n , label=[l]below:@xmath197 edge from parent node[draw = none , left ] @xmath198 edge from parent node[draw = none , left ] @xmath199 child node[n , label=[l]right:@xmath200 child node[n , label=[l]below:@xmath201 edge from parent node[draw = none , right ] @xmath145 edge from parent node[draw = none , right ] @xmath202 edge from parent node[draw = none , right ] @xmath199 child node[n , label=[l]right:@xmath203 child node[n , label=[l]right:@xmath204 child node[n , label=[l]below:@xmath205 edge from parent node[draw = none , right ] @xmath198 edge from parent node[draw = none , right ] @xmath199 edge from parent node[draw = none , above right ] @xmath199 ;    = [ level distance=0.85cm , sibling distance=0.85 cm ]    child node[n , label=[l]below:@xmath194 edge from parent node[draw = none , above left ] @xmath12 child node[n , label=[l]below:@xmath197 edge from parent node[draw = none , left ] @xmath198 child node[n , label=[l]right:@xmath200 child node[n , label=[l]below:@xmath201 edge from parent node[draw = none , right ] @xmath145 edge from parent node[draw = none , right ] @xmath202 child node[n , label=[l]below:@xmath205 edge from parent node[draw = none , above right ] @xmath198 ;      an _ edge - labelled graph _ ( or simply graph ) , whose edges are labelled by letters in a finite alphabet @xmath74 , is a pair @xmath206 where @xmath75 is a finite or countable set of vertices and @xmath207 is a set of labelled edges .",
    "the edge @xmath208 has source @xmath86 , target @xmath85 and label @xmath12 .",
    "the existence of an edge @xmath208 in @xmath209 is denoted by @xmath210 or simply @xmath211 when @xmath212 is clear from the context .",
    "this notation is extended to words in @xmath213 in the usual way . for a language @xmath214 over @xmath74 , we write @xmath215 if there is some word @xmath216 such that @xmath217 .    a graph @xmath206 is _ deterministic _ if for all @xmath218 and @xmath161 , if @xmath219 and @xmath220 then @xmath221 .",
    "a _ root _ of a graph @xmath206 labelled by @xmath74 is a vertex @xmath222 such that for all @xmath223 , there exists a path from @xmath222 to @xmath85 .",
    "if this path is unique for each vertex @xmath85 , the graph @xmath206 is a _ tree _ with @xmath222 as its root .",
    "a graph @xmath206 labelled in @xmath224 represents a synchronization tree if @xmath206 is a tree with root @xmath222 and if the target of an @xmath145-labelled edge is always a leaf of the tree .",
    "we will identify such a graph with the synchronization tree @xmath225 where @xmath226 and for all @xmath227 , @xmath228 is the unique symbol in @xmath224 such that @xmath229 belongs to @xmath209 .",
    "the definition of @xmath183-contraction for labelled graphs generalizes the case of synchronization trees introduced in section  [ sect : syntrees ] .",
    "the @xmath183-contraction of a graph @xmath212 labelled in @xmath182 from one of its root vertices @xmath230 is the graph labelled by @xmath74 whose vertices are the targets ( in @xmath212 ) of edges labelled in @xmath74 together with the vertex @xmath230 .",
    "there is an edge from a vertex @xmath86 to a vertex @xmath85 if there is a path from @xmath86 to @xmath85 in @xmath212 labelled by a word in @xmath231 .",
    "_ monadic second - order logic ( mso ) _ on graphs is the extension of first - order logic with the ability to quantify over sets of vertices .",
    "we use monadic - second order logic over edge - labelled graphs with the standard syntax and semantics ( see e.g. @xcite for a detailed presentation ) .    _ monadic second - order formulas _ are built using _ first - order variables _ , which are interpreted as vertices of the graph and are denoted by lower case letters @xmath232 and _ monadic second - order variables _ , which are interpreted as sets of vertices of the graph and are denoted by upper case letters @xmath233 atomic formulas are of the form @xmath234 , @xmath235 and @xmath236 where @xmath171 and @xmath237 are first - order variables , @xmath8 is a second - order variable and @xmath12 is an edge label .",
    "complex formulas are built as usual from atomic ones using boolean connectives and quantifiers .",
    "free and bound occurrences of variables in a formula are defined in the standard fashion .",
    "we write @xmath238 to denote that the formula @xmath239 has free variables in @xmath240 .",
    "a _ closed formula _ has no free variables .    for a formula @xmath238 , a graph @xmath212 , vertices @xmath241 of @xmath212 and sets of vertices @xmath242 of @xmath212 , we write @xmath243 $ ] to denote that @xmath212 _ satisfies _",
    "@xmath239 when the free variable @xmath244 , @xmath245 $ ] , is interpreted as the set of vertices @xmath246 and the free variable @xmath247 , @xmath248 $ ] , is interpreted as the vertex @xmath249 . for a closed formula @xmath239",
    ", we simply write @xmath250 .",
    "the _ mso - theory _ of @xmath212 is the set of closed formulas satisfied by @xmath212 .",
    "for example , the mso formula @xmath251 \\rightarrow y \\in x\\ ] ] expresses that there exists a path from @xmath171 to @xmath237 whose edges are labelled @xmath12 .      in the remainder of the paper",
    ", we will use several transformations of edge - labelled graphs , namely the unfolding of a graph , mso - interpretations and mso - transductions .",
    "the _ unfolding _ @xmath252 of a graph @xmath212 from one of its vertices @xmath230 is the tree whose vertices are the paths in @xmath212 starting from @xmath230 and with an edge labelled @xmath12 between two such paths @xmath253 and @xmath254 if @xmath254 extends @xmath253 by exactly one edge labelled @xmath12 .",
    "an _ mso - interpretation _ is a graph transformation specified using mso - formulas .",
    "an mso - interpretation is given by a tuple of mso - formulas of the form @xmath255 , where @xmath183 is a set of labels .",
    "this interpretation when applied to a graph @xmath212 will produce a graph , denoted @xmath256 , whose edges have labels in @xmath183 .",
    "the set of vertices of @xmath256 is the subset of the vertices of @xmath212 satisfying the formula @xmath257 . for each edge label @xmath258",
    ", there is an edge from @xmath86 to @xmath85 labelled by @xmath198 in @xmath256 if and only if @xmath212 satisfies @xmath259 $ ] . more formally , the graph @xmath260 obtained by applying @xmath261 to a graph @xmath206 is such that : @xmath262 \\ } \\\\      e ' & = & \\ { ( u , b , v ) \\in v ' \\times b \\times v ' \\mid g \\models \\varphi_b[u , v]\\}.",
    "\\\\    \\end{array}\\ ] ]    mso - interpretations can not increase the number of vertices of a graph . to overcome this weakness the notion of a transduction",
    "was introduced by courcelle in @xcite .",
    "the idea is to perform an operation that will increase the number of vertices before applying the mso - interpretation .",
    "let @xmath263 be a finite set of edge labels .",
    "a _ @xmath264-copying operation _ applied to a graph @xmath212 adds , to every vertex of @xmath212 , @xmath265 outgoing arcs respectively labelled by @xmath266 and @xmath267 all going to fresh vertices .",
    "an _ mso - transduction _ is a @xmath264-copying operation followed by an mso - interpretation .",
    "we start by introducing the types of recursion schemes studied in this paper .",
    "[ def : recursion scheme ] let @xmath20 be a signature . a * @xmath20-recursion scheme * , or * recursion scheme over @xmath20 * , is a sequence @xmath209 of equations @xmath268 where each @xmath269 is a term over the signature @xmath270 in the variables @xmath271 , and @xmath272 contains the symbols @xmath273 ( sometimes called ` functor variables ' or  function variables \" ) of rank @xmath274 , @xmath275 $ ] .",
    "a @xmath20-recursion scheme is * regular * if @xmath276 , for each @xmath245 $ ] .",
    "suppose that @xmath109 is a continuous categorical @xmath20-algebra .",
    "define @xmath277\\times \\cdots \\times [ c^{k_n } { \\rightarrow}c].\\end{aligned}\\ ] ] then @xmath278 is a continuous categorical @xmath20-algebra , as noted in section  [ sect : contalg ] .",
    "when each @xmath273 , @xmath245 $ ] , is interpreted as a continuous functor @xmath279 , each term over the extended signature @xmath280 in the variables @xmath281 induces a continuous functor @xmath282 that we denote by @xmath283 .",
    "in fact , @xmath284 is a continuous functor @xmath285.\\end{aligned}\\ ] ] more precisely , we define @xmath284 as follows .",
    "let @xmath286 denote continuous functors @xmath287 , @xmath288 $ ] , and let @xmath289 be a natural transformation @xmath290 for each @xmath288 $ ] . when @xmath16 is the variable @xmath291 , say , then @xmath283 is the @xmath292th projection functor @xmath282 , and @xmath293 is the identity natural transformation corresponding to this projection functor",
    ". suppose now that @xmath16 is of the form @xmath294 , where @xmath295 and @xmath296 are terms",
    ". then @xmath297 and @xmath298 , where @xmath299 and @xmath300 for all @xmath301 $ ] . ( here , we use the same notation for a functor and the corresponding identity natural transformation . ) finally , when @xmath16 is of the form @xmath302 , then @xmath303 , and the corresponding natural transformation is @xmath304 , where the @xmath305 and @xmath306 , @xmath307 $ ] , are defined similarly as above .",
    "note that if each @xmath308 is an identity natural transformation ( so that @xmath309 , for all @xmath245 $ ] ) , then @xmath293 is the identity natural transformation @xmath310 .    in any continuous categorical @xmath20-algebra @xmath109 , by target - tupling the functors @xmath311 associated with the right - hand sides of the equations in a recursion scheme @xmath209 as in ( [ eq : scheme ] ) , we obtain a continuous functor @xmath312 indeed , @xmath313 $ ] , for @xmath245 $ ] , so that @xmath314 thus , @xmath315 has an initial fixed point in @xmath278 , unique up to natural isomorphism , that we denote by @xmath316 so that , in particular , @xmath317 at least up to isomorphism , for each @xmath245 $ ] .    it is well known that the initial fixed point @xmath318 can be ` computed ' in the following way .",
    "let @xmath319 , where , for each @xmath320 $ ] , @xmath321}$ ] is the constant functor @xmath322 determined by the object @xmath323 .",
    "then , for each @xmath324 , define @xmath325 , where @xmath326 for all @xmath327 $ ] .",
    "next , let @xmath328 , where @xmath329 , @xmath327 $ ] , is the unique natural transformation @xmath330 } { \\rightarrow}g_{1,j}$ ] .",
    "moreover , for each @xmath324 , define @xmath331 as the natural transformation @xmath332 .",
    "then @xmath318 is the colimit of the @xmath52-diagram @xmath333 in the continuous functor category @xmath278 .",
    "suppose that @xmath109 is a continuous categorical @xmath20-algebra .",
    "we call a functor @xmath334 * @xmath20-algebraic * , if there is a recursion scheme @xmath209 such that @xmath335 is isomorphic to @xmath336 , the first component of the above - mentioned initial solution of @xmath209 .",
    "when @xmath337 , we identify a @xmath20-algebraic functor with a * @xmath20-algebraic object*. last , a * @xmath20-regular object * is an object isomorphic to the first component of the initial solution of a @xmath20-regular recursion scheme .",
    "in particular , we get the notions of @xmath10-algebraic and @xmath10-regular trees , and @xmath13-algebraic and @xmath13-regular trees .",
    "suppose that @xmath109 is the continuous categorical @xmath20-algebra @xmath92 , where @xmath20 is either @xmath10 or @xmath13 , and consider a recursion scheme @xmath209 of the form ( [ eq : scheme ] ) .",
    "if the continuous functors @xmath338 , @xmath339 , @xmath340 preserve injective synchronization tree morphisms ( in each variable ) , then so does each @xmath341}$ ] , where @xmath342 .",
    "it follows by induction that the functors @xmath343 preserve injective synchronization tree morphisms . moreover , the components of the natural transformations @xmath329 are injective synchronization tree morphisms",
    "thus , when @xmath344 , so that the recursion scheme defines a tree , each @xmath345 is an embedding of the tree @xmath346 into @xmath347 . if we represent the trees @xmath346 so that these embeddings are inclusions , then the colimit @xmath348 of the @xmath52-diagram @xmath349 becomes the union of the trees @xmath346 , @xmath324 .",
    "[ rem : arbitrary - rank - sum ] it is sometimes convenient to add to the signature @xmath10 sums of arbitrary nonzero rank .",
    "for this , we consider the signature @xmath350 where the rank of each symbol @xmath351 is @xmath5 .",
    "the synchronization tree associated with a @xmath352-term tree is defined similarly as the synchronization tree associated to a @xmath10-term tree .",
    "the @xmath352-algebraic synchronization trees are @xmath10-algebraic .",
    "indeed we can transform an algebraic @xmath352-scheme into a @xmath10-scheme defining the same synchronization tree by replacing every occurrence of a subterm of the form @xmath353 on the right - hand side of an equation by @xmath354 for @xmath355 , every subterm of the form @xmath356 by @xmath357 , and finally every subterm of the form @xmath358 by @xmath359 .",
    "= [ circle , draw = black , fill = black , inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0 mm , outer sep= 0 mm ] = [ font=,label distance=-1 mm ] = [ level distance=0.85cm , sibling distance=1 cm ] = [ level distance=0.85cm , sibling distance=1.25 cm ]    child node[n ] child node[n ] edge from parent node[draw = none , left ] @xmath145 edge from parent node[draw = none , above left ] @xmath12 child node[n ] child node[n ] child node[n ] edge from parent node[draw = none , left ] @xmath145 edge from parent node[draw = none , left ] @xmath12 edge from parent node[draw = none , left ] @xmath12 child node[n ] child node[n ] child node[n ] child node[n ] edge from parent node[draw = none , left ] @xmath145 edge from parent node[draw = none , left ] @xmath12 edge from parent node[draw = none , left ] @xmath12 edge from parent node[draw = none , left ] @xmath12 child node[n ] child node[n ] child node[n ] child node[n ] child node[n ] edge from parent node[draw = none , left ] @xmath145 edge from parent node[draw = none , left ] @xmath12 edge from parent node[draw = none , left ] @xmath12 edge from parent node[draw = none , left ] @xmath12 edge from parent node[draw = none , left ] @xmath12 child node[e ] edge from parent[dashed,- ] ;    [ ex : anyfinitedepth ] the following @xmath13-regular recursion scheme @xmath360 has the infinitely branching tree @xmath361 depicted on figure  [ fig : anyfinitedepth ] as its initial solution .",
    "that tree is therefore @xmath13-regular .",
    "note that the tree @xmath361 is also @xmath10-algebraic because it is the initial solution of the following @xmath10-algebraic recursion scheme @xmath362 ( recall that we use @xmath12 as an abbreviation of @xmath163 . )",
    "the path language associated with the tree @xmath361 is @xmath363 .",
    "note that the subtrees of that tree whose roots are children of the root of @xmath361 are pairwise inequivalent modulo language equivalence .",
    "so @xmath10-algebraic recursion schemes can be used to define infinitely branching trees that have an infinite number of subtrees , even up to bisimilarity  @xcite or language equivalence .",
    "[ [ further - examples - of - algebraic - synchronization - trees ] ] further examples of algebraic synchronization trees + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    consider the labelled transition system ( lts ) on figure  [ fig : dyck - like ] .",
    "the synchronization tree associated with that lts is @xmath10-algebraic because it is defined by the recursion scheme below .",
    "@xmath364 the idea underlying the above definition is as follows . at",
    "any given vertex in the lts on figure  [ fig : dyck - like ] , the argument @xmath85 of @xmath365 denotes the subtree obtained by unfolding the lts from that vertex _ and not _ taking the @xmath12-labelled edge as a first step .",
    "@xmath366 denotes the tree obtained by unfolding the lts at that vertex .",
    "this algebraic recursion scheme over @xmath10 corresponds to the regular recursion scheme over @xmath13 , @xmath367    @xmath368 & { * + [ o][f=]{\\makebox(4,4 ) { } } } { } \\ar@<1ex>[r]^a & { * + [ o][f-]{\\makebox(4,4 ) { } } } { }   \\ar@<1ex>[r]^a \\ar@<1ex>[l]^b   & { * + [ o][f-]{\\makebox(4,4 ) { } } } { }   \\ar@<1ex>[r]^a \\ar@<1ex>[l]^b & { * + [ o][f-]{\\makebox(4,4 ) { } } } { }   \\ar@<1ex>[r]^a \\ar@<1ex>[l]^b & \\cdots   \\ar@<1ex>[l]^b } \\ ] ]    as another example , consider the lts on figure  [ fig : non - bpa2 ] . this lts is not expressible in bpa modulo modulo bisimilarity  see  ( * ? ? ?",
    "* , example ( c ) ) .",
    "on the other hand , the synchronization tree associated with that lts is @xmath10-algebraic because it is the unique solution of the @xmath10-algebraic recursion scheme below .",
    "@xmath369 the idea underlying the above definition is as follows . at any given vertex in the lts on figure  [ fig : non - bpa2 ] , the argument @xmath370 of @xmath371 denotes the subtree obtained by unfolding the lts from the vertex _ and not _ taking the @xmath12-labelled or @xmath202-labelled edges as a first step .",
    "the argument @xmath372 of @xmath371 instead encodes the number of @xmath198-labelled edges that one must perform in a sequence in order to terminate .",
    "@xmath373 denotes the tree obtained by unfolding the lts from that vertex .",
    "@xmath368 & { * + [ o][f-]{\\makebox(4,4 ) { } } } { } \\ar@<1ex>[r]^a \\ar[d]^c & { * + [ o][f-]{\\makebox(4,4){}}}{}\\ar@<1ex>[l]^b \\ar@<1ex>[r]^a \\ar[d]^c &   { * + [ o][f-]{\\makebox(4,4 ) { } } } { } \\ar@<1ex>[r]^a \\ar@<1ex>[l]^b \\ar[d]^c & \\cdots \\ar@<1ex>[l]^b \\\\ & { * + [ o][f=]{\\makebox(4,4 ) { } } } { } & { * + [ o][f-]{\\makebox(4,4 ) { } } } { } \\ar[l]^b   & { * + [ o][f-]{\\makebox(4,4 ) { } } } { } \\ar[l]^b & \\ar[l]^b \\cdots    } \\ ] ]    in our arguments , we will often make use of the following mezei - wright theorem @xcite :    [ thm - mezei ] suppose that @xmath374 is a morphism of continuous categorical @xmath20-algebras .",
    "if @xmath202 is an algebraic ( or regular ) object of @xmath109 , then @xmath375 is an algebraic ( or regular ) object of @xmath169 .",
    "moreover , for every algebraic object @xmath376 of @xmath169 there is an algebraic object @xmath202 of @xmath109 such that @xmath376 is isomorphic to @xmath375 , and similarly for regular objects .",
    "an important subclass of continuous categorical algebras is formed by the continuous _ ordered _ algebras , which constitute the classical framework for algebraic semantics @xcite .",
    "we say that a continuous categorical @xmath20-algebra @xmath38 is ordered if its underlying category is a poset category , so that there is at most one morphism between any two objects .",
    "the objects of a continuous ordered algebra are usually called its elements and , as usual , the categorical structure is replaced by a partial order @xmath377 .",
    "the assumptions that @xmath38 has initial object and colimits of @xmath52-diagrams correspond to the requirements that there is a least element @xmath72 and each @xmath52-chain @xmath378 has a supremum , denoted @xmath379 .",
    "thus , @xmath38 is an _",
    "@xmath52-complete poset _ as is each finite power @xmath47 of @xmath38 , equipped with the pointwise order .",
    "a continuous functor @xmath380 is simply a function that preserves the suprema of @xmath52-chains .",
    "every such continuous function preserves the partial order .",
    "continuous functions are ordered pointwise . as is well known , if @xmath38 and @xmath42 are @xmath52-complete posets ,",
    "then so is the poset @xmath381 $ ] of all continuous functions @xmath382 .",
    "suppose that @xmath74 is an alphabet and recall the definition of the signatures @xmath10 and @xmath13 .",
    "an example of a continuous ordered @xmath13-algebra is the language semiring @xmath383 of all subsets of @xmath181 , ordered by set inclusion , where each letter @xmath161 denotes the set @xmath384 and @xmath17 and @xmath1 are interpreted as the empty set and the set @xmath385 containing only the empty word @xmath386 , and where @xmath387 and @xmath388 is the concatenation of @xmath389 and @xmath390 , for all @xmath391 .",
    "alternatively , we may view @xmath383 as a continuous ordered @xmath10-algebra with @xmath392 for all @xmath161 and @xmath393 .",
    "the initial continuous @xmath20-algebra may be described as the algebra of _",
    "@xmath20-term trees_. a term tree may be represented as ( the isomorphism class of ) a possibly infinite directed ordered tree whose vertices are labelled with the letters in @xmath20 such that a vertex labelled in @xmath394 has exactly @xmath5 successors . in particular , vertices labelled in @xmath395 are leaves .",
    "finite term trees over @xmath20 may be identified with variable - free @xmath20-terms . as usual , we identify each symbol in @xmath395 with a term .",
    "let @xmath396 denote the set of all @xmath20-term trees .",
    "we equip @xmath396 with a partial order defined by @xmath397 iff @xmath15 can be constructed from @xmath16 by replacing some leaves labelled @xmath72 by some term trees in @xmath396 .",
    "it is well - known ( see e.g. @xcite ) that this relation turns @xmath396 into an @xmath52-complete partial order with least element @xmath72 .",
    "we may further turn @xmath396 into a continuous ordered @xmath20-algebra . for each @xmath40 and term trees",
    "@xmath398 , the tree @xmath399 is defined as usual as the tree whose root is labelled @xmath62 which has @xmath5 subtrees isomorphic in order to @xmath398 .",
    "the following fact is known , see e.g. @xcite .",
    "[ prop - freeness ] for every continuous categorical @xmath20-algebra @xmath38 there is , up to natural isomorphism , a unique continuous categorical @xmath20-algebra morphism @xmath400 .",
    "sometimes it is convenient to represent a term tree in @xmath396 as a partial function @xmath401 whose domain is a prefix closed nonempty subset of @xmath402 , where @xmath403 denotes the set of positive integers , such that whenever @xmath404 , then for each @xmath405 , @xmath406 is defined if and only if @xmath245 $ ] .",
    "the operations are defined in the usual way . for trees",
    "@xmath407 , we have @xmath397 if and only if for all @xmath408 , either @xmath409 or @xmath410 .",
    "see @xcite for details .",
    "yet another representation of a term tree in @xmath396 is by edge - labelled trees . to this end , let @xmath411 denote the ordinary alphabet whose letters are the symbols @xmath412 where @xmath413 , @xmath414 and @xmath245 $ ] .",
    "when @xmath16 is a @xmath20-term tree , each vertex @xmath86 may be  addressed \" by a word @xmath415 which encodes the unique path from the root to that vertex .",
    "the edge - labelled tree corresponding to @xmath16 has as its vertex sets the addresses of its vertices , together with a vertex @xmath416 whenever @xmath417 is the address of a leaf labelled @xmath62 .",
    "the edges are given as follows .",
    "suppose that @xmath86 and @xmath85 are vertices of @xmath16 with associated addresses @xmath417 and @xmath418 , respectively .",
    "if @xmath85 is the @xmath292th successor of @xmath86 and @xmath86 is labelled @xmath40 ( so that @xmath414 and @xmath245 $ ] ) , then there is an edge from @xmath417 to @xmath418 labelled @xmath412 .",
    "moreover , if @xmath86 is a leaf vertex of @xmath16 , labelled @xmath419 , then there is an edge labelled @xmath62 from @xmath417 to @xmath416 .",
    "consider , for example , the following term tree over @xmath10 .",
    "= [ circle , draw = black , fill = black , inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0 mm , outer sep= 0 mm ] = [ font=,label distance=-1 mm ] = [ level distance=0.85cm , sibling distance=1 cm ] = [ level distance=0.85cm , sibling distance=1.75 cm ] = [ level distance=0.85cm , sibling distance=1.75 cm ]    child node[m , label=[l]left:@xmath420 @xmath12 child node[m , label=[l]left:@xmath421 @xmath17 child node[m , label=[l]right:@xmath422 @xmath141 child node[m , label=[l]right:@xmath423 @xmath12 child node[m , label=[l]left:@xmath424 @xmath17 child node[m , label=[l]right:@xmath425 @xmath12 child node[m , label=[l]right:@xmath426 @xmath1 ;    the resulting edge - labelled tree is    = [ circle , draw = black , fill = black , inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0 mm , outer sep= 0 mm ] = [ font=,label distance=-1 mm ] = [ level distance=1cm , sibling distance=5 cm ] = [ level distance=1cm , sibling distance=3 cm ] = [ level distance=1cm , sibling distance=2.5 cm ]    child node[m ] @xmath427 child node[m ] @xmath428 child node[m ] @xmath429 edge from parent node[l , left ] @xmath17 edge from parent node[l , left ] @xmath430 edge from parent node[l , above , xshift=-1 mm ] @xmath427 child node[m ] @xmath431 child node[m ] @xmath432 child node[m ] @xmath433 child node[m ] @xmath434 edge from parent node[l , left ] @xmath17 edge from parent node[l , left ] @xmath430 edge from parent node[l , above , xshift=-1 mm ] @xmath427 child node[m ] @xmath435 child node[m ] @xmath436 child node[m ] @xmath437 edge from parent node[l , left ] @xmath1 edge from parent node[l , left ] @xmath430 edge from parent node[l , above , xshift=1 mm ] @xmath431 edge from parent node[l , above , xshift=1 mm ] @xmath431 ;    suppose that @xmath109 is a continuous categorical @xmath20-algebra and @xmath154 is the essentially unique continuous categorical @xmath20-algebra morphism @xmath438 .",
    "then , for each finite tree @xmath439 , @xmath440 is uniquely determined up to isomorphism , since @xmath154 preserves the operations . moreover , when @xmath441 are finite with also the unique morphism @xmath442 in @xmath396 seen as a category . ]",
    "@xmath397 , @xmath443 is determined by the conditions that @xmath444 is initial and @xmath154 preserves the operations .",
    "when @xmath16 is an infinite tree , @xmath16 is the supremum of an @xmath52-chain @xmath445 of finite trees ",
    "say @xmath108 is the approximation of @xmath16 obtained by removing all vertices of @xmath16 at distance greater than or equal to @xmath5 from the root ( and relabeling vertices at distance @xmath5 by @xmath72 ) .",
    "then @xmath440 is the colimit of the @xmath52-diagram @xmath446 , where @xmath447 . when @xmath448 or @xmath449 , and @xmath450 , the morphisms @xmath123 are injective , and thus the colimit @xmath440 is the ` union ' of the @xmath451 .      by proposition  [ prop - freeness ]",
    ", there is an ( essentially ) unique morphism of continuous categorical @xmath10-algebras @xmath452 , as well as an essentially unique continuous categorical @xmath13-algebra morphism @xmath453 . in the first part of this section",
    ", we provide a combinatorial description of ( the object part ) of these morphisms . in the second part of the section",
    ", we will consider morphisms from @xmath92 to @xmath383 , seen as a @xmath10-algebra or a @xmath13-algebra .",
    "we start by describing the ( object part of the ) essentially unique continuous categorical @xmath13-algebra morphism @xmath453 .",
    "we will call the image @xmath15 of a term tree @xmath16 under this morphism the _ synchronization tree denoted by _ @xmath16 , or the _ synchronization tree associated with",
    "_ @xmath16 .",
    "suppose that @xmath16 is a @xmath13-term tree and @xmath86 and @xmath85 are leaves of @xmath16 , labelled in @xmath454 .",
    "let @xmath455 ( resp .",
    "@xmath456 ) denote the sequence of vertices along the unique path from the root to @xmath86 ( resp .",
    "@xmath85 ) , including @xmath86 ( resp .",
    "@xmath85 ) .",
    "we say that @xmath457 if @xmath455 and @xmath456 are of the form @xmath458 and @xmath459 with @xmath460 labelled by @xmath142 and successors @xmath461 , ordered as indicated , such that    * every vertex appearing in @xmath462 which is different from @xmath86 is either labelled @xmath141 , or if it is labelled @xmath142 then its second successor belongs to @xmath462 , and * every vertex appearing in @xmath463 which is different from @xmath85 is either labelled @xmath141 , or if it is labelled @xmath142 then its first successor belongs to @xmath463 .",
    "we say that @xmath464 if each vertex appearing in @xmath455 which is different from @xmath86 is either labelled @xmath141 , or if it is labelled @xmath142 , then its first successor belongs to @xmath455 .",
    "finally , we say that @xmath465 if each vertex appearing in @xmath455 which is different from @xmath86 is either labelled @xmath141 , or if it is labelled @xmath142 , then its second successor appears in @xmath455 .",
    "note that if @xmath466 then there is no @xmath460 such that @xmath467 , and similarly , if @xmath468 then @xmath469 .",
    "now form the edge - labelled directed graph @xmath470 whose vertices are a new _ root vertex _ @xmath471 , the leaves of @xmath16 labelled in @xmath472 , and the _ exit vertex _ denoted @xmath473 .",
    "the edges of @xmath470 are the following :    * for each @xmath464 , there is an edge from the root @xmath471 to @xmath86 , labelled by the label of @xmath86 in @xmath16 .",
    "* for all leaf vertices @xmath86 and @xmath85 of @xmath16 labelled in @xmath472 such that @xmath474 , there is an edge in @xmath470 from @xmath86 to @xmath85 whose label is the same as the label of @xmath85 in @xmath16 .",
    "* whenever @xmath86 belongs to @xmath475 , there is an edge in @xmath470 labelled @xmath145 from @xmath86 to @xmath473 .",
    "note that @xmath470 does not contain any cycle .",
    "we denote by @xmath476 the synchronization tree obtained by unfolding @xmath470 from @xmath222 and then contracting edges labelled by @xmath1 .    in proposition  [ prop - tau ]",
    "below , we will prove that @xmath477 , the synchronization tree denoted by @xmath16 .",
    "however , before doing so , we find it instructive to give several examples .    as a first example , consider the term @xmath478 as seen in figure  [ fig : example - morphism-1 ] , the graph @xmath470 contains 8 vertices , the root @xmath471 , the exit vertex @xmath473 , and vertices @xmath479 corresponding to the @xmath480 leaves of @xmath16 .",
    "there is an @xmath12-labelled edge from @xmath471 to @xmath370 , edges from @xmath370 to @xmath372 , @xmath481 and @xmath482 labelled @xmath1 , an edge from @xmath370 to @xmath483 labelled @xmath12 , and edges from @xmath481 and @xmath482 to @xmath484 labelled @xmath198 .",
    "finally , there is an edge labelled @xmath145 from each of @xmath372 , @xmath483 and @xmath484 to @xmath473 .",
    "it is clear that @xmath476 is the synchronization tree denoted by @xmath16 .",
    "= [ circle , draw = black , fill = black , inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0 mm , outer sep= 0 mm ] = [ font=,label distance=-1 mm ] = [ level distance=0.85cm , sibling distance=1 cm ] = [ level distance=0.85cm , sibling distance=1.75 cm ] = [ level distance=0.85cm , sibling distance=1.75 cm ]    child node[m , label=[l]below:@xmath485 @xmath12 child node[m ] @xmath141 child node[m ] @xmath141 child node[m , label=[l]below:@xmath486 @xmath1 child node[m , label=[l]below:@xmath487 @xmath12 child node[m ] @xmath142 child node[m ] @xmath141 child node[m , label=[l]below:@xmath488 @xmath1 child node[m , label=[l]below:@xmath489 @xmath1 child node[m , label=[l]below:@xmath490 @xmath198 ;    ( v0 ) at ( 0,0 ) ; ( v1 ) at ( 0,-0.85 cm ) ; ( v2 ) at ( -1.2cm,-1.7 cm ) ; ( v3 ) at ( -0.4cm,-1.7 cm ) ; ( v4 ) at ( 0.4cm,-1.7 cm ) ; ( v5 ) at ( 1.2cm,-1.7 cm ) ; ( v6 ) at ( 0.8cm,-2.55 cm ) ; ( etoile ) at ( 0,-3.4 cm ) ;    ( v0 ) edge[-latex ] node[left ] @xmath12 ( v1 ) ( v1 ) edge[-latex ] node[above left ] @xmath1 ( v2 ) ( v1 ) edge[-latex ] node[left ] @xmath12 ( v3 ) ( v1 ) edge[-latex ] node[right ] @xmath1 ( v4 ) ( v1 ) edge[-latex ] node[above right ] @xmath1 ( v5 ) ( v4 ) edge[-latex ] node[left ] @xmath198 ( v6 ) ( v5 ) edge[-latex ] node[right ] @xmath198 ( v6 ) ( v2 ) edge[-latex , bend right=20 ] node[left ] @xmath145 ( etoile ) ( v3 ) edge[-latex , bend right=10 ] node[left ] @xmath145 ( etoile ) ( v6 ) edge[-latex , bend left=10 ] node[below right ] @xmath145 ( etoile ) ;    = [ level distance=0.85cm , sibling distance=0.85 cm ] = [ level distance=0.85cm , sibling distance=0.85 cm ]    child node[n ] edge from parent node[draw = none , left ] @xmath145 child node[n ] child node[n ] edge from parent node[draw = none , left ] @xmath145 edge from parent node[draw = none , left ] @xmath12 child node[n ] child node[n ] edge from parent node[draw = none , right ] @xmath145 edge from parent node[draw = none , right ] @xmath198 child node[n ] child node[n ] edge from parent node[draw = none , right ] @xmath145 edge from parent node[draw = none , right ] @xmath198 ;    in the second example illustrated in figure  [ fig : example - morphism-2 ] , consider the term tree @xmath16 defined by the scheme @xmath491 now the root @xmath222 of @xmath470 has two outgoing edges leading to different vertices @xmath492 and @xmath493 , say . these edges are labelled @xmath12 and @xmath376 , respectively . in addition , there is a sequence of vertices , call them @xmath494 , such that for each @xmath495 there is an edge from @xmath496 to @xmath291 , which is labelled @xmath1 , and there is a @xmath202-labelled edge from @xmath372 to @xmath370 .",
    "last , @xmath473 is a vertex , and there exist edges from @xmath493 and @xmath370 to @xmath473 labelled @xmath145 .",
    "@xmath470 is infinite , but the tree @xmath476 constructed from it is finite since @xmath497 is the synchronization tree denoted by @xmath16 .",
    "= [ circle , draw = black , fill = black , inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0 mm , outer sep= 0 mm ] = [ font=,label distance=-1 mm ] = [ level distance=0.85cm , sibling distance=1 cm ]    child node @xmath142 child node @xmath142 child node[label=[l]below:@xmath498 @xmath12 child node @xmath142 child node @xmath142 child node edge from parent[dashed,- ] child node[label=[l]right:@xmath487 @xmath1 child node[label=[l]right:@xmath486 @xmath1 child node[label=[l]right:@xmath485 @xmath202 child node[label=[l]below:@xmath499 @xmath376 ;    ( v0 ) at ( 0,0 ) ; ( u1 ) at ( -0.75cm,-0.85 cm ) ; ( u2 ) at ( 0.75cm,-0.85 cm ) ; ( v1 ) at ( 0cm,-0.85 cm ) ; ( v2 ) at ( 0cm,-1.7 cm ) ; ( v3 ) at ( 0cm,-2.55 cm ) ; ( v4 ) at ( 0cm,-3.4 cm ) ; ( etoile ) at ( 0.75cm,-1.7 cm ) ;    ( v0 ) edge[-latex ] node[left ] @xmath12 ( u1 ) ( v0 ) edge[-latex ] node[right ] @xmath376 ( u2 ) ( v2 ) edge[-latex ] node[right ] @xmath202 ( v1 ) ( v3 ) edge[-latex ] node[right ] @xmath1 ( v2 ) ( v4 ) edge[dashed ] ( v3 ) ( v1 ) edge[-latex ] node[above right , xshift=-1 mm ] @xmath145 ( etoile ) ( u2 ) edge[-latex ] node[right ] @xmath145 ( etoile ) ;    = [ level distance=0.85cm , sibling distance=1.5 cm ]    child node[n ] edge from parent node[draw = none , left ] @xmath12 child node[n ] child node[n ] edge from parent node[draw = none , right ] @xmath145 edge from parent node[draw = none , right ] @xmath376 ;    in the last example illustrated in figure  [ fig : example - morphism-3 ] , consider the term @xmath500 .",
    "the vertices of @xmath470 are the root @xmath471 , vertices @xmath501 corresponding respectively to the leaves of @xmath16 with nonzero label , and the exit vertex @xmath473 .",
    "there are @xmath502 edges , an edge labelled @xmath1 from @xmath471 to @xmath370 , an edge labelled @xmath1 from @xmath372 to @xmath483 , and an edge labelled @xmath145 from @xmath483 to @xmath473 .",
    "now @xmath476 contains only the root and no edges , so that @xmath476 is the synchronization tree @xmath17 denoted by @xmath16 .",
    "= [ circle , draw = black , fill = black , inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0 mm , outer sep= 0 mm ] = [ font=,label distance=-1 mm ] = [ level distance=0.85cm , sibling distance=1 cm ]    child node [ ] @xmath142 child node[label=[l]left:@xmath485 @xmath1 child node [ ] @xmath142 child node [ ] @xmath17 child node[label=[l]below:@xmath486 @xmath198 child node[label=[l]right:@xmath487 @xmath1 ;    ( v0 ) at ( 0,0 ) ; ( v1 ) at ( -1.35cm,-0.85 cm ) ; ( v2 ) at ( -0.45cm,-0.85 cm ) ; ( v3 ) at ( 0.45cm,-0.85 cm ) ; ( etoile ) at ( 1.35cm,-0.85 cm ) ;    ( v0 ) edge[-latex ] node[above left ] @xmath1 ( v1 ) ( v2 ) edge[-latex ] node[above ] @xmath198 ( v3 ) ( v3 ) edge[-latex ] node[above ] @xmath145 ( etoile ) ;    we still need to prove that the definition of @xmath476 is correct .",
    "[ prop - tau ] [ prop : constructing - delta - trees ] for every @xmath13-term tree @xmath16 , the image @xmath15 of @xmath16 with respect to the essentially unique continuous @xmath13-algebra morphism @xmath453 is @xmath476 .",
    "suppose first that @xmath16 is finite .",
    "we will prove the claim by induction on the structure of @xmath16 . if @xmath503 , then @xmath470 has two vertices , the root and the exit vertex , and no edges .",
    "if @xmath16 is a symbol in @xmath454 , then @xmath470 has three vertices , the root @xmath471 , a vertex @xmath370 and the vertex @xmath473 .",
    "there is an edge from @xmath471 to @xmath370 and an edge from @xmath370 to @xmath473 .",
    "the first edge is labelled @xmath12 if @xmath504 , and @xmath1 if @xmath505 .",
    "the second edge is labelled @xmath145 . in either case , @xmath506 .    in the induction step",
    ", first suppose that @xmath507 for some terms @xmath166 denoting the synchronization trees @xmath508 and @xmath509 , respectively .",
    "then @xmath470 is isomorphic to the disjoint union of @xmath510 and @xmath511 with roots and exit vertices merged .",
    "thus , @xmath512 .",
    "suppose next that @xmath513 with @xmath137 denoting @xmath508 and @xmath138 denoting @xmath509 .",
    "then @xmath470 can be constructed from @xmath510 and @xmath511 as follows .",
    "for all edges from the root @xmath372 of @xmath511 to a vertex @xmath85 of @xmath511 ( which necessarily corresponds to a leaf vertex of @xmath138 in @xmath514 ) , and for all @xmath515 , add a new edge from @xmath86 to @xmath85 labelled by the symbol which is the label of the edge from @xmath372 to @xmath85 in @xmath511 ( i.e. , the label of @xmath85 in @xmath138 ) . then remove the edge from @xmath86 to the exit vertex of @xmath510 . finally remove all edges originating in the root of @xmath511 .",
    "the vertices of @xmath470 are the non - exit vertices of @xmath510 and the non - root vertices of @xmath511",
    ". it should be clear that @xmath476 is the sequential product of @xmath516 and thus @xmath517 by the induction hypothesis .",
    "suppose now that @xmath16 is infinite . for each @xmath95 ,",
    "let @xmath108 denote the approximation of @xmath16 obtained by relabelling each vertex of @xmath16 of depth @xmath5 by @xmath17 and removing all vertices of depth greater than @xmath5 . for each leaf vertex @xmath86 of @xmath16",
    "there is some @xmath518 such that @xmath86 is a vertex of @xmath108 with the same label for all @xmath519 .",
    "moreover , for any two leaf vertices @xmath520 of @xmath16 with a nonzero label , @xmath457 iff there is some @xmath518 such that @xmath521 for all @xmath519 .",
    "similarly , for each leaf @xmath86 of @xmath16 with a nonzero label , we have @xmath464 ( @xmath468 ) iff there is some @xmath518 such that @xmath522 ( @xmath523 , resp . ) for all @xmath519 .",
    "this implies that @xmath470 is the union ( colimit ) of the @xmath524 and then it follows that @xmath476 is also the union ( colimit ) of the @xmath525 .",
    "we conclude that @xmath526 , where for each @xmath5 , @xmath527 is the synchronization tree denoted by @xmath108 .",
    "next we describe the essentially unique morphism of continuous categorical @xmath10-algebras @xmath528 .",
    "fix a @xmath10-term tree @xmath529 .",
    "we define a synchronization tree , denoted @xmath530 , which is essentially a representation of @xmath16 as a synchronization tree in which leaves labelled by @xmath1 ( in @xmath16 ) are added a dangling outgoing edge labelled by @xmath145 .",
    "the vertices of the synchronization tree @xmath530 are the vertices of @xmath16 together with a fresh vertex @xmath531 for each leaf @xmath86 labelled by @xmath1 .",
    "if @xmath86 is labelled by @xmath141 in @xmath16 then there is in @xmath530 an edge labelled by @xmath532 from @xmath86 to its first successor and an edge labelled by @xmath533 from @xmath86 to its second successor .",
    "if @xmath86 is labelled by @xmath143 in @xmath16 , then there is in @xmath530 an edge labelled by @xmath12 from @xmath86 to its unique successor .",
    "finally , for each leaf of @xmath86 labelled by @xmath1 , there is an edge in @xmath530 from @xmath86 to @xmath531 labelled by @xmath145 .",
    "the synchronization tree defined by @xmath16 is the @xmath534-contraction of @xmath530 .",
    "this construction is illustrated for the @xmath10-term @xmath535 in figure  [ fig : example - morphism-4 ] .",
    "= [ circle , draw = black , fill = black , inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0 mm , outer sep= 0 mm ] = [ font=,label distance=-1 mm ] = [ level distance=0.85cm , sibling distance=1 cm ]    child node[label=[l]left:@xmath485 @xmath12 child node[label=[l]left:@xmath487 @xmath141 child node[label=[l]left:@xmath488 @xmath202 child node[label=[l]left:@xmath490 @xmath17 child node[label=[l]right:@xmath489 @xmath376 child node[label=[l]right:@xmath536 @xmath1 child node[label=[l]right:@xmath486 @xmath1 ;    child node[n , label=[l]left:@xmath485 child node[n , label=[l]left:@xmath487 child node[n , label=[l]left:@xmath488 child node[n , label=[l]left:@xmath490 edge from parent node[draw = none , left ] @xmath202 edge from parent node[draw = none , left ] @xmath427 child node[n , label=[l]right:@xmath489 child node[n , label=[l]right:@xmath536 child node[n , label=[l]below:@xmath537 edge from parent node[draw = none , right ] @xmath145 edge from parent node[draw = none , right ] @xmath376 edge from parent node[draw = none , right ] @xmath431 edge from parent node[draw = none , left ] @xmath12 edge from parent node[draw = none , above left ] @xmath427 child node[n , label=[l]right:@xmath486 child node[n , label=[l]below:@xmath538 edge from parent node[draw = none , right ] @xmath145 edge from parent node[draw = none , above right ] @xmath431 ;    child node[n , label=[l]left:@xmath487 child node[n , label=[l]left:@xmath490 edge from parent node[draw = none , left ] @xmath202 child node[n , label=[l]right:@xmath536 child node[n , label=[l]below:@xmath537 edge from parent node[draw = none , right ] @xmath145 edge from parent node[draw = none , right ] @xmath376 edge from parent node[draw = none , left ] @xmath12 child node[n , label=[l]below:@xmath538 edge from parent node[draw = none , right ] @xmath145 ;    let @xmath539 denote the function that maps @xmath16 to the @xmath534-contraction of @xmath530 .",
    "[ prop - gamma - hom ] for every @xmath540 , @xmath541 is the synchronization tree in @xmath92 denoted by @xmath16 .",
    "we omit the proof which is essentially a simplification of that of proposition  [ prop - tau ] .",
    "the function which maps a synchronization tree @xmath542 to its path language in @xmath383 is the ( object part ) of a categorical @xmath10-algebra , as well as @xmath13-algebra , morphism @xmath543 .",
    "it is clear that the empty tree is mapped to the empty language and the operations are preserved . when there is a morphism @xmath544 for synchronization trees @xmath545 , then the path language of @xmath16 is included in the path language of @xmath15 .",
    "finally , suppose that @xmath546 is an @xmath52-diagram in @xmath92 with colimit @xmath547 .",
    "then for every branch of @xmath16 ending in an edge labelled @xmath145 there is some @xmath518 such that the branch is the image of a corresponding branch of @xmath548 with respect to the morphism @xmath549 , and then the same holds for each @xmath519 .",
    "using this fact , it follows easily that the path language of @xmath16 is the union of the path languages of the @xmath108 , proving that colimits of @xmath52-diagrams are preserved .      in this section , we give some basic properties of synchronization trees defined by first - order recursion schemes .",
    "first , we remark that @xmath10-regular and @xmath10-algebraic functors are closed under the sequential product .",
    "this closure property is immediate for @xmath13-regular and @xmath13-algebraic functors as the sequential product is an operation of the continuous @xmath13-algebra @xmath92 ( which is not the case for the continuous @xmath10-algebra @xmath92 ) .    if @xmath550 are @xmath10-algebraic ( resp .",
    "@xmath10-regular ) , then so is @xmath551 .",
    "suppose that @xmath335 and @xmath552 are the first components of the initial solutions over @xmath92 of the @xmath10-recursion schemes @xmath209 and @xmath187 .",
    "without loss of generality , we may assume that @xmath209 and @xmath187 have disjoint sets of functor variables .",
    "let @xmath553 and @xmath554 denote the left - hand sides of the first equations of @xmath209 and @xmath187 . then replace each occurrence of the symbol @xmath1 on the right - hand - side term of each equation of @xmath209 with @xmath555 , and consider the recursion scheme consisting of these equations together with the equations of @xmath187 .",
    "the component of the initial solution of this scheme which corresponds to @xmath556 is @xmath557 .",
    "[ ex : seqcomp ] the tree @xmath558 determined by single infinite branch with edges labelled @xmath198 is @xmath10-regular since it is the initial solution of the following @xmath10-regular recursion scheme @xmath559 we have already seen in example  [ ex : anyfinitedepth ] on page that the tree @xmath560 is @xmath10-algebraic . according to the above proposition , the tree @xmath561 is also @xmath10-algebraic .",
    "indeed , it is the initial solution of the recursion scheme @xmath562    all our classes of synchronization trees are also closed under the contraction operation for each non - empty subset of @xmath74 .    [",
    "prop : contr - alg ] the classes of @xmath10-regular , @xmath10-algebraic , @xmath13-regular and @xmath13-algebraic synchronization trees in @xmath92 are closed under contraction for any non - empty subset of @xmath74 .",
    "let @xmath183 be a non - empty subset of @xmath74 .",
    "let @xmath16 be a synchronization tree defined by an algebraic @xmath10-scheme @xmath209 and let @xmath15 be the synchronization tree obtained by contracting @xmath16 with respect to @xmath183 .",
    "a @xmath10-scheme @xmath187 defining @xmath15 is easily obtained from @xmath209 by replacing each equation of the form @xmath563 by the equation @xmath564 where @xmath565 is inductively defined by @xmath566 , @xmath567 , @xmath568 , @xmath569 , @xmath570 if @xmath571 and @xmath572 for @xmath573 .",
    "note that @xmath187 is @xmath10-regular , if so is @xmath209 .",
    "the @xmath10-term defined by @xmath187 is the contraction of the @xmath10-term defined by @xmath209 from its root with respect to @xmath183 .",
    "it then follows , from the definition of the mapping @xmath539 in [ sec : morphism ] and proposition  [ prop - gamma - hom ] , that the synchronization tree defined by @xmath187 is the contraction of the synchronization tree defined by @xmath209 with respect to @xmath183 .",
    "let @xmath16 be a synchronization tree defined by an algebraic @xmath13-scheme @xmath209 and let @xmath15 be the synchronization tree obtained by contracting @xmath16 with respect to @xmath183 . consider the @xmath13-scheme @xmath187 obtained by replacing in @xmath209 all occurrences of a constant in @xmath183 by the constant @xmath1 .",
    "( note that @xmath187 is @xmath13-regular , if so is @xmath209 . )",
    "the @xmath13-term defined by @xmath187 is the @xmath13-term defined by @xmath209 in which each occurrence of a constant in @xmath183 is replaced by the constant @xmath1 .",
    "it follows from the definition of the mapping @xmath574 in [ sec : morphism ] and proposition  [ prop - tau ] , that the synchronization tree defined by @xmath187 is the contraction of the synchronization tree defined by @xmath209 with respect to @xmath183 .",
    "finally , the @xmath10-regular synchronizations trees can be characterized by a syntactic subfamily of the @xmath13-regular recursion schemes .",
    "this characterization is similar in spirit to the characterization of regular languages by right - linear context - free grammars .",
    "a @xmath13-regular scheme is said to be _ right - linear _ if the right - hand side of each equation is of the form @xmath575}t_i\\cdot g_i\\ ] ] up to commutativity and associativity of sum , where the @xmath576 , @xmath577 $ ] , are ( constant ) functor variables and the @xmath578 , @xmath579 are terms over the signature @xmath13 not containing variables .",
    "( the empty sum stands for @xmath17 . )",
    "it is rather standard to prove the following fact :    [ prop : right - linear - implies - regular ] a synchronization tree in @xmath92 is @xmath10-regular iff it can be defined by a right - linear @xmath13-regular scheme .",
    "it is clear how to transform a @xmath10-regular recursion scheme into a right - linear @xmath13-scheme by turning each prefixing operation into a sequential product .",
    "we show how to transform a @xmath13-term @xmath580 with @xmath16 containing no functor variables into a corresponding @xmath10-term @xmath581 , possibly containing @xmath212 .",
    "we proceed by induction on the structure of @xmath16 .",
    "when @xmath503 , let @xmath582 , and when @xmath505 let @xmath583 . when @xmath584 where @xmath143 , define @xmath585 .",
    "suppose now that @xmath507 .",
    "then let @xmath586 .",
    "finally , consider the case when @xmath587 . in this case",
    "define @xmath581 as the term obtained by substituting @xmath588 for each occurrence of @xmath212 in @xmath589 .",
    "a routine calculation shows that for each evaluation of @xmath212 in @xmath92 , the terms @xmath580 and @xmath581 yield the same synchronization tree .",
    "for an example of such calculation , we refer the reader to the proof of theorem  [ thm : delta2gamma ] on page .",
    "using this fact , we may transform a right - linear @xmath13-scheme into a regular @xmath10-scheme by changing the right - hand side @xmath590}t_i\\cdot g_i$ ] of each equation to @xmath591}t_i ' ( g_i)$ ] , where @xmath592 is the term obtained by substituting @xmath1 for @xmath212 in @xmath593 .",
    "in this section , we interpret recursion schemes over the continuous categorical algebra @xmath92 , viewed either as a @xmath10-algebra or a @xmath13-algebra . we compare the resulting classes of synchronization trees with respect to language equivalence , bisimulation equivalence and isomorphism equivalence .",
    "first for language equivalence , we show in section  [ ssec : up - to - languages ] that the following hierarchy holds .",
    "@xmath594    up to bisimulation or isomorphism , we show in section  [ ssec : up - to - bisimulation - iso ] that the following hierarchy holds .",
    "@xmath595    we conclude the section by a comparison with the classes of synchronization trees defined by bpa and bpp .",
    "as already mentioned in the introduction , the path languages of the different classes can be characterized as follows .",
    "the following properties holds .    1",
    ".   the path languages of the @xmath10-regular trees are the regular languages .",
    "the path languages of the @xmath13-regular trees and of the @xmath10-algebraic trees are the context - free languages",
    "the path languages of the @xmath13-algebraic languages are the indexed languages .    by the mezei - wright theorem , the path languages of the @xmath10-regular trees and the @xmath13-regular trees in @xmath92 are just the @xmath10-regular and @xmath13-regular elements ( objects ) of @xmath383 , seen as a continuous @xmath10-algebra or @xmath13-algebra . by classic results ( e.g. ( * ? ? ?",
    "* theorem 1.21 , page 116 ) ) , these in turn are the regular and context - free languages similarly , the indexed languages ( or oi - macro languages ) are exactly the @xmath13-algebraic elements of @xmath383 , cf .",
    "@xcite , i.e. , the path languages of the @xmath13-algebraic trees by the mezei - wright theorem . by theorem  [ thm : delta2gamma ] , every @xmath13-regular tree is @xmath10-algebraic .",
    "thus , to complete the proof , it remains to show that the path language of a @xmath10-algebraic tree is context - free .",
    "suppose that @xmath214 is the path language of a @xmath10-algebraic tree in @xmath92 , and let @xmath209 denote a @xmath10-algebraic scheme defining it .",
    "then consider the term tree @xmath529 defined by @xmath209 . by the mezei - wright theorem ,",
    "@xmath214 is the image of @xmath16 with respect to the unique continuous @xmath10-algebra morphism @xmath596 .",
    "suppose that @xmath85 is a leaf of @xmath16 labelled @xmath1 , and consider the branch of @xmath16 from the root to @xmath85 .",
    "the label of this branch is a word @xmath597 over the alphabet @xmath598 .",
    "let us consider the image @xmath599 of @xmath597 under the erasing morphism @xmath600 that removes the letters @xmath427 and @xmath431 .",
    "then @xmath601 is the set of all such words @xmath599 obtained by considering all leaves @xmath85 of @xmath16 labelled @xmath1 .",
    "it follows from courcelle s characterization of the algebraic term trees by deterministic context - free languages ( * ? ? ?",
    "* theorem 5.5.1,page 157 ) ( see also @xcite ) that the set of all words @xmath597 , where @xmath85 is a leaf of @xmath16 labelled @xmath1 , is a deterministic context - free language .",
    "since the image of a ( deterministic ) context - free language with respect to a homomorphism is context - free , we conclude that @xmath214 is a context - free language .",
    "the aim of this section is to establish the strict inclusions stated in equation  .",
    "as noted in remark  [ rem : delta - implies - gamma ] on page  , a @xmath10-term can be transformed into an equivalent @xmath13-term by replacing for each letter @xmath143 , all occurrences of a subterm @xmath149 by @xmath150 . in particular , every @xmath10-regular tree is @xmath13-regular and every @xmath10-algebraic tree is @xmath13-algebraic .",
    "this establishes the first and third inclusions of .",
    "these inclusions are strict up to bisimulation and up to isomorphism as they are already strict with respect to language equivalence ( cf . ) .",
    "it only remains to establish the second strict inclusion of equation  .",
    "first we establish the inclusion up to isomorphism in theorem  [ thm : delta2gamma ] . in corollary",
    "[ cor : charac - delta - regular - in - gamma - algebraic ] , we characterize a syntactical subfamily of the @xmath10-algebraic schemes which captures exactly the @xmath13-regular schemes .",
    "[ thm : delta2gamma ] every @xmath13-regular tree is @xmath10-algebraic .",
    "consider a regular @xmath13-recursion scheme @xmath209 , @xmath602 which defines the @xmath13-regular tree @xmath603 .",
    "let @xmath604 and @xmath605 , where each @xmath273 is of rank @xmath17 , @xmath606 is of rank @xmath17 , and each @xmath576 with @xmath607 is of rank @xmath1 .    given a variable - free @xmath608-term @xmath16 , we define its translation @xmath15 to be a @xmath609-term in the variable @xmath370",
    ".    * if @xmath610 , for some @xmath245 $ ] , then @xmath611 . *",
    "if @xmath503 then @xmath612 .",
    "* if @xmath505 then @xmath613 . * if @xmath584 then @xmath614 .",
    "* if @xmath507 then @xmath615 .",
    "* if @xmath616 then @xmath617 , the term obtained by substituting @xmath509 for each occurrence of @xmath370 in @xmath508 .    note that @xmath618 and @xmath619^n { \\rightarrow}[{\\mathsf{st}(a)}{\\rightarrow}{\\mathsf{st}(a)}]\\ ] ] the two functors are related .    for a tree @xmath620 ,",
    "let @xmath621 denote the functor ` left composition with @xmath230 ' , @xmath622 in @xmath623 $ ] .",
    "_ claim 1 .",
    "_ for each variable - free @xmath624-term @xmath16 and its translation @xmath15 , and for each sequence of trees @xmath625 in @xmath92 , it holds that @xmath626    indeed , when @xmath627 , for some @xmath245 $ ] , then @xmath15 is @xmath628 and both sides are equal to the functor @xmath629 .",
    "if @xmath630 , then both sides are equal to the constant functor @xmath631 determined by the tree @xmath632 , and when @xmath505 , both sides are equal to the identity functor @xmath631 . indeed , seen @xmath633 , left composition with @xmath634 is the identity functor as is @xmath635 .",
    "suppose now that @xmath584 for some @xmath12 .",
    "then both sides are equal to the functor @xmath636 , left composition with @xmath12 .",
    "next let @xmath507 , and suppose that the claim holds for @xmath137 and @xmath138 .",
    "then @xmath637 last , suppose that @xmath616 , and that the claim holds for both terms @xmath137 and @xmath138 .",
    "then @xmath638 is the composition of the functors @xmath639 and @xmath640 ( where the second functor is applied first ) , as is the functor @xmath641    _ claim 2 .",
    "_ for each variable - free @xmath624-term @xmath16 and its translation @xmath15 , and for each sequence of trees @xmath625 in @xmath92 , it holds that @xmath642    indeed , by claim 1 , we have @xmath643 let @xmath187 denote the @xmath10-algebraic scheme @xmath644 we claim that @xmath187 is equivalent to @xmath209 , i.e. , @xmath187 also defines @xmath156 . to this end , let @xmath212 denote the recursion scheme consisting of the last @xmath5 equations of @xmath187 .",
    "in order to compare the schemes @xmath209 and @xmath212 , define @xmath645},\\ldots,0^{[{\\mathsf{st}(a)}{\\rightarrow}{\\mathsf{st}(a)}]})\\\\    g_{i+1 } & = & ( g_{i+1,1},\\ldots , g_{i+1,n } ) = ( t_1'^{{\\mathsf{st}(a)}}(g_i),\\ldots , t_n'^{{\\mathsf{st}(a)}}(g_i ) ) \\end{aligned}\\ ] ] for each @xmath292 , define @xmath646 .",
    "we prove by induction on @xmath292 that @xmath647 .",
    "this is clear when @xmath648 , since for each @xmath320 $ ] , @xmath649 } = \\overline{0^{{\\mathsf{st}(a ) } } } = \\overline{s_{0,j}}$ ] . to prove the induction step ,",
    "suppose that we have established our claim for some @xmath650 .",
    "then for all @xmath327 $ ] , @xmath651 for each @xmath327 $ ] , let @xmath652 denote the unique morphism @xmath653 . then define @xmath654 next , let @xmath655 denote the unique natural transformation @xmath656 } { \\rightarrow}g_{1,j}$ ] , for each @xmath327 $ ] .",
    "define @xmath657}(\\psi_i),\\ldots , t_n'^{[{\\mathsf{st}(a)}{\\rightarrow}{\\mathsf{st}(a)}]}(\\psi_i))\\end{aligned}\\ ] ] thus , each @xmath658 is a natural transformation from @xmath659 to @xmath660 , and each @xmath329 is a morphism @xmath661 .",
    "define @xmath662 to be the natural transformation @xmath663 such that for any tree @xmath335 , the corresponding component of @xmath662 is @xmath664 .",
    "let @xmath665 .    _ claim 3 .",
    "_ for each @xmath292 , it holds that @xmath666 .",
    "the proof is similar to the above argument .",
    "using this claim , it follows that @xmath667 for each @xmath668 , since @xmath669    it is now easy to complete the proof . by the beki identity",
    ", @xmath670 suppose that @xmath209 is given by the single equation @xmath671 then @xmath187 is @xmath672 both of them define the tree depicted on figure  [ fig : anbn ] .",
    "@xmath673[f-]{\\makebox(3,3 ) { } } } { } \\ar[d]_{{\\mathsf{ex } } } \\ar[r]_a & { * + [ o][f-]{\\makebox(3,3 ) { } } } { } \\ar[d]_b \\ar[r]_a & { * + [ o][f-]{\\makebox(3,3 ) { } } } { } \\ar[d]_b \\ar[r]_a    & { * + [ o][f-]{\\makebox(3,3 ) { } } } { } \\ar[d]_b \\ar[r]_a & \\cdots   \\\\ { * + [ o][f-]{\\makebox(3,3 ) { } } } { }   & { * + [ o][f-]{\\makebox(3,3 ) { } } } { }   \\ar[d]_{{\\mathsf{ex } } }   & { * + [ o][f-]{\\makebox(3,3 ) { } } } { } \\ar[d]_b   &   { * + [ o][f-]{\\makebox(3,3){}}}{}\\ar[d]_b   & \\cdots \\\\            & { * + [ o][f-]{\\makebox(3,3 ) { } } } { } & { * + [ o][f-]{\\makebox(3,3 ) { } } } { } \\ar[d]_{{\\mathsf{ex } } }    & { *",
    "+ [ o][f-]{\\makebox(3,3 ) { } } } { } \\ar[d]_b & \\cdots \\\\            &           & { * + [ o][f-]{\\makebox(3,3 ) { } } } { }                 & { * + [ o][f-]{\\makebox(3,3 ) { } } } { } \\ar[d]_{{\\mathsf{ex } } }   & \\cdots \\\\             &           &                          & { * + [ o][f-]{\\makebox(3,3 ) { } } } { } & \\cdots \\\\ } \\ ] ]    the translation given in the proof of theorem  [ thm : delta2gamma ] allows us to characterize @xmath13-regular trees by a syntactic restriction on @xmath10-algebraic schemes .",
    "[ cor : charac - delta - regular - in - gamma - algebraic ] a tree is @xmath13-regular if and only if it is defined by an algebraic recursion scheme @xmath212 over @xmath10 of the form @xmath674 where @xmath606 has rank @xmath17 , each @xmath576 with @xmath607 has rank @xmath1 , and where none of the terms @xmath675 has an occurrence of the constant @xmath1 .    in the light of the proof of theorem  [ thm : delta2gamma",
    "] , it is enough to show that any such scheme can be obtained from some regular recursion scheme @xmath209 over @xmath13 .",
    "let @xmath676 and @xmath604 , where each @xmath273 has rank @xmath17 .",
    "we give a transformation of a @xmath677-term @xmath455 in the variable @xmath370 , which contains no occurrence of the constant @xmath1 , into a variable - free @xmath678-term @xmath679 such that @xmath680 , where @xmath681 is defined in the proof of theorem  [ thm : delta2gamma ] .    1 .",
    "if @xmath682 then @xmath683 .",
    "2 .   if @xmath684 then @xmath685 .",
    "3 .   if @xmath686 then @xmath687 .",
    "4 .   if @xmath688 then @xmath689 . 5 .   if @xmath690 then @xmath691 .    _ claim .",
    "_ let @xmath455 be a @xmath677-term in the variable @xmath370 containing no occurrence of the constant @xmath1 .",
    "then @xmath680 .",
    "we prove this claim by induction on the structure of @xmath455 . when @xmath692 , @xmath683 and @xmath693 , and when @xmath684 , @xmath685 and @xmath694 .",
    "suppose that @xmath455 is of the form @xmath695 and that the claim holds for @xmath696 and @xmath697 . in this case",
    "@xmath698 and @xmath699 , by the induction hypothesis .",
    "next let @xmath688 where @xmath143 and suppose that the claim holds for @xmath696",
    ". then @xmath700 and @xmath701 .",
    "last , suppose that @xmath690 for some @xmath245 $ ] and @xmath696 satisfying the claim",
    ". then we have @xmath702 and @xmath703 .",
    "this completes the proof of the claim .",
    "now consider the regular @xmath13-scheme @xmath209 @xmath704 by the proof of theorem  [ thm : delta2gamma ] , @xmath212 corresponds to @xmath209 .",
    "thus , @xmath209 and @xmath212 define the same tree .",
    "the restriction on the use of the constant @xmath1 in corollary  [ cor : charac - delta - regular - in - gamma - algebraic ] is necessary . indeed",
    "the proof of proposition  [ prop : gamma - algebraic - not - delta - regular ] to follow gives an example of @xmath10-algebraic scheme of rank 1 generating a tree that is not @xmath13-regular even up to bisimulation equivalence .    to establish equation  ,",
    "it remains to show the strictness of the second inclusion up to bisimulation equivalence .",
    "[ prop : gamma - algebraic - not - delta - regular ] there exists a @xmath10-algebraic synchronization tree that is not bisimilar to any @xmath13-regular tree .",
    "let @xmath705 , and consider the synchronization tree @xmath706 , defined by the @xmath10-algebraic recursion scheme : @xmath707    the tree @xmath708 , depicted in figure  [ fig : tree - strict ] , has a single infinite branch whose edges are labelled @xmath12 , and the out - degree of each vertex on this branch is @xmath502 , since each such vertex is the source of an edge labelled @xmath12 , an edge labelled @xmath198 , and an edge labelled @xmath145 . since @xmath708 is deterministic , its vertices may be identified with the words in the prefix closed language @xmath709 a key feature is that every vertex is the source of an edge labelled @xmath145 .",
    "= [ circle , draw = black , fill = black , inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0 mm , outer sep= 0 mm ] = [ font=,label distance=-1 mm ] = [ level distance=0.95cm , sibling distance=1.75 cm ]    child node[n , label=[l]above left:@xmath710 child node[n , label=[l]above left:@xmath711 child node[e ] edge from parent[dashed,- ] child node[n , label=[l]left:@xmath712 child node[e ] edge from parent[draw = none ] child node[n , label=[l]left:@xmath713 child node[e ] edge from parent[draw = none ] child node[n , label=[l]left:@xmath714 child[sibling distance=0.75 cm ] node[n ] edge from parent node[draw = none , right ] @xmath145 edge from parent node[draw = none , left ] @xmath198 child[sibling distance=0.75 cm ] node[n ] edge from parent node[draw = none , right ] @xmath145 edge from parent node[draw = none , left ] @xmath198 child[sibling distance=0.75 cm ] node[n ] edge from parent node[draw = none , right ] @xmath145 edge from parent node[draw = none , left ] @xmath198 child[sibling distance=0.75 cm ] node[n ] edge from parent node[draw = none , right ] @xmath145 edge from parent node[draw = none , above left ] @xmath12 child node[n , label=[l]left:@xmath715 child node[e ] edge from parent[draw = none ] child node[n , label=[l]left:@xmath716 child[sibling distance=0.75 cm ] node[n ] edge from parent node[draw = none , right ] @xmath145 edge from parent node[draw = none , left ] @xmath198",
    "child[sibling distance=0.75 cm ] node[n ] edge from parent node[draw = none , right ] @xmath145 edge from parent node[draw = none , left ] @xmath198 child[sibling distance=0.75 cm ] node[n ] edge from parent node[draw = none , right ] @xmath145 edge from parent node[draw = none , above left ] @xmath12 child node[n , label=[l]left:@xmath717 child[sibling distance=0.75 cm ] node[n ] edge from parent node[draw = none , right ] @xmath145 edge from parent node[draw = none , left ] @xmath198 child[sibling distance=0.75 cm ] node[n ] edge from parent node[draw = none , right ] @xmath145 ;    we are going to show that every @xmath13-regular scheme @xmath209 defining a synchronization tree bisimilar to @xmath708 is equivalent to a right - linear one , modulo bisimilarity . by proposition  [ prop : right - linear - implies - regular ] , this would imply that @xmath708 is @xmath10-regular , which yields a contradiction .",
    "indeed , the tree @xmath708 has a countably infinite set of subtrees that are pairwise non - bisimilar .    without loss of generality",
    ", we may assume that the equations of @xmath209 are of one of three forms :    1 .",
    "@xmath718 , 2 .",
    "@xmath719 , and 3 .",
    "@xmath720 for @xmath721  .    in the following ,",
    "we are interested in a particular family @xmath722 of  subtrees \" of @xmath708 , containing , for all @xmath65 , the subtree @xmath723 rooted at @xmath724 , and the trees obtained from @xmath723 by removing the exit edge originating in the root together with its target , or the edge labelled @xmath198 originating in the root together with all vertices and edges accessible from the end vertex of that edge , or both .",
    "we denote these synchronization trees by @xmath725 and @xmath726 , respectively .",
    "[ lem - lem2 ] suppose that a tree @xmath727 is bisimilar to a tree @xmath728 , where neither @xmath729 nor @xmath730 is bisimilar to @xmath1 .",
    "then for some @xmath731 , @xmath732 , @xmath729 is bisimilar to @xmath733 , and @xmath730 is bisimilar to @xmath734 .",
    "suppose that @xmath156 is bisimilar to @xmath728 and neither @xmath729 nor @xmath730 is bisimilar to the tree @xmath1 .",
    "note that @xmath730 is not @xmath17 .",
    "clearly , each vertex of @xmath729 , except possibly the root , must be the source of an exit edge .",
    "suppose that @xmath156 contains and edge labelled @xmath12 from @xmath735 to @xmath736 such both @xmath735 and @xmath736 are sources of an exit edge .",
    "then in the tree @xmath737 , they have successor vertices @xmath738 and @xmath739 such that the subtrees rooted at @xmath738 and @xmath739 are isomorphic ( and thus bisimilar ) and contain at least one edge . but @xmath708 does not have such vertices connected by an edge labelled @xmath12 and therefore neither does @xmath156 .",
    "for this reason , @xmath729 can not have two consecutive edges labelled @xmath12 either .",
    "this in turn yields that @xmath730 has at least one edge labelled @xmath12 and therefore @xmath729 can not have an edge labelled @xmath198 . we conclude that @xmath729 is bisimilar to the tree @xmath733 and then @xmath730 is bisimilar to @xmath734 for some @xmath731 .",
    "now , by lemma  [ lem - lem2 ] , we may transform @xmath209 into a right - linear scheme defining @xmath708 up to bisimilarity .",
    "first mark all those variables @xmath212 such that the corresponding component in the initial solution of @xmath209 over @xmath92 has an infinite branch .",
    "the first variable is clearly marked .",
    "suppose that @xmath212 is marked .",
    "if the equation for @xmath212 is @xmath740 , then @xmath741 or @xmath742 is marked .",
    "if one of them is not marked , then it can be replaced by a variable - free term .",
    "if the equation for @xmath212 is @xmath743 and the component in the initial solution of @xmath209 over @xmath92 corresponding to one of the @xmath576 is bisimilar to @xmath1 , then we may simply remove it .",
    "otherwise we apply lemma  [ lem - lem2 ] and replace @xmath741 by @xmath12 and mark @xmath742 if it is not yet marked .",
    "eventually , we keep only the marked functor variables and obtain a right - linear scheme defining @xmath708 up to bisimilarity .      the @xmath13-regular trees that can be defined using regular @xmath13-recursion schemes that do not contain occurrences of the constants @xmath17 and @xmath1 correspond to unfoldings of the labelled transition systems denoted by terms in basic process algebra ( bpa ) with recursion , see , for instance ,  @xcite .",
    "indeed , the signature of bpa contains one constant symbol @xmath12 for each action as well as the binary @xmath141 and @xmath142 operation symbols , denoting nondeterministic choice and sequential composition , respectively . in the remainder of this paper",
    ", we write bpa for ` bpa with recursion ' .    alternatively , following  @xcite ,",
    "one may view bpa as the class of labelled transition systems associated with context - free grammars in greibach normal form in which only leftmost derivations are permitted .",
    "the class of basic parallel processes ( bpp ) is a parallel counterpart of bpa introduced by christensen  @xcite .",
    "bpp consists of the labelled transition systems associated with context - free grammars in greibach normal form in which arbitrary derivations are allowed .",
    "we refer the interested readers to  @xcite for the details of the formal definitions , which are not needed to appreciate the results to follow , and further pointers to the literature .",
    "[ prop : moreexpthanbpa ]    1 .",
    "every synchronization tree that is the unfolding of a bpa process is @xmath10-algebraic .",
    "2 .   there is a @xmath10-algebraic synchronization tree that is neither definable in bpa modulo bisimilarity nor in bpp modulo language equivalence .",
    "the former claim follows easily from theorem  [ thm : delta2gamma ] . in order to prove the latter statement ,",
    "consider the lts depicted on figure  [ fig : algebraic - not - bpa ] .",
    "this lts is not expressible in bpa modulo modulo bisimilarity and is not expressible in bpp modulo language equivalence ( if the states @xmath456 are @xmath230 are the only final states in the lts)see  ( * ? ? ?",
    "* , example ( f ) ) . on the other hand ,",
    "the synchronization tree associated with that lts is @xmath10-algebraic because it is the unique solution of the recursion scheme below .",
    "@xmath744    so non - regular @xmath10-algebraic recursion schemes are more expressive than bpa modulo bisimilarity and can express synchronization trees that can not be defined in bpp up to language equivalence , and therefore up to bisimilarity .",
    "@xmath745[f=]{\\makebox(3,3 ) { } } } { } & { * + [ o][f-]{\\makebox(3,3 ) { } } } { } \\ar[l]^b   & { * + [ o][f-]{\\makebox(3,3 ) { } } } { } \\ar[l]^b & \\ar[l]^b \\cdots   \\\\ \\ar[r ] & { * + [ o][f-]{\\makebox(3,3 ) { } } } { } \\ar[u]^b \\ar[r]^a \\ar[d]^c & { * + [ o][f-]{\\makebox(3,3){}}}{}\\ar[u]^b \\ar[r]^a \\ar[d]^c &   { * + [ o][f-]{\\makebox(3,3){}}}{}\\ar[u]^b \\ar[r]^a \\ar[d]^c & \\cdots \\\\ & { * + [ o][f=]{\\makebox(3,3 ) { } } } { } & { * + [ o][f-]{\\makebox(3,3 ) { } } } { } \\ar[l]^c   & { * + [ o][f-]{\\makebox(3,3 ) { } } } { } \\ar[l]^c & \\ar[l]^c \\cdots    } \\ ] ]",
    "in this section , we compare the expressiveness of recursion schemes to that of the low classes in the caucal hierarchy  @xcite .",
    "section  [ sect : definition - caucal ] gives a general overview of the caucal hierarchy .",
    "section  [ sect : first - levels ] presents in more details the properties of the graphs and trees sitting in the first levels of the hierarchy .",
    "section  [ sect : treesinch ] shows that the classes of synchronization trees we introduced belong to the caucal hierarchy .",
    "finally section  [ sec : charac - gamma - algebraic ] characterises the @xmath10-algebraic synchronization trees as contractions of the synchronization trees in the class @xmath746 .",
    "the caucal hierarchy ( also known as the pushdown hierarchy ) is a hierarchy of classes of edge - labelled graphs .",
    "following  @xcite , the caucal hierarchy is @xmath747 where @xmath748 and @xmath749 denote the classes of finite , edge - labelled trees and graphs , respectively .",
    "moreover , for each @xmath95 , @xmath750 stands for the class of trees isomorphic to unfoldings of graphs in @xmath751 , and the graphs in @xmath752 are those that can be obtained from the trees in @xmath750 by applying a monadic interpretation ( or transduction )  @xcite .",
    "as shown by caucal in @xcite , every graph in the caucal hierarchy has a decidable theory for monadic second order logic .",
    "[ rem : rooted - graphs ] for a graph @xmath753 and a vertex @xmath85 of @xmath212 , the graph @xmath754 obtained by restricting @xmath212 to the set of vertices reachable from @xmath85 is also a graph in @xmath755 @xcite . in particular",
    ", we can always assume that a tree in @xmath750 is obtained by unfolding a graph in @xmath755 from one of its root .",
    "= [ circle , draw = black , fill = black , inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0 mm , outer sep= 0 mm ] = [ font=,label distance=-1 mm ] = [ draw , rectangle ]    = [ thick , decoration = markings , mark = at position 1 with , double distance=1.4pt , shorten > = 5.5pt , preaction = decorate , postaction = draw , line width=1.4pt , white , shorten > = 4.5pt ]    ; ( h0 ) edge[- > ] node[right ] @xmath199 ( h1 ) ( h1 ) edge[- > ] node[below ] @xmath12 ( h2 ) ( h2 ) edge[- > ] node[below ] @xmath145 ( h3 ) ( h0 ) edge[- > ] node[above ] @xmath199 ( g0 ) ( g0 ) edge[- > ] node[right ] @xmath199 ( g1 ) ( g0 ) edge[loop above ] node[above ] @xmath199 ( g0 ) ;    ; ( h1 ) edge[- > ] node[above ] @xmath199 ( h2 ) ( h2 ) edge[- > ] node[above ] @xmath199 ( h3 ) ( h1 ) edge[- > ] node[right ] @xmath199 ( h7 ) ( h2 ) edge[- > ] node[right ] @xmath199 ( h8 ) ( h3 ) edge[- > ] node[right ] @xmath199 ( h9 ) ( h7 ) edge[- > ] node[below ] @xmath12 ( h6 ) ( h6 ) edge[- > ] node[below ] @xmath145 ( h5 ) ( h3 ) edge[dashed ] ( h4 ) ;    ; ( h1 ) edge[- > ] node[above ] @xmath199 ( h2 ) ( h2 ) edge[- > ] node[above ] @xmath199 ( h3 ) ( h1 ) edge[- > ] node[right ] @xmath199 ( h7 ) ( h2 ) edge[- > ] node[right ] @xmath199 ( h8 ) ( h3 ) edge[- > ] node[right ] @xmath199 ( h9 ) ( h7 ) edge[- > ] node[below ] @xmath12 ( h6 ) ( h6 ) edge[- > ] node[below ] @xmath145 ( h5 ) ( h3 ) edge[dashed ] ( h4 ) ( h8 ) edge[- > ] node[below ] @xmath12 ( h7 ) ( h9 ) edge[- > ] node[below ] @xmath12 ( h8 ) ;    ; ( h1 ) edge[- > ] node[above ] @xmath199 ( h2 ) ( h2 ) edge[- > ] node[above ] @xmath199 ( h3 ) ( h1 ) edge[- > ] node[right ] @xmath199 ( g1 ) ( h2 ) edge[- > ] node[right ] @xmath199 ( g2 ) ( h3 ) edge[- > ] node[right ] @xmath199 ( g3 ) ( g1 ) edge[- > ] node[right ] @xmath12 ( i1 ) ( g2 ) edge[- > ] node[right ] @xmath12 ( i2 ) ( g3 ) edge[- > ] node[right ] @xmath12 ( i3 ) ( i1 ) edge[- > ] node[right ] @xmath145 ( j1 ) ( i2 ) edge[- > ] node[right ] @xmath12 ( j2 ) ( i3 ) edge[- > ] node[right ] @xmath12 ( j3 ) ( j2 ) edge[- > ] node[right ] @xmath145 ( k2 ) ( j3 ) edge[- > ] node[right ] @xmath12 ( k3 ) ( k3 ) edge[- > ] node[right ] @xmath145 ( l3 ) ( h3 ) edge[dashed ] ( h4 ) ;    ;    ( h1 ) edge[- > ] node[above left ] @xmath12 ( g1 ) ( h1 ) edge[- > ] node[left ] @xmath12 ( g2 ) ( h1 ) edge[- > ] node [ left ] @xmath12 ( g3 )    ( g1 ) edge[- > ] node[left ] @xmath145 ( i1 ) ( g2 ) edge[- > ] node[right ] @xmath12 ( i2 ) ( g3 ) edge[- > ] node[right ] @xmath12 ( i3 )    ( i2 ) edge[- > ] node[right ] @xmath145 ( j2 ) ( i3 ) edge[- > ] node[right ] @xmath12 ( j3 )    ( j3 ) edge[- > ] node[right ] @xmath145 ( k3 )    ( h1 ) edge[dashed ] ( d ) ;    ( 2.5cm,-0 cm ) edge[vecarrow ] node[above ] @xmath756 ( 4.5cm,-0 cm ) ; ( 4.5cm,-1 cm ) edge[vecarrow ] node[above left ] @xmath757 ( 2.5cm,-2.5 cm ) ; ( 2.5cm,-3 cm ) edge[vecarrow ] node[above ] @xmath756 ( 4.5cm,-3 cm ) ; ( 4.5cm,-4 cm ) edge[vecarrow ] node[above left ] @xmath758 ( 2.5cm,-5.5 cm ) ;    figure  [ fig : caucal ] shows a sequence of transformations constructing the synchronization tree @xmath560 starting from a finite graph .",
    "the vertices from which the graphs are unfolded are signalled by an incoming arrow .",
    "the mso - interpretation @xmath757 adds an @xmath12-labelled edge from a vertex @xmath86 to a vertex @xmath85 if @xmath86 has no outgoing edges and there exist two vertices @xmath156 and @xmath16 with @xmath759 , @xmath760 , @xmath761 .",
    "the mso - interpretation @xmath758 is the @xmath762-contraction operation .",
    "the class @xmath763 contains the regular trees of finite outdegree ( i.e. , the trees of finite degree having finitely many non - isomorphic subtrees ) .",
    "it is well known that @xmath764 is the set of all prefix - recognizable graphs  @xcite .",
    "a _ prefix recognizable relation _ over a finite alphabet @xmath109 is a finite union of relations of the form denotes the relation @xmath765 . ]",
    "@xmath766 , for some nonempty regular languages @xmath767 .",
    "prefix recognizable graph _ over an alphabet @xmath183 is an edge - labelled graph that is isomorphic to a graph of the form @xmath768 , where for some alphabet @xmath109 , @xmath75 is a regular subset of @xmath769 and the edge relations @xmath770 are prefix recognizable relations over @xmath109 .",
    "( of course , the alphabet @xmath109 may be fixed to be a 2-element alphabet . )",
    "[ prop : level - one ] for a labelled graph @xmath212 , the following statements are equivalent :    * @xmath212 belongs to @xmath771 , * @xmath212 is isomorphic to a prefix - recognizable graph @xcite , * @xmath212 can be mso - interpreted in the full binary tree @xmath772 @xcite .",
    "[ prop : det - closure ] let @xmath212 be a graph in @xmath771 labelled in @xmath74 , and let @xmath230 be a root of @xmath212 .",
    "the graph @xmath212 is isomorphic to the @xmath183-contraction of a deterministic graph @xmath773 labelled in @xmath182 from one of its root @xmath774 .",
    "moreover @xmath754 can be chosen such that for any @xmath143 and any two vertices @xmath86 and @xmath85 belonging to the @xmath183-contraction from @xmath774 , there exists at most one path from @xmath86 to @xmath85 labelled by a word in @xmath193 .",
    "let @xmath775 be a prefix - recognizable graph labelled in @xmath74 .",
    "we may assume , without loss of generality , that the vertices in @xmath75 are words over the alphabet @xmath776 .",
    "moreover we may assume that the relations @xmath777 , @xmath143 , can be expressed as the disjoint union of relations @xmath778 .",
    "in addition , we may require that @xmath779 , for all @xmath780 $ ] where @xmath781 ( * ? ? ?",
    "* proposition 2.1 ) .",
    "these assumptions guarantee that if @xmath782 belongs to @xmath777 , then there exists a unique @xmath780 $ ] and a unique decomposition @xmath783 and @xmath784 such that @xmath785 and @xmath786 .    before proceeding with the construction ,",
    "we need to introduce some notations .",
    "let @xmath143 and let @xmath780 $ ] .",
    "we take @xmath787 to be a complete dfa accepting the reverse of @xmath788 and @xmath789 to be a complete dfa accepting @xmath790 .",
    "we assume that the sets of states of these automata are pairwise disjoint and we take @xmath791 } q_{a , i}$ ] and @xmath792 } q_{a , i}'$ ] .",
    "we are now going to define a prefix - recognizable graph @xmath793 satisfying the properties stated above .",
    "the set of labels @xmath183 is @xmath794 \\}$ ] .",
    "the vertices of @xmath754 are words over the alphabet @xmath795 \\ } \\cup \\ { \\star \\}$ ] .",
    "intuitively , the graph @xmath754 is constructed in such a way that a path labelled by a word in @xmath796 from a vertex @xmath797 to a vertex @xmath798 simulates the relation @xmath799 for @xmath143 and @xmath800 $ ] .",
    "for a fixed @xmath143 and @xmath780 $ ] , the simulation is done using two sets of vertices @xmath801 and @xmath802 . starting from a vertex @xmath797 ,",
    "the vertices in @xmath788 are used to remove a suffix @xmath85 of @xmath171 belonging to @xmath788 and the vertices in @xmath803 are used to add a suffix @xmath460 in @xmath790 .",
    "when moving from the vertices in @xmath788 to the vertices in @xmath804 , we check that the remaining prefix @xmath86 belongs to @xmath805 .",
    "this guarantees that @xmath171 and @xmath237 can be respectively written as @xmath806 and @xmath807 with @xmath785 and @xmath786 .    formally , from a vertex @xmath797 ,",
    "there is an edge labelled @xmath808 to the vertex @xmath809 ( cf .",
    "( 1 ) below ) . for all words @xmath810 and for all @xmath811 , @xmath812 ( cf . ( 2 ) below ) . if @xmath813 belongs to @xmath805 and @xmath814 , @xmath815 ( cf .",
    "( 3 ) below ) . for all words @xmath810 and for all @xmath816 , @xmath817 ( cf . ( 4 ) below ) . finally , for @xmath813 and @xmath818 , we have @xmath819 ( cf .",
    "( 5 ) and ( 6 ) below ) .",
    "the set of vertices @xmath820 is taken to be @xmath821 .",
    "the edges of @xmath754 are defined , for all @xmath143 , @xmath780 $ ] , @xmath822 , @xmath823 and @xmath824 , by : @xmath825 u\\,b q ( a , i ) & { \\overset{e_{0}}{\\underset{h}{\\longrightarrow } } } & &   u \\,\\delta_{a , i}(q , b )    & & \\text{for $ b \\in \\{0,1\\}$ } & ( 2 ) \\\\[1em ] u\\,q ( a , i )   & { \\overset{e_{1}}{\\underset{h}{\\longrightarrow } } } & & u \\,q_{a , i } ' ( a , i )   & & \\text{if}\\ ; q \\in f_{i , a } { \\;\\text{and}\\;}u \\in u & ( 3 ) \\\\[1em ] u\\ , q ' ( a , i ) & { \\overset{e_{0}}{\\underset{h}{\\longrightarrow } } } & & ub \\,\\delta_{a , i}'(q , b ) ( a , i )   & & \\text{for $ b \\in \\{0,1\\}$ } & ( 4 ) \\\\[1em ]   u \\,q ' ( a , i )   & { \\overset{e_{2}}{\\underset{h}{\\longrightarrow } } } & & u \\ , \\star ( a , i )   & & \\text{if}\\ ;",
    "q ' \\in f_{a , i } '   & ( 5)\\\\[1em ] u \\,\\star ( a , i )   & { \\overset{a}{\\underset{h}{\\longrightarrow } } } & & u & & \\text{for $ u \\in v$ }    & ( 6)\\\\ \\end{array}\\ ] ]    the graph @xmath754 is a deterministic prefix - recognizable graph .",
    "we have already seen that :    for all @xmath826 , if @xmath827 then there exists a path in @xmath754 labelled in @xmath796 from @xmath171 to @xmath237 .",
    "it remains to show the other direction .    for all @xmath826",
    ", if there exists a path from @xmath171 to @xmath237 in @xmath754 labelled in @xmath193 then this path is unique and @xmath827 .",
    "let @xmath826 be such that there exists a path from @xmath171 to @xmath237 in @xmath754 labelled in @xmath193 . by the construction of @xmath754 , there exist @xmath780 $ ] , and @xmath520 and @xmath828 with @xmath783 and @xmath829 such that the path is of the form @xmath830 with @xmath831 , @xmath832 and @xmath833 .",
    "it follows that @xmath782 belongs to @xmath799 . as remarked before ,",
    "the index @xmath292 is unique and so is the decomposition into @xmath520 and @xmath460 .",
    "hence the uniqueness of the path follows .    from the above two claims",
    ", it follows that the @xmath183-contraction of @xmath754 is equal to @xmath212 .",
    "as first remarked in @xcite , the graphs in @xmath771 can be obtained by a form of contraction - contraction keeps the vertices that are the source of an edge in @xmath74 and adds an edge labelled by @xmath143 between two such vertices whenever there is a path labelled in @xmath834 .",
    "] of the configurations graph of pushdown automata @xcite .",
    "let us now consider the class @xmath746 .",
    "the main property of the class @xmath746 is that it contains the @xmath20-term trees defined by any @xmath20-algebraic recursion scheme for any signature @xmath20 .",
    "as @xmath746 only contains labelled trees , we need to fix a representation of @xmath20-term trees as labelled trees .",
    "we follow the one from @xcite which is slightly different from the one presented in section  [ sec : morphism ] ( see also remark  [ rem : ht - caucal ] ) . a @xmath20-term tree @xmath16 is represented by a tree @xmath15 labelled by @xmath835 where @xmath265 is the maximum rank of a symbol of @xmath20 .",
    "the vertices of @xmath15 are prefixes of sequences of the form @xmath836 where @xmath837 is the root of @xmath16 , @xmath838 is a leaf of @xmath16 and for all @xmath245 $ ] , @xmath839 is the @xmath840-th successor of @xmath841 .",
    "let @xmath86 be a vertex of @xmath16 labelled by @xmath842 , if @xmath460 and @xmath843 are vertices of @xmath15 then there is an edge from @xmath460 to @xmath843 labelled by @xmath12 .",
    "let @xmath844 $ ] , if @xmath460 and @xmath845 are vertices of @xmath15 then there is an edge from @xmath460 to @xmath845 labelled by @xmath846 .",
    "this representation is illustrated in figure  [ fig : representation - caucal ] for the @xmath13-term @xmath847 .",
    "= [ circle , draw = black , fill = black , inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0 mm , outer sep= 0 mm ] = [ font=,label distance=-1 mm ] = [ level distance=0.85cm , sibling distance=1 cm ] = [ level distance=0.85cm , sibling distance=1.25 cm ]    child node[label=[l]left:@xmath485 @xmath141 child node[label=[l]left:@xmath487 @xmath12 child node[label=[l]right:@xmath488 @xmath17 child node[label=[l]right:@xmath486 @xmath202 ;    child node[n , label=[l]right:@xmath848 child node[n , label=[l]left:@xmath849 child node[n , label=[l]left:@xmath850 child node[n , label=[l]left:@xmath851 child node[n , label=[l]left:@xmath852 edge from parent node[draw = none , left ] @xmath12 edge from parent node[draw = none , left ] @xmath853 child node[n , label=[l]right:@xmath854 child node[n , label=[l]right:@xmath855 edge from parent node[draw = none , right ] @xmath17 edge from parent node[draw = none , right ] @xmath856 edge from parent node[draw = none , left ] @xmath141 edge from parent node[draw = none , left ] @xmath853 child node[n , label=[l]right:@xmath857 child node[n , label=[l]right:@xmath858 edge from parent node[draw = none , right ] @xmath202 edge from parent node[draw = none , right ] @xmath856 edge from parent node[draw = none , left ] @xmath142 ;    [ theorem : caucal ] let @xmath20 be a signature .",
    "a @xmath20-term tree is defined by some @xmath20-algebraic recursion scheme if and only if the tree representing it belongs to @xmath746 .",
    "[ rem : ht - caucal ] it immediately follows that the synchronization tree @xmath530 associated to a @xmath10-term tree @xmath16 defined in section  [ sec : morphism ] belongs to @xmath746 ( resp .",
    "@xmath763 ) whenever @xmath16 is defined by a @xmath10-algebraic ( resp .",
    "@xmath10-regular ) recursion scheme .",
    "indeed the transformation going from the presentation of @xcite to ours is an mso - interpretation that commutes with the unfolding operation .",
    "we conclude with some properties of the trees of @xmath746 and their contractions .",
    "[ prop : trees - in - trees2 ] the following properties hold :    1 .",
    "the contraction of a tree in @xmath746 is bisimilar to some tree in @xmath746 .",
    "every tree in @xmath746 can be obtained as the contraction of a deterministic tree in @xmath746 .    as illustrated in figure  [ fig : counter - example ]",
    ", the contraction operation does not in general commute with the unfolding operation .",
    "however , it is easy to show that the contraction of the unfolding from a root @xmath230 and the unfolding of the contraction from the same root are bisimilar .",
    "= [ circle , draw = black , fill = black , inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0 mm , outer sep= 0 mm ] = [ font=,label distance=-1 mm ]    ;    \\(r ) edge[-latex ] node[above left ] @xmath199 ( s ) ( r ) edge[-latex ] node[above right ] @xmath199(t ) ( s ) edge[-latex ] node[below left ] @xmath12(u ) ( t ) edge[-latex ] node[below right ] @xmath12(u ) ( u ) edge[-latex ] node[right ] @xmath199 ( r ) ;    = [ level distance=0.85cm , sibling distance=1 cm ] child node[n ] child node[n ] child node[e ] edge from parent[dashed,- ] edge from parent node[left ] @xmath12 edge from parent node[left ] @xmath12 ;    = [ level distance=0.85cm , sibling distance=0.85 cm ] = [ level distance=0.85cm , sibling distance=1.75 cm ] child node[n ] child node[n ] child node[e ] edge from parent[dashed,- ] child node[e ] edge from parent[draw = none ] edge from parent node[draw = none , above left ] @xmath12 child node[n ] child node[e ] edge from parent[draw = none ] child node[e ] edge from parent[dashed,- ] edge from parent node[draw = none , above right ] @xmath12 edge from parent node[draw = none , above left ] @xmath12 child node[n ] child node[n ] child node[e ] edge from parent[dashed,- ] child node[e ] edge from parent[draw = none ] edge from parent node[draw = none , above left ] @xmath12 child node[n ] child node[e ] edge from parent[draw = none ] child node[e ] edge from parent[dashed,- ] edge from parent node[draw = none , above right ] @xmath12 edge from parent node[draw = none , above right ] @xmath12 ;     for the first property , let @xmath16 be a tree in @xmath746 which is obtained by unfolding a graph @xmath212 in @xmath771 from one of its roots @xmath230 .",
    "let @xmath15 be the @xmath183-contraction of @xmath16 from its root .",
    "the @xmath183-contraction @xmath859 of @xmath212 from @xmath230 also belongs to @xmath771 ( as the @xmath183-contraction is a particular case of mso - interpretation ) . from the previous remark , we have that @xmath15 is bisimilar to @xmath860 which belongs to @xmath861 as @xmath212 belongs to @xmath764 .    for the second property ,",
    "let @xmath16 be a tree in @xmath746 which is obtained by unfolding a graph @xmath212 in @xmath771 from one of its root @xmath230",
    ". furthermore assume that both @xmath16 and @xmath212 are labelled by @xmath74 . by proposition  [ prop : det - closure ]",
    ", @xmath212 can be obtained by @xmath183-contraction of a deterministic graph @xmath773 from one of its roots @xmath230 .    for the @xmath183-contraction to commute with the unfolding ,",
    "it is enough that the graph @xmath754 satisfies , for any label @xmath143 and any two vertices @xmath86 and @xmath85 of @xmath754 belonging to the @xmath183-contraction , that there exists at most one path labelled in @xmath193 from @xmath86 to @xmath85 .",
    "this is the case for the graph @xmath754 obtained from proposition  [ prop : det - closure ] . hence @xmath16 is isomorphic to the @xmath183-contraction of @xmath862 , which is a deterministic tree in @xmath746 .      the @xmath10-regular synchronization trees , being the regular trees with potentially infinite degree , belong to @xmath771 .",
    "as @xmath763 only contains the regular trees of finite degree , it does not contain the class of @xmath10-regular synchronization trees . in this section , we show that the classes of @xmath13-regular and @xmath10-algebraic synchronization trees are included in @xmath863 but not in @xmath746 .",
    "similarly , we establish that the class of @xmath13-algebraic trees is included in @xmath864 but not in @xmath865 .",
    "[ prop : carac ] the @xmath10-algebraic ( and hence the @xmath13-regular ) synchronization trees are contractions of trees in @xmath746 and hence belong to @xmath863 .",
    "let @xmath209 be a @xmath10-algebraic recursion scheme defining a @xmath10-term tree @xmath16 and a synchronization tree @xmath15 . from proposition  [ prop - gamma - hom ] ,",
    "@xmath15 is obtained by contraction of the synchronization tree @xmath530 with respect to @xmath866 . from (",
    "* theorem 3.5 ) ( cf .",
    "remark  [ rem : ht - caucal ] ) , we know that @xmath530 belongs to @xmath746 , and , as the contraction operation is a particular case of mso - interpretation , @xmath15 belongs to @xmath863 .",
    "there is a @xmath13-regular synchronization tree which is not in @xmath861 .",
    "consider the following @xmath13-regular recursion scheme : @xmath867 the synchronization tree @xmath16 defined by it has a single infinite branch @xmath868 ( with edges labelled a ) .",
    "the out - degree of each vertex @xmath869 is @xmath870 since it is the source of @xmath871 edges labelled @xmath145 .",
    "assume , towards a contradiction , that @xmath16 belongs to @xmath861 .",
    "hence @xmath16 is isomorphic to the unfolding of some graph @xmath754 in @xmath764 from a vertex @xmath471 . by remark  [ rem : rooted - graphs ]",
    ", we can assume that all vertices are reachable from @xmath471 and hence that they all have finite out - degree .",
    "this implies that @xmath754 contains a path @xmath872 along which the out - degree of the vertices grows exponentially ( i.e. the out - degree of @xmath291 is @xmath870 ) .",
    "the following lemma shows that this is not possible in @xmath771 .",
    "let @xmath212 be a graph in @xmath771 whose vertices have finite out - degree .",
    "let @xmath873 be an infinite path in @xmath212 , possibly with repetitions .",
    "then there exists a constant @xmath874 such that for all @xmath324 , the out - degree of @xmath869 is at most @xmath875 .    by proposition  [ prop : level - one ]",
    ", we can assume without loss of generality that @xmath212 is a prefix - recognizable graph .",
    "let @xmath876 be the relations involved in the definition of @xmath212 .",
    "as the vertices of @xmath212 have finite out - degree , without loss of generality we may assume that all the @xmath877 are finite sets .",
    "let @xmath376 denote the length of the longest word appearing in the @xmath877 , and let @xmath878 denote the number of words appearing in the @xmath877 .",
    "then clearly @xmath879 for all @xmath650 , where for a word @xmath86 we denote its length by @xmath880 .",
    "thus , introducing the notation @xmath881 , we have @xmath882 for all @xmath324 . as the out - degree of a vertex @xmath86 of @xmath212 is at most @xmath883 ,",
    "we conclude that the out - degree of @xmath869 is at most @xmath875 for all @xmath324 with @xmath884 .",
    "[ prop : delta - alg - in - graph3 ] all the @xmath13-algebraic synchronization trees are in @xmath864 and therefore have a decidable mso - theory .",
    "let @xmath209 be an algebraic scheme over @xmath13 .",
    "let @xmath16 be the @xmath13-term defined by @xmath209 , and @xmath15 be the synchronization tree defined by @xmath209 . by the mezei - wright theorem and proposition  [ prop - tau ] ,",
    "we have that @xmath885 .",
    "more precisely , the tree @xmath15 is obtained by unfolding the graph @xmath470 ( as defined in section  [ sec : morphism ] ) from the vertex @xmath222 and then applying a contraction with respect to @xmath886 .",
    "the graph @xmath470 can be interpreted in the tree representing @xmath16 , which belongs to @xmath746 ( by theorem  [ theorem : caucal ] ) , and hence @xmath470 belongs to @xmath863 .",
    "the unfolding of @xmath470 from @xmath222 belongs to @xmath865 and its contraction @xmath15 to @xmath864 ( as contractions are particular cases of mso - interpretations ) .",
    "there exists a @xmath13-algebraic synchronization tree which does not belong to @xmath865 .    in this proof",
    ", we consider @xmath887-labelled trees of a particular shape illustrated in figure  [ fig : td0 ] .",
    "these trees have a unique infinite branch whose edges are labelled @xmath12 .",
    "in addition the vertex at depth @xmath5 along this branch has @xmath888 outgoing edges labelled @xmath198 , for some mapping @xmath889 . up to isomorphism , the tree is entirely characterized by the mapping @xmath376 and is denoted @xmath890 .    in (",
    "* theorem  4.5.3 ) , braud gives a necessary condition for a tree of this form - graph - combs which encompasses all trees @xmath890 . ] to belong to @xmath891 .",
    "namely , if a tree @xmath890 , for @xmath889 belongs to @xmath891 then there exists a constant @xmath892 such that @xmath893 for all @xmath41 .",
    "our proof goes as follows .",
    "we first show that for the mapping @xmath894 , the tree @xmath895 , depicted in figure  [ fig : td0 ] , is @xmath13-algebraic . towards a contradiction",
    ", we assume that @xmath895 belongs to @xmath896 .",
    "we then show there would exist a mapping @xmath897 satisfying @xmath898 , @xmath899 such that @xmath900 belongs to @xmath891 .",
    "this statement contradicts braud s condition as there can not exist a constant @xmath202 such that @xmath901 , for all @xmath899 .",
    "consider the @xmath13-algebraic scheme @xmath902 the tree defined by this scheme is isomorphic to the tree @xmath895 with @xmath903 for all @xmath41 .",
    "= [ circle , draw = black , fill = black , inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0 mm , outer sep= 0 mm ] ( a0 ) at ( 0,0 ) ; ( a1 ) at ( 3,0 ) ; ( a2 ) at ( 6,0 ) ; ( b00 ) at ( -0.5,-1 ) ; ( b01 ) at ( 0.5,-1 ) ; ( b10 ) at ( 2,-1 ) ; ( b11 ) at ( 2.75,-1 ) ; ( b12 ) at ( 3.25,-1 ) ; ( b13 ) at ( 4,-1 ) ; ( b20 ) at ( 4.5,-1 ) ; ( b21 ) at ( 7.5,-1 ) ; ( a0 ) to[above ] node @xmath12 ( a1 ) ; ( a1 ) to[above ] node @xmath12 ( a2 ) ; ( a0 ) to[left ] node @xmath198 ( b00 ) ; ( a0 ) to[right ] node @xmath198 ( b01 ) ; ( a1 ) to[left ] node @xmath198 ( b10 ) ; ( a1 ) to[left ] node @xmath198 ( b11 ) ; ( a1 ) to[right ] node @xmath198 ( b12 ) ; ( a1 ) to[right ] node @xmath198 ( b13 ) ; ( a2 ) to[left ] node[yshift=1 mm ] @xmath198 ( b20 ) ; ( a2 ) to[right ] node[yshift=1 mm ] @xmath198 ( b21 ) ; ( a2 )  ( 9,0 ) ; ( a2 )  ( 5.5,-1 ) ; ( a2 )  ( 6.5,-1 ) ; ( b20 ) to node[below ] @xmath904 ( b21 ) ;    assume now , towards a contradiction , that @xmath895 belongs to @xmath865 . consider the graph @xmath212 in @xmath863 from which @xmath16 can be obtained by unfolding from one of its roots @xmath230 .    for all @xmath41 ,",
    "we denote by @xmath905 the unique vertex in @xmath212 such that @xmath906 and by @xmath102 the set of vertices @xmath907 . as @xmath908 , we must have @xmath909 for @xmath910 and @xmath911 for all @xmath41 .",
    "the set of vertices of @xmath212 is therefore equal to @xmath912 and its set of edges is : @xmath913    note that the sets @xmath102 are not necessarily pairwise disjoint and that in particular , @xmath212 is not necessarily a tree , as illustrated in figure  [ fig : transform ] .",
    "= [ circle , draw = black , fill = black , inner sep = 0.25 mm , outer sep= 0.5 mm ] = [ inner sep = 0 mm , outer sep= 0 mm ]    ( a0 ) at ( 0,0 ) ; ( a1 ) at ( 2,0 ) ; ( a2 ) at ( 4,0 ) ; ( b00 ) at ( -0.5,-1 ) ; ( b01 ) at ( 0.5,-1 ) ; ( b10 ) at ( 1.5,-1 ) ; ( b11 ) at ( 2,-1 ) ; ( b12 ) at ( 2.5,-1 ) ; ( a0 ) to[above ] node @xmath12 ( a1 ) ; ( a1 ) to[above ] node @xmath12 ( a2 ) ; ( a0 ) to[left ] node @xmath198 ( b00 ) ; ( a0 ) to[right ] node @xmath198 ( b01 ) ; ( a1 ) to[above ] node @xmath198 ( b01 ) ; ( a1 ) to[left ] node @xmath198 ( b10 ) ; ( a1 ) to[right ] node[xshift=-1 mm ] @xmath198 ( b11 ) ; ( a1 ) to[right ] node @xmath198 ( b12 ) ; ( a2 ) to[above ] node[xshift=4mm , yshift=1 mm ] @xmath198 ( b01 ) ; ( a2 ) to[below ] node @xmath198 ( b12 ) ; ( a2 )  ( 5,0 ) ; ( a2 )  ( 3.5,-1 ) ; ( a2 )  ( 4,-1 ) ; ( a2 )  ( 4.5,-1 ) ;    ( a0 ) at ( 0,0 ) ; ( a1 ) at ( 2,0 ) ; ( a2 ) at ( 4,0 ) ; ( b00 ) at ( -0.5,-1 ) ; ( b01 ) at ( 0.5,-1 ) ; ( b10 ) at ( 1.5,-1 ) ; ( b11 ) at ( 2,-1 ) ; ( b12 ) at ( 2.5,-1 ) ; ( a0 ) to[above ] node @xmath12 ( a1 ) ; ( a1 ) to[above ] node @xmath12 ( a2 ) ; ( a0 ) to[left ] node @xmath198 ( b00 ) ; ( a0 ) to[right ] node @xmath198 ( b01 ) ; ( a1 ) to[left ] node @xmath198 ( b10 ) ; ( a1 ) to[right ] node[xshift=-1 mm ] @xmath198 ( b11 ) ; ( a1 ) to[right ] node @xmath198 ( b12 ) ; ( a2 )  ( 5,0 ) ; ( a2 )  ( 3.5,-1 ) ; ( a2 )  ( 4,-1 ) ; ( a2 )  ( 4.5,-1 ) ;    consider the mso - interpretation @xmath261 that erases the @xmath198-labelled edges @xmath89 whenever there exists a vertex @xmath156 such that @xmath914 and @xmath915 and keeps all other edges unchanged . by applying @xmath261 to @xmath212 ( as illustrated in figure  [ fig :",
    "transform ] , we obtain a tree @xmath916 with the same set of vertices as @xmath212 .",
    "this tree has a unique infinite branch @xmath917 and , for all @xmath41 , the vertex @xmath905 has outgoing edges labelled @xmath198 to the vertices in @xmath918 the tree @xmath256 is hence isomorphic to @xmath900 where @xmath919 for all @xmath41 . to obtain a contradiction with ( * ? ? ?",
    "* theorem  4.5.3 ) , we remark that for all @xmath899 , we have : @xmath920            & \\geq &   2^{2^n } - n \\cdot 2^{2^{n-1 } } \\\\            & \\geq   &   2^{2^{n-1 } } ( 2^{2^{n-1 } } - n ) \\\\            & \\geq   &   2^{2^{n-1}}. \\\\ \\end{array}\\ ] ]      in this section , we prove theorem  [ thm : carac - gamma - algebraic ] which states that @xmath10-algebraic synchronization trees are the contractions of trees in @xmath746 .",
    "we start by showing that the synchronization trees in @xmath746 are @xmath10-algebraic .",
    "[ prop : tree2-inc - alg ] synchronization trees in @xmath746 are @xmath10-algebraic .",
    "let @xmath16 be a synchronization tree in @xmath746 .",
    "by the first property of proposition  [ prop : trees - in - trees2 ] , @xmath16 is the @xmath183-contraction of a deterministic tree @xmath921 labelled by @xmath224 . as @xmath10-algebraic synchronization trees are closed under contraction ( see proposition  [ prop : contr - alg ] ) , it is enough to show that @xmath15 is @xmath10-algebraic .",
    "we are going to show that a tree @xmath922 representing a @xmath352-term tree defining @xmath15 belongs to @xmath746 .",
    "recall that @xmath352 is the signature @xmath923 allowing for sums of arbitrary arity that was introduced in remark  [ rem : arbitrary - rank - sum ] on page  .",
    "thanks to theorem  [ theorem : caucal ] , this implies that @xmath922 is defined by a @xmath352-algebraic recursion scheme . in turn this implies that @xmath15 is @xmath352-algebraic and hence @xmath10-algebraic ( see remark  [ rem : arbitrary - rank - sum ] ) .",
    "let @xmath924 be an arbitrary total order on @xmath74 .",
    "the tree @xmath922 is obtained by applying a transduction @xmath925 to @xmath15 .",
    "this transduction @xmath925 does the following :    * whenever a vertex @xmath85 is the target of an edge labelled in @xmath74 and is not the source of an edge , then the transduction adds a new edge labelled @xmath17 from @xmath85 to a new vertex introduced by the transduction . * for every vertex @xmath86 with @xmath926 outgoing edges labelled @xmath927 , respectively , going to vertices @xmath928 , the transduction adds new vertices @xmath85 , @xmath929 , @xmath930 and edges @xmath931 , @xmath932 and @xmath933 .",
    "if @xmath86 has an outgoing edge labelled by @xmath145 to a vertex @xmath85 then the transduction adds a vertex @xmath188 and two edges @xmath934 and @xmath935 . *",
    "all the edges of the original structure are removed .",
    "the tree @xmath922 obtained by applying @xmath925 to @xmath15 represents a term tree that defines @xmath15 .",
    "as @xmath15 belongs to @xmath746 , it is ( up to isomorphism ) obtained by unfolding a graph @xmath936 from one of its roots @xmath230 .",
    "furthermore it can be checked that the transduction @xmath925 commutes with the unfolding operation .",
    "hence the tree @xmath922 is isomorphic to @xmath937 and therefore belongs to @xmath746 ( as @xmath938 belongs to @xmath771 ) .",
    "[ thm : carac - gamma - algebraic ] the contractions of the synchronization trees in @xmath746 are the @xmath10-algebraic synchronization trees .    by propositions  [ prop : tree2-inc - alg ] and  [ prop : contr - alg ]",
    ", we have that each contraction of a synchronization tree in @xmath746 is @xmath10-algebraic . for the converse",
    ", a @xmath10-algebraic synchronization tree is defined as the contraction with respect to @xmath939 of the @xmath10-term tree defined by an algebraic scheme over @xmath10 . from (",
    "* theorem 3.5 ) , such a @xmath10-term tree belongs to @xmath861 .",
    "moreover , it may be seen as a synchronization tree over the alphabet which contains , in addition to the letters in @xmath74 , the symbols @xmath427 and @xmath431 .",
    "thanks to the second property of proposition  [ prop : trees - in - trees2 ] , we have the following corollary .",
    "every @xmath10-algebraic tree is bisimilar to a tree in @xmath746 .",
    "call a synchronization tree * bounded * if there is a constant @xmath731 such that the outdegree of each vertex is at most @xmath731",
    ". our aim in this section will be to offer a language - theoretic characterization of the expressive power of @xmath10-algebraic recursion schemes defining synchronization trees .",
    "we shall do so by following courcelle ",
    "see , e.g. ,  @xcite  and studying the branch languages of synchronization trees whose vertices have bounded outdegree .",
    "more precisely , we assign a family of branch languages to each bounded synchronization tree over an alphabet @xmath74 and show that a bounded tree is @xmath10-algebraic if , and only if , the corresponding language family contains a deterministic context - free language ( dcfl ) . throughout this section",
    ", we will call @xmath10-algebraic trees just algebraic trees , and similarly for regular trees .",
    "suppose that @xmath73 is a bounded synchronization tree over the alphabet @xmath74 .",
    "denote by @xmath731 the maximum of the outdegrees of the vertices of @xmath16 .",
    "let @xmath183 denote the alphabet @xmath940 $ ] .",
    "a * determinization of @xmath16 * is a tree @xmath941 over the alphabet @xmath183 which differs from @xmath16 only in the labelling as follows .",
    "suppose that @xmath223 with outgoing edges @xmath942 labelled @xmath943 in @xmath16 .",
    "then there is some permutation @xmath253 of the set @xmath944 $ ] such that the label of each @xmath945 in @xmath15 is @xmath946 .",
    "consider a determinization @xmath15 of @xmath16 .",
    "let @xmath223 and let @xmath947 denote the vertices on the unique path from the root to @xmath85 .",
    "the * branch word * corresponding to @xmath85 in @xmath15 is the alternating word @xmath948 where @xmath949 denote the outdegrees of the vertices @xmath950 , and for each @xmath951 $ ] , @xmath952 is the label of the edge @xmath953 in @xmath15 .",
    "the * branch language * @xmath954 corresponding to a determinization @xmath15 of @xmath16 consists of all branch words of @xmath15 .",
    "finally , the family of branch languages corresponding to @xmath16 is : @xmath955    @xmath368 & { * + [ o][f=]{\\makebox(4,4 ) { } } } { } \\ar@<1ex>[d]^c \\ar@<1ex>[r]^a & { * + [ o][f-]{\\makebox(4,4 ) { } } } { } \\ar@<1ex>[d]^c \\ar@<1ex>[r]^a \\ar@<1ex>[l]^b   & { * + [ o][f-]{\\makebox(4,4 ) { } } } { } \\ar@<1ex>[d]^c \\ar@<1ex>[r]^a \\ar@<1ex>[l]^b & { * + [ o][f-]{\\makebox(4,4 ) { } } } { } \\ar@<1ex>[d]^c \\ar@<1ex>[r]^a \\ar@<1ex>[l]^b & \\cdots   \\ar@<1ex>[l]^b \\\\   & { * + [ o][f-]{\\makebox(4,4 ) { } } } { } \\ar@<1ex>[u]^d \\ar@<1ex>[r]^a \\ar@<1ex>[d]^c & { * + [ o][f-]{\\makebox(4,4 ) { } } } { } \\ar@<1ex>[u]^d \\ar@<1ex>[r]^a \\ar@<1ex>[l]^b \\ar@<1ex>[d]^c &   { * + [ o][f-]{\\makebox(4,4 ) { } } } { } \\ar@<1ex>[u]^d \\ar@<1ex>[r]^a \\ar@<1ex>[l]^b \\ar@<1ex>[d]^c & { * + [ o][f-]{\\makebox(4,4 ) { } } } { } \\ar@<1ex>[u]^d   \\ar@<1ex>[d]^c \\ar@<1ex>[r]^a \\ar@<1ex>[l]^b & \\cdots \\ar@<1ex>[l]^b \\\\   & { * + [ o][f-]{\\makebox(4,4 ) { } } } { } \\ar@<1ex>[u]^d \\ar@<1ex>[r]^a \\ar@<1ex>[d]^c & { * + [ o][f-]{\\makebox(4,4 ) { } } } { } \\ar@<1ex>[u]^d \\ar@<1ex>[r]^a \\ar@<1ex>[l]^b \\ar@<1ex>[d]^c &   { * + [ o][f-]{\\makebox(4,4 ) { } } } { } \\ar@<1ex>[u]^d \\ar@<1ex>[r]^a \\ar@<1ex>[l]^b \\ar@<1ex>[d]^c & { * + [ o][f-]{\\makebox(4,4 ) { } } } { } \\ar@<1ex>[u]^d \\ar@<1ex>[r]^a \\ar@<1ex>[l]^b \\ar@<1ex>[d]^c & \\cdots \\ar@<1ex>[l]^b \\\\ &   \\vdots \\ar@<1ex>[u]^d & \\vdots \\ar@<1ex>[u]^d & \\vdots \\ar@<1ex>[u]^d & \\vdots \\ar@<1ex>[u]^d & \\vdots   } \\ ] ]    by way of example , consider the lts depicted in figure  [ fig : bag ] .",
    "this lts describes the behaviour of a bag over a four - letter alphabet , when we consider @xmath198 to stand for the output of an item that was input via @xmath12 , and @xmath376 to signal the output of an item that was input via @xmath202 .",
    "the synchronization tree @xmath956 that is obtained by unfolding this lts from its start state is bounded .",
    "in fact , the outdegree of each non - leaf node is three or four .",
    "the branch words corresponding to the nodes of any determinization of the tree @xmath956 have the form @xmath957 where @xmath958 , @xmath959 , @xmath960 for each @xmath961 $ ] , each @xmath962 $ ] for @xmath951 $ ] and @xmath963 is a word with the property that , in any of its prefixes , the number of occurrences of the letter @xmath12 is greater than or equal to the number of occurrences of the letter @xmath198 , and the number of occurrences of the letter @xmath202 is greater than or equal to the number of occurrences of the letter @xmath376 .",
    "moreover , for each @xmath951 $ ] , @xmath964 if and only if @xmath965 and @xmath966 .",
    "( note that , when @xmath967 , the number of @xmath12 s in @xmath968 equals the number of @xmath198 s , and similarly for @xmath202 and @xmath376 . )",
    "[ thm - dcfl ] a bounded synchronization tree @xmath16 is algebraic ( respectively , regular ) iff @xmath969 contains a dcfl ( respectively , regular language ) .    in the proof , we make use of the following construction .",
    "suppose that @xmath970 is a bounded synchronization tree over @xmath74 .",
    "let @xmath731 be defined as above , and let @xmath20 be the signature containing the symbol @xmath971 of rank @xmath292 for each @xmath972 $ ] , the constant symbols @xmath17 and @xmath1 , and the letters of @xmath74 as symbols of rank @xmath1 .",
    "we will sometimes write @xmath973 for @xmath17",
    ". then each determinization @xmath15 of @xmath16 naturally corresponds to an ` alternating ' _ term tree _ @xmath974 in the initial continuous categorical @xmath20-algebra @xmath396 . as a partial function @xmath975",
    ", the term tree @xmath974 is defined as follows . consider a vertex @xmath223 with corresponding branch word @xmath976 .",
    "then @xmath974 is defined on both words @xmath977 and @xmath978 , and @xmath979 in addition , @xmath974 is defined on the empty word @xmath386 and @xmath980 , where @xmath981 is the outdegree of the root .",
    "[ lem - a ] suppose that @xmath982 is bounded and has a determinization @xmath15 such that the @xmath20-term tree @xmath974 is algebraic ( regular , resp . )",
    ". then @xmath16 is algebraic ( regular , resp . ) .",
    "we can turn @xmath92 into a continuous categorical @xmath20-algebra by defining @xmath983 for each @xmath972 $ ] and @xmath984 , and similarly for morphisms between trees in @xmath92 . now up to natural isomorphism , there is a unique categorical @xmath20-algebra morphism @xmath985 . for any @xmath542 and for any determinization @xmath15 of @xmath16 , @xmath154 maps @xmath974 to a tree isomorphic to @xmath16 . since , by the mezei - wright theorem @xcite , @xmath986 preserves algebraic and regular objects , if @xmath974 is algebraic or regular , then so is @xmath16 .",
    "[ lem - b ] suppose that @xmath542 is bounded and algebraic ( regular , resp . ) .",
    "then @xmath16 has a determinization @xmath15 such that the @xmath20-term tree @xmath974 is algebraic ( regular , resp . ) .",
    "suppose that @xmath16 is algebraic and bounded by @xmath731 .",
    "then , by the mezei - wright theorem @xcite , there is an algebraic term tree @xmath987 such that @xmath988 is isomorphic to @xmath16 , where @xmath989 denotes the essentially unique continuous categorical @xmath10-algebra morphism @xmath528 .",
    "we want to show that there is an alternating algebraic @xmath20-term tree @xmath990 such that @xmath991 is isomorphic to @xmath16 , where @xmath986 is the essentially unique continuous categorical @xmath20-algebra morphism @xmath992 .",
    "since such a term tree @xmath993 is @xmath974 for some determinization @xmath15 of @xmath16 , this completes the proof .",
    "we construct @xmath993 from @xmath994 in two steps .",
    "first , we replace all maximal subterms all of whose vertices are labelled @xmath141 or @xmath17 by a single vertex labelled @xmath17 to obtain a @xmath10-term tree @xmath995 .",
    "second , we consider vertices of @xmath995 labelled @xmath141 whose parent , if any , is labelled in @xmath74 . since @xmath16 is bounded by @xmath731 , the subterm rooted at such a vertex can be written as @xmath996 , where @xmath997 is a finite term all of whose vertices are labelled @xmath141 or @xmath17 or a variable in the set @xmath998 for some @xmath999 , whose frontier word is @xmath1000 , and each @xmath1001 is a @xmath10-term tree whose root is labelled in @xmath1002 .",
    "we replace each such vertex by a vertex labelled @xmath1003 having @xmath5 outgoing edges labelled @xmath1004 connecting this vertex to the roots of @xmath1005 , respectively .",
    "the first transformation is a monadic colouring @xcite ( a special case of monadic interpretation , which is also known as monadic marking  @xcite ) , since there is a monadic second - order formula @xmath1006 characterizing those vertices @xmath171 of @xmath994 such that all vertices of the subterm rooted at @xmath171 are labelled @xmath141 or @xmath17 , but any other subterm containing @xmath171 has a vertex labelled in @xmath1007 : @xmath1008 ( here , @xmath1009 denotes that there is a path from @xmath171 to @xmath237 and @xmath1010 stands for @xmath1011 .",
    "moreover , @xmath1012 denotes that @xmath1013 is labelled @xmath12 . )",
    "thus , the first transformation gives a @xmath10-algebraic term tree , since algebraic term trees ( and in fact deterministic algebraic trees in the caucal s pushdown hierarchy ) are closed under monadic colourings  ( * ? ? ? * proposition  1 ) .",
    "in order to prove that the second transformation also gives an algebraic term tree , we argue on the level of graphs .",
    "suppose that @xmath995 is the algebraic term tree obtained after the first step .",
    "since @xmath995 is algebraic , it is the unfolding of a ( deterministic ) prefix recognizable graph @xmath212 from its root @xmath230 , see  @xcite . without loss of generality",
    "we may assume that every vertex of @xmath212 is accessible from @xmath230 .",
    "our aim is to define a monadic transduction which , when applied to @xmath212 , produces a graph @xmath859 whose unfolding from vertex @xmath230 is @xmath993 . since , by proposition  1 in conjunction with lemma  2 in  @xcite , prefix recognizable graphs are closed under monadic transductions , it follows that @xmath993 is algebraic .",
    "we start by considering @xmath212 together with a disjoint copy of @xmath212 , whose vertices are ordered pairs @xmath1014 , where @xmath85 is vertex of @xmath212 .",
    "the label of a vertex @xmath1014 is the label of @xmath85 in @xmath212 .",
    "the edges are the edges of @xmath212 and an edge @xmath1015 labelled @xmath1016 for each vertex @xmath85 of @xmath212 .",
    "edges in @xmath212 retain their label .",
    "then we drop all vertices of the form @xmath1014 , where the label of @xmath85 is different from @xmath141 , using the formula @xmath1017 where the meaning of @xmath1018 is that there is an edge labelled @xmath1016 from @xmath237 to @xmath171 , which is satisfied by exactly those vertices @xmath1014 labelled @xmath141 .",
    "moreover , we define new edges .",
    "first of all , we keep all edges @xmath1019 of @xmath212 such that @xmath85 is labelled in @xmath74 , or @xmath85 is labelled @xmath141 but @xmath188 is not .",
    "each such edge retains its label .",
    "second , whenever @xmath85 and @xmath188 are both labelled @xmath141 in @xmath212 we introduce an edge @xmath1020 and an edge @xmath1021 whose label is the same as that of the edge @xmath1019 in @xmath212 . for this purpose",
    ", we use the formulas in the free variables @xmath1022 , @xmath1023 where @xmath1024 .",
    "last , for each edge @xmath1019 of @xmath212 such that @xmath85 is labelled @xmath141 but @xmath188 is not , we introduce an edge @xmath1025 whose label is that of the edge @xmath1019 .",
    "this is done by utilizing the formula @xmath1026 where again @xmath1024 .",
    "note that the unfolding of the graph constructed above from the vertex @xmath230 is @xmath995 .",
    "next , consider any vertex @xmath85 labelled @xmath141 together with all the paths originating in @xmath85 leading to a vertex labelled in @xmath454 . since @xmath15 is bounded by @xmath731 , each such path is simple and the number of such paths is at most @xmath731",
    "let @xmath1027 denote the ( not necessarily different ) end vertices of these paths , ordered ` lexicographically ' .",
    "we relabel @xmath85 by @xmath1003 and introduce a new edge @xmath1028 labelled @xmath292 for each @xmath292 .",
    "this is accomplished by using the following formulas .",
    "let @xmath1029 denote a formula that says that the set of vertices @xmath8 forms a path from @xmath171 to @xmath237 , the label of each vertex in @xmath8 other than @xmath237 is different from @xmath141 , and the label of @xmath237 is in @xmath454 .",
    "then for each @xmath5 , the formula @xmath1030 expresses that there are at least @xmath5 different paths from @xmath171 to some vertex @xmath237 labelled in @xmath472 , all of whose vertices different from @xmath237 are labelled @xmath141 . with the help of these formulas",
    "we can also express that there are exactly @xmath5 such paths from @xmath171 .",
    "finally , when @xmath1029 and @xmath1031 with @xmath1032 , we can express the fact that @xmath8 is lexicographically less than @xmath1033 by the formula @xmath1034    in addition to these new edges , we keep all edges originating from a vertex labelled in @xmath74 ( that are necessarily labelled @xmath1 ) .",
    "all vertices of the form @xmath1014 become inaccessible from @xmath230 .",
    "the unfolding of the new graph from vertex @xmath230 is almost an alternating term . in order to make it alternating , we have to add a new root labelled @xmath427 if @xmath230 is labelled in @xmath74 together with an edge to @xmath230 , and replace each edge @xmath1019 where both @xmath85 and @xmath188 are labelled in @xmath74 by new edges @xmath1035 and @xmath1036 , where @xmath86 is a new vertex labelled @xmath427 .",
    "these edges are labelled @xmath1 .",
    "the new graph is still obtained by monadic transduction , and its unfolding is the alternating term @xmath993 .",
    "the same argument works in the regular case using the fact that regular terms are unfoldings of finite ( deterministic ) graphs , and that finite graphs are closed under monadic transduction .",
    "_ proof of theorem  [ thm - dcfl ] .",
    "_ suppose that @xmath542 is bounded .",
    "if @xmath16 is algebraic , then by lemma  [ lem - b ] there is some determinization @xmath15 of @xmath16 such that @xmath974 is algebraic . by courcelle",
    "s theorem , the branch language of @xmath974 is a dcfl .",
    "but the branch language of @xmath974 is essentially @xmath954 .",
    "suppose now that @xmath16 has a determinization @xmath15 such that @xmath954 is a dcfl .",
    "then the branch language of @xmath974 is a dcfl , and thus by courcelle s theorem , @xmath974 is algebraic . the proof is completed by using lemma  [ lem - a ] .",
    "a similar reasoning applies in the regular case .",
    "the language - theoretic characterization of the class of bounded algebraic synchronization trees offered in theorem  [ thm - dcfl ] can be used to prove that certain trees are _ not _ algebraic .",
    "[ prop : bagnotalg ] the synchronization tree @xmath956 associated with the bag over a binary alphabet depicted on figure  [ fig : bag ] is not algebraic , even up to language equivalence .",
    "recall that the branch words corresponding to the nodes of any determinization of the tree @xmath956 have the form @xmath957 where @xmath958 , @xmath959 , @xmath960 for each @xmath961 $ ] , each @xmath962 $ ] for @xmath951 $ ] and @xmath963 is a word with the property that , in any of its prefixes , the number of occurrences of the letter @xmath12 is greater than or equal to the number of occurrences of the letter @xmath198 , and the number of occurrences of the letter @xmath202 is greater than or equal to the number of occurrences of the letter @xmath376 .",
    "moreover , @xmath1037 if and only if @xmath965 and @xmath966 .",
    "the words accepted by that lts are those that in addition satisfy that the total number of occurrences of the letter @xmath12 in @xmath963 is equal to the number of occurrences of the letter @xmath198 , and the number of occurrences of the letter @xmath202 in @xmath963 is equal to the number of occurrences of the letter @xmath376 and which end in @xmath17 .    if the language associated with any determinization of @xmath956 were context - free , then so would the language obtained by applying to each word in it the morphism that erases the letters @xmath1038 and renames each @xmath952 to @xmath1039 . however , that language is not context free .",
    "therefore , theorem  [ thm - dcfl ] yields that @xmath956 is not algebraic .",
    "the above proposition is a strengthening of a classic result from the literature on process algebra proved by bergstra and klop in  @xcite .",
    "indeed , in theorem  4.1 in  @xcite , bergstra and klop showed that the bag over a domain of values that contains at least two elements is not expressible in bpa .",
    "moreover , by proposition  [ prop : moreexpthanbpa ] , the collection of synchronization trees that are definable in bpa is strictly included in the set of @xmath10-algebraic ones ( theorem  [ thm : delta2gamma ] ) .",
    "therefore , proposition  [ prop : bagnotalg ] is stronger than the above - mentioned inexpressibility result by bergstra and klop , and offers an alternative proof for it .",
    "up to bisimilarity , we shall offer an even stronger statement in section  [ sect : mso - bag ] ( see proposition  [ prop : bag - bisim ] ) .    as a final result , we can use theorem  [ thm - dcfl ] to characterize the synchronization trees of bounded degree in @xmath746 .",
    "the synchronization trees of bounded - degree in @xmath1040 are the @xmath10-algebraic synchronization trees of bounded - degree .",
    "the direct inclusion is immediate . for the converse inclusion , we know by theorem  [ thm - dcfl ] that a @xmath10-algebraic synchronization tree of bounded - degree @xmath16 has a determinization @xmath15 whose branch language is a deterministic context - free language .",
    "in particular , this implies that @xmath15 belongs to @xmath746 . indeed from a deterministic pushdown automaton accepting the branch language of @xmath15",
    ", we can construct a deterministic graph @xmath936 whose unfolding from some root @xmath230 is isomorphic to @xmath15 .",
    "let @xmath1041 be the alphabet labelling @xmath212 .",
    "consider the transduction @xmath925 defined as follows :    * for every vertex @xmath86 , the transduction introduces new vertices @xmath928 ; * for every edge from @xmath86 to @xmath85 labelled by @xmath1042 , the transduction adds edges from each of the @xmath1043 , @xmath1044 $ ] , to @xmath1045 labelled by @xmath12 .    unfolding",
    "the graph @xmath938 from any of the vertices added by the transduction @xmath925 for the root @xmath230 gives a tree isomorphic to @xmath16 .",
    "note that in the previous proof , @xmath925 can not simply rename the edges labelled @xmath1046 to @xmath12 .",
    "consider for instance the case where @xmath212 consists of two vertices @xmath230 and @xmath156 and two edges @xmath1047 and @xmath1048 .",
    "applying such a transduction would lead to a graph with only one edge .",
    "in this section , we investigate the consequences of the decidability of monadic second - order logic for our synchronization trees .      in this subsection we point out that the synchronization tree associated with the bag process depicted on figure  [ fig : bag ] has an undecidable monadic theory ( even without the root being the source of an exit edge ) .",
    "hence that tree is not in the caucal hierarchy and therefore , by proposition  [ prop : delta - alg - in - graph3 ] , is not @xmath13-algebraic not even up to bisimilarity ( proposition  [ prop : bag - bisim ] ) .",
    "a similar result was obtained in ( * ? ? ?",
    "* section 6.6.2 ) for a slightly richer structure . for completeness sake",
    ", we give below a detailed proof of this result .",
    "the synchronization tree @xmath1049 associated with the bag process has an undecidable mso - theory .",
    "consider a @xmath2-counter machine whose program @xmath1050 is given as a sequence of instructions @xmath1051 where each @xmath1052 has one of the following forms : @xmath1053 where @xmath1013 is one of the counters @xmath1022 and @xmath1054 are integers between @xmath1 and @xmath5 . at any moment of time , the value of the counters @xmath171 and @xmath237 is described by an ordered pair @xmath1055 of non - negative integers .",
    "the meaning of the above instructions is standard , where @xmath731 denotes the index of the instruction to be performed after execution of the given instruction , if the instruction is an increment or decrement , and @xmath1056 and @xmath1057 denote the indices of the instructions to be performed depending on the outcome of the test , if the instruction is of the last form . the machine with program @xmath1050 halts if a decrement instruction @xmath1058 is executed , but the current value of the counter @xmath1013 is @xmath17",
    ". a well - known undecidable question for @xmath2-counter machines asks whether a @xmath2-counter machine started with @xmath1059 ever halts .",
    "we encode the halting program for a counter machine with program @xmath1050 in monadic second order logic as follows .",
    "let @xmath1060 be a set of variables associated with the instructions of @xmath1050 .",
    "then , for each instruction @xmath1061 , we consider the formula @xmath1062 in the free first - order variable @xmath86 in the language with four binary predicates associated with the edge relations @xmath1063 , @xmath1064 .    *",
    "if @xmath1061 is of the form @xmath1065 , then @xmath1062 expresses that @xmath1066 holds for all @xmath85 such that @xmath1067 , where @xmath199 is @xmath12 if @xmath1068 and @xmath202 if @xmath1069 . *",
    "if @xmath1061 is of the form @xmath1058 , then @xmath1062 expresses that there exists a @xmath85 with @xmath1067 , and @xmath1066 holds for all such @xmath85 , where @xmath199 is @xmath198 if @xmath1068 and @xmath376 if @xmath1069 . *",
    "if @xmath1061 is of the form @xmath1070 , then @xmath1062 expresses that @xmath1071 and @xmath1072 hold for all @xmath1073 such that @xmath1074 and @xmath1075 , provided that there is no @xmath85 with @xmath1076 , and that @xmath1071 and @xmath1077 hold for all such @xmath1073 otherwise , where again @xmath199 is @xmath198 if @xmath1068 and @xmath376 if @xmath1069 .",
    "now we assign to the machine with program @xmath1050 the formula @xmath1078\\ ] ] where @xmath1079 asserts that the @xmath1080 are pairwise disjoint and jointly form an infinite path starting with the root , and @xmath1081 says that the root belongs to @xmath1082 .",
    "then the machine does not halt iff the synchronization tree defined by the process on figure  [ fig : bag ] is a model of @xmath1083 .",
    "thomas showed in  ( * ? ? ?",
    "* theorem  10 ) that the monadic second - order theory of the infinite two - dimensional grid is undecidable .",
    "however , we can not use that result to prove that the synchronization tree @xmath956 has an undecidable monadic second - order theory .",
    "indeed , the unfolding of the infinite two - dimensional grid is the full binary tree , which has a decidable monadic second - order theory by rabin s celebrated tree theorem  @xcite .",
    "[ prop : bag - bisim ] the synchronization tree @xmath956 is not @xmath13-algebraic up to bisimilarity .",
    "this statement follows from the more general remark that any synchronization tree @xmath16 that is bisimilar to a deterministic synchronization tree @xmath1084 having an undecidable mso - theory also has an undecidable mso - theory . given a formula @xmath239 with no free variables ,",
    "consider the formula @xmath1085 where @xmath1086 is the formula @xmath239 in which all quantifications are relativized to @xmath8 and @xmath1087 states that if a node has a successor by an @xmath12-labelled edge then it has one and only one successor by an @xmath12-labelled edge which belongs to @xmath8 . if the formula @xmath1087 is satisfied on @xmath16 for some set of vertices @xmath1088 then @xmath16 restricted to the vertices in @xmath1088 is a deterministic tree isomorphic to @xmath1084 ( cf .",
    "lemma  [ lem : bisim - det - iso ] on page  ) .",
    "clearly @xmath1089 holds on @xmath16 if and only if @xmath239 holds on @xmath1084 .",
    "this implies that the mso - theory of @xmath16 is undecidable .    the argument used in this proof",
    "can also be used to show that @xmath1049 does not belong to the caucal hierarchy up to bisimilarity .",
    "it is well known that , for each bisimulation equivalence class @xmath1090 of synchronization trees in @xmath92 , there is a tree @xmath1091 such that for all @xmath1092 there is a _ surjective _",
    "morphism @xmath1093 , and , moreover , the relation @xmath1094 is a bisimulation between @xmath16 and @xmath1095 .",
    "furthermore , @xmath1095 is unique up to isomorphism . when @xmath1096 , we call @xmath1095 the _ minimization _ of @xmath16",
    ".    the minimization of a tree @xmath982 can be constructed in the following way .",
    "we define an increasing sequence @xmath1097 of sets of vertices of @xmath16 , where @xmath1098 is a singleton set containing only the root of @xmath16 .",
    "the construction will guarantee that , for each @xmath292 , the set @xmath1099 contains only vertices of depth at most @xmath292 , and whenever a vertex @xmath85 belongs to @xmath1099 and there is a path from a vertex @xmath86 to @xmath85 , then @xmath86 is also in @xmath1099 . given @xmath1099 and @xmath1100 of depth @xmath292 ,",
    "consider the set @xmath1101 of successors of @xmath86 .",
    "we may divide @xmath1101 into equivalence classes according to the bisimulation equivalence classes of the corresponding subtrees and the label of the edge coming from @xmath86 . to this end , we define @xmath1102 , for @xmath1103 , if the subtrees rooted at @xmath85 and @xmath188 are bisimilar and if @xmath211 and @xmath1104 for some @xmath143 . then we select a representative of each @xmath1105-equivalence class .",
    "the set @xmath1106 consists of all vertices in @xmath1099 together with those vertices in @xmath1101 of depth @xmath1107 selected above , where @xmath86 ranges over the set of all vertices in @xmath1099 of depth @xmath292 .",
    "finally , let @xmath1108 .",
    "the  subtree \" of @xmath16 spanned by the vertices in @xmath75 is the minimization of @xmath16 .",
    "it is known , see e.g. @xcite , that the minimization of a @xmath10-regular synchronization tree is @xmath10-regular .",
    "in contrast with this result , we have :    [ prop : quotientnotcaucal ] there exists a @xmath10-algebraic synchronization tree whose minimization does not have a decidable mso - theory , and hence does not belong to the caucal hierarchy and is neither a @xmath10-algebraic nor a @xmath13-algebraic synchronization tree .",
    "let @xmath1109 .",
    "consider the following @xmath10-algebraic scheme : @xmath1110 let @xmath16 be the synchronization tree defined the above scheme .",
    "for a word @xmath1111 , we designate by @xmath1112 ( resp .",
    "@xmath1113 ) the number of @xmath12 s ( resp . @xmath198",
    "s ) in the longest suffix of @xmath86 that does _ not _ contain any occurrence of the letter @xmath202 ( resp .",
    "@xmath376 ) .",
    "intuitively , the tree @xmath16 consists of a full quaternary deterministic tree @xmath16 with edges labelled in @xmath1114 such that every vertex of @xmath16 is also the origin of two additional parallel disjoint branches .",
    "since @xmath16 is deterministic , we may identify each vertex of @xmath16 with a word @xmath1115 .",
    "the two additional branches at vertex @xmath86 of @xmath16 are such that their edge labels form the words @xmath1116 and @xmath1117 , respectively .",
    "the minimization @xmath15 of @xmath16 is obtained by removing one of the two branches labelled @xmath1116 for all vertices @xmath86 of @xmath16 such that @xmath1118 .",
    "the fact that @xmath15 has an undecidable mso - theory is based on a reduction from the halting problem for 2-counter machines with increment , reset and equality test @xcite .",
    "the idea is , as usual , to define , for every such machine @xmath1119 , a closed mso - formula @xmath1120 such that @xmath1121 if and only if @xmath1119 does not halt .",
    "when constructing the formula @xmath1122 , we associate to a vertex @xmath86 in @xmath1123 representing a possible history of the computation of @xmath1119 from its initial state , the integer @xmath1112 as the current value of the first counter , and the integer @xmath1113 as the current value of the second counter of the machine . assuming that the current values of the counters are given by vertex @xmath86",
    ", we show how to simulate the various operations of the machine .",
    "the increment of the first ( resp .",
    "second ) counter is obtained by moving to vertex @xmath1124 ( resp .",
    "@xmath1125 ) .",
    "the reset of the first ( resp .",
    "second ) counter is obtained by moving to @xmath1126 ( resp .",
    "@xmath1127 ) .",
    "finally , the test for equality between the two counters is performed by testing that vertex @xmath86 has only one outgoing edge labelled @xmath199 .",
    "the details of the construction are similar to those in section  [ sect : mso - bag ] .    the above result yields that the collection of synchronization trees in the caucal hierarchy is _ not _ closed under minimization .",
    "indeed , there is a @xmath10-algebraic tree whose minimization is not in the caucal hierarchy .",
    "this leaves open the corresponding question for @xmath13-regular synchronization trees .",
    "there are several questions that we leave open in this paper and that lead to interesting directions for future research .",
    "* is there a strict expressiveness hierarchy for @xmath10- and @xmath13-algebraic recursion schemes that is induced by the maximum rank of the functor variables used in defining recursion schemes ? * is the minimal synchronization tree that is bisimilar to a @xmath13-regular synchronization tree also @xmath13-regular ? if not ,",
    "is it in the caucal hierarchy ? * the @xmath10-algebraic scheme we use in the proof of proposition  [ prop : quotientnotcaucal ] uses a binary functor variable . is the minimal synchronization tree that is bisimilar to a tree defined by a @xmath10-algebraic scheme involving only unary functor variables @xmath10-algebraic ?",
    "r. milner .",
    "an algebraic definition of simulation between programs . in proceedings",
    "2nd joint conference on artificial intelligence , pages 481489 .",
    "bcs , 1971 . also available as report no .",
    "cs-205 , computer science department , stanford university .",
    "w. thomas . constructing infinite graphs with a decidable mso - theory . in proceedings of the 28th international symposium on mathematical foundations of computer science , lncs 2747 , pp .  113124 , springer , 2003 ."
  ],
  "abstract_text": [
    "<S> we study algebraic synchronization trees , i.e. , initial solutions of algebraic recursion schemes over the continuous categorical algebra of synchronization trees . </S>",
    "<S> in particular , we investigate the relative expressive power of algebraic recursion schemes over two signatures , which are based on those for basic ccs and basic process algebra , as a means for defining synchronization trees up to isomorphism as well as modulo bisimilarity and language equivalence . </S>",
    "<S> the expressiveness of algebraic recursion schemes is also compared to that of the low levels in caucal s pushdown hierarchy .        </S>",
    "<S> [ multiblock footnote omitted ] </S>"
  ]
}
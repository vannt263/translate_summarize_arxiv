{
  "article_text": [
    "exchanges in networks have been studied for a long time in both sociology and economics . in sociology , they appear under the name of _ network exchange theory _ , a field which studies the behaviour of agents who interact across a network to form bilateral relationships of mutual benefit .",
    "the goal is to determine how an agent s location in the network influences its ability to negotiate for resources @xcite . in economics , they are known as _ cooperative games _ and have been used for studying the distribution of resources across a network , for example in the case of two - sided markets @xcite @xcite .    from a theoretical perspective",
    "the most commonly used framework for studying such exchanges is that of _ network bargaining games_. the model consists of an undirected graph @xmath0 with edge weights @xmath1 and vertex capacities @xmath2 .",
    "the vertices represent the agents , and the edges represent possible pairwise contracts that the agents can form .",
    "the weight of each edge represents the value of the corresponding contract .",
    "if a contract is formed between two vertices , its value is divided between them , whereas if the contract is not formed neither vertex receives any profit from this specific contract .",
    "the capacity of each agent limits the number of contracts it can form .",
    "this constraint , together with an agent s position in the network determine its bargaining power .",
    "a _ solution _ for the network bargaining model specifies the set of contracts which are formed , and how each contract is divided . specifically , a solution consists of a pair @xmath3 , where @xmath4 is a @xmath5-matching of the underlying graph @xmath6 , and @xmath7 is a vector which assigns each edge @xmath8 two values @xmath9 corresponding to the profit that agent @xmath10 , respectively agent @xmath11 , earn from the contract @xmath8 . to be a valid solution , the two values @xmath12 and @xmath13 must add up to the value of the contract whenever the edge @xmath8 belongs to the @xmath5-matching @xmath4 , and must be zero otherwise .",
    "solutions to network bargaining games are classified according to two main concepts : _ stability _ and _ balance_. a solution is stable if the profit an agent earns from any formed contract is at least as much as its outside option .",
    "an agent s _ outside option _ , in this context , refers to the maximum profit that the agent can rationally receive by forming a new contract with one of its neighbours , under the condition that the newly formed contract would benefit both parties .",
    "the notion of balance , first introduced in @xcite , @xcite , is a generalization of the nash bargaining solution to the network setting .",
    "specifically , in a balanced solution the value of each contract is split according to the following rule : both endpoints must earn their outside options , and any surplus is to be divided equally among them .",
    "balanced solutions have been shown to agree with experimental evidence , even to the point of picking up on subtle differences in bargaining power among agents @xcite .",
    "this is an affirmation of the fact that these solutions are natural and represent an important area of study .",
    "there is a close connection between network bargaining games and _ cooperative games_. specifically given a solution @xmath3 to the network bargaining game @xmath14 we can define a corresponding payoff vector @xmath15 , where @xmath16 is just the total profit earned by vertex @xmath10 from all its contracts in the solution @xmath3 .",
    "then this vector @xmath15 can be seen as a solution to a corresponding cooperative game @xmath17 defined as follows : we let @xmath18 denote the set of players , and for every subset @xmath19 of players , we define its _ value @xmath20 _ as the weight of the maximum weight @xmath5-matching of @xmath21 $ ] .",
    "this game is also known as the _ matching game _ @xcite .",
    "the subsets @xmath19 are referred to as _ coalitions _ , and the value @xmath20 of each coalition is interpreted as the collective payoff that the players in @xmath22 would receive if they decide to cooperate .",
    "the players are assumed to be able choose which coalitions to form , and their objective is to maximize their payoffs .",
    "the underlying assumption in cooperative game theory is that the grand coalition @xmath23 will form , and the question becomes how to distribute the payoff @xmath24 among the players .",
    "a vector @xmath15 describing such a distribution is referred to as an _",
    "allocation_. given an allocation @xmath15 , the excess of a coalition @xmath22 is defined as @xmath25 .",
    "intuitively , a negative excess means that the players of the coalition have no incentive to break away from the grand coalition , since the collective payoff they could achieve by forming the new coalition is less then what they are currently receiving .",
    "the _ power _ of player @xmath10 over player @xmath11 with respect to the allocation @xmath15 is the maximum excess achieved by a coalition which includes @xmath10 but excludes @xmath11 .",
    "two important concepts from cooperative games are those of the _ core _ and _ prekernel_. the core consists of allocations for which no coalition has a negative excess , whereas the prekernel consists of all allocations with symmetric powers .    * our contribution and results . *",
    "our main result is providing the first polynomial time algorithm for computing balanced solutions for network bargaining games with general capacities and fully characterizating the existence of balanced solutions for these games .",
    "specifically we show the following results in sections [ sec1 ] and [ sec2 ] respectively :    result 1 .",
    "_ there exists a polynomial time algorithm which given an instance of a network bargaining game with general capacities and a maximum weight @xmath5-matching @xmath4 , computes a balanced solution @xmath3 whenever one exists . _    result 2 . _",
    "a network bargaining game with general capacities has a balanced solution if and only if it has a stable one .",
    "_    our method relies on a new approach of reducing a general capacity instance to a network bargaining game with unit capacities defined on an auxiliary graph .",
    "this allows us to use existing algorithms for obtaining balanced solutions for unit capacities games , which we can then transform to balanced solutions of our original instance .",
    "this represents a departure from previous approaches of @xcite which relied on proving an equivalence between the set of balanced solutions and the intersection of the core and prekernel of the corresponding matching game . in section [ sec3 ]",
    "we show that such an approach can not work for our case , since this equivalence does not extend to all instances of general capacity games :    result 3 .",
    "_ there exists an instance of a network bargaining game with general capacities for which we can find an allocation in the intersection of the core and prekernel such that there is no corresponding balanced solution for this allocation_.    despite this result , we provide two necessary conditions which ensure that the correspondence between the set of balanced solutions and allocations in the intersection of the core and prekernel is maintained . using the definition of _ gadgets _ from section [ gadgets ] we have the following result given in section [ sec4 ] :    result 4 . _",
    "if the network bargaining game has no gadgets and the maximum @xmath5-matching @xmath4 is acyclic , the set of balanced solutions corresponds to the intersection of the core and prekernel .",
    "_    * related work . * kleinberg and tardos @xcite studied network bargaining games with unit capacities and developed a polynomial time algorithm for computing the entire set of balanced solutions .",
    "they also show that such games have a balanced solution whenever they have a stable one and that a stable solution exists if and only if the linear program for the maximum weight matching of the underlying graph has an integral optimal solution .",
    "bateni et al .",
    "@xcite consider network bargaining games with unit capacities , as well as the special case of network bargaining games on bipartite graphs where one side of the partition has all unit capacities .",
    "they approach the problem of computing balanced solutions from the perspective of cooperative games .",
    "in particular they use the matching game of shapley and shubik @xcite and show that the set of stable solutions corresponds to the core , and the set of balanced solutions corresponds to the intersection of the core and prekernel .    like we do here ,",
    "kanoria et al .",
    "@xcite also study network bargaining games with general capacities .",
    "they show that a stable solution exists for these games if and only the linear program for the maximum weight @xmath5-matching of the underlying graph has an integral optimal solution .",
    "they are also able to obtain a partial characterization of the existence of balanced solutions by proving that if this integral optimum is unique , then a balanced solution is guaranteed to exist .",
    "they provide an algorithm for computing balanced solutions in this case which uses local dynamics but whose running time is not polynomial .",
    "an instance of the _ network bargaining game _ is a triple @xmath26 where @xmath27 is a undirected graph , @xmath28 is a vector of edge weights , and @xmath29 is a vector of vertex capacities .",
    "a set of edges @xmath30 is a @xmath5-matching of @xmath6 if @xmath31 for all @xmath32 .",
    "given a @xmath5-matching @xmath4 , we let @xmath33 denote the degree of vertex @xmath10 in @xmath4 . we say that vertex @xmath10 is _ saturated _ in @xmath4 if @xmath34 .    a _ solution _ to the network bargaining game",
    "@xmath14 is a pair @xmath35 where @xmath4 is a @xmath5-matching of @xmath6 and @xmath36 assigns each edge @xmath8 a pair of values @xmath37 such that @xmath38 if @xmath39 and @xmath40 otherwise .",
    "the _ allocation _ associated with the solution @xmath3 is the vector @xmath41 where @xmath16 represents the total payoff of vertex @xmath10 , that is for all @xmath32 we have @xmath42 .",
    "the _ outside option _ of vertex @xmath10 with respect to a solution @xmath3 is defined as @xmath43 } \\min_{vw \\in m } z_{vw } { \\right)}{\\right ) } , \\notag\\end{aligned}\\ ] ] where @xmath44 is the indicator function for the event @xmath45 , which takes value one whenever the event holds , and zero otherwise . if @xmath46 then we set @xmath47 .",
    "we write @xmath48 instead of @xmath49 whenever the context is clear .",
    "a solution @xmath3 is _ stable _ if for all @xmath39 we have @xmath50 , and for all unsaturated vertices @xmath10 we have @xmath51 .",
    "a solution @xmath3 is _ balanced _ if it is stable and in addition for all @xmath39 we have @xmath52 .",
    "the definitions from the previous section simplify in the case where all vertices have unit capacities .",
    "specifically a _ solution _ to the unit capacity game @xmath53 is a pair @xmath54 where @xmath4 is now a matching of @xmath6 and @xmath55 assigns a value to each vertex such that for all edges @xmath39 we have @xmath56 and for all @xmath32 not covered by @xmath4 we have @xmath57 .",
    "since each vertex has at most one unique contract , the vector @xmath15 from the solution @xmath58 is also the allocation vector in this case .",
    "the _ outside option _ of vertex @xmath10 can now be expressed as @xmath59 where as before we set @xmath60 whenever @xmath61 .",
    "a solution @xmath58 is _ stable _ if for all @xmath32 we have @xmath62 and _ balanced _ if it is stable and in addition @xmath63 for all @xmath39 .",
    "given an instance @xmath14 of the network bargaining game we let @xmath64 and define the _ value _ @xmath20 of a set of vertices @xmath19 as @xmath65 $ } } w(m ) . \\notag\\end{aligned}\\ ] ] then the pair @xmath17 denotes an instance of the _ matching game _ of shapley and shubik @xcite .",
    "we will refer to this as the matching game associated with the instance @xmath14 .",
    "given @xmath66 and two vertices @xmath67 we define the _ power _ of vertex @xmath10 over vertex @xmath11 with respect to the vector @xmath15 as @xmath68 where @xmath69 .",
    "we write @xmath70 instead of @xmath71 whenever the context is clear .",
    "the _ core _ of the game is defined as the set @xmath72 the _ prekernel _ of the game is the set @xmath73",
    "the first attempt towards computing balanced solutions for the network bargaining game with general capacities is to use the connection to cooperative games presented in @xcite . for the special class of unit capacity and",
    "constrained bipartite games , bateni et al .",
    "show that the set of stable solutions corresponds to the core , and the set of balanced solutions corresponds to the intersection of the core and prekernel of the associated matching game .",
    "this implies that efficient algorithms , such as the one of @xcite , can be used to compute points in the intersection of the core and prekernel from which a balanced solution can be uniquely obtained .",
    "the first question of interest is whether this equivalence between balanced solutions and the intersection of the core and prekernel extends to network bargaining games with arbitrary capacities .",
    "the following lemma proves that this is not always the case .",
    "[ lem : 1 ] there exists an instance @xmath14 of the network bargaining game and a vector @xmath75 such that there exists no balanced solution @xmath3 satisfying @xmath76 .    consider the following graph where every vertex has capacity 2 and the edge weights are given above each edge        consider the vector @xmath15 defined as @xmath77 for all @xmath32 .",
    "we now show that the vector @xmath15 is in the intersection of the core and prekernel and there exists no balanced solution @xmath3 corresponding to @xmath15 .",
    "let @xmath78 denote the outer cycle on vertices @xmath79 and let @xmath80 and @xmath81 denote the inner cycles on vertices @xmath82 and @xmath83 respectively .",
    "the unique optimal @xmath84-matching is the cycle @xmath78 with weight @xmath85 . since any stable , and therefore balanced",
    ", solution must occur on a maximum weight @xmath5-matching @xcite , any balanced solution @xmath3 will have @xmath86 .",
    "it can be easily checked that @xmath87 . to check that @xmath88 we compute the powers @xmath89 for all pairs of vertices @xmath90 . for the pair @xmath91 we have : @xmath92 similarly for the pair @xmath93 we have : @xmath94 and for the pair @xmath95 : @xmath96",
    "hence the pairs @xmath97 and @xmath98 satisfy the prekernel condition . by symmetry",
    "so do @xmath99 and @xmath100 .",
    "note that for any pair @xmath101 of non - adjacent vertices , one of the two cycles @xmath80 or @xmath81 will contain @xmath10 but not @xmath11 , and viceversa .",
    "therefore @xmath102 for all non - adjacent pairs @xmath101 .",
    "this proves that @xmath15 is in the prekernel .",
    "we now show that there is no vector @xmath7 such that @xmath3 is a balanced solution corresponding to the vector @xmath15 .",
    "first note that vertices @xmath103 and @xmath104 have an outside option of zero in any solution , since there are no edges in @xmath105 incident with these vertices .",
    "hence the contracts @xmath98 and @xmath106 have to be split evenly in any balanced solution .",
    "since each vertex must have a total profit of @xmath107 from its two contracts in @xmath4 , this uniquely determines all values of the vector @xmath7 , which are shown in the figure below        the minimum contract of both @xmath108 and @xmath45 is @xmath109 and therefore @xmath110",
    ". however , the edge @xmath111 ( and also the edge @xmath112 by symmetry ) violates the balance condition since @xmath113 while @xmath114 .",
    "note that this instance does possess a balanced solution as shown in the figure below        here the outside option of both @xmath108 and @xmath45 is @xmath115 and all edges in the matching satisfy the balance condition .",
    "we also remark that the allocation associated with this balanced solution is also in the intersection of the core and prekernel .    in view of lemma [ lem : 1 ]",
    ", we can not hope to extend the correspondence between balanced solutions and allocations in the intersection of the core and prekernel to all network bargaining games .",
    "however we can generalize the results of @xcite by characterizing a larger class of network bargaining games , including unit capacity and constrained bipartite games , for which this correspondence holds .",
    "we achieve this by defining a certain gadget whose absence , together with the fact that the @xmath5-matching @xmath4 is acyclic , will be sufficient for the correspondence to hold .",
    "let @xmath14 be an instance of the network bargaining game and @xmath3 a solution .",
    "consider a vertex @xmath32 with @xmath116 and let @xmath11 be a neighbour of @xmath10 in @xmath4 .",
    "let @xmath117 be vertex @xmath10 s best outside option and if @xmath117 is saturated in @xmath4 , let @xmath118 be its weakest contract . using these definitions we have @xmath119}z_{v'u'}. \\notag\\end{aligned}\\ ] ]",
    "we say that @xmath10 is a @xmath120 vertex in the solution @xmath3 if at least one of the following two conditions holds :    1 .",
    "there is a @xmath121 path in @xmath4 , 2 .",
    "there is a @xmath122 path in @xmath4 , that does not pass through vertex @xmath117 .",
    "we refer to such @xmath121 or @xmath122 paths as @xmath123 of the solution @xmath3 .",
    "the following figure depicts these two types of gadgets , solid lines denote edges in @xmath4 and dashed lines denote edges in @xmath105 .",
    "we can now state our main theorem of this section .",
    "[ thm : 1 ] let @xmath14 be an instance of the network bargaining game .",
    "let @xmath124 and @xmath3 be a corresponding stable solution so that @xmath42 for all @xmath32 . if the following two conditions are satisfied    1 .",
    "@xmath4 is acyclic , 2 .",
    "there are no bad vertices in the solution @xmath3 ,    then , the following statement holds @xmath125    fix @xmath39 .",
    "note that it suffices to show @xmath126 , since this would imply that @xmath127 if and only if @xmath128 .",
    "our strategy is to first show that @xmath70 is upper bounded @xmath129 , after which it will be sufficient to find a set @xmath130 for which @xmath131 achieves this upper bound .",
    "we start with the following lemma .",
    "[ lem : 2 ] @xmath132 .",
    "let @xmath133 such that @xmath134 and @xmath135 .",
    "let @xmath136 be a maximum weight @xmath5-matching in @xmath137 $ ] .",
    "then @xmath138 define the set of ordered pairs @xmath139 so that @xmath140 since @xmath3 is a stable solution it follows that @xmath4 is a @xmath5-matching of maximum weight .",
    "hence any edge in @xmath141 must have at least one saturated endpoint .",
    "let @xmath142 be the set of vertices in @xmath130 which are saturated in @xmath4 .",
    "for each @xmath143 $ ] define the sets of ordered pairs @xmath144 note that all these sets are pairwise disjoint , and @xmath145 for all @xmath143 $ ] .",
    "now since each @xmath146 is saturated in @xmath4 it follows that @xmath147 .",
    "therefore we can fix an arbitrary mapping @xmath148 so that each element of @xmath149 is mapped to a distinct element of @xmath150 .",
    "we now assign to each edge @xmath151 a set of ordered elements @xmath152 .",
    "as previously observed , each such edge @xmath153 must have at least one saturated endpoint . hence let @xmath154 and define : @xmath155 \\backslash { \\left\\ { }    \\newcommand{\\rc}{\\right\\}}i \\rc$ , } \\\\ { \\left\\ { }    \\newcommand{\\rc}{\\right\\}}\\phi_i { \\left(}a_i , y { \\right)}\\rc & \\text{otherwise . } \\\\",
    "\\end{cases } \\notag\\end{aligned}\\ ] ] it follows from the definition of the sets @xmath149 and the choice of the mapping @xmath156 that the sets @xmath157 are well defined , are pairwise disjoint , and are all subsets of @xmath158 .",
    "let @xmath159 then from equation and the fact that each ordered pair of @xmath158 belongs to at most one @xmath157 set we obtain @xmath160 now it follows from stability that for all @xmath151 we have @xmath161 to see this , consider @xmath162 . if @xmath163 for some @xmath164 \\backslash { \\left\\ { }    \\newcommand{\\rc}{\\right\\}}i \\rc$ ] then @xmath165 .",
    "now @xmath166 represents the profit that @xmath146 gets from one of his contracts in @xmath4 , and similarly @xmath167 represents the profit that @xmath168 earns from one of his contracts in @xmath4 .",
    "since the edge @xmath169 is not in @xmath4 , by stability we must have @xmath170 .",
    "in the other case where @xmath171 is not a saturated vertex in @xmath130 , we have @xmath172 .",
    "since @xmath171 is an outside option for @xmath146 and @xmath173 represents the profit that @xmath146 gets from one of his contracts in @xmath4 , stability for vertex @xmath146 implies that @xmath174 as required .",
    "now suppose that @xmath175 .",
    "then from and we have @xmath176 since @xmath177 , this proves the lemma in this case .",
    "if on the other hand , there exists a set @xmath178 such that @xmath179 . then using and again we have @xmath180 now @xmath179 implies that @xmath181 must be an edge in @xmath141 that is incident to vertex @xmath10 . hence @xmath182 where @xmath183 is an outside option for vertex @xmath10 .",
    "if @xmath183 is not saturated then the set @xmath184 is empty .",
    "otherwise if @xmath183 is saturated , this set contains a unique ordered pair @xmath185 such that @xmath186 .",
    "therefore it follows from the definition of @xmath48 that @xmath187 as desired .",
    "hence it suffices to find a set @xmath188 such that @xmath134 , @xmath135 and show that @xmath189 .",
    "given a set of vertices @xmath22 we let @xmath190 denote the edges of @xmath4 which have both endpoints in @xmath22 .",
    "note that for any set of vertices @xmath22 we have @xmath191    we define @xmath192 to be the set of components of @xmath6 induced by the edges in @xmath4 .",
    "since @xmath10 and @xmath11 are neighbours in @xmath4 they will be in the same component , call it @xmath193 .",
    "now suppose we remove the edge @xmath8 from @xmath193 .",
    "since @xmath4 is acyclic , this disconnects @xmath193 into two components @xmath194 and @xmath195 , containing vertices @xmath10 and @xmath11 respectively .",
    "now @xmath196 is a valid @xmath5-matching of @xmath194 hence applying equation to the vertex set the component @xmath194 we obtain @xmath197    if @xmath198 then setting @xmath130 to be the vertex set of component @xmath194 completes the proof for this case . hence it remains to consider the case where @xmath199 .",
    "then by stability of the solution @xmath3 vertex @xmath10 must be saturated in @xmath4 .",
    "let @xmath117 be vertex @xmath10 s best outside option .",
    "* case 1 * : @xmath200 and @xmath117 is not saturated in @xmath4 . since @xmath201 and @xmath117 is not saturated in @xmath4 the set of edges @xmath202 is a valid @xmath5-matching of @xmath194 and therefore @xmath203    * case 2 * : @xmath200 and @xmath117 is saturated in @xmath4 .",
    "let @xmath118 be the weakest contract of @xmath117 and suppose we remove the edge @xmath204 from @xmath194 .",
    "since @xmath4 is acyclic , this disconnects @xmath194 into two components . from condition",
    "@xmath205 we know that @xmath118 is not on the @xmath206 path in @xmath4 .",
    "hence @xmath10 and @xmath117 are in the same component of @xmath207 .",
    "denote this component by @xmath208 .",
    "now @xmath209 is a @xmath5-matching of @xmath208 and thus @xmath210    [ fig ]    * case 3 * : @xmath211 and @xmath117 is not saturated in @xmath4 .",
    "condition @xmath205 implies that there is no @xmath121 path in @xmath4 , hence the fact that @xmath211 implies that @xmath212 .",
    "let @xmath213 be the component in @xmath192 that contains vertex @xmath117 .",
    "now @xmath214 is a @xmath5-matching of @xmath215 and therefore @xmath216        * case 4 * : @xmath211 and @xmath117 is saturated in @xmath4 . as in case 3 we let @xmath213 be the component in @xmath192 that contains vertex @xmath117 .",
    "let @xmath118 be the weakest contract of @xmath117 and suppose we remove the edge @xmath204 from @xmath213 .",
    "since @xmath4 is acyclic , this disconnects @xmath213 into two components and we let @xmath217 be the one that contains vertex @xmath117 . now @xmath218 is a @xmath5-matching of @xmath215 thus @xmath219        hence in all cases we have @xmath220 as required .",
    "this completes the proof of the theorem .",
    "we note that all network bargaining games studied in @xcite satisfy conditions @xmath221 and @xmath205 of theorem [ thm : 1 ] .",
    "in addition to these , theorem [ thm : 1 ] also covers the case of network bargaining games where the underlying graph is a tree , but the vertices are allowed to have arbitrary capacities . hence starting with a maximum weight @xmath5-matching @xmath4 we can use the polynomial time algorithm of @xcite to compute a point in the intersection of the core and prekernel for these games , from which we can obtain a corresponding solution @xmath3 . then using theorem [ thm : 1 ] we know that @xmath3 will be balanced .",
    "while we were able to generalize the class of network bargaining games for which balanced solutions can be obtained by computing a point in the intersection of the core and prekernel , we were not able to apply this technique to all network bargaining games . in this section we show that balanced solutions can be obtained to any network bargaining game @xmath14 by a reduction to a unit capacity game defined on an auxiliary graph .",
    "+      suppose we are given an instance @xmath26 of the network bargaining game together with a @xmath5-matching @xmath4 of @xmath6 .",
    "we describe below how to obtain an instance @xmath222 of the unit capacity game together with a matching @xmath4 of @xmath6 .      1 .   for each @xmath32 :",
    "fix an arbitrary labelling @xmath224 and create @xmath225 copies @xmath226 in @xmath227 .",
    "2 .   for each @xmath8 in @xmath228 : add the edge @xmath229 to @xmath230 and set its weight to @xmath231 .",
    "3 .   for each edge @xmath232 : add all edges @xmath233 to @xmath234 for all @xmath235 $ ] and @xmath236 $ ] , and set all their weights to @xmath231 .",
    "+ * example 1 : * consider the instance depicted on the left hand side of the figure below .",
    "the solid edges are in the @xmath5-matching @xmath4 and the dotted edges are in @xmath105 .",
    "node @xmath10 has capacity four , nodes @xmath15 and @xmath171 have capacity two and all other nodes have capacity one .",
    "all edges have unit weight .",
    "we make four copies of @xmath10 in @xmath237 , two copies of @xmath15 and @xmath171 , and one copy of every other node .",
    "each edge in @xmath4 corresponds to a unique edge in @xmath136 . for the edges @xmath8 and @xmath238 which are not in @xmath4",
    ", we connect every copy of @xmath10 to every copy of @xmath11 and @xmath183 with edges in @xmath239 .",
    "the resulting graph is on the right .",
    "suppose we are given an instance of the network bargaining game @xmath14 with a @xmath5-matching @xmath4 .",
    "let @xmath240 $ ] be obtained using the construction given in section [ const ] .",
    "note that @xmath4 and @xmath136 have the same number of edges and each edge @xmath39 is mapped to the unique edge @xmath241 where @xmath242 and @xmath243 .",
    "this allows us to go back and forth between solutions on @xmath4 and @xmath136 by dividing the weight of each edge in the same way as its corresponding pair .",
    "note that @xmath251 if and only if @xmath252 .",
    "the following lemma shows that the mapping given by the function @xmath253 and its inverse @xmath254 defines a bijection between the @xmath255 and @xmath256        let @xmath257 and @xmath258 .",
    "we show that @xmath259 .",
    "take @xmath261 .",
    "suppose @xmath262 and @xmath243 .",
    "then from the construction of @xmath237 and @xmath136 it follows that @xmath241 .",
    "we have @xmath263 furthermore if @xmath232 then from the definition of @xmath264 we have @xmath265 .",
    "now let @xmath259 and @xmath260 .",
    "we show that @xmath257 .",
    "take @xmath266 . from the construction of @xmath237 and @xmath136 there must exist an edge @xmath261 such that @xmath262 and @xmath243 .",
    "we have @xmath267 furthermore if @xmath268 is uncovered in @xmath136 then @xmath269 by definition .",
    "[ lem : key ] let @xmath14 be an instance of the network bargaining game and @xmath4 a @xmath5-matching on @xmath6 .",
    "suppose the auxiliary instance @xmath222 and the matching @xmath136 were obtained using the construction given in section [ const ] .",
    "let @xmath3 be a solution to @xmath14 and @xmath271 a solution to @xmath222 such that @xmath270 .",
    "then for any @xmath32 and any @xmath272 $ ] we have @xmath273    we first show that @xmath274 .",
    "we may assume that @xmath275 since otherwise there is nothing to show .",
    "let @xmath11 be vertex @xmath10 s best outside option in @xmath3 .",
    "that is @xmath232 and @xmath276 } \\min_{vw \\in m }   z_{vw }   \\notag .\\end{aligned}\\ ] ]      1 .",
    "@xmath11 is not saturated in @xmath4 .",
    "then the vertex @xmath278 is in @xmath227 and it is not covered by @xmath136 .",
    "since @xmath279 we have @xmath280 2 .",
    "@xmath11 is saturated in @xmath4 .",
    "let @xmath281 .",
    "suppose that @xmath282 . then @xmath283 is covered in @xmath136 and @xmath284 .",
    "since @xmath285 we have @xmath286    we now show that @xmath287 .",
    "we may assume that @xmath288 .",
    "let @xmath283 be vertex @xmath268 s best outside option in @xmath289 .",
    "that is , @xmath290 such that @xmath291 and @xmath292 since @xmath291 we must have @xmath232 .",
    "again , we have two cases :    1 .   @xmath283 is not covered in @xmath136 .",
    "then the vertex @xmath11 is not saturated in @xmath4 and @xmath293 2 .",
    "@xmath283 is covered in @xmath4 .",
    "then there exists @xmath294 such that @xmath295 and @xmath296 .",
    "we have @xmath297    using lemma [ lem : key ] we can now prove that stability and balance are preserved when mapping between solutions of the network bargaining game and the corresponding unit capacity game of the auxiliary instance .",
    "[ thm : main ] let @xmath14 be an instance of the network bargaining game and @xmath4 a @xmath5-matching on @xmath6 .",
    "suppose the auxiliary instance @xmath222 and the matching @xmath136 were obtained using the construction given in section [ const ] .",
    "let @xmath3 be a solution to @xmath14 and @xmath271 a solution to @xmath222 such that @xmath270 . then",
    ":      let @xmath39 .",
    "suppose that @xmath262 . then @xmath298 and using lemma [ lem : key ] we have @xmath299 it remains to show that",
    "if @xmath289 is stable then @xmath47 for any unsaturated vertices @xmath10 of @xmath6 .",
    "suppose @xmath10 is such a vertex",
    ". then the vertex @xmath300 is not covered in @xmath136 and therefore @xmath301 . if @xmath289 is stable then @xmath302 and by lemma [ lem : key ] we have @xmath47 as desired .",
    "this completes the proof of the first statement . to prove the second statement",
    "let @xmath39 and suppose that @xmath303 and @xmath304 .",
    "then @xmath305 , @xmath306 and by lemma [ lem : key ] we have : @xmath307 this completes the proof .        1 .",
    "find a maximum @xmath5-matching @xmath4 in @xmath6 .",
    "2 .   obtain unit capacity game @xmath222 with matching @xmath136 using the construction from section [ const ] .",
    "3 .   find a balanced solution @xmath15 on the matching @xmath136 in @xmath237 .",
    "4 .   set @xmath308 and return @xmath3 .",
    "we note that step 3 of the algorithm can be implementing using the existing polynomial time algorithm of kleinberg and tardos @xcite .",
    "given any instance of a network bargaining game with unit capacities together with a maximum weight matching , their algorithm returns a balanced solution on the given matching , whenever one exists .      using theorem [ thm : main ] we know that stable solutions of the original problem map to stable solutions of the matching problem and viceversa . since any stable solution must occur on a @xmath5-matching , respectively matching , of maximum weight we have the following corollary",
    "let @xmath14 be an instance of the network bargaining game and @xmath4 a @xmath5-matching on @xmath6 .",
    "suppose the auxiliary instance @xmath222 and the matching @xmath136 were obtained using the given construction",
    ". then    1 .",
    "@xmath4 is a maximum weight @xmath5-matching for @xmath14 if and only if @xmath136 is a maximum weight matching for @xmath222 .",
    "2 .   there exists a balanced solution for @xmath14 on the @xmath5-matching @xmath4 if and only if there exists a balanced solution for @xmath222 on the matching @xmath136 .",
    "it was previously shown in @xcite that a unit capacity game possesses a balanced solution if and only if it has a stable solution , which in turn happens if and only if the linear program for the maximum weight matching of the underlying graph has an integral optimal solution .",
    "for the case of network bargaining game with general capacities , @xcite have shown that a stable solution exists if and only if the linear program for the maximum weight @xmath5-matching of the underlying graph has an integral optimal solution . in terms of existence of balanced solutions ,",
    "they only obtain a partial characterization by proving that if this integral optimum is unique , then a balanced solution is guaranteed to exist .",
    "our results imply the following full characterization for the existence of balanced solutions , thus extending the results of @xcite :        , devanur , n. , jain , k. , and rabani , y. 2010 .",
    "monotonicity in bargaining networks . in _ proceedings of the twenty - first annual acm - siam symposium on discrete algorithms_. society for industrial and applied mathematics , 817826 ."
  ],
  "abstract_text": [
    "<S> we study _ balanced solutions _ for _ network bargaining games _ with general capacities , where agents can participate in a fixed but arbitrary number of contracts . </S>",
    "<S> we provide the first polynomial time algorithm for computing balanced solutions for these games . </S>",
    "<S> in addition , we prove that an instance has a balanced solution if and only if it has a stable one . </S>",
    "<S> our methods use a new idea of reducing an instance with general capacities to a network bargaining game with unit capacities defined on an auxiliary graph . </S>",
    "<S> this represents a departure from previous approaches , which rely on computing an allocation in the intersection of the _ core _ and _ prekernel _ of a corresponding _ cooperative game _ , and then proving that the solution corresponding to this allocation is balanced . </S>",
    "<S> in fact , we show that such cooperative game methods do not extend to general capacity games , since contrary to the case of unit capacities , there exist allocations in the intersection of the core and prekernel with no corresponding balanced solution . </S>",
    "<S> finally , we identify two sufficient conditions under which the set of balanced solutions corresponds to the intersection of the _ core _ and _ prekernel _ , thereby extending the class of games for which this result was previously known . </S>"
  ]
}
{
  "article_text": [
    "at present , the most successful work done in the area of physical modeling has generally involved waveguide networks .",
    "this is partly due to the fact that for a number of synthesis algorithms , waveguide techniques provide a large increase in computational efficiency .",
    "however , as computer hardware gets faster and cheaper , it becomes possible to consider other modeling representations without compromising their generality .",
    "modal synthesis has been named a `` missing link '' between physical modeling and other , more traditional synthesis techniques , such as additive synthesis.[1 ] modal synthesis methods can range from precise representations of a particular vibrating structure to general sound design algorithms with large sets of control parameters , similar in flexibility and scope to additive synthesis and divorced from any specifics of physical models .",
    "synthesis based on modal physical models can produce results theoretically equivalent to those of finite elements synthesis , while allowing to approach modeling from a frequency- and energy - oriented rather than geometry - oriented point of view , thus leading to different kinds of data reduction and different , possibly more intuitive , control parameters .",
    "unfortunately , despite the existence of a few experimental modal systems , such as modalys@xcite , the popularity of modal synthesis is still relatively low compared to other synthesis methods , which can be attributed to high computational costs of a fully realized modal system and a certain lack of numerical data for control parameters .",
    "following is an overview of a software framework that has been developed to serve as a general - purpose design and control tool for modal synthesis algorithms of arbitrary complexity .",
    "this framework implements a number of real time modal synthesis elements and allows the user to control and configure the synthesis algorithms in a wide variety of ways .",
    "most elements are based on a unifying abstraction of state and control variables , resulting in an easily expandable and configurable system .",
    "a graphical user interface is provided to facilitate instrument design and control in real time .    while immediately functional as a performance and compositional tool , the framework is also currently used to systematically survey modal systems of varying complexity in order to determine optimal representations for a number of target phenomena . among those currently under investigation",
    "are time- and phase - dependent response to excitation , saturation effects , one - way and circular energy transfer among modes , regions of stable and chaotic response to control parameters , and custom transient behavior .",
    "modal synthesis is a technique that represents a ( virtual ) musical instrument as a collection of resonant vibrating structures , each possessing a number of _ modes of vibration _ generally associated with particular nominal frequencies .",
    "the time development of the model is governed by various ( possibly nonlinear ) interactions among different modes in a structure and among substructures in an instrument , which can be used to represent the geometry , the physical properties of the material , and the interactions of different parts of a modeled instrument .",
    "each individual mode is usually represented by a damped harmonic oscillator with a particular nominal frequency of vibration , while interactions may be based on such physical properties as resistance to bending , elasticity , etc .",
    "the framework described here attempts to abstract the implementation of all interactions from the specifics of the modal structures . to insure compatibility throughout the model a universal energy - like variable @xmath0",
    "is introduced . each interaction between a pair of modal structures and/or modes",
    "is represented by an energy transfer function ( @xmath1 ) , which determines the energy flow between its arguments .",
    "the particularities of determining the effects of energy influx and mapping the modal state to the corresponding value of @xmath0 are left to the implementation of the modal structures themselves , thus creating a layer of abstraction on which new objects can be easily built .",
    "every modal structure in the framework is implemented as a polymorphic object , possessing a number of properties , such as its set of control parameters @xmath2 , its current state @xmath3 , and its particular instantiation of energy - related functions @xmath4 and @xmath5 .",
    "these properties are exposed to the user for real - time control / observation and/or to functions that determine the interaction among modes and modal structures .",
    "the simplest modal structure is a modal node , which represents exactly one normal mode of vibration .",
    "the parameterization of a modal node is @xmath6 where @xmath7 is a scaling parameter analogous to physical mass , @xmath8 is a nominal frequency , and @xmath9 is a decay term .",
    "each of these parameters can be varied by the user at control rate .",
    "the state @xmath10 of a modal node is comprised of a vector @xmath11 representing mode dynamics ( i.e. the displacement and its derivatives up to the highest order @xmath12 ) , and the effective frequency @xmath13 and phase @xmath14 .",
    "@xmath15 is updated at the audio rate ( or faster if oversampling is employed ) , while @xmath13 and @xmath14 are obtained from @xmath15 via a parametrized function that is readjusted every cycle , reflecting the recent history of the mode s vibration . for the most typical case of the standard harmonic oscillator ,",
    "the order @xmath12 is @xmath16 , and the highest order derivative is updated according to the time - discretized version of the standard equation of vibration : @xmath17 where @xmath18 , while @xmath19 and @xmath20 are updated by time - step integration of @xmath20 and @xmath21 respectively , taking into account the impact of @xmath5 .",
    "more complex structures can be obtained by combining mo - dal nodes into _",
    "networks_. a network contains a set of modal nodes and a number of @xmath1s that determine the interactions among them .",
    "a particular configuration of the network can be implemented at compile time for efficiency , or deferred to run time , if user design and micro - management are desired .",
    "the network exposes its set @xmath2 of   `` macro '' parameters to the user ( i.e. @xmath22 , etc . )",
    "in addition to the parameters of the individual modal nodes contained in it .",
    "thus , the implementation of the network has to translate the changes in these macro parameters into the corresponding changes in the parameters of the modal nodes .",
    "additionally , in order to interact with other networks and modal nodes , a network must provide a way of calculating its state .",
    "finally , in cases of certain physical models , networks need to provide a parameterization of their states by a variable or a set of variables corresponding to the notion of spatial location .",
    "typically , spatial parameterization of a modal network requires relatively costly fourier transform , so in some cases it may be optimal to only provide such parameterization for a particular set of coupling locations .",
    "several standard network `` templates '' are included in the framework for quick implementation of models based on typical behaviors of various classes physical objects , such as strings , bars , plates , membranes , and cymbals .",
    "new models as well as networks with `` unrealistic '' customary behavior can be easily incorporated .",
    "@xmath1s are responsible for all dynamic interactions in the system . due to polymorphism of the modal structures",
    ", one can use the same @xmath1s to describe interactions among mo - dal nodes in a network and interactions among networks .",
    "@xmath1s can generally be viewed as parametrized mappings from sets of states @xmath23 to sets of energy values @xmath24 .",
    "different classes of @xmath1s are distinguished , along the lines of the hierarchy of complexity levels described below .",
    "further subdivision is generally required for efficiency - for example , nonlinear functions can be classified by types of nonlinearity .",
    "if the synthesis is closely based on physical models , @xmath1s acting on complex structures will be dependent on spatial parameters provided by the networks .",
    "in addition to the @xmath1s whose domain and range belong to the same types of objects , a special case of an @xmath1 that acts on individual modal nodes of a network but derives its values from the macro state of the network is provided for efficient implementation of global constraints on complex modal structures .      while existing modal synthesis systems are usually closely associated with physical models of particular vibrating objects , the framework described here was intended as a more general tool , allowing the user to generate the largest possible range of algorithms that can be implemented using the modal paradigm . in order to organize this space of algorithms , a classification",
    "was chosen on the basis of complexitys , although higher complexity in this sense generally does correspond to higher computational complexity . ] .",
    "following levels are distinguished ( in the order of increased complexity ) :    * linear modal nodes and @xmath1s , @xmath13=@xmath8 for all modal nodes at all times , @xmath1s ignore phase information * phase - dependent terms are introduced into @xmath1s and into excitation response . * @xmath13 does not necessarily equal @xmath8 , but linearity of the @xmath1s and the equations of vibration is maintained . in practical terms ,",
    "this means that @xmath5 can affect the frequency of vibration .",
    "* nonlinearities are allowed in @xmath1s and in the vibration equations for the modes .",
    "clearly , this is only an approximate classification which can be easily refined further ; nevertheless , the author believes it to be a good starting point for investigating the kinds of qualitative phenomena that can or can not be recreated by restricting the complexity of the algorithms .",
    "such investigation is the current primary focus of our work , and some preliminary results will be reported along with the sound examples .",
    "the framework has been implemented as a set of c++ clas - ses .",
    "an integrating shell and a user interface have been provided .",
    "special attention has been given to maximum portability and real - time performance .",
    "all the non - time - critical dynamic data structures requiring heavy memory management have been implemented using standard template library@xcite , while for time - critical data either static memory allocation or , in rare cases , specialized memory management routines have been employed .",
    "the code is undergoing continued profiling in the hope of eliminating any unnecessary platform - specific routines .",
    "a typical approach to modular software synthesis is a signal - flow [ quasi-]sequential design , where units processing data at audio rate are chained together in a sequence .",
    "unfortunately , this approach is not appropriate for a system with a complicated ( potentially circular ) topology and close 2-way and n - way integration among the elements .",
    "thus , a specialized scheduling algorithm had to be designed for the framework ; its general function is to look through the list of all couplings , compute the @xmath1s and update the energy values in a way that simulates parallelism , after which , all modal structures are updated accordingly .    the standard distinction between control rate and audio rate is maintained , with the addition of the energy - coupling rate .",
    "the set of controls is subdivided into `` playable '' controls , such as fundamental frequency or mass values and `` system state '' controls , such as , for example , the total number of modal nodes .",
    "while both sets can be updated in real time , it is assumed that the former corresponds to performance , while the latter  to instrument design ; in practical terms this means that the changes to `` playable '' control parameters have to be continuously integrated into the current state of the system , while altering the `` system state '' parameters does not necessarily maintain that continuity .    during the development of the framework , various choi - ces had to be made with respect to maintaining a proper balance between precision and computational efficiency of the system .",
    "while the mechanisms for higher precision have in many cases been provided , it was generally assumed that due to the experimental and interactive nature of the framework , real - time performance should be given priority as long as the qualitative nature of the results was not being compromised .",
    "considering an appropriate user interface is an important part of designing any real - time interactive application . at the initial stages of the development",
    ", there was an effort to provide a front end to the framework via an interpreted programming language , such as python .",
    "however , while having advantages of flexibility and expandability , such interface did not appear adequate for real - time control or data presentation .",
    "it has since been superseded by a set of graphical ui tools tailored to various parts of the framework .",
    "it is still possible to read and edit most parameters as text , since the interface retrieves and stores its state in simply formatted text files . expanding the interface with a fully functional interpreter",
    "is still being considered , but is not of high priority at this point .",
    "the gui tools provided with the framework have been written on top of fltk@xcite , which was chosen for its small size and high portability .",
    "they include several c++ classes implementing ui elements corresponding to different parameter sets of a modal network and a general purpose integrating shell .",
    "the purpose of network - specific classes is to provide the user with quick and easy access to the state and parameterization of the network and the modal nodes it contains . as an example , in order to display and control the @xmath8 s of the modal nodes in a modal network @xmath12 , one needs to execute the following code :    ....     md_network * n ;        md_freqwindow * fwnd ;     anet = new md_network(\"simple_net\",16 ) ;     ...     fwnd = new md_freqwindow(n ) ; ....    the last line creates a frequency - slider window attached to the modal network , similar to the example below :     + in many cases , the user has several options for data representation ; for example the @xmath8 s of modal nodes can be represented as ratios of network s fundamental , deviations from its harmonic partials , or arbitrary frequency values .",
    "a system of `` snapshots '' for control parameters has been implemented , allowing to easily store and recall any of the user s settings , either for a window or for the entire network / instrument .",
    "all snapshots for a particular instrument are stored in human - readable files corresponding to that instrument .",
    "the dynamic allocation of @xmath1s is facilitated by a grid window , representing a matrix of pairwise couplings among modal nodes :     + individual cells can also be combined into groups to represent couplings affecting more than two nodes at a time .",
    "@xmath1s for a particular cell or a group of cells are selected from a menu containing a set of prepared function templates , with individual parameterization of each instance .",
    "the framework and the ui have been developed under linux , along with a parallel port to win9x . on both platforms , real - time output to soundcard drivers ( oss for linux and directx for windows )",
    "is provided , along with optional output to disk .",
    "partial midi control has been implemented , and fully customizable integration of midi control surfaces with the gui is in the works . at the moment it is difficult to give a measure of performance , since a complete modal instrument can include a vast number of structures and @xmath1s with varying computational costs . as a token example of performance ,",
    "an amd k6 - 2 350 mhz machine under linux was able to run a model of a stretched string with about 80 modal nodes at 44100 hz audio rate .",
    "a general framework for modal synthesis has been presented .",
    "its main strengths are its flexibility , its abstraction of dynamic interactions from the properties of modal structures , and its real - time design .",
    "it can be used , along with the integrating shell and gui , as a stand - alone real - time sound design and performance tool , or as a code base for further development of modal objects and algorithms .",
    "the framework is currently utilized in a survey of a large set of modal algorithms of varying complexity in the hopes of providing new insights into theory and practice of modal synthesis .",
    "michael odonnell and ilia bisnovatyi , `` the sound manifesto '' , in the proceedings of critical technologies for the future of computing , at a meeting of the international society for optical engineering ( spie ) , san diego , ca , july - august 2000 ."
  ],
  "abstract_text": [
    "<S> modal synthesis is an important area of physical modeling whose exploration in the past has been held back by a large number of control parameters , the scarcity of general - purpose design tools and the difficulty of obtaining the computational power required for real - time synthesis . </S>",
    "<S> this paper presents an overview of a flexible software framework facilitating the design and control of instruments based on modal synthesis . </S>",
    "<S> the framework is designed as a hierarchy of polymorphic synthesis objects , representing modal structures of various complexity . as a method of generalizing all interactions among the elements of a modal system , an abstract notion of _ </S>",
    "<S> energy _ is introduced , and a set of energy transfer functions is provided . </S>",
    "<S> such abstraction leads to a design where the dynamics of interactions can be largely separated from the specifics of particular modal structures , yielding an easily configurable and expandable system . </S>",
    "<S> a real - time version of the framework has been implemented as a set of c++ classes along with an integrating shell and a gui , and is currently being used to design and play modal instruments , as well as to survey fundamental properties of various modal algorithms . </S>"
  ]
}
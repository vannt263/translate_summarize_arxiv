{
  "article_text": [
    "we start with some basic definitions .",
    "a nonempty word @xmath2 is called a _ power _ if it can be written in the form @xmath3 , for some integer @xmath4 .",
    "otherwise @xmath2 is called _",
    "primitive_. thus murmur is a power , but murder is primitive .",
    "a word @xmath5 is a _ factor _ of a word @xmath2 if there exist words @xmath6 such that @xmath7 . if further @xmath8 ( resp . , @xmath9 ) , then @xmath5 is a _ prefix _ ( resp . ,",
    "_ suffix _ ) of @xmath2 . a prefix or suffix of a word @xmath2",
    "is called _ proper _ if it is unequal to @xmath2 .",
    "let @xmath10 be an ordered alphabet .",
    "we recall the usual definition of lexicographic order on the words in @xmath11 .",
    "we write @xmath12 if either    * @xmath2 is a proper prefix of @xmath13 ; or * there exist words @xmath14 and letters @xmath15 such that @xmath16 and @xmath17 .",
    "for example , using the usual ordering of the alphabet , we have @xmath18 . as usual",
    ", we write @xmath19 if @xmath12 or @xmath20 .",
    "a word @xmath2 is a _ conjugate _ of a word @xmath13 if there exist words @xmath21 such that @xmath22 and @xmath23 .",
    "thus , for example , enlist and listen are conjugates .",
    "a word is said to be _ lyndon _ if it is primitive and lexicographically least among all its conjugates .",
    "thus , for example , academy is lyndon , while googol and googoo are not .",
    "a classical theorem is that a finite word is lyndon if and only if it is lexicographically less than each of its proper suffixes @xcite .",
    "we now turn to ( right- ) infinite words .",
    "we write an infinite word in boldface , as @xmath24 and use indexing starting at @xmath25 . for @xmath26 ,",
    "we let @xmath27 $ ] denote the set @xmath28 .",
    "( if @xmath29 we get the empty set . )",
    "we let @xmath30 $ ] denote the word @xmath31 . similarly ,",
    "@xmath32 $ ] denotes the infinite set @xmath33 and @xmath34 $ ] denotes the infinite word @xmath35 .    an infinite word or sequence @xmath24 is said to be _",
    "@xmath0-automatic _ if there is a deterministic finite automaton ( with outputs associated with the states ) that , on input @xmath1 expressed in base @xmath0 , reaches a state @xmath36 with output @xmath37 equal to @xmath38 . for more details , see @xcite or . in several previous papers ,",
    "we have developed a technique to show that many properties of automatic sequences are decidable .",
    "the fundamental tool is the following :    let @xmath39 be a predicate associated with a @xmath0-automatic sequence @xmath40 , expressible using addition , subtraction , comparisons , logical operations , indexing into @xmath40 , and existential and universal quantifiers .",
    "then there is a computable finite automaton accepting the base-@xmath0 representations of those @xmath1 for which @xmath39 holds .",
    "furthermore , we can decide if @xmath39 holds for at least one @xmath1 , or for all @xmath1 , or for infinitely many @xmath1 .",
    "if a predicate is constructed as in the previous theorem , we just say it is `` expressible '' .",
    "any expressible predicate is decidable . as an example , we prove    let @xmath40 be a @xmath0-automatic sequence .",
    "the predicate @xmath41 defined by `` @xmath30 $ ] is primitive '' is expressible .",
    "[ prim - ex ]    ( due to luke schaeffer ) it is easy to see that a word is a power if and only if it is equal to some cyclic shift of itself , other than the trivial shift . thus a word is a power if and only if there is a @xmath42 , @xmath43 , such that @xmath44 = x[i+d .. j]$ ] and @xmath45 = x[i .. i+d-1]$ ] .",
    "a word is primitive if there is no such @xmath42 .",
    "let @xmath40 be a @xmath0-automatic sequence .",
    "the predicate @xmath46 defined by `` @xmath30",
    "< { \\bf x}[m .. n]$ ] '' is expressible .",
    "we have @xmath30 < { \\bf x}[m .. n]$ ] if and only if either    * @xmath47 and @xmath30 = { \\bf x}[m .. m+j - i]$ ] ; or * there exists @xmath48 such that @xmath49 = { \\bf x}[m .. m+t]$ ] and @xmath50 < { \\bf x}[m+t+1]$ ]",
    ".    let @xmath40 be a @xmath0-automatic sequence .",
    "the predicate @xmath51 defined by `` @xmath30 $ ] is a lyndon word '' is expressible .",
    "it suffices to check that @xmath30 $ ] is lexicographically less than each of its proper suffixes , that is , that @xmath52 holds for all @xmath53 with @xmath54 .",
    "we can extend the definition of lexicographic order to infinite words in the obvious way .",
    "we can extend the definition of lyndon words to ( right- ) infinite words as follows : an infinite word @xmath24 is lyndon if it is lexicographically less than all its suffixes @xmath55 = a_j a_{j+1 } \\cdots$ ] for @xmath56 .",
    "then we have the following theorems .",
    "let @xmath57 be a @xmath0-automatic sequence .",
    "the predicate @xmath58 defined by  @xmath34",
    "< { \\bf x}[j .. \\infty]$ ] is expressible .",
    "this is equivalent to @xmath59 such that @xmath60 = { \\bf x}[j .. j+t-1]$ ] and @xmath61 < { \\bf x}[j+t]$ ] .",
    "let @xmath57 be a @xmath0-automatic sequence .",
    "the predicate @xmath62 defined by `` @xmath34 $ ] is an infinite lyndon word '' is expressible .",
    "this is equivalent to @xmath58 holding for all @xmath63 .",
    "siromoney et al .",
    "@xcite proved that every infinite word @xmath24 can be factorized uniquely in exactly one of the following two ways :    * as @xmath64 where each @xmath65 is a finite lyndon word and @xmath66 ; or * as @xmath67 where @xmath65 is a finite lyndon word for @xmath68 , and @xmath69 is an infinite lyndon word , and @xmath70 .",
    "if ( a ) holds we say that the lyndon factorization of @xmath40 is infinite ; otherwise we say it is finite .",
    "ido and melanon @xcite gave an explicit description of the lyndon factorization of the thue - morse word @xmath71 and the period - doubling sequence ( among other things ) .",
    "( recall that the thue - morse word is given by @xmath72 = $ ] the number of @xmath73 s in the binary expansion of @xmath1 , taken modulo @xmath74 . ) for the thue - morse word , this factorization is given by @xmath75 where each term in the factorization , after the first , is double the length of the previous .",
    "sbold @xcite and ern generalized these results to other related automatic sequences .    in this section , generalizing the work of ido , melanon , sbold , and ern , we prove that the lyndon factorization of a @xmath0-automatic sequence is itself @xmath0-automatic .",
    "of course , we need to explain how the factorization is encoded .",
    "the easiest and most natural way to do this is to use an infinite word over @xmath76 , where the @xmath73 s indicate the positions where a new term in the factorization begins .",
    "thus the @xmath77th @xmath73 , for @xmath78 , appears at index @xmath79 .",
    "for example , for the thue - morse word , this encoding is given by @xmath80 if the factorization is infinite , then there are infinitely many @xmath73 s in its encoding ; otherwise there are finitely many @xmath73 s .    in order to prove the theorem",
    ", we need a number of results .",
    "we draw a distinction between a _ factor _ @xmath81 of @xmath40 ( which is just a word ) and an _ occurrence _ of that factor ( which specifies the exact position at which @xmath81 occurs ) .",
    "for example , in the thue - morse word @xmath71 , the factor @xmath82 occurs as @xmath83 $ ] and @xmath84 $ ] and many other places .",
    "we call @xmath85 $ ] and @xmath86 $ ] , and so forth , the _ occurrences _ of @xmath82 . an occurrence is said to be lyndon if the word at that position is lyndon .",
    "we say an occurrence @xmath87 $ ] is _ inside _ an occurrence @xmath88 $ ] if @xmath89 and @xmath90 . if , in addition , either @xmath91 or @xmath92 ( or both ) , then we say @xmath93 is _ strictly inside _",
    "these definitions are easily extended to the case where @xmath95 or @xmath96 are equal to @xmath97 , and they correspond to the predicates @xmath98 ( inside ) and @xmath99 ( strictly inside ) given below : @xmath100    an infinite lyndon factorization @xmath101 then corresponds to an infinite sequence of occurrences @xmath102 , [ i_2 .. j_2 ] , \\cdots\\ ] ] where @xmath103 $ ] and @xmath104 for @xmath105 , while a finite lyndon factorization @xmath106 corresponds to a finite sequence of occurrences @xmath102 , [ i_2 .. j_2 ] , \\ldots , [ i_r .. j_r ] , [ i_{r+1} .. \\infty]\\ ] ] where @xmath103 $ ] and @xmath104 for @xmath107 .",
    "let @xmath40 be an infinite word .",
    "every lyndon occurrence in @xmath40 appears inside a term of the lyndon factorization of @xmath40 .",
    "[ lyno ]    we prove the result for infinite lyndon factorizations ; the result for finite factorizations is exactly analogous .",
    "suppose the factorization is @xmath108 .",
    "it suffices to show that no lyndon occurrence can span the boundary between two terms of the factorization .",
    "suppose , contrary to what we want to prove , that @xmath109 is a lyndon word for some @xmath110 that is a nonempty suffix of @xmath111 ( possibly equal to @xmath111 ) , and @xmath112 that is a nonempty prefix of @xmath113 ( possibly equal to @xmath113 ) , and and @xmath26 .",
    "( if @xmath29 then there are no @xmath65 s at all between @xmath110 and @xmath112 . )",
    "since @xmath110 is a suffix of @xmath111 and @xmath111 is lyndon , we have @xmath114 .",
    "on the other hand , by the lyndon factorization definition we have @xmath115 . but",
    "@xmath112 is a prefix of @xmath113 , so just by the definition of lexicographic ordering we have @xmath116 .",
    "putting this all together we get @xmath117 .",
    "so @xmath118 for all words @xmath13 .",
    "on the other hand , since @xmath119 is lyndon , it must be lexicographically less than any proper suffix  for instance , @xmath112 .",
    "so @xmath120 .",
    "take @xmath121 to get a contradiction with the conclusion in the previous paragraph .",
    "the occurrence @xmath27 $ ] corresponds to a term in the lyndon factorization of @xmath40 if and only if    * @xmath27 $ ] is lyndon ; and * @xmath27 $ ] does not occur strictly inside any other lyndon occurrence .",
    "[ eight ]    suppose @xmath27 $ ] corresponds to a term @xmath122 in the lyndon factorization of @xmath40 .",
    "then evidently @xmath27 $ ] is lyndon .",
    "if it occurred strictly inside some other lyndon occurrence , say @xmath123 $ ] , then we know from theorem  [ lyno ] that @xmath123 $ ] itself lies in inside some @xmath124 , so @xmath27 $ ] must lie strictly inside @xmath124 , which is clearly impossible .",
    "now suppose @xmath27 $ ] is lyndon and does not occur strictly inside any other lyndon occurrence . from theorem  [ lyno ]",
    "@xmath27 $ ] must occur inside some term of the factorization @xmath123 $ ] .",
    "if @xmath27 \\not= [ i' .. j']$ ] then @xmath27 $ ] lies strictly inside @xmath123 $ ] , a contradiction .",
    "so @xmath27 = [ i' .. j']$ ] and hence corresponds to a term of the factorization .",
    "the predicate @xmath125 defined by `` @xmath27 $ ] corresponds to a term of the lyndon factorization of @xmath40 '' is expressible .",
    "indeed , by corollary  [ eight ] , the predicate @xmath125 can be defined by @xmath126    we can now prove the main result of this section .    using the encoding mentioned above",
    ", the lyndon factorization of a @xmath0-automatic sequence is itself @xmath0-automatic .",
    "[ lf ]    using the technique of , we can create an automaton that on input @xmath77 expressed in base @xmath0 , guesses @xmath95 and checks if @xmath125 holds .",
    "if so , it outputs @xmath73 and otherwise @xmath25 . to get the last @xmath77 in the case that the lyndon factorization is finite",
    ", we also accept @xmath77 if @xmath62 holds",
    ".    we also have    let @xmath40 be a @xmath0-automatic sequence .",
    "it is decidable if the lyndon factorization of @xmath40 is finite or infinite .",
    "the construction given above in the proof of theorem  [ lf ] produces an automaton that accepts finitely many distinct @xmath77 ( expressed in base @xmath0 ) if and only if the lyndon factorization of @xmath40 is finite .",
    "we programmed up our method and found the lyndon factorization of the thue - morse sequence @xmath71 , the period - doubling sequence @xmath127 , the paperfolding sequence @xmath128 , and the rudin - shapiro sequence @xmath129 , and their negations .",
    "( the results for thue - morse and the period - doubling sequence were already given in @xcite , albeit in a different form . )",
    "recall that the period - doubling sequence is defined by @xmath130 = | { \\bf t}[n+1 ] - { \\bf t}[n ] |$ ] .",
    "the paperfolding sequence @xmath131 arises from the limit of the sequence @xmath132 , where @xmath133 and @xmath134 , where @xmath135 denotes reversal and @xmath136 maps @xmath25 to @xmath73 and @xmath73 to @xmath25 .",
    "finally , the rudin - shapiro sequence @xmath129 is defined by @xmath137 = $ ] the number of ( possibly overlapping ) occurrences of @xmath138 in the binary expansion of @xmath1 , taken modulo @xmath74 .",
    "the results are given in the theorem below .",
    "the occurrences corresponding to the lyndon factorization of each word is as follows :    * the thue - morse sequence @xmath71 : @xmath139 , [ 3 .. 4 ] , [ 5 .. 8 ] , [ 9 .. 16 ] , [ 17 .. 32 ] ,      \\ldots , [ 2^i + 1 .. 2^{i+1 } ] , \\ldots $ ] ; * the negated thue - morse sequence @xmath140 : @xmath141 , [ 1 .. \\infty]$ ] ; * the rudin - shapiro sequence @xmath129 : @xmath142,[7 .. 14],[15 .. 30 ] ,      \\ldots , [ 2^i - 1 .. 2^{i+1 } - 2 ] , \\ldots$ ] ; * the negated rudin - shapiro sequence @xmath143 : @xmath141,[1 .. 1],[2 .. 2],[3 .. 10],[11 .. 42],[43 .. 46],[47 .. 174],\\ldots , [ 4^i-4^{i-1}-4^{i-2}-1 .. 4^i-4^{i-1}-2 ] , [ 4^i-4^{i-1}-1 .. 4^{i+1}-4^i-4^{i-1}-1 ] , \\ldots$ ] ; * the paperfolding sequence @xmath128 : @xmath142,[7 .. 14],[15 .. 30 ] , \\ldots , [ 2^i - 1 .. 2^{i+1}-2 ] , \\ldots$ ] ; * the negated paperfolding sequence @xmath144 : @xmath141 , [ 1 .. 1 ] , [ 2 .. 4 ] , [ 5 .. 9 ] , [ 10 .. 20 ] , [ 21 .. 84 ] , [ 85 .. 340 ] , \\ldots ,          [ ( 4^i - 1)/3 .. 4(4^i - 1)/3 ] , \\ldots $ ] ; * the period - doubling sequence @xmath127 : @xmath141 , [ 1 .. 4 ] , [ 5 .. 20 ] , [ 21 .. 84 ] , \\ldots ,          [ ( 4^i - 1)/3 .. 4(4^i - 1)/3 ] , \\ldots$ ] ; * the negated period - doubling sequence @xmath145 : @xmath146,[2 .. 9],[10 .. 41],[42 .. 169 ] , \\ldots ,           [ 2(4^i -1)/3 .. 2(4^{i+1}-1)/3 - 1 ] , \\ldots$ ] .",
    "there is a useful generalization of @xmath0-automatic sequences to sequences over @xmath147 , the non - negative integers .",
    "a sequence @xmath148 over @xmath147 is called @xmath0-regular if there exist vectors @xmath110 and @xmath112 and a matrix - valued morphism @xmath149 such that @xmath150 , where @xmath2 is the base-@xmath0 representation of @xmath1 . for more details , see .    the subword complexity function",
    "@xmath151 of an infinite sequence @xmath40 counts the number of distinct length-@xmath1 factors of @xmath40 .",
    "there are also many variations , such as counting the number of palindromic factors or unbordered factors .",
    "if @xmath40 is @xmath0-automatic , then all three of these are @xmath0-regular sequences .",
    "we now show that the same result holds for the number @xmath152 of primitive factors and for the number @xmath153 of lyndon factors .",
    "we refer to these two quantities as the `` primitive complexity '' and `` lyndon complexity '' , respectively .",
    "the function counting the number of length-@xmath1 primitive ( resp .",
    ", lyndon ) factors of a @xmath0-automatic sequence @xmath40 is @xmath0-regular .",
    "[ primlyn ]    by the results of , it suffices to show that there is an automaton accepting the base-@xmath0 representations of pairs @xmath154 such that the number of @xmath77 s associated with each @xmath1 equals the number of primitive ( resp .",
    ", lyndon ) factors of length @xmath1 .",
    "to do so , it suffices to show that the predicate @xmath155 defined by `` the factor of length @xmath1 beginning at position @xmath77 is primitive ( resp . ,",
    "lyndon ) and is the first occurrence of that factor in @xmath40 '' is expressible .",
    "this is just @xmath156 \\not= { \\bf x}[j .. j+n-1],\\ ] ] ( resp .",
    ", @xmath157 \\not= { \\bf x}[j .. j+n-1]).\\ ] ]    we used our method to compute these sequences for the thue - morse sequence , and the results are given below .",
    "let @xmath158 denote the number of lyndon factors of length @xmath1 of the thue - morse sequence .",
    "then @xmath159 [ lyndon - tm ]    let @xmath160 denote the number of primitive factors of length @xmath1 of the thue - morse sequence . then @xmath161 [ prim - tm ]    we can also state a similar result for the rudin - shapiro sequence .",
    "let @xmath162 denote the lyndon complexity of the rudin - shapiro sequence .",
    "then @xmath163 for all @xmath1 .",
    "this sequence is @xmath74-automatic and there is an automaton of 2444 states that generates it .",
    "[ lyndon - rs ]    the proof was carried out by machine computation , and we briefly summarize how it was done .",
    "first , we created an automaton @xmath164 to accept all pairs of integers @xmath154 , represented in base @xmath74 , such that the factor of length @xmath1 in @xmath129 , starting at position @xmath77 , is a lyndon factor , and is the first occurrence of that factor in @xmath129 .",
    "thus , the number of distinct integers @xmath77 associated with each @xmath1 is @xmath162 .",
    "the automaton @xmath164 has @xmath165 states .    using the techniques in",
    ", we then used @xmath164 to create matrices @xmath166 and @xmath167 of dimension @xmath168 , and vectors @xmath169 such that @xmath170 , if @xmath13 is the base-@xmath74 representation of @xmath1 . here",
    "if @xmath171 , then by @xmath172 we mean the product @xmath173 .    from this",
    "we then created a new automaton @xmath174 where the states are products of the form @xmath175 for binary strings @xmath13 and the transitions are on @xmath25 and @xmath73 .",
    "this automaton was built using a breadth - first approach , using a queue to hold states whose targets on @xmath25 and @xmath73 are not yet known . from theorem  [",
    "lyndon - bounded ] in the next section , we know that @xmath162 is bounded , so that this approach must terminate .",
    "it did so at 2444 states , and the product of the @xmath175 corresponding to each state with @xmath2 gives an integer less than or equal to @xmath176 , thus proving the desired result and also providing an automaton to compute @xmath177 .",
    "note that the lyndon complexity functions in theorems  [ lyndon - tm ] and [ lyndon - rs ] are bounded .",
    "this will follow more generally from theorem  [ lyndon - bounded ] below .",
    "of course , the original lyndon factorization was for finite words : every finite nonempty word @xmath13 can be factored uniquely as a nonincreasing product @xmath178 of lyndon words .",
    "we can apply this theorem to all prefixes of a @xmath0-automatic sequence .",
    "it is then natural to wonder if a _",
    "single _ automaton can encode _ all _ the lyndon factorizations of _ all _ finite prefixes .",
    "the answer is yes , as the following result shows .",
    "suppose @xmath40 is a @xmath0-automatic sequence .",
    "then there is an automaton @xmath164 accepting @xmath179 $ is $ w_1 w_2 \\cdots w_m$ } \\\\ & \\quad\\quad \\text{with } \\",
    "w_m = { \\bf x}[i .. n-1 ]      \\rbrace.\\end{aligned}\\ ] ]    as is well - known @xcite , if @xmath178 is the lyndon factorization of @xmath13 , then @xmath124 is the lexicographically least suffix of @xmath13 .",
    "so to accept @xmath180 we find @xmath77 such that @xmath181 < { \\bf x}[j .. n-1]$ ] for @xmath182 and @xmath183 .    given @xmath164 , we can find the complete factorization of any prefix @xmath184 $ ] by using this automaton to find the appropriate @xmath77 ( as described in ) and then replacing @xmath1 with @xmath77 .",
    "we carried out this construction for the thue - morse sequence , and the result is shown below in figure  [ fig1 ] .",
    "# 1#20.3#1    [ fig1 ]    in a similar manner , there is an automaton that encodes the factorization of _ every _ factor of a @xmath0-automatic sequence :    suppose @xmath40 is a @xmath0-automatic sequence .",
    "then there is an automaton @xmath174 accepting @xmath185 $ is $ w_1 w_2 \\cdots w_m$ } \\\\ & \\quad\\quad \\text{with $ w_m = { \\bf x}[l .. n-1]$ }       \\rbrace.\\end{aligned}\\ ] ]    we calculated @xmath174 for the thue - morse sequence using our method .",
    "it is a 34-state machine and is displayed in figure  [ fig2 ] .    #",
    "1#20.13#1    [ fig2 ]    another quantity of interest is the number of terms in the lyndon factorization of each prefix .",
    "let @xmath13 be a @xmath0-automatic sequence .",
    "then the sequence @xmath186 defined by @xmath187$}\\ ] ] is @xmath0-regular .",
    "we construct an automaton to accept @xmath188    for the thue - morse sequence the corresponding sequence satisfies the relations @xmath189 for @xmath105 , which allows efficient calculation of this quantity .",
    "a recurrent infinite word @xmath190 , where each @xmath191 is a letter , is called _ linearly recurrent with constant _",
    "@xmath192 if , for every factor @xmath110 and its two consecutive occurrences beginning at positions @xmath77 and @xmath95 in @xmath57 with @xmath193 , we have @xmath194 . the word @xmath195 is called a _ return word _ of @xmath110 .",
    "thus linear recurrence can be defined from the condition that every return word @xmath2 of every factor @xmath110 of @xmath57 satisfy @xmath196 .",
    "let @xmath197 denote the set of return words of @xmath110 in @xmath57 .",
    "[ su 26 - 08 - 2012 00:34 ] linear recurrence implies that every length-@xmath0 factor appears at least once in every factor of length @xmath198 .",
    "[ su 26 - 08 - 2012 00:38 ] let @xmath57 be an aperiodic linearly recurrent word with constant  @xmath199 .",
    "a.   if @xmath110 is a factor of @xmath57 and @xmath2 its return word , then @xmath200 .",
    "b.   the number of return words of any given factor @xmath110 of @xmath57 is @xmath201 .",
    "[ su 26 - 08 - 2012 00:48 ] the lyndon complexity of any linearly recurrent sequence is bounded .",
    "[ lyndon - bounded ]    let @xmath57 be a linearly recurrent sequence with constant @xmath199 .",
    "if @xmath57 is ultimately periodic , it is purely periodic because it is recurrent , and thus its lyndon complexity is bounded .",
    "therefore assume that @xmath57 is aperiodic , and let @xmath202 .",
    "denote @xmath203 , so that @xmath204 the left - hand side inequality in   and remark  [ su 26 - 08 - 2012 00:34 ] together imply that all factors in @xmath57 of length @xmath0 occur in all factors of length @xmath1 . therefore if @xmath110 is the lexicographically smallest factor of length  @xmath0 , then every lyndon factor of @xmath57 of length  @xmath1 must begin with  @xmath110 .",
    "since every suffix of @xmath57 that begins with @xmath110 can be factorized over @xmath197 , we conclude further that every length-@xmath1 lyndon factor of @xmath57 is a prefix of a word in @xmath205 .",
    "the return words of @xmath110 have length at least @xmath206 by lemma  [ su 26 - 08 - 2012 00:38 ] .",
    "furthermore , the right - hand side inequality in   gives @xmath207 therefore any lyndon factor of length @xmath1 is a prefix of a word in @xmath208 .",
    "since @xmath209 by lemma  [ su 26 - 08 - 2012 00:38 ] , we conclude that @xmath210 so that the lyndon complexity of @xmath57 is bounded .",
    "let @xmath211 be a primitive morphism , and let @xmath212 be a letter - to - letter morphism .",
    "if @xmath213 is prolongable , so that the limit @xmath214 exists for some letter @xmath215 , then the sequence @xmath216 is called _ primitive morphic_.    [ la 25 - 08 - 2012 23:36 ] primitive morphic sequences are linearly recurrent .",
    "[ to 04 - 10 - 2012 11:42 ] the lyndon complexity of any primitive morphic sequence is bounded",
    ".    follows from lemma  [ la 25 - 08 - 2012 23:36 ] and theorem  [ su 26 - 08 - 2012 00:48 ] .",
    "if @xmath57 is @xmath0-automatic and primitive morphic , then its lyndon complexity is @xmath0-automatic",
    ".    follows from corollary  [ to 04 - 10 - 2012 11:42 ] and theorem  [ primlyn ] , because a @xmath0-regular sequence over a finite alphabet is @xmath0-automatic .",
    "we thank luke schaeffer for suggesting the argument in the proof of theorem  [ prim - ex ] .",
    "e.  charlier , n.  rampersad , and j.  shallit .",
    "enumeration and decidable properties of automatic sequences . in g.",
    "mauri and a.  leporati , eds . , _ developments in language theory  15th international conference , dlt 2011 _ , vol .",
    "6795 , pp .",
    "165179 , springer - verlag , 2011 .",
    "d. go , d. henshall , and j. shallit . automatic theorem - proving in combinatorics on words . in n. moreira and r. reis , eds . , _",
    "ciaa 2012 _ , lect .",
    "notes in comput .",
    ", vol .  7381 , springer , 2012 , pp .",
    "180191 .",
    "g. melanon .",
    "lyndon factorization of infinite words . in c.",
    "puech and r. reischuk , eds .",
    ", _ stacs 96 , 13th annual symposium on theoretical aspects of computer science _ , lect .",
    "notes in comput .",
    ", vol .  1046 , springer , 1996 , pp .",
    "147154 .",
    "e. rowland and j. shallit .",
    "@xmath0-automatic sets of rational numbers . in a. h. dediu and c. martn - vide , eds .",
    ", _ lata 2012 proceedings _ , lect .",
    "notes in comp .",
    ", vol .  7183 , springer , 2012 , pp .",
    "490501 .",
    "j.  shallit .",
    "the critical exponent is computable for automatic sequences . in p.",
    "ambroz , s.  holub , and z.  msakov , eds . , _",
    "proceedings 8th international conference words 2011 _ , vol .",
    "63 of _ elect .",
    "_ , pp .   231239 , 2011 ."
  ],
  "abstract_text": [
    "<S> we investigate questions related to the presence of primitive words and lyndon words in automatic and linearly recurrent sequences . </S>",
    "<S> we show that the lyndon factorization of a @xmath0-automatic sequence is itself @xmath0-automatic . </S>",
    "<S> we also show that the function counting the number of primitive factors ( resp . </S>",
    "<S> , lyndon factors ) of length @xmath1 in a @xmath0-automatic sequence is @xmath0-regular . </S>",
    "<S> finally , we show that the number of lyndon factors of a linearly recurrent sequence is bounded . </S>"
  ]
}
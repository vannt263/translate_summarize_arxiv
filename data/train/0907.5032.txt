{
  "article_text": [
    "restarts have been shown to boost the performance of backtracking sat solvers ( see for example @xcite,@xcite ) . a restart strategy ( @xmath0,@xmath1,@xmath2 , ... ) is a sequence of restart lengths that the solver follows in the course of its execution .",
    "the solver first performs @xmath0 steps ( in case of sat solvers a step is usually a conflict ) .",
    "if a solution is not found , the solver abandons its current partial assignment and starts over . the second time it runs for @xmath1 steps , and so on .",
    "luby , sinclair and zuckerman @xcite show that for each instance there exists @xmath3 , an optimal restart length that leads to the optimal restart strategy ( @xmath3,@xmath3,@xmath3 , ... ) . in order to calculate @xmath3",
    ", one needs to have full knowledge of the runtime distribution ( rtd ) of the instance , a condition which is rarely met in practical cases .",
    "since the rtd is not known , solvers commonly use `` universal restart strategies '' .",
    "these strategies do not assume prior knowledge of the rtd and they attempt to perform well on any given instance .",
    "huang @xcite shows that when applied with conflict driven clause learning solvers ( cdcl ) , none of the commonly used universal strategies dominates all others on all benchmark families .",
    "he also demonstrates the great influence on the runtime of different restart strategies , when all its other parameters are fixed .    in this paper",
    "we show that the recent success in applying machine learning techniques to estimate solvers runtimes can be harnessed to improve solvers performance .",
    "we start by discussing the different universal strategies and recent machine learning success in sect .",
    "[ sec : background ] . in sect .",
    "[ sec : restart_strategy_portfolio ] we present _ lmpick _ , a restart strategy portfolio based solver .",
    "experimental results are presented and analyzed in sect .",
    "[ sec : results ] .",
    "we conclude and suggest optional future study in sect .",
    "[ sec : conclusion ] .",
    "competitive dpll solvers typically use restarts .",
    "most use `` universal '' strategies , while some use `` dynamic '' restart schemes , that induce or delay restarts ( such as the ones presented in @xcite and @xcite ) .    currently , the most commonly used universal strategies fall into one of the following categories :    * _ fixed strategy - _ ( @xcite ) . in this strategy",
    "a restart takes place every constant number of conflicts .",
    "while some solvers allow for a very short interval between restarts , others allow for longer periods , but generally fixed strategies lead to a frequent restart pattern .",
    "examples of its use can be found in berkmin @xcite ( where the fixed restart size is 550 conflicts ) and seige @xcite ( fixed size is 16000 conflicts ) . *",
    "_ geometric strategy - _ ( @xcite ) . in this strategy",
    "the size of restarts grows geometrically .",
    "this strategy is defined using an initial restart size and a geometric factor . wu and",
    "van beek @xcite show that the expected runtime of this strategy can be unbounded worse than the optimal fixed strategy in the worst case .",
    "they also present several conditions which , if met , guarantee that the geometric strategy would yield a performance improvement .",
    "this strategy is used by minisat v1.14 @xcite with initial restart size of 100 conflicts and a geometric factor of 1.5 . *",
    "_ luby strategy - _ ( @xcite ) . in this strategy",
    "the length of restart @xmath4 is @xmath5 when @xmath6 is a constant `` unit size '' and @xmath7 + the first elements of this sequence are 1,1,2,1,1,2,4,1,1,2,1,1,2,4,8,1,1 , ... luby , sinclair and zuckerman @xcite show that the performance of this strategy is within a logarithmic factor of the true optimal strategy , and that any universal strategy that outperforms their strategy will not do it by more than a constant factor .",
    "these results apply to pure las vegas algorithms , and do not immediately apply to cdcl solvers in which learnt clauses are kept across restarts .",
    "the effectiveness of the strategy in cdcl solvers appears mixed ( @xcite,@xcite ) and there is still no theoretical work that that analyzes its effectiveness in such solvers .",
    "however , luby s restart strategy is used by several competitive solvers including minisat2.1 and tinisat . * _ nested restart strategy - _ ( @xcite ) this strategy and can be seen as a simplified version of the luby strategy . after every iteration the restart length grows geometrically until it reaches a higher bound , at this point the restart size is reset to the initial value and the higher bound is increased geometrically .",
    "this strategy is used by picosat @xcite and barcelogic .",
    "previous work shows that restart strategies perform differently on different data sets .",
    "huang @xcite compares the performance of different strategies both for benchmark families and different benchmarks .",
    "he shows that there is no one strategy that outperformed all others across all benchmark families which suggests that adapting a strategy to a benchmark family , or even a single benchmark , could lead to performance gain .",
    "this suggests that choosing the best strategy from a set of strategies could improve the overall runtime , and for some benchmark families , improves it significantly .",
    "machine learning was previously shown to be an effective way to predict the runtime of sat solvers .",
    "satzilla @xcite is a portfolio based solver that uses machine learning to predict which of the solvers it uses is optimal for a given instance .",
    "satzilla uses an hierarchical approach @xcite and can use different evaluation criteria for solver performance .",
    "satzilla utilizes runtime estimations to pick the best solver from a solver portfolio .",
    "the solvers are used as - is , and satzilla does not have any control over their execution .",
    "satzilla was shown to be very effective in the sat competition of 2007 .",
    "two other machine learning based approaches for local search and cdcl are presented in @xcite and @xcite respectively .",
    "ruan et al .",
    "@xcite suggest a way to use dynamic programming to derive dynamic restart strategies that are improved during search using data gathered in the beginning of the search . this idea corresponds with the `` observation window '' that we will discuss in the next section .",
    "there are several differences between this work and ours .",
    "one important difference is that their technique chooses a different instance from the ensemble at each restart .",
    "while our intention is to solve each of the instances in the ensemble , it seems their technique is geared towards a different goal , where the solver is given an ensemble of instances and is required to solve as many of them as possible .",
    "another approach for runtime estimation was presented in our previous work @xcite . in that paper",
    "we introduce a linear model predictor ( lmp ) which demonstrates that runtime estimation can also be achieved using parameters that are gathered in an online manner , while a search is taking place , as opposed to the mostly static features gathered by satzilla .",
    "another difference between the methods is the way training instances are used .",
    "while satzilla uses a large number of instances that are not tightly related , lmp uses a much smaller set of problems , but these should be more homogeneous .",
    "since restart strategies are an important factor in the performance of dpll style sat solvers , a selection of a good restart strategy for a given instance should improve the performance of the solver for that instance .",
    "we suggest that by using supervised machine learning , it is possible to select a good restart strategy for a given instance .",
    "we present _ lmpick _ , a machine learning based technique which enhances cdcl solvers performance .",
    "_ lmpick _ uses a portfolio of restart strategies from which it chooses the best one for a given instance .",
    "following @xcite we recognize several restart strategies that have shown to be effective on one benchmark family or more .",
    "we chose 9 restart strategies that represent , to our understanding , a good mapping of commonly used restart strategies .    * _ luby-32 - _ a luby restart strategy with a `` unit run '' of 32 conflicts .",
    "this strategy represents a luby restart strategy with a relatively small `` unit run '' .",
    "this technique was shown to be effective by huang @xcite . * _ luby-512 - _ a luby restart strategy with a `` unit run '' of 512 conflicts .",
    "this strategy represents a luby restart strategy with a larger `` unit run '' .",
    "this is the original restart scheme used by tinisat , the solver we used in this study . *",
    "_ fixed-512 - _ a fixed restart scheme with a restart size of 512 conflicts .",
    "similar restart schemes that are used by solvers are berkmin s _ fixed-550 _ @xcite , and the 2004 version of zchaff , _ fixed-700",
    "_ @xcite . *",
    "_ fixed-4096 - _ a fixed balance scheme with a restart size of 4096 conflicts .",
    "we chose this restart scheme because it balances the short and long fixed schemes , and because it performed very well in our preliminary tests . * _ fixed-16384 - _ a fixed balance scheme with a restart size of 16384 conflicts .",
    "a longer fixed strategy , similar to the one used by siege @xcite ( _ fixed-16000 _ ) . * _ geometric-1.1 - _ a geometric restart scheme with a first restart size of 32 conflicts and a geometric factor of 1.1 .",
    "inspired by the one used by hunag @xcite .",
    "* _ geometric-1.5 - _ a geometric restart scheme with a first restart size of 100 conflicts and a geometric factor of 1.5 .",
    "this is the restart scheme used in minisat v1.14 @xcite . *",
    "_ nested-1.1 - _ a nested restart strategy , with an inner value of 100 conflicts , an outer value of 1000 values and a geometric factor of 1.1 .",
    "this strategy is parameterized as the one used by picosat @xcite . *",
    "_ nested-1.5 - _ a nested restart strategy , with an inner value of 100 conflicts , an outer value of 1000 values and a geometric factor of 1.5 .",
    "inspired by the results presented in @xcite .",
    "satsifiable and unsatisfiable instances from the same benchmark family tend to have different runtime distributions @xcite . a runtime prediction model that is trained using both sat and unsat instances performs worse than a homogeneous model .",
    "it is better to train a layer of two models , one trained with satisfiable instances ( @xmath8 ) and the other with unsatisfiable instances ( @xmath9 ) . since in most cases",
    "we do not know whether a given instance is satisfiable or not we need to determine which of the models is the correct one to query for a given instance according to its probability to be satisfiable .",
    "previous work ( @xcite,@xcite ) suggests that machine learning can be successfully used for this task as well .",
    "a classifier can be trained to estimate the probability of an instance to be satisfiable .",
    "some classification techniques perform better than others , but it seems that for most benchmark families , a classifier with 80% accuracy or more is achievable .    using supervised machine learning , we train models offline in order to use them for predictions online . for every training example @xmath10 , where @xmath11 is the training set",
    ", we gather the feature vector @xmath12 using the features presented in section [ sec : featurevector ] . once the raw data",
    "is gathered , we perform a feature selection .",
    "we repeatedly remove the feature with the smallest standardised coefficient until no improvement is observed based on the standard aic ( akaike information criterion ) . we then searched and eliminate co - linear features in the chosen set .",
    "the reduced feature vector @xmath13 is then used to train a classifier and several runtime prediction models .",
    "the classifier predicts the probability of an instance to be satisfiable and the runtime models predict cpu - runtime .",
    "_ lmpick _ trains one classifier , but two runtime models for each restart strategy @xmath14 ( where @xmath15 is the set of all participating strategies ) to the total of @xmath16 models .",
    "each training instance is used to train the satisfiability classifier , labeled with its satisfiability class , and @xmath17 runtime models , for each model it is labeled with the appropriate runtime .    as the classifier , we used a logistic regression technique .",
    "any classifier that returns probabilities would be suitable .",
    "we found logistic regression to be a simple yet effective classifier which was also robust enough to deal with different data sets .",
    "we have considered both sparse multinomial linear regression @xcite ( suggested to be effective for this task in @xcite ) , and the classifiers suggested by devlin and osullivan in @xcite , but the result of all classifiers were on par when using the presented feature vector on our datasets .    for the runtime prediction models we used ridge linear regression .",
    "using ridge linear regression , we fit our coefficient vector @xmath18 to create a linear predictor @xmath19 .",
    "we chose ridge regression , since it is a quick and simple technique for numerical prediction , and it was shown to be effective in the linear model predictor ( lmp ) @xcite . while lmp predicts the log of number of conflicts , in this work we found that predicting cpu - runtime is more effective as a selection criterion for restart strategies . using the number of conflicts as a selection criterion tends to bias the selection towards frequent restart strategies for large instances .",
    "this is because an instance with many variables spends more time going down the first branch to a conflict after a restart .",
    "this work is unaccounted for when conflicts are used as the cost criterion .",
    "hence a very frequent restart strategy might be very effective in the number of conflict while much less effective in cpu - time .",
    "there are 4 different sets of features that we used in this study , all are inspired by the two previously discussed techniques - satzilla @xcite and lmp @xcite .",
    "the first set include only the number of variables and the number of clauses in the original clause database .",
    "these values are the only ones that are not normalized .",
    "the second set includes variables that are gathered before the solver starts but after removing clauses that are already satisfiable , shrinking clauses with multiple appearances and propagating unit clauses in the original formula .",
    "these features are all normalized appropriately .",
    "they are inspired by satzilla and were first suggested in @xcite . the third set include statistics that are gathered during the `` observation window '' , this is a period where we analyze the behavior of the solver while solving the instance .",
    "the `` observation window '' was first used in @xcite . the way the observation window",
    "is used in this study will be discussed shortly .",
    "the variables in this set are the only ones which are dpll dependent .",
    "the last set includes the same features as the second , but they are calculated at the end of the observation window . a full list of the features is presented in fig .",
    "[ fig : featurvector ] . for further explanation about these features see @xcite and @xcite .",
    "[ fig : steps ] .,title=\"fig:\",width=309 ]      once all runtime models are fitted and the satisfiability classifier is trained , we can use them to improve performance for future instances .",
    "the steps that are taken by _",
    "lmpick _ are presented in fig .",
    "[ fig : steps ] .    since no prediction can be made before the observation window is terminated , and since we favor an early estimation , it is important that the observation window should terminate early in the search . in our preliminary testings",
    "we have noticed that the first restart tends to be very noisy , and that results are better if data is collected in the second restart onwards .",
    "we have tried several options for the observation window location and size , eventually we opted for a first restart which is very short ( 100 conflicts ) , followed by a second restart ( of size 2000 ) which hosts the observation window .",
    "hence the observation window is closed and all data is gathered after 2100 conflicts .",
    "once the feature vector @xmath20 is gathered it is used with the classifier to determine the probability of the instance to be satisfiable , @xmath21 . for each of the strategies ,",
    "both models are queried and a best strategy @xmath22 is picked using    @xmath23.\\ ] ]    the restart strategy which is predicted to be the first to terminate is picked , and the solver starts following this strategy from the next restart onwards .",
    "although restart strategies are usually followed from the beginning of the search , we do not want to lose the learned clauses from the first 2100 conflicts .",
    "therefore , we continue the current solving process and keep the already learnt clauses .",
    "we denote the restart sequence that takes place from the first restart to termination as @xmath24 .",
    "it is important to note that @xmath25 .",
    "[ fig : script : bmc : sat ]   dataset .",
    "different instances are made using different array_size values and a different number of unwinding iterations.,title=\"fig:\",width=196 ] [ fig : script : bmc : unsat ]   dataset .",
    "different instances are made using different array_size values and a different number of unwinding iterations.,title=\"fig:\",width=196 ]",
    "in this study we used tinisat ( version 0.22 ) @xcite as the basic solver .",
    "tinisat is a lightweight dpll style solver that was first presented in the sat race of 2006 .",
    "tinisat is a modern solver that uses clause learning and a unique decision heuristic that generally favours variables from recent assignments ( as in berkmin @xcite ) and uses vsids @xcite over the literals as a backup .",
    "we chose to use tinisat since ( i ) it is tuned in a way that would make comparison of restart strategies more meaningful @xcite and ( ii ) it is a compact and straightforward implementation which allows for greater ease of use .",
    "tinisat is not equipped with a pre - processor , and we have not used any in our study . by default , tinisat uses a luby restart strategy with a run unit of 512 conflicts .",
    "all our experiments were conducted on a cluster of 14 dual intel xeon cpus with em64 t ( 64-bit ) extensions , running at 3.2ghz with 4 gb of ram under debian",
    "gnu / linux 4.0 . by implementing a runtime cutoff of 90 minutes per instance",
    ", we managed to complete all experiments in approximately 290 cpu days .",
    ".summary of features of datasets . for each dataset",
    "the following details are presented : the dataset s classification ( class ) , the number of instances ( ins . ) and its size in mb ( all file are zipped ) . also , we present the time ( in hours ) it took for all 9 restart strategies to solve these datasets .",
    "we present the mean time ( mean ) , the standard deviation ( sd ) and the minimal and maximal time .",
    "runtime cutoff is 5400 seconds and it is the maximal runtime per instance . [ cols=\"<,<,<,<,^,^,^,^ \" , ]     in order for _ lmpick _ to enhance the solver s performance , runtime estimation models need to perform well .",
    "nevertheless , it is not crucial that each model s prediction is accurate .",
    "the important factor is the relative order of these predictions .",
    "we would prefer the chosen strategy ( @xmath26 ) to be amongst the best strategies for that instance .",
    "table [ table : bestpick_location ] demonstrates the quality of the chosen strategy @xmath26 .",
    "the table presents the percentage of strategies that outperform @xmath26 .",
    "this table shows that in all cases @xmath26 is better than picking a random strategy , and that for the _ crypto - unsat _ instances it performs very well .",
    "the difference in the performance on the _ crypto - sat _ data set is not easily explained by the data presented so far . while both the classifier and runtime prediction models perform better than on the _ velev - sat _ , the overall performance is worse .",
    "we conjecture that the cause of this difference is the differing likelihood of an instance being solved by multiple strategies .",
    "[ fig : compare - sat - datasets : bars ]   [ fig : compare - sat - datasets : plots ]     figure [ fig : compare - sat - datasets ] compares the 3 non - random satisfiable data sets . in fig .",
    "[ fig : compare - sat - datasets : bars ] bars represent the percent of instances in the data set that were solved within the cutoff time by each number of strategies .",
    "there is a clear difference between _ crypto - sat _ and the other 2 data sets . while for both industrial verification based data sets , most instances were solved by the majority of strategies , for",
    "_ crypto - sat _ many of the instances are solved by a small set of strategies .",
    "the effect of this difference is demonstrated in fig .",
    "[ fig : compare - sat - datasets : plots ] .",
    "this plot presents the probability of a randomly picked instance being solved within the cutoff time given the quality of selected strategy . from left to right , the picked strategy shift from best to worse .",
    "if _ lmpick _ picks one of the the two best strategies , the probability of all three data sets is quite similar , but when the chosen strategy is 3rd or 4th , the probability of solving a _ crypto - sat _ instance drops significantly compared to the other two .",
    "many instances in the _ crypto - sat _ data set are only solved within the cutoff by a small subset of strategies , making this data set harder as a sub - optimal selection is likely to lead to a timeout .",
    "restart strategies have an important role in the success of dpll style sat solvers .",
    "the performance of different strategies varies over different benchmark families .",
    "we harness machine learning to enhance the performance of sat solvers .",
    "we have presented _ lmpick _ , a technique that uses both satisfiability classification and solver runtime estimation to pick promising restart strategies for instances . we have demonstrated the effectiveness of _ lmpick _ and compared its results with the most commonly used restart strategies .",
    "we have established that in many cases _ lmpick _ outperforms any single restart strategy and that it is never worse than a randomly picked strategy .",
    "we have also discussed the influence of different components of _ lmpick _ on its performance .",
    "while universal restart strategies are more commonly used than dynamic ones , dynamic strategies are getting more attention lately . an interesting continuation to",
    "this work would be to use machine learning to develop a fully dynamic restart strategy .",
    "such a strategy could use unsupervised machine learning algorithm to develop a dynamic restart policy for a benchmark family of problems .",
    "restart strategies are not the only aspect of sat solving influencing performance on different benchmark families .",
    "machine learning can be also used to tune other parameters that govern the behavior of modern dpll based solvers , namely , parameters that are commonly set manually as a result of a trial and error process , such as decision heuristic parameters , clause deletion policy , etc .",
    "nicta is funded by the department of broadband , communications and the digial economy , and the arc through backing australia s ability and the ict centre of excellence program .",
    "hutter , f. , hamadi , y. , hoos , h. , leyton - brown , k. : performance prediction and automated tuning of randomized and parametric algorithms .",
    "proc . of the 12th int .",
    "conf . on principles and practice of constraint programming ( 2006 )      krishnapuram , b. , figueiredo , m. , carin , l. , hartemink , a. : sparse multinomial logistic regression : fast algorithms and generalization bounds . ieee transactions on pattern analysis and machine intelligence , 27:957 - 968 ( 2005 )        nudelman , e. , leyton - brown , k. , hoos , h.h . ,",
    "devkar , a. , shoham , y. : understanding random sat : beyond the clauses - to - variables ratio . proc . of the 10th int .",
    "conf . on principles and practice of constraint programming ( 2004 )"
  ],
  "abstract_text": [
    "<S> restart strategies are an important factor in the performance of conflict - driven davis putnam style sat solvers . selecting a good restart strategy for </S>",
    "<S> a problem instance can enhance the performance of a solver . </S>",
    "<S> inspired by recent success applying machine learning techniques to predict the runtime of sat solvers , we present a method which uses machine learning to boost solver performance through a smart selection of the restart strategy . </S>",
    "<S> based on easy to compute features , we train both a satisfiability classifier and runtime models . </S>",
    "<S> we use these models to choose between restart strategies . </S>",
    "<S> we present experimental results comparing this technique with the most commonly used restart strategies . </S>",
    "<S> our results demonstrate that machine learning is effective in improving solver performance . </S>"
  ]
}
{
  "article_text": [
    "lossless coding theory concerns the problem of encoding a sequence of symbols in some alphabet , usually binary .",
    "we demand two properties from our codes : they need to be ( uniquely ) decodable , and they should be concise , that is , the codewords should be short . in this paper",
    "we address the following problem : how concise can a coding system for the natural numbers be ?    in 1975 ,",
    "elias  @xcite considered this problem and constructed a sequence of efficient codes , culminating in the so - called @xmath0-code ( almost the same code had been discovered by levenshtein  @xcite in 1968 ) .",
    "the third member in elias s sequence of codes , called the @xmath1-code , is already asymptotically optimal in the sense that given a non - decreasing high - entropy distribution on the natural numbers , the expected codeword length is almost optimal ; consult elias  @xcite for a formal definition .",
    "other concise codes have been constructed by bentley and yao  @xcite , even and rodeh  @xcite and stout  @xcite .",
    "these codes were analyzed by ahlswede et al .",
    "more recent examples are yamamoto  @xcite and tarau  @xcite .",
    "an online universal code has been constructed by dodis et al .",
    "@xcite .",
    "a natural question to ask is whether there exists an optimal code .",
    "we formulate this question in section  [ sec : main ] and show that not only is there no single optimal code , but there is also no optimal _ sequence _ of codes . since the proofs of these results are constructive , they can be used to construct a fast - growing hierarchy of codes .",
    "elias s construction can not be used to obtain this result , as we show in section  [ sec : elias ] .",
    "care must be taken when considering the _ practical _ implications of these results : while all codes we consider are effective , they are not necessarily efficient , in the sense that encoding and decoding could be slow .",
    "furthermore , in practice one is not interested in the asymptotic performance of a code , but in its performance on integers up to a certain application - specific bound , or even on a certain class of distributions .",
    "we go on further and consider the existence of a _ scale _ of codes , which is an uncountable sequence of codes , ordered so that latter codes are better ( in the sense of definition  [ def : code - order ] below ) , and containing a code better than any given code .",
    "we show in section  [ sec : scale ] that the existence of a scale is independent of zfc , imitating classical results on functions on the natural numbers ordered by dominance .",
    "we start with some basic notations .",
    "the set of all finite binary strings is denoted @xmath2 .",
    "the set of natural numbers ( including zero ) is denoted @xmath3 .",
    "the set of finite sequences of natural numbers is denoted @xmath4 .",
    "the length of a binary string @xmath5 is denoted @xmath6 .",
    "next , some terminology from recursion theory . a sequence @xmath7 is called _ effective _ if the mapping @xmath8 is recursive ( computable by an algorithm ) .",
    "a sequence @xmath9 of sequences is effective if the mapping @xmath10 is recursive .",
    "a real number @xmath5 is effective if there is a recursive function mapping @xmath11 to a closed rational interval of width at most @xmath12 containing @xmath5 ( all rational intervals appearing in this paper are closed ) .",
    "a sequence @xmath7 is effective _ relative to _ another sequence @xmath13 if the mapping @xmath8 is recursive given an oracle for the mapping @xmath14 .",
    "the concept of being effective relative to a sequence of sequences or to a real number is defined analogously .",
    "similarly we can extend the definition to cover sequences of sequences and real numbers which are effective relative to other data .",
    "we proceed to define binary codes , which are our main focus of study .",
    "[ def : binary - code ] a ( uniquely - decodable ) _ binary code _ of the natural numbers is a mapping @xmath15 with the property that the function @xmath16 defined by @xmath17 is injective .",
    "if furthermore @xmath18 whenever @xmath19 , then @xmath20 is _",
    "monotone_.    a _ prefix code _ has the additional property that @xmath21 is not a prefix of @xmath22 for any @xmath23 .",
    "kraft  @xcite and mcmillan  @xcite proved the following well - known inequality .",
    "[ lem : kraft ] let @xmath20 be a binary code .",
    "then @xmath24 conversely , given a sequence @xmath25 satisfying the inequality @xmath26 there exists a prefix code @xmath20 such that @xmath27 . furthermore , @xmath20 is effective relative to @xmath28 .    due to this inequality and its converse , our study will concentrate only on the _ lengths _ of codewords rather than the codewords themselves .",
    "this prompts the following definition .",
    "[ def : code ] a _ precode _ is a monotone non - decreasing function @xmath29 satisfying kraft s inequality @xmath30 a _ code _ is a precode in which kraft s",
    "inequality is tight .",
    "a _ proper precode _ is a precode in which kraft s inequality is strict .",
    "the theory can also be developed with respect to non - monotone codes , but we feel that this is less natural .",
    "we require that kraft s inequality be tight for technical reasons ( to make our constructions effective ) .",
    "we feel that this is not a large concession since ( as we show in section  [ sec : main ] ) any binary code can be improved to a binary code in which kraft s inequality is tight .",
    "following properties of the sequence of codes constructed by elias  @xcite , we define a partial order on precodes .",
    "[ def : code - order ] let @xmath31 be precodes .",
    "we say that @xmath32 ( read _ @xmath28 is better than @xmath33 _ ) if @xmath34 we say that @xmath35 if @xmath36    this definition corresponds to the ratio test for convergent series : indeed , with any precode @xmath28 we can associate a convergent series @xmath37 , and then @xmath32 if and only if @xmath38 .",
    "this differs from the definition used by cholshchevnikova  @xcite and vojt  @xcite , who apply the ratio test to the remainder term .",
    "armed with this definition , we can give some evidence to our claim that non - monotone codes are less natural .",
    "[ lem : non - monotone ] there is a function @xmath39 , satisfying kraft s inequality tightly , such that @xmath40 for any code @xmath28 .",
    "define @xmath33 as follows : @xmath41 the critical values , @xmath42 , are @xmath43 and so on .",
    "let us check that @xmath33 satisfies kraft s equality : @xmath44 if @xmath28 is any code then for any @xmath11 we have @xmath45 thus @xmath46 .",
    "choosing @xmath42 , we conclude that @xmath47 therefore @xmath48 , and so @xmath49 , that is @xmath40 .",
    "our goal in this section is to show that there is no optimal code , or even optimal sequence of codes .",
    "this is the statement of the following theorem .",
    "[ thm : main ] for every sequence of codes @xmath50 there is a code @xmath33 , effective relative to the sequence , such that @xmath51 for every @xmath52 .",
    "similar results in the related context of fast - growing functions were proved by du  bois - reymond  @xcite and hadamard  @xcite . compared to these results ,",
    "the main challenges in proving theorem  [ thm : main ] are constructing @xmath33 in an effective way , and ensuring that @xmath33 is monotone .    the first step in proving theorem  [ thm : main ] is constructing effectively a precode @xmath53 satisfying @xmath54 for every @xmath52 .    [",
    "lem : better ] for every sequence of codes @xmath55 there is a proper precode @xmath53 , effective relative to @xmath56 , such that @xmath57 for every @xmath58 .",
    "furthermore , @xmath59 and @xmath60 is also effective relative to @xmath56 .",
    "let @xmath61 .",
    "if @xmath62 then @xmath63 , and so @xmath64 .",
    "this shows that @xmath33 is effective relative to @xmath56 .",
    "moreover , since the codes @xmath65 are monotone , so is @xmath33 .",
    "we will construct a precode @xmath66 , and it will follow ( as we show below ) that @xmath57 for all @xmath58 .",
    "we start by computing a sequence @xmath67 satisfying @xmath68 . for @xmath69 let @xmath70 be the minimal index satisfying @xmath71 , and note that @xmath72 .",
    "define @xmath73 .",
    "we have @xmath74 the existence of @xmath75 implies that @xmath76 is convergent , and so @xmath77",
    ". let @xmath78 .",
    "since @xmath77 , @xmath79 is infinite .",
    "the idea now is to construct the sequence @xmath53 as follows .",
    "choose an appropriate increasing sequence @xmath80 , and let @xmath81 for @xmath82 .",
    "we will choose the points @xmath83 for @xmath84 from the set @xmath79 , and this will ensure that @xmath53 is monotone .",
    "an appropriate choice of the points @xmath83 will ensure that @xmath85 is computable ( as a function of @xmath20 ) , and will enable us to choose a value of @xmath20 guaranteeing @xmath59 .    the sequence @xmath86 is defined as follows .",
    "let @xmath87 , and for @xmath84 , let @xmath83 be the minimal element of @xmath79 which is larger than both @xmath88 and @xmath89 .",
    "the sequence @xmath90 is clearly effective relative to @xmath56 .",
    "define a sequence @xmath91 by @xmath92 in the range @xmath82 .",
    "the sequence @xmath91 is also effective relative to @xmath56 .",
    "we claim that @xmath91 is monotone . indeed , if @xmath93 then @xmath94 , and if @xmath95 then @xmath96 since @xmath97 implies @xmath98 .",
    "we proceed to show that @xmath99 is computable . for all @xmath100 we have @xmath101",
    "this shows that @xmath99 is computable .",
    "in particular , we can find an integer @xmath20 such that @xmath102 .",
    "define @xmath103 . since @xmath91 is monotone",
    "so is @xmath53 , and since @xmath104 , @xmath53 is a precode .",
    "moreover , @xmath60 is computable .",
    "it remains to show that for all @xmath58 , @xmath57 .",
    "given @xmath105 , for all @xmath106 we have @xmath107 this implies that @xmath108 , and so @xmath57 .",
    "the second step of the proof of theorem  [ thm : main ] completes the precode constructed in lemma  [ lem : better ] to a code .",
    "given a proper precode @xmath53 , we construct a code @xmath109 by pointwise decreasing @xmath53 .",
    "the idea is as follows .",
    "suppose that @xmath110 .",
    "find the first @xmath111 such that @xmath112 , and create a new code @xmath91 by setting @xmath113 and @xmath114 for @xmath23 .",
    "the new code satisfies @xmath115 and so @xmath116 . repeating this operation ,",
    "we obtain a code @xmath33 .",
    "the main difficulty is computing an integer @xmath117 such that @xmath110 .",
    "this is accomplished by computing an approximation to @xmath118 , a function which is the subject of the following routine technical lemma .",
    "[ lem : log ] let @xmath119 be a rational number and let @xmath5 be a real number satisfying @xmath120 .",
    "then @xmath121 is effective relative to @xmath5 and @xmath122 .",
    "let @xmath123 be an integer satisfying @xmath124 .",
    "the function @xmath125 satisfies @xmath126 for @xmath127 , where @xmath128 .",
    "hence if @xmath129 \\subseteq [ 0,1 - 1/(2\\delta)]$ ] is an interval of width @xmath130 containing @xmath5 then @xmath131 $ ] is an interval of width at most @xmath132 containing @xmath133 .    given non - zero @xmath52 ,",
    "we show how to compute an interval of length at most @xmath12 containing @xmath121 , given @xmath122 and an oracle for @xmath5 .",
    "we start by computing @xmath134 and @xmath135 .",
    "we ask the oracle for a rational interval @xmath136 $ ] of length at most @xmath137 containing @xmath5 .",
    "since @xmath138 , we have @xmath139 .",
    "therefore @xmath131 $ ] is an interval of width at most @xmath140 containing @xmath133 . finally , using a taylor series expansion we compute rationals @xmath141 approximating @xmath142 up to @xmath143 .",
    "the interval @xmath144 $ ] is a rational interval of width at most @xmath12 containing @xmath133 .",
    "given this technical lemma , we are able to implement the program described above for the second step of the proof of theorem  [ thm : main ] .    [",
    "lem : completion ] for any proper precode @xmath53 there is a code @xmath33 , effective relative to @xmath53 and @xmath118 , such that @xmath145 for all @xmath52 .    in this proof , whenever we use the term _ effective _ , we mean effective relative to @xmath53 and @xmath118 .",
    "we construct a sequence @xmath146 of precodes converging to @xmath33 ( we make this notion precise below ) .",
    "we will ensure that @xmath147 and that the sequences @xmath146 and @xmath148 are effective , and furthermore @xmath149 is strictly increasing .",
    "the starting point is the sequence @xmath150 .",
    "next suppose that @xmath146 has been defined .",
    "we will find effectively an integer @xmath151 satisfying @xmath152 since @xmath148 is effective , we can effectively find an interval @xmath153 of width at most @xmath154 containing it , and an integer @xmath155 such that @xmath156 $ ] , implying @xmath157 if @xmath158 then we put @xmath159 , and otherwise we put @xmath160 . if @xmath159 then   clearly holds . if @xmath161 then using the assumption @xmath162 and the inequality @xmath163 we have @xmath164    given @xmath146 and @xmath151 , define @xmath165 as follows .",
    "let @xmath166 be the minimal position for which @xmath167 . the new sequence @xmath165 is obtained from @xmath146 by setting @xmath168 and @xmath169 for @xmath170 ; our choice of @xmath166 guarantees that @xmath165 is monotone .",
    "we have @xmath171 since @xmath172 , @xmath173 this shows that @xmath174 .",
    "moreover , it implies that @xmath175 .",
    "clearly @xmath176 is effective . since @xmath177 applying lemma  [ lem : log ] , we see that @xmath178 is effective .",
    "we define @xmath179 . since @xmath151 is non - decreasing and @xmath175 , @xmath33 is effective . since each @xmath146 is monotone ,",
    "so is @xmath33 .",
    "clearly @xmath180 , hence @xmath181 implies that @xmath182 . on the other hand ,",
    "each prefix of @xmath33 is a prefix of @xmath146 for all sufficiently large @xmath183 . since each @xmath146 is a precode",
    ", we deduce that for all @xmath100 , @xmath184 , and so @xmath185 . put together",
    ", @xmath186 is a code .",
    "we are now ready to prove the main theorem .",
    "lemma  [ lem : better ] shows that there is a proper precode @xmath53 satisfying @xmath187 for all @xmath52 which is effective relative to @xmath56 , and furthermore @xmath59 is also effective relative to @xmath56 .",
    "lemma  [ lem : log ] implies that @xmath118 is effective relative to @xmath56 , and so we can apply lemma  [ lem : completion ] to obtain a code @xmath33 satisfying @xmath188 for all @xmath100 which is effective relative to @xmath56 .",
    "this clearly implies that @xmath51 for all @xmath52 .",
    "the proof of theorem  [ thm : main ] is somewhat complicated , and one wonders whether there is any simpler construction . in this section",
    "we explain elias s construction , and show that it does nt always produce a better code .",
    "elias  @xcite defines a sequence of codes , starting with the trivial code @xmath189 .",
    "successive codes in the sequence are defined by applying the following operation .",
    "let @xmath28 be a code . the _ successor code _",
    "@xmath190 is defined by @xmath191    [ lem : elias ] for any code @xmath28 , @xmath190 is a code which is effective relative to @xmath28 .",
    "clearly @xmath190 is monotone and effective relative to @xmath28 .",
    "it also satisfies kraft s equality : @xmath192    if we start with @xmath193 and apply the operation @xmath194 successively , then we obtain progressively better codes . however , this phenomenon is nt universal .",
    "[ lem : elias - bad ] there exists an effective code @xmath28 such that @xmath195 .",
    "the construction proceeds in infinitely many stages .",
    "we start with the empty sequence .",
    "suppose that in stage @xmath52 , the sequence is of length @xmath196 ( so @xmath197 ) .",
    "we add to the sequence @xmath198 copies of the number @xmath199 .",
    "the resulting sequence has the form @xmath200 and so on .",
    "the sequence is clearly monotone , and the contribution of stage  @xmath11 to the sum in kraft s inequality is @xmath201 . as @xmath202",
    ", @xmath28 is a code . to see that @xmath195 , notice that @xmath203    this lemma shows that elias s construction can not be used in place of lemma  [ lem : better ] . in the same paper ,",
    "elias also defines the @xmath0-code , which is obtained through a diagonalization - like construction from the sequence of codes @xmath204 .",
    "we do not know how to generalize this construction .",
    "in the preceding section , we have shown that there is no optimal sequence of codes . however ,",
    "if we widen our scope by allowing uncountable sequences , such an object could perhaps be found .",
    "[ def : scale ] a _ scale _ of codes @xmath205 is a set which is well - ordered with respect to @xmath206 ( every non - empty subset of @xmath205 has a maximal element ) and is cofinal in the poset of codes ( for every code @xmath28 there is a code @xmath207 in @xmath205 ) .    instead of insisting that the scale be well - ordered",
    ", we could instead ask for it to be a chain ( any two elements are comparable ) .",
    "standard arguments show that if such an object exists then so does a scale .    mimicking a result of hausdorff  @xcite",
    ", we show that a scale exists given that the continuum hypothesis ( ch ) holds .",
    "this follows from theorem  [ thm : main ] using a standard argument .",
    "[ thm : scale : ch ] if ch holds then there exists a scale of codes .",
    "we construct a scale @xmath208 by transfinite induction on @xmath209 , using the fact that the cardinality of the set of codes is @xmath210 .",
    "fix an enumeration @xmath211 of all codes . at step @xmath193 ,",
    "use theorem  [ thm : main ] to construct a code @xmath212 , using the fact that @xmath193 is countable . by construction , @xmath205 is well - ordered . since @xmath213 for any code @xmath214 , @xmath205 is a scale .    we can also construct a model in which no scale exists . to that end , following a suggestion by stefan geschke  @xcite , we add @xmath215 codes using cohen s forcing . theorem  [ thm : main ] then implies , using standard arguments , that the poset of codes has no scale .",
    "similar arguments appear in frankiewicz and zbierski  ( * ? ? ?",
    "* ii.5 ) , jech  @xcite and scheepers  @xcite .",
    "the construction uses the concept of _ code prefix _ , which represents partial information regarding a code .",
    "[ def : code - prefix ] a _ code prefix _ is a finite non - decreasing sequence @xmath216 of natural numbers satisfying kraft s inequality strictly , @xmath217 .",
    "we say that a code ( or code prefix ) @xmath33 _ extends _ a code prefix @xmath28 if , as a sequence , @xmath28 is a prefix of @xmath33 .",
    "the following lemma encapsulates all the information we need to know about codes , gleaned mainly from theorem  [ thm : main ] .",
    "[ lem : code - prefixes ] let @xmath28 be a code prefix .    1 .   the code prefix @xmath28 can be extended to a code in infinitely many ways .",
    "2 .   given any code @xmath33 and @xmath52",
    ", the code prefix @xmath28 can be extended to a code prefix @xmath218 such that @xmath219 for some @xmath220 .",
    "for the first item , let @xmath221 be a code prefix .",
    "we can extend @xmath28 to a code prefix @xmath222 in infinitely many ways .",
    "any such extension can be extended to a code prefix @xmath223 such that @xmath224 .",
    "finally , extend @xmath223 to a code by affixing @xmath225 at its end .",
    "for the second item , let @xmath226 be a code prefix , and let @xmath33 be a code . since @xmath28 is monotone , @xmath227 for some integer @xmath228 , and so @xmath229 .",
    "use theorem  [ thm : main ] ( with @xmath230 for all @xmath52 ) to construct a code @xmath66 .",
    "find a point @xmath231 such that @xmath232 .",
    "extend @xmath28 by @xmath233 to form a new sequence @xmath218 .",
    "since @xmath229 and @xmath234 , this results in a code prefix , which satisfies @xmath235 .",
    "we are now in a position to describe the forcing construction .",
    "the entire construction takes place inside a countable transitive model @xmath236 of zfc .",
    "[ def : forcing ] a _ code prefix bundle _ is an @xmath215-sequence of code prefixes , only finitely many of which have non - zero length .",
    "the forcing @xmath237 consists of the set of code prefix bundles , ordered by @xmath238 whenever for each @xmath239 , @xmath214 extends @xmath240 .",
    "the _ support _ of a code prefix bundle @xmath28 , denoted @xmath241 , is the set of @xmath239 such that @xmath214 has non - zero length .",
    "the support is always finite .",
    "[ lem : ccc ] the forcing @xmath237 satisfies the countable chain condition : every antichain in @xmath237 ( a subset @xmath242 in which any two @xmath243 are incompatible : there is no @xmath244 satisfying @xmath245 and @xmath246 ) is at most countable .",
    "suppose that @xmath20 is an uncountable antichain in @xmath237 .",
    "since the support of any code prefix bundle is finite , the @xmath123-system lemma shows that there is an uncountable subset @xmath247 and a finite subset @xmath248 such that @xmath249 for all @xmath250 . for each @xmath251",
    "there are only countably many possible code prefixes , and",
    "so since @xmath205 is finite , there is an uncountable subset @xmath252 such that @xmath253 for all @xmath251 and @xmath254 .",
    "however , since @xmath249 and @xmath31 agree on @xmath205 for all @xmath254 , all code prefix bundles in @xmath255 are compatible , contradicting the assumption that @xmath20 is an antichain .",
    "let @xmath256 be a generic filter over @xmath237 , and construct the model @xmath257 $ ] , which contains @xmath256 .",
    "since @xmath237 satisfies the countable chain condition , the forcing preserves cardinals . in the remainder of the section ,",
    "we show that @xmath257 $ ] contains no scale of codes .",
    "we start with some consequences of lemma  [ lem : code - prefixes ] .",
    "[ lem : g ] let @xmath56 be the @xmath215-sequence defined by @xmath258 .    1 .   for each @xmath239 , @xmath214 is a code .",
    "moreover , for @xmath259 , @xmath260 .",
    "2 .   every code in @xmath257 $ ] has a name in @xmath261 which depends on countably many coordinates of @xmath56 .",
    "3 .   let @xmath262 be a name of a code which does not depend on @xmath214",
    ". then @xmath263 .",
    "the first item follows directly from lemma  [ lem : code - prefixes](a ) .",
    "the second item follows from the countable chain condition .",
    "indeed , every code @xmath264 $ ] ( represented as a set of pairs @xmath265 ) has a nice name of the form @xmath266 , where each @xmath267 is an antichain .",
    "lemma  [ lem : ccc ] shows that each @xmath268 is countable , and so @xmath269 is countable .",
    "each @xmath270 has finite support , and so altogether the name depends on countably many coordinates of @xmath56 .    to prove the third item ,",
    "we show that given @xmath52 , any code prefix bundle @xmath271 can be extended to a code prefix bundle @xmath272 that forces @xmath273 for some @xmath220 .",
    "let @xmath274 .",
    "using lemma  [ lem : code - prefixes](b ) , we can extend @xmath275 to @xmath276 which satisfies @xmath277 for some @xmath220 .",
    "the value of the prefix @xmath278 is forced by some code prefix bundle @xmath117 extending @xmath271 . since @xmath33 does nt depend on the coordinate @xmath193",
    ", we can assume that @xmath279 .",
    "the code prefix bundle @xmath272 extends @xmath117 by @xmath280 , and by construction it forces @xmath273 .",
    "lemma  [ lem : g ] allows us to show that the bounding number of the poset of codes is @xmath209 while its dominating number is @xmath215 , implying that there is no scale of codes .",
    "[ thm : no - scale ] in @xmath257 $ ] there is no scale of codes .",
    "let @xmath56 be the @xmath215-sequence defined by @xmath258 .",
    "suppose @xmath205 is a scale of codes .",
    "for @xmath281 , let @xmath282 satisfy @xmath213 . we claim that @xmath283 is cofinal in the poset of codes",
    "otherwise , there exists a code @xmath284 such that @xmath285 for all @xmath281 . yet according to lemma  [ lem : g](b ) , such a code has a name which depends only on countably many coordinates of @xmath56 . considering any other",
    "coordinate @xmath281 , lemma  [ lem : g](c ) shows that @xmath286 .",
    "the fact that @xmath287 is cofinal contradicts lemma  [ lem : g](c ) in a different way : according to lemma  [ lem : g](b ) , all codes in @xmath287 have names depending ( together ) on at most @xmath209 coordinates of @xmath56 . considering any other coordinate @xmath239 , lemma  [ lem : g](c ) shows that @xmath286 for all @xmath288 , contradicting the fact that @xmath287 is cofinal .",
    "we conclude that @xmath205 can not have been a scale .",
    "* fast - growing hierarchies .",
    "* theorem  [ thm : main ] can be used to construct a fast - growing hierarchy of effective codes .",
    "let @xmath289 be a countable ordinal , and assign a computable fundamental sequence @xmath290 to every limit ordinal @xmath291 .",
    "the fast - growing hierarchy @xmath292 is defined according to the following rules .",
    "the base case is @xmath293 . for a successor ordinal @xmath294 , use theorem  [ thm : main ] to construct a code @xmath295 . for a limit ordinal @xmath193 , use theorem  [ thm : main ] to construct a code @xmath214 such that @xmath296 for all @xmath297 .    * cardinal characteristics of the continuum . *",
    "section [ sec : scale ] shows that the existence of a scale of codes is independent of zfc .",
    "however , a more satisfying answer will explain how this phenomenon is related to other cardinal characteristics of the continuum .",
    "specifically , it is known that if we do not require our codes to be monotone , then the resulting poset of codes is tukey - equivalent to the ideal of measure - zero sets  ( * ? ? ?",
    "* lemma 4.12 ) .",
    "todorevi  @xcite conjectures that our poset is also tukey - equivalent to the same ideal ."
  ],
  "abstract_text": [
    "<S> a code of the natural numbers is a uniquely - decodable binary code of the natural numbers with non - decreasing codeword lengths , which satisfies kraft s inequality tightly . </S>",
    "<S> we define a natural partial order on the set of codes , and show how to construct effectively a code better than a given sequence of codes , in a certain precise sense . as an application , we prove that the existence of a scale of codes ( a well - ordered set of codes which contains a code better than any given code ) is independent of zfc . </S>"
  ]
}
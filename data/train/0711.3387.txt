{
  "article_text": [
    "in the present work we deal with pattern avoidance on words . this topic has first appeared in @xcite , and has been systematically developed by burstein in @xcite .",
    "subsequently several authors have studied this kind of matters , and in particular in @xcite exact formulas and/or generating functions for the number of words avoiding a single generalized pattern of length 3 have been found .",
    "here we use a general method to count words on a totally ordered alphabet avoiding a set of generalized patterns of length 3 of type @xmath0 ( i.e. , having a dash between the first and the second element ) .",
    "our approach consists of inserting a letter at the end of a given word of length @xmath1 , thus obtaining a word of length @xmath2 .",
    "we perform this operation in such a way that part of the preceding letters may have to be renamed .",
    "the choice of the letter to be inserted depends on the patterns to be excluded .",
    "obviously , the above mentioned insertion technique , if applied to a word avoiding the requested patterns , produces words in which the only occurrence of a forbidden pattern could involve the newly inserted element .",
    "moreover , the particular type of the patterns to be excluded allows to easily control that words of increasing length will be correctly generated .",
    "the first appearance of this technique goes back to @xcite ; later , in @xcite the author used it to count several classes of generalized pattern avoiding permutations .    for the sake of clearness , we recall the above mentioned technique in the framework of permutations . given a permutation @xmath3 ( where @xmath4 denotes the whole symmetric group )",
    ", it can be represented in a path - like form as in the following figure :        each entry of @xmath5 is a  node \" on the line corresponding to its value .",
    "every pair of adjacent nodes @xmath6 is linked by an ascending or descending segment depending on whether @xmath7 ( i. e. , the pair is an  ascent \" ) or @xmath8 ( i. e. , the pair is a  descent \" ) .",
    "if @xmath9 ( which is the set of all permutations of length @xmath1 ) , the @xmath1 horizontal lines of the permutation divide the plane into @xmath2 regions , numbered @xmath10 to @xmath2 from bottom to top .",
    "therefore , we can obtain @xmath2 permutations belonging to @xmath11 starting from @xmath5 , by inserting a new node in each of these regions ( see figure below ) and renaming the entries of the new permutation @xmath12 according to the following _ renaming rule _ : if we insert the node into region @xmath13 , then    1 .",
    "@xmath14 2 .   for @xmath15 1 .",
    "if @xmath16 then @xmath17 ; 2 .   otherwise @xmath18 .",
    "now , we briefly recall the notion of ( generalized ) pattern avoidance .",
    "if @xmath19 and @xmath20 are two permutations of @xmath21 and @xmath22 , respectively , then @xmath5 _ avoids _ the pattern @xmath23 if there are no indexes @xmath24 such that @xmath25 is in the same relative order as @xmath26 .",
    "the subset of @xmath23-avoiding permutations of @xmath21 is denoted @xmath27 .",
    "a _ generalized _",
    "pattern @xmath28 @xcite is a pattern with some dashes inserted , so that two consecutive elements of @xmath28 are adjacent if there is no dash between them ( e.g. @xmath29 is a generalized pattern of length 6 ) .",
    "a permutation @xmath5 _ contains _ the generalized pattern @xmath28 if the elements of @xmath5 corresponding to the elements of @xmath28 are in the same relative order and any two elements of @xmath5 corresponding to two adjacent elements of @xmath28 are adjacent in @xmath5 as well .",
    "a permutation @xmath5 _ avoids _ a generalized pattern @xmath28 if @xmath5 does not contain @xmath28 .",
    "for instance , the permutation @xmath30 contains @xmath31 but not @xmath32 . in general , if @xmath33 is a set of ( generalized ) patterns , @xmath34 denotes the set of permutations of @xmath35=\\{1,2,\\ldots , n\\}$ ] avoiding each pattern of @xmath33 .",
    "if we want to generate all the permutations in @xmath36 avoiding certain generalized patterns , then the regions where we can insert the new node form a subset of all the @xmath2 possible regions , whose elements are called _ active sites_. the insertion of the new node to generate a new permutation leads to an important consideration : if @xmath37 , then @xmath38 ( @xmath39 ) , obtained from @xmath5 inserting the last node in some region , does not contain the patterns specified in @xmath33 in its entries @xmath40 with @xmath15 , otherwise @xmath5 itself would contain some pattern of @xmath33 .",
    "therefore , we can decide if a region @xmath13 is an active site or not simply by checking those generalized patterns the last node is involved in .    for the enumeration of a class of generalized pattern avoiding permutations ( according to their length )",
    ", the following general strategy can be considered :    * find the active sites for the permutations of @xmath41 among the @xmath2 possible regions ; * describe the generation of the permutations of @xmath36 and encode the construction with a succession rule ; * obtain the generating function of the sequence enumerating @xmath42 from the succession rule with analytic techniques .",
    "this general technique for the study of the enumerative properties of pattern avoiding permutations can be properly described in the framework of the eco method @xcite , which offers a rigorous setting for the notions of  insertion of a node \" ,  active site \" and  succession rule \" mentioned above .",
    "the above described graphical representation for permutations can be easily conformed to words .",
    "the only difference lies in the fact that , in the representation of a word , more than one node may appear on the same line .    in our paper , the general strategy we have briefly sketched above",
    "is suitably extended for our purpose , adapting it to the case of pattern avoiding words .",
    "throughout the paper @xmath43 will denote a finite totally ordered alphabet , with @xmath44 . therefore we will always set @xmath45 .    a _ word pattern _ ( or simply _ pattern _ ) in @xmath43 is a word @xmath46 on an alphabet @xmath47 , where @xmath48 , with @xmath49 , where each letter of @xmath47 appears in @xmath46 at least once .",
    "a word pattern in @xmath43 will also be called a _ reduced word _ on @xmath43 .",
    "for instance , 32212 is a pattern in @xmath50 , but 41776 is nt .    denoting as usual by @xmath51 the set of all the words on the alphabet @xmath43",
    ", we say that @xmath52 _ avoids _ a pattern @xmath46 in @xmath43 when no subword of @xmath53 is order - isomorphic to @xmath46 ( see @xcite ) .",
    "for example , @xmath54 avoids the patterns 212 and 221 , but not the pattern 121 .",
    "the notion of generalized pattern for words is analogous to the definition introduced for permutations ; however , the rigorous definition can be found in @xcite . in particular , a generalized pattern of length three _ of type @xmath0 _ is a reduced word @xmath55 of the kind @xmath56 ( for the meaning of dashes in generalized word patterns , we refer once again to @xcite ) .",
    "finally , we will adopt the following notations , which differ from the corresponding ones used in @xcite :    * @xmath57 : set of words on @xmath43 of length @xmath1 avoiding each pattern in the set @xmath33 ; * @xmath58 : generating function of @xmath57 ( with respect to the length of the words ) .",
    "in this section we give a detailed description of the steps to be followed in order to apply our method to the enumeration of classes of ( generalized ) pattern avoiding words .",
    "we remark that all the notations introduced in the present section will be extensively used throughout the paper .",
    "suppose to be interested in counting the words in @xmath57 according to their length @xmath1 .",
    "denote by @xmath59 the set of reduced words of @xmath57 containing each letter of @xmath60 .",
    "our first goal is to determine @xmath61 , or , at least , an expression for the generating function of such quantities .",
    "now we try to describe an effective construction of the set of the reduced words of length @xmath2 starting from the set of the reduced words of length @xmath1 . to do this",
    ", we will apply the so - called eco method , for which we refer the reader to @xcite .",
    "taken a word @xmath62 , we try to insert a letter to the right of @xmath53 , so obtaining a new word @xmath63 of length @xmath2 .",
    "this can be done by describing @xmath53 by means of a path - like representation completely analogous to the one used for permutations . here",
    ", the only difference consists of the fact that we can add the rightmost letter both in a region ( if the letter occurs for the first time in @xmath53 ) and on a horizontal line ( otherwise ) . after the insertion",
    ", we possibly need to rename part of the letters of @xmath53 , according to the added letter .",
    "moreover , the choice of the letter to be added heavily depends on the patterns to be excluded . as an example , consider @xmath64 .",
    "using the graphical representation of words mentioned in the introduction and denoting with a circle a place where a letter can be added , figure 1 is obtained .",
    "[ pippone ]    ]    figure 1 means that , starting from 12132 , we can construct five new words ( of length 6 ) , which are the ones described in the picture . as one can immediately notice , if @xmath65 , then all the words produced by @xmath53 ( which , in the sequel , will also be called the _ sons _ of @xmath53 ) belong to @xmath66 .",
    "if we are lucky , the eco construction found in step 2 can be translated into a succession rule or , which is essentially the same , into a generating tree @xcite . in turn , if the succession rule is regular enough , we can hope to use it to get a closed formula for the numbers @xmath67 or maybe , if this is not possible , to derive a nice expression for the generating functions @xmath68 , for any fixed @xmath69 .",
    "if we have been able to enumerate @xmath59 , for all @xmath49 , it is now easy to count the words of @xmath57 .",
    "indeed , it is clear that each reduced word @xmath53 in @xmath59 is associated with exactly @xmath70 distinct words in @xmath57 : just replace the set of letters of @xmath53 with any possible subset of @xmath43 having @xmath69 elements , taking care of preserving the relative order of the letters .",
    "for instance , the reduced word @xmath71 is associated with the following @xmath72 words of @xmath73 : @xmath74    thus , @xmath75 is the number of words of @xmath76 having @xmath69 distinct letters .",
    "finally , we have simply to sum up to get : @xmath77    before applying the above described general method to some specific classes of pattern avoiding words , an important remark is to be done .",
    "when we construct the generating tree associated with the eco construction found in step 2 , what we get is not really a description of the growth of @xmath78 . indeed , if @xmath44 , the construction depicted in figure 1 only works when the starting word belongs to @xmath59 , _ for @xmath79_. if @xmath80 , it is clear that , in our graphical representation , no new horizontal line can be added in order to generate new words .",
    "for instance , for @xmath81 and @xmath82 , the only son of the word 12132 is the word 121321 ( see figure below )",
    ".        therefore , every time we will apply our construction , we have to keep in mind that , for @xmath79 , it is possible to add new horizontal lines , whereas for @xmath83 no further horizontal line can be added : hence our generation procedure , and the strictly related enumeration technique , must be suitably adapted .",
    "in this section we will apply our method to enumerate the pattern avoiding class @xmath85 . as we will see , this will lead us to consider a succession rule having only odd labels and , in particular , an infinite number of labels producing only one son .    following our program , we start by considering the set @xmath86 of the reduced words of @xmath87 on the @xmath69-letter alphabet @xmath88 .",
    "our first goal is to determine @xmath89 .",
    "take @xmath90 and suppose that the last letter of @xmath53 is @xmath91 ( @xmath92 ) .",
    "we can distinguish two cases :    * the letter @xmath91 occurs in @xmath53 for the first time in the last position .",
    "we represent this situation using the following diagram : +    + the above diagram should be interpreted as follows : @xmath53 is a reduced word on a @xmath69-letter alphabet ; the empty set symbol in the same line of the last letter denote that the @xmath91 in the last position is the first occurrence of @xmath91 in @xmath53 ; finally , the circles on the right indicate the active sites where we can add a new letter in order to obtain a word @xmath93 . in this particular case , we are allowed to add any letter of @xmath94 on the right of @xmath53 .",
    "to translate this fact into a succession rule , we use the following notations : the label @xmath95 denotes a word of @xmath86 ending with the letter @xmath91 and having no further occurrences of @xmath91 before ; the label @xmath96 denotes a word of @xmath86 ending with the letter @xmath91 and such that @xmath91 also appears in some previous position . with these notations , the production rule encoding the above construction can be written as follows : @xmath97 * the letter @xmath91 also occurs in @xmath53 in some position other than the last one . in this case",
    ", we can use the following diagram : +    + the meaning of the symbols are obviously the same as for the previous diagram . here",
    "the only difference consists of the fact that @xmath91 appears not only in the last position of @xmath53 , but also somewhere before , and this has been represented by a gray circle placed in the same line of the last occurrence of @xmath91 . in this second case ,",
    "every insertion in a place ( region or line ) other than such a line would produce an occurrence of a forbidden pattern .",
    "therefore , with the same notations as above , the associated production rule is the following : @xmath98    now , putting things together , and recalling that the word of minimum length avoiding simultaneously @xmath99 and @xmath100 is 1 ( which is represented by the label @xmath101 ) , the succession rule encoding the whole construction is the following : @xmath102    the above succession rule is indeed too complicated to allow enumeration .",
    "however , it is possible to rewrite it in an equivalent form which is surely more suitable for our purposes . to do this ,",
    "the following two observations are essential .    1 .   in the production @xmath103 ,",
    "the subscript @xmath91 is unimportant ; instead , we should keep track of the parameter @xmath69 , since we will use it in the enumeration process .",
    "so , since @xmath96 has only one production , we can replace this production rule with the rule @xmath104 ( so that @xmath105 stands for a reduced word on a @xmath69-letter alphabet whose last letter appears somewhere else in the word itself ) .",
    "the production of @xmath95 is independent of @xmath91 ; therefore , since @xmath95 produces @xmath106 labels , taking care of the previous remark , we can replace its production rule with the following : @xmath107 + thus , @xmath108 represents a @xmath69-letter word on a reduced alphabet whose last letter does not appear in any other position .",
    "thanks to the above considerations , we have that the rule in ( [ complic ] ) is equivalent to : @xmath109    the first levels of the associated generating tree are depicted in the figure below :        looking at the labels of the succession rule ( [ sempl ] ) and keeping in mind how such a rule has been obtained , we immediately observe that :    * each label @xmath108 represents a word having @xmath69 letters ; * each label @xmath105 represents a word having @xmath69 letters ; * the unique labels appearing at level @xmath1 of the associated generating tree are @xmath110 .    therefore , @xmath111 ( see section 3 ) is either the number of labels @xmath105 at level @xmath1 , if @xmath112 , or the number of labels @xmath108 at level @xmath1 , if @xmath113 .    from the succession rule ( [ sempl ] ) , we can obtain an explicit formula for the number @xmath111 .",
    "when @xmath49 , we have @xmath114 whereas , for @xmath115 , it is @xmath116 .",
    "_ we can use the rule ( [ sempl ] ) to get the following recursions for the @xmath111 s : @xmath117    since @xmath118 , from ( [ uno ] ) we immediately have @xmath119 , whence , from ( [ due ] ) , we get @xmath120 . finally , from ( [ tre ] ) , it is @xmath121 , for @xmath122 .",
    "these formulas hold only for @xmath49 , since our alphabet has @xmath123 letters , and so the generating tree of ( [ sempl ] ) can be used only for @xmath79 .",
    "obviously , when @xmath115 we have @xmath116.@xmath124    the first lines of the infinite matrix @xmath125 are the following ( where we have added one more row and one more column to represent the empty word ) : @xmath126    of course , in the matrix @xmath127 we have to turn into @xmath128 the entries of all the columns from the @xmath129-th onwards .",
    "now we are ready to get the exact enumeration of the class @xmath84 . following the method described in section [ method ]",
    ", we have the following results .",
    "the total number of words of @xmath130 having @xmath49 distinct letters is : @xmath131 where @xmath132 denotes the usual falling factorial , @xmath133 .",
    "it is @xmath134",
    "the next case we take into consideration is that of words simultaneously avoiding the two generalized patterns @xmath136 and @xmath137 .",
    "also in this case , our technique allows us to get to an explicit counting result quite quickly and easily .    as usual , we start by considering @xmath138 , i.e. reduced words .",
    "suppose that @xmath139 and that @xmath91 ( @xmath92 ) is the last letter of @xmath53 .",
    "using a diagram similar to the one of the previous section , we can represent the set of productions of @xmath53 as follows :        notice that the insertion is not possible on a line other than the one containing the last letter of @xmath53 .",
    "unlike the previous class of words , here it is not necessary to distinguish two cases , since the production of @xmath53 is independent of the fact that the last letter of @xmath53 is the first occurrence of @xmath91 or not .",
    "since @xmath140 is the only word of length 1 of our class , we have the following succession rule associated with the above diagram : @xmath141    also in this case , we can observe that the number of labels produced by @xmath142 does not depend on @xmath91 .",
    "since we are only interested in the parameter @xmath69 , we can easily find that the above rule is equivalent to @xmath143    in the rule ( [ semplice ] ) , a label @xmath144 represents a word having @xmath145 distinct letters .",
    "the first few levels of the associated generating tree look as follows :        the above succession rule allows us to find the exact value of the numbers @xmath146 .    for @xmath49",
    ", we have @xmath147    _ proof . _ the same production rule as ( [ semplice ] ) , but with axiom 2 , constitutes a well known succession rule , where the associated numerical sequence is given by the number of arrangements @xcite .",
    "it is immediate to realize that our generating tree can be seen as a part of the generating tree for arrangements , as the following figure clarifies :        the level polynomials of the generating tree for arrangements are @xmath148 ( here the coefficient of @xmath149 , depending on @xmath1 , gives the number of labels @xmath150 at level @xmath1 ) .",
    "therefore , the relation between @xmath151 and the level polynomials @xmath152 ( where the coefficient of @xmath149 is the number of labels @xmath153 at level @xmath1 ) of our generating tree is expressed by the equality @xmath154 which gives @xmath155 whence , recalling that the coefficients of the polynomials @xmath152 coincide with the numbers @xmath111 only when @xmath49 , for such values of @xmath69 we have @xmath156    the first few lines of the matrix @xmath157 ( where the first column , representing the set of words having @xmath128 letters , and the first row have been added ) are : @xmath158    as usual , we must remember that the above formula is only valid when @xmath49 , so that in the matrix @xmath127 we have to consider columns exclusively up to @xmath80 , setting all the remaining entries equal to @xmath128 .",
    "finally we can give complete enumeration results .",
    "the number of words of @xmath159 having @xmath69 distinct letters is @xmath160    the total number of words of @xmath159 is @xmath161",
    "this case is more difficult to deal with than the previous ones . of course",
    ", we will follow the same general method ; at the end , we will get an expression for the generating function of the class , rather than a closed form for the associated numerical sequence .    as usual , we start by considering the set @xmath163 of @xmath69-reduced words of length @xmath1 simultaneously avoiding @xmath164 and @xmath99 .",
    "let @xmath165 with last letter @xmath91 .",
    "we can distinguish two cases .",
    "* the occurrence of @xmath91 in the last position of @xmath53 is the first occurrence of @xmath91 in @xmath53 .",
    "drawing the usual diagram , we are in the following situation : +    + remember that the circles on the right represent those active sites in which we are allowed to add a letter at the end of @xmath53 . in this case , the above diagram tells us that we can add a letter in any position .",
    "thus we can encode this fact using the following production rule : @xmath166 ( the meaning of the symbols has been extensively explained in the previous two cases ) .",
    "* the letter @xmath91 occurs in @xmath53 for the first time somewhere before its occurrence in the last position . in this case",
    "the situation is the following : +    + here the production is not as trivial as in case i ) , and can be encoded by the rule @xmath167    what we can immediately observe is that , in case i ) , the production of @xmath142 does not depend on @xmath91 , whereas , in case ii ) , the production of @xmath168 does .",
    "moreover , setting @xmath169 both in ( [ prod1 ] ) and in ( [ prod2 ] ) , we obtain formally the same production rule .",
    "this implies that our eco construction for the class @xmath170 is equivalent to the following : @xmath171 where the label @xmath142 , for @xmath172 , corresponds to the labels @xmath168 in ( [ prod1 ] ) and ( [ prod2 ] ) and the label @xmath173 corresponds to the label @xmath174 in ( [ prod1 ] ) and ( [ prod2 ] ) , _ for any @xmath175_. we can also have a look at the first levels of the associated generating tree :        using the succession rule ( [ regola ] ) , we are able to enumerate the class @xmath170 . to do this ,",
    "we will make use of a recursion on the entries of the associated eco matrix we are going to show below .",
    "the first lines of the eco matrix associated with the above depicted generating tree ( i.e. , the infinite matrix describing the distribution of the labels at the various levels of the generating tree , see @xcite ) can be organized as follows :    [ cols=\"^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^ \" , ]     as it should be clear , since @xmath95 represents a word having @xmath69 distinct letters , the cardinality of the set of words having @xmath69 distinct letters is given by the sum of the entries of the columns labelled @xmath176 , for @xmath91 running from 1 to @xmath177 . to get the desired recurrence relation among the entries of the matrix",
    ", we recall that the columns labelled @xmath176 ( @xmath178 ) derive from the production rule ( [ prod2 ] ) , whereas those labelled @xmath179 derive from the production rule ( [ prod1 ] ) . in the sequel we will denote by @xmath180 the generating function of column @xmath179 and by @xmath181 the generating function of column @xmath176 , with @xmath182 .",
    "columns labelled @xmath179 will also be called _ special columns_. to keep track of the empty word we will also consider the generating function @xmath183 .",
    "the following recurrence relation holds : @xmath184    _ proof .",
    "_ looking at the succession rule ( [ regola ] ) , we observe that a label @xmath95 , for @xmath178 , can only be generated by a label @xmath185 , with @xmath186 , and each of these labels produces @xmath95 precisely once .",
    "moreover , a label @xmath173 can be generated by any label @xmath187 , and @xmath187 produces precisely @xmath91 copies of @xmath173 . starting from these considerations ,",
    "we are led to the following set of recursions for the entries of our eco matrix : @xmath188 where , of course , @xmath189 denotes the entry corresponding to row @xmath1 and column labelled @xmath176 .",
    "the recursion for @xmath189 , with @xmath190 , can be iterated so to obtain a formula expressing @xmath189 only in terms of the entries of special columns , which is : @xmath191 the above formula can be proved using an easy induction argument on @xmath91 .",
    "now we can plug the above expression for @xmath189 into the recursion formula for @xmath192 , thus obtaining : @xmath193    the above recursion for the entries of special columns can be immediately translated into the desired recursion for the generating function @xmath180.@xmath124    @xmath194    formula ( [ colspecespl ] ) is a completely explicit expression for the generating function @xmath180 , but it is of course impossible to use it in any expression in which @xmath180 is required .",
    "for this reason , in the sequel we will simply write @xmath195 in our formulas , but the reader should remember that @xmath195 can be replaced by its expression in formula ( [ colspecespl ] ) .    in order to completely know the entries of our eco matrix , we now need to find an expression for the generating functions @xmath196 .",
    "the following formula ( expressing @xmath181 in terms of @xmath180 ) holds : @xmath197    _ proof .",
    "_ converting into generating functions the recurrence relation ( [ ricorsione ] ) immediately gives the required formula.@xmath124    now we are ready to reach our first goal , that is the enumeration of the class of words @xmath170 .",
    "the generating function @xmath198 of @xmath69-reduced words of @xmath199 according to the length is @xmath200    _ proof .",
    "_ since @xmath69-reduced words of @xmath199 are represented by the labels of the type @xmath142 , with @xmath201 , the generating function @xmath198 can be obtained by simply summing up the generating functions corresponding to such labels , whence @xmath202    before performing the last step of our methodology , the usual remark is in order .",
    "it is obvious that the above result is valid only when @xmath69 is  small \" .",
    "more precisely , the reader has to remember that , if the starting alphabet has @xmath123 letters , then in the above eco matrix we must consider only the labels @xmath142 with @xmath49 .",
    "the last two theorems , stated as usual without proofs , conclude our enumeration of @xmath199 .",
    "the generating function for the number of words of @xmath203having @xmath69 distinct letters is @xmath204    the generating function of the sequence @xmath205 is @xmath206",
    "in our paper we have given complete results concerning the enumeration of the classes of words @xmath207 , where @xmath33 consists of two generalized patterns of length three of type @xmath56 on the alphabet @xmath208 .",
    "our main aim was to illustrate the soundness of our methodology , as well as to use it to find some new counting results .",
    "of course , to complete the enumeration of @xmath207 when @xmath33 is as above , many more cases should be considered .",
    "following essentially the same lines , it is possible to determine some further generating functions , which we express below without proof ."
  ],
  "abstract_text": [
    "<S> the method we have applied in @xcite to count pattern avoiding permutations is adapted to words . as an application , we enumerate several classes of words simultaneously avoiding two generalized patterns of length 3 . </S>"
  ]
}
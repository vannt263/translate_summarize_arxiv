{
  "article_text": [
    "* the problem and the model . * two mobile agents ( robots ) modeled as points starting at different locations of an unknown environment have to meet .",
    "this task is known in the literature as the rendezvous problem , and has been studied under two alternative scenarios .",
    "either the agents move in a network , modeled by an undirected connected graph ( the _ graph scenario _ ) , or they move in ( some subset of ) the plane ( the _ geometric scenario _ ) .    in this paper",
    "we study the _ asynchronous _ version of the rendezvous problem , under both above scenarios : each agent designs its route and an adversary controls the speed of each agent , can vary this speed , stop the agent , or even move it back and forth , as long as the walk of the agent in each segment of its route is continuous , does not leave it and covers all of it . in the asynchronous version of the graph scenario , meeting at a node",
    "may be impossible even in the two - node graph , as the adversary can desynchronize the agents and make them visit nodes at different times .",
    "thus it is necessary to relax the requirement and allow agents to meet either in a node or inside an edge .",
    "such a definition of meeting is natural , e.g. , when agents are robots traveling in a labyrinth .",
    "we consider an embedding of the underlying graph in the three - dimensional euclidean space , with nodes of the graph being points of the space and edges being pairwise disjoint line segments joining them ( hence there are no edge crossings ) .",
    "agents are modeled as points moving inside this embedding .",
    "if nodes of the graph are labeled and the labeling is known , then agents can decide to meet at a predetermined node and the rendezvous problem reduces to graph exploration .",
    "however , in many applications , when rendezvous is needed in a network of unknown topology , such unique labeling of nodes may be unavailable , or agents may be unable to perceive such labels , e.g. , due to security reasons . hence it is important to design rendezvous algorithms for agents operating in _ anonymous _ graphs , i.e. , graphs without unique labeling of nodes .",
    "it is important to note that the agents have to be able to _ locally _ distinguish ports at a node : otherwise , an agent may even be unable to visit all neighbors of a node of degree 3 ( after visiting the second neighbor , the agent can not distinguish the port leading to the first visited neighbor from that leading to the unvisited one ) .",
    "consequently , agents initially located at two nodes of degree 3 , might never be able to meet .",
    "this justifies a common assumption made in the literature : all ports at a node are locally labeled by distinct positive integers .",
    "degrees of nodes can be either finite or infinite .",
    "no coherence between those local labelings is assumed .",
    "when an agent leaves a node , it is aware of the port number by which it leaves and when it enters a node , it is aware of the entry port number .",
    "it can also verify , at each node , whether a given positive integer is a port number at this node .",
    "agents know neither the graph , nor the initial distance between them .",
    "they can not mark the nodes or the edges in any way .",
    "rendezvous has to be accomplished regardless of local labelings of ports .",
    "each agent terminates its walk at the time of meeting the other agent .    in the geometric scenario",
    ", we assume that the terrain in which agents operate is a closed subset of the euclidean plane , i.e. , it contains limits of all converging sequences of points in it .",
    "the _ boundary _ of the terrain is defined as the set of points having arbitrarily close points both in the terrain and outside of it .",
    "since the terrain is closed , the boundary is included in it .",
    "all other points of the terrain are its _ interior _ points",
    ". each agent can only distinguish if it is currently in an interior point of the terrain or in its boundary .",
    "agents do not know the terrain in which they operate , they can not `` see '' any vicinity of the currently visited point and they can not leave any marks .",
    "agents are equipped with a compass and with the same unit of length .",
    "thus systems of coordinates of agents are aligned and the origin for each agent is at its starting point .",
    "again , an agent terminates its walk at the time of meeting the other agent .",
    "if agents are identical , i.e. , they do not have distinct identifiers , and execute the same algorithm , then deterministic rendezvous is impossible , e.g. , in the ring ( graph scenario ) or in the plane ( geometric scenario ) : the adversary will make the agents move always in the same direction at the same speed , keeping them at the same distance at all times , thus they will never meet .",
    "hence we assume that agents have distinct identifiers , called labels , which are two different positive integers .",
    "this is their only way to break symmetry .",
    "we assume that each agent knows its own label but not the label of the other agent .",
    "this excludes , e.g. , rendezvous strategies of the type `` waiting for mommy '' , in which the agent with smaller label remains idle and the other agent explores the graph or the terrain .",
    "we do not impose any restriction on the memory of the agents : from the computational perspective they are viewed as turing machines .",
    "two important notions used to describe movements of agents are the _ route _ of each agent and its _ walk_. roughly speaking , each agent chooses the route _ where _ it moves and the adversary describes the walk on this route , deciding _ how _ the agent moves .",
    "more precisely , these notions are defined as follows .",
    "the adversary initially places an agent with label @xmath0 at some node of the graph or at some point in the terrain . given this label and this starting point ,",
    "the route is chosen by the agent and is defined as follows . in the case of the graph ,",
    "the agent chooses one of the available ports at the current node . after getting to the other end of the corresponding edge",
    ", the agent chooses one of the available ports at this node , and so on , indefinitely ( until rendezvous ) .",
    "the resulting route of the agent is the corresponding sequence of edges , which is a ( not necessarily simple ) path in the graph .",
    "the route in a terrain is a sequence @xmath1 of segments , where @xmath2 $ ] , defined in stages as follows , given the agent s label and the starting point . in stage",
    "@xmath3 the agent starts at point @xmath4 , and @xmath5 is the starting point chosen by the adversary .",
    "the agent chooses a direction @xmath6 and distance @xmath7 .",
    "if the segment of length @xmath7 in direction @xmath6 starting in @xmath8 intersects the boundary of the terrain at some distance @xmath9 from @xmath8 , the agent becomes aware of it in the intersection point @xmath10 closest to @xmath8 . in this case",
    ", the stage ends at @xmath10 and in the next stage the agent chooses the reverse direction @xmath11 and the distance @xmath12 ( that will cause it to return to @xmath8 ) . if the segment of length @xmath7 in direction @xmath6 starting in @xmath8 does not intersect the boundary of the terrain , the stage ends when the agent reaches point @xmath13 at distance @xmath7 from @xmath8 in direction @xmath6 .",
    "stages are repeated indefinitely ( until rendezvous ) .",
    "we now describe the walk @xmath14 of an agent on its route .",
    "let @xmath15 be the route of an agent . in the graph scenario",
    "this is a ( not necessarily simple ) infinite path in the ( spatial embedding of ) the graph , and in the geometric scenario it is an infinite polygonal line in the plane .",
    "let @xmath16 , where @xmath17 , be an increasing sequence of reals , chosen by the adversary , that represent points in time .",
    "let @xmath18\\rightarrow [ a_i , a_{i+1}]$ ] be any continuous function , chosen by the adversary , such that @xmath19 and @xmath20 .",
    "for any @xmath21 $ ] , we define @xmath22 .",
    "the interpretation of the walk @xmath14 is as follows : at time @xmath23 the agent is at the point @xmath24 of its route .",
    "this general definition of the walk and the fact that it is constructed by the adversary capture the asynchronous characteristics of the process .",
    "the movement of the agent can be at arbitrary speed , the agent may sometimes stop or go back and forth , as long as the walk in each segment of the route is continuous and covers all of it .",
    "notice that the power of the asynchronous adversary to produce any continuous walk on the routes determined by the agents implies the following significant difference with respect to the synchronous scenario .",
    "while in the latter scenario the relative movement of the agents depends only on their routes , in our setting , this movement is also controlled by the adversary .",
    "agents with routes @xmath25 and @xmath26 and with walks @xmath27 and @xmath28 meet at time @xmath23 , if points @xmath29 and @xmath30 are identical .",
    "a rendezvous is guaranteed for routes @xmath25 and @xmath26 , if the agents using these routes meet at some time @xmath23 , regardless of the walks chosen by the adversary .",
    "a rendezvous algorithm executed by agents in a graph or in a terrain produces routes of agents , given the label of each agent and its starting point .",
    "it should be stressed that , while routes of agents are formally defined as infinite sequences of segments , our results imply that in any instance of the rendezvous problem , meeting will occur at some finite time , and thus each agent will compute only finitely many segments of its route .",
    "as mentioned above , agents compute their routes in stages , and given any walk chosen by the adversary , each stage is completed in finite time .",
    "there is no stopping issue in our solution : rendezvous always occurs at some stage for each of the agents and then both agents stop .",
    "another feature of our rendezvous algorithms is that in the choice of consecutive segments of its route an agent does not use the knowledge of the walk to date .",
    "thus the route depends only on the label of the agent , on the environment ( graph or terrain ) , and on the starting point chosen by the adversary , but not on its other actions .    * our results .",
    "* we give two deterministic algorithms , the first for rendezvous in the graph scenario and the second in the geometric scenario . for the graph scenario ,",
    "our algorithm accomplishes rendezvous in any connected countable ( finite or infinite ) graph , for arbitrary starting nodes .",
    "a consequence of this very general result is the positive answer to the following question from @xcite : is deterministic asynchronous rendezvous feasible in any finite connected graph without knowing any upper bound on its size ? ( in @xcite the authors presented a deterministic asynchronous rendezvous algorithm in arbitrary finite connected graphs with _ known _ upper bound on the size . )    for the geometric scenario , our algorithm accomplishes rendezvous for agents starting at any interior points with rational coordinates in any closed region of the plane with path - connected interior .",
    "( recall that a subset @xmath31 of the plane is path - connected , if for any points @xmath32 , there is a continuous function @xmath33 \\longrightarrow p$ ] , such that @xmath34 and @xmath35 , @xmath36 . ) on the other hand , our algorithm guarantees the following _ approximate rendezvous _ for agents starting at _ arbitrary _ interior points of a terrain as above : agents will eventually get at an arbitrarily small positive distance from each other .",
    "this implies the perhaps surprising result that if agents have arbitrarily small positive visibility ranges ( rather than 0 visibility range as we assume ) and they start in arbitrary points of the ( empty ) plane , then they will see each other in finite time , regardless of the actions of the adversary .",
    "* discussion of limitations .",
    "* while our algorithms work in a very general setting ",
    "agents can , indeed , meet almost everywhere  it turns out that none of the few limitations imposed on the environment can be removed .",
    "for the graph scenario , the only limitation is connectivity of the graph .",
    "it is clear that rendezvous in disconnected graphs is impossible , if the agents start in different connected components . for the geometric scenario , let us review the limitations one by one .",
    "first , we assume that the terrain is closed .",
    "this assumption can not be entirely removed for the following technical reason .",
    "consider the construction of a route in an open disc .",
    "an agent starting at any point , that chooses in the first stage an arbitrary direction and a sufficiently large distance , at some point would have to leave the disc .",
    "since it does not see anything in its vicinity , it can not know where the boundary is before hitting it , and it can not hit it , as it is not allowed to leave the terrain .",
    "it follows that the agent could not construct further segments of its route .",
    "the second assumption is that agents start at interior points of the terrain .",
    "this assumption can not be removed either . indeed , suppose that the terrain is a closed disc with a semi - circle attached to it .",
    "this is a closed subset of the plane with nonempty path - connected interior .",
    "suppose that one agent starts in the disc and the other at the end of the semi - circle .",
    "since agents need to move along polygonal lines , the second agent could not move at all and the first one can not reach it .",
    "our next assumption is that the interior of the terrain is path - connected . to show that this assumption can not be removed , consider two disjoint closed discs joined by an arc of a circle .",
    "this terrain is closed and path - connected , but if each agent starts inside a different disc , again they can not meet , because agents need to move along polygonal lines , and hence can not traverse the joining arc .",
    "the final assumption is that the starting points of the agents have rational coordinates . in section 4",
    "we prove that if the agents start in _ arbitrary _ points , then rendezvous can not be guaranteed even in the plane .",
    "we show , however , that for arbitrary starting points approximate rendezvous is guaranteed .    * related work .",
    "* the rendezvous problem was first described in @xcite .",
    "a detailed discussion of the large literature on rendezvous can be found in the excellent book @xcite .",
    "most of the results in this domain can be divided into two classes : those considering the geometric scenario ( rendezvous in the line , see , e.g. , @xcite , or in the plane , see , e.g. , @xcite ) , and those discussing rendezvous in graphs , e.g. , @xcite . some of the authors , e.g. , @xcite consider the probabilistic scenario where inputs and/or rendezvous strategies are random .",
    "randomized rendezvous strategies use random walks in graphs , which were thoroughly investigated and applied also to other problems , such as graph traversing @xcite , on - line algorithms @xcite and estimating volumes of convex bodies @xcite .",
    "a generalization of the rendezvous problem is that of gathering @xcite , when more than 2 agents have to meet in one location .",
    "if graphs are unlabeled , deterministic rendezvous requires breaking symmetry , which can be accomplished either by allowing marking nodes or by labeling the agents . deterministic rendezvous with anonymous agents working in unlabeled graphs but equipped with tokens used to mark nodes was considered e.g. , in  @xcite . in",
    "@xcite the authors studied gathering many agents with unique labels . in @xcite deterministic rendezvous in graphs with labeled agents was considered .",
    "however , in all the above papers , the synchronous setting was assumed .",
    "asynchronous gathering under geometric scenarios has been studied , e.g. , in @xcite in different models than ours : agents could not remember past events , but they were assumed to have at least partial visibility of the scene .",
    "the first paper to consider deterministic asynchronous rendezvous in graphs was @xcite .",
    "the authors concentrated on complexity of rendezvous in simple graphs , such as the ring and the infinite line .",
    "they also showed feasibility of deterministic asynchronous rendezvous in arbitrary finite connected graphs with _ known _ upper bound on the size .",
    "further improvements of the above results for the infinite line were proposed in  @xcite .",
    "gathering many robots in a graph , under a different asynchronous model and assuming that the whole graph is seen by each robot , has been studied in @xcite .",
    "a fundamental notion on which our algorithms are based is that of a _ tunnel_. consider any graph @xmath37 and two routes @xmath25 and @xmath26 starting at nodes @xmath8 and @xmath10 , respectively .",
    "we say that these routes form a tunnel , if there exists a prefix @xmath38 $ ] of route @xmath25 and a prefix @xmath39 $ ] of route @xmath26 , for some edges @xmath40 in the graph , such that @xmath41 , where @xmath42 and @xmath43 .",
    "intuitively , the route @xmath25 has a prefix @xmath44 ending at @xmath10 and the route @xmath26 has a prefix which is the reverse of @xmath44 , ending at @xmath8 . by a slight abuse of terminology",
    "we will also say that prefixes @xmath38 $ ] and @xmath39 $ ] form a tunnel .",
    "[ tunnel ] if routes @xmath25 and @xmath26 form a tunnel , then they guarantee rendezvous .    consider an embedding of the graph @xmath37 in the three - dimensional euclidean space , with nodes of the graph being points of the space and edges being pairwise disjoint line segments joining them .",
    "consider routes @xmath25 and @xmath26 starting at nodes @xmath8 and @xmath10 , respectively .",
    "let agent @xmath4 execute route @xmath45 .",
    "let @xmath44 be the polygonal line joining @xmath8 with @xmath10 , corresponding to the prefixes of the routes , given by the tunnel .",
    "let @xmath46 be its length defined as the sum of lengths of edges in the corresponding prefixes of the routes .",
    "( for non - simple paths in the graph , the same edge is counted many times . )",
    "consider any walks @xmath27 on @xmath25 and @xmath28 on @xmath26 .",
    "let @xmath47 be the first moment when an agent leaves its starting point and let @xmath48 be the moment when an agent gets to the end of @xmath44 other than its starting point . for any @xmath49 $ ] , let @xmath50 be the distance of agent @xmath5 from its starting point @xmath8 at time @xmath23 , counted on the route @xmath25 , and let @xmath51 be the distance of agent @xmath52 from its target point @xmath8 at time @xmath23 , counted on the route @xmath26 .",
    "let @xmath53 .",
    "we have @xmath54 and @xmath55 .",
    "the function @xmath56 is thus a continuous function from the interval @xmath57 $ ] onto some interval @xmath58 $ ] , where @xmath59 , in view of the continuity of walks @xmath27 and @xmath28 . since 0",
    "belongs to the interval @xmath58 $ ] , there must exist a moment @xmath23 in the interval @xmath57 $ ] , for which @xmath60 .",
    "for this point we have @xmath61 , and the rendezvous occurs .",
    "we now recall some basic facts from set theory , that will be used in further considerations .",
    "[ sets ] the set of rational numbers and the set of positive rational numbers are countable .",
    "the cartesian product of two countable sets is countable .",
    "the set of all finite sequences with terms in a countable set is countable .",
    "let @xmath62 be the connected graph in which the rendezvous must be performed .",
    "let @xmath63 be the set of sequences of @xmath64 positive integers .",
    "let @xmath65 .",
    "there exists a bijection from the set of positive integers onto @xmath66 , in view of proposition  [ sets ] .",
    "let @xmath67 be a fixed enumeration of @xmath66 .",
    "all agents have to agree on the same enumeration .",
    "it is easy to produce a formula computing @xmath68 for any @xmath69 .",
    "this formula is included in the rendezvous algorithm . for a finite path @xmath70 in @xmath37 ,",
    "we denote by @xmath71 the path with the same edges as in @xmath70 , but in the reverse order .",
    "remark that @xmath70 and @xmath71 form a tunnel .",
    "we first give a high - level idea of the algorithm referring to lines of the pseudo code given below .",
    "we `` force '' the routes of any two agents to form a tunnel for every possible combination of starting nodes and labels of the two agents . by proposition",
    "[ tunnel ] , this suffices to guarantee rendezvous .",
    "any starting configuration of robot @xmath3 placed at node @xmath8 and robot @xmath72 placed at node @xmath10 by the adversary corresponds to a quadruple @xmath73 where @xmath74 is a sequence of ports inducing a path from @xmath8 to @xmath10 and @xmath75 is a sequence of ports inducing the reverse path from @xmath10 to @xmath8 .",
    "each agent constructs its route in phases . at the beginning and at the end of each phase",
    "the agent is in its starting node . at phase @xmath69",
    "the previously constructed initial part of the route @xmath76 is extended while the agent processes quadruple @xmath77 ( some of the extensions are null ) .",
    "this extension guarantees that the routes of agents of the corresponding starting configuration will form a tunnel .",
    "when agent with label @xmath78 processes quadruple @xmath79 nothing happens if @xmath80 and @xmath81 ( line 4 ) .",
    "if @xmath82 , agent @xmath3 tries to extend its route to guarantee rendezvous with agent @xmath72 under the hypothesis that a path from @xmath8 to @xmath10 corresponds to the sequence @xmath74 of ports and the reverse path corresponds to the sequence @xmath75 .",
    "for this to happen , the agent first tries to follow the path @xmath83 induced by the sequence @xmath74 of ports ( lines 8 - 11 ) .",
    "this attempt is considered successful if the following conditions are satisfied :    @xmath84 at consecutive nodes of the traversed path , ports with numbers from the sequence @xmath74 are available ,    @xmath84 the reverse path corresponds to the sequence @xmath75 of ports .    when the attempt is successful ( the condition of line 13 is satisfied ) the agent is at node @xmath10 and it simulates the first @xmath85 phases of the execution of the algorithm by agent with label @xmath72 starting from @xmath10 .",
    "the effect of this simulation is the path @xmath86 . upon completion of this part , agent with label @xmath3 returns to @xmath10 .",
    "now the agent is able to further extend its path to form a tunnel with the route of agent @xmath72 ( line 16 ) .",
    "finally , whether the attempt to follow the path @xmath83 is successful or not , the agent with label @xmath3 backtracks to @xmath8 ( line 17 ) . if @xmath87 , the above actions are performed with the roles of @xmath3 and @xmath72 reversed and the role of @xmath74 and @xmath75 reversed .",
    "algorithm @xmath88 calls the recursive function @xmath89 .",
    "this function is called in two different modes controlled by the boolean @xmath90 . in the `` main '' mode",
    "@xmath91 the function is executed indefinitely , until rendezvous . in the `` simulation '' mode @xmath92 , the function is executed for all values up to a given @xmath93 , or until rendezvous , whichever comes first .",
    "the symbol @xmath94 denotes the concatenation of sequences .",
    "* algorithm @xmath88 * + input : a starting node @xmath95 and a label @xmath78 of the agent .",
    "+ output : a rendezvous route @xmath70 .",
    "@xmath96 ;    * function * + @xmath97 + 1  = @xmath98 + 2 * ile *  not rendezvous and @xmath99 * do * + 3 let @xmath100 ; + 4  @xmath78=  @xmath101 or @xmath87 * then * + 5  = @xmath82 * then * @xmath102 + 6 * e *  @xmath103 + 7 let @xmath104 ; + 8 @xmath105 and @xmath106 is a port * do * + 9 @xmath107=@xmath108 + where @xmath109 corresponds to port @xmath106 ; + 10 let @xmath110 be the port corresponding + to @xmath109 at its other endpoint ; + 11 @xmath111 + 12 @xmath112 + 13  @xmath113 * then * + 14 let @xmath10 be the current node ; + 15 @xmath114 + 16 @xmath115 + @xmath116 + 17 @xmath117 + 18 @xmath118 + 19 = * return * @xmath70        [ th : correctness ] algorithm @xmath88 guarantees asynchronous rendezvous for arbitrary two agents starting from any nodes of an arbitrary connected graph .",
    "let @xmath8 and @xmath3 ( resp .",
    "@xmath10 and @xmath72 ) be the starting node and the label of the first agent ( resp . the second agent ) .",
    "there exists a path @xmath119 linking @xmath8 to @xmath10 , since the graph @xmath37 is connected .",
    "let @xmath74 ( resp .",
    "@xmath75 ) be the finite sequence of ports corresponding to the path @xmath119 ( resp . the path @xmath120 ) . in view of proposition  [ tunnel ] , it suffices to prove that the routes of the two agents form a tunnel .",
    "we show that , after the phase corresponding to the quadruple @xmath79 during the execution of algorithm @xmath88 for agents @xmath3 and @xmath72 , the routes of the two agents form a tunnel .",
    "observe that this phase eventually occurs during any execution of @xmath89 , since all recursive calls of any phase @xmath121 are done with a parameter @xmath93 strictly smaller than @xmath122 .",
    "thus all these phases are completed in finite time .",
    "first , we show by induction that , at the beginning of phase @xmath69 of any execution of algorithm @xmath88 , each agent is at its starting node .",
    "this is clearly true for @xmath123 .",
    "assume that the property holds for @xmath85 .",
    "it follows that during the execution of the phase @xmath85 , the paths @xmath76 and @xmath86 are cycles .",
    "hence , after the execution of line 16 , the agent ends in node @xmath10 . after the execution of line 17",
    ", the agent returns to the starting node @xmath8 of the phase @xmath85 .",
    "so , the agent starts phase @xmath69 in the same node , and the property is true for all @xmath69",
    ".    let @xmath124 ( resp .",
    "@xmath125 ) be the output of the execution of the first @xmath85 phases of algorithm @xmath88 for agent @xmath3 ( resp .",
    "@xmath72 ) starting in node @xmath8 ( resp .",
    "@xmath10 ) . at the beginning of phase @xmath69 ,",
    "the portion of the route constructed by agent @xmath3 is @xmath126 .",
    "after the execution of line 12 , the portion of the route constructed by agent @xmath3 is @xmath127 , since the agent has started the phase in node @xmath8 .",
    "the path @xmath86 computed by the recursive call of @xmath89 is equal to @xmath128 .",
    "it follows that at the end of phase @xmath69 , the portion of the route constructed by agent @xmath3 is @xmath129 .",
    "similarly , at the end of phase @xmath69 , the portion of the route constructed by agent @xmath72 is @xmath130 . by construction ,",
    "the part @xmath131 of @xmath132 and the part @xmath133 of @xmath134 form a tunnel ( see fig  [ fig : tunnel ] ) .",
    "in this section we consider the problem of rendezvous in a terrain included in the euclidean plane .",
    "as announced in the introduction , we restrict attention to closed subsets of the plane whose interior is path - connected .",
    "we observed that these restrictions can not be removed .",
    "fix a system of coordinates @xmath135 with the @xmath12-axis pointing to north ( shown by compasses of the agents ) and with the unit of length equal to that of the agents .",
    "points with rational coordinates in @xmath135 will be called _",
    "rational_. a polygonal line all of whose vertices , including extremities , are rational will be called a _ rational line_. for any point @xmath13 ,",
    "let @xmath136 be the shift of the system @xmath135 with origin at point @xmath13 .",
    "[ lm : rational - route ] in any path - connected , open subset @xmath137 of the plane and for any rational points @xmath138 , there exists a rational polygonal line included in @xmath137 , with extremities @xmath13 and @xmath8 , all of whose vertices are rational .    by path - connectivity of @xmath137",
    ", there exists a path @xmath93 included in @xmath137 with extremities @xmath13 and @xmath8 , which is a continuous image of the interval @xmath139 $ ] .",
    "let @xmath140 be the distance from @xmath93 to @xmath141 - the complement of @xmath137 . since @xmath142 and both @xmath93 and @xmath141 are closed sets , we have @xmath143 . partition the plane into squares of side length at most @xmath144 with rational vertices .",
    "let @xmath145 be the set of squares intersecting @xmath93 . since @xmath93 is a bounded set",
    ", @xmath145 is finite . consider the graph @xmath146 with node set @xmath145 , such that @xmath147 are adjacent if @xmath93 contains a point belonging to a common boundary of @xmath7 and @xmath12 .",
    "since @xmath146 is connected , there exists a path @xmath148 in @xmath146 linking squares @xmath149 containing @xmath13 and @xmath150 containing @xmath8 .",
    "let @xmath151 be the polygonal path @xmath152 , where @xmath153 is the center of square @xmath154 , for all @xmath155 .",
    "the path @xmath151 is rational and contained in the union of squares from @xmath145 . since each point of @xmath151 is at distance at most @xmath156 from some point of @xmath93 , we have @xmath157 ,",
    "hence @xmath151 is included in @xmath137 .",
    "we define the following graph @xmath158 , for a given terrain @xmath31 .",
    "the set of nodes @xmath159 is the union of two disjoint subsets @xmath160 .",
    "the set @xmath161 is the set of all interior , rational points of @xmath31 and the set @xmath162 is defined below .    for each pair of points @xmath163 , such that @xmath164 and @xmath165 is any rational point of the plane , we consider the segment @xmath166 . if @xmath167 does not intersect the boundary of @xmath31 , then @xmath165 must belong to @xmath161 and we add the edge @xmath168 to @xmath169 .",
    "if @xmath167 intersects the boundary of @xmath31 , we add a new node @xmath8 to @xmath162 and we add the edge @xmath170 to @xmath169 .",
    "note that such a node @xmath8 is always added to @xmath162 when point @xmath165 is on the boundary of @xmath31 or outside of @xmath31 ( and it may or may not be added to @xmath162 when @xmath165 is in the interior of @xmath31 ) . since each node in @xmath162 corresponds to a pair of rational points @xmath163",
    ", there is a countable number of nodes in @xmath162 , each of them having degree 1 .",
    "the unique port at any node in @xmath162 has number 1 and ports at any node in @xmath161 are defined as follows .",
    "let @xmath171 be any fixed enumeration of all pairs of rational numbers .",
    "let @xmath172 .",
    "let @xmath13 be the point in the plane with coordinates @xmath173 in the system @xmath174 .",
    "the port at @xmath93 corresponding to edge @xmath175 has number @xmath3 .",
    "* algorithm * geometricrv    the algorithm is a direct application of algorithm graphrv to the graph @xmath176 .",
    "the agent operating in an unknown terrain @xmath31 designs a route in the corresponding unknown graph @xmath176 as follows .",
    "when the agent chooses a port at a node @xmath177 , this edge corresponds to some rational point @xmath178 in the plane that the agent tries to reach from @xmath93 .",
    "two cases may occur .",
    "the agent either walks in the interior of @xmath31 until reaching @xmath178 , which corresponds to the traversal of an edge between two nodes of @xmath161 , or it hits the boundary of @xmath31 , which corresponds to a visit of a node @xmath179 . at a node @xmath180",
    "there is no choice of port , since its degree is 1 .",
    "the agent takes the unique port which leads to the ( already visited ) node @xmath177 .",
    "the resulting route is a sequence of segments joining rational interior points of the terrain @xmath31 and of pairs of consecutive segments @xmath181 , where @xmath8 is a rational interior point of @xmath31 and @xmath182 is a point on the boundary of @xmath31 .",
    "since by lemma [ lm : rational - route ] graph @xmath176 is connected , rendezvous is guaranteed in the graph @xmath176 , which implies rendezvous in @xmath31 .",
    "[ geometricrv ] algorithm geometricrv guarantees asynchronous rendezvous for arbitrary two agents starting from arbitrary rational interior points of any closed terrain @xmath31 with path - connected interior .",
    "theorem [ geometricrv ] should be contrasted with the following negative result showing that the restriction on the starting points of the agents can not be removed , even for rendezvous in the ( empty ) plane .",
    "[ neg ] there is no algorithm that guarantees asynchronous rendezvous of arbitrary agents starting from arbitrary points in the plane .",
    "consider the agent with label @xmath0 operating in the empty plane .",
    "since the terrain is fixed , the route of this agent depends only on the starting point .",
    "let @xmath183 be the route of the agent with label 1 starting at a fixed point @xmath8 .",
    "consider the route @xmath184 of the agent with label 2 starting at point @xmath10 .",
    "since there are no boundary points in the terrain , for any starting points @xmath185 and @xmath186 , route @xmath187 is a parallel shift of route @xmath188 by the vector @xmath189 .",
    "both of them are polygonal lines .",
    "we will say that two routes are _ almost disjoint _ if all vertices of each of them are outside the other route .",
    "observe that if , for some starting point @xmath10 , route @xmath184 of agent 2 is almost disjoint from route @xmath190 of agent 1 , then the adversary can avoid rendezvous of agents 1 and 2 following these routes , by first moving agent 1 to the end of the first segment of its route , then moving agent 2 to the end of the first segment of its route and so on , alternating traversals of agents on consecutive segments of their routes .",
    "hence , in order to prove our result , it is enough to show the existence of a point @xmath191 , such that route @xmath192 is almost disjoint from route @xmath190 .",
    "let @xmath193 be the sequence of vectors corresponding to consecutive segments of the route @xmath184 , for any starting point @xmath10 .",
    "for any fixed point @xmath10 , denote by @xmath194 the segment corresponding to vector @xmath195 on route @xmath184 .",
    "let @xmath196 be any sequence that orders all couples @xmath197 , for all positive integers @xmath198 .",
    "for any @xmath69 , let @xmath199 we will construct by induction a descending sequence of closed discs @xmath200 of positive radii , satisfying the following invariant .",
    "for all points @xmath201 , both endpoints of the segment @xmath202 are outside of the segment @xmath203 and both endpoints of the segment @xmath203 are outside of the segment @xmath202 .",
    "suppose that the invariant is satisfied for @xmath85 ( for @xmath123 we may take as @xmath204 any disc with radius 1 ) .",
    "the set of points @xmath10 inside disc @xmath205 that may possibly violate the invariant for @xmath69 is contained in the union of four segments : two segments parallel to @xmath206 and two segments parallel to @xmath202 . there exists a closed disc of positive radius contained in @xmath205 which is disjoint from those four segments .",
    "let @xmath207 be such a disc .",
    "thus the invariant is satisfied for @xmath69 .",
    "this completes the construction by induction .",
    "the intersection of all discs @xmath207 is non - empty .",
    "let @xmath191 be a point in this intersection .",
    "since @xmath196 enumerated all couples @xmath197 , it follows that route @xmath192 is almost disjoint from route @xmath190 , and hence agents 1 and 2 starting at points @xmath8 and @xmath191 , respectively , do not meet for some walks chosen by the adversary .",
    "while proposition [ neg ] shows that rendezvous of agents starting from arbitrary points is impossible , it turns out that a slightly easier task can be accomplished in this setting . for any @xmath208",
    ", we say that routes @xmath25 and @xmath26 of agents guarantee @xmath209-_approximate rendezvous _ , if at some point @xmath23 of time , the agents get at distance at most @xmath209 from each other , regardless of the walks chosen by the adversary .",
    "[ approx ] algorithm geometricrv guarantees @xmath209-approximate rendezvous for any @xmath208 , for arbitrary agents starting from arbitrary interior points of any closed terrain @xmath31 with path - connected interior .",
    "fix an @xmath208 .",
    "consider any two agents starting at interior points @xmath8 and @xmath10 of the terrain @xmath31 .",
    "let @xmath210 be the distance from @xmath10 to the boundary of @xmath31 .",
    "choose a point @xmath185 with rational coordinates in @xmath211 , in the interior of the disc @xmath46 of radius @xmath212 centered at @xmath10 .",
    "by lemma [ lm : rational - route ] ( applied to the system @xmath211 instead of @xmath135 ) , there exists a rational polygonal line @xmath44 in the system @xmath211 , included in the interior of @xmath31 and joining @xmath8 and @xmath185 .",
    "let @xmath143 be the distance between @xmath44 and the boundary of @xmath31 .",
    "let @xmath213 .",
    "choose a point @xmath186 with rational coordinates in the system @xmath211 , at distance less than @xmath70 from @xmath10 .",
    "let @xmath214 be the polygonal line @xmath44 extended by the segment @xmath215 .",
    "note that @xmath214 is at distance at least @xmath70 from the boundary of @xmath31 .",
    "indeed , if @xmath216 , then the distance from @xmath7 to the boundary is at least @xmath217 , and if @xmath218 , then the distance from @xmath7 to the boundary is at least @xmath219 , as the entire segment @xmath215 is included in disc @xmath46 .",
    "let @xmath220 be the translation by the vector @xmath221 and let @xmath222 be the image of @xmath214 with respect to @xmath220 .",
    "the point @xmath10 is one of the extremities of @xmath222 .",
    "since the distance from @xmath186 to @xmath10 is less than @xmath70 , the entire polygonal line @xmath222 is in the interior of @xmath31 .",
    "the polygonal line @xmath222 is rational in the system @xmath223 .",
    "let @xmath14 be any walk of the first agent on any route with the initial part @xmath214 starting at @xmath8 , and let @xmath224 be any walk of the second agent on any route with the initial part @xmath222 starting at @xmath10 . consider the composition @xmath225 .",
    "hence @xmath226 is a walk on a route with initial part @xmath214 , starting at @xmath186 . by theorem [ geometricrv ] , algorithm geometricrv guarantees rendezvous of agents at some point in time @xmath23 , for the walk @xmath14 starting at @xmath8 and the walk @xmath226 starting at @xmath186 .",
    "consider the positions at time @xmath23 of both agents starting at @xmath8 and @xmath10 , in walks @xmath14 and @xmath224 .",
    "since @xmath227 , and @xmath220 is a translation by a vector of length less than @xmath70 ( hence less than @xmath209 ) , it follows that the distance between @xmath24 and @xmath228 is less than @xmath209 . since walks @xmath14 and @xmath224",
    "were arbitrarily chosen by the adversary , this guarantees @xmath209-approximate rendezvous .",
    "a consequence of theorem [ approx ] is that if agents have arbitrarily small positive visibility ranges ( rather than 0 visibility range as we assumed ) and they start in arbitrary points of the ( empty ) plane , then algorithm geometricrv guarantees that they will see each other in finite time , regardless of the actions of the adversary .",
    "we provided deterministic asynchronous rendezvous algorithms for graphs and for terrains in the plane .",
    "we studied only the feasibility of rendezvous and our results are very general : for the graph scenario , we showed that rendezvous is possible in any connected countable ( finite or infinite ) graph , starting from any nodes , without any information on the graph .",
    "the only thing an agent needs to know is its own label . in particular",
    ", this result implies a positive solution of a problem from  @xcite .",
    "our algorithms rely on an arbitrary fixed enumeration of quadruples @xmath73 , where @xmath3 and @xmath72 are positive integers and @xmath74 and @xmath75 are finite sequences of positive integers .",
    "the complexity of the algorithm ( measured by the worst - case length of paths that the agents have to traverse until rendezvous ) depends on this enumeration , but we do not think any enumeration can make the algorithm efficient .",
    "thus a natural interesting question left for further investigations is the following :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ does there exist a deterministic asynchronous rendezvous algorithm , working for all connected countable unknown graphs , with complexity polynomial in the labels of the agents and in the initial distance between them ? _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _      r. aleliunas , r.m .",
    "karp , r.j .",
    "lipton , l. lovsz , and c. rackoff , random walks , universal traversal sequences , and the complexity of maze problems , proc .",
    "annual symposium on foundations of computer science focs1979 , 218 - 223 .",
    "s. alpern and s. gal , the theory of search games and rendezvous .",
    "series in operations research and management science , number 55 , kluwer academic publishers , 2002 .",
    "kluwer academic publisher , 2002 .",
    "d. coppersmith , , p. doyle , p. raghavan , and m. snir , random walks on weighted graphs , and applications to on - line algorithms , proc .",
    "22nd annual acm symposium on theory of computing ( stoc1990 ) , 369 - 378 .",
    "flocchini , g. prencipe , n. santoro , p. widmayer , gathering of asynchronous oblivious robots with limited visibility , proc .",
    "18th annual symposium on theoretical aspects of computer science stacs2001 , lncs 2010 , 247 - 258 .",
    "r. klasing , a. kosowski , a. navarra , taking advantage of symmetries : gathering of asynchronous oblivious robots on a ring .",
    "12th international conference on principles of distributed systems , ( opodis 2008 ) , 446 - 462 ."
  ],
  "abstract_text": [
    "<S> two mobile agents ( robots ) with distinct labels have to meet in an arbitrary , possibly infinite , unknown connected graph or in an unknown connected terrain in the plane . </S>",
    "<S> agents are modeled as points , and the route of each of them only depends on its label and on the unknown environment . </S>",
    "<S> the actual walk of each agent also depends on an asynchronous adversary that may arbitrarily vary the speed of the agent , stop it , or even move it back and forth , as long as the walk of the agent in each segment of its route is continuous , does not leave it and covers all of it . meeting in a graph </S>",
    "<S> means that both agents must be at the same time in some node or in some point inside an edge of the graph , while meeting in a terrain means that both agents must be at the same time in some point of the terrain . does there exist a deterministic algorithm that allows any two agents to meet in any unknown environment in spite of this very powerfull adversary ? </S>",
    "<S> we give deterministic rendezvous algorithms for agents starting at arbitrary nodes of any anonymous connected graph ( finite or infinite ) and for agents starting at any interior points with rational coordinates in any closed region of the plane with path - connected interior . while our algorithms work in a very general setting  </S>",
    "<S> agents can , indeed , meet almost everywhere  we show that none of the above few limitations imposed on the environment can be removed . on the other hand </S>",
    "<S> , our algorithm also guarantees the following _ approximate rendezvous _ for agents starting at _ arbitrary _ interior points of a terrain as above : agents will eventually get at an arbitrarily small positive distance from each other . </S>"
  ]
}
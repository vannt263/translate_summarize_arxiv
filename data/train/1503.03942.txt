{
  "article_text": [
    "in this paper , we are interested in a wireless broadcast scenario , in which a sender wishes to broadcast a block of @xmath0 data packets to a set of wireless receivers , such that each of the receivers already has a subset of the data packets available to it ( e.g. , from prior transmissions ) and is interested in obtaining the rest of the packets . given a packet reception instance , the goal is to design a linear network coding ( nc ) scheme that minimizes the average packet decoding delay ( apdd ) , which is defined as the average time it takes for a receiver to decode a data packet .",
    "one of the possible solutions to this problem is to employ a random linear network coding ( rlnc ) technique @xcite . in wireless broadcast scenarios",
    ", rlnc can achieve an optimal throughput ( i.e. , minimize the time required to decode all packets by all receivers ) with high probability by mixing all data packets in the block together using linear coefficients randomly chosen from a sufficiently large finite field",
    ". however , rlnc is suboptimal in terms of apdd , since in general , no data packet can be decoded by a receiver until it receives @xmath0 linearly independent coded packets .",
    "many opportunistic nc techniques have been developed with the aim to reduce apdd or some other measures of decoding delay @xcite .",
    "an important technique in this class is _ instantly decodable network coding _ ( idnc ) .",
    "the idnc technique has a potential to reduce the apdd by enabling a subset of receivers to instantly decode a data packet after each transmission .",
    "idnc has been shown to outperform rlnc in terms of apdd for a small number of receivers @xcite . however , since in idnc schemes a single transmission typically benefits only some of the receivers , idnc is not throughput optimal . as a result ,",
    "a larger number of transmissions is necessary to finish the broadcast , which increases the decoding delay for some receivers , and , as a result , increases the value of apdd . indeed , for larger number of receivers , the throughput of idnc decreases and apdd increases due to lack of coding opportunities .",
    "a similar behavior can be observed for other opportunistic coding techniques @xcite .    in summary",
    ", there is no clear winner between rlnc , idnc , and other opportunistic techniques , as each of them prevail in a different parameter region .",
    "moreover , while the apdd of rlnc can be easily calculated ( as shown in section  [ sec : approx ] ) , the achievable apdd of opportunistic nc techniques has not been characterized analytically .",
    "the contributions of this paper is summarized as follows :    * we first prove that it is np - hard to minimize apdd , by presenting a reduction from the hypergraph coloring problem . * next we show that rlnc achieves an approximation ratio of 2 with high probability , i.e. , the apdd achieved by rlnc is at most two times the optimal solution .",
    "* we present a methodology for designing specialized approximation algorithms that achieve lower values of apdd than rlnc while maintaining the same optimal throughput",
    ". we also present a case study to demonstrate the algorithm design .",
    "we conduct extensive simulations to confirm that our methodology outperforms alternative solutions in the broad range of practical settings .",
    "our model includes a single sender that holds a set of @xmath0 data packets that belong to @xmath3 , @xmath4 , and a set of @xmath5 receivers , @xmath6 , each wants a subset @xmath7 of @xmath8 and has the rest .",
    "the packet reception instance in our model is represented by a binary @xmath9 state feedback matrix ( sfm ) @xmath10 , where @xmath11 means that @xmath12 wants @xmath13 , and @xmath14 means that receiver @xmath15 has packet @xmath16 already available to it ( e.g. , from prior transmissions ) .",
    "we denote by @xmath17 the size of @xmath7 , and by @xmath18 the number of receivers who want @xmath13 .",
    "an example of sfm is given in fig.[fig : sfm_graph](b ) , which has @xmath19 and @xmath20 .",
    "given @xmath10 , the sender performs a linear nc transmission phase . in each",
    "nc transmission , the sender encodes data packets in @xmath21 together using linear coefficients from a finite field @xmath3 .",
    "the corresponding packet @xmath22 takes the form of : @xmath23 we denote by @xmath24 the support of @xmath22 and refer to it as an _ coding set _ of @xmath22 .",
    "when the coefficients @xmath25 are chosen from @xmath3 uniformly at random , @xmath22 is called a random - coded packet of @xmath21 .",
    "a receiver will increase its degree of freedom ( dof ) by one when it receives a nc packet that is linearly independent of the set of all the packets it already has .",
    "the broadcast will be _ completed _ at a receiver once it decodes all its wanted data packets .    in order to study the global minimum decoding delay of linear",
    "nc in wireless broadcast , we assume the following :    1 .   nc transmissions are erasure - free , so that every transmitted nc packet can be received by all receivers ; 2 .   receivers have sufficient computational resources to perform nc decoding under any @xmath3 .",
    "when random coding is applied , a sufficiently large @xmath3 will ensure the linear independency among the random - coded packets with high probability .",
    "a set of @xmath26 coded packets is called a _ nc solution _ and is denoted by @xmath27 if it allows every receiver to decode all its wanted packets .",
    "let @xmath28 be the index of the nc transmission at which @xmath12 decodes @xmath13 .",
    "the average packet decoding delay ( apdd ) of @xmath27 , denoted by @xmath29 , is calculated as : @xmath30    our aim in this paper is to study the smallest @xmath29 over all possible linear nc solutions .",
    "we call it the minimum apdd of @xmath10 and denote it by @xmath31 .",
    "the first question we would like to answer is : _ is it hard to find @xmath31 ? _",
    "in this section , we study the hardness of finding @xmath31 . to this end",
    ", we will first introduce the concept of _ perfect nc solution _ , whose apdd is a lower bound of @xmath31 .",
    "then , we will prove that deciding whether a perfect solution exists for a given instance @xmath10 of the problem at hand is an np - hard problem .",
    "this implies , in turn , that the problem of finding @xmath31 is also np - hard .      a nc solution @xmath27",
    "is called a perfect solution and is denoted by @xmath32 if it allows every receiver @xmath33 to decode a wanted data packet in every transmission of @xmath27 .",
    "obviously , @xmath32 offers the ideal packet decoding scenario .",
    "its apdd is thus a lower bound of @xmath31 , denoted by @xmath34 , which is calculated as : @xmath35 it is clear that @xmath36 can only be achieved by @xmath32 if a perfect solution exists .",
    "the natural question = in this context is : _ does a perfect solution @xmath32 exist for every sfm ? _ in the next subsection , by using a reduction from the strong hypergraph coloring problem , we will prove that this question is np - hard to answer .",
    "we first introduce some useful concepts in hypergraphs .",
    "a hypergraph @xmath37 is defined by a pair @xmath38 , where @xmath39 is the set of vertices , and @xmath40 is the set of hyperedges .",
    "every hyperedge @xmath41 is a subset of @xmath39 with size @xmath42 .",
    "a hypergraph is @xmath43uniform if every hyperedge @xmath44 has equal size , i.e. , @xmath45 .",
    "a @xmath46-_strong _ coloring solution of @xmath37 is a partition of @xmath39 into @xmath46 subsets @xmath47 , such that @xmath48 for any @xmath41 . in other words",
    ", every color appears at most once in every hyperedge .",
    "it is well known that the hypergraph coloring problem is intractable .",
    "[ lemma : strong_color ] it is np - hard to determine whether an @xmath43uniform hypergraph is @xmath49-strong colorable , for any @xmath50 .    we then build a reduction from the strong hypergraph coloring solution for @xmath49-uniform hypergraphs to the problem of finding a perfect nc solution for the average delay minimization problem . given an @xmath49-uniform hypergraph @xmath51 we construct an instance to our problem as follows .",
    "first , for each vertex @xmath52 we introduce a data packet @xmath13 , and for each hyperedge @xmath53 we introduce a receiver @xmath12 who wants the data packets that correspond to vertices in @xmath53 .",
    "note that in the resulting sfm @xmath10 , every receiver wants @xmath49 data packets .",
    "a 3-uniform hypergraph and the corresponding sfm matrix are depicted in fig.[fig : sfm_graph ] .",
    "first , we prove that an existence of an @xmath49-strong coloring solution @xmath54 of @xmath37 implies a perfect solution for our problem .",
    "let @xmath54 be an @xmath49-strong coloring of @xmath37 . for each @xmath55 ,",
    "let @xmath56 be a set of packets that correspond to vertices in @xmath55 .",
    "note that for each each receiver @xmath12 and each set @xmath56 it holds that @xmath57 . consider a coding solution @xmath27 that includes @xmath49 transmissions , such that transmission @xmath58 includes a sum of packets in @xmath56 ( over @xmath3 ) . since every receiver can decode a packet at each transmission",
    ", @xmath27 is a perfect solution to our our problem .",
    "next , we show that a perfect solution @xmath32 for the instance of @xmath10 of our problem implies that there exists an @xmath49-strong coloring solution @xmath54 of @xmath37 .",
    "let @xmath56 be the coding set that corresponds to the transmission @xmath58 of @xmath32 and let @xmath59 be the set of vertices in @xmath37 that correspond to @xmath56 . note that in order to allow every receiver to decode one data packet in each of the @xmath49 transmissions , every @xmath56 must contain one wanted data packet of every receiver , i.e. , @xmath57 .",
    "thus , @xmath54 is an @xmath49-strong coloring solution @xmath54 of @xmath37 .",
    "we conclude that an @xmath49-uniform hypergraph is @xmath49-strong colorable if and only if there exists a perfect nc solution of the instance @xmath10 of our problem .",
    "we summarize our results in the following lemma :    [ cor : det_perfect ] it is np - hard to determine whether there exists a perfect solution for a given instance @xmath10 of minimum apdd problem .",
    "the theorem follows from our construction and lemma  [ lemma : strong_color ] .      since @xmath60",
    "can only be achieved by a perfect solution @xmath32 , an optimal algorithm that finds @xmath31 will be able to determine the existence of a perfect solution by comparing @xmath31 with @xmath60 . according to lemma  [ cor : det_perfect",
    "] , this decision is np - hard to made , and thus it is np - hard to find @xmath31 :    it is np - hard to find @xmath31 for a given instance @xmath10 of minimum apdd problem .",
    "in addition to np - hardness , our reduction from the hypergraph coloring also yields an interesting conjecture on the existence of perfect solution for some special instances of @xmath10 .",
    "it comes from the famous erds - faber - lovsz conjecture in graph theory @xcite :    consider an with @xmath49 hyperedges .",
    "each pair of hyperedges have at most one vertex in common .",
    "this hypergraph is @xmath49-strong colorable .",
    "the corresponding conjecture in nc context is as follows :    consider an instance @xmath10 of our problem with @xmath49 receivers , each wants @xmath49 data packets , and each pair of receivers want at most one data packet in common .",
    "this @xmath10 has a perfect nc solution @xmath32 .",
    "we showed that the problem of finding a minimum value of @xmath31 is intractable .",
    "accordingly , in the next sections we discuss approximation algorithms for this problem .",
    "in this section , we aim at approximating @xmath31 .",
    "an approximation algorithm of @xmath31 produces a linear nc solution @xmath27 with its apdd obeying @xmath61 .",
    "we refer to @xmath62 as _ approximation ratio _ of the algorithm .    in the next theorem",
    "we analyze the approximation ratio of the rlnc technique :    rlnc technique is at most a @xmath63approximation algorithm of @xmath31 .    in every rlnc transmission",
    ", the sender sends a random - coded packet of all data packets . with high probability ( that asymptotically goes to 1 with the field size ) , after receiving @xmath17 such packets , receiver @xmath12 can decode all its wanted data packets by performing block decoding , i.e. , solving a set of @xmath17 linear equations .",
    "hence , the apdd offered by rlnc is : @xmath64 comparing @xmath65 with the lower bound @xmath34 in , we have : @xmath66 since @xmath67 , @xmath65 at most doubles @xmath31 .",
    "thus , rlnc is at most a 2-approximation algorithm of @xmath31 .",
    "therefore , rlnc technique offers guaranteed apdd performance . on the other hand , to the best of our knowledge existing opportunistic apdd - reduction techniques are not able to provide provable performance guarantees . for example , let us analyze a well - known apdd - reduction technique called instantly decodable network coding ( idnc ) .",
    "idnc has two variations , strict idnc ( s - idnc ) @xcite and general idnc ( g - idnc ) @xcite .",
    "both of them have been shown to provide lower apdd than rlnc with a small number of receivers , but become worse than rlnc with increasing number of receivers . due to the absence of the optimal g - idnc algorithm @xcite , we are not able to prove whether g - idnc approximates @xmath31 or not",
    ". however , we are able to prove the following statement for s - idnc :    [ theo : idnc ] s - idnc does not provide a constant approximation ratio for the minimum apdd problem .    to prove this",
    ", it suffices to provide a counter example .",
    "consider a complete graph @xmath68 with @xmath0 vertices and @xmath69 edges .",
    "for every vertex @xmath52 we generate a data packet @xmath13 . for every edge @xmath70 that connects @xmath71 and @xmath72 we generate a receiver @xmath12 with @xmath73 . in the resultant @xmath10 ,",
    "every receiver wants two data packets .",
    "s - idnc prohibits to code together any two data packets that are both wanted by any receiver . in other words ,",
    "every s - idnc coding set @xmath21 must satisfy @xmath74 for any receiver @xmath12 .",
    "given the above @xmath10 , this restriction implies that no data packets can be coded together at all .",
    "hence , all @xmath0 data packets must be broadcast uncoded alone .",
    "the resultant apdd is @xmath75 .",
    "note that it is easy to show that the optimal value of apdd is at most 2 .",
    "indeed , the value of 2 can be achieved by using the rlnc technique .",
    "thus , s - idnc fails to provide a constant approximation ratio for the problem at hand .    in conclusion , in this section we proved that rlnc is at least a @xmath1-approximation algorithm of @xmath31 . by setting rlnc as a benchmark",
    ", we showed that s - idnc fails to provide a constant approximation ratio for our problem .",
    "indeed , rlnc is the only existing approximation algorithm , to the best of our knowledge .",
    "therefore , the final question we are interested in is : _ how to overtake rlnc _ ?",
    "imagine a linear nc technique that : 1 ) is throughput optimal as rlnc ( i.e. , allows every receiver to increase its dof by one in every transmission @xcite ) ; and 2 ) enables early packet decodings rather than block decodings in rlnc .",
    "such an nc technique offers an apdd lower than rlnc , and thus will be an approximation algorithm of @xmath31 with a ratio lower than rlnc . to the best of our knowledge , such nc techniques have not been developed in the literature .    in this section , we propose a methodology for the development of such nc techniques .",
    "we first construct a hypergraph @xmath37 that corresponds to a given instance @xmath10 .",
    "the key idea to guarantee optimal throughput and early packet decodings is to find minimal vertex covers in @xmath37 .",
    "a vertex cover is a subset @xmath76 of @xmath39 such that @xmath77 for every hyperedge .",
    "it is minimal if it is not the superset of a smaller vertex cover , implying that @xmath78 for at least one hyperedge .",
    "hence , every receiver wants at least one data packet from @xmath76 , and at least one receiver can instantly decode a wanted data packet from @xmath76 .",
    "initialize : sfm @xmath10 ; construct the hypergraph @xmath51 of @xmath10 by mapping data packets to vertices and receivers to hyperedges ; find a minimal vertex cover @xmath76 of @xmath37 , and send a random - coded packet of data packets in @xmath76 ; update @xmath37 by removing @xmath76 from it following some strategy ; send random - coded packets of all data packets until all receivers complete broadcast .",
    "[ alg : dmin ]    the core algorithmic structure of our methodology is sketched in algorithm [ alg : dmin ] .",
    "it generates a solution @xmath27 with coding sets @xmath79 , where @xmath80 is the total number of minimal vertex covers found by the algorithm . to achieve optimal throughput",
    ", the random - coded packet of every @xmath81 must be able to increase every receiver s dof by one .",
    "to this end , a proper hypergraph update strategy must be applied .",
    "the simplest strategy is to completely remove @xmath82 from @xmath37 before finding @xmath83 . by doing so ,",
    "all the vertex covers will have empty intersections , and thus serve all the receivers with different data packets .",
    "the algorithm stops at the @xmath80-th round when there is at least one empty hyperedge , after which point , optimal throughput is maintained by sending random - coded packets of all data packets in @xmath8 , as in rlnc .",
    "hence , the solution @xmath27 is throughput optimal as rlnc .",
    "moreover , since the minimal vertex covers enable instant packet decodings , the apdd of @xmath27 is better than rlnc .    the design of optimal hypergraph vertex cover algorithms and hypergraph update strategies that minimize apdd is still an open problem .",
    "however , regardless of whether optimal or heuristic algorithms / strategies are applied , solutions generated by algorithm 1 are always throughput optimal , while also providing early packet decodings .",
    "thus , they can approximate @xmath31 with ratio smaller than rlnc .",
    "fig.[fig : d_general ] compares the apdd performance of a simple realization of our methodology with rlnc and a heuristic g - idnc @xcite . in this realization",
    ", we adopt the aforementioned complete @xmath76 removal strategy and a heuristic hypergraph vertex cover algorithm , which iteratively adds to @xmath76 the vertex that 1 ) is not connected to @xmath76 ; and 2 ) has the highest degree . to generate the sfm instances , we consider a block of @xmath84 data packets and assume that each receiver wants each data packet randomly with a probability of @xmath85 .",
    "the number of receivers @xmath86 $ ] .",
    "the results show that g - idnc offers the lowest apdd when @xmath5 is small , but becomes worse than rlnc when @xmath87 .",
    "hence , the heuristic g - idnc is not an approximation algorithm . our realization ( heur .",
    "vc in the figure ) always outperforms rlnc .",
    "their gap narrows down with increasing @xmath5 .    to gain a deeper insight into the realization and performance analysis of the proposed methodology",
    ", we conduct a case study in the next subsection by considering a special type of sfm .    .",
    "]      in this subsection , we design a nc technique that approximates the @xmath31 of a special type of sfm where every receiver wants two data packets from the packet block @xmath8 . though seemingly simple",
    ", this case is highly nontrivial , because its @xmath31 can not be approximated by existing apdd - reduction techniques such as s - idnc , as shown in the proof of theorem [ theo : idnc ] .",
    "given such an sfm @xmath10 , we first construct its hypergraph model by mapping data packets into vertices , and mapping receivers into hyperedges .",
    "note that multiple receivers who want the same set of data packets are represented by one hyperedge .",
    "in addition , we weight every vertex @xmath52 with a value of @xmath18 , which is the number of receivers who want @xmath13 .",
    "we note that since every hyperedge has @xmath88 , the resultant hypergraph is indeed a classic graph @xmath68 .",
    "we then partition @xmath39 into two subsets :    * the first subset is a minimal vertex cover @xmath76 . since every edge is incident to @xmath76 , every receiver wants at least one data packet from @xmath76 . denote by @xmath89 the receivers who want two data packets from @xmath76 , and by @xmath90 their number ; * the second subset is a set @xmath91 .",
    "it is obvious that @xmath92 is a maximal independent set , because it contains no edge ( otherwise @xmath76 is not a minimal vertex cover ) .",
    "hence , every receiver wants at most one data packet from @xmath92 .",
    "we denote by @xmath93 the set of receivers who want one data packet from @xmath92 , and by @xmath94 their number .",
    "we have @xmath95 .",
    "an example of such partition is demonstrated in fig.[fig : mis_example ] .",
    "it has 4 data packets and 5 receivers , with 4 of them want one data packet from both @xmath92 and @xmath76 .",
    "we then send the following two nc packets :    * in the first transmission , send an rlnc packet of all data packets in @xmath76 .",
    "this allows @xmath93 to decode one data packet , and allows @xmath89 to increase dof by one without decoding ; * in the second transmission , send an rlnc packet of all data packets in @xmath39 .",
    "this allows @xmath93 to decode the other data packet , and allows @xmath89 to decode two data packets .",
    "we call this technique maximal independent set ( mis ) technique .",
    "mis follows algorithm [ alg : dmin ] , and thus is an approximation algorithm of @xmath31 .",
    "its apdd , denoted by @xmath96 , is calculated as : @xmath97 which is minimized when @xmath94 is maximized . since @xmath98 , we need to find the maximum weighted independent set @xmath92 , which is np - hard @xcite .",
    "nevertheless , even a heuristically finding @xmath92 can offer @xmath99 .",
    "hence , @xmath100 regardless of the way @xmath92 is found .",
    "we now derive the worst approximation rate of mis by calculating an upper bound on @xmath96 .",
    "the minimum size of @xmath92 is one , taking place when @xmath101 is complete . in this case",
    ", the optimal mis will find the solo vertex with the largest weight .",
    "hence , @xmath102 is minimized when all vertices have the same weight . in this case",
    ", we have @xmath103 .",
    "@xmath96 is thus upper bounded as @xmath104 .",
    "then , by noting that @xmath105 when every receiver wants 2 data packets , we conclude that :    mis is at most a @xmath2-approximation algorithm of @xmath31 when every receiver wants 2 out of @xmath0 packets .     and @xmath106 .",
    "]    fig.[fig : d_compare ] compares the simulated apdd performance of mis with rlnc and the heuristic g - idnc @xcite .",
    "the packet block size is @xmath107 .",
    "the number of receivers @xmath86 $ ] .",
    "every receiver randomly chooses two wanted data packets . since @xmath107 , @xmath96 is upper bounded by @xmath108 .",
    "the optimal @xmath96 is obtained by exhaustively searching the maximum weighted independent set .",
    "both the performance of heuristic @xmath96 and heuristic g - idnc are obtained by using the heuristic maximum weighted clique ( a complete subgraph of a graph ) search algorithm proposed in @xcite .",
    "this algorithm can be adapted for mis because an independent set of @xmath101 is a clique of the complementary graph @xmath109 . according to the results , both the optimal and heuristic @xmath96 are well below their upper bound , and are much better than both g - idnc and rlnc . on the other hand ,",
    "the apdd of g - idnc exceeds rlnc when the number of receivers becomes large .",
    "in this paper , we proved that it is np - hard to minimize the average packet decoding delay ( apdd ) in packet block based wireless broadcast using linear network coding .",
    "but the minimum apdd can be approximated by rlnc with a ratio of at most 2 . in order to achieve a lower approximation rario , we proposed a methodology for the design of specialized approximation algorithms that always outperform rlnc .    in the future , we are interested in designing more sophisticated realizations of the proposed nc framework .",
    "we are also interested in its extension to more general network settings , for example , when nc transmissions are subject to erasures .",
    "besides , our hypergraph model and delay analysis may be extended to other network models such as cooperative data exchange and distributed data storage , because they also have similar types of demands on data packets .",
    "m.  nistor , d.  e. lucani , t.  t.  v. vinhoza , r.  a. costa , and j.  barros , `` on the delay distribution of random linear network coding , '' _ ieee j. sel .",
    "areas commun .",
    "_ , vol .  29 , no .  5 , pp .",
    "10841093 , may 2011 .",
    "j.  k. sundararajan , p.  sadeghi , and m.  mdard , `` a feedback - based adaptive broadcast coding scheme for reducing in - order delivery delay , '' in _ proc .",
    "5th workshop on network coding , theory , and applications ( netcod ) _ , 2009 .",
    "p.  sadeghi , r.  shams , and d.  traskov , `` an optimal adaptive network coding scheme for minimizing decoding delay in broadcast erasure channels , '' _ eurasip j. on wireless commun . and netw .",
    "_ , pp . 114 , jan .",
    "2010 .",
    "x.  li , c .- c .",
    "wang , and x.  lin , `` on the capacity of immediately - decodable coding schemes for wireless stored - video broadcast with hard deadline constraints , '' _ ieee j. sel .",
    "areas commun .",
    "_ , vol .  29 , no .  5 , pp . 10941105 , 2011",
    "s.  athanasiadou , m.  gatzianas , l.  georgiadis , and l.  tassiulas , `` stable and capacity achieving xor - based policies for the broadcast erasure channel with feedback , '' in _ proc .",
    "information theory ( isit ) _ , 2013 ,",
    ". 29052909 .",
    "p.  sadeghi , m.  yu , and n.  aboutorab , `` on throughput - delay tradeoff of network coding for wireless communications , '' in _ proc .",
    "information theory and its applications ( isita ) _ , 2014 , pp ."
  ],
  "abstract_text": [
    "<S> we consider a setting in which a sender wishes to broadcast a block of @xmath0 data packets to a set of wireless receivers , where each of the receivers has a subset of the data packets already available to it ( e.g. , from prior transmissions ) and wants the rest of the packets . </S>",
    "<S> our goal is to find a linear network coding scheme that yields the minimum average packet decoding delay ( apdd ) , i.e. , the average time it takes for a receiver to decode a data packet . </S>",
    "<S> our contributions can be summarized as follows . </S>",
    "<S> first , we prove that this problem is np - hard by presenting a reduction from the hypergraph coloring problem . </S>",
    "<S> next , we show that a random linear network coding ( rlnc ) provides an approximate solution to this problem with approximation ratio @xmath1 with high probability . </S>",
    "<S> next , we present a methodology for designing specialized approximation algorithms for this problem that outperform rlnc solutions while maintaining the same throughput . in a special case of practical interest with a small number of wanted packets </S>",
    "<S> our solution can achieve an approximation ratio @xmath2 . </S>",
    "<S> finally , we conduct an experimental study that demonstrates the advantages of the presented methodology .    network coding , decoding delay , np - hardness , approximation algorithm . </S>"
  ]
}
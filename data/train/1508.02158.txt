{
  "article_text": [
    "the study of _ communication complexity _ , introduced by yao  @xcite in 1979 , aims at investigating the minimum amount of information exchange required for computing functions whose inputs are distributed among multiple parties  @xcite . in the standard two - party setting , holds an input @xmath0 , holds an input @xmath1 , and they wish to compute a function @xmath2 on @xmath3 by as little communication as possible . perhaps the most important open problem in communication complexity",
    "is the so - called _ log - rank conjecture _ proposed by lovsz and saks  @xcite , which states that the _ deterministic communication complexity _ of any @xmath4 , @xmath5 , is upper bounded by a polynomial of the logarithm of the rank the communication matrix @xmath6_{x , y}$ ] , where the rank is taken over the reals .",
    "although a lot of effort has been devoted to the conjecture in the past two decades , very little progress has been achieved and the best upper bound known to date is @xmath7 , due to lovett  @xcite .",
    "note that there is still an exponential gap between this and the best known lower bound , which is @xmath8 due to kushilevitz ( unpublished , cf .",
    "@xcite ) . for an overview of recent developments in this direction , see  @xcite .",
    "an interesting special class of functions computable by two parties is the so - called _",
    "xor functions_. specifically , @xmath2 is an xor function if there exists an @xmath9 such that for all @xmath0 and @xmath1 , @xmath10 , where @xmath11 is the bit - wise xor .",
    "denote such @xmath2 by @xmath12 . besides including important examples such as equality and hamming distance ,",
    "xor functions are particularly interesting for studying the log - rank conjecture due to its intimate connection with the analysis of boolean functions .",
    "specifically , if @xmath2 is an xor function , then the rank of @xmath13 is just the fourier sparsity of @xmath14 ( i.e. , the number of non - zero fourier coefficients of @xmath14 )  @xcite . therefore proving the log - rank conjecture for xor functions",
    "can be achieved by demonstrating short _ parity decision tree _ protocols for a function @xmath9 generalizes an ordinary decision tree in the sense that each internal node of @xmath15 is now associated with a linear function @xmath16 , instead of a single bit , of the input , and @xmath15 branches according to the parity of @xmath16 . ]",
    "computing fourier sparse boolean functions , and this problem attracted a lot of attention  @xcite during the past years .",
    "recently , by viewing boolean functions as @xmath17-polynomials , a new communication protocol based on @xmath17-degree reduction was proposed in  @xcite for xor functions : suppose @xmath18 is a degree-@xmath19 polynomial and @xmath20 is the minimum number of variables ( up to an invertible linear transformation ) restricting of which reduces @xmath14 s degree to at most @xmath21 , then alice and bob both apply the optimal linear map to their inputs and send each other @xmath20 bits of their respective inputs . repeating this process at most @xmath21 times , the restricted function of @xmath14 becomes a constant function hence they successfully compute @xmath18 .",
    "of course , such a protocol is efficient only if the numbers @xmath22 , of the restricted variables that they need to exchange , are not large . studying these quantities , namely _",
    "linear ranks _ of polynomials , is one the central objectives of this paper .",
    "[ def : linear_rank ] let @xmath14 be a degree-@xmath19 polynomial , @xmath23 be a subspace in @xmath24 and @xmath25 be any affine shift of @xmath23",
    ". denote by @xmath26 the restriction of @xmath14 on @xmath27 .",
    "then the _ linear rank _ of @xmath14 , denoted @xmath28 , is the minimum co - dimension of any subspace @xmath27 such that the degree of @xmath26 is strictly less than @xmath19 ; that is , @xmath29    in other words , @xmath28 is the minimum number of linear functions one needs to fix in order to lower the degree of @xmath14 .",
    "consider , for example , the degree-@xmath30 polynomial @xmath31 . in the original basis , one needs to fix at least @xmath32 variables to lower the degree of @xmath14 .",
    "however , fixing one linear function @xmath33 is enough to lower its degree .",
    "therefore @xmath34 .    for a boolean function @xmath14 ,",
    "let @xmath35 denote the fourier sparsity of @xmath14 and @xmath36 denote the parity decision tree complexity of @xmath14 .",
    "as restrictions do not increase @xmath35 ( cf .",
    "lemma  [ lem : rotation ] ) and @xmath37 for every @xmath14 , the following _ linear rank conjecture_if true  would readily implies the log - rank conjecture for xor functions .",
    "[ conj : lin - rank ] for any @xmath38 , the linear rank of @xmath14 is upper bounded by polylogarithmic of the fourier sparsity of @xmath14 : @xmath39 for some @xmath40 .",
    "equivalently , if @xmath41 , then @xmath42 .    although it is still open whether the linear rank conjecture is equivalent to the log - rank conjecture for xor functions , it is worthwhile to note that it is equivalent to the stronger statement that @xmath43 for any boolean function @xmath14 .      before further discussing the linear rank conjecture ,",
    "let us first state a lemma of  @xcite ( lemma 19 ) in a slightly stronger form and give an alternative simple proof ( another simple proof used polynomial derivatives  @xcite ) .",
    "the lemma says that , once the linear subspace @xmath23 in definition  [ def : linear_rank ] is identified , it does not matter which affine shift is used in the definition of linear rank : all affine subspaces of @xmath23 are equally good .",
    "more specifically , if @xmath14 restricted to @xmath44 has degree at most @xmath45 ( where @xmath46 ) , then @xmath14 restricted to any other @xmath47 also has degree at most @xmath21 .",
    "this can be seen by the following argument .",
    "call a monomial in @xmath14 a _ maxonomial _ if it is of the maximal degree ( i.e. , degree @xmath19 ) .",
    "apply a linear map to @xmath24 so that @xmath48 , where @xmath49",
    ". then @xmath50 becomes a polynomial of degree at most @xmath21 if and only if every maxonomial of @xmath14 ( under the new basis ) contains at least one variable in the set @xmath51 .",
    "moreover , when this happens it does not matter whether @xmath52 ( @xmath53 ) is restricted to @xmath54 or @xmath55 , the degree of the maxonomial always decreases , thus @xmath56 for all @xmath57 .",
    "the above fact also reveals that the linear rank @xmath58 of any polynomial @xmath59 is determined by the maxonomials in @xmath59 _",
    "only_. fourier sparsity in general , on the other hand , should depend on all gf(2 ) monomials , not only those with the highest degree .",
    "however , the linear rank conjecture claims that if the maxonomials in @xmath59 make the linear rank large , then no matter how the lower - degree monomials behave , the fourier sparsity is large .",
    "therefore , for the effect of forcing the fourier sparsity of gf(2 ) polynomial to be large , there exists a surprising fact ( assuming the linear rank conjecture ) that can be summarized by paraphrasing a famous quote from _",
    "animal farm _ : `` all monomials are equal , but some monomials are more equal than others '' .    in retrospect , this phenomenon is known for some extremal cases .",
    "when @xmath60 , the lower degree terms form a linear function @xmath61 , adding which only shifts fourier spectrum by @xmath62 and thus does not affect the fourier sparsity . when @xmath63 , the fourier sparsity is at least @xmath64 , which is again determined by the ( unique ) maxonomial .",
    "but for general @xmath65 , maxonomials by themselves do not necessarily determine large fourier sparsity .",
    "for instance , if there is only one maxonomial @xmath66 , then the fourier sparsity can be as small as @xmath67 ( when , say , the lower degree part is @xmath68 ) , and as large as @xmath69 ( when , say , the lower degree part is a bent function is _ bent _ if its fourier coefficients satisfy that @xmath70 for all @xmath71 . ] over @xmath72 ,  , @xmath73 ) . despite this uncertainty",
    ", we will show that when the maxonomials form certain patterns , the fourier sparsity is guaranteed to be large , regardless of the lower degree terms ( whose number can be much larger than that of maxonomials ) .",
    "one sufficient condition for the pattern is that the linear rank , which depends on maxonomials only , is large . and",
    "we will showcase some specific classes of good patterns .",
    "therefore , apart from leading directly to a proof of the log - rank conjecture for xor functions , studying the linear rank conjecture is interesting in its own right , due to its close connection to the fourier analysis of boolean functions in the gf(2 ) polynomial representation .",
    "we study the linear rank conjecture and in particular investigate how could the maxonomials of a @xmath17-polynomial possibly determine by themselves the fourier sparsity of the polynomial .",
    "we develop a new technique which is able to show that , under certain circumstances , the fourier sparsity is large for all possible settings of lower degree monomials .",
    "it is hoped that this new framework of studying the fourier coefficients based on gf(2 ) monomials may be further extended and generalized to yield more structural results on the analysis of boolean functions , such as sparsity , granularity and fourier mass distribution .    for general degree-@xmath19 polynomials ,",
    "we investigate the linear rank and fourier sparsity for several special cases . since the maxonomials of a polynomial are the main concern of the conjecture , it is convenient to borrow the terminology of hypergraphs to define these maxonomials .",
    "for example , the complete @xmath19-uniform maxonomials corresponds to the degree-@xmath19 polynomial who has all @xmath74 maxonomials .",
    "we determine the exact values of the linear ranks of degree-@xmath19 polynomials with all @xmath74 maxonomials .",
    "specifically , let @xmath75 $ , $ |s|=d$}}\\prod_{i\\in s}x_i + f'$ ] , where @xmath76 is an arbitrary polynomial of degree at most @xmath21 , we show that for such an @xmath14 , @xmath77 the proof exploits the symmetry of maxonomials and goes through a careful induction on @xmath32 and @xmath19 . in particular we prove a `` step - function '' type behaviour of the linear rank ( for fixed @xmath19 and with respect to @xmath32 ) , by showing both upper and lower bounds for the number of linear functions one needs to fix in order to decrease the degree of the polynomial .      if the linear rank conjecture is true , then for any polynomial with complete @xmath19-uniform maxonomials ( @xmath19 is even ) , the fourier sparsity must be @xmath78 regardless of the lower degree monomials .",
    "we are only able to verify this for a small ( but infinite ) set of @xmath19 s : for any @xmath19 that is a power of @xmath79 , if @xmath80 is a degree-@xmath19 polynomial with complete @xmath19-uniform maxonomials , then @xmath81 we prove this sparsity lower bound by developing a new technique to be discussed more later .",
    "zhang and shi  @xcite proved that any symmetric boolean function has fourier sparsity @xmath82 , unless it is constant , the parity function over @xmath32 bits or its negation .",
    "however , as the polynomials considered there are symmetric , their result requires the degree-@xmath83 monomials to be either empty or complete @xmath83-uniform , for every @xmath84 . on the contrary",
    ", our lower bound applies to a broader class of functions as it holds for all possible choices of lower degree monomials , as long as the highest - degree monomials are symmetric .",
    "we further demonstrate the power of our technique by applying it to several other special forms of sparse maxonomials .",
    "in particular , we show lower bounds on the fourier sparsity of polynomials whose maxonomials are pairwise disjoint or have certain `` regular '' overlaps .",
    "gopalan _ et al . _",
    "@xcite studied the _",
    "granularity _ of a function s fourier spectrum , which is the smallest integer @xmath85 such that all fourier coefficients of the function can be expressed as integer multiples of @xmath86 .",
    "they showed that for any boolean function @xmath80 , @xmath87 . on the other hand , by parseval s identity , @xmath88 .",
    "the granularity of a linear functions is @xmath55 and the maximum granularity of any @xmath32-variate quadratic polynomial is @xmath89 .",
    "it thus natural to conjecture that , for any @xmath32-variate low - degree polynomial @xmath59 , although @xmath35 can be as large as @xmath90 , the granularity of @xmath59 is always bounded away from @xmath32 .",
    "we are able to apply our technique to show the following _ upper bound _ on the granularity of low - degree polynomials : for any degree-@xmath19 polynomial @xmath14 , @xmath91 .",
    "it is easy to see this bound is tight as it is attained by the `` generalized inner product function '' : @xmath92 , where @xmath93 .",
    "the main challenge in proving sparsity lower bounds based on _ only _ the maxonomials of a polynomial is how to isolate the effect of _ all _ lower degree monomials . to the best of our knowledge",
    ", there is no prior method or result of this kind .",
    "our method is to first apply the standard procedure to transform a degree-@xmath19 polynomial @xmath14 into a fourier polynomial , and then define a `` weight function '' @xmath94 on each set @xmath95 $ ] such that the fourier coefficient of @xmath14 at any set @xmath96 can be written as @xmath97 .",
    "this implies that the weight function at @xmath98 $ ] is the most important term as it contributes to all the fourier coefficients of @xmath14 .",
    "another nice property of the weight function is that for any @xmath15 , @xmath99 can be expressed as a sum of alternating terms in which the @xmath100 term is @xmath101 , where @xmath102 is the number of ways to cover @xmath15 with ( the supports of ) exactly @xmath85 monomials of @xmath59 .",
    "therefore , the problem of computing the fourier coefficients of an @xmath17-polynomial is now reduced to a combinatorial problem of counting the numbers of covers of all subsets of @xmath98 $ ] using various numbers of sets from the set family defined by the monomials of the polynomial . moreover ,",
    "the parity of @xmath99 is likely to be determined by the numbers of smaller covers due the factor @xmath103 in each term of the sum . using the notion of `` granularity '' introduced in  @xcite ,",
    "our strategy for showing sparsity lower bound is to argue that @xmath104)$ ] is the single one with the highest granularity among all weight function values .",
    "note that if @xmath93 and we can cover @xmath98 $ ] with ( the supports of ) maxonomials of @xmath59 only , then these covers would be the minimum covers as they require only @xmath105 sets while any cover involving lower monomials is of size at least @xmath106 . hence to prove that @xmath104)$ ] has the highest possible granularity",
    ", it suffices to show that the number of @xmath85-covers of @xmath98 $ ] is odd , as we did for the several sparsity lower bounds .",
    "section  [ sec : prelim ] contains notations and preliminaries that will be used throughout the paper . in section",
    "[ sec : lrank ] we compute exactly the linear rank of polynomials with complete @xmath19-uniform maxonomials .",
    "the basic machinery for proving sparsity lower bounds are described in section  [ sec : fourier ] , and we then use this in section  [ sec : complete_sparsity ] to prove the linear rank conjecture for complete @xmath19-uniform polynomials when @xmath19 is a power of @xmath79 . in section",
    "[ sec : sparse_sparsity ] , we apply our technique to study the sparsity of several more special polynomials and prove an upper bound on the granularity of low - degree polynomials .",
    "all logarithms in this paper are base 2 . for two @xmath32-bit vectors @xmath107 , define their inner product as @xmath108 and for simplicity we write @xmath109 for @xmath110 .",
    "we often use @xmath14 to denote a real function defined on @xmath111 . in most occurrences @xmath14 is a boolean function , whose range can be represented by either @xmath112 or @xmath113 . for @xmath38 , we use @xmath114 to denote the equivalent boolean function with range converted to @xmath113 .",
    "if @xmath115 $ ] is a set of ( indices of ) variables , then the monomial @xmath116 is the product of variables in @xmath96 : @xmath117 .",
    "the _ degree _ of this monomial is the cardinality of @xmath96 , and @xmath96 is called the _ support _ of the monomial .",
    "we say a set @xmath15 _ meets _ a monomial @xmath118 if @xmath119 .",
    "every boolean function @xmath38 can be uniquely expressed as a multilinear polynomial over @xmath17 : @xmath120 where @xmath121 is a collection of subsets of @xmath98 $ ] ( here additions are performed modulo @xmath79 ) .",
    "the _ degree _ of @xmath14 , denoted @xmath122 , is the maximum degree of its monomials . in this paper , whenever there is no risk of confusion , we use @xmath14 and multilinear polynomial representation of @xmath123 interchangeably .      for any real function @xmath124 , the fourier coefficients are defined by @xmath125 , where @xmath126 .",
    "the function @xmath14 can be written as @xmath127 .",
    "the fourier sparsity of @xmath14 , denoted by @xmath128 , is the number of nonzero fourier coefficients of @xmath14 .",
    "the fourier coefficients of @xmath38 and @xmath129 are related by @xmath130 , where @xmath131 is the kronecker delta function .",
    "therefore we have @xmath132 sometimes we employ the one - to - one mapping between vectors in @xmath24 and subsets of @xmath98 $ ] : @xmath133 : x_i=1\\}$ ] , and use the subsets of @xmath98 $ ] to index the fourier coefficients .    for any function @xmath124 , parseval s identity says that @xmath134 $ ] .",
    "when the range of @xmath14 is @xmath112 , then @xmath135 $ ] .",
    "we sometimes use @xmath136 to denote the vector of @xmath137 .",
    "a rational number @xmath58 is said to have _",
    "@xmath85 , denoted @xmath138 , if @xmath139 for some odd integer @xmath140 .",
    "the _ fourier granularity _ of a boolean function @xmath14 , denoted @xmath141 , is the maximum granularity over all the fourier coefficients of @xmath14 ; i.e. , @xmath142 .    clearly , @xmath143 for any @xmath144 .",
    "an easy but useful fact is that @xmath145 for all @xmath146 .",
    "more generally , @xmath147 , where @xmath148 for every @xmath149 .",
    "[ fact : granularity_xor ] let @xmath150 be two boolean functions .",
    "let let @xmath151 .",
    "then @xmath152 .",
    "since the fourier spectrum of @xmath153 is given by the convolution formula @xmath154 the upper bound on @xmath155 follows directly from the definition of granularity .",
    "now suppose @xmath156 , then applying the granularity upper bound on xor of two functions we just show on @xmath157 , which is @xmath14 , gives the desired lower bound .",
    "gopalan _ et al . _",
    "@xcite showed that , if a boolean function has only a small number of non - zero fourier coefficients , then all these non - zero fourier coefficients have small granularities .",
    "[ lem : gap ] suppose @xmath158 is @xmath159-sparse with @xmath160 , then all the fourier coefficients of @xmath161 have granularity at most @xmath162 .",
    "the following claim shows that the logarithm of the sparsity and granularity of a boolean function are in fact equivalent up to a constant factor .",
    "[ prop : sparsity_granularity ] let @xmath158 be a boolean function , then @xmath163    suppose that @xmath164 .",
    "then for any @xmath165 , if @xmath166 , then @xmath167",
    ". by parseval s identity , we have @xmath168 , or @xmath169 .",
    "combining with lemma  [ lem : gap ] gives the desired result .",
    "note that both bounds in proposition  [ prop : sparsity_granularity ] are tight : for the first inequality , consider the @xmath32-variate degree-@xmath32 polynomial @xmath170 , which satisfies @xmath171 and @xmath172 ; for the second inequality , consider for any even integer @xmath32 and the inner product function on @xmath32 variables @xmath173 , then @xmath161 has sparsity @xmath174 and granularity @xmath89 .      sometimes we need to rotate the input space : for an _ invertible _ linear map @xmath175 on @xmath111 , define @xmath176 by @xmath177 .",
    "for a function @xmath124 , define two subfunctions @xmath178 and @xmath179 , both on @xmath180 : @xmath181 .",
    "it is easy to see that for any @xmath182 , @xmath183 , thus @xmath184 where @xmath185 and @xmath186 .",
    "the notion of subfunctions can be generalized to restrictions with respect to a general direction .",
    "suppose @xmath124 and @xmath187 is a subset of the domain .",
    "then the restriction of @xmath14 on @xmath96 , denoted by @xmath188 is the function from @xmath96 to @xmath189 defined naturally by @xmath190 , @xmath191 . in this paper",
    ", we are concerned with restrictions on affine subspaces .",
    "[ lem : rotation ] let @xmath124 and @xmath192 be an affine subspace , then one can ( recursively ) define the spectrum @xmath193 of the restricted function @xmath26 such that    1 .   if @xmath194 , then @xmath193 is the collection of @xmath195 for all unordered pair @xmath196 , where @xmath197 is the unique non - zero vector orthogonal to @xmath23 , and @xmath198 if @xmath199 and @xmath200 otherwise .",
    "@xmath201 , for any @xmath202 $ ] .",
    "in particular , restriction does not increase the fourier sparsity of a function .",
    "it is worth noticing that , for any boolean function , its @xmath17-degree , fourier sparsity and granularity are all invariant under invertible linear maps .",
    "[ fact : invertible1 ] let @xmath14 be an @xmath17-polynomial .",
    "then for any invertible linear map @xmath175 , @xmath203 .    [ fact : invertible2 ] let @xmath38 be a boolean function and @xmath175 an invertible linear map",
    ". then @xmath204 . in particular ,",
    "@xmath205 and @xmath206 .",
    "we now compute the exact value of the linear rank of a degree @xmath19 polynomial whose set of maxonomials consists of all @xmath74 degree-@xmath19 monomials , and give explicit linear constraints restriction of which reduces the degree of such a polynomial .",
    "define @xmath207 , |i| = d } \\prod_{i\\in i}x_i$ ] , the summation of all degree-@xmath19 monomials over variables @xmath208 .",
    "the subscript @xmath32 is dropped when it is clear from the context .",
    "we use the equivalence relation @xmath209 for polynomials with the same maxonomials , _",
    "i.e._@xmath210 if both @xmath211 and @xmath212 have -degree @xmath19 and @xmath213 has -degree strictly less than @xmath19 .",
    "it is clear that if @xmath210 , then @xmath214 .",
    "[ thm : symlrank ] let @xmath215 be integers .",
    "then the following hold :    1 .   if @xmath19 is odd , then @xmath216 .",
    "if @xmath19 is even , then @xmath217 , i.e. @xmath218    the first item follows simply by the factorization @xmath219 .",
    "indeed , when we multiply @xmath220 } x_i$ ] and @xmath221 , for @xmath222 , @xmath223 , and each @xmath224 with @xmath225 comes from @xmath19 many @xmath226 . for each @xmath227 , @xmath228 , and each",
    "resulting @xmath229 with @xmath230 comes from @xmath21 many @xmath231 .",
    "thus @xmath232 for all odd @xmath19 .",
    "now we consider the second item in the statement and assume from now on that @xmath19 is even and @xmath233 .",
    "the second item follows from the following two claims .",
    "[ claim : lowerb ] if @xmath234 , then @xmath235 .",
    "[ claim : upperb ] @xmath236 .",
    "let us first show theorem [ thm : symlrank ] assuming these two lemmas .",
    "we prove by induction on the number of variables that for all @xmath237 , @xmath238 which is just a restatement of the second item of theorem [ thm : symlrank ] .",
    "[ [ base - case - k - d2 . ] ] base case @xmath239 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we have @xmath240 so @xmath241 . for @xmath242 ,",
    "note that @xmath243 putting restriction @xmath244 makes the first summand vanish and decreases the degree of the second summand , hence @xmath245 .",
    "[ [ general - k . ] ] general @xmath85 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + +    now we assume that eq",
    ".   holds for @xmath85 and will prove the case for @xmath106 .",
    "the following sequence of inequalities hold .",
    "@xmath246 where the first inequality follows by claim  [ claim : lowerb ] ; the second follows by the facts that @xmath247 can be obtained from @xmath248 by restricting @xmath249 and restriction does not increase @xmath250 ; and the last inequality follows by claim  [ claim : upperb ] .",
    "therefore eq .   also holds for @xmath106 .",
    "now it remains to prove the two claims .",
    "we start with claim  [ claim : upperb ] , which is simpler .",
    "we first observe the following identity : @xmath251 therefore the restriction @xmath252 reduces @xmath253 to @xmath254    since each restriction can reduce @xmath250 by at most 1 , we have @xmath255 as desired .    for the sake of contradiction ,",
    "assume that @xmath256 fix an optimal set of linear restrictions for @xmath257 .",
    "without loss of generality , we can assume it contains a restriction of the form @xmath258 for some linear form @xmath259 .",
    "it is clear that such restriction will reduce the @xmath250 by exactly 1 .",
    "so we have @xmath260 but by the expansion @xmath261 we have @xmath262 now , consider to further restrict @xmath263 . by the fact that @xmath264 for every even @xmath265 , the second term on the right of eq .",
    "is @xmath209-equivalent to @xmath266 and the last term becomes @xmath267 plugging these two back to eq . , @xmath268 as restriction does not increase linear rank , we have from eq .",
    "that @xmath269 which is a contradiction .    as a simple application of theorem  [ thm : symlrank ] , for any symmetric function @xmath14 ,",
    "let @xmath270 , @xmath271 be the largest and smallest integers such that @xmath59 is constant or parity on @xmath272 .",
    "the quantity @xmath273 turns out to be an important complexity measure for symmetric functions . for example , the randomized and quantum communication complexity of symmetric xor functions is characterized by this @xmath58 ( @xcite ) , and @xmath274 for all symmetric functions @xmath14 ( @xcite ) .",
    "here we relate this measure to the -degree of @xmath14 .",
    "it is clear that we can fix @xmath275 and @xmath276 to reduce the degree of @xmath14 to at most @xmath55 .",
    "we therefore have the following corollary .",
    "let @xmath14 be a symmetric function with even -degree @xmath19 , then    1 .",
    "@xmath278 , if @xmath279 .",
    "the proof of theorem  [ thm : symlrank ] can be used to find a linear transformation which explicitly show the restrictions for @xmath248 . indeed , starting from either eq .   or eq .   and recursively applying eq .",
    ", gives , when @xmath280 is even , @xmath281 then in the new basis where @xmath282 , we have @xmath283 hence @xmath284 is a set of @xmath285 linear restrictions that reduce @xmath248 s degree . by theorem  [ thm : symlrank ] , this is the best possible .",
    "similarly , when @xmath286 is odd , @xmath287    now if we switch to the basis in which @xmath288 , then @xmath289 consequently , @xmath290 is a set of @xmath285 linear restrictions that reduce @xmath248 s degree and meet the bound in theorem  [ thm : symlrank ] .",
    "in this section , we present a framework for computing the fourier spectrum of a gf(2 ) polynomial based on its monomials .",
    "we suspect that such a formalism was known before but we could not track any previous sources .    for a fixed",
    "@xmath115 $ ] , a collection @xmath291 of @xmath85 ( distinct ) subsets of @xmath98 $ ] form a _ @xmath85-cover _ of @xmath96 if @xmath292 . the main result of",
    "this section is the following lemma , which shows that the fourier coefficients of a gf(2 ) polynomial can be computed by counting the number of @xmath85-covers of subsets of @xmath98 $ ]  for different values of @xmath85  using the supports of monomials in the gf(2 ) polynomial as subsets .",
    "of particular importance is the number of @xmath293-covers of @xmath98 $ ] , where @xmath293 is minimum number of subsets that are required to cover @xmath98 $ ] .    for a family @xmath294}$ ] of subsets @xmath295 of the base set",
    "@xmath98 $ ] and an index set @xmath296 $ ] , let @xmath297 , the union of the subsets with indices in @xmath298 .",
    "let @xmath299 be the gf(2 ) polynomial representation of @xmath14 .",
    "define a _ weight _",
    "function @xmath300 as @xmath301 $ : $ s_m = t$}}c(m ) , \\quad \\text { where } \\ c(m)=\\frac{(-2)^{|m|}}{2^{|s_m|}}.\\end{aligned}\\ ] ] equivalently , if we denote @xmath294}$ ] and let @xmath102 be the number of @xmath85-covers of @xmath15 using sets in @xmath302 , then @xmath303    [ lem : main ] let @xmath299 be a gf(2 ) polynomial , then the fourier coefficients of @xmath161 are given by @xmath304    for a boolean variable @xmath305 , let @xmath306 be its @xmath113 representation , with the inverse transformation given by @xmath307 .",
    "recall that @xmath308 .",
    "we next express @xmath161 as a multilinear polynomial over @xmath189 from which its fourier coefficients can be readily read out .",
    "note that @xmath116 corresponds to @xmath309 and @xmath310 corresponds to @xmath311 , thus @xmath312 } \\big(1 - 2\\prod_{j\\in s_i } \\frac{1-\\tilde x_{j}}{2}\\big ) \\ ] ]    [ fact : powering ] for @xmath313 and integer @xmath314 , we have @xmath315 .    by eq .",
    ", the fourier polynomial of @xmath161 in terms of @xmath316 is @xmath317 } ( -1)^{|m| } \\frac{\\prod_{j\\in s_{m}}(1-\\tilde{x}_{j})}{2^{|s_{m}|-|m| } } \\\\ & = \\sum_{s\\subseteq [ n ] } ( -1)^{|s|}\\left(\\sum_{m\\subseteq [ m ] : s_{m}\\supseteq s }     ( -1)^{|m|}\\cdot \\frac{2^{|m|}}{2^{|s_{m}|}}\\right ) \\tilde{x}_{s},\\end{aligned}\\ ] ] since the coefficient of @xmath318 in @xmath319 is just the fourier coefficient @xmath320 , this completes the proof of the lemma .",
    "the weight function s value at @xmath98 $ ] , @xmath321)$ ] , is the a particularly important term , as it contributes to all the fourier coefficients of @xmath161 . in particular ,",
    "if the granularity of @xmath321)$ ] is larger than the granularity of any other @xmath322 , then all fourier coefficients of @xmath161 are non - zero .",
    "this will be used to lower bound granularity for different functions in the next two sections .",
    "this section is devoted to the proof of the following fourier sparsity lower bound for polynomials whose maxonomials are the complete @xmath19-uniform monomials .",
    "[ thm : symmetric_sparsity ] let @xmath19 be a power of @xmath79",
    ". for any degree-@xmath19 polynomial @xmath323 $ ] whose maxonomials include all @xmath74 degree-@xmath19 monomials , its fourier sparsity has the following lower bound @xmath324 regardless of the lower degree monomials .",
    "in the rest of this section , we fix @xmath325 .",
    "first we apply a restriction to set , say the last @xmath326 variables in @xmath14 to zero .",
    "this leaves us with a function @xmath327 on @xmath328 variables , and by item 2 of lemma  [ lem : rotation ] , @xmath329 .",
    "furthermore , the maxonomials of @xmath327 are still complete @xmath19-uniform monomials ( now over @xmath330 variables ) .",
    "let @xmath302 be the set of the supports of all monomials in @xmath327 .",
    "in particular , @xmath302 contains all @xmath19-subsets of @xmath331 $ ] : @xmath332}{d}\\subseteq \\mathcal{f}$ ] .",
    "[ lem : complete_symmetric_weight1 ] the granularity of the weight function at @xmath331 $ ] ( hence the fourier coefficient of @xmath327 at @xmath331 $ ] ) is @xmath333)\\right)= n'-k$ ] .    by lemma  [ lem : main ] ,",
    "as the degrees of all monomials in @xmath327 are at most @xmath19 , the minimum number of subsets required from @xmath302 to cover @xmath331 $ ] is @xmath85 , therefore @xmath334)=(-1)^{n'}w_g([n'])=(-1)^{n'}\\sum_{j",
    "= k}^{m}\\frac{(-2)^{j } n_{j}([n'])}{2^{n'}}.\\end{aligned}\\ ] ]    @xmath335 ) \\equiv 1 \\pmod{2}$ ] .",
    "clearly any @xmath85-cover of @xmath331 $ ] consists of @xmath85 distinct sets in @xmath332}{d}$ ] , and there are exactly @xmath336 such @xmath85-covers .",
    "hence we have @xmath337 ) & = \\frac{\\binom{n'}{d,\\ldots , d}}{k ! } = \\frac{1}{k}\\binom{kd}{d } \\cdot \\frac{1}{k-1}\\binom{(k-1)d}{d } \\cdots 1\\cdot \\binom{d}{d } \\\\   & = \\binom{kd-1}{d-1 } \\cdot \\binom{(k-1)d-1}{d-1 } \\cdots \\binom{d-1}{d-1}.\\end{aligned}\\ ] ]    recall the following lucas theorem :    let @xmath159 and @xmath338 be non - negative integers and @xmath211 be a prime .",
    "let @xmath339 and @xmath340 , @xmath341 , be the base-@xmath211 expansions of @xmath159 and @xmath338 respectively , then @xmath342    in fact , what we need is the a simple corollary of lucas theorem ( known as kummer s theorem ) for the special case of @xmath343 : the largest integer @xmath344 such that @xmath345 divides @xmath346 is equal to the number of carries that occur when @xmath159 and @xmath347 are added in the binary .    since @xmath19 is a power of @xmath79 , the binary representation of @xmath21 is @xmath348 and the binary representation of @xmath349 is @xmath350 , for every @xmath351 .",
    "therefore no carry occurs when adding @xmath352 to @xmath21 and thus , by kummer s theorem , @xmath353 for all @xmath351 .",
    "it follows that @xmath335 ) \\equiv 1 \\pmod{2}$ ] .",
    "finally note that the granularity of the @xmath354 term in eq .",
    "satisfies @xmath355)}{2^{n'}}\\right ) \\leq n'-j < n'-k,\\ ] ] for all @xmath356 , therefore the first term is the unique term in the sum which has the highest granularity @xmath357 . hence its granularity is also the granularity of the sum in eq .  .",
    "this completes the proof of lemma  [ lem : complete_symmetric_weight1 ] .",
    "now we need the following simple observations , which are simple consequences of lemma  [ lem : main ] .",
    "[ fact : max_gran_w ] let @xmath358 be a degree-@xmath19 polynomial . then for any @xmath359 $ ]",
    ", the granularity of the weight function of @xmath327 at @xmath15 @xmath360 is at most @xmath361 .",
    "this follows directly from eq .  :",
    "since every subset in @xmath302 is of size at most @xmath19 , the minimum number of sets to cover @xmath15 is @xmath362 .    as a simple corollary of fact  [ fact : max_gran_w ] ,",
    "we have    [ cor : complete_symmetric_weight2 ] let @xmath358 be a degree @xmath19 polynomial .",
    "then for any @xmath359 $ ] , @xmath363 , and equality is only possible for @xmath364 $ ] .    in other words ,",
    "if the granularity of @xmath365)$ ] is indeed equal to @xmath366 , then that is the unique highest granularity among all weight values .",
    "now applying proposition [ prop : sparsity_granularity ] gives @xmath367 . to get the stronger lower bound @xmath368",
    "as claimed , let us combine lemma  [ lem : complete_symmetric_weight1 ] , corollary  [ cor : complete_symmetric_weight2 ] and eq .   in lemma  [ lem : main ] , and observe that not only @xmath369)$ ] has the unique highest granularity among all weights @xmath370}$ ] , but also it is included in the fourier coefficient of @xmath371 for every @xmath372 $ ] .",
    "we therefore see that for all @xmath372 $ ] , @xmath373 ; consequently @xmath374 .",
    "it follows that @xmath375 completing the proof of theorem  [ thm : symmetric_sparsity ] .",
    "in the previous two sections , we see cases that when all @xmath74 monomials of the highest degree appear , then the function has large fourier sparsity , no matter what other lower - degree monomials exist or not . in this section , we will consider the other end of the spectrum when there are only a small number of the maxonomials , and show that the same phenomena can occur in this case as well .",
    "the first example is the class of functions with disjoint maxonomials .",
    "suppose that @xmath38 has @xmath376 where @xmath377 .",
    "if there are exactly @xmath378 monomials of degree @xmath19 , and their supports are pairwise disjoint , then @xmath379 , regardless of the lower degree monomials .",
    "we apply lemma  [ lem : main ] to @xmath14 and note that the smallest number of sets needed to cover @xmath98 $ ] is @xmath378 , achieved by the maxonomials .",
    "thus the fourier coefficient @xmath380)$ ] equals @xmath381 plus some fractions with denominator @xmath382 for some @xmath383 .",
    "therefore @xmath384 ) ) = n - n / d$ ] . now using a similar argument as the last part of the proof for theorem [ thm : symmetric_sparsity ]",
    ", we see that all fourier coefficients of @xmath129 are non - zero .",
    "thus @xmath385    the second example extends the first class by allowing `` regular '' overlaps between maxonomials .",
    "assume that @xmath376 is an odd prime power , and @xmath386 .",
    "divide @xmath98 $ ] into @xmath387 piles of equal size , with each pile identified with a @xmath388 grid .",
    "all maxonomials are linear functions in a pile .",
    "more precisely , for the first pile @xmath389\\times [ d]$ ] , for each pair @xmath390 , define univariate polynomial @xmath391 $ ] by @xmath392 . now define sets @xmath393 the first pile thus has @xmath394 sets inside .",
    "similarly define @xmath394 sets for each other pile .",
    "these sets are supports of the maxomonials .",
    "note that there are @xmath395 maxonomials , a number much smaller than the possible number of lower degree monomials , which is @xmath396 .",
    "yet the next theorem says that the this small number of maxonomials determines a large fourier sparsity , regardless of how the vast majority of other ( lower - degree ) terms behave .    for any function @xmath38 with the maxonomials defined as above , @xmath379 , regardless of the lower degree monomials .",
    "clearly the set @xmath98 $ ] can be partitioned using supports of @xmath378 maxonomials . we will show that the number of such partitions is @xmath397 , which is an odd number given that @xmath19 is odd .",
    "since the piles are disjoint and all maxonomials are defined within each pile , it suffices to show that there are @xmath19 ways of partitioning each pile into maxonomials .",
    "we consider the first pile and the same argument applies to others .",
    "note that for each fixed @xmath398 , if we vary @xmath399 over @xmath400 , then we get @xmath19 maxonomials that are pairwise disjoint . since there are @xmath19 different choices of @xmath398 , there are at least these @xmath19 ways to partition the pile into @xmath19 maxonomials .",
    "we next show that there are actually no other partition of the pile using @xmath19 maxonomials .",
    "indeed , assume that a partition uses @xmath19 maxonomials and not all these maxonomials have the same @xmath398 , then there are two maxonomials corresponding to @xmath401 and @xmath402 and @xmath403 . but now these two `` lines '' intersect at exactly one point @xmath404 , where the existence of @xmath405 uses the assumption that @xmath403 .",
    "note the trivial fact that the union of @xmath19 maxonomials of degree @xmath19 is at most @xmath394 , and it is @xmath394 only if they are pairwise disjoint .",
    "so the existence of intersecting maxonomials in the selected @xmath19 maxonomials make them impossible to cover the @xmath394 points in the pile .",
    "this shows that the number of partitions of one pile using @xmath19 maxonomials is exactly @xmath19 , and thus the number of covers of @xmath98 $ ] using @xmath387 maxonomials is @xmath397 .",
    "now apply a similar argument as the last part of the proof for theorem [ thm : symmetric_sparsity ] , we see that @xmath406",
    ".    it would be nice to also pin down the linear rank of the functions with the maxonomials defined as above .",
    "what we are able to say at this moment is an upper bound only .",
    "@xmath407 indeed , for each pile , we can pick the first column of variables and set them all to 0 .",
    "this makes all maxonomials vanish , and thus decreases the degree by at least 1 .",
    "note that there is a gap of factor @xmath79 in characterizing the logarithm of fourier sparsity of a boolean function by means of its granularity ( cf .",
    "proposition  [ prop : sparsity_granularity ] ) .",
    "note that both lower and upper bounds in proposition  [ prop : sparsity_granularity ] are tight , but one is attained by the and function ( a degree-@xmath32 polynomial ) and the other by any bent function , e.g. the inner product function ( a degree-@xmath79 polynomial ) .",
    "it thus natural to conjecture that , for any low - degree polynomial @xmath59 , although @xmath35 can be as large as @xmath90 , the granularity of @xmath59 is always bounded away from @xmath32 .",
    "we now apply our technique developed in section  [ sec : fourier ] to prove the following upper bound for the granularity of low - degree polynomials .",
    "[ thm : granularity_degree ] for any boolean function @xmath408 , if @xmath46 is the @xmath17-degree of @xmath14 , then @xmath409 , and consequently , @xmath91 .",
    "suppose @xmath410 achieves @xmath411 , i.e. , @xmath412 for some odd integer @xmath413 .",
    "without loss of generality , we may assume that @xmath414 . actually , if @xmath415 is the single fourier coefficient that achieves @xmath411 , then the sum of the squares of all fourier coefficients of @xmath161 would be a rational number with granularity @xmath416 instead of @xmath55 , contradicting parseval s identity .",
    "now we apply an invertible linear map @xmath175 such that @xmath417 $ ] .",
    "denote @xmath418 by @xmath327 .",
    "by fact  [ fact : invertible1 ] , @xmath327 is also a polynomial of degree @xmath19 .",
    "moreover , by fact  [ fact : invertible2 ] , we have that @xmath419 ) = \\widehat{f^{\\pm}}(t)$ ] .",
    "now suppose @xmath420 , where @xmath421 for every @xmath422 .",
    "applying lemma  [ lem : main ] and notice that , since @xmath421 , the minimum number @xmath85 such that there exists a collection of @xmath85 subsets from @xmath423}$ ] that cover @xmath98 $ ] is @xmath424 .",
    "therefore , by eq .  , @xmath425 ) = ( -1)^{n } w_g([n ] ) = ( -1){^n } \\sum_{j = k}^{m}\\frac{(-2)^{j } n_{j}([n])}{2^n}.\\ ] ] note that the granularity of the @xmath426 term in the above summation is at most @xmath427 ( we only have inequality here as @xmath428)$ ] may be an even number ) , and the granularity of a sum of rational numbers is at most the maximum granularity in the summands : @xmath429 where @xmath430 for @xmath431 , we therefore have @xmath432)\\right ) \\leq n - k = n-\\lceil \\frac{n}{d } \\rceil$ ] .",
    "this finally gives @xmath433)\\right )   \\leq n - \\lceil \\frac{n}{d } \\rceil.\\ ] ] the upper bound of the granularity of @xmath14 follows from the easy fact that @xmath434 .",
    "we are indebted to the anonymous reviewers for their detailed helpful comments .",
    "anil ada , omar fawzi , and hamed hatami .",
    "spectral norm of symmetric functions . in _ proceedings of the 15th international workshop on approximation , randomization , and combinatorial optimization _ ,",
    "pages 338349 , 2012 .              ming  lam leung , yang li , and shengyu zhang .",
    "tight bounds on the communication complexity of symmetric xor functions in one - way and smp models . in _ proceedings of the 8th annual conference on theory and applications of models of computation _ , pages 403408 , 2011 .",
    "hing  yin tsang , chung  hoi wong , ning xie , and shengyu zhang .",
    "fourier sparsity , spectral norm , and the log - rank conjecture . in _ proceedings of the 54th annual ieee symposium on foundations of computer science _ , pages 658667 , 2013 ."
  ],
  "abstract_text": [
    "<S> we study a conjecture called `` linear rank conjecture '' recently raised in ( tsang _ et al . </S>",
    "<S> _ , focs13 ) , which asserts that if many linear constraints are required to lower the degree of a gf(2 ) polynomial , then the fourier sparsity ( i.e. number of non - zero fourier coefficients ) of the polynomial must be large . </S>",
    "<S> we notice that the conjecture implies a surprising phenomenon that if the highest degree monomials of a gf(2 ) polynomial satisfy a certain condition , then the fourier sparsity of the polynomial is large regardless of the monomials of lower degrees  whose number is generally much larger than that of the highest degree monomials . </S>",
    "<S> we develop a new technique for proving lower bound on the fourier sparsity of gf(2 ) polynomials , and apply it to certain special classes of polynomials to showcase the above phenomenon . </S>"
  ]
}
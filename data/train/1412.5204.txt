{
  "article_text": [
    "distinguishing a randomly chosen permutation from a random function is a combinatorial problem which is fundamental in cryptology .",
    "a few examples where this problem plays an important role are the security analysis of block ciphers , hash and mac schemes .",
    "one formulation of this problem is the following .",
    "an oracle chooses a function @xmath10 , which is either a randomly ( uniformly ) chosen permutation of @xmath11 , or a randomly ( uniformly ) chosen function from @xmath11 to @xmath11 .",
    "an adversary selects a `` querying and guessing '' algorithm .",
    "he first uses it to submit @xmath12 ( adaptive ) queries to the oracle , and the oracle responds with @xmath13 to the query @xmath14 . after collecting the @xmath12 responses",
    ", the adversary uses his algorithm to guess whether or not @xmath15 is a permutation .",
    "the quality of such an algorithm ( in the cryptographic context ) is the ability to distinguish between the two cases ( rather than successfully guessing which one it is ) .",
    "it is measured by the difference between the probability that the algorithm outputs a certain answer , given that the oracle chose a permutation , and the probability that the algorithm outputs the same answer , given that the oracle chose a function .",
    "this difference is called the `` advantage '' of the algorithm .",
    "we are interested in estimating _ adv _ , which is the maximal advantage of the adversary , over all possible algorithms , as a function of a budget of @xmath12 queries .",
    "the well known answer to this problem is based on the simple `` collision test '' and the birthday problem : @xmath16 since for every @xmath17 @xmath18 we get , for @xmath19 , that @xmath20 this result implies that the number of queries required to distinguish a random permutation from a random function , with success probability significantly larger than , say , @xmath21 , is @xmath22 .",
    "we now consider the following generalization of this problem : + * problem 1 .",
    "[ distinguishing a truncated permutation ] * let @xmath23 be integers .",
    "an oracle chooses @xmath24 . if @xmath25 , it picks a permutation @xmath26 of @xmath11 uniformly at random , and if @xmath27 , it picks a function @xmath28 uniformly at random .",
    "an adversary is allowed to submit queries @xmath14 to the oracle .",
    "the oracle computes @xmath29 ( if @xmath30 ) or @xmath31 ( if @xmath32 ) , truncates ( with no loss of generality ) the last @xmath4 bits from @xmath33 , and replies with the remaining @xmath34 bits .",
    "the adversary has a budget of @xmath12 ( adaptive ) queries , and after exhausting this budget , is expected to guess @xmath35 .",
    "_ how many queries does the adversary need in order to gain non - negligible advantage ? _ + specifically , we seek @xmath36 as a function of @xmath4 and @xmath1 .",
    "we start with remarking that the classical `` birthday '' bound @xmath37 is obviously valid as a bound for the adversary s advantage in problem 1 . in fact , any algorithm that the adversary can use with the truncated replies of @xmath34 bits from @xmath3 can also be used by the adversary who sees the full @xmath3 ( he can ignore @xmath4 bits and apply the same algorithm ) .",
    "of course , we are looking for a better upper bound that would reflect the fact that the adversary receives less information when @xmath3 is truncated .",
    "we have the following bounds for problem 1 .",
    "problem 1 was studied by hall et al .",
    "@xcite in 1998 .",
    "the authors showed an algorithm that gives a non - negligible distinguishing advantage using @xmath38 queries ( for any @xmath4 ) .",
    "they also proved the following upper bound : @xmath39    for @xmath40 the bound in ( [ hall_result ] ) implies that @xmath41 .",
    "however , for larger values of @xmath4 , the bound on @xmath42that is offered by ( [ hall_result ] ) deteriorates , and becomes ( already for @xmath43)worse than the trivial `` birthday '' bound @xmath37 .",
    "hall et al .",
    "@xcite conjectured that @xmath9 queries are needed in order to get a non - negligible advantage , in the general case .",
    "theorem 4.2 in @xcite states that @xmath44 whenever @xmath45 .",
    "this implies that @xmath46 for @xmath47 .",
    "the method used to show can be pushed to prove the conjecture in @xcite for ( almost ) every @xmath4 . in particular",
    ", it can be shown that if @xmath48 then @xmath49{2}\\left(\\frac{q}{2^{\\frac{n+m}{2}}}\\right)^{\\frac{2}{3}}+\\frac{2\\sqrt{2}}{\\sqrt{3}}\\left(\\frac{q}{2^{\\frac{n+m}{2}}}\\right)^{\\frac{3}{2}}+\\left(\\frac{q}{2^{\\frac{n+m}{2}}}\\right)^2,\\ ] ] and if @xmath50 then @xmath51    this implies that @xmath41 for any @xmath52 .",
    "surprisingly , it turns out that problem 1 was solved @xmath53 years before hall et al .",
    "@xcite , in a different context .",
    "the bound @xmath54 which is valid for all @xmath55 , follows directly from a result of stam ( * ? ? ?",
    "* theorem 2.3 ) .",
    "( note that if @xmath56 then ( [ eq : stam ] ) can be simplified to @xmath57 ) .",
    "this implies that @xmath41 for any @xmath58 , confirming the conjecture of @xcite in all generality ( @xmath53 years before the conjecture was raised ) .    the bound is tighter than all the bounds mentioned above , with one exception : the elementary upper bound is better than for @xmath59",
    "it is interesting to see how different approaches yield different bounds for problem 1 . to this end , we first define some notations .    for fixed",
    "@xmath60 and @xmath19 denote @xmath61 .",
    "we view @xmath62 as the set of all possible sequences of replies that can be given by the oracle ( to the adversary s @xmath12 queries ) .    for any @xmath63 ,",
    "@xmath64 let @xmath65    for @xmath66 and @xmath67 , let @xmath68 be the set of sequences of replies that are the same as @xmath69 up to the @xmath70-th query .",
    "for @xmath64 let @xmath71 and @xmath72 be the probabilities that @xmath69 is the actual sequence of replies that the oracle gives to the adversary s @xmath12 queries , in the case the oracle chose a random permutation or a random function , respectively .    for @xmath67 , let @xmath73    note that @xmath74      the proof of uses the general bound @xmath75 that holds for any @xmath76 .",
    "it is applied to the set @xmath77 + the expression @xmath78 is bounded by direct computations .",
    "the expression @xmath79 is bounded by combining the union bound and the chebyshev inequality .",
    "finally , @xmath80 is chosen to minimize the resulting bounds .      to get ( for @xmath48 )",
    ", we can apply the slightly better ( than ) bound @xmath81 to the set @xmath82 here , @xmath83 are chosen to minimize the bound .",
    "again , @xmath78 is bounded by direct ( elaborate ) computation , and @xmath79 is bounded by combining ( via the union bound ) the chebyshev inequality and the markov inequality .",
    "the bound ( for @xmath84 ) follows similarly by examining the set @xmath85 for @xmath86 and @xmath87 which are chosen to optimize the bound .",
    "bellare and impagliazzo also used , for the set @xmath88 of all @xmath64 satisfying ( for suitable @xmath89 and @xmath90 ) :    1 .   for any @xmath67 , @xmath91 2 .",
    "for any @xmath67 , @xmath92 3 .",
    "@xmath93    the expression @xmath79 is bounded by combining the azuma inequality and the observation that for any @xmath67 , @xmath94      stam s approach observes that by pinsker s inequality ( 1960 ) @xcite we have @xmath95    he then uses the decomposition @xmath96 direct ( exact ) computations , and the concavity of the @xmath97 function .",
    "in the case @xmath98 ( i.e. , the oracle returns only @xmath99 bit ) , gives @xmath100 in this section we show that this bound is essentially sharp .    with no loss of generality we may assume @xmath12 is even and @xmath101 .",
    "we define the following adversarial algorithm .    * * algorithm 1 .",
    "* + collect the answers ( which are , in this case , just bits ) of @xmath12 arbitrary queries .",
    "+ compute the difference @xmath102 between the number of @xmath103 s and @xmath99 s .",
    "+ if @xmath104 , guess that the oracle was using a truncated random permutation . otherwise , guess that the oracle was using a random function .",
    "the advantage of algorithm 1 is @xmath105 we show that @xmath106 for any @xmath107 such that @xmath108 . from this",
    ", we can conclude that @xmath109    first , note that for @xmath110 .",
    "@xmath111 since for any @xmath112 @xmath113 we get that for any @xmath114 @xmath115    now , using and we get @xmath116 the proof of and for @xmath117 is similar .",
    "by combining , , and the trivial bound @xmath99 , we can conclude that the best known bound for problem 1 is      by the lower bound in , we know that the bound in is essentially sharp for @xmath119 . by our proof in section [ sec : stam_sharp ] , we know that the bound in is essentially sharp @xmath98 .",
    "the natural question that remains open is whether the bound is essentially sharp for all @xmath55 .",
    "m. bellare , r. impagliazzo , `` a tool for obtaining tighter security analyses of pseudorandom function based constructions , with applications to prp to prf conversion '' , eprint 1999/024 , http://eprint.iacr.org/1999/024 ( 1999 ) ."
  ],
  "abstract_text": [
    "<S> an oracle chooses a function @xmath0 from the set of @xmath1 bits strings to itself , which is either a randomly chosen permutation or a randomly chosen function . </S>",
    "<S> when queried by an @xmath1-bit string @xmath2 , the oracle computes @xmath3 , truncates the @xmath4 last bits , and returns only the first @xmath5 bits of @xmath3 . </S>",
    "<S> how many queries does a querying adversary need to submit in order to distinguish the truncated permutation from the ( truncated ) function ? + in 1998 , hall et al . </S>",
    "<S> @xcite showed an algorithm for determining ( with high probability ) whether or not @xmath0 is a permutation , using @xmath6 queries . </S>",
    "<S> they also showed that if @xmath7 , a smaller number of queries will not suffice . </S>",
    "<S> for @xmath8 , their method gives a weaker bound . in this note , we first show how a modification of the approximation method used by hall et al . </S>",
    "<S> can solve the problem completely . </S>",
    "<S> it extends the result to practically any @xmath4 , showing that @xmath9 queries are needed to get a non - negligible distinguishing advantage . </S>",
    "<S> however , more surprisingly , a better bound for the distinguishing advantage can be obtained from a result of stam @xcite published , in a different context , already in 1978 . </S>",
    "<S> we also show that , at least in some cases , the bound in @xcite is tight .    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ * keywords : * pseudo random permutations , pseudo random functions , advantage . _ </S>",
    "<S> _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ </S>"
  ]
}
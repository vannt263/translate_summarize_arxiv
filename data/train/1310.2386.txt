{
  "article_text": [
    "in the uncapacitated facility location ( ufl ) problem the goal is to open facilities in a subset of given locations and connect each client to an open facility so as to minimize the sum of opening costs and connection costs . in the penalty avoiding ( prize collecting ) variant of the problem , a fixed penalty can be paid instead of connecting a client .    in the @xmath0-level uncapacitated facility location problem with penalties ( @xmath0-level uflwp ) , we are given a set @xmath1 of clients and a set @xmath2 of facilities ( locations to potentially open a facility ) in a metric space .",
    "facilities are of @xmath0 different types ( levels ) , e.g. , for @xmath3 one may think of these facilities as shops , warehouses and factories .",
    "each set @xmath4 contains all facilities on level @xmath5 and the sets @xmath4 are pairwise disjoint . each client",
    "@xmath6 can either be connected to precisely one facility at each of @xmath0 levels ( via a path ) , or be rejected in which case the penalty @xmath7 must be paid ( @xmath7 can be considered as the loss of profit ) . to be more precise , for a client @xmath6 to be connected , it must be connected with a path @xmath8 , where @xmath9 is an open facility on level @xmath5 .",
    "the cost of connecting points @xmath10 , is the distance between @xmath11 and @xmath6 , denoted by @xmath12 .",
    "the cost of opening facility @xmath11 is @xmath13 ( @xmath14 ) .",
    "the goal is to minimize the sum of the total cost of opening facilities ( at all levels ) , the total connection cost and the total penalty cost . in the uniform version of the problem",
    "all penalties are the same , i.e. , for any two clients @xmath15 we have @xmath16 .",
    "if @xmath17 are big enough , @xmath0-level uflwp is the @xmath0-level ufl problem , for which krishnaswamy and sviridenko @xcite showed @xmath18-hardness of approximation for general @xmath0 and @xmath19-hardness for @xmath20 .",
    "actually , even for @xmath21 guha and khuller @xcite showed that the approximation ratio is at least @xmath22 , unless @xmath23 . the current best known approximation ratio for this simplest case @xmath21 is @xmath24 by li @xcite .",
    "for @xmath25-level ufl problem shmoys , tardos , and aardal @xcite gave the first constant factor approximation algorithm by extending the algorithm for @xmath26-level and obtaining an approximation ratio @xmath27 .",
    "subsequently , aardal , chudak , and shmoys @xcite used randomized rounding to get the first algorithm for general @xmath0 , which had approximation ratio of @xmath28 .",
    "ageev , ye and zhang @xcite gave a combinatorial @xmath29-approximation algorithm for general @xmath0 by reducing the @xmath0-level directly into @xmath26-level problem .",
    "by recursive reduction , i.e. , reducing @xmath0-level to @xmath30 level , they obtained an improved @xmath31-approximation for @xmath20 and @xmath32 for @xmath3 .",
    "later , this was improved by zhang @xcite , who combined the maximization version of @xmath26-level ufl problem and dual - fitting to get a @xmath33-approximation algorithm for @xmath20 , and a @xmath34-approximation for @xmath3 .",
    "byrka and aardal @xcite improved the ratio for @xmath3 to @xmath35 .",
    "for @xmath36 the ratio was recently improved by byrka and rybicki @xcite to @xmath37 for @xmath3 , @xmath38 for @xmath39 , and the ratio converges to 3 when @xmath40 .",
    "ufl with penalties was first introduced by charikar et al .",
    "@xcite , who gave a @xmath28-approximation algorithm based on a primal - dual method .",
    "later , jain et al .",
    "@xcite indicated that their greedy algorithm for ufl could be adapted to uflwp with the approximation ratio @xmath25 .",
    "xu and xu @xcite proposed a @xmath41-approximation algorithm based on lp - rounding and a combinatorial @xmath42-approximation algorithm by combining local search with primal - dual .",
    "later , geunes et al . @xcite presented an algorithmic framework which can extend any lp - based @xmath43-approximation algorithm for ufl to get an @xmath44-approximation algorithm for ufl with penalties .",
    "as a result , they gave a @xmath45-approximation algorithm for this problem .",
    "recently , li et al .",
    "@xcite extended the lp - rounding algorithm by byrka and aardal @xcite and the analysis by li @xcite to uflwp to give the currently best @xmath46-approximation algorithm .    for multi - level uflwp , asadi et al .",
    "@xcite presented an lp - rounding based @xmath47-approximation algorithm by converting the lp - based algorithm for uflwp by xu and xu @xcite to @xmath0-level . to the best of our knowledge ,",
    "this is the only algorithm for multi - level uflwp in the literature .",
    "we first show that algorithms whose performance can be analysed with a linear function of certain instance parameters , like the chudak and shmoys algorithm @xcite for ufl , can be easily combined and analysed with a natural factor revealing lp .",
    "this simplifies the argument of shi li  @xcite for his @xmath24-approximation algorithm for ufl _ since an explicit distribution for the parameters obtained by a linear program is not necessary in our factor revealing lp_.    with this tool one can easily randomize the scaling factor in lp - rounding algorithms for various variants of the ufl problem .",
    "_ we demonstrate this by randomizing the algorithm for @xmath0-level uflwp . for @xmath0-level ufl",
    "we can get the same approximation ratios as for @xmath0-level uflwp by setting @xmath48 .",
    "_    note that the previously best ratio is 4 for @xmath0-level uflwp ( @xmath49 ) @xcite and @xmath46 for @xmath21 @xcite .",
    "the following table shows how much we improve the approximation ratios of our algorithm for @xmath50 by involving randomization of the scaling factor .",
    "_ irrespective of the way in which we choose @xmath51 , deterministically or randomly , approximation ratio converges to three . _",
    ".comparison of ratios . [ cols=\"^,^,^,^,^,^,^,^,^,^,^\",options=\"header \" , ]     note that the reduction above does not work for the non - uniform case , because then the distance from client @xmath6 to the penalty - facility of client @xmath52 could be smaller than  @xmath7 .",
    "nevertheless we will show that lp - rounding algorithms in this paper can be easily extended to the non - uniform penalty variant .",
    "_ for non - uniform case , _ our algorithm is based on rounding a solution to the extended lp - relaxation of the problem .",
    "this extended lp may either be seen as the standard lp on a modified graph ( see appendix  [ sec : modiffication ] ) as described in  @xcite , or originate from the @xmath0-th level of the sherali adams hierarchy , or explicitly be written in terms of paths on the original instance .",
    "here we use the explicit construction . note that in the optimal solution to @xmath0-level uflwp each facility",
    "is connected to at most one facility on the higher level .",
    "we will impose this structure on the fractional solution by creating multiple copies of the original facility , one for each path across the higher levels of facilities .    to describe the linear program we have to give a few definitions .",
    "let @xmath53 be the set of paths which start in a client and end in a facility on level @xmath0 .",
    "let @xmath54 be the set of paths which start on level @xmath5 and end on the highest level @xmath0 , i.e. , in a root of some tree .",
    "by @xmath55 we denote the set of all paths , i.e. , @xmath56 .",
    "the cost of the path denoted by @xmath57 depends on the kind of path .",
    "if @xmath58 , then @xmath59 . if @xmath60 , then @xmath61 .",
    "@xmath62    the natural interpretation of the above lp is as follows .",
    "inequality ( [ lp : out_one ] ) states that each client is assigned to at least one path or is rejected",
    ". inequality ( [ lp : thomas_order ] ) encodes that opening a lower level facility implies opening its unique higher level facility . the most complicated inequality ( [ lp : f_open_enough ] ) for a client @xmath63 and a facility @xmath64 , imposes that the opening of @xmath9 must be at least the total usage of it by the client @xmath6 .",
    "let @xmath65 be an optimal solution to the above lp .",
    "the approximation algorithm @xmath66 presented below is parameterized by @xmath67 .    formulate and solve the extended lp ( 12)-(17 ) to get an optimal solution @xmath65 ; scale up facility opening and client rejecting variables by @xmath67 , then recompute values of @xmath68 for @xmath69 to obtain a minimum cost solution @xmath70 + divide clients into two groups @xmath71 and @xmath72 cluster clients in @xmath73 ; round facility opening ( tree by tree ) ; connect each client @xmath6 with a closest open connection path unless rejecting it is a cheaper option .",
    "our final algorithm is as follows : run algorithm @xmath74 for each @xmath75 and select a solution with the smallest cost .",
    "clustering is based on rules described in @xcite which is generalized in @xcite for @xmath0-level instances . rounding on a tree",
    "was also used in  @xcite .",
    "nevertheless , for completeness we give a brief description of step 4 and 5 in the following subsections . from now on we are considering only scaled up instance @xmath76 .      for any client @xmath77 ,",
    "let @xmath78 be the set of top - level facilities fractionally serving @xmath6 in @xmath76 . as discussed in section  [ sec : one_level ] , wlog the fractional connectivity of @xmath6 to a set of facilities may be assumed to be the fractional opening of these facilities .",
    "sort facilities @xmath79 from @xmath78 by non - decreasing distance from client @xmath77 , and select the smallest subset of @xmath78 with volume one - this is the set of close facilities @xmath80 , the rest of facilities from @xmath78 are distant facilities @xmath81 . by @xmath82 and @xmath83",
    "we denote the average distances from @xmath6 to close , distant and all facilities in set @xmath78 respectively .",
    "moreover by @xmath84 we denote the maximal distance from @xmath6 to a close facility .",
    "formal definitions are as follows : @xmath85    using the similar arguments as in @xcite we can define @xmath86 and express @xmath87 and @xmath88 using @xmath89 .",
    "@xmath90      two clients @xmath91 are called neighbors if @xmath92 .",
    "select unclustered client @xmath77 that minimizes @xmath93 , form a new cluster containing @xmath6 and all its unclustered neighbors from @xmath94 , call @xmath6 the center of the new cluster ;    the above clustering procedure ( just like in @xcite ) partitions all clients into groups called clusters .",
    "such partition has two important properties .",
    "first : there are no two neighbors from @xmath94 which are ( both ) centers of clusters .",
    "second : distance from any client in cluster to his cluster center is not too big .",
    "consider an arbitrary cluster center @xmath6 .",
    "since lp solutions have a form of a forest , we only need to focus on rounding single tree serving @xmath6 .",
    "for clarity , within this rounding procedure we will refer to facilities as vertices ( of a tree ) , and use @xmath95 to denote the fractional opening of vertex ( facility ) @xmath96 and @xmath97 to denote the extent in which the cluster center @xmath6 uses @xmath96 in @xmath76 , i.e , @xmath98 .",
    "note that @xmath99 for each @xmath96 and @xmath100 if @xmath96 is not the root of a tree .    the main idea is to open exactly one path for cluster center @xmath6 but keep the probability of opening of each vertex @xmath96 equal to @xmath95 in the randomized procedure .",
    "in @xcite we gave a token - passing - based adaptation of the procedure by garg konjevod and ravi  @xcite , that stores the output in @xmath101 and @xmath102 , and has exactly the desired properties .",
    "@xmath103 = x_v$ ] and @xmath104 = y_v$ ] for all @xmath105 .",
    "it is essential that the probability of opening at least one path in a set @xmath106 can be lower bounded by a certain function @xmath107 , where @xmath108 is the total flow from client @xmath6 to all paths in @xmath109 and @xmath0 is the number of levels in the considered instance .",
    "it can be shown that @xmath110 and the following lemma ( from @xcite ) hold . for more details see appendix [ sec : functions of probability ] and @xcite .",
    "inequality @xmath111 implies @xmath112 .",
    "_ the high level idea is that we can consider the instance of @xmath0-level uflwp as a corresponding instance of @xmath0-level ufl by showing that the worst case approximation ratio is for clients in set @xmath94 and we can treat the penalty of client @xmath113 as a  penalty - facility \" in our analysis .",
    "that is , we can overcome penalties by solving an equivalent @xmath0-level ufl without penalties . _",
    "it is standard in uncapacitated location problems to split facilities to obtain a so called _ complete _ solution , where no facility is used less than it is open by a client ( see @xcite for details ) . for our algorithm , to keep the forest structure of the fractional solution , we must slice the whole trees instead of splitting individual facilities to obtain the following .",
    "[ completeness ] each solution of our linear program for @xmath0-level uflwp can be transformed to an equivalent complete solution .",
    "we should give two copies @xmath114 and @xmath115 of tree @xmath116 ( instead of it ) if there is some client @xmath63 with a positive flow @xmath117 to one of the paths @xmath118 in the tree @xmath116 which is smaller than the path opening @xmath119 .",
    "let the opening of such problematic path be equal to flow @xmath117 in tree @xmath114 . in tree @xmath120 it has value equal to the opening in @xmath116 decreased by @xmath117 .",
    "in general each facility in tree @xmath114",
    "( @xmath120 ) has the same opening as in @xmath116 times @xmath121 ( @xmath122 ) .",
    "note that the value of flow from client @xmath6 ( and other clients which are connected with both trees now ) should be the same as before adding trees @xmath114 and @xmath120 instead of @xmath116 .",
    "all clients  recompute \" their connection values .",
    "we sort all paths in increasing connection cost for client @xmath6 and connect with them ( in that order ) as strong as it is possible until client @xmath6 has flow equal to one or it is cheaper to pay penalty instead of connecting with any open path .",
    "the important fact is that the expected connection and penalty cost of each client remain the same after above operations .    in the process of coping and replacing trees we add at most @xmath123 new trees . because each client has at most one `` problematic '' ( not saturating ) path .    for the clarity of the following analysis we will use a  one - level \" description of the instance and fractional solution despite its @xmath0-level structure . because the number of levels will have influence only on the probabilities of opening particular paths in our algorithm .",
    "consider set @xmath124 of paths which start in client @xmath6 and end in the root of a single tree @xmath116 . instead of thinking about all paths from set @xmath124",
    "separately we can now treat them as one path @xmath125 whose fractional opening is @xmath126 and ( expected ) cost is @xmath127 . observe that our distance function @xmath128 satisfy the triangle inequality .",
    "from now on we will think only about clients and facilities ( on level @xmath0 ) and ( unique ) paths between them .",
    "accordingly , we will now encode the fractional solution as @xmath129 , to denote the fractional connectivity , opening and penalty components .",
    "[ ineq_proof ] @xmath130 .",
    "@xmath131 @xmath132 @xmath133 + the second inequality holds because @xmath134 .",
    "moreover to justify the last equality we should observe that @xmath135 .",
    "[ worst_case ] the worst case approximation ratio is for clients from set @xmath94 .",
    "we have two types of clients divided for two sets @xmath94 and @xmath136 .",
    "lets sort facilities in nondecreasing distances from client @xmath6 . in that proof",
    "@xmath137 is number of facilities which has positive flow from @xmath6 in considering ( scaled up ) fractional solution .",
    "suppose the first case @xmath138 , then we can upper bound his connection and penalty cost like that @xmath139 \\leq \\sum_{i = 1}^{l}(f_k(\\sum_{j = 1}^{i } y_j ) - f_k(\\sum_{j = 1}^{i-1 } y_j ) ) d(q , j)\\ ] ] @xmath140 @xmath141 @xmath142 inequality holds because @xmath143 in other case @xmath144 would be connected with facility in that distance instead of using penalty .    in the second case we have",
    "that @xmath145 .",
    "connection and penalty cost of client @xmath144 can be upper bounded in below way @xmath139 \\leq ( f_k(\\sum_{j = 1}^{l } y_j ) - f_k(\\sum_{j = 1}^{l-1 } y_j ) ) d(q , j ) + ( 1 - f_k(\\gamma ( 1 - g ) ) ) p_q\\ ] ] note that for each client @xmath146 the truth is @xmath147 , so from lemma [ ineq_proof ] we have that the worst case approximation ratio is for clients from set @xmath94 .",
    "[ g_0 ] for clients @xmath77 we can treat its penalty as a facility .    if @xmath6 is a cluster center , @xmath6 will have at least one ( real ) facility open in its set of close facilities .",
    "thus , its connection and penalty cost are independent of the value of @xmath148 .",
    "if @xmath6 is not a cluster center and we pretend its penalty as a facility , no other client @xmath52 will consider to use this fake facility . because @xmath52 only looks at facilities fractionally serving him , and the facilities which serve the center of the cluster containing @xmath52 .",
    "a single algorithm @xmath149 has expected facility opening cost @xmath150\\leq \\gamma \\cdot f^*$ ] and expected connection and penalty cost @xmath151 \\leq max \\{3 - 2 \\cdot f_k(\\gamma ) , \\frac{2 - f_k(\\gamma ) - f_k(1)}{1 - \\frac{1}{\\gamma}}\\ } \\cdot ( c^ * + p^*)$ ] ( see appendix [ sec : single_algorithm ] for a detailed proof ) . to obtain an improved approximation ratio we run algorithm @xmath66 for several values of @xmath51 and select the cheapest solution .",
    "the following lp gives an upper bound on the approximation ratio .",
    "@xmath152    since the number of levels has influence on connection probabilities , the values of @xmath153 need to be defined more carefully than for ufl .",
    "in particular , for @xmath154 we now have @xmath155 and @xmath156 for @xmath157 .",
    "the table [ improved_ratios ] summarizes the obtained ratios for a single algorithm ( run with the best choice of @xmath51 for particular @xmath0 ) and for a group of algorithms .",
    "( i.e. , distances to facilities ) for @xmath158 obtained from solution of the lp in section [ group_analize ] . _",
    "x - axis is volume of a considered set and y - axis represents distance to the farthest facility in that set .",
    "values of function @xmath159 are in one - to - one correspondence with values of @xmath160 in lp from section [ group_analize]._,height=215 ]     in a randomized alg .",
    "( from the dual lp ) for @xmath158 . left figure : general view ; right figure : close - up on small probabilities.,width=226 ]     in a randomized alg .",
    "( from the dual lp ) for @xmath158 .",
    "left figure : general view ; right figure : close - up on small probabilities.,width=226 ]    99 k.  aardal , f.  chudak , d.  shmoys : a 3-approximation algorithm for the k - level uncapacitated facility location problem .",
    "inf . process .",
    "72(5 - 6 ) : 161 - 167 ( 1999 ) a.  ageev , y.  ye , j.  zhang : improved combinatorial approximation algorithms for the k - level facility location problem .",
    "icalp 2003 : 145 - 156 m. asadi , a. niknafs , m. ghodsi : an approximation algorithm for the k - level uncapacitated facility location problem with penalties .",
    "csicc 2008 , ccis 6 : 41 - 49 . j.  byrka , k.  aardal : an optimal bifactor approximation algorithm for the metric uncapacitated facility location problem .",
    "siam j. comput .",
    "39(6 ) : 2212 - 2231 ( 2010 ) j.  byrka , m.  ghodsi , a.  srinivasan : lp - rounding algorithms for facility - location problems .",
    "corr abs/1007.3611 ( 2010 ) j.  byrka , b.  rybicki : improved lp - rounding approximation algorithm for k - level uncapacitated facility location .",
    "icalp ( 1 ) 2012 : 157 - 169 m.  charikar , s.  khuller , d.  mount , g.  narasimhan : algorithms for facility location problems with outliers .",
    "soda 2001 : 642 - 651 f.  chudak , d.  shmoys : improved approximation algorithms for the uncapacitated facility location problem .",
    "siam j. comput .",
    "33(1 ) : 1 - 25 ( 2003 ) n.  garg , g.  konjevod , r.  ravi : a polylogarithmic approximation algorithm for the group steiner tree problem . soda 1998 : 253259 j.  geunes , r.  levi , h.  romeijn , d.  shmoys : approximation algorithms for supply chain planning and logistics problems with market choice . math . program .",
    "130(1 ) : 85 - 106 ( 2011 ) s.  guha , s.  khuller : greedy strikes back : improved facility location algorithms .",
    "j. algorithms 31(1 ) : 228 - 248 ( 1999 ) k.  jain , m.  mahdian , e.  markakis , a.  saberi , v.  vazirani : greedy facility location algorithms analyzed using dual fitting with factor - revealing lp .",
    "j. acm 50(6 ) : 795 - 824 ( 2003 ) r.  krishnaswamy , m.  sviridenko : inapproximability of the multi - level uncapacitated facility location problem .",
    "soda 2012 : 718 - 734 s.  li : a 1.488 approximation algorithm for the uncapacitated facility location problem .",
    "comput . 222 : 45 - 58 ( 2013 ) y. li , d. du , n. xiu , d. xu : improved approximation algorithm for the facility location problems with linear / submodular penalties .",
    "cocoon 2013 : 292 - 303 .",
    "d.  shmoys , e.  tardos , k.  aardal .",
    "approximation algorithms for facility location problems ( extended abstract ) .",
    "stoc 1997 : 265 - 274 .",
    "m.  sviridenko : an improved approximation algorithm for the metric uncapacitated facility location problem .",
    "ipco 2002 : 240 - 257 g.  xu , j.  xu : an lp rounding algorithm for approximating uncapacitated facility location problem with penalties .",
    "94(3 ) : 119 - 123 ( 2005 ) g.  xu , j.  xu : an improved approximation algorithm for uncapacitated facility location problem with penalties",
    ". j. comb .",
    "17(4 ) : 424 - 436 ( 2009 ) j.  zhang : approximating the two - level facility location problem via a quasi - greedy approach .",
    "math . program .",
    "108(1 ) : 159 - 176 ( 2006 )",
    "the idea is to construct a graph in which each facility on level @xmath5 is connected with exactly one facility on level @xmath161 .",
    "we will describe in a few words how to do it , but the best idea is to read section 2 in @xcite .",
    "let @xmath162 and @xmath163 be the set of facilities before and after modification respectively . for the highest level nothing change which means @xmath164 .",
    "for each facility @xmath165 we have @xmath166 copies each connected with a different facility in @xmath4 .",
    "the cardinality of set @xmath167 is equal to @xmath168 . in general : for each @xmath169 set @xmath4 has @xmath170 copies of each element in set @xmath171 and each copy is connected with a different element in the set @xmath172 .",
    "note that there is an optimal integral solution with the form of a forest .",
    "so we do not lose anything important for this optimal solution by modifying the graph in a way described above .",
    "lets consider set @xmath175 of paths which start in client @xmath63 and end in the root of a tree @xmath116 .",
    "we say that client @xmath6 has flow of value @xmath176 to tree @xmath116 if the total value of paths in set @xmath124 is equal to @xmath176 .",
    "byrka et al . in @xcite",
    "gives the following definition of function which is a lower bound for the probability of at least one path of a tree will be open as a result of rounding procedure on that tree .",
    "we use @xmath177 to denote @xmath178 , similar for @xmath179 .",
    "@xmath180    it is a product of the probability of opening the root node , and the ( recursively bounded ) probability that at least one of the subtrees has an open path , conditioned on the root being open .",
    "now we are ready to give a function @xmath181 to bound the probability of opening at least one path when we have flow @xmath108 from one client to more than one tree .",
    "let @xmath182 , which is one minus the biggest chance that no tree gives a route from the root to a leaf , using the previously defined @xmath183 function to express the success probability on a single tree .",
    "now we can upper bound the expected connection and penalty cost of single algorithm . as it was proved in lemma [ worst_case ]",
    "the worst case scenario is for client @xmath77 which is not a cluster center , so to upper bound the expected connection and penalty cost we can concentrate on clients from @xmath94 .",
    "moreover from lemma [ g_0 ] we can suppose that @xmath184 .",
    "the value of @xmath185 is a chance that at least one facility will be open in the set of close facilities .",
    "@xmath186 expresses the chance that at least one distant facility of the considered client is open , but all close facilities are closed .",
    "the remaining @xmath187 is the probability of connecting the considered client to the open facility by its cluster center .",
    "the cost of this connection is bounded in lemma [ cluster_close_distance ] .",
    "suppose @xmath188 is the cluster center of @xmath189 .",
    "p_c \\cdot d_{av}^{c}(j ) + p_d \\cdot d_{av}^{d}(j ) + p_s \\cdot ( \\gamma d_{av}(j ) + ( 3 - \\gamma)d_{max}(j)))\\ ] ] @xmath191 @xmath192 @xmath193 @xmath194 you can find the justification for above inequalities in @xcite . summing over all clients we get the lemma ."
  ],
  "abstract_text": [
    "<S> the state of the art in approximation algorithms for facility location problems are complicated combinations of various techniques . in particular , the currently best 1.488-approximation algorithm for the uncapacitated facility location ( ufl ) problem by shi li is presented as a result of a non - trivial randomization of a certain scaling parameter in the lp - rounding algorithm by chudak and shmoys combined with a primal - dual algorithm of jain et al . in this paper </S>",
    "<S> we first give a simple interpretation of this randomization process in terms of solving an auxiliary ( factor revealing ) lp . _ then , armed with this simple view point , we exercise the randomization on a more complicated algorithm for the @xmath0-level version of the problem with penalties in which the planner has the option to pay a penalty instead of connecting chosen clients , which results in an improved approximation algorithm . _ </S>"
  ]
}
{
  "article_text": [
    "we consider the list decoding of one - point algebraic geometry ( ag ) codes . @xcite",
    "proposed the well - known list decoding algorithm for one - point ag codes , which consists of the interpolation step and the factorization step .",
    "the interpolation step has large computational complexity and many researchers have proposed faster interpolation steps , see ( * ? ? ?",
    "* figure 1 ) .    by modifying the unique decoding algorithm @xcite for primal one - point ag codes",
    ", we propose another list decoding algorithm based on voting in grbner bases whose error correcting capability is higher than @xcite and whose computational complexity is smaller than @xcite in many cases .",
    "a decoding algorithm for primal one - point ag codes was proposed in @xcite , which was a straightforward adaptation of the original feng - rao majority voting for the dual ag codes @xcite to the primal ones .",
    "the feng - rao majority voting in @xcite for one - point primal codes was generalized to multi - point primal codes in ( * ? ? ? * section 2.5 ) .",
    "the one - point primal codes can also be decoded as multi - point dual codes with majority voting @xcite , whose faster version was proposed in @xcite for the multi - point hermitian codes . @xcite",
    "proposed another unique decoding ( not list decoding ) algorithm for primal codes based on the majority voting inside grbner bases .",
    "the module used by them @xcite is a curve theoretic generalization of one used for reed - solomon codes in @xcite that is a special case of the module used in @xcite .",
    "an interesting feature in @xcite is that it did not use differentials and residues on curves for its majority voting , while they were used in @xcite . the above studies @xcite dealt with the primal codes .",
    "we recently proved in @xcite that the error - correcting capabilities of @xcite are the same .",
    "the earlier papers @xcite suggest that central observations in @xcite were known to the dutch group , which is actually the case @xcite .",
    "@xcite , @xcite and @xcite studied the error - correcting capability of the feng - rao @xcite or the bms algorithm @xcite with majority voting beyond half the designed distance that are applicable to the dual one - point codes .",
    "there was room for improvements in the original result @xcite , namely , ( a ) they have not clarified the relation between its error - correcting capability and existing minimum distance lower bounds except for the one - point hermitian codes , ( b ) they have not analyzed the computational complexity , ( c ) they assumed that the maximum pole order used for code construction is less than the code length , and ( d ) they have not shown how to use the method with the feng - rao improved code construction @xcite .",
    "we shall ( 1 ) prove that the error - correcting capability of the original proposal is always equal to half of the bound in @xcite for the minimum distance of one - point primal codes ( proposition [ prop : ag ] ) , ( 2 ) generalize their algorithm to work with any one - point ag codes , ( 3 ) modify their algorithm to a list decoding algorithm , ( 4 ) remove the assumptions ( c ) and ( d ) above , ( 5 ) remove unnecessary computational steps from the original proposal , ( 6 ) analyze the computational complexity in terms of the number of multiplications and divisions in the finite field .",
    "the proposed algorithm is implemented on the singular computer algebra system @xcite , and we verified that the proposed algorithm can correct more errors than @xcite with manageable computational complexity .",
    "this paper is organized as follows : section [ sec2 ] introduces notations and relevant facts .",
    "section [ sec3 ] improves @xcite in various ways , and the differences to the original @xcite are summarized in section [ sec : diff ] .",
    "section [ sec4 ] shows that the proposed modification to @xcite works as claimed .",
    "section [ sec : experiment ] compares its computational complexity with the conventional methods .",
    "section [ sec6 ] concludes the paper .",
    "part of this paper was presented at 2012 ieee international symposium on information theory , cambridge , ma , usa , july 2012 @xcite .",
    "our study heavily relies on the standard form of algebraic curves introduced independently by @xcite and @xcite , which is an enhancement of earlier results @xcite .",
    "let @xmath1 be an algebraic function field of one variable over a finite field @xmath2 with @xmath3 elements .",
    "let @xmath4 be the genus of @xmath5 .",
    "fix @xmath6 distinct places @xmath7 , @xmath8 ,  , @xmath9 of degree one in @xmath5 and a nonnegative integer @xmath10 .",
    "we consider the following one - point algebraic geometry ( ag ) code @xmath11 where @xmath12 ,  , @xmath13 .",
    "suppose that the weierstrass semigroup @xmath14 at @xmath7 is generated by @xmath15 , ",
    ", @xmath16 , and choose @xmath17 elements @xmath18 ,  , @xmath19 in @xmath5 whose pole divisors are @xmath20 for @xmath21 ,  , @xmath17 .",
    "we do _ not _ assume that @xmath15 is the smallest among @xmath15 , ",
    ", @xmath16 .",
    "without loss of generality we may assume the availability of such @xmath18 , ",
    ", @xmath19 , because otherwise we can not find a basis of @xmath22 for every @xmath10 . then we have that @xmath23 is equal to @xmath24 ,  , @xmath25 $ ] @xcite .",
    "we express @xmath26 as a residue class ring @xmath27 ,  , @xmath28/i$ ] of the polynomial ring @xmath27 ,  , @xmath28 $ ] , where @xmath29 ,  , @xmath30 are transcendental over @xmath2 , and @xmath31 is the kernel of the canonical homomorphism sending @xmath32 to @xmath33 .",
    "@xcite identified the following convenient representation of @xmath26 by using grbner basis theory @xcite .",
    "the following review is borrowed from @xcite .",
    "hereafter , we assume that the reader is familiar with the grbner basis theory in @xcite .",
    "let @xmath34 be the set of nonnegative integers . for @xmath35 , ",
    ", @xmath36 , @xmath37 ,  , @xmath38 , we define the weighted reverse lexicographic monomial order @xmath39 such that @xmath35 ,  , @xmath36 @xmath39 @xmath37 ,  , @xmath40 if @xmath41 , or @xmath42 , and @xmath43 , @xmath44 ,  , @xmath45 , @xmath46 , for some @xmath47 . note that a grbner basis of @xmath31 with respect to @xmath39 can be computed by ( * ? ? ?",
    "* theorem 15 ) , @xcite , ( * ? ? ?",
    "* theorem 4.1 ) or ( * ? ? ?",
    "* proposition 2.17 ) , starting from any affine defining equations of @xmath1 .",
    "[ ex1 ] according to ( * ? ? ?",
    "* example 3.7 ) , @xmath48 is an affine defining equation for the klein quartic over @xmath49 .",
    "there exists a unique @xmath49-rational place @xmath7 such that @xmath50 , @xmath51 , and @xmath52 .",
    "the numbers @xmath53 , @xmath54 and @xmath55 is the minimal generating set of the weierstrass semigroup at @xmath7 . choosing @xmath56 as @xmath18 , @xmath57 as @xmath58 and @xmath59 as @xmath60 , by ( * ? ? ?",
    "* theorem 4.1 ) we can see that the standard form of the klein quartic is given by @xmath61 which is the reduced grbner basis with respect to the monomial order @xmath39 .",
    "we can see that @xmath62 , @xmath63 , and @xmath64 .",
    "[ ex : gs1 ] consider the function field @xmath65 with relations @xmath66 this is the third function field in the asymptotically good tower introduced by @xcite . substituting @xmath67 with @xmath68 and @xmath69 with @xmath70 in eq .",
    "( [ eq : gs1 ] ) we have affine defining equations @xmath71 the function @xmath72 has a unique pole @xmath7 in @xmath73 .",
    "the minimal generating set of the weiestrass semigroup @xmath14 at @xmath7 is @xmath74 , @xmath75 , @xmath76 , @xmath77 , @xmath78 and @xmath79 ( * ? ? ?",
    "* example 4.11 ) .",
    "it has genus @xmath76 and @xmath80 @xmath81-rational points different from @xmath7 @xcite .",
    "define six functions @xmath82 , @xmath83 , @xmath84 , @xmath85 , @xmath86 and @xmath87 .",
    "we have @xmath88 , @xmath89 , @xmath90 , @xmath91 , @xmath92 and @xmath93 @xcite . from this information and (",
    "* theorem 4.1 ) we can compute the @xmath94 polynomials in the reduced grbner basis of the ideal @xmath95 ,  , @xmath96 $ ] defining @xmath26 as @xmath97 , @xmath98 , @xmath99 , @xmath100 , @xmath101 , @xmath102 , @xmath103 , @xmath104 , @xmath105 , @xmath106 , @xmath107 , @xmath108 , @xmath109 , @xmath110 , @xmath111 .",
    "note that polynomials in the above grbner basis are in the ascending order with respect to the monomial order @xmath112 while terms in each polynomial are in the descending order with respect to @xmath112 .    for @xmath113 ,  , @xmath114 ,",
    "we define @xmath115 , and @xmath116 to be the minimum element @xmath35 , ",
    ", @xmath117 with respect to @xmath112 such that @xmath118 .",
    "note that @xmath119 s are the well - known apry set ( * ? ? ?",
    "* lemmas 2.4 and 2.6 ) of the numerical semigroup @xmath14 .",
    "then we have @xmath120 if we write @xmath116 as @xmath121 ,  , @xmath122 . for each @xmath123 , @xmath124 ,  , @xmath125 , define @xmath126 .",
    "the footprint of @xmath31 , denoted by @xmath127 , is @xmath128 ,  , @xmath129 is not the leading monomial of any nonzero polynomial in @xmath31 with respect to @xmath130 , and define @xmath131 ,  , @xmath132 .",
    "then @xmath133 is a basis of @xmath26 as an @xmath2-linear space @xcite , two distinct elements in @xmath133 have different pole orders at @xmath7 , and @xmath134 equation ( [ eq : footprintform ] ) shows that @xmath26 is a free @xmath135$]-module with a basis @xmath136 ,  ,",
    "note that the above structured shape of @xmath133 reflects the well - known property of every weighted reverse lexicographic monomial order , see the paragraph preceding to ( * ? ? ?",
    "* proposition 15.12 ) .",
    "[ ex2 ] for the curve in example [ ex1 ] , we have @xmath138 , @xmath139 , @xmath140 .",
    "let @xmath141 be the unique valuation in @xmath5 associated with the place @xmath7 .",
    "the semigroup @xmath14 is equal to @xmath142 ( * ? ? ?",
    "* lemma 2.6 ) . by (",
    "* proposition 3.18 ) , for each nongap @xmath143 there is a unique monomial @xmath144 with @xmath145 such that @xmath146 , and let us denote this monomial by @xmath147 .",
    "let @xmath148 , and we may consider the one - point codes @xmath149 where @xmath150 denotes the @xmath2-linear space spanned by @xmath151 . since considering linearly dependent rows in a generator matrix has no merit , we assume @xmath152 where @xmath153 .",
    "one motivation for considering these codes is that it was shown in @xcite how to increase the dimension of the one - point codes without decreasing the lower bound @xmath154 for the minimum distance .",
    "the bound @xmath155 is defined for @xmath156 as follows @xcite : for @xmath157 , let @xmath158 then @xmath159 . it is proved in @xcite that @xmath154 gives the same estimate for the minimum distance as the feng - rao bound @xcite for one - point dual ag codes when both @xmath154 and the feng - rao bound can be applied , that is , when the dual of a one - point code is isometric to a one - point code . furthermore , it is also proved in @xcite that @xmath155 can be obtained from the bounds in @xcite , hence @xmath154 can be understood as a particular case of these bounds @xcite .",
    "suppose that we have a received word @xmath160 .",
    "we shall modify the unique decoding algorithm proposed by @xcite so that we can find all the codewords in @xmath156 in eq .",
    "( [ eq : cgamma ] ) within the hamming distance @xmath161 from @xmath162 . the overall structure of the modified algorithm is as follows :    1 .",
    "[ l1 ] precomputation before getting a received word @xmath162 , 2 .",
    "[ l2 ] initialization after getting a received word @xmath162 , 3 .",
    "[ l3 ] termination criteria of the iteration , and 4 .",
    "[ l4 ] main part of the iteration .",
    "steps [ l2 ] and [ l4 ] are based on @xcite .",
    "steps [ l1 ] and [ l3 ] are not given in @xcite .",
    "each step is described in the following subsections in section [ sec3 ] .",
    "we shall analyze time complexity except the precomputation part of the algorithm .",
    "we retain notations from section [ sec2 ] . in this subsection , we modify notations and definitions in @xcite to describe the proposed modification to their algorithm .",
    "we also introduce several new notations .",
    "define a set @xmath163 , @xmath164 , @xmath165 .",
    "our @xmath166 is @xmath167 in @xcite .",
    "recall also that @xmath168 .    since the @xmath135$]-module @xmath169 has a free basis @xmath170",
    ", we can regard @xmath166 as the set of monomials in the grbner basis theory for modules .",
    "we introduce a monomial order on @xmath166 as follows . for",
    "given two monomials @xmath171 and @xmath172 , first rewrite @xmath173 and @xmath174 by @xmath58 , ",
    ", @xmath19 defined in section [ sec2 ] and get @xmath175 and @xmath176 . for a nongap @xmath177 , we define the monomial order @xmath178 parametrized by @xmath179 if @xmath180 or @xmath181 and @xmath182 , @xmath183 ,  , @xmath184 and @xmath185 for some @xmath186 .",
    "observe that the restriction of @xmath187 to @xmath133 is equal to @xmath112 defined in section [ sec2 ] . in",
    "what follows , every grbner basis , leading term , and leading coefficient is obtained by considering the grbner basis theory for modules , not for ideals .    for @xmath188",
    ", @xmath189 denotes the number of nonzero terms in @xmath190 when @xmath190 is expressed as an @xmath2-linear combination of monomials in @xmath166 .",
    "@xmath191 denotes the number of nonzero terms whose coefficients are not @xmath192 .    for the code @xmath156 in eq .",
    "( [ eq : cgamma ] ) , define the divisor @xmath193 .",
    "define @xmath194 for a positive divisor @xmath195 of @xmath1 .",
    "then @xmath196 is an ideal of @xmath197 @xcite .",
    "let @xmath198 be any element in @xmath196 such that @xmath199 with @xmath200 being the minimal given @xmath201 .",
    "then by ( * ? ? ?",
    "* proposition 1 ) , @xmath202 , ",
    ", @xmath203 is a grbner basis for @xmath196 with respect to @xmath187 as an @xmath135$]-module . for a nonnegative integer @xmath179 ,",
    "define @xmath204 , @xmath205 , and @xmath206 .",
    "we define @xmath207 .      before getting @xmath162",
    ", we need to compute the pellikaan - miura standard form of the algebraic curve , @xmath208 , @xmath209 ,  , @xmath210 , and @xmath147 for @xmath177 as defined in section [ sec2 ] .",
    "also compute @xmath211 , ",
    ", @xmath212 , which can be done by @xcite .    for each @xmath213 ,",
    "express @xmath214 as an @xmath2-linear combination of monomials in @xmath133 .",
    "such expressions will be used for computing products and quotients in @xmath197 as explained in section [ sec : product ] . from the above data , we can easily know @xmath215 , which will be used in eqs .",
    "( [ eq : quotientpre ] ) and ( [ eq : mui ] ) .",
    "find elements @xmath216 with @xmath217 .",
    "there are @xmath218 such elements , which we denote by @xmath219 ,  @xmath220",
    "such that @xmath221 .",
    "compute the @xmath222 matrix @xmath223      in both original unique decoding algorithm @xcite and our modified version , we need to quickly compute the product @xmath224 of two elements @xmath225 in the affine coordinate ring @xmath197 . in our modified version ,",
    "we also need to compute the quotient @xmath226 depending on the choice of iteration termination criterion described in section [ sec : termination ] .",
    "since the authors could not find quick computational procedures for those tasks in @xmath197 , we shall present such ones here .",
    "the normal form of @xmath4 , for @xmath227 , is the expression of @xmath4 written as an @xmath2-linear combination of monomials @xmath216 .",
    "@xmath225 are assumed to be in the normal form .",
    "we propose the following procedure to compute the normal form of @xmath224 .",
    "let the normal form of @xmath214 be @xmath228 with @xmath229 $ ] , which is computed in section [ sec : precomput ] .",
    "we denote by @xmath29 , @xmath230 ,  , @xmath231 algebraically independent variables over @xmath2 .    1 .",
    "assume that @xmath4 and @xmath232 are in their normal forms .",
    "change @xmath233 to @xmath234 and @xmath18 to @xmath29 in @xmath225 for @xmath21 , ",
    ", @xmath114 .",
    "recall that @xmath235 .",
    "denote the results by @xmath236 .",
    "2 .   compute @xmath237 .",
    "this step needs @xmath238 multiplications in @xmath2 .",
    "3 .   let @xmath239 .",
    "then we have @xmath240 computation of @xmath241 needs at most @xmath242 multiplications in @xmath2 .",
    "therefore , the total number of multiplications in @xmath2 in this step is at most @xmath243    therefore , the total number of multiplications in @xmath2 is at most @xmath244 define eq .",
    "( [ eq : nfmulti3 ] ) as @xmath245 .",
    "we emphasize that when the characteristic of @xmath2 is 2 and all the coefficients of defining equations belong to @xmath246 , which is almost always the case for those cases of interest for applications in coding theory , then @xmath247 in eq .",
    "( [ eq : nfmulti3 ] ) is zero .",
    "this means that @xmath26 has little additional overhead over @xmath248 $ ] for computing products of their elements in terms of the number of @xmath2-multiplications and divisions .",
    "define @xmath213 to be equivalent to @xmath249 if @xmath250 .",
    "denote by @xmath251 $ ] the equivalence class represented by @xmath213 . for @xmath252 $ ]",
    "we have @xmath253 , which is denoted by @xmath254,k}(x_1)$ ] .",
    "the right hand side of eq .",
    "( [ eq : gh ] ) can be written as @xmath255}\\left(\\sum_{(i',j')\\in[i , j ] } f_{g , h , i',j'}(x_1)\\right ) \\sum_{k=0}^{a_1 - 1 } y_k f_{[i , j],k}(x_1 ) .",
    "\\label{eq : gh2}\\ ] ] by using eq .",
    "( [ eq : gh2 ] ) instead of eq .",
    "( [ eq : gh ] ) , we have another upper bound on the number of multiplications as @xmath256 } \\gamma\\left ( \\sum_{(i',j')\\in[i , j ] } f_{g , h , i',j'}(x_1)\\right ) \\gamma_{\\neq 1}(\\sum_{k=0}^{a_1 - 1 } y_k f_{[i , j],k}(x_1 ) ) .",
    "\\label{eq : nfmulti4}\\ ] ] since @xmath257 } f_{g , h , i',j'}(x_1)\\right ) \\leq   \\sum_{(i',j')\\in[i , j ] } \\gamma ( f_{g , h , i',j'}(x_1)),\\ ] ] we have eq .  ( [ eq : nfmulti4 ] ) @xmath258 eq .",
    "( [ eq : nfmulti3 ] ) . however , eq .  ( [ eq : nfmulti4 ] ) is almost always the same as eq .",
    "( [ eq : nfmulti3 ] ) over the curve in example [ ex : gs1 ] , and eq .  ( [ eq : nfmulti4 ] ) will not be used in our computer experiments in section [ sec : experiment ] .",
    "assume @xmath259 .",
    "the following procedure computes the quotient @xmath260 or declares that @xmath4 does not belong to the principal ideal of @xmath197 generated by @xmath232 .",
    "1 .   initialize @xmath261 .",
    "also initialize @xmath262 .",
    "2 .   [ lab ]",
    "check if @xmath263 .",
    "if not , declare that @xmath4 does not belong to the principal ideal of @xmath197 generated by @xmath232 , and finish the procedure .",
    "3 .   let @xmath216 such that @xmath264 .",
    "observe that @xmath265 and that @xmath266 is precomputed as section [ sec : precomput ] .",
    "let @xmath267 computation of @xmath268 needs one multiplication and one division in @xmath2 .",
    "observe that @xmath269 .",
    "4 .   compute the normal form of @xmath270 , which requires at most @xmath271 multiplications in @xmath2 .",
    "increment @xmath272 by @xmath273 . 5 .",
    "update @xmath274 and @xmath275 .",
    "if the updated @xmath4 is zero , then output the updated @xmath276 as the quotient and finish the procedure .",
    "otherwise go to step [ lab ] .",
    "this step has no multiplication nor division .",
    "define @xmath277 as @xmath272 after finishing the above procedure .",
    "@xmath277 is an upper bound on the number of multiplications and divisions in @xmath2 in the above procedure .",
    "the program variable @xmath272 is just to define @xmath277 , and the decoding algorithm does not need to update @xmath272 . observe also that the above procedure is a straightforward generalization of the standard long division of two univariate polynomials @xcite .",
    "let @xmath278 ,  , @xmath279 , where @xmath280 is defined in eq .",
    "( [ eq : invgenmatrix ] ) .",
    ". then we have @xmath282 .",
    "the computation of @xmath283 from @xmath162 needs at most @xmath284 multiplications in @xmath2 .",
    "let @xmath285 . for @xmath113 , ",
    ", @xmath114 , compute @xmath286 and @xmath287 .",
    "the computation of @xmath288 needs at most @xmath289 multiplications in @xmath2 .",
    "therefore , the total number of multiplications in the initialization is at most @xmath290 let @xmath291 and execute the following steps .      after finishing the initialization step in section [ sec : initialization ] , we iteratively compute @xmath292 and @xmath293 with @xmath294 and @xmath295 with @xmath296 from larger @xmath179 to smaller @xmath179 .",
    "the single iteration consists of two parts : the first part is to check if an iteration termination criterion is satisfied .",
    "the second part is computation of @xmath292 and @xmath293 for @xmath297 .",
    "we describe the first part in section [ sec : termination ] .",
    "let @xmath298 having the smallest @xmath299 among @xmath300 , ",
    ", @xmath301 . in the following subsections",
    ", we shall propose three different procedures to judge whether or not iterations in the proposed algorithm can be terminated . in an actual implementation of the proposed algorithm ,",
    "one criterion is chosen and the chosen one is consistently used throughout the iterations .",
    "the first one and the second one are different generalizations of ( * ? ? ?",
    "* theorem 12 ) for the case @xmath302 to @xmath303 .",
    "* theorem 12 ) proved that if the number @xmath304 of errors satisfies @xmath305 , where @xmath306 is the minimum distance @xmath307 of the @xmath308 $ ] reed - solomon code @xmath309 , then the transmitted information word is obtained by ali - kuijper s algorithm as @xmath310 . to one - point primal ag codes , @xmath306 can be generalized as either @xmath311 or @xmath312 .",
    "the former generalization @xmath311 corresponds to the first criterion in section [ sec : first ] and the latter @xmath312 corresponds to the second in section [ sec : second ] .",
    "the third one is almost the same as the original procedure in @xcite .",
    "the first one was proposed in @xcite while the second and the third ones are new in this paper .",
    "we shall compare the three criteria in section [ sec : comparethree ] . throughout this paper",
    ", @xmath313 denotes the hamming weight of a vector @xmath314 .      if    * @xmath157 , * @xmath315 , and * @xmath316    then do the following :    1 .   [ first1 ] compute @xmath317 .",
    "this needs at most @xmath318 multiplications and divisions in @xmath2 .",
    "2 .   if @xmath319 and @xmath320 can be written as a linear combination of monomials in @xmath321 , then do the following : 1 .",
    "[ first11 ] if @xmath322 or @xmath323 then include the coefficients of @xmath324 into the list of transmitted information vectors , and avoid proceeding with the rest of the decoding procedure .",
    "[ first12 ] otherwise compute @xmath325 .",
    "this needs at most @xmath326 multiplications and divisions in @xmath2 .",
    "3 .   [ first13 ] if @xmath327 then include the coefficients of @xmath310 @xmath328 @xmath329 into the list of transmitted information vectors , and avoid proceeding with @xmath179 .",
    "otherwise , continue the iterations unless @xmath330 .      if @xmath331 , then do the following :    1 .",
    "[ second1 ] if @xmath332 then stop proceeding with iteration .",
    "2 .   otherwise compute @xmath317 .",
    "this needs at most @xmath333 multiplications and divisions in @xmath2 .",
    "if @xmath334 , @xmath319 , and @xmath320 can be written as a linear combination of monomials in @xmath321 then declare the coefficients of @xmath324 as the only transmitted information and finish",
    ". otherwise declare `` decoding failure '' and finish .",
    "4 .   if @xmath335 , @xmath319 and @xmath320 can be written as a linear combination of monomials in @xmath321 , then do the following : 1 .",
    "[ second11 ] if @xmath323 then include the coefficients of @xmath324 into the list of transmitted information vectors , and avoid proceeding with @xmath179 .",
    "[ second12 ] otherwise compute @xmath325 .",
    "this needs at most @xmath336 multiplications and divisions in @xmath2 .",
    "3 .   if @xmath327 then include the coefficients of @xmath310 @xmath328 @xmath329 into the list of transmitted information vectors . 5 .",
    "finish the iteration no matter what happened in the above steps .      just repeat the iteration until finding @xmath292 at @xmath337 for @xmath113 , ",
    ", @xmath114 . if @xmath334 then declare the vector @xmath338 as the only transmitted information and finish .",
    "if @xmath335 then do the following :    1 .",
    "[ third1 ] if @xmath339 and @xmath323 then include the vector @xmath338 into the list of transmitted information vectors .",
    "finish the iteration .",
    "[ third2 ] if @xmath340 then finish the iteration .",
    "[ third3 ] otherwise compute @xmath341 .",
    "this needs at most @xmath342 multiplications and divisions in @xmath2 .",
    "[ third4 ] if @xmath343 then include the vector @xmath338 into the list of transmitted information vectors .",
    "finish the iteration .",
    "the iteration of the original algorithm @xcite consists of three steps , called pairing , voting , and rebasing .",
    "we will make a small change to the original .",
    "our modified version is described below .",
    "let @xmath344,\\ ] ] @xmath345,\\ ] ] and let @xmath346 .",
    "we assume that @xmath347 and @xmath348 .",
    "for @xmath349 , as in @xcite there are unique integers @xmath350 and @xmath351 satisfying @xmath352 note that by the definition above @xmath353 and the integer @xmath354 is a nongap if and only if @xmath355 . now let @xmath356 .",
    "note that the map @xmath357 is a permutation of @xmath358 and that the integer @xmath359 is defined such that @xmath360 .      for each @xmath361 , we set @xmath362}{\\mu_i } , ~   \\bar{c}_i=\\max\\{c_i,0\\ } , \\label{eq : mui}\\ ] ] where @xmath363 $ ] denotes the coefficient of @xmath364 of the univariate polynomial @xmath365 $ ] .",
    "we remark that the leading coefficient @xmath366 must be considered after expressing @xmath367 by monomials in @xmath133 .",
    "observe that @xmath368 and that @xmath369 is already precomputed as section [ sec : precomput ] . by using that precomputed table , computation of @xmath366 needs one multiplication .",
    "the total number of multiplications and divisions in eq .",
    "( [ eq : mui ] ) is @xmath370 excluding negation from the number of multiplication .",
    "let @xmath371 we consider two different candidates depending on whether @xmath157 or not :    * if @xmath372 , set @xmath373 * if @xmath157 , let @xmath374 be one of the element(s ) in @xmath2 with @xmath375    let @xmath376 .",
    "if several @xmath374 s satisfy the condition above , repeat the rest of the algorithm for each of them .      in all of the following cases , we need to compute the normal form of the product @xmath377 , and the product @xmath378 . for each @xmath201 ,",
    "the number of multiplications is @xmath379 where @xmath380 is defined in section [ sec : product ] .",
    "* if @xmath381 , then let @xmath382where the parentheses denote substitution of the variable @xmath383 and let @xmath384 .",
    "the number of multiplications in this case is bounded by eq .",
    "( [ eq : multirebasing ] ) . *",
    "if @xmath385 and @xmath386 , then let @xmath387 and let @xmath388 .",
    "+ computation of @xmath389 needs one multiplication and one division .",
    "the product of @xmath389 and @xmath390 needs @xmath391 multiplications , where @xmath392 is defined in section [ sec : product ] .",
    "thus , the number of multiplications and divisions is @xmath393 * if @xmath385 and @xmath394 , then let @xmath395 and let @xmath396 .",
    "+ computation of @xmath389 needs one multiplication and one division .",
    "the product of @xmath389 and @xmath390 needs @xmath391 multiplications , where @xmath392 is defined in section [ sec : product ] .",
    "thus , the number of multiplications and divisions is @xmath397 eq .  ( [ eq : compl2 ] ) .    after computing @xmath398 and @xmath399 as above ,",
    "update the program variable @xmath179 to @xmath400 and go to the beginning of section [ sec : termination ] .      in this subsection",
    ", we review advantages of our modified algorithm over the original @xcite .",
    "* our version can handle any one - point primal ag codes , while the original can handle codes only coming from the @xmath0 curves @xcite .",
    "this generalization is enabled only by replacing @xmath401 in @xcite by @xmath173 defined in section [ sec2 ] .",
    "* our version can find all the codeword within hamming distance @xmath161 from the received word @xmath162 , while the original is a unique decoding algorithm .",
    "* our version does not compute @xmath402 , @xmath403 for a weiestrass gap @xmath404 , while the original computes them for @xmath405 . * the original algorithm assumed @xmath406 , where @xmath10 is as defined in eq .",
    "( [ eq : cu ] ) .",
    "this assumption is replaced by another less restrictive assumption ( [ eq : gammaassume ] ) in our version . *",
    "our version supports the feng - rao improved code construction @xcite , while the original does not .",
    "this extension is made possible by the change at eq .",
    "( [ eq : w0 ] ) . * the first and the second termination criteria come from ( * ? ? ? * theorem 12 ) and do not exist in the original @xcite . * the third termination criterion is essentially the same as the original @xcite , but examination of the hamming distance between the decoded codeword and @xmath162 is added when @xmath407 . *",
    "the original @xcite is suitable for parallel implementation on electric circuit similar to the ktter architecture @xcite .",
    "our modified version retains this advantage .",
    "in this section we prove that our modified algorithm can find all the codewords within hamming distance @xmath161 from the received word @xmath162 .",
    "we also give upper bounds on the number of iterations in section [ sec : nriteration ] .      in section [ sec : sl ] we shall introduce several lemmas necessary in sections [ sec : nrvotes][sec : firstwhy ] .",
    "recall that the execution of our modified algorithm can branch when there are multiple candidates satisfying the condition ( [ eq : acceptedvote ] ) . for a fixed sequence of determined @xmath295 ,",
    "define @xmath408 and recursively define @xmath409 . by definition @xmath410 .",
    "the following lemma explains why the authors include `` grbner bases '' in the paper title .",
    "the module @xmath411 was used in @xcite but the use of @xmath412 with @xmath413 was new in @xcite .",
    "[ lem : ir ] fix @xmath414 .",
    "let @xmath415 correspond to @xmath295 ( @xmath157 ) chosen by the decoding algorithm .",
    "define the @xmath135$]-submodule @xmath412 of @xmath169 by @xmath416 where @xmath417 ,  , @xmath418 . then @xmath419 , @xmath420 , ",
    ", @xmath421 is a grbner basis of @xmath412 with respect to @xmath187 as an @xmath135$]-module .",
    "* proof .",
    "* this lemma is a generalization of ( * ? ? ?",
    "* proposition 11 ) .",
    "we can prove this lemma in exactly the same way as the proof of ( * ? ? ?",
    "* proposition 11 ) with replacing @xmath401 in @xcite with @xmath173 and @xmath422 in @xcite by @xmath400 .",
    "the following proposition shows that the original decoding algorithm @xcite can correct errors up to half the bound @xmath155 , which was not claimed in @xcite .",
    "[ prop : ag ] fix @xmath157 .",
    "let @xmath423 as defined in eq .",
    "( [ eq : lambda ] ) and @xmath424 as defined in eq .",
    "( [ eq : nu ] ) . then @xmath425 .    *",
    "* let @xmath426 , then we have @xmath427 .",
    "moreover , observe that @xmath428 therefore , for @xmath157 we have @xmath429 where the third equality holds by eq .",
    "( [ eq : iprime ] ) . by the equalities above",
    ", we see @xmath430 which proves the equality @xmath431 .",
    "@xcite showed that their original decoding algorithm can correct up to @xmath432 errors , where @xmath433 , @xmath434 .",
    "proposition [ prop : ag ] implies that @xmath435 is equivalent to @xmath436 for every one - point primal code @xmath22 , and therefore ( * ? ? ?",
    "* theorem 8) implies ( * ? ? ?",
    "* proposition 12 ) . in another recent paper",
    "@xcite we proved that @xmath154 and @xmath437 are equal to the feng - rao bound as defined in @xcite for @xmath22 .      in section [ sec : nrvotes ]",
    "we discuss the number of votes ( [ eq : acceptedvote ] ) which a candidate @xmath438 receives .",
    "since we study list decoding , we can not assume the original transmitted codeword nor the error vector as in @xcite .",
    "nevertheless , the original theorems in @xcite allow natural generalizations to the list decoding context .",
    "[ lem : nrvotes ] fix @xmath157 . for @xmath439 , fix a sequence of @xmath440 chosen by the decoding algorithm , and define @xmath415 corresponding to the chosen sequence of @xmath440 .",
    "fix @xmath441 .",
    "let @xmath442 ,  , @xmath443 be a nonzero vector with the minimum hamming weight in the coset @xmath444 , where @xmath445 is as defined in eq .  (",
    "[ eq : cu ] ) .",
    "define @xmath446 let @xmath447 ,  ,",
    "@xmath448 be a grbner basis for @xmath449 as an @xmath135$]-module with respect to @xmath187 ( for any integer @xmath179 ) , such that @xmath450 .    under the above notations",
    ", we have @xmath451 for @xmath201 with @xmath452 , and @xmath453 for @xmath201 with @xmath454 .    * proof .  *",
    "the proof is the same as those of ( * ? ? ?",
    "* propositions 7 and 8) , with replacing @xmath401 in @xcite by @xmath173 , @xmath455 in @xcite by @xmath456 .",
    "the following lemma is a modification to ( * ? ? ?",
    "* proposition 9 ) for the list decoding .",
    "we retain notations from lemma [ lem : nrvotes ] .",
    "we have @xmath457    * proof .",
    "* lemma [ lem : nrvotes ] implies @xmath458 and @xmath459 now we have a chain of inequalities @xmath460 where at eq .",
    "( [ eq : this ] ) we used the equality @xmath461 shown in ( * ? ? ?",
    "* lemma 2 and eq .",
    "finally note that @xmath462 by ( * ? ? ?",
    "* eq .  ( 3 ) ) .",
    "the following lemma is a modification to ( * ? ? ?",
    "* proposition 10 ) for list decoding , and provides a lower bound for the number of votes ( [ eq : acceptedvote ] ) received by any candidate @xmath441 , as indicated in the section title .    [ prop : nrvotes ] we retain notations from lemma [ lem : nrvotes ] .",
    "let @xmath424 be as defined in eq .",
    "( [ eq : nu ] ) .",
    "we have @xmath463    * proof .",
    "* we have @xmath464 as @xmath465 for @xmath466 .       in this subsection and the following sections",
    ", we shall prove that the proposed list decoding algorithm will find all the codewords within the hamming distance @xmath161 from the received word @xmath162 .",
    "since the third iteration termination criterion is the easiest to analyze , we start with the third one .    fix a sequence @xmath295 for @xmath467 .",
    "if @xmath468 then the sequence @xmath295 is found by the algorithm because of proposition [ prop : nrvotes ] .",
    "when @xmath334 , by proposition [ prop : ag ] the decoding is not list decoding , and the algorithm just declares the sequence @xmath295 as the transmitted information .    on the other hand ,",
    "if @xmath335 , then the found sequence could correspond to a codeword more distant than hamming distance @xmath161 , and the algorithm examines the hamming distance between the found codeword and the received word @xmath162 .",
    "since computing @xmath469 for @xmath470 needs many multiplications in @xmath2 , the algorithm checks some sufficient conditions to decide the hamming distance between the found codeword and the received word @xmath162 .",
    "let @xmath471 ,  , @xmath472 .",
    "when @xmath339 in section [ sec:3rd ] , by lemma [ lem : ir ] , we have @xmath473 because eq .",
    "( [ eq : ir ] ) and @xmath339 implies that @xmath474 for @xmath475 . by the above equation",
    ", @xmath323 implies that the found codeword is within hamming distance @xmath161 from @xmath162 .",
    "this explains why the algorithm can avoid computation of the evaluation map @xmath476 in step [ third1 ] in section [ sec:3rd ] .",
    "in order to explain step [ third2 ] in section [ sec:3rd ] , we shall show that the condition of step [ third2 ] in section [ sec:3rd ] implies that @xmath477 .",
    "suppose that @xmath478",
    ". then there exists @xmath479 such that @xmath480 for @xmath475 , @xmath481 , and @xmath482 .",
    "because the leading term of @xmath483 must be divisible by @xmath484 for some @xmath201 by the property of grbner bases , we must have @xmath485 .",
    "this explains why the algorithm can avoid computation of the evaluation map @xmath476 in step [ third2 ] in section [ sec:3rd ] .",
    "otherwise , the algorithm computes the hamming distance between the found codeword and @xmath162 in steps [ third3 ] and [ third4 ] in section [ sec:3rd ] .",
    "we shall explain why the second criterion in section [ sec : second ] correctly finds the required codewords .",
    "for explanation , we present slightly rephrased version of facts in @xcite .",
    "[ lem:23 ] ( * ? ? ? *",
    "lemma 2.3 ) let @xmath486 with @xmath487 with respect to @xmath187 and @xmath488 .",
    "if there exists @xmath489 such that @xmath490 , then we have @xmath491 .    * proof .  * observe that @xmath487 implies that @xmath492 .",
    "the claim of lemma [ lem:23 ] is equivalent to ( * ? ? ?",
    "* lemma 2.3 ) with @xmath493 and @xmath494 .",
    "note that the assumption @xmath495 was not used in ( * ? ? ?",
    "* lemma 2.3 ) but only in ( * ? ? ?",
    "* lemma 2.4 ) .",
    "note that the following proposition was essentially proved in ( * ? ? ?",
    "* proposition 2.10 ) , ( * ? ? ?",
    "* section 14.2 ) , and ( * ? ? ?",
    "* theorem 2.1 ) with @xmath496 .",
    "[ prop : candivide ] let @xmath497 and @xmath498 be as in section [ sec : second ] . if @xmath499 and there exists @xmath489 such that @xmath490 , then we have @xmath500 .    * proof .",
    "* let @xmath227 such that @xmath501 if @xmath502 , and assume that @xmath4 has the minimum pole order at @xmath7 among such elements in @xmath197 . then @xmath503 .",
    "one has that @xmath504 and @xmath505 with respect to @xmath187 . by the property of grbner bases",
    ", @xmath506 is divisible by @xmath507 for some @xmath201 , which implies @xmath508 . by lemma [ lem:23 ]",
    "we have @xmath500 .",
    "we explain how the procedure in section [ sec : second ] works as desired .",
    "when the condition in step [ second1 ] in section [ sec : second ] is true , then there can not be a codeword within hamming distance @xmath161 from @xmath415 by the same reason as section [ sec : thirdwhy ] .",
    "so the algorithm stops processing with @xmath415 .",
    "when @xmath334 , then the algorithm declares @xmath324 as the unique codeword .",
    "when @xmath335 , then the algorithm examines the found codeword close enough to @xmath162 in steps [ second11 ] and [ second12 ] in section [ sec : second ] .",
    "when @xmath323 we can avoid computation of the evaluation map @xmath476 by the same reason as section [ sec : thirdwhy ] , which is checked at step [ second11 ]",
    ". otherwise we compute the codeword vector at step [ second12 ] and examine its hamming distance to @xmath415 .    by proposition [ prop : candivide ]",
    ", the codeword must be found at @xmath509 .",
    "therefore , we do not execute the iteration at @xmath510 .",
    "we shall explain why the first criterion in section [ sec : first ] correctly finds the required codewords .",
    "the idea behind the first criterion is that there can not be another codeword within hamming distance @xmath161 from @xmath415 when the algorithm already found one .",
    "so the algorithm can stop iteration with smaller @xmath179 once a codeword is found as @xmath325 .",
    "the algorithm does not examine conditions when @xmath332 by the same reason as sections [ sec : thirdwhy ] and [ sec : secondwhy ] .",
    "when @xmath334 , then the algorithm declares @xmath324 as the unique codeword .    when @xmath335 , then the algorithm examines the found codeword close enough to @xmath162 in steps [ first11][first13 ] in section [ sec : first ] .",
    "when @xmath323 we can avoid computation of the evaluation map @xmath476 by the same reason as section [ sec : thirdwhy ] , which is checked at step [ first11 ] .    by proposition [ prop : candivide ] , the codeword must be found at some @xmath511 .",
    "therefore , we do not execute the iteration at @xmath512 .",
    "observe that for @xmath513 we set always @xmath295 to @xmath514 . for each @xmath157 satisfying @xmath515 , the number of accepted candidates satisfying eq .",
    "( [ eq : acceptedvote ] ) can be at most @xmath3 .",
    "on the other hand , for @xmath179 with @xmath516 , the number of candidates is either zero or one , because at most one @xmath517 can satisfy eq .",
    "( [ eq : acceptedvote ] ) .",
    "therefore , we have upper bounds for the number of iterations , counting executions of rebasing in section [ sec : rebasing ] , as @xmath518 for the third criterion for judging termination , where @xmath519 , and @xmath520 for the first and the second criteria for judging termination .",
    "we will use @xmath521 in place of @xmath522 in eqs .",
    "( [ iteration - ub1 ] ) and ( [ iteration - ub2 ] ) for computation in tables [ tab1][tab3 ] , because @xmath522 depents on @xmath162 and @xmath523 .",
    "observe that the list decoding can be implemented as @xmath524 parallel execution of the unique decoding .",
    "therefore , when one can afford @xmath524 parallel implementation , which increases the circuit size , the decoding time of list decoding is the same as that of the unique decoding .",
    "we have provided an upper bound on the number of multiplications and divisions at each step of the proposed algorithm .",
    "we simulated @xmath525 transmissions of codewords with the one - point primal codes on klein quartic over @xmath49 with @xmath526 by using examples [ ex1 ] and [ ex2 ] , the one - point hermitian codes over @xmath527 with @xmath528 , and the one - point primal codes on the curve in example [ ex : gs1 ] over @xmath81 with @xmath529 .",
    "the program is implemented on the singular computer algebra system @xcite .",
    "the program used for this simulation is available from http://arxiv.org/src/1203.6127/anc .    in the execution",
    ", we counted the number of iterations , ( executions of rebasing in section [ sec : rebasing ] ) , the sum of upper bounds on the number of multiplications and divisions given in eqs .",
    "( [ eq : compl : ini ] ) , ( [ eq : compl3 ] ) , ( [ eq : compl4 ] ) , ( [ eq : compl5 ] ) , ( [ eq : compl6 ] ) , ( [ eq : compl7 ] ) , ( [ eq : compl1 ] ) , ( [ eq : multirebasing ] ) and ( [ eq : compl2 ] ) , and the number of codewords found . note also that eq .",
    "( [ eq : nfmulti3 ] ) instead of eq .",
    "( [ eq : nfmulti4 ] ) is used .    the parameter @xmath161 is set to the same as the number of generated errors in each simulation condition .",
    "@xmath522 or @xmath530 in the number of errors in tables [ tab2 ] and [ tab22 ] indicates that the error vector is generated toward another codeword nearest from the transmitted codeword or completely randomly , respectively .",
    "the distribution of codewords is uniform on @xmath156 .",
    "that of error vectors is uniform on the vectors of hamming weight @xmath161 .    in the code construction",
    ", we always try to use the feng - rao improved construction .",
    "specifically , for a given designed distance @xmath304 , we choose @xmath531 , and construct @xmath156 of eq .",
    "( [ eq : cgamma ] ) . in the following ,",
    "the designed distance is denoted by @xmath155 .",
    "it can be seen from tables [ tab1][tab3 ] and the following subsections that the computational complexity of the proposed algorithm tends to explode when the number of errors exceeds the error - correcting capability of the guruswami - sudan algorithm @xcite .      in section [ sec : termination ] we proposed three criteria for terminating iteration of the proposed algorithm . from tables",
    "[ tab1][tab3 ] , one can see the following .",
    "the first criterion has the smallest number of iterations , and the second is the second smallest . on the other hand",
    ", the first criterion has the largest number of multiplications and divisions .",
    "the second and the third have the similar numbers .",
    "only the first criterion was proposed in @xcite and we see that the new criteria are better than the old one .",
    "the reason is as follows : the computation of quotient @xmath320 at step [ first1 ] in section [ sec : first ] is costlier than updating @xmath292 and @xmath293 in section [ sec : rebasing ] and the first criterion computes @xmath320 many times , which cancels the effect of decrease in the number of iterations . on the other hand ,",
    "the second criterion computes @xmath320 only once , so it has the smaller number of multiplications and divisions than the first .",
    "the second criterion is faster when @xmath532 , while the third tends to be faster when @xmath407 .",
    "in addition to this , the ratio of the number of iterations in the second criterion to that of the third is smaller with @xmath532 than with @xmath407 .",
    "we speculate the reason behind them as follows : when @xmath407 and a wrong candidate is chosen at eq .",
    "( [ eq : acceptedvote ] ) , after several iterations of sections [ sec : termination ] and [ sec : mainiteration ] , we often observe in our simulation that no candidate satisfies eq .",
    "( [ eq : acceptedvote ] ) and the iteration stops automatically .",
    "under such situation , the second criterion does not help much to decrease the number of iterations nor the computational complexity when a wrong candidate is chosen at eq .",
    "( [ eq : acceptedvote ] ) , and there are many occasions at which a wrong candidate is chosen at eq .",
    "( [ eq : acceptedvote ] ) when @xmath407 . on the other hand ,",
    "when @xmath532 , the second criterion helps to determine the transmitted information earlier than the third .      in table",
    "[ tab3 ] , we observe that the upper bounds ( [ iteration - ub1 ] ) and ( [ iteration - ub2 ] ) are much larger than the actual number of iterations for @xmath533 .",
    "the disappearance of candidates satisfying eq .",
    "( [ eq : acceptedvote ] ) in the last paragraph may also explain the reason behind the large differences for @xmath533 .    on the other hand , we observe that the upper bound ( [ iteration - ub2 ] ) is quite tight for @xmath533 in table [ tab1 ] and @xmath534n in table [ tab22 ] .",
    "this suggests that improvement of eq .",
    "( [ iteration - ub2 ] ) may need some additional assumption",
    ".      we can use @xcite to decode this set of parameters .",
    "it is essentially the forward elimination in the gaussian elimination , and it takes roughly @xmath537 multiplications . in this case @xmath538 .",
    "the proposed algorithm has the lower complexity than @xcite .",
    "the code is @xmath22 with @xmath541 , @xmath542 .",
    "there is no previously known algorithm that can handle this case .",
    "the code is @xmath22 with @xmath544 , @xmath545 . according to ( * ? ? ?",
    "* figure 1 ) , we can use the original guruswami - sudan @xcite but it seems that its faster variants can not be used .",
    "we need the multiplicity @xmath55 to correct @xmath54 errors .",
    "we have to solve a system of @xmath546 linear equations .",
    "it takes @xmath547 multiplications in @xmath49 .",
    "the proposed algorithm is much faster .",
    "the code is @xmath22 with @xmath544 , @xmath545 .",
    "there is no previously known algorithm that can handle this case .",
    "we can use the bms algorithm @xcite for this case .",
    "the complexity of @xcite is estimated as @xmath551 and @xmath552 .",
    "the complexity of the proposed algorithm seems comparable to @xcite .",
    "however , we are not sure which one is faster .",
    "the code becomes the feng - rao improved code with designed distance @xmath555 .",
    "its dimension is @xmath556 . in order to have the same dimension by",
    "@xmath22 we have to set @xmath557 , whose ag bound @xcite is @xmath558 and the guruwsami - sudan can correct up to 2 errors .",
    "the proposed algorithm finds all codewords in the improved code with @xmath53 and @xmath558 errors .",
    "the code is @xmath22 with @xmath560 .",
    "the required multiplicity is @xmath561 , and the required designed list size is @xmath562 .",
    "the fastest algorithm for the interpolation step seems @xcite .",
    "* example 4 ) estimates the complexity of their algorithm as @xmath563 , where @xmath564 is the designed list size . ignoring the log factor and assuming the scaling factor one in the big-@xmath565 notation , the number of multiplications and divisions is @xmath566 .",
    "the proposed algorithm needs much fewer number of multiplications and divisions in @xmath527 .",
    "the guruwsami - sudan algorithm @xcite can correct up to @xmath568 errors and there seems no previously known algorithm that can handle this case .",
    "we can use @xcite to decode this set of parameters .",
    "it is essentially the forward elimination in the gaussian elimination , and it takes roughly @xmath537 multiplications . in this case @xmath570 .",
    "the proposed algorithm has the lower complexity than @xcite .",
    "this is a feng - rao improved code with dimension @xmath572 . in order to realize a code with the same dimension",
    ", we have to set @xmath573 in @xmath22 .",
    "the guruswami - sudan algorithm @xcite can correct no error in this set of parameters .",
    "there seems no previously known algorithm that can handle this case .",
    "this is a feng - rao improved code with dimension @xmath575 . in order to realize a code with the same dimension",
    ", we have to set @xmath576 in @xmath22 .",
    "the guruswami - sudan algorithm @xcite can correct @xmath577 errors in this set of parameters .",
    "there seems no previously known algorithm that can handle this case .",
    "this is an ordinary one - point ag code @xmath22 with @xmath579 and dimension @xmath580 .",
    "the guruswami - sudan algorithm @xcite can correct @xmath568 errors with the multiplicity @xmath581 and the designed list size @xmath582 .",
    "we have to solve a system of @xmath583 linear equations .",
    "it takes @xmath584 multiplications in @xmath81 .",
    "the proposed algorithm is much faster .",
    "the guruswami - sudan algorithm @xcite can correct up to @xmath568 errors and there seems no previously known algorithm that can handle this case .",
    "in this paper , we modified the unique decoding algorithm for plane ag codes in @xcite so that it can support one - point ag codes on _ any _ curve , and so that it can do the list decoding .",
    "the error correction capability of the original @xcite and our modified algorithms are also expressed in terms of the minimum distance lower bound in @xcite .",
    "we also proposed procedures to compute products and quotients in coordinate ring of affine algebraic curves , and by using those procedures we demonstrated that the modified decoding algorithm can be executed quickly .",
    "specifically , its computational complexity is comparable to the bms algorithm @xcite for one - point hermitian codes , and much faster than the standard list decoding algorithms @xcite for several cases .",
    "the original decoding algorithm @xcite allows parallel implementation on circuits like the ktter architecture @xcite .",
    "our modified algorithm retains this advantage .",
    "moreover , if one can afford large circuit size , the proposed list decoding algorithm can be executed as quickly as the unique decoding algorithm by parallel implementation on a circuit .",
    "the authors thank an anonymous reviewer for his / her careful reading that improved the presentation .",
    "this research was partially supported by the mext grant - in - aid for scientific research ( a ) no .",
    "23246071 , the villum foundation through their velux visiting professor programme 20112012 , the danish national research foundation and the national science foundation of china ( grant no .",
    "11061130539 ) for the danish - chinese center for applications of algebraic geometry in coding theory and cryptography , the spanish grant mtm2007 - 64704 , and the spanish mineco grant no .",
    "mtm2012 - 36917-c03 - 03 .",
    "the computer experiments in this research was conducted on singular 3.1.3 @xcite .",
    "m.  ali and m.  kuijper . a parametric approach to list decoding of reed - solomon codes using interpolation .",
    "_ ieee trans .",
    "inform . theory _",
    ", 57(10):67186728 , oct .",
    "doi : 10.1109/tit.2011.2165803 .",
    "arxiv:1011.1040 .",
    "p.  beelen and t.  hholdt .",
    "the decoding of algebraic geometry codes . in e.",
    "martnez - moro , c.  munuera , and d.  ruano , editors , _ advances in algebraic geometry codes _ , volume  5 of _ coding theory and cryptology _ , pages 4998 .",
    "world scientific , 2008 .",
    "doi : 10.1142/9789812794017_0002 .",
    "m.  bras - amors and m.  e. osullivan .",
    "the correction capability of the berlekamp - massey - sakata algorithm with majority voting .",
    "_ applicable algebra in engineering , communication and computing _ , 17(5):315335 , oct",
    "doi : 10.1007/s00200 - 006 - 0015 - 8",
    ".                  h.  elbrnd jensen , r.  r. nielsen , and t.  hholdt .",
    "performance analysis of a decoding algorithm for algebraic - geometry codes .",
    "_ ieee trans .",
    "inform . theory _ ,",
    "45(5):17121717 , july 1999 .",
    "doi : 10.1109/18.771253 .",
    "m.  fujisawa , h.  matsui , m.  kurihara , and s.  sakata . with a higher probability",
    "one can correct errors up to half the designed distance for primal codes from curves . in _ proc .",
    "sita2006 _ , pages 101104 , hakodate , hokkaido , japan , nov .",
    "2006 .",
    "o.  geil , r.  matsumoto , and d.  ruano .",
    "list decoding algorithms based on grbner bases for general one - point ag codes . in _ proc .",
    "isit 2012 _ , pages 8690 , cambridge , ma , usa , july 2012 .",
    "doi : 10.1109/isit.2012.6284685 .",
    "arxiv:1201.6248 .",
    "k.  lee , m.  bras - amors , and m.  e. osullivan .",
    "unique decoding of plane ag codes via interpolation .",
    "ieee trans .",
    "inform . theory _",
    ", 58(6):39413950 , june 2012 .",
    "doi : 10.1109/tit.2012.2182757 .",
    "arxiv:1110.6251 .    r.  matsumoto and s.  miura . on the feng - rao bound for the @xmath586-construction of algebraic geometry codes .",
    "_ ieice trans . fundamentals _ ,",
    "e83-a(5):926930 , may 2000 .",
    "url http://www.rmatsumoto.org/repository/e83-a_5_923.pdf .    r.  matsumoto and s.  miura .",
    "finding a basis of a linear system with pairwise distinct discrete valuations on an algebraic curve .",
    "_ j. symbolic comput .",
    "_ , 30(3):309323 , sept . 2000 .",
    "doi : 10.1006/jsco.2000.0372 .",
    "r.  matsumoto and s.  miura . on construction and generalization of algebraic geometry codes . in t.",
    "katsura et  al . ,",
    "editors , _ proc . algebraic geometry ,",
    "number theory , coding theory , and cryptography _ , pages 315 , univ .",
    "tokyo , japan , jan .",
    "url http://www.rmatsumoto.org/repository/weight-construct.pdf .",
    "r.  matsumoto , d.  ruano , and o.  geil .",
    "generalization of the lee - osullivan list decoding for one - point ag code .",
    "_ j. symbolic comput .",
    "_ , 55:19 , aug . 2013 .",
    "doi : 10.1016/j.jsc.2013.03.001 .",
    "arxiv:1203.6129 .",
    "s.  miura .",
    "algebraic geometric codes on certain plane curves . _ electronics and communications in japan ( part iii : fundamental electronic science ) _ , 76(12):113 , dec . 1993 .",
    "doi : 10.1002/ecjc.4430761201 .",
    "( original japanese version published as trans .",
    "ieice , vol .",
    "j75-a , no .",
    "17351745 , nov .",
    "1992 ) .      r.  pellikaan . on the efficient decoding of algebraic - geometric codes . in p.",
    "camion , p.  charpin , and s.  harari , editors , _ eurocode 92 international symposium on coding theory and applications _ , number 339 in cism courses and lectures , pages 231253 .",
    "cism international centre for mechanical sciences , springer , 1993 .",
    "url http://www.win.tue.nl/~ruudp/paper/17.pdf .",
    "k.  saints and c.  heegard . algebraic - geometric codes and multidimensional cyclic codes : a unified theory and algorithms for decoding using grbner bases .",
    "_ ieee trans .",
    "inform . theory _",
    ", 41(6):17331751 , nov .",
    "doi : 10.1109/18.476246 .",
    "s.  sakata . on fast interpolation method for guruswami - sudan list decoding of one - point algebraic - geometry codes .",
    "in s.  bozta and i.  e. shparlinski , editors , _ proc . aaecc-14 _ ,",
    "volume 2227 of _ lecture notes in computer science _ , pages 172181 , melbourne , australia , nov . 2001 .",
    "springer - verlag .",
    "doi : 10.1007/3 - 540 - 45624 - 4_18 .",
    "s.  sakata .",
    "multivariate interpolation and list decoding . in k.",
    "kobayashi and h.  morita , editors , _ proc .",
    "3rd asian - european workshop on information theory _ ,",
    "pages 2831 , kamogawa , chiba , japan , june 2003 .",
    "society of information theory and its applications .",
    "isbn 4 - 902087 - 04 - 9 .",
    "s.  sakata , h.  elbrnd jensen , and t.  hholdt .",
    "generalized berlekamp - massey decoding of algebraic - geometric codes up to half the feng - rao bound .",
    "_ ieee trans .",
    "inform . theory _",
    ", 41(5):176211768 , sept .",
    "doi : 10.1109/18.476248 .",
    "s.  sakata , j.  justesen , y.  madelung , h.  elbrnd jensen , and t.  hholdt .",
    "fast decoding of algebraic geometric codes up to the designed minimum distance .",
    "_ ieee trans .",
    "inform . theory _",
    ", 41(5):16721677 , sept .",
    "doi : 10.1109/18.476240 .",
    "j.  schicho .",
    "inversion of birational maps with grbner  bases . in b.",
    "buchberger and f.  winkler , editors , _",
    "grbner  bases and applications _",
    ", volume 251 of _ london mathematical society lecture note series _ , pages 495503 .",
    "cambridge university press , 1998 .",
    "isbn 9780521632980 .",
    "doi : 10.1017/cbo9780511565847.031 ."
  ],
  "abstract_text": [
    "<S> we generalize the unique decoding algorithm for one - point ag codes over the miura - kamiya @xmath0 curves proposed by @xcite to general one - point ag codes , without any assumption . </S>",
    "<S> we also extend their unique decoding algorithm to list decoding , modify it so that it can be used with the feng - rao improved code construction , prove equality between its error correcting capability and half the minimum distance lower bound by @xcite that has not been done in the original proposal except for one - point hermitian codes , remove the unnecessary computational steps so that it can run faster , and analyze its computational complexity in terms of multiplications and divisions in the finite field . as a unique decoding algorithm , </S>",
    "<S> the proposed one is as fast as the bms algorithm for one - point hermitian codes , and as a list decoding algorithm it is much faster than the algorithm by @xcite . </S>",
    "<S> + * keywords : * algebraic geometry code , grbner basis , list decoding + * msc 2010 : * primary : 94b35 ; secondary : 13p10 , 94b27 , 14g50 </S>"
  ]
}
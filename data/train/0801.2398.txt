{
  "article_text": [
    "the immersed boundary method was originally introduced by peskin in the 1970 s to model the flow around heart valves .",
    "now it has evolved into a general useful method in studying the motion of one or more massless , elastic surface immersed in an incompressible , viscous fluid , particularly in biofluid dynamics problems where complex geometries and immersed elastic membranes are present .",
    "the method has been successfully applied to a variety of problems including blood flow in the heart @xcite , vibrations of the cochlear basilar membrane @xcite , platelet aggregation during clotting @xcite , aquatic locomotion @xcite , flow with suspended particles @xcite , and inset flight @xcite , we refer to @xcite for an extensive list of applications .",
    "the immersed boundary method employs a uniform eulerian grid over the entire domain to describe the velocity field of the fluid and a lagrangian description for the immersed elastic structure .",
    "the force generated by the elastic structure drives the fluid and the fluid moves the elastic structure .",
    "this interaction is expressed in terms of the spreading and interpolation operations by use of smoothed delta functions .",
    "one of the main difficulties that the immersed boundary method encounters is that it suffers from a severe timestep restriction in order to keep the stability @xcite .",
    "this has been the major limitation of the immersed boundary method .",
    "this restriction is typically much more severe than the one that would be imposed from using an explicit discretization for the convection term in the navier - stokes equation .",
    "the instability is known to arise from large boundary force and small viscosity @xcite .",
    "much effort has been made to remove this restriction .",
    "some implicit and semi - implicit methods have been proposed in the literature @xcite . despite of these efforts , the timestep restriction has not been resolved satisfactorily .",
    "the computational cost of using an implicit or semi - implicit scheme is still too high to be effective in a practical computation . to date",
    ", almost all practical computations using the immersed boundary method have been performed using an explicit discretization .    in this paper , we develop several efficient semi - implicit schemes to compute the motion of an elastic interface immersed in a two - dimensional , incompressible stokes flow .",
    "there are several important ingredients in deriving our semi - implicit schemes .",
    "the first one is to use the arclength and tangent angle formulation to describe the dynamics of the immersed interface @xcite .",
    "we remark that ceniceros and roma have also used the arclength and tangent angle formulation to alleviate the stiffness of the viscous vortex sheet with surface tension in @xcite .",
    "the second one is to obtain an unconditionally stable semi - implicit discretization of the immersed boundary problem . throughout this paper ,",
    "we use the term `` stability '' to mean that the energy norm of the solution can be bounded in terms of the energy norm of the initial data , which is a weaker result than proving that the difference between two solutions in the energy norm can be bounded in terms of the energy norm of their difference at time zero .",
    "the third ingredient is to perform small scale decomposition to the unconditionally stable discretization to obtain our efficient semi - implicit schemes .",
    "an important feature of our small scale decomposition is that the leading order term , which is to be discretized implicitly , can be expressed as a convolution operator .",
    "this property enables us to solve for the implicit solution explicitly using the fourier transformation .",
    "thus , the computational cost of our semi - implicit schemes is comparable to that of an explicit method .",
    "this offers a significant computational saving in using the immersed boundary method .",
    "the small scale decomposition was first developed by hou , lowengrub and shelley @xcite .",
    "they applied this method to remove the stiffness from interfacial flow with surface tension , which has proved to be very successful . due to the coupling between the elastic boundary with the fluid",
    ", it is more difficult to remove the stiffness induced by the elastic force in the immersed boundary method . to remove the stiffness in the immersed boundary method",
    ", we need to decouple the stiffness induced by the elastic force from the fluid flow in such a way that the resulting semi - implicit discretization is still unconditionally stable .",
    "this is accomplished by using a semi - implicit discretization which preserves certain important solution structures which exist at the continuous level . without obtaining this unconditionally stable semi - implicit discretization , a straightforward application of the small scale decomposition to the immersed boundary method",
    "would not provide an efficient semi - implicit scheme with the desirable stability property .",
    "very recently , newren et al . have obtained an unconditionally stable discretization for linear force in @xcite .",
    "however , they did not perform small scale decomposition to their unconditionally stable discretization . as we will demonstrate in this paper , the unconditionally stable semi - implicit discretization without using",
    "the small scale decomposition is still very expensive and the gain over the explicit discretization is quite limited .",
    "we develop several efficient semi - implicit schemes for both the steady stokes flow and the unsteady stokes flow respectively . in both cases ,",
    "our semi - implicit schemes work very well . in the steady stokes flow",
    ", we also develop a fourth order semi - implicit scheme by using the integral factor method .",
    "for the unsteady stokes flow , we develop a second order semi - implicit method by combining our small scale decomposition with a well known second order temporal discretization @xcite . to illustrate the stability properties of our semi - implicit schemes , we apply our methods to several prototype problems and test our schemes for a range of elastic coefficients and viscosity coefficients .",
    "our numerical results confirm that the semi - implicit schemes remove the high order stability constraint induced by the elastic force . in the case of unsteady stokes equation",
    ", we also confirm the second order accuracy of our semi - implicit scheme .",
    "this paper is organized as follows .",
    "first , we review the classical formulation of the immersed boundary method in section 2 .",
    "then , we introduce the arclength and tangent angle formulation in section 3 . in section 4",
    ", we describe the spatial discretization of the immersed boundary method . in section 5 - 6",
    ", we develop the numerical schemes for steady stokes flow and unsteady stokes flow respectively .",
    "the numerical results are presented in section 7 .",
    "our numerical studies will focus on the stability restriction and computational cost of our methods .",
    "some concluding remarks are given in section 8 .",
    "for simplicity , we just consider a viscous incompressible fluid in a two dimensional domain @xmath0 , containing an immersed massless elastic boundary in the form of a closed simple curve @xmath1 .",
    "the configuration of the boundary is given in a parametric form : @xmath2 , @xmath3 , @xmath4 tracks a material point of the boundary .",
    "we consider only the stokes equations in this paper and would neglect the convection term . then the governing equations are given as follows : @xmath5 where @xmath6 is the fluid velocity , @xmath7 is the pressure , @xmath8 and @xmath9 are constant fluid density and viscosity , @xmath10 is the force density , which is not zero only on the boundary and which is infinite there . the force density can be expressed as below @xmath11 @xmath12 denotes the two - dimensional dirac delta function and @xmath13 @xmath14 the choice of function @xmath15 in this paper is computed by hook s law @xmath16 where @xmath17 is the elastic coefficient of the boundary , and @xmath18 is the unit tangent vector along the boundary , which is defined as @xmath19 this choice of force density has been used widely in the literature in both computational and theoretical studies @xcite,@xcite,@xcite",
    ".    we can rewrite ( [ eqa of boundary ] ) in the following way : @xmath20 next , we introduce the spreading and interpolation operations .",
    "the spreading and interpolation operators are defined as follows : @xmath21 it is easy to show that @xmath22 and @xmath23 are adjoint operators : @xmath24 where the inner product are defined as follows : @xmath25    equations ( [ ns in review]),([incomp ] ) are the familiar stokes equations of viscous incompressible fluid . equations ( [ eqa of boundary]),([force density ] ) represent the interaction of the fluid and the elastic boundary .",
    "the elastic boundary applies the force to the fluid , the fluid carries the immersed boundary , and the force density is determined by the configuration of the boundary .",
    "in studying the evolution of a curve , it is useful to represent the curve by its tangent angle @xmath26 and local arclength derivative @xmath27 .",
    "previously , hou , lowengrub and shelley @xcite exploited this formulation and combined it with a so - called `` small scale decomposition '' reformulation to remove the stiffness induced by surface tension .",
    "consider the evolution of a simply closed curve @xmath1 with known normal and tangent velocity fields , @xmath28 .",
    "assume the curve is represented by @xmath29 $ ] .",
    "we define the arclength derivative , @xmath30 , and the tangent vector , @xmath26 , as follows @xmath31 the closed curve @xmath1 evolves according to @xmath32 where @xmath33 and @xmath34 are the unit tangent and normal vectors of the curve respectively . according to the frenet formula , we have @xmath35 , here @xmath36 is the arclength variable .",
    "it is easy to see that @xmath27 and @xmath26 satisfy the following evolution equations @xcite : @xmath37 given @xmath27 and @xmath26 , the curve @xmath1 can be reconstructed up to a translation by integrating ( [ tangent vector ] ) .",
    "however , we also need a point on the boundary to provide the constant of integration .    using the @xmath38 formulation",
    ", we can reformulate the immersed boundary problem as follows : @xmath39 where @xmath40",
    "we use the spectral method to discretize both the stokes equations and the immersed boundary equations in space since we work on periodic domains .",
    "we first discuss the discretization of the stokes equations in a regular @xmath41 cartesian grid with a uniform meshsize @xmath42 .",
    "let @xmath43 and @xmath44 .",
    "the discrete fourier transform and inverse fourier transform are defined as follows : @xmath45 now we introduce the discrete differential operator using the discrete fourier transform defined above . for a function @xmath46 defined in the fluid domain @xmath0 ,",
    "we approximate its spatial derivatives as follows : @xmath47 denote @xmath48 .",
    "the differential operators are discretized in terms of @xmath49 : @xmath50    next , we describe the discretization of the immersed boundary .",
    "we employ a lagrangian grid with grid space @xmath51 .",
    "the number of grid points along the boundary is @xmath52 . for a function @xmath53 defined on the interface @xmath1",
    ", we define the discrete fourier transform and its inverse as follows : @xmath54 when the interface is a closed curve , we can approximate the derivative operator along the interface by the spectral derivative : @xmath55 when the solution is not periodic , we can also use a finite difference method to discretize the derivative , we refer to @xcite for more details .",
    "now we discuss the discretization of the spreading and interpolation operators .",
    "these two operators both involve the use of a discrete delta function .",
    "the discrete delta function we use is introduced by peskin in @xcite : @xmath56 and @xmath57 using the above discrete delta function , we can discretize the spreading and interpolation operator as follows @xmath58 the summation above is over grid points in @xmath1 in ( [ dis of spreading ] ) and over grid points in @xmath0 in ( [ dis of inter ] ) .",
    "operator @xmath59 and @xmath60 are still adjoint using the following discrete inner product : @xmath61 using the inner product defined above , we have : @xmath62 as we will see later , this discrete self - adjoint property is crucial in obtaining our unconditional stable semi - discrete scheme for the immersed boundary problem .",
    "for simplicity , we study the steady stokes flow first .",
    "the governing equations for the steady stokes flow are given as follows : @xmath63    in this simple case , we can use a boundary integral method for the two dimension stokes flow ( page 60 of @xcite ) to solve equations ( [ steady stokes])-([incomp of steady ] ) to get the velocity on the boundary : @xmath64 where @xmath65 and @xmath66      as we can see from ( [ u of steady])-([v of steady ] ) , the velocity field can be expressed as a singular integral with a kernel @xmath67 .",
    "however , the singular velocity integral is nonlinear and nonlocal .",
    "it is difficult to solve for the implicit solution if we treat the velocity integral fully implicitly .",
    "the main idea of the small scale decomposition technique introduced in @xcite is to decompose the singular velocity integral into the sum of a linear singular operator which is a convolution operator independent of time @xmath68 and the configuration of the curve , and a remainder operator which is regular . since the remaining operator , which is nonlinear and nonlocal ,",
    "is regular , the simplified convolution integral operator captures accurately the high frequency spectral property of the original velocity integral .",
    "thus , if we treat only the leading order convolution operator implicitly , but keep the regular remainder operator explicitly , we can effectively remove the stiffness of the original velocity field which comes mainly from the high frequency modes of the solution . in this subsection",
    ", we will show how to perform such small scale decomposition for the immersed boundary method applied to the stokes flow .",
    "observe that in the integral representation of the velocity field , ( [ u of steady])-([v of steady ] ) , the only singular part of the kernel is @xmath67 .",
    "the other part of the kernel is smooth .",
    "thus to the leading order contribution of the velocity field can be expressed as follows : @xmath69 @xmath70 next , we perform a taylor expansion for @xmath71 , @xmath72 and @xmath73 as a function of @xmath74 around @xmath75 . by keeping only the leading order term , we have @xmath76 substituting the above taylor expansions to ( [ lead v ] ) , we get @xmath77 integrating by part , we obtain @xmath78,\\end{aligned}\\ ] ] where @xmath79 is the hilbert transform @xmath80({\\alpha})=\\frac{1}{\\pi}\\int_{-\\infty}^{+\\infty}\\frac{f({\\alpha}')}{{\\alpha}-{\\alpha}'}d{\\alpha}'.\\end{aligned}\\ ] ] using the same method , we can get the leading order contributions of @xmath81 and @xmath82 as follows : @xmath83.\\end{aligned}\\ ] ]    note that if @xmath84 is a smooth function , then the commutator @xmath85u \\equiv \\mathcal{h}(fu ) - f\\mathcal{h}(u)$ ] is a smoothing operator for @xmath86 .",
    "thus we can factor a smooth function from the hilbert transform without changing its leading order spectral property .",
    "suppose that @xmath27 is smooth , then we obtain to the leading order that @xmath87.\\end{aligned}\\ ] ]    applying the same analysis to the eqs ( [ eq of steady s])-([eq of steady theta ] ) gives @xmath88 + \\left(d_{\\delta \\alpha}v- d_{\\delta \\alpha}\\theta u+\\frac{s_b}{4\\mu}\\mathcal{h}[d_{\\delta \\alpha } s_{{\\alpha}}]\\right),\\\\ \\label{leading eq of theta } & & \\theta_t=-\\frac{s_b}{4\\mu}\\left(1-\\frac{1}{s_{\\alpha}}\\right)\\mathcal{h } [ d_{\\delta \\alpha}\\theta]+\\left(\\frac{d_{\\delta \\alpha}u}{s_\\alpha}+ \\frac{v d_{\\delta \\alpha}\\theta}{s_\\alpha}+\\frac{s_b}{4\\mu } \\left(1-\\frac{1}{s_{\\alpha}}\\right)\\mathcal{h}[d_{\\delta \\alpha}\\theta]\\right).\\end{aligned}\\ ] ] note that the leading order operator is linear .",
    "this suggests a natural semi - implicit discretization of the immersed boundary problem .",
    "since we are dealing with a closed immersed boundary , it is natural to work in the fourier space .",
    "furthermore , the hilbert operator has a very simple kernel under the fourier transformation .",
    "notice that @xmath26 is not a periodic function of @xmath75 .",
    "its value increases @xmath89 every time @xmath75 increases @xmath90 .",
    "nevertheless , if we let @xmath91,\\end{aligned}\\ ] ] then @xmath92 is periodic .",
    "it is more convenient to work with @xmath92 than @xmath26 . substituting ( [ periodic theta ] ) into ( [ leading eq of theta ] ) and taking the fourier transform on both sides of ( [ leading eq of sa]),([leading eq of theta ] ) ,",
    "we obtain @xmath93,\\\\ \\label{ft of eq of theta } \\hat{\\phi}_t&=&-\\frac{s_b}{4\\mu}\\gamma|k|\\hat{\\phi } + \\left[\\mathcal{f}\\left(\\frac{d_{\\delta \\alpha}u}{s_\\alpha } + \\frac{v d_{\\delta \\alpha}\\theta}{s_\\alpha}\\right ) + \\frac{s_b}{4\\mu}\\gamma|k|\\hat{\\phi}\\right],\\end{aligned}\\ ] ] where @xmath94 .",
    "we have also used the fact that @xmath95 with @xmath96 being the signature function .",
    "the first term on the right hand side captures the leading order high frequency contribution of the terms from the right hand side .",
    "an important property of this leading order term is that it is linear in @xmath97 and @xmath98 and has constant coefficient in space .",
    "this provides a straightforward application of the implicit time discretization .",
    "since our small scale decomposition is exact near the equilibrium , we can use this result to get the stability constraint of the explicit scheme by using a frozen coefficient analysis .",
    "the stability constraint is given by @xmath99 as we can see , the time step needs to be very small if @xmath17 is large and @xmath9 is small . for example",
    ", if @xmath100 , and @xmath101 , then the stability would require that @xmath102 .",
    "based on the small scale decomposition presented in the previous subsection , we propose two types of semi - implicit schemes in this section .",
    "the first implicit time discretization uses the backward euler method to discretize the leading order term while keeping the lower order term explicit .",
    "this gives rise to the following semi - implicit scheme : @xmath103,\\\\ \\frac{\\hat{\\phi}^{n+1}-\\hat{\\phi}^{n}}{\\delta",
    "t}&=&-\\frac{s_b}{4\\mu}\\gamma|k|\\hat{\\phi}^{n+1}+\\left[\\mathcal{f}\\left(\\frac{d_{\\delta \\alpha}u^n } { s_\\alpha^{n+1}}+\\frac{v^nd_{\\delta \\alpha}\\theta^n}{s_{\\alpha}^{n+1 } } \\right)+\\frac{s_b}{4\\mu}\\gamma|k|\\hat{\\phi}^n\\right].\\end{aligned}\\ ] ] we call the above discretization the semi - implicit method . near equilibrium ,",
    "the stability constraint of this numerical method is @xmath104 , independent of the meshsize @xmath42 .",
    "since the small scale decomposition only captures the leading order contribution from the high frequency components , this method can not eliminate the effect of @xmath17 and @xmath9 completely .",
    "the coefficients @xmath17 and @xmath9 can still affect the time stability through the low frequency components of the solution , which comes from the second term of the right hand side . in order to obtain a semi - implicit discretization with better stability property , we can incorporate the low frequency contribution from the second term in our implicit discretization .",
    "this scheme can be found in the appendix @xmath105 .",
    "we call it the semi - implicit scheme of second kind .",
    "the accuracy of the semi - implicit schemes presented above is just first order . in order to get a high order time discretization",
    ", we can use the integral factor method .",
    "the integral factor method factors out the leading order linear term prior to time discretization .",
    "they usually provide stable and high order time integration methods for stiff problems . to use the integral factor method , we rewrite ( [ ft of eq of sa]),([ft of eq of theta ] ) as @xmath106 where @xmath107 now it is straightforward to discretize this system to high order .",
    "in particular , we can apply the classical fourth order runge - kutta method to discretize the above system to obtain a fourth order semi - implicit scheme .",
    "we remark that although the fourth order semi - implicit scheme based on the integral factor approach is much more accurate than the first order semi - implicit discretization , the stability of the fourth order method is weaker than the first semi - implicit scheme based on the backward euler discretization .",
    "the fact that the higher order discretization gives a weaker stability property is a phenomenon which has been observed for almost all time integration methods .",
    "it is not a restriction of our semi - implicit schemes for the immersed boundary problem .",
    "the semi - implicit schemes we describe above only update the @xmath26 and @xmath27 variables .",
    "we also need to reconstruct the boundary at @xmath108 from @xmath109 and @xmath110 . for this purpose",
    ", we need to update a reference point of the boundary .",
    "this will be done by using an explicit time integration method .",
    "the simplest one is the forward euler method : @xmath111 where @xmath81 and @xmath112 are evaluated at the reference point .",
    "a higher order integration method can be also used . in the explicit update of the reference point ,",
    "we can use the values of @xmath81 and @xmath112 obtained using the semi - implicit discretization from the previous time steps to extrapolate the values of @xmath81 and @xmath112 in the intermediate time steps in our explicit update of the reference point . once we have updated the reference point ,",
    "we can obtain the configuration of the boundary @xmath113 from @xmath114 by integrating ( [ tangent vector ] ) @xmath115    we can use more than one reference point , then average them to get the last configuration .",
    "this can improve the stability constraint significantly .",
    "actually , in our computation , we use two reference points @xmath116 , then take the average to determine the position of the interface at next time step .",
    "since we update only two reference points , the extra cost in updating the reference point is small compared with the overall computational cost .",
    "in this section , we will extend the semi - implicit discretization developed for the steady stokes flow to the unsteady stokes flow .",
    "the governing equations of the immersed boundary method for the unsteady stokes flow are as follows : @xmath117    it is much more difficult to solve the fluid velocity @xmath6 analytically from ( [ unsteady stokes eq])-([unsteady incomp ] ) .",
    "as for the steady stokes flow , we will first derive an unconditionally stable time discretization which will be given in next section and then apply the small scale decomposition to the unconditionally stable time discretization to obtain our efficient semi - implicit schemes .      in this section , we will describe our unconditionally stable semi - implicit discretization of the immersed boundary method for the incompressible unsteady stokes equations and prove its unconditional stability in the sense of total energy is non - increasing .",
    "the unconditionally stable semi - implicit discretization is consisted of two steps . in the first step ,",
    "we update @xmath118 from @xmath119 to @xmath108 , then we get @xmath109 in the second step .    :",
    "update of @xmath120 and @xmath121 .",
    "@xmath122 where @xmath123 , @xmath124 , @xmath125 , @xmath126 and @xmath127 are discrete derivative operators for the eulerian grid and the lagrangian grid respectively , and @xmath128    : update of @xmath109 .",
    "after we have obtained @xmath129 , @xmath130 and @xmath121 , we update @xmath26 at @xmath108 using the following semi - implicit scheme : @xmath131 where @xmath132    it is important to note that the above discretization is not fully implicit .",
    "in fact , both the spreading and interpolation operators are evaluated at the interface @xmath133 from the previous time step . moreover , when solve the @xmath110 and @xmath120 , in ( [ disc unsteady stokes eq ] ) - ( [ stable disc sa eq ] ) , we use @xmath134 instead of @xmath109 to evaluate the force density .",
    "this makes our semi - implicit discretization linear with respect to the implicit solution variables , @xmath120 , @xmath109 , and @xmath121 .",
    "the above semi - implicit discretization essentially decouples the stiffness induced by the elastic force from the fluid equations .",
    "this enables us to remove the stiffness of the immersed boundary method effectively by applying the small scale decomposition and arclength / tangent angle formulation as was done in @xcite .    in the following",
    ", we will prove that this semi - implicit discretization is unconditionally stable in the energy norm .    by using a discrete summation by parts",
    ", we can show that @xmath135    first , we define the total energy of the physical system .",
    "the total energy includes the kinetic energy @xmath136 and the potential energy @xmath137 , which are defined below : @xmath138 the total energy is then defined as @xmath139    below we will prove the unconditional stability of our semi - implicit discretization . to simplify the presentation , we still denote the discrete spectral derivative @xmath140 of a function @xmath141 as @xmath142 .    taking the discrete inner product defined by ( [ inner product omega ] ) of ( [ disc unsteady stokes eq ] ) with @xmath143 and using ( [ sum by part ] )",
    ", we obtain @xmath144 the second term on the right hand side of ( [ kinetic ] ) is zero because the discrete velocity field is divergence free , i.e. @xmath145 . the fourth term can be rewritten as @xmath146 combining ( [ kinetic ] ) and ( [ 4th term ] ) , we can get @xmath147 similarly , by taking the discrete inner product defined by ( [ inner product gamma ] ) of ( [ stable disc sa eq ] ) with @xmath148 and using ( [ sum by part ] ) , we get @xmath149 adding ( [ final kinetic ] ) to ( [ potential ] ) , we have @xmath150 this proves that our semi - implicit discretization is unconditionally stable in the sense that the total energy is non - increasing .",
    "* remark 1 .",
    "* in our proof presented above , we have used two important properties of our semi - implicit discretization .",
    "the first property is that the discrete spreading and interpolation operators are adjoint .",
    "the second property is that the velocity field satisfies the discrete divergence free condition .",
    "it is clear from the above proof that as long as these two properties are satisfied by our spatial discretization , the corresponding semi - implicit discretization introduced in the previous subsection is unconditionally stable .",
    "* remark 2 . *",
    "we remark that the proof above is similar in spirit to that of a semi - linear discretization obtained by newrenn et al in @xcite .",
    "there is some minor difference between the unconditionally stable semi - implicit discretization obtained by newren et al and our unconditionally stable semi - implicit discretization . in the problem considered by newren et al . , the force is a linear function of the interface . on the other hand , in the problem we consider ,",
    "the force is a nonlinear function of the interface ( the rest length of the boundary is not zero ) . by using the @xmath38 formulation ,",
    "the force is a linear function of @xmath27 . by treating @xmath26 explicitly ,",
    "we obtain a semi - implicit discretization that is linear with respect to @xmath27 . due to the decoupling between @xmath27 and @xmath26",
    ", we need to solve two @xmath151 linear systems instead of one @xmath152 linear system in the semi - implicit discretization obtained by newren et al .",
    "* remark 3 .",
    "* for the steady stokes flow , we can also prove the following semi - implicit discretization is unconditionally stable :    : @xmath153    : @xmath154 in this case the total energy is just the potential energy @xmath155 as in the case of the unsteady stokes flow , as long as the velocity field satisfies the discrete divergence free condition and the discrete spreading and interpolation operators are adjoint , we can prove that above semi - implicit discretization is unconditionally stable in the sense of total energy is non - increasing .      in order to apply the small scale decomposition to our unconditionally stable time discretization , we would like to solve for the velocity field at time @xmath108 from the space - continuous version of ( [ disc unsteady stokes eq ] ) and ( [ disc p ] ) using an integral representation : @xmath156 to solve for the velocity field at @xmath108 , we need to use the following free space fundamental solutions in two space dimensions which are defined as follows : @xmath157 these two fundamental solutions can be expressed in terms of the modified bessel function of the second kind @xcite : @xmath158 where @xmath159 and @xmath160 is a modified bessel function of the second kind . by integrating by part",
    ", we can further express the velocity @xmath120 as @xmath161 where @xmath162 is defined as follows : @xmath163 and @xmath164 are all modified bessel functions of the second kind @xcite .    in this subsection",
    ", we will perform a small scale decomposition to the velocity field based on the integral representation ( [ unsteady vel ] ) .",
    "recall that in our semi - implicit discretization , the velocity field at @xmath108 is evaluated on the boundary @xmath133 at @xmath119 .",
    "thus we should perform our small scale decomposition for @xmath165 . to this end , we first write down the integral expression of @xmath165 as follows : @xmath166 to perform the small scale decomposition to the above velocity integral , we would like to decompose the singular velocity kernel as the sum of a linear singular operator of convolution type and a remainder operator which is regular . using the taylor expansion for @xmath167 around @xmath4",
    ", we get the following decomposition : @xmath168 where @xmath169 inside @xmath170 is evaluated at @xmath75 .",
    "notice that @xcite @xmath171 integrating the right hand side of ( [ leading of unsteady v ] ) by parts twice , we get @xmath172 similarly , we can obtain the leading order contribution of @xmath173 as follows : @xmath174 using this decomposition , we obtain the following scheme : @xmath175 where @xmath176 and @xmath177 is the velocity at @xmath108 which is calculated explicitly @xmath178 the derivation of the above semi - implicit scheme is given in appendix @xmath179 .",
    "however , the expressions of @xmath15 and @xmath180 are still too complicated and need to be further simplified .",
    "the leading order linear operator , which contains @xmath181 , is not a convolution operator .",
    "thus , it does not have a simple kernel under the fourier transform as the hilbert operator in the case of the steady stokes flow . to further simplify the kernel , we approximate @xmath182 by @xmath183 . with this approximation ,",
    "the corresponding leading order operator is a convolution operator and can be diagonalized under the fourier transform .",
    "denote @xmath184 . in appendix @xmath185",
    ", we will show that @xmath186 using ( [ fft of k0 ] ) and replacing @xmath182 by @xmath183 , we can simplify the leading order term @xmath187 and @xmath188 under the fourier transform : @xmath189 when @xmath190 , we have @xmath191 . by taylor expanding ( [ fft of t ] ) and ( [ fft of s ] ) with respect to @xmath192 and keeping only the first order term , we obtain the leading order term as follows : @xmath193 which is the same as the steady stoke flow .",
    "this is also consistent with one s physical intuition .",
    "when the viscosity is very large , the flow changes very slowly . the inertial term can be neglected .",
    "when @xmath194 , then @xmath195 , the asymptotic expansion is @xmath196    from the asymptotic expansion above , we can see that our small scale decomposition is also consistent with the linearized stability analysis which stockie and wetton got in @xcite . using the leading order term above , we can get the leading order term of the eigenvalue same with the result in @xcite .",
    "we can also obtain the corresponding stability constraint for the explicit scheme near the equilibrium : @xmath197 where @xmath198 .",
    "the value of @xmath199 depends on @xmath9 .",
    "if @xmath194 , then we have @xmath200 . on the other hand ,",
    "if @xmath190 , we have @xmath201 .",
    "based on the small scale decomposition we developed in the last subsection , we can now describe our semi - implicit numerical scheme . combining the time discretization ( [ disc unsteady stokes eq ] ) -([stable disc theta eq ] ) with the decomposition ( [ leading of unsteady v])-([leading of unsteady u ] ) and using the approximation ( [ fft of t])-([fft of s ] ) , we obtain the following semi - implicit numerical scheme :    : update of @xmath129 and @xmath121 .",
    "@xmath202 where @xmath203 and @xmath177 is the intermediate velocity at @xmath108 which is calculated by solving the unsteady stokes equations implicitly while evaluating the elastic force explicitly : @xmath204    : update of @xmath109 .",
    "once we have updated @xmath205 , @xmath7 , and @xmath30 at @xmath108 , we update @xmath109 using the following semi - implicit scheme : @xmath206 where @xmath207    this is our semi - implicit scheme for the unsteady stokes flow .",
    "the spectral discretization in space has the advantage of being high order accurate and the leading order operator has a simple kernel under the fourier transform . as it is , the time discretization is only first order",
    "based on the first order semi - implicit scheme that we develop in this subsection , we will develop a second order semi - implicit scheme in the next subsection .",
    "a near equilibrium stability analysis shows that the stability constraint of this semi - implicit scheme is of the form @xmath208 , which is independent of the wave number , but still dependent on @xmath17 and @xmath9 .",
    "this is due to the fact that the small scale decomposition does not capture the low frequency components of the solution accurately .",
    "the low frequency components of the solution can affect the stability of the time discretization in two ways .",
    "the first one is through the small scale decomposition , which only captures the leading order contribution of the solution at high wave numbers .",
    "the second one comes from the second term of the right hand side of the dynamic equations for @xmath27 and @xmath26 .",
    "as in the case of the steady stokes flow , we can include the leading order contribution from the second term in our leading order term and treat them implicitly .",
    "this treatment would significantly improve the stability property especially when the elastic coefficient is large or the viscosity is small .",
    "this improved stability is at the expense of solving a linear system for the implicit solution at each time step .",
    "we call this semi - implicit discretization as the semi - implicit method of the second kind .",
    "more discussions on the semi - implicit method of the second kind can be found in appendix @xmath105 .    * remark 4 . *",
    "the leading order term we derive above is calculated analytically using the space - continuous formulation with an unsmoothed dirac delta function . as stockie and",
    "wetton pointed out in @xcite , this analysis over - predicts the stiffness of the immersed boundary method in a practical computation .",
    "if we use the leading order approximation directly , the semi - implicit scheme with the leading order terms derived above tends to over - dissipate the solution . to alleviate this effect in the practical implementation ,",
    "we rescale the leading order term by a coefficient which is calculated at the first time step in the following way : @xmath209 where @xmath210 is the leading order term of @xmath211 , which can be computed from @xmath212 via the fourier transform .",
    "the leading order term we use in a practical computation is actually @xmath213 and @xmath214 .",
    "based on the first order semi - implicit scheme we have developed in the previous subsection , we will derive the corresponding second order semi - implicit scheme in this subsection .",
    "first , we need to use a robust implicit second order temporal discretization . to simplify the presentation",
    ", we will only describe the semi - discrete algorithm .",
    "the space discretization is done in the same way as before .",
    "the second order temporal discretization we use consists of two steps . in the first step , we take a fractional time step from @xmath119 to @xmath215 .",
    "it is same with the first order semi - implicit discretization ( [ disc unsteady stokes eq])-([stable disc theta eq ] ) , except the timestep is @xmath216 . in the second step ,",
    "we integrate the unsteady stokes equations from @xmath119 to @xmath108 based on the midpoint and the trapezoidal rules :    : update of @xmath129 and @xmath121 .",
    "@xmath217 where @xmath218 , @xmath219 , @xmath220 and @xmath221    : update of @xmath109 .",
    "after we have obtained @xmath129 and @xmath121 , we update @xmath26 at @xmath108 using the following semi - implicit scheme : @xmath222 where @xmath223 and @xmath224 here , @xmath225 and @xmath226 are the spreading and the interpolation operators evaluated at @xmath227 . using the same method of analysis , we can prove that the above second order semi - implicit discretization is unconditionally stable in the sense that the total energy is non - increasing .",
    "the first step in our second order method is identical to the first order method except that the time step is @xmath216 instead of @xmath228 .",
    "thus we can use the first order semi - implicit scheme introduced in last subsection to compute it directly .    in the second step",
    ", we can also apply the small scale decomposition with some modifications . after applying the small scale decomposition to the second step of the two - step method",
    ", the second step of the semi - implicit scheme has the form    : update @xmath129 and @xmath121 .",
    "@xmath229 the leading order terms , @xmath15 is given by @xmath230 where @xmath231 , and @xmath177 is the intermediate velocity at @xmath108 which is obtained by solving the unsteady stokes equations implicitly but with the forcing evaluated explicitly : @xmath232 and @xmath233 : after the @xmath129 and @xmath121 are calculated in step 1 , we update @xmath26 at @xmath108 using the following semi - implicit scheme : @xmath234 where @xmath235 and the leading order term is @xmath236 this completely defines our second order semi - implicit scheme .",
    "in this section , we will perform a number of numerical experiments to test the stability of our semi - implicit schemes for both the steady and unsteady stokes equations .",
    "we also compare the performance of our semi - implicit schemes with the explicit scheme and the fully implicit scheme .",
    "our numerical results indicate convincingly that our semi - implicit schemes has a much better stability property that that of the explicit scheme .",
    "moreover , the computational cost of our semi - implicit schemes is comparable to that of an explicit scheme .",
    "thus our semi - implicit schemes offer significant computational saving over the explicit scheme , especially when the number of grid points is large .",
    "the test problem we use is one typically seen in the literature , in which the immersed boundary is a closed loop initially in the shape of an ellipse .",
    "we choose an ellipse initially aligned in the coordinate directions with horizontal semi - axis @xmath237 and vertical semi - axis @xmath238 .",
    "the boundary can be parameterized as follows : @xmath239 the fluid is initially at rest in a periodic domain @xmath240\\times[0,1]$ ] .",
    "we use a periodic boundary condition for the fluid flow . for the initial condition defined above",
    ", the rest state of the boundary is a circle with radius @xmath241 . for the unsteady stokes flow ,",
    "the immersed boundary with the above initial condition evolves as damped oscillations around a circular equilibrium state .",
    "the area is conserved during the time evolution since the flow is incompressible . for the steady stokes flow",
    ", the boundary converges to the circular state without oscillations .",
    "we use a uniform @xmath41 grid to discretize the fluid domain , @xmath0 .",
    "we choose @xmath242 number of grid points to discretize the immersed boundary so that there are approximately 2 immersed boundary points per mesh width .",
    "we use the spectral method to discretize the spatial derivatives both in the fluid domain and along the immersed boundary .",
    "the leading order singular integral is also discretized by the spectral method .      first , in order to reduce the number of parameters in our test problem , we write the equations in terms of the following dimensionless variables to get the nondimensional model @xcite , @xmath243 where @xmath22 is the size of computational domain , @xmath244 is characteristic time .    using these new variables",
    ", we have @xmath245 for the equations of the elastic boundary , the dimensionless variables are @xmath246 then the equations describe the interaction of the boundary and the fluid become @xmath247 where @xmath248 there are two nondimensional parameters in this problem : @xmath249 if we let @xmath250 , then the only parameter in this dimensionless model is @xmath251 which is fixed in our test problem .",
    "so we can always fix @xmath252 in our numerical study .",
    "the stability analysis in the steady stokes flow suggests us to use the total energy as a criterion to test the stability of different numerical methods . for the steady stokes equations ,",
    "the total energy is equal to the potential energy . in fig [ steady 0.1 and 1 ] , we show that the energy for four different numerical methods : the explicit scheme , the semi - implicit scheme of first kind , the 4th order semi - implicit scheme using the integral factor method and the unconditionally stable semi - implicit scheme . in this figure and the subsequent figures , we use the the legend `` semi - implicit '' to denote the semi - implicit scheme of first kind , and the legend `` integral factor '' to denote the semi - implicit scheme based on the integral factor method .",
    "we use two different time steps , 0.1 and 1 , respectively .",
    "when @xmath253 , all the four methods are stable .",
    "they give almost identical results .",
    "when @xmath254 , the explicit scheme becomes unstable , but all the semi - implicit schemes are stable .",
    "in fact , all the semi - implicit schemes remain stable with much larger time steps . in fig [ energy steady 10 ] , we plot the energy of the system for semi - implicit schemes of first kind and the semi - implicit scheme based on the integral factor method with @xmath255 .",
    "fig [ conf steady 10 ] shows the configuration obtained by the two semi - implicit schemes at the final time with @xmath256 .",
    "they both remain as a circle , but lose some area compared with the original state .    , @xmath257 , @xmath258 .",
    "left one : @xmath253 ; right : @xmath254 . here",
    "the legend `` stable semi - implicit '' stands for the unconditionally stable semi - implicit scheme , `` semi - implicit '' for the semi - implicit scheme of first kind , and `` integral factor '' for the semi - implicit scheme based on the integral factor method.,title=\"fig:\",scaledwidth=40.0% ] , @xmath257 , @xmath258 .",
    "left one : @xmath253 ; right : @xmath254 . here",
    "the legend `` stable semi - implicit '' stands for the unconditionally stable semi - implicit scheme , `` semi - implicit '' for the semi - implicit scheme of first kind , and `` integral factor '' for the semi - implicit scheme based on the integral factor method.,title=\"fig:\",scaledwidth=40.0% ]    , @xmath259 , @xmath257 , @xmath258.,scaledwidth=50.0% ]    , @xmath259 , @xmath257 , @xmath258 . left : semi - implicit ; right : integral factor method.,title=\"fig:\",scaledwidth=40.0% ] , @xmath259 , @xmath257 , @xmath258 . left : semi - implicit ; right : integral factor method.,title=\"fig:\",scaledwidth=40.0% ]    next , we compare the performance of our semi - implicit schemes with the explicit and fully implicit schemes .",
    "the fully implicit scheme we use here was originally proposed by tu and peskin in @xcite . in order to make a fair comparison",
    ", we run the implicit schemes ( semi - implicit and fully implicit ) with a time step small enough to make sure that the computational results have a reasonable accuracy .",
    "we take @xmath260 for the fully implicit and the semi - implicit schemes . with this time step ,",
    "the area loss is less than 5% . for the explicit scheme , we take @xmath261 which corresponds to @xmath262 respectively .",
    "these time steps are the largest possible to keep the stability of the explicit scheme .",
    "the time we compute is @xmath263 .",
    "the result is shown in table [ steady com time ] .",
    ".execution time for each computation in seconds .",
    "the legends are defined as follows : `` exp '' stands for the explicit scheme , `` s , i1 '' the semi - implicit method of first kind , `` s , i2 '' the semi - implicit scheme of the second kind , `` s , s , i '' the unconditionally stable semi - implicit method , and `` f , i '' the fully implicit scheme . @xmath264 is the number of grid points along each dimension . [",
    "cols=\"^,^,^,^,^,^\",options=\"header \" , ]     again , we observe the same qualitative behavior as the first order schemes we reported earlier .",
    "in this paper , we have developed several efficient semi - implicit immersed boundary methods for solving the immersed boundary problem for the steady and unsteady stokes equations .",
    "the immersed boundary method has emerged as one of the most useful numerical methods in computing fluid structure interaction , and has found numerous applications .",
    "but it also suffers from the severe time step stability limitation due to the stiffness of the elastic force .",
    "guided by our stability analysis , we have developed several efficient semi - implicit schemes which remove the stiffness of the immersed boundary method . we have demonstrated both analytically and computationally that our semi - implicit schemes have much better stability property than the explicit scheme .",
    "more importantly , unlike most existing implicit or semi - implicit schemes , our semi - implicit schemes can be implemented very efficiently .",
    "in fact , our semi - implicit scheme of the first kind has a computational cost that is essentially the same as that of an explicit scheme in each time step , but with a much better stability property .",
    "the saving in the computational cost is quite substantial .",
    "we have demonstrated this improved stability for a range of parameters and numerical resolutions .",
    "our computational results show that the larger the spatial resolution is , the bigger the computational saving our semi - implicit schemes can offer .",
    "thus the semi - implicit schemes we develop in this paper provide an effective alternative discretization to the explicit method .",
    "one of the essential steps in developing our semi - implicit schemes is to obtain an unconditionally stable semi - implicit discretization of the immersed boundary problem .",
    "this provides us with a building block to construct our efficient semi - implicit schemes .",
    "there are two important observations in constructing the unconditionally stable semi - implicit discretization .",
    "the first one is that we need to preserve certain important solution structures at the discrete level .",
    "specifically , we need to ensure that the discrete velocity field is divergence free , and the discrete spreading and interpolation operators are adjoint . another essential step is to decouple the stiffness of the elastic force from the fluid flow in some appropriate way .",
    "this is difficult to achieve if we use the cartesian coordinate .",
    "but it becomes easier if we use the arclength and tangent angle formulation to describe the dynamics of the immersed interface as was done in @xcite . on the other hand , as we demonstrated in this paper ,",
    "the unconditionally stable semi - implicit scheme is still very expensive to implement , and the saving over the expicit scheme is rather limited .",
    "based on this unconditionally stable semi - implicit discretization , we have developed several efficient schemes for both the steady and the unsteady stokes flows . by applying the small scale decomposition to the unconditionally stable semi - implicit time discretization and further simplifying the leading order singular kernel",
    ", we obtain our semi - implicit scheme .",
    "the advantage of this semi - implicit scheme is that the leading order term can be expressed as a convolution operator , which can be evaluated explicitly using the fourier transformation .",
    "this allows us to solve for the implicit solution explicitly in the spectral space , which offers substantial computational saving over the explicit scheme .",
    "it is a natural step to extend the the semi - implicit schemes developed for the unsteady stokes equations to the navier - stokes equations .",
    "the discretization of the navier - stokes equations shares many similar properties as the unsteady stokes equations if we treat the convection term explicitly .",
    "we have performed a number of numerical experiments to test the stability and the robustness of our semi - implicit immersed boundary methods for the navier - stokes equations .",
    "the results are qualitatively similar to those for the unsteady stokes equations which we have presented in this paper .",
    "these results will be reported in a subsequent paper",
    ".    * acknowledgments .",
    "* we would like to thank profs .",
    "charles peskin and hector ceniceros for a number of stimulating discussions on the immersed boundary method .",
    "the research was in part supported by doe under the doe grant de - fg02 - 06er25727 and by nsf under the nsf frg grant dms-0353838 , itr grant aci-0204932 , and dms-0713670 .",
    "in this appendix , we will derive the semi - implicit method of the second kind in more detail . as we mentioned before",
    ", the small scale decomposition only captures the leading order contribution from the high frequency components , which can not remove the stiffness induced by @xmath17 and @xmath9 completely .",
    "the coefficients @xmath17 and @xmath9 can still affect the time stability through the low frequency components of the solution , which comes from the lower order term of the right hand side . in order to obtain a semi - implicit discretization with better stability property , we can incorporate the low frequency contribution from the second term in our implicit discretization . for the steady stokes flow , this gives rise to the following decomposition : @xmath265,\\\\ \\frac{\\hat{\\phi}^{n+1}-\\hat{\\phi}^{n}}{\\delta t}&=&-\\frac{s_b}{4\\mu}\\gamma|k|\\hat{\\phi}^{n+1}+\\mathcal{f}\\left(\\frac{1}{s_{\\alpha}^{n+1}}v^n\\theta^{n+1}_{\\alpha}\\right)+\\left[\\mathcal{f}\\left(\\frac{u^n_\\alpha}{s_\\alpha^{n+1}}\\right)+\\frac{s_b}{4\\mu}\\gamma|k|\\hat{\\phi}^n\\right],\\end{aligned}\\ ] ] where @xmath94 . by replacing the continuous derivative by the discrete derivative , and discretizing the continuous integral by the trapezoidal rule , we obtain our second semi - implicit scheme .",
    "we call this semi - implicit scheme the semi - implicit scheme of the second kind . near equilibrium",
    ", we can show that the semi - implicit scheme of the second kind is unconditionally stable .",
    "moreover , the stability property is independent of the meshsize , elastic coefficient @xmath17 and viscosity coefficient @xmath9 .",
    "our numerical study also confirms this .",
    "the trade - off is that we need to solve a linear system at each time step to obtain the implicit solution at @xmath108 .",
    "similarly , in the case of unsteady stokes flow , we can also include the second term of the right hand side in the leading order term to derive a scheme with better stability property . in this case",
    ", the leading order term becomes : @xmath266 where the derivative will be discretized by the spectral method and the integration will be discretized by the trapezoidal rule .",
    "we call the above scheme the semi - implicit scheme of the second kind for the unsteady stokes flow .",
    "near equilibrium stability analysis suggests that the semi - implicit scheme of the second kind is unconditionally stable .",
    "in this appendix , we will derive the semi - implicit scheme ( [ velocity ustar])-([ustar ] ) .",
    "we define the operator @xmath267 by the following equations : @xmath268 given @xmath27 , we obtain @xmath6 by solving above equations . from the definition of operator @xmath269 , we have @xmath270 where @xmath177 is calculated from equations ( [ velocity ustar])-([pstar ] ) .",
    "then the equation of @xmath27 can be rewritten as @xmath271 using the small scale decomposition , we get @xmath272 by treating the leading order term implicitly , we obtain our semi - implicit method as follows : @xmath273 this is exactly our semi - implicit scheme ( [ semi implicit sa ] ) .    in the steady stokes case",
    ", we can define the operator @xmath267 similarly : @xmath274 in this case , we have @xmath275 thus , the semi - implicit scheme becomes @xmath276",
    "in this appendix , we derive the the fourier transform of @xmath160 , which is given in ( [ fft of k0 ] ) . by the definition of the fourier transform , we have @xmath277 where @xmath278 is the fourier transform . in the calculation",
    "above , we have used the expression of the bessel function ( p 376 , @xcite ) @xmath279 and the identity below : @xmath280 this proves ( [ fft of k0 ] ) .",
    "d. m. mcqueen and c. s. peskin , _ heart simulation by an immersed boundary method with formal second order accuracy and reduced viscosity .",
    "_ in mechanics for a new millennium , proceedings of the international conference on theoretical and applied mechanics ( ictam ) 2000 , kluwer academic publishers .              c. s. peskin and d. m. mcqueen , _ a three - dimensional computational method for blood flow in the heart : ( i ) immersed elastic fibers in a viscous incompressible fluid , _ j. comput",
    "phys . , * 81 * ( 1989 ) , pp .",
    "372 - 405 ."
  ],
  "abstract_text": [
    "<S> the immersed boundary method has evolved into one of the most useful computational methods in studying fluid structure interaction . on the other hand , </S>",
    "<S> the immersed boundary method is also known to suffer from a severe timestep stability restriction when using an explicit time discretization . in this paper </S>",
    "<S> , we propose several efficient semi - implicit schemes to remove this stiffness from the immersed boundary method for the two - dimensional stokes flow . </S>",
    "<S> first , we obtain a novel unconditionally stable semi - implicit discretization for the immersed boundary problem . using this unconditionally stable discretization as a building block , </S>",
    "<S> we derive several efficient semi - implicit schemes for the immersed boundary problem by applying the small scale decomposition to this unconditionally stable discretization . </S>",
    "<S> our stability analysis and extensive numerical experiments show that our semi - implicit schemes offer much better stability property than the explicit scheme . unlike other implicit or semi - implicit schemes proposed in the literature </S>",
    "<S> , our semi - implicit schemes can be solved explicitly in the spectral space . </S>",
    "<S> thus the computational cost of our semi - implicit schemes is comparable to that of an explicit scheme , but with a much better stability property . </S>"
  ]
}
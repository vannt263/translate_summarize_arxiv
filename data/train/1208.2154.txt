{
  "article_text": [
    "the software framework of the pierre auger observatory @xcite provides tools and infrastructure to analyze data gathered by the observatory .",
    "the observatory is designed to measure the extensive air showers produced by the highest energy cosmic rays ( @xmath0 10@xmath1 ev ) with the goal of discovering their origins and shedding light on their composition .",
    "two different techniques are used to detect air showers .",
    "first , a collection of telescopes is used to detect the fluorescence light produced by excited atmospheric nitrogen as the cascade of particles develops and deposits energy in the atmosphere .",
    "this method can be used only when the sky is moonless and dark , and thus has roughly a 15% duty cycle .",
    "second , an array of detectors on the ground is used to sample particle densities and arrival times as the air shower impinges upon the earth s surface .",
    "each surface detector consists of a tank containing 12 tons of purified water , instrumented with photomultiplier tubes to detect the cherenkov light produced by passing particles .",
    "the surface detector has nearly a 100% duty cycle .",
    "a sub - sample of air showers detected by both instruments , called hybrid events , are very precisely measured and provide an invaluable tool for cross checks and energy calibration .",
    "the observatory , located in mendoza , argentina , was completed in 2008 .",
    "it comprises 24 fluorescence telescopes overlooking an area instrumented with more than 1600 surface detectors spaced 1.5 km apart on a hexagonal grid .",
    "the requirements of such a collaboration of over 400 scientists , from 17 countries , taking data over decades , imposes demands on the analysis software .",
    "it must be flexible enough in order to aggregate individual developments and allow the comparison of algorithms .",
    "it is essential that all physics code be `` exposed '' in the sense that any collaboration member must be able to replace existing algorithms with his or her own in a straightforward manner .",
    "this is meant to encourage independent analysis and ease the comparison of results . finally , while the underlying framework itself may exploit the full power of c++ and object - oriented design , the portions of the code directly used by physicists should not assume a particularly detailed knowledge of these topics .",
    "the framework was originally thought to handle simulation and reconstruction of events detected with the surface detector , the fluorescence detector or both , as well as simulation of calibration techniques and other ancillary tasks such as data preprocessing .",
    "it is essential that the software be extensible to accommodate future upgrades to the observatory instrumentation .",
    "examples of upgrades that have been successfully included in the framework are amiga @xcite , heat @xcite , and the auger engineering radio array @xcite .",
    "the framework includes tools to facilitate multi - format file handling , and to provide access to event as well as time - dependent detector information which can reside in various data sources .",
    "a number of utilities are also provided , including a geometry package which allows manipulation of abstract geometrical objects independent of the choice of coordinate system .",
    "the distribution system incorporates unit and acceptance testing in order to support rapid development of both the core framework and contributed user code .",
    "the framework can be obtained upon request and is released under bsd license .",
    "the core of the framework comprises four main parts .",
    "these are implemented in such a way that the interface , with which the members of the collaboration need to be familiar , is decoupled from the implementation .",
    "the parts are :    * * a centralized configuration mechanism*. the configuration for all parts of the framework is accessed through a unique interface class . in the back end , the class aggregates a large collection of configuration files .",
    "thanks to this structure , it is possible to store the exact configuration used on a particular run . * * a collection of _ modules _ * , together with a mechanism to run sequences of modules .",
    "this collection of modules is where the physics - related algorithms reside and allows the possibility to switch between alternate implementations . * * a detector description*. this is the only gateway to access the status and characteristics of the different detector components at a given time .",
    "this includes the atmospheric conditions .",
    "the detector is represented as a hierarchical structure of independent detector components , making it relatively simple to add new components such as a radio antenna array or an array of buried scintillators . * * an event - based data model*. the _ event _ is the top level of a hierarchical data structure that is used to relay information between modules .",
    "the structure mirrors the hierarchical structure of the detector description , with extra structures to accommodate simulated data , reconstructed quantities , calibration information and raw data .",
    "all this is complemented by other tools such as :    * * generic utilities*. these provide the foundation classes for some abstract algorithms used by the core framework as well as tools related to error logging , unit testing , xml parsing , mathematical manipulation , and physical functions . *",
    "* advanced data summary tree ( adst)*. the adst package is a stand - alone package intended for high - level and fast data analysis .",
    "it includes a graphical display , that allows us to view a subset of the event , and a convenient mechanism for handling standard analysis cuts in a simple manner .",
    "the only external dependency of the adst package is root . * * software packaging and distribution tools*. we have developed the _ auger package environment _ ( ape ) , our own distribution tool designed to deal with the complexity of installing the framework together with all the required external dependencies . * * reading / writing utilities for multiple formats*. these include classes to read from the different raw data formats ( fluorescence , surface and radio ) , different merged formats and the output of various air - shower simulation codes .",
    "it also includes classes to read and write the entire event structure in our own file format",
    ".    we will now proceed to describe each of the aspects mentioned above in more detail while paying attention to its successes as well as the aspects we would have probably avoided if we had had the experience we now have .",
    "all configuration data are stored in a collection of xml files and are accessed through the singleton centralconfig class .",
    "this class provides a collection of _",
    "branches_which is a class that reproduces the hierarchical structure of xml and is described in section [ section : utilities]identified by a unique name .",
    "the location of configuration data is specified in a so - called _ bootstrap _ file that gets passed to the application at run time via the command line .",
    "the locations may be local file names , uris or a reduced set of xpath @xcite addresses .    in principle , each physics algorithm or detector component requires its own configuration and this configuration depends on the particular application .",
    "it has been our policy to limit the amount of hard - coded constants in order to allow changes without recompiling the code and guarantee consistency across the board . as a matter of policy , there are no default configurations for any part of the framework , since there is no single configuration that works for most people in most circumstances .",
    "the number of configuration files distributed with the framework is more than 150 . as a result , assembling",
    "a consistent set of configuration files is not a trivial task .",
    "for this reason we also provide a collection of standard configuration _ suites _ that can be combined , and users can build their own configuration upon them .",
    "the centralconfig class provides a method to produce an xml file containing all the configuration branches that were accessed during the run .",
    "this file conforms to the same xml schema as the bootstrap file and can later be used to reproduce the run with identical configuration .",
    "this configuration logging mechanism may also be used to record the versions of modules and external libraries which are used during a run .",
    "the configuration machinery is also able to verify configuration file contents against a set of _ official _",
    "files by employing md5 digests .",
    "the official configuration files are prepared by the framework developers and the analysis teams , and reference digests are computed from these files at build time . at run time , the digest for each configuration file is recomputed and compared to the reference value . depending on run - time options , discrepant digests can either force program termination , or can simply log a warning .",
    "most of the physics - related code is encapsulated in what we call _ modules_. modules are created using a _ factory _ pattern designed to simplify the process of adding , exchanging and comparing algorithms .",
    "they inherit a common interface , and module authors must implement three abstract methods : a run method , which is called once per event ; and init and finish methods , to be called at the beginning and end of a run .",
    "the return value of all these methods is a value from a set of possible status codes . to make the module available to the framework",
    ", authors invoke a macro in the module class declaration which declares a factory registrar data member to handle the registration and defines a factory function .",
    "this function is then used by the framework to instantiate the module when requested .",
    "each module version is recorded in a static method of the module by extracting a revision control i d at build time . the version is then made available for logging via a method of the module interface .",
    "a typical application consists of a sequence of modules .",
    "we devised a simple xml - based language for specifying the module sequence .",
    "this language includes the possibility to iterate over a sequence of modules , using the status values returned from the run method to decide whether to continue the sequence , skip to the next iteration or break the loop .",
    "this approach has proved sufficiently flexible for the majority of applications , and it is quite simple and easy to learn .",
    "one drawback with this approach is that it is not easy to inspect the event structure in an interactive manner for debugging purposes .",
    "one characteristic of the current implementation of our xml - based sequencing language is that it does not allow for conditional execution .",
    "it was decided that , if we wanted to allow this , it would be better to use a proper scripting language rather than try to extend our xml - based solution . a prototype interface to the event structure",
    "has recently been developed using swig although it has not been widely adopted and tested .",
    "the detector classes provide a unified interface from which one can retrieve all data pertaining to the detector status and characteristics at any given time .",
    "the detector class is a singleton class that is at the root of a class hierarchy that reproduces the hierarchy of the observatory instruments , as displayed in the left side of figure [ fig : detector_hierarchy ] .",
    "it also holds a time stamp that specifies the time of the current snapshot .",
    "modules are not supposed to change the information contained in the detector description and therefore this information is accessed via constant references . at the moment of this writing",
    ", the detector contains four major components : the atmosphere , the surface detector , the fluorescence detector , and the radio detector .",
    "all the classes in the hierarchy implement the _ bridge _ pattern in order to decouple the implementation from the interface .",
    "this keeps the complexity of accessing multiple data sources hidden from the user .",
    "some data are cached in the interface classes as they are considered to be constant in time ( e.g. , station positions ) and there is no need to request them from the back end more than once .",
    "other quantities are considered mutable and are flagged as _ stale _ when the detector time stamp is modified so they are updated the next time they are requested .",
    "they are cached as long as the detector time is fixed .",
    "the back end implementation follows a sort of _ chain of responsibility _ pattern where one class serves as a dispatcher .",
    "each link in the chain is called a _ manager _ while the dispatcher is the _ managerregister _ and they all inherit from a common abstract interface , _ vmanager _ , that specifies a set of pure abstract methods responsible for fetching the data .",
    "derived classes that implement this interface are the ones responsible for fetching the data from a particular data source .",
    "each of the major detector components has an associated managerregister .",
    "figures [ fig : detector_hierarchy ] and [ fig : manager_mechanism ] show this mechanism .",
    "interface classes relay the data requests to the corresponding managerregister , which in turn requests it from the managers until one of them is able to handle the request .",
    "this is what is called a chain of responsibility .",
    "the main draw - back of the original implementation is that the interface needs to provide a method for each data type that is to be handled .",
    "only the first two such methods are displayed in figure [ fig : manager_mechanism ] .",
    "if these methods are pure virtual , this means all derived classes need to be updated whenever a new type is added to the interface",
    ". this interface does not provide a way to request a datum of a certain type when the manager provides it as another type .",
    "however , these problems can easily be overcome by using a union container in the spirit of boost s variant class @xcite .    in the case of the atmosphere",
    ", there is an additional layer that is used to provide higher - level data manipulation .",
    "this layer is composed of a collection of _ models _ that rely on the detector interface classes and are used mostly to interpret atmospheric monitoring data .",
    "there are different kinds of models , each kind inheriting from a pure virtual base class .",
    "currently there are models for cherenkov emission , fluorescence emission , mie scattering , rayleigh scattering , and atmospheric profiles .",
    "this layer is intended as a plugin mechanism and is implemented using a factory template class included in the utilities of the framework .",
    "this enables users to write their own models to replace the standard ones in a straightforward manner .",
    "generally we choose to store static detector information in xml files , and time - varying monitoring and calibration data in mysql databases .",
    "the detector description structure aggregates all this in a transparent manner .",
    "all databases are kept on a main database server located at fermilab .",
    "they are automatically mirrored by a first tier of four additional servers , one in the usa and three in europe .",
    "each collaborating institute must establish a local network of database servers to be used for production .",
    "one of the main drawbacks is that the client / server model does not work in a heavy production environment , as the database servers get overwhelmed by multiple requests and creates unnecessary amounts of network traffic .",
    "one alternative is to distribute the load among a network of servers but it requires the replication of large amounts of data , which is not ideal in highly distributed environments . in order to overcome this problem , we have considered developing tools to slice the databases so only a portion of the data needs to be distributed to the computing nodes .",
    "these slices can be distributed as sqlite databases , which provides a self - contained , server - less sql database engine .",
    "we currently have an sqlite - based prototype implementation , but it is yet to be thoroughly tested in a real production environment .",
    "the event data model contains the raw , calibrated , reconstructed and monte carlo information and serves as the backbone for communication between modules .",
    "the overall structure comprises encapsulated classes organized following the hierarchy of the observatory instruments ( as in figure [ fig : detector_hierarchy ] ) with further subdivisions for accessing such information as monte carlo truth , reconstructed quantities , calibration information and raw data .",
    "the event is built up dynamically as needed , and is instrumented with a simple protocol allowing client code to interrogate the event at any point to discover its current constituents .",
    "this protocol provides the means for a given module to determine whether the input data required to carry out the desired processing is available .",
    "the use of iterators is encouraged by the interface design .",
    "all object collections are accessed using iterators and the containers themselves are purposefully hidden .",
    "the structure of the event interface can not be modified at run time .",
    "this poses restrictions on the information modules can share between each other . on the other hand , it facilitates straightforward module interchangeability . when users need to extend or modify the interface , they can implement their own ad hoc interface .",
    "they can expose it using the singleton template class provided in the utilities although this require a minimum programing proficiency from the user .",
    "though this approach does require periodic developer intervention , it has not proved to be overly problematic for our project .",
    "the framework includes a set of classes to handle various file formats in a transparent way .",
    "it provides two interface classes for this : eventfile and eventfilechain .",
    "most users do not need to access these classes directly , since there is a generic module that does it .",
    "internally , eventfile stores an instance of a class inheriting from a pure virtual class _ veventfile_. the concrete classes to handle different file types are created by a factory and it is therefore not difficult to add a new file type .",
    "it is as simple as inheriting from veventfile and defining the methods for opening , closing , reading , writing , and stepping over events in the file .    using this mechanism , it is possible to read various file formats , including raw event and monitoring formats as well as the different formats employed by the aires @xcite , corsika @xcite , conex @xcite , seneca @xcite , reas @xcite , and mgmr @xcite simulation packages .",
    "the transient and persistent events are decoupled .",
    "this separation was adopted to avoid locking to a single provider solution for serialization .",
    "when a request is made to write event contents to file , the data are transferred from the transient event to the persistent event , which currently uses root @xcite for serialization .",
    "conversely , when data are requested from file , the data is transferred from the persistent event to the appropriate part of the transient event interface .",
    "this approach has the clear disadvantage of creating a maintenance burden , since the whole event hierarchy needs to be replicated .",
    "the framework is built upon a collection of utilities .",
    "these utilities include xml parsing tools , a message logging utility , mathematics ; statistics and physics functions , standard units , testing tools , a geometry package , custom exceptions , a template library , and foundation classes to represent objects such as signal traces ; interpolation tools , and particles . in this section ,",
    "we describe some of the key aspects of the utilities .",
    "this small library includes abstractions for the different design patterns that are used throughout the framework .",
    "these include the factory and singleton patterns .",
    "it also includes the shadowpointer class  a pointer with shadow copy semantic and built - in initialization / deletion safeboolcast  a type - safe way to cast to bool generic tools for streaming data , as well as specialized containers that are used within the event interface .",
    "the latter includes traces , time distributions , tabulated functions and their algorithms .",
    "the parsing of xml files is provided by two main classes .",
    "a container class called _ branch _ replicates the hierarchical structure of xml .",
    "a branch has a name , a collection of attributes stored in a map , and can potentially contain data .",
    "it may also have any number of _ children _ branches .",
    "this class also adds functionality for unit specification .",
    "the actual parsing of the xml files is done by the _ reader _ class .",
    "files are validated using w3c xml schema standard validation @xcite .",
    "schema validation is used not only for internal framework configuration prepared by developers , but also to check configuration files of modules prepared by framework users .",
    "the standard schema types are complemented by a collection of types commonly used in our applications , allowing for quite detailed checking with minimal investment in schema preparation .",
    "these classes are easy to use .",
    "a simple xml file might look like the following :    .... < example >    < entry >      < x unit=\"m \" > 1 < /x",
    ">    < /entry",
    ">    < entry >      < x unit=\"cm \" > 10 < /x",
    ">    < /entry",
    "/example > ....    and the code to write the @xmath2 values to the screen would look like :    .... reader reader(\"file.xml \" ) ; branch branch = reader.gettopbranch ( ) ; child = branch.getfirstchild ( ) ; while(child ) {    double x ;    child.getchild(\"x\").getdata(x ) ;    cout < < x / m < < endl ;    child = child.getnextsibling ( ) ; } ....    thereby printing the values @xmath3 and @xmath4 .",
    "note the use of the units .",
    "units in xml files are specified as xml attributes that are evaluated by the reader . in c++",
    "they are specified using a set of constants  like the @xmath5 within the loop above  that provide a consistent unit system .",
    "since the branch class is our standard container to encapsulate the configuration provided by the centralconfig class , it has become a common data structure to specify configuration through various initialization methods and constructors .",
    "however , this class was meant to access the xml hierarchy and therefore it provides no methods to modify its content .",
    "it is thus not a convenient class to create a configuration on the fly . as a result",
    ", some configuration structures were developed to provide initialization parameters in a few particular cases .      as discussed previously ,",
    "the pierre auger observatory comprises many instruments spread over a large area and , in the case of the fluorescence telescopes , oriented in different directions .",
    "consequently there is no naturally preferred coordinate system for the observatory ; indeed each detector component has its own natural system , as do components of the event such as the air shower itself .",
    "furthermore , since the detector spans more than 50 km from side to side , the curvature of the earth can not generally be neglected .",
    "in such a circumstance , keeping track of all the required transformations when performing geometrical computations is tedious and error prone .",
    "this problem is alleviated in the geometry package by providing abstract geometrical objects such as points and vectors .",
    "operations on these objects can then be written in an abstract way , independent of any particular coordinate system .",
    "internally , the objects store components and track the coordinate system used . there is no need for pre - defined coordinate system conventions , or coordinate system conversions at module boundaries .",
    "the transformation of the internal representation occurs automatically .",
    "a registry mechanism provides access to a selection of global coordinate systems . coordinate systems related to a particular component of the detector , like a telescope , or systems which depend on the event being processed , such as a shower coordinate system , are available through access functions belonging to the relevant classes of the detector or event structures .",
    "coordinate systems are defined relative to other coordinate systems .",
    "ultimately , a single root coordinate system is required .",
    "it must be fixed by convention , and in our case we choose an origin at the center of the earth .",
    "other base coordinate systems and a caching mechanism help to avoid the construction of potentially long chains of transformations when going from one coordinate system to another .",
    "the following is a simple example of how to use the main classes in the geometry package , note that coordinate systems are required whenever components are used explicitly :    .... point pos(x*km , y*km , z*km , poscoordsys ) ; vector dist(deltax , deltay , deltaz ,              othercoordsys ) ; point newpos = pos + dist ; cout < < \" x = \"       < < newpos.getx(outcoordsys)/m       < < \" meters \" ; ....    the surveying of the detector utilizes universal transverse mercator ( utm ) coordinates with the wgs84 ellipsoid . these coordinates are convenient for navigation .",
    "they involve , however , a non - linear , conformal transformation .",
    "the geometry package provides a utmpoint class for dealing with positions given in utm , in particular for the conversion to and from cartesian coordinates .",
    "this class also handles the geodetic conventions , which define the latitude based on the local vertical as opposed to the angle 90@xmath6 , where @xmath7 is the usual zenith angle in spherical coordinates .",
    "the high degree of abstraction makes use of the geometry package quite easy .",
    "uncontrolled , repeated coordinate transformations , though , can be a problem both for execution speed and for numerical precision . to control this behavior , it is possible to force the internal representation of an object to use a particular coordinate system .",
    "the geometry package guarantees that no transformations take place in operation where all objects are represented in the same coordinate system .",
    "this provides a handle for experts to control when transformations take place .",
    "this package is used extensively in all simulation and reconstruction codes in order to guarantee consistency .",
    "the adst , which stands for _ advanced data summary tree _ , is a lightweight software package that is based on root and depends on no other external package .",
    "it was designed to contain all high level variables needed for physics analysis and , if desired , a fair amount of lower level data .",
    "it includes a graphical event display .",
    "since the framework itself does not provide a graphical user interface , the adst package has become the standard tool for event browsing and is an essential complement to the framework .",
    "the adst is currently used to provide the auger collaboration with sets of reconstructed events .",
    "the top level of the adst hierarchical data structure is the recevent class , which loosely mimics the hierarchy of the framework event structure .",
    "the recevents are stored as a ttree in root tfiles and can therefore be inspected interactively . additionally , the receventfile class provides a simple interface to read or write the events in compiled macros or programs .",
    "one small program to loop over all events and select high energy events could look like this :    .... receventfile    outputfile(\"supergzk.root \" ,               receventfile::ewrite ) ; receventfile inputfiles(\"*.root \" ) ; recevent * therecevent = new recevent ( ) ; inputfiles.setbuffers(&therecevent ) ; while ( inputfile.readnextevent ( ) = =          receventfile::esuccess ) {    if ( therecevent.getsdevent ( ) .        getsdrecshower().getenergy()>1.e20 )      outputfile->writeevent ( ) ; } outputfile->close ( ) ; ....    the adst package includes a flexible mechanism for handling analysis cuts .",
    "it ships with a library of predefined standard cuts that can be used right out of the box .",
    "the cuts are specified in a set of files that look like the following :    .... adst cuts version : 1.0 # geometry related cuts # max .",
    "distance , core to closest station maxcoretankdist 1500 .",
    "# min number of pixels used in axis fit naxispixels 5 # profile related cuts # max distance of xmax to edge of fov xmaxinfov 0.0 xmaxerror 40.0 # [ g / cm^2 ] energyerror .2 # ( relative ) profilechi2 2.5 # gh chi2 minviewangle 20 .",
    "# minimum viewing angle ....    an instance of the cut class is created for each cut mentioned in this file .",
    "this class then contains the parameters specified in the file .",
    "a user can extend the cut library by simply defining a boolean function that takes a reference of a cut instance as argument .",
    "the function needs to be added to a registry , together with the identifying string .",
    "the framework depends on some external packages , as described in a previous publication @xcite .",
    "installing and keeping track of these packages in their dependencies turned into one of the major difficulties for users .",
    "the _ auger package environment _ ( ape ) is our own solution to the conflicts between the framework and the different external packages .",
    "it consists of a set of python modules that handle the installation of a collection of _ packages _ and their dependencies . to install each package",
    ", it resolves the tree of dependencies , fetches all the needed sources from a centralized repository , applies any necessary patches , compiles them , and installs them in order .",
    "the main tool is a command - line tool that takes a _ verb _ as first argument .",
    "the main verbs used to install packages are : install , fetch , unpack , and clean .",
    "something like the following will fetch , compile and install the framework and all its dependencies :    .... ape install offline ....    other verbs are used to request information from ape , such as main configuration , any package s configuration , installed packages and environmental variables required to build any package .",
    "the main modules that compose ape are :    * * fetch*. this module defines a downloadmanager class that holds a list of repository servers and takes care of fetching any file from them .",
    "it also takes care of requesting the password from the user whenever is needed and verifying md5 and sha-1 checksums . *",
    "* build*. the build module defines two main classes .",
    "one is the package class that provides default implementations to all steps of the fetching and building process : * * fetch * * unpack * * patch * * configure * * make * * install + and the other is the dependencytree class that resolves the dependencies of a set of packages and flattens the tree onto an ordered list . * * config*. the main configuration is set in one configuration file and each package has its own configuration file .",
    "all of them are parsed using python s configparser module .",
    "this module also handles various command line options . * * environment*. one often needs to set some environmental variables related to a package in order to build other packages downstream .",
    "this module provides an environment class to do this .",
    "it provides methods to generate shell code that sets the environment on shells of the c - shell or bourne - shell families .",
    "a typical configuration file will be very short . in it , one can change most configuration options of any package , add and remove some dependencies , add repository servers , and set the number of processes to use :    .... [ default ] base = % ( home)s / auger / software    [ ape ] jobs = 2 mirrors = mx us    # how to add config options : [ package root ] configureargs.append =   --with - gsl - incdir=$gsl / include / gsl   --with - gsl - libdir=$gsl / lib version = 5.30.00 dependencies.append = gsl    # how to remove config options [ package boost ] configureargs.delete =   --without - python ....    a simple package is completely specified by it s own configuration file .",
    "for example :    .... [ package cmake ] builder = package version = 2.6.4 prefix = % ( base)s / cmake/%(version)s sourcedirectory =    % ( build)s / cmake / cmake-%(version)s tarballs = cmake-%(version)s.tar.gz configurecmd = ./bootstrap    environment = path ....    ape has allowed us to focus on specific versions of the external packages .",
    "every release of the framework is accompanied by a new release of ape , specifying a set of external packages with specific versions .",
    "users are anyway free to change the configuration to suit their needs , as ape is very flexible .",
    "the build system and quality control strategy was also briefly mentioned in a previous publication and are mentioned here for completeness .",
    "consult there and references therein for a bit more detail @xcite .    unit and acceptance testing",
    "are integrated into the framework build and distribution system .",
    "the build system is based on cmake , using cppunit for unit testing .",
    "apart from unit tests , a set of acceptance tests verify that complete applications continue to function as expected during ongoing development .",
    "acceptance tests typically run full physics applications and check for unexpected differences in results .",
    "all tests are conducted periodically using the buildbot framework .",
    "this has proved to be a very effective system for us ; the buildbot is quite easy to set up and configure , and provides rapid feedback to developers allowing prompt resolution of problems .",
    "over the last five years the framework has been used to analyze the data from the observatory .",
    "it has proved to be sufficiently configurable to adapt to a diverse set of applications related to simulation and reconstruction of surface , fluorescence , and radio events , while the user side remains simple enough for c++ non - experts to learn in a reasonable time .",
    "the modular design does allow swapping of algorithms for comparisons of different approaches .",
    "the main difficulty users encounter is the configuration .",
    "configuration of such a complex framework is not easy , but the complexity is reduced by providing a collection of standard configuration suites that the user can use as a starting point .",
    "the other big difficulty has been the installation of the software together with all its dependencies . in order to overcome this difficulty",
    ", we developed _",
    "ape _ , our own solution to package distribution .",
    "tools for data display and rapid prototyping should have been included since the beginning in the design process .",
    "the lack of these tools lead to the parallel development of the adst package , with an event structure that loosely replicates that of the framework . as a result , there are three independent event structures , apart from the raw event , adding to the maintenance cost .",
    "the design of the detector description focused on a flexible structure where one can merge all data streams on a transparent way .",
    "this was accomplished . in principle , for each data stream there should be at least one _ manager_. the merging and manipulation of streams would be done by _",
    "models_. however , the specification of the data streams and how they should be merged was left open .    the original decision to implement",
    "the data storage using mysql and a client / server architecture has encountered difficulties in distributed environments and a sqlite - based solution using database slicing is considered .      *",
    "the current implementation relies on several stand - alone singletons .",
    "also , any user could in principle use a singleton to bypass the event interface .",
    "a lot of information is scattered over these classes and at least some mechanism for controlling and documenting the use of singletons would be desirable . * while modules provide the init and finish methods for initialization and shutdown , this is not true for the framework as a whole .",
    "the framework would be greatly enhanced by an initialization method that would handle the initialization of the different individual components and allow the user to reset its status to the initial state .",
    "the corresponding finish method can guarantee an orderly shutdown in the event of errors .",
    "other collaborations have used different parts of the code .",
    "the na61-shine collaboration has implemented their framework based mostly on our core classes @xcite and the hawc collaboration uses ape for their own package management .",
    "the framework has also been used , with very few modifications , to simulate the detection of air showers from a satellite using the fluorescence technique @xcite .",
    "this shows the power of the geometry package when coupled with our atmosphere interface .",
    "it has also been used to analyse data from the prototype radio antenna at the tunka-133 experiment @xcite and to simulate an array of scintillator detectors @xcite .",
    "abreu _ et  al .",
    "_ , `` advanced functionality for radio analysis in the offline software framework of the pierre auger observatory , '' _ nucl .",
    "a635 , pp . 92102 , 2011 , long author list - awaiting processing ."
  ],
  "abstract_text": [
    "<S> the software framework for data analysis of the pierre auger observatory is a set of computational tools developed to cater to the needs of a large and geographically dispersed collaboration established to measure the spectrum , arrival directions , and composition of ultra - high energy cosmic rays over a period of 20 years . </S>",
    "<S> one of its design goals was to facilitate the collaborative effort by allowing collaborators to progressively contribute small portions of code .    </S>",
    "<S> the observatory has grown over time and it has undergone improvements and additions that have tested the flexibility of the framework . </S>",
    "<S> the framework was originally thought to accommodate a hybrid view of cosmic ray detection , made of a surface and a fluorescence detector . since then </S>",
    "<S> , the framework has been extended to include a radio antenna array and both under - ground and above - ground scintillator arrays .    </S>",
    "<S> different tools from the framework have been used by other collaborations , notably na61/shine and hawc . </S>",
    "<S> all these experiences accumulated over the years allow us to draw conclusions in terms of the successes and failures of the original design .    </S>",
    "<S> software design ; programming framework ; data analysis </S>"
  ]
}
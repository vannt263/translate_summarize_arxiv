{
  "article_text": [
    "complex fluids composed of colloidal particles or dissolved polymers ( herein referred to simply as particles ) are common to many industrial applications .",
    "the dynamics of these materials are determined by the structure and interactions of the constituent elements .",
    "micron and sub - micron sized constituents interact generically through the solvent via hydrodynamic interactions ( hi ) . for the slow viscous flows characteristic of colloidal motion , the his",
    "are determined by the viscous response of the fluid to motion of the immersed particles , as described by the stokes equations . to account for brownian motion of suspended particles , a fluctuating stress acting on the fluid",
    "must be incorporated into its momentum balance . on time scales that are long",
    "relative to the momentum relaxation time of the fluid , this stochastic stress has an equivalent representation as instantaneously correlated stochastic forces acting on directly on the particles .",
    "this suggests two different approaches for modeling stochastic motion of colloids . in one approach ,",
    "the motion of the solvent is represented implicitly .",
    "the particle motion induced by hydrodynamic forces is constructed from multipolar expansions of the fundamental solutions of the stokes equations , and stochastic forces acting directly on the particles are used to determine the particle trajectories . in an alternative approach , the motion of the solvent",
    "is determined explicitly either via discretization and solution of the stokes equations around the particles , or by representing the solvent as a discrete collection of momentum carrying quasi - particles .",
    "for these explicit solvent techniques , the stochastic stress in the fluid domain or stochastic forces acting on the suspended particles and quasi - particles represent thermal fluctuations that satisfy fluctuation dissipation balance .",
    "the most common implicit solvent method is brownian dynamics ( bd ) with hydrodynamic interactions ( bd - hi ) , which approximates fluid - mediated particle interactions with the rotne - prager - yamakawa ( rpy ) tensor @xcite and explicitly integrates out inertia by taking the overdamped limit .",
    "hydrodynamic interactions ( hi ) between particles described by the rpy tensor represent particles as a point force plus a quadrupole .",
    "higher multipole moments ( e.g. torques and stresslets ) can be accounted for with a systematic multipole expansion , as done in stokesian dynamics@xcite .",
    "particle motion is linearly coupled to these multipole moments by the mobility tensor , @xmath1 .",
    "fluctuation dissipation requires the brownian displacements to have zero mean and variance proportional to @xmath1 , necessitating the computation of the action of @xmath2 on a vector .",
    "modern methods can compute the product of @xmath1 with a vector in @xmath3 time , where @xmath4 is the number of particles being modeled.@xcite the long - standing approach to multiplying @xmath2 by a vector has been to use either cholesky decomposition or the iterative approximation of @xcite@xcite . an iterative scheme with better error control",
    "has recently been developed @xcite , but all known iterative schemes have superlinear scaling of computational complexity with number of particles @xcite because the condition number of @xmath1 increases as a power law in @xmath5 .",
    "this leads to superlinear scaling for stochastic simulations using implicit solvent techniques of @xmath6 , restricting dynamic simulations to systems of no more than a few thousand particles . a technique with linear scaling is clearly needed to perform multiscale simulations of structured materials .",
    "we describe here a novel linear - scaling algorithm for calculating brownian motion in hydrodynamically interacting systems .",
    "explicit solvent methods which include fluid inertia , the most common of which are lattice boltzmann ( lb ) @xcite , stochastic rotation dynamics ( srd ) @xcite , and dissipative particle dynamics ( dpd ) @xcite , are commonly cited as having linear scaling in the number of particles , even for stochastic simulations . while the operation count of explicit solvent algorithms is linear in the number of particles , these algorithms are limited by the need to resolve inertial degrees of freedom in the solvent , which results in a significant loss of efficiency on approach to overdamped systems .",
    "to approximately maintain overdamped dynamics at all simulated length scales , the dimensionless numbers relating process time scales to the rate of vorticity diffusion over the system size must be controlled .",
    "this is especially important for flow and self - assembly in structured systems , where particles can form aggregates or percolating networks that approach the system size .",
    "the reynolds number can be written as @xmath7 where @xmath8 is the relevant length scale , @xmath9 is the kinematic viscosity of the fluid , and @xmath10 is the flow time scale .",
    "an overdamped simulation of colloids , nanoparticles , or polymers should be performed so that @xmath11 where @xmath12 is the maximum allowable reynolds number and @xmath13 is the system size .",
    "the simulation time step @xmath14 must be proportional to @xmath15 to resolve vorticity diffusion , where @xmath16 is the particle size .",
    "therefore , the number of time steps needed to resolve the flow time scale is @xmath17 .",
    "each time step requires @xmath18 operations , and thus the overall computational complexity of explicit solvent techniques with control over vorticity diffusion at all length scales is @xmath19 .",
    "a class of `` explicit solvent '' methods directly tackles the overdamped limit by solving the _ steady _ stokes equations@xcite .",
    "this approach avoids using an analytic form of the mobility tensor , which can be an advantage for non - periodic domains@xcite .",
    "furthermore , the brownian displacements needed for stochastic simulations can be generated with little to no extra cost , as demonstrated with the development of the fluctuating immersed boundary ( fib ) method,@xcite and later incorporated into the fluctuating force coupling method ( fcm)@xcite ( which also includes higher - order stresslet corrections in the computation of the hydrodynamic interactions ) .",
    "this is accomplished by using fluctuating hydrodynamics , which in this context amounts to adding a stochastic forcing in the stokes equations in the form of a stochastic stress tensor , rather than adding `` brownian forces '' to the particles as in more traditional approaches .",
    "our pse method builds on this key idea to compute the far - field ( long - ranged ) contribution to the hydrodynamic interactions in a periodic domain , by using fast fourier transforms ( ffts ) to efficiently solve the fluctuating stokes equation.@xcite    both the fcm and fib methods , while @xmath18 , share a number of important shortcomings .",
    "the first of these is that in fcm / fib one can not independently control the form of the _ near - field _ hydrodynamic interactions between particles .",
    "specifically , an rpy - like hydrodynamic mobility is obtained at large distances , but at short distances the hydrodynamic interaction tensor is different from rpy , in a way that depends on the specific form of the kernel ( envelope ) function used to transfer forces from the particles to the fluid . while one can argue that the rpy tensor is only accurate in the far field anyway , it is troublesome from a numerical methods perspective to change the physics of the model in order to make the numerical computations easier .",
    "the second important shortcoming is that methods such as fcm / fib require a grid whose spacing is on the order of the particle size or smaller .",
    "this means that at low densities , where the rpy approximation is most accurate , these methods require large grids that eventually can not even fit in the computer memory .",
    "fib is better than fcm in this respect , since it allows for very compact kernels ( 3 or 4 grid points only in each direction ) through the use of peskin s specially - designed immersed boundary kernels.@xcite however , a notable shortcoming of fib , and in fact of all particle - mesh ewald ( pme ) approaches as well , is that the accuracy of the computations can not be controlled independently and some degree of lack of translational invariance must be accepted and then corrected for.@xcite    our positively - split - ewald method overcomes the super - linear scaling of bd - like methods while bypassing the shortcomings of fcm / fib - like methods and generates brownian displacements whose variance is proportional to the exact , periodic rpy tensor .",
    "the pse method represents the rpy tensor as a sum of two symmetric positive definite operators .",
    "one operator is spatially local and easily evaluated via an exact analytical formula as in bd - like methods .",
    "the other operator is non - local and easily evaluated via fcm / fib - like methods .",
    "the accuracy of the non - local operator is controlled by building on the recently - developed spectral ewald ( se ) method,@xcite which decouples numerical errors in interpolation from numerical errors resulting from discretization and solution of the steady stokes equations .",
    "samples of the brownian displacement are drawn from a sum of two independent displacements whose variances are proportional to the local and the global parts of the rpy tensor , respectively .",
    "local contributions are computed using the recently - proposed iterative lanczos method for evaluating the action of the square root of a matrix.@xcite non - local contributions are computing using an approach inspired by fluctuating hydrodynamics .",
    "we show that this method is @xmath20 and that the accuracy of the various numerical approximations is completely decoupled . we can therefore optimize the algorithm to maximize efficiency , _ without _ sacrificing accuracy , which is controlled independently by a chosen relative error tolerance . in this sense",
    "the discretization , interpolation , and iterative approximations used in the pse method are merely computational tools that do not affect the physics ( rpy mobility ) to within a prescribed tolerance .",
    "the manuscript is organized as follows . in section iia",
    ", we develop the pse method by deriving a new fourier space representation of the rpy tensor in a periodic geometry .",
    "then , we utilize ewald summation to deconstruct this tensor into local and non - local parts . in section iib , we demonstrate how samples of the brownian displacement may be drawn independently from two normal distributions with variance proportional to the local and non - local parts of the rpy tensor . in section iic",
    ", we discuss optimization of algorithm performance while controlling the numerical error in all parts of the proposed algorithm . in section iii , we present various numerical tests which characterize the overall algorithm performance and compare that performance to other standard algorithms as well as analytically derived performance estimates .",
    "the primary difficulty in performing dynamic simulations of hydrodynamically interacting particles is to calculate the velocity imparted to each particle due to forces acting on the other particles . in colloidal systems ,",
    "the dynamics are overdamped , so the fluid motion is described by the stokes equations . the fluid - mediated coupling among particles is represented by the symmetric , positive - definite mobility tensor @xmath1 . in a very common approach",
    ", @xmath1 is constructed using a multipole expansion of the force density on particle surfaces to determine the flow field produced by the particles .",
    "particle motion is inferred from faxn laws that dictate how a flow field exerts stresses on the particle surfaces .",
    "evaluating the multipole expansion requires knowledge of the green s function for stokes flow subject to known boundary conditions .",
    "periodic systems are common in simulation , and the appropriate green s function is given by @xcite@xcite @xmath21 where @xmath22 is the fluid velocity at point @xmath23 propagated by a force @xmath24 located at point @xmath25 and its periodic images on a lattice , @xmath26 is the identity tensor , @xmath27 are drawn from the set of reciprocal space lattice vectors excluding the zero vector , @xmath28 is the fluid viscosity , and @xmath29 is the periodic cell volume .",
    "the sum over periodic images in equation is slowly converging in most cases and divergent for @xmath30 .",
    "for use in practical computation the summation process can be accelerated by using an ewald method .",
    "a splitting function , @xmath31 , introduced by @xcite@xcite is used to decompose the sum into real space and wave space parts @xmath32   \\nonumber \\\\                                             & + \\frac{1}{\\eta v}\\sum_{{\\bf k}\\neq 0}e^{i{\\bf k}\\cdot({\\bf x}-{\\bf y})}\\frac{1}{k^{2 } } h\\left(k,\\xi\\right)\\left({\\bf i}-\\hat{\\bf k}\\hat{\\bf k}\\right ) , \\label{eqn : green2 }      \\end{aligned}\\ ] ] where @xmath33 is the set of real space lattice vectors , @xmath34 , and @xmath35 are the incomplete gamma functions .",
    "the error @xmath36 associated with truncating the sums at finite radii @xmath37 and @xmath38 decays exponentially with a rate controlled by the splitting parameter , @xmath39 .",
    "the real space and wave space truncation errors decay as @xmath40 and @xmath41 , respectively .    assuming rigid spherical particles of equal radius @xmath42 , a multipole expansion using this green s function along with faxn s first formula yields a periodic form of the well - known rotne - prager ( rp ) tensor:@xcite @xmath43_{\\substack{{\\bf x}={\\bf x}_{i},\\\\{\\bf y}={\\bf x}_{j } } } , & i \\ne j \\end{array } \\right.\\ ] ] where @xmath44 is the location of the center of particle @xmath45 , and @xmath46 is the velocity of particle @xmath45 induced by the force @xmath47 on particle @xmath48 .",
    "however , it is known that the operator is symmetric positive definite ( spd ) only when particles are not closer than the sum of their hydrodynamic radii .",
    "additional regularizing corrections to maintain positivity are needed for overlapping configurations .",
    "the common form used in bd - hi simulations is the rotne - prager - yamakawa ( rpy ) tensor , which is spd for all particle configurations , and has the form of an isotropic tensor for an unbounded domain:@xcite @xmath49 where @xmath50 . for periodic domains , a compact form of the rpy tensor",
    "must be derived .",
    "starting with the periodic green s function , it is possible to derive a relationship for the mobility that is positive definite for all particle separations with no special regularization required , and whose constituent parts ( the real space and wave space sums ) are always independently positive - definite .",
    "this approach is based on the integral formulations of the the stokes equations and integral representations of the faxn laws for rigid bodies : @xmath51 @xmath52 where @xmath53 is the velocity field produced by a force density @xmath54 on the particle surface @xmath55 , and @xmath56 is the velocity at which a particle moves in response to a flow field @xmath57 on its surface , induced by the other particles . combining equations and for spheres of equal sizes , and keeping only the first moment in the multipole expansion of the force density , @xmath58 , gives a velocity - force mobility relation between two particles , @xmath59 where @xmath23 is on the surface of particle @xmath45 and @xmath25 is on the surface of particle @xmath48 . as discussed in refs .",
    ", this representation is identical to for non - overlapping particles , but also gives an spd tensor for overlapping particles as well , and can be used to generalize the rpy tensor to other geometries .",
    "using and evaluating the integrals gives the pair mobility for spherical particles with equal finite size , @xmath60 this mobility describes the hydrodynamic interaction between two finite spheres and is positive definite and unconditionally convergent for all particle separations .",
    "the @xmath61 terms are shape factors that account for the way in which spheres propagate flows into the fluid .",
    "equation appears to be a very simple yet previously unknown fourier space representation of the rpy tensor that will be the basis of our positive ewald splitting ; if one replaces the sum by an integral over all @xmath27 , gives the standard free - space rpy tensor .",
    "the first component required to perform bd - hi efficiently is to have a fast method for multiplying the mobility matrix by a vector . for the rpy tensor in an unbounded domain , a fast multipole method ( fmm )",
    "has been developed by rewriting the real - space representation of the far - field rpy tensor as a combination of several scalar ( charge ) monopole and dipole fmm evaluations.@xcite in this approach the near - field rpy correction is simply incorporated in the near - field sum in the fmm . for point stokeslets ( monopoles ) , which do not include",
    "the quadrupolar far - field correction of the rpy tensor , an alternative fast spectral ewald ( se ) method based on using the fft has been developed by lindbo and tornberg@xcite by building on the non - uniform fft ( nufft ) method.@xcite this method was recently incorporated into a stokesian dynamics ( sd ) method for brownian polydisperse sphere suspensions by @xcite@xcite .",
    "the sd mobility includes the rp tensor , but the approach proposed by @xcite@xcite applies the differential formulation of the faxn laws , which yields a non - positive splitting even for well - separated particles .",
    "therefore , inclusion of brownian motion is not straightforward .",
    "here we propose a positive ewald splitting of the rpy tensor that allows us to use the se approach to efficiently and accurately evaluate the far - field contribution and rapidly generate brownian increments .    applying the ewald sum splitting of @xcite@xcite to decompose equation as @xmath62 into a long - ranged wave - space part @xmath63 , and a short - ranged real - space part @xmath64",
    ", we get @xmath65 @xmath66 where @xmath67 and @xmath68 and @xmath69 are scalar functions given by @xmath70 @xmath71 the integrals in equations and have complicated closed - form solutions , which are given in appendix [ app : realspace ] .",
    "the real space part of the self mobility of a particle is given by the limit of equation as @xmath72 : @xmath73    these pairwise mobility functions can be easily applied to many - body simulations by summing the pairwise interactions : @xmath74 this set of sums can be written as the grand mobility tensor , @xmath1 @xmath75 where @xmath56 and @xmath24 are vectors containing the velocity and force on all particles , respectively , and the blocks of @xmath1 correspond to @xmath76 .",
    "like the pairwise mobility , the grand mobility has real space and wave space components , @xmath77 .",
    "@xmath1 is symmetric and positive definite for all particle configurations . using our approach , @xmath78 and @xmath79",
    "are also guaranteed to independently be positive definite for all particle configurations and values of the splitting parameter , as demonstrated in appendix [ app : spd ] .     the shape factor @xmath80 and the splitting factor",
    "@xmath81 collectively control whether a given representation of the rpy tensor can be positively split ; both factors must be non - negative to guarantee positivity , which is required for the sampling method described in the next section .",
    "this is illustrated by the ewald sum of the rpy pair mobility tensor @xmath82 where @xmath83 , and the first sum is the wave space representation of the real space sum .",
    "both @xmath84 and @xmath85 must be non - negative if each sum is to be spd .",
    "since @xmath86 and @xmath87 are chosen independently , both @xmath88 and @xmath89 are required to guarantee a positive splitting for all values of @xmath90 and @xmath39 .",
    "beenakker s formulation of the ewald sum of the rp tensor uses a differential representation of the tensor , shown in , and does not include overlap corrections@xcite .",
    "the wave space representation of the shape factor associated with this formulation is @xmath91 , which clearly is not positive when @xmath92 .",
    "therefore , rpy formulations based on this shape factor , even those that account for overlap corrections , can not ensure a positive splitting with _ any _ splitting factor .",
    "in contrast , the shape factor used in this work is always non - negative .",
    "the two prevalent splitting factors are due to hasimoto @xcite , @xmath93 , used in this work , and beenakker , @xmath94 , which has been used used in prior works @xcite .",
    "of these two , only the hasimoto factor satisfies the condition that @xmath89 .",
    "any choice of @xmath87 such that @xmath89 can be used in principle .",
    "the hasimoto function is convenient because it results in exponentially decaying real - space sums .",
    "additionally , any positive shape factor , e.g. the gaussian kernels employed in the fcm technique @xcite , can be used . the @xmath95 shape factor derived in this work yields unconditionally convergent sums that",
    "_ exactly _ match the stokes drag and rpy tensor for both overlapping and non - overlapping particles , without needing to explicitly consider overlap corrections .      in brownian dynamics simulations ,",
    "particle trajectories evolve according to the overdamped langevin equation @xmath96 where @xmath97 is the set of particle displacements , @xmath98 is boltzmann s constant , @xmath99 is temperature , @xmath24 are forces applied to the particles , and @xmath100 is a collection of independent standard wiener processes . here",
    "@xmath2 denotes a `` square root '' of the mobility and can be any matrix that satisfies @xmath101 , where dagger denotes an adjoint . for translationally - invariant systems , including periodic domains , the divergence of the mobility appearing in the final stochastic drift term vanishes , @xmath102 , and it is not necessary to use special methods in order to capture this term;@xcite one can use the euler - maruyama method for temporal integration .",
    "applying the action of the square root of the mobility is the most time - consuming calculation in a simulation .",
    "iterative methods using e.g. chebyshev polynomials@xcite or a lanczos process @xcite require @xmath103 evaluations of the mobility to evaluate the square root .",
    "the number of iterations required has a power law dependence on the condition number of @xmath1 , which is a monotonically increasing function of @xmath5 .",
    "the total operation count of this approach is @xmath104 for accelerated algorithms such as particle - mesh ewald ( pme ) @xcite or spectral ewald ( se ) @xcite .",
    "we propose an alternative approach utilizing our novel formulation of the mobility to draw independent samples from the real space and wave space parts of the mobility , @xmath105 where @xmath106 and @xmath107 are two independent wiener processes .",
    "the two separate samples can be efficiently approximated by leveraging the structure of @xmath108 and @xmath109 .",
    "the action of @xmath110 can be readily approximated by iterative schemes such as those proposed by @xcite@xcite or @xcite because of the short - ranged nature of the kernels @xmath111 and @xmath112 given in eqs.- for _ finite _ @xmath113 . for a sufficiently small real space cutoff radius ( sufficiently large @xmath39 )",
    ", @xmath114 contains only local interactions and therefore has a compact eigenspectrum .",
    "figure [ fig : eigenspectrum ] shows the condition number @xmath115 of @xmath116 as a function of @xmath39 for varying @xmath5 .",
    "the condition number is independent of @xmath5 at a fixed cutoff radius , therefore the number of iterations is also asymptotically independent of @xmath5 .",
    "the limit @xmath117 represents the condition number of the full rpy mobility , @xmath1 , which contains long - ranged hydrodynamic interactions decaying as the inverse power of the distance , and becomes increasingly ill - conditioned for increasing @xmath5 .     as a function of @xmath118 for varying @xmath5 . ]",
    "the wave space component of the mobility can be written as a sequence of linear operations : @xmath119 where the diagonal matrix @xmath120 maps the wave space representation of forces to velocities , and @xmath121 is the non - uniform discrete fourier transform ( nudft ) operator .",
    "the application of @xmath121 converts the point forces applied on the particles to fourier space .",
    "the application of @xmath120 multiplies each fourier component by the _ non - negative _ factor ( see ) @xmath122 and projects onto the space of divergence free velocity fields via the projector @xmath123 .",
    "lastly , the inverse nudft @xmath124 converts back to real space by evaluating the velocities at the positions of the particles .",
    "the matrix @xmath120 is block - diagonal and positive semi - definite and therefore has a trivial analytical square root .",
    "using the unitary property of the fourier transform allows @xmath125 to be re - expressed as @xmath126 this shows that the wave space brownian displacement can be calculated with a single matrix multiplication @xmath127 the random vector @xmath128 is complex valued , unlike @xmath129 which is real valued .",
    "some care must be exercised to ensure the proper conjugacy conditions and obtain a real - valued particle velocity ; details of this can be found in the article describing the fluctuating fcm method.@xcite    in our work , following the approach taken for point stokeslets in the spectral ewald ( se ) method@xcite , we use the non - uniform fft ( nufft ) method of greengard and lee@xcite to obtain the action of @xmath130 . the only change is to add the additional sinc factors in to give the rpy regularization of the oseen tensor , i.e. , replacing the inverse laplacian @xmath131 with @xmath132 . the se approach is also described in detail and compared to alternative particle mesh ewald ( pme ) approaches in ref . .",
    "here we only give a very brief description .",
    "the basic idea is to transfer information between the particle positions and a regular grid ( to be used for the ffts ) using a gaussian kernel truncated at @xmath133 standard deviations , which is sufficiently resolved by the grid to obtain a desired error bound ( number of digits of accuracy ) .",
    "the spreading of forces from the particles to the grid , and its adjoint operation , interpolation of velocities from the grid to the particles , is accomplished by directly evaluating the gaussian spreading kernel on a subgrid of @xmath134 grid points around each particle , where @xmath135 is a sufficiently large integer for a given error tolerance.@xcite in the se approach we have @xmath136 so @xmath137 , where @xmath24 represents the fft . here",
    "@xmath138 spreads particle forces to the uniform grid and its adjoint @xmath139 is the interpolation operator , where @xmath140 is the volume of a grid cell .",
    "this gives the desired @xmath141 which can be applied to a vector of complex - valued gaussian variates efficiently by a combination of rescaling , inverse fourier transform , and interpolation operations .",
    "the above approach to the stochastic calculation is very similar to the one used in the fib@xcite and fluctuating fcm@xcite methods .",
    "although presented here from an algebraic perspective , the method has a very natural physical interpretation based on fluctuating hydrodynamics .",
    "specifically , it can be seen as generating long - range correlated particle velocities ( stochastic displacements ) by applying a fluctuating stress to the fluid and then interpolating the resulting random velocity field at the positions of the particles.@xcite as in fcm / fib our method employs a smoothly varying kernel to represent the force density applied by the particles in the fluid .",
    "fcm uses gaussian kernels , while fib uses compactly supported kernels ( @xmath142 ) developed for the immersed boundary method.@xcite the present work uses the sinc fourier shape factors convoluted with gaussians as the representation of the force distribution . in the fib approach , unlike both fcm and our pse method , the steady stokes equations are solved using multigrid algorithms instead of ffts ; this makes the method easy to generalize to non - periodic domains . for a periodic system with only monopole terms",
    "included , the brownian increment generation in fcm is analogous to the current approach with the real space sum neglected . for non - overlapping particles , pse is equivalent to fcm if one chooses a value of @xmath39 at which the error in truncating the real space sum at @xmath143 is less than the desired tolerance . the constraint to operate at larger @xmath39 and",
    "the ability to balance calculations between real space and wave space means that the pse approach is potentially superior to fcm for periodic simulations of brownian motion .",
    "specifically , the pse operator splitting provides flexibility to optimize performance across a broad range of volume fractions and microstructures guided by equations and .      the algorithm s performance can be easily optimized when using the se approach @xcite because the sources of numerical error are decoupled and carefully controlled .",
    "there are three independent contributions to the total error in the se approximation of @xmath1 : truncation of the real space sum at finite radius @xmath37 , truncation of the wave space sum at finite wave vector @xmath38 , and quadrature .",
    "the real space and wave space truncation errors are bounded by @xmath40 and @xmath41 .",
    "the quadrature error is bounded by @xmath144 , where @xmath133 is the width of the se guassian used in the nufft , and @xmath135 is the number of grid points in each particle s support per spatial dimension .",
    "all errors decays exponentially , so the method is spectrally accurate .",
    "furthermore , all the errors are independent , so the bounds for each term can be used to separately choose the operating parameters @xmath37 , @xmath38 , @xmath133 , and @xmath135 .",
    "figure [ fig : parity ] shows the error in the sedimentation velocity for a random suspension of 5000 hard spheres ( @xmath145 ) as a function of the desired tolerance .",
    "the error is well - controlled and convergent .    .",
    "the error is defined as @xmath146 , where the exact solution was computed using an error tolerance of @xmath147 .",
    "the dashed line indicates equality between the computed error and the specified error tolerance .",
    "discrete steps ( integer values ) are used for the support size in the nufft quadrature operations , which causes the bump at tolerances near @xmath148 . ]    at a fixed error threshold , @xmath149 and @xmath150 .",
    "the operation count for the real space sum of the mobility calculation is @xmath151 .",
    "the average number of neighbors within a radius of @xmath37 of each particle is @xmath152 in a dispersion with volume fraction @xmath153 and fractal dimension @xmath154 , so @xmath155 .",
    "@xmath156 is an implementation - specific constant that is independent of @xmath5 , @xmath39 , and @xmath153 to within hardware specific effects such as atomic conflicts , memory bandwidth saturation , etc .",
    "drawing the real space random samples requires @xmath157 iterations to compute @xmath158 to within a given tolerance , so the operation count is @xmath159 . because the condition number of @xmath114 is bounded for finite @xmath39 , @xmath157 is independent of @xmath5 .",
    "the operation count to evaluate the wave space sum or draw wave space random samples is @xmath160 .",
    "the fourier transform cost is controlled by @xmath161 , the number of fourier modes per spatial dimension .",
    "the quantity @xmath162 represents the operation count associated with the se particle - to - grid and grid - to - particle quadrature operations .",
    "like @xmath156 , @xmath163 and @xmath164 are implementation - specific and independent of @xmath39 , @xmath153 , and @xmath5 to within hardware effects .",
    "the total operation count is @xmath165 , @xmath166 this expression makes it apparent that work can be freely partitioned between wave space and real space , with the total work optimized at a particular value of the splitting parameter , @xmath167 .",
    "this optimal value is found by setting the derivative equation with respect to @xmath39 equal to zero .",
    "the solution is formally given by product logarithms , but can be simplified in the asymptotic limit of large @xmath5 @xmath168 to leading order , the operation count associated with @xmath167 is @xmath169 for three - dimensional simulations , @xmath170 , so the timing scales between @xmath171 and @xmath172 .",
    "these estimates are nearly linear functions of the system size , and in practice the logarithmic factors are not observed .",
    "the number of terms required to evaluate the wave space sum at a given error tolerance is dependent on the kernel used to represent the particle force distributions .",
    "the smallest length scale that needs to be resolved by the wave space sum is that of a single particle .",
    "therefore , the wave space cutoff radius @xmath38 can be estimated by evaluating the error in the self mobility of a single particle relative to the stokes mobility @xmath173 .",
    "note that in practice a fixed grid spacing @xmath174 is used in the fcm method,@xcite deemed to give sufficient accuracy . given a shape factor for the particle in wave space , @xmath175 ,",
    "the error in the approximate wave space mobility , @xmath176 , is @xmath177 the sum can be bounded by the integral @xmath178 the relative error is given by @xmath179 the positively split ewald kernel is @xmath180 , and the fcm kernel is @xmath181 .",
    "the exponentials in the pse and fcm kernels are equal when @xmath182 .",
    "direct comparison of computational performance between fcm and pse is difficult because of the relative cost of the ffts and the spreading and interpolations depends strongly on implementation specifics .",
    "for example , yeo and maxey@xcite report that in their implementation the fft takes only 15% of the total cost , which is otherwise dominated by spreading and interpolation , whereas we find that the fft is the dominant cost in our implementation . instead of trying to compare numerical performance directly ,",
    "we compare here the size of the fft grid required by the two methods in order to achieve a certain target tolerance .",
    "specifically , we compare the minimum value of @xmath38 required to reach a set error tolerance for the two kernels . in three dimensions ,",
    "the execution time of the fft roughly scales as @xmath183 , therefore @xmath184 provides an estimate of how much faster the fft part of the algorithm will perform when using pse .",
    "figure [ fig : fcmcompare ] shows this ratio as a function of error tolerance . for an error tolerance of @xmath185 , @xmath186 for a typical value of @xmath187 ( see fig . [",
    "fig : timing ] ) , i.e. the fft grid in the pse algorithm is ten times smaller than that in fcm for these parameters .    , where the pse and fcm exponentials have the same decay rate . ]",
    "this error estimate can also be used to provide a slightly tighter bound on the error than that presented by @xcite@xcite .",
    "although there is not an analytical form to equation for the pse kernel , an analytical expression does exist for the approximation @xmath188 .",
    "that error estimate is @xmath189",
    "we have implemented our pse method on gpus using cuda in order to take benefit of the massively parallel architecture .",
    "the real space ewald summation is routinely accelerated with linked - cell lists and a specified truncation radius for the interactions .",
    "this approach can reduce the cost of the sum from @xmath190 to @xmath18 .",
    "our implementation of the real space sum uses state - of - the - art cell and neighbor list algorithms supplied in the hoomd - blue software suite @xcite .",
    "the complicated real space mobility functions are pre - tabulated and stored in textured memory on the gpu , so their evaluation in the mobility multiplication is reduced to a memory fetch .",
    "the wave space sum is also truncated , and is accelerated using the non - uniform fast fourier transform ( nufft).@xcite our nufft implementation is based on the se technique of @xcite@xcite and uses the cuda library cufft to efficiently evaluate the ffts . the spreading operator @xmath138 uses atomic additions and a particle - based ( i.e. , one block of threads per particle ) algorithm to transfer particle forces to the grid .",
    "a particle - based algorithm is also used for @xmath191 to interpolate velocities from the grid to the particles .",
    "the atomic operations are very fast so particle - based approaches to spreading outperform grid - based approaches.@xcite     the wave space parts of the deterministic and stochastic calculations are combined to minimize the number of ffts required .",
    "particle forces are spread to the real space grid , and transformed to wave space with one set of ffts . after projecting the wave space gridded forces to the wave space velocities ,",
    "the brownian velocity is added directly to the grid .",
    "a set of inverse ffts produces the real space velocity distribution on the grid , which is then interpolated onto particles . in principle",
    ", different values of @xmath39 can be used for the stochastic and deterministic calculations , in which case the ffts could not be combined and an additional set of ffts would be required to generate the brownian displacements .    ) .",
    "the cost of the computation in terms of particle timesteps per second ( ptps ) is given for computing @xmath192 ( red ) , brownian displacements calculation @xmath193 using the positively split ewald sum ( blue ) , and brownian calculation using the lanczos method applied to the full mobility ( black ) , where a single matrix - vector product costs the same as the red curve . ]    the performance of the pse algorithm is characterized in figure [ fig : timing ] for a hard sphere dispersion with @xmath194 as a function of @xmath39 and @xmath5 .",
    "the quantity reported , particle timesteps per second ( ptps ) , is the number of particles divided by the average time required to perform one step of the euler - maryuama time stepping method using the pse algorithm , and represents the throughput of the algorithm on a per particle basis . the algorithm has been implemented as a plug - in to the gpu - based molecular dynamics tool kit hoomd - blue @xcite .",
    "all timing data were obtained using an nvidia tesla k40 gpu with the maxwell architecture using a relative error tolerance of @xmath185 for both the ewald splitting and the lanczos iteration for computing the real space contribution to the brownian displacements , unless otherwise noted . drawing a sample of the brownian displacement using the positively split ewald kernel ( blue lines ) is nearly as fast as a mobility calculation @xmath192 ( red lines ) and more than an order of magnitude faster than samples drawn using the lanczos iterative scheme applied to the full mobility tensor ( black lines ) .",
    "the real space and wave space parts of the algorithm scale as expected , as shown by the constant slopes @xmath195 and @xmath196 ( orange lines ) .    ) .",
    "solid lines indicate calculations performed with a relative error tolerance of @xmath185 , dashed lines a relative error of @xmath197 . ]    ) .",
    "solid lines indicate calculations performed with a relative error tolerance of @xmath185 , dashed lines a relative error of @xmath197 . ]",
    "figure [ fig : timing ] is an example of the algorithms performance for a specific configuration . systematically comparing the relative performance of the algorithms",
    "provides more insight into the advantage of the pse method .",
    "the speed of sampling the random displacements @xmath193 , where @xmath198 is a vector of i.i.d .",
    "standard gaussian variables , using the pse method relative to a single mobility product @xmath192 is shown in figure [ fig : relmob ] .",
    "the number of real space iterations required to sample the brownian displacement increases weakly as @xmath39 decreases , but is independent of @xmath5 .",
    "the pse sampling speed relative to the lanczos iteration sampling speed is shown in figure [ fig : rellanc ] .",
    "the lanczos approach applied to the full mobility becomes less efficient with increasing system size because the number of iterations required grows with @xmath5 . applying the lanczos approach to draw samples from the the real space part of the mobility",
    "mitigates this problem because the real space operator has a condition number that is independent of @xmath5 .",
    "the long range hydrodynamic interactions responsible for poor conditioning of the mobility are accounted for in the wave space part of the mobility .",
    "samples are drawn from this part directly with no iterations required . in the stochastic pse algorithm , the extra cost associated with the real space lanczos iterations",
    "is compensated by increasing @xmath39 in order to shift work into the wave space part of the calculation .",
    "figure [ fig : timing ] demonstrates this as a difference in the location of the peak for the mobility product ( red , @xmath199 ) and the random sampling ( blue , @xmath200 ) .     for a hard sphere dispersion of 512,000 particles at different volume fractions .",
    "the inset shows the optimal calculation performance as a function of @xmath5 for each volume fraction . ]",
    "figure [ fig : phiall ] shows the performance of the pse algorithm for 512,000 particles at different volume fractions .",
    "the location of the optima shifts to higher @xmath39 as the volume fraction increases , but the value at the optima remains unchanged .",
    "this is is further demonstrated in the inset , which shows the optimal performance as a function of system size for each @xmath153 .",
    "it is clear that optimal calculation speed is independent of volume fraction at a given @xmath5 . at higher @xmath153",
    "each particle has more interactions at a given cutoff radius , so some work must be shifted to wave space to maintain the optimal speed .",
    "the increase in ptps with @xmath5 is an artifact of the gpu . for smaller numbers of particles",
    "the hardware is not fully utilized .",
    "increasing @xmath5 occupies more gpu cores and it hides latency times , resulting in the observed throughput increase . as shown in table [ tab : tab1 ] , large enough systems exhibit the expected levelling off and mild , logarithmic decrease in simulation throughput once the number of particles is large enough to fully occupy the hardware .",
    ".performance results for calculations of deterministic ( @xmath192 ) and stochastic ( @xmath193 ) velocities for a random suspension of hard spheres ( @xmath201 ) at @xmath187 , which is roughly optimal for all @xmath5 .",
    "@xmath5 is given in thousand of particles , values are given in terms of millions of particle timesteps per second ( @xmath202 ptps ) . [ cols=\"<,^,^,^,^,^,^,^,^,^\",options=\"header \" , ]     [ tab : tab1 ]    .",
    "for the real space calculation , the solid curves are the time to compute the @xmath203 real space multiplications , and the dashed line is the time required to perform all other calculations associated with the lanczos iterations . for the wave space calculation ,",
    "the solid line is the time to compute the fft / ifft pair , plus the wave space multiplication and the random number generation .",
    "the dashed - dotted line is the sum of the spreading and interpolation time .",
    "the total time to evaluate a real and wave space calculation is the sum of the dashed ( dashed - dotted ) and solid lines . ]",
    "figure [ fig : gel ] shows the time to draw the real space and wave space samples for a colloidal gel ( @xmath204 ) and a random hard sphere suspension ( @xmath205 ) .",
    "both systems have the same particle volume fraction , @xmath206 , so they each fill the same amount of space , but the space is occupied differently because the gel has a lower fractal dimension than the hard sphere suspension . the real space sum becomes more efficient at lower fractal dimensions due to the decreased number of neighbors within a given radius , as demonstrated by the offset between the real space timing curves .",
    "the wave space calculation is largely unaffected by the fractal dimension , so the measured times for the hard sphere and gelled dispersion are nearly equal . in the present implementation ,",
    "the peak algorithm performance is no different for different particle configurations .",
    "the effect of fractal dimension is seen in the real space calculation , but is masked near the optimum .",
    "performance floors associated with auxiliary parts of the algorithm become relevant near the optimal speed . in wave space ,",
    "the ffts become nearly as fast as the to - grid and from - grid operations , so the peak performance is set by a balance of all three components . in real space , the evaluation of the near field sums is highly optimized by using the hoomd linked - list implementation and by pre - tabulating the complicated truncated rpy kernels @xmath111 and @xmath112 . the floor is set by the time required to evaluate inner products associated with the lanczos iterates .",
    "the algorithm is so efficient that further speedup of the wave space sum would need to be achieved by improving the to - grid and from - grid operations .",
    "fast to - grid and from - grid projection is an important computational problem . in particular , these operations have received attention for use in reconstructing mri images through combinations of source - based and grid - based approaches to associate the non - uniform data with its grid support @xcite .",
    "on gpus , source - based algorithms reduce to a thread or thread block per particle using atomic operations to add to the grid point .",
    "grid - based approaches , sometimes called gather algorithms , assign a thread or thread block per grid point or region and search for particles within that grid point s vicinity .",
    "the appropriate algorithm for a given application depends on the ratio of the source density ( in our case , particle density ) to the grid point density . in the extreme case of many source and few grid points ,",
    "grid - based approach are optimal . in the opposite extreme of many grid points and few sources , source - based approaches are optimal . both approaches and combinations thereof are reasonable choices for the intermediate case . we have found that in our application the fastest spreading comes from using a block of threads for each particle to assign values to grid points within its support .    the to - grid and from - grid operations",
    "can also be accelerated using compactly supported kernels , as in immersed boundary methods @xcite .",
    "these kernels are computationally efficient because a particle s support is localized to only 3 , 4 , or 6 grid points in each direction .",
    "however , compact kernels are not translationally invariant , which becomes more apparent as the support shrinks .",
    "more importantly , the accuracy with which the rpy tensor is computed can not be controlled independently . in the fib method only the far field rpy behavior is captured up to the quadrupole contributions if a kernel with a suitable positive second moment is used.@xcite    improvements to the spreading operations would lower the wave space floor , accelerating the wave space calculation improving overall efficiency .",
    "this highlights one of the most important features of the pse algorithm : positive splitting of the real and wave space operators provides the ability to shift the optimal parameters based on changes in application or implementation .",
    "improvements in performance of either the real space or wave space part of the algorithm can be translated into an overall speed - up by appropriately varying @xmath39 .",
    "for example , the real space calculation could be more aggressively parallelized by using multiple gpus and a smaller value of @xmath39 .",
    "using @xmath207 gpus can reduce the calculation time roughly by a factor of @xmath207 with efficient domain decomposition algorithms @xcite , and distributing the inner products and additions required of the lanczos iteration across multiple gpus also translates to a factor of @xmath207 increase in speed .",
    "the pse algorithm can be optimized for both software and hardware implementations , with the overall execution speed approaching that of the fastest component of the calculation .",
    "in summary , a new formulation for the rpy mobility tensor has been derived for spherical particles in periodic geometries .",
    "when computed by ewald summation , both the real space and wave space components of this tensor are symmetric , positive definite .",
    "using this fact , a method to rapidly calculate brownian displacements has been developed that represents samples of the brownian displacement as independent contributions drawn from the real space and wave space parts of the mobility .",
    "the real space displacement is calculated using an iterative scheme to approximate the square root of the real space mobility tensor , while the wave space component is calculated directly with a single matrix multiplication using ffts .",
    "the new technique , positively split ewald sampling ( pse ) , is two orders of magnitude faster than the standard chebyshev polynomial approach of @xcite . furthermore",
    "its performance can be tuned based on suspension microstructure and is consistent across a broad range of volume fractions .",
    "pse is flexible and its performance can be easily optimized for various hardware and software implementations .",
    "the algorithm s efficiency enables dynamic simulations of @xmath208 particles in reasonable wall times on modern gpu hardware .",
    "this technique should find many applications in the polymer and soft matter communities , particularly for large scale simulation of self - assembling materials .",
    "an implementation of this algorithm , written as a plug - in for the molecular dynamics suite hoomd - blue @xcite , has been made freely available as part of the supplementary material .",
    "generalization of the pse method is possible . in the present work ,",
    "only the force - velocity coupling among particles was modeled .",
    "however , an extension of the rpy tensor to describe higher order force moments such as torques and stresslets is possible@xcite .",
    "these higher order terms would enter the formulation as a different set of shape factors , @xmath209 , describing how flows due to higher order force distributions on particle surfaces are propagated by the fluid .",
    "likewise , polydispersity may be incorporated directly by making the shape factor size dependent .",
    "notably , equation can not be used to efficiently perform the wave space calculations . instead",
    ", the polydisperse shape factors must be incorporated into the spreading and interpolation functions much as is done in fcm@xcite .",
    "this approach is not taken in the present work with equal sized particles as a slightly larger support for the spreading and interpolation operations is required , which mildly reduces overall performance . a generalization from spherical particles to ellipsoids",
    "may also be possible through determination of an appropriate set of shape factors .",
    "encouragingly , an equivalent rpy tensor for ellipsoids in an unbounded geometry is known and can be formally extended to describe the motion and interactions among colloidal particles with high aspect ratios@xcite . finally ,",
    "extension of the method to non - periodic geometries deserves serious consideration .",
    "one possibility for achieving this is through application of the general geometry ewald method , which splits the hydrodynamic interactions into local and non - local parts by a screening procedure similar to ewald summation@xcite . in this approach , a stokes - like equation subject to non - periodic boundary conditions",
    "is used to represent the non - local part of the interaction , while an analytical form of the hi is used for local part .",
    "ensuring positivity of the local and non - local operators while controlling the numerical error is key to making such an approach competitive with fib , which can also be applied in non - periodic geometries .",
    "as the scale of dynamic simulation of colloidal materials grows , careful consideration must be given to how local errors , which are precisely bounded in the pse method , propagate into global errors .",
    "for example , in most simulations of colloids , particles are subject to a conservative , pair - wise force .",
    "these conservative interactions should yield no net force on interacting particle pairs , but truncation errors in the wave space part of the pse method applied to the mobility calculation will yield translation of the center of mass of the pair at a rate proportional to prescribed numerical tolerance . a local superposition of such errors , as might occur in a phase separating dispersion , could lead to a sizable net force acting on a condensed region of particles and lead to incorrect prediction of phase separation kinetics .",
    "the pse method is spectrally accurate , however , and a smaller local error tolerance may be chosen to limit global erros over the scale of interest . in pme simulations of @xmath210 colloidal particles , local tolerances on the order of @xmath211 have been standard@xcite .",
    "dynamic simulations of larger colloidal dispersions may necessitate tighter tolerances to limit the accumulation of local errors , which could lead to spurious particle fluxes .",
    "alternatively , it may be possible to develop rescaled forms of the spreading and interpolation operators in the spectral ewald approximation to ensure that opposing forces sum to zero in aggregate when discretized .",
    "this is left for future work .",
    "j. swan and a. fiore gratefully acknowledge funding from the mit energy initiative shell seed fund and nsf career award cbet-1554398 .",
    "a. donev and f. balboa were supported in part by the national science foundation under award dms-1418706 , as well as the u.s .",
    "department of energy office of science , office of advanced scientific computing research , applied mathematics program under award number de - sc0008271 .",
    "conversations with edmond chow are gratefully acknowledged .",
    "the scalar functions @xmath111 and @xmath112 are defined according to @xmath212 where @xmath213 * case 1 * , @xmath214    first scalar mobility function : @xmath215 second scalar mobility function : @xmath216 * case 2 * , @xmath217    first scalar mobility function : @xmath218 second scalar mobility function : @xmath219",
    "here we follow the proof presented by @xcite@xcite for the positive - definiteness of a tensor defined by the quadratic form @xmath220 where an asterisk denotes the complex conjugate and the integrals in @xmath23 and @xmath25 are over all space , and @xcite define @xmath221 where @xmath222 is a tensor such that @xmath223 is the force density on the surface of particle @xmath45 and @xmath224 is an arbitrary vector.@xcite in this work , @xmath225 , where @xmath44 is the location of the center of particle @xmath45 , and the pair mobility @xmath76 is @xmath226 because the green s function @xmath227 is positive - definite , and its quadratic form can be related to @xmath76 , @xmath1 can be shown to be positive - definite as well : @xmath228    the wave space representation of @xmath227 is @xmath229 , where @xmath230 . in this representation ,",
    "the mobility is @xmath231 which can be decomposed into separate sums with the splitting function ( homotopy ) @xmath232 to yield @xmath233 where the first term is the real space component of the mobility and the second term is the wave space component .",
    "it follows from @xmath234 and @xmath230 that @xmath235 which completes the proof that @xmath236 and @xmath237 are independently positive - definite .",
    "note that _ any _ choice of @xmath238 such that @xmath239 will produce a positive splitting , provided that each @xmath240 is positive definite .",
    "39ifxundefined [ 1 ] ifx#1 ifnum [ 1 ] # 1firstoftwo secondoftwo ifx [ 1 ] # 1firstoftwo",
    "secondoftwo `` `` # 1''''@noop [ 0]secondoftwosanitize@url [ 0 ]  + 12$12  & 12#1212_12%12@startlink[1]@endlink[0]@bib@innerbibempty \\doibase http://dx.doi.org/10.1063/1.1670977 [ * * ,   ( ) ] @noop * * ,   ( ) @noop * * ,   ( ) link:\\doibase 10.1021/ma00158a043 [ * * , ( ) ] link:\\doibase 10.1137/130920587 [ * * ,   ( ) ] \\doibase",
    "http://dx.doi.org/10.1063/1.4742347 [ * * ,   ( ) , http://dx.doi.org/10.1063/1.4742347 ] \\doibase http://dx.doi.org/10.1063/1.3089668",
    "[ * * ,   ( ) , http://dx.doi.org/10.1063/1.3089668 ] @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) in  @noop _ _  ( ,  )  pp .   @noop * * ,   ( ) @noop * * ,   ( ) \\doibase http://dx.doi.org/10.1063/1.4869866 [ * * ,   ( ) ,  http://dx.doi.org/10.1063/1.4869866 ] \\doibase http://dx.doi.org/10.1016/j.jcp.2014.03.013 [ * * ,   ( ) ] @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) \\doibase http://dx.doi.org/10.1016/j.jcp.2010.08.026 [ * * ,   ( ) ] link:\\doibase 10.1017/s0022112059000222 [ * * ,   ( ) ] @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) link:\\doibase 10.1137/s003614450343200x [ * * , ( ) ] \\doibase    http://dx.doi.org/10.1063/1.451199 [ * * ,   ( ) ] \\doibase http://dx.doi.org/10.1063/1.464397 [ * * ,   ( ) ] \\doibase http://dx.doi.org/10.1063/1.4883520 [ * * ,   ( ) ] \\doibase http://dx.doi.org/10.1016/j.jcp.2016.04.024 [ * * ,   ( ) ] \\doibase http://dx.doi.org/10.1016/j.jcp.2008.01.047 [ * * ,   ( ) ] \\doibase    http://dx.doi.org/10.1016/j.cpc.2015.02.028 [ * * ,   ( ) ] @noop * * ,   ( ) \\doibase http://dx.doi.org/10.1016/j.jpdc.2008.05.009 [ * * ,   ( ) ] ,   \\doibase    http://dx.doi.org/10.1016/j.jpdc.2013.01.001 [ * * ,   ( ) ] \\doibase    http://dx.doi.org/10.1016/j.procs.2015.05.210 [ * * ,   ( ) ] @noop * * , ( ) @noop * * ,   ( ) link:\\doibase 10.1103/physrevlett.98.140602 [ * * ,   ( ) ] @noop * * ,   ( ) @noop * * ,   ( )"
  ],
  "abstract_text": [
    "<S> we present a new method for sampling stochastic displacements in brownian dynamics ( bd ) simulations of colloidal scale particles . </S>",
    "<S> the method relies on a new formulation for ewald summation of the rotne - prager - yamakawa ( rpy ) tensor , which guarantees that the real - space and wave - space contributions to the tensor are independently symmetric and positive - definite for all possible particle configurations . </S>",
    "<S> brownian displacements are drawn from a superposition of two independent samples : a wave - space ( far - field or long - ranged ) contribution , computed using techniques from fluctuating hydrodynamics and non - uniform fast fourier transforms ; and a real - space ( near - field or short - ranged ) correction , computed using a krylov subspace method . </S>",
    "<S> the combined computational complexity of drawing these two independent samples scales linearly with the number of particles . </S>",
    "<S> the proposed method circumvents the super - linear scaling exhibited by all known iterative sampling methods applied directly to the rpy tensor that results from the power law growth of the condition number of tensor with the number of particles . for geometrically dense microstructures ( fractal dimension equal three ) , </S>",
    "<S> the performance is independent of volume fraction , while for tenuous microstructures ( fractal dimension less than three ) , such as gels and polymer solutions , the performance improves with decreasing volume fraction . </S>",
    "<S> this is in stark contrast with other related linear - scaling methods such as the force coupling method and the fluctuating immersed boundary method , for which performance degrades with decreasing volume fraction . </S>",
    "<S> calculations for hard sphere dispersions and colloidal gels are illustrated and used to explore the role of microstructure on performance of the algorithm . in practice , </S>",
    "<S> the logarithmic part of the predicted scaling is not observed and the algorithm scales linearly for up to @xmath0 particles , obtaining speed ups of over an order of magnitude over existing iterative methods , and making the cost of computing brownian displacements comparable the cost of computing deterministic displacements in bd simulations . </S>",
    "<S> a high - performance implementation employing non - uniform fast fourier transforms implemented on graphics processing units and integrated with the software package hoomd - blue is used for benchmarking . </S>"
  ]
}
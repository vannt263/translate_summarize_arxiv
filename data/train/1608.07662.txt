{
  "article_text": [
    "since the 1930s , a number of researchers have investigated _ planar _ graphs . in particular , a beautiful and classical result , known as _ fry s theorem _ , asserts that every plane graph admits a _ straight - line drawing _",
    "@xcite . indeed , a straight - line drawing is the most popular drawing convention in graph drawing .",
    "more recently , researchers have investigated _ 1-planar graphs _",
    "( i.e. , graphs that can be embedded in the plane with at most one crossing per edge ) , introduced by ringel  @xcite .",
    "subsequently , the structure of 1-planar graphs has been investigated  @xcite .",
    "in particular , pach and toth  @xcite proved that a 1-planar graph with @xmath0 vertices has at most @xmath1 edges , which is a tight upper bound .",
    "unfortunately , testing the 1-planarity of a graph is np - complete  @xcite , however linear - time algorithms are available for special subclasses of 1-planar graphs  @xcite .     and @xmath2 and one crossing @xmath3 made by an edge pair @xmath4 , where edge @xmath5 may have a crossing when the configuration is part of a 1-plane embedding ; ( b ) w - configuration with four edges @xmath6 , @xmath5 , @xmath7 and @xmath8 and two crossings @xmath3 and @xmath9 made by edge pairs @xmath10 and @xmath11 , where possibly @xmath12 and @xmath13 ; ( c ) augmenting a crossing @xmath14 made by edges @xmath15 and @xmath16 with a new cycle @xmath17 depicted by gray lines .",
    "]    thomassen  @xcite proved that every 1-plane graph ( i.e. , a 1-planar graph embedded with a given _ 1-plane embedding _ ) admits a straight - line drawing if and only if it does not contain any of two special 1-plane graphs , called the _ b - configuration _ or _",
    "w - configuration _ , see fig .",
    "[ fi : bw - configuration ] .    recently , hong et al .",
    "@xcite gave an alternative constructive proof , with a linear - time testing algorithm and a drawing algorithm .",
    "they also showed that some 1-planar graphs need an exponential area with straight - line drawing .",
    "we call a 1-plane embedding _ straight - line drawable _ ( _ sld _ for short ) if it admits a straight - line drawing , i.e. , it does not contain a b- or w - configuration by thomassen  @xcite . in this paper",
    ", we investigate a problem of `` re - embedding '' a given non - sld 1-plane embedding @xmath18 into an sld 1-plane embedding @xmath19 . for a given 1-plane embedding @xmath18 of a graph @xmath20",
    ", we call another 1-plane embedding @xmath19 of @xmath20 a _ cross - preserving embedding _ of @xmath18 if exactly the same set of edge pairs make the same crossings in @xmath19 .",
    "more specifically , we first characterize the _ forbidden configuration _ of 1-plane embeddings that can not admit an sld cross - preserving 1-plane embedding .",
    "based on the characterization , we present a linear - time algorithm that either detects the forbidden configuration in @xmath18 or computes an sld cross - preserving 1-plane embedding @xmath19 .",
    "formally , the main problem considered in this paper is defined as follows .    *",
    "re - embedding a 1-plane graph into a straight - line drawing *   + * input : * a 1-planar graph @xmath20 and a 1-plane embedding @xmath18 of @xmath20 . + * output : * test whether @xmath18 admits an sld cross - preserving 1-plane embedding @xmath19 , and construct such an embedding @xmath19 if one exists , or report the forbidden configuration .",
    "+ to design a linear - time implementation of our algorithm in this paper , we introduce a _ rooted - forest representation of non - intersecting cycles _ and an efficient procedure of flipping subgraphs in a plane graph .",
    "since these data structure and procedure can be easily implemented , it has advantage over the complicated decomposition of biconnected graphs into triconnected components  @xcite or the spqr tree  @xcite .",
    "let @xmath21 be a set of @xmath0 elements , and let @xmath22 be a family of subsets @xmath23 .",
    "we say that two subsets @xmath24 are _ intersecting _ if none of @xmath25 , @xmath26 and @xmath27 is empty .",
    "we call @xmath22 a _ laminar _ if no two subsets in @xmath22 are intersecting . for a laminar @xmath22 , the _ inclusion - forest _ of @xmath22",
    "is defined to be a forest @xmath28 of a disjoint union of rooted trees such that ( i ) the sets in @xmath22 are regarded as the vertices of @xmath29 , and ( ii ) a set @xmath30 is an ancestor of a set @xmath31 in @xmath29 if and only if @xmath32 .    [ le : cyclic ] for a cyclic sequence @xmath33 of @xmath34 elements , define an interval @xmath35 to be the set of elements @xmath36 with @xmath37 if @xmath38 and @xmath39 if @xmath40 .",
    "let @xmath22 be a set of intervals .",
    "a pair of two intersecting intervals in @xmath22 @xmath41when @xmath22 is not a laminar@xmath42 or the inclusion - forest of @xmath22 @xmath41when @xmath22 is a laminar@xmath42 can be obtained in @xmath43 time .    throughout the paper",
    ", a graph @xmath44 stands for a simple undirected graph .",
    "the set of vertices and the set of edges of a graph @xmath20 are denoted by @xmath45 and @xmath46 , respectively . for a vertex @xmath47 ,",
    "let @xmath48 be the set of edges incident to @xmath47 , @xmath49 be the set of neighbors of @xmath47 , and @xmath50 denote the degree @xmath51 of @xmath47 .",
    "a simple path with end vertices @xmath52 and @xmath47 is called a _",
    "@xmath53-path_. for a subset @xmath54 , let @xmath55 denote the graph obtained from @xmath20 by removing the vertices in @xmath56 together with the edges in @xmath57 .",
    "a _ drawing _ @xmath58 of a graph @xmath20 is a geometric representation of the graph in the plane , such that each vertex of @xmath20 is mapped to a point in the plane , and each edge of @xmath20 is drawn as a curve .",
    "a drawing @xmath58 of a graph @xmath44 is called _ planar _ if there is no edge crossing .",
    "a planar drawing @xmath58 of a graph @xmath20 divides the plane into several connected regions , called _ faces _ , where a face enclosed by a closed walk of the graph is called an _ inner face _ and the face not enclosed by any closed walk is called the _ outer face_.",
    "a planar drawing @xmath58 _ induces _ a plane embedding @xmath18 of @xmath20 , which is defined to be a pair @xmath59 of the _ rotation system _",
    "( i.e. , the circular ordering of edges for each vertex ) @xmath60 , and the outer face @xmath61 whose facial cycle @xmath62 gives the outer boundary of @xmath58 .",
    "let @xmath63 be a plane embedding of a graph @xmath64 .",
    "we denote by @xmath65 the set of faces in @xmath18 , and by @xmath66 the facial cycle determined by a face @xmath67 , where we call a subpath of @xmath66 a _ boundary path _ of @xmath68 . for a simple cycle @xmath69 of @xmath20 ,",
    "the plane is divided by @xmath69 in two regions , one containing only inner faces and the other containing the outer area , where we say that the former is _ enclosed _ by @xmath69 or the _ interior _ of @xmath69 , while the latter is called the _ exterior _ of @xmath69 .",
    "we denote by @xmath70 the set of inner faces in the interior of @xmath69 , by @xmath71 the set of edges in @xmath72 with @xmath73 , and by @xmath74 the set of end - vertices of edges in @xmath71 .",
    "analogously define @xmath75 , @xmath76 and @xmath77 in the exterior of @xmath69 .",
    "note that @xmath78 and @xmath79 .    for a subgraph @xmath80 of @xmath20 , we define the embedding @xmath81 of @xmath18 induced by @xmath80 to be a sub - embedding of @xmath18 obtained by removing the vertices / edges not in @xmath80 , keeping the same rotation system around each of the remaining vertices / crossings and the same outer face .",
    "in this and next subsections , let @xmath82 stand for a plane embedding of @xmath83 of a biconnected simple graph @xmath44 with @xmath84 .",
    "let @xmath69 be a simple cycle in @xmath20 .",
    "we define the _ direction _ of @xmath69 to be an ordered pair @xmath85 with @xmath86 such that the inner faces in @xmath70 appear on the right hand side when we traverse @xmath69 in the order that we start @xmath52 and next visit @xmath47 . for simplicity",
    ", we say that two simple cycles @xmath69 and @xmath87 are _ intersecting _ if @xmath70 and @xmath88 are intersecting .",
    "let @xmath89 be a set of simple cycles in @xmath20 .",
    "we call @xmath89 _ inclusive _ if no two cycles in @xmath89 are intersecting , i.e. , @xmath90 is a laminar . when @xmath89 is inclusive , the _ inclusion - forest _ of @xmath89 is defined to be a forest @xmath91 of a disjoint union of rooted trees such that : + ( i ) the cycles in @xmath89 are regarded as the vertices of @xmath29 , and + ( ii ) a cycle @xmath69 is an ancestor of a cycle @xmath87 in @xmath29 if and",
    "only if @xmath92 .",
    "let @xmath93 denote the inclusion - forest of @xmath89 .",
    "for a vertex subset @xmath54 , let @xmath94 denote the set of cycles @xmath95 such that @xmath96 for some vertex @xmath97 , where we denote @xmath98 by @xmath99 for short .",
    "[ le : cycle - inclusion ] for @xmath82 , let @xmath89 be a set of simple cycles of @xmath20 . then any of the following tasks can be executed in @xmath100 time .    1 .",
    "decision of the directions of all cycles in @xmath89 ; 2 .",
    "detection of a pair of two intersecting cycles in @xmath89 when @xmath89 is not inclusive , and construction of the inclusion - forests @xmath101 for all vertices @xmath102 when @xmath89 is inclusive ; and 3 .",
    "construction of the inclusion - forest @xmath93 when @xmath89 is inclusive .      a simple cycle @xmath69 of @xmath20",
    "is called a _ spindle _ ( or a _ @xmath53-spindle _ ) of @xmath18 if there are two vertices @xmath103 such that no vertex in @xmath104 is adjacent to any vertex in the exterior of @xmath69 , where we call vertices @xmath52 and @xmath47 the _ junctions _ of @xmath69 .",
    "note that each of the two subpaths of @xmath69 between @xmath52 and @xmath47 is a boundary path of some face in @xmath65 .",
    "given @xmath82 , we denote the rotation system around a vertex @xmath102 by @xmath105 . for a spindle @xmath69 in @xmath18 , let @xmath106 denote the set of the two junctions of @xmath69 .",
    "_ flipping a @xmath53-spindle @xmath69 _ means to modify the rotation system of vertices in @xmath74 as follows : + ( i ) for each vertex @xmath107 , reverse the cyclic order of @xmath108 ; and + ( ii ) for each vertex @xmath109 , reverse the order of subsequence of @xmath110 that consists of vertices @xmath111 .    every two distinct spindles @xmath69 and @xmath87 in @xmath18 are non - intersecting , and they always satisfy one of @xmath112 , @xmath113 , and @xmath114 .",
    "let @xmath89 be a set of spindles in @xmath18 , which is always inclusive , and let @xmath93 denote the inclusion - forest of @xmath89 .",
    "when we modify the current embedding @xmath18 by flipping each spindle in @xmath89 , the resulting embedding @xmath115 is the same , independent from the ordering of the flipping operation to the spindles , since for two spindles @xmath69 and @xmath87 which share a common junction vertex @xmath116 , the sets @xmath111 and @xmath117 do not intersect , i.e. , they are disjoint or one is contained in the other .",
    "define the _ depth _ of a vertex @xmath102 in @xmath29 to be the number of spindles @xmath118 such that @xmath119 , and denote by @xmath120 the parity of depth of vertex @xmath47 , i.e. , @xmath121 if the depth is odd and @xmath122 otherwise .    for a vertex @xmath102 , let @xmath123 $ ] denote the set of spindles @xmath95 such that @xmath124 , and let @xmath125}$ ] be the embedding obtained from @xmath18 by flipping all spindles in @xmath123 $ ] .",
    "let @xmath126 mean the reverse of a sequence @xmath127 .",
    "then we see that @xmath128}}(v)$ ] if @xmath121 ; and @xmath129}}(v ) \\rangle$ ] otherwise . to obtain the embedding @xmath115 from the current embedding @xmath18 by flipping each spindle in @xmath89",
    ", it suffices to show how to compute each of @xmath120 and @xmath130}}(v)$ ] for all vertices @xmath102 .",
    "[ le : spindle ] given @xmath82 , let @xmath89 be a set of spindles of @xmath18 . then",
    "any of the following tasks can be executed in @xmath131 time .    1 .",
    "decision of parity @xmath120 of all vertices @xmath102 ; and 2 .",
    "computation of @xmath130}}(v)$ ] for all vertices @xmath102 .",
    "a drawing @xmath58 of a graph @xmath44 is called a _ 1-planar drawing _ if each edge has at most one crossing . a 1-planar drawing @xmath58 of graph @xmath20 induces a _ 1-plane embedding _",
    "@xmath18 of @xmath20 , which is defined to be a tuple @xmath132 of the _ crossing system _ @xmath133 of @xmath134 , the rotation system @xmath60 of @xmath135 , and the outer face @xmath61 of @xmath58 .",
    "the _ planarization _",
    "@xmath136 of a 1-plane embedding @xmath18 of graph @xmath20 is the plane embedding obtained from @xmath18 by regarding crossings also as graph vertices , called crossing - vertices .",
    "the set of vertices in @xmath136 is given by @xmath137 .",
    "for a notational convenience , we refer to a subgraph / face of @xmath136 as a subgraph / face in @xmath18 .",
    "let @xmath138 be a 1-plane embedding of graph @xmath20 .",
    "we call another 1-plane embedding @xmath139 of graph @xmath20 a _ cross - preserving _",
    "1-plane embedding of @xmath18 when the same set of edge pairs makes crossings , i.e. , @xmath140 . in other words ,",
    "the planarization @xmath141 is another plane embedding of @xmath136 such that the alternating order of edges incident to each crossing - vertex @xmath142 is preserved .    to eliminate the additional constraint on the rotation system on each crossing - vertex @xmath142",
    ", we introduce `` circular instances . ''",
    "we call an instance @xmath82 of 1-plane embedding _ circular _ when for each crossing @xmath142 , the four end - vertices of the two crossing edges @xmath15 and @xmath16 that create @xmath3 ( where @xmath143 and @xmath144 appear in the clockwise order around @xmath3 ) are contained in a cycle @xmath145 of eight crossing - free edges for some vertices @xmath146 , @xmath147 of degree 2 , as shown in fig .",
    "[ fi : bw - configuration](c ) . by definition , @xmath3 and",
    "each @xmath146 not necessarily appear along the same facial cycle in the planarization @xmath148 .",
    "for example , path @xmath149 is part of such a cycle @xmath150 for the crossing @xmath9 in the circular instance in fig .",
    "[ fi : new - examplesa](a ) , but @xmath3 and @xmath151 are not on the same facial cycle in the planarization .    a given instance can be easily converted into a circular instance by augmenting the end - vertices of each pair of crossing edges as follows . in the plane graph , @xmath136 , for each crossing - vertex @xmath142 and its neighbors @xmath143 and @xmath144 that appear in the clockwise order around @xmath3 , we add a new vertex @xmath146 , @xmath147 and eight new edges @xmath152 and @xmath153 , @xmath147 ( where @xmath154 means @xmath155 ) to form a cycle @xmath156 of length 8 whose interior contains no other vertex than @xmath3 .",
    "let @xmath80 be the resulting graph augmented from @xmath20 , and let @xmath157 be the resulting 1-plane embedding of @xmath80 augmented from @xmath18 .",
    "note that @xmath158 holds .",
    "we easily see that if @xmath18 admits an sld cross - preserving embedding @xmath19 then @xmath157 admits an sld cross - preserving embedding @xmath159 .",
    "this is because a straight - line drawing @xmath160 of @xmath19 can be changed into a straight - line drawing @xmath161 of some cross - preserving embedding @xmath159 of @xmath157 by placing the newly introduced vertices @xmath146 within the region sufficiently close to the position of @xmath3 .",
    "we here see that cycle @xmath156 can be drawn by straight - line segments without intersecting with other straight - line segments in @xmath160 .",
    "note that the instance @xmath162 remains circular for any cross - preserving embedding @xmath19 of @xmath18 . in the rest of paper , let @xmath82 stand for a circular instance @xmath163 with @xmath164 vertices and let @xmath165 denote its planarization @xmath148 .",
    "[ fi : new - examplesa ] shows examples of circular instances @xmath82 , where the vertex - connectivity of @xmath165 is 1 .    as an important property of a circular instance ,",
    "the subgraph @xmath166 with crossing - free edges is a spanning subgraph of @xmath20 and the four end - vertices of any two crossing edges are contained in the same block of the graph @xmath166 .",
    "the biconnectivity is necessary to detect certain types of cycles by applying lemma  [ le : cycle - inclusion ] .     with a cut - vertex @xmath52 of @xmath165 , where the crossing edges are depicted by slightly thicker lines : ( a ) hard b - cycles @xmath167 and @xmath168 , ( b ) hard b - cycle @xmath167 and a nega - cycle @xmath168 whose reversal is a hard b - cycle , where vertices @xmath169 and crossings @xmath170 .",
    "]      for a circular instance @xmath82 , finding a cross - preserving embedding of @xmath18 is effectively equivalent to finding another plane embedding of @xmath165 so that all the current b- and w - configurations are eliminated and no new b- or w - configurations are introduced . to detect the cycles that can be the boundary of a b- or w - configuration in changing the plane embedding of @xmath165 , we categorize cycles containing crossing vertices in @xmath165",
    ".    a _ candidate posi - cycle _ ( resp .",
    ", _ candidate nega - cycle _ ) in @xmath165 is defined to be a cycle @xmath171 or @xmath167 in @xmath165 with @xmath172 and @xmath173 such that the interior ( resp . ,",
    "exterior ) of @xmath69 does not contain a crossing - free edge @xmath174 and any other crossing vertex @xmath175 adjacent to both @xmath52 and @xmath47 .     and",
    "@xmath167 in @xmath165 , where white circles represent vertices in @xmath135 while black ones represent crossings in @xmath133 : ( a ) candidate posi - cycle of length 3 , ( b ) candidate posi - cycle of length 4 , ( c ) candidate nega - cycle of length 3 , and ( d ) candidate nega - cycle of length 4 . ]    fig .",
    "[ fi : candidate - cycle_a](a)-(b ) and ( c)-(d ) illustrate candidate posi - cycles and candidate nega - cycles , respectively .",
    "let @xmath176 and @xmath177 be the sets of candidate posi - cycles and candidate nega - cycles , respectively . by definition",
    "we see that the set @xmath178 is inclusive , and hence @xmath179 .",
    "a candidate posi - cycle @xmath69 with @xmath171 ( resp . , @xmath167 )",
    "is called a _",
    "b - cycle _ if + * ( a)-(b ) : * the exterior of @xmath69 contains no vertices in @xmath180 adjacent to @xmath3 ( resp .",
    ", contains exactly one vertex in @xmath180 adjacent to @xmath3 or @xmath9 ) .",
    "note that @xmath174 when @xmath171 is a b - cycle , as shown in fig .",
    "[ fi : candidate - cycle_b](a ) .",
    "[ fi : candidate - cycle_b](b ) and ( d ) illustrate the other types of b - cycles .     and",
    "@xmath167 in @xmath165 , where white circles represent vertices in @xmath135 while black ones represent crossings in @xmath133 : ( a ) b - cycle of length 3 , which is always soft , ( b ) soft b - cycle of length 4 , ( c ) soft w - cycle , ( d ) hard b - cycle of length 4 , ( e ) hard w - cycle , ( f ) nega - cycle whose reversal is a hard b - cycle , ( g ) nega - cycle whose reversal is a hard w - cycle , ( h ) candidate nega - cycle of length 4 that is not a nega - cycle whose reversal is a hard b - cycle , and ( i ) candidate nega - cycle of length 4 that is not a nega - cycle whose reversal is a hard w - cycle . ]",
    "a candidate posi - cycle @xmath167 is called a _",
    "w - cycle _ if + * ( a)-(w ) : * the exterior of @xmath69 contains no vertices in @xmath180 adjacent to @xmath3 or @xmath9 .",
    "[ fi : candidate - cycle_b](c ) and ( e ) illustrate w - cycles .",
    "let @xmath181 ( resp . ,",
    "@xmath182 ) be the set of w - cycles ( resp .",
    ", b - cycles ) in @xmath18 . clearly a w - cycle ( resp . , b - cycle ) gives rise to a w - configuration ( resp .",
    ", b - configuration ) .",
    "conversely , by choosing a w - configuration ( resp .",
    ", b - configuration ) so that the interior is minimal , we obtain a w - cycle ( resp . ,",
    "b - cycle ) .",
    "hence we observe that the current embedding @xmath18 admits a straight - line drawing if and only if @xmath183 .    a w- or b - cycle @xmath69 is called _ hard _ if + * ( b ) : * length of @xmath69 is 4 , and the interior of @xmath167 contains no inner face @xmath68 whose facial cycle @xmath66 contains both vertices @xmath52 and @xmath47 , i.e. , some path connects @xmath3 and @xmath9 without passing through @xmath52 or @xmath47 .    on the other hand , a w- or b - cycle @xmath167 of length 4 that does not satisfy condition ( b ) or a b - cycle of length 3 is called _",
    "soft_. we also call a hard b- or w - cycle a _ posi - cycle_.    fig .",
    "[ fi : candidate - cycle_b](d ) and ( e ) illustrate a hard b - cycle and a hard w - cycles , respectively , whereas fig .",
    "[ fi : candidate - cycle_b](a ) and ( b ) ( resp .",
    ", ( c ) ) illustrate soft b - cycles ( resp . , a soft w - cycle ) .    a cycle @xmath167 is called a _",
    "nega - cycle _ if it becomes a posi - cycle when an inner face in the interior of @xmath69 is chosen as the outer face .",
    "in other words , a nega - cycle is a candidate nega - cycle @xmath167 of length 4 that satisfies the following conditions ( a ) and ( b ) , where ( a ) ( resp .",
    ", ( b ) ) is obtained from the above conditions ( a)-(b ) and ( a)-(w ) ( resp . ,",
    "( b ) ) by exchanging the roles of `` interior '' and `` exterior '' : + * ( a ) : * the interior of @xmath69 contains at most one vertex in @xmath180 adjacent to @xmath3 or @xmath9 ; and + * ( b ) : * the exterior of @xmath69 contains no face @xmath68 whose facial cycle @xmath66 contains both vertices @xmath52 and @xmath47 .",
    "[ fi : candidate - cycle_b](f ) and ( g ) illustrate nega - cycles , whereas fig .",
    "[ fi : candidate - cycle_b](h ) and ( i ) illustrate candidate nega - cycles that are not nega - cycles .",
    "let @xmath184 ( resp . ,",
    "@xmath185 ) denote the set of posi - cycles ( resp .",
    ", nega - cycles ) in @xmath18 . by definition",
    ", it holds that @xmath186 and @xmath187 .",
    "we define a forbidden configuration that characterizes 1-plane embeddings , which can not be re - embedded into sld ones .",
    "forbidden cycle pair _ is defined to be a pair @xmath188 of a posi - cycle @xmath167 and a posi- or nega - cycle @xmath168 in @xmath165 with @xmath169 and @xmath170 to which @xmath165 has a @xmath189-path @xmath190 and a @xmath191-path @xmath192 such that :    1 .   when @xmath193 , paths @xmath190 and @xmath192 are in the exterior of @xmath69 and @xmath87 , i.e. , @xmath194 , where @xmath69 and @xmath87 can not have any common inner face ; and 2 .   when @xmath195 , paths @xmath190 and @xmath192 are in the exterior of @xmath69 and the interior of @xmath87 , i.e. , @xmath196 , where @xmath69 is enclosed by @xmath87 .    in ( i ) and ( ii ) , @xmath190 and @xmath192",
    "are not necessary disjoint , and possibly one of them consists of a single vertex , i.e. , @xmath197 or @xmath198 .",
    "the pair of cycles @xmath69 and @xmath87 in fig .",
    "[ fi : new - examplesb](a ) ( resp . , fig .",
    "[ fi : new - examplesb](b ) ) is a forbidden cycle pair , because there is a pair of a @xmath189-path @xmath199 and a @xmath191-path @xmath200 that satisfy the above conditions ( i ) ( resp . ,",
    "note that the pair of cycles @xmath69 and @xmath87 in fig .",
    "[ fi : new - examplesa](a)-(b ) is not forbidden cycle pair , because there are no such paths .     with a cut - vertex @xmath201 of @xmath165 , where the crossing edges are depicted by slightly thicker lines : ( a ) forbidden cycle pair with hard b - cycles @xmath167 and @xmath168 ( b ) forbidden cycle pair with a hard b - cycle @xmath167 and a nega - cycle @xmath168 whose reversal is a hard b - cycle , where vertices @xmath169 and crossings @xmath170 . ]",
    "our main result of this paper is as follows .",
    "[ th : main ] a circular instance @xmath82 admits an sld cross - preserving embedding if and only if it has no forbidden cycle pair . finding an sld cross - preserving embedding of @xmath18 or a forbidden cycle pair in @xmath165 can be computed in linear time .    *",
    "proof of necessity : * the necessity of the theorem follows from the next lemma .    for a cycle @xmath202 ( resp . , @xmath185 ) with @xmath172 and @xmath173 in @xmath165 , we call a vertex @xmath203 an _ in - factor _ of @xmath69 if the exterior of @xmath204 ( resp .",
    ", the interior of @xmath205 ) has a @xmath206-path @xmath207 and a @xmath208-path @xmath209 , i.e. , @xmath210 is in @xmath211 ( resp . , @xmath212 ) .",
    "paths @xmath207 and @xmath209 are not necessarily disjoint .    [",
    "le : forbidden - cycle - pair ] given @xmath213 , let @xmath19 be a cross - preserving embedding of @xmath18 .",
    "then :    1 .",
    "let @xmath203 be an in - factor of a cycle @xmath214 in @xmath165 .",
    "then cycle @xmath69 is a posi - cycle @xmath41resp .",
    ", a nega - cycle@xmath42 in @xmath215 if and only if @xmath201 is in the exterior @xmath41resp . , interior@xmath42 of @xmath69 in @xmath19 ; 2 .   for a forbidden cycle pair @xmath188 ,",
    "one of @xmath69 and @xmath87 is a posi - cycle in @xmath215 @xmath41hence any cross - preserving embedding of @xmath18 contains a b- or w - configuration and @xmath82 admits no sld cross - preserving embedding@xmath42 .",
    "* proof of sufficiency : * in the rest of paper , we prove the sufficiency of theorem  [ th : main ] by designing a linear - time algorithm that constructs an sld cross - preserving embedding of an instance without a forbidden cycle pair .",
    "in this section , @xmath82 stands for a circular instance such that the vertex - connectivity of the plane graph @xmath165 is at least 2 . in a biconnected graph @xmath165 , any two posi - cycles @xmath216 @xmath217with @xmath169 give a forbidden cycle pair if they do not share an inner face , because there is a pair of @xmath189-path and @xmath191-path in the exterior of @xmath69 and @xmath87 .",
    "analogously any pair of a posi - cycle @xmath69 and a nega - cycle @xmath87 such that @xmath87 encloses @xmath69 is also a forbidden cycle pair in a biconnected graph @xmath165 .    to detect such a forbidden pair in @xmath165 in linear time",
    ", we first compute the sets @xmath218 , @xmath219 , @xmath181 , @xmath182 , @xmath184 and @xmath185 in @xmath18 in linear time by using the inclusion - forest from lemma  [ le : cycle - inclusion ] .",
    "[ le : candidate - cycle ] given @xmath82 , the following in ( i)-(iv ) can be computed in @xmath220 time .    1 .   the sets @xmath218 , @xmath219 and the inclusion - forest @xmath29 of @xmath221 ; 2 .   the sets @xmath181 and @xmath182 ; 3 .",
    "the sets @xmath184 , @xmath185 and the inclusion - forest @xmath222 of @xmath223 ; and 4 .",
    "a set @xmath224 such that @xmath225 is an inner face in the interior of a soft b- or w - cycle @xmath69 with @xmath226 .",
    "given @xmath82 , a face @xmath227 is called _ admissible _ if all posi - cycles enclose @xmath68 but no nega - cycle encloses @xmath68 .",
    "let @xmath228 denote the set of all admissible faces in @xmath229 .",
    "[ le : admissible_face ] given @xmath82 , it holds @xmath230 if and only if no forbidden cycle pair exists in @xmath18 . a forbidden cycle pair ,",
    "if one exists , and @xmath228 can be obtained in @xmath220 time .    by the lemma , if @xmath82 has no forbidden cycle pair , i.e. , @xmath231 , then any new embedding obtained from @xmath18 by changing the outer face with a face in @xmath228 is a cross - preserving embedding of @xmath18 which has no hard b- or w - cycle .",
    "suppose that we are given a circular instance @xmath82 such that @xmath165 is biconnected and @xmath232 .",
    "we now show how to eliminate all soft b- and w - cycles in @xmath165 in linear time using the inclusion - forest from lemma  [ le : cycle - inclusion ] and the spindles from lemma  [ le : spindle ] .",
    "[ le : eliminate - soft ] given @xmath82 with @xmath232 , there exists an sld cross - preserving embedding @xmath233 of @xmath18 such that @xmath234 for the facial cycle @xmath235 @xmath41resp .",
    ", @xmath236 of the outer face @xmath237 @xmath41resp . , @xmath238 , which can be constructed in @xmath220 time .",
    "given an instance @xmath82 with a biconnected graph @xmath165 , we can test whether it has either a forbidden cycle pair or an admissible face by lemmas  [ le : candidate - cycle ] and  [ le : admissible_face ] . in the former",
    ", it can not have an sld cross - preserving embedding by lemma  [ le : forbidden - cycle - pair ] . in the latter",
    ", we can eliminate all hard b- and w - cycles by choosing an admissible face as a new outer face , and then eliminate all soft b- and w - cycles by a flipping procedure based on lemma  [ le : eliminate - soft ] .",
    "all the above can be done in linear time .    to treat the case where the vertex - connectivity of @xmath165 is 1 in the next section ,",
    "we now characterize 1-plane embeddings that can have an sld cross - preserving embedding such that a specified vertex appears along the outer boundary . for a vertex @xmath203 in a graph @xmath20 , we call a 1-plane embedding @xmath18 of @xmath20 _ @xmath201-exposed _ if vertex @xmath201 appears along the outer boundary of @xmath18",
    ". we call @xmath82 _ @xmath201-feasible _ if it admits a @xmath201-exposed sld cross - preserving embedding @xmath19 of @xmath18 .",
    "[ le : v - feasibility ] given @xmath82 such that @xmath230 , let @xmath201 be a vertex in @xmath135 . then :    1 .",
    "the following conditions are equivalent : + ( a ) @xmath18 admits no @xmath201-exposed sld cross - preserving embedding ; + ( b ) @xmath228 contains no face @xmath68 with @xmath239 ; and + ( c ) @xmath165 has a posi- or nega - cycle @xmath69 to which @xmath201 is an in - factor ; 2 .   a @xmath201-exposed sld cross - preserving embedding or a posi- or nega - cycle @xmath69 to which @xmath201 is an in - factor can be computed in @xmath220 time .",
    "in this section , we prove the sufficiency of theorem  [ th : main ] by designing a linear - time algorithm claimed in the theorem . given a circular instance @xmath82 , where @xmath165 may be disconnected , obviously we only need to test each connected component of @xmath165 separately to find a forbidden cycle pair .",
    "thus we first consider a circular instance @xmath82 such that the vertex - connectivity of @xmath165 is 1 ; i.e. , @xmath165 is connected and has some cut - vertices .",
    "a block @xmath240 of @xmath165 is a maximal biconnected subgraph of @xmath165 . for a biconnected graph @xmath165",
    ", we already know how to find a forbidden cycle pair or an sld cross - preserving embedding from the previous section . for a trivial block @xmath240 with @xmath241",
    ", there is nothing to do .",
    "if some block @xmath240 of @xmath165 with @xmath242 contains a forbidden cycle pair , then @xmath82 can not admit any sld cross - preserving embedding by lemma  [ le : forbidden - cycle - pair ] .",
    "[ le : block - infeasible ] for a circular instance @xmath82 such that the vertex - connectivity of @xmath165 is 1 , let @xmath243 and @xmath244 be blocks of @xmath165 and let @xmath245 be a @xmath246-path of @xmath165 with the minimum number of edges , where @xmath247 for each @xmath248 .",
    "if @xmath249 has a posi- or nega - cycle @xmath250 to which @xmath251 is an in - factor for each @xmath248 , then @xmath252 is a forbidden cycle pair in @xmath165 .    for a linear - time implementation",
    ", we do not apply the lemma for all pairs of blocks in @xmath253 .",
    "a block of @xmath165 is called a _ leaf block _ if it contains only one cut - vertex of @xmath165 , where we denote the cut - vertex in a leaf block @xmath240 by @xmath254 . without directly searching for a forbidden cycle pair in @xmath165 ,",
    "we use the next lemma to reduce a given embedding by repeatedly removing leaf blocks .    [",
    "le : good_leaf_block ] for a circular instance @xmath82 such that the vertex - connectivity of @xmath213 is 1 and a leaf block @xmath240 of @xmath165 such that @xmath255 is @xmath254-feasible , let @xmath256 be the graph obtained by removing the vertices in @xmath257 . then    1 .",
    "the instance @xmath258 is circular ; and 2 .",
    "if @xmath258 admits an sld cross - preserving embedding @xmath259 , then an sld cross - preserving embedding @xmath260 of @xmath18 can be obtained by placing a @xmath254-exposed sld cross - preserving embedding @xmath261 of @xmath255 within a space next to the cut - vertex @xmath254 in @xmath259 .",
    "the first step tests whether @xmath165 has a block @xmath240 such that @xmath262 has a forbidden cycle pair , based on lemma  [ le : v - feasibility ] .",
    "if one exists , the algorithm outputs a forbidden cycle pair and halts .",
    "after the first step , no block has a forbidden cycle pair . in the current circular instance @xmath82 ,",
    "one of the following holds : + ( i ) the number of blocks in @xmath165 is at least two and there is at most one leaf block @xmath240 such that @xmath262 is not @xmath254-feasible ; + ( ii ) @xmath165 has two leaf blocks @xmath240 and @xmath263 such that @xmath262 is not @xmath254-feasible and @xmath264 is not @xmath265-feasible ; and + ( iii ) the number of blocks in @xmath165 is at most one .    in ( ii ) , @xmath254 is an in - factor of a cycle @xmath69 in @xmath255 and @xmath265 is an in - factor of a cycle @xmath87 in @xmath264 by lemma  [ le : v - feasibility ] , and we obtain a forbidden cycle pair @xmath188 by lemma  [ le : block - infeasible ] .",
    "otherwise if ( i ) holds , then we can remove all leaf blocks @xmath240 such that @xmath262 is not @xmath254-feasible by lemma  [ le : good_leaf_block ] .",
    "the second step keeps removing all leaf blocks @xmath240 such that @xmath262 is not @xmath254-feasible until ( ii ) or ( iii ) holds to the resulting embedding .",
    "if ( i ) occurs , then the algorithm outputs a forbidden cycle pair and halts .",
    "when all the blocks of @xmath165 can be removed successfully , say in an order of @xmath266 @xmath267 , the third step constructs an embedding with no b- or w - cycles by starting with such an sld embedding of @xmath268 and by adding an sld embedding of @xmath269 to the current embedding in the order of @xmath270 . by lemma",
    "[ le : good_leaf_block ] , this results in an sld cross - preserving embedding of the input instance @xmath82 .",
    "note that we can obtain an sld cross - preserving embedding @xmath271 of @xmath18 in the third step when the first and second step did not find any forbidden cycle pair .",
    "thus the algorithm finds either an sld cross - preserving embedding of @xmath18 or a forbidden cycle pair .",
    "this proves the sufficiency of theorem  [ th : main ] .",
    "hong s - h . , eades p. , liotta g. , poon s. : fary s theorem for 1-planar graphs , in : j. gudmundsson , j. , j. mestre j. , viglas t. ( eds . )",
    "cocoon 2012 lncs , vol .",
    "7434 , pp .",
    "springer , heidelberg ( 2013 )"
  ],
  "abstract_text": [
    "<S> thomassen characterized some 1-plane embedding as the forbidden configuration such that a given 1-plane embedding of a graph is drawable in straight - lines if and only if it does not contain the configuration [ c. thomassen , rectilinear drawings of graphs , j. graph theory , 10(3 ) , 335 - 341 , 1988 ] .    in this paper , we characterize some 1-plane embedding as the forbidden configuration such that a given 1-plane embedding of a graph can be re - embedded into a straight - line drawable 1-plane embedding of the same graph if and only if it does not contain the configuration . </S>",
    "<S> re - embedding of a 1-plane embedding preserves the same set of pairs of crossing edges . </S>",
    "<S> we give a linear - time algorithm for finding a straight - line drawable 1-plane re - embedding or the forbidden configuration . </S>"
  ]
}
{
  "article_text": [
    "think of a @xmath1-colorability of a graph @xmath2 .",
    "this is a well known hard problem and there is a multiple evidence for this : concrete instances of the problem are difficult to solve ( if you want a non - trivial example consider kneser graphs ; @xcite ) , there is an abundance of minimal graphs which are not @xmath1-colorable ( these are called @xmath3-critical graphs , see e.g. @xcite ) and in the full generality ( and even for important  small \" subclasses such as @xmath3-regular graphs or planar graphs ) the problem is a canonical np - complete problem .    yet the problem has an easy formulation .",
    "a @xmath1-coloring is simple to formulate even at the kindergarten level .",
    "this is in a sharp contrast with the usual definition of the class np by means of polynomially bounded non - deterministic computations .",
    "fagin @xcite gave a concise description of the class np by means of logic : np languages are just languages accepted by an existential second order ( eso ) formula of the form    @xmath4 where @xmath5 is the set of input relations , @xmath6 is a set of existential relations , the proof for the membership in the class , and @xmath7 is a first - order formula without existential quantifiers .",
    "this definition of np inspired a sequence of related investigations ( see e.g. @xcite and these _ descriptive complexity _ results established that most major complexity classes can be characterized in terms of logical definability of finite structures . particularly this led feder and vardi @xcite to their seminal reduction of _ constraint satisfaction problems _ ( shortly csp ) to the so called mmsnp ( _ monotone monadic strict nondeterministic polynomial _ ) problems which also nicely link mmsnp to the class np in computational sense .",
    "this will be explained in some detail in section 3 which presents one of the main motivations of this paper .",
    "inspired by these results we would like to ask an even simpler question :    can one express the computational power of the class np by combinatorial means ?    from the combinatorial point of view",
    "there is a standard way how to approach ( and sometimes to solve ) a monotone property @xmath6 : one investigates those structures without the property @xmath6 which are _ critical _ , ( or _ minimal _ ) without @xmath6 .",
    "one proceeds as follows : denote by @xmath8 the class of all critical structures and define the class @xmath9 of all structures which do not `` contain '' any @xmath10 .",
    "the class @xmath9 is the class of all structures not containing any of the critical substructures and thus it is easy to see that @xmath9 coincides with the class of structures with the property @xmath6 .",
    "of course in most cases the class @xmath8 is infinite yet a structural result about it may shed some light on property @xmath6 . for example",
    "this is the case with @xmath1-colorability of graphs where @xmath3-critical graphs were ( and are ) studied thoroughly ( historically mostly in relationship to the four color conjecture ) .    of particular interest",
    "( and as the extremal case in our setting ) are those monotone properties @xmath6 of structures which can be described by finitely many forbidden substructures",
    ". it has been proved in a sequence of papers @xcite that a homomorphism monotone problem is _ first order _",
    "( shortly fo ) definable if and only if it is _ positively _ fo definable ( shortly fo+ definable ) , i.e. the formula does not contain any negations ( and so implications and inequalitites ) , and thus alternatively defined as @xmath9 for a finite set @xmath8 of structures .",
    "although fo - definability is not a rare fact ( and extremely useful in database theory ) , still fo - definability can not express most combinatorial problems ( compare @xcite,@xcite which characterize all csp which are fo - definable ; see also theorem [ fnt ] ) .",
    "thus it may seem to be surprising that the classes of relational structures defined by eso formulas ( i.e. the whole class np ) corresponds exactly to those canonical _",
    "lifts _ of structures which are defined by a finite set of forbidden substructures .",
    "shortly , finitely many forbidden lifts determine any language in np .",
    "this is being made precise in section 3 . here",
    ", let us just briefly illustrate this by our example of @xmath1-colorability . instead of a graph @xmath11 we consider the graph @xmath12 together with three unary relations @xmath13 which @xmath14 the vertex set @xmath15 ; this structure will be denoted by @xmath16 and called a _ lift _ of @xmath12 ( @xmath16 has one binary and three unary relations ) .",
    "there are @xmath1 _ forbidden substructures _ or _ patterns _ : for each @xmath17 the graph @xmath18 together with cover @xmath19 and @xmath20 for @xmath21 form pattern @xmath22 ( where the signature of @xmath23 contains one binary and three unary relations ) .",
    "the language of all @xmath1-colorable graphs then corresponds just to the language @xmath24 where @xmath25 is the forgetful functor which transforms @xmath16 to @xmath12 and the language of @xmath1-colorable graphs is just the language of the class satisfying formula @xmath26 .",
    "this _ extended language _ ( of structures @xmath16 ) of course just expresses the membership of @xmath1-colorability to the class np . there is more than this that meets the eye .",
    "this scheme fits nicely into the mainstream combinatorial and combinatorial complexity research .",
    "building upon feder - vardi classification of mmsnp we isolate ( in theorems [ np ] , [ inj ] , [ full ] ) three computationally equivalent formulations of np class :    1 .   by means of shadows of forbidden homomorphisms of relational lifts",
    "( the corresponding category is denoted by @xmath27 ) , 2 .   by means of shadows of forbidden injections ( monomorphisms ) of monadic lifts",
    "( the corresponding category will be denoted by @xmath28 ) , 3 .   by means of shadows of forbidden full homomorphisms of monadic lifts ( the corresponding category will be denoted by @xmath29 ) .",
    "our results imply that each of these approaches includes the whole class np .",
    "it is interesting to note how nicely these categories fit to the combinatorial common sense about the difficulty of problems : on the one side the problems in csp correspond and generalize ordinary ( vertex ) coloring problems .",
    "one expects a _",
    "dichotomy _ here : every csp problem should be either polynomial or np - complete ( as conjectured in @xcite and probabilistically verified in @xcite ) .",
    "on the other side the above formulations ( 1 ) , ( 2 ) , ( 3 ) model the whole class np and thus we can not expect dichotomy there ( by a celebrated result of ladner @xcite ) .",
    "but this is in accordance with the combinatorial meaning of these classes : the formulation ( 1 ) expresses coloring of edges , triples etc .",
    "and thus it involves problems in ramsey theory @xcite",
    ". the formulation ( 2 ) may express vertex coloring of classes with restricted degrees of vertices @xcite .",
    "the formulation ( 3 ) relates to vertex colorings with a given pattern among classes which appears in many graph decomposition techniques ( for example in the solution of the perfect graph conjecture @xcite ) .",
    "the point of view of forbidden partitions ( in the language of graphs and matrices ) is taken for example in @xcite .",
    "this clear difference between combinatorial interpretations of syntactic restrictions on formulas expressing the computational power of np is one of the pleasant consequences of our approach .    at this point",
    "we should add one more remark .",
    "we of course do not only claim that every problem in np can be polynomially reduced to a problem in one of these classes .",
    "this would only mean that each of these classes contains an np - complete problem .",
    "what we claim is that these classes have the _ computational power _ of the whole of np , i.e. these classes are _ computationally equivalent _ to all problems in np .",
    "more precisely , to each language @xmath30 in np there exists a language @xmath31 in any of these three classes such that @xmath31 is _ polynomially equivalent _ to @xmath30 , i.e. there exist _ polynomial reductions _ of @xmath30 to @xmath31 and @xmath31 to @xmath30 .",
    "having finitely many forbidden patterns ( i.e. forbidden substructures ) for a class of structures @xmath32 we are naturally led to the question whether @xmath32 is the class determined by a finite set of templates , or in other words by the existence of homomorphisms to particular structures . in technical terms",
    "( see e.g. @xcite ) this amounts to the question whether @xmath32 is an instance of a _ constraint satisfaction problem _ ( shortly csp ) . on the other hand",
    "finitely many forbidden patterns lead to the question whether the class @xmath32 is not defined by a _ finite duality_. this scheme for combinatorial problems goes back to @xcite , see e.g. @xcite and it was studied in situations as diverse as _ bounded tree width dualities _",
    "@xcite , _ duality of linear programming _ @xcite and _ classes with bounded expansion _ @xcite . here",
    "we completely characterize ( using results of @xcite ) shadows of finitary dualities in the case where the extension of the language is monadic , i.e. it consists of unary relations ( as is the above case of @xmath1-coloring ) , see theorem [ main ] .",
    "these general results can be used in the investigation of the class mmsnp ( to be defined in section 3 ) .",
    "feder and vardi introduced this class as a fragment of snp in @xcite .",
    "they proved that the class mmsnp is randomly polynomially equivalent to the class of finite union of csp languages .",
    "this was later derandomized by the first author proving that the classes mmsnp and csp are computationally equivalent @xcite .",
    "we will examine these classes from the viewpoint of descriptive complexity theory : any finite union of csp languages belongs to mmsnp .",
    "but the converse does not hold .",
    "consider for example the language of triangle free graphs : this is an mmsnp language which is not a finite union of csp languages .",
    "madelaine and stewart introduced the class of _ forbidden pattern problems _ ( fp ) as an equivalent combinatorial version of mmsnp @xcite , @xcite .",
    "they gave an effective , yet lengthy process to decide whether an mmsnp language is a csp language .",
    "we give a short and easy procedure to decide whether an mmsnp language is a finite union of csp languages , and we show that these are exactly those languages defined by forbidden patterns not containing any cycle .",
    "this simplicity is possible by translation and generalization of the feder - vardi proof of the computational equivalence of finite union of csp s and mmsnp in the context of category theoretical language of duality .",
    "the paper is organized as follows : in section 2 we review the basic notions and previous work related to finite structures . particularly we state two our basic tools : the characterization of _ finite dualities _",
    "@xcite and a combinatorial classique , the _ sparse incomparability lemma_. it is here where we introduce two our basic notions of _ lifts _ and _ shadows_. the interplay of corresponding classes ( categories ) is a central theme of this paper . in section 3 we introduce the relevant notions of descriptive complexity ( mostly taken from @xcite ) and relate it to our approach .",
    "we prove that the class np is polynomially equivalent with classes of structures characterized by finitely many forbidden lifts ( this is proved in three different categories , see theorems [ np ] , [ inj ] and [ full ] ) . in section 4",
    "we study the relationship of lifts and shadows abstractly from the point of view of dualities .",
    "theorem [ main ] enables us to prove the characterization of shadows of finite dualities ( called _ lifted dualities _ ) in lifts and shadows .",
    "this , as a corollary , proves the main result of @xcite . in section 5",
    "we return to feder - vardi setting and indicate how the polynomial equivalence of classes mmsnp and finite unions of csp problems emerges naturally in our combinatorial - categorical context",
    ".    for more complicated ( i.e. nonmonadic ) lifts we ( of course ) have partial results only .",
    "perhaps the next case is that of covering equivalences .",
    "this we are still able to handle with our methods and we characterize all csp languages in this class .",
    "but we postpone this to another occasion .",
    "for a relational symbol @xmath33 and relational structure @xmath34 let @xmath35 denote the universe of @xmath34 and let @xmath36 denote the relation set of tuples of @xmath34 which belong to @xmath33 .",
    "let @xmath37 denote the _ signature _ ( type ) of relational symbols , and let @xmath38 denote the class of all relational structures with signature @xmath37 .",
    "we will often work with two ( fixed ) signatures , @xmath37 and @xmath39 ( the signatures @xmath37 and @xmath40 are always supposed to be disjoint ) .",
    "for convenience we denote structures in @xmath38 by @xmath41 etc .",
    "and structures in @xmath42 by @xmath43 etc .",
    "we shall denote @xmath42 by @xmath44 .",
    "the classes @xmath38 and @xmath45 will be considered as categories endowed with all homomorphisms .",
    "recall , that a homomorphism is a mapping which preserves all relations .",
    "just to be explicit , for relational structures @xmath46 a mapping @xmath47 is a _ homomorphism",
    "_ @xmath48 if for every relational symbol @xmath49 and for every tuple @xmath50 we have @xmath51 .",
    "more generally we will use the notation @xmath52 for morphisms when working in other categories .",
    "( these will be categories of relational structures , where the morphisms will be either the injective or the full homomorphism , respectively . )",
    "similarly we define homomorphisms for the class @xmath44 .",
    "the interplay of categories @xmath45 and @xmath38 is one of the central themes of this paper . towards this end",
    "we define the following notions : let @xmath53 denote the natural _ forgetful functor _ that `` forgets '' relations in @xmath40 .",
    "explicitly , for a structure @xmath54 we denote by @xmath55 the corresponding structure @xmath56 defined by @xmath57 , @xmath58 for every @xmath59 . for a homomorphism @xmath60 we put @xmath61 .",
    "the mapping @xmath62 is of course also a homomorphism @xmath63 .",
    "this is expressed by the following diagram .",
    "these object - transformations call for a special terminology : for @xmath64 we call @xmath65 the _ shadow _ of @xmath66 . any @xmath66 with @xmath67 is called a _ lift _ of @xmath34 .",
    "the analogous terminology is used for subclasses @xmath68 of @xmath45 and @xmath38 .",
    "( thus , for example , for a subclass @xmath69 is the class of all shadows of all structures in the class @xmath68 . )",
    "the following special subclass of @xmath45 will be important : denote by @xmath27 the class of all structures in @xmath45 where we assume that all relations in @xmath40 have the same arity , say @xmath70 , and that all the @xmath70-tuples of an object are contained by some relation in @xmath40 .",
    "the category @xmath27 is briefly called _ covering _ or @xmath70-_covering category_. note that the class @xmath71 is closed under surjective homomorphisms .",
    "we will work with two other similar pairs of categories .",
    "we denote by @xmath72 and @xmath73 the categories where the objects are again the relational structures of type @xmath37 , but the morphisms are the injective and full homomorphisms , respectively .",
    "we call a mapping a _ full homomorphism _ if it is relation and non - relation preserving , too .",
    "such mappings have very easy structure , as every full homomorphism which is onto is a retraction .",
    "we denote by @xmath74 and @xmath75 the subclasses containing the same class of objects as @xmath76 .",
    "we only will use these notions in the case when @xmath40 contains monadic relations .",
    "let @xmath77 be a finite set of structures in the category @xmath68 ( one of the above categories ) .",
    "by @xmath78 we denote the class of all structures @xmath79 satisfying @xmath80 for every @xmath81 .",
    "( this class is sometimes and perhaps more efficiently denoted by @xmath82 . ) similarly ( well , dually ) , for the finite set of structures @xmath83 in @xmath68 we denote by @xmath84 the class of all structures @xmath85 satisfying @xmath86 for some @xmath87 .",
    "( this is sometimes denoted by @xmath88 . )",
    "now suppose that the classes @xmath78 and @xmath84 are equal .",
    "then we say that the pair @xmath89 is a _ finite duality _ in @xmath68 .",
    "explicitly , a finite duality means that the following equivalence holds for every structure @xmath85 :    @xmath90    one more definition is needed . in dualities ( as well as in most of this paper ) we are interested in the existence of a homomorphism ( every csp can be expressed by the existence of a homomorphism to a template ; see @xcite,@xcite ) .",
    "consequently we can also use the language of partially ordered sets and consider the _",
    "homomorphism order _",
    "@xmath91 defined on the class of all structures with signature @xmath37 : we define the order @xmath92 by putting @xmath93 iff there is a homomorphism @xmath94 .",
    "the ordering @xmath92 is clearly a quasiorder but this becomes a partial order if we either factorize @xmath91 by the homomorphism equivalence or , perhaps preferably , if we restrict @xmath91 to non - isomorphic @xmath95 structures .",
    "we say that @xmath34 is @xmath96 if every homomorphism @xmath97 is an automorphism .",
    "every finite structure @xmath34 contains ( up to an isomorphism ) a uniquely determined core substructure homomorphically equivalent to @xmath34 , see @xcite .",
    "the following result was recently proved in @xcite as a generalization of @xcite .",
    "it characterizes finite dualities of finite structures .",
    ", i.e. in the category @xmath38 .",
    "[ fnt ] for every signature @xmath37 and for every finite set @xmath8 of ( relational ) forests there exists ( up to a homomorphism equivalence ) a uniquely determined set @xmath98 of structures such that @xmath99 forms a finite duality .",
    "up to a homomorphism equivalence there are no other finite dualities .",
    "we did not define what is a forest ( see @xcite ) . for the sake of completeness",
    "let us say that a _ forest _ is a structure not containing any cycle .",
    "and a _ cycle _ in a structure @xmath34 is either a sequence of distinct points and distinct tuples @xmath100 where each tuple @xmath101 belongs to one of the relations @xmath36 and each @xmath102 is a coordinate of @xmath101 and @xmath103 , or , in the degenerated case @xmath104 a relational tuple with at least one multiple coordinate .",
    "the _ length _ of the cycle is the integer @xmath105 in the first case and @xmath106 in the second case .",
    "finally the _ girth _ of a structure @xmath34 is the shortest length of a cycle in @xmath34 ( if it exists ; otherwise it is a forest ) .",
    "the study of homomorphism properties of structures not containing short cycles ( i.e. with large girth ) is a combinatorial problem studied intensively .",
    "the following result has proved particularly useful in various applications .",
    "it is often called the _ sparse incomparability lemma _ :    [ sparse ]    let @xmath107 be positive integers and let @xmath34 be a structure . then there exists a structure @xmath108 with the following properties :    1 .",
    "there exists a homomorphism @xmath109 ; 2 .   for every structure @xmath110 with at most @xmath111 points",
    "the following holds : there exists a homomorphism @xmath112 if and only if there exists a homomorphism @xmath113 ; 3 .",
    "@xmath108 has girth @xmath114 .",
    "this result was proved in @xcite ( see also @xcite ) by probabilistic methods .",
    "in fact in @xcite it was proved for graphs only but the proof is the same for finite relational structures . of particular interest in this context is the question whether there exists an explicit construction of the structure @xmath115 .",
    "this is indeed possible : in the case of binary relations ( digraphs ) this was done in @xcite and for general relational structures in @xcite .",
    "there is a standard connection between formulae and existence of homomorphisms .",
    "this goes back to @xcite and it can be formulated as follows :    to every structure @xmath34 in @xmath38 we associate the _ canonical conjunctive existential formula _ @xmath116 as the conjunction of the atoms @xmath117 , where @xmath49 preceded by existential quantification of all elements of @xmath34 . clearly this process may be reversed and thus there is a one - to - one correspondence between canonical conjunctive existential formulae and structures .",
    "it is then obvious that the following holds :    there is a homomorphism @xmath94 if and only if @xmath118 .",
    "following fagin @xcite , the class snp consists of all problems expressible by an existential second - order formula with a universal first - order part .",
    "the class of problems expressible by an existential second - order formula is exactly the class np when restricted to languages of finite structures .",
    "so the class snp is computationally equivalent to np .",
    "the input of any problem in snp is a relational structure @xmath34 of signature @xmath37 with base set @xmath119 and @xmath120 is a set of relations on the same base set @xmath121 . in this situation",
    "it is customary to call the second order relations @xmath120",
    "_ proof_. let us be more specific ( see @xcite ) .",
    "every language ( problem ) @xmath30 in snp may be equivalently described by a formula of the form    @xmath122 where    1 .",
    "@xmath123 is a conjunction of atoms or negated atoms involving variables and input relations ( i.e. of the form @xmath124 and @xmath125 for a relational symbol @xmath33 and @xmath126 a tuple of elements of @xmath127 ) , 2 .",
    "@xmath128 is a conjunction of atoms and negated atoms involving variables and existential ( proof ) relations ( i.e. of the form @xmath129 and @xmath130 for @xmath131 and @xmath126 a tuple of elements of @xmath127 ) and 3 .",
    "@xmath132 is the conjunction of atoms involving variables and inequalities ( i.e. of form @xmath133 ) .    a formula of this type",
    "is called a _ canonical formula _ of the language @xmath30 in snp .",
    "it will be denoted by @xmath134 .",
    "* example * : consider the following language of digraphs ( i.e. relational structures , where the signature contains one single binary relation @xmath135 ) defined by the following eso formula :    @xmath136 \\wedge \\big [ \\neg ( \\neg p_1(y ) \\wedge \\neg p_2(y))\\big]$ ] .",
    "this formula corresponds to the language of all binary relations whose base set can be covered by two sets in such a way that none of these sets contains linearly ordered set with @xmath1 elements .",
    "if we in addition postulate that the relation @xmath135 is symmetric then these are just graphs which can be vertex partitioned into two triangle free graphs . following @xcite one can also define three important syntactically restricted subclasses of snp .",
    "we say that a canonical formula is _ monotone _ if there are no negations in the @xmath123 s .",
    "this implies that more relations lead to less satisfiable formulae .",
    "the canonical formula is _ monadic _ if the relations in @xmath120 are all monadic ( which means that all proof relations are unary ) .",
    "the canonical formula is said to be _ without inequality _ if it can described by a canonical formula which does not contain @xmath132 .",
    "feder and vardi @xcite have proved that the three subclasses of snp defined by formulae with any two of these syntactical restrictions still have the full computational power of the class np .",
    "@xcite [ 123 ]    1 .",
    "every problem in np has a polynomially equivalent problem in monotone snp without inequality .",
    "moreover , we may assume that the existential relations are at most binary .",
    "every problem in np has a polynomially equivalent problem in monotone , monadic snp .",
    "every problem in np has a polynomially equivalent problem in monadic snp without inequality .",
    "( the claim that we may restrict to binary relations in ( 1 ) is not stated in @xcite but it is clear from the proof . ) the class with all the three restrictions is denoted by mmsnp ( _ monotone monadic strict nondeterministic polynomial _ ) .",
    "we deal with this class in section 6 .    in this paper",
    "we will reformulate theorem [ 123 ] in our combinatorial category lift / shadow setting .",
    "this will be done in theorem [ np ] for item @xmath137 , in theorem [ inj ] for item @xmath138 and in theorem [ full ] for item @xmath139 .",
    "first , we introduce the following : we say that the formula is _ primitive _ if for every clause @xmath140 , every variables @xmath141 occurring in it and every existential relation @xmath131 of arity @xmath70 either the atom @xmath142 or its negation is an atom of the clause .",
    "we need the following technical lemma .",
    "[ tech ] every language in snp can be described by a primitive formula . moreover ,",
    "if the original formula satisfies some of the restrictions ( i.e. if it is either monotone or monadic or without inequality ) then so does the primitive formula .    consider the language @xmath30 and the canonical formula defining @xmath30 :    @xmath143 .",
    "we modify the formula so that for every proof relation @xmath33 of arity @xmath70 and variables @xmath144 appearing in @xmath123 or @xmath128 either @xmath145 or @xmath146 is in the appropriate conjunct . in order to have such a formula we can replace @xmath147 by @xmath148 , this is equivalent to the original formula .",
    "the repetition of this process will terminate in finitely many steps , and it gives an appropriate formula .",
    "[ np ] for every language @xmath149 there exist relational types @xmath150 and a finite set @xmath151 of structures in @xmath27 such that @xmath30 is computationally equivalent to @xmath152 .",
    "moreover , we may assume that the relations in @xmath40 are at most binary .",
    "this theorem presents an equivalent form of item @xmath137 of theorem  [ 123 ] by means of homomorphisms and classes @xmath153 .",
    "it is interesting to express other conditions @xmath138 , @xmath139 of theorem [ 123 ] by means of homomorphisms and classes @xmath153 .",
    "these two other versions are stated below as theorems [ inj ] and [ full ] .",
    "consider a language @xmath30 and the canonical formula @xmath154 ( showing that it is monotone snp without inequality ) .",
    "the construction of @xmath151 consists of two steps . in the first step",
    "we enforce technical conditions on the formula .",
    "* step 1 . *",
    "we need the technical assumption that all proof relations in @xmath120 have the same ( at most binary ) arity and the formula is primitive",
    ". the first condition can be achieved by exchanging relational symbols not of maximal arity by new relational symbols of maximal arity ( binary would suffice ) .",
    "we can proceed as follows . in every clause of the formula we put new ( free ) different variables into the new entries in @xmath128 , and we increase the number of variables in @xmath155 , too .",
    "this new formula is equivalent to the original one .",
    "an evaluation satisfies to the new formula exactly iff its restriction to the original variables satisfies the original formula . by lemma  [ tech ]",
    "we may also assume that the new formula is primitive .",
    "in the following we denote this formula by @xmath154 .    in the second step",
    "we define lifts .    * step 2 .",
    "*    the type @xmath40 will contain @xmath156 relational symbols corresponding to the @xmath156 possibilities for a subset of proof relations indicating possibilities in which a tuple can be .",
    "the pattern @xmath157 will correspond to the clause @xmath158 .",
    "the base set of each structure @xmath157 is the set of variables in the clause @xmath159 .",
    "a tuple @xmath160 of variables is in a relation @xmath33 ( of type @xmath37 ) if the atom @xmath161 appears in @xmath123 .",
    "every tuple @xmath160 in @xmath157 ( of appropriate arity ) is in exactly one relation from @xmath40 , this is the relation corresponding to the subset of all existential relations @xmath131 such that the atom @xmath162 appears in @xmath128 .",
    "let @xmath151 be the set of all lifts @xmath157 .",
    "these may be disconnected , although we may work with their connected components , see remark  [ victor ] .",
    "we prove that for a structure @xmath56 the formula @xmath154 is satisfiable iff there is a lifted structure @xmath163 such that no @xmath164 maps to @xmath66 .",
    "suppose that @xmath165 , i.e. there is a lift @xmath166 .",
    "we may suppose that every tuple of @xmath167 is in exactly one @xmath40 relation .",
    "this single @xmath40 relation corresponds to a subset of relational symbols in @xmath120 . for every relational symbol @xmath131 define @xmath168 to be the set of tuples @xmath160 such that the relation in @xmath40 containing @xmath160 corresponds to a subset containing @xmath6 .",
    "denote this structure of type @xmath169 by @xmath170 .",
    "we show that these relations prove @xmath171 .",
    "we have to prove that @xmath172 holds for every clause .",
    "consider the corresponding forbidden lift @xmath173 .",
    "we know that @xmath174 , which yields @xmath175 .",
    "secondly suppose that @xmath176 .",
    "we can correspond to the proof relations on @xmath177 a @xmath40 covering of the ( binary ) tuples in @xmath177 , where every tuple is covered exactly once .",
    "this lift @xmath167 shows that @xmath178 .",
    "consider a forbidden lift @xmath179 .",
    "we know that the proof relations of type @xmath120 satisfy the formula @xmath180 , hence @xmath181 .    [ victor ] consider the languages @xmath152 and @xmath182 .",
    "their union is exactly the language @xmath183 , where @xmath184 .",
    "hence the languages of the form @xmath152 are closed under union . in the proof of theorem  [ np ]",
    "we may restrict ourselves to connected lifts when proving that the constructed @xmath152 is the desired language .",
    "let us now formulate and prove the two analogous theorems for the class monotone , monadic snp and for the class monadic snp without inequality ( which correspond to @xmath138 and @xmath139 of theorem [ 123 ] ) .",
    "here we use the categories @xmath185 and @xmath29 .",
    "[ inj ] for every language @xmath149 there exist relational types @xmath37 and @xmath40 , where @xmath40 contains only unary relational symbols and a finite set @xmath186 such that @xmath30 is computationally equivalent to the class @xmath187 .",
    "we proceed analogously as in the proof of theorem [ np ] for formulas which are monotone monadic snp .",
    "we stress the differences only .",
    "first , using lemma [ tech ] again , we may suppose that @xmath30 is defined by a canonical primitive formula .",
    "this constitutes the first step as now we do not have problem with the arity of the proof relations since these are all monadic .    * step 2 .",
    "*    we want to enforce for @xmath188 and distinct variables @xmath189 appearing in it that @xmath133 is an atom of @xmath132 .",
    "if this atom is not in @xmath128 then we exchange @xmath190 by the following conjunction : @xmath191 , where @xmath192 is @xmath190 except that we replace all occurence of @xmath193 by @xmath194 in it , @xmath195 and @xmath196 .",
    "this new formula is equivalent to the original one . in finitely many steps we manage to enforce that all the required atoms of the form @xmath133 are there in the appropriate @xmath132 .",
    "we now define @xmath40 in the same way as in theorem  [ np ] ( thus @xmath40 is a monadic type ) .",
    "the set of forbidden lifts @xmath151 is also defined analogously as in theorem  [ np ] with the only one difference which relates to the construction of formula @xmath197 which will have now more clauses : the formula @xmath197 will have all the atom clauses as in theorem  [ np ] ( i.e. @xmath198 will contain as atoms all those tuples which express the fact that a tuple @xmath199 is in the homomorphic image of @xmath200 ) and additionally we will have atoms @xmath133 for every pair of different variables . after this change",
    "we see easily that the rest of the proof does not depend on which category we work .",
    "[ pinj ] if we do not enforce the condition that the atom @xmath133 appears in every clause containing the variables @xmath194 and @xmath193 ( step 1 . of the proof ) before constructing @xmath151 then we get some weaker characterization .",
    "namely , the language @xmath30 will be similar to the form of theorem  [ inj ] but we allow partially injective mappings not only injective ones . for every @xmath201 and pair @xmath202 we may have the plus condition that they can not collapse by a homomorphism .",
    "the class defined by such partially injective forbidden lifts still equals to the class of languages of the form @xmath203 : we can do step 2 . in this combinatorial",
    "setting , too .",
    "here the transformation means that for any @xmath204 and pair @xmath202 which may collapse , we exchange @xmath205 by two new forbidden structures .",
    "one of the structures is @xmath205 with conditions on the same pairs plus we require that @xmath194 and @xmath193 may not collapse . the other is a factor of @xmath205 where we identify @xmath194 and @xmath193 , and we have the condition on a pair of elements of new structures not to collapse iff we have it on a pair in their preimages in @xmath205 .",
    "the iteration of this transformation expresses a language defined in partially injective setting in the fully injective terminology of theorem  [ inj ] ( with the same @xmath37 and @xmath40 ) .",
    "let us now transform the third syntactic class of theorem [ 123 ] .",
    "[ full ] for every language @xmath149 there exist relational types @xmath37 and @xmath40 , where @xmath40 contains only unary relational symbols and a finite set @xmath206 such that @xmath30 is computationally equivalent to the class @xmath207 .",
    "the proof of theorem [ full ] is again a modification of the above proof of theorem  [ np ] ( and of theorem  [ inj ] ) for formulas in monadic snp without inequality .",
    "the construction of @xmath151 is even easier : again , in step 1 .",
    ", it suffices to assume that @xmath154 is canonical primitive .",
    "we only need to be careful with construction of the formula @xmath208 expressing the fact that the set @xmath209 is the homomorphic image of @xmath205 ( recall that all homomorphism are now considered in @xmath210 .",
    "the formula will contain again more atoms .",
    "for every tuple @xmath211 in the input relation @xmath33 we will have an atom expressing that the image of the tuple is in relation @xmath33 like in the proof of theorem  [ np ] .",
    "but additionally we will have the negation of such an atom for every tuple not contained by an input relation .",
    "the rest of the proof is again the same .    similarly as above ( remark  [ pinj ] to theorem  [ inj ] ) we have the possibility to state a weaker theorem in the notion of partially full mappings .",
    "consider a relational symbol @xmath33 of arity @xmath212 .",
    "we may have two conditions on an @xmath212-tuple in a structure @xmath34 , either it is in @xmath33 or not . in the category",
    "@xmath213 this gives some restrictions on the homomorphisms of @xmath34 in both cases .",
    "we may generalize the class of objects such that for every relation @xmath33 and @xmath212-tuple we have three possibilities ( from the viewpoint of mappings to a structure ) : either the tuple should be mapped to a tuple in @xmath33 , or to a tuple not in @xmath33 or we have no restriction .",
    "we may define a class of languages in @xmath38 using this enlarged set of forbidden lifts .",
    "however this new class of languages is still equal to those of the form @xmath207 .",
    "this may be seen as follows : a forbidden lift in this new setting may be replaced by a set of forbidden lift in @xmath29 as for the set of tuple - relation pairs without any condition we take all possibilities of relation and non - relation conditions .",
    "this new set of forbidden lifts defines the same language .",
    "some of the transformations presented in section 4 lead to deeper results - the lifts and shadows give rise to a life on their own .",
    "we prove here two results which will prove to be useful in the next section .",
    "it follows from the section 3 that shadows of classes @xmath78 ( in three categories @xmath214 , @xmath215 and @xmath216 ) include all np - complete languages .",
    "what about finite dualities ?",
    "a delicate interplay of lifting and shadows for dualities is expressed by the following two statements which deal ( for brevity ) with classes @xmath217 only . despite its formal complexity theorem [ eqdual1 ]",
    "is an easy statement .",
    "[ eqdual1 ] let @xmath218 be a finite set of structures in @xmath71 .",
    "suppose that there exist a finite set of structures @xmath219 such that @xmath220 is a finite duality in @xmath214 .",
    "then the following sets coincide : the shadow @xmath221 and @xmath222 . explicitly : for every @xmath223 there exists @xmath224 and @xmath225 for every @xmath226 iff @xmath227 for some @xmath228 .",
    "note that ( in the statement of theorem [ eqdual1 ] we do not claim that the pair @xmath229 is a duality in the class @xmath38 .",
    "this of course does not hold ( as shown by our example of @xmath1-colorability in the introduction ) .",
    "but the images of all structures defined by all obstacles of @xmath230 are forming all obstacles of @xmath231 .",
    "we call this _ shadow duality_.    it is important that theorem [ eqdual1 ] may be sometimes reversed : shadow dualities may be sometimes `` lifted '' .",
    "this is non - trivial and in fact theorem [ eqdual2 ] may be seen as the core of this paper .",
    "[ eqdual2 ] let @xmath218 be a finite set of structures in @xmath71 , consider @xmath232 and suppose that @xmath233 ( in @xmath38 ) for a finite set @xmath234 of objects of @xmath38 .",
    "( in other words let the pair @xmath235 form a shadow duality . )",
    "assume also that @xmath236 and that @xmath40 contains only unary relations .",
    "then there exists a finite set @xmath237 in @xmath71 such that @xmath238 .    before proving theorems  [ eqdual1 ] and [ eqdual2 ]",
    "we formulate first a lemma which we shall use repeatedly :    ( lifting ) [ lifting ] let @xmath239 , homomorphism @xmath240 and @xmath241 be given .",
    "then there exists @xmath242 , @xmath243 such that the mapping @xmath62 is a homomorphism @xmath244 in @xmath27 .",
    "assume that @xmath239 , @xmath245 and @xmath246 are as in the statement . for each @xmath247",
    "put @xmath248 .",
    "it is easy to see that @xmath249    ( of theorem [ eqdual1 ] ) suppose that @xmath250 , say @xmath251 .",
    "now for a homomorphism @xmath252 there is at least one lift @xmath253 of @xmath34 such that the mapping @xmath62 is a homomorphism @xmath254 ( here we use lifting lemma [ lifting ] ) . by the duality @xmath255 ( in @xmath27 ) @xmath256 for any @xmath257 and thus in turn @xmath258 .",
    "conversely , let us assume that @xmath259 satisfies @xmath65 .",
    "but then @xmath260 and thus by the functoral property of @xmath25 we have @xmath261 .",
    "( of theorem [ eqdual2 ] ) assume @xmath262 .",
    "our goal is to find @xmath83 such that @xmath263 .",
    "this will follow as a ( non - trivial ) combination of theorem [ fnt ] and lemma [ sparse ] . by theorem [ fnt ]",
    "we know that if @xmath77 is a set of ( relational ) forests then the set @xmath77 has a dual set @xmath83 ( in the class @xmath76 ) .",
    "so assume to the contrary that one of the structures , say @xmath264 , fails to be a forest ( i.e. we assume that one of the components of @xmath264 has a cycle ) .",
    "we proceed by a refined induction ( which will allow us to use more properties of @xmath264 ) .",
    "let us introduce carefully the setting of the induction .",
    "we assume shadow duality @xmath265 .",
    "let @xmath234 be fixed throughout the proof .",
    "clearly many sets @xmath77 will do the job and we select the set @xmath77 such that @xmath77 consists of cores of all homomorphic images ( explicitly : we close @xmath266 on homomorphic images and then take the set of cores of all these structures ) . among all such sets @xmath77",
    "we take a set of minimal cardinality .",
    "it will be again denoted by @xmath266 .",
    "we proceed by induction on the size @xmath267 of @xmath77 .",
    "the set @xmath232 is clearly determined by the minimal elements of @xmath77 ( minimal in the homomorphism order ) .",
    "thus let us assume that one of these minimal elements , say @xmath264 , is not a forest .",
    "by the minimality of @xmath77 we see that we have a proper inclusion @xmath268 .",
    "thus there exists a structure @xmath269 in the difference .",
    "but this in turn means that there has to be a lift @xmath270 of @xmath269 such that @xmath271 and @xmath272 for every @xmath273 .",
    "in fact not only that : as @xmath264 is a core , as @xmath78 is homomorphism closed and as @xmath77 has minimal size we conclude that there exist @xmath269 and @xmath270 such that any homomorphism @xmath274 is a monomorphism ( i.e. one - to - one , otherwise we could replace @xmath264 by a set of all its homomorphic images - @xmath264 would not be needed ) .",
    "now we apply ( the second non - trivial ingredient ) lemma [ sparse ] to the structure @xmath269 and an @xmath275 : we find a structure @xmath276 with the following properties : @xmath277 , @xmath278 if and only if @xmath279 for every @xmath280 and @xmath276 contains no cycles of length @xmath281 .",
    "it follows that @xmath282 .",
    "next we apply lemma [ lifting ] to obtain a structure @xmath283 with @xmath284 .",
    "now we use that all relations in @xmath40 are unary and we see that @xmath283 does not contain cycles of length @xmath285 .",
    "now for any @xmath286 , @xmath287 we have @xmath288 as @xmath289 and @xmath290 . as the only homomorphism @xmath291 is a monomorphism the only ( hypothetical ) homomorphism @xmath292 is also monomorphism . but",
    "this is a contradiction as @xmath264 contains a cycle while @xmath283 has no cycles of length @xmath285 .",
    "this completes the proof .",
    "madelaine @xcite introduced the class fp .",
    "every language of the class fp is defined by _ forbidden patterns _ which are defined as follows . consider the finite relational type @xmath37 , the finite set @xmath293 and the set of pairs @xmath294 , where each @xmath295 and @xmath296 is a mapping @xmath297 .",
    "the language @xmath30 belongs to the class fp if there are patterns @xmath298 such that @xmath30 is the class of all structures @xmath56 for which there exists a mapping @xmath299 such that for all @xmath300 no homomorphism @xmath301 satisfies @xmath302 .",
    "formally : @xmath303 .",
    "this is a special case of our approach and the class fp may be equivalently defined as follows ( using lifts and shadows ) : we say that the set @xmath304 is an _ fp - language _ if there exist a finite type @xmath40 of monadic ( unary ) relational symbols and a language @xmath305 such that @xmath306 for a finite set @xmath307 .",
    "( thus @xmath40 is a partition on every @xmath226 . )",
    "the equivalence is clear : we consider the signature ( relational type ) @xmath40 that contains the unary symbol @xmath308 for every element @xmath309 . to every pattern @xmath310 we correspond the relational structure @xmath311 with the shadow @xmath312 such that the element @xmath313 is in the relation @xmath314 .",
    "the converse is also evident : every fp - language can be defined by forbidden patterns .",
    "in other words the class fp is the class of languages defined by forbidden monadic lifts of the class @xmath38 .",
    "it has been proved in @xcite that the classes fp and mmsnp are equal .",
    "the containment fp @xmath315 mmsnp follows from the proof of theorem [ np ] : every mmsnp problem ( as any np problem ) can be considered as the shadow of a language @xmath316 in a lifted category @xmath27 . in the case of the class mmsnp these lifted relations ( in @xmath40 ) are all unary . and",
    "for unary relations we use the preceding remark which claims that monadic lifts and forbidden patterns are equivalent . in order to prove the converse one needs to show that every language defined by forbidden monadic lifts is in mmsnp .",
    "this part of proof is straightforward .",
    "madelaine and stewart @xcite gave a long process to decide whether an fp language is a finite union of csp languages .",
    "we use theorems  [ eqdual1 ] , [ eqdual2 ] and the description of dualities for relational structures @xcite to give a short characterization of a more general class of languages .",
    "[ main ] consider the language @xmath30 determined by forbidden monadic lifts .",
    "explicitly , @xmath306 for a set @xmath317 ( with @xmath40 monadic ) .",
    "if no @xmath318 contains a cycle then there is a set of finite structures @xmath319 such that @xmath320 .",
    "if one of the lifts @xmath321 in a minimal subfamily of @xmath151 contains a cycle in its core then the language @xmath30 is not a finite union of csp languages .",
    "if no @xmath322 contains a cycle then the set @xmath77 has a dual @xmath83 in @xmath71 by @xcite , and the shadow of this set @xmath83 gives the dual set @xmath323 of the set @xmath152 ( by theorem  [ eqdual1 ] ) . on the other side",
    "if one @xmath322 contains a cycle in its core and if @xmath151 is minimal ( i.e. @xmath205 is needed ) then @xmath153 does not have a dual in @xmath27 .",
    "the shadow of the language @xmath153 is the language @xmath30 and consequently this fails to be a finite union of csp languages by theorem  [ eqdual2 ] ( as every monadic shadow duality can be lifted ) .",
    "now we prove one of the principal results of @xcite by tools which we developed in previous sections .",
    "feder and vardi have proved that the classes mmsnp and csp are random equivalent , this was later derandomised . here",
    "we discuss the deterministic part of the feder - vardi proof .",
    "it seems that our setting streamlines some of the earlier arguments .",
    "our proof is not essentially different from the original one , yet the use of dualities makes the construction of the proof natural and easier .    a structure @xmath177 is _ biconnected _ if every point deleted substructure is connected ( in other words for every three distinct elements @xmath189 and @xmath324 there is a path connecting @xmath194 and @xmath193 that avoids @xmath324 ) . note that a biconnected structure with more than one relational tuple contains a cycle .",
    "inclusion maximal biconnected substructures are called _ biconnected components _ ( in graph theory they are called blocks ) . for the set of relational structures",
    "@xmath323 we denote by @xmath325 the language of structures in @xmath326 with girth larger than @xmath111 .",
    "we will prove the following :          let @xmath327 be the set of the biconnected components of the structures in @xmath151 . for every isomorphism class in @xmath328",
    "we choose one structure @xmath329 in this class .",
    "we may assume that the base set of the representative @xmath330 is @xmath331 .",
    "for each @xmath332 we introduce the relational symbol @xmath333 of arity @xmath334 ( the size of the structure ) .",
    "we denote by @xmath335 the type that consists of these relational symbols @xmath336",
    ". this will be the type of the structures in @xmath323 .",
    "next , we define the following functors @xmath7 and @xmath337 .",
    "the functor @xmath338 assigns to a structure @xmath177 a structure @xmath339 . @xmath34 and",
    "@xmath339 have the same base set and its relatons are defined as follows :      i.e. a tuple of elements is in @xmath333 relation if it is the homomorphic image of @xmath330 .",
    "the functor @xmath337 maps to a structure @xmath341 the following structure again on the same base set in @xmath38 :                        the set @xmath358 consists of finitely many relational forests .",
    "hence we know by theorem  [ fnt ] that @xmath366 for some finite @xmath367 .",
    "we will prove that the conditions of the theorem hold for this choice of @xmath323 .",
    "all the reductions will be functoral .",
    "first we prove that @xmath30 can be polynomially reduced to @xmath182 .",
    "we succeed to show that for a structure @xmath56 the equivalence @xmath368 holds .",
    "this is implied by the equivalence in the lifted category as the same @xmath40 relations prove the membership in both languages : if @xmath166 then @xmath369 by ( i ) and ( iv ) . on the other hand ( iii )",
    "implies that if @xmath359 then @xmath370 .",
    "let @xmath111 denote the size of the largest structure in @xmath151 .",
    "we prove that @xmath325 can be polynomially reduced to @xmath30 .",
    "in fact we will prove that for every @xmath371 with girth @xmath372 the equivalence @xmath373 holds .",
    "again we prove the equivalence in the lifted categories . if @xmath374 then @xmath375 , as we have seen in the reduction of @xmath30 to @xmath376 .",
    "the structure @xmath377 contains less relations than @xmath378 by ( ii ) , hence @xmath379 . if @xmath380 then there exists a structure @xmath381 such that @xmath382 . by the girth condition on @xmath377 we know that the union of @xmath357 and the relational tuples intersecting @xmath357 is a forest .",
    "hence there is a structure @xmath383 isomorphic to this substructure of @xmath377 .",
    "now @xmath384 , hence @xmath385 .",
    "the essence of this reduction is the sparse incomparability lemma [ sparse ] .",
    "this polynomial reduction was proved with expanders in the case of digraphs @xcite .",
    "the reduction in the case of general relational structures needed a generalization of expanders called expander ( relational ) structures .",
    "the notion of expander relational structures was introduced in @xcite @xcite , and also a polynomial time construction of such structures with large girth is given there .",
    "99 a. atserias : on digraph coloring problems and treewidth duality . in : 20th ieee symposium on logic in computer science ( lics ) , 2005 ,",
    ". 106115 .",
    "a.k.chandra , p.m.merlin : optimal implementation of conjunctive queries in relational databases . in : acm symposium on theory of computing ( stoc ) , 1977 , 7790 .",
    "m. chudnovsky , n. robertson , p. seymour , r. thomas : the strong perfect graph theorem , annals of mathematics ( to appear ) .",
    "v. dalmau , a. krokhin , b. larose : first - order definable retraction problems for poset and reflexive digraphs . in : proceedings of the 19th ieee symposium on logic and computer science , 2004 , pp .",
    "232241 .",
    "t. feder , m. vardi : the computational structure of monotone monadic snp and constraint satisfaction : a study through datalog and group theory , siam j. comput .",
    "28 , 1 ( 1999 ) , 57104 .",
    "j. foniok , j. neetil , c. tardif : generalized dualities and maximal finite antichains in the homomorphism order of relational structures , kam - dimatia series .",
    "r. l. graham , b. rothschild , j. spencer : * ramsey theory * , wiley , 1980 .",
    "p. hell , j. neetil , x. zhu : duality and polynomial testing of tree homomorphisms , trans .",
    "348,4 , ( 1996 ) , 12811297 .",
    "n. immerman : languages that capture complexity classes , siam j. comput . 16",
    "( 1987 ) , 760778 .",
    "t. jensen , b. toft : * graph coloring problems * , wiley 1995 .",
    "g. kun : on the complexity of constraint satisfaction problem , phd thesis ( in hungarian ) , 2006 .",
    "g. kun : constraints , mmsnp and expander relational structures , manuscript , 2006 .",
    "r. e. ladner : on the structure of polynomial time reducibility , journal of the acm , 22,1 ( 1975 ) , 155171",
    ". t. luczak , j. neetil : a probabilistic approach to the dichotomy problem ( to appear in siam j. comp . ) . f. madelaine : constraint satisfaction problems and related logic , phd thesis , 2003 . f. madelaine and i. a. stewart : constraint satisfaction problems and related logic , manuscript , 2005",
    ". j. matouek : * using borsuk - ulam theorem ( lectures on topological methods in combinatorics and geometry ) * , springer , 2003 .",
    "j. matouek , j. neetil : constructions of sparse graphs with given homomorphisms ( to appear ) j. neetil : ramsey theory . in : * handbook of combinatorics",
    "r. l. graham , m. gr \" otschel , l. lov ' asz ) , elsevier , 1995 , pp .",
    "j. neetil , a. pultr : on classes of relations and graphs determined by subobjects and factorobjects , discrete math .",
    "22 ( 1978 ) , 287300 .",
    "j. neetil , p. ossona de mendez : low tree width decompositions , to appear in proceedings of 38th acm symposium on theory of computing , 2006 .",
    "j. neetil , v. r \" odl : chromatically optimal rigid graphs , j. comb .",
    "b 46 ( 1989 ) , 133141 .    j. neetil and c. tardif , duality theorems for finite structures ( characterising gaps and good characterizations ) , j. combin .",
    "theory  b 80 ( 2000 ) , 8097 .",
    "j. neetil , x. zhu : on sparse graphs with given colorings and homomorphisms , j. comb .",
    "b , 90,1 ( 2004 ) , 161172",
    ". b. rossman : existential positive types and preservation under homomorphisms , in : 20th ieee symposium on logic in computer science ( lics),2005 , pp . 467476 .",
    "m. y. vardi : the complexity of relational query languages , proceedings of 14th acm symposium on theory of computing , 1982 , pp ."
  ],
  "abstract_text": [
    "<S> we present a definition of the class np in combinatorial context as the set of languages of structures defined by finitely many forbidden lifted substructures . </S>",
    "<S> we apply this to special syntactically defined subclasses and show how they correspond to naturally defined ( and intensively studied ) combinatorial problems . </S>",
    "<S> we show that some types of combinatorial problems like edge colorings and graph decompositions express the full computational power of the class np . </S>",
    "<S> we then characterize constraint satisfaction problems ( i.e. @xmath0-coloring problems ) which are expressible by finitely many forbidden lifted substructures . </S>",
    "<S> this greatly simplifies and generalizes the earlier attempts to characterize this problem . as a corollary of this approach we perhaps find a proper setting of feder and vardi analysis of csp languages within the class mmsnp </S>"
  ]
}
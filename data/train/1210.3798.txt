{
  "article_text": [
    "one of the many definitions of the alexander polynomial of a knot is through state sums .",
    "kauffman has described and studied a state sum model for the alexander polynomial in great detail @xcite . in an earlier paper crowell",
    "has described another state sum model for the alexander polynomial for the subclass of alternating knots ( @xcite , theorem 2.12 ) .    in the next section",
    "we will recall the definition of crowell states and examine some of their properties . in section  [ sec : proof ]",
    "we will prove that    [ thm : connected ] if @xmath1 is an alternating prime knot and @xmath2 is a reduced knot diagram for @xmath1 , then any two states differ by a finite sequence of terminal edge exchanges .",
    "this theorem is similar in nature to the clock theorem of kauffman @xcite which states that any two kauffman states differ by a finite sequence of clockwise and counterclockwise moves , which was also proven in the language of graphs in section 4 of @xcite .",
    "this work is independent of those mentioned because of the simple reason that kauffman states and crowell states do not correspond to each other in any natural way as observed from the fact that the space of crowell states do not form a lattice in general ( see proposition  [ prop : notlattice ] ) .    in section [ sec : application ] , as an application we will give an alternative proof that @xmath0 torus knots are characterized by their alexander polynomials among alternating knots , which was originally proven by ozsvth and szab ( proposition 4.1 in @xcite ) .",
    "in this section we will review the definition of the state sum model for alternating links given by crowell @xcite and investigate some properties of the states .    given a knot @xmath1 and an oriented alternating diagram @xmath2 of @xmath1 with @xmath3 crossings",
    "we obtain a weighted labeled directed planar graph @xmath4 as follows : replace a small neighborhood of each crossing by a degree @xmath5 vertex according to the following figure ( @xmath6 is the vertex label ) :        [ prop : coloring ] this definition orients all edges and these orientations are compatible with orientations coming from a checkerboard coloring of the regions in the complement of @xmath2 .",
    "each edge gets an orientation since while traveling around a region the strands traveled alternate between under strand and over strand .",
    "hence at each crossing if an edge is coming in , the boundary of the region will continue along the over strand , which becomes an under strand at its other end , hence we get an orientation on that edge as well , consistent with the previous edge .",
    "these orientations are compatible with a checkerboard coloring since crossing a region to another across an edge we get opposite orientations in the plane .",
    "choose a vertex @xmath7 of @xmath4 .",
    "spanning trees rooted at @xmath7 ( edges are directed away from @xmath7 ) will be called states .",
    "let @xmath8 be the space of states and @xmath9 be the product of weights of all edges in a state @xmath10 . according to ( * ? ? ?",
    "* theorem 2.12 ) we get the renormalized alexander polynomial as a sum of monomials corresponding to each state by @xmath11 where @xmath12 is chosen so that the term with the least power of @xmath13 is a positive constant .",
    "[ prop : hamiltonpath ] for any vertex @xmath14 , there is a rooted hamiltonian path from @xmath7 to @xmath14 in @xmath15 .    since @xmath1 is a knot , @xmath15 as an unoriented graph is connected .",
    "pick an unoriented path @xmath16 starting at @xmath7 , ending at @xmath14 .",
    "if @xmath17 is not oriented away from the root , pick edges @xmath18 that go around one of the two regions adjacent to @xmath17 . due to proposition  [ prop :",
    "coloring ] , we get compatible orientations . at the end",
    "we get a rooted path which might visit some vertices more than once . for each vertex that is visited more than once , remove all edges between the first and last visits .",
    "[ cor : extendtree ] any rooted tree @xmath10 can be extended to a rooted spanning tree @xmath19 .    for any vertex @xmath14 not in @xmath10 ,",
    "find a rooted hamiltonian path @xmath20 from @xmath7 to @xmath14 using proposition  [ prop : hamiltonpath ] .",
    "add enough of the final segment of @xmath20 to the current tree so that the union will be connected .",
    "[ prop : statewithprescribedterminalvertex ] given a reduced alternating diagram for a prime knot , any edge in @xmath4 except those ending at @xmath7 appear as a teminal edge in at least one state .",
    "call the given edge @xmath21 starting at vertex @xmath22 , ending at vertex @xmath23",
    ". we will find a directed hamiltonian path from @xmath7 to @xmath22 , add the edge @xmath21 , and extend this path into a rooted spanning tree .",
    "use proposition  [ prop : hamiltonpath ] to construct a rooted hamiltonian path @xmath24 from @xmath7 to @xmath22 .",
    "there are two possible cases :    \\(a ) @xmath24 does nt go through @xmath23 : do nothing extra .",
    "\\(b ) @xmath24 goes through @xmath23 before reaching @xmath22 : adding @xmath21 to @xmath24 produces a loop . to avoid this problem",
    "we will go around as follows .",
    "assume @xmath24 contains an edge @xmath25 going from @xmath26 to @xmath23 and an edge @xmath27 going from @xmath23 to @xmath28 .",
    "we need to connect @xmath26 to @xmath28 by an oriented path avoiding @xmath25 and @xmath27 . to achieve this ,",
    "let @xmath29 be the region bounded on two sides by @xmath25 and @xmath27 and @xmath30 be the union of regions adjacent to @xmath29 along edges other than @xmath25 and @xmath27 . then starting at @xmath26 , following edges on the boundary of @xmath30 that are not on the boundary of @xmath29 , we reach @xmath28 .",
    "assume that @xmath1 is prime and @xmath2 is reduced , then this new path @xmath20 does not include @xmath25 and @xmath27 since otherwise we could draw a separating circle passing through the @xmath26 or @xmath28 and another common edge of @xmath29 and @xmath30 . replacing @xmath25 and @xmath27 by @xmath20 in @xmath24",
    ", we get a rooted path from @xmath7 to @xmath22 avoiding @xmath23 .",
    "it could include loops , which can be eliminated as in the proof of proposition  [ prop : hamiltonpath ] .",
    "next we need to extend the rooted hamiltonian path @xmath31 to a rooted spanning tree , keeping @xmath21 a terminal edge .",
    "consider the two edges coming out from @xmath23 , call them @xmath32 and @xmath33 , with terminal vertices @xmath34 and @xmath35 . using a similar argument as in the proof of case ( b ) above , consider @xmath29 being the region bounded by @xmath21 and @xmath32 , and @xmath30 the union of regions adjacent to @xmath29 except along @xmath21 and @xmath32 , and removing loops we get a directed path @xmath36 from @xmath23 to @xmath34 .",
    "starting at @xmath34 , add enough edges from the final segment of @xmath36 so that @xmath34 is connected to a vertex in @xmath31 .",
    "similarly do so for @xmath35 .",
    "now , use corollary  [ cor : extendtree ] to extend this tree to a rooted spanning tree . during this process @xmath21 stays a terminal edge since adding @xmath32 or @xmath33 would create a loop .",
    "the state sum in equation  [ eq : statesum ] resembles the state sum defined by kauffman @xcite .",
    "kauffman has studied an operation called _ clock move _ that transforms a state to another that differ only at two crossings and showed that all states differ from one another by a sequence of clock moves . with that in mind",
    "we define the following operation for reduced alternating diagrams :    a state @xmath37 is obtained from a state @xmath38 by a _",
    "terminal edge exchange _ move ( edge exchange for short ) if replacing a terminal edge in @xmath38 by the other incoming edge at the terminal vertex gives @xmath37 .",
    "[ prop : terminaledges ] at any terminal edge , edge exchange gives a new state , except at edges ending at a kink .",
    "if there is a kink at @xmath14 , there is a unique edge that connects to @xmath14 in any spanning tree , since the opposite edge is a loop . at any other vertex , it is easy to check that one still gets a rooted spanning tree .",
    "edge exchange gives a partial order on the set of states by defining the covering relation of the partial order as @xmath38 comes immediately before @xmath37 if @xmath37 is obtained from @xmath38 by one positive edge exchange .",
    "comparing these states with the black trees in kauffman states , even though states are rooted spanning trees in both models , in kauffman states the orientations on the edges are chosen after a spanning tree of the black graph is chosen , so the same edge can inherit different orientations in different states .",
    "furthermore , consider the graph whose vertices are crowell states and any two vertices are connected by an edge if there is a terminal edge exchange that takes one state to the other .",
    "the following proposition shows that edge exchanges do not correspond to clock moves under any bijection between the crowell and kauffman states since kauffman states form a distributive lattice @xcite .",
    "[ prop : notlattice ] the space of crowell states is not a lattice in general with any choice of a partial order compatible with terminal edge exchanges .    figure  [ fig:76states ] illustrates the graph of crowell states for the knot @xmath39 in rolfsen s table .",
    "let us assume that there is a partial order compatible with this graph , i.e. , an edge between two states exist if one is an immediate successor of the other .",
    "then any degree one vertex is either a local maximum or a local minimum . since this graph has three degree  1 vertices and in a finite lattice there is only one local maximum and only one local minimum , this particular graph can not be a lattice .    , the chosen root , and its space of states . ]",
    "in this section we will assume that @xmath1 is a prime knot and @xmath2 is a reduced alternating projection for @xmath1 .",
    "choose a root vertex @xmath7 in @xmath4 .",
    "we will provide an algorithm to go from one rooted spanning tree @xmath38 to another rooted spanning tree @xmath37 through a sequence of edge exchanges .",
    "we will label vertices @xmath14 of @xmath4 with distinct integers .",
    "an initial segment @xmath40 of a rooted spanning tree @xmath10 is the sequence of vertices on the unique rooted path from the root to @xmath14 in @xmath10 . for @xmath41 ,",
    "let @xmath42 denote the vertex that points to @xmath14 through an edge not in @xmath10 .",
    "let @xmath43 be a small neighborhood of the set of vertices below @xmath14 in @xmath10 , i.e. , those that can be reached from @xmath14 via directed paths in @xmath10 , the edges between them ( not necessarily in @xmath10 ) and the elementary regions surrounded by those edges .",
    "let @xmath44 be the connected component of @xmath45 containing the successor of @xmath46 in @xmath10 with the smaller label .",
    "when the tree @xmath10 is obvious from the context , we will suppress @xmath10 from these notations .",
    "the rooted meet of two rooted trees @xmath38 and @xmath37 is the connected component of the root in @xmath47 and will be denoted by @xmath48 .     and a state @xmath10 in @xmath4 .",
    ", title=\"fig : \" ] [ fig : belw ]    in order to prove theorem  [ thm : connected ] , we will show that for any given two states @xmath38 and @xmath37 , we can persistently enlarge @xmath48 .",
    "[ lem : removebeloww ] given a state @xmath10 and a vertex @xmath46 other than the root @xmath7 , if @xmath49 , then there is a sequence of edge exchanges that converts the incoming edge for @xmath46 into a terminal edge , removing edges only below @xmath46 .",
    "[ lem : findw ] under the conditions of lemma [ lem : removebeloww ] , there is a vertex @xmath50 with @xmath51 .    .",
    "]    assume @xmath52 is nonempty . given @xmath46 ,",
    "consider @xmath53 . since @xmath1 is prime and @xmath2",
    "is reduced , @xmath54 is not a separating circle , hence there are at least @xmath5 intersections .",
    "since the orientations of adjacent regions alternate , we get at least two edges entering into @xmath55 .    pick a vertex @xmath56 among all terminal vertices of edges in @xmath57 entering into @xmath55 not originating from @xmath46 .",
    "this choice implies that @xmath58 .",
    "furthermore the union @xmath59 contains an unoriented circuit of edges and vertices that separate @xmath55 from @xmath60 ( see figure  [ fig : findw ] ) , hence going from @xmath56 to a vertex in @xmath60 would take at least two edge exchanges .",
    "we conclude that @xmath61 as well .",
    "if @xmath52 is empty , then @xmath46 is already a terminal vertex .",
    "otherwise , we will use induction on the depth @xmath62 of the tree @xmath52 .    for @xmath63",
    ", @xmath52 could contain up to two vertices .",
    "if there is only one vertex , it is a terminal vertex and an edge exchange empties @xmath52 .",
    "if there are two vertices , @xmath52 has two components , which as in the proof of lemma  [ lem : findw ] , are not adjacent to one another . lemma  [ lem : findw ] tells that an edge exchange at either vertex decreases the size of @xmath52 , and we are led to the case of one vertex .",
    "assume the hypothesis is true for all trees @xmath52 of depth @xmath62 and less .",
    "if @xmath52 has depth @xmath64 , use lemma  [ lem : findw ] to find a @xmath56 with the property @xmath65 , in particular @xmath66 .",
    "therefore by the induction hypothesis @xmath56 becomes a terminal vertex after a finite sequence of edge exchanges only removing edges in @xmath67 .",
    "then performing an edge exchange at @xmath56 decreases the size of @xmath52 . hence repeating",
    "this process @xmath46 becomes a terminal vertex while only edges below @xmath46 being removed throughout the process .",
    "given two distinct rooted spanning trees @xmath38 and @xmath37 , pick a vertex @xmath46 adjacent to @xmath48 along an edge in @xmath37 . note that @xmath68 since @xmath69 and once @xmath46 is a terminal edge , after an edge exchange @xmath46 will be connected to @xmath7 along the same rooted hamiltonian path as in @xmath37 .",
    "let @xmath70 be the vertices that lead to @xmath46 in @xmath38 and @xmath37 respectively . by definition , @xmath71 and @xmath72 .",
    "hence @xmath73 , but @xmath74 , hence @xmath75 , which means @xmath76 .",
    "applying lemma [ lem : removebeloww ] , we get a sequence of edge exchanges that ends in a state where @xmath46 is a terminal vertex without removing any edges from the rooted meet .",
    "now perform an edge exchange at @xmath46 , this enlarges the rooted meet .",
    "since the rooted meet only enlarges during this process , in finitely many repetitions of this process we reach @xmath37 .",
    "in this section we will provide a different proof of the following result originally proved by ozsvth and szab :      let @xmath2 be a reduced alternating projection for a knot @xmath1 with @xmath77 . since all coefficients of powers of @xmath78 are @xmath79 , each state has a different weight and @xmath80 is not a product of two alternating knot polynomials ( c.f .",
    "4.1 ) ) , hence @xmath1 is prime .    let @xmath81 be the state with the least @xmath13 power . since @xmath1 is prime and the fact that each edge exchange changes the power of @xmath78 by @xmath82 , using theorem  [ thm : connected ] we get a linear ordering on the @xmath83 states starting at @xmath81 , reaching each next state by exchanging an edge of weight @xmath79 with an edge of weight @xmath78 .",
    "according to proposition  [ prop : terminaledges ] and due to this linear order , @xmath81 and the top state @xmath84 have only one terminal edge each , hence they have no branching , whereas intermediate states have @xmath85 terminal edges .",
    "since proposition  [ prop : statewithprescribedterminalvertex ] tells that each edge @xmath14 ( except the two that point to @xmath7 ) can be extended to a state having @xmath14 as a terminal edge , and since we can reach that state from @xmath81 by positive edge exchanges , we see that all edges in @xmath81 have weight @xmath79 .",
    "we conclude that @xmath81 has @xmath86 edges since each edge of weight @xmath79 is used only once in an edge exchange and no new edges emerge with weight @xmath79 as we go from @xmath81 to @xmath84 .",
    "edge orientations and weights do not depend on the choice of the root vertex , hence , after moving the root from @xmath7 to @xmath87 , we still get a space of states with the same properties , in particular , there will be a new state @xmath88 containing a linear directed chain of @xmath86 vertices starting at @xmath87 , ending at @xmath7 . hence we get a cycle of length @xmath83 of edges of weight @xmath79 .",
    "similarly , all remaining edges have weight @xmath78 , form a loop and are used in @xmath84 , except the one pointing at the root .",
    "this information tells us that if there is an incoming edge of weight @xmath78 at a vertex @xmath14 , the next edge of weight @xmath78 has to be on the same side of the loop of @xmath79 edges due to the cyclic alternating orientation of edges at a vertex .",
    "since these edges with weight @xmath78 form a loop as well , they have to go between consecutive vertices .",
    "this gives us the diagram for the @xmath0 torus knot .",
    "_ acknowledgements .",
    "_ i would like to thank bedia akyar for the invitation to give a talk at dokuz eyll university , during which time period i started exploring the properties of the crowell state space .",
    "most of the work was done during my time at ferris state university .",
    "i would also like to thank mahir bilen can and mohan bhupal for providing feedback ."
  ],
  "abstract_text": [
    "<S> we study the set of crowell states for alternating knot projections and show that for prime alternating knots the space of states for a reduced projection is connected , a result similar to that for kauffman states . as an application we give a new proof of a result of ozsvth and szab characterizing @xmath0 torus knots among alternating knots . </S>"
  ]
}
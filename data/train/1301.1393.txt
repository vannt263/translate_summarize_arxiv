{
  "article_text": [
    "most versions of the stable model semantics involve grounding . for instance , according to the flp semantics from  @xcite , assuming that the domain is @xmath1 , program p(2 ) &  &  x : p(x ) -1 + p(1 ) & & p(-1 )   is identified with its ground instance w.r.t the domain : p(2 ) &  &  \\{-1:p(-1 ) , 1:p(1 ) , 2:p(2 ) } -1 + p(1 ) & & p(-1 )  . as described in  @xcite , it is straightforward to extend the definition of satisfaction to ground aggregate expressions .",
    "for instance , set @xmath2 does not satisfy the body of the first rule of , but satisfies the bodies of the other rules .",
    "the flp reduct of program   relative to @xmath2 consists of the last two rules , and @xmath3 is its minimal model .",
    "indeed , @xmath3 is the only flp answer set of program  .    on the other hand , according to the semantics from  @xcite , program   is identified with some complex propositional formula containing nested implications : @xmath4 under the stable model semantics of propositional formulas @xcite , this formula has two answer sets : @xmath2 and @xmath5 .",
    "the relationship between the flp and the ferraris semantics was studied in  @xcite .",
    "unlike the flp semantics , the definition from @xcite is not applicable when the domain is infinite because it would require the representation of an aggregate expression to involve `` infinite '' conjunctions and disjunctions .",
    "this limitation was overcome in the semantics presented in  @xcite , which extends the first - order stable model semantics from  @xcite to incorporate aggregate expressions .",
    "recently , it was further extended to formulas involving generalized quantifiers @xcite , which provides a unifying framework of various extensions of the stable model semantics , including programs with aggregates , programs with abstract constraint atoms  @xcite , and programs with nonmonotonic dl - atoms  @xcite .    in this paper , we revisit the first - order stable model semantics and its extension to incorporate generalized quantifiers .",
    "we provide an alternative , equivalent definition of a stable model by referring to grounding and reduct instead of the @xmath0 operator .",
    "our work is inspired by the work of truszczynski  [ @xcite ] , who introduces infinite conjunctions and disjunctions to account for grounding quantified sentences .",
    "our definition of a stable model can be viewed as a reformulation and a further generalization of his definition to incorporate generalized quantifiers .",
    "we define grounding in the same way as done in the flp semantics , but define a reduct differently so that the semantics agrees with the one by ferraris  [ @xcite ] . as we explain in section  [ sec : reduct ] , our reduct of program   relative to @xmath2 is &  & + p(-1 ) & & \\{-1:p(-1 ) , 1:p(1 ) , 2 : ) } > -1 + p(1 ) & & p(-1 )   , which is the program obtained from  ( [ ex1-ground ] ) by replacing each maximal subformula that is not satisfied by @xmath2 with  @xmath6 .",
    "set @xmath3 is an answer set of program  ( [ ex1 ] ) as it is a minimal model of the reduct . likewise",
    "the reduct relative to @xmath5 is @xmath7 and @xmath5 is a minimal model of the program .",
    "the semantics is more direct than the one from  @xcite as it does not involve the complex translation into a propositional formula .",
    "while the flp semantics in  @xcite was defined in the context of logic programs with aggregates , it can be straightforwardly extended to allow other `` complex atoms . ''",
    "indeed , the flp reduct is the basis of the semantics of hex programs  @xcite . in  @xcite",
    ", the flp reduct was applied to provide a semantics of nonmonotonic dl - programs  @xcite . in  @xcite",
    ", the flp semantics of logic programs with aggregates was generalized to the first - order level . that semantics is defined in terms of the @xmath8 operator , which is similar to the @xmath0 operator .",
    "this paper further extends the definition to allow generalized quantifiers . by providing an alternative definition in the way that the other semantics was defined , this paper provides a useful insight into the relationship between the first - order stable model semantics and the flp stable model semantics for programs with generalized quantifiers .",
    "while the two semantics behave differently in the general case , we show that they coincide on some reasonable syntactic class of logic programs .",
    "this implies that an implementation of one of the semantics can be viewed as an implementation of the other semantics if we limit attention to that class of logic programs .",
    "the paper is organized as follows .",
    "section  [ sec : fosm ] reviews the first - order stable model semantics and its equivalent definition in terms of grounding and reduct , and section  [ sec : smgq ] extends that definition to incorporate generalized quantifiers .",
    "section  [ sec : flp ] provides an alternative definition of the flp semantics with generalized quantifiers via a translation into second - order formulas .",
    "section  [ sec : comparison ] compares the flp semantics and the first - order stable model semantics in the general context of programs with generalized quantifiers .",
    "this review follows  @xcite , a journal version of  @xcite , which distinguishes between intensional and non - intensional predicates .    a _ formula _",
    "is defined the same as in first - order logic .",
    "a _ signature _ consists of _ function constants _ and _ predicate constants_. function constants of arity @xmath9 are also called _",
    "object constants_. we assume the following set of primitive propositional connectives and quantifiers : @xmath10 @xmath11 is an abbreviation of @xmath12 , and @xmath13 stands for @xmath14 .",
    "we distinguish between atoms and atomic formulas as follows : an _ atom _ of a signature  @xmath15 is an @xmath16-ary predicate constant followed by a list of  @xmath16 terms that can be formed from function constants in @xmath15 and object variables ; _ atomic formulas _ of  @xmath15 are atoms of  @xmath15 , equalities between terms of  @xmath15 , and the 0-place connectives  @xmath6 and @xmath17 .",
    "the stable models of @xmath18 relative to a list of predicates @xmath19 are defined via the _ stable model operator with the intensional predicates @xmath20 _ , denoted by @xmath21 $ ] .",
    "are the predicates that we `` intend to characterize '' by @xmath18 .",
    "] let @xmath22 be a list of distinct predicate variables @xmath23 .",
    "by @xmath24 we denote the conjunction of the formulas @xmath25 , where @xmath26 is a list of distinct object variables of the same length as the arity of @xmath27 , for all @xmath28 . by @xmath29",
    "we denote the conjunction of the formulas @xmath30 for all @xmath28 , and @xmath31 stands for @xmath32 . for any first - order sentence",
    "@xmath18 , expression @xmath33 $ ] stands for the second - order sentence @xmath34 where @xmath35 is defined recursively :    * @xmath36 for any list @xmath37 of terms ; * @xmath38 for any atomic formula  @xmath18 that does not contain members of  @xmath20 ; * @xmath39 ; * @xmath40 ; * @xmath41 ; * @xmath42 ; * @xmath43 .    a model of a sentence @xmath18 ( in the sense of first - order logic ) is called _ @xmath20-stable _ if it satisfies @xmath44 $ ] .    [ ex:2 ]",
    "let @xmath18 be sentence @xmath45 , and let @xmath46 be an interpretation whose universe is the set of all nonnegative integers @xmath47 , and @xmath48 , @xmath49 for all @xmath50 .",
    "section  2.4 of @xcite tells us that @xmath46 satisfies @xmath51 $ ] .      for any signature @xmath15 and its interpretation @xmath46 , by @xmath52",
    "we mean the signature obtained from  @xmath15 by adding new object constants @xmath53 , called _",
    "object names _ , for every element @xmath54 in the universe of @xmath46 .",
    "we identify an interpretation @xmath46 of @xmath15 with its extension to @xmath52 defined by @xmath55 .    in order to facilitate defining a reduct",
    ", we provide a reformulation of the standard semantics of first - order logic via `` a ground formula w.r.t . an interpretation . ''",
    "[ def : gr - formula ] for any interpretation @xmath46 of a signature @xmath15 , a _ ground formula w.r.t .",
    "@xmath46 _ is defined recursively as follows .",
    "* @xmath56 , where @xmath57 is a predicate constant of @xmath15 and @xmath58 are object names of @xmath59 , is a ground formula w.r.t .",
    "@xmath46 ; * @xmath17 and @xmath6 are ground formulas w.r.t .",
    "@xmath46 ; * if @xmath18 and @xmath60 are ground formulas w.r.t .",
    "@xmath46 , then @xmath61 , @xmath62 , @xmath63 are ground formulas w.r.t .",
    "@xmath46 ; * if @xmath64 is a set of pairs of the form @xmath65 where @xmath53 is an object name in @xmath59 and @xmath18 is a ground formula w.r.t .",
    "@xmath46 , then @xmath66 and @xmath67 are ground formulas w.r.t .",
    "@xmath46 .",
    "the following definition describes a process that turns any first - order sentence into a ground formula w.r.t .",
    "an interpretation :    [ def : gr - fo ] let @xmath18 be any first - order sentence of a signature @xmath15 , and let @xmath46 be an interpretation of @xmath15 whose universe is @xmath68 . by @xmath69",
    "$ ] we denote the ground formula w.r.t .",
    "@xmath46 , which is obtained by the following process :    * @xmath70 = p((t_1^i)^\\dia , \\dots , ( t_n^i)^\\dia)$ ] ; * @xmath71 =          \\begin{cases }           \\top & \\text { if $ t_1^i = t_2^i$ , and }   \\\\          \\bot & \\text{otherwise } ;         \\end{cases }",
    "$ ] * @xmath72 = \\top$ ] ;   @xmath73=\\bot$ ] ; * @xmath74= gr_i[f]\\odot gr_i[g]\\ \\ \\ \\   ( \\odot\\in\\{\\land,\\lor,\\rar\\})$ ] ; * @xmath75 = q(\\{\\xi^\\dia\\!\\!:\\!gr_i[f(\\xi^\\dia ) ] \\mid \\xi\\in u\\})$ ]  ( @xmath76 ) .",
    "[ def : sat - fo ] for any interpretation @xmath46 and any ground formula @xmath18 w.r.t .",
    "@xmath46 , the truth value of @xmath18 under @xmath46 , denoted by @xmath77 , is defined recursively as follows .",
    "* @xmath78 ; * @xmath79 ;   @xmath80 ; * @xmath81 iff @xmath82 and @xmath83 ; * @xmath84 iff @xmath82 or @xmath83 ; * @xmath85",
    "iff @xmath83 whenever @xmath82 ; * @xmath86 iff the set @xmath87 is the same as the universe of @xmath46 ; * @xmath88 iff the set @xmath89 is not empty .",
    "we say that @xmath46 _ satisfies _ @xmath18 , denoted @xmath90 , if @xmath82 .",
    "* example  [ ex:2 ] continued ( i)*.     an interpretation  @xmath46 of a signature  @xmath15 can be represented as a pair @xmath91 , where  @xmath92 is the restriction of  @xmath46 to the function constants of @xmath15 , and @xmath93 is the set of atoms , formed using predicate constants from  @xmath15 and the object names from  @xmath59 , which are satisfied by  @xmath46 .",
    "for example , interpretation @xmath46 in example  [ ex:2 ] can be represented as @xmath94 , where @xmath92 maps each integer to itself .",
    "the following proposition is immediate from the definitions :    [ fo - sat ] let @xmath15 be a signature that contains finitely many predicate constants , let @xmath95 be the set of predicate constants in  @xmath15 , let @xmath96 be an interpretation of @xmath15 , and let @xmath18 be a first - order sentence of @xmath15 .",
    "then @xmath90 iff @xmath97 $ ] .",
    "the introduction of the intermediate form of a ground formula w.r.t .",
    "an interpretation helps us define a reduct .",
    "[ def : reduct - fosm ] for any ground formula @xmath18 w.r.t .",
    "@xmath46 , the _ reduct _ of @xmath18 relative to @xmath46 , denoted by @xmath98 , is obtained by replacing each maximal subformula that is not satisfied by @xmath46 with  @xmath6 .",
    "it can also be defined recursively as follows .    *",
    "@xmath99 * @xmath100 ; * @xmath101 * @xmath102    the following theorem tells us how first - order stable models can be characterized in terms of grounding and reduct .",
    "[ prop : ground - fosm ] let @xmath15 be a signature that contains finitely many predicate constants , let @xmath95 be the set of predicate constants in  @xmath15 , let @xmath96 be an interpretation of @xmath15 , and let @xmath18 be a first - order sentence of @xmath15 .",
    "@xmath46 satisfies @xmath103 $ ] iff @xmath93 is a minimal set of atoms that satisfies @xmath104)^\\mu{i}$ ] .    * example  [ ex:2 ] continued ( ii)*.       the definitions of grounding and a reduct in the previous section are inspired by the work of truszczynski  [ @xcite ] , where he introduces infinite conjunctions and disjunctions to account for the result of grounding @xmath105 and @xmath106 w.r.t . a given interpretation .",
    "differences between the two approaches are illustrated in the following example :    consider the formula @xmath107 and the interpretation @xmath46 whose universe is the set of all nonnegative integers @xmath108 . according to  @xcite , grounding of @xmath18 w.r.t .",
    "@xmath46 results in the infinitary propositional formula @xmath109 on the other hand , formula @xmath69 $ ] is @xmath110    our definition of a reduct is essentially equivalent to the one defined in  @xcite . in the next section ,",
    "we extend our definition to incorporate generalized quantifiers .",
    "we follow the definition of a formula with generalized quantifiers from  ( * ? ? ?",
    "* section  5 ) ( that is to say , with lindstrm quantifiers @xcite without the isomorphism closure condition ) .",
    "we assume a set @xmath111 of symbols for generalized quantifiers .",
    "each symbol in @xmath111 is associated with a tuple of nonnegative integers @xmath112 ( @xmath113 , and each @xmath114 is  ) , called the _",
    "type_. a _ ( gq-)formula ( with the set @xmath111 of generalized quantifiers ) _ is defined in a recursive way :    * an atomic formula ( in the sense of first - order logic ) is a gq - formula ; * if @xmath115 ( @xmath113 ) are gq - formulas and @xmath116 is a generalized quantifier of type @xmath117 in  @xmath111 , then q[_1] ",
    "[_k ] ( f_1(_1),  ,f_k(_k ) ) is a gq - formula , where each @xmath118 ( @xmath119 ) is a list of distinct object variables whose length is @xmath114 .",
    "we say that an occurrence of a variable @xmath120 in a gq - formula @xmath18 is _ bound _ if it belongs to a subformula of @xmath18 that has the form @xmath121\\dots[\\bx_k ] ( f_1(\\bx_1),\\dots , f_k(\\bx_k))$ ] such that @xmath120 is in some  @xmath118 .",
    "otherwise the occurrence is _",
    "free_. we say that @xmath120 is _ free _ in  @xmath18 if @xmath18 contains a free occurrence of @xmath120 .",
    "a _ ( gq-)sentence _ is a gq - formula with no free variables .",
    "we assume that @xmath111 contains type @xmath122 quantifiers @xmath123 and @xmath124 , type @xmath125 quantifiers @xmath126 , and type @xmath127 quantifiers @xmath128 .",
    "each of them corresponds to the standard logical connectives and quantifiers  @xmath129 .",
    "these generalized quantifiers will often be written in the familiar form .",
    "for example , we write @xmath61 in place of @xmath130[](f , g)$ ] , and write @xmath131 in place of @xmath132 ( f(x))$ ] .    as in first - order logic ,",
    "an interpretation @xmath46 consists of the universe @xmath68 and the evaluation of predicate constants and function constants .",
    "for each generalized quantifier @xmath116 of type @xmath133 , @xmath134 is a function from @xmath135 to @xmath136 , where @xmath137 denotes the power set of @xmath138 .",
    "[ e-1 ] besides the standard connectives and quantifiers , the following are some examples of generalized quantifiers .",
    "* type @xmath127 quantifier @xmath139 such that @xmath140 iff @xmath141 ;   is any subset of @xmath68 .",
    "we will skip such explanation . ]",
    "* type @xmath142 quantifier @xmath143 such that @xmath144 iff @xmath145 ; * type @xmath146 quantifier @xmath147 such that @xmath148 iff * * @xmath149 is defined , * * @xmath150 , where @xmath151 is an integer , and * * @xmath152 .    given a sentence @xmath18 of @xmath59 , @xmath77",
    "is defined recursively as follows :    * @xmath153 , * @xmath154 , * for a generalized quantifier @xmath116 of type @xmath117 , @xmath155\\dots[\\bx_k](f_1(\\bx_1),\\dots , f_k(\\bx_k)))^i         = q^{u}((\\bx_1\\!:\\!f_1(\\bx_1))^i,\\dots,(\\bx_k\\!:\\!f_k(\\bx_k))^i ) ,     \\ea\\ ] ] where @xmath156 .",
    "we assume that , for the standard logical connectives and quantifiers @xmath116 , functions @xmath157 have the standard meaning :    2    * @xmath158 iff @xmath159 ; * @xmath160 iff @xmath161 ; * @xmath162 iff @xmath163 ; denotes the empty tuple . for any interpretation @xmath46 , @xmath164 . for @xmath46 to satisfy @xmath165[](f , g)$ ]",
    ", both @xmath166 and @xmath167 have to be @xmath168 , which means that @xmath169 . ] * @xmath170 iff @xmath171 or @xmath172 ; * @xmath173 iff @xmath174 is @xmath175 or @xmath176 is @xmath168 ; * @xmath177 ; * @xmath178 .",
    "we say that an interpretation @xmath46 _ satisfies _ a gq - sentence @xmath18 , or is a _ model _ of @xmath18 , and write @xmath90 , if @xmath179 . a gq - sentence",
    "@xmath18 is _ logically valid _ if every interpretation satisfies @xmath18 .",
    "a gq - formula with free variables is said to be _ logically valid _ if its universal closure is logically valid .",
    "[ ex : main ] program  ( [ ex1 ] ) in the introduction is identified with the following gq - formula  @xmath180 : @xmath181[y ] ( p(x),\\ y\\mvis 2 ) \\rar p(2))\\\\   \\land ~(q_{(\\sum , > ) } [ x][y ] ( p(x),\\ y\\mvis -1 ) \\rar p(-1))\\\\    \\land ~ ( p(-1)\\rar p(1 ) ) \\ . \\ea\\ ] ] consider two herbrand interpretations of the universe @xmath182 : @xmath183 and  @xmath184 .",
    "we have @xmath185[y ] ( p(x),\\ y=2))^{i_1}=\\true$ ] since    * @xmath186 and @xmath187 ; * @xmath188 .    similarly , @xmath189[y ] ( p(x),\\ y\\mvis -1))^{i_2}=\\true$ ] since    * @xmath190 and @xmath191 ; * @xmath192 .",
    "consequently , both @xmath193 and @xmath194 satisfy @xmath180 .",
    "for any gq - formula @xmath18 and any list of predicates @xmath195 , formula @xmath44 $ ] is defined as @xmath196 where @xmath35 is defined recursively :    * @xmath36 for any list @xmath37 of terms ; * @xmath38 for any atomic formula  @xmath18 that does not contain members of  @xmath20 ; * @xmath197\\dots[\\bx_k ] ( f_1(\\bx_1),\\dots , f_k(\\bx_k)))^ * = \\\\    \\hspace{3em } q[\\bx_1]\\dots[\\bx_k ] ( f_1^*(\\bx_1),\\dots , f_k^*(\\bx_k ) )    \\land\\ q[\\bx_1]\\dots[\\bx_k ] ( f_1(\\bx_1),\\dots , f_k(\\bx_k ) ) .",
    "\\ea\\ ] ]    when @xmath18 is a sentence , the models of @xmath44 $ ] are called the _",
    "@xmath20-stable _ models of  @xmath18 : they are the models of @xmath18 that are `` stable '' on @xmath20 .",
    "we often simply write @xmath198 $ ] in place of @xmath33 $ ] when @xmath20 is the list of all predicate constants occurring in  @xmath18 , and call @xmath20-stable models simply stable models .    as explained in  @xcite , this definition of a stable model is a proper generalization of the first - order stable model semantics .",
    "* example  [ ex : main ] continued ( i)*.       the reduct - based definition of stable models presented in section  [ ssec : reduct - fosm ] can be extended to gq - formulas as follows .",
    "let @xmath46 be an interpretation of a signature @xmath15 .",
    "as before , we assume a set @xmath111 of generalized quantifiers , which contains all propositional connectives and standard quantifiers .",
    "[ def : gr - gq - formula ] a ground gq - formula w.r.t .",
    "@xmath46 is defined recursively as follows :    *",
    "@xmath56 , where @xmath57 is a predicate constant of @xmath15 and @xmath58 are object names of @xmath59 , is a ground gq - formula w.r.t .",
    "@xmath46 ; * for any @xmath199 of type @xmath200 , if each @xmath201 is a set of pairs of the form @xmath202 where @xmath203 is a list of object names from  @xmath59 whose length is @xmath114 and @xmath18 is a ground gq - formula w.r.t .",
    "@xmath46 , then @xmath204 is a ground gq - formula w.r.t . @xmath46 .",
    "the following definition of grounding turns any gq - sentence into a ground gq - formula w.r.t .",
    "an interpretation :    [ def : gr - gq ] let @xmath18 be a gq - sentence of a signature @xmath15 , and let @xmath46 be an interpretation of  @xmath15 .",
    "by @xmath69 $ ] we denote the ground gq - formula w.r.t .",
    "@xmath46 that is obtained by the process similar to the one in definition  [ def : gr - fo ] except that the last two clauses are replaced by the following single clause :    * @xmath205\\dots[\\bx_k ] ( f_1(\\bx_1),\\dots , f_k(\\bx_k ) ) ] = q ( s_1,\\dots , s_k )    $ ] + where @xmath206\\mid \\bfxi^\\dia \\text { is a list of      object names from $ \\sigma^i$ whose length is $ n_i$ } \\}$ ] .    for any interpretation @xmath46 and any ground gq - formula @xmath18 w.r.t .",
    "@xmath46 , the satisfaction relation @xmath90 is defined recursively as follows .",
    "[ def : sat - gq ] for any interpretation @xmath46 and any ground gq - formula @xmath18 w.r.t .",
    "@xmath46 , the satisfaction relation @xmath90 is defined similar to definition  [ def : sat - fo ] except that the last five clauses are replaced by the following single clause :    * @xmath207 where @xmath208 .    * example  [ ex : main ] continued ( ii)*.     [ prop : gq - sat ] let @xmath15 be a signature that contains finitely many predicate constants , let @xmath95 be the set of predicate constants in  @xmath15 , let @xmath96 be an interpretation of @xmath15 , and let @xmath18 be a gq - sentence of @xmath15 .",
    "then @xmath90 iff @xmath209 $ ] .    for any gq - formula @xmath18 w.r.t .",
    "@xmath46 , the reduct of @xmath18 relative to @xmath46 , denoted by @xmath98 , is defined in the same way as in definition  [ def : reduct - fosm ] by replacing the last two clauses with the following single clause :    * @xmath210 where @xmath211 .",
    "[ prop : ground - smgq ] let @xmath15 be a signature that contains finitely many predicate constants , let @xmath95 be the set of predicate constants in  @xmath15 , let @xmath96 be an interpretation of @xmath15 , and let @xmath18 be a gq - sentence of @xmath15 . @xmath212 $ ] iff @xmath93 is a minimal set of atoms that satisfies @xmath104)^\\mu{i}$ ]  .",
    "* example  [ ex : main ] continued ( iii ) .",
    "*     extending theorem  [ prop : ground - smgq ] to allow an arbitrary list of intensional predicates , rather than @xmath95 , is straightforward in view of proposition  1 from  @xcite .",
    "the flp stable model semantics  @xcite is an alternative way to define stable models .",
    "it is the basis of hex programs , an extension of the stable model semantics with higher - order and external atoms , which is implemented in system  dlv - hex .",
    "the first - order generalization of the flp stable model semantics for programs with aggregates was given in  @xcite , using the @xmath8 operator that is similar to the @xmath0 operator . in this section we show how it can be extended to allow generalized quantifiers .",
    "a _ ( general ) rule _ is of the form hb where @xmath213 and @xmath214 are arbitrary gq - formulas .",
    "a _ ( general ) program _ is a finite set of rules .",
    "let @xmath20 be a list of distinct predicate constants @xmath215 , and let @xmath22 be a list of distinct predicate variables @xmath23 .",
    "for any formula @xmath60 , formula @xmath216 is obtained from @xmath60 by replacing all occurrences of predicates from @xmath20 with the corresponding predicate variables from  @xmath22 .",
    "let @xmath217 be a finite program whose rules have the form  ( [ rule - f ] ) .",
    "the _ gq - representation _ @xmath218 of @xmath217 is the conjunction of the universal closures of @xmath219 for all rules  ( [ rule - f ] ) in @xmath217 . by @xmath220",
    "$ ] we denote the second - order formula @xmath221 where @xmath222 is defined as the conjunction of the universal closures of @xmath223 for all rules @xmath224 in @xmath217 .",
    "we will often simply write @xmath225 $ ] instead of @xmath226 $ ] when @xmath20 is the list of all predicate constants occurring in  @xmath217 , and call a model of @xmath225 $ ] an _ flp - stable _ model of  @xmath217 .",
    "* example  [ ex : main ] continued ( iv ) . *",
    "in this section , we show a class of programs with gqs for which the flp semantics and the first - order stable model semantics coincide .    the following definition is from  @xcite .",
    "we say that a generalized quantifier @xmath116 is _ monote in the @xmath227-th argument position _ if the following holds for any universe @xmath68 : if @xmath228 and @xmath229 , then @xmath230    consider a program @xmath217 consisting of rules of the form @xmath231 ( @xmath232 ; @xmath233 ) , where each @xmath234 is an atomic formula and each @xmath235 is an atomic formula or a gq - formula   such that all @xmath236 are atomic formulas .",
    "furthermore we require that , for every gq - formula   in one of @xmath237 , @xmath116 is monotone in all its argument positions .",
    "[ cor : flp - sm - hex ] let @xmath217 be a program whose syntax is described as above , and let @xmath18 be the gq - representation of @xmath217 . then @xmath220 $ ]",
    "is equivalent to @xmath44 $ ] .",
    "consider the following one - rule program : p(a )  q_0 [ x ]  p(x )  .",
    "this program does not belong to the syntactic class of programs stated in proposition  [ cor : flp - sm - hex ] since @xmath238\\ p(x)$ ] is not monotone in @xmath239 .",
    "indeed , both @xmath175 and @xmath240 satisfy @xmath241 $ ] , but only @xmath175 satisfies @xmath242 $ ] .",
    "conditions under which the flp semantics coincides with the first - order stable model semantics has been studied in  @xcite in the context of logic programs with aggregates .",
    "we introduced two definitions of a stable model .",
    "one is a reformulation of the first - order stable model semantics and its extension to allow generalized quantifiers by referring to grounding and reduct , and the other is a reformulation of the flp semantics and its extension to allow generalized quantifiers by referring to a translation into second - order logic .",
    "these new definitions help us understand the relationship between the flp semantics and the first - order stable model semantics , and their extensions . for the class of programs where the two semantics coincide",
    ", system dlv - hex can be viewed as an implementation of the stable model semantics of gq - formulas ; a recent extension of system f2lp  @xcite to allow `` complex '' atoms may be considered as a front - end to dlv - hex to implement the generalized flp semantics .",
    "we are grateful to vladimir lifschitz for useful discussions related to this paper .",
    "we are also grateful to joseph babb and the anonymous referees for their useful comments .",
    "this work was partially supported by the national science foundation under grant iis-0916116 and by the south korea it r&d program mke / kiat 2010-td-300404 - 001 .",
    "faber , w. , leone , n. , pfeifer , g. : recursive aggregates in disjunctive logic programs : semantics and complexity . in : proceedings of european conference on logics in artificial intelligence ( jelia ) .",
    "( 2004 )          bartholomew , m. , lee , j. , meng , y. : first - order extension of the flp stable model semantics via modified circumscription . in : proceedings of international joint conference on artificial intelligence ( ijcai ) .",
    "( 2011 ) 724730              eiter , t. , ianni , g. , lukasiewicz , t. , schindlauer , r. , tompits , h. : combining answer set programming with description logics for the semantic web .",
    "artificial intelligence * 172*(12 - 13 ) ( 2008 ) 14951539      eiter , t. , ianni , g. , schindlauer , r. , tompits , h. : a uniform integration of higher - order reasoning and external evaluations in answer - set programming . in : proceedings of international joint conference on artificial intelligence ( ijcai ) .",
    "( 2005 ) 9096      westersthl , d. : generalized quantifiers . in : the stanford encyclopedia of philosophy ( winter 2008 edition ) .",
    "( 2008 ) url = @xmath243http://plato.stanford.edu / archives / win2008/entries / generalized - quantifiers/@xmath244 .",
    "lee , j. , meng , y. : stable models of formulas with generalized quantifiers . in : proceedings of international workshop on nonmonotonic reasoning ( nmr ) .",
    "( 2012 ) http://peace.eas.asu.edu/joolee/papers/smgq-nmr.pdf .",
    "lee , j. , palla , r. : reformulating the situation calculus and the event calculus in the general theory of stable models and in answer set programming .",
    "journal of artificial intelligence research ( jair ) * 43 * ( 2012 ) 571620"
  ],
  "abstract_text": [
    "<S> we present alternative definitions of the first - order stable model semantics and its extension to incorporate generalized quantifiers by referring to the familiar notion of a reduct instead of referring to the @xmath0 operator in the original definitions . also , we extend the flp stable model semantics to allow generalized quantifiers by referring to an operator that is similar to the @xmath0 operator . for a reasonable syntactic class of logic programs </S>",
    "<S> , we show that the two stable model semantics of generalized quantifiers are interchangeable . </S>"
  ]
}
{
  "article_text": [
    "while the application of ra techniques for data transmissions is appealing in many application scenarios such as sensor networks , signalling or unpredictable and bursty low duty cycle user traffic , often concerns are expressed about the limitations in terms of spectral efficiency and the risk of ra channel instability , leading to a zero throughput and a correspondingly infinite transmission delay .",
    "while recently significant improvements of the spectral efficiency have been achieved by introducing sic and coding techniques ( e.g. @xcite , @xcite and @xcite ) , the stability behaviour of these new schemes has not been fully analyzed yet . in @xcite a first analysis of the stability of crdsa as sic representative was done and a mathematical model for the prediction of the channel stability was derived , which is used as baseline for the work presented in this paper and therefore recalled in the following .",
    "the source of channel instability in a ra channel is the natural occurrence of collisions among the packet transmission and the presence of mechanisms which attempt the retransmission of lost packets . in principle",
    "collided packets could be simply discarded , but doing so would adversely affect the quality of service ( qos ) experienced by the user or may be entirely unacceptable for critical signalling information , such as log - on messages .",
    "ra schemes thus usually attempt to retransmit the lost packets , either until they are successfully received or until a maximum number of retransmissions has been reached . in order to make retransmissions possible ,",
    "the users need to receive feedback whether their transmission attempt was successful , e.g. , by means of acknowledgements .",
    "the instantaneous throughput of the ra channel @xmath0 is then dependent on the total load @xmath1 , being the sum of the load due to new transmissions @xmath2 and the load due to retransmissions @xmath3 . in this sense the ra channel forms a feedback loop as is illustrated in fig .",
    "[ fig : feedbackloopra ] .",
    "it is an inherent property of closed - loop feedback systems , that the feedback can lead to amplifying self - excitation . here",
    "this results in an increase of the overall load due to the additional retransmissions .",
    "the throughput curves of aloha , sa @xcite , and crdsa @xcite all have in common that for increasing load @xmath1 the throughput @xmath0 first increases until reaching a maximum throughput @xmath4 . for further",
    "increasing load , @xmath0 decreases again and asymptotically approaches zero .",
    "if due to retransmission attempts of lost packets the total load exceeds a critical threshold , then even more packets experience a collision and get lost , resulting in an even higher retransmission load . in the end",
    "the channel is driven into total saturation in the area of having very high load and very low throughput . to reduce this amplification effect",
    "a retransmission strategy is used , which shall limit the load due to retransmissions and reduce the risk of getting more collisions ( see fig .",
    "[ fig : feedbackloopra ] ) .",
    "many different retransmission strategies that try to achieve this goal are known from literature . in @xcite the selection of the time of retransmission with uniform probability within a parameterizable interval",
    "@xmath5 $ ] is proposed . in @xcite",
    "a strategy is described where the decision for a retransmission attempt is taken with a probability @xmath6 in every slot ( for sa ) resulting in a geometric distribution . in @xcite the selection of the retransmission time from an interval , which grows exponentially with every collision ( binary exponential backoff ) ,",
    "is proposed .",
    "finally the so called _ splitting algorithms _ ( see e.g. , @xcite , @xcite ) iteratively split the set of collided users into two sets and stabilize the system this way .",
    "furthermore two different types of user population are distinguished , _",
    "finite _ and _ infinite _ user populations . for a finite user population ,",
    "every user that experienced a collision is backlogged , which means that he is not generating any new traffic until the collided packet has been successfully transmitted .",
    "the infinite user population on the other hand refers to either an infinite number of users or a finite number of users that generate new traffic independently of whether another retransmission is still pending or not .",
    "while some retransmission strategies assume a visibility of the channel activities by all users , here we assume that every user has no instant visibility of other users activity ( as is the case in satellite systems with directive links and long propagation delays ) and only receives feedback about the success of his own transmission attempt from the receiving end system .",
    "the retransmission mechanisms using a uniform and geometric retransmission probability have in common that the probability of retransmission is a fixed parameter and does not change dynamically . for the binary exponential backoff and tree splitting algorithm , the actual retransmission probability may change over time dependent on the situation . in the remainder of this paper",
    "the focus is on a geometrically distributed retransmission mechanism , since it was shown in @xcite that the channel performance of sa is mainly dependent on the average retransmission delay and largely independent of the retransmission probability distribution .",
    "over the last years the recently regained popularity of ra schemes resulted in the definition of new ra protocols . in particular a recent enhancement of the sa protocol , named crdsa @xcite , @xcite ,",
    "using sic techniques over a set of slots ( denoted frame ) to improve the throughput and packet loss rate ( plr ) behaviour of sa , has been studied showing an impressive gain over sa increasing the maximum throughput from @xmath7 to @xmath8 . up to",
    "now however the consequences for the system stability of this new access scheme have not been analyzed yet .",
    "the fundamental concept of crdsa is to generate a replica burst for every transmission burst within a set of @xmath9 slots , called frame , see also fig .",
    "[ fig : crdsaprinciple ] .",
    "while the generation of a redundant copy of a burst is similar to previous proposals such as diversity slotted aloha ( dsa ) @xcite , the fundamental difference here is that every burst contains a pointer to the location of its replica . in case",
    "a clean replica arrives , meaning that the burst could be decoded and received successfully , the channel is estimated from it and the interference that this burst introduces to other users is removed for all replica - burst locations .    in the example in fig .",
    "[ fig : crdsaprinciple ] the first burst of user 1 is received successfully since not interfered . as consequence of the sic process",
    ", the interference that the replica of user 1 introduces to the second burst of user 2 is removed so that this burst of user 2 can be decoded in the next round .",
    "this process is then iteratively repeated . in the example in fig .",
    "[ fig : crdsaprinciple ] all replicas can be recovered this way .      for classical sa , the necessary condition to have a successful reception",
    "is that only a single transmission must occur in a timeslot , otherwise the burst is lost .",
    "let us denote by @xmath10 the total user population of the system and @xmath11 the probability that a user attempts a transmission in a time slot , then the probability that a user successfully receives a packet gets @xmath12 .",
    "increasing the overall number of users @xmath13 , the totally transmitted packets can be modeled as poisson process with arrival rate @xmath14 @xcite .",
    "the probability for a successful transmission then results in the well known equation @xmath15 , whereas @xmath16 denotes the slot duration .",
    "this simple closed form expression is conveniently suited to describe the throughput surfaces , which are used for the stability investigation done e.g. , by kleinrock @xcite .",
    "the preconditions in crdsa are however different due to the iterative sic process . as was shown by liva in @xcite and @xcite , the sic process can be interpreted as an erasure decoding process in a bipartite graph , such as for low density parity check codes ( ldpc ) codes @xcite . for this purpose ,",
    "every slot in a frame is represented as a _ sum node _ and every transmitted burst by a _ burst node_. the edges in the graph then connect the burst nodes to the sum nodes . in @xcite an expression for the average erasure probabilities for every iteration are derived for the asymptotic case of infinitely long frames , resulting in an upper bound of the achievable throughput .",
    "an expression for neither the exact nor the average erasure probabilities in a non - asymptotic case with finite frame lengths however can be expressed accurately by these bounds or another closed form expression .",
    "for this reason the stability analysis in this work relies on simulated crdsa packet success probabilities and throughput for the case of having one additional replica ( degree @xmath17 ) , a frame consisting of @xmath18 slots and a limitation of the number of sic iterations to @xmath19 .",
    "the presented framework is however flexible to be used as well for other configurations of crdsa , always requiring only that the average throughput curve is known .",
    "the issue of stability in ra systems was already identified in the very early days of the aloha proposal .",
    "abramson @xcite and roberts @xcite both addressed this issue for plain aloha .",
    "after the evolution of aloha towards sa , many publications have dealt with the investigation of the stability behaviour of sa , for instance @xcite , @xcite , @xcite and @xcite .",
    "stability is commonly defined as the ability of a system to maintain equilibrium or return to the initial state after experiencing a distortion . in the context of ra , the term _ stability _",
    "is used in different ways in literature . in the definition given by abramson in @xcite",
    ", the aloha channel was defined instable if the average number of retransmissions becomes unbounded . within @xcite",
    "a channel was defined stable if the expected delay per packet is finite .",
    "kleinrock defined in @xcite a channel as stable if the sa equilibrium contour ( i.e. , throughput is equal to the channel input rate ) is nontangentially intersected by the load line in exactly one place . in the strict mathematical definition of stability of autonomous systems , this corresponds to a sufficient condition for a global equilibrium point . in the terminology used by kleinrock ,",
    "a sa channel is instable if the load line intersects the equilibrium contour in more than one point . in the mathematical sense",
    "also then the system can have a locally stable equilibrium point , so the definition of stability by kleinrock refers to the criterion of having a single globally stable equilibrium point . in the remainder of this work ,",
    "the definitions given in @xcite are followed also here , meaning that a channel is denoted as stable if it has a single globally stable equilibrium point and instable otherwise .",
    "within this section , the derivation of a markov model for a finite user population is described and the mathematical formulations for throughput and drift are derived , which form the core of the stability framework presented afterwards .",
    "this section concludes with a stability analysis for a representative crdsa configuration .",
    "let the ra channel under consideration be populated by a total of @xmath10 users ( finite user population ) .",
    "every user resides either in a so called _ fresh ( f ) _ state or _ backlogged ( b ) _ state . in the beginning",
    "all @xmath10 users are in state _",
    "f_. every user in state _",
    "f _ attempts a new transmission in the current frame with probability @xmath11 .",
    "it is further assumed that all users receive feedback about the success of their transmission at the end of a frame . in case",
    "the transmission attempt was successful , the user remains in state _",
    "f_. in case a packet is lost , the user enters state _ b_. a user in state _",
    "b _ attempts a retransmission of the lost packet with probability @xmath6 in the current frame . in case",
    "the retransmission is successful the user then returns to state _",
    "f _ , otherwise the user remains in state _",
    "b_. let @xmath20 denote the number of users in state @xmath21 in frame @xmath22 , then the discrete - time markov chain can be fully described by either @xmath23 or @xmath24 , since both are connected by @xmath25 . in the following @xmath23",
    "is chosen as the markov state variable .",
    "given the initial state @xmath26 and the state transition probability @xmath27 , which is the probability to move within one frame from backlog state @xmath28 to state @xmath29 , the markov chain is then fully described .",
    "one major difference to the sa analysis done by kleinrock is that the backlog state for sa can at maximum decrease by 1 user per slot ( otherwise there would be a collision ) , while the backlog state @xmath30 for crdsa can decrease by @xmath31 $ ] in a frame . since no closed form expression for the success probability of a user in crdsa",
    "is known in literature , the probability @xmath32 is introduced , which is the probability that out of @xmath33 users who attempt a transmission in the frame exactly @xmath34 users are successful .",
    "the success probability @xmath35 is dependent on the crdsa configuration , consisting of the repetition degree @xmath36 , the number of slots in the frame @xmath37 and the maximum number of iterations @xmath38 . here",
    ", this probability was derived numerically by simulations and averaging over the results for every offered load @xmath1 . for sake of simplicity ,",
    "the subscripts will be omitted in the following , using @xmath39 .",
    "when changing state , let @xmath40 be a random variable denoting the number of successful transmissions in frame @xmath22 , @xmath41 a random variable denoting the number of fresh transmission attempts in the frame and @xmath42 the number of retransmission attempts in a frame .",
    "let @xmath43 denote the number of fresh users , which transmit successfully in frame @xmath22 .",
    "let @xmath44 be the number of fresh users who attempted a transmission but were unsuccessful .",
    "in the same way , @xmath45 denominates all backlogged users who attempt a retransmission and were successful and @xmath46 those backlogged users , whose retransmission attempt was unsuccessful .",
    "the following equations - can be derived : and @xmath30 nor do they generate load which impacts the transmission performance . ] @xmath47 the joint probability mass function , conditioned on state @xmath48 is then given by eq . .",
    "@xmath49 with eqs . -",
    "the change in number of backlogged users @xmath50 can be easily reformulated into : @xmath51 the state transition probability @xmath52 can then be formulated by combining and into : @xmath53 with in principle the entire markov chain can be described with all its transition probabilities . in practice",
    "the computational cost of computing all transition probabilities is however enormous , mainly due to the nested summations over a large range of possible values for @xmath54 and @xmath55 . to avoid this computational complexity",
    ", the stability analysis in the following makes use of a drift analysis , in reminiscence of @xcite and @xcite .",
    "the change of the backlog state forms a differential equation , whereas the drift corresponds to the change of the state variable @xmath56 . for the drift analysis",
    "the change in backlog @xmath57 over time is analyzed in the following and the stability of the equilibrium points is computed by using the tools known from differential calculus . in the style of @xcite and @xcite ,",
    "the drift is here defined as the expectation of the change of the backlog state @xmath23 frame by frame as given by : @xmath58 whereas @xmath59 denotes the expectation value @xmath60 .    with and this can be reformulated into : @xmath61 whereas @xmath62 denotes the random variable taking the values @xmath54 and @xmath63 the random variable taking the values @xmath34 .    from",
    "it is clear that @xmath54 is binomial distributed so : @xmath64    the second expectation value @xmath65 is related to the throughput @xmath66 of the system by , i.e. , the expected number of successful packets per slot in frame @xmath22 : @xmath67 the expected throughput @xmath66 can also be expressed via the average success probability @xmath68 , i.e. the probability of a successful transmission in a frame when attempting @xmath28 transmissions : @xmath69 \\cdot \\overline{p}_s ( ( m - x_b ) p_0 + x_b p_r ) .",
    "\\label{eqn10}\\ ] ] with , and the drift @xmath70 becomes : @xmath71 with it is now possible to fully describe the stability of the crdsa system for the case of having a user population @xmath10 , a probability @xmath11 of fresh users generating new packets and a retransmission trial probability of @xmath6 .",
    "intuitively , the drift represents the tendency of the system to change over time and gives the direction of change of the backlog size .",
    "this means that for positive drifts the size of the backlog tends to increase by @xmath70 ( i.e. , more users experience lost packets and get backlogged ) . for negative drifts , the length of backlog decreases , which means that backlogged users successfully retransmit and get fresh again .",
    "a drift of 0 corresponds to an equilibrium point , which may be locally stable or instable .",
    "[ fig : driftbacklsurf_1 ] shows the dynamics of the channel with the drift - backlog surface for the scenario @xmath72 , @xmath73 and for varying @xmath11 .",
    "the surface can be classified into three different areas : in the first area for @xmath74 the drift - backlog - surface does not intersect the zero - drift plane and gets the tangent plane for @xmath75 . in the second area for @xmath76 the drift - backlog - surface intersects the zero - drift plane in three equilibrium points . in the third area for @xmath77 the drift - backlog - surface intersects the zero - drift plane in a single equilibrium point which is located at the saturation point where all or almost all @xmath10 users are backlogged .",
    "[ fig : driftcut_1_combined ] shows the backlog drift of the three areas for three representative values of @xmath11 , i.e. the intersection of the drift - backlog surface from fig .",
    "[ fig : driftbacklsurf_1 ] with the planes @xmath78 .    as can be seen here ,",
    "the drift for the stable configuration ( @xmath79 ) is always negative independent of the backlog state @xmath57 and approaches asymptotically a drift @xmath80 , which means that the system always shows the tendency to lower the current backlog state until reaching the initial state .",
    "there is thus only one equilibrium point ( globally stable ) close to the initial state .",
    "for the instable configuration ( @xmath81 ) it can be seen that after the initial equilibrium point ( locally stable ) and the following area of negative drift ( up to @xmath82 ) a second , locally instable equilibrium point is reached at @xmath83 .",
    "when reaching this point the system can either fall back into the negative drift region for @xmath84 or enter the region of positive drift @xmath85 . in the latter case",
    "the positive drift means that any movement to a higher backlog state ( which is a consequence of the positive drift ) results in an accelerated increase in number of backlogged users .",
    "this behavior then persists until reaching the third and final equilibrium point ( locally stable ) at @xmath86 . in this third equilibrium point",
    "now all or almost all @xmath10 users are backlogged and the system has reached the point of maximum load and minimum throughput . in case some of the users get unbacklogged , the drift is anyway positive and drives the channel back into the saturation . while there is a low probability that the channel returns in the high throughput region , the probability is fairly small and it can be expected that a very long time passes before this happens . for the overloaded configuration @xmath87 the drift - backlog surface",
    "intersects the zero drift plane only once at the saturation point where all or almost all @xmath10 users are backlogged .",
    "since there are no equilibria before and the drift is always positive , it can be expected that the system moves straight towards the saturation point after being started .",
    "an instable system may remain for some time in the desirable high throughput region of the operating point before getting instable and entering the low throughput region around the saturation point . for an overloaded configuration the channel moves directly to the saturation point .",
    "from this observation the conclusion can be drawn that for a given system configuration @xmath88 the maximum traffic generation probability @xmath11 for which the system is still always stable is the one resulting in a drift contour which intersects the straight line @xmath80 at most once ( fig .",
    "[ fig : driftcut_1_combined ] ) .",
    "the resulting single equilibrium point is then locally and globally stable . for all other cases the channel is instable ( e.g. , instable configuration with @xmath89 in fig .",
    "[ fig : driftcut_1_combined ] ) , meaning that earlier or later the backlog will increase into the total saturation point .",
    "if the single equilibrium point coincides with the saturation point , the system is overloaded .",
    "while it is - mathematically speaking - also stable in this scenario ( locally and globally stable equilibrium ) it is in total saturation with very low throughput and high delay . since an operating point in this region is not viable for a communication system , in the remainder of this paper stable refers only to having one equilibrium point in the high throughput region .    with this framework , it is now possible to predict the stability of a channel with a certain set of parameters or to derive a set of parameters for which the channel is guaranteed to be stable . in @xcite the validity of this model was verified against simulations in different scenarios .",
    "from the stability model defined in the previous section it can be observed that the stability of a system with fixed @xmath11 benefits from a reduction of the retransmission probability @xmath6 . or in other words a configuration which is instable can always be stabilized by decreasing @xmath6 .",
    "this comes however at the cost of a higher delay since reducing @xmath6 means increasing the average time before attempting a retransmission .",
    "on the one hand a low average delay ( i.e. requiring @xmath6 to be as high as possible ) is important for achieving a good qos perception for the user . on the other hand remaining stable is important for user satisfaction as well , since an instable system will be driven into total saturation with asymptotically zero throughput and infinite delay . for a stable configuration",
    "however it is beneficial to have a @xmath6 as small as possible .",
    "the retransmission probability @xmath6 is thus a design parameter which can be optimized to achieve a delay as low as possible while being selected high enough to ensure a stable system operation .",
    "for this reason it is important to derive an analytical framework that makes it possible to compute the expected delay for a given system configuration in order to find the optimum choice for the design parameter @xmath6 , e.g. , to minimize the delay while remaining stable , but also for optimizing the maximum allowable packet generation probability @xmath11 or the maximum allowable user population @xmath10 which is treated in section [ sec : stability_comparison_for_stable_channels ] .",
    "while the stability model derived in the previous sections provides the mathematical framework to derive the overall set of parameters for which the ra is stable , this section deals with the computation of the expected delay for any set of parameters .",
    "the analysis of sa in @xcite followed the fundamental principles of markov theory and derives the expected delay @xmath90 via little s theorem .",
    "according to this well known theorem , the average number of packets in a queuing system in stable conditions is the product of the packet arrival rate and the average dwell time in the queue . applied to the stability analysis",
    ", the expected dwell time in the queue corresponds to the transmission delay @xmath90 of every packet ( i.e. the time the packet remains in the channel until it is successfully received ) .",
    "the average number of packets in the channel is given by the expected backlog length @xmath91 since every backlogged user has one pending transmission .",
    "in equilibrium the traffic arrival rate is equal to the serving rate , or in other words the channel throughput @xmath92 is equal to the offered load @xmath93 . following this analogy , the expected delay in a random access channel computes with little s theorem to : @xmath94 whereas @xmath95 and @xmath96 is the probability of being in state @xmath97 .",
    "similarly the expected backlog length @xmath98 can be computed as : @xmath99    as it has been shown in @xcite by numerical simulations , the values for @xmath100 and @xmath98 can be closely approximated by the equilibrium point throughput @xmath92 and backlog state @xmath101 , i.e. @xmath102 and @xmath103 . with this and",
    "the expected delay @xmath90 gets : @xmath104    in order to show that the approximations of @xmath100 and @xmath98 claimed by kleinrock for sa are also valid in the case of crdsa , the theoretical expected @xmath90 and the measured delay @xmath105 have been compared for a representative crdsa configuration @xmath106 .",
    "the channel is stable in this configuration with an equilibrium point at @xmath107 and an average throughput of @xmath108 . with the expected delay",
    "gets @xmath109 .",
    "the average delay obtained by simulations is @xmath110 , which is fairly close to @xmath90 and thus confirms firstly that the approximation for @xmath111 and @xmath112 are also valid in the case of crdsa , and secondly that the presented framework is suitable to estimate the average delay for a given channel configuration @xmath113 .",
    "with the ability to compute the expected delay for a given configuration @xmath113 , the stability of crdsa can now be compared to the stability of sa .",
    "the stability of sa was deeply investigated in @xcite .",
    "the comparison of the two stabilities is of particular interest since crdsa offers much higher throughput rates , also for higher offered traffic loads but the question arises whether this gain comes at the cost of lower stability , or not . for comparing the two ra schemes it needs to be ensured that the conditions are comparable . for the stability and performance of the ra schemes a tradeoff exists between the total user population @xmath10 , probability of traffic generation @xmath11 for unbacklogged users ( user activity ) and retransmission probability @xmath6 for backlogged users . as it was explained earlier , the ra channel for a finite user population",
    "can always be stabilized by choosing a low enough retransmission probability @xmath6 .",
    "the selection of @xmath6 on the other hand impacts the delay , as shown before , e.g. , a lower value of @xmath6 will have a positive impact on the stability of the system but results in longer delays . for comparing the sa and crdsa stability the following optimization criteria",
    "can be chosen now :    1 .",
    "minimize the average delay @xmath90 for fixed user population @xmath10 and fixed traffic generation probability @xmath11 2 .   maximize the size of the user population @xmath10 for fixed @xmath11 and average delay @xmath90 3",
    "maximize the supported traffic generation probability @xmath11 for fixed @xmath10 and @xmath90    in the following analysis of these three criteria , crdsa configurations are specified by the set @xmath113 whereas the sa configurations are denoted by the set @xmath114 .",
    "it should be noted that the traffic generation probability @xmath11 refers to the probability of generating a packet in a transmission frame for crdsa whereas it refers to the probability of generating a packet in a time slot for sa . to ensure a fair comparison among the two , i.e.",
    ", having the same overall traffic generation , @xmath11 for sa is chosen to in the following .",
    "@xmath115      the design parameter @xmath6 impacts the stability of the system as well as the resulting average delay . for a given user population @xmath10 and traffic generation probability",
    "@xmath11 this forms an optimization problem of selecting the optimum @xmath116 which is low enough to guarantee a stable operation of the channel , while it should be as high as possible at the same time to provide a low average delay .",
    "this optimization problem can be formulated for crdsa in the following way : @xmath117}{\\operatorname{argmin}}\\,d_b(\\psi , p_r).\\ ] ] fig .",
    "[ fig : db_400_0263_005_fig1 ] illustrates this optimization problem .",
    "as it can be seen , the argument resulting in the minimum achievable delay for crdsa and configuration @xmath118 gets : @xmath119}{\\operatorname{argmin}}\\,d_b(\\psi ' , p_r ) = 5 \\cdot 10^{-2}\\ ] ] and the resulting minimum average delay computes to : @xmath120    for sa and comparable configuration @xmath121 the optimization for the minimum achievable delay results in the optimum retransmission probability @xmath122 and an average delay of : @xmath123    while naturally the gain in terms of delay of the two different schemes changes with the other configuration parameters in @xmath113 and @xmath124 , the results above show that in the given configuration crdsa can save @xmath125 of the delay compared to sa in same conditions and guaranteeing a stable channel .      the second optimization criterion is to determine the maximum user population @xmath10 which can be supported with the same average transmission delay @xmath90 while guaranteeing the stability of the channel . finding the maximum user population @xmath126 for achieving an average delay @xmath127 forms an implicit optimization problem of @xmath128 with side condition : @xmath129    the solution of this optimization problem can be easily found with a lagrange auxiliary function :    @xmath130 .",
    "\\label{eqn : lagrange_m}\\ ] ]    the maximum supported user population @xmath126 for retransmission probability @xmath116 is then given simply by solving the set of equations : @xmath131    resulting in the locus of tuples @xmath132 shown in fig .",
    "[ fig : contour_m_pr_p0_000263_sa ] for sa with @xmath133 and for different values of @xmath127 .",
    "as it can be seen , the maximum user population , which can be supported at a maximum delay of @xmath134 gets @xmath135 for an optimum @xmath136 .    fig . [",
    "fig : contour_m_pr_p0_0263_crdsa ] shows the solution of the same optimization problem for crdsa .",
    "the traffic generation probability was set to the equivalent value @xmath137 in order to get the comparable traffic generation probability as in sa , resulting in the configuration @xmath138 . as it can be seen here , the joint optimization results in @xmath139 for a retransmission probability @xmath140 .",
    "the comparison for this configuration shows that crdsa can support 45% more users than sa while achieving the same average delay and being also guaranteed stable .      for the third optimization criterion",
    ", the user population is fixed together with the average delay to be achieved while guaranteeing at the same time that the channel remains stable .",
    "the optimization problem here is very similar to the previous one in section [ sec : stable_population_comparison ] and consists in finding the retransmission probability @xmath116 for which the the traffic generation probability @xmath141 is maximized for given user population @xmath10 .",
    "defining the lagrange auxiliary function : @xmath142 \\label{eqn : lagrange_p0}\\ ] ] and solving the set of equations given by : @xmath143 provides the locus of optimum tuples @xmath144 shown in fig .",
    "[ fig : delay_contour_p0_pr_db_300_m_250_sa ] for sa and in fig .",
    "[ fig : contour_p0_pr_m_250_crdsa ] for crdsa and different @xmath127 .    as it can be seen by comparing sa and crdsa for e.g. @xmath145 ,",
    "the traffic generation probability supported by crdsa is with @xmath146 a factor 2.8 higher than the one for sa with @xmath147 .",
    "crdsa thus allows users to generate traffic with a 2.8 times higher traffic generation probability than sa .",
    "the previous sections were focused on the investigation of stable channels . in many application scenarios instability may be acceptable if the time before getting instable is only sufficiently high .",
    "in stable channel conditions , the performance comparison of ra schemes could be done by comparing the minimum achievable delay @xmath90 , the maximum number of supported users @xmath10 or the maximum traffic generation probability @xmath11 .",
    "but for an instable channel configuration , these criteria do not apply anymore . in an instable channel",
    "the operating point will sooner or later reach the locally stable but undesired equilibrium point @xmath148 in the low throughput region , which can also coincide with the total saturation point , where all users are backlogged and the delay @xmath90 grows to infinity .",
    "also the maximum user population @xmath10 or maximum traffic generation probability @xmath11 are no suitable measures . in an instable channel , @xmath10 and/or @xmath11 can grow arbitrarily while the channel will always remain instable .",
    "what changes is the time to reach @xmath148 which will be shorter with growing @xmath10 and @xmath11 . with this in mind",
    ", the average time before the channel enters the instable region for the first time can be used as a suitable measure for comparing the behaviour of different ra schemes in instability .",
    "+ once the undesired operating point @xmath148 in the high load / low throughput area is entered , the channel may remain there potentially for a very long time ( unless it is being reset ) .",
    "there is only a very small , but non - zero , probability to get out of this undesired operating point which depends on the configuration @xmath113 . as explained and shown in section [ sec : stabilityincrdsa ] an instable system has three operating points , two of them locally stable and one locally instable . among the two locally stable ones ,",
    "one resides in the low load area ( desired operating point ) whereas the other one resides in the high - load / low throughput region ( i.e. high number or all users backlogged ) .",
    "when in the locally instable operating point , the system has a chance to fall back into the desired region but the same chance to enter the undesired region , ending up in the low throughput operating point . in the sa analysis done by kleinrock @xcite , this instable operating point",
    "is also denoted as the critical system state @xmath149 . a measure for comparing the stability of different ra channels",
    "is then the average time before the critical state @xmath149 is reached for the first time , assuming further that the system will fall into the low throughput region , once @xmath149 is reached . in the markov chain representation , the state @xmath150 is modeled as an absorbing state in order to simplify the analytical analysis .",
    "it should be noted that this is clearly only a model since in a real system the probability of leaving the high backlog state is non - zero , while it gets zero when using an absorbing state . in this work the focus is only to derive the time until the system is entering the instable state for the first time without looking at the time until it would leave the instability region again .",
    "the average first entry time @xmath151 into state @xmath152 can be expressed recursively by @xmath153 whereas @xmath154 denotes the state transition probability from state @xmath152 to state @xmath155 @xmath156 = p_{x_b , x_b ' } = \\nonumber\\\\      & = & \\sum_{s , t } \\binom{m - x_b}{\\varphi } \\cdot p_0^\\varphi \\cdot ( 1-p_0)^{m - x_b-\\varphi } \\cdot \\nonumber\\\\      & &   \\binom{x_b}{\\rho } \\cdot p_r^{\\,\\rho } \\cdot ( 1-p_r)^{x_b-\\rho } \\cdot \\nonumber\\\\      & & q(\\varphi+\\rho , \\varphi+x_b - x'_b ) \\label{eqn : p_ij_markov_model}\\end{aligned}\\ ] ]    for the computation of the first entry times ( fet ) , it is now of interest to know the average time until reaching the critical state @xmath149 for the first time when starting from the initial state @xmath157 , i.e. , @xmath158 . the recursive formulation in yields a set of linear equations : @xmath159 = % \\left . \\left [ \\begin{array}{c }          1\\\\          1\\\\          \\vdots\\\\          1\\\\ \\end{array } \\right ] + \\left [ \\begin{array}{cccc }      p_{00 } & p_{01 } & \\ldots & p_{0{n_c } } \\\\      p_{10 } &         &         &              \\\\      \\vdots &         &         &               \\\\      p_{{n_c}0 } &      &         & p_{{n_c}{n_c}}\\\\ \\end{array } \\right ] \\cdot % \\left . \\left [ \\begin{array}{c }      \\overline{t}_0 \\\\      \\overline{t}_1",
    "\\\\      \\vdots \\\\      \\overline{t}_{n_c}\\\\ \\end{array } \\right ] \\nonumber \\\\\\ ] ] which can be expressed in matrix vector notation by eq . @xmath160 whereas @xmath161 is the unity vector .",
    "the vector of interest with all the fets for every state @xmath152 gets then @xmath162 with @xmath163 being the identity matrix and @xmath161 the unity vector .",
    "for the stability measure of the channel the entry of interest is the first entry in @xmath164 which represents the time @xmath158 to reach @xmath149 starting from the initial state @xmath165 .      in order to illustrate the validity of the derived model ,",
    "the markov state transition matrix and the fet is computed for a representative example here .",
    "the considered scenario is @xmath166 which was chosen to result in an instable crdsa channel with equilibrium points at @xmath167 ( locally stable desired operating point ) , @xmath168 ( locally instable equilibrium ) and @xmath169 ( locally stable undesired operating point ) .",
    "since @xmath170 is an absorbing state it is sufficient to compute the markov state transition probabilities in the range of states from @xmath171 $ ] .",
    "[ fig : mm_m300_p0_019_pr_07_3d_computed ] and [ fig : mm_m300_p0_019_pr_07_3d_simulated ] show the computed and simulated markov state transition matrix @xmath172 for @xmath173 .    as it can be seen from the two graphs ,",
    "the transition probabilities resulting from the simulations match very well with the ones derived by numerical computation . + by solving the set of linear equations from , the computed fet time in this example results in @xmath174 , where the average simulative fet reaches @xmath175 , which is very close to the expected fet derived by computation .",
    "for a fair comparison between the fet of crdsa and sa , configurations need to be selected which have the same initial conditions , i.e. , the same user population @xmath10 and traffic generation probability @xmath11 .",
    "the average delay @xmath90 can not be used here since the average delay @xmath90 is infinite for an instable channel by definition as the channel will enter the saturation point with close to zero throughput .",
    "a difficulty here consists in the fact that for an instable crdsa configuration , the sa channel is getting overloaded .    on the other hand an instable sa configuration for which three equilibria exist results in a crdsa configuration which is stable so no fet can be computed .",
    "[ fig : fet_time_comparison_1 ] shows the fet times for different configurations of crdsa and sa for a user population of @xmath72 .",
    "as it can be seen , the fet for crdsa and @xmath176 is up to a factor 20 higher than for the equivalent sa configuration .",
    "it should be noted that sa is already in overload for a @xmath177 . for this reason",
    "the sa fet curve does not show the time until reaching the critical state @xmath149 but the time until reaching the saturation point @xmath148 instead .",
    "[ fig : fet_time_comparison_1 ] furthermore shows the fet curve for crdsa until reaching the saturation point @xmath148 .",
    "the fets for this curve are slightly higher than for @xmath149 as could be expected .",
    "this result also confirms the assumption to compute the fet times by modeling @xmath149 as an absorbing state instead of computing the full markov chain up to @xmath148 , since once @xmath149 is reached also @xmath148 is reached very fast . the sa curve in fig .",
    "[ fig : fet_time_comparison_1 ] could arise the impression that the fet curve is flat and has a qualitatively different shape than the crdsa curve .",
    "this is actually not the case and the @xmath158 for @xmath178 is indeed higher than for @xmath179 with a value of @xmath180 and @xmath181 . in this configuration",
    "the sa channel is already so overloaded that also a large decrease of the retransmission probability @xmath6 does not have a significant impact anymore .",
    "once the traffic generation probability @xmath182 is lowered , the impact of @xmath6 gets more visible as it can be seen from the last curve in fig .",
    "[ fig : fet_time_comparison_1 ] , which was computed for @xmath183 .",
    "also for this lower @xmath182 the @xmath158 is much lower than for crdsa with a higher @xmath176 , showing that for an instable configuration crdsa is remaining stable much longer than sa .",
    "in this paper , a theoretical model for the stability of crdsa as representant for sic ra schemes was developed . with this model",
    "it is possible to draw qualitative and quantitative conclusions about the stability of the communication channel .",
    "the presented framework enables the estimation of the average delays experienced in stable channel configurations .",
    "the stable crdsa and sa ra channels were optimized for achieving a minimum delay , maximizing the user population while achieving a delay target or deriving the maximum traffic generation probability for a given user population and delay target for which the channel is stable .",
    "numerical results were presented which allow a direct comparison of the performance of crdsa and sa .",
    "these results have shown that crdsa does not only provide a higher throughput and lower plr than sa but is also capable to achieve lower delays and higher user population and traffic generation probabilities than sa while being stable . finally the stability framework was extended towards instable channel configurations of crdsa and makes possible to predict the average time before reaching instability .",
    "the derived model for crdsa was validated against simulations and the stability behaviour of crdsa was compared to the one of sa for instable channels .",
    "also here crdsa showed a much better performance by reaching way higher average times before failure than sa .",
    "besides the analysis of the stability behaviour of a channel , the presented framework enables the computation of the optimum design parameters , in particular @xmath6 for which the channel either remains guaranteed stable while minimizing the average delay or the @xmath6 for an instable channel , which results in the desired fet time .",
    "e.  casini , r.  de  gaudenzi , and o.  herrero , `` contention resolution diversity slotted aloha ( crdsa ) : an enhanced random access scheme for satellite access packet networks , '' _ wireless communications , ieee transactions on _ , vol .  6 , no .  4 , pp .",
    "1408 1419 , april 2007 .",
    "e.  paolini , g.  liva , and m.  chiani , `` high throughput random access via codes on graphs : coded slotted aloha , '' in _ communications ( icc ) , 2011 ieee international conference on _ , kyoto , japan , june 2011 , pp .",
    "1 6 .",
    "l.  kleinrock and s.  s. lam , `` packet - switching in a slotted satellite channel , '' in _ proceedings of the june 4 - 8 , 1973 , national computer conference and exposition _ , ser .",
    "afips 73.1em plus 0.5em minus 0.4emnew york , ny , usa : acm , 1973 , pp . 703710 .",
    "s.  s. lam , `` packet switching in a multi - access broadcast channel with application to satellite communication in a computer network , '' s.s .",
    "lam , department of computer science , university of california , los angeles , march 1974 , also in tech .",
    "ucla - eng-7429 , april 1974 ."
  ],
  "abstract_text": [
    "<S> in this paper a time division multiple access ( tdma ) based random access ( ra ) channel with successive interference cancellation ( sic ) is considered for a finite user population and reliable retransmission mechanism on the basis of contention resolution diversity slotted aloha ( crdsa ) . </S>",
    "<S> a general mathematical model based on markov chains is derived which makes it possible to predict the stability regions of sic - ra channels , the expected delays in equilibrium and the selection of parameters for a stable channel configuration . </S>",
    "<S> furthermore the model enables the estimation of the average time before reaching instability . </S>",
    "<S> the presented model is verified against simulations and numerical results are provided for comparison of the stability of crdsa versus the stability of traditional slotted aloha ( sa ) . </S>",
    "<S> the presented results show that crdsa has not only a high gain over sa in terms of throughput but also in its stability .    </S>",
    "<S> crdsa , stability , random access , drift , backlog , delay , slotted aloha , user population , first entry time , first exit time , fet , successive interference cancellation , sic </S>"
  ]
}
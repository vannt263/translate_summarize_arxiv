{
  "article_text": [
    "classification of networked data is a quite attractive field with applications in computer vision , bioinformatics , spam detection and text categorization . in recent years",
    "networked data have become widespread due to the increasing importance of social networks and other web - related applications .",
    "this growing interest is pushing researchers to find scalable algorithms for important practical applications of these problems .",
    "+ in this paper we focus our attention on a task called _ node classification _ , often studied in the semi - supervised setting  @xcite .",
    "recently , different teams studied the problem from a theoretic point of view with interesting results . for example @xcite",
    "developed on - line fast predictors for weighted and unweighted graphs and herbster et al . developed different versions of the perceptron algorithm to classify the nodes of a graph ( @xcite ) .",
    "@xcite introduced a game - theoretic framework for node classification .",
    "we adopt the same approach and , in particular , we obtain a scalable algorithm by finding a nash equilibrium on a special instance of their game . the main difference between our algorithm and theirs",
    "is the high scalability achieved by our approach .",
    "this is really important in practice , since it makes possible to use our algorithm on large scale problems .",
    "given a weighted graph @xmath0 , a labeling of @xmath1 is an assignment @xmath2 where @xmath3 .",
    "+ we expect our graph to respect a notion of regularity where adjacent nodes often have the same label : this notion of regularity is called _",
    "homophily_. most machine learning algorithms for node classification ( @xcite ) adopt this bias and exploit it to improve their performances .",
    "+ the learner is given the graph @xmath1 , but just a subset of @xmath4 , that we call training set .",
    "the learner s goal is to predict the remaining labels minimizing the number of mistakes .",
    "@xcite introduce also an irregularity measure of the graph @xmath1 , for the labeling @xmath4 , defined as the ratio between the sum of the weights of the edges between nodes with different labels and the sum of all the weights . intuitively , we can view the weight of an edge as a similarity measure between two nodes , we expect highly similar nodes to have the same label and edges between nodes with different labels being `` light '' .",
    "based on this intuition , we may assign labels to non - training nodes so to minimize some function of the induced weighted cut .    in the binary classification case , algorithms based on min - cut have been proposed in the past ( for example @xcite ) .",
    "generalizing this approach to the multiclass case , naturally takes us to the _ multi - way cut _ ( or multi - terminal cut  see @xcite ) problem .",
    "given a graph and a list of terminal nodes , find a set of edges such that , once removed , each terminal belongs to a different component .",
    "the goal is to minimize the sum of the weights of the removed edges .",
    "+ unfortunately , the multi - way cut problem is max  snp - hard when the number of terminals is bigger than two ( @xcite ) . furthermore , efficient algorithms to find the multi - way cut on special instances of the problem are known , but , for example , it is not clear if it is possible to reduce a node classification problem on a tree to a multi - way cut on a tree .",
    "in this section we describe the game introduced by @xcite that , in a certain sense , aims at distributing over the nodes the cost of approximating the multi - way cut .",
    "this is done by expressing the labels assignment as a nash equilibrium .",
    "we have to keep in mind that , since this game is non - cooperative , each player maximizes its own payoff disregarding what it can do to maximize the sum of utilities of all the players ( the so - called social welfare ) .",
    "the value of the multi - way cut is strongly related to the value of the social welfare of the game , but in the general case a nash equilibrium does not give any guarantee about the collective result . + in the graph transduction game ( later called gtg ) , the graph topology is known in advance and we consider each node as a player .",
    "each possible label of the nodes is a pure strategy of the players . since we are working in a batch setting",
    ", we will have a train / test split that induces two different kind of players :    * * determined players*(@xmath5 ) those are nodes with a known label ( train set ) , so in our game they will be players with a fixed strategy ( they do not change their strategy since we can not change the labels given as training set ) * * undetermined players*(@xmath6 ) those that do not have a fixed strategy and can choose whatever strategy they prefer ( we have to predict their labels )    the game is defined as @xmath7 , where @xmath8 is the set of players , @xmath9 is the joint strategy space ( the cartesian product of all strategy sets @xmath10 ) , and @xmath11 is the combined payoff function which assigns a real valued payoff @xmath12 to each pure strategy profile @xmath13 and player @xmath14 .    a mixed strategy of player @xmath14 is a probability distribution @xmath15 over the set of the pure strategies of @xmath16 .",
    "each pure strategy @xmath17 corresponds to a mixed strategy where all the strategies but the @xmath17-th one have probability equals to zero .",
    "we define the utility function of the player @xmath16 as @xmath18 where @xmath19 is the probability of @xmath20 .",
    "we assume the payoff associated to each player is additively separable ( this will be clear in the following lines ) .",
    "this makes gtg a member of a subclass of the multi - player games called polymatrix games . for a pure strategy profile @xmath21 ,",
    "the payoff function of every player @xmath14 is : @xmath22 where @xmath23 means that @xmath16 and @xmath24 are neighbors , this can be written in matrix form as @xmath25 where @xmath26 is the partial payoff matrix between @xmath16 and @xmath24 , defined as @xmath27 , where @xmath28 is the identity matrix of size @xmath29 and @xmath30 represent the element of @xmath31 at row @xmath15 and column @xmath4 .",
    "the utility function of each player @xmath32 can be re - written as follows :    [ cols= \" > , < \" , ]     the results of our experiments , shown in table  [ t : multi ] , are not conclusive , but we can observe some interesting trends :    * it is not really clear which one between gtg - ess and labprop is the most accurate algorithm , but anyway @xmath33 is always competitive with them .",
    "* @xmath33 is always much better than wmv .",
    "as expected wmv works better on `` not too sparse '' graphs such ghgraph , but even in this case it is outperformed by @xmath33 .",
    "* gtg - ess and labprop s time complexity did not permit us to run them in a reasonable amount of time with our computational resources .",
    "we introduced a novel scalable algorithm for multiclass node classification in arbitrary weighted graphs .",
    "our algorithm is motivated within a game theoretic framework , where test labels are expressed as the nash equilibrium of a certain game . in practice ,",
    "mucca  works well even on binary problems against competitors like label propagation and shazoo that have been specifically designed for the binary setting .",
    "several questions remain open .",
    "for example , committees of mucca  predictors work well but we do not know whether there are better ways to aggregate their predictions .",
    "also , given their common game - theoretic background , it would be interesting to explore possible connections between committees of mucca  predictors and gtg - ess ."
  ],
  "abstract_text": [
    "<S> we introduce a scalable algorithm , mucca for multiclass node classification in weighted graphs . unlike previously proposed methods for the same task , mucca  works in time linear in the number of nodes . </S>",
    "<S> our approach is based on a game - theoretic formulation of the problem in which the test labels are expressed as a nash equilibrium of a certain game . </S>",
    "<S> however , in order to achieve scalability , we find the equilibrium on a spanning tree of the original graph . </S>",
    "<S> experiments on real - world data reveal that mucca  is much faster than its competitors while achieving a similar predictive performance . </S>"
  ]
}
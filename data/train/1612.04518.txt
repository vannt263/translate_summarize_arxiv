{
  "article_text": [
    "a very recent field , cryptocurrencies have made their way into spotlight .",
    "cryptocurrencies are virtual currencies that are not administered by any state or corporate entity , but rather exist solely within a decentralized peer - to - peer network that anyone can join .",
    "bitcoin , the first cryptocurrency , has operated with essentially uninterrupted service and significant growth since its launch in 2009 .",
    "since money is involved , security is of paramount concern.as they allow open participation from anonymous users , cryptocurrencies derive their security from the strength of underlying network protocol itself . although bitcoin has been an empirical success thus far , it is difficult to reason about its security",
    ". miller@xcite has attempted to remedy this in and provide a provable security approach to this usually implementation heavy field .",
    "casper@xcite is a security - deposit based economic consensus protocol .",
    "this means that nodes , so called `` bonded validators '' , have to place a security deposit ( an action they call `` bonding '' ) in order to serve the consensus by producing blocks .",
    "the protocol s direct control of these security deposits is the primary way in which casper affects the incentives of validators .",
    "if a validator produces anything that casper considers `` invalid '' , their deposit are forfeited along with the privilege of participating in the consensus process .",
    "the use of security deposits addresses the  nothing at stake \" problem @xcite ; which suggests that deviation from the protocol is likely to put you at a disadvantage rather than an advantage . in this project",
    "we try to fit miller s definition of provable security into casper .",
    "consensus protocols are a field of research which tries to answer the following question `` how can @xmath0 equal parties come to an agreement for some problem ? ''",
    "this has many applications to networks where there is no central authority , but decisions still need to be made and enforced .",
    "we discuss methods of obtaining distributed consensus in this section .",
    "a proof - of - work ( pow ) scheme is a protocol that is difficult to compute but easy to check .",
    "the idea is security is reliant upon real world resources , in this case time and hardware . in practice",
    "they are often based on hash functions .",
    "( with @xmath1 a collision resistant hash function , for what @xmath2 , is @xmath3 ?",
    "what about @xmath4 ? and so on .",
    ") the only way to solve these problems requires a search of the message space which takes a lot of computing power and much of the security is derived from the security of the hash function .",
    "pow has many problems .",
    "it is estimated that the entire bitcoin network will use as much electricity as denmark by 2020 @xcite .",
    "proof - of - stake ( pos ) is a protocol in which attempts to fix some of pow s problems .",
    "mining is no longer done on expensive hardware , but rather simulated through probabilities .",
    "the resources expended this time are not cpu cycles , but rather the currency itself . for the case of ethereum",
    ", you commit to some amount of your coins as your  stake \" and after certain time ( currently decided as four months ) you are rewarded with your coins back plus some interest .",
    "this model is very similar to keeping your money in a bank for its interest rate or a gambling game with a high expected return rate .",
    "proof of stake has been called `` non - trivial '' to implement by the ethereum developers .",
    "@xcite      ethereum is a new cryptocurrency that differs quite a bit from other coins .",
    "ethereum promises an entire programming language and development enviroment built on top of the security of the blockchain .",
    "a scratch off puzzle as defined in @xcite is a tuple @xmath5 and a set of three algorithms :    * @xmath6 * work@xmath7 * verify@xmath8    @xmath5 each mean difficulty , amount of work per puzzle , initialization overhead of the algorithm , and @xmath9 is the amount an adversary can have an advantage over an honest worker .",
    "the optimal idea is that @xmath9 is as close to 1 as possible .",
    "@xmath10 initialized all public parameters .",
    "work takes a puzzle instance ` puz ` and a payload @xmath11 and outputs a ticket instance ` ticket ` .",
    "verify takes a puzzle instance , a payload , and a ticket and outputs either 1 , or 0 .",
    "notice the similiarities between this and the triplet of algorithms common in encryption schemes , namely key generation , encryption , and decryption .",
    "a scratch off puzzle must satisfy three requirements    1 .",
    "* correctness : * for any @xmath12 , if work@xmath13 then verify@xmath14 2 .",
    "* parallel feasiblity : * the honest work algorithm can be parallelized without much loss , formally : @xmath15 } \\leftarrow a\\\\          \\forall",
    "i : \\texttt{ticket}_i \\leftarrow work_t(puz_i , m_i)\\\\          \\exists i : verify(\\texttt{puz}_i , m_i,\\texttt{ticket}_i ) \\rightarrow 1          \\end{bmatrix } \\geq \\zeta(1,qt,2^{-d } )   \\pm negl(\\lambda)\\ ] ] 3 .   *",
    "@xmath9-incompressibility : * the work for solving a puzzle must be  incompressible \" the best possible adversary must not be able to speed up the work faster than a factor of @xmath9 .",
    "formally : @xmath16 } \\leftarrow a^{work}\\\\          all~\\{\\texttt{puz}_i\\}_{i \\in [ l]}~are~distinct~and\\\\          \\forall i \\in [ l ] : verify(\\texttt{puz}_i , m_i,\\texttt{ticket}_i ) = 1~and\\\\          ( puz_i , m_i ) \\not \\in q          \\end{bmatrix } \\leq \\zeta(l,\\gamma t,2^{-d } ) \\pm negl(\\lambda)\\ ] ] with @xmath17 being the transcript of queries to the work oracle by our adversary a. notice that the property of non - malleability ( ind - cca ) is built into this definition .",
    "the adversary is allowed to see as many valid puzzle , payload , and ticket instances as he pleases , but is unable to forge his own without doing work .",
    "we also define the @xmath18 function from above as : @xmath19 which , informally can be described as `` @xmath20 sucesses after @xmath21 independent bernoulli trials each with equal probability @xmath22 '' .",
    "ethereum and casper is currently still in the design process , and may undergo revisions , so this description ( and subsequent proofs ) are based off of a loose definition gathered from various less - than - formal specs @xcite @xcite    the many variables of the specific implementation , such as gas , and stake , may be interpreted as puzzle instances or payloads respectively .",
    "they are however , independent of the security of the algorithm , so we wo nt worry about outfitting them .",
    "* @xmath6 * @xmath23-work@xmath24 + for each round : + commit and pay to produce a new node . + return signiture of this node as ` ticket ` * @xmath23-verify(`puz`,m,`ticket ` ) : + @xmath25 with some fixed , not necessarily uniform probability + return s * @xmath26-work@xmath24 + for each round : + for the set of nodes",
    "@xmath27 : apply stake to any subset of @xmath27 you which is any amounts you can + return the nodes you bet on , and the stakes you applied as ` ticket ` * @xmath26-verify(`puz`,m,`ticket ` ) : + @xmath25 with some fixed , not necessarily uniform probability +    -work with three nodes from @xcite , scaledwidth=100.0% ]",
    "correctness is trivial in this case since our verify algorithms are independent of the ticket and return with some probability that is not 1 .      from @xcite @xcite",
    "we see that @xmath28 = \\frac{2}{3}$ ] .",
    "we also want to conduct only 1 trial , and require it to be successful , therefore @xmath29 @xmath30 & \\leq \\zeta(1,\\gamma , d)\\\\      \\frac{2}{3 } & \\leq \\sum_{1}^{1 } { \\gamma \\choose 1}2^{-d}(1 - 2^{-d})^{\\gamma-1}\\\\      \\frac{2}{3 } & \\leq \\gamma 2^{-d}(1 - 2^{-d})^{\\gamma -1 }      \\end{aligned}\\ ] ] we know that , realistically , @xmath31 is a super exponential function of time ( and its current value is well over @xmath32 ) . analytically evaluating the expression and letting @xmath9",
    "be a function of @xmath31 , and taking the limit @xmath33 we see that @xmath34      @xmath30 & \\geq \\zeta(1,qt , d)\\\\      \\frac{2}{3 } & \\geq \\sum_{1}^{1 } { qt \\choose 1}2^{-d}(1 - 2^{-d})^{qt-1}\\\\      \\frac{2}{3 } & \\geq qt 2^{-d}(1 - 2^{-d})^{qt -1 }      \\end{aligned}\\ ] ]    letting @xmath35 be reasonable constants for a polynomial adversary and taking the limit @xmath33 we see the inequality satisfies quite quickly .",
    "there exists a set @xmath27 of nodes of which an adversary may bet upon . of these some @xmath36 nodes",
    "are chosen by the validators , with the nodes belonging to @xmath37 have the highest bets of any node in @xmath27 .",
    "we wish to see if an adversary has some possible advantage .",
    "consider if the adversary uses the greedy algorithm , and places a bet on a single block ( denoted @xmath38 ) with the greatest current bets .",
    "certainly @xmath39 if the round were to end immediately .",
    ". then @xmath38 can be removed from @xmath37 if @xmath41 bets are placed on nodes in @xmath42 . therefore if @xmath43 is the total amount of bets placed during the round , then @xmath44 = 1 $ ] by the pigeonhole principle . from @xcite",
    "we see that @xmath45",
    ". we also want s to vary as a function of @xmath46 $ ] as time progresses during the round ( with 0 , 1 being the start and end of the round , respectively ) .",
    "so we let @xmath47 where @xmath48 is the actual blocktime constant ( for bitcoin it is around 10 minutes , for ethereum , it is supposed to be a few seconds ) .",
    "@xmath49 certainly we see that as the network grows , @xmath50 so the only restriction on @xmath21 is that @xmath51 , so the advantage of betting late diminishes extremely quickly for any sufficiently large network , so we see that @xmath34      the number of validators has been artificially set to a maximum of 8000 ( 80 shards with 100 validators per shard ) @xcite , as of current discussion .",
    "this was raised from an initial proposal of 250 after some concerns.@xcite .",
    "we find that this arbitrary limitation , even with it being as high as 8000 will no less impact the theorectical feasibility .",
    "it appears that the inflation is inversely proportional to the number of validators , so the odds of the protocol allowing more than some fixed amount is unlikely .",
    "we find that , with this limitation , it is not parallelizable .",
    "after analyzing the implementation plans for casper and applying the scratch off puzzle security definitions , we have concluded that it satisfies most of the definition , except one.the implementation can be considered secure given if the given scheme can solve this hard cap on the number of validators problem ."
  ],
  "abstract_text": [
    "<S> ethereum represents new innovation in the fields of cryptocurrency which has become relatively stagnate , promising many things , including an entire programming language and development enviroment built into the network . </S>",
    "<S> however the current trend is to write implementations and proof of concepts before doing the rigor involved with proving security . </S>",
    "<S> miller s recent thesis is an attempt to remedy this , and we apply his provable security techniques to the algorithm description of casper , the new  proof - of - stake \" consensus protocol scheme to be implemented in ethereum . </S>",
    "<S> we conclude by stating it satisfies almost all the definitions , except one , leaving room for improvement . </S>"
  ]
}
{
  "article_text": [
    "the internet has seen a significant growth of web based applications over the last few years .",
    "these have now become an inseparable part of numerous industries like airline , banking , business , computer , education , financial services , healthcare , publishing and telecommunications .",
    "they are preferred because of their zero installation time ( as they run on a browser ) , availability of centralised data , their global reach , and their availability ( 24 hours a day , 7 days a week ) . according to @xcite , in june 2011 an average us user spent 74 minutes a day using web applications as compared to 64 minutes a day in june 2010 .    in current scenario , improvement in the user response time",
    "is the most important issue for enhancing the performance of web applications . with reference to @xcite ,",
    "a delay of one second in the performance of web applications can impact customer satisfaction by up to 16% .",
    "web applications make use of a wide range of technologies including javascript , apache , css , html , mysql , php and protocols like http headers .",
    "optimizing the way they use these technologies can significantly improve user response time .",
    "furthermore , the browser and hardware capabilities can be employed to reduce the user response time .",
    "many research groups and authors have addressed this problem and reported their solutions .",
    "these include teams such as yahoo exceptional performance team @xcite , book authors @xcite and research papers @xcite .    in this contribution",
    ", seven optimization techniques grouped under three categories are analysed .",
    "further , implementation of these seven techniques is done for the modular object oriented distance learning environment ( moodle ) @xcite .",
    "the efficiency of these techniques is studied by comparing the original and the improved average user response time .",
    "moodle is a free source learning management system ( lms ) which is used by thousands of educational institutions around the world to provide an organized interface for e - learning . as of june 2013",
    ", it has 83059 currently active sites that have been registered from 236 countries @xcite .",
    "moodle lms is written in php and uses xhtml 1.0 strict , css level 2 and javascript for its web user interface@xcite .",
    "with reference to @xcite , it has been reported that moodle can support 50 concurrent users for every 1 gb ram .",
    "an experiment was performed to verify this result . +",
    "* experimental setup * + the experiment was perfomed on a machine with the following specifications : + _ hardware _ : intelcorei5 - 2310 cpu @2.90ghz x 4 processor , 8 gb hard disk and 1 gb ram .",
    "+ _ operating system _ : ubuntu 12.10 + _ web server _ : apache v2.2.22 and php v5.4.6 for moodle v2.5 for ubuntu 12.10 + _ database software _ : mysql v5.5.31 for ubuntu 12.10    * the experiment was performed using apache jmeter 2.9 , an open source load testing tool by the apache software foundation @xcite . * the test script was generated by using the jmeter script generator plugin for moodle by james brisland @xcite .",
    "* the bandwidth of the network was set to 1024 kbps ( 1 mbps ) using jmeter . *",
    "the load testing of moodle was done for a chat activity . *",
    "the sequence of pages visited on moodle was : + login to site -@xmath0 view course -@xmath0 view chat page -@xmath0 view chat window -@xmath0 initialize chat -@xmath0 initialize initial update * after initializing chat the following tasks were performed five times for each concurrent user : post chat message -@xmath0 initialize update * to test the performance of moodle in the worst case scenario the ramp - up period , that is the amount of time for creating the total number of threads , was set to zero so as to ensure immediate creation of all the threads by jmeter .    [ table : per ]    .average response time and throughput for load testing moodle + on 1 gb ram and 8 gb hard disk [ cols=\"^,^,^\",options=\"header \" , ]             while load testing moodle for 51 concurrent users , it was observed that the connection to the database was aborted due to database overload and the testing process was killed by jmeter .",
    "the performance of the web applications can be highly enhanced by using a solid state disk drive to reduce the latency of the input and output operations carried out by the server .    a solid state disk , or ssd is a high performance plug and play data storage device which uses integrated circuit assemblies as memory to store data persistently @xcite .",
    "an ssd incorporates solid state flash memory and emulates a hard disk drive to store data @xcite .",
    "however , unlike the traditional electromechanical disks like hard disk and floppy disks , an ssd is a flash - based and dram - based storage device which does not contain any moving parts @xcite .",
    "an experiment was performed by replacing the hard disk drive(hdd ) of the moodle server with a 128 gb kingston solid state disk drive . +",
    "* experimental setup * + to conform to the experiment performed in section  [ subsec : performance ] and to compare the performance of moodle on hdd vs. ssd , the space allocated to moodle server and database collectively was 8 gb of 128 gb ssd and the ram size was limited to 1 gb . the experiment was performed on a machine with following specifications : + * _ hardware : _",
    "intelcorei5 - 2310 cpu @2.90ghz x 4 processor , + 8 gb solid state disk and 1 gb ram . *",
    "+ _ operating system _ : ubuntu 12.10 + _ web server _ : apache v2.2.22 and php v5.4.6 for moodle v2.5 for ubuntu 12.10 + _ database software _ : mysql v5.5.31 for ubuntu 12.10 + _ bandwidth _ : 1024 kbps ( 1 mbps ) + the experiment was performed for the chat activity mentioned in section  [ subsec : performance ] using apache jmeter 2.9 .",
    "time on hdd(s ) * & * average response time on ssd ( s ) * & * reduction in response time % * + 10 & 3.671 & 0.349 & 90.49 + 20 & 8.874 & 1.048 & 88.19 + 30 & 15.303 & 1.938 & 87.34 + 40 & 129.786 & 3.438 & 97.35 + 50 & 364.480 & 5.274 & 97.83 + 60 & database overload & 5.97 & - + 70 & database overload & 6.492 & - + 80 & database overload & 8.009 & - + 90 & database overload & 8.085 & - + 100 & database overload & 9.797 & - + 110 & database overload & 13.759 & - + 120 & database overload & 16.828 & - + 130 & database overload & 22.991 & - + 140 & database overload & 30.187 & - + 150 & database overload & 36.119 & - + 151 & database overload & 39.141 & - + 152 & database overload & database overload & - +    from table 2 , it is concluded that the number of concurrent users supported by moodle installed on ssd for 1 gb ram is increased to * 151 * as compared to * 50 * concurrent users for moodle installed on hdd with 1 gb ram . also , there is a reduction of * 87% to 98% * in average user response time after installing moodle server and database on ssd .",
    "the moodle web application runs on the lamp stack which is a software bundle comprising of linux based operating system , apache http server , mysql database software and php object oriented scripting language .",
    "lnmp stack is almost similar to lamp , except the change of web server from apache to nginx .",
    "apache is a process - based server , while nginx is an event - based asynchronous web server and is more scalable than apache . in apache , each simultaneous connection requires a thread which incurs significant overhead whereas nginx is event - driven and handles requests in a single ( or at least , very few ) threads @xcite .",
    "the performance of moodle or any web application that runs on apache and frequently encounters heavy load , can be boosted by replacing apache by nginx .",
    "an experiment was performed to compare the performance of moodle installed on apache vs. nginx web server . +",
    "* experimental setup * + since it was observed in section  [ subsec : ssd ] that the performance of moodle is highly enhanced by installing it on ssd , the experiment was performed on a machine with moodle installed on 128 gb solid state disk and 4 gb ram .",
    "all the other specifications ( operating system , database software , web server and bandwidth ) of the machine were kept same as in section  [ subsec : ssd ] .",
    "the experiment was performed using apache benchmark 2.4 @xcite for moodle s login page .    from table 3 , it is observed that there is a reduction of * 24% to 34% * in average user response time after installing moodle on nginx v1.4.1 web server .",
    "time on apache(s ) * & * average response time on nginx ( s ) * & * reduction in response time % * + 50 & 2.209 & 1.652 & 25.22 + 100 & 4.505 & 3.359 & 25.43 + 150 & 6.098 & 4.630 & 24.07 + 200 & 8.192 & 5.408 & 33.98 + 250 & 10.729 & 7.156 & 33.30 +",
    "for any web application , only 10% to 20% of the end user response time is spent downloading the html document from the web server to the client s browser .",
    "the other 80% to 90% is spent in performing the front end operations , i.e. , in downloading the other components of web page @xcite .",
    "a set of specific rules for speeding up the front ",
    "end operations carried by a web application is presented in ref .",
    "five of the most efficient techniques which showed significant reduction in user response time for moodle learning management system are described in this section .",
    "browsers and proxies use cache to reduce the number and size of the http requests thereby speeding up the web applications .",
    "a first - time visitor may have to make several http requests , but by using a far future expires header the developer can significantly improve the performance of web applications for returning visitors .",
    "a server uses the expires header in http response to inform the client that it can use the current copy of a component until the specified time @xcite .",
    "moodle sends requests with an expires header which is set in past * ( 20th aug 1969 09:23 gmt)*. an experiment was performed by changing it to future date of * 16th apr 2015 20:00 gmt*. also max - age directive was used in cache control header so as to set the cache expiration window to 10 years in future and the pragma header was unset to enable caching .",
    "+   + given below are the lines which were added to the headers.conf file of apache2 web server :    .... < filesmatch \" .(ico|pdf|flv|jpg|jpeg|png|gif|js|css|swf|php|html)$ \" > header set expires \" thu , 16 apr 2015 20:00:00 gmt \" header set cache - control \" max - age=315360000 \" header unset pragma < /filesmatch > ....    the experimental setup is the same as section  [ subsec : ssd ] and the experiment was performed using apache jmeter 2.9 . from table 4 , it is observed that there is a reduction of * 70% to 80% * in average user response time after implementing far future expires header optimization technique .",
    "time without expires header(s ) ( no caching ) * & * average response time with expires header(s ) ( caching ) * & * reduction in response time % * + 10 & 0.625 & 0.144 & 76.96 + 20 & 1.839 & 0.408 & 77.81 + 40 & 5.061 & 1.210 & 76.09 + 60 & 7.086 & 1.778 & 74.91 + 80 & 8.124 & 2.426 & 70.14 + 100 & 9.882 & 3.071 & 68.92 +      the internet uses ip addresses to find webservers . before establishing a network connection to a web server , the browser must resolve the hostname of the web server to an ip address by using domain name systems ( dns ) .",
    "the latency introduced due to dns lookups can be minimized if the dns resolutions are cached by client s browser @xcite .",
    "the response time for moodle s login page of institutional moodle websites of 13 universities situated in six continents of the world was recorded for two cases : with dns cache and without dns cache .",
    "+ the experiment was performed for a client located in iit bombay , india with 128 gb ssd , 4 gb ram , intelcorei5 - 2310 cpu @2.90ghz x 4 processor and 2 mbps average download speed .",
    "* country * & * university * & * response time with dns cache(s ) * & * response time without dns cache(s ) * & * reduction in response time(% ) * + asia & india & iit , bombay @xcite & 2.357 & 1.426 & 39.50 + asia & india & iit , madras @xcite & 2.516 & 1.612 & 35.93 + asia & singapore & sim university @xcite & 1.381 & 1.055 & 23.61 + asia & japan & sojo university , kumamoto @xcite & 6.223 & 3.116 & 49.93 + europe & spain & graduate school of management , barcelona @xcite & 3.138 & 1.813 & 42.22 + europe & uk & university of nottingham @xcite & 4.174 & 2.041 & 51.10 + north america & us & ucla , california @xcite & 4.600 & 3.657 & 20.50 + south america & argentina & pontifical catholic university of argentina , buenos aires @xcite & 2.534 & 1.710 & 32.52 + south america & colombia & university of grand colombia , bogot , d.c . @xcite & 2.341 & 1.438 & 38.57 + africa & egypt & oriflame university @xcite & 5.497 & 4.288 & 21.99 + africa & south africa & virtual academy of south africa @xcite & 4.936 & 2.588 & 47.57 + australia & australia & australian national university @xcite & 4.525 & 3.559 & 21.35 + australia & australia & monash university @xcite & 4.947 & 4.141 & 16.29 +    from table 5 it is concluded that there is a reduction of * 16% to 51% depending on the geographical location * of moodle server , if the resolved hostname for a web page is found in dns cache .",
    "another experiment was carried out on the same client to compare the performance of moodle by changing the number of dns cache entries , dns cache expiration period and http keep alive timeout for mozilla firefox 21.0 browser .",
    "the following three scenarios were tested for 100 iterations of moodle s login page of moodle websites of six universities situated in six continents of the world using imacros 9.0 firefox extension @xcite and httpfox addon for firefox @xcite .",
    ".... scenario 1 ( s1 ) :    dns cache entries = 20 dns cache expiration period = 60 seconds http keep alive timeout = 115 seconds    scenario 2 ( s2 ) : dns cache entries = 512 dns cache expiration period = 3600 seconds http keep alive timeout = 115 seconds    scenario 3 ( s3 ) : dns cache entries = 512 dns cache expiration period = 3600 seconds http keep alive timeout = 0 second    ....     * university * & * response time for s1 * & * response time for s2 * & * difference ( s ) between s1 & s2 * & * response time for s3 * & * difference(s ) between s2 & s3 * + north america & ucla , usa @xcite & 173.984 & * 169.284 * & 4.7 & 178.69 & 9.406 + asia & iit , madras , india @xcite & 108.93 & * 105.677 * & 3.253 & 110.548 & 4.871 + australia & australian national university @xcite & 347.361 & * 344.961 * & 2.400 & 354.336 & 9.375 + africa & oriflame university , egypt @xcite & 244.035 & * 240.246 * & 3.789 & 256.08 & 15.834 + europe & university of nottingham , uk @xcite & 153.71 & * 150.213 * & 3.497 & 156.76 & 6.547 + south america & university of grand colombia , colombia @xcite & 142.241 & * 135.908 * & 6.333 & 146.763 & 10.855 +    from table 6 , it is observed that the end user response time is minimum under scenario 2 .",
    "hence , it can be concluded that the performance of a web application can be enhanced by reducing dns lookups , which was achieved by :    * increasing the number of dns cache entries , * increasing dns expiration period , and * using a network that supports http keep - alive mechanism      gzip compression of web pages can significantly minimize the latency introduced due to transfer of the web page files from web server to client s browser . starting with http/1.1 , web clients indicate support for compression with the accept - encoding header in the http request @xcite .",
    ".... accept - encoding : gzip , deflate ....",
    "after the web server sees this header , it compresses the response using one of the methods listed by the client .",
    "the web server uses the content - encoding header in the response to inform the client about the compressed response @xcite .",
    ".... content - encoding : gzip ....    an experiment was performed on the client mentioned in section  [ subsec : dns ] for moodle installed on the machine with specifications as mentioned in section  [ sec : back ] using web developer extension for mozilla firefox 21.0 @xcite .",
    "requested * & * response size without compression(kb ) * & * response size with compression(kb ) * & * reduction in response size ( % ) * + index & 42 & 926 & 215 & 76.78 + login & 13 & 597 & 138 & 76.88 + view course & 42 & 804 & 187 & 76.74 + & 41 & 802 & 187 & 76.68 + & 35 & 889 & 218 & 75.48 + view calendar & 42 & 861 & 207 & 75.96 + & 40 & 806 & 188 & 76.67 + 1 page quiz with 5 questions & 49 & 847 & 198 & 76.62 + view assignments & 43 & 804 & 187 & 76.74 +    it is observed that gzip compression reduces the response size by * 75%77%*.      entity tags ( etags ) are used by web servers and browsers to determine whether the component in the browser s cache an experiment was performed on the client mentioned in section  [ subsec : dns ] for moodle installed on the machine with specifications as mentioned in section  [ sec : back ] using firebug extension 1.11.4 for mozilla firefox 21.0 @xcite .",
    "moodle uses etags for its style sheets , scripts and images .",
    "it was observed that deactivating etags reduces the response there is a reduction of * an average of 1737 bytes * in response header size after deactivating the etags .",
    "css style sheets , js files and images requested * & * response header size with activated etags(bytes ) * & * response header size with deactivated etags(bytes ) * & * reduction in response size ( bytes ) * + index & 40 & 20357 & 18454 & 1921 + login & 11 & 5695 & 5172 & 523 + view course & 42 & 21364 & 19345 & 2019 + 1 page quiz with 5 questions & 49 & 19850 & 17978 & 1872 + view assignments & 39 & 24978 & 22628 & 2350 + * average * & & & & * 1737 * +",
    "ajax ( asynchronous javascript and xml ) is a collection of technologies , primarily javascript , css , dom and asynchronous data retreival which is used to exchange data with a server , and update parts of a web page without reloading the whole page .",
    "though ajax allows the server to provide instantaneous feedback to the user , it does not guarantee that the user wo nt have to wait for the asynchronous javascript and xml responses .",
    "the performance of the web application can be improved by optimizing the ajax requests .",
    "the techniques mentioned in section  [ subsec : caching ] , [ subsec : dns ] and [ subsec : gzip ] are collectively used to optimize the ajax components of moodle .",
    "the ajax components are made cacheable by modifying the expires header which is defined in * outputrenderers.php * file located in * lib * directory of main moodle directory .",
    "an experiment was performed on the client mentioned in section  [ subsec : dns ] for moodle installed on the machine with specifications as mentioned in section  [ sec : back ] using firebug extension 1.11.4 for mozilla firefox 21.0 @xcite .",
    "+ _ modifications made to expires header in outputrenderers.php file _",
    ".... default : @header('expires : sun , 28 dec 1997 09:32:45 gmt ' ) ; line 3345    modified : @header('expires : sun , 28 dec 2020 09:32:45 gmt ' ) ; line 3345 ....     before optimizing ajax(s ) * & * response time after optimizing ajax(s ) * & * reduction in response time(% ) * + drag and drop sections & 309 & 227 & 26.54 + drag and drop activities & 2.17 & 1.62 & 25.35 + drag and drop files & 201 & 175 & 12.94 + drag and drop blocks & 440 & 354 & 19.55 + ajax chat box & 36 & 24 & 33.33 + * average * & & & * 23.54 * +    there is a reduction of an average of 23.54% in user response time after optimizing the ajax components .",
    "in this presented paper , seven methods to optimize web applications have been analysed and tested for moodle lms .",
    "these methods can be further used to optimize other essential web applications including webmail , online retail sales , online auctions , wikis and e - learning .",
    "it is observed that moodle shows faster response time under heavy traffic , if it is loaded on a solid state disk .",
    "this technique can be used to scale high traffic web applications .",
    "the caching mechanism can be used by the client s browser to optimize the front - end operations that can reduce the end - user response time by up to 80% .",
    "this mechanism can be used for content that changes infrequently , that is , application s static assets like graphics , style sheets and scripts .",
    "in addition to application s static assets , dns resolutions can be cached by client s browser and can reduce the end - user response time by up to 50% .",
    "high traffic web applications can employ more than one server to share the load .",
    "in such a scenario , etags become invalid and deactivating them can further enhance the performance of the web application .",
    "the seven web optimization techniques discussed in this paper were successfully tested for the moodle lms which showed a maximum reduction of 98% in average user response time by using the hardware optimization technique used in ( section  [ subsec : ssd ] ) .",
    "these best practices can be further applied to a novel or existing web application to improve its performance by reducing end user response time and thereby increasing the number of concurrent users and throughput .",
    "the authors would like to thank the members of department of computer science , indian institute of technology , bombay , india for their kind support and encouragement .",
    "french , c.n .",
    "( 2011 , june 20 ) .",
    "mobile apps put the web in their rear - view mirror .",
    "accessed june 4 , 2013 , from flurry blog : http://blog.flurry.com/bid/63907/mobile-apps-put-the-web-in-their-rear-view-mirror        horat d. and arencibia a. q. ( 2009 ) : web applications : a proposal to improve response time and its application to moodle . in : moreno daz , r. ; pichler , f. ; arencibia , a.q .",
    "computer aided systems theory - euro - cast 2009 .",
    "lncs , vol 5717 , pp . 218225 , springer , heidelberg ( 2009 ) .",
    "project moodle , http://moodle.org moodle statistiscs , https://moodle.org/stats/ joint information systems committee , regional support centre , west midlands moodle wiki , http://wiki.rscwmsystems.org.uk/index.php/moodle apache jmeter ,   http://jmeter.apache.org/ [ http://jmeter.apache.org/ ] moodle - jmeter - script - generator , + https://github.com/kabalin/moodle-jmeter-script-generator solid state drive by wikipedia.org , + http://en.wikipedia.org/wiki/solid-state_drive g.wong : ssd market overview . in : micheloni , r. ; marelli , a. ; eshghi , k. ( eds . ) inside solid state drives ( ssds ) , springer series in advanced microelectronics , volume 37 , pp",
    ". 1 - 18 , springer science+business media dordrecht(2013 ) .",
    "apache vs nginx , http://www.wikivs.com/wiki/apache_vs_nginx ab - apache http server benchmarking tool , + http://httpd.apache.org/docs/current/programs/ab.html indian institute of technology , bombay : moodle , + https://moodle.iitb.ac.in/login/index.php indian institute of technology , madras : moodle , + http://www.cse.iitm.ac.in/moodle/ singapore institute of management university , singapore : moodle , + http://cp.unisim.edu.sg/moodle/ sojo university , nishi - ku , kumamoto , japan : moodle , + http://md.ed.sojo-u.ac.jp/ graduate school of management , barcelona , spain : moodle , + http://moodle.gsmbarcelona.eu/ university of nottingham , nottingham , uk : moodle , + https://moodle.nottingham.ac.uk/login/index.php university of california , los angeles : physics and astronomy dept .",
    "moodle , + http://reserve.pna.ucla.edu/ pontifical catholic university of argentina , puerto madero , buenos aires , argentina : lirweb moodle , http://www.lirweb.com.ar/ university of grand colombia , bogot , d.c . ,",
    "colombia : moodle , + http://virtual.ulagrancolombia.edu.co/login/index.php oriflame university : moodle , http://www.oriflame-eg.com/uni/moodle/ virtual academy of south africa : moodle , http://www.virtualacademy.co.za/ australian national university : moodle , http://moodle.anu.edu.au/ monash university : moodle , http://moodle.vle.monash.edu/ imacros , http://www.iopus.com/imacros/ httpfox addon for mozilla firefox 21.0 , + https://addons.mozilla.org/en-us/firefox/addon/httpfox/ web developer extension for mozilla firefox 21.0 , + https://addons.mozilla.org/en-us/firefox/addon/web-developer/ firebug 1.11.4 extension for mozilla firefox 21.0 , + https://addons.mozilla.org/en-us/firefox/addon/firebug/"
  ],
  "abstract_text": [
    "<S> analysis of seven optimization techniques grouped under three categories ( hardware , back - end , and front - end ) is done to study the reduction in average user response time for modular object oriented dynamic learning environment ( moodle ) , a learning management system which is scripted in php5 , runs on apache web server and utilizes mysql database software . before the implementation of these techniques , </S>",
    "<S> performance analysis of moodle is performed for varying number of concurrent users . </S>",
    "<S> the results obtained for each optimization technique are then reported in a tabular format . the maximum reduction in end user response time </S>",
    "<S> was achieved for hardware optimization which requires moodle server and database to be installed on solid state disk .    </S>",
    "<S> manchanda , p. ( 2013 ) . </S>",
    "<S> analysis of optimization techniques to improve user response time of web applications and their implementation for moodle . </S>",
    "<S> +   + in papasratorn , b. ; charoenkitkarn , n. ; vanijja , v. ; chongsuphajaisiddhi , v. ( eds . ) , proceedings of the 6th international conference , iait 2013 , bangkok , thailand , december 12 - 13 , 2013 . </S>",
    "<S> +   + to appear in volume 0409 of springer ccis series . </S>",
    "<S> + the original final publication will be available at www.springerlink.com </S>"
  ]
}
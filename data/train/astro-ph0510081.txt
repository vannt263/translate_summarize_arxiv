{
  "article_text": [
    "many physical systems exhibits some @xmath0noise , a stochastic process with a spectral density having a power exponent @xmath6 . among the many fascinating questions related to it ]",
    "an apparently simple problem is how to build random number generators ( rng ) with such long - range correlations .",
    "the classical method ( see @xcite ) is to generate a vector of white noise ( as produced by a standard rng ) with an appropriate correlation matrix .",
    "however , one needs to take the `` square root '' of this matrix ( as with a cholesky decomposition @xcite ) , a method rapidly limited by the size of the requested sample .",
    "one must then turn on to more specialized techniques , which can be categorized into :    * _ digital signal processing _ :",
    "one generate a vector of white noise and fast - convolve it in fourier space with the required @xmath0shape ( see @xcite ) .",
    "one may use also a wavelet decomposition ( @xcite ) which is quite natural due to the scaling properties of the process ( see next part ) . with these methods samples of the order of @xmath7 can be efficiently obtained . for samples with longer correlations ,",
    "one is limited by the memory of the computer . * _ fractal techniques _ : in non - linear science , @xmath0noise is referred to as `` fractional brownian noise '' .",
    "the peculiar shape of the spectrum ( with a power exponent ) implies that the process is `` scale - invariant '' or more precisely `` self - similar '' ( see @xcite ) , meaning that the stochastic process @xmath8 is statistically similar ( in the sense of having the same statistical moments in the infinite limit ) to @xmath9 for any dilatation @xmath10 , where @xmath11 is the hurst exponent related to the @xmath0slope by @xmath12 .",
    "some very efficient method to generate this process @xcite is to shoot gaussian numbers for both ends of an interval , take the average at the mean and add a new shot with a re - scaled amplitude , and repeat the process on each subintervals .",
    "this however requires knowing _ a - priori _ the limits of your sample and is also limited by the computer memory for very large samples .    in some cases , these methods are insufficient , as in some modern astrophysics experiments .",
    "for instance , this work has been perform in the framework of the simulation of the planck esa mission @xcite which is a satellite experiment , planned to be launched in 2008 , whose goal is to measure the cosmic microwave background anisotropies with unprecedent accuracy .",
    "it is composed of two instruments : high frequency ( hfi ) and low frequency ( lfi ) , the former using low temperature bolometers ( 0.1k ) and the latter radiometers . at the level of precision required ( @xmath13 )",
    "the instruments are sensitive to @xmath4noise mostly from the cryogenic parts ( hfi ) and @xmath14 with @xmath15 from the low - noise electronics ( lfi ) . given the sampling rate of the instruments ( @xmath16 ) and its long duration ( two years ) , very long streams of noise need to be generated to prepare the analyzes .",
    "the techniques described previously fail .    in the following",
    "we will show how to produce rapidly such long streams of @xmath0noise for an arbitrarily low frequency cutoff , without requiring massive memory load .",
    "in the @xmath4case ( section [ sec : hfi ] ) we will adapt some classical numerical filtering technique ( auto - regressive moving average , see appendix ) that allows to build an _",
    "optimal _ generator ( only limited by the underlying standard white one ) . for @xmath3 ( section [ sec : lfi ] ) the problem becomes much more intricate , because we are moving off the linear theory and the previous method can not be generalized .",
    "we will then adapt a method from electronics , to approximate the problem to a very good precision by a set of @xmath4generators and use the previous case .",
    "we will then give hints on how to build generators with @xmath5 ( section [ sec : above ] ) using methods based on logistic maps .",
    "the appendix recalls some properties of the @xmath17 transform which will be our main tool .",
    "the algorithms described hereafter are now full part of the planck simulation programs @xcite and streams of 1 year data of noise ( @xmath18 ) are generated in about 20 minutes on a single standard 2 ghz processor .",
    "let us start with the pure @xmath4noise case .",
    "the idea is to start with a standard gaussian generator and numerically filter the shots ( called @xmath19 , realizations of an @xmath20 process ) to obtain the proper power spectrum which is simply : and work in the frequency domain @xmath21 .",
    "in addition we will not mention the normalization factor @xmath22 of the input gaussian generator that can be recovered straightforwardly by multiplying the output by @xmath23 . ]",
    "@xmath24    since @xmath25 is white @xmath26 , so all we need is to design a filter , here of the form : @xmath27 therefore : @xmath28 this is simply a first order integrator and has an equivalent discrete @xmath17 transform of the form ( see appendix ) : @xmath29 therefore the filtered signal is : @xmath30 which according to the summation property of the @xmath17 transform ( appendix ) is obtained simply from : @xmath31 this equation represents an ma ( moving average ) filter ; the system is built by `` remembering '' at each step its previous value ( random walk ) and has therefore only one state variable .",
    "it has an `` infinite memory '' .",
    "it is slightly more convenient to write this filter in the following way : @xmath32 which accordingly to the offset properties of the @xmath17 transform is obtained in the time domain through : @xmath33    which represents a one state ar ( auto regressive ) filter .      while infinitely long streams may be theoretically interesting ( does pure @xmath0noise has an intrinsic low frequency cutoff ? is it a stationary process ? ... ) we are concerned here with designing a generator for real life experiments which have _ finite _ durations .",
    "therefore it is assumed that there exists _ some _ frequency @xmath35 below which the noise becomes white ( which can be as long as the time - scale of the experiment ) .    to get a white spectrum below some frequency @xmath36",
    ", we are seeking for a transfer function of the type :    @xmath37    which represents a first order low - pass filter .",
    "its inverse fourier transform is : @xmath38 ( @xmath39 being the unit step ) , which sampled at a rate @xmath40 has the @xmath17 transform : @xmath41    therefore : @xmath42    whose inverse transform is : @xmath43    for each shot @xmath44 one just needs to keep the previous filtered value @xmath45 to compute the new one @xmath46 .      in most experimental cases ,",
    "noise becomes white also above some `` knee '' frequency @xmath47and we incorporate it in the following .    for a filter with a white spectral behavior both below @xmath34and above @xmath47",
    ", we symmetrize eq . :",
    "@xmath48 in order to treat the numerator and denominator symmetrically , we use the bilinear transform ( see appendix ) : @xmath49 relating it to frequency via : @xmath50 to get the @xmath17 transfer function in the form : @xmath51 with : @xmath52 where the reduced frequencies are @xmath53 and @xmath54 .",
    "it is now straightforward to build the numerical filter from : @xmath55 which for any @xmath56 reads : @xmath57    this is the equation for a simple arma filter : for any white shot @xmath44 one just needs to keep the previous one @xmath58 and the previous filtered value @xmath45 , to compute the new one .",
    "this simple filter has been implemented in ` c++ ` and run for @xmath59 samples .",
    "results are depicted on the upper plots of figure [ fig : oofres ] and show that it behaves correctly .",
    "this method is _ optimal _ , in the sense that cpu - time is just limited by the speed of your white number generator .",
    "it is insensitive to whatever your maximal correlation length ( @xmath34 ) is .",
    "and obviously it does not require any memory load .",
    "arma models were so successful in the @xmath4noise case that we are tempted to generalize them to the @xmath0case .",
    "this is however far from trivial , mainly because we are moving off linear theories for which the @xmath17 transform has been tailored .",
    "let us see what happens in more details .    for a pure @xmath0noise case",
    ", we are seeking for a transfer function of the form : @xmath60 its generalized @xcite inverse fourier transform is : @xmath61 and its associated one - sided @xmath17 transform is : @xmath62 unfortunately the sum that appears on the r.h.s can not be factorized , so that the ma filter @xmath63 leads to an explicit convolution : @xmath64    in direct space , one can therefore produce @xmath65 noise by generating @xmath66 type transients at random initial times @xcite .",
    "there are however two problems with this expression :    1 .",
    "the first term @xmath67 is infinite 2 .",
    "we must keep _ all _ the past terms ( @xmath68)which is rapidly inefficient even with a fast convolution method .",
    "the first problem is the reflect of the high frequency divergence of @xmath0noise @xcite .",
    "kasdin @xcite proposes an elegant way to circumvent it , by using a @xmath17 transfer function of the form : @xmath69 ( compare to ) .",
    "it allows us to build an ar filter : @xmath70 by the power expansion @xmath71 : @xmath72 the @xmath73 tend rapidly to @xmath74 and the first term @xmath75 is now well defined .",
    "this however does not solve the long range dependency which just reflects the fact that a @xmath0(@xmath3 ) spectrum has _",
    "an infinite number of state variables and that there exits no ( linear ) difference equations to represent it_.    one may think that this bad behavior is to due to a missing low frequency cutoff ( @xmath76 ) . we can modify the transfer function to see what happens : @xmath77 then using eq .",
    "3.382 - 7 @xcite , the inverse fourier transform is : @xmath78 by comparing to the no - cutoff case eq .",
    ", we see that the effect of introducing @xmath76is to attenuate the long range correlation by the exponential factor : @xmath79 .",
    "still , one needs to keep a few times @xmath80 past samples which is too inefficient for a low frequency cutoff .",
    "we then turn on to an approximate method to produce efficiently long range correlated samples .",
    "an old well - known way in electronics @xcite is to approximate the @xmath65 spectrum by a sum of @xmath4 , relaxation processes , equally spaced on a logarithmic frequency grid , which is called the `` infinite rc model '' @xcite .",
    "quite surprisingly little filters are needed to produce an @xmath0(@xmath81 ) spectrum at the percent level .",
    "this method is used for instance in pink audio noise generation @xcite , in commercial libraries @xcite , and even implemented on a dsp @xcite .",
    "we work out here a slight variant of the rc model due to keshner @xcite which allows to incorporate whitening both below @xmath34and above @xmath47 , by filtering one single white shot .",
    "we are seeking for a transfer function of the type : @xmath82 the approximate transfer function is of the type : @xmath83 where @xmath84 is the number of filters used , and @xmath85 are the poles and zeros locations .",
    "since we already designed these @xmath4filters in section [ sec : oof2w ] , the only remaining point is to get their poles and zeros positions .    from figure [",
    "fig : keshner ] it is clear that the poles must be located regularly on a logarithmic grid : @xmath86 in order to have a symmetric errors , the zeros must be placed at @xcite : @xmath87 and for continuity , from geometrical considerations , the first pole must be put at : @xmath88    how many @xmath4filters do we need ? while in principle , as few as one per decade is enough to approximate the slope to better than 5% @xcite , since we also wish here to reproduce neatly the @xmath34and @xmath47shoulders , we used 1.5 filters per decade , which leads to an approximation at the percent level for any @xmath81 value throughout the spectrum . spectrum . ]",
    "we implemented this algorithm , using the previous code for @xmath4noise : a gaussian white number is shot and passed recursively through the set of @xmath4filters : the coefficients of eq are automatically recomputed by the class for a given pole / zero and the output of each filter is the input to the next one .",
    "we illustrate on the lower plots of figure [ fig : oofres ] results obtained by generating @xmath59 samples of an @xmath65 noise .",
    "it required using only six @xmath4filters and the increase in cpu - time with respect to a pure white gaussian shot , is only of 25% : the limitation is mainly due to the white time shot , not the filtering stages .",
    "the strong feature of this method is that the number of filters used increases only logarithmically down to @xmath34 .",
    "the drawback is that the generator has to be `` warned up '' to avoid the transient response , on a timescale of the order of the slowest rc filter ( approximately @xmath89 ) .",
    "while rarely encountered in experimental data , the curious reader may wonder how to generate an @xmath0noise with a slope @xmath5 . from geometric arguments , the methods presented before fails .",
    "an interesting approach is to use the work on logistic maps .",
    "consider the straightforward ( non - linear ) recurrence @xcite : @xmath91 where @xmath92 .",
    "this is a pure @xmath65 noise generator ( actually @xmath93 ) !    by changing the power exponent ,",
    "group theory computations show @xcite that any factor @xmath5 can be reached . by adding a `` shift from tangency '' @xmath94 in the recurrence : @xmath95 one introduces a low frequency cutoff @xmath34 .",
    "whitening above @xmath47can be obtained by shooting a properly weighted extra white shot .",
    "this chaotic process is however far from gaussian ( it is an `` intermittent '' one , representing long phases of low values , followed by sudden `` bursts '' of high ones ) but , from the central limit theorem , gaussianity can be recovered by summing up several such independent generators , a method particularly efficient on parallel computers , but beyond the scope of this article .    for completeness , note an interesting connection between this approach and a more empirical one consisting in re - scaling some brownian motion ( but in which case only @xmath81 range can be reached ) @xcite .",
    "we have worked out the formalism of filtering white noise efficiently to produce `` infinite '' streams of band - limited @xmath0noise .    * for @xmath4noise the method is optimal , is equivalent to generating standard gaussian white noise .",
    "* for @xmath81 we use an excellent approximation which only requires about one and half@xmath4filters / decade , allowing the very fast generation of @xmath0noise over an arbitrarily large frequency range .",
    "the corresponding ( c++ ) software can be downloaded from : + link:\\randweb[`http://planck.lal.in2p3.fr / wiki / pmwiki.php / softs / absrand ` ] + we have focussed mainly on this method because it is lightweight and very efficient for very long time streams . for more general applications , before choosing a dedicated algorithm ask yourself the following questions :    1 .",
    "do i want to generate a gaussian noise ?",
    "2 .   what @xmath96 range do i need ?",
    "do i have a low frequency cutoff @xmath34below which noise is white ?",
    "note that the upper @xmath47 frequency can always be added by shooting an extra white noise ( properly weighted ) .",
    "4 .   on how many decades",
    "do i need the logarithmic slope ?",
    "5 .   what is my hardware support ( mainly memory load ) ?",
    "table [ tab : guide ] then gives you some hints about which algorithm you can use .",
    ".[tab : guide ] summary of today s existing methods to generate discrete @xmath0noise .",
    "the column `` @xmath34 '' refers to the ( possible ) existence of a frequency limit in the method , beyond which noise is white .",
    "`` cpu / load '' is indicative ( it should be considered as relative to the different methods ) and only significant for very long correlation lengths . [ cols=\"^,^,^,^,^,^\",options=\"header \" , ]",
    "in this appendix we recall a few results of the theory of automatism that are relevant to this analysis .",
    "the reader is referred to any book on linear theories ( as @xcite ) for more details .",
    "the @xmath17 transform is a tool similar to the fourier transform , but for the discrete domain .",
    "to a causal series of values @xmath97 we associate its @xmath17 transform by : @xmath98 where @xmath17 is a complex number .                  in the limit of fast sampling @xmath110 ( which is most often the case since we work below nyquist frequency )",
    "the @xmath107 transform can be identified with @xmath21 , giving a convenient way to determine the @xmath17 transform coefficients directly from the signal transfer function .",
    "when only @xmath113 is different from 0 , it is an called auto regressive ( * ar * ) filter ( also know as infinite impulse response ) .",
    "if all the @xmath114 s are null , this is a moving average ( * ma * ) one ( also know as finite impulse response ) . in the general case",
    "this is called an * arma * filter .",
    "a. van der ziel , `` on the noise spectra of semi - conductor noise and of flicker effect '' , _ physica _ , * 16 * ( 1950 )",
    ". + j.a barnes and d.w .",
    "allan , `` a statistical model of flicker noise '' , _ proc .",
    "ieee_,*54 * ( 1966 ) .",
    "v. radeka , `` 1/f noise in physical measurements '' , _ ieee trans .",
    "* 16 * , 17 ( 1969 ) .",
    "a. ambrozy and l.b .",
    "kiss , `` 1/f noise generator '' , _ proc .",
    "8th intern .",
    "conf . on noise in physical systems _ , eds .",
    "a. damico and p. mazzetti , north - holland ( 1986 ) p. 445"
  ],
  "abstract_text": [
    "<S> we review existing methods for generating long streams of @xmath0noise ( @xmath1 ) focusing on the digital filtering of white noise . </S>",
    "<S> we detail the formalism to conceive an efficient @xmath0random number generator ( white outside some bounds ) in order to generate very long streams of noise without an exhaustive computer memory load . </S>",
    "<S> for @xmath2 it is shown why the process is equivalent to a random - walk and can be obtained simply by a first order filtering of white noise . as soon as @xmath3 the problem becomes non linear and </S>",
    "<S> we show why the exact digital filtering method becomes inefficient . instead </S>",
    "<S> , we work out the formalism of using several @xmath4filters spaced logarithmically , to approximate the spectrum at the percent level . finally , from work on logistic maps , we give hints on how to design generators with @xmath5 . </S>",
    "<S> the corresponding software is available from link:\\randweb[`http://planck.lal.in2p3.fr / wiki / pmwiki.php / softs / absrand ` ] . </S>"
  ]
}
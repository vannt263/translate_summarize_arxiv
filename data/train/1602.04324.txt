{
  "article_text": [
    "duality is a powerful categorical notion , and the relationship between ( structures in ) a category and its dual is fruitful to study . especially in self - dual categories ,",
    "properties may coincide with their dual properties .",
    "this article focuses on a specific kind of self - dual category , that has applications in quantum theory  @xcite and reversible computing  @xcite , amongst others , namely _",
    "dagger categories _ : categories equipped with a contravariant identity - on - objects involutive endofunctor , called the dagger  @xcite . such categories can behave quite differently than ordinary categories , for example in their limit behaviour  @xcite , subobjects  @xcite , additive properties  @xcite , or homotopy - theoretical foundations  @xcite . as a first step towards a general theory of dagger categories , we study monads on such categories .",
    "a monad on a dagger category is automatically also a comonad .",
    "we contend that the theory works best when the monad and comonad satisfy the following _ frobenius law _ , depicted in a graphical calculus that will be reviewed in section  [ sec : pictures ] .",
    "@xmath0 ( .5,1.5 ) to ( .5,2 ) ;     \\draw ( .5,1.5 ) to[out=0,in=90 ] ( 1,1 ) to[out=-90,in=180 ] ( 1.5,.5 ) to ( 1.5,0 ) ;     \\draw ( 1.5,.5 ) to[out=0,in=-90 ] ( 2,1 ) to ( 2,2 ) ;     \\node[dot ] at ( .5,1.5 ) { } ;     \\node[dot ] at ( 1.5,.5 ) { } ;    \\end{pic }    \\quad = \\quad    \\begin{pic}[xscale=-1 ]     \\draw ( 0,0 ) to ( 0,1 ) to[out=90,in=180 ] ( .5,1.5 ) to ( .5,2 ) ;     \\draw ( .5,1.5 ) to[out=0,in=90 ] ( 1,1 ) to[out=-90,in=180 ] ( 1.5,.5 ) to ( 1.5,0 ) ;     \\draw ( 1.5,.5 ) to[out=0,in=-90 ] ( 2,1 ) to ( 2,2 ) ;     \\node[dot ] at ( .5,1.5 ) { } ;     \\node[dot ] at ( 1.5,.5 ) { } ;    \\end{pic}\\ ] ] this law has the following satisfactory consequences .    *",
    "any pair of adjoint functors that also preserve daggers induces a monad satisfying the law ; see section  [ sec : adjunctions ] . *",
    "the kleisli category of a monad that preserves daggers and satisfies the law inherits a dagger ; see section  [ sec : fem ] .",
    "* for such a monad , the category of those eilenberg - moore algebras that satisfy the law inherits a dagger ; see section  [ sec : fem ] . * in fact ,",
    "this kleisli category and frobenius - eilenberg - moore category are the initial and final resolutions of such a monad as adjunctions preserving daggers in the dagger 2-category of dagger categories ; see section  [ sec : formal ] . *",
    "any monoid in a monoidal dagger category satisfying the law induces a monad satisfying the law ; see section  [ sec : monads ] .",
    "* moreover , the adjunction between monoids and strong monads becomes an equivalence in the dagger setting ; see section  [ sec : strength ] .",
    "additionally , section  [ sec : coherence ] characterizes the frobenius law as a natural coherence property between the dagger and closure of a monoidal category .    because of these benefits , it is tempting to simply call such monads ` dagger monads ' .",
    "however , many of these results also work without daggers , see  @xcite .",
    "this paper is related to those works , but not a straightforward extension .",
    "daggers and monads have come together before in coalgebra  @xcite , quantum programming languages  @xcite , and matrix algebra  @xcite .",
    "the current work differs by taking the dagger into account as a fundamental principle from the beginning .",
    "finally , section  [ sec : strength ] is a noncommutative generalization of  ( * ? ? ?",
    "* theorem  4.5 ) .",
    "it also generalizes the classic eilenberg - watts theorem  @xcite , that characterizes certain endofunctors on abelian categories as being of the form @xmath1 for a monoid @xmath2 , to monoidal dagger categories ; note that there are monoidal dagger categories that are not abelian  ( * ? ? ?",
    "* appendix  a ) .",
    "this article extends an earlier conference proceedings version  @xcite . we thank tom leinster , who inspired examples  [ ex : dagbiprods ] and  [ ex : imdagadj ]",
    "we start by introducing dagger categories . they can behave quite differently from ordinary ( non - dagger ) ones , see _ e.g. _  @xcite , and are especially useful as semantics for quantum computing  @xcite .",
    "a _ dagger _ is a functor @xmath3 satisfying @xmath4 on objects and @xmath5 on morphisms . a _ dagger category _ is a category equipped with a dagger .    by slight abuse of terminology , we will also call @xmath6 the dagger of a morphism @xmath7 .    [",
    "ex : daggers ] dagger categories are plentiful :    * any groupoid is a dagger category with @xmath8 . *",
    "any monoid @xmath9 equipped with an involutive homomorphism @xmath10 may be regarded as a one - object dagger category with @xmath11 . *",
    "the category @xmath12 of ( complex ) hilbert spaces and bounded linear maps is a dagger category , taking the dagger of @xmath13 to be its adjoint , i.  e.  the unique morphism satisfying @xmath14 for all @xmath15 and @xmath16 .",
    "write @xmath17 for the full subcategory of finite - dimensional hilbert spaces ; this is a dagger category too .",
    "* write @xmath18 for the category with sets as objects and relations @xmath19 as morphisms @xmath20 ; composition is @xmath21 .",
    "this becomes a dagger category with @xmath22 .",
    "equivalently , we may specify @xmath19 as a function from @xmath23 to the powerset of @xmath2 .",
    "the guiding principle when working with dagger categories , also known as ` the way of the dagger ' , is that all structure in sight should cooperate with the dagger .",
    "for example , more important than isomorphisms are _ unitaries _ : isomorphisms @xmath7 whose dagger @xmath6 equals its inverse @xmath24 .",
    "the terminology derives from the category of hilbert spaces .",
    "similarly , an endomorphism @xmath7 that equals its own dagger @xmath6 is called _ self - adjoint_. the following definition provides another example of this motto .",
    "a _ dagger functor _ is a functor @xmath25 between dagger categories satisfying @xmath26 .",
    "denote the category of small dagger categories and dagger functors by @xmath27 .",
    "dagger functors embody various concrete transformations :    * any functor between groupoids is a dagger functor . * a functor from a group(oid ) to @xmath28 is a dagger functor precisely when it is a _",
    "unitary representation_. * the inclusion @xmath29 is a dagger functor .",
    "there is no need to go further and define ` dagger natural transformations ' : if @xmath30 is a natural transformation between dagger functors , then taking daggers componentwise defines a natural transformation @xmath31 .",
    "thus the category @xmath32 $ ] of dagger functors @xmath33 and natural transformations is itself a dagger category .",
    "this implies that @xmath27 is a dagger 2-category , as in the following definition .",
    "notice that products of ( ordinary ) categories actually provide the category @xmath34 with products , so that the following definition makes sense .",
    "[ def : dagtwocat ] a _ dagger 2-category _ is a category enriched in @xmath27 , and a _ dagger 2-functor _ is a @xmath34-enriched functor .",
    "another source of examples is given by free and cofree dagger categories  @xcite .",
    "write @xmath35 for the category of small categories and functors .",
    "[ prop : cofree ] the forgetful functor @xmath36 has a right adjoint @xmath37 , which sends a category @xmath38 to the full subcategory of @xmath39 of objects @xmath40 , and sends a functor @xmath41 to the restriction of @xmath42 .",
    "the dagger on @xmath43 is given by @xmath44 ; this also makes @xmath45 into a dagger functor .",
    "dagger functors @xmath46 correspond naturally to functors @xmath47 via @xmath48 , and @xmath49 when @xmath50 .",
    "we end this section with a useful folklore result .",
    "[ lem : daglem ] if @xmath51 is a full and faithful functor , then any dagger on @xmath52 induces a unique dagger on @xmath38 such that @xmath41 is a dagger functor .",
    "if @xmath7 is a morphism in @xmath38 , fullness gives a morphism @xmath6 satisfying @xmath53 , which is unique by faithfulness .",
    "this uniqueness also gives @xmath54 .",
    "many proofs in the rest of this paper are most easily presented in graphical form .",
    "this section briefly overviews the graphical calculus that governs monoidal ( dagger ) categories , such as the category @xmath55 $ ] where our monads will live . for more information ,",
    "see  @xcite .",
    "a _ ( symmetric ) monoidal dagger category _ is a dagger category that is also a ( symmetric ) monoidal category , satisfying @xmath56 for all morphisms @xmath7 and @xmath57 , whose coherence maps @xmath58 , @xmath59 , and @xmath60 ( and @xmath61 ) are unitary .",
    "many monoidal structures on dagger categories make them monoidal dagger categories :    * the dagger category @xmath18 is a monoidal dagger category under cartesian product . * the dagger category @xmath62 is a monoidal dagger category under tensor product . * for any dagger category @xmath63 , the dagger category",
    "@xmath55 $ ] of dagger functors @xmath64 is a monoidal dagger category under composition of functors . *",
    "any monoidal groupoid is a monoidal dagger category under @xmath8 .",
    "there is a sound and complete graphical calculus for such categories , that represents a morphism @xmath13 as @xmath65 ( f ) at ( 0,0 ) { $ f$ } ;    \\draw ( f.south ) to + ( 0,-.1 ) ;    \\draw ( f.north ) to + ( 0,.1 ) ; \\end{pic}$ ] , and composition , tensor product , and dagger as follows .",
    "@xmath66 ( f ) { $ g \\circ f$ } ;      \\draw ( f.south ) to + ( 0,-.65 ) node[right ] { $ a$ } ;      \\draw ( f.north ) to + ( 0,.65 ) node[right ] { $ c$ } ;    \\end{pic }    =     \\begin{pic }      \\node[morphism ] ( g ) at ( 0,.75 ) { $ g\\vphantom{f}$ } ;      \\node[morphism ] ( f ) at ( 0,0 ) { $ f$ } ;      \\draw ( f.south ) to + ( 0,-.3 ) node[right ] { $ a$ } ;      \\draw ( g.south ) to node[right ] { $ b$ } ( f.north ) ;      \\draw ( g.north ) to + ( 0,.3 ) node[right ] { $ c$ } ;    \\end{pic }    \\qquad\\qquad    \\begin{pic }      \\node[morphism ] ( f ) { $ f \\otimes g$ } ;      \\draw ( f.south ) to + ( 0,-.65 ) node[right ] { $ a \\otimes c$ } ;      \\draw ( f.north ) to + ( 0,.65 ) node[right ] { $ b \\otimes d$ } ;    \\end{pic }    =     \\begin{pic }      \\node[morphism ] ( f ) at ( -.4,0 ) { $ f$ } ;      \\node[morphism ] ( g ) at ( .4,0 ) { $ g\\vphantom{f}$ } ;      \\draw ( f.south ) to + ( 0,-.65 ) node[right ] { $ a$ } ;      \\draw ( f.north ) to + ( 0,.65 ) node[right ] { $ b$ } ;      \\draw ( g.south ) to + ( 0,-.65 ) node[right ] { $ c$ } ;      \\draw ( g.north ) to + ( 0,.65 ) node[right ] { $ d$ } ;    \\end{pic }    \\qquad\\qquad    \\begin{pic }      \\node[morphism ] ( f ) { $ f^\\dag$ } ;      \\draw ( f.south ) to + ( 0,-.65 ) node[right ] { $ b$ } ;      \\draw ( f.north ) to + ( 0,.65 ) node[right ] { $ a$ } ;    \\end{pic }    =    \\begin{pic }      \\node[morphism , hflip ] ( f ) { $ f$ } ;      \\draw ( f.south ) to + ( 0,-.65 ) node[right ] { $ b$ } ;      \\draw ( f.north ) to + ( 0,.65 ) node[right ] { $ a$ } ;    \\end{pic}\\ ] ] distinguished morphisms are often depicted with special diagrams instead of generic boxes .",
    "for example , the identity @xmath67 and the swap map of symmetric monoidal dagger categories are drawn as : @xmath68 { $ a$ } to ( 0,1 ) node[right ] { $ a$ } ;    \\end{pic }    \\qquad\\qquad\\qquad    \\begin{pic }      \\draw ( 0,0 ) node[left ] { $ a$ } to[out=80,in=-100 ] ( 1,1 ) node[right ] { $ a$ } ;      \\draw ( 1,0 ) node[right ] { $ b$ } to[out=100,in=-80 ] ( 0,1 ) node[left ] { $ b$ } ;    \\end{pic}\\ ] ] whereas the ( identity on ) the monoidal unit object @xmath69 is drawn as the empty picture : @xmath70 the following definition gives another example : the unit and multiplication of a monoid get a special diagram .",
    "a _ monoid _ in a monoidal category is an object @xmath23 with morphisms @xmath71      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt}}}}\\colon a \\otimes a \\to a$ ] and @xmath72      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.north ) ; \\end{pic } } \\hspace{-1pt}}}}\\colon i \\to a$ ] , satisfying the following equations .",
    "@xmath73        \\node[dot ] ( t ) at ( 0,1 ) { } ;        \\node[dot ] ( b ) at ( 1,0 ) { } ;        \\draw ( t ) to + ( 0,1 ) ;        \\draw ( t ) to[out=0,in=90 ] ( b ) ;        \\draw ( t ) to[out=180,in=90 ] ( -1,0 ) to ( -1,-1 ) ;        \\draw ( b ) to[out=180,in=90 ] ( 0,-1 ) ;        \\draw ( b ) to[out=0,in=90 ] ( 2,-1 ) ;      \\end{pic }      =      \\begin{pic}[yscale=.4,xscale=-.4 ]        \\node[dot ] ( t ) at ( 0,1 ) { } ;        \\node[dot ] ( b ) at ( 1,0 ) { } ;        \\draw ( t ) to + ( 0,1 ) ;        \\draw ( t ) to[out=0,in=90 ] ( b ) ;        \\draw ( t ) to[out=180,in=90 ] ( -1,0 ) to ( -1,-1 ) ;        \\draw ( b ) to[out=180,in=90 ] ( 0,-1 ) ;        \\draw ( b ) to[out=0,in=90 ] ( 2,-1 ) ;      \\end{pic }    \\qquad\\qquad    \\begin{pic}[scale=.4 ]      \\node[dot ] ( d ) { } ;      \\draw ( d ) to + ( 0,1 ) ;      \\draw ( d ) to[out=0,in=90 ] + ( 1,-1 ) to + ( 0,-1 ) ;      \\draw ( d ) to[out=180,in=90 ] + ( -1,-1 ) node[dot ] { } ;    \\end{pic }    =    \\begin{pic}[scale=.4 ]      \\draw ( 0,0 ) to ( 0,3 ) ;    \\end{pic }    =    \\begin{pic}[yscale=.4,xscale=-.4 ]      \\node[dot ] ( d ) { } ;      \\draw ( d ) to + ( 0,1 ) ;      \\draw ( d ) to[out=0,in=90 ] + ( 1,-1 ) to + ( 0,-1 ) ;      \\draw ( d ) to[out=180,in=90 ] + ( -1,-1 ) node[dot ] { } ;    \\end{pic}\\ ] ] a _ comonoid _ in a monoidal category is a monoid in the opposite category ; an object @xmath23 with morphisms @xmath74      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt}}}}\\colon a \\to a \\otimes a$ ] and @xmath75      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.south ) ; \\end{pic } } \\hspace{-1pt}}}}\\colon a \\to i$ ] satisfying the duals of the above equations .",
    "a monoid in a symmetric monoidal category is _ commutative _ if it satisfies : @xmath73        \\node[dot ] ( d ) at ( 0,0 ) { } ;        \\draw ( d.north ) to + ( 0,1 ) ;        \\draw ( d.west ) to[out=180,in=90 ] + ( -.75,-1 ) to + ( 0,-1 ) ;        \\draw ( d.east ) to[out=0,in=90 ] + ( .75,-1 ) to + ( 0,-1 ) ;      \\end{pic }      \\quad = \\quad      \\begin{pic}[scale=.4 ]        \\node[dot ] ( d ) at ( 0,0 ) { } ;        \\draw ( d.north ) to + ( 0,1 ) ;        \\draw ( d.west ) to[out=180,in=90 ] + ( -.75,-.5 ) to[out=-90,in=90 ] + ( 2,-1.5 ) ;        \\draw ( d.east ) to[out=0,in=90 ] + ( .75,-.5 ) to[out=-90,in=90 ] +",
    "( -2,-1.5 ) ;      \\end{pic}\\ ] ] a monoid in a monoidal dagger category is a _ dagger frobenius monoid _ if it satisfies the following _ frobenius law_. @xmath76 ( .5,1.5 ) to ( .5,2 ) ;     \\draw ( .5,1.5 ) to[out=0,in=90 ] ( 1,1 ) to[out=-90,in=180 ] ( 1.5,.5 ) to ( 1.5,0 ) ;     \\draw ( 1.5,.5 ) to[out=0,in=-90 ] ( 2,1 ) to ( 2,2 ) ;     \\node[dot ] at ( .5,1.5 ) { } ;     \\node[dot ] at ( 1.5,.5 ) { } ;    \\end{pic }    \\quad = \\quad    \\begin{pic}[xscale=-1 ]     \\draw ( 0,0 ) to ( 0,1 ) to[out=90,in=180 ] ( .5,1.5 ) to ( .5,2 ) ;     \\draw ( .5,1.5 ) to[out=0,in=90 ] ( 1,1 ) to[out=-90,in=180 ] ( 1.5,.5 ) to ( 1.5,0 ) ;     \\draw ( 1.5,.5 ) to[out=0,in=-90 ] ( 2,1 ) to ( 2,2 ) ;     \\node[dot ] at ( .5,1.5 ) { } ;     \\node[dot ] at ( 1.5,.5 ) { } ;    \\end{pic}\\ ] ]    the frobenius law might look mysterious , but will turn out to be precisely the right property to make monads respect daggers .",
    "section  [ sec : coherence ] below will formally justify it as a coherence property between closure and the dagger .",
    "for now we illustrate that the frobenius law corresponds to natural mathematical structures in example categories .",
    "[ ex : groupoidfrob ] see  @xcite for more information on the following examples .",
    "* let @xmath77 be a small groupoid , and @xmath78 its set of objects .",
    "the assignments @xmath79 define a dagger frobenius monoid in @xmath28 on the hilbert space of which the morphisms of @xmath77 form an orthonormal basis .",
    "conversely , any dagger frobenius monoid in @xmath62 is of this form .",
    "the following lemma exemplifies graphical reasoning .",
    "recall that a ( co)monoid homomorphism is a morphism @xmath7 between ( co)monoids satisfying @xmath80      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.north ) ; \\end{pic } } \\hspace{-1pt}}}}= { \\smash{\\raisebox{1pt}{\\hspace{-3pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=-1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.north ) ; \\end{pic } } \\hspace{-1pt}}}}$ ] and @xmath81      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt}}}}= { \\smash{\\raisebox{-2pt}{\\hspace{-5pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=-1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt}}}}\\circ ( f \\otimes f)$ ] ( @xmath75      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.south ) ; \\end{pic } } \\hspace{-1pt}}}}\\circ f = { \\smash{\\raisebox{-3pt}{\\hspace{-3pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.south ) ; \\end{pic } } \\hspace{-1pt}}}}$ ] and @xmath74      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt}}}}\\circ f = ( f \\otimes f ) \\circ { \\smash{\\raisebox{-2pt}{\\hspace{-5pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt}}}}$ ] ) .",
    "[ lem : strictmorphismsareiso ] a monoid homomorphism between dagger frobenius monoids in a monoidal dagger category , that is also a comonoid homomorphism , is an isomorphism .    construct an inverse to @xmath82 current bounding box.south ) } ]      \\node ( a ) at ( 0,0 )",
    "[ inner xsep=0pt , inner ysep=1pt , minimum width=0.15 cm ] { \\ensuremath{\\scriptstyle f } } ;      \\draw [ - > , line width=0.4pt , line cap = round ]          ( [ xshift=-2.5pt ] a.south west )          to ( [ xshift=3pt ] a.south east ) ; \\end{tikzpicture } } } } b$ ] as follows : @xmath83        \\node ( f ) [ morphism ] at ( 0,0 ) { $ f$ } ;        \\draw ( f.north )        to [ out = up , in = right ] + ( -0.5,0.5 ) node ( d ) [ dot ] { }        to [ out = left , in = up ] + ( -0.5,-0.5 )        to [ out = down , in = up ] + ( 0,-1.8 ) node [ below ] { $ b$ } ;        \\draw ( d.north ) to + ( 0,0.4 ) node [ dot ] { } ;        \\draw ( f.south )        to [ out = down , in = left ] + ( 0.5,-0.5 ) node ( d ) [ dot ] { }        to [ out = right , in = down ] + ( 0.5,0.5 )        to [ out = up , in = down ] + ( 0,1.8 ) node [ above ] { $ a$ } ;        \\draw ( d.south ) to + ( 0,-0.4 ) node [ dot ] { } ;      \\end{pic}\\ ] ] the composite with @xmath7 gives the identity in one direction : @xmath83        \\node ( f ) [ morphism ] at ( 0,0 ) { $ f$ } ;        \\draw ( f.north )        to [ out = up , in = right ] + ( -0.5,0.5 ) node ( d ) [ dot ] { }        to [ out = left , in = up ] + ( -0.5,-0.5 )        to [ out = down , in = up ] + ( 0,-1.8 ) node [ below ] { $ b$ } ;        \\draw ( d.north ) to + ( 0,0.5 ) node [ dot ] { } ;        \\draw ( f.south )        to [ out = down , in = left ] + ( 0.5,-0.5 ) node ( d ) [ dot ] { }        to [ out = right , in = down ] + ( 0.5,0.5 )        to [ out = down , in = down ] + ( 0,0.8 )        node ( f2 ) [ morphism , anchor = south , width=0.2 cm ]        { $ f$ } ;        \\draw ( d.south ) to + ( 0,-0.5 ) node [ dot ] { } ;        \\draw ( f2.north ) to + ( 0,0.5 ) node [ above ] { $ b$ } ;      \\end{pic }      =      \\begin{pic}[xscale=.75,yscale=.5 ]        \\draw ( 0,0 )        to [ out = up , in = right ] + ( -0.5,0.5 ) node ( d ) [ dot ] { }        to [ out = left , in = up ] + ( -0.5,-0.5 )        to [ out = down , in = up ] + ( 0,-1.8 ) node [ below ] { $ b$ } ;        \\draw ( d.north ) to + ( 0,0.5 ) node [ dot ] { } ;        \\node ( f ) [ morphism ] at ( 0.5,-1.3 ) { $ f$ } ;        \\draw ( 0,0 )        to [ out = down , in = left ] + ( 0.5,-0.5 ) node ( e ) [ dot ] { }        to [ out = right , in = down ] + ( 0.5,0.5 )        to [ out = up , in = down ] + ( 0,1.3 ) node [ above ] { $ b$ } ;        \\draw ( f.north ) to ( e.south ) ;        \\draw ( f.south ) to + ( 0,-0.4 ) node [ dot ] { } ;      \\end{pic }      =      \\begin{pic}[xscale=.75,yscale=.5 ]        \\draw ( 0,0 )        to [ out = up , in = right ] + ( -0.5,0.5 ) node ( d ) [ dot ] { }        to [ out = left , in = up ] + ( -0.5,-0.5 )        to [ out = down , in = up ] + ( 0,-1.5 ) node [ below ] { $ b$ } ;        \\draw ( d.north ) to + ( 0,0.5 ) node [ dot ] { } ;        \\draw ( 0.5,-0.5 ) to + ( 0,-0.5 ) node [ dot ] { } ;        \\draw ( 0,0 )        to [ out = down , in = left ] + ( 0.5,-0.5 ) node ( d ) [ dot ] { }        to [ out = right , in = down ] + ( 0.5,0.5 )        to [ out = up , in = down ] + ( 0,1.6 ) node [ above ] { $ b$ } ;      \\end{pic }      =      \\begin{pic}[yscale=.5 ]        \\draw ( 0,0 ) node [ below ] { $ b$ } to + ( 0,3.1 ) node [ above ] { $ b$ } ;      \\end{pic}\\ ] ] the third equality uses the frobenius law   and the unit law .",
    "the other composite is the identity by a similar argument .",
    "this section considers adjunctions that respect daggers .",
    "a _ dagger adjunction _ is an adjunction between dagger categories where both functors are dagger functors .",
    "note that the previous definition did not need to specify left and right adjoints , because the dagger makes the adjunction go both ways .",
    "if @xmath84 and @xmath47 are dagger adjoints , say @xmath85 with natural bijection @xmath86 , then @xmath87 is a natural bijection @xmath88 , whence also @xmath89 .",
    "for example , a dagger category @xmath38 has a zero object if and only if the unique dagger functor @xmath90 has a dagger adjoint . here ,",
    "zero object _ is one that is both initial and terminal , and hence induces zero maps between any two objects .",
    "this is the nullary version of the following example : a product @xmath91 is a _ dagger biproduct _",
    "when @xmath92 , @xmath93 , @xmath94 , @xmath95 .",
    "[ ex : dagbiprods ] a dagger category @xmath38 with a zero object has binary dagger biproducts if and only if the diagonal functor @xmath96 has a dagger adjoint .    a right adjoint to the diagonal is well - known to fix binary products  ( * ? ? ?",
    "if it additionally preserves daggers the product is also a coproduct , and @xmath97 .",
    "@xmath98      \\node ( tl ) at ( 0,1 ) { $ a$ } ;      \\node ( t ) at ( 1,1 ) { $ a + b$ } ;      \\node ( tr ) at ( 2,1 ) { $ b$ } ;      \\node ( bl ) at ( 0,0 ) { $ a$ } ;      \\node ( b ) at ( 1,0 ) { $ a \\times b$ } ;      \\node ( br ) at ( 2,0 ) { $ b$ } ;      \\draw[- > ] ( tl ) to node[above ] { $ p_a^\\dag$ } ( t ) ;      \\draw[- > ] ( tr ) to node[above ] { $ p_b^\\dag$ } ( t ) ;      \\draw[- > ] ( b ) to node[below ] { $ p_a$ } ( bl ) ;      \\draw[- > ] ( b ) to node[below ] { $ p_b$ } ( br ) ;      \\draw[- > ] ( tl ) to node[left ] { $ { \\ensuremath{\\mathrm{id}_{}}}$ } ( bl ) ;      \\draw[- > ] ( tr ) to node[right ] { $ { \\ensuremath{\\mathrm{id}_{}}}$ } ( br ) ;      \\draw[- > ] ( t ) to node[right ] { $ { \\ensuremath{\\mathrm{id}_{}}}$ } ( b ) ;      \\draw[- > ] ( t ) to node[above ] { $ [ { \\ensuremath{\\mathrm{id}_{}}},0]$ } ( bl ) ;      \\draw[- > ] ( t ) to node[above ] { $ [ 0,{\\ensuremath{\\mathrm{id}_{}}}]$ } ( br ) ;    \\end{tikzpicture}\\ ] ] hence @xmath99 is the unique tuple of the cotuple of @xmath100 and @xmath101 , and the cotuple of @xmath102 and @xmath103 .",
    "the required equations governing @xmath104 and @xmath105 follow readily .    here is a more involved example of a dagger adjunction .",
    "[ ex : imdagadj ] the monoids @xmath106 and @xmath107 become one - object dagger categories under the trivial dagger @xmath108 . the inclusion @xmath109 is a dagger functor .",
    "it induces a dagger functor @xmath110\\to [ \\mathbb{n},{\\ensuremath{\\mathbf{fhilb}}}]$ ] , which has a dagger adjoint @xmath78 .",
    "an object of @xmath111 $ ] is a self - adjoint isomorphism @xmath112 on a finite - dimensional hilbert space @xmath23 , whereas an object of @xmath113 $ ] is a just a self - adjoint morphism @xmath114 in @xmath115 . to define @xmath78 on objects , notice that a self - adjoint morphism @xmath114 restricts to a self - adjoint surjection from @xmath116 to itself , and by finite - dimensionality of @xmath23 hence to a self - adjoint isomorphism @xmath117 on @xmath118 .    on a morphism @xmath119 in",
    "@xmath113 $ ] , define @xmath120 to be the restriction of @xmath7 to @xmath118 . to see this is well - defined , _",
    "i.e._the right diagram below commutes if the left one does , @xmath121       { a & b \\\\        a & b \\\\ } ;       \\path[- > ]       ( m-1 - 1 ) edge node [ left ] { $ t$ } ( m-2 - 1 )               edge node [ above ] { $ f$ } ( m-1 - 2 )       ( m-2 - 1 ) edge node [ below ] { $ f$ } ( m-2 - 2 )       ( m-1 - 2 ) edge node [ right ] { $ s$ } ( m-2 - 2 ) ;      \\end{tikzpicture}\\end{aligned }      \\qquad \\implies \\qquad      \\begin{aligned}\\begin{tikzpicture }       \\matrix ( m ) [ matrix of math nodes , row sep=2em , column sep=4em , minimum width=2em ]       { \\operatorname{im}t & \\operatorname{im}s \\\\        \\operatorname{im}t & \\operatorname{im}s \\\\ } ;       \\path[- > ]       ( m-1 - 1 ) edge node [ left ] { $ t$ } ( m-2 - 1 )               edge node [ above ] { $ g(f)$ } ( m-1 - 2 )       ( m-2 - 1 ) edge node [ below ] { $ g(f)$ } ( m-2 - 2 )       ( m-1 - 2 ) edge node [ right ] { $ s$ } ( m-2 - 2 ) ;      \\end{tikzpicture}\\end{aligned}\\ ] ] observe that if @xmath122 then @xmath123 for some @xmath124 , so that @xmath125 , and hence @xmath126 . this definition of @xmath78 is easily seen to be dagger functorial .    to prove that @xmath41 and @xmath78 are dagger adjoint",
    ", it suffices to define a natural transformation @xmath127 , because @xmath128 is just the identity .",
    "define @xmath129 to be the projection @xmath130 , which is a well - defined morphism in @xmath113 $ ] : @xmath131       { a & \\operatorname{im}t \\\\",
    "a & \\operatorname{im}t\\rlap{. } \\\\ } ;       \\path[- > ]       ( m-1 - 1 ) edge node [ left ] { $ t$ } ( m-2 - 1 )               edge node [ above ] { $ \\eta_t$ } ( m-1 - 2 )       ( m-2 - 1 ) edge node [ below ] { $ \\eta_t$ } ( m-2 - 2 )       ( m-1 - 2 ) edge node [ right ] { $ t$ } ( m-2 - 2 ) ;       \\end{tikzpicture}\\ ] ] naturality of @xmath132 boils down to commutativity of @xmath131       {        a & \\operatorname{im}t & \\\\        b & \\operatorname{im}s \\\\ } ;       \\path[- > ]       ( m-1 - 1 ) edge node [ left ] { $ f$ } ( m-2 - 1 )               edge node [ above ] { $ \\eta_t$ } ( m-1 - 2 )       ( m-2 - 1 ) edge node [ below ] { $ \\eta_s$ } ( m-2 - 2 )       ( m-1 - 2 ) edge node [ right ] { $ f$ } ( m-2 - 2 ) ;     \\end{tikzpicture}\\ ] ] which is easy to verify .",
    "there are variations on the previous example .",
    "for example , @xmath133 induces daggers on @xmath134 and @xmath135 .",
    "a dagger functor",
    "@xmath136 corresponds to a choice of a normal map , which again restricts to a normal isomorphism on its image .",
    "this defines a dagger adjoint to the inclusion @xmath137\\to [ \\mathbb{z}\\times\\mathbb{z},{\\ensuremath{\\mathbf{fhilb}}}]$ ] .",
    "recall that @xmath138 is a _ frobenius functor _ when it has a left adjoint @xmath78 that is simultaneously right adjoint .",
    "this is also called an _ ambidextrous adjunction _  @xcite",
    ".    if @xmath41 is a frobenius functor with adjoint @xmath78 , then @xmath45 and @xmath139 as in proposition  [ prop : cofree ] are dagger adjoint .    if @xmath138 there is a natural bijection @xmath140 because @xmath141 .",
    "we now come to our central notion : the _ frobenius law _ for monads .",
    "it is the dagger version of a similar notion in  @xcite .",
    "the monads of  @xcite correspond to ambijuctions , whereas our monads correspond to dagger adjunctions .    a _ dagger frobenius monad _ on a dagger category @xmath38 is a dagger frobenius monoid in @xmath142 $ ] ; explicitly , a monad @xmath143 on @xmath38 with @xmath144 and @xmath145    the following family is our main source of examples of dagger frobenius monads .",
    "we will see in example  [ ex : measurement ] below that it includes quantum measurement .",
    "[ example : tensor ] a monoid @xmath146      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt } } } } , { \\smash{\\raisebox{1pt}{\\hspace{-3pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=-1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.north ) ; \\end{pic } } \\hspace{-1pt}}}})$ ] in a monoidal dagger category @xmath38 is a dagger frobenius monoid if and only if the monad @xmath147 is a dagger frobenius monad .",
    "the monad laws become the monoid laws .",
    "@xmath148 ( d ) at ( 0,0 ) { } ;         \\draw ( d.north ) to ( 0,.5 ) node[right ] { $ b$ } ;         \\draw ( d.east ) to[out=0,in=90 ] + ( .3,-.3 ) to + ( 0,-.2 ) node[right ] { $ b$ } ;         \\draw ( d.west ) to[out=180,in=90 ] + ( -.3,-.3 ) to + ( 0,-.2 ) node[right ] { $ b$ } ;         \\draw ( -.8,-.5 ) node[left ] { $ a$ } to ( -.8,.5 ) node[left ] { $ a$ } ;       \\end{pic }        \\qquad       \\eta_a = \\begin{pic }         \\node[dot ] ( d ) at ( 0,0 ) { } ;         \\draw ( d.north ) to ( 0,.5 ) node[right ] { $ b$ } ;         \\draw ( -.4,-.5 ) node[left ] { $ a$ } to ( -.4,.5 ) node[left ] { $ a$ } ;       \\end{pic}\\ ] ] the frobenius law of the monoid implies the frobenius law of the monad : @xmath149        \\draw ( 0,0 ) node[below ] { $ b$ } to ( 0,1 ) to[out=90,in=180 ] ( .5,1.5 ) to ( .5,2 ) node[above ] { $ b$ } ;        \\draw ( .5,1.5 ) to[out=0,in=90 ] ( 1,1 ) to[out=-90,in=180 ] ( 1.5,.5 ) to ( 1.5,0 ) node[below ] { $ b$ } ;        \\draw ( 1.5,.5 ) to[out=0,in=-90 ] ( 2,1 ) to ( 2,2 ) node[above ] { $ b$ } ;        \\node[dot ] at ( .5,1.5 ) { } ;        \\node[dot ] at ( 1.5,.5 ) { } ;        \\draw ( -.5,0 ) node[below ] { $ a$ } to ( -.5,2 ) node[above ] { $ a$ } ;      \\end{pic }      =      \\begin{pic}[yscale=.75,xscale=-.75 ]        \\draw ( 0,0 ) node[below ] { $ b$ } to ( 0,1 ) to[out=90,in=180 ] ( .5,1.5 ) to ( .5,2 ) node[above ] { $ b$ } ;        \\draw ( .5,1.5 ) to[out=0,in=90 ] ( 1,1 ) to[out=-90,in=180 ] ( 1.5,.5 ) to ( 1.5,0 ) node[below ] { $ b$ } ;        \\draw ( 1.5,.5 ) to[out=0,in=-90 ] ( 2,1 ) to ( 2,2 ) node[above ] { $ b$ } ;        \\node[dot ] at ( .5,1.5 ) { } ;        \\node[dot ] at ( 1.5,.5 ) { } ;        \\draw ( 2.5,0 ) node[below ] { $ a$ } to ( 2.5,2 ) node[above ] { $ a$ } ;      \\end{pic }      =      \\mu_t \\circ t\\mu^\\dag.\\ ] ] the converse follows by taking @xmath150 .    for another example :",
    "if @xmath151 is a dagger frobenius monad on a dagger category @xmath38 , and @xmath52 is any other dagger category , then @xmath152 is a dagger frobenius monad on @xmath153 $ ] .",
    "[ lem : extendedfrobeniuslaw ] if @xmath151 is a dagger frobenius monad on a dagger category , @xmath154 .",
    "the following graphical derivation holds for any dagger frobenius monoid .",
    "@xmath155        \\node ( 0a ) at ( -0.5,-1 ) { } ;        \\node ( 0b ) at ( 0.5,-1 ) { } ;        \\node[dot ] ( 1 ) at ( 0,1 ) { } ;        \\node[dot ] ( 2 ) at ( 0,2 ) { } ;        \\node ( 3a ) at ( -0.5,3 ) { } ;        \\node ( 3b ) at ( 0.5,3 ) { } ;        \\draw[out=90,in=180,looseness=.66 ] ( 0a ) to ( 1.west ) ;        \\draw[out=90,in=0,looseness=.66 ] ( 0b ) to ( 1.east ) ;        \\draw ( 1.north ) to ( 2.south ) ;        \\draw[out=180,in=270 ] ( 2.west ) to ( 3a ) ;        \\draw[out=0,in=270 ] ( 2.east ) to ( 3b ) ;      \\end{pic }      =      \\begin{pic}[yscale=.5625,xscale=.75 ]        \\node ( 0d ) at ( -1,-1 ) { } ;        \\node [ dot ] ( 0c ) at ( -1.5,1 ) { } ;        \\node [ dot ] ( 0a ) at ( -1,0 ) { } ;        \\node ( 0b ) at ( 0.5,-1 ) { } ;        \\node[dot ] ( 1 ) at ( 0,1 ) { } ;        \\node[dot ] ( 2 ) at ( 0,2 ) { } ;        \\node ( 3a ) at ( -0.5,3 ) { } ;        \\node ( 3b ) at ( 0.5,3 ) { } ;        \\draw ( 0a ) to ( 0d ) ;        \\draw[out=180,in=270 ] ( 0a ) to ( 0c ) ;        \\draw[out=0,in=180 ] ( 0a ) to ( 1.west ) ;        \\draw[out=90,in=0,looseness=0.66 ] ( 0b ) to ( 1.east ) ;        \\draw ( 1.north ) to ( 2.south ) ;        \\draw[out=180,in=270 ] ( 2.west ) to ( 3a ) ;        \\draw[out=0,in=270 ] ( 2.east ) to ( 3b ) ;      \\end{pic }      =      \\begin{pic}[yscale=.5625,xscale=.75 ]        \\node ( 0d ) at ( -2,-1 ) { } ;        \\node [ dot ] ( 0c ) at ( -1.5,2 ) { } ;        \\node [ dot ] ( 0a ) at ( -.5,0 ) { } ;        \\node ( 0b ) at ( -.5,-1 ) { } ;        \\node[dot ] ( 1 ) at ( -1.5,1 ) { } ;        \\node[dot ] ( 2 ) at ( 0,2 ) { } ;        \\node ( 3a ) at ( -0.5,3 ) { } ;        \\node ( 3b ) at ( 0.5,3 ) { } ;        \\draw[out=180,in=90,looseness=0.66 ] ( 1.west ) to ( 0d ) ;        \\draw ( 1.north ) to ( 0c.south ) ;        \\draw[out=180,in=0,looseness=1 ] ( 0a.west ) to ( 1.east ) ;        \\draw ( 0b ) to ( 0a.south ) ;        \\draw[out=0,in=270,out looseness=.7 ] ( 0a.east ) to ( 2.south ) ;        \\draw[out=180,in=270 ] ( 2.west ) to ( 3a ) ;        \\draw[out=0,in=270 ] ( 2.east ) to ( 3b ) ;      \\end{pic }      =      \\begin{pic}[yscale=.5625,xscale=.75 ]        \\node ( 0d ) at ( -2,-1 ) { } ;        \\node [ dot ] ( 0c ) at ( -1.5,2.5 ) { } ;        \\node [ dot ] ( 0a ) at ( -.75,.75 ) { } ;        \\node ( 0b ) at ( 0,-1 ) { } ;        \\node[dot ] ( 1 ) at ( -1.5,1.5 ) { } ;        \\node[dot ] ( 2 ) at ( 0,0 ) { } ;        \\node ( 3a ) at ( 0,3 ) { } ;        \\node ( 3b ) at ( 0.75,3 ) { } ;        \\draw[out=180,in=90,out looseness=.5 ] ( 1.west ) to ( 0d ) ;        \\draw ( 1.north ) to ( 0c.south ) ;        \\draw[out=180,in=0 ] ( 0a.west ) to ( 1.east ) ;        \\draw ( 0b ) to ( 2.south ) ;        \\draw[out=270,in=180 ] ( 0a.south ) to ( 2.west ) ;        \\draw[out=0,in=270,out looseness=.66 ] ( 2.east ) to ( 3b ) ;        \\draw[out=0,in=270,out looseness=.8 ] ( 0a.east ) to ( 3a ) ;      \\end{pic }      =      \\begin{pic}[yscale=.75,xscale=.75 ]        \\node [ dot ] ( a ) at ( -0.5 , 0.5 ) { } ;        \\node [ dot ] ( b ) at ( 0,0 ) { } ;        \\node [ dot ] ( c ) at ( 1,1 ) { } ;        \\node [ dot ] ( d ) at ( 2,0 ) { } ;        \\node ( a ) at ( 0,-1 ) { } ;        \\node ( b ) at ( 2,-1 ) { } ;        \\node ( c ) at ( 1,2 ) { } ;        \\node ( d ) at ( 2.5,2 ) { } ;        \\draw ( c.north ) to ( c ) ;        \\draw ( b ) to ( d.south ) ;        \\draw ( a ) to ( b.south ) ;        \\draw[out=270,in=180 ] ( a.south ) to ( b.west ) ;        \\draw[out=0,in=180 ] ( b.east ) to ( c.west ) ;        \\draw[out=0,in=180 ] ( c.east ) to ( d.west ) ;        \\draw[out=0,in=270,out looseness=.66 ] ( d.east ) to ( d ) ;      \\end{pic }      =      \\begin{pic}[yscale=.75,xscale=.75 ]        \\node ( 0 ) at ( 0,0 ) { } ;        \\node ( 0a ) at ( 0,1 ) { } ;        \\node[dot ] ( 1 ) at ( 0.5,2 ) { } ;        \\node[dot ] ( 2 ) at ( 1.5,1 ) { } ;        \\node ( 3 ) at ( 1.5,0 ) { } ;        \\node ( 4 ) at ( 2,3 ) { } ;        \\node ( 4a ) at ( 2,2 ) { } ;        \\node ( 5 ) at ( 0.5,3 ) { } ;        \\draw ( 0 ) to ( 0a.center ) ;        \\draw[out=90,in=180 ] ( 0a.center ) to ( 1.west ) ;        \\draw[out=0,in=180 ] ( 1.east ) to ( 2.west ) ;        \\draw[out=0,in=270,looseness=.66 ] ( 2.east ) to ( 4a.center ) ;        \\draw ( 4a.center ) to ( 4 ) ;        \\draw ( 2.south ) to ( 3 ) ;        \\draw ( 1.north ) to ( 5 ) ;      \\end{pic }    \\end{aligned}\\ ] ] these equalities use the unit law , the frobenius law , and associativity .    the following lemma shows that dagger frobenius monads have the same relationship to dagger adjunctions as ordinary monads have to ordinary adjunctions .",
    "[ lem : daggeradjunction ] if @xmath85 is a dagger adjunction , then @xmath128 is a dagger frobenius monad .",
    "it is clear that @xmath156 is a dagger functor .",
    "the frobenius law follows from applying  ( * ? ? ?",
    "* corollary 2.22 ) to @xmath34",
    ". we will be able to give a self - contained proof after theorem  [ thm : comparison ] below .",
    "for example , in @xmath157 and @xmath12 , the dagger biproduct monad induced by the dagger adjunction of example  [ ex : dagbiprods ] is of the form @xmath158 as in example  [ example : tensor ] .",
    "however , not all dagger frobenius monads are of this form : the frobenius monad induced by the dagger adjunction of example  [ ex : imdagadj ] in general decreases the dimension of the underlying space , and hence can not be of the form @xmath159 for a fixed @xmath2 .",
    "next we consider algebras for dagger frobenius monads .",
    "we start by showing that kleisli categories of dagger frobenius monads inherit a dagger .",
    "[ lem : kleislidagger ] if @xmath151 is a dagger frobenius monad on a dagger category @xmath38 , then @xmath160 carries a dagger that commutes with the canonical functors @xmath161 and @xmath162 .",
    "a straightforward calculation establishes that @xmath163 current bounding box.south ) } ]      \\node ( a ) at ( 0,0 ) [ inner xsep=0pt , inner ysep=1pt , minimum width=0.15 cm ] { \\ensuremath{\\scriptstyle f } } ;      \\draw [ - > , line width=0.4pt , line cap = round ]          ( [ xshift=-2.5pt ] a.south west )          to ( [ xshift=3pt ] a.south east ) ; \\end{tikzpicture } } } } t(b)\\big )      \\;\\mapsto\\ ;      \\big(b { \\mathbin{\\smash { \\begin{tikzpicture}[baseline={([yshift=-1pt ] current bounding box.south ) } ]      \\node ( a ) at ( 0,0 ) [ inner xsep=0pt , inner ysep=1pt , minimum width=0.15 cm ] { \\ensuremath{\\scriptstyle \\eta } } ;      \\draw [ - > , line width=0.4pt , line cap = round ]          ( [ xshift=-2.5pt ] a.south west )          to ( [ xshift=3pt ] a.south east ) ; \\end{tikzpicture } } } } t(b ) { \\mathbin{\\smash { \\begin{tikzpicture}[baseline={([yshift=-1pt ] current bounding box.south ) } ]      \\node ( a ) at ( 0,0 ) [ inner xsep=0pt , inner ysep=1pt , minimum width=0.15 cm ] { \\ensuremath{\\scriptstyle \\mu^\\dag } } ;      \\draw [ - > , line width=0.4pt , line cap = round ]          ( [ xshift=-2.5pt ] a.south west )          to ( [ xshift=3pt ] a.south east ) ; \\end{tikzpicture } } } } t^2(b ) { \\mathbin{\\smash { \\begin{tikzpicture}[baseline={([yshift=-1pt ] current bounding box.south ) } ]      \\node ( a ) at ( 0,0 ) [ inner xsep=0pt , inner ysep=1pt , minimum width=0.15 cm ] { \\ensuremath{\\scriptstyle t(f^\\dag ) } } ;      \\draw [ - > , line width=0.4pt , line cap = round ]          ( [ xshift=-2.5pt ] a.south west )          to ( [ xshift=3pt ] a.south east ) ; \\end{tikzpicture } } } } t(a)\\big)\\ ] ] is a dagger on @xmath160 commuting with the functors @xmath164 and @xmath165 .",
    "if we want algebras to form a dagger category , it turns out that the category of all eilenberg - moore algebras is too large .",
    "the crucial law is the following _ frobenius law _ for algebras .",
    "let @xmath151 be a monad on a dagger category @xmath38 .",
    "a _ frobenius - eilenberg - moore algebra _ , or _",
    "fem - algebra _ for short , is an eilenberg - moore algebra @xmath166 that makes the following diagram commute .",
    "@xmath167       {        t(a ) & t^2(a ) & \\\\",
    "t^2(a ) & t(a ) \\\\ } ;       \\path[- > ]       ( m-1 - 1 ) edge node [ left ] { $ \\mu^\\dag$ } ( m-2 - 1 )               edge node [ above ] { $ t(a)^\\dag$ } ( m-1 - 2 )       ( m-2 - 1 ) edge node [ below ] { $ t(a)$ } ( m-2 - 2 )       ( m-1 - 2 ) edge node [ right ] { $ \\mu$ } ( m-2 - 2 ) ;     \\end{tikzpicture}\\end{aligned}\\ ] ] denote the category of fem - algebras @xmath168 and algebra homomorphisms by @xmath169 .    when the dagger frobenius monad is of the form @xmath170 as in example  [ example : tensor ] , the frobenius law   for an algebra @xmath166 becomes the following equation , which resembles the frobenius law   for monoids and monads .",
    "@xmath171     \\node[morphism , minimum width=25 mm ] ( a )   at ( 0,0.75 ) { $ a$ } ;     \\node[dot ] ( b ) at ( .4,0 ) { } ;     \\draw ( [ xshift=-.5mm]a.south west ) to + ( 0,-1 ) ;     \\draw ( a.north ) to + ( 0,.4 ) ;     \\draw ( b ) to[out=0,in=-90 ] + ( .3,.5 ) to + ( 0,.85 ) ;     \\draw ( [ xshift=.5mm]a.south east ) to[out=-90,in=180 ]   ( b ) ;     \\draw ( b ) to + ( 0,-.45 ) ;   \\end{pic }   \\quad = \\quad   \\begin{pic}[xscale=1.5 ]     \\node[morphism , hflip , minimum width=25 mm ] ( a )   at ( 0,0 ) { $ a$ } ;     \\node[dot ] ( b ) at ( .4,0.75 ) { } ;     \\draw ( [ xshift=-.5mm]a.north west ) to + ( 0,1 ) ;     \\draw ( a.south ) to + ( 0,-.4 ) ;     \\draw ( b ) to[out=0,in=90 ] + ( .3,-.5 ) to + ( 0,-.85 ) ;     \\draw ( [ xshift=.5mm]a.north east ) to[out=90,in=180 ]   ( b ) ;     \\draw ( b ) to + ( 0,.45 ) ;   \\end{pic}\\ ] ]    [ ex : kleislifem ] any free algebra @xmath172 of a dagger frobenius monad @xmath151 on a dagger category @xmath38 is a fem - algebra .",
    "hence there is an embedding @xmath173 .",
    "the frobenius law for the free algebra is the frobenius law of the monad .",
    "there are many em - algebras that are not fem - algebras ; a family of examples can be derived from  ( * ? ? ?",
    "* theorem  6.4 ) .",
    "here is a concrete example .",
    "[ ex : emnonfem ] the complex @xmath174-by-@xmath174-matrices form a hilbert space @xmath23 with inner product @xmath175 .",
    "matrix multiplication @xmath176 makes @xmath23 into a dagger frobenius monoid in @xmath115 , and hence @xmath177 into a dagger frobenius monad on @xmath115 .",
    "define a monoid homomorphism @xmath178 by conjugation @xmath179 with a unitary matrix @xmath180 .",
    "then @xmath181 is an em - algebra that is a fem - algebra if and only if @xmath182 .    because @xmath183 , the frobenius law   for @xmath151 unfolds to the following .",
    "@xmath184 ( .5,1.5 ) to ( .5,2 ) ;       \\draw ( .5,1.5 ) to[out=0,in=90 ] ( 1,1 ) to[out=-90,in=180 ] ( 1.5,.5 ) to ( 1.5,0 ) ;       \\draw ( 1.5,.5 ) to[out=0,in=-90 ] ( 2,1 ) to ( 2,2 ) ;       \\node[morphism ] at ( 1,1 ) { $ u$ } ;       \\node[dot ] at ( .5,1.5 ) { } ;       \\node[dot ] at ( 1.5,.5 ) { } ;      \\end{pic }      \\quad = \\quad      \\begin{pic}[xscale=-1 ]       \\draw ( 0,0 ) to ( 0,1 ) to[out=90,in=180 ] ( .5,1.5 ) to ( .5,2 ) ;       \\draw ( .5,1.5 ) to[out=0,in=90 ] ( 1,1 ) to[out=-90,in=180 ] ( 1.5,.5 ) to ( 1.5,0 ) ;       \\draw ( 1.5,.5 ) to[out=0,in=-90 ] ( 2,1 ) to ( 2,2 ) ;       \\node[morphism , hflip ] at ( 1,1 ) { $ u$ } ;       \\node[dot ] at ( .5,1.5 ) { } ;       \\node[dot ] at ( 1.5,.5 ) { } ;      \\end{pic}\\ ] ] this comes down to @xmath185 , that is , @xmath182 .",
    "before we calculate @xmath186 for a dagger frobenius monoid @xmath2 induced by an arbitrary groupoid , we work out an important special case .    [ ex : measurement ] let @xmath2 be a dagger frobenius monoid in @xmath115 induced by a finite discrete groupoid @xmath77 as in example  [ ex : groupoidfrob ] . a fem - algebra structure on a hilbert space @xmath23 for @xmath1 consists of _ quantum measurements _ on @xmath23 : orthogonal projections on @xmath23 that sum to the identity .",
    "for more information about quantum measurements , see  ( * ? ? ?",
    "* section  3.2 ) .",
    "a fem - algebra structure on @xmath23 consists of a map @xmath187 subject to the fem - laws .",
    "since @xmath2 has a basis indexed by objects of @xmath188 , it suffices to understand the maps @xmath189 defined by @xmath190 .",
    "the associative law implies that each @xmath191 satisfies @xmath192 , and from the frobenius law we get that each @xmath191 is self - adjoint , so that each @xmath191 is an orthonormal projection .",
    "the unit law says that @xmath193 .",
    "there is also another , graphical , way of seeing this .",
    "quantum measurements can also be characterized as ` @xmath2-self - adjoint ' coalgebras for the comonad @xmath159 , where being @xmath2-self - adjoint means that the following equation holds  @xcite .",
    "@xmath194 ( a )   at ( 0,0.75 ) { } ;      \\node[dot ] ( b ) at ( .5,0 ) { } ;      \\node[dot ] ( c ) at ( .5,-0.35 ) { } ;     \\draw ( [ xshift=-1mm]a.south west ) to + ( 0,-1 ) ;     \\draw ( a.north ) to + ( 0,.4 ) ;     \\draw ( b ) to[out=0,in=-90 ] + ( .3,.5 ) to + ( 0,.85 ) ;     \\draw ( [ xshift=1mm]a.south east ) to[out=-90,in=180 ]   ( b ) ;     \\draw ( b ) to ( c ) ;    \\end{pic }    \\quad = \\quad    \\begin{pic }      \\node[morphism , hflip ] ( f ) at ( -.4,0 ) { } ;      \\draw ( [ xshift=-1mm]f.north west ) to + ( 0,.65 ) ;      \\draw ( f.south ) to + ( 0,-.65 ) ;      \\draw ( [ xshift=1mm]f.north east ) to + ( 0,.65 ) ;    \\end{pic}\\ ] ] such coalgebras correspond precisely to @xmath195-algebras , as we will now show . because of the dagger , coalgebras of the comonad @xmath159 are just algebras of the monad @xmath159 .",
    "thus it suffices to show that an algebra is fem if and only if it satisfies  .",
    "the implication from left to right is easy .",
    "@xmath196          \\node[morphism ] ( a )   at ( 0,0.75 ) { } ;          \\node[dot ] ( b ) at ( .5,0 ) { } ;          \\node[dot ] ( c ) at ( .5,-0.35 ) { } ;          \\draw ( [ xshift=-1mm]a.south west ) to + ( 0,-1 ) ;          \\draw ( a.north ) to + ( 0,.4 ) ;          \\draw ( b ) to[out=0,in=-90 ] + ( .3,.5 ) to + ( 0,.85 ) ;          \\draw ( [ xshift=1mm]a.south east ) to[out=-90,in=180 ]   ( b ) ;          \\draw ( b ) to ( c ) ;      \\end{pic }      \\quad = \\quad      \\begin{pic}[yscale=.7 ]          \\node[morphism , hflip ] ( a )   at ( 0,0 ) { } ;          \\node[dot ] ( b ) at ( .5,0.75 ) { } ;          \\node[dot ] ( c ) at ( .9,-0.5 ) { } ;          \\draw ( [ xshift=-1mm]a.north west ) to + ( 0,1 ) ;          \\draw ( a.south ) to + ( 0,-.4 ) ;          \\draw ( b ) to[out=0,in=90 ] + ( .4,-.4 ) to ( c ) ;          \\draw ( [ xshift=1mm]a.north east ) to[out=90,in=180 ]   ( b ) ;          \\draw ( b ) to + ( 0,.45 ) ;      \\end{pic }      \\quad = \\quad      \\begin{pic}[yscale=.7 ]          \\node[morphism , hflip ] ( f ) at ( -.4,0 ) { } ;          \\draw ( [ xshift=-1mm]f.north west ) to + ( 0,.65 ) ;          \\draw ( f.south ) to + ( 0,-.65 ) ;          \\draw ( [ xshift=1mm]f.north east ) to + ( 0,.65 ) ;      \\end{pic}\\ ] ] the other implication can be proven as follows .",
    "@xmath196          \\node[morphism , hflip ] ( a )   at ( 0,0 ) { } ;          \\node[dot ] ( b ) at ( .5,0.75 ) { } ;          \\draw ( [ xshift=-1mm]a.north west ) to + ( 0,1.2 ) ;          \\draw ( a.south ) to + ( 0,-.4 ) ;          \\draw ( b ) to[out=0,in=90 ] + ( .35,-.5 ) to + ( 0,-.85 ) ;          \\draw ( [ xshift=1mm]a.north east ) to[out=90,in=180 ]   ( b ) ;          \\draw ( b ) to + ( 0,.64 ) ;      \\end{pic }      \\quad \\overset{(\\ref{eq : self - adjoint})}{= }   \\quad      \\begin{pic}[yscale=.7 ]          \\node[morphism ] ( a )   at ( 0,0.75 ) { } ;          \\node[dot ] ( b ) at ( .5,0 ) { } ;          \\node[dot ] ( c ) at ( .5,-0.35 ) { } ;          \\node[dot ] ( d ) at ( 1.1,0.75 ) { } ;          \\draw ( [ xshift=-1mm]a.south west ) to + ( 0,-1 ) ;          \\draw ( a.north ) to + ( 0,.4 ) ;          \\draw ( b ) to[out=0,in=180 ] ( d ) ;          \\draw ( [ xshift=1mm]a.south east ) to[out=-90,in=180 ]",
    "( b ) ;          \\draw ( d ) to[out=0 , in=90 ] + ( 0.3,-.5 ) to + ( 0,-.75 ) ;          \\draw ( d ) to + ( 0,0.6 ) ;          \\draw ( b ) to ( c ) ;      \\end{pic }      \\quad = \\quad      \\begin{pic}[yscale=.7 ]          \\node[morphism ] ( a )   at ( 0,0.65 ) { } ;          \\node[dot ] ( b ) at ( .3,0 ) { } ;          \\node[dot ] ( c ) at ( .03,-0.6 ) { } ;          \\node[dot ] ( d ) at ( .85,-0.6 ) { } ;          \\draw ( [ xshift=-1mm]a.south west ) to + ( 0,-1.5 ) ;          \\draw ( a.north ) to + ( 0,.4 ) ;          \\draw ( b ) to[out=0,in=180 ] ( d ) ;          \\draw ( [ xshift=2.5mm]a.south east ) to ( b ) ;          \\draw ( d ) to[out=0 , in=90 ] + ( 0.3,.5 ) to + ( 0,1.3 ) ;          \\draw ( d ) to + ( 0,-0.5 ) ;          \\draw ( b ) to[out=180 , in=90 ] ( c ) ;      \\end{pic }      \\quad = \\quad      \\begin{pic}[yscale=.7 ]          \\node[morphism ] ( a )   at ( 0,0.75 ) { } ;          \\node[dot ] ( b ) at ( .5,0 ) { } ;          \\draw ( [ xshift=-1mm]a.south west ) to + ( 0,-1 ) ;          \\draw ( a.north ) to + ( 0,.4 ) ;          \\draw ( b ) to[out=0,in=-90 ] + ( .3,.5 ) to + ( 0,.85 ) ;          \\draw ( [ xshift=1mm]a.south east ) to[out=-90,in=180 ]   ( b ) ;          \\draw ( b ) to + ( 0,-.45 ) ;      \\end{pic}\\ ] ] this finishes the alternative proof .",
    "[ ex : femtensor ] let a groupoid @xmath77 induce a dagger frobenius monoid @xmath2 in @xmath197 or @xmath198 as in example  [ ex : groupoidfrob ] .",
    "there is an equivalence @xmath199 $ ] .",
    "separate the cases @xmath18 and @xmath115 .    * in @xmath18 , a fem - algebra is a set @xmath23 with a _ relation _",
    "@xmath200 for each @xmath201 satisfying several equations . for each object @xmath78 of @xmath188 , define @xmath202 .",
    "the unit law implies that each @xmath15 is in at least one @xmath203 , and the other em - law implies that no @xmath15 can be in more than one @xmath203 .",
    "now if @xmath204 in @xmath188 , then @xmath57 defines a _ function _ @xmath205 and maps everything outside of @xmath203 to the empty set .",
    "thus the fem - algebra @xmath23 defines an _ action _ of @xmath188 in @xmath157 : a functor @xmath206 making the sets @xmath207 pairwise disjoint for distinct objects of @xmath188 .",
    "+ conversely , each such functor @xmath41 defines a fem - algebra @xmath208 by setting @xmath209 .",
    "but the category of such functors is equivalent to @xmath210 $ ] . * in @xmath115 ,",
    "a fem - algebra is a hilbert space @xmath23 with a morphism @xmath200 for each @xmath201 . for each object @xmath78 of @xmath188 , define @xmath211 . as above , @xmath23 is a direct sum of the @xmath203 and @xmath204 in @xmath188 defines a morphism @xmath205 and annihilates @xmath212 .",
    "this defines a representation of @xmath188 in @xmath17 .",
    "the frobenius law implies that this representation is unitary .    in both of these examples",
    ", the same reasoning goes through over all of @xmath12 .",
    "the fact that all of the categories of fem - algebras from the previous example had daggers is no accident .",
    "[ lem : femdag ] let @xmath151 be a dagger frobenius monad on a dagger category @xmath38 .",
    "the dagger on @xmath38 induces one on @xmath169 .",
    "let @xmath213 be a morphism of fem - algebras ; we are to show that @xmath6 is a morphism @xmath214 .",
    "it suffices to show that @xmath215 implies @xmath216 .",
    "consider the following diagram : @xmath217      \\matrix ( m ) [ matrix of math nodes , row sep=3em , column sep=3em , minimum width=1em ]      {        & t(b ) & & t(a )   \\\\",
    "t^2(b ) & t^2(b ) & t^2(a ) & t^2(a ) & t(a )   \\\\        & t(b ) & & t(a ) &        \\\\              & t(b ) & & b & a     \\\\ } ;      \\path[- > ]      ( m-1 - 2 ) edge node [ above ] { $ tf^\\dag$ } ( m-1 - 4 )                    edge node [ above ] { $ \\mu^\\dag$ } ( m-2 - 1 )                    edge node [ left ] { $ tb^\\dag$}(m-2 - 2 )      ( m-1 - 4 )   edge node [ above ] { $ { \\ensuremath{\\mathrm{id}_{}}}$ } ( m-2 - 5 )                    edge node [ left ] { $ \\mu^\\dag$}(m-2 - 4 )                    edge node [ above ] { $ ta^\\dag$ } ( m-2 - 3 )       ( m-2 - 1 ) edge node [ below ] { $ tb$ } ( m-3 - 2 )                    edge node [ below ] { $ \\eta^\\dag$ } ( m-4 - 2 )      ( m-2 - 2 ) edge node [ left ] { $ \\mu$ } ( m-3 - 2 )                    edge node [ above ] { $ t^2f^\\dag$ } ( m-2 - 3 )      ( m-2 - 3 ) edge node [ right ] { $ \\mu$ } ( m-3 - 4 )       ( m-2 - 4 ) edge node [ right ] { $ ta$ } ( m-3 - 4 )                    edge node [ below ] { $ \\eta^\\dag$ } ( m-2 - 5 )      ( m-2 - 5 ) edge node [ right ] { $ a$ } ( m-4 - 5 )      ( m-3 - 2 ) edge node [ above ] { $ tf^\\dag$ } ( m-3 - 4 )      ( m-3 - 4 ) edge node [ above ] { $ \\eta^\\dag$ } ( m-4 - 5 )      ( m-4 - 2 ) edge node [ below ] { $ b$ } ( m-4 - 4 )       ( m-4 - 4 ) edge node [ below ] { $ f^\\dag$ } ( m-4 - 5 ) ;      \\node[gray ] at ( -4.25,1 ) { ( i ) } ;      \\node[gray ] at ( 0,2 ) { ( ii ) } ;      \\node[gray ] at ( 0,0 ) { ( iii ) } ;      \\node[gray ] at ( 1.9,1 ) { ( iv ) } ;      \\node[gray ] at ( 4.1,1.6 ) { ( v ) } ;      \\node[gray ] at ( 4.7,-0.5 ) { ( vi ) } ;      \\node[gray ] at ( 0,-2 ) { ( vii ) } ;    \\end{tikzpicture}\\ ] ] region ( i ) is the frobenius law of @xmath218 ; commutativity of ( ii ) follows from the assumption that @xmath7 is a morphism @xmath219 by applying @xmath151 and the dagger ; ( iii ) is naturality of @xmath220 ; ( iv ) is the frobenius law of @xmath168 ; ( v ) commutes since @xmath151 is a comonad ; ( vi ) and ( vii ) commute by naturality of @xmath221 .",
    "in fact , the equivalence of example  [ ex : femtensor ] is a dagger equivalence .",
    "[ lem : femlaw ] let @xmath151 be a dagger frobenius monad .",
    "an em - algebra @xmath168 is fem if and only if @xmath222 is a homomorphism @xmath223 .",
    "if @xmath168 is a fem - algebra , its associativity means that @xmath224 is a homomorphism @xmath225 . here",
    "@xmath226 is a fem - algebra too because @xmath151 is a dagger frobenius monad .",
    "thus @xmath222 is a homomorphism @xmath227 by lemma  [ lem : femdag ] .    for the converse ,",
    "assume @xmath222 is a homomorphism @xmath223 , so the diagram @xmath131       {        t(a ) & t^2(a ) \\\\",
    "a & t(a ) \\\\ } ;       \\path[- > ]       ( m-1 - 1 ) edge node [ left ] { $ a$ } ( m-2 - 1 )               edge node [ above ] { $ ta^\\dag$ } ( m-1 - 2 )       ( m-2 - 1 ) edge node [ below ] { $ a^\\dag$ } ( m-2 - 2 )       ( m-1 - 2 ) edge node [ right ] { $ \\mu $ } ( m-2 - 2 ) ;    \\end{tikzpicture}\\ ] ] commutes . hence @xmath228 is self - adjoint as @xmath229 is , giving the frobenius law  .    interpreting the associative law for algebras as saying that @xmath230 is a homomorphism @xmath231 ,",
    "lemmas  [ lem : femdag ] and  [ lem : femlaw ] show that this morphism is universal , in the sense that if its dagger is an algebra homomorphism , then so is the dagger of any other algebra homomorphism to @xmath23 ( whose domain satisfies the frobenius law ) .",
    "[ thm : comparison ] let @xmath41 and @xmath78 be dagger adjoints , and write @xmath232 for the induced dagger frobenius monad .",
    "there are unique dagger functors @xmath233 and @xmath234 making the following diagram commute .",
    "@xmath235      \\node ( tl ) at ( -1,1 ) { $ \\operatorname{kl}(t)$ } ;      \\node ( t ) at ( 0,1 ) { $ { \\ensuremath{\\mathbf{d}}}$ } ;      \\node ( tr ) at ( 1,1 ) { $ \\operatorname{fem}(t)$ } ;      \\node ( b ) at ( 0,0 ) { $ { \\ensuremath{\\mathbf{c}}}$ } ;      \\draw[- > , dashed ] ( tl ) to node[above ] { $ k$ } ( t ) ;      \\draw[- > , dashed ] ( t ) to node[above ] { $ j$ } ( tr ) ;      \\draw[- > ] ( [ xshift=.2mm]t.south ) to node[right ] { $ g$ } ( [ xshift=.2mm]b.north ) ;      \\draw[- > ] ( [ xshift=-.2mm]b.north ) to node[left ] { $ f$ } ( [ xshift=-.2mm]t.south ) ;      \\draw[- > ] ( tl.-45 ) to ( b.135 ) ;      \\draw[- > ] ( [ xshift=-.5mm , yshift=-.5mm]b.135 ) to ( [ yshift=-.5mm , xshift=-.5mm]tl.-45 ) ;      \\draw[- > ] ( [ xshift=.5mm , yshift=-.5mm]tr.-135 ) to ( [ yshift=-.5mm , xshift=.5mm]b.45 ) ;      \\draw[- > ] ( b.45 ) to ( tr.-135 ) ;    \\end{tikzpicture}\\ ] ] moreover , @xmath234 is full , @xmath233 is full and faithful , and @xmath236 is the canonical inclusion .",
    "it suffices to show that the comparisons @xmath237 and @xmath238 ( see  ( * ? ? ?",
    "* vi.3 , iv.5 ) ) are dagger functors , and that @xmath234 factors through @xmath169 .",
    "let @xmath168 be in the image of @xmath234 . as @xmath236 equals the canonical inclusion , @xmath239 is also in the image of @xmath234 .",
    "because @xmath234 is full , the homomorphism @xmath240 is in the image of @xmath234 , say @xmath241 .",
    "but then @xmath242 , and so @xmath243 .",
    "this implies that @xmath222 is a homomorphism @xmath223 .",
    "lemma  [ lem : femlaw ] guarantees @xmath168 is in @xmath169 .",
    "clearly @xmath234 is a dagger functor .",
    "it remains to show that @xmath233 is a dagger functor .",
    "as @xmath233 is full and faithful , lemma  [ lem : daglem ] gives @xmath160 a unique dagger making it a dagger functor .",
    "this also makes @xmath236 a dagger functor , and since @xmath236 equals the canonical inclusion , the induced dagger on @xmath160 must equal the canonical one from lemma  [ lem : kleislidagger ] .",
    "the previous theorem leads to a direct proof of lemma  [ lem : daggeradjunction ] above , as follows .",
    "the definition of @xmath169 makes sense for arbitrary monads ( that might not satisfy the frobenius law ) , and the proof above still shows that the image of @xmath238 lands in @xmath169 . hence every free algebra is a fem - algebra .",
    "this implies the frobenius law   for @xmath151 .",
    "both ordinary monads  @xcite and frobenius monads  @xcite have been treated formally in 2-categories .",
    "this section establishes the counterpart for dagger 2-categories .",
    "its main contribution is to show that the category of fem - algebras satisfies a similar universal property for dagger frobenius monads as em - algebras do for ordinary monads .",
    "recall from definition  [ def : dagtwocat ] that a dagger 2-category is a category enriched in @xmath34 .",
    "an adjunction in a dagger 2-category is just an adjunction in the underlying 2-category .",
    "dagger 2-adjunction _ consists of two @xmath34-enriched functors that form a 2-adjunction in the usual sense .",
    "adjunctions in a dagger 2-category need not specify left and right , just like the dagger adjunctions they generalize , but dagger 2-adjunctions need to specify left and right .",
    "let @xmath63 be a dagger 2-category .",
    "a _ dagger frobenius monad _ consists of an object @xmath244 , a morphism @xmath245 , and 2-cells @xmath246 and @xmath247 that form a monad in the underlying 2-category of @xmath38 and satisfy the frobenius law @xmath248 a _ morphism of dagger frobenius monads _",
    "@xmath249 is a morphism @xmath250 with a 2-cell @xmath251 making the following diagrams commute .",
    "@xmath252       {         & tf \\\\",
    "f \\\\         & fs \\\\ } ;       \\tikzset{font=\\small } ;       \\path[- > ]       ( m-2 - 1 ) edge node [ below=1ex , left ] { $ f\\eta^s$ } ( m-3 - 2 )               edge node [ above=1ex , left ] { $ \\eta^tf$ } ( m-1 - 2 )       ( m-1 - 2 ) edge node [ left ] { $ \\sigma$ } ( m-3 - 2 ) ;      \\end{tikzpicture}\\end{aligned }      \\begin{aligned}\\begin{tikzpicture }       \\matrix ( m ) [ matrix of math nodes , row sep=1em , column sep=2em ]       {         & tfs & fss \\\\",
    "ttf & & \\\\         & tf & fs \\\\ } ;       \\tikzset{font=\\small } ;       \\path[- > ]       ( m-2 - 1 ) edge node [ below=1ex , left ] { $ \\mu^t f$ } ( m-3 - 2 )               edge node [ above=1ex , left ] { $ t\\sigma$ } ( m-1 - 2 )       ( m-1 - 2 ) edge node [ above ] { $ \\sigma s$ } ( m-1 - 3 )       ( m-1 - 3 ) edge node [ left ] { $ f\\mu^s$ } ( m-3 - 3 )       ( m-3 - 2 ) edge node [ below ] { $ \\sigma$ } ( m-3 - 3 ) ;      \\end{tikzpicture}\\end{aligned }      \\begin{aligned}\\begin{tikzpicture }       \\matrix ( m ) [ matrix of math nodes , row sep=1em , column sep=2em ]       {         & fss & fs \\\\",
    "tfs & & \\\\         & ttf & tf \\\\ } ;       \\tikzset{font=\\small } ;       \\path[- > ]       ( m-2 - 1 ) edge node [ below=1ex , left ] { $ t\\sigma^\\dag$ } ( m-3 - 2 )               edge node [ above=1ex , left ] { $ \\sigma s$ } ( m-1 - 2 )       ( m-1 - 2 ) edge node [ above ] { $ f\\mu^s$ } ( m-1 - 3 )       ( m-1 - 3 ) edge node [ left ] { $ \\sigma^\\dag$ } ( m-3 - 3 )       ( m-3 - 2 ) edge node [ below ] { $ \\mu^t f$ } ( m-3 - 3 ) ;      \\end{tikzpicture}\\end{aligned}\\ ] ] a _ transformation between morphisms of dagger frobenius monads _ @xmath253 is a 2-cell @xmath254 making the following diagrams commute .",
    "@xmath131       {        tf & tg & \\\\        fs & gs \\\\ } ;       \\path[- > ]       ( m-1 - 1 ) edge node [ left ] { $ \\sigma$ } ( m-2 - 1 )               edge node [ above ] { $ t\\phi$ } ( m-1 - 2 )       ( m-2 - 1 ) edge node [ below ] { $ \\phi s$ } ( m-2 - 2 )       ( m-1 - 2 ) edge node [ right ] { $ \\tau$ } ( m-2 - 2 ) ;      \\end{tikzpicture }    \\quad      \\begin{tikzpicture }       \\matrix ( m ) [ matrix of math nodes , row sep=2em , column sep=4em , minimum width=2em ]       {        tg & tf & \\\\        gs & fs \\\\ } ;       \\path[- > ]       ( m-1 - 1 ) edge node [ left ] { $ \\sigma$ } ( m-2 - 1 )               edge node [ above ] { $ t\\phi^\\dag$ } ( m-1 - 2 )       ( m-2 - 1 ) edge node [ below ] { $ \\phi ^\\dag s$ } ( m-2 - 2 )       ( m-1 - 2 ) edge node [ right ] { $ \\tau$ } ( m-2 - 2 ) ;      \\end{tikzpicture}\\ ] ] define the composition of morphisms to be @xmath255 .",
    "horizontal and vertical composition of 2-cells in @xmath38 define horizontal and vertical composition of transformations of morphisms of dagger frobenius monads , and the dagger on 2-cells of @xmath38 gives a dagger on these transformations .",
    "this forms a dagger 2-category @xmath256 .",
    "omitting the third diagram of   gives the usual definition of a monad morphism .",
    "we require this coherence with the dagger for the following reason : just as the first two diagrams of   ensure that @xmath257 is a 2-functor @xmath258 , the third one ensures that @xmath259 is a dagger 2-functor @xmath260 .",
    "there is an inclusion dagger 2-functor @xmath261 given by @xmath262 , @xmath263 , and @xmath264 .",
    "there is also a forgetful dagger 2-functor @xmath265 given by @xmath266 , @xmath267 , and @xmath268 . as with the formal theory of monads  @xcite , the forgetful functor is the left adjoint to the inclusion functor . to see this",
    ", it suffices to exhibit a natural isomorphism of dagger categories @xmath269\\cong [ ( c , t),(d,{\\ensuremath{\\mathrm{id}_{d}}})]$ ] , such as sending @xmath250 to @xmath270 and @xmath271 to @xmath271 .",
    "a dagger 2-category @xmath63 _ admits the construction of fem - algebras _ when the inclusion @xmath261 has a right adjoint @xmath272 .",
    "we will abbreviate @xmath273 to @xmath169 when no confusion can arise .",
    "if @xmath63 admits the construction of fem - algebras , then dagger frobenius monads factor as dagger adjunctions .",
    "we closely follow the proof of the similar theorem for ordinary monads in  @xcite , but need to verify commutativity of some additional diagrams . to verify that @xmath274 is a morphism of dagger frobenius monads @xmath275 , the first two diagrams are exactly as for ordinary monads , and the third diagram commutes by lemma  [ lem : extendedfrobeniuslaw ] . denoting the counit of the adjunction of the assumption by @xmath276 ,",
    "the universal property gives a unique morphism @xmath277 making the following diagram commute .",
    "@xmath278                   {                     ( c,{\\ensuremath{\\mathrm{id } _ { } } } ) &   & ( c , t ) \\\\                     &",
    "( \\operatorname{fem}(t),{\\ensuremath{\\mathrm{id } _ { } } } ) \\\\ } ;                   \\path[- > ]                   ( m-1 - 1 ) edge node [ below=1ex , left ] { $ ( j,{\\ensuremath{\\mathrm{id}_{}}})$ } ( m-2 - 2 )                           edge node [ above ] { $ ( t,\\mu)$ } ( m-1 - 3 )                   ( m-2 - 2 ) edge node [ below=1ex , right ] { $ ( e,\\varepsilon)$ } ( m-1 - 3 ) ;                  \\end{tikzpicture}\\ ] ] thus @xmath279 and @xmath280 .",
    "next we verify @xmath281 is a transformation of morphisms of dagger frobenius monads @xmath282 , by showing the following diagrams commute .",
    "@xmath283               {                teje & te \\\\                te & e \\\\",
    "} ;               \\path[- > ]               ( m-1 - 1 ) edge node [ left ] { $ \\mu e$ } ( m-2 - 1 )                       edge node [ above ] { $ t\\varepsilon$ } ( m-1 - 2 )               ( m-2 - 1 ) edge node [ below ] { $ \\varepsilon$ } ( m-2 - 2 )               ( m-1 - 2 ) edge node [ right ] { $ \\varepsilon$ } ( m-2 - 2 ) ;              \\end{tikzpicture }            \\qquad              \\begin{tikzpicture }               \\matrix ( m ) [ matrix of math nodes , row sep=2em , column sep=4em , minimum width=2em ]               {                te & teje \\\\",
    "e & te \\\\ } ;               \\path[- > ]               ( m-1 - 1 ) edge node [ left ] { $ \\varepsilon$ } ( m-2 - 1 )                       edge node [ above ] { $ t\\varepsilon^\\dag$ } ( m-1 - 2 )               ( m-2 - 1 ) edge node [ below ] { $ \\varepsilon^\\dag$ } ( m-2 - 2 )               ( m-1 - 2 ) edge node [ right ] { $ \\mu e$ } ( m-2 - 2 ) ;              \\end{tikzpicture}\\ ] ] these diagrams are instances of the second and third equations of  .",
    "the rest of the proof proceeds exactly as in  @xcite .",
    "as @xmath281 is a transformation , the adjunction gives a unique 2-cell @xmath284 in @xmath63 with @xmath285 .",
    "now @xmath286 and so @xmath287 by the universal property of the counit .",
    "furthermore @xmath288 so @xmath289 is an adjunction generating @xmath290 .",
    "the dagger 2-category @xmath27 admits the construction of fem - algebras .",
    "we first show @xmath291 extends to a well - defined dagger 2-functor @xmath292 . on a 1-cell @xmath293 , define a dagger functor @xmath294 as follows : map the algebra @xmath295 to @xmath296 and the homomorphism @xmath297 to @xmath298 .",
    "the laws for fem - algebras of @xmath299 now show that @xmath300 sends fem - algebras to fem - algebras . on a 2-cell @xmath301 ,",
    "define @xmath302 by @xmath303 ; each @xmath304 is a morphism of fem - algebras .",
    "there is a natural isomorphism of dagger categories @xmath305\\cong [ ( { \\ensuremath{\\mathbf{c}}},{\\ensuremath{\\mathrm{id}_{{\\ensuremath{\\mathbf{c}}}}}}),({\\ensuremath{\\mathbf{d}}},t)]$ ] as follows .",
    "a dagger functor @xmath306 consists of a dagger functor @xmath307 and a family of maps @xmath308 making each @xmath309 into a fem - algebra .",
    "then @xmath310 is a well - defined morphism of dagger frobenius monads .",
    "similarly , any @xmath310 defines a dagger functor @xmath306 . on the level of natural transformations",
    "both of these operations are obvious .    in  @xcite this last result",
    "is proved as follows : instead of starting with the definition of @xmath311 , the construction is recovered from the assumption that the right adjoint exists and considering functors from the categories @xmath312 and @xmath313 to the right adjoint , thus recovering the objects and arrows of @xmath311 .",
    "it is unclear how to write a similar proof in our case : while @xmath314 $ ] classifies arrows and commutative squares for an ordinary category , it is not obvious how to replace @xmath313 with a dagger category playing an analogous role .",
    "as we saw in example  [ example : tensor ] , ( frobenius ) monoids in a monoidal dagger category induce ( dagger frobenius ) monads on the category .",
    "this in fact sets up an adjunction between monoids and strong monads  @xcite .",
    "this section shows that the frobenius law promotes this adjunction to an equivalence .",
    "most of this section generalizes to the non - dagger setting .",
    "[ def : strength ] a dagger functor @xmath41 between monoidal dagger categories is _ strong _ if it is equipped with natural unitary morphisms @xmath315 satisfying @xmath316 and @xmath317 .",
    "a ( dagger frobenius ) monad on a monoidal dagger category is _ strong _ if it is a strong dagger functor with @xmath318 and @xmath319 .",
    "a morphism @xmath320 of dagger frobenius monads is _ strong _ if @xmath321 .    to prove the equivalence between dagger frobenius monoids and strong dagger frobenius monads , we need two lemmas .    [",
    "lem : froblaw ] if @xmath151 is a strong dagger frobenius monad on a monoidal dagger category , then @xmath322 is a dagger frobenius monoid .",
    "consider the diagram in  [ fig : froblaw ] .",
    "region ( i ) commutes because @xmath151 is a dagger frobenius monad , ( ii ) because @xmath323 is natural , ( iii ) because @xmath324 is natural , ( iv ) because @xmath325 is natural , ( v ) is a consequence of @xmath151 being a strong monad , ( vi ) commutes as @xmath326 is natural , ( vii ) and ( viii ) because @xmath327 is natural , ( ix ) commutes trivially and ( x ) because @xmath327 is natural .",
    "regions ( ii)-(x) commute for dual reasons . hence the outer diagram commutes .",
    "\\(m ) [ matrix of math nodes , row sep=2em , column sep=1.75em ] t(i)t(t(i)i ) & t(i)(t(i)t(i ) ) & & ( t(i)t(i))t(i ) & t(t(i)i)t(i ) ) + & t(t(i)(t(i)i ) ) & t((t(i)t(i))i ) & t(t(i)i)t(i ) & + t(i)t^2(i ) & t(t(i)t(i ) ) & t(t(t(i)i)i ) & t(t^2(i)i ) & t^2(i)t(i ) + & t^2(t(i)i ) & t^3(i ) & t(t(i)i ) & + t(i)t(i ) & t^2(i ) & & t^2(i ) & t(i)t(i ) + & t(t(i)i ) & t^3(i ) & t^2(t(i)i ) & + t^2(i)t(i ) & t(t^2(i)i ) & t(t(t(i)i)i ) & t(t(i)t(i ) ) & t(i)t^2(i ) + & t(t(i)i)t(i ) & t((t(i)t(i))i ) & t(t(i)(t(i)i ) ) & + t(t(i)i)t(i ) & ( t(i)t(i))t(i ) & & t(i)(t(i)t(i ) ) & t(i)t(t(i)i ) + ; ( m-1 - 1 ) edge node [ above ] @xmath328 ( m-1 - 2 ) ( m-1 - 2 ) edge node [ above ] @xmath329 ( m-1 - 4 ) ( m-1 - 4 ) edge node [ above ] @xmath330 ( m-1 - 5 ) ( m-1 - 5 ) edge node [ right ] @xmath331 ( m-3 - 5 ) ( m-1 - 1 ) edge node [ above ] @xmath327 ( m-2 - 2 ) ( m-2 - 2 ) edge node [ above ] @xmath332 ( m-2 - 3 ) ( m-2 - 3 ) edge node [ above ] @xmath325 ( m-1 - 4 ) ( m-2 - 4 ) edge node [ right ] @xmath333 ( m-1 - 4 ) ( m-2 - 4 ) edge node [ above ] @xmath334 ( m-3 - 5 ) ( m-3 - 1 ) edge node [ above ] @xmath327 ( m-3 - 2 ) ( m-3 - 1 ) edge node [ left ] @xmath335 ( m-1 - 1 ) ( m-3 - 2 ) edge node [ left ] @xmath336 ( m-2 - 2 ) ( m-3 - 2 ) edge node [ below ] @xmath337 ( m-2 - 3 ) ( m-3 - 3 ) edge node [ above ] @xmath338 ( m-3 - 4 ) ( m-3 - 3 ) edge node [ right ] @xmath339 ( m-2 - 3 ) ( m-3 - 3 ) edge node [ right ] @xmath325 ( m-2 - 4 ) ( m-3 - 4 ) edge node [ above ] @xmath325 ( m-3 - 5 ) ( m-3 - 4 ) edge node [ right ] @xmath340 ( m-4 - 4 ) ( m-3 - 5 ) edge node [ right ] @xmath341 ( m-5 - 5 ) ( m-4 - 2 ) edge node [ left ] @xmath342 ( m-3 - 2 ) ( m-4 - 2 ) edge node [ right ] @xmath337 ( m-3 - 3 ) ( m-4 - 2 ) edge node [ above ] @xmath343 ( m-4 - 3 ) ( m-4 - 3 ) edge node [ above ] @xmath344 ( m-5 - 4 ) ( m-4 - 4 ) edge node [ above ] @xmath325 ( m-5 - 5 ) ( m-5 - 1 ) edge node [ above ] @xmath327 ( m-6 - 2 ) ( m-5 - 1 ) edge node [ left ] @xmath345 ( m-3 - 1 ) ( m-5 - 1 ) edge node [ left ] @xmath346 ( m-7 - 1 ) ( m-5 - 2 ) edge node [ above ] @xmath347 ( m-4 - 3 ) ( m-5 - 2 ) edge node [ above ] @xmath348 ( m-6 - 3 ) ( m-5 - 4 ) edge node [ left ] @xmath349 ( m-4 - 4 ) ( m-6 - 2 ) edge node [ right ] @xmath350 ( m-5 - 2 ) ( m-6 - 2 ) edge node [ left ] @xmath351 ( m-7 - 2 ) ( m-6 - 3 ) edge node [ above ] @xmath352 ( m-5 - 4 ) ( m-6 - 3 ) edge node [ above ] @xmath353 ( m-6 - 4 ) ( m-7 - 1 ) edge node [ above ] @xmath327 ( m-7 - 2 ) ( m-7 - 1 ) edge node [ left ] @xmath354 ( m-9 - 1 ) ( m-7 - 1 ) edge node [ above ] @xmath355 ( m-8 - 2 ) ( m-7 - 2 ) edge node [ above ] @xmath356 ( m-7 - 3 ) ( m-7 - 3 ) edge node [ above ] @xmath350 ( m-6 - 4 ) ( m-7 - 4 ) edge node [ right ] @xmath357 ( m-6 - 4 ) ( m-7 - 4 ) edge node [ above ] @xmath325 ( m-7 - 5 ) ( m-7 - 5 ) edge node [ right ] @xmath358 ( m-5 - 5 ) ( m-8 - 2 ) edge node [ above ] @xmath327 ( m-7 - 3 ) ( m-8 - 3 ) edge node [ right ] @xmath359 ( m-7 - 3 ) ( m-8 - 3 ) edge node [ right ] @xmath360 ( m-7 - 4 ) ( m-8 - 3 ) edge node [ above ] @xmath361 ( m-8 - 4 ) ( m-8 - 4 ) edge node [ right ] @xmath362 ( m-7 - 4 ) ( m-8 - 4 ) edge node [ above ] @xmath363 ( m-9 - 5 ) ( m-9 - 1 ) edge node [ below ] @xmath333 ( m-9 - 2 ) ( m-9 - 2 ) edge node [ left ] @xmath330 ( m-8 - 2 ) ( m-9 - 2 ) edge node [ above ] @xmath327 ( m-8 - 3 ) ( m-9 - 2 ) edge node [ below ] @xmath364 ( m-9 - 4 ) ( m-9 - 4 ) edge node [ below ] @xmath365 ( m-9 - 5 ) ( m-9 - 5 ) edge node [ right ] @xmath366 ( m-7 - 5 ) ( m-6 - 2 ) edge [ bend left=30 ] ( m-4 - 2 ) ( m-6 - 4 ) edge [ bend right=30 ] ( m-4 - 4 ) ; at ( -6.5,0 ) @xmath323 ; at ( 6.25,0 ) @xmath220 ; at ( 0,0 ) ( i ) ; at ( -5,1 ) ( ii ) ; at ( 5,-1 ) ( ii) ; at ( 3,2 ) ( iii ) ; at ( -3,-2 ) ( iii) ; at ( 8,2.5 ) ( iv ) ; at ( -8,-2.5 ) ( iv) ; at ( -8,1.5 ) ( v) ; at ( 8,-1.5 ) ( v ) ; at ( 2.75,-3.5 ) ( vi ) ; at ( -2.75,3.5 ) ( vi) ; at ( -2.75,-5.25 ) ( vii ) ; at ( 2.75,5.25 ) ( vii) ; at ( -5,-4.5 ) ( viii ) ; at ( 5,4.5 ) ( viii) ; at ( -8,-6 ) ( ix ) ; at ( 8,6 ) ( ix) ; at ( -8,5 ) ( x ) ; at ( 8,-5 ) ( x) ; at ( -4.25,4.75 ) ( xi ) ; at ( 4.5,-4.75 ) ( xi) ; at ( -2.65,6.5 ) ( xii ) ; at ( 2.65,-6.5 ) ( xii) ;    [ lem : strictmorphism ] if @xmath151 is a strong dagger frobenius monad on a monoidal dagger category , then @xmath367 preserves @xmath221 and @xmath323 .    to show that @xmath221 is preserved , it suffices to see that @xmath368    \\matrix ( m ) [ matrix of math nodes , row sep=2em , column sep=4em , minimum width=2em ]    {       a\\otimes t(i ) & \\\\",
    "t(a\\otimes i ) & a\\otimes i \\\\",
    "t(a ) &   a\\\\ } ;    \\path[-stealth ]      ( m-1 - 1 ) edge node [ left ] { $ \\operatorname{st}_{a , i}$ } ( m-2 - 1 )              edge node [ right ] { $ \\ \\ { \\ensuremath{\\mathrm{id}_{}}}\\otimes \\eta^\\dag_i$ } ( m-2 - 2 )      ( m-2 - 1 ) edge node [ below ] { $ \\eta^\\dag_{a\\otimes i}$ } ( m-2 - 2 )      ( m-2 - 1 ) edge node [ left ] { $ t(\\rho_a)$ } ( m-3 - 1 )      ( m-2 - 2 ) edge node [ right ] { $ \\rho_a$ } ( m-3 - 2 )       ( m-3 - 1 ) edge node [ below ] { $ \\eta^\\dag_a$ } ( m-3 - 2 ) ;    \\end{tikzpicture}\\ ] ] commutes . but the rectangle commutes because @xmath221 is natural , and the triangle commutes because @xmath151 is a strong monad and strength is unitary .    to see that @xmath323 is preserved , consider the following diagram : @xmath369      \\matrix ( m ) [ matrix of math nodes , row sep=2em , column sep=2.5em ]      {       a\\otimes t(i ) & a\\otimes t^2(i ) & a\\otimes t(t(i)\\otimes i ) & a\\otimes ( t(i)\\otimes t(i ) ) \\\\        & a\\otimes t^2(i ) & a\\otimes t(t(i)\\otimes",
    "i ) & ( a\\otimes t(i))\\otimes t(i ) \\\\        &   & t(a\\otimes ( t(i)\\otimes i ) ) & t((a\\otimes t(i))\\otimes i ) \\\\        &   & & t(a\\otimes t(i ) ) \\\\       t(a\\otimes",
    "i ) &   & & t^2(a\\otimes i ) \\\\",
    "t(a ) &   & & t^2(a ) \\\\ } ;      \\path[- > ]      ( m-1 - 1 ) edge node [ left ] { $ \\operatorname{st}$ } ( m-5 - 1 )              edge node [ above ] { $ { \\ensuremath{\\mathrm{id}_{}}}\\otimes\\mu^\\dag$ } ( m-1 - 2 )      ( m-1 - 2 ) edge node [ above ] { $ { \\ensuremath{\\mathrm{id}_{}}}\\otimes t(\\rho^{-1})$ } ( m-1 - 3 )      ( m-1 - 3 ) edge node [ above ] { $ { \\ensuremath{\\mathrm{id}_{}}}\\otimes \\operatorname{st}^\\dag$ } ( m-1 - 4 )      ( m-2 - 3 ) edge node [ above ] { $ { \\ensuremath{\\mathrm{id}_{}}}\\otimes t(\\rho)$ } ( m-2 - 2 )      ( m-1 - 2 ) edge node [ right ] { $ { \\ensuremath{\\mathrm{id}_{}}}$ } ( m-2 - 2 )      ( m-1 - 4 ) edge node [ right ] { $ \\alpha$ } ( m-2 - 4 )      ( m-2 - 4 ) edge node [ right ] { $ \\operatorname{st}$ } ( m-3 - 4 )      ( m-3 - 4 ) edge node [ right ] { $ t(\\rho)$ } ( m-4 - 4 )      ( m-4 - 4 ) edge node [ right ] { $ t(\\operatorname{st})$ } ( m-5 - 4 )      ( m-5 - 4 ) edge node [ right ] { $ t^2(\\rho)$ } ( m-6 - 4 )      ( m-5 - 1 ) edge node [ left ] { $ t(\\rho)$ } ( m-6 - 1 )       ( m-6 - 1 ) edge node [ below ] { $ \\mu^\\dag$ } ( m-6 - 4 )      ( m-2 - 3 ) edge node [ right ] { $ \\operatorname{st}$ } ( m-3 - 3 )       ( m-1 - 4 ) edge node [ below ] { $ \\quad{\\ensuremath{\\mathrm{id}_{}}}\\otimes \\operatorname{st}$ } ( m-2 - 3 )       ( m-3 - 3 ) edge node [ above ] { $ t(\\alpha)$ } ( m-3 - 4 )      ( m-3 - 3 ) edge node [ below ] { $ t({\\ensuremath{\\mathrm{id}_{}}}\\otimes\\rho)\\quad\\quad$ } ( m-4 - 4 )      ( m-5 - 1 ) edge node [ below ] { $ \\mu^\\dag$ } ( m-5 - 4 )      ( m-2 - 2 ) edge [ bend right=30 ] ( m-4 - 4 ) ;      \\node at ( -.2,-0.7 ) { $ \\operatorname{st}$ } ;      \\node[gray ] at ( -4,1 ) { ( i ) } ;      \\node[gray ] at ( 0,4 ) { ( ii ) } ;      \\node[gray ] at ( 0,2 ) { ( iii ) } ;      \\node[gray ] at ( 4,2 ) { ( iv ) } ;      \\node[gray ] at ( 4,0.5 ) { ( v ) } ;       \\node[gray ] at ( 0,-4 ) { ( vi ) } ;    \\end{tikzpicture}\\ ] ] commutativity of region ( i ) is a consequence of strength being unitary , ( ii ) commutes by definition , ( iii ) commutes as strength is natural , ( iv ) because @xmath151 is a strong functor , ( v ) by coherence and finally ( vi ) by naturality of @xmath323 .",
    "[ thm : strong ] let @xmath38 be a monoidal dagger category .",
    "the operations @xmath370 and @xmath371 form an equivalence between dagger frobenius monoids in @xmath38 and strong dagger frobenius monads on @xmath38 .",
    "it is well - known that @xmath370 is left adjoint to @xmath371 , when considered as maps between ordinary monoids and ordinary strong monads , see  @xcite ; the unit of the adjunction is @xmath372 , and the counit is determined by @xmath373 .",
    "example  [ example : tensor ] already showed that @xmath374 preserves the frobenius law .",
    "lemma  [ lem : froblaw ] shows that @xmath371 preserves the frobenius law , too .",
    "it remains to prove that they form an equivalence .",
    "clearly the unit of the adjunction is a natural isomorphism . to see that the counit is also a natural isomorphism , combine lemmas  [ lem : strictmorphism ] and  [ lem : strictmorphismsareiso ] .",
    "it follows from the previous theorem that not every dagger frobenius monad is strong : as discussed in section  [ sec : monads ] , the monad induced by the dagger adjunction of example  [ ex : imdagadj ] is not of the form @xmath1 for fixed @xmath2 .",
    "[ rem : ratherstrong ] one might think it too strong to require strength to be unitary .",
    "but without it , theorem  [ thm : strong ] no longer holds .",
    "let us temporarily call a dagger frobenius monad _ rather strong _ when it is simultaneously a strong monad .",
    "the operations of theorem  [ thm : strong ] do not form an adjunction between frobenius monoids and rather strong frobenius monads , because the counit of the adjunction would not be a well - defined morphism . producing a counterexample where the counit does not preserve @xmath323 comes down to finding a rather strong frobenius monad with @xmath375 for some @xmath23 .",
    "this is the case when @xmath376 for a dagger frobenius monoid @xmath2 with @xmath72      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.north ) ; \\end{pic } } \\hspace{-1pt}}}}\\otimes { \\smash{\\raisebox{1pt}{\\hspace{-3pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=-1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.north ) ; \\end{pic } } \\hspace{-1pt}}}}\\neq ( { \\smash{\\raisebox{-2pt}{\\hspace{-5pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=-1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt}}}})^\\dag \\circ { \\smash{\\raisebox{1pt}{\\hspace{-3pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=-1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.north ) ; \\end{pic } } \\hspace{-1pt}}}}$ ] .",
    "such dagger frobenius monoids certainly exist : if @xmath78 is any nontrivial group , regarded as a dagger frobenius monoid in @xmath18 as in example  [ ex : groupoidfrob ] , then @xmath72      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.north ) ; \\end{pic } } \\hspace{-1pt}}}}\\otimes { \\smash{\\raisebox{1pt}{\\hspace{-3pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=-1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.north ) ; \\end{pic } } \\hspace{-1pt}}}}$ ] is the relation @xmath377 , but @xmath378",
    "\\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt}}}})^\\dag \\circ { \\smash{\\raisebox{1pt}{\\hspace{-3pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=-1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.north ) ; \\end{pic } } \\hspace{-1pt}}}}= \\{(*,(g , g^{-1 } ) ) \\mid g \\in g\\}$ ] .",
    "conceivably , there might be a notion of strength that is weaker than definition  [ def : strength ] but stronger than remark  [ rem : ratherstrong ] , that would still have reasonable properties .",
    "it seems that one would want at least lemma  [ lem : froblaw ] to go through , but the proof we ve given seems to use invertibility of the strength maps in an essential way . in any case , one wants the underlying monad and comonad to be both strong and costrong .",
    "the monad from example  [ ex : imdagadj ] satisfies remark  [ rem : ratherstrong ] under @xmath379 , but then fails to be costrong as a monad .",
    "a frobenius monoid in a monoidal dagger category is _ special _ when @xmath380      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt}}}}\\circ { \\smash{\\raisebox{-2pt}{\\hspace{-5pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt}}}}=\\begin{pic } \\draw ( 0,0 ) to ( 0,.45 ) ; \\end{pic}}$ ] .",
    "theorem  [ thm : strong ] restricts to an equivalence between special dagger frobenius monoids and special strong dagger frobenius monads .    for symmetric monoidal dagger categories ,",
    "there is also a notion of commutativity for strong monads  @xcite . given a strong dagger frobenius monad @xmath151",
    ", one can define a natural transformation @xmath381 by @xmath382 , and @xmath383 the strong dagger frobenius monad is _ commutative _ when these coincide .",
    "theorem  [ thm : strong ] restricts to an equivalence between commutative dagger frobenius monoids and commutative strong dagger frobenius monads .",
    "kleisli categories of commutative monads on symmetric monoidal categories are again symmetric monoidal  @xcite .",
    "this extends to dagger categories .",
    "if @xmath151 is a commutative strong dagger frobenius monad on a symmetric monoidal dagger category @xmath38 , then @xmath160 is a symmetric monoidal dagger category .    the monoidal structure on @xmath160 is given by @xmath384 on objects and by @xmath385 on morphisms .",
    "the coherence isomorphisms of @xmath160 are images of those in @xmath38 under the functor @xmath162 .",
    "this functor preserves daggers and hence unitaries , making all coherence isomorphisms of @xmath160 unitary .",
    "it remains to check that the dagger on @xmath160 satisfies @xmath386 .",
    "theorem  [ thm : strong ] makes @xmath151 isomorphic to @xmath387 , and this induces an isomorphism between the respective kleisli categories that preserves daggers and monoidal structure on the nose .",
    "thus it suffices to check that this equation holds on @xmath388 : @xmath389        \\node[morphism , hflip ] ( f ) at ( 0,0 ) { $ f$ } ;        \\node[morphism , hflip ] ( g ) at ( 2,0 ) { $ g$ } ;        \\node[dot ] ( d ) at ( 1.25,-.85 ) { } ;        \\node[dot ] ( e ) at ( 2.5,-1.5 ) { } ;        \\draw ( f.north ) to + ( 0,1.25 ) ;        \\draw ( g.north ) to + ( 0,1.25 ) ;        \\draw ( [ xshift=-1mm]f.south west ) to + ( 0,-2.5 ) ;        \\draw ( [ xshift=-1mm]g.south west ) to + ( 0,-2.5 ) ;        \\draw ( [ xshift=1mm]f.south east ) to[out=-90,in=180 ] ( d.west ) ;        \\draw ( [ xshift=1mm]g.south east ) to[out=-90,in=0 ] ( d.east ) ;        \\draw ( d.south ) to[out=-90,in=180 ] ( e.west ) ;        \\draw ( e.south ) to + ( 0,-.5 ) node[dot ] { } ;        \\draw ( e.east ) to[out=0,in=-90 ] + ( 1,1 ) to + ( 0,2.25 ) node[right ] { $ t(i)$ } ;      \\end{pic }      = \\quad      \\begin{pic}[scale=.5 ]        \\node[morphism , hflip ] ( f ) at ( 0,0 ) { $ f$ } ;        \\node[morphism , hflip ] ( g ) at ( 2.5,0 ) { $ g$ } ;        \\node[dot ] ( d ) at ( 2.75,1.2 ) { } ;        \\node[dot ] ( df ) at ( .75,-.85 ) { } ;        \\node[dot ] ( dg ) at ( 3.25,-.85 ) { } ;        \\draw ( f.north ) to + ( 0,2 ) ;        \\draw ( [ xshift=-1mm]g.north ) to[out=90,in=-90,looseness=.7 ] + ( -1.5,2 ) ;        \\draw ( [ xshift=-1mm]f.south west ) to + ( 0,-2 ) ;        \\draw ( [ xshift=-1mm]g.south west ) to + ( 0,-2 ) ;        \\draw ( [ xshift=1mm]f.south east ) to[out=-90,in=180 ] ( df.west ) ;        \\draw ( [ xshift=1mm]g.south east ) to[out=-90,in=180 ] ( dg.west ) ;        \\draw ( df.south ) to + ( 0,-.5 ) node[dot ] { } ;        \\draw ( dg.south ) to + ( 0,-.5 ) node[dot ] { } ;        \\draw ( df.east ) to[out=0,in=180,looseness=.7 ] ( d.west ) ;        \\draw ( dg.east ) to[out=0,in=0 ] ( d.east ) ;        \\draw ( d.north ) to + ( 0,1 ) node[right ] { $ t(i)$ } ;      \\end{pic }      \\quad = \\quad      f^\\dag \\otimes_s g^\\dag\\text{.}\\ ] ] but this is a straightforward graphical argument @xmath390        \\node[dot ] ( l ) at ( 0,0 ) { } ;        \\node[dot ] ( r ) at ( 1,-1 ) { } ;        \\draw ( r.south ) to + ( 0,-1 ) node[dot ] { } ;        \\draw ( l.south ) to[out=-90,in=180 ] ( r.west ) ;        \\draw ( r.east ) to[out=0,in=-90 ] + ( 1,2 ) ;        \\draw ( l.east ) to[out=0,in=-90 ] + ( .66,1 ) ;        \\draw ( l.west ) to[out=180,in=-90 ] + ( -.66,1 ) ;      \\end{pic }      \\quad = \\quad      \\begin{pic}[scale=.5 ]        \\node[dot ] ( l ) at ( 1,0 ) { } ;        \\node[dot ] ( r ) at ( 0,-1 ) { } ;        \\draw ( r.south ) to + ( 0,-1 ) node[dot ] { } ;        \\draw ( l.south ) to[out=-90,in=0 ] ( r.east ) ;        \\draw ( r.west ) to[out=180,in=-90 ] + ( -1,2 ) ;        \\draw ( l.west ) to[out=180,in=-90 ] + ( -.66,1 ) ;        \\draw ( l.east ) to[out=0,in=-90 ] + ( .66,1 ) ;      \\end{pic }      \\quad = \\quad          \\begin{pic}[scale=.4 ]        \\node[dot ] ( l ) at ( 1,0 ) { } ;        \\node[dot ] ( r ) at ( 0,-1 ) { } ;        \\draw ( r.south ) to + ( 0,-1 ) node[dot ] { } ;        \\draw ( l.south ) to[out=-90,in=0 ] ( r.east ) ;        \\draw ( r.west ) to[out=180,in=-90 ] + ( -1,2.5 ) ;        \\draw ( l.west ) to[out=180,in=-90 ] + ( -.5,.5 ) to[out=90,in=-90 ] + ( 1.5,1 ) ;        \\draw ( l.east ) to[out=0,in=-90 ] + ( .5,.5 ) to[out=90,in=-90 ] + ( -1.5,1 ) ;      \\end{pic }      \\quad = \\quad      \\begin{pic}[yscale=.4,xscale=.6 ]        \\node[dot ] ( l ) at ( 0,0 ) { } ;        \\node[dot ] ( m ) at ( 1,1 ) { } ;        \\node[dot ] ( r ) at ( 2,0 ) { } ;        \\draw ( l.south ) to + ( 0,-1 ) node[dot ] { } ;        \\draw ( r.south ) to + ( 0,-1 ) node[dot ] { } ;        \\draw ( l.east ) to[out=0,in=180 ] ( m.west ) ;        \\draw ( m.east ) to[out=0,in=180 ] ( r.west ) ;        \\draw ( l.west ) to[out=180,in=-90 ] + ( -.5,.5 ) to + ( 0,2 ) ;        \\draw ( m.north ) to[out=90,in=-90 ] + ( 1,1.2 ) ;        \\draw ( r.east ) to[out=0,in=-90 ] + ( .5,.5 ) to[out=90,in=-90 ] + ( -1.5,2 ) ;      \\end{pic }      \\quad = \\quad      \\begin{pic}[scale=.5 ]        \\node[dot ] ( l ) at ( 0,0 ) { } ;        \\node[dot ] ( r ) at ( 2,0 ) { } ;        \\node[dot ] ( t ) at ( 2,1.7 ) { } ;        \\draw ( l.south ) to + ( 0,-.5 ) node[dot ] { } ;        \\draw ( r.south ) to + ( 0,-.5 ) node[dot ] { } ;        \\draw ( l.east ) to[out=0,in=180 ] ( t.west ) ;        \\draw ( r.east ) to[out=0,in=0 ] ( t.east ) ;        \\draw ( t.north ) to + ( 0,.7 ) ;        \\draw ( l.west ) to[out=180,in=-90 ] + ( -1,2.7 ) ;        \\draw ( r.west ) to[out=180,in=-90 ] + ( -1,2.7 ) ;      \\end{pic}\\ ] ] using associativity , commutativity , the unit law , and lemma  [ lem : extendedfrobeniuslaw ] .",
    "this final section justifies the frobenius law from first principles , by explaining it as a coherence property between daggers and closure . in a monoidal dagger category that is closed",
    ", monoids and daggers interact in two ways .",
    "first , any monoid picks up an involution by internalizing the dagger .",
    "second , any monoid embeds into an endohomset by closure , and the dagger is an involution on the endohomset .",
    "the frobenius law is equivalent to the property that these two canonical involutions coincide .",
    "[ lem : equivalentformoffrob ] a monoid @xmath391      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt } } } } , { \\smash{\\raisebox{1pt}{\\hspace{-3pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=-1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.north ) ; \\end{pic } } \\hspace{-1pt}}}})$ ] in a monoidal dagger category is a dagger frobenius monoid if and only if it satisfies the following equation . @xmath392",
    "\\node[dot ] ( t ) at ( 0,1 ) { } ;          \\draw ( t ) to + ( 0,1.5 ) ;          \\draw ( t ) to[out=0,in=90 ] ( 1,0 ) to ( 1,-1 ) ;          \\draw ( t ) to[out=180,in=90 ] ( -1,0 ) to ( -1,-1 ) ;        \\end{pic }        \\quad         =        \\quad        \\begin{pic }          \\node[dot ] ( a )   at ( -.2,0.75 ) { } ;          \\node[dot ] ( d )   at ( -.2,1.25 ) { } ;           \\node[dot ] ( b ) at ( .5,0 ) { } ;          \\draw ( d ) to ( a ) ;          \\draw ( a ) to[out=180,in=90 ] + ( -.5,-1 ) ;          \\draw ( b ) to[out=0,in=-90 ] + ( .35,.5 ) to + ( 0,.7 ) ;          \\draw ( a ) to[out=0,in=180 ]   ( b ) ;          \\draw ( b ) to + ( 0,-.45 ) ;        \\end{pic}\\ ] ]    the frobenius law   directly implies  .",
    "conversely , gives @xmath393            \\node ( 0a ) at ( -0.5,0 ) { } ;            \\node ( 0b ) at ( 0.5,0 ) { } ;            \\node[dot ] ( 1 ) at ( 0,1 ) { } ;            \\node[dot ] ( 2 ) at ( 0,2 ) { } ;            \\node ( 3a ) at ( -0.5,3 ) { } ;            \\node ( 3b ) at ( 0.5,3 ) { } ;            \\draw[out=90,in=180 ] ( 0a ) to ( 1.west ) ;            \\draw[out=90,in=0 ] ( 0b ) to ( 1.east ) ;            \\draw ( 1.north ) to ( 2.south ) ;            \\draw[out=180,in=270 ] ( 2.west ) to ( 3a ) ;            \\draw[out=0,in=270 ] ( 2.east ) to ( 3b ) ;      \\end{pic }      \\;=\\ ;      \\begin{pic }        \\node[dot ] ( l ) at ( -.75,.5 ) { } ;        \\node[dot ] ( m ) at ( 0,-.5 ) { } ;        \\node[dot ] ( r ) at ( 1,.5 ) { } ;        \\draw ( r.north ) to ( 1,1 ) node[dot ] { } ;        \\draw ( r.east ) to[out=0,in=90,looseness=.5 ] ( 1.5,-1 ) ;        \\draw ( m.south ) to ( 0,-1 ) ;        \\draw ( m.east ) to[out=0,in=180 ] ( r.west ) ;        \\draw ( m.west ) to[out=180,in=-90 ] ( l.south ) ;        \\draw ( l.east ) to[out=0,in=-90 ] ( -.25,1 ) ;        \\draw ( l.west ) to[out=180,in=-90 ] ( -1.25,1 ) ;      \\end{pic }      \\;=\\ ;      \\begin{pic}[xscale=.75 ]        \\node[dot ] ( l ) at ( -.75,-.5 ) { } ;        \\node[dot ] ( m ) at ( 0,0 ) { } ;        \\node[dot ] ( r ) at ( 1,.5 ) { } ;        \\draw ( l.south ) to ( -.75,-1 ) ;        \\draw ( l.west ) to[out=180,in=-90 ] ( -1.5,1 ) ;        \\draw ( l.east ) to[out=0,in=-90 ] ( m.south ) ;        \\draw ( m.west ) to[out=180,in=-90 ] ( -.5,1 ) ;        \\draw ( m.east ) to[out=0,in=180 ] ( r.west ) ;        \\draw ( r.north ) to ( 1,1 ) node[dot ] { } ;        \\draw ( r.east ) to[out=0,in=90,looseness=.5 ] ( 1.5,-1 ) ;      \\end{pic }      \\;=\\ ;      \\begin{pic}[yscale=0.75,xscale=-1 ]            \\node ( 0 ) at ( 0,0 ) { } ;             \\node ( 0a ) at ( 0,1 ) { } ;            \\node[dot ] ( 1 ) at ( 0.5,2 ) { } ;            \\node[dot ] ( 2 ) at ( 1.5,1 ) { } ;            \\node ( 3 ) at ( 1.5,0 ) { } ;            \\node ( 4 ) at ( 2,3 ) { } ;            \\node ( 4a ) at ( 2,2 ) { } ;            \\node ( 5 ) at ( 0.5,3 ) { } ;            \\draw ( 0 ) to ( 0a.center ) ;            \\draw[out=90,in=180 ] ( 0a.center ) to ( 1.east ) ;            \\draw[out=0,in=180 ] ( 1.west ) to ( 2.east ) ;            \\draw[out=0,in=270 ] ( 2.west ) to ( 4a.center ) ;            \\draw ( 4a.center ) to ( 4 ) ;            \\draw ( 2.south ) to ( 3 ) ;            \\draw ( 1.north ) to ( 5 ) ;      \\end{pic}\\ ] ] by associativity .",
    "but since the left - hand side is self - adjoint , so is the right - hand side , giving the frobenius law  .",
    "morphisms @xmath394 and @xmath395 in a monoidal category _ form a duality",
    "_ when they satisfy the following equations .",
    "@xmath396 ( u ) at ( 0,0 ) { $ \\eta$ } ;        \\node[morphism ] ( c ) at ( .75,.75 ) { $ \\varepsilon$ } ;        \\draw ( [ xshift=1mm]u.north east ) to[out=90,in=-90 ] ( [ xshift=-1mm]c.south west ) ;        \\draw ( [ xshift=-1mm]u.north west ) to + ( 0,1 ) ;        \\draw ( [ xshift=1mm]c.south east ) to + ( 0,-1 ) ;      \\end{pic }      \\ ; = \\ ;       \\begin{pic }        \\draw ( 0,0 ) to ( 0,1.7 ) ;      \\end{pic }      \\qquad\\qquad      \\begin{pic}[xscale=-1 ]        \\node[morphism ] ( u ) at ( 0,0 ) { $ \\eta$ } ;        \\node[morphism ] ( c ) at ( .75,.75 ) { $ \\varepsilon$ } ;        \\draw ( [ xshift=1mm]u.north west ) to[out=90,in=-90 ] ( [ xshift=-1mm]c.south east ) ;        \\draw ( [ xshift=-1mm]u.north east ) to + ( 0,1 ) ;        \\draw ( [ xshift=1mm]c.south west ) to + ( 0,-1 ) ;      \\end{pic }      \\ ; = \\ ;       \\begin{pic }        \\draw ( 0,0 ) to ( 0,1.7 ) ;      \\end{pic}\\ ] ]    in the categories @xmath18 and @xmath115 , every object @xmath23 is part of a duality @xmath397 : they are _ compact _ categories . moreover , in those categories we may choose @xmath398 : they are _ compact dagger categories_.    let @xmath63 be a closed monoidal category , so that there is a correspondence of morphisms @xmath399 and @xmath400 $ ] called _ currying_. write @xmath401 for @xmath402 $ ] , and write @xmath403 for the counit @xmath404 . if @xmath405      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt } } } } , { \\smash{\\raisebox{-3pt}{\\hspace{-3pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.south ) ; \\end{pic } } \\hspace{-1pt}}}})$ ] is a comonoid in @xmath38 , then @xmath401 becomes a monoid with unit and multiplication given by currying @xmath75      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.south ) ; \\end{pic } } \\hspace{-1pt}}}}\\colon i \\otimes a \\to i$ ] and @xmath196          \\node[morphism ] ( a )   at ( 0,0.75 ) { ev } ;           \\node[morphism ] ( c )   at ( -.25,2 ) { ev } ;           \\node[dot ] ( b ) at ( .5,0 ) { } ;          \\draw ( [ xshift=-1mm]a.south west ) to + ( 0,-1 ) ;          \\draw ( [ xshift=-1mm]c.south west ) to[out=-90,in=90 ] + ( -.25,-2.25 ) ;          \\draw ( b.east ) to[out=0,in=-90 ] + ( .25,.75 ) to[out=90,in=-90 ] ( c.south east ) ;          \\draw ( a.south east ) to[out=-90,in=180 ]   ( b.west ) ;          \\draw ( b ) to + ( 0,-.5 ) ;      \\end{pic } \\;\\colon ( a^ * \\otimes a^ * ) \\otimes a \\to i \\text{.}\\ ] ] this monoid and comonoid are related by a map @xmath406 obtained by currying @xmath407        \\node[dot ] ( b ) at ( 1,0 ) { } ;        \\node[dot ] ( c ) at ( 1,1 ) { } ;        \\draw ( b ) to   ( c ) ;        \\draw ( b ) to[out=180,in=90 ] ( 0,-1 ) ;        \\draw ( b ) to[out=0,in=90 ] ( 2,-1 ) ; \\end{pic}$ ] .",
    "[ prop : closedfrobenius ] a monoid @xmath391      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt } } } } , { \\smash{\\raisebox{1pt}{\\hspace{-3pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=-1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.north ) ; \\end{pic } } \\hspace{-1pt}}}})$ ] in a monoidal dagger category that is also a closed monoidal category is a dagger frobenius monoid if and only if @xmath406 is a monoid homomorphism and @xmath408 forms a duality with @xmath409              \\node[dot ] ( a ) at ( 0,0 ) { } ;              \\node[dot ] ( b ) at ( 0,-1 ) { } ;              \\node[morphism ] ( c ) at ( 1,1.5 ) { $ i$ } ;              \\draw ( b.north ) to   ( a.south ) ;              \\draw ( a.east ) to[out=0 , in=-90 ]   ( c.south ) ;              \\draw ( a.west ) to[out=180,in=-90,looseness=.8 ] ( -1,3 ) ;              \\draw ( [ yshift=.5mm]c.north ) to   ( 1,3 ) ;          \\end{pic}\\;\\colon i \\to a \\otimes a^ * \\text{.}\\ ] ]    the morphism @xmath410 always preserves units : @xmath411      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.north ) ; \\end{pic } } \\hspace{-1pt}}}}\\otimes { \\ensuremath{\\mathrm{id } _ { } } } ) = { \\smash{\\raisebox{-3pt}{\\hspace{-3pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.south ) ; \\end{pic } } \\hspace{-1pt}}}}\\circ { \\smash{\\raisebox{-2pt}{\\hspace{-5pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=-1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt}}}}\\circ ( { \\smash{\\raisebox{1pt}{\\hspace{-3pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=-1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.north ) ; \\end{pic } } \\hspace{-1pt}}}}\\otimes { \\ensuremath{\\mathrm{id } _ { } } } ) = { \\smash{\\raisebox{-3pt}{\\hspace{-3pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.south ) ; \\end{pic } } \\hspace{-1pt}}}}$ ] .",
    "it preserves multiplication precisely when : @xmath412          \\node[dot ] ( t ) at ( 0,1 ) { } ;          \\node[dot ] ( b ) at ( 1,0 ) { } ;          \\node[dot ] ( c ) at ( 0,2 ) { } ;          \\draw ( c ) to ( t ) ;          \\draw ( t ) to[out=0,in=90 ] ( b ) ;          \\draw ( t ) to[out=180,in=90 ] ( -1,0 ) to ( -1,-1 ) ;          \\draw ( b ) to[out=180,in=90 ] ( 0,-1 ) ;          \\draw ( b ) to[out=0,in=90 ] ( 2,-1 ) ;        \\end{pic }        \\quad = \\quad        \\begin{pic}[yscale=.4,xscale=-.4 ]          \\node[dot ] ( t ) at ( 0,1 ) { } ;          \\node[dot ] ( b ) at ( 1,0 ) { } ;          \\node[dot ] ( c ) at ( 0,2 ) { } ;          \\draw ( c ) to ( t ) ;          \\draw ( t ) to[out=0,in=90 ] ( b ) ;          \\draw ( t ) to[out=180,in=90 ] ( -1,0 ) to ( -1,-1 ) ;          \\draw ( b ) to[out=180,in=90 ] ( 0,-1 ) ;          \\draw ( b ) to[out=0,in=90 ] ( 2,-1 ) ;        \\end{pic }        \\quad = \\quad        \\begin{pic}[scale=.4 ]          \\node[dot ] ( b ) at ( 1.25,-.25 ) { } ;          \\node[morphism ] ( c ) at ( 1.25,1 ) { $ i$ } ;          \\node[morphism ] ( d ) at ( 2.5,3.2 ) { ev } ;          \\draw ( b.north ) to   ( c.south ) ;          \\draw ( b.west ) to[out=180,in=90 ] + ( -.75,-1 ) ;          \\draw ( b.east ) to[out=0,in=90 ] + ( .75,-1 ) ;          \\draw ( [ xshift=-1.5mm]d.south west ) to[out=-90,in=90 ] ( c.north ) ;          \\draw ( [ xshift=1mm]d.south east ) to + ( 0,-4 ) ;        \\end{pic }        \\quad = \\quad        \\begin{pic}[scale=.4 ]          \\node[dot ] ( a ) at ( 0,1 ) { } ;          \\node[morphism ] ( b ) at ( -.8,-.5 ) { $ i$ } ;          \\node[morphism ] ( c ) at ( .8,-.5 ) { $ i$ } ;          \\node[morphism ] ( d ) at ( 1.5,2.75 ) { ev } ;          \\draw ( a.west ) to[out=180,in=90 ] ( b.north ) ;          \\draw ( a.east ) to[out=0,in=90 ] ( c.north ) ;          \\draw ( a.north ) to[out=90,in=-90 ] ( [ xshift=-1mm]d.south west ) ;          \\draw ( b.south ) to + ( 0,-.75 ) ;          \\draw ( c.south ) to + ( 0,-.75 ) ;          \\draw ( [ xshift=1mm]d.south east ) to[out=-90,in=90 ] + ( 0,-4 ) ;        \\end{pic }        \\quad = \\quad        \\begin{pic}[scale=.75 ]          \\node[dot ] ( a )   at ( -.5,0.75 ) { } ;          \\node[dot ] ( d )   at ( -.5,1.25 ) { } ;           \\node[dot ] ( c )   at ( -.5,1.75 ) { } ;           \\node[dot ] ( e )   at ( -.5,2.25 ) { } ;          \\node[dot ] ( b ) at ( .2,.2 ) { } ;          \\draw ( d ) to ( a ) ;          \\draw ( e ) to ( c ) ;          \\draw ( a.west ) to[out=180,in=90,looseness=.8 ] + ( -.25,-1 ) ;          \\draw ( c.west ) to[out=180,in=90,looseness=.8 ] + ( -.75,-2 ) ;          \\draw ( b.east ) to[out=0,in=0 ] ( c.east ) ;          \\draw ( a ) to[out=0,in=180 ]   ( b ) ;          \\draw ( b ) to + ( 0,-.45 ) ;        \\end{pic}\\ ] ] furthermore , @xmath408 and   form a duality precisely when : @xmath413          \\node[dot ] ( a ) at ( 0,0 ) { } ;          \\node[dot ] ( b ) at ( 0,-1 ) { } ;          \\node[morphism ] ( c ) at ( 1,1.5 ) { $ i$ } ;          \\node[morphism ] ( d ) at ( 1.6,3 ) { ev } ;          \\draw ( b ) to   ( a ) ;          \\draw ( a.east ) to[out=0 , in=-90 ]   ( c.south ) ;          \\draw ( a.west ) to[out=180,in=-90,looseness=.6 ] ( -1,3.5 ) ;          \\draw ( [ xshift=-2mm]d.south west ) to   ( c.north ) ;          \\draw ( [ xshift=2mm]d.south east ) to   + ( 0,-4 ) ;        \\end{pic }        \\ ; = \\ ;        \\begin{pic}[scale=.4 ]          \\node[dot ] ( a ) at ( 0,0 ) { } ;          \\node[dot ] ( b ) at ( 0,-1 ) { } ;          \\node[dot ] ( c ) at ( 1.75,1.5 ) { } ;          \\node[dot ] ( d ) at ( 1.75,2.5 ) { } ;          \\draw ( b ) to   ( a ) ;          \\draw ( d ) to   ( c ) ;          \\draw ( a ) to[out=0 , in=180 ]   ( c ) ;          \\draw ( a.west ) to[out=180,in=-90,looseness=.6 ] ( -1,3.5 ) ;          \\draw ( c.east ) to[out=0 , in=90,looseness=.8 ]   + ( 1,-3 ) ;        \\end{pic }        \\qquad \\qquad \\qquad        \\begin{pic }              \\draw ( 0,0 ) to ( 0,2 ) ;        \\end{pic }        \\ ; = \\ ;        \\begin{pic}[scale=.4 ]          \\node[dot ] ( a ) at ( .25,0 ) { } ;          \\node[dot ] ( b ) at ( .25,-1 ) { } ;          \\node[morphism ] ( c ) at ( 1,1.5 ) { $ i$ } ;          \\node[morphism ] ( d ) at ( -1,1.5 ) { ev } ;          \\draw ( b ) to   ( a ) ;          \\draw ( a ) to[out=0 , in=-90 ]   ( c.south ) ;          \\draw ( [ xshift=1mm]d.south east ) to[out=-90,in=180 ] ( a ) ;          \\draw ( [ xshift=-1mm]d.south west ) to + ( 0,-2.5 ) ;          \\draw ( [ yshift=.5mm]c.north ) to   ( 1,3 ) ;        \\end{pic}\\ ] ] by evaluating both sides , it is easy to see that the left equation implies the right one .",
    "now , assuming the frobenius law  , lemma  [ lem : extendedfrobeniuslaw ] and the unit law guarantee that ( the left equation of )   is satisfied , as well as  : @xmath414          \\node[dot ] ( a )   at ( -.5,0.75 ) { } ;          \\node[dot ] ( d )   at ( -.5,1.25 ) { } ;           \\node[dot ] ( c )   at ( -.5,1.75 ) { } ;           \\node[dot ] ( e )   at ( -.5,2.25 ) { } ;          \\node[dot ] ( b ) at ( .2,.2 ) { } ;          \\draw ( d ) to ( a ) ;          \\draw ( e ) to ( c ) ;          \\draw ( a.west ) to[out=180,in=90,looseness=.8 ] + ( -.25,-1 ) ;          \\draw ( c.west ) to[out=180,in=90,looseness=.8 ] + ( -.75,-2 ) ;          \\draw ( b.east ) to[out=0,in=0 ] ( c.east ) ;          \\draw ( a ) to[out=0,in=180 ]   ( b ) ;          \\draw ( b ) to + ( 0,-.45 ) ;        \\end{pic }        \\quad = \\quad        \\begin{pic}[scale=.75 ]          \\node[dot ] ( b ) at ( 0,3 ) { } ;          \\node[dot ] ( c ) at ( 0,2 ) { } ;          \\node[dot ] ( d ) at ( 0,1.5 ) { } ;          \\draw ( d.east ) to[out=0,in=90 ] + ( .3,-.5 ) ;          \\draw ( d.west ) to[out=180,in=90 ] + ( -.3,-.5 ) ;          \\draw ( d.north ) to ( c.south ) ;          \\draw ( c.west ) to[out=180,in=-90 ] + ( -.25,.5 ) node[dot ] { } ;          \\draw ( c.east ) to[out=0,in=0 ] ( b.east ) ;          \\draw ( b.north ) to + ( 0,.5 ) node[dot ] { } ;          \\draw ( b.west ) to[out=180,in=90 ] + ( -1,-2 ) ;        \\end{pic }        \\quad = \\quad        \\begin{pic}[scale=.4 ]          \\node[dot ] ( t ) at ( 0,1 ) { } ;          \\node[dot ] ( b ) at ( 1,0 ) { } ;          \\node[dot ] ( c ) at ( 0,2 ) { } ;          \\draw ( c ) to ( t ) ;          \\draw ( t ) to[out=0,in=90 ] ( b ) ;          \\draw ( t ) to[out=180,in=90 ] ( -1,0 ) to ( -1,-1 ) ;          \\draw ( b ) to[out=180,in=90 ] ( 0,-1 ) ;          \\draw ( b ) to[out=0,in=90 ] ( 2,-1 ) ;        \\end{pic}\\ ] ] conversely , equations   and   imply : @xmath415          \\node[dot ] ( a )   at ( -.2,0.75 ) { } ;          \\node[dot ] ( d )   at ( -.2,1.15 ) { } ;           \\node[dot ] ( b ) at ( .5,0 ) { } ;          \\draw ( d ) to ( a ) ;          \\draw ( a ) to[out=180,in=90,looseness=.8 ] + ( -.5,-1.25 ) ;          \\draw ( b ) to[out=0,in=-90,looseness=.8 ] + ( .5,1.5 ) ;          \\draw ( a ) to[out=0,in=180 ]   ( b ) ;          \\draw ( b ) to + ( 0,-.45 ) ;        \\end{pic }        \\quad = \\quad        \\begin{pic}[scale=.5 ]          \\node[dot ] ( a ) at ( 0,2.2 ) { } ;          \\node[dot ] ( b ) at ( 1.5,3 ) { } ;          \\node[dot ] ( c ) at ( 2,.2 ) { } ;          \\node[dot ] ( d ) at ( 1,1 ) { } ;          \\draw ( a.south ) to + ( 0,-.5 ) node[dot ] { } ;          \\draw ( b.north ) to + ( 0,.5 ) node[dot ] { } ;          \\draw ( d.north ) to + ( 0,.5 ) node[dot ] { } ;          \\draw ( a.east ) to[out=0,in=180 ] ( b.west ) ;          \\draw ( b.east ) to[out=0,in=0,looseness=.8 ] ( c.east ) ;          \\draw ( c.west ) to[out=180,in=0 ] ( d.east ) ;          \\draw ( c.south ) to + ( 0,-.5 ) ;          \\draw ( d.west ) to[out=180,in=90,looseness=.7 ] + ( -.5,-1.5 ) ;          \\draw ( a.west ) to[out=180,in=-90,looseness=.7 ] + ( -.5,2 ) ;        \\end{pic }        \\quad = \\quad        \\begin{pic}[scale=.5 ]          \\node[dot ] ( l ) at ( 0,0 ) { } ;          \\node[dot ] ( m ) at ( 1.25,1 ) { } ;          \\node[dot ] ( r ) at ( 2,0 ) { } ;          \\draw ( l.south ) to + ( 0,-.5 ) node[dot ] { } ;          \\draw ( m.north ) to + ( 0,.5 ) node[dot ] { } ;          \\draw ( l.west ) to[out=180,in=-90,looseness=.8 ] + ( -.5,2 ) ;          \\draw ( l.east ) to[out=0 , in=180 ] ( m.west ) ;          \\draw ( m.east ) to[out=0,in=90 ] ( r.north ) ;          \\draw ( r.west ) to[out=180,in=90 ] + ( -.5,-1.5 ) ;          \\draw ( r.east ) to[out=0,in=90 ] + ( .5,-1.5 ) ;        \\end{pic }        \\quad = \\quad        \\begin{pic}[scale=.5 ]          \\node[dot ] ( t ) at ( 0,1 ) { } ;          \\draw ( t ) to + ( 0,1.5 ) ;          \\draw ( t ) to[out=0,in=90 ] ( 1,0 ) to ( 1,-1 ) ;          \\draw ( t ) to[out=180,in=90 ] ( -1,0 ) to ( -1,-1 ) ;        \\end{pic}\\ ] ] lemma  [ lem : equivalentformoffrob ] now finishes the proof .",
    "a _ sheathed dagger category _ is a monoidal dagger category that is also closed monoidal , such that @xmath417        \\node[morphism , hflip ] ( a ) at ( 3.5,-2 ) { $ \\operatorname{ev}_{[a , a]}$ } ;        \\node[dot ] ( b ) at ( 1,-.25 ) { } ;        \\node[dot ] ( c ) at ( 1,1 ) { } ;        \\draw ( b ) to   ( c ) ;        \\draw ( b ) to[out=180,in=90 ] ( 0,-1 ) to ( 0,-3.5 ) ;        \\draw ( b ) to[out=0,in=90 ] ( a.north west ) ;        \\draw ( a.south ) to + ( 0,-1 ) ;        \\draw ( a.north east ) to + ( 0,3 ) ;      \\end{pic }      \\quad = \\quad      \\operatorname{ev}_{[a , a ] }       \\;\\colon [ a , a ] \\otimes a \\to a\\ ] ] for all objects @xmath23 , and for all morphisms @xmath418 \\colon$ ] @xmath419        \\node[morphism ] ( a ) at ( 0,0 ) { $ f$ } ;        \\node[morphism ] ( b ) at ( 0.63,1 ) { $ \\operatorname{ev}_{[a , a]}$ } ;        \\draw ( a.south ) to + ( 0,-.5 ) ;        \\draw ( [ xshift=-1mm]a.north west ) to + ( 0,1.5 ) ;        \\draw ( [ xshift=1mm]a.north east ) to ( b.south west ) ;        \\draw ( [ xshift=-1mm]b.north ) to + ( 0,.5 ) ;        \\draw ( [ xshift=-1mm]b.south east ) to + ( 0,-1.5 ) ;      \\end{pic }      \\ ; = \\ ;      \\begin{pic}[yscale=.6 ]        \\node[morphism ] ( a ) at ( 0,0 ) { $ g$ } ;        \\node[morphism ] ( b ) at ( 0.62,1 ) { $ \\operatorname{ev}_{[a , a]}$ } ;        \\draw ( a.south ) to + ( 0,-.5 ) ;        \\draw ( [ xshift=-1mm]a.north west ) to + ( 0,1.5 ) ;        \\draw ( [ xshift=1mm]a.north east ) to ( b.south west ) ;        \\draw ( [ xshift=-1mm]b.north ) to + ( 0,.5 ) ;        \\draw ( [ xshift=-1mm]b.south east ) to + ( 0,-1.5 ) ;      \\end{pic }      \\qquad \\implies \\qquad       \\begin{pic }        \\node[morphism ] ( a ) at ( 0,0 ) { $ f$ } ;        \\draw ( a.south ) to + ( 0,-.5 ) ;        \\draw ( [ xshift=-1mm]a.north west ) to + ( 0,.5 ) ;        \\draw ( [ xshift=1mm]a.north east ) to + ( 0,.5 ) ;      \\end{pic }      \\ ; = \\ ;      \\begin{pic }        \\node[morphism ] ( a ) at ( 0,0 ) { $ g$ } ;        \\draw ( a.south ) to + ( 0,-.5 ) ;        \\draw ( [ xshift=-1mm]a.north west ) to + ( 0,.5 ) ;        \\draw ( [ xshift=1mm]a.north east ) to + ( 0,.5 ) ;      \\end{pic}\\ ] ]    any compact dagger category is a sheathed dagger category : the first axiom there says that @xmath420 with its canonical monoid structure is a dagger frobenius monoid , and the second axiom then holds because the evaluation morphism is invertible . in principle , the definition of sheathed dagger categories is much weaker .",
    "although we have no uncontrived examples of sheathed dagger categories that are not compact dagger categories , we will work with the more general sheathed dagger categories because they are the natural home for the following arguments .",
    "the second axiom merely says that partial evaluation is faithful , which is the case in any well - pointed monoidal dagger category . in any closed monoidal category",
    ", the evaluation map canonically makes @xmath23 into an algebra for the monad @xmath421 $ ] .",
    "the first axiom merely says that @xmath23 is @xmath421$]-self - adjoint , as in .",
    "it does not assume @xmath416 $ ] is a dagger frobenius monoid , nor that @xmath23 is a fem - algebra .",
    "no other plausible conditions are imposed , such as the bifunctor @xmath422 $ ] being a dagger functor , which does hold in compact dagger categories .",
    "nevertheless , the following example shows that being a sheathed dagger category is an essentially monoidal notion that degenerates for cartesian categories .        currying the multiplication of a monoid @xmath391      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt } } } } , { \\smash{\\raisebox{1pt}{\\hspace{-3pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=-1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.north ) ; \\end{pic } } \\hspace{-1pt}}}})$ ] in a closed monoidal category gives a monoid homomorphism @xmath424 $ ] .",
    "this is the abstract version of cayley s embedding theorem , which states that any group embeds into the symmetric group on itself .",
    "if the category also has a dagger , there is also a monoid homomorphism @xmath425 \\colon a^ * \\to [ a , a]^*$ ] .",
    "[ thm : sheathedfrobenius ] in a sheathed dagger category , @xmath391      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt } } } } , { \\smash{\\raisebox{1pt}{\\hspace{-3pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=-1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.north ) ; \\end{pic } } \\hspace{-1pt}}}})$ ] is a dagger frobenius monoid if and only if the following diagram commutes .",
    "@xmath131       {        a & { [ a , a ] } \\\\        a^ * & { [ a , a]^ * } \\\\ } ;       \\path[- > ]       ( m-1 - 1 ) edge node [ left ] { $ i_a$ } ( m-2 - 1 )               edge node [ above ] { $ r$ } ( m-1 - 2 )       ( m-2 - 1 ) edge node [ below ] { $ r_*$ } ( m-2 - 2 )       ( m-1 - 2 ) edge node [ right ] { $ i_{[a , a]}$ } ( m-2 - 2 ) ;      \\end{tikzpicture}\\ ] ]    evaluating both sides shows that @xmath426 and @xmath410 commute precisely when : @xmath73        \\node[dot ] ( b ) at ( 1,0 ) { } ;        \\node[dot ] ( c ) at ( 1,1 ) { } ;        \\node[morphism ] ( a ) at ( -.25,-1.5 ) { $ r$ } ;        \\draw ( b ) to   ( c ) ;        \\draw ( b ) to[out=180,in=90 ] ( a.north ) ;        \\draw ( a.south ) to + ( 0,-1 ) ;        \\draw ( b ) to[out=0,in=90 ] ( 2,-1 ) to ( 2,-3 ) ;      \\end{pic }      \\quad       =       \\quad       \\begin{pic}[scale=.4 ]        \\node[dot ] ( b ) at ( 1,0 ) { } ;        \\node[dot ] ( c ) at ( 1,1 ) { } ;        \\node[morphism , hflip ] ( a ) at ( 1.75,-1.5 ) { $ r$ } ;        \\draw ( b ) to   ( c ) ;        \\draw ( a.south ) to + ( 0,-1 ) ;        \\draw ( b ) to[out=180,in=90 ] ( 0,-1 ) to ( 0,-3 ) ;        \\draw ( b ) to[out=0,in=90 ] ( a.north ) ;      \\end{pic}\\ ] ] but",
    "this is equivalent to @xmath73          \\node[dot ] ( t ) at ( 0,1 ) { } ;          \\draw ( t ) to + ( 0,1.5 ) ;          \\draw ( t ) to[out=0,in=90 ] ( 1,0 ) to ( 1,-1 ) ;          \\draw ( t ) to[out=180,in=90 ] ( -1,0 ) to ( -1,-1 ) ;      \\end{pic }      \\quad = \\quad      \\begin{pic }        \\node[morphism ] ( a ) at ( 0,0 ) { $ r$ } ;        \\node[morphism ] ( b ) at ( 0.44,1 ) { $ \\operatorname{ev}_{[a , a]}$ } ;        \\draw ( a.south ) to + ( 0,-.5 ) ;        \\draw ( a.north ) to ( b.south west ) ;",
    "\\draw ( [ xshift=-1mm]b.north ) to + ( 0,.5 ) ;        \\draw ( [ xshift=-1mm]b.south east ) to + ( 0,-1.5 ) ;      \\end{pic }      \\quad = \\quad      \\begin{pic}[scale=.4 ]        \\node[dot ] ( b ) at ( 1,0 ) { } ;        \\node[dot ] ( c ) at ( 1,1 ) { } ;        \\node[morphism ] ( a ) at ( -.25,-1.5 ) { $ r$ } ;        \\node[morphism , hflip ] ( d ) at ( 2.75,-3.5 ) { $ \\operatorname{ev}_{[a , a]}$ } ;        \\draw ( b ) to   ( c ) ;        \\draw ( b ) to[out=180,in=90 ] ( a.north ) ;        \\draw ( a.south ) to + ( 0,-3 ) ;        \\draw ( b ) to[out=0,in=90 ] ( 2,-1 ) to ( 2,-3 ) ;        \\draw ( d.north east ) to + ( 0,5 ) ;        \\draw ( d.south ) to + ( 0,-1 ) ;      \\end{pic }      \\quad       =       \\quad       \\begin{pic}[scale=.4 ]        \\node[dot ] ( b ) at ( 1,0 ) { } ;        \\node[dot ] ( c ) at ( 1,1 ) { } ;        \\node[morphism , hflip ] ( a ) at ( 1.75,-1.5 ) { $ r$ } ;        \\node[morphism , hflip ] ( d ) at ( 2.75,-3.5 ) { $ \\operatorname{ev}_{[a , a]}$ } ;        \\draw ( b ) to   ( c ) ;        \\draw ( a.south ) to + ( 0,-1 ) ;        \\draw ( d.north east ) to + ( 0,5 ) ;        \\draw ( d.south ) to + ( 0,-1 ) ;        \\draw ( b ) to[out=180,in=90 ] ( 0,-1 ) to ( 0,-5 ) ;        \\draw ( b ) to[out=0,in=90 ] ( a.north ) ;      \\end{pic }      \\quad = \\quad       \\begin{pic}[scale=.4 ]        \\node[dot ] ( b ) at ( 1,0 ) { } ;        \\node[dot ] ( c ) at ( 1,1 ) { } ;        \\node[dot ] ( d ) at ( 2.75,-2 ) { } ;        \\draw ( b ) to   ( c ) ;        \\draw ( d ) to[out=0 , in=-90 ] + ( 1,1 ) to + ( 0,2 ) ;        \\draw ( d.south ) to + ( 0,-1 ) ;        \\draw ( b ) to[out=180,in=90 ] ( 0,-1 ) to ( 0,-3.5 ) ;        \\draw ( b ) to[out=0,in=180 ] ( d ) ;      \\end{pic}\\ ] ] lemma  [ eq : equivalentfrobeniuslaw ] now finishes the proof .",
    "the following are equivalent for a monoid @xmath391      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt } } } } , { \\smash{\\raisebox{1pt}{\\hspace{-3pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=-1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.north ) ; \\end{pic } } \\hspace{-1pt}}}})$ ] in a compact dagger category :    * @xmath391      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\node ( 2 ) at ( -0.5,1 ) { } ;      \\node ( 3 ) at ( 0.5,1 ) { } ;      \\draw ( 0.center ) to ( 1.center ) ;      \\draw ( 1.center ) to [ out = left , in = down , out looseness=1.5 ] ( 2.center ) ;      \\draw ( 1.center ) to [ out = right , in = down , out looseness=1.5 ] ( 3.center ) ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ; \\end{pic } } \\hspace{-3pt } } } } , { \\smash{\\raisebox{1pt}{\\hspace{-3pt}\\ensuremath{\\begin{pic}[scale=0.4,yscale=-1 ]      \\node ( 0 ) at ( 0,0 ) { } ;      \\node[dot , inner sep=1.5pt ] ( 1 ) at ( 0,0.55 ) { } ;      \\draw ( 0.center ) to ( 1.north ) ; \\end{pic } } \\hspace{-1pt}}}})$ ] is a dagger frobenius monoid ; * the canonical morphism @xmath427 is an involution : @xmath428 ; * the canonical cayley embedding is involutive : @xmath429 .",
    "b.  coecke and d.  pavlovic .",
    "quantum measurements without sums . in g.",
    "chen , l.  kauffman , and s.  j. lomonaco , editors , _ the mathematics of quantum computation and technology _ , pages 559596 .",
    "taylor and francis , 2008 .                      c.  heunen and s.  tull .",
    "categories of relations as models of quantum theory . in _ international workshop on quantum physics and logic _ , volume 195 of _ electronic proceedings in theoretical computer science _ , pages 247261 , 2015 .",
    "p.  selinger .",
    "dagger compact closed categories and completely positive maps . in _",
    "3rd international workshop on quantum programming languages _ ,",
    "volume 170 of _ electronic notes in theoretical computer science _ ,",
    "pages 139163 , 2007 ."
  ],
  "abstract_text": [
    "<S> the theory of monads on categories equipped with a dagger ( a contravariant identity - on - objects involutive endofunctor ) works best when all structure respects the dagger : the monad and adjunctions should preserve the dagger , and the monad and its algebras should satisfy the so - called frobenius law </S>",
    "<S> . then any monad resolves as an adjunction , with extremal solutions given by the categories of kleisli and frobenius - eilenberg - moore algebras , which again have a dagger . </S>",
    "<S> we characterize the frobenius law as a coherence property between dagger and closure , and characterize strong such monads as being induced by frobenius monoids . </S>"
  ]
}
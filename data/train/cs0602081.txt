{
  "article_text": [
    "low - density parity - check ( ldpc ) codes are generally decoded by the iterative message - passing algorithm @xcite .",
    "an important design issue is finding the codes with fast decoding speed while maintaining good capacity - approaching performance .",
    "that is , the bit error rate approaches zero with few decoding iterations while a significant fraction of channel capacity is achieved .",
    "such codes are desirable because they have less decoding computational complexity and delay .    despite of its importance",
    ", this design issue received little attention so far . in this paper",
    ", we address this design issue for the case of binary erasure channel ( bec ) .",
    "bec is widely adopted as a practical channel model for packet network communications .",
    "in addition , previous research has shown that the insights gained from the case of bec can generally be carried over to the cases of many other channels .",
    "`` density evolution '' ( de ) is an asymptotic analysis method for ldpc code performance under the message - passing decoding @xcite .",
    "de iteratively calculates the probability distributions of messages for the case where the codeword length is infinity . for a code with sufficiently long codeword length , the corresponding distributions of messages are close to these of the infinitely long codes .",
    "hence , the code performances can be approximately determined , such as , bit error rates or message erasure probabilities in the case of bec .",
    "given that the message erasure probabilities can be approximately calculated , a brutal force approach to finding ldpc codes with good decoding speed is solving a constraint optimization problem .",
    "the optimization variables are the code parameters .",
    "the objective function is the number of decoding iterations , which can be approximated calculated by de .",
    "and the constraints includes the fixed code rate , the condition ensuring that the code can be successfully decoded , and the valid ranges of the code parameters .    although the above brutal force approach can yield certain codes with good decoding speed ,",
    "it is not satisfactory due to the following reasons .",
    "first , the constraint optimization problem does not have nice numerical properties .",
    "the objective function is discrete and indifferentiable .",
    "almost all optimization algorithms have convergence problems .",
    "it is numerically difficult to find the optimal solutions .",
    "second , the approach does not provide a closed - form relation between the number of iterations and the code parameters .",
    "therefore , we can not gain any insight into the problem .",
    "we propose an alternative and tractable approach in this paper .",
    "we prove that `` density - efficient '' and `` capacity - approaching '' ldpc codes satisfy a so called `` flatness condition '' . by `` capacity - approaching '' , we mean that the code rate is close to the channel capacity . by `` density - efficient '' , we mean that the density of the parity - check matrix is low . in this paper",
    ", we only consider codes with efficiently low parity - check matrix density and low maximal left and right degrees .",
    "the codes with high parity - check matrix density or high maximal degrees are not practical in implementations .",
    "the flatness - condition simplify our discussion on decoding speed .",
    "based on that , we present an asymptotic approximation to the number of decoding iterations .",
    "the asymptotic approximation yields an approximated optimization approach to designing codes with good decoding speed . instead of minimizing the number of decoding iterations directly",
    ", the approximated optimization approach minimizes the asymptotic approximation .",
    "numerical results confirm that the number of decoding iterations and its asymptotic approximation are consistent .",
    "the approximated optimization approach also has better numerical properties .",
    "the convergence problem in the brutal force approach is avoided .",
    "the asymptotic approximation provides a closed - form relation between the number of decoding iterations and the code parameters .",
    "hence , it provides useful insights into the design problem .",
    "one part of the discussion in this paper on optimal degree distributions in the sense of decoding speed is based on this closed - form relation .",
    "we also anticipate that this closed - form relation will facilitate further discussion on decoding speed in the future .",
    "we also discuss the conditions for the optimal degree distributions in the sense of decoding speed .",
    "we show that the optimal codes are `` right - concentrated '' .",
    "that is , the degrees of check nodes concentrate around the average right degree . in previous research , several such degree distributions",
    "are numerically found to have nice performance    the remainder of this paper is organized as follows . in section [ section_pre ] ,",
    "we review ldpc codes , the message - passing decoding , `` density evolution '' , and the density capacity - approaching tradeoff .",
    "readers who are familiar with these materials , can skip this section . in section [ section_approx ]",
    ", we discuss the flatness condition and asymptotic approximation to the number of decoding iterations . in section [ section_optim_algo ] ,",
    "we discuss the proposed approximated optimization approach for finding codes with good decoding speed . in section [ optimal_degree ] , we discuss the conditions for optimal degree distributions in the sense of decoding speed . in section [ section_numerical ]",
    ", we show several numerical examples . in section [ section_conclusion ]",
    ", we present our conclusions .",
    "a bec is shown in fig .",
    "[ fig_bec ] .",
    "the channel takes binary inputs and outputs @xmath0 , @xmath1 , or @xmath2 , where @xmath2 stands for an erasure .",
    "the transmitted binary signal is received correctly with probability @xmath3 . otherwise , the channel outputs an erasure .",
    "the probability @xmath4 is called the channel parameter . the channel capacity @xmath5 .",
    "ldpc codes are linear block codes with sparse parity - check matrix . the codes can be represented by tanner graphs .",
    "a tanner graph is a bipartite graph .",
    "one of its partition consists of variable nodes ; whereas the other partition consists of check nodes .",
    "each variable node represents one codeword bit ; while each check node represent one linear check . a tanner graph is shown in fig . [ tanner_graph ] .",
    "the variable nodes are drawn as circles ; whereas the check nodes are drawn as squares .        in this paper",
    ", we consider randomly generated ldpc codes . the tanner graph is generated according to the three code parameters : the left degree distribution @xmath6 , the right degree distribution @xmath7 , and the codeword length @xmath8 .",
    "the left and right degree distributions are polynomials : @xmath9   @xmath10 where @xmath11 is the fraction of edges connected to variable nodes with degree @xmath12 ; while @xmath13 is the fraction of edges connected to check nodes with degree @xmath14 .",
    "the tanner graph is generated by first growing edges from variable and check nodes according to the degree distributions .",
    "the edges from variable nodes and check nodes are then uniformly randomly connected .",
    "if the codeword length is sufficiently long , approximately the code rate @xmath15      the message - passing algorithm @xcite is an iterative decoding algorithm .",
    "the algorithm computes likelihood functions for all codeword bits iteratively .",
    "the final decoding decisions are hard threshold decisions on the likelihood functions .    in the case of bec",
    ", the likelihood function has a finite alphabet .",
    "the message - passing algorithm becomes simple . during each iteration ,",
    "the algorithm find check nodes with only one neighboring variable node being still erasure .",
    "the algorithm then corrects these erasures according to the linear constrains .",
    "density evolution @xcite calculates the distributions of messages for the codes with infinitely long codeword length . in the case of bec , the message erasure probability @xmath16",
    "after the @xmath17-th iteration can be approximately calculated as follows : @xmath18",
    "asymptotically with the codeword length , the code can be successfully decoded with high probability if and only if @xmath19 \\label{eqn_asym_sucess}\\ ] ]      it is shown that ldpc codes with bounded degrees can not achieve the channel capacity .",
    "there exists a tradeoff between the parity - check matrix density and the achievable rate @xcite @xcite . in the case of bec ,",
    "shokrollahi @xcite shows the following bound for achievable rate : @xmath20 where , @xmath21 is the average right degree , @xmath22 and @xmath23 is the gap between the achievable rate to the channel capacity .",
    "this lower bound of the gap to the capacity decreases exponentially as the average degree increases . in the same paper ,",
    "shokrollahi show that this bound is tight .",
    "that is , there exist codes with an exponentially decreasing gap to the capacity with respect to linearly growing average degrees .",
    "in this section , we prove that density - efficient capacity - approaching ldpc codes satisfy a necessary condition - the flatness condition . based on the flatness condition , we further derive an asymptotic approximation to the number of decoding iterations .",
    "the propositions and lemmas in section [ subsec_auxiliary_lemma ] are not meaningful by themselves .",
    "they are useful only for proving the main theorems in section [ sub_sec_main_theorem ] .",
    "a reader who is not interesting in the details of the proof can skip the section [ subsec_auxiliary_lemma ] .      consider a bec with channel parameter @xmath4 .",
    "consider a ldpc code with the left degree distribution @xmath6 and the right degree distribution @xmath7 .",
    "denote the average right degree by @xmath21 .",
    "define @xmath24 .",
    "let @xmath25 denote the code rate .",
    "the gap between the capacity and the code rate @xmath26 .",
    "we define the function @xmath27 as follows : @xmath28    we define the _ decoding convergence time _ @xmath29 to be the maximal @xmath17 such that the message erasure probability is greater than the probability level @xmath30 after @xmath17 decoding iterations . for any left and right degree distributions @xmath6 and @xmath7 , we define @xmath31    throughout section [ section_approx ] , the derivatives are taken with respect to @xmath32 . throughout this paper",
    ", we also assume that the maximal left and right degrees are upper bounded by @xmath33 and @xmath34 respectively , where @xmath35 and @xmath36 are constants .",
    "the proofs can be found in the appendices [ proof_pro1 ] to [ proof_lemma_boundary ] .",
    "@xmath37'\\leq \\frac{k_ca}{1-\\xi}\\rho(1-x),\\,\\,\\,\\mbox { for any } x\\in(0,\\xi]\\ ] ]    [ pro1 ]    @xmath38''\\leq ( -1)\\frac{k_ca}{1-\\xi}[\\rho(1-x)]',\\,\\,\\,\\mbox { for any } x\\in(0,\\xi ] \\nonumber \\\\end{aligned}\\ ] ]    [ pro2 ]    similar to that of proposition [ pro1 ] .",
    "@xmath39dx= \\frac{b\\delta r}{\\xi+\\delta r } \\label{eqn_bound_integral_of_rho}\\ ] ]    [ lemma_bound_integral_of_rho ]    @xmath40    [ lemma_rho_lemma_diff_bound ]    @xmath41''\\right|\\leq \\frac{k_v^2k_c^2\\rho(1-x)^2a^4}{(1-\\xi)^2}+ \\frac{k_vk_c^2\\rho(1-x)a^3}{(1-\\xi)^2}\\ ] ]    [ lemma_bound_recursive_eqn ]    [ lemma_bound_ratio_derivatives ] let @xmath42 and @xmath43 . then , @xmath44'}{[\\rho(1-x ) ] ' } \\geq 1+\\frac{-k_cb}{2(1-\\xi ) } -   \\sqrt{k_c}b(\\delta r , b , x)(1-\\xi)a^2   \\nonumber \\\\\\end{aligned}\\ ] ] @xmath45'}{[\\rho(1-x ) ] ' }   \\leq 1 + \\sqrt{k_c}b(\\delta r , b , x)a^5 + \\frac{k_cb^4}{2(1-\\xi)}(1+\\frac{b^5}{1-\\xi})^{k_ca } \\nonumber \\\\\\end{aligned}\\ ] ]    [ lemma_bound_derivatives ] let @xmath46 and @xmath47 .",
    "then , @xmath48 ' \\leq \\frac{[\\rho(1-x_i)]'}{[1-\\lambda^{-1}(x_i/\\xi)]'}\\ ] ] for @xmath49 .",
    "[ lemma_bound_two_curve_y]for @xmath50 , @xmath51'}}\\ ] ]    [ lemma_boundary ] if @xmath52 , then @xmath53      let us consider a bec with channel parameter @xmath4 .",
    "consider a sequence of degree distribution pairs : @xmath54 where @xmath55 @xmath56 are the left and right degree distributions respectively .",
    "each pair of degree distributions defines a code .",
    "let @xmath57 denote the average right degree for the @xmath58-th code .",
    "define @xmath59 .",
    "let @xmath60 denote the rate of the @xmath58-th code .",
    "let @xmath61 denote the gap between the capacity and the code rate for the @xmath58-th code , @xmath62 .",
    "then we have the following theorem .    if @xmath63 is strictly decreasing with @xmath64 .",
    "the gap @xmath61 is strictly decreasing and @xmath65 the successfully decoding condition holds : @xmath66\\ ] ] the maximal degrees of @xmath67 and @xmath68 are upper bounded by @xmath69 and @xmath70 respectively , where @xmath35 and @xmath36 are constants .",
    "then as @xmath71 , the derivative of @xmath72 with respect to @xmath32 converges to @xmath1 uniformly with respect to @xmath32 in the interval @xmath73 $ ] .",
    "[ theorem_flatness_main ]    the proof is in appendix [ proof_theorem_flatness_main ]    according to this theorem , the function @xmath74 becomes flat as the code rate approaches the channel capacity and the parity - check matrix density remains efficiently low . based on this conclusion , we prove the following theorem , which shows an asymptotic approximation to decoding convergence time @xmath75 .",
    "let @xmath30 be a fixed probability level , @xmath76 . if @xmath63 is strictly decreasing with @xmath77 .",
    "the gap @xmath61 is strictly decreasing and @xmath65 the successfully decoding condition holds : @xmath66\\ ] ] the maximal degrees of @xmath67 and @xmath68 are upper bounded by @xmath69 and @xmath70 respectively , where @xmath35 and @xmath36 are constants .",
    "then as @xmath71 , the ratio @xmath78 goes to @xmath1 .",
    "[ theorem_asym_approx ]    the proof is in appendix [ proof_theorem_asym_approx ] .    in the above theorems",
    ", we assume that @xmath61 decrease polynomially with respect to @xmath63 . according to section [ subsec_dc_tradeoff ] , in the most efficient tradeoffs",
    ", @xmath79 decreases exponentially with respect to @xmath63 .",
    "we conclude that this condition is generally satisfied in practical applications .",
    "a brutal force approach to finding the ldpc code with minimal decoding convergence time @xmath75 and a fixed gap to the capacity is solving the following constrain optimization problem : @xmath80 subject to @xmath81 \\label{direct_cons_prob_2}\\ ] ] @xmath82 @xmath83 where @xmath84 is the channel capacity , and @xmath85 is a fixed gap to the channel capacity . the condition in eqn .",
    "[ direct_cons_prob_2 ] is the successful decoding condition .",
    "the condition in eqn .",
    "[ direct_cons_prob_3 ] imposes that the code rate is @xmath86 .",
    "the constraints in eqn .",
    "[ direct_cons_prob_4 ] come from the probability nature of degree distributions .    however , the above optimization problem",
    "is not tractable .",
    "the objective function @xmath75 is not differentiable .",
    "this brings in convergence problems for optimization algorithms . to get around these difficulties , at this point",
    ", we invoke theorem [ theorem_asym_approx ] and replace @xmath75 by @xmath87 .",
    "this yields the following approximated optimization problem : @xmath88 subject to @xmath89 \\label{approx_cons_prob_2}\\ ] ] @xmath90 @xmath91 the numerical results confirm that the approximated optimization has nice numerical properties .",
    "in this section , we discuss the conditions for the optimal degree distributions in the sense of convergence speed .",
    "we show that the optimal codes are right - concentrated .      in practical applications ,",
    "the probability level @xmath30 is generally small .",
    "the number of decoding iterations while the erasure probability is in a low erasure probability region may constitute a large fraction of the decoding convergence time .",
    "that is , the decoding speed in the low erasure probability region dominates the overall decoding speed .",
    "we show in this section that if the average right degree is fixed , then the right - concentrated degree distributions have optimal decoding speed in the low erasure probability region .",
    "note that the relation between @xmath16 and @xmath92 can be also written as follows : @xmath93 @xmath94 where @xmath95 is a auxiliary variable .",
    "the iterative process of @xmath16 is illustrated in fig .",
    "[ fig_iter_process ] .",
    "to increase the decoding speed , we need to move the curve @xmath96 upward and the curve @xmath97 to the left . moving the curve @xmath96 upward",
    "is equivalent to making the function @xmath96 larger .",
    "moving the curve @xmath97 to the left is equivalent to making the function @xmath98 smaller . to have fast decoding speed in the low message erasure probability region",
    ", we need to make @xmath7 large for @xmath32 near @xmath1 and @xmath6 small for @xmath32 near @xmath0 .",
    "we need the following auxiliary lemma for proving the main theorem in this section .",
    "[ lemma_basic_degree_distribution1 ] let @xmath99 be a degree distribution with average degree @xmath21 and maximal degree @xmath100",
    ". assume @xmath101 and @xmath102 , for @xmath103 .",
    "then another degree distribution @xmath104 with the same average and maximal degrees can be constructed as follows : @xmath105 where @xmath106 is a sufficiently small positive real number such that @xmath104 is well defined .",
    "we also have @xmath107 @xmath108    the proof is in appendix [ proof_lemma_basic_degree_distribution1 ] .",
    "[ theorem_gamma_max ] let @xmath109 be an positive integer .",
    "let @xmath32 be an arbitrary real number , @xmath110 .",
    "then the degree distribution with average degree @xmath21 and maximal degree @xmath109 which maximizes the function @xmath99 is @xmath111 where @xmath112 is the largest integer smaller than @xmath21 .",
    "the proof is in appendix [ proof_theorem_gamma_max ] .",
    "the above theorems imply that the degree distributions with fast decoding speed at the low erasure probability region are right - concentrated .      in this section ,",
    "we discuss the condition for the optimal degree distributions in the approximated constraint optimization program in eqn .",
    "[ approx_cons_prob_1 ] , [ approx_cons_prob_2 ] , [ approx_cons_prob_3 ] , [ approx_cons_prob_4 ] .",
    "we have the following theorem , which shows that the optimal degree distributions are right - concentrated .",
    "let @xmath113 be the solution of the constrain optimization problem in eqns .",
    "[ approx_cons_prob_1 ] , [ approx_cons_prob_2 ] , [ approx_cons_prob_3 ] , [ approx_cons_prob_4 ] with fixed maximal left degree @xmath114 and maximal right degree @xmath115 . then    * if @xmath116 , then @xmath117 are non - zero only for two @xmath14 s . * if @xmath118 , then either @xmath119\\rightarrow 0\\ ] ] as @xmath120 or @xmath117 are non - zero only for two @xmath14 s when @xmath30 is sufficiently small .",
    "[ right_concen_main_thm ]    the proof is in appendix [ proof_right_concen_main_thm ] .",
    "in this section , we show several numerical design examples .",
    "we also compare the codes designed by the proposed approach to one well - known class of ldpc codes : the heavy - tail / poisson codes @xcite @xcite .     in the example 1,width=480 ]        in this example , we design a ldpc code for a bec with parameter @xmath121 .",
    "the code rate is @xmath122 .",
    "the left and right degree distributions are as follows : @xmath123 @xmath124 the function @xmath74 is shown in fig .",
    "[ aa1 ] as the solid line .",
    "the dashed line shows the straight line @xmath125 . for @xmath126 , the decoding convergence time @xmath127 in the corresponding density evolution . the asymptotic approximation @xmath128 .",
    "we construct practical codes according to the designed degree distributions .",
    "the codeword length is @xmath129 bits .",
    "the simulation results on message erasure probabilities are shown in fig .",
    "[ example1b ] .",
    "the message erasure probabilities after different numbers of iterations are shown as the dash - dot curve .",
    "the message erasure probabilities by density evolution are shown as the solid curve .     in the example 2,width=480 ]        in the second example , we consider the bec with parameter @xmath121 .",
    "the code rate is @xmath130 .",
    "we find the following left and right degree distributions : @xmath131 @xmath132 the function @xmath74 is shown in fig .",
    "[ aa2 ] as the solid line .",
    "the dash line shows the straight line @xmath125 . for @xmath126 , the decoding convergence time @xmath133 in the corresponding density evolution . the asymptotic approximation @xmath134 .",
    "we construct practical codes according to the above degree distributions .",
    "the simulation results on message erasure probabilities after different numbers of iterations are shown in fig .",
    "[ example2b ] as the dash - dot curve .",
    "the message erasure probabilities by density evolution are shown as the solid curve .",
    "the codeword length is @xmath129 bits .     in the example",
    "3,width=480 ]        in the third example , we design codes for the bec with parameter @xmath135 .",
    "the code rate is @xmath136 .",
    "the left and right degree distributions are as follows : @xmath137 @xmath138 the function @xmath74 is shown in fig .",
    "[ aa3 ] as the solid curve .",
    "the dash line shows the straight line @xmath125 . for @xmath126 , the decoding convergence time @xmath139 in the corresponding density evolution . the asymptotic approximation @xmath140 .",
    "the simulation results on the message erasure probabilities after different numbers of iterations are shown in fig .",
    "[ example3b ] .",
    "the message erasure probabilities in the density evolution are shown as the solid curve .",
    "the codeword length is @xmath129 bits .        in this example",
    ", we compare the codes designed by the proposed approach with the heavy - tail / possion codes .",
    "we consider a bec with channel parameter @xmath141 .",
    "two codes with half rate and maximal degree @xmath142 are designed .",
    "the left and right degree distributions of the heavy - tail / possion codes are as follows @xcite : @xmath143 @xmath144 the left and right degree distributions by the proposed design approach are as follows : @xmath145 @xmath146 the decoding convergence time @xmath29 , @xmath126 , is @xmath147 for the code by the proposed approach and @xmath148 for the heavy - tail / possion codes .",
    "the message erasure probabilities of the two codes by density evolution are show in fig .",
    "[ example4 ] .",
    "the dash - dot curve shows the message erasure probabilities for the heavy - tail / poisson code .",
    "the solid curve shows the message erasure probabilities for the code by the proposed approach .",
    "these numerical results confirm our theoretical results that the derivatives of @xmath74 with respect to @xmath32 are close to @xmath1 for density - efficient capacity - approaching codes .",
    "the asymptotic approximation @xmath87 is generally tight .",
    "the proposed approach yields codes with good decoding speed .",
    "the optimal codes are right - concentrated .",
    "in this paper , we present a framework for designing ldpc codes with fast decoding speed .",
    "both the theoretical discussion and numerical results show that density - efficient capacity - approaching codes satisfy the flatness condition .",
    "asymptotically the decoding convergence time @xmath75 can be approximated by @xmath87 .",
    "the asymptotic approximation is generally tight for practical scenarios .",
    "the optimal degree distributions in the sense of decoding speed are right - concentrated .",
    "the lower bound of @xmath149'$ ] follows from the fact that @xmath150 ' & = & \\sum_{j=2}^{k_ca}\\rho_j(j-1)(1-x)^{j-2 } \\nonumber \\\\ & \\geq & \\sum_{j=2}^{k_ca}\\rho_j(1-x)^{j-2 } \\nonumber \\\\ & \\geq & \\sum_{j=2}^{k_ca}\\rho_j(1-x)^{j-1}=\\rho(1-x ) \\nonumber \\\\\\end{aligned}\\ ] ] note that the maximal right degree is bounded by @xmath34 .",
    "the upper bound follows from @xmath150 ' & = & \\sum_{j=2}^{k_ca}\\rho_j(j-1)(1-x)^{j-2 } \\nonumber \\\\ & \\leq & ( k_ca)\\sum_{j=2}^{k_ca}\\rho_j(1-x)^{j-2 } \\nonumber \\\\ & \\leq & \\frac{k_ca}{1-x}\\sum_{j=2}^{k_ca}\\rho_j(1-x)^{j-1 } \\nonumber \\\\ & \\leq & \\frac{k_ca}{1-\\xi}\\sum_{j=2}^{k_ca}\\rho_j(1-x)^{j-1 } \\nonumber \\\\ & = & \\frac{k_ca}{1-\\xi}\\rho(1-x)\\end{aligned}\\ ] ]",
    "using the change of variable @xmath151 , we have @xmath152 using the change of variable @xmath153 , we have @xmath154 the lemma follows .",
    "let @xmath182 .",
    "let @xmath183 , @xmath184 , we have the following taylor series expansion @xmath185 '   -   \\left[\\rho(1-x_0)\\right]'\\right\\}(x - x_0)+ } \\notag \\\\   & { \\left\\{\\left[1-\\lambda^{-1}(\\zeta/\\xi)\\right ] '' -\\left[\\rho(1-\\zeta)\\right]''\\right\\ } \\frac{(x - x_0)^2}{2 } } \\label{long_eqn_4}\\end{aligned}\\ ] ] where @xmath186 is a real number between @xmath156 and @xmath32 . according to the hypotheses , @xmath187 .",
    "this implies @xmath188 , and @xmath189 '   -   \\left[\\rho(1-x_0)\\right]'\\right\\}(x - x_0)+ } \\notag \\\\   & { \\left\\{\\left[1-\\lambda^{-1}(\\zeta/\\xi)\\right ] '' -\\left[\\rho(1-\\zeta)\\right]''\\right\\ } \\frac{(x - x_0)^2}{2}<0 } \\label{long_eqn_4}\\end{aligned}\\ ] ]    note that @xmath190''>0 $ ] , we therefore have the following more convenient inequality : @xmath191 ' -\\left[\\rho(1-x_0)\\right]'\\right\\}(x - x_0 ) } \\notag \\\\ & { -\\left[\\rho(1-\\zeta)\\right ] '' \\frac{(x - x_0)^2}{2}<0 } \\label{long_eqn_5}\\end{aligned}\\ ] ]    set @xmath192 in the above inequality , with a little algebra we have @xmath193'}{[\\rho(1-x_0)]'}-1 \\right\\ } \\geq \\frac{b^2[\\rho(1-\\zeta)]''}{2[\\rho(1-x_0 ] ' } + \\frac{\\left[\\lambda^{-1}(x_0/\\xi)+\\rho(1-x_0)-1\\right]}{b^2[\\rho(1-x_0)]'}\\ ] ] to prove the lower bound in the lemma , we will bound the two terms in the right hand side of eqn .",
    "[ lemma_37_eqn_lower_bound ] separately .",
    "we bound the first term as follows .",
    "since @xmath194''$ ] is a monotonous decreasing function , @xmath195 ''   \\leq   [ \\rho(1-x_0)]''\\ ] ] apply the bound in proposition [ pro2 ] , we hve @xmath196 ''   \\leq \\frac{(-1)k_ca}{(1-\\xi)}[\\rho(1-x_0)]'\\end{aligned}\\ ] ] thus , the first term in the right hand side of eqn .",
    "[ lemma_37_eqn_lower_bound ] can be lower bounded @xmath197''}{2[\\rho(1-x_0 ] ' }   \\geq \\frac{-k_cb}{2(1-\\xi ) } \\label{lemma_37_result2}\\ ] ]    we bound the second term in the right hand side of eqn .",
    "[ lemma_37_eqn_lower_bound ] as follows .",
    "the second term in the right hand side of eqn . [ lemma_37_eqn_lower_bound ] can be rewritten as follows : @xmath198 ' }   = } \\notag \\\\   & { ( -a^2)\\left\\{\\frac{\\rho(1-x_0)-1+\\lambda^{-1}(x_0/\\xi)}{\\rho(1-x_0)}\\right\\ } \\left\\{\\frac{\\rho(1-x_0)}{(-1)[\\rho(1-x_0)]'}\\right\\ } } \\end{aligned}\\ ] ] according to lemma [ lemma_rho_lemma_diff_bound ] , @xmath199 according to proposition [ pro1 ] @xmath200'}\\right\\}\\leq 1\\ ] ] hence , the second term in the right hand side of eqn . [ lemma_37_eqn_lower_bound ] can be lower bounded as follows .",
    "@xmath201'b^2 } \\geq -\\sqrt{k_c}b(\\delta r , b , x)a^2 \\label{lemma_37_result1}\\ ] ]    substituting eqns",
    ". [ lemma_37_result1 ] and [ lemma_37_result2 ] into eqn .",
    "[ lemma_37_eqn_lower_bound ] gives the lower bound in the lemma .",
    "we will prove the upper bound in the lemma .",
    "set @xmath202 in eqn .",
    "[ long_eqn_5 ] , with a little algebra we have @xmath203'}{[\\rho(1-x_0)]'}-1    \\leq & { \\frac{1-\\lambda^{-1}(x_0/\\xi)-\\rho(1-x_0)}{b^5[\\rho(1-x_0 ) ] ' } } \\notag \\\\ & { +   \\frac{-b^5[\\rho(1-\\zeta)]''}{2[\\rho(1-x_0 ) ] ' } } \\label{eqn_bound1}\\end{aligned}\\ ] ] since of lemma [ lemma_rho_lemma_diff_bound ] and proposition [ pro1 ] , the first term at the right hand side of eqn .",
    "[ eqn_bound1 ] can be bounded @xmath204'b^5 }",
    "\\leq &   { \\frac{a^5\\sqrt{k_c}b(\\delta r , b , x)\\rho(1-x_0)}{(-1)[\\rho(1-x_0 ) ] ' } }   \\notag \\\\",
    "\\leq & { \\sqrt{k_c}b(\\delta r , b , x)a^5 }    \\label{lemma_37_result3}\\end{aligned}\\ ] ] note that the maximal right degree is bounded by @xmath34 .",
    "hence @xmath196 ''   \\leq & { [ \\rho(1-x_0)]''\\left[\\frac{1-\\zeta}{1-x_0}\\right]^{k_ca-2 } } \\notag \\\\   \\leq & { [ \\rho(1-x_0)]''\\left[\\frac{1-x_0+b^5}{1-x_0}\\right]^{k_ca-2 } } \\notag \\\\   \\leq   & { [ \\rho(1-x_0)]''\\left[1+\\frac{b^5}{1-\\xi}\\right]^{k_ca}}\\end{aligned}\\ ] ] by bounding @xmath205''$ ] as in proposition [ pro2 ] , the second term at the right hand side of eqn . [ eqn_bound1 ] can be bounded by @xmath206''b^5}{2[\\rho(1-x_0 ) ] ' } \\leq \\frac{k_cb^4}{2(1-\\xi ) }   \\left(1+\\frac{b^5}{1-\\xi}\\right)^{k_ca } \\label{lemma_37_result4}\\ ] ] substituting eqns .",
    "[ lemma_37_result3 ] and [ lemma_37_result4 ] into eqn .",
    "[ eqn_bound1 ] gives the upper bound in the lemma .       and",
    "@xmath155.,width=480 ]    denote @xmath32 by @xmath156 for convenience .",
    "define @xmath210 @xmath211 @xmath212'\\ ] ] the geometric meaning of @xmath156 , @xmath155 , @xmath213 , and @xmath214 is shown in fig .",
    "[ proof_demo4 ] .",
    "the point @xmath215 is the intersection of the vertical straight line @xmath216 and the straight line tangent to the curve @xmath96 at the point @xmath217 .",
    "the area of the shadowed region in fig . [ proof_demo4 ] is @xmath218'(x_0-x_1)^2\\ ] ] the shadowed region in fig .",
    "[ proof_demo4 ] is smaller than the shadowed region in fig .",
    "[ proof_demo2 ] , @xmath218'(x_0-x_1)^2 \\leq \\frac{b \\delta r}{\\xi+\\delta r}\\ ] ] the lemma follows .      , width=480 ]",
    "define @xmath219 @xmath211 @xmath220'}\\ ] ] since @xmath52 , @xmath221'}\\geq x_0 + \\frac{(1-\\xi)y_0 b}{k_c\\rho(1-x_0 ) } } \\notag \\\\",
    "\\geq & { x_0+\\frac{(1-\\xi)b}{k_c } >   \\xi}\\end{aligned}\\ ] ] the geometric meaning of @xmath155 is shown in fig .",
    "[ proof_demo3 ] .",
    "the point @xmath222 is the intersection of the @xmath32-axis and the straight line tangent to the curve @xmath160 at the point @xmath217 .",
    "the shadowed region in fig .",
    "[ proof_demo3 ] is smaller than the shadowed region in fig .",
    "[ proof_demo2 ] . for the area of the shadowed triangle region in fig .",
    "[ proof_demo3 ] , the width is @xmath223 , the height is @xmath224 , and the area is @xmath225 since this area is monotonously increase with respect to @xmath155 , applying the bound for @xmath155 in eqn .",
    "[ bound_for_x1 ] , we have the following lower bound of the area @xmath226 this lower bound is less than the area of the shadowed region in fig .",
    "[ proof_demo2 ] @xmath227 the lemma follows .",
    "and @xmath155,width=480 ]        let us denote @xmath32 by @xmath156 for convenience and define @xmath157 @xmath158'}\\ ] ] the geometric meaning of @xmath155 is shown in fig .",
    "[ proof_demo1 ] .",
    "the number @xmath155 is the @xmath32 coordinate of the intersection point of the horizontal line @xmath159 and the straight line tangent to the curve @xmath160 at the point @xmath161 .",
    "the shadowed region in fig .",
    "[ proof_demo1 ] is smaller than the shadowed region in fig .",
    "[ proof_demo2 ] .",
    "the area of the shadowed region in fig .",
    "[ proof_demo1 ] is @xmath162 ^ 2}{2[\\rho(1-x_0)]'}\\ ] ] the area of the shadowed region in fig .",
    "[ proof_demo2 ] is @xmath163dx=\\frac{b\\delta r}{\\xi+\\delta r}\\ ] ] hence @xmath164'}{(\\xi+\\delta r)\\left[\\rho(1-x_0)\\right]^2}\\ ] ] we further bound @xmath165'$ ] as in proposition [ pro1 ] .",
    "this gives us the following bound @xmath166 the lemma follows .",
    "we can write @xmath167''$ ] as follows : @xmath168 '' = } \\notag \\\\ & { \\left[\\sum_{i= 3}^{k_va}\\lambda_i ( i-1)(i-2)\\left[1-\\sum_j\\rho_j(1-x)^{j-1}\\right]^{i-3}\\right ] \\times } \\notag \\\\ & { \\left[\\sum_j\\rho_j(j-1)(1-x)^{j-2}\\right]^2 - } \\notag \\\\ & { \\left[\\sum_i\\lambda_i(i-1 ) \\times \\left[1-\\sum_j\\rho_j(1-x)^{j-1}\\right]^{i-2}\\right ] \\times } \\notag \\\\ & { \\left[\\sum_{j=3}^{k_ca}\\rho_j   ( j-1)(j-2)(1-x)^{j-3}\\right ] } \\label{long_eqn_1}\\end{aligned}\\ ] ] hence , we have the following bound : @xmath169''\\right| \\leq } \\notag \\\\ & { \\left[\\sum_{i= 3}^{k_va}\\lambda_i ( i-1)(i-2)\\left[1-\\sum_j\\rho_j(1-x)^{j-1}\\right]^{i-3}\\right ] \\times } \\notag \\\\ & { \\left[\\sum_j\\rho_j(j-1)(1-x)^{j-2}\\right]^2 + } \\notag \\\\ & { \\left[\\sum_i\\lambda_i(i-1 ) \\times \\left[1-\\sum_j\\rho_j(1-x)^{j-1}\\right]^{i-2}\\right ] \\times } \\notag \\\\ & { \\left[\\sum_{j=3}^{k_ca}\\rho_j   ( j-1)(j-2)(1-x)^{j-3}\\right ] } \\label{long_eqn_1}\\end{aligned}\\ ] ]    applying the following bounding , @xmath170 @xmath171 @xmath172 @xmath173 we have @xmath174''\\right|   \\leq   k_v^2 k_c^2 a^4 \\times } \\notag \\\\ & { \\left[\\sum_{i= 3}^{k_va}\\lambda_i \\left[1-\\sum_j\\rho_j(1-x)^{j-1}\\right]^{i-3}\\right ] \\left[\\sum_j\\rho_j(1-x)^{j-2}\\right]^2 } \\notag \\\\ & { +   k_vk_c^2 a^3\\left[\\sum_i\\lambda_i   \\left[1-\\sum_j\\rho_j(1-x)^{j-1}\\right]^{i-2}\\right ] } \\times \\notag \\\\ & { \\left[\\sum_{j= 3}^{k_ca}\\rho_j   ( 1-x)^{j-3}\\right ] } \\label{long_eqn_2}\\end{aligned}\\ ] ]    note that @xmath175^{i-3}\\right]\\leq 1\\ ] ] @xmath176^{i-2}\\right ] \\leq 1\\ ] ] we have @xmath177''\\right|   \\leq   k_v^2 k_c^2 a^4 \\left[\\sum_j\\rho_j(1-x)^{j-2}\\right]^2 + } \\notag \\\\ & { k_v k_c^2 a^3\\left[\\sum_{j= 3}^{k_ca}\\rho_{j }   ( 1-x)^{j-3}\\right ] } \\label{long_eqn_3}\\end{aligned}\\ ] ]    further apply the following upper bounds for @xmath178 and @xmath179 @xmath180 @xmath181 we have @xmath41''\\right| \\leq \\frac{k_v^2k_c^2\\rho(1-x)^2a^4}{(1-\\xi)^2}+ \\frac{k_vk_c^2\\rho(1-x)a^3}{(1-\\xi)^2}\\ ] ]      notice that @xmath48 ' = \\frac{[\\rho(1-x_0 ) ] ' } { [ 1-\\lambda^{-1 } ( x_1/\\xi)]'}\\ ] ] since @xmath194'$ ] and @xmath207'$ ] are monotonously increasing , @xmath208'}{[1-\\lambda^{-1}(x_1/\\xi ) ] ' } \\geq \\frac{[\\rho(1-x_0)]'}{[1-\\lambda^{-1}(x_1/\\xi)]'}\\ ] ] @xmath209'}{[1-\\lambda^{-1}(x_0/\\xi ) ] ' } \\geq \\frac{[\\rho(1-x_0)]'}{[1-\\lambda^{-1}(x_1/\\xi)]'}\\ ] ] the lemma follows .",
    "the proof is divided into three steps .        we claim that the partition is well - defined for sufficiently large @xmath58 .",
    "that is , @xmath233 for sufficiently large @xmath58 .",
    "note that @xmath234 lower bounding @xmath235^{j-1}$ ] by @xmath236^{k_ca_n-1}$ ] , we have @xmath237^{k_ca_n-1}\\ ] ] this lower bound of @xmath238 goes to @xmath1 , as @xmath58 goes to infinity .",
    "hence @xmath239 on the other hand , @xmath240 since @xmath241 is a monotonously decreasing function , we conclude that @xmath233 for sufficiently large @xmath58",
    ".        we will show that the function @xmath246'$ ] is upper bounded and this upper bound goes to @xmath1 uniformly as @xmath58 goes to infinity . according to lemma [ lemma_bound_derivatives ] , @xmath247'\\leq \\frac{[\\rho_n(1-x ) ] ' } { [ 1-\\lambda_n^{-1}(x/\\xi)]'}\\ ] ] according to lemma [ lemma_bound_ratio_derivatives ] , @xmath248'}{[\\rho_n(1-x)]'}\\geq 1- \\frac{k_cb_n}{2(1-\\xi)}-\\sqrt{k_c}b(\\delta r_n , b_n , x)(1-\\xi)(a_n)^2\\ ] ] also note that @xmath249 @xmath250 we conclude that @xmath251'}{[\\rho_n(1-x ) ] ' }   \\geq   1+o(b_n)\\end{aligned}\\ ] ] therefore , the function @xmath246'$ ] is upper bounded , @xmath252'\\leq \\frac{1}{1+o(b_n)}\\ ] ] this upper bound goes to @xmath1 as @xmath58 goes to infinity .",
    "we claim that for @xmath253 $ ] , @xmath254 hence for @xmath253 $ ] , @xmath255 for sufficiently large @xmath58 .",
    "denote @xmath72 by @xmath95 . according to lemma [ lemma_bound_two_curve_y ] , @xmath256'}}\\end{aligned}\\ ] ] bounding @xmath257'$ ] as in proposition [ pro1 ]",
    ", we have @xmath258}}\\end{aligned}\\ ] ] note that @xmath259 @xmath249 we have @xmath260 therefor for sufficiently large @xmath58 , @xmath261    we will show that the function @xmath246'$ ] is also lower bounded and this lower bound converges to @xmath1 as @xmath58 goes to infinity .",
    "note that @xmath262 '   = & { \\frac{[\\rho_n(1-x)]'}{[1-\\lambda_n^{-1}(y/\\xi ) ] ' } } \\notag \\\\",
    "= &   { \\left\\{\\frac{[\\rho_n(1-y)]'}{[1-\\lambda_n^{-1}(y/\\xi)]'}\\right\\ } \\left\\{\\frac{[\\rho_n(1-x)]'}{[\\rho_n(1-y)]'}\\right\\}}\\end{aligned}\\ ] ] where @xmath263 . for sufficiently large @xmath58 , we bound the second term as follows : @xmath264'}{[\\rho_n(1-y)]'}\\geq \\left(\\frac{1-x}{1-y}\\right)^{k_ca_n-1 } \\geq \\left(\\frac{1-x}{1-x+b_n^{5.3}}\\right)^{k_ca_n-1}\\ ] ] we have the following lower bound for @xmath246'$ ] @xmath252 \\geq \\frac{[\\rho_n(1-y)]'}{[1-\\lambda_n^{-1}(y/\\xi ) ] ' } \\left(\\frac{1-x}{1-x+b_n^{5.3}}\\right)^{k_ca_n-1}\\ ] ] since @xmath265 , according to lemma [ lemma_bound_ratio_derivatives ] we have , @xmath266 ' } { [ 1-\\lambda_n^{-1}(y/\\xi)]'}\\rightarrow 1 \\mbox { as } n\\rightarrow \\infty\\ ] ] also @xmath267 as @xmath71 .",
    "we conclude that this lower bound for @xmath246'$ ] converges to @xmath1 as @xmath58 goes to infinity .        for @xmath270 , according to lemma [ lemma_bound_recursive_eqn ] , @xmath271''\\right|\\leq \\frac{k_v^2 k_c^2 \\left[\\rho_n(1-x)\\right]^2a_n^4}{(1-\\xi)^2 }   + \\frac{k_vk_c^2 \\rho_n(1-x)a_n^3}{1-\\xi }   \\leq o(a_n^4)\\ ] ] while the length of this interval is @xmath272 .",
    "hence @xmath246'$ ] converges to @xmath1 uniformly for @xmath270 .    for @xmath273 , according to lemma [ lemma_bound_recursive_eqn ] , @xmath271''\\right|\\leq \\frac{k_v^2 k_c^2 \\left[\\rho_n(1-x)\\right]^2a_n^4}{(1-\\xi)^2 }   + \\frac{k_vk_c^2 \\rho_n(1-x)a_n^3}{1-\\xi }    = o(b_n^2);\\ ] ] while the length of this interval is bounded by @xmath1 .",
    "hence @xmath246'$ ] also converges to @xmath1 uniformly in the interval @xmath274 .",
    "the theorem is proven .          according to theorem [ theorem_flatness_main ] ,",
    "the derivative of @xmath276 converge uniformly to @xmath1 for @xmath277 $ ] as @xmath58 goes to infinity .",
    "there exists an @xmath278 such that @xmath279'\\right|\\leq \\epsilon_n\\ ] ] for @xmath183 and @xmath280 as @xmath281 .      * step ( a ) , set @xmath289 , @xmath290 .",
    "* step ( b ) , set @xmath291 , \\frac{\\xi}{2 } \\right \\ } \\nonumber \\\\\\end{aligned}\\ ] ] @xmath292 * step ( c ) , if @xmath293 , set @xmath294 , @xmath295 and stop .",
    "otherwise , set @xmath296 , go to step ( b ) .      for each interval @xmath286",
    ", the length of the interval is at most @xmath298\\ ] ] hence , @xmath299 \\\\   \\geq   [ x_k-\\xi\\lambda_n(1-\\rho_n(1-x_k ) ) ] [ 1-\\sqrt{\\epsilon_n}]\\end{aligned}\\ ] ] @xmath300 \\nonumber \\\\ \\leq [ x_k-\\xi\\lambda_n(1-\\rho_n(1-x_k ) ) ] [ 1+\\sqrt{\\epsilon_n}]\\end{aligned}\\ ] ] therefore , we have the following upper bound @xmath297 } { \\min_{x\\in(x_k , x_{k+1})}[x-\\xi\\lambda_n(1-\\rho_n(1-x ) ) ] } \\leq \\frac{1+\\sqrt{\\epsilon_n}}{1-\\sqrt{\\epsilon_n } } \\label{max_min_ratio_bound}\\ ] ]      denote the message erasure probability at @xmath17-th iteration by @xmath16 .",
    "let @xmath302 be the number of @xmath16 such that @xmath303 .",
    "note that the message erasure probability decreases at least @xmath304\\ ] ] and at most @xmath305\\ ] ] during each iteration .",
    "hence , the following inequalities hold @xmath306\\ ] ] @xmath307\\ ] ] it follows that @xmath308}-1 \\nonumber \\\\\\end{aligned}\\ ] ] @xmath309}+1 \\nonumber \\\\\\end{aligned}\\ ] ] according to the bounds in eqn .",
    "[ max_min_ratio_bound ] , we have @xmath310}-1 \\nonumber \\\\ \\label{eqn_t_k_bound1}\\end{aligned}\\ ] ] @xmath311}+1 \\nonumber \\\\\\end{aligned}\\ ] ] note that @xmath312 , we have @xmath313 @xmath314 therefore , we have the following bounds for the ratio @xmath315 @xmath316        we claim that @xmath319 according to eqn .",
    "[ eqn_t_k_bound1 ] @xmath320 - 1 \\nonumber \\\\\\end{aligned}\\ ] ] hence @xmath321 - 1 \\nonumber \\\\\\end{aligned}\\ ] ] note that @xmath322 from the above , we conclude that the claim is true .",
    "we prove the theorem by contradiction .",
    "assume that the degree distribution @xmath99 is nonzero for more than three indices or is nonzero for two non - consecutive indices .",
    "then , either one of the following two cases happens .",
    "note that @xmath339 according to lemma [ lemma_basic_degree_distribution1 ] , we can constructed another degree distribution @xmath104 such that @xmath340 .",
    "this contradict to the hypothesis that @xmath99 is optimal .",
    "the conditions of lemma [ lemma_basic_degree_distribution1 ] is also satisfied in this case .",
    "define @xmath347 for each @xmath345 , @xmath346 , as : @xmath348 we can find real numbers @xmath349 such that @xmath350 , for @xmath346 , and the polynomial @xmath351 is a valid degree distribution .",
    "the degree distribution @xmath104 has average right degree @xmath21 . since @xmath352 for each @xmath345 , we have @xmath333 this contradict to the hypothesis that @xmath99 is optimal .          according to the karush - kuhn - tucker condition @xcite , @xmath358 satisfy the following equation , for all @xmath14 with nonzero @xmath358 , @xmath359 + \\beta\\left[\\frac{\\partial}{\\partial \\rho_j}\\sum_j \\rho_j\\right]=0\\ ] ] where @xmath360 , @xmath106 are constants .",
    "this is equivalent to @xmath361 after finding the derivative of @xmath87 , we can rewrite the above equation as follows : @xmath362 where @xmath363^{i-2}\\right\\ } } { \\left\\{x-\\xi\\sum_i\\left[\\lambda_i\\left(1-\\sum_j\\rho_j(1-x)^{j-1}\\right)^{i-1 } \\right]\\right\\}^2}\\ ] ]    in case 1 , @xmath364 is a concave function with respect to @xmath14 .",
    "hence @xmath365 is also concave with respect to @xmath14 .",
    "there exist at most two @xmath14 s which satisfy eqn .",
    "[ condition_optimal ] .",
    "the theorem is proven in this case .",
    "note that @xmath367= } \\notag \\\\ & { \\frac{\\partial^2}{\\partial j^2}\\left[\\int_{\\eta}^{1-\\exp(-2/d_c ) } g(x ) j(1-x)^{j-1 } dx \\right]+ \\frac{\\partial^2}{\\partial j^2}\\left[\\int_{1-\\exp(-2/d_c)}^{\\xi } g(x ) j(1-x)^{j-1 } dx \\right ] } \\label{two_part_formula}\\end{aligned}\\ ] ] we will show that the first term at the right hand side of eqn .",
    "[ two_part_formula ] goes to @xmath368 as @xmath30 goes to zero and the second term is bounded . when @xmath30 is sufficiently small , @xmath369 $ ] is negative for @xmath370 .",
    "hence @xmath365 is concave with respect to @xmath14 .",
    "there exist at most two @xmath14 s which satisfy eqn .",
    "( [ condition_optimal ] ) . the theorem is proven .",
    "we first show the bounding of the second term .",
    "assume for @xmath371 @xmath372\\geq { \\cal m}\\ ] ] for @xmath373 , we can bound @xmath374 as follows : @xmath375 } { \\left\\{x-\\xi\\sum_i\\lambda_i\\left[1-\\sum_j\\rho_j(1-x)^{j-1}\\right]^{i-1}\\right\\}^2 } \\leq \\frac { \\xi d_c}{{\\cal m}^2}\\ ] ] hence , we have the following bound : @xmath376\\right|\\leq \\frac { \\xi d_c}{{\\cal m}^2 } \\left|\\int_{1-\\exp(-2/d_c)}^{\\xi } \\frac{\\partial^2}{\\partial j^2}\\left[j(1-x)^{j-1}\\right ] dx \\right|\\ ] ] we can further bound @xmath377 $ ] as follows : @xmath378 & { = \\left|(1-x)^{j-1}\\log(1-x)[2+j\\log(1-x)]\\right| } \\notag \\\\ & { \\leq \\left |\\log(1-\\xi)\\right|(2+d_c\\left|\\log(1-\\xi)\\right| ) } \\end{aligned}\\ ] ] hence , we have the following bound : @xmath379\\right|\\leq \\frac { \\xi d_c}{{\\cal m}^2 } ( \\xi-1-\\exp(-2/d_c ) ) \\left      according to theorem [ theorem_flatness_main ] , as @xmath380 , @xmath381^{i-1}\\right\\}^2 \\leq o(x^2)\\ ] ] @xmath382^{i-1}=o(x)\\ ] ] we also have @xmath383   = ( 1-x)^{j-1}\\log(1-x)\\left[2+j\\log(1-x)\\right]= o(x)\\ ] ] @xmath384 = o(x)\\ ] ] therefore @xmath385\\right\\ } = &   { \\frac { \\left\\{\\xi \\sum_i \\lambda_i ( i-1 ) \\left[1-\\sum_j\\rho_j(1-x)^{j-1}\\right]^{i-2}\\right\\}\\frac{\\partial ^2}{\\partial j^2}\\left[j(1-x)^{j-1}\\right ] } { \\left\\{x-\\xi\\sum_i\\lambda_i\\left[1-\\sum_j\\rho_j(1-x)^{j-1}\\right]^{i-1}\\right\\}^2 } } \\notag \\\\",
    "\\geq &   { \\frac{o(x)o(x)}{o(x^2)\\left[1-\\sum_j\\rho(1-x)^{j-1}\\right ] }   =   \\frac{1}{o(x)}}\\end{aligned}\\ ] ] this implies that @xmath386\\rightarrow \\infty\\ ] ] as @xmath120 .",
    "when @xmath30 is sufficiently small , @xmath365 is concave with respect to @xmath14 .",
    "there exist at most two @xmath14 s which satisfy eqn .",
    "( [ condition_optimal ] ) .",
    "the theorem is proven .",
    "s. chung , g. forney jr .",
    "richardson and r. urbanke , `` on the design of low - density parity - check codes within 0.0045 db of the shannon limit '' , _ ieee communication letters _ , vol . 5 , no .",
    "58 - 60 , feb 2001 .",
    "i. sason and r. urbanke , `` parity - check density versus performance of binary linear block codes over memoryless symmetric channels '' , _ ieee transactions on information theory _ , vol .",
    "49 , no . 7 , pp .",
    "1611 - 1635 , july 2003 ."
  ],
  "abstract_text": [
    "<S> low - density parity - check ( ldpc ) codes received much attention recently due to their capacity - approaching performance . </S>",
    "<S> the iterative message - passing algorithm is a widely adopted decoding algorithm for ldpc codes  @xcite . </S>",
    "<S> an important design issue for ldpc codes is designing codes with fast decoding speed while maintaining capacity - approaching performance . in another words , it is desirable that the code can be successfully decoded in few number of decoding iterations , at the same time , achieves a significant portion of the channel capacity . despite of its importance , this design issue received little attention so far . in this paper </S>",
    "<S> , we address this design issue for the case of binary erasure channel .    </S>",
    "<S> we prove that density - efficient capacity - approaching ldpc codes satisfy a so called `` flatness condition '' . </S>",
    "<S> we show an asymptotic approximation to the number of decoding iterations . based on these facts , we propose an approximated optimization approach to finding the codes with good decoding speed . </S>",
    "<S> we further show that the optimal codes in the sense of decoding speed are `` right - concentrated '' . </S>",
    "<S> that is , the degrees of check nodes concentrate around the average right degree .    </S>",
    "<S> low - density parity - check code , decoding convergence time , density evolution , binary erasure channel </S>"
  ]
}
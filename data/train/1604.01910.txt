{
  "article_text": [
    "spline - like surfaces that consist of geometrically continuous or visually smooth triangular interpolants ( i.e. , interpolating triangular surface patches that have continuous tangent plane along their common boundary curves ) are important in approximation theory , in computer - aided geometric design and in computer graphics as well . without providing an exhaustive survey",
    ", we cite some related publications :    * in @xcite each surface segment is defined over a triangle such that it matches a group of transfinite data formed by three boundary curves and associated vector fields of normals ; * in @xcite the author proposes a @xmath1 triangular spline surface of arbitrary topological type that consists of sextic triangular bzier patches ; * in @xcite the authors fit a given triangular network of cubic bzier curves with a composite @xmath1 continuous surface that consists of rational polynomial triangular patches , by constructing at first tangent ribbons along each boundary curve then by defining surface patches with cross - boundary directional derivatives that lie in common planes along the shared joints ; * in @xcite the authors use the point - normal interpolation method of @xcite in the context of so - called triangular pn patches that are used to improve the visual quality of existing triangle - based art in real - time entertainment ( such as computer games ) , by replacing flat triangles with cubic bzier patches that ensure a quadratic normal vector variation for gouraud shading ; * in @xcite the authors present a polynomial method for the approximation of implicit surfaces by @xmath1 triangular spline surfaces that is capable of interpolating positions , normals and normal curvatures at the vertices of a triangular mesh which is a piecewise linear homeomorphic approximation of the given implicit surface ( the @xmath1 continuity constraints are ensured by solving equality - constrained least squares fitting problems ) ; * in @xcite the authors also rely on @xcite in order to build patch boundaries as bzier curves , then they propose special @xmath1 smoothness conditions for rectangular and triangular gregory patches @xcite that can be incorporated into a surface fitting algorithm , by estimating tangent ribbons along the boundary curves and enforcing @xmath1 continuity across interior boundary curves by means of underdetermined linear systems .",
    "our approach originates in the transfinite triangular interpolant of @xcite and relies on quadratic energy functional optimizations in order to generate visually smooth quasi - optimal triangular spline surfaces ( the similarities and main differences will be detailed in section [ sec : generalized_g1_nielson_patches ] ) .",
    "consider the triangular mesh @xmath2 that consists of the unique vertices @xmath3 and counterclockwise oriented triangular faces ( i.e. , triplets of vertex nodes ) @xmath4 where @xmath5 denotes the set of oriented ( half-)edges . as an example , fig.[fig : mesh_normals_tangents](_a _ ) illustrates such a triangular mesh .",
    "[ h ]     consisting of unique vertices and counterclockwise oriented faces .",
    "( _ b_)(_c _ ) angle - weighted averaged unit normal vectors and approximated unit tangent vectors translated to the corresponding mesh vertices .",
    "( @xmath6 , @xmath7 ) ]    based on the connectivity information stored in @xmath8 one is able to determine the angle - weighted @xcite averaged unit normal vectors @xmath9 that can be associated with the corresponding vertices of @xmath10 as it is shown in fig.[fig : mesh_normals_tangents](_b _ ) .",
    "now , consider an arbitrarily selected directed edge @xmath11 and based on vectors@xmath12{cclcccl}\\mathbf{f}_{i } & = & -\\mathbf{n}_{i } , &   & \\mathbf{f}_{j } & = & -\\mathbf{n}_{j},\\\\ &   &   &   &   &   & \\\\ \\mathbf{b}_{i , j } & = & \\dfrac{\\left (   \\mathbf{p}_{j}-\\mathbf{p}_{i}\\right )      \\times\\mathbf{f}_{i}}{\\left\\vert \\left (   \\mathbf{p}_{j}-\\mathbf{p}_{i}\\right )      \\times\\mathbf{f}_{i}\\right\\vert } , &   & \\mathbf{b}_{j , i } & = & \\dfrac{\\left (      \\mathbf{p}_{i}-\\mathbf{p}_{j}\\right )   \\times\\mathbf{f}_{j}}{\\left\\vert \\left (      \\mathbf{p}_{i}-\\mathbf{p}_{j}\\right )   \\times\\mathbf{f}_{j}\\right\\vert } \\end{array}\\ ] ] determine the unit tangents @xmath13 that can be associated with vertices @xmath14 and @xmath15 , respectively .",
    "[ fig : mesh_normals_tangents](_c _ ) shows all these approximated unit tangent vectors .",
    "observe that the normal vector @xmath16 is orthogonal to all tangent vectors emanating from the vertex @xmath14 , i.e. , all tangent vectors emanating from a given vertex lie in the same approximated tangent plane .",
    "the rest of the manuscript is organized as follows .    by means of the unique non - negative normalized b",
    "- bases of different types of reflection invariant extended chebyshev vector spaces that also comprise the constants , in section [ sec : proper_univariate_basis_functions ] we select proper univariate basis functions in order to ensure more optimal shape preserving properties .    in section [ sec : optimal_arcs ] we build a network of optimal curves that locally interpolate the vertices and associated tangent vectors along each edge of the given mesh by means of ( not necessarily polynomial ) arcs that minimize the weighted combinations of squared length variations of their first and higher oder derivatives ( i.e. , by means of explicit closed formulas , our objective is to define and locally minimize certain quadratic energy functionals that always have unique global optimum points that indirectly also influence the length , the curvature variation or other higher order intrinsic properties of the arcs of the constructed network ) .",
    "section [ sec : c0_optimal_patches ] gives explicit closed formulas to locally interpolate all curvilinear triangular faces formed by the arcs of the previously constructed curve network by using optimal ( not necessarily polynomial ) triangular surface patches that are only @xmath0 continuous along their common boundaries and which minimize the weighted sum of first and higher order quadratic thin - plate - spline - like energies ( the considered energy functionals will always have unique optimum points that indirectly also influence the surface area , the curvature variation or any higher order intrinsic properties of the constructed patches ) .",
    "these triangular interpolants should be described by means of barycentric coordinate - dependent constrained trivariate basis functions that along the boundaries are compatible with ( i.e. , degenerate to ) the univariate basis functions used for the construction of the arcs of the optimal curve network .    in section [ sec : generalized_g1_nielson_patches ] , at first , we use the connectivity information stored in @xmath8 in order to define continuous vector fields of averaged unit normals along the common boundary curves of the previously generated local interpolating optimal @xmath0 triangular patches , then we generalize the convexly blended side - vertex method of @xcite in order to produce @xmath1 continuous ( not necessarily polynomial ) quasi - optimal triangular patches that interpolate the previously calculated local interpolating optimal arcs and also match the vector fields of averaged unit normals of the neighboring @xmath0 patches .",
    "our final remarks are included in section [ sec : final_remarks ] . in order to ease and speed up possible reimplementations",
    "we close the manuscript with appendices [ app : univariate_integrals ] and [ app : double_integrals ] that list closed formulas for certain univariate and double integrals , respectively , on which the proposed method relies .",
    "the steps of our triangular spline surface modeling tool are briefly outlined in fig .",
    "[ fig : process ] .",
    "continuous along their common boundaries .",
    "( _ e _ ) different vector fields of unit normals along the boundaries .",
    "( _ f _ ) continuous quasi - optimal vector fields of averaged unit normals along the joints .",
    "( _ g_)(_h _ ) material and reflection line based rendering of generalized @xmath1 continuous triangular nielson - type interpolants with quasi - optimal isoparametric lines . ]",
    "consider the endpoints of the directed edge @xmath17 and their associated unit tangent vectors . in order to describe the points and higher order derivatives of a smooth curve as the varying linear combination of the control points @xmath18 , @xmath19 , @xmath20 , @xmath21 ( where scaling factors @xmath22 and @xmath23 are unknown at the moment )",
    ", one has to define smooth basis functions that also ensure several shape preserving properties .",
    "let@xmath24   \\right\\},~\\beta > 0 \\label{eq : system}\\ ] ] be a system of sufficiently smooth non - negative normalized symmetric basis functions that also ensure endpoint interpolation , i.e.,@xmath25\\right),&~\\rho \\geq 1,~k=0,1,2,3,\\label{eq : smoothness}\\\\ b_{3,k}\\left (   x\\right )    &   \\geq0,&~\\forall x \\in \\left[0,\\beta\\right],~k=0,1,2,3,\\label{eq : nonnegativity } \\\\ \\sum_{k=0}^{3}b_{3,k}\\left (   x\\right )    &   \\equiv1,&~\\forall x\\in\\left [ 0,\\beta\\right ] , \\label{eq : partition_of_unity } \\\\",
    "b_{3,0}\\left(0\\right ) & = 1 , & ~b_{3,1}\\left(0\\right ) = b_{3,2}\\left(0\\right ) = b_{3,3}\\left(0\\right ) = 0 , \\\\",
    "b_{3,3}\\left(\\beta\\right ) & = 1 , & ~b_{3,0}\\left(\\beta\\right ) = b_{3,1}\\left(\\beta\\right ) = b_{3,2}\\left(\\beta\\right ) = 0 , \\\\ b_{3,k}\\left (   x\\right )    &   = b_{3,3-k}\\left (   \\beta - x\\right )   , & ~\\forall x\\in\\left [   0,\\beta\\right ]   , ~k=0,1.\\label{eq : symmetry}\\end{aligned}\\ ] ]    as we will see in the forthcoming sections , conditions ( [ eq : smoothness])([eq : symmetry ] ) form a part of the minimal requirements of the proposed curve and surface modeling tools .",
    "naturally , there are infinitely many bases that fulfill conditions ( [ eq : smoothness])([eq : symmetry ] ) , however , in order to ensure additional ideal shape preserving properties , we advise to define the system ( [ eq : system ] ) by means of unique normalized b - basis functions of classes of reflection invariant ( mixed ) extended chebyshev ( ec ) spaces as it is illustrated by several examples at the end of the current section .",
    "the following parts recall the notion of ec spaces and motivate the application of non - negative normalized b - basis functions .",
    "let @xmath26 be a fixed integer and consider the ec system@xmath27   \\right\\ }   _ { r=0}^{\\eta},~s_{\\eta,0 } \\equiv 1,\\label{eq : ordinary_basis}\\ ] ] of basis functions in @xmath28   \\right )   $ ] , i.e. , by definition @xcite , for any integer @xmath29 , any strictly increasing sequence of knot values @xmath30 , any positive integers ( called multiplicities ) @xmath31 such that @xmath32 , and any real numbers @xmath33 there always exists a unique function @xmath34 that satisfies the conditions of the hermite interpolation problem@xmath35 in what follows , we assume that the sign - regular determinant of the coefficient matrix of the linear system ( [ eq : hermite_interpolation_problem ] ) of equations is strictly positive for any permissible parameter settings introduced above . under these circumstances , the vector space @xmath36 of functions is called an ec space of dimension @xmath37 . in terms of zeros , this definition means that any non - zero element of @xmath36 vanishes at most @xmath38 times in the interval @xmath39   $ ] .",
    "such spaces and their corresponding spline counterparts have been widely studied , consider e.g.  articles @xcite and many other references therein .    using ( * ? ? ?",
    "* theorem 5.1 ) and @xcite , it follows that the vector space @xmath36 also has a strictly totally positive basis for appropriately fixed values of the parameter @xmath40 , i.e. , a basis such that all minors of all its collocation matrices are strictly positive .",
    "since the constant function @xmath41 , the aforementioned strictly positive basis is normalizable , therefore the vector space @xmath36 also has a unique non - negative normalized b - basis@xmath42   \\right\\ }   _ { r=0}^{\\eta } \\label{eq : b - basis}\\ ] ] that besides the identity@xmath43   \\label{eq : partition_of_unity_b_basis}\\ ] ] also fulfills the properties@xmath44 conform ( * ? ? ?",
    "* theorem 5.1 ) and mazure1999 . among such ec spaces",
    "there are ones ( see e.g.  @xcite ) that can be formed by all solutions of those linear homogeneous differential equations of order @xmath45 the coefficients of which are constants and the characteristic polynomial of which is an either even or odd function that also admits @xmath46 as one of its ( presumably higher order ) zeros . under these conditions , @xmath47 , moreover the space @xmath36 is also invariant under reflections and consequently under translations as well , i.e. , for any function @xmath48 and fixed scalar @xmath49 the functions @xmath50 and @xmath51 also belong to @xmath36",
    ". therefore , the unique normalized b - basis of the members of this class of ec spaces also fulfills the symmetry @xmath52   , ~r=0,1,\\ldots , \\left\\lfloor \\frac{\\eta}{2}\\right\\rfloor.\\ ] ]    compared with the traditionally used cubic or higher degree hermite basis functions that would easily fulfill the required endpoint interpolation conditions , the unique normalized b - bases of such vector spaces ensure more optimal shape preserving properties ( like closure for the affine transformations of the control points , convex hull , variation diminishing , monotonicity preserving , hodograph and length diminishing , symmetry with respect to reversing the order of control points ) , important evaluation or subdivision algorithms and useful shape ( or tension ) parameters .    in cases @xmath53 and @xmath54",
    ", the required basis functions of the system ( [ eq : system ] ) can be obtained from the normalized b - basis ( [ eq : b - basis ] ) either by direct index correspondence or by creating four linearly independent linear combinations of normalized b - basis functions such that the obtained expressions do not violate conditions ( [ eq : nonnegativity])([eq : symmetry ] ) , respectively .",
    "[ exmp : bernstein ] an immediate choice of the required basis functions would be the cubic case of the bernstein polynomials @xmath55 \\right\\}_{r=0}^{\\eta},~\\eta \\geq 3\\ ] ] that form the non - negative normalized b - basis @xcite of the ec space of polynomials of degree at most @xmath38 , i.e. , @xmath56",
    ". however , in order to ensure higher order non - vanishing derivatives , one could define the required basis functions for example as the linear combinations @xmath57 that also fulfill the conditions ( [ eq : smoothness])([eq : symmetry ] ) .",
    "[ exmp : sanchez ]",
    "let @xmath58 be a fixed shape parameter and let @xmath59 .",
    "the non - negative normalized b - basis of the ec space @xmath60 \\right\\ } \\label{eq : trigonometric_polynomials_n}\\ ] ] of trigonometric polynomials of order at most @xmath61 ( degree @xmath62 ) provided by @xcite can linearly be reparametrized into the form@xmath63   \\right\\ }   _ { r=0}^{2\\mu},~\\mu \\geq 2 \\label{eq : trigonometric_b - basis - n}\\ ] ] where@xmath64 are symmetric normalizing coefficients . similarly to example",
    "[ exmp : bernstein ] , if @xmath65 ( i.e. , @xmath66 ) , then the functions of the system ( [ eq : system ] ) can be defined for example as follows @xmath67    [ exmp : hyperbolic ] now , let @xmath68 and @xmath69 be fixed parameters . using hyperbolic sine and cosine functions in expressions ( [ eq : trigonometric_polynomials_n ] ) ([eq : trigonometric_normalizing_constants_n ] ) instead of the trigonometric ones , we obtain the vector space of hyperbolic polynomials of order at most @xmath61 ( or degree @xmath62 ) the unique non - negative normalized b - basis of which was introduced in @xcite .",
    "if @xmath65 ( i.e. , @xmath66 ) , then the basis functions ( [ eq : system ] ) can be defined as in example [ exmp : sanchez ] .",
    "[ exmp : algebraic_trigonometric]the non - negative normalized b - basis @xmath70   \\right\\ }   , ~\\beta      \\in\\left (   0,2\\pi\\right )      \\end{aligned}\\ ] ] of the mixed ec space @xmath71 \\ }      \\rangle      $ ] of algebraic - trigonometric functions can be constructed by using either the differential equation based iterative integral representation published in @xcite and references therein or the determinant based formulas of ( * ? ? ?",
    "* theorem 3.4 ) .",
    "the critical length @xmath72 was determined in ( * ? ? ?",
    "* section 5 ) . as in the cubic case of the polynomial example [ exmp : bernstein ]",
    ", the required basis functions ( [ eq : system ] ) can be defined by direct index correspondence , i.e. , @xmath73 .",
    "observe that the polynomial , trigonometric , hyperbolic and algebraic - trigonometric reflection invariant ec spaces detailed in examples [ exmp : bernstein][exmp : algebraic_trigonometric ] above correspond to the spaces of solutions of those constant - coefficient homogeneous linear differential equations of order @xmath45 that are determined by the either even or odd characteristic polynomials @xmath74 and @xmath75 respectively , where @xmath76 . constructing the normalized b - basis functions of other reflection invariant ( mixed ) ec spaces @xcite",
    ", one can also define other useful systems in a similar fashion .",
    "let @xmath77 be an arbitrarily selected directed edge of the given triangular mesh and consider the unit tangent vectors @xmath78 and @xmath79 associated with vertices @xmath18 and @xmath21 , respectively .",
    "our first objective is to determine the scaling factors @xmath22 and @xmath80 of tangent vectors @xmath78 and @xmath79 , respectively , such that the curve@xmath81\\ ] ] becomes the solution of the optimization problem @xcite@xmath82 where @xmath83 denotes the maximal order of involved derivatives ( such that @xmath84 ) , while parameters @xmath85 are user defined non - negative weights of rank @xmath86 ( i.e. , @xmath87 ) .",
    "let us denote by @xmath88 the inner product of two vectors .",
    "since this operator is linear in both of its components and @xmath89 , by using the notations@xmath90 one obtains that@xmath91 by means of which the unknown parameters @xmath92 can be determined as the solution of the linear system@xmath93{ccc}\\dfrac{\\partial}{\\partial\\lambda_{i , j}}e_{i , j}^{\\rho}\\left (   \\lambda _ { i , j},\\lambda_{j , i}\\right )   & = & 0,\\\\ \\dfrac{\\partial}{\\partial\\lambda_{j , i}}e_{i , j}^{\\rho}\\left (   \\lambda _ { i , j},\\lambda_{j , i}\\right )   & = & 0 , \\end{array } \\right.\\def\\arraystretch{1.3}\\ ] ] the matrix form of which is@xmath94{cc}\\phi_{1,1}^{\\rho } & \\left\\langle \\mathbf{t}_{i , j},\\mathbf{t}_{j , i}\\right\\rangle \\cdot\\phi_{1,2}^{\\rho}\\\\ \\left\\langle \\mathbf{t}_{i , j},\\mathbf{t}_{j , i}\\right\\rangle \\cdot\\phi _ { 1,2}^{\\rho } & \\phi_{2,2}^{\\rho}\\end{array } \\right ]   \\left [ \\begin{array } [ c]{c}\\lambda_{i , j}\\\\ \\lambda_{j , i}\\end{array } \\right ]   = -\\left [ \\begin{array } [ c]{c}\\left\\langle \\mathbf{p}_{i}\\cdot\\left (   \\phi_{0,1}^{\\rho}+\\phi_{1,1}^{\\rho } \\right )   + \\mathbf{p}_{j}\\cdot\\left (   \\phi_{1,2}^{\\rho}+\\phi_{1,3}^{\\rho } \\right )   , \\mathbf{t}_{i , j}\\right\\rangle \\\\ \\left\\langle \\mathbf{p}_{i}\\cdot\\left (   \\phi_{0,2}^{\\rho}+\\phi_{1,2}^{\\rho } \\right )   + \\mathbf{p}_{j}\\cdot\\left (   \\phi_{2,2}^{\\rho}+\\phi_{2,3}^{\\rho } \\right )   , \\mathbf{t}_{j , i}\\right\\rangle \\end{array } \\right ]   .",
    "\\label{eq : matrix_equation}\\ ] ]    the linear system ( [ eq : matrix_equation ] ) always admits a unique solution , i.e. , @xmath95{cc }     \\phi_{1,1}^{\\rho } & \\left\\langle \\mathbf{t}_{i , j},\\mathbf{t}_{j , i }     \\right\\rangle \\cdot\\phi_{1,2}^{\\rho}\\\\      \\left\\langle \\mathbf{t}_{i , j},\\mathbf{t}_{j , i}\\right\\rangle \\cdot\\phi      _ { 1,2}^{\\rho } & \\phi_{2,2}^{\\rho }     \\end{array }      \\right ]   = \\phi_{1,1}^{\\rho}\\cdot\\phi_{2,2}^{\\rho}-\\left\\langle \\mathbf{t }     _ { i , j},\\mathbf{t}_{j , i}\\right\\rangle ^{2}\\cdot\\left (   \\phi_{1,2}^{\\rho      } \\right )   ^{2}\\neq0.\\ ] ]    observe that by means of the well - known cauchy ",
    "schwarz inequality , one can obtain that @xmath96 where the equality holds if and only if @xmath97,~\\forall r=1,\\ldots,\\rho$ ] for some fixed constant @xmath98 , which is impossible by definition , since @xmath99 and @xmath100,~\\forall r=1,\\ldots,\\rho$ ] due to the symmetry condition ( [ eq : symmetry ] ) , therefore @xmath101    using once again the cauchy ",
    "schwarz inequality , we also obtain that @xmath102 combining inequalities ( [ eq : cbs_1 ] ) and ( [ eq : cbs_2 ] ) , finally , we have that @xmath103 i.e. , the system ( [ eq : matrix_equation ] ) always admits the unique solution    @xmath104{c }         \\lambda_{i , j}\\\\          \\lambda_{j , i }         \\end{array }          \\right ]           = -\\dfrac{1}{\\delta_{i , j}^{\\rho}}\\cdot\\left [          \\begin{array }          [ c]{cc }         \\phi_{2,2}^{\\rho } & -\\left\\langle \\mathbf{t}_{i , j},\\mathbf{t}_{j , i }         \\right\\rangle \\cdot\\phi_{1,2}^{\\rho}\\\\          -\\left\\langle \\mathbf{t}_{i , j},\\mathbf{t}_{j , i}\\right\\rangle \\cdot\\phi          _ { 1,2}^{\\rho } & \\phi_{1,1}^{\\rho }         \\end{array }          \\right ]   \\cdot\\left [          \\begin{array }          [ c]{c }         \\left\\langle \\mathbf{p}_{i}\\cdot\\left (   \\phi_{0,1}^{\\rho}+\\phi_{1,1}^{\\rho          } \\right )   + \\mathbf{p}_{j}\\cdot\\left (   \\phi_{1,2}^{\\rho}+\\phi_{1,3}^{\\rho      } \\right )   , \\mathbf{t}_{i , j}\\right\\rangle \\\\      \\left\\langle \\mathbf{p}_{i}\\cdot\\left (   \\phi_{0,2}^{\\rho}+\\phi_{1,2}^{\\rho      } \\right )   + \\mathbf{p}_{j}\\cdot\\left (   \\phi_{2,2}^{\\rho}+\\phi_{2,3}^{\\rho } \\right )   , \\mathbf{t}_{j , i}\\right\\rangle \\end{array } \\right]\\ ] ]    which completes the proof .",
    "observe that the unique solution ( [ eq : solution ] ) of the linear system ( [ eq : matrix_equation ] ) is invariant under parametrizations of the applied basis functions ( [ eq : system ] ) , moreover isometries and uniform scalings of the given mesh vertices would generate congruent or proportional local interpolating optimal arcs , respectively .",
    "the remaining parts of the current section provides explicit closed formulas for ( [ eq : solution ] ) in case of basis functions that were introduced in examples [ exmp : bernstein ] , [ exmp : sanchez ] , [ exmp : hyperbolic ] and [ exmp : algebraic_trigonometric ] .",
    "[ cubic bernstein polynomials ; @xmath105[exmp : bersntein_rho_1_theta1_1]assume that the system @xmath106 denotes the cubic bernstein polynomials defined on @xmath107   $ ] and let @xmath108 be fixed parameters . in this case , by means of values @xmath109 listed in appendix [ app : cubic_bernstein_r_1 ] , one has that    @xmath94{c}\\lambda_{i , j}\\\\ \\lambda_{j , i}\\end{array } \\right ]   = \\frac{1}{16-\\left\\langle \\mathbf{t}_{i , j},\\mathbf{t}_{j , i}\\right\\rangle ^{2}}\\cdot\\left [ \\begin{array } [ c]{c}\\left\\langle \\mathbf{p}_{j}-\\mathbf{p}_{i},~\\mathbf{t}_{j , i}\\cdot\\left\\langle \\mathbf{t}_{i , j},\\mathbf{t}_{j , i}\\right\\rangle + 4\\cdot\\mathbf{t}_{i , j}\\right\\rangle \\\\",
    "\\left\\langle \\mathbf{p}_{i}-\\mathbf{p}_{j},~\\mathbf{t}_{i , j}\\cdot\\left\\langle \\mathbf{t}_{i , j},\\mathbf{t}_{j , i}\\right\\rangle + 4\\cdot\\mathbf{t}_{j , i}\\right\\rangle \\end{array } \\right ]   .\\ ] ]    using these parameter settings in case of a triangulated cube , fig .",
    "[ fig : curve_energy_effect_of_order_and_shape_parameter](_a _ ) illustrates a network of local interpolating optimal cubic bzier curves .",
    "each arc of the network locally minimizes the squared length variation of its tangent vectors .",
    "figure_03_strain_energy_effect_of_order_and_shape_parameter.pdf    [ cubic bernstein polynomials ; @xmath110 , @xmath111[exmp : bersntein_rho_2_theta1_1_theta2_1]let @xmath106 once again be the system of cubic bernstein polynomials on @xmath107   $ ] , and assume that @xmath110 and @xmath112 are given parameters .",
    "then , by using the values @xmath113 listed in appendices [ app : cubic_bernstein_r_1][app : cubic_bernstein_r_2 ] , one obtains that    @xmath94{c}\\lambda_{i , j}\\\\ \\lambda_{j , i}\\end{array } \\right ]   = \\frac{1}{15376 - 3481\\cdot\\left\\langle \\mathbf{t}_{i , j},\\mathbf{t}_{j , i}\\right\\rangle ^{2}}\\cdot\\left [ \\begin{array } [ c]{c}\\left\\langle \\mathbf{p}_{j}-\\mathbf{p}_{i},~7564\\cdot\\mathbf{t}_{i , j}-3599\\cdot\\mathbf{t}_{j , i}\\cdot\\left\\langle \\mathbf{t}_{i , j},\\mathbf{t}_{j , i}\\right\\rangle \\right\\rangle \\\\",
    "\\left\\langle \\mathbf{p}_{i}-\\mathbf{p}_{j},~7564\\cdot\\mathbf{t}_{j , i}-3599\\cdot\\mathbf{t}_{i , j}\\cdot\\left\\langle \\mathbf{t}_{i , j},\\mathbf{t}_{j , i}\\right\\rangle \\right\\rangle \\end{array } \\right ]   .\\ ] ]    using the same triangulated cube as in example [ exmp : bersntein_rho_1_theta1_1 ] , fig .",
    "[ fig : curve_energy_effect_of_order_and_shape_parameter](_b _ ) shows the local interpolating optimal cubic bzier curve network determined by the parameter settings above .",
    "the obtained network consists of arcs that locally minimize the combined squared length variation of their first and second order derivatives .",
    "[ trigonometric basis functions ; @xmath110 ] [ exmp : univariate_trigonometric_rho_1_2 ] let @xmath58 and @xmath110 be fixed parameters and consider the trigonometric basis functions introduced in example [ exmp : sanchez ] . evaluating the expressions @xmath114 listed in appendices [ app : trigonometric_r_1][app : trigonometric_r_2 ] for @xmath115 , in case of weight vectors @xmath116 $ ] and @xmath117 $ ] one can write the solution ( [ eq : solution ] ) in the form    @xmath118{c}\\lambda_{i , j}\\\\ \\lambda_{j , i}\\end{array } \\right ]   & = \\dfrac{3\\pi-8}{2\\cdot\\left (   \\left (   6\\pi-16\\right )   ^{2}-\\left (      10 - 3\\pi\\right )   ^{2}\\cdot\\left\\langle \\mathbf{t}_{i , j},\\mathbf{t }     _ { j , i}\\right\\rangle ^{2}\\right )   } \\cdot\\left [ \\begin{array } [ c]{c}\\left\\langle \\mathbf{p}_{j}-\\mathbf{p}_{i},\\left(6\\pi - 16\\right )   \\cdot\\mathbf{t}_{i , j}+\\left (   10 - 3\\pi\\right ) \\cdot\\left\\langle \\mathbf{t}_{i , j},\\mathbf{t}_{j , i}\\right\\rangle \\cdot\\mathbf{t}_{j , i}\\right\\rangle \\\\",
    "\\left\\langle \\mathbf{p}_{i}-\\mathbf{p}_{j},\\left(6\\pi-16\\right )   \\cdot\\mathbf{t}_{j , i}+\\left (   10 - 3\\pi\\right ) \\cdot\\left\\langle \\mathbf{t}_{i , j},\\mathbf{t}_{j , i}\\right\\rangle \\cdot\\mathbf{t}_{i , j}\\right\\rangle \\end{array } \\right]\\end{aligned}\\ ] ]    and    @xmath118{c}\\lambda_{i , j } \\\\",
    "\\lambda_{j , i}\\end{array } \\right ]    & = \\frac{15\\pi-16}{2\\cdot\\left (   \\left (   21\\pi-32\\right )      ^{2}-\\left (   15\\pi-32\\right )   ^{2 } \\cdot \\left\\langle \\mathbf{t}_{i , j},\\mathbf{t}_{j , i}\\right\\rangle ^{2 }      \\right )   } ~\\cdot\\left [ \\begin{array } [ c]{c}\\left\\langle \\mathbf{p}_{j}-\\mathbf{p}_{i},\\left (   21\\pi-32\\right ) \\cdot\\mathbf{t}_{i , j}-\\left (   15\\pi-32\\right )   \\cdot\\left\\langle \\mathbf{t}_{i , j},\\mathbf{t}_{j , i}\\right\\rangle \\cdot\\mathbf{t}_{j , i}\\right\\rangle \\\\",
    "\\left\\langle \\mathbf{p}_{i}-\\mathbf{p}_{j},\\left (   21\\pi-32\\right ) \\cdot\\mathbf{t}_{j , i}-\\left (   15\\pi-32\\right )   \\cdot\\left\\langle \\mathbf{t}_{i , j},\\mathbf{t}_{j , i}\\right\\rangle \\cdot\\mathbf{t}_{i , j}\\right\\rangle \\end{array } \\right],\\end{aligned}\\ ] ]    respectively .",
    "using the same triangulated cube as in examples [ exmp : bersntein_rho_1_theta1_1][exmp : bersntein_rho_2_theta1_1_theta2_1 ] , fig .",
    "[ fig : curve_energy_effect_of_order_and_shape_parameter](_c _ ) uses the weights @xmath119 and shows the effect of the design parameter @xmath120 on the shape of the local interpolating optimal curve network that  compared with the polynomial example [ exmp : bersntein_rho_2_theta1_1_theta2_1 ]  now consists of second order ( quartic ) trigonometric arcs which also minimize the combined squared length variations of their velocity and acceleration vectors .    in case of hyperbolic and algebraic - trigonometric basis functions , appendix",
    "[ app : univariate_integrals ] lists further explicit formulas for the corresponding @xmath40-dependent values of the integrals @xmath121 , @xmath122 , @xmath123 and @xmath124 , where @xmath125 . as in case of examples [ exmp : bersntein_rho_1_theta1_1][exmp : univariate_trigonometric_rho_1_2 ] , for a given shape parameter @xmath40 and non - negative weight vector @xmath126_{r=1}^2 $ ] of rank 1 , these values can easily be evaluated and substituted into the general formula ( [ eq : solution ] ) .",
    "consider the counterclockwise oriented triangular face @xmath128 , the domain@xmath129 , ~u+v+w=\\beta\\right\\}\\ ] ] and the triangular surface@xmath130 where the sufficiently smooth non - negative constrained trivariate normalized function system@xmath131 is linearly independent and also fulfills the boundary conditions@xmath132 \\right\\ }   _ { r=0,~s=0}^{3,~3-r }   &   = \\left\\ {   b_{3,0}\\left (   w\\right ) , b_{3,1}\\left (   w\\right )   , b_{3,2}\\left (   w\\right )   , b_{3,3}\\left (   w\\right ) : w\\in\\left [   0,\\beta\\right ]   \\right\\ }   , \\\\",
    "\\left\\ {   t_{r , s,3-r - s}\\left (   u,0,\\beta - u\\right )   : u\\in\\left [   0,\\beta\\right ] \\right\\ }   _ { r=0,~s=0}^{3,~3-r }   &   = \\left\\ {   b_{3,0}\\left (   u\\right ) , b_{3,1}\\left (   u\\right )   , b_{3,2}\\left (   u\\right )   , b_{3,3}\\left (   u\\right ) : u\\in\\left [   0,\\beta\\right ]   \\right\\ }   , \\\\ \\left\\ {   t_{r , s,3-r - s}\\left (   \\beta - v , v,0\\right )   : v\\in\\left [   0,\\beta\\right ] \\right\\ }   _ { r=0,~s=0}^{3,~3-r }   &   = \\left\\ {   b_{3,0}\\left (   v\\right ) , b_{3,1}\\left (   v\\right )   , b_{3,2}\\left (   v\\right )   , b_{3,3}\\left (   v\\right ) : v\\in\\left [   0,\\beta\\right ]   \\right\\ }   .\\end{aligned}\\ ] ]    using the notations of fig .",
    "[ fig : local_surface ] , we also assume that the boundary curves are determined by the control polygons@xmath12{llll}\\lbrack~\\mathbf{p}_{3,0,0}^{i , j , k}=\\mathbf{p}_{i } , & \\mathbf{p}_{2,0,1}^{i , j , k}=\\mathbf{p}_{i}+\\lambda_{i , j}\\mathbf{t}_{i , j } , & \\mathbf{p}_{1,0,2}^{i , j , k}=\\mathbf{p}_{j}+\\lambda_{j , i}\\mathbf{t}_{j , i } , & \\mathbf{p}_{0,0,3}^{i , j , k}=\\mathbf{p}_{j}~],\\\\ \\lbrack~\\mathbf{p}_{0,0,3}^{i , j , k}=\\mathbf{p}_{j } , & \\mathbf{p}_{0,1,2}^{i , j , k}=\\mathbf{p}_{j}+\\lambda_{j , k}\\mathbf{t}_{j , k } , & \\mathbf{p}_{0,2,1}^{i , j , k}=\\mathbf{p}_{k}+\\lambda_{k , j}\\mathbf{t}_{k , j } , & \\mathbf{p}_{0,3,0}^{i , j , k}=\\mathbf{p}_{k}~],\\\\ \\lbrack~\\mathbf{p}_{0,3,0}^{i , j , k}=\\mathbf{p}_{k } , & \\mathbf{p}_{1,2,0}^{i , j , k}=\\mathbf{p}_{k}+\\lambda_{k , i}\\mathbf{t}_{k , i } , & \\mathbf{p}_{2,1,0}^{i , j , k}=\\mathbf{p}_{i}+\\lambda_{i , k}\\mathbf{t}_{i , k } , & \\mathbf{p}_{3,0,0}^{i , j , k}=\\mathbf{p}_{i}~ ] .",
    "\\end{array}\\ ] ]    [ h ] figure_04_local_optimal_triangular_surface_construction.pdf    the unknown control point @xmath133 of the local interpolating triangular surface element @xmath134 will be determined as the unique solution of the optimization problem@xmath135{l}e_{i , j , k}^{\\gamma}\\left ( \\mathbf{p}_{1,1,1}^{i , j , k } \\right )   \\rightarrow \\min,\\\\ \\mathbf{p}_{1,1,1}^{i , j , k}\\in\\mathbb{r}^{3 } , \\end{array } \\right.\\ ] ] where@xmath136 denotes the generalized quadratic thin - plate spline surface energy @xcite of order @xmath137 , while the parameters @xmath138 are user defined non - negative weights of rank @xmath86 .    using the notations@xmath139 the @xmath133-dependent part of the energy functional ( [ eq : thin_plate_spline ] ) is@xmath140",
    "provided that @xmath141 , @xmath142 and @xmath143 are chosen such that the coefficient of @xmath144 in @xmath145 is not zero , the solution of@xmath146 is the unique critical control point@xmath147    observe that unique solution ( [ eq : solution_surface ] ) is also invariant under the parametrization of the applied constrained trivariate basis functions ( [ eq : trivariate_function_system ] ) , moreover isometries and uniform scalings of the given mesh vertices would generate congruent and proportional local interpolating optimal triangular patches , respectively .",
    "the following examples provide proper constrained trivariate linearly independent function systems that can be used for the description of the triangular surface element ( [ eq : local_triangular_surface ] ) .",
    "[ constrained trivariate bernstein polynomials ; @xmath148[exmp : trivariate_bernstein]if the boundary curves of ( [ eq : local_triangular_surface ] ) are determined by means of cubic bernstein polynomials defined on the interval @xmath149   $ ] , then one should define the function system ( [ eq : trivariate_function_system ] ) as the cubic constrained trivariate bernstein polynomials@xmath150 that would lead to triangular cubic bernstein ",
    "bzier patches @xcite .",
    "however , if one uses quartic bernstein polynomials at the boundary @xmath151 as illustrated in example @xmath152 , then one can define the functions of the required constrained trivariate basis as the linearly independent combinations @xmath153 of quartic constrained trivariate bernstein polynomials . in this way the constructed functions will also fulfill six cyclic symmetry properties in their variables .",
    "the construction steps and the layout of the original and final systems of functions can also be seen in fig .",
    "[ fig : quartic_polynomial_and_second_order_trigonometric_layout](_b_)@xmath154(_a _ ) . for the sake of convenience , in case of the latter quartic basis",
    ", the values of those double integrals ( [ eq : double_integrals ] ) that are required for the minimization of the thin - plate spline energy ( [ eq : thin_plate_spline ] ) of order at most @xmath155 , can be found in appendix [ app : polynomial ] .",
    "[ constrained trivariate trigonometric basis functions ;  @xmath156[exmp : trivariate_trigonometric]consider the domain @xmath157 , where @xmath58 is an arbitrarily fixed shape parameter . using the second order non - negative constrained trivariate normalized trigonometric basis functions@xmath158 a linearly independent function system that is compatible along the boundary @xmath159 with the univariate trigonometric basis of example [ exmp : sanchez ] and",
    "also fulfills six cyclic symmetry properties can be constructed as follows:@xmath160 the construction steps and the layout of the original and final constrained trivariate functions can also be seen in fig .",
    "[ fig : quartic_polynomial_and_second_order_trigonometric_layout](_c_)@xmath154(_a _ ) .",
    "basis functions @xmath161 , @xmath162 , @xmath163 and @xmath164 were first introduced and later generalized to higher order in @xcite and @xcite , respectively . for the sake of convenience , the @xmath40-dependent values of those double integrals ( [ eq : double_integrals ] ) that are required for the minimization of the thin - plate spline energy ( [ eq : thin_plate_spline ] ) of order at most @xmath155 , can be found in appendix [ app : trigonometric ] .",
    "let @xmath165 be a fixed shape parameter . using hyperbolic sine and cosine functions instead of the trigonometric ones presented in example [ exmp : trivariate_trigonometric ] , one obtains a non - negative constrained trivariate normalized hyperbolic basis that is compatible along @xmath159 with the univariate hyperbolic basis described in example [ exmp : hyperbolic ] .",
    "[ exmp : trivariate_algebraic_trigonometric ] in this case , one can use the non - negative constrained trivariate normalized basis functions @xmath166 that were introduced in @xcite and which degenerate at @xmath159 to the univariate algebraic - trigonometric normalized b - basis presented in example [ exmp : algebraic_trigonometric ] . once again , for the sake of convenience , the @xmath40-dependent values of those double integrals ( [ eq : double_integrals ] ) that are required for the minimization of the thin - plate spline energy ( [ eq : thin_plate_spline ] ) of order at most @xmath155 , can be found in appendix [ app : algebraic_trigonometric ] .",
    "in order to generate @xmath1 continuous triangular interpolants that fit the local interpolating piecewise optimal curve network constructed in section [ sec : optimal_arcs ] , this part of the manuscript follows the side - vertex transfinite interpolation scheme presented in @xcite .",
    "however , compared to this technique :    * instead of cubic hermite basis functions we use function systems obtained from non - negative normalized b - bases as described in examples [ exmp : bernstein][exmp : algebraic_trigonometric ] , thus ensuring more optimal shape preserving properties ; * by means of the local interpolating optimal @xmath0 triangular patches of section [ sec : c0_optimal_patches ] we propose continuous quasi - optimal vector fields of averaged unit normals along the common boundary curves ; * we also impose further optimality constraints concerning the isoparametric lines of those groups of three side - vertex interpolants that have to be convexly blended in order to generate the final visually smooth local interpolating quasi - optimal triangular surface patches .    in general , the local interpolating piecewise optimal triangular surface patches@xmath167 constructed in section [ sec : c0_optimal_patches ]",
    "are only @xmath127 continuous along their common boundary curves as it can also be seen in cases ( _ a _ ) , ( _ b _ ) and ( _ c _ ) of fig .  [ fig : c0_patches_normal_vector_fields ] . however , they can be used to define continuous vector fields of averaged unit normals along the corresponding joints as it is illustrated in fig .",
    "[ fig : c0_patches_normal_vector_fields](_d _ ) and mathematically detailed below .     continuous cubic triangular bernstein ",
    "bzier interpolants obtained by parameter settings @xmath168 and @xmath169 .",
    "( _ b _ ) discontinuous reflection lines across the common local interpolating optimal boundary curves .",
    "( _ c _ ) different vector fields of unit normals along the shared boundary curves .",
    "( _ d _ ) continuous vector fields of averaged unit normals along the joints .",
    "( @xmath170 , @xmath171 ) ]    consider for example the neighboring counterclockwise oriented faces @xmath172 and the local interpolating optimal triangular surface patches @xmath173 and @xmath174 implied by them , i.e. , the selected patches share the optimal boundary curve @xmath175   .\\ ] ] if @xmath176 and @xmath177 denote the unit normal vectors  that belong to the surface points @xmath173 and @xmath178 , respectively , then one can define the continuous vector field@xmath179\\ ] ] of averaged unit normals along the shared boundary curve @xmath180 .",
    "if the selected face @xmath181 does not have a neighbor across the edge @xmath182 , then instead of averaging one can use the inherited unit normal vector field @xmath183.\\ ] ]    based on the connectivity information stored in @xmath8 one can evaluate all vector fields of ( averaged ) unit normals along the curve network constructed in section [ sec : optimal_arcs ] .",
    "therefore , in case of an arbitrarily selected face @xmath128 , we also assume the existence of the unit normal vector field operators @xmath184 and @xmath185 along the boundaries @xmath186 and @xmath187 , respectively , where @xmath188 $ ] .",
    "due to the definition of these continuous normal vector fields , one has that @xmath189 for all faces @xmath190 .    in case of the selected face @xmath128 ,",
    "consider the boundary curve @xmath191 , its opposite vertex @xmath14 and its associated vector field @xmath192 of averaged unit normals . in",
    "what follows , the triangular surface patch@xmath193 is constructed by joining the points of the selected boundary with the opposite vertex @xmath14 by optimal curves as it is illustrated in fig.[fig : side_vertex ] , where @xmath194 denotes an arbitrarily small positive number .",
    "[ h ]     the parametric equation of the patch ( [ eq : patch_i_jk ] ) can be derived as follows :    * for an arbitrarily fixed parameter value @xmath195   $ ] calculate the unit normal , binormal and tangent vectors @xmath196{cclccl }     \\mathbf{f}_{i } & = & -\\mathbf{n}_{i } , & \\widetilde{\\mathbf{f}}_{j , k}\\left (      u\\right )   & = & -\\widetilde{\\mathbf{n}}_{j , k}\\left (   u\\right )   , \\\\      &   &   &   &   & \\\\",
    "\\mathbf{b}_{i,\\left (   j , k\\right )   } \\left (   u\\right )   & = & \\dfrac{\\left (          \\mathbf{c}_{j , k}\\left (   u;\\lambda_{j , k},\\lambda_{k , j}\\right )   -\\mathbf{p }         _ { i}\\right )   \\times\\mathbf{f}_{i}}{\\left\\vert \\left (   \\mathbf{c}_{j , k}\\left (          u;\\lambda_{j , k},\\lambda_{k , j}\\right )   -\\mathbf{p}_{i}\\right )   \\times          \\mathbf{f}_{i}\\right\\vert } , & \\widetilde{\\mathbf{b}}_{\\left (   j , k\\right )          , i}\\left (   u\\right )   & = & \\dfrac{\\left (   \\mathbf{p}_{i}-\\mathbf{c }         _ { j , k}\\left (   u;\\lambda_{j , k},\\lambda_{k , j}\\right )   \\right )   \\times          \\widetilde{\\mathbf{f}}_{j , k}\\left (   u\\right )   } { \\left\\vert \\left (          \\mathbf{p}_{i}-\\mathbf{c}_{j , k}\\left (   u;\\lambda_{j , k},\\lambda_{k , j}\\right )          \\right )   \\times\\widetilde{\\mathbf{f}}_{j , k}\\left (   u\\right )   \\right\\vert }     \\end{array}\\ ] ] and @xmath196{ccccccc }     \\mathbf{t}_{i,\\left (   j , k\\right )   } \\left (   u\\right )   & = & \\mathbf{f }     _ { i}\\times\\mathbf{b}_{i,\\left (   j , k\\right )   } \\left (   u\\right )   , &   &      \\widetilde{\\mathbf{t}}_{\\left (   j , k\\right )   , i}\\left (   u\\right )   & = &      \\widetilde{\\mathbf{f}}_{j , k}\\left (   u\\right )   \\times\\widetilde{\\mathbf{b }     } _ { \\left (   j , k\\right )   , i}\\left (   u\\right )   ,      \\end{array}\\ ] ] respectively ; * by means of the determinant @xmath197 determine the optimal scaling factors @xmath198{ccl }     \\left [      \\begin{array }      [ c]{c }     \\widetilde{\\lambda}_{i,\\left (   j , k\\right )   } \\left (   u\\right ) \\\\      \\widetilde{\\lambda}_{\\left (   j , k\\right )   , i}\\left (   u\\right )      \\end{array }      \\right ]   & = & -\\dfrac{1}{\\widetilde{\\delta}_{i,\\left (   j , k\\right )   } ^{\\rho          } \\left (   u\\right )   } \\\\[1.5em ]      & & \\cdot\\left [      \\begin{array }      [ c]{cc }     \\phi_{2,2}^{\\rho } & -\\left\\langle \\mathbf{t}_{i,\\left (   j , k\\right )   } \\left (      u\\right )   , \\widetilde{\\mathbf{t}}_{\\left (   j , k\\right )   , i}\\left (   u\\right )      \\right\\rangle \\cdot\\phi_{1,2}^{\\rho}\\\\      -\\left\\langle \\mathbf{t}_{i,\\left (   j , k\\right )   } \\left (   u\\right )      , \\widetilde{\\mathbf{t}}_{\\left (   j , k\\right )   , i}\\left (   u\\right )      \\right\\rangle \\cdot\\phi_{1,2}^{\\rho } & \\phi_{1,1}^{\\rho }     \\end{array }      \\right]\\\\[1.25em ]      &   & \\cdot\\left [      \\begin{array }      [ c]{c }     \\left\\langle \\mathbf{p}_{i}\\cdot\\left (   \\phi_{0,1}^{\\rho}+\\phi_{1,1}^{\\rho      } \\right )   + \\mathbf{c}_{j , k}\\left (   u;\\lambda_{j , k},\\lambda_{k , j}\\right )      \\cdot\\left (   \\phi_{1,2}^{\\rho}+\\phi_{1,3}^{\\rho}\\right )   , \\mathbf{t }     _ { i,\\left (   j , k\\right )   } \\left (   u\\right )   \\right\\rangle \\\\      \\left\\langle \\mathbf{p}_{i}\\cdot\\left (   \\phi_{0,2}^{\\rho}+\\phi_{1,2}^{\\rho      } \\right )   + \\mathbf{c}_{j , k}\\left (   u;\\lambda_{j , k},\\lambda_{k , j}\\right )      \\cdot\\left (   \\phi_{2,2}^{\\rho}+\\phi_{2,3}^{\\rho}\\right )   , \\widetilde      { \\mathbf{t}}_{\\left (   j , k\\right )   , i}\\left (   u\\right )   \\right\\rangle      \\end{array }      \\right ]      \\end{array}\\ ] ] of the unit tangent vectors @xmath199 and @xmath200 that are associated with the vertex @xmath14 and the curve point @xmath201 , respectively ; * for an arbitrarily selected barycentric coordinate @xmath202 define the parameter value @xmath203 and evaluate the patch point @xmath204    the construction presented above can also be performed in case of boundary and opposite vertex pairs @xmath205 and @xmath206 , obtaining the triangular surface",
    "patches@xmath207 and@xmath208 respectively , where@xmath209 and @xmath210 for all barycentric coordinates @xmath211 .",
    "finally , the three side - vertex interpolants ( [ eq : interpolant_i_jk ] ) , ( [ eq : interpolant_j_ki ] ) and ( [ eq : interpolant_k_ij ] ) can convexly be blended to form a final quasi - optimal triangular patch that both interpolates the boundary curves and at the same time produces normal vector fields along these boundaries that are compatible with ( i.e. , point - wise parallel to ) the initial corresponding vector fields of averaged unit normals used for the description of these interpolants .",
    "a commonly used convex combination @xcite of the constructed interpolants is the surface@xmath212 where the weight functions @xmath213 , @xmath214 and @xmath215 can be defined e.g. either as the rational functions @xmath216 or as their lower degree counterparts@xmath217 based on the steps of the proposed method , cases ( _ b _ ) and ( _ c _ ) of fig .  [ fig : elephants ] show the continuous reflection lines of several quasi - optimal nielson - type transfinite triangular interpolants that form local interpolating visually smooth triangular spline surfaces that are rough approximations of an elephant .     and @xmath168 , @xmath218 , respectively .",
    "( @xmath219 , @xmath220 ) ]    by applying non - polynomial univariate and constrained trivariate basis functions , one also gains possible shape ( or tension ) parameters that also affect the output of the proposed method as it is illustrated in cases ( _ b _ ) , ( _ c _ ) and ( _ d _ ) of fig .",
    "[ fig : stellated_dodecahedron ] .     and [ exmp : trivariate_trigonometric ] with shape ( or tension ) parameters @xmath115 , @xmath221 and @xmath222 , respectively . in case of all outputs",
    "we have minimized only the squared variation of first order ( partial ) derivatives , i.e. , @xmath223 .",
    "( @xmath224 , @xmath225 ) ]    starting from the same input triangular mesh , but using different types of univariate and corresponding constrained trivariate basis functions , cases ( _ b _ ) , ( _ c _ ) and ( _ d _ ) of fig .  [ fig : bunnies ] show the continuous reflection lines of slightly different @xmath1 continuous spline surfaces formed by quasi - optimal nielson - type triangular transfinite interpolants .    ) , the second order trigonometric ( @xmath221 ) and the first order algebraic - trigonometric ( @xmath221 ) univariate and constrained trivariate bases detailed in examples [ exmp : bernstein]/[exmp : trivariate_bernstein ] , [ exmp : sanchez]/[exmp : trivariate_trigonometric ] and [ exmp : algebraic_trigonometric]/[exmp : trivariate_algebraic_trigonometric ] , respectively . in case of all outputs",
    "we also used the common parameter settings @xmath168 , @xmath218 .",
    "( @xmath226 , @xmath227 ) ]    using univariate and constrained trivariate second order trigonometric basis functions , fig .",
    "[ fig : horse_and_camel ] presents further examples .     and [ exmp : trivariate_trigonometric ] , respectively .",
    "the remaining parameter settings were also the same , i.e. , @xmath228 , @xmath168 , @xmath218 . in case",
    "( _ a _ ) @xmath229 and @xmath230 , while in case ( _ b _ ) @xmath231 and @xmath232 . ]",
    "quadratic energy functionals like the first and higher order strain or thin - plate spline energies ( [ eq : strain_energy ] ) and ( [ eq : thin_plate_spline ] ) , respectively , are well - known concepts in geometric modeling . in order to ensure more optimal shape preserving properties",
    ", we have expressed the strain energy in a slightly more general context by using the unique non - negative normalized b - bases of arbitrary ( not necessarily polynomial ) reflection invariant ec spaces that also comprise the constants , while in case of the thin - plate spline energy we have assumed the existence of constrained trivariate non - negative normalized basis functions that are compatible with ( i.e. , degenerate to ) those univariate basis functions along the edges of their triangular definition domain that were constructed by means of non - negative normalized b - basis functions . concerning the minimization of these energies ,",
    "we have shown in general that their unique optimum points always exist and we have also provided explicit closed formulas like ( [ eq : solution ] ) or ( [ eq : solution_surface ] ) for their evaluation . as possible practical applications , we have used special univariate and constrained trivariate polynomial , trigonometric , hyperbolic and algebraic - trigonometric normalized non - negative basis functions . following these examples",
    ", one can easily define new variants of the proposed algorithm .",
    "the single input of the proposed @xmath1 continuous local interpolating quasi - optimal triangular spline surface modeling tool is a triangular mesh stored in a half - edge data structure . in order to construct a network of piecewise optimal arcs that locally interpolate the vertices of the given mesh",
    ", strain energy functionals were locally optimized along the input edges .",
    "the obtained network of curves is formed by curvilinear triangles that were fitted by local interpolating piecewise optimal triangular surface patches that were obtained by locally minimizing thin - plate spline energies . in general , these triangular surface patches are only @xmath0 continuous along the common boundary curves , but they can be used to define continuous quasi - optimal vector fields of averaged unit normals along the shared boundaries .",
    "thus , we have arrived to the last step of our algorithm , namely we generalize the concept of the visually smooth transfinite triangular interpolant of @xcite by imposing further optimality constraints concerning the isoparametric lines of those groups of three side - vertex triangular interpolants that have to be convexly blended in order to generate the final visually smooth local interpolating quasi - optimal triangular spline surface .    after processing the connectivity information stored in the input triangular mesh and creating lookup tables with the values of univariate / double integrals listed in appendices [ app : univariate_integrals]/[app : double_integrals ] , all intermediate steps of the proposed triangular spline surface generation technique are highly parallelizable and can efficiently be evaluated by means of explicit formulas ( [ eq : solution ] ) , ( [ eq : solution_surface ] ) , ( [ eq : vector_field_of_averaged_normals])/([eq : inherited_vector_fieldnormals ] ) , ( [ eq : point - wise_solution ] ) , ( [ eq : interpolant_i_jk])([eq : interpolant_k_ij ] ) and ( [ eq : blended_interpolant ] ) .    99    barsky , b.a . , 1984 . _ exponential and polynomial methods for applying tension to an interpolating spline curve_. computer vision , graphics , and image processing , * 27*(1):118 .",
    "carnicer , j .-",
    "m . , pea , j .-",
    "m . , 1993 .",
    "_ shape  preserving representations and optimality of the bernstein basis_. advances in computational mathematics , * 1*(2):173196 .",
    "carnicer , j .-",
    "m . , pea , j .-",
    "m . , 1995 .",
    "_ on transforming a tchebycheff system into a strictly totally positive system_. journal of approximation theory , * 81*(2):274295 .",
    "carnicer , j .-",
    "m . , mainar , e. , pea , j .-",
    ". _ critical length for design purposes and extended chebyshev spaces_. constructive approximation , * 20*(1):5571 .",
    "carnicer , j .-",
    "m . , mainar , e. , pea , j .-",
    "m . , 2007 .",
    "_ shape preservation regions for six - dimensional spaces_. advances in computational mathematics , * 26*(13):121136 .",
    "chiyokura , h. , kimura , f. , 1984 . _ a new surface interpolation method for irregular curve models_. computer graphics forum , * 3*(3):209218 .",
    "duchon , j. , 1977 .",
    "_ spline minimizing rotation invariant semi - norms in sobolev spaces . _ in schempp , w. , zeller , k. ( eds . ) , constructive theory of functions of several variables .",
    "lecture notes in mathematics vol .",
    "* 571 * , springer , pp .",
    "85 - 100 .",
    "farin , g. , 1986 .",
    "_ triangular bernstein  bzier patches .",
    "_ computer aided geometric design , * 3*(2):83127 .",
    "farin , g. , hansford , d. , 2012 . _ agnostic @xmath1 gregory surfaces_. graphical models , * 74*(6):346350 .",
    "gregory , j. , 1974 .",
    "_ smooth interpolation without twist constraints_. in barnhill , r.e . ,",
    "riesenfeld , r.f .",
    "( eds . ) : computer aided geometric design , academic press , pp .",
    "karlin , s. , studden , w. , 1966 .",
    "_ tchebycheff systems : with applications in analysis and statistics_. wiley , new york .",
    "lasser , d. , hagen , h. , 1992 . _ interval - weighted tau - splines_. in hagen , h. ( ed . ) : curve and surface design , siam , pp .",
    "4153 .    loop , ch . , 1994 .",
    "_ a @xmath1 triangular spline surface of arbitrary topological type_. computer aided geometric design , * 11*(3):303330 .",
    "l , y. , wang , g. , yang , x. , 2002 .",
    "_ uniform hyperbolic polynomial b - spline curves_. computer aided geometric design , * 19*(6):379393 .",
    "mainar , e. , pea , j.m .",
    ", snchez - reyes , j. , 2001 .",
    "_ shape preserving alternatives to the rational bzier model_. computer aided geometric design , * 18*(1):3760 .",
    "mainar , e. , pea , j.m .",
    "_ quadratic - cycloidal curves_. advances in computational mathematics , * 20*(13):161175 .",
    "mainar , e. , pea , j.m . , 2010 . _ optimal bases for a class of mixed spaces and their associated spline spaces_. computers and mathematics with applications , * 59*(4):15091523 .",
    "mazure , m .-",
    "l . , 1999 .",
    "_ chebyshev ",
    "bernstein bases_. computer aided geometric design , * 16*(7):649669 .",
    "mazure , m .-",
    "l . , 2001 .",
    "_ chebyshev splines beyond total positivity_. advances in computational mathematics , * 14*(2):129156 .",
    "nielson , g.m . , 1979 .",
    "_ the side - vertex method for interpolation in triangles_. journal of approximation theory , * 25*(4):318336 .",
    "nielson , g.m . , 1987 .",
    "_ a transfinite , visually continuous , triangular interpolant_. in g. farin ( ed . ) : geometric modeling : algorithms and new trends , siam , philadelphia , pp .",
    "235246 .",
    "pieper , b. , 1987 .",
    "_ visually smooth interpolation with triangular bzier patches_. in g. farin ( ed . ) , geometric modeling : algorithms and new trends , siam , philadelphia , 1987 , pp .",
    "221233 .",
    "pottmann , h. , wagner , m.g . , 1994 .",
    "_ helix splines as an example of affine tchebycheffian splines_. advances in computational mathematics , * 2*(1):123142 .",
    "rth ,  . ,",
    "juhsz , i. , kristly , a. , 2013 .",
    "_ a constructive approach to triangular trigonometric patches_. http://arxiv.org/abs/1309.4747    rth ,  .",
    "_ control point based exact description of curves and surfaces in extended chebyshev spaces_. computer aided geometric design , * 40*:4058 .",
    "snchez - reyes , j. , 1998 .",
    "_ harmonic rational bzier curves , p - bzier curves and trigonometric polynomials_. computer aided geometric design * 15*(9):909923 .",
    "shen , w .- q . ,",
    "wang g .- z . , 2005 .",
    "_ a class of bzier curves based on hyperbolic polynomials_. journal of zhejiang university science , 6a(suppl .",
    "i ) , 116123 .",
    "shen , w .- q . , wang , g.z .",
    "the triangular domain extension of bzier - like basis for @xmath233-order",
    "trigonometric polynomial space_. journal of computer - aided design and computer graphics , * 22*(5 ) , 833837 .",
    "schweikert , d.g . ,",
    "an interpolation curve using a spline in tension_. journal of mathematics and physics , * 45*(14):312317 .",
    "thrnerr , g. , wthrich , ch . , 1998 .",
    "_ computing vertex normals from polygonal facets_. journal of graphics tools , * 3*(1):4346 .",
    "tong , w .- h . ,",
    "w . , 2009 .",
    "_ high - order approximation of implicit surfaces by @xmath1 triangular spline surfaces .",
    "_ computer - aided design , * 41*(6):441455 .",
    "vlachos , a. , peters , j. , boyd , ch .",
    ", mitchell j.l . , 2001 .",
    "_ curved pn triangles_. in proceedings of the 2001 symposium on interactive 3d graphics , acm new york , isbn : 1 - 58113 - 292 - 1 , pp .",
    "159166 .",
    "walton , d.j . ,",
    "meek , d.s . , 1996 .",
    "_ a triangular @xmath1 patch from boundary curves_. computer - aided design , * 28*(2):113123 .",
    "wei , y .- w . ,",
    "shen , w .- q . ,",
    "wang , g .- z . , 2011 .",
    "_ triangular domain extension of algebraic trigonometric bzier - like basis_. applied mathematics  a journal of chinese universities , * 26*(2):151160 .",
    "potentially omitted values in this section either are equal to zero or do not affect the output of the proposed method .",
    "the values listed in sections [ app : cubic_bernstein_r_1][app : cubic_bernstein_r_2 ] belong to the univariate cubic bernstein polynomials detailed in example [ exmp : bernstein ] .",
    "@xmath234      @xmath235    the values listed in sections [ app : quartic_bernstein_r_1][app : quartic_bernstein_r_2 ] correspond to the univariate quartic polynomial basis detailed in example [ exmp : bernstein ] .",
    "@xmath236      @xmath237      let @xmath58 an arbitrarily fixed parameter and consider the univariate trigonometric basis functions introduced in example [ exmp : sanchez ] .",
    "the corresponding variations of products of first and second order derivatives are listed in sections [ app : trigonometric_r_1 ] and [ app : trigonometric_r_2 ] , respectively .",
    "@xmath238      @xmath239      let @xmath68 be an arbitrarily fixed tension parameter . using the hyperbolic basis functions presented in example [ exmp : hyperbolic ] , the variations of products of first and second order derivatives are listed in sections [ app : hyperbolic_r_1 ] and [ app : hyperbolic_r_2 ] , respectively .",
    "@xmath240      @xmath241      let @xmath242 a fixed tension parameter and consider the univariate algebraic - trigonometric basis functions described in example [ exmp : algebraic_trigonometric ] . in this case",
    ", the variations of products of the first and second order derivatives are listed in sections [ app : algebraic_trigonometric_r_1 ] and [ app : algebraic_trigonometric_r_2 ] , respectively .",
    "@xmath243      @xmath244",
    "potentially omitted values in this section either are equal to zero or do not affect the output of the proposed method .",
    "the values listed in sections [ app : quartic_bernstein_g_1][app : quartic_bernstein_g_2 ] are related to the constrained trivariate quartic polynomial basis functions detailed in example [ exmp : trivariate_bernstein ] .              using the design parameter",
    "@xmath249 , the values of sections [ app : trigonometric_g_1][app : trigonometric_g_2 ] correspond to the constrained trivariate trigonometric basis functions detailed in example [ exmp : trivariate_trigonometric ] .",
    "the values listed in sections [ app : algebraic_trigonometric_g_1][app : algebraic_trigonometric_g_2 ] are related to the constrained trivariate algebraic - trigonometric basis functions detailed in example [ exmp : trivariate_algebraic_trigonometric ] ."
  ],
  "abstract_text": [
    "<S> we generalize the transfinite triangular interpolant of @xcite in order to generate visually smooth ( not necessarily polynomial ) local interpolating quasi - optimal triangular spline surfaces . given as input a triangular mesh stored in a half - edge data structure , at first we produce a local interpolating network of curves by optimizing quadratic energy functionals described along the arcs as weighted combinations of squared length variations of first and higher order derivatives , then by optimizing weighted combinations of first and higher order quadratic thin - plate - spline - like energies we locally interpolate each curvilinear face of the previous curve network with triangular patches that are usually only @xmath0 continuous along their common boundaries . in a following step , </S>",
    "<S> these local interpolating optimal triangular surface patches are used to construct quasi - optimal continuous vector fields of averaged unit normals along the joints , and finally we extend the @xmath1 continuous transfinite triangular interpolation scheme of @xcite by imposing further optimality constraints concerning the isoparametric lines of those groups of three side - vertex interpolants that have to be convexly blended in order to generate the final visually smooth local interpolating quasi - optimal triangular spline surface . </S>",
    "<S> while we describe the problem in a general context , we present examples in special polynomial , trigonometric , hyperbolic and algebraic - trigonometric vector spaces of functions that may be useful both in computer - aided geometric design and in computer graphics . </S>"
  ]
}
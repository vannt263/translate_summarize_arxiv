{
  "article_text": [
    "building and maintaining a large software stack on an hpc environment requires powerful packaging tools .",
    "packages provided by the core operating systems from hpc vendors often lag significantly behind the latest upstream releases , while users want to make use of new features in recent software releases , or build against specific versions of software packages for compatibility or consistency reasons . in order to satisfy users ,",
    "the package manager must take into account the multitude of configuration options for each package as well as ensure that the build order is correct .",
    "it must also be able to distinguish between build time , run time , and post build dependencies , and be able to force package rebuilds when configuration options of dependencies change , without rebuilding the full tree of packages in the process . finally , due to the particularities of each hpc environment , it is highly desirable for the package manager to offer the ability to easily apply patches to specific software packages .",
    "fortunately , gentoo s  @xcite portage  @xcite package manager is able to do all this and much more . on hpc systems where users usually do not have permission to install software into standard locations ,",
    "gentoo prefix @xcite allows installations of a gentoo environment into non - standard paths .",
    "gentoo linux @xcite is a source - based distribution with powerful tools that make it an excellent development environment .",
    "gentoo has been first released by its founder daniel robbins in december of 1999 , and has been in active development since then .",
    "it is a metadistribution , in the sense that it provides the necessary tools for the user to build his[her ] own customized version of gentoo .",
    "gentoo uses its own package manager , portage  @xcite , written in python and inspired by the ports system from freebsd .",
    "gentoo is not based on any linux distribution , but is itself the root of popular distributions like sabayon linux , and innovative operating systems such as coreos @xcite and google s chromeos @xcite .",
    "the gentoo prefix project @xcite brings the virtues of gentoo linux  such as high configurability , performance tuning , and automated package dependency management  to different operating systems .",
    "this is useful for installing software into systems where the user might not have administrator privileges , or simply to use gentoo s portage package manager to automate the process of fetching source code , building , and installing software packages available in gentoo and having their dependencies automatically handled , including the configuration options of each package .",
    "gentoo prefix uses the host system s kernel and standard c library , but all other tools are installed and managed during the bootstrapping of the system .",
    "on linux , gentoo prefix can also compile its own standard c library  @xcite .",
    "installation of the gentoo prefix environment is performed by a shell script that installs the portage package manager into a temporary location , then uses it to bootstrap a compiler and install the base system , which allows the user to compile and install other sofware packages available in the portage database .",
    "gentoo prefix can be installed not only on linux , but also on mac  os  x , bsd , aix , solaris , etc . on mac  os  x ,",
    "gentoo prefix is similar to projects such as homebrew , macports ( source based ) and fink ( binary based ) .",
    "portage is a gplv2 package management system based on freebsd s ports collection .",
    "portage consists of two main parts , the _ ebuild _ system , and the _ emerge _ command line utility .",
    "the ebuild system is responsible for executing build instructions and installing packages , while emerge provides dependency management , and servers as the interface to ebuild .",
    "the relationship between ebuild and emerge is similar to that of rpm and yum on red hat , and that of dpkg and apt on debian .",
    "portage packages are special bash shell scripts called _ ebuilds _",
    "( not to be confused with the ebuild tool itself that is used to run them ) .",
    "ebuilds are similar to spec files in srpms ; they contain information on how to download , configure , compile , and install software , as well as their dependency requirements .",
    "gentoo s main ebuild repository has more than 27000 ebuilds available for a variety of architectures .",
    "additional packages are available via official and unofficial package overlays that complement the main tree of packages .",
    "the special syntax used in ebuild scripts is standardized in the package manager specification ( pms ) @xcite document .",
    "the pms documents the behavior of portage so that gentoo packages can be managed by alternative package managers , such as paludis @xcite and pkgcore @xcite .",
    "the portage system has the concept of _ use flags _ to allow the user to configure compile - time options of software packages .",
    "use flags affect which dependencies are required to build a package , which allows , for example , a headless server to be installed with a lighter system footprint , by stripping all options for building a graphical environment .",
    "use flags can be used in hpc systems to enable or disable mpi support , to choose which version of the python interpreter a module should target , to enable specific instruction sets for a given architecture , among many others .    for software packages that require specific versions , portage has the concept of package _ slots _",
    "@xcite , which allow multiple versions of a same package to be installed simultaneously on the same system .",
    "this is very useful for , e.g. , installing packages that depend on incompatible versions of the same library , or to have multiple compiler versions available for development and testing .",
    "slots can also be used in package dependencies to indicate when a package should be rebuilt should the installed version of its dependencies change .",
    "as gentoo prefix runs on all the gnu / linux distributions , it supports gnu / linux - based hpc systems off - the - shelf .",
    "it is also reported that gentoo prefix runs on cray with some minor site - specific modifications @xcite .",
    "gentoo prefix uses ebuilds from gentoo s main repository  ( section [ sec : ebuild ] ) and receives cutting edge updates by hundreds of developers and thousands of user contributors .",
    "it is a general - purpose and full - featured environment , which mitigates a big portion of the complexity and workload of hpc software maintenance .",
    "latex and pandoc for publication , emacs and vim for editing , vnc and xpra for remote display , to name a few , are all available .    from the users point of view",
    ", gentoo prefix vastly expands the tools available for hpc . from the administrators point of view , gentoo prefix supports a diversity of user needs and at the same time keeps the core operating system stable and secure .",
    "installation instructions for gentoo prefix can be found on the project website @xcite .",
    "the ` bootstrap-prefix.sh `",
    "script automates most of the process ( ` $ ` shown below is the normal user command line prompt ) .    ....",
    "( download script from project website ) $ chmod 755 bootstrap-prefix.sh $ ./bootstrap - prefix.sh ( follow the instructions ) ....    the bootstrap process consists roughly of three stages : installing a temporary version of portage , boostrapping a compiler using the host s toolchain , then bootstrapping a full system with the bootstrapped compiler . on linux , a c standard library can also be part of the bootstrap process , in which case the kernel is the only piece shared between the host and the prefix environment . to have the c standard library from gentoo ,",
    "rename the script before invoking it .",
    ".... $ mv bootstrap-prefix.sh bootstrap-rap.sh $ ./bootstrap - rap.sh ( follow the instructions ) ....    the script works as an interactive installer ; it will ask the user for some information and discuss options based on the system being bootstrapped on .",
    "once the script finishes running , it will create a ` startprefix ` script at the root of the bootstrapped system .",
    "running that script brings the user into the prefix environment , where ` emerge ` and other tools become available to let the user install more packages .    .... $ $ { eprefix}/startprefix entering gentoo prefix /micfs / gentoo $ ....    the following sections present several case studies to show the flexibility of gentoo prefix .",
    "although hpc programs are typically parallel , for some embarrassingly parallel tasks like data analysis and simulation , it is enough to have a grid infrastructure running many single - threaded workers divided by input data .",
    "some supercomputing site allocates resources in units of nodes and leaves finer scheduling within nodes to users . for mpi - based parallel programs it is straight - forward , but for single - threaded programs it is tricky to efficiently and reliably use all the cpus in an allocated node .    instead of writing _",
    "ad hoc _ shell scripts to launch multiple single - threaded programs , slurm or torque available in gentoo could be used as a nested scheduler and allocate jobs in units of cpus .        assuming that the host scheduler is pbs professional and has been installed by the site administrators , a nested slurm scheduler  ( fig .",
    "[ fig : slurm ] ) can be installed by a normal user with gentoo prefix on a filesystem shared between all nodes .",
    ".... $ emerge sys - cluster / slurm   ....    after editing ` eprefix / etc / slurm / slurm.conf ` to enable individual allocation of resources within a node , the slurm worker can be launched by ` slurmd ` and the slurm controller by ` slurmctld ` . `",
    "eprefix ` is the installation offset of gentoo prefix .",
    "it is recommended to use munge for authentication between ` slurmd ` and ` slurmctld ` .",
    "openrc , a dependency aware service manager , is suitable to manage the relation between munge and slurm daemons .",
    "we create named runlevels for the slurm worker and controller ,    .... $ mkdir eprefix / etc / runlevels / worker $ mkdir eprefix / etc / runlevels / controller ....    add services to the corresponding runlevels ,    .... $ rc - update add munged controller worker $ rc - update add slurmctld controller $ rc - update add slurmd controller ....    and start slurmctld on the controller node ( or login node ) with    .... $ openrc controller   * starting munged ...   * starting slurm control daemon ... ....    then , we submit a pbs batch script to launch slurm workers ,    .... $ cat slurmd.sh # ! /bin",
    "/ sh # pbs -l select=32:ncpus=36:mpiprocs=1 # pbs -l walltime=48:00:00 source eprefix / etc / profile mpirun sh -c \" openrc worker ; sleep 2d \" $ qsub slurmd.sh ....    in the script above , 32 nodes , each having 36 cpus , are requested for 2 days . `",
    "mpirun ` is used to launch 1 slurm worker per node .",
    "after the workers are started , single - threaded jobs can be submitted with slurm tools .      in the context of hpc , large scale problems could become memory - bounded , for example when fill - in happens to a sparse matrix based algorithm .",
    "valgrind is traditionally a memory debugging tool for memory leak detection .",
    "a heap profiler , massif  @xcite , is also distributed with valgrind .",
    "massif - visualizer  @xcite is a handful gui visualizer for interpreting massif outputs besides the default cli - based ` ms - print ` .",
    "massif - visualizer is a kde application .",
    "it depends on a recent kde framework , which is a fairly large and complex software stack .",
    "gentoo prefix readily provides the whole kde stack thanks to the shared _ ebuilds _ with the main gentoo repository . as",
    "massif - visualizer is already in the kde overlay , building it is straightforward ,    .... $ layman --add = kde $ emerge kde - misc / massif - visualizer ....    and of course in addition to valgrind    .... $ emerge dev - util / valgrind ....    to resolve the function names in the stack in valgrind output , debug symbols are needed .",
    "a neat feature is provided by portage to control build environment in a per package - basis .",
    "for example , to get memory profile of a quantile regression package ` quantreg ` of gnu r , debug symbols of glibc , r and quantreg are needed . in ` eprefix / etc / portage / env / debug - cflags.conf ` , add    .... cflags =\"- o2 -ggdb -pipe \" cxxflags=\"${cflags } \" features=\"${features } splitdebug \" ....    and in ` eprefix / etc / portage / package.env ` , add    .... sci - cran / quantreg debug-cflags.conf dev - lang / r debug-cflags.conf sys - libs / glibc debug-cflags.conf ....    and rebuild the packages ,    .... $ emerge sys - libs / glibc dev - lang / r \\ > sci - cran / quantreg ....    to produce and view the memory profile ,    .... r -d \" valgrind --tool = massif \\ >",
    "--massif - out - file = rq.prof \" -f rq.r $ massif - visualizer rq.prof ....",
    "where ` rq.r ` is the r script to be profiled , its content being irrelavent to this discussion .",
    "portage can also be configured to cross compile software for different platforms .",
    "the usual way of doing so is to follow the gentoo embedded handbook @xcite to set up the appropriate gcc toolchain and setup the right portage profile .",
    "however , cross compiling for the xeon phi is somewhat different , as only the intel c / c++ compiler has full support for the xeon phi s imci ( initial manycore instructions ) architecture , which , despite being quite similar to the x86 architecture , has some subtle differences .",
    "the fact that knights corner xeon phi cards are used as coprocessors and their boot process does not follow a conventional procedure is irrelevant for cross compiling . once the xeon phi is properly set up , it basically works as a headless server ; users can just ssh into it and run their programs . in our setup , a server with centos 7 and intel tools installed was used to host the gentoo prefix installation .",
    "the host system also needs to have both the intel c / c++ compiler and intel s manycore platform software stack ( mpss ) in order to fulfill the requirements for cross compiling .",
    "since python is a popular language for scientific computing in general , we demonstrate how to cross compile python 2.7 for the xeon phi. the first step was to create a root directory for portage , where all the configuration files reside , and where all software packages are installed .    in our system",
    ", we used a separate partition ( ` /micfs ` ) to hold the gentoo prefix ( ` /micfs / gentoo ` ) and the root of the tree of cross compiled software ( ` /micfs / gentoo - mic ` ) .",
    "the directory ` /micfs",
    "/ gentoo - mic / etc / portage ` contains all files needed to configure portage to use the intel compiler , and the proper compilation flags to cross compile for the xeon phi .",
    "the first file needed is a ` bashrc ` :    .... $ cd /micfs / gentoo - mic / etc / portage $ cat > bashrc < < -eof .",
    "/opt / intel / bin / compilervars.sh intel64 eof ....    this file is sourced by portage , which gains access to ` icc ` by placing it in its ` $ path ` .",
    "now , the most important file , ` make.conf ` , is used to properly configure the compiler to produce binaries for the xeon phi :    .... $ cat > make.conf < < -eof accept_keywords=\"~amd64-linux \"    config_shell=\" / micfs / gentoo / bin / bash \"    cbuild=\"x86_64-pc - linux - gnu \" chost=\"x86_64-k1om - linux - gnu \"    cc = icc cxx = icpc mpi_c = mpiicc mpi_cxx = mpiicpc ld = xild ar = xiar    cflags=\"${cflags } -mmic -o3 \" cxxflags=\"${cxxflags } -mmic -o3 \" fflags=\"${fflags } -mmic -o3 \"    # append link flags , order is important ! # we inject rpaths to avoid setting # ld_library_path later ldflags=\"${ldflags } -mmic",
    "\\           -l / opt / intel / lib / mic \\           -wl ,--",
    "rpath,/opt / intel / lib / mic \\",
    "-l / micfs / gentoo - mic / usr / lib \\",
    "-wl ,-- rpath,/micfs / gentoo - mic / usr / lib \\",
    "-limf -lsvml -lirng -lintlc \"    use_python=\"2.7 \" python_targets=\"python2_7 \"    use=\"- * unicode python ncurses readline threads xml \" eof ....    to cross compile python 2.7 @xcite , a patch @xcite needs to be applied to one of its dependencies , libffi , in order for it to properly cross compile for the xeon phi. portage supports user patches to be applied by simply dropping them into ` eprefix / etc / portage / patches ` in a subdirectory corresponding to the package to be patched , with an optional version . in this case",
    ", we dropped the patch file ` libffi-3.2.1-k1om.patch ` into the subdirectory ` dev - libs / libffi-3.2.1 ` under ` /micfs",
    "/ gentoo - mic / etc / portage / patches ` .",
    "if the version is ommitted , the patch will apply to all versions .",
    "after everything has been properly configured as shown above , python and all its dependencies can be cross compiled with a single command    .... $ emerge \\",
    "> --root=/micfs / gentoo - mic \\ > --config - root=/micfs / gentoo - mic \\",
    "> --prefix=/ python:2.7 ....    the command above installs in total 26 packages , including python . to confirm that the software was properly cross compiled",
    ", we can check the architecture of the generated libraries with ` readelf ` :    .... $ readelf -h \\",
    "> /micfs / gentoo - mic / usr / bin / python2.7 | > grep machine    machine :               intel k1om ....    python modules can now be installed with emerge too . due to incompatibilities , not all software can be cross compiled this way .",
    "python 3.5 , for example , needs further patching before it can be installed by portage .",
    "however , for basic software like ` bash ` , ` rsync ` , and many other tools that facilitate the users life when logged in on the xeon phi , portage works quite well .",
    "with more than 10 years development , portage has become an excellent and mature package management system .",
    "it is general purpose and used in a diversity of scenarios .",
    "nevertheless , it is still worthwhile to assess whether portage meets the specific needs of the hpc community .",
    "the technical report from the software packaging working group of hep software fundation  @xcite has summarized the requirements of hpc from the point of view of high energy physics , which is also applicable to other fields .",
    "as the core of gentoo is a meta distribution , portage naturally satisfies all the requirements :    1 .",
    "portability : portage runs on gnu / linux , android / linux , solaris , aix , mac os x , windows and more ( section [ sec : portage ] ) .",
    "multiple versions : portage supports building and installing multiple stacks in parallel with the slot mechanism ( section [ sec : ebuild ] ) .",
    "ease : portage is self - contained , ebuilds for new packages are easy to add ( section [ sec : portage ] ) , and the bootstraping process on posix environments is simple .",
    "support : the gentoo community is friendly , active and supportive .",
    "documentaion of gentoo is abundant and informative .",
    "performance : gentoo is a linux distribution famous for keeping users cpu warm . compiling thousands of packages is a daily exercise of an average gentoo user .",
    "portage provides a mature build system scrutinized by hackers all around the world and tested in every extreme setups . the vcs support ( checking out sources from cvs , svn , git , mercury , etc . )",
    "implemented by eclasses is excellent .",
    "both the hsf technical report  @xcite and gamblin et al .",
    "@xcite argue that multiple versions and multiple build configurations of the same package should be available at the same time to support wide user groups in a shared hpc environment .",
    "gamblin et al .",
    "@xcite also put forward explicitly that software build is by its nature combinatorial , therefore a package manager should support all the combinations natively .",
    "although from an administrator s point of view the system can potentially have all kinds of combinations , for a single user or a closely collaborated group this is an overkill .",
    "if each user group maintains their own software stack , support for multiple versions and build configurations is rarely necessary",
    ". therefore the advantage provided by multiple versions and build configurations is limited to administrators .",
    "only a few packages need explicit version tracking and specific build configurations , like compilers / interpreters ( gcc-4 vs. 5 vs. 6 , python-2 vs. 3 , ruby-2.2 vs. 2.3 ) , mpi implementations , blas / lapack implementations , autoconf / automake versions , complete rewrites of frameworks ( geant-3 vs. 4 ) . for the majority of relatively small tools the cost of complexity exceeds the benefit of diversity of multiple versions and build configurations .",
    "ultimately it is a balance between simplicity and diversity .",
    "portage provides straightforward solutions for installing multiple package versions with _ slots _ and for selecting among alternative implementations with _",
    "eselect _ , or disabling all implementations by default and only enabling them after conscious and educated decisions .",
    "conversely , installing a multitude of versions and build configurations of a single package _ by default _ is pursuing diversity to the extreme .",
    "project management in scientific software is far from mature .",
    "authors of scientific packages often value instant gratification ( publish of an article ) more than long term maintainability ( robust build system , stable api , etc . ) .",
    "abi and even api incompatibilities between minor updates are common .",
    "function calls from libraries could give different results when linked against different versions of stardard c++ runtime .",
    "it therefore becomes crucial for a package manager to support multiple versions and build configurations to facilitate reproducibility in research .",
    "package managers with such a feature provide an instant solution to the chaos of scientific software like a painkiller .",
    "providing such a feature by default may encourage bad practice .",
    "there is a growing consensus that computer programs are replacing mathematics to become the most used language of science .",
    "there will be more sophisticated scientific software in the future",
    ". the value of good practice in project management will be more conspicuous , most of which are already established in free and open source software communities . in the context of hpc ,",
    "it is more important to draw on the experience of software communities than to circumvent issues caused by bad designs .    therefore supporting multiple versions and build configurations by default calls for more caution , especially for a healthy scientific ecosystem in the a long run .",
    "portage is a powerful package management system from gentoo .",
    "it is robust , mature , well - documented and user - friendly .",
    "it is especially suitable in hpc setups .",
    "gentoo prefix is easy to bootstrap , and easier to bootstrap a new instance from an existing one .",
    "it brings the power of a well - received metadistribution to the users , and at the same time reduces the heavy maintanance burden of administrators .",
    "portage and gentoo repositories are scrutinized by hundreds of developers worldwide , many of whom are software professionals and respected hackers . they grow out of a group of people who engineer complex software .",
    "their wisdom to handle complexity is invaluable to scientific communities ."
  ],
  "abstract_text": [
    "<S> providing users of hpc systems with a wide variety of up to date software packages is a challenging task . </S>",
    "<S> large software stacks built from source are difficult to manage , requiring powerful package management tools . </S>",
    "<S> the portage package manager from gentoo is a highly flexible tool that offers a mature solution to this otherwise daunting task . </S>",
    "<S> the gentoo prefix project develops and maintains a way of installing gentoo systems in non - standard locations , bringing the virtues of gentoo to other operating systems . </S>",
    "<S> here we demonstrate how a gentoo prefix installation can be used to cross compile software packages for the intel xeon phi known as knights corner , as well as to manage large software stacks in hpc environments . </S>"
  ]
}
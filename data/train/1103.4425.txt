{
  "article_text": [
    "due to the high frequency of the fastest internal motions in molecular systems , the discrete time step for molecular dynamics simulations must be very small ( of the order of femtoseconds ) , while the actual span of biochemical proceses typically require the choice of relatively long total times for simulations ( e.g. , from microseconds to milliseconds for protein folding processes ) .",
    "in addition to this , since biologically interesting molecules ( like proteins @xcite and dna @xcite ) consist of thousands of atoms , their trajectories in configuration space are esentially chaotic , and therefore reliable quantities can be obtained from the simulation only after statistical analysis @xcite . in order to cope with these two requirements , which force the computation of a large number of dynamical steps",
    "if predictions want to be made , great efforts are being done both in hardware @xcite and in software @xcite solutions .",
    "in fact , only in very recent times , simulations for interesting systems of hundreds of thousand of atoms in the millisecond scale are starting to become affordable , being still , as we mentioned , the main limitation of these computational techniques the large difference between the elemental time step used to integrate the equations of motion and the total time span needed to obtain useful information . in this context ,",
    "strategies to increase the time step are very valuable .",
    "a widely used method to this end is to constrain some of the internal degrees of freedom @xcite of a molecule ( typically bond lengths , sometimes bond angles and rarely dihedral angles . for a verlet - like integrator @xcite , stability requires the time step to be at least about five times smaller than the period of the fastest vibration in the studied system @xcite .",
    "here is where constraints come into play . by constraining the hardest degrees of freedom ,",
    "the fastest vibrational motions are frozen , and thus larger time steps still produce stable simulations . if constraints are imposed on bond lengths involving hydrogens , the time step can typically be increased by a factor of 2 to 3 ( from 1 fs to 2 or 3 fs ) @xcite .",
    "constraining additional internal degrees of freedom , such as heavy atoms bond lengths and bond angles , allows even larger timesteps @xcite , but one has to be careful , since , as more and softer degrees of freedom are constrained , the more likely it is that the physical properties of the simulated system could be severely distorted @xcite .",
    "the essential ingredient in the calculation of the forces produced by the imposition of constraints are the so - called lagrange multipliers @xcite , and their efficient numerical evaluation is therefore of the utmost importance . in this work ,",
    "we show that the fact that many interesting biological molecules are esentially linear polymers allows to calculate the lagrange multipliers in order @xmath0 operations ( for a molecule where @xmath0 constraints are imposed ) in an exact ( up to machine precision ) , non - iterative way .",
    "moreover , we provide a method to do so which is based in a clever ordering of the constraints indices , and in a recently introduced algorithm for solving linear banded systems @xcite .",
    "it is worth mentioning that , in the specialized literature , this possibility has not been considered as far as we are aware ; with some works commenting that solving this kind of linear problems ( or related ones ) is costly ( but not giving further details ) @xcite , and some other works explicitly stating that such a computation must take @xmath2 @xcite or @xmath3 @xcite operations .",
    "also , in the field of robot kinematics , many @xmath1 algorithms have been devised to deal with different aspects of constrained physical systems ( robots in this case ) @xcite , but none of them tackles the calculation of the lagrange multipliers themselves .",
    "this work is structured as follows . in sec .",
    "[ sec_aclm ] , we introduce the basic formalism for the calculation of constraint forces and lagrange multipliers . in sec .",
    "[ soc ] , we explain how to index the constraints in order for the resulting linear system of equations to be banded with the minimal bandwidth ( which is essential to solve it efficiently ) .",
    "we do this starting by very simple toy systems and building on complexity as we move forward towards the final discussion about dna and proteins ; this way of proceeding is intended to help the reader build the corresponding indexing for molecules not covered in this work . in sec .  [",
    "sec : numerical ] , we apply the introduced technique to a polyalanine peptide using the amber molecular dynamics package and we compare the relative efficiency between the calculation of the lagrange multipliers in the traditional way ( @xmath2 ) and in the new way presented here ( @xmath1 ) . finally , in sec .  [ sec : conclusions ] , we summarize the main conclusions of this work and outline some possible future applications .",
    "if holonomic , rheonomous constraints are imposed on a classical system of @xmath4 atoms , and the dalembert s principle is assumed to hold , its motion is the solution of the following system of differential equations @xcite :    [ sistembasico ] @xmath5    where  ( [ newton ] ) is the modified newton s second law and  ( [ constr ] ) are the equations of the constraints themselves ; @xmath6 are the lagrange multipliers associated with the constraints ; @xmath7 represents the external force acting on atom @xmath8 , @xmath9 is its euclidean position , and @xmath10 colectively denote the set of all such coordinates .",
    "we assume @xmath7 to be conservative , i.e. , to come from the gradient of a scalar potential function @xmath11 ; and @xmath12 should be regarded as the _ force of constraint _ acting on atom @xmath8 .    also , in the above expression and in this whole document we will use the following notation for the different indices :    * @xmath13 ( except if otherwise stated ) for atoms .",
    "* @xmath14 ( except if otherwise stated ) for the atoms coordinates when no explicit reference to the atom index needs to be made .",
    "* @xmath15 for constrains and the rows and columns of the associated matrices . * @xmath16 as generic indices for products and sums .",
    "the existence of @xmath17 constraints turns a system of @xmath18 differential equations with @xmath19 unknowns into a system of @xmath20 algebraic - differential equations with @xmath20 unknowns .",
    "the constraints equations in  ( [ constr ] ) are the new equations , and the lagrange multipliers are the new unknowns whose value must be found in order to solve the system .    if the functions @xmath21 are analytical , the system of equations in  ( [ sistembasico ] ) is equivalent to the following one :    @xmath22    in this new form , it exists a more direct path to solve for the lagrange multipliers : if we explicitly calculate the second derivative in eq .",
    "( [ constr2 ] ) and then substitute eq .",
    "( [ newton2 ] ) where the accelerations appear , we arrive to @xmath23 where we have implicitly defined    [ pq ] @xmath24    and it becomes clear that , at each @xmath25 , the lagrange multipliers @xmath26 are actually a _ known _ function of the positions and the velocities .",
    "we shall use the shorthand @xmath27 and , @xmath28 , @xmath29 , and @xmath30 to denote the whole @xmath0-tuples , as usual .",
    "now , in order to obtain the lagrange multipliers @xmath31 , we just need to solve @xmath32    this is a linear system of @xmath17 equations and @xmath17 unknowns . in the following",
    ", we will prove that the solution to it , when constraints are imposed on typical biological polymers , can be found in @xmath33 operations without the use of any iterative or truncation procedure , i.e. , in an exact way up to machine precision . to show this , first",
    ", we will prove that the value of the vectors @xmath29 and @xmath30 can be obtained in @xmath33 operations .",
    "then , we will show that the same is true for all the non - zero entries of matrix @xmath34 , and finally we will briefly discuss the results in @xcite , where we introduced an algorithm to solve the system in  ( [ lm ] ) also in @xmath33 operations .",
    "it is worth remarking at this point that , in this work , we will only consider constraints that hold the distance between pairs of atoms constant , i.e. , @xmath35 where @xmath36 is a constant number , and the fact that we can establish a correspondence between constrained pairs ( @xmath37 ) and the constraints indices has been explicitly indicated by the notation @xmath38 .",
    "this can represent a constraint on :    * a bond length between atoms @xmath8 and @xmath39 , * a bond angle between atoms @xmath8 , @xmath39 and @xmath40 , if both @xmath8 and @xmath39 are connected to @xmath40 through constrained bond lengths , * a principal dihedral angle involving @xmath8 , @xmath39 , @xmath40 and @xmath41 ( see @xcite for a rigorous definition of the different types of internal coordinates ) , if the bond lengths ( @xmath37 ) , ( @xmath42 ) and ( @xmath43 ) are constrained , as well as the bond angles ( @xmath44 ) and ( @xmath45 ) , * or a phase dihedral angle involving @xmath8 , @xmath39 , @xmath40 and @xmath41 if the bond lengths ( @xmath37 ) , ( @xmath42 ) and ( @xmath46 ) are constrained , as well as the bond angles ( @xmath44 ) and ( @xmath47 ) .    this way to constrain degrees of freedom",
    "is called _",
    "triangularization_. if no triangularization is desired ( as , for example , if we want to constrain dihedral angles but not bond angles ) , different explicit expressions than those in the following paragraphs must be written down , but the basic concepts introduced here are equally valid and the main conclusions still hold .    now , from eq .",
    "( [ sigma_generica ] ) , we obtain @xmath48    inserting this into  ( [ pq1 ] ) , we get a simple expression for @xmath49 @xmath50    the calculation of @xmath51 is more involved , but it also results into a simple expression : first , we remember that the indices run as @xmath14 , and @xmath52 , and we produce the following trivial relationship : @xmath53 where @xmath54 , @xmath55 and @xmath56 are the unitary vectors along the @xmath10 , @xmath57 and @xmath58 axes , respectively .    therefore , much related to eq .",
    "( [ grad_sigma ] ) , we can compute the first derivative of @xmath59 : @xmath60 \\ , \\end{aligned}\\ ] ] and also the second derivative : @xmath61 \\nonumber \\\\   & & \\mbox { } \\cdot    [ ( \\delta_{3\\alpha-2,\\nu}\\hat{i }    + \\delta_{3\\alpha-1,\\nu}\\hat{j }    + \\delta_{3\\alpha,\\nu}\\hat{k } )   -(\\delta_{3\\beta-2,\\nu}\\hat{i }    + \\delta_{3\\beta-1,\\nu}\\hat{j }    + \\delta_{3\\beta,\\nu}\\hat{k } ) ] \\nonumber \\\\   & = & 2    ( \\delta_{3\\alpha-2,\\mu}\\delta_{3\\alpha-2,\\nu }    + \\delta_{3\\beta-2,\\mu}\\delta_{3\\beta-2,\\nu }    -\\delta_{3\\alpha-2,\\mu}\\delta_{3\\beta-2,\\nu }    -\\delta_{3\\beta-2,\\mu}\\delta_{3\\alpha-2,\\nu } \\nonumber \\\\   & & \\mbox { }     + \\delta_{3\\alpha-1,\\mu}\\delta_{3\\alpha-1,\\nu }    + \\delta_{3\\beta-1,\\mu}\\delta_{3\\beta-1,\\nu }    -\\delta_{3\\alpha-1,\\mu}\\delta_{3\\beta-1,\\nu }    -\\delta_{3\\beta-1,\\mu}\\delta_{3\\alpha-1,\\nu } \\nonumber \\\\   & & \\mbox { }     + \\delta_{3\\alpha,\\mu}\\delta_{3\\alpha,\\nu }    + \\delta_{3\\beta,\\mu}\\delta_{3\\beta,\\nu }    -\\delta_{3\\alpha,\\mu}\\delta_{3\\beta,\\nu }    -\\delta_{3\\beta,\\mu}\\delta_{3\\alpha,\\nu } ) \\ .\\end{aligned}\\ ] ]    taking this into the original expression for @xmath51 in eq .",
    "( [ pq2 ] ) and playing with the sums and the deltas , we arrive to @xmath62    now , eqs .",
    "( [ defo ] ) , ( [ neop ] ) and ( [ neoq ] ) can be gathered together to become @xmath63 where we can see that the calculation of @xmath64 takes always the same number of operations , independently of the number of atoms in our system , @xmath4 , and the number of constraints imposed on it , @xmath17 .",
    "therefore , calculating the whole vector @xmath28 in eq .",
    "( [ lm ] ) scales like @xmath17 .    in order to obtain an explicit expression for the entries of the matrix @xmath34",
    ", we now introduce eq .",
    "( [ grad_sigma ] ) into its definition in eq .",
    "( [ defr ] ) : @xmath65 where we have used that @xmath66    looking at this expression , we can see that a constant number of operations ( independent of @xmath4 and @xmath17 ) is required to obtain the value of every entry in @xmath34 .",
    "the terms proportional to the kroenecker deltas imply that , as we will see later , in a typical biological polymer , the matrix @xmath34 will be sparse ( actually banded if the constraints are appropriately ordered as we describe in the following sections ) , being the number of non - zero entries actually proportional to @xmath0 .",
    "more precisely , the entry @xmath67 will only be non - zero if the constraints @xmath68 and @xmath69 share an atom .",
    "now , since both the vector @xmath28 and the matrix @xmath34 in eq .",
    "( [ lm ] ) can be computed in @xmath1 operations , it only remains to be proved that the solution of the linear system of equations is also an @xmath1 process , but this is a well - known fact when the matrix defining the system is banded . in  @xcite , we introduced a new algorithm to solve this kind of banded systems which is faster and more accurate than existing alternatives .",
    "essentially , we shown that the linear system of equations @xmath70 where @xmath71 is a @xmath72 matrix , @xmath10 is the @xmath73 vector of the unknowns , @xmath74 is a given @xmath73 vector and @xmath71 is _ banded _ , i.e. , it satisfies that for known @xmath75 @xmath76 can be directly solved up to machine precision in @xmath77 operations .",
    "this can be done using the following set of recursive equations for the auxiliary quantities @xmath78 ( see @xcite for details ) :    [ coefsband ] @xmath79    if the matrix @xmath71 is symmetric ( @xmath80 ) , as it is the case with @xmath34 [ see  ( [ defr ] ) ] , we can additionally save about one half of the computation time just by using @xmath81 instead of ( [ xifinal_c ] ) .",
    "( [ xifinal_csim ] ) can be obtained from ( [ coefsband ] ) by induction , and we recommend these expressions for the @xmath82 coefficients because other valid ones ( like considering @xmath83 , @xmath84 , which involves square roots ) are computationally more expensive .    in the next sections ,",
    "we show how to index the constraints in such a way that nearby indices correspond to constraints where involved atoms are close to each other and likely participate of the same constraints .",
    "in such a case , not only will the matrix @xmath34 in eq .",
    "( [ lm ] ) be banded , allowing to use the method described above , but it will also have a minimal bandwidth @xmath85 , which is also an important point , since the computational cost for solving the linear system scales as @xmath86 ( when the bandwidth is constant ) .",
    "in this section we describe how to index the constraints applied to the bond lengths and bond angles of a series of model systems and biological molecules with the already mentioned aim of minimizing the computational cost associated to the obtention of the lagrange multipliers .",
    "the presentation begins by deliberately simple systems and proceeds to increasingly more complicated molecules with the intention that the reader is not only able to use the final results presented here , but also to devise appropriate indexings for different molecules not covered in this work .",
    "the main idea we have to take into account , as expressed in section [ sec_aclm ] , is to use nearby numbers to index constraints containing the same atoms .",
    "if we do so , we will obtain _ banded _",
    "@xmath34 matrices .",
    "further computational savings can be obtained if we are able to reduce the number of @xmath82 coefficients in eqs .",
    "( [ coefsband ] ) to be calculated . in more detail , solving a linear system like  ( [ lm ] ) where the @xmath34 is @xmath87 and banded with semi - band width ( i.e. , the number of non - zero entries neighbouring the diagonal in one row or column ) @xmath85 requires @xmath88 operations if @xmath85 is a constant .",
    "therefore , the lower the value of @xmath85 , the smaller the number of required numerical effort .",
    "when the semi - band width @xmath85 is not constant along the whole matrix , things are more complicated and the cost is always between @xmath89 and @xmath90 , depending on how the different rows are arranged . in general , we want to minimize the number of zero fillings in the process of gaussian elimination ( see @xcite for further details ) , which is achieved by not having zeros below non - zero entries .",
    "this is easier to understand with an example : consider the following matrices , where @xmath91 and @xmath92 represent different non - zero values for every entry ( i.e. , not all @xmath92 , nor all @xmath91 must take the same value , and different symbols have been chosen only to highlight the main diagonal ) : @xmath93    during the gaussian elimination process that is behind ( [ coefsband ] ) , in @xmath71 , five coefficients @xmath82 above the diagonal are to be calculated , three in the first row and two in the second one , because the entries below non - zero entries become non - zero too as the elimination process advances ( this is what we have called ` zero filling ' ) .",
    "on the other hand , in @xmath94 , which contains the same number of non - zero entries as @xmath71 , only three coefficients @xmath82 have to be calculated : two in the first row and one in the second row .",
    "whether @xmath34 looks like @xmath71 or like @xmath94 depends on our choice of the constraints ordering .",
    "one has also to take into account that no increase in the computational cost occurs if a series of non - zero columns is separated from the diagonal by columns containing all zeros .",
    "i.e. , the linear systems associated to the following two matrices require the same numerical effort to be solved : @xmath95      as promised , we start by a simple model of a biomolecule : an open linear chain without any branch . in this case",
    ", the atoms should be trivially numbered as in fig .",
    "[ fig : lc ] ( any other arrangement would have to be justified indeed ! ) .        if we only constrain bond lengths , the fact that only consecutive atoms participate of the same constraints allows us to simplify the notation with respect to eq .",
    "( [ sigma_generica ] ) and establish the following ordering for the constraints indices : @xmath96 with @xmath97    this choice results in a tridiagonal matrix @xmath34 , whose only non - zero entries are those lying in the diagonal and its first neighbours .",
    "this is the only case for which an exact calculation of the lagrange multipliers exists in the literature as far as we are aware @xcite .",
    "the next step in complexity is to constrain the bond angles of the same linear chain that we discussed above .",
    "the atoms are ordered in the same way , as in fig .",
    "[ fig : lc ] , and the trick to generate a banded matrix @xmath34 with minimal bandwidth is to alternatively index bond length constraints with odd numbers , @xmath98 and bond angle constraints with even ones , @xmath99 where the regular pattern involving the atom indicies that participate of the same constraints has allowed again to use a lighter notation .    the constraints equations in this case are    @xmath100    respectively , and , if this indexing is used , @xmath34 is a banded matrix where @xmath85 is 3 and 4 in consecutive rows and columns .",
    "therefore , the mean @xmath101 is 3.5 , and the number of @xmath82 coefficients that have to be computed per row in the gaussian elimination process is the same because the matrix contains no zeros that are filled .",
    "a further feature of this system ( and other systems where both bond lengths and bond angles are constrained ) can be taken into account in order to reduce the computational cost of calculating lagrange multipliers in a molecular dynamics simulation : a segment of the linear chain with constrained bond lengths and bond angles is represented in fig .",
    "[ fig : angs ] , where the dashed lines correspond to the virtual bonds between atoms that , when kept constant , implement the constraints on bond angles ( assuming that the bond lengths , depicted as solid lines , are also constrained ) .        due to the fact that all these distances are constant , many of the entries of @xmath34 will remain unchanged during the molecular dynamics simulation . as an example",
    ", we can calculate @xmath102 where we have used the law of cosines .",
    "the right - hand side does not depend on any time - varying objects ( such as @xmath9 ) , being made of only constant quantities .",
    "therefore , the value of @xmath103 ( and many other entries ) needs not to be recalculated in every time step , which allows to save computation time in a molecular dynamics simulation .      in order to incrementally complicate the calculations",
    ", we now turn to a linear molecule with only one atom connected to the backbone , such the one displayed in figure [ fig : branched1 ] .",
    "the corresponding equations of constraint and the ordering in the indices that minimizes the bandwidth of the linear system are    [ singlybranched ] @xmath104    where the trick this time has been to alternatively consider atoms in the backbone and atoms in the branches as we proceed along the chain .",
    "the matrix @xmath34 of this molecule presents a semi - band width which is alternatively 2 and 1 in consecutive rows / columns , with average @xmath105 and the same number of superdiagonal @xmath82 coefficients to be computed per row .      the next molecular topology we will consider is that of an alkane ( a familiy of molecules with a long tradition in the field of constraints @xcite ) , i.e. , a linear backbone with two 1-atom branches attached to each site ( see fig .  [",
    "fig : nalkane ] ) .",
    "the ordering of the constraints that minimizes the bandwidth of the linear system for this case is    @xmath106    where the trick has been in this case to alternatively constrain the bond lengths in the backbone and those connecting the branching atoms to one side or the other .",
    "the resulting @xmath34 matrix require the calculation of 2 @xmath82 coefficients per row when solving the linear system .      if we want to additionally constrain bond angles in a molecule with the topology in fig .",
    "[ fig : branched1 ] , the following ordering is convenient :    @xmath107    this ordering produces 16 non - zero entries above the diagonal per each group of 4 rows in the matrix @xmath34 when making the calculations to solve the associated linear system .",
    "this is , we will have to calculate a mean of @xmath108 super - diagonal coefficients @xmath82 per row . when we studied the linear molecule with constrained bond lengths and bond angles , this mean was equal to @xmath109 , so including minimal branches in the linear chain makes the calculations just slightly longer .      if we now want to add bond angle constraints to the bond length ones described in sec .",
    "[ sec : doubly_branched ] for alkanes , the following ordering produces a matrix @xmath34 with a low half - band width :    @xmath110    in this case , the average number of @xmath82 coefficients to be calculated per row is approximately 5.7 .          if we have cycles in our molecules , the indexing of the constraints is only slightly modified with respect to the open cases in the previous sections .",
    "for example , if we have a single - branch cyclic topology , such as the one displayed in fig .",
    "[ fig : rings]a , the ordering of the constraints is the following :    @xmath111    these equations are the same as those in [ secbl ] , plus a final constraint corresponding to the bond which closes the ring .",
    "these constraints produce a matrix @xmath34 where only the diagonal entries , its first neighbours , and the entries in the corners ( @xmath112 and @xmath113 ) are non - zero .",
    "in this case , the associated linear system in eq .",
    "( [ lm ] ) can also be solved in @xmath1 operations , as we discuss in @xcite . in general , this is also valid whenever @xmath34 is a sparse matrix with only a few non - zero entries outside of its band , and therefore we can apply the technique introduced in this work to molecular topologies containing more than one cycle .    the ordering of the constraints and the resulting linear systems for different cyclic species , such as the one depicted in fig .",
    "[ fig : rings]b , can be easily constructed by the reader using the same basic ideas .      as we discussed in sec .",
    "[ sec : introduction ] , proteins are one of the most important families of molecules from the biological point of view : proteins are the nanomachines that perform most of the complex tasks that need to be done in living organisms , and therefore it is not surprising that they are involved , in one way or another , in most of the diseases that affect animals and human beings . given the efficiency and precision with which proteins carry out their missions , they are also being explored from the technological point of view .",
    "the applications of proteins even outside the biological realm are many if we could harness their power @xcite , and molecular dynamics simulations of great complexity and scale are being done in many laboratories around the world as a tool to understand them @xcite .",
    "proteins present two topological features that simplify the calculation of the lagrange multipliers associated to constraints imposed on their degrees of freedom :     represents the first numbered atom in each residue ( the amino nitrogen ) and @xmath114 is the number of atoms in the side chain .",
    "* b ) * indexing of the bond length constraints ; @xmath68 denotes the index of the first constraint imposed on the residue ( the n - h bond length ) and @xmath115 is the variable number of constraints imposed on the side chain.,width=302 ]    * they are linear polymers , consisting of a backbone with short ( 17 atoms at most ) groups attached to it @xcite .",
    "this produces a banded matrix @xmath34 , thus allowing the solution of the associated linear problem in @xmath1 operations . even in the case",
    "that disulfide bridges , or any other covalent linkage that disrupts the linear topology of the molecule , exist , the solution of the problem can still be found efficiently if we recall the ideas discussed in sec .",
    "[ ring1 ] .",
    "* the monomers that typically make up these biological polymers , i.e. , the residues associated to the proteinogenic aminoacids , are only 20 different molecular structures .",
    "therefore , it is convenient to write down explicitly one block of the @xmath34 matrix for each known monomer , and to build the @xmath34 matrix of any protein simply joining together the precalculated blocks associated to the corresponding residues the protein consists of .    the structure of a segment of the backbone of a protein chain is depicted in fig .",
    "[ fig : prot ] .",
    "the green spheres represent the side chains , which are the part of the amino acid residue that can differ from one monomer to the next , and which usually consist of several atoms : from 1 atom in the case of glycine to 17 in arginine or tryptophan . in fig .",
    "[ fig : prot]a , we present the numbering of the atoms , which will support the ordering of the constraints , and , in fig .  [",
    "fig : prot]b , the indexing of the constraints is presented for the case in which only bond lengths are constrained ( the bond lengths plus bond angles case is left as an exercise for the reader ) .",
    "using the same ideas and notation as in the previous sections and denoting by @xmath116 the block of the matrix @xmath34 that corresponds to a given amino acid residue @xmath117 , with @xmath118 , we have that , for the monomer dettached of the rest of the chain , @xmath119 where the explicit non - zero entries are related to the constraints imposed on the backbone and @xmath120 denotes a block associated to those imposed on the bonds that belong to the different sidechains .",
    "the dimension of this matrix is @xmath121 and the maximum possible semi - band width is 12 for the bulkiest residues .    a protein s global matrix @xmath34 has to be built by joining together blocks like the one above , and adding the non - zero elements related to the imposition of constraints on bond lengths that connect one residue with the next .",
    "these extra elements are denoted by @xmath122 and a general scheme of the final matrix is shown in fig .",
    "[ fig : proteinmatrix ] .     for a protein molecule with @xmath123 residues . in black",
    ", we represent the potentially non - zero entries , and each large block in the diagonal is given by  ( [ defr]).,width=264 ]    the white regions in this scheme correspond to zero entries , and we can easily check that the matrix is banded .",
    "in fact , if each one of the diagonal blocks is constructed conveniently , they will contain many zeros themselves and the bandwidth can be reduced further .",
    "the size of the @xmath124 blocks will usually be much smaller than that of their neighbour diagonal blocks .",
    "for example , in the discussed case in which we constrain all bond lengths , @xmath124 are @xmath125 ( or @xmath126 ) blocks , and the diagonal blocks size is between @xmath127 ( glycine ) and @xmath128 ( tryptophan ) .",
    "nucleic acids are another family of very important biological molecules that can be tackled with the techniques described in this work .",
    "dna and rna , the two subfamilies of nucleic acids , consist of linear chains made up of a finite set of monomers ( called ` bases ' ) .",
    "this means that they share with proteins the two features mentioned in the previous section and therefore the lagrange multipliers associated to the imposition of constraints on their degrees of freedom can be efficiently computed using the same ideas .",
    "it is worth mentioning that dna typically appears in the form of two complementary chains whose bases form hydrogen - bonds . since these bonds are much weaker than a covalent bond , imposing bond length constraints on them such as the ones in eq .",
    "( [ sigma_generica ] ) would be too unrealistic for many practical purposes ,     denotes the index of the first constraint imposed on the nucleotide and @xmath115 is the variable number of constraints imposed on the bonds in the base.,width=340 ]    in fig .",
    "[ fig : dna_constrs ] , and following the same ideas as in the previous section , we propose a way to index the bond length constraints of a dna strand which produces a banded matrix @xmath34 of low bandwidth .",
    "green spheres represent the ( many - atom ) bases ( a , c , t or g ) , and the general path to be followed for consecutive constraint indices is depicted in the upper left corner : first the sugar ring , then the base and finally the rest of the nucleotide , before proceeding to the next one in the chain .",
    "this ordering translates into the following form for the block of @xmath34 corresponding to one single nucleotide dettached from the rest of the chain : @xmath129 where @xmath120 is the block associated to the constraints imposed on the bonds that are contained in the base , @xmath130 , @xmath131 , @xmath132 , and @xmath133 are very sparse rectangular blocks with only a few non - zero entries in them , and the form of the diagonal blocks associated to the sugar ring and backbone constraints is the following :    [ eq : r11r33 ] @xmath134    analagously to the case of proteins , as many blocks as those in eq .",
    "( [ rpartdna ] ) as nucleotides contains a given dna strand have to be joined to produce the global matrix @xmath34 of the whole molecule , together with the @xmath122 blocks associated to the constraints on the bonds that connect the different monomers . in fig .",
    "[ fig : matrixadn ] , a scheme of this global matrix is depicted and we can appreciate that it indeed banded . the construction of the matrix @xmath34 for a rna molecule should follow the same steps and the result will be very similar .     for a dna molecule with @xmath135 nucleotides . in black , we represent the potentially non - zero entries , and each large block in the diagonal is given by  ( [ rpartdna]).,width=264 ]",
    "in this section , we apply the efficient technique introduced in this work to a series of polyalanine molecules in order to calculate the lagrange multipliers when bond length constraints are imposed . we also compare our method , both in terms of accuracy and numerical efficiency , to the traditional inversion of the matrix @xmath34 without taking into account its banded structure .",
    "we used the code avogadro @xcite to build polyalanine chains of @xmath1362 , 5 , 12 , 20 , 30 , 40 , 50 , 60 , 80 , 90 and 100 residues , and we chose their initial conformation to be approximately an alpha helix , i.e. , with the values of the ramachandran angles in the backbone @xmath137 and @xmath138 @xcite .",
    "next , for each of these chains , we used the molecular dynamics package amber @xcite to produce the atoms positions ( @xmath10 ) , velocities ( @xmath139 ) and external forces ( @xmath140 ) needed to calculate the lagrange multipliers ( see sec .",
    "[ sec_aclm ] ) after a short equilibration molecular dynamics simulations .",
    "we chose to constrain all bond lengths , but our method is equally valid for any other choice , as the more common constraining only of bonds that involve hydrogens .    in order to produce reasonable final conformations , we repeated the following process for each of the chains :    * solvation with explicit water molecules .",
    "* minimization of the solvent positions holding the polypeptide chain fixed ( 3,000 steps ) . * minimization of all atoms positions ( 3,000 steps ) .",
    "* thermalization : changing the temperature from 0 k to 300 k during 10,000 molecular dynamics steps .",
    "* stabilization : 20,000 molecular dynamics steps at a constant temperature of 300 k. * measurement of @xmath10 , @xmath139 and @xmath140 .",
    "neutralization is not necessary , because our polyalanine chains are themselves neutral . in all calculations we used the force field described in @xcite ,",
    "chose a cutoff for coulomb interactions of 10  and a time step equal to 0.002 ps , and impose constraints on all bond lengths as mentioned .",
    "in the thermostated steps , we used langevin dynamics with a collision frequency of 1 ps@xmath141 .",
    ".,width=302 ]    using the information obtained and the indexing of the constraints described in this work , we constructed the matrix @xmath34 and the vector @xmath28 and proceeded to find the lagrange multipliers using eq .",
    "( [ lm ] ) .",
    "since  ( [ lm ] ) is a linear problem , one straightforward way to solve is to use traditional gauss - jordan elimination or lu factorization @xcite .",
    "but these methods have a drawback : they scale with the cube of the size of the system .",
    "i.e. , if we imposed @xmath0 constraints on our system ( and therefore we needed to obtain @xmath0 lagrange multipliers ) , the number of floating point operations that these methods would require is proportional to @xmath142 .",
    "however , as we showed in the previous sections , the fact that many biological molecules , and proteins in particular , are essentially linear , allows to index the constraints in such a way that the matrix @xmath34 in eq .",
    "( [ lm ] ) is banded and use different techniques for solving the problem which require only @xmath1 floating point operations @xcite .",
    "[ table : pruebas ]    .comparison of numerical complexity and accuracy between a traditional gauss - jordan solver and the banded algorithm described in this work , for the calculation of the lagrange multipliers on a series of polyalanine chains as a function of their number of residues @xmath143 . [ cols=\"^,^,^,^,^ \" , ]     in fig .",
    "[ fig : pruebas1 ] and table [ table : pruebas ] , we compare both the accuracy and the execution time of the two different methods : gauss - jordan elimination @xcite , and the banded recursive solution advocated here and made possible by the appropriate indexing of the constraints .",
    "the calculations have been run on a mac os x laptop with a 2.26 ghz intel core 2 duo processor , and the errors were measured using the normalized deviation of @xmath144 from @xmath145 .",
    "i.e. , if we denote by @xmath146 the solution provided by the numerical method , @xmath147    from the obtained results , we can see that both methods produce an error which is very small ( close to machine precision ) , being the accuracy of the banded algorithm advocated in this work slightly higher .",
    "regarding the computational cost , as expected , the gauss - jordan method presents an effort that approximately scales with the cube of the number of constraints @xmath0 ( which is approximately proportional to @xmath143 ) , while the banded technique allowed by the particular structure of the matrix @xmath34 follows a rather accurate lineal scaling .",
    "although it is typical that , when two such different behaviours meet , there exists a range of system sizes for which the method that scales more rapidly is faster and then , at a given system size , a crossover takes place and the slower scaling method becomes more efficient from there on , in this case , and according to the results obtained , the banded technique is less time - consuming for all the explored molecules , and the crossover should exist at a very small system size ( if it exists at all ) .",
    "this is very relevant for any potential uses of the methods introduced in this work .",
    "we have shown that , if we are dealing with typical biological polymers , whose covalent connectivity is that of essentially linear objects , the lagrange multipliers that need to be computed when @xmath0 constraints are imposed on their internal degrees of freedom ( such as bond lengths , bond angles , etc . ) can be obtained in @xmath1 steps as long as the constraints are indexed in a convenient way and banded algorithms are used to solve the associated linear system of equations .",
    "this path has been traditionally regarded as too costly in the literature @xcite , and , therefore , our showing that it can be implemented efficiently could have profound implications in the design of future molecular dynamics algorithms .    since the field of imposition of constraints in moleculary dynamics simulations is dominated by methods that cleverly achieve that the system exactly stays on the constrained subspace as the simulation proceeds by not calculating the exact lagrange multipliers , but a modification of them instead @xcite , we are aware that the application of the new techniques introduced here is not a direct one .",
    "however , we are confident that the low cost of the new method and its close relationship with the problem of constrained dynamics could prompt many advances , some of which are already being pursued in our group . among the most promising lines , we can mention a possible improvement of the shake method @xcite by the use of the exact lagrange multipliers as a guess for the iterative procedure that constitutes its most common implementation .",
    "also , we are studying the possibility of solving the linear problems that appear either in a different implementation of shake ( mentioned in the original work too @xcite ) or in the lincs method @xcite , and which are defined by matrices which are different from but related to the matrix @xmath34 introduced in this work , being also banded if an appropriate indexing of the constraints is used .",
    "finally , we are exploring an extension of the ideas introduced here to the calculation not only of the lagrange multipliers but also of their time derivatives , to be used in higher order integrators than verlet .",
    "we would like to thank giovanni ciccotti for illuminating discussions and wise advices , and claudio cavasotto and isaas lans for the help with the setting up and use of amber .",
    "the numerical calculations have been performed at the bifi supercomputing facilities ; we thank all the staff there for the help and the technical assistance .",
    "this work has been supported by the grants fis2009 - 13364-c02 - 01 ( micinn , spain ) , grupo de excelencia `` biocomputacin y fsica de sistemas complejos '' , e24/3 ( aragn region government , spain ) , araid and ibercaja grant for young researchers ( spain ) .",
    "r . is supported by a jae predoc scholarship ( csic , spain ) .            , r.  ron o.  dror , j.  salmon , j.  grossman , k.  mackenzie , j.  bank , c.  young , b.  batson , k.  bowers , e.  edmond  chow , m.  eastwood , d.  ierardi , j.  john l.  klepeis , j.  jeffrey s.  kuskin , r.  larson , k.  kresten lindorff - larsen , p.  maragakis , m.  m.a .",
    ", s.  piana , s.  yibing , and b.  towles , , in proceedings of the acm / ieee conference on supercomputing ( sc09 ) , acm press , new york , ( 2009 ) .                                                              ,",
    "t.  darden , t.  e. cheatham , c.  simmerling , w.  junmei , d.  r. e. , r.  luo , k.  m. merz , m.  a. pearlman , m.  crowley , r.  walker , z.  wei , w.  bing , s.  hayik , a.  roitberg , g.  seabra , w.  kim , f.  paesani , w.  xiongwu , v.  brozell , s.  tsui , h.  gohlke , y.  lijiang , t.  chunhu , j.  mongan , v.  hornak , p.  guanglei , c.  beroza , d.  h. mathews , c.  schafmeister , w.  s. ross , and p.  a. kollman , , university of california : san francisco ( 2006 ) ."
  ],
  "abstract_text": [
    "<S> in order to accelerate molecular dynamics simulations , it is very common to impose holonomic constraints on their hardest degrees of freedom . in this way , </S>",
    "<S> the time step used to integrate the equations of motion can be increased , thus allowing , in principle , to reach longer total simulation times . the imposition of such constraints results in an aditional set of @xmath0 equations ( the equations of constraint ) and unknowns ( their associated lagrange multipliers ) , that must be solved in one way or another at each time step of the dynamics . in this work it is shown </S>",
    "<S> that , due to the essentially linear structure of typical biological polymers , such as nucleic acids or proteins , the algebraic equations that need to be solved involve a matrix which is banded if the constraints are indexed in a clever way . </S>",
    "<S> this allows to obtain the lagrange multipliers through a non - iterative procedure , which can be considered exact up to machine precision , and which takes @xmath1 operations , instead of the usual @xmath2 for generic molecular systems . </S>",
    "<S> we develop the formalism , and describe the appropriate indexing for a number of model molecules and also for alkanes , proteins and dna . </S>",
    "<S> finally , we provide a numerical example of the technique in a series of polyalanine peptides of different lengths using the amber molecular dynamics package . + * keywords : * constraints , lagrange multipliers , banded systems , molecular dynamics , proteins , dna + </S>"
  ]
}
{
  "article_text": [
    "given a polygon @xmath1 or the vertices of the polygon , say @xmath2 , @xmath3 ... @xmath4 , it is desired to know whether a sample point @xmath0 @xmath5 lies within @xmath1 . _",
    "the status of a point @xmath0 related to a polygon @xmath1 being termed as inside needs to be defined correctly_. the definition is very important in order to retreive unambiguous results for not only simple but intersecting polygons also in a @xmath6 cartesian plane . in this manuscript , new definition of _ inaccessibility _ and _",
    "inside _ has been proposed in order to accurately specify the meaning behind the inclusion of a point within or without a polygon .",
    "* cross over * ( @xcite , @xcite , @xcite , @xcite ) states that if a semi infinite line drawn from @xmath0 cuts the @xmath1 odd number of times , then the point is inside the polygon .",
    "three issues arise in this case , i.e. @xmath7 depending on the * orientation * of the line from the query point , odd or even values can be obtained , if the line passes through vertices .",
    "this gives rise to ambiguous results for the same point with different rays at different orientation .",
    "a prevalent solution is the shifiting of the ray infinitesimally , but then again solution may change drastically depending on the * direction of the shift*. even though this may be a rare case with negligible chance of occurance , the issue persists , leading to ambiguous results . @xmath7",
    "a second issue is that of repeating the cross over multiple times until the point lies inside the polygon .",
    "this leads to * non determinism * as it is not known how many times the rays need to be shot to get an affirmative answer , if ever it is conducted .",
    "@xmath7 in case of intersecting polygons , areas exist which give a different solution than the winding number rule concept .    * winding number rule * ( @xcite , @xcite , @xcite ) states that the number of times one loops around @xmath0 while traversing @xmath1 before reaching the starting point on the polygon shows whether the point is inside the polygon or not .",
    "so a number @xmath8 greater than one can mean that the point is @xmath8 times inside the polygon .",
    "this is an issue because if a point lies inside a polygon once , it lies forever .",
    "thus @xmath9 depicts the idea of * redundancy*.    as will be explained later in detail , the current solution looks at these problems afflicting the status of point related to polygon from a different perspective .",
    "the manuscript defines the concepts of _ inaccessibility _ and _ inside _ of a polygon @xmath1 while relating to the query point @xmath0 .",
    "the proposed solution is motivated from @xcite but has a _ major difference _ in using @xmath0 as a reference point to draw a line chain through it , that cuts the polygon at different intersection points . the following section ( [ sec : novel ] )",
    "shed light on novel algorithm explained with the assumptions involved .",
    "next a theoretical analysis of the solution is given in [ sec : proof ] .",
    "a detailed comparison with the crossover and the winding number with the proposed algorithm is made in sections [ sec : covseh ] and [ sec : wnrvseh ] .",
    "finally , the conclusion is reached in section [ sec : conclusion ] . for detailed analysis of the experimental results and time complexity of the algorithm",
    "please see the appendix below or visit http://arxiv.org/abs/1010.0552 .",
    "the novel algorithm in simple terms can be described as follows . given the sample point ( @xmath10 ) , a horizontal line @xmath11 is drawn through @xmath0 to cut the @xmath1 at @xmath12 locations @xmath13(@xmath14 ) , ... , ( @xmath15 ) @xmath16 , thus breaking the polygon into @xmath12 chains .",
    "a _ chain _ is a series of connected edges of the polygon whose starting and ending points lie on the horizontal straight line that passes through @xmath0 .",
    "mathematically , a chain is a function @xmath17 , with a closed domain defined by the starting and ending points on the horizontal line passing through the point of test @xmath0 , and a range that is the graph of the currently under investigation connected edges of the polygon .",
    "[ def : chain ]    each chain is then checked for whether its two endpoints contain the test point between them ; if not , the chain is discarded .",
    "discarded chains are termed as _ invalid chains _ and those kept for further consideration are referred to as _",
    "valid chains_. the remaining chains are then tested for intersection with a vertical line @xmath18 through @xmath0 .",
    "the intersections found are sorted by height , and paired up .",
    "if the test point is not between a pair , it is outside .",
    "this criterion of containment is checked via the definitions of affine sets and affine combination as follows :    a set @xmath19 is an _ affine set _ , if for any two points @xmath20 and @xmath21 $ ] , @xmath22 .",
    "[ def : affineset ]    an _ affine combination _ of @xmath23 are a set of points of the the form @xmath24 , where @xmath25 .",
    "[ def : affinecomb ]    these definitions and notations and a few others , are adopted from @xcite .",
    "it is assumed that the vertices of the polygon @xmath1 are arranged in order of traversal , starting from one of the vertices",
    ". the traversal order can be in any one direction .",
    "another assumption is that the edges are traversed only once .",
    "this is useful in avoiding multiple loops that may occur in cases of intersecting polygons .",
    "if @xmath0 lies out of the bounding box of the polygon , it is considered outside @xmath1 and no further processing is done .",
    "lastly , if the sample point is one of the vertices of the polygon , then it is considered to be in the polygon .",
    "this final point is assumed as the proposed solution would reach the same conclusion at the expense of computational time . in the theoretical proof",
    ", it will be shown that the assumption for implementation issue is correct .    as the algorithm is explained the concepts of epigraph and hypographs",
    "will also be used for providing an analytically complete elucidation of the generated solution .",
    "the definition of these are as follows :    the _ epigraph _ of a function ( chain ) @xmath26 is a set of points that lie on or above the graph under consideration , such that @xmath27 is a subset of @xmath28 .",
    "[ def : epigraph ]    the _ hypograph _ of a function ( chain ) @xmath26 is a set of points that lie on or below the graph under consideration , such that @xmath29 is a subset of @xmath28 .",
    "[ def : hypograph ]    finally , to decide if the point lies inside or is inaccessible with respect to a polygon under consideration , the definition of nearest chains would be needed .",
    "this definition is as follows :    chains @xmath30 and @xmath31 are _ nearest valid chains _ if :    * the @xmath32 @xmath33 chains below @xmath0 such that @xmath34 . * the @xmath35 @xmath36 chains above @xmath0 such that @xmath37 .    [ def : nearestchain ]",
    "given the new solution , it becomes imperative to prove the correctness of the solution .",
    "this follows due to the fact that definitions like the cross over and the winding number rule exist that state the meaning of inside from different perspectives , thus giving contradictory results .",
    "new definitions of _ inside _ and _ inaccessibility _ of a point @xmath0 related to polygon @xmath1 are proposed and a relation between inaccessibility and inside is proved .",
    "_ this proof shows that consistent results can be obtained if the meaning of the inaccessibility and inside of a polygon related to a point is are framed correctly in an abstract sense_.    it must be noted that the points that lie on vertices and edges are special cases and the definitions of inside and inaccessibility get slightly modified .",
    "but this does not mean that the meaning of inaccessibility and inside get twisted or modified from an abstract sense .",
    "two cases are presented , one that is a point lying on a vertex and the other for the general case where it lies either on the edge or anywhere else .",
    "the definitions of inaccessibility and inside are proposed for the case of a point lying on a vertex .",
    "the essence of abstract meaning of the same gets carried over to points not on vertex also but the definitions are slgihtly modified .",
    "the _ inaccessibility _ @xmath38 of a point @xmath0 related to a polygon @xmath1 , is the number of valid chains that need to be _",
    "@xmath39 [ def : inacc_case_1 ]    the status of a point @xmath0 related to a polygon @xmath1 , that is @xmath40 , is the existance of a chain @xmath41 such that @xmath42 or @xmath43 . @xmath44",
    "[ def : inside_case_1 ]    based on these two definitions , two throrems need to be proved regarding the relationship of inaccessibility of a point as well as the status of a point whether it is inside with respect to the polygon .",
    "a point @xmath0 related to polygon @xmath1 is inside as well as inaccessible when : @xmath45 iff @xmath46",
    "[ theo : case_1_a ]    \\(a ) if @xmath46 then @xmath45 +    given that @xmath47 , there exists @xmath48 valid chains that need to be _ broken _ according to definition [ def : inacc_case_1 ] .",
    "it is known that a chain is valid when either its epigraph or hypograph contains @xmath0 .",
    "this existance of @xmath48 valid chains imply that @xmath49 @xmath50 .",
    "but this is the definition of stauts of @xmath0 related to @xmath1 , i.e. @xmath51 or @xmath45 .",
    "+    \\(b ) if @xmath45 then @xmath46 +    given @xmath51 implies that @xmath52 for a chain @xmath41 in @xmath53 .",
    "thus chain @xmath41 is a valid chain , as it contains the point @xmath0 . in order for @xmath0 to be inaccessible",
    ", there must exist atleast @xmath54 vaild chain in @xmath1 that needs to be _",
    "broken_. since @xmath41 is one such chain and the only chain that contains @xmath0 , the inaccessibility order of @xmath0 related to @xmath1 in @xmath55 or @xmath56 .",
    "if @xmath0 is a vertex such that it is an intersection point of two or more lines of a polygon , then all chains that have their epigraph or hypograph contain @xmath0 , are valid .",
    "since it requires @xmath48 ( if @xmath48 is the number of valid chains ) chains to be _",
    "broken_.    cases need to be shown pictorially to get a feel of what the theorem is suggesting about .",
    "figure [ fig : case_1_a ] shows three different polygons with @xmath0 as the point under consideration . the polygon in figure [ fig : case_1_a].(a ) has four chains that contain @xmath0 namely ( a ) @xmath0tu ( b ) uv@xmath0 ( c ) @xmath0wx and ( d ) xy@xmath0 , which are valid .",
    "thus by theorem [ theo : case_1_a ] , @xmath51 and @xmath57 .",
    "thus @xmath0 lies inside the polygon .",
    "similarly , for figure [ fig : case_1_a].(b ) there is one chain @xmath0tu@xmath0 which is valid as it contains the point @xmath0 .",
    "thus @xmath51 and @xmath57 .",
    "for the case of figure [ fig : case_1_a].(c ) there exists two chains that contain @xmath0 i.e. ( a ) @xmath0tu@xmath0 and @xmath0vw@xmath0 which are valid .",
    "so @xmath51 and @xmath58 .",
    "note that since this holds true always when @xmath0 lies on the vertex of a polygon , it is obvious and correct to assume that the point is in the polygon by first checking if @xmath0 is any one of the vertices in the polygon .",
    "this helps to avoid the implementation hurdle of checking the theorem .",
    "but again it is stressed that first the point needs to be checked against vertices of the polygon , in order to know if they belong to @xmath1 .",
    "a point @xmath0 related to polygon @xmath1 is not inside as well as not inaccessible when : @xmath59 iff @xmath60",
    "[ theo : case_1_b ]    \\(a ) if @xmath60 then @xmath59 +    given that @xmath61 , there exists no valid chains that need to be _ broken _ according to definition [ def : inacc_case_1 ] .",
    "this means that @xmath62 @xmath63 valid chains in @xmath1 . since no chain exists whoes epigraph or hypograph contains @xmath0 , the status of @xmath0 related tp @xmath1 is @xmath64 or @xmath59 .",
    "+    \\(b ) if @xmath59 then @xmath60 +    given @xmath64 implies that @xmath65 @xmath63 chains in @xmath1 .",
    "this means no valid chains exist in @xmath1 that need to be _",
    "broken_. thus the inaccessibility of @xmath0 related to @xmath1 is zero , i.e. @xmath66 , which is the desired result .    cases for theorem [ theo : case_1_b ] are simple and depicted in figure [ fig : case_1_b ] .",
    "figure [ fig : case_1_b ] shows two different polygons with @xmath0 as the point under consideration .",
    "the polygon in figure [ fig : case_1_b].(a ) has four chains that do not contain @xmath0 namely ( a ) rtu ( b ) uvr ( c ) rwx and ( d ) xyr , which are invalid .",
    "thus by theorem [ theo : case_1_b ] , @xmath64 and @xmath61 .",
    "thus @xmath0 lies outside the polygon .",
    "similarly , for figure [ fig : case_1_b].(b ) there exists two chains that do not contain @xmath0 i.e. ( a ) rtur and rvwr , which are invalid . so @xmath64 and @xmath61 .",
    "now for the general case of point in polygon , the definition of inaccessibility and inside evolve slightly while preserving the abstract essence of the idea . again",
    "the theorems will be proved which find a relation between when a point is inaccessibile as well as inside the polygon .",
    "the _ inaccessibility _ @xmath38 of a point @xmath0 related to a polygon @xmath1 , is the number of valid chains that need to be _ broken and/or ignored_. @xmath67 [ def : inacc_case_2 ]    the status of a point @xmath0 related to a polygon @xmath1 , that is @xmath40 , is the existance of a pair of chains @xmath30 and @xmath31 such that @xmath68 and @xmath69 . @xmath70",
    "[ def : inside_case_2 ]    again the relation between inaccessibility and inside of a polygon is proved via two theorems .",
    "the theorems are as follows :    a point @xmath0 related to a polygon @xmath1 is inside as well as inaccessible when : @xmath45 iff @xmath71",
    "[ theo : case_2_a ]    \\(a ) if @xmath71 then @xmath45 .",
    "+    given @xmath72 implies that there exist a pair of valid chain in @xmath1 that need to be _ broken _ and/or @xmath48 pairs of valid chains that need to be ignored .",
    "a valid chain by definition is one whoes epigraph or hypograph contains @xmath0 .",
    "taking the general case of @xmath73 ( if @xmath74 , @xmath73 collapses to @xmath54 ) , there are @xmath75 valid chains such that half lie above / on @xmath0 and the rest half lie below / on @xmath0 . if a vertical line passing through @xmath76 is drawn such that it cuts the valid chains and @xmath0 , then the chains can be sorted according to the value of intersection points in @xmath18 .",
    "let @xmath77 , ... , @xmath78 , @xmath79 be the sorted order of chains from bottom to top .",
    "taking consecutive pairs of these valid chains i.e. ( @xmath77 , @xmath80 ) , ( @xmath81 , @xmath82 ) , ... , ( @xmath30 , @xmath83 ) , ... , ( @xmath78 , @xmath79 ) , it is easy to know whether @xmath0 is an affine combination of ( @xmath84 ) and ( @xmath85 ) , @xmath86 . here",
    "@xmath87 and @xmath88 are the intersection points on the chains @xmath89 and @xmath90 due to the line @xmath18 .",
    "since it is known that atleast one pair of chains need to be _ broken _ , a pair of points ( @xmath91 ) and ( @xmath92 ) exists for which @xmath0 ( @xmath10 ) @xmath93 ( @xmath94 ) for @xmath95 . this implies that @xmath30 is the nearest chain below / on @xmath0 and @xmath83 is the nearest chain above / on @xmath0 , otherwise @xmath0 wo nt be an affine combination of ( @xmath96 ) and ( @xmath97 ) . for the rest of the @xmath48 pairs , since @xmath0 is not an affine combination of ( @xmath84 ) and ( @xmath98 ) @xmath99 , these @xmath48 pairs of chains can be _ ignored _ from further processing or consideration .",
    "since these nearest chains @xmath30 and @xmath83 are also valid , their epigraph and hypograph contain @xmath0 , respectively .",
    "this existence of a pair of a valid chains which has to be _ broken _ such that @xmath68 and @xmath100 implies @xmath51 , the status of @xmath0 related to @xmath1 .",
    "+    \\(b ) if @xmath45 then @xmath71 +    let @xmath1 be a polygon such that @xmath51 implies there exists a pair of chains @xmath30 and @xmath31 such that @xmath68 and @xmath101 . given only these two chains ,",
    "it is evident that both of them are nearest chins to @xmath0 .",
    "let the starting and ending points of @xmath30 and @xmath31 be @xmath102 and @xmath103 , respectively . if a vertical line @xmath76 is drawn through ( @xmath10 ) it would interest the chains @xmath30 and @xmath31 at ( @xmath96 ) and ( @xmath104 ) , respectively .",
    "since ( @xmath91 ) lies below ( @xmath10 ) and ( @xmath104 ) lies above ( @xmath10 ) , @xmath0 is an affine combination of ( @xmath96 ) and ( @xmath105 ) .",
    "thus @xmath0 lies between @xmath30 and @xmath31 .",
    "now , if an end point of @xmath30 is joined with an end point of @xmath31 and another end point of the former joined to the remaining end point of the latter , then a closed loop is formed such that traversing once from any one point , lead to the same point in the end .",
    "let this loop be @xmath106 .",
    "as long as the winding number of @xmath106 is around @xmath0 is same as that of @xmath1 around @xmath0 , @xmath106 can be deformed into @xmath1 , by hopf s degree theorem @xcite .",
    "since @xmath1 is formed from the two necessary chains @xmath30 and @xmath31 which are valid , a pair exists in polygon @xmath1 that needs to be _",
    "broken_. thus the minimum inaccessibility of @xmath0 related to @xmath1 is @xmath55 . if there exists extra pairs of valid chains , then they would be _ ignored _ from consideration , while checking for the affine combination criteria of @xmath0 with respect to the sorted pairs of chains on @xmath76 . if @xmath48 is the minimum number of pairs of valid chains that are _ ignored _ , then the inaccessibility of @xmath0 related to @xmath1 is @xmath107 .",
    "thus @xmath108 .",
    "now , the cases of theorem [ theo : case_2_a ] are presented with visual representations in figures [ fig : case_2_a_1 ] and [ fig : case_2_a_2 ] . in figure",
    "[ fig : case_2_a_1].(a ) , @xmath109 chains exist of which two are valid .",
    "the valid chains are ( a ) uv and ( b ) wu . the chain vw is invalid . thus @xmath110 and @xmath55 . in figure",
    "[ fig : case_2_a_1].(b ) the point lies on the edge and the polygon can be divided into @xmath109 chains of which only two contain @xmath0 .",
    "these valid chains are ( a ) su and ( b ) vs. thus @xmath51 and @xmath55 . in part ( c ) of figure",
    "[ fig : case_2_a_1 ] , the horizontal line cuts through two edges and touches two vertices .",
    "thus there exists @xmath111 chains of which two are valid , namely ( a ) uv and ( b ) xu which contain @xmath0 .",
    "thus @xmath51 and @xmath55 .",
    "lastly , in part ( d ) of the same figure , @xmath0 lies on an edge and the horizontal line passes through a vertex . in this case",
    ", there exist @xmath112 chains of which two contain the point of test and are thus valid .",
    "they are ( a ) vw and ( b ) yu . thus @xmath51 and @xmath55 .",
    "next , in figure [ fig : case_2_a_2].(a ) @xmath113 chains exist namely , ( a ) yz ( b ) zw ( c ) wb ( d ) bu ( e ) uv ( f ) va ( g ) ax and ( h ) xy , of which @xmath114 are valid except uv and xy .",
    "these two do not contain @xmath0 .",
    "now , the pair that needs to be _ broken _ is yz and zw , while the pairs ( wb , ax ) and ( bu , va ) are to be _ ignored _ from consideration .",
    "thus , @xmath51 and @xmath115 ( i.e one pair requires to be broken and two need to be ignored from consideration ) .",
    "finally , in figure [ fig : case_2_a_2].(b ) two chains exist of which both are valid , i.e. ( a ) uv and ( b ) vwwu .",
    "thus @xmath51 and @xmath55 .",
    "a point @xmath0 related to a polygon @xmath1 is not inside as well as inaccessible when :",
    "@xmath59 iff @xmath46",
    "[ theo : case_2_b ]    \\(a ) if @xmath46 then @xmath59 .",
    "+    given @xmath47 implies pairs of valid chains need to be _",
    "ignored_. again , a valid chain by definition is one whoes epigraph and hypograph contain @xmath0 .",
    "if a vertical line passing through @xmath76 is drawn such that it cuts the valid chains and @xmath0 , then the chains can be sorted according to the value of intersection points in @xmath18 .",
    "let @xmath116 be the sorted order of chains from bottom to top .",
    "taking consecutive pairs of these valid chains , i.e. ( @xmath77 , @xmath80 ) , ( @xmath81 , @xmath82 ) , ... , ( @xmath30 , @xmath31 ) , ... , ( @xmath117 , @xmath118 ) , it is easy to know whether @xmath0 is an affine combination of ( @xmath119 , @xmath87 ) and ( @xmath119 , @xmath88 ) @xmath120 .",
    "since @xmath48 pairs need to be _ ignored _ , it is evident that @xmath0 is not an affine combination of any of the above pairs .",
    "this suggests that there does not exist a pair such that @xmath121 and @xmath122 , that can be _",
    "broken_. since no such pair exists , the status of @xmath0 related to @xmath1 is @xmath64 , which is the desired result .",
    "+    \\(b ) if @xmath59 then @xmath46 .",
    "+    given @xmath64 implies there does not exist a pair of chains @xmath30 and @xmath31 such that @xmath68 and @xmath101 .",
    "thus it is difficult to proceed with the proof . instead , by proving its contrapositive the above statement will hold .",
    "thus if @xmath123 then @xmath124 . since @xmath123",
    ", it implies that @xmath125 .",
    "it has been proved in part ( a ) above that if @xmath71 then @xmath45 .",
    "but @xmath45 also means that @xmath126 .",
    "thus @xmath127 implies that @xmath126 .",
    "since the contrapositive holds , so does the original statement .",
    "finally , two cases for theorem [ theo : case_2_b ] are depicted in figure[fig : case_2_b ] . in figure",
    "[ fig : case_2_b].(a ) @xmath113 chains exist namely , ( a ) uv ( b ) va ( c ) ax ( d ) xy ( e ) yz ( f ) zw ( g ) wb and ( h ) bu . of these , @xmath109 pairs exist , all of which are valid chains but need to be _ ignored _ as non of them enclose @xmath0 as an affine combination of two intersection points on @xmath76 .",
    "these pairs are ( wb , ax ) , ( xy , zw ) and ( va , bu ) . thus @xmath64 and @xmath128 . for the case of intersecting polygon in figure",
    "[ fig : case_2_b ] @xmath114 chains exist namely , ( a ) zu ( b ) uy ( c ) yw ( d ) wx ( e ) vx and ( f ) xz , of which wy and xz are not valid .",
    "remaining pairs of valid chains need to be _ ignored _ and thus @xmath64 and @xmath58 .",
    "outside.,width=151,height=226 ]    for the next few sections , let eh ( epi / hypo - graph method ) denote the proposed method .",
    "crossover ( cr ) states that a line drawn from a point @xmath0 in a direction , if it cuts the polygon @xmath1 odd number of times , implies that @xmath0 is inside @xmath1 , i.e.    @xmath129 for the case of vertices , the problem is solved by shifting the line infinitesimally .",
    "two issues arise when a line is shot from @xmath0 and it intersects a vertex .",
    "( @xmath54 ) there can be two solutions , if the line is not shifted slightly .",
    "( @xmath130 ) if the crossover has to be repeated several times until it finds an odd number of intersections , then it is a nondeterministic problem , in case the line is shot randomly .    by ( @xmath54 )",
    "ambiguity arises on the way a ray or line is shot from @xmath0 and by ( @xmath130 ) nondeterminism arises due to repeatedness because of the line being shot randomly .",
    "the following figures will illustrate these issues in detail .",
    "in contrast to the cr , by checking through theorems [ theo : case_1_a ] and [ theo : case_2_a ] , the eh method can easily determine if @xmath0 lies in @xmath1 or not , deterministically .",
    "this is because whichever way a line is drawn through @xmath0 , if it cuts the polygon , then it will dismember @xmath1 into a finite number of countable chains . if it does nt cut",
    "the polygon and @xmath0 is a vertex , then also there exist atleast one chain that contains @xmath0 . searching for these valid chains and",
    "then locating which of those need to be _ broken _ is deterministic .    the figure [ fig : covseh ] shows the different cases under consideration for the comparison of cr and eh method for the same point of investigation . in figure [ fig : covseh].(a ) , if the a horizontal line is drawn to the left of the @xmath0 , then it intersects at two points u and v and if it drawn to the right , it intersects at the point w. according to cr , when the line is drawn to the right of the @xmath0 , then @xmath0 is inside the polygon .",
    "if the line is drawn to the left of @xmath0 , then the point is outside the polygon .",
    "this is definitely a case of ambiguity .",
    "also , the outcome of the cr depends on the direction of the ray that is shot from @xmath0 .",
    "this makes the outcome of the test nondeterministic in the sense that it is not known which ray would give the correct result , if the rays are shot randomly .",
    "the eh method overcomes this problem by segmenting the polygon into finitely countable chains .",
    "the searching for an affine combination of valid chains that may contain @xmath0 is deterministic as there are only limited number of chains available for checking .",
    "thus the outcome of the eh method is final and deterministic .",
    "if two perpendicular rays with its intersection point as @xmath0 are drawn at a different orientation , thus intersecting the polygon at different places , even then by rotating the oriented axis and the polygon to horizontal vertical frame , the solution remains the same .",
    "thus randomness of the rays do not affect the outcome of the point inclusion test for @xmath0 . for part ( a ) in the figure [ fig : covseh ] , by cr @xmath131 depending on the number of intersections that is @xmath132 . by eh method , @xmath133 and @xmath134 by theorem [ theo : case_1_a ]",
    "it must be noted that the inaccessibility of the point related to the polygon may change but the status of @xmath0 related to @xmath1 captured by the definition of @xmath135 will not change if the point is inside the polygon .",
    "similarly , for the part ( b ) and ( c ) in figure [ fig : covseh ] , by cr the @xmath136 depending on the number of intersections based on the direction of the ray which is @xmath137 . finally , in figure",
    "[ fig : covseh].(d ) , for point @xmath138 four valid chains exist namely , ( a ) vw ( b ) xu ( c ) u@xmath139 and ( d ) @xmath139v , none of which need to be _ broken _ or _ ignored_. thus by theorem [ theo : case_2_a ] @xmath140 and @xmath141 . by cr the outcome of the inclusion test changes , that is @xmath142 depending on the intersections obtained by the direction of the ray that is @xmath143 .",
    "for the point @xmath139 , two valid chains exist namely ( a ) @xmath139v and ( b ) vwxu@xmath139 .",
    "thus by theorem [ theo : case_1_a ] , @xmath144 and @xmath145 . by cr @xmath146 as the number of intersections is @xmath111 .",
    "the winding number rule ( wnr ) states that the number of times one loops round the point @xmath0 before reaching the starting point on polygon @xmath1 , decides the number of times whether @xmath0 lies inside @xmath1 or not . thus    @xmath147 an analogy of a prison wall shown in figure [ fig : wnrvseh ]",
    "is taken into account to the explain the differences .",
    "figure [ fig : wnrvseh].(a ) is the intial structure of the prison and then the final structure is shown in the part ( b ) of the same figure . initially , via the wnr , @xmath138 was lying outside and @xmath139 inside the prison wall .",
    "same is the verdict by the new method .",
    "next a portion of the prison wall is extended and the final structure looks like that in figure [ fig : wnrvseh].(b ) .",
    "note that @xmath138 and @xmath139 are still outside the new prison via the new definition , as the areas in which @xmath138 and @xmath139 lie , are not reachable from prison s perspective .",
    "this is because two pairs of walls have to be _ ignored and not broken _ in each case . from this point of view",
    "both @xmath138 and @xmath139 are outside @xmath1 , in figure [ fig : wnrvseh].(b ) .",
    "also , even though wnr = 2 for @xmath139 in new prison in part ( b ) of the same figure , implies the point lies twice inside , it does not make sense .",
    "it can be stated that if a point lies inside once , then it lies forever .",
    "there does not arise the idea of point lying inside @xmath48 times .",
    "thus a point lying inside @xmath48 times , is the same as point lying inside once .",
    "if it does not lie inside , then it wo nt lie forever . in this way the new definitions and the accompanying theorem are definitive in producing a concrete answer via means of epigraph - hypograph method .",
    "a theoretically reliable and an analytically correct solution to the point in polygon problem is proposed .",
    "the proof for the same is given by building a relationship between two new concepts of inaccessibility as well as inside .",
    "it is proved that the solution is good interpretation of inside for both the simple and self intersecting polygons , which forms the crux of the manuscript .    9    zalik , b. , kolingerova , i. : a cell - based point - in - polygon algorithm suitable for large sets of points .",
    "computers and geosciences , vol .",
    "10 , 1135 - 1145 ( 2001 )    chen , m. , townsend , p.:efficient and consistent algorithms for determining the containment of points in polygons and polyhedra .",
    "eurographics , 423 - 437 ( 1987 )    huang , c.w . ,",
    "shih , t.y .",
    ": on the complexity of point - in - polygon algorithms . computers and geosciences , vol .",
    "23 , no . 1 , 109 - 118 ( 1997 )    nordbeck , s. , rystedt , b. : computer cartography point in polygons program",
    ". national swedish institute for building research report , 19 pages ( 1967 )    manber , u. : introduction to algorithms - a creative approach .",
    "addison - wesley , 478 pages ( 1989 )    foley , j.d . , dam , v. , feiner , a. , hughes , j.f .",
    ": computer graphics - principles and practice .",
    "addison - wesley , 1174 pages ( 1990 )    haines , e. : point in polygon strategies .",
    "graphics gems iv , chapter 1.4 , 24 - 46 ( 1994 )    boyd , s. , vandenberghe , l. : convex optimization .",
    "cambridge university press ( 2004 )    needham , t. : visual complex analysis .",
    "oxford university press ( 1999 )",
    "the implemented algorithm will be illustrated with each step explained with a pictorial representation of result of the execution of that particular step .",
    "examples include closed , intersecting and non intersecting polygons .",
    "figures [ fig : in ] and [ fig : out ] show the polygons with the sample point being tested at different locations .",
    "@xmath1 is an ordered series of vertices @xmath2 , @xmath3 , ... , @xmath4 , starting from @xmath2 that defines the polygon . given @xmath1 ,",
    "the first step is to draw a straight line through the sample point @xmath0 @xmath5 , such that it intersects the polygon at certain points . for simplicity",
    ", the horizontal line @xmath11 is considered without loss of generality .",
    "the intersection points are obtained via computing the values of the @xmath148 coordinates between the @xmath11 and the straight line , extending from @xmath149 to @xmath150 .",
    "the slope and the constant of the former is @xmath151 and @xmath152 , and that of latter is @xmath153 and @xmath154 . here @xmath155 and @xmath156 are consecutive points on @xmath1 .",
    "solving the algebraic equation between two straight line gives :    @xmath157    once an intersecting point with coordinate @xmath158 is obtained , the algorithm checks if this point lies in between @xmath149 and @xmath150 , _ on the line_. this is achieved via affine combination property in definition [ def : affinecomb ] .",
    "three different cases arise depending on the slope of the line :    1 .",
    "@xmath159 : if the edge is a vertical line , the point @xmath158 lies on the line . this is because @xmath160 .",
    "@xmath161 : if edge is a horizontal line , the intersection point @xmath158 is considered to lie outside the range of @xmath162 and @xmath163 .",
    "this is because , if it lies within @xmath162 and @xmath163 , then there are infinitely many points that could be considered . to save from randomly selecting any point within the given range",
    ", it is thus considered that the point @xmath158 outside the range . also , if @xmath164 lie on a horizontal edge , it is still considered outside the range for further processing .",
    "@xmath165 : finally , this being the simplest case , it is easy to compute whether @xmath158 lie on the line between the given points using definition [ def : affinecomb ] .",
    "figures [ fig : step_1_in ] and [ fig : step_1_out ] show the horizontal line @xmath11 passing through @xmath0 and intersecting the polygon at different edges .",
    "the sample point is indicated via the red arrow while the vertices at the intersection of @xmath11 with edges of the polygon are pointed to by the blue arrows .",
    "once the vertices of the intersecting points are computed , they are added to the list of pre existing vertices of the polygon under consideration .",
    "the newly created intersecting vertices are appended in such a manner that the traversal order is not affected .",
    "it may happen that some of the newly added vertices with their @xmath166 coordinate as @xmath152 are very close to other pre existing vertices in the tolerance range of @xmath167 or smaller .",
    "the algorithm removes the vertices from the list that lie in such close range , but keeps the newly added vertices with coordinates @xmath158 .",
    "two reasons arise for executing this step :    1 .   to avoid further computations that may involve floating point precision of the order smaller than or equal to @xmath167 .",
    "2 .   to retain newly appended vertices with coordinates @xmath158 that will be later used for searching chains whose epigraph or hypograph may contain @xmath0 .",
    "it must be noted that this insertion of vertices does not affect the solution to the pip on paper , but may affect solution practically on a computer due to the floating point representation and operations on it . also , note that the tolerance range is not the issue investigated in this work .",
    ".,width=321,height=377 ]    .,width=321,height=377 ]      the new vertices with coordinates @xmath168 were ( @xmath169 ) and the sample point @xmath5 become form the basis for the next steps . from definition",
    "[ def : epigraph ] it is known that a point belongs to the epigraph ( hypograph ) if it lies on or above ( below ) the graph under consideration .    to use the mentioned properties , the polygon @xmath1 needs to be decomposed into the chains .",
    "these chains would then be tested for convexity or concavity .",
    "the algorithm achieves this in the following way .",
    "a vertex on @xmath1 , especially with the @xmath166 coordinate being @xmath152 is picked up as the starting vertex .",
    "a traversal order is chosen randomly and is followed until the starting point is reached again .",
    "vertices lying on a path between any two consecutive @xmath170 and @xmath168 points on @xmath1 , including the intersecting points themselves , form a chain .",
    "thus as the traversal is done from one intersecting vertex to the other , the polygon gets decomposed into chains , that lie either above or below the horizontal line @xmath11 .",
    "next the chains are tested for validity using the definitions in [ def : epigraph ] and [ def : hypograph ] . in non mathematical terms , if the starting and ending vertices of a chain are on either side of the @xmath0 on the line @xmath171 and not on the same side with respect to the sample point , then the chain is a valid one .",
    "the valid chains are stored with their starting and ending vertices along with coordinates of points on the chain .",
    "figures [ fig : step_2_in ] and [ fig : step_2_out ] show the valid and invalid chains pointed by the green and blue arrows respectively .",
    "the solid and dotted lines also demarcate the chains .",
    "the solid lines represent the valid chains and the dotted lines represent the invalid chains .",
    "the red arrow indicates the sample point s location in each of the figures .",
    "hitherto , it is known that the @xmath172 coordinate of @xmath0 lies in the epigraph or the hypograph of the valid chains . to know that the sample point lies within the polygon ,",
    "finally it needs to be tested whether the @xmath166 coordinate of @xmath0 lies within any two nearest valid chains .",
    "the rationale behind doing these steps will be elucidated a little later , but before that it is important to define what the nearest valid chains mean :    after the valid chains have been obtained , a similar procedure of intersecting the chains is done using the vertical line @xmath18 .",
    "for each chain , defined by a set of vertices @xmath149 , points of intersection are computed between the edges of the chain and the vertical line .",
    "the slope of the straight line joining two vertices on the chain is @xmath153 and the constant is @xmath173 .",
    "now , @xmath155 and @xmath156 are consecutive points on the valid chain .",
    "the value of @xmath166 coordinate of the point of intersection are computed as follows :    @xmath174    once the coordinate of the intersection point @xmath175 is obtained , a test is conducted to find whether the intersection point lies in between @xmath149 and @xmath150 .",
    "this is achieved using the affine combination property in definition [ def : affinecomb ] .",
    "three cases may arise , that need to be considered :    1 .",
    "@xmath159 : if edge is a vertical line , the intersecting point @xmath175 is considered to lie inside the range of @xmath176 and @xmath177 .",
    "this is because , if the chain crosses @xmath76 many times before going from left of @xmath0 to the right of @xmath0 or vice versa , then there can be infinitely many points on one chain that may be considered as intersection points .",
    "that is , it may require the algorithm to store many intersection points for just one chain . to avoid the presence of many intersection points on a single chain , the algorithm stores the vertex of one of the vertical edges in a chain .",
    "@xmath161 : if the edge is a horizontal line , the intersecting point @xmath175 lies on the line . this is because @xmath178 and @xmath179 .",
    "@xmath165 : finally , this being the simplest case , it is easy to compute whether @xmath175 lie on the line between the given points using definition [ def : affinecomb ] .    the pictorial representation of the line @xmath76 intersecting the valid chains are shown in figures [ fig : step_3_in ] and [ fig : step_3_out ] .",
    "the green arrows indicate the points of intersection on the valid chains that are now pointed to by the blue arrows . the sample point is indicated via the red arrow .",
    "as mentioned earlier , the invalid dotted chains have been removed by the algorithm , in its final stage of processing .",
    "each of the valid chains have a point of intersection with @xmath18 .",
    "next , the algorithm sorts the chains according to the @xmath180 .",
    "this is done so as to arrange all the intersecting points @xmath175 in the different chains in an ascending order , with the sample point @xmath5 somewhere in between ( if the case is ) .    finally , considering a pair of @xmath180 s at a time ,",
    "i.e a pair of chains at a time , it is tested whether @xmath181 is an affine combination of @xmath182 and @xmath183 ( for @xmath184 ) .",
    "if such a pair is found , then the point lies inside the polygon , else it is outside .",
    "the only care that the algorithm takes while executing this step is that , the pair of chains or the pair of intersecting @xmath166 coordinates are mutually exclusive .",
    "this means that if there are @xmath185 pairs , with @xmath186 being an even number and @xmath187 , @xmath188 , ... , @xmath189 are the intersecting @xmath166 values in order , then @xmath190 , @xmath191 , ... , @xmath192 are mutually exclusive in the sense that element of one pair can not be included in any other pair .",
    "the fundamental idea behind such a rule is that , in a pair , if the path of traversal in a chain is moving from left side of @xmath0 to the right side ( say ) , then the traversal in the other chain must move from right side @xmath0 to the left .",
    "thus , any pair shall not contain chains from any other pair .",
    "these ideas can be seen in figures [ fig : step_3_in ] and [ fig : step_3_out ] .",
    "the green arrows mark the intersecting points on the valid chains .",
    "the test of affine combination with respect to the sample point @xmath0 , indicates whether the point lies within the polygon or without .    .",
    "the red arrow shows the point lies inside the polygon.,width=321,height=377 ]    .",
    "the red arrow shows the point lies outside the polygon.,width=321,height=377 ]",
    "the computational complexity of the algorithm in terms of time needs to be addressed . with @xmath186 edges ,",
    "the algorithm takes a constant time of @xmath193 to process the first step mentioned in section [ sec : intersect_poly ] .",
    "@xmath193 is the constant number of steps used in computing the intersection of the horizontal line with each of the edges and deciding whether the intersection point lies on the edge , between the vertices of the edge .",
    "this process thus takes up @xmath194 steps .",
    "the newly found intersection points are added to the vertex list of the polygon while some vertices close to the intersecting points in the range of @xmath167 or less are removed to address the floating point precision .",
    "this execution step on the whole increases the number of vertices by a fraction , say @xmath195 were @xmath196 .",
    "thus the total number of vertices on the polygon now amount to @xmath197 .",
    "the decomposition of the polygon into different chains requires the processing of all @xmath198 edges , as has been described in section [ sec : decompose ] .",
    "this processing is of the order of @xmath198 with some constant @xmath199 required for checking if the chains are valid or not .    in section [ sec : chain_intersection ] , as in section [ sec : intersect_poly ] the points of intersection are computed for the vertical line and one of the edges in each of the chains . since the number of edges belonging to the chains is a fraction @xmath200 ( @xmath201 ) of the total number of edges of the polygon , the execution of this step requires @xmath202 units of cpu time . finally , after sorting of the chains which requires @xmath203 where @xmath204 and checking whether the sample point is an affine combination , requires a constant time of @xmath205 .",
    "this procedure is mentioned in the previous section .",
    "summing up the total time of execution , the algorithm works in @xmath206 .",
    "let @xmath207 and @xmath208 , then the computational time complexity of the algorithm is @xmath209 .",
    "this time in computation is the worst case scenario , where all the edges have to be processed in for all the four main steps described above .",
    "value of @xmath210 with a @xmath211 value of @xmath212 .",
    "the vertical axis is the @xmath213 representation of the test values.,width=321,height=188 ]",
    "with the proof that the proposed algorithm gives theoretically reliable results , it would of interest to know how algorithms based on the two widely used crossing over and winding number rule concepts , fair .",
    "one of the measures of fairness is the test of significance of results obtained from the algorithms .    artificial polygons with number of vertices in the set @xmath214 where @xmath215 were generated .",
    "for a particular vertex number , @xmath216 polygons were generated and stored .",
    "each polygon was generated by randomly generating the coordinates and joining the vertices in order .",
    "the last vertex was finally joined with the first vertex .",
    "this created a series of intersecting as well as non intersecting polygons .",
    "all polygons were generated in the bounding box of @xmath217 $ ] .",
    "for each of the @xmath216 polygons having a particular number of vertices , a random test point was generated in the bounding box .",
    "test @xcite was employed to check the statistical significance of one algorithm against another . in a @xmath218 contingency table ,",
    "the mcnemar s test gives a statistic similar to the chi squared statistic which is formulated as :            @xmath219    @xmath220    where , @xmath221 and @xmath222 are the false positives and the false negatives , respectively .",
    "equation [ equ : mcnemar_corrected ] was used as it contains the correction for discontinuity . in this study a @xmath223 value of @xmath224 and above was set as a standard to account for the significant difference of one algorithm against another .",
    "thus with @xmath225 , it is highly unlikely , that the algorithm may be significant from the one that it is being compared with .    in the present scenario , by the proof of the above theorems",
    ", it is known that the proposed algorithm give exact results . *",
    "thus it is expected that the results obtained from the implementation of the same theoretical idea shall approach ground truth with a margin of error that is completely due to the precision format of the computer*. let ( p ) be the proposed algorithm , ( cr ) the crossing over algorithm and ( wi ) the winding number rule algorithm .",
    "a matlab version of the crossing over algorithm was adopted from @xcite .",
    "@xcite inpolygon algorithm was taken as an implementation of the winding number rule algorithm .",
    "a general analysis is presented relating to the overall behaviour of the algorithms apropos to mcnemar s test , precision , recall , false positive rate ( fpr ) and error rate , as the number of vertices increases .",
    "all artificially generated polygons have been stored and can be reused with a new set of random test points to generate similar results for checking .",
    "in order to evaluate the degree of fairness of the crossing over and the winding number rule based algorithms w.r.t the proposed algorithm , mcnemar s test was performed on polygons with increasing number of vertices with as sample size of @xmath216 .",
    "final results in figure [ fig : mcnemartest ] show the statistical significance in the performance of the algorithms against each other .",
    "clearly , it can be seen that the results generated by cr is significantly similar to those generated via p ( red graph in the figure ) .",
    "while comparing the results of wi with those of cr as well as p , it can be seen that the results are significantly different as the number of vertices increases ( blue and green graphs in the figure ) .",
    "this apparent statistical difference is due to the fact that if the winding number is @xmath226 , then the point lies @xmath8 times inside the polygon .",
    "this is not true with the cr which states that even cross overs imply the that points are outside the polygons .",
    "p , on the other hand sets a bound on the winding number rule , stating that the if @xmath226 , then the point lies inside the polygon if and only if the criterion of having a pair of chains ( one above and other below the point ) is true ( via proved theorems above ) . thus even if the winding number evaluates to say @xmath130 , in case of the star polygon for the point in figure [ fig : step_1_out ] , p will always give the result that the point lies outside the polygon and not twice inside the polygon .",
    "figure [ fig : errwrtp ] shows the accuracy of the results obtained by the cr vs p and wi vs p. the behaviour of the error rate of wi with respect to p and cr , again can be attributed to the explanation in the foregoing paragraph .",
    "even though the results of the cr have been shown not to be statistically significant to that of p , with increasing number of vertices ( on a sample size of @xmath216 ) , the error rate creeps up .",
    "the accuracy by itself does not always suffice to give the measure of correctness and thus is aided via means of the false positive rate , precision and recall .",
    "the graphs for the same have been depicted in figures [ fig : fprwrtp ] , [ fig : precisionwrtp ] and [ fig : recallwrtp ] .",
    "the false positive rate tells how much one algorithm generated falsely true results given that base algorithm had labeled the results as false . thus comparing results of cr against p and wi against p ,",
    "the false positive rate was generated over increasing number of vertices and calculated on a sample size of @xmath216 polygons .",
    "the graphs suggest that both the cr and wi start contributing to the false positives with respect to p as the number of vertices increases .",
    "wi also gives greater false positives with respect to cr .",
    "given the results generated by the precision , recall and false positive error rates it can be stated that with polygons constituting large number of vertices , even cr deviates from p.      the cr which works on the fundamental idea of drawing a semi infinite line from the sample point thus crossing the edges / vertices of polygon can give different results depending on where the line passes through . a different line drawn through the same sample point may lead to a contrasting result as has been discussed in the previous section [ sec : covseh ] . another case that happens in cr is that if the line passes through say one edge and a vertex ( or two vertices ) , then the results based on even odd rule , change .",
    "it has often been pointed out that such cases are very rare and can be dealt by infinitesimally shifting the sample point and the line slightly .",
    "first , the the idea of being a rare case does not imply that the problem is solved .",
    "secondly , the solution of shifting the sample point does work , but again it is argued that would it give theoretically correct solution , if the sample point was on another vertex and a slight shift would put the point outside the polygon itself .    with the proof of the proposed solution in the manuscript , it can be shown that even if the polygon is intersected by two perpendicular lines passing through the sample point at angles @xmath227 and @xmath228 , the lines after rotation to horizontal - vertical frame , will unarguably give correct results .",
    "thus in rare cases also , the proposed solution will work and give theoretical ground truths .",
    "coming back to the false positive rates , with a large sample , increasing size and complexity of the polygons , the cr and wi are bound to give false positives with respect to p. the precision and the recall graphs in figures [ fig : precisionwrtp ] and [ fig : recallwrtp ] , suggest the concentration and the retrieval of the results .",
    "lastly , the average time in seconds on a log scale has been plotted in figure [ fig : anal_01_06 ] to depict the time consumption by the algorithms based on the concepts of the proposed solution , the crossing over and the winding number rule .",
    "the proposed solution apparently takes more time than the crossing over which in turn consumes more time than the winding number .",
    "also , in figure [ fig : anal_01_07 ] , for polygons with the number of the vertices @xmath229 , and an increasing sample size , the cumulative time in seconds is plotted on the log scale .",
    "these graphs suggest that the reliability of the proposed solution comes at a computational cost . but",
    "apart from that , the correctness of the proposed solution is not affected , which forms the kernel of the manuscript ."
  ],
  "abstract_text": [
    "<S> the manuscript presents a theoretical proof in conglomeration with new definitions on _ inaccessibility _ and _ inside _ for a point @xmath0 related to a simple or self intersecting polygon @xmath1 . </S>",
    "<S> the proposed analytical solution depicts a novel way of solving the point in polygon problem by employing the properties of epigraphs and hypographs , explicitly . </S>",
    "<S> contrary to the ambiguous solutions given by the cross over for the simple and self intersecting polygons and the solution of a point being multi - ply inside a self intersecting polygon given by the winding number rule , the current solution gives unambiguous and singular result for both kinds of polygons . </S>",
    "<S> finally , the current theoretical solution proves to be mathematically correct for simple and self intersecting polygons .    </S>",
    "<S> student , inaccessibility , inside , point , polygon , epigraph , hypograph .    65d18 , 68u05 </S>"
  ]
}
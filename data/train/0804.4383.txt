{
  "article_text": [
    "there is a tension between the standpoints of modeling and of verification when it comes to choosing a formal notation",
    ". the ideal modeling language would be very expressive , thus capturing sophisticated features of systems in a natural and straightforward manner ; in particular , for concurrent and real - time systems , a dense time model is the intuitive choice to model true asynchrony seamlessly . on the other hand ,",
    "expressiveness is often traded off against complexity ( and decidability ) , hence the desire for a feasible and fully automated verification process pulls in the opposite direction of more primitive , and less expressive , models of time and systems .",
    "discrete time , for instance , is usually more amenable to automated verification , and quite mature techniques and tools can be deployed to verify systems modeled under this assumption .",
    "another , orthogonal , concern of the real - time modeler is the choice between operational and descriptive modeling languages .",
    "typical examples of operational notations are timed automata ( ta ) and timed petri nets , while temporal logics are popular instances of descriptive notations .",
    "operational and descriptive notations have complementary strengths and weaknesses . for instance , temporal logics are very effective for describing partial models or requirements about the past ( through the natural use of past operators ) ; automata - based notations , on the other hand , model systems through the notions of state and transition , and are typically easy to simulate and visualize .",
    "hence , from a modeling viewpoint , the possibility of integrating multiple modeling paradigms in formalizing a system would be highly desirable .",
    "this paper introduces a verification technique that , under suitable assumptions , reconciles the dense / discrete and operational / descriptive dichotomies in an effective way .",
    "more precisely : ( 1 ) it permits to analyze continuous - time models using fully automated , discrete - time verification techniques ; and ( 2 ) it allows users to mix operational ( ta ) and descriptive ( metric temporal logic , mtl ) components in the system specification .",
    "the technique is partial in two respects : it can fail to provide conclusive answers , and only dense - time behaviors with bounded variability are verified .",
    "it involves an automated translation of the operational part into temporal logic notation , based on an mtl axiomatization discussed in this paper . the resulting mtl model , describing both the system and the properties to be verified , is then discretized according to the techniques introduced in @xcite . the discrete - time approximation can be analyzed through conventional tools ; we provide an implementation based on the @xmath0ot bounded satisfiability checker @xcite .",
    "we experimented with a significant example based on the description of a communication protocol by means of a timed automaton .",
    "concurrent runs of the protocol are formalized by parallel instances of the same automaton ; additionally , the simple synchronization rules between these instances is naturally formalized by means of additional mtl formulas , hence building a mixed model .",
    "verification tests run on these models showed consistent results , and acceptable performances .",
    "an interesting auxiliary contribution of the discretizable axiomatization of ta in mtl is a set of `` rules of thumb '' about how to describe systems based on the notion of state and transition with a logic formalism , in a way which is also amenable to discretization ( according to the notion of @xcite ) .",
    "section [ sec : ta - approx ] discusses this issue with great detail .",
    "finally , let us stress that our approach aims at providing a _",
    "practical _ approach to the verification of operational ( and mixed ) models .",
    "hence , we sacrifice completeness in order to have a lightweight and flexible technique . also note that ,",
    "although in this paper ta are the operational formalism of choice , the same approach could be applied to other operational formalisms , such as timed petri nets .",
    "[ [ structure - of - the - paper . ] ] structure of the paper .",
    "+ + + + + + + + + + + + + + + + + + + + + + +    the paper is organized as follows .",
    "section [ sec : overview ] provides a sketch of the whole technique with as little technical details as possible .",
    "section [ sec : relatedword ] briefly summarizes some research related to the content of this paper . section [ sec : preliminaries ] introduces the technical definitions that are needed in the remainder , namely the syntax and semantics of mtl and ta , and the discretization techniques from @xcite that will be used .",
    "section [ sec : formalizingtas ] shows how to formalize the behavior of ta as a set of dense - time mtl formulas .",
    "then , section [ sec : ta - approx ] re - examines the axioms and suitably modifies them in a way which is most amenable to the application of the discretization technique ; the overall result is a set of discrete - time mtl formulas whose satisfiability is linked to the satisfiability of the original dense - time formulas according to the rules of the discretization technique .",
    "section [ sec : impl - example ] describes the example of a simple communication protocol and reports on the experiments conducted on it with the sat - based implementation of the technique .",
    "finally , section [ sec : conclusions ] draws some conclusions .",
    "the goal of our technique is to provide a means to carry out practical verification technique of real - time systems described using a dense notion of time and a mixture of operational and descriptive notations . in particular , we assume a model of real time based on the notion of _ behavior _ , which is basically a continuous - time signal , and we consider a variant of ta as operational formalism and mtl as descriptive formalism .    the most common approaches to similar verification problems involve translating the logic into automata @xcite . in this paper",
    "we take the mirror approach of describing ta through mtl formulas .",
    "this choice is mainly justified by the fact that logic formulas are naturally compositional , hence our ultimate goal of formally combining mixed models is facilitated by this choice .",
    "it is well - known that mtl is undecidable over dense time @xcite ; this hurdle is however practically mitigated by employing the _ discretization _ technique for mtl introduced  and demonstrated to be practically appealing  in @xcite .",
    "note that the undecidability of dense - time mtl entails that the reduction technique must be incomplete , i.e. , there are cases in which we are unable to have a conclusive outcome to the verification problem .",
    "however , as demonstrated in @xcite , and further shown here , the impact of this shortcoming can be rendered small in many practical cases .",
    "we start by providing a dense - time mtl axiomatization of ta .",
    "notice that , due to a well - known expressiveness gap between temporal logics and automata @xcite it is impossible to describe the language accepted by a generic ta as an mtl formula .",
    "what we provide is instead a formal description of _ accepting runs _ of a ta as an mtl formula ; in other words , we model the overall behavior of ta with a set of mtl axioms .",
    "the resulting mtl axioms are discretized according to the rules provided in @xcite .",
    "we show that this yields poor results if done navely ; hence , we carefully revise the axiomatization and put it in a way which is much more amenable to discretization .",
    "the result is a set of discretized mtl axioms describing ta runs .",
    "these axioms can be combined with additional pieces of specification , written in mtl , and with the properties to be verified .",
    "the resulting complete model can then be analyzed by means of automated discrete - time tools ; the results of the discrete - time analysis are then used , as defined in @xcite , to finally infer results about the verification of the original dense - time model .",
    "the experimental results are encouraging , both in terms of performances and in terms of `` completeness coverage '' of the method .    in this paper",
    "we justify the soundness of the technique , which requires several analyses of the axiomatization and of the discretizations that are produced .",
    "it is important to understand , however , that the resulting technique ( and tool ) is completely automated , and the user has just to provide the dense - time model of the system ( i.e. , ta and mtl formulas ) and the putative properties to be verified .",
    "to the best of our knowledge , our approach is rather unique in trying to combine operational and descriptive formalisms over dense time , then trading - off verification completeness against better performance and practical verification results . on the other hand ,",
    "each of the `` ingredients '' of our method has been studied in isolation in the literature . in this section",
    "we briefly recall a few of the most important results in this respect .",
    "dense - time verification of operational models is a very active field , and it has produced a few high - performance tools and methods .",
    "let us mention , for instance , uppaal @xcite , kronos @xcite , hytech @xcite , and phaver @xcite for the verification of timed ( and hybrid ) automata .",
    "notice that , although tools such as uppaal allow the usage of a descriptive notation to express the properties to be verified , the temporal logic subset is very simple and of very limited expressive power . in contrast , we allow basically full mtl to be freely used in both the description of the model and in the formalization of the properties to be verified , at the price of sacrificing completeness of verification .",
    "metric temporal logic ( mtl ) verification is also a well - understood research topic .",
    "mtl is however known to be undecidable over dense time domains @xcite . a well - known solution to this limitation",
    "restricts the syntax of mtl formulas to disallow the expression of exact ( i.e. , punctual ) time distances @xcite .",
    "the resulting logic , called mitl , is fully decidable over dense time .",
    "however , the associated decision procedures are rather difficult to implement in practice and , even if recently significant progress has been made in simplifying them @xcite , a serviceable implementation is still lacking .",
    "another stance at working around the undecidability of dense - time mtl builds upon the fact that the same logic is decidable over discrete time .",
    "hence , a few approaches introduce some notion of discretization , that is partial reduction of the verification problem from dense to discrete time .",
    "the present paper goes in this direction by extending previous work on mtl @xcite to the case of ta .",
    "a different discretization technique , based on the notion of robust satisfiability of mtl specifications , has been introduced in @xcite .",
    "other work also deals with notions of robustness in order to guarantee that dense - time ta are implementable with non - ideal architectures @xcite .",
    "another well - known notion of discretization is the one based on the concept of _ digitization _",
    "@xcite ; several authors have applied this quite general notion to the practical verification of descriptive @xcite or operational @xcite formalisms .",
    "see also the related work section of @xcite for more references about discretization techniques .",
    "real - time system models describe the temporal behavior of some basic items and propositions , which represent the observable `` facts '' of the system .",
    "more precisely , an item @xmath1 is characterized by a finite domain @xmath2 ( and we write @xmath3 ) such that at any instant of time @xmath1 takes one of the values in @xmath2 . on the other hand ,",
    "a proposition @xmath4 is simply a fact which can be true or false at any instant of time .",
    "a _ behavior _ is a formal model of a _ trace _ ( or _ run _ ) of some real - time system . given a time domain @xmath5 , a finite set @xmath6 of atomic propositions , and a finite set of items @xmath7 , a behavior @xmath8 is a mapping @xmath9 which associates with every time instant @xmath10 the tuple @xmath11 of item values and propositions that are true at @xmath12 .",
    "@xmath13 denotes the set of all behaviors over @xmath5 , for an implicit fixed set of items and propositions .",
    "@xmath14 and @xmath15 denote the projection of the tuple @xmath16 over the component corresponding to item @xmath1 and the set of propositions in @xmath17 respectively . also , @xmath10 is a _ transition point _ for behavior @xmath8 if @xmath12 is a discontinuity point of the mapping @xmath8 .    whether @xmath5 is a discrete , dense , or continuous set",
    ", we call a behavior over @xmath5 discrete- , dense- , or continuous - time respectively . in this paper , we consider the natural numbers @xmath18 as discrete - time domain and the nonnegative real numbers @xmath19 as continuous - time ( and dense- ) time domain .    [",
    "[ non - zeno - and - non - berkeley . ] ] non - zeno and non - berkeley . + + + + + + + + + + + + + + + + + + + + + + + + + +    over dense - time domains , it is customary to consider only physically meaningful behaviors , namely those respecting the so - called non - zeno property .",
    "a behavior @xmath8 is non - zeno if the sequence of transition points of @xmath8 has no accumulation points . for a non - zeno behavior @xmath8 , it is well - defined the notions of values to the left and to the right of any transition point @xmath20 , which we denote as @xmath21 and @xmath22 , respectively .    in this paper",
    ", we are interested in behaviors with a stronger requirement , called _ non - berkeleyness_. informally , a behavior @xmath8 is non - berkeley for some positive constant @xmath23 if , for all @xmath10 , there exists a closed interval @xmath24 $ ] of size @xmath25 such that @xmath26 $ ] and @xmath8 is constant throughout @xmath24 $ ] .",
    "notice that a non - berkeley behavior ( for any @xmath25 ) is non - zeno _ a fortiori_. the set of all non - berkeley dense - time behaviors for @xmath27 is denoted by @xmath28 . in the following we always assume behaviors to be non - berkeley , unless explicitly stated otherwise .",
    "[ [ syntax - and - semantics . ] ] syntax and semantics .",
    "+ + + + + + + + + + + + + + + + + + + + +    from a purely semantic point of view , a ( real - time ) system model is simply a set of behaviors @xcite over some time domain @xmath5 and sets of items and propositions . in practice , however , the modeler specifies a system through some suitable notation . in this paper",
    "we consider metric temporal logic ( mtl ) @xcite as descriptive notation , and ta @xcite as operational notation .",
    "their syntax and semantics are defined in the following .",
    "given an mtl formula or a ta @xmath29 , and a behavior @xmath8 , we write @xmath30 to denote that @xmath8 describes a system evolution which satisfies all the constraints imposed by @xmath29 . if @xmath30 for some @xmath31 , @xmath29 is called @xmath5-satisfiable ; if @xmath30 for all @xmath31 , @xmath29 is called @xmath5-valid .",
    "similarly , if @xmath30 for some @xmath32 , @xmath29 is called @xmath33-satisfiable ; if @xmath30 for all @xmath32 , @xmath29 is called @xmath33-valid .      let @xmath6 be a finite ( non - empty ) set of atomic propositions , @xmath34 be a finite set of items , and @xmath35 be the set of all ( possibly unbounded ) intervals of the time domain @xmath5 with rational endpoints .",
    "for some @xmath36 where @xmath37 and @xmath38 , @xmath39 is one of @xmath40 and @xmath41 , and similarly for @xmath42 .",
    "] usually , one considers intervals with nonnegative endpoints , but we permit negative endpoints to render the presentation more uniform and straightforward . also , we abbreviate intervals with pseudo - arithmetic expressions , such as @xmath43 , @xmath44 , @xmath45 , for @xmath46 $ ] , @xmath47 , and @xmath48 , respectively .    [",
    "[ mtl - syntax . ] ] mtl syntax .",
    "+ + + + + + + + + + +    the following grammar defines the _ syntax _ of mtl , where @xmath49 and @xmath50 is a boolean combination of atomic propositions or conditions over items , i.e. , @xmath51 for @xmath52 , @xmath53 , @xmath54 .",
    "can be abbreviated as @xmath55 . ]",
    "@xmath56    in order to ease the presentation of the discretization techniques in section [ sec : discretization ] , mtl formulas are introduced in a _ flat _ normal form where negations are pushed down to ( boolean combinations of ) atomic propositions , and temporal operators are not nested .",
    "it should be clear , however , that any mtl formula can be put into this form , possibly by introducing auxiliary propositional letters @xcite .",
    "the basic temporal operators of mtl are the _ bounded until _ @xmath57 ( and its past counterpart",
    "_ bounded since _",
    "@xmath58 ) , as well as its dual _ bounded release",
    "_ @xmath59 ( and its past counterpart _ bounded trigger _",
    "@xmath60 ) .",
    "the subscripts @xmath61 denote the interval of time over which every operator predicates . in the following",
    "we assume a number of standard abbreviations , such as @xmath62 , and , when @xmath63 , we drop the subscript interval of operators .",
    "the precedence order of logic connectives is , from the one of highest binding power : @xmath64 .",
    "[ [ mtl - semantics . ] ] mtl semantics .",
    "+ + + + + + + + + + + + + +    mtl _ semantics _ is defined over behaviors , parametrically with respect to the choice of the time domain @xmath5 .",
    "+    [ cols=\"<,^ , < \" , ]     the experiments clearly shows that the formula building time is usually negligible ; the satisfiability checking time is also usually acceptably small , at least within the parameter range for the experiments we considered . on the contrary ,",
    "the time to convert formulas in conjunctive normal form usually dominates in our tests .",
    "this indicates that there is significant room for practical scalability of our verification technique .",
    "in fact , from a computational complexity standpoint , the sat phase is clearly the critical one , as it involves solving an np - complete problem . on the other hand",
    ", the cnf routine has a quadratic running time .",
    "another straightforward optimization could be the implementation of the ta encoding directly in cnf , to bypass the ` sat2cnf ` routine .",
    "this can easily be done , because the structure of the formulas in the axiomatization is fixed . in conclusion",
    ", we can claim safely that the performances obtained in the tests are satisfactory in perspective , and they successfully demonstrate the practical feasibility of our verification technique .",
    "in this paper , we introduced a verification technique to perform a partial verification of real - time systems modeled under a dense - time model and using mixed operational and descriptive components .",
    "the technique relies on discretization techniques introduced in previous work @xcite .",
    "it is fully automated and implemented on top of a discrete - time bounded satisfiability checker .",
    "we experimented with a significant example based on the description of a communication protocol , where concurrent runs of the protocol are synchronized by means of additional mtl formulas , hence building a mixed model .",
    "verification tests showed consistent results and significantly good performances ."
  ],
  "abstract_text": [
    "<S> this article introduces a fully automated verification technique that permits to analyze real - time systems described using a continuous notion of time and a mixture of operational ( i.e. , automata - based ) and descriptive ( i.e. , logic - based ) formalisms . </S>",
    "<S> the technique relies on the reduction , under reasonable assumptions , of the continuous - time verification problem to its discrete - time counterpart . </S>",
    "<S> this reconciles in a viable and effective way the dense / discrete and operational / descriptive dichotomies that are often encountered in practice when it comes to specifying and analyzing complex critical systems . </S>",
    "<S> the article investigates the applicability of the technique through a significant example centered on a communication protocol . </S>",
    "<S> more precisely , concurrent runs of the protocol are formalized by parallel instances of a timed automaton , while the synchronization rules between these instances are specified through metric temporal logic formulas , thus creating a multi - paradigm model . </S>",
    "<S> verification tests run on this model using a bounded validity checker implementing the technique show consistent results and interesting performances . </S>"
  ]
}
{
  "article_text": [
    "@xcite ( hereafter p15 ) have described in detail the need for a capable 3d viewer for analysis of hi data cubes .",
    "they describe the abilities such a viewer must have and assess four such viewers in this context .",
    "two of these are general purpose 3d data viewers , two are designed for medial data .",
    "they note : `` a recent development is the use of the open source software blender for visualisation of astronomical data ( @xcite ; @xcite hereafter t14 ) , but this application is more suitable for data presentation than interactive data analysis '' .    while blender itself is not designed as a data viewer ( it is primarily aimed at artists ) , it has many characteristics that make it eminently suitable as such .",
    "the most important of these for astronomy is the presence of a python interpreter .",
    "this allows blender to interface with any of the numerous astronomical routines available in python .",
    "coupled with its interactive 3d display ( which most other python interpreters lack ) and other built - in features ( i will describe some of these in more detail below ) , it becomes a very powerful tool for interactive 3d data analysis .",
    "frelled ( fits realtime explorer of low latency in every dimension ) is a set of python scripts which can be used to visualise 3d astronomical data inside blender .",
    "an example of visualising a data set with frelled is shown in figure [ fig : vlagps ] .",
    "two principle reasons motivated the development of frelled : 1 ) blender s powerful 3d display means we can leapfrog the development of the display routine itself ; 2 ) the need to easily and interactively mask and analyse hi data , described in p15 and t14 , which is wholly lacking from other 3d astronomical software .",
    "frelled , unlike the viewers described in p15 , was thus explicitly designed with astronomical data in mind , particularly hi data .",
    "a full description of frelled can be found on the frelled http://frelled.wikia.com/wiki/frelled_wikia[wiki page ] . here",
    "i present a brief summary of what frelled can and could do and how it compares to other viewers .",
    "by using the realtime display capabilities of blender , frelled is a gpu - based volume renderer .",
    "the methodology is as follows . since blender",
    "can not view fits data directly , the cube is `` sliced '' into a series of png images , each of a constant velocity , declination , or right ascension .",
    "these images are mapped onto a sequence of blender s internal mesh objects ( planes ) , which are separated by an amount equivalent to the dimensions of one pixel in the png images .",
    "the user controls the colour transfer function ( before converting the cube into image files ) and the transparency of the image planes .",
    "frelled is now developed on an hp elite 7500 series desktop with an intel i7 - 3770 quad core 3.4 ghz cpu , 16 gb ram and a 4 gb nvidia geforce gt 640 gpu .",
    "display of the fits file in frelled depends mainly on the gpu while speed of operations that process or analyse the data are mainly cpu - dependent .",
    "although of course all features in frelled are ultimately enabled by blender , in this rest of this document i will refer to blender when dealing with a feature explicitly provided by the software with no python code required , and frelled when referring to features which are enabled - or made simpler - by our scripts .",
    "p15 have described the ideal features an hi viewer . here",
    "i describe which of these frelled already has , those which it does not currently possess but could , and those which it is not capable of achieving . following p15",
    "i divide the features into several areas : 1 ) qualitative analysis features , which allow the user to visualise the data in different ways ; 2 ) quantitative analysis features ; 3 ) comparative analysis features , which allow the user to link their data to other sources ; 4 ) software and code features , e.g. user interface accessibility and documentation of the code .",
    "i here take the term `` realtime '' to mean that any change is visible instantaneously as the user alters some parameter .",
    "an `` interactive '' feature must be not only be , obviously , controlled directly by the user , but must also occur on a timescale of a few seconds or less . without this limitation almost any feature available in python could be implemented in frelled ( or blender ) `` interactively '' .      as noted by p15 , any hi viewer useful for large upcoming surveys with askap , meerkat , and apertif ,",
    "must be capable of handling large data sets and high source densities .",
    "frelled is not capable of dealing with the 4096@xmath0 voxel cubes which will be returned by apertif , however it is certainly capable of displaying 600@xmath0 voxel data sets even on current workstations .",
    "this is more than adequate for the typical @xmath1512@xmath0 voxels for expected subset data cubes sent to users by automated algorithms for further analysis .",
    "t14 demonstrated that frelled is capable of dealing with very high source densities , allowing a single user to mask and catalogue @xmath2300 sources within a single working day . in that data",
    "set , the sources occupied about 10% of the volume , far higher than the expected 0.0001% for ska precursor surveys as described in p15 ( though this will rise as automated source - finders return much smaller subset cubes containing possible sources ) .",
    "thus , frelled is already suitable for source extraction from large data sets such as those from apertif .",
    "the interactive masking capability is a very important feature of frelled .",
    "the user can click on a source and add an object which is then used to mask the data , scaling this interactively with the mouse or more precisely using numerical input via the keyboard .",
    "masking a source is a procedure which normally takes only a few seconds .",
    "this mask object is automatically assigned a name , and the user can easily re - find this object ( and re - orient the view appropriately ) . with hundreds of sources",
    "this feature is invaluable .",
    "masks can also be set to be transparent or opaque interactively , and they can be either simple cuboids or have arbitrarily complex geometry .",
    "an example of masking is shown in figure [ fig : masks ] .",
    "p15 note that a viewer should be capable of fast basic interactions such as pan , zoom , and rotate , at at least 15 fps .",
    "frelled meets or exceeds this requirement even for the largest data sets it can display .",
    "a more powerful gpu would enable it to display larger data sets , though as p15 note standard desktop hardware is not likely to dramatically improve on the short term .    in order to reveal different structures",
    "the user must be able to interactively alter how the data is displayed .",
    "for example , revealing faint sources requires that data is shown with a high contrast at low flux values .",
    "this means that bright sources appear saturated , appearing as uniform and featureless . for point sources",
    "this is not usually a problem but the difficulties become obvious with extended sources with complex structures .",
    "choice of the colour transfer function ( logarithmic rather than linear ) can alleviate this problem , but the best solution is interactive .",
    "blender allows clipping of low transparency ( i.e. flux ) values , which can help when the data is noisy and contains a mix of faint and bright sources .",
    "transparency can also be altered interactively , which can help boost the visibility of faint sources or structures within bright sources .",
    "however the ideal solution of being able to alter the colour transfer function interactively is not currently possible with blender s display engine . in principle",
    "the contrast of the png images can be altered , but such changes are not visible in the realtime display .",
    "therefore , only a limited form of interactive data display control is possible . in practice",
    "this has not been a severe handicap .",
    "frelled does not allow for interactively smoothing the data .",
    "this is certainly possible for small subsets of the data , but for cubes @xmath2600@xmath0 voxels such a procedure would take several minutes so could hardly be described as interactive .",
    "again , however , the lack of such a feature has not proven to be a severe problem .",
    "furthermore there are a couple of potential workarounds for this issue , which i discuss in the next two sections .",
    "one issue that can not be overcome ( short of the involvement of a blender developer ) is that there is no way to select a different line of sight integration method - frelled is restricted to blender s sum of values method .",
    "while the human brain is a very powerful pattern - recognition tool , it is essential to quantify the structures discovered .",
    "p15 list several capabilities of karma ( in fact the karma program _",
    "kvis _ was one of the main inspirations to develop frelled ) , all of which are already at least partially implemented in frelled , and all could potentially be fully implemented :    * i ) * display a spectrum .",
    "this is already partly possible since frelled can act as a gui for the miriad task _ mbspect _ , allowing the user to interactively change the profile of the fitted spectrum as well as which regions are masked .",
    "it does not presently allow full control of the mbspect parameters or to adjust the position of the object used to fit the profile based on _ mbspect _ s position fitting , though this is certainly possible in principle .",
    "similarly , frelled does not yet support intensity profiles ( e.g. gaussian radial profile fits or simple profile measurements along a spatial slice ) but again this is no reason that this can not be implemented .    *",
    "ii ) * calculation of statistics in a specified volume .",
    "again this is partially possible .",
    "the total flux in a specified volume ( of arbitrarily complex shape ) can be computed and it would be trivial to add the calculation of the minimum , maximum , rms value etc .",
    "* iii ) * segmentation of the 3d data volume of an object , e.g. isosurface fitting . also partially possible . at present",
    "the user can generate renzograms ( contour plots at multiple velocities ) .",
    "converting these into true isosurfaces is literally a matter of joining the dots , for which blender - based python code already exists - it is simply a matter of implementation . by restricting the analysis to a relatively small subset",
    ". this feature could also be a way to overcome the lack of an interactive smoothing tool .",
    "* iv ) * construction and display of moment maps and position - velocity diagrams .",
    "currently only moment 0 ( integrated flux ) maps can be produced , but as with the other features there is no reason this could not be extended to other moment maps ( e.g. peak flux , velocity maps ) .",
    "necessity being the mother of invention , frelled s development has been concentrated on the features most useful for analysis of ages ( arecibo galaxy environment survey , @xcite ) data - but there is no reason at all why many more analysis tasks could not be implemented in frelled .",
    "plotting pixel - by - pixel trends in the data and analysing trends in different regions ( as described in p15 in relation to the glue project of @xcite ) would certainly be possible within blender / frelled .",
    "p15 describe the necessity of having linked views of 1d , 2d and 3d and/or to compare models with observations .",
    "this is already possible in frelled , though the 1d capabilities are highly limited .",
    "the 2d views and 3d views in frelled are linked - objects created in either view are visible and editable in the other .",
    "this means , for example , that when the bright sources have been quickly found and masked in the 3d view , the user can switch to the 2d view where those sources have already been masked .",
    "they can then proceed to search for fainter sources , which is intrinsically easier in a 2d view , without the distraction of bright sources to overwhelm the display .",
    "furthermore , the user can add multiple 2d or 3d displays and load different data cubes in each one .",
    "the viewpoint orientation is always the same in each display - changes in one are propagated to the rest .",
    "this ability to display multiple volumes offers another way around the lack of interactive smoothing - if one accepts the limitation of having to deal with pre - computed smoothed cubes , it is already easily possible to load in a smoothed cube into another display area and then switch between the display of the smoothed and raw cube .",
    "it also makes it possible to easily compare models / simulations with the observational data .",
    "there is also support for n - body particles , which can be directly overlaid onto the display of a fits file . at present",
    "it is not possible to overlay different fits cubes ( e.g. hi and co ) though this is possible in principle .",
    "p15 describe the usefulness of interactively modelling rotation curves .",
    "since frelled was initially designed for use with ages data ( mainly unresolved sources ) this feature is not yet implemented but again there is really no reason why it could not be .",
    "p15 describe the importance of the quality of the code and accessibility of the software .",
    "they note that the software must :    * i ) * run on multiple platforms . frelled was originally developed under windows 7 and has been run succesfully on linux ( debian and ubuntu ) and on mac os x. in principle there is no reason why it should not run on any system capable of running blender and python .",
    "* ii ) * have an intuitive interface .",
    "i would like to think this is the case !",
    "the underlying drive behind frelled s gui was to provide access to blender s features in a way that astronomers unfamiliar with blender could easily understand .",
    "thus there are navigation buttons to set the view ( e.g. show the xy projection ) even though these are not strictly necessary .",
    "auto - import buttons allow the data to be loaded with a single mouse click , and then adjust the settings with more detailed controls later - hopefully this allows a gentler learning curve to visualising 3d data .",
    "* iv ) * have a high level of modularity in the source code .",
    "except for a few very similar functions , most operations in frelled call separate subroutines .",
    "* v ) * have proper documentation and long - term maintainability .",
    "frelled has a detailed wiki page and manual and well - commented source code .",
    "i hope to provide a more detailed guide to the code itself in the near future on the wiki .",
    "while it does not yet have a large user or development community , i hope that this report will encourage wider interest . development of frelled has been almost exclusively by the author and collaborators will be welcomed .",
    "p15 review four 3d viewers .",
    "all of them lack three key features , which i here review in relation to frelled :    * i ) * astronomical world coordinate systems .",
    "frelled supports this . for data sets without a wcs ( e.g. simulations ) ,",
    "pixel values are automatically used .",
    "while i do not claim that frelled supports every possible wcs ( i thank p15 for graciously providing a data cube with channel velocity units that were previously unsupported ) i believe it works with the most common standards .",
    "frelled is usually tested on data cubes from arecibo ( ages , @xcite , and galfa - hi , @xcite ) , the vla ( the vla gps survey , @xcite ) , westerbork ( the virgohi21 project , @xcite ) and numerical simulation data .",
    "* ii ) * interactive smoothing .",
    "while , as i have noted , this is not directly possible in frelled ( unless we relax our definition of `` interactive '' to include a process taking several minutes ) , there are a couple of potential workarounds that may be possible .",
    "* iii ) * multi - volume rendering .",
    "while frelled also lacks this , in principle it is not difficult to implement . one",
    "would simply use alternating image planes to display different data sets with different colour schemes .",
    "how well this would work in practise remains to be seen .",
    "other features which are sometimes lacking :    * iv ) * simple editing or blanking",
    ". as described , the interactive masking capabilities of frelled are probably its most useful feature , and one of the key reasons it was developed .",
    "* v ) * comparative visualisation .",
    "frelled allows 2d contour plotting , renzograms , on - the - fly overlay of sdss rgb images , interactive spectral profile measurements , volume - specific flux measurements , and can overlay n - body particles and vectors .",
    "frelled is an astronomical 3d data viewer explicitly designed to handle hi and numerical simulation data .",
    "it offers several features that other existing viewers do not . while there are some intrinsic limitations in using blender as the display engine , in general the advantages far outweigh the disadvantages .",
    "although blender itself may be `` more suitable for data presentation than analysis '' , its python interpreter completely overcomes this deficiency - any astronomical calculation which can be done in python can thus be done via , and hence plotted in , blender .",
    "i therefore argue that blender provides an excellent platform for which to develop advanced 3d data viewing and analysis tools .",
    "frelled itself has tremendous scope for additional features .",
    "while some of the features described in p15 as desirable are not actually implemented in frelled , most of them should be straightforward to address ."
  ],
  "abstract_text": [
    "<S> @xcite recently reported on the state of the art for visualisation of hi data cubes . </S>",
    "<S> i here briefly describe another program , frelled , specifically designed for dealing with hi data . </S>",
    "<S> unlike many 3d viewers , frelled can handle astronomical world coordinates , easily and interactively mask and label specific volumes within the data , overlay optical data from the sdss , generate contour plots and renzograms , make basic spectral profile measurements via an interface with miriad , and can switch between viewing the data in 3d and 2d . </S>",
    "<S> the code is open source and can potentially be extended to include any astronomical function possible with python , displaying the result in an interactive 3d environment . </S>"
  ]
}
{
  "article_text": [
    "solving nonlinear partial differential equations ( pdes ) with multiple scales and/or high - contrast in media properties is computationally expensive because of the disparity between scales that need to be represented and the inherent nonlinearities .",
    "for this reason , coarse - grid computational models are often used .",
    "these include galerkin multiscale finite elements  @xcite , mixed multiscale finite element methods  @xcite , the multiscale finite volume method  @xcite , mortar multiscale methods  @xcite , and variational multiscale methods  @xcite .",
    "the coarse - grid models for nonlinear pdes can be divided into several classes .",
    "one of them includes constructing nonlinear operators that allow downscaling from coarse - grid functions to fine - grid functions  @xcite .",
    "other types of approaches involve designing linear multiscale basis functions ( which are constructed using nonlinear pdes ) on the coarse grid and using these basis functions for approximating the solution  @xcite .",
    "one of the challenges in these coarse - grid models is evaluating nonlinear functionals for computing the residual and the jacobian of the operator .",
    "some of the widely used techniques are based on empirical interpolation methods ( eim )  @xcite . in the offline stage",
    ", the response of the nonlinear function is evaluated to yield solution snapshots and interpolation vectors are constructed using the proper orthogonal decomposition ( pod ) .",
    "evaluating a few components of the nonlinear function allows performing rapid evaluation of the nonlinear function in the online stage with sufficient accuracy  @xcite .",
    "this procedure allows for rapid evaluations of the nonlinear function s response in the online stage .",
    "when solving multiscale equations , these empirical interpolation techniques can be expensive because of the large problem sizes . in this paper",
    ", we design an efficient multiscale empirical interpolation framework .    our proposed empirical interpolation techniques are based on multiscale finite element approximations that are often used for solving multiscale problems on coarse grids .",
    "the main idea of these methods is to construct local multiscale basis functions for approximating the solution over each coarse patch .",
    "constructing these basis functions uses offline coarse - grid spaces .",
    "these spaces are constructed via judicious choices of snapshot spaces and local spectral problems that are motivated by the analysis  @xcite .",
    "the main objective of this paper is to design efficient local multiscale empirical interpolations that can be used in conjunction with generalized multiscale finite element method ( gmsfem ) to solve nonlinear multiscale problems with a computational cost proportional to the number of coarse - scale degrees of freedom rather than the fully resolved mesh .",
    "when gmsfem is used for nonlinear problems , we evaluate the residual and jacobian in each newton iteration which require fine - grid calculations and incur a high computational cost .",
    "we use pod - based empirical interpolation and follow the discrete empirical interpolation method ( deim ) introduced in  @xcite . for this reason",
    ", we refer to our method as multiscale deim .",
    "the main ingredients of the proposed multiscale deim are :    * the evaluation of the nonlinear functions is performed on the subregions associated with those of the local multiscale basis functions and the global coupling of these local representations is performed .",
    "* in each subregion , an empirical interpolation is used as a representation of the nonlinear function which is computed based on a small dimensional multiscale representation of the solution space . * for multiscale high - contrast problems ,",
    "interpolation vectors are computed using appropriate spectral problems which involve local multiscale basis functions and ensure convergence of the method .",
    "this modified spectral problems are constructed using bounds provided by the numerical analysis of the system .    in this paper , we investigate these issues and show that one can design efficient empirical interpolation techniques in conjunction with gmsfem .",
    "we provide error estimates and the derivations of new spectral problems for computing empirical interpolation vectors .",
    "representative numerical results are presented in the paper .",
    "we consider three examples : ( 1 ) nonlinear function evaluations using gmsfem basis functions ; ( 2 ) steady - state multiscale elliptic equation with nonlinear forcing ; and ( 3 ) nonlinear multiscale parabolic equations with nonlinear diffusion coefficients . in all examples , we show that , by using a multiscale empirical interpolation , we can obtain an accurate solution approximation at a cost that scales with the coarse - grid size and is independent of the fine - grid size .",
    "in particular , a few interpolation modes are needed in all these examples .",
    "the paper is organized as follows . in section  [ sec : review ] , we discuss empirical interpolation methods and local multiscale techniques . in section  [ msdeim ]",
    ", we introduce a multiscale empirical interpolation and discuss its convergence . in section [ sec : app ] , applications of the multiscale empirical interpolation techniques to nonlinear pdes are studied . in this section ,",
    "we discuss gmsfem and the use of multiscale interpolation techniques in newton methods .",
    "numerical results are presented in section  [ sec : num ] .",
    "in this paper , we use the discrete empirical interpolation method ( deim )  @xcite for the local approximation of nonlinear functions though other empirical interpolation methods can also be used  @xcite .",
    "deim approximates a nonlinear function by means of an interpolatory projection of a few selected global snapshots of the function .",
    "the idea is to represent a function over the domain while using empirical snapshots and information in some locations ( or components ) .",
    "we briefly review deim following  @xcite .",
    "first , we give some motivation for using deim .",
    "let @xmath0 denote a nonlinear function , where @xmath1 refers to any control parameter . in a reduced - order modeling ,",
    "the state vector @xmath1 is typically assumed to have a reduced - order representation , i.e. , @xmath2 can be represented by fewer basis vectors , @xmath3 , ... , @xmath4 , where @xmath5 . here",
    ", in general , @xmath6 can be different from @xmath7 , though we can assume @xmath8 .",
    "the reduced - order representation of @xmath1 usually leads us to look for a reduced - order representation of the nonlinear functions @xmath9 .",
    "the procedure of finding the reduced - order representation of @xmath9 consists of two steps . in the first step , we would like to find @xmath10 basis vectors ( where @xmath10 is much smaller than @xmath7 ) , @xmath11 , ... , @xmath12 , such that @xmath9 can be approximated in the space spanned by these vectors .",
    "the error of this approximation is given by pod error which represents approximation of all possible @xmath13 s in the space spanned by @xmath11 , ... , @xmath12  @xcite .",
    "in the second step , we identify a reduced - dimensional linear system that allows finding the representation of @xmath9 in the space without involving @xmath7 operations . in this step , we typically identify @xmath10 equations that allow finding the coordinates of @xmath9 in the space spanned by @xmath11 , ... , @xmath12 .",
    "we assume an approximation of the function @xmath14 obtained by projecting it into a subspace spanned by the basis functions ( snapshots ) @xmath15 which are obtained by forward simulations .",
    "we write @xmath16 to compute the coefficient vector @xmath17 , we select @xmath10 rows of ( [ fapp ] ) and invert a reduced system to compute @xmath18 . this can be formalized using the matrix @xmath19 @xmath20 \\in \\mathbb{r}^{n\\times    m},\\ ] ] where @xmath21^t\\in \\mathbb{r}^{n}$ ] is the @xmath22 column of the identity matrix @xmath23 for @xmath24 .",
    "multiplying equation   by @xmath25 and assuming that the matrix @xmath26 is nonsingular , we obtain @xmath27    to summarize , approximating the nonlinear function @xmath28 , as given by equation  , requires the following :    * computing the projection basis @xmath29 * identifying the indices @xmath30    to determine the projection basis @xmath31 , we collect function evaluations in an @xmath32 matrix @xmath33 $ ] and employ the pod technique to select the most energetic modes .",
    "this selection uses the eigenvalue decomposition of the square matrix @xmath34 and selects the important modes using the dominant eigenvalues .",
    "these modes are used as the projection basis in the approximation given by equation  . in equation  ,",
    "the term @xmath35 is computed once and stored .",
    "the @xmath18 is computed using the values of the function @xmath9 at @xmath10 points with the indices @xmath36 ( identified using the deim algorithm ) .",
    "the computational saving is due to fewer evaluations of @xmath9 .",
    "we refer to  @xcite for further details .",
    "[ rem : m1m2 ] in this paper , we explore ways to include the information about heterogeneities in the pod selection process .",
    "pod selects the dominant eigenpairs of @xmath37 , where @xmath38 are coordinates in the space @xmath39 .",
    "in multiscale high - contrast problems , one needs to take into account the heterogeneities when calculating the pod modes . depending on the application in mind and on a priori information on the space of functions @xmath40 for which @xmath41 needs to be computed , it is possible to improve the approximation using different inner products , say , represented by @xmath42 and @xmath43 , and perform a spectral selection based on the eigenvalues of the modified eigenvalue problem @xmath44 .",
    "-th coarse - node ( blue circle ) , its neighborhood @xmath45 and all other coarse nodes in @xmath45 ( white circles ) .",
    "the fine - mesh is depicted only for coarse - grid blocks forming the highlighted support @xmath45 of the @xmath46-th coarse basis .",
    ", scaledwidth=50.0% ]    in multiscale problems , one needs to construct local approximations of the solution using appropriately designed multiscale basis functions .",
    "we use gmsfem , a general local multiscale strategy  @xcite .",
    "these methods construct local multiscale basis functions to approximate the solution over each coarse patch .",
    "constructing these basis functions uses local offline spaces .",
    "these spaces are constructed via judicious choices of snapshot spaces and local spectral problems that are motivated by the analysis .",
    "local multiscale basis functions are defined on a coarse grid where each coarse - grid block is a union of fine - grid blocks ( see figure  [ fig : region ] for a schematic representation of the coarse and fine grids ) .",
    "next , we discuss the coarse - grid projection operators without going into details . a detailed construction is presented in section  [ sec : gmsfem ] .",
    "assume that the fine - scale problem has @xmath47 degrees of freedom and that the coarse - scale problem has @xmath48 degrees of freedom .",
    "we design a matrix @xmath49 of size @xmath50 whose transpose @xmath51 of size @xmath52 maps the fine - grid vectors to vectors of coarse degrees of freedom ( coarse vectors ) .",
    "we refer to @xmath49 as downscaling ( or coarse - to - fine ) operator and to @xmath51 as upscaling ( or fine - to - coarse projection ) operator .",
    "this construction depends on several ingredients , such as the snapshot space and the eigenvalues of the offline and online problems ( see section  [ sec : gmsfem ] for details ) .",
    "locality is key to the design of the new class of deim techniques proposed herein .",
    "each column of @xmath49 is a multiscale basis function supported locally on a coarse region ( see figure  [ fig : basis ] for an example of a basis in a coarse region ) .",
    "one usually has several multiscale basis functions per coarse - grid block . in the design of our multiscale deim",
    ", we identify multiscale basis functions ( columns of @xmath49 ) which have support in @xmath45 .",
    "only these selected multiscale basis functions are used in obtaining the local deim approximation of @xmath41 .        when solving nonlinear pdes , one writes the residual on the fine grid as @xmath53 where @xmath54 is the residual of nonlinear pde and @xmath40 is the fine - grid solution .",
    "for instance , in a nonlinear flow problem we may have a nonlinear partial differential equation ( in strong form ) given by @xmath55 ; see sections  [ newton ] and  [ sec : num ] for further details and examples . here",
    ", both @xmath40 and @xmath54 are @xmath7-dimensional vectors defined on a fine grid . using the projection operator @xmath49",
    ", we project   onto the coarse degrees of freedom ( noting that @xmath56 is an approximation of the fine - grid solution , that is , @xmath57 ) @xmath58 this equation is formulated on the coarse degrees of freedom constructed on the coarse - grid ; however , computing the residual @xmath59 requires fine - grid evaluations .",
    "moreover , computing the jacobians for each newton iteration , defined as @xmath60 also requires fine - grid evaluations .",
    "here , our main goal is to use the multiscale deim to compute @xmath61 and @xmath62 efficiently .",
    "in particular , using the multiscale deim approximation similar to  , we can write @xmath63 consequently , the residual computation involves @xmath64 which can be efficiently computed by pre - computing @xmath65",
    ". a similar procedure can be applied to compute the jacobian @xmath62 .",
    "we detail the multiscale discrete empirical interpolation methods ( multiscale deim ) .",
    "a key idea is that , instead of solving the fine - grid problem  , we solve the coarse problem  .",
    "an important issue in the solution of the coarse problem   is the evaluation of the nonlinear terms . in order to fix ideas ,",
    "in this paper we consider scalar problems and the evaluation of the nonlinear terms of the from @xmath41 where ( the fine - grid finite element function ) @xmath66 and @xmath67 . in our approach",
    "we use the deim procedure to efficiently evaluate the nonlinear terms .",
    "we stress the following main observations that are explored and ultimately motivate the design of the multiscale deim procedure presented below .    * in applications to multiscale pdes ( where one solves   instead of the fine - grid problem  ) the nonlinear functional @xmath68 needs to be evaluated with vectors of the form @xmath69 that are the downscaling of solutions obtained by reduced - order models .",
    "thus , @xmath70 needs to be computed in the span of coarse - grid snapshot vectors which has a reduced dimension . * due to the fact that multiscale basis functions are supported on a coarse - grid neighborhood , it is sufficient to obtain the deim approximation in each coarse - node neighborhood .",
    "* more elaborate spectral selections may be needed to identify the elements of empirical interpolation vectors such that the resulting multiscale deim approximation is accurate in adequate norms that depend on physical parameters such as the contrast and small scales .",
    "we recall that each column of @xmath49 is the vector representation of a ( fine grid ) finite element function with local support so we can identify columns of @xmath49 with locally supported basis functions .",
    "let us introduce the notation @xmath71 which represents the set of indexes of coarse basis functions ( which correspond to the columns of @xmath49 ) such that these basis functions have support on @xmath45 ( see figures  [ fig : region ] and  [ fig : basis ] ) .",
    "furthermore , we introduce partition of unity diagonal matrices defined on @xmath45 denoted by @xmath72 and such that @xmath73 where @xmath74 is the identity matrix of size @xmath75 . here , for each node @xmath46 , the @xmath72 is a diagonal matrix with the main diagonal that consists of a partition of unity vector @xmath76 , i.e. , @xmath77 , where @xmath78 are nodal points and @xmath79 is the kronecker symbol",
    ".    we note that @xmath41 can be written as @xmath80 observe that @xmath81 is defined only on the fine - grid nodes of @xmath45 . since @xmath67 , and",
    "thus only a few basis functions ( with indices from @xmath82 ) contribute to it since for @xmath83 and @xmath84 we have @xmath85 .",
    "thus , we have that @xmath86 where @xmath87 are basis vectors ( @xmath88-th columns of @xmath49 )",
    ".    next , in each neighborhood @xmath45 , we can perform an empirical interpolation locally since we can write @xmath89 where @xmath90 is the restriction of @xmath68 to @xmath45 , @xmath91 are the components of @xmath87 in @xmath45 , @xmath92 is the matrix with columns @xmath91 , and @xmath93 represents a vector containing only entries @xmath94 with @xmath95 .",
    "therefore , noting that @xmath90 depends on a few @xmath96 s , we perform an empirical interpolation using deim . for each coarse region",
    "@xmath45 we apply deim as introduced in section  [ sec : deim ] to construct an approximation of the type   for the function @xmath97 with @xmath98 . according to   we obtain @xmath99 and @xmath100 such that the following approximation holds , @xmath101 with this empirical interpolation , we have @xmath102 in simulation , @xmath103 can be pre - computed and thus approximating @xmath70 can be done at a lower cost .",
    "[ tab : deim_algorithm ]    l l & _ multiscale discrete empirical interpolation method _ + & coarse grid , partition of unity matrices @xmath72 , multiscale basis matrix @xmath92 , + & a projection basis matrix @xmath104 obtained by applying pod on a sequence of + & @xmath105 function evaluations +   + & for each @xmath45 + & 1 . set @xmath106=\\max\\{\\mid \\psi_{_1}^{\\omega_i}\\mid\\}$ ] + & 2 .",
    "set @xmath107 , @xmath108 , , and @xmath109 + & 3 . for @xmath110 do + & @xmath111 solve @xmath112 + & @xmath111 compute @xmath113 + & @xmath111 compute @xmath114=\\max\\{\\mid { r}\\mid\\}$ ] + & @xmath111 set @xmath115 , @xmath116 , and @xmath117 + & @xmath118 end for + & @xmath119 + output : & the interpolation indices @xmath120 and + & @xmath121 + & + & +    the algorithm for multiscale deim , used to compute the approximation in   for each coarse region , is presented in table  [ tab : deim_algorithm ] .",
    "in the rest of the section , we present the analysis of the multiscale deim designed above . in order to simplify the expressions",
    ", we use the notation @xmath122 to signify that there is a constant @xmath123 such that @xmath124 , where this constant @xmath123 is independent of the vectors involved and of dimension @xmath7 .",
    "we start by using the definition of @xmath125 in   to get , @xmath126 here , we have applied a triangle inequality and the fact that the entries of the diagonal matrices @xmath72 are less than one .",
    "the hidden constant is the maximum number of coarse nodes in @xmath82 , that is , @xmath127 , where @xmath128 is the cardinality of the set .",
    "this number is finite , is independent of the fine - grid parameter @xmath7 and depends only on the coarse triangulation configuration .",
    "following deim estimates in  @xcite ( see lemma 3.2 . ) , we can write @xmath129 here @xmath130 is assumed invertible and @xmath131 is the projection of the error onto the space spanned by @xmath99 ( where @xmath132 is the orthogonal projection in the vector norm @xmath133 to the space spanned by @xmath99 ) .    to estimate @xmath131",
    ", we can consider an error estimate that is typical for pod estimates .",
    "the error over all snapshots is given by @xmath134 where @xmath135 are the number of snapshots in the region @xmath45 : @xmath136 .",
    "the @xmath137 are eigenvalues ( in the decreasing order ) of @xmath138 , and @xmath139 is the number of selected eigenvalues whose corresponding eigenvectors are used in the empirical interpolation .",
    "this estimate requires that the snapshots used in the above estimate appear in the local pod .",
    "one can also show that , for an arbitrary element @xmath90 in the span of snapshots , we have @xmath140 with this latter estimate , we can write @xmath141 by inserting   into  , we obtain the estimate @xmath142 one may need a special inner product for multiscale high - contrast equations to ensure an appropriate bound , as discussed in section  [ sec : mspod ] .",
    "in this section , we describe the offline - online computational procedure that is used to solve the forward problem on a coarse grid .",
    "we elaborate on possible choices for the associated bilinear forms to be used in the coarse space construction .",
    "below we offer a general outline of the multiscale procedure . for details on the constructions and further considerations",
    "we refer to  @xcite .",
    "* offline computations : * * 1.0 . coarse grid generation . * * 1.1 .",
    "construction of snapshot space used to compute the offline space . * * 1.2 .",
    "construction of a small dimensional offline space by dimensional reduction in the space of local snapshots . * online computations : * * 2.1 . for each input parameter set , compute multiscale basis functions . * * 2.2 .",
    "solution of a coarse - grid problem for given forcing term and boundary conditions .",
    "we consider various non - linear elliptic equations of the form @xmath143 where @xmath144 on @xmath145 . performing multiscale simulations",
    "requires appropriate local multiscale basis functions .",
    "we discuss this procedure next .",
    "the procedure below identifies local basis functions . denoting these basis functions by @xmath87 , we seek the solution @xmath146 that solves  .",
    "we employ an implicit time discretization and use the newton method to solve the resulting nonlinear system at each time level . in this case , the residual form of problem   can be written as @xmath147 where @xmath148 is the solution at the previous time step and @xmath149 is the value of the solution at the latest iteration level .      in the offline computation",
    ", we first construct a snapshot space @xmath150 .",
    "constructing the snapshot space may involve solving various local problems for different choices of input parameters or different fine - grid representations of the solution in each coarse region .",
    "we denote each snapshot vector ( listing the solution at each node in the domain ) using a single index and create the following matrix @xmath151,\\ ] ] where @xmath152 denotes the snapshots and @xmath153 denotes the total number of functions to keep in the local snapshot matrix construction .    in order to construct an offline space @xmath154",
    ", we perform a dimension reduction process in the space of snapshots using an auxiliary spectral decomposition .",
    "the main objective is to use the offline space to efficiently ( and accurately ) construct a set of multiscale basis functions to be used in the online stage .",
    "more precisely , we seek for a subspace of the snapshot space such that it can approximate any element of the snapshot space in the appropriate sense which is defined via auxiliary bilinear forms . at the offline stage",
    "the bilinear forms are chosen to be _",
    "parameter - independent _ , such that there is no need to reconstruct the offline space for each @xmath155 value , where @xmath155 is assumed to be a parameter that represents @xmath40 and @xmath156 in @xmath157 .",
    "for constructing the offline space , we use the average of over the coarse region @xmath45 in @xmath158 .",
    "thus , @xmath155 represents both the average of @xmath40 and @xmath159 .",
    "we consider the following eigenvalue problem in the space of snapshots : @xmath160 where @xmath161 =    \\int_{\\omega_i } \\overline{\\kappa}(x , \\nu ) \\nabla",
    "\\phi_m^{\\text{snap } }    \\cdot \\nabla \\phi_n^{\\text{snap } } = \\phi_{\\text{snap}}^t \\overline{a } \\phi_{\\text{snap}},\\label{eq : abar}\\\\    \\displaystyle s^{\\text{off } } & = [ s^{\\text{off}}_{mn } ] =    \\int_{\\omega_i } \\widetilde{\\overline{\\kappa}}(x , \\nu )    \\phi_m^{\\text{snap } } \\phi_n^{\\text{snap } } = \\phi_{\\text{snap}}^t    \\overline{s } \\phi_{\\text{snap}}.\\label{eq : sbar}\\end{aligned}\\ ] ] in the definitions of @xmath162 and @xmath163 above , the coefficient @xmath164 is defined as a parameter - averaged coefficient .",
    "the coefficient @xmath165 can be chosen simply as @xmath166 or in more sophisticated manners that include information about multiscale finite element basis functions ; we refer to  @xcite for details and examples . in equation  , @xmath167 ( similarly for @xmath168 in  )",
    "denotes a fine - scale matrix , except that parameter - averaged coefficients are used in its construction , and also that @xmath167 is constructed by integrating only on @xmath45 . to generate the offline space ,",
    "we then choose the smallest @xmath169 eigenvalues from equation   and form the corresponding eigenvectors in the respective space of snapshots by setting @xmath170 ( for @xmath171 ) , where @xmath172 are the coordinates of the vector @xmath173 .",
    "see  @xcite for further details .",
    "we then create the offline matrices @xmath174\\ ] ] to be used in the online space construction .",
    "the online coarse space is used within the finite element framework to solve the original global problem , where continuous galerkin multiscale basis functions are used to compute the global solution .",
    "in particular , we seek a subspace of the respective offline space such that it can approximate well any element of the offline space in an appropriate metric . at the online stage ,",
    "the bilinear forms are chosen to be _",
    "parameter - dependent_. the following eigenvalue problems are posed in the offline space : @xmath175 where @xmath176 =    \\int_{\\omega_i } \\kappa(x , \\nu ) \\nabla \\phi_m^{\\text{off } } \\cdot    \\nabla \\phi_n^{\\text{off } } = \\phi_{\\text{off}}^t a(\\nu )    \\phi_{\\text{off}},\\\\ \\displaystyle s^{\\text{on } } & = [ s^{\\text{on}}_{mn } ] =    \\int_{\\omega_i } \\widetilde{{\\kappa}}(x , \\nu )    \\phi_m^{\\text{off } } \\phi_n^{\\text{off } } = \\phi_{\\text{off}}^t    { s}(\\nu ) \\phi_{\\text{off } } ,   \\end{aligned}\\ ] ] and @xmath177 and @xmath178 are now parameter dependent . as before ,",
    "the coefficient @xmath178 can be chosen simply as @xmath179 or can include the multiscale finite element basis functions .",
    "the choice of @xmath180 has implications on the dimensions of the resulting coarse spaces ; see  @xcite . to generate the online space ,",
    "we then choose the smallest @xmath181 eigenvalues from   and form the corresponding eigenvectors in the offline space by setting @xmath182 ( for @xmath183 ) , where @xmath184 are the coordinates of the vector @xmath185 .",
    "if @xmath186 , then one can use the parameter - independent case of gmsfem . in this case , there is no need to construct the online space ( or the online space is the same as the offline space ) . from now on ,",
    "we denote the online space basis functions by @xmath187 .",
    "we consider a time - dependent nonlinear flow governed by the following parabolic partial differential equation @xmath188 the finite element discretization of equation   yields a system of ordinary differential equations given by @xmath189 where @xmath190 is the vector collecting the pressure values at the fine - scale nodes with @xmath47 being the total number of fine - scale nodes and @xmath191 is the right - hand - side vector obtained by discretization . in our derivations and simulations , we assume that @xmath192 for some @xmath193 . in general , @xmath194 , can be approximated as in   using the offline basis functions ( see  @xcite for dealing with the nonlinearity in @xmath40 within each coarse region ) .",
    "this results in @xmath195 where we have @xmath196 and @xmath197 are piecewise linear basis functions defined on a fine triangulation of @xmath198 .    employing the backward euler scheme for the time marching process",
    ", we obtain @xmath199 where @xmath200 is the time - step size and the superscript @xmath7 refers to the temporal level of the solution .",
    "we let @xmath201 with derivative @xmath202 where @xmath203 and @xmath198 is the multi - variate gradient operator defined as @xmath204 .",
    "the scheme involves , at each time step , the following iterations @xmath205 where the initial guess is @xmath206 and @xmath207 is the iteration counter .",
    "the above iterations are repeatedly applied until @xmath208 is less than a specific tolerance .    in our simulations",
    ", we use @xmath209 ( see  ) for the definition of @xmath193 ) as our focus is on localized multiscale interpolation of nonlinear functionals that arise in discretization of multiscale pdes . with this choice",
    ", we do not need to compute the online multiscale space ( i.e. , the online space is the same as the offline space ) .",
    "we use the solution expansion given by equation   and employ the multiscale framework to obtain a set of @xmath48 ordinary differential equations that constitute a reduced - order model ; that is , @xmath210 thus , the original problem with @xmath47 degrees of freedom is reduced to a dynamical system with @xmath48 dimensions where @xmath211 .",
    "the nonlinear term @xmath212 in the reduced - order model , given by equation  , has a computational complexity that depends on the dimension of the full system @xmath47 .",
    "this nonlinear term requires matrix multiplications and full evaluation of the nonlinear function @xmath213 at the @xmath47-dimensional vector @xmath214 . as such , solving the reduced system still requires extensive computational resources and time .",
    "to reduce this computational requirement , we use multiscale deim as described in the previous section . in this case ,",
    "computational savings can be obtained in a forward run of the nonlinear model .    to solve the reduced system",
    ", we employ the backward euler scheme ; that is , @xmath215 where @xmath216 , @xmath217 , and @xmath218 .",
    "we let @xmath219 with derivative @xmath220 the scheme involves , at each time step , the following iterations @xmath221 where the initial guess is @xmath222 .",
    "the above iterations are repeated until @xmath223 is less than a specific tolerance .",
    "we use multiscale deim as detailed in section  [ msdeim ] to approximate the nonlinear functions that appear in the residual @xmath224 and the jacobian @xmath225 and , therefore , reduce the number of function evaluations .      when designing empirical interpolation methods for high - contrast problems , it is important to take into account heterogeneities and perform an interpolation using special weighted norms .",
    "these norms are derived based on the analysis discussed next .",
    "consider the approximation of @xmath226 that appears in the residual function  .",
    "for multiscale deim , we split this integral using partition of unity matrices as discussed earlier in   and re - write it for the discretization of the stiffness matrix .",
    "we introduce the partition of unity @xmath227 subordinated to the coarse regions @xmath228 .",
    "the relation with the partition of unity matrices @xmath229 is that the action of @xmath229 is the multiplication of the corresponding finite element function by the partition of unity function @xmath230.[def : xi ] we obtain ,    @xmath231    the interpolation for @xmath232 is performed in the region @xmath233 .",
    "each term in the sum ( [ eq : eim - pde ] ) can be written as @xmath234 where @xmath235 .",
    "to evaluate  , one needs to take into account the weight @xmath236 for high - contrast multiscale problems , where @xmath236 can have very high values in some subregions within @xmath233 .",
    "otherwise , the accuracy of the method substantially deteriorates .",
    "however , the weighting function is not uniquely defined and depends on particular basis functions that are involved in the integration .",
    "we propose the use of a weight function that is computed by summing over all indices @xmath237 ( which provides an upper bound for every @xmath236 ) and using only a few dominant modes . for high - contrast problems ,",
    "@xmath236 is very high in the regions of high conductivity and this high value can be estimated using only the first basis function .",
    "we propose using @xmath238 which is defined in the entire domain . here",
    ", @xmath239 is the first basis function ( associated to the first dominant mode in the online gmsfem selection procedure ) .",
    "one can also use additional basis functions to construct the weight @xmath240 . for implementing this procedure ,",
    "we need to define @xmath99 in ( [ eq : deim_local ] ) using weighted pod modes .",
    "this can simply be done using the matrix corresponding to the mass matrix @xmath240 as @xmath42 in remark  [ rem : m1m2 ] ( @xmath43 is the identity matrix of appropriate size ) .    using the above argument ,",
    "one can write the error in the residuals of multiscale deim @xmath241 and @xmath242 . @xmath243 using an appropriate weight function in pod , we can control the error @xmath244 independently of the physical parameters such as the contrast and small scales .",
    "this error can be related , under some conditions , to the error between the solution obtained using multiscale deim and the solution obtained without deim .",
    "if a standard ( instead of multiscale ) pod is used for the selection of empirical modes , then the error depends on the contrast and , in particular , the error is proportional to the contrast .",
    "similarly , the error in the jacobians corresponding to multiscale deim and without deim can be controlled independently of the contrast if we choose the weighted pod modes properly .",
    "large errors in the jacobians may lead to a poor convergence of the newton method as its convergence rate is related to the quality of approximating the inverse of the jacobians .",
    "we have observed this in our numerical simulations .",
    "the weighted pod procedure allows minimizing the residual error between the snapshots of @xmath245 s ( nonlinear function ) and their projections in the weighted norm .",
    "consequently , the residual is mainly minimized in the high - conductivity regions which can constitute a small portion of the coarse block .",
    "in this section , we present numerical examples to illustrate the applicability of the multiscale empirical interpolation method for solving nonlinear multiscale partial differential equations . before presenting the individual examples , we review the computational domain used in constructing the gmsfem basis functions . this computation is performed during the offline stage .",
    "we discretize with finite elements a nonlinear pde posed on the computational domain @xmath246\\times[0,1]$ ] . for constructing the coarse grid , we divide @xmath247\\times[0,1]$ ] into @xmath248 squares .",
    "each square is divided further into @xmath249 squares each of which is divided into two triangles .",
    "thus , the discretization parameters are @xmath250 for the fine - grid mesh and @xmath251 for the coarse - mesh .",
    "the fine - scale finite element vectors introduced in this section are defined on this fine grid .",
    "we recall that the fine - grid representation of a coarse - scale vector @xmath96 is given by @xmath56 , which is a fine - grid vector .    using the two grids",
    ", we construct the gmsfem coarse space as described in section  [ sec : app ] . in the simulations ,",
    "we consider two different permeability fields .",
    "these permeability fields , denoted by @xmath252 , contain channels of high conductivity and are shown in figure  [ perm ] .",
    "this figure shows fields with different structures that model high - conductivity channels within a homogeneous domain . the minimum conductivity value for this case is taken to be @xmath253 , and the high conductivity varies from channel to channel with a maximum value of @xmath254 ( @xmath255 = 4 or 6 ) .",
    "both permeability fields are represented by the fine mesh .      to demonstrate the applicability of the multiscale empirical interpolation method in approximating nonlinear functions when",
    "using the multiscale framework , we consider two parametrized functions @xmath256 \\mapsto \\mathbb{r}^{n_f}$ ] and @xmath257 \\mapsto \\mathbb{r}^{n_f}$ ] given by @xmath258 where @xmath259 $ ] .",
    "we follow the multiscale deim approach described in section  [ msdeim ] to approximate the nonlinear function on the fine grid while evaluating at few selected points .    to check the capability of the multiscale deim to properly approximate the nonlinear function , we compute the relative error as the l@xmath260-norm of the difference between the original and approximate functions : i.e. , @xmath261 where @xmath262 is obtained from the deim approximation .",
    "we consider @xmath56 as a multiscale solution of the elliptic problem obtained from a fine mesh of dimension 10201 ( i.e. , @xmath26310 ) by solving @xmath264 in @xmath198 and @xmath144 on @xmath145 , where @xmath252 is defined as in case i with @xmath265 ( see figure [ perm ] ) . in figure",
    "[ error1 ] , we plot the relative error variations with the number of deim points .",
    "as expected , the error decreases as the number of deim points is increased .",
    "for instance , the relative error @xmath266 is equal to 7.18 10@xmath267 and 7.14 10@xmath267 when using only 2 deim points per region to approximate the nonlinear functions @xmath268 and @xmath269 , respectively , defined on a fine mesh of dimension 10201 .",
    "these results show the capability of the multiscale deim to reproduce the fine - scale representation of the nonlinear function while gaining in terms of computational cost through evaluating at only a few selected points .    in figure  [ f ] , we compare the approximate functions obtained from deim using two points per region against the original function of dimension @xmath270 .",
    "the good agreement observed between the two sets of data shows the capability of deim to approximate the nonlinear function using a few selected points per region .      in this section ,",
    "we consider a steady non - linear elliptic equation of the form @xmath271 where @xmath272 we consider permeability fields @xmath252 that contain high - conductivity channels as shown in figure  [ perm ] .",
    "we use gmsfem with newton s method to discretize and solve equation   and employ the multiscale deim to approximate the nonlinear forcing term .",
    "we define the relative energy error as @xmath273 where @xmath274 is the fine - scale stiffness matrix that corresponds to  .",
    "the errors are plotted in figure  [ error2 ] with respect to the number of deim points . clearly , the use of a few deim points yields good approximation of the nonlinear forcing term and , consequently , the nonlinear pde solution .",
    "our numerical experiments show that the error does not depend on the contrast and it decreases as we increase the number of deim points .",
    "we refer to  @xcite for theoretical results on the error analysis of high - contrast problems .    for illustration purposes , in figure  [ deimpde1 ] ,",
    "we show the approximate solutions obtained from the multiscale deim approach using two deim points per coarse region .",
    "the black dots denote the location of the deim points .",
    "these deim points show high absolute values of the modes representing the forcing terms in  .          as an example of a nonlinear unsteady problem",
    ", we consider the following time - dependent parabolic equation @xmath275 where @xmath276 and the structure of the permeability fields @xmath277 is shown in figure  [ perm ] .",
    "we employ the gmsfem for space discretization and the newton method to solve the nonlinear algebraic system at each time step as detailed in section  [ newton ] .",
    "furthermore , we use multiscale deim , described in section  [ msdeim ] , to approximate the nonlinear functions and use multiscale pod ( see section  [ sec : mspod ] ) to identify the modes in the empirical interpolation . without multiscale pod",
    ", the newton method may converge slowly or may not converge when using @xmath278-inner - product - based pod  @xcite . in figure  [ error3 ]",
    ", we plot the variation of the relative energy error between the multiscale and multiscale deim solutions with the number of deim points for the two configurations of the permeability field .",
    "the results are obtained for @xmath279 .",
    "multiscale deim approximates well the multiscale solutions as indicated by the small error values while significantly reducing the number of function evaluations .        in figure  [ deimpde2 ]",
    ", we show the approximate solutions obtained from the multiscale deim approach using two deim points per region .",
    "the black dots denote the location of the deim points .",
    "we investigate the robustness of the multiscale deim approach with respect to moderate variations in the nonlinearity of the permeability field . as such",
    ", we run the forward problem while uniformly varying the value of the parameter @xmath159 of the nonlinear function @xmath280 over the interval @xmath281 $ ] with a step equal to one and store the snapshots of the nonlinear functions for each case .",
    "then , we use all snapshots to compute the deim points and the index matrices of each region as described in section  [ msdeim ] . next , we consider a nonlinear function @xmath282 with @xmath283 and show in figure  [ error4 ] the relative energy error variations with the number of deim points .",
    "note that @xmath283 is not among the samples considered to compute the global deim points .",
    "using a few deim points yields a good approximation .",
    "we mention that the simulation time of the final reduced order model is about @xmath284 of the computational time of running the fine - grid model .",
    "for instance , the relative energy error @xmath285 is equal to 4.96 10@xmath286 and 1.05 10@xmath286 when using only three deim points per region to approximate the nonlinear functions that appear in the residual @xmath224 and the jacobian @xmath225 for the two configurations of the permeability field . considering more deim points results in smaller error values .",
    "these results demonstrate the robustness of the model reduction approach based on combining the multiscale framework and deim . we have also tested this approach with different right - hand - sides and observed similar results .",
    "in this paper , we propose a multiscale empirical interpolation for solving nonlinear multiscale partial differential equations .",
    "the proposed method uses the generalized multiscale finite element method ( gmsfem ) which constructs multiscale basis functions on a coarse grid to solve the nonlinear problem . to approximate inexpensively nonlinear functions that arise in the residual and jacobians",
    ", we design multiscale empirical interpolation techniques that use empirical modes constructed based on local approximations of the nonlinear functions using weighted pod techniques .",
    "the proposed multiscale empirical interpolation techniques ( 1 ) divide the computation of the nonlinear function into coarse regions , ( 2 ) evaluate the contributions of the nonlinear functions in each coarse region taking advantage of a reduced - order solution representation , and ( 3 ) introduce multiscale proper orthogonal decomposition techniques to find appropriate interpolation vectors .",
    "we demonstrate the applicability of the proposed methods on several examples of nonlinear multiscale pdes that are solved with newton methods .",
    "our numerical results show that the proposed methods provide an accurate and robust framework for solving nonlinear multiscale pdes on coarse grids while providing significant computational cost savings ..",
    "maxime barrault , yvon maday , ngoc  cuong nguyen , and anthony  t. patera .",
    "an ` empirical interpolation ' method : application to efficient reduced - basis discretization of partial differential equations . , 339(9):667672 , 2004 .",
    "m.  hinze and s.  volkwein .",
    "proper orthogonal decomposition surrogate models for nonlinear dynamical systems : error estimates and suboptimal control . in p.",
    "benner , v.  mehrmann , and d.c .",
    "sorensen , editors , _ dimension reduction of large - scale systems _ , volume  45 of _ lecture notes in computational science and engineering _ , pages 261306 .",
    "springer berlin heidelberg , 2005 ."
  ],
  "abstract_text": [
    "<S> in this paper , we propose a multiscale empirical interpolation method for solving nonlinear multiscale partial differential equations . </S>",
    "<S> the proposed method combines empirical interpolation techniques and local multiscale methods , such as the generalized multiscale finite element method ( gmsfem ) . to solve nonlinear equations , </S>",
    "<S> the gmsfem is used to represent the solution on a coarse grid with multiscale basis functions computed offline . </S>",
    "<S> computing the gmsfem solution involves calculating the residuals on the fine grid . </S>",
    "<S> we use empirical interpolation concepts to evaluate the residuals and the jacobians of the multiscale system with a computational cost which is proportional to the coarse scale problem rather than the fully - resolved fine scale one . </S>",
    "<S> empirical interpolation methods use basis functions and an inexpensive inversion which are computed in the offline stage for finding the coefficients in the expansion based on a limited number of nonlinear function evaluations . </S>",
    "<S> the proposed multiscale empirical interpolation techniques : ( 1 ) divide computing the nonlinear function into coarse regions ; ( 2 ) evaluate contributions of nonlinear functions in each coarse region taking advantage of a reduced - order representation of the solution ; and ( 3 ) introduce multiscale proper - orthogonal - decomposition techniques to find appropriate interpolation vectors . </S>",
    "<S> we demonstrate the effectiveness of the proposed methods on several examples of nonlinear multiscale pdes that are solved with newton s methods and fully - implicit time marching schemes . </S>",
    "<S> our numerical results show that the proposed methods provide a robust framework for solving nonlinear multiscale pdes on a coarse grid with bounded error . </S>"
  ]
}
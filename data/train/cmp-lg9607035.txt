{
  "article_text": [
    "systems for translation of controlled language require the source text to be expressed within severe syntactical and lexical limits .",
    "one of the objectives of such systems is that an author who fully conforms to the imposed restrictions is rewarded with a reliable and fully automatic translation of his text into one or more target languages .",
    "therefore a proof of their _ completeness _ is of great importance .",
    "a machine translation system is said to be _ complete _ if all expressions that are correct according to the source - language grammar can be translated into the target language .",
    "+ the starting point of this research has been the compositional approach to machine translation developed in the rosetta project , @xcite .",
    "an important difference is that rosetta made use of a rather complex grammar formalism , m - grammars , for which completeness could not be proven , whereas the current research focuses on the provability of completeness for relatively simple grammar formalisms , which may be more appropriate for machine translation of controlled languages .",
    "+ first sections  [ sec - compositional - grammars ] and  [ sec - compositional - machine - translation ] describe our view and definitions of respectively compositional grammar and compositional machine translation . section  [ sec - completeness ] presents the theme of this paper , viz._completeness _ of compositional machine translation . subsequently section  [ sec - completeness - for - cfg ] works out completeness conditions for compositional grammars based on context - free grammars .",
    "these conditions are rather restrictive and may therefore find application primarily in areas such as controlled languages .",
    "one of the objectives of ongoing research is to relax the conditions .",
    "section  [ sec - discussion ] concludes the paper and discusses ongoing and future research .",
    "this section defines _ compositional grammars _ ( subsection [ subsec - def - compositional - grammars ] ) , and the auxiliary notions _",
    "syntactic derivation tree _ ( subsection [ subsec - def - syndertree ] ) and _ semantic derivation tree _",
    "( subsection [ subsec - def - semdertree ] ) .",
    "compositional machine translation assumes that the source language ( sl ) and the target language ( tl ) are defined by means of compositional grammars , i.e.grammars that obey the well - known compositionality principle ( cf .",
    "abstracting away from the details of any specific syntactic formalism , we define a _ compositional grammar _ @xmath0 as consisting of _",
    "( i ) _ a syntactic component , _",
    "( ii ) _ a semantic component , and _ ( iii ) _ an interpretation from the syntactic component to the semantic component ( cf.montague s universal grammar , @xcite ) . roughly , the syntactic component consists of a set of basic expressions ( words ) , each having a syntactic category , and a set of syntactic rules that build larger expressions from basic expressions . likewise ,",
    "the semantic component consists of a set of basic meanings , each having a semantic category , and a set of semantic rules that build larger meanings from basic meanings .",
    "the interpretation associates with every basic expression a _ set _ of basic meanings , and with every syntactic rules a _ set _ of semantic rules .",
    "+ there now follows a more detailed description of these components , which the eager reader may wish to skip on a first pass .",
    "+ the _ syntactic component _ specifies a finite set of basic expressions , a finite set of syntactic rules , a finite set of syntactic categories , and a syntactic type - assignment function . _",
    "basic expressions _ are , roughly , the smallest meaningful units in a language ( more or less the stems of content words ) . _ syntactic rules _ are operations that recursively build _ derived expressions _ from basic expressions .",
    "_ syntactic categories _ describe the syntactic properties of expressions .",
    "basic expressions  @xmath1 all have a syntactic category ; syntactic rules restrict their arguments in their categories , and specify the category of the derived expression they yield . the _ syntactic type - assignment function _ associates every syntactic rule  @xmath2 with a 2-tuple consisting of a so - called _ argument list _ of the categories of its arguments and its resultant category .",
    "the arity of a syntactic rule is the number of categories in the rule s argument list .",
    "we require that all syntactic and semantic rules are total : they must be applicable for any combination of arguments that matches their argument lists .",
    "note that this is not a real restriction of expressiveness : any partial function can be made into a total function by an appropriate tuning of the set of categories .",
    "the _ semantic component _ has the same structure as the syntactic component : it specifies a finite set of basic meanings , a finite set of semantic rules , a finite set of semantic categories , and a semantic type - assignment function .",
    "_ basic meanings _ are expressions of the semantic domain of some logical language .",
    "_ semantic rules _ are operations in the logical language that recursively build _ derived meanings _ from basic meanings . for the purpose of compositional translation the choice of this logical",
    "language is not very important .",
    "however , the semantic rules must be total .",
    "_ semantic categories _ describe the semantic properties of semantic expressions . basic meanings",
    "@xmath3 all have a semantic category ; semantic rules restrict their arguments in their semantic categories , and specify the category of the derived meaning they yield . the _ semantic type - assignment function _ associates every semantic rule  @xmath4 with a 2-tuple consisting of a so - called _ argument list _ of the categories of its arguments and its resultant category .",
    "the arity of a semantic rule is the number of categories in the rule s argument list .",
    "the _ interpretation _ , denoted @xmath5 , associates every basic expression with a _ set _ of basic meanings , and every syntactic rule with a _ set _ of semantic rules . the arities of associated syntactic and semantic rules must match . note that our approach differs here from montague grammar , in which a basic expression ( syntactic rule ) is associated with _ exactly one _ basic meaning ( semantic rule ) .",
    "derivational histories of syntactic expressions are represented using so - called syntactic derivation trees :    a _ syntactic derivation tree _",
    "@xmath6 is either a tree consisting of a single node  @xmath1 , where  @xmath1 is the name of a basic expression , or a tree of the form @xmath7 $ ] , where  @xmath2 is the name of a syntactic rule , and @xmath8 is an ordered list of syntactic derivation trees .",
    "+ we define the syntactic category of a syntactic derivation tree  @xmath6 , denoted _",
    "syncat(t ) _ , to be the resultant category of its top syntactic rule . for convenience",
    ", we will sometimes annotate syntactic derivation trees with their syntactic category , e.g. @xmath9 .",
    "+ intuitively one may think of a syntactic derivation tree as the derivational history of a syntactic expression .",
    "however , not all syntactic derivation trees actually describe expressions : the definition given above does not require the syntactic rules to be applicable to their arguments .",
    "this distinction is described by the concept of well - formedness .",
    "[ def - cfg - wfness]a syntactic derivation tree  @xmath6 is _ well - formed _ if and only if it consists of a single basic expression or otherwise if all the syntactic rules in the tree are applicable to their arguments as specified by tree  @xmath6 , i.e. if and only if for all the syntactic rules in tree @xmath6",
    "_ ( i ) _ the number of arguments ( subtrees ) matches the rule s arity , and _",
    "( ii ) _ the arguments satisfy any conditions on the syntactic categories that may be made by the syntactic rule . + since there is generally more than one way to derive an expression , expressions are in general assigned a _ set _ of corresponding syntactic derivation trees .      the meaning of a derived expression is derived in parallel with the syntactic derivation process . thus this semantic derivation process may be represented in a tree with the same geometry as the syntactic derivation tree , but labelled by basic meanings and semantic rules .",
    "this tree is called a _ semantic derivation tree_.    a _ semantic derivation tree _  @xmath10 is either a tree consisting of a single node  @xmath3 , where @xmath3 is the name of a basic meaning , or a tree of the form  @xmath11 $ ] , where  @xmath4 is the name of a semantic rule , and @xmath12 is an ordered list of semantic derivation trees .",
    "+ we define the semantic category of a semantic derivation tree  @xmath10 , denoted _",
    "semcat(d ) _ , to be the resultant category of its top semantic rule .",
    "semantic derivation trees may also be annotated with their semantic category , e.g. @xmath13 .",
    "+ since every syntactic derivation tree is associated with a _ set _ of semantic derivation trees , every syntactic derivation tree is associated with a _ set _ of semantic derivation trees . + a semantic derivation tree is well - formed if and only if there is a corresponding well - formed syntactic derivation tree .",
    "in our definition of compositional translation the semantic component is used as an interlingua : source- and target - language expressions are _ translation - equivalent _ if and only if they have at least one well - formed semantic derivation tree in common .    for two compositional grammars  @xmath0 and  @xmath14 ,",
    "the _ compositional translation _ of a source - language utterance  @xmath15 is a set of target - language utterances , derived as follows :    @xmath16 * morphosyntactic analysis *  morphosyntactic analysis performs morphological and syntactic analysis of a sl utterance , yielding the set of all syntactic derivation trees that correspond to the utterance : + @xmath17 + @xmath18 + ( ` @xmath19 ' denotes the result of applying rule @xmath2 to expressions @xmath20 ) .",
    "+ @xmath16 * semantic analysis *  semantic analysis of a syntactic derivation tree yields the set of all corresponding semantic derivation trees : + @xmath21 + @xmath22 + @xmath16 * semantic generation *  semantic generation from a semantic derivation tree yields the set of all corresponding syntactic derivation trees : + @xmath23 + @xmath24 + @xmath16 * morphosyntactic generation *  morphosyntactic generation for a _ well - formed _",
    "syntactic derivation tree produces the corresponding utterance : + @xmath25 + @xmath26 , where @xmath27",
    "an important question regarding the reliability of compositional translation is what we call the _ completeness _ issue : _ can the translation process be guaranteed to produce at least one translation ? _ in subsection  [ sss - three - levels ] we first make this notion of completeness precise .",
    "then , in subsection  [ sss - guaranteeing - completeness ] , we investigate what conditions must be satisfied to guarantee completeness . in section  [ sec - completeness - for - cfg",
    "] conditions are elaborated for compositional grammars based on context - free grammars .",
    "completeness is about the guaranteed generation of well - formed translations , given a specific sl and tl grammar , and translation process .",
    "however , this description does not make precise from which stage on the translation process must be guaranteed to succeed . depending on this",
    ", one may distinguish ( at least ) three levels of completeness ( cf.fig.1 ) : +  * utterance completeness *  for each well - formed sl utterance , the translation process yields at least one well - formed tl utterance .",
    "+  * syntactic completeness *  for each syntactic derivation tree of each well - formed sl utterance , the translation process yields at least one well - formed tl utterance .",
    "+  * semantic completeness *  for each semantic derivation tree of each syntactic derivation tree of each well - formed sl utterance , the translation process yields at least one well - formed tl utterance . + * note : * semantic completeness subsumes syntactic completeness , which in turn subsumes utterance completeness .",
    "+ naively , one would like a machine translation system to produce at least one translation for every sl utterance .",
    "this requirement is included in the definition of utterance completeness above .",
    "however , it is well - known that natural - language utterances are often ambiguous . for each of its interpretations , such an ambiguous utterance may have a different translation",
    "therefore , a machine translation system should be able to provide at least one translation _ for each of the interpretations _ of the sl utterance .",
    "natural - language ambiguity takes on two forms : structural ambiguity and lexical ambiguity .",
    "the notion of syntactic completeness takes care of the structural ambiguity : it is formulated in terms of structurally unambiguous syntactic derivation trees . however , syntactic completeness is still unsatisfactory , as syntactic derivation trees are often lexically ambiguous .",
    "this is due to the fact that basic expressions may have more than one meaning , and syntactic rules may have more than one semantic rule associated with them .",
    "what is needed is a formulation of completeness in terms of a structure that is both structurally and lexically unambiguous .",
    "the solution is provided by the notion of semantic completeness .",
    "therefore , from now on , the term ` completeness ' will be taken to refer to semantic completeness only .    for a pair of compositional grammars , compositional translation from  @xmath0",
    "to  @xmath14 is _ complete _ if and only if for each well - formed semantic derivation tree , the translation process yields at least one well - formed tl utterance .",
    "the central issue of this paper is the question of how to guarantee completeness . or stated in terms of the process of compositional translation described above : what conditions on the sl and tl grammars are sufficient ( and necessary ) to guarantee that , after successful analysis , generation can produce a well - formed tl expression ?",
    "generation comprises semantic generation and morphosyntactic generation ( cf.fig.1 ) . +",
    "* completeness of morphosyntactic generation *  morphosyntactic generation evaluates the syntactic derivation trees yielded by semantic generation by recursive rule application .",
    "as stated in section  [ sec - compositional - grammars ] , we assume that all syntactic rules are total for the categories of their arguments . rule application therefore succeeds if and only if the arguments are of the correct categories . to ensure this we must move upstream to semantic generation . + * completeness of semantic generation *  semantic generation simply replaces the basic meanings and semantic rules in the semantic derivation tree with corresponding syntactic elements of the tl grammar , forming the tl syntactic derivation trees . an obvious necessary and sufficient condition for completeness of semantic generation is that there be _ at least one _ translation - equivalent counterpart in the tl grammar for each possible semantic element in the sl semantic derivation trees . a compositional grammar pair satisfying this condition",
    "is called a _ homomorphic grammar pair _ ( see also  @xcite ) :    [ def - grammar - homomorphism2]a compositional grammar pair is _ homomorphic from  @xmath0 to  @xmath14 _ if and only if  @xmath14 is _ attuned _ to  @xmath0 :    for each sl basic expression  @xmath1 , for each of the basic meanings  @xmath3 of  @xmath1 , there is at least one tl basic expression  @xmath28 such that basic meaning  @xmath3 is also a basic meaning of  @xmath28 .",
    "formally , @xmath29 .    for each sl syntactic rule  @xmath2 , for each of the semantic rules  @xmath4 of  @xmath2 , there is at least one tl syntactic rule  @xmath30 such that semantic rule  @xmath4 is also a semantic rule of  @xmath30 .",
    "formally , @xmath31 .",
    "however , to demand grammar homomorphism is only a necessary condition for completeness , and not a sufficient one .",
    "it merely guarantees that for every well - formed sl semantic derivation tree there is a corresponding tl syntactic derivation tree , and does not guarantee that this syntactic derivation tree is well - formed .",
    "the next section is about such sufficient conditions for context - free grammars .",
    "this section presents completeness conditions for translation between compositional grammars based on the context - free grammar ( cfg ) formalism .",
    "we assume that the reader is familiar with this formalism .",
    "subsection  [ ss - cfg - based - compositional - grammar ] explicates how a compositional grammar can be based on context - free grammars .",
    "subsections  [ ss - m2o - catcor ] and  [ ss - m2m - catcor ] subsequently develop completeness conditions for such compositional grammars .",
    "a compositional grammar consists of a syntactic component with basic expressions and syntactic rules , a semantic component with basic meanings and semantic rules , and an interpretation from the syntactic component to the semantic component .",
    "here we model the syntactic component as a cfg . the semantic component and the interpretation",
    "are as defined above .    in the syntactic component we let basic expressions correspond to rewrite rules that do not have right - hand side ( rhs ) nonterminals .",
    "the rule s rhs corresponds to the lexical material of the basic expression ; the rule s left - hand side ( lhs ) nonterminal corresponds to the syntactic category of the basic expression .",
    "we let syntactic rules correspond to rewrite rules that _ do _ have rhs nonterminals .",
    "the type of a syntactic rule is a 2-tuple consisting of a list of categories of the arguments it expects and the category of the expression it produces .",
    "the list of categories corresponds to an ordered list of the rewrite rule s rhs nonterminals ; the resultant category corresponds to the rewrite rule s lhs nonterminal .",
    "the operation performed by the syntactic rule is the in - order concatenation of its rhs terminals and nonterminals , where the nonterminals are replaced with the lexical material of the expressions which are provided as arguments to the syntactic rule .",
    "an example illustrates this : + * example *  _ cfg - based compositional grammars _",
    "+ in this example we briefly illustrate cfg - based compositional grammars .",
    "consider the following table , which shows the syntactic component of a cfg - based compositional grammar and its interpretation in the semantic component .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _",
    "[ cols= \" < , < , < , < \" , ]     here we would like to relate semantic category @xmath32 to syntactic categories @xmath33 and @xmath34 , and semantic category @xmath35 to syntactic categories @xmath36 and @xmath37 . to be able to do",
    "so we could allow every semantic category to be associated with a number of syntactic categories instead of just one .",
    "this corresponds to an n - n category correspondence .",
    "there is an _",
    "n - n category correspondence _ between a semantic component and a syntactic component of a compositional grammar if and only if there is a function @xmath38 such that : +  @xmath39 +  @xmath40 + @xmath41 , + where @xmath42 and + for a semantic category @xmath43 the set of corresponding syntactic categories @xmath44 is called the _ category correspondence set _ of @xmath43 and is denoted c. + for this new situation we must adjust the completeness condition . referring to fig.2 , it now is the case that each syntactic category @xmath45 may be any category in the set @xmath46 . as the induction hypothesis guarantees only one successful translation for each subtree  @xmath47",
    " and it is not known which one  to guarantee completeness is to guarantee that there is a syntactic rule @xmath30 for _ every _ argument list in @xmath48 .",
    "this is an unrealistic condition : in the english / french example it corresponds to the demand that there must be a french syntactic rule for all four argument lists @xmath49 . but to demand that for example there is a syntactic rule @xmath30 that combines a masculine determiner @xmath50 and a feminine noun @xmath51 , as this would imply , is nonsensical .",
    "the underlying problem is that the agreement dependencies can not be expressed explicitly in the cfg grammar formalism .",
    "the lesson to be learned from this example is that the dependencies between the categories should be taken into account .",
    "we present a way of encoding information about the dependencies between categories in cfg - based compositional grammar . to this end",
    "we distinguish two kinds of category correspondence .    for a compositional grammar , a semantic category @xmath52 is a _ conjunctive ( correspondence ) category _ if and only if for every well - formed semantic derivation tree @xmath10 of category @xmath52 , for _ every _ corresponding category @xmath53 in _  _ , there exists at least one corresponding well - formed syntactic derivation tree @xmath54 of category @xmath53 .",
    "any semantic category that is not a conjunctive correspondence category is called a _ disjunctive ( correspondence ) category_. semantic categories that have only one syntactic category in their category correspondence set are trivially conjunctive categories .",
    "+ for example , in the case of the english / french np rules , the semantic category @xmath32 corresponds _ conjunctively _ to categories _ det@xmath55 _ and _ det@xmath56 _ ( any determiner has both a masculine and a feminine form ) , whilst semantic category @xmath35 corresponds _ disjunctively _ to categories _ n@xmath55 _ and _ n@xmath56 _ ( nouns usually have either masculine or feminine gender ) .",
    "semantic category @xmath57 corresponds to only one category , _ np_@xmath58 , and is therefore a conjunctive category . +",
    "how can we use this to establish a condition for completeness ?",
    "the key idea is that some of the cfg - well - formed syntactic derivation trees of some category  @xmath59 may be guaranteed to translate into at least one cfg - well - formed tl syntactic derivation tree _ for all categories _ in  @xmath60 , instead of ` for at least one ' .",
    "category  @xmath59 is then said to _ correspond conjunctively _ to the categories in  @xmath60 .",
    "as opposed to disjunctive categories , a conjunctive category does not require every rule  @xmath30 to have translation - equivalent variants for all categories in  @xmath60 .",
    "thus , the distinction between conjunctive and disjunctive categories allows for a more realistic condition on the grammars .",
    "+ we adjust the definition of n - n category correspondence , taking into account the distinction between conjunctive and disjunctive categories .",
    "+ as for the basic meanings and basic expressions : for every basic meaning @xmath3 , if its category @xmath43 is a disjunctive category , there must be at least one associated basic expression @xmath28 with category @xmath61 _ for at least one category _",
    "@xmath61 in @xmath62 .",
    "if category @xmath43 of basic meaning @xmath3 is a conjunctive category , then there must exist at least one associated basic expression @xmath28 with category @xmath61 _ for every category _",
    "@xmath61 in @xmath62 .",
    "+ as for the semantic and syntactic rules , for every semantic rule @xmath4 with type , we establish conditions on the syntactic rules with which they are associated . again referring to fig.2 ,",
    "when generating a syntactic derivation tree from a semantic derivation tree , for subtrees @xmath47 that have a conjunctive category @xmath43 we can guarantee a tree @xmath63 _ for every _ category in @xmath62 . for subtrees @xmath47 that have a disjunctive category @xmath43 we can guarantee a tree @xmath64 _ for only one _ category in @xmath62 , and we do not know which one .",
    "therefore , we must guarantee that for every tuple and @xmath65 as consisting of the indices of its conjunctive and disjunctive categories , respectively . define and as the corresponding subtuples .",
    "] of the syntactic categories corresponding to disjunctive categories of @xmath4 , there exists _ at least one _ syntactic rule @xmath30 with type such that :    the tuple of the syntactic categories corresponding to the disjunctive categories of the argument list of @xmath4 is equal to @xmath66 : = @xmath66 .    every syntactic category @xmath67 that corresponds to a conjunctive category @xmath68 of the argument list of @xmath4 is in the category correspondence set of @xmath68 : @xmath69 .",
    "in addition , the resultant category @xmath59 of semantic rule @xmath4 must be taken into account .",
    "if this is a disjunctive category , then it suffices if the resultant category @xmath70 of the syntactic rule @xmath30 is in @xmath60 .",
    "if category @xmath59 is a conjunctive category , then there must be at least one syntactic rule @xmath30 with resultant category @xmath52 for all categories @xmath52 in @xmath60 .    using this condition",
    "we again obtain completeness :    for any cfg - based compositional grammar pair , compositional translation from  @xmath0 to  @xmath14 is _ complete _ if _",
    "( i ) _ the grammar pair is homomorphic from  @xmath0 to  @xmath14 , and _",
    "( ii ) _ there is an n - n category correspondence between the semantic and the syntactic categories of @xmath14 , where every semantic category of @xmath14 has been declared conjunctive or disjunctive and the sets of categories of @xmath14 satisfy the condition described above . +",
    "because of space limitations we do not include the proof ; we trust that the description of the condition above gives the reader an insight into how the proof can be given .",
    "+ * example *  returning to the english / french example discussed earlier , we declared @xmath32 a conjunctive , @xmath35 a disjunctive , and @xmath57 a conjunctive category .",
    "checking the condition formulated above , this amounts to the requirement that for every tuple @xmath66 in @xmath71 , there exists a syntactic rule @xmath30 such that = @xmath66 and @xmath69 , which is indeed the case .",
    "in this paper we presented the issue of completeness for compositional translation , and discussed how conditions for compositional translation could be found . in section  [ sec - completeness - for - cfg ]",
    "we examined the completeness issue for context - free grammars .",
    "we established completeness conditions for grammars with an n-1 category correspondence .",
    "as this condition is rather restrictive , we relaxed this condition to an n - n category correspondence condition .",
    "the first attempt however led to unrealistic conditions on the grammar rules , so that it was necessary to introduce the distinction between conjunctive and disjunctive categories .",
    "we adjusted the n - n category correspondence condition accordingly , and obtained a completeness condition for grammars with an n - n category correspondence . + the central issues in ongoing and future research are _",
    "( i ) _ the completeness issue for some other grammar formalisms , _ ( ii ) _ the algebraic formulation of completeness , and _ ( iii ) _ polynomial compositional translation . + * ( i )  completeness for other grammar formalisms *  the definite - clause grammar formalism ( dcg , see e.g.@xcite ) extends the cfg grammar formalism with attributes added to the nonterminals .",
    "attributes have a variety of uses , one of the most prominent being the enforcement of agreement relations . as for the completeness condition for dcg",
    ", we assume the same conditions on the nonterminals as we did for cfg .",
    "in addition , we formulate restrictions on the use of attributes . a proof has been established for completeness of grammars that satisfy these restrictions .",
    "+ future research will also address the completeness issue for tree - adjoining grammars .",
    "tree - adjoining grammars are interesting because they are somewhat more expressive than cfg s ( they are so - called mildly context - sensitive ) , and it enables expressing linguistic phenomena such as long - distance dependencies .",
    "+ * ( ii )  algebraic formulation of compositional translation *  compositional grammar , compositional translation and the completeness issue can be formulated algebraically .",
    "such an algebraic formulation has a number of advantages : _",
    "( i ) _ it abstracts away from the details of specific grammar formalisms , thus revealing the essentials of compositional translation and completeness , _",
    "( ii ) _ this abstraction provides a basis for the comparison of different grammar formalisms , and _ ( iii ) _ an algebraic formulation gives access to well - investigated mathematical theory , the results of which may be readily carried over .",
    "i hope to use the algebraic formulation as a basis for the investigation of the combination of the use of features and completeness . for other work on algebraic description of natural language ,",
    "see @xcite . an algebraic view on compositional translation",
    "is presented in ( * ? ? ?",
    "* ch.19 ) . + * ( iii )  polynomial compositional translation *  another line of work is concerned with an extension of the method of compositional translation for grammar formalisms that use only concatenative operations .",
    "the basic idea here is a generalization of the unit of translation - equivalence from single elements to combinations of these ( polynomials ) .",
    "this improves ` translation power ' , as it becomes possible to overcome all kinds of translation problems due to structural divergencies between languages .",
    "for example it becomes possible to relate a structure like @xmath72 $ ] with a structure like @xmath73 $ ] .",
    "i hope to show that , as polynomially derived algebras are algebras again , completeness conditions found for compositional translation will carry over to polynomial compositional translation .",
    "isomorphic grammars and their use in the rosetta translation system . in : margaret king ,",
    "editor , _ machine translation today : the state of the art _ , pages 351372 .",
    "edinburgh university press , 1987 .",
    "philips research m.s ."
  ],
  "abstract_text": [
    "<S> a machine translation system is said to be _ complete _ if all expressions that are correct according to the source - language grammar can be translated into the target language . </S>",
    "<S> this paper addresses the completeness issue for compositional machine translation in general , and for compositional machine translation of context - free grammars in particular . </S>",
    "<S> conditions that guarantee translation completeness of context - free grammars are presented . </S>"
  ]
}
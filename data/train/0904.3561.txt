{
  "article_text": [
    "computing the normalization of a ring is a major tool in commutative algebra , with applications in algebraic geometry and singularity theory .",
    "the first general algorithms were proposed by @xcite and @xcite .",
    "however , the tools involved , such as extensions of the ground field and addition of new indeterminates , make them unsuitable for most practical applications .    in recent years",
    "several new and more practicable algorithms using groebner bases have been proposed .",
    "the basic approach , continuing the line of the works mentioned before , is to compute an increasing chain of rings from the original ring to its normalization .",
    "this is carried out in the works of @xcite , @xcite , @xcite . to our knowledge none of these algorithms",
    "has been implemented and it remains unclear how practical they are .",
    "also @xcite , @xcite follow this path , applying as a new ingredient a criterion for normality due to @xcite . in @xcite",
    "they report an effective implementation of their algorithm in singular  @xcite .",
    "it became the standard algorithm for normalization in computer algebra systems , being now implemented also in macaulay2 @xcite and magma @xcite .",
    "a good review on most of these algorithms can be found in ( * ? ? ?",
    "* chapter 15 ) .",
    "another approach , presented in @xcite , is to use noether normalization , reduce the problem to the one dimensional case , and apply existing special algorithms for that case @xcite .",
    "unfortunately , we do not know of any implementation of these algorithms .    a more recent approach taken in @xcite and @xcite is to compute a decreasing chain of finitely generated modules over the original ring containing the normalization .",
    "their algorithm works only in the case when the base field is of positive characteristic @xmath0 , where they can use the frobenius map .",
    "it has been implemented in macaulay2 and singular , and it turns out to be very fast for small @xmath0 .",
    "however the computation of the frobenius makes it impracticable when @xmath0 is large .",
    "there are also very efficient methods for computing the normalization in some special cases .",
    "for example , for toric rings , one can apply fast combinatorial techniques , as explained in @xcite .",
    "the algorithm we propose in this paper is a general algorithm and it is based on @xcite and @xcite . in their algorithm , as we mentioned before , they construct an increasing chain of affine rings . they enlarge the rings by computing the endomorphism ring of a test ideal ( see below ) , adding new variables for each module generator of the endomorphism ring and dividing out the relations among them .",
    "then the algorithm is applied recursively to this new affine ring . due to the increasing number of variables and relations",
    "this can produce a big slow - down in the performance of the algorithm already when the number of intermediate rings is 2 or 3 .",
    "for a larger number , it usually makes the algorithm unusable , as the groebner bases of the ideals of relations grow extensively .",
    "our approach avoids the increasing complexity when enlarging the rings , benefiting from the finitely generated @xmath1-module structure of the normalization .",
    "we are able to do most computations over the original ring without adding new variables or relations .",
    "the main new results of this paper are presented in section [ section : original ] . in section [ section : algorithm ] we describe the algorithm and show , as an application , how the @xmath2-invariant of the ring can be computed .",
    "section [ section : examples ] contains several benchmark examples and a comparison with previously known algorithms , while section [ section : extension ] is devoted to an extension of the algorithm to non - global monomial orderings .",
    "let @xmath1 be a reduced noetherian ring.@xmath3 and that morphisms map @xmath4 to @xmath4 . ]",
    "the _ normalization _ @xmath5 of @xmath1 is the integral closure of @xmath1 in the total ring of fractions @xmath6 , which is the localization of @xmath1 with respect to the non - zerodivisors on @xmath1 .",
    "@xmath1 is called _ normal _ if @xmath7 .",
    "the _ conductor _ of @xmath1 in @xmath5 is @xmath8 .",
    "[ lem : fingenmod ] @xmath5 is a finitely generated @xmath1-module if and only if @xmath9 contains a non - zerodivisor on @xmath1 .",
    "if @xmath10 is a non - zerodivisor then @xmath11 is module - finite over @xmath1 , since @xmath1 is noetherian .",
    "conversely , if @xmath5 is module - finite over @xmath1 then any common multiple of the denominators of a finite set of generators is a non - zerodivisor on @xmath1 contained in @xmath9 .",
    "we recall the grauert and remmert criterion of normality .",
    "[ prop : testideal ] let @xmath1 be a noetherian reduced ring and @xmath12 an ideal satisfying the following conditions :    1 .",
    "@xmath13 contains a non - zerodivisor on @xmath1 , 2 .",
    "j is a radical ideal , 3 .",
    "@xmath14 , where @xmath15 is the non - normal locus of @xmath1 .",
    "then @xmath1 is normal if and only if @xmath16 , via the canonical map which maps @xmath17 to the multiplication by @xmath18 .    [ defn : teststuff ] an ideal @xmath12 satisfying properties ( 1)@xmath19(3 ) is called a _ test ideal _ ( for the normalization ) of @xmath1 .",
    "a pair @xmath20 with @xmath13 a test ideal and @xmath21 a non - zerodivisor on @xmath1 is called a _ test pair _ for @xmath1 .    by lemma [ lem : fingenmod ] ,",
    "test pairs exist if and only if @xmath5 is module - finite over @xmath1 .",
    "we can choose any radical ideal @xmath13 such that @xmath22 .",
    "our algorithm computes the normalization of @xmath1 when a test pair for @xmath1 is known .",
    "if @xmath1 is a reduced , finitely generated @xmath23-algebra with @xmath23 a perfect field , then @xmath9 contains a non - zerodivisor which can be computed by using the jacobian ideal ( cf .  lemma [ lem : jacobperf ] and remark [ rem : knotperf ] ) .",
    "the same holds for localizations of such @xmath23-algebras w.r.t .  any monomial ordering .",
    "indeed , our algorithm is slightly more general , working whenever the jacobian ideal does not vanish .",
    "if @xmath1 is not normal , we get a proper ring extension @xmath24 .",
    "if @xmath25 is not normal , which is checked by applying proposition [ prop : testideal ] to @xmath25 , we obtain a new ring @xmath26 by that same proposition , which then has to be tested for normality , and so on .",
    "that is , we get a chain of inclusions of rings @xmath27 ( with @xmath28/i_i$ ] , @xmath29 ideal , and natural maps @xmath30 ) .",
    "if at some point , we get a normal ring @xmath31 , then @xmath32 by lemma [ lem : abnorm ] .",
    "this guarantees that if @xmath5 is a finitely generated @xmath1-module , the chain will become stationary with @xmath31 normal , giving an algorithm to compute the normalization .",
    "the fact which makes the whole algorithm practicable , is the isomorphism @xmath33 allowing us to compute @xmath34 over @xmath1 .",
    "this fact , not contained in @xcite , was found by the first named author during the implementation of the algorithm in singular  and first published in @xcite ( see also ( * ? ? ?",
    "* lemma 3.6.1 ) and @xcite for related statements ) .",
    "we shall prove a generalization of this isomorphism in lemma [ lem : newlem ] , which will be needed in the new algorithm .",
    "the following lemma describes the @xmath1-algebra structure of @xmath35 .",
    "this will allow us to compute the normalization of @xmath1 recursively .",
    "[ lem : aalgisom ] let @xmath1 be a reduced noetherian ring , and @xmath20 a test pair for @xmath1 .",
    "let @xmath36 be a system of generators for the a - module @xmath37 .",
    "if @xmath38 denote new variables , then @xmath39 , @xmath40 , defines an isomorphism of @xmath1-algebras @xmath41/{i_1 } \\stackrel{\\cong}{\\longrightarrow } \\frac{1}{p } ( pj:_a j),\\ ] ] where @xmath42 is the kernel of the map @xmath39 from @xmath43 \\rightarrow \\frac{1}{p } ( pj:_a j)$ ] .    see ( * ? ? ?",
    "* lemma 3.6.7 ) for the computational aspects of this lemma .",
    "[ exmp : x2-y3 ] let @xmath44 $ ] and @xmath45/i$ ] . we take the test pair @xmath20 , with @xmath46 ( the radical of the singular locus of @xmath1 ) and @xmath47",
    "( see algorithm [ algorithm : testpair ] ) .",
    "then @xmath48 and @xmath49/i_1 $ ] where @xmath50}$ ] .",
    "the isomorphism is given by @xmath51 .",
    "the following easy lemma gives a normalization criterion for ring extensions .",
    "it provides a convenient way to prove correctness of our normalization algorithm , or any modification , because it is independent of the intermediate steps .",
    "[ lem : abnorm ] let @xmath52 be a map between reduced noetherian rings satisfying the following conditions :    1 .",
    "@xmath53 is injective , 2 .",
    "@xmath53 is finite , 3 .",
    "[ item : ab]@xmath54 is contained in @xmath55",
    ".    then @xmath53 induces isomorphisms @xmath56 and @xmath57 .",
    "in particular , if @xmath54 is integrally closed , then @xmath58 is isomorphic to @xmath54 .    since @xmath59 is injective , so is @xmath60 and hence @xmath61 .",
    "the isomorphism @xmath56 is clear by [ item : ab ] .",
    "the finiteness of @xmath53 implies that @xmath54 ( and therefore @xmath62 ) is integral over @xmath1 . since @xmath63",
    ", we conclude that @xmath62 is the normalization of @xmath64 , which immediately implies the isomorphism @xmath57 .",
    "it has already been noticed by many authors ( see for example the comments preceding prop .",
    "6.65 of @xcite ) that the chain of rings mentioned in last section , or similar constructions where the number of variables and relations increase in each step , behaves poorly in practice .",
    "( see also remark [ rem : normalc ] . )",
    "there has been therefore a search for algorithms carrying out most of the computations in the original ring . in @xcite",
    ", the author proposes to use @xmath65 where @xmath66 is a hypersurface ring over which @xmath1 is finite and birational and @xmath67 is the annihilator of the @xmath66-module @xmath68 .",
    "however , as mentioned in that same paper , computing @xmath54 is still the hard part of the algorithm and there is no indication on how to do it .    in this section",
    "we show that a chain of ring as used in @xcite can be constructed doing most computations over the original ring . in this way we obtain an algorithm that is usually much faster in practice .",
    "the purpose of this section is not only to show that the computations over the original ring are possible . the proofs which we provide show",
    "also how these computations can be done and thus prepare the algorithms presented in the next section .",
    "we start with a generalization of the isomorphism from the previous section , expressing @xmath34 as an ideal quotient , to be used later .",
    "we formulate a more general version than needed . for a related statement",
    "see @xcite .",
    "[ lem : newlem ] let @xmath1 be a reduced ( not necessarily noetherian ) ring , @xmath6 its total ring of fractions , and @xmath69 two @xmath1-submodules of @xmath6 .",
    "assume that @xmath67 contains a non - zerodivisor @xmath0 on @xmath1 .    1 .",
    "the map @xmath70 is independent of the choice of @xmath0 and an isomorphism of @xmath1-modules .",
    "2 .   if @xmath71 then @xmath72    \\(1 ) let @xmath73 be another non - zerodivisor on @xmath1 . write @xmath74 and @xmath75 , with @xmath76 non - zerodivisors contained in @xmath1 and @xmath77 .",
    "then @xmath78 is a non - zerodivisor and @xmath79 with @xmath80 . since @xmath81 is @xmath1-linear , we can write @xmath82 whence @xmath83 in @xmath6 , showing that @xmath84 is independent of @xmath0 .    moreover , for any @xmath85 we have @xmath86 in particular @xmath87 .",
    "this shows that the image @xmath88 is in @xmath89 .",
    "it also shows that @xmath90 and hence that @xmath84 is injective .    to see that @xmath84 is surjective , let @xmath91 satisfy @xmath92 .",
    "denote by @xmath93 the multiplication by @xmath94 .",
    "then @xmath95 showing that @xmath84 is surjective .",
    "\\(2 ) during the proof of ( 1 )  we have seen that @xmath96 hence , the claimed equality holds if and only if @xmath97 for all @xmath81 , which is clearly true if @xmath71 .",
    "recall the chain of extension rings from last section @xmath98 we have seen that we can compute the normalization of @xmath1 by computing the normalization of @xmath99 ( lemma [ lem : abnorm ] ) .",
    "the next proposition explains how to obtain a test pair in @xmath99 from a given test pair in @xmath1 .",
    "this is the only computation to be carried out in @xmath99 .",
    "[ prop : testpair ] let @xmath1 be a reduced noetherian ring , @xmath100/i'$ ] a finite extension ring , with natural inclusion @xmath101 . if @xmath102 is a test pair for @xmath1 then setting @xmath103 , @xmath104 is a test pair for @xmath105 .",
    "let @xmath9 be the conductor of @xmath1 in @xmath6 and @xmath106 the conductor of @xmath105 in @xmath107 .",
    "we know that @xmath108 , @xmath109 and @xmath110 .",
    "therefore @xmath111 , which proves that @xmath112 since @xmath113 .",
    "we have @xmath14 by definition of @xmath13 , and hence @xmath114 .",
    "now @xmath115 is a non - zerodivisor on @xmath105 and @xmath116 is a test pair for @xmath105 .",
    "[ exmp : j1 ] recall example [ exmp : x2-y3 ] .",
    "we started with @xmath117/\\langle x^2 - y^3 \\rangle$ ] and test pair @xmath118 and obtained @xmath119/i_1 \\cong 1/d_1 \\cdot u_1 $ ] where @xmath120 , @xmath121 and @xmath122 .",
    "we now compute @xmath123 ( since @xmath124 and @xmath125 in @xmath25 ) .",
    "therefore @xmath126 is a test pair for @xmath25 .    for the remainder of this section , let @xmath127 be a noetherian ring , @xmath128 a radical ideal and @xmath129 .",
    "we are mainly interested in @xmath130 $ ] with @xmath23 a field ( which the reader may assume in the following ) , or @xmath131_>$ ] with @xmath132 an arbitrary monomial ordering .",
    "however the proposed method works quite generally , whenever a test pair is known .    in the new algorithm , we will compute ideals @xmath133 of @xmath1 and non - zerodivisors @xmath134 , on @xmath1 such that @xmath135 from the construction we know that @xmath136 is a finitely generated @xmath127-algebra and hence there is a surjection @xmath137\\twoheadrightarrow \\frac{1}{d_i}u_i,\\;\\;t_j\\mapsto u_j,\\ ] ] where @xmath138 is a set of @xmath127-module generators of @xmath139 . if @xmath29 denotes the kernel of this map",
    ", we get a ring map @xmath140    ( note that the definition of @xmath29 is now slightly different from the one given in [ lem : aalgisom ] . )",
    "[ exmp : phij1 ] carrying on with example [ exmp : j1 ] , we compute @xmath141 .",
    "note that @xmath142 .",
    "however the @xmath1-module @xmath143 .",
    "for example , we have seen that @xmath144 and clearly @xmath145 , but @xmath146 .",
    "this shows that in order to obtain @xmath1-module generators of @xmath147 it is not enough to compute the images of the generators of @xmath148 . in algorithm",
    "[ algorithm : hi ] we will show how to compute the generators .",
    "in this example , it turns out that @xmath149 as @xmath1-module .",
    "once we have computed a test pair @xmath150 in @xmath99 , the next step is to compute the quotient @xmath151 .",
    "the following theorem shows that this computation can be carried out in the original ring @xmath1 .",
    "[ thm : jihi ]",
    "let @xmath152 , @xmath100/i'$ ] a finite ring extension and maps @xmath101 , @xmath153 .",
    "let @xmath20 be a test pair for @xmath1 and @xmath154 a test pair for @xmath105 , with @xmath155 .",
    "let @xmath156 be ideals of @xmath1 and @xmath157 such that @xmath158 and @xmath159 .",
    "then @xmath160    the proof is an easy consequence of lemma [ lem : newlem ] . omitting @xmath161 and @xmath53 in the following notations and applying lemma [ lem : newlem ] to @xmath162",
    "we get @xmath163 since @xmath164 and @xmath165 .    on the other hand",
    ", we can apply lemma [ lem : newlem ] to @xmath166 and get   +     using theorem [ thm : jihi ] together with the previous results , once we have computed an intermediate ring @xmath99 , we can compute @xmath167 , the next ring in the chain . if @xmath168 , we have finished and @xmath99 is the normalization of the original ring @xmath1 , by lemma [ lem : abnorm ] . if not , we proceed by induction to compute the normalization .",
    "we continue with the above example .",
    "[ exmp : finish ] we have @xmath169 and @xmath170 .",
    "we compute @xmath171 .",
    "then @xmath172 this is equal to @xmath25 .",
    "therefore , the ring @xmath25 was already normal , and hence equal to the normalization of @xmath1 .",
    "[ modification : prime ] we have seen that the only computation performed in @xmath99 is the radical of @xmath173 .",
    "however , when the characteristic of the base field is @xmath174 it is possible to compute also this radical over the original ring . for this",
    ", we use the frobenius map , as described in @xcite .",
    "let @xmath175 . by definition , @xmath176 mapping to @xmath6 , we obtain @xmath177 where @xmath178 .",
    "then @xmath179    now @xmath180 is an ideal of @xmath1 and @xmath181 is the so - called @xmath94-th root of @xmath180 .",
    "this ideal can be computed over @xmath1 using the frobenius map ( cf .",
    "@xcite ) .    by iteratively computing the @xmath94-th root of the output ,",
    "until no new polynomials are added , we obtain @xmath147 as desired .",
    "computing the radical in this way , we get another algorithm ( in positive characteristic ) which is similar to the one proposed in @xcite . in their algorithm",
    "they start with the inclusion @xmath182 , where @xmath183 is an element of the conductor and compute a decreasing chain of @xmath1-modules @xmath184    in our algorithm we compute an increasing chain @xmath185    the most difficult computational task for both algorithms is the frobenius map",
    ". however , in our algorithm we start with a small denominator @xmath186 and therefore the computations might be in some cases easier .",
    "this modification has not yet been tested .",
    "we describe the algorithm in general terms . since we compute an increasing sequence of subrings of the integral closure the algorithm terminates , for a noetherian ring @xmath1 , if and only if @xmath5 is a finitely generated @xmath1-module . by lemma [ lem : fingenmod ]",
    "this is equivalent to the existence of a test pair .",
    "we now deal with the problem of constructing an initial test pair .",
    "[ lem : jacobperf ] let @xmath23 be a perfect field , and @xmath187/i$ ] with @xmath188 a reduced equidimensional ring of dimension @xmath189 .",
    "let @xmath190 be the jacobian ideal of @xmath67 , that is , the ideal in @xmath1 generated by the images of the @xmath191-minors of the jacobian matrix @xmath192 .",
    "then @xmath190 is contained in the conductor of @xmath1 and contains a non - zerodivisor on @xmath1 .",
    "let @xmath193 with @xmath194 the minimal associated primes of @xmath67 .",
    "since @xmath1 is equidimensional , @xmath195height@xmath196 for @xmath197 .",
    "hence , the image of @xmath190 in @xmath198/p_i$ ] is contained in the jacobian ideal @xmath199 of @xmath200 . by the lipman - sathaye theorem ( cf .",
    "@xcite and ( * ? ? ?",
    "* remark 1.5 ) ) @xmath199 and hence @xmath190 is contained in the conductor of @xmath99 . since @xmath201",
    ", @xmath190 is then also in the conductor of @xmath1 .",
    "moreover , the image of @xmath190 in @xmath99 is not zero since @xmath99 is reduced .",
    "this follows from the jacobian criterion and by serre s condition for reducedness ( cf .",
    "* section 5.7 ) ) . as a consequence ,",
    "@xmath190 is not contained in the union of the minimal associated primes of @xmath1 and hence contains a non - zerodivisor on @xmath1 .",
    "note that both , the lipman - sathaye theorem and the jacobian criterion , require @xmath23 to be perfect .",
    "the ideal @xmath202 from last lemma can be used as an initial test ideal . to construct a test pair",
    ", we need to find in addition a non - zerodivisor of @xmath1 in @xmath13 .",
    "an element @xmath203 is a non - zerodivisor if and only if @xmath204 , hence the non - zerodivisor test is effective .",
    "however , it is not sufficient to apply the test to the generators of @xmath13 .",
    "( e.g. , if @xmath205 , the polynomials @xmath206 generate @xmath13 and are zerodivisors on @xmath1 , but @xmath207 is not . ) since we can not test all elements of @xmath13 there seems to be a problem to find a test pair if @xmath67 is not prime .",
    "we address this problem as well as the perfectness and the equidimensionality assumptions in remark [ rem : knotperf ] .",
    "we first describe in algorithm [ algorithm : testpair ] how to compute the initial test pair @xmath20 in @xmath1 , assuming that we are able to find a non - zerodivisor .",
    "[ rem : knotperfmain ] only for this step we need the assumption that @xmath208_>$ ] with @xmath23 perfect and that @xmath67 is equidimensional .",
    "all further steps do not require this assumption .",
    "+ if , by whatever means , an initial test pair @xmath20 for @xmath1 is known , we can start with the computation of @xmath209 and then all further steps are correct , and the loop terminates with the computation of @xmath5 .",
    "hence , for any reduced ring @xmath210 with given test pair @xmath20 , the algorithm is effective when grbner bases , ideal quotients , and radicals can be computed in rings of the form @xmath211 $ ] .",
    "@xmath212 , an equidimensional radical ideal , with @xmath208_>$ ] and @xmath23 a perfect field .",
    "@xmath20 a test pair for @xmath213 .",
    "@xmath214 @xmath215 the jacobian ideal of @xmath67 , i.e. , the ideal in @xmath127 generated by the @xmath191-minors of the jacobian matrix of @xmath67 @xmath216 the image of @xmath217 in @xmath1 @xmath218 [ step : nzd]choose @xmath219 such that @xmath0 is a non - zerodivisor on @xmath1 @xmath20    we now explain how to perform some auxiliary tasks , that will be needed in the main algorithm .",
    "we have seen in the previous section that if @xmath152 and @xmath220/i'$ ] a finite extension ring with @xmath221 , then there exist a non - zerodivisor @xmath157 , an ideal @xmath222 and a map @xmath223 such that @xmath224 . for computations , we need to know how to move from one representation to the other .",
    "[ rem : compphi ] if we know @xmath225 and generators @xmath226 of @xmath227 , we can explicitly compute @xmath228 for any @xmath229 .",
    "let @xmath230 be a representative , and substitute all the variables @xmath231 in @xmath232 by the corresponding fraction @xmath233 .",
    "this results in an element @xmath234 for some @xmath235 and @xmath236 .",
    "now we need to find @xmath237 such that @xmath238 in @xmath6 , which is equivalent to @xmath239 in @xmath127 , with @xmath240 .",
    "we can find @xmath241 by solving the ( extended ) ideal membership problem @xmath242 in @xmath127 , e.g.  by using the singular  command ` lift ` , cf .",
    "* example 1.8.2 ) .",
    "we will need also to compute @xmath1-module generators of ideals @xmath243 given by generators in @xmath105 .",
    "it is clear that for any such @xmath244 there exist an ideal @xmath245 such that @xmath246 .",
    "so the problem is equivalent to finding elements @xmath247 in @xmath1 that generate @xmath248 as an @xmath1-ideal . in algorithm [",
    "algorithm : hi ] we explain how do it .",
    "@xmath152 , with @xmath130 $ ] and @xmath128 ideal ; @xmath249 a ring extension of @xmath1 , with @xmath250 $ ] and @xmath251 an ideal ; @xmath252 a non - zerodivisor and @xmath253 such that @xmath254 , with map @xmath255 ; @xmath256 , an ideal of @xmath105 .",
    "@xmath257 such that @xmath246 compute @xmath258 such that @xmath259 ( cf .",
    "remark [ rem : compphi ] ) set @xmath260 compute @xmath261 such that @xmath262 in @xmath6 ( again by remark [ rem : compphi ] ) @xmath263    [ lem : uh ] let @xmath152 , with @xmath130 $ ] and @xmath128 ideal ; @xmath249 a ring extension of @xmath1 , with @xmath250 $ ] and @xmath251 an ideal ; @xmath252 a non - zerodivisor and @xmath253 such that @xmath254 , with map @xmath255 ; @xmath256 , an ideal of @xmath105 .",
    "the output ideal @xmath257 of algorithm [ algorithm : hi ] satisfies @xmath264 .",
    "this follows since the @xmath1-module @xmath265 and the @xmath105-module @xmath266 ( @xmath267 as in the algorithm ) .",
    "therefore the products @xmath268 , @xmath269 , generate @xmath270 as @xmath1-module .",
    "hence @xmath271 generates @xmath248 as @xmath1-module , or equivalently as @xmath1-ideal .",
    "[ exmp : generators ] we apply the algorithm to compute the @xmath1-module generators of @xmath272 from example [ exmp : phij1 ] .",
    "recall that @xmath273 , @xmath122 and @xmath274 .",
    "we start with @xmath275 and @xmath276 . in the first step ,",
    "we compute @xmath277 , therefore @xmath278 .",
    "since @xmath279 , we do not do anything .",
    "in the second step we compute @xmath280 , therefore @xmath281 . since @xmath282 , we add it to @xmath66 .",
    "we finish with @xmath283 , as mentioned in example [ exmp : phij1 ] .",
    "we are now ready to present in algorithm [ algorithm : normalization ] the main algorithm to compute the normalization .",
    "termination follows from lemma [ lem : fingenmod ] and the discussion after definition [ defn : teststuff ] , correctness follows from lemma [ lem : abnorm ] .",
    "@xmath212 , an equidimensional radical ideal generators of an ideal @xmath284 , and @xmath285 such that @xmath286 , with @xmath213 .",
    "compute @xmath20 , an initial test ideal [ step : u1]@xmath287 @xmath288 @xmath289 @xmath290 write @xmath291 set @xmath292 $ ] , @xmath293 the map @xmath294 @xmath295 ( cf",
    ". lemma [ lem : aalgisom ] ) set @xmath296 @xmath297 , with @xmath30 compute @xmath298 such that @xmath299 , with @xmath300 ( cf .",
    "lemma [ lem : uh ] ) compute generators of @xmath301 @xmath302 @xmath303 @xmath304    [ rem : knotperf ] let us comment on some variations and generalizations of algorithm [ algorithm : normalization ] . for this",
    "let @xmath23 be _ any _ field , @xmath208_>,$ ] and @xmath212 a radical ideal .",
    "+ ( 1 ) if @xmath67 is not ( or not known to be ) equidimensional we can start with an algorithm to compute the minimal associated primes ( cf .",
    "* algorithm 4.3.4 , algorithm 4.4.3 ) ) or the equidimensional parts ( cf .",
    "* algorithm 4.4.9 ) ) of @xmath67 , where the latter is often faster .",
    "the corresponding ideals @xmath305 are equidimensional and we have @xmath306 . hence the problem is reduced to the case of @xmath67 being prime or equidimensional .",
    "+ ( 2 ) now let @xmath67 be equidimensional and @xmath190 the jacobian ideal .",
    "since regular rings are normal , it follows from the jacobian criterion that @xmath307 .",
    "let us assume that @xmath308 and choose @xmath309 . + a ) if @xmath310 then @xmath0 is a non - zerodivisor on @xmath1 and @xmath311 is a test ideal .",
    "this is always the case if @xmath67 is prime .",
    "+ b ) if @xmath312 we compute @xmath313 and obtain a splitting @xmath314 ( cf .",
    "* lemma 1.8.14(3 ) ) ) and @xmath315 .",
    "hence we can continue with the ideals @xmath42 and @xmath316 separately which have both fewer minimal associated primes than @xmath67 .",
    "consequently , after finitely many splittings , the corresponding ideal is prime or we have found a non - zerodivisor .",
    "this provides us with test ideals as in case a ) .",
    "+ ( 3 ) the above arguments show that ( even if @xmath23 is not perfect ) algorithm [ algorithm : normalization ] works for prime ideals if and only if the jacobian ideal @xmath190 is not zero .",
    "this is always the case for @xmath23 perfect .",
    "however , if @xmath23 is not perfect , @xmath317 may occur .",
    "for example , consider @xmath318 with @xmath94 a prime number , and @xmath319 $ ] . for a method to compute a non - zero element in the conductor of @xmath320 if @xmath67 is prime and if @xmath321 is separable over @xmath23 , see ( * ? ? ?",
    "* exercise 12.12 ) .      as an application of the normalization algorithm",
    "we show how to compute the @xmath2-invariant of @xmath322_>/i$ ] , a reduced noetherian @xmath23-algebra , @xmath323 @xmath324 may be infinite but it is finite if the algebraic variety @xmath325 defined by @xmath67 has isolated non - normal points , e.g.  for reduced curves , i.e.  @xmath326 . in this case",
    ", @xmath2 is important as it is the difference between the arithmetic and the geometric genus of a curve .",
    "moreover , the @xmath2-invariant is one of the most important numerical invariants for curve singularities ( cf .",
    "@xcite ) , that is , for 1-dimensional complete local rings @xmath1 . the extension of our algorithm to non - global orderings in section [ section : extension ] has the immediate consequence that it allows to compute @xmath2 for affine rings as well as for local rings of singularities , noting that @xmath327_>/i)=\\delta(k[[x_1,x_2,\\ldots , x_n]]/i)$ ] if @xmath132 is a local ordering .",
    "[ lem : delta ] let @xmath127 be a reduced noetherian ring , @xmath128 be a radical ideal , and @xmath328 its prime decomposition .",
    "write @xmath329 , where @xmath330 and @xmath331 is a partition of @xmath332 .",
    "let @xmath139 , @xmath333 be the output of the normalization algorithm for @xmath334",
    ". then    1 .",
    "@xmath335 , 2 .",
    "[ item : deltari ] @xmath336 where @xmath337 .    in particular @xmath338 iff",
    "every summand on the right hand side of ( [ item : deltari ] )  is finite .",
    "this follows by induction on @xmath339 , and by repeatedly applying the following sequence of inclusions for @xmath340 , i.e. @xmath341 , @xmath342 and the exact sequence @xmath343    note that @xmath344 can be computed from a standard basis of @xmath345 and @xmath346 from a standard basis of a presentation matrix of @xmath347 via ` modulo ` ( cf .",
    "* singular  example 2.1.26 ) ) .",
    "an algorithm to compute @xmath2 is also implemented in singular  @xcite .",
    "12cm|r|r!width 1ptx|r!width 1ptr|r|r| & & & + & & non - zerodivisor & steps & ` normal ` & ` normalp ` & ` normalc ` + 1 & 0 & @xmath348 & 7 & 0 & - & 72 + 1 & 2 & @xmath348 & 7 & 0 & 0 & 0 + 1 & 5 & @xmath348 & 7 & 1 & 73 & 0 + 1 & 11 & @xmath349 & 7 & 1 & 12 & @xmath350 + 1 & 32003 & @xmath348 & 7 & 0 & @xmath350 & 1 + 2 & 0 & @xmath348 & 7 & 1 & - & @xmath350 + 2 & 3 & @xmath348 & 8 & 0 & 0 & 3 + 2 & 13 & @xmath348 & 7 & 0 & @xmath350 & 10 + 2 & 32003 & @xmath348 & 7 & 0 & @xmath350 & 10 + 3 & 0 & @xmath348 & 6 & 2 & - & @xmath350 + 3 & 2 & @xmath348 & 13 & 1 & 0 & @xmath350 + 3 & 5 & @xmath348 & 6 & 1 & 7 & @xmath350 + 3 & 11 & @xmath351 & 6 & 1 & @xmath350 & @xmath350 + 3 & 32003 & @xmath348 & 6 & 1 & @xmath350 & @xmath350 + 4 & 0 & @xmath352 & 1 & 0 & - & 0 + 4 & 5 & @xmath353 & 1 & 0 & 3 & 0 + 4 & 11 & @xmath354 & 1 & 0 & @xmath350 & 0 + 4 & 32003 & @xmath355 & 1 & 0 & @xmath350 & 0 + 5 & 0 & @xmath348 & 1 & 0 & - & @xmath356 + 5 & 5 & @xmath357 & 3 & 1 & @xmath350 & @xmath350 + 5 & 11 & @xmath348 & 1 & 0 & @xmath356 & 0 + 5 & 32003 & @xmath348 & 1 & 1 & @xmath350 & 0 + 6 & 2 & @xmath358 & 2 & 6 & 24 & 172 + 7 & 0 & @xmath348 & 6 & 12 & - & @xmath359 + 7 & 2 & @xmath348 & 6 & 11 & 0 & @xmath360 + 7 & 5 & @xmath348 & 6 & 12 & @xmath361 & @xmath362 + 7 & 11 & @xmath348 & 6 & 11 & @xmath363 & @xmath364 + 7 & 32003 & @xmath348 & 6 & 11 & @xmath350 & @xmath365 +    in table [ table : timings ] we see a comparison of the implementations in singular  of the new algorithm ` normal ` and other existing algorithms .",
    "` normalc ` is an implementation based on the algorithm @xcite ( see also ( * ? ? ?",
    "* section 3.6 ) ) and ` normalp ` is an implementation of the algorithm of @xcite , @xcite for positive characteristic .",
    "all these implementations are now available in the singular  library ` normal.lib ` @xcite .",
    "computations were performed on a compute server running a 1.60ghz dual amd opteron 242 with 8 gb ram .",
    "+ @xmath350 indicates that the algorithm had not finished after 20 minutes , + - indicates that the algorithm is not applicable ( i.e. , using ` normalp ` in characteristic 0 ) .",
    "we try several examples over the fields @xmath366 and @xmath367 , when the ideal is prime in the corresponding ring .",
    "we see that the new algorithm is extremely fast compared to the other algorithms .",
    "only the algorithm ` normalp ` is sometimes faster for very small characteristic .    in columns 3 and 4",
    "we give additional information on how the new algorithm works .",
    "the column `` non - zerodivisor '' indicates which non - zerodivisor is chosen .",
    "the column `` steps '' indicates how many loop steps are needed to compute the normalization .",
    "we see that our new algorithm performs well compared to the classic algorithm especially when the number of steps needed is large .",
    "we use the following examples :    * @xmath368 $ ] , * @xmath369 $ ] , * @xmath370 $ ] , * @xmath371 $ ] , * @xmath372 $ ] , * @xmath373 $ ] . *",
    "@xmath374 $ ] .",
    "[ rem : normalc ] as mentioned before , the main drawback of the algorithm @xcite is the increasing complexity of the new rings that are constructed .",
    "a direct implementation of the algorithm turns out to be so slow that it does not even finish for most of the examples analyzed in this paper ( after 1 hour ) .",
    "for example , in the second example ( @xmath316 ) over @xmath375 , the fifth ring constructed in the chain has 12 variables and 76 generators for the ideal of relations .",
    "the sixth ring could not be computed using this direct approach .",
    "a partial solution to this problem , used in implementations , is to eliminate as far as possible redundant variables , that is , variables than can be expressed in term of the others through the relations in the ring .",
    "this is what is done in ` normalc ` , and it is sometimes a good improvement .",
    "however detecting the redundant variables becomes more and more difficult as the relations get more and more complex , adding a new expensive task to the computation , that does not always succeeds in detecting all the relations .",
    "the algorithm proposed in this paper avoids this problem in a natural way .",
    "we have also compared our implementation with the normalization procedures in macaulay2 ( they use the algorithms @xcite and @xcite ) and in magma ( they say that they use @xcite for the general case ; however it seems to work only in characteristic 0 and the code is not accessible ) .",
    "our new algorithm is always faster and succeeds where the other implementations do not finish .",
    "we do not know implementations in other computer algebra systems .",
    "in this section , let @xmath132 be any monomial ordering on the set @xmath376 of monomials in @xmath377 .",
    "that is , @xmath132 is a total ordering which satisfies @xmath378 but we do not require that @xmath132 is a well ordering .",
    "the main reference for this section is @xcite where the theory of standard basis for such monomial orderings was developed .",
    "we consider the multiplicatively closed set @xmath379 \\smallsetminus \\{0\\ } \\mid \\operatorname{lm}(u ) = 1\\},\\ ] ] where @xmath380 denotes the leading monomial .",
    "the localization of @xmath381 $ ] w.r.t .",
    "@xmath382 is denoted as @xmath383_>:= s_>^{-1}k[x ] = \\left\\{\\frac{f}{u } \\:\\:\\bigg|\\:\\ : f , u \\in k[x ] , \\operatorname{lm}(u ) = 1\\right\\}.\\ ] ] it is shown in ( * ? ? ?",
    "* section 1.5 ) that @xmath381_>$ ] is a regular noetherian ring satisfying @xmath383 \\subset k[x ] _ > \\subset k[x]_{\\langle x \\rangle},\\ ] ] where @xmath381_{\\langle x \\rangle}$ ] denotes the localization of @xmath381 $ ] w.r.t .  the maximal ideal @xmath384 .",
    "note that      in applications , in particular in connection with elimination in local rings , we need also _ mixed _ orderings , where some of the variables are greater than and others smaller than @xmath4 .",
    "an important case is the product ordering @xmath388 on @xmath389 where @xmath390 is global on @xmath391 and @xmath392 is arbitrary on @xmath393 .",
    "then @xmath394 _",
    "> = ( k[y]_{>_2})[x ] = k[y]_{>_2 } \\otimes_k k[x],\\ ] ] ( cf .",
    "* examples 1.5.3 ) ) , which will be used in the extension of our algorithm to non - global orderings .",
    "we now show that for any monomial ordering @xmath132 and any radical ideal @xmath395_>$ ] , the normalization of the ring @xmath381_>/i$ ] is a finitely generated @xmath381_>/i$]-module and how to extend algorithm [ algorithm : normalization ] from section [ section : algorithm ] to this general situation .    for any ideal @xmath395_>$ ] we have @xmath396_>$ ] , with @xmath397 $ ] .",
    "let @xmath398/i')_>$ ] ( resp .",
    "@xmath399/i'})_>$ ] ) denote the localization w.r.t .",
    "the image of @xmath382 in @xmath381/i'$ ] ( resp .  in @xmath400/i'}$ ] ) .",
    "we have @xmath381_>/i \\cong ( k[x]/i')_>$ ] .",
    "[ lem : fingen ] with the above notations , we have an isomorphism @xmath401_>/i } \\cong ( \\overline{k[x]/i'})_>\\ ] ] of @xmath381_>$]-algebras .",
    "in particular , @xmath400_>/i}$ ] is a finitely generated @xmath381_>/i$]-module",
    ".    moreover , let @xmath400/i ' } \\cong k[x , t]/h$ ] as @xmath381$]-algebras with new variables @xmath402 and @xmath248 an ideal in @xmath403 $ ]",
    ". then @xmath401_>/i}\\:\\:\\cong\\:\\:(k[x]_>)[t]\\:/\\:h(k[x]_>)[t].\\ ] ]    the first statement follows immediately from the well - known fact that localization commutes with normalization .",
    "since @xmath400/i'}$ ] is module - finite over @xmath381/i'$ ] the same holds for the localization @xmath399/i'})_>$ ] over @xmath398/i')_>$ ] .",
    "the last statement follows since the image of @xmath382 in @xmath404 $ ] localizes @xmath403 $ ] only w.r.t .  the @xmath405 variables .",
    "the first method is to compute a test ideal @xmath13 and @xmath410_>/i}(j , j)$ ] in the same manner as described in the previous sections , just w.r.t .",
    "the ordering @xmath132 , i.e. in @xmath381_>$ ] . when adding new variables @xmath411 ( corresponding to @xmath381_>$]-module generators of @xmath410_>/i}(j , j)$ ] ) we define on @xmath412 $ ] a block ordering @xmath413 with @xmath390 a global ordering on the ( first ) @xmath414-block ( i.e. @xmath415 for all @xmath416 and @xmath417 for all @xmath418 ) and @xmath132 the given ordering on the ( second ) @xmath405-block",
    ". then we continue with this new ring and monomial ordering .",
    "the second method is to compute the normalization of @xmath381/i'$ ] as in the previous section , with all variables greater than @xmath4 .",
    "then we map the result to @xmath412_{>_1 , > } $ ] with block ordering @xmath413 as for the first method . by lemma [ lem : fingen ]",
    "both methods give the same result , hence the second algorithm is also correct .    if we start with an equidimensional decomposition @xmath420 , then of course we only need to compute the normalization for those ideals @xmath29 for which a standard basis of @xmath29 w.r.t",
    ".  the ordering @xmath132 does not contain @xmath4 .    to see the difference between both methods , let @xmath421_>,\\ ] ] with @xmath132 a local ordering ( i.e. @xmath422 _ > \\cong k[x , y]_{\\langle x , y \\rangle}$ ] ) .",
    "let @xmath423 $ ] . in figure",
    "[ fig : curve ] we can see the real part of the curve @xmath424 .",
    "this curve has two singularities , at the points @xmath425 and @xmath426 .",
    "we carry out the first method , setting @xmath152 .",
    "the singular locus of @xmath67 is @xmath427 , which is radical .",
    "this is the first test ideal .",
    "we take as non - zerodivisor @xmath428 and compute the quotient @xmath429 since @xmath430 we go on .",
    "the ring structure of @xmath431 is @xmath432_{>_1 , > } / i_1 $ ] , with block ordering @xmath413 ( @xmath390 any ordering ) and @xmath433 .",
    "mapping @xmath435 to @xmath6 using @xmath436 as denominator , we get @xmath437 , with @xmath438 .",
    "( the image of @xmath439 in @xmath6 is @xmath440 , which is already in @xmath441 . )",
    "we compute the quotient @xmath442 we see that @xmath443 .",
    "this means that @xmath25 was already normal and isomorphic to the normalization of @xmath1 , which is therefore @xmath444 .",
    "+ let us now apply the second method .",
    "we set @xmath445 $ ] and @xmath446 .",
    "the singular locus of @xmath408 is @xmath447 , which is radical .",
    "@xmath13 serves as first test ideal . as non - zerodivisor",
    "we choose @xmath428 and compute the quotient @xmath448 as @xmath430 , we continue .",
    "we compute @xmath449 , the ring structure of @xmath431 , @xmath450/\\langle tx^2+tx - y , -ty+x^3 + 3x^2 + 2x , t^2-x-2 , x^5 + 4x^4 + 5x^3 + 2x^2-y^2 \\rangle,$ ] and @xmath451 .",
    "mapping @xmath435 to @xmath107 using @xmath436 as denominator , we obtain @xmath437 , with @xmath452 .",
    "we compute the quotient @xmath453 now we have @xmath443 , and thus @xmath449 was already normal and isomorphic to the normalization of @xmath105",
    ". therefore , the normalization @xmath5 equals @xmath454 , as before .    in the previous example , using the first method yields simpler test ideals and quotients . however , our experience is that in general , computations with non - global orderings are often slower than computations with global orderings , and therefore the second method should be preferred at least if the input ideal is prime . on the other hand",
    "the computation should be faster with the first method if the ideal , or its jacobian ideal , has complicated components which vanish in the localization .",
    "* acknowledgements .",
    "* this work was done while the second author was visiting the university of kaiserslautern in february 2009 ; he is very grateful to the singular  team for their kind hospitality .",
    "we also like to thank the referees for their comments which helped to improve the presentation of the results .",
    "decker , w. , de  jong , t. , greuel , g .-",
    "m . , pfister , g. , 1999 .",
    "the normalization : a new algorithm , implementation and comparisons . in : computational methods for representations of groups and algebras ( essen , 1997 ) .",
    "173 of progr .",
    "birkhuser , basel , pp .",
    "177185 .",
    "gianni , p. , trager , b. , 1997 .",
    "integral closure of noetherian rings . in",
    ": proceedings of the 1997 international symposium on symbolic and algebraic computation ( kihei , hi ) .",
    "acm , new york , pp . 212216 ( electronic ) .",
    "greuel , g .-",
    "m . , pfister , g. , 2008 . a singular introduction to commutative algebra , extended edition .",
    "springer , berlin , with contributions by olaf bachmann , christoph lossen and hans schnemann , with 1 cd - rom ( windows , macintosh and unix ) .",
    "traverso , c. , 1986 .",
    "a study on algebraic algorithms : the normalization .",
    "rend . sem .",
    "torino  ( special issue ) , 111130 ( 1987 ) , conference on algebraic varieties of small dimension ( turin , 1985 ) .",
    "vasconcelos , w.  v. , 1998 .",
    "computational methods in commutative algebra and algebraic geometry .",
    "vol .  2 of algorithms and computation in mathematics .",
    "springer - verlag , berlin , with chapters by david eisenbud , daniel r. grayson , jrgen herzog and michael stillman ."
  ],
  "abstract_text": [
    "<S> we present a new algorithm to compute the integral closure of a reduced noetherian ring in its total ring of fractions . a modification , applicable in positive characteristic , where actually all computations are over the original ring , is also described . </S>",
    "<S> the new algorithm of this paper has been implemented in singular , for localizations of affine rings with respect to arbitrary monomial orderings . </S>",
    "<S> benchmark tests show that it is in general much faster than any other implementation of normalization algorithms known to us . </S>"
  ]
}
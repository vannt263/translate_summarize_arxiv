{
  "article_text": [
    "the algorithm for identifying bridges in a network is based on depth - first search ( dfs ) , which has linear time complexity @xcite . randomly choosing a node from the network , we start dfs and track two indices for each node @xmath56 : its dfs visited time stamp ( dfs[@xmath56 ] ) and the lowest dfs reachable ancestor ( low[@xmath56 ] ) . @xmath58 $ ]",
    "is defined as the number of other visited nodes till the current one in dfs . and",
    "@xmath59 $ ] represents the lowest @xmath60 $ ] of an previously visited node @xmath61 that can be reached again by current node @xmath56 in the later dfs .",
    "note that , for two successively visited nodes @xmath56 and @xmath61 in the dfs , the index low[@xmath56 ] is updated by min(low[@xmath56 ] , low[@xmath61 ] ) after @xmath61 is visited .",
    "note that @xmath59 $ ] marks the node s topological position in the network . for two nodes @xmath56 and @xmath61 in the same biconnected component ( bcc ) , low[@xmath56]=low[@xmath61 ] . for nodes in tree structure ,",
    "low[@xmath56]=dfs[@xmath56 ] , which is different for each node .",
    "a bridge between two nearest neighboring nodes ( @xmath56 and @xmath61 ) is identified whenever the later visited node , say node @xmath56 , has larger low[@xmath56 ] than that of the previously visited node @xmath61 .    to calculate the size ( @xmath63 ) of the subgraph that will be cut from the network due to the removal of a bridge",
    ", we can simply use current time step ( @xmath64 ) , i.e. , the number of visited nodes , to subtract the dfs visited time stamp of the end of the bridge ( which is inside the bcc ) , and plus one .",
    "for instance , in fig .",
    "[ fig:0](c ) , @xmath65 + 1=6 - 3 + 1=4 $ ] .",
    "naturally each bridge has two components to be cut from the network .",
    "and we define bridgeness to be the smaller size of the two components . thus , to calculate the bridgeness",
    ", we need to go through the giant connected component ( gcc ) again , and @xmath8is calculated as @xmath66 , where @xmath67 represents the size of the whole connected component , see fig . [",
    "fig:0](e ) .",
    "* using depth - first search to identify bridges and calculate bridgeness . *",
    "the labels in nodes and arrows on edges represent the sequence of dfs , red edges are bridges , and for each node its two indices are presented as a coordinate ( dfs[i ] , low[i ] ) .",
    "( * a * ) initial state of indices .",
    "( * b * ) the moment when dfs just finishes visiting all the nodes in the connected component .",
    "the size @xmath67 of this connected component is given by the current time step @xmath64 .",
    "( * c - e * ) updates of indices when the search goes back .",
    "( * f * ) checking through all nodes in the component and let bridgeness be the size of the smaller part separated from that component.,scaledwidth=48.0% ]    to summarize , we first conduct dfs in each connected component of a graph to identify bridges with one of the separating parts ( @xmath63 ) after their removal and get the size of each connected component .",
    "then we go through the gcc again to get the bridgeness ( @xmath8 ) of each @xmath14-edge .",
    "the notion of bridgeness has been introduced in the literature with various different definitions . but none of them is based on the notion of bridges . some of them are actually node - based .      in @xcite ,",
    "the bridgeness of an edge is defined to be a local index quantifying the edge importance in maintaining the network connectivity : @xmath68 where @xmath69 and @xmath70 are the two endpoints of the edge @xmath71 and @xmath72 , @xmath73 , @xmath74 are the clique sizes of nodes @xmath69 , @xmath70 and the edge @xmath71 , respectively . a clique of size @xmath5 is a fully connected subgraph with @xmath5 nodes @xcite and the clique size of a node @xmath69 or an edge @xmath71 is defined as the size of maximum clique that contains this node or edge @xcite .",
    "[ fig:0.5 ] for a small example .",
    "* an example for the local bridgeness . * in this example , @xmath75 , @xmath76 , @xmath77 and @xmath78.,scaledwidth=48.0% ]      a node - based bridgeness , called bridgeness centrality ( bri ) , is derived from the node s betweenness centrality ( bc ) @xcite .",
    "consider the betweenness centrality of a node @xmath61 @xcite : @xmath79 where @xmath56 , @xmath61 , @xmath5 are nodes ; @xmath80 represents the number of shortest paths between @xmath56 and @xmath5 while @xmath81 is the number of such paths running through @xmath61 .",
    "the bridgeness centrality of node @xmath61 is defined as the non - local part of its betweenness centrality : @xmath82 where @xmath83 are neighbor nodes of @xmath61 .",
    "examples are shown in fig .",
    "[ fig:0.6 ] .",
    "* betweenness centrality and bridgeness centrality .",
    "* the sizes of nodes are proportional to their degrees and colored nodes are articulation points , where the green one is the global center and red ones are local centers . numbers in nodes are their bc or bri measures .",
    "( * a * ) betweenness centrality in a graph .",
    "( * b * ) bridgeness centrality in the same graph .",
    "betweenness can not differentiate the global center ( the green node ) from aps ( red nodes ) , as it gives slighter higher score to high - degree nodes , which are local centers .",
    "in contrast , bridgeness centrality effectively scores the node that plays an important role in global connectivity ( the green node).,scaledwidth=48.0% ]      nodal bridgeness can also be defined as a generalization of articulation point to solve the community detection problem .",
    "the number of communities @xmath84 in a graph can either be given in advance or by some community detection algorithm @xcite and the partition of nodes is represented by the partition matrix @xmath85 $ ] , where @xmath86 measures the relationship between the node @xmath87 and community @xmath56 , which is determined by the complicated partition based on vertex similarities @xcite .",
    "this nodal bridgeness measures the extent , to which a given node is shared among different communities @xcite .",
    "if a node belongs only to one community , it has zero bridgeness while a node shared by all communities has bridgeness one .",
    "this bridgeness is defined on a vertex @xmath88 as the distance of its membership vector @xmath89 $ ] from the reference vector @xmath90 $ ] in the euclidean vector norm , inverted and normalized to @xmath91 $ ] as @xcite : @xmath92",
    "in this section , we derive the equations in analytically calculating the first and second moments of the bridgeness distribution , as well as the relative size of gcc and bcc , for uncorrelated random graphs with prescribed degree distributions .    according to the definitions of @xmath93 , @xmath94^{k-1}$ ] , @xmath95 and the self - consistency equation @xmath96",
    ", we calculate @xmath97 and @xmath98 as follows : @xmath99 and @xmath100+\\\\       & \\qquad \\qquad [ g_1'(h_1(x))+xg_1''(h_1(x))h_1'(x)]g_1(h_1(x ) )   \\ } / \\\\        & \\qquad \\qquad [ 1-xg_1'(h_1(x))]^2\\\\        & \\qquad \\quad = \\",
    "{ g_1'(h_1(x))g_1(h_1(x))+\\\\       & \\qquad \\qquad [ g_1'(h_1(x))+xg_1''(h_1(x))h_1'(x)]g_1(h_1(x ) ) \\ } / \\\\       &    \\qquad \\qquad   [ 1-xg_1'(h_1(x))]^2 . \\end{split}\\ ] ] therefore we have : @xmath101 with @xmath102 is the probability that following a randomly chosen edge to one of its end nodes , the node belongs to an fcc after removing this edge . and @xmath103_{x=1}=f'(1)+f''(1)\\\\       & \\qquad   = \\frac{h_1'(1)+h_1''(1)}{u}.   \\end{split}\\ ] ]",
    "consequently , the variance of bridgeness is @xmath104+uh_1''(1)}{u^2}.\\ ] ]    note that @xmath105 is the generating function of the node degree distribution @xmath6 and @xmath106 is the generating function for the size distribution of components that a randomly chosen node sits in . for the calculation of the relative size of gcc , we let @xmath107 be the fraction of vertices in the graph that do not belong to the giant component .",
    "hence we have @xmath108 then the relative size of the gcc is given by @xmath109    for the calculation of the relative size of bcc , it can be derived as @xcite @xmath110 where @xmath111 means that if a vertex is outside the bcc , its surroundings should have at most one element that is not @xmath112 .    here",
    "we propose a new method to calculate @xmath113 , which relies on the result of @xmath114 .",
    "consider the @xmath14-edges , which are inside the gcc but outside of the bcc .",
    "note that each @xmath14-edge can be assigned to one node that is inside the gcc but outside the bcc .",
    "hence @xmath113 can be calculated as : @xmath115 where @xmath116 represents the fraction of @xmath14-edges normalized by total number of nodes .",
    "note that the above two equations are equivalent , because @xmath117 .",
    "the degree distribution @xmath6 for erds - rnyi random graphs follows poisson distribution @xcite : @xmath118 with @xmath35 is the mean degree .",
    "then the generating functions are : @xmath119 @xmath120 with derivatives : @xmath121 @xmath122 with @xmath123 and @xmath124 we have @xmath125,\\ ] ] and @xmath126 substituting eq .",
    "( s16 - 22 ) into eq .",
    "( s6 - 9 ) , we can get @xmath127 besides , by eq .",
    "( s11 - 13 , 19 ) , we also have @xmath128 and @xmath129 results are shown in main text fig .",
    "the degree distribution for exponentially distributed graphs is @xcite : @xmath130 and the mean degree is @xmath131 the generating functions are @xmath132 @xmath133 ^ 2,\\ ] ] with derivatives @xmath134 @xmath135    inserting eq .",
    "( s26 - 31 ) into eq .",
    "( s5 - 13 ) , we can get @xmath136 , @xmath114 , @xmath113 , @xmath10 and @xmath137 .",
    "results of these quantities can be found in fig .",
    "[ fig:1],[fig:2 ] .",
    "the degree distribution for purely power - law distributed graphs is @xcite : @xmath138 where @xmath139 is the riemann zeta function .",
    "note that @xmath6 can be normalized only for @xmath140 .",
    "it is obvious that the mean degree is larger than @xmath41 in this situation and larger @xmath43 leads to smaller mean degree .",
    "the generating functions are @xmath141 @xmath142 where @xmath143 is the @xmath144th polylogarithm of @xmath69 , whose derivative is @xmath145 .",
    "the derivatives of the generating functions are @xmath146 @xmath147    inserting eq .",
    "( s32 - 36 ) into eq .",
    "( s5 - 13 ) , we can get @xmath136 , @xmath114 , @xmath113 , @xmath10 and @xmath137 .",
    "results are shown in fig .",
    "[ fig:1],[fig:2 ] .",
    "the degree distribution for a purely power - law distribution with exponent @xmath43 and exponential cutoff is @xcite : @xmath148 this distribution can be normalized for any @xmath43 .",
    "the generating functions are @xmath149 @xmath150 @xmath151    @xmath152    inserting eq .",
    "( s37 - 41 ) into eq .",
    "( s5 - 13 ) , we can get @xmath136 , @xmath114 , @xmath113 , @xmath10 and @xmath137 .",
    "results are shown in fig .",
    "[ fig:1],[fig:2 ] .     * the analytical results of the bridge fraction @xmath136 , relative sizes of the bcc and gcc in different random graphs . *",
    "( * a * ) exponentially distributed graphs .",
    "( * b * ) purely power - law distributed graphs .",
    "( * c * ) power - law distribution with exponential cutoff parameter @xmath153.,scaledwidth=48.0% ]     * bridge fraction , average and variance of bridgeness in different degree distribution .",
    "* all the results are analytical and the dashed lines mark their percolation positions.,scaledwidth=48.0% ]      in the main text , we use static model to generate scale - free ( sf ) random graphs @xcite .",
    "this model consists of following steps @xcite :    * given @xmath4 isolated nodes , we label them from @xmath41 to @xmath4 .",
    "for each node i , we assign a weight @xmath154 , where @xmath155 and @xmath43 is the characteristic parameter of sf graphs .",
    "* then we randomly choose two nodes according to their weights and connect them if they are not connected .",
    "self - links and multi - links are forbidden here .",
    "we repeat this step until @xmath156 links are added .",
    "the degree distribution of the static mode can be analytically derived as @xcite : @xmath157^{1/a}}{a}\\frac{\\gamma(k-1/a , c(1-a)/2)}{\\gamma(k+1)},\\ ] ] with @xmath158 the gamma function and @xmath159 the upper incomplete gamma function . when @xmath160 , @xmath161",
    ". therefore , we can build different sf random graphs by tuning @xmath162 .",
    "the generating functions are : @xmath163,\\ ] ]    @xmath164,\\ ] ]    where @xmath165 is the exponential integral .",
    "note that the derivative of @xmath166 follows @xmath167 . from the generating functions",
    ", we can derive @xmath136 , @xmath114 , @xmath113 , @xmath10 and @xmath137 .",
    "results are shown in main text fig .",
    "detailed information about the real - world networks analyzed in this paper are listed in tables s1 with brief descriptions .",
    "we categorize networks according to their types and show their names , numbers of nodes , edges , bridges and biconnected components , size of the gcc as well as the average , variance and maximum of bridgeness .",
    "51ifxundefined [ 1 ] ifx#1 ifnum [ 1 ] # 1firstoftwo secondoftwo ifx [ 1 ] # 1firstoftwo secondoftwo `` `` # 1''''@noop [ 0]secondoftwosanitize@url [ 0 ]",
    " + 12$12  & 12#1212_12%12@startlink[1]@endlink[0]@bib@innerbibempty @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop ( ) @noop ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   @noop * * , ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop ( ) @noop ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop   @noop * * , ( ) @noop _ _  ( , ) @noop _ _  ( ,  ) @noop @noop _ _  ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop _ _  ( ) @noop * * , ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * , ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop _ _ ( ,  ) @noop * * ,   ( ) @noop * * ,   ( ) @noop _ _  ( ,  ) @noop _ _  ( ,  ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * , ( )"
  ],
  "abstract_text": [
    "<S> a bridge in a graph is an edge whose removal disconnects the graph and increases the number of connected components . </S>",
    "<S> we calculate the fraction of bridges in a wide range of real - world networks and their randomized counterparts . </S>",
    "<S> we find that real networks typically have more bridges than their completely randomized counterparts , but very similar fraction of bridges as their degree - preserving randomizations . </S>",
    "<S> we define a new edge centrality measure , called bridgeness , to quantify the importance of a bridge in damaging a network . </S>",
    "<S> we find that certain real networks have very large average and variance of bridgeness compared to their degree - preserving randomizations and other real networks . </S>",
    "<S> finally , we offer an analytical framework to calculate the bridge fraction , the average and variance of bridgeness for uncorrelated random networks with arbitrary degree distributions .    a _ bridge _ , also known as _ cut - edge _ , </S>",
    "<S> is an edge of a graph whose removal disconnects the graph , i.e. , increases the number of connected components ( see fig . 1 , red edges )  </S>",
    "<S> @xcite . </S>",
    "<S> a dual concept is _ articulation point _ ( ap ) or _ cut - vertex _ , defined as a node in a graph whose removal disconnects the graph  @xcite . both bridges and aps in a graph can be identified via a linear - time algorithm based on depth - first search  @xcite ( see supplemental material sec.i for details ) and represent natural vulnerabilities of real - world networks . </S>",
    "<S> analysis of aps has recently provided us a new angle to systematically investigate the structure and function of many real - world networks  @xcite . </S>",
    "<S> this prompts us to ask if similar analysis can be applied to bridges .    </S>",
    "<S> note that bridge is similar but different from the notion of _ red bond _ introduced in percolation theory to characterize substructures of percolation clusters on lattices  @xcite . to define a red bond </S>",
    "<S> , we consider the percolation cluster as a network of wires carrying electrical current and we impose a voltage drop between two nodes in the network . </S>",
    "<S> then red bonds are those links that carry all current , whose removal stops the current . the definition of bridges does not require us to impose a voltage drop on the network . instead , it just concerns the connectivity of the whole network .    despite that bridges play important roles in ensuring the network connectivity , </S>",
    "<S> the notion of bridge has never been systematically studied in complex networks . what is the typical number of bridges in a random graph with prescribed degree distribution ? </S>",
    "<S> are the bridges in a real network overpresented or underpresented ? </S>",
    "<S> how to quantify the network vulnerability in terms of bridge attack ? </S>",
    "<S> in this letter , we systematically address those questions in both real networks and random graphs .    * bridges in real - world networks . </S>",
    "<S> * bridges ( in red ) are edges whose removal will increase the number of connected components in a graph . </S>",
    "<S> ( * a * ) food web of _ grassland _  @xcite ; ( * b * ) the protein - protein interaction network of _ c. elegans _  </S>",
    "<S> @xcite ; ( * c * ) a subgraph of the road network of california  @xcite ; ( * d * ) a subgraph of the power grid in three western states of us  @xcite.,scaledwidth=48.0% ]    we first calculate the fraction of bridges ( @xmath0 ) in a wide range of real - world networks , from infrastructure networks to food webs , neuronal networks , protein - protein interaction ( ppi ) networks , gene regulatory networks , and social graphs . detailed information of those networks can be found in supplemental material sec . </S>",
    "<S> iv . here </S>",
    "<S> @xmath1 and @xmath2 denote the number of bridges and total links in a network , respectively . </S>",
    "<S> we find that many real networks have very small fraction of bridges , while a few of them ( e.g. , ppi networks ) have very large fraction of bridges ( fig . </S>",
    "<S> 2a ) . to identify the topological characteristics that determine @xmath3 in real networks </S>",
    "<S> , we compare @xmath3 of a given network with that of its randomized counterpart . </S>",
    "<S> we first randomize each real network using a complete randomization procedure that turns the network into an erds - rnyi ( er ) type of random graph with the number of nodes @xmath4 and links @xmath2 unchanged  @xcite . </S>",
    "<S> we find that most of the completely randomized networks possess very different @xmath3 , compared to their corresponding real networks ( fig . </S>",
    "<S> 2a ) . </S>",
    "<S> this indicates that complete randomization eliminates the topological characteristics that determine @xmath3 . </S>",
    "<S> moreover , we find that real networks typically display much higher @xmath3 than their completely randomized counterparts ( fig . </S>",
    "<S> 2a ) . </S>",
    "<S> by contrast , when we apply a degree - preserving randomization , which rewires the edges among nodes while keeping the degree @xmath5 of each node unchanged , this procedure does not alter @xmath3 significantly ( fig . </S>",
    "<S> 2b ) . </S>",
    "<S> in other words , the characteristics of a real network in terms of @xmath3 is largely encoded in its degree distribution @xmath6 .     </S>",
    "<S> * fraction of bridges in real - world networks . * </S>",
    "<S> the dashed lines are @xmath7 . </S>",
    "<S> the error bars represent the standard deviation , calculated from 100 randomizations . </S>",
    "<S> ( * a * ) complete randomization of real networks . ( * b * ) degree - preserving randomization.,scaledwidth=48.0% ]    in order to quantify the importance of an edge in damaging a network , we define an edge centrality measure @xmath8 , called _ bridgeness _ , for each edge in a graph as the number of nodes disconnected from the giant connected component ( gcc )  @xcite after the edge removal . by definition , if an edge is not a bridge or outside the gcc , it has zero bridgeness . </S>",
    "<S> also , in the absence of gcc , all edges have zero bridgeness . </S>",
    "<S> we notice that bridgeness has been defined differently in the literature  @xcite ( see supplemental material sec.ii ) . here </S>",
    "<S> we define bridgeness based on the notion of bridge and we focus on the damage to the gcc , which is typically the main functional part of a network .     * average and variance of bridgeness in real - world networks . * </S>",
    "<S> the bars represent the values of real networks and empty symbols represent the values of their degree - preserving randomizations . </S>",
    "<S> the error bars represent the standard deviation , calculated from 10 randomizations . </S>",
    "<S> ( * a * ) average bridgeness . </S>",
    "<S> ( * b * ) variance of bridgeness.,scaledwidth=48.0% ]    bridgeness differentiates edges based on their structural importance . </S>",
    "<S> consider all bridges that have non - trivial bridgeness , i.e. , @xmath9 . </S>",
    "<S> denote their average and variance as @xmath10 and @xmath11 , respectively . </S>",
    "<S> we find that word wide web ( www ) and road networks have much larger @xmath10 than their randomized counterparts and other real networks ( fig . </S>",
    "<S> 3a ) . moreover , those networks also have very large @xmath11 ( fig . </S>",
    "<S> 3b ) . </S>",
    "<S> the reason why road networks have very large @xmath10 and @xmath11 is the presence of very long paths and the expense of constructing alternative paths . while for www , the reason is the presence of certain bridges that connect different large biconnected components in the gcc ( see supplemental material sec.iv ) . here </S>",
    "<S> a biconnected component ( bcc ) is a connected subgraph where for any two nodes there are at least two paths connecting them that have no nodes in common other than these two nodes  @xcite . </S>",
    "<S> ( note that by definition no bridges exist in a bcc . )    </S>",
    "<S> since the bridge fractions in real networks are almost the same as their degree - preserving randomized counterparts , the difference of average bridgeness between real networks and their degree - preserving randomizations indicates variations of vulnerability of those networks in terms of bridge attack . </S>",
    "<S> fig . </S>",
    "<S> 3a shows that certain types of networks , such as air traffic , road networks , social graphs and www , are more vulnerable , displaying much larger @xmath10 than their randomizations . </S>",
    "<S> by contrast , the internet at the autonomous system ( as ) level and the internet peer - to - peer ( p2p ) file sharing networks have smaller @xmath10 than their randomized counterparts , indicating that those networks are robust from the bridge attack perspective .    the results of real - world networks prompt us to analytically decipher bridge structure for large uncorrelated random networks with prescribed degree distributions . to begin with , </S>",
    "<S> we adopt the local tree approximation , which assumes the absence of finite loops in the thermodynamic limit ( i.e. , as the network size @xmath12 ) and allows only infinite loops  @xcite . </S>",
    "<S> this approximation leads to three important properties : ( 1 ) all finite connected components ( fccs ) are trees , and hence all edges inside them are bridges ; ( 2 ) there exists only one giant connected component ( gcc )  @xcite , only one bcc ( which has no bridges ) , and the bcc is a subgraph of the gcc ; ( 3 ) subgraphs inside the gcc but outside the bcc are trees and all edges in those subgraphs are bridges  @xcite .     </S>",
    "<S> * demonstration of different types of edges . * </S>",
    "<S> ( * a * ) the green lines , red lines and black lines represent @xmath13-edges , @xmath14-edges and @xmath15-edges , respectively . </S>",
    "<S> ( * b * ) neighborhood of a @xmath14-edge . </S>",
    "<S> the red line is a @xmath14-edge and the black square and ellipse represent an fcc and the gcc , respectively , after the removal of the @xmath14-edge.,scaledwidth=40.0% ]    based on the above considerations , we categorize all the edges in a graph into three types ( fig . </S>",
    "<S> 4a ) : ( i ) @xmath13-edge : edges in fccs , which are bridges ; ( ii ) @xmath14-edge : edges inside the gcc but outside the bcc , which are also bridges ; ( iii ) @xmath15-edge : edges inside the bcc , which are not bridges . </S>",
    "<S> hereafter we also use @xmath13 , @xmath14 or @xmath15 to denote the probability that a randomly chosen edge is a @xmath13-edge , @xmath14-edge , or @xmath15-edge , respectively . by definitions </S>",
    "<S> , we have @xmath16 , and @xmath17 . </S>",
    "<S> note that according to our definition of bridgeness , only @xmath14-edges have nontrivial bridgenesses , i.e. , @xmath9 .    </S>",
    "<S> the generating functions @xmath18 and @xmath19 are very useful in calculating key quantities of random graphs , such as the mean component size and the size of gcc @xcite . here </S>",
    "<S> @xmath20 , and @xmath21 is the mean degree . to calculate @xmath13 , @xmath14 and @xmath15 </S>",
    "<S> , we introduce the generating function @xmath22 for the size distribution of the components that are reached by choosing a random edge and following it to one of its ends . </S>",
    "<S> ( note that the notation @xmath23 is reserved for the generating function of the size distribution of the components that a randomly chosen node sits in , see supplemental material sec . </S>",
    "<S> iii )  @xcite . </S>",
    "<S> note that we only include the fccs in calculating @xmath22 , which means that the chosen edge must be a bridge , namely either @xmath13- or @xmath14-edge .    according to the local tree approximation </S>",
    "<S> , @xmath22 satisfies the following self - consistency equation  @xcite : @xmath24^{k-1}.\\eqno { ( 1)}\\ ] ] equation ( 1 ) implies that following a bridge , the excess edges of its end to finite subcomponents should also be bridges . </S>",
    "<S> we can rewrite eq . </S>",
    "<S> ( 1 ) using the generation function of @xmath25 , i.e. , @xmath26    define @xmath27 , which represents the probability that following a randomly chosen edge to one of its end nodes , the node belongs to an fcc after removing this edge . </S>",
    "<S> then the probability that a randomly chosen edge is an @xmath13-edge or belongs to an fcc is simply @xmath28 . for a @xmath14-edge </S>",
    "<S> , one of its end nodes belongs to an fcc and the other one belongs to the gcc after removing this edge . </S>",
    "<S> hence we have @xmath29 for a @xmath15-edge , both of its end nodes belong to the gcc after its removal , and hence @xmath30 note that the normalization condition @xmath31 is naturally satisfied . the fraction of bridges is simply given by @xmath32    in fig . </S>",
    "<S> 5a , we show the bridge fraction @xmath3 calculated from eqs.(2 ) and ( 3 ) , the relative size of bcc ( @xmath33 )  @xcite , and the relative size of gcc ( @xmath34 )  @xcite as functions of mean degree @xmath35 in er random graphs with poisson degree distribution @xmath36  @xcite . </S>",
    "<S> we find that before the gcc and bcc emerge at the percolation threshold @xmath37 , all components are fccs and all edges are @xmath13-edges , rendering @xmath38 . </S>",
    "<S> after the emergence of the gcc and bcc at @xmath39  @xcite , @xmath40 begins to deviate from @xmath41 , and the fraction of @xmath14-edges displays a non - monotonic behavior ( because the difference between @xmath34 and @xmath33 increases first and then decreases ) . </S>",
    "<S> we also calculate @xmath3 for scale - free ( sf ) networks with power - law degree distribution @xmath42 generated by the static model  @xcite . for sf networks , the smaller the degree exponent @xmath43 , the smaller the percolation threshold @xmath44  @xcite , rendering @xmath3 deviate from 1 at smaller @xmath44 ( fig . </S>",
    "<S> 5b ) .     </S>",
    "<S> * bridge and bridgeness in er and sf random networks . * </S>",
    "<S> the size of all these random network is @xmath45 . </S>",
    "<S> curves in ( * a*)-(*d * ) are analytical predication about bridges , and symbols are simulation results . </S>",
    "<S> ( * a * ) the behavior of the bridge fraction @xmath3 , relative sizes of the bcc and gcc ( denoted as @xmath33 , @xmath34 , respectively ) in er random graphs . ( * b * ) bridge fraction in different random networks with dashed vertical lines representing the corresponding percolation threshold @xmath44 where the gcc and bcc emerge . note that @xmath46 , @xmath47 , @xmath48 , and @xmath49 . </S>",
    "<S> ( * c * ) average bridgeness in random networks . </S>",
    "<S> ( * d * ) the variance of bridgeness in random networks . for detailed calculation and more distributions see supplemental material sec . </S>",
    "<S> iii.,scaledwidth=48.0% ]    besides @xmath3 , we can also calculate the bridgeness distribution @xmath50 from @xmath22 . for nontrivial bridgeness ( @xmath9 ) </S>",
    "<S> we only consider the bridges in the gcc . </S>",
    "<S> in other words , we calculate @xmath50 for @xmath14-edges in random graphs . </S>",
    "<S> define the generating function of @xmath50 as @xmath51 which leads to @xmath52 since one end node of a @xmath14-edge locates in the gcc after this edge is removed ( fig . </S>",
    "<S> 4b ) , we have : @xmath53 where the numerator represents the generating function for the bridgeness distribution of a randomly chosen @xmath14-edge , and the denominator originates from the fact that we focus on @xmath14-edges . </S>",
    "<S> the moments of @xmath50 are then given by : @xmath54_{x=1}.\\eqno { ( 6)}\\ ] ]    we calculate the average bridgeness @xmath10 and the variance of bridgeness @xmath55 in er and sf random networks ( fig . </S>",
    "<S> 5c - d ) . </S>",
    "<S> we find that for both er and sf networks , @xmath10 and @xmath11 monotonically decrease as @xmath35 increases . </S>",
    "<S> note that @xmath10 and @xmath11 of sf networks are typically lower than those of er networks for small @xmath35 , and higher for large @xmath35 . </S>",
    "<S> this is because sf networks tend to first form densely connected components of hub nodes and then slowly stretch out . </S>",
    "<S> this means that they form the bcc earlier but extending bridges while er networks absorbs bridges quickly . </S>",
    "<S> the divergent behavior of bridgeness around the percolation threshold @xmath44 is due to the emergence of the gcc , which initially is tree - like and therefore contains bridges with a huge range of bridgeness .    in conclusion </S>",
    "<S> , we systematically investigate the bridge structure in complex networks . </S>",
    "<S> we demonstrate bridges in real - world networks , calculate the fraction of bridges in different networks , and define a new edge centrality measure , called bridgeness , to quantify the importance of bridges in damaging a network . </S>",
    "<S> finally we analytically calculate bridge structure in random graphs with prescribed degree distributions . </S>",
    "<S> the presented results help us understand the complex architecture of real - world networks and may shed lights on the design of more robust networks against bridge attack .    </S>",
    "<S> _ acknowledgements : _ we thank wei chen for valuable discussions . </S>",
    "<S> this work is supported by the john templeton foundation ( award number 51977 ) , national natural science foundation of china ( grant no . </S>",
    "<S> 11505095 ) , research fund for the doctoral program of higher education of china ( grant no . </S>",
    "<S> 20133218120033 ) , and the fundamental research funds for the central universities of china ( grants nos . </S>",
    "<S> ns2014072 and nz2015110 ) . _ author contributions : _ y .- y.l conceived and designed the project . a .- k.w and l.t . did the analytical calculations . </S>",
    "<S> a .- </S>",
    "<S> k.w . did the numerical simulations and analyzed the empirical data . </S>",
    "<S> all authors analyzed the results . </S>",
    "<S> a .- k.w . and y .- y.l . </S>",
    "<S> wrote the manuscript . </S>",
    "<S> l.t . edited the manuscript .    </S>",
    "<S> 25ifxundefined [ 1 ] ifx#1 ifnum [ 1 ] # 1firstoftwo secondoftwo ifx [ 1 ] # 1firstoftwo secondoftwo `` `` # 1''''@noop [ 0]secondoftwosanitize@url [ 0 ]  + 12$12 </S>",
    "<S>  & 12#1212_12%12@startlink[1]@endlink[0]@bib@innerbibempty @noop _ _  ( ,  ) @noop _ _  ( , ) @noop _ _  ( ,  ) @noop * * ,   ( ) @noop @noop * * , ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop ( ) @noop * * ,   ( ) @noop * * , ( ) in  @noop _ _  ( ,  ) @noop * * ,   ( ) @noop * * , ( ) @noop ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop _ _  ( , ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) </S>"
  ]
}
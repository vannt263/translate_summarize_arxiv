{
  "article_text": [
    "iguana - interactive graphics for user analysis - is a modular c++ toolkit for interactive visualisation .",
    "the project mainly focuses on interactive detector and event visualisation with emphasis on :    * high performance 2d and 3d graphics ; * graphical user interfaces ; * user access to the experiment services : data access framework , application execution framework , etc .",
    "the goal of the project is to provide easy - to - use coherent interactive graphical application interface for the physicist , where the main application - iguana studio - interfaces to other tools and components .",
    "interactive histogram , ntuple analysis is not considered a primary goal .",
    "it is assumed that this functionality will be provided by other tools and projects such as jas  @xcite , hippodraw  @xcite , root  @xcite , or openscientist  @xcite , which may ( or may not ) ultimately be integrated with iguana .",
    "iguana development is mainly driven by the needs of the cms and d0 experiments , but most of iguana is independent of cms or d0 and can be freely used by others . in cms ,",
    "iguana releases are available directly via scram  @xcite which keeps a list of the iguana project releases .",
    "instructions versioned by release on how to download and install iguana are available for any selected version .    iguana is currently supported on linux , solaris and windows .",
    "porting to other unix varieties is reasonably straightforward .",
    "iguana architecture is designed to provide a generic tool that can integrate with a specific experiment or even a single task within it without having to specify a fixed list of abstract interfaces or having to standardise on a common object description .",
    "iguana has a small kernel , everything else is implemented in demand - loaded extensions which negotiate the specific services they need .",
    "this allows new services to be added quickly , to be propagated into existing code gradually , and existing services to be altered to do new things easily .",
    "the full documentation is available on the project website automatically generated for every release from the sources kept in cvs .",
    "the main units relating to the iguana architecture are :    * a thin portability and utilities layer ; * a small kernel that manages a number of plug - ins : * * application personalities ; * * session with extensions forming the shared application state ; * * user interface components : sites , browsers ; * * representation methods to map between the experiment objects and the various browsers ; * external software imported into iguana for convenience of building and distribution , and external software which remains outside iguana .    the portability layer , is mostly implemented by the classlib package which in future will be distributed by the lhc computing grid ( lcg ) seal project  @xcite .    the kernel is implemented by igpluginmanager , a generic plug - in manager package , which is extended by the architecture kernel package igobjectbrowser that provides the core functionality : session objects , extensions , user interface components , representations , etc .",
    "and base interfaces for the various plug - in types .",
    "the plug - ins are in the ig_modules subsystem which includes the event display core , application management services , and thin adaptors to export external software in forms understood by the architecture . for more details",
    "see  @xcite .",
    "when an iguana program runs , it first creates a session object into which it then attaches an application personality : the main program that determines all subsequent behaviour ( igsession , igdriver ) .",
    "typically the personality immediately extends the session object with services pertinent to the purpose of the application ( igextension ) .",
    "for example , a graphical personality would create a main window and add services that give access to the menus and maintain gui event loops .",
    "the personality then loads a number of extensions into the session ; a graphical personality would tell the system to load all `` gui extensions '' ( igextension ) .",
    "the personality and the extensions form the application .",
    "the personality exposes features by installing service interfaces into the session , based on which other extensions can provide further services and make features available to the user .",
    "an interactive application personality creates its user interface based on one of the user interface components : browsers and sites ( igbrowser , igsite ) .",
    "a browser is a way to look at and interact with application objects ( see figure  [ orca - f3 ] ) .",
    "it may also control other things , such as a cut in a histogram display .",
    "a browser does not however have to be graphical : it might just sit on the background and respond to other browsers queries such as `` what actions can be invoked on this object ? '' sites host browsers , by providing for example a window for a 3d browser view . more generally sites expose objects such as gui widgets as hosts for other sites and browsers .",
    "sites need not to be graphical either : a pipe site might host a browser communicating to a subprocess .",
    "application objects can be represented in many different browsers .",
    "a browser typically has a model made of a number of object reps ( igmodel , igrep ) .",
    "the use of model - specific reps , such as 3d shape objects , is encouraged rather then the application objects themselves .",
    "this permits an object s representation to be separated from the object itself .",
    "it is possible to correlate the object s reps in different browsers and to create a rep in a right context in each browser .",
    "this implementation requires `` representable '' application objects to inherit from a common base type ( igrepresentable ) or make it an alias for another class .",
    "the only requirement is that the type must be polymorphic ; igrepresentable simply defines a virtual destructor and no other methods .    in cms",
    "there is however no base type shared by all objects ; for visualisation the proxies are used that inherit igrepresentable and point to other cms objects .",
    "the primary reason for this choice is the framework s support for `` virtual objects '' that can be materialized upon request .",
    "the object ",
    "rep mappings are extensions loaded dynamically on demand .",
    "iguana discovers and chooses the right mapping automatically ; the extension code simply does whatever is appropriate for that combination .",
    "it is not necessary to have a global list of all the pairings : code for new reps and views can be dropped in without any changes to existing code .",
    "communication takes place through three channels : session extensions , message services , and the object mapping methods .",
    "the first has already been covered .",
    "the message services allow browsers to share messages such as `` i selected this '' : all observers of a service can maintain together a coherent state and to answer queries from each other while still knowing next to nothing about the message sender ( see figure  [ orca - f3 ] ) .",
    "the final channel is the object ",
    "model operations , one of which was already mentioned : the creation of a rep .",
    "another operation commits a changed rep back to the object , yet another lazily expands an object rep ( for example to read data only when it is requested ) .",
    "the operations can be extended , both to handle new argument combinations and with new methods with arbitrary parameter types ( igbrowsermethods ) .",
    "iguana provides an interactive visualisation sub - framework for geant4  @xcite .",
    "the framework implements dcut , dtree - like functionality ( as in geant3 ) .",
    "it allows to explore and visualise the volume tree , with all the usual iguana 3d features : view , correlated picking , slices per object , etc . with the geant4 command line still accessible .",
    "navigation in the volume tree can be done either by logical or physical volumes , or subsets .",
    "there are quick operations for common tasks .",
    "volume property window shows additional information about selected object or volume .",
    "volume tree selectors provide various types of selection :    * by material : `` show all silicon '' ; * by sensitive : `` show only sensitive detectors '' ; * for a sub - tree , predefined viewpoints / settings ; * forward + reverse : `` show where this is used '' .",
    "the framework is used in the cms oscar simulation project where an iguana wizard is used to guide through geant4/oscar settings .",
    "the application is integrated with martin liendl s overlap detection : overlaps are found and the result details are shown in a list .    two generic examples showing how to use an arbitrary geant4 geometry with the framework are distributed with iguana experiment - independent core : the geant4 example number two and the atlas calorimeter example .",
    "there are several applications based on iguana plug - in architecture . among those are oscar and orca visualisation which are well known in cms and actively used for visualising simulated and reconstructed cms data .",
    "d0scan ( see figure  [ d0-f2 ] ) currently uses iguana as a toolkit .",
    "it is used at d0 for event and detector visualisation .",
    "iguana is used by other software projects to define experiment - specific views . among these projects",
    "are the cms experiment projects : cobra - core framework , oscar - simulation project , orca  @xcite - reconstruction project , famos - fast simulation project , ddd - detector geometry description and the d0 experiment project : d0scan .",
    "the integration with experiment - specific frameworks is an iguana dependent part , usually a sub - system , which is located within the experiment project . even though iguana core knows nothing about these sub - systems , the main driver can still load experiment - specific plug - ins providing that the location of those plug - ins is listed in the iguana_plugins environment variable as path defined by a colon - separated list of directories and the experiment - specific shared libraries are available at run - time .    the projects build plug - ins similar to the described above ( section  [ plgin ] ) .",
    "usually , each project has a dedicated sub - system called visualisation for that purpose .",
    "the sub - system contains project specific modules , or plug - ins .",
    "the kernel loads the modules dynamically as required .",
    "currently a user selects what to load at the interactive setup phase or via a resource file .    the plug - ins are normally demand - loaded shared libraries but iguana also supports statically linked applications , therefore no shared libraries need to be involved .",
    "visualisation for the cms reconstruction project ( orca ) ( see figure  [ orca - f3 ] and figure  [ orca - f4 ] ) provides access via cobra plug - ins to both simulated ( cmsim ) and reconstructed event data , and geant3 based cms geometry as well as reconstructed geometry .",
    "events are requested interactively one by one from a specified data collection .",
    "the iguana gui runs in a separate thread .",
    "communication between the gui thread and the event thread is handled by the cobra - based event processor plug - in .",
    "the visualisation content is defined at run - time .",
    "plug - ins for different orca sub - systems can be loaded independently .",
    "a user can define the content of the application in an ascii text resource file .",
    "various visualisation cuts can also be defined in the resource file .",
    "the on - line configuration editor implemented as an iguana service allows to change them interactively or set new configurables during the run .",
    "d0scan is an event viewer for d0 using iguana .",
    "the d0scan design is based upon the iguana igvis module which provides a very flexible set of tools for organizing an openinventor scene , creating a gui to control visibility of items in the scene , and centralizing picking callback .",
    "items such as detector components , hits , tracks , and so forth are implemented as igqttwigs and arranged in a hierarchical structure similar to the openinventor scene graph .",
    "this structure is represented in the twig browser that controls visibility of graphical objects .",
    "d0scan makes heavy use of the ability of igvis to support multiple windows with different characteristics .",
    "user demand has led to the development of specialized displays as , for instance , in the @xmath0 projection of the distribution of energy in the calorimetry .",
    "visualisation for cms simulation project using geant4 - oscar visualisation - is based on the interactive visualisation sub - framework of iguana for geant4 described above in section  [ geant4 ] .",
    "cms detector geometry is described in xml by ddd - detector description database project .",
    "this description is converted to the geant4 one and visualised .",
    "iguana makes use of suitable existing software where possible and integrates the whole in a coherent fashion .",
    "application developers select from the toolkit only those parts which are relevant for a particular application .    external software used by iguana includes the 3d graphics libraries : opengl and openinventor , the qt toolkit as a gui kernel , public - domain qt and inventor extensions , various packages for plotting and interactive analysis , an xml parser , etc .    being accessible via iguana services with dedicated gui extensions , both oprofile and jprof are used for debugging .",
    "ignominy  @xcite - an iguana tool for dependency analysis depends on graphviz for drawing diagrams .",
    "doxygen is used for auto generated reference documentation .",
    "iguana studio printing services integrate gl2ps for producing high quality vector postscript .",
    "the team has improved culling algorithms of the package which reduce the size of the printed file dramatically and fed them back to the author .",
    "iguana team actively participates in the lcg project .",
    "part of the software has already migrated to seal such as the classlib and plug - in manager .",
    "iguana uses services provided by spi such as savannah bug reporting system .",
    "pool is used indirectly via experiment specific plug - ins .",
    "iguana will provide wider selection of 2d and 3d representations and specialized viewers including the time snapshots of visualized data , algorithm dependent views , and animation .",
    "future possibilities are open for discussion in context of the lhc lcg project , e.g. pi - physicist interface project . among those there are issues of integration and future relationship with root , jas , etc . and potential front - end gui for grid applications .",
    "v.  innocente , d.  stickland , `` design , implementation and deployment of a functional prototype oo reconstruction software for cms . the orca project . '' , proceedings to chep-2000 , padua .",
    "+ http://cmsdoc.cern.ch/orca",
    "l. tuura , `` ignominy : tool for analysing software dependencies and for reducing complexity in large software systems '' , proceedings of the viii international workshop on advanced computing and analysis techniques in physics research , moscow , russia , june , 2002 ."
  ],
  "abstract_text": [
    "<S> iguana is a generic interactive visualisation framework based on a c++ component model . </S>",
    "<S> it provides powerful user interface and visualisation primitives in a way that is not tied to any particular physics experiment or detector design . </S>",
    "<S> the article describes interactive visualisation tools built using iguana for the cms and d0 experiments , as well as generic geant4 and geant3 applications . </S>",
    "<S> it covers features of the graphical user interfaces , 3d and 2d graphics , high - quality vector graphics output for print media , various textual , tabular and hierarchical data views , and integration with the application through control panels , a command line and different multi - threading models . </S>"
  ]
}
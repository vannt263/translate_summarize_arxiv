{
  "article_text": [
    "to prolong the operating lifetime of many battery powered commercial and tactical wireless ( e.g. , sensor ) networks , energy - efficiency has appeared to be a critical issue .",
    "energy - efficient resource allocation strategies were extensively pursued in , where the goal is to minimize the transmission energy expenditure subject to average rate or delay constraints .",
    "such an energy minimization is carried out over an infinite horizon and does not directly translate into quality - of - service ( qos ) guarantees over finite time intervals",
    ". for qos provisioning over finite time intervals , @xcite considered minimizing the transmission energy for bursty packet arrivals with a single strict deadline .",
    "it was shown that a so - called lazy scheduling is the most energy - efficient by properly selecting minimum transmission rates for arriving packets under the causality constraints . generalizing the lazy - scheduling ,",
    "a calculus approach was proposed to find the optimal data departure curve ( thus the optimal rate schedule ) for packet arrivals with individual delay constraints , by the trajectory of letting a string tie its two ends and then taut between the data arrival and minimum departure curves .",
    "the approaches in only apply to packet transmissions over time - invariant channels . assuming a one - packet - per - slot arrival process and the same delay requirement for all packets , a recursive `` constrained flowright '' algorithm was developed to find the energy - efficient scheduling over time - varying fading channels in @xcite . for arbitrary packet arrival process and delay constraints",
    ", an efficient algorithm was put forth to find the optimal rate control strategy over time - varying wireless channels with a low computational complexity @xcite .",
    "all the works assumed an ideal ( negligible ) circuit - power model .",
    "this holds for typical long - range transmissions .",
    "however , for short - range wireless ( sensor ) networks , non - ideal circuit power consumption due to signal processing ( filters , dsp , oscillators , converters , etc . )",
    "needs to be taken into account ; yet , there are few studies on the effects of the non - ideal circuit power on energy - efficient transmission policies for delay - limited data packets . in a different yet relevant context ,",
    "@xcite investigated sum - throughput maximization for packet transmissions over time - invariant channels subject to the causality and battery - capacity constraints due to an energy harvesting ( arrival ) process .",
    "however , these algorithms are inapplicable to addressing the critical issue of optimizing the energy efficiency for transmissions of delay - sensitive packets in general situations where energy harvesting does not take place and batteries are the only source of energy .    in this paper , we develop a novel unified approach to obtaining energy - efficient transmission schedules for bursty data packets with strict deadlines under the non - ideal circuit power consumption . assuming that full knowledge of channel states , packet arrivals and deadlines is available a - prior",
    ", we consider the optimal ( offline ) policies that minimize the total energy consumption . through a judicious convex formulation and the resultant optimality conditions",
    ", we reveal the structure of the optimal schedule .",
    "specifically , we show that the optimal transmission between any two consecutive data or channel state changing instants ( referred to as an epoch ) can only take one of the three ( `` off '' , `` on - off '' , `` on '' ) strategies : ( i ) no transmission , ( ii ) transmission with the energy - efficiency ( ee ) maximizing rate @xmath0 over a portion of the epoch , ( iii ) transmission with a rate @xmath1 over the whole epoch . based on this structure",
    ", we propose an efficient `` clipped string - tautening '' algorithm to find the optimal transmission policy with a low computational complexity for a time - invariant channel .",
    "interestingly , it is shown that the calculus approach in can be modified to find the optimal policy ; namely , the optimal data departure for the general non - ideal circuit - power case can be obtained by simply adjusting the ideal - case data departure in accordance to the ee - maximizing rate value .",
    "the proposed approach is then generalized to time - varying channels . in this case",
    ", it is shown that the optimal transmit - power allocation admits a multi - level water - filling form , where the water - levels can be obtained by a `` clipped water - tautening '' procedure .",
    "our approach provides the optimal benchmarks for practical schemes designed for transmissions of delay - limited data arrivals over time - invariant and time - varying channels .",
    "it can be also employed to develop efficient online scheduling schemes which require only causal knowledge of channel states , data arrivals and deadline requirements .",
    "the rest of the paper is organized as follows .",
    "section  ii describes the system models .",
    "section  iii and iv present the proposed approaches to energy - efficient transmissions of delay - limited bursty data packets over time - invariant and time - varying channels , respectively .",
    "section  v provides the numerical results to evaluate the proposed schemes , followed by a conclusion in section  vi .",
    "consider a wireless link with complex - valued baseband equivalent channel coefficient @xmath2 .",
    "for simplicity , all nearby devices are supposed to use orthogonal channels so that interferences from other links are negligible .",
    "assume without loss of generality ( w.l.o.g . ) that the noise at the receiver is a circularly symmetric complex gaussian ( cscg ) random variable with zero mean and unit variance .",
    "given a transmit - rate @xmath3 , we adopt the well - known shannon - capacity formula as the minimum required transmit - power function : @xmath4 note that the shannon formula is only used for specificity .",
    "it has been shown that with many modulation and coding schemes , transmit - power is an increasing and strictly convex function of the transmission rate .",
    "our approach applies generally to any of these power functions @xmath5 .          consider a wireless link with data packets transmitted from a transmitter to a receiver .",
    "we say that the data state changes when new data packets arrive or a data deadline is reached . as shown in fig .",
    "[ model ] , over the entire transmission interval @xmath6 $ ] , assume that there are @xmath7 data state changing instants @xmath8 .",
    "we refer to the time interval between two consecutive data state changing instants as an epoch ; the length of the @xmath9th epoch is @xmath10 , @xmath11 .",
    "the packet arrival process is modeled by a set @xmath12 , as illustrated by the red bricks in fig .  1 , where @xmath13 denotes the number of data arrival events , @xmath14 denotes the epoch index of the @xmath15th arrival time , and @xmath16 denotes the number of packets arriving at @xmath17 , @xmath18 , where @xmath19 denotes cardinality .",
    "let @xmath20 and @xmath21 denote the sets of non - negative and positive integers . clearly , we have @xmath22 .",
    "let @xmath23 with @xmath24 for convenience .",
    "let @xmath25 .",
    "for the number of arrivals at @xmath14 , we clearly have @xmath26 .",
    "since the last time instant for packet transmission is @xmath27 , no packets should be allowed to arrive at @xmath28 ; hence , we must have @xmath29 .",
    "we include the pair @xmath30 for the ease of problem formulation and algorithm development .",
    "the deadline requirements for the packets are described by another set @xmath31 , as illustrated by the blue bricks in fig .  1 , where @xmath32 denotes the number of deadlines",
    ", @xmath33 denotes the epoch index of the @xmath34th deadline , and @xmath35 denotes the number of packets which should depart within @xmath36 $ ] ( we let @xmath37 for convenience ) .",
    "let @xmath38 , with @xmath39 and @xmath40 .",
    "let @xmath41 where @xmath42 .",
    "the total number of data packets arriving and transmitted over time interval @xmath43 $ ] is obviously @xmath44 .      in short - range wireless networks ,",
    "circuit power consumption for e.g. the ac / dc converter and radio frequency ( rf ) amplifier is non - negligible when transmit - power @xmath45 .",
    "when there is no data transmission , the transmitter could turn off the power amplifier and switch into a micro - sleep mode to avoid / reduce the circuit power consumption @xcite . for the ease of description , we refer to the transmitter status with a transmit - power @xmath46 and that with @xmath47 as the `` on '' and `` off '' modes , respectively .",
    "let @xmath48 denote the circuit power during the `` on '' mode , @xmath49 $ ] denote the efficiency of the rf chain , and @xmath50 the circuit power consumed during the `` off '' mode .",
    "the total power @xmath51 consumed by a transmitter is then @xcite : @xmath52 in practical systems , @xmath53 is usually much smaller compared to @xmath54 @xcite and thus can be neglected for simplicity .",
    "hence , we can assume w.l.o.g .",
    "the circuit - power during the `` on '' and `` off '' modes to be @xmath55 watts and @xmath56 watt , respectively .",
    "we further assume @xmath57 w.l.o.g since @xmath58 is only a scaling constant .",
    "consider first a static channel with time - invariant channel coefficient @xmath2 . due to the non - ideal circuit power consumption",
    ", the transmission can be turned on for only a portion of an epoch and turned off afterwards to save energy .",
    "let @xmath59 collect the `` on '' periods with length @xmath60 in the @xmath9th epoch .",
    "given that the power function @xmath5 is convex , it was proved that the transmit - rate over the `` on '' period @xmath61 of each epoch @xmath9 should remain unchanged in the optimal policy @xcite .",
    "let @xmath62 collect such invariant transmit - rates over the `` on '' period of each epoch .",
    "for a bursty data arrival process modeled by ( @xmath63 , @xmath64 ) , the energy - efficient transmission schedule is to select an optimal set of @xmath65 such that the total energy consumed for delivery of the arriving data packets ahead of deadlines is minimized ; i.e. , we wish to solve : and @xmath66 can be transformed into a similar form , where the objective @xmath67}}$ ] is equivalent to @xmath68}}$ ] .",
    "hence , our results readily carry over to such cases by simply involving @xmath69 . ]",
    "@xmath70}\\\\ \\text{s.t . } & \\text{(c1 ) : } \\;\\ ; \\displaystyle\\sum_{n=1}^{\\alpha_i}{(r_n l_n^{on } ) \\leq \\sum_{k=0}^{i-1}{a_k } } , & i=1 , \\ldots , a,\\\\ & \\text{(c2 ) : } \\;\\ ; \\displaystyle\\sum_{n=1}^{\\delta_j}{(r_n l_n^{on } ) \\geq \\sum_{k=1}^{j}{d_k } } , & j=1 , \\ldots , d,\\\\ & { \\text{(c3 ) : } \\;\\ ; \\displaystyle r_n \\geq 0 , \\;\\ ; 0 \\leq l_n^{on } \\leq l_n } , & n=1 , \\ldots , n. \\end{array}\\ ] ] here , in addition to the trivial constraints ( c3 ) , ( c1 ) presents the causality constraints : the number of packets @xmath71 transmitted before the @xmath15th arrival time instant must not exceed the number of available packets @xmath72 in the transmit buffer .",
    "( c2 ) presents the deadline constraints : the number of packets @xmath73 transmitted before the @xmath34th deadline should be no less than the required number of packets @xmath74 .      in the ideal circuit - power",
    "( @xmath75 ) case , it was shown that the transmitter is always on ( i.e. , @xmath76 ) in the optimal policy .",
    "the optimal transmission schedule then reduces to an optimal rate control problem . with @xmath77 as the only optimization variable ,",
    "is a convex program as long as @xmath78 is convex .",
    "however , in the general non - ideal circuit - power case , @xmath79 is also a variable to be optimized .",
    "since both @xmath80 and @xmath81 are neither concave nor convex in @xmath82 , the problem is non - convex .",
    "yet , we next show that it can be reformulated into a convex program through a change of variables .    define @xmath83 .",
    "with @xmath84 , we rewrite as : @xmath85}\\\\ \\text{s.t . } & \\displaystyle\\sum_{n=1}^{\\alpha_i}{\\phi_n } \\leq \\sum_{k=0}^{i-1}{a_k } , & i=1 , \\ldots , a,\\\\ & \\displaystyle\\sum_{n=1}^{\\delta_j}{\\phi_n } \\geq \\sum_{k=1}^{j}{d_k } , & j=1 , \\ldots , d,\\\\ & \\displaystyle \\phi_n \\geq 0 , \\quad 0 \\leq l_n^{on } \\leq l_n , & n=1 , \\ldots , n , \\end{array}\\ ] ] where we define @xmath86 if @xmath87 . for any convex @xmath78 , @xmath88",
    "is called its perspective , which is a jointly convex function of @xmath89 @xcite .",
    "since the constraints are all linear , it then readily follows that is a convex problem .",
    "let @xmath90 where @xmath91 and @xmath92 denote the lagrange multipliers associated with the causality and deadline constraints , respectively .",
    "the lagrangian of is given by : @xmath93 }     + \\sum_{i=1}^{a}{\\lambda_i(\\sum_{n=1}^{\\alpha_i}{\\phi_n- \\sum_{k=0}^{i-1}{a_k } } ) }     -\\sum_{j=1}^{d}{\\mu_j(\\sum_{n=1}^{\\delta_j}{\\phi_n}-\\sum_{k=1}^{j}{d_k})}\\\\ \\displaystyle = & \\mathcal{c}(\\boldsymbol{\\lambda})+\\sum_{n=1}^{n}{[(p(\\frac{\\phi_n}{l_n^{on}})+\\rho)l_n^{on}-(\\sum_{j = j_n}^{d}{\\mu_j}-\\sum_{i = i_n}^{a}{\\lambda_i})\\phi_n]}\\\\ \\end{aligned}\\ ] ] where we define @xmath94 , @xmath95 , and @xmath96 @xmath97 .",
    "let @xmath98 denote the optimal solution for and @xmath99 the optimal lagrange multiplier vector for its dual problem .",
    "upon defining @xmath100 , we can derive from the karush - kuhn - tucker ( kkt ) optimality conditions that : @xmath101 , @xmath102}\\\\ \\text{s.t . }",
    "\\quad & \\phi_n \\geq 0 , \\quad 0 \\leq l_n^{on } \\leq l_n.\\\\ \\end{aligned}\\ ] ] in addition , the non - negative lagrange multipliers @xmath103 and @xmath104 satisfy the complementary slackness conditions : @xmath105 @xmath106 let @xmath107 if @xmath108 , and @xmath109 take an arbitrary non - negative value when @xmath110 , @xmath101 .",
    "it is obvious that @xmath111 is the optimal solution to . from  , the sufficient and necessary optimality conditions for are : @xmath112l_n^{on}}\\\\ \\text{s.t . }",
    "\\quad & r_n \\geq 0 , \\;\\ ; 0 \\leq l_n^{on } \\leq l_n;\\\\ \\end{split } \\right .",
    "\\;\\ ; \\forall n.\\ ] ] @xmath113 @xmath114      next , we develop an efficient algorithm to find the optimal @xmath111 satisfying . let @xmath115 denote the first derivative of @xmath78 . for any @xmath116 , we can derive from that @xmath117}.\\ ] ] as @xmath78 is strictly convex and increasing , this is equivalent to : @xmath118 . substituting it into implies : @xmath119}.\\ ] ] now we consider a bits - per - joule ee - maximizing rate : @xmath120 note that since @xmath121 is a ( convex - over - linear ) quasi - convex function , it has a unique minimizer @xmath0 , which can be efficiently obtained by a simple bisectional search @xcite .",
    "interestingly , we can rely on to show that the optimal schedule depends on the ee - maximizing rate @xmath0 :    _ the optimal transmission policy for ( [ eq3 ] ) can only adopt one of the following three ( `` off '' , `` on - off '' and `` on '' ) strategies per epoch @xmath9 : ( i ) @xmath110 , ( ii ) @xmath122 , @xmath123 , or ( iii ) @xmath124 , @xmath76 .",
    "_    see appendix  a.    lemma 1 dictates that any transmit - rate @xmath125 should not be adopted in the optimal policy .",
    "in fact , since @xmath0 maximizes the bits - per - joule ee , we can show that a transmission strategy with an @xmath125 over an epoch is always dominated by an on - off transmission with @xmath0 , which can use less energy to deliver the same data amount .",
    "only when the data deadlines are strict ( i.e. , no further delay is allowed ) should we adopt an @xmath126 ; in this case , the transmitter should be always on , i.e. , @xmath127 , over epoch @xmath9 .",
    "let @xmath128 denote the inverse function of @xmath129 .",
    "we can obtain from that @xmath130}:=p'^{-1}(w_n ) =   \\log(|h|^2 w_n ) \\ ] ] which is an increasing function of @xmath131 .",
    "using this fact and the complementary slackness conditions  , we can then establish that :    _ in the optimal policy , the rate @xmath109 can only change at @xmath17 or @xmath132 where the causality or deadline constraints are met with equality ; specifically , the rate increases after a @xmath17 where @xmath133 , and it decreases after a @xmath132 where @xmath134 . _",
    "see appendix  b.    lemma 2 reveals that the optimal rate control policy follows a specific pattern . due to the convexity of rate function @xmath5",
    ", a constant transmit - rate should be maintained whenever possible , to minimize the total energy consumption . in the optimal policy",
    ", the rate needs to be changed only when the data causality or deadline constraints become active .",
    "a causality constraint is active , i.e. , all available data is cleared up at @xmath17 when the amount of data arrivals so far is small ; as a result , a lower rate is maintained before @xmath17 than after .",
    "similarly , a deadline constraint is active at @xmath132 when the deadline requirements are strict , thus a higher rate is maintained before @xmath132 than after .",
    "this is in the same spirit with the `` string tautening '' calculus approach developed in .",
    "based on the rules revealed in lemmas  12 , we then put forth an @xmath0-clipped `` string tautening '' procedure in algorithm  1 to construct the optimal policy .    1.13    ' '' ''    height 0.1pt depth 0.3pt * algorithm  1 * @xmath0-clipped `` string tautening ''    ' '' ''    height 0.1pt depth 0.3pt    @xmath135 , and @xmath136 , @xmath101 ; = firstchanger(@xmath137 ) ; find a set of @xmath138 satisfying @xmath139 ; @xmath140 , @xmath141 ; @xmath142 ; update @xmath143 ;    sort @xmath144 , and @xmath145 , together in ascending order into a vector @xmath146 ; @xmath147 , @xmath148 , @xmath149 , @xmath150 ; @xmath151 ; @xmath152 , @xmath153 , @xmath154 ;    @xmath155 ; @xmath156 , @xmath157 , @xmath158 ;    return @xmath159 , @xmath160 , @xmath161 ; return @xmath162 , @xmath163 , @xmath164 ;    ' '' ''    height 0.1pt depth 0.3pt    the key component in algorithm  1 is the function firstchanger , which relies on lemmas  12 to determine the first rate - changing time @xmath165 and the invariant rate @xmath3 used before it in the optimal policy for the @xmath143 system . in this function ,",
    "@xmath166 and @xmath167 denote the epoch indices for the two candidate first rate - changing time instants , whereas @xmath168 and @xmath169 denote the candidate rates that are maintained over @xmath170 $ ] or @xmath171 $ ] .",
    "suppose that a constant transmit - rate @xmath172 , @xmath173 , is maintained in the optimal policy such that the corresponding @xmath15th causality constraint is met with equality at @xmath17 , i.e. , @xmath133 .",
    "by lemma  1 , @xmath174 holds , and an @xmath175 renders @xmath76 , @xmath173 .",
    "this implies that the packets @xmath72 can only be delivered at @xmath17 by either ( i ) a transmission with @xmath0 over the `` on '' periods of a total length @xmath176 , or ( ii ) a transmission with a rate @xmath177 over the entire interval @xmath178 $ ] of length @xmath179 , if @xmath180 . in a simpler form",
    ", we have @xmath151 .",
    "similarly , if a constant transmit - rate @xmath181 , @xmath182 , is maintained such that the @xmath34th deadline constraint is met with equality at @xmath132 , we must have @xmath155 .    in the function firstchanger , @xmath168 is updated as @xmath183 , yielding @xmath184 .",
    "note that @xmath185 is in fact the upper bound for an invariant rate that can be used to satisfy the @xmath15th causality constraint .",
    "hence , @xmath186 is the maximum value for an invariant rate to satisfy all the causality constraints so far .",
    "similarly , @xmath187 is the minimum rate to satisfy all the deadline constraints so far . at a certain @xmath17 or @xmath132 ,",
    "if we have @xmath188 , then there does not exist an invariant rate to satisfy all the causality and deadline constraints , i.e. , the rate needs to be changed before this specific @xmath17 or @xmath132 .",
    "the first rate - changing time instant is obtained by simply comparing @xmath166 with @xmath167 to find which type of constraint first becomes active . if the returned @xmath189 , we reuse function firstchanger for a new @xmath190 system over the remaining time to find the next rate - changing time and the next optimal transmit - rate . the update of the new @xmath190 needs to take into account the time offset as well as the adjustment of @xmath191 and @xmath192 based on the data amount that has been delivered .",
    "all the rate - changing time instants and the corresponding transmit - rates can be determined by repeatedly calling function firstchanger , until the entire optimal policy is obtained .",
    "the global optimality and efficiency of the proposed algorithm 1 are formally stated in the following theorem :    _ algorithm 1 computes the optimal transmission policy for ( [ eq3 ] ) with a linear complexity @xmath193 .",
    "_    see appendix  c.    we prove theorem 1 by showing the existence of a lagrange multiplier vector @xmath99 , with which @xmath194 and @xmath195 satisfy the sufficient and necessary optimality conditions . the global optimality of @xmath196 thus follows . in the search of the rate - changing points in algorithm 1 , we only need to go through the @xmath197 data arrival or deadline time instants , leading to a complexity @xmath193 . relying on the optimality conditions to directly construct the optimal solution for the problem at hand ,",
    "the proposed algorithm  1 is much more efficient than general solvers such as the ( iterative ) interior point methods per iteration . ] in terms of computational complexity .",
    "this is also corroborated by our simulations , which indicate that the cpu time for algorithm  1 to obtain the optimal schedule can be less than 0.01% of that with the standard cvx program @xcite .",
    "the optimal policy obtained by algorithm 1 can be visualized by modifying the calculus approach in .",
    "define the data arrival and minimum departure curves @xmath198 and @xmath199 as : @xmath200 } , \\quad 0 \\leq t \\leq t,\\\\ \\displaystyle d_{\\text{min}}(t)=\\sum_{j=1}^{d}{[d_j u(t - t_{\\delta_j } ) ] } , \\quad 0 \\leq t \\leq t , \\end{array}\\ ] ] where @xmath201 is the unit - step function : @xmath202 , if @xmath203 , and @xmath204 otherwise . in the ideal ( @xmath75 ) circuit power case ,",
    "the optimal transmission policy requires the transmitter to be always on , i.e. @xmath76 , @xmath101 @xcite . in this case , consider a piece - wise linear data departure curve : @xmath205 where the rates @xmath206 per epoch serve as the piece - wise slopes for @xmath207 .",
    "following , the optimal departure curve @xmath208 is shown to be the trajectory of letting a string tie its one end at the origin @xmath209 , pass the other end through @xmath210 , and then taut between @xmath198 and @xmath199 ; see fig .  [ visualization ] .",
    "consequently , the optimal @xmath211 for the ideal circuit power case can be derived from @xmath208 .",
    "interestingly , the optimal @xmath212 for the non - ideal circuit power case can be simply obtained by an @xmath0-clipping process over @xmath211 .",
    "specifically , we can set : @xmath213 with , the corresponding optimal data departure curve under non - ideal circuit power @xmath214 is plotted in fig .",
    "[ visualization ] . comparing to @xmath208 , the same amount of data @xmath215 departs per epoch @xmath9 in @xmath214 . yet , different from @xmath208 , an on - off transmission strategy is adopted when @xmath216 for epoch @xmath9 .",
    "this is because the total energy cost for @xmath217 over such an epoch is in fact minimized by a transmission with @xmath0 over an `` on '' period of length @xmath218 , i.e. , @xmath219 for the epoches with @xmath220 , however , any on - off strategy @xmath221 with @xmath222 and @xmath223 only increases the energy cost since @xmath224 where the inequality is due to the fact that @xmath121 is strictly increasing when @xmath225 .",
    "hence , the data departures over these epoches remain the same in @xmath208 and @xmath214 .",
    "it is worth noting that the optimal transmission strategy is in fact not unique in the on - off transmission epoches . in an on - off period including e.g. , epoch @xmath226 to epoch @xmath227 , different from @xmath228 computed in ( [ eq17 ] )",
    ", we can have another set of @xmath229 such that @xmath230 . as long as @xmath229 are feasible , they are also optimal .",
    "in fact , we may even let @xmath231 ( i.e. , transmitter is `` off '' ) for some epoches , while carrying out transmission only over the remaining epoches in an on - off period per lemma 1 .          to obtain the optimal benchmark",
    ", we assumed a non - causal case where complete information about the packet arrivals during the time interval @xmath43 $ ] is available .",
    "when a - priori knowledge of the future packet arrivals is not available in practice , we can develop a heuristic online scheme based on the proposed optimal offline policy .",
    "the idea is to schedule the packet transmissions according to the optimal rate control policy based on the current packet arrivals , and reschedule when new packets arrive .",
    "for instance , suppose that @xmath232 packets arrive at time instant @xmath233 with ( different ) deadline requirements .",
    "we can construct the set @xmath64 in accordance to the deadline requirements , and let the set @xmath234 , where @xmath235 is determined by the largest deadline @xmath236 .",
    "with such a @xmath190 , we run the proposed algorithm  1 to find the optimal transmission policy until new packets arrive at @xmath237 . then we treat the current time instant @xmath237 as new `` @xmath233 '' instant , and update the set @xmath64 by subtracting all @xmath132 by @xmath237 , removing the past deadlines ( i.e. with negative @xmath132 after subtraction ) , and then including the deadline requirements for the newly arriving packets .",
    "the set @xmath63 also needs to be updated .",
    "note that we always have @xmath234 , where @xmath232 is updated as the sum of the remaining packets in the buffer and the newly arriving packets , and @xmath235 is determined by the last deadline in the updated @xmath64 .",
    "algorithm  1 is run for the new @xmath190 , and the subsequent packet transmissions follow the resultant new policy .",
    "this process continues until all the packets are delivered .",
    "in this section , we generalize the proposed approach to a time - varying wireless channel , where the channel state @xmath2 in general changes with time . with a little abuse of notation , here",
    "we redefine an epoch as the interval between two consecutive channel or data state changing instants .",
    "again , over the entire transmission interval @xmath6 $ ] , assume that there are @xmath7 ( channel or data ) state changing instants @xmath238 .",
    "there are @xmath239 epoches with length @xmath240 .",
    "the packet arrival process and deadline requirements are modeled by set @xmath241 and set @xmath242 .",
    "let @xmath243 denote the channel coefficient at epoch @xmath9 ; and @xmath244 .    with the power function @xmath245",
    ", we formulate the total energy consumption minimization problem over time - varying channels as follows : @xmath246 } \\\\",
    "\\text{s.t . } &   \\displaystyle \\sum_{n=1}^{{\\alpha_i}}{(r_n l_n^{on } ) } \\leq \\sum_{k=0}^{i-1}{a_k } , & i=1 , \\ldots , a , \\\\ & \\displaystyle \\sum_{n=1}^{{\\delta_j}}{(r_n l_n^{on } ) } \\geq \\sum_{k=1}^{j}{d_k } , & j=1 , \\ldots , d , \\\\ & \\displaystyle r_n \\geq 0 , \\;\\ ; 0 \\leq l_n^{on } \\leq l_n , & n=1 , \\ldots , n. \\end{array}\\ ] ] with a change of variable @xmath83 , the non - convex problem in can be also reformulated into a convex program for @xmath247 .",
    "let @xmath248 collect the optimal lagrange multipliers , and @xmath100 .",
    "relying on the kkt conditions for the convex reformulation , we can follow the similar lines in section iii - a to derive the sufficient and necessary optimality conditions for : @xmath249 l_n^{on } } \\\\ \\text{s.t . }",
    "\\quad & r_n \\geq 0 , \\;\\ ; 0 \\leq l_n^{on } \\leq l_n ; \\\\ \\end{split } \\right .",
    "\\;\\ ; \\forall n.\\ ] ] @xmath250 @xmath251 for any @xmath116 , we can derive from that @xmath252}.\\ ] ] let @xmath253 denote the first derivative of @xmath254 .",
    "we clearly have : @xmath255 , leading to @xmath256 , and @xmath257 .",
    "the latter is the celebrated water - filling form , where @xmath131 serves as a water - level .",
    "substituting @xmath258 into implies : @xmath259 l_n^{on}}.\\ ] ] for each @xmath243 per epoch , we can obtain an ee - maximizing rate in .",
    "note that @xmath260 is different for different @xmath243 per epoch . as with lemma  1 , relying on",
    ", we can show that :    _ the optimal transmission policy for ( [ tv.eq3 ] ) can only adopt one of the following three ( `` off '' , `` on - off '' and `` on '' ) strategies per epoch @xmath9 : ( i ) @xmath110 , ( ii ) @xmath261 , @xmath123 , or ( iii ) @xmath262 , @xmath76 . _    as with lemma 2",
    ", we can establish that :    _ in the optimal policy for ( [ tv.eq3 ] ) , the rates for epoches @xmath9 with @xmath108 are given by : @xmath263 , where the water - level @xmath131 can only increase after a @xmath17 where @xmath264 , and decrease after a @xmath132 where @xmath265 .",
    "_    similar to the time - invariant channel case , lemma 3 states that the optimal policy depends on the ee - maximizing rates ; i.e. , any transmit - rate less than the ee - maximizing rate @xmath260 should not be adopted at epoch @xmath9 .",
    "however , the value of @xmath260 is in general different for different @xmath243 across epoches . in both time - invariant and time - varying channel cases ,",
    "the change of `` water - level '' @xmath131 follows the same pattern : it increases after a casuality constraint becomes tight , and decreases after a deadline constraint is tight .",
    "given the same @xmath131 , the same transmit - rate is maintained in the time - invariant case .",
    "this leads to the @xmath0-clipped `` string - tautening '' procedure in algorithm 1 . for the time - varying channel case , the same water - level yields different transmit - power and rate when channel @xmath243 varies ;",
    "specifically , higher rates are employed for better channels through a water - filling type power allocation for the most efficient energy usage .",
    "this revealed structure of the optimal policy implies that we can modify algorithm 1 to implement a water - level based `` string - tautening '' approach to finding the optimal solution for .    to this end ,",
    "let @xmath266 or @xmath267 denote the constant water - level to make the @xmath15th causality or the @xmath34th deadline constraint become tight at @xmath17 or @xmath132 .",
    "given an invariant water - level @xmath268 before @xmath17 ( or @xmath132 ) , the optimal rate per epoch @xmath9 is given by @xmath269 if @xmath108 .",
    "define : @xmath270 since we must have @xmath271 if @xmath108 per lemma  3 , we can have @xmath108 only when @xmath272 ( recall that @xmath273 is an increasing function ) . with the water - level @xmath268 , the optimal strategy per epoch @xmath9 is then : @xmath274 define data departure @xmath275 per epoch @xmath9 . by",
    ", we have : @xmath276 , & \\text{if } \\ ; w = w_{ee}(h_n ) , \\\\ \\phi_n(w ; h_n)=p'^{-1}(w ; h_n ) l_n , & \\text{if } \\ ; w > w_{ee}(h_n ) .",
    "\\end{array } \\right.\\ ] ] using ( [ tv.eq17 ] ) , the values of @xmath266 and @xmath267 can be calculated by solving the equations : @xmath277 note that @xmath278 and @xmath279 are increasing in @xmath268 ; see an example in fig .",
    "[ phi ] . as a result",
    ", the equations in can be solved by a bisectional search .",
    ": suppose a transmission over 5 epoches .",
    "sort @xmath280 in ascending order such that : @xmath281 .",
    "( i ) if @xmath282 , it follows from ( [ tv.eq17 ] ) that @xmath283 , @xmath284 ; hence , the total data departure is 0 .",
    "( ii ) when @xmath285 , @xmath283 , @xmath286 ; the total departure is given by @xmath287 which ranges from 0 to @xmath288 , depending on the value of @xmath289 .",
    "( iii ) for @xmath290 , the total departure is still @xmath287 which increases as @xmath268 increases .",
    "( iv ) when @xmath291 , @xmath283 , @xmath292 ; the total departure is @xmath293 , which ranges from @xmath294 to @xmath295 . and",
    "so on.,width=384 ]    with @xmath296 and @xmath297 obtained , the optimal @xmath298 for can be computed by a @xmath280-clipped `` water - tautening '' approach in algorithm  2 .    1.13    ' '' ''    height 0.1pt depth 0.3pt * algorithm  2 * @xmath280-clipped `` water - tautening ''    ' '' ''    height 0.1pt depth 0.3pt    @xmath135 , @xmath136 , @xmath110 , @xmath101 ; = firstchange(@xmath299 , @xmath300 , @xmath301 ) ; @xmath302 ; @xmath303 ; @xmath304 ; @xmath305 , and update @xmath306 ; @xmath307 , @xmath308 , @xmath149 , @xmath150 ; sort @xmath14 , @xmath33 in ascending order into @xmath309 ; calculate @xmath296 by solving ( [ tv.eq18 ] ) ; @xmath152 , @xmath310 , @xmath154 ; calculate @xmath297 by solving ( [ tv.eq18 ] ) ; @xmath156 , @xmath311 , @xmath158 ; return @xmath159 , @xmath312 , @xmath161 ; return @xmath162 , @xmath313 , @xmath164 ;    ' '' ''",
    "height 0.1pt depth 0.3pt    the key component in algorithm  2 is the function firstchangew , which determines the first water - level changing time @xmath165 and the water - level @xmath268 used before @xmath165 .",
    "the two candidate water - levels are updated as : @xmath314 and @xmath315 , which are in fact the maximum and minimum values for an invariant water - level to satisfy all the causality and deadline constraints before @xmath316 , respectively ; and @xmath317 , @xmath318 are the corresponding @xmath14 or @xmath33 yielding @xmath319 , @xmath320 .",
    "if we have @xmath321 at a certain @xmath322 , then the water - level needs to be changed before @xmath322 since no invariant water - level can satisfy all the causality and deadline constraints so far . the first water - level changing time can be obtained by comparing @xmath317 and @xmath318 to see which type of constraint first becomes tight . when the returned @xmath189 , function firstchangew can be reused for a new @xmath323 system over the remaining time to find the next water - level changing time and the next water - level . note that function firstchangew also returns the delivered data amount @xmath324 before @xmath325 , which is necessary for determining the length of the `` on '' period for the possible on - off epoch @xmath326 with @xmath327 .    as with theorem 1",
    ", we can establish that :    _ algorithm 2 computes the optimal transmission policy for with a linear complexity @xmath193 . _",
    "again , we prove theorem  2 by showing the existence of a lagrange multiplier vector @xmath99 , with which @xmath194 and @xmath195 satisfy the sufficient and necessary optimality conditions . in the search of rate - changing points , we only need to go through the @xmath197 data arrival or deadline time instants .",
    "consider packet transmission over @xmath328 seconds and the number of total packet arrivals is @xmath329 .",
    "the bandwidth for the system is @xmath330 khz while each packet contains @xmath330k bits .",
    "the power - rate relationship is dictated by the shannon - capacity formula in .",
    "the non - zero circuit power during the `` on '' mode is @xmath331 watts .",
    "( i ) assume first a time - invariant channel with power gain @xmath332 and unit noise variance .",
    "to validate the proposed algorithm  1 , we use it and the standard cvx toolbox to solve when the transmission interval @xmath333 , @xmath334 , @xmath335 , @xmath336 , @xmath337 , @xmath338 seconds . for each @xmath328 value , we test @xmath339 trial cases where the intervals @xmath340 and @xmath341 follow a uniform distribution with mean @xmath342 , respectively . it is confirmed that the two methods yield the same rate control policies for all trial cases , demonstrating the correctness of the proposed algorithm  1 . on the other hand , since algorithm  1 directly constructs the optimal solution for the problem at hand relying on the optimality conditions , it is much more efficient than the cvx toolbox in terms of computational complexity .",
    "[ cputime ] depicts the average cpu time required for the two methods .",
    "we can observe that the required cpu time of the proposed algorithm  1 is less than 0.01% of that of the standard cvx toolbox for all @xmath328 values .",
    "( ii ) consider next a time - varying channel where the random channel coefficients per second are independently generated from a rayleigh distribution with average power @xmath343 .",
    "we use algorithm 2 and the standard cvx toolbox to solve .",
    "again , it is confirmed that algorithm  2 and the cvx toolbox yield the same rate control policies for all trial cases .",
    "[ cputime ] also includes the average required cpu time with these two methods .",
    "it is observed that algorithm  2 only requires a cpu time less than 0.1% of that with the cvx toolbox for all @xmath328 values .",
    "the significantly reduced complexity can clearly benefit the real - time implementation of the algorithm in e.g. , the proposed online scheme .",
    "next , in terms of energy consumption , we compare the optimal policies obtained by our proposed algorithm  1 and its online scheme ( as described in section  iii - d ) , as well as two heuristic policies in the time - invariant channel case . heuristic  1 is obtained by always selecting a rate to meet the next active causality or deadline constraint with equality .",
    "heuristic  2 is obtained by using the calculus approach in under an ideal circuit - power assumption , even though the circuit - power consumption is in fact non - ideal .",
    "both heuristic approaches can provide a feasible policy that satisfies all the causality and deadline constraints in for fair comparison .",
    "[ energy ] provides the average energy consumption with the policies obtained by algorithm  1 and the two heuristic approaches , when @xmath329 , and @xmath344 seconds .",
    "again , for each @xmath328 value , we test 50 trial cases where the causality and deadline constraints are randomly generated .",
    "the proposed algorithm  1 significantly outperforms the two heuristic counterparts , always yielding the smallest energy consumption for every @xmath328 value .",
    "compared to the heuristic policies , the energy saved from the optimal policy becomes more significant as the value of @xmath328 increases , i.e. , as the entire transmission interval becomes longer . for small @xmath328 values ,",
    "heuristic  2 has approximately the same performance as the proposed algorithm  1 .",
    "the reason is that the constraints are usually strict and thus the optimal transmit - rates are usually larger than @xmath0 when @xmath328 value is small ; as a result , in the optimal transmission policy produced by algorithm  1 , there are very few on - off epoches , i.e. the transmitter is always selected to be on , rendering the policies by algorithm  1 and heuristic  2 become almost identical . for large @xmath328 values , heuristic  2 scheme becomes almost the same as the naive heuristic  1 .",
    "the optimal policy can save up to 100 times the energy over the naive heuristic  1 for small @xmath328 , and can save @xmath345 times the energy over the heuristic ones for large @xmath328 .",
    "it is also observed that the energy consumption of the proposed online scheme is close to that of the optimal offline strategy , especially for large @xmath328 . in such a case ,",
    "even the proposed online scheme without the knowledge of future arrivals can save almost @xmath345 times the energy over the heuristic ones with complete a - priori information about the packet arrivals .",
    "lastly , we compare the energy consumption between the proposed algorithm  2 , heuristic  1 and 2 , as well as another heuristic method ( called heuristic  3 ) in the time - varying channel case . specifically , heuristic  3 is obtained by using algorithm  1 under a time invariant channel assumption , even though the channel is in fact time - varying .",
    "[ energy_tv ] shows the energy consumption of these schemes , where each result is averaged over 50 random trials .",
    "the proposed algorithm  2 apparently outperforms the heuristic counterparts , always yielding the smallest energy consumption for each trial case .",
    "it is observed that the optimal policy obtained by our algorithm  2 can save up to 100 times the energy over heuristic  1 and 2 , and 5 times the energy over heuristic  3 , especially for large @xmath328 values .",
    "we proposed a novel unified approach to optimizing the energy - efficient transmission policy for delay - limited bursty packet arrivals under non - ideal circuit power consumption .",
    "efficient algorithms were developed to find the optimal offline solutions with a low computational complexity for both time - invariant and time - varying channels .",
    "an insightful visualization was presented to reveal the specific structure of the optimal policy .",
    "our approach can provide the optimal benchmarks for practical schemes . based on the proposed optimal offline policies , development of energy - efficient online scheduling policies",
    "was also discussed and will be further explored in our future work .",
    "generalization of our approach to wireless networks with multiple interfering links will be also pursued .",
    "define @xmath346 . taking the first derivative of @xmath347",
    ", we have : @xmath348 due to its `` convex - over - linear '' form , we can show that @xmath347 first decreases and then increases with @xmath3 , and it reaches the minimum at @xmath0 .",
    "this implies : @xmath349 if we have an @xmath350 when @xmath108 , it follows from that @xmath351 .",
    "but when @xmath351 , implies that @xmath110 , which leads to a contradiction .",
    "hence , @xmath350 is not allowed when @xmath108 .",
    "clearly , @xmath356 changes only when @xmath131 changes its value . by the definition",
    "@xmath357 , if @xmath358 , @xmath359 , and @xmath360 , @xmath361 , then a constant @xmath362 will be used over all the epoches .",
    "we will have a change only when @xmath363 for a certain @xmath364 $ ] , or @xmath365 for a certain @xmath366 $ ] , which occurs at the corresponding @xmath17 or @xmath132 .",
    "in addition , it follows from the complementary slackness conditions  that we must have @xmath133 or @xmath367 at such a @xmath17 or @xmath132 .    if a change occurs at a certain @xmath17 , then @xmath368 . for the epoch @xmath369",
    ", we have @xmath370 ; thus @xmath371 . on the other hand , for the epoch @xmath372",
    ", we have @xmath373 ; thus @xmath374 . therefore , @xmath375 ; consequently , the rate increases after @xmath17 since @xmath376 is an increasing function of @xmath131 .        due to the rules used in the function firstchanger , it can be shown that the rate - changing pattern in the transmission policy @xmath381 produced by algorithm  1 is consistent with the optimal structure revealed in lemma  2 , i.e. , ( i ) if the rate in use is first @xmath3 and then changed to @xmath382 at @xmath165 where @xmath383 , then we must have @xmath384 ; and ( ii ) if the rate @xmath3 is changed at @xmath165 where @xmath385 , then we must have the next rate @xmath386 .",
    "[ appendix ] provides an illustration and the sketch of the proof for this claim .     by function firstchanger ,",
    "the rate used before @xmath165 is then given by @xmath387 , and the @xmath15th causality constraint is tight : @xmath388 . selecting",
    "@xmath389 also implies there exists a @xmath390 such that @xmath391 , @xmath392 , and @xmath393 .",
    "suppose w.l.o.g .",
    "that @xmath394 , and we have @xmath395 with @xmath396 and @xmath397 with @xmath398 . after selecting @xmath399 as the first rate - changing point , we construct the new @xmath400 system where @xmath235 becomes 0 and @xmath401 becomes the new @xmath402 ( we use @xmath403 to distinguish the new system from the old one ) .",
    "case ( a ) : if @xmath404 , then function firstchanger selects @xmath405 as the next rate - changing point and rate @xmath406 . case ( b ) : if @xmath407 , then function firstchanger selects @xmath408 as the next rate - changing point ( when there exists an @xmath14 with @xmath409 ) or a constant rate is maintained till the end ( otherwise ) . in either situation , we have @xmath410 .",
    "( ii ) similarly , if the rate @xmath3 is changed at @xmath165 where @xmath385 , we can show that the next rate @xmath386 ; see cases ( c ) and ( d).,width=384 ]    suppose that the rate changes @xmath411 times in @xmath412 yielded by algorithm  1 .",
    "we divide the policy into @xmath413 phases : rate @xmath414 over epoches @xmath415 $ ] , @xmath416 over epoches @xmath417 $ ] , @xmath418 , @xmath419 over epoches @xmath420 $ ] .",
    "we can then construct a set of lagrange multipliers @xmath421 as follows :    let @xmath422 , where the inequality is due to the strictly increasing of @xmath5 , leading to positivity of @xmath5 .",
    "let @xmath423 , if @xmath424 for a certain @xmath15 and @xmath425 , or let @xmath426 , if @xmath427 for a certain @xmath34 and @xmath428 , @xmath429 .",
    "we have shown that the rate @xmath430 if the causality constraint is tight at @xmath431 , or @xmath432 if the deadline constraint is tight at @xmath431 . recalling that @xmath433 is increasing in @xmath3",
    ", it readily follows that @xmath434 or @xmath435 , depending on which type of constraint is tight at @xmath436 . except these @xmath413 positive @xmath437 and @xmath438 or @xmath439 , all other lagrange multipliers in @xmath99",
    "are set to zero .",
    "with such a @xmath99 , the complementary slackness conditions  clearly hold . using such",
    "a @xmath99 also leads to @xmath440 , @xmath441 $ ] ( with @xmath442 and @xmath443 ) .",
    "this implies that @xmath444 , @xmath441 $ ] .",
    "in addition , the construction of @xmath381 ensures @xmath76 when @xmath445 , and computes a feasible set of @xmath123 when @xmath446 in each phase @xmath447 .",
    "this guarantees that each pair of @xmath448 satisfies ; thus , @xmath449 follows the optimal structure in lemma  1 .",
    "we have proven that @xmath298 yielded by algorithm  1 and the lagrange multipliers @xmath99 constructed accordingly , satisfy the sufficient and necessary optimality conditions  for .",
    "it then readily follows that @xmath381 is a global optimal policy for . in the search of the rate - changing points and the associated rates in algorithm  1 ,",
    "we only need to go through the @xmath197 data arrival or deadline time instants as shown in fig .",
    "2 ; hence , the algorithm has a complexity @xmath193 .",
    "z. nan , t. chen and x. wang , `` energy - efficient transmission of delay - limited bursty data packets over time - varying channels under non - ideal circuit power , '' in _ proc .",
    "chinasip _ , xian , china , july 2014 .",
    "x. wang and z. li , `` energy - efficient transmissions of bursty data packets with strict deadlines over time - varying wireless channels , '' _ ieee trans .",
    "wireless commun .",
    "5 , pp . 25332543 , may 2013 ."
  ],
  "abstract_text": [
    "<S> this paper develops a novel approach to obtaining energy - efficient transmission schedules for delay - limited bursty data arrivals under non - ideal circuit power consumption . assuming a - prior knowledge of packet arrivals , deadlines and channel realizations , we show that the problem can be formulated as a convex program . for both time - invariant and time - varying fading channels </S>",
    "<S> , it is revealed that the optimal transmission between any two consecutive channel or data state changing instants , termed epoch , can only take one of the three strategies : ( i ) no transmission , ( ii ) transmission with an energy - efficiency ( ee ) maximizing rate over part of the epoch , or ( iii ) transmission with a rate greater than the ee - maximizing rate over the whole epoch . </S>",
    "<S> based on this specific structure , efficient algorithms are then developed to find the optimal policies that minimize the total energy consumption with a low computational complexity . </S>",
    "<S> the proposed approach can provide the optimal benchmarks for practical schemes designed for transmissions of delay - limited data arrivals , and can be employed to develop efficient online scheduling schemes which require only causal knowledge of data arrivals and deadline requirements .    </S>",
    "<S> * keywords : * energy efficiency , bursty arrivals , strict deadlines , non - ideal circuit power , convex optimization . </S>"
  ]
}
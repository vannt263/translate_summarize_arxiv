{
  "article_text": [
    "logic programming under the answer set semantics ( asp ) has been recognized as an expressive nonmonotonic reasoning framework for declarative problem solving and knowledge representation @xcite .",
    "recently , there has been an extensive interest in combining asp with other logics or reasoning mechanisms .",
    "one of the main interests in this direction is the integration of asp with description logics ( dls ) for the semantic web .",
    "this is due to the fact that , although ontologies expressed in dls and rules in asp are two prominent knowledge representation formalisms , each of them has limitations on its own . as ( most ) dls",
    "are fragments of ( many sorted ) first order logic , they do not support default , typicality , or nonmonotonic reasoning in general . on the other hand , thought there are some recent attempts to extend asp beyond propositional logic , the core , effective reasoning methods are designed essentially for computation of ground programs ; in particular , asp typically does not reason with unbounded or infinite domains , nor does it support quantifiers .",
    "an integration of the two can offer features of both .",
    "a number of proposals for integrating ontology and ( nonmonotonic ) rules have been put forward @xcite .",
    "the existing approaches can be roughly classified into three categories . in the first , typically a nonmonotonic formalism",
    "is adopted which naturally embodies both first - order logic and rules , where ontology and rules are written in the same language resulting in a tight coupling @xcite .",
    "the second is a loose approach : an ontology knowledge base and rules share the same constants but not the same predicates , and inference - based communication is via a well - designed interface , called dl - atoms @xcite . in the third approach , rules are treated as hybrid formulas where in model building the predicates in the language of the ontology are interpreted classically , whereas those in the language of rules are interpreted nonmonotonically @xcite .",
    "the loose coupling approach above stands out as quite unique and it possesses some advantages . in many practical situations , we would like to combine existing knowledge bases , possibly under different logics . in this case , a notion of interface is natural and necessary .",
    "the formulation of dl - programs adopts such interfaces to ontology knowledge bases .",
    "it is worth noticing that dl - programs share many similarities with another recent interesting formalism , called _ nonmonotonic _ _ multi - context systems _ , in which knowledge bases under arbitrary logics communicate through _ bridge rules _ @xcite .    informally , a dl - program is a pair @xmath0 , where @xmath1 is an ontology knowledge base expressed in a description logic , and @xmath2 a logic program , where rule bodies may contain queries to the knowledge base @xmath1 , called _ dl - atoms_. such queries allow to specify inputs from a logic program to the ontology knowledge base . in more detail ,",
    "a dl - atom is of the form @xmath3(\\vec t)\\ ] ] where @xmath4 is a query to @xmath1 , and for each @xmath5 , @xmath6 is a concept or a role in @xmath1 , @xmath7 is a predicate symbol in @xmath2 having the same arity as @xmath6 , and the operator @xmath8 . intuitively , @xmath9 ( resp .",
    ", @xmath10 ) increases @xmath6 ( resp .",
    ", @xmath11 ) by the extension of @xmath7 , while @xmath12 ( called the _ constraint operator _ ) constrains @xmath6 to @xmath7 , i.e. , for an expression @xmath13 , for any tuple of constants @xmath14 , in the absence of @xmath15 ) we infer @xmath16 .",
    "et al_. proposed weak and strong answer sets for dl - programs @xcite , which were further investigated from the perspective of loop formulas @xcite and from the perspective of the logic of here - and - there @xcite .",
    "the interest in dl - programs is also due to a technical aspect - it has been a challenging task to embed dl - programs into a general nonmonotonic logic . for example",
    ", mknf @xcite is arguably among the most expressive and versatile formalisms for integrating rules and description logic knowledge bases @xcite .",
    "although motik and rosati were able to show a polynomial embedding of a number of other integration formalisms into mknf , for dl - programs they only showed that if a dl - program does not contain the constraint operator @xmath12 , then it can be translated to a ( hybrid ) mknf knowledge base while preserving its strong answer sets .",
    "the embedding into quantified equilibrium logic in @xcite is under the assumption that all dl - atoms containing an occurrence of @xmath12 are nonmonotonic .",
    "they do not deal with the case when a dl - atom involving @xmath12 may be monotonic .",
    "the embedding into first - order autoepistemic logic ( ael ) is under the weak answer set semantics @xcite . for the strong answer set semantics ,",
    "it is obtained by an embedding of mknf into first - order autoepistemic logic together with the embedding of dl - programs into mknf .",
    "thus it only handles the dl - programs without the constraint operator .    in this paper",
    ", we investigate the possibility of embedding dl - programs into default logic @xcite , under various notions of answer set semantics .",
    "our interest in default logic is due to the fact that it is one of the dominant nonmonotonic formalisms , yet despite the fact that default logic naturally accommodates first - order logic and rules ( defaults ) , curiously it has not been considered explicitly as a framework for integrating ontology and rules . since the loose approach can be viewed as query - based , the question arises as whether default logic can be viewed as a foundation for query - based approaches to integration of ontologies and rules .",
    "we shall note that the problem of embedding dl - programs into default logic is nontrivial .",
    "in fact , given the difficulties in dealing with dl - programs by other expressive nonmonotonic logics , one can expect great technical subtlety in this endeavor .",
    "especially , the treatment of equality is a nontrivial issue .",
    "a main technical result of this paper is that dl - programs can be translated to default theories while preserving their strong and weak answer sets .",
    "this is achieved in two steps . in the first",
    ", we investigate the operators in dl - programs and observe that the constraint operator @xmath12 is the only one causing a dl - atom to be nonmonotonic , and a dl - atom may still be monotonic even though it mentions the constraint operator @xmath12 . to eliminate @xmath12 from nonmonotonic dl - atoms ,",
    "we propose a translation @xmath17 and show that , given a dl - program @xmath18 , the strong and weak answer sets of @xmath18 correspond exactly to the strong and weak answer sets of @xmath19 , respectively , i.e. , when restricted to the language of @xmath18 , the strong and weak answer sets of @xmath19 are precisely those of @xmath18 , and vice versa .",
    "an immediate consequence of this result is that it improves a result of @xcite , in that we now know that a much larger class of dl - programs , the class of _ normal dl - programs _ , can be translated to mknf knowledge bases , where a dl - program is normal if it has no monotonic dl - atoms that mention the constraint operator @xmath12 . for the weak answer set semantics , the translation above can be relaxed so that all dl - atoms containing @xmath12 can be translated uniformly , and the resulting translation is polynomial .",
    "however , for the strong answer set semantics , the above translation relies on the knowledge whether a dl - atom is monotonic or not . in this paper",
    ", we present a number of results regarding the upper and lower bounds of determining this condition for description logics @xmath20 and @xmath21 @xcite .",
    "these results have a broader implication as they apply to the work of @xcite in embedding dl - programs under strong answer sets into quantified equilibrium logic .    in the second step , we present two approaches to translating dl - programs to default theories in a polynomial , faithful , and modular manner @xcite .",
    "the difference between the two is on the handling of inconsistent ontology knowledge bases . in the first one ,",
    "an inconsistent ontology knowledge base trivializes the resulting default theory , while following the spirit of dl - programs , in the second approach nontrivial answer sets may still exist in the case of an inconsistent ontology knowledge base .",
    "we show that , for a dl - program @xmath22 without nonmonotonic dl - atoms , there is a one - to - one correspondence between the strong answer sets of @xmath18 and the extensions of its corresponding default theory ( whenever the underlying knowledge base is consistent for the first approach ) .",
    "this , along with the result given in the first step , shows that dl - programs under the strong answer set semantics can be embedded into default logic .",
    "it has been argued that some strong answers may incur self - supports . to overcome this blemish , weakly and strongly well - supported answer set semantics",
    "are recently proposed @xcite .",
    "surprisingly , dl - programs under the weakly well - supported semantics can be embedded into default logic by a small enhancement to our approach in the second step above , and the resulting translation is again polynomial , faithful and modular .",
    "furthermore , if nonmonotonic dl - atoms do not appear in the scope of the default negation @xmath23 , the strongly well - supported semantics coincides with the weakly well - supported semantics . since default negation already provides a language construct to express default inferences , it can be argued that one need not use the constraint operator @xmath12 inside it . in this sense , our default logic encoding captures the strongly well - supported semantics as well .",
    "we note that , in embedding dl - programs without nonmonotonic dl - atoms into default logic , one still can use the negation - as - failure operator @xmath24 in dl - programs to express nonmonotonic inferences .",
    "the same assumption was adopted in defining a well - founded semantics for dl - programs @xcite . under this assumption ,",
    "all the major semantics for dl - programs coincide , and they all can be embedded into default logic by a polynomial , faithful , and modular translation .",
    "thus , the results of this paper not only reveal insights and technical subtleties in capturing dl - programs under various semantics by default logic , but also strengthen the prospect that the latter can serve as a foundation for query - based integration of rules and ontologies .    the main advantage of using default logic to characterize integration of ontology and rules in general , and semantics of dl - programs in particular , is its simple syntax and intuitive semantics , which has led to a collection of computational results in the literature ( see , e.g. , @xcite ) .",
    "interestingly , the more recent effort is on applying asp techniques to compute default extensions .",
    "as long as defaults can be finitely grounded , which is the case for the approach of this paper , these techniques can be extended by combining an asp - based default logic engine with a description logic reasoner , with the latter being applied as a black box .",
    "in contrast , the computational issues are completely absent in the approach under ael @xcite , and only addressed briefly at an abstract level for the approach based on mknf @xcite .",
    "furthermore , the representation of dl - programs in default logic leads to new insights in computation for dl - programs , one of which is that the iterative construction of default extensions provides a direct support to well - supportedness for answer sets , so that justifications for positive dependencies can be realized for free .",
    "the main contributions of this paper are summarized as follows .    *",
    "we show that dl - programs under the weak and strong answer set semantics can be faithfully and modularly rewritten without constraint operators .",
    "the rewriting is polynomial for the weak answer set semantics . * to embed arbitrary dl - programs into default logic , we present faithful and modular @xcite translations for the strong answer set semantics , the weak answer set semantics and the weakly well - supported semantics .",
    "the translations are also polynomial for the latter two semantics .",
    "* for the strong answer set semantics , the embedding depends on the knowledge of monotonicity of dl - atoms and is polynomial relative to this knowledge , i.e. , if the set of monotonic dl - atoms is known . in general , determining this set is intractable ; as we show , determining whether a dl - atom is monotonic is @xmath25-complete under the description logic @xmath20 and @xmath26-complete under the description logic @xmath21 ( and thus not more expensive than deciding the existence of some strong or weak answer set of a dl - program under these description logics ) .",
    "* for the two semantics for which we do not provide a polynomial embedding , namely the strong answer set semantics and the strongly well - supported semantics , there are broad classes of dl - programs for which a polynomial embedding can be easily inferred from our results . for the class of dl - programs",
    "where nonmonotonic dl - atoms do not appear in the scope of default negation @xmath23 , our embedding is polynomial , faithful , and modular under the strongly well - supported semantics ; and for the class of dl - programs where the constraint operator does not appear in a positive dl - atom in rules , our embedding is again polynomial , faithful , and modular under the strong answer set semantics .",
    "the paper is organized as follows . in the next section ,",
    "we recall the basic definitions of description logics and dl - programs . in section  [ sec : eliminating ] , we present a transformation to eliminate the constraint operator from nonmonotonic dl - atoms . in section  [ sec : todefault ] , we give transformations from dl - programs to default theories , followed by sections  [ sec : related - work ] and 6 on related work and concluding remarks respectively .",
    "in this section , we briefly review the basic notations for description logics @xcite and description logic programs @xcite .",
    "description logics are a family of class - based ( concept - based ) knowledge representation formalisms .",
    "we assume a set * e * of _ elementary datatypes _ and a set * v * of _ data values_. a _ datatype theory _ @xmath27 consists of a _ datatype _ ( or _ concrete _ ) _ domain _ @xmath28 and a mapping @xmath29 that assigns to every elementary datatype a subset of @xmath28 and to every data value an element of @xmath28 .",
    "let @xmath30 be a vocabulary , where @xmath31 , and @xmath32 are pairwise disjoint ( denumerable ) sets of _ atomic concepts , abstract roles , datatype _ ( or _ concrete _ ) roles , and _ individuals _ , respectively .",
    "a _ role _ is an element of @xmath33 , where @xmath34 means the set of inverses of all @xmath35 .",
    "_ concepts _ are inductively defined as : ( 1 ) every atomic concept @xmath36 is a concept , ( 2 ) if @xmath37 are individuals from @xmath32 , then @xmath38 is a concept ( called _ oneof _ ) , ( 3 ) if @xmath39 and @xmath40 are concepts , then also @xmath41 , @xmath42 , and @xmath43 are concepts ( called _ conjunction , disjunction _ , and _ negation _ respectively ) .",
    "( 4 ) if @xmath39 is a concept , @xmath44 is an abstract role from @xmath45 , and @xmath46 is a nonnegative integer , then @xmath47 and @xmath48 are concepts ( called _ exists , value , atleast _ , and _ atmost restriction _ , respectively ) , ( 5 ) if @xmath40 is a datatype , @xmath49 is a datatype role from @xmath50 , and @xmath46 is a nonnegative integer , then @xmath51 , and @xmath52 are concepts ( called _ datatype exists , value , atleast _ , and _ atmost restriction _ , respectively ) .",
    "axiom _ is an expression of one of the forms : ( 1 ) @xmath53 , called _",
    "concept inclusion axiom _ , where @xmath39 and @xmath40 are concepts ; ( 2 ) @xmath54 , called _ role inclusion axiom _ , where either @xmath55 or @xmath56 ; ( 3 ) trans(@xmath44 ) , called _ transitivity axiom _ , where @xmath35 ; ( 4 ) @xmath57 , called _ concept membership axiom _ , where @xmath39 is a concept and @xmath58 ; ( 5 ) @xmath59 ( resp . , @xmath60 ) , called _ role membership axiom _ where @xmath35 ( resp . , @xmath61 ) @xmath62 ( resp . , @xmath58 and @xmath63 is a data value ) , ( 6 ) @xmath64 ( resp . , @xmath65 ) , called _ equality _ ( resp . , _ inequality _ ) _ axiom _ where @xmath66 .",
    "a _ description logic ( dl ) knowledge base _",
    "@xmath1 is a finite set of axioms .",
    "the @xmath67 _ knowledge base _ consists of a finite set of above axioms , while the @xmath68 _ knowledge base _ is the one of @xmath67 , but without the _ oneof _ constructor and with the _ atleast _ and _ atmost _ constructors limited to 0 and 1 .",
    "the semantics of the two description logics are defined in terms of general first - order interpretations . an _ interpretation _",
    "@xmath69 with respect to a datatype theory @xmath70 consists of a nonempty ( abstract ) _ domain _ @xmath71 disjoint from @xmath28 , and a mapping @xmath72 that assigns to each atomic concept @xmath36 a subset of @xmath71 , to each individual @xmath73 an element of @xmath71 , to each abstract role @xmath35 a subset of @xmath74 , and to each datatype role @xmath61 a subset of @xmath75 .",
    "the mapping @xmath72 is extended to all concepts and roles as usual ( where @xmath76 denotes the cardinality of a set @xmath77 ) :    * @xmath78 ; * @xmath79 ; * @xmath80 , @xmath81 , @xmath82 ; * @xmath83 ; * @xmath84 ; * @xmath85 ; * @xmath86 ; * @xmath87 ; * @xmath88 ; * @xmath89 ; * @xmath90 .",
    "let @xmath69 be an interpretation respect to @xmath91 , and @xmath92 an axiom .",
    "we say that @xmath93 _ satisfies _ @xmath92 , written @xmath94 , is defined as follows : ( 1 ) @xmath95 iff @xmath96 ; ( 2 ) @xmath97 iff @xmath98 ; ( 3 ) @xmath99 iff @xmath100 is transitive ; ( 4 ) @xmath101 iff @xmath102 ; ( 5 ) @xmath103 @xmath104 ( resp . , @xmath105 iff @xmath106 ;",
    "( 6 ) @xmath107 iff @xmath108 ( resp . , @xmath109 iff @xmath110 ) .",
    "@xmath93 _ satisfies _ a dl knowledge base @xmath1 , written @xmath111 , if @xmath94 for any @xmath112 . in this case",
    ", we call @xmath93 a _ model _ of @xmath1 . an axiom @xmath92 is a _ logical consequence _ of a dl knowledge base @xmath1 , written @xmath113 , if any model of @xmath1 is also a model of @xmath92 .",
    "let @xmath114 be a first - order vocabulary with nonempty finite sets @xmath115 and @xmath116 of constant symbols and predicate symbols respectively such that @xmath116 is disjoint from @xmath117 and @xmath118 .",
    "_ atoms _ are formed from the symbols in @xmath116 and @xmath115 as usual .",
    "a _ dl - atom _ is an expression of the form @xmath119(\\vec t),\\ \\   ( m\\ge 0)\\ ] ] where    * each @xmath6 is either a concept , a role or its negation , \" with an equivalent form  @xmath120 \" in dl - atoms .",
    "the negation of a role is not explicitly present in @xcite .",
    "as discussed there , negative role assertions can be emulated in @xmath121 and @xmath122 ( and in fact also in @xmath123 ) . ] or a special symbol in @xmath124 ; * @xmath8 ( we call @xmath12 the _ constraint operator _ ) ; * @xmath7 is a unary predicate symbol in @xmath116 if @xmath6 is a concept , and a binary predicate symbol in @xmath116 otherwise .",
    "the @xmath7 s are called _ input predicate symbols _ ; * @xmath4 is a _ dl - query _ , i.e. , either ( 1 ) @xmath125 where @xmath126 ; ( 2 ) @xmath53 where @xmath14 is an empty argument list ; ( 3 ) @xmath127 where @xmath128 ; ( 4 ) @xmath129 where @xmath128 ; or their negations , where @xmath39 and @xmath40 are concepts , @xmath44 is a role , and @xmath14 is a tuple of constants .    the precise meanings of @xmath130 will be defined shortly . intuitively , @xmath131 extends @xmath77 by the extension of @xmath132 .",
    "similarly , @xmath133 extends @xmath134 by the extension of @xmath132 , and @xmath135 constrains @xmath77 to @xmath132 .",
    "a _ dl - rule _ ( or simply a _ rule _ ) is an expression of the form @xmath136 where @xmath137 is an atom , each @xmath138 is an atom or a dl - atom .",
    "we refer to @xmath137 as its _ head _ , while the conjunction of @xmath139 and @xmath140 is its _",
    "body_. for convenience , we abbreviate a rule in the form ( [ dl : rule ] ) as @xmath141 where @xmath142 and @xmath143 .",
    "let @xmath144 be a rule of the form ( [ dl : rule : set ] ) .",
    "if @xmath145 and @xmath146 , @xmath144 is a _ fact _ and we may write it as  @xmath137 \" instead of  @xmath147 \" .",
    "a _ description logic program _ ( _ dl - program _ ) @xmath148 consists of a dl knowledge base @xmath1 and a finite set @xmath2 of dl - rules . in what follows we assume the vocabulary of @xmath2 is implicitly given by the constant symbols and predicate symbols occurring in @xmath2 , @xmath115 consists of the constants occurring in atoms of @xmath2 , and @xmath2 is grounded ( no atoms containing variables ) unless stated otherwise .",
    "given a dl - program @xmath148 , the _ herbrand base _ of @xmath2 , denoted by @xmath149 , is the set of atoms occurring in @xmath2 and the ones formed from the predicate symbols of @xmath116 occurring in some dl - atoms of @xmath2 and the constant symbols in @xmath150 .",
    "it is clear that @xmath151 is in polynomial size of @xmath18 .",
    "an _ interpretation _",
    "@xmath152 ( relative to @xmath2 ) is a subset of @xmath151 .",
    "such an @xmath152 is a _ model _ of an atom or dl - atom @xmath137 under @xmath1 , written @xmath153 , if the following holds :    * if @xmath154 , then @xmath153 iff @xmath155 ; * if @xmath137 is a dl - atom @xmath156 of the form ( [ dl : atom ] ) , then @xmath153 iff @xmath157 where @xmath158 @xmath159    where @xmath160 is a tuple of constants over @xmath150 .",
    "as we allow negation of role , @xmath161 can be replaced with @xmath120 in any dl - atom .",
    "in addition , we can shorten @xmath162 as @xmath163 where @xmath164 appears in @xmath165 for all @xmath166 and @xmath167 .",
    "thus dl - atoms can be equivalently rewritten into ones without using the operator @xmath10 , and every predicate @xmath132 appears at most once for each operator @xmath9 and @xmath12 .",
    "for instance , the dl - atom @xmath168(\\vec t)$ ] can be equivalently written as @xmath169(\\vec t)$ ] .",
    "an interpretation @xmath170 is a _ model _ of  @xmath171 \" , written @xmath172 , if @xmath152 is not a model of @xmath137 , i.e. , @xmath173 .",
    "the interpretation @xmath152 is a _ model _ of a dl - rule of the form ( [ dl : rule : set ] ) iff @xmath174 for any @xmath175 and @xmath176 for any @xmath177 implies that @xmath153 .",
    "an interpretation @xmath152 is a _ model _ of a dl - program @xmath148 , written @xmath178 , iff @xmath152 is a model of each rule of @xmath2 .",
    "a dl - atom @xmath137 is _ monotonic _",
    "( relative to a dl - program @xmath179 ) if @xmath180 implies @xmath181 , for all @xmath182 such that @xmath183 , otherwise @xmath137 is _ nonmonotonic_. it is clear that if a dl - atom does not mention the constraint operator then it is monotonic .",
    "however , a dl - atom may be monotonic even if it mentions the constraint operator .",
    "for example , the dl - atom @xmath184(a)$ ] is a tautology ( which is monotonic ) .    evidently , the constraint operator is the only one that may cause a dl - atom to be nonmonotonic .",
    "this sufficient condition for monotonicity can be efficiently checked ; for the case where the constraint operator may appear , the following generic upper bound on complexity is easily derived .",
    "we refer to the _ query complexity _ of a ground dl - atom @xmath137 of form ( [ dl : atom ] ) in @xmath18 as the complexity of deciding , given @xmath185 , @xmath137 , and an arbitrary interpretation @xmath152 , whether @xmath186 holds .",
    "[ prop : mon - dl - complexity ] let @xmath187 be a ( ground ) dl - program , and @xmath137 be a dl - atom occurring in @xmath2 which has query complexity in class @xmath39 . then deciding whether @xmath137 is monotonic is in @xmath188 .    indeed , to show that @xmath137 of form ( [ dl : atom ] )",
    "is nonmonotonic , one can guess restrictions @xmath189 and @xmath190 of interpretations @xmath152 and @xmath182 , respectively , to the predicates occurring in @xmath137 such that @xmath191 and @xmath192 but @xmath193 ( clearly , @xmath194 iff @xmath195 for arbitrary interpretations @xmath196 ) .",
    "the guess for @xmath189 and @xmath190 is of polynomial size in the size of @xmath18 ( assuming that the set of constants @xmath115 is explicit in @xmath18 , or is constructible in polynomial time ) , and preparing @xmath197 and @xmath198 is feasible in polynomial time ( in fact , easily in logarithmic space ) . using the oracle ,",
    "we can decide @xmath199 and @xmath200 , and thus @xmath192 but @xmath193 .",
    "overall , the complexity is in @xmath188 .",
    "depending on the underlying description logic , this upper bound might be lower or complemented by a matching hardness result .",
    "in fact , for @xmath121 and @xmath122 , the latter turns out to be the case .",
    "dl - atoms over these description logics have a query complexity that is complete for @xmath39 = @xmath25 and @xmath39 = @xmath201 , respectively . by employing well - known identities of complexity classes ,",
    "we obtain the following result .",
    "[ theo : mon - dl - complexity ] given a ( ground ) dl - program @xmath187 and a dl - atom @xmath137 occurring in @xmath2 , deciding whether @xmath137 is monotonic is ( i ) @xmath25-complete , if @xmath1 is a @xmath121 knowledge base and ( ii ) @xmath26-complete , if @xmath1 is a @xmath122 knowledge base .",
    "the membership part for ( i ) @xmath121 follows easily from proposition  [ prop : mon - dl - complexity ] and the fact that @xmath202 has query complexity in @xmath25 ; indeed , each dl - query evaluation @xmath203 can be transformed in polynomial time to deciding satisfiability of a @xmath202 knowledge base , which is @xmath25-complete in general @xcite .",
    "now @xmath204 = @xmath25 = @xmath205 ; indeed , the computation tree of a nondeterministic turing machine with polynomial running time and @xmath25 oracle access has single exponential ( in the input size ) many nodes , which can be traversed in exponential time ; simulating an oracle call in a node is possible in exponential time in the size of the ( original ) input .",
    "overall , this yields an exponential time upper bound .",
    "the membership part for ( ii ) @xmath122 follows analogously from proposition  [ prop : mon - dl - complexity ] and the fact that @xmath206 has @xmath207-complete query complexity , which follows from @xmath201-completeness of the knowledge base satisfiability problem in @xmath206 ( for both unary and binary number encoding ; see @xcite ) . now",
    "@xmath208 = @xmath209 = @xmath26 (= @xmath210 ) ; here the second equality holds by results in @xcite .",
    "the hardness parts for ( i ) and ( ii ) are shown by reductions of suitable @xmath25- resp .",
    "@xmath26-complete problems , building on constructions in @xcite ( see appendix  [ app : monotonic ] ) .    for convenience",
    ", we use @xmath211 to denote the set of all dl - atoms that occur in @xmath2 , @xmath212 to denote the set of monotonic dl - atoms , and @xmath213 .",
    "note that this is different from that of @xcite where @xmath214 is assumed to be a set of ground dl - atoms in @xmath211 which are known to be monotonic , while @xmath215 denotes the set of remaining dl - atoms .",
    "thus @xmath215 is allowed to contain monotonic dl - atoms as well in @xcite .",
    "our definition represents the ideal situation where monotonicity can be finitely verified , which is the case for decidable description logic knowledge bases .",
    "note also that by theorem  [ theo : mon - dl - complexity ] , for @xmath121 and @xmath122 knowledge bases computing @xmath216 is possible with no respectively mild complexity increase compared to basic reasoning tasks in the underlying description logic .      a dl - program @xmath148 is _ positive _ , if ( i ) @xmath2 is  not \"- free , and ( ii ) every dl - atom is monotonic relative to @xmath217 .",
    "positive dl - programs have attractive semantics properties ; e.g. , it is evident that a positive dl - program @xmath217 has a ( set inclusion ) least model .    from the results above , we easily obtain the following results on recognizing positive dl - programs .    [",
    "prop : positive - dl - complexity ] deciding whether a given ( not necessarily ground ) dl - program @xmath187 is positive is in co - np@xmath218 , if every dl - atom in the ground version of @xmath2 has query complexity in @xmath39 .",
    "@xmath22 is not positive if either ( i ) @xmath2 is not `` not''-free , which can be checked in polynomial time , or ( ii ) some dl - atom @xmath137 in the ground version of @xmath2 is nonmonotonic ; such an @xmath137 can be guessed and verified , by the hypothesis , in polynomial time with an oracle for @xmath39 ; hence the result .",
    "[ theo : positive - dl - complexity ] deciding whether a given ( not necessarily ground ) dl - program @xmath187 is positive is ( i ) @xmath25-complete , if @xmath1 is a @xmath121 knowledge base and ( ii ) @xmath26-complete , if @xmath1 is a @xmath122 knowledge base .",
    "the membership parts are immediate from proposition  [ prop : positive - dl - complexity ] , and the hardness parts from the hardness proofs in theorem  [ theo : mon - dl - complexity ] : the atom @xmath137 is monotonic relative to the constructed dl - program @xmath219 iff @xmath18 is positive .    thus , the test whether a dl - program is positive ( and similarly , whether all dl - atoms in it are monotonic ) for @xmath121 and @xmath122 knowledge bases is also not expensive compared to basic reasoning tasks .    besides positive dl - programs ,",
    "another important subclass are _ canonical dl - programs _ , where a dl - program @xmath187 is _ canonical _ , if @xmath2 mentions no constraint operator . clearly , canonical dl - programs are easy to recognize .",
    "the same holds for the more general class of _ normal dl - programs _",
    ", where a dl - program @xmath187 is _ normal _ , if no monotonic dl - atom occurs in @xmath2 that mentions the constraint operator .",
    "note that normal dl - programs are not positive in general ; since monotonic dl - atoms mentioning the constraint operator are rather exceptional , the normal dl - programs include most dl - programs relevant for practical applications .",
    "[ exam : dl : program:1 ] consider the following dl - programs , which we will refer to repeatedly in the sequel .",
    "* @xmath220 where @xmath221 and @xmath222(a)\\}$ ] .",
    "the single dl - atom in @xmath223 has no constraint operator , and thus @xmath224 is canonical ( hence also normal ) ; moreover , since ` @xmath23' does not occur in @xmath223 , @xmath224 is also positive .",
    "* @xmath225 where @xmath226 and @xmath227(a)\\}$ ] . here",
    ", the constraint operator occurs in @xmath228 , thus @xmath229 is not canonical .",
    "furthermore , the single dl - atom in @xmath228 is nonmonotonic , hence @xmath229 is also not positive .",
    "however , @xmath229 is normal .",
    "let @xmath230 be a positive dl - program .",
    "the immediate consequence operator @xmath231 is defined as , for any @xmath232 , @xmath233 since @xmath234 is monotonic , the least fix - point of @xmath235 always exists which is the least model of @xmath217 . by @xmath236",
    "we denote the least fix - point of @xmath235 , which can be iteratively constructed as below :    * @xmath237 ; * @xmath238 .",
    "it is clear that the least fixpoint @xmath239 .",
    "we are now in the position to recall the semantics of dl - programs .",
    "let @xmath148 be a dl - program .",
    "the _ strong dl - transform _ of @xmath217 relative to @xmath1 and an interpretation @xmath240 , denoted by @xmath241 , is the positive dl - program @xmath242 ) , where @xmath243 is obtained from @xmath2 by deleting :    * the dl - rule @xmath144 of the form ( [ dl : rule ] ) such that either @xmath244 for some @xmath245 and @xmath246 , or @xmath247 for some @xmath248 ; and * the nonmonotonic dl - atoms and @xmath171 from the remaining dl - rules where @xmath137 is an atom or a dl - atom .",
    "the interpretation @xmath152 is a _",
    "strong answer set _ of @xmath217 if it is the least model of @xmath241 , i.e. , @xmath249 . , namely @xmath250 is the set of nonmonotonic dl - atoms w.r.t . a given dl - program , the strong answer set semantics is the strongest among possible variations under the definition of @xcite , where @xmath250 may contain monotonic dl - atoms , in that given a dl - program @xmath22 , any strong answer set of @xmath22 under our definition is a strong answer set of @xmath22 under the definition of @xcite . ]",
    "the _ weak dl - transform _ of @xmath217 relative to @xmath1 and an interpretation @xmath251 , denoted by @xmath252 , is the positive dl - program @xmath253 , where @xmath254 is obtained from @xmath2 by deleting :    * the dl - rules of the form ( [ dl : rule ] ) such that either @xmath244 for some @xmath245 and @xmath255 , or @xmath247 for some @xmath248 ; and * the dl - atoms and @xmath171 from the remaining dl - rules where @xmath137 is an atom or dl - atom .",
    "the interpretation @xmath152 is a _",
    "weak answer set _ of @xmath217 if @xmath152 is the least model of @xmath252 , i.e. , @xmath256 .",
    "the following proposition shows that , given a dl - program @xmath257 , if @xmath1 is inconsistent then strong and weak answer sets of @xmath18 coincide , and are minimal .    [ prop:2.3.1 ]",
    "let @xmath187 be a dl - program where @xmath1 is inconsistent and @xmath232 .",
    "then    a.   @xmath152 is a strong answer set of @xmath18 if and only if @xmath152 is a weak answer set of @xmath18 .",
    "b.   the strong and weak answer sets of @xmath18 are minimal under set inclusion .    by the inconsistency of @xmath1 ,",
    "it is clear that every dl - atom @xmath137 occurring in @xmath2 is monotonic and @xmath258 for any @xmath259 .",
    "\\(i ) note that the only difference between @xmath260 and @xmath254 is that there exist some dl - atoms in @xmath260 but not in @xmath254 , i.e. , for any dl - rule @xmath261 in @xmath2 , @xmath262 belongs to @xmath260 if and only if @xmath263 belongs to @xmath254 where @xmath264 .",
    "however note that @xmath265 for any dl - atom @xmath266 .",
    "it follows that @xmath267 .",
    "consequently @xmath152 is a strong answer set of @xmath18 if and only if @xmath152 is a weak answer set of @xmath18 .",
    "\\(ii ) by theorem 4.13 of @xcite , the strong answer sets of @xmath18 are minimal .",
    "it implies that the weak answer sets of @xmath18 are minimal as well by ( i ) of the proposition .",
    "[ exam : dl : program:1a ] reconsider the dl - programs in example  [ exam : dl : program:1 ] .    * the dl - program @xmath220 , where @xmath221 and @xmath222(a)\\}$ ] , has a unique strong answer set @xmath268 and two weak answer sets @xmath269 and @xmath270 .",
    "the interested reader may verify the following : @xmath271 , and clearly @xmath272 and @xmath273 .",
    "so the weak dl - transformation relative to @xmath274 and @xmath275 is @xmath276 .",
    "since @xmath275 coincides with the least model of @xmath277 , it is a weak answer set of @xmath278 .",
    "similarly , one can verify that the strong dl - transformation relative to @xmath274 and @xmath275 is @xmath279 .",
    "its least model is the empty set , so @xmath275 is not a strong answer set of @xmath278 .",
    "* for the dl - program @xmath225 , where @xmath226 and @xmath227(a)\\}$ ] , both @xmath280 and @xmath281 are strong and weak answer sets .",
    "these dl - programs show that strong ( and weak ) answer sets may not be ( set inclusion ) minimal .",
    "it has been shown that if a dl - program contains no nonmonotonic dl - atoms then its strong answer sets are minimal ( cf .",
    "theorem 4.13 of @xcite ) .",
    "however , this does not hold for weak answer sets as shown by the dl - program @xmath278 above , even if it is positive .",
    "it has also been shown that strong answer sets are always weak answer sets , but not vice versa .",
    "thus the question rises : is it the case that , for any dl - program @xmath217 and interpretation @xmath152 , if @xmath152 is a weak answer set of @xmath217 , then there is @xmath282 such that @xmath182 is a strong answer of @xmath217 ? we give a negative answer to this question by the following example .",
    "[ exam:2 ] let @xmath283 where @xmath2 consists of @xmath284(a ) , \\hspace{.6 cm }      p(a )   { \\leftarrow}{not \\,}{\\textit{dl}}[s\\oplus p;s](a ) .",
    "\\end{aligned}\\ ] ] note that @xmath18 is canonical and normal , but not positive .",
    "intuitively , @xmath2 expresses reasoning by cases : regardless of whether the dl - atom @xmath285(a)$ ] evaluates to false , @xmath286 should be true .",
    "let @xmath287 .",
    "we have that @xmath288 , thus @xmath152 is a weak answer set of @xmath217 .",
    "however , note that @xmath289(a)\\}$ ] .",
    "the least model of @xmath241 is @xmath290 . so that @xmath152 is not a strong answer set of @xmath217 .",
    "now consider @xmath291 .",
    "we have @xmath292(a),~~ p(a){\\leftarrow}\\}$ ] .",
    "the least model of @xmath293 is @xmath294 .",
    "thus @xmath182 is not a strong answer set of @xmath217 .",
    "in fact , @xmath217 has no strong answer sets at all .",
    "this is in line with the intuition that , as @xmath295 is empty , @xmath286 can not be foundedly derived without the assumption that @xmath286 is true .",
    "intuitively , translating a nonmonotonic dl - atom into a monotonic is to replace @xmath296 with @xmath297 where @xmath298 is a fresh predicate having the same arity as @xmath132 and @xmath298 stands for the negation of @xmath132 . in what follows ,",
    "we show that the constraint operator can be eliminated from nonmonotonic dl - atoms while preserving both weak and strong answer sets .",
    "as mentioned previously , we assume that the signatures @xmath116 and @xmath115 are implicitly given for a given dl - program @xmath18 .",
    "any predicate symbol not occurring in @xmath18 is a fresh one .",
    "let @xmath187 be a dl - program .",
    "we define @xmath299 where @xmath300 and @xmath301 , assuming @xmath144 is of the form ( [ dl : rule ] ) , consists of    a.   the rule @xmath302 where @xmath303 in which @xmath304 is a fresh propositional atom , and @xmath305(\\vec t ) , & \\hbox{if $ b={\\textit{dl}}[\\lambda , q](\\vec t)$ , }      \\end{array }    \\right.\\ ] ] where @xmath306 is obtained from @xmath165 by replacing each  @xmath296 \" with  @xmath307 \" , and @xmath308 is a fresh predicate having the same arity as @xmath132 ; b.   for each nonmonotonic dl - atom @xmath309 , the following rule : @xmath310 where @xmath304 is the same atom as mentioned in ( i ) and c.   for each predicate @xmath132 such that  @xmath296 \" occurs in some nonmonotonic dl - atom of @xmath144 , the instantiations of the rule : @xmath311 where @xmath312 is a tuple of distinct variables matching the arity of @xmath132 , and @xmath308 is the same predicate as mentioned in ( i ) .    intuitively , the idea in @xmath17 is the following .",
    "recall that  @xmath296 \" means  infer @xmath313 in absence of @xmath314 \" .",
    "thus if @xmath315 stands for the absence of @xmath314 then  @xmath296 \" should have the same meaning as that of  @xmath307 \" .",
    "thus , a nonmonotonic dl - atom can be re - expressed by a monotonic dl - atom and  _ not _ \" .",
    "note that @xmath316 may still contain dl - atoms with the constraint operator , but they are all monotonic dl - atoms .    [ exam : dl - program:3 ] let us consider the following dl - programs .",
    "* let @xmath317 where @xmath223 consists of @xmath318(a).\\ ] ] note that @xmath224 is normal but neither canonical nor positive .",
    "it is not difficult to verify that @xmath278 has two weak answer sets @xmath280 and @xmath281 .",
    "they are strong answer sets of @xmath278 as well . according to the translation @xmath17",
    ", we have @xmath319 , where @xmath320 consists of @xmath321(a ) , \\hspace{1 cm }              \\pi_p(a )   { \\leftarrow}{not \\,}p(a ) .",
    "\\end{aligned}\\ ] ] it is easy to see that @xmath322 has only two weak answer sets , @xmath281 and @xmath323 , which are also strong answer sets of @xmath322 .",
    "they correspond to @xmath281 and @xmath280 respectively when restricted to @xmath324 .",
    "* let @xmath325 where @xmath228 consists of @xmath326(a).\\ ] ] recall that the dl - atom @xmath327(a)$ ] is a tautology , hence monotonic ; thus @xmath229 is not normal .",
    "the strong and weak answer sets of @xmath229 are the same as those of @xmath224 .",
    "please note that @xmath328 consists of @xmath329(a),\\\\           & \\pi_p(a )   { \\leftarrow}{not \\,}p(a ) , \\hspace{2 cm } \\pi_q(a){\\leftarrow}{not \\,}q(a ) .",
    "\\end{aligned}\\ ] ] the strong and weak answer sets of @xmath330 are @xmath331 and @xmath332 .",
    "they correspond to @xmath280 and @xmath281 respectively when restricted to @xmath333 .",
    "* let @xmath334 be the dl - program @xmath229 in example [ exam : dl : program:1 ] .",
    "then @xmath335 where @xmath336 consists of @xmath337(a )        \\end{aligned}\\ ] ] where @xmath338(a)$ ] .",
    "one can check that @xmath339 has two strong answer sets , @xmath340 and @xmath341 , which are @xmath280 and @xmath281 whenever restricted to the original herbrand base .    the main insight revealed by the translation",
    "@xmath17 is , while a negative dl - atom is rewritten by replacing a @xmath12 expression by a @xmath10 expression , any positive nonmonotonic dl - atom is negated twice , which emulates  double negation \" in nested expressions @xcite .",
    "although the translation @xmath17 provides an interesting characterization , due to the difficulty of checking the monotonicity of a dl - atom , for an arbitrary dl - program the translation can be expensive as it depends on checking the entailment relation over the underlying description logic .",
    "however , for the class of normal dl - programs , @xmath17 takes polynomial time since checking the monotonicity of dl - atoms amounts to checking the existence of the constraint operator , and predicates occurring in dl - atoms have the arity at most 2 .",
    "we now proceed to show some properties of the translation @xmath17 .    for any dl - program @xmath18",
    ", @xmath19 has no nonmonotonic dl - atoms left .",
    "thus , by theorem 4.13 of @xcite , we have    [ prop:3.1.1 ] let @xmath22 be a dl - program .",
    "if @xmath342 is a strong answer set of @xmath19 then @xmath152 is minimal , i.e , there is no @xmath343 such that @xmath182 is a strong answer set of @xmath19 .",
    "it is evident by theorem 4.13 of @xcite and @xmath344 .",
    "the dl - programs in the above example show that the translation @xmath17 preserves both strong and weak answer sets of a given dl - program in the extended language , i.e. , the strong and weak answer sets of @xmath19 are those of @xmath18 when restricted to the language of @xmath18 . in",
    "what follows , we formally build up a one - to - one mapping between answer sets of a dl - program @xmath18 and those of @xmath19 .    for convenience , given a dl - program @xmath187 and @xmath232 ,",
    "we denote @xmath345 where @xmath346    [ lem : main:1 ] let @xmath148 be a dl - program , @xmath232",
    ". then    a.   for any atom @xmath137 occurring in @xmath2 @xmath347 b.   for any dl - atom @xmath348(\\vec t)$ ] occurring in @xmath2 , @xmath349(\\vec t ) \\ \\ \\textit{iff}\\ \\ \\pi(i)\\not\\models_o\\pi({not \\,}a).\\ ] ]    \\(i ) it is obvious since @xmath350 and predicates of the form @xmath308 and @xmath351 do not occur in @xmath18 .",
    "\\(ii ) if there is no constraint operator occurring in @xmath165 then @xmath352(\\vec t)={\\textit{dl}}[\\lambda;q](\\vec t)$ ] .",
    "thus in this case , it is trivial as predicates of the form @xmath308 and @xmath351 do not occur in @xmath18 , and @xmath353 .",
    "suppose there exists at least one constraint operator in @xmath165 .",
    "it is clear that @xmath354(\\vec t)$ ] if and only if @xmath355 , and evidently , for any atom @xmath356 , @xmath357 if and only if @xmath358 . for clarity and without loss of generality ,",
    "let @xmath359 .",
    "we have that + @xmath360(\\vec t)$ ] + iff @xmath361 + iff @xmath362 + iff @xmath363 + iff @xmath364(\\vec t)$ ] + iff @xmath365(\\vec t)$ ] + iff @xmath355 .",
    "the above proof can be extended to the case where @xmath366(\\vec t)$ ] .",
    "[ lem : s ] let @xmath148 be a dl - program and @xmath232 .",
    "then    a.   @xmath367^{s,\\pi(i)}})$ ] , b.   @xmath368^{s,\\pi(i)}})$ ] , and c.   @xmath369^{s,\\pi(i)}}$ ] for any @xmath370 .",
    "\\(i ) it is evident that , for any atom @xmath356 , the rule @xmath371 is in @xmath316 .",
    "we have that + @xmath372 + iff @xmath358 + iff @xmath373 + iff the rule @xmath374 belongs to @xmath375^{s,\\pi(i)}_o$ ] + iff @xmath376^{s,\\pi(i)}})$ ] .",
    "\\(ii ) it is clear that , for any @xmath377 , the rule @xmath378 is in @xmath316 such that @xmath379 and @xmath173 .",
    "let @xmath348(\\vec t)$ ] .",
    "we have that + @xmath380 + iff @xmath381 and @xmath173 + iff @xmath382(\\vec t)$ ] ( by ( ii ) of lemma [ lem : main:1 ] ) + iff the rule @xmath383 belongs to @xmath375^{s,\\pi(i)}_o$ ] + iff @xmath384^{s,\\pi(i)}})$ ] .",
    "\\(iii ) we show this by induction on @xmath385 .",
    "base : it is obvious for @xmath386 .    step : suppose it holds for @xmath387 .",
    "let us consider the case @xmath388 .",
    "for any atom @xmath389 ,",
    "@xmath390 if and only if there is a rule @xmath391 in @xmath2 , where @xmath392 is a set of atoms and monotonic dl - atoms and @xmath393 is a set of nonmonotonic dl - atoms such that    * @xmath394 for any @xmath395 , * @xmath396 for any @xmath397 , and * @xmath398 for any @xmath399 .",
    "it follows that    * @xmath394 if and only if @xmath400^{s,\\pi(i)}}\\models_oa$ ] , by the inductive assumption , * @xmath396 if and only if @xmath401 , by the definition of @xmath402 , i.e. , @xmath403 , and * @xmath398 if and only if @xmath404 for any @xmath399 , by lemma [ lem : main:1 ] .    thus we have that @xmath390 if and only if @xmath405^{s,\\pi(i)}}\\cap{\\textit{hb}}_p$ ] .",
    "now we have the following key theorem : there exists a one - to - one mapping between the strong answer sets of a dl - program @xmath18 and those of @xmath19 .",
    "[ thm : delete : ominus : s ] let @xmath148 be a dl - program",
    ". then    a.   if @xmath152 is a strong answer set of @xmath217 then @xmath406 is a strong answer set of @xmath19 ; b.   if @xmath407 is a strong answer set of @xmath19 then @xmath408 is a strong answer set of @xmath18 .",
    "\\(i ) we have that    _ lfp_(_[(k)]^s,(i ) ) = & _ lfp_(_[(k)]^s,(i))(_hb__p\\{_p(c)_hb__(p)}\\{_a_hb__(p ) } ) + = & [ _ hb__p_lfp_(_[(k)]^s,(i ) ) ] + & + & + = & [ _ hb__p_i0_[(k)]^s,(i)^i ] _",
    "1(i)_2(i ) , + = & _ i0[_hb__p_[(k)]^s,(i)^i ] _",
    "1(i)_2(i ) + = & _ i0_k^s , i^i _",
    "1(i)_2(i ) , + = & i_1(i)_2(i ) , + = & ( i ) .",
    "it follows that @xmath406 is a strong answer set of @xmath19 .",
    "\\(ii ) we prove @xmath409 first .",
    "i^ * = & i^*(_hb__p\\{_p(c)_hb__(p)}\\{_a_hb__(p ) } ) + = & ( i^*_hb__p)(i^*\\{_p(c)_hb__(p)})(i^*\\{_a_hb__(p ) } ) + = & ( i^*_hb__p ) _",
    "1(_hb__pi^*)_2(_hb__pi^ * ) , + = & ( i^*_hb__p ) .",
    "let @xmath410 .",
    "we have that    _ lfp_(_k^s , i ) = & _ i0^i_k^s , i + = & _ i0(_hb__p_[(k)]^s,(i)^i ) , + = & _ hb__p_i0_[(k)]^s,(i)^i + = & _ hb__p_lfp_(_[(k)]^s,(i ) ) + = & _ hb__p(i ) + = & i.    it follows that @xmath152 is a strong answer set of @xmath18 .",
    "please note that , we need to determine the monotonicity of dl - atoms in the translation @xmath17 which is not tractable generally , and the translation does nothing for monotonic dl - atoms .",
    "that is , the  double negation \" interpretation applies only to positive nonmonotonic dl - atoms .",
    "if we deviate from this condition , the translation no longer works for strong answer sets .",
    "for example , one may question whether monotonic dl - atoms can be handled like nonmonotonic dl - atoms , and if so , the translation turns out to be polynomial .",
    "unfortunately we give a negative answer below .",
    "[ exam:4:new ] consider the dl - program @xmath317 where @xmath411(a)\\}$ ] .",
    "the dl - atom @xmath412(a)$ ] is monotonic .",
    "thus , @xmath224 is positive but neither canonical nor normal .",
    "it is evident that @xmath280 is the unique strong answer set of @xmath224 .",
    "if we apply @xmath17 to eliminate the constraint operator in monotonic dl - atoms as what @xmath17 does for nonmonotonic dl - atoms , we would get the dl - program @xmath413 where @xmath414 consists of @xmath415(a ) , \\qquad \\pi_q(a){\\leftarrow}{not \\,}q(a).\\end{aligned}\\ ] ] one can verify that this dl - program has two strong answer sets , @xmath416 and @xmath417 , which are @xmath281 and @xmath280 respectively when restricted to @xmath151 . however , we know that @xmath281 is not a strong answer set of @xmath224 .",
    "that is , such a translation may introduce some strong answer sets that do not correspond to any of the original dl - program in this case .",
    "one may argue that @xmath17 should treat monotonic dl - atoms in the same manner as treating nonmonotonic dl - atoms in default negation .",
    "however , for the dl - program @xmath418 where @xmath228 consists of @xmath419(a),\\ ] ] we have that the resulting dl - program @xmath420 where @xmath421 consists of @xmath422(a ) , \\hspace{1 cm } \\pi_p(a){\\leftarrow}{not \\,}p(a).\\end{aligned}\\ ] ] this dl - program has no strong answer sets at all .",
    "but the original dl - program has a unique strong answer @xmath281 .",
    "even if we replace every @xmath132 occurring in the dl - atom with @xmath308 , the answer is still negative .",
    "similarly , we can show a one - to - one mapping between the weak answer sets of a dl - program @xmath18 and those of @xmath19 .",
    "[ thm : delete : ominus : w ] let @xmath148 be a dl - program",
    ". then    a.   if @xmath152 is a weak answer set of @xmath217 , then @xmath406 is a weak answer set of @xmath19 ; b.   if @xmath407 is a weak answer set of @xmath19 , then @xmath408 is a weak answer set of @xmath18 .",
    "see appendix [ app : b ] .    as a matter of fact",
    ", there is a simpler translation that preservers weak answer sets of dl - programs .",
    "let @xmath423 be the same translation as @xmath19 except that it does not distinguish nonmonotonic dl - atoms from dl - atoms , i.e. , it handles monotonic dl - atoms in the way @xmath19 deals with nonmonotonic dl - atoms .",
    "it is clear that @xmath424 is polynomial .",
    "for instance , let us consider the dl - program @xmath229 in example [ exam:4:new ] .",
    "we have that @xmath425 where @xmath426 consists of @xmath427(a)\\end{aligned}\\ ] ] where @xmath428(a)$ ] .",
    "the interested readers can verify that @xmath281 is the unique weak answer set of @xmath429 .",
    "[ prop : delete : minus : w ] let @xmath187 be a dl - program",
    ". then    a.   if @xmath232 is a weak answer set of @xmath18 , then @xmath406 is a weak answer set of @xmath423 .",
    "b.   if @xmath407 is a weak answer set of @xmath423 , then @xmath408 is a weak answer set of @xmath18 .",
    "the proof is similar to the one of theorem [ thm : delete : ominus : w ] .",
    "note that , to remove the constraint operator from nonmonotonic dl - atoms of a dl - program , in general we must extend the underlying language .",
    "this is because there are dl - programs whose strong answer sets are not minimal , but the translated dl - program contains no nonmonotonic dl - atoms hence its strong answer sets are minimal ( cf .",
    "theorem 4.13 of @xcite ) .",
    "therefore , we conclude that there is no transformation not using extra symbols that eliminates the constraint operator from normal dl - programs while preserving strong answer sets .",
    "recall that @xcite @xcite introduced a polynomial time transformation to translate a dl - atom mentioning no constraint operator into a first - order sentence and proved that , given a canonical dl - program @xmath217 , there is a one - to - one mapping between the strong answer sets of @xmath217 and the mknf models of the corresponding mknf knowledge base ( theorem 7.6 of @xcite ) .",
    "theorem [ thm : delete : ominus : s ] above extends their result from canonical dl - programs to normal dl - programs , by applying the translation @xmath17 first . in particular , the combined transformation is still polynomial for normal dl - programs .",
    "let us briefly recall the basic notions of default logic @xcite .",
    "we assume a first - order language @xmath430 with a signature consisting of predicate , variable and constant symbols , including equality .",
    "default theory @xmath431 _ is a pair @xmath432 where @xmath433 is a set of closed formulas ( sentences ) of @xmath434 , and @xmath40 is a set of _ defaults _ of the form : @xmath435 where @xmath436 ( called _ premise _ ) , @xmath437 @xmath438 ( called _ justification _ ) , ; the generalization we use is common and insignificant for our purposes . ]",
    "@xmath439 ( called _ conclusion _ ) are formulas of @xmath434 .",
    "a default @xmath440 of the form ( [ default ] ) is _ closed _ if @xmath441 are sentences , and a default theory is _ closed _ if all of its defaults are closed . in the following , we assume that every default theory is closed , unless stated otherwise .",
    "let @xmath442 be a default theory , and let @xmath77 be a set of sentences .",
    "we define @xmath443 to be the smallest set satisfying    * @xmath444 , * @xmath445 , and * if @xmath440 is a default of the form ( [ default ] ) in @xmath40 , and @xmath446 , and @xmath447 for each",
    "@xmath448 then @xmath449 ,    where @xmath450 is the classical closure operator , i.e. , @xmath451 for a set of formulas @xmath452 . a set of sentences @xmath453 is an _ extension _ of @xmath431 whenever @xmath454 .",
    "alternatively , a set of sentences @xmath453 is an extension of @xmath431 if and only if @xmath455 , where @xmath456 it is not difficult to see that @xmath457 in ( [ eq : ei : default ] ) can be replaced by @xmath458 . in this section , we will present two approaches to translating a dl - program to a default theory which preserves the strong answer sets of dl - programs . in the first ,",
    "if the given ontology is inconsistent , the resulting default theory is trivialized and possesses a unique extension that consists of all formulas of @xmath459 , while in the second , following the spirit of dl - programs , an inconsistent ontology does not trivialize the resulting default theory",
    ". then we will give a translation from dl - programs under the weakly well - supported answer set semantics @xcite to default theories .",
    "before we proceed , let us comment on the impact of equality reasoning in the context of representing dl - programs by default logic .",
    "the answer set semantics of dl - programs are defined with the intention that equality reasoning in the ontology is fully captured , while at the same time reasoning with rules is conducted relative to the herbrand domain .",
    "the latter implies that equality reasoning is not carried over to reasoning with rules .",
    "for example , the dl - program @xmath460 has two ( strong ) answer sets , @xmath281 and @xmath461 , neither of which carries equality reasoning in the ontology to the rules .",
    "but if the dl - program is translated to the default theory @xmath462 it has ",
    "evaluated under first - order logic with equality  no extensions . as suggested in @xcite",
    ", one can emulate equality reasoning by imposing the unique name assumption ( una ) and a congruence relation on ontology .",
    "although congruence and una in general allow one to extend equality reasoning from the ontology to the rules , we will show that , for the purpose of representing dl - programs by default logic , for the standard default encoding like in the example above , strong answer sets are preserved by treating @xmath463 as a congruence relation on ontology ( i.e. , replacement of equals by equals only applies to the predicates of the ontology ) ; in particular , there is no need to adopt the una .",
    "for the default translation that handles inconsistent ontologies in the original spirit of dl - programs , neither congruence nor una is needed .",
    "these results provide additional insights in capturing dl - programs by default logic .",
    "thanks to fitting , as shown by the following theorem , the equality @xmath463 can be simulated by a congruence in the sense that a first - order formula with equality is satisfiable in a model with true equality if and only if it is satisfiable in a model where @xmath463 is interpreted as a congruence relation .",
    "[ thm : fitting ] let @xmath459 be a first - order language , @xmath77 a set of sentences and @xmath464 a sentence",
    ". then @xmath465 iff @xmath466 , where @xmath467 means that @xmath464 is true in every model of @xmath77 in which @xmath463 is interpreted as an equality relation and @xmath468 consists of the following axioms : @xmath469,\\quad \\mbox{for every function $ f$ of $ \\cal l$,}\\\\ \\label{fit : replacement:3 } &   \\mbox{predicate replacement } & & ( \\forall \\vec x,\\vec y)[(\\vec x\\approx \\vec y)\\supset   ( p(\\vec x)\\supset p(\\vec y))],\\quad \\mbox{for every predicate $ p$ of $ \\cal l$}.\\end{aligned}\\ ] ]    since @xmath463 is a part of @xmath430 , the symmetry and transitivity of @xmath463 in @xmath430 can be easily derived from ( [ fit : replacement:1 ] ) and ( [ fit : replacement:3 ] ) as illustrated by fitting @xcite . in",
    "what follows , we take @xmath463 as a congruence , unless otherwise explicitly stated , and we write @xmath470 for @xmath471 when it is clear from its context ,    before giving the translation from dl - programs to default theories , we first present a transformation for dl - atoms , which will be referred to throughout this section .",
    "let @xmath472 be a dl - program ( for convenience , assume @xmath1 is already translated to a first - order theory ) , @xmath473 an interpretation , and @xmath474 is a first - order sentence translated from @xmath39 :    * if @xmath39 is an atom in @xmath151 , then @xmath475 , and * if @xmath39 is a dl - atom of the form ( [ dl : atom ] ) then @xmath474 is a first - order sentence @xmath476\\supset q(\\vec t)\\ \\",
    "\\textmd { , where}\\ ] ] @xmath477 + ll _",
    "p(c)_hb__p[p(c)s(c ) ] & + _ p(c)_hb__p[p(c)s(c ) ] & + _ p(c)_hb__p[p(c)s(c ) ] & + . where we identify @xmath478 and @xmath4 with their corresponding first - order sentences respectively .",
    "since @xmath14 and @xmath479 mention no variables , @xmath474 has no free variables .",
    "thus @xmath474 is closed .",
    "we present the first transformation from dl - programs to default theories which preserves strong answer sets of dl - programs without nonmonotonic dl - atoms .",
    "let @xmath187 be a dl - program .",
    "we define @xmath480 to be the default theory @xmath481 as follows    * @xmath482 is the congruence rewriting of @xmath1 , i.e. , replacing true equality in @xmath1 by a congruence ; by abusing the symbol we denote the congruence by @xmath463 , together with the axioms ( [ fit : replacement:1 ] ) and ( [ fit : replacement:3 ] ) for every predicate in the underlying language of @xmath1 , denoted by @xmath483 .. ] given an ontology @xmath1 , we assume the predicates in the underlying language of @xmath1 are exactly the ones occurring in @xmath1 .",
    "* @xmath484 consists of , for each dl - rule of the form ( [ dl : rule ] ) in @xmath2 , the default @xmath485 where @xmath474 is defined in the preceding subsection and equality @xmath463 is now taken as the congruence relation above .    it is evident that , given a dl - program @xmath187 , every extension of @xmath486 has the form @xmath487 , for some @xmath232 .",
    "thus , if @xmath1 is consistent then every extension of @xmath480 is consistent . on the other hand ,",
    "if @xmath1 is inconsistent then @xmath480 has a unique extension which is inconsistent .",
    "it is clear that @xmath480 is of polynomial size of the dl - program @xmath219 , since the size of @xmath151 is polynomial in the size of @xmath2 .",
    "[ exam:4 ]    * note that @xmath488 where @xmath489 and @xmath490 it is easy to see that @xmath491 has a unique extension @xmath492 . * note that @xmath493 where @xmath494 and @xmath495 one can verify that @xmath492 is the unique extension of @xmath496 though we know that @xmath229 has two strong answer sets , @xmath280 and @xmath281 .",
    "the default theory @xmath496 in the above example shows that if a dl - program @xmath18 mentions nonmonotonic dl - atoms , then @xmath480 may have no corresponding extensions for some strong answer sets of @xmath18 .",
    "however , the one - to - one mapping between strong answer sets of @xmath18 and the extensions of @xmath480 does exist for dl - programs mentioning no nonmonotonic dl - atoms and whose knowledge bases are consistent .    in the following , when it is clear from the context",
    ", we will identify a finite set @xmath77 of formulas as the conjunction of elements in @xmath77 for convenience .",
    "the following lemma relates a disjunctive normal form to a conjunctive normal form , which is well - known .",
    "[ lem:6 ] let @xmath497 , @xmath498 and @xmath499 where @xmath500 are atoms",
    ". then @xmath501    [ lem : forget ] let @xmath502 be a set of ground atoms , @xmath503 and @xmath504 are formulas not mentioning true equality , the predicates @xmath505 and the predicates occurring in @xmath502 , where @xmath506 .",
    "then @xmath507    \\(1 ) the direction from right to left is obvious as @xmath508 .",
    "let us consider the other direction .",
    "it suffices to show @xmath509 towards a contradiction , suppose that the left hand side of this statement holds and there is an interpretation @xmath510 and @xmath511 .",
    "it follows that @xmath512 .",
    "thus there exists some @xmath513 such that @xmath514 . without loss of generality , we assume @xmath515 .",
    "let us consider the following two cases :    * @xmath516 .",
    "in this case we have @xmath517 , by which @xmath518 due to @xmath519 . as the formulas @xmath520 and @xmath504 do not involve the predicate @xmath132 , the interpretation @xmath521 which coincides with @xmath522 except that @xmath523 satisfies the conditions @xmath524 and @xmath525 . from @xmath526",
    "it follows that @xmath527 ; thus @xmath528 .",
    "it follows that there exists some @xmath529 such that @xmath530 . without loss of generality",
    ", we can assume @xmath531 . with a similar case analysis and continuing the argument",
    ", it follows that there exists an interpretation @xmath532 such that @xmath533 , @xmath534 and @xmath535 .",
    "it follows that @xmath536 .",
    "we can finally construct an interpretation @xmath537 in a similar way that satisfies * * @xmath538 , * * @xmath539 , and * * @xmath540 .",
    "+ as the latter combined with the assumption implies @xmath541 , we have a contradiction .",
    "* @xmath542 .",
    "similar to the previous case .",
    "\\(2 ) the direction from right to left is obvious again .",
    "for the other direction , suppose that there is an interpretation @xmath522 such that @xmath543 and @xmath511 .",
    "we construct an interpretation @xmath544 , which is the same as @xmath522 except that @xmath545 , @xmath546 if @xmath547 , and @xmath548 if @xmath549 , for every @xmath550 .",
    "it is clear that @xmath551 and @xmath552 .",
    "however , we have @xmath553 , which implies @xmath554 , a contradiction",
    ".    please note here that , in the above lemma , it is crucial that @xmath503 and @xmath504 mention no true equality .",
    "otherwise , one can check that , if @xmath463 is taken as true equality , then on the one hand we have @xmath555\\wedge [ ( p(c_2)\\supset q)\\wedge ( \\neg p(c_2)\\supset\\neg q)]\\models q\\ ] ] and on the other we have @xmath556 .",
    "it is clear that this discrepancy will not arise if @xmath463 is treated as a congruence relation and there is no predicate replacement axiom for the predicate @xmath132 .",
    "[ lem : df:1 ] let @xmath187 be a dl - program and @xmath232",
    ". then    a.   if @xmath137 is an atom in @xmath151 and @xmath1 is consistent , then @xmath153 iff @xmath557 . b.   if @xmath348(\\vec t)$ ] is a monotonic dl - atom , then @xmath153 iff @xmath557 .",
    "\\(i ) since @xmath137 is an atom and @xmath1 mentions no predicates occurring in @xmath152 , we have that @xmath558 is consistent if and only if @xmath1 is consistent .",
    "it follows that @xmath153 iff @xmath155 iff @xmath559 since @xmath560 .",
    "it is obvious that if @xmath561 then @xmath557 .",
    "it remains to show that @xmath561 if @xmath562 .",
    "suppose @xmath563 , i.e. , @xmath564 .",
    "thus there exists an interpretation @xmath565 such that @xmath566 and @xmath567 . recall that @xmath482 has no equality , and it has no predicates in common with @xmath152 .",
    "we can construct an interpretation @xmath568 which coincides with @xmath565 except that @xmath569 .",
    "it follows @xmath570 by @xmath571 , which contradicts @xmath567 as @xmath565 coincides with @xmath572 for the predicate occurring in @xmath573 .",
    "( ii ) for clarity , and without loss of generality , let @xmath359 .",
    "we have that @xmath574 let us consider the following two cases :    \\(a ) @xmath575 .",
    "we have that equation ( [ eqn : lem:6:1 ] ) holds iff @xmath576 by ( 2 ) of lemma [ lem : forget ] .",
    "it follows that + @xmath576 + @xmath577 + @xmath578 + @xmath579 ( now @xmath463 is taken as an equality , by theorem [ thm : fitting ] ) + @xmath580 .",
    "on the other hand , let @xmath581 .",
    "we have that + @xmath153 + @xmath582 ( since @xmath137 is monotonic ) + @xmath583 + @xmath584 + @xmath585 + @xmath586 + @xmath587 ( now @xmath463 is taken as a congruence , by theorem [ thm : fitting ] ) .",
    "\\(b ) @xmath588 . by ( 1 ) of lemma [ lem :",
    "forget ] , we have that equation ( [ eqn : lem:6:1 ] ) holds iff @xmath589 it follows that + @xmath590 + @xmath591 + @xmath592 + @xmath593 ( now @xmath463 is taken as an equality , by theorem [ thm : fitting ] ) + @xmath580 .    conversely , suppose @xmath153 .",
    "let @xmath594 , @xmath595 and @xmath596 .",
    "since @xmath137 is monotonic , for any @xmath597 , we have that @xmath598 , i.e. , @xmath599 it follows that @xmath600 which implies , by lemma [ lem:6 ] , @xmath601 i.e. , @xmath602 and equivalently @xmath603 where @xmath463 is taken as a congruence relation .",
    "consequently , @xmath153 iff @xmath557 .",
    "we note that , in ( i ) of the above lemma , we can not replace  @xmath557 \" by",
    " @xmath604 \" since @xmath605 does not imply @xmath606 . for instance ,",
    "let @xmath607 , @xmath287 and @xmath608 where @xmath132 is a predicate not belonging to the ontology and @xmath463 is equality .",
    "then we have that @xmath609 as @xmath463 is an equality , but @xmath610 as @xmath611 with @xmath463 being a congruence relation ; as @xmath132 does not occur in @xmath1 , no replacement axiom of @xmath132 is in @xmath482 .    [",
    "prop : df:1 ] let @xmath187 be a dl - program and @xmath232 where @xmath1 is consistent and @xmath612 .",
    "then @xmath613 for any @xmath614 , where @xmath615 is defined as ( [ eq : ei : default ] ) for @xmath486 and @xmath616 .",
    "we prove this by induction on @xmath617 .",
    "base : if @xmath618 then it is obvious since @xmath482 is consistent ( as @xmath1 is consistent ) and @xmath619 .",
    "step : suppose it holds for @xmath620",
    ". now for any @xmath621 , @xmath622 if and only if there exists a dl - rule @xmath623 in @xmath2 such that    * @xmath394 for any @xmath624 , and * @xmath625 for any @xmath626 .",
    "we have that + ( i ) @xmath625 + iff @xmath627 ( by lemma [ lem : df:1 ] and @xmath612 ) + iff @xmath628 .",
    "+ ( ii ) @xmath394 + iff @xmath629 ( by inductive assumption ) + iff @xmath630 ( by lemma [ lem : df:1 ] and @xmath612 ) + iff @xmath631 ( since @xmath632 ) .",
    "consequently we have @xmath633 for any @xmath614 .",
    "[ thm:3:in ] let @xmath187 be a dl - program such that @xmath612 and @xmath251 .",
    "if @xmath1 is consistent then @xmath152 is a strong answer set of @xmath18 if and only if @xmath634 is an extension of @xmath480 .",
    "@xmath635 it suffices to show @xmath455 where @xmath615 is defined as ( [ eq : ei : default ] ) for @xmath480 and @xmath453 .",
    "+ @xmath634 + @xmath636 ( since @xmath637 ) + @xmath638 ( by lemma [ prop : df:1 ] ) + @xmath639 + @xmath640 ( since @xmath641 ) + @xmath642 + @xmath643 @xmath453 is an extension of @xmath480 .",
    "@xmath644 @xmath453 is an extension of @xmath480 + @xmath645 where @xmath615 is defined as ( [ eq : ei : default ] ) for @xmath480 and @xmath453 + @xmath646 + @xmath647 + @xmath648 + @xmath649 ( by lemma [ prop : df:1 ] ) + @xmath650 + @xmath643 @xmath152 is a strong answer set of @xmath18 .",
    "since dl - programs can be translated into ones without nonmonotonic dl - atoms according to theorem [ thm : delete : ominus : s ] , we immediately have the following :    [ thm:4:in ] let @xmath187 be a dl - program and @xmath232",
    ". if @xmath1 is consistent then @xmath152 is a strong answer set of @xmath18 if and only if @xmath651 is an extension of @xmath652 .",
    "@xmath152 is a strong answer set of @xmath18 + iff @xmath406 is a strong answer set of @xmath653 ( by theorem [ thm : delete : ominus : s ] ) + iff @xmath651 is an extension of @xmath654 ( by theorem [ thm:3:in ] ) .",
    "although the translation @xmath655 given here is kind of  standard \" , as it draw ideas from @xcite and @xcite , there are a number of subtleties in dealing with dl - programs which make it non - trivial , in addition to the problem of equality .",
    "in translating dl - programs to mknf knowledge bases , @xcite @xcite did not consider dl - atoms containing the constraint operator .",
    "in addition , there is an essential difference in that their approach does not work here as illustrated by the next example .",
    "[ exam:5 ] let @xmath187 where @xmath656 , @xmath657 an individual in the description logic but not a constant occurring in @xmath2 , and @xmath2 consist of @xmath658(a).\\ ] ] it is trivial that @xmath659 and there is no interpretation of @xmath18 satisfying the dl - atom @xmath660(a)$ ] , thus it is monotonic and then the unique strong answer set of @xmath18 is @xmath280 . in terms of motik and rosati s translation , we would have the default theory @xmath661 where @xmath662 since the sentence @xmath663 is classically equivalent to @xmath664 , the unique extension of @xmath431 is @xmath665 ; when restricted to @xmath151 , it is @xmath281 which corresponds to no answer set of @xmath18 at all .",
    "it is not difficult to check that the default theory @xmath480 has a unique extension @xmath666 which corresponds to the strong answer set @xmath280 of @xmath18 .",
    "another subtle point is that the default translation alone may not capture the semantics of a dl - program .",
    "if a dl - program @xmath18 mentions nonmonotonic dl - atoms then it is possible that @xmath480 has some extensions that do not correspond to any strong answer sets of @xmath18 .",
    "[ exam:6 ] let @xmath187 where @xmath295 and @xmath2 consists of @xmath667(a ) .",
    "\\end{aligned}\\ ] ] it is not difficult to check that @xmath668(a)$ ] is nonmonotonic and @xmath18 has a unique strong answer set @xmath669 . but note that the default theory @xmath670 where @xmath671 and @xmath40 consists of @xmath672 has a unique extension @xmath492 which does not correspond to any strong answer set of @xmath18 . however ,",
    "if we apply the translation @xmath17 to @xmath18 first , we will have the dl - program @xmath299 , where @xmath316 consists of @xmath673(a ) .",
    "\\end{aligned}\\ ] ] it is tedious but not difficult to check that the unique strong answer set of @xmath19 is @xmath669 .",
    "when we apply the translation @xmath655 to @xmath19 , we have the default theory @xmath674 where @xmath675 and @xmath676 consists of @xmath677}{\\pi_a}.    \\end{aligned}\\ ] ] the interested reader can verify that the unique extension of @xmath652 is @xmath678 , which corresponds to the unique strong answer set of @xmath18 .",
    "we note that the translation @xmath655 does not preserve weak answer sets of a normal dl - program , as shown by @xmath496 in example [ exam:4 ] , not even for canonical dl - programs , as shown by @xmath491 in example [ exam:4 ] .    to preserve the weak answer sets of a dl - program ,",
    "one may attempt to  shift \" @xmath679 from premise to justification of a default in the translation @xmath655 ; however , this does not work .",
    "consider the dl - program @xmath680 where @xmath681(a)\\}$ ] . under the suggestion",
    ", we would have obtained the default theory @xmath442 , where @xmath682 and @xmath40 consists of @xmath683 it is clear that @xmath431 has a unique extension @xmath684 , but we know that @xmath18 has two weak answer sets , @xmath280 and @xmath281 .",
    "this issue can be addressed by a translation which makes all dl - atoms occur negatively .",
    "let @xmath144 be a dl - rule of the form ( [ dl : rule ] ) .",
    "we define @xmath685 to be the rule @xmath686 where @xmath687 if @xmath688 is a dl - atom , and @xmath688 otherwise , where @xmath689 is a fresh propositional atom . for every dl - program @xmath187",
    ", we define @xmath690 where @xmath691 consists of the rules in @xmath692    [ exam:8 ] let us consider the above dl - program @xmath187 where @xmath295 and @xmath681(a)\\}$ ] .",
    "we have that @xmath690 where @xmath693(a)$ ] and @xmath691 consists of the below two dl - rules : @xmath694(a).\\end{aligned}\\ ] ] it is easy to see that @xmath695 has two weak answer sets @xmath696 and @xmath281 .    [ prop:6 ] let @xmath187 be a dl - program and @xmath232 .",
    "then @xmath152 is a weak answer set of @xmath18 iff @xmath182 is a weak answer set of @xmath695 where @xmath697 .    as @xmath698 iff @xmath625 for any @xmath699 , we have that @xmath700_o^{i'}$ ] and for any rule @xmath262 in @xmath701_o^{i'}\\setminus wp_o^i$ ] , @xmath146 and @xmath702 has the form @xmath689 for some @xmath699 .",
    "thus we have @xmath703^{w , i}})\\cap \\{\\sigma_b\\mid b\\in{\\textit{dl}}_p\\}$ ] and @xmath704^{w , i'}})$ ] .",
    "this completes the proof .",
    "[ prop:7 ] let @xmath187 be a dl - program such that @xmath1 is consistent , @xmath612 and all dl - atoms occur negatively in @xmath2 , i.e. , for any rule @xmath623 of @xmath2 , there is no dl - atom in @xmath392 .",
    "then an interpretation @xmath232 is a weak answer set of @xmath18 iff @xmath705 is an extension of @xmath480 .    by lemma [ lem : df:1 ] , we can inductively prove @xmath706 for any @xmath614 where @xmath615 is defined as ( [ eq : ei : default ] ) for @xmath453 and @xmath480 .",
    "the remainder of the proof is similar to the one of theorem [ thm:3:in ] .",
    "together with theorem [ thm : delete : ominus : w ] , the above two propositions imply a translation from dl - programs with consistent ontologies under the weak answer set semantics to default theories .",
    "let @xmath187 be a dl - program where @xmath1 is consistent .",
    "the below conditions are equivalent to each other :    a.   an interpretation @xmath232 is a weak answer set @xmath18 .",
    "b.   @xmath707 is an extension of @xmath708 where @xmath709 .",
    "one can easily see that the translation @xmath710 , i.e. , applying @xmath711 firstly then @xmath17 and finally @xmath655 , is polynomial .",
    "thus , under the weak answer set semantics , we obtain a polynomial , faithful and modular translation from dl - programs with consistent ontologies to default theories .",
    "a dl - program may have nontrivial strong answer sets even if its ontology knowledge base is inconsistent .",
    "for instance , let @xmath712 , where @xmath713 and @xmath714 . obviously @xmath18 has two strong answer sets , @xmath715 and @xmath716 , while the translation introduced in the last subsection , @xmath480 , yields a unique extension which is inconsistent . in combining different knowledge bases , it is highly desirable that the whole system is not trivialized due to the imperfection of a subsystem . for dl - programs ,",
    "this feature is naturally built into the strong answer set semantics .",
    "when considering embedding , it is important that this feature be preserved .    in theorem",
    "[ thm:3:in ] and corollary [ thm:4:in ] , we require @xmath1 to be consistent and we assume a limited congruence rewriting , i.e. , the equality @xmath463 is understood as a congruence and the congruence is applied only to the predicates of underlying description logic . to relax these conditions ,",
    "we propose the following translation @xmath717 which is slightly different from @xmath655 .    given a dl - program @xmath187 , @xmath718 is the default theory @xmath719 , where @xmath40 is the same as the one in the definition of @xmath655 except for dl - atoms .",
    "suppose @xmath137 is a dl - atom of the form ( [ dl : atom ] ) .",
    "we define @xmath720 to be the first - order sentence : @xmath721\\supset q(\\vec t)\\ ] ] where @xmath1 is identified with its corresponding first - order theory in which we do not require equality to be a congruence .",
    "evidently , given a dl - program @xmath18 , every extension of @xmath718 is consistent and has the form @xmath722 for some @xmath232 .",
    "let @xmath187 be a dl - program where @xmath723 and @xmath2 consists of @xmath724(a)$ ] .",
    "it is evident that @xmath1 is inconsistent and @xmath18 has a unique strong answer set @xmath281 .",
    "now we have that the corresponding first - order theory of @xmath1 is @xmath725 , and @xmath726 where @xmath727 it is not difficult to verify that @xmath728 is the unique extension of @xmath718 which is consistent , while the unique extension of @xmath480 is inconsistent .",
    "different from @xmath655 in another aspect , the translation @xmath717 keeps equality as equality .",
    "for instance , for the dl - program @xmath18 in section  [ sec : equality ] , we have that @xmath729 where @xmath730 .",
    "evidently , the default theory @xmath718 has two extensions @xmath731 and @xmath732 .",
    "the translation @xmath717 is obviously modular",
    ". we will show below that it is faithful .",
    "[ lem : df:9 ] let @xmath187 be a dl - program , @xmath137 an atom or a monotonic dl - atom and @xmath232",
    ". then @xmath153 if and only if @xmath733 .",
    "the conclusion is evident if @xmath137 is an atom or @xmath1 is inconsistent .",
    "suppose @xmath137 is a dl - atom and @xmath1 is consistent .",
    "let @xmath348(\\vec t)$ ] .",
    "thus @xmath573 is of the form @xmath734 which implies @xmath735 .",
    "we have that + @xmath153 + iff @xmath736 ( by lemma ( ii ) of [ lem : df:1 ] , where @xmath463 is taken as a congruence relation ) + iff @xmath737 + iff @xmath738 + iff @xmath739 + iff @xmath740 ( by theorem [ thm : fitting ] , where @xmath463 is taken as equality ) + iff @xmath741 .",
    "[ prop : df:3 ] let @xmath187 be a dl - program such that @xmath612 , @xmath232 and @xmath742 .",
    "then @xmath613 for any @xmath614 , where @xmath743 is defined as ( [ eq : ei : default ] ) for @xmath744 and @xmath453 .",
    "we prove this by induction on @xmath385 .",
    "base : it is obvious for @xmath618 since @xmath745 .    step : suppose it holds for @xmath620 . for any @xmath621 , @xmath622 if and only if there exists a dl - rule @xmath623 such that    * @xmath394 for any @xmath624 , and * @xmath625 for any @xmath626 .",
    "we have that + ( i ) @xmath625 + iff @xmath746 ( by lemma [ lem : df:9 ] ) + iff @xmath747 .",
    "+ ( ii ) @xmath748 + iff @xmath629 ( by the inductive assumption ) + iff @xmath749 ( by lemma [ lem : df:9 ] ) + iff @xmath750 .",
    "it follows that @xmath622 if and only if @xmath751 .",
    "consequently @xmath633 for any @xmath614 .    in the next theorem and corollary ,",
    "we present the main results of this section , which extend theorem [ thm:3:in ] and corollary [ thm:4:in ] respectively .",
    "[ thm:6 ] let @xmath187 be a dl - program such that @xmath612 and @xmath251 .",
    "then @xmath152 is a strong answer set of @xmath18 if and only if @xmath742 is an extension of @xmath718 .",
    "@xmath635 it is sufficient to show @xmath455 where @xmath615 is defined as ( [ eq : ei : default ] ) for @xmath718 and @xmath453 .",
    "+ @xmath742 + @xmath752 + @xmath753 ( since @xmath152 is a strong answer set of @xmath18 ) + @xmath754 ( by lemma [ prop : df:3 ] ) + @xmath755 ( since @xmath756 ) + @xmath642 + @xmath643 @xmath453 is an extension of @xmath718 .",
    "@xmath644 @xmath453 is an extension of @xmath718 + @xmath645 where @xmath615 is defined as ( [ eq : ei : default ] ) for @xmath718 and @xmath453 + @xmath757 + @xmath758 + @xmath648 + @xmath649 ( by lemma  [ prop : df:3 ] ) + @xmath650 + @xmath643 @xmath152 is a strong answer set of @xmath18 .",
    "[ thm:7 ] let @xmath187 be a dl - program and @xmath232 .",
    "then @xmath152 is a strong answer set of @xmath18 if and only if @xmath759 is an extension of @xmath760 .",
    "@xmath152 is a strong answer set of @xmath18 + iff @xmath406 is a strong answer set of @xmath19 ( by theorem [ thm : delete : ominus : s ] ) + iff @xmath759 is an extension of @xmath761 ( by theorem [ thm:6 ] ) .",
    "note that , for the dl - program @xmath18 in example [ exam:8 ] , we have @xmath729 where @xmath40 consists of @xmath762 it is easy to see that @xmath763 is the unique extension of @xmath718 . as @xmath18 has two weak answer sets @xmath280 and @xmath281 , the translation @xmath717 alone does not preserve weak answer sets of dl - programs .",
    "however , one can further check that @xmath764 has exact two extensions @xmath731 and @xmath765 .",
    "we show below that , combining with the translation @xmath711 , the translation @xmath717 actually preserves weak answer sets .",
    "[ prop:8 ] let @xmath187 be a dl - program such that @xmath1 is consistent , @xmath612 and all dl - atoms occurs negative in @xmath2 , i.e. , there for any rule @xmath623 of @xmath2 , there is no dl - atom in @xmath392 .",
    "then an interpretation @xmath232 is a weak answer set of @xmath18 iff @xmath742 is an extension of @xmath718 .",
    "the proof is similar to the one of proposition  [ prop:7 ] .",
    "together with theorem [ thm : delete : ominus : w ] , the propositions [ prop:6 ] and [ prop:8 ] imply a translation from dl - programs with consistent ontologies under the weak answer set semantics to default theories .",
    "let @xmath187 be a dl - program where @xmath1 is consistent .",
    "the following conditions are equivalent :    a.   the interpretation @xmath232 is a weak answer set @xmath18 .",
    "b.   @xmath766 is an extension of @xmath767 where @xmath709 .",
    "since there are no dl - atoms that occur positively in @xmath768 , the translation @xmath769 , i.e. , applying @xmath711 first and then @xmath17 , is polynomial . consequently the combination @xmath770 is polynomial as well .",
    "therefore , we have a polynomial , faithful and modular translation from dl - programs under the weak answer set semantics to default theories .      to avoid circular justifications in some weak and strong answer sets of dl - programs , recently well - supported semantics for dl - programs was proposed @xcite . in what follows",
    ", we will show that , under the weakly well - supported answer set semantics , dl - programs can be translated into default theories by an extension of the translation @xmath655 above . in particular , the translation is polynomial , faithful and modular .",
    "let us recall the basic notions and notations of well - supported semantics below .",
    "let @xmath187 be a dl - program , @xmath453 and @xmath152 two sets of atom in @xmath151 with @xmath771 .",
    "the notion that _ @xmath453 up to @xmath152 satisfies an atom ( or a dl - atom , or their negation by default ) @xmath772 under @xmath1 _ , written @xmath773 , is as follows :    * @xmath774 if @xmath775 ; @xmath776 if @xmath777 , where @xmath132 is an atom ; * @xmath778 if for every @xmath92 with @xmath779 , @xmath780 ; @xmath781 if there is no @xmath92 with @xmath779 such that @xmath782 , where @xmath137 is a dl - atom .",
    "the notion `` _ up to satisfaction _ '' is extended for a set of atoms dl - atoms , and their negation by default in a standard manner . the operator @xmath783 is defined as : @xmath784 where @xmath771 .",
    "it has been shown that if @xmath152 is a model of @xmath18 , then the operator is monotone in the sense that for every , @xmath785 , @xmath786 . as the operator is also continuous in this sense (",
    "thanks to compactness of answering dl queries ) , for any model @xmath152 of @xmath18 the monotone sequence @xmath787 , where @xmath788 , @xmath789 , @xmath790 , converges to a fixpoint denoted @xmath791 .    in the rest of this paper , for convenience we will use the term _ level mapping justification _ to refer to the existence of such a fixpoint , borrowing a concept from a similar characterization for normal logic programs @xcite as well as for weight constraint programs @xcite .",
    "a model @xmath152 of @xmath18 is a _ weakly ( .",
    "strongly ) well - supported answer set _ of @xmath18 if @xmath152 coincides with the fixpoint @xmath792 ( resp .",
    "@xmath793 , where @xmath794 and @xmath795    as the next proposition shows , the strongly well - supported answer set semantics coincides with the strong answer set semantics for the dl - programs that mention no nonmonotonic dl - atoms .",
    "[ prop:9 ] let @xmath187 be a dl - program with @xmath612 and @xmath232 a model of @xmath22 .",
    "then @xmath152 is a strong answer set of @xmath18 iff @xmath152 is a strongly well - supported answer set of @xmath18 .    @xmath644 this direction is obvious since , for any dl - program , each strongly well - supported answer set is a weakly well - supported answer sets ( corollary 3 of @xcite ) and each weakly well - supported answer set is a strong answer set ( theorem 6 in @xcite ) .",
    "@xmath635 it suffices to show @xmath796 .",
    "since @xmath637 .",
    "we only need to show inductively , @xmath797 for any @xmath798 .",
    "base : it is evident for @xmath799 .",
    "step : let us consider the case @xmath800 . for any atom @xmath622 , there must exist a rule @xmath623 in @xmath2 s.t .",
    "* @xmath394 for any @xmath624 since @xmath612 , and * @xmath625 for any @xmath626    note that all dl - atoms in @xmath2 are monotonic .",
    "it follows that @xmath801 for any @xmath624 and thus @xmath802 by the inductive assumption .",
    "on the other hand , since @xmath625 and @xmath688 is monotonic , we have that , @xmath803 for any @xmath804 .",
    "it implies @xmath805 and thus @xmath806 .",
    "consequently @xmath807 and then @xmath808 . it follows that @xmath152 is a strongly well - supported answer set of @xmath22 .    before presenting a translation under weakly well - supported answer set semantics , let us reconsider the dl - program @xmath18 in example [ exam:6 ] .",
    "recall that the dl - program @xmath18 has a strong answer set @xmath669 and the unique extension of @xmath480 is @xmath809 . actually , @xmath280 is not a model of @xmath18 at all .",
    "we can check that @xmath18 has neither a weakly well - supported answer set , nor a strongly well - supported answer set .",
    "thus the translation @xmath655 works neither for weakly nor for strongly well - supported answer set semantics of dl - programs .",
    "surprisingly , a small addition to our default logic encoding will result in a one - one correspondence between the weakly well - supported answer sets of a dl - program and the corresponding default extensions , for arbitrary dl - programs .",
    "below , we consider the dl - programs whose ontology component is consistent .",
    "formally , given a dl - program @xmath187 where @xmath1 is consistent , we define @xmath810 where @xmath811 is exactly the same as @xmath655 except that @xmath40 includes , for each @xmath812 , the default @xmath813 it is evident that any extension @xmath453 of @xmath814 is equivalent to @xmath815 for some @xmath232 .",
    "let us reconsider the dl - program @xmath18 in example [ exam:6 ] .",
    "the default theory @xmath816 where @xmath40 consists of the ones produced by @xmath655 and additionally the ones @xmath817 it is not difficult to check that @xmath814 has no extension .",
    "this example also demonstrates that @xmath811 does not preserve the strong answer sets of dl - programs as @xmath18 has a strong answer set @xmath669 .    in the following ,",
    "given a dl - program @xmath187 and @xmath232 , we denote @xmath818 and @xmath819 for convenience .",
    "[ lem : forget:2 ] let @xmath820 and @xmath821 be two sets of atoms such that @xmath822 , @xmath823 and @xmath504 are formulas not mentioning the predicate @xmath824 and the predicates occurring in @xmath825 .",
    "then @xmath826    the direction from right to left is obvious .",
    "let us consider the other direction .",
    "suppose there is an interpretation @xmath522 such that @xmath827 but @xmath511 , by which we have @xmath828 .",
    "it follows that @xmath829 .",
    "we construct the interpretation @xmath830 that is same to @xmath522 except that    * @xmath831 , and @xmath832 , * @xmath833 for every @xmath834 , and * @xmath548 for every @xmath835 .",
    "it is clear that @xmath836 and @xmath552 .",
    "however , we have @xmath554 by @xmath837 , a contradiction .",
    "[ lem:9 ] let @xmath187 be a dl - program , @xmath348(\\vec t)$ ] a dl - atom and @xmath232 .",
    "a.   @xmath153 iff @xmath838 . b.   if @xmath804 then @xmath839 iff @xmath840 .    for clarity and without loss of generality ,",
    "let @xmath359 .",
    "\\(i ) we have that at first @xmath841 + iff @xmath842 + iff @xmath843 + iff @xmath844 ( by lemma [ lem : forget:2 ] ) + iff @xmath845 + iff @xmath846 ( by theorem [ thm : fitting ] , where @xmath463 is taken as equality ) + iff @xmath153 .",
    "\\(ii ) @xmath644 by @xmath847 , we have that , for any @xmath92 with @xmath848 , @xmath849 which implies @xmath850",
    ". thus @xmath782 by ( i ) .",
    "consequently @xmath839 .",
    "@xmath635 let @xmath851 and @xmath852 .",
    "it is clear that @xmath853 .",
    "note that for any @xmath92 with @xmath848 , @xmath782 , which implies @xmath854 by ( i ) , i.e. , for any @xmath597 , we have that @xmath855 which implies that + @xmath856 thus we have , by lemma [ lem:6 ] @xmath857 i.e. , @xmath858 consequently we have @xmath859 .",
    "it is easy to see that if @xmath137 is an atom and @xmath1 is consistent , then both ( i ) and ( ii ) of the above lemma hold .",
    "[ lem : ei : consistent ] let @xmath187 be a dl - program where @xmath1 is consistent and @xmath232 is a model of @xmath22 .",
    "then we have that , for any @xmath614 , @xmath615 is consistent where @xmath615 is defined as ( [ eq : ei : default ] ) for @xmath814 and @xmath860 .",
    "it is sufficient to show that @xmath861 for every @xmath614 .",
    "base : it is clear for @xmath618 since @xmath1 is consistent . for the case @xmath862 , we have that @xmath863 . if @xmath864 is inconsistent then there must exist a rule @xmath623 in @xmath2 such that    * @xmath865 , * @xmath866 for every @xmath624 , and * @xmath628 for every @xmath626 .",
    "it is evident that @xmath625 for every @xmath867 by ( i ) of lemma [ lem:9 ] . and note that + @xmath866 + @xmath868 + @xmath869 + @xmath580 by ( i ) of lemma [ lem:9 ] .",
    "it follows that @xmath870 since @xmath152 is a model of @xmath18 .",
    "it contradicts with @xmath865 .",
    "step : suppose @xmath871 is consistent where @xmath872 . for any atom @xmath621 , @xmath751 if and only if there exists a rule @xmath873 in @xmath2 such that    * @xmath874 for any @xmath875 , and * @xmath876 for any @xmath877 .",
    "it is clear that @xmath176 for any @xmath877 by ( i ) of lemma [ lem:9 ] .",
    "since @xmath871 is consistent by the inductive assumption , we have that @xmath878 by @xmath879 . thus it follows that + @xmath880 + @xmath881 + @xmath882 since @xmath883 + @xmath884 by ( i ) of lemma [ lem:9 ] .",
    "it implies that @xmath870 since @xmath152 is a model of @xmath18 .",
    "thus @xmath885 is consistent .",
    "[ lem:10 ] let @xmath187 be a dl - program where @xmath1 is consistent and @xmath232 a model of @xmath22 .",
    "then we have that , for any @xmath614 ,    a.   @xmath886 , and b.   @xmath887    where @xmath615 is defined as ( [ eq : ei : default ] ) for @xmath814 and @xmath860 .    we prove ( i ) and ( ii ) by induction on @xmath617 .",
    "\\(i ) base : it is evident for @xmath618 .",
    "step : suppose it holds for @xmath620 where @xmath798 . for any atom @xmath621 , we have that @xmath888 if and only if there exists a rule @xmath623 in @xmath2 such that    * @xmath889 for any @xmath624 , and * @xmath625 for any @xmath626",
    ".    by ( i ) of lemma [ lem:9 ] , @xmath625 iff @xmath890 , and by ( ii ) of lemma [ lem:9 ] , we have + @xmath889 + @xmath891 + @xmath892 ( by the induction assumption ) + @xmath893 ( since @xmath894 ) + @xmath895 .",
    "\\(ii ) base : it is clear for @xmath618 . let us consider the case @xmath862 . for any atom @xmath896 , there exists a rule @xmath623 in @xmath2 such that    * @xmath866 for any @xmath624 , and * @xmath628 for any @xmath626 .    by @xmath866 , we have @xmath897 .",
    "thus @xmath840 for any @xmath182 such that @xmath804 .",
    "it implies @xmath898 by ( ii ) of lemma [ lem:9 ] . by ( i ) of lemma [ lem:9 ] and @xmath628 , it is evident @xmath625 .",
    "it follows that @xmath899 .",
    "step : suppose it holds for @xmath620 where @xmath872 . for any atom @xmath900 , there exists a rule @xmath873 in @xmath2 such that    * @xmath880 for any @xmath875 , and * @xmath876 for any @xmath877 .",
    "since @xmath152 is a model of @xmath18 , @xmath871 is consistent by lemma [ lem : ei : consistent ] .",
    "note that for any @xmath872 and @xmath901 .",
    "it implies @xmath883 .",
    "we have that + @xmath880 + @xmath902 + @xmath903 by ( ii ) of lemma [ lem:9 ] + @xmath904 by the inductive assumption and the monotonicity of @xmath905 .",
    "notice again that @xmath876 implies @xmath176 by ( i ) of lemma [ lem:9 ] .",
    "thus it follows that @xmath906 .",
    "this completes the proof",
    ".    please note that it does not generally hold that @xmath907 in the above lemma .",
    "for instance , let us consider the dl - program @xmath680 where @xmath2 consists of @xmath908(a).\\ ] ]    let @xmath287 .",
    "it is obvious that @xmath909 , i.e. @xmath910 .",
    "however , it is clear that @xmath911 since @xmath912 where @xmath913(a)$ ] . thus @xmath914 .",
    "the theorem below shows that the polynomial and modular translation @xmath811 preserves the weakly well - supported answer set semantics of dl - programs .",
    "thus it is faithful .",
    "[ thm:8 ] let @xmath187 be a dl - program where @xmath1 is consistent and @xmath232 a model of @xmath18 .",
    "then we have that @xmath152 is a weakly well - supported answer set of @xmath22 iff @xmath860 is an extension of @xmath814 .",
    "@xmath635 to show @xmath455 where @xmath615 is defined as ( [ eq : ei : default ] ) for @xmath453 and @xmath814 , it is sufficient to show @xmath915 since @xmath916 , @xmath863 and @xmath615 is consistent for any @xmath614 by lemma [ lem : ei : consistent ] .    for any @xmath621 ,",
    "it is clear that @xmath917 iff @xmath870 iff @xmath918 for some @xmath798 since @xmath919 .    on the one hand",
    ", @xmath918 implies @xmath920 by ( i ) of lemma [ lem:10 ] and then @xmath921 , i.e. @xmath922 . on the other hand @xmath922 implies @xmath923 , i.e. @xmath924 for some @xmath798 .",
    "it follows that @xmath925 by ( ii ) of lemma [ lem:10 ] .",
    "thus @xmath870 and the @xmath917 .    consequently , we have @xmath915 .    @xmath644 by theorem 3 of @xcite , it is clear that @xmath926 .",
    "we only need to show @xmath927 . for any atom @xmath870",
    ", we have that + @xmath928 + @xmath929 since @xmath455 + @xmath930 for some @xmath798 since @xmath615 is consistent for any @xmath614 + @xmath931 by ( ii ) of lemma [ lem:10 ] + @xmath932 .",
    "this completes the proof .",
    "together with theorem  [ thm : delete : ominus : s ] and proposition  [ prop:9 ] , the above theorem implies another translation from dl - programs to default theories that preserves the strong answer set semantics .",
    "let @xmath187 be a dl - program where @xmath1 is consistent and @xmath232 .",
    "* if @xmath612 then @xmath152 is a strong answer set of @xmath18 iff @xmath933 is an extension of @xmath814 iff @xmath152 is a strongly well - supported answer set of @xmath18 . * @xmath152 is a strong answer set of @xmath18 iff @xmath934 is an extension of @xmath935 .",
    "we note that the translation @xmath811 does not preserve the strongly well - supported answer sets of dl - programs .",
    "for instance , let us consider the dl - program @xmath224 in example [ exam : dl - program:3 ] .",
    "it is easy to see that the only strongly well - supported answer set of @xmath936 is @xmath280 , while @xmath937 has two extensions @xmath938 and @xmath939 .",
    "however , the translation @xmath811 does preserve the strongly well - supported answer sets for a highly relevant class of dl - programs as illustrated by the next proposition .",
    "the following lemma is a generalization of corollary  4 of @xcite .",
    "[ lem:14 ] let @xmath187 be a dl - program such that , for every rule of the form ( [ dl : rule : set ] ) in @xmath2 , the dl - atom @xmath688 is monotonic if @xmath867 , and @xmath232 .",
    "then @xmath152 is a weakly well - supported answer set of @xmath18 iff @xmath152 is a strongly well - supported answer set of @xmath18 .",
    "the direction from right to left is implied by corollary 2 of @xcite which asserts this for arbitrary dl - programs . to show the other direction",
    ", it suffices to prove @xmath940 for every @xmath798 by induction .",
    "base : the case @xmath799 is obvious .",
    "step : suppose the statement holds for @xmath46 and consider the case @xmath800",
    ". for any atom @xmath621 , we have that @xmath941 iff there exists a rule @xmath942 such that    * @xmath943 for any @xmath944 , and * @xmath625 for any @xmath945 .",
    "recall that @xmath152 is a weakly well - supported answer set of @xmath18 , by which @xmath946 .",
    "it shows that ( a ) if @xmath688 is an atom then @xmath625 iff @xmath947 , and ( b ) if @xmath688 is a monotonic dl - atom then @xmath625 iff @xmath947 as well .",
    "it follows that @xmath941 iff @xmath807 by inductive assumption .",
    "let @xmath187 be a dl - program such that , for every rule of the form ( [ dl : rule : set ] ) in @xmath2 , the dl - atom @xmath688 is monotonic if @xmath867 , and @xmath232 .",
    "then @xmath152 is a strongly well - supported answer set of @xmath18 iff @xmath948 is an extension of @xmath814 .    in terms of the definition of weakly and strong well - supported answer sets ,",
    "it is obvious that + @xmath152 is a strongly well - supported answer set of @xmath18 + iff @xmath152 is a weakly well - supported answer set of @xmath18 by lemma [ lem:14 ] + iff @xmath949 is an extension of @xmath814 by theorem [ thm:8 ] .    at a first glance , in order to preserve the strongly well - supported answer set semantics , one might suggest to  shift \" @xmath950 for all dl - atoms from justification to the premise of a default .",
    "this does not work , as illustrated by the dl - program @xmath680 where @xmath951(a)\\}$ ] .",
    "it is obvious that @xmath18 has a strongly well - supported answer set @xmath281 . but",
    "according to the suggestion , we would have the default theory @xmath442 where @xmath682 and @xmath40 consists of @xmath952 its unique extension is @xmath938 , which does not correspond to any strongly well - supported answer set of @xmath18 .",
    "the reader can further check the dl - program @xmath224 in example [ exam : dl : program:1 ] and see that ",
    "shifting \" @xmath679 for all dl - atoms from premise to justification of a default does not work under the weak answer set semantics either .    for general ontologies ( consistent or inconsistent )",
    ", we can slightly modify the translation @xmath424 similarly as @xmath655 to @xmath717 , to obtain a transformation @xmath953 and derive analogous results for it .",
    "l    .translations from dl - programs with consistent ontologies to default theories [ cols=\"<,^,^,^,^\",options=\"header \" , ]     let us now summarize the translations in table [ table:1 ] .",
    "note that all the translations @xmath954 and @xmath17 are faithful and modular , and the first three are polynomial .",
    "in addition , @xmath17 is polynomial relative to the knowledge of the non - monotonic dl - atoms @xmath250 , and thus e.g.  polynomial for normal dl - programs .",
    "table [ table:1 ] shows that , for canonical dl - programs with consistent ontologies , we have polynomial , faithful and modular translations for all the semantics , weak answer sets , strong answer sets , weakly well - supported answer sets and strongly well - supported answer sets .",
    "in addition , under weak answer set and weakly well - supported answer set semantics , all the translations are polynomial , faithful and modular as well .",
    "one should note that , for normal dl - programs , the translation is also polynomial , faithful and modular .",
    "there are two unsolved problems , both involving the question whether there exist translations from dl - programs to default theories preserving strongly well - supported answer sets . in table",
    "[ table:1 ] , it is assumed that dl - programs have consistent ontologies . to remove this assumption , it is sufficient to replace @xmath655 ( resp . ,",
    "@xmath811 ) with @xmath717 ( resp . , @xmath955 ) .",
    "recently , there are some extensive interests in the flp semantics for various kinds of logic programs @xcite .",
    "also , in formulating the well - founded semantics for dl - programs , eiter _",
    "proposed a method to eliminate the constraint operator from dl - programs @xcite .",
    "moreover , there exist a number of formalisms integrating ontology and ( nonmonotonic ) rules for the semantics web that can somehow be used to embed dl - programs . in this section",
    "we will relate our work with these approaches .",
    "dl - programs have been extended to hex programs that combine answer set programs with higher - order atoms and external atoms @xcite . in particular , external atoms can refer , as dl - atoms in dl - programs , to concepts belonging to a classical knowledge base or an ontology .",
    "in such a case one can compare the semantics of the hex program with that of the corresponding dl - program .",
    "the semantics of hex programs is based on the notion of flp - reduct @xcite .",
    "we also note that the semantics of dl - programs has been investigated from the perspective of the quantified logic of here - and - there @xcite . for comparison purpose ,",
    "we rephrase the flp - answer set semantics of dl - programs according to @xcite in our setting .",
    "let @xmath187 be a dl - program and @xmath232 .",
    "the _ flp - reduct _ of @xmath18 relative to @xmath152 , written @xmath956 , is the dl - program @xmath957 where @xmath958 is the set of all rules of @xmath2 whose bodies are satisfied by @xmath152 relative to @xmath1 .",
    "an interpretation @xmath152 is an flp - answer set of a dl - program @xmath18 if @xmath152 is a minimal model of @xmath958 ( relative to @xmath1 ) .",
    "it has been shown that , for a dl - program @xmath187 , if @xmath2 mentions no nonmonotonic dl - atoms , i.e. , @xmath612 , then the flp - answer sets of @xmath18 coincide with the strong answer sets of @xmath18 ( cf .",
    "theorem 5 of @xcite ) .",
    "moreover , following the approach on @xcite , it can be shown that the flp - answer sets of a dl - program are exactly the minimal strong answer sets of the dl - program .",
    "note that , given a dl - program @xmath187 , there are no nonmonotonic dl - atoms in @xmath653 .",
    "thus the strong answer sets of @xmath653 are exactly the flp - answer sets of @xmath653 . in general",
    "however , since flp - answer sets are minimal strong answer sets and not vice versa , and @xmath17 preserves strong answer sets , it is clear that @xmath17 does not preserve the flp - answer sets of dl - programs .",
    "this can be seen from example [ exam : dl - program:3 ] .",
    "this fact reinforces our argument that there is no transformation to eliminate the constraint operator from nonmonotonic dl - atoms such that the transformation preserves both strong answer sets and flp - answer sets of dl - programs .",
    "it is still open to us whether there is a translation to eliminate the constraint operator from nonmonotonic dl - atoms while preserving the flp - answer sets of dl - programs .",
    "as illustrated by example [ exam:6 ] , the translations @xmath655 and @xmath811 from dl - programs into default theories do not preserve flp - answer sets .",
    "in addition , the translation @xmath655 may induce some extensions that correspond neither to strong answer sets nor to flp - answer sets .",
    "recall that , for dl - programs mentioning no nonmonotonic dl - atoms , the strong answer sets coincide with the flp - answer sets . by theorem [ thm:6 ] ,",
    "the following corollary is obvious .",
    "let @xmath187 be a dl - program such that @xmath612 and @xmath232 .",
    "then @xmath152 is an flp - answer set of @xmath18 if and only if @xmath722 is an extension of @xmath718 .",
    "since the constraint operator is the only that causes a dl - atom to be nonmonotonic , it follows that for dl - programs without the constraint operator , the strong answer set semantics and the flp - answer set semantics can both be captured by default logic via a polynomial time transformation .      to the best of our knowledge",
    ", there is only one proposal to remove the constraint operator in dl - programs , for the definition of a well - founded semantics for dl - programs @xcite .",
    "in fact , our translation draws ideas from theirs in order to preserve strong answer sets of dl - programs .",
    "however , there are subtle differences which make them significantly different in behaviors .",
    "let us denote their transformation by @xmath959 . given a dl - program @xmath187 and a dl - rule @xmath942 , @xmath960 consists of    1 .",
    "if @xmath296 occurs in a dl - atom of @xmath144 , then @xmath960 includes the instantiated rules obtained from @xmath961(\\vec x ) .",
    "\\end{aligned}\\]]where @xmath962 is a fresh concept ( resp . , role ) name if @xmath77 is a concept ( resp .",
    ", role ) name , @xmath963 is a tuple of distinct variables matching the arity of @xmath132 , 2 .",
    "@xmath960 includes the rule obtained from @xmath144 by replacing each  @xmath296 \" with  @xmath964 \" \" according to @xcite which is equivalent to  @xmath965 \" . ] .",
    "let us denote by @xmath966 the result obtained from @xmath137 by replacing every @xmath296 with @xmath964 where @xmath137 is an atom or dl - atom .",
    "similarly , @xmath967 where @xmath968 .",
    "let us consider the dl - program @xmath229 in example [ exam : dl : program:1 ] , @xmath969 consists of @xmath970(a ) , \\\\",
    "\\overline q(a ) & { \\leftarrow}{not \\,}{\\textit{dl}}[s''\\oplus q;s''](a ) .",
    "\\ ] ] it is not difficult to verify that @xmath971 has a unique strong answer set @xmath972 .",
    "thus , @xmath959 loses a strong answer set , as @xmath281 is a strong answer set of @xmath973 but there is no corresponding strong answer set for @xmath971 .",
    "the translation @xmath959 may even remove flp - answer sets , as illustrated by the next example .",
    "consider the dl - program @xmath22 in example [ exam:6 ] .",
    "it is not difficult to verify that the unique flp - answer set of @xmath18 is @xmath669 .",
    "however we have @xmath974 where @xmath975 consists of @xmath976(a),\\\\    \\overline",
    "q(a ) & { \\leftarrow}{not \\,}{\\textit{dl}}[s'\\oplus q , s'](a).\\ ] ] interested readers can check that @xmath977 has no flp - answer sets .",
    "note that since any flp - answer set is a strong answer set , this is another example where a strong answer set is removed by the translation .",
    "the discussion above leads to a related question - whether the translation @xmath959 introduces extra strong answer sets , for a given dl - program @xmath978 .",
    "note that in our translation @xmath17 , for a predicate @xmath132 we use predicate @xmath308 to denote the opposite of @xmath132 , while in the translation @xmath959 , the symbol @xmath979 is used . after reconciling this name difference",
    ", we see that the rule @xmath980(\\vec x)$ ] in the translation @xmath959 , where @xmath962 is a fresh concept or role name , is equivalent to rule ( [ trans : pi:3 ] ) in the translation @xmath17 .",
    "then , the only difference is to apply  double negation \" in the case of @xmath17 to positive nonmonotonic dl - atoms . given a dl - program @xmath22 ,",
    "suppose an interpretation @xmath152 is a strong answer set of @xmath981 .",
    "then @xmath152 is the least model of @xmath982 .",
    "it is not difficult to show that , in the fixpoint construction , for any atom @xmath983 , @xmath132 is derivable using @xmath982 if and only if @xmath132 is derivable using @xmath984 .",
    "therefore , @xmath152 , possibly plus some atoms in the form of @xmath351 , yields a strong answer set of @xmath984 .",
    "let @xmath472 be a dl - program and @xmath985 a strong answer set of @xmath981 .",
    "then @xmath986 is a strong answer set of @xmath18 .",
    "[ strictlystronger ]    let @xmath987 , and we prove @xmath407 is a strong answer set of @xmath18 .",
    "it is completed by showing @xmath988 .",
    "@xmath989 we prove the direction by showing @xmath990^{s , i}}\\subseteq { \\textit{lfp}}(\\gamma_{{\\cal k}^{s , i^*}})$ ] for any @xmath370 .    base : it is trivial for @xmath386 .    step : suppose it holds for the case @xmath385 .",
    "let us consider the case @xmath991 .",
    "for any atom @xmath132 in @xmath151 such that @xmath992^{s , i}}$ ] , there exists a rule @xmath993 in @xmath2 such that    * @xmath994^{s , i}}\\models_o\\pi'(a)$ ] for any @xmath624 , and * @xmath995 for any @xmath626 .",
    "it follows that    * if @xmath137 is an atom or monotonic dl - atom then @xmath990^{s , i}}\\models_oa$ ] by lemma [ lem : main:1 ] .",
    "it follows @xmath996 by the inductive assumption . by ( ii ) of lemma [ lem : main:1 ] , if @xmath137 is nonmonotonic then we have @xmath997 since @xmath966 is monotonic , and @xmath994^{s , i}}\\models_o\\pi'(a)$ ] implies @xmath998 .",
    "* @xmath999 for any @xmath626 by lemma [ lem : main:1 ] .",
    "thus we have that @xmath1000 .",
    "@xmath1001 we prove this direction by showing that @xmath1002 for any @xmath370 .",
    "base : it is trivial for @xmath386 .    step : suppose it holds for the case @xmath385 .",
    "let us consider the case @xmath991 .",
    "for any atom @xmath1003 , there exists a rule @xmath1004 in @xmath2 such that    * @xmath1005 for any atom and monotonic dl - atom @xmath624 , and @xmath997 for any nonmonotonic dl - atom in @xmath392 , and * @xmath999 for any @xmath626 .",
    "it follows that    * in the case @xmath137 is an atom or monotonic dl - atom , we have @xmath153 by the inductive assumption , by which @xmath998 in terms of lemma [ lem : main:1 ] . if @xmath137 is nonmonotonic then @xmath998 by @xmath997 .",
    "* by lemma [ lem : main:1 ] , we have @xmath995 .",
    "consequently we have @xmath1006 .",
    "another interesting observation is that , for the two removed strong answer sets in the examples above , neither is well - supported in the sense of @xcite , as neither possesses a level mapping justification .",
    "one would like to know whether @xmath959 removes all answer sets that are not well - supported .",
    "the answer is no , as evidenced by the next example .",
    "consider the dl - program @xmath224 of example [ exam : dl - program:3 ] , i.e. , @xmath317 where @xmath223 consists of @xmath1007(a).$ ] it is not difficult to see that @xmath224 has two strong answer sets , @xmath280 and @xmath281 , and the latter is not well - supported . now",
    "@xmath1008 where @xmath1009 consists of @xmath1010(a),\\\\     \\overline p(a ) & { \\leftarrow}{not \\,}{\\textit{dl}}[s'\\oplus p , s'](a).\\ ] ] it can be verified that both @xmath1011 and @xmath281 are strong answer sets of @xmath1012 .",
    "that is , the strong answer set @xmath281 that is not well - supported is retained by @xmath959 .",
    "therefore , the translation @xmath959 can not be used as a means to interpret a dl - program under the strongly well - supported semantics .    continuing the above example by considering the flp - semantics",
    ", we note that @xmath280 is the unique flp - answer set of @xmath224 , and the reader can verify that both @xmath1011 and @xmath281 are flp - answer sets of @xmath1012 .",
    "while @xmath1011 corresponds to the flp - answer set @xmath280 of @xmath224 when restricted to @xmath324 , the flp - answer set @xmath281 of @xmath1012 has no corresponding flp - answer set of @xmath224 .",
    "this shows that extra flp - answer sets may be introduced by @xmath959 .",
    "the next example shows that the translation @xmath959 may remove weakly well - supported answer sets .",
    "recall the dl - program @xmath1013 where @xmath1014(a)\\}$ ] .",
    "it can be verified that @xmath281 is a weakly well - supported answer set of @xmath22 ( it is also strongly well - supported simply because there is no negative dl - atom in the rule ) .",
    "the @xmath959 translation results in @xmath1015 ( a),\\\\ \\overline p(a ) { \\leftarrow}{not \\,}{\\textit{dl}}[s ' \\oplus p , s ' ] ( a ) . \\end{array}\\ ] ] it is clear that @xmath981 has no strong answer sets .",
    "thus , the translation @xmath959 is too strong for the weakly well - supported semantics .    to summarize , the translation @xmath959 defined for the well - founded semantics of dl - programs is too strong for the strong answer set semantics , and for the flp semantics and well - supported semantics , it is sometimes too strong and sometimes too weak .      as to embedding dl - programs into other formalisms that integrate ontology and ( nonmonotonic ) rules for the semantic web ,",
    "there are a number of proposals , such as first - order autoepistemic logic @xcite , mknf knowledge base @xcite , quantified equilibrium logic @xcite , and first - order stable logic programs @xcite .",
    "in addition to the differences between default logic and those formalisms , we also considered the weakly and strongly well - supported answer set semantics of dl - programs , recently proposed by @xcite .",
    "the discussion below will be based on the strong answer set semantics . as we mentioned at the end of section 3 ,",
    "the embedding presented by motik and rosati works only for canonical dl - programs . by the result of this paper",
    ", their embedding can be now extended to normal dl - programs by applying first the translation @xmath17 . for dl - programs without nonmonotonic dl - atoms ,",
    "our embedding does not introduce new predicates .",
    "the latter is done by the translation of dl - programs into first - order stable logic programs @xcite by @xcite @xcite , even for canonical dl - programs .",
    "as commented earlier , the current embedding into quantified equilibrium logic @xcite works for normal dl - programs only , as the authors adopt a convention that all dl - atoms containing an occurrence of @xmath12 are nonmonotonic .",
    "the embedding of dl - programs into first - order autoepistemic logic in @xcite is under the weak answer set semantics . for the strong answer set semantics ,",
    "it is obtained indirectly , by embedding mknf into first - order autoepistemic logic , together with the embedding of dl - programs into mknf .",
    "thus it works for canonical dl - programs only .",
    "we also notice that , to relate default theories with dl - programs , @xcite @xcite and @xcite @xcite presented transformations of a class of default theories , in which only conjunctions of literals are permitted in defaults , to canonical dl - programs ( with variables ) and to cq - programs respectively .",
    "informally , cq - programs can be viewed as a generalization of canonical dl - programs , where the heads of dl - rules can be disjunctive and queries in dl - atoms can be also ( decidable ) conjunctive queries over the ontology .",
    "our transformation from normal dl - programs to default theories provides a connection from the other side .",
    "clearly the class of normal logic programs is a subclass of the normal dl - programs .",
    "already @xcite @xcite have shown that normal logic programs under answer set semantics correspond to default logic .",
    "this has now been generalized by our results for normal dl - programs .",
    "the work here can be similarly generalized to deal with strong negation as well .",
    "in this paper , we have studied how dl - programs under various answer set semantics may be captured in default logic . starting with the semantics in the seminal paper @xcite",
    ", we showed that dl - programs under weak and strong answer set semantics can be embedded into default logic .",
    "this is achieved by two key translations : the first is the translation @xmath17 that eliminates the constraint operator from nonmonotonic dl - atoms , and the second is a translation @xmath655 that transforms a dl - program to a default theory while preserving strong answer sets of normal dl - programs , provided that the given ontology knowledge base is consistent .",
    "this proviso is not necessary under translation @xmath717 , which preserves strong answer sets even if the given ontology knowledge base is inconsistent .",
    "it also preserves weak answer sets if in addition all dl - atoms occur under default negation .",
    "both translations @xmath655 and @xmath717 are polynomial and modular , without resorting to extra symbols .",
    "the translation @xmath17 depends on the knowledge of whether a dl - atom is monotonic .",
    "we have given the precise complexity to determine this property , for ontology knowledge bases in the description logics @xmath20 and @xmath21 .",
    "the importance of these results is that , for all current approaches to representing strong answer sets , either such an approach directly depends on this knowledge @xcite , or the underlying assumption can be removed , with this knowledge and the translation @xmath17 above @xcite .    furthermore , the translations @xmath655 and @xmath717 can be refined to polynomial , faithful , and modular translations @xmath811 and @xmath955 , respectively , which capture the recently proposed weakly well - supported semantics for arbitrary dl - programs @xcite .",
    "this is somewhat surprising as the resulting translations are like writing dl - rules by defaults in a native language , enhanced only by normal defaults of the form @xmath1016 .",
    "apparently , the key is that the iterative definition of default extensions provides a free ride to the weak well - supportedness based on a notion of level - mapping , but not to the strong well - supportedness .",
    "this is an interesting insight .",
    "one would expect bigger challenges in representing the same semantics in other nonmonotonic logics .    for the class of dl - programs that mention no constraint operator , i.e.  the class of canonical dl - programs , all major semantics coincide , including strongly well - supported answer sets , weakly well - supported answer sets , flp - answer sets , and strong answer sets .",
    "thus , the translation @xmath717 can be viewed as a generic representation of dl - programs in default logic . in other words",
    ", there is a simple , intuitive way to understand the semantics of ( canonical ) dl - programs in terms of default logic .",
    "fortunately , many practical dl - programs are canonical as argued in @xcite . at the same time , we understand the precise complexity of checking monotonicity of a dl - atom , for some major description logics .",
    "these results strengthen the prospect of default logic as a foundation for query - based approaches to integrating ontologies and rules . in this sense",
    ", default logic can be seen as a promising framework for integrating ontology and rules .",
    "we will look into this issue further in future work .",
    "though we have presented a faithful and modular embedding for dl - programs under strong answer set semantics , the embedding is not polynomial .",
    "it remains as an interesting issue whether there exists such a polynomial embedding .",
    "in addition , we have shown that @xmath811 preserves strongly well - supported answer sets of a highly relevant class of dl - programs , viz .  the one in which nonmonotonic dl - atoms do not occur negatively .",
    "it remains open whether there exists a faithful , modular embedding for arbitrary dl - programs under the strongly well - supported answer set semantics into default logic .",
    "bartholomew , m. , lee , j. ,  meng , y. 2011 .",
    "first - order extension of the flp stable model semantics via modified circumscriptionin the twenty - second international joint conference on artificial intelligence ( ijcai-11 ) ,  724730 , barcelona , spain . ijcai / aaai .",
    "brewka , g.   eiter , t. 2007 .",
    "equilibria in heterogeneous nonmonotonic multi - context systemsin proceedings of the twenty - second aaai conference on artificial intelligence ( aaai 2007 ) ,  385390 , vancouver , british columbia , canada .",
    "aaai press .",
    "dao - tran , m. , eiter , t. ,  krennwallner , t. 2009 .",
    "realizing default logic over description logic knowledge basesin symbolic and quantitative approaches to reasoning with uncertainty , 10th european conference , ecsqaru 2009 , verona , italy ,  5590 of lecture notes in computer science , 602613 .",
    "springer .",
    "de  bruijn , j. , eiter , t. , polleres , a. ,  tompits , h. 2007 . embedding non - ground logic programs into autoepistemic logic for knowledge - base combinationin proceedings of international joint conference on artificial intelligence ( ijcai-07 ) ,  304309 , hyderabad , india .",
    "de  bruijn , j. , eiter , t. ,  tompits , h. 2008 .",
    "embedding approaches to combining rules and ontologies into autoepistemic logicin principles of knowledge representation and reasoning : proceedings of the eleventh international conference , kr 2008 , 485495 , sydney , australia .",
    "aaai press .",
    "de  bruijn , j. , pearce , d. , polleres , a. ,  valverde , a. 2007 . quantified equilibrium logic and hybrid rulesin web reasoning and rule systems , first international conference , rr 2007 ,  4524 of lecture notes in computer science ,  5872 , innsbruck , austria .",
    "springer .",
    "eiter , t. , ianni , g. , schindlauer , r. ,  tompits , h. 2005 . a uniform integration of higher - order reasoning and external evaluations in answer - set programmingin the nineteenth international joint conference on artificial intelligence ( ijcai-05 ) ,  9096 , edinburgh , scotland , uk .",
    "professional book center .",
    "faber , w. , leone , n. ,  pfeifer , g. 2004 .",
    "recursive aggregates in disjunctive logic programs : semantics and complexityin logics in artificial intelligence , 9th european conference , jelia 2004 ,  3229 of lecture notes in computer science ,  200212 , lisbon , portugal .",
    "springer .",
    "fink , m.   pearce , d. 2010 . a logical semantics for description logic programsin logics in artificial intelligence - 12th european conference , jelia 2010 ,  6341 of lecture notes in computer science ,  156168 , helsinki , finland .",
    "springer .",
    "horrocks , i.   patel - schneider , p.  f. 2003 . reducing owl entailment to description logic satisfiabilityin international semantic web conference ( iswc ) ,  2870 of lecture notes in computer science , 1729 , sanibel island , fl , usa .",
    "springer .",
    "lee , j.   palla , r. 2011 . integrating rules and ontologies in the first - order stable model semantics ( preliminary report)in logic programming and nonmonotonic reasoning - 11th international conference , lpnmr 2011 ,  6645 of lecture notes in computer science ,  248253 , vancouver , canada .",
    "springer .",
    "lifschitz , v. 1991 .",
    "nonmonotonic databases and epistemic queriesin proceedings of the 12th international joint conference on artificial intelligence ( ijcai 1991 ) ,  381386 , sydney , australia .",
    "morgan kaufmann .",
    "marek , v.  w.   truszczynski , m. 1999 .",
    "stable models and an alternative logic programming paradigmin apt , k. , marek , v. , truszczynski , m. ,  warren , d. , the logic programming paradigm : a 25-year perspective ,  375398 .",
    "springer - verlag , berlin .",
    "rosati , r. 2006 .",
    "dl+log : tight integration of description logics and disjunctive datalogin proceedings , tenth international conference on principles of knowledge representation and reasoning ( kr2006 ) ,  6878 , lake district of the united kingdom .",
    "aaai press .",
    "shen , y .- d . 2011 .",
    "well - supported semantics for description logic programsin the twenty - second international joint conference on artificial intelligence ( ijcai-11 ) ,  10811086 , barcelona , spain .",
    "ijcai / aaai .",
    "\\(i ) to show @xmath25-hardness for the case of @xmath1017 knowledge bases , we provide a reduction from deciding unsatisfiability of a given knowledge base @xmath1 in @xmath1017 , which is @xmath25-complete given that deciding satisfiability is @xmath25-complete @xcite and @xmath25 is closed under complementation , to checking monotonicity of a dl - atom @xmath137 relative to a dl - program @xmath18 as follows .",
    "it is clear that if @xmath1 is unsatisfiable , then @xmath137 is monotonic relative to @xmath1021 , where @xmath1022 and @xmath132 is a fresh propositional atom . recall that @xmath137 is nonmonotonic w.r.t .",
    "@xmath1023 iff there exist two interpretations @xmath152 and @xmath182 such that @xmath1024 , @xmath1025 , and @xmath1026 .",
    "every interpretation @xmath152 such that @xmath1027 for some @xmath1028 is a model of @xmath137 relative to @xmath1023 , and the interpretation @xmath1029 is not a model of @xmath137 relative to @xmath1023 if @xmath1 is satisfiable .",
    "hence , @xmath137 is nonmonotonic relative to @xmath22 iff @xmath1 is satisfiable .",
    "it follows that the @xmath25-complete unsatisfiability test reduces to the dl - monotonicity test , and settles the result for the @xmath1017 case .",
    "\\(ii ) for the case of @xmath1030 knowledge bases , we show hardness for @xmath1031 , building on machinery used in @xcite for the complexity analysis of strong and weak answer sets of dl - programs with @xmath1030 knowledge bases .",
    "in the course of this , an encoding of a torus - tiling problem ( that represents @xmath201 turing machine computations on a given input ) into a dl knowledge base satisfiability problem was used .",
    "we briefly recall this problem .    a _ domino system _",
    "@xmath1032 consists of a finite nonempty set @xmath40 of _ tiles _ and two relations @xmath1033 expressing horizontal and vertical compatibility constraints between the tiles . for positive integers @xmath1034 and  @xmath1035 , and a word @xmath1036 over  @xmath40 of length @xmath1037",
    ", we say that @xmath1038 _ tiles _ the torus @xmath1039 _ with initial condition @xmath1040 _ iff there exists a mapping @xmath1041 such that for all @xmath1042 : ( i )  if @xmath1043 and @xmath1044 , then @xmath1045 , ( ii )  if @xmath1046 and @xmath1047 , then @xmath1048 , and ( iii )  @xmath1049 for all @xmath1050 .",
    "condition  ( i ) is the _ horizontal constraint _ , condition  ( ii ) is the _ vertical constraint _ , and condition  ( iii ) is the",
    "_ initial condition_.      [ lem - d-0- ] for domino systems @xmath1051 @xmath1052 and initial conditions @xmath1053 @xmath1054 , there exist dl knowledge bases @xmath1055 , @xmath1056 , and @xmath1057 , and concepts @xmath1058 , @xmath1059 , and @xmath1060 , @xmath1061 , in @xmath1030 such that :    * @xmath1062 is satisfiable iff @xmath1038 tiles @xmath1063 @xmath1064 with initial condition @xmath1040 ; * @xmath1055 , @xmath1056 , and @xmath1057 can be constructed in polynomial time in @xmath46 from @xmath46 , @xmath1038 , and @xmath1040 , respectively , and @xmath1065 ; * in every model of @xmath1066 , each @xmath1058 contains exactly one object representing @xmath1067 , and each  @xmath1060 contains all objects associated with  @xmath1068 .",
    "[ lem - d-0 + - ] let @xmath502 be a nondeterministic turing machine with time- ( and thus space- ) bound  @xmath1069 , deciding a @xmath1070-complete language @xmath1071 over the alphabet @xmath1072 .",
    "then , there exists a domino system @xmath1073 and a linear - time reduction @xmath1074 that takes any input @xmath1075 to a word @xmath1076 with @xmath1077 such that @xmath502  accepts  @xmath657 iff @xmath1038 tiles the torus  @xmath1063 @xmath1064 with initial condition @xmath1040 .    based on this",
    ", @xcite showed how computations of a deterministic polynomial time turing machine with an @xmath201 oracle can be encoded into evaluating a dl - program , where intuitively dl - atoms correspond to oracle calls . for the problem at hand , we would have to provide an encoding of such a computation into one dl - atom and the check of its monotonicity . to simplify matters ,",
    "we provide a reduction from the following problem :    nexp - jc : : :    given two partial inputs @xmath657 and @xmath1078 of the    same @xmath201 turing machine @xmath502    such that @xmath1079 , does there exist a joint completion    @xmath1080 of the partial inputs of length    @xmath1081 such that ( 1 ) @xmath502 accepts    @xmath1082 and ( 2 ) @xmath502 does not accept    @xmath1083 .      intuitively , this is seen as follows : the computation path ( nondeterministic moves and query answers ) of @xmath502 can be guessed ahead , and after that only a deterministic computation with oracle accesses is made , in which the oracle answers are checked with the guesses .",
    "witnesses for all oracle queries that should answer `` yes '' can be found in a single @xmath201 computation , and all queries that should answer `` no '' can be verified in a single @xmath207 computation ( i.e. , a @xmath201 computation for refutation does not accept ) .",
    "the condition @xmath1084 can be ensured by simple padding techniques .    now the reduction of this problem to deciding dl - atom monotonicity is exploiting ( and modifying ) the torus - tiling problem encoding to dl satisfiability testing quoted above .",
    "it has been shown in @xcite how to adapt the torus knowledge base such that the initial condition @xmath1040 ( encoded by @xmath1057 ) can be flexibly established by the update string @xmath165 of a dl - atom . intuitively ,",
    " switches \" were used to  activate \" concepts that represent tiles , so that tiles are put in place by the call of the dl - atom .    using a similar idea , we change @xmath1057 . as in @xcite , assertions @xmath1085",
    "are used to introduce individuals @xmath1086 for the torus positions @xmath1087 that hold the initial condition @xmath1040 encoding a complete input @xmath1082 resp .",
    "@xmath1083 , where @xmath1088 and @xmath1089 ; we have @xmath1090 .",
    "we implement a  switch \" that tells whether computation of either ( 1 ) @xmath1082 or ( 2 ) of @xmath1083 should be considered in a call . for this",
    ", we use a concept @xmath77 and put @xmath296 , @xmath1091 in the  update \" @xmath165 of the dl - atom @xmath137 that we construct , which will effect that given any interpretation @xmath152 , for each individual @xmath1086 either @xmath1092 or @xmath1093 will be asserted in @xmath1094 .",
    "we pick @xmath1095 ( i.e. , position @xmath1096 of the torus , which is  identified \" by the concept @xmath1097 ) and install on it the switch between case 1 ) and 2 ) : if @xmath1098 is true , we evaluate case 1 ) , else case 2 ) .",
    "to `` prepare '' the part of the initial condition encoding @xmath657 resp .",
    "@xmath1078 , we use axioms @xmath1099 where @xmath688 is a fresh concept ( intuitively , a flag indicating case 1 ) , i.e. , @xmath657 ) , and an axiom @xmath1100 where @xmath1101 is a role already defined in @xmath1102 which links position @xmath1103 to @xmath1104 , for all @xmath617 and @xmath1105 ; in combination with the above axioms , it effects that when evaluating a dl - atom w.r.t .",
    "an interpretation @xmath152 , in every model of @xmath1094 either all elements @xmath1106 at `` input '' positions are labeled with @xmath688 or all are labeled with @xmath1107 . depending on the @xmath688-label , we then assign @xmath1106 the right tile from the initial condition for @xmath657 ( label @xmath688 ) respectively for @xmath1078 ( label @xmath1107 ) : @xmath1108 where @xmath1109 ( resp .",
    "@xmath1110 ) is the @xmath617-th tile of @xmath1040 ( resp .",
    "@xmath1111 ) .",
    "intuitively , the case of label @xmath688 is for input @xmath182 that is `` larger '' than input @xmath152 for label @xmath1107 ; for the former , we must have @xmath1112 and for the latter @xmath1113 ; the value of @xmath1114 , @xmath1115 , does not matter , so we can assume it is the same in @xmath152 and @xmath182 . for @xmath182",
    "we do the @xmath201 test , and for the  smaller \" @xmath152 we do the @xmath207 test .",
    "if both succeed , we have a counterexample to monotonicity .",
    "it remains to incorporate the guess @xmath1080 for the completion of the input .",
    "this guess can be built in by using concepts @xmath1116 such that @xmath1117 intuitively puts tile @xmath1068 at the position @xmath617 in the initial condition ( where @xmath1118 runs from the first position after @xmath657 ( resp .",
    "@xmath1078 ) until the last position of the fully completed input @xmath1082 ( resp .",
    "@xmath1083 ) , viz .",
    "@xmath1119 ) . in the input list @xmath165 of the dl - atom @xmath137",
    ", we put @xmath1120 where @xmath1121 is a fresh unary predicate ( @xmath40 is the set of tiles ) .",
    "similar as above , this will assert for each individual then either @xmath1116 or @xmath1122 .",
    "we then add axioms which put on tiles as follows : @xmath1123 where @xmath1124 is some fixed tile ; the second axiom puts a default tile if in @xmath152 no tile has been selected ( as if @xmath1125 would be in @xmath152 ) .",
    "if multiple tiles have been selected , then the @xmath1094 is unsatisfiable , and similarly @xmath1126 for each @xmath1127 .",
    "so the interesting case is if exactly one tile has been put on in each `` completion '' position @xmath1128 of the initial condition .",
    "the selection of tiles is subject to further constraints on tiles at adjacent positions @xmath1129,@xmath617 from @xmath1130 and on the last position , due to the encoding of the machine input into the initial condition in @xcite . without going into detail here ,",
    "let @xmath1131 and @xmath1132 be the sets of admissible adjacent tiles @xmath1133 and final tiles @xmath1068 , respectively ( which are easily determined ) .",
    "we then add axioms @xmath1134 this completes the construction of @xmath1057 .",
    "now let @xmath1135()$ ] and @xmath472 , where @xmath1136 and @xmath1137 .",
    "it can be shown that a violation of the monotonicity of @xmath137 relative to @xmath18 is witnessed by two interpretations @xmath1138 of form @xmath1139 such that @xmath1140 and @xmath1141 and the interpretations encode a joint completion @xmath1080 of the inputs @xmath657 and @xmath1078 , meaning that the computation for @xmath1082 is accepting while the one for @xmath1083 is not . as @xmath18 and @xmath137",
    "are constructible in polynomial time from @xmath657 , @xmath1078 and @xmath502 , this proves the result .",
    "\\(i ) it is evident that , for any atom @xmath356 , the rule @xmath371 is in @xmath316 .",
    "we have that + @xmath372 + iff @xmath358 + iff @xmath373 + iff the rule @xmath374 belongs to @xmath1143^{w,\\pi(i)}_o$ ] + iff @xmath376^{w,\\pi(i)}})$ ] .",
    "\\(ii ) it is clear that , for any @xmath377 , the rule @xmath378 is in @xmath316 such that @xmath379 and @xmath173 .",
    "let @xmath348(\\vec t)$ ] .",
    "we have that + @xmath380 + iff @xmath381 and @xmath173 + iff @xmath382(\\vec t)$ ] ( by ( ii ) of lemma [ lem : main:1 ] ) + iff the rule @xmath383 belongs to @xmath1143^{w,\\pi(i)}_o$ ] + iff @xmath384^{w,\\pi(i)}})$ ] .        step : suppose it holds for @xmath387 .",
    "let us consider the case @xmath388 .",
    "for any atom @xmath389 , @xmath1144 if and only if there is a rule @xmath1145 in @xmath2 where @xmath392 is a set of atoms , _ mdl _ a set of monotonic dl - atoms and @xmath393 a set of nonmonotonic dl - atoms such that        * @xmath1146 if and only if @xmath400^{w,\\pi(i)}}\\models_oa$ ] by the inductive assumption , * @xmath396 if and only if @xmath401 by the definition of @xmath402 , i.e. , @xmath403 , * @xmath1147 if and only if @xmath1149 , and * @xmath398 if and only if @xmath404 for any @xmath399 by lemma [ lem : main:1 ] .        _",
    "lfp_(_[(k)]^w,(i ) ) = & _ lfp_(_[(k)]^w,(i))(_hb__p\\{_p(c)_hb__(p)}\\{_a_hb__(p ) } ) + = & [ _ hb__p_lfp_(_[(k)]^w,(i ) ) ] + & + & + = & [ _ hb__p_i0_[(k)]^w,(i)^i ] _",
    "1(i)_2(i ) + = & _ i0[_hb__p_[(k)]^w,(i)^i ] _",
    "1(i)_2(i ) + = & _ i0_k^w , i^i _",
    "1(i)_2(i ) + = & i_1(i)_2(i ) + = & ( i ) ."
  ],
  "abstract_text": [
    "<S> description logic programs ( dl - programs ) under the answer set semantics formulated by eiter _ </S>",
    "<S> et al . _ </S>",
    "<S> have been considered as a prominent formalism for integrating rules and ontology knowledge bases . </S>",
    "<S> a question of interest has been whether dl - programs can be captured in a general formalism of nonmonotonic logic . in this paper </S>",
    "<S> , we study the possibility of embedding dl - programs into default logic . </S>",
    "<S> we show that dl - programs under the strong and weak answer set semantics can be embedded in default logic by combining two translations , one of which eliminates the constraint operator from nonmonotonic dl - atoms and the other translates a dl - program into a default theory . for dl - programs without nonmonotonic dl - atoms but with the negation - as - failure operator , our embedding is polynomial , faithful , and modular . </S>",
    "<S> in addition , our default logic encoding can be extended in a simple way to capture recently proposed weakly well - supported answer set semantics , for arbitrary dl - programs . </S>",
    "<S> these results reinforce the argument that default logic can serve as a fruitful foundation for query - based approaches to integrating ontology and rules . with its simple syntax and intuitive semantics , plus available computational results , </S>",
    "<S> default logic can be considered an attractive approach to integration of ontology and rules . </S>"
  ]
}
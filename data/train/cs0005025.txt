{
  "article_text": [
    "in the past two decades computational morphology has been quite successful in dealing with the challenges posed by natural language word patterns .",
    "using finite - state methods , it has been possible to describe both word formation and the concomitant phonological modifications in many languages , ranging from straightforward concatenative combination @xcite over semitic - style nonconcatenative intercalation ( beesley , kiraz ) to circumfixional long - distance dependencies @xcite .",
    "however , sproat observes that , despite the existence of `` working systems that are capable of doing a great deal of morphological analysis '' , `` there are still outstanding problems and areas which have not received much serious attention '' ( ibid . , 123 ) .",
    "problem areas in his view include subtractive morphology , infixation , the proper inclusion of prosodic structure and , in particular , reduplication : `` from a computational point of view , one point can not be overstressed : the copying required in reduplication places reduplication in a class apart from all other morphology . ''",
    "( ibid . , 60 ) .",
    "productive reduplication is so troublesome for a formal account based on regular languages ( or regular relations ) because unbounded total instances like indonesian noun plural ( _ orang - orang _ ` men ' ) are isomorphic to the copy language @xmath0 , which is context - sensitive .    in the rest of this paper",
    "i will lay out a proposal for handling reduplication with finite - state methods . as a starting point ,",
    "i adopt bird & ellison s one - level phonology , a monostratal constraint - based framework where phonological representations , morphemes and generalizations are all finite - state automata ( fsas ) and constraint combination is accomplished via automata intersection .",
    "while it is possible to transfer much of the present proposal to the transducer - based setting that is often preferred nowadays , the monostratal approach still offers an attractive alternative due to its easy blend with monostratal grammars such as hpsg and the good prospects for machine learning of its surface - true constraints ( ellison , belz ) .    after a brief survey of important kinds of reduplication in",
    ", section explains the necessary extensions of one - level phonology to deal with the challenges presented by reduplication , within the larger domain of prosodic morphology in general .",
    "a worked - out example from koasati in illustrates the interplay of the various components in an implemented analysis , before some conclusions are drawn in section .",
    "a well - known case from the context - sensitivity debate of the eighties is the n - o - n reduplicative construction from bambara ( northwestern mande , @xcite ) :    [ bambara ]    [ cols= \" < , < \" , ]     the grammar will be presented below in a piecewise fashion , with line numbers added for easy reference .    starting with the definition of stems ( line 1 ) , we add the three enrichments to the bare phonological string ( 2 ) . however , the innermost producer - type string constructed by ( 3 ) is intersected with phonological constraints ( 5,6 ) that need to see the string only , minus its enrichments .",
    "this is akin to lexical rule application .    ' '' ''",
    "+    .... 1 stem(firstseg , string ) : =   2   add_repeats(add_skips(add_self_loops ( 3   [ firstseg , stringtoautomaton(string ) ] 4     & ignore_technical_symbols_in ( 5 moraification&mark_first_heavy_syllable 6     & positional_classification ) ) ) ) .",
    "7 8 underspecified_for_voicing(basespec ) : = 9         { producer(basespec & vowel ) ,   10          [ producer(h),consumer(skip ) ] } .",
    "11 12 tahaspin    : = stem ( [ ] , \" tahaspin \" ) .",
    "13 aklatlin    : = stem(underspecified_for _ 14                voicing(low),\"klatlin \" ) . ....    ' '' ''     +    lines 8 - 10 capture the v / h alternation that is characteristic for vowel - initial stems under reduplication , with the vocalic alternant constituting the default used in isolated pronunciation .",
    "in contrast , the /h/ alternant is concatenated with a -type that requires a producer from elsewhere .",
    "lines 12 - 14 define two example stems .    the following constraint ( 15 - 18 ) enriches a prosodically underspecified string with moras @xmath1  abstract units of syllable weight @xcite  , a prerequisite to locating ( 20 - 24 ) and synchronization - marking ( 25 - 31 ) the first heavy syllable after which the reduplicative infix will be inserted .    ' '' ''     +    .... 15 moraification : =   16 ( vowel      -- > ( mora / sigma ) ) & 17 ( consonant -- > ( mora / consonant ) ) & 18 ( consonant -- > ( ( ~ mora ) / vowel ) ) .",
    "19 20 first_(x ) : = [ not_contains(x ) , x ] .",
    "21 heavy_rime : = [ consumer(mora ) , 22                 consumer(mora ) ] .",
    "23 heavy_syllable : = [ consumer(~ mora ) ,   24                     heavy_rime ] .",
    "25 mark_first_heavy_syllable : =   26 [ first_(heavy_rime)&synced_constituent ,   27          synced_constituent ] .",
    "28 right_synced : = [ consumer(~':1'&seg ) * , 29                   consumer(':1'&seg ) ] .",
    "30 synced_constituent : =   31    [ consumer(':1'&seg ) , right_synced ] .",
    "32 positional_classification : =   33   [ consumer(initial),consumer(medial ) * ,   34    consumer(final ) ] . ....    ' '' ''     +    note that both the constituent before and _ after _ ( ) the infixation site need to be marked . also , it turns out to be useful to classify base string positions for easy reference in the reduplicative morpheme , which motivates lines 32 - 34 .",
    "the main part now is the reduplicative morpheme itself ( 35 ) , which looks like a mixture of bambara and semai : the spellout of the base is followed by iterated repeats ( 36 ) to move back to its synchronized initial position ( 37 ) , which  recall /h/  is required to be consonantal .",
    "the rest of the base is skipped before insertion of the fixed - melody part /o(o)/ occurs ( 38 , 42 - 44 ) .",
    "proceeding with the interrupted realization of the base , we identify its beginning as a synchronized syllable onset ( @xmath2 ) , followed by a right - synchronized string ( 39 - 40 ) .    ' '' ''     +    .... 35 punctual_aspect_reduplication : = 36 [ synced_constituent , producer(repeat ) * , 37   consumer(':1 ' & initial & consonant ) ,   38   producer(skip ) * , fixed_melody , 39   consumer(':1 ' & seg & ~ mora ) ,   40   right_synced ] .",
    "41 42 fixed_melody : =   43 [ producer(o & ~ ' :1 ' & medial & mora ) , 44   producer(o & ~ ' :1 ' & medial & mora)^ ] . ....    ' '' ''     +    finally , some obvious need to be defined ( 45 - 54 ) , before the central intersection of and punctual - aspect reduplication ( 57 ) completes our koasati fragment :    ' '' ''     +    .... 45 word_level_constraints : =   46 last_segment_is_moraic &   47 last_two_sylls_are_heavy .",
    "48 49 last_segment_is_moraic : =   50    [ consumer(sigma ) * , consumer(mora ) ] .",
    "51 52 last_two_sylls_are_heavy : =   53    [ consumer(sigma ) * ,   54     heavy_syllable , heavy_syllable ] .",
    "55 56 wordform(stem):=closed_interpretation ( 57    word_level_constraints & stem &   58    punctual_aspect_reduplication ) . ....    ' '' ''     +    the result of is shown in figure [ koasatiforms ] ( and are aliases for initial and final position ) .",
    "space precludes the description of a final automaton operation called bounded local optimization @xcite that turns out to be useful here to ban unattested free length variation , as found e.g. in _ ak - ho(o)-latlin _ where the length of _ o _ is yet to be determined .",
    "suffice to say that a parametrization of bounded local optimization would prune the moraic arc @xmath3 in figure [ koasatiforms ] by considering it costlier than the non - moraic arc @xmath4 , thereby eliminating the last source of indeterminacy .",
    "this paper has presented a novel finite - state method for reduplication that is applicable for both unbounded total cases , truncated or otherwise phonologically modified types and infixing instances .",
    "the key ingredients of the proposal are suitably enriched automaton representations , the identification of reduplicative copying with automaton intersection and a resource - conscious interpretation that differentiates between two types of arc symbols , namely producers and consumers of information . after demonstrating the existence of efficient on - demand algorithms to reduplication s central operations ,",
    "a case study from koasati has shown that all of the above ingredients may be necessary in the analysis of a single complex piece of prosodic morphology .",
    "it is worth mentioning that our method can be transferred into a two - level transducer setting without major difficulties ( * ? ? ?",
    "* appendix b ) .",
    "i conclude that the one - level approach to reduplicative prosodic morphology presents an attractive way of extending finite - state techniques to difficult phenomena that hitherto resisted elegant computational analyses .",
    "the research in this paper has been funded by the german research agency dfg under grant wi 853/4 - 1 .",
    "particular thanks go to the anonymous reviewers for very useful comments .",
    "steven bird and t.  mark ellison .",
    "ne - level phonology : autosegmental representations and rules as finite - state automata .",
    "technical report , centre for cognitive science , university of edinburgh .",
    "euccs / rp-51 .",
    "geoffrey kimball .",
    "koasati reduplication . in w.",
    "shipley , editor , _ in honour of mary haas : from the haas festival conference on native american linguistics _ , pages 43142 .",
    "mouton de gruyter , berlin .",
    "mehryar mohri , fernando pereira , and michael riley .",
    "1998 . a rational design for a weighted finite - state transducer library . in d.",
    "wood and s.  yu , editors , _ automata implementation .",
    "second international workshop on implementing automata , wia 97 _ , volume 1436 of _ lecture notes in computer science _ , pages 14458 .",
    ".      gertjan van noord",
    "tilities : a toolbox to manipulate finite - state automata . in darrell raymond , derrick wood , and sheng yu , editors , _ automata implementation _ ,",
    "volume 1260 of _ lecture notes in computer science _ , pages 87108 .",
    "springer verlag .",
    "( software under http://grid.let.rug.nl/@xmath2vannoord/fsa/ ) ."
  ],
  "abstract_text": [
    "<S> reduplication , a central instance of prosodic morphology , is particularly challenging for state - of - the - art computational morphology , since it involves copying of some part of a phonological string . in this paper </S>",
    "<S> i advocate a finite - state method that combines enriched lexical representations via intersection to implement the copying . </S>",
    "<S> the proposal includes a resource - conscious variant of automata and can benefit from the existence of lazy algorithms . </S>",
    "<S> finally , the implementation of a complex case from koasati is presented . </S>"
  ]
}
{
  "article_text": [
    "in modern high energy physics ( hep ) analyses , the use of machine learning techniques has become increasingly common .",
    "machine learning classifiers are used to separate signal events from unwanted background @xcite .",
    "several hep experiments are characterized by an extremely large number of events .",
    "therefore , it is crucial to use statistical packages able to efficiently analyze data sets described by million events or even larger .",
    "statistical packages widely used among statisticians , such as r or weka , often implement many statistical techniques that would be extremely useful in hep analyses .",
    "however , they are hardly efficient in dealing with huge data sets @xcite .",
    "the two statistical software most used in the hep community are statpatternrecognition ( spr ) @xcite and toolkit for multivariate analysis ( tmva ) @xcite .",
    "both packages have been developed within the hep community and are targeted to hep statistical analyses . in this work , we compare how cpu time and memory usage performance scale to data set size in spr and tmva .    a detailed description of the machine learning techniques described in this work can be found in ref . @xcite .",
    "spr is an open source standalone c++ package that can be run within root @xcite or from the command line .",
    "it implements linear and quadratic discriminant analysis , logistic regression , binary decision splits , bump hunter , two flavors of decision trees , a feedforward backpropagation neural net with a logistic activation function , several flavors of boosting including the arc - x4 algorithm , bagging and random forest .",
    "the package also includes two multiclass methods that allow to use any binary classifier for a multiclass classification problem .",
    "moreover , it implements algorithms to boost or bag any sequence of classifiers as well as combine classifiers trained on subsets of input variables .",
    "tmva is an open source project integrated with root .",
    "it implements the following multivariate techniques : rectangular cuts , projective and multidimensional likelihood estimators , k - nearest neighbor , fisher and h - matrix discriminants , linear and function discriminant analysis , multilayer perceptron neural networks , support vector machine , boosted decision trees , random forest , and rulefit .",
    "it also allows to boost any classifier .",
    "both packages implement similar techniques to pre - process the data , such as normalization , principal component analysis , correlations , and cuts .",
    "variable importance in tmva is estimated for neural networks by calculating the weight of neural network links and for decision trees by calculating the improvement in the classifier performance given by the splits on each variable .",
    "in addition to these techniques , spr also presents other variable importance algorithms that work with any classifier : random permutation of the class label , `` add n remove r '' , and interactions .",
    "finally , spr also includes cross - validation techniques , allows to choose among 10 figures of merit to optimize the classifier and test its performance , and implements friedman s machine learning - based goodness of fit test @xcite .    for a more comprehensive description of spr and tmva",
    ", please see readme and user s guides included in package distributions@xcite .",
    "a useful description to get started with both packages can also be found in ref .",
    "@xcite .    among the hep community",
    ", tmva is considered more user friendly and spr is considered more powerful and faster @xcite .",
    "although a significant number of classifiers are included in both packages , their implementation can differ , leading to different results @xcite .",
    "different implementation implies that , for instance , the best parameters for spr boosted decision trees ( bdt ) are not necessarily the best parameters for tmva bdt @xcite .    a detailed description of a statistical analysis to observe the single - top signal , using both tmva and spr , can be found in ref .",
    "firstly , the author separately looks for the classifier with the best predictive power from tmva and from spr .",
    "bdt are the best classifier for tmva and random forest ( rf ) for spr .",
    "finally , it is shown that spr rf achieves the best overall predictive power .    in ref .",
    "@xcite , tmva rf predictive power is the lowest .",
    "one of the reasons of that poor behavior could be that tmva default parameter for rf tree depth equals to 3 ( although tmva user s guide reports that tree depth default value is @xmath0 ) .",
    "also , another issue with tmva rf is that the algorithm automatically sets tree depth value back to 3 when that option is manually set to an extremely large value ( such as , for instance , @xmath1 ) .",
    "rf typically needs extremely large trees to perform well .",
    "therefore , it is advisable to specifically check tmva rf tree structure after the classifier has been built .",
    "for our tests , we use release 08.02.00 of spr and 4.0.4 of tmva . cpu time reported in this work refers to elapsed real time . to estimate memory usage , we consider resident set size ( rss ) @xcite .",
    "memory usage traces are collected by running the top utility at intervals proportional to the expected length of the process .",
    "maximum value for rss is reported here .",
    "both packages quickly reach a value close to the maximum and then their memory usage becomes almost constant until the end of the process .",
    "the executables are run on a dedicated machine with no other major task running simultaneously .",
    "the machine runs centos linux 5.4 and has 8 intel(r ) xeon(r ) @ 2.33 ghz processors with 8 gb of ram .    as classifiers ,",
    "the attention is restricted to rf , bdt , and neural networks ( nn ) .    with regards to the most important parameters , for rf we choose 50 trees , at least 5 events per leaf , and each split chosen among @xmath2 variables randomly selected at each node , where @xmath3 is the data set dimensionality . for bdt",
    ", we choose 100 cycles and 10% of the events as minimum number of events per leaf . for nn ,",
    "layer structure is @xmath4 . as suggested by tmva user s guide @xcite",
    ", tmva neural network model is the multilayer perceptron ( mlp ) .",
    "all other parameters are set so that the packages would perform the same task for each classifier .",
    "goal of the analysis is to check how cpu time and memory usage scale to data set size .",
    "the chosen parameter values are not necessarily the best ones for each data set in terms of classifier predictive power .",
    "finding the best classifier configuration for each data set would make hard to exactly keep trace of cpu time and memory usage with respect to the data set size .",
    "however , the chosen parameters are likely to be reasonably close to the best possible configuration for every classifier @xcite .",
    "tmva s variable transformation options are disabled in order to achieve a major similarity between the tasks executed by the packages .",
    "tmva s variable transformation options , which are on by default in the code example , include decorrelation , principal component decomposition , and gaussianisation .",
    "they consume a very large amount of memory .",
    "for instance , those variable transformation options take up to 5 or 6 times the maximum amount of memory needed to build bdt .",
    "the bigger is the data set , the larger is the ratio between the memory needed for variable transformation and for training the bdt classifiers .",
    "spr does not need such an adjustment since uses different executables to perform different tasks .    as a benchmark data set",
    ", we choose the `` threenorm '' data set introduced by breiman in ref .",
    "@xcite . given a@xmath5 ,",
    "one class is drawn from a unit multivariate normal with mean ( a ,- a , a , -a , .... , a ) .",
    "the other class is drawn with equal probability from a unit multivariate normal with mean ( a , a, ... ,a ) and from a unit multivariate normal with mean ( -a ,- a ,...,- a ) .",
    "this data set is considered a difficult one for classification problems @xcite and has been widely used for comparison of machine learning algorithms @xcite .    moreover , we train our classifiers on edge cases .",
    "that is , data sets described by a single variable which follows an unusual distribution .",
    "example of edge cases are a random noise variable , a variable for which all events except for one have the same value , and a variable for which 50% of events are useless and 50% have discriminant power . with respect to edge cases , we only test the behavior of rf and bdt .",
    "results refer to the training part only .",
    "we start with small data sets and gradually increase dimensionality and number of events .",
    "we start with @xmath6 events and 20 variables . for bdt , we gradually increase dimensionality up to 100 variables and size up to @xmath7 events . for rf , being slower given the optimization parameters , we increase up to 100 variables and @xmath8 events ; and for nn , the slowest among the three , up to 70 variables and @xmath9 events . for edge cases",
    ", we only increase the number of events as described above .",
    "[ b]0.5        [ b]0.5",
    "we test learning time and memory usage on threenorm data set for bdt , rf , and nn . fig .",
    "[ fig : normbdttime ] shows a comparison of cpu time needed by spr and tmva to build bdt with 20 variables ( left ) and 100 variables ( right ) .",
    "cpu time of tree - based classifiers is expected to grow linearly versus @xmath10 , where @xmath11 is the number of events .",
    "spr bdt are constantly faster than tmva bdt .",
    "we also check configurations with 40 and 70 variables .",
    "results are as expected",
    ". that is , they are in between the 20 and 100 variables outputs .",
    "[ fig : normbdtmemory ] shows spr and tmva memory usage for 20 variables and 100 variables .",
    "tmva consumes more memory in both configurations .",
    "the trees built by spr and tmva have a very similar structure , with their depth being equal to either 2 or 3 .",
    "this depends on the optimization parameters chosen , i.e. 10% of events as minimum number of events per leaf .",
    "therefore , this analysis gives a useful indication of time and memory difference to build classifiers based on small trees .",
    "[ b]0.5        [ b]0.5        we repeat the same test using rf classifiers .",
    "cpu time results are shown in fig .",
    "[ fig : normrfcpu ] .",
    "spr is again faster than tmva .",
    "the difference between spr and tmva is larger than for the bdt test .",
    "rf trees are larger than bdt trees . therefore , bigger trees lead to a larger difference in terms of performance between spr and tmva . furthermore",
    ", the ratio between tmva and spr cpu time increases as the data set size gets larger .",
    "that is , spr cpu time increases linearly with respect to @xmath10 and tmva cpu time increases more than linearly .",
    "[ fig : normrfmemory ] shows memory usage results for the rf test .",
    "tmva memory usage is always larger than spr s one .",
    "spr and tmva nn cpu time is shown in fig .",
    "[ fig : normnncpu ] for 20 variables ( left ) and 70 variables ( right ) .",
    "again , spr is always faster than tmva for any data set size .",
    "however , the difference between spr and tmva is not as large as in the bdt and rf cases .",
    "[ b]0.5        fig .",
    "[ fig : normnnmemory ] shows the corresponding memory usage for the nn test .",
    "spr consumes less memory for all the configurations we tested .",
    "we test spr and tmva on a data set with events characterized by a single variable following the same uniform distribution for signal and background .",
    "we define this data set as `` uniform '' .",
    "[ fig : uniformcpubdt ] shows cpu time for rf ( left ) and bdt ( right ) . the difference between spr and tmva for rf is extremely large .",
    "spr is faster for bdt too .",
    "again , rf builds large trees , while bdt trees are forced to be small by the optimization parameters .",
    "[ b]0.5        fig .",
    "[ fig : uniformemory ] shows tmva and spr memory usage for bdt and rf .",
    "memory consumption mirrors cpu time .",
    "tmva always consumes more memory than spr .",
    "[ b]0.5        another edge case data set is characterized by a single variable that has the same value for all the events , except for one .",
    "we define it as `` same value '' data set . as expected , learning time in this case is fast for both packages .",
    "cpu time outputs are shown in fig .",
    "[ fig : samebutonecpu ] .",
    "spr is always faster than tmva . in this test ,",
    "spr and tmva grow similar trees for both rf and bdt .",
    "[ b]0.5        fig .",
    "[ fig : samebutonememory ] shows tmva and spr memory usage for bdt and rf .",
    "tmva consumes constantly more memory than spr for any classifier and any data set size .",
    "[ b]0.5        spr and tmva are also tested on the `` same value and separation '' data set , which is described by one variable that has the same value for 50% of the events and , for the remaining 50% , follows the `` threenorm '' distribution .",
    "that is , only half of the events are relevant to separate signal from background , with the remaining half being useless .",
    "results shown in fig .  [ fig : samesepcpu ] and fig .",
    "[ fig : samesepmemory ] are in substantial agreement with the results in sec .",
    "[ sec:3 ] and sec .",
    "[ sec:4 ] , with spr always having a better performance than tmva .",
    "[ b]0.5        [ b]0.5",
    "we have evaluated cpu time and memory usage for different classifiers implemented in spr and tmva . as benchmark data",
    ", we used the threenorm data set and targeted edge cases . in every single test we performed ,",
    "spr has been faster than tmva and consumed less memory . for rf and bdt",
    ", the difference between spr and tmva is particularly large .",
    "nn performance of the two statistical packages is closer . for tree - based classifiers , the ratio between tmva and spr cpu time increased as the number of events increased . in all other tests ,",
    "the ratio between spr and tmva tended to be constant when increasing the data set size .",
    "thanks to ilya narsky and julian bunn for insightful suggestions and reviewing earlier drafts of this paper .",
    "k. cranmer , statistics for the lhc : progress , challenges , and future , proceed .",
    "of phystat - lhc workshop , 47 - 60 , geneva , 27 - 29 june 2007(http://phystat - lhc.web.cern.ch / phystat - lhc/2008 - 001.pdf ) ; b. p. roe et al . , boosted decisiontree , an alternative to artificial neural networks , nucl .",
    "instr . and meth . a 543 , 577 - 584 , 2005 ; i. narsky , optimization of signal significance by bagging decision trees , arxiv : physics/0507157v1 , 2005 .",
    "http://sourceforge.net/projects/statpatrec/ [ http://sourceforge.net/projects/statpatrec/ ] ; i. narsky , statpatternrecognition : a c++ package for statistical analysis of high energyphysics data , axxiv : physics/0507143v1 , 2005 .",
    "t. hastie , r. tibshirani and j. friedman , the elements of statistical learning , springer series in statistics , 2001 ; a. webb , statistical pattern recognition , john wiley and sons ltd , 2002 ; l. breiman , j. h. friedman , r. olshen , and c. stone , classification and regression trees , wadsworth and brooks , 1984 .",
    "t. rockwell , significance estimations using multivariate analysis of single top monte carlo ;   https://hep.pa.msu.edu/twiki/bin/view/atlassingletop/earlydatastudywithmva [ https://hep.pa.msu.edu/twiki/bin/view/atlassingletop/earlydatastudywithmva ]          see , for example : d. meyer , f. leisch , k. hornik , the support vector machine under test , neurocomputing 55 , 59 - 71 , 2003 ; s.d .",
    "bay , combining nearest neighbor classifiers through multiple feature subsets , in proc . of the international conference of the machine learning .",
    "morgan kaufmann publishers , madison , wisc . , 1998 ; l. breiman , randomizing outputs to increase prediction accuracy , machine learning 40 , 229 - 242 , 2004 ."
  ],
  "abstract_text": [
    "<S> high energy physics data sets are often characterized by a huge number of events . </S>",
    "<S> therefore , it is extremely important to use statistical packages able to efficiently analyze these unprecedented amounts of data . </S>",
    "<S> we compare the performance of the statistical packages statpatternrecognition ( spr ) and toolkit for multivariate analysis ( tmva ) . </S>",
    "<S> we focus on how cpu time and memory usage of the learning process scale versus data set size . as classifiers , we consider random forests , boosted decision trees and neural networks . for our tests , we employ a data set widely used in the machine learning community , `` threenorm '' data set , as well as data tailored for testing various edge cases . for each data </S>",
    "<S> set , we constantly increase its size and check cpu time and memory needed to build the classifiers implemented in spr and tmva . we show that spr is often significantly faster and consumes significantly less memory . for example , the spr implementation of random forest is by an order of magnitude faster and consumes an order of magnitude less memory than tmva on threenorm data . </S>"
  ]
}
{
  "article_text": [
    "detailed modeling and simulation of large , complex networks are increasingly being used in several fields ( from biology , epidemiology and economics , to traffic management and supply - chains ) . as a result",
    ", there have been several empirical studies of the interaction between the structure of such networks and their dynamics ( a `` network '' analog of structure - property relations in materials science ) .",
    "detecting , understanding , and eventually exploiting this structure - dynamics relation in networks is thus a subject of intense interdisciplinary research .",
    "clearly , the construction of networks with prescribed structure is an integral part of this effort , and the purpose of this paper is to present and illustrate a computer - assisted , mixed integer linear programming ( milp ) approach to this important task .",
    "there are many important examples where the topology of real world networks has been analyzed in great detail in order to understand their formation and dynamics - the internet holds probably pride of place among these . a brief history of the development of internet `` topology generators '' ( the construction of networks that hopefully model the internet ) can be found in tangmunarunkit  _ et al . _",
    "the earliest internet topology generators were based on the _ erds - rnyi _ model .",
    "realistic simulations of dynamical models of the internet , however , required topology generators that more accurately represented its structure .",
    "hence , better models that take into account the hierarchy in the internet were later proposed  @xcite , and these were widely accepted until the breakthrough results by faloutsos  _ et al . _",
    "@xcite revealed that the topology of the internet exhibits power - law dependence in terms of the degrees of the nodes .",
    "networks with such power - law degree distributions are called _ scale - free _ networks , and are in stark contrast with networks featuring the poisson distribution of degrees created by topology generators based on the erds - rnyi model .",
    "this suggests that local properties of real networks are not accurately reproduced by simple graph models .",
    "while a lot of attention has focused on designing realistic models of the internet , the utility of graph models that produce power - law degree distributions is not restricted to the internet domain alone .",
    "several systems have been found to have power law degree distributions with different degree exponents .",
    "newman  @xcite and albert and barabsi  @xcite review graphs from numerous systems that adhere to a power - law degree distribution .",
    "these discoveries create the need for better alternative approaches to generating models of real world networks . in response to this need , barabsi and albert  @xcite themselves proposed an evolutionary process to create scale - free networks . in their model",
    ", the network grows by the addition of nodes which preferentially attach to the existing nodes that are already well connected .",
    "this model is termed in the literature as the `` preferential attachment '' model .",
    "a different approach is used by aiello  _ et al . _",
    "@xcite to create random graphs with power - law degree distribution .",
    "they first generate sequences of degrees from a power law distribution and then create networks that satisfy this degree distribution .",
    "these two approaches exemplify two distinct ( yet at some level related ) approaches by which realistic network properties ( i.e. , the scale - free structure in this case ) can be `` built in '' model networks .",
    "the first approach , which one might name _ complex network growth models _ is to use _ dynamical construction procedures _ ( evolutionary or growth processes ) that give rise to networks with required properties .",
    "examples of such models that have been extensively used in complex systems research are the watts - strogatz model for small - world networks  @xcite and the aforementioned preferential attachment model that creates scale - free networks  @xcite .",
    "while such complex network growth models may provide insights into the microscopic processes that govern the formation of real world networks , they will in general create graphs that do not fully capture several properties of interest .",
    "for example , bu  _ et al . _",
    "@xcite show that internet topology generators produce graphs which have different values of characteristic path lengths and clustering coefficients compared to the actual internet graph .",
    "the second approach to network generation is built around the requirement to create graphs with specified properties .",
    "such methods might be named _",
    "network generation algorithms_. the main feature of this second approach is the fact that _ combinations of several properties _",
    "( beyond , for example , just the degree distribution ) can be explicitly taken into account .",
    "newman  @xcite provides a list of different graph properties that can be `` built in '' network generation algorithms , and discusses their relevance in real systems .",
    "for instance , the average path length of social networks is found to be small for even very large networks , which characterizes what is known as the _ small - world property_. this has direct implications on the diffusion of information or the spread of epidemics on such networks .",
    "shirley and rushton  @xcite study the impact of the structure of four different types of network topologies , namely erds - rnyi , regular lattices , small - world , and scale - free , on epidemic dynamics .",
    "they show that in scale - free networks with very small clustering and short path lengths , the spread of the disease is faster , while in regular lattices with high clustering coefficients and long path lengths , the spread is the slowest among all other types of networks . badham and stocker  @xcite report that increases in assortativity and clustering coefficient are associated with smaller epidemics .",
    "the effect of correlations between neighboring node degrees in a network has also been found to be a crucial property in determining system behavior in a variety of physical systems .",
    "et al . _",
    "@xcite study the effect of degree - degree correlations on the pinning controllability of networks and find that dissortative mixing enhances controllability .",
    "the results of pechenick _ et al . _",
    "@xcite show that chaotic gene regulatory networks exhibit increasingly robust phenotypes with increasing assortativity .",
    "pastor - satorras _ et al . _",
    "@xcite report that disassortative networks enhance transport through them .",
    "they find that `` the pressure congestion for disassortative ( assortative ) networks is lower ( bigger ) than the one for uncorrelated networks . ''",
    "watts and strogatz  @xcite report that oscillators connected by a small - world structure synchronize more readily than those connected by other network topologies .",
    "hong  _ et al . _",
    "@xcite find other important properties that affect the synchronizability of oscillators connected by a watts - strogatz network  @xcite .",
    "they find that `` better synchronizability for the ws small - world network is induced as the heterogeneity of the degree distribution is increased , as the characteristic path length is decreased , as the maximum betweenness centrality is reduced , or as the maximum degree is raised . ''",
    "thus , we find that properties like the maximum degree and the maximum betweenness centrality are also relevant for some dynamical network systems .",
    "ravasz and barabsi  @xcite find that the clustering coefficients of the nodes are proportional to the inverse of the nodal degrees for four real networks ( actor network , semantic web , world wide web and the internet ) .",
    "they propose this to be related to the hierarchical organization of the network .",
    "they suggest that `` the fundamental discrepancy between models and empirical measurements is rooted in a previously disregarded , yet generic feature of many real networks : their hierarchical topology . ''",
    "thus , it may be important to maintain the `` degree - dependent clustering '' in models of network topology .",
    "all these results clearly point to the necessity of being able to generate graphs with specified properties , not only to replicate realistic structures of real networks but also to create artificial networks that will result in desired functions .",
    "one of the main difficulties in accurately studying the effect of network properties on the function of networked systems is disassociating the effect of one property from the effect of others .",
    "wrong conclusions will be derived when the network topology generator induces artificial correlations between different sets of properties .",
    "it is clear that graph - generating algorithms must be able to create networks with controllably - tunable combinations of graph properties .    a majority of existing network generation algorithms focus on constructing networks with specified degree statistics .",
    "the havel - hakimi algorithm  @xcite is a deterministic algorithm that guarantees a network for any given graphical sequence of degrees .",
    "however , the algorithm always creates the same network for a given input degree sequence , which may be a limitation in certain applications .",
    "the `` pairing '' or `` configuration '' model  @xcite is a stochastic algorithm that alleviates this problem , but it suffers from non - uniform sampling . strategies to generate uniformly distributed random graphs with specified degree sequences are discussed in a number of publications  @xcite .",
    "the chung - lu algorithm  @xcite is another probabilistic algorithm that creates a random graph from an ensemble of graphs with a given _ expected _ degree sequence .",
    "besides the degree sequence , clustering and assortativity are two other properties that have received considerable attention in the context of network topology generation algorithms .",
    "algorithms that tune clustering coefficients in scale - free networks are given in  @xcite , while an algorithm for small - world networks can be found in  @xcite .",
    "several algorithms have also been proposed to construct graphs with specified clustering coefficients in conjunction with given degree distributions  @xcite .",
    "procedures to create networks with specified assortativity have also been introduced  @xcite .",
    "an algorithm that controls both the degree distribution and assortativity can be found in xulvi - brunet and sokolov  @xcite .",
    "the problem of constructing graphs with given maximum degree and diameter that has the largest number of vertices has also been studied  @xcite .",
    "in addition , nakano  _ et al . _",
    "@xcite discuss an algorithm to construct weighted graphs such that the total weight of the edges incident to a node is at least the given weight of the node .",
    "finally , other property combinations that have been addressed in the context of network generation algorithms include the ( a ) degree distribution and degree - dependent clustering  @xcite , ( b ) joint degree - degree distribution  @xcite , ( c ) joint degree - degree distribution and modularity  @xcite , ( d ) degree - degree correlations and degree - dependent clustering  @xcite , and ( e ) eigenvector centrality  @xcite .",
    "the majority of the above algorithms can not guarantee the generation of networks that satisfy exactly the properties specifications , or that lie within bounded deviations from the desired values . in our earlier work  @xcite",
    ", we introduced a method to specify degree distribution in conjunction with a specified number of triangles among nodes of given degree ( i.e. , degree - dependent clustering levels ) .",
    "the method provided theoretical guarantees that a network satisfying the imposed specification would be constructed , if such a network existed .",
    "it also constituted the first time in the open literature that a network generation approach based on mathematical optimization was proposed .",
    "in particular , the problem was posed as a mixed - integer linear problem ( milp ) , and as a result , the method offered a number of advantages over traditional approaches .",
    "for example , in addition to identifying a network that possesses a collection of desired properties , an milp - based framework is typically suitable to ( a ) certify if no such network exists , ( b ) identify multiple , or even all , non - isomorphic such networks , ( c ) identify the network that is most similar under a suitable metric to a reference network , ( d ) identify the network that minimizes / maximizes some application - specific objective , ( e ) determine the smallest size @xmath0 for a network to admit all properties , and ( f ) identify networks that approximately satisfy the properties within given tolerances .",
    "posing the problem as an milp allows for employing standard , well - developed solution algorithms ( e.g. , branch - and - bound , branch - and - cut ) to deal with the complex decision - making that is involved .",
    "it is thus a promising approach towards developing the capability to systematically design networks that possess desired properties with explicit guarantees of achieving the specifications exactly or within bounded deviations . in this paper",
    ", we demonstrate the scope and generality of the milp - based approach , and in particular the associated modeling techniques required to handle a wide variety of properties .",
    "the remainder of the paper is structured as follows : after formalizing the network generation problem , section  [ modeling ] introduces the modeling techniques that can be used to formulate the mathematical expression and specification of any network property of interest in an optimization context .",
    "section  [ popular ] then develops model `` snippets '' that correspond to a number of popular network properties .",
    "section  [ enhancements ] addresses modeling and implementation issues that can enhance the performance of optimization algorithms in the context of the network generation problem .",
    "section  [ studies ] discusses how to put together complete optimization formulations for the design of networks that have tunable levels of connectivity , spread , assortativity and robustness .",
    "although by no means exhaustive for the capabilities of the proposed optimization - based framework , these illustrative applications were selected so as to showcase its versatility and flexibility with regards to network properties that can be addressed . a number of computational case studies are also provided for illustration . finally , section  [ conclusions ] presents our concluding remarks . throughout the paper ,",
    "we use boldface to indicate vector quantities .",
    "the network generation problem ( ngp ) calls for the identification of the connections ( edges ) that need to exist between its nodes in order for the network to attain specific values , or values within specific ranges , for a set of properties of interest . by `` properties '' we refer to various characteristic quantities of networks including global metrics ( e.g. , the global clustering coefficient ) , local metrics ( e.g. , a node s local clustering coefficient ) , nodal distributions ( e.g. , the degree sequence ) , network distances ( e.g. , shortest paths among nodes ) , and densities of distinctive patterns ( e.g. , total number of triangles ) .",
    "we remark that , as different properties result in different admissible ( feasible ) network configurations , the ngp seeks configurations that are simultaneously feasible with respect to all specified properties .    in order to address the ngp",
    ", we will formulate optimization models according to two major aims .",
    "the first is to concisely mathematically express each of the desired properties so that they can be conveniently evaluated given any network configuration that is explored during the solution process .",
    "the second aim is to appropriately restrict the feasible solution space into only those network configurations that satisfy all property specifications .",
    "both aims are to be met with an appropriate selection of optimization variables and equality or inequality constraints , something that is discussed in detail in sections  [ express ] and  [ specify ] .    throughout the analysis",
    ", we preserve an overall milp structure for our models and strive to involve expressions that have as tight lp - relaxations as possible .",
    "we also focus on creating modular formulations , which we achieve by describing each property with an independent set of constraints that can be included as a building block to an overall formulation only when the property in question is part of the problem specifications .",
    "the modularity of our formulations is illustrated later in section  [ studies ] , where complete formulations are put together by utilizing the constraints presented as stand - alone examples in sections  [ popular ] and  [ enhancements ] .",
    "let @xmath1 be the set of the network s nodes , where @xmath2 is an _ a priori _ known constant - here the maximum allowable number of nodes .",
    "depending on the application , a set of properties may explicitly or implicitly impose that all @xmath2 nodes are non - isolated ( i.e. , have degree of at least one ) , or even that the network has a single component ( i.e. , is connected ) .",
    "let also @xmath3 be the set of all ( undirected ) edges that can possibly form between the nodes in @xmath4 .",
    "as the cases @xmath5 and @xmath6 are trivial for the ngp , we always assume for convenience that @xmath7 .    for ease of exposition ,",
    "this paper focuses on undirected , simple networks .",
    "extensions to more general classes of networks can be handled by appropriately augmenting the set @xmath8 .",
    "for example , loops can be considered by allowing @xmath9 , while directed arcs can be introduced by allowing @xmath10 .",
    "furthermore , we consider nodes to be unlabeled ; that is , the nodes are permutable with each other and the specification does not provide any particular reference to node labels .",
    "we remark that the unlabeled case is in fact the more general and `` difficult '' variant of the ngp , as achieving a more abstract specification must in general be more involved .",
    "the basic set of optimization variables utilized in our framework is a set of binary variables @xmath11 to denote the existence of each edge @xmath12 : @xmath13    the @xmath14-variables suffice to fully define the configuration of the network .",
    "once their values are determined , every property of the network can be uniquely evaluated , and whether the property specifications are satisfied or not can be unambiguously determined .",
    "however , only a handful of properties can be expressed in closed form as a linear function of these variables .",
    "a notable example is the degree of a node , which can be expressed as the sum of all edges incident to that node .",
    "other properties will typically necessitate the introduction of additional auxiliary variables to facilitate their mathematical description .",
    "for example , properties such as the global clustering coefficient require the encoding of whether particular features ( in this case , triangles ) have been formed or not , while expressing properties such as the network diameter would require the encoding of the shortest - path lengths among each pair of nodes . to that end , it is often convenient to introduce a new set of variables @xmath15 to capture the formation of each feature @xmath16 , where @xmath17 is the set of features of interest , as well as a new set of variables @xmath18 to express the length of the shortest path between each pair of nodes @xmath12 . restricting these variables to their intended values",
    "is discussed in sections  [ features ] and  [ shortestpaths ] .",
    "in general , most properties of interest can be expressed directly as a linear combination of the @xmath14- , @xmath19- and @xmath20-variables : @xmath21 where @xmath22 , @xmath23 , @xmath24 and @xmath25 are parameters that depend on the type of property , and @xmath26 is an auxiliary variable to capture the property s value .",
    "the use of an auxiliary @xmath26-variable helps the model from a human - readability and modularity perspective .",
    "furthermore , it facilitates the expression ( in a linear fashion ) of more complex , higher - level properties .",
    "for example , once the local clustering coefficients of each node are represented by an appropriately defined set of @xmath26-variables , the average clustering coefficient of the entire network can be expressed based on their sum .",
    "we note that , irrespectively of whether it represents a discrete or a continuous quantity , every @xmath26-variable may be declared to the milp solver as a continuous variable within appropriate lower and upper bounds , @xmath27 and @xmath28 .",
    "these bounds can be readily derived based on interval arithmetic considerations .",
    "we further remark that most commercial milp solvers will automatically detect the special manner in which these additional variables participate in the formulation and remove them during a preprocessing phase .",
    "therefore , it is not expected that the computational performance of the solution process will be burdened by these types of modeling simplifications",
    ". examples of expressing a number of popular properties are provided in section  [ popular ] .",
    "the existence or absence in the designed network of characteristic patterns ( e.g. , triplets , triangles , cliques , stars ) may be of interest as a result of some higher - level property ( e.g. , global clustering coefficient , clique number ) .",
    "in such cases , the explicit encoding of the existence of these features is required to enable the expression of the desired property .",
    "we observe that the formation of any feature ( motif ) corresponds to the concurrent existence and/or absence of certain edges .",
    "for example , a triangle between nodes @xmath29 , @xmath30 and @xmath31 exists if and only if all three edges @xmath32 , @xmath33 and @xmath34 exist or , equivalently , if and only if @xmath35 .",
    "similarly , an open triplet along trajectory @xmath30@xmath29@xmath31 exists if and only if edges @xmath32 and @xmath33 exist , while edge @xmath34 does not , or if and only if @xmath36 .    for every feature @xmath16 , where @xmath17 is the set of all features of interest , let @xmath37 and @xmath38 be the corresponding collections of edges that need exist and be absent , respectively , and let a variable @xmath15 be defined as @xmath39    in order to maintain linear structure in the model , the variable @xmath15 is not expressed directly as the product @xmath40 ; rather it is restricted to an appropriate binary value through the following set of constraints : @xmath41    we remark that , at any feasible solution ( where all @xmath14-variables have attained binary values ) , the above constraints restrict the value of @xmath15 to either @xmath42 or @xmath29 without any explicit claim about its integrality .",
    "this means that variables @xmath15 need not be defined as binary rather as mere continuous in the context of the milp solution algorithm .",
    "an alternative to the @xmath43 constraints  ( [ yf1a ] ) and  ( [ yf1b ] ) are the two aggregate constraints @xmath44    use of constraints  ( [ yf1a])([yf1b ] ) is preferred , as they result into tighter lp - relaxations .",
    "furthermore , their total - unimodularity endowes the overall lp - relaxations with an increased tendency to admit integral solutions .",
    "the alternative constraints  ( [ yf1a])([yf1b ] ) are attractive in cases where the size of the formulation becomes an issue and has to be limited within an acceptable level .",
    "we note that when using the aggregate constraints , binarity of variable @xmath15 is not guaranteed and must be explicitly declared to the milp solver .",
    "examples of defining a number of common features are provided for illustration in section  [ popular ] .      a number of properties ( e.g. , betweeness - centrality , network diameter ) depend on shortest - path information . to that end , the explicit encoding of the shortest path between any node pair of interest @xmath45 and @xmath46 is required . since",
    "a shortest path is itself an optimal quantity ( out of all the paths that connect nodes @xmath47 and @xmath48 , it is the one with the minimum length ) , it can be obtained via the solution of a mathematical optimization formulation .",
    "given a network configuration @xmath49 , the following formulation applies : @xmath50 where parameters @xmath51 ,",
    "@xmath52 and @xmath53 , if @xmath54 .    in the above formulation ,",
    "each variable @xmath55 represents whether arc @xmath56 participates or not in the shortest path between nodes @xmath47 and @xmath48 .",
    "constraint  ( [ sp - p1 ] ) restricts participation to only those arcs that are eligible ; that is , to only those arcs that correspond to edges that exist in the network .",
    "the formulation ensures the integrality of the objective function at optimality . to that end",
    ", it suffices that the @xmath57-variables be declared to the optimization solver as continuous .",
    "we remark however that , due to the possibility of degeneracy ( i.e. , existence of more than one distinct shortest paths ) , some @xmath57-variables may admit fractional ( i.e. , neither @xmath42 nor @xmath29 ) values at optimality . in cases when we are not only interested in the length of the shortest path but also interested in encoding the actual shortest path , the @xmath57-variables should be declared as binary .- variables during branching considerations . by doing so , the @xmath57-variables will effectively be treated as continuous throughout the search process , and only at the very end ( and only if necessary ) will the solver take branching decisions on @xmath57 to resolve the degeneracy . ]    an alternative formulation that can be used to obtain the shortest path between nodes @xmath47 and @xmath48 is the dual of the above ( primal ) formulation , which can be cast as follows : @xmath58 where @xmath59 , @xmath60 and @xmath61 are continuous variables , and @xmath62 is an appropriate `` big - m '' coefficient .",
    "although the aforementioned two formulations ( the primal and the dual ) are available to us for computing the shortest path between two given nodes of interest , none of the two can be readily utilized in the context of the ngp .",
    "the complication arises due to the fact that the shortest path is only encoded when the formulations are solved to optimality .",
    "this can not be guaranteed in general , because the objective function of the overall ngp formulation may have to be reserved for some other application - specific functional .",
    "furthermore , when shortest paths between additional pairs of nodes need to be encoded at the same time , as is often the case , then it would not be possible to concurrently optimize multiple interdependent and generally competing objectives . to address this shortfall",
    ", we use the strong duality theorem of linear programming , which ensures that when no gap exists between a feasible solution of the primal problem and a feasible solution of the dual problem ( i.e. , when these two solutions have equal objective values ) , then both solutions are the optimal solutions of their respective problems .",
    "given this fact , an explicit encoding of shortest - path information that does not utilize the overall formulation s objective function can be achieved by appending all constraints of both the primal and dual shortest path formulations ( i.e. , constraints  ( [ sp - p1])([sp - p4 ] ) and  ( [ sp - d1])([sp - d4 ] ) ) , and in addition , appending the two equality constraints  ( [ sp - o1 ] ) and  ( [ sp - o2 ] ) to enforce that the objectives of the primal and dual formulations simultaneously attain a common value , @xmath18 .",
    "@xmath63 where @xmath64 $ ] are new variables that can be declared to the milp solver as continuous variables ( the constraints guarantee that they will attain discrete values ) .",
    "we remark that an implication of encoding the shortest path between a pair of nodes @xmath47 and @xmath48 is the fact that the search is restricted to networks in which @xmath47 and @xmath48 participate in the same network component .",
    ", then the search is restricted to connected networks .",
    "] this is due to the implicit requirement of the optimization process that any variable of the formulation attains a finite value .",
    "however , in applications where the specified properties involve shortest paths ( or some other property that depends on shortest paths ) , it is typically the case that the existence of the shortest paths is indeed desirable .      in the context of the ngp ,",
    "the set of properties of interest should in general attain values within specified ranges .",
    "note that this generic specification admits also the cases where there is only a single ( either lower or upper ) required bound , as well as the case where a property must equal some specified value exactly . in the following ,",
    "we describe how range restrictions can be imposed for linear , fractional , and sequence properties , as well as restrictions on collective statistics of those .",
    "examples of imposing restrictions for a number of popular properties will be presented in section  [ slacks ] .",
    "we remark that the larger the number of property specifications , the smaller the feasible solution space is . to that end",
    ", property combinations should be chosen judiciously so as not to inadvertedly correspond to infeasible problem instances ( i.e. , instances where no feasible network configuration exists ) .",
    "we define a linear property @xmath65 to be any property that can be directly expressed as a linear combination of any of the formulation s declared variables ( e.g. , the total number of triplets or triangles in the network can be expressed as sums of appropriately defined @xmath19-variables ) .",
    "this definition obviously admits any property that can be expressed as a @xmath26-variable according to constraint  ( [ pidef ] ) . specifying that @xmath65 attains some value in the range @xmath66 $ ]",
    "can be trivially achieved by appending in the overall formulation the explicit bounds @xmath67 it is assumed that the linear equality constraint that constitutes the definition of property @xmath65 has also been included in the formulation .",
    "we define a fractional property @xmath68 to be any property that can be expressed as the ratio of two linear properties , @xmath69 , where the linear property @xmath70 can not attain the value of zero .",
    "an example of a fractional property would be the global clustering coefficient , which is defined as thrice the ratio between the total triangles and triplets in the network .",
    "specifying that a fractional property attains some value in the range @xmath66 $ ] can be achieved by appending in the overall formulation the constraints ) apply for strictly positive @xmath70 . if instead @xmath70 is strictly negative , the inequality signs should be reversed . ]",
    "@xmath71 it is assumed that the linear equality constraints that constitute the definitions of properties @xmath72 and @xmath70 have also been included in the formulation .",
    "most specified properties are scalar quantities ( e.g. , the clustering coefficient of a node , the girth of the network ) .",
    "however , a property may also be a vector ; a case in point would be the scalar values that a collection of nodes attains for some other , scalar property .",
    "for example , the degree sequence of all neighbors of a given node @xmath47 is a vector property . if we want to impose it on the network to be constructed , we need to have explicitly encoded which node @xmath48 ( that is a neighbor of node @xmath47 ) attains which value from the sequence .",
    "more formally , let a node - specific property of interest and let variables @xmath73 be this property s values for each node @xmath47 , given a network configuration @xmath49 . it is assumed that the @xmath26-variables attain appropriate values at any feasible solution ( e.g. , as a result of constraints of type  ( [ pidef ] ) having been included in the formulation ) .",
    "in addition , let a subset of @xmath74 nodes ( @xmath75 ) , and let participation of a node @xmath45 in this subset be dictated by an appropriately defined binary variable @xmath76 ; that is , @xmath77 , if node @xmath47 participates in the subset , and @xmath78 , if it does not , such that @xmath79 ( the activation of the @xmath80-variables is formally discussed in section  [ subsets ] ) .",
    "finally , let a sequence of ranges @xmath81 , \\left[\\pi_2^l,\\pi_2^u\\right ] , \\cdots , \\left[\\pi_m^l,\\pi_m^u\\right ] \\right\\}$ ] that is to be specified on the node subset for the property of interest .",
    "in other words , it is desired that the solution exhibits a one - to - one correspondence between the @xmath73 values for the @xmath74 nodes and the ranges in the sequence @xmath82 .",
    "we note that the admissible correspondence may not be unique , if any two ranges in @xmath82 overlap .",
    "we introduce a new set of binary variables @xmath83 to denote the assignment of nodes to elements of the sequence : @xmath84 where @xmath77 and @xmath85 are necessary conditions for assignment .",
    "the definition of the @xmath86-variables and the specification of the sequence is enforced via the following set of constraints : @xmath87 where @xmath88 and @xmath89 are appropriate lower and upper limits for the value of variable @xmath73 .",
    "we remark that in cases where the sequence refers to nodes belonging to the intersection of multiple subsets , the @xmath86-variables need to be appropriately restricted .",
    "this can be achieved by ( i ) appending separate constraints  ( [ qim3 ] ) for each applicable subset and ( ii ) replacing the right - hand side in constraints  ( [ qim4 ] ) with an aggregate term @xmath90 ( @xmath91 is used here to index over the collection of subsets of interest and @xmath92 are the corresponding @xmath80-variables for subset @xmath91 ) .      instead of specific values or sequences , one may want to specify collective statistics , such as the arithmetic mean or the median of a given property .",
    "typically these statistical metrics are to be evaluated across the complete set of nodes ( e.g. , the case of the network s average clustering coefficient ) . however , in certain contexts they may refer only to a subset of nodes , which could itself be a variable quantity that depends on the network configuration @xmath49 ( e.g. , the case of the average degree among the neighbors of a given node ) .    more formally , let a node - specific property of interest and let variables @xmath73 attain appropriate property values for each node @xmath45 .",
    "in addition , let variables @xmath76 define participation in a node subset of interest . to assist us in the expression of statistical metrics",
    ", we introduce a new set of continuous variables @xmath93 to be equal to @xmath94 ; that is , to be equal to the value of property @xmath73 , if @xmath77 , or equal to some constant value @xmath95 , if @xmath78 .",
    "this definition of the @xmath96-variables is enforced with the following set of constraints : @xmath97 where @xmath88 and @xmath89 are appropriate lower and upper limits for the value of variable @xmath73 .",
    "we remark that , as a result of these constraints , @xmath98 $ ] , for all @xmath45 .",
    "furthermore , we note that in cases where the sequence refers to nodes belonging to the intersection of multiple subsets , the @xmath96-variables need to be appropriately restricted .",
    "this can be achieved by ( i ) appending separate constraints  ( [ pip1 ] ) for each applicable subset and ( ii ) replacing the term @xmath99 in constraints  ( [ pip2 ] ) with an aggregate term @xmath100 ( @xmath91 is used here to index over the collection of subsets of interest and @xmath92 are the corresponding @xmath80-variables for subset @xmath91 ) .    given the constraint set  ( [ pip1 ] ) and  ( [ pip2 ] ) , the sum of the property values across the subset of interest can be linearly expressed by setting @xmath101 and summing @xmath96-variables across the constant node set @xmath4 , @xmath102 . the mean across the subset of interest can then be expressed as the ratio @xmath103 .",
    "therefore , the mean constitutes a fractional property and specifying it can be achieved according to the discussion in section  [ specify_fp ] .",
    "higher - order moments could be specified along the same lines , assuming integral powers of the properties ( @xmath104 , @xmath105 , etc . )",
    "can also be expressed in a linear fashion .",
    "we remark that the specification of higher - order moments simplifies if the moments are taken around a constant value , or if the corresponding lower - order moments are also specified to fixed values .",
    "we will conclude this discussion by addressing the case of specifying the median values @xmath106 , @xmath107 , we define the median to be the value @xmath108 , if @xmath109 is odd , or any value in the range @xmath110 $ ] , if @xmath109 is even . ]",
    "@xmath111 of a set of property values @xmath73 , @xmath112 .",
    "we will show that the median can be linearly expressed in the formulation and , thus , can be directly specified as a linear property .",
    "we first note that the values @xmath113 and @xmath114 are appropriate lower and upper limits for the value of the median , irrespectively of the actual participation of nodes in the subset of interest .",
    "we then define @xmath96-variables based on @xmath115 and introduce two new sets of binary variables , @xmath116 and @xmath117 , to indicate respectively whether the median is larger or smaller than each of the @xmath96-variables . similarly to  ( [ zi ] )",
    ", the following constraints enforce the definitions of the @xmath118-variables : @xmath119    given this definition , the median @xmath111 will attain the proper value as a result of including in the formulation the inequalities @xmath120 where the last constraint requires explicitly that the subset of interest is not empty .",
    "we note that the lp - relaxation can be tightened by adding constraints @xmath121 and @xmath122 for all @xmath45 .",
    "every property refers to an appropriately defined subset of the network s nodes .",
    "most often properties are node - specific ; that is , given any network configuration @xmath49 , each node @xmath45 attains a separate value for this property ( e.g. , the properties of degree and clustering coefficient ) . in this case , the applicable subset consists of a single node .",
    "properties may also refer to the network as a whole ( e.g. , the degree sequence ) , in which case the subset consists of the complete set @xmath4 .",
    "there are additional cases , however , where a property may refer to some other subset of the nodes ( e.g. , the case of specifying the maximum shortest - paths among the nodes with a given clustering coefficient ) .",
    "we note that , in the general case , the participation of nodes in a specified subset of interest is itself variable ; that is , it depends on the network configuration @xmath49 and it is not a - priori known which nodes belong to the subset . in such cases , whether a node belongs or not to the subset needs to be appropriately encoded in the formulation .    given a node - specific property ,",
    "we define a subset of interest as the collection of those nodes @xmath45 for which the corresponding values of this property , @xmath73 , evaluate above some specified threshold @xmath123 .",
    "to indicate whether each node @xmath45 belongs or not to the subset of interest , we introduce a new set of binary variables @xmath124 where @xmath125 is the necessary and sufficient condition for participation .",
    "the definition of the @xmath80-variables is enforced via the constraints ) do not completely enforce the definition  ( [ zidef ] ) , as variable @xmath76 remains unrestricted in the case when variable @xmath73 exactly attains the value @xmath123 . however , in cases where @xmath73 attains values from a discrete set , one can always identify some small @xmath126 to subtract from @xmath123 in  ( [ zi ] ) so that the equality @xmath127 induces the restriction @xmath77 . in cases where @xmath73 attains values from a continuum",
    ", there is no practical concern , as there is zero likelihood that @xmath73 attains any specific value exactly . ]",
    "@xmath128 where @xmath88 and @xmath89 are appropriate lower and upper limits for the value of variable @xmath73 .",
    "it is assumed that the @xmath26- variables attain appropriate values as a result of constraints  ( [ pidef ] ) having been included in the formulation .",
    "we note that the subset definition presented above can readily admit the case where @xmath123 refers to an upper limit ; that is , the case where participation in the subset is realized when @xmath129 . in such a case ,",
    "one need use @xmath130 as the property and @xmath131 as the threshold value , which is equivalent to performing the substitution @xmath132 in constraints  ( [ zi ] ) .",
    "more complex subsets can then be expressed as intersections of these two simpler cases .",
    "for example , a subset that is defined based on a property evaluating within some specified range , @xmath133 , can be described as the intersection of the two simple subsets @xmath134 and @xmath135 .",
    "in this section , we use the modeling elements presented in section  [ modeling ] in order to describe a number of popular network properties and associated features , which can then be used in various specifications for the ngp .",
    "although not an exhaustive list of properties , the compilation of examples illustrates the generality of the proposed milp - based approach .",
    "we begin by illustrating how a number of common features can be defined .    *",
    "( 2-path ) .",
    "* let variable @xmath136 indicate whether a 2-path ( i.e. , open or closed triplet ) exists along trajectory @xmath48@xmath47@xmath137 , where @xmath45 and @xmath138 .",
    "this variable can be defined with the constraint set @xmath139 where @xmath140 , @xmath141 , @xmath142 and @xmath143 .",
    "generalizations to longer paths can be readily addressed .    * ( 3-cycle ) .",
    "* let variable @xmath144 indicate whether a 3-cycle ( i.e. , triangle ) exists between three nodes @xmath145 , where @xmath146 .",
    "this variable can be defined with the constraint set @xmath147 generalizations to longer cycles ( i.e. , squares ) can be readily addressed .    *",
    "( 4-clique ) .",
    "* let variable @xmath148 indicate whether a clique exists between four nodes @xmath149 .",
    "this variable can be defined with the constraint set @xmath150 or equivalently , with the constraint set @xmath151 generalizations to larger cliques can be readily addressed .    * ( 4-star ) .",
    "* let variable @xmath152 indicate whether node @xmath45 corresponds to the center of a star involving nodes @xmath153 .",
    "this variable can be defined with the constraint set @xmath154 or equivalently , with the constraint set @xmath155 where @xmath140 , @xmath141 , @xmath142 , @xmath143 , @xmath156 and @xmath157 .",
    "generalizations involving more nodes can be readily addressed .",
    "given such definitions of features , a number of properties can be expressed in a linear or fractional fashion .",
    "some examples follow .    *",
    "( degree ) .",
    "* the degree of each node @xmath45 can be captured by the variable @xmath158    * ( number of triplets ) . *",
    "the number of open and closed triplets ( i.e. , 2-paths ) centered at each node @xmath45 can be captured by the variable @xmath159    * ( number of triangles ) . *",
    "the number of triangles ( i.e. , 3-cycles ) in which each node @xmath45 participates can be captured by the variable @xmath160    * ( clustering coefficient ) . * the ( local ) clustering coefficient of a node @xmath45 can be captured by the variable @xmath161 and , thus , constitutes a fractional property .",
    "however , when node @xmath47 has a specified ( fixed ) degree @xmath162 , then the local clustering coefficient can also be captured by the linear expression @xmath163 where @xmath164 is the constant number of 2-paths centered at node @xmath47 .    * ( average clustering coefficient ) . *",
    "the average clustering coefficient can be captured by the variable @xmath165    * ( global clustering coefficient ) . * the global clustering coefficient of a network",
    "can be captured by the variable @xmath166 and , thus , constitutes a fractional property .",
    "however , when the network has a specified ( fixed ) degree sequence @xmath167 , then the global clustering coefficient can also be captured by the linear expression @xmath168 where @xmath169 is the constant number of total 2-paths in the network .    *",
    "( closeness centrality ) . *",
    "the inverse of the closeness centrality of each node @xmath45 can be captured by the variable @xmath170 specifying bounds @xmath171 $ ] for the closeness centrality of a node can be achieved through specifying bounds @xmath172 $ ] for its inverse .    *",
    "( average path length ) . * the average path length of a network can be captured by the variable @xmath173 where @xmath174 is the cardinality of the set of edges @xmath8 .    *",
    "( characteristic path length ) . * the characteristic path length of a network ( i.e. , defined here as the median of all its shortest paths ) can be captured by a variable @xmath175 , which assumes its appropriate value via the constraints ) are the equivalent of constraints  ( [ medianp ] ) and  ( [ medianm ] ) for the case of a fixed subset of interest with cardinality @xmath176 ( in particular , the set of edges @xmath8 ) . ] @xmath177 where @xmath178 and @xmath179 are appropriate `` big - m '' coefficients , @xmath174 is the cardinality of the set of edges @xmath8 , and @xmath180 is the indicator function .    *",
    "( sum of degrees of neighbors ) . * the sum of degrees of all neighbors of each node @xmath45 can be captured by variables @xmath181 , which assume their appropriate values via the constraints @xmath182 where @xmath183 , @xmath184 are @xmath96-variables defined for each @xmath185 with @xmath186 and with @xmath187 serving as the corresponding @xmath80-variables , and @xmath188 , @xmath189 are applicable lower and upper bounds for the degrees of each node @xmath45 ( such that @xmath190 ) . however ,",
    "when the network has a specified ( fixed ) degree sequence @xmath167 , one can instead use the simpler expression @xmath191    * ( number of nodes with given degree ) . *",
    "given applicable lower and upper bounds @xmath188 and @xmath189 ( such that @xmath190 ) for the degree of each node in the network , the number of nodes that attain each possible degree @xmath192 , where @xmath193 , can be captured by variables @xmath194 .",
    "these variables assume their appropriate values via the constraints @xmath195 where @xmath196 , @xmath192 , are @xmath80-variables that are activated when @xmath197 and deactivated when @xmath198 , @xmath199 for all @xmath45 are parameters defined for notational convenience , and @xmath200 is a small parameter to induce activation of variable @xmath196 when @xmath201 equals @xmath86 exactly .",
    "as will become evident with the case studies we will present in section  [ studies ] , the modeling techniques discussed so far provide considerable amount of flexibility in putting together ngp formulations for a wide variety of property specifications of interest .",
    "however , the ngp is in general a highly - complex combinatorial problem and solving it via standard optimization algorithms may be challenging for all but the smallest instances . in this section",
    ", we discuss a number of algorithmic enhancements that we have found to improve the performance of solution algorithms in the ngp setting .",
    "more specifically , in section  [ slacks ] we discuss the utilization of an appropriate objective function that attempts to minimize the cumulative deviation of the solution from the allowable ranges dictated by the specifications . in section  [ symmbreak ]",
    ", we discuss the issue of breaking the symmetry embedded inherently in any ngp formulation by appropriately restricting the search space to solutions that are non - isomorphic to each other .      the discussion in section  [ modeling ] addressed efficient ways to express and specify ( restrict ) properties of interest in an overall milp formulation . in all these cases , setting up the modeling of the problem did not require the formulation s objective function .",
    "this allows us to formulate application - specific objective functions .",
    "for example , out of all those network configurations @xmath49 that meet a certain specification , one may seek to identify the network that maximizes or minimizes some particular property , in which case the objective must be the appropriate expression quantifying that property .",
    "nevertheless , there are many applications for which an explicit metric to assess the fitness of a network configuration does not exist , and the problem at hand is merely a feasibility problem ; that is , to identify one or more configurations @xmath49 that meet the specification , without consideration to how `` good '' or `` bad '' each of the obtained solutions are . in such cases ,",
    "a suitable objective may be devised to enhance the computational performance of the solution process . in particular ,",
    "variables can be introduced to encode the deviation of each of the properties from its nearest acceptable ( as per the specification ) value .",
    "the objective would then require that the sum of all these `` slack '' variables be minimized .",
    "such an objective quantifies the total deviation from the feasible space of the problem and allows the solver to efficiently guide the search and locate feasible solutions .    as discussed , the property specifications come in the general form @xmath202 , where @xmath203 is used here to index over each specified property , @xmath204 is the corresponding functional of the formulation s variables and @xmath205 , @xmath206 are appropriate constants ( see , e.g. , the constraints  ( [ lp_bounds ] ) , ( [ fp_bounds ] ) , ( [ qim1 ] ) , and  ( [ symbreaklite1 ] ) ) . continuous slack variables @xmath207 are introduced in the formulation in a way that relaxes each of these specification constraints : @xmath208 where @xmath209 and @xmath210 are pairs of variables to encode respectively the negative and positive deviation of quantities @xmath204 from their allowable ranges @xmath211 $ ] .",
    "the sum of all @xmath212-variables , @xmath213 , should constitute the objective function to be minimized .",
    "we remark that for a feasible solution all slack variables need to be zero at optimality",
    ". and @xmath214 can not be both non - zero at an optimal solution . ] an optimal solution with a strictly positive objective ( as defined above ) corresponds to an infeasible ngp , and would signify that the property specification is not attainable .",
    "examples of specifying popular properties via use of @xmath212-variables are presented below .",
    "whenever the corresponding specifications are required , these constraints are to be appended during the modular build - up of a complete formulation . in section  [ studies ] , we present a number of illustrative formulations , and we elaborate further on how these constraints contribute in the context of a complete optimization model .    *",
    "( specification of degree ) .",
    "* let @xmath201 be the variable capturing the degree of a node @xmath45 as per constraint  ( [ pd ] ) .",
    "a lower bound @xmath188 and an upper bound @xmath189 can be specified on the degrees of this node via the constraints @xmath215 where @xmath216 are a pair of slack variables to be minimized .    *",
    "( specification of degree sequence ) .",
    "* let @xmath201 be the variables capturing the degree of each node @xmath45 as per constraint  ( [ pd ] ) .",
    "a degree sequence @xmath167 can be specified via the constraints @xmath217 where @xmath216 are two sets of slack variables to be minimized .    *",
    "( specification of average clustering coefficient ) .",
    "* let @xmath218 be the variable capturing the average clustering coefficient as per constraint  ( [ pacc ] ) .",
    "a lower bound @xmath219 and an upper bound @xmath220 can be specified on the average clustering coefficient via the constraints @xmath221 where @xmath222 , @xmath223 are a pair of slack variables to be minimized .    *",
    "( specification of global clustering coefficient ) .",
    "* let the global clustering coefficient of a network as defined in constraint  ( [ pgcc ] ) .",
    "since this quantity constitutes a fractional property , a lower bound @xmath224 and an upper bound @xmath225 can be specified via the constraints @xmath226 where @xmath227 , @xmath228 are a pair of slack variables to be minimized .",
    "however , when the network has a specified ( fixed ) degree sequence , then the global clustering coefficient can be specified as a linear property .",
    "let @xmath229 be the variable capturing the global clustering coefficient as per constraint  ( [ pgcc_fix ] ) . we can directly utilize this variable in the constraints @xmath230 where @xmath227 , @xmath228 are a pair of slack variables to be minimized .    * ( specification of average path length ) . *",
    "let @xmath231 be the variable capturing the characteristic path length as per constraint  ( [ papl ] ) .",
    "a lower bound @xmath232 and an upper bound @xmath233 can be specified on the characteristic path length via the constraints @xmath234 where @xmath235 , @xmath236 are a pair of slack variables to be minimized .    *",
    "( specification of characteristic path length ) .",
    "* let @xmath175 be the variable capturing the characteristic path length as per constraint  ( [ pcpl ] ) .",
    "a lower bound @xmath237 and an upper bound @xmath238 can be specified on the characteristic path length via the constraints @xmath239 where @xmath240 , @xmath241 are a pair of slack variables to be minimized .    *",
    "( specification of diameter ) . *",
    "a lower bound @xmath242 and an upper bound @xmath243 can be specified on the network s diameter via the constraints @xmath244 where @xmath245 are auxiliary binary variables defined for each @xmath12 , and @xmath246 , @xmath247 are a pair of slack variables to be minimized .",
    "specifying the diameter to a given value @xmath248 can be achieved by setting @xmath249 .    in the above example",
    ", constraints  ( [ spec - diam1 ] ) impose the strict upper bound of @xmath243 for all shortest paths @xmath18 as well as a lower bound of either @xmath242 or @xmath29 ( a trivial value ) , depending on whether variable @xmath245 assumes the value of @xmath29 or @xmath42 , respectively . at the same time , constraint  ( [ spec - diam2 ] ) ensures that `` at least one '' of these lower bounds will be @xmath242 .    *",
    "( specification of closeness centrality sequence ) . *",
    "let @xmath250 be the variables capturing the inverse of the closeness centrality of each node @xmath45 as per constraint  ( [ piclc ] ) .",
    "a sequence @xmath251 , \\left[clc_2^l , clc_2^u\\right ] , \\cdots , \\left[clc_n^l , clc_n^u\\right ] \\right\\}$ ] for the closeness centralities of the nodes in @xmath4 can be specified via the constraint set ) correspond to constraints  ( [ qim1])([qim4 ] ) for the case of the applicable subset being the complete node set @xmath4 . ]",
    "@xmath252 where @xmath253 and @xmath254 are respectively lower and upper limits for variables @xmath250 , @xmath83 are @xmath86-variables to indicate the assignment of the @xmath255 interval from the sequence @xmath256 to the @xmath257 node , indicating that the closeness centrality of node @xmath47 , @xmath258 , is to attain a value within the range @xmath259 $ ] , and @xmath260 are two sets of slack variables to be minimized .    * ( specification of average degree of neighbors ) . * let @xmath181 be the variables capturing the sum of degrees of the neighbors of each node @xmath45 as per constraints  ( [ psdn ] ) , @xmath194 be the variable capturing the number of nodes that attain degree @xmath86 as per constraints  ( [ pnnd ] ) , and @xmath196 be the @xmath80-variables activated if @xmath197 as per constraints  ( [ pnnd ] ) . a lower bound @xmath261 and an upper bound @xmath262 can be specified on the average degree of the neighbors of all nodes that attain degree @xmath86 via the constraints @xmath263 where @xmath264 are sets of @xmath96-variables corresponding to variables @xmath181 ( defined for @xmath101 and activated if node @xmath47 attains degree @xmath86 ) , @xmath189 is the maximum possible degree attainable by any node , and @xmath265 are two sets of slack variables to be minimized .    in the above example , the variables @xmath266 assume the value @xmath267 , if @xmath268 ( i.e. , if both @xmath269 and @xmath270 ) , while otherwise they assume the value @xmath271 .",
    "this facilitates the convenient expression of the sum of degrees of all neighbors of nodes that attain a given degree @xmath86 as the sum of variables @xmath266 over all nodes @xmath45 , irrespective of whether a node @xmath47 attains degree @xmath86 or not .",
    "the sum is utilized in constraint  ( [ spec - adn2 ] ) that imposes the required specification of average degree of the neighbors as a fractional property involving the ratio of this sum over the total number of neighbors of the nodes that attain degree @xmath86 ( which is equal to the product of @xmath86 times @xmath194 ) .      a prominent characteristic of the ngp is the potential isomorphism of its solutions ;",
    "that is , the admittance of multiple solutions that correspond to the same configuration up to permutation ( relabeling ) of the node set @xmath4 and are , thus , practically indistinguishable to each other .",
    "for example , consider a network with @xmath272 nodes and two configurations @xmath273 such that @xmath274 and @xmath275 .",
    "it is easy to see that both configurations correspond to the same network , a simple open triplet , the difference being the ( arbitrary ) label of its central node ( node @xmath29 in @xmath276 and node @xmath30 in @xmath277 ) .",
    "it is not uncommon for networks with as few as ten nodes to have hundreds of isomorphic counterparts .",
    "isomorphism constitutes a major challenge in addressing the problem via an milp approach , as the associated branch - and - bound - based search process would be subject to significant burden in exploring unnecessarily enlarged feasible spaces .",
    "furthermore , the attempt to identify and record multiple distinct solutions will be challenged by the continued recurrence of solutions that are isomorphic to the ones already encountered .",
    "it is therefore desirable to remove all or part of the isomorphism by introducing constraints that will restrict the search to only those solutions that are `` nominal , '' according to some appropriate criterion , while of course ensuring that the full space of distinct , non - isomorphic configurations remains attainable ( feasible ) .",
    "as the goal is essentially to break the symmetry among the nodes in set @xmath4 , the criterion can be based on a node - specific property .",
    "we can then consider that a solution is nominal only if the nodes @xmath45 attain values for this property , @xmath73 , in a sorted ( w.l.o.g .",
    ", non - increasing ) fashion : @xmath278    the degree property is most often the obvious choice of property upon which to reduce isomorphism , since it is easily expressed as a linear sum of the @xmath14-variables ( the formulation s basic variables ) .",
    "however , constraints  ( [ symbreak1 ] ) may not suffice to fully eliminate isomorphism due to the lack of a specification that is adequately restrictive ( e.g. , the specification of a degree sequence with two or more of its elements being equal ) . to further break ties among nodes that attain equal values of the `` primary '' property , @xmath73 , some `` secondary '' property , @xmath279 ,",
    "must be considered in tandem .",
    "more specifically , in addition to  ( [ symbreak1 ] ) , we utilize the constraints @xmath280 where @xmath281 is an appropriate `` big - m '' coefficient that will allow the variables @xmath279 and @xmath282 to vary freely for even a small , yet `` sufficiently '' strictly positive , difference @xmath283 . for the case of the the primary symmetry - breaking property @xmath26 being the degree @xmath284 , which is an integral property , the value @xmath285 would suffice to achieve the desired behavior .",
    "tertiary and additional , lower - level symmetry - breaking criteria could be imposed in a similar fashion so as to reinforce the attempt to alleviate isomorphism . however , in most applications there would be little or no residual symmetry to justify the associated increase in model size or the potential scaling challenges due to the introduction of increasingly large coefficients @xmath286 , @xmath287 , etc .",
    "we remark that breaking symmetry is greatly simplified in the special case where a complete sequence is specified for the primary property ( e.g. , a full degree sequence ) .",
    "let @xmath288 be the desired sequence , which w.l.o.g .",
    "we consider to be sorted in non - increasing order .",
    "primary symmetry - breaking can be achieved by directly specifying that @xmath289 be assigned to node @xmath47 , for all nodes @xmath45 .",
    "the secondary symmetry - breaking criterion could then be considered only for those successive node pairs @xmath47 and @xmath290 that we know a - priori would attain the same degree . by doing so , not only can symmetry - breaking be imposed without the need for `` big - m '' coefficients , but also the sequence is explicitly assigned without the need for @xmath86-variables .",
    "constraints  ( [ symbreaklite1 ] ) and  ( [ symbreaklite2 ] ) apply .",
    "the first constraint is a specification of a linear property to an exact value ( see constraint  ( [ lp_bounds ] ) with @xmath291 ) and the second constraint selectively applies the second criterion wherever necessary . @xmath292    * ( symmetry - breaking based on degrees and clustering coefficients ) .",
    "* let @xmath201 be the variables capturing the degree of each node @xmath45 as per constraint  ( [ pd ] ) , and let @xmath293 be the variables capturing the ( local ) clustering coefficient of each node @xmath45 as per constraints  ( [ pcc ] ) or  ( [ pcc_fix ] ) . breaking symmetry among nodes based primarily on their degrees and secondarily on their ( local ) clustering coefficients",
    "can be achieved via the constraint set @xmath294 where the implied coefficient @xmath295 reflects the fact that two clustering coefficients can at most differ by one . however , when a ( non - increasing ) degree sequence has been specified as via constraints  ( [ spec - degseq ] ) , then it suffices to use the simpler constraint set @xmath296    * ( symmetry - breaking based on degrees and shortest - path distances ) .",
    "* let @xmath201 be the variables capturing the degree of each node @xmath45 as per constraint  ( [ pd ] ) , and let @xmath18 be the variables capturing the shortest - path distance between two nodes @xmath12 as per the discussion of section  [ shortestpaths ] . breaking symmetry among nodes based primarily on their degrees and",
    "secondarily on their shortest - path distances from the last node , @xmath297 , can be achieved via the constraint set @xmath298 where @xmath62 is the appropriate `` big - m '' coefficient representing the maximum possible difference between two shortest paths in a graph of @xmath2 nodes . however , when a ( non - increasing ) degree sequence has been specified as via constraints  ( [ spec - degseq ] ) , then it suffices to use the simpler constraint set @xmath299    we remark that , in the above example , any node could have been selected as the reference node for such symmetry breaking purposes . yet , in all cases , it would not have been possible to differentiate among the neighbors of the reference node via this set of constraints , since all neighbors feature the same shortest distance of @xmath29 from the reference node .",
    "our choice of the last node , @xmath297 , as the reference node is thus justified by the fact that it connects to the smallest amount of neighbors ( given that the primary breaking of symmetry is done via degrees ) , which in turn translates to a formulation with as minimal residual isomorphism as possible .    *",
    "( symmetry - breaking based on degrees and sums of degrees of neighbors ) . *",
    "let @xmath201 be the variables capturing the degree of each node @xmath45 as per constraint  ( [ pd ] ) , and let @xmath181 be the variables capturing the sum of degrees of the neighbors of each node @xmath45 as per constraints  ( [ psdn ] ) . breaking symmetry among nodes based primarily on their degrees and secondarily on the sums of degrees of their neighbors",
    "can be achieved via the constraint set @xmath300 where @xmath301 is the appropriate `` big - m '' coefficient representing the maximum possible difference between the sums of degrees of neighbors of two given nodes .",
    "nodes that all attain maximum degree themselves ( e.g. , as part of a clique ) , and consider the second node being an isolated node ( sum of degrees of neighbors being @xmath42 in this case ) .",
    "] however , when a ( non - increasing ) degree sequence has been specified as via constraints  ( [ spec - degseq ] ) , then it suffices to use the simpler constraint set @xmath302    * ( symmetry - breaking based on degrees and closeness centralities ) .",
    "* let @xmath201 be the variables capturing the degree of each node @xmath45 as per constraint  ( [ pd ] ) , and let @xmath250 be the variables capturing the ( inverse of ) closeness centrality of each node @xmath45 as per constraints  ( [ piclc ] ) . breaking symmetry among nodes based primarily on their degrees and secondarily on their closeness centralities",
    "can be achieved via the constraint set @xmath303 where @xmath304 is the appropriate `` big - m '' coefficient representing the maximum possible difference between the inverse closeness centralities of two nodes in any ( connected ) network , corresponds to the difference between the inverse closeness centrality of a terminal node in a path graph ( @xmath305 ) and that of a node in a clique ( @xmath306 ) . ] and @xmath188 , @xmath189 are respectively the minimum and maximum possible degrees attainable by any node . however ,",
    "when a ( non - increasing ) degree sequence has been specified as via constraints  ( [ spec - degseq ] ) , then it suffices to use the simpler constraint set @xmath307",
    "in this section we discuss the development of complete formulations for a number of informative applications .",
    "we demonstrate the modularity of the approach by utilizing constraint sets introduced previously in sections  [ popular ] and  [ enhancements ] .",
    "all case studies were solved on a win7 machine with an intel i5 - 3230 m ( 2.60ghz ) processor and 3 gb ram .",
    "gurobi  5.6  @xcite was used as the milp optimization solver , and all runs were explicitly limited to utilize a single cpu core . aside from customized branching prioritization for binary variables according to the earlier discussion , default solver options were used throughout this study .",
    "the node labels in all figures represent the degrees of the depicted nodes .",
    "two primary characteristics of a network in terms of the connectivity among its nodes are the degree distribution and the level of clustering . as elaborated in the introduction ,",
    "there exist many well - known algorithms for constructing networks with a specified degree sequence .",
    "however , none of these algorithms can guarantee that the constructed networks adhere also to pre - specified clustering statistics , which can in general vary significantly among networks of the given degree sequence .",
    "in fact , networks generated by approaches that randomly connect vertices tend to have a low number of triangles and , thus , low clustering coefficients . in contrast , many networks that develop in the real world feature larger clustering coefficients .",
    "take social networks , for instance , where two randomly chosen friends ( neighbors ) of a person ( node ) are also more likely to know each other than two randomly chosen people in the network .",
    "furthermore , networks whose nodes have an underlying spatial meaning ( e.g. , power - grid networks ) tend to develop more edges between nodes that are closer to each other , leading to the presence of more triangles than what would be expected by mere chance . to that end , it is sometimes necessary to be able to control the statistics of both degrees and clustering of the nodes in the constructed network .    in this application , we consider specifying the degree sequence in conjunction with the network s average and global clustering coefficients .",
    "let @xmath167 be a specification for the degree sequence . ]",
    "( w.l.o.g . , we assume @xmath308 ) , and let @xmath309 $ ] and @xmath310 $ ] be respectively the acceptable bounds for the average and global clustering coefficient . after picking the appropriate sets of constraints from examples presented previously in the paper , we formulate the following optimization model : @xmath311    constraints  ( [ ytr ] ) through  ( [ pgcc_fix ] ) restrict all applicable @xmath26-variables ( variables @xmath201 , @xmath218 and @xmath229 ) to their appropriate values ( the degree of each node and the two clustering coefficients , respectively ) , while constraints  ( [ spec - degseq ] ) , ( [ spec - acc ] ) and  ( [ spec - gcc_fix ] ) impose the specifications .",
    "obviously , if no specification is desired for either of the two clustering coefficients , the corresponding constraint  ( [ spec - acc ] ) or  ( [ spec - gcc_fix ] ) should be omitted ( or simply `` disabled '' by setting @xmath312 $ ] as the allowable bounds ) .",
    "constraints  ( [ spec - degseq ] ) are also used in conjunction with the ordered degree sequence specification to reduce isomorphism .",
    "symmetry is primarily broken based on node s degrees , while residual symmetry is broken based on local clustering coefficients .",
    "finally , constraints  ( [ formclu - xbinary ] ) declare the binarity of the @xmath14-variables , while constraints  ( [ formclu - slackpos1 ] ) and  ( [ formclu - slackpos2 ] ) declare the non - negativity of the @xmath212-variables .",
    "the objective  ( [ formclu - obj ] ) minimizes the sum of every slack variable associated with a specification .",
    "we remark that although a number of @xmath19- , @xmath26- and @xmath212-variables participate in the formulation , we only list @xmath49 under the @xmath313 operator to highlight the fact that the @xmath14-variables suffice to fully define the solution ( i.e. , the values of all other variables can be uniquely defined once values for @xmath49 are determined ) .    case study  [ case1 ] demonstrates the use of this formulation .",
    "we provide a specific ( randomly chosen ) degree sequence , and we desire to construct networks with various values for the average and the global clustering coefficient . to that end , we provide three ranges ( `` low , '' `` medium '' and `` high '' ) from which we would require both coefficients to attain values .",
    "[ case1 ] let @xmath314 nodes , and let @xmath315 be a specification for the degree sequence .",
    "let also three separate specifications with @xmath316 $ ] , @xmath317 $ ] and @xmath318 $ ] as the allowable bounds for the average and global clustering coefficients ( bounds common to both metrics ) .",
    "figure  [ fig : case1 ] depicts representative solutions .",
    "each of the three networks was constructed in less than 0.1 @xmath319 cpu .    instead of trying to locate network realizations that adhere to a particular specification , a problem cast as a slack - minimization problem ,",
    "case study  [ case2 ] discusses the situation where an application - specific objective function is available .",
    "in particular , we seek to identify the network with maximum clustering coefficient ( either average or global ) that adheres to the specified degree sequence .",
    "the applicable formulations can be derived from the previous one per the following steps : ( i ) remove all @xmath212-variables ( i.e. , set them to a fixed value of zero ) , ( ii ) disable the specifications for the two coefficients ( i.e. , set @xmath320 and @xmath321 in constraints  ( [ spec - acc ] ) and  ( [ spec - gcc_fix ] ) , or completely remove these constraints from the formulation ) , and ( iii ) replace the objective with either @xmath322 or @xmath323 , depending on which of the two coefficients we seek to maximize .",
    "[ case2 ] let @xmath314 nodes , and let @xmath315 be a specification for the degree sequence .",
    "we seek the networks that maximize the average clustering coefficient as well as the networks that maximize the global clustering coefficient .",
    "figure  [ fig : case2 ] depicts a common solution that happens to maximize both metrics at the same time .",
    "the network was obtained in about 1 @xmath319 cpu .",
    "we observe that case study  [ case2 ] resulted in a network that features two disconnected components .",
    "the optimizer was able to discern that , in this way , `` more clustered '' communities can be formed while at the same time adhering to the overall specified degree sequence .      beyond local connectivity in the network , which can be controlled through properties such as the degrees and clustering coefficients , another informative network quality to consider during construction",
    "is the network s _ long - range spread_. the spread is especially important in networks where the edges represent conduits of information flow , such as the case of communication networks .",
    "it relates to the relative size of shortest paths across the network and can thus be characterized by a number of relevant properties , most notably the characteristic path length ( cpl ) and the network diameter ( i.e. , the median and maximum shortest - paths , respectively ) .",
    "it is important to note that the network spread may sometimes correlate with node connectivity , but tuning connectivity does not suffice for also tuning the spread . randomly constructed networks typically have a small number of triangles ( low clustering ) and low spread . on the other hand , small - world networks also exhibit low spread , but are known to feature a large number of triangles . in general , networks with different possible combinations of local connectivity and spread exist , and it is important to be able to independently control both qualities during network construction .    to that end , in this application we study the construction of networks that adhere to a specific degree sequence and at the same time possess pre - specified values for the two network spread metrics , cpl and diameter .",
    "let @xmath167 be a specification for the degree sequence ( w.l.o.g . , we assume @xmath308 ) , and let @xmath324 $ ] and @xmath325 $ ] be respectively the acceptable bounds for the network s cpl and diameter .",
    "the following formulation applies : @xmath326    constraints  ( [ sp - p1 ] ) through  ( [ sp - o2 ] ) correspond to the encoding in @xmath20-variables of shortest path lengths via the primal / dual formulation analysis presented in section  [ shortestpaths ] .",
    "constraints  ( [ pd ] ) and  ( [ pcpl ] ) define the applicable @xmath26-variables for the node degrees and the cpl , while constraints  ( [ spec - degseq ] ) and  ( [ spec - cpl ] ) impose the corresponding specifications .",
    "the network diameter is specified via constraints  ( [ spec - diam1 ] ) and  ( [ spec - diam2 ] ) .",
    "obviously , if no specification is desired for either the cpl or the diameter , the corresponding constraints should be omitted ( or simply `` disabled '' by setting sufficiently `` loose '' bounds ) .",
    "isomorphism is primarily eliminated based on node degrees , while residual symmetry in the problem is broken via constraints  ( [ symbreak_deg_wn_fix ] ) , which order nodes of the same degree according to their shortest path to the last node ( node @xmath297 ) .",
    "finally , constraints  ( [ formspread - xbinary ] ) declare the binarity of the @xmath14- and @xmath327-variables , while constraints  ( [ formspread - slackpos1 ] ) and  ( [ formspread - slackpos2 ] ) declare the non - negativity of the @xmath212-variables .",
    "the objective  ( [ formspread - obj ] ) minimizes the sum of every slack variable associated with a specification .",
    "case study  [ case3 ] demonstrates the use of this formulation .",
    "we provide a degree sequence as in the previous case studies , and we desire to construct networks that attain various combinations of values for the cpl and the diameter .",
    "[ case3 ] let @xmath314 nodes , and let @xmath328 be a specification for the degree sequence .",
    "in addition , let a specification of @xmath329 for the characteristic path length , and let three separate specifications for the diameter requiring that it attains the values of @xmath330 , @xmath331 and @xmath332 .",
    "figure  [ fig : case3 ] depicts representative solutions for the three cases , which were respectively obtained in approximately 20 , 23 and 198 @xmath319 cpu .      in the previous applications we specified node degrees , clustering information and statistics on the lengths of shortest paths . in this section",
    "we will consider mixing patterns between nodes that form constituent links ; that is , correlations between node properties of neighbors .",
    "we specifically focus on capturing the correlations between degrees of neighbors in a network .",
    "a network is said to have assortative mixing if high ( low ) degree nodes preferentially form links with high ( low ) degree nodes .",
    "in contrast , disassortative networks are those in which high degree nodes preferentially link with low degree ones , and vice versa . empirical studies of real world networks have revealed that social networks tend to be assortative , while technological and biological networks are usually disassortative . in either case , having the ability to accurately capture degree - degree correlations of real world networks is crucial to understanding the dynamic processes that govern the formation of these networks .",
    "degree - degree correlations can be quantified in different ways .",
    "we pose the problem such that we specify bounds for the average degree among all neighbors of nodes of a given degree . for convenience",
    ", we further specify an overall minimum and maximum degree for the whole network ( which may just be the trivial values of 0 and @xmath333 , respectively ) .",
    "note that we do not specify the exact degree sequence as in the previous applications .",
    "more formally , let @xmath193 be the set of possible degrees , where @xmath190 , and let also @xmath334 defined for notational convenience .",
    "we focus on each possible degree @xmath335 and require that the average degree of the neighbors of all nodes that attain degree @xmath86 , denoted as @xmath336 , be restricted in the range @xmath337 $ ] .",
    "note that we do not provide a specification for @xmath338 , as isolated nodes do not possess any neighbors .",
    "we formulate the following optimization model : @xmath339    constraints  ( [ pd ] ) ,  ( [ psdn ] ) and  ( [ pnnd ] ) define variables @xmath201 , @xmath181 and @xmath194 for the degrees , the sums of neighbors degrees and the number of nodes that attain a given degree , respectively",
    ". constraints  ( [ spec - deg ] ) impose the degree specification , as it applies to each node independently , and they are only relevant when bounds other than @xmath340 and @xmath341 are chosen . constraints  ( [ spec - adn1 ] ) and  ( [ spec - adn2 ] ) impose the specification for the average degree of neighbors of the nodes of each degree @xmath335 .",
    "constraints  ( [ symbreak_deg_sdn ] ) break symmetry , primarily based on degrees , with residual symmetry among nodes that attain the same degree being broken based on the sum of degrees of their neighbors .",
    "constraint  ( [ formassort - nonull ] ) is added to avoid the trivial solution of a null graph , which may otherwise be feasible under certain specifications .",
    "finally , constraints  ( [ formassort - xbinary ] ) through  ( [ formassort - slackpos2 ] ) declare binarity and positivity of variables .",
    "as before , the objective  ( [ formassort - obj ] ) minimizes the sum of the slack variables used in the formulation . for the offset parameter in constraints  ( [ pnnd ] ) we chose the value @xmath342 , which is small enough to not adversely affect the tightness of the lp - relaxations but at the same time large - enough to sufficiently exceed the optimization solver s ( default ) feasibility tolerance setting of @xmath343 .    in case study  [ case4 ] , we design an assortative network by specifying bounds that are increasing as a function of @xmath86 .",
    "conversely , in case study  [ case5 ] , we construct a disassortative network by specifying bounds that decrease with @xmath86 .",
    "[ case4 ] let @xmath314 nodes and let @xmath340 and @xmath344 ( i.e. , no restriction on node degrees ) .",
    "the set of possible degrees is , thus , @xmath345 .",
    "let also @xmath346 and @xmath347 , for all @xmath335 , be lower and upper allowable values for the average degree among the neighbors of all nodes that attain degree @xmath86 .",
    "figure  [ fig : case4and5 ] ( top - left ) depicts a representative solution to this specification .",
    "we observe that only eight nodes connect in the network , leaving two nodes isolated .",
    "let us now choose @xmath348 , enforcing that no isolated nodes exist .",
    "a representative solution is also shown in figure  [ fig : case4and5 ] ( top - right ) .",
    "it took less than 0.3 @xmath319 cpu to obtain either of these two solutions .",
    "we observe that the solution we obtained for the case of no isolated nodes is in fact a network that is _ regular of degree 3 _ ; that is , a network where all nodes attain the same degree 3 .",
    "this is indeed a valid solution since @xmath349=\\left[2.5,3.5\\right]$ ] .",
    "the specification for the remaining degree classes , @xmath350 , becomes irrelevant in this solution , as these classes were not sampled by any node .",
    "we remark that if more degree diversity is desired , regular graphs can be trivially excluded from consideration by appending the constraint @xmath351 , where @xmath352 is the minimum span of degrees acceptable for a solution .",
    "[ case5 ] let @xmath314 nodes and let @xmath340 and @xmath344 ( i.e. , no restriction on node degrees ) .",
    "the set of possible degrees is , thus , @xmath345 .",
    "let also @xmath353 and @xmath354 , for all @xmath335 , be lower and upper allowable values for the average degree among the neighbors of all nodes that attain degree @xmath86 .",
    "figure  [ fig : case4and5 ] ( bottom - left ) depicts a representative solution to this specification .",
    "we observe that only nine nodes connect in the network , leaving one node isolated .",
    "let us now choose @xmath348 , enforcing that no isolated nodes exist .",
    "a representative solution is also shown in figure  [ fig : case4and5 ] ( bottom - right ) .",
    "it took less than 0.5 @xmath319 cpu to obtain either of these two solutions .",
    "we observe that the solutions of case study  [ case5 ] do not feature any nodes with degree @xmath355 or above .",
    "in fact , this was enforced implicitly by the specification , despite the looser setting @xmath356 .",
    "since only connected nodes ( i.e. , nodes of degree at least @xmath29 ) can serve as neighbors of other nodes , the setting @xmath357 for all @xmath358 implied that nodes of degree @xmath355 or above may not have any neighbors , i.e. , that no such nodes may exist in the solution .",
    "additionally , no nodes of degree @xmath359 exist in these solutions , as the setting @xmath360 implies that such nodes may only connect to nodes of degree @xmath29 , forming @xmath359-star components , which apparently is very restrictive given the rest of the specification ( in particular , it is impossible to achieve @xmath361 in a @xmath362-node network that features a @xmath359-star component ) .",
    "we finally remark that , similarly to case study  [ case2 ] , in case studies  [ case4 ] and  [ case5 ] we were able to obtain solutions that featured disconnected components .",
    "this was possible due to the fact that no explicit restriction was imposed on network properties pertaining to connectivity and/or length of paths between nodes as , for example , was the setting in case study  [ case3 ] .",
    "robustness ( a.k.a . ,",
    "resilience ) of complex networks to attacks or failures is an important subject of study in many fields involving technological networks , most notably in the context of defense applications .",
    "robustness is usually studied by measuring the effect of removing one or more nodes on the network s functional properties . in this context , the importance of the individual nodes to the integrity of the network is generally quantified by using some measure of _ node centrality_. the node degrees capture one aspect of node centrality .",
    "however , degree centrality only addresses the importance of the node in its immediate neighborhood .",
    "the _ closeness centrality _ of a node ( i.e. , the inverse of the average shortest - path length from this node to every other node in the network ) can be used as a better metric to measure the node s importance to the network as a whole .",
    "a value of closeness centrality close to 1 indicates that the node is centrally - located , and thus integral to the structural robustness of the network , while a value close to 0 indicates that the node is peripheral to the network , and thus less important from a robustness point of view .",
    "therefore , by specifying different distributions of closeness centrality for the nodes of a network , we can control the overall network robustness . in this application",
    ", we construct networks with a specified sequence of closeness centralities .",
    "more formally , let @xmath188 and @xmath189 , where @xmath190 , be lower and upper bounds on the node degrees , and let @xmath251 , \\left[clc_2^l , clc_2^u\\right ] , \\cdots , \\left[clc_n^l , clc_n^u\\right ] \\right\\}$ ] be a sequence of ranges for the values of closeness centrality that are to be assumed by the network s nodes . in other words , we require that there is a one - to - one correspondence between the set of closeness centralities of each node with the @xmath2 ranges in the sequence @xmath363 .",
    "the following formulation applies : @xmath364    constraints  ( [ sp - p1 ] ) through  ( [ sp - o2 ] ) correspond to the encoding in @xmath20-variables of shortest - path lengths via the primal / dual formulation analysis presented in section  [ shortestpaths ] .",
    "constraints  ( [ pd ] ) and  ( [ piclc ] ) define the applicable @xmath26-variables for the node degrees and the ( inverse of ) closeness centrality , respectively",
    ". constraints  ( [ spec - deg ] ) impose the specification of overall degree bounds , as they apply to each node independently , while constraints  ( [ spec - clc ] ) impose the specification for the closeness centrality sequence . constraints  ( [ symbreak_deg_clc ] ) eliminate isomorphism .",
    "this is primarily based on node degrees , with nodes of the same degree being arranged in order of decreasing closeness centrality ( equivalently , in order of increasing inverse of closeness centrality ) .",
    "finally , constraints  ( [ formrob - xbinary ] ) and ( [ formrob - qbinary ] ) declare the binarity of the @xmath14- and @xmath86-variables , while constraints  ( [ formrob - slackpos1 ] ) declare the non - negativity of the @xmath212-variables .",
    "the objective  ( [ formrob - obj ] ) minimizes the sum of every sum of all slack variables participating in the formulation .",
    "case studies  [ case6 ] and  [ case7 ] demonstrate the use of this formulation .",
    "we aim to design networks that attain two separate sequences for closeness centrality .",
    "the first case study creates a network where the nodes are progressively important for robustness .",
    "the second case study results in a network that possesses a vulnerable link .",
    "[ case6 ] let @xmath314 nodes and let @xmath340 and @xmath344 ( i.e. , no restriction on node degrees ) .",
    "in addition , let the following specification for the closeness centrality sequence , which requires the network nodes to be of increasing importance for robustness : @xmath365 = \\left[0.35 + m/30 , 0.42 + m/30 \\right ] , \\;\\ ; \\forall m \\in v.\\ ] ] figure  [ fig : case6and7a ] ( left ) depicts a representative solution for this specification , which was obtained in about 50 @xmath366 cpu .",
    "cpu . ]    [ case7 ] let @xmath314 nodes and let @xmath340 and @xmath344 ( i.e. , no restriction on node degrees ) .",
    "in addition , let the following specification for the closeness centrality sequence , which requires two nodes to be distinctively more important for robustness than the rest of the network : @xmath365 = \\left\\ { \\begin{array}{l } \\left[0.10 , 0.50 \\right ] , \\;\\ ; \\forall m \\in \\left\\{1,2,\\cdots,8\\right\\ } \\\\ \\left[0.60 , 1.00 \\right ] , \\;\\ ; \\forall m \\in \\left\\{9,10\\right\\}. \\end{array}\\right.\\ ] ] figure  [ fig : case6and7a ] ( right ) depicts a representative solution for this specification , which was obtained in 28 @xmath319 cpu .    in the above case studies ,",
    "the degree sequence was not specified .",
    "we will conclude this application by addressing the case where a specific degree sequence is desired in conjunction with the specification of a sequence for the closeness centralities .",
    "solutions to this problem can be obtained by simply replacing @xmath188 and @xmath189 in constraints  ( [ spec - deg ] ) with the desired degree values @xmath162 , for all @xmath45 ( equivalently , by replacing constraints  ( [ spec - deg ] ) with constraints  ( [ spec - degseq ] ) ) .",
    "we further replace the symmetry - breaking constraints  ( [ symbreak_deg_clc ] ) with their simpler version  ( [ symbreak_deg_clc_fix ] ) .",
    "figure  [ fig : case6and7b ] depicts two networks that are also solutions to the specifications of case studies  [ case6 ] and  [ case7 ] , but at the same possess the degree sequence specified in case study  [ case3 ] ( i.e. , @xmath328 ) .",
    "these solutions were respectively obtained in about 122 @xmath319 and 16 @xmath319 cpu .",
    "we note that the former is significantly faster than the corresponding run of case study  [ case6 ] , which did not entail a specification for the degree sequence . specifying the degrees  and utilizing this fact explicitly in order to break some of the formulation",
    "s symmetry  appears in this case to have considerably reduced the feasible search space and to have made the task of identifying a solution easier .",
    "this paper demonstrated the potential and versatility of using mixed - integer linear optimization to solve the network generation problem , which is the problem of the `` on - demand '' construction of networks that possess specified collective properties .",
    "it was shown how to mathematically express a number of network properties in a format consistent with a milp optimization formulation , and how to enforce their specification by restricting them into appropriate values in the context of the optimization formulation .",
    "the particular network properties covered in this paper were chosen due to their popularity among network researchers and were meant to serve as a paradigm .",
    "the modeling techniques that were presented can be utilized in extending the framework to handle a broad class of additional properties that may be relevant to some particular application of interest .",
    "we further compiled complete optimization formulations to specify various levels of connectivity , spread , assortativity and robustness on the networks to be generated , and we solved a number of relevant case studies involving small ( 10-node ) networks to illustrate the overall framework .",
    "solutions to these case studies were obtained within a few seconds or minutes depending on the instance through the use of uncustomized , `` off - the - shelf , '' optimization software .",
    "there are multiple factors that affect the computational performance of an milp solution process when dealing with instances of the network generation problem .",
    "these include the size of the network to be constructed , the number and type of variables required to encode the problem ( which depends on the application ) , as well as the restrictiveness of the desired specification .",
    "future research will be directed towards establishing the limitations of available `` off - the - shelf '' optimization software and , more importantly , towards developing customized solution methodologies in order to expand the current performance envelope .",
    "this work was supported by the united states department of energy ( de - sc0002097 ) , the defense threat reduction agency ( hdtra1 - 07 - 1 - 0005 ) and the national science foundation ( cbet-0827907 ) .",
    "ceg further acknowledges support from the berkman faculty development fund .",
    "f. viger and m. latapy .",
    "efficient and simple generation of random simple connected graphs with prescribed degree sequence . in lusheng",
    "wang , editor , _ computing and combinatorics _ , volume 3595 of _ lecture notes in computer science _ , pages 440449 .",
    "springer berlin heidelberg , 2005 .",
    "j. wang , l. rong and l. zhang . evolving small - world networks of the local world with tunable clustering . in _",
    "computing , communication , control and management , 2008 .",
    "isecs international colloquium on _ , volume  2 , pages 369373 , 2008 ."
  ],
  "abstract_text": [
    "<S> designing networks with specified collective properties is useful in a variety of application areas , enabling the study of how given properties affect the behavior of network models , the downscaling of empirical networks to workable sizes , and the analysis of network evolution . despite the importance of the task </S>",
    "<S> , there currently exists a gap in our ability to systematically generate networks that adhere to theoretical guarantees for the given property specifications . in this paper , we propose the use of mixed - integer linear optimization modeling and solution methodologies to address this _ network generation problem_. we present a number of useful modeling techniques and apply them to mathematically express and constrain network properties in the context of an optimization formulation . </S>",
    "<S> we then develop complete formulations for the generation of networks that attain specified levels of connectivity , spread , assortativity and robustness , and we illustrate these via a number of computational case studies . </S>",
    "<S> + * keywords : * network generation , network properties , graph theory , mathematical optimization . </S>"
  ]
}
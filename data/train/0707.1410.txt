{
  "article_text": [
    "entanglement  a consequence of the _ tensor - product _ structure ( of subsystems ) and superposition in quantum mechanics  has been slated to be one of the main protagonists in quantum computation : since an _ efficient _ physical realization of a quantum computer necessarily requires it to have a _",
    "scalable _ tensor - product hilbert space  the space of qubits .",
    "of course , entanglement is not necessary for quantum computation , since any computation in the space of qubits can be mapped onto a unary quantum system ( for instance , an atom ) , where the computation will be devoid of entanglement ",
    "hilbert spaces of same dimensions are _ fungible _",
    "however , as clearly illustrated in ref .",
    "@xcite , if a quantum computing system wants to avoid incurring exponential expense in the form of some physical resource for the computational problems which require exponential hilbert space dimensions for its execution , then it is mandatory for the system to consist of subsystems ( or the degrees of freedom ) such that it s hilbert space is equivalent to the hilbert space of qubits , _",
    "i.e. _ , the number of subsystems must grow linearly with the number of qubits required in an equivalent quantum computer .",
    "nonetheless , the requirement of the scalable hilbert space is necessary but not sufficient for a scalable quantum computer : it should further allow efficient implementation of the computational process itself _",
    "i.e. _ , the initialization , control unitary dynamics , error corrections , and measurements . in a nutshell",
    ": entanglement leads to the saving of exponential _ spatial _ resources by accessing an arbitrary superposition of @xmath0 states in just @xmath1 ( @xmath2 ) subsystems  @xcite , hence the motivation to understand it s _ temporal _ role ( number of oracle queries required ) in quantum computation .",
    "jozsa and linden  @xcite provided a major step towards understanding the role entanglement plays in speeding the dynamical evolution of a quantum computational process : a pure state quantum computation process necessarily requires _",
    "multipartite entanglement _ which grows with problem size to achieve an exponential temporal speedup , and if the entanglement is capped to a fixed number of qubits  independent of the problem size  then the computation can be classically simulated with an equivalent amount of classical resources ( also see @xcite ) ; this was demonstrated for shor s efficient quantum factoring algorithm  @xcite .",
    "this paper illustrates the temporal role of entanglement in grover s search algorithm  @xcite , and in the process further explains the result of jozsa and linden  @xcite .",
    "before we discuss our results , we first define the problem of searching a database .",
    "the problem is defined in terms of an _ oracle _ : one is given a very large _ unstructured _ database consisting of @xmath0 ( @xmath3 ) items , one has to find a ( multiple ) marked item(s ) ; the oracle consists of a function @xmath4 : if one inputs an item @xmath5 ( an oracle query ) , it outputs @xmath6 ( yes ) if @xmath5 is a marked item , otherwise it outputs @xmath7 ( no ) ; to obtain a marked item with the minimum possible number of queries to the oracle is the search problem . in the space of qubits ,",
    "grover s algorithm  @xcite executes the search by using only @xmath8 oracle queries , but a classical digital computer ",
    "deterministic or probabilistic  would require @xmath9 oracle queries on an average .",
    "thus , quantum computers provide a _",
    "quadratic _ temporal speedup over classical computers even though they both require @xmath10 spatial resources to perform the search .",
    "what makes grover s search algorithm significant is the fact that it is the only _ optimal _  @xcite pure state search algorithm .",
    "grover s search algorithm and the understanding of it which emerges from our paper can be succinctly described as follows .",
    "the initial state @xmath11 , an equal superposition of @xmath0 states representing an unsorted database with @xmath12 marked states , is iteratively rotated towards the target state , where each iteration consists of the oracle operation followed by an application of the reflection operation ( see sec .  [",
    "sec : algorithm ] ) .",
    "each time the oracle operation inverts the marked states while leaving the unmarked states unchanged , it creates a _ minimal structure _ in the state .",
    "this is exploited by the reflection operator by rotating the state about @xmath11 to take one _ optimal _ step closer to the marked states .",
    "the structure is minimal in the sense that the dynamical evolution of initial state is restricted to the _ effective _ two dimensional space , _ i.e. _ , the state after the @xmath13th iteration is given by @xmath14 where @xmath15 represents an equal superposition of all the marked states , and @xmath16 represents the same for all the unmarked states .",
    "thus , each iteration evolves the state simply by changing @xmath17 and @xmath18 , the two real parameters ( excluding the normalization condition ) .    the corresponding entanglement perspective of the algorithm ( see sec .  [",
    "sec : bipartite ] ) : it is the iterative change of entanglement between the qubits that drives the initial state towards the target state .",
    "an iterative change arises because the oracle operation generates entanglement between all the qubits  @xcite , which is then necessarily reduced by the corresponding reflection operator .",
    "the need for the iterative change in the entanglement can be motivated in the following way .",
    "the database consists of a large number of @xmath1-qubit states , and a small subset of which are the desired marked states ",
    "thus , each time the oracle generates the entanglement , it facilitates the corresponding reflection operator to rotate the resulting state one step closer to the desired marked states .",
    "however , the consequence  or the limitation  of the dynamical evolution of the algorithm in the effective two dimensional space translates into the fact that the entanglement in the algorithm is restricted to a trivial _ bipartite _ form_i.e .",
    "_ , it can be quantified by a _ single _",
    "bipartite measure of entanglement .",
    "this is due to the fact that the schmidt decompositions of the state after the @xmath13th iteration , @xmath19 , with respect to all the divisions of @xmath1 qubits into two subsets , will consist of the schmidt coefficients which are necessarily functions of @xmath17 and @xmath18 ( except for a constant factor ) .",
    "now if you fix either @xmath17 or @xmath18 , it simultaneously fixes all the coefficients for all the decompositions .",
    "moreover , since an entanglement measure is necessarily defined in terms of the schmidt coefficients , an arbitrary schmidt decomposition and a single measure of entanglement is thus sufficient to fix the entanglement of the state .",
    "more precisely , it is the change of entanglement in the state @xmath19 due to the @xmath20th iteration that determines @xmath21 , the change in the probability of finding the marked states from the @xmath13th to the @xmath22th iteration .",
    "this follows from the equation derived in sec .",
    "[ sec : concurrence2 ] : @xmath23 where @xmath24 represents the _ concurrence _",
    "@xcite  a measure of entanglement  of the state @xmath19 .",
    "we show that the above equation is a necessary and sufficient condition for the quadratic speedup , and the integration of the equation , such that @xmath25 changes from @xmath26 to @xmath6 , determines the number of the oracle operations required for the search .",
    "this fact allows us to further reestablish from the entanglement perspective that grover s search algorithm is the only optimal pure state search algorithm  @xcite .",
    "the inference that can be drawn from our paper is that if a quantum algorithm requires @xmath27 oracle queries for it s execution , then it optimally exploits @xmath28 _ effective _ dimensions of the @xmath29 ( the problem size ) dimensional hilbert space_i.e .",
    "_ , the pure initial state at all times during the evolution by the algorithm can be represented in terms of the same @xmath28 orthogonal states",
    ". this will translate into the optimal exploitation of @xmath28-partite entanglement_i.e .",
    "_ , @xmath30 independent measures of entanglement will govern the evolution of the algorithm . therefore ,",
    "when one oracle query is needed for the execution of an algorithm ( an exponential speedup ) , just as in shor s algorithm  @xcite , then it would necessarily require optimal utilization of @xmath1-partite entanglement which grows with the problem size  @xcite .",
    "simply put , the bipartite entanglement is the complete story of grover s search algorithm  the reason for the quadratic versus the desired exponential speedup  which stems from the inherent inability of the oracle in generating any global structure .",
    "this implies a lack of multipartite entanglement between the qubits which grows with problem size , a necessary requirement for the exponential speedup  @xcite . in conclusion : the entanglement allows _ simultaneous _ saving of spatial and temporal resources when a quantum algorithm is executed in the space of qubits .",
    "here we give a brief summary of grover s algorithm ; for further details see  @xcite .",
    "we consider a database of @xmath0 ( @xmath3 ) elements , and let it contain @xmath12 ( @xmath31 ) marked elements , which we want to find . the database is mapped onto the @xmath0 states of a quantum system : @xmath32 the first step of the algorithm is to form a equal superposition of the @xmath0 states : @xmath33 let us assume that @xmath12 is known , and define the target state @xmath15 as @xmath34 a normalized linear combination of marked states .",
    "similarly , the nontarget state @xmath16 represents the same for the unmarked states : @xmath35 by using equations ( [ eq : target ] ) and ( [ eq : nontarget ] ) , @xmath11 can be reexpressed as @xmath36 the state @xmath11 is iteratively evolved to the target state @xmath15 , where each iteration consist of two unitary operations , the oracle operation @xmath37 : @xmath38 followed by the reflection operator @xmath39 : @xmath40 by definition , the oracle @xmath41  ( [ eq : oracle ] ) operation inverts the marked states , leaving the unmarked states unchanged ; and the reflection operator @xmath39  ( [ eq : reflection ] ) rotates the state about the hyperplane @xmath11 , hence the name ` _ reflection operator _ ' .",
    "the central feature of the algorithm is that the iterative application of @xmath42 simply rotates @xmath11 in the effective two dimensional hyper plane , @xmath43 .",
    "this can be deduced by their action as described below .",
    "let the state after @xmath13th iteration be @xmath44 an application of @xmath37 on @xmath19 gives @xmath45 and a further application of @xmath39 on the above state gives @xmath46 by solving the recursion relation contained in eq .",
    "( [ eq : interference ] ) we obtain  @xcite @xmath47 which can be verified by mathematical induction .",
    "now , if we choose the number of iterations @xmath13 as the nearest integer to @xmath48 , then the state @xmath49 , and a further measurement in the computational basis will provide one of the marked states .",
    "moreover , the algorithm can be appropriately modified such that an arbitrary initial state @xmath50 can be used as the initial state , as long as @xmath51 is nonzero , to search the database in @xmath52 oracle queries  @xcite .",
    "the obvious modification to the standard search algorithm ( as described above ) is to replace the reflection operator  ( [ eq : reflection ] ) with the following reflection operator : @xmath53 .",
    "the search algorithm as presented in this section was independent of whether the database states @xmath54  ( [ eq : database ] ) were of a quantum system , which may or may not be devoid of entanglement .",
    "moreover , in principle , they could also represent the states of a classical system which allows superposition , for example , different modes of a classical electromagnetic wave .",
    "we refer the readers to ref .",
    "@xcite for the implementation of the oracle and the reflection operations in such systems ; but , as discussed in the introduction , such an implementation necessarily incurs exponential spatial overhead . for our purpose here",
    ", we now map the algorithm onto the space of qubits .",
    "the @xmath0 database elements can be conveniently mapped onto the @xmath2 product states of @xmath1 qubits : @xmath55 where @xmath56 represents the states of the @xmath57th qubits  a two - dimensional hilbert space @xmath58 ; and the superscript @xmath1 denotes that @xmath59 .",
    "the database states @xmath60  ( [ eq : qubitdatabase ] ) are known as the _ computational basis_. the initial state of the algorithm @xmath61  ( [ eq : supp ] ) is created by applying hadamard transformation @xmath62",
    "@xcite to each of the qubits in the product state @xmath63 : @xmath64 the oracle @xmath37  ( [ eq : oracle ] ) is implemented via a conditional unitary transformation @xmath65 on the computation basis states and an ancilla qubit @xmath66 , which is chosen to be in the state @xmath67 : @xmath68 where @xmath69 denotes addition modulo @xmath70 , and @xmath71 if @xmath72 is a marked state , otherwise @xmath73  @xcite .",
    "the action of @xmath65 from the computational basis perspective  ignoring the ancilla qubit from the description , as it remains unchanged  reduces to @xmath74  ( [ eq : oracle ] ) .",
    "the implementation of the reflection operator  ( [ eq : reflection ] ) follows from the eq .",
    "( [ eq : suppq ] ) : @xmath75 where @xmath76 ; and by construction it requires @xmath77 gates .",
    "the description so far in this section implies that the search algorithm in the space of qubits requires @xmath78 oracle queries to perform the search , and it s implementation requires @xmath77 physical resources . in any situation where @xmath12 is not known , one can either execute the algorithm by averaging over the several guesses for @xmath12 , and still obtain a marked state in @xmath78 oracle queries ; or first estimate @xmath12 in time @xmath78 by a quantum algorithm provided in ref .",
    "@xcite , and then execute the search .",
    "here we quantify the dynamical evolution of the entanglement between the qubits when the search algorithm is executed in the space of qubits .",
    "we illustrate how the change of entanglement generated after each iteration plays the central role in the search algorithm . to facilitate the discussion of the entanglement , and in order to quantify it ,",
    "we first introduce a measure called the _ concurrence _",
    "@xcite ; the choice to use the concurrence was dictated by its simplicity ( linearity ) , and in any case , the essential results would remain the same under an another _ entanglement monotone _",
    "@xcite .",
    "we can always schmidt decompose an arbitrary bipartite pure state @xmath79 of a @xmath80 and @xmath81 dimensional subsystems : @xmath82 where @xmath83 .",
    "the squared schmidt coefficients @xmath84 are the eigenvalues of the reduced density operators , @xmath85 and @xmath86 , of the two systems , and the vectors @xmath87 and @xmath88 make up the orthonormal bases that diagonalize the reduced density operators .",
    "if all but one of the schmidt coefficients are zero , then the state is _ separable _ , otherwise the state is entangled .",
    "the concurrence of the bipartite pure state @xmath79 is simply related to the _ purity _ of the marginal density operators  @xcite , @xmath89)}=\\sqrt{2\\biggl(1-\\sum_{j=1}^{d}\\mu_j^2\\biggr)}=",
    "2\\sqrt{\\sum_{j < k}\\mu_j\\mu_k}\\;. \\label{eq : concurrence}\\ ] ] @xmath90 is conserved under local unitary transformations because it is a function only of the schmidt coefficients .",
    "it varies smoothly from @xmath7 , for pure product states , to @xmath91 , for maximally entangled pure states .",
    "we want to quantify the entanglement of the state generated after the @xmath13th iteration of the algorithm .",
    "recall , the state after the @xmath13th iteration of the search algorithm is given by @xmath93 where ( and henceforth ) the superscript @xmath1 denotes that the states are @xmath1-qubit states .",
    "we want to schmidt decompose @xmath94 with respect to an arbitrary partition of @xmath1 qubits into two subsets of ( say the first ) @xmath95 qubits and the remaining @xmath96 qubits ; which will allow us to obtain the concurrence of the state by the use of eq .",
    "( [ eq : concurrence ] ) .    for the sake of simplicity",
    ", we assume that there is a single target state ( @xmath97 ) .",
    "we discuss the case of multiple marked states in the appendix  [ sec : general ] , where we show that the results for a single marked state generalizes to the case when there are @xmath12 marked states . to obtain the schmidt coefficients",
    "corresponding to the bipartite decomposition of @xmath94 , we define the target state to be @xmath98 where @xmath99 is a @xmath95 qubit product state  ( [ eq : qubitdatabase ] ) .",
    "one can conveniently express the nontarget state as @xmath100 where @xmath101 ) and ( [ eq : binontarget ] ) imply that the reduced density matrix @xmath102 obtained by tracing out @xmath96-qubit states from the density operator @xmath103 can be represented in terms of the two dimensional basis @xmath104 , _",
    "i.e. _ , @xmath102 ( or @xmath105 ) will have two non zero eigenvalues , which are the squared schmidt coefficients of @xmath94 ; and they are @xmath106 where @xmath107 is a constant that depends on the bipartite decomposition , @xmath108 and if @xmath109 , then @xmath110 .",
    "also , one can check that @xmath107 is proportional to the entanglement of the nontarget state , _",
    "i.e. _ , @xmath111    for the sake of completeness , we provide the schmidt decomposition of @xmath94 : @xmath112 where @xmath113 where @xmath114 and @xmath115 are the normalization constants , and @xmath116    the above schmidt representation of @xmath94 makes an important point obvious , _",
    "i.e. _ , the main contribution to the schmidt coefficients  ( [ eq : schmidtcoefficients ] ) , and the corresponding schmidt vectors , comes from the term @xmath117 .",
    "this arises from the entanglement between the target and nontarget states generated by the oracle  a fact central for the interpretation of our results , as discussed in the introduction .",
    "now we use the schmidt representation to analyze the dynamical evolution of the entanglement in the algorithm",
    ".      equations ( [ eq : concurrence ] ) and ( [ eq : schmidtcoefficients ] ) imply that the concurrence of @xmath94 is given by @xmath118 where the first equality follows from ( [ eq : concurrence ] ) and ( [ eq : schmidtcoefficients ] ) ; the second inequality is obtained by using @xmath119 and @xmath120  ( [ eq : recursion ] ) .",
    "moreover , the second equality assumes that we are in the first quadrant of the hyperplane @xmath121 ( henceforth our discussion will be restricted to the first quadrant ) , which means that all the quantities in ( [ eq : c2 ] ) are positive ; otherwise one has to put the absolute value sign in the right hand side of the ( [ eq : c2 ] ) , since by definition the concurrence  ( [ eq : concurrence ] ) is positive .",
    "the third equality  ( [ eq : c3 ] ) is a different representation of the second , which follows from eq .",
    "( [ eq : recursion ] ) ; the fourth equality  ( [ eq : c4 ] ) follows from fact that @xmath122 , and it is always positive but less than unity , except for the first few iterations ; the fifth equality  ( [ eq : c5 ] ) results from the assumption that @xmath109the domain where the quadratic speedup is meaningful  then @xmath123 and @xmath124 , in which case the concurrence becomes independent of the bipartite decomposition .",
    "equations  ( [ eq : c1])-([eq : c5 ] ) quantifies the entanglement between any @xmath95 and @xmath125 sets of qubits after the @xmath13 iteration , except for a negligible constant factor .",
    "( [ eq : c5 ] ) is the main result of the paper : it explains that the search algorithm exploits the change in entanglement after each iteration to evolve the initial state to the target state , _",
    "i.e. _ , the change in @xmath126 due to the @xmath22th iteration which determines @xmath127 , the change in the probability of finding the target state from @xmath13th to @xmath22th iteration .",
    "therefore , it follows that eq .",
    "( [ eq : c5 ] ) will not only governs the number of oracle queries needed to search the database , but , as we show in the next section  [ sec : main ] , that it is indeed a necessary and sufficient condition for the quadratic speedup .",
    "the evolution of the concurrence @xmath126 with the change in the number of the iterations @xmath13 has been plotted in fig  @xmath6 : here we discuss a some of its salient features of it from the perspective of the change in the schmidt coefficients with the change in @xmath13 , further details can be obtained from eqs .",
    "( [ eq : schmidtcoefficients])-([eq : sbc ] ) .",
    "first notice , eq .",
    "( [ eq : c2 ] ) implies @xmath128 ( @xmath129 ) and @xmath130 ( @xmath131 ) , as it should be , since by choice @xmath61 and @xmath132 are separable , otherwise @xmath126 is always nonzero . as @xmath13",
    "is increased , the difference between the schmidt coefficients @xmath133 and @xmath134 starts decreasing , therefore @xmath126 monotonically increases , and attains it s maximum value when @xmath135 , where @xmath136 .",
    "further iterations monotonically decreases @xmath126 , since the difference between the schmidt coefficients again starts to increase .",
    "when @xmath126 approaches zero , it signals that the target state is being approached , _",
    "i.e. _ , when @xmath137 , @xmath138 ( or @xmath139 , @xmath140 ) .",
    "we now give an alternate description of the change in @xmath126 with a change in @xmath13 , which is more relevant for the purpose of this paper .",
    "this description naturally arises from the entangling properties of the oracle and reflection operator .     against @xmath13 for @xmath141 and @xmath142 ( @xmath143).,width=321 ]",
    "we first show that the oracle operation of selectively inverting the target state generates the bipartite entanglement .",
    "this can be seen from the concurrence of the state @xmath144 : @xmath145 where the second equality  ( [ eq : o2 ] ) is obtained by substituting the explicit values of @xmath17 and @xmath18 given in ( [ eq : recursion ] ) ; the third equality  ( [ eq : o3 ] ) also follows from eq .",
    "( [ eq : recursion ] ) , where @xmath146 , except for the first few iterations , but because @xmath147 , then eqs .  ( [ eq : c3 ] ) and ( [ eq : o3 ] ) imply that @xmath148 .",
    "this can be also seen directly from @xmath149 which ( in the first quadrant ) is always positive but a decreasing function ( see fig .",
    "@xmath70 ) .",
    "the corresponding reflection operator increases the probability of finding the target state , then it should reduce the entanglement between the qubits .",
    "this can be seen by evaluating the difference , @xmath150 .",
    "the difference is always negative and decreasing , as shown in figure @xmath70 ( where we have plotted the _ negative _ of the difference ) .",
    "@xmath70 provides a simple explanation for fig .",
    "@xmath6 : the monotonic increase of @xmath24 as @xmath151 is increased from @xmath129 to @xmath152 results because , in this range of @xmath13 , each oracle operation generates more entanglement than the reduction due to the corresponding reflection operator .",
    "whereas , between @xmath152 and @xmath153 the converse occurs .",
    "more importantly , we now show that the iterative increase and decrease in entanglement due to the oracle and reflection operator , respectively , is optimal .",
    "( solid line ) and @xmath154 ( dotted line ) against @xmath13 for @xmath141 and @xmath142.,width=321 ]",
    "if an unsorted database of @xmath0 items has a single marked item , then grover s search algorithm finds the marked item in @xmath78 oracle queries .",
    "then , we have already shown , that the state after the @xmath13th iteration ( or oracle query ) @xmath94 has entanglement given by eq .",
    "( [ eq : c5 ] ) ; therefore , it is a necessary condition to search the database . to show the converse ,",
    "assume that there is some ( arbitrary ) search algorithm which employs the initial state @xmath11  ( [ eq : suppq ] ) to search the database , and it searches in the hyper plane latexmath:[$\\{|t\\rangle ,    schmidt decomposition of the @xmath1-qubit pure state produced after each iteration with respect to an arbitrary division of @xmath1 qubits into two subsets will involve only two nonzero schmidt coefficients , excluding the normalization condition . let the state generated by the arbitrary algorithm after the @xmath13th iteration be @xmath156 , and let @xmath157 and @xmath158 be its squared schmidt coefficients .",
    "now , assume that the concurrence of @xmath159 is given by @xmath160 , where @xmath25 is the probability of finding the target state in @xmath156 , and @xmath161 .",
    "this implies @xmath162 where the second equality follows from the definition of the concurrence  ( [ eq : concurrence ] ) . integrating the above equation , and imposing the initial condition @xmath163 , implies @xmath164 ,",
    "hence the condition @xmath165 is necessary and sufficient to achieve the quadratic speedup .",
    "a natural question presents itself : if an algorithm searches out of the two dimensional hyperplane , can it do better than than the quadratic speedup ?",
    "the search executed out of the hyperplane can happen if the oracle instead of inverting the target state introduces a relative phase between the target and nontarget state ",
    "see for example , grover s fixed point algorithm  @xcite .",
    "then it is easy to show that it will imply @xmath166 , because the projection in the hyper plane will always reduce the concurrence  @xcite , therefore it will provide no temporal advantage over grover s search algorithm .",
    "moreover , one can apply an operation which is a more general operation than the reflection operation , _",
    "i.e. _ , it is not restricted to the effective two dimensions of the search algorithm .",
    "then , as shown explicitly by zalka  @xcite , nothing additional can be gained : the shortest distance between the target and nontarget state , dynamically speaking , lies in the two dimensional hyperplane @xmath121 , _ i.e. _ , along the geodesic  hence the reflection operator is optimal .",
    "this can also be argued from the entangled perspective as follows : although the entanglement of the state which rotates in a multidimensional hyperplane would involve more than one measure of entanglement  it wo nt be fixed just by the concurrence  but it is the oracle operation that guides the evolution to the desired target state , and by definition , it is optimally restricted in the two dimensional hyperplane .    to show that , as far as the pure state search is concerned ,",
    "grover s search algorithm is the only optimal search algorithm , we have to show that the quadratic speedup is also _ asymptotically _ optimal  @xcite , _ i.e. _ , for any number of oracle queries , and for arbitrary reflection operators .",
    "our proof of the _ asymptotic _ optimality is analogous to the proof in ref .",
    "suppose we want to search an unsorted database of @xmath0 items with a single marked item .",
    "we map the problem onto a @xmath0 dimensional space of @xmath1 ( @xmath167 ) qubits .",
    "consider an arbitrary initial @xmath1-qubit pure state @xmath168 , which contains a single marked state @xmath132 .",
    "@xmath168 is evolved by invoking the oracle , @xmath169 , as follows : @xmath170 where the unitary operators @xmath171 s are arbitrary , and the probability of finding the target state after @xmath172 oracle queries is given by @xmath173 .",
    "the idea of the proof is to compare the above evolution to the case when @xmath168 is evolved without invoking the oracle @xmath174 : @xmath175 in which case , let the probability of finding the marked state after @xmath172 oracle queries is given by @xmath176 . the main part of the proof works by obtaining an upper bound for the difference @xmath177 , and averaging over @xmath0 linearly independent choices of the marked states , since one can always design a special algorithm which is suited for a particular choice of the marked state",
    ". the upper bound can be obtained by considering eq .",
    "( [ eq : c5 ] ) : @xmath178 where @xmath179 is the probability of finding the marked state in the initial state @xmath168 , and the second inequality is obtained from the fact that the concurrence is bounded by @xmath180 ( see sec .",
    "[ sec : concurrence ] ) .",
    "integration of the above equation  ( [ eq : difference ] ) provides the upper bound : @xmath181 where we have used @xmath182 . now to complete the proof one obtains the lower bound by considering a worst case scenario : we want to invoke the oracle large enough times such that we should be able to distinguish sufficiently via a measurement all @xmath183 , _",
    "i.e. _ , for @xmath0 linearly independent choices of @xmath132 , which in turn implies that for some large @xmath13 , and for some fixed @xmath184 , @xmath185 ; moreover , this should be true for all @xmath0 choices of the marked states : @xmath186 then , ( [ eq : o1 ] ) and ( [ eq : o2 ] ) implies @xmath187 .    therefore , quadratic speedup is also asymptotically optimal  @xcite .",
    "thus , grover search algorithm is the only optimal algorithm for searching an unsorted database with a pure state .",
    "the question : can parallel quantum computation improve the quadratic speedup ?",
    "here we show that when grover s search algorithm is executed by @xmath95 entangled computers  or @xmath95 different sets of @xmath1 qubits  then it provides a certain linear advantage , _",
    "i.e. _ , they can produce @xmath95 copies of the target state , where each copy has @xmath12 marked states , with just @xmath78 oracle queries .",
    "the advantage can be motivated in the following way .",
    "the result of the search algorithm is an equal superposition of all the marked states , and a further measurement in the computational basis provides one of the marked states .",
    "suppose each of @xmath12 marked states encodes different information , therefore , to extract all the information , the search algorithm needs to be executed ( say ) @xmath95 times to produce @xmath95 copies of the target state , which will require @xmath188 oracle queries .",
    "we now show that the search with a multipartite entangled state can provide the linear advantage .",
    "we denote the computational basis states of the @xmath13th quantum computer as @xmath189 , @xmath190 , and the initial state of the @xmath95 quantum computers is a generalized ghz state : @xmath191 now define the target state of @xmath95 computers as @xmath192 and similarly , the nontarget state @xmath193 can be defined : @xmath194 by using equations ( [ eq : mtarget ] ) and ( [ eq : mnontarget ] ) , @xmath195 can be rewritten , just as in the standard search algorithm ( see sec .",
    "[ sec : algorithm ] ) : @xmath196 now , the standard search algorithm is executed by a single computer ( say , the first ) , and the rest of of computers do nothing , _",
    "i.e. _ , the oracle operation @xmath197 for the @xmath95 entangled computers is made of the product of @xmath95 unitary operations , where the first unitary operation is the standard oracle operation  ( [ eq : oracle ] ) , and the rest of the unitaries are the respective identity operators .",
    "similarly , the reflection operator @xmath198 for the computers can be defined .",
    "it is straight forward to show that after @xmath199 iterations the _ local _ density operators of all the computers reduces to @xmath200 notice , that the linear advantage is achieved via the entanglement in the initial state , although the joint unitary operations are local .",
    "our discussion in this paper was restricted to the search algorithm , where the initial pure state was an equal superposition of all database states ; however , it can be easily generalized to an arbitrary pure initial state . moreover , if the search is performed with a mixed initial state , then our result , eq .",
    "( [ eq : c5 ] ) , has to be optimized not only over all the ensemble decomposition of the state , but also over all reflection operators .",
    "this , we will consider in a future publication .",
    "since the entanglement in the search algorithm is of the limited bipartite form , it explains why the quadratic ( temporal ) speedup can be achieved if the algorithm is implemented in a classical system which allows superposition , as explicitly shown by lloyd  @xcite .",
    "this is further reflected by the fact that even a classical digital computer can trivially simulate the algorithm .",
    "however , as the number of bipartite entanglement measures required for a quantum computational process grows ( the multipartite - ness of entanglement increases ) , then the temporal expense incurred by the simulation of the computational process by a classical system , irrespective of whether the superposition is allowed or not , will necessarily grow ; more importantly , the simulation will have no efficient _ realistic _",
    "description  @xcite of the computational process in the limit where the multipartite entanglement needed for the computations grows with the problem size  @xcite .",
    "after all , what distinguishes quantum computation  whether there is entanglement or not  from classical computation  where superposition is allowed or not ",
    "is that an arbitrary quantum state and it s dynamics has no efficient _ realistic _ description : the reason , perhaps , that makes quantum computation inherently more powerful than classical computation  @xcite .    the main contribution of this paper is an explicit illustration of the dynamical role of entanglement in the search algorithm : the change of entanglement after each iteration governs the evolution of the initial state .",
    "although the entanglement in the algorithm is limited , it is optimally exploited by the search algorithm .",
    "it is precisely due to the limited bipartite entanglement in the algorithm , that the algorithm leads to the quadratic speedup .",
    "the bipartite entanglement itself is a consequence of the oracle : which by definition , optimally restricts the evolution of the algorithm to the two effective hilbert space dimensions .",
    "the simplicity of the algorithm does succeed in illuminating that entanglement ",
    "perhaps , entangling operations in the case of a mixed state computation  plays an essential role in saving both the spatial and temporal resources when exponential hilbert space dimensions are required for the execution of a quantum computational process .",
    "thus , entanglement is indispensable for a scalable quantum computer .    [",
    "sec : general ]",
    "here we show that all our previous analysis of the role of entanglement in grover s search algorithm , where we had assumed that there is a single marked state , can be generalized when there are @xmath12 arbitrary marked states , _",
    "i.e. _ , the target state is given @xmath201 where @xmath72 are computational basis states  ( [ eq : qubitdatabase ] ) .",
    "this implies that @xmath94 may not be separable in the arbitrary bipartite decomposition of the @xmath1 qubits .",
    "recall , the state after the @xmath13th iteration is given by @xmath202 and we want to obtain it s concurrence corresponding to the bipartite division of @xmath1 qubits into @xmath95 qubits and @xmath125 qubits .",
    "let s assume , without any loss of generality , that the @xmath12 marked states belong in the set of database states : @xmath203 where @xmath204 , @xmath205 , and @xmath206 ; and @xmath207 and @xmath208 are @xmath95-qubit and @xmath96-qubit computational basis states , respectively . to obtain the concurrence of @xmath94 ,",
    "we first define a convenient basis : @xmath209 where @xmath210 and @xmath211 are a sum of all @xmath207 s and @xmath208 s , respectively , which are contained in @xmath28 ; similarly , @xmath212 and @xmath213 are sum of all @xmath207 s and @xmath208 s , respectively , that are not in @xmath28 .    notice , we can always express @xmath132 as follows : @xmath214 where @xmath215 , and @xmath216 where the sum is over @xmath217 number of states @xmath207 which belongs in @xmath28 , and @xmath218 .",
    "the nontarget state @xmath219 , by the use of eqs .",
    "( [ eq : b1])-([eq : b4 ] ) , can be conveniently expressed as @xmath220 by substituting ( [ eq : targetg ] ) and ( [ eq : nontargetg ] ) in ( [ eq : bikiterationg ] ) , one obtains @xmath221 where we have substituted @xmath222 . by tracing out the @xmath96-qubit states from the density operator @xmath223",
    ", one can obtain @xmath102 ; which can then be substituted in the expression @xmath224}\\;,\\ ] ] to show that the square concurrence of @xmath94 is given by @xmath225 where the first term represents the entanglement generated by the search algorithm after the @xmath13the iteration , but the second term is simply a byproduct of the initial entanglement , since it is not affected by the oracle operation .",
    "therefore , when analyzing the role of entanglement in the search algorithm , it is necessary to ignore the second term in the above equation .",
    "if we do so , then the concurrence of the state @xmath94 generated by the algorithm is given by @xmath226 where @xmath227 and when there is a single target state , _",
    "i.e. _ , when @xmath130 , @xmath228 , and @xmath229 , it reduces ( so does eq .",
    "( [ eq : squarec ] ) to eq .",
    "( [ eq : c1 ] ) .",
    "thus , the dynamical evolution of the algorithm , when there are @xmath12 marked states , in terms of the concurrence can be similarly expressed as @xmath230 where @xmath231 .",
    "below , we illustrate the derivation of eq .",
    "( [ eq : squarec ] ) via a simple example , where there is a little loss of generality , and it is more instructive .",
    "suppose we schmidt decompose @xmath94 with respect to the division of @xmath1 qubits into @xmath232 qubits and the remaining @xmath1th qubit .",
    "there is no loss of generality here , because it is sufficient to quantify the entanglement of @xmath94 , otherwise it would mean that more than two parameters @xmath17 and @xmath18 ( excluding the normalization condition ) is being changed after each iteration .",
    "moreover , the schmidt decomposition of @xmath94 with respect to @xmath233-qubit @xmath1th - qubit states can be used to prove that eq .",
    "( [ eq : cm ] ) is necessary and sufficient for the quadratic speedup when there are multiple marked states , just as we did for a single marked state ( see sec .",
    "[ sec : main ] ) .",
    "now , suppose that the target state @xmath132 in the bipartite decomposition is given by @xmath234 where @xmath235 @xmath236 where @xmath237 .",
    "we further assume for the sake of simplicity that @xmath238 and @xmath239 are orthogonal , _",
    "i.e. _ , eq .  ( [ eq : e1 ] ) is the schmidt decomposition of @xmath132 .",
    "if @xmath238 and @xmath239 are not orthogonal , which will generally be the case in the computation basis , then one can start with the decomposition of @xmath132 as given in eq .",
    "( [ eq : targetg ] ) .",
    "@xmath132  ( [ eq : e1 ] ) can be conveniently reexpressed as @xmath240 where @xmath241 and @xmath242 are the schmidt coefficients . if either @xmath243 or @xmath244 is zero ( or @xmath245 ) , then the target state is separable , otherwise it is entangled .",
    "the entanglement in @xmath132 is @xmath246 obtained by using eq .",
    "( [ eq : concurrence ] ) .",
    "this implies that @xmath219 can be decomposed as @xmath247 where @xmath248 is defined to be latexmath:[\\[|n^{n-1}\\rangle={1\\over{\\sqrt{{2^{n-1}}-r}}}\\sum_{r+1}^{n/2 }    @xmath248 is orthogonal to @xmath238 and @xmath239 .",
    "the concurrence of the nontarget state is given by @xmath250 the initial state @xmath61  ( [ eq : suppq ] ) is by definition separable in all the bipartite decomposition : @xmath251 which is obtained by substituting ( [ eq : target2 ] ) and ( [ eq : nontarget2 ] ) in eq .",
    "( [ eq : bikiterationg ] ) .",
    "the state after @xmath13th iteration , by using equations ( [ eq : target2 ] ) and ( [ eq : nontarget2 ] ) , can be expressed as @xmath252 the two eigenvalues of the reduced density operator of the @xmath253 qubit , obtained by tracing out the states @xmath254 , @xmath255 and @xmath256 , can be used in eq .",
    "( [ eq : concurrence ] ) to show that the square concurrence of @xmath94 given by @xmath257 where @xmath258 and @xmath259 notice , @xmath260 and @xmath261 has the same form as in eq .  ( [ eq : squarec ] ) .",
    "@xmath260 is term which is the concurrence generated by the search algorithm , and has been discussed in sec .",
    "[ sec : concurrence ] .",
    "we restrict our attention to the properties of @xmath262 ; it is zero for the initial state ( the initial state is separable by definition ) , otherwise nonzero everywhere else ; it monotonically increases and attains its maximum value of @xmath263the initial concurrence of the target state .",
    "thus , @xmath262 is simply a byproduct of the initial entanglement of the target state .",
    "the above example give us the opportunity to illustrate the special , but interesting , case @xmath264  ( @xcite ) .",
    "it highlights in a rather more dramatic fashion the entangling and disentangling nature of the oracle and the refection operator , respectively .",
    "when @xmath265 , then it requires just one oracle query to search the database  classically , it would require two oracle queries . if @xmath265 , then eq .  (",
    "[ eq : szero ] ) implies @xmath266 and @xmath267 , thus the initial state expressed in the bipartite form in eq .",
    "( [ eq : szerobipartite ] ) reduces to @xmath268 then the action of @xmath37 on the above state generates a maximally bipartite entangled @xmath232-qubit and @xmath1th qubit state : @xmath269 _ i.e. _ , @xmath270 . again notice , it is the the oracle which creates entanglement between the target and nontarget states .",
    "now the action of @xmath39 on the above state reduces it to the target state : @xmath271 then @xmath272 ; thus , the reflection operator reduces entanglement in the search algorithm .",
    "the author thanks apoorva d patel for useful discussions on grover s search algorithm , and quantum computation in general .              p.  w.  shor , _ in proceedings of the 35th annual symposium on foundations of computer science , edited by s. goldwasser _ ( ieee computer society , los alamitos , ca , 1994 ) , pages  124164 ; p.  w.  shor , siam journal of computing , * 26 * , 1484 ( 1997 ) ."
  ],
  "abstract_text": [
    "<S> we analyze the role played by entanglement in the dynamical evolution of grover s search algorithm in the space of qubits . </S>",
    "<S> we show that the algorithm can be equivalently described as an iterative change of the entanglement between the qubits , which governs the evolution of the initial state towards the target state , and where the entanglement can be quantified in terms a single entanglement monotone . </S>",
    "<S> we also provide a necessary and sufficient condition for the quadratic speedup , which illustrates how the change in the bipartite entanglement of the state after each iteration determines the corresponding increase in the probability of finding the target state . </S>",
    "<S> this allows us to reestablish from the entanglement perspective that grover s search algorithm is the only optimal pure state search algorithm . </S>"
  ]
}
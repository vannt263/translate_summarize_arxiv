{
  "article_text": [
    "we consider the following conservation law @xmath0 where @xmath1 is the solution function , and @xmath2 the flux function .",
    "the computational domain is divided into @xmath3 non - overlapping cells or elements @xmath4 $ ] , @xmath5 . in the mcv3 scheme",
    "3 solution points @xmath6 , @xmath7 , are set over @xmath8 where the solution @xmath9 , @xmath7 , is computed .",
    "suppose that a proper approximation of the flux function @xmath10 is reconstructed , we can immediately update the solutions within @xmath8 by the following point - wise semi - discretized equations at solution points @xmath6 , @xmath11_{ik } , \\quad k=1,2,3 .",
    "\\label{upu}\\ ] ]    the central task left now is how to reconstruct the flux function @xmath10 . in principle , the way to reconstruct @xmath10 makes difference among the numerical schemes@xcite .    for brevity , we make use of a local coordinate system @xmath12 $ ] that transforms the real mesh cell @xmath13 $ ] by @xmath14 where @xmath15 is the mesh spacing .",
    "the time evolution equations for updating the solutions are correspondingly @xmath16    we assume that the flux @xmath2 is a function of solution @xmath1 .",
    "the values of the flux at the corresponding points , @xmath17 , @xmath7 , are computed directly .",
    "the primary reconstruction of flux function is then built by @xmath18 where @xmath19 is the basis function of the lagrange interpolation .",
    "interpolation is constructed piecewisely over each cell element without connection to its neighboring cells , thus can not be directly used to update the solutions .",
    "a modification is required .    in the mcv3 scheme ,",
    "the modified flux function is constructed by imposing the continuities of the flux function and its first order derivative at the cell boundaries , which is realized by the following constraint conditions ,    @xmath20}_{\\xi i}(-1)=f^{[1 ] { \\mathcal b}}_{\\xi i}(-1 ) ; \\\\ & \\tilde{f}^{[1]}_{\\xi i}(1)=f^{[1 ] { \\mathcal b}}_{\\xi i}(1 ) ,   \\end{split }   \\right . \\label{mcv3_1}\\ ] ]    where @xmath21 and @xmath22}_{\\xi i}(-1)=f^{[1 ] { \\mathcal b}}_{\\xi i}(-1)=\\left ( \\frac{d \\xi}{dx } \\right ) _ i^{-1 } f^ { [ 1 ]   { \\mathcal b}}_{xi-{1\\over2 } } ,   \\\\   & \\tilde { f}^{[1]}_{\\xi i}(1)=f^{[1 ] { \\mathcal b}}_{\\xi i}(1)=\\left ( \\frac{d \\xi}{dx } \\right ) _ i^{-1 } f^ { [ 1 ]   { \\mathcal b}}_{xi+{1\\over2}}.     \\end{split } \\label{b - c - f1-local}\\ ] ] the numerical flux at the cell boundary @xmath23 , @xmath24 , and its first order derivative , @xmath25   { \\mathcal b}}_{xi-{1\\over2}}$ ] are solved by following riemann problems(drp ) , @xmath26   { \\mathcal b}}_{xi-{1\\over2}}={\\rm driemann } \\left ( f^{[1]l}_{xi-{1\\over2 } } , f^{[1]r}_{xi-{1\\over2 } } \\right ) , \\end{split}\\ ] ] where  @xmath27 \" and  @xmath28 \" denote the solvers for the conventional and derivative riemann problems respectively .",
    "is a hermite interpolation to determine the modified flux function which is written in a polynomial form as , @xmath29    the first order derivative ( gradient ) of reads then , @xmath30    the derivatives of the modified flux function at the solution points are obtained as @xmath31 the solutions are then immediately computed by with a proper time integration algorithm .    in the original mcv3 scheme@xcite ,",
    "the solution points are equally spaced and including two cell ends , i.e. @xmath32 , @xmath33 and @xmath34 .",
    "the left / right - most solution points coincide with the cell boundaries . in this case , the continuity conditions of flux function at the cell boundaries are automatically satisfied , and only the derivatives of the flux function need to be computed from the drp .",
    "the derivatives of the modified flux function at the solution points are obtained as @xmath35 it is straightforward to show the following conservation property , @xmath36    the solution points can be chosen as other quadrature point sets , such as the legendre or chebyshev gauss points , but we find from fourier analysis and numerical tests that the different solution point sets do nt alter significantly the numerical result .",
    "we present here two variants by making use of different constraints in determining the modified flux function . instead of the constraint conditions of , we impose the multi - moment constraints at the cell center , @xmath37}_{\\xi i}(0)=f^{[1 ] } _ { \\xi i}(0 ) ; \\\\ & \\tilde{f}^{[2]}_{\\xi i}(0)=f^{[2 ] } _ { \\xi i}(0 ) .",
    "\\end{split }   \\right . \\label{mcv3_2}\\ ] ] we retain the continuity of the modified flux function at cell boundaries , which is required from the numerical conservation and stability .",
    "the rest of the constraints are determined from the primary interpolation function in terms of derivatives .",
    "same as in the original mcv3 scheme@xcite , the solution points are equally spaced and including two cell ends , @xmath32 , @xmath33 and @xmath34 .",
    "constraint conditions allows to reconstruct a polynomial of 4th degree , @xmath38 the first - order derivative then reads ,    @xmath39    the derivatives of the modified flux function at the solution points are obtained as @xmath40    it is straightforward to show the following conservation property , @xmath36      we use the chebyshev - gauss points , i.e. @xmath41 , @xmath33 and @xmath42 , as the solution points .",
    "constraint conditions leads to the following polynomial of 4th degree , @xmath43 the first - order derivative then reads ,    @xmath44    the derivatives of the modified flux function at the solution points are obtained as @xmath45    from , the numerical conservation can be immediately proved by the following equality , @xmath46",
    "in this section , we evaluated the numerical schemes previously discussed by examining the fourier mode transported with the following advection equation . @xmath47",
    "using a wave solution @xmath48 and assuming a uniform grid spacing @xmath49 , we have @xmath50 and @xmath51 , which recast the time evolution equations for the solutions into @xmath52            the properties of the numerical schemes can be examined by analyzing the eigenvalues of .",
    "fig.[spec-3 ] shows the spectrum ( collection of all eigen values ) of @xmath53 for different schemes .",
    "it is observed that all eigenvalues lie on the left half of the real axis , i.e the negative real parts indicate that all the schemes are stable under the cfl conditions .",
    "the allowable cfl numbers for computational stability can be estimated by the largest eigenvalue , the spectral radius @xmath54 for each scheme , i.e. a scheme has a larger spectral radius has to use a smaller cfl number for computational stability .",
    "we know from fourier analysis that @xmath55 , @xmath56 and @xmath57 , which reveals that mcv3_cpcc scheme has the largest stable cfl number .",
    "this is confirmed by numerical tests for the linear advection equation . with a 3rd - order runge kutta scheme ,",
    "the largest allowable cfl numbers are 0.47 , 0.44 and 0.41 for mcv3_upcc , mcv3_cpcc and mcv3 respectively .",
    "the numerical errors of different schemes can be examined by comparing the principal eigenvalue of @xmath53 , @xmath58 , with the exact solution , @xmath59 , of the advection equation for initial condition , @xmath60 the error of a given semi - discrete formulation is @xmath61 and the convergence rate is evaluated by @xmath62    [ error-3ps ]    .numerical errors and convergence rates . [ cols=\"<,^,^,^,^\",options=\"header \" , ]     consistent with the observations aforementioned , we find from table 2 that mcv3_upcc and mcv3_cpcc have less truncation errors in both dissipation ( real part ) and dispersion ( imaginary part ) compared to the original mcv3 .",
    "mcv3 and mcv3_upcc have a third order accuracy in dissipation and all schemes have a fourth order accuracy in dispersion . the mcv3_cpcc is superior in dissipation accuracy which is fifth order , two orders higher than the others .",
    "the computational modes are represented by @xmath63 and @xmath64 .",
    "it is observed that all the schemes have real negative parts with the leading terms of order @xmath65 in @xmath63 and @xmath64 , which means that the computational modes will be exponentially dampened out .",
    "* the proposed variants have improved numerical features in both numerical accuracy and computational efficiency compared to the original mcv3 scheme . * in the new schemes , only the continuity of flux function is required at the cell boundaries where the constraint on the derivative of flux is not required anymore .",
    "this makes the schemes directly applicable to any quadrilateral and xahedral mesh . * schemes with more solution points and higher order accuracy",
    "can be devised by the same spirit ."
  ],
  "abstract_text": [
    "<S> two variants of the mcv3 scheme are presented based on a flux reconstruction formulation . </S>",
    "<S> different from the original multi - moment constrained finite volume method of third order ( mcv3 ) , the multi - moment constraints are imposed at the cell center on the point value , the first and second order derivatives . </S>",
    "<S> the continuity of the flux function at cell interfaces are also used as the constraints to ensure the numerical conservation . </S>",
    "<S> compared to the original mcv3 scheme , both two variants have higher numerical accuracy and less restrictive cfl condition for computational stability . </S>",
    "<S> moreover , without the need to solve derivative riemann problem at cell boundaries , the new schemes benefit the implementations in arbitrary quadrilateral in 2d and hexahedron in 3d .    </S>",
    "<S> high order scheme , flux reconstruction , multi - constraint , nodal formulation , conservation </S>"
  ]
}
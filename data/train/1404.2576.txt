{
  "article_text": [
    "protect copyrighted content against unauthorized redistribution , distributors commonly embed watermarks or fingerprints in the content , uniquely linking copies to individual users .",
    "if the distributor finds an illegal copy of the content online , he can then extract the watermark from this copy and compare it to the database of watermarks , to determine which user was responsible .    to combat this solution",
    ", a group of @xmath1 pirates may try to form a coalition and perform a collusion attack . by comparing their unique versions of the content",
    ", they will detect differences in their copies which must be part of the watermark .",
    "they can then try to create a mixed pirate copy , where the resulting watermark matches the watermark of different pirates in different segments of the content , making it hard for the distributor to find the responsible users .",
    "the goal of the distributor of the content is to assign the watermarks to the users in such a way that , even if many pirates collude , the pirate copy can still be traced back to the responsible users .      a different area of research that has received considerable attention in the last few decades is group testing , introduced by dorfman  @xcite in the 1940s .",
    "suppose a large population contains a small number @xmath1 of infected ( or defective ) items .",
    "to identify these items , it is possible to perform group tests : testing a subset of the population will lead to a positive test result if this subset contains at least one defective item , and a negative result otherwise . since the time to run a single test may be very long ,",
    "the subsets to test need to be chosen in advance , after which all group tests are performed simultaneously .",
    "then , when the test results come back , the subset of defective items needs to be identified .",
    "the goal of the game is to identify these defectives using as few group tests as possible , and with a probability of error as small as possible .",
    "the above problems of fingerprinting and group testing can be jointly modeled by the following two - person game between ( in terms of fingerprinting ) the distributor @xmath2 and the adversary @xmath3 ( the set of colluders , or the set of defectives ) . throughout the paper",
    "we will mostly use terminology from fingerprinting ( i.e. users instead of items , colluders instead of defective items ) , unless we are specifically dealing with group testing results .",
    "first , there is a universe @xmath4 of @xmath5 users , and the adversary is assigned a random subset of users @xmath6 of size @xmath7 .",
    "this subset @xmath3 is unknown to the distributor ( but we assume that the distributor does know the size @xmath1 of @xmath3 ) , and the aim of the game for the distributor is ultimately to discover @xmath3 .",
    "the two - person game consists of three phases : ( 1 ) the distributor uses an _ encoder _ to generate a fingerprinting code , used for assigning versions to users ; ( 2 ) the colluders employ a _ collusion channel _ to generate the pirate output from their given code words ; and ( 3 ) the distributor uses a _ decoder _ to map the pirate output to a set @xmath8 .",
    "first , the distributor generates a fingerprinting code @xmath9 of @xmath5 binary code words of length @xmath10 . , but in this paper we restrict our attention to the binary case @xmath11 .",
    "] the parameter @xmath10 is referred to as the code length , and the distributor would like @xmath10 to be as small as possible . for the eventual embedded watermark , we assume that for each segment of the content there are two differently watermarked versions , so the watermark of user @xmath12 is determined by the @xmath10 entries in the @xmath12th code word of @xmath9 .    a common restriction on the encoding process is to assume that @xmath9 is created by first generating a bias vector @xmath13 ( by choosing each entry @xmath14 , for @xmath15 , independently from a certain distribution @xmath16 ) , and then generating code words @xmath17 according to @xmath18 .",
    "this guarantees that watermarks of different users @xmath12 are independent , and that watermarks in different positions @xmath19 are independent .",
    "fingerprinting schemes that satisfy this assumption are sometimes called bias - based schemes , and the encoders in this paper ( both for group testing and fingerprinting ) are also assumed to belong to this category .      after generating @xmath9 ,",
    "the code words are used to select and embed watermarks in the content , and the content is sent out to all users .",
    "the colluders then get together , compare their copies , and use a certain collusion channel or pirate attack @xmath20 to determine the pirate output @xmath21 .",
    "if the pirate attack behaves symmetrically both in the colluders and in the positions @xmath19 , then the collusion channel can be modeled by a vector @xmath22^{c+1}$ ] , consisting of entries @xmath23 ( for @xmath24 ) indicating the probability of outputting a @xmath25 when the pirates received @xmath26 ones and @xmath27 zeroes .",
    "a further restriction on @xmath28 in fingerprinting is the marking assumption introduced by boneh and shaw  @xcite , which says that @xmath29 and @xmath30 , i.e. , if the pirates receive only zeros or ones they have to output this symbol .      finally , after the pirate output has been generated and distributed , we assume the distributor intercepts it and applies a decoding algorithm to @xmath31 , @xmath9 and @xmath32 to compute a set @xmath8 of accused users .",
    "the distributor wins the game if @xmath33 and loses if this is not the case .",
    "while the above model is described in fingerprinting terminology , it also covers many common group testing models .",
    "the users then correspond to items , the colluders translate to defectives , the code @xmath9 corresponds to the group testing matrix @xmath34 ( where @xmath35 if item @xmath12 is included in the @xmath19th test ) , and the pirate output corresponds to positive / negative test results .",
    "the collusion channel is exactly what separates group testing from fingerprinting : while in fingerprinting it is commonly assumed that this channel is not known or only weakly known to the distributor , in group testing this channel is usually assumed known in advance .",
    "this means that there is no malicious adversary in group testing , but only a randomization procedure that determines @xmath31 .",
    "note also that in ( noisy ) group testing , the boneh - shaw marking assumption may not always hold .",
    "work on the fingerprinting game described above started in the late 90s , and lower bounds on the code length were established of the order @xmath36",
    "@xcite , until in 2003 tardos  @xcite proved a lower bound of the order @xmath37 and described a scheme with @xmath38 , showing this bound is tight .",
    "the lower bound however did not explicitly mention leading constants , so later work on fingerprinting focused on finding this constant .",
    "amiri and tardos  @xcite and huang and moulin  @xcite independently worked on this problem and found that the exact asymptotic lower bound on @xmath10 is @xmath39 for large @xmath5 and @xmath1 .",
    "huang and moulin further derived the pirate strategy and encoder achieving this lower bound , which were later used  @xcite to construct efficient schemes matching these bounds .",
    "most of this work on lower bounds considers the setting with worst - case pirate attacks , and little is known about lower bounds for specific , suboptimal pirate attacks considered in e.g.  @xcite .",
    "it is well known that for suboptimal pirate attacks the required code length may be significantly smaller than the @xmath39 for arbitrary attacks , but no tight bounds are known .",
    "research on the group testing problem started much longer ago , and already in 1985 exact asymptotics on the code length for probabilistic schemes were derived as @xmath40  @xcite , whereas deterministic schemes require a code length of @xmath37  @xcite .",
    "later work focused on slight variations of the classical model such as noisy group testing , where a positive result may not always correspond to the presence of a defective item due to ` noise ' in the test output  @xcite , and threshold group testing , where the test result may only be positive if sufficiently many defective items are included in the tested subset  @xcite . for noisy and threshold group testing ,",
    "exact asymptotics on the capacities are yet unknown , and so it is not known whether existing constructions are optimal .      in this paper",
    "we extend the work of huang and moulin  @xcite to various fingerprinting and group testing models where @xmath28 is known in advance .",
    "we derive the simple capacities ( section  [ sec : cap - simple ] ) and the joint capacities ( section  [ sec : cap - joint ] ) for these pirate attacks / group testing models , and prove that these results are the exact optima .",
    "an overview of these results can be found in table  [ tab : tab1 ] .",
    "finally , we discuss the results ( section  [ sec : discussion ] ) and mention some directions for future work ( section  [ sec : openproblems ] ) .    [ cols=\"^,<,>,<,>,<,^,>,<,>,<,^\",options=\"header \" , ]",
    "in simple decoding , _  the receiver makes an innocent / guilty decision on each user independently of the other users , and there lies the simplicity but also the suboptimality of this decoder . \" _",
    "* section 4.3 ) in other words , a simple decoder bases its decision whether or not to accuse user @xmath12 only on the @xmath12th code word of @xmath9 , and not on other code words in @xmath9 . this means that the decoding step will generally be fast but less accurate than when all information available to the decoder ( the entire code @xmath9 ) is taken into account .",
    "huang and moulin  @xcite previously studied simple capacities in the context of fingerprinting , and showed that given a set of allowed collusion channels @xmath41 ( depending only on @xmath28 ) and a set of allowed encoders @xmath42 , any fingerprinting rate below @xmath43 is achievable and @xmath42 need to be satisfied for this to hold , but we refer the reader to @xcite for details . ] , where @xmath44 is the mutual information between a colluder s symbol @xmath45 and the pirate output @xmath46 in one segment @xmath19 . in this work",
    "we will always let @xmath42 be the set of all probability distribution functions on @xmath47 , and we will commonly omit the argument @xmath42 from @xmath48 . for fixed collusion channels @xmath49 , fixing @xmath50 is optimal  ( * ? ? ?",
    "* section  iv.b ) , in which case the expression from   reduces to @xmath51 with slight abuse of notation we will abbreviate the left hand side as @xmath52 .",
    "we will also consider some cases where ( part of ) the collusion channel is unknown , in which case the capacity includes a minimization over @xmath28 as well : @xmath53 to study the mutual information payoff function @xmath54 we will use the following identity  ( * ? ? ?",
    "* equation  ( 61 ) ) : @xmath55 where @xmath56 are defined as @xmath57 here , @xmath58 denotes the relative entropy or kullback - leibler divergence , defined by @xmath59 .",
    "given @xmath60 and @xmath28 , the above formulas allow us to compute the mutual information @xmath54 explicitly .",
    "for obtaining the simple capacities for various models , we will extensively work with the kullback - leibler divergence .",
    "in general analyzing this function is not so pretty , but we can simplify some computations with the following taylor expansion around @xmath61 : @xmath62 intuitively , this says that the divergence is bigger if @xmath63 and @xmath64 are further apart , but for @xmath63 and @xmath64 both close to @xmath65 or @xmath25 the divergence may blow up as well due to the @xmath64 and @xmath66 in the denominator .",
    "in that case we have to be careful and see whether @xmath67 approaches @xmath65 faster than @xmath64 or @xmath66 .",
    "a special case of   for @xmath68 and @xmath69 is @xmath70 finally , if @xmath71 and @xmath72 , we can rewrite @xmath73 as @xmath74 and regardless of @xmath63 and @xmath64 , we always have @xmath75",
    ".      we will study the simple capacities for five commonly considered fingerprinting attacks , and for completeness also mention the result of huang and moulin regarding the simple capacity for unknown attacks .",
    "the interleaving attack in fingerprinting ( considered in e.g.  @xcite ) is characterized by the coalition choosing one of its members at random , and outputting his symbol . given @xmath26 members with a @xmath25 and @xmath27 members with a @xmath65 , the probability of outputting a @xmath25 is then equal to @xmath76 , regardless of @xmath26 and @xmath1 : @xmath77 this attack is known to be one of the strongest pirate attacks , and the capacity is proportional to @xmath78 .",
    "the exact asymptotics of the simple capacity for the interleaving attack were previously derived by huang and moulin .",
    "* theorem 6 ) the simple capacity for the interleaving attack is : @xmath79 and the maximizing value of @xmath60 is @xmath80 .",
    "another commonly considered attack is the all-@xmath25 attack , where pirates output a @xmath25 whenever they can  @xcite . due to the marking assumption",
    "they are forced to output a @xmath65 when they did not receive any ones , but otherwise a coalition using the all-@xmath25 attack will always output a @xmath25 : @xmath81 we will show below that this attack is significantly weaker than the interleaving attack .",
    "[ thm : cap - simple - all ] the simple capacity and the corresponding maximizing value of @xmath60 for the all-@xmath25 attack are : @xmath82    first , consider @xmath83 , @xmath84 and @xmath85 . using @xmath86 if @xmath87 and @xmath88 otherwise , we get @xmath89 working out @xmath84 and @xmath85 in a similar way , we get @xmath90 and @xmath91 .",
    "for ease of notation , let us write @xmath92 and @xmath93 , so that we get @xmath94 now , consider the second term . for large @xmath1",
    ", we argue that this term is small , i.e. of the order @xmath95 , regardless of @xmath60 : @xmath96 \\\\   & \\stackrel{(b)}{= } + \\frac{ps}{\\ln 2 } - \\frac{ps}{\\ln 2 } \\left[1 - \\frac{ps}{(1 - p)(1 - s ) } + o\\left(\\frac{1}{c^2}\\right)\\right ] \\\\   & \\stackrel{(c)}{= } + \\frac{ps}{\\ln 2 } - \\frac{ps}{\\ln 2 } + o\\left(\\frac{1}{c^2}\\right ) = o\\left(\\frac{1}{c^2}\\right).\\end{aligned}\\ ] ] here @xmath97 follows from @xmath98 and @xmath99 for all @xmath60 , @xmath100 follows from @xmath101 , and @xmath102 follows from @xmath103 and @xmath101 for arbitrary @xmath60 .",
    "so we are now left with : @xmath104 for @xmath60 to be a global maximum we need either that @xmath105 or @xmath60 should be one of the end - points @xmath65 or @xmath25 . for @xmath106",
    "we get @xmath107 , so we need to find a value @xmath108 with @xmath105 .",
    "writing out the remaining term and differentiating , this condition is equivalent to @xmath109 since the left hand side is @xmath110 regardless of @xmath60 , the right hand side must be too , so @xmath111 is excluded . to exclude the case",
    "@xmath112 we rewrite   to get @xmath113 now if @xmath112 then the right hand side becomes @xmath114 , which implies in the left hand side that @xmath115 , which implies that @xmath116 , contradicting our assumption that @xmath112 .",
    "so for large @xmath1 a maximum can only occur at @xmath117 .",
    "suppose that @xmath118 for @xmath119 , with @xmath120 not depending on @xmath1 .",
    "then @xmath121 , so the condition on @xmath60 and @xmath122 is then asymptotically equivalent to : @xmath123 this has a unique solution at @xmath124 , leading to the given values of @xmath125 and @xmath126 .    in terms of code lengths",
    ", this means that any simple decoding algorithm for the all-@xmath25 attack requires an asymptotic number of fingerprint positions of at least @xmath127 for large @xmath5 .",
    "this seems to contradict earlier results of  @xcite , which suggested that under a certain gaussian assumption , only @xmath128 tests are required .",
    "this apparent contradiction is caused by the fact that the gaussian assumption in that paper is not correct in the regime of small @xmath60 , for which those results were derived .",
    "rigorous analysis of the scores in  @xcite shows that with that scheme , an asymptotic code length of about @xmath129 is sufficient when @xmath130 , which is well above the lower bound obtained above .",
    "the majority voting attack  @xcite is characterized by the pirates choosing the symbol they have seen the most often . to avoid ambiguity",
    ", we will assume @xmath1 is odd , in which case the attack is given by @xmath131 for this attack we obtain the following result .",
    "[ thm : cap - simple - maj ] for the majority voting attack , the simple capacity is @xmath132 and the maximizing value of @xmath60 is @xmath133 .    as mentioned before , to avoid ambiguity",
    "we focus on the case where @xmath134 is odd , and due to symmetry w.l.o.g .",
    "we may assume that @xmath135 .",
    "first , we have : @xmath136 and @xmath84 and @xmath85 satisfy @xmath137 and @xmath138 , where @xmath139 .",
    "now if @xmath140 , then @xmath85 and @xmath84 quickly approach @xmath65 leading to @xmath141 . for the remaining case @xmath142 , expanding @xmath83 using sanov s theorem  ( * ? ? ?",
    "* theorem 11.4.1 ) we get @xmath143 \\\\   & \\sim p^{c ' + \\frac{1}{2 } } ( 1 - p)^{c ' + \\frac{1}{2 } } 2^{2c ' + 1}.\\end{aligned}\\ ] ] using stirling s formula for the central binomial coefficient in @xmath144 , we obtain @xmath145 as a consequence , @xmath146 , and using   we get @xmath147 combining these expressions , we get @xmath148 to see that this has a maximum at @xmath149 , writing out the inverse of the above expression ( ignoring constants ) we see that , in terms of @xmath60 , @xmath150 \\\\ & = c_1 + \\sum_{z_1",
    "< z_2 } c_2 \\left[2 \\cosh((z_2 - z_1 ) \\ln x)\\right],\\end{aligned}\\ ] ] where @xmath151 for @xmath152 and @xmath153 if @xmath149 , and @xmath154 are expressions that do not depend on @xmath60 .",
    "the function between square brackets is positive and increasing in @xmath155 for @xmath156 , so it has a global minimum at @xmath153 , corresponding to @xmath149 .",
    "so the maximum for @xmath157 is attained at @xmath149 , in which case @xmath144 satisfies @xmath158 to get exact asymptotics for @xmath159 , we return to the expression for @xmath157 of  . since from   it follows that @xmath160 , and both terms are identical , we obtain : @xmath161 \\big\\| \\",
    "\\frac{1}{2}\\right).\\end{aligned}\\ ] ] using   the result then follows .",
    "this result matches the bounds obtained in  @xcite , which showed that with an almost trivial decoding algorithm one can asymptotically achieve a code length of @xmath162 for large @xmath5 and @xmath1 .",
    "the construction of  @xcite is thus capacity - achieving .",
    "as the name suggests , when pirates use the minority voting attack  @xcite , they output the symbol they have received the least often . due to the marking assumption they are not able to output symbols they have not received , so in the binary setting the attack is defined as follows .",
    "again , we will assume that @xmath1 is odd .",
    "@xmath163 as shown below , this attack has the same simple capacity as the all-@xmath25 attack .",
    "[ thm : cap - simple - min ] the simple capacity and the corresponding optimal value of @xmath60 for the minority voting attack are : @xmath164    in this case the function @xmath157 is symmetric around @xmath149 , so w.l.o.g .",
    "we may assume @xmath135 .",
    "for small values of @xmath60 , minority voting is equivalent to the all-@xmath25 attack up to negligible order terms , while for @xmath165 the attack is very similar to majority voting by @xmath166 .",
    "this means that for small @xmath60 the mutual information payoff will be equivalent to that of the all-@xmath25 attack , while for @xmath165 we get the same values as for majority voting .",
    "since the simple capacity for the all-@xmath25 attack is higher than for majority voting , the distributor should choose @xmath60 close to @xmath125 , leading to the result .      instead of choosing a pirate at random and outputting his symbol ( the interleaving attack ) , the pirates may also decide to choose a symbol at random from their set of received symbols , without paying attention to how often they received each symbol  @xcite .",
    "in other words , when a coalition receives both symbols , they let a fair coin - flip decide which symbol to output .",
    "this means that the collusion channel satisfies : @xmath167 this pirate attack is weaker than the interleaving attack , but stronger than the other pirate attacks considered above .    [",
    "thm : cap - simple - coi ] for the coin - flip attack , the simple capacity and the corresponding maximizing value of @xmath60 are : @xmath168    since @xmath157 is symmetric around @xmath149 , let us assume w.l.o.g .  that @xmath135 . for @xmath83 , @xmath84 and @xmath85",
    "we obtain : @xmath169 so for the mutual information , we obtain @xmath170 for @xmath135 , the terms @xmath171 and @xmath172 are negligible , so up to small order terms , we get @xmath173 similar to the proof of the all-@xmath25 attack , the second term is @xmath95 , while using   we can rewrite the first term to a recognizable form : @xmath174 + o\\left(\\frac{1}{c^2}\\right).\\end{aligned}\\ ] ] the term between square brackets is exactly the dominating term for the simple capacity of the all-@xmath25 attack for @xmath175 . in other words : @xmath176 using proposition  [ thm : cap - simple - all ] , the result follows .    for this attack , the result in  @xcite was also too optimistic due to the incorrect gaussian assumption",
    "any simple decoder must have a code length of at least @xmath177 , while the result in  @xcite suggests that a code length of @xmath178 suffices under a certain gaussian assumption .",
    "again , the gaussian assumption is to blame , and since the optimal value of @xmath60 is even smaller here than for the all-@xmath25 attack , the error of  @xcite is even bigger here .",
    "finally , the most often studied setting in fingerprinting is the scenario where the pirate attack is not known to the distributor . due to the marking assumption",
    "the distributor does know that @xmath29 and @xmath30 , but otherwise no assumptions are made on the pirate strategy .",
    "the set of allowed attacks can then be described as @xmath179^{c + 1 } \\mid \\theta_0 = 0 , \\theta_c = 1\\}.\\end{aligned}\\ ] ] huang and moulin solved the related max - min game for large @xmath1 , and found the asymptotic optimal encoder and collusion channel leading to the saddle point solution .",
    "* theorem 6 , corollary 7 ) the simple capacity for the uninformed fingerprinting game is @xmath180 and the optimizing encoder @xmath16 and collusion channel @xmath28 achieving this bound for large @xmath1 are the arcsine distribution , defined by @xmath181 and the interleaving attack @xmath182 .      for group testing , we will study five different models : the classical ( noiseless ) model , the models with additive noise and dilution noise , and threshold group testing with and without gaps",
    ". other models where the test result @xmath46 depends only on the tally @xmath183 may be analyzed in a similar fashion .      in the classical model ,",
    "the outcome of a group test is positive iff at least one defective was present in the tested pool . this model is equivalent to the all-@xmath25 attack in fingerprinting , as was previously noted in e.g.  @xcite .",
    "this immediately leads to the following result .",
    "[ thm : cap - simple - cla ] for the classical group testing model , the simple informed capacity and the corresponding optimal value of @xmath60 are : @xmath184    in terms of group testing algorithms , this means that any simple decoding algorithm for @xmath1 defectives and @xmath5 total items requires an asymptotic number of group tests @xmath10 of at least @xmath185 where the asymptotics are for @xmath186 .",
    "this improves upon the known lower bound for joint decoders of @xmath187 for large @xmath5  @xcite , and this shows that the algorithm of chan et al .",
    "@xcite ( which achieves a code length of @xmath188 ) is suboptimal .",
    "the related paper  @xcite shows how this bound can actually be achieved with efficient simple decoders .      the classical group testing model is sometimes considered to be too optimistic , as the outcome of the group tests may not always be accurate .",
    "one ` noisy ' variant of the classical model that is sometimes considered in the literature is the additive noise model  @xcite , where a test result may even be positive ( with some small probability @xmath189 ) if there were no defectives in the tested group .",
    "this corresponds to the following channel @xmath190 : @xmath191 for small @xmath189 we do not expect the simple capacity or the optimal choice of @xmath60 to change drastically compared to the classical model , and the following analysis confirms this .",
    "[ thm : cap - simple - add ] for the additive noise model with parameter @xmath189 , the simple capacity and the maximizing value of @xmath60 are : @xmath192    working out @xmath83 , @xmath84 and @xmath85 , and substituting them into @xmath193 , we obtain @xmath194 for similar reasons as for the all-@xmath25 attack , for small values of @xmath189 the second term is @xmath95 while the first term is @xmath195 and dominates the expression for large @xmath1 .",
    "this means that for small @xmath189 we have @xmath196 to find the maximum we take the derivative with respect to @xmath60 and set it equal to @xmath65 to obtain @xmath197 for small @xmath189 , the above expression is very close to the one we had for the all-@xmath25 attack , and again the optimal value of @xmath60 is close to @xmath198 .",
    "writing @xmath199 , so that @xmath200 and @xmath201 , the above expression reduces to @xmath202 for small @xmath189 , this means that @xmath203 , so suppose @xmath204 .",
    "filling this in in the above equation , tayloring around @xmath205 , and disregarding terms of the order @xmath206 , we get @xmath207 rearranging the terms , this leads to @xmath208 substituting @xmath209 into @xmath122 and solving for @xmath60 , we get @xmath210 and for the capacity we get @xmath211 \\left[- \\ln 2 + \\frac{r}{c } \\cdot \\frac{1}{2 - 2 \\ln 2}\\right ] \\\\   & = \\frac{\\ln 2}{c}\\left(1 - \\frac{r}{\\ln 2 } + o(r^2)\\right ) + o\\left(\\frac{1}{c^2}\\right).\\end{aligned}\\ ] ]    for small values of @xmath189 , one should therefore take @xmath60 to be slightly smaller than @xmath212 , and the capacity will be slightly lower than in the classical model .      another commonly considered noisy group testing model is the dilution noise model  @xcite , where the probability of a positive test outcome depends on the number of defectives in the tested pool .",
    "more precisely , @xmath213 is defined as follows : @xmath214 again , for small @xmath189 this model is close to the traditional group testing model , so both the capacity and the optimal value of @xmath60 are close to the values of proposition  [ thm : cap - simple - all ] .",
    "[ thm : cap - simple - dil ] for the dilution noise model with parameter @xmath189 , neglecting terms of the order @xmath215 and @xmath216 , the simple capacity and the corresponding optimal value of @xmath60 are : @xmath217    for @xmath83 , @xmath84 and @xmath85 we get @xmath218 so letting @xmath219 , the mutual information satisfies @xmath220 for small @xmath189 , the second term is again small . so expanding the left term , knowing that @xmath221 , we obtain : @xmath222 writing @xmath223 , we can taylor @xmath122 and @xmath224 ( disregarding terms of the order @xmath225 ) to obtain @xmath226 this means that up to small order terms , we get @xmath227 . plugging these into the expression for @xmath157 , we eventually get @xmath228 this immediately leads to the given expression for the capacity by disregarding small terms , while differentiating with respect to @xmath209 and setting equal to @xmath65 leads to @xmath229 this leads to the given expression for @xmath60 .      besides accounting for possible mistakes in the test results ( noisy group testing ) , models have also been considered to account for sensitivity in detecting positive items . in threshold group testing",
    "@xcite , it is assumed that if the number of defectives @xmath26 in the tested pool is at most @xmath230 then the test comes back negative , and if @xmath26 is at least @xmath144 then the test result is always positive . for the case @xmath231 , which we will refer to as threshold group testing without a gap ( where @xmath232 is the gap size )",
    ", this completely determines the model : @xmath233 although simple to state , even for small @xmath144 and @xmath1 finding the simple capacity and optimal choice of @xmath60 analytically seems very hard , if not impossible .",
    "we can intuitively see how the capacity will roughly behave though , since we know that :    * the case @xmath234 corresponds to @xmath235 , for which @xmath236 and @xmath237 are optimal . *",
    "the case @xmath238 corresponds to @xmath239 , for which @xmath149 and @xmath240 are optimal .    for values of @xmath144 between @xmath25 and @xmath241",
    ", we expect the capacity to decrease as @xmath144 increases , and the optimal value @xmath60 is expected to be close to @xmath242 .    numerical evidence supports this intuition , as it shows that the capacity strictly decreases from @xmath234 up to @xmath238 , and that the optimal values of @xmath60 are almost evenly spaced for @xmath234 up to @xmath243 .",
    "the capacity quickly drops at small values of @xmath144 , i.e. , the gap between @xmath244 and @xmath245 is bigger than the gap between @xmath245 and @xmath246 for @xmath247 .",
    "an even harder case to deal with is threshold group testing with @xmath248 , which we will refer to as threshold group testing with a gap . if @xmath249 , then the model is not yet defined properly , as we do not know what @xmath250 is for @xmath251 .",
    "different models were considered to capture the behavior of the outcome of the test results in these gaps , such as :  @xcite    * the test outcome is uniformly random : @xmath252 * the probability of a positive result increases linearly : @xmath253 * we simply do not know what the test outcome will be .",
    "note that @xmath254 and @xmath255 , so these models can be seen as generalizations of the corresponding attacks in fingerprinting . also note that @xmath256 .    regardless of the gap model , for arbitrary @xmath230 and @xmath144",
    "these models all seem hard to analyze exactly . using results obtained previously ,",
    "we can however try to ` interpolate ' the results to get somewhat decent estimates .",
    "for instance , for the first model we can interpolate between the results for threshold group testing without a gap ( section  [ sec : cap - simple - th1 ] ) and the coin - flip attack ( section  [ sec : cap - simple - coi ] ) to get upper and lower bounds on the simple capacity .",
    "for the second case , we can interpolate between threshold group testing without a gap ( section  [ sec : cap - simple - th1 ] ) and the interleaving attack ( section  [ sec : cap - simple - int ] ) to get an idea how the capacity and the optimal value of @xmath60 scale .    to verify this intuition , figure  [ fig :",
    "cap - simple - thres ] shows a density plot of the capacities ( multiplied by @xmath1 ) for both the coin - flip gap model and the interleaving gap model .",
    "these plots are based on numerics for @xmath247 , but already show some trends .",
    "for instance , there are sharp peaks in the lower left and upper right corner ; even when moving on the diagonal , the capacity quickly drops when leaving the corners .",
    "the capacities further take their maxima on and near the diagonal . in the coin - flip gap model",
    ", the capacity quickly converges to its minimum at @xmath257 as the gap size increases , while this takes longer for the interleaving gap model .",
    "finally , from sections  [ sec : cap - simple - int ] , [ sec : cap - simple - all ] , [ sec : cap - simple - maj ] , and [ sec : cap - simple - coi ] , we know exactly how the corners and center of each plot behave asymptotically , so we have a decent idea how the capacity scales for large @xmath1 and arbitrary values of @xmath230 and @xmath144 .",
    "where a simple decoder bases its decision to accuse user @xmath12 only on the @xmath12th code word of @xmath9 ( and not on other code words ) , a joint decoder is allowed to use all information available to make a more informed decision .",
    "in particular , the whole code @xmath9 may be taken into account .",
    "huang and moulin  @xcite previously studied joint capacities as well , and showed that given a set of allowed collusion channels @xmath41 ( depending only on @xmath28 ) and a set of allowed encoders @xmath42 , any fingerprinting rate below @xmath258 is achievable , where @xmath259 is the mutual information between all colluder symbols @xmath260 and the pirate output @xmath46 in one segment @xmath19 .",
    "note that from the assumption that @xmath46 only depends on @xmath260 through @xmath28 , it follows that @xmath261 , where @xmath262 . to study the payoff function @xmath263",
    ", we will use the following identity  ( * ? ? ? * equation  ( 59 ) ) : @xmath264 \\\\",
    "\\text{with } a_h & = \\sum_{z = 0}^c \\binom{c}{z } p^z ( 1 - p)^{c - z } h(\\theta_z).\\end{aligned}\\ ] ] here @xmath265 denotes the binary entropy function , defined by @xmath266 .",
    "given @xmath60 and @xmath28 , this allows us to compute @xmath54 explicitly . in the analysis of specific models",
    "@xmath28 , we will again commonly omit @xmath28 as an argument of @xmath267 and write @xmath157 .    for obtaining the joint capacities for various models",
    ", we will extensively work with the binary entropy function .",
    "again , this function can be quite ugly for arbitrary arguments @xmath63 , but in some cases we can somewhat simplify the expressions .",
    "for instance , for arguments close to @xmath65 or @xmath268 we have @xmath269 the most important properties to keep in mind are that @xmath270 and @xmath271 takes its maximum at @xmath71 with @xmath272 . using only these latter properties , we immediately get the following lemma regarding deterministic attacks , i.e. , attacks satisfying @xmath273 .    [",
    "lem : cap - joint - det ] for any deterministic attack @xmath28 satisfying the marking assumption @xmath29 and @xmath30 , the joint capacity equals @xmath274 , and @xmath60 is a maximizing value if it satisfies @xmath275    since @xmath276 for all @xmath26 , we have @xmath277 for each @xmath26 , so @xmath278 and it thus follows that @xmath279 = \\frac{1}{c } \\max_p h(a).\\end{aligned}\\ ] ] since @xmath280 is continuous in @xmath60 , and @xmath281 and @xmath282 due to the marking assumption , from the intermediate value theorem it follows that there must be a value @xmath108 for which @xmath283 .",
    "so we get @xmath284 = \\frac{1}{c } h\\left(\\frac{1}{2}\\right ) = \\frac{1}{c } \\ , , \\end{aligned}\\ ] ] and @xmath60 is a maximizing value iff @xmath283 .",
    "this lemma makes finding the joint capacities and the optimal values of @xmath60 very easy for several of the following models .",
    "we previously saw that the simple capacity for the interleaving attack is proportional to @xmath78 .",
    "the exact asymptotics for the joint capacity were previously derived by huang and moulin as well , showing that for large @xmath1 the joint capacity is the same as the simple capacity .",
    "* corollary 6 ) [ prop : cap - joint - int ] the joint capacity for the interleaving attack @xmath182 is : @xmath285    asymptotically , the interleaving attack is an  equalizing strategy \"  @xcite , guaranteeing that up to order terms @xmath157 is the same for all @xmath108 .",
    "since the all-@xmath25 attack is a deterministic attack and satisfies the marking assumption , the capacity follows immediately from lemma  [ lem : cap - joint - det ] , and finding the optimal value of @xmath60 is straightforward .    for the all-@xmath25 attack , the joint capacity and the maximizing value of @xmath60",
    "are : @xmath286    to be precise , the optimal value for @xmath60 is @xmath287 .",
    "lemma  [ lem : cap - joint - det ] also applies to the majority voting attack @xmath288 , and since this attack is symbol - symmetric the optimal value for @xmath60 is trivially @xmath149 .    for the majority voting attack , the joint capacity and the corresponding optimal value of @xmath60",
    "are : @xmath289    note that the joint capacity for majority voting is equal to the joint capacity of the all-@xmath25 attack , while their simple capacities differ . also note that again , the optimal value for @xmath60 is asymptotically the same as for the simple capacity .",
    "since minority voting is also a deterministic and symbol - symmetric attack , the following result directly follows from lemma  [ lem : cap - joint - det ] .",
    "the joint capacity and a corresponding optimal value of @xmath60 for the minority voting attack are : @xmath290    in fact , there are three values of @xmath60 that are asymptotically optimal , the other two being @xmath291 and @xmath292 .      besides the interleaving attack ,",
    "the only other non - trivial fingerprinting attack with respect to joint capacities is the coin - flip attack .",
    "this attack is not deterministic , so @xmath293 . working out the details , we obtain the following result .    [ prop : cap - joint - coi ] for the coin - flip attack , the joint capacity and the maximizing value of @xmath60 are : @xmath294    for @xmath295 , note that @xmath296 and @xmath297 otherwise , so @xmath298 . for @xmath83 ,",
    "recall from the proof of proposition  [ thm : cap - simple - coi ] that @xmath299 . combining the above",
    ", we get @xmath300.\\end{aligned}\\ ] ] since the attack is symbol - symmetric , w.l.o.g .",
    "we may assume that @xmath135 , in which case the terms @xmath171 are negligible for large @xmath1 .",
    "writing @xmath301 , we get @xmath302 + o\\left(\\frac{1}{c^2}\\right).\\end{aligned}\\ ] ] this function has a maximum at @xmath303 , which leads to the given values of @xmath304 and @xmath305 .",
    "finally , the case where the attack is not known ( but is assumed to satisfy the marking assumption ) was previously solved by huang and moulin , showing that again the interleaving attack is asymptotically optimal .",
    "* corollary 7 ) the joint uninformed capacity is given by @xmath306 and the optimizing encoder @xmath16 and collusion channel @xmath28 achieving this bound for large @xmath1 are the arcsine distribution @xmath307 and the interleaving attack @xmath182 .",
    "so while the joint capacities are asymptotically the same as the simple capacities for the interleaving attack and for the uninformed setting , for several other attacks the joint capacities are strictly higher than the simple capacities .",
    "since the classical model is equivalent to the all-@xmath25 attack in group testing , the following result is immediate .    for the classical group testing model , the joint capacity and the optimal value of @xmath60",
    "are : @xmath286    this result was previously derived by seb  ( * ? ? ?",
    "* theorem  2 ) , who also showed that @xmath308 is optimal .",
    "the additive noise model described in section  [ sec : cap - simple - add ] was previously studied in the context of capacities in e.g.  @xcite .",
    "cheraghchi et al .",
    "@xcite showed that @xmath309 , while atia and saligrama  @xcite showed that @xmath310 .",
    "looking closely at their proof , they show that one obtains a capacity of @xmath311 using @xmath312 for large @xmath1 . in the numerator of the code length @xmath313 . ]    below we improve upon these results , by ( i ) providing the exact leading constant on the capacity ; ( ii ) showing exactly how the first order term ( in @xmath189 ) scales for small @xmath189 ; and ( iii ) showing how @xmath60 scales in terms of @xmath189 .",
    "for the additive noise model , the joint capacity and the corresponding optimal value of @xmath60 are : @xmath314    first , from the definition of @xmath190 it follows that @xmath315 , @xmath316 and @xmath277 for @xmath317 .",
    "so the mutual information satisfies @xmath318.\\end{aligned}\\ ] ] writing @xmath199 this can be simplified to @xmath319.\\end{aligned}\\ ] ] we want to maximize @xmath267 , so we take the derivative with respect to @xmath122 , and set it equal to @xmath65 to obtain a condition for @xmath122 , and hence for @xmath60 : @xmath320 for small @xmath189 , the right hand side goes to @xmath65 , which implies that @xmath122 is close to @xmath268 .",
    "so assuming @xmath189 is small , we let @xmath204 and obtain the following taylor expansion for the left hand side : @xmath321 this means that for small @xmath189 , the optimal choice for @xmath209 is @xmath322 so for @xmath122 we obtain @xmath323 substituting @xmath122 into @xmath324 , and solving @xmath122 for @xmath60 , we obtain the given values for @xmath325 and @xmath326 .",
    "note that this means that any valid group testing algorithm asymptotically requires at least the following number of tests : @xmath327 since @xmath328 for small @xmath189 , this shows that the result of  @xcite is slightly off ; due to their suboptimal choice of @xmath60 , they obtained a code length which scales",
    " better \" in @xmath189 , but has a higher leading constant and thus converges to the wrong limit .",
    "the dilution noise model , as described in section  [ sec : cap - simple - dil ] , was previously studied in the context of lower bounds by atia and saligrama  @xcite . in terms of capacities",
    ", they showed that for large @xmath1 , one has @xmath329 .",
    "again , they were not interested in leading constants , so they fixed @xmath60 to the suboptimal choice @xmath312 .",
    "we improve upon their result by finding the leading constant explicitly , and proving how @xmath330 and @xmath331 scale in terms of @xmath189 .",
    "for the dilution noise model with parameter @xmath189 , the joint capacity and the corresponding maximizing value of @xmath60 are : @xmath332    for this attack , we have @xmath333 .",
    "let us first look at @xmath334 : @xmath335 next , consider @xmath295 : @xmath336 for small @xmath189 , the only significant contribution to the sum comes from the term with @xmath337 : @xmath338 the optimal value of @xmath60 again lies close to @xmath198 ; in particular , the value is mostly determined by the term @xmath339 , which has a maximum at @xmath340 .",
    "writing @xmath341 , we have @xmath342 this means that @xmath343 satisfies ( neglecting terms of the order @xmath344 ) @xmath345 taking the derivative with respect to @xmath209 and setting it equal to @xmath65 , we obtain @xmath346 substituting this value for @xmath209 in the expressions for @xmath60 and @xmath267 , we get the results .    for the resulting lower bound on the code length @xmath10 , one",
    "thus obtains @xmath347 so also in the dilution noise model , the first order term in the denominator scales as @xmath348 rather than @xmath189 , as one might suspect from the results of  @xcite .      for threshold group testing with @xmath231 (",
    "as described in section  [ sec : cap - simple - th1 ] ) we now consider two different cases for @xmath144 : @xmath349 and @xmath350 . in both cases ,",
    "the capacity follows directly from lemma  [ lem : cap - joint - det ] , but we can obtain slightly more accurate asymptotics for @xmath60 in the second case . the first case is sometimes referred to in the literature as majority group testing  @xcite .",
    "[ lem : cap - joint - thres - without ] for the threshold group testing model with @xmath351 , the joint capacity is @xmath352 , and the corresponding maximizing value of @xmath60 is : @xmath353 & = \\frac{1}{c } \\left(u + \\gamma\\right ) \\qquad ( |\\gamma| \\leq 1 ) \\\\ u = o(c ) : \\quad { p_{\\text{thr}}{^j}}[{{\\bm}{\\theta}_{\\text{thr}}}^{(u ) } ] & = \\frac{1}{c } \\left(u - \\frac{1}{3 } + o\\left(\\frac{1}{u}\\right)\\right ) . \\ ] ]    from lemma  [ lem : cap - joint - det ] it follows that the capacity is @xmath352 and that the optimal value of @xmath60 satisfies @xmath160 .",
    "writing out @xmath83 , we have @xmath354 the fact that @xmath160 roughly means that @xmath144 is the median of the binomial distribution with @xmath1 trials and probability of success @xmath60 .",
    "since the median of a binomial distribution is one of the two integers closest to @xmath355 , it follows that @xmath356 leading to the result for the case @xmath349 .",
    "for the case @xmath350 , note that @xmath140 , so @xmath357 for @xmath358 .",
    "so we can expand @xmath83 around @xmath359 as : @xmath360 since the solution is in the range @xmath221 , let us write @xmath361 for some constant @xmath63 .",
    "a taylor expansion around @xmath359 of the binomial coefficients then gives us @xmath362 the condition that @xmath160 means that asymptotically , @xmath363 is the median of the poisson distribution with parameter @xmath364 . using results about the median of the poisson distribution  @xcite , we obtain @xmath365 substituting this back into @xmath60 , we get the result",
    ".    note that for @xmath234 and @xmath119 , the above approximation says @xmath366 , when in reality the optimum is at @xmath367 , showing that already for small values of @xmath144 the term @xmath368 is quite accurate .      for threshold group testing with gaps ,",
    "let us again consider the two models described in section  [ sec : cap - simple - th2 ] : the coin - flip gap model and the interleaving gap model . for both models , we can again interpolate between results obtained earlier in this section to obtain estimates for @xmath369 and @xmath370 for various @xmath230 and @xmath144 , and verify our intuition numerically ( see figure  [ fig : cap - joint - thres ] ) . in both plots , from proposition",
    "[ lem : cap - joint - thres - without ] it follows that the diagonals have value @xmath371 , while the upper left corner in figure  [ fig : cap - joint - thres - coin ] converges to @xmath372 ( proposition  [ prop : cap - joint - coi ] ) and the upper left corner of figure  [ fig : cap - joint - thres - int ] converges to @xmath65 ( proposition  [ prop : cap - joint - int ] ) . in the left graph , even for small gaps",
    "we see that the capacity quickly decreases and approaches the coin - flip capacity . in the right graph",
    ", we see that the capacity decreases more gradually as the gap size increases .",
    "building upon previous work of huang and moulin and working our way through the resulting expressions for the capacities , we have derived explicit asymptotics for both the simple and joint capacities for various fingerprinting and group testing models . in the end",
    "the results from fingerprinting turned out to be useful in threshold group testing as well , for understanding the numerics of figures  [ fig : cap - simple - thres ] and [ fig : cap - joint - thres ] and estimating the capacities for various threshold group testing models .",
    "one important result with respect to group testing is that the simple capacity in the traditional model is asymptotically a factor @xmath373 lower than the joint capacity .",
    "while the joint capacity was well known , to the best of our knowledge the simple capacity had not yet been derived before .",
    "this result shows that efficient ( simple ) group testing algorithms will never be able to achieve the code lengths of optimal joint decoders , and that various existing methods ( e.g.  @xcite ) are suboptimal , even for simple decoding .",
    "the related paper  @xcite explicitly shows how the bounds on the code lengths of simple decoders can be attained with log - likelihood decoders .    comparing the simple and joint capacities ,",
    "another result worth mentioning is that except for in the cases previously analyzed by huang and moulin , there is always a gap between the simple and joint capacities . in fingerprinting",
    ", this means that if the pirates use a suboptimal attack , joint decoders are asymptotically significantly better than simple decoders . in terms of group testing",
    ", this means that in almost all models , simple decoders are strictly worse than joint decoders . so",
    "although joint decoders are generally slower , the benefits of joint decoding ( a much shorter code length ) may outweigh the costs of a higher decoding complexity .",
    "let us finish by mentioning some open problems which are left for future work .",
    "while this paper considered only static fingerprinting and non - adaptive group testing , in some settings the feedback @xmath46 may be obtained in real - time .",
    "for instance , in pay - tv pirates may try to duplicate a fingerprinted broadcast , while in group testing it may sometimes be possible to do group tests sequentially .",
    "these dynamic or adaptive games have received considerable attention as well @xcite but little is known about the capacities of these games .",
    "are the dynamic / adaptive capacities strictly higher than the static / non - adaptive capacities in the probabilistic model considered in this paper ?",
    "recall that simple decoders base their decisions only on individual code words , while joint decoders base their decisions on the entire code @xmath9 . the extra information used by joint decoders",
    "generally causes the joint capacity to be higher than the simple capacity , but the complexity of decoding may be higher as well .",
    "a possible way to obtain a trade - off between the code length and the time complexity would be _ tuple decoding _ : basing the decision to accuse a user @xmath12 only on tuples of size at most @xmath374 .",
    "this could be seen as a generalization of simple and joint decoding , since those models correspond to @xmath375 and @xmath376 respectively .",
    "such decoders were previously considered in e.g.  @xcite , and an obvious question is : can we somehow quantize this trade - off between the time complexity and the code length ? and can we formally derive capacities for this tuple decoding model ?      a common generalization in fingerprinting is to assume that symbols come from an alphabet of size @xmath377 , rather than assuming that the code @xmath9 is a binary code ( @xmath11 ) .",
    "this generalization was considered in e.g.  @xcite . in the uninformed fingerprinting game ,",
    "the capacity decreases linearly with @xmath378  @xcite , so there may be significant benefits going from a binary to a @xmath378-ary alphabet . for the models considered in this paper , for which the capacity is only linear in @xmath1 , it is easy to see that the capacity can not increase linearly with @xmath378 .",
    "some basic numerics seem to indicate that the capacity increases with a factor @xmath379 , but a more detailed analysis is required .      finally , instead of assuming that the pirate attack is known in advance , in fingerprinting it is more often assumed that the encoding is done for arbitrary attacks , and that only the decoding step may be tuned to fit the pirate attack  @xcite .",
    "since the asymptotically optimal universal encoding strategy is to use the arcsine distribution @xmath307 for generating biases @xmath60 , one could try deriving the capacities for the various fingerprinting attacks in case the distribution @xmath16 is fixed in advance as @xmath380 .",
    "previous results  @xcite showed that the capacities probably scale as @xmath381 , and numerics of the associated capacities ( figure  [ fig : cap - part ] ) seem to verify this .",
    "obtaining exact expressions for the simple and joint capacities under ` universal encoding ' is left for future work .",
    "the author is grateful to benne de weger for his help with some of the proofs in this paper , and for his comments on drafts of this manuscript that helped improve the paper .",
    "the author would further like to thank jeroen doumen , teddy furon , jan - jaap oosterwijk , and boris kori for their valuable comments and suggestions .",
    "chan , p.  h.  che , s.  jaggi , and v.  saligrama ,  non - adaptive probabilistic group testing with noisy measurements : near - optimal bounds with efficient algorithms , \" _",
    "49th allerton conference on communication , control , and computing _ , pp .  18321839 , 2011 .",
    "chan , s.  jaggi , v.  saligrama , and s.  agnihotri ,  non - adaptive group testing : explicit bounds and novel algorithms , \" _ ieee international symposium on information theory ( isit ) _ , pp .  18371841 , 2012 .",
    "m.  cheraghchi , a.  hormati , a.  karbasi , and m.  vetterli ,  compressed sensing with probabilistic measurements : a group testing solution , \" _",
    "47th allerton conference on communication , control , and computing ( allerton ) _ , pp .  3035 , 2009 .",
    "m.  cheraghchi , a.  hormati , a.  karbasi , and m.  vetterli ,  group testing with probabilistic tests : theory , design and application , \" _ ieee transactions on information theory _ , vol .",
    "57 , no .",
    "10 , pp .  70577067 , 2011 .",
    "y .- w .  huang and p.",
    "moulin ,  maximin optimality of the arcsine fingerprinting distribution and the interleaving attack for large coalitions , \" _ ieee workshop on information forensics and security ( wifs ) _ , pp .  16 , 2010 .",
    "y .- w .  huang and p.  moulin ,  on the saddle - point solution and the large - coalition asymptotics of fingerprinting games , \" _ ieee transactions on information forensics and security _ , vol .  7 , no .  1 ,",
    "pp .  160175 , 2012 .",
    "t.  laarhoven ,  capacities and capacity - achieving decoders for various fingerprinting games , \" _ acm workshop on information hiding and multimedia security ( ih&mmsec ) _ , 2014 .",
    "this is a preliminary version of the present paper .",
    "d.  sejdinovic and o.  johnson ,  note on noisy group testing : asymptotic bounds and belief propagation reconstruction , \" _",
    "48th allerton conference on communication , control , and computing ( allerton ) _ , pp .  9981003 , 2010 .",
    "d.  r.  stinson , t.  van  trung , and r.  wei ,  secure frameproof codes , key distribution patterns , group testing algorithms and related structures , \" _ journal of statistical planning and inference _ , vol .",
    "86 , no .  2 , pp .",
    "595617 , 2000 ."
  ],
  "abstract_text": [
    "<S> in this work we consider the large - coalition asymptotics of various fingerprinting and group testing games , and derive explicit expressions for the capacities for each of these models . </S>",
    "<S> we do this both for simple decoders ( fast but suboptimal ) and for joint decoders ( slow but optimal ) .    for fingerprinting , we show that if the pirate strategy is known , the capacity often decreases linearly with the number of colluders , instead of quadratically as in the uninformed fingerprinting game . for many attacks the joint capacity </S>",
    "<S> is further shown to be strictly higher than the simple capacity .    for group testing , we improve upon known results about the joint capacities , and derive new explicit asymptotics for the simple capacities . </S>",
    "<S> these show that existing simple group testing algorithms are suboptimal , and that simple decoders can not asymptotically be as efficient as joint decoders . for the traditional group testing model , </S>",
    "<S> we show that the gap between the simple and joint capacities is a factor @xmath0 for large numbers of defectives .    </S>",
    "<S> fingerprinting , traitor tracing , group testing , channel capacities , search problems , compressive sensing . </S>"
  ]
}
{
  "article_text": [
    "software architecture is considered _ ` the set of structures needed to reason about the system , which comprise software elements , relations among them , and properties of both ' _ @xcite .",
    "however , open source software documentation does not always facilitate system understanding .",
    "consequently , developers have to inspect the system s source code in order to reuse it .",
    "since source code is available , design metrics can be used for architecture recovery of open source systems @xcite .",
    "while most architecture recovery techniques mainly focus on clustering and pattern - based techniques , our approach is based on static source code analysis @xcite .",
    "we use the directed acyclic graph(dag ) of the system , produced from static analysis , and derive d - layers ( dag layers ) .",
    "d - layers are subsets of classes , where subsets at higher d - layer depend only on the subset of classes in lower d - layer and not vice versa . although architectural layers can not reveal classes role in the system ( user interface , domain class , etc . )",
    ", they can provide a starting point for the actual layer recovery . since there is significant statistical variations in d - layer metrics , we use design metrics to predict d - layers and form _ tentative _ architectural layers .",
    "d - layer prediction is accomplished using machine learning techniques , and more specifically classification rules generation relating metric values to architecture layers .",
    "software systems following layered architecture are usually consisted of four layers : _ user interface _ ( 4 ) , _ controllers _ ( 3 ) , _ business logic _ ( 2 ) and _ infrastructure _ ( 1 ) .",
    "our initial hypothesis is that classes in different layers have different functional behavior and dependencies with classes in other layers .",
    "user interface classes are focused in information presentation and interaction with system users , while they obtain information from classes in controller layer .",
    "business logic layer is consisted of domain - specific classes that use infrastructure layer classes for data storage or other general - purpose services .",
    "our methodology steps are :    1 .",
    "form the dag of the system using static analysis to derive d - layers .",
    "arbitrarily combine consecutive d - layers to form four groups of _ tentative _ architectural layers 3 .",
    "calculate the chidamber and kemerer metrics for each class of the system .",
    "4 .   calculate the correlation of the indicative metrics of architectural layers to the _ current architectural partition _ 5 .   extract classification rules that utilize design metrics to predict layers .",
    "chidamber and kemerer @xcite metrics measure class - level properties and are calculated by chidamber and kemerer java metrics ( ckjm ) software package @xcite .",
    "our methodology includes weighted methods per class ( wmc ) , depth of inheritance tree ( dit ) , number of children ( noc ) , coupling between object ( cbo ) , response for a class ( rfc ) , lack of cohesion in methods ( lcom ) , afferent coupling ( ca ) and number of public methods ( npm ) .",
    "the validation of our methodology for each architecture layer is based on the following measures : _ precision _ : the number of correctly classified instances , divided by the total number of instances classified in this layer .",
    "_ recall _ : the number of correctly classified instances , divided by the total number of instances of this layer .",
    "next , we provide a description of the data used for the validation of the proposed method . we apply our method to four large open source systems written in java , jabref , jbpm , rapidminer and sweethome3d .",
    "jabref @xcite is an open source bibliography reference manager which consists of 3265 classes , jbpm @xcite is a flexible business project management suite consisted of 627 classes , rapidminer @xcite is a data analysis and data mining system consisted of 4389 classes and sweethome3d @xcite is a free interior design application consisted of 1284 classes .    initially , we extract classes d - layers using classycle @xcite and the corresponding design metric values using ckjm .",
    "some descriptive statistics are shown for jabref , jbpm , rapidminer and sweethome3d in tables [ table_metrics_jabref]- [ table_metrics_sweethome3d ] .",
    ".descriptive statistics for jabref [ cols=\"^,^,^,^,^,^,^,^,^,^,^\",options=\"header \" , ]",
    "this work aims to verify that object - oriented metrics can reveal architectural layer information .",
    "our methodology is tested on four large open source software systems to recover their architectural layers .",
    "the results confirmed that several design metrics can assist in systems architectural recovery .",
    "more precisely , dit , cbo , rfc , lcom and ca appear to be correlated to the architecture layer in our datasets .",
    "however , our methodology requires further improvement to capture classes behavior in all architectural layers .",
    "concluding , this work verified our assumption that design metrics can assist architecture layer recovery .",
    "our following research includes further improvements , such as weight attribution to metric contribution and more metrics that could assist architecture recovery .",
    "this work is partially funded by the european commission in the context of the open - sme `` open - source software reuse services for smes '' project , under the grant agreement no .",
    "fp7-sme-2008 - 2/243768 .",
    "4 clements , p. , bachmann , f. , bass , l. , garlan , d. , ivers , j. , little , r. , merson , p. , nord , r. , stafford , j. : documenting software architectures : views and beyond .",
    ", addison - wessley ( 2010 )    buschmann , f. , meunier , r. , rohnert , h. , sommerlad , p. , stal , m. : pattern - oriented software architecture , volume 1 , a system of patterns .",
    "wiley ( 1996 )    constantinou , e. , kakarontzas , g. , stamelos , i. : towards open source software system architecture recovery using design metrics . in : 15th panhellenic conference on informatics , to appear ( 2011 )    chidamber , s. r. , kemerer , c. f. : a metrics suite for object - oriented design . in :",
    "ieee transactions on software engineering , vol .",
    "476 - 493 .",
    "( 1999 )    tarjan , r. : depth - first search and linear graph algorithms . in : siam journal on computing ,",
    "vol . 1 , no . 2 , pp .",
    "146 - 160 .",
    "( 1972 )    classycle analyzer , http://classycle.sourceforge.net    jabref , http://jabref.sourceforge.net/    jbpm , http://www.jboss.org/jbpm    rapidminer , http://rapid-i.com/    sweethome3d , http://www.sweethome3d.com    hall , m. , frank , e. , holmes , g. , pfahringer , b. , reutemann , p. , witten , i.h . : the weka data mining software : an update . in : sigkdd explorations ,",
    "( 2009 )    spinellis , d. : tool writing : a forgotten art ? . in : ieee",
    "software , vol .",
    "_ jabref classification rules _ _ 1 .",
    "_ if ( cbobin = 4 ) and ( npmbin = 5 ) and ( wmcbin = 5 ) and ( cabin = 1 ) then layerbin=3 _ 2 .",
    "_ if ( cbobin = 4 ) and ( wmcbin = 5 ) and ( cabin = 2 ) then layerbin=3 _ 3 .",
    "_ if ( cabin = 1 ) and ( wmcbin = 4 ) and ( cbobin = 3 ) and ( rfcbin = 4 ) then layerbin=2 _ 4 . _ if ( wmcbin = 4 ) and ( cabin = 1 ) and ( cbobin = 3 ) and ( npmbin = 5 ) and ( lcombin = 2 ) then layerbin=2 _ 5 . _",
    "if ( wmcbin = 4 ) and ( cbobin = 3 ) and ( cabin = 1 ) and ( npmbin = 4 ) then layerbin=2 _ 6 . _ if ( wmcbin = 4 ) and ( cbobin = 3 ) and ( npmbin = 1 ) and ( rfcbin = 5 ) and ( cabin = 2 ) then layerbin=2 _ 7 .",
    "_ if ( wmcbin = 3 ) and ( lcombin = 1 ) and ( npmbin = 2 ) then layerbin=4 _ 8 .",
    "_ if ( cbobin = 4 ) and ( ditbin = 2 ) then layerbin=4 _ 9 . _ if ( wmcbin = 3 ) and ( lcombin = 1 ) and ( cbobin = 3 ) and ( npmbin = 3 ) then layerbin=4 _ 10 . _ if ( cbobin = 4 ) and ( nocbin = 1 ) and ( lcombin = 1 ) and ( npmbin = 3 ) then layerbin=4 _ 11 .",
    "_ if ( npmbin = 4 ) and ( cbobin = 3 ) and ( lcombin = 2 ) and ( nocbin = 1 ) and ( cabin = 2 ) then layerbin=4 _ 12 .",
    "_ if ( rfcbin = 6 ) and ( npmbin = 4 ) and ( lcombin = 1 ) then layerbin=4 _ 13 . _ if ( cbobin = 4 ) and ( nocbin = 1 ) and ( rfcbin = 6 ) and ( wmcbin = 4 ) and ( cabin = 3 ) and ( npmbin = 4 ) then layerbin=4 _ 14 .",
    "_ if ( wmcbin = 3 ) and ( cabin = 2 ) and ( cbobin = 2 ) and ( lcombin = 2 ) then layerbin=4 _ 15 .",
    "_ if ( cbobin = 4 ) and ( nocbin = 1 ) and ( rfcbin = 6 ) and ( wmcbin = 4 ) and ( npmbin = 5 ) and ( cabin = 1 ) then layerbin=4 _ 16 . _ else layerbin=1 _ jbpm classification rules _ _ 1 .",
    "_ if ( ditbin = 2 ) and ( cbobin = 3)then layerbin=2 _ 2 .",
    "_ if ( cbobin = 3 ) and ( rfcbin = 2 ) then layerbin=2 _ 3 .",
    "_ if ( ditbin = 2 ) and ( cbobin = 2 ) then layerbin=2 _ 4 .",
    "_ else layerbin=1 _ rapidminer classification rules _ _ 1 . _ if ( cbobin = 5 ) and ( cabin = 2 ) and ( ditbin = 2 ) and ( rfcbin = 4 ) and ( lcombin = 1 ) then layerbin=4 _ 2 .",
    "_ if ( cbobin = 1 ) and ( rfcbin = 3 ) then layerbin=1 _ 3 .",
    "_ if ( cbobin = 2 ) and ( cabin = 3 ) and ( rfcbin = 3 ) and ( ditbin = 1 ) then layerbin=1 _ 4 .",
    "_ if ( cbobin = 2 ) and ( lcombin = 2 ) and ( cabin = 1 ) and ( ditbin = 1 ) then layerbin=1 _ 5 . _ if ( ditbin = 1 ) and ( cbobin = 1 ) and ( cabin = 1 ) then layerbin=1 _ 6 .",
    "_ if ( ditbin = 1 ) and ( cbobin = 1 ) and ( cabin = 3 ) then layerbin=1 _ 7 .",
    "_ if ( cbobin = 2 ) and ( cabin = 4 ) then layerbin=1 _ 8 .",
    "_ if ( cabin = 1 ) and ( lcombin = 2 ) then layerbin=3 _ 9 .",
    "_ if ( lcombin = 3 ) and ( cabin = 1 ) then layerbin=3 _ 10 .",
    "_ if ( ditbin = 2 ) and ( lcombin = 1 ) and ( cbobin = 5 ) then layerbin=3 _ 11 .",
    "_ if ( ditbin = 2 ) and ( cabin = 2 ) and ( cbobin = 3 ) and ( lcombin=1 ) then layerbin=3 _ 12 .",
    "_ if ( cabin = 2 ) and ( rfcbin = 4 ) and ( cbobin = 5 ) then layerbin=3 _ 13 .",
    "_ else layerbin=2 _ sweethome3d classification rules _ _ 1 . _ if ( cbobin = 1 ) and ( cabin = 2 ) and ( rfcbin = 1 ) then layerbin=1 _ 2 .",
    "_ if ( cabin = 2 ) and ( cbobin = 1 ) and ( npmbin = 2 ) and ( wmcbin = 2 ) then layerbin=1 _ 3 .",
    "_ else layerbin=3"
  ],
  "abstract_text": [
    "<S> modern software development methodologies include reuse of open source code . </S>",
    "<S> reuse can be facilitated by architectural knowledge of the software , not necessarily provided in the documentation of open source software . </S>",
    "<S> the effort required to comprehend the system s source code and discover its architecture can be considered a major drawback in reuse . in a recent study we examined the correlations between design metrics and classes architecture layer . in this paper </S>",
    "<S> , we apply our methodology in more open source projects to verify the applicability of our method .    </S>",
    "<S> understanding ; program comprehension ; object - oriented ; reuse ; architecture layer ; design metrics ; </S>"
  ]
}
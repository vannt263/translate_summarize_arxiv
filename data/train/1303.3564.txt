{
  "article_text": [
    "significant attention has been devoted in recent years to the study of large - scale sensor and robotic networks due to their promise in fields such as environmental monitoring  @xcite , inventory warehousing  @xcite , and reconnaissance  @xcite .",
    "one of the key objectives in such networks is to ensure _ coverage _ of a given area , where every point in the space is within the sensing radius of one or more of the agents ( i.e. , sensors or robots ) .",
    "various algorithms have been proposed to achieve coverage based on differing assumptions on the mobility and sensing capabilities of the agents @xcite .    in certain scenarios ,",
    "the environment may impose restrictions on the feasible locations and motion of the agents @xcite .",
    "in such cases , it is natural to model the environment as a _ graph _",
    ", where each node represents a feasible location for an agent , and edges between nodes indicate available paths for the agents to follow .",
    "the coverage capabilities of any given agent are then related to the shortest - path distance metric on the graph : an agent located on a node can cover all nodes within a certain distance of that node . the goal of selecting certain nodes in a graph so that all other nodes are within a specified distance of the selected nodes is classical in graph theory , and is known as the _ dominating set problem _ @xcite .",
    "versions of this problem appear in settings such as multi - agent security and pursuit @xcite , routing in communication networks @xcite , and sensor placement in power networks @xcite .    finding the _ domination number _",
    "( i.e. , the size of a smallest dominating set ) of arbitrary graphs is np - hard @xcite .",
    "in fact , raz and safra showed that achieving an approximation ratio better than @xmath3 for the dominating set problem in general graphs is np - hard , where @xmath4 is some constant and @xmath5 is the number of vertices of the graph  @xcite .",
    "however , there are several algorithms known for the dominating set problem for which the ratio between the size of the resulting dominating set and graph domination number can closely reach the @xmath3 bound .",
    "the simplest of these algorithms is a _",
    "greedy algorithm _ that at each step adds one vertex to the dominating set .",
    "the vertices that are already in the dominating set are marked as ` black ' , the vertices that share edges with black vertices are marked as ` gray ' and other vertices are ` white ' . at each step , a white vertex that shares the maximum number of edges with other white vertices are added to the dominating set and the colour labels of all vertices are updated according to the aforementioned rules .",
    "another widely used approximation algorithm for the problem uses a _",
    "linear programming relaxation_. both greedy and linear programming approaches for the dominating set problem are known to have @xmath6-approximation ratios  @xcite , which are in @xmath7 .",
    "even though in general graphs one can not obtain an approximation ratio in @xmath8 , in special types of graphs better approximation ratios are obtainable .",
    "one of the most important classes of graphs are _",
    "planar graphs_. a _ planar graph _ is a graph that can be drawn in a plane so that none of its edges intersect except at their ends  @xcite .",
    "the dominating set problem is still np - hard for planar graphs ; however , the domination number of this type of graphs can be approximated within a factor of @xmath9 for an arbitrarily small @xmath10  @xcite .",
    "grid graphs are a special class of graphs that have attracted attention due to their ability to model and discretize rectangular environments  @xcite .",
    "grids can be used in simplifying the underlying environment and limiting energy consumption by representing a certain area of the environment with only one node in the grid  @xcite . moreover ,",
    "grid graphs , due to their special structure that do not leave any area of environment unrepresented while transferring the problem environment into a tractable domain , can successfully provide efficient area coverage and hence are used very commonly in the network coverage and delectability literature  @xcite .",
    "all these application motivated us in studying the dominating set problem when the underlying graph is a grid .",
    "as discussed above , it is np - hard to find the domination number of general or even planar graphs .",
    "it can be easily observed that grid graphs lie in the class of planar graphs and hence their domination number can be obtained within a small ratio .",
    "however , due to the special structure of grids , their domination number can in fact be determined optimally , although the path to obtaining the exact domination number of grids was not straightforward . for @xmath11 grid graphs , the size of the optimal dominating set was unknown until recently , although an upper bound of @xmath12 was shown in @xcite for @xmath13 using a constructive method .",
    "various attempts have been made in recent years to find a tight lower bound on the size of the optimal dominating set . in @xcite ,",
    "the authors used brute - force computational techniques to find optimal dominating sets in grids of size up to @xmath14 .",
    "the paper @xcite showed finally that the lower bound on the domination number is equal to the upper bound for  @xmath15 , thus characterizing the domination number in grids .    in this paper",
    ", we make two contributions to the study of dominating sets on grids , and their application to multi - agent coverage .",
    "first , we provide a distributed algorithm that locates a set of agents on the vertices of an @xmath1 grid such that they construct a dominating set for the grid and the required number of agents is within a constant error from the optimal .",
    "the agents require only limited memory , sensing and communication abilities , and thus the solution is applicable to multi - robot coverage applications where the environment can be discretized as a grid .",
    "our distributed algorithm is based on a simple constructive method to obtain _ near - optimal _ dominating sets ( i.e. , that require no more than @xmath16 vertices over the optimal number ) in grids by chang @xmath17",
    "this approach is based on a systematic tiling pattern that we call a _",
    "diagonalization_. second , we generalize chang s construction to the @xmath2-distance dominating set problem , where a given vertex can cover all other vertices within a distance @xmath2 from it .",
    "we show that our distributed algorithm can also be generalized to work in the @xmath2-distance domination scenario .    in section [ sec : background ]",
    ", we introduce the essential models and notation for formulating the dominating set problem on grids . in section [ sec : center - domin ]",
    "we discuss the constructive centralized grid domination algorithm .",
    "the materials in section [ sec : center - domin ] are used in section [ sec : dist - domin ] to design a distributed algorithm for the dominating set problem .",
    "section [ sec : k - distance ] generalizes the results in sections [ sec : center - domin ] and [ sec : dist - domin ] to the @xmath2-distance dominating set problem .",
    "finally , section [ sec : conclusion ] concludes the paper and discusses the corresponding open problems .",
    "a graph @xmath18 is defined as a set of vertices @xmath19 connected by a set of edges @xmath20 .",
    "we assume the graph is _ undirected _ , i.e. , @xmath21 .",
    "a vertex @xmath22 is defined as a _",
    "neighbour _ of vertex @xmath23 , if @xmath24 .",
    "the set of all neighbours of vertex @xmath25 is denoted by @xmath26 . for a set of vertices",
    "@xmath27 , we define @xmath28 as @xmath29 . for a set of vertices",
    "@xmath27 , we say the vertices in @xmath28 are _ dominated _ by the vertices in @xmath30 . for graph @xmath31 , a set of vertices",
    "@xmath32 is a _ dominating set _ if each vertex @xmath23 is either in @xmath33 or is dominated by @xmath33 .",
    "a dominating set with minimum cardinality is called an _ optimal dominating set _ of a graph @xmath31 ; its cardinality is called the _ domination number _ of @xmath31 and is denoted by @xmath34 . note that although the domination number of a graph , @xmath34 , is unique , there may be different optimal dominating sets @xcite .    here",
    ", we study the dominating set problem on a special class of graphs called _ grid graphs_. an @xmath1 grid graph @xmath18 is defined as a graph with vertex set @xmath35 and edge set @xmath36 @xcite . for ease of exposition , we will fix an orientation and labelling of the vertices , so that vertex @xmath37 is the lower - left vertex and vertex @xmath38 is the upper - right vertex of the grid .",
    "we denote the domination number of an @xmath1 grid @xmath31 by @xmath39 .",
    "[ theo : cited-4 ] for an @xmath1 grid with @xmath15 , @xmath40 .",
    "our distributed grid domination algorithm is based on a procedure developed by chang @xmath17",
    "@xcite . to obtain the tools needed in our distributed algorithm",
    ", we discuss an overview of chang s algorithm in section  [ sec : center - domin ] .",
    "these tools are used in sections  [ sec : dist - domin ] and  [ sec : k - distance ] in the distributed domination algorithm and in developing the @xmath2-distance dominating set results . before discussing these tools ,",
    "we introduce two useful definitions .",
    "( grid boundary ) [ def : boundaries ] for an @xmath1 grid @xmath18 , we define the _ boundary _ of @xmath31 , denoted by @xmath41 , as the set of vertices with less than 4 neighbours .",
    "( sub - grids and super - grids ) [ def : sub - super - grids ] an @xmath1 grid @xmath18 is called a _ sub - grid _ of an @xmath42 grid @xmath43 if @xmath31 is induced by vertices @xmath44 , where @xmath45 and @xmath46 .",
    "if @xmath31 is a sub - grid of @xmath47 , @xmath47 is called the _ super - grid _ of @xmath31 ( see figure [ fig : eg](a ) ) .",
    "in @xcite , alanko @xmath17 provided examples of optimal dominating sets for @xmath48 grids with @xmath49 , obtained via a brute - force computational method .",
    "a visual inspection of these examples shows that as the size of the grid increases , the patterns of dominating vertices become more regular in the interior of grids , with irregularities at the boundaries .",
    "figure [ fig : patterns ] demonstrates some examples of patterns that arise in the dominated grids in @xcite .",
    "grid @xmath47 is demonstrated and its @xmath50 sub - grid @xmath31 is highlighted by a red dashed square .",
    "@xmath47 is diagonalized by a set @xmath51 of 28 vertices . in ( b ) , vertices in @xmath52 are projected onto their neighbours in @xmath31 . ]    among the patterns used to dominate grids , the one illustrated in figure [ fig : patterns](b ) is the most efficient , since there is no vertex that is dominated by more than one dominating vertex in this pattern .",
    "hence , this pattern would be useful in obtaining dominating sets with near optimal size .",
    "we refer to the structure in figure [ fig : patterns](b ) as a _ diagonal pattern_. chang @xmath17 in  @xcite used these patterns to provide an upper - bound on the domination number of grids . as the proof on",
    "the upper - bound they obtained was constructive , we could derive a centralized algorithm for finding near - optimal dominating sets from their constructions . in this section ,",
    "we provide an overview of chang s construction and the derived algorithm from their results which we will use in the subsequent sections .",
    "first , we define the diagonal patterns formally as follows .",
    "note that the @xmath53 and @xmath54 axes are as shown in figure  [ fig : patterns ] .",
    "( diagonal pattern ) [ def : diag - patt ] a set of vertices @xmath55 constitutes a _ diagonal pattern _ on grid @xmath18 if there exists a fixed @xmath56 such that for any vertex @xmath57 we have @xmath58 .",
    "( diagonalization ) [ def : diagonalization ] a set of vertices @xmath55 _ diagonalizes _ grid @xmath18 if it constitutes a diagonal pattern and there exists no vertex @xmath59 that can be added to @xmath30 so that @xmath30 remains a diagonal pattern .",
    "an example of a diagonalization is shown in figure [ fig : eg](a ) .",
    "coordinates satisfy @xmath60 , for some fixed @xmath61 .",
    "this corresponds to swapping the @xmath53 and @xmath54 axes . for the proofs we only analyze the case mentioned in definition [ def : diag - patt ]",
    "; the other case can be treated similarly . ]",
    "the algorithm derived from chang s construction consists of the following two main steps :    1 .",
    "diagonalization : at this step , a set of vertices @xmath30 that diagonalizes the grid is provided .",
    "projection : using a process called _ projection _ , the vertices that were not dominated by vertices in @xmath30 are characterized and new vertices are added to @xmath30 to dominate those vertices as well .",
    "we know discuss these two steps in more details .",
    "chang @xmath17 showed that if a grid @xmath18 is diagonalized by a set of vertices @xmath55 , then for any vertex @xmath62 that is not located on the grid s boundary there exists exactly one vertex in @xmath30 that shares an edge with @xmath25 .",
    "in other words , every node that is not located on the grid s boundary , @xmath41 , is dominated by exactly one vertex in @xmath30 .",
    "moreover , they proved that if a set of vertices @xmath55 diagonalizes an @xmath1 grid @xmath18 , then @xmath30 contains at most @xmath63 vertices . to construct a dominating set for @xmath31",
    "it only remains to add some vertices to @xmath30 so that the resulting set dominates the vertices on the boundary as well .",
    "the vertices located on @xmath41 with no neighbour in @xmath30 are called _ orphans _ and are defined formally as follows .",
    "( orphans ) [ def : orphan ] let @xmath55 be a set of vertices that diagonalizes grid @xmath18 .",
    "a vertex @xmath23 that has no neighbour in @xmath30 is called an _ orphan _",
    "( see figure [ fig : eg](a ) ) .    to dominate orphans , chang @xmath17 used the super - grid of @xmath31 , denoted by @xmath43 .",
    "since the vertices on the boundary of @xmath31 lie inside grid @xmath47 , a set of vertices @xmath64 that diagonalizes @xmath47 dominates all vertices of @xmath31 .",
    "moreover , it can be easily seen that the set of vertices @xmath65 is a diagonalization for grid @xmath31 .",
    "recall that diagonalization results in every vertex being dominated by at most one vertex in the diagonal pattern . therefore ,",
    "if a set of vertices @xmath64 diagonalizes @xmath43 , that is , the super - grid of @xmath18 , then there are vertices in @xmath41 that are dominated by vertices in @xmath52 .",
    "hence , the _ orphan _ of a vertex @xmath66 is a vertex @xmath67 such that @xmath68 , and is denoted by @xmath69 .",
    "[ cor : orphan - n+m ] for an @xmath1 grid @xmath31 , the number of orphans is @xmath70 .    since by diagonalizing @xmath47 the orphans in @xmath31 , i.e , vertices in @xmath71 ,",
    "are dominated by the dominating vertices on the boundary of @xmath47 , a procedure called _ projection _ is introduced that projects the dominating vertices in @xmath72 inside sub - grid @xmath31 .",
    "hence , projection results in having all vertices in @xmath31 being dominated .",
    "this procedure is defined formally as follows .",
    "( projection ) [ def : porjection ] consider a grid @xmath18 and its super - grid @xmath43 .",
    "for a set @xmath73 , its _ projection _ is defined as the set @xmath74 .",
    "similarly , we say a vertex @xmath66 is _ projected _ if it is mapped to its neighbour in @xmath19 .",
    "figure [ fig : eg](b ) shows an example of a projection . for grid @xmath18 ,",
    "its super - grid @xmath43 and set @xmath64 that diagonalizes @xmath47 , by performing projection , the size of the obtained dominating set of @xmath31 is between @xmath75 and @xmath76 .",
    "this is due to the fact that a vertex @xmath77 located at any corner of @xmath47 has no neighbour in @xmath19 and hence , after projection it is not mapped into @xmath19 . since @xmath47 has four corners , for @xmath78 , the result of projection of @xmath51 , we have @xmath79",
    ". hence @xmath76 , that is , the number of dominating vertices used in diagonalizing the super - grid of @xmath31 , is an upper - bound on the number of dominating vertices used to fully dominate @xmath31 by diagonalization and projection . since the size of super - grid of and @xmath1 grid @xmath31 is @xmath80 , therefore , @xmath81 .",
    "hence , @xmath82 is an upper - bound on the number of dominating vertices used to dominate grid @xmath31 by chang s algorithm .",
    "the following theorem reflects this upper - bound .",
    "[ theo : upper - bound ] for any @xmath1 grid @xmath18 with @xmath83 , a dominating set @xmath84 can be constructed in polynomial - time , such that @xmath85 . moreover , for grids with @xmath15 we have @xmath86 .",
    "the upper - bound on the difference between the cardinality of the provided dominating set @xmath33 from the domination number of an @xmath1 grid @xmath31 with @xmath15 , @xmath87 , is obtained by virtue of theorem [ theo : cited-4 ] .",
    "an example of constructing dominating sets for grids using diagonalization and projection is shown in figure [ fig : eg ] .",
    "in the following lemma we show that although in diagonal patterns no vertex is covered by more than one dominating vertex , using a simple greedy algorithm does not necessarily result in diagonalizing the grid or using at most @xmath82 dominating vertices to dominate the grid .",
    "[ lem : greedy - grid ] the size of the dominating set obtained by a greedy algorithm on an @xmath1 grid @xmath31 might be as large as @xmath88 .    as discussed in section  [ sec : intro ] , after the first vertex @xmath25 is added to the dominating set @xmath33 , greedy algorithm chooses a vertex that does not share any neighbours with @xmath25 .",
    "although this is also a property of diagonal patterns , the set of all the closest vertices around @xmath25 that can be added to @xmath33 using diagonal patterns has size at most four ( see figure  [ fig : patterns](b ) ) .",
    "however , there are 12 vertices around @xmath25 that do not share any neighbours with @xmath25 and hence candidate to be added to @xmath33 in a greedy algorithm , figure  [ fig : greedy](a ) . at each step of a greedy algorithm one of these 12 vertices",
    "is chosen arbitrarily . however , choosing only all red vertices or all blue vertices would start developing a diagonal pattern .",
    "other combinations of candidate vertices would fail to diagonalize the grid and some vertices of the graph would be dominated by more than one dominating vertex .",
    "hence , the size of the constructed dominating set would be greater than @xmath82 .",
    "in particular , the algorithm might add all the green vertices to @xmath33 and repeat the same pattern in the grid , figure  [ fig : greedy](b ) .",
    "however , using this pattern , between any four green vertices there remains a set of four vertices that are not dominated by any vertex in @xmath33 .",
    "these vertices are highlighted by dotted rectangles in figure  [ fig : greedy](b ) . to dominate each of these sets of vertices at least two extra dominating vertices",
    "should be added to @xmath33 .",
    "therefore , the number of obtained dominating vertices would be at least @xmath88 , which is much greater than the size of the dominating set obtained by chang s construction , i.e. , @xmath82 .",
    "in the preceding section , a centralized algorithm was discussed that produced a dominating set @xmath33 for a given @xmath1 grid @xmath31 such that @xmath85 . in this section ,",
    "we show how to achieve the same upper - bound in a distributed way .      here",
    "we assume that the environment is an @xmath1 grid @xmath18 with @xmath83 .",
    "the goal is to dominate the grid environment in a distributed fashion using several robots ( or agents ) without any knowledge of environment size .",
    "initially , there exist @xmath2 agents in the environment , where @xmath2 can be smaller or greater than the number of agents needed to dominate the grid .",
    "the following assumptions are made for the grid and agents .",
    "_ grid assumptions : _ agents can be located only on the vertices of the grid and are able to move between the grid vertices only on the edges of the grid . at each moment",
    ", a vertex can contain more than one agent .",
    "we refer to the vertices using the standard cartesian coordinates defined in section [ sec : background ] .",
    "_ agent assumptions : _ the agents , denoted by @xmath89 , are initially located at arbitrary vertices on the grid .",
    "the agents have three modes : ( a ) _ sleep _ , ( b ) _ active _ , and ( c ) _ settled_. the mode of an agent @xmath90 and the vertex it is located at are denoted by @xmath91 and @xmath92 , respectively .",
    "only agents in the active and settled modes are able to communicate . at the beginning of the procedure ,",
    "all the agents are in the sleep mode . during each _ epoch _ , that is , a time interval with a specified length , one agent goes to active mode .",
    "the activation sequence of agents is arbitrary ( e.g. , it can be scheduled in advance or it can be random ) .",
    "the active agent can communicate with the settled agents to perform the distributed dominating set algorithm .",
    "once an agent activates and performs its part in the algorithm , it goes to settled mode .",
    "ultimately , all the settled agents go back to sleep mode and will not activate again .    here",
    ", each agent is equipped with suitable angle - of - arrival ( bearing ) and range sensors .",
    "using these sensors , agent @xmath90 computes the coordinates of other agents in its own coordinate frame @xmath93 with its origin at @xmath92 and an arbitrary orientation , fixed relative to agent @xmath90 .",
    "each agent also has a compass to determine its heading direction .",
    "additionally , agents are equipped with short - ranged proximity sensors to sense the environment boundary .",
    "agents are able to sense the boundary only if they are on a vertex @xmath25 whose neighbour is a boundary vertex of the grid , i.e. , @xmath94 .",
    "the compass helps agents to distinguish which of the four boundary edges they are approaching .",
    "the main idea in this algorithm is to implement the diagonal pattern defined in section [ sec : center - domin ] on grid @xmath18 , using communications among active and settled agents .",
    "a special unit called a _ module _",
    "is defined for the active and settled agents .",
    "a module is a cross - like shape consisting of the agent at its center with the associated dominated vertices in the arms of the cross ( see figure [ fig : patterns](b ) ) . for each module @xmath95 ,",
    "the vertex that contains the agent , i.e. , the center vertex , is referred to as the _ module center _",
    ", denoted by @xmath96 . as an agent moves on the grid to contribute to the diagonal pattern , its module moves with it as well .",
    "modules @xmath97 and @xmath98 with module centers @xmath99 and @xmath100 can connect to each other if @xmath101 ( see figure [ fig : steps](f ) ) .",
    "this condition is called the _ module connection condition_. the set of centers of the connected modules is called a _ cluster_. we will later show that the module connection condition ensures that the module centers are a diagonalization of the vertices covered by the modules in the cluster .    _",
    "valid slots : _ let @xmath43 be the super - grid of @xmath31 . a vertex @xmath102 is called a _ slot _ if there exists a module @xmath95 in the cluster with center @xmath103 such that @xmath104 and @xmath105 is not already a center for a module in the cluster . for a settled agent @xmath90 located at @xmath92 , denote the set of all its slots by @xmath106 .",
    "recall that the _ orphan _ of a vertex @xmath107 , i.e. , @xmath108 , is a vertex @xmath67 such that @xmath68 .",
    "the set of all _ valid slots _ for settled agent @xmath90 , denoted by @xmath109 , is defined as @xmath110 .",
    "newly activated agents can settle only on the valid slots of the settled agents .    _ updating valid slots : _ when an active agent settles , it creates the list of its valid slots as follows .",
    "if a settled agent @xmath90 can not sense the boundary ( i.e. , it has no neighbour on the boundary ) , @xmath111 and hence @xmath112 .",
    "conversely , a settled agent can also determine which of its slots lie outside the grid boundary ( figure [ fig : orphans](a ) ) .",
    "each newly settled agent marks the vertices on the grid boundary that are neighbours of @xmath113 as _ orphans _ and so @xmath114 ( figure [ fig : orphans](b ) ) . by the definition of valid slots",
    ", no valid slot exists in an orphan s neighbourhood .",
    "therefore , each orphan needs one agent to be located on itself or one of its neighbours to be dominated . for simplicity",
    "we always put an agent on the orphan itself .",
    "when an agent activates , it transmits a signal to find the settled agents on the grid and waits for some specified time for a response from them .",
    "since there is no settled agent in the environment when the first agent activates , it receives no signal and concludes it is the first one activated .",
    "thus , the agent stays at its initial location and goes to the settled mode .",
    "subsequently , each active agent translates to the closest settled agent .      during the distributed grid domination algorithm , active agents can either contribute to grid diagonalization by locating on non - orphan valid slots or can settle on orphans . in each epoch , the set of the non - orphan vertices containing the previously settled agents is called the _",
    "cluster _ and is denoted by @xmath115 , while the set of occupied orphans is denoted by @xmath116 . at the beginning of the algorithm @xmath117 .",
    "it should be mentioned that @xmath115 and @xmath116 are not saved by any agent , and are used only to aid in the presentation of the algorithm .",
    "moreover , we denote the set of all settled agents at each moment by @xmath118 , where at the beginning of the algorithm @xmath119 . also if agent @xmath90 is already settled and is now in sleep mode @xmath120 , otherwise @xmath121 .",
    "the remaining non - activated agents leave the grid .",
    "( comments on algorithm ) + 1 ) since agents can move only on the grid edges , the distance between two vertices can be computed simply by adding their @xmath53-coordinate and @xmath54-coordinate differences , i.e. , @xmath122 and @xmath123 .",
    "there exist many shortest paths between any two vertices and agent @xmath90 arbitrarily chooses one of them to traverse ; for instance it can first traverse on the @xmath53-coordinate and then on the @xmath54-coordinate .",
    "+ 2 ) in step 11 , agent @xmath90 locates @xmath124 in @xmath93 ( i.e. , coordinate frame of @xmath90 ) , while @xmath125 is computed by @xmath124 in @xmath126 in step 12 .",
    "in step 13 , agent @xmath90 converts the coordinates of @xmath125 from @xmath126 to @xmath93 for traversing , using relative sensing techniques @xcite .",
    "+ 3 ) when an agent settles , all settled agents wait for a specified amount of time for the next agent to activate .",
    "if no agent activates , algorithm [ alg : dist - domin ] halts and the previously settled agents construct a subset of a dominating set of the grid .",
    "this happens when the initial number of agents is not sufficient to dominate the grid .",
    "+ 4 ) if the agents are equipped with gps , then they can agree on a fixed diagonalization ( i.e. , agree on a value of @xmath61 ) , and move to the vertices @xmath30 in the diagonalization . at this point ,",
    "only orphan vertices exist .",
    "the remaining agents can move along the boundary to find and cover all orphans and consequently dominate the grid . hence , in this paper we study the case that agents are not armed with gps .",
    "have red crosses as their modules .",
    "figure ( a ) shows the first active agent , as in step 6 . in ( b ) , an active agent is highlighted by a blue square .",
    "step 13 is depicted in ( c ) , where a dashed blue square shows the closest valid slot to the active agent . in ( d ) , the active agent moves to the valid slot and joins @xmath115 , as in step 15 . in ( e ) , the list of valid slots is updated as in step 4 . in ( f ) , the grey circle shows an agent that goes from settled to sleep mode . ]",
    "we now prove that the set of vertices determined by algorithm [ alg : dist - domin ] , i.e. , @xmath127 , creates a dominating set for the grid .",
    "recall that at each epoch , @xmath115 is the set of non - orphan vertices containing the previously settled agents and @xmath116 is the set of occupied orphans .",
    "[ lem : modules - are - diag ] during the operation of algorithm [ alg : dist - domin ] , the module connection condition forces the vertices in @xmath115 to create a diagonal pattern .",
    "this will be proved using induction on the size of @xmath115 during the operation of the algorithm . according to the module connection condition",
    ", the module of agent @xmath90 located at vertex @xmath128 can connect to the module of vertex @xmath129 if @xmath130 .",
    "the base of induction is @xmath131 , when the first agent is about to be added to @xmath115 . in this case , the first agent settles at its current location @xmath132 and establishes the value @xmath133 .    for @xmath134",
    ", @xmath115 already has a diagonal pattern and an active agent @xmath90 at @xmath135 aims to join it by connecting to a module centered at @xmath103 . since @xmath103 is already in @xmath115 , @xmath136 .",
    "it can be seen that for a vertex @xmath137 that satisfies the module connection condition with respect to @xmath103 we have @xmath138 .",
    "therefore , the resulting set has a diagonal pattern .",
    "[ theo : error - dist ] the number of agents used to dominate an @xmath1 grid @xmath18 by algorithm [ alg : dist - domin ] is upper - bounded by @xmath82 . for grids with @xmath15 ,",
    "the number of agents used is upper - bounded by @xmath139 .",
    "we first prove algorithm [ alg : dist - domin ] is correct and then show the upper - bound holds .",
    "let @xmath43 be the super - grid of @xmath31 and @xmath115 denote the non - orphan vertices occupied by previously settled agents when the algorithm finishes .",
    "by lemma [ lem : modules - are - diag ] , @xmath115 constitutes a diagonal pattern and by the condition in step 10 of the algorithm no other agent can be added to @xmath115 ; therefore , @xmath115 diagonalizes @xmath31 .",
    "moreover , orphans are neighbours of the vertices in @xmath140 that are initially detected as slots by the settled agents and hence diagonalize @xmath47 by lemma [ lem : modules - are - diag ] .",
    "thus , locating one agent on each orphan is equivalent to the projection process .",
    "hence , if a sufficient number of agents exist in the grid , algorithm [ alg : dist - domin ] provides a dominating set for @xmath31 ( from theorem [ theo : upper - bound ] ) .",
    "consequently , the algorithm is _ complete _ , meaning it always finds a solution , if one exists .",
    "furthermore , since algorithm [ alg : dist - domin ] performs diagonalization and projection on @xmath31 , from theorem [ theo : upper - bound ] it immediately follows that the number of agents used in the algorithm , @xmath141 , is upper - bounded by @xmath82 . also by theorem [ theo : cited-4 ] , for @xmath15 we have @xmath142 .",
    "note that while the agents do not form a dominating set for @xmath31 , an active agent finds a valid slot in at most @xmath143 steps .",
    "a step is a specified time duration within which an agent performs its basic operation , such as traversing an edge or transmitting signals . since the number of agents needed to dominate an @xmath1 grid is less than @xmath144 , algorithm [ alg : dist - domin ] takes at most @xmath145 steps to construct a dominating set for @xmath31 .      to augment and examine the results discussed in this section",
    ", we simulated algorithm [ alg : dist - domin ] on various grids and different initial configurations of agents on grid vertices .",
    "figure [ fig : sim1](a ) demonstrates a @xmath146 grid graph with 41 agents located randomly on it . the first agent that activates",
    "is located on vertex @xmath147 and hence stays on that vertex .",
    "figure [ fig : sim1](b ) shows the location of agents when algorithm [ alg : dist - domin ] is complete .",
    "it can be seen that every vertex is dominated . however , there are some agents located at vertices ( such as @xmath148@xmath149 and @xmath150 ) that are never activated in the algorithm .",
    "these are the additional agents that are not required to dominate the grid and they are removed in figure [ fig : sim1](c ) .    0.28   grid is depicted with agents shown in blue . in ( a )",
    "the initial configuration of the agents is shown and ( b ) shows the agents configuration when algorithm [ alg : dist - domin ] is finished . in ( c ) , all non - settled and non - asleep agents leave the grid , title=\"fig : \" ]       0.28   grid is depicted with agents shown in blue . in ( a ) the initial configuration of the agents is shown and ( b ) shows the agents configuration when algorithm [ alg : dist - domin ] is finished . in ( c ) , all non - settled and non - asleep agents leave the grid , title=\"fig : \" ]       0.28   grid is depicted with agents shown in blue . in ( a ) the initial configuration of the agents is shown and ( b ) shows the agents configuration when algorithm [ alg : dist - domin ] is finished . in ( c )",
    ", all non - settled and non - asleep agents leave the grid , title=\"fig : \" ]",
    "in this section we generalize chang s algorithm for grid domination , discussed in section  [ sec : center - domin ] , to the @xmath2-distance dominating set problem , where a vertex dominates all the vertices within distance @xmath2 from it . before defining the problem formally ,",
    "let @xmath151 denote the shortest path distance between vertices @xmath152 in @xmath18 .",
    "moreover , vertex @xmath22 is defined as a _",
    "@xmath2-neighbour _ of vertex @xmath23 , if @xmath153 .",
    "the set of all @xmath2-neighbours of @xmath25 is denoted by @xmath154 . moreover , for a set of vertices @xmath155 and a vertex @xmath156 , we have @xmath157 if ( a ) @xmath158 , ( b ) @xmath159 , and ( c ) @xmath160 .",
    "( @xmath2-distance dominating set problem ) [ def : k - distance ] given a graph @xmath18 , the @xmath2-distance dominating set problem is to find a set of vertices @xmath32 such that for every vertex @xmath161 there exists a vertex @xmath162 where @xmath159 .",
    "the cardinality of a smallest @xmath2-distance dominating set for @xmath31 is called the _ @xmath2-distance domination number _ of @xmath31 and is denoted by @xmath163 @xcite .",
    "we say that vertex @xmath162 _ @xmath2-distance dominates _",
    "@xmath161 if @xmath164 . the regular dominating set problem is a special case of the @xmath2-distance dominating set problem , where @xmath165 .",
    "therefore , @xmath2-distance domination is also np - hard on general graphs .",
    "however , to the best of our knowledge the @xmath2-distance domination number of grids is not known and the complexity of the problem is open . in section [ subsec : upper - bound - k - distance ] , we generalize the approaches in sections [ sec : center - domin ] and [ sec : dist - domin ] to provide a @xmath2-distance dominating set for an @xmath1 grid graph @xmath31 .      before discussing the @xmath2-distance domination algorithms on grids",
    "we introduce the following definitions .",
    "( @xmath2-sub - grids and @xmath2-super - grids ) [ def : k - super ] an @xmath1 grid @xmath18 is called a _ @xmath2-sub - grid _ of an @xmath42 grid @xmath43 if @xmath31 is induced by vertices @xmath44 , where @xmath166 and @xmath167 .",
    "if @xmath31 is a @xmath2-sub - grid of @xmath47 , @xmath47 is called the _ @xmath2-super - grid _ of @xmath31 .",
    "[ lem : k - distance - unit ] for an @xmath1 grid @xmath18 , @xmath168 .    since @xmath31 is a grid , the @xmath2-neighbours of @xmath25 form a diamond around it with a diameter of @xmath169 ( see the red regions in figure [ fig : k - distance - elem ] ) .",
    "thus @xmath170 is upper - bounded by the area of this region , which is @xmath171 .    in what follows",
    "we define @xmath172 .",
    "( @xmath2-diagonal pattern ) [ def : k - diag - patt ] a set of vertices @xmath55 constitutes a _ @xmath2-diagonal pattern _ on grid @xmath18 if there exists a fixed @xmath173 such that for any vertex @xmath57 we have @xmath174 ( see figure  [ fig : k - distance - elem ] ) .",
    "( @xmath2-diagonalization ) [ def : k - diagonalization ] a set of vertices @xmath55 _",
    "@xmath2-diagonalizes _ grid @xmath18 if it constitutes a @xmath2-diagonal pattern and there exists no vertex @xmath59 that can be added to @xmath30 so that @xmath30 remains a @xmath2-diagonal pattern .",
    "moreover , for a grid @xmath18 and its @xmath2-super - grid @xmath43 , the _ @xmath2-projection _ is defined as a special mapping from the vertices in @xmath140 to their @xmath2-neighbours in @xmath19 .",
    "it is defined formally as follows .",
    "( @xmath2-projection ) [ def : k - porjection ] consider a grid @xmath18 and its @xmath2-super - grid @xmath43 .",
    "the _ @xmath2-projection _ for a set @xmath73 is defined as the set @xmath175 ( see figure [ fig : k - grid ] ) .",
    "[ lem : k - min-2k+1 ] let @xmath30 be a set of vertices that @xmath2-diagonalizes a grid @xmath18 .",
    "for any two vertices",
    "@xmath176 we have @xmath177 .    since @xmath176 , we have @xmath178 and @xmath179 , where @xmath180 and @xmath181 .",
    "we define @xmath182 , @xmath183 and @xmath184 .",
    "the shortest distance between @xmath185 is equal to @xmath186 .",
    "from @xmath187 it can be observed that as @xmath188 grows , @xmath189 grows faster compared to @xmath188 .",
    "hence @xmath186 is minimum when @xmath190 and @xmath191 .",
    "note that the minimum ( non - zero ) distance occurs for @xmath192 and also it is an integer , hence it is lower - bounded by @xmath193 .",
    "[ lem : k - distane - k - super ] consider a grid @xmath18 and its @xmath2-super - grid @xmath43 .",
    "if @xmath64 @xmath2-diagonalizes @xmath47 , then each vertex in @xmath19 is @xmath2-dominated by exactly one vertex from @xmath51 .",
    "for each vertex @xmath194 let @xmath195 .",
    "consider any vertex @xmath23 and its @xmath2-neighbourhood @xmath154 .",
    "the distance between any two vertices in @xmath196 is at most @xmath197 . also , there are exactly @xmath198 vertices in this set .",
    "thus , for any two distinct vertices @xmath199 we have @xmath200 by lemma [ lem : k - min-2k+1 ] .",
    "hence each vertex @xmath159 has a distinct value of @xmath201 .",
    "consequently , for the value of @xmath61 that corresponds to the diagonalization @xmath51 , there is exactly one vertex in the @xmath2-neighbourhood of @xmath25 such that @xmath202 and thus @xmath25 is @xmath2-dominated by exactly one vertex from @xmath51 .",
    "[ lem : k - diag - cardinal ] if a set of vertices @xmath55 @xmath2-diagonalizes an @xmath1 grid @xmath18 , then @xmath30 contains at most @xmath203 vertices .    since @xmath30 @xmath2-diagonalizes @xmath31 , it constitutes a @xmath2-diagonal pattern on @xmath31 such that no more vertices can be added to it while maintaining a @xmath2-diagonal pattern .",
    "therefore , among each @xmath198 consecutive vertices in any row or column there is exactly one vertex from @xmath30 .",
    "hence , the number of vertices of @xmath30 in a row / column of @xmath204 vertices is at most @xmath205 .    thus , there are at most @xmath198 vertices from @xmath30 in any @xmath206 grid .",
    "hence , in any @xmath207 grid with @xmath208 , there are at most @xmath209 vertices from @xmath30 . for an @xmath1 grid @xmath18 with @xmath210 , @xmath211 and @xmath212 , we partition @xmath19 into the four following sets : @xmath213 @xmath214 @xmath215 and @xmath216 as stated , @xmath217 .",
    "grid @xmath218 has @xmath90 columns each having @xmath219 vertices , hence @xmath220 .",
    "similarly , we have @xmath221 . in summary",
    ", we so far have @xmath222 .",
    "note that @xmath223 .",
    "it remains to upper - bound @xmath224 .",
    "without loss of generality assume that @xmath225 .",
    "since the number of rows and columns in @xmath226 are less than @xmath198 , in each row / column at most one dominating vertex can exist . since @xmath225 , then @xmath227 .",
    "therefore @xmath228 . maximum of @xmath229 takes place when @xmath230 has its minimum value , i.e. , @xmath231 .",
    "moreover , for @xmath232 we have that the maximum is @xmath233 and it happens when @xmath234 .",
    "this results in @xmath235 .",
    "[ theo : upper - bound - k - dist ] for an @xmath1 grid @xmath18 , a @xmath2-distance dominating set @xmath84 can be constructed using @xmath2-diagonalization and @xmath2-projection in polynomial - time such that @xmath236 .",
    "the proof follows from lemmas [ lem : k - distance - unit ] , [ lem : k - distane - k - super ] and [ lem : k - diag - cardinal ] and by replacing the diagonalization and projection operations with the @xmath2-diagonalization and @xmath2-projection operations in the proof of theorem [ theo : upper - bound ]  @xcite .",
    "[ lem : lower - bound - k - dist ] if @xmath84 is a @xmath2-distance dominating set for an @xmath1 grid @xmath18 , @xmath237    according to lemma [ lem : k - distance - unit ] , a vertex @xmath23 @xmath2-dominates at most @xmath198 vertices . hence , at least @xmath238 dominating vertices are needed to @xmath2-dominate an @xmath1 grid .",
    "note that we use @xmath237 instead of @xmath239 since dominating vertices in the @xmath2-neighbourhood of vertices on the grid boundary do not have all their @xmath2-neighbours in @xmath19 .",
    "[ cor : upper - lower ] let @xmath33 be a @xmath2-distance dominating set for an @xmath1 grid @xmath18 obtained by @xmath2-diagonalization and @xmath2-projection and let @xmath240 denote the lower - bound for @xmath33 from lemma [ lem : lower - bound - k - dist ] . for any constant @xmath241 , the approximation ratio @xmath242 satisfies @xmath243 .    from theorem [ theo : upper - bound - k - dist ] and lemma [ lem : lower - bound - k - dist ]",
    ", we have @xmath244 therefore , @xmath245 and @xmath246 hence , we have @xmath247 and @xmath248 for constant @xmath2 we have @xmath249 @xmath250 therefore by the squeeze theorem @xmath243 .        for a graph @xmath31 , its _",
    "@xmath2-th power _ , denoted by @xmath251 , is a graph with the same vertex set as @xmath31 , i.e. , @xmath252 , in which two distinct vertices share an edge if and only if their distance in @xmath31 is at most @xmath2  @xcite ( see figure  [ fig : k - power ] ) . hence , in @xmath253 each vertex is connected to the vertices it @xmath2-distance dominates in @xmath31 .",
    "we finish this section with the following remark that relates the @xmath2-distance dominating set problem in grids to the regular dominating set problem in their @xmath2-th power graphs .",
    "[ rem : k - power ] it might seem that a reasonable approach for @xmath2-distance domination on a grid @xmath31 is to simply take the @xmath2-th power of the graph to obtain @xmath253 , and then perform regular domination algorithms on @xmath253 . note that by the definition of @xmath253 , a regular dominating set in @xmath253 is equivalent to a @xmath2-distance dominating set in @xmath31 and hence @xmath254 .",
    "unfortunately , @xmath253 is no longer a grid ( e.g. , there are diagonal edges connecting @xmath255 to @xmath256 for @xmath257 ) .",
    "in fact , it is not even a planar graph for @xmath1 grids with @xmath258 .",
    "therefore , as discussed in section  [ sec : intro ] , choosing dominating vertices greedily in @xmath253 might obtain a dominating set with size as large as @xmath259 .",
    "graph and its second power , respectively .",
    "vertices within distance two are connected to each other in ( b ) . ]",
    "using the algorithm explained in section [ subsec : upper - bound - k - distance ] , a distributed @xmath2-distance domination algorithm can be designed for grids . in practice , the @xmath2-distance dominating set problem corresponds to settings where agents are equipped with longer range sensory equipment and can sense vertices up to distance @xmath2 from them .",
    "therefore , the goal is to arrange the agents on the grid vertices in a distributed way such that for each vertex there exists at least one agent with distance at most @xmath2 from it .",
    "this algorithm is similar to algorithm [ alg : dist - domin ] in section [ susec : dist - alg ] , except for two modifications .",
    "the first modification is that module @xmath98 and module @xmath97 with module centers @xmath99 and @xmath100 can now connect to each other if @xmath260 ( see figure [ fig : k - distance - elem ] ) .",
    "these constitute the _ slots_. the second modification is the definition of _",
    "orphans_. if @xmath51 is a set of vertices that @xmath2-diagonalizes the @xmath2-super - grid of @xmath31 , vertex @xmath23 is an orphan if it satisfies the two following conditions : ( a ) @xmath25 has no @xmath2-neighbour in @xmath261 , and ( b ) @xmath25 is in the @xmath2-neighbourhood of a vertex @xmath262 with the same @xmath53 or @xmath54 coordinates .",
    "hence , _ valid slots _ are defined for each settled agent as the union of its slots located inside the grid and the orphans of its slots located outside the grid ( see figure [ fig : k - grid ] ) .",
    "grid @xmath31 and its 2-super - grid @xmath47 are shown by solid and dashed squares , respectively .",
    "both grids are 2-diagonalized .",
    "the black circles are the vertices that 2-diagonalize @xmath31 .",
    "the union of red and black circles 2-diagonalizes @xmath47 .",
    "the green circles are the 2-projections of the red circles onto @xmath31 . before projection",
    "these vertices are called orphans . ]",
    "in this paper we studied the dominating set and @xmath2-distance dominating set problems on @xmath1 grids .",
    "we discussed a construction from  @xcite to obtain dominating sets for grids with near optimal size and generalized it to work in the @xmath2-distance domination scenario .",
    "we used these methods in distributed algorithms and showed that the resulting dominating sets are upper - bounded by @xmath263 .",
    "the difference between the acquired upper - bound and the domination number of grid is at most five , for @xmath15 and @xmath165 . however , via a more detailed case - based analysis in the grid corners , our distributed procedure can be used to obtain optimal dominating sets for @xmath15 .",
    "there are many open problems in this area .",
    "the @xmath2-domination number of grids is still unknown .",
    "it is also of interest to find centralized and distributed algorithms for dominating sub - graphs of grids , that is , grids with some of their vertices or edges missing .",
    "generalizing these algorithms to the cases where the underlying graphs are cubic or hyper - cubic grids is another direction of this research .",
    "r.  w. beard , t.  w. mclain , m.  a. goodrich , and e.  p. anderson , `` coordinated target assignment and intercept for unmanned air vehicles , '' _ ieee transactions on robotics and automation _ , vol .  18 , no .  6 , pp .",
    "911922 , 2002 .",
    "j.  wu , m.  gao , and i.  stojmenovic , `` on calculating power - aware connected dominating sets for efficient routing in ad hoc wireless networks , '' in _ international conference on parallel processing _ , 2001 , pp .",
    "346 354 .",
    "r.  raz and s.  safra , `` a sub - constant error - probability low - degree test , and a sub - constant error - probability pcp characterization of np , '' in _ proceedings of the twenty - ninth annual acm symposium on theory of computing_.1em plus 0.5em minus 0.4emacm , 1997 , pp .",
    "475484 .",
    "j.  li , j.  jannotti , d.  d. couto , d.  karger , and r.  morris , `` a scalable location service for geographic ad hoc routing , '' in _ international conference on mobile computing and networking _ , boston , ma , 2000 .",
    "g.  piovan , i.  shames , b.  fidan , f.  bullo , and b.  d.  o. anderson , `` on frame and orientation localization for relative sensing networks , '' in _ ieee conf . on decision and control",
    "_ , cancn , mxico , dec .",
    "2008 , pp . 23262331 .",
    "m.  a. henning , `` distance domination in graphs , '' in _ domination in graphs : advanced topics _ , t.  w. haynes , s.  t. hedetniemi , and p.  j. slater , eds.1em plus 0.5em minus 0.4emmarcel dekker , new york , 1998 , pp ."
  ],
  "abstract_text": [
    "<S> this paper presents a distributed algorithm for finding near optimal dominating sets on grids . </S>",
    "<S> the basis for this algorithm is an existing centralized algorithm that constructs dominating sets on grids . </S>",
    "<S> the size of the dominating set provided by this centralized algorithm is upper - bounded by @xmath0 for @xmath1 grids and its difference from the optimal domination number of the grid is upper - bounded by five . both the centralized and distributed algorithms are generalized for the @xmath2-distance dominating set problem , where all grid vertices are within distance @xmath2 of the vertices in the dominating set . </S>"
  ]
}
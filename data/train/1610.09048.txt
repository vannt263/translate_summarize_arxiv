{
  "article_text": [
    "many real - world networks have a bipartite structure : nodes can be separated into two disjoint sets and links exist only between nodes of different sets .",
    "real bipartite networks are often characterized by two common properties : ( i ) heterogeneity in distributions of node degrees ; and ( ii ) a large number of common neighbors shared between pairs of nodes .",
    "the heterogeneity of degree distributions has been studied extensively in both traditional ( unipartite ) and bipartite networks and comes as no surprise . in many bipartite systems heterogeneous degree distributions",
    "can be approximated by power laws , @xmath0 , which are observed for at least one of the two sets of nodes  @xcite .",
    "the second property , on the other hand , has not been studied extensively and deserves a thorough investigation .    , for pairs of top nodes in the condmat and hep collaboration networks , the imdb network , and the metabolic network .",
    "the results for the original real networks are shown with squares while for their degree - preserving randomized counterparts are shown with circles . by _ top _",
    "nodes in each network we refer respectively to authors , actors and metabolites , while manuscripts , films and reactions are referred to as _ bottom _ nodes ( appendix  [ app : data ] ) . *",
    "b * , number of hep author pairs having @xmath1 common publications as a function of their total number of publications @xmath2 and @xmath3 .",
    "* c * , average bipartite clustering coefficient of top nodes , @xmath4 , as a function of their degree @xmath5 for the same real networks ( squares ) as in panel * a * , and for their degree - preserving randomized counterparts ( circles ) .",
    "the bipartite clustering coefficient is significantly larger in the original real networks compared to their randomized counterparts.,width=288 ]    in fig .",
    "[ fig : real_clustering]*a * we show the distribution @xmath6 of the number @xmath7 of common neighbors between nodes in several real bipartite systems : the actor - film network derived from the international movie database ( imdb )  @xcite , condensed matter ( condmat ) and high energy physics ( hep ) collaboration networks derived from the arxiv  @xcite , wikipedia  @xcite , and the network of metabolic reactions  @xcite  ( see appendix  [ app : data ] ) . for each of these networks , we calculated the distribution of the number of common neighbors shared between pairs of nodes , @xmath6 .",
    "we see that the number of common neighbors in these networks is power - law distributed , @xmath8 so that significant fractions of node pairs share many common neighbors .",
    "similar observations have been made for other bipartite systems .",
    "for instance , the probability of two insect species pollinating @xmath7 different kinds of flowers in common has been shown to follow a truncated power law  @xcite .",
    "similarly , a fat - tail distribution of the number of shared requests between two users has been observed in peer - to - peer networks  @xcite .    to better understand the mechanisms leading to the abundance of common neighbors in bipartite systems we first ask if the observed fat - tail distributions of @xmath6 are the consequence of heterogeneous degree distributions @xmath9 . to answer this question we randomly rewire our real bipartite networks by preserving the degrees of individual nodes  ( see appendix  [ app : degree_randomization ] ) .",
    "we find that @xmath6 in the randomized networks exhibits very fast decays , such that the maximum number of common neighbors between nodes is very small , see fig .  [",
    "fig : real_clustering]*a*. this result suggests that the heterogeneity of @xmath6 is not caused by the heterogeneity of @xmath9 .",
    "second , we also check if the heterogeneous shape of @xmath6 is driven by all pairs of nodes in the network or by a handful of high degree nodes . to this end",
    ", we focus on node pairs with a large number of common neighbors .",
    "we create a heatmap by counting pairs of hep authors sharing at least @xmath10 publications , and whose publication record sizes , i.e. , degrees , are @xmath2 and @xmath3 . as seen from fig .",
    "[ fig : real_clustering]*b * , author pairs with @xmath1 common publications do not necessarily consist of authors that have published a large number of papers , as one would expect from a random collaboration pattern . on the contrary",
    ", we see that the majority of author pairs with at least @xmath11 common publications involve authors who barely published over @xmath11 publications each .",
    "this observation is not specific to the hep collaboration network : we checked that in all considered networks both small and large degree nodes can have a large number of common neighbors .",
    "the heterogeneity in the observed number of common neighbors implies the existence of a large number of @xmath12-loops in real bipartite networks .",
    "indeed , a pair of nodes @xmath13 sharing a large number of common neighbors will have a large number of @xmath12-loops passing through them , that is , loops of the form @xmath14 . supporting this observation",
    ", we also find that real bipartite systems are characterized by strong bipartite clustering , which quantifies the density of @xmath12-loops in the network , see the definition in sec .",
    "[ sec : bipartite_clustering ] .",
    "bipartite clustering is typically several orders of magnitude larger in the original networks compared to their degree - preserving randomized counterparts , fig .",
    "[ fig : real_clustering]*c*. we also note that similar clustering - related heterogeneity has also been observed in unipartite networks .",
    "many real unipartite networks have been shown to exhibit power - law distributions of edge multiplicity , defined as the number of triangles shared by edges  @xcite .",
    "top ( red ) nodes and @xmath15 bottom ( blue ) nodes , connected as described in section  [ sec : the_model ] .",
    "the nodes are placed on a disc of radius  @xmath16 .",
    "their angular coordinates are random on @xmath17 $ ] .",
    "the radial coordinates of all bottom nodes are @xmath18 ,  @xmath19 , so that they all are at the disc edge , while the radial coordinates of top nodes are @xmath20 , where @xmath21 is the degree of node @xmath22 and @xmath23 is the largest node degree of the top domain .",
    "node sizes are proportional to the logarithm of node degrees.,width=288 ]      here we show that the observed common properties of real bipartite networks can be explained by the existence of latent geometric spaces underlying these networks .",
    "that is , we assume that nodes in bipartite networks are points in some geometric space underlying the system .",
    "the latent coordinates of nodes in the space abstract node attributes , while latent distances between nodes play the role of a generalized similarity measure : the more similar the two nodes , the smaller the latent distance between them , the higher the probability that the nodes are connected , fig .",
    "[ fig : illustr ] . to illustrate , consider the imdb network for instance , where actors are linked to films they starred in .",
    "clearly , connections in this network are not random .",
    "both actors and films can be characterized by numerous attributes , so that connections are the result of a certain mutual match between these attributes .",
    "these attributes include genres , geographic locations of films , film release dates , etc .",
    "similar parallels can be drawn for other systems .",
    "for instance , connections between authors and manuscripts in collaboration networks are driven by many factors , including the expertise of the authors , their geographic location , their methodology , and so on .",
    "collectively these attributes define similarity distances between nodes in a latent space .",
    "the large numbers of common neighbors and strong clustering observed in real bipartite systems are then a reflection of the triangle inequality in the latent space .",
    "consider , for example , two actors @xmath24 and @xmath25 and a film @xmath26 mapped to three points in a metric space .",
    "the triangle inequality in the space prescribes that @xmath27 , where @xmath28 denotes the distance between nodes @xmath29 in the space . if distances @xmath30 and @xmath31 are small , then @xmath32 is also small , so that both actors @xmath33 are likely to co - star in film @xmath26 , that is , @xmath26 is likely to be a common neighbor of @xmath24 and @xmath25 .",
    "as the number of common films between two actors @xmath33 increases , so does bipartite clustering , that is , the number of loops of the form @xmath34 .",
    "we stress the importance of the metric property in a latent space : if latent distances do not satisfy the triangle inequality , then bipartite networks built using these distances do not have many common neighbors and strong bipartite clustering  ( appendix  [ app : non_metric_models ] ) .      to further support our geometric assumption",
    "we organize the rest of the manuscript as follows .",
    "we begin with the review of related work in section  [ sec : previous_work ] . in section  [ sec : the_model ] we conduct a detailed analysis of a model of synthetic bipartite networks constructed in the latent space .",
    "we show that the model generates bipartite networks with either heterogeneous or homogeneous degree distributions in a given node domain , and with power - law distributions of the number of common neighbors and strong bipartite clustering . in section  [ sec : one_mode_projections ] , we investigate how the latent geometry of bipartite systems is transformed under one - mode projections , and prove that one - mode projections can not fully preserve latent geometry .",
    "however , we also show that under certain conditions latent geometry can be preserved approximately . in section  [ sec :",
    "inference ] , we propose a procedure for efficient estimation of the latent pairwise distances between pairs of nodes .",
    "final remarks are in section  [ sec : conclusion ] .",
    "bipartite networks have been successfully used to model a large array of complex systems including collaboration networks  @xcite , metabolic reactions  @xcite , peer - to - peer networks  @xcite , and recommender systems  @xcite .",
    "bipartite networks can be represented as hypergraphs , generalizations of graphs where a single edge can connect multiple nodes  @xcite .",
    "hypergraphs , in their turn , are further generalizable to multipartite hypergraphs , where hyperedges may connect several nodes of different type .",
    "recently , tripartite hypergraphs have been proposed to model tagged social networks , also known as folksonomies  @xcite .",
    "the concept of latent space has been initially introduced to model homophily and similarity in social networks  @xcite . lately",
    ", latent space models are attracting great interest in many diverse fields including sociology  @xcite , statistical physics  @xcite and computer science  @xcite .",
    "another closely related research area is that on random geometric graphs , well - studied in mathematics and engineering  @xcite , particularly due to its relevance to wireless networks  @xcite .",
    "two models of random bipartite geometric graphs have been proposed recently .",
    "the first model is the ab random geometric graph ( ab rgg )  @xcite , defined as the two sets of points scattered as two independent poisson processes in euclidean space with connections between points from different sets established if distance between them is less then the threshold distance . ab rggs are motivated by wireless networks where transmission and reception of a signal occurs at different frequencies  @xcite .",
    "thus , of primary interest in ab rggs are the connectivity and percolation properties  @xcite .",
    "the second model is inspired by the hidden variable formalism  @xcite : network nodes correspond to points in the latent space and connections between them are drawn with probabilities depending on distances between the nodes in the underlying space .",
    "it was shown in  @xcite that if latent geometry is hyperbolic , then random geometric graphs in it reproduce common structural and dynamical properties of unipartite networks  scale - free degree distribution , strong clustering , community structure , and large - scale growth dynamics .",
    "equivalent to hyperbolic random graphs are random graphs in euclidean space with power - law distributed hidden variables  @xcite .",
    "this model has been recently generalized to bipartite networks in  @xcite , where it was called the @xmath35 model , and utilized to study cell metabolism .",
    "in this section we conduct a detailed analysis of the @xmath35 model of a bipartite network in the simplest compact latent space , circle @xmath36 .",
    "we refer to the two groups of nodes in a bipartite network as top and bottom nodes , and denote their number by @xmath38 and @xmath39 respectively . within the modeling framework we consider , network nodes correspond to points in a geometric space , and as a result , every node of the network is characterized by its coordinates in this space . to achieve heterogeneity in node degrees and to allow some nodes to connect over large distances ,",
    "every node is also assigned a hidden variable . to distinguish top and bottom nodes we denote these hidden variables as @xmath40 and @xmath41 respectively .    to form a bipartite network , every top - bottom pair of nodes @xmath42",
    "is connected with a probability @xmath43 , which depends on the distance between the nodes and their hidden variables , @xmath44 where @xmath45 is the connection probability function , @xmath46 is the distance between the nodes in the geometric space , and @xmath47 is a characteristic distance scale , allowing one to vary the importance of small distances depending on the nodes hidden variables .",
    "even though any integrable function @xmath45 can serve as the connection probability function , we use @xmath48 where parameter @xmath49 controls the abundance of short - distance connections . the larger the @xmath50 , the more preferred the shorter - distance connections .",
    "the choice for the connection probability function ( eq .  ( [ eq : conn_prob ] ) ) is dictated by the maximum entropy principle  @xcite .",
    "we focus on the simplest realization of the model , where top and bottom nodes are placed uniformly at random on a @xmath16-dimensional euclidean ring @xmath36 of radius @xmath51 . given @xmath51 , the densities of top and bottom nodes on the ring",
    "are @xmath52 and @xmath53 .",
    "the hidden variables of the top and bottom nodes are drawn at random from probability density functions ( pdfs ) @xmath54 and @xmath55 . to ease notation , in the rest of the paper we drop the indices from the top and bottom hidden variable distributions , i.e. , @xmath56 and @xmath57 . to achieve heterogeneous degree distributions , we choose the characteristic scale in eq .",
    "( [ eq : r_ij ] ) as @xmath58 , which allows nodes with large hidden variables to connect over large distances with higher probability .",
    "parameter @xmath59 rescales all latent distances and controls the expected degrees of the top and bottom domains . without loss of generality , we set @xmath60 , which corresponds to the unit density of top nodes , i.e. , @xmath61 .",
    "we are primarily interested in sparse bipartite networks , @xmath62 , where @xmath63 is the number of edges    as both top and bottom nodes lie on a euclidean ring @xmath36 , this model is called @xmath35 model .",
    "the model is fully specified by the number of top and bottom nodes @xmath38 and @xmath39 , the connection probability function @xmath45 , and the pdfs @xmath64 and @xmath65 .",
    "it can be summarized as follows :    1 .",
    "sample the angular coordinates of top nodes @xmath66 , @xmath67 , uniformly at random from @xmath68 $ ] , and their hidden variables @xmath69 , @xmath67 , from the pdf @xmath64 ; 2 .",
    "sample the angular coordinates of bottom nodes @xmath70 , @xmath71 , uniformly at random from @xmath68 $ ] , and their hidden variables @xmath72 , @xmath71 , from the pdf @xmath65 ; 3 .",
    "connect every top - bottom node pair with probability @xmath73^{\\beta}},\\\\ d(\\theta_i , \\phi_j ) & = & r|\\pi - | \\pi -|\\theta_i - \\phi_j|||,\\nonumber\\\\ d_{c}\\left(\\kappa_i , \\lambda_j\\right ) & = & \\mu   \\kappa_i \\lambda_j . \\nonumber\\end{aligned}\\ ] ]    the hidden variables in the @xmath35 model allow long distance connections among some nodes and are necessary to achieve heterogeneous degree distributions .",
    "an alternative approach to achieve heterogeneity in node degrees is to consider latent spaces of non - zero curvature .",
    "even though both approaches are fully equivalent  ( see appendix  [ app : h2h2 ] ) , we utilize the former approach as it is more convenient for calculations .",
    "the basic topological properties of synthetic networks constructed by the @xmath37 model can be obtained in a straightforward manner . since",
    "angular node coordinates are sampled uniformly at random from @xmath17 $ ] , the expected degree of a top node with hidden variable @xmath74 and angular position @xmath75 , @xmath76 , is given by @xmath77 resulting in @xmath78 where @xmath79 and @xmath80 .",
    "notice that @xmath76 is independent of @xmath75 due to the uniform angular distribution of nodes .",
    "the expected degree of the entire top node domain , @xmath81 , is given by averaging @xmath82 over all possible @xmath74 values , @xmath83 where @xmath84 .",
    "since the model is defined symmetrically for top and bottom nodes , the expected degrees for the bottom domain can be obtained by swapping top and bottom node variables in eqs .",
    "( [ avg_k1_first ] ) and ( [ avg_k2_first ] ) , @xmath85 it can be seen from eqs .  ( [ avg_k1_first ] ) and ( [ avg_l1_first ] ) that @xmath86 is a dumb parameter in the sense that for any particular value of @xmath86 , one can always rescale the hidden variables assigned to top and bottom nodes , @xmath87 , in order to obtain desired @xmath88 and @xmath89 values . therefore , to simplify notation we set @xmath90 the second equality in the above relation holds since the expected number of links in the bipartite network is @xmath91 . using eq .",
    "( [ eq : mu ] ) , we can rewrite eqs .",
    "( [ avg_k1_first]-[avg_l2_first ] ) as @xmath92 eqs .",
    "( [ avg_k1 ] ) and ( [ avg_l1 ] ) indicate that the hidden variables of nodes are their expected degree values in the resulting topology .",
    "we rely on this observation next , in order to deduce the functional forms of @xmath64 and @xmath65 leading to desired degree distributions @xmath9 and @xmath93 for the top and bottom domains .      to compute the degree distributions of the top and bottom nodes we consider the propagators @xmath94 and @xmath95 .",
    "the propagator @xmath94 ( @xmath95 ) is defined as the probability that a top ( bottom ) node with hidden variables @xmath96 ( @xmath97 ) forms exactly @xmath5 ( @xmath98 ) connections to bottom ( top ) nodes .",
    "since the angular coordinates of nodes are uniformly distributed , the propagators do not depend on the node angles @xmath75 and @xmath99 , and in the case of sparse bipartite networks they can be approximated by the poisson distribution  @xcite , that is , @xmath100^{k}/k!,\\\\ \\label{eq : g2}g(\\ell|\\lambda,\\phi ) = g(\\ell|\\lambda)&\\approx & e^{-\\lambda}\\left[\\lambda\\right]^{\\ell}/\\ell!.\\end{aligned}\\ ] ] the degree distributions of the top and bottom domains are obtained by averaging the corresponding propagators over the possible values of the hidden variables , @xmath101 it can be seen from eqs .",
    "( [ eq : g1]-[eq : bip_pl ] ) that @xmath9 and @xmath93 are independent of one another  they only depend on @xmath64 and @xmath65 , respectively .",
    "thus , the functional forms of @xmath9 and @xmath93 can be constructed independently , by engineering proper distributions of hidden variables @xmath64 and @xmath65 .",
    "furthermore , the poissonian character of the propagators @xmath102 and @xmath103 indicates that the resulting degree values of nodes in both domains are narrowly distributed around their hidden variables .",
    "this means that the functional forms of @xmath9 and @xmath93 will be similar to those of @xmath64 and @xmath65 .",
    "based on the degree distributions of the top and bottom domains , many real bipartite networks fall into two categories .",
    "the first category corresponds to networks with scale - free degree distribution in both top and bottom domains ( sf / sf ) .",
    "the second category corresponds to networks with scale - free degree distribution in one domain and poisson degree distribution in the other domain ( sf / ps ) . among the real networks that we consider ,",
    "imdb , wikipedia , and the hep collaboration network fall into the first category .",
    "the condmat collaboration network and the network of metabolic reactions fall into the second category  ( see appendix  [ app : data ] ) .",
    "since @xmath9 and @xmath64 are expected to be of similar functional form , one can see that a scale - free degree distribution @xmath104 can be obtained by using the continuous power - law distribution of @xmath74 on @xmath105 @xmath106 with the desired ( `` target '' ) value of exponent @xmath107 of degree distribution @xmath9 .",
    "indeed , it follows from eqs .",
    "( [ eq : g1 ] ) and ( [ eq : bip_pk ] ) that in this case @xmath108}{\\gamma\\left [ k + 1\\right]}\\sim k^{-\\gamma}.\\ ] ] parameter @xmath109 is the smallest @xmath74 value , i.e. , the expected minimum node degree , which also controls the mean value of @xmath74 @xmath110 and the expected averaged degree @xmath111  ( [ avg_k2 ] ) .",
    "the poisson degree distribution can be obtained by choosing @xmath112 , where @xmath113 is the dirac delta function and @xmath114 is the expected degree of the domain .",
    "the degree distribution @xmath9 in this case is given by @xmath115^{k } / k!.\\ ] ] due to the symmetry of the model , the degree distribution of the bottom domain can be obtained similarly through the proper choice of @xmath65 .",
    "the independence of @xmath9 and @xmath93 allows one to construct bipartite networks with an arbitrary combination of degree distributions for the top and bottom domains .",
    "for illustration , we visualize in fig .",
    "[ fig : illustr ] a toy sf / ps network consisting of @xmath116 and @xmath15 nodes .",
    "the hidden variables of the top nodes are drawn from the pdf @xmath117 , @xmath118 , @xmath119 , @xmath120 , while the bottom node hidden variables are chosen as @xmath121 for all nodes @xmath22 , where @xmath122 satisfies @xmath123 .",
    "the connections are drawn with probability @xmath45 prescribed by eq .",
    "( [ eq : s1_r ] ) with @xmath124 .",
    "the number of common neighbors is the most basic non - binary network - based measure of similarity between two nodes in a bipartite network ",
    "the smaller the similarity distance between two nodes , the more similar the nodes are , and the larger is the number of neighbors they are expected to share .",
    "this makes the number of common neighbors a crucial measure , allowing one to estimate the similarity distance between two nodes in a bipartite network , section  [ sec : inference ] .",
    "below , we analyze this measure in the @xmath37 model .",
    "consider two top nodes characterized by hidden variables @xmath125 and @xmath126 and angular coordinates @xmath127 and @xmath128 .",
    "the probability @xmath129 that these two nodes are simultaneously connected to a bottom node with hidden variable @xmath130 and angular coordinate @xmath99 is @xmath131 where @xmath132 is the connection probability in eq .",
    "( [ eq : s1_r ] ) .",
    "the expected number of common neighbors between these two top nodes , @xmath133 , can be calculated by averaging @xmath129 over all possible positions @xmath99 and hidden variables @xmath130 of bottom nodes , @xmath134 due to the uniform distribution of angular coordinates , @xmath133 depends on the angular ( similarity ) distance between the two top nodes , @xmath135 , and not on their individual coordinates @xmath136 and @xmath137 .",
    "that is , @xmath138 .",
    "it is straightforward to verify ( see appendix  [ app : comn_nbrs_ave ] ) that @xmath139 is independent of the network size @xmath140 .",
    "it depends only on the node hidden variables @xmath141 and the distance between the nodes @xmath142 .",
    "it follows from eq .",
    "( [ eq : paper_avg_m ] ) that for any values of @xmath141 , @xmath139 decreases as the angular distance @xmath143 increases , for both domains of sf / sf and of sf / ps bipartite networks , following a power law , @xmath144 where the exponent @xmath145 is the parameter in the connection probability function in eq .",
    "( [ eq : s1_r ] ) , see fig .",
    "[ fig : s1s1_pm]*a * and eq .",
    "( [ eq : app : ru ] ) in appendix  [ app : proj ] .",
    "the conditional probability for two nodes with hidden variables @xmath141 separated by angular distance @xmath143 to have @xmath7 common neighbors , is narrowly distributed around its ensemble average @xmath139 , and in the case of sparse bipartite networks can be approximated by the poisson distribution @xmath146^{m}/m!,\\\\\\end{aligned}\\ ] ] where @xmath147 is the shorthand notation for @xmath148 , see fig .",
    "[ fig : s1s1_pm]*b * and appendix  [ app : comn_nbrs_dist ] .",
    "finally , the unconditional distribution of the number of common neighbors , @xmath6 , is obtained by averaging @xmath147 over all possible hidden variables @xmath141 and angular distances",
    "@xmath149 , @xmath150 as before , the corresponding expressions for the bottom domain nodes can be obtained by swapping the variables ( @xmath96 ) with ( @xmath97 ) and following the same analysis .",
    "the solution of the integral in eq .",
    "( [ eq : pm_integral ] ) depends on the functional form of @xmath147 , which in turn depends on the pdfs of the hidden variables and on the value of parameter @xmath50 .",
    "while in general there is no closed - form solution to eq .",
    "( [ eq : pm_integral ] ) , different closed - form solutions can be obtained for integer values of @xmath50 .",
    "for instance , when @xmath151 and @xmath152 ( sf / ps networks ) , we can show that @xmath6 for the top domain scales as @xmath153 with @xmath154  ( see appendix  [ app : comn_nbrs_dist ] ) .",
    "our numerical experiments indicate that a similar power - law scaling of @xmath6 also holds for a range of @xmath50 values and for both domains of sf / sf networks , cf .",
    "[ fig : s1s1_pm]*c * and fig .",
    "[ fig : si_pm]*c - h * in appendix  [ app : comn_nbrs_dist ] .",
    "the power - law scaling of @xmath6 means that a large number of node pairs have many common neighbors , and therefore , many @xmath12-loops passing through them , which as explained in sec .",
    "[ sec : intro ] implies strong bipartite clustering .",
    "we focus on bipartite clustering below .",
    "to quantify bipartite clustering , we consider the bipartite clustering coefficient @xmath155 introduced by zhang et al .",
    "@xcite , which aims at quantifying the density of @xmath12-loops adjacent to a node @xmath22 , @xmath156}.\\ ] ] the summation @xmath157 goes over all pairs of neighbors @xmath158 of node @xmath22 , @xmath159 is the number of common neighbors between @xmath160 and @xmath161 , and @xmath162 and @xmath163 are the degrees of @xmath160 and @xmath161 . as seen from eq .",
    "( [ eq : bip_clust ] ) , @xmath155 is essentially a normalized measure of the density of common neighbors in the vicinity of node @xmath22 .",
    "@xmath155 has also the following simple and intuitive similarity - based interpretation .",
    "let @xmath164 and @xmath165 be the sets of neighbors of nodes @xmath160 and @xmath161 excluding node @xmath22 .",
    "then @xmath166 is the size of the intersection of @xmath164 and @xmath165 , @xmath167 , while @xmath168 is their union .",
    "therefore , eq .",
    "( [ eq : bip_clust ] ) can be written as @xmath169 the ratio of the intersection and union of two sets is known as the jaccard similarity coefficient  @xcite .",
    "@xmath170 is given by the ratio of the sums of intersections and unions for all pairs of @xmath22 s neighbors ( eq .  ( [ eq : combined_jaccard ] ) ) .",
    "therefore , @xmath170 can be interpreted as a combined or effective jaccard similarity of @xmath22 s neighbors .",
    "the average bipartite clustering coefficients @xmath171 for the top and bottom node domains can be written as @xmath172 where @xmath173 and @xmath174 are the sets of all top and bottom nodes .",
    "expressions for the expected bipartite clustering coefficients in the @xmath37 model are derived in appendix  [ app : clustering ] .",
    "qualitatively , @xmath171 are large in the @xmath37 model and independent of the number of top and bottom nodes @xmath175 , see fig .",
    "[ fig : s1s1_pm]*d*. this result follows from the fact that the expected number of common neighbors @xmath176 between two nodes @xmath42 is independent of the network size  ( appendix  [ app : comn_nbrs_ave ] ) .",
    "in contrast , in the degree - preserving randomized counterparts of the modeled networks , the bipartite clustering coefficient is orders of magnitude smaller , and vanishes with the network size as @xmath177 , with @xmath178 ( see fig .",
    "[ fig : s1s1_pm]*d * ) , which is the expected behavior for uncorrelated bipartite networks  @xcite .",
    "a similar behavior holds for the real bipartite networks we consider ( fig .",
    "[ fig : s1s1_pm]*d * ) .",
    "another important property of bipartite clustering coefficient in sf / sf networks is its self - similarity with respect to a degree - thresholding renormalization procedure  @xcite .",
    "non - iterative removal of top and bottom nodes with degrees smaller than certain thresholds @xmath179 does not affect the functional form of degree - dependent bipartite clustering coefficients , which follow the same master - curve when plotted as a function of the node degree normalized by the average degree of the corresponding domain  ( see fig .  [",
    "fig : all_self ] and section  [ app : clustering ] ) .    taken together ,",
    "our results in this section indicate that the @xmath37 model can generate a variety of bipartite network topologies , whose main characteristics are consistent with those of real bipartite systems .",
    "a natural question then is whether it is possible to reverse the synthesis , and given a bipartite network , to infer the geometric coordinates and hidden variables of its nodes , in a way congruent with the @xmath37 model .",
    "a tempting approach would be to first project the bipartite network onto one of its node domains , apply existing maximum - likelihood estimation techniques  @xcite to map the resulting one - mode projection , and then use the obtained unipartite map to infer the node coordinates of the other domain  @xcite .",
    "a necessary condition for this approach to work is that the geometry of the bipartite network is properly preserved in its one - mode projections .",
    "we next examine to what extend this is the case .",
    "in one - mode projections we project a bipartite network onto one of its node domains , such that nodes of the domain are connected if they have at least one common neighbor in the bipartite network .",
    "even though one - mode projections allow one to study bipartite networks using tools developed for unipartite networks , projections can lead to significant loss of information and artificial inflation of the projected network with fully connected subgraphs . in spite of the extensive history of studies of bipartite networks  @xcite , it is still unclear how to quantify the extent to which information is lost in one - mode projections and if there are circumstances where one - mode projections are still acceptable .    to shed light on these questions , here",
    "we analyze the effects of one - mode projections in the context of the @xmath180 model .",
    "specifically , we ask if the latent geometry of a bipartite network is preserved in its one - mode projections .",
    "answering this question is important , as it can shed light on how well latent geometry beneath bipartite networks can be inferred using algorithms developed for unipartite networks such as those in  @xcite . in the following ,",
    "we analyze the projections onto the top node domain . as before ,",
    "the results for the bottom domain can be obtained by swapping the corresponding top and bottom domain variables .",
    "the probability @xmath181 that two top domain nodes @xmath22 and @xmath160 are connected in the one - mode projection , is the probability that the nodes have at least one common neighbor in the bottom domain , @xmath182 , \\label{eq : uni_conn}\\ ] ] where @xmath183 enumerates the nodes of the bottom domain , and @xmath132 is the connection probability in eq .",
    "( [ eq : s1_r ] ) .",
    "we say that the latent geometry of the bipartite network is preserved in its one - mode projection if @xmath181 preserves the functional form prescribed by eq .",
    "( [ eq : r_ij ] ) : @xmath184 where @xmath185 is a monotone decreasing function of @xmath186 , which may or may not coincide with our choice for @xmath45 in eq .",
    "( [ eq : conn_prob ] ) , and @xmath187 is the characteristic distance scale for a pair of nodes with @xmath188 and @xmath189 in the projected network . in the case",
    "@xmath190 takes the form of eq .",
    "( [ eq : proj_conn_form ] ) one could map projections of real bipartite networks to latent spaces using methods developed for unipartite networks . if , on the other hand , @xmath190 is not in the form of eq .",
    "( [ eq : proj_conn_form ] ) , these techniques may not map correctly bipartite networks , and they either need to be adjusted , or different techniques need to be developed .    to test",
    "if latent geometry is preserved in one  mode projections we compute @xmath190 below .",
    "we first note that since @xmath191 and @xmath192 depend on @xmath193 and @xmath194 , @xmath181 also depends on @xmath195 . due to the uniform distribution of the @xmath196",
    ", @xmath181 does not depend on the individual values of @xmath197 and @xmath198 per se , but on the angular distance between the nodes , @xmath199 .",
    "thus , we can set , without loss of generality , @xmath200 and @xmath201 . assuming a sufficiently large number of bottom nodes",
    "@xmath39 we can rewrite eq .",
    "( [ eq : uni_conn ] ) as @xmath202   = \\\\ \\nonumber \\frac{m}{2\\pi } \\iint   { \\rm d}\\phi \\ , { \\rm d}\\lambda \\ , \\rho(\\lambda )     { \\rm ln } \\left[1-r(\\kappa_i,0;\\lambda,\\phi)r(\\kappa_j,\\delta\\theta_{ij};\\lambda,\\phi)\\right].\\\\ \\label{eq : lnru_scaling}\\end{aligned}\\ ] ] then we replace the logarithm on the right hand side of eq .",
    "( [ eq : lnru_scaling ] ) with its taylor series expansion , @xmath203 & = & \\\\ \\nonumber \\sum_{n=1}^{\\infty } \\frac{m}{2 \\pi n } \\int { \\rm d } \\lambda \\ , \\rho(\\lambda )   \\int   { \\rm d}\\phi \\ , [ r(\\kappa_i , 0;\\lambda,\\phi)r(\\kappa_j,\\delta\\theta_{ij};\\lambda,\\phi)]^n.\\\\\\end{aligned}\\ ] ] we note that the first term of the sum in the above relation , i.e. , the term corresponding to @xmath204 , is the expected number of common neighbors between nodes @xmath22 and @xmath160 , @xmath176 .",
    "second , we perform the change of integration variable @xmath205 , to obtain @xmath206 \\propto   \\sqrt{\\kappa_i\\kappa_j } \\int \\lambda \\ , { \\rm d } \\lambda   \\ ,",
    "\\rho(\\lambda ) \\sum_{n=1}^{\\infty } \\frac{1}{n } \\times \\nonumber \\\\ &",
    "\\int_{-\\infty}^{\\infty } { \\rm d } x   \\ , \\left[r \\left(\\sqrt{\\frac{\\kappa_{j } } { \\kappa_{i } } } \\left|x\\right| \\right ) r \\left(\\sqrt{\\frac{\\kappa_{i } } { \\kappa_{j } } } \\left|x-\\frac{r \\delta \\theta_{ij } } { \\mu \\sqrt{\\kappa_i\\kappa_j } \\lambda}\\right| \\right)\\right]^{n}.\\end{aligned}\\ ] ] the leading contributions to the inner integrals in eq .",
    "( [ eq : uni_conn5 ] ) come from the two maxima of each integrand at @xmath207 and @xmath208 .",
    "specifically , for large @xmath209 , connection probability @xmath190 can be approximated , to the leading order , as @xmath210 & \\sim { \\overline{\\lambda^{1+\\beta } } \\over m^{\\beta}}\\left(\\delta\\theta_{ij } \\over d_{u}(\\kappa_i , \\kappa_j )    \\right)^{-\\beta},\\\\   d_{u}(\\kappa_i,\\kappa_j ) & = \\left(\\kappa_i^{\\beta}\\kappa_j+\\kappa_i\\kappa_j^{\\beta }   \\right ) ^{1 \\over \\beta},\\nonumber\\end{aligned}\\ ] ] where @xmath211 ( appendix  [ app : proj ] ) .",
    "the functional form of @xmath181 in eq .",
    "( [ eq : uni_scaling2 ] ) is clearly different from that in eq .",
    "( [ eq : proj_conn_form ] ) since the characteristic scale @xmath212 is different , indicating that latent geometry is not preserved in one  mode projections , as one could intuitively expect .    at the same time",
    ", it is important to note certain similarity between one  mode projection connection probability @xmath181 and original bipartite connection probability @xmath45 .",
    "both are decreasing functions of the angular distance @xmath213 normalized by characteristic scales @xmath214 , albeit these scales are different in the two cases . yet",
    "since in both cases @xmath214 is larger for pairs of nodes with larger hidden variables , nodes characterized by larger @xmath74 values are more likely to connect over large distances and , therefore , are expected to have larger degrees not only in the bipartite network but also in its one - mode projection , consistent with our findings in ref .",
    "@xcite . furthermore , as seen from eq .",
    "( [ eq : uni_scaling2 ] ) , for sufficiently large @xmath215 values @xmath190 as a function of @xmath216 has the same asymptotic behavior as @xmath45 , @xmath217 \\sim \\delta\\theta_{ij}^{-\\beta}.\\ ] ] our observation that latent geometry is not exactly preserved in one  mode projections is not specific to our choice of @xmath45 as the connection probability function in the @xmath35 model .",
    "we show below that the latent geometry can not be fully preserved in one - mode projections , regardless of the functional form of @xmath45 in eq .",
    "( [ eq : conn_prob ] ) . indeed , assuming that @xmath181 is given by eq .",
    "( [ eq : proj_conn_form ] ) , we can write @xmath218 = g\\left({\\delta\\theta_{ij } \\over \\kappa_i   \\kappa_j}\\right),\\ ] ] where @xmath219 $ ] .",
    "next , we observe that the right hand side of eq .",
    "( [ eq : uni_conn5 ] ) is a sum of convolutions and can be transformed into products of fourier transforms , yielding @xmath220 , \\label{eq : uni_fourier}\\ ] ] where @xmath221 , and @xmath222^{n } e^{iwx}$ ] . since the left hand side of eq .",
    "( [ eq : uni_fourier ] ) does not depend on @xmath188 and @xmath189 while the right hand side does , the only admissible solution is @xmath223 .",
    "this solution corresponds to @xmath224 , where @xmath113 is the dirac delta function , and can not be interpreted as a connection probability function .",
    "we thus find that latent geometry can not be fully preserved for any functional form of the connection probability function @xmath45 . at the same time , our results indicate that connection probability in one  mode projections behaves similar to that in the original network for large angular distances .",
    "this result implies that it may be possible to infer approximately the latent geometry of real bipartite networks from their one - mode projections .",
    "yet it remains unclear how accurate such inferences can be , especially in small bipartite networks whose one  mode projections are overinflated with cliques of sizes comparable to the network size . such problems can render geometry inference using one - mode projections highly inaccurate , especially in sf / sf networks with power law exponents @xmath107 close to @xmath225 , as discussed at the end of appendix  [ app : proj ] .",
    "here we fill in the details on the estimation of the effective connection probability between nodes in one - mode projections .",
    "we consider the top node domain  similar results hold for the bottom domain .",
    "any two nodes @xmath398 in the top domain are connected in their one - mode projection if they share at least one neighbor in the original bipartite network .",
    "( [ eq : uni_conn5 ] ) in the main text allows to estimate ( up to a proportionality coefficient ) the connection probability of the two nodes in the one - mode projection , @xmath190 , as @xmath218 \\propto   \\sqrt{\\kappa_i\\kappa_j } \\int \\lambda \\ , { \\rm d } \\lambda \\ , \\rho(\\lambda ) \\sum_{n=1}^{\\infty } { 1",
    "\\over n } \\int_{-\\infty}^{\\infty } { \\rm d } x \\ , \\left[r \\left(\\sqrt{{\\kappa_{j } \\over \\kappa_{i } } } \\left|x\\right| \\right ) r \\left(\\sqrt{{\\kappa_{i } \\over \\kappa_{j } } } \\left|x-{r \\delta \\theta_{ij }   \\over \\mu \\sqrt{\\kappa_i\\kappa_j } \\lambda}\\right| \\right)\\right]^{n}. \\label{eq : app_uni_conn5}\\ ] ] note that the first term in the sum of eq .",
    "( [ eq : app_uni_conn5 ] ) , i.e. , the term with @xmath204 , is proportional to the expected number of common neighbors between nodes @xmath22 and @xmath160 .",
    "the inner integral in eq .",
    "( [ eq : app_uni_conn5 ] ) has two maxima at @xmath399 and @xmath400 .",
    "below , we estimate @xmath190 for large @xmath209 ( recall that @xmath401 ) .",
    "to evaluate eq .",
    "( [ eq : app_uni_conn5 ] ) , we split the integration interval into the @xmath402 sub - intervals : @xmath403 , @xmath404 , @xmath405 , @xmath406 , and @xmath407 , by choosing @xmath408 such that @xmath409 and @xmath410 , i.e. , @xmath411 where constant @xmath412 .",
    "we start by evaluating the inner integral for the @xmath413 term of eq .",
    "( [ eq : app_uni_conn5 ] ) in the second sub - region .",
    "we denote this integral by @xmath414 .",
    "to ease notation , we drop the indices @xmath398 from the angular distance , i.e. , @xmath415 , @xmath416 .",
    "when @xmath417 , within the integration interval @xmath418 , and @xmath414 can be approximated as @xmath419^{n } \\left[{1 \\over 1 + \\left ( \\sqrt{\\kappa_i \\over \\kappa_j } \\left|x-\\delta\\widetilde{\\theta}\\right|",
    "\\right ) ^{\\beta } } \\right]^{n } \\approx { 2   \\overline{\\lambda^{1+n\\beta } } \\sqrt{\\kappa_i \\over \\kappa_j } i_{n}\\left(\\beta;\\delta",
    "\\sqrt{\\kappa_j   \\over \\kappa_i}\\right ) \\over\\left ( \\frac{r\\delta\\theta}{\\mu \\kappa_j } \\right ) ^{n\\beta}},\\ ] ] where @xmath420 and @xmath421 .",
    "@xmath422 increases as a function of @xmath423 and it is bounded from above as @xmath424\\gamma\\left[1 + 1/\\beta\\right ] \\over \\gamma\\left [ n \\right ] } , \\label{eq : integral2}\\ ] ] where @xmath425 $ ] is the gamma function . depending on @xmath65 , @xmath426 may depend on @xmath39 . since @xmath427 and the other terms in eq .",
    "( [ eq : integral2 ] ) are independent of the network size , we can write @xmath428 the evaluation of the integral in the fourth sub - region , @xmath429 , is the same as @xmath430 but with the @xmath188 and @xmath189 variables swapped , @xmath431^{n } \\left[{1 \\over 1 + \\left ( \\sqrt{\\kappa_i \\over \\kappa_j } \\left|x-\\delta\\widetilde{\\theta}\\right|",
    "\\right ) ^{\\beta } } \\right]^{n } \\approx { 2 \\overline{\\lambda^{1+n\\beta } } \\sqrt{\\kappa_j \\over \\kappa_i } i_{n}\\left(\\beta;\\delta \\sqrt{\\kappa_i \\over \\kappa_j}\\right ) \\over\\left ( \\frac{r\\delta\\theta}{\\mu \\kappa_i } \\right ) ^{n\\beta}}. \\label{j_4_scaling}\\ ] ] therefore , similar to @xmath430 , @xmath432 the integrals in the fifth and third sub - regions , @xmath433 , @xmath434 , are evaluated below @xmath435^{n } \\left[{1 \\over 1 + \\left(\\sqrt{\\kappa_i \\over \\kappa_j } \\left|x-\\delta\\widetilde{\\theta}\\right|",
    "\\right ) ^{\\beta } } \\right]^{n } \\\\ & \\propto \\int \\lambda",
    "\\rho(\\lambda ) \\ , { \\rm d } \\lambda \\int_{\\delta\\widetilde{\\theta}+\\delta}^{\\infty } \\ , { { \\rm d } \\ , x \\over x ^{n\\beta } ( x-\\delta\\widetilde{\\theta})^{n\\beta } } \\leq   \\int \\lambda   \\rho(\\lambda ) \\ , { \\rm d } \\lambda   \\int_{\\delta\\widetilde{\\theta}+\\delta}^{\\infty }   { { \\rm d } x   \\over x ^{n\\beta } \\delta ^{n\\beta } }   \\leq \\int \\lambda",
    "\\rho(\\lambda ) \\ , { \\rm d } \\lambda    \\int_{\\delta\\widetilde{\\theta}}^{\\infty } { { \\rm d } x \\over x ^{n\\beta } \\delta ^{n\\beta } } \\sim \\overline{\\lambda^{2n\\beta } }   m^{1 - 2n\\beta } , \\label{j_5_scaling}\\end{aligned}\\ ] ] where the last scaling holds due to eq .",
    "( [ eq : proj_delta ] ) , and @xmath436 the integral in the first sub - region , @xmath437 can be approximated similar to @xmath438 , resulting in @xmath439    in the case of sf / ps networks @xmath440 and therefore , all moments of @xmath65 are independent of @xmath39 . in the case of sf / sf networks @xmath441 ,",
    "@xmath442 , and sufficiently high moments of @xmath65 are size dependent . in a finite sample of",
    "randomly drawn @xmath130 values , the maximum value @xmath294 can be estimated with the natural cut off , @xmath443  @xcite .",
    "the natural cut - off allows one to estimate size - dependent moments of @xmath65 as @xmath444    it is straightforward to verify using eqs .",
    "( [ j_2_scaling]),([j_4_scaling]),([j_5_scaling]),([j_3_scaling ] ) , and ( [ j_1_scaling ] ) that @xmath445 and @xmath438 decrease faster than @xmath430 and @xmath429 as @xmath39 increases , for both sf / ps and sf / sf bipartite networks . therefore , to the leading order , @xmath190 can be approximated as @xmath446 \\propto   \\frac{\\overline{\\lambda^{1+\\beta } } } { \\left(m \\delta \\theta_{ij}\\right)^{\\beta } }   \\left[\\kappa_i \\left(\\kappa_j\\right)^{\\beta }   i_{1}\\left(\\beta ; \\delta\\sqrt{{\\kappa_j\\over \\kappa_i}}\\right )    + \\kappa_j \\left(\\kappa_i\\right)^{\\beta}i_{1}\\left(\\beta ; \\delta\\sqrt{{\\kappa_i\\over \\kappa_j}}\\right ) \\right ] , \\label{eq : app : ru}\\ ] ] where @xmath447 .",
    "it is important to note that since this leading order corresponds to the @xmath204 term in eq .",
    "( [ eq : app_uni_conn5 ] ) , and since this term is proportional to the expected number of common neighbors between the two nodes , @xmath446 \\propto \\overline{m}(\\kappa_i , \\kappa_j , \\delta\\theta_{ij}),\\ ] ] then the right hand side of eq .",
    "( [ eq : app : ru ] ) is proportional to the expected number of common neighbors between nodes @xmath22 and @xmath160 , proving eq .",
    "( [ eq : avg_m_vs_dtheta ] ) in the main text .",
    "finally , since @xmath448 , @xmath449 , and therefore @xmath450 & \\sim { \\overline{\\lambda^{1+\\beta } } \\over m^{\\beta }   } \\left(\\delta\\theta_{ij } \\over d_{u}(\\kappa_i , \\kappa_j )    \\right)^{-\\beta},\\\\   d_{u}(\\kappa_i,\\kappa_j ) & \\equiv \\left(\\kappa_i^{\\beta}\\kappa_j+\\kappa_i\\kappa_j^{\\beta }   \\right ) ^{1 \\over \\beta}\\nonumber,\\end{aligned}\\ ] ] proving eq .",
    "( [ eq : uni_scaling2 ] ) in the main text .",
    "equation  ( [ eq : lnru ] ) allows to analyze the behavior of @xmath451 $ ] as the system size @xmath452 increases . in the case of sf / ps networks @xmath453 is finite and independent of @xmath39 , leading to @xmath446 \\sim m^{-\\beta}. \\label{eq : scaling_ps}\\ ] ] in the case of sf / sf networks , @xmath426 is given by eq .",
    "( [ eq : app : moment1 ] ) and results in @xmath446 \\sim m^{-\\frac{(\\gamma-2)(1+\\beta)}{\\gamma-1}}. \\label{eq : scaling_sf}\\ ] ] as can be seen from eqs .",
    "( [ eq : scaling_ps ] ) and ( [ eq : scaling_sf ] ) , the connection probability @xmath190 of top nodes in the one - mode projection decreases as @xmath39 increases , and scales as @xmath454 , where exponent @xmath455 in sf / ps networks and @xmath456 in sf / sf networks .",
    "this result implies that one - mode projections of sufficiently large bipartite networks are sparse . however , we note that @xmath457 in sf / sf networks as the power law exponent of the bottom domain @xmath458 .",
    "this result implies that one - mode projections of finite sf / sf networks characterized by @xmath107 close to @xmath225 and small @xmath50 values may be very dense and overinflated with fully connected subgraphs .",
    "this effect can render geometry inference using the one - mode projections inaccurate .",
    "we have seen that the @xmath37 model can construct synthetic bipartite networks that resemble real networks across a range of non - trivial structural characteristics , which include : ( i ) heterogeneity in distributions of node degrees for at least one of the two domains of nodes ; ( ii ) power law distribution of the number of common neighbors shared between pairs of nodes ; and ( iii ) strong bipartite clustering .",
    "these results imply that we should be able to reverse the synthesis , and given a bipartite network , to infer the hidden variables of its nodes as well as their latent distances .",
    "below , we show that hidden variables and latent distances can be estimated from the observed node degrees and the common neighbors shared by nodes , respectively .",
    "recall from section  [ sec : basic_properties ] that the resulting node degree @xmath226 corresponding to a particular hidden variable @xmath188 is poisson distributed with expected value @xmath227 .",
    "thus , the node hidden variables can be estimated by the observed node degrees as @xmath228 since the variance of the poisson distribution is equal to its mean , this estimation works better for higher degree nodes , and can be used in the case of a scale - free degree distribution in the domain , see fig .",
    "[ fig : s1s1_infer]*a*. in the case of a poisson degree distribution in the domain , all nodes have identical hidden variables that can be estimated as @xmath229 where @xmath81 is the observed average degree in the domain .",
    "the angular distance separating two nodes can be estimated using the observed number of common neighbors between the nodes . as shown in section  [ comn_nbrs ] , the number of common neighbors @xmath230 shared by two nodes @xmath231 is poisson distributed with an expected value @xmath232 given by eq .",
    "( [ eq : paper_avg_m ] ) , which depends on the nodes hidden variables @xmath141 and their angular distance @xmath149 .",
    "if the observed number of common neighbors @xmath230 is sufficiently large , we can approximate @xmath232 as @xmath233 the angular distance @xmath149 can be estimated using eq .",
    "( [ eq : infer_m ] ) , which can be solved analytically for integer values of the model parameter @xmath234 or numerically otherwise .    to test the accuracy of the proposed estimation we consider an sf / ps modeled network with @xmath151 . in this case , @xmath235 for the top domain is given by @xmath236 ( see appendix  [ app : comn_nbrs_ave ] ) allowing us to estimate @xmath149 as @xmath237 we note that the above relation is an approximation and may yield angular distances outside the expected range @xmath238 $ ] if @xmath230 is too large or too small .",
    "this estimation procedure works well for pairs of nodes with large @xmath230 values , see fig .",
    "[ fig : s1s1_infer]*b * , and it can be used for a fast estimation of the pairwise latent similarity distances between such nodes , e.g. , in recommender systems .",
    "understanding the organizing principles determining the structure and evolution of real bipartite networks can lead to significant advances in many challenging problems including community detection  @xcite , understanding signaling pathways in gene regulatory networks  @xcite , multicast search  @xcite , and construction of efficient recommender systems  @xcite .",
    "we have shown that three common properties of many real bipartite networks  heterogeneous degree distributions , power - law distributions of the number of common neighbors , and strong bipartite clustering ",
    "appear as natural reflections of latent geometric spaces underlying these networks , where nodes are points in these spaces , while connections preferentially occur at smaller distances .",
    "the distances between nodes in the latent space can be regarded as generalized similarity measures , arising from projections of properly weighted combinations of node attributes , controlling the appearance of links between node pairs .    for our analysis , we have used the simplest possible bipartite network model with latent geometry ( @xmath180 model )  @xcite . within the model , both the power law distribution of the number of common neighbors and",
    "the strong bipartite clustering emerge naturally as reflections of the metric property , i.e. , the triangle inequality , of the latent space . to achieve heterogeneous degree distributions",
    "we have assigned hidden variables to both top and bottom node domains , so that nodes with larger hidden variables connect over larger distances with higher probability and , as a result , establish more connections than nodes with smaller hidden variables .    although not fully geometric , the @xmath180 model is equivalent to the @xmath239 model in appendix  [ app : h2h2 ] , which is fully geometric , not using any hidden variables ( other than node coordinates ) . in the @xmath239 model ,",
    "heterogeneous degree distributions are consequences of the exponential expansion of space in @xmath240 , coupled with proper boundary conditions .    as with unipartite networks ,",
    "a particularly pertinent question is the possibility to infer latent geometries underlying real bipartite systems . through the analysis of one - mode projections we have shown that latent geometry can not be fully preserved but can be approximately preserved in one - mode projections of both sf / ps and sf / sf bipartite networks in the @xmath35 model .",
    "this result supports the possibility of inferring latent geometries underlying real bipartite systems by inferring the geometries of their one - mode projections using existing techniques  @xcite , as in  @xcite .",
    "however , since geometry is not preserved exactly but only approximately , using one - mode projections can render geometry inference inaccurate , especially in smaller networks with weaker bipartite clustering .",
    "such inaccuracies are particularly high in sf / sf networks with power law exponents @xmath107 close to @xmath225 , calling for the development of proper methods to infer latent coordinates that do not use one - mode projections . we have shown that if instead of coordinates , only pairwise latent distances between nodes with large numbers of common neighbors are to be inferred , e.g. , in recommender systems  @xcite or in soft community detection  @xcite , then such inferences can be made quickly and reliably based on the common neighbor statistics .",
    "the bipartite actor - film network is constructed from the internet movie database  ( imdb )  @xcite .",
    "the network consists of two sets of nodes : actors ( top nodes ) and films ( bottom nodes ) .",
    "every actor is connected to all films in which she / he performed .",
    "we have excluded all films whose genre is labeled by imdb as ` adult ' .",
    "the excluded ` adult ' films represent a largely isolated subset of the original actor - film network .",
    "the considered network corresponds to the period from @xmath241 to @xmath242 .",
    "the condensed matter ( _ condmat _ ) collaboration network is constructed from the arxiv e - print archive  @xcite .",
    "the top and bottom nodes in the network are respectively authors and manuscripts published in the cond - mat section of the arxiv repository .",
    "every manuscript is connected to all of its authors .",
    "the network includes all manuscripts published in the cond - mat section of the arxiv as of @xmath243 .",
    "\\c ) _ . _ the high energy physics ( _ hep _ ) collaboration network is also constructed from the arxiv e - print archive  @xcite . the top and bottom nodes in the network are respectively authors and manuscripts published in the hep section of the arxiv repository .",
    "every manuscript is connected to all of its authors .",
    "the network includes all manuscripts published in the high energy physics section of the arxiv as of @xmath243 .",
    "the metabolic network is based on the dataset of metabolic reactions of @xmath244 organisms constructed by h. ma and a .- p .",
    "zeng  @xcite .",
    "the bipartite network consists of metabolic reactions ( bottom nodes ) and metabolites ( top nodes ) that are connected through these reactions .",
    "the constructed bipartite network of wikipedia  @xcite consists of users ( top nodes ) and articles ( bottom nodes ) .",
    "users are connected to all articles they have edited . in order to eliminate random edits , we connect users to articles which were edited by them at least three times .",
    "we consider users of the english wikipedia who have created an account and have a user discussion page as of april @xmath225 , @xmath245 .",
    "the data has been collected and processed in ref .",
    "@xcite .",
    "@xmath63 & @xmath81 & @xmath246 + actor - film network ( imdb ) & sf / sf & @xmath247 & 418696 & @xmath248 & 4.0 & 15.2 + condensed matter ( condmat ) collaboration network & sf / ps & 63799 & 79081 & 246351 & 3.9 & 3.1 + high energy physics ( hep ) collaboration network & sf / sf & 44267 & 108907 & 255306 & 5.8 & 2.3 + metabolic network & sf / ps & 2732 & 3568 & 7750 & 2.8 & 2.2 + wikipedia & sf / sf & 45875 & 407543 & 874942 & 19.1 & 2.1 +",
    "to randomize a bipartite network while preserving the node degrees , we employ a modification of the degree - preserving randomization algorithm for unipartite networks  @xcite .",
    "specifically , we first remove all connections in the original network .",
    "then , we assign to every node a number of open connections equal to its degree in the original network . finally , we add links to the network one by one , by connecting a randomly selected top - bottom node pair with open connections .",
    "we note that the probability to select a particular node is proportional to the number of its open connections . every time a new link is established ,",
    "the number of open connections of the two nodes connected by the link are decreased by one .",
    "the key property of any metric space is the triangle inequality : for any triplet of points @xmath249 @xmath250 where @xmath251 is the distance between points @xmath252 and @xmath253 .",
    "as explained in the main text , the triangle inequality in the underlying space leads to high clustering and power law distribution of the number of common neighbors in the observed topology of the bipartite network .",
    "to highlight the key role of the triangle inequality , here we consider bipartite networks built in spaces with broken metric structure . to this end , we construct a bipartite network following steps @xmath16-@xmath254 of the @xmath37 model ( section  [ sec : the_model ]  a of the main text ) , with the difference that before connecting top - bottom nodes we randomize their distances .",
    "specifically , we first assign node hidden variables and coordinates following steps @xmath255 of the @xmath37 model .",
    "then , we construct the distance matrix @xmath256 and randomize its values . to this end",
    ", we remove all distance values from the matrix and arrange them into a list of values .",
    "we then fill in the randomized matrix by drawing distance values from this list at random without replacement . finally , we connect top - bottom nodes as in step @xmath254 of the @xmath37 model using the randomized distance matrix @xmath257 .",
    "the above modified model preserves the values of the node hidden variables and the distribution of distances between the nodes , but breaks the triangle inequality . as seen from fig .",
    "[ fig : trg]*a * , the degree distribution in bipartite networks constructed by the model with broken metric structure ( non - metric ) is the same as those constructed by the original @xmath37 model ( metric ) . at the same time",
    ", however , the model with broken metric structure fails to reproduce the strong bipartite clustering coefficient and the fat - tail distribution of the number of common neighbors observed in the original @xmath37 model  ( figs .",
    "[ fig : trg]*b , c * ) .    , @xmath258 , @xmath259 and @xmath260 .",
    "all plots correspond to the top node domain .",
    "the bottom node domain has similar properties.,title=\"fig:\",width=5 ] , @xmath258 , @xmath259 and @xmath260 .",
    "all plots correspond to the top node domain .",
    "the bottom node domain has similar properties.,title=\"fig:\",width=5 ] , @xmath258 , @xmath259 and @xmath260 .",
    "all plots correspond to the top node domain .",
    "the bottom node domain has similar properties.,title=\"fig:\",width=5 ]",
    "in the main text we formulate the @xmath180 bipartite model on the euclidean ring @xmath36 .",
    "the choice of @xmath36 as the latent space is made primarily for simplicity , and generalizations to other spaces are possible . here",
    "we formulate the latent space model using a two - dimensional hyperbolic disk of constant negative curvature @xmath262 and radius @xmath263 . in the model",
    ", nodes correspond to points within the hyperbolic disk : angular coordinates of both node types are chosen uniformly at random , while radial coordinates are drawn from corresponding pdf functions @xmath264 and @xmath265 .",
    "connections between top and bottom nodes are established with probabilities depending on distances between the nodes in the hyperbolic disk .",
    "the resulting @xmath261 model can be summarized as follows :    1 .",
    "sample the angular coordinates of top nodes @xmath66 , @xmath67 , uniformly at random from @xmath68 $ ] , and their radial coordinates @xmath266 , @xmath67 , from the pdf @xmath264 defined in @xmath267 $ ] ; 2 .   sample",
    "the angular coordinates of bottom nodes @xmath70 , @xmath71 , uniformly at random from @xmath68 $ ] , and their radial coordinates @xmath268 , @xmath71 , from the pdf @xmath265 defined in @xmath267 $ ] ; 3 .",
    "connect every top - bottom node pair with probability @xmath269 @xmath270    unlike its counterpart , the @xmath261 model is purely geometric and desired degree distributions can be engineered with a proper choice of @xmath271 and @xmath272 , without introducing external hidden variables .",
    "yet , as we demonstrate below , both models are fully equivalent due to a one - to - one mapping between radial coordinates in the @xmath261 model and hidden variables in the @xmath180 model : @xmath273 it is straightforward to verify that this mapping transforms the @xmath180 connection probability function into that of the @xmath261 model , @xmath274 where @xmath275 is a close approximation for @xmath276 in eq .",
    "( [ eq : app : xij ] ) for sufficiently large @xmath277 , @xmath278 and @xmath279 .",
    "( [ eq : app : equiv ] ) establishes the equivalence between the two models since any pair of nodes @xmath280 is equally likely to be connected or disconnected in both models .",
    "since the two models are equivalent , the @xmath261 model produces networks with the same topological properties as in the @xmath180 model .",
    "in particular , sf / sf bipartite networks can be generated using @xmath281 with @xmath282 and sf / ps bipartite networks can be generated using @xmath283 , @xmath284 , and @xmath285 .",
    "first , it is important to note that the correspondence between the @xmath261 and the @xmath180 formulations is approximate and holds only for sufficiently large hyperbolic disk , @xmath286 .",
    "indeed , when establishing the correspondence between the two models we relied on the approximation  ( [ eq : si_h2_approx_dist ] ) , which works well for large radial node coordinates .",
    "this is indeed the case for the majority of nodes in both sf / sf and sf / ps networks . in the case of sf",
    "/ sf networks @xmath287 , and therefore , @xmath288 , implying that the majority of nodes is located near the periphery of the hyperbolic disk , @xmath289 .",
    "the situation is the same for the top nodes of the sf / ps networks , while bottom nodes of sf / ps are all located at the edge of the hyperbolic disk , @xmath290 .",
    "second , radial coordinates of all nodes must be positive , which is satisfied as long as @xmath291 and @xmath292 , where @xmath293 and @xmath294 are the largest hidden variable values , respectively , in the top and bottom domains of the @xmath180 model . since expected degree values in the @xmath180 model are proportional to their hidden variables , eqs .",
    "( [ avg_k1],[avg_l1 ] ) , @xmath295 and @xmath296 , leading to @xmath297",
    "here we derive approximate analytic expressions for the average number of common neighbors and the distribution of the number of common neighbors in the @xmath37 model .",
    "to ease notation , we sometimes write the node hidden variables and angular coordinates in vector - like form : @xmath298 and @xmath299 . in this case",
    ", we define the probability distribution @xmath300 ( @xmath301 ) as the probability that a randomly chosen top ( bottom ) node is characterized by @xmath302 ( @xmath303 ) . since the hidden variables are independent of the angular coordinates , @xmath304 and @xmath305 .",
    "thus , the integration ( summation ) over @xmath306 or @xmath307 corresponds to integration ( summation ) over both attributes : @xmath308 , @xmath309 .",
    "the average number of common neighbors between two nodes of the same domain can be calculated from eq .",
    "( [ eq : paper_avg_m ] ) in the main text . by substituting the connection probability function from eq .",
    "( [ eq : s1_r ] ) into eq .  ( [ eq : paper_avg_m ] ) we obtain that for large networks @xmath310 where @xmath311 , @xmath312 , and @xmath313 is given by eq .",
    "( [ eq : integral_beta ] ) .",
    "it can be seen from eq .",
    "( [ eq : avg_m3 ] ) that regardless of the functional form of @xmath45 , @xmath139 depends on the distance between the nodes @xmath314 and not on domain size @xmath38 , @xmath39 per se .",
    "the inner integral of eq .",
    "( [ eq : avg_m3 ] ) can be taken by residues . however , the number of poles of the integrand depends on @xmath50 . a relatively simple solution exists for @xmath151 . specifically , in this case we get @xmath315 for sf / ps bipartite networks , and @xmath316 \\label{second_integral}\\ ] ] for sf / sf bipartite networks with @xmath317 , @xmath318 , where @xmath319 is the power law degree distribution exponent of the bottom domain and @xmath320 is the expected minimum bottom domain degree .",
    "the function @xmath321 is the gauss hypergeometric function .       in real (",
    "* a , b * ) and modeled ( * c - h * ) bipartite networks . the properties of the real networks are outlined in table  [ si_table ] .",
    "panels * a , c , e , g , h * correspond to pairs of nodes in top domains , while panels * b , d , f * correspond to pairs of nodes in bottom domains .",
    "the distributions @xmath6 are not normalized for the real networks in panels * a , b * ( i.e. , they correspond to number of nodes instead of percentage of nodes ) to improve visibility .",
    "all modeled networks are characterized by @xmath322 .",
    "panels * c * and * d * correspond to sf / ps networks with top - domain power law exponent @xmath323 , average top - domain degree @xmath324 , and different values of @xmath50 .",
    "panels * e * and * f * correspond to sf / ps networks with @xmath325 and different values of @xmath326 , where @xmath81 is chosen as @xmath327 . panels * g * and * h * correspond to sf / sf networks . panel * g * depicts @xmath6 for the top domain of networks that have different @xmath326 values , @xmath328 , bottom - domain power law exponent @xmath329 , and @xmath260 .",
    "panel * h * depicts @xmath6 for the top domain of networks that have @xmath330 , @xmath328 , @xmath331 , and different values of @xmath50.,title=\"fig:\",width=6 ]   in real ( * a , b * ) and modeled ( * c - h * ) bipartite networks .",
    "the properties of the real networks are outlined in table  [ si_table ] .",
    "panels * a , c , e , g , h * correspond to pairs of nodes in top domains , while panels * b , d , f * correspond to pairs of nodes in bottom domains .",
    "the distributions @xmath6 are not normalized for the real networks in panels * a , b * ( i.e. , they correspond to number of nodes instead of percentage of nodes ) to improve visibility .",
    "all modeled networks are characterized by @xmath322 .",
    "panels * c * and * d * correspond to sf / ps networks with top - domain power law exponent @xmath323 , average top - domain degree @xmath324 , and different values of @xmath50 . panels * e * and * f * correspond to sf / ps networks with @xmath325 and different values of @xmath326 , where @xmath81 is chosen as @xmath327 . panels * g * and * h * correspond to sf / sf networks .",
    "panel * g * depicts @xmath6 for the top domain of networks that have different @xmath326 values , @xmath328 , bottom - domain power law exponent @xmath329 , and @xmath260 .",
    "panel * h * depicts @xmath6 for the top domain of networks that have @xmath330 , @xmath328 , @xmath331 , and different values of @xmath50.,title=\"fig:\",width=6 ]   in real ( * a , b * ) and modeled ( * c - h * ) bipartite networks .",
    "the properties of the real networks are outlined in table  [ si_table ] .",
    "panels * a , c , e , g , h * correspond to pairs of nodes in top domains , while panels * b , d , f * correspond to pairs of nodes in bottom domains .",
    "the distributions @xmath6 are not normalized for the real networks in panels * a , b * ( i.e. , they correspond to number of nodes instead of percentage of nodes ) to improve visibility .",
    "all modeled networks are characterized by @xmath322 .",
    "panels * c * and * d * correspond to sf / ps networks with top - domain power law exponent @xmath323 , average top - domain degree @xmath324 , and different values of @xmath50 .",
    "panels * e * and * f * correspond to sf / ps networks with @xmath325 and different values of @xmath326 , where @xmath81 is chosen as @xmath327 . panels * g * and * h * correspond to sf / sf networks .",
    "panel * g * depicts @xmath6 for the top domain of networks that have different @xmath326 values , @xmath328 , bottom - domain power law exponent @xmath329 , and @xmath260 .",
    "panel * h * depicts @xmath6 for the top domain of networks that have @xmath330 , @xmath328 , @xmath331 , and different values of @xmath50.,title=\"fig:\",width=6 ]   in real ( * a , b * ) and modeled ( * c - h * ) bipartite networks .",
    "the properties of the real networks are outlined in table  [ si_table ] .",
    "panels * a , c , e , g , h * correspond to pairs of nodes in top domains , while panels * b , d , f * correspond to pairs of nodes in bottom domains .",
    "the distributions @xmath6 are not normalized for the real networks in panels * a , b * ( i.e. , they correspond to number of nodes instead of percentage of nodes ) to improve visibility .",
    "all modeled networks are characterized by @xmath322 .",
    "panels * c * and * d * correspond to sf / ps networks with top - domain power law exponent @xmath323 , average top - domain degree @xmath324 , and different values of @xmath50 . panels * e * and * f * correspond to sf / ps networks with @xmath325 and different values of @xmath326 , where @xmath81 is chosen as @xmath327 . panels * g * and * h * correspond to sf / sf networks .",
    "panel * g * depicts @xmath6 for the top domain of networks that have different @xmath326 values , @xmath328 , bottom - domain power law exponent @xmath329 , and @xmath260 .",
    "panel * h * depicts @xmath6 for the top domain of networks that have @xmath330 , @xmath328 , @xmath331 , and different values of @xmath50.,title=\"fig:\",width=6 ]   in real ( * a , b * ) and modeled ( * c - h * ) bipartite networks .",
    "the properties of the real networks are outlined in table  [ si_table ] .",
    "panels * a , c , e , g , h * correspond to pairs of nodes in top domains , while panels * b , d , f * correspond to pairs of nodes in bottom domains .",
    "the distributions @xmath6 are not normalized for the real networks in panels * a , b * ( i.e. , they correspond to number of nodes instead of percentage of nodes ) to improve visibility .",
    "all modeled networks are characterized by @xmath322 .",
    "panels * c * and * d * correspond to sf / ps networks with top - domain power law exponent @xmath323 , average top - domain degree @xmath324 , and different values of @xmath50 .",
    "panels * e * and * f * correspond to sf / ps networks with @xmath325 and different values of @xmath326 , where @xmath81 is chosen as @xmath327 . panels * g * and * h * correspond to sf / sf networks . panel * g * depicts @xmath6 for the top domain of networks that have different @xmath326 values , @xmath328 , bottom - domain power law exponent @xmath329 , and @xmath260 .",
    "panel * h * depicts @xmath6 for the top domain of networks that have @xmath330 , @xmath328 , @xmath331 , and different values of @xmath50.,title=\"fig:\",width=6 ]   in real ( * a , b * ) and modeled ( * c - h * ) bipartite networks .",
    "the properties of the real networks are outlined in table  [ si_table ] .",
    "panels * a , c , e , g , h * correspond to pairs of nodes in top domains , while panels * b , d , f * correspond to pairs of nodes in bottom domains . the distributions @xmath6 are not normalized for the real networks in panels * a , b * ( i.e. , they correspond to number of nodes instead of percentage of nodes ) to improve visibility .",
    "all modeled networks are characterized by @xmath322 .",
    "panels * c * and * d * correspond to sf / ps networks with top - domain power law exponent @xmath323 , average top - domain degree @xmath324 , and different values of @xmath50 .",
    "panels * e * and * f * correspond to sf / ps networks with @xmath325 and different values of @xmath326 , where @xmath81 is chosen as @xmath327 . panels * g * and * h * correspond to sf / sf networks .",
    "panel * g * depicts @xmath6 for the top domain of networks that have different @xmath326 values , @xmath328 , bottom - domain power law exponent @xmath329 , and @xmath260 .",
    "panel * h * depicts @xmath6 for the top domain of networks that have @xmath330 , @xmath328 , @xmath331 , and different values of @xmath50.,title=\"fig:\",width=6 ]   in real ( * a , b * ) and modeled ( * c - h * ) bipartite networks .",
    "the properties of the real networks are outlined in table  [ si_table ] .",
    "panels * a , c , e , g , h * correspond to pairs of nodes in top domains , while panels * b , d , f * correspond to pairs of nodes in bottom domains .",
    "the distributions @xmath6 are not normalized for the real networks in panels * a , b * ( i.e. , they correspond to number of nodes instead of percentage of nodes ) to improve visibility .",
    "all modeled networks are characterized by @xmath322 .",
    "panels * c * and * d * correspond to sf / ps networks with top - domain power law exponent @xmath323 , average top - domain degree @xmath324 , and different values of @xmath50 . panels * e * and * f * correspond to sf / ps networks with @xmath325 and different values of @xmath326 , where @xmath81 is chosen as @xmath327 . panels * g * and * h * correspond to sf / sf networks .",
    "panel * g * depicts @xmath6 for the top domain of networks that have different @xmath326 values , @xmath328 , bottom - domain power law exponent @xmath329 , and @xmath260 .",
    "panel * h * depicts @xmath6 for the top domain of networks that have @xmath330 , @xmath328 , @xmath331 , and different values of @xmath50.,title=\"fig:\",width=6 ]   in real ( * a , b * ) and modeled ( * c - h * ) bipartite networks .",
    "the properties of the real networks are outlined in table  [ si_table ] .",
    "panels * a , c , e , g , h * correspond to pairs of nodes in top domains , while panels * b , d , f * correspond to pairs of nodes in bottom domains .",
    "the distributions @xmath6 are not normalized for the real networks in panels * a , b * ( i.e. , they correspond to number of nodes instead of percentage of nodes ) to improve visibility .",
    "all modeled networks are characterized by @xmath322 .",
    "panels * c * and * d * correspond to sf / ps networks with top - domain power law exponent @xmath323 , average top - domain degree @xmath324 , and different values of @xmath50 .",
    "panels * e * and * f * correspond to sf / ps networks with @xmath325 and different values of @xmath326 , where @xmath81 is chosen as @xmath327 . panels * g * and * h * correspond to sf / sf networks .",
    "panel * g * depicts @xmath6 for the top domain of networks that have different @xmath326 values , @xmath328 , bottom - domain power law exponent @xmath329 , and @xmath260 .",
    "panel * h * depicts @xmath6 for the top domain of networks that have @xmath330 , @xmath328 , @xmath331 , and different values of @xmath50.,title=\"fig:\",width=6 ]    we now consider the distribution of the number of common neighbors .",
    "first , we calculate the probability that two nodes with hidden variables @xmath125 and @xmath126 and angular coordinates @xmath127 and @xmath128 have @xmath7 common neighbors . to this end",
    ", we define the probability @xmath332 that two top nodes with vectors @xmath333 and @xmath334 have @xmath7 common neighbors among bottom nodes with vector @xmath335 .",
    "since pairs of nodes are connected independently with probability @xmath336 , @xmath332 is given by the binomial distribution @xmath337^{m}\\left[1-r(\\mathbf{x_1};\\mathbf{y})r(\\mathbf{x_2};\\mathbf{y } ) \\right]^{m(\\mathbf{y})-m},\\ ] ] where @xmath338 is the total number of bottom nodes with vector @xmath307 , and @xmath339 is the binomial coefficient .",
    "the probability that two nodes with vectors @xmath340 and @xmath341 have @xmath7 common neighbors can be calculated as @xmath342 where the product goes over the entire set of the @xmath343 vectors , and the summation is performed over all possible combinations of @xmath344 such that their sum equals @xmath7 .",
    "next , we define the generating functions  @xcite for @xmath345 and @xmath346 , @xmath347 since @xmath346 is given by the convolution of @xmath348 ( eq .  ( [ eq : pm_propagator ] ) ) , its generating function can be expressed as the product of the generating functions of the @xmath345 , @xmath349 it is easy to see that @xmath350^{m(\\mathbf{y})}$ ] . by substituting this expression into eq .",
    "( [ eq : p_generat_product ] ) and taking the logarithm of both sides we get @xmath351 = m \\int { \\rm d } \\mathbf{y } \\ , \\rho(\\mathbf{y } ) { \\rm ln } \\left[(1-(1-z)r(\\mathbf{x_1};\\mathbf{y})r(\\mathbf{x_2};\\mathbf{y } ) \\right].\\ ] ] one can verify that the expression for the average number of common neighbors @xmath352 ( eq .",
    "( [ eq : paper_avg_m ] ) in the main text ) can be obtained by evaluating the derivative of @xmath353 with respect to @xmath354 at @xmath355 , @xmath356 as expected . in the case of sparse bipartite networks",
    "( [ eq : p_generat2 ] ) can be approximated as  ( see ref .",
    "@xcite ) @xmath357 \\approx ( z-1 ) \\overline{m}(\\mathbf{x_1};\\mathbf{x_2 } ) , \\\\ \\label{eq : p_generat4 } p_{\\mathbf{x_1},\\mathbf{x_2}}(m ) \\approx e^{-\\overline{m}(\\mathbf{x_1};\\mathbf{x_2 } ) } \\left [ \\overline{m}(\\mathbf{x_1};\\mathbf{x_2 } ) \\right]^{m}/m!,\\end{aligned}\\ ] ] proving eq .",
    "( [ eq : gauss_m ] ) in the main text .",
    "the distribution of the number of common neighbors @xmath6 is obtained by averaging @xmath346 over @xmath340 and @xmath341 , @xmath358 while in general there is no closed - form solution to eq .",
    "( [ eq : pm1 ] ) , different closed - form solutions can be obtained for integer values of @xmath50 .",
    "below , we derive @xmath6 in the case of sf / ps networks with @xmath151 . in this case , @xmath359 is given by eq .",
    "( [ eq : avg_m5 ] ) .",
    "the first step towards computing @xmath6 is to evaluate @xmath360 by averaging @xmath346 in eq .",
    "( [ eq : p_generat4 ] ) over @xmath149 , @xmath361^{m}.\\ ] ] the second step is to average @xmath360 over all @xmath125 , @xmath126 values . in the case of sf / ps networks",
    "@xmath362 , and after a series of straightforward but tedious steps we obtain @xmath363}{m^{1/2 } \\gamma[m+1 ] } \\sim m^{3/2 - 2\\gamma } , \\label{eq : pm_final}\\ ] ] proving eq .",
    "( [ eq : m_power_law ] ) in the main text .",
    "the analytical evaluation of @xmath6 for arbitrary @xmath50 values is intractable due to the nontrivial dependence of @xmath364 on @xmath50 .",
    "however , we can verify numerically that @xmath6 is power - law distributed for different @xmath50 values , similar to real - world bipartite networks , see fig .",
    "[ fig : si_pm ] .",
    "the expected value of the bipartite clustering coefficient can be derived using the hidden variable formalism for bipartite networks  @xcite . in particular , the expected bipartite clustering coefficient @xmath365 of a top node with vector @xmath366 is given by @xmath367 where @xmath368 is the conditional probability that a node with vector @xmath306 is connected to a node with vector @xmath335 , @xmath369 is the average number of common neighbors between nodes with vectors @xmath370 , and @xmath371 is the expected degree of a bottom node with vector @xmath307 .",
    "the expected number of common neighbors @xmath369 can be obtained from eq .",
    "( [ eq : paper_avg_m ] ) in the main text by swapping variables ( @xmath96 ) with ( @xmath97 ) , while @xmath368 is given by @xmath372 where @xmath373 is the expected degree of a top node with vector @xmath306 .",
    "we note that due to the rotational symmetry of the model , @xmath365 depends only on the node s hidden variable @xmath74 and not on its angular position @xmath75 , that is , @xmath374 .",
    "we also note that @xmath365 is independent of the network size ( @xmath140 ) since neither @xmath368 nor @xmath375 depend on it .",
    "furthermore , @xmath38 in @xmath376 cancels out after performing the integration @xmath377 that yields a factor @xmath378 , so that @xmath379 in the denominator of eq .  (",
    "[ eq : c4_final ] ) does not depend on the network size either .",
    "finally , the average bipartite clustering of the top domain can be obtained by averaging the bipartite clustering coefficient over all nodes in the domain , @xmath380 and is also independent of network size .",
    "similar results hold for the bottom node domain .",
    "an important property of real sf / sf bipartite networks and the @xmath37 model is self - similarity of bipartite clustering coefficient with respect to a degree - thresholding renormalization procedure .",
    "non - iterative removal of top and bottom nodes with degrees smaller than certain thresholds @xmath179 does not affect bipartite clustering coefficient .",
    "in contrast , bipartite clustering coefficient of randomized networks increases as the threshold increases  ( fig .",
    "[ fig : all_self](a ) ) .",
    "moreover degree - dependent bipartite clustering coefficients preserve their functional form , following the same master - curve when plotted as a function of the node degree normalized by the average degree of the corresponding domain : @xmath381 see fig .",
    "[ fig : all_self](b ) .",
    "here @xmath382 are the master curves for top and bottom domain degree - dependent clustering coefficients , while @xmath383 and @xmath384 are the average degrees of top and bottom domains after degree - thresholding .",
    "in contrast , as seen from fig .  [",
    "fig : all_self](c ) , bipartite clustering coefficients of randomized versions of real and modeled bipartite networks are not self - similar .    since expected node degrees in the @xmath37 model are tuned to be equal to their hidden variables , eqs .",
    "( [ avg_k1],[avg_l1 ] ) , the degree thresholding procedure is equivalent to removal of nodes with hidden variables less than threshold @xmath179",
    ". then , the number of top and bottom nodes in thresholded network @xmath385 decreases as @xmath386 where @xmath38 and @xmath39 are the number of nodes in original network @xmath387 .",
    "power - law distributions of hidden variables @xmath64 and @xmath65 of nodes in @xmath388 are unchanged , but start at @xmath389 and @xmath390 respectively @xmath391 as a result , expected degrees of individual nodes and network domains scale as @xmath392      scaling relationships for degree dependent bipartite clustering coefficients follow from ( [ eq : c4_final ] ) . through a number of straightforward but tedious steps , which we omit here for brevity , we obtain      proving the self - similarity of sf / sf @xmath35 models . finally , it is now easy to check , using eqs .",
    "( [ eq : c4_selfsimilar ] ) and ( [ eq : c4_selfsimilar2 ] ) that the average bipartite clustering coefficients of the top and bottom node domains take finite values independent of the threshold @xmath394 : @xmath395 unlike in sf / sf networks , bipartite clustering in sf / ps networks is self - similar only with respect to degree - thresholding of the scale - free domain , ( @xmath396,@xmath397 ) ."
  ],
  "abstract_text": [
    "<S> despite the abundance of bipartite networked systems , their organizing principles are less studied , compared to unipartite networks . </S>",
    "<S> bipartite networks are often analyzed after projecting them onto one of the two sets of nodes . as a result of the projection </S>",
    "<S> , nodes of the same set are linked together if they have at least one neighbor in common in the bipartite network . </S>",
    "<S> even though these projections allow one to study bipartite networks using tools developed for unipartite networks , one - mode projections lead to significant loss of information and artificial inflation of the projected network with fully connected subgraphs . here </S>",
    "<S> we pursue a different approach for analyzing bipartite systems that is based on the observation that such systems have a latent metric structure : network nodes are points in a latent metric space , while connections are more likely to form between nodes separated by shorter distances . </S>",
    "<S> this approach has been developed for unipartite networks , and relatively little is known about its applicability to bipartite systems . </S>",
    "<S> here , we fully analyze a simple latent - geometric model of bipartite networks , and show that this model explains the peculiar structural properties of many real bipartite systems , including the distributions of common neighbors and bipartite clustering . </S>",
    "<S> we also analyze the geometric information loss in one - mode projections in this model , and propose an efficient method to infer the latent pairwise distances between nodes . uncovering the latent geometry underlying real bipartite networks can find applications in diverse domains , ranging from constructing efficient recommender systems to understanding cell metabolism . </S>"
  ]
}
{
  "article_text": [
    "entanglement is the root of the power of quantum computers@xcite ; thus , the production and measurement of entanglement are essential if we are ever to be successful in making full use of the potential of quantum computing .",
    "this turns out to be a very hard problem .    in previous work ,",
    "we have proposed a method to find an entanglement witness for a general , unknown , quantum input state , using dynamic learning to find parameters for the quantum system that make it calculate its own entanglement .",
    "we called this a quantum neural network ( qnn ) @xcite .",
    "the basic idea is that contained in the system itself is the information about its entanglement : if we find , through learning , an appropriate set of parameters for the system , then it can extract the entanglement of its initial state as an output measure of the state at some final time .",
    "we imagine that our quantum system evolves under some hamiltonian containing adjustable parameters ; we find that set of parameters such that our designated output function ( the qubit - qubit correlation function ) is mapped onto the correct values for the entanglement of the initial state .",
    "our entanglement witness gave good results for large classes of input states , including both pure and mixed states .",
    "unlike the case with any other witness ( see , _ e.g. _ , @xcite ) , the input state did not need to be `` close '' to any particular state .",
    "we have also @xcite extended our work to the 3- , 4- , and 5-qubit cases , and found that as the size of the system grows , the amount of additional training necessary diminishes ; thus , our method may be very practical for use on large computational systems .",
    "figure 1 shows some representative results , in which we compare our entanglement witness to the entanglement of formation @xcite for 50,000 randomly generated states for the 2-qubit system .",
    "these are pure states with real coefficients on the usual ( `` charge '' ) basis .",
    "the agreement is excellent .",
    "unfortunately these results do not carry over to the more general case of complex coefficients .",
    "see figure 2 , which shows a similar set but with complex coefficients .",
    "indeed , as we showed @xcite , it is impossible to find any single measurable which will not exhibit anomalous oscillation ; all witnesses do so .",
    "but is there a way to get around this difficulty ?",
    ", where @xmath0 , @xmath1 , @xmath2,and @xmath3 are all real , as a function of the entanglement of formation .",
    "points lying along the dashed yellow line are states for which the entanglement predicted by the qnn witness exactly matches the entanglement of formation .",
    ", width=240 ]    , but with complex coefficients .",
    "[ cxcoeffig],width=240 ]    there are , of course , ways to determine more information about the state ; if we know the entire density matrix we can , at least for the 2-qubit system , simply calculate the entanglement of formation ( as we ourselves did to generate the comparison data for figure [ realfig ] . ) for the 2-qubit system this may not be unreasonable .",
    "but for the eventual goal of a large computational system , this can become quite daunting , since the number of parameters necessary goes like @xmath4 , where @xmath5 is the number of qubits .",
    "perhaps dynamic learning can allow us to find a shortcut .",
    "this paper is a first step in that direction .",
    "if we knew or could determine the relative phases @xmath6 of the basis states , we could apply the ( unitary ) phase shift operator of @xmath7 to each relevant part of our input state . since the coefficients",
    "would then be real , we could then perform our entanglement witness measurement and achieve results like those in figure [ realfig ] .    in 2005",
    ", yang and han @xcite found an algorithm for determining the relative phase between parts of the n - qubit bell ( or ghz ) state , @xmath8 .",
    "they showed that performing a hadmard transform on each qubit puts the system in a state in which the probability of finding an even number of qubits in the state @xmath9 is given by @xmath10 .",
    "given a large number of copies of the state , it is then possible to determine both @xmath11 and @xmath12 .",
    "here we show that , with our qnn , we can extend this result , for the 2-qubit system , in two ways .",
    "first , we show that we can also find the phase offset in an epr state , @xmath13 .",
    "second , we show that we can also find the phase offset for any of the partially entangled states consisting of an epr or a bell state with some contaminant : @xmath14",
    "we consider 2-qubit system whose hamiltonian is : @xmath15 where @xmath16 are the pauli operators corresponding to each of the two qubits , a and b , @xmath17 and @xmath18 are the tunneling amplitudes , @xmath19 and @xmath20 are the biases , and @xmath21 the qubit - qubit coupling .",
    "the time evolution of the system is then given by the schrdinger equation : @xmath22   \\label{schr}\\ ] ] where @xmath23 is the density matrix and @xmath24 is the hamiltonian .",
    "the parameters @xmath25 control the time evolution of the system in the sense that , if one or more of them is changed , the way a given state will evolve in time will also change .",
    "this is the basis for using our quantum system as a neural network .",
    "the role of the `` weights '' of the network is played by the parameters of the hamiltonian , @xmath26 , all of which we take to be experimentally adjustable as functions of time ( see , _ e.g. _ , @xcite , for the case of squid charge qubits . ) by adjusting the parameters using a neural learning algorithm we can train the system to evolve in time to a set of chosen target outputs at the final time @xmath27 , in response to a corresponding ( one - to - one ) set of given inputs . because the time evolution is quantum mechanical ( and , we assume , coherent ) , a quantum mechanical function , like an entanglement witness of the initial state , can be mapped to an observable of the system s final state , a measurement made at the final time @xmath27 .",
    "the time evolution of the quantum system is calculated by integrating the schrdinger equation numerically in matlab simulink , using ode4 ( runge - kutta ) , with a fixed integration step size of 0.05 ns @xcite .",
    "the system was initialized in each input state in the training set , in turn , then allowed to evolve for 190 ns .",
    "a measurement is then made at the final time ; this is the `` output '' of the network .",
    "an error , @xmath28 , is calculated , and the parameters are adjusted slightly to reduce the error .",
    "this is repeated for each @xmath29 pair multiple times until the calculation converges on parameters that work well for the entire training set .",
    "complete details , including a derivation of the quantum dynamic learning paradigm using backpropagation @xcite in time @xcite , are given in @xcite .",
    "we choose the usual `` charge basis '' , in which each qubit s state is given as 0 or 1 .",
    "all of the parameters @xmath25 were taken to be functions of time ; in contrast to our earlier work @xcite , in which the parameters were taken to be piecewise constant in time , we have , here , allowed the parameters to be continuous functions of time . for the backpropagation learning , the output error needs to be back - propagated backward through time @xcite , so the integration has to be carried out from the final time @xmath27 to @xmath30 . to implement this in matlab simulink , a change of variable",
    "is made by letting @xmath31 , and running this simulation forward in @xmath32 in simulink .",
    "in the charge basis , we can write a general pure state of the system at time @xmath33 as @xmath34 since an phase is physically meaningless we may take out any overall phase factor ; that is , without loss of generality we may take the coefficient of the @xmath35 basis state to be real .",
    "we then write each of the other coefficients as its magnitude times a phase factor ; thus , each @xmath36 will be a real number , and the phase factor , if any , will be written in explicitly . as discussed above",
    ", the state of the system evolves under the hamiltonian , equation [ hamiltonian ] , to another state , @xmath37 , at the final time @xmath27 . at that final time",
    "we make a measurement . in the terminology of neural network learning : ( 1 )",
    "the input to the neural network is the initial state @xmath38 at time @xmath33 of the quantum system ; ( 2 ) the output of the neural network is a quantum measure made on the final state at the final time @xmath39 of the quantum system ; and ( 3 ) the trainable weights of the neural network are the time histories of the adjustable parameters of the quantum system .",
    "the network is trained on a set of training pairs , each of which consists of ( input , correct output ) .",
    "each training pair is presented to the network , the output is calculated , the error computed , and the weights changed so as to decrease the error @xcite . each pass through the entire training set is called an epoch .    as with all good science",
    ", we began with what was already known @xcite : namely , that it is possible to extract relative phase information from the bell state , @xmath40 . because we are using a process , it is important to see how much information we can get with as little input as possible . thus , our original training set consisted of only 11 training pairs , using only equal amplitude bell states @xmath40 with @xmath41 , where the phase angle @xmath12 varies from @xmath42 to @xmath43 as @xmath44 , for @xmath45 .",
    "the network output is the absolute magnitude squared of the projection of the final state of the quantum system onto the state @xmath46 , _",
    "i.e. _ , the probability of the system s being found in the state @xmath46 .",
    "the correct , or target , output for these equal - amplitude epr states is taken to be just @xmath47 .",
    "that is , the ( input , output ) pairs are @xmath48    the network was trained for 10 epochs , on a total of 11 training pairs .",
    "the average rms error of all 11 training pairs after training is 0.0127 .",
    "a plot of rms error vs epoch is shown in figure [ trainbfig ] . a plot of output vs target for the 11 training pairs",
    "is shown in figure [ trainresbfig ] .",
    "a plot of the trained parameters as functions of time is shown in figure [ parambfig ] .",
    "each is a simple oscillatory function .",
    "note that the trained tunneling amplitude functions @xmath17 and @xmath18 lie right on top of each other , as do @xmath49 and @xmath50 , which is unsurprising given the symmetry of the training set .",
    "phase offset indicator .",
    "the training set of 11 ( input , output ) pairs is given in the text .",
    "[ trainbfig],width=240 ]     phase offset indicator , showing deviation of the output , @xmath51 , from the target function @xmath47 .",
    "average rms error per pair is 0.0127 .",
    "the line shows the goal ( perfect agreement . )",
    "[ trainresbfig],width=240 ]    , @xmath18 , @xmath49 , @xmath50 , and @xmath21 , as functions of time , as trained for the phase offset @xmath52 . @xmath17 and @xmath18 lie right on top of each other , as do @xmath49 and @xmath50 . each was started out ( pre - training values ) as constant functions : @xmath53 , and @xmath54 .",
    "[ parambfig],width=240 ]    to see if the network has generalized ( _ i.e. _ , as opposed to having simply curvefitted ) , we then tested ( with no additional training ) on a set of bell states of random relative magnitude , that is , on states of the type @xmath40 with now randomly generated numbers for @xmath0 and @xmath3 ( such that the state remained normalized , _",
    "i.e. _ , @xmath55 . )",
    "from @xcite we knew that it was unlikely that we would be able to train to the same simple target function @xmath47 , and so it transpired ; however , we found that a simple analogue , @xmath56 , did work quite well .",
    "again , the measurable is the probability of the system s being found in the @xmath46 state at the final time , _",
    "i.e._,@xmath51 . note that this target function reduces to the target function used for training , when @xmath41 , and maintains the necessary symmetry .",
    "these data are plotted in figure [ test3fig ] ( blue triangles . ) as can easily be seen in the figure , agreement is excellent .",
    "the ability of the system to map onto the target function depends on its being an entangled state @xcite ; however , as long as we adjust the target function appropriately , full entanglement is , clearly , not necessary .",
    "thus it ought also to be possible to find the phase offset for a partially entangled input state , _",
    "e.g. _ , of the form @xmath57 .",
    "how do we do this ?",
    "we consider a probability - weighted target function , equal to our earlier targets for the special case of the pure bell state , but adjusting the relative function for the diminished entanglement .",
    "we are guided here by symmetry and by earlier analytic results @xcite , in which it was found that , while the relative phase was extractable , it was not easily separable from the amplitude information , and , in fact , had to be separately measured for ( hence , the necessity for `` many copies '' of the original state . ) experimentation eventually gave us the following ( relatively ) simple functions .",
    "for the bell state , @xmath58 , the target function for the output @xmath51 is : @xmath59 for the @xmath60 state , the target function for the output @xmath51 is : @xmath61 for the @xmath62 state , the target function for the output @xmath51 is : @xmath63    note that these target functions agree with the functions used for : that is , the training states @xmath64 $ ] , for @xmath65 to @xmath43 , had a target function given by @xmath47 ; this is exactly what the training function in equation [ belltarget ] reduces to , in the case @xmath41 . similarly the target functions for the @xmath66 states both reduce to the function tested on for the pure bell states in the case of equal amplitudes of @xmath67 .",
    "testing results for 550 randomly generated states of all three types , for all values of the angle @xmath12 , are shown in figure [ test3fig ] .",
    "agreement is quite good , even remarkable , considering that the system was trained only on 11 phase angles for an equal - amplitude bell state .",
    "the average rms error per pair over all 550 testing pairs after training is 0.0270 .    , consisting of three types of states : unequal amplitudes bell states @xmath68 ( blue triangles ) , and two kinds of partially entangled states , @xmath57 ( green squares ) , and @xmath69 ( red circles ) . as in figure",
    "[ trainresbfig ] , we show the deviation of the output from the target functions ( given in the text . )",
    "average rms error per pair is 0.0270 .",
    "the line shows the goal ( perfect agreement . )",
    "[ test3fig],width=240 ]    with some confidence in our method , we now extend to the corresponding states of the two qubit system that also can have maximal entanglement , the epr states , @xmath70 . by symmetry ,",
    "these states are `` the same '' as the bell states ; thus , we would expect that similar training ought to be able to map the phase shift to the projection onto the @xmath71 basis state .",
    "however , with , we were able to recover information ! in other words ,",
    "the neural net , trained to map @xmath12 information to the projection onto the basis state @xmath46 , maps the @xmath52 information to the projection onto the @xmath71 basis state . for equal amplitudes , @xmath72",
    ", we again use the simple cosine function , @xmath73 ; we use the analogous measure on the final state , @xmath74 .",
    "that is , the ( input , output ) pairs for equal amplitude epr states are @xmath75    for non - equal amplitude epr states , and for the analogous partially entangled epr states , we employ exactly analogous target functions as with the bell states . for the epr state ,",
    "@xmath76 , we take the target function for the output @xmath74 to be : @xmath77 for the @xmath78 state , the target function for the output @xmath74 is : @xmath79 for the @xmath80 state , the target function for the output @xmath74 is : @xmath81    results for testing on 550 randomly generated states of all three types are shown in figure [ test4fig ] .    ,",
    "consisting of input states of three types : ( 1 ) @xmath82 ( blue triangles ) ; ( 2 ) @xmath83 ( green squares ) , and ( 3 ) @xmath84 ( red circles . ) again , we show the deviation of the output from the target function ( given in the text . )",
    "average rms error per pair is 0.0489 .",
    "the line shows the goal ( perfect agreement . )",
    "[ test4fig],width=240 ]    if we can recover phase offset information on both @xmath46 and @xmath85 projections , we ought to be able to do so on @xmath71 .",
    "and so we can .",
    "again we test only ( additional training ) , using , this time , the projection onto the @xmath71 state , and looking for information about the phase offset term multiplied by that basis state .",
    "our target functions are the exact analogues to the @xmath86 and @xmath87 targets . for the epr state with the @xmath88 offset , @xmath89 ,",
    "the target function for the output @xmath90 is : @xmath91 for the @xmath92 state , the target function for the output @xmath90 is : @xmath93 for the @xmath94 state , the target function for the output @xmath90 is : @xmath95    results are shown in figure [ test5fig ] for 550 randomly generated states .",
    ", consisting of input states of three types : ( 1 ) @xmath96 ( blue triangles ) ; @xmath97 ( green squares ) , and ( 3 ) ( 2 ) @xmath98 ( red circles . ) again , we show the deviation of the output from the target function .",
    "average rms error per pair is 0.0699 .",
    "the line shows the goal ( perfect agreement . )",
    "[ test5fig],width=240 ]",
    "we have shown that a two - qubit quantum system , considered as a trainable quantum neural net , can compute its own phase offsets .",
    "the training is not difficult : the training set consisted of only 11 training pairs , of a single type , and the set was trained for only 10 epochs .",
    "agreement is not perfect , and , doubtless , a more complicated function could be devised such that better agreement would be reached .",
    "but if we are considering inverting these functions , in order to perform the rotations that would enable our use of the entanglement estimator discussed in the introduction , simplicity is also important . because our method relies on the phase offset s being on a basis state which carries entanglement , it is not completely general ; however , since our goal is to be able to estimate the entanglement of a general input state , it does not really matter , since no phase correction is necessary to an unentangled state , and would make no difference to the calculation if made .",
    "our previous work @xcite , which extended our work on entanglement in 2-qubit systems to n - qubit systems , seems to indicate that extension of our present results to multiple qubit systems should be possible without too much difficulty .",
    "the ease with which we are able to extract multiple angle information is encouraging .",
    "it should be not too difficult to perform the inverse rotations , and , thereby , to be able to form a good and reliable estimate for the entanglement with only a very few measurements , even for many - qubit systems .",
    "we are currently working on these calculations , and on the extension of our results to mixed systems .",
    "behrman and j.e .",
    "steck , _ dynamic learning of pairwise and three - way entanglement _",
    ", in _ proceedings of the third world congress on nature and biologically inspired computing ( nabic 2011 ) _",
    "( salamanca , spain , october 19 - 21 , 2011 .",
    "( institute of electrical and electronics engineers ) .",
    "yann le cun , _ a theoretical framework for back - propagation _ in _ proc .",
    "1998 connectionist models summer school , _",
    "d. touretzky , g. hinton , and t. sejnowski , eds . ,",
    "morgan kaufmann , ( san mateo ) , pp .",
    "21 - 28 ( 1988 ) ."
  ],
  "abstract_text": [
    "<S> complete characterization of the state of a quantum system made up of subsystems requires determination of relative phase , because of interference effects between the subsystems . for a system of qubits used as a quantum computer </S>",
    "<S> this is especially vital , because the entanglement , which is the basis for the quantum advantage in computing , depends intricately on phase . </S>",
    "<S> we present here a first step towards that determination , in which we use a two - qubit quantum system as a quantum neural network , which is trained to compute and output its own relative phase . </S>"
  ]
}
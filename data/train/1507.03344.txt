{
  "article_text": [
    "the combination of quantum computing and classical computing under a same formal framework is attractive .",
    "we accomplished this work in qacp @xcite , which is algebraic axiomatization . and",
    "we explicitly modeling entanglement as a kind of parallelism in qacp @xcite , since entanglement is a unique pattern in quantum computing .",
    "now , it is the turn of reversible computation .",
    "we also accomplished an algebraic axiomatization for reversible computation , which is called racp @xcite , and we found that reversible quantum computing and reversible classical computing can also be unified under the framework of the so - called qracp @xcite .",
    "but , how to explicitly model entanglement under the framework of reversible quantum computing ? we try to solve this problem in this paper .",
    "explicit modeling of entanglement under the framework of reversible quantum computing is quite different to that of quantum computing , for example , the shadow constant is unnecessary under the framework of reversible quantum computing .",
    "this paper is organized as follows . in section 2 ,",
    "we introduce some preliminaries , including entanglement in quantum mechanics , structural operational semantics , and reversible quantum process algebra qracp .",
    "we model entanglement as a kind of parallelism in section 3 and extend this new kind of parallelism into the whole qracp in section 4 . in section 5",
    ", we verify a quantum protocol which mixes quantum information ( with entanglement ) and classical information .",
    "finally , we conclude this paper in section 6 .",
    "for convenience of the reader , we introduce some basic concepts about entanglement in quantum mechanics and quantum computing ( please refer to @xcite for details ) , structural operational semantics in reversible quantum computing@xcite .      quantum information are carried by particles .",
    "the simplest non - trivial quantum system is the quantum bit or qubit .",
    "a qubit s state space is the 2-dimensional space which is denoted as @xmath0 .",
    "the space @xmath0 is equipped with a standard basis composed with @xmath1 and @xmath2 .",
    "the tensor product of @xmath0 is @xmath3 for the space of two qubits and its standard basis composed with the four vectors @xmath4 , @xmath5 , @xmath6 and @xmath7 .",
    "another important basis for @xmath3 is called _ bell states _ or _ epr states _ , which contains the four vectors :    @xmath8    @xmath9    @xmath10    @xmath11    the elements of bell states are entangled states , which represent systems which are correlated with each other . and many quantum protocols and quantum computation can derive extra power of entanglement , since it is unique for quantum computing .",
    "* definition [ sosqp].1 ( quantum process configuration)*. a quantum process configuration @xcite @xcite @xcite @xcite @xcite @xcite @xcite @xcite @xcite @xcite @xcite @xcite is defined to be a pair @xmath12 , where @xmath13 is a process ( graph ) called structural part of the configuration , and @xmath14 specifies the current state of the environment , which is called its quantum part .",
    "* definition [ sosqp].2 ( quantum process graph)*. a quantum process ( graph ) @xmath12 is an lts in which one state @xmath15 is elected to be the root . if the lts contains a transition @xmath16 ,",
    "then @xmath17 where @xmath18 has root state @xmath19 .",
    "moreover , if the lts contains a transition @xmath20 , then @xmath21 .",
    "( 1 ) a quantum process @xmath22 is finite if and only if the process @xmath23 is finite . ( 2 )",
    "a quantum process @xmath22 is regular if and only if the process @xmath23 is regular .    *",
    "definition [ sosqp].3 ( quantum transition system specification)*. a quantum process transition rule @xmath24 is an expression of the form @xmath25 , with @xmath26 a set of expressions @xmath27 and @xmath28 with @xmath29 and @xmath30 , called the ( positive ) premises of @xmath24 , and @xmath31 , called structural part of @xmath26 and denoted as @xmath32 . and",
    "@xmath33 an expression @xmath27 or @xmath28 with @xmath29 and @xmath30 , called the conclusion of @xmath24 , and @xmath31 , called structural part of @xmath33 and denoted as @xmath34 .",
    "the left - hand side of @xmath33 is called the source of @xmath24 .",
    "@xmath35 is called the structural part of @xmath24 and denoted as @xmath36 .",
    "a quantum process transition rule @xmath24 is closed if and only its structural part @xmath36 is closed . a quantum transition system specification ( qtss )",
    "is a ( possible infinite ) set of transition rules .    *",
    "definition [ sosqp].4 ( quantum reverse transition)*. there are two quantum processes @xmath12 and @xmath18 , two transitions @xmath37 and @xmath38 } } \\langle p , \\varrho\\rangle$ ] , the transition @xmath38 } } \\langle p , \\varrho\\rangle$ ] is called reverse transition of @xmath39 , and the transition @xmath37 is called forward transition . if @xmath37 then @xmath38 } } \\langle p , \\varrho\\rangle$ ] , the forward transition @xmath37 is reversible . where @xmath40 $ ] is a kind of special quantum operation constant @xmath40\\in a \\times \\mathcal{k}$ ] , @xmath41 , called the histories of an quantum operation @xmath42 , and @xmath43 .",
    "* definition [ sosqp].5 ( quantum forward - reverse bisimulation)*. a quantum forward - reverse ( fr ) bisimulation relation @xmath44 is a binary relation on processes such that : ( 1 ) if @xmath45 and @xmath46 then @xmath47 with @xmath48 ; ( 2 ) if @xmath45 and @xmath47 then @xmath46 with @xmath48 ; ( 3 ) if @xmath45 and @xmath49}}\\langle p',\\varrho'\\rangle$ ] then @xmath50}}\\langle q',\\varsigma'\\rangle$ ] with @xmath48 ; ( 4 ) if @xmath45 and @xmath50}}\\langle q',\\varsigma'\\rangle$ ] then @xmath49}}\\langle p',\\varrho'\\rangle$ ] with @xmath48 ; ( 5 ) if @xmath45 and @xmath21 , then @xmath51 ; ( 6 ) if @xmath45 and @xmath51 , then @xmath21",
    ". two quantum process @xmath12 and @xmath52 are fr bisimilar , denoted by @xmath53 , if there is a fr bisimulation relation @xmath44 such that @xmath45 .    *",
    "definition [ sosqp].6 ( relation between quantum fr bisimulation and classical fr bisimulation)*. for two quantum processes , @xmath53 , with @xmath54 , if and only if @xmath55 and @xmath56 , where @xmath57 evolves into @xmath58 after execution of @xmath13 and @xmath59 evolves into @xmath60 after execution of @xmath61 .",
    "* definition [ sosqp].7 ( quantum branching forward - reverse bisimulation)*. a quantum branching forward - reverse ( fr ) bisimulation relation @xmath44 is a binary relation on the collection of quantum processes such that : ( 1 ) if @xmath45 and @xmath46 then either @xmath62 and @xmath63 or there is a sequence of ( zero or more ) @xmath64-transitions @xmath65 such that @xmath66 and @xmath67 with @xmath48 ; ( 2 ) if @xmath45 and @xmath47 then either @xmath62 and @xmath68 or there is a sequence of ( zero or more ) @xmath64-transitions @xmath69 such that @xmath70 and @xmath71 with @xmath48 ; ( 3 ) if @xmath45 and @xmath21 , then there is a sequence of ( zero or more ) @xmath64-transitions @xmath65 such that @xmath66 and @xmath72 ; ( 4 ) if @xmath45 and @xmath51 , then there is a sequence of ( zero or more ) @xmath64-transitions @xmath69 such that @xmath70 and @xmath73 ; ( 5 ) if @xmath45 and @xmath49}}\\langle p',\\varrho'\\rangle$ ] then either @xmath62 and @xmath63 or there is a sequence of ( zero or more ) @xmath64-transitions @xmath74 such that @xmath66 and @xmath75}}\\langle q',\\varsigma'\\rangle$ ] with @xmath48 ; ( 6 ) if @xmath45 and @xmath50}}\\langle q',\\varsigma'\\rangle$ ] then either @xmath62 and @xmath68 or there is a sequence of ( zero or more ) @xmath64-transitions @xmath76 such that @xmath70 and @xmath77}}\\langle p',\\varrho'\\rangle$ ] with @xmath48 ; ( 7 ) if @xmath45 and @xmath21 , then there is a sequence of ( zero or more ) @xmath64-transitions @xmath74 such that @xmath66 and @xmath72 ; ( 8) if @xmath45 and @xmath51 , then there is a sequence of ( zero or more ) @xmath64-transitions @xmath76 such that @xmath70 and @xmath73 .",
    "two quantum processes @xmath12 and @xmath52 are branching fr bisimilar , denoted by @xmath78 , if there is a branching fr bisimulation relation @xmath44 such that @xmath45 .",
    "* definition [ sosqp].8 ( relation between quantum branching fr bisimulation and classical branching fr bisimulation)*. for two quantum processes , @xmath78 , with @xmath54 , if and only if @xmath79 and @xmath56 , where @xmath57 evolves into @xmath58 after execution of @xmath13 and @xmath59 evolves into @xmath60 after execution of @xmath61 .    * definition [ sosqp].9 ( quantum rooted branching forward - reverse bisimulation)*. a quantum rooted branching forward - reverse ( fr ) bisimulation relation @xmath44 is a binary relation on quantum processes such that : ( 1 ) if @xmath45 and @xmath46 then @xmath47 with @xmath80 ; ( 2 ) if @xmath45 and @xmath47 then @xmath46 with @xmath80 ; ( 3 ) if @xmath45 and @xmath49}}\\langle p',\\varrho'\\rangle$ ] then @xmath50}}\\langle q',\\varsigma'\\rangle$ ] with @xmath80 ; ( 4 ) if @xmath45 and @xmath50}}\\langle q',\\varsigma'\\rangle$ ] then @xmath49}}\\langle p',\\varrho'\\rangle$ ] with @xmath80 ; ( 5 ) if @xmath45 and @xmath21 , then @xmath51 ; ( 6 ) if @xmath45 and @xmath51 , then @xmath21 .",
    "two quantum processes @xmath12 and @xmath52 are rooted branching fr bisimilar , denoted by @xmath81 , if there is a rooted branching fr bisimulation relation @xmath44 such that @xmath45 .    *",
    "definition [ sosqp].10 ( relation between quantum rooted branching fr bisimulation and classical rooted branching fr bisimulation)*. for two quantum processes , @xmath81 , with @xmath54 , if and only if @xmath82 and @xmath56 , where @xmath57 evolves into @xmath58 after execution of @xmath13 and @xmath59 evolves into @xmath60 after execution of @xmath61 .",
    "* definition [ sosqp].11 ( congruence)*. let @xmath83 be a signature and @xmath84 be the state space of the environment .",
    "an equivalence relation @xmath44 on @xmath85 is a congruence , i.e. , for each @xmath86 , if @xmath87 for @xmath88 , then @xmath89 .",
    "an equivalence relation @xmath44 on @xmath85 is a congruence , if for each @xmath86 , @xmath90 for @xmath88 , and @xmath91 .",
    "* definition [ sosqp].12 ( quantum conservative extension)*. let @xmath92 and @xmath93 be qtsss over signature @xmath94 and @xmath95 , and @xmath96 and @xmath97 , respectively .",
    "the qtss @xmath98 is a conservative extension of @xmath92 if the ltss generated by @xmath92 and @xmath98 contain exactly the same transitions @xmath99 and @xmath100 with @xmath101 and @xmath102 , and @xmath103 .",
    "* definition [ sosqp].13 ( relation between quantum conservative extension and classical conservative extension)*. the qtss @xmath98 is a quantum conservative extension of @xmath92 with transitions @xmath99 and @xmath100 , if its corresponding tss @xmath104 is a conservative extension of @xmath105 with transitions @xmath106 and @xmath107 .",
    "in the following , the variables @xmath108 range over the collection of process terms , the variables @xmath109 range over the set @xmath110 of atomic quantum operations , @xmath111 , @xmath112 are closed items , @xmath64 is the special constant silent step , @xmath113 is the special constant deadlock , and the predicate @xmath114 represents successful termination after execution of the quantum operation @xmath42 , the variables @xmath109 range over the set @xmath110 of atomic quantum operations , and the variable @xmath115 range over the set @xmath116 of atomic communicating actions .",
    "we define a kind of special action constant @xmath40\\in a \\times \\mathcal{k}$ ] where @xmath41 , called the histories of a quantum operation @xmath42 , denoted by @xmath40,\\alpha[n],\\cdots$ ] where @xmath117 .",
    "let @xmath118 .",
    "we consider entanglement as a kind of parallelism , i.e. , information formed by entangled particles may be distributed over a long distance , and quantum operations manipulated on one particle not only change the information represented by this particle , but also those represented by other particles entangled with this particular particle , dramatically without any interactions among them .",
    "we use a parallel operator @xmath119 to represent the whole parallelism semantics , a static parallel operator @xmath120 to represent the real parallelism semantics , and a communication merge @xmath121 to represent the synchrony , and an entanglement merge @xmath122 to represent the novel entanglement parallelism .",
    "we call brqpa @xcite extended with the whole parallel operator @xmath119 , the static parallel operator @xmath120 , the communication merge operator @xmath121 and the entanglement merge @xmath122 also as reversible quantum process algebra with parallelism , which is abbreviated to rqpap .",
    "since in qracp , the atomic quantum operations with the same labels in different branches ( including choice branches and parallel branches ) are treated as the same * one * atomic quantum operation , the semantics of the static parallel with entanglement is the same as that of the static parallel without entanglement in qracp .",
    "the semantics is captured by the following forward and reverse transition rules .",
    "@xmath123,\\varrho'\\rangle}{\\langle x\\mid y,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle\\upsilon[m]\\mid y,\\varrho'\\rangle } \\quad\\frac{\\langle x,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle x',\\varrho'\\rangle}{\\langle x\\mid y,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle x'\\mid y,\\varrho'\\rangle}\\ ] ]    @xmath124,\\varrho'\\rangle}{\\langle x\\mid y,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle x\\mid \\upsilon[m],\\varrho'\\rangle } \\quad\\frac{\\langle y,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle y',\\varrho'\\rangle}{\\langle x\\mid y,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle x\\mid y',\\varrho'\\rangle}.\\ ] ]    @xmath123,\\varrho'\\rangle\\quad \\langle y,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle\\upsilon[m],\\varrho'\\rangle}{\\langle x\\mid y , \\varrho\\rangle\\xrightarrow{\\upsilon}\\langle\\upsilon[m],\\varrho'\\rangle } \\quad\\frac{\\langle x,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle x',\\varrho'\\rangle\\quad \\langle y,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle\\upsilon[m],\\varrho'\\rangle}{\\langle x\\mid y , \\varrho\\rangle\\xrightarrow{\\upsilon}\\langle x'\\mid \\upsilon[m],\\varrho'\\rangle}\\ ] ]    @xmath123,\\varrho'\\rangle\\quad \\langle y,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle y',\\varrho'\\rangle}{\\langle x\\mid y , \\varrho\\rangle\\xrightarrow{\\upsilon}\\langle\\upsilon[m]\\mid y',\\varrho'\\rangle } \\quad\\frac{\\langle x,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle x',\\varrho'\\rangle\\quad \\langle y,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle y',\\varrho'\\rangle}{\\langle x\\mid y , \\varrho\\rangle\\xrightarrow{\\upsilon}\\langle x'\\mid y',\\varrho'\\rangle}\\ ] ]    @xmath125}}\\langle\\upsilon,\\varrho'\\rangle}{\\langle x\\mid y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle\\upsilon\\mid y,\\varrho'\\rangle } \\quad\\frac{\\langle x,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle x',\\varrho'\\rangle}{\\langle x\\mid y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle x'\\mid y,\\varrho'\\rangle}\\ ] ]    @xmath126}}\\langle\\upsilon,\\varrho'\\rangle}{\\langle x\\mid y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle x\\mid \\upsilon,\\varrho'\\rangle } \\quad\\frac{\\langle y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle y',\\varrho'\\rangle}{\\langle x\\mid y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle x\\mid y',\\varrho'\\rangle}.\\ ] ]    @xmath125}}\\langle\\upsilon,\\varrho'\\rangle\\quad \\langle y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle\\upsilon,\\varrho'\\rangle}{\\langle x\\mid y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle\\upsilon,\\varrho'\\rangle } \\quad\\frac{\\langle x,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle x',\\varrho'\\rangle\\quad \\langle y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle\\upsilon,\\varrho'\\rangle}{\\langle x\\mid y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle x'\\mid \\upsilon,\\varrho'\\rangle}\\ ] ]    @xmath125}}\\langle\\upsilon,\\varrho'\\rangle\\quad \\langle y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle y ' , \\varrho'\\rangle}{\\langle x\\mid y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle\\upsilon\\mid y',\\varrho'\\rangle } \\quad\\frac{\\langle x,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle x',\\varrho'\\rangle\\quad \\langle y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle y',\\varrho'\\rangle}{\\langle x\\mid y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle x'\\mid y',\\varrho'\\rangle}\\ ] ]    since atomic communicating actions are classical actions , we introduce a new set @xmath116 of atomic communicating actions , and a communication function @xmath127 , and the variable @xmath115 range over the set @xmath116 of atomic communicating actions .",
    "the forward transition rules under qtss for communication merge are as follows and say that the communication can be merged .    @xmath128,\\varrho\\rangle\\quad",
    "\\langle y,\\varrho\\rangle\\xrightarrow{\\mu}\\langle\\mu[m],\\varrho\\rangle}{\\langle x\\between y,\\varrho\\rangle\\xrightarrow{\\gamma(\\nu,\\mu)}\\langle\\gamma(\\nu,\\mu)[m],\\varrho\\rangle } \\quad\\frac{\\langle x,\\varrho\\rangle\\xrightarrow{\\nu}\\langle\\nu[m],\\varrho\\rangle\\quad \\langle y,\\varrho\\rangle\\xrightarrow{\\mu}\\langle y',\\varrho\\rangle}{\\langle x\\between y,\\varrho\\rangle\\xrightarrow{\\gamma(\\nu,\\mu)}\\langle\\gamma(\\nu,\\mu)[m]\\cdot y',\\varrho\\rangle}\\ ] ]    @xmath129,\\varrho\\rangle}{\\langle x\\between y,\\varrho\\rangle\\xrightarrow{\\gamma(\\nu,\\mu)}\\langle\\gamma(\\nu,\\mu)[m]\\cdot x',\\varrho\\rangle } \\quad\\frac{\\langle x,\\varrho\\rangle\\xrightarrow{\\nu}\\langle x',\\varrho\\rangle\\quad \\langle y,\\varrho\\rangle\\xrightarrow{\\mu}\\langle y',\\varrho\\rangle}{\\langle x\\between y,\\varrho\\rangle\\xrightarrow{\\gamma(\\nu,\\mu)}\\langle\\gamma(\\nu,\\mu)[m]\\cdot x'\\parallel y',\\varrho\\rangle}.\\ ] ]    the reverse transition rules under qtss for communication merge are as follows and say that the communication can be merged .",
    "@xmath130}}\\langle\\nu,\\varrho\\rangle\\quad \\langle y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\mu[m]}}\\langle\\mu,\\varrho\\rangle}{\\langle x\\between y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\gamma(\\nu,\\mu)[m]}}\\langle\\gamma(\\nu,\\mu),\\varrho\\rangle } \\quad\\frac{\\langle x,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\nu[m]}}\\langle\\nu,\\varrho\\rangle\\quad \\langle y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\mu[m]}}\\langle y',\\varrho\\rangle}{\\langle x\\between y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\gamma(\\nu,\\mu)[m]}}\\langle\\gamma(\\nu,\\mu)\\cdot y',\\varrho\\rangle}\\ ] ]    @xmath130}}\\langle x',\\varrho\\rangle\\quad \\langle y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\mu[m]}}\\langle\\mu,\\varrho\\rangle}{\\langle x\\between y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\gamma(\\nu,\\mu)[m]}}\\langle\\gamma(\\nu,\\mu)\\cdot x',\\varrho\\rangle } \\quad\\frac{\\langle x,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\nu[m]}}\\langle x',\\varrho\\rangle\\quad \\langle y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\mu[m]}}\\langle y',\\varrho\\rangle}{\\langle x\\between y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\gamma(\\nu,\\mu)[m]}}\\langle\\gamma(\\nu,\\mu)\\cdot x'\\parallel y',\\varrho\\rangle}\\ ] ]    the four forward transition rules of entanglement merge @xmath122 are as follows .    @xmath123,\\varrho'\\rangle \\quad \\langle y,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle \\upsilon[m],\\varrho'\\rangle}{\\langle x\\ddagger y,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle\\upsilon[m],\\varrho'\\rangle } \\quad\\frac{\\langle x,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle\\upsilon[m],\\varrho'\\rangle \\quad \\langle y,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle y',\\varrho'\\rangle}{\\langle x\\ddagger y,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle\\upsilon[m]\\cdot y',\\varrho'\\rangle}\\ ] ]    @xmath131,\\varrho'\\rangle}{\\langle x\\ddagger y,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle\\upsilon[m]\\cdot x',\\varrho'\\rangle } \\quad\\frac{\\langle x,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle x',\\varrho'\\rangle \\quad \\langle y,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle y',\\varrho'\\rangle}{\\langle x\\ddagger y,\\varrho\\rangle\\xrightarrow{\\upsilon}\\langle\\upsilon[m]\\cdot x'\\parallel y',\\varrho'\\rangle}\\ ] ]    the four reverse transition rules of entanglement merge @xmath122 are as follows .    @xmath125}}\\langle\\upsilon,\\varrho'\\rangle \\quad \\langle y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle \\upsilon,\\varrho'\\rangle}{\\langle x\\ddagger y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle\\upsilon,\\varrho'\\rangle } \\quad\\frac{\\langle x,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle\\upsilon,\\varrho'\\rangle",
    "\\quad \\langle y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon}}\\langle y',\\varrho'\\rangle}{\\langle x\\ddagger y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle\\upsilon\\cdot y',\\varrho'\\rangle}\\ ] ]    @xmath125}}\\langle x',\\varrho'\\rangle \\quad \\langle y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle \\upsilon,\\varrho'\\rangle}{\\langle x\\ddagger y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle\\upsilon\\cdot x',\\varrho'\\rangle } \\quad\\frac{\\langle x,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle x',\\varrho'\\rangle \\quad \\langle y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle y',\\varrho'\\rangle}{\\langle x\\ddagger y,\\varrho\\rangle {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{\\upsilon[m]}}\\langle\\upsilon\\cdot x'\\parallel y',\\varrho'\\rangle}\\ ] ]    we can get the following conclusions .    * theorem 1*. rqpap is a conservative extension of brqpa .    since the corresponding tss of brqpa is source - dependent , and the transition rules for parallel operator @xmath119 , static parallel operator @xmath120 , communication merge @xmath121 and entanglement merge @xmath122 contain only a fresh operator in their source , so the corresponding tss of rqpap is a conservative extension of that of brqpa .",
    "that means that rqpap is a conservative extension of brqpa .",
    "* theorem 2*. quantum fr bisimulation equivalence is a congruence with respect to rqpap .",
    "the structural part of qtsss for rqpap and brqpa are all in panth format , so bisimulation fr equivalence that they induce is a congruence .",
    "according to the definition of quantum fr bisimulation , quantum fr bisimulation equivalence that qtsss for rqpap induce is also a congruence .",
    "we design an axiomatization for rqpap illustrated in table [ axiomforrqpap ] .    @ll@",
    "& axiom + rqp1 & @xmath132 +   + rqp2 & @xmath133 + rqp3 & @xmath134 + rqp4 & @xmath135 + rqp5 & @xmath136 + rqp6 & @xmath137 + rqp7 & @xmath138 +   + rqc8 & @xmath139 + rqc9 & @xmath140\\between\\omega[m]=\\gamma(\\upsilon,\\omega)[m]$ ] + rqc10 & @xmath141 + rqc11 & @xmath140\\between(\\omega[m]\\cdot y ) = \\gamma(\\upsilon,\\omega)[m]\\cdot y$ ] + rqc12 & @xmath142 + rqc13 & @xmath143\\cdot x)\\between\\omega[m ] = \\gamma(\\upsilon,\\omega)[m]\\cdot x$ ] + rqc14 & @xmath144 + rqc15 & @xmath143\\cdot x)\\between(\\omega[m]\\cdot y ) = \\gamma(\\upsilon,\\omega)[m]\\cdot ( x\\parallel y)$ ] + rqc16 & @xmath145 + rqc17 & @xmath146 +   + rqe18 & @xmath147 + rqe19 & @xmath140 \\ddagger \\upsilon[m ] = \\upsilon[m]$ ] + rqe20 & @xmath148 + rqe21 & @xmath140 \\ddagger ( \\upsilon[m]\\cdot y ) = \\upsilon[m]\\cdot y$ ] + rqe22 & @xmath149 + rqe23 & @xmath143 \\cdot x)\\ddagger \\upsilon[m ] = \\upsilon[m]\\cdot x$ ] + rqe24 & @xmath150 + rqe25 & @xmath143 \\cdot x)\\ddagger ( \\upsilon[m]\\cdot y ) = \\upsilon[m]\\cdot(x\\parallel y)$ ] + rqe26 & @xmath151 + rqe27 & @xmath152 +    then , we can get the soundness and completeness theorems as follows .",
    "* theorem 3*. @xmath153 is sound for rqpap modulo quantum fr bisimulation equivalence .",
    "since quantum fr bisimulation is both an equivalence and a congruence for rqpap , only the soundness of the first clause in the definition of the relation @xmath154 is needed to be checked .",
    "that is , if @xmath155 is an axiom in @xmath153 and @xmath156 a closed substitution that maps the variable in @xmath15 and @xmath157 to basic reversible quantum process terms , then we need to check that @xmath158 .",
    "since axioms in @xmath153 are sound for rpap modulo fr bisimulation equivalence , according to the definition of quantum fr bisimulation , we only need to check if @xmath56 when @xmath54 , where @xmath57 evolves into @xmath58 after execution of @xmath159 and @xmath59 evolves into @xmath60 after execution of @xmath160 .",
    "we can find that every axiom in table [ axiomforrqpap ] meets the above condition .",
    "* theorem 4*. @xmath153 is complete for rqpap modulo quantum fr bisimulation equivalence .    to prove that @xmath153 is complete for rqpap modulo quantum fr bisilumation equivalence , it means that @xmath161 implies @xmath155 .",
    "it can be proved that @xmath153 is complete for rpap modulo fr bisimulation equivalence , that is , @xmath162 implies @xmath155 .",
    "\\(1 ) we consider the introduction to the static parallel @xmath120 .",
    "we consider reversible process terms contains + , @xmath163 , @xmath120 modulo associativity and commutativity ( @xmath164 ) of the + ( ra1,ra2 ) , and this equivalence relation is denoted by @xmath165 . a reversible process term",
    "@xmath15 then represents the collection of reversible process term @xmath157 contains @xmath166 , @xmath163 , and @xmath120 such that @xmath167 .",
    "each equivalence class @xmath15 modulo @xmath164 of the + can be represented in the form @xmath168 with each @xmath169 either an atomic action or of the form @xmath170 .",
    "we refer to the subterms @xmath169 and @xmath171 are the summands of @xmath15",
    ".    then rqp2-rqp7 are turned into rewrite rules from left to right :    @xmath172 @xmath173 @xmath174 @xmath175 @xmath176 @xmath177    then these rewrite rules are applied to the above reversible process terms modulo @xmath164 of the + .",
    "we let the weight functions    @xmath178 @xmath179)\\triangleq 2\\ ] ] @xmath180 @xmath181 @xmath182    we can see that the trs is terminating modulo @xmath164 of the + .",
    "next , we prove that normal forms @xmath183 and @xmath184 with @xmath185 implies @xmath186 .",
    "the proof is based on induction with respect to the sizes of @xmath183 and @xmath184 .",
    "let @xmath185 .",
    "* consider a summand @xmath187 of @xmath183 .",
    "then @xmath188+u$ ] , so @xmath185 implies @xmath189+u$ ] , meaning that @xmath184 also contains the summand @xmath187 . *",
    "consider a summand @xmath190 $ ] of @xmath183 .",
    "then @xmath191}}a+u$ ] , so @xmath185 implies @xmath192}}a+u$ ] , meaning that @xmath184 also contains the summand @xmath190 $ ] . *",
    "consider a summand @xmath193 of @xmath183 .",
    "then @xmath194\\cdots a_i[m_i]\\cdots a_k[m_k]+u$ ] , so @xmath185 implies @xmath195\\cdots a_i[m_i]\\cdots a_k[m_k]+u$ ] , meaning that @xmath184 also contains the summand @xmath193 .",
    "* consider a summand @xmath196\\cdots a_i[m_i]\\cdots a_k[m_k]$ ] of @xmath183",
    ". then @xmath197}}\\cdots {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{a_i[m_i]}}\\cdots {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{a_1[m_1]}}a_1\\cdots a_i\\cdots a_k+u$ ] , so @xmath185 implies @xmath198}}\\cdots {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{a_i[m_i]}}\\cdots {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{a_1[m_1]}}a_1\\cdots a_i\\cdots a_k+u$ ] , meaning that @xmath184 also contains the summand @xmath196\\cdots a_i[m_i]\\cdots a_k[m_k]$ ] .",
    "* consider a summand @xmath199 of @xmath183 .",
    "then @xmath188\\mid b+u\\xrightarrow{b}a[m]\\mid b[k]+u$ ] , or @xmath200+u\\xrightarrow{a}a[m]\\mid b[k]+u$ ] , so @xmath185 implies @xmath189\\mid b+u\\xrightarrow{b}a[m]\\mid b[k]+u$ ] , or @xmath201+u\\xrightarrow{a}a[m]\\mid b[k]+u$ ] , meaning that @xmath184 also contains the summand @xmath199 . *",
    "consider a summand @xmath190\\mid b[k]$ ] of @xmath183 .",
    "then @xmath191}}a\\mid b[k]+u {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{b[k]}}a\\mid b+u$ ] , or @xmath202}}a[m]\\mid b+u {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{a[m]}}a\\mid b+u$ ] , so @xmath185 implies @xmath192}}a\\mid b[k]+u {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{b[k]}}a\\mid b+u$ ] , or @xmath203}}a[m]\\mid b+u {   \\ext@arrow 0055{\\rightslashedarrowfillg@}{}{a[m]}}a\\mid b+u$ ] , meaning that @xmath184 also contains the summand @xmath190\\mid b[k]$ ] . *",
    "the summands @xmath204 and @xmath190s\\mid b[k]t$ ] are integrated cases of the above summands .",
    "hence , each summand of @xmath183 is also a summand of @xmath184 .",
    "vice versa , each summand of @xmath184 is also a summand of @xmath183 .",
    "in other words , @xmath186 .    finally , let the reversible process terms @xmath15 and @xmath157 contains + , @xmath163 , and @xmath120 be fr bisimilar .",
    "the trs is terminating modulo @xmath164 of the + , so it reduces @xmath15 and @xmath157 to normal forms @xmath183 and @xmath184 , respectively . since the rewrite rules and equivalence modulo @xmath164 of the + can be derived from the axioms , @xmath205 and @xmath206 .",
    "soundness of the axioms then yields @xmath207 and @xmath208 , so @xmath209 .",
    "we showed that @xmath185 implies @xmath210 .",
    "hence , @xmath211 .",
    "\\(2 ) we prove the completeness of the axioms involve the parallel operator @xmath119 , the communication merge @xmath121 and the entanglement merge @xmath122 .",
    "the axioms rqp1 , rqc8-rqc17 and rqe18-rqe27 are turned into rewrite rules , by directing them from left to right .",
    "@xmath212 @xmath213 @xmath214\\between\\omega[m ] \\rightarrow \\gamma(\\upsilon,\\omega)[m]\\ ] ] @xmath215 @xmath214\\between(\\omega[m]\\cdot y ) \\rightarrow \\gamma(\\upsilon,\\omega)[m]\\cdot y\\ ] ] @xmath216 @xmath217\\cdot x)\\between\\omega[m ] \\rightarrow \\gamma(\\upsilon,\\omega)[m]\\cdot x\\ ] ] @xmath218 @xmath217\\cdot x)\\between(\\omega[m]\\cdot y ) \\rightarrow \\gamma(\\upsilon,\\omega)[m]\\cdot ( x\\parallel y)\\ ] ] @xmath219 @xmath220 @xmath221 @xmath214 \\ddagger \\upsilon[m ] \\rightarrow \\upsilon[m]\\ ] ] @xmath222 @xmath214 \\ddagger ( \\upsilon[m]\\cdot y ) \\rightarrow \\upsilon[m]\\cdot y\\ ] ] @xmath223 @xmath217 \\cdot x)\\ddagger \\upsilon[m ] \\rightarrow \\upsilon[m]\\cdot x\\ ] ] @xmath224 @xmath217 \\cdot x)\\ddagger ( \\upsilon[m]\\cdot y ) \\rightarrow",
    "\\upsilon[m]\\cdot(x\\parallel y)\\ ] ] @xmath225 @xmath226    then these rewrite rules are applied to the above reversible process terms modulo @xmath164 of the + .",
    "we let the weight functions    @xmath178 @xmath179)\\triangleq 2\\ ] ] @xmath227 @xmath228\\triangleq 2)\\ ] ] @xmath229\\triangleq 2)\\ ] ] @xmath180 @xmath181 @xmath230 @xmath231 @xmath232 @xmath233    we can see that the trs is terminating modulo @xmath164 of the + .",
    "we prove that normal forms n do not contain occurrences of the remaining three parallel operators @xmath119 , @xmath121 and @xmath122 . the proof is based on induction with respect to the size of the normal form @xmath183 .    * if @xmath183 is an atomic action , then it does not contain any parallel operators .",
    "* suppose @xmath234 or @xmath235 or @xmath236 or @xmath237 .",
    "then by induction the normal forms @xmath15 and @xmath157 do not contain @xmath119 , @xmath121 and @xmath122 , so that @xmath183 does not contain @xmath119 , @xmath121 and @xmath122 either .",
    "* @xmath183 can not be of the form @xmath238 , because in that case the directed version of rp1 would apply to it , contradicting the fact that n is a normal form .",
    "* suppose @xmath239 . by induction the normal forms",
    "@xmath15 and @xmath157 do not contain @xmath119 and @xmath121 .",
    "we can distinguish the possible forms of @xmath15 and @xmath157 , which all lead to the conclusion that one of the directed versions of rqc8-rqc17 can be applied to @xmath183 .",
    "we conclude that @xmath183 can not be of the form @xmath240 .",
    "* suppose @xmath241 . by induction the normal forms",
    "@xmath15 and @xmath157 do not contain @xmath119 and @xmath122 .",
    "we can distinguish the possible forms of @xmath15 and @xmath157 , which all lead to the conclusion that one of the directed versions of rqe18-rqe27 can be applied to @xmath183 .",
    "we conclude that @xmath183 can not be of the form @xmath242 .",
    "hence , normal forms do not contain occurrences of parallel operators @xmath119 , @xmath121 and @xmath122 .",
    "in other words , normal forms only contains @xmath166 , @xmath163 and @xmath120 .",
    "finally , let the reversible process terms @xmath15 and @xmath157 be fr bisimilar .",
    "the trs is terminating modulo @xmath164 of the + , so it reduces @xmath15 and @xmath157 to normal forms @xmath183 and @xmath184 , respectively . since the rewrite rules and equivalence modulo @xmath164 of the + can be derived from the axioms , @xmath205 and @xmath206 .",
    "soundness of the axioms then yields @xmath207 and @xmath208 , so @xmath209 .",
    "we showed that @xmath185 implies @xmath210 .",
    "hence , @xmath211 .",
    "@xmath161 with @xmath54 means that @xmath162 with @xmath54 and @xmath56 , where @xmath57 evolves into @xmath58 after execution of @xmath15 and @xmath59 evolves into @xmath60 after execution of @xmath157 , according to the definition of quantum fr bisimulation equivalence .",
    "the completeness of @xmath153 for rpap modulo fr bisimulation equivalence determines that @xmath153 is complete for rqpap modulo quantum fr bisimulation equivalence .    for deadlock constant @xmath113 and encapsulation operator @xmath243 , ten extra axioms",
    "should be added , as table [ axiomforarqcp ] shows .",
    ".six extra axioms for arqcp [ cols= \" < , < \" , ]     we can easily get that the new axiomatization @xmath244 is sound for arqcp modulo quantum fr bisimulation equivalence , and the new @xmath244 is complete for arqcp modulo quantum fr bisimulation equivalence .",
    "now , we consider the influence of the new arqcp with entanglement to the whole qracp , i.e. , arqcp - rp with guarded recursion and @xmath245 with guarded recursion .",
    "guarded recursion defines infinite computation through guarded recursion specifications .",
    "extension to guarded recursion based on the new arqcp has almost no influence comparing with that in qracp .",
    "the axiomatization @xmath246 + rdp + rsp is sound and complete for arqcp - rp with linear recursion modulo quantum fr bisimulation equivalence .",
    "similarly , the new arqcp does not influence @xmath245 with guarded recursion , i.e. , @xmath247 + rsp + rdp + cfar is sound and complete for @xmath245 with guarded linear recursion , modulo quantum rooted branching fr bisimulation equivalence .",
    "but , entanglement merge @xmath122 makes entanglement explicit in qracp . based on the framework of quantum process configuration @xmath248 , by introducing silent step @xmath64 and abstraction operator @xmath249 , the definition of @xmath57 only records the so - called public quantum variables and claim that a @xmath64 operation only manipulates on entangled quantum variables which should be included in the so - called private variables .",
    "now , we explicitly define a new entanglement merge to model entanglement in quantum processes and this declaration can be moved away .",
    "with support of entanglement merge @xmath122 , now , qracp can be used to verify quantum protocols utilizing entanglement within the framework of reversible quantum computing .",
    "the e91 protocol@xcite is the first quantum protocol which utilizes entanglement and mixes quantum and classical information . in this section ,",
    "we take an example of verification for the e91 protocol .",
    "the e91 protocol is used to create a private key between two parities , alice and bob .",
    "firstly , we introduce the basic e91 protocol briefly , which is illustrated in fig.[e91 ] .    1 .",
    "alice generates a string of epr pairs @xmath61 with size @xmath183 , i.e. , @xmath250 particles , and sends a string of qubits @xmath251 from each epr pair with @xmath183 to bob through a quantum channel @xmath0 , remains the other string of qubits @xmath252 from each pair with size @xmath183 .",
    "2 .   alice create two string of bits with size @xmath183 randomly , denoted as @xmath253 and @xmath254 .",
    "3 .   bob receives @xmath251 and randomly generates a string of bits @xmath255 with size @xmath183 .",
    "alice measures each qubit of @xmath252 according to a basis by bits of @xmath253 . and the measurement results would be @xmath254 , which is also with size @xmath183 . 5 .",
    "bob measures each qubit of @xmath251 according to a basis by bits of @xmath255 . and",
    "the measurement results would be @xmath256 , which is also with size @xmath183 .",
    "bob sends his measurement bases @xmath255 to alice through a public channel @xmath257 .",
    "once receiving @xmath255 , alice sends her bases @xmath253 to bob through channel @xmath257 , and bob receives @xmath253 .",
    "alice and bob determine that at which position the bit strings @xmath253 and @xmath255 are equal , and they discard the mismatched bits of @xmath253 and @xmath255 . then the remaining bits of @xmath254 and @xmath256 , denoted as @xmath258 and @xmath259 with @xmath260 .",
    "we re - introduce the basic e91 protocol in an abstract way with more technical details as fig.[e91 ] illustrates .",
    "now , @xmath261 $ ] denotes the alice s measurement operation of @xmath252 ; @xmath262 $ ] denotes the bob s measurement operation of @xmath251 .",
    "alice sends @xmath251 to bob through the quantum channel @xmath0 by quantum communicating action @xmath263 and bob receives @xmath251 through @xmath0 by quantum communicating action @xmath264 .",
    "bob sends @xmath255 to alice through the public channel @xmath257 by classical communicating action @xmath265 and alice receives @xmath255 through channel @xmath257 by classical communicating action @xmath266 , and the same as @xmath267 and @xmath268 .",
    "alice and bob generate the private key @xmath269 by a classical comparison action @xmath270 .",
    "let alice and bob be a system @xmath271 and let interactions between alice and bob be internal actions .",
    "@xmath271 receives external input @xmath272 through channel @xmath110 by communicating action @xmath273 and sends results @xmath274 through channel @xmath275 by communicating action @xmath276 .",
    "then the state transition of alice can be described by qacp as follows .",
    "@xmath277\\cdot a_3\\nonumber\\\\ & & a_3=m[q_b;k_b]\\cdot a_4\\nonumber\\\\ & & a_4=receive_p(b_b)\\cdot a_5\\nonumber\\\\ & & a_5=send_p(b_a)\\cdot a_6\\nonumber\\\\ & & a_6=cmp(k_{a , b},k_a , k_b , b_a , b_b)\\cdot a\\nonumber\\end{aligned}\\ ] ]    where @xmath278 is the collection of the input data .    and the state transition of bob can be described by qacp as follows .",
    "@xmath279\\cdot b_2\\nonumber\\\\ & & b_2=m[q_b;k_b]\\cdot b_3\\nonumber\\\\ & & b_3=send_p(b_b)\\cdot b_4\\nonumber\\\\ & & b_4=receive_p(b_a)\\cdot b_5\\nonumber\\\\ & & b_5=cmp(k_{a , b},k_a , k_b , b_a , b_b)\\cdot b_6\\nonumber\\\\ & & b_6=\\sum_{d_o\\in\\delta_o}send_b(d_o)\\cdot b\\nonumber\\end{aligned}\\ ] ]    where @xmath280 is the collection of the output data .",
    "the send action and receive action of the same data through the same channel can communicate each other , otherwise , a deadlock @xmath113 will be caused .",
    "the quantum operation and its shadow constant pair will lead entanglement occur , otherwise , a deadlock @xmath113 will occur .",
    "we define the following communication functions .",
    "@xmath281    let @xmath110 and @xmath275 in parallel , then the system @xmath271 can be represented by the following process term .",
    "@xmath282    where @xmath283 , m[q_b;k_b ] , \\}$ ] and @xmath284 , m[q_b;k_b],\\\\ cmp(k_{a , b},k_a , k_b , b_a , b_b)\\}$ ]",
    ".    then we get the following conclusion",
    ".    * theorem 5*. the basic e91 protocol @xmath285 exhibits desired external behaviors under the framework of reversible quantum computing .",
    "@xmath286\\cdot\\partial_h(a_3\\parallel b_2)\\nonumber\\\\ & & \\partial_h(a_3\\parallel b_2)=m[q_b;k_b]\\cdot\\partial_h(a_4\\parallel b_3)\\nonumber\\\\ & & \\partial_h(a_4\\parallel b_3)=c_p(b_b)\\cdot\\partial_h(a_5\\parallel b_4)\\nonumber\\\\ & & \\partial_h(a_5\\parallel b_4)=c_p(b_a)\\cdot\\partial_h(a_6\\parallel b_5)\\nonumber\\\\ & & \\partial_h(a_6\\parallel b_5)=cmp(k_{a , b},k_a , k_b , b_a , b_b)\\cdot\\partial_h(a\\parallel b_5)\\nonumber\\\\ & & \\partial_h(a\\parallel b_5)=cmp(k_{a , b},k_a , k_b , b_a , b_b)\\cdot\\partial_h(a\\parallel b_6)\\nonumber\\\\ & & \\partial_h(a\\parallel b_6)=\\sum_{d_o\\in\\delta_o}send_b(d_o)\\cdot\\partial_h(a\\parallel b)\\nonumber\\end{aligned}\\ ] ]    let @xmath287 , where e is the following guarded linear recursion specification :    @xmath288\\cdot x_4,x_4=m[q_b;k_b]\\cdot x_5,x_5=c_p(b_b)\\cdot x_{6},x_{6}=c_p(b_a)\\cdot x_{7},\\nonumber\\\\ & & x_{7}=cmp(k_{a , b},k_a , k_b , b_a , b_b)\\cdot x_{8},x_{8}=cmp(k_{a , b},k_a , k_b , b_a , b_b)\\cdot x_{9},\\nonumber\\\\ & & x_{9}=\\sum_{d_o\\in\\delta_o}send_b(d_o)\\cdot x_1\\}\\nonumber\\end{aligned}\\ ] ]    then we apply abstraction operator @xmath249 into @xmath289 .",
    "@xmath290    we get @xmath291 , that is , @xmath292 .",
    "so , the basic e91 protocol @xmath285 exhibits desired external behaviors under the framework of reversible quantum computing .",
    "we explicitly model entanglement under the framework of reversible quantum computing .",
    "different to modeling of entanglement in quantum computing , the shadow constant is unnecessary . and also , as a kind of parallelism , entanglement merge is also quite different .",
    "m. lalire and p. jorrand . : _ a process algebraic approach to concurrent and distributed quantum computation : operational semantics . _",
    "proceedings of the 2nd international workshop on quantum programming languages , tucs general publications , 2004 : 109126 ."
  ],
  "abstract_text": [
    "<S> we explicitly model entanglement as a kind of parallelism under the framework of reversible quantum computing . </S>",
    "<S> a sound and complete axiomatization is founded . </S>",
    "<S> different to modeling of entanglement in quantum computing , the shadow constant is unnecessary . and also , as a kind of parallelism , entanglement merge is also quite different .    </S>",
    "<S> [ firstpage ]    quantum mechanics ; entanglement ; quantum processes ; reversible computation ; quantum computing </S>"
  ]
}
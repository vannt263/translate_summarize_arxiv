{
  "article_text": [
    "algebraic structures are present in many mathematical problems , so they arise naturally in a large number of applications , like medical imaging , remote sensing , geophysical prospection , image deblurring , etc .",
    "moreover , in many real - world computations , the full exploitation of the structure of the problem is essential to be able to manage large dimensions and real time processing .    in the last 25 years , a great effort has been made to study the properties of algebraic structures and to develop algorithms capable of taking advantage of these structures in the solution of various matrix problems ( solution of linear systems , eigenvalues computation , etc . ) , as well as in matrix arithmetics , for what concerns memory storage , speed of computation and stability .    in spite of the many important advances in this field , there is not much software publicly available for structured matrices computation . on the contrary , most of the _ fast _ algorithms which have been proposed , and",
    "whose properties have been studied theoretically , exist only under the form of published papers or , in some occasion , unreleased ( and often unoptimized ) research code .",
    "this fact often force researchers to re - implement from scratch algorithms and _ blas - like _ routines , even for the most classical classes of structured matrices .",
    "anyway , this is possible only for those with enough knowledge in mathematics and computer science , and totally rules out a large amount of potential users of structured algorithms .",
    "matlab  @xcite is a computational environment which is extremely diffused among both applied mathematicians and engineers , in academic as well as in industrial research .",
    "it makes matrix computation sufficiently easy and immediate , and provides the user with powerful scientific visualization tools . at the moment , besides the standard unstructured ( or _ full _ ) matrices , the only matrix structure natively supported in matlab is sparsity . in _ sparse matrix storage _ only nonzero elements are kept in memory , together with their position inside the matrix .",
    "moreover , all operations between sparse matrices are redefined to reduce execution time and memory consumption , while mixed computations return full or sparse arrays depending on the type of operations involved .",
    "our idea is to extend matlab with a computational framework devoted to structured matrices , with the aim of making it easy to use and _ matlab - like _ , transparent for the user , highly optimized for what concerns storage and complexity , and easily extensible .",
    "we tried to follow closely the way matlab treats sparse matrices , and for doing this , we used the matlab object - oriented classes .",
    "starting from version 5 , in fact , it is possible to add new data types in matlab ( _ classes _ ) , to define _ methods _ for _ classes _ , i.e. , functions to create and manipulate variables belonging to the new data type , and to _ overload _ ( redefine ) the arithmetic operators for each new class .    at the moment , our toolbox supports two very common classes of structured matrices , namely circulant and toeplitz matrices . in writing the software our aim was not only to furnish storage support , full arithmetics and some additional methods for these structured matrices , but also to create a framework easily extendible , in terms of functions and new data types , and to specify a pattern for future developments of the package .",
    "so , a great effort was spent in the software engineering of the toolbox .    among the available matlab software for structured matrices computation , we mention the following internet resources .",
    "various fast and superfast algorithms for structured matrices have been developed by the mase - team ( matrices having structure )  @xcite , coordinated by marc van barel at the katholieke universiteit of leuven . a toolbox for structured matrix decompositions",
    "@xcite has been included in the slicot package  @xcite , developed under the niconet ( numerics in control network ) european project  @xcite .",
    "the restoretools  @xcite is an object oriented matlab package for image restoration which has been developed by james nagy and his group at emory university .",
    "the moore tools  @xcite , an object oriented toolbox for the solution of discrete ill - posed problems derived from  @xcite , provides some support for certain classes of structured matrices , mainly kronecker products , circulant and block - circulant matrices .",
    "matlab implementations of various algorithms are also available in the personal home pages of many researchers working in this field .",
    "many subroutines written in general purpose languages , like c or fortran , are also available .",
    "it is worth mentioning that there are plans to add support for structured matrices in lapack and scalapack ; see  ( * ? ? ?",
    "* section  4 ) .",
    "the plan of this paper is the following . in section",
    "[ sec : toolbox ] , we describe in detail our toolbox , called ` smt `  ( structured matrix toolbox ) , its capabilities , the new data types added to matlab and the functions for their treatment .",
    "section  [ sec : implementation ] is devoted to some technical implementation issues , while in section  [ sec : conclusion ] we describe possible future lines of development of this software package .",
    "once installed ( see section  [ sec : implementation ] ) , the toolbox resides in the directory tree sketched in fig .",
    "[ fig : dirtree ] .",
    "the main directory contains a set of general purpose functions , described in detail in section  [ sec : general ] , and the following four subdirectories :    * `  @smcirc ` and ` @smtoep ` , which contain the functions to create and manipulate the objects of class ` smcirc `  and ` smtoep ` , i.e. , circulant and toeplitz matrices ; * `  private ` , whose functions , discussed in section  [ sec : general ] , are accessible by the user only through the commands placed at the upper directory level ; * `  demo ` , which hosts an interactive tutorial on the basic use of the toolbox .",
    "let us briefly explain how matlab deals with new data types .",
    "when the user creates an object of class , say , ` obj ` , then the interpreter looks for the function with the same name in a directory called ` @obj ` , located in the search path .",
    "similarly , when an expression involves a variable of class ` obj ` or a function is applied to it , the same directory is searched for an appropriate operator or function defined for objects of this class .    writing this software , we took great care in checking the validity of the input parameters , in particular for what concerns dimensions and data types , and in using an appropriate style for warnings and errors , in order to guarantee the _ matlab - like _ behaviour of the toolbox .",
    "as this requires a long chain of conditional tests , the resulting functions are often more complicated than expected ( see for example the file ` mtimes.m ` in the directory ` @smcirc ` ) , but this does not seem to have a significant impact on execution time .    full documentation for every function of the toolbox is accessible via the matlab ` help ` command and the code itself is extensively commented .",
    "manual pages can be obtained by the usual matlab means , i.e. ,    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ xxxxxxxxxxxxxxxxxxxx = ` help ` @xmath0func_name@xmath1 for the functions in the main directory , + ` help ` @xmath0class@xmath1/@xmath0func_name@xmath1 where @xmath0class@xmath1 is either ` @smcirc ` or ` @smtoep ` , + ` help private`/@xmath0func_name@xmath1 for the functions in the ` private ` subdirectory .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    notice that @xmath0func_name@xmath1 may be ` contents ` ( except in conjunction with ` private ` ) , in which case a description of the entire directory content is displayed .",
    "for example , the command    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .... help @smtoep / contents .... _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    displays the list of all the functions , operators and methods for ` smtoep `  objects ( i.e. , toeplitz matrices ) , while    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .... help @smtoep / mtimes .... _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    gives information about the matrix product operator for toeplitz matrices .",
    "we remark that the toolbox supports both real and complex structured matrices , since complex numbers are natively implemented in matlab .",
    "it is also possible to manage sparse ` smcirc `  and ` smtoep `  objects .",
    "a circulant matrix  @xcite of order @xmath2 is a matrix @xmath3 whose elements satisfy the relations @xmath4 e.g. , for @xmath5 , @xmath6    the main property of a circulant matrix is that it is diagonalized by the normalized fourier matrix @xmath7 , defined by @xmath8 where @xmath9 is any primitive complex @xmath2-th root of unity ( i.e. , @xmath10 for @xmath11 , and @xmath12 ) .",
    "we let @xmath13 and @xmath14 .",
    "this allows us to factorize any circulant matrix in the form @xmath15 where @xmath16 and @xmath17 is the discrete fourier transform of the first column of @xmath3 .",
    "given the definition of discrete fourier transform adopted in the @xmath18 command of matlab , we have @xmath19 being @xmath20 the first column of @xmath3 .    in `",
    "smt ` , a variable ` c ` of class ` smcirc `  is a record composed by 4 fields .",
    "the field ` c.type ` is set to the string ` _ _ circulant _ _ ' , and is a reminder , present in all ` smt `  data types , denoting the kind of the structured matrix .",
    "the first column of the circulant matrix @xmath3 gives complete information about it , and is stored in ` c.c ` , while ` c.dim ` is the dimension @xmath2 .",
    "the field ` c.ev ` contains the vector @xmath21 of the eigenvalues of @xmath3 ; it is computed when the matrix is created and updated every time it is modified .",
    "this means that the initial allocation of a circulant matrix , as well as some operations involving it , takes @xmath22 floating point operations ( _ flops _ ) .    for example , an object of class ` smcirc `  can be created specifying its first column , with the command    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .... c = smcirc([1;2;3;4 ] ) .... _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    and it is visualized either as a matrix    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .... c =       1      4      3      2       2      1      4      3       3      2      1      4       4      3      2      1 .... _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    or showing its record structure    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .... c = smcirc object with fields :      type : ' circulant '         c : [ 4x1 double ]       dim : 4        ev : [ 4x1 double ] .... _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    depending on how the configuration parameter ` display `  is set ; see the function ` smtconfig ` in section  [ sec : general ] .",
    "the structure of the object can also be inspected with the command ` get(c ) ` , independently on the configuration of the package . if the column vector passed to `",
    "smcirc `  is of class _ sparse _",
    ", this memory storage class will be preserved in ` c.c ` , but not in ` c.ev ` .",
    "all operations between circulant matrices have been implemented , when possible , by _ fast _ algorithms , meaning that they require a complexity smaller than the corresponding unstructured matrix operations .",
    "for example , when the user computes the sum of two circulant matrices with the command ` a = c+d ` , the function ` plus.m ` is automatically called , in order to sum the ` .c ` fields , and to update the ` .ev ` field of the resulting object , as follows @xmath23 to multiply a circulant matrix @xmath3 times a vector @xmath24 , we can exploit the factorization to obtain @xmath25 where @xmath26 denotes the schur product of two vectors .",
    "this requires only 2 ` fft ` s , since the vector @xmath21 is stored in the ` .ev ` field of the corresponding object ` c ` . in a similar way",
    ", the first column of the product of two circulant matrices is evaluated by the inverse discrete fourier transform of the product of the eigenvalues of the two factors . in all cases ,",
    "the computation is optimized in terms of complexity . after performing many operations which update the eigenvalues of an ` smcirc`object",
    ", it may be advisable to recompute ` c.ev ` , to improve its accuracy ; if required , this can be done by    _ _ _ _ _ _ _ _ _ _ _ _ _ _ .... c = smcirc(c.c ) , .... _ _ _ _ _ _ _ _ _ _ _ _ _ _    as the user is not allowed to directly modify the fields of an object belonging to an ` smt `  class .",
    "l@  c|l@  c + ` plus ` & ` a+b ` & ` power ` & ` a.2 ` + ` uplus ` & ` + a ` & ` mldivide ` & ` ab ` + ` minus ` & ` a - b ` & ` mrdivide ` & ` a / b ` + ` uminus ` & ` -a ` & ` ldivide ` & ` a.b ` + ` mtimes ` & ` a*b ` & ` rdivide ` & ` a./b ` + ` times ` & ` a.*b ` & ` transpose ` & ` a. ` + ` mpower ` & ` a2 ` & ` ctranspose ` & ` a ` +    all the _ overloaded _ operators , or _ methods _ , for ` smcirc `  objects are coded in a set of functions , whose names ( fixed by the matlab syntax ) are reported in table  [ tab : operators ] , together with the equivalent matlab notations . each of these functions is called when at least one of the operands in an expression is of class ` smcirc ` ; if the two operands are different ` smt`objects , the method corresponding to the first one is called .",
    "the result is structured whenever this is possible .    when an operation is performed between two circulant matrices ,",
    "the complexity is not larger than @xmath22 ( for example in the matrix product ) , while it may be larger when one of the arguments is unstructured ; e.g. , the product between a circulant and a full matrix , which is computed by multiplying the first operand times each of the columns of the second one , takes @xmath27 _ flops_. so , if ` c ` and ` d ` are both ` smcirc `  objects and ` x ` is a vector ,    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ xxxxxxxxxxxxxxx = ` e = c*d ` produces a ` smcirc `  object , + ` y=(c+d)*x ` returns a vector , + ` f = c*rand(n ) ` returns an unstructured matrix , _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    and , in all cases , the fast algorithms implemented for the ` smcirc `  class are automatically used in the computation .",
    "the operations on ` smcirc `  objects which rely on the factorization , and so exhibit a @xmath28 complexity , are the product , the power and the left / right division for matrices . obviously , some operators do not involve floating point computations at all , like the transposition or the unary minus .",
    "[ algo : plus ]     xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = check validity and dimensions of input arguments @xmath3 and @xmath29 + deal with scalar or empty arguments +  @xmath3 is ` smcirc ` +  @xmath29 is scalar or ` smcirc ` + the result is ` smcirc ` +  @xmath29 is ` smtoep ` + the result is ` smtoep ` +   + the result is full +  ` _",
    "\\{if @xmath3 is not _ ` smcirc ` _ , then @xmath29 is } _ +  @xmath3 is scalar + the result is ` smcirc ` +   + the result is full    a trivial implementation of the algorithms is not sufficient to obtain a package which is both robust and transparent for the user .",
    "in fact , each function should be able to handle most of possible user s errors , and should replicate the typical behaviour of matlab when any of the operands are scalars or empty arrays . as an example , we report in algorithm  [ algo : plus ] the structure of the ` plus.m ` function , which is called when the first structured argument in a sum is an ` smcirc `  object .",
    "as it can be seen , when the operands are of different classes , the result belongs to the less structured class ; e.g. , circulant plus full is full , circulant plus toeplitz is toeplitz , etc .",
    "many matlab standard functions have been redefined for circulant matrices .",
    "they are listed and briefly described in table  [ tab : functions ] ; among them , there are simple manipulation and conversion functions , like ` abs ` , ` double ` or ` full ` , some which return logical values ( the ` isxxx ` functions ) , and a few which optimize some computations for ` smcirc `  objects , like ` det ` , ` eig ` or ` inv ` .",
    "the implementation of the last three functions is straightforward , as each ` smcirc `  object contains the eigenvalue of the circulant matrix in its ` .ev ` field .",
    "we remark that some functions require a larger complexity for a circulant than for a full matrix , like ` imag ` , because extracting the imaginary part of the entries of a circulant matrix requires to recompute its eigenvalues .",
    "ll|ll + ` abs ` & absolute value & ` fix ` & round towards zero + ` angle ` & phase angle & ` floor ` & round towards @xmath30 + ` conj ` & complex conjugate & ` ceil ` & round towards @xmath31 + ` imag ` & imaginary part & ` round ` & round argument + ` real ` & real part & ` sign ` & signum function +   + ` size ` & size of array & ` get ` & get object fields + ` length ` & length of array & ` isempty ` & true for empty array + ` display ` & display array & ` isequal ` & true for equal arrays +   + ` diag ` & diagonals of a matrix & ` reshape ` & change size + ` full ` & convert to full matrix & ` tril ` & lower triangular part + ` prod ` & product of elements & ` triu ` & upper triangular part + ` sum ` & sum of elements +   + ` double ` & convert to double & ` subsasgn ` & subscripted assignment + ` single ` & convert to single & ` subsindex ` & subscript index + ` isa ` & true if object is in a class & ` subsref ` & subscripted reference + ` isfloat ` & true for floating point & ` end ` & last index + ` isreal ` & true for real array +   + ` det ` & determinant & ` inv ` & matrix inverse + ` eig ` & eigenvalues and eigenvectors +    the list in table  [ tab : functions ] is surely incomplete , since in principle all matlab matrix functions could be overloaded for circulant matrices .",
    "we implemented those functions which we consider useful , leaving an extension of this list , if motivated by real need , to future versions of the package .",
    "it is sufficiently easy to add new methods to the class , since the user can start from an existing function , as a template , and then place the new file in the ` smt/@smcirc ` directory .",
    "let us add some comments on some of the functions listed in table  [ tab : functions ] .",
    "when adding a new class to matlab , there are a number of functions which must be defined so that the class conforms to matlab syntax rules .",
    "the ` get ` method allows to extract a field from an object , while ` display ` defines how an object should be visualized on the screen ; this can be customized in ` smt ` , as it will be shown in section  [ sec : general ] .",
    "some other functions define the effect of subindexing on the new class .",
    "we let two of them , ` subsasgn ` and ` subsindex ` , just return an error code for an ` smcirc `  object , since we consider them useless for circulant matrices .",
    "the third one , ` subsref ` , is a function which allows to access a field ( ` c.c ` ) or an element ( ` c(2,3 ) ` ) of a circulant matrix , and to use typical matlab subindexing expressions like ` c ( : ) ` or ` c(3:4 , : ) ` .",
    "notice that ` c(1:3,4:7 ) ` returns a toeplitz matrix ( i.e. , an ` smtoep`object ; see section  [ sec : smtoep ] ) , while ` c([1,3,5],6:8 ) ` returns a full matrix .",
    "the class ` smcirc `  includes two additional methods : ` smtvalid ` is a function , called by other functions of the toolbox , which determines if an object is a valid operand in an expression , while ` smtoep `  converts an ` smcirc`object into an ` smtoep `  one , as a circulant matrix is also a toeplitz matrix .",
    "a toeplitz matrix of order @xmath2 is a matrix @xmath32 whose elements are constant along diagonals , that is @xmath33 e.g. , for @xmath5 , @xmath34 we introduced a class ` smtoep ` , for toeplitz matrices , similar to the ` smcirc`class .",
    "an ` smtoep `  object can be created by specifying its first column and row , for example with the command    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .... t = smtoep([4:7],[4:-1:1 ] ) , .... _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    or giving only the first column , in which case the resulting matrix is hermitian .",
    "similarly to what happens to ` smcirc `  objects , an ` smtoep `  object can be displayed either as    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .... t =         4      3      2      1       5      4      3      2       6      5      4      3       7      6      5      4 .... _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    or    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .... t = smtoep object with fields :      type : ' toeplitz '         t : [ 7x1 double ]      dim1 : 4      dim2 : 4       cev : [ 8x1 double ] .... _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    depending on the ` display `  configuration parameter ; see ` smtconfig ` in section  [ sec : general ] .",
    "an ` smtoep `  object has two fields for the number of rows ( ` t.dim1 ` ) and columns ( ` t.dim2 ` ) of the matrix , while ` t.t ` contains the data to reconstruct the matrix , namely the first row and column , in a form which is convenient for computation ; in the above example , @xmath35 the meaning of the ` t.cev ` field will be explained later in this section .",
    "the componentwise operators , like sum , subtraction , and the so - called dot - operators of matlab , can be easily implemented for toeplitz matrices , similarly to what has been done for the ` smcirc `  class .",
    "regarding the matrix product , it is well known that a toeplitz matrix can be embedded in a circulant matrix @xmath36 ; e.g. , given the matrix , we can write @xmath37 .",
    "\\label{eq : ctmat}\\ ] ] so , to compute the product @xmath38 by a fast algorithm , one can construct a vector @xmath39 by padding @xmath24 with zeros to reach the dimension of @xmath36 , then compute @xmath40 by , and finally extract @xmath41 from the first components of the result .",
    "the zero diagonals in can be deleted , in which case the dimension of @xmath36 is minimal , or `` tight '' : if @xmath32 is @xmath42 , then the `` tight '' dimension of @xmath36 is @xmath43 . on the contrary",
    ", we can insert as many zero diagonals as we want .",
    "this may be useful , because the implementations of the ` fft ` perform better when the length of the input vector is a power of 2 .    in `",
    "smt `  both choices are available , and can be selected by editing the command ` smtconst ` ; see section  [ sec : general ] .",
    "although matlab implementation of the ` fft ` , namely fftw @xcite , exhibits a very good performance also when the size of the input vector is a prime number , we observed that matrix product is generally faster if we extend the matrix @xmath36 to the next power of 2 exceeding @xmath43 .",
    "a particular function has been created to speed - up toeplitz matrix multiplication .",
    "thus , the command    _ _ _ _ _ _ _ _ _ _ _ _ .... t = toeprem(t ) .... _ _ _ _ _ _ _ _ _ _ _ _    pre - computes the eigenvalues of the matrix @xmath36 , and stores them in the ` .cev ` field .",
    "this is done automatically when an ` smtoep `  object is allocated , and allows to perform only two ` fft ` s for each matrix product , instead of three .",
    "the price to pay is that , like in the case of circulant matrices , some elementary functions involving ` smtoep `  objects have a complexity larger than expected , as they need to compute the ` .cev ` field of the result .",
    "if this behaviour is not convenient , the automatic call to ` toeprem ` can be disabled by the ` smtconfig ` command ( see section  [ sec : general ] ) , and the user can either call ` toeprem ` when needed , or renounce to multiplication speedup .    all the operators and functions of tables  [ tab : operators ] and  [ tab : functions ] have been implemented for the class ` smtoep ` , with some differences . unlike the circulant matrices ,",
    "there is not a standard method to invert a toeplitz matrix , or to compute its determinant or eigenvalues . on the contrary ,",
    "various different algorithms are available and , probably , more will be developed in the future .",
    "for this reason the functions ` inv ` , ` det ` and ` eig ` , supplied with the toolbox , return an error for an ` smtoep `  object , and they are intended to be overwritten by user supplied programs .      solving circulant linear system is immediate , by employing the factorization , and the computation requires just two ` fft ` s . the algorithm is implemented in the functions ` mldivide ` and ` mrdivide ` , placed into the ` @smcirc ` directory , and is accessible via the usual matrix left / right division operators .    to solve toeplitz linear systems , one possibility is to use an iterative solver , either user supplied , or among those ( ` pcg ` , ` gmres ` , etc . )",
    "available in matlab .",
    "this can be done transparently , taking advantage of the compact storage and fast matrix - vector product provided by the toolbox .",
    "it is usual to employ preconditioners to speed up the convergence of iterative methods . in the case of toeplitz linear systems",
    ", it has been proved that various classes of circular preconditioners guarantee superlinear convergence for the conjugate gradient method ; see @xcite .",
    "the function ` smtcprec ` , included in the toolbox , provides the three best known circulant preconditioners , and can be easily extended to include more . for a given toeplitz matrix @xmath44 , the function can construct the strang preconditioner @xcite , which suitably modifies the matrix to make it circulant , the so - called optimal preconditioner @xcite , which is the solution of the optimization problem @xmath45 where @xmath46 is the algebra of circulant matrices and @xmath47 denotes the frobenius norm , and the superoptimal preconditioner @xcite , which minimizes @xmath48 for @xmath49 .",
    "while the strang preconditioner is defined only when @xmath44 is toeplitz , the optimal and superoptimal preconditioners can be computed for any matrix ; the function ` smtcprec ` allows this , though the computation of the preconditioner is fast only for a toeplitz matrix .",
    "the code in the functions ` strang ` , ` optimal ` , and ` superopt ` ( see table  [ tab : compgen ] ) was developed by one of the authors during the research which led to @xcite , and the details of the algorithms are described in that paper . to compute the superoptimal preconditioner , it is possible to use either the method introduced in @xcite , or the one from @xcite .",
    "it is remarkable that , since the second algorithm is based on the use of certain toeplitz matrices , our implementation is greatly simplified , as it performs the computation using the arithmetics provided by the toolbox itself .",
    "using circulant preconditioners with the iterative methods available in matlab is straightforward , as these functions use the matrix left division to apply a preconditioner , and so take advantage of the storage and fast algorithms furnished by our toolbox .",
    "for example , the instructions    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .... t = smtgallery('gaussian',5000 ) ; b = t*ones(5000,1 ) ; c = smtcprec('strang',t ) ; [ x , flag , relres , iter]=pcg(t , b,[],[],c ) ; .... _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    create a gaussian linear system of dimension 5000 ( see section  [ sec : general ] ) with prescribed solution , and solve it by the conjugate gradient method , preconditioned by the strang circulant preconditioner .",
    "ll|ll & + ` smtcprec ` & circulant preconditioners & ` toms729 ` & toeplitz solver + ` strang ` & strang preconditioner & ` tlls ` & toeplitz ls solver + ` optimal ` & optimal preconditioner & ` tsolve ` & user supplied function + ` superopt ` & superoptimal precond .",
    "& ` tsolvels ` & user supplied function +   + ` issmcirc ` & true for ` smcirc `  object & ` smtconfig ` & toolbox configuration + ` issmtoep ` & true for ` smtoep `  object & ` smtconst ` & toolbox constants setting + ` smtcheck ` & check toolbox installation & ` smtgallery ` & test matrices +    besides the iterative methods , there are also many fast and superfast direct solvers for a toeplitz linear system , and some of them have been implemented in publicly available subroutines . with our toolbox , we distribute two of them , having computational complexity @xmath50 ; they are called when one of the matrix division operators ( either `` or ` / ` ) are used to invert a toeplitz matrix .",
    "the related files , listed in table [ tab : compgen ] , are placed in the ` private `  subdirectory of ` smt/@smtoep ` .    the first one , `",
    "toms729 ` , is an implementation of the extended levinson algorithm for nonsingular toeplitz linear systems  @xcite , written in fortran , for which a matlab mex gateway is available  @xcite .",
    "this solver , which has been implemented only for real matrices , calls the ` dsytep ` subroutine from  @xcite if the system matrix is symmetric , and ` dgetep ` in the general case , with the ` pmax ` parameter set to 10 .",
    "when the linear system is overdetermined ( and full - rank ) the toolbox calls the c - mex program ` tlls ` , developed in  @xcite , which converts it into a cauchy - like system @xmath51 , and computes its least - squares solution as the schur complement of the augmented matrix @xmath52,\\ ] ] using the generalized schur algorithm with partial pivoting .",
    "complex linear systems are supported . if the matrix is either underdetermined or rank - deficient , an error is returned .",
    "it is possible for the user to use different algorithms , by supplying the functions ` tsolve ` , for a nonsingular linear system , or ` tsolvels ` , for least - squares , overwriting those placed in the directory ` smt/@smtoep / private ` , and changing the default behaviour of the toolbox with the ` smtconfig ` command .",
    "for example , entering from the command line the instructions    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ .... smtconfig intsolve off x = t\\b .... _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    disables the solver ` toms729 ` , and solves the linear system @xmath53 by the user supplied function ` tsolve ` .      besides the overloaded operators and methods located in the ` @smcirc ` and ` @smtoep ` directories , some general functions , listed in table  [ tab : compgen ] , are placed in the main toolbox directory , and are directly accessible to the user .    among these functions , we find the two ` isxxx ` functions , which return logical values and check if the supplied parameter belongs to the ` xxx ` class , the ` smtcheck ` function , which verifies if the toolbox is correctly installed , and the function ` smtconst ` , intended to define global constants ( for the moment only the dimension of the circulant embedding )",
    ".    of particular relevance is the ` smtconfig ` function , which modifies the behaviour of the toolbox for what concerns the display method for objects ( ` display ` parameter ) , the use of the toeplitz premultiplication routine , discussed in section [ sec : smtoep ] ( ` toeprem ` parameter ) , the warnings setting ( ` warnings ` parameter ) , and the active toeplitz solvers ( ` intsolve `  and ` intsolvels ` parameters , see section  [ sec : toesys ] ) . for example ,    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ xxxxxxxxxxxxxxxxxxxxxxxxx = ` smtconfig display compact ` ( or ` off ` ) selects compact display of objects , + ` smtconfig display full ` ( or ` on ` ) restores standard display method .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    all parameter are set by default to the ` on ` state ; calling the command ` smtconfig `  with no parameters shows the state of all settings .",
    "ll + ` crrand ` & uniformly distributed random matrix + ` crrandn ` & normally distributed random matrix +   + ` algdec ` & matrix with algebraic decay + ` expdec ` & matrix with exponential decay + ` gaussian ` & gaussian matrix + ` tchow ` & chow matrix + ` tdramadah ` & matrix of 0/1 with large determinant or inverse + ` tgrcar ` & grcar matrix + ` tkms ` & kac - murdock - szego matrix + ` tparter ` & parter matrix + ` tphans ` & rank deficient matrix from @xcite + ` tprand ` & uniformly distributed random matrix + ` tprandn ` & normally distributed random matrix + ` tprolate ` & prolate matrix + ` ttoeppd ` & symmetric positive definite toeplitz matrix + ` ttoeppen ` & pentadiagonal toeplitz matrix + ` ttridiag ` & tridiagonal toeplitz matrix + ` ttriw ` & upper triangular matrix discussed by wilkinson +    we end this section reporting another important feature of the toolbox .",
    "a collection of test matrices is available in ` smtgallery ` , which is modelled on matlab ` gallery ` function , but returns structured objects .",
    "the collection , listed in table  [ tab : smtgallery ] , includes random matrices , three matrices studied in @xcite ( ` algdec ` , ` expdec ` and ` gaussian ` ) , one from @xcite , and all the toeplitz matrices provided by ` gallery ` , most of which come from @xcite .",
    "the syntax of ` smtgallery ` is in the same style as the matlab ` gallery ` function , and documentation is provided for each test matrix .",
    "for instance ,    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ xxxxxxxxxxxxxxxxxxxx = ` t = smtgallery(gaussian,7 ) ` constructs a @xmath54 toeplitz gaussian matrix , + ` c = smtgallery(crrand,7,c ) ` returns a random complex circulant matrix , + ` help private / tchow ` displays the help page for the chow matrix . _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _",
    "the toolbox is entirely written in the matlab programming language .",
    "the version officially supported is 7.7 ( i.e. , release 2008b ) , anyway we tested it on previous versions , way back to 6.5 , without problems . to install it , it is sufficient to uncompress the archive file containing the software , creating in this way the directory ` smt `  and its subtree .",
    "this directory must be added to the matlab search path by the command ` addpath ` , in order to be able to use the toolbox from any other directory .",
    "as noted in the previous sections , a great effort has been devoted to catch all possible user s errors , and to reproduce the standard behaviour of matlab , for example for what concerns the output of each function in the presence of empty or scalar arrays in input .",
    "since these features are scarcely documented in matlab manuals , our choices are mostly due to experimental tests .",
    "we remark that the ` smtconfig ` function , described in section  [ sec : general ] , relies on the use of _ warnings _ , so issuing the matlab command ` warning on ` restores the initial configuration of the toolbox , while ` warning off ` may cause unpredictable results .",
    "some of the toolbox functions use the ` isfloat ` command , which was introduced in version 7 of matlab . for those who are using version 6.5 , a patch for this function",
    "is included in the software ; see the ` readme.txt ` file in the main toolbox directory .",
    "the two programs used to solve toeplitz linear system are the only ones which need to be compiled : ` toms729 `  @xcite was written in fortran , and uses the fortran - mex gateway from  @xcite , while ` tlls `  @xcite was originally developed as a c - mex program .",
    "the mex interface is a library , distributed with matlab , which allows to dynamically link a fortran or c subroutine to matlab , and to exchange input and output parameters between the compiled program and the environment , using the usual matlab syntax .",
    "both toeplitz solvers can be easily compiled under linux , using the ` makefile ` placed in the directory ` smt/@smtoep / private ` , and we provide precompiled executables for 32 and 64 bits architectures .",
    "compiling the same programs under windows is a bit more involved : we used a porting of the gnu - c compiler  @xcite and the `` mex configurator '' gnumex  @xcite , but precompiled executables are available for various matlab versions ; see the ` readme.txt ` file and the content of the ` smt/@smtoep / private ` directory .",
    "the structured matrix toolbox is a matlab package which implements optimized storage and fast arithmetics for circulant and toeplitz matrices , offering a robust and easily extensible framework .",
    "the toolbox is available at the web page http://bugs.unica.it / smt/. we are currently performing numerical tests to assess its performance , and there are plans to extend its functionality by adding the support for other classes of structured matrices ."
  ],
  "abstract_text": [
    "<S> we introduce the ` smt `  toolbox for matlab . it implements optimized storage and fast arithmetics for circulant and toeplitz matrices , and is intended to be transparent to the user and easily extensible . </S>",
    "<S> it also provides a set of test matrices , computation of circulant preconditioners , and two fast algorithms for toeplitz linear systems . </S>"
  ]
}
{
  "article_text": [
    "the bottom - up model generation ( bumg ) paradigm encompasses a wide family of calculi and proof procedures that explicitly try to construct a model of a given clause set by reading clauses as rules and applying them in a bottom - up way until completion .",
    "for instance , variants of hyperresolution and grounding tableau calculi belong to this family .",
    "bumg methods have been known for a long time to useful for proving theorems , comparably little effort has however been undertaken to exploit them for the dual task , namely , computing models for satisfiable problems .",
    "this is somewhat surprising , as computing models is recognized as being important in software engineering , model checking , and other applications for fault analysis and debugging of logical specifications .",
    "one of the contributions of the paper is the introduction to first - order logic of blocking techniques partially inspired by techniques already successfully used in description and modal logic tableau - based theorem proving  @xcite .",
    "we adapt and generalize these blocking techniques to full first - order logic .",
    "blocking is an important technique for turning tableau systems into decision procedures for modal and description logics .",
    "though different blocking techniques exist , and not all modal and description logic tableau systems are designed to return models , blocking is essentially a mechanism for systematically merging terms in order to find finite models .    in our approach blocking is encoded on the clausal level and is combined with standard resolution techniques , the idea being that with a suitable prover small , finite models are constructed and can be easily read off from the derived clauses .",
    "our blocking techniques are generic and pose no restrictions on the logic they can be used for",
    ". they can even be used for undecidable logics .",
    "we introduce four different blocking techniques .",
    "the main idea of our blocking techniques is that clauses are added to the input problem which lead in the derivation to splittable clauses causing terms in the partially constructed models to be merged .",
    "the difference between the four techniques is how restrictive blocking is . with _",
    "unrestricted domain blocking _",
    "domain minimal models can be generated . with _",
    "subterm domain blocking _ or _ subterm predicate blocking _ larger models are produced because two terms are only merged if one is a subterm of the other . with _ unrestricted predicate blocking _ and _ subterm predicate blocking _ two terms are merged if they both belong to the extension of a unary predicate symbol , the intention being that less constrained , finite model can be found .",
    "the second contribution of the paper is a refinement of the well - known ` transformation to range - restricted form ' as introduced in the eighties by  @xcite in the context of the satchmo prover and later improved , for example , by  @xcite .",
    "these range - restricting transformations have the disadvantage that they generally force bumg methods to enumerate the entire herbrand universe and are therefore non - terminating except in the simplest cases .",
    "one solution is to combine classical range - restriction transformations with blocking techniques .",
    "another solution , presented in this paper , is to modify the range - restricting transformation so that new terms are created only when needed .",
    "our method extends and combines the range - restricting transformation introduced in  @xcite for reducing first - order formulae and clauses into range - restricted clauses , which was used to develop general - purpose resolution decision procedures for the bernays - schnfinkel class .",
    "other methods for model computation can be classified as methods that directly search for a finite model , such as the extended puhr tableau method of  @xcite , the method of  @xcite and the methods in the sem - family  @xcite .",
    "in contrast , mace - style model builders such as , for example , the methods of  @xcite and  @xcite reduce model search to testing of propositional satisfiability .",
    "being based on a translation , the mace - style approach is conceptually related , but different to our approach .",
    "both sem- and mace - style methods search for finite models , by essentially searching the space of interpretations with domain sizes @xmath0 , in increasing order , until a model is found .",
    "our method operates significantly differently , as it is _ not _ parameterized by a domain size .",
    "consequently , there is no requirement for iterative deepening over the domain size , and the search for finite models works differently .",
    "this way , we can address a problem often found with models computed by these methods : from a pragmatic perspective , they tend to identify too many terms .",
    "for instance , for the two unit clauses @xmath1 and @xmath2 there is a model that identifies @xmath3 and @xmath4 with the same object .",
    "such models can be counter - intuitive , for instance , in a description logic setting , where unique names are often assumed , but not necessarily explicitly specified .",
    "furthermore , logic programs are typically understood with respect to herbrand semantics , and it is desirable to develop compatible model building techniques .",
    "we present transformations that are more careful at identifying objects than the methods mentioned and thus work closer to a herbrand semantics .",
    "the structure of the paper is as follows .",
    "definitions of basic terminology and notation can be found in section  [ sec : preliminaries ] . in section  [ sec : bumg ] we recall the characteristic properties of bumg methods .",
    "the main part of the paper are sections  [ sec : transformations ] to  [ sec : experiments ] . sections  [ sec : transformations ] , [ sec : shifting ] and  [ sec : blocking ] define new techniques for generating small models and generating them more efficiently .",
    "the techniques are based on a series of transformations including a refined range - restricting transformation ( section  [ sec : range - restriction ] ) , instances of standard renaming and flattening ( section  [ sec : shifting ] ) , and the introduction of blocking in various forms through amendments of the clause set and standard saturation - based equality reasoning ( section  [ sec : blocking ] ) .",
    "soundness and completeness of the blocking transformations and the combined transformations is shown in section  [ sec : soundness : completeness ] .",
    "one consequence of the results is a general decidability result of the bernays - schnfinkel class for all bumg methods and related approaches .",
    "this is presented in section  [ sec : other ] . in section  [ sec",
    ": experiments ] we present and discuss results of experiments carried out with our methods on clausal problems in the tptp library .",
    "this paper is an extended and improved version of  @xcite .",
    "we use standard terminology from automated reasoning . we assume as given a signature @xmath5 of function symbols  @xmath6 ( including constants ) and predicate symbols  @xmath7 . as we are working ( also ) with equality , we assume @xmath7 contains a distinguished binary predicate symbol @xmath8 , which is used in infix form",
    ". terms , atoms , literals and formulas over @xmath9 and a given ( denumerable ) set of variables @xmath10 are defined as usual .",
    "a clause is a ( finite ) implicitly universally quantified disjunction of literals .",
    "we write clauses in a logic - programming style , that is , we write @xmath11 rather than @xmath12 , where @xmath13 .",
    "each @xmath14 is called a _",
    "head atom _ , and each @xmath15 is called a _",
    "body atom_. when writing expressions such as @xmath16 we mean any clause whose head literals are @xmath17 and those in the disjunction of literals @xmath18 , and whose body literals are @xmath19 and those in the conjunction of literals @xmath20 . a _",
    "clause set _ is a finite set of clauses .",
    "a clause @xmath21 is said to be _ range - restricted _ iff the body  @xmath20 contains all the variables in it .",
    "this means that a positive clause @xmath22 is range - restricted only if it is a ground clause .",
    "a clause set is range - restricted iff it contains only range - restricted clauses .    for a given atom @xmath23 the terms @xmath24 are also called the _ top - level terms _ of @xmath23 ( @xmath25 being @xmath8 is permitted ) .",
    "this notion generalizes to clause bodies , clause heads and clauses as expected .",
    "for example , for a clause @xmath21 the top - level terms of its body @xmath20 are exactly the top - level terms of its body atoms .",
    "a _ proper functional term _ is a term that is neither a variable nor a constant .    a _ ( herbrand ) interpretation _",
    "@xmath26 is a set of ground atoms , namely , those that are true in the interpretation .",
    "satisfiability / validity in a herbrand interpretation of ground literals , clauses , and clause sets is defined as usual .",
    "also , as usual , a clause set stands semantically for the set of all its ground instances .",
    "we write @xmath27 to denote that @xmath26 satisfies @xmath28 , where @xmath28 is a ground literal or a ( possibly non - ground ) clause ( set ) .",
    "an _ e - interpretation _ is an interpretation that is also a congruence relation on the terms in the signature .",
    "if @xmath26 is an interpretation , we denote by @xmath29 the smallest congruence relation on the terms that includes @xmath26 , which is an e - interpretation .",
    "an e - interpretation does not necessarily need to be a herbrand - e - interpretation and is a standard first - order interpretation @xmath26 such that @xmath30 if and only if @xmath31 ( where @xmath32 is a valuation , that is , a mapping from the variables to the domain @xmath33 of @xmath26 ) .",
    "we say that @xmath26 _ e - satisfies _ @xmath28 iff @xmath34 . instead of @xmath34 we write @xmath35 .",
    "it is well - known that e - interpretations can be characterized by fixing the domain as the herbrand universe and requiring that for every ground term  @xmath36 , @xmath37 , and for every ground atom @xmath38 ( including ground equations ) the following is true : whenever @xmath39 $ ] and @xmath40 , then @xmath41 $ ] .",
    "another characterization is to add to a given clause set @xmath42 its equality axioms @xmath43 , that is , the axioms expressing that @xmath8 is a congruence relation on the terms and atoms induced by the predicate symbols @xmath7 and function symbols @xmath6 occurring in @xmath42 .",
    "it is well - known that @xmath42 is e - satisfiable iff @xmath44 is satisfiable .",
    "we work mostly , but not always , with herbrand interpretations . if not , we always make this clear , and the interpretations considered then are first - order logic interpretations with domains that are ( proper ) subsets of the herbrand universe of the clause set under consideration . such interpretations are called _ quasi - herbrand interpretations_. when constructing such interpretations the requirement that function symbols are interpreted as total functions over their domain is not always trivially satisfied . for instance , in the presence of a constant @xmath45 , a unary function symbol @xmath46 , and the domain @xmath47 , say , one has to assign a value in the interpretation to every term .",
    "however @xmath48 , for instance , can not be assigned to itself , as @xmath48 is not contained in the domain .",
    "proof procedures based on model generation approaches establish the satisfiability of a problem by trying to build a model for the problem . in this paper",
    "we are interested in bottom - up model generation approaches ( bumg ) .",
    "bumg approaches use a forward reasoning approach where implications or clauses , @xmath21 , are read as rules and are repeatedly used to derive ( instances of )  @xmath18 from ( instances of )  @xmath20 until a completion is found .",
    "the family of bumg approaches includes many familiar calculi and proof procedures such as smullyan type semantic tableaux  @xcite , satchmo @xcite , positive unit hyperresolution ( puhr ) tableaux  @xcite , the model generation theorem prover mgtp  @xcite and hypertableaux  @xcite .",
    "a well - established and widely known method for bumg is hyperresolution  @xcite .",
    "hyperresolution consists of two inference rules , hyperresolution and factoring .",
    "the _ hyperresolution rule _ applies to a non - positive clause @xmath49 ( @xmath50 ) and  @xmath51  positive clauses @xmath52 , ",
    ", @xmath53 , and derives @xmath54 , where  @xmath55 is the most general unifier such that @xmath56 for every @xmath57 . the _ factoring rule _ derives the clause @xmath58 from a positive clause @xmath59 , where @xmath55 is the most general unifier of @xmath19 and @xmath60 . on range - restricted clauses , when using hyperresolution , factoring amounts to the elimination of duplicate literals in positive clauses and is therefore optional when clauses are viewed as sets .    a crucial requirement for the effective use of blocking ( considered later in section  [ sec : blocking ] )",
    "is support of equality reasoning ( for example , ordered paramodulation , ordered rewriting or superposition  @xcite ) , in combination with simplification techniques based on orderings .",
    "we refer to  @xcite for general notions of redundancy in saturation - based theorem proving approaches .",
    "our experiments show the splitting rule is useful for bumg . for our blocking transformations , splitting on the positive part of ( ground ) clauses",
    "is in fact mandatory to make it effective .",
    "this type of splitting replaces the branch of a derivation containing a positive clause @xmath61 , say , by two copies of the branch in which the clause is replaced by @xmath62 and @xmath63 , respectively , provided that @xmath64 and @xmath65 do not share any variables .",
    "most bumg procedures support this splitting technique , in particular , the provers we have used do .",
    "[ sec : range - restriction ]    existing transformations to range - restricted form follow  @xcite ( or are variations of it ) .",
    "the transformation can be defined by a procedure carrying out the following steps on a given set @xmath42 of clauses .",
    "( 0 ) initialization .",
    ": :    initially , let @xmath66 .",
    "( 1 ) add a constant .",
    ": :    let @xmath67 be a ` fresh ' unary predicate symbol not    in @xmath7 , and let  @xmath68 be some constant .",
    "extend @xmath69 by the clause    @xmath70 the constant @xmath68    can be ` fresh ' or belong to @xmath6 .",
    "( 2 ) range - restriction . : :    for each clause @xmath21 in    @xmath69 , let @xmath71 be the set of variables occurring in    @xmath18 but not in @xmath20 . replace    @xmath21 by the clause    @xmath72    we refer to this clause as the clause _ corresponding _ to    @xmath21 . ( 3 ) enumerate the herbrand universe .",
    ": :    for each @xmath51-ary @xmath73 , add the    clauses :    @xmath74    the computed set @xmath69 is the _ classical range - restricting transformation _ of  @xmath42 .",
    "it is not difficult to see that @xmath69 is indeed range - restricted for any clause set  @xmath42 .",
    "the transformation is sound and complete , that is , @xmath42 is satisfiable iff @xmath69 is satisfiable  @xcite .",
    "the size of @xmath69 is linear in the size of @xmath42 and can be computed in linear time .",
    "perhaps the easiest way to understand the transformation is to imagine we use a bumg method , for example , hyperresolution .",
    "the idea is to build the model(s ) during the derivation .",
    "the clause added in step  ( 1 ) ensures that the domain of interpretation given by the domain predicate @xmath67 is non - empty .",
    "step  ( 2 ) turns clauses into range - restricted clauses .",
    "this is done by shielding the variables @xmath75 in the head , that do not occur negatively , with the added negative domain literals .",
    "clauses that are already range - restricted are unaffected by this step .",
    "step  ( 3 ) ensures that all elements of the herbrand universe of the ( original ) clause set are added to the domain via hyperresolution inference steps .    as a consequence a clause set @xmath42 with at least one non - nullary function symbols causes hyperresolution derivations to be unbounded for @xmath69 , unless @xmath42 is unsatisfiable .",
    "this is a negative aspect of the classical range - restricting transformation .",
    "however , the method has been shown to be useful for ( domain-)minimal model generation when combined with other techniques  @xcite .",
    "in particular , @xcite use splitting and the @xmath76-rule to generate domain minimal models . in the present research",
    "we have evaluated the combination of blocking techniques ( introduced later in section  [ sec : blocking ] ) with the classical range - restricting transformation @xmath77 .",
    "this has shown promising empirical results as presented in section  [ sec : experiments ] .",
    "next , we introduce a new transformation to range - restricted form . instead of enumerating the generally infinite herbrand universe in a bottom - up fashion , the intuition is that it generates terms only as needed .",
    "the transformation involves extracting the non - variable top - level terms in an atom .",
    "let @xmath23 be an atom and suppose @xmath78 are fresh variables .",
    "for all @xmath79 let @xmath80 , if @xmath81 is a variable , and @xmath82 , otherwise .",
    "the atom @xmath83 is called the _ term abstraction of @xmath23_.",
    "let the _ abstraction substitution @xmath84 _ be defined by @xmath85 hence , @xmath86 , that is , @xmath84 reverts the term abstraction .    the new _ range - restricting transformation _",
    ", denoted by @xmath87 , of a clause set @xmath42 is the clause set obtained by carrying out the following steps ( explanations and an example are given afterwards ) :    ( 0 ) initialization .",
    ": :    initially , let @xmath88 .",
    "( 1 ) add a constant .",
    ": :    same as step  ( 1 ) in the definition of @xmath77 .",
    "( 2 ) domain elements from clause bodies . : :    for each clause @xmath21 in    @xmath42 and each atom @xmath23 from    @xmath20 , let @xmath83 be the    term abstraction of @xmath23 and let    @xmath84 be the corresponding abstraction substitution .",
    "extend @xmath89 by the set    @xmath90 ( 3 ) range - restriction .",
    ": :    same as step  ( 2 ) in the definition of @xmath77 .",
    "( 4 ) domain elements from @xmath7 . : :    for each @xmath51-ary @xmath25 in    @xmath91 , extend @xmath89 by the set    @xmath92 ( 5 ) domain elements from @xmath6 . : :    for each @xmath51-ary @xmath46 in    @xmath6 , extend @xmath89 by the set    @xmath93    the intuition of the transformation reveals itself if we think of what happens when using hyperresolution .",
    "the idea is again to build model(s ) during the derivation , but this time terms are added to the domain only _ as necessary_. steps  ( 1 ) and ( 3 ) are the same as steps  ( 1 ) and  ( 2 ) in the definition of @xmath77 .",
    "the clauses added in step  ( 2 ) cause functional terms that occur negatively in the clauses to be inserted into the domain .",
    "step  ( 4 ) ensures that positively occurring functional terms are added to the domain , and step  ( 5 ) ensures that the domain is closed under subterms .    to illustrate the steps of the transformation consider the following clause .",
    "@xmath94 it is added to @xmath89 in step  ( 0 ) .",
    "suppose the clause added in step  ( 1 ) is @xmath95 for step  ( 2 ) the term abstraction of the body literal of clause  ( @xmath96 ) is @xmath97 and the abstraction substitution is @xmath98 .",
    "the clauses added in step  ( 2 ) are the following : @xmath99 notice that among the four clauses we have so far the clauses  ( @xmath96 ) and  ( @xmath100 ) are not range - restricted .",
    "they are however replaced by range - restricted clauses in step  ( 3 ) , namely : @xmath101 step  ( 4 ) generates clauses responsible for inserting the terms that occur in the heads of clauses into the domain .",
    "that is , for each @xmath102 and each @xmath103 these clauses are added .",
    "@xmath104 for instance , when a model assigns true to the instance @xmath105 of one of the head atoms of the clause  ( @xmath106 ) , then @xmath107 and @xmath108 are also true .",
    "it is not necessary to insert the terms of the instance of the other head atom into the domain .",
    "the reason is that it does not matter how these ( extra ) terms are evaluated , or whether the atom is evaluated to true or false in order to satisfy the disjunction .",
    "the clauses added in step  ( 4 ) alone are not sufficient , however . for each term in the domain",
    "all its subterms have to be in the domain , too .",
    "this is achieved with the clauses obtained in step ( 5 ) .",
    "that is , for each @xmath103 these clauses are added .",
    "@xmath109    for the purposes of model generation ,",
    "it is important to note that one particular type of clause in the @xmath87 transformation should not be treated as a normal clause . for the equality predicate",
    ", step  ( 4 ) produces the clauses @xmath110 most theorem provers simplify these clauses to @xmath111 . as a consequence this can lead to all negative domain literals",
    "being resolved away and all clauses containing a positive domain literal to be subsumed .",
    "this means range - restriction is undone .",
    "this is what happens in spass .    since step  ( 4 ) clauses",
    "really only need to be added for positively occurring predicate symbols",
    "an easy solution involves replacing any positive occurrence of the equality predicate by a predicate symbol @xmath112 ( say ) , which is fresh in the signature , and adding the clauses @xmath113 in step ( 4 ) rather than  ( @xmath114 ) .",
    "in addition , the clause set needs to be extended by this definition of @xmath112 .",
    "@xmath115 this solution has the intended effect of adding terms occurring in positive equality literals to the domain , and prevents other inferences or reductions on @xmath112 .",
    "it is not difficult to prove that e - satisfiability is preserved in both directions .",
    "we will implicitly use this fact in the proofs below .",
    "[ prop : rr - completeness ] let @xmath42 be any clause set .",
    "if  @xmath89 is satisfiable then @xmath42 is satisfiable .",
    "suppose @xmath89 is satisfiable .",
    "let @xmath116 be a herbrand model of @xmath89 .",
    "we define a quasi - herbrand interpretation @xmath26 and show that it is a model of @xmath42 .    first , the domain of @xmath26 is defined as the set @xmath117 .    now , to define a total interpretation for the function symbols , we map each @xmath51-ary function symbol @xmath46 in @xmath6 to the function @xmath118 , where , for all @xmath119 , @xmath120 here , the constant @xmath68 is the one mentioned in step ( 1 ) of the transformation .",
    "( it is clear that @xmath33 contains @xmath68 . )",
    "notice that due to step ( 5 ) the domain @xmath33 must contain for each term all its subterms .",
    "an easy consequence is that all terms in @xmath33 are evaluated as themselves , exactly as in herbrand interpretations .",
    "each other ( ground ) term is evaluated as some other term from @xmath33 .",
    "for instance , if @xmath121 then @xmath122 , since @xmath123 and by the definition of @xmath124 .",
    "we see that @xmath46 is indeed mapped to a total function over the domain @xmath33 , as required .    regarding the interpretation of the predicate symbols in @xmath26 ,",
    "define for every @xmath51-ary predicate symbol @xmath25 in @xmath7 and for all @xmath119 : @xmath125 that is , the interpretation of the predicate symbols in @xmath26 is the same as in @xmath116 under the restriction of the domain to @xmath126 .",
    "it remains to show that @xmath26 is a model of @xmath42 .",
    "it suffices to pick a clause @xmath21 from  @xmath42 arbitrarily and show that @xmath26 satisfies this clause .",
    "we do this by assuming that @xmath26 does not satisfy @xmath21 and deriving a contradiction .    that @xmath26 does not satisfy @xmath21 means there is a valuation @xmath32 such that @xmath127 but @xmath128 . as usual",
    ", a valuation is a ( total ) mapping from the variables to the domain under consideration .    because the domain @xmath33 consists of ( ground )",
    "terms , the valuation @xmath32 can be seen as a substitution .",
    "thus , @xmath129 is a set of ground atoms , and @xmath130 may or may not hold .",
    "we show next that if @xmath131 , as given , then @xmath130 .",
    "in other words , the body is satisfied in  @xmath26 because  @xmath33 contains all body atoms @xmath129 , but not for the reason that  @xmath26 assigns true to some body atom @xmath19 with some argument term evaluated to @xmath68 , and that atom being contained in @xmath26 .",
    "an example for the latter case is @xmath132 , @xmath133 , @xmath134 and @xmath135 .",
    "although we have @xmath136 , in essence because @xmath137 , it does _ not _ hold that @xmath138 .",
    "the relevance of this result is that it allows syntactically based reasoning further below to show that @xmath26 is a model of @xmath42 .    to show @xmath130 it suffices to choose any body literal @xmath23 from @xmath20 arbitrarily and",
    "show @xmath139 .",
    "now from @xmath131 it follows that @xmath140 .",
    "reading  @xmath32 as a ground substitution this means @xmath141 . using the equivalence   it follows that@xmath142 . to show @xmath143 , as required",
    ", it thus suffices to show @xmath144 , because @xmath143 follows from@xmath145 and equivalence  .",
    "thus , let us show @xmath144 . by the definition of the interpretation function  @xmath146",
    "it is enough to show @xmath147 ( as said above , terms from @xmath33 are evaluated to themselves ) .",
    "if @xmath81 is a variable then @xmath147 follows from the fact that @xmath32 was chosen as a substitution into  @xmath33 .",
    "assume now that @xmath81 is not a variable and let @xmath83 be the term abstraction of @xmath23 and  @xmath84 its abstraction substitution .",
    "by transformation step  ( 2 ) , @xmath89 includes the clause @xmath148 where @xmath149 . by the definition of an abstraction , for all @xmath150 , @xmath151 is a fresh variable whenever @xmath152 is not a variable .",
    "recall from above that @xmath142 .",
    "we are going to show now that with clause   this entails @xmath153 . by the construction of @xmath33",
    "this suffices to prove @xmath147 , as desired .",
    "consider the substitution @xmath154 it agrees with @xmath32 ( in particular ) when @xmath152 is a variable and otherwise maps the variable @xmath155 to @xmath156 .",
    "when @xmath152 is a variable then let @xmath157 be the definition of an abstraction .",
    "this means @xmath158 ( the latter identity holds , again , because @xmath32 is a substitution into @xmath33 and elements from @xmath33 evaluate to themselves ) .",
    "when @xmath152 is not a variable then @xmath151 is the variable  @xmath155 . by construction of @xmath159",
    "we have @xmath160 .",
    "hence , in both cases @xmath161 .    applying the substitution @xmath159 to the clause   yields @xmath162 with the identities @xmath161 , the identities @xmath163 and the fact that @xmath164 it follows that @xmath165 .",
    "the substitution @xmath32 and  @xmath159 differ in their domains only on the fresh variables @xmath78 .",
    "therefore @xmath166 and @xmath167 follows , as desired .",
    "this was the last subgoal to be proven to establish @xmath143 , which , in turn , remained to be shown to complete the proof that @xmath130 .",
    "the next step in the proof is to show that the clause body of the clause in @xmath89 corresponding to @xmath21 is satisfied by @xmath116 .",
    "that clause is the range - restricted version of the clause @xmath21 in @xmath42 . according to step ( 3 ) of the transformation it has the form @xmath168 for some variables @xmath169 ; those occurring in @xmath18 but not in @xmath20 .    from @xmath130 as derived above and equivalence   it follows that @xmath170 . recall that  @xmath32 is a valuation mapping into the domain @xmath33 . reading it as a substitution gives @xmath171 , for all @xmath172 . from the construction of @xmath33",
    "it follows that @xmath173 .",
    "together with @xmath170 and the fact that @xmath116 is a model of @xmath89 , and hence of clause  , it follows that @xmath116 satisfies @xmath174 .",
    "this means @xmath175 for some head atom @xmath38 in @xmath18 .",
    "the atom @xmath38 is of the form @xmath176 for some @xmath177-ary predicate symbol @xmath178 and terms @xmath179 . by step ( 4 ) of the transformation , @xmath89 includes , for all @xmath180 the clause @xmath181 again by reading @xmath32 as a substitution , because @xmath116 is a model of @xmath89 , and hence of clause  , and by the identities @xmath182 we conclude @xmath183 , for all @xmath180 . by construction of @xmath33",
    "we have that @xmath184 . by equivalence",
    "it follows that @xmath185 .",
    "recall that @xmath176 is a head atom of the clause and hence a head atom of the clause @xmath186 .",
    "further recall that @xmath184 entails that @xmath187 is evaluated to itself in @xmath26 .",
    "together with @xmath185 this means @xmath188 .",
    "this is a contradiction to @xmath128 as concluded above .",
    "the proof is complete .",
    "the proof actually gives a characterization of the models associated with a satisfiable clause set @xmath89 .",
    "[ cor : rr - e - completeness ] let  @xmath42 be any clause set . if @xmath89 is e - satisfiable then @xmath42 is e - satisfiable .",
    "we prove the contra - positive statement .",
    "thus assume @xmath42 is e - unsatisfiable .",
    "equivalently , @xmath44 is unsatisfiable . by proposition  [ prop : rr - completeness ]",
    ", @xmath189 is unsatisfiable .",
    "observe steps  ( 2 ) and  ( 3 ) , which are the only ones that apply directly to the given clauses , have no effect on the equality axioms @xmath43 , except for the reflexivity axiom @xmath190 , which is replaced by @xmath191 .",
    "the transformed set @xmath189 coincides with @xmath192 adding back the reflexivity axiom trivially preserves unsatisfiability , that is , with @xmath189 being unsatisfiable , so is @xmath193 the clause @xmath191 can be deleted because it is subsumed by the clause @xmath194 .",
    "hence , @xmath195 is unsatisfiable , and so @xmath89 is e - unsatisfiable .",
    "we emphasize that we do not propose to actually use the equality axioms in conjunction with a theorem prover ( though they can of course ) .",
    "they serve merely as a theoretical tool to prove completeness of the transformation .",
    "let  @xmath42 be any clause set .",
    "then    a.   the size of @xmath89 is bounded by a linear function in the size of @xmath42 .",
    "b.   @xmath89 can be computed in quadratic time . c.   @xmath89 is range - restricted .",
    "[ result_rr_horn_preservation ]    by carefully modifying the definition of @xmath87 and at the expense of some duplication it is possible to compute the reduction in linear time .",
    "proposition  [ result_rr_horn_preservation ]  ( iii ) confirms that every clauses produced by the @xmath87 transformation is range - restricted .",
    "let us consider another example to get a better understanding of the @xmath87 transformation .",
    "@xmath196 applying steps  ( 2 ) and  ( 3 ) of the @xmath87 transformation gives us the clause @xmath197 this clause is splittable into @xmath198 the first split component clause is an example of an ` enumerate the herbrand universe ' clause from the @xmath77 transformation ( step  ( 2 ) in the definition of @xmath77 ) .",
    "such clauses are unpleasant because they cause the entire herbrand universe to be enumerated with bumg approaches .    before describing a solution",
    "let us analyze the problem further .",
    "the main rationale of our @xmath87 transformation is to constrain the generation of domain elements and limit the number of inference steps .",
    "the general form of clauses produced by step  ( 2 ) , followed by step  ( 3 ) , is the following , where @xmath199 , @xmath200 and @xmath201 .",
    "@xmath202 clauses of the first form are often splittable ( as in the example above ) , and can produce clauses of the unwanted form @xmath203 suppose therefore that splitting of any clause is forbidden when this splits the negative part of the clause ( neither spass nor a hypertableaux prover do this anyway ) . although the two types of clauses above both _ do _ reduce the number of terms created , compared to the classical range - restricting transformation , the constraining effect of the first type of clauses is slightly limited .",
    "terms @xmath204 are not generated , only when no fact @xmath205 is present or has been derived .",
    "when a clause  @xmath206 is present , or as soon as such a clause is derived ( for _ any _ ground terms @xmath207 ) , then terms are freely generated from terms already in the domain with  @xmath46 as the top symbol .",
    "here is an example of a clause set for which the derivation is infinite on the @xmath87  transformation .",
    "( the example is an extension of the example above with the clause @xmath208 . ) @xmath209 notice the derivation is infinite on the classical range - restricting transformation as well , due to the generated clauses @xmath210 and @xmath211 .",
    "the second type of clauses , @xmath212 , are less problematic .",
    "here is a concrete example . for @xmath213 , step ( 2 )",
    "produces the clause @xmath214 although this clause , and the general form , still causes larger terms to be built with hyperresolution type inferences , the constraining effect is larger .    in the next two sections we discuss ways of improving range - restricting transformations further .",
    "the clauses introduced in step ( 2 ) of the new @xmath87  transformation to range - restricted form use abstraction and insert ( possibly a large number of ) instantiations of terms occurring in the clause bodies into the domain .",
    "these are sometimes unnecessary and can lead to non - termination of bumg procedures .    the _ shifting _ transformation introduced next can address this problem .",
    "it consists of two sub - transformations , _ basic shifting _ and _ partial flattening_.    if @xmath38 is an atom @xmath23 then let @xmath215 denote the atom @xmath216 , where @xmath217 is a fresh predicate symbol which is uniquely associated with the predicate symbol @xmath25 . if @xmath25 is the equality symbol @xmath8 we write @xmath217 as @xmath218 and use infix notation .    now ,",
    "the _ basic shifting transformation _ of a clause set @xmath42 is the clause set @xmath219 obtained from  @xmath42 by carrying out the following steps .",
    "( 0 ) initialization .",
    ": :    initially , let @xmath220 .",
    "( 1 ) shifting deep atoms . : :    replace each clause in @xmath219 of the form    @xmath221 , where each atom @xmath222    contains at least one proper functional term and    @xmath20 contains no proper functional term , by the    clause    @xmath223    each of the atoms @xmath222 is called a",
    "_ shifted    atom_. ( 2 ) shifted atom consistency .",
    ": :    extend @xmath219 by the clause set    @xmath224    notice that we do _ not _ add clauses complementary to the ` shifted atoms consistency ' clauses , that is , @xmath225 .",
    "they could be included but are superfluous .",
    "let us continue the example given at the end of the previous section .",
    "we can use basic shifting to move negative occurrences of functional terms into heads . in the example , clause  @xmath226 is replaced by @xmath227 even in the presence of an additional clause , say , @xmath228 , which leads to the clauses @xmath229 termination of bumg can be achieved .",
    "for instance , in a hyperresolution - like mode of operation and with splitting enabled , the spass prover  @xcite splits the derived clause @xmath230 , considers the case with the smaller literal @xmath231 first _ and terminates with a model_. this is because a finite completion ( model ) is found without considering the case of the bigger literal @xmath232 , which would have added the deeper term  @xmath233 to the domain .",
    "the same behaviour can be achieved , for example , with the krhyper bumg prover , a hypertableaux theorem prover  @xcite .    as can be seen in the example ,",
    "the basic shifting transformation trades the generation of new domain elements for a smaller clause body by removing literals from it .",
    "of course , a smaller clause body affects the search space , as then the clause can be used as a premise more often .",
    "to ( partially ) avoid this effect , we propose an additional transformation to be performed prior to the basic shifting transformation .    for a clause set @xmath42 ,",
    "the _ partial flattening transformation _ is the clause set @xmath234 obtained by applying the following steps .",
    "( 0 ) initialization .",
    ": :    initially , let @xmath235 . ( 1 ) reflexivity .",
    ": :    extend @xmath234 by the unit clause    @xmath236 .",
    "( 2 ) partial flattening . : :    for each clause @xmath21 in    @xmath234 , let @xmath24 be all    top - level terms occurring in the non - equational literals in the body    @xmath20 that are proper functional terms , for some    @xmath237 . let @xmath238 be fresh    variables . replace the clause    @xmath239 $ ] by the clause    @xmath240 \\land t_1\\approx x_1 \\land \\cdots \\land t_n \\approx x_n.\\ ] ]    it should be noted that the equality symbol @xmath8 need not be interpreted as equality , but could .",
    "( un-)satisfiability ( and logical equivalence ) is preserved even when reading it just as ` unifiability ' .",
    "this can be achieved by the clause @xmath241 .",
    "one should however note that the reflexivity clause is not compatible with introducing the @xmath112 predicate , so this might not always be a possibility .",
    "( in our implementation , for this reason the reflexivity clause is not added . )    in our running example , applying the transformations @xmath242 , @xmath243 and @xmath87 , in this order , yields the following clauses ( among other clauses , which are omitted because they are not relevant to the current discussion ) . @xmath244",
    "observe that the first clause is more restricted than the clause @xmath245 above because of the additional body literal @xmath246 .",
    "the reason for not extracting constants during partial flattening is that adding them to the domain does not cause non - termination of bumg methods .",
    "it is preferable to leave them in place in the body literals because they have a stronger constraining effect than the variables introduced otherwise .",
    "extracting top - level terms from equations has no effect at all .",
    "consider the unit clause @xmath247 , and its partial flattening @xmath248 . applying basic shifting yields",
    "@xmath249 , and , hyperresolution with @xmath250 gives @xmath251 .",
    "this is the same result as obtained by the transformations as defined .",
    "this explains why top - level terms of equational literals are excluded from the definition .",
    "( one could consider using ` standard ' flattening , that is , recursively extracting terms , but this does not lead to any improvements over the defined transformations . )    finally , we combine basic shifting and partial flattening to give the _ shifting transformation _ , formally defined by @xmath252 , that is , @xmath253 , for any clause set  @xmath42 .",
    "[ prop : result_completeness_shifting ] let @xmath42 be any clause set .",
    "if @xmath254 is satisfiable then @xmath42 is satisfiable .",
    "not difficult , since @xmath243 ( basic shifting ) can be seen to be a structural transformation and  @xmath242 ( partial flatting ) is a form of term abstraction .",
    "[ cor : result_completeness_shifting ] let @xmath42 be any clause set . if @xmath254 is e - satisfiable then @xmath42 is e - satisfiable .    using the same line of argument as in the proof of corollary  [ cor : rr - e - completeness ] , proving preservation of e - satisfiability",
    "can be reduced to proving preservation of satisfiability by means of the equality axioms ( observe that the shifting transformation does not modify the equality axioms ) .",
    "the final transformation introduced in this paper is called _ blocking _ and provides a mechanism for detecting recurrence in the derived models .",
    "the blocking transformation is designed to realize a ` loop check ' for the construction of a domain , by capitalizing on available , powerful equality reasoning technology and redundancy criteria from saturation - based theorem proving . to be suitable , a resolution - based prover , for instance ,",
    "should support _ hyperresolution - style inference , strong equality inference ( for example , superposition or ordered rewriting ) , splitting , and the possibility to search for split - off equations first and standard redundancy elimination techniques_.    the basic idea behind blocking is to add clauses that cause a case analysis of the form @xmath255 versus @xmath256 , for ( ground ) terms @xmath257 and @xmath36 .",
    "although such a case analysis obviously leads to a bigger search space , it provides a powerful technique to detect finite models with a bumg prover .",
    "this is because in the case that @xmath255 is assumed , this new equation may lead to rewriting of otherwise infinitely many terms into one single term . to make this possible ,",
    "the prover must support the above features , including notably splitting . among resolution theorem provers",
    "splitting has become standard .",
    "splitting was first available in the saturation - based prover spass  @xcite , but is now also part of vampire  @xcite and e  @xcite .",
    "splitting is an integral part of the hypertableau prover e - krhyper  @xcite .",
    "blocking has the same goal as the _ unsound theorem proving _ technique introduced first in  @xcite .",
    "instances of unsound theorem proving exemplified in  @xcite include replacing a clause by one that subsumes it , and by adding equations for joining equivalence classes in the abstract congruence closure framework .",
    "unsound theorem proving has been incorporated later in dpllt - based theorem proving  @xcite .    in the following we introduce four different , but closely related , blocking transformations , called _",
    "subterm domain blocking _ , _ subterm predicate blocking _",
    ", _ unrestricted domain blocking _ and _ unrestricted predicate blocking_. subterm domain blocking was introduced in the short version of this paper under the name blocking @xcite .",
    "subterm predicate blocking is inspired by and related to the blocking technique described in @xcite .",
    "unrestricted domain blocking is the first - order version of the unrestricted blocking rule introduced in @xcite and used for developing terminating tableau calculi for logics with the effective finite model property in  @xcite .      by definition ,",
    "the _ subterm domain blocking transformation _ of a clause set @xmath42 is the clause set @xmath258 obtained from @xmath42 by carrying out the following steps .",
    "( 0 ) initialization .",
    ": :    initially , let @xmath259 .",
    "( 1 ) axioms describing the subterm relationship . : :    let @xmath260 be a ` fresh ' binary predicate symbol not    in @xmath7 . extend @xmath258 by    @xmath261 and , for every @xmath51-ary function symbol    @xmath73 and all    @xmath57 , add the clauses    @xmath262 ( 2 ) subterm equality case analysis . : :    extend @xmath258 by these clauses .",
    "@xmath263    the subterm domain blocking transformation allows to contemplate whether two domain elements that are in a subterm relationship should be identified and merged , or not .",
    "this blocking transformation preserves range - restrictedness .",
    "in fact , because the @xmath67 predicate symbol is mentioned in the definition , the blocking transformation can be applied meaningfully only in combination with range - restricting transformations .    reading @xmath264 as ` @xmath257 is a subterm of @xmath36 ' , step  ( 1 ) in the blocking transformation might seem overly involved , because an apparently simpler specification of the subterm relationship for the terms of the signature @xmath6 can be given .",
    "namely : @xmath265 for every @xmath51-ary function symbol @xmath73 and all @xmath266 .",
    "this clause set is range - restricted . yet",
    ", this specification is not suitable for our purposes .",
    "the problem is that the second clause introduces proper functional terms .",
    "for example , for a given constant @xmath3 and a unary function symbol @xmath267 , when just @xmath107 alone has been derived , a bumg procedure derives an infinite sequence of clauses : @xmath268 this does not happen with the specification in step  ( 1 ) .",
    "it ensures that conclusions of bumg inferences involving @xmath260 are about terms currently in the domain , and the domain is always finite .    to justify the clauses added in step  ( 2 ) we continue this example and suppose an interpretation that contains @xmath107 and @xmath269 .",
    "these might have been derived earlier in the run of a bumg prover .",
    "then , from the clauses added by blocking , the ( necessarily ground ) disjunction @xmath270 is derivable .",
    "now , it is important to use a bumg prover with support for splitting and to equip it with an appropriate search strategy .",
    "in particular , when deriving a disjunction such as the one above , the @xmath8-literal should be split off and the clause set obtained in this case should be searched _",
    "first_. the reason is that the ( ground ) equation @xmath271 thereby obtained can then be used for simplification and redundancy testing purposes .",
    "for example , should @xmath272 be derivable now ( in the current branch ) , then any prover based a modern , saturation - based theory of equality reasoning is able to prove it redundant from @xmath273 and @xmath107 .",
    "consequently , the domain is _ not _ be extended _",
    "explicitly_. the information that @xmath274 is in the domain is however implicit via the theory of equality",
    ".      subterm domain blocking defined in the previous section applies blocking to _ domain terms _ where one is a proper subterm of the other .",
    "the idea of the _ subterm ( unary ) predicate blocking transformation _ is similar , but it merges only the ( sub)terms in the extension of _ unary _ predicate symbols different to @xmath67 in the current interpretation .",
    "subterm predicate blocking is defined as follows :    ( 0 ) initialization .",
    ": :    initially , let @xmath275 .",
    "( 1 ) axioms describing the subterm relationship . : :    same as step  ( 1 ) in the definition of @xmath276 .",
    "( 2 ) subterm equality case analysis . : :    extend @xmath277 by these clauses , for each unary    predicate symbol @xmath278 .",
    "( recall that    @xmath7 does not contain @xmath67 . )",
    "@xmath279    finally , add the clause    @xmath280 to    @xmath277 .",
    "observe that the only difference between this transformation and the subterm domain blocking transformation lies in step ( 2 ) .",
    "the clauses @xmath281 added here are obviously more restrictive than their counterpart @xmath282 in the definition of the subterm domain blocking transformation .    that subterm predicate blocking is strictly more restrictive",
    "can be seen from the following example , which also helps to explain the rationale behind this transformation .",
    "@xmath283 any bumg prover terminates on the transformed clause set and returns the model @xmath284 notice that the subterm predicate blocking transformation includes the clauses @xmath285 these are however only applicable for @xmath286 , @xmath287 and @xmath288 which only lead to redundant bumg inferences .",
    "the motivation behind these clauses is to block two @xmath289-literals ( say ) only when there are two literals @xmath290 and @xmath291 where  @xmath257 is a subterm of  @xmath36 .",
    "conversely , if no such loop comes up , as in the example above , there is no reason for blocking .",
    "by contrast , the subterm domain blocking transformation @xmath276 with its clause @xmath292 would be applicable even for distinct terms , leading to the ( unnecessary ) split into the cases @xmath293 and @xmath294 .    from a more general perspective",
    ", the @xmath295 transformation is motivated by the application to description logic knowledge bases  @xcite .",
    "often , such knowledge bases do not contain cyclic definitions , or only few definitions are cyclic .",
    "the subterm predicate transformation aims to apply blocking only to concepts ( unary predicates ) with cyclic definitions .",
    "below , in section  [ section_dl_example ] , we discuss a description logic example to highlight the differences between the various blocking transformations .",
    "the two previous ` subterm ' variants of the blocking transformation allow to speculatively identify terms _ and their subterms_. the ` unrestricted ' variants introduced next differ from both by allowing speculative identifications of _ any _ two terms .",
    "for the ` domain ' variant , called _ unrestricted domain blocking transformation _ , the definition is as follows .",
    "( 0 ) initialization .",
    ": :    initially , let @xmath296 .",
    "( 1 ) domain elements equality case analysis . : :    extend @xmath297 by these clauses .",
    "@xmath298    there is a clear trade - off between this transformation and the subterm domain blocking transformation . on the one hand ,",
    "the unrestricted domain blocking transformation induces a larger search space , as the bodies of the clauses @xmath299 are less constrained than their counterparts in the subterm domain blocking transformation .",
    "this becomes obvious after extending the clause body of @xmath300 from the @xmath276 transformation with @xmath301 , which does not change anything .",
    "on the other hand , the unrestricted domain blocking transformation enables the finding of models with smaller domains .",
    "this means fewer congruence classes on the herbrand terms are induced by the equality relation  @xmath8 . as our experiments show , such models can often be found quicker in satisfiable problems , even for the @xmath77 transformation .    using the ideas of the termination proof in  @xcite for semantic ground tableau with unrestricted domain blocking for description logics with the expressive power similar to the two - variable fragment of first - order logic",
    ", it can be shown bumg with unrestricted domain blocking can return finite models , if they exist , even for problems of undecidable fragments .",
    "carrying over also the results in  @xcite implies unrestricted domain blocking can be used in bumg methods to return domain minimal models for logics with the effective finite model property .      the definition of the last variant of blocking , the _ unrestricted ( unary ) predicate blocking transformation _",
    ", is as follows .",
    "( 0 ) initialization .",
    ": :    initially , let @xmath302 .",
    "( 1 ) term equality case analysis . : :    extend @xmath303 by these clauses , for each unary    predicate symbol @xmath278 .",
    "@xmath304    finally , add the clause    @xmath280 to    @xmath303 .",
    "this transformation allows to equate any two ( distinct ) terms in a @xmath305-relation , if there are any .",
    "the motivation is a combination of the above , to block cycles on @xmath305-literals if they arise , and to compute models with small domains .",
    "it is instructive to compare the effects on the returned models of the four blocking transformations on an example from description logics . to this end , consider the description logic knowledge base ( left ) and its translation into clause logic ( right ) in table  [ table_dl_example ] .",
    "notice that the cycle in the inclusion statements in the tbox ( for  @xmath306 and  @xmath307 ) means some form of blocking is needed for decidability in tableau - based description logic systems .",
    "likewise , blocking is needed to force bumg methods to terminate on the translated clause form .",
    "any of the four blocking transformations defined above suffice .",
    "table  [ table_blocking_comparison_by_example ] summarizes the behaviour of these transformations , in terms of interesting relations in the computed model .",
    ".sample description logic knowledge base and clausal form [ cols=\"^,^\",options=\"header \" , ]     table  [ table_input_size_statistics ] gives an impression of the increase in the size of the input files caused by the transformations .",
    "although the file sizes were measured after all comments and white space were removed , variations is name lengths distort the values slightly ( which can be seen in the values for shifting ) .",
    "the results therefore need to be interpreted cautiously .",
    "the average increase in file size does show a significant effect on the size of the problem for the new range - restriction transformations and also subterm blocking ( both subterm domain blocking and subterm predicate blocking ) .",
    "the largest increase in size was observed for the problem syo600 - 1 ( 13.7 fold increase ) , which contained 380 predicate symbols with arity up to 64 , 2 constants and no non - constant function symbols .",
    "the main cause for this increase was the large number of clauses added in step  ( 4 ) of the @xmath87  transformation .",
    "for each of the 284 predicate symbols with arity 64 in the problem , 64 clauses were added in step  ( 4 ) .",
    "this is a large number .",
    "in contrast for the @xmath77 transformations the increase in size was negligible , and also , generally , it was significantly lower . despite its positive virtues",
    "this shows a downside of the @xmath87 transformation . for problems containing a large number of function symbols with high arity",
    ", step  ( 5 ) similarly adds many clauses , even though the transformation overall is still effective .",
    "analysis of the problems solved without any form of blocking revealed a large number belonged to the bernays - schnfinkel class : 131/176 ( 74% ) for @xmath87 , 132/236 ( 56% ) for @xmath308 , 133/140 ( 95% ) for @xmath77 , and 134/142 ( 94% ) for @xmath308 .",
    "these results confirmed the expectation that more problems not solvable with the @xmath77 transformation can be solved with the @xmath87 transformation and the benefits of reducing the number of terms created .    although the main purpose of bumg methods is _ disproving _ theorems and generating models for satisfiable problems , for completeness we report in tables  [ table_count_unsat ] and  [ table_count_ratings_unsat_summary ] the results for unsatisfiable clausal tptp problems .",
    "the results were not as uniform as for satisfiable problems",
    ". however some general observations can be made .",
    "spass in auto mode fared best overall , and did so in all tptp categories and each problem rating category .",
    "for unsatisfiable problems the drawback of bumg methods is that clauses need to be exhaustively grounded and each branch in the derivation tree needs to be closed .",
    "the dominance of spass in auto mode is thus not surprising .    for the bumg methods , a general deterioration in performance",
    "could be observed for shifting , when comparing the results for the groups with baselines @xmath308 and @xmath309 to the respective groups without shifting .",
    "this is plausible because shifting leads to fewer negative literals in clauses and more positive literals thus reducing the constraining effect and leading to more splitting . for problems with higher rating ,",
    "shifting did seem to have a positive effect ; for instance , in the @xmath310 $ ] range , @xmath308 solved 70  problems whereas @xmath87 solved 32 problems .    within the bumg groups we expected best performance for the baseline transformations , because these do not involve blocking and performing many blocking steps lead to a significant overhead .",
    "however only for the first group the @xmath87 transformation fared best . in combination with classical range - restriction @xmath77 ,",
    "somewhat surprisingly , the best results were obtained with unrestricted domain blocking , the most expensive form of blocking , because it is applicable to any terms . among the blocking techniques in each case",
    "the highest gain was obtained for unrestricted domain blocking ( see  table  [ table_uniquely_solved_sat_unsat_wrt_baseline ] ) .",
    "however also the greatest loss was observed for this blocking technique .",
    "the smallest loss and lowest gain was obtained for @xmath311 blocking .",
    "the high loss for @xmath312 could be a reflection of the high increase in splitting steps preventing quicker detection of contradictions .",
    "analogously the small loss for @xmath311 could be attributable to the smallest number of additional splitting steps among the blocking techniques .",
    "the high gain for @xmath312 blocking suggests the inference process panned out significantly differently leading to solutions not found with the other techniques .",
    "this seems to be supported by the results in the third row of table  [ table_uniquely_solved_sat ] according to which , with one exception , the largest number of uniquely solved problems in each group was obtained with @xmath312 blocking .",
    "the exception was the first group , where @xmath87 led to the largest number of uniquely solved problems . among all the bumg methods",
    ", @xmath87 solved the largest number of problems not solved by any of the other methods .",
    "however , these results pale against the number of uniquely solved problems by spass in auto mode .",
    "only one problem was solved by a bumg method which was not solved by spass in auto mode .",
    "l@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r category    ' '' ''    & # &    45 @xmath87    &    45 @xmath313    &    45 @xmath314    &    45 @xmath315    &    45 @xmath316    &    45 @xmath308    &    45 @xmath317    &    45 @xmath318    &    45 @xmath319    &    45 @xmath320    &    45 @xmath77    &    45 @xmath321    &    45 @xmath322    &    45 @xmath323    &    45 @xmath324    &    45 @xmath309    &    45 @xmath325    &    45 @xmath326    &    45 @xmath327    &    45 @xmath328    &    45 auto     + alg & 133 & * 13 & 10 & 11 & 10 & 12 & * 7 & 6 & * 7 & 6 & 6 & 18 & 18 & * 20 & 19 & 19 & 5 & 5 & 4 & * 6 & 4 & * + ana & 83 & 7 & * 11 & * 11 & 10 & 7 & 6 & * 7 & * 7 & 6 & 6 & 4 & 7 & * 10 & 6 & 4 & 3 & 4 & * 5 & 3 & 3 & * + boo & 74 & 38 & 32 & 28 & * 43 & 38 & 38 & 31 & 26 & * 42 & 37 & 33 & 36 & * 38 & 33 & 33 & 33 & * 36 & 34 & 33 & 33 & * + cat & 52 & * 38 & 33 & 33 & 34 & * 38 & 29 & 31 & * 32 & 29 & 28 & 34 & * 36 & 35 & 35 & 34 & 27 & * 30 & * 30 & * 30 & 28 & * + col & 225 & * 32 & 23 & 22 & 25 & 28 & 19 & 18 & 16 & 17 & * 19 & * 32 & 31 & 25 & * 32 & 31 & 8 & * 15 & * 15 & 8 & 8 & * + com & 14 & 6 & 6 & 6 & 6 & 6 & * 6 & * 6 & 5 & * 6 & * 6 & 5 & 5 & 5 & 5 & 5 & 4 & 4 & 4 & 4 & 4 & * + fld & 175 & 24 & 39 & 44 & 38 & * 48 & 19 & 38 & * 45 & 38 & 43 & 23 & 32 & * 36 & 35 & 19 & 17 & 29 & * 37 & 29 & 17 & * + geo & 187 & * 68 & * 68 & 67 & 67 & 66 & 71 & * 74 & 66 & 72 & 71 & 45 & 43 & * 53 & 45 & 42 & 45 & 46 & * 47 & 44 & 44 & * + gra & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & * + grp & 798 & 233 & 183 & 171 & * 240 & 225 & * 307 & 231 & 260 & 291 & 298 & 319 & 378 & * 424 & 337 & 322 & 358 & 385 & * 406 & 353 & 357 & * + hen & 64 & * 41 & * 41 & 34 & 40 & * 41 & 34 & * 37 & 32 & 34 & 34 & 31 & * 42 & 40 & 31 & 29 & 36 & * 43 & 33 & 35 & 36 & * + hwc & 4 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 2 & 2 & 2 & 2 & 2 & 1 & 1 & 1 & 1 & 1 & * + hwv & 116 & * 44 & 39 & 34 & 40 & 35 & 21 & 21 & 21 & * 23 & 20 & 18 & 18 & * 20 & 18 & 19 & * 15 & 14 & 10 & 13 & 12 & * + krs & 17 & 9 & 9 & 9 & 9 & 9 & 9 & 9 & 9 & 9 & 9 & 7 & * 9 & * 9 & * 9 & * 9 & 5 & 8 & * 9 & 8 & 8 & * + lat & 250 & 39 & 33 & 29 & * 40 & 39 & 39 & 25 & 24 & * 43 & 37 & 56 & 56 & * 64 & 57 & 56 & 70 & 65 & 56 & * 71 & 70 & * + lcl & 625 & * 44 & 40 & 35 & 39 & 45 & * 19 & * 19 & 17 & * 19 & * 19 & 43 & * 44 & * 44 & * 44 & 43 & 21 & 24 & * 26 & 23 & 21 & * + lda & 23 & * 3 & 2 & 2 & * 3 & * 3 & * 3 & * 3 & 2 & * 3 & * 3 & 5 & 5 & 5 & 5 & 5 & 5 & * 6 & 5 & 5 & 5 & * + mgt & 67 & * 41 & 38 & 35 & 37 & 42 & * 52 & 40 & 29 & 40 & 46 & 18 & * 30 & 25 & 21 & 20 & 12 & * 23 & 17 & 13 & 12 & * + msc & 20 & 9 & * 11 & 9 & 10 & 9 & 8 & * 10 & 7 & 9 & 7 & 8 & * 10 & * 10 & 9 & 8 & 7 & * 10 & 8 & 7 & 7 & * + nlp & 22 & 17 & * 18 & * 18 & * 18 & 17 & * 20 & 19 & 18 & 18 & * 20 & 9 & * 18 & 14 & * 18 & 9 & 9 & * 18 & 14 & * 18 & 9 & * + num & 86 & * 15 & 10 & 10 & 13 & 13 & 10 & 8 & 9 & 9 & * 11 & 10 & 9 & 8 & 10 & * 11 & * 8 & 7 & * 8 & * 8 & * 8 & * + pla & 51 & 4 & * 5 & 4 & 4 & * 5 & 3 & * 4 & 3 & 3 & * 4 & 3 & * 4 & 2 & * 4 & 3 & 2 & * 3 & 1 & * 3 & * 3 & * + puz & 72 & * 46 & 45 & 37 & 45 & 45 & * 38 & 37 & 36 & 37 & * 38 & * 44 & 43 & 35 & 43 & 41 & * 34 & * 34 & 30 & 33 & 33 & * + rel & 107 & * 4 & 3 & 2 & * 4 & * 4 & 3 & 2 & 2 & * 4 & 3 & 5 & * 7 & 6 & 5 & 5 & 5 & * 6 & * 6 & 5 & 5 & * + rng & 83 & 20 & 11 & 8 & * 23 & 19 & 19 & 10 & 9 & * 22 & 19 & 10 & * 14 & * 14 & 11 & 10 & 10 & * 14 & * 14 & 11 & 11 & * + rob & 31 & * 4 & 3 & 2 & * 4 & * 4 & * 5 & 3 & 1 & * 5 & * 5 & 3 & * 5 & 3 & 3 & 3 & 3 & * 6 & 4 & 5 & 3 & * + sct & 98 & 8 & 8 & 8 & 8 & 8 & 2 & 2 & 2 & 2 & 2 & 11 & 11 & 11 & 11 & 11 & 2 & 2 & 2 & 2 & 2 & * + set & 450 & * 68 & 63 & 57 & 58 & 66 & 46 & 50 & * 52 & 47 & 45 & 53 & 50 & 51 & * 54 & 53 & 29 & 36 & * 40 & 29 & 28 & * + swc & 383 & * 120 & 107 & 76 & 100 & 81 & 75 & 74 & 75 & 74 & * 89 & * 111 & 106 & 100 & 105 & 110 & 99 & * 100 & 89 & 99 & 97 & * + swv & 855 & 100 & 72 & 70 & 92 & * 104 & 43 & 45 & 38 & * 48 & 45 & * 77 & 72 & 71 & * 77 & * 77 & 29 & 31 & * 33 & 29 & 28 & * + sww & 33 & - & - & - & - & - & - & - & - & - & - & 1 & 1 & 1 & 1 & 1 & - & - & - & - & - & * + syn & 621 & * 330 & 329 & 321 & 326 & 328 & 318 & * 326 & 318 & 319 & 317 & 321 & 321 & 314 & 319 & * 322 & 300 & * 307 & * 306 & 300 & 303 & * + syo & 17 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & - & 1 & - & 1 & 1 & * + top & 5 & 3 & 3 & 3 & 3 & 3 & 1 & 2 & * 3 & 1 & 1 & 2 & * 3 & * 3 & * 3 & * 3 & 1 & 1 & 1 & 1 & 1 & * + total & 5842 & * 1431 & 1298 & 1199 & 1392 & 1391 & 1273 & 1191 & 1174 & 1279 & * 1291 & 1363 & 1468 & * & 1409 & 1361 & 1204 & * 1315 & 1296 & 1231 & 1203 & * + * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *    l@r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r@  r category    ' '' ''    & # &    45 @xmath87    &    45 @xmath313    &    45 @xmath314    &    45 @xmath315    &    45 @xmath316    &    45 @xmath308    &    45 @xmath317    &    45 @xmath318    &    45 @xmath319    &    45 @xmath320    &    45 @xmath77    &    45 @xmath321    &    45 @xmath322    &    45 @xmath323    &    45 @xmath324    &    45 @xmath309    &    45 @xmath325    &    45 @xmath326    &    45 @xmath327    &    45 @xmath328    &    45 auto     +   + @xmath329 & 1409 & 871 & 830 & 796 & 860 & * 885 & 734 & 745 & 722 & 744 & * 746 & 739 & * 769 & 747 & 756 & 737 & 590 & * 654 & 647 & 614 & 597 & * + @xmath330 $ ] & 480 & * 244 & 203 & 187 & 236 & 239 & 210 & 184 & 167 & * 216 & 210 & 236 & 239 & * 245 & 237 & 234 & 204 & * 213 & 212 & 202 & 201 & * + @xmath331 $ ] & 594 & * 151 & 145 & 118 & 148 & 137 & 133 & 123 & 112 & 140 & * 141 & 151 & * 165 & 162 & 164 & 150 & 145 & * 157 & 144 & * 157 & 144 & * + @xmath332 $ ] & 507 & * 98 & 85 & 72 & 87 & 79 & 70 & 61 & 63 & 65 & * 72 & 85 & 89 & * 94 & 85 & 83 & 67 & 70 & * 71 & 66 & 64 & * + @xmath333 $ ] & 258 & * 30 & 24 & 18 & * 30 & 24 & 38 & 30 & * 40 & 35 & 36 & 42 & 55 & * 61 & 51 & 44 & 51 & * 53 & 46 & 49 & 51 & * + @xmath310 $ ] & 513 & * 32 & 11 & 6 & 24 & 22 & * 70 & 45 & 53 & 62 & 69 & 75 & 116 & * 139 & 86 & 76 & 89 & 112 & * 125 & 89 & 88 & * + @xmath334 $ ] & 207 & 3 & - & 1 & * 4 & 2 & 13 & 2 & * 14 & 9 & 13 & 22 & 23 & * 30 & 20 & 23 & 27 & * 30 & * 30 & 26 & 27 & * + @xmath335 $ ] & 298 & 2 & - & 1 & 3 & 3 & * 4 & 1 & 3 & * 6 & 4 & 12 & 11 & * 13 & 9 & 12 & * 19 & 14 & 11 & 16 & * 19 & * + @xmath336 $ ] & 324 & - & - & - & - & - & 1 & - & - & * 2 & - & 1 & 1 & * 6 & 1 & 2 & * 4 & * 4 & * 4 & * 4 & * 4 & * + @xmath337 $ ] & 344 & - & - & - & - & - & - & - & - & - & - & - & - & * 1 & - & - & * 1 & * 1 & * 1 & * 1 & * 1 & * + @xmath338 $ ] & 259 & - & - & - & - & - & - & - & - & - & - & - & * 2 & - & - & - & * 7 & * 7 & 5 & * 7 & * 7 & * + @xmath339 & 1516 & - & - & - & - & - & - & - & - & - & - & - & - & - & - & - & - & - & - & - & - & - + total & - & * 1431 & 1298 & 1199 & 1392 & 1391 & 1273 & 1191 & 1174 & 1279 & * 1291 & 1363 & 1468 & * & 1409 & 1361 & 1204 & * 1315 & 1296 & 1231 & 1203 & * + * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *    note : @xmath3401516 = 649 uns + 28 opn + 839 unk      several findings can be drawn from the results .",
    "the results have confirmed our expectation that unrestricted domain blocking is a powerful technique , which helps discover finite models more often than with the other blocking techniques .",
    "the results suggest the technique is indispensable for bottom - up model generation . both in combination with the new range - restricting transformation , and the classical range - restricting transformation ,",
    "good results have been obtained .",
    "overall , the method based on new range - restriction , shifting and unrestricted domain blocking performed best on the sample . on satisfiable problems with higher difficulty rating this method was however gradually edged out by the method based on classical range - restriction and unrestricted domain blocking .",
    "this suggests there is a trade - off between the @xmath87  transformation , which is based on a non - trivial transformation but does restrict the creation of terms , and the simpler @xmath77 transformation , which has to rely on blocking to restrict the creation of terms .",
    "the results for subterm domain blocking were good and often not far behind unrestricted domain blocking for satisfiable problems .",
    "in contrast , predicate blocking seems not to be effective on many problems .",
    "we attribute this to the nature of the problems in the tptp library .",
    "an investigation with spass - yarralumla on translations of modal logic problems has revealed a different picture  @xcite .",
    "there , the best performance was obtained with subterm domain blocking for both satisfiable and unsatisfiable problems .",
    "better results than for unrestricted domain blocking were also obtained with subterm predicate blocking and unrestricted predicate blocking .",
    "better performances for subterm and predicate blocking are also expected on problems stemming from ( cyclic ) description logic knowledge bases .",
    "experiments with blocking restricted by excluding a finite subset of the domain have shown better results than for unrestricted domain blocking for consistency testing on a large corpus of ontologies  @xcite . the better performance for restricted forms of blocking on modal and description logic problems",
    "can be attributed to mainstream modal and description logics having the finite tree model property .",
    "this means every satisfiable formula holds in a model based on a finite tree , which is not a property of first - order formulae .",
    "the results showed bumg methods were good for disproving theorems and generating models for satisfiable problems .",
    "for unsatisfiable problems bumg methods were however significantly less efficient than spass in auto mode . for theorem proving purposes",
    "a limitation of bumg methods is that they require full grounding .",
    "it can be seen already from very small unsatisfiable examples that a complete bumg derivation tree can be very large , whereas resolution proofs are significantly shorter .",
    "compared to resolution , an advantage of bumg methods for satisfiable problems is the division of the search space into branches which are individually constructed and individually processed . as a consequence , if the right decisions are made at branching points models can be found more quickly .",
    "when the branching point decisions are less optimal the performance can deteriorate dramatically , particularly if the search is trapped in a branch with only infinite models .",
    "this could be another explanation for the lower success rate of the bumg methods observed for more difficult satisfiable problems . for problems where only infinite models exist ,",
    "clearly other methods are better .",
    "we have presented and tested a number of enhancements for bumg methods .",
    "an important aspect is that our enhancements exploit the strengths of readily available bumg system with only modest modifications .",
    "our range restriction technique is a refinement of existing transformations to range - restricted clauses in that terms are added to the domain of interpretation on a ` by need ' basis .",
    "moreover , we have presented methods that allow us to extend bumg methods with blocking techniques related to loop checking techniques with a long history in the more specialized setting of modal and description logics .    the experimental evaluation has shown blocking techniques are indispensable in bumg methods for satisfiable problems . in particular , unrestricted domain blocking turned out to be the most powerful technique on problems from the tptp library . limiting the creation of terms during the inference process by using the new range restricting transformation paid off , leading to better results .",
    "it is particularly advisable together with the shifting transformation .",
    "the experimental results however also show that classical range restriction together with unrestricted blocking is a good complementary method . because model generation methods are not just aimed at showing the existence of models but are built to construct and return models , when no models exists the entire search space must be traversed , which has led to inferior performance compared to saturation - based resolution .",
    "our bottom - up model generation approach is especially suitable for generating small models and it is possible to show the approach using unrestricted domain blocking allows us to compute finite models when they exist .",
    "the models produced by subterm blocking and predicate blocking are not as small as those produced by unrestricted domain blocking .",
    "in particular , the generated models do not need to be herbrand models .",
    "it follows from how the transformations work that the generated models are quasi - herbrand models , in the following sense .",
    "whenever @xmath341 and @xmath342 hold in the ( herbrand ) model constructed by the bumg method , then ( as in herbrand interpretations ) the terms @xmath257 and @xmath36 are mapped to themselves in the associated ( possibly non - herbrand ) model . reconsidering the example in the introduction of the two unit clauses @xmath1 and @xmath343 , the associated model maps @xmath3 and @xmath4 to themselves , regardless as to",
    "which transformations are applied as long as it includes a form of subterm blocking . in this way ,",
    "more informative models are produced than those computed by , for example , mace- and sem - style finite model searchers ( and also unrestricted domain blocking ) . from an applications perspective , this can be an advantage because larger models are more likely to be helpful to a user debugging mistakes in the formal specification of a program or protocol , or an ontology engineer trying to discover why an expected entailment does not follow from an ontology .",
    "research in automated theorem proving on developing decision procedures has concentrated on developing refinements of resolution , mainly ordering refinements , for deciding solvable fragments of first - order logic .",
    "fragments decidable with ordered resolution are complementary to the fragments that can be decided by refinements using the techniques presented in this paper .",
    "we have thus extended the set of techniques available for resolution methods to turn them into more effective and efficient ( terminating ) automated reasoning methods .",
    "in particular , we have shown that all procedures based on hyperresolution , or bumg methods , can decide the bernays - schnfinkel class and the class of clauses with equality .",
    "studying how well the ideas and techniques discussed in this paper can be exploited and behave in dedicated bumg provers , tableau - based provers and other provers ( including resolution - based provers ) is very important but is beyond the scope of the present paper .",
    "initial results with another prover , darwin  @xcite , are very encouraging .",
    "an in - depth comparison and analysis of bumg approaches with our techniques and mace - style or sem - style model generation would also be of interest .",
    "another source for future work is to combine the presented transformations with other bumg techniques , such as magic sets transformations  @xcite , a typed version of range - restriction  @xcite , and minimal model computation  @xcite .",
    "having been designed to be generic , we believe that our transformations carry over to formalisms with default negation , which could provide a possible basis for enhancements to answer - set programming systems .      the second author is grateful to christoph weidenbach and uwe waldmann for hosting her during 2010 and 20132014 . in this time",
    "the implementation of spass - yarralumla was completed and the experimental evaluation was undertaken on the cluster of the max - planck - institut fr informatik , saarbrcken .",
    "we thank uli furbach , dmitry tishkovsky , uwe waldmann and christoph weidenbach for useful discussions and comments on this research .",
    "this work was supported by the uk engineering and physical sciences research council ( epsrc ) ( grants ep / f068530/1 and ep / h043748/1 ) , nicta , canberra , australia , and the max - planck - institut , saarbrcken , germany .",
    "l.  bachmair and h.  ganzinger .",
    "equational reasoning in saturation - based theorem proving . in w.",
    "bibel and p.  h. schmitt , editors , _ automated deduction  a basis for applications _ , pages 353397 .",
    "kluwer , 1998 .",
    "p.  baumgartner and r.  a. schmidt . blocking and other enhancements for bottom - up model generation methods . in u.",
    "furbach and n.  shankar , editors , _ automated reasoning : ijcar 2006 _ , volume 4130 of _ lecture notes in artificial intelligence _",
    ", pages 125139 .",
    "springer , 2006 .",
    "p.  baumgartner , u.  furbach , and i.  niemel .",
    "hyper tableaux . in j.",
    "j. alferes , l.  m. pereira , and e.  orlowska , editors , _ logics in artificial intelligence : jelia96 _ , volume 1126 of _ lecture notes in computer science _ , pages 117 .",
    "springer , 1996 .",
    "baumgartner , u.  furbach , and b.  pelzer .",
    "hyper tableaux with equality . in f.",
    "pfenning , editor , _ automated deduction : cade-21 _ , volume 4603 of _ lecture notes in artificial intelligence _ , pages 492507 .",
    "springer , 2007 .",
    "f.  bry and s.  torge .",
    "a deduction method complete for refutation and finite satisfiability . in j.  dix ,",
    "l.  farias  del cerro , and u.  furbach , editors , _ logics in artificial intelligence : jelia98 _ , volume 1489 of _ lecture notes in computer science _ , pages 117 .",
    "springer , 1998 .",
    "k.  claessen and n.  srensson .",
    "new techniques that improve mace - style finite model building . in p.",
    "baumgartner and c.  g. fermller , editors , _ proceedings of cade-19 workshop on model computation _",
    ", 2003 .",
    "m.  fujita , j.  slaney , and f.  bennett .",
    "automatic generation of some results in finite algebra . in",
    "_ proceedings of the thirteenth international joint conference on artificial intelligence ( ijcai95 ) _ , pages 5257 .",
    "morgan kaufmann , 1995 .",
    "r.  hasegawa , k.  inoue , y.  ohta , and m.  koshimura .",
    "non - horn magic sets to incorporate top - down inference into bottom - up theorem proving . in _",
    "automated deduction : cade-14 _ , volume 1249 of _ lecture notes in computer science _ , pages 176190 .",
    "springer , 1997 .",
    "u.  hustadt and r.  a. schmidt . on the relation of resolution and tableaux proof systems for description logics . in t.",
    "dean , editor , _ proceedings of the sixteenth international joint conference on artificial intelligence : ijcai99 _ , pages 110115 .",
    "morgan kaufmann , august 1999 .",
    "u.  hustadt and r.  a. schmidt .",
    ": modal reasoning by translation and first - order resolution . in r.",
    "dyckhoff , editor , _ automated reasoning with analytic tableaux and related methods , international conference : tableaux 2000 _ , volume 1847 of _ lecture notes in artificial intelligence _ , pages 6771 .",
    "springer , 2000 .",
    "u.  hustadt , r.  a. schmidt , and c.  weidenbach .",
    ": subsumption testing with spass . in p.",
    "lambrix , a.  borgida , m.  lenzerini , r.  mller , and p.  patel - schneider , editors , _ proceedings of international workshop on description logics99 _ , pages 136137 .",
    "linkping university , 1999 .",
    "m.  khodadadi , r.  a. schmidt , and d.  tishkovsky . a refined tableau calculus with controlled blocking for the description logic @xmath344 . in d.",
    "galmiche and d.  larchey - wendling , editors , _ automated reasoning with analytic tableaux and related methods : tableaux 2013 _ , volume 8123 of _ lecture notes in computer science _ , pages 188202 .",
    "springer , 2013 .",
    "b.  pelzer and c.  wernhard .",
    "system description : e - krhyper . in f.",
    "pfenning , editor , _ automated deduction : cade-21 _ , volume 4603 of _ lecture notes in artificial intelligence _ , pages 508513 .",
    "springer , 2007 .",
    "r.  a. schmidt and d.  tishkovsky . using tableau to decide expressive description logics with role negation . in k.",
    "aberer , k .- s .",
    "choi , n.  fridman  noy , d.  allemang , k .-",
    "lee , l.  j.  b. nixon , j.  golbeck , p.  mika , d.  maynard , r.  mizoguchi , g.  schreiber , and p.  cudr - mauroux , editors , _ the semantic web : iswc 2007 + aswc 2007 _ , volume 4825 of _ lecture notes in computer science _ , pages 438451 .",
    "springer , 2007 .",
    "r.  a. schmidt and d.  tishkovsky . a general tableau method for deciding description logics , modal logics and related first - order fragments . in a.",
    "armando , p.  baumgartner , and g.  dowek , editors , _ automated reasoning : ijcar 2008 _ , volume 5195 of _ lecture notes in computer science _ , pages 194209 .",
    "springer , 2008 .",
    "r.  a. schmidt , j.  g. stell , and d.  rydeheard .",
    "axiomatic and tableau - based reasoning for kt(h , r ) . in r.  gor and a.",
    "kurucz , editors , _ advances in modal logic , volume 10 _ , pages ? ?",
    " ? ? , london , 2014",
    "college publications .            c.  weidenbach , r.  a. schmidt , t.  hillenbrand , r.  rusev , and d.  topic . system description : spass version 3.0 . in f.",
    "pfenning , editor , _ automated deduction : cade-21 _ , volume 4603 of _ lecture notes in artificial intelligence _ ,",
    "pages 514520 .",
    "springer , 2007 .    c.  weidenbach , d.  dimova , a.  fietzke , r.  kumar , m.  suda , and p.  wischnewski .",
    "version 3.5 . in r.",
    "a. schmidt , editor , _ automated deduction : cade-22 _ , volume 5663 of _ lecture notes in computer science _ , pages 140145 .",
    "springer , 2009 ."
  ],
  "abstract_text": [
    "<S> model generation is a problem complementary to theorem proving and is important for fault analysis and debugging of formal specifications of , for example , security protocols , programs and terminological definitions . </S>",
    "<S> this paper discusses several ways of enhancing the paradigm of bottom - up model generation . </S>",
    "<S> the two main contributions are new , generalized blocking techniques and a new range - restriction transformation . the blocking techniques are based on simple transformations of the input set together with standard equality reasoning and redundancy elimination techniques . </S>",
    "<S> these provide general methods for finding small , finite models . </S>",
    "<S> the range - restriction transformation refines existing transformations to range - restricted clauses by carefully limiting the creation of domain terms . </S>",
    "<S> all possible combinations of the introduced techniques and a classical range - restriction technique were tested on the clausal problems of the tptp version 6.0.0 with an implementation based on the spass theorem prover using a hyperresolution - like refinement . </S>",
    "<S> unrestricted domain blocking gave best results for satisfiable problems showing it is a powerful technique indispensable for bottom - up model generation methods . </S>",
    "<S> both in combination with the new range - restricting transformation , and the classical range - restricting transformation , good results have been obtained . limiting the creation of terms during the inference process by using the new range restricting transformation </S>",
    "<S> has paid off , especially when using it together with a shifting transformation . </S>",
    "<S> the experimental results also show that classical range restriction with unrestricted blocking provides a useful complementary method . </S>",
    "<S> overall , the results showed bottom - up model generation methods were good for disproving theorems and generating models for satisfiable problems , but less efficient than spass in auto mode for unsatisfiable problems . </S>"
  ]
}
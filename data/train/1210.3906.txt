{
  "article_text": [
    "-density parity - check ( ldpc ) codes @xcite have been one of major research topics in coding area over the past decade due to their near capacity - approaching performance . since",
    "low decoding complexity can be achieved by various iterative decoding algorithms , ldpc codes have been adopted in many practical applications .",
    "especially , quasi - cyclic ( qc ) ldpc codes are well suited for hardware implementation using simple shift registers due to the regularity in their parity - check matrices .",
    "thorpe @xcite introduced the concept of _ protograph - based ldpc codes _",
    ", a class of ldpc codes lifted from protographs .",
    "qc ldpc codes belong to the protograph - based ldpc codes because they can be regarded as the lifted ones from the protographs using cyclic permutations .",
    "therefore , the performance of qc ldpc codes mainly depends on how to design their protographs as well as how to assign shift values .",
    "the performance of ldpc codes under message - passing algorithms depends on the girth of the codes because a message sent by a node along a cycle propagates back to the node itself after some iterations , which causes the dependence among messages and performance degradation .",
    "therefore , there have been lots of efforts to construct qc ldpc codes with large girth @xcite-@xcite . in @xcite ,",
    "necessary and sufficient conditions on determining the girth of qc ldpc codes from circulant permutation matrices are derived and some families of qc ldpc codes are constructed .",
    "most of qc ldpc codes with large girth are constructed based on algebraic structures @xcite-@xcite , @xcite-@xcite while some optimization algorithms and greedy search algorithms are used to find qc ldpc codes with large girth @xcite-@xcite .",
    "various combinatorial designs have also been widely used to construct qc ldpc codes in order to guarantee the girth at least 6 @xcite-@xcite .",
    "the girth of qc ldpc codes constructed from protographs is determined by the structure of the protograph , the lift size , and all the shift values . in @xcite , @xcite , @xcite , and @xcite , an upper bound on the girth of qc ldpc codes , which is only determined by the structure of the protograph ,",
    "is discussed . especially , in @xcite , all substructures of multiple - edge protographs , which inevitably give rise to cycles of length up to 12 , are searched but any construction method of multiple - edge protographs for qc ldpc codes with large girth is not provided . in @xcite , all substructures of single - edge protographs , which inevitably give rise to cycles of length up to 20 in qc ldpc codes , are identified and by using combinatorial designs , some single - edge protographs for girth larger than or equal to 18 and other single - edge protographs for girth larger than or equal to 14 are constructed .",
    "although the behavior of iterative message - passing decoders is mostly dominated by the pseudo - weight of pseudo - codewords @xcite , @xcite , the minimum hamming distance still plays an important role because it characterizes the undetectable errors and provides an upper bound on the minimum pseudo - weight of a code .",
    "smarandache and vontobel @xcite derived two upper bounds on the minimum hamming distance of qc ldpc codes , where one bound is applied when qc ldpc codes are explicitly given and the other bound can be applied even when only the protographs are given .",
    "it is shown by experiments that these upper bounds are very close to the real minimum hamming distance when the lift size for a protograph is large enough .",
    "also , through several examples , we can see that for the given protograph size and the given row- and column - weights , these two upper bounds increase as the number of multiple edges increases in the protograph .",
    "therefore , these upper bounds can be increased if multiple - edge protographs are used to construct qc ldpc codes , compared to the case of single - edge protographs .    in this paper , multiple - edge protographs which can be lifted to qc ldpc codes with large girth",
    "are investigated .",
    "search for all single- and multiple - edge subgraphs which inevitably generate cycles of any length in qc ldpc codes are systematically performed based on graph - theoretic approach as an extension of the results in @xcite , @xcite , and @xcite .",
    "construction methods of multiple - edge protographs using various combinatorial designs are proposed and a lifting algorithm to construct regular qc ldpc codes with large girth is also proposed .",
    "the remainder of the paper is organized as follows .",
    "section [ sec : inevitable ] introduces qc ldpc codes , protographs , and the concept of inevitable cycles . in section [ sec : subgraph ] , all single- and multiple - edge subgraphs which generate inevitable cycles in qc ldpc codes are fully searched . based on these subgraph patterns , section [ sec:12 ] describes a design method for multiple - edge protographs of regular qc ldpc codes having girth larger than or equal to 12 . in section [ sec:14 ] ,",
    "construction methods of multiple - edge protographs are proposed for regular qc ldpc codes having girth 14 when the variable node degree is 3 and they are generalized for regular qc ldpc codes with variable node degree larger than 3 . in section [ sec : dmin ] , a construction algorithm of qc ldpc codes lifted from the multiple - edge protographs is proposed .",
    "it is also shown that the proposed qc ldpc codes have larger upper bounds on the minimum hamming distance than those lifted from single - edge protographs and the performance of the proposed qc ldpc codes is verified via numerical analysis .",
    "finally , the conclusions are provided in section [ sec : conclusion ] .",
    "let @xmath0 be a binary ldpc code whose parity - check matrix @xmath1 is a @xmath2 array of @xmath3 circulants or zero matrices as @xmath4 where a _ circulant _ @xmath5 is defined as a matrix whose each row is a cyclic shift of the row above it .",
    "such an ldpc code is called _ quasi - cyclic _ because applying circular shifts to the length-@xmath6 subblocks of a codeword gives another codeword .",
    "also , a bipartite graph which has @xmath1 as its incidence matrix is called the _ tanner graph _ of @xmath0 .",
    "the _ weight _ of a circulant @xmath5 is defined as the number of nonzero elements in the first column and denoted by @xmath7 .",
    "a circulant is entirely described by the positions of nonzero elements in the first column .",
    "let @xmath8 , @xmath9 , be the index of the @xmath10-st element in the first column .",
    "then , the _ shift value_(s ) of a circulant is defined as the index ( indices ) of the nonzero element(s ) in the first column .",
    "note that a shift value takes the value from @xmath11 to @xmath12 and @xmath13 is used as a shift value of a zero matrix @xmath14 .",
    "qc ldpc codes can be fully represented by binary polynomials as shown in @xcite .",
    "this polynomial representation is based on the isomorphism between @xmath3 binary circulants and the polynomial ring @xmath15/(x^z+1)$ ] .",
    "the _ polynomial parity - check matrix _",
    "@xmath16 of @xmath0 is defined as @xmath17 where @xmath18/(x^z+1)$ ] and @xmath19 is the element with the index @xmath8 in the first column of @xmath5 .",
    "we can see that the number of nonzero terms in @xmath20 , which is denoted by @xmath21 , is equal to @xmath7 and the degrees of all nonzero terms in @xmath20 are equivalent to the shift values of @xmath5 .",
    "the _ protograph _ @xcite of a qc ldpc code @xmath0 is a bipartite graph whose incidence matrix is @xmath22 $ ] , where @xmath23 .",
    "there are two kinds of nodes in the protograph , where horizontal ( check ) nodes correspond to rows in @xmath24 and vertical ( variable ) nodes correspond to columns in @xmath24 .",
    "the tanner graph of @xmath0 is constructed by copying the protograph @xmath6 times and cyclically permuting the same @xmath6 edges .",
    "such copy - and - permute operation is called _ lifting _ and the length of a subblock @xmath6 is also called the _ lift size _ of @xmath0 . if @xmath25 , there are multiple edges between the horizontal node with index @xmath26 and the vertical node with index @xmath27 in the protograph .",
    "a shift value is assigned to each edge in the protograph so that an edge is lifted by using the cyclic permutation with the assigned shift value to generate @xmath0 .",
    "note that , in this paper , the term ` protograph ' refers to both the bipartite graph and its incidence matrix based on their equivalence .",
    "necessary and sufficient conditions on the existence of cycles in the tanner graph of qc ldpc codes are derived in terms of shift values in @xcite .",
    "these conditions are only applied to single - edge protographs but they can be naturally extended to cover the case of multiple - edge protographs as in lemma [ lemma : cycle ] .",
    "let @xmath28 denote a graph with a set of vertices @xmath29 and a set of edges @xmath30 .",
    "let @xmath31 ( @xmath32 ) represent a vertex ( an edge ) in @xmath29 ( @xmath30 ) .",
    "a _ walk _ is an alternating sequence of vertices and edges , denoted by @xmath33 , where the vertices @xmath34 and @xmath35 are the endpoints of the edge @xmath36 .",
    "the _ length of a walk _ @xmath37 , denoted by @xmath38 , is defined as the number of edges in @xmath37 .",
    "a walk is _ closed _",
    "if @xmath39 and a walk is _ non - reversing _ if @xmath40 for @xmath41 .",
    "a closed walk is said to be _ tailless _ if @xmath42 . in this paper ,",
    "connected graphs are only considered and it is noted that a _ cycle _ is defined as a closed walk whose traversed vertices and edges are all distinct and the length of the shortest cycle in a graph is called the _ girth _ of the graph .",
    "cycles in the tanner graph of a qc ldpc code are closely related to tailless non - reversing closed ( tnc ) walks in its protograph .",
    "the _ shift sum _ of a walk @xmath37 in a protograph , denoted by @xmath43 , is defined as the alternating sum of shift values assigned to the edges in @xmath37 , that is , @xmath44 .",
    "lemma [ lemma : cycle ] shows necessary and sufficient conditions for a cycle of a certain length in the tanner graph of qc ldpc codes to be generated from the protographs , which can be applied to both single - edge protographs and multiple - edge protographs .",
    "its proof is directly derived from the results in @xcite and @xcite .",
    "let @xmath45 denote the set of all tnc walks of length @xmath46 in a protograph .",
    "suppose that a qc ldpc code is lifted from the protograph with the lift size @xmath6 .",
    "then , the tanner graph of this qc ldpc code has a cycle of length @xmath46 if and only if there exists a walk @xmath47 such that @xmath48 and @xmath37 does not contain any shorter tnc walks with the zero shift sum .",
    "[ lemma : cycle ]    the girth of qc ldpc codes is determined by the structure of the protograph , the lift size , and all the shift values assigned to edges .",
    "however , we can derive an upper bound on the girth of qc ldpc codes lifted from protographs without considering the lift size and the shift values based on the concept of inevitable cycles @xcite , @xcite , @xcite .",
    "an _ inevitable cycle _ induced by a protograph is defined as the cycle which always appears in the qc ldpc code lifted from the protograph regardless of the lift size and the shift values .",
    "it is well known that a qc ldpc code whose protograph has the @xmath49 ( or @xmath50 ) all - one matrix as its submatrix must have the inevitable cycles of length 12 @xcite , @xcite .",
    "in other words , the girth of this qc ldpc code is less than or equal to 12 .",
    "such an inevitable cycle of length 12 is depicted in fig .",
    "[ fig : inevitable_12 ] .",
    "also , in qc ldpc codes lifted from multiple - edge protographs , inevitable cycles can be induced . as an example ,",
    "[ fig : inevitable_10 ] shows an inevitable cycle of length 10 , which appears in qc ldpc codes lifted from protographs with double edges .",
    "we can see that for a certain subgraph structure , inevitable cycles are always generated no matter what shift values are assigned to edges .",
    "in order for qc ldpc codes to have large girth , their protographs should not contain the subgraphs which induce short inevitable cycles in the qc ldpc codes and thus it is necessary to find out all such subgraphs . from now on , the terms _ ` an inevitable - cycle - inducing ( ici ) subgraph of length @xmath51 ' _ will refer to a subgraph inducing inevitable cycles of length @xmath51 . in @xcite , ici subgraphs of length up to 12 in single- and multiple - edge protographs were fully investigated and , in @xcite , all ici subgraphs of lengths 12 to 20 in single - edge protographs were searched by a brute force method .",
    "after that , a graph - theoretical framework was provided in @xcite , which can be used to search all single- and multiple - edge ici subgraphs . in this section , we will search and provide all ici subgraphs as an extension of @xcite , @xcite , and @xcite .",
    "define @xmath52 as a set of all irreducible ici subgraphs of length @xmath51 satisfying the following conditions :    1 .",
    "a subgraph @xmath53 induces inevitable cycles of length @xmath51 in the qc ldpc code .",
    "2 .   a subgraph @xmath53 does not contain any proper subgraph which induces inevitable cycles of length less than or equal to @xmath51 .",
    "3 .   the number of rows in a subgraph @xmath53 is not larger than that of columns .",
    "4 .   from each isomorphic class in @xmath52",
    ", only one protograph must be chosen as a representative of that class .",
    "the conditions 1 ) and 2 ) guarantee that if a protograph does not have any subgraph @xmath54 for @xmath55 , the qc ldpc code appropriately lifted from this protograph has girth larger than or equal to @xmath51 .",
    "a subgraph @xmath53 takes an irreducible form because the condition 2 ) implies that if any edge is removed from @xmath24 , it can not induce inevitable cycles of length @xmath51 .",
    "conditions 3 ) and 4 ) are required to choose a unique representative for each isomorphic class of subgraphs inducing inevitable cycles of length @xmath51 .    for identifying @xmath52 , we need to investigate the relationship between inevitable cycles and tnc walks .",
    "a tnc walk @xmath37 is called _ abelian - forcing _",
    "@xcite if for each edge in @xmath37 , the number of traversals of the edge in a direction is the same as that in the opposite direction .",
    "clearly , the shift sum of abelian - forcing tnc walks is zero regardless of the shift values of their edges .",
    "an abelian - forcing tnc walk is said to be _ simple _ if it does not contain any shorter abelian - forcing tnc walks .",
    "it is obvious that inevitable cycles of qc ldpc codes are generated from simple abelian - forcing tnc ( saftnc ) walks in protographs .",
    "any abelian - forcing tnc walk contains at least two different cycles .",
    "[ lemma : two_cycles ]    consider an abelian - forcing tnc walk @xmath56 .",
    "there exists a vertex @xmath57 such that @xmath58 for some @xmath59 .",
    "also , there exists a path @xmath60 in @xmath37 such that all vertices from @xmath61 to @xmath62 are distinct . since @xmath37 is non - reversing and tailless , that path forms a cycle and thus @xmath37 contains at least one cycle .",
    "assume that @xmath37 contains only one cycle .",
    "since @xmath37 is abelian - forcing , there exists a path @xmath63 in @xmath37 such that @xmath64 for all @xmath65 .",
    "this contradicts the assumption of @xmath37 because @xmath37 can not move from a vertex to itself without reversing .",
    "therefore , @xmath37 contains at least two different cycles .    as in @xcite ,",
    "two classes of graphs are defined as illustrated in fig .",
    "[ fig : graph ] .    a @xmath66-_theta graph _ , denoted by @xmath67 , is a graph consisting of two vertices , each of degree three , that are connected to each other via three disjoint paths @xmath68 , @xmath69 , @xmath70 of the number of edges @xmath71 , @xmath72 , and @xmath73 , respectively .",
    "a @xmath74-_dumbbell graph _ , denoted by @xmath75 , is a connected graph consisting of two edge - disjoint cycles @xmath76 and @xmath77 of the number of edges @xmath78 and @xmath79 , respectively , that are connected by a path @xmath80 of the number of edges @xmath81 .",
    "connecting two different cycles always results in either a theta graph or a dumbbell graph .",
    "[ lemma : connecting_two ]    let @xmath82 and @xmath83 denote two different cycles .",
    "then , @xmath82 and @xmath83 can be connected in only three ways : the number of common vertices in @xmath82 and @xmath83 is ( i ) 0 , ( ii ) 1 , or ( iii ) larger than or equal to 2 . for the cases ( i ) and",
    "( ii ) , @xmath82 and @xmath83 form @xmath75 with @xmath84 or @xmath85 , respectively . in the case ( iii ) , @xmath67 is formed where @xmath86 , @xmath87 , and @xmath88 is the number of the common vertices .",
    "the lengths of saftnc walks in @xmath67 and @xmath75 are @xmath89 and @xmath90 , respectively .",
    "[ lemma : length ]    consider @xmath67 in fig .",
    "[ fig : theta ] .",
    "let @xmath91 and @xmath92 denote the left and the right vertices of degree three , respectively , and let @xmath68 , @xmath69 , and @xmath70 be the paths from @xmath91 to @xmath92 . also , let @xmath93 , @xmath94 , and @xmath95 denote the reverse paths of @xmath68 , @xmath69 , and @xmath70 , respectively .",
    "then we can see that an saftnc walk @xmath96 has the length @xmath89 and any other saftnc walks possibly generated in @xmath67 have the same length .",
    "similarly , consider @xmath75 in fig .",
    "[ fig : dumbbell ] .",
    "let @xmath97 and @xmath98 denote the left and the right vertices of degree three , respectively , and let @xmath76 and @xmath77 be the cycles rotating clockwise from @xmath97 and @xmath98 , respectively , and let @xmath80 be the path from @xmath97 to @xmath98 . also , let @xmath99 , @xmath100 , and @xmath101 denote the reverse paths of @xmath76 , @xmath77 , and @xmath80 , respectively .",
    "then we can see that an saftnc walk @xmath102 has the length @xmath90 and any other saftnc walks possibly generated in @xmath75 have the same length .",
    "note that if any edge is removed from @xmath67 or @xmath75 , those inherent saftnc walks disappear and thus @xmath67 and @xmath75 are of irreducible form .",
    "now , we will check whether it is sufficient to only consider theta graphs and dumbbell graphs for @xmath52 .",
    "suppose that a graph @xmath103 contains at least one of theta graphs or dumbbell graphs as its proper subgraphs .",
    "the shortest saftnc walk in @xmath103 occurs only in a theta graph or a dumbbell graph .",
    "[ lemma : connecting_three ]    let @xmath37 denote the shortest saftnc walk and assume that @xmath37 traverses all edges in @xmath103 . from lemmas [ lemma : two_cycles ] and [ lemma : connecting_two ] ,",
    "@xmath37 should contain a theta graph or a dumbbell graph .",
    "consider the following two cases : ( i ) @xmath103 has some theta graphs , ( ii ) @xmath103 does not have any theta graphs .    in the case ( i )",
    ", we first note that @xmath38 is at least twice the number of edges in @xmath103 due to the definition of abelian - forcing tnc walks .",
    "the saftnc walk only generated by a theta graph in @xmath103 is shorter than @xmath37 because the saftnc walk has the length exactly twice the number of edges in the theta graph .",
    "this contradicts the assumption that @xmath37 is the shortest one . in the case ( ii )",
    ", we note that a simple abelian - forcing tnc walk should traverse the edge not belonging to any cycles at least four times because if the walk traverses the edge twice , the walk will include two simple abelian - forcing tnc walks each of which occurs in the different side of the edge .",
    "since cycles in g are connected with each other via only one path which does not belong to any cycles , the saftnc walk only generated by a dumbbell graph in @xmath103 is shorter than @xmath37 .",
    "this contradicts the assumption that @xmath37 is the shortest one .",
    "therefore , @xmath37 occurs only in a theta graph or a dumbbell graph .    in the next theorem",
    ", @xmath52 will be identified .",
    "@xmath52 is a collection of all @xmath67 s with @xmath104 and all @xmath75 s with @xmath105 .",
    "[ thm : ici ]    from lemmas [ lemma : two_cycles ] and [ lemma : connecting_three ] , any subgraph @xmath53 should be either a theta graph or a dumbbell graph .",
    "therefore , the proof is completed by lemma [ lemma : length ] .",
    "now we can find all single- and multiple - edge ici subgraphs from @xmath67 and @xmath75 .",
    "a representative of an isomorphic class in @xmath52 can be uniquely chosen by selecting parameters satisfying the following conditions :    * @xmath106 * @xmath107 , @xmath108 , @xmath109 are all even or all odd * @xmath110 , @xmath81 * @xmath111 and @xmath112 are even .",
    "note that the second and the fourth conditions are derived because each subgraph @xmath53 is a bipartite graph .",
    ".all ici subgraphs of length up to 20 ( t : theta graph , d : dumbbell graph , s : single - edge , m : multiple - edge ) [ cols=\"^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^\",options=\"header \" , ]     now we focus on the existence problem and the construction of the regular protographs with the parameters found in theorem [ theorem : main ] .",
    "note that the proposed protographs we will construct may not be all instances with the parameters in theorem [ theorem : main ] but we provide at least one instance per each set of parameters and also note that @xmath113 , @xmath114 , @xmath115 , and @xmath116 . for given @xmath117 and @xmath118 , the matrices @xmath119 , @xmath120 , @xmath121 , and @xmath103",
    "can be constructed step by step as follows :    1 .   for constructing @xmath119 and @xmath120 at once , an incidence matrix of a combinatorial block design suitably chosen for each case in theorem [ theorem : main ]",
    "is modified such that it has the size @xmath122 , each of @xmath123 columns corresponding to @xmath119 has a disjoint pair of 1 s , the other columns have the weight 3 , all rows have the weight @xmath124 , and any column - wise pair of 1 s appears at most once to avoid the second and the third ici subgraphs of @xmath125 in @xmath126 $ ] .",
    "2 .   in @xmath103 ,",
    "1 s are placed such that @xmath127 columns have 1 s in the first row and the other columns have 1 s in the second row .",
    "3 .   for constructing @xmath121 ,",
    "1 s are placed such that the union of @xmath128 , @xmath119 , @xmath121 , and @xmath103 does not contain @xmath129 .",
    "note that the placement of 1 s in the third step is guaranteed by the bound @xmath130 in the proof of theorem [ theorem : main ] .",
    "since the conditions in theorem [ theorem : main ] are necessary ones for the existence of @xmath120 , a protograph may not exist for some parameter values .",
    "therefore , we will show that there exist protographs for all parameter values given in theorem [ theorem : main ] by providing explicit construction methods of @xmath119 and @xmath120 using various combinatorial designs as follows .    _",
    "1 ) _ @xmath131 and @xmath132 :    in this case , we have @xmath133 , @xmath134 , and @xmath135 .",
    "we need to construct @xmath136 $ ] of size @xmath137 to avoid repeated column - wise pairs of 1 s , i.e. , the subgraph @xmath138 . for this",
    ", the following steiner system can be used .",
    "a @xmath139-@xmath140 design is a pair @xmath141 , where @xmath29 is a @xmath142-set of points and @xmath119 is a collection of @xmath143-subsets ( blocks ) of @xmath29 with the property that every @xmath139-subset of @xmath29 is contained in exactly @xmath144 blocks in @xmath119 .",
    "a _ steiner system _",
    "@xmath145 is the @xmath139-@xmath140 design with @xmath146 .",
    "there exists @xmath147 only when @xmath148 .",
    "[ lemma : existence ]    the number of blocks in @xmath147 is @xmath149 .",
    "since three columns have the weight two and the other columns have the weight three in the @xmath137 matrix @xmath136 $ ] , the @xmath150 incidence matrix of @xmath151 may be modified to be used as @xmath136 $ ] by deleting one 1 from each of well - chosen three columns and adding one column of weight three . in order for such a modified matrix to be a valid @xmath136 $ ]",
    ", we should check whether three column - wise pairs of 1 s in the weight-2 columns are disjoint , all rows have the weight @xmath152 , and any column - wise pair of 1 s appears at most once .    without loss of generality ,",
    "let @xmath153 , @xmath154 , and @xmath155 , @xmath156 , be three blocks of @xmath151 corresponding to three columns containing a cycle of length 6 .",
    "three disjoint blocks @xmath157 , @xmath158 , and @xmath159 are obtained by removing @xmath97 , @xmath98 , and @xmath160 from @xmath153 , @xmath154 , and @xmath155 , respectively . inserting a block @xmath161 to this modified",
    "@xmath151 still makes every pair appear at most once .",
    "an incidence matrix of @xmath151 has the row - weight @xmath152 and the above modification clearly keeps the row - weight unchanged .",
    "therefore , we propose a construction method of @xmath136 $ ] in the case of @xmath131 and @xmath132 as follows :    1 .",
    "permute the columns of an incidence matrix of @xmath151 so that the first three columns contain a cycle of length 6 . 2 .",
    "delete a 1 on the cycle of length 6 from each of the first three columns so that the resulting three column - wise pairs of 1 s are disjoint .",
    "3 .   insert one column of weight three where three 1 s are located in the rows passed through by the above cycle of length 6 .    actually , it is easy to choose three columns which contain a cycle of length 6 because an incidence matrix of @xmath151 has many cycles of length 6 .",
    "the following lemma shows how many cycles of length 6 exist in an incidence matrix of @xmath151 .",
    "an incidence matrix of @xmath151 has @xmath162 cycles of length 6 .",
    "consider three points @xmath163 of @xmath151 .",
    "three pairs @xmath164 appear in @xmath151 in either of two ways : ( i ) one block has all the three pairs , that is , consists of @xmath165 ; or ( ii ) each pair is contained in a block which does not have the other two pairs , that is , there are three blocks @xmath166 , where @xmath167 and @xmath156 .",
    "three pairs in the case ( ii ) form a cycle of length 6 in the incidence matrix of @xmath151 .",
    "hence the number of cycles of length 6 in the incidence matrix can be enumerated by substracting the number of all blocks from the number of the ways of choosing three points in @xmath29 .",
    "this yields @xmath168",
    ".     +    fig .",
    "[ fig:11_22 ] illustrates the construction of an @xmath169 protograph with @xmath170 and @xmath171 .",
    "a cycle of length 6 is denoted by the circles in the incidence matrix of @xmath172 which has been already column - wisely permuted in fig .",
    "[ fig:11_22_const ] . to obtain @xmath136 $ ] ,",
    "three 1 s marked by dotted circles are deleted and the column with 1 s in the first , the second , and the fourth rows is inserted as the first column of @xmath120 .",
    "let @xmath173 , denote the points of @xmath172 , which also denotes the @xmath8-th row of @xmath136 $ ] .",
    "we can see that @xmath136 $ ] does not have three pairs of 1 s @xmath174 in any column and three pairs @xmath175 in @xmath119 are disjoint .",
    "the resulting @xmath169 protograph with @xmath170 and @xmath171 is shown in fig .",
    "[ fig:11_22_proto ] and we can check that @xmath52 with @xmath176 does not appear in this protograph .",
    "_ 2 ) _ @xmath177 and @xmath178 :    in this case , we have @xmath179 , @xmath180 , and @xmath181 . since @xmath119 and @xmath103 do not appear in the protograph , @xmath120 should be designed to avoid repeated column - wise pairs , where @xmath120 has constant row - weight @xmath182 and column - weight 3 . a configuration",
    "whose incidence matrix has the column - weight 3 and the size @xmath183 can be used for @xmath120 .    a _ configuration _",
    "@xmath184 is an incidence structure of @xmath142 points and @xmath185 blocks such that ( i ) each block contains @xmath143 points , ( ii ) each point lies on @xmath186 blocks , and ( iii ) two different points are contained in at most one block .",
    "if @xmath187 and hence @xmath188 , the configuration is called _ symmetric _ and denoted by @xmath31 .",
    "it is important to check the existence of the configuration with the required parameters .",
    "the following theorem shows that such configuration always exists and therefore @xmath120 can be constructed .",
    "there exists a configuration @xmath184 with @xmath189 , @xmath190 , @xmath191 , and @xmath192 for all @xmath177 and @xmath178 .",
    "[ thm : existence ]    necessary conditions for the existence of @xmath184 configuration @xcite are given as ( i ) @xmath193 and @xmath194 , ( ii ) @xmath195 , and ( iii ) @xmath196 .",
    "we can easily check that the parameters in the theorem statement satisfy these conditions .",
    "finally , the existence of such configurations is guaranteed by theorem 3.1 in @xcite , that is , there exists a configuration with @xmath191 if and only if the necessary conditions hold .",
    "now , a construction method of @xmath120 is proposed based on the results in @xcite , which uses configurations with parallel classes and resolvable configurations .",
    "a _ parallel class _ in a design is a set of blocks that partition the point set .",
    "resolvable design _ is a design whose blocks can be partitioned into parallel classes .    for @xmath177 , @xmath197 exists by lemma [ lemma : existence ] . for @xmath198 , an incidence matrix of a resolvable configuration @xmath184 with @xmath189 , @xmath199 , @xmath191 , and @xmath200",
    "can be constructed by removing a row and its incident columns in an incidence matrix of @xmath197 @xcite . for @xmath201 , there is no resolvable configuration @xmath202 but we can find a configuration @xmath202 in the same manner as illustrated in fig .",
    "[ fig:14_28_const2 ] , which contains some parallel classes from @xmath203 @xcite .",
    "since a parallel class of a configuration @xmath184 with @xmath189 , @xmath199 , @xmath191 , and @xmath200 consists of @xmath204 blocks and has all points exactly once , we obtain @xmath120 by removing one parallel class from the incidence matrices of these configurations .",
    "the construction procedure of @xmath120 for @xmath177 and @xmath178 is summarized as :    1 .",
    "construct @xmath197 .",
    "2 .   make an incidence matrix of a resolvable configuration @xmath184 with @xmath189 , @xmath199 , @xmath191 , and @xmath200 by removing a row and its incident columns in an incidence matrix of @xmath197 .",
    "3 .   remove one parallel class which consists of @xmath204 columns to obtain @xmath120 .",
    "+   +    an incidence matrix of @xmath203 is shown in fig .",
    "[ fig:14_28_const1 ] .",
    "an incidence matrix of a configuration @xmath202 in fig .",
    "[ fig:14_28_const2 ] is constructed by removing the eighth row and its incident columns in the incidence matrix of @xmath203 in fig .",
    "[ fig:14_28_const1 ] .",
    "we see that the fourth , the sixth , the thirteenth , and the sixteenth columns form a parallel class . by removing these columns ,",
    "an incidence matrix of a configuration @xmath205 is constructed , which is used as @xmath120 .",
    "the resulting @xmath206 protograph with @xmath170 and @xmath207 is shown in fig .",
    "[ fig:14_28_proto ] .",
    "_ 3 ) _ @xmath208 and @xmath209 :    _ 3.1 ) _ @xmath210 except for @xmath211 ;    in this case , we have @xmath212 and @xmath213 , and thus @xmath119 should have only one pair of 1 s . since @xmath151 exists by lemma [ lemma : existence ] , @xmath136 $ ] may be constructed by removing @xmath214 columns from a @xmath150 incidence matrix of @xmath151 and then deleting a 1 in other column . to achieve the desired row - weight @xmath215 of @xmath136 $ ] ,",
    "there should exist a submatrix consisting of @xmath216 columns satisfying that ( i ) two rows have weight 2 and the others have weight 1 and ( ii ) one column has 1 at each of these two rows of weight 2 .    as seen in the case of @xmath177 and @xmath178 , for @xmath208 and @xmath217",
    ", @xmath151 contains as a substructure a configuration @xmath184 with @xmath218 , @xmath219 , @xmath191 , and @xmath220 which has at least one parallel class consisting of @xmath214 blocks .",
    "this implies that there are @xmath214 blocks in @xmath151 , which partition all but one point .",
    "also , there always exists another block containing that point in @xmath151 .",
    "these @xmath216 blocks satisfy the above requirements ( i ) and ( ii ) for @xmath136 $ ] .",
    "the construction procedure of @xmath136 $ ] for @xmath208 , @xmath217 , and @xmath210 is summarized as :     +    1 .",
    "construct @xmath151 .",
    "2 .   select one row in an incidence matrix of @xmath151 such that if the row and its incident columns are removed from the incidence matrix , the remaining part forms an incidence matrix of a configuration @xmath184 with @xmath218 , @xmath219 , @xmath191 , and @xmath220 including at least one parallel class .",
    "3 .   find @xmath214 columns which form one parallel class in the above configuration .",
    "4 .   in the incidence matrix of @xmath151 , delete a 1 in the selected row in step 2 and remove the @xmath214 columns obtained in step 3 .",
    "move the column which had the deleted 1 in step 4 to the leftmost to obtain @xmath136 $ ] .",
    "note that the above construction method can not be applied to the case of @xmath221 and @xmath222 because the configuration @xmath223 does not have any parallel class .",
    "the case of @xmath221 and @xmath222 will be covered in the last part of this subsection .",
    "[ fig:15_35 ] illustrates the construction of a @xmath224 regular protograph with @xmath170 and @xmath225 . in an incidence matrix of @xmath203 in fig .",
    "[ fig:15_35_const ] , the fifth , the seventh , the sixteenth , and the twentieth columns partition the set of row indices except for the index of the eighth row and the fourth column has a 1 in the eighth row .",
    "thus , the 1 in the fourth column and the eighth row is deleted and the four boxed columns are removed from the incidence matrix . then the resulting column of weight 2 is moved to the leftmost and a @xmath224 protograph with @xmath170 and @xmath225 is shown in fig .",
    "[ fig:15_35_proto ] .",
    "_ 3.2 ) _ @xmath133 ;    in this case",
    ", we have @xmath134 and @xmath135 , and there are three column - wise pairs of 1 s in @xmath119 . since @xmath151 exists for @xmath208 and @xmath209 by lemma [ lemma : existence ] , the construction method for @xmath131 and @xmath132 can also be applied to this case in the same way . as an example , a @xmath226 regular",
    "protograph with @xmath170 and @xmath227 is shown in fig .",
    "[ fig:9_15 ] .",
    "regular protograph with @xmath170 and @xmath227 . ]",
    "_ 4 ) _ @xmath228 and @xmath229 :    in this case , we have @xmath210 , @xmath212 , and @xmath213 . to construct @xmath136 $ ] , start with @xmath230 which always exists by lemma [ lemma : existence ] .",
    "similar to the case of @xmath177 and @xmath178 , a configuration @xmath184 with @xmath231 , @xmath232 , @xmath191 , and @xmath233 can be constructed by removing a row and its incident columns in an incidence matrix of @xmath230 . since any @xmath152 blocks sharing a common point partition",
    "all points except the common point and another point in the configuration , by removing any row and its incident columns in an incidence matrix of the configuration , a @xmath234 matrix with @xmath235 rows of weight @xmath215 and a row of weight @xmath152 is obtained . removing a 1 in the row of weight @xmath152 results in a matrix which has the desired row - weight @xmath215 and exactly one column of weight 2 .",
    "clearly , this matrix can be used as @xmath136 $ ] .",
    "the construction procedure of @xmath136 $ ] for @xmath228 and @xmath229 is summarized as :    1 .",
    "construct a configuration @xmath184 with @xmath231 , @xmath232 , @xmath191 , and @xmath233 from @xmath230 similar to the case of @xmath177 and @xmath178 .",
    "2 .   obtain a matrix of size @xmath234 by removing a row and its incident columns .",
    "3 .   delete a 1 in the row of weight @xmath152 and move the column having the deleted 1 to the leftmost to obtain @xmath136 $ ] .",
    "+    an incidence matrix of a configuration @xmath202 is given in fig .",
    "[ fig:14_28_const2 ] . by removing the first row and its incident columns",
    ", we obtain an @xmath236 matrix shown in fig .",
    "[ fig:13_26_const1 ] , where the seventh row has the weight 5 and the others have the weight 4 .",
    "then the 1 in the seventh row is deleted from the second column and the second column is moved to the leftmost .",
    "the resulting @xmath237 protograph with @xmath170 and @xmath238 is shown in fig .",
    "[ fig:13_26_proto ] .",
    "_ 5 ) _ @xmath239 and @xmath240 :    _ 5.1 ) _ @xmath241 ;    in this case",
    ", we have @xmath180 and @xmath181 .",
    "similar to the case of @xmath177 and @xmath178 , an incidence matrix of a configuration @xmath184 with @xmath189 , @xmath242 , @xmath191 , and @xmath192 can be used as @xmath120 .",
    "such configuration can be constructed by using difference triangle set ( dts ) .",
    "an @xmath243-_difference triangle set _ , or @xmath243-dts , is a set @xmath244 , where for @xmath245 , @xmath246 with @xmath247 an integer satisfying @xmath248 , and the differences @xmath249 over the integers for all @xmath8 , @xmath26 , @xmath27 , @xmath245 , @xmath250 , are all distinct and nonzero .",
    "if there is an @xmath251-dts , a configuration @xmath184 for @xmath252 , @xmath253 , @xmath191 , and @xmath254 can be constructed from this dts .",
    "[ theorem : dts ]    for @xmath239 and @xmath240 , a configuration @xmath184 with @xmath189 , @xmath242 , @xmath191 , and @xmath192 can be constructed from @xmath255-dts by theorem [ theorem : dts ] . according to @xcite ,",
    "the construction procedure of @xmath120 is provided as :    1 .",
    "construct a @xmath255-dts with @xmath256 , @xmath257 .",
    "2 .   for each @xmath258 , @xmath259 , construct a column of length @xmath260 denoted by @xmath261 , which has 1 at the @xmath262-st , the @xmath263-st , and the @xmath264-st rows and 0 at other rows . 3 .   for each @xmath8 , construct a @xmath265 matrix whose @xmath26-th column , @xmath266 , is obtained by cyclically shifting @xmath261 downward @xmath267 times .",
    "concatenate @xmath268 matrices in step 3 to obtain @xmath120 .",
    "note that we can easily construct a @xmath255-dts from the lists of dts in @xcite for @xmath239 and @xmath240 .",
    "[ fig:12_20 ] shows a @xmath269 regular protograph with @xmath170 and @xmath270 constructed from @xmath271-dts .",
    "regular protograph with @xmath170 and @xmath270 . ]",
    "_ 5.2 ) _ @xmath272 ;    in this case , we have @xmath273 and @xmath274 .",
    "pairwise balanced designs ( pbds ) can be used to construct @xmath136 $ ] .",
    "let @xmath275 be a subset of positive integers and let @xmath144 be a positive integer .",
    "pairwise balanced design _ of order @xmath142 with block sizes from @xmath275 , denoted by pbd@xmath276 , is a pair @xmath277 , where @xmath278 is a point set of cardinality @xmath142 and @xmath279 is a family of blocks of @xmath278 which satisfy that ( i ) if @xmath280 , then @xmath281 and ( ii ) every pair of distinct elements of @xmath278 occurs in exactly @xmath144 blocks of @xmath279",
    ".    let pbd@xmath282 denote a pbd@xmath276 with @xmath146 and use pbd@xmath283 to denote a pbd containing only one block of size @xmath143 in the pbd , where @xmath284 is a positive integer . for @xmath239 , it was shown in @xcite that pbd@xmath285 always exists .",
    "note that five rows sharing 1 with the column of weight 5 have the weight @xmath286 and the other rows have the weight @xmath287 in a @xmath288 incidence matrix of pbd@xmath285 .    removing a row of weight @xmath286 and its incident columns except the weight-5 column from an incidence matrix of pbd@xmath285",
    "makes a @xmath289 matrix of constant row - weight @xmath286 . [",
    "theorem : pbd_matrix ]    without loss of generality , assume that the first column has 1 s at the first five rows in an incidence matrix of pbd@xmath285 .",
    "consider the @xmath290 submatrix which consists of the columns incident to the first row .",
    "except the first row , each row of this submatrix has only one 1 because every column - wise pair of 1 s should appear exactly once in an incidence matrix of this pbd .",
    "thus , the @xmath291 submatrix obtained by removing the first row and the first column from the @xmath290 submatrix does not have 1 in the first four rows and each of the other rows has only one 1 . after removing the first row and the @xmath291 submatrix from the incidence matrix of pbd@xmath285 , the remainder forms the @xmath289 matrix of row - weight @xmath286 .",
    "the matrix constructed in theorem [ theorem : pbd_matrix ] can not be directly used as @xmath136 $ ] due to the improper number of columns and the weight-4 column , but it can be easily modified to meet the requirements for @xmath136 $ ] by splitting the weight-4 column into two weight-2 columns",
    ". the construction procedure of @xmath136 $ ] for @xmath239 , @xmath240 , and @xmath272 is summarized as :    1 .",
    "construct pbd@xmath285 .",
    "2 .   remove a row of weight @xmath286 and its incident columns except the weight-5 column from an incidence matrix of pbd@xmath285 .",
    "3 .   split the weight-4 column into two weight-2 columns and move them to the leftmost to obtain @xmath136 $ ] .",
    "+    the construction process for a @xmath292 regular protograph with @xmath170 and @xmath270 is illustrated in fig .",
    "[ fig:12_24 ] .",
    "an incidence matrix of pbd@xmath293 is shown in fig .",
    "[ fig:12_24_const1 ] .",
    "we can see that the submatrix consisting of the columns incident to the first row has exactly one 1 in each row except the first row . by removing the first row and the second , the third , and the fourth columns and splitting the weight-4 column into two weight-2 column , @xmath136 $ ]",
    "is obtained .",
    "the resulting @xmath292 regular protograph with @xmath170 and @xmath270 is shown in fig .",
    "[ fig:12_24_proto ] .",
    "@xmath221 , @xmath222 and @xmath294 , @xmath295 :    there only remain two cases to provide the construction methods of all regular protographs in theorem [ theorem : main ] .",
    "when @xmath221 and @xmath222 , we have @xmath296 and @xmath297 , and @xmath136 $ ] is a @xmath298 matrix with row - weight 2 .",
    "although the construction method of @xmath136 $ ] for @xmath208 and @xmath210 can not be directly used , we can construct @xmath136 $ ] from an incidence matrix of @xmath299 in fig .",
    "[ fig:9_12_const ] . since any two columns of an incidence matrix of @xmath299 have a common 1 , removing the first two columns from an incidence matrix results in a @xmath298 matrix where one row has the weight 1 , four rows have the weight 2 , and the remaining two rows have the weight 3 as shown in fig .",
    "[ fig:9_12_const ] . to obtain @xmath136 $ ] ,",
    "first delete 1 from each of two rows of weight 3 in the @xmath298 matrix such that two deleted 1 s do not belong to the same column and the columns containing two deleted 1 s do not have 1 in the row of weight 1 .",
    "these two deleted 1 s are marked by circle in fig .",
    "[ fig:9_12_const ] .",
    "then , by replacing a 0 at the row of weight 1 and one of the columns containing the deleted 1 s with a 1 , @xmath136 $ ] is constructed and the resulting @xmath300 regular protograph is shown in fig .",
    "[ fig:9_12_proto ] .",
    "when @xmath294 and @xmath295 , we have @xmath301 and @xmath302 , and @xmath119 has disjoint four column - wise pairs of 1 s . an incidence matrix of a symmetric configuration @xmath303 can be used as @xmath120 , which does not have disjoint four column - wise pairs of 1 s .",
    "a @xmath304 regular protographs with @xmath170 and @xmath305 is shown in fig .",
    "[ fig:10_20 ] .",
    "+   +     regular protograph with @xmath170 and @xmath305 . ]",
    "regular protographs which do not induce inevitable cycles of length less than 14 for the case of @xmath170 and @xmath306 and the case of @xmath307 also have the same structure in fig .",
    "[ fig : structure ] and the construction method in the previous subsection can be similarly applied to these cases .",
    "however , we do not elaborate on deriving necessary conditions like theorem [ theorem : main ] and providing specific construction methods for all cases because they should be done case by case and are very lengthy . instead ,",
    "for given @xmath117 , @xmath308 , @xmath309 , @xmath118 , and @xmath310 , we provide a general framework for checking the constructibility and constructing each submatrix .",
    "first , some basic conditions on the parameters @xmath117 , @xmath308 , @xmath309 , @xmath118 , and @xmath310 are provided to determine whether a regular protograph with the given parameters can be potentially constructed . in @xmath121 ,",
    "the number of all possible column - wise pairs of 1 s should be larger than or equal to the number of actual column - wise pairs of 1 s , that is , @xmath311 .",
    "also , the last @xmath312 rows must have @xmath313 1 s and the matrix @xmath121 must have @xmath314 1 s , and thus we have @xmath315 .",
    "second , consider constructing @xmath136 $ ] of size @xmath316 .",
    "the matrix @xmath136 $ ] has the constant row - weight @xmath317 and does not have any repeated column - wise pairs of 1 s to avoid the second and the third ici subgraphs of @xmath125 in @xmath126 $ ] , and @xmath120 has the constant column - weight @xmath309 . the matrix @xmath136 $ ] can be constructed from an incidence matrix of block designs such as @xmath318 , configurations @xmath184 , pbd@xmath282 , group divisible designs ( gdd ) @xcite and so on because they do not have any repeated column - wise pairs of 1 s . if an incidence matrix of an @xmath318 or a configuration @xmath184 has the desired size of @xmath136 $ ] , it can be directly used as @xmath136 $ ] where there is actually no @xmath119 .",
    "otherwise , an incidence matrix of some block designs can be used as @xmath136 $ ] by doing a simple modification .",
    "note that an incidence matrix of pbds or gdds may not have a constant row - weight while an incidence matrix of @xmath318 or configurations @xmath184 is always regular .    to obtain @xmath136 $ ] from an incidence matrix of different size",
    ", we may use the following modification schemes :    1 .   remove some rows .",
    "remove a row and some columns incident to the row .",
    "3 .   remove some parallel classes .",
    "4 .   delete some 1 s and insert some columns not to have any repeated column - wise pairs of 1 s .",
    "5 .   insert some parallel classes not to have any repeated column - wise pairs of 1 s .    by properly applying these modification schemes ,",
    "an incidence matrix is changed into @xmath136 $ ] having no repeated column - wise pairs of 1 s and proper size .",
    "moreover , schemes 1 ) , 3 ) , and 5 ) change all row - weights by the same amount and schemes 2 ) and 4 ) flexibly control row - weights according to how to select columns and 1 s .",
    "therefore , we can freely use the above modification schemes until the desired size and the constant row - weight @xmath124 of @xmath136 $ ] are achieved .    for given @xmath117 , @xmath308 , @xmath309 , @xmath118 , and @xmath310 , it may be possible for @xmath136 $ ] to take various forms , which implies that each @xmath119 may have a different number of columns and a different distribution of 1 s .",
    "therefore , some bounds on @xmath123 , or the number of columns in @xmath119 , need to be derived to construct @xmath136 $ ] .",
    "since the number of 1 s in @xmath103 is @xmath319 and each column in @xmath103 can have weight from @xmath320 to @xmath309 , we have @xmath321 which yields @xmath322 .",
    "therefore , when @xmath136 $ ] is constructed by selecting and modifying an incidence matrix of a block design , the above bound on @xmath123 must be considered .",
    "lastly , consider constructing @xmath121 of size @xmath323 and @xmath103 of size @xmath324 .",
    "column - weights of @xmath103 are already determined if @xmath119 is designed and 1 s in @xmath103 should be located to avoid the second and the third ici subgraphs of @xmath125 in the union of @xmath128 , @xmath119 , and @xmath103 .",
    "then , for a given @xmath103 , @xmath313 1 s in @xmath121 should be located such that the union of @xmath128 , @xmath121 , and @xmath103 does not contain the second and the third ici subgraphs of @xmath125 , and the union of @xmath128 , @xmath119 , @xmath121 , and @xmath103 does not contain @xmath129 while enforcing row - weights of @xmath325 $ ] to be @xmath118 and column - weights of @xmath121 to be @xmath326 .    for given parameters @xmath117 , @xmath308 , @xmath309 , @xmath118 , and @xmath310 , a general procedure for constructing regular protographs which avoid inevitable cycles of length less than 14",
    "is summarized as :    1 .",
    "check if the parameters satisfy the conditions @xmath311 and @xmath315 . if the conditions are not satisfied , stop the procedure .",
    "2 .   obtain @xmath123 satisfying @xmath322 .",
    "3 .   construct @xmath136 $ ] using @xmath123 obtained in step 2 from an incidence matrix of a proper block design .",
    "construct @xmath325 $ ] satisfying the weight constraints such that the union of @xmath128 , @xmath119 , @xmath121 , and @xmath103 does not have @xmath129 and @xmath125 as its subgraph .    consider the construction of a @xmath327 regular protograph with @xmath170 , @xmath295 , and @xmath207 .",
    "the given parameters satisfy the conditions @xmath311 and @xmath315 .",
    "the @xmath328 matrix @xmath136 $ ] has the row - weight 4 and @xmath329 .",
    "an incidence matrix of a symmetric configuration @xmath330 is chosen for the construction of @xmath136 $ ] , which is constructed by removing two parallel classes from a @xmath269 incidence matrix of the configuration @xmath202 in fig .",
    "[ fig:14_28_const2 ] . by inserting a parallel class consisting of six weight-2 columns to an incidence matrix of the symmetric configuration @xmath330 ,",
    "@xmath136 $ ] with @xmath331 is constructed , where any repeated column - wise pairs of 1 s do not appear . since the column - weight of @xmath119 is 2 , the @xmath332 matrix @xmath103 should have the column - weight 1 .",
    "let each row of @xmath103 have two 1 s",
    ". then @xmath121 should have the column - weight 1 and the row - weight 4 , and the 1 s in @xmath121 can be properly distributed so that @xmath129 and @xmath125 do not appear in the union of @xmath128 , @xmath119 , @xmath121 , and @xmath103 . the resulting @xmath327 regular protograph with @xmath170 , @xmath295 , and @xmath207 is shown in fig . [ fig:15_30 ] .",
    "regular protograph with @xmath170 and @xmath207 . ]",
    "consider the construction of a @xmath333 regular protograph with @xmath334 , @xmath335 , and @xmath336 .",
    "we can check that those parameters satisfy two necessary conditions for the construction and @xmath337 . for constructing a @xmath338",
    "@xmath136 $ ] , an incidence matrix of a symmetric configuration @xmath339 is considered .",
    "we can find a parallel class consisting of seven weight-3 columns such that if those seven columns are inserted to the incidence matrix , any repeated column - wise pairs of 1 s still do not appear .",
    "thus , we obtain @xmath136 $ ] with @xmath340",
    ". the @xmath341 matrix @xmath103 should have the column - weight 1 and its row - weight can be set to 1 . the matrix @xmath121 has the size @xmath342 , the column - weight 2 , and the row - weight 6 . due to @xmath343 , @xmath121 can be constructed not to have any repeated column - wise pairs of 1 s .",
    "also , we can make @xmath121 to avoid @xmath129 in the union of @xmath128 , @xmath119 , @xmath121 , and @xmath103 .",
    "the resulting @xmath333 regular protograph with @xmath334 , @xmath344 , and @xmath336 is shown in fig .",
    "[ fig:28_49 ] .",
    "to verify the effectiveness of the proposed protographs , qc ldpc codes will be constructed by determining the lift size and assigning an appropriate shift value to each edge of the protographs . given a protograph , it is not easy to find all shift values even for a moderate lift size such that the girth of the qc ldpc code is the same as the length of the shortest inevitable cycle .",
    "@xcite proposed a search algorithm for small lift size and a shift value assignment scheme to achieve the target girth based on greedy search .",
    "this algorithm is originally designed for single - edge protographs . however , by a slight modification , this algorithm can be extended to the case of multiple - edge protographs .",
    "consider a @xmath2 protograph @xmath24 with the column - weight @xmath309 , the row - weight @xmath118 , and the lift size @xmath6 .",
    "each column of @xmath24 has @xmath309 shift values and let @xmath345 , @xmath346 , denote the @xmath8-th shift value of the @xmath27-th column in @xmath24 .",
    "our goal is to determine all shift values @xmath345 and search the minimum @xmath6 when a protograph and a target girth @xmath347 of qc ldpc codes are given .",
    "let @xmath348 denote the set of all tnc walks of length @xmath46 in @xmath24 .",
    "then , by lemma [ lemma : cycle ] , the condition for achieving the target girth @xmath347 of qc ldpc codes is that for any @xmath349 , @xmath350 , the shift sum @xmath43 satisfies @xmath351 .",
    "however , it requires too much computational complexity to find @xmath345 and the minimum @xmath6 satisfying the above condition by considering all search space of @xmath345 and @xmath6 .    in order to reduce the search space of shift values ,",
    "let @xmath352 as in @xcite , where @xmath353 is the @xmath10-st element of the set @xmath354 which is constructed from @xmath355 by adding @xmath353 , @xmath356 , in order such that @xmath357}$ ] .",
    "thus we only need to find @xmath308 values of @xmath358 instead of @xmath359 values of @xmath345 .",
    "moreover , for further reduction of computational complexity , @xmath358 is determined in a greedy manner , that is , shift values of the @xmath27-th column in @xmath24 are determined by considering only the first @xmath27 columns in @xmath24 . for this , let @xmath360 denote the set of all tnc walks of length @xmath46 in the matrix consisting of the first @xmath27 columns of @xmath24 .    for a given target girth @xmath347 , if @xmath345 is already determined such that @xmath361 for any @xmath349 , @xmath350 , the minimum @xmath6 , denoted by @xmath362 , can be sub - optimally determined as @xmath363 . note that for any @xmath364 , the target girth is achieved .    an algorithm to construct qc ldpc codes of moderate length by determining all shift values and searching the minimum lift size , called algorithm 1 ,",
    "is provided as follows .",
    "if the target girth @xmath347 is set to the length of the shortest inevitable cycle , we can generate qc ldpc codes of moderate length with the maximum achievable girth from the proposed protographs .",
    "note that the computational complexity of algorithm 1 is the same for both single - edge protographs and multiple - edge protographs under the same parameter values .",
    "four qc ldpc codes are generated by using algorithm 1 . from the @xmath226 protograph in fig .",
    "[ fig:9_15 ] , a @xmath365 qc ldpc code with girth 14 , denoted by proposed code 1 , is constructed , which has @xmath366 and @xmath367 @xmath368 . from the @xmath300 protograph in fig .",
    "[ fig:9_12_proto ] , a @xmath369 qc ldpc code with girth 14 , denoted by proposed code 2 , is constructed , which has @xmath370 and @xmath371 @xmath372 . from the @xmath373 protograph in fig .",
    "[ fig:6_12 ] , a @xmath374 qc ldpc code with girth 12 , denoted by proposed code 3 , is constructed , which has @xmath375 and @xmath376 . from the @xmath377 protograph in fig .",
    "[ fig:6_8 ] , a @xmath378 qc ldpc code with girth 12 , denoted by proposed code 4 , is constructed , which has @xmath379 and @xmath380 .",
    "smarandache and vontobel @xcite derived two upper bounds on the minimum hamming distance of qc ldpc codes .",
    "while one bound needs whole code specifications , e.g. , the structure of the protograph , the lift size , and the shift values , the other bound only requires knowledge of the protograph .",
    "these two upper bounds are shown in theorems [ theorem : dmin_1 ] and [ theorem : dmin ] , and they are directly derived by finding some low - weight codewords as in lemma [ lemma : dmin ] .",
    "let @xmath381 denote the submatrix of @xmath382 that contains only the columns of @xmath382 whose index appears in the set @xmath383 .",
    "the permanent of an @xmath384 matrix @xmath385 $ ] over some commutative ring is defined to be @xmath386 where the summation is over all @xmath387 permutations @xmath388 on the set @xmath389 .",
    "let @xmath0 be a binary qc ldpc code defined by a @xmath2 polynomial matrix @xmath16 with the lift size @xmath6 .",
    "let @xmath383 be an arbitrary size-@xmath390 subset of @xmath391 and let @xmath392 $ ] , where @xmath393 is a polynomial over @xmath394 defined by @xmath395 then @xmath396 is a codeword of @xmath0 .",
    "[ lemma : dmin ]    let @xmath397 be a binary qc ldpc code defined by a @xmath2 polynomial matrix @xmath16 with the lift size @xmath6 .",
    "then the minimum hamming distance of @xmath0 is upper bounded as @xmath398 where the operator @xmath399 gives back the minimum value of all nonzero entries in a list of values .",
    "[ theorem : dmin_1 ]    let @xmath397 be a binary qc ldpc code lifted from a @xmath2 protograph @xmath24 . then the minimum hamming distance of @xmath0 is upper bounded as @xmath400 [ theorem : dmin ]    theorems [ theorem : dmin_1 ] and [ theorem : dmin ] imply that for given @xmath117 , @xmath308 , @xmath309 , and @xmath118 , these two upper bounds on the minimum hamming distance of qc ldpc codes possibly increase as the number of multiple edges in the protograph increases , which is supported by examples for some regular protographs in @xcite .",
    "note that the bound in ( [ eq : dmin2 ] ) is not tighter than the bound in ( [ eq : dmin1 ] ) , but the former approaches the latter for a large @xmath6 and proper shift values .",
    "consider the ( 15000,6000 ) proposed code 1 .",
    "the upper bounds in ( [ eq : dmin1 ] ) and ( [ eq : dmin2 ] ) for this code are 246 and 256 , respectively . for comparison ,",
    "a qc ldpc code with the same parameter values is generated from the @xmath226 single - edge regular protograph in fig .",
    "[ fig:9_15_dmin ] by using algorithm 1 .",
    "this single - edge protograph is constructed by attaching the last three columns to an incidence matrix of @xmath172 to avoid inevitable cycles of length less than 14 .",
    "the upper bounds in ( [ eq : dmin1 ] ) and ( [ eq : dmin2 ] ) for this code are 218 and 230 , respectively .",
    "consider the ( 3600,900 ) proposed code 2 .",
    "the upper bounds in ( [ eq : dmin1 ] ) and ( [ eq : dmin2 ] ) for this code are 362 and 416 , respectively . for comparison ,",
    "a qc ldpc code with the same parameter values is generated from the @xmath300 single - edge regular protograph in fig .",
    "[ fig:9_12_dmin ] by using algorithm 1 . by using the construction method in @xcite , this single - edge protograph",
    "is constructed by concatenating an incidence matrix of a @xmath401 configuration and cyclically row - shifted matrix of it .",
    "the upper bounds in ( [ eq : dmin1 ] ) and ( [ eq : dmin2 ] ) for this code are 314 and 384 , respectively .",
    "consider the ( 7200,3600 ) proposed code 3 .",
    "the upper bounds in ( [ eq : dmin1 ] ) and ( [ eq : dmin2 ] ) for this code are all 68 . for comparison ,",
    "a qc ldpc code with the same parameter values is generated from the @xmath373 single - edge regular protograph in fig .",
    "[ fig:6_12_dmin ] by using algorithm 1 .",
    "this single - edge protograph is the best one of randomly constructed protographs in the sense of upper bounds on the minimum hamming distance .",
    "the upper bounds in ( [ eq : dmin1 ] ) and ( [ eq : dmin2 ] ) for this code are all 56",
    ".    finally , consider the ( 800,200 ) proposed code 4 .",
    "the upper bounds in ( [ eq : dmin1 ] ) and ( [ eq : dmin2 ] ) for this code are 130 and 174 , respectively . for comparison ,",
    "a qc ldpc code with the same parameter values is generated from the @xmath377 single - edge regular protograph in fig .",
    "[ fig:6_8_dmin ] by using algorithm 1 .",
    "this single - edge protograph is the best one of randomly constructed protographs in the sense of upper bounds on the minimum hamming distance .",
    "the upper bounds in ( [ eq : dmin1 ] ) and ( [ eq : dmin2 ] ) for this code are 98 and 110 , respectively .",
    "the above results clearly show that two upper bounds ( [ eq : dmin1 ] ) and ( [ eq : dmin2 ] ) on the minimum hamming distance of qc ldpc codes are affected in a positive way by using double edges in the protographs . in general , a multiple - edge protograph is more difficult to design than a single - edge protograph under the condition that they induce the shortest inevitable cycles of the same length .",
    "however , if multiple - edge protographs are once constructed , qc ldpc codes lifted from them can potentially give a larger upper bound on the minimum hamming distance than those lifted from single - edge protographs .",
    "performance of four proposed qc ldpc codes , that is , proposed code 1 to 4 is compared with those of the progressive edge - growth ldpc codes , called peg 1 to 4 @xcite and the qc ldpc codes , called peg qc 1 to 4 @xcite with the same code length , code rate , and column - weight .",
    "peg ldpc codes and peg qc ldpc codes are well known to have good error correcting performance comparable to those of random ldpc codes .",
    "note that the girths of such @xmath365 , @xmath369 , @xmath374 , and @xmath378 peg ldpc codes and peg qc ldpc codes are 12 , 12 , 12 , and 10 , respectively , and these codes are obtained by the peg algorithm to have as large girth as possible .",
    "simulation is carried out through the binary input additive white gaussian noise ( biawgn ) channel . the belief propagation ( bp ) decoding algoirthm is used and the number of maximum iterations is set to 100 .",
    "the frame error rate ( fer ) performances of all the above ldpc codes are compared in fig .",
    "[ fig : fer ] and we can see that the proposed qc ldpc codes show as good error correcting performance as the peg ldpc codes and the peg qc ldpc codes . note that the bit error rate ( ber ) curves behave qualitatively the same as the fer curves and they are omitted in this paper .",
    "the subgraphs of protographs , which cause inevitable cycles in the qc ldpc codes , are fully investigated in allowance with multiple edges through the graph - theoretic approach . for regular qc ldpc codes with girth larger than or equal to 12 ,",
    "we propose a systematic construction method of protographs which avoid inevitable cycles of length less than 12 by using balanced ternary designs . for regular qc ldpc codes with girth larger than or equal to 14",
    ", we provide construction methods of all @xmath2 protographs with column - weight three and the number of double edges @xmath260 by using various block designs .",
    "these construction methods can be extended to construct regular protographs with smaller number of double edges and with column - weight larger than three .",
    "also , a construction algorithm of qc ldpc codes from the proposed protographs is provided based on the work in @xcite . to check the validity of the proposed qc ldpc codes ,",
    "we show that the proposed qc ldpc codes have larger upper bounds on the minimum hamming distance than the qc ldpc codes lifted from single - edge protographs .",
    "finally , the error correcting performance of the proposed qc ldpc codes is compared with those of peg ldpc codes and peg qc ldpc codes via numerical analysis .",
    "r.  g.  gallager , _ low - density parity - check codes_. cambridge , ma : mit press , 1963 . j.  thorpe ,  low - density parity - check ( ldpc ) codes constructed from protograph , \" _ ipn progress report 42 - 154 , jpl _ , aug . 2003 .",
    "o.  milenkovic , n.  kashyap , and d.  leyba , `` shortened array codes of large girth , '' _ ieee trans .",
    "inf . theory _ ,",
    "52 , no . 8 , pp . 3707 - 3722 , aug .",
    "y.  wang , j.  s.  yedidia , and s.  c.  draper , `` construction of high - girth qc - ldpc codes , '' in _ proc .",
    "turbo codes and related topics _ , sep .",
    "2008 , pp .",
    "180 - 185 .",
    "j.  huang , l.  liu , w.  zhou , and s.  zhou , `` large - girth nonbinary qc - ldpc codes of various lengths , '' _ ieee trans .",
    "3436 - 3447 , dec . 2010 .",
    "i.  e.  bocharova , f.  hug , r.  johannesson , b.  d.  kudryashov , and r.  v.  satyukov , `` searching for voltage graph - based ldpc tailbiting codes with large girth , '' _ ieee trans .",
    "inf . theory _ ,",
    "2265 - 2279 , apr .",
    "m.  e.  osullivan , `` algebraic construction of sparse matrices with large girth , '' _ ieee trans .",
    "inf . theory _ ,",
    "718 - 727 , feb . 2006 .",
    "s.  kim , j .- s .",
    "no , h.  chung , and d .- j .",
    "shin , `` quasi - cyclic low - density parity - check codes with girth larger than 12 , '' _ ieee trans .",
    "inf . theory _",
    "8 , pp . 2885 - 2891 , aug .",
    "m.  esmaeili and m.  gholami , `` structured quasi - cyclic ldpc codes with girth 18 and column - weight @xmath402 , '' _ int .",
    "j. electron .",
    "( aeu ) _ , vol .",
    "202 - 217 , mar .",
    "s.  j.  johnson and s.  r.  weller , `` quasi - cyclic ldpc codes from difference families , '' in _ proc .",
    "3rd ausctw _ , canberra , australia , feb .",
    "b.  ammar , b.  honary , y.  kou , j.  xu , and s.  lin , `` construction of low - density parity - check codes based on balanced incomplete block designs , '' _ ieee trans .",
    "inf . theory _ ,",
    "50 , no . 6 , pp .",
    "1257 - 1268 , jun . 2004 .",
    "b.  vasic and o.  milenkovic , `` combinatorial constructions of low - density parity - check codes for iterative decoding , '' _ ieee trans .",
    "inf . theory _",
    "50 , no . 6 , pp . 1156 - 1176 , jun .",
    "2004 . c.  a.  kelley and j.  l.  walker , `` ldpc codes from voltage graphs , '' in _ proc .",
    "inf . theory _ ,",
    "toronto , canada , jul .",
    "2008 , pp .",
    "792 - 796 .",
    "c.  a.  kelley and d.  sridhara , `` pseudocodewords of tanner graphs , '' _ ieee trans .",
    "inf . theory _",
    "4013 - 4038 , nov .",
    "r.  koetter and p.  o.  vontobel , `` graph - covers and iterative decoding of finite length codes , '' in _ proc .",
    "turbo codes and related topics _ , brest , france , sep .",
    "2003 , pp .",
    "75 - 82 .",
    "r.  smarandache and p.  o.  vontobel , `` quasi - cyclic ldpc codes : influence of proto- and tanner - graph structure on minimum hamming distance upper bounds , '' _ ieee trans .",
    "inf . theory _",
    "585 - 607 , feb . 2012 .    c.  j.  colbourn and j.  h.  dinitz , _ the crc handbook of combinatorial designs_. boca raton , fl : crc , 1996 .",
    "e.  j.  billington and p.  robinson , `` a list of balanced ternary designs with @xmath403 , and some necessary existence conditions , '' _ ars combin .",
    "235 - 258 , 1983 .",
    "h.  gropp , `` nonsymmetric configurations with natural index , '' _ discrete math .",
    "87 - 98 , 1994 .",
    "[ online ] .",
    "available : http://www.research.ibm.com/people/s/shearer/dtsopt.html",
    "s.  kucukcifci , `` the intersection problem for pbd@xmath404s , '' _ discrete math .",
    "_ , vol . 308 , pp . 382 - 385 , 2008 .",
    "hu , e.  eleftheriou , and d.  m.  arnold , `` regular and irregular progressive edge - growth tanner graphs , '' _ ieee trans .",
    "inf . theory _",
    "386 - 398 , jan . 2005 .",
    "z.  li and b.  v.  k.  v.  kumar , `` a class of good quasi - cyclic low - density parity check codes based on progressive edge growth graph , '' in _ proc .",
    "38th asilomar conf .",
    "2004 , pp .",
    "1990 - 1994 ."
  ],
  "abstract_text": [
    "<S> there have been lots of efforts on the construction of quasi - cyclic ( qc ) low - density parity - check ( ldpc ) codes with large girth . </S>",
    "<S> however , most of them are focused on protographs with single edges and little research has been done for the construction of qc ldpc codes lifted from protographs with multiple edges . compared to single - edge protographs , multiple - edge protographs have benefits such that qc ldpc codes lifted from them can potentially have larger minimum hamming distance . in this paper , all subgraph patterns of multiple - edge protographs , which prevent qc </S>",
    "<S> ldpc codes from having large girth by inducing inevitable cycles , are fully investigated based on graph - theoretic approach . by using combinatorial designs , a systematic construction method of multiple - edge protographs </S>",
    "<S> is proposed for regular qc ldpc codes with girth at least 12 and also other method is proposed for regular qc ldpc codes with girth at least 14 . </S>",
    "<S> a construction algorithm of qc ldpc codes by lifting multiple - edge protographs is proposed and it is shown that the resulting qc ldpc codes have larger upper bounds on the minimum hamming distance than those lifted from single - edge protographs . </S>",
    "<S> simulation results are provided to compare the performance of the proposed qc ldpc codes , the progressive edge - growth ( peg ) ldpc codes , and the peg qc ldpc codes .    </S>",
    "<S> design theory , girth , inevitable cycle , minimum hamming distance , multiple - edge protograph , quasi - cyclic ( qc ) low - density parity - check ( ldpc ) codes . </S>"
  ]
}
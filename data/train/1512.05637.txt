{
  "article_text": [
    "interfacial dynamics has great importance in modeling of multi phase flow in material sciences , and binary fluids flow movement .",
    "we consider the allen - cahn equation with advection as a model of diffuse interface for two phase flows @xcite @xmath0\\ ] ] under homogeneous neumann boundary conditions , where @xmath1 denotes the linear operator related to the diffusion and advection parts of the system , i.e. @xmath2 . the term @xmath3 characterizes the cubic bistable nonlinearity with the double  well potential @xmath4 of the two phases , and @xmath5 describes the surface tension .",
    "we consider a prescribed fixed velocity field @xmath6 . in",
    "coupled incompressible fluid mechanics and diffusive interface models , the velocity field satisfies the navier ",
    "stokes equations @xcite , and therefore is divergence free , i.e. @xmath7 .",
    "we consider in this work the non - divergence - free velocity fields which are either expanding ( @xmath8 ) or sheering ( @xmath9 ) as in @xcite .",
    "the advective allen - cahn equation describes the diffuse interface dynamics associated with surface energies , and has two different time scales ; the small surface tension , and the convection time scale .",
    "both time scales cause computational stiffness @xcite .",
    "the dynamics of surface tension in two - phase fluids are studied numerically by the level  set algorithm method and the diffuse interface method @xcite .    in this work",
    "we apply the adaptive method of time layers ( amot ) @xcite , or adaptive rothe method , where the advective allen - cahn equation is discretized first in time then in space , in contrast to the usual method of lines approach .",
    "hereby spatial discretization is considered as a perturbation of the time integration .",
    "amot was applied to linear and nonlinear partial differential equations using linearly implicit time integrators in several papers @xcite .",
    "we have chosen the linearly three stage rosenbrock ( ros3p ) method @xcite as the time integrator .",
    "ros3p solver is third order in time , l - stable and can efficiently deal with the large stiff systems arising from the discretization of .",
    "it does not show any order reduction in time in contrast to other rosenbrock methods of order higher than two @xcite .",
    "unlike the fully implicit schemes , it requires only the solution of three linear systems per time step with the same coefficient matrix . in non - stationary models , the potential internal / boundary layers moves as the time progresses . the time step - sizes have to be adapted properly to resolve these layers accurately .",
    "the simple embedded a posteriori error estimator as the difference of second and third order ros3p solvers allow the construction of an efficient adaptive time integrator . to resolve the sharp layers and oscillations in advection - dominated regimes",
    ", we apply symmetric interior penalty galerkin ( sipg ) method @xcite , as a stable space discretization in the family of discontinuous galerkin ( dg ) methods .",
    "further , we apply the adaptive sipg method in space with the residual - based a posteriori error estimator @xcite to handle unphysical oscillations .",
    "the spatial mesh is refined or coarsened locally to obtain an accurate approximation with less degree of freedoms ( dofs ) and less computational time .",
    "we show in numerical experiments that the proposed time - space algorithm amot is capable of damping the oscillations which may vary as the time progresses .",
    "the paper is organized as follows . in section  [ dg ]",
    "we give the fully discrete formulation of the advective ac model .",
    "the time - space adaptive algorithm is described in section  [ adap ] . in section  [ numeric ] ,",
    "results of numerical experiments for convection dominated expanding and sheering flows are presented .",
    "in this section we apply the method of time layers to discretize the model in time .",
    "the resulting sequence of elliptic problems are discretized by the sipg method at each time step .",
    "we consider the partition of time interval @xmath10 $ ] , as @xmath11 $ ] with time step - sizes @xmath12 , @xmath13 .",
    "the approximate solution at the time @xmath14 is denoted by @xmath15 .",
    "we apply the 3-stage rosenbrock solver ros3p @xcite with an embedded error estimator in time : @xmath16 where @xmath17 and @xmath18 is the jacobian @xmath19 at @xmath20 . the second order solution @xmath21 and",
    "the third order solution @xmath22 are given by @xmath23 with the same stage vectors @xmath24 .",
    "for the derivation of ros3p solver and for parameter values , we refer to @xcite .",
    "the difference of the solutions @xmath22 and @xmath21 is used as an error indicator in the time - adaptivity . due to the linearly implicit nature of the rosenbrock methods , the stage vectors @xmath24 in",
    "are solved using linear systems with the same coefficient matrix , which increases the computational efficiency in time integration of nonlinear pdes @xcite .",
    "the semi - discrete systems are discretized in space by the sipg method with upwinding for the convective term @xcite . on the time interval",
    "@xmath25 $ ] , we consider a family @xmath26 of shape regular elements ( triangles ) @xmath27 , and we denote the initial one by @xmath28 . here , the mesh @xmath26 is obtained by local refinement / coarsening of the mesh @xmath29 from the previous time step .",
    "then , with the dg finite element space @xmath30 , on an individual time step @xmath25 $ ] , in time ros3p and in space sipg discretized fully discrete scheme for the model reads as : for all @xmath31 , find @xmath32 ( or @xmath33 ) in with @xmath34 , @xmath35 , satisfying @xmath36 where @xmath37 , @xmath38 and @xmath39 stands for the discrete inner product @xmath40 .",
    "the forms @xmath41 and @xmath42 are the bilinear and linear forms given by @xmath43\\cdot[v_h^k ] ds   \\\\ & - \\sum \\limits _ { e \\in \\gamma_h^k } \\int_{e } ( \\{\\epsilon \\nabla v_h^k \\}\\cdot[u_h^k ] + \\{\\epsilon \\nabla u_h^k \\}\\cdot [ v_h^k ] ) ds,\\\\ b_{h}(u_h^k , v_h^k ) = & \\sum \\limits_{e \\in { \\mathcal{t}}_h^k } \\int_{k } \\frac{1}{\\epsilon}f(u_h^k ) v_h^k dx,\\end{aligned}\\ ] ] where @xmath44 and @xmath45 denote the traces on an edge from outside and inside of an element @xmath46 , respectively , @xmath47 is the length of an edge @xmath48 , @xmath49 is the set of interior edges , @xmath50 and @xmath51 are the sets of inflow boundary edges of an element @xmath27 and on the boundary @xmath52 , respectively .",
    "the parameter @xmath53 is called the penalty parameter to penalize the jumps in dg schemes , and @xmath54 $ ] and @xmath55 stand as the jump and average operators , respectively @xcite .",
    "the goal of amot is on each time step @xmath11 $ ] adjusting the time step - size and the spatial mesh adaptively . to do this , amot aims to bound the total error @xmath56 by suitable temporal and spatial estimators , where @xmath57 is the true solution of the continuous model and @xmath33 is the @xmath58 order ( in time ) discrete solution of the fully discrete system on @xmath29 , at the time @xmath14 . in order to define the temporal and spatial estimators separately ,",
    "we replace the true solution @xmath57 by its best available approximation @xmath59 which is the @xmath60 order ( in time ) discrete solution of the fully discrete system on an auxiliary very fine mesh @xmath61 , and we add and subtract the term @xmath32 which is the @xmath60 order ( in time ) discrete solution of the fully discrete system on @xmath29 at the time @xmath14 .",
    "then , similar to ( * ? ? ?",
    "9.2 ) , we get @xmath62 for a user prescribed tolerance @xmath63 , and further , we set @xmath64 and @xmath65 for user defined @xmath66 . in , the term @xmath67 controls the temporal adjustment , while the term @xmath68 controls the acceptance of spatial mesh .",
    "note that the temporal error estimator @xmath67 is nothing but the difference of the order 2 and order 3 ( in time ) solutions of the fully discrete system on @xmath29 at the time @xmath14 . as a result , on each time step @xmath69 , amot starts on the spatial mesh @xmath29 with the adjustment of the time step - size @xmath70 according to the acceptance relation @xcite @xmath71{\\frac{\\rho tol_t}{\\varepsilon_t}}\\tau_k\\ ] ] with a safety factor @xmath72 , and the computed time step - size @xmath73 is accepted if @xmath74 .",
    "* input : * @xmath75 , @xmath73 , @xmath29 , @xmath76 , @xmath77 + * output : * @xmath78 , @xmath79 , @xmath73 , @xmath26     + @xmath80 + compute @xmath32 and @xmath33 on @xmath29 + @xmath81 + compute new step - size @xmath73 according to +   + compute error indicator @xmath82 and construct the auxiliary fine mesh @xmath83 + compute the best available approximation @xmath59 on @xmath83 + @xmath84 + refine elements @xmath85 with @xmath86 + coarsen elements @xmath85 with @xmath87 + construct the new spatial mesh @xmath26 +   + compute @xmath78 on @xmath26 @xmath74 and @xmath88    [ algorithm ]    after time step - size adjustment , amot continues with the refinement and coarsening of the spatial mesh @xmath29 to obtain the new spatial mesh @xmath26 according to the spatial estimator @xmath89 in , where the local elements @xmath90 are refined for large @xmath91 and the ones are coarsened for small @xmath91 . to match the elements @xmath90 to be refined",
    ", we check the condition @xmath86 , while we check the condition @xmath87 to match the elements @xmath90 to be coarsened . yet , to compute the spatial estimator @xmath68 , we need the best available approximation @xmath59 which is the solution of the discrete system on a very fine auxiliary mesh @xmath61 . to construct the auxiliary fine mesh @xmath83 , one needs a local error indicator to match the elements @xmath90 to be refined .",
    "we use residual - based error indicator @xcite @xmath92 where @xmath93 denote the cell residuals @xmath94 for a weight function @xmath95 , while @xmath96 and @xmath97 stand for the edge residuals coming from the jump of the numerical solution on the interior and neumann boundary edges , respectively , see @xcite for details . using the local error indicators @xmath98 in",
    ", we construct the auxiliary fine mesh @xmath83 by refining the elements @xmath99 , where the set @xmath100 is determined by the bulk criterion @xmath101 for a user prescribed @xmath102 , where larger @xmath103 leads to more elements to be refined . in our simulations we take @xmath104 since we need a very fine auxiliary mesh . the amot procedure , see algorithm  [ algorithm ]",
    ", continues until the temporal and spatial acceptance conditions @xmath88 and @xmath74 are satisfied .",
    "in this section , we demonstrate the accuracy and efficiency of the proposed amot for expanding and sheering flow examples . in all examples , we set the tolerance @xmath105 , the parameter @xmath106 and the diffusion coefficient @xmath107 .",
    "the spatial domain is taken as @xmath108 ^ 2 $ ] and the time interval is @xmath109 $ ] . for the sipg discretization we use",
    "piecewise discontinuous linear polynomials .",
    "numerical solutions on uniform meshes in space are computed with the constant time step @xmath110 and using a @xmath111 uniform spatial mesh with dofs @xmath112 .",
    "we consider with the sheering velocity field @xmath113 , and with the initial condition as @xmath114 on @xmath115 ^ 2 $ ] otherwise @xmath116 @xcite . in fig .",
    "[ plot1 ] , left , the unphysical oscillations of the solution on uniform mesh can be clearly seen .",
    "the oscillations are damped out by the amot algorithm , in fig .",
    "[ plot1 ] , middle , and adaptive mesh is concentrated in the region where the sharp layers occur .    ,",
    "title=\"fig:\",scaledwidth=32.0% ] , title=\"fig:\",scaledwidth=32.0% ] , title=\"fig:\",scaledwidth=32.0% ]    the refinement and coarsening of amot algorithm works well as shown in fig .  [ tdt1 ] , right .",
    "the mesh becomes finer at the very beginning and then , gets coarser around @xmath117 as the size of the interior layer becomes smaller due to the sheering and the time step - size increases monotonically , fig .",
    "[ tdt1 ] , left .",
    ", title=\"fig:\",scaledwidth=35.0% ] , title=\"fig:\",scaledwidth=35.0% ]      as the second example , we consider the expanding velocity field @xmath118 . the initial condition is taken as @xmath114 in the square @xmath119 ^ 2 $ ] and @xmath116 otherwise @xcite .",
    "the unphysical oscillations are damped again in fig .",
    "[ plot2 ] , middle .",
    "the mesh refined slightly and time step - size increases at the beginning , and then refinement and coarsening proceed simultaneously , fig .",
    "time step - size slightly decreases after @xmath117 following refinement / coarsening .",
    ", title=\"fig:\",scaledwidth=32.0% ] , title=\"fig:\",scaledwidth=32.0% ] , title=\"fig:\",scaledwidth=32.0% ]    , title=\"fig:\",scaledwidth=35.0% ] , title=\"fig:\",scaledwidth=35.0% ]",
    "this work has been partially supported metu research fund project bap-07 - 05 - 2013 - 004 and by scientific human resources development program ( yp ) of the turkish higher education council ( yk ) .",
    ", _ adaptive multilevel solution of nonlinear parabolic pde systems . theory , algorithm , and applications _ , lecture notes in computational science and engineering , * 16 * ( 2001 ) springer - verlag , doi:10.1007/978 - 3 - 662 - 04484 - 1 .        ,",
    "_ a robust a - posteriori error estimator for discontinuous galerkin methods for convection - diffusion equations",
    "_ , applied numerical mathematics , * 59 * ( 2009 ) 22362255 , doi : 10.1016/j.apnum.2008.12.014 ."
  ],
  "abstract_text": [
    "<S> we develop an adaptive method of time layers with a linearly implicit rosenbrock method as time integrator and symmetric interior penalty galerkin method for space discretization for the advective allen - cahn equation with non - divergence - free velocity fields . </S>",
    "<S> numerical simulations for convection dominated problems demonstrate the accuracy and efficiency of the adaptive algorithm for resolving the sharp layers occurring in interface problems with small surface tension . </S>"
  ]
}
{
  "article_text": [
    "hopcroft and tarjan @xcite showed in 1974 that planarity of graphs can be decided in linear time .",
    "it is natural to relax planarity by admitting a small number of edge - crossings in a drawing of the graph .",
    "the _ crossing number _ of a graph is the minimum number of edge crossings needed in a drawing of the graph in the plane .",
    "not surprisingly , it is np - complete to decide , given a graph @xmath2 and a @xmath1 , whether the crossing number of @xmath2 is at most @xmath1 @xcite .",
    "on the other hand , for every _ fixed _",
    "@xmath1 there is a simple polynomial time algorithm deciding whether a given graph @xmath2 has crossing number at most @xmath1 : it guesses @xmath3 pairs of edges that cross @xmath1-tuples of edge pairs , where @xmath4 denotes the number of edges of the input graph . ] and tests if the graph obtained from @xmath2 by adding a new vertex at each of these edge crossings is planar .",
    "the running time of this algorithm is @xmath5 .",
    "downey and fellows @xcite raised the question if the crossing - number problem is _ fixed parameter - tractable _ , that is , if there is a constant @xmath6 such that for every fixed @xmath1 the problem can be solved in time @xmath7 .",
    "we answer this question positively with @xmath8 . in other words , we show that for every fixed @xmath1 there is a quadratic time algorithm deciding whether a given graph @xmath2 has crossing number at most @xmath1 . moreover , we show that if this is the case , a drawing of @xmath2 in the plane with at most @xmath1 crossings can also be computed in quadratic time .",
    "it is interesting to compare our result to similar results for computing the _ genus _ of a graph .",
    "( the genus of a graph @xmath2 is the minimum taken over the genus of all surfaces @xmath9 such that @xmath2 can be embedded into @xmath9 . ) as for the crossing number , it is np - complete to decide if the genus of a given graph is less than or equal to a given @xmath1 @xcite . for a fixed @xmath1 , at first sight",
    "the genus problem looks much harder .",
    "it is by no means obvious how to solve it in polynomial time ; this has been proved possible by filotti , miller , and reif @xcite . in 1996",
    ", mohar @xcite proved that for every @xmath1 there is actually a linear time algorithm deciding whether the genus of a given graph is @xmath1 .",
    "however , the fact that the genus problem is fixed - parameter tractable was known earlier as a direct consequence of a strong general theorem due to robertson and seymour @xcite stating that all minor closed classes of graphs are recognizable in cubic time .",
    "it is easy to see that the class of graphs of genus at most @xmath1 is closed under taking minors , but unfortunately the class of all graphs of crossing number at most @xmath1 is not .",
    "so in general robertson and seymour s theorem can not be applied to compute crossing numbers .",
    "an exception is the case of graphs of degree at most 3 ; fellows and langston @xcite observed that for such graphs robertson and seymour s result immediately yields a cubic time algorithm for computing crossing numbers .",
    "although we can not apply robertson and seymour s result directly , the overall strategy of our algorithm is inspired by their ideas : the algorithm first iteratively reduces the size of the input graph until it reaches a graph of bounded tree - width , and then solves the problem on this graph . for the reduction step ,",
    "we use robertson and seymour s excluded grid theorem @xcite together with a nice observation due to thomassen @xcite that in a graph of bounded genus ( and thus in a graph of bounded crossing number ) every large grid contains a subgrid that , in some precise sense , lies `` flat '' in the graph . such a flat grid does not essentially contribute to the crossing number and can therefore be contracted . for the remaining problem on graphs of bounded tree - width",
    "we apply a theorem due to courcelle @xcite stating that all properties of graphs that are expressible in monadic second - order logic are decidable in linear time on graphs of bounded tree - width .",
    "let me remark that the hidden constant in the quadratic upper bound for the running time of our algorithm heavily depends on @xmath1 . as a matter of fact , the running time is @xmath10 , where @xmath11 is a doubly exponential function .",
    "thus our algorithm is mainly of theoretical interest .",
    "graphs in this paper are undirected and loop - free , but they may have multiple edges .",
    "the vertex set of a graph @xmath2 is denoted by @xmath12 , the edge set by @xmath13 . for graphs @xmath2 and @xmath14 we let @xmath15 and @xmath16 .",
    "a _ topological embedding _ of a graph @xmath2 into a graph @xmath14 is a mapping @xmath17 that associates a vertex @xmath18 with every @xmath19 and a path @xmath20 in @xmath14 with every @xmath21 in such a way that :    * for distinct vertices @xmath22 , the vertices @xmath23 and @xmath24 are distinct . * for distinct edges @xmath25 , the paths @xmath20 and @xmath26 are internally disjoint ( that is , they have at most their endpoints in common ) . * for every edge @xmath21 with endpoints @xmath27 and @xmath28 , the two endpoints of the path @xmath20 are @xmath23 and @xmath24 , and @xmath29 for all @xmath30",
    ".    we let @xmath31 .",
    "a _ drawing _ of a graph @xmath2 is a mapping @xmath32 that associates with every vertex @xmath19 a point @xmath33 and with every edge @xmath21 a simple curve @xmath34 in @xmath35 in such a way that :    * for distinct vertices @xmath22 , the points @xmath36 and @xmath37 are distinct . * for distinct edges @xmath25 , the curves @xmath34 and @xmath38 have at most one interior point in common ( and possibly their endpoints ) .",
    "* for every edge @xmath21 with endpoints @xmath27 and @xmath28 , the two endpoints of the curve @xmath34 are @xmath36 and @xmath37 , and @xmath39 for all @xmath30 . * at most two edges intersect in one point .",
    "more precisely , @xmath40 for all @xmath41 .",
    "we let @xmath42 .",
    "an @xmath41 with @xmath43 is called a _ crossing _ of @xmath32 .",
    "the _ crossing number _ of @xmath32 is the number of crossings of @xmath32 .",
    "the _ crossing number _ of @xmath2 is the minimum taken over the crossing numbers of all drawings of @xmath2 .",
    "a drawing or graph of crossing number 0 is called _",
    "planar_.      for @xmath44 , we let @xmath45 be the hexagonal grid of radius @xmath46 . instead of giving a formal definition ,",
    "we refer the reader to figure [ fig : hex ] to see what this means .    , title=\"fig : \" ] , title=\"fig:\",width=90 ] , title=\"fig:\",width=151 ]    the _ principal cycles _ @xmath47 of @xmath45 are the the concentric cycles , numbered from the interior to the exterior ( see figure [ fig : pricyc ] ) .    , width=151 ]      for graphs @xmath48 , an _ @xmath14-component ( of @xmath2 ) _ is either a connected component @xmath49 of @xmath50 together with all edges connecting @xmath49 with @xmath14 and their endpoints in @xmath14 or an edge in @xmath51 whose endpoints are both in @xmath14 together with its endpoints .",
    "let @xmath2 be a graph and @xmath52 a topological embedding .",
    "the _ interior of @xmath53 _ is the subgraph @xmath54 ( remember that @xmath55 is the outermost principal cycle of @xmath45 ) .",
    "the _ attachments of @xmath53 _ are those @xmath53-components that have a non - empty intersection with the interior of @xmath53 .",
    "the topological embedding @xmath17 is _ flat _ if the union of @xmath53 with all its attachments is planar .",
    "we shall use the following theorem due to thomassen @xcite . actually , thomassen stated the result for the _ genus _ of a graph rather than its crossing number . however , it is easy to see that the crossing number of a graph is an upper bound for its genus .",
    "[ theo : tho ] for all @xmath56 there is an @xmath57 such that the following holds : if @xmath2 is a graph of crossing number at most @xmath1 and @xmath58 a topological embedding , then there is a subgrid @xmath59 such that the restriction @xmath60 of @xmath17 to @xmath45 is flat .",
    "we assume that reader is familiar with the notion _ tree - width ( of a graph)_. it is no big problem if not ; we never really work with tree - width , but just take it as a black box in theorems [ theo : rsb][theo : cou2 ] .",
    "robertson and seymour s deep _ excluded grid theorem _",
    "@xcite states that every graph of sufficiently large tree - width contains the homeomorphic image of a large grid .",
    "the following is an algorithmic version of this theorem .",
    "[ theo : rsb ] let @xmath44 .",
    "then there is a @xmath61 and a linear time algorithm that , given a graph @xmath2 , either ( correctly ) recognizes that the tree - width of @xmath2 is at most @xmath28 or computes a topological embedding @xmath52 .",
    "actually , in @xcite robertson and seymour only give a quadratic time algorithm , but they point out that their algorithm can be improved to linear time using bodlaender s @xcite linear time algorithm for computing tree - decompositions .",
    "let me remark that , as far as i can see , this algorithm is not merely a trivial modification of robertson and seymour s algorithm obtained by `` plugging in '' bodlaender s tree - decomposition algorithm , but it requires to look into the details of bodlaender s algorithm and extend it in a suitable way .",
    "courcelle s theorem states that properties of graphs definable in _ monadic second - order logic mso _ can be checked in linear time . in this logical context",
    "we consider graphs as relational structures of vocabulary @xmath62 , where @xmath63 and @xmath64 are unary relation symbols interpreted as the vertex set and edge set , respectively , and @xmath65 is a binary relation symbol interpreted by the incidence relation of a graph . to simplify the notation , for a graph @xmath2",
    "we let @xmath66 and call @xmath67 the _ universe _ of @xmath2 .",
    "i assume that the reader is familiar with the definition of mso .",
    "however , for those who are not i have included it in appendix a.    [ theo : cou ] let @xmath61 and let @xmath68 be an mso - formula . then there is a linear time algorithm that , given a graph @xmath2 and @xmath69 , @xmath70 , decides whether @xmath71 .",
    "we shall also use the following strengthening of courcelle s theorem , a proof of which can be found in @xcite :    [ theo : cou2 ] let @xmath61 and let @xmath72 be an mso - formula .",
    "then there is a linear time algorithm that , given a graph @xmath2 and @xmath73 , @xmath74 , decides if there exist @xmath69 , @xmath70 such that @xmath75 and , if this is the case , computes such elements @xmath76 and sets @xmath77 .",
    "for an @xmath78 , a graph @xmath2 , and a subset @xmath79 of _ forbidden edges _ , an _ @xmath80-good drawing of @xmath2 with respect to @xmath81 _ is a drawing @xmath32 of @xmath2 of crossing number at most @xmath80 such that no forbidden edges are involved in any crossings , i.e.  for every crossing @xmath82 of @xmath32 we have @xmath83 .",
    "we fix a @xmath84 for the whole section .",
    "we shall describe an algorithm that solves the following _ generalized @xmath1-crossing number problem _ in quadratic time :    later , we shall extend our algorithm in such a way that it actually computes a @xmath1-good drawing if there exists one .",
    "our algorithm works in two phases . in the first",
    ", it iteratively reduces the size of the input graph until it obtains a graph whose tree - width is bounded by a constant only depending on @xmath1 .",
    "then , in the second phase , it solves the problem on this graph of bounded tree - width .",
    "we let @xmath85 and choose @xmath86 sufficiently large such that for every graph @xmath2 of crossing number at most @xmath1 and every topological embedding @xmath58 there is a subgrid @xmath59 such that the restriction @xmath60 of @xmath17 to @xmath45 is flat .",
    "such an @xmath86 exists by theorem [ theo : tho ]",
    ". then we choose @xmath28 with respect to @xmath86 according to theorem [ theo : rsb ] such that we have a linear time algorithm that , given a graph of tree - width at least @xmath28 , finds a topological embedding @xmath58 .",
    "we keep @xmath87 fixed for the rest of the section .",
    "[ lem : ml1 ] there is a linear time algorithm that , given a graph @xmath2 , either recognizes that the crossing number of @xmath2 is greater than @xmath1 , or recognizes that the tree - width of @xmath2 is at most @xmath28 , or computes a flat topological embedding @xmath88 .",
    "we first apply the algorithm of theorem [ theo : rsb ] .",
    "if it recognizes that the tree - width of the input graph @xmath2 is at most @xmath28 , we are done .",
    "otherwise , it computes a topological embedding @xmath89 . by our choice of @xmath86 , we know that either the crossing number of @xmath2 is greater than @xmath1 or there is a subgrid @xmath59 such that the restriction of @xmath17 to @xmath45 is flat .    for each @xmath59 we can decide whether @xmath60 is flat by a planarity test , which is possible in linear time @xcite .",
    "our algorithm tests whether @xmath60 is flat for all @xmath59 .",
    "either it finds a flat @xmath60 , or the crossing number of @xmath2 is greater than @xmath1 . for flatness , but only a number that is linear in @xmath1 . ]",
    "since @xmath86 is a fixed constant , the overall running time is linear .",
    "let @xmath2 be a graph and @xmath52 a flat topological embedding . for @xmath90 ,",
    "we let @xmath91 be the subgrid of @xmath45 bounded by the @xmath92th principal cycle @xmath93 .",
    "we let @xmath94 be the subgraph of @xmath2 consisting of @xmath95 and all attachments of @xmath53 intersecting the interior @xmath96 of @xmath97 .",
    "moreover , we let @xmath98 be the set of all edges of @xmath94 that have at least one endpoint on @xmath99 .",
    "using the fact that @xmath17 is flat , it is easy to see that the sets @xmath98 , for @xmath100 are disjoint .",
    "suppose now that @xmath32 is a @xmath1-good drawing of @xmath2 of minimum crossing number .",
    "recall that @xmath101 . by the pigeonhole - principle there is at least one @xmath102 such that none of the edges in @xmath98 is involved in any crossing of @xmath32 .",
    "we let @xmath103 be minimum with this property .",
    "let @xmath104 , @xmath105 and @xmath106 . then @xmath107 and @xmath65",
    "are both connected planar graphs .",
    "note furthermore that @xmath108 is a simple closed curve in the plane @xmath35 .",
    "thus @xmath109 must be entirely contained in one connected component of @xmath110 , say , in the interior .",
    "i claim that the restriction of @xmath32 to @xmath107 is a planar drawing .",
    "suppose for contradiction that this is not the case .",
    "consider any planar drawing @xmath111 of @xmath107 .",
    "then @xmath112 is a simple closed curve in the plane , and without loss of generality we can assume that @xmath113 is entirely contained in the interior of @xmath114 .",
    "now we define a new drawing @xmath115 of @xmath2 that is identical with @xmath32 on @xmath116 and homeomorphic to @xmath111 on @xmath107 .",
    "since none of the edges in @xmath98 is involved in any crossing of @xmath32 , this can be done in such a way that none of the edges in @xmath98 is involved in any crossing of @xmath115 .",
    "but then the number of crossings of @xmath115 is smaller than that of @xmath32 , because the restricion of @xmath115 to @xmath107 is planar .",
    "this contradicts the minimality of the crossing number of @xmath32 .",
    "hence the restriction of @xmath32 to @xmath107 is planar .",
    "in particular , this means that none of the edges of @xmath117 is involved in any crossing of @xmath32 . by the minimality of @xmath118",
    ", this implies @xmath119 .",
    "_ thus , surprisingly , @xmath118 is independent of the drawing @xmath32 . _",
    "let @xmath120 be the graph obtained from @xmath2 by contracting the connected subgraph @xmath65 to a single vertex @xmath121 ( see figure [ fig : contract ] ) .",
    "is obtained from @xmath2 by deleting all vertices of @xmath65 , deleting all edges with both endpoints in @xmath65 , adding a new vertex @xmath121 , and replacing , for all edges with one endpoint in @xmath65 , this endpoint by @xmath121 . ]     to @xmath120,width=453 ]    let @xmath122 be the union of @xmath81 with the set of all edges of @xmath123 and all edges incident with the new vertex @xmath121 .",
    "_ then @xmath2 has a @xmath1-good drawing with respect to @xmath81 if , and only if , @xmath120 has a @xmath1-good drawing with respect to @xmath122 . _",
    "the forward direction of this claim is obvious by the construction of @xmath120 and @xmath122 , and for the backward direction we observe that every @xmath1-good drawing @xmath115 of @xmath120 with respect to @xmath122 can be turned into a @xmath1-good drawing of @xmath2 with respect to @xmath81 by embedding the planar graph @xmath65 into a small neighborhood of @xmath124 .    clearly , given @xmath125 and @xmath17 , the graph @xmath120 and the edge - set @xmath122 can be computed in linear time .",
    "moreover @xmath126 .",
    "combining this with lemma [ lem : ml1 ] , we obtain :    [ lem : ml2 ] there is a linear time algorithm that , given a graph @xmath2 , either recognizes that the crossing number of @xmath2 is greater than @xmath1 or recognizes that the tree - width of @xmath2 is at most @xmath28 or computes a graph @xmath120 and an edge set @xmath127 with @xmath126 such that @xmath2 has a @xmath1-good drawing with respect to @xmath81 if , and only if , @xmath120 has a @xmath1-good drawing with respect to @xmath122 .",
    "iterating the algorithm of the lemma , we obtain :    there is a quadratic time algorithm that , given a graph @xmath2 , either recognizes that the crossing number of @xmath2 is greater than @xmath1 or computes a graph @xmath120 and an edge set @xmath127 such that the tree - width of @xmath120 is at most @xmath28 and @xmath2 has a @xmath1-good drawing with respect to @xmath81 if , and only if , @xmath120 has a @xmath1-good drawing with respect to @xmath122 .",
    "if the algorithm has not found out that the graph has crossing number greater than @xmath1 in phase i , it has produced a graph @xmath120 of tree - width at most @xmath28 and a set @xmath127 such that @xmath2 has a @xmath1-good drawing with respect to @xmath81 if , and only if , @xmath120 has a @xmath1-good drawing with respect to @xmath122 . in phase ii",
    ", the algorithm has to decide whether @xmath120 has a @xmath1-good drawing with respect to @xmath122 . using courcelle s theorem [ theo : cou ]",
    ", we prove that this can be done in linear time .    to this end , we shall find an mso - formula @xmath128 such that for every graph @xmath2 and every set @xmath79 we have @xmath129 if , and only if , @xmath2 has a @xmath1-good drawing with respect to @xmath81 .",
    "we rely on the well - known fact that there is an mso - formula @xmath130 saying that a graph is planar .",
    "( actually , this is quite easy to see : @xmath130 just says that @xmath2 neither contains @xmath131 nor @xmath132 as a topological subgraph .",
    "also see @xcite . )    for a graph @xmath2 and distinct edges @xmath133 we let @xmath134 be the graph obtained from @xmath2 by deleting the edges @xmath135 and @xmath136 and adding a new vertex @xmath137 and four edges connecting @xmath137 with the endpoints of the edges of @xmath138 and @xmath139 in @xmath2 ( see figure [ fig : ge]).[ge ]     with selected edges @xmath140 and the resulting @xmath134,height=94 ]    observe that for every @xmath78 a graph @xmath2 has an @xmath80-good drawing with respect to an edge set @xmath79 if , and only if , there are distinct edges @xmath141 such that @xmath134 has an @xmath142-good drawing with respect to @xmath81 .    a standard technique from logic , the method of syntactical interpretations , ( easily ) yields the following lemma :    for every mso - formula @xmath143 there exists an mso - formula @xmath144 such that for all graphs @xmath2 , edge sets @xmath79 and distinct edges @xmath141 we have : @xmath145    using this lemma , we inductively define , for every @xmath78 , formulas @xmath146 and @xmath147 such that for every graph @xmath2 and edge set @xmath79 we have @xmath148 and for all @xmath2 , @xmath79 , and @xmath141 we have @xmath149 we let @xmath150 and , for @xmath78 , @xmath151 this completes our proof .",
    "so far we have only proved that there is a quadratic time algorithm deciding if a graph @xmath2 has a good drawing with respect to a set @xmath152 .",
    "it is not hard to modify the algorithm so that it actually computes a drawing : for phase i , we observe that if we have a good drawing of @xmath120 with respect to @xmath122 then we can easily construct a good drawing of @xmath2 with respect to @xmath81 .",
    "so we only have to worry about phase ii .",
    "by induction on @xmath80 , for every @xmath153 we define a linear - time procedure @xmath154 that , given a graph @xmath2 of tree - width at most @xmath28 and a subset @xmath79 , computes an @xmath80-good drawing of @xmath2 with respect to @xmath81 ( if there exists one ) .",
    "@xmath155 just has to compute a planar drawing of @xmath2 .    for @xmath78 , we apply theorem [ theo : cou2 ] to the mso - formula @xmath156 it yields a linear time algorithm that , given a graph @xmath2 and an @xmath152 , computes two edges @xmath141 such that @xmath157 ( if such edges exist ) .",
    "it follows immediately from the definition of @xmath158 that @xmath157 if , and only if , @xmath134 has an @xmath80-good drawing with respect to @xmath81 .",
    "given @xmath2 and @xmath81 , the procedure @xmath154 applies this linear - time algorithm to compute @xmath140 such that @xmath157 .",
    "then it applies @xmath159 to the graph @xmath134 to compute an @xmath142-good drawing of a graph @xmath134 with respect to @xmath81 .",
    "it modifies this drawing in a straightforward way to obtain an @xmath80-good drawing of @xmath2 with respect to @xmath81 .      for those readers who are not so fond of logic , let me briefly sketch how the use of courcelle s theorem can be avoided .",
    "we have to find an algorithm that , given a graph @xmath2 of tree - width at most @xmath28 and a set @xmath79 , decides whether @xmath2 has a good drawing with respect to @xmath81 .",
    "let @xmath78 .",
    "for a graph @xmath2 and pairwise distinct edges @xmath160 we let @xmath161 that is , the graph obtained from @xmath2 by crossing @xmath135 with @xmath136 , @xmath162 with @xmath163 , et cetera .",
    "observe that , for every graph @xmath2 , there exist an @xmath3 and pairwise distinct edges @xmath160 such that @xmath164 is planar if , and only if , @xmath2 has a drawing with at most @xmath1 crossings such that every edge of @xmath2 is involved in at most one crossing of this drawing .",
    "this is not the same as saying that the crossing number of @xmath2 is at most @xmath1 .",
    "however , there is a simple trick that makes it possible to work with @xmath164 anyway : for every graph @xmath2 we let @xmath165 be the graph obtained from @xmath2 by subdividing every edge @xmath166-times , that is , by replacing every edge by a path of length @xmath1 . for @xmath79",
    ", we let @xmath167 be the set of all edges of @xmath165 that appear in a subdivision of an edge in @xmath81 . then clearly , @xmath2 has a @xmath1-good drawing with respect to @xmath81 if , and only if , @xmath165 has a @xmath1-good drawing with respect to @xmath168 .",
    "the crucial observation is that @xmath165 has a @xmath1-good drawing with respect to @xmath167 if , and only if , there exists an @xmath3 and pairwise distinct edges @xmath169 such that @xmath170 is planar .",
    "note , furthermore , that the pair @xmath171 can be constructed from @xmath172 in linear time .",
    "thus it suffices to find for every @xmath78 a linear time algorithm that , given a graph @xmath2 of tree - width at most @xmath28 and a set @xmath79 , computes pairwise distinct edges @xmath173 such that @xmath164 is planar ( if such edges exist ) .",
    "our algorithm first computes a tree - decomposition of @xmath2 of width at most @xmath28 using bodlaender s linear time algorithm @xcite",
    ". then by the usual dynamic programming technique on tree - decompositions of graphs it computes edges @xmath173 such that the graph @xmath164 neither contains @xmath132 nor @xmath131 as a topological subgraph . by kuratowski",
    "s theorem , this is equivalent to @xmath164 being planar .",
    "the advantage of our approach using definability in monadic second - order logic is that we have a precise proof without working out the tedious details of what is sloppily described as the `` usual dynamic programming technique '' above .",
    "inspection of our proofs and the proofs of the results we used shows that actually there is _ one _ algorithm that , given a graph @xmath2 with @xmath174 vertices and a non - negative integer @xmath1 , decides whether the crossing number of @xmath2 is at most @xmath1 in time @xmath10 for a suitable function @xmath11 .",
    "furthermore , it can be proved that @xmath11 can be chosen to be of the form @xmath175 for a polynomial @xmath176 .",
    "we have proved that for every @xmath0 there is a quadratic time algorithm deciding whether a given graph has crossing number at most @xmath1 .",
    "the running time of our algorithm in terms of @xmath1 is enormous , which makes the algorithm useless for practical purposes .",
    "this is partly due to the fact that the algorithm heavily relies on graph minor theory .",
    "however , knowing the crossing number problem to be fixed - parameter tractable may help to find better algorithms that are practically applicable for small values of @xmath1 .",
    "this has happened in a similar situation for the vertex cover problem .",
    "the first proof @xcite that vertex cover is fixed - parameter tractable used robertson and seymour s theorem that classes of graphs closed under taking minors are recognizable in cubic time . starting from there ,",
    "much better algorithms have been developed ; by now , vertex cover can be ( practically ) solved for a quite reasonable problem size ( see @xcite for a state - of - the - art algorithm ) .    10    h.l .",
    "bodlaender . a linear - time algorithm for finding tree - decompositions of small treewidth . , 25:13051317 , 1996 .",
    "logical reducibility and monadic np . in _ proceedings of the 34th annual ieee symposium on foundations of computer science _ ,",
    "pages 5261 , 1993 .",
    "b.  courcelle .",
    "graph rewriting : an algebraic and logic approach . in j.",
    "van leeuwen , editor , _ handbook of theoretical computer science _",
    ", volume  2 , pages 194242 .",
    "elsevier science publishers , 1990 .",
    "b.  courcelle .",
    "the expression of graph properties and graph transformations in monadic second - order logic . in g.",
    "rozenberg , editor , _ handbook of graph grammars and computing by graph transformations , vol .",
    "1 : foundations _ , chapter  5 , pages 313400 .",
    "world scientific ( new - jersey , london ) , 1997 .",
    "b.  courcelle .",
    "the monadic second - order logic of graphs xii : planar graphs and planar maps .",
    ", 237:132 , 2000 .",
    "downey and m.r . fellows . .",
    "springer - verlag , 1999 .",
    "ebbinghaus , j.  flum , and w.  thomas . .",
    "springer - verlag , 2nd edition , 1994 .",
    "fellows and m.a .",
    "nonconstructive tools for proving polynomial - time decidability .",
    ", 35 , 1988 .",
    "fellows and u.  stege . an improved fixed - parameter - tractable algorithm for vertex cover .",
    "technical report 318 , department of computer science , eth zurich , 1999 .",
    "filotti , g.l .",
    "miller , and j.  reif . on determining the genus of a graph in @xmath177 steps .",
    "in _ proceedings of the 11th acm symposium on theory of computing _ , pages 2737 , 1979 .",
    "j.  flum , m.  frick , and m.  grohe .",
    "query evaluation via tree - decompositions . in jan",
    "van  den bussche and victor vianu , editors , _ proceedings of the 8th international conference on database theory _ , lecture notes in computer science .",
    "springer verlag , 2001 . to appear .",
    "garey and d.s .",
    "the np - completeness column : an ongoing guide .",
    ", 3:8999 , 1982 .",
    "j.  e. hopcroft and r.  tarjan .",
    "efficient planarity testing .",
    ", 21:549568 , 1974 .",
    "b.  mohar . embedding graphs in an arbitrary surface in linear time . in _ proceedings of the 28th acm symposium on theory of computing _ , pages 392397 , 1996 .",
    "n.  robertson and p.d .",
    "graph minors v. excluding a planar graph . , 41:92114 , 1986 .",
    "n.  robertson and p.d .",
    "graph minors xiii .",
    "the disjoint paths problem .",
    "63:65110 , 1995 .    c.  thomassen . the graph genus problem is np - complete . , 10:458576 , 1988 .    c.  thomassen . a simpler proof of the excluded minor theorem for higher surfaces .",
    ", 70:306311 , 1997 .",
    "we first explain the syntax of mso : we have an infinite supply of _ individual variables _ , denoted by @xmath178 et cetera , and also an infinite supply of set variables , denoted by @xmath179 , et cetera .",
    "_ atomic mso - formulas ( over graphs )",
    "_ are formulas of the form @xmath180 , @xmath181 , @xmath182 , and @xmath183 , where @xmath184 are individual variables and @xmath185 is a set variable .",
    "the class of mso - formulas is defined by the following rules :    * atomic mso - formulas are mso - formulas . *",
    "if @xmath186 is an mso - formula , then so is @xmath187 . * if @xmath186 and @xmath188 are mso - formulas , then so are @xmath189 , @xmath190 , and @xmath191 . *",
    "if @xmath186 is an mso - formula and @xmath27 is a variable ( either an individual variable or a set variable ) , then @xmath192 and @xmath193 are mso - formulas .",
    "recall that @xmath194 .",
    "@xmath2-assignment _ is a mapping @xmath195 that associates an element of @xmath67 with every individual variable and a subset of @xmath67 with every set variable .",
    "we inductively define what it means that a graph @xmath2 together with an assignment @xmath195 _ satisfies _ an mso - formula @xmath186 ( we write @xmath196 ) :    * @xmath197 , + @xmath198 , + @xmath199 , + @xmath200 , * @xmath201 , * @xmath202 , + and similarly for @xmath203 , meaning `` or '' , and @xmath204 , meaning `` implies '' .",
    "* @xmath205 , where @xmath206 denotes the assignment with @xmath207 and @xmath208 for all @xmath209 , + and similarly for @xmath210 meaning `` for all @xmath211 '' , * @xmath212 , + and similarly for @xmath213 meaning `` for all @xmath214 '' .",
    "it is easy to see that the relation @xmath196 only depends on the values of @xmath195 at the _ free variables _ of @xmath186 , i.e.  those variables @xmath27 not occurring in the scope of a quantifier @xmath215 or @xmath216 .",
    "we write @xmath68 to denote that the free individual variables of @xmath186 are among @xmath217 and the free set variables are among @xmath218 . then for a graph @xmath2 and @xmath69 ,",
    "@xmath219 we write @xmath71 if for every assignment @xmath195 with @xmath220 and @xmath221 we have @xmath196 .",
    "a _ sentence _ is a formula without free variables ."
  ],
  "abstract_text": [
    "<S> we show that for every fixed @xmath0 there is a quadratic time algorithm that decides whether a given graph has crossing number at most @xmath1 and , if this is the case , computes a drawing of the graph in the plane with at most @xmath1 crossings . </S>"
  ]
}
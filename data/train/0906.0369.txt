{
  "article_text": [
    "the dark matter problem remains one of the most puzzling questions in cosmology .",
    "cosmological analyses reveal that dark matter may be composed of non - baryonic particles , but their nature is still to be discovered .",
    "many new physics models try to provide a natural solution to the dark matter problem .",
    "supersymmetry in particular offers a stable particle , the lightest supersymmetric particle ( lsp ) , if @xmath0-parity is conserved , which could be the main component of the dark matter in the universe .",
    "the current density of the lsp can be calculated and is referred as relic density .",
    "compared to the latest precise wmap measurements of the dark matter density @xcite , relic density can impose stringent constraints on the supersymmetric parameters .",
    "+   + ` superiso relic ` is an extension of the ` superiso ` program to the calculation of the relic density .",
    "the program calculates the relic density as well as the flavor physics observables using a susy les houches accord file ( slha1 @xcite or slha2 @xcite ) as input , either generated automatically via a call to softsusy @xcite or isajet @xcite , or provided by the user .",
    "the calculation can be performed automatically for different supersymmetry breaking scenarios , such as the minimal supergravity grand unification ( msugra ) also called constrained mssm ( cmssm ) , the non - universal higgs mass model ( nuhm ) , the anomaly mediated supersymmetry breaking scenario ( amsb ) and the gauge mediated supersymmetry breaking scenario ( gmsb ) .",
    "+   + one of the most important features of ` superiso relic ` in comparison to the other public relic density calculation codes , darksusy @xcite , isared @xcite and micromegas @xcite , is that it provides the possibility to alter the underlying cosmological model , by modifying for example the radiation equation - of - state , the expansion rate or the thermal properties of the universe in the period before big - bang nucleosynthesis ( bbn ) , which is experimentally inaccessible and remains theoretically obscure . in @xcite , it was shown that a modification of the expansion rate or of the entropy content of the universe before bbn can strongly modify the calculated relic density and therefore change the relic density constraints on supersymmetric parameter space . `",
    "superiso relic ` makes it possible to evaluate the uncertainties on the relic density due to the cosmological model , and inversely , to make prediction on the early universe properties using the particle physics constraints .",
    "+   + in the following , first the content of the ` superiso relic ` package will be presented , as well as the list of the main routines used for the relic density calculation .",
    "the procedure to use ` superiso relic ` will be then explained , and the inputs and outputs of the program will be introduced .",
    "finally , some examples of results obtained with ` superiso relic ` will be given .",
    "in the appendices , a description of the formulas and models used for computing the relic density will be detailed .",
    "` superiso relic ` is a mixed c / fortran program devoted to the calculation of the relic density and able to compute many flavor observables .",
    "seven main programs are provided in the package , but the users are also invited to write their own main programs . in particular ` slha.c ` can scan files written following the susy les houches accord formats , and calculates the implemented observables .",
    "the main programs ` msugra.c ` , ` amsb.c ` , ` gmsb.c ` , and ` nuhm.c ` have to be linked to the ` softsusy ` @xcite and/or the ` isasugra / isajet ` @xcite packages , in order to compute supersymmetric mass spectra and couplings within respectively the msugra , amsb , gmsb or nuhm scenarios . +   + the main steps to compute the observables in ` superiso relic ` are the following :    * generation of a slha file with ` isajet ` or ` softsusy ` ( or supply of a slha file by the user ) , * scan of the slha file , * calculation of the widths of the higgs bosons with ` feynhiggs ` , * calculation of the squared amplitudes of the annihilation diagrams involved in the relic density calculation , * computation of the thermally averaged total annihilation cross section , * solving of the boltzmann equations and computation of the relic density , * calculation of the flavor physics observables .    it should be noted that the relic density calculation is performed even if the lsp is a charged particle . a theoretical description of the calculation of the thermally averaged total annihilation cross section can be found in appendix [ sigmav ] and the detail of the calculation of the relic density in the cosmological standard model is given in appendix [ costamo ] .",
    "we refer to @xcite for a complete description of the calculation of the flavor observables .",
    "+   + the processes involved in the relic density calculation are all the annihilation and co - annihilation processes of the type @xmath1 where @xmath2 are supersymmetric particles and @xmath3 are standard model particles .",
    "the number of involved processes is more than 3000 , and the number of diagrams is even larger . to generate all the squared amplitudes",
    ", we have written a ` mathematica ` @xcite script which calls ` feynarts ` @xcite and ` formcalc ` @xcite and generates the necessary routines for the numerical computation of the amplitudes .",
    "these routines are part of ` superiso relic ` and can be found in ` src / relic ` .",
    "they rely on the ` looptools ` @xcite package to initialize ` formcalc ` internal routines , as well as ` feynhiggs ` @xcite to calculate the widths of the higgs bosons which is performed at two - loop level .",
    "+ ` looptools 2.4 ` and ` feynhiggs 2.6.5 ` are included in the ` superiso relic v2.5 ` package , and they can be found in ` src / contrib ` . therefore the user does not need to download these programs separately .",
    "+   + the compilation process of all the needed routines is very long ( a few hours ) , and their calculation can take time . fortunately , all the squared amplitude routines are not necessary at the same time , as some processes have only negligible effects .",
    "therefore , all the squared amplitudes are not computed for a susy parameter space point , and a selection is performed to save time , as described in appendix [ sigmav ] .",
    "the package ` superiso relic ` relies on the definition of a main structure in ` src / include.h ` , which is defined as follows : +    .... typedef struct parameters / * structure containing all the scanned parameters from the slha file * / {      int model ; / * msugra = 1 , gmsb = 2 , amsb = 3 * /      int generator ; / * isajet = 1 , softsusy = 2 * /      double q ; / * qmax ; default = m_ewsb = sqrt(m_stop1*mstop2 ) * /      double m0,m12,tan_beta , sign_mu , a0 ; / * msugra parameters * /      double lambda , mmess , n5,cgrav , m32 ; / * amsb , gmsb parameters * /      double mass_z , mass_w , mass_b , mass_top_pole , mass_tau_pole ; / * sm parameters * /      double inv_alpha_em , alphas_mz , alpha , gfermi , gauge_q ; / * sm parameters * /      double charg_umix[3][3],charg_vmix[3][3],stop_mix[3][3],sbot_mix[3][3 ] ,      stau_mix[3][3],neut_mix[6][6],mass_neut[6 ] ; / * mass mixing matrices * /      double min , m1_min , m2_min , m3_min , at_min , ab_min , atau_min , m2h1_min , m2h2_min ,      mu_min , m2a_min , tb_min , ma_min ; / * optional input parameters at scale min * /      double mel_min , mmul_min , mtaul_min , mer_min , mmur_min ,      mtaur_min ; / * optional input parameters at scale min * /      double mql1_min , mql2_min , mql3_min , mur_min , mcr_min , mtr_min ,      mdr_min , msr_min , mbr_min ; / * optional input parameters at scale min * /      double n51,n52,n53,m2h1_q , m2h2_q ; / * optional input parameters ( n51 ... 3 : gmsb )   * /      double mass_d , mass_u , mass_s , mass_c , mass_t , mass_e , mass_nue , mass_mu ,      mass_num , mass_tau , mass_nut ; / * sm masses * /      double mass_gluon , mass_photon , mass_z0 ; / * sm masses * /      double mass_h0,mass_h0,mass_a0,mass_h , mass_dnl , mass_upl , mass_stl , mass_chl ,      mass_b1,mass_t1 ; / * higgs & superparticle masses * /      double mass_el , mass_nuel , mass_mul , mass_numl , mass_tau1,mass_nutl , mass_gluino ,      mass_cha1,mass_cha2 ; / * superparticle masses * /      double mass_dnr , mass_upr , mass_str , mass_chr , mass_b2,mass_t2,mass_er , mass_mur ,      mass_tau2 ; / * superparticle masses * /      double mass_nuer , mass_numr , mass_nutr , mass_graviton ,      mass_gravitino ; / * superparticle masses * /      double gp , g2,g3,yu_q , yut[4],yd_q , yub[4],ye_q , yutau[4 ] ; / * yukawa couplings * /      double hmix_q , mu_q , tanb_gut , higgs_vev , ma2_q , msoft_q , m1_q , m2_q ,      m3_q ; / * parameters at scale q * /      double mel_q , mmul_q , mtaul_q , mer_q , mmur_q , mtaur_q , mql1_q , mql2_q , mql3_q , mur_q , mcr_q ,      mtr_q , mdr_q , msr_q , mbr_q ; / * masses at scale q * /      double au_q , a_u , a_c , a_t , ad_q , a_d , a_s , a_b , ae_q , a_e , a_mu , a_tau ; / * trilinear couplings * /           / * slha2 * /      int nmssm , rparity , cpviolation , flavor ;      double mass_nutau2,mass_e2,mass_nue2,mass_mu2,mass_numu2,mass_d2,mass_u2 ,      mass_s2,mass_c2 ;      double ckm_lambda , ckm_a , ckm_rho , ckm_eta ;      double pmns_theta12,pmns_theta23,pmns_theta13,pmns_delta13,pmns_alpha1,pmns_alpha2 ;      double lambdanmssm_min , kappanmssm_min , alambdanmssm_min , akappanmssm_min ,      lambdasnmssm_min , xifnmssm_min , xisnmssm_min , mupnmssm_min , msp2nmssm_min , ms2nmssm_min ,      mass_h03,mass_a02,nmssmrun_q , lambdanmssm , kappanmssm , alambdanmssm , akappanmssm ,      lambdasnmssm , xifnmssm , xisnmssm , mupnmssm , msp2nmssm , ms2nmssm ; / * nmssm parameters * /      double pmnsu_q , ckm_q , mse2_q , msu2_q , msd2_q , msl2_q , msq2_q , tu_q , td_q , te_q ;           double ckm[4][4 ] ; / * ckm matrix * /      double h0_mix[4][4],a0_mix[4][4 ] ; / * higgs mixing matrices * /      double su_mix[7][7],sd_mix[7][7],se_mix[7][7 ] , snu_mix[4][4 ] ; / * mixing matrices * /      double sckm_msq2[4][4],sckm_msl2[4][4],sckm_msd2[4][4],sckm_msu2[4][4 ] ,      sckm_mse2[4][4 ] ; / * super ckm matrices * /      double pmns_u[4][4 ] ; / * pmns mixing matrices * /      double tu[4][4],td[4][4],te[4][4 ] ; / * trilinear couplings * /           / * non - slha*/      double mass_b_1s , mass_b_pole , mtmt ;      double lambda5 ; / * lambda qcd * /           / * flavor constants * /      double f_b , f_bs , f_ds , m_b , m_bs , m_ds , m_k , m_kstar , m_d , life_b , life_bs , life_ds ;           / * decay widths * /      double width_h0,width_h0,width_a0,width_h ; } parameters ; ....    this structure contains all the important parameters and is called by most of the main functions in the program . an additional structure",
    "specific to the relic density calculation is also defined :    .... typedef struct relicparam / * structure containing the cosmological model parameters * / {                                                                     double dd0,ndd ;                                               double sd0,nsd ;                                               double table_eff[276][3 ] ; } relicparam ; ....    this structure is used to define the cosmological model based on which the relic density calculation is performed .",
    "we now review the main routines of the code needed for the relic density calculation . for the main procedures related to the flavor observable calculations we refer the reader to @xcite .",
    "+   + the most relevant c routines are the following :    * ` void init_param(struct parameters * param ) ` +   + this function initializes the ` param ` structure , setting all the parameters to 0 , apart from the sm masses and the value of the strong coupling constant at the @xmath4-boson mass , which receive the values given in the pdg08 @xcite . +",
    "* ` int les_houches_reader(char name [ ] , struct parameters * param ) ` +   + this routine reads the slha file named ` name ` , and put all the read parameters in the structure ` param ` .",
    "it should be noted that a negative value for ` param->model ` indicates a problem in reading the slha file , or a model not yet included in superiso ( such as @xmath0-parity breaking models ) . in this case , ` les_houches_reader ` returns 0 , otherwise 1 . + * ` int test_slha(char name [ ] ) ` +   + this routine checks if the slha file is valid , and if so returns 1 .",
    "if not , -1 means that in the slha generator the computation did not succeed ( _ e.g. _ because of tachyonic particles ) , -2 means that the considered model is not currently implemented in ` superiso ` , and -3 indicates that the provided file is either not in the slha format , or some important elements are missing .",
    "+ * ` int softsusy_sugra(double m0 , double m12 , double tanb , double a0 , ` + ` double sgnmu , double mtop , double mbot , double alphas_mz , char name [ ] ) ` * ` int isajet_sugra(double m0 , double m12 , double tanb , double a0 , ` + ` double sgnmu , double mtop , char name [ ] ) ` * ` int softsusy_gmsb(double lambda , double mmess , double tanb , int n5 , ` + ` double cgrav , double sgnmu , double mtop , double mbot , double alphas_mz , ` + ` char name [ ] ) ` * ` int softsusy_amsb(double m0 , double m32 , double tanb , double sgnmu , ` + ` double mtop , double mbot , double alphas_mz , char name [ ] ) ` * ` int softsusy_nuhm(double m0 , double m12 , double tanb , double a0 , double mu , ` + ` double ma , double mtop , double mbot , double alphas_mz , char name [ ] ) ` +   + the above routines call ` softsusy ` or ` isajet ` to compute the mass spectrum corresponding to the input parameters ( more details are given in the next sections ) , and return a slha file whose name has to be specified in the string ` name ` . +   + * ` void modelini(struct parameters * param , double relicmass , double maxenergy ) ` +   + this routine is an interface between the c routines and the fortran routines and it defines all the fortran variables using the c variables . + * ` double findrelicmass(struct parameters * param , int * scalar ) ` +   + this function determines the lsp mass , and checks if the lsp is scalar ( ` * scalar=1 ` ) or fermionic ( ` * scalar=0 ` ) . + * ` int weff(double * res , double sqrts , struct parameters * param , double relicmass ) ` +   + this function calls the fortran routines and returns the effective annihilation rate @xmath5 at a given center of mass energy ` sqrts ` , following the procedure described in appendix [ sigmav ] . +",
    "* ` int init_relic(double wefftab[nmax][2 ] , int * nlines_weff , struct parameters * param ) ` +   + this routine computes for different values of @xmath6 the effective annihilation rates @xmath5 needed for the calculation of @xmath7 using the ` weff ` function , and collects them in table ` wefftab ` .",
    "+ * ` double sigmav(double t , double relicmass , double wefftab[nmax][2 ] , int nlines , ` + ` struct parameters * param ) ` +   + this function computes the averaged annihilation cross section @xmath8 using the effective annihilation rates @xmath5 collected in table ` wefftab ` .",
    "+ * ` double heff(double t , struct relicparam * paramrelic ) ` + ` double sgstar(double t , struct relicparam * paramrelic ) ` + ` double geff(double t , struct relicparam * paramrelic ) ` +   + these three functions compute respectively @xmath9 , @xmath10 and @xmath11 at the temperature  ` t ` .",
    "+ * ` double yeq(double t , struct parameters * param , struct relicparam * paramrelic ) ` + ` double dyeq_dt(double t , struct parameters * param , struct relicparam * paramrelic ) ` +   + the first function computes @xmath12 at a temperature ` t ` , and the second one its derivative . +",
    "* ` double tfo(double wefftab[nmax][2 ] , int nlines_weff , double relicmass , ` + ` struct parameters * param , double d , struct relicparam * paramrelic ) ` +   + this function computes the freeze - out temperature following eq .",
    "( [ tfo ] ) , using the ` wefftab ` generated previously . + * ` double relic_density(double wefftab[nmax][2 ] , int nlines_weff , ` + ` struct parameters * param , struct relicparam * paramrelic ) ` + ` double relic_calculator(char name [ ] ) ` +   + this main procedure computes the relic density using the ` wefftab ` generated previously . `",
    "relic_calculator ` is a container function which scans the slha file and computes the relic density . +",
    "* ` void init_cosmomodel(struct relicparam * paramrelic ) ` + ` void init_modeleff(int model_eff , struct relicparam * paramrelic ) ` + ` void init_dark_density(double dd0 , double ndd , struct relicparam * paramrelic ) ` + ` void init_dark_entropy(double sd0 , double nsd , struct relicparam * paramrelic ) ` +   + these procedures define the cosmological model based on which the relic density is computed . `",
    "init_cosmomodel ` has to be called first to initialize the ` paramrelic ` structure . to alter the qcd equation - of - state as in appendix [ qcdstate ] , ` init_modeleff ` must be called while specifying the model : ` model_eff`@xmath13 corresponds respectively to the models a , b , b2 , b3 and c developed in @xcite , and ` model_eff`@xmath14 to the old model formerly used in ` micromegas ` and ` darksusy ` .",
    "if not specified , the model is set by default to b ( ` model_eff`@xmath15 ) .",
    "` init_dark_density ` adds a dark energy density as in eq .",
    "( [ rhod ] ) , with ` dd0`=@xmath16 and ` ndd`=@xmath17 , and ` init_dark_entropy ` adds a dark entropy density as in eq .",
    "( [ sd ] ) , with ` sd0`=@xmath18 and ` nsd`=@xmath19 .",
    "if these routines are not called , no additional density will be added , and the calculation will be performed in the standard cosmological model . + * ` double dark_density(double t , struct relicparam * paramrelic ) ` + ` double dark_entropy(double t , struct relicparam * paramrelic ) ` + ` double dark_entropy_derivative(double t , struct relicparam * paramrelic ) ` + ` double dark_entropy_gd(double t , struct relicparam * relicparam ) ` +   + these functions compute energy and entropy densities needed for the alternative cosmological models described in appendix [ mocomo ] . + * ` int feynhiggs(char name [ ] , struct parameters * param ) ` +   + this routine calls ` feynhiggs ` to compute the widths and masses of the higgs bosons corresponding to the slha file ` name ` at the two - loop level , and puts these variables in the ` param ` structure .",
    "+    the complete list of c procedures implemented in ` superiso relic ` is available in ` src / include.h ` . +   +",
    "the fortran routines can be found in ` src / relic ` .",
    "they have been generated automatically by a ` mathematica`/`formcalc ` script and they perform the computation of all squared amplitudes . because of the large number of these routines they will not be described further here . for the ` formcalc ` specific routines ,",
    "we refer the reader to the ` formcalc ` manual @xcite .",
    "the ` superiso relic ` package can be downloaded from : +   + http://superiso.in2p3.fr/relic +   + and is available in two versions :    * the shared library based version , ` superiso relic shared ` , compiles the squared amplitude procedures on - the - fly , if they are needed .",
    "the compilation of this version is fast , but its running is slow . it is mostly intended for calculation of test - points . + * the static library based version , ` superiso relic ` . here all the squared amplitude procedures need to be compiled before running , and therefore the compilation process can take a couple of hours .",
    "this version computes much faster than the shared library version , and is therefore intended for the calculation of a large number of susy points .",
    "the following main directory is created after unpacking : +   + ` superiso_vx.x ` +   + this directory contains the ` src/ ` directory , in which all the source files can be found .",
    "the main directory contains also a ` makefile ` , a ` readme ` , seven sample main programs ( ` msugra.c ` , ` amsb.c ` , ` gmsb.c ` , ` nuhm.c ` , ` slha.c ` , ` test_modeleff.c ` and ` test_standmod.c ` ) and one example of input file in the susy les houches accord format ( ` example.lha ` ) .",
    "the compilation options should be defined in the ` makefile ` , as well as the path to the isajet ` isasugra.x ` and softsusy ` softpoint.x ` executable files , when needed .",
    "the important compilation options to be set are the c compiler name ( by default ` gcc ` ) and the fortran compiler name ( by default ` gfortran ` ) , and their specific flags if needed .",
    "instructions are given in ` makefile ` for the intel compilers and for the fortran compiler ` g77 ` .",
    "for the ` superiso relic shared ` version the ` ld ` linker name ( by default ` ld ` ) and its specific flags must also be set .",
    "+ ` superiso relic ` is written for a c compiler respecting the c99 standard and a fortran compiler .",
    "in particular , it has been tested successfully with the gnu c and gnu fortran compilers and the intel c and intel fortran compilers on linux and mac 32-bits or 64-bits machines , and with the latest versions of ` softsusy ` and ` isajet ` .",
    "additional information can be found in the ` readme ` file .",
    "+ to compile the library , type +   + ` make ` +   + this creates ` libisospin.a ` in ` src/ ` and ` librelic.a ` in ` src / relic ` , and compiles ` feynhiggs ` and ` looptools ` .",
    "then , to compile one of the seven programs provided in the main directory , type +   + ` make name     ` or `     make name.c ` +   + where ` name ` can be ` msugra ` , ` amsb ` , ` gmsb ` , ` slha ` , ` nuhm ` , ` test_modeleff ` or ` test_standmod ` .",
    "this generates an executable program with the ` .x ` extension .",
    "note that ` slha ` , ` test_modeleff ` and ` test_standmod ` do not need ` isajet ` or ` softsusy ` programs , but ` msugra ` , ` amsb ` , ` gmsb ` and ` nuhm ` need at least one of them . +   + ` slha.x ` calculates the implemented observables , using the parameters contained in the slha file whose name has to be passed as input parameter .",
    "+   + ` amsb.x ` , ` gmsb.x ` , ` msugra.x ` and ` nuhm.x ` compute the observables , starting first by calculating the mass spectrum and couplings thanks to ` isajet ` ( for ` msugra.x ` only ) and/or ` softsusy ` within respectively the amsb , gmsb , msugra or nuhm parameter spaces .",
    "+   + ` test_modeleff ` and ` test_standmod ` calculate the relic density , using the parameters contained in the slha file whose name has to be passed as input parameter , in the cosmological models described in the appendices .",
    "the input and output of the main programs are described in the following .",
    "the program ` msugra.x ` computes the observables in the msugra parameter space , using ` isajet ` and/or ` softsusy ` to generate the mass spectra . if only one of these generators is available the corresponding ` # define ` in `",
    "msugra.c ` has to be commented .",
    "the necessary arguments to this program are :    * @xmath20 : universal scalar mass at gut scale , * @xmath21 : universal gaugino mass at gut scale , * @xmath22 : trilinear soft breaking parameter at gut scale , * @xmath23 : ratio of the two higgs vacuum expectation values .",
    "optional arguments can also be given :    * @xmath24 : sign of higgsino mass term , positive by default , * @xmath25 : top quark pole mass , by default 172.4 gev , * @xmath26 : scale independent b - quark mass , by default 4.2 gev ( option only available for ` softsusy ` ) , * @xmath27 : strong coupling constant at the @xmath4-boson mass , by default 0.1176 ( option only available for ` softsusy ` ) .",
    "if the arguments are not specified , a message will describe the needed parameters in the correct order .",
    "+   + with ` softsusy ` 2.0.18 and ` isajet ` 7.78 , running the program with :    .... ./msugra.x 1000 1000 0 10 ....    returns    .... slha file generated by softsusy                                                                                        delta0=8.116e-02                                                                                                       br_bsgamma=3.082e-04                                                                                                   br_btaunu=1.100e-04                                                                                                    rtaunu=9.980e-01                                                                                                       br_kmunu / br_pimunu=6.454e-01                                                                                           rl23=1.000e+00                                                                                                         br_bdtaunu=6.976e-03                                                                                                   br_bdtaunu / br_bdenu=2.974e-01 br_bsmumu=3.095e-09 br_dstaunu=4.818e-02 br_dsmunu=4.975e-03 a_muon=9.756e-11 charged_lsp=0 excluded_mass=0 omega=9.087e+00    slha file generated by isajet delta0=8.094e-02 br_bsgamma=3.072e-04 br_btaunu=1.099e-04 rtaunu=9.980e-01 br_kmunu / br_pimunu=6.454e-01 rl23=1.000e+00 br_bdtaunu=6.968e-03 br_bdtaunu / br_bdenu=2.974e-01 br_bsmumu=3.468e-09 br_dstaunu=4.813e-02 br_dsmunu=4.970e-03 a_muon=1.013e-10 charged_lsp=0 excluded_mass=0 omega=9.102e+00 ....    where ` delta0 ` refers to the isospin symmetry breaking in @xmath28 decays , ` br_bsgamma ` the branching ratio of @xmath29 , ` br_btaunu ` the branching ratio of @xmath30 , ` rtaunu ` the normalized ratio to the sm value , ` br_kmunu",
    "/ br_pimunu ` the ratio @xmath31 , ` rl23 ` the ratio @xmath32 , ` br_bdtaunu ` the branching ratio of @xmath33 , ` br_bdtaunu",
    "/ br_bdenu ` the ratio @xmath34 , ` br_bsmumu ` the branching ratio of @xmath35 , ` br_dstaunu ` and ` br_dsmunu ` the branching ratios of @xmath36 and @xmath37 respectively , ` a_muon ` the deviation in the anomalous magnetic moment of the muon , ` charged_lsp ` indicates that the lsp is charged if equal to 1 , ` excluded_mass ` that the point is already excluded by the direct searches if it is equal to 1 , and ` omega ` is the relic density @xmath38 .",
    "more details on the definitions and calculations of the flavor observables are given in @xcite .",
    "the program ` amsb.x ` computes the observables using the corresponding parameters generated by ` softsusy ` in the amsb scenario .",
    "the necessary arguments to this program are :    * @xmath20 : universal scalar mass at gut scale , * @xmath39 : gravitino mass at gut scale , * @xmath23 : ratio of the two higgs vacuum expectation values .",
    "optional arguments are the same as for msugra .",
    "if the input parameters are missing , a message will ask for them . +   + with ` softsusy ` 2.0.18 , running the program with :    .... ./amsb.x 500 5000 5 -1 ....    returns",
    ".... delta0=7.669e-02 br_bsgamma=3.296e-04 br_btaunu=1.097e-04 rtaunu=9.953e-01 br_kmunu / br_pimunu=6.454e-01 rl23=1.000e+00 br_bdtaunu=6.971e-03 br_bdtaunu / br_bdenu=2.972e-01 br_bsmumu=3.349e-09 br_dstaunu=4.818e-02 br_dsmunu=4.975e-03 a_muon=-6.469e-10 excluded_mass=1 omega=1.291e-04 ....      the program ` gmsb.x ` computes the observables using the gmsb parameters generated by ` softsusy ` . the necessary arguments to this program",
    "are :    * @xmath40 : scale of the susy breaking in gev ( usually 10000 - 100000 gev ) , * @xmath41 : messenger mass scale ( @xmath42 ) , * @xmath43 : equivalent number of @xmath44 messenger fields , * @xmath23 : ratio of the two higgs vacuum expectation values .",
    "optional arguments are the same as for msugra , with an additional one :    * @xmath45 ( @xmath46 ) : ratio of the gravitino mass to its value for a breaking scale @xmath40 , 1 by default .    again , in the case of lack of arguments , a message will be displayed . +   + with ` softsusy ` 2.0.18 , running the program with :    .... ./gmsb.x 2e4 5e6 1 10 ....    returns    .... delta0=6.309e-02 br_bsgamma=4.285e-04 br_btaunu=8.078e-05 rtaunu=7.331e-01 br_kmunu / br_pimunu=6.439e-01 rl23=9.988e-01 br_bdtaunu=6.542e-03 br_bdtaunu / br_bdenu=2.789e-01 br_bsmumu=3.802e-09",
    "br_dstaunu=4.806e-02 br_dsmunu=4.962e-03 a_muon=3.778e-08 excluded_mass=1 omega=3.497e-02 ....      the program ` nuhm.x ` computes the observables using the nuhm parameters generated by ` softsusy ` .",
    "the necessary arguments to this program are the same as for msugra , with two additional ones , the values of @xmath47 and @xmath48 :    * @xmath20 : universal scalar mass at gut scale , * @xmath21 : universal gaugino mass at gut scale , * @xmath22 : trilinear soft breaking parameter at gut scale , * @xmath23 : ratio of the two higgs vacuum expectation values , * @xmath47 : @xmath47 parameter , * @xmath48 : cp - odd higgs mass .",
    "optional arguments can also be given :    * @xmath25 : top quark pole mass , by default 172.4 gev , * @xmath26 : scale independent b - quark mass , by default 4.2 gev , * @xmath27 : strong coupling constant at the @xmath4-boson mass , by default 0.1176 .    in the absence of arguments , a message will be shown . +   + with ` softsusy ` 2.0.18 , running the program with :    .... ./nuhm.x 500 500 0 50 500 500 ....    returns    .... delta0=1.069e-01 br_bsgamma=2.006e-04",
    "br_btaunu=6.775e-05 rtaunu=6.148e-01 br_kmunu / br_pimunu=6.430e-01 rl23=9.982e-01 br_bdtaunu=6.333e-03 br_bdtaunu / br_bdenu=2.700e-01 br_bsmumu=3.338e-08 br_dstaunu=4.796e-02",
    "br_dsmunu=4.952e-03 a_muon=2.188e-09 excluded_mass=0 omega=7.533e-02 ....      the program ` slha.x ` calculates the observables while reading the needed parameters in a given slha file .",
    "for example , the command    .... ./slha.x example.lha ....    returns    ....",
    "delta0=8.259e-02 br_bsgamma=2.974e-04 br_btaunu=1.097e-04 rtaunu=9.966e-01 br_kmunu / br_pimunu=6.454e-01 rl23=1.000e+00 br_bdtaunu=6.966e-03 br_bdtaunu / br_bdenu=2.973e-01 br_bsmumu=3.470e-09 br_dstaunu=4.813e-02 br_dsmunu=4.969e-03 a_muon=1.938e-10 excluded_mass=0 omega=1.188e+01 ....    if the slha file provided to ` slha.x ` is invalid , a message will be displayed :    * ` invalid point ` means that the slha generator had not succeeded in generating the mass spectrum ( _ e.g. _ due to the presence of tachyonic particles ) . * `",
    "model not yet implemented ` means that the slha file is intended for a model not implemented in superiso , such as @xmath0-parity violating models . * ` invalid slha file ` means that the slha file is broken and misses important parameters .",
    "the program ` test_modeleff.x ` calculates the relic density while reading the needed parameters in the slha file , for the different qcd equations of state ( _ i.e. _ alternative models of @xmath11 and @xmath9 ) described in appendix [ qcdstate ] . for example , the command    ....",
    "./test_modeleff.x example.lha ....    returns    .... dependence of the relic density on the calculation of heff and geff for model_eff=1 ( model a ) : omega=1.188e+01 for model_eff=2 ( model b ( default ) ) : omega=1.188e+01 for model_eff=3 ( model b2 ) : omega=1.196e+01 for model_eff=4 ( model b3 ) : omega=1.181e+01 for model_eff=5 ( model c ) : omega=1.189e+01 for model_eff=0 ( old model ) : omega=1.165e+01 ....      the program ` test_standmodel.x ` reads the needed parameters in the slha file , and calculates the relic density while adding to the standard cosmological model an effective energy density such that @xmath49 and/or an effective entropy density @xmath50 which modify the early universe properties without having observational consequences if chosen adequately @xcite . a description of the model and of the related equations can be found in appendix [ mocomo ] .",
    "the necessary arguments to this program are :    * slha file name , * @xmath16 : ratio of dark energy density over radiation energy density at bbn time ( preferentially @xmath51 ) , * @xmath17 : dark energy density decrease exponent ( preferentially @xmath52 ) , * @xmath18 : ratio of dark entropy density over radiation entropy density at bbn time ( preferentially @xmath51 ) , * @xmath19 : dark entropy density decrease exponent ( preferentially @xmath53 ) .",
    "note that @xmath54 corresponds to a radiation - like energy density , @xmath55 to a quintessence - like energy density and @xmath56 to a decaying scalar field energy density .",
    "also , @xmath57 corresponds to a radiation - like entropy density and @xmath58 can appear in reheating models .",
    "+ for example , the command    .... ./test_standmod.x",
    "example.lha 1e-3 6 1e-3 4 ....    returns    .... for the cosmological standard model : omega=1.188e+01 for the specified model with dark density / entropy : omega=4.633e+02 ....    using the aforementioned main programs as examples , the user is encouraged to write his / her own programs in order to , for example , perform scans in a given supersymmetric scenario , or test different cosmological models .",
    "in function of @xmath59 , computed with superiso relic ( dashed green line ) , and with darksusy ( red crosses ) .",
    "this comparison shows an excellent agreement.[weffds],width=377 ]    ` superiso relic ` computes the relic density , and the results have been compared extensively to those of ` darksusy ` and ` micromegas ` .",
    "a very good agreement has been found even at the level of the calculation of the effective annihilation rate @xmath60 ( see appendix [ sigmav ] ) , as can be seen in fig .",
    "[ weffds ] . in general",
    ", the results of ` darksusy ` , ` micromegas ` , and ` superiso relic ` differ only by a few percents , but in some rare cases where a higgs resonance occurs approximately at twice the mass of the lsp , the differences can be large . to avoid this problem , a very precise calculation of the widths of the higgs bosons is required , and we decided to use the two - loop calculations of ` feynhiggs ` to obtain a better evaluation of the relic density in this kind of scenarios .",
    "+   + ` superiso relic ` can also be used in order to constrain susy parameter spaces , as it provides many different observables from flavor physics as well as the relic density .",
    "it allows in particular to test easily the influence of the cosmological model by modifying for example the qcd equation - of - state ( appendix [ qcdstate ] ) or the expansion rate ( appendix [ mocomo ] ) , as can be seen in fig .",
    "[ fignuhm ] .",
    "this unusual feature will be further developed in the next versions of the program .",
    ", @xmath48 ) , in the standard cosmological model ( left ) , and in presence of a tiny energy overdensity with @xmath61 and @xmath55 ( right ) .",
    "the red points are excluded by the isospin asymmetry of @xmath28 , the gray area is excluded by direct collider limits , the yellow zone involves tachyonic particles , and the blue strips are by the wmap constraints.[fignuhm],title=\"fig:\",width=283],@xmath48 ) , in the standard cosmological model ( left ) , and in presence of a tiny energy overdensity with @xmath61 and @xmath55 ( right ) .",
    "the red points are excluded by the isospin asymmetry of @xmath28 , the gray area is excluded by direct collider limits , the yellow zone involves tachyonic particles , and the blue strips are by the wmap constraints.[fignuhm],title=\"fig:\",width=279 ]",
    "[ sigmav ] the computation of the thermally averaged annihilation cross section @xmath7 is the most time consuming part of the relic density computation , as it requires the computation of the many annihilation and co - annihilation amplitudes .",
    "one can define the annihilation rate of supersymmetric particles @xmath62 and @xmath63 into sm particles @xmath64 and @xmath65 @xcite : @xmath66 where @xmath67 is the transition amplitude , @xmath68 is the center - of - mass energy , @xmath69 is the number of degrees of freedom of the particle @xmath62 , @xmath70 is the final center - of - mass momentum such as @xmath71^{1/2 } \\left[s-(m_k - m_l)^2\\right]^{1/2}}{2\\sqrt{s}}\\;,\\ ] ] @xmath72 is a symmetry factor equal to 2 for identical final particles and to 1 otherwise , and the integration is over the outgoing directions of one of the final particles .",
    "moreover , an average over initial internal degrees of freedom is performed .",
    "+   + we also define an effective annihilation rate @xmath60 by @xmath73 with @xmath74 practically , we compute @xmath75 where @xmath76 is the angle between particles @xmath62 and @xmath64 .",
    "we integrate over @xmath77 numerically by means of the gauss - legendre quadrature of order 5 .",
    "+   + since @xmath78 does not depend on the temperature @xmath79 , it can be tabulated once for each model point .",
    "it is however important to make sure that the maximum @xmath6 in the table is large enough to include all important resonances , thresholds and coannihilation thresholds .",
    "+   + to improve the calculation speed , we use two different thresholds :    * a cut such that the coannihilation of susy particles @xmath62 and @xmath63 is only taken into account if @xmath80 where we have taken @xmath81 * a maximum energy up to which @xmath78 is calculated , such that @xmath82 where @xmath83 gev is a typical upper limit freeze - out temperature , and @xmath84 is the boltzmann suppression factor limit that we fixed at @xmath85 @xcite .",
    "the thermal average of the effective cross section is then @xmath86 ^ 2}\\;,\\ ] ] where @xmath87 and @xmath88 are the modified bessel functions of the second kind of order 1 and 2 respectively .",
    "the average is performed numerically using a gaussian integration , and the @xmath89 limit can be safely replaced by @xmath90 using the properties of @xmath87 .",
    "[ costamo ] the cosmological standard model is based on a friedmann - lematre universe filled with radiation , baryonic matter and cold dark matter , approximately flat and incorporating a cosmological constant accelerating its expansion . before recombination ,",
    "the universe expansion was dominated by a radiation density , and therefore the expansion rate @xmath91 of the universe is determined by the friedmann equation @xmath92 where @xmath93 is the radiation density and @xmath94 is the effective number of degrees of freedom of radiation .",
    "the computation of the relic density is based on the solution of the boltzmann evolution equation @xcite @xmath95 where @xmath96 is the number density of all supersymmetric particles , @xmath97 their equilibrium density , and @xmath98 is the thermal average of the annihilation rate of the supersymmetric particles to the standard model particles . by solving this equation ,",
    "the density number of supersymmetric particles in the present universe and consequently the relic density can be determined . + the ratio of the number density to the radiation entropy density , @xmath99 can be defined , where @xmath100 @xmath101 is the effective number of entropic degrees of freedom of radiation . combining eqs .",
    "( [ friedmann_stand ] ) and ( [ evol_eq ] ) and defining @xmath102 , the ratio of the lsp mass over temperature , yield @xmath103 with @xmath104 the freeze - out temperature @xmath105 is the temperature at which the lsp leaves the initial thermal equilibrium when @xmath106 , with @xmath107 . the relic density is obtained by integrating eq .",
    "( [ main ] ) from @xmath108 to @xmath109 , where @xmath110 k is the temperature of the universe today @xcite : @xmath111 where @xmath112 is the critical density of the universe , such as @xmath113 @xmath114 being the hubble constant .",
    "+   + in practice , to improve the speed of the code , the freeze - out temperature @xmath105 is determined by solving the implicit equation : @xmath115 and the evolution equation ( [ evol_eq ] ) is only solved from @xmath116 to @xmath117 , with the initial condition @xmath118 .",
    "this method is known to provide results with less than a few percent error for the calculation of the relic density .",
    "[ qcdstate ] to evaluate the relic density , it is necessary to know the number of effective degrees of freedom @xmath94 and @xmath101 which give access to the energy and entropy densities of radiation . to compute them",
    ", one generally assumes that above the qcd phase transition critical temperature @xmath119 mev , the primordial plasma is weakly interacting because of asymptotic freedom , and can therefore be treated as an ideal gas .",
    "+   + however , non - perturbative studies have shown that the qcd plasma departs strongly from the ideal gas behavior at high temperatures , and more realistic models have been studied in @xcite . in these models , below @xmath120 the hadronic degrees of freedom are modeled by an interacting gas of hadrons , while above @xmath120 the quarks and gluons are taken to interact and are replaced by hadronic models . in ` superiso relic ` , the models depicted in @xcite are available , and can be selected in the routine ` init_modeleff(int model_eff , struct relicparam * ` + ` paramrelic ) ` by setting the value of ` model_eff ` ( see subsection [ mainroutines ] ) .",
    "the different models are :    * model a ( ` model_eff`=1 ) which ignores hadrons completely .",
    "* model b ( ` model_eff`=2 ) which considers @xmath121 mev , and models hadrons as a gas of free mesons and hadrons , with a sharp switch to the hadronic gas at @xmath122 .",
    "* model b2 ( ` model_eff`=3 ) is a variation of model b constructed by scaling the lattice data by 0.9 . * model b3 ( ` model_eff`=4 ) is a variation of model b constructed by scaling the lattice data by 1.1 .",
    "* model c ( ` model_eff`=5 ) which assumes @xmath123 mev , and models hadrons as a gas of free mesons and hadrons , with a sharp switch to the hadronic gas at @xmath124 mev .",
    "* old model ( ` model_eff`=0 ) is the old model with an ideal gas .",
    "an example main program is provided as ` test_modeleff.c ` . for more information about these models ,",
    "the reader is referred to @xcite .",
    "[ mocomo ] the density number of supersymmetric particles is determined by the boltzmann equation : @xmath125 where @xmath96 is the number density of supersymmetric particles , @xmath7 is the thermally averaged annihilation cross - section , @xmath91 is the hubble parameter , @xmath126 is the relic particle equilibrium number density .",
    "the term @xmath127 has been added to provide a parametrization of the non - thermal production of susy particles .",
    "the expansion rate @xmath91 is determined by the friedmann equation : @xmath128 where @xmath129 is the radiation energy density , which is considered as dominant before bbn in the standard cosmological model .",
    "following @xcite , @xmath130 is introduced as an effective dark density which parametrizes the expansion rate modification .",
    "the entropy evolution reads : @xmath131 where @xmath68 is the total entropy density .",
    "@xmath132 parametrizes here effective entropy fluctuations due to unknown properties of the early universe .",
    "the radiation energy and entropy densities can be written as usual : @xmath133 separating the radiation entropy density from the total entropy density , _",
    "i.e. _ setting @xmath134 where @xmath135 is an effective entropy density , the following relation between @xmath135 and @xmath132 can be derived : @xmath136 \\;.\\ ] ] following the standard relic density calculation method @xcite , we introduce @xmath137 , and eq .",
    "( [ boltzmann ] ) becomes @xmath138 \\ ; , \\label{final}\\ ] ] where @xmath139 , @xmath140 being the mass of the relic particle , and @xmath141 and @xmath142 where @xmath62 runs over all supersymmetric particles of mass @xmath143 and with @xmath69 degrees of freedom . following the methods described in appendix [ costamo ] , the relic density can then be calculated : @xmath144 where @xmath145 is the present value of @xmath146 . in the limit where @xmath147 , usual relations are retrieved .",
    "we should note here that @xmath135 and @xmath132 are not independent variables . +   + in ` superiso relic v2.5 ` , we adopt the parametrizations described in @xcite for @xmath130 and @xmath135 : @xmath148and @xmath149 where @xmath150 stands for the bbn temperature . @xmath16 and @xmath18 are respectively the ratio of effective dark energy / entropy density over radiation energy / entropy density , and @xmath17 and @xmath19 are parameters describing the behavior of the densities .",
    "we refer the reader to @xcite for detailed descriptions and discussions of these parametrizations .",
    "the authors would like to thank joackim edsj and genevive blanger for useful discussions , and sven heinemeyer and thomas hahn for their help with feynhiggs and formcalc .",
    "f. mahmoudi , `` superiso : a program for calculating the isospin asymmetry of @xmath28 in the mssm '' , comput .",
    ". commun . * 178 * , 745 ( 2008 ) [ arxiv:0710.2067 ] ; + f. mahmoudi , `` superiso v2.4 : a program for calculating flavor physics observables in supersymmetry '' , arxiv:0808.3144 [ hep - ph ] , ` http://superiso.in2p3.fr ` .",
    "t. hahn , `` generating feynman diagrams and amplitudes with feynarts 3 '' , comput .",
    ". commun . * 140 * , 418 ( 2001 ) [ hep - ph/0012260 ] ; + t. hahn and c. schappacher , `` the implementation of the minimal supersymmetric standard model in feynarts and formcalc '' , comput .",
    ". commun . * 143 * , 54 ( 2002 ) [ hep - ph/0105349 ] .    t. hahn and m. perez - victoria , `` automatized one - loop calculations in 4 and d dimensions '' , comput .",
    ". commun . * 118 * , 153 ( 1999 ) [ hep - ph/9807565 ] ; + t. hahn and m. rauch , `` news from formcalc and looptools '' , hep - ph/0601248 .",
    "s. heinemeyer , w. hollik and g. weiglein , `` feynhiggs : a program for the calculation of the masses of the neutral cp even higgs bosons in the mssm '' , comput .",
    ". commun . * 124 * , 76 ( 2000 ) [ hep - ph/9812320 ] ."
  ],
  "abstract_text": [
    "<S> we describe ` superiso relic ` , a public program for evaluation of relic density and flavor physics observables in the minimal supersymmetric extension of the standard model ( mssm ) . ` </S>",
    "<S> superiso relic ` is an extension of the ` superiso ` program which adds to the flavor observables of ` superiso ` the computation of all possible annihilation and coannihilation processes of the lsp which are required for the relic density calculation . </S>",
    "<S> all amplitudes have been generated at the tree level with ` feynarts`/`formcalc ` , and widths of the higgs bosons are computed with ` feynhiggs ` at the two - loop level . ` </S>",
    "<S> superiso relic ` also provides the possibility to modify the assumptions of the cosmological model , and to study their consequences on the relic density . </S>",
    "<S> +   + pacs numbers : 11.30.pb , 12.60.jv , 13.20.-v , 95.35.+d    * superiso relic : a program for calculating relic density + and flavor physics observables in supersymmetry *    a. arbey + _ universit de lyon , lyon , f-69000 , france ; universit lyon  1 , + villeurbanne , f-69622 , france ; centre de recherche astrophysique de lyon , + observatoire de lyon , 9 avenue charles andr , saint - genis laval cedex , + f-69561 , france ; cnrs , umr 5574 ; ecole normale suprieure de lyon , lyon , france . + _ f. mahmoudi + _ laboratoire de physique corpusculaire de clermont - ferrand ( lpc ) , + universit blaise pascal , cnrs / in2p3 , 63177 aubire cedex , france . _ </S>"
  ]
}
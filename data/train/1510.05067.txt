{
  "article_text": [
    "deep neural networks ( dnns ) have achieved remarkable performance in many domains @xcite .",
    "the simple gradient backpropagation ( bp ) algorithm has been the essential `` learning engine '' powering most of this work .",
    "deep neural networks are universal function approximators @xcite . thus it is not surprising that solutions to real - world problems exist within their configuration space .",
    "rather , the real surprise is that such configurations can actually be discovered by gradient backpropagation .",
    "the human brain may also be some form of dnn .",
    "since bp is the most effective known method of adapting dnn parameters to large datasets , it becomes a priority to answer : could the brain somehow be implementing bp ? or some approximation to it ?    for most of the past three decades since the invention of bp , it was generally believed that it could not be implemented by the brain @xcite .",
    "bp seems to have three biologically implausible requirements : ( 1 ) feedback weights must be the same as feedforward weights ( 2 ) forward and backward passes require different computations , and ( 3 ) error gradients must somehow be stored separately from activations .    one biologically plausible way to satisfy requirements ( 2 ) and ( 3 ) is to posit a distinct `` error network '' with the same topology as the main ( forward ) network but used only for backpropagation of error signals .",
    "the main problem with such a model is that it makes requirement ( 1 ) implausible .",
    "there is no known biological way for the error network to know precisely the weights of the original network .",
    "this is known as the `` weight transport problem '' @xcite . in this work we call it the `` weight symmetry problem '' .",
    "it is arguably the crux of bp s biological implausibility .    in this report",
    ", we systematically relax bp s weight symmetry requirement by manipulating the feedback weights .",
    "we find that some natural and biologically plausible schemes along these lines lead to exploding or vanishing gradients and render learning impossible .",
    "however , useful learning is restored if a simple and indeed _ more _ biologically plausible rule called batch manhattan ( bm ) is used to compute the weight updates .",
    "another technique , called batch normalization ( bn ) @xcite , is also shown effective .",
    "when combined together , these two techniques seem complementary and significantly improve the performance of our asymmetric version of backpropagation .",
    "the results are somewhat surprising : if the aforementioned bm and/or bn operations are applied , the magnitudes of feedback weights turn out not to be important . a much - relaxed _ sign - concordance _",
    "property is all that is needed to attain comparable performance to mini - batch sgd on a large number of tasks .",
    "furthermore , we tried going beyond sign concordant feedback .",
    "we systematically reduced the probability of feedforward and feedback weights having the same sign ( the _ sign concordance probability _ ) .",
    "we found that the effectiveness of backpropagation is strongly dependent on high sign concordance probability .",
    "that said , completely random and fixed feedback still outperforms chance e.g. , as in the recent work of lillicrap et al .",
    "@xcite .",
    "our results demonstrate that the perfect forward - backward weight symmetry requirement of backpropagation can be significantly relaxed and strong performance can still be achieved .",
    "to summarize , we have the following conclusions : + * ( i ) * * the magnitudes of feedback weights do not matter to performance*. this surprising result suggests that our theoretical understanding of why backpropagation works may be far from complete .",
    "+ * ( ii ) * magnitudes of the weight updates also do not matter .",
    "+ * ( iii ) * normalization / stabilization methods such as batch normalization and batch manhattan are necessary for these asymmetric backpropagation algorithms to work .",
    "note that this result was missed by previous work on random feedback weights @xcite .",
    "+ * ( iv ) * asymmetric backpropagation algorithms evade the weight transport problem .",
    "thus it is plausible that the brain could implement them .",
    "+ * ( v ) * these results indicate that sign - concordance is very important for achieving strong performance . however , even fixed random feedback weights with batch normalization significantly outperforms chance .",
    "this is intriguing and motivates further research . + * ( vi ) * additionally , we find batch manhattan to be a very simple but useful technique in general .",
    "when used with batch normalization , it often improves the performance .",
    "this is especially true for smaller training sets .",
    "a schematic representation of backpropagation is shown in fig . [",
    "fig : bp_basics ] .",
    "let @xmath0 be the objective function .",
    "let @xmath1 and @xmath2 denote the feedforward and feedback weight matrices respectively .",
    "let @xmath3 denote the inputs and @xmath4 the outputs .",
    "@xmath5 and @xmath6 are the feedforward and feedback connections between the @xmath7-th output @xmath8 and the @xmath9-th input @xmath10 , respectively . @xmath11 and @xmath12 are the transfer function and its derivative .",
    "let the derivative of the @xmath9-th input with respect to the objective function be @xmath13 , the formulations of forward and back propagation are as follows : + @xmath14 @xmath15    the standard bp algorithm requires @xmath16 .",
    "we call that case _ symmetric backpropagation_. in this work",
    "we systematically explore the case of _ asymmetric backpropagation _ where @xmath17 .        by varying @xmath2",
    ", one can test various asymmetric bps .",
    "let @xmath18 denote the function that takes the sign ( -1 or 1 ) of each element .",
    "let @xmath19 indicate element - wise multiplication .",
    "@xmath20 are matrices of the same size as @xmath1 .",
    "@xmath21 is a matrix of uniform random numbers @xmath22 $ ] and @xmath23 is a matrix where each element is either @xmath24 with probability @xmath25 or @xmath26 with probability @xmath27 .",
    "we explored the following choices of feedback weights @xmath2 in this paper : + 1 . *",
    "uniform sign - concordant feedbacks ( usf ) * : + @xmath28 + 2 . *",
    "batchwise random magnitude sign - concordant feedbacks ( brsf ) * : + @xmath29 , where @xmath21 is redrawn after each update of @xmath1 ( i.e. , each mini - batch ) .",
    "fixed random magnitude sign - concordant feedbacks ( frsf ) * : + @xmath29 , where @xmath21 is initialized once and fixed throughout each experiment .",
    "* batchwise random magnitude p - percent - sign - concordant feedbacks ( brsf - p ) * : + @xmath30 , where @xmath21 and @xmath23 is redrawn after each update of @xmath1 ( i.e. , each mini - batch ) .",
    "fixed random magnitude p - percent - sign - concordant feedbacks ( frsf - p ) * : + @xmath30 , where @xmath21 and @xmath23 is initialized once and fixed throughout each experiment .",
    "fixed random feedbacks ( rndf ) * : + each feedback weight is drawn from a zero - mean gaussian distribution and fixed throughout each experiment : @xmath31 , where @xmath32 was chosen to be 0.05 in all experiments .",
    "+ the results are summarized in the section [ sec : exp ] .",
    "the performances of 1 , 2 and 3 , which we call * strict sign - concordance * cases , are shown in experiment a. the performances of 4 and 5 with different choices of @xmath27 , which we call * partial sign - concordance * cases , are shown in experiment b. the performances and control experiments about setting 6 , which we call * no concordance * cases , are shown in experiments c1 and c2 .",
    "* batch normalization ( bn ) * + batch normalization ( bn ) is a recent technique proposed by @xcite to reduce `` internal covariate shift '' @xcite .",
    "the technique consists of element - wise normalization to zero mean and unit standard deviation . means and standard deviations are separately computed for each batch .",
    "note that in @xcite , the authors proposed the use of additional learnable parameters after the whitening .",
    "we found the effect of this operation to be negligible in most cases . except for the `` bn '' and `` bn+bm '' entries ( e.g. , in table [ tab : main ] )",
    ", we did not use the learnable parameters of bn . note that batch normalization may be related to the homeostatic plasticity mechanisms ( e.g. , synaptic scaling ) in the brain @xcite .    *",
    "batch manhattan ( bm ) * + we were first motivated by looking at how bp could tolerate noisy operations that could be seen as more easily implementable by the brain .",
    "we tried relaxing the weight updates by discarding the magnitudes of the gradients .",
    "let the weight at time @xmath33 be @xmath34 , the update rule is :    @xmath35    where @xmath36 is the learning rate .",
    "we tested several settings of @xmath37 as follows : + * setting 0 ( sgd ) * : @xmath38 + * setting 1 * : @xmath39 + * setting 2 * : @xmath40 + * setting 3 * : @xmath41 + where @xmath42 +   + where @xmath43 and @xmath44 are momentum and weight decay rates respectively .",
    "@xmath18 means taking the sign ( -1 or 1 ) , @xmath0 is the objective function , and @xmath45 denotes the indices of samples in the mini - batch . setting 0 is the sgd algorithm ( by `` sgd '' in this paper , we always refer to the mini - batch version with momentum and weight decay ) .",
    "setting 1 is same as 0 but rounding the accumulated gradients in a batch to its sign . setting 2 takes an extra final sign after adding the gradient term with momentum and weight decay terms . setting 3 is something in between 1 and 2 , where an final sign is taken , but not accumulated in the momentum term .",
    "we found these techniques to be surprisingly powerful in the sense that they did not lower performance in most cases ( as long as learning rates were reasonable ) .",
    "in fact , sometimes they improved performance .",
    "this was especially true for smaller training sets .",
    "recall that asymmetric bps tend to have exploding / vanishing gradients , these techniques are immune to such problems since the magnitudes of gradients are discarded .",
    "we also found that the performance of this technique was influenced by batch size on some experiments . in the cases of very small batch sizes , discarding the magnitudes of the weight updates was sometimes detrimental to performance .",
    "this class of update rule is very similar to a technique called the manhattan update rule , which can be considered as a simplified version of rprop @xcite .",
    "we suggest calling it `` batch manhattan '' ( bm ) to distinguish it from the stochastic version @xcite . by default , we used setting 1 for bm throughout the experiments a , b , c1 and c2 .",
    "the `` miscellaneous experiment '' at the end of the section [ sec : results ] demonstrates that settings 1 , 2 and 3 give similar performances , so the conclusions we draw broadly apply to all of them .",
    "since the invention of backpropagation ( bp ) @xcite , its biological plausibility has been a long - standing controversy .",
    "several authors have argued that bp is not biologically plausible @xcite .",
    "various biologically plausible modifications have been proposed .",
    "most involve bidirectional connections e.g. restricted boltzmann machines @xcite and so - called recirculation algorithms @xcite which despite their name provided , in the case of an autoencoder , an elegant early demonstration that adaptive backwards weight can work without being identical to the forward ones .",
    "recently , there have also been bp - free auto - encoders @xcite based on `` target propagation '' @xcite .    the most relevant work to ours is a recent paper by lillicrap et al .",
    "@xcite of which we became aware after most of this work was done .",
    "lillicrap et al .",
    "showed that fixed random feedback weights can support the learning of good representations for several simple tasks : ( i ) approximating a linear function , ( ii ) digit recognition on mnist and ( iii ) approximating the outputs of a random 3 or 4 layer nonlinear neural network .",
    "our work is very similar in spirit but rather different and perhaps complementary in its results , since we conclude that signs must be concordant between feedforward and corresponding feedback connections for consistent good performance , whereas the magnitudes do not matter , unlike lilicrap et al .",
    "experiments in which both signs and magnitudes were random ( but fixed ) . to explain the difference in our conclusions , it is useful to consider the following points : + * 1 .",
    "* we systematically explored performance of the algorithms using 15 different datasets because simple tasks like mnist by themselves do not always reveal differences between algorithms . +",
    "* we tested deeper networks , since the accuracy of asymmetric bp s credit assignment may critically attenuate with depth ( for task ( i ) and ( ii ) lillicrap et al . used a 3-layer ( 1 hidden layer ) fully - connected network , and for task ( iii ) they used a 3 or 4 layer fully - connected network , whereas in most of our experiments , we use deeper and larger cnns as shown in table [ tab : arch ] ) . +",
    "we found that local normalizations / stabilizations is critical for making asymmetric bp algorithms work .",
    "as shown by our results in table [ tab : exp_c_and_d ] , the random feedbacks scheme ( i.e. the `` rndf '' column ) suggested by lillicrap et al . seem to work well only on one or two tasks , performing close to chance on most of them . only when combined with batch normalization ( `` rndf+bn '' or `` rndf+bn+bm '' in table [ tab : exp_c_and_d ] ) , it appears to become competitive . +",
    "* we investigated several variants of asymmetric bps such as sign - concordance ( table [ tab : main ] and [ tab : percent_diff ] ) , batchwise - random vs. fixed - random feedbacks ( table [ tab : percent_diff ] ) and learning with clamped layers ( table [ tab : exp_c_and_d ] exp .",
    "c2 ) .    [ cols=\"^,^,^,^,^,^\",options=\"header \" , ]      + mnist & 0.67 & 0.99 & 1.30 & 1.09 & 0.55 & 0.83 & 0.72 & 0.61 + cifar & 22.73 & 23.98 & 23.09 & 20.47 & & & & + cifar100 & 55.15 & & & 52.82 & 57.19 & 53.12 & 52.38 & 54.68 + svhn & 9.06 & 10.77 & & & 8.73 & 9.67 & 10.54 & 9.20 + stl10 & 48.01 & & & 45.23 & 48.49 & & 47.71 & 46.45 + cal101 & 74.08 & & & & & & & +      in this experiment , we test the effect of * partial sign - concordance*. that is , we test settings 4 and 5 as described in section [ sec : abp ] . in these cases ,",
    "the feedback weight magnitudes were all random .",
    "strict sign - concordance was relaxed by manipulating the probability @xmath27 of concordance between feedforward and feedback weight signs .",
    "feedback weights @xmath46 depend on the matrix @xmath23 as defined in section [ sec : abp ] .",
    "table [ tab : percent_diff ] part 1 reports results from setting 4 , the case where a new @xmath21 and @xmath23 is sampled for each batch .",
    "table [ tab : percent_diff ] part 2 reports results of setting 5 , the case where @xmath21 and @xmath23 are fixed .",
    "the main observation from this experiment is that the performance declines as the level of sign - concordance decreases .",
    "results are shown in table [ tab : exp_c_and_d ] : * rndf : * fixed random feedbacks . * rndf+bn , rndf+bn+bm : * some combinations of rndf , bn and bm .",
    "* usf+bn+bm : * one of our best algorithms , for reference .",
    "the `` rndf '' setting is the same as the one proposed by @xcite .",
    "apparently it does not perform well on most datasets .",
    "however , combining it with batch normalization makes it significantly better .",
    "although it remains somewhat worse than its sign concordant counterpart .",
    "another observation is that random feedback does not work well with bm alone ( but better with bn+bm ) .",
    "the fact that random feedback weights can learn meaningful representations is somewhat surprising .",
    "we explore this phenomenon by running some control experiments , where we run two control models for each model of interest : * 1 . *",
    "( .)_bottom _ : the model s last layer is initialized randomly and clamped / frozen .",
    "all learning happens in the layers before the last layer .",
    "( .)_top _ : the model s layers before the last layer are initialized randomly and clamped / frozen .",
    "all learning happens in the last layer .",
    "results are shown in table [ tab : exp_c_and_d ] .",
    "there are some observations : * ( i ) * when only the last layer was allowed to adapt , all models behaved similarly .",
    "this was expected since the models only differed in the way they backpropagate errors . *",
    "( ii ) * with the last layer is clamped , random feedback can not learn meaningful representations . *",
    "( iii ) * in contrast , the models with sign concordant feedback can learn surprisingly good representations even with the last layer locked .",
    "we can draw the following conclusions from such observations : sign concordant feedback ensures that meaningful error signals reach lower layers by itself , while random feedback is not sufficient .",
    "if all layers can learn , random feedback seems to work via a `` mysterious co - adaptation '' between the last layer and the layers before it .",
    "this `` mysterious co - adaptation '' was first observed by @xcite , where it was called `` feedback alignment '' and some analyses were given .",
    "note that our experiment c shows that the effect is more significant if batch normalization is applied .",
    "we show that the 3 settings of bm ( as described in section [ sec : normalizations ] ) produce similar performances .",
    "this is the case for both symmetric and asymmetric bps .",
    "results are in table [ tab:3bm ] .",
    "this work aims to establish that there exist variants of the gradient backpropagation algorithm that could plausibly be implemented in the brain . to that end",
    "we considered the question : how important is weight symmetry to backpropagation ? through a series of experiments with increasingly asymmetric backpropagation algorithms ,",
    "our work complements a recent demonstration@xcite that perfect weight symmetry can be significantly relaxed while still retaining strong performance .",
    "these results show that batch normalization and/or batch manhattan are crucial for asymmetric backpropagation to work .",
    "furthermore , they are complementary operations that are better used together than individually .",
    "these results highlight the importance of sign - concordance to asymmetric backpropagation by systematically exploring how performance declines with its relaxation .",
    "finally , let us return to our original motivation .",
    "how does all this relate to the brain ?",
    "based on current neuroscientific understanding of cortical feedback , we can not make any claim about whether such asymmetric bp algorithms are actually implemented by the brain .",
    "nevertheless , this work shows that asymmetric bps , while having less constraints , are not computationally inferior to standard bp .",
    "so if the brain were to implement one of them , it could obtain most of the benefits of the standard algorithm .",
    "this work suggests a hypothesis that could be checked by empirical neuroscience research : if the brain does indeed implement an asymmetric bp algorithm , then there is likely to be a high degree of sign - concordance in cortical forward - backward connections .",
    "these empirical observations concerning batch manhattan updating may shed light on the general issue of how synaptic plasticity may implement learning algorithms .",
    "they show that changes of synaptic strength can be rather noisy .",
    "that is , the _ sign _ of a long term accumulation of synaptic potentiation or depression , rather than precise magnitude , is what is important .",
    "this scheme seems biologically implementable .",
    "we thank g. hinton for useful comments . this work was supported by the center for brains , minds and machines ( cbmm ) , funded by nsf stc award ccf  1231216 .",
    "fanello , s.  r. ; ciliberto , c. ; santoro , m. ; natale , l. ; metta , g. ; rosasco , l. ; and odone , f. 2013 .",
    "icub world : friendly robots help building good vision data - sets . in _",
    "computer vision and pattern recognition workshops ( cvprw ) , 2013 ieee conference on _ , 700705 .",
    "ieee .",
    "hinton , g. ; deng , l. ; yu , d. ; dahl , g.  e. ; mohamed , a .- r . ; jaitly , n. ; senior , a. ; vanhoucke , v. ; nguyen , p. ; sainath , t.  n. ; et  al .",
    "deep neural networks for acoustic modeling in speech recognition : the shared views of four research groups .",
    "29(6):8297 .",
    "mikolov , t. ; sutskever , i. ; chen , k. ; corrado , g.  s. ; and dean , j. 2013 . distributed representations of words and phrases and their compositionality . in _ advances in neural information processing systems ( nips )",
    "_ , 31113119 .",
    "netzer , y. ; wang , t. ; coates , a. ; bissacco , a. ; wu , b. ; and ng , a.  y. 2011 .",
    "reading digits in natural images with unsupervised feature learning . in",
    "_ nips workshop on deep learning and unsupervised feature learning _ ,",
    "volume 2011 ,  5 .",
    "nilsback , m .- e . , and zisserman , a. 2008 .",
    "automated flower classification over a large number of classes . in _ computer vision , graphics & image processing , 2008 .",
    "sixth indian conference on_. ieee .",
    "pinto , n. ; stone , z. ; zickler , t. ; and cox , d. 2011 .",
    "scaling up biologically - inspired computer vision : a case study in unconstrained face recognition on facebook . in _",
    "computer vision and pattern recognition workshops ( cvprw ) , 2011 ieee computer society conference on _ , 3542 .",
    "ieee .",
    "taigman , y. ; yang , m. ; ranzato , m. ; and wolf , l. 2014 .",
    "deepface : closing the gap to human - level performance in face verification . in _",
    "computer vision and pattern recognition ( cvpr ) , 2014 ieee conference on _ , 17011708 .",
    "ieee .",
    "vedaldi , a. , and lenc , k. 2015 .",
    "convolutional neural networks for matlab zamanidoost , e. ; bayat , f.  m. ; strukov , d. ; and kataeva , i. 2015 .",
    "manhattan rule training for memristive crossbar circuit pattern classifiers ."
  ],
  "abstract_text": [
    "<S> gradient backpropagation ( bp ) requires symmetric feedforward and feedback connections  the same weights must be used for forward and backward passes . </S>",
    "<S> this `` weight transport problem '' ( grossberg 1987 ) is thought to be one of the main reasons to doubt bp s biologically plausibility . </S>",
    "<S> using 15 different classification datasets , we systematically investigate to what extent bp really depends on weight symmetry . in a study that turned out to be surprisingly similar in spirit to lillicrap et al.s demonstration ( lillicrap et al . </S>",
    "<S> 2014 ) but orthogonal in its results , our experiments indicate that : ( 1 ) the magnitudes of feedback weights do not matter to performance ( 2 ) the signs of feedback weights do matter  the more concordant signs between feedforward and their corresponding feedback connections , the better ( 3 ) with feedback weights having random magnitudes and 100% concordant signs , we were able to achieve the same or even better performance than sgd . </S>",
    "<S> ( 4 ) some normalizations / stabilizations are indispensable for such asymmetric bp to work , namely batch normalization ( bn ) ( ioffe and szegedy 2015 ) and/or a `` batch manhattan '' ( bm ) update rule . </S>"
  ]
}
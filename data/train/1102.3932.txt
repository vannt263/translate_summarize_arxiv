{
  "article_text": [
    "repetitions in words is a well - researched topic . among the various themes studied , the binary overlap - free words play an important role , both historically and as an example exhibiting interesting structure . here by an _",
    "overlap _ we mean a word of the form @xmath1 , where @xmath2 is a single letter and @xmath3 is a ( possibly empty ) word .",
    "it is easy to see that neither the finite nor the infinite binary overlap - free words form a regular language .",
    "nevertheless , in 1980 , earl fife @xcite proved a theorem characterizing the infinite binary overlap - free words as encodings of paths in a finite automaton .",
    "his theorem was rather complicated to state and the proof was difficult .",
    "berstel @xcite later simplified the exposition , and both carpi @xcite and cassaigne @xcite gave an analogous analysis for the case of finite words .",
    "also see .    in this note",
    "we show how to use the factorization theorem of restivo and salemi to give an alternate ( and , we hope , significantly simpler ) proof of fife s theorem  here understood in the general sense of providing a finite automaton whose paths encode all infinite binary overlap - free words .    as a consequence we are able to disprove a conjecture on the fragility of overlap - free words .",
    "let @xmath4 be a finite alphabet .",
    "we let @xmath5 denote the set of all finite words over @xmath4 and @xmath6 denote the set of all ( right- ) infinite words over @xmath4 .",
    "we say @xmath7 is a _ factor _ of a word @xmath8 if there exist words @xmath9 such that @xmath10 .",
    "if @xmath3 is a finite word , then @xmath11 represents the infinite word @xmath12 .    as mentioned above",
    ", an _ overlap _ is a word of the form @xmath1 , where @xmath13 and @xmath14 .",
    "an example of an overlap in english is the word alfalfa .",
    "a finite or infinite word is _ overlap - free _ if it contains no finite factor that is an overlap .    from now on",
    "we fix @xmath15 .",
    "the most famous infinite binary overlap - free word is @xmath16 , the thue - morse word , defined as the fixed point , starting with @xmath17 , of the thue - morse morphism @xmath18 , which maps @xmath17 to @xmath19 and @xmath20 to @xmath21 .",
    "we have @xmath22 the morphism @xmath18 has a second fixed point , @xmath23 , which is obtained from @xmath16 by applying the complementation coding defined by @xmath24 and @xmath25 .",
    "we let @xmath26 denote the set of ( right- ) infinite binary overlap - free words .",
    "we now recall the infinite version of the factorization theorem of restivo and salemi as stated in .",
    "let @xmath27 , and let @xmath28 , where @xmath29 , @xmath30 , @xmath31 , @xmath32 , and @xmath33 .",
    "then there exists @xmath34 and @xmath35 such that @xmath36 .",
    "furthermore , this factorization is unique , and @xmath37 is uniquely determined by inspecting the first 5 letters of @xmath38 .",
    "we can now iterate the factorization theorem to get    every infinite overlap - free word @xmath39 can be written uniquely in the form @xmath40 with @xmath41 for @xmath42 , subject to the understanding that if there exists @xmath43 such that @xmath44 for @xmath45 , then we also need to specify whether the `` tail '' of the expansion represents @xmath46 or @xmath47 .",
    "furthermore , every truncated expansion @xmath48 is a prefix of @xmath39 , with the understanding that if @xmath49 , then we need to replace @xmath17 with either @xmath20 ( if the `` tail '' represents @xmath16 ) or @xmath50 ( if the `` tail '' represents @xmath51 ) .",
    "the form ( [ qq ] ) is unique , since each @xmath52 is uniquely determined by the first @xmath53 characters of the associated word .",
    "thus , we can associate each infinite binary overlap - free word @xmath39 with the essentially unique infinite sequence of indices @xmath54 coding elements in @xmath55 , as specified by ( [ qq ] ) . if @xmath56 ends in @xmath57",
    ", then we need an additional element ( either @xmath20 or @xmath50 ) to disambiguate between @xmath16 and @xmath51 as the `` tail '' . in our notation , we separate this additional element with a semicolon so that , for example , the string @xmath58 represents @xmath16 and @xmath59 represents @xmath51 .    other sequences of interest include @xmath60 , which codes @xmath61 , the lexicographically least infinite word , and @xmath62 , which codes the word having , in the @xmath63th position , the number of @xmath17 s in the binary expansion of @xmath63",
    ".    of course , not every possible sequence of @xmath64 of indices corresponds to an infinite overlap - free word .",
    "for example , every infinite word coded by @xmath65 represents @xmath66 and hence begins with @xmath67 and has an overlap .",
    "our goal is to characterize precisely , using a finite automaton , those infinite sequences corresponding to overlap - free words .",
    "we recall some basic facts about overlap - free words .",
    ". then    * @xmath68 ; * @xmath69 ; * @xmath70 and @xmath39 begins @xmath71 .",
    "[ l1 ]    see , for example , .",
    "we now define 11 subsets of @xmath26 : @xmath72    next , we describe the relationships between these classes :    let @xmath39 be an infinite binary word . then @xmath73 @xmath74 [ aak ]     + ( [ aa ] ) : follows immediately from lemma  [ l1 ] ( a ) .",
    "( [ ab ] ) , ( [ ad ] ) , ( [ bd ] ) , ( [ db ] ) : follow immediately from lemma  [ l1 ] ( b ) .",
    "( [ ac ] ) , ( [ ae ] ) , ( [ be ] ) , ( [ dc ] ) : follow immediately from lemma  [ l1 ] ( c ) .",
    "( [ bb ] ) : @xmath75 .",
    "( [ dd ] ) : just like ( [ bb ] ) .",
    "( [ ei ] ) : @xmath76 and @xmath77 begins with @xmath78 and @xmath38 begins with @xmath79 ) .",
    "( [ cf ] ) : just like ( [ ei ] ) .",
    "( [ ec ] ) : @xmath80 and @xmath81 begins with @xmath82 and @xmath38 begins with @xmath83 .    ( [ ce ] ) : just like ( [ ec ] ) .",
    "( [ ij ] ) : @xmath84 and @xmath81 begins with @xmath85 and @xmath38 begins with @xmath86 and @xmath38 begins with @xmath17 ) .",
    "( [ fg ] ) : just like ( [ ij ] ) .",
    "( [ jk ] ) : @xmath87 and @xmath77 begins with @xmath88 and @xmath38 begins with @xmath89 .",
    "( [ gh ] ) , ( [ kj ] ) , ( [ hg ] ) : just like ( [ jk ] ) .",
    "( [ jb ] ) : @xmath90 and @xmath81 begins with @xmath91 .",
    "( [ gd ] ) : just like ( [ jb ] ) .",
    "( [ kc ] ) : @xmath92 and @xmath81 begins with @xmath93 and @xmath39 begins with @xmath94 .",
    "( [ he ] ) : just like ( [ kc ] ) .",
    "we can now use the result of the previous lemma to create an @xmath95-state automaton that accepts all infinite sequences @xmath64 over @xmath96 such that @xmath97 is overlap - free .",
    "each state represents one of the sets @xmath98 defined above , and the transitions are given by lemma  [ aak ] .    of course",
    ", we also need to verify that transitions not shown correspond to the empty set of infinite words .",
    "for example , a transition out of @xmath99 on the symbol @xmath0 would correspond to the set @xmath100 .",
    "but if @xmath39 begins with @xmath17 , then @xmath101 contains the overlap @xmath67 as a factor , whereas if @xmath39 begins with @xmath21 , then @xmath102 contains the overlap @xmath103 as a factor , and if @xmath39 begins with @xmath95 , then @xmath104 contains @xmath105 as a factor .",
    "similarly , we can ( somewhat tediously ) verify that all other transitions not given in figure  [ nice ] correspond to the empty set :    @xmath106    the proof of most of these is immediate .",
    "( we have not listed @xmath107 for @xmath108 , nor @xmath109 for @xmath110 , nor @xmath111 for @xmath110 , as these are symmetric with other cases . )",
    "the only one that requires some thought is @xmath112 :    * if @xmath39 begins @xmath79 , then @xmath113 , which has @xmath114 as a factor . *",
    "if @xmath39 begins @xmath19 , then @xmath115 , which has @xmath116 as a factor . * if @xmath39 begins @xmath20 , then @xmath117 , which has @xmath118 as a factor .    from lemma  [ aak ] and the results above , we get    every infinite binary overlap - free word @xmath39 is encoded by an infinite path , starting in @xmath119 , through the automaton in figure  [ nice ] .",
    "every infinite path through the automaton not ending in @xmath57 codes a unique infinite binary overlap - free word @xmath39 .",
    "if a path @xmath56 ends in @xmath57 and this suffix corresponds to a cycle on state a or a cycle between states b and d , then @xmath39 is coded by either @xmath120 or @xmath121 . if a path @xmath56 ends in @xmath57 and this suffix corresponds to a cycle between states j and k , then @xmath39 is coded by @xmath120 .",
    "if a path @xmath56 ends in @xmath57 and this suffix corresponds to a cycle between states g and h , then @xmath39 is coded by @xmath121 .",
    "[ main ]    each of the 11 sets @xmath98 is uncountable .",
    "we prove this for @xmath122 , with the proof for the other sets being similar .",
    "elements in the set @xmath122 correspond to those infinite paths leaving the state @xmath122 in figure  [ nice ] .",
    "it therefore suffices to produce uncountably many distinct paths leaving @xmath122 .",
    "one way to do this , for example , is by @xmath123 .",
    "we now recover a theorem of :    the lexicographically least infinite binary overlap - free word is @xmath124 .",
    "let @xmath39 be the lexicographically least infinite word , and let @xmath125 be its code .",
    "then @xmath126 $ ] must be @xmath0 , since any other choice codes a word that starts with @xmath19 or something lexicographically greater . once @xmath126 = 2 $ ] is chosen , the next two symbols must be @xmath127 = 03 $ ] .",
    "now we are in state @xmath128 .",
    "we argue that the lexicographically least string that follows causes us to alternate between states @xmath128 and @xmath129 on @xmath17 , producing @xmath130 . for",
    "otherwise our only choices are @xmath131 , @xmath132 , or ( if we are in @xmath128 ) @xmath133 as the next two symbols , and all of these code a word lexicographically greater than @xmath134 .",
    "hence @xmath135 is the code for the lexicographically least sequence , and this codes @xmath124 .",
    "as a consequence of theorem  [ main ] , we can give a complete description of the infinite binary overlap - free words that are @xmath0-automatic . recall that an infinite word @xmath136 is @xmath137-automatic if there exists a deterministic finite automaton with output that , on input @xmath138 expressed in base @xmath137 , produces an output associated with the state last visited that is equal to @xmath139 .",
    "an infinite binary overlap - free word is @xmath0-automatic if and only if its code is both specified by the dfa given above in figure 1 , and is ultimately periodic .",
    "[ auto ]    first , we need two lemmas :    an infinite binary word @xmath140 is @xmath0-automatic if and only if @xmath77 is @xmath0-automatic .",
    "[ tm ]    for one direction , we use the fact that the class of @xmath137-automatic sequences is closed under uniform morphisms ( ) .",
    "so if @xmath39 is @xmath0-automatic , so is @xmath77 .",
    "for the other , we use the well - known characterization of automatic sequences in terms of the @xmath137-kernel : a sequence @xmath141 is @xmath137-automatic if and only if its @xmath137-kernel defined by @xmath142 is finite .",
    "furthermore , each sequence in the @xmath137-kernel is @xmath137-automatic .",
    "now if @xmath143 , then @xmath144 .",
    "so one of the sequences in the @xmath0-kernel of @xmath125 is @xmath39 , and if @xmath125 is @xmath0-automatic , then so is @xmath39 .",
    "now we can prove theorem  [ auto ] .",
    "suppose the code of @xmath39 is ultimately periodic .",
    "then we can write its code as @xmath145 for some finite words @xmath7 and @xmath146 .",
    "since the class of @xmath0-automatic sequences is closed under appending a finite prefix , by lemma  [ tm ] , it suffices to show that the word coded by @xmath147 is @xmath0-automatic .",
    "the word @xmath147 codes an overlap - free word @xmath148 satisfying @xmath149 , where @xmath150 is a finite word and @xmath151 is a power of @xmath18 .",
    "if @xmath150 is empty the result is clear .",
    "otherwise , by iteration , we get that @xmath152    the @xmath0-kernel of a sequence is obtained by repeated _ @xmath0-decimation _ , that is , recursively splitting a sequence into its even- and odd - indexed terms .",
    "when we apply @xmath0-decimation to @xmath153 , where @xmath150 is a finite word , we get @xmath154 and @xmath155 .",
    "these words are both of even length , provided @xmath137 is at least @xmath20 .",
    "hence iteratively applying @xmath0-decimation to @xmath156 , as given in ( [ varph ] ) , shows that if @xmath157 , then the @xmath0-kernel of @xmath156 is contained in @xmath158 which is a finite set .    on the other hand ,",
    "suppose the code for @xmath39 is not ultimately periodic .",
    "then we show that the @xmath0-kernel is infinite . to see this , note that the code for @xmath39 contains a @xmath0 or @xmath159 only at the beginning , so we can assume without loss of generality that the code for @xmath39 contains only the letters @xmath160 .",
    "now it is easy to see that if the code for @xmath39 is @xmath161 for some letter @xmath162 and infinite string @xmath163 , then one of the sequences in the @xmath0-kernel ( obtained by taking either the odd- or even - indexed terms ) is either coded by @xmath125 or its complement is coded by @xmath125 . since the code for @xmath39 is not ultimately periodic , there are infinitely many distinct sequences in the orbit of the code for @xmath39 , under the shift .",
    "( by the orbit of @xmath125 we mean the set of sequences of the form @xmath164 $ ] for @xmath165 . )",
    "now infinitely many of these sequences correspond to a sequence in the @xmath0-kernel , or its complement .",
    "hence @xmath39 is not @xmath0-automatic .",
    "brown , rampersad , shallit , and vasiga showed that the thue - morse word @xmath16 is _ fragile _ in the following sense : if any finite nonempty set of positions is chosen , and the bits in those positions are simultaneously flipped to the complement of their original values , the result has an overlap .",
    "it is natural to wonder if a similar result holds more generally for all overlap - free words .",
    "however , the statement must be modified in this more general setting , as ( for example ) both @xmath166 and @xmath167 are overlap - free .",
    "the author made the following conjecture at the oberwolfach meeting in 2010 :    for each infinite binary overlap - free word @xmath156 there exists a constant @xmath168 ( depending on @xmath156 ) such that if the bits at any finite nonempty set of positions @xmath169 are flipped , then the result has an overlap .",
    "using our result we can disprove this conjecture . for",
    "consider the infinite words coded by @xmath170 . by examining the automaton , each such word",
    "is easily seen to be a valid code for an overlap - free word .",
    "these words have blocks that line up exactly at the same positions , but each @xmath171 block can be replaced by the appropriate power of @xmath18 evaluated at either @xmath17 or @xmath20 , and each such choice gives a distinct overlap - free word .",
    "according to a theorem of karhumki and the author , there is a similar factorization theorem for all exponents @xmath172 with @xmath173 .",
    "recently we have proven similar results for @xmath174 .",
    "j.  berstel .",
    "a rewriting of fife s theorem about overlap - free words . in j.",
    "karhumki , h.  maurer , and g.  rozenberg , editors , _ results and trends in theoretical computer science _ , vol .",
    "812 of _ lecture notes in computer science _ , pp .",
    "springer - verlag , 1994 .",
    "j.  cassaigne . counting overlap - free binary words . in p.",
    "enjalbert , a.  finkel , and k.  w. wagner , editors , _ stacs 93 , proc .",
    "10th symp .",
    "theoretical aspects of comp .",
    "_ , vol .",
    "665 of _ lecture notes in computer science _ , pp .",
    "springer - verlag , 1993 .",
    "a.  restivo and s.  salemi .",
    "overlap free words on two symbols . in m.",
    "nivat and d.  perrin , editors , _ automata on infinite words _ , vol .  192 of _ lecture notes in computer science _",
    ", pp .  198206 .",
    "springer - verlag , 1985 ."
  ],
  "abstract_text": [
    "<S> we give another proof of a theorem of fife  understood broadly as providing a finite automaton that gives a complete description of all infinite binary overlap - free words . </S>",
    "<S> our proof is significantly simpler than those in the literature . as an application we give a complete characterization of the overlap - free words that are @xmath0-automatic . </S>"
  ]
}
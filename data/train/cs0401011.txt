{
  "article_text": [
    "this paper focuses on the average complexity of solving random 3-sat instances using backtrack algorithms .",
    "being an np - complete problem , 3-sat is not thought to be solvable in an efficient way , _",
    "i.e. _ in time growing at most polynomially with @xmath3 .",
    "in practice , one therefore resorts to methods that need , _ a priori _ , exponentially large computational resources .",
    "one of these algorithms is the ubiquitous davis  putnam  loveland  logemann ( dpll ) solving procedure@xcite .",
    "dpll is a complete search algorithm based on backtracking ; its operation is briefly recalled in figure  1 .",
    "the sequence of assignments of variables made by dpll in the course of instance solving can be represented as a search tree , whose size @xmath7 ( number of nodes ) is a convenient measure of the hardness of resolution .",
    "some examples of search trees are presented in figure  [ trees ] .    in the past few years",
    ", much experimental and theoretical progress has been made on the probabilistic analysis of 3-sat @xcite .",
    "distributions of random instances controlled by few parameters are particularly useful in shedding light on the onset of complexity .",
    "an example that has attracted a lot of attention over the past years is random 3-sat : all clauses are drawn randomly and each variable negated or left unchanged with equal probabilities .",
    "experiments @xcite and theory @xcite indicate that clauses can almost surely always ( respectively never ) be simultaneously satisfied if @xmath1 is smaller ( resp .",
    "larger ) than a critical threshold @xmath8 as soon as the numbers @xmath9 of clauses and @xmath3 of variables go to infinity at a fixed ratio @xmath1 .",
    "this phase transition @xcite is accompanied by a drastic peak in hardness at threshold @xcite .",
    "the emerging pattern of complexity is as follows . at small ratios @xmath10 , where @xmath11 depends on the heuristic used by dpll , instances are almost surely satisfiable ( sat ) ,",
    "see @xcite and @xcite for recent reviews .",
    "the size @xmath7 of the associated search tree scales , with high probability , linearly with the number @xmath3 of variables , and almost no backtracking is present @xcite ( figure  [ trees]a ) . above the critical ratio , that is when @xmath12 , instances are a.s .",
    "unsatisfiable ( unsat ) and proofs of refutation are obtained through massive backtracking ( figure  [ trees]b ) , leading to an exponential hardness : @xmath13 with @xmath14  @xcite . in the intermediate range , @xmath15 ,",
    "finding a solution a.s . requires exponential effort ( @xmath14 ) @xcite .",
    "the aim of this article is two - fold .",
    "first , we propose a simple and intuitive framework to unify the above findings .",
    "this framework is presented in section 2 .",
    "it is based on the statistical physics notions of dynamical trajectories and phase diagram , and was , to some extent , implicitly contained in the pioneering analysis of search heuristics by @xcite . secondly , we present in section 3 a quantitative study of the growth of the search tree in the unsat regime .",
    "such a study has been lacking so far due to the formidable difficulty in taking into account the effect of massive backtracking on the operation of dpll .",
    "we first establish an exact relationship between the average size of the search tree and the powers of the evolution operator encoding the elementary steps of the search heuristic .",
    "this equivalence is then used ( in a non rigorous way ) to accurately estimate the logarithm @xmath6 of the average complexity @xmath7 as a function of @xmath1 , @xmath16 \\quad , \\ ] ] where @xmath17 denotes the expectation value for given @xmath3 and @xmath1 .",
    "the approach emphasizes the relevance of partial differential equations to analyse algorithms in presence of massive backtracking , as opposed to ordinary differential equations in the absence of the latter @xcite . in section 4",
    ", we focus upon the upper sat regime _",
    "i.e. _ upon ratios @xmath18 . combining the framework of section 2 and the analysis of section 3 we unveil the structure of the search tree ( figure  [ trees]c ) and calculate @xmath6 as a function of the ratio @xmath1 of the 3-sat instance to be solved .    for the sake of clarity and since the style of our approach may look unusual to the computer scientist reader , the status of the different calculations and results ( experimental , exact , conjectured , approximate , ... ) are made explicit throughout the article .",
    ".5 cm    .5 cm",
    "the action of dpll on an instance of 3-sat causes changes to the overall numbers of variables and clauses , and thus of the ratio @xmath1 .",
    "furthermore , dpll reduces some 3-clauses to 2-clauses . a mixed 2+p - sat distribution , where @xmath2 is the fraction of 3-clauses , can be used to model what remains of the input instance at a node of the search tree .",
    "using experiments and methods from statistical mechanics @xcite , the threshold line @xmath19 , separating sat from unsat phases , may be estimated with the results shown in figure  [ diag ] . for @xmath20 , _",
    "i.e. _ to the left of point t , the threshold line is given by @xmath21 , as rigorously confirmed by @xcite , and saturates the upper bound for the satisfaction of 2-clauses .",
    "above @xmath22 , no exact value for @xmath19 is known .",
    "note that @xmath8 corresponds to @xmath23 .",
    "the phase diagram of 2+p - sat is the natural space in which dpll dynamic takes place .",
    "an input 3-sat instance with ratio @xmath1 shows up on the right vertical boundary of figure  [ diag ] as a point of coordinates @xmath24 . under the action of dpll , the representative point moves aside from the 3-sat axis and follows a trajectory",
    "this trajectory obviously depends on the heuristic of split followed by dpll ( figure  1 ) .",
    "possible simple heuristics are @xcite ,    * _ unit - clause ( uc ) : _ randomly pick up a literal among a unit clause if any , or any unset variable otherwise . * _ generalized unit - clause ( guc ) : _ randomly pick up a literal among the shortest avalaible clauses . * _ short clause with majority ( sc@xmath25 ) : _ randomly pick up a literal among unit clauses if any ; otherwise randomly pick up an unset variable @xmath26 , count the numbers of occurences @xmath27 of @xmath26 , @xmath28 in 3-clauses , and choose @xmath26 ( respectively @xmath28 ) if @xmath29 ( resp .",
    "@xmath30 ) . when @xmath31 , @xmath26 and @xmath28 are equally likely to be chosen .",
    "rigorous mathematical analysis , undertaken to provide rigorous bounds to the critical threshold @xmath32 , have so far been restricted to the action of dpll prior to any backtracking , that is , to the first descent of the algorithm in the search tree .",
    "the corresponding search branch is drawn on figure  [ trees]a .",
    "these studies rely on the two following facts :    first , the representative point of the instance treated by dpll does not `` leave '' the 2+p - sat phase diagram .",
    "in other words , the instance is , at any stage of the search process , uniformly distributed from the 2+p - sat distribution conditioned to its clause  per  variable ratio @xmath1 and fraction of 3-clauses @xmath2 .",
    "this assumption is not true for all heuristics of split , but holds for the above examples ( @xmath33 , @xmath34 , @xmath35 ) @xcite .",
    "analysis of more sophisticated heuristics require to handle more complex instance distributions @xcite .",
    "secondly , the trajectory followed by an instance in the course of resolution is a stochastic object , due to the randomness of the instance and of the assignments done by dpll . in the large size limit ( @xmath36 ) , this trajectory gets concentrated around its average locus in the 2+p - sat phase diagram .",
    "this concentration phenomenon results from general properties of markov chains @xcite .",
    "let us briefly recall @xcite analysis of the average trajectory corresponding to the action of dpll prior to backtracking .",
    "the ratio of clauses per variable of the 3-sat instance to be solved will be denoted by @xmath37 .",
    "the numbers of 2 and 3-clauses are initially equal to @xmath38 respectively . under the action of dpll , @xmath39 and",
    "@xmath40 follow a markovian stochastic evolution process , as the depth @xmath41 along the branch ( number of assigned variables ) increases .",
    "both @xmath39 and @xmath40 are concentrated around their expectation values , the densities @xmath42 $ ] ( @xmath43 ) of which obey a set of coupled ordinary differential equations ( ode ) @xcite , @xmath44 where @xmath45 is the probability that dpll fixes a variable at depth @xmath46 ( fraction of assigned variables ) through unit - propagation .",
    "function @xmath47 depends upon the heuristic : @xmath48 , @xmath49 ( if @xmath50 ; for @xmath51 , see @xcite ) , @xmath52 where @xmath53 and @xmath54 is the @xmath55 modified bessel function . to obtain the single branch trajectory in the phase diagram of figure  [ diag ]",
    ", we solve odes ( [ ode ] ) with initial conditions @xmath56 , and perform the change of variables @xmath57    results are shown for the guc heuristics and starting ratios @xmath58 and 2.8 in figure  [ diag ] .",
    "the trajectory , indicated by a light dashed line , first heads to the left and then reverses to the right until reaching a point on the 3-sat axis at a small ratio .",
    "further action of dpll leads to a rapid elimination of the remaining clauses and the trajectory ends up at the right lower corner s , where a solution is found .",
    "@xcite have shown that , for ratios @xmath59 ( for the guc heuristics ) , the full search tree essentially reduces to a single branch , and is thus entirely described by the odes ( [ ode ] ) .",
    "the amount of backtracking necessary to reach a solution is bounded from above by a power of @xmath60 .",
    "the average size of the branch , @xmath7 , scales linearly with @xmath3 with a multiplicative factor @xmath61 that can be calculated @xcite .",
    "the boundary @xmath11 of this easy sat region can be defined as the largest initial ratio @xmath37 such that the branch trajectory @xmath62 issued from @xmath63 never leaves the sat phase during dpll action . in other words ,",
    "the instance essentially keeps being sat throughout the resolution process .",
    "we shall see in section 4 this does not hold for sat instances with ratios @xmath64 .",
    "in this section , we present an analysis of search trees corresponding to unsat instances , that is , in presence of massive backtracking .",
    "we first report results from numerical experiments , then expose our analytical approach to compute the complexity of resolution ( size of search tree ) .      for ratios above threshold ( @xmath65 ) ,",
    "instances almost never have a solution but a considerable amount of backtracking is necessary before proving that clauses are incompatible .",
    "figure  [ trees]b shows a generic unsat , or refutation , tree .",
    "in contrast to the previous section , the sequence of points @xmath66 attached to the nodes of the search tree do not arrange along a line any longer , but rather form a cloud with a finite extension in the phase diagram of figure  [ diag ] .",
    "examples of clouds are provided on figure  [ patch ] .",
    "1.5 cm    @xmath67 .3 cm    the number of points in a cloud _ i.e. _ the size @xmath7 of its associated search tree grows exponentially with @xmath3 @xcite .",
    "it is thus convenient to define its logarithm @xmath6 through @xmath68 .",
    "we experimentally measured @xmath7 , and averaged its logarithm @xmath6 over a large number of instances .",
    "results have then be extrapolated to the @xmath69 limit @xcite and are reported in table  1 .",
    "@xmath6 is a decreasing function of @xmath37 @xcite : the larger @xmath70 , the larger the number of clauses affected by a split , and the earlier a contradiction is detected",
    ". we will use the vocable `` branch '' to denote a path in the refutation tree which joins the top node ( root ) to a contradiction ( leaf ) .",
    "the number of branches , @xmath71 , is related to the number of nodes , @xmath7 , through the relation @xmath72 valid for any complete binary tree . as far as exponential ( in @xmath3 ) scalings are concerned , the logarithm of @xmath71 ( divided by @xmath3 ) equals @xmath6 . in the following paragraph",
    ", we show how @xmath71 can be estimated through the use of a matrix formalism .",
    "1.5 cm   denotes the depth in the tree , that is the number of variables assigned by dpll along each branch . at depth @xmath41 , one literal is chosen on each branch among 1-clauses ( unit - propagation , grey circles not represented on figure 2 ) , or 2,3-clauses ( splitting , black circles as in figure  2 ) .",
    "if a contradiction occurs as a result of unit - propagation , the branch gets marked with c and dies out .",
    "the growth of the tree proceeds until all branches carry c leaves .",
    "the resulting tree is identical to the one built through the usual , sequential operation of dpll .",
    ", title=\"fig : \" ] .5 cm      the probabilistic analysis of dpll in the unsat regime appears to be a formidable task since the search tree of figure  [ trees]b is the output of a complex , sequential process : nodes and edges are added by dpll through successive descents and backtrackings ( depth - first search ) .",
    "we have imagined a different building up of the refutation tree , which results in the same complete tree but can be mathematically analyzed . in our imaginary process ( figure  [ struct ] ) , the tree grows in parallel , layer after layer ( breadth - first search ) . at time @xmath73",
    ", the tree reduces to a root node , to which is attached the 3-sat instance to be solved , and an attached outgoing edge . at time @xmath41 , that is , after having assigned @xmath41 variables in the instance attached to each branch , the tree is made of @xmath74 branches , each one carrying a partial assignment of variables . at next time step @xmath75",
    ", a new layer is added by assigning , according to dpll heuristic , one more variable along every branch . as a result",
    ", a branch may keep growing through unitary propagation , get hit by a contradiction and die out , or split if the partial assignment does not induce unit clauses .",
    "this parallel growth process is markovian , and can be encoded in an instance  dependent matrix we now construct .",
    "to do so , we need some preliminary definitions :    partial state of variables .",
    "the partial state @xmath76 of a boolean variable @xmath77 is one of the three following possibilities : undetermined ( @xmath78 ) if the variable has not been assigned by the search heuristic yet , true ( @xmath46 ) if the variable is partially assigned to true , false ( @xmath79 ) if the variable is partially assigned to false .",
    "the partial state @xmath80 of a set of boolean variables @xmath81 is the collection of the states of its elements , @xmath82 .",
    "let @xmath83 be an instance of the sat problem , defined over a set of boolean variables @xmath84 with partial state @xmath80 .",
    "a clause of @xmath83 is said to be    * satisfied if at least one of its literals is true according to @xmath80 ; * unsatisfied , or violated if all its literals are false according to @xmath80 ; * undetermined otherwise ; then its ` type ' is the number @xmath85 of undetermined variables it includes .",
    "the instance @xmath83 is said to be satisfied if all its clauses are satisfied , unsatisfied if one ( at least ) of its clauses is violated , undetermined otherwise .",
    "the set of partial states that violate @xmath86 is denoted by @xmath87 .",
    "vector space attached to a variable .",
    "to each boolean variable @xmath77 is associated a three dimensional vector space @xmath88 with spanning basis @xmath89 , @xmath90 , @xmath91 , orthonormal with respect to the dot ( inner ) product denoted by @xmath92 , @xmath93 the partial state attached to a basis vector @xmath94 is @xmath76 ( = @xmath95 .",
    "letters @xmath78 , @xmath46 , @xmath79 stand for the different partial states the variable may acquire in the course of the search process .",
    "note that the coefficients of the decomposition of any vector @xmath96 over the spanning basis , @xmath97 can be obtained through use of the dot product : @xmath98 with @xmath99 . by extension",
    ", @xmath100 denotes the transposed of vector @xmath101 .",
    "vector space attached to a set of variables .",
    "we associate to the set @xmath81 of @xmath3 boolean variables the @xmath102dimensional vector space @xmath103 .",
    "the spanning basis of @xmath104 is the tensor product of the spanning basis of the @xmath105 s . to lighten notations ,",
    "we shall write @xmath106 for @xmath107 . the partial state attached to a basis vector @xmath108 is @xmath109 .",
    "the dot product naturally extends over @xmath104 : @xmath110 if @xmath111 , 0 otherwise .",
    "any element @xmath112 can be uniquely decomposed as a linear combination of vectors from the spanning basis .",
    "two examples of vectors are @xmath113 and @xmath114 , respectively the sum of all vectors in the spanning basis and the fully undetermined vector , @xmath115 where @xmath116 is the identity operator on @xmath104 . to establish identity ( [ closure ] ) , apply the left hand side operator to any vector @xmath117 and take advantage of the orthonormality of the spanning basis .",
    "( heuristic - induced ) transition probabilities    let @xmath118 be a partial state which does not violate instance @xmath86 .",
    "call @xmath119 , with @xmath120 and @xmath121 , the partial state obtained from @xmath80 by replacing @xmath122 with @xmath77 .",
    "the probability that the heuristic under consideration ( uc , guc , ... ) chooses to assign variable @xmath123 when presented partial state @xmath80 is denoted by @xmath124 .",
    "the probability that the heuristic under consideration then fixes variable @xmath123 to @xmath125 is denoted by @xmath126 .",
    "a few elementary facts about transition probabilities are :    1 .",
    "@xmath127 if @xmath128 .",
    "2 .   @xmath129 .",
    "3 .   assume that the number @xmath130 of undetermined clauses of type 1 ( unit clauses ) is larger or equal to unity .",
    "call @xmath131 the number of unit clauses containing variable @xmath123 , and @xmath132 the number of unit clauses satisfied if @xmath123 equals @xmath133 .",
    "clearly @xmath134 . then , as a result of unit  propagation , @xmath135 4 .",
    "in the absence of unitary clause ( @xmath136 ) , transition probabilities depend on the details of the heuristic .",
    "for instance , in the case of the uc heuristic , 1 .",
    "if @xmath137 , @xmath138 and @xmath139 , 2 .",
    "if @xmath128 , @xmath127 , + where @xmath140 is the number of undetermined variables in partial state @xmath80 .",
    "the sum of transition probabilities from a partial state @xmath80 is equal to unity , @xmath141 = 1 \\quad .\\ ] ]    it is important to stress that the definition of the transition probabilities does not make any reference to any type of backtracking .",
    "it relies on the notion of variable assignement through the heuristic of search only .",
    "let us now introduce the    ( heuristic - induced ) evolution operator .",
    "the evolution operator is a linear operator @xmath142 acting on @xmath143 encoding the action of dpll for a given unsatisfiable instance @xmath86 .",
    "its matrix elements in the spanning basis are    1 .   if @xmath80 violates @xmath83 , @xmath144 2 .",
    "if @xmath80 does not violate @xmath83 , @xmath145    where @xmath146 are the attached partial states to @xmath147 , and @xmath148 is the number of undetermined clauses of type 1 ( unitary clauses ) for partial state @xmath80 .",
    "notice that we use the same notation , @xmath142 , for the operator and its matrix in the spanning basis .",
    "the different cases encountered in the above definition of @xmath142 are symbolized in figure  [ thm ] .",
    "we may now conclude :    branch function and average size of refutation tree    call branch function the function @xmath71 with integer - valued argument @xmath41 , @xmath149 where @xmath142 is the evolution operator associated to the unsatisfiable instance @xmath83 , @xmath150 denotes the @xmath151 ( matricial ) power of @xmath152 , and vectors @xmath153 are defined in ( [ sigvec],[uvec ] ) .",
    "then , there exist two instance ",
    "dependent integers @xmath154 and @xmath155 such that , @xmath156 furthermore , @xmath157 is the expectation value over the random assignments of variables of the size ( number of leaves ) of the search tree produced by dpll to refute @xmath86 .",
    "the smallest non zero @xmath158 for which ( [ statq ] ) holds is the largest number of variables that the heuristic needs to assign to reach a contradiction .",
    "proof of theorem 6    let @xmath80 be a partial state .",
    "we call refutation tree built from @xmath80 a complete search tree that proves the unsatisfiability of @xmath86 conditioned to the fact that dpll is allowed to assign only variables which are undetermined in @xmath80 .",
    "the height of the search tree is the maximal number of assignments leading from the root node ( attached to partial state @xmath80 ) to a contradictory leaf .",
    "let @xmath41 be a positive integer .",
    "we call @xmath159 the average size ( number of leaves ) of refutation trees of height @xmath160 that can be built from partial state @xmath80 . clearly , @xmath161 for all @xmath162 , and @xmath163 if @xmath164 .",
    "recall @xmath87 is the set of violating partial states from definition 1 .",
    "assume now @xmath41 is an integer larger or equal to 1 , @xmath80 a partial state with @xmath148 unitary clauses .",
    "our parallel representation of dpll allows us to write simple recursion relations :    1 .   if @xmath165 , @xmath166 .",
    "2 .   if @xmath167 and @xmath168 , @xmath169 3 .",
    "if @xmath167 and @xmath170 , @xmath171 \\quad .\\ ] ]    these three different cases are symbolized on figure  [ thm]a , b and c respectively . from definitions ( [ defmu],[defms ] ) , these recursion relations are equivalent to @xmath172 for any partial state @xmath80 .",
    "let @xmath173 be the vector of @xmath143 whose coefficients on the spanning basis @xmath174 are the @xmath175 s . in particular , @xmath176 then identity ( [ transpo ] ) can be written as @xmath177 where @xmath178 is the transposed of the evolution operator .",
    "note that the branch function ( [ funcq ] ) is simply @xmath179 .",
    "we deduce @xmath180 where the second sum runs over all @xmath181 sequences @xmath182 of @xmath41 partial states with associated weight @xmath183 the length of a sequence is the number of partial states it includes .",
    "we call @xmath184genuine a sequence of partial states @xmath185 with non zero weight ( [ weightseq ] )",
    ". the second sum on the right hand side of equation ( [ funcqprim ] ) may be rewritten as a sum over all @xmath184genuine sequences @xmath185 of length @xmath41 only .",
    "take @xmath186 .",
    "any @xmath184-genuine sequence @xmath187 of length @xmath188 includes at least one partial state belonging to @xmath87 .",
    "suppose this is not true .",
    "there exists a genuine sequence @xmath189 with @xmath190 , @xmath191 .",
    "call @xmath192 the number of undetermined variables in partial state @xmath193 . since the sequence is genuine , @xmath194 for every @xmath41 comprised between 1 and @xmath188 . from the evolution operator definition ( [ defms ] ) , @xmath193 contains exactly one more undetermined variable than @xmath195 , and @xmath196 for all @xmath197 .",
    "hence @xmath198 . but @xmath199 and @xmath200 are , by definition , integer numbers comprised between 0 and @xmath3 .    from lemma 7 , the index @xmath201 of a @xmath184genuine sequence @xmath187 of length @xmath188 , @xmath202 exists and is larger , or equal , to @xmath203 .",
    "let us define @xmath204 from definition ( [ defmu ] ) , @xmath187 is simply @xmath184 repeated @xmath201 times followed by @xmath205 , and @xmath206 .",
    "call @xmath207 the smallest index of all @xmath184-genuine sequences of length @xmath188 , and @xmath208 the minimum of @xmath209 over @xmath186 . then , from equation ( [ funcqprim ] ) , @xmath210 where @xmath211 .",
    "thus @xmath212 is a right eigenvector of @xmath178 with eigenvalue unity , and @xmath213 for all @xmath214 .",
    "@xmath158 , which depends upon instance @xmath86 , is the length of the longest genuine sequence without repetition .",
    "it is the maximal number of ( undetermined ) variables to be fixed before a contradiction is found .",
    "take @xmath164 .",
    "then there is no @xmath80-genuine sequence of length @xmath158 .",
    "suppose this is not true .",
    "there exist @xmath164 and a @xmath80genuine sequence @xmath215 of length @xmath158 .",
    "as @xmath80 does not violate @xmath86 , and @xmath86 is not satisfiable , there are still some undetermined variables in partial state @xmath80 .",
    "a certain number of them , say @xmath216 , must be assigned to some @xmath217 values to reach a contradiction , that is , a partial state @xmath186 .",
    "therefore there exists a @xmath184genuine sequence , @xmath218 , of length @xmath216 ending with @xmath80 and with no repeated partial state .",
    "concatenating @xmath218 and @xmath215 , we obtain a @xmath184genuine sequence of length @xmath219 and without repetition , in contradiction with the above result .    using lemma 8",
    ", we may replace @xmath220 in equation ( [ funcqprim ] ) with @xmath113 , and find @xmath221 for all @xmath214 . hence",
    ", @xmath222 is the average size ( over the random assignments made by the heuristic ) of the refutation tree to instance @xmath83 generated from the fully undetermined partial state .    .",
    "* a*. if the partial state @xmath80 already violates the instance @xmath86 , it is left unchanged . *",
    "b*. if the partial state does not violate @xmath83 and there is at least one unitary clause , a variable is fixed through unit propagation ( grey node ) e.g. @xmath223 .",
    "the output partial state is @xmath224 . *",
    "c*. if the partial state does not violate @xmath83 and there is no unitary clause , a variable @xmath123 is fixed through splitting ( black node ) .",
    "two partial states are generated , @xmath225 and @xmath226.,title=\"fig : \" ] .5 cm      we illustrate the above definitions and results with three explicit examples of instances involving few variables :    instance over @xmath227 variable    consider the following unsat instance built from a single variable , @xmath228 the 3dimensional vector space @xmath229 is spanned by vectors latexmath:[$|u\\rangle , |t\\rangle ,     latexmath:[\\[{\\bf h } = \\left ( \\begin{array}{c c c } 0 & 0 & 0 \\\\ \\frac 12 & 1 & 0 \\\\   \\frac 12 &   0 & 1 \\end{array }",
    "\\right ) \\   \\hbox{\\rm with } \\quad         entries can be interpreted as follows .",
    "starting from the @xmath78 state , variable @xmath231 will be set through unit - propagation to @xmath46 or @xmath79 with equal probabilities : @xmath232 . once the variable has reached this state , the instance",
    "is violated : @xmath233 .",
    "all other entries are null . in particular ,",
    "state @xmath78 can never be reached from any state , so the first line of the matrix is filled in with zeroes : @xmath234 .",
    "function ( [ funcq ] ) is easily calculated @xmath235 therefore , @xmath236 .",
    "indeed , refutation is obtained without any split , and the search tree involves a unique branch of length 1 ( figure  [ tree - exemple]a ) .    our next example is a 2-sat instance whose refutation requires to split one variable .",
    "instance over @xmath237 variables , with a unique refutation tree .",
    "@xmath238    the evolution matrix @xmath142 is a @xmath239 matrix with 16 non zero entries , @xmath240 we now explain how these matrix elements were obtained . from the undetermined state @xmath241 ,",
    "any of the four clause can be chosen by the heuristic .",
    "thus , any of the two literals @xmath231 , @xmath242 has a probability @xmath243 to be chosen : @xmath244 .",
    "next , unit - propagation will set the unassigned variable to true , or false with equal probabilities @xmath243 ( [ m22 ] ) .",
    "finally , entries corresponding to violating states in eqn ( [ m23 ] ) are calculated according to rule ( [ defmu ] ) .",
    "the branch function @xmath245 equals 1 for @xmath73 , 2 for any @xmath246 ; thus , @xmath247 and @xmath248 , in agreement with the associated search tree symbolized in figure  [ tree - exemple]b .",
    "we now introduce an instance with a non unique refutation tree .",
    "instance with @xmath249 variables , and two refutation trees .",
    "@xmath250 notice the presence of a ( trivial ) clause containing opposite literals , which allows us to obtain a variety in the search trees without considering more than three variables .",
    "the evolution matrix @xmath142 is a @xmath251 matrix with 56 non zero entries ( for the guc heuristic ) ,    @xmath252    the first split variable is @xmath253 if the last clause is chosen ( probability @xmath254 ) , or @xmath231 or @xmath242 otherwise ( with probability @xmath255 each ) , leading to expressions ( [ m31 ] ) and ( [ m32 ] ) .",
    "the remaining entries of @xmath142 are obtained in the same way as explained in example 10 .",
    "we obtain @xmath256 , @xmath257 and @xmath258 .",
    "therefore , @xmath259 and @xmath260 where the different contributions to @xmath157 and their probabilities are explicitely written down , see figures  [ tree - exemple]b and [ tree - exemple]c .    ,",
    "@xmath261 and @xmath262 .",
    "grey and black nodes correspond to variables assigned through unit - propagation and split respectively , as in figure  [ struct ] .",
    "* a*. example 9 : refutation of instance @xmath263 is obtained as a result of unit - propagation .",
    "the size ( number of leaves ) of the search tree is @xmath264 . * b*. example 10 : search tree generated by dpll on instance @xmath261 .",
    "the black and grey node correspond to the split of @xmath231 and unit - propagation over @xmath242 , or vice - versa .",
    "the size of the tree is @xmath265 . * c*. example 11 : search tree corresponding to the instance @xmath262 when dpll first splits variable @xmath253 .",
    "the size of the tree is @xmath266 .",
    "if the first split variable is @xmath231 or @xmath242 , the refutation search tree of instance @xmath262 corresponds to case * b*. , title=\"fig : \" ] .5 cm      let us denotes by @xmath267 the expectation value of a function @xmath268 of the instance @xmath86 over the random 3-sat distribution , at given numbers of variable , @xmath3 , and clauses , @xmath269 . from theorem 6 , the expectation value of the size of the refutation tree is @xmath270 calculation of the expectation value of the @xmath271 power of @xmath152 is a hard task that we were unable to perform for large sizes @xmath3 .",
    "we therefore turned to a simplifying approximation , hereafter called dynamical annealing .",
    "this approximation is not thought to be justified in general , but may be asymptotically exact in some limiting cases we will expose later on .    a first temptation is to approximate the expectation of the @xmath271 power of @xmath152 with the @xmath271 power of the expectation of @xmath152 .",
    "this is however too a brutal approximation to be meaningful , and a more refined scheme is needed .",
    "clause projection operator    consider an instance @xmath86 of the 3-sat problem .",
    "the clause vector @xmath272 of a partial state @xmath80 is a three dimensional vector @xmath273 where @xmath274 is the number of undetermined clauses of @xmath86 of type @xmath275 .",
    "the clause projection operator , @xmath276 , is the operator acting on @xmath143 and projecting onto the subspace of partial state vectors with clause vectors @xmath277 , @xmath278",
    "\\    function .",
    "the sum of all state vectors in the spanning basis with clause vector @xmath277 is denoted by @xmath279 .",
    "the sum of all state vectors in the spanning basis with clause vector @xmath277 and @xmath280 undetermined variables is denoted by @xmath281 .",
    "it is an easy check that @xmath282 is indeed a projection operator : @xmath283 .",
    "as the set of partial states can be partitioned according to their clause vectors , @xmath284 we now introduce the clause vector - dependent branch function @xmath285 summation of the @xmath71 s over all @xmath277 gives back function ( [ funcq ] ) from identity ( [ identriv ] ) .",
    "the evolution equation for @xmath286 is , @xmath287 where we have made use of identities ( [ closure ] ) and ( [ identriv ] ) .",
    "we are now ready to do the two following approximation steps :    dynamical annealing ( step a )    substitute in equation ( [ ap2 ] ) the partial state vector @xmath288 and @xmath289 undetermined variables .",
    "following step a , equation ( [ ap2 ] ) becomes an approximated evolution equation for @xmath71 , @xmath290 \\ ;   b ( \\vec c , t ) \\quad , \\ ] ] where the new evolution matrix @xmath291 , not to be confused with @xmath152 , is @xmath292 =   \\frac { \\langle \\sigma ( \\vec c)| { \\bf h } | \\sigma _ { n - t}(\\vec c ' ) \\rangle } { \\langle \\sigma |   \\sigma _ { n - t}(\\vec c ' ) \\rangle }   \\quad .\\ ] ] then ,    dynamical annealing ( step b )    substitute in equation ( [ ap3 ] ) the evolution matrix @xmath291 with @xmath293 =   \\frac { \\overline{\\langle \\sigma   ( \\vec c)| { \\bf h } | \\sigma _ { n - t}(\\vec c ' ) \\rangle}}{\\overline{\\langle   \\sigma | \\sigma _ { n - t}(\\vec c ' ) \\rangle } } \\ ] ] that is , consider the instance @xmath86 is redrawn at each time step @xmath75 , keeping information about clause vectors at time @xmath41 only .",
    "let us interpret what we have done so far .",
    "the quantity we focus on is @xmath294 , the expectation number of branches at depth @xmath41 in the search tree ( figure  [ struct ] ) carrying partial states with clause vector @xmath295 . within the dynamical annealing approximation , the evolution of the @xmath296 s is markovian , @xmath297\\ ;   \\bar b(\\vec c';t ) \\ .\\ ] ] the entries of the evolution matrix @xmath298 $ ] can be interpreted as the average number of branches with clause vector @xmath277 that dpll will generate through the assignment of one variable from a partial assignment ( partial state ) of variables with clause vector @xmath299 .    for the guc heuristic",
    ", we find @xcite , @xmath300 = { c_3 ' \\choose c_3'-c_3 } \\ ; \\left ( \\frac 3{n - t}\\right)^{c_3'-c_3 } \\ ; \\left(1-\\frac 3{n - t}\\right)^{c_3 } \\times \\nonumber \\\\ & & \\qquad \\qquad \\qquad \\qquad \\sum_{w_2=0}^{c_3'-c_3 } \\left ( \\frac 1 2 \\right)^{c_3'-c_3 } { c_3'-c_3\\choose w_2}\\times \\nonumber \\\\   & & \\left \\{(1 - \\delta _ { c'_1 } ) \\ ; \\left ( 1 - \\frac1{2(n - t ) } \\right)^{c'_1 - 1 } \\sum_{z_2=0}^{c_2 ' } { c_2 ' \\choose z_2 } \\left ( \\frac 2{n - t}\\right)^{z_2 } \\right .",
    "\\times \\nonumber \\\\ & &   \\left ( 1- \\frac 2{n - t}\\right)^{c_2'-z_2 }   \\sum_{w_1=0}^{z_2 } \\left ( \\frac 1 2 \\right)^{z_2 } { z_2\\choose w_1}\\ ; \\delta_{c_2-c_2'-w_2+z_2 } \\;\\delta_{c_1-c_1'-w_1 + 1 }   + \\nonumber \\\\ & & \\delta_{c_1 ' } \\sum_{z_2=0}^{c_2'-1 } { c_2'-1 \\choose z_2 } \\left ( \\frac 2{n - t}\\right)^{z_2}\\ , \\left ( 1- \\frac 2{n - t}\\right)^{c_2'-1-z_2 } \\times \\nonumber \\\\ & & \\left .",
    "\\sum_{w_1=0}^{z_2 } \\left(\\frac 1 2 \\right)^{z_2 } { z_2\\choose w_1}\\ ; \\delta_{c_2-c_2'-w_2+z_2 + 1 } \\ ; [ \\delta_{c_1-w_1 } + \\delta_{c_1 - 1-w_1 } ]   \\right\\ } \\ , \\end{aligned}\\ ] ] where @xmath301 denotes the kronecker delta function over integers @xmath84 : @xmath302 if @xmath303 , @xmath304 otherwise .",
    "expression ( [ bbra ] ) is easy to obtain from the interpretation following equation ( [ bradp ] ) .",
    "let us introduce the generating function @xmath305 of the average number of branches @xmath306 where @xmath307 , through @xmath308 evolution equation ( [ ap3 ] ) for the @xmath296 s can be rewritten in term of the generating function @xmath309 , @xmath310 where @xmath311 is a vectorial function of argument @xmath312 whose components read @xmath313 \\quad , \\nonumber\\\\ \\gamma_2({\\vec y})&=&y_2+\\ln\\left[1+\\frac 2 { n - t } \\left ( \\frac{e^{-y_2}}{2 }   \\left(1 + e^{y_1}\\right ) -1\\right)\\right ] \\quad , \\nonumber \\\\ \\gamma_3 ( { \\vec y})&=&y_3+\\ln\\left[1+\\frac 3 { n - t }   \\left ( \\frac{e^{-y_3}}{2 }   \\left(1 + e^{y_2}\\right ) -1\\right)\\right ] \\quad .\\end{aligned}\\ ] ] to solve equation ( [ eqev ] ) , we infer the large @xmath3 behaviour of @xmath309 from the following remarks :    1 .   each time dpll assigns variables through splitting or unit - propagation , the numbers @xmath274 of clauses of length @xmath275 undergo @xmath314 changes .",
    "it is thus sensible to assume that , when the number of assigned variables increases from @xmath315 to @xmath316 with @xmath317 very large but @xmath318 e.g. @xmath319 , the densities @xmath320 and @xmath321 of 2- and 3-clauses have been modified by @xmath322 .",
    "2 .   on the same time interval @xmath323",
    ", we expect the number of unit - clauses @xmath324 to vary at each time step .",
    "but its distribution @xmath325 , conditioned to the densities @xmath326 , @xmath327 and the reduced time @xmath46 , should reach some well defined limit distribution .",
    "this claim is a generalization of the result obtained by @xcite for the analysis of the guc heuristic in the absence of backtracking .",
    "as long as a partial state does not violate the instance , very few unit - clauses are generated , and splitting frequently occurs . in other words , the probability that @xmath328 is strictly positive as @xmath3 gets large .",
    "the above arguments entice us to make the following    asymptotic expression for the generating function @xmath309    for large @xmath329 at fixed ratio @xmath330 , the generating function ( [ gener ] ) of the average numbers @xmath296 of branches is expected to behave as @xmath331 \\quad .\\ ] ]    hypothesis ( [ scalinghyp2 ] ) expresses in a concise way some important information on the distribution of clause populations during the search process that we now extract .",
    "call @xmath6 the legendre transform of @xmath332 , @xmath333   \\qquad .",
    "\\label{inversion}\\ ] ] then , combining equations ( [ gener ] ) , ( [ scalinghyp2 ] ) and ( [ inversion ] ) , we obtain @xmath334 \\quad , \\ ] ] up to non exponential in @xmath3 corrections . in other words ,",
    "the expectation value of the number of branches carrying partial states with @xmath335 undetermined variables and @xmath336 @xmath275-clauses ( @xmath43 ) scales exponentially with @xmath3 , with a growth function @xmath337 related to @xmath338 through identity ( [ inversion ] ) .",
    "moreover , @xmath339 is the logarithm of the number of branches ( divided by @xmath3 ) after a fraction @xmath46 of variables have been assigned .",
    "the most probable values of the densities @xmath340 of @xmath275-clauses are then obtained from the partial derivatives of @xmath332 : @xmath341 for @xmath43 .",
    "let us emphasize that @xmath332 in equation ( [ scalinghyp2 ] ) does not depend on @xmath342 .",
    "this hypothesis simply expresses that , as far as non violating partial states are concerned , both terms on the right hand side of ( [ eqev ] ) are of the same order , and that the density of unit - clauses , @xmath343 , identically vanishes .    similarly , function @xmath344 is related to the generating function of distribution @xmath325 , @xmath345 where @xmath346 ( @xmath43 ) on the left hand side of the above formula .",
    "inserting expression ( [ scalinghyp2 ] ) into the evolution equation ( [ eqev ] ) , we find @xmath347 \\frac{\\partial \\varphi } { \\partial y_2 } ( y_2,y_3;t )   \\nonumber \\\\ & + & \\frac 3{1-t } \\left [ e^{-y_3 } \\left ( \\frac{1+e^{y_2}}2 \\right ) -1 \\right ] \\frac{\\partial \\varphi } { \\partial y_3 } ( y_2,y_3;t )   \\nonumber \\\\ & + & \\ln \\left [ 1 + k(y_1,y_2 ) \\ ; e^{\\psi ( -\\infty , y_2,y_3;t ) - \\psi(y_1,y_2,y_3;t ) } \\right]\\end{aligned}\\ ] ] where @xmath348 .",
    "as @xmath332 does not depend upon @xmath349 , the latter may be chosen at our convenience e.g. to cancel @xmath350 and the contribution from the last term in equation ( [ mdar ] ) , @xmath351 such a procedure , sometimes called kernel method and , to our knowledge , first proposed by @xcite , is correct in the major part of the @xmath352 space and , in particular , in the vicinity of @xmath353 we focus on in this paper space ; a complete analysis of this case was carried out by @xcite . ] .",
    "we end up with the following partial differential equation ( pde ) for @xmath332 , @xmath354 \\quad , \\ ] ] where @xmath355 incorporates the details of the splitting heuristic+ \\frac{c_2}{1-t }   \\ ; \\left (   \\frac 32 e^{-y_2 } -2 \\right )    \\qquad .\\ ] ] ] , @xmath356 & = &    -y_1(y_2 ) + \\frac { 3\\ , c_3}{1-t}\\ ; \\left [ e^{-y_3}\\;\\left ( \\frac{1+e^{y_2}}{2}\\right ) -1 \\right]\\nonumber \\\\ & + & \\frac{c_2}{1-t }   \\ ; \\left ( e^ { -y_1(y_2 ) } -2 \\right )   \\qquad .\\end{aligned}\\ ] ] we must therefore solve the partial differential equation ( pde ) ( [ croi2 ] ) with the initial condition , @xmath357 obtained through inverse legendre transform ( [ inversion ] ) of the initial condition over @xmath296 , or equivalently over @xmath6 , @xmath358    @xmath359 .5 cm      we can interpret the dynamical annealing approximation made in the previous paragraphs , and the resulting pde ( [ croi2 ] ) as a description of the growth process of the search tree resulting from dpll operation .",
    "using legendre transform ( [ inversion ] ) , pde ( [ croi2 ] ) can be written as an evolution equation for the logarithm @xmath360 of the average number of branches with parameters @xmath361 as the depth @xmath330 increases , @xmath362 \\qquad .",
    "\\label{croi}\\ ] ] partial differential equation ( pde ) ( [ croi ] ) is analogous to growth processes encountered in statistical physics @xcite .",
    "the surface @xmath6 , growing with `` time '' @xmath46 above the plane @xmath361 , or equivalently from ( [ change ] ) , above the plane @xmath363 ( figure  [ dome ] ) , describes the whole distribution of branches .",
    "the average number of branches at depth @xmath46 in the tree equals @xmath364 where @xmath365 is the maximum over @xmath363 of @xmath366 reached in @xmath367 . in other words ,",
    "the exponentially dominant contribution to @xmath368 comes from branches carrying 2+p - sat instances with parameters @xmath367 , that is clause densities @xmath369 , @xmath370 .",
    "parametric plot of @xmath371 as a function of @xmath46 defines the tree trajectories on figure  [ diag ] .",
    "the hyperbolic line in figure  [ diag ] indicates the halt points , where contradictions prevent dominant branches from further growing .",
    "each time dpll assigns a variable through unit - propagation , an average number @xmath372 of new 1-clauses is produced , resulting in a net rate of @xmath373 additional 1-clauses .",
    "as long as @xmath374 , 1-clauses are quickly eliminated and do not accumulate .",
    "conversely , if @xmath375 , 1-clauses tend to accumulate . opposite 1-clauses @xmath77 and @xmath376 are likely to appear , leading to a contradiction @xcite .",
    "the halt line is defined through @xmath377 , and reads @xcite , @xmath378\\;\\frac 1{1-p } \\qquad .\\ ] ] it differs from the halt line @xmath379 corresponding to a single branch @xcite .",
    "as far as dominant branches are concerned , an alternative and simpler way of obtaining the halt criterion is through calculation of the probability @xmath380 that a split occurs when a variable is assigned by dpll , @xmath381 from equations ( [ psigen],[mdar ] ) .",
    "the probability of split vanishes , and unit - clauses accumulate till a contradiction is obtained , when the tree stops growing . along the tree trajectory",
    ", @xmath382 grows thus from 0 , on the right vertical axis , up to some final positive value , @xmath383 , on the halt line .",
    "@xmath384 is our theoretical prediction for the logarithm of the complexity ( divided by @xmath3 ) to match the definition used for numerical experiments ; this is done in table  1 ] .",
    "equation ( [ croi ] ) was solved using the method of characteristics .",
    "using eqn .",
    "( [ change ] ) , we have plotted the surface @xmath6 at different times , with the results shown in figure  [ dome ] for @xmath385 .",
    "values of @xmath384 , obtained for @xmath386 by solving equation ( [ croi ] ) compare very well with numerical results ( table  1 ) .",
    "we stress that , though our calculation is not rigorous , it provides a very good quantitative estimate of the complexity .",
    "it is therefore expected that our dynamical annealing approximation be quantitavely accurate .",
    "it is a reasonable conjecture that it becomes exact at large ratios @xmath387 , where pde ( [ croi2 ] ) can be exactly solved :    asymptotic equivalent of @xmath6 for large ratios    resolution of pde ( [ croi ] ) in the large ratio @xmath387 limit gives ( for the guc heuristic ) , @xmath388 ^ 2 \\ ; \\frac 1{\\alpha_0 } \\quad .\\ ] ] this result exhibits the @xmath389 scaling proven by @xcite , and is conjectured to be exact .    as @xmath37 increases , search trees become smaller and smaller , and correlations between branches , weaker and weaker , making dynamical annealing more and more accurate .    ) .",
    "dpll starts with a satisfiable 3-sat instance and transforms it into a sequence of 2+p - sat instances .",
    "the leftmost branch in the tree symbolizes the first descent made by dpll . above node",
    "@xmath390 , instances are satisfiable while below @xmath391 , instances have no solutions . a grey triangle accounts for the ( exponentially ) large refutation subtree that dpll has to go through before backtracking above @xmath391 and reaching @xmath390 .",
    "by definition , the highest node reached back by dpll is @xmath390 .",
    "further backtracking , below @xmath390 , will be necessary but a solution will be eventually found ( right subtree ) , see figure  [ trees]c.,title=\"fig : \" ] .3 cm",
    "the interest of the trajectory framework proposed in this paper is best seen in the upper sat phase , that is , for ratios @xmath37 ranging from @xmath11 to @xmath32 .",
    "this intermediate region juxtaposes branch and tree behaviors , see search tree in figures  [ trees]c and [ treeinter ] .",
    "the branch trajectory , started from the point @xmath392 corresponding to the initial 3-sat instance , hits the critical line @xmath393 at some point g with coordinates ( @xmath394 ) after @xmath395 variables have been assigned by dpll , see figure  [ diag ] .",
    "the algorithm then enters the unsat phase and , with high probability , generates a 2+p - sat instance with no solution . a dense subtree that dpll has to go through entirely , forms beyond g till the halt line ( left subtree in figure  [ treeinter ] ) .",
    "the size of this subtree can be analytically predicted from the theory exposed in section  3 .",
    "all calculations are identical , except initial condition ( [ initphi ] ) which has to be changed into @xmath396 as a result we obtain the size @xmath397 of the unsatisfiable subtree to be backtracked ( leftmost subtree in figure  [ treeinter ] ) .",
    "@xmath398 denotes the number of undetermined variables at point @xmath309 .",
    "@xmath309 is the highest backtracking node in the tree ( figures  [ trees]c and [ treeinter ] ) reached back by dpll , since nodes above g are located in the sat phase and carry 2+p - sat instances with solutions .",
    "dpll will eventually reach a solution .",
    "the corresponding branch ( rightmost path in figure  [ trees]c ) is highly non typical and does not contribute to the complexity , since almost all branches in the search tree are described by the tree trajectory issued from g ( figure  [ diag ] ) .",
    "we expect that the computational effort dpll requires to find a solution will , to exponential order in @xmath3 , be given by the size of the left unsatisfiable subtree of figure  [ treeinter ] .",
    "in other words , massive backtracking will certainly be present in the right subtree ( the one leading to the solution ) , and no significant statistical difference is expected between both subtrees .",
    "we have experimentally checked this scenario for @xmath399 .",
    "the average coordinates of the highest backtracking node , @xmath400 ) , coincide with the computed intersection of the single branch trajectory ( section 2.2 ) and the estimated critical line @xmath393 @xcite . as for complexity ,",
    "experimental measures of @xmath6 from 3-sat instances at @xmath401 , and of @xmath402 from 2 + 0.78-sat instances at @xmath403 , obey the expected identity @xmath404 and are in very good agreement with theory ( table  1 ) .",
    "therefore , the structure of search trees corresponding to instances of 3-sat in the upper sat regime reflects the existence of a critical line for 2+p - sat instances .",
    "in this paper , we have exposed a procedure to understand the complexity pattern of the backtrack resolution of the random satisfiability problem ( figure  [ sche ] ) .",
    "main steps are :    1 .",
    "identify the space of parameters in which the dynamical evolution takes place ; this space will be generally larger than the initial parameter space since the algorithm modifies the instance structure .",
    "while the distribution of 3-sat instances is characterized by the clause per variable ratio @xmath1 only , another parameter @xmath2 accounting for the emergence of 2-clauses has to be considered .",
    "2 .   divide the parameter space into different regions ( phases ) depending on the output of the resolution e.g. sat / unsat phases for 2+p - sat .",
    "3 .   represent the action of the algorithm as trajectories in this phase diagram .",
    "intersection of trajectories with the phase boundaries allow to distinguish hard from easy regimes ( figure  [ sche ] ) .",
    "in addition , we have also presented a non rigorous study of the search tree growth , which allows us to accurately estimate the complexity of resolution in presence of massive backtracking . from a mathematical point of view , it is worth noticing that monitoring the growth of the search tree requires a pde , while odes are sufficient to account for the evolution of a single branch  @xcite .",
    "an interesting question raised by this picture is the robustness of the polynomial / exponential crossover point t ( figure 3 ) .",
    "while the ratio @xmath405 separating easy ( polynomial ) from hard ( exponential ) resolutions depends on the heuristics used by dpll ( @xmath406 , @xmath407 ) , t appears to be located at the same coordinates @xmath408 for all three uc , guc , and sc@xmath25 heuristics . from a technical point of view",
    ", the robustness of t comes from the structure of the odes ( [ ode ] ) .",
    "the coordinates of t , and the time @xmath409 at which the branch trajectory issued from @xmath410 hits the critical line @xmath411 tangentially , obey the equations @xmath412 with @xmath413 .",
    "the set of odes ( [ ode ] ) , combined with the previous conditions , gives @xmath414 @xcite .",
    "this robustness explains why the polynomial / exponential crossover location of critically constrained 2+p - sat instances , which should _ a priori _",
    "depend on the algorithm used , was found by @xcite to coincide roughly with the algorithm ",
    "independent , tricritical point on the @xmath415 line .",
    "our approach has already been extended to other decision problems , e.g. the vertex covering of random graphs @xcite or the coloring of random graphs @xcite ( see @xcite for recent rigorous results on backtracking in this case ) .",
    "it is important to stress that it is not limited to the determination of the average solving time , but may also be used to capture its distribution @xcite and to understand the efficiency of restarts techniques @xcite .",
    "finally , we emphasize that theorem 6 relates the computational effort to the evolution operator representing the elementary steps of the search heuristic for a _ given _ instance .",
    "it is expected that this approach will be useful to obtain results on the average - case complexity of dpll at fixed instance , where the average is performed over the random choices done by the algorithm only @xcite .",
    "we thank j. franco for his constant support during the completion of this work .",
    "r. monasson was in part supported by the aci jeunes chercheurs `` algorithmes doptimisation et systmes dsordonns quantiques '' from the french ministry of research .",
    "coarfa , c. , dernopoulos , d.d .",
    ", san miguel aguirre , a. , subramanian , d. and vardi , m.y .",
    "random 3-sat : the plot thickens . in r. dechter , editor , _ proc .",
    "principles and practice of constraint programming ( cp2000 ) _ , lecture notes in computer science 1894 , 143 - 159 ( 2000 ) .",
    "cocco , s. and monasson , r. trajectories in phase diagrams , growth processes and computational complexity : how search algorithms solve the 3-satisfiability problem , _ phys . rev .",
    "* 86 * , 1654 ( 2001 ) ; analysis of the computational complexity of solving random satisfiability problems using branch and bound search algorithms , _ eur .",
    "j. b _ * 22 * , 505 ( 2001 ) .    cocco , s. and monasson r. exponentially hard problems are sometimes polynomial , a large deviation analysis of search algorithms for the random satisfiability problem , and its application to stop - and - restart resolutions , _ phys . rev .",
    "e _ * 66 * , 037101 ( 2002 ) .",
    "crawford , j. and auton , l. experimental results on the cross - over point in satisfiability problems , _ proc .",
    "11th natl .",
    "conference on artificial intelligence ( aaai-93 ) , _ 2127 , the aaai press / mit press , cambridge , ma ( 1993 ) ; _ artificial intelligence _ * 81 * ( 1996 ) .",
    "gent , i. , van maaren , h. and walsh , t. ( eds ) .",
    "sat2000 : highlights of satisfiability research in the year 2000 , _ frontiers in artificial intelligence and applications _",
    "63 , ios press , amsterdam ( 2000 ) .",
    "gu , j. , purdom , p.w . , franco , j. and wah , b.w .",
    "algorithms for satisfiability ( sat ) problem : a survey .",
    "_ dimacs series on discrete mathematics and theoretical computer science _ * 35 * , 19 - 151 , american mathematical society ( 1997 ) .",
    "mitchell , d. , selman , b. and levesque , h. hard and easy distributions of sat problems , _ proc .  of the tenth natl .",
    "conf .  on artificial intelligence ( aaai-92 )",
    "_ , 440 - 446 , the aaai press / mit press , cambridge , ma ( 1992 ) .",
    "monasson , r. , zecchina , r. , kirkpatrick , s. , selman , b. and troyansky , l. determining computational complexity from characteristic phase transitions. _ nature _ * 400 * , 133137 ( 1999 ) ; 2+p - sat : relation of typical - case complexity to the nature of the phase transition , _ random structure and algorithms _ * 15 * , 414 ( 1999 ) ."
  ],
  "abstract_text": [
    "<S> an analysis of the average - case complexity of solving random 3-satisfiability ( sat ) instances with backtrack algorithms is presented . </S>",
    "<S> we first interpret previous rigorous works in a unifying framework based on the statistical physics notions of dynamical trajectories , phase diagram and growth process . </S>",
    "<S> it is argued that , under the action of the davis  putnam  loveland  logemann ( dpll ) algorithm , 3-sat instances are turned into @xmath0-sat instances whose characteristic parameters ( ratio @xmath1 of clauses per variable , fraction @xmath2 of 3-clauses ) can be followed during the operation , and define resolution trajectories . depending on the location of trajectories in the phase diagram of the 2+p - sat model , easy ( polynomial ) or hard ( </S>",
    "<S> exponential ) resolutions are generated . </S>",
    "<S> three regimes are identified , depending on the ratio @xmath1 of the 3-sat instance to be solved . </S>",
    "<S> lower sat phase : for small ratios , dpll almost surely finds a solution in a time growing linearly with the number @xmath3 of variables . </S>",
    "<S> upper sat phase : for intermediate ratios , instances are almost surely satisfiable but finding a solution requires exponential time ( @xmath4 with @xmath5 ) with high probability . </S>",
    "<S> unsat phase : for large ratios , there is almost always no solution and proofs of refutation are exponential . </S>",
    "<S> an analysis of the growth of the search tree in both upper sat and unsat regimes is presented , and allows us to estimate @xmath6 as a function of @xmath1 . </S>",
    "<S> this analysis is based on an exact relationship between the average size of the search tree and the powers of the evolution operator encoding the elementary steps of the search heuristic .    </S>",
    "<S> satisfiability , analysis of algorithms , backtrack . </S>"
  ]
}
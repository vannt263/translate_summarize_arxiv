{
  "article_text": [
    "vehicle - routing problems ( s ) constitute a broad class of combinatorial - optimization problems that find a wide range of applications and have been widely studied in the operations research and computer science communities ( see , e.g. ,  @xcite and the references therein ) .",
    "these problems are typically described as follows .",
    "there are one or more vehicles that start at some depot and provide service to an underlying set of of clients , and the goal is to design routes for the vehicles that visit the clients as quickly as possible .",
    "the most common way of formalizing the objective of minimizing client delays is to seek a route of minimum length , or equivalently , a route that minimizes the maximum client delay , which gives rise to ( the path variant of ) the celebrated traveling salesman problem ( ) .",
    "however , this objective does not differentiate between clients located at different distances from the depot , and a client closer to the depot may end up incurring a larger delay than a client that is further away , which can be considered a source of unfairness and hence , client dissatisfaction . adopting a client - centric approach",
    ", we consider an alternate objective that addresses this unfairness and seeks to design routes that promote customer satisfaction .    noting that the delay of a client is inevitably at least the shortest - path distance from the depot to the client location , following  @xcite",
    ", we seek to ensure that the _ regret _ of a client , which is a measure of its waiting time _ relative to its shortest - path distance from the depot _",
    ", is bounded .",
    "more precisely , we consider the following genre of vehicle - routing problems . we are given an undirected complete graph @xmath0 on @xmath1 nodes with a distinguished root ( depot ) node @xmath2 , and metric edge costs or distances @xmath3 .",
    "given a path @xmath5 rooted at @xmath2 and a node @xmath6 , let @xmath7 be the distance from @xmath2 to @xmath8 along @xmath5 ( i.e. , the length of the @xmath2-@xmath8 subpath of @xmath5 ) .",
    "there are two natural ways of comparing @xmath7 and @xmath15 to define the regret of a node @xmath8 on path @xmath5 .",
    "we define the _ additive regret _ of @xmath8 with respect to @xmath5 to be @xmath9 , and the _ multiplicative regret _ of @xmath8 with respect to @xmath5 to be @xmath16 .",
    "we are also given a regret bound @xmath4 . fixing a regret measure",
    ", a feasible solution is a collection of paths rooted at @xmath2 that cover all the nodes in @xmath17 such that the regret of every node with respect to the path covering it is at most @xmath4 .",
    "thus , a feasible solution to : ( i ) the additive - regret problem yields the satisfaction guarantee that every client @xmath8 is visited by time @xmath18 ; and ( ii ) the multiplicative - regret problem ensures that every client @xmath8 is visited by time @xmath19 .",
    "the goal is to find a feasible solution that uses the fewest number of paths .",
    "we refer to these two problems as _ additive - regret - bounded _",
    "( additive- ) and _ multiplicative - regret - bounded _ ( multiplicative- ) respectively .",
    "additive - has been sometimes referred to as the _ schoolbus problem _ in the literature  @xcite . however , this term is used to refer to an umbrella of vehicle - routing problems , some of which do not involve regret , so we use the more descriptive name of additive- .",
    "both versions of are _",
    "apx_-hard via simple reductions from and -path ( theorem  [ symkhard ] ) , so we focus on approximation algorithms .    [ [ our - results . ] ] our results .",
    "+ + + + + + + + + + + +    we undertake a systematic study of regret - related vehicle - routing problems from the perspective of approximation algorithms . as we illustrate below , additive - turns out to be the more fundamental of the above two problems and a rather useful problem to investigate , and our study yields insights and techniques that can be applied , often in a black - box fashion , to derive algorithms for various vehicle - routing problems , which include both regret - related problems , and classical problems such as distance - constrained vehicle routing .",
    "we therefore focus on additive regret ; unless otherwise stated , regret refers to additive regret , and a regret - related problem refers to the problem under the additive - regret measure .",
    "our main result is the _ first constant - factor _ approximation algorithm for ( additive ) ( theorem  [ minkapx ] ) .",
    "this is a substantial improvement over the previous - best @xmath11-approximation ratio for obtained in  @xcite via the standard set - cover greedy algorithm and analysis .",
    ".summary of our results .",
    "our main result , for , yields guarantees for other symmetric - metric problems . [ cols=\"^,^,^,^,^,^,^ \" , ]     a noteworthy aspect of our result is that we develop linear - programming ( lp ) based techniques for the problem .",
    "while lp - relaxations have been exploited with striking success in the design and analysis of approximation algorithms , our understanding of lp - relaxations for s is quite limited ( with , and the minimum - latency problem to a lesser extent , being the exceptions ) , and this has been a stumbling block in the design of approximation algorithms for many of these problems . notably , we develop lp - rounding techniques for a natural _ configuration - style lp - relaxation _ for , which is an example of the set - partitioning model for vehicle routing with time windows ( see  @xcite ) . while it is not difficult to come up with such ( approximately - solvable ) configuration lps for vehicle - routing problems , and they have been observed computationally to provide excellent lower bounds on the optimal value  @xcite , there are few theoretical bounds on the effectiveness of these lps .",
    "moreover , the limited known guarantees ( for general metrics ) typically only establish logarithmic bounds  @xcite , which follow from the observation that the configuration lp can be viewed as a standard set - cover lp .",
    "in contrast , we exploit the structure of our configuration lp for using novel methods and prove a _ constant _ integrality gap for the relaxation , which serves to better justify the good empirical performance of these lps . although configuration lps are often believed to be powerful , they have been leveraged only sporadically in the design of approximation algorithms ; some notable exceptions are  @xcite .",
    "our work contributes to the toolkit of techniques that have been utilized for configuration lps , and our techniques may find wider applicability .",
    "we use our algorithm for additive- to obtain an @xmath12-approximation for multiplicative- with regret - bound @xmath4 ( theorem  [ multrvrp ] ) .",
    "interestingly , our algorithm for yields _ improved guarantees _ for ( the path - variant of ) the classical _ distance - constrained vehicle - routing problem _ ( )  @xcite  find the fewest number of rooted paths of _ length _ at most @xmath14 that cover all the nodes  via a reduction to .",
    "( usually refers to the version where we seek tours containing the root ; @xcite shows that the path- and tour - versions are within a factor of 2 in terms of approximability . )",
    "we obtain an @xmath20-approximation for ( theorem  [ dvrpthm ] ) , where @xmath21 is the maximum regret of a node in an optimal solution , which improves upon the previous - best @xmath22-guarantee for  @xcite .",
    "we believe that this reduction is of independent interest .",
    "exploiting our lp - based guarantee for , we obtain the same integrality - gap bound for the natural configuration lp for .",
    "we also show that the integrality gap of the configuration lp is @xmath23 , where @xmath24 is the optimal value of the lp .",
    "this is interesting because for the standard set - cover lp , there are @xmath11-integrality - gap examples even when the optimal lp - value is a constant ; although the -lp is also a set - cover lp , our result precludes such an integrality - gap construction for this lp and raises the enticing possibility that the additional structure in can be further exploited , perhaps by refining our methods , to derive improved guarantees .",
    "we leverage our techniques to obtain guarantees for various variants and generalizations of ( section  [ extn ] ) , including , most notably , ( i ) the variants where we fix the number @xmath25 of rooted paths ( used to cover the nodes ) and seek to minimize the maximum additive / multiplicative regret of a node , which we refer to as _ additive / multiplicative- @xmath25 _ ; and ( ii ) ( additive ) and @xmath25 in _ asymmetric metrics_.    we obtain an @xmath26-approximation for additive-@xmath25 ( theorem  [ symregapx ] ) , which is the _ first _ approximation guarantee for @xmath25 .",
    "previously , the only approximation results known for @xmath25were for the special cases where we have a tree metric  @xcite ( note that the @xmath11-distortion embedding of general metrics into tree metrics does not approximate regret ) , and when @xmath27  @xcite . in particular , _ no _ approximation guarantees were known previously _ even when @xmath28 _ ; in contrast , we achieve a constant - factor approximation for any fixed @xmath25 . partially complementing this result",
    ", we show that the integrality gap of the configuration lp for @xmath25is @xmath29 ( theorem  [ intgap ] ) .",
    "multiplicative-@xmath25turns out to be an easier problem , and the lp - rounding ideas in  @xcite yield an @xmath30-approximation for this problem ( theorem  [ multregapx ] ) .    for asymmetric metrics",
    ", we exploit the simple but key observation that regret can be captured via a suitable asymmetric metric that we call the _ regret metric _",
    "@xmath31 ( see fact  [ obs : regret ] ) . this alternative view of regret yields surprising dividends , since we can directly plug in results for asymmetric metrics to obtain results for regret problems . in particular , results for @xmath25-person asymmetric @xmath32-@xmath33 tsp - path  @xcite translate to results for asymmetric and @xmath25 , and we achieve approximation ratios of @xmath11 and @xmath34 respectively for these two problems . although regret metrics form a strict subclass of asymmetric metrics , we uncover an interesting connection between the approximability of asymmetric and .",
    "we show that an @xmath35-approximation for asymmetric implies a @xmath36-approximation for ( theorem  [ asymkhard ] ) ; thus an @xmath37-improvement to the approximation we achieve for asymmetric would improve the current best @xmath38-approximation for  @xcite .    [ [ our - techniques . ] ] our techniques . + + + + + + + + + + + + + + +    our algorithm for additive-(see section  [ sec : symmetric ] ) is based on rounding a fractional solution to a natural configuration lp , where we have a variable for every path of regret at most @xmath4 and we enforce that every node is covered to an extent of 1 by such paths .",
    "although this lp has an exponential number of variables , we can obtain a near - optimal solution @xmath39 by using an approximation algorithm for _ orienteering _",
    "@xcite ( see `` related work '' ) to provide an approximate separation oracle for the dual lp .",
    "let @xmath40 .",
    "to round @xmath39 , we first observe that it suffices to obtain @xmath41 paths of _ total regret _ @xmath42 ( see lemma  [ avg2max ] ) . at a high level",
    ", we would ideally like to ensure that directing the paths in the support of @xmath39 away from the root yields a directed acyclic graph @xmath43 . if we have this , then by viewing @xmath39 as the path decomposition of a flow in @xmath43 , and by the integrality property of flows , we can round @xmath39 to an integral flow that covers all the nodes , has value at most @xmath44 , and whose cost in the regret metric is at most the @xmath31-cost of @xmath39 , which is at most @xmath45 .",
    "this integral flow decomposes into a collection of @xmath44 paths that cover @xmath46 ( since @xmath43 is acyclic ) , which yields the desired rounding .    of course",
    ", in general , we will not be in this ideal situation .",
    "our goal will be to identify a subset @xmath47 of `` witness nodes '' such that : ( a ) @xmath39 can be converted into a fractional solution that covers @xmath47 and has the above acyclicity - property without blowing up the @xmath31-cost by much ; and ( b ) nodes in @xmath48 can be attached to @xmath47 incurring only an @xmath42 cost . the new fractional solution can then be rounded to obtain integral paths that cover @xmath47 , which in turn can be extended so that they cover @xmath46 . in achieving this goal , we gain significant leverage from the fact that the configuration lp yields a collection of fractional _ simple _ paths that cover all the nodes , which is a stronger property than having a flow where every node has at least one unit of incoming flow .",
    "we build a forest @xmath49 of cost @xmath42 and select one node from each component of @xmath49 as a witness node ; this immediately satisfies ( b ) .",
    "the construction ensures that : first , every witness node @xmath50 has an associated collection of `` witness paths '' that cover it to a large extent , say , @xmath51 ; and second , for every path @xmath5 , the witness nodes that use @xmath5 as a witness path have strictly increasing distances from the root @xmath2 and occur on @xmath5 in order of their distance from @xmath2 .",
    "it follows that by shortcutting each path to only contain the witness nodes that use the path as a witness path , and blowing up the @xmath39 values by 2 , we achieve property ( a ) .",
    "our algorithms for multiplicative - and capitalize on the following insight .",
    "suppose there exist @xmath25 paths covering a given set @xmath52 of nodes and incurring additive regret at most @xmath53 for these nodes .",
    "then , for any @xmath54 , one can use our algorithm for to find @xmath55 paths covering @xmath52 such that the nodes in @xmath52 have additive regret at most @xmath56 ( lemma  [ covering ] ) . for multiplicative - with regret bound @xmath4",
    ", we apply this observation to every `` ring '' @xmath57 to obtain @xmath58 paths covering @xmath59 such that the @xmath59-nodes face at most @xmath60 additive regret .",
    "this follows since the optimal solution covers @xmath59 inducing additive regret at most @xmath61 for these nodes .",
    "concatenating the paths obtained for the @xmath59s whose indices are @xmath12 apart yields the @xmath12-approximation .    for , we build upon the above insight . rather than fixing beforehand , as above , the regret bounds and the corresponding node - sets to cover via paths ensuring that regret bound",
    ", we use a dynamic - programming approach .",
    "crucially , in the analysis , we bound the number of paths needed to cover a set of nodes with a given regret bound by suitably _ modifying _ the paths of a _ structured near - optimal solution _ @xmath62 .",
    "we argue that a specific choice ( depending on @xmath62 ) of regret bounds and node - sets yields an @xmath20-approximation . in doing so , we argue that each choice of regret - bound is such that we make progress by decreasing substantially either the regret - bound _ or _ number of paths needed .",
    "since our -algorithm is in fact lp - based , this also yields a bound on the integrality gap of the natural configuration lp for .    for the @xmath23 integrality - gap result for",
    ", we show that one can partition the nodes so that for each part @xmath52 , there is a distinct node @xmath63 such that the paths ending at @xmath63 cover the @xmath52-nodes to an extent of @xmath64 . multiplying the lp - solution by @xmath23 then yields a fractional solution that covers the @xmath52-nodes incurring regret at most @xmath65 , which we can round using our -algorithm .",
    "[ [ related - work . ] ] related work .",
    "+ + + + + + + + + + + + +    there is a wealth of literature on vehicle routing problems ( see , e.g. ,  @xcite ) , and the survey  @xcite discusses a variety of problems under the umbrella of schoolbus - routing problems ; we limit ourselves to the work that is relevant to our problems .",
    "the use of regret as a vehicle - routing objective seems to have been first considered in  @xcite , who present various heuristics and empirical results .",
    "bock et al .",
    "@xcite developed the first approximation algorithms for , but focus mainly on tree metrics , for which they achieve a 3-approximation .",
    "for general metrics , they observe that can be cast as a covering problem , and finding a minimum - density set is an _ orienteering _",
    "problem  @xcite : given node rewards , end points @xmath32 , @xmath33 , and a length bound @xmath66 , find an @xmath32-@xmath33 path of length at most @xmath66 that gathers maximum total node - reward .",
    "thus , the greedy set - cover algorithm combined with a suitable @xmath30-approximation for orienteering  @xcite immediately yields an @xmath67-approximation for .",
    "previously , this was the best approximation algorithm for in general metrics . for @xmath25 , _",
    "no _ previous results were known for general metrics , even when @xmath28 .",
    "( note that we obtain a constant approximation for @xmath25for any fixed @xmath25 . )",
    "@xcite obtain a 12.5-approximation for @xmath25 in tree metrics . when @xmath27 , @xmath25becomes as a special case of the _ min - excess path _",
    "problem    to the best of our knowledge , multiplicative regret , and the asymmetric versions of and @xmath25have not been considered previously .",
    "our algorithm for multiplicative-@xmath25uses the lp - based techniques developed by  @xcite for the minimum latency problem .",
    "the set - cover greedy algorithm can also be applied to asymmetric .",
    "this yields approximation ratios of @xmath68 in polytime , and @xmath69 in _ quasi - polytime _ using the @xmath70- and @xmath71- approximation algorithms for directed orienteering in  @xcite and  @xcite respectively .",
    "both factors are significantly worse than the @xmath11-approximation that we obtain via an easy reduction to @xmath25(find @xmath25 @xmath32-@xmath33 paths of minimum total cost that cover all nodes ) .",
    "friggstad et al .",
    "@xcite obtained the first results for @xmath25 which were later improved by  @xcite to an @xmath72-approximation    replacing the notion of client - regret in our problems with client - delay gives rise to some well - known vehicle - routing and tsp problems .",
    "the client - delay version of corresponds to ( path- ) .",
    "nagarajan and ravi  @xcite give an @xmath73-approximation for general metrics , and a 2-approximation for trees .",
    "obtaining a constant - factor approximation for in general metrics has been a long - standing open problem . as noted earlier , regret can be captured by the asymmetric regret metric and thus is _ precisely _ ( path- ) in the regret metric .",
    "thus , our work yields an @xmath30-approximation for in this specific asymmetric metric .",
    "we find this to be quite interesting and surprising since one would normally expect that would become _ harder _ in an asymmetric metric .",
    "the client - delay version of @xmath25 yields the @xmath25problem of finding @xmath25 rooted paths of minimum maximum cost that cover all nodes , which admits a constant - factor approximation via a reduction to .",
    "the orienteering problem plays a key role in vehicle - routing problems , including our algorithm for where it yields an approximate separation oracle for the dual lp .",
    "blum et al .",
    "@xcite obtained the first constant - factor approximation algorithm for orienteering , and the current best approximation is @xmath74 due to chekuri et al .",
    "@xcite study ( among other problems ) directed orienteering and obtain approximation ratios of @xmath70 and @xmath75 respectively .",
    "the backbone of all of these algorithms is the min - regret @xmath76-path problem ( called the min - excess path problem in  @xcite)choose a min - regret path covering at least @xmath76 nodes  which captures @xmath25when @xmath27.-path problem _ trivially reduces _ to the min - cost @xmath76-path problem ( choose a min - cost path covering at least @xmath76 nodes ) in asymmetric metrics .",
    "this allows one to slightly improve theorem 8 in  @xcite and lemma 2.4 in  @xcite . ]",
    "@xcite used a different approach and gave a quasi - polytime @xmath71-approximation for directed orienteering . finally , bansal et al .",
    "@xcite and chekuri et al .",
    "@xcite consider orienteering with time windows , where nodes have time windows and we seek to maximize the number of nodes that are visited in their time windows , and its special case where nodes have deadlines , both of which generalize orienteering .",
    "they obtain polylogarithmic approximation ratios for these problems .",
    "recall that an instance of is specified by a complete undirected graph @xmath0 , where @xmath2 is a distinguished root node , with metric edge costs @xmath3 , and a regret - bound @xmath4 .",
    "let @xmath77 .",
    "we call a path in @xmath17 rooted if it begins at @xmath2 . unless otherwise stated , we think of the nodes on @xmath5 as being ordered in increasing order of their distance along @xmath5 from @xmath2 , and directing @xmath5 away from @xmath2 means that we direct each edge @xmath78 from @xmath79 to @xmath8 if @xmath79 precedes @xmath8 ( under this ordering ) .",
    "we use @xmath80 to denote @xmath15 for all @xmath81 . for a set @xmath52 of edges",
    ", we sometimes use @xmath82 to denote @xmath83 . by scaling , and merging all nodes at distance 0 from each other",
    ", we may assume that @xmath84 is a positive integer for all @xmath85 .",
    "thus , @xmath86 for all @xmath87 . unless otherwise qualified , regret refers to additive regret in the sequel",
    ".    it will be convenient to assume that @xmath88 : if @xmath89 then we can determine whether an edge @xmath90 lies on a shortest rooted path , and if so direct @xmath90 as @xmath91 if @xmath92 , to obtain a directed acyclic graph ( dag ) @xmath43 .",
    "our problem then reduces to finding the minimum number of directed rooted paths in @xmath43 to cover all the nodes , which can be solved efficiently using network - flow techniques",
    ".    the following equivalent way of viewing regret will be convenient .",
    "for every ordered pair of nodes @xmath93 , define the _",
    "regret distance _",
    "( with respect to @xmath2 ) to be @xmath94 .",
    "[ obs : regret ] ( i ) the regret distances @xmath95 are nonnegative and satisfy the triangle inequality : @xmath96 for all @xmath97 . hence , @xmath98 forms an asymmetric metric that we call the _ regret metric_.",
    "\\(ii ) for a @xmath99 path @xmath5 , we have @xmath100 , and for a cycle @xmath101 , we have @xmath102 . properties ( i ) and ( ii ) hold even when the underlying @xmath3 metric is asymmetric .",
    "we infer from fact  [ obs : regret ] that if @xmath5 is a rooted path and @xmath6 , then the regret of @xmath8 with respect to @xmath5 is simply the @xmath31-distance to @xmath8 along @xmath5 , which we denote by @xmath103 , and the regret of nodes on @xmath5 can not decrease as one moves away from the root ( since @xmath104 ) .",
    "we define the regret of @xmath5 to be the regret of the end - node of @xmath5 , which by part ( ii ) of fact  [ obs : regret ] is given by @xmath105 .",
    "lemma  [ avg2max ] makes the key observation that one can always convert a collection of paths with _",
    "average regret _ at most @xmath106 into one where every path has regret at most @xmath4 by blowing up the number of paths by an @xmath107 factor , and hence , it suffices to obtain a near - optimal solution with average regret @xmath108 .",
    "[ cor : average ] [ avg2max ] given rooted paths @xmath109 with total regret @xmath110 , we can efficiently find at most @xmath111 rooted paths , each regret at most @xmath4 , that cover @xmath112 .",
    "let @xmath113 be the regrets of @xmath114 respectively .",
    "we show that for each path @xmath115 , we can obtain @xmath116 rooted paths of regret at most @xmath4 that cover the nodes of @xmath115 . applying this to each path @xmath115",
    ", we obtain at most @xmath117 rooted paths with regret at most @xmath4 that cover @xmath112 .",
    "fix a path @xmath115 .",
    "if @xmath118 , there is nothing to be done , so assume otherwise .",
    "the idea is to simply break @xmath115 at each point where the regret exceeds a multiple of @xmath4 , and connect the starting point of each such segment directly to @xmath2 .",
    "more formally , for @xmath119 , let @xmath120 be the first node on @xmath5 with @xmath121 , and let @xmath122 be its ( immediate ) predecessor on @xmath5 .",
    "let @xmath123 and @xmath124 be the end point of @xmath115 .",
    "we create the @xmath125 paths given by @xmath126 for @xmath127 , which clearly together cover the nodes of @xmath115 .",
    "the regret of each such path is @xmath128 , where the last inequality follows from the definitions of @xmath120 , @xmath129 and @xmath130 ( which precedes @xmath129 ) .",
    "approximation algorithms for symmetric variants often exploit the fact that edges may be traversed in any direction , to convert a connected subgraph into an eulerian tour while losing a factor of 2 in the cost .",
    "this does not work for since @xmath31 is an asymmetric metric .",
    "instead , we exploit a key observation of blum et al .",
    "@xcite , who identify portions of a rooted path @xmath5 whose total @xmath131-cost can be charged to @xmath132 .",
    "[ redblue ] let @xmath5 be a rooted path ending at @xmath50 .",
    "consider an edge @xmath90 of @xmath5 , where @xmath79 precedes @xmath8 on @xmath5 .",
    "we call this a _ red _ edge of @xmath5 if there exist nodes @xmath133 and @xmath134 on the @xmath2-@xmath79 portion and @xmath8-@xmath50 portion of @xmath5 respectively such that @xmath135 ; otherwise , we call this a _ blue _ edge of @xmath5 . for a node @xmath136 ,",
    "let @xmath137 denote the maximal subpath @xmath138 of @xmath5 containing @xmath133 consisting of only red edges ( which might be the trivial path @xmath139 ) .",
    "we call a maximal blue / red subpath of a rooted path @xmath5 a blue / red interval of @xmath5 .",
    "the blue and red intervals of @xmath5 correspond roughly to the type-1 and type-2 segments of @xmath5 , as defined in  @xcite . distinguishing the edges on @xmath5 as red or blue serves two main purposes .",
    "first , the total cost of the red edges is proportional to the regret of @xmath5 ( lemma  [ lem : redcost ] ) .",
    "second , if we shortcut @xmath5 so that it contains only one node from each red interval , then the resulting edges must all be distance increasing ( lemma  [ dinc ] ) .",
    "consequently , if we perform this operation on a collection of paths and direct edges away from the root , then we obtain a dag .",
    "[ lem : redcost ] for any rooted path @xmath5 , we have @xmath140 .    each red edge",
    "is contained in a `` type-2 segment '' , as defined in  @xcite , and corollary 3.2 in  @xcite proves that the total length of type-2 segments is at most @xmath141 .",
    "[ lem : cross ] [ dinc ] ( i ) suppose @xmath142 are nodes on a rooted path @xmath5 such that @xmath79 precedes @xmath8 on @xmath5 and @xmath143 , then @xmath144 .",
    "( ii ) hence , if @xmath145 is obtained by shortcutting @xmath5 so that it contains at most one node from each red interval of @xmath5 , then for every edge @xmath146 of @xmath145 with @xmath133 preceding @xmath134 on @xmath145 , we have @xmath147 .",
    "since @xmath79 precedes @xmath8 on @xmath5 and @xmath148 , there must be some edge @xmath149 such that @xmath150 is blue on @xmath5 , and @xmath151 , @xmath152 lie on the @xmath79-@xmath8 portion of @xmath5 ( note that it could be that @xmath153 and/or @xmath154 ) .",
    "so if @xmath155 then @xmath150 would be classified as red .",
    "part ( ii ) follows immediately from part ( i ) .    [",
    "[ orienteering . ] ] orienteering .",
    "+ + + + + + + + + + + + +    our algorithms are based on rounding the solution to an exponential - size lp - relaxation of the problem . a near - optimal solution to this lp",
    "can be obtained by solving the dual lp approximately .",
    "the separation oracle for the dual lp corresponds to a _ point - to - point orienteering _ problem , which is defined as follows .",
    "we are given an undirected complete graph with nonnegative node - rewards , edge lengths that form a metric , origin and destination nodes @xmath32 , @xmath33 , and a length bound @xmath66 .",
    "the goal is to find an @xmath32-@xmath33 path @xmath5 of total length at most @xmath66 that gathers maximum total reward . in the _ rooted",
    "problem , we only specify the origin @xmath32 , and a path rooted at @xmath32 .",
    "unless otherwise stated , we use orienteering to mean point - to - point orienteering .",
    "clearly , an algorithm for orienteeringcan also be used for rooted orienteering .",
    "a related problem is the _ min - excess path _ ( ) problem defined by  @xcite , where we are given @xmath32 , @xmath33 , and a target reward @xmath156 , and we seek to find an @xmath32-@xmath33 path of minimum regret that gathers reward at least @xmath156 .    in the unweighted version of these problems , all node rewards are 0 or 1 .",
    "observe that the weighted versions of these problems can be reduced to their unweighted version in pseudopolynomial time by making co - located copies of a node . for orienteering , by suitably scaling and rounding the node - rewards",
    ", one can obtain a @xmath157-time reduction where we lose a @xmath158-factor in approximation . for , this data rounding yields a bicriteria approximation where we obtain an @xmath32-@xmath33 path with reward at least @xmath159 .",
    "both the unweighted and weighted versions of orienteeringand are _ np_-hard",
    ". the current best approximation factors for these problems are @xmath160 for orienteeringdue to chekuri et al .",
    "@xcite , and @xmath160 for _ unweighted _ due to blum et al .",
    "@xcite , for any positive constant @xmath161 .",
    "we consider the following configuration - style lp - relaxation for , which was also mentioned in  @xcite .",
    "let @xmath162 denote the collection of all rooted paths with regret at most @xmath4 .",
    "we introduce a variable @xmath163 for each path @xmath164 to denote if path @xmath5 is chosen . throughout",
    ", we use @xmath5 to index paths in @xmath162 .",
    "@xmath165 let @xmath166 denote the optimal value of .",
    "note that @xmath167 .",
    "it is easy to give a reduction from showing that it is _",
    "np_-completeto decide if there is a feasible solution that uses only 1 path ; hence , it is _",
    "np_-hardto achieve an approximation factor better than 2 ( theorem  [ symkhard ] ) . complementing this",
    ", we devise an algorithm for based on lp - rounding that achieves a constant approximation ratio ( and thus yields a corresponding integrality - gap bound ) , which is a significant improvement over the previous - best @xmath11-approximation ratio obtained by  @xcite .",
    "although has an exponential number of variables , one can obtain a near - optimal solution @xmath39 by solving the dual lp ( which has an exponential number of constraints ) to near - optimality , which can be achieved by using an approximation algorithm for orienteering to obtain an approximate separation oracle for the dual .",
    "we prove the following lemma in section  [ lpsolve ] .",
    "[ lem : lp ] [ klplem ] we can use a @xmath168-approximation algorithm for orienteering to efficiently compute a feasible solution @xmath39 to of value at most @xmath169 .    let @xmath40 ( so @xmath170 ) .",
    "our goal is to round @xmath39 to a solution using at most @xmath41 paths that have average regret @xmath108 .",
    "we can then apply lemma  [ avg2max ] to obtain @xmath41 paths , each having regret at most @xmath4 , and thereby obtain an @xmath30-approximate solution .",
    "we prove the following theorem .",
    "[ thm : schoolbus ] [ minkapx ] we can efficiently round @xmath39 to a solution using at most @xmath171 rooted paths . this yields @xmath172 rooted paths by taking @xmath173  @xcite , and shows that the integrality gap of is at most @xmath174 .",
    "we first give an overview on the rounding procedure that obtains a slightly worse approximation ratio .",
    "we show in section  [ improve ] how to refine this to obtain the guarantee stated above .",
    "let @xmath175 be the paths in the support of @xmath39 . to gain some intuition ,",
    "suppose first that it happens that when we direct every path @xmath176 away from @xmath2 , we obtain a directed graph @xmath43 that is acyclic . we can then set up a network - flow problem to find a minimum @xmath31-cost flow in @xmath43 of value at most @xmath44 such that every node has at least one unit of flow entering it .",
    "since @xmath39 can be viewed as a path decomposition of a feasible flow of @xmath31-cost at most @xmath177 , by the integrality property of flows , there is an integral flow of @xmath31-cost at most @xmath177 .",
    "since @xmath43 is acyclic , this flow may be decomposed into at most @xmath44 paths that cover all the nodes , and the average regret of this path collection is at most @xmath4 , so we obtain the desired rounding .    of course",
    ", in general @xmath43 will not be acyclic and rounding @xmath39 as above may yield an integral flow that does not decompose into a collection of only paths .",
    "so we seek to identify a subset @xmath178 of `` witness '' nodes and a collection of @xmath41 fractional paths from @xmath162 covering @xmath47 such that : ( a ) directing each path in this collection away from @xmath2 yields a dag ; and ( b ) given any collection of integral paths covering @xmath47 , one can graft the nodes of @xmath48 into these paths ( to obtain new paths covering @xmath46 ) incurring an additional @xmath31-cost of @xmath179 . property ( a )",
    "allows one to use the aforementioned network - flow argument to obtain @xmath41 paths covering @xmath47 with total regret @xmath42 , and property ( b ) enables one to modify this to obtain @xmath41 ( integral ) paths covering @xmath46 while keeping the total regret to @xmath42 ( so that one can then apply lemma  [ avg2max ] ) .    to obtain @xmath47",
    ", we carefully construct a forest @xmath49 of cost @xmath179 ( step a1 below ) with the property that for every component @xmath101 of @xmath49 , we can associate a single node @xmath180 , which we include in @xmath47 , such that there is a total @xmath39-weight of at least @xmath181 in paths @xmath5 containing @xmath50 for which @xmath182 .",
    "notably , we achieve this in a rather clean and simple way by defining a _ downwards - monotone cut - requirement function _ based on the fractional solution @xmath39 that encodes the above requirement , an idea that we believe has wider applicability , especially for network - design problems .",
    "once we have such a forest , property ( b ) holds by construction since the total cost of @xmath49 is @xmath179 ( lemma  [ lem : forest ] ) .",
    "moreover ( step a2 ) , if we shortcut each path @xmath176 so that it only contains nodes @xmath183 for which @xmath184 is contained in some component of @xmath49 , then the resulting paths cover each node in @xmath47 to an extent of at least @xmath181 and satisfy the conditions of part ( ii ) of lemma  [ dinc ] ( see lemma  [ witpaths ] ) .",
    "so by doubling the fractional values of the resulting paths , we obtain a fractional - path collection satisfying property ( a ) .",
    "hence , we can obtain @xmath41 integral paths covering @xmath47 ( step a3 ) and attach the nodes of @xmath48 to these paths ( step a4 ) while ensuring that the total regret remains @xmath179 ( lemma  [ lem : patching ] ) , and then apply lemma  [ avg2max ] .",
    "we prove in theorem  [ apx1 ] that the resulting solution uses at most @xmath185 paths . in section",
    "[ improve ] , we show how to obtain the improved guarantee stated in theorem  [ minkapx ] by fine - tuning the threshold used to form the forest @xmath49 .",
    "we now describe the algorithm in detail and proceed to analyze it .",
    "[ mainalg ]    ' '' ''    input : a fractional solution @xmath39 to obtained via lemma  [ klplem ] ; @xmath40 .",
    "output : @xmath41 paths , each having regret at most @xmath4 , covering all the nodes .    * finding a low - cost forest @xmath49 .",
    "* for a subset @xmath186 and a node @xmath8 , define @xmath187 ; define @xmath188 if @xmath189 for all @xmath190 , and 0 otherwise .",
    "note that @xmath191 is a _ downwards - monotone _ cut - requirement function : if @xmath192 then @xmath193 .",
    "we call a set @xmath52 with @xmath188 , an _ active _ set .",
    "a.=0.5ex = 0ex    use the 2-approximation algorithm for @xmath194 downwards - monotone functions in  @xcite to obtain a forest @xmath49 such that @xmath195 for every set @xmath186 .    for every component @xmath101 of @xmath49 with @xmath196 ,",
    "choose a node @xmath180 such that @xmath197 ( which exists since @xmath198 ) .",
    "call @xmath50 the _ witness node _ for @xmath101 , and denote @xmath101 by @xmath199 . obtain a tour @xmath200 traversing all nodes of @xmath101 by doubling the edges of @xmath101 and shortcutting .",
    "let @xmath178 be the set of all witness nodes .",
    "* obtaining a fractional acyclic flow covering @xmath47 .",
    "*    a.=0.5ex = 0ex    for every path @xmath176 we do the following .",
    "let @xmath201 be the set of witness nodes @xmath202 such that @xmath184 is contained in @xmath199 .",
    "we shortcut @xmath5 past the nodes in @xmath203 to obtain a rooted path @xmath204 spanning the nodes in @xmath205 .",
    "note that shortcutting does not increase the @xmath31-cost .",
    "let @xmath206 denote this new collection of non - trivial paths .",
    "let @xmath207 be the directed graph obtained by directing each path in @xmath208 away from @xmath2 .",
    "let @xmath209 be the flow that sends @xmath210 flow along each path @xmath211 .",
    "we prove in lemma  [ witpaths ] that @xmath43 is acyclic , and that @xmath212 for every @xmath183 .",
    "use the integrality property of flows to round @xmath213 to an integer flow @xmath214 of no greater @xmath31-cost and value @xmath215 such that @xmath216 for every @xmath183 .",
    "since @xmath43 is acyclic , we may decompose @xmath214 into @xmath25 rooted paths @xmath217 so that ( possibly after some shortcutting ) every node of @xmath47 lies on exactly one @xmath218 path .    * grafting in the nodes of @xmath48 .  *",
    "if there is a component @xmath101 of @xmath49 containing @xmath2 , we pick an arbitrary path , say @xmath219 , and modify @xmath219 by traversing @xmath200 first and then visiting the nodes of @xmath220 ( in the same order as @xmath218 ) .",
    "next , for every path @xmath221 , we walk along @xmath218 and each time we visit a new node @xmath183 on @xmath218 we traverse @xmath222 before moving on to the next node on @xmath218 .",
    "let @xmath223 denote the resulting new path .",
    "apply lemma  [ avg2max ] to @xmath224 to obtain the final set of paths ( having maximum regret @xmath4 ) .    ' '' ''    [ [ analysis . ] ] analysis .",
    "+ + + + + + + + +    let @xmath225 denote the set of components of @xmath49 .",
    "note that @xmath226 .",
    "[ lem : forest ] the forest @xmath49 computed in step a1 has cost at most @xmath227 .",
    "thus , @xmath228 .",
    "consider the following lp for covering the cuts @xmath229 corresponding to active sets @xmath52 .",
    "@xmath230 define @xmath231 by setting @xmath232 for all @xmath233 .",
    "this is a feasible solution to since for every active set @xmath52 and every node @xmath190 , we have that @xmath234 also , @xmath235 .",
    "the penultimate inequality follows from lemma  [ lem : redcost ] , and the last inequality follows because @xmath236 and @xmath237 .",
    "the 2-approximation algorithm of @xcite then guarantees that @xmath238 , since @xmath239 for component @xmath101 of @xmath49 , we have @xmath240 .",
    "[ lem : summary ] [ witpaths ] ( i ) for every path @xmath241 , every red interval of @xmath5 contains at most one node of @xmath205 .",
    "therefore , @xmath204 visits nodes @xmath8 in strictly increasing order of @xmath80 ; ( ii ) @xmath242 for every @xmath183 ; ( iii ) hence , the digraph @xmath43 constructed in step a2 is acyclic , and @xmath243 for every @xmath183 .    part ( iii )",
    "follows immediately from parts ( i ) and ( ii ) . for part ( i ) , recall that @xmath244 . if there are two nodes @xmath79 , @xmath50 of @xmath205 contained in some red interval of @xmath5 then @xmath245 , but this contradicts the fact that we add at most one node to @xmath47 from each component of @xmath49 .",
    "it follows that @xmath204 contains at most one node from each red interval of @xmath5 , and by lemma  [ lem : cross ] , we have that @xmath204 visits nodes @xmath8 in strictly increasing order of distance @xmath80 .",
    "for part ( ii ) , we note that for a node @xmath183 , by definition , we have that @xmath246 iff @xmath247 .",
    "so @xmath248 , where the last inequality follows from the definition of @xmath199 .",
    "[ lem : patching ] the total regret of the paths @xmath224 obtained in step a4 is at most @xmath249 .",
    "let @xmath250 denote the component of @xmath101 containing @xmath2 ; let @xmath251 and @xmath252 if there is no such component .",
    "the regret of path @xmath253 is @xmath254 and the regret of @xmath223 for @xmath255 is @xmath256 .",
    "the paths @xmath217 obtained after step a3 have @xmath31-cost at most the @xmath31-cost of @xmath213 , which is @xmath257 . since the @xmath258- and @xmath131-costs of a cycle are identical ( by fact  [ obs : regret ] ) , the total regret of @xmath224 is at most @xmath259 , where we use lemma  [ lem : forest ] for the last inequality .",
    "[ apx1 ] algorithm  [ mainalg ] returns a feasible solution with at most @xmath260 paths .    applying lemma  [ avg2max ] to the paths @xmath224 , which have total regret at most @xmath261 ( by lemma  [ lem : patching ] )",
    ", we obtain a collection of @xmath262 rooted paths of maximum regret @xmath4 whose union covers all nodes , where @xmath263 .",
    "[ improve ] we now describe the improvement that yields theorem  [ minkapx ] .",
    "let @xmath264 be a parameter that we will fix later .",
    "the only change is that we now define the cut - requirement function in step a1 as @xmath188 if @xmath265 for all @xmath190 , and 0 otherwise .",
    "this results in a corresponding change to the integer flow @xmath214 obtained in step a2 .    mimicking the proof of lemma  [ lem : forest ] , we see that setting @xmath266 yields a feasible solution to , and therefore we have , @xmath267 , and @xmath268 .",
    "step a2 is unchanged , but parts ( ii ) and ( iii ) of lemma  [ witpaths ] need to be suitably modified : we now have that the flow @xmath231 satisfies @xmath269 for every @xmath183 .",
    "correspondingly , we round @xmath270 to an integer flow in step a3 , and obtain at most @xmath271 paths . proceeding as in the proof of lemma  [ lem : patching ]",
    ", we infer that the total regret of the paths obtained after grafting in the nodes of @xmath48 is at most @xmath272 .    applying lemma  [ avg2max ] , this yields at most @xmath273 paths having regret at most @xmath4 . taking @xmath274 to minimize the coefficient of @xmath275",
    ", we obtain the guarantee stated in theorem  [ minkapx ] .",
    "recall that in multiplicative- , we are given a regret - bound @xmath4 , and we want to find the minimum number of paths covering all nodes so that each node @xmath8 is visited by time @xmath276 .",
    "when @xmath277 , the problem can be solved in polytime ( as this is simply additive - with regret - bound 0 ) , so we assume that @xmath278 .",
    "we show that multiplicative - reduces to incurring an @xmath279-factor loss",
    ". the following observation , which falls out of lemma  [ avg2max ] will be quite useful .",
    "[ covering ] let @xmath280 be the approximation ratio of our -algorithm .",
    "suppose there are @xmath25 paths covering a given set @xmath52 of nodes ensuring that every node in @xmath52 has additive regret at most @xmath53 .",
    "for any @xmath54 , one can efficiently obtain at most @xmath281    we shortcut the @xmath25 paths so that they only contain the nodes in @xmath52 .",
    "the regret of each of these @xmath25 paths is at most @xmath53 , so as in lemma  [ avg2max ] , we may break up each path into at most @xmath282 paths of regret at most @xmath56 .",
    "this creates at most @xmath283 paths of regret at most @xmath56 that cover @xmath52 .",
    "so by using our algorithm for with the node - set @xmath284 and regret - bound @xmath56 , we obtain @xmath285 paths of regret at most @xmath56 covering @xmath52 . since the number of paths is an integer , we actually have @xmath281 paths .",
    "[ multrvrp ] multiplicative - can be reduced to additive - incurring an @xmath12-factor loss .",
    "this yields an @xmath12-approximation for multiplicative- .",
    "let @xmath286 . for @xmath287",
    ", define @xmath288 .",
    "note that the @xmath59s partition the non - root nodes .",
    "let @xmath289 denote the optimal value of the multiplicative - instance .",
    "we apply lemma  [ covering ] with @xmath290 to the @xmath59s : for each @xmath59 , there are @xmath289 paths covering @xmath59 such that each node in @xmath59 has regret at most @xmath291 , so we obtain at most @xmath292 paths covering @xmath59 such that each node in @xmath59 has regret at most @xmath293 . pad",
    "these with the trivial path @xmath294 if needed , to obtain exactly @xmath295 paths @xmath296 .",
    "let @xmath297 .",
    "now for every index @xmath298 and every @xmath299 , we concatenate the paths @xmath300 by moving from the end - node of @xmath301 to @xmath2 before following @xmath302 for each @xmath303 .",
    "this yields @xmath304 paths that together cover all nodes .",
    "to finish the proof , we show that every node @xmath8 is visited by time @xmath276 .",
    "suppose @xmath305 and is covered by path @xmath301 .",
    "it s visiting time is then at most @xmath306 .",
    "recall that the goal in is to find the fewest number of rooted paths of _ length _ at most @xmath14 that cover all the nodes .",
    "we say that a rooted path @xmath5 is feasible if @xmath307 . the length-@xmath14 prefix of a rooted path @xmath5 , denoted by @xmath308 , is the portion of @xmath5 starting from @xmath2 and up to ( and including ) the last node @xmath6 such that @xmath309 .",
    "let @xmath289 be the optimal value , and @xmath21 be the maximum regret of a path in an optimal solution , which we can estimate within a factor of 2 .",
    "we apply our algorithm for to prove two approximation results for .",
    "we obtain an @xmath20-approximation algorithm ( theorem  [ dvrpthm ] ) , which also yields the same upper bound on the integrality gap of a natural configuration lp for ( corollary  [ dvrpcor ] ) .",
    "this improves upon the @xmath22 approximation factor and integrality - gap bound for proved in  @xcite .",
    "note that for _ graphical metrics _",
    ", that is , when the underlying metric is the shortest - path metric of an _ unweighted _ graph , we may assume that @xmath310 , and so this yields an @xmath38-approximation .",
    "next , we show that the integrality gap of is also at most @xmath311 ( theorem  [ optintgap ] ) .",
    "this presents an interesting contrast with set cover for which there are @xmath11-integrality - gap examples for the standard set - cover lp even when the optimal lp - value is a constant .",
    "the configuration lp is also a set - cover lp , but our result precludes such an integrality - gap construction for this lp .",
    "our integrality - gap bounds suggest that the additional structure in can be further exploited , perhaps by refining our methods , to derive improved guarantees .      as a warm - up , note that a simple @xmath312-approximation , where @xmath313 , follows by applying lemma  [ covering ] with @xmath314 to the node - sets @xmath315 , @xmath316 for @xmath317 , and @xmath318 , which partition @xmath46 . for @xmath319",
    ", we can obtain at most @xmath289 regret-0 paths covering it .",
    "each @xmath320 , the optimal solution uses @xmath289 to cover @xmath59 causing regret at most @xmath321 to these nodes .",
    "so , we obtain @xmath322 paths covering @xmath59 causing regret at most @xmath323 to the @xmath59 nodes ; hence , the length-@xmath14 prefixes of these paths cover @xmath59 .",
    "we now describe a more - refined reduction yielding an improved @xmath20-approximation .",
    "the algorithm is again based on choosing suitable pairs of regret bounds and node - sets , and covering each node - set using paths of the corresponding regret bound .",
    "however , instead of _ fixing _ the regret bounds to be @xmath321 , we now obtain them by solving a dynamic program ( dp ) .",
    "let @xmath324 for @xmath325 .",
    "we use dp to obtain a set of feasible paths @xmath326 covering @xmath327 for all @xmath328 .",
    "we use @xmath329 to denote @xmath330 . for all @xmath331 ,",
    "we use our algorithm for to find a collection @xmath332 of paths of regret at most @xmath333 that cover @xmath327 , let @xmath334 be the fewest number of paths of regret 0 ( and hence are feasible ) that cover the nodes with @xmath335 , which we can efficiently compute . for @xmath336 , we set @xmath337 ; if @xmath262 is the index that attains the minimum , then we set @xmath338 .",
    "we return the solution @xmath339 , which we show is feasible .",
    "[ [ analysis.-1 ] ] analysis . + + + + + + + + +    for ease of comprehension , we prove the approximation guarantee with respect to an integer optimal solution here , and observe in section  [ intgapbnds ] that the analysis easily extends to yield the same guarantee with respect to the optimum value of the configuration lp .",
    "let @xmath340 be the approximation ratio of our -algorithm .",
    "we define a suitable set of indices , that is , regret bounds , such that using these indices in the dp yields the desired bound on the number of paths . in order to establish a bound on @xmath329 by plugging in a suitable index",
    "@xmath341 we need two things .",
    "first , we need to bound @xmath342 .",
    "this requires a more sophisticated analysis than the one suggested by lemma  [ covering ] . instead of directly using all the paths from an optimal solution to bound the number of paths of certain regret required to cover a given set of nodes , we proceed as follows .",
    "we argue that by suitably preprocessing the paths in an optimal solution ( see claim  [ pmodify ] ) , we can obtain a near - optimal solution @xmath62 such that @xmath327 is covered by _",
    "paths of @xmath62 of regret at most @xmath343_. we modify these @xmath62-paths by breaking them up ( as in lemma  [ avg2max ] ) to obtain paths of regret at most @xmath333 that cover @xmath327 , which yields a bound on @xmath344 .",
    "second , we need to argue that we make suitable progress when moving from index @xmath328 to index @xmath25 . in a crucial departure from the previous analysis , we make progress by either suitably decreasing the _ number _ , or the maximum regret , of the paths , needed from @xmath62 to cover the remaining set of nodes . these ingredients yield the following theorem .",
    "[ dvrpthm ] @xmath345 .",
    "so the above algorithm is an @xmath20-approximation algorithm for ( where @xmath21 is the maximum regret of a path in an optimal solution ) .",
    "we start with the following simple , but useful claim .",
    "[ pmodify ] let @xmath5 be a rooted path .",
    "we can obtain at most two paths @xmath346 and @xmath347 , both ending at @xmath348 and together covering all the nodes on @xmath5 such that @xmath349 and @xmath350 .",
    "let @xmath33 be the end - node of @xmath5 .",
    "let @xmath346 be the @xmath351 portion of @xmath5 , and @xmath347 be the path where we move from @xmath2 to @xmath33 , and then traverse the @xmath352 portion of @xmath5 .",
    "clearly , @xmath353 and @xmath354 .",
    "also , @xmath355 and @xmath356 .",
    "we preprocess the paths in an optimal solution using claim  [ pmodify ] losing a factor of 2 .",
    "( note that this is solely for the purposes of analysis . )",
    "let @xmath357 denote the resulting collection of paths , where @xmath358 , and @xmath359 . for @xmath360 ,",
    "define @xmath361 .",
    "the preprocessing ensures that if a node @xmath362 lies on a path @xmath363 , then @xmath364 .",
    "so @xmath327 is covered by the @xmath365 paths of @xmath62 of regret less than @xmath343 .",
    "[ feas ] for all @xmath328 , @xmath326 consists of feasible paths that cover @xmath327 .",
    "the proof is by induction on @xmath328 .",
    "the base case when @xmath366 clearly holds . for @xmath336 , @xmath367 for some @xmath341 . by the induction hypothesis ,",
    "the paths in @xmath368 have length at most @xmath14 and cover @xmath369 .",
    "so all paths in @xmath326 have length at most @xmath14 .",
    "consider a node @xmath370 , and suppose that @xmath8 lies on path @xmath371 .",
    "then , @xmath372 , where the last inequality follows since @xmath373 implies that @xmath374 .",
    "thus , @xmath8 is covered by @xmath308 .",
    "[ helper ] @xmath375 for all @xmath231 .",
    "this is clearly true for @xmath376 . for @xmath377 , @xmath378 .",
    "we have @xmath379 since the @xmath380 paths of @xmath62 of regret more than 1 can be broken up to yield at most @xmath381 ( in fact @xmath382 ) paths of regret at most 1 .",
    "thus , @xmath375 ( note that @xmath383 )",
    ".    we will need the following technical lemma , whose proof we defer to the end of this subsection .",
    "[ sequence ] let @xmath384 be a sequence of integers such that @xmath385 , and @xmath386 for all @xmath387 .",
    "then , @xmath388 .",
    "theorem  [ dvrpthm ] let @xmath389 .",
    "for @xmath336 , set @xmath390 if @xmath391 ; otherwise , let @xmath392 be the unique value of @xmath393 such that @xmath394 ( which must exist ) .",
    "this choice of index in the expression for @xmath329 ( roughly speaking ) is tailored to ensure that @xmath395 _ and _ @xmath396 when @xmath397 . to see the bound on @xmath398 ,",
    "consider an arbitrary index @xmath331 .",
    "there are @xmath399 paths in @xmath62 with regret in the range @xmath400 , and @xmath401 paths in @xmath62 with regret in the range @xmath402 . breaking up these paths into paths of regret @xmath333 as in lemma  [ avg2max ] , and combining with the @xmath403 paths of @xmath62 of regret less than @xmath333 yields at most @xmath404 paths of regret at most @xmath333 covering @xmath327 .",
    "so by lemma  [ covering ] , we have @xmath405 < 3{\\ensuremath{\\gamma}}n(i).\\ ] ]    we now define a function @xmath406 based on the recurrence for @xmath49 by plugging in index @xmath407 in the definition of @xmath329 .",
    "more precisely , set @xmath408 for @xmath409 . set @xmath410 for @xmath411 .",
    "it is easy to see by induction that @xmath412 for all @xmath328 .",
    "let @xmath413 .",
    "so @xmath414 , and @xmath415 .",
    "if @xmath416 , then @xmath417 , and @xmath418 since there @xmath289 paths of regret at most @xmath419 that cover @xmath46 .",
    "so we have @xmath420 .",
    "to finish the proof , we prove that @xmath421 satisfies the bound in the theorem statement .",
    "let @xmath422 and @xmath423 .",
    "define @xmath424 and @xmath425 . recall that @xmath396 when @xmath397 .",
    "thus , when @xmath397 , if @xmath426 then we decrease the number of paths of @xmath62 required to cover @xmath427 by an appropriate factor , and otherwise , we decrease the maximum regret of these paths considerably .",
    "thus , @xmath428 is a measure of the number of times we make progress starting from @xmath328 by decreasing the maximum regret significantly .",
    "let @xmath429 for @xmath430 and @xmath431 otherwise .",
    "note that @xmath432 is an increasing function .",
    "we prove by induction on @xmath328 that @xmath433 .",
    "the base case is @xmath366 , which holds since @xmath434 , since we can compute the minimum number of regret-0 paths covering @xmath435 .",
    "consider @xmath336 .",
    "we have @xmath436 .",
    "if @xmath437 , then @xmath438 , where the second inequality follows from claim  [ helper ] .",
    "so suppose @xmath439 , and so @xmath440 .",
    "then @xmath441 + 8{\\ensuremath{\\gamma}}n(3 ) \\\\ & \\leq 3{\\ensuremath{\\gamma}}n(i ) \\biggl[1+\\bigl(1 - 2^{k(i)-i}\\bigr)\\cdot\\tfrac{k(i)}{\\log_2 k(i)}+b\\bigl(k(i)\\bigr)\\biggr ] + 8{\\ensuremath{\\gamma}}n(3 ) .",
    "\\end{split}\\ ] ] if @xmath442 , then the above term is at most @xmath443 + 8{\\ensuremath{\\gamma}}n(3)$ ] .",
    "otherwise , @xmath444 , and the above term is bounded by @xmath443 + 8{\\ensuremath{\\gamma}}n(3)$ ] . since @xmath445",
    ", we have @xmath433 , which completes the induction step .",
    "so by induction , @xmath446 .    for any @xmath336 , consider the sequence @xmath447 .",
    "this sequence has @xmath448 terms and satisfies the conditions of lemma  [ sequence ] , so by that lemma , @xmath449 .",
    "thus , @xmath450 , which completes the proof .",
    "lemma  [ sequence ] we may assume that @xmath451 , since otherwise , we may truncate the sequence at @xmath452 where @xmath453 ; we have @xmath454 , so we can proceed to bound @xmath455 . since @xmath456 for @xmath457 , we have @xmath458 for all @xmath387 .",
    "let @xmath459 . if @xmath460 , let @xmath461 be the smallest index such that @xmath462 if this exists ; otherwise , let @xmath463 .",
    "let @xmath464 be the indices generated this way .",
    "note that @xmath465 .",
    "consider a subsequence @xmath466 .",
    "we have @xmath467 for all @xmath468 .",
    "it follows that @xmath469 and hence , @xmath470 , where @xmath471 .",
    "note that @xmath191 is an increasing function .    adding the above inequality for all the @xmath472 subsequences @xmath473 where @xmath474",
    ", we obtain that @xmath475 , so @xmath476 .",
    "note that @xmath477 is a concave function for @xmath478 and that @xmath479 .",
    "( we have @xmath480 and @xmath481 . )",
    "so @xmath482 the last inequality follows since @xmath483 since @xmath484 .",
    "hence , @xmath485 provided @xmath451 . in general",
    ", we have @xmath486 .",
    "consider the following configuration lp for , which is along the same lines as .",
    "let @xmath487 denote the collection of rooted paths of length at most @xmath14 , which is indexed below by @xmath5 . @xmath488",
    "the preprocessing described in claim  [ pmodify ] can also be applied to a fractional solution to losing a factor of 2 .",
    "the only change is that when we create two paths @xmath489 from a path @xmath5 with positive weight @xmath133 , we increase the weights of @xmath346 and @xmath347 by @xmath133 and set the ( new ) weight of @xmath5 to 0 .",
    "we break ties while preprocessing using an arbitrary , but fixed ordering over nodes ; that is , if @xmath142 are such that @xmath490 and @xmath79 comes before @xmath8 in the ordering ,    thus , notice that the dp - based algorithm described and analyzed in section  [ dvrpapprox ] also proves an integrality gap of @xmath20 , where @xmath21 is now the maximum regret of a path in the support of an optimal lp - solution .",
    "the only change to the _ analysis _ is that the path - collection @xmath62 is ( of course ) replaced with the preprocessed lp - optimal solution , and that @xmath365 is now defined to be the total lp - weight of the fractional paths having regret less than @xmath343 .",
    "nodes in @xmath327 are now covered to an extent of at least 1 by ( preprocessed ) fractional paths having regret less than @xmath343 .",
    "also , since our algorithm for has an lp - relative guarantee , to bound @xmath344 it suffices to exhibit a collection of fractional paths of regret at most @xmath333 that cover @xmath327 , and this is done _ exactly _ as before .",
    "[ dvrpcor ] the integrality gap of is @xmath20 , where @xmath21 is the maximum regret of a path in the support of an optimal solution to .",
    "let @xmath491 denote the optimal value of .",
    "we now present an lp - rounding algorithm showing an integrality gap of @xmath311 . as with",
    ", the separation problem for the dual of is an orienteering problem , so one can obtain a @xmath492-optimal solution to given a @xmath492-approximation algorithm for orienteering .",
    "let @xmath39 denote the fractional solution obtained after preprocessing the @xmath492-optimal solution to as described above .",
    "let @xmath493 .",
    "let @xmath494 .",
    "[ optintgap ] we can efficiently round @xmath39 to a feasible -solution that uses @xmath495 paths .    for each @xmath496 let @xmath497 and @xmath498 .",
    "we partition @xmath46 into @xmath499 as follows .",
    "take @xmath500 to be the node furthest from the root @xmath2 , where we break ties using the same ordering that was used in the preprocessing step , and set @xmath501 .",
    "in general , suppose we have formed @xmath502 , we pick @xmath503 to be node in @xmath504 that is furthest from @xmath2 ( breaking ties as before ) , and set @xmath505 . it is clear that the @xmath59s are disjoint ; we prove that @xmath506 for every @xmath328 , and hence the @xmath59s form a partition of @xmath46 .",
    "for each @xmath328 we have @xmath507 .",
    "since we choose @xmath508 to be the furthest node in @xmath504 , any path in @xmath509 containing @xmath508 can only end at a node in @xmath510 . since @xmath511 for all @xmath512",
    ", we have @xmath513 .",
    "we argue that @xmath514 .",
    "it suffices to show that the above partitioning process terminates after at most @xmath515 steps .",
    "suppose otherwise . since @xmath516 for all @xmath328 , and @xmath517 for distinct nodes @xmath79 and",
    "@xmath8 , we have @xmath518 where the last inequality holds since @xmath519 .    now consider a part @xmath59 .",
    "each @xmath520 has length at most @xmath14 , so @xmath521 .",
    "hence , @xmath522 is a feasible solution to the -lp for the instance with root @xmath2 , node - set @xmath59 , and regret bound @xmath523 . by theorem [ minkapx ]",
    ", we can efficiently find at most @xmath524 paths with regret at most @xmath523 covering @xmath59 ; each such path has length at most @xmath14 since @xmath508 is the furthest node from @xmath2 in @xmath59 .",
    "doing this for every @xmath59-set , we obtain @xmath525 feasible paths covering all nodes .",
    "[ [ additive - k . ] ] additive-@xmath25",
    ". + + + + + + + + + + + + + + + + + + + + + + + + +    recall that in additive-@xmath25 , we fix the number @xmath526 of rooted paths that may be used to cover all the nodes and seek to minimize the maximum regret of a node .",
    "we approach @xmath25by considering a related problem , _ min - sum ( additive ) @xmath25 _ , where the goal is to minimize the sum of the regrets of the @xmath25 paths .",
    "our techniques are versatile and yield an @xmath527-approximation for min - sum @xmath25 , which directly yields an @xmath26-approximation for @xmath25 .",
    "these are the _ first _ approximation guarantees for these problems , even for @xmath28 . the only previous approximation results for @xmath25were for the special cases of tree metrics  @xcite , and when @xmath27  @xcite . partially complementing this",
    ", we prove in section  [ lbounds ] that a natural lp - relaxation for @xmath25along the same lines as and has an integrality gap of @xmath29 .    as in section",
    "[ sec : symmetric ] , our algorithm for min - sum @xmath25is based on lp rounding .",
    "let @xmath528 denote the collection of all rooted paths .",
    "we now consider the following lp - relaxation for the problem , where we have a variable @xmath163 for every rooted path .",
    "we use @xmath529 to denote the optimal value of .",
    "@xmath530    @xmath531    [ reglplem ] we can use a @xmath532-approximation algorithm for unweighted to compute , for any @xmath54 , a solution @xmath39 satisfying , @xmath533 , and @xmath534 , in time @xmath157 .",
    "lemma  [ reglplem ] is proved in section  [ lpsolve ] .",
    "let @xmath535 and @xmath536 .",
    "the rounding procedure in section  [ sec : symmetric ] yields a bicriteria approximation . choosing threshold @xmath537 to define the cut - requirement function in step a1 ( see section",
    "[ improve ] ) yields @xmath538 paths with total regret at most @xmath539 .    to obtain a true approximation",
    ", we choose @xmath161 in lemma  [ reglplem ] so that @xmath540 and set the threshold @xmath541 to be @xmath542 .",
    "steps a1 and a2 of algorithm  [ mainalg ] then yield a forest @xmath49 such that @xmath543 , a set @xmath47 of witness nodes , and an acyclic flow @xmath231 such that @xmath269 for all @xmath183 .",
    "the flow @xmath544 is a flow of value @xmath545 .",
    "but instead of using this to obtain an integral flow of value at most @xmath546 , we use the integrality property of flows in a more subtle manner .",
    "we may decompose @xmath214 into a convex combination of integral flows @xmath547 such that each @xmath548 is a flow of value at least @xmath549 satisfying @xmath550 for all @xmath183 .",
    "therefore the convex combination must place a weight of at least @xmath551 on the @xmath548 flows that have value at most @xmath25 .",
    "choose the flow of value at most @xmath25 with smallest @xmath31-cost , and decompose this into @xmath552 rooted paths @xmath553 so that ( maybe after some shortcutting ) every node of @xmath47 lies on exactly one @xmath218 path .",
    "it follows that the total @xmath31-cost of @xmath553 is at most @xmath554 .",
    "now we apply step a4 to obtain the final set of paths @xmath555 .",
    "[ thm : minmax ] [ symregapx ] the above algorithm returns at most @xmath25 rooted paths having total regret @xmath556 .",
    "thus , we obtain an @xmath527-approximation algorithm for min - sum @xmath25 .",
    "this leads to an @xmath26-approximation for @xmath25 .",
    "the total regret of @xmath555 is at most @xmath557 .",
    "[ [ multiplicative - k . ] ] multiplicative-@xmath25 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    this is the version of @xmath25with multiplicative regret .",
    "we can obtain a constant - factor approximation for multiplicative-@xmath25as follows .",
    "recall that @xmath558 is the underlying graph .",
    "let @xmath559 be the optimal value of the multiplicative-@xmath25problem , which we may assume we know within a @xmath158-factor .",
    "given an integer `` guess '' @xmath4 of this optimum value , we consider the following feasibility problem for multiplicative-@xmath25 , which is an adaptation of the lp - formulation in  @xcite for the @xmath25-route minimum - latency problem .",
    "let @xmath560 .",
    "we use @xmath33 to index the times in @xmath561 .",
    "( recall that all @xmath84s are positive integers . )",
    "we have variables @xmath562 for every node @xmath8 and time @xmath563 $ ] to denote that @xmath8 is visited at time @xmath33 .",
    "we also have variables @xmath564 for every edge @xmath565 and time @xmath33 to denote that @xmath233 lies on some path and both @xmath79 and @xmath8 are visited _ by _ time @xmath33 . @xmath566 $ } \\qquad \\forall v ;   \\qquad \\qquad \\sum_{e } d_ez_{e , t } \\le kt \\quad \\forall t \\\\",
    "\\sum_{e\\in \\delta(s ) } z_{e , t } & \\ge \\sum_{t'\\le t } x_{v , t ' }   \\qquad \\forall t , s\\subseteq v , v\\in s ;   \\qquad \\qquad \\qquad \\qquad x , z\\geq 0 .",
    "\\end{split } \\tag{p4 } \\label{multklp}\\end{gathered}\\ ] ]    the constraints encode that : ( i ) every node has multiplicative regret at most @xmath4 ; ( ii ) the total cost of the portion of the @xmath25 paths up to time @xmath33 does not exceed @xmath567 ; and ( iii ) if a node @xmath8 is visited by time @xmath33 then there must be a path of edges traversed by time @xmath33 connecting @xmath2 to @xmath8 .",
    "we use @xmath568 to denote the above feasibility program with regret - bound @xmath4 .",
    "chakrabarty and swamy  @xcite show that given a feasible solution @xmath569 , to @xmath568 one can obtain @xmath25 rooted paths covering all nodes such that the visiting time of each client is @xmath570 .",
    "thus , we obtain an @xmath30-approximation provided we can solve @xmath568",
    ". we will not quite be able to do this , but as in  @xcite , we argue that despite the pseudopolynomial size of @xmath568 , if it is feasible then one can efficiently compute a feasible solution to @xmath571 , for any @xmath54 .",
    "define @xmath572 , and let @xmath573 where @xmath574 is the smallest integer such that @xmath575 .",
    "let @xmath576 denote @xmath568 when we only consider times @xmath577 , and now enforce that @xmath578 if @xmath579 or @xmath33 is larger than the smallest value in @xmath580 that exceeds @xmath276 .    given a feasible solution @xmath569 to @xmath568",
    ", we can obtain a feasible solution @xmath581 to @xmath576 as follows . for @xmath582",
    ", we set @xmath583 for every @xmath233 , and @xmath584 .",
    "it is easy to see that @xmath581 can be extended to a feasible solution @xmath585 to @xmath571 by `` padding '' it suitably : set @xmath586 if @xmath577 and 0 otherwise , and @xmath587 for @xmath588 . finally , observe that @xmath576 is a polynomial - size feasibility program , so one can efficiently solve it .    to summarize , if @xmath568 is feasible , then so is @xmath576 and one can compute a feasible solution to @xmath576 efficiently , which can be rounded to obtain a solution with multiplicative regret @xmath589 .",
    "the same approach yields an @xmath30-approximation for the problem of minimizing a weighted sum of multiplicative regrets ( with nonnegative weights ) .",
    "the only change is that instead of the feasibility program , we now have an lp whose constraints are given by and whose objective function is to minimize @xmath590 , where @xmath591 is the weight associated with @xmath8 s regret .",
    "the compact lp with times in @xmath580 follows analogously , and the rounding algorithm is unchanged .",
    "[ multregapx ] there is an @xmath30-approximation algorithm for multiplicative-@xmath25 .",
    "this guarantee extends to the setting where we want to minimize a weighted sum of the multiplicative client - regrets ( with nonnegative weights ) .",
    "[ [ asymmetric - metrics . ] ] asymmetric metrics .",
    "+ + + + + + + + + + + + + + + + + + +    we can also consider and @xmath25 in directed graphs , that is , the distances @xmath3 now form an asymmetric metric .",
    "the regret of a node @xmath8 with respect to a directed path @xmath5 rooted at @xmath2 is defined as before , and we seek rooted ( directed ) paths that cover all the nodes .",
    "we crucially exploit that , as noted in fact  [ obs : regret ] , the regret distances @xmath98 continue to form an asymmetric metric .",
    "thus , we readily obtain guarantees for asymmetric and asymmetric min - sum @xmath25by leveraging known results for @xmath25-person @xmath32-@xmath33 asymmetric tsp - path ( @xmath25 ) , which is defined as follows : given two nodes @xmath32 , @xmath33 in an asymmetric metric and an integer @xmath25 , find @xmath25 @xmath32-@xmath33 paths of minimum total cost that cover all the nodes .",
    "friggstad et al .",
    "@xcite showed how to obtain @xmath592",
    "@xmath32-@xmath33 paths of cost at most @xmath593 , where @xmath594 is the minimum - cost @xmath25solution that uses @xmath25 paths ; this was improved by  @xcite to the following .",
    "[ thm : katspp ]    theorem  [ thm : katspp ] immediately yields results for asymmetric min - sum @xmath25since this is simply @xmath25 in the regret metric!and hence , for asymmetric @xmath25 .    [ asymregapx ] there is an @xmath592-approximation algorithm for asymmetric min - sum @xmath25 .",
    "this implies an @xmath34-approximation for asymmetric @xmath25 .",
    "we now focus on _ asymmetric _ .",
    "we may no longer assume that @xmath595 , but we may assume that @xmath596 as otherwise we can again merge nodes @xmath79 and @xmath8 .",
    "consequently , at most one of @xmath90 or @xmath597 may lie on a shortest rooted path , and so if @xmath89 , we can again efficiently solve the problem by finding a minimum - cardinality path cover in a dag .",
    "let @xmath289 denote the optimal value of the given asymmetric instance .",
    "observe that lemma  [ avg2max ] ( as also lemmas  [ lem : redcost ] and [ dinc ] ) continues to hold when @xmath131 is asymmetric .",
    "thus , we again seek to find @xmath598 paths of average regret @xmath599 , for suitable values of @xmath35 and @xmath600 .",
    "we show that this can be achieved by utilizing ( even ) a bicriteria approximation algorithm for @xmath25 .",
    "[ thm : asymmetric ] [ asymkapx ] suppose we have an algorithm for @xmath25that returns at most @xmath601 @xmath32-@xmath33 paths covering all the nodes with total cost at most @xmath602 .",
    "then , one can achieve an @xmath603-approximation for asymmetric .",
    "thus , the results in  @xcite yield an @xmath11-approximation for asymmetric .",
    "create an auxiliary complete digraph @xmath604 , where @xmath605 .",
    "the cost of each arc @xmath90 where @xmath606 is its regret distance @xmath95 ; for every @xmath607 , the cost of @xmath608 is 0 and the cost of @xmath609 is @xmath610 .",
    "one can verify that these arc costs form an asymmetric metric .",
    "we consider all values @xmath25 in @xmath611 and consider the @xmath25instance specified by @xmath43 , start node @xmath2 , and end node @xmath33 .",
    "when @xmath612 , we know that there is a solution of cost at most @xmath613 , so using the given algorithm for @xmath25 , we obtain at most @xmath614   @xmath615 paths in @xmath43 of total cost at most @xmath616 .",
    "so the smallest @xmath25 for which we obtain at most @xmath601 paths of total cost at most @xmath617 satisfies @xmath618 . removing @xmath33 from these",
    "( at most ) @xmath619 paths yields a solution in the original metric having total @xmath31-cost at most @xmath616 . by lemma  [ avg2max ] , this can be converted to a feasible solution using @xmath620 rooted paths .",
    "we can obtain an @xmath11-approximation to @xmath594 using ( at most ) @xmath621 paths  @xcite , or @xmath622 paths ( taking @xmath623 in theorem  [ thm : katspp ] ) ; plugging this in yields an @xmath11-approximation for asymmetric .    in section  [ lbounds ]",
    ", we prove that an @xmath35-approximation for asymmetric yields a @xmath36-approximation for ( theorem  [ asymkhard ] ) ; thus an @xmath37-factor improvement to the approximation ratio obtained in theorem  [ asymkapx ] would improve the state of the art for .",
    "[ [ non - uniform- . ] ] non - uniform .",
    "+ + + + + + + + + + + + +    in this broad generalization of which captures both multiplicative - and we have _ non - uniform integer regret bounds _",
    "@xmath624 and we seek the fewest number of rooted paths covering all the nodes where each node @xmath8 has regret at most @xmath625 .",
    "let @xmath626 and @xmath627 .",
    "we apply lemma  [ covering ] to the sets @xmath628 , and @xmath629 for @xmath630 .",
    "there are at most @xmath631 non - empty @xmath59s .",
    "let @xmath289 be the optimal value .",
    "we cover @xmath632 using at most @xmath289 shortest paths , and cover every other @xmath59-set using @xmath322 paths of regret at most @xmath633 .",
    "this yields a feasible solution using @xmath634 paths .",
    "note that applying the set - cover greedy algorithm only yields an @xmath69-approximation , since finding a minimum - density set is now a _ deadline _",
    "problem for which we only have an @xmath11-approximation  @xcite .",
    "[ [ capacitated - variants . ] ] capacitated variants .",
    "+ + + + + + + + + + + + + + + + + + + + +    vehicle - routing problems are often considered in capacitated settings , where we are given a capacity bound @xmath635 , and a path / route is considered feasible if it contains at most @xmath635 nodes ( and is feasible for the uncapacitated problem ) .",
    "capacitated additive-@xmath25does not admit any multiplicative approximation in polytime , since it is _",
    "np_-completeto decide if there is a solution with zero regret  @xcite .",
    "however , when we do not fix the number of paths , a standard reduction  @xcite shows that an @xmath35-approximation to the uncapacitated problem yields an @xmath107-approximation to the capacitated version .",
    "this reduction also holds in asymmetric metrics .",
    "thus , we obtain approximation ratios of @xmath636 and @xmath11 for capacitated in symmetric and asymmetric metrics , and an @xmath637-approximation for capacitated .    [ [ multiple - depots - andor - fixed - destinations . ] ] multiple depots and/or fixed destinations .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    a natural generalization of the rooted setting is where we have a set @xmath638 of depots / sources , and a set @xmath639 of destinations / sinks , and every path must begin at an @xmath52-node and end at a @xmath640-node ( and may contain nodes of @xmath641 as intermediate nodes ) .",
    "we call such a path an @xmath52-@xmath640 path .",
    "we define the regret of a node @xmath8 with respect to an @xmath52-@xmath640 path @xmath5 to be @xmath642 , that is , the waiting time @xmath8 spends in excess of the _ minimum time it takes to serve @xmath8 from any depot_. we define the regret of nodes in @xmath641 , which may lie on multiple paths , as follows .",
    "the regret of a source @xmath643 is the minimum regret it faces along any path containing it ( which is 0 if some path originates at @xmath644 ) .",
    "the regret of a sink @xmath645 is the minimum regret it faces along any path _ ending _ at @xmath645 ; this effectively means that we may assume ( by shortcutting ) that @xmath645 is not an intermediate node on any @xmath52-@xmath640 path .",
    "we obtain two variants of : ( 1 ) in _",
    "@xmath52-@xmath640 _ , the goal is to find the minimum number of @xmath52-@xmath640 paths of regret at most @xmath4 that cover all nodes ; ( 2 ) in _ multi - pair  _ , the goal is the same , but we have @xmath646 and require that an @xmath52-@xmath640 path starting at @xmath644 must end at @xmath647 .",
    "we can reduce @xmath52-@xmath640 to as follows .",
    "let @xmath648 be the underlying metric .",
    "we create a new root node @xmath2 and add edges @xmath649 with @xmath650 for all @xmath643 .",
    "we also create nodes @xmath651 , and have an edge @xmath652 with @xmath653 for all @xmath654 .",
    "let @xmath43 be the resulting ( non - complete ) graph .",
    "let @xmath655 denote the shortest - path metric of @xmath43 .",
    "observe that @xmath656 .",
    "it is easy to see that any solution to @xmath52-@xmath640 in @xmath17 translates to a solution in @xmath43 .",
    "conversely , given a solution in @xmath43 , we take every rooted walk @xmath145 in @xmath43 and do the following .",
    "note that neither @xmath2 , nor any @xmath657 node can be intermediate nodes of @xmath145 .",
    "we remove the root @xmath2 and possibly the end - node of @xmath145 ( if this is some @xmath657 ) to obtain a path @xmath5 in @xmath17 starting at some depot @xmath644 . for every @xmath658",
    ", we have @xmath659 , so the regret of @xmath8 does not increase .",
    "also , if @xmath145 covers @xmath657 then @xmath5 must end at @xmath645 , and moreover @xmath660 .",
    "finally , shortcut @xmath5 past the intermediate nodes in @xmath661 and extend the resulting path to end at an arbitrary sink ( if it does not already do so ) .",
    "the resulting collection of paths is a feasible solution to @xmath52-@xmath640 in @xmath17 .",
    "clearly , this reduction also works in asymmetric metrics .",
    "so theorems  [ minkapx ] and  [ asymkapx ] yield approximation ratios of @xmath30 and @xmath11 for @xmath52-@xmath640 in symmetric and asymmetric metrics respectively .",
    "we can also consider the @xmath52-@xmath640 and multi - pairversions of @xmath25and min - sum @xmath25 , where we seek to cover all nodes using @xmath25 @xmath52-@xmath640 paths , or @xmath25 @xmath52-@xmath640 paths such that paths starting at @xmath643 end at @xmath662 , so as to minimize the maximum / total regret of a path .",
    "note that @xmath663 .",
    "the above reduction preserves the number of paths that are used .",
    "hence , this reduction can also be used for @xmath25 , and we obtain the same guarantees for the @xmath52-@xmath640 @xmath25and @xmath52-@xmath640 min - sum @xmath25 in symmetric and asymmetric metrics as those listed in theorems  [ symregapx ] and  [ asymregapx ] respectively .    for multi - pair  , we can leverage our techniques to achieve an @xmath664-approximation , where @xmath665 .",
    "in contrast , theorem  [ multihard ] shows that the multi - pairversions of @xmath25cannot be approximated to any multiplicative factor in polytime ; the status of multi - pairasymmetric is open .",
    "we formulate a configuration lp with a variable for every @xmath644-@xmath647 path of regret at most @xmath4 , for @xmath654 , and approximately solve this lp to obtain @xmath39 .",
    "we assign each node @xmath8 to an @xmath666 pair satisfying @xmath667 , ensuring that @xmath668 are assigned to @xmath666 .",
    "let @xmath59 be the nodes assigned to @xmath666 .",
    "shortcut each @xmath644-@xmath647 path to contain only nodes in @xmath59 , and multiply the resulting fractional solution by @xmath669 . for every @xmath654 ,",
    "this yields a collection @xmath670 of fractional regret-@xmath4-bounded @xmath644-@xmath647 paths covering @xmath59 ( to extent of 1 ) .",
    "we now merge all the @xmath644s to create a supernode @xmath2 ( modifying each fractional path accordingly ) , and round each @xmath670 separately using algorithm  [ mainalg ] .",
    "thus , for each @xmath654 , we obtain @xmath671 @xmath644-@xmath647 paths of regret at most @xmath4 covering @xmath59 , and hence @xmath672 paths in all .",
    "we now present lower bounds on the inapproximability of and @xmath25 , and the integrality gap of the configuration lps considered .",
    "we obtain both absolute inapproximability results ( assuming _ p_@xmath673_np _ ) , and results relating the approximability of our problems to that of other well - known problems .",
    "[ symkhard ] it is _",
    "np_-hardto achieve an approximation factor better than 2 for additive- and multiplicative- .",
    "we give simple reductions from and -path .",
    "first , consider additive- .",
    "given an instance @xmath674 , where @xmath131 is a metric , and a length bound @xmath14 , we reduce the problem of determining if there is a solution of length at most @xmath14 to determining if there is an additive - solution of value 1 .",
    "it follows that it is _",
    "np_-hardto approximate additive - to a factor better than 2 .",
    "we designate an arbitrary node of @xmath17 as the root @xmath2 , create a new node @xmath675 and add an edge @xmath676 of cost @xmath14 .",
    "the ( additive ) instance is specified by the shortest - path metric of this new graph @xmath43 , root @xmath2 , and regret - bound @xmath14 .",
    "a solution of length at most @xmath14 yields a solution using one path , where we traverse the tour starting from @xmath2 and then visit @xmath675 .",
    "conversely , given a solution that uses a single path @xmath5 , @xmath5 must end at @xmath675 , and so removing @xmath675 from @xmath5 yields a tour in @xmath17 of length at most @xmath14 .    for multiplicative-",
    ", we consider the following decision version of -path : given a `` sink '' @xmath33 , we want to decide if there is a hamiltonian path of length at most @xmath14 having @xmath33 as one of its end points .",
    "we show that this reduces to the problem of deciding if there is a multiplicative - solution of value 1 ; hence , it is _",
    "np_-hardto approximate multiplicative - within a factor better than 2 .",
    "we add two new nodes @xmath2 and @xmath675 to @xmath17 .",
    "we add edges @xmath677 of cost @xmath14 for all @xmath87 , and edges @xmath676 and @xmath678 of cost @xmath679 .",
    "the multiplicative - instance is specified by the shortest - path metric of this new graph @xmath43 , root @xmath2 and regret - bound @xmath680 .",
    "note that @xmath681 for all @xmath87 , and @xmath682 .",
    "a -path @xmath5 of length @xmath14 ending at @xmath33 yields a multiplicative - solution that uses one path , where we move from @xmath2 to the start node of @xmath5 , then traverse @xmath5 , and finally visit @xmath675 .",
    "this is feasible since the visiting time of every @xmath87 is at most @xmath679 , and the visiting time of @xmath675 is at most @xmath683 .",
    "conversely , suppose we have a multiplicative - solution that uses a single path @xmath138 .",
    "then , @xmath138 must end at @xmath675 , otherwise some node @xmath87 has visiting time at least @xmath684 .",
    "so @xmath138 must move from @xmath2 to some @xmath87 , then cover all the nodes in @xmath46 ending at @xmath33 , and finally move from @xmath33 to @xmath675 .",
    "thus , @xmath138 restricted to @xmath46 yields a hamiltonian path @xmath5 in @xmath17 ending at @xmath33 .",
    "the visiting time of @xmath675 is @xmath685 , so @xmath307 .",
    "next , we prove that the approximability of asymmetric is closely related to that of .",
    "in particular , this connection implies that improving our results for asymmetric ( theorem  [ asymkapx ] ) by an @xmath686-factor would improve the state - of - the - art for .",
    "[ asymkhard ] given an @xmath687-approximation algorithm for in asymmetric metrics , one can achieve a @xmath688-approximation for .",
    "suppose we have an instance with distances @xmath84 whose optimal value is @xmath689 .",
    "for a given parameter @xmath4 , the following algorithm will return a solution of cost at most @xmath690 provided @xmath691 .",
    "we can then use binary search to find the smallest @xmath4 for which the algorithm returns a solution of cost at most @xmath692 , and thus obtain an solution of cost at most @xmath693 .    fix any node to be the root @xmath2 .",
    "the algorithm first runs the @xmath687-approximation for asymmetric on the instance specified by the metric @xmath131 and regret bound @xmath4 to find some collection of rooted paths @xmath114 .",
    "let @xmath508 be the end node of @xmath115 .",
    "for each @xmath115 , we add the @xmath694 arc to obtain an eulerian graph .",
    "the cost of the resulting eulerian tour is @xmath695 .",
    "we claim that if @xmath696 then this cost is at most @xmath692 . to see this , note that an optimal solution to the instance also yields a hamiltonian path starting at @xmath2 of cost at most @xmath4 .",
    "since the regret cost of a rooted path is at most its cost , we infer that the optimum solution to the asymmetric instance with regret bound @xmath4 uses only 1 path .",
    "thus , we obtain that @xmath697 . we know",
    "that @xmath698 , and @xmath699 for every @xmath700 .",
    "thus , @xmath701 .",
    "friggstad  @xcite proved a hardness result for the multi - pairversion of @xmath25 .",
    "we observe that this reduction creates a @xmath25instance where the metric is essentially a regret metric .",
    "thus , we obtain the following hardness results for multi - pair@xmath25 .",
    "[ multihard ] it is _",
    "np_-completeto decide if an instance of multi - pair@xmath25has a solution with zero regret .",
    "hence , no multiplicative approximation is achievable in polytime for multi - pair@xmath25and multi - pairmin - sum @xmath25 .",
    "moreover , multi - pair  is np - hard even when the regret - bound is zero .",
    "we dovetail the reduction in  @xcite . given a tripartite graph @xmath702 with @xmath703 , the tripartite triangle cover problem is to determine if there are @xmath1 vertex - disjoint cliques ( which must be copies of @xmath704 ) in @xmath17 .",
    "this problem is _",
    "np_-complete  @xcite .",
    "create four layers of nodes @xmath705 where @xmath706 and @xmath707 are disjoint copies of @xmath708 , @xmath709 is a copy of @xmath46 , and @xmath710 is a copy of @xmath47 . for each edge @xmath711 , there is exactly one index @xmath328 for which the copies of @xmath79 and @xmath8 are in consecutive layers .",
    "without loss of generality , say @xmath712 and @xmath713 .",
    "then we add an edge between the copy of @xmath79 in @xmath59 and @xmath8 in @xmath714 with cost @xmath715 .",
    "finally , for each @xmath716 we create a source - sink pair that starts at the copy of @xmath79 in @xmath706 and ends at the copy of @xmath79 in @xmath717 .",
    "denote the shortest path metric of this graph by @xmath43 . as in @xcite ,",
    "@xmath17 can be covered with @xmath1 vertex - disjoint cliques if and only if @xmath43 has a solution with maximum ( or total ) regret 0 .",
    "the same reduction shows that multi - pair  is _",
    "np_-hardeven with regret bound 0 .",
    "fixing the regret - bound to zero , @xmath43 has a multi - pair  solution using @xmath25 paths iff @xmath17 can be covered with @xmath25 vertex - disjoint cliques .",
    "[ [ integrality - gap - lower - bounds . ] ] integrality - gap lower bounds .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we prove that a natural configuration - style lp - relaxation for @xmath25has an @xmath29 integrality gap . a common technique used for min - max ( or bottleneck )",
    "problems is to `` guess '' the optimal value @xmath66 , which can often be used to devise stronger relaxations for the problem as well as strengthen the analysis , since @xmath66 now serves as a lower bound on the optimal value ; examples include the algorithms of  @xcite for unrelated - machine scheduling , and  @xcite for bottleneck .",
    "we show that this approach does not work for @xmath25 .",
    "given a guess @xmath4 on the maximum regret , similar to and , one can consider the following feasibility problem to determine if there are @xmath25 rooted paths in @xmath162 that cover all nodes .",
    "( recall that @xmath162 is the collection of all rooted paths with regret at most @xmath4 . )",
    "@xmath718 let @xmath719 be the smallest @xmath4 for which is feasible , and @xmath559 be the optimal value of the @xmath25instance .",
    "we describe instances where @xmath720 ; thus , the `` integrality gap '' of is at least @xmath25 .",
    "[ intgap ] for any integers @xmath721 , there is a @xmath25instance with @xmath722 such that @xmath723 but any integer solution with maximum regret less than @xmath724 must use at least @xmath725 rooted paths .",
    "thus , ( i ) @xmath726 yields @xmath720 ; ( ii ) taking @xmath727 shows that one needs @xmath728 paths to achieve maximum regret less than @xmath729 .",
    "our instance will consist of copies of the following `` ladder graph '' @xmath730 .",
    "we have @xmath731 .",
    "define @xmath732 .",
    "@xmath733 consists of the edges @xmath734 , which have cost @xmath735 , along with edges @xmath736 , which have unit cost ( see figure  [ ladder ] ) .",
    "consider the shortest path metric of @xmath737 .",
    "any rooted path that covers all nodes of @xmath737 must have regret at least @xmath724 ( and this is achieved by the path @xmath738 ) .    .",
    "path @xmath739 is highlighted with dashed edges . ]",
    "consider the paths @xmath740 given by @xmath741 each @xmath115 has regret exactly 1 and each node @xmath742 lies on precisely @xmath735 of these paths .",
    "so setting @xmath743 for all @xmath744 , and @xmath745 for all other paths in @xmath746 yields a solution that covers all the nodes in @xmath46 to an extent of 1 using @xmath747 paths .",
    "the final instance consists of @xmath748 copies of @xmath737 that share the root @xmath2 but are otherwise disjoint .",
    "we set @xmath722 . taking the above fractional solution for each copy of @xmath737 ,",
    "yields a feasible solution to when @xmath277 .",
    "now consider any integer solution with maximum regret less than @xmath724 .",
    "note that any rooted path with regret less than @xmath749 can only traverse nodes from a single ladder @xmath737 .",
    "also , as noted above , if a single path covers all the nodes of some copy of @xmath737 , then this path has regret at least @xmath724 .",
    "therefore , the solution must use at least @xmath750 paths .",
    "lemma  [ klplem ] we obtain an approximate solution to ( reproduced below ) , by considering the dual problem , which has an exponential number of constraints .",
    "recall that @xmath5 indexes paths in @xmath751 .",
    "the @xmath754 dual variables correspond to the primal constraints .",
    "we show that can be solved approximately , and hence can be solved approximately . separating over the dual constraints",
    "amounts to determining , given rewards @xmath755 on the nodes , if there is a rooted path of regret at most @xmath4 that gathers reward more than 1 .",
    "we try all possible locations @xmath33 for the end - node of this path ; for a given destination @xmath33 , the above problem is an instance of orienteering .",
    "define @xmath756 .",
    "note that @xmath166 is the largest @xmath757 such that @xmath758 .",
    "we use the @xmath492-approximation algorithm to give an _ approximate _ separation oracle in the following sense .",
    "given @xmath759 , we either show that @xmath760 , or we exhibit a hyperplane separating @xmath761 from @xmath762 . thus",
    ", for a fixed @xmath757 , in polynomial time , the ellipsoid method either certifies that @xmath763 , or returns a point @xmath761 with @xmath760 .",
    "the approximate separation oracle proceeds as follows .",
    "we first check if @xmath764 , hold , and if not , use the appropriate inequality as the separating hyperplane .",
    "next , for each location @xmath765 , we run the @xmath492-approximation algorithm for orienteeringspecified by rewards @xmath755 , @xmath2 , @xmath33 , and length bound @xmath766 . if in this process we ever obtain a rooted path @xmath5 with reward greater than 1 , then @xmath241 and we return @xmath767 as the separating hyperplane .",
    "otherwise , for all paths @xmath241 , we have @xmath768 and so @xmath760 .",
    "we find the largest value @xmath769 ( via binary search ) such that the ellipsoid method run for @xmath769 ( with the above separation oracle ) returns a solution @xmath770 with @xmath771 ; hence , @xmath772 .",
    "for any @xmath54 , running the ellipsoid method for @xmath773 yields a polynomial - size certificate for the emptiness of @xmath774 .",
    "this consists of the polynomially many violated inequalities returned by the separation oracle during the execution of the ellipsoid method and the inequality @xmath775 . by duality ( or farkas lemma ) , this means that here is a polynomial - size solution @xmath133 to whose value is at most @xmath776 .",
    "taking @xmath161 to be @xmath777 ( so @xmath778 is polynomially bounded ) , this also implies that @xmath133 has value at most @xmath779 .",
    "lemma  [ reglplem ] the proof is similar to the proof of lemma  [ klplem ] , but requires a more refined argument .",
    "we again argue that an approximate solution to the dual lp can be computed efficiently .",
    "however , since the dual objective function contains negative terms , even if our approximate separation oracle deems a point @xmath780 to be feasible , implying that some point in the neighborhood of @xmath780 is feasible for , we can not necessarily claim any guarantee on the value of this dual feasible solution relative to the value of @xmath780 ( in fact its value may even be negative ! ) .",
    "consequently , we will need a more refined notion of approximation for the dual lp .",
    "this in turn will translate to a approximate solution for the primal , where the approximation is in both the objective value and the satisfaction of the primal constraints .",
    "define @xmath783 so @xmath529 is the largest @xmath757 such that @xmath784 . for a set @xmath52 of nodes ,",
    "let @xmath785 denote @xmath786 .",
    "the separation problem for @xmath787 amounts to finding a rooted path that maximizes @xmath788 . given a @xmath789-approximation algorithm for unweighted ,",
    "one can obtain a path @xmath5 such that @xmath790 , where @xmath791 and @xmath792 .",
    "let @xmath793 .",
    "we scale and round the rewards to @xmath794 .",
    "we try every destination @xmath33 and run the @xmath789-approximation algorithm on the instance with rewards @xmath795 ( which involves making at most @xmath796 copies of a node ) , @xmath2 , @xmath33 .",
    "if an optimal solution @xmath797 ends at @xmath33 and achieves reward @xmath798 ( note that @xmath799 ) , then we obtain an @xmath2-@xmath33 path @xmath5 with reward at least @xmath800 and @xmath801 .",
    "we use the above bicriteria approximation algorithm as follows .",
    "given @xmath802 , we first check if @xmath803 , hold ; if not , we use the appropriate inequality as a separating hyperplane between @xmath780 and @xmath804 .",
    "next , we use the above algorithm to obtain a rooted path @xmath5 .",
    "if @xmath805 , then we use @xmath806 as a separating hyperplane between @xmath780 and @xmath804 . otherwise , we know that @xmath807 for all @xmath808 , and so @xmath809 .",
    "thus , for a fixed @xmath757 , the ellipsoid method either determines that @xmath810 or returns a point @xmath809 .",
    "we find the largest value @xmath769 for which the latter outcome is obtained .",
    "so @xmath811 .",
    "for any @xmath54 , running the ellipsoid method with @xmath812 returns a polynomial - size certificate for the emptiness of @xmath804 .",
    "taking @xmath813 , this shows that @xmath769 is an upper bound on the maximum value of @xmath814 subject to and the constraints @xmath815 for every @xmath816 , where @xmath817 is the polynomial - size collection of paths corresponding to the path - inequalities returned by the approximate separation oracle .",
    "taking the dual , we obtain the following lp : @xmath818 whose optimal value is at most @xmath769 .",
    "the optimal solution @xmath39 to the above lp satisfies the desired properties ."
  ],
  "abstract_text": [
    "<S> we consider vehicle - routing problems ( s ) that incorporate the notion of _ regret _ of a client , which is a measure of the waiting time of a client relative to its shortest - path distance from the depot . </S>",
    "<S> formally , we consider both the additive and multiplicative versions of , what we call , the _ regret - bounded vehicle routing problem _ ( ) . in these problems , we are given an undirected complete graph @xmath0 on @xmath1 nodes with a distinguished root ( depot ) node @xmath2 , edge costs @xmath3 that form a metric , and a regret bound @xmath4 . </S>",
    "<S> given a path @xmath5 rooted at @xmath2 and a node @xmath6 , let @xmath7 be the distance from @xmath2 to @xmath8 along @xmath5 . </S>",
    "<S> the goal is to find the fewest number of paths rooted at @xmath2 that cover all the nodes so that for every node @xmath8 covered by ( say ) path @xmath5 : ( i ) its additive regret @xmath9 , with respect to @xmath5 is at most @xmath4 in _ additive- _ ; or ( ii ) its multiplicative regret , @xmath10 , with respect to @xmath5 is at most @xmath4 in _ multiplicative-_.    our main result is the _ first _ constant - factor approximation algorithm for additive- . </S>",
    "<S> this is a substantial improvement over the previous - best @xmath11-approximation . </S>",
    "<S> additive - turns out be a rather central vehicle - routing problem , whose study reveals insights into a variety of other regret - related problems as well as the classical _ distance - constrained _ ( ) , enabling us to obtain guarantees for these various problems by leveraging our algorithm for additive - and the underlying techniques . </S>",
    "<S> we obtain approximation ratios of @xmath12 for multiplicative- , and @xmath13 for with distance bound @xmath14 via reductions to additive- ; the latter improves upon the previous - best approximation for .    </S>",
    "<S> a noteworthy aspect of our results is that they are obtained by devising rounding techniques for a natural _ configuration - style lp_. this furthers our understanding of lp - relaxations for s and enriches the toolkit of techniques that have been utilized for configuration lps . </S>"
  ]
}
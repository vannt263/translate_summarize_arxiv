{
  "article_text": [
    "the memento framework provides http extensions for inter - archive communication and integrating the past and current web @xcite .",
    "memento timemaps , part of the memento framework , provide an aggregate view of mementos of a uri - r existing in distributed archives as a single document called a timemap .",
    "these timemaps , identified by a uri - t , contain a set of uri - ms that each have a datetime on which they were archived , or a memento - datetime @xcite .",
    "for example , the timemap shown in figure [ tm ] gives a set of mementos aggregated from two repositories , the national archives of uk and the internet archive s wayback machine .",
    "it also spans from the first memento at dec . 12 , 2007 to the last memento at dec . 14 , 2011 . because timemaps can aggregate lists of uri - ms from several sources , many factors can influence the cardinality of a timemap , including network downtime , availability of the archive , hardware malfunctions , routine maintenance , etc .",
    "human - induced interruptions in memento availability can also occur .",
    "for example , the robots.txt protocol is a redaction method at the internet archive ( ia ) that has been well documented .",
    "copyright and content sensitivity can also cause mementos to be taken out of public access @xcite .",
    "these redaction requests are legitimate removals of mementos at the content owners request , and not a failure on the part of the archives .",
    "a related modification of archives offerings is uri migration .",
    "for example , the migration of a uri such as http://example.org/archives/http://thesite.com/ to a uri of http://memento.example.org/archive/http://thesite.com/ would change all uri - ms for the archive s contributions to the timemap of uri - r .",
    "migrations of this nature assign new uris to existing mementos .    ....",
    "< http://http://mementoproxy.cs.odu.edu / aggr / timemap / link / http://flare.prefuse.org/ > ;          rel=\"self \" ; type=\"application / link - format \" , < http://mementoproxy.cs.odu.edu/aggr/timegate/http://flare.prefuse.org/ > ;          rel=\"timegate \" , < http://flare.prefuse.org/>;rel=\"original \" , < http://api.wayback.archive.org/memento/20071213002102/http://flare.prefuse.org/ > ;          rel=\"first memento \" ; datetime=\"thu , 13 dec 2007 00:21:02 gmt \" , < http://api.wayback.archive.org/memento/20080509125659/http://flare.prefuse.org/ > ;          rel=\"memento \" ; datetime=\"fri , 09 may 2008 12:56:59 gmt \" , < http://webarchive.nationalarchives.gov.uk/20080908074106/http://flare.prefuse.org/ > ;          rel=\"memento \" ; datetime=\"mon , 08 sep 2008 00:00:00 gmt \" ,     ...",
    "< http://api.wayback.archive.org/memento/20100815085828/http://flare.prefuse.org/ > ;          rel=\"memento \" ; datetime=\"sun , 15 aug 2010 08:58:28 gmt \" , < http://webarchive.nationalarchives.gov.uk/20100909131056/http://flare.prefuse.org/ > ;          rel=\"memento \" ; datetime=\"thu , 09 sep 2010 00:00:00 gmt \" , < http://api.wayback.archive.org/memento/20101107020354/http://flare.prefuse.org/ > ;          rel=\"memento \" ; datetime=\"sun , 07 nov 2010 02:03:54 gmt \" ,     ....      since timemaps do not always improve when they change ( e.g. , due to archive unavailability ) , caching policies become important  traditional caches could potentially cache a worse timemap than should be available .",
    "timemaps ideally follow a monotonically increasing growth pattern .",
    "that is , timemaps should never _ lose _ mementos ( except in rare cases of redaction ) ",
    "mementos should remain listed in a timemap after their first appearance . since timemaps are expensive to generate and change slowly , they are good candidates for caching",
    ".      this paper studies a set of 4,000 uri - rs ; 1,000 uri - rs each came from the open directory project , delicious , bit.ly , and search engine caches @xcite .",
    "we observed the timemaps of the 4,000 uri - rs for a 3-month period ( from may 1st to july 31st , 2012 for a total of 92 days ) and we mapped and evaluated their evolution and change patterns .",
    "this paper shows that timemap cardinality is monotonically increasing ( i.e. , the same or increasing ) for 80.2% of all timemap changes in the observation period .",
    "we also proposes a new caching algorithm utilizing a ttl value for caching memento timemaps .",
    "this caching algorithm exploits the knowledge that timemaps sometimes do not change `` for the better '' and therefore should not always be cached .",
    "the change patterns of the observed timemaps are used to empirically determine the optimal ttl value .",
    "it is important to understand the behavior of timemaps and the associated availability of mementos .",
    "for example , the warrick project @xcite uses timemaps to recover mementos with the ultimate goal of recovering lost websites . obviously , understanding how archives advertise their mementos and",
    "understanding how the availability changes is important for several aspects of warrick .",
    "caching timemaps is used to balance load on the archives vs. warrick s need for the most recent mementos .    due to the popularity of memento ,",
    "other services and tools have begun to consume and rely on timemaps to provide functionality .",
    "for example , the uk web archive is providing a visualization tool for timemaps @xcite .",
    "additionally , android s memento browser @xcite and an ios mobile memento browser @xcite all rely on timemaps to provide time travel for the web .",
    "observing and studying change on the web is not new ; several works have observed the changes that web pages undergo over time , proving their ephemeral nature @xcite .",
    "in contrast to these studies , timemaps can be thought of as web resources that can not be evaluated as `` fresh '' solely on their age or change status .",
    "disk failures are one reason for changes in memento availability . a case study of failures at the internet archive ( ia ) is provided in schwarz s 2006 work @xcite .",
    "the organization of archives is also important ; we must understand how an entire server failure affects the availability of mementos .",
    "jaffe s work in 2004 describes the ia s architecture @xcite .",
    "caching is an important addition to the web .",
    "it reduces latency , load , and user wait times . a set of caching methods commonly utilized on the internet  including ttl values ",
    "are discussed in wang s 1999 survey paper @xcite .",
    "other work has been done to benchmark the performance boosts achieved when implementing caching of dynamic contents @xcite .",
    "other works have studied best efforts for caching dynamically generated content , such as that generated on the server - side @xcite .",
    "reverse proxies such as squid @xcite improve the efficiency of web traffic by caching content .",
    "this caching is independent of the content server and requester , allowing both to operate without modification .",
    "the work we present can be implemented using a reverse proxy ( e.g. , squid allows custom caching rules ) or by modifying the memento aggregator cache , and will reduce the load on the memento proxies while increasing their reliability for users .",
    "we observed timemap cardinality ( number of mementos present in a timemap ) daily for 4,000 * 92=386,400 total download attempts and the consistency of uri - ms and the datetime values associated with a memento throughout the experiment .",
    "once a day , a set of scripts downloaded the 4,000 timemaps so that we can analyze the daily changes of the mementos advertised in the timemaps , as well as how the contents of the timemaps differ between observations . to ensure",
    "the 4,000 timemaps could be retrieived in a 24 hour period , the scripts used a timeout for accessing the timemaps .",
    "a 45 second timeout was used because this is the upper limit that humans are willing to wait when accessing a resource @xcite .",
    "the experiment also ran 11 parallel scripts to access different portions of the 4,000 uri dataset . with this concurrency and limited wait time",
    ", all 4,000 timemaps were accessed consistently within a 24 hour period .",
    "the first step in the experiment setup was to create and install a new set of memento proxies separate from the production proxies at los alamos national laboratory and old dominion university .",
    "the existing proxies are constantly being accessed by mementofox , users , and other experiments .",
    "we installed a set of proxies on a separate , private experiment machine ( ` 128.82.7.240 ` ) to prevent any contamination from the public memento uses .",
    "the proxies were installed just as they exist on the production memento machines .",
    "however , the production proxies cache their responses in an infinitely - sized cache with a ttl=@xmath0 to speed up the response time to the users , as well as to prevent unnecessary load on the archives .",
    "the caching software had to be removed from the experiment proxies to ensure fresh results of each observation .",
    "these memento proxies queried for , constructed , and served the timemaps throughout the experiment run .",
    "timemaps can change , evolve , and grow like traditional web resources .",
    "however , timemaps differ from traditional web resources in that they do not always change `` for the better . ''",
    "traditional web resources can be maintained in a cache by monitoring any change to the resource content .",
    "timemaps can change in a detrimental way  they sometimes lose mementos due to intermittent contributions from archives , uri changes , or archival redactions .",
    "archival redactions will results in a http 404 response when dereferencing a uri - m but redactions are very rare .",
    "we are more concerned about transient errors . as such",
    ", timemaps can not be cached in the same manner  only timemaps that have been changed in a positive way should be updated in a cache . prior to this work",
    ", there was no method to designate a positive or negative change to a timemap .",
    "the production memento proxies utilize caching to limit the load on the archives and increase response time to users .",
    "the proxies are research prototypes , and as such , the caching algorithm for memento was designed around one of two simple solutions .",
    "the two simplest caching algorithms are to cache everything or cache nothing .",
    "caching nothing induces unneeded and unfair load on the archives contributing to the timemaps and increases the service time for users due to the latency between the memento proxies and archives .",
    "therefore , the cache everything approach was taken .",
    "the proxies cache the first timemap observed in system and holds it until a cleansing of the cache is performed manually .",
    "if a _ bad _",
    "timemap is cached , it persists in the cache until the cache is manually cleaned .",
    "timemaps that are entirely empty ( i.e. , receive an http 404 response ) are especially bad ( the timemaps show that a uri - r is not archived , when in fact , it may have mementos that were not reported ) , and are discussed in more depth in section [ casesection ] .      during the experiment ,",
    "three outages were observed as noted by the red circles in figure [ optavg ] .",
    "annotation 1 in the figure indicates where the locally installed proxies were inoperable from may 16  may 18 due to a system reset of the department machines . as indicated by 2 in the figure ,",
    "the internet archive proxies were inoperable due to edits to the api occurring at the internet archive .",
    "as indicated by 3 in the figure , there was a massive power failure at at our university that caused the machines to automatically reboot , killing the experiment run .",
    "this failure went undetected for 6 days in june .",
    "we took these time periods of low memento availability into consideration during the calculations of our results .",
    "the previous timemaps were substituted for the missing timemaps , effectively treating them as unchanged instead of non - existent .",
    "it was immediately clear that timemaps were not monotonically increasing .",
    "that is , timemaps sometimes get smaller  or `` worse '' instead of staying the same or growing .      utilizing the collected timemaps over the course of the observation period , we categorized the changes to the timemaps .",
    "we used the classifications in table [ classtable ] to determine how changes affected the timemaps .",
    "the table uses _ a _ to denote the number of archives that contribute to a timemap at time _",
    "t _ and _ a _ to denote the number of archives that contribute to a timemap at time _",
    "t+1_. similarly , the table uses _ m _ to denote the number of mementos in the timemap at time _",
    "t _ and _ m _ to denote the number of mementos in the timemap at time _",
    "t+1_.    timemaps can lose and gain mementos and contributing archives .",
    "this experiment utilizes the change patterns of timemaps to predetermine the change rates for the observed uri - rs .",
    "the number observed changes are provided in figure [ optimalttls ] .",
    "most timemaps changed 3 or 4 times over the course of the experiment .        as shown in figure [ optimalttls ]",
    ", most timemaps underwent 3 changes throughout the observation period .",
    "observing these change rates provides insight into the most appropriate ttl values for the timemaps .",
    "it also disregards timemaps that were always empty during the collection part of the experiment . on average ,",
    "the timemaps observed in this experiment changed every 37.6 days , with the most frequently occurring change rate observed of every 30 days , which roughly equates to 3 changes throughout the observation period .",
    "mementos can be added by contributing archives , or mementos can be redacted by contributing archives . contributing archives",
    "can also disappear from a timemap due to service interruption or other unavailability .",
    "new archives can begin contributing to a timemap if a new uri - r is added to the collection .",
    "cases 6 and 7 are the most detrimental to a timemap  the overall cardinality of the timemap is reduced by the loss of mementos .",
    "case 1 is the most observed case , and represents the timemap remaining consistent between two times .",
    "cases 2 , 3 , 4 , and 5 all result in additional mementos being added and are therefore improvements upon the timemap at the previous time .",
    "case 4 is unique in that an archive is lost but there are still new mementos in the timemap ; we lean toward updating the cache in case 4 . given that case 6",
    "is the most frequently observed change to timemaps , we show that if a timemap changes , it is most often for the worse .",
    "the occurrence of cases throughout the experiment is provided in table [ classtable ] .",
    "these classifications of timemaps establish the notion of _ better _ and therefore how to handle cache replacement .",
    "the cardinality of a timemap at observation time _",
    "t _ is shown as the red lines in figures [ firstgraph1 ] - [ comp4 ] .",
    "the blue lines are the cumulative size of the set of all unique uri - ms up to time _",
    "t _ : [ 0 , _ t _ ] .",
    "a memento is defined in equation [ mem ] as a version of a uri - r at time _",
    "k_.    @xmath1    the uri that identifies a memento is defined in equation [ urim ] .",
    "@xmath2    timemaps are composed of mementos of a uri - r , as defined in equation [ tm ] .",
    "@xmath3    the cardinality of a timemap @xmath4 is defined in equation [ card ] .",
    "note that this refers to the number of unique uri - ms that appeared in a uri - r s timemap as observed at time _",
    "t_.    @xmath5    thus , monotonically increasing timemaps would satisfy the condition in equation [ min ] .",
    "@xmath6      when comparing uri - ms in a timemap to determine how timemaps grow over time , lexigraphically comparing uri - ms is the intuitive method .",
    "we will refer to this method of matching as the _ strict policy_.    the best possible set of uri - ms is the cumulative set of all uri - ms that have been observed in the timemaps until a time _ t_. this represents the best possible timemap we would see if timemaps were monotonically increasing .",
    "this is represented by equation [ stricteqn ] .",
    "@xmath7    uris are not expected to change @xcite , but , due to archives being restructured or changes in the uri - m structure , new uris identifying existing mementos sometimes occur .",
    "loose policy _ only matches the tuple of memento - datetime and archive ( @xmath8 , k ) of a uri - m and the uri - r for which it is a memento .",
    "the archive is determined by the hostname and occasionally path of the uri - m .",
    "loose policy _ is immune to uri changes and should recognize mementos identified by different uri - ms across time , testing the theory that when mementos disappear from timemaps , they actually just change uri - ms , and not memento - datetimes .",
    "conditions under which this occurs include architecture modifications by the archives , uri scheme changes , or even errors with the uri - m listed .",
    "timemap cardinality under the _ loose policy _ is measured in accordance with equation [ looseeqn ] .",
    "@xmath9    for example , the timemap in figure [ tmkendrick ] , the uri - ms would _ loosely _ match the other uri - ms with the same memento - datetimes . since they have the same archive ( web.archive.org ) and memento - datetime (",
    "` mon , 01 nov 2010 06:02:04 gmt ` ) . all would be considered lexigraphically different and not match according to the _ strict policy _ because of the same memento - datetime but different uri - r ( http://aarp.org:80/health/ ) .    ....",
    "< http://web.archive.org/web/20101101060204/http://aarp.org:80/health/ > ;      rel=\"memento\";datetime=\"mon , 01 nov 2010 06:02:04 gmt \" ,",
    "< http://web.archive.org/web/20101101060204/http://www.aarp.org:80/health/ > ;      rel=\"memento\";datetime=\"mon , 01 nov 2010 06:02:04 gmt \" , < http://web.archive.org/web/20101101060204/http://www.aarp.org:80/health/ > ;      rel=\"memento\";datetime=\"mon , 01 nov 2010 06:02:04 gmt \" , ....    comparisons of cumulative mementos under the _ loose _ and _ strict policies _ show that mementos receive new @xmath10 but are still the same memento @xmath11 .",
    "loose policy _",
    "graphs do not show an increase when this activity takes place , while the _ strict policy _",
    "mistakes this new @xmath12 as a new memento .",
    "the two graphs of the yardsellr.com timemap , ( figures [ strict ] and [ loose ] ) and whitehouse.gov timemap , ( figures [ strict3 ] and [ loose3 ] ) both demonstrate well - behaved timemaps in which the _ loose _ and _ strict policy _",
    "graphs match one another .",
    "this shows that there is no difference between the timemap cardinalities according to the _ loose _ and _ strict policies_. however , these two timemaps change in different ways during the observation period .",
    "the yardsellr.com timemap incurs a spike of mementos in mid - may due to an influx of mementos from the internet archive .",
    "these mementos do not reappear in the timemap for the duration of the observation period , which results in a gap between the cumulative and observed mementos ( observed as the gap between the blue and red lines , respectively ) . alternatively , the whitehouse.gov timemap frequently has observed cardinality equal to the cumulative cardinality , thus showing that the maximum number of mementos frequently appears in the timemap .",
    "the consistent whitehouse.gov timemap demonstrates expected behavior from a timemap .",
    "there are some slight dips in timemap cardinality caused by an archive being temporarily unavailable .",
    "these dips are not permanent , as seen in the yardsellr.com timemap",
    ".    an additional scenario can occur when a memento , or subset of mementos , disappears from the timemap altogether .",
    "this is observed by the dip representing the loss of uri - ms from the google code api timemap on may 22nd in figures [ strictdip ] and [ loosedip ] .",
    "this is noteworthy because there is a complete swapping of mementos that occurs .",
    "while the observed cardinality decreases , there is an increase in the cumulative number of mementos ( the red line goes down while the blue line goes up ) .",
    "this is due to the swapping of an entire set of uri - ms .",
    "google translate has a timemap cardinality @xmath13 = 5,800 .",
    "these mementos are populated from several different archives , but the majority of uri - ms come from the internet archive and from archeif web . the timemap size over time is provided in figures [ strict4 ] and [ loose4 ] using the _ strict _ and _ loose policies _ , respectively .",
    "these graphs differ greatly in their representation of the timemap sizes .",
    "when using the _ strict policy _ , the timemap appears to be nearly consistently growing in cardinality ( the blue line , and number of total unique uri - ms observed over the observation period ) , while showing only slight ( nearly static ) growth in the cardinality of the timemaps observed on a given day .",
    "this is due to uri - ms with the same memento - datetime appearing in a timemap for a short span of time and never returning .",
    "the _ loose policy _ provides completely different results . as mentioned previously ,",
    "the _ loose policy _ uses only the combination of uri - m s memento - datetime and the hosting archive as an identifier .",
    "the size of the daily observed uri - ms rises above the total number of observed memento - datetimes .",
    "this is observed to be an error in the archeif web proxy  the proxy was providing ` 00:00:00 ` as the time portion of the memento - datetime for all mementos returned , causing a discrepancy between the _ strict _ and _ loose policies_.    notice that some memento - datetime values are replicated , even though the uri - m is not .",
    "this is due to the simultaneous capture of resources by the archives .",
    "this produces a discrepancy between the _ strict _ and _ loose policies_.",
    "as observed in section [ results ] , memento timemaps do not always change for the better .",
    "timemap cardinality can decrease due to various external influences .",
    "the memento framework proxies currently have a cache with an _ infinite _ ttl  timemaps are cached on their first occurrence and never automatically replaced .",
    "this optimization was critical during the initial deployment of the research prototype memento aggregaters .",
    "we tested a continuum of ttl values to find the best life span of an entity in the cache .",
    "a ttl=0 will maximize the freshness of the timemaps in the cache , but will also maximize the load on the archives and unnecessarily delay consumer applications .",
    "a ttl=@xmath0 will minimize the load on the archives , but also minimize the freshness of the timemaps in the cache .",
    "therefore , caching a bad timemap is especially bad if we are unfortunate enough to receive a timemap with a cardinality of 0 , which will remain in the cache until the cache is cleared .",
    "we tested ttl = n , where n=\\{0 ... 92 } with 92 effectively equaling @xmath0 .",
    "we assume the aggregater can store an infinite number of timemaps and focus only on the possible invalidation of a single timemap when its ttl has expired .",
    "to determine the most effective cache policy , we tested the _",
    "current _ , _ unconditional _ , and _ conditional _ policies .",
    "the _ current _ caching policy simulates the operation of the memento aggregater s current cache with a ttl=@xmath0 to never replace timemaps .",
    "the _ unconditional _",
    "policy employs ttl values of 0 , @xmath0 , and _",
    "n_. ttl values set a time limit for cache replacement  items in a cache are not replaced or removed until a set time limit expires .",
    "this policy is used as the baseline measurement since it does not exploit knowledge of the timemaps contents .",
    "conditional _ policy employs ttl values of 0 , @xmath0 , and _",
    "n _ , but only replaces timemaps in the cache when they have improved according to the _",
    "loose policy_. the cases 2 - 5 are cases that will update an entry in the cache because the timemap gains mementos ( according to table [ classtable ] ) .      to measure the impact and quality of the cache replacement policies , the memdays penalty is defined in equation [ memdaysmeasure ] .",
    "the memdays penalty is the sum of the number of mementos that are missed due to a cache hit when there is a better version of the timemap available over the time _",
    "t _ of the experiment .",
    "@xmath14    memdays provides a cumulative measure of the detrimental effects of the cache .",
    "this metric is the sum of fresh mementos missed for each day those mementos are not available in the cache .",
    "an example is provided in figure [ timeline ] .",
    "a timemap with @xmath13 = 6 is cached at time _ _ t__=0 . at _ _",
    "t__=1 , @xmath13=6 .",
    "since @xmath13 remained consistent , the cumulative memday measure is 0 .",
    "however , @xmath13 increases to 8 at time _ _ t__=2 . since the cached @xmath13=6 , the memday measure increases to 2 since 8 - 6=2 . at time _",
    "_ t__=3 , the difference between the cached and live @xmath13 is still 2 , increasing the cumulative memday to 4 .    at time _",
    "_ t__=4 , the live @xmath13=8 .",
    "the difference between the cached and live @xmath13 is now 4 , increasing the memday by 4 to 8 . at _ _",
    "t__=5 , the cache is updated with the new timemap @xmath13=8 , and therefore the cached and live @xmath13 are equal , adding no additional memday penalty .    in this example",
    ", q=2 because the archives contributed to the cached version twice at _ _",
    "t__=0 and _ _ t__=5 .",
    "the final accumulations of memday=8 .",
    "the complement to memdays is the load on the repositories , or amount of queries q ( equation [ q ] ) .",
    "this is the sum of the number of times the cache requests a timemaps from the archives over the course of _ t _ days in the experiment , effectively measuring the cache misses due to expired ttl values .",
    "notionally , this is inversely related to the memdays measure in equation [ memdaysmeasure ] .",
    "an optimal caching strategy can be determined by minimizing load on the q and memdays simultaneously .",
    "@xmath15      at the conclusion of this experiment , we calculated the average number of timemap observations in which we observed a monotonically increasing trend .",
    "only 80.2% of all observations either remained the same or provided an improvement to the existing timemap ( figure [ optimalttls ] ) .    to recreate a series of timemaps , we used a three - month - long observation period to test the cache replacement policies .",
    "we ran a simulation to access the 4,000 timemaps with the three caching policies implemented with the _",
    "loose policy_. the cache size is unlimited for the purposes of this experiment ; our goal was only to test the behavior of the replacement policies as they relate to timemap change patterns .      as with any cache replacement policy , it is necessary to determine how many updates are missed by utilizing a cache .",
    "since the concept of replacement in this unique cache replacement experiment is limited to those timemaps that are _ better _ ( based on the cases in table [ classtable ] ) than the currently cached version , this experiment counts only those replacements that would result in an improved timemap being placed in the cache .",
    "the results of this experiment are provided in figure [ missedupdates ] .",
    "a primary problem with the current caching algorithm is that timemaps with 0 mementos might be cached when timemaps with more than 0 mementos exist at another time .",
    "false 0-sized timemaps ( i.e. , a 404 response for a timemap ) are especially detrimental to consumers of timemaps since this suggests that a uri - r is not archived when , in fact , it has mementos .",
    "this experiment measures the occurrence of these false 0-sized timemaps .",
    "additionally , given the rudimentary caching strategies available , a false 0-sized timemap should not replace a timemap that lists mementos .",
    "this is a particularly detrimental occurrence of case 6 ( table [ classtable ]  lost an archive and lost mementos ) to consumers of timemaps .",
    "as shown in figure [ false0graphs ] , the best ttl value to minimize the false 0-sized timemaps is 0 .",
    "however , this induces an unnecessarily large load on the archives .",
    "this shows that timemaps normally remain constant .",
    "however , when they do change , they tend to get worse , as shown in figure [ optimalttls ] .",
    "+   +      the primary measure used in this experiment to determine how well the cache replacement policies are performing is the memday penalty ( section [ cacheproof ] ) . using _ unconditional _ , our experiment shows the memday penalty - saved trade - off in figure [ memdaypenalties2 ] .",
    "the memdays for _ conditional _ are shown in figure [ memdaypenalties ] .",
    "notice that _ conditional _ shows improvement over _ unconditional _ by accumulating fewer memdays during the simulation .",
    "this is because _ unconditional _ has the potential to cache a timemap with @xmath13 less than the one in the cache , while _ conditional _ ensures that the cached timemap has the highest @xmath13 .",
    "as expected , lower ttl values result in fewer missed updates .",
    "however , lower ttl values lead to additional queries ( q ) to the archives .    in _ unconditional _ , running a cache that updates timemaps at every transaction ( ttl=0 ) results in memdays=98,312 , but q=368,000 ( 368,000 requests made to the archives to update the cache ) .",
    "that is , 98,312 mementos are missed because the cache was updated with worse , lower - cardinality timemaps .",
    "when ttl=@xmath0 , memdays=4,010,406 and + q=4,000 .",
    "ttl=@xmath0 is the _ current _ policy of the memento aggregater .",
    "the optimal ttl value for _ unconditional _ can be found at the intersection of the q line ( red ) , and the memday line ( blue ) in figure [ memdaypenalties2 ] . at this point ,",
    "memdays=784,895 due to cache staleness , but q=92,000 . subsequent data produces a worse trade off between requests to the archives and mementos missed by the users .",
    "the data shows that the best ttl value for a timemap cache , located at the intersection of the memday and q lines , is 10 days .    in",
    "_ conditional _ , running a cache that updates timemaps at every transaction ( ttl=0 ) results in memdays=0 ( or 0 mementos being missed ) , but q=368,000 ( 368,000 requests made to the archives to update the cache ) .",
    "conditional _ policy improves upon _ unconditional _ by 98,312 memdays when ttl=0 .",
    "conditional _ ensures the timemap with the highest cardinality remains in the cache , there are no memdays incurred , as opposed to _",
    "unconditional _ which blindly assumes improvement to timemaps when they change ; this is an improper assumption as shown by the change patterns in table [ classtable ] .",
    "when ttl=@xmath0 , memdays=4,010,406 and q=4,000 , identical to _ unconditional _ ; in both policies , a ttl=@xmath0 caches the first timemap available and never replaces it , accumulating memdays for the duration of the experiment .",
    "the optimal ttl value for _ conditional _ can be found at the intersection of the q line ( red ) , and the memday line ( blue ) in figure [ memdaypenalties ] . at this point , memdays=588,368 due to cache staleness ( only 7,207 missed timemap updates ) , but q=23,000 .",
    "subsequent data produces a worse trade off between requests to the archives and mementos missed by the users .",
    "the data shows that the best ttl value for a timemap cache , located at the intersection of the memday and q lines , is 15 days .",
    "the optimal ttl for _ conditional _ improves upon the optimal ttl for _ unconditional _ by reducing q by 69,000 and memday by 196,527 due to the ability to only update the cache with _",
    "better _ timemaps .",
    "this is also intuitively satisfying since timemaps change less frequently ( every 30 days on average shown in figure [ optimalttls ] ) than our optimal ttl of 15 days .",
    "the study outlined in this paper observed 4,000 timemaps for uri - rs over the course of three months and measured their consistency over time .",
    "we show that timemaps are monotonically increasing only 80.2% of the time . due to this evidence , a new _ conditional _ caching algorithm must be implemented to ensure users have access to the best possible timemaps .",
    "the current memento aggregater operates with a ttl=@xmath0 , which produces memdays=4,010,406 and q=4,000 ; we have proposed a caching algorithm that implements a ttl value of 15 days and a _ conditional _ replacement policy in which responses that are smaller than previous responses are not cached .",
    "ttl=15 produces memdays=588,368 and q=23,000 .",
    "this shows an improvement on the current memento aggregater operation by 3,422,038 memdays while only making 19,000 more queries to the archives .",
    "it improves upon the _ unconditional _ policy by an observed q=69,000 and memday=196,527 .",
    "this work supported in part by the nsf ( iis 1009392 ) and the library of congress .",
    "we also thank robert sanderson ( lanl ) for the memento aggregater research prototype and ahmed alsum ( odu ) for his assistance with the cache - less memento proxies .",
    "memento is a joint project between the los alamos national laboratory research library and old dominion university              p.  cao , j.  zhang , and k.  beach .",
    "active cache : caching dynamic contents on the web . in _ proceedings of the ifip international conference on distributed systems platforms and open distributed processing _ , pages 373388 , 1998 .",
    "f.  douglis , a.  feldmann , b.  krishnamurthy , and j.  mogul . .",
    "usits97 : proceedings of the usenix symposium on internet technologies and systems on usenix symposium on internet technologies and systems _ , usits97 , 1997 .",
    "a.  iyengar and j.  challenger .",
    "improving web server performance by caching dynamic data . in _",
    "usits97 : proceedings of the usenix symposium on internet technologies and systems on usenix symposium on internet technologies and systems _ , usits97 , 1997 .",
    "f.  mccown , j.  a. smith , m.  l. nelson , and j.  bollen .",
    "lazy preservation : reconstructing websites by crawling the crawlers . in _",
    "widm 06 : proceedings of the 8th annual acm international workshop on web information and data management _ , pages 6774 , 2006 .",
    "h.  van de sompel , r.  sanderson , m.  l. nelson , l.  l. balakireva , h.  shankar , and s.  ainsworth . .",
    "in _ proceedings of the linked data on the web workshop ( ldow 2010 ) _ , 2010 .",
    "( also available as arxiv:1003.3661 ) ."
  ],
  "abstract_text": [
    "<S> as defined by the memento framework , timemaps are ma - chine - readable lists of time - specific copies  called `` mementos ''  of an archived original resource . in theory , </S>",
    "<S> as an archive acquires additional mementos over time , a timemap should be monotonically increasing . </S>",
    "<S> however , there are reasons why the number of mementos in a timemap would decrease , for example : archival redaction of some or all of the mementos , archival restructuring , and transient errors on the part of one or more archives . </S>",
    "<S> we study timemaps for 4,000 original resources over a three month period , note their change patterns , and develop a caching algorithm for timemaps suitable for a reverse proxy in front of a memento aggregator . </S>",
    "<S> we show that timemap cardinality is constant or monotonically increasing for 80.2% of all timemap downloads observed in the observation period . </S>",
    "<S> the goal of the caching algorithm is to exploit the ideally monotonically increasing nature of timemaps and not cache responses with fewer mementos than the already cached timemap . </S>",
    "<S> this new caching algorithm uses conditional cache replacement and a time to live ( ttl ) value to ensure the user has access to the most complete timemap available . </S>",
    "<S> based on our empirical data , a ttl of 15 days will minimize the number of mementos missed by users , and minimize the load on archives contributing to timemaps . </S>"
  ]
}
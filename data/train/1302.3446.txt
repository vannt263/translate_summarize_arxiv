{
  "article_text": [
    "video compressive sensing ( cs ) , a new application of cs , has recently been investigated to capture _ high - speed _ videos at _ low frame rate _ by means of _ temporal compression _",
    "a commonality of these video cs systems is the use of _ per - pixel modulation _ during one integration time - period , to overcome the spatio - temporal resolution trade - off in video capture . as a consequence of active @xcite and passive pixel - level coding strategies @xcite ( see fig .  [ fig : dec ] ) , it is possible to uniquely modulate several temporal frames of a continuous video stream within the timescale of a single integration period of the video camera ( using a conventional camera ) .",
    "this permits these novel imaging architectures to maintain high resolution in both the spatial and the temporal domains .",
    "each low - speed exposure captured by such cs cameras is a linear combination of the underlying coded high - speed video frames .",
    "after acquisition , high - speed videos are reconstructed by various cs inversion algorithms @xcite .",
    "[ fig : dec ]    these hardware systems were originally designed for _ fixed _ temporal compression ratios .",
    "the correlation in time between video frames can vary , depending on the detailed time dependence of the scene being imaged .",
    "for example , a scene monitored by a surveillance camera may have significant temporal variability during the day , but at night there may be extended time windows with no or limited changes .",
    "therefore , _ adapting the temporal compression ratio _ based on the captured scene is important , not only to maintain a high quality reconstruction , but also to save power , memory , and related resources .",
    "we introduce the concept of _ adaptive temporal compressive sensing _ to manifest a cs video system that adapts to the complexity of the scene under test .",
    "since each of the aforementioned cameras involves similar integration over a time window , in which @xmath0 high - speed video frames are modulated / coded , we propose to adapt this time window ( the integration time @xmath0 ) , to change the temporal compression ratio as a function of the complexity of the data .",
    "specifically , we adaptively determine the number of frames @xmath0 collapsed to one measurement , using _",
    "motion estimation _ in the _ compressed _ domain .",
    "the algorithm for adaptive temporal cs can be incorporated with a diverse range of existing video cs systems ( not only the imaging architectures in @xcite but also flutter shutter @xcite cameras ) , to implement _ real - time _ temporal adaptation .",
    "furthermore , thanks to the availability of hardware for simple motion estimation @xcite , the proposed algorithm can be readily implemented in these cameras .",
    "[ sec : method ]    the underlying principle of the proposed method is to determine the temporal compression ratio @xmath0 based on the motion of the scene being sensed . in the following ,",
    "we propose to estimate the motion of the objects within the scene , to adapt the compression ratio for effective video capture .",
    "[ fig : bm ]      the block - matching method considered here has been employed in a variety of video codes ranging from mpeg1 / h.261 to mpeg4 / h.263 @xcite .",
    "diverse algorithms @xcite have investigated the block - matching concept shown in fig .",
    "[ fig : bm ] .",
    "the key steps of the block - matching method are reviewed as follows : @xmath1 ) partition frame a ( e.g. , previous frame ) into @xmath2 ( pixels ) blocks ; @xmath3 ) pre - define a window size @xmath4 ( pixels ) ; @xmath5 ) search all the @xmath2 blocks in the @xmath4 windows in frame b ( e.g. , current frame ) around the selected block in frame a ; @xmath6 ) and find the best - matching block in the window according to some metric ( e.g. mean squared error ) , and use this to compute the block motion .",
    "we demonstrate adaptive compression ratios based on this estimated motion from reconstructed video frames in section [ sec : result ] . estimating motion in high - speed dynamic scenes via the block - matching method in the _ reconstructed _ video ( after signal recovery )",
    "is computationally _",
    "infeasible _ given current reconstruction times at even modest compression ratios .",
    "hence , we aim to compute the adaption of @xmath0 based _ directly _ on the raw ( _ compressed _ ) measurements _ without _ the intermediate step of reconstruction .",
    "the following section proposes a method to estimate motion solely on low - framerate , coded measurements from the camera .",
    "[ fig : bmf ]      estimating motion from the camera captured data requires the motion to be observable without reconstructing the video frames from the measurement .",
    "[ fig : bmf ] presents the underlying principle of the _ real - time _ block - matching motion estimation approach . from this figure",
    ", it is apparent that the scene s motion is observable within the time - integrated coding structure .",
    "this property lets us employ the block - matching method directly on raw measurements ( frames a and b in fig .",
    "[ fig : bmf ] ) to estimate the scene s motion . adapting the compression ratio @xmath0 online is feasible due to the computational simplicity of this method .",
    "[ fig : seg_ls ]    we may roughly segment the video sequence into foreground and background regions by computing the number of pixels that each block traverses between frames . for each block , if this number is greater than a pre - specified threshold , the block is presumably moving and is hence classified as foreground .",
    "other blocks are considered background ( fig .",
    "[ fig : seg_ls ] ) .",
    "notably , we adapt @xmath0 solely based on the estimated motion velocity @xmath7 ( pixels / frame ) for the blocks determined by the block matching algorithm to have moved the greatest number of pixels between frames .",
    "intuitively , the compression ratio required to faithfully reconstruct the scene s motion is inversely proportional to the detected velocity @xmath7 , reaching a finite upper bound as @xmath8 . in practice , we simply apply a look - up table to ( discretely ) appropriately adapt @xmath0 with few computations",
    ". see table [ table : relation ] for an example .",
    "since good hardware exists for motion estimation  @xcite , the proposed method can be implemented in _",
    "real time_.    it is worth noting that the estimated motion ( and hence the compression ratio determined by the look - up table ) are used in the upcoming frames .",
    "we assume the consistent motion of the adjacent frames in the video .",
    "sudden changes of the motion will result in one integration time delay of the @xmath0 adaption .",
    "simulation results in fig .  [ fig : adamea ] verify this point .",
    "we can of course put an upper bound in @xmath0 .",
    "[ fig : adamea ]        [ fig : frames ]        [ fig : adarecon ]    . [ cols=\"^,^,^,^,^,^,^\",options=\"header \" , ]",
    "from @xcite , we have found that ( based on extensive simulations ) shifting a fixed mask is as good as using the more sophisticated time evolving codes used in @xcite . for convenience ( but not necessity ) , the subsequent results will use a shifted mask to modulate the high - speed video frames .",
    "we illustrate the adaptive compression ratio framework on a traffic video @xcite that has 360 frames .",
    "we artificially vary the foreground velocity for this video to evaluate the proposed method s performance for motion estimation and @xmath0 adaption .",
    "frames 1 - 120 ( fig .  [ fig : adamea](b ) ) and 241 - 336 ( fig .  [ fig : adamea](d ) ) run at the originally - captured framerate ; we freeze the scene between frames 121 - 240 ( fig .",
    "[ fig : adamea](c ) ) . the generalized alternating projection ( gap ) algorithm @xcite",
    "is used for the reconstructions .",
    "table  [ table : relation ] provides the compression ratio @xmath0 corresponding to several scene velocities @xmath7 .",
    "this look - up table ( learned based on training data ) generate videos with different motion velocities by changing the framerate ; @xmath3 ) estimate the motion velocities @xmath7 of the generated videos ; @xmath5 ) modulate the generated videos with shifting masks and constitute measurements with diverse @xmath0 ; @xmath6 ) reconstruct the videos with gap @xcite from these compressed measurements and calculate the psnr of the reconstructed video ; @xmath9 ) and build the relations between estimated velocities @xmath7 and @xmath0 maintaining a constant psnr ( around 22db ) . ] ) seeks to maintain a constant reconstruction peak signal - to - noise ratio ( psnr ) of 22db .",
    "[ fig : adamea ] presents the _ real - time _",
    "motion estimation results using simulated low - framerate coded exposures of the traffic video with an initial compression ratio @xmath10 . after a short fluctuation ,",
    "the estimated velocity of the scene becomes constant ; @xmath0 accordingly stabilizes at 8 . when the vehicles freeze , the block - matching algorithm senses zero change in the pixel position and updates @xmath0 to 16 .",
    "@xmath0 returns to 8 upon continuing video playback at normal speed .",
    "we can also observe the consistence of velocities estimated from the original video and from the compressed measurements in fig .",
    "[ fig : adamea](a ) .",
    "sudden changes in the video s framerate ( and hence the motion velocity @xmath7 ) are reflected in short fluctuations of the psnr ( for one time - integration period ) in fig .",
    "[ fig : adamea](a ) . the average psnr of the reconstructed frames in fig .",
    "[ fig : adamea ] is 21.8db , very close to our expectation ( 22db ) .",
    "[ fig : frames ] presents several reconstructed frames based on the adaptive @xmath0 in fig .",
    "[ fig : adamea ] .",
    "we additionally evaluate the block - matching algorithm s performance by deploying it to reconstructed frames .",
    "[ fig : adarecon ] demonstrates that its performance is similar to the phenomena shown in fig .",
    "[ fig : adamea ] .",
    "this justifies that it is unnecessary to reconstruct each measurement prior to updating @xmath0 .",
    "[ fig : adameashop ] implements adaptive @xmath0 on video data captured in front of a shop @xcite .",
    "table  [ table : relation ] is again useful for this example .",
    "the first 189 frames of this video ( fig .",
    "[ fig : adameashop](b ) ) are stationary ; nothing is moving within the scene .",
    "as seen before , since @xmath11 , the compression ratio remains at @xmath0=16 . after the 189@xmath12 frame ,",
    "different people begin to walk in and out of the video area ( fig .",
    "[ fig : adameashop](c - d ) ) .",
    "the compression ratio @xmath0 is adapted between 6 and 16 according to the estimated velocity .",
    "when one person walks into the shop ( fig .",
    "[ fig : adameashop](c ) ) , the compression ratio drops ( @xmath0=8 ) .",
    "this results in a better - posed reconstruction of the underlying video frames .",
    "when a couple walks in front of the shop ( fig .",
    "[ fig : adameashop](d ) ) , @xmath0 drops further to 6 . the corresponding measurement and reconstructed frames",
    "are shown in fig .",
    "[ fig : adameashop](d , e ) .",
    "this video takes a total of 67 adaptive measurements to capture and reconstruct 678 high - speed video frames , achieving a mean compression ratio @xmath1310.12 . to demonstrate the utility of adapting @xmath0 based on the sensed data",
    ", we compare adaptive reconstructions to those obtained when @xmath0 is _ fixed _ at or near its expected value .",
    "[ fig : adameashop](f ) shows reconstructed frames 539 - 544 when fixing @xmath0 = 10 . comparing part ( e ) with part ( f )",
    ", we notice that adapting @xmath0 provides a ( 3db ) higher reconstruction quality ( average psnr=30.65db ) than fixing @xmath0 near its expected value ( average psnr=27.54db ) .",
    "these improvements are most noticeable whenever there is motion within the scene and demonstrate the potency of temporal compression ratio adaptation in realistic applications .",
    "we have introduced the concept of adaptive temporal compressive sensing for video and demonstrated a _ real - time _ method to adjust the temporal compression ratio for video compressive sensing . by estimating the motion of objects within the scene , we determine how many measurements are necessary to ensure a reasonably well - conditioned estimation of high - speed motion from lower - framerate measurements .",
    "a block - matching algorithm estimates the scene s motion directly from the compressed measurements to obviate real - time reconstruction , thereby significantly reducing the expended real - time computational resources .",
    "simulation results have verified the efficacy of the proposed adaption algorithm .",
    "future work will seek to embed this real - time framework into the hardware prototype ."
  ],
  "abstract_text": [
    "<S> this paper introduces the concept of _ adaptive temporal compressive sensing ( cs ) _ for video . we propose a cs algorithm to adapt the compression ratio based on the scene s temporal complexity , computed from the _ compressed _ data , without compromising the quality of the reconstructed video . </S>",
    "<S> the temporal adaptivity is manifested by manipulating the integration time of the camera , opening the possibility to _ real - time _ implementation . </S>",
    "<S> the proposed algorithm is a generalized temporal cs approach that can be incorporated with a diverse set of existing hardware systems .    </S>",
    "<S> video compressive sensing , temporal compressive sensing ratio design , temporal superresolution , adaptive temporal compressive sensing , real - time implementation . </S>"
  ]
}
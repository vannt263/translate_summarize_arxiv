{
  "article_text": [
    "networks or at least social networks heavily depend on human or social behaviors .",
    "it is believed that _ homophyly _",
    "* chapter 4 ) is one of the most basic notions governing the structure of social networks .",
    "it is a common sense principle that people are more likely to connect with people they like , as what says in the proverb `` birds of a feather flock together '' .",
    "li and peng in @xcite gave a mathematical definition of _ community _ , and _ small community phenomenon _ of networks , and showed that networks from some classic models do satisfy the small community phenomenon .",
    "a. li and j. li et al .",
    "@xcite proposed a homophyly model by introducing a color for every vertex in the classical preferential attachment model such that networks generated from this model satisfy simultaneously the following properties : 1 ) power law degree distribution , 2 ) small diameter property , 3 ) vertices of the same color naturally form a small community , and 4 ) almost all vertices are contained in some small communities , i.e. , the small community phenomenon of networks .",
    "this result implies the _ homophyly law _ of networks that the mechanism of the small community phenomenon is homophyly , and that vertices within a small community share remarkable common features .",
    "a. li and j. li et al .",
    "@xcite showed that many real networks satisfy exactly the homophyly law , in which an interesting application is the prediction and confirmation of keywords from a paper citation network of high energy physics theory .",
    "the network contains @xmath13 vertices ( i.e. , papers ) and @xmath14 edges ( i.e. , citations ) .",
    "all the papers have titles and abstracts , but only @xmath15 papers have keywords listed by their authors .",
    "we interpret the keywords of a paper to be a _ function _ of the paper . by the homophyly law ,",
    "vertices within a small community of the network must share remarkable common features ( keywords here ) .",
    "the prediction is as follows : 1 ) to find a small community from each vertex , if any , 2 ) to extract the most popular @xmath16 keywords from the known keywords in a community , as the remarkable common features of this community , 3 ) to predict that ( all or part of ) the @xmath16 remarkable common keywords are keywords of a paper in the community , 4 ) to confirm a prediction of keyword @xmath17 for a paper @xmath18 , if @xmath17 appears in either the title or the abstract of paper @xmath18 .",
    "it is a surprising result that this simple prediction confirms keywords for @xmath19 papers in the network .",
    "this experiment implies that real networks do satisfy the homophyly law , and that the homophyly law is the principle for prediction in networks .",
    "the keywords can be viewed as the attributes of vertices in a network . the above experimental result",
    "suggests a natural theoretical problem that , given a network in which some vertices have their attributes unfixed , how to assign attributes to these vertices such that the resulting network reflects the homophyly law in the most degree ? some attributes of a vertex can not be changed , such as nationality , sex , color and language , but some other attributes can be changed , such as interest , job , income and working place . for simplicity",
    ", we consider the case that each vertex contains only one alterable attribute , i.e. , the network is a @xmath20-dimensional network .",
    "consider the following scenario .",
    "suppose in a company there are many employees which constitutes a friendship network .",
    "some employees have been assigned to work in some departments of the company , while the remaining employees are waiting to be assigned .",
    "an employee is _ happy _ , if s / he works in the same department with all of ( or @xmath21 fraction of for some @xmath22 $ ] , or at least @xmath23 for some integer @xmath24 ) her / his friends ; otherwise s / he is _",
    "unhappy_. similarly , a friendship is _ happy _ ( or lucky ) if the two related friends work in the same department ; otherwise the friendship is _",
    "unhappy_. our goal is to achieve the greatest social benefits , that is , to maximize the number of _ happy vertices _ ( similarly , _",
    "happy edges _ ) in the network .",
    "we can easily express the above problems as graph coloring problems , just identifying each attribute value with a different color .",
    "hence we get two specific graph coloring problems , as defined below .",
    "( instance ) in the maximum happy vertices ( mhv ) problem , we are given an undirected graph @xmath0 , a color set @xmath25 , and a partial vertex coloring function @xmath26 .",
    "we say that @xmath6 is a partial function in the sense that @xmath6 assigns colors to part of vertices in @xmath27 .",
    "( query ) a vertex is _ happy _ if it shares the same color with all its neighbors , otherwise it is _",
    "unhappy_. the task is to extend @xmath6 to a total function @xmath28 such that the number of happy vertices is maximized .",
    "( instance ) the input of the maximum happy edges ( mhe ) problem is the same as that of the mhv problem .    ( query )",
    "an edge is _ happy _ if its two endpoints have the same color , otherwise it is _",
    "unhappy_. the goal is to extend @xmath6 to a total function @xmath28 such that the number of happy edges is maximized .",
    "the vertex coloring defined by the total function @xmath29 in mhv and mhe is called a _ total vertex coloring_. in general , a ( partial or total ) vertex coloring can be denoted by @xmath30 , where @xmath31 is the set of all vertices having color @xmath32 .",
    "a total vertex coloring is a partition of @xmath33 , while a partial vertex coloring may not .",
    "therefore , the mhv and mhe problems are two extension problems from a partial vertex coloring to a total vertex coloring .",
    "we remark that the coloring for our case is completely different from the well - known graph coloring problem , which requires that the two endpoints of an edge must be colored differently and asks to color a graph in such a way by using the minimized number of colors .",
    "we use the notion of color just for intuition .",
    "if in the mhv problem the color number @xmath7 is a constant , the problem is denoted by @xmath7-mhv . for the specific values of @xmath7",
    ", we have the 2-mhv problem , the 3-mhv problem , and so on .",
    "note that in the original mhv problem @xmath7 is given as a part of the input .",
    "similarly , we have the @xmath7-mhe problem for constant @xmath7 , with 2-mhe , 3-mhe , etc . being its specific problems .",
    "we remark that both the mhv and mhe problems are natural and fundamental algorithmic problems , and that they have not appeared yet in literature .",
    "the reasons could be two folds .",
    "on the one hand , we ask the questions from our network applications which did not happen before ; on the other hand , the meaning of coloring has been specified previously so that the two endpoints of an edge must have different colors .",
    "we notice that the current version of our problems may not really help network applications much because of their simplicity . for real network applications , probably the experimental method",
    "@xcite introduced at the beginning of this section is fine enough .",
    "however , this has no theoretical guarantee , owing to different structures of networks .",
    "our problems seem essentially new and fundamental algorithmic problems .",
    "theoretical analysis of the problems are always helpful to understand the nature of the problems , and hence are very welcome .",
    "we investigate algorithms to solve the mhv and mhe problems .",
    "it is easy to see that the partial function @xmath6 plays an important role in the mhv and mhe problems . if none of the vertices in the input graph has a pre - specified color , then the mhv and mhe problems are trivial .",
    "the optimal solution just assigns one arbitrary color to all the vertices .",
    "this will make all vertices and all edges happy .",
    "we prove that the mhv and mhe problems are np - hard .",
    "interestingly , the complexity of @xmath7-mhv and @xmath7-mhe dramatically changes when @xmath7 changes from 2 to 3 .",
    "specifically , we prove that both 2-mhv and 2-mhe can be solved in polynomial time , while both @xmath7-mhv and @xmath7-mhe are actually np - hard for any constant @xmath9 .",
    "we thus seek approximation algorithms for the mhv and mhe problems , and their variants @xmath7-mhv and @xmath7-mhe ( @xmath9 ) .",
    "we design two approximation algorithms greedy - mhv ( subsection [ subsec - greedy approxalg for mhv ] ) and growth - mhv ( subsection [ subsec - subset - growth approxalg for mhv ] ) for the mhv problem and its variant @xmath7-mhv .",
    "algorithm greedy - mhv is a simple greedy algorithm with approximation ratio @xmath34 .",
    "algorithm growth - mhv is an algorithm based on the subset - growth technique with approximation ratio @xmath35 , where @xmath11 is the maximum degree of vertices in the input graph . in real networks",
    ", @xmath11 is usually @xmath36 , implying that the ratio @xmath35 is reasonable . as",
    "algorithm growth - mhv is executing , more and more vertices are colored .",
    "according to the current vertex coloring for the input graph , we define several types for the vertices .",
    "( note that the types here are not colors . )",
    "algorithm growth - mhv works based on carefully classifying all the vertices into several types .",
    "we can extend our algorithms for mhv to deal with two more natural variants softmhv and hardmhv . in the softmhv problem , a vertex @xmath4 is happy if @xmath4 shares the same color with at least @xmath37 neighbors , where @xmath21 ( that is , the soft threshold ) is a number in @xmath38 $ ] and @xmath39 is the degree of vertex @xmath4 . in the hardmhv problem ,",
    "a vertex @xmath4 is happy if @xmath4 shares the same color with at least @xmath23 neighbors , where @xmath23 ( that is , the hard threshold ) is an integer . we show that the softmhv and hardmhv problems can also be approximated within @xmath10 .",
    "the approximation algorithms for softmhv and hardmhv , given in the appendix for completeness , are similar to that for mhv .    for the mhe problem and its variant @xmath7-mhe , we devise a simple approximation algorithm based on a division strategy , namely , algorithm division - mhe ( section [ sec - algorithms for mhe ] ) .",
    "the approximation ratio is proved to be 1/2 .",
    "the mhv and mhe problems are two quiet natural vertex classification problems arising from the homophyly phenomenon in networks .",
    "classification is a fundamental problem and has wide applications in statistics , pattern recognition , machine learning , and many other fields . given a set of objects to be classified and a set of colors , a classification problem can be depicted as from a very high level assigning a color to each object in a way that is consistent with some observed data or structure that we have about the problem @xcite . in our problems , the observed strucute is homophyly .",
    "since the mhv and mhe problems are essentially new , in the following we just show some closely related problems and results .    thomas schelling @xcite , the nobel economics prize winner , showed by experiments how global patterns of spatial segregation arise from the effect of homophyly operating at the local level .",
    "the experiments in @xcite are given in one - dimensional and two - dimensional geometric models . from a more general viewpoint of graph theory , schelling s experiments , although given in geometric models , can be viewed as how to remove and add edges from / to a graph whose vertices are all colored by some colors such that the resulting graph possesses the homophyly property .",
    "in contrast , the mhv and mhe problems are how to color the vertices in a given graph whose part of vertices are already colored such that the resulting graph possesses the homophyly property .",
    "the multiway cut problem @xcite should be the traditional optimization problem that is most related to mhv and mhe . given an undirected graph @xmath0 with costs defined on edges and a terminal set @xmath40 , the multiway cut problem asks for a set of edges ( called a _ multiway cut _ , or simply a _ cut _ ) with the minimum total cost such that its removal from graph @xmath2 separates all terminals in @xmath41 from one another .",
    "the multiway cut problem in general graphs is np - hard even the terminal set contains only three terminals and each edge has a unit cost @xcite .",
    "the current best approximation ratio known for this problem is 1.3438 @xcite .",
    "removing a minimum multiway cut from a graph breaks the graph into several components such that each component contains exactly one terminal . from the viewpoint of graph coloring ,",
    "this is equivalent to coloring the uncolored vertices in a graph in which each terminal has a distinct pre - specified color , such that the number of happy edges is maximized .",
    "therefore , the mhe problem is actually the dual of the multiway cut problem .",
    "see figure [ fig - multiway cut and vertex coloring ] for an example .",
    "( more precisely , the dual of multiway cut is only a special case of mhe , since in mhe there may be more than one vertices having the same pre - specified color .",
    ") however , multiway cut and mhe are quite different in terms of approximation , since one is a maximization problem while the other is a minimization problem .        for a vertex subset @xmath42 of graph @xmath2",
    ", we define the _ border _ of @xmath43 to be the set of vertices in @xmath43 that has a neighbor not in @xmath43 .",
    "given a vertex coloring @xmath30 of graph @xmath2 , the vertices in the border of each @xmath31 are obviously unhappy .",
    "the mhv problem , which finds a vertex coloring that maximizes the number of happy vertices , is actually equivalent to finding a vertex coloring @xmath30 for a graph in which some vertices are already colored , such that the total number of vertices in borders of all @xmath31 s is minimized .",
    "please refer to figure [ fig - multiway cut and vertex coloring ] for an example .",
    "the latter problem we just introduce is a new minimization problem ; the mhv problem and this new problem are dual to each other .    from the above analysis",
    ", one can see that the partial function @xmath6 in the mhe problem ( and the mhv problem ) , which assigns colors to part of vertices of the input graph , actually simulates and generalizes the _ terminal set _ part in the multiway cut problem .",
    "kann and khanna et al .",
    "@xcite studied the max @xmath7-cut problem @xcite and its dual , that is , the min @xmath7-partition problem @xcite . given an undirected graph @xmath0",
    ", the min @xmath7-partition problem asks to find a vertex coloring @xmath1 such that the number of edges whose two endpoints have the same color ( i.e. , the happy edges in our setting ) is minimized .    according to the way of definitions in @xcite",
    ", we can define the dual of the min @xmath7-cut problem @xcite as follows : given an undirected graph @xmath0 and an integer @xmath44 , finding an edge subset whose removal breaks graph @xmath2 into _ exactly _",
    "@xmath7 components , such that the number of remaining edges is maximized .",
    "let s call this problem the max @xmath7-partition problem . in other words , max @xmath7-partition asks for a total vertex coloring @xmath45 such that the number of happy edges is maximized , where @xmath28 should be a surjective function ( that is , for each color @xmath32 there exists a vertex whose color is @xmath32 ) .",
    "the max @xmath7-partition problem defined as above is close to the mhe problem , but they are still different in the obvious way : in max @xmath7-partition there is no any vertex having a pre - specified color and the required vertex coloring function @xmath28 must be surjective , while in mhe there must be some vertices having the pre - specified colors and the required vertex coloring function @xmath28 may not be surjective .",
    "let @xmath0 be a graph .",
    "let @xmath46 and @xmath47 .",
    "suppose @xmath48 is a vertex .",
    "denote by @xmath49 the set of neighbors of @xmath4 .",
    "as usual , @xmath39 means the degree of @xmath4 , i.e , @xmath50 .",
    "denote by @xmath51 the set of neighbors of neighbors of @xmath4 ( not including @xmath4 itself ) , i.e. , the vertices within distance 2 of @xmath4 ( assume each edge has unit distance ) .    given a vertex coloring @xmath6 ,",
    "for a ( colored or uncolored ) vertex @xmath4 , define @xmath52 as the set of vertices in @xmath49 that has not yet been colored . for a colored vertex @xmath4 ,",
    "define @xmath53 as the set of vertices in @xmath49 having the _ same _ color as @xmath54 , @xmath55 as the set of vertices in @xmath49 having colors _ different _ to @xmath54 .",
    "given an instance @xmath56 of some optimization problem @xmath57 , we use @xmath58 ( @xmath59 for short ) to denote the optimum ( that is , the value of an optimal solution ) of the instance . let @xmath60 be an algorithm for problem @xmath57 .",
    "we use @xmath61 ( @xmath62 for short ) to denote the value of the solution found by algorithm @xmath60 on instance @xmath56 of problem @xmath57 . in addition , @xmath59 and @xmath62 also denote the corresponding solutions , abusing notations slightly .    the remaining of the paper is organized as follows . in section",
    "[ sec - algorithms for mhv ] , we show that 2-mhv is polynomial - time solvable , and give the greedy approximation algorithm and the subset - growth approximation algorithm for the mhv and @xmath7-mhv ( @xmath9 ) problems . in section [ sec - algorithms for mhe ] , we show that 2-mhe is polynomial - time solvable , and give the division - strategy based approximation algorithm for the mhe @xmath7-mhe ( @xmath9 ) problems . in section [ sec - hardness results ] , we prove the np - hardness for the mhe , @xmath7-mhe ( @xmath9 ) , mhv , and @xmath7-mhv ( @xmath9 ) problems . in section [ sec - conclusions ]",
    "we conclude the paper by introducing some future work . in the appendix",
    ", we give approximation algorithms for the softmhv and hardmhv problems .",
    "in subsection [ subsec - 2-mhv is in p ] , we give the polynomial time exact algorithm for the 2-mhv problem . in subsection",
    "[ subsec - approxalgs for mhv ] , we give the approximation algorithms greedy - mhv and growth - mhv for the mhv problem .",
    "let @xmath63 be a finite set . recall that a function @xmath64 is said to be submodular if @xmath65 holds for all @xmath66 . given a vertex subset @xmath42 ,",
    "define function @xmath67 to be the number of vertices in @xmath43 that has neighbors outside of @xmath43 , i.e. , @xmath67 is the size of the border ( see subsection [ sec - related works ] ) of @xmath43 .",
    "it is easy to verify that @xmath68 is a submodular function .",
    "consider the 2-mhv problem , in which the color set @xmath69 contains only two colors 1 and 2 .",
    "this problem can be solved in polynomial time .",
    "the 2-mhv problem can be solved in @xmath70 time .",
    "let @xmath71 be the set of vertices that are colored by color 1 by the partial function @xmath6 , and @xmath72 be the analogous vertex subset corresponding to color 2 .",
    "then the 2-mhv problem is equivalent to finding a cut @xmath73 such that @xmath74 for @xmath75 and @xmath76 is minimized .",
    "we can do this by merging all vertices in @xmath71 to a single vertex @xmath77 , all vertices in @xmath72 to a single vertex @xmath78 , and finding an @xmath77-@xmath78 cut @xmath73 on the resulting graph such that @xmath76 is minimized . as pointed out by (",
    "* lemma 3 ) , finding such a cut can be done by an algorithm in @xcite for minimizing submodular functions in @xmath79 time , where @xmath80 is the time to compute the submodular function @xmath68 .",
    "when the input graph is stored by a collection of adjacency lists , @xmath81 can be computed in @xmath82 time in a straightforward way ( assuming the input graph contains no isolated vertex ) .",
    "the proof of the theorem is finished .",
    "depth2pt      the approximation algorithms for mhv work based on the types defined for vertices , as shown in definition [ def - types of vertices in mhv ] .",
    "[ def - types of vertices in mhv ] fix a ( partial or total ) vertex coloring . let @xmath4 be a vertex . then ,    1 .",
    "@xmath4 is an _ @xmath83-vertex _ if @xmath4 is colored and happy ( i.e. , @xmath84 ) ; 2 .",
    "@xmath4 is a _ @xmath63-vertex _",
    "if @xmath4 is colored and destined to be unhappy ( i.e. , @xmath85 ) ; 3 .",
    "@xmath4 is a _",
    "@xmath18-vertex _ if 1 .",
    "@xmath4 is colored , 2 .",
    "@xmath4 has not been happy ( i.e. , @xmath86 ) , and 3 .",
    "@xmath4 may become happy in the future ( i.e. , @xmath87 ) ; 4 .",
    "@xmath4 is an _ @xmath88-vertex _ if @xmath4 has not been colored .",
    "see figures [ fig - process a p - vertex ] , [ fig - process a lh - vertex ] , [ fig - process a lu - vertex ] for examples of the vertex types",
    ". note that by a type name we also mean the set of vertices of that type .",
    "conversely , by a set name we also mean that each element in the set is of that type . for example , @xmath83 is the set of all @xmath83-vertices ; each vertex in the set @xmath83 is an @xmath83-vertex .",
    "* algorithm greedy - mhv . *",
    "the approximation algorithm greedy - mhv for mhv is quiet simple .",
    "we just color all uncolored vertices by the same color .",
    "since there are @xmath7 colors in @xmath69 , we can obtain @xmath7 vertex colorings for graph @xmath2 .",
    "finally we output the coloring that has the most number of happy vertices .",
    "[ th - 1/k - approximation for mhv ] algorithm greedy - mhv is a @xmath34-approximation algorithm for the mhv problem , where @xmath7 is the number of colors given in the input .",
    "let the partial function @xmath6 be the vertex coloring used in definition [ def - types of vertices in mhv ] .",
    "we partition @xmath88-vertices further into two subsets @xmath89 and @xmath90 .",
    "@xmath89 is the set of uncolored vertices that can become happy ( i.e. , whose neighbors have at most one color ) .",
    "@xmath90 is the set of uncolored vertices that are destined to be unhappy ( i.e. , whose neighbors already have at least two distinct colors ) .",
    "then @xmath91 is a partition of @xmath33 .",
    "obviously , in the best case @xmath59 can make all vertices in @xmath41 , @xmath18 and @xmath89 happy , implying @xmath92 .",
    "let @xmath93 be the number of happy vertices when algorithm greedy - mhv colors all uncolored vertices by color @xmath32 .",
    "then we have @xmath94 . by the greedy strategy , @xmath62 , which is",
    "the number of happy vertices found by greedy - mhv , is at least @xmath95 .",
    "the theorem follows by observing that greedy - mhv obviously runs in polynomial time .",
    "depth2pt      the subset - growth algorithm starts with the partial vertex coloring @xmath30 defined by the partial function @xmath6 . from a high level point of view",
    ", the algorithm iteratively augments the subsets in @xmath30 by satisfying the vertices that can become happy easily at the current time , until @xmath30 becomes a partition of @xmath33 and thus a vertex coloring is obtained .",
    "this strategy is based on the following further classification of @xmath88-vertices , according to the type of their neighbors .",
    "recall that by definition [ def - types of vertices in mhv ] , @xmath88-vertex means uncolored vertex .",
    "let @xmath4 be an @xmath88-vertex in a vertex coloring .",
    "then ,    1 .   @xmath4 is an _ @xmath96-vertex _ if @xmath4 is adjacent to a @xmath18-vertex ; 2 .",
    "@xmath4 is an _",
    "@xmath97-vertex _ if 1 .",
    "@xmath4 is not adjacent to any @xmath18-vertex , 2 .",
    "@xmath4 can become happy , that is , @xmath4 is adjacent to @xmath63-vertices with only one color ; 3 .",
    "@xmath4 is an _",
    "@xmath98-vertex _ if 1 .",
    "@xmath4 is not adjacent to any @xmath18-vertex , 2 .",
    "@xmath4 is destined to be unhappy , that is , @xmath4 is adjacent to @xmath63-vertices with more than one colors ; 4 .",
    "@xmath4 is an _ @xmath99-vertex _ if @xmath4 is not adjacent to any colored vertex .",
    "see figures [ fig - process a p - vertex ] , [ fig - process a lh - vertex ] , [ fig - process a lu - vertex ] for examples of the subtypes of @xmath88-vertex .",
    "the subset - growth algorithm growth - mhv is as follows .    a connected undirected graph @xmath2 and a partial coloring function @xmath6 . a total vertex coloring for @xmath2 .",
    "@xmath100 , @xmath101 .",
    "[ step - growth - mhv - beginning of the main loop ] * while * there exist @xmath88-vertices * do *    [ step - growth - mhv - process an p - vertex ] * if * there exists a @xmath18-vertex @xmath4 * then *    @xmath102 .",
    "add all the @xmath96-neighbors of @xmath4 to @xmath31 .",
    "the types of all affected vertices ( including @xmath4 and vertices in @xmath51 ) are changed accordingly .",
    "[ step - growth - mhv - process an lh - vertex ] * elseif * there exists an @xmath97-vertex @xmath4 * then *    let @xmath103 be any @xmath63-vertex adjacent to @xmath4 , then @xmath104 .",
    "add @xmath4 and all its @xmath88-neighbors to @xmath31 .",
    "the types of all affected vertices ( including @xmath4 and vertices in @xmath51 ) are changed accordingly .",
    "[ step - growth - mhv - process an lu - vertex ] * else *    there must be an @xmath98-vertex .",
    "let @xmath4 be any @xmath98-vertex , @xmath103 be the any @xmath63-vertex adjacent to @xmath4 , then @xmath104 .",
    "add @xmath4 to @xmath31 .",
    "the types of all affected vertices ( including @xmath4 and vertices in @xmath49 ) are changed accordingly .",
    "the vertex coloring @xmath30 .    when there are still @xmath88-vertices ( i.e. , uncolored vertices ) , algorithm growth - mhv works in the following way .",
    "it first colors a @xmath18-vertex s neighbors to make this @xmath18-vertex happy ( see figure [ fig - process a p - vertex ] ) .",
    "when there is no any @xmath18-vertex , it colors an @xmath97-vertex and its neighbors to make the @xmath97-vertex happy ( see figure [ fig - process a lh - vertex ] ) .",
    "when there is no any @xmath18-vertex or @xmath97-vertex , it colors an @xmath98-vertex by the color of its any @xmath63-vertex neighbor ( see figure [ fig - process a lu - vertex ] ) .",
    "note that coloring a vertex may generate new @xmath18-vertices , or @xmath97-vertices , or @xmath98-vertices .",
    "the hollow vertex @xmath4 in graph ( a ) is the @xmath18-vertex to be processed .",
    "the square vertices mean colored vertices , while the round vertices mean uncolored vertices.,scaledwidth=55.0% ]    -vertex .",
    "the hollow vertex @xmath4 in graph ( a ) is the @xmath97-vertex to be processed .",
    "note that when an @xmath97-vertex is to be processed , there is no @xmath18-vertex in the current graph ( a).,scaledwidth=60.0% ]    -vertex .",
    "the hollow vertex @xmath4 in graph ( a ) is the @xmath98-vertex to be processed .",
    "note that when an @xmath98-vertex is to be processed , there is no any @xmath18-vertex or @xmath97-vertex in the current graph ( a).,scaledwidth=55.0% ]    when there exist @xmath88-vertices , it is impossible that there are only @xmath99-vertices but no any @xmath96-vertex , @xmath97-vertex or @xmath98-vertex , since by assumption @xmath2 is a connected graph and by definition @xmath99-vertex is not adjacent to any colored vertex .",
    "so , when there is nt any @xmath96-vertex or @xmath97-vertex , there must be at least one @xmath98-vertex . as a result , in step [ step - growth - mhv - process an lu - vertex ] we do nt need an * if * statement like that in steps [ step - growth - mhv - process an p - vertex ] and [ step - growth - mhv - process an lh - vertex ] .",
    "we use a type name with the superscript `` org '' ( means `` original '' ) to denote the set of vertices of that type which is determined by the partial function @xmath6 , and a type name with the superscript `` new '' to denote the set of vertices of that type which is determined in the execution of algorithm growth - mhv .",
    "for example , @xmath105 is the set of @xmath83-vertices that are determined by the partial function @xmath6 , and @xmath106 is the set of @xmath83-vertices that are newly generated by algorithm growth - mhv .",
    "let @xmath11 be the maximum degree of vertices in the input graph .",
    "we first bound the number of @xmath107-vertices .",
    "[ lm - |l_u^new| < = delta ( delta-2 ) |h^new| ] @xmath108 .",
    "algorithm growth - mhv iteratively processes three types of vertices , that is , the @xmath18-vertices , the @xmath97-vertices and the @xmath98-vertices",
    ". we will prove the lemma by proving the following three points : ( 1 ) when algorithm growth - mhv processes a @xmath18-vertex , at most @xmath109 @xmath107-vertices are generated , ( 2 ) when algorithm growth - mhv processes an @xmath97-vertex , at most @xmath110 @xmath107-vertices are generated , and ( 3 ) when algorithm growth - mhv processes an @xmath98-vertex , no @xmath107-vertex is generated .",
    "consider the first point .",
    "let @xmath4 be a @xmath18-vertex to be processed .",
    "suppose @xmath4 has an @xmath96-neighbor @xmath111 , which is adjacent to a @xmath63-vertex .",
    "only if there is an @xmath97-vertex @xmath112 which is the neighbor of @xmath111 , @xmath112 will become a newly generated @xmath98-vertex when the @xmath18-vertex @xmath4 is processed .",
    "see figure [ fig - process a p - vertex ] for an example .",
    "since the maximum vertex degree is @xmath11 , @xmath4 has at most @xmath11 @xmath96-neighbors , and @xmath111 has at most @xmath113 @xmath97-neighbors .",
    "this implies that when @xmath4 is processed , at most @xmath109 @xmath107-vertices can be generated .",
    "then consider the second point .",
    "suppose the @xmath97-vertex to be processed is @xmath4 .",
    "suppose @xmath4 has an @xmath88-neighbor @xmath111 ( @xmath111 can be an @xmath97-vertex or an @xmath98-vertex ) , which is adjacent to a @xmath63-vertex .",
    "similarly , only if there is an @xmath97-vertex @xmath112 which is the neighbor of @xmath111 , @xmath112 will become a newly generated @xmath98-vertex when the @xmath97-vertex @xmath4 is processed .",
    "see figure [ fig - process a lh - vertex ] for an example . since the maximum vertex degree is @xmath11",
    ", @xmath4 has at most @xmath114 @xmath88-neighbors , and @xmath111 has at most @xmath113 @xmath97-neighbors .",
    "this implies that when @xmath4 is processed , at most @xmath110 @xmath107-vertices can be generated .",
    "finally consider the third point .",
    "when algorithm growth - mhv processes an @xmath98-vertex , there is no any @xmath97-vertex ( or @xmath18-vertex ) in the current graph .",
    "so , adding an @xmath98-vertex to some subset @xmath31 does not generate any new @xmath98-vertex . see figure [ fig - process a lu - vertex ] for an example .",
    "when algorithm growth - mhv processes a @xmath18-vertex or an @xmath97-vertex , at least one vertex becomes an @xmath83-vertex .",
    "so we can charge the number of newly generated @xmath98-vertices to this newly generated @xmath83-vertex .",
    "this finishes the proof of the lemma .",
    "depth2pt    the following lemma [ lm - upper bound on opt ] gives an upper bound on @xmath59 , the number of happy vertices in an optimal solution to the @xmath7-mhv problem .",
    "[ lm - upper bound on opt ] @xmath115 .    by the partial function @xmath6 , all vertices in the original graph ( i.e. , the input graph that has not been colored by algorithm growth - mhv )",
    "are partitioned into four vertex subsets @xmath105 , @xmath116 , @xmath117 and @xmath118 .",
    "subset @xmath118 is further partitioned into four subsets @xmath119 , @xmath120 , @xmath121 and @xmath122 . by definition ,",
    "all vertices in @xmath117 are unhappy . and",
    ", all vertices in @xmath121 are destined to be unhappy since each of them is adjacent to at least two vertices with different colors .",
    "so , in the best case all vertices in @xmath116 and @xmath118 except those in @xmath121 would be happy .",
    "noticing that the vertices in @xmath105 are already happy , we have @xmath123    since each @xmath18-vertex must be adjacent to some @xmath96-vertex , and each @xmath96-vertex can be adjacent to at most @xmath11 @xmath18-vertices , the number of @xmath116-vertices is at most @xmath124 .",
    "since @xmath125 , we get that @xmath126 concluding the lemma .",
    "depth2pt    [ lm - lower bound on |h^new| ] @xmath127 .",
    "recall that there are four subtypes of an @xmath88-vertex , i.e. , @xmath96-vertex , @xmath97-vertex , @xmath98-vertex and @xmath99-vertex . among them only @xmath96-vertex and @xmath97-vertex will ( directly ) contribute to generating @xmath83-vertices .",
    "for an @xmath99-vertex , it will ultimately become one of the other three types of @xmath88-vertex .",
    "for each @xmath98-vertex , although it may become an @xmath96-vertex and hence can contribute to generating @xmath83-vertices , in the worst case we may assume that it is added to some subset @xmath31 and contribute nothing to the generation of @xmath83-vertex .    by step [ step - growth - mhv - process an p - vertex ] and step [ step - growth - mhv - process an lu - vertex ] , each time an @xmath83-vertex is generated , at most @xmath11 @xmath96-vertices or @xmath97-vertices are consumed ( i.e. , colored ) .",
    "furthermore , once an @xmath88-vertex is colored , it will never be re - colored or de - colored .",
    "so we have @xmath128    by lemma [ lm - |l_u^new| < = delta ( delta-2 ) |h^new| ] , we have @xmath129 therefore , @xmath130 . the lemma follows .",
    "depth2pt    the mhv problem can be approximated within a factor of @xmath35 in polynomial time .",
    "algorithm growth - mhv obviously runs in polynomial time .",
    "let @xmath62 be the number of happy vertices found by algorithm growth - mhv .",
    "then we have @xmath131 the theorem follows .",
    "for 2-mhe , the partial function @xmath6 can only use two colors , to say , color 1 and color 2 .",
    "given such an instance , merge all vertices with color 1 assigned by @xmath6 into a single vertex @xmath77 , and all vertices with color 2 into a single vertex @xmath78 .",
    "( the edges whose two endpoints are merged disappear in the procedure . ) then compute a minimum @xmath77-@xmath78 cut @xmath73 on the resulting instance .",
    "suppose @xmath132 and @xmath133 .",
    "assign color 1 to all vertices ( including the merged vertices ) in @xmath134 , and color 2 to all vertices in @xmath135 . since @xmath73 is a minimum @xmath77-@xmath78 cut ,",
    "the number of happy edges in the resulting vertex coloring is maximized . by the work of @xcite , a maximum flow ( and hence a minimum @xmath77-@xmath78 ) in a unit capacity network",
    "can be computed in @xmath136 time .",
    "so we have    [ th - 2-mhe is in p ] the 2-mhe problem can be solved in @xmath136 time .",
    "depth2pt      the mhe problem admits a simple division - strategy based algorithm which yields a @xmath12-approximation . the algorithm is designed to deal with more general graphs with nonnegative weights @xmath137 defined on edges .",
    "we thus denote by @xmath138 the total weight of edges in an edge subset @xmath139 .    an undirected graph @xmath2 and a partial coloring function @xmath6 . a total vertex coloring for @xmath2 .",
    "@xmath140 . let @xmath139 be the set of edges in @xmath141 that has exactly one endpoint not colored by function @xmath6 .",
    "define graph @xmath142 , which is a subgraph of @xmath141 .",
    "[ step - division - mhe - graph g and its stars ] for each star @xmath41 in @xmath143 centered at an uncolored vertex @xmath4 , color @xmath4 by a color in @xmath144 such that the total weight of happy edges in @xmath41 is maximized .",
    "color all vertices in @xmath141 still having not been colored by just one arbitrary color .",
    "denote by @xmath145 the vertex coloring of @xmath141 .",
    "@xmath146 . color all uncolored vertices in @xmath147 by just one arbitrary color .",
    "denote by @xmath148 the vertex coloring of @xmath147 .",
    "the better one among @xmath145 and @xmath148 .",
    "algorithm division - mhe computes two independent solutions @xmath145 and @xmath148 to graph @xmath2 , and then outputs the better one , where the better one means the solution making more edges happy . for an illustration of graph @xmath143 and its stars in step [ step - division - mhe - graph g and its stars ] , please refer to figure [ fig - stars in graph g ] .    .",
    "each edge in @xmath143 has its one endpoint colored and the other endpoint uncolored .",
    "the square vertices mean colored vertices , while the round vertices mean uncolored vertices . each star ( marked with dashed circle )",
    "is centered at an uncolored vertex .",
    "two stars ( e.g. , @xmath149 and @xmath150 ) may share common colored vertices.,scaledwidth=60.0% ]    [ th - algorithm division - mhe is a 1/2-approxalg ] algorithm division - mhe is a @xmath12-approximation algorithm for the mhe problem .",
    "first , the algorithm obviously runs in polynomial time .",
    "let @xmath151 be the total weight of edges already being happy by the partial coloring function @xmath6 .",
    "this weight can be trivially obtained by any solution .",
    "let @xmath152 be the total weight of happy edges found by algorithm division - mhe on graph @xmath143 .",
    "note that @xmath152 is the maximum total weight that can be obtained from graph @xmath143 .",
    "let @xmath153 be the set of edges that has both of its two endpoints uncolored by function @xmath6 , and @xmath154 be its total weight .",
    "then we have @xmath155 .    by the algorithm , we know @xmath156 and @xmath157",
    ". then the approximation ratio @xmath12 of division - mhe is obvious since @xmath158 .",
    "the np - hardness of the @xmath159-mhe problem is proved by a reduction from the multiway cut problem @xcite .",
    "[ th - 3-mhe is np - hard ] the 3-mhe problem is np - hard .    given an undirected graph @xmath0 and a terminal set @xmath160 , the 3-terminal cut problem ( i.e. , the multiway cut problem with 3 terminals ) , which is np - hard @xcite , asks for a minimum cardinality edge set such that its removal from @xmath2 disconnects the three terminals from one another .",
    "given an instance @xmath161 of 3-terminal cut , we construct the instance @xmath162 of 3-mhe as follows .",
    "graph @xmath83 is just @xmath2 .",
    "color set @xmath69 is set to be @xmath163 .",
    "the partial function @xmath6 assigns colors 1 , 2 , 3 to vertices @xmath164 , respectively .",
    "let @xmath165 be the cardinality of an optimal 3-way cut for @xmath161 , and @xmath166 be the number of happy edges of an optimal vertex coloring for @xmath162",
    ". then one can easily find that @xmath167 , where @xmath168 ( @xmath169 ) .",
    "this shows the 3-mhe problem is np - hard .",
    "depth2pt    the mhe problem is np - hard .    in the input of mhe ,",
    "just set @xmath7 to be 3 .",
    "depth2pt    [ th - k - mhe is np - hard ] the @xmath7-mhe problem is np - hard for any constant @xmath9 .    by theorem [ th - 3-mhe is np - hard ] , we need only focus on @xmath170 .",
    "let @xmath7 be such a constant .",
    "given a 3-mhe instance @xmath171 , we construct a @xmath7-mhe instance @xmath172 as follows .",
    "build @xmath173 vertices @xmath174 and @xmath175 edges @xmath176 , @xmath177 .",
    "vertices @xmath178 and @xmath179 are colored by color @xmath32 , for @xmath177 .",
    "let @xmath4 be a vertex in @xmath2 whose color given by @xmath6 is 1 .",
    "then put @xmath175 edges @xmath180 , @xmath177 .",
    "this is our new instance @xmath172 .",
    "obviously for @xmath177 , each edge @xmath176 is happy whereas each edge @xmath180 is unhappy .",
    "so , the optimum of @xmath171 is just equal to the optimum of @xmath172 minus @xmath175 , concluding the theorem .",
    "depth2pt      the @xmath7-mhv problem is np - hard for any constant @xmath9 .    by theorem [ th - k - mhe is np - hard ] , @xmath7-mhe is np - hard ( @xmath9 ) .",
    "we thus reduce @xmath7-mhe to @xmath7-mhv .",
    "let @xmath171 be a @xmath7-mhe instance .",
    "the instance @xmath172 of @xmath7-mhv is constructed as follows .",
    "add @xmath7 vertices @xmath181 and put an edge between @xmath178 and @xmath4 , for each @xmath182 and each @xmath183 .",
    "vertex @xmath178 is colored by @xmath32 , for @xmath182 . for every edge @xmath184 ,",
    "add a vertex @xmath185 and replace the edge by two edges @xmath186 and @xmath187 .",
    "this is our new instance @xmath172 .",
    "since in graph @xmath2 there are vertices with pre - specified colors , each @xmath178 ( @xmath182 ) can not become happy no matter how the remaining vertices are colored .",
    "every original vertex @xmath183 also can not become happy since it is adjacent to all @xmath178 s .",
    "let @xmath188 be any edge in @xmath2 .",
    "since the degree of vertex @xmath185 is 2 , it is happy iff its two neighbors have the same color .",
    "this shows that the optimum of the @xmath7-mhe instance @xmath171 is equal to the optimum of the @xmath7-mhv instance @xmath172 .",
    "the theorem follows .",
    "the mhv problem and the mhe problem are two natural graph coloring problems arising in the homophyly phenomenon of networks . in this paper",
    "we prove the np - hardness of the mhv problem and the mhe problem , and give several approximation algorithms for these two problems .    since our algorithms greedy - mhv , growth - mhv and division - mhe",
    "actually do not care whether the color number @xmath7 is given in the input or whether @xmath7 is a constant , the @xmath7-mhv and @xmath7-mhe problems can also be approximated within @xmath189 and @xmath12 , respectively .",
    "to improve the approximation ratios for mhv and mhe remains an immediate open problem .",
    "it is also interesting to study the mhv and mhe problems in random graphs generated from the classical network models , and in the real - world large networks .",
    "we are grateful for fruitful discussions on this paper with dr .",
    "mingji xia at institute of software , chinese academy of sciences .",
    "99 l. breiman , j. h. friedman , r. a. olshen , c. j. stone .",
    "_ classification and regression trees . _",
    "wadsworth and brooks , monterey , ca , usa , 1984 .",
    "gruia calinescu , howard j. karloff , yuval rabani .",
    "an improved approximation algorithm for multiway cut .",
    "_ journal of computer and system sciences _ ,",
    "60(3):564574 , 2000 .",
    "elias dahlhaus , david s. johnson , christos h. papadimitriou , paul d. seymour , mihalis yannakakis .",
    "the complexity of multiterminal cuts .",
    "_ siam journal on computing _",
    ", 23(4):864894 , 1994 .",
    "david easley , jon kleinberg .",
    "_ networks , crowds , and markets : reasoning about a highly connected world . _ cambridge university press , 2010 .",
    "pter l. erds , lszl a. szkely .",
    "evolutionary trees : an integer multicommodity max - flow - min - cut theorem . _ advances in applied mathematics _ , 13(4):375389 , 1992 .",
    "s. even , r. e. tarjan .",
    "network flow and testting graph connectivity .",
    "_ siam journal on computing _",
    "4:507518 , 1975 .    a. frieze , m. jerrum .",
    "improved approximation algorithms for max @xmath7-cut and max bisection .",
    "_ algorithmica _ , 18:6781 , 1997 .",
    "satoru iwata , lisa fleischer , satoru fujishige .",
    "a combinatorial strongly polynomial algorithm for minimizing submodular functions .",
    "_ journal of the acm _",
    ", 48(4):761777 , 2001 .",
    "arxiv : math/0004089v1 .",
    "viggo kann , sanjeev khanna , jens lagergren , alessandro panconesi . on the hardness of approximating max @xmath7-cut and its dual . _",
    "chicago journal of theoretical computer science _",
    "1997 , 1997 .",
    "david r. karger , philip n. klein , clifford stein , mikkel thorup , neal e. young . rounding algorithms for a geometric embedding of minimum multiway cut .",
    "_ mathematics of operations research _ , 29(3):436461 , 2004 .",
    "arxiv : cs/0205051 .",
    "jon m. kleinberg , va tardos .",
    "approximation algorithms for classification problems with pairwise relationships : metric labeling and markov random fields . _",
    "journal of the acm _",
    ", 49(5):616639 , 2002 .",
    "angsheng li , jiankou li , yicheng pan , pan peng .",
    "homophyly law of networks : principle , method and experiments .",
    "_ manuscript _ , 2011 . to appear .",
    "angsheng li , jiankou li , yicheng pan , pan peng .",
    "small community phenomenon in networks : mechansims , roles and characteristics .",
    "_ manuscript _ , 2012 . to appear .",
    "angsheng li , pan peng .",
    "community structures in classical network models .",
    "_ internet mathematics _ , 7(2):81106 , 2011 .",
    "angsheng li , pan peng .",
    "the small community phenomenon in networks . _ mathematical structures in computer science _",
    ", 22:135 , 2012 .",
    "arxiv:1107.5786 .",
    "h. saran , v. vazirani .",
    "finding @xmath7-cuts within twice the optimal .",
    "_ siam journal on computing _",
    ", 24:101108 , 1995 .",
    "thomas schelling .",
    "dynamic models of segregation .",
    "_ journal of mathematical sociology _",
    ", 1:143186 , 1972 .",
    "thomas schelling . _ micromotives and macrobehavior _ , norton , 1978 .",
    "liang zhao , hiroshi nagamochi , toshihide ibaraki .",
    "greedy splitting algorithms for approximating multiway partition problems .",
    "_ mathematical programming _ , 102(1):167183 , 2005",
    "for a vertex @xmath4 in the mhv problem , instead of requiring that _ all _ neighbors of @xmath4 have the same color as that of @xmath4 , to make @xmath4 happy we may only require at least @xmath190 neighbors have the same color as that of @xmath4 , or only require at least @xmath23 neighbors have the color identical to that of @xmath4 , for some global number @xmath23 .",
    "this leads to two natural variants of the mhv problem , that is , the softmhv problem and the hardmhv problem .",
    "similarly , we can define the corresponding varints for the @xmath7-mhv problem , and our results in this section naturally extends to these variants . for simplicity ,",
    "we only consider approximation algorithms for the softmhv and hardmhv problems .    fix a vertex coloring , and let @xmath4 be a ( colored or uncolored ) vertex .",
    "define @xmath191 to be the set of vertices in @xmath49 which has color @xmath32 , for @xmath182 .",
    "let @xmath21 be a number in @xmath192 . in the soft - threshold extension of the mhv problem ( softmhv for short ) ,",
    "a vertex @xmath4 is happy if @xmath4 is colored and @xmath193 . given a connected undirected graph @xmath2 , a partial coloring function @xmath6 , the softmhv problem asks for a total vertex coloring extended from @xmath6 that maximizes the number of happy vertices .",
    "( the number @xmath21 can be given as a part of the input or be a constant .",
    "we do not distinguish between these two cases for simplicy . )      as what is done in definition [ def - types of vertices in mhv ] , we define the types of vertices according to the given vertex coloring .",
    "[ def - types of vertex - softmhv ] fix a ( partial or total ) vertex coloring . let @xmath4 be a vertex . then ,    1 .",
    "@xmath4 is an @xmath83-vertex if @xmath4 is colored and happy ; 2 .",
    "@xmath4 is a @xmath63-vertex if 1 .",
    "@xmath4 is colored , and 2 .",
    "@xmath4 is destined to be unhappy , ( i.e. , @xmath194 ) ; 3 .",
    "@xmath4 is a @xmath18-vertex if 1 .",
    "@xmath4 is colored , 2 .",
    "@xmath4 has not been happy ( i.e. , @xmath195 ) , and 3 .",
    "@xmath4 can become an @xmath83-vertex ( i.e. , @xmath196 ) ; 4 .",
    "@xmath4 is an @xmath88-vertex if @xmath4 has not been colored .",
    "we note that algorithm greedy - mhv is also a @xmath34-approximation algorithm for the softmhv problem . to see this",
    ", we just define @xmath89 in theorem [ th - 1/k - approximation for mhv ] as the set of uncolored vertices @xmath4 such that @xmath197 , and @xmath198 .",
    "the softmhv problem can be approximated within a factor of @xmath34 in polynomial time .",
    "depth2pt    below we give the subset - growth approximation algorithm growth - softmhv for the softmhv problem .",
    "first we define the subtypes of @xmath88-vertex .",
    "let vertex @xmath4 be an @xmath88-vertex in a vertex coloring .",
    "then ,    1 .",
    "@xmath4 is an @xmath96-vertex if @xmath4 is adjacent to a @xmath18-vertex , 2 .",
    "@xmath4 is an @xmath97-vertex if 1 .",
    "@xmath4 is not adjacent to any @xmath18-vertex , 2 .",
    "@xmath4 is adjacent to an @xmath83-vertex or a @xmath63-vertex , and 3 .",
    "@xmath4 can become happy ( that is , @xmath199 ) , 3 .",
    "@xmath4 is an @xmath98-vertex if 1 .",
    "@xmath4 is not adjacent to any @xmath18-vertex , 2 .",
    "@xmath4 is adjacent to an @xmath83-vertex or a @xmath63-vertex , and 3 .",
    "@xmath4 is destined to be unhappy ( that is , @xmath200 ) , 4 .",
    "@xmath4 is an @xmath99-vertex if @xmath4 is not adjacent to any colored vertex .    a connected undirected graph @xmath2 and a partial coloring function @xmath6 . a total vertex coloring for @xmath2 .",
    "@xmath100 , @xmath101 .",
    "[ step - growth - softmhv - beginning of the main loop ] * while * there exist @xmath88-vertices * do *    there exists a @xmath18-vertex @xmath4 * then *    @xmath102 .",
    "[ step - growth - softmhv - process p - vertex ] add its any @xmath201 @xmath96-neighbors to vertex subset @xmath31 .",
    "the types of all affected vertices ( including @xmath4 and vertices in @xmath51 ) are changed accordingly .",
    "there exists an @xmath97-vertex @xmath4 * then *    let @xmath31 be the vertex subset in which @xmath4 has the maximum colored neighbors .",
    "[ step - growth - softmhv - process lh - vertex ] add vertex @xmath4 and its any @xmath201 @xmath88-neighbors to vertex subset @xmath31 .",
    "the types of all affected vertices ( including @xmath4 and vertices in @xmath51 ) are changed accordingly .",
    "there must be an @xmath98-vertex .",
    "let @xmath4 be any @xmath98-vertex , and @xmath31 be any vertex subset in which @xmath4 has colored neighbors .",
    "add vertex @xmath4 to subset @xmath31 .",
    "the types of all affected vertices ( including @xmath4 and vertices in @xmath49 ) are changed accordingly .",
    "the vertex coloring @xmath30 .    in step [ step - growth - softmhv - process p - vertex ]",
    ", the algorithm adds the least number ( that is , @xmath201 ) of @xmath4 s neighbors to subset @xmath31 to make @xmath4 happy .",
    "the same thing is done in step [ step - growth - softmhv - process lh - vertex ] .    [ lm - lower bound on |h^new| , growth - softmhv ] @xmath202 .",
    "suppose algorithm growth - softmhv is to process a @xmath18-vertex @xmath4 , which is already colored by color @xmath32 .",
    "when @xmath4 is processed , at most @xmath203 @xmath96-neighbors of @xmath4 are added to @xmath31 .",
    "each of the @xmath96-neighbors has at most @xmath114 @xmath97-neighbors . in the worst case ,",
    "all these @xmath97-neighbors , plus the remaining @xmath96-neighbors of @xmath4 , could become @xmath98-vertices when @xmath4 is processed .",
    "so , at most @xmath204 @xmath107-vertices can be generated in this case .",
    "then suppose the algorithm is to process an @xmath97-vertex @xmath4 .",
    "let @xmath31 be the vertex subset in which @xmath4 has the maximum colored neighbors .",
    "when @xmath4 is processed , at most @xmath205 @xmath88-neighbors of @xmath4 are added to @xmath31 .",
    "each of these @xmath88-neighbors can have at most @xmath114 @xmath97-neighbors . in the worst case ,",
    "all these @xmath97-neighbors , plus the remaining @xmath88-neighbors of @xmath4 , could become @xmath98-vertices when @xmath4 is processed .",
    "so , at most @xmath206 @xmath107-vertices can be generated in this case .",
    "when the algorithm processes an @xmath98-vertex , there are only @xmath98-vertices or @xmath99-vertices ( if any ) in the current graph .",
    "so , coloring an @xmath98-vertex does not generate any new @xmath98-vertex .    by charging the number of newly generated @xmath98-vertices to the newly generated @xmath83-vertex",
    ", we finish the proof of the lemma .",
    "depth2pt    the softmhv problem can be approximated within a factor of @xmath35 in polynomial time .",
    "each time an @xmath83-vertex is generated , at most @xmath203 @xmath88-vertices are consumed ( i.e. , colored ) .",
    "so , for the number of newly generated @xmath83-vertices we have @xmath207 . by lemma",
    "[ lm - lower bound on |h^new| , growth - softmhv ] , we get @xmath208    let @xmath59 be the number of happy vertices in an optimal solution to the problem . by the same reason as in lemma [ lm - upper bound on opt ] , we obtain @xmath209    let @xmath62 be the number of happy vertices found by algorithm growth - softmhv .",
    "then we have @xmath210    finally , notice that algorithm growth - softmhv obviously runs in polynomial time .",
    "this gives the theorem .",
    "depth2pt      for any real number @xmath211 , there exist infinitely many integers @xmath9 , such that the corresponding softmhv problem is np - hard .",
    "reduce from 3-mhe .",
    "let @xmath171 be an instance of 3-mhe , and @xmath21 be any real constant in @xmath192 .",
    "we shall construct a softmhv instance @xmath172 in the following , in which the color number @xmath9 is an integer that depends only on @xmath21 .",
    "the value of @xmath7 will be given later .",
    "let @xmath212 be an integer constant depending on @xmath21 and @xmath7 , which will be fixed later .",
    "for every edge @xmath184 , add @xmath213 vertices @xmath214 ( called @xmath112-vertex ) , @xmath215 , @xmath216 , @xmath217 , @xmath218 ( called @xmath219-vertices ) , @xmath220 , @xmath221 , @xmath217 , @xmath222 ( called @xmath223-vertices ) . replace edge @xmath188 by two consecutive edges @xmath224 and @xmath225 . for",
    "each vertex @xmath226 @xmath227 , connect it to @xmath214 via an edge @xmath228 .",
    "for @xmath182 , vertex @xmath229 has a pre - specified color @xmath32 .    for every vertex @xmath183 ,",
    "add @xmath230 vertices @xmath231 , @xmath232 , @xmath217 , @xmath233 , @xmath234 , @xmath235 , @xmath217 , @xmath236 , @xmath217 , @xmath237 , @xmath238 , @xmath217 , @xmath239 ( called @xmath111-vertices ) , where @xmath11 is the maximum vertex degree of @xmath2 .",
    "for each @xmath240 and each @xmath241 , connect vertex @xmath242 to @xmath4 via an edge @xmath243 .",
    "vertex @xmath242 is colored in advance by color @xmath32 , @xmath182 , @xmath241 .",
    "this is our graph @xmath143 in the new instance of softmhv .",
    "next we determine constants @xmath212 and @xmath7 . to enable the reduction to work ,",
    "@xmath212 and @xmath7 should satisfy @xmath244 let @xmath188 be any edge in @xmath2 .",
    "consider vertex @xmath214 in @xmath143 .",
    "no matter how @xmath214 is colored ( recall that the color set is @xmath245 ) , there is exactly one vertex in @xmath246 having the same color as that of @xmath214 .",
    "note that @xmath247 .",
    "so , inequality ( [ eqn - h + 3 > = rho(h + k + 2 ) ] ) guarantees that if all vertices in @xmath248 have the same color as that of @xmath214 , @xmath214 will be happy , and , inequality ( [ eqn - h + 2 < rho ( h + k + 2 ) ] ) guarantees that if there is one vertex in @xmath248 having different color to that of @xmath214 , @xmath214 will be unhappy .    by inequality ( [ eqn - h + 3 > = rho(h + k + 2 ) ] ) and inequality ( [ eqn - h + 2 < rho ( h + k + 2 ) ] ) , the value of integer @xmath212 should satisfy @xmath249 since @xmath250 and @xmath251 , there must be at least one integer in the interval of ( [ eqn - interval of h ] ) .",
    "of course , the left end of the interval of ( [ eqn - interval of h ] ) should be at least 1 .",
    "this gives @xmath252    for each vertex @xmath253 that comes from @xmath2 , we want to guarantee that no matter how the vertices in @xmath143 are colored , @xmath4 will never be happy .",
    "note that no matter what color vertex @xmath4 is colored by , there are exactly @xmath11 vertices in @xmath254 having the same color as that of @xmath4 . since @xmath255 and @xmath256 ,",
    "to make vertex @xmath4 unsatisfiable , we just need @xmath257 . since @xmath258 , this will be guaranteed by letting @xmath259    since we start our reduction from the 3-mhe problem , naturally we need @xmath260    by inequalities ( [ eqn - k > = 4/rho - 3 ] ) , ( [ eqn - k > = 2/rho ] ) and ( [ eqn - k > = 3 ] ) , we can set @xmath7 as _ any _ integer such that @xmath261 once @xmath7 is fixed , we can fix @xmath212 according to ( [ eqn - interval of h ] ) .",
    "we have completed our new instance @xmath172 of softmhv .",
    "let @xmath168 and @xmath262 . denote by @xmath166 the number of happy edges in an optimal solution to the 3-mhe instance @xmath171 , and by @xmath263 the number of happy vertices in an optimal solution to the softmhv instance @xmath172 .",
    "we shall prove the following claim , which will finish the proof of the theorem .",
    "@xmath264 .",
    "( @xmath265 ) let @xmath165 be an optimal solution to instance @xmath171 .",
    "first we color every vertex @xmath253 such that @xmath4 is also in @xmath2 by color @xmath266 . for each edge",
    "@xmath184 , color @xmath214 by color @xmath267 , ( actually coloring @xmath214 by either @xmath267 or @xmath266 is ok . ) and color all vertices @xmath215 , @xmath217 , @xmath218 by the color of @xmath214 .",
    "this is our vertex coloring for instance @xmath172 .    by similar arguments before inequality ( [ eqn - k > = 2/rho ] )",
    ", for every vertex @xmath268 and its corresponding @xmath111-vertices in @xmath143 , @xmath4 itself is unhappy and there are exactly @xmath11 happy vertices in @xmath269 .",
    "so we obtain @xmath270 happy vertices from all @xmath111-vertices in @xmath143 .",
    "let @xmath188 be an edge in @xmath2 . in its corresponding @xmath219-vertices",
    "@xmath271 and @xmath223-vertices @xmath272 , there are exactly @xmath273 vertices that are happy by our coloring .",
    "so we obtain @xmath274 happy vertices from all the @xmath219-vertices and @xmath223-vertices in @xmath143 .",
    "next let us consider vertex @xmath214 . if @xmath188 is happy by @xmath165 , then @xmath214 has @xmath275 neighbors having the same color as that of @xmath214 .",
    "so the fraction of happy neighbors of @xmath214 is @xmath276 where the first inequality is due to @xmath277 ( by inequality ( [ eqn - h + 3 > = rho(h + k + 2 ) ] ) ) , and hence @xmath214 is happy . since @xmath278 , we can obtain @xmath279 happy vertices from all @xmath112-vertices in @xmath143 .",
    "summing all , the number of happy vertices in @xmath143 by our coloring is at least @xmath280 .",
    "( @xmath281 ) let @xmath282 be an optimal solution to instance @xmath172 of softmhv . by the arguments before inequality ( [ eqn - k > = 2/rho ] ) ,",
    "every vertex @xmath283 is unhappy by @xmath282 , and there are exactly @xmath270 happy @xmath111-vertices by @xmath282 .",
    "let @xmath188 be any edge in @xmath2 .",
    "since @xmath282 is an optimal coloring , we can assume that all vertices @xmath215 , @xmath217 , @xmath218 have color @xmath284 . taking into account the one more happy vertex @xmath229 ( where @xmath285 ) for each @xmath184 , there are exactly @xmath286 happy vertices by @xmath282 from all @xmath219-vertices and @xmath223-vertices .",
    "now only @xmath112-vertices in @xmath143 remain unconsidered .",
    "since @xmath287 , there must be at least @xmath288 happy @xmath112-vertices .",
    "let @xmath214 be any such vertex .",
    "since @xmath214 is happy , the number of neighbors of @xmath214 that have the color as that of @xmath214 is at least @xmath289 where the first inequality is due to inequality ( [ eqn - h + 2 < rho ( h + k + 2 ) ] ) .",
    "this shows that the number of neighbors of @xmath214 having color @xmath284 is at least @xmath275 .",
    "so , vertices @xmath103 and @xmath4 must have the _ same _ color ( as that of @xmath214 ) .",
    "let us color every vertex @xmath183 by color @xmath290 .",
    "if there are vertices in @xmath2 colored by colors in @xmath291 , then color all of them by color 1 ( note that @xmath2 is part of the instance of the 3-mhe problem ) .",
    "this will never decrease the number of happy edges in @xmath2 . by the above analysis , the number of happy edges in @xmath2 is at least @xmath288 .",
    "depth2pt    the proof of the theorem is finished .",
    "in the hard - threshold variant of the @xmath7-mhv problem ( hardmhv for short ) , a vertex @xmath4 is happy if @xmath292 , where @xmath23 is an input parameter . given a connected undirected graph @xmath2 , a partial coloring function @xmath6 , and an integer @xmath24 , the hardmhv problem asks for a total vertex coloring extended from @xmath6 that maximizes the number of happy vertices .",
    "it is reasonable to assume @xmath293 , since otherwise there is no feasible solution to the problem .          1 .",
    "@xmath4 is an @xmath83-vertex if @xmath4 is colored and happy , 2 .",
    "@xmath4 is a @xmath63-vertex if 1 .",
    "@xmath4 is colored , and 2 .",
    "@xmath4 is destined to be unhappy ( i.e. , @xmath294 ) , 3 .",
    "@xmath4 is a @xmath18-vertex if 1 .",
    "@xmath4 is colored , 2 .",
    "@xmath4 has not been happy ( that is , @xmath295 ) , and 3 .",
    "@xmath4 can become happy ( i.e. , @xmath296 ) , 4 .",
    "@xmath4 is an @xmath88-vertex if @xmath4 has not been colored .",
    "similar as the case of softmhv , algorithm greedy - mhv is also a @xmath34-approximation algorithm for the hardmhv problem . to prove this we only need to define @xmath89 in theorem [ th - 1/k - approximation for mhv ] as the set of uncolored vertices @xmath4 such that @xmath297 , and @xmath198 .      in the mhv and softmhv problems , for an @xmath88-vertex @xmath4 ,",
    "if @xmath298 is too large , then @xmath4 may be destined to be unhappy .",
    "in contrast , in the hardmhv problem , an @xmath88-vertex @xmath4 may be destined to be unhappy even if @xmath299 : this will happen when @xmath300 .",
    "based on this observation , the @xmath88-vertex type is divided into the following four subtypes .      1 .",
    "@xmath4 is an @xmath96-vertex if @xmath4 is adjacent to a @xmath18-vertex , 2 .",
    "@xmath4 is an @xmath97-vertex if 1 .",
    "@xmath4 is not adjacent to any @xmath18-vertex , 2 .",
    "@xmath4 is adjacent to an @xmath83-vertex or a @xmath63-vertex , and 3 .",
    "@xmath4 can become happy ( i.e. , @xmath301 ) , 3 .",
    "@xmath4 is an @xmath98-vertex if 1 .",
    "@xmath4 is not adjacent to any @xmath18-vertex , and 2 .",
    "@xmath4 is destined to be unhappy ( i.e. , @xmath302 ) , 4 .",
    "@xmath4 is an @xmath99-vertex if 1 .",
    "@xmath4 is not adjacent to any colored vertex , and 2 .",
    "@xmath4 can become happy .",
    "one can verify that the subtypes in definition [ def - subtypes of l - vertex - hardmhv ] really form a partition of all @xmath88-vertices .",
    "note that the @xmath98-vertex not only refers to the destined - to - be - unhappy @xmath88-vertex that is adjacent to an @xmath83-vertex or a @xmath63-vertex ( like the @xmath98-vertex in mhv and the @xmath98-vertex in softmhv ) , but also refers to the destined - to - be - unhappy @xmath88-vertex that is not adjacent to any colored vertex , as discussed before definition [ def - subtypes of l - vertex - hardmhv ] .",
    "let @xmath31 be the vertex subset in which @xmath4 has the maximum colored neighbors .",
    "add vertex @xmath4 and its any @xmath303 @xmath88-neighbors to @xmath31 .",
    "the types of all affected vertices ( including @xmath4 and vertices in @xmath51 ) are changed accordingly",
    ".    there must be an @xmath98-vertex .",
    "let @xmath4 be any @xmath98-vertex .",
    "if @xmath4 has colored neighbors , then let @xmath31 be any vertex subset containing a colored neighbor of @xmath4 .",
    "otherwise let @xmath31 be @xmath134 .",
    "add vertex @xmath4 to subset @xmath31 .",
    "the types of all affected vertices ( including @xmath4 and vertices in @xmath49 ) are changed accordingly .",
    "the algorithm processes an @xmath98-vertex , there are only @xmath98-vertices or @xmath99-vertices ( if any ) in the current graph .",
    "each time algorithm growth - hardmhv processes an @xmath98-vertex @xmath4 , it processes only _",
    "one _ such vertex .",
    "so , if @xmath4 has an @xmath99-neighbor @xmath103 , @xmath103 will become an @xmath97-vertex after the processing .",
    "this means that coloring an @xmath98-vertex does not generate any new @xmath98-vertex .",
    "we omit the other details of the proof .",
    "depth2pt      each time an @xmath83-vertex is generated , at most @xmath23 @xmath88-vertices are consumed ( i.e. , colored ) .",
    "so , for the number of newly generated @xmath83-vertices we have @xmath304 . by lemma [ lm - lower bound on |h^new| , growth - hardmhv ] , and noticing that @xmath293",
    ", we get @xmath208      let @xmath62 be the number of happy vertices found by algorithm growth - hardmhv",
    ". then we have @xmath306 by the above two inequalities .",
    "as algorithm growth - hardmhv obviously runs in polynomial time , the theorem follows .",
    "depth2pt          given an instance @xmath171 of @xmath7-mhe , we construct an instance @xmath307 of hardmhv as follows . for each edge @xmath184 , do the following .",
    "add a vertex @xmath214 and @xmath114 vertices @xmath215 , @xmath216 , @xmath217 , @xmath308 , where @xmath11 is the maximum vertex degree of @xmath2 .",
    "the vertices @xmath309 s are called _",
    "satellite vertices_. replace edge @xmath188 by two edges @xmath224 and @xmath225 .",
    "connect each vertex @xmath309 to @xmath214 via an edge @xmath310 .",
    "finally , let @xmath311 .",
    "we thus get our hardmhv instance @xmath307 .    since @xmath311 , each original vertex @xmath183 and each newly added satellite vertex can not be happy no matter how the vertices in @xmath143 are colored . for each edge @xmath184 , since its corresponding vertex @xmath214 is of degree @xmath312 , @xmath214 is happy iff its two neighbors @xmath103 and @xmath4 have the same color .",
    "this shows that the optimum of @xmath171 is equal to that of @xmath307 , finishing the proof of the theorem ."
  ],
  "abstract_text": [
    "<S> we investigate the algorithmic problems of the _ homophyly phenomenon _ in networks . given an undirected graph @xmath0 and a vertex coloring @xmath1 of @xmath2 , we say that a vertex @xmath3 is _ happy _ if @xmath4 shares the same color with all its neighbors , and _ unhappy _ , otherwise , and that an edge @xmath5 is _ happy _ , if its two endpoints have the same color , and _ unhappy _ , otherwise . supposing @xmath6 is a _ partial vertex coloring _ of @xmath2 , we define the maximum happy vertices problem ( mhv , for short ) as to color all the remaining vertices such that the number of happy vertices is maximized , and the maximum happy edges problem ( mhe , for short ) as to color all the remaining vertices such that the number of happy edges is maximized .    </S>",
    "<S> let @xmath7 be the number of colors allowed in the problems . </S>",
    "<S> we show that both mhv and mhe can be solved in polynomial time if @xmath8 , and that both mhv and mhe are np - hard if @xmath9 . </S>",
    "<S> we devise a @xmath10-approximation algorithm for the mhv problem , where @xmath11 is the maximum degree of vertices in the input graph , and a @xmath12-approximation algorithm for the mhe problem . </S>",
    "<S> this is the first theoretical progress of these two natural and fundamental new problems . </S>"
  ]
}
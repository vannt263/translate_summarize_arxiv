{
  "article_text": [
    "the expansion of a physical property in terms of a basis of known functions is a very common procedure in physics . in this paper , we focus on generating bases suitable for expanding a function on the unit sphere , that is , a function of direction describing the anisotropy of a given physical property .",
    "this mathematical tool has direct applications in various fields , for instance , to parametrize the orientation - dependence of interface energies @xcite , to represent the charge densities of rigid molecules in x - ray  analysis @xcite or to describe the orientation - dependence of the so - called constituent strain elastic energy of superlattice structures in the long wavelength limit laks : recip , ozolins : elas .",
    "of course , it is well - known that , in the absence of symmetry constraints , spherical harmonics provide a complete solution to the problem .",
    "the problem  becomes interesting and non - trivial when symmetry constraints reduce the number of degrees of freedom in the expansion , which is the topic of the present paper .",
    "one distinguishing feature of the proposed method is that it can be easily implemented using generic linear algebra operations without having consider many different subcases that depend on the point group considered .",
    "the algorithm proposed herein has been implemented in the ` gencs `  code of the alloy theoretic automated toolkit ( atat ) avdw : maps , avdw : atat , avdw : atat2,avdw : atatcode .",
    "the method also highlights a seldom mentioned characterization  of spherical harmonics : they are simply polynomials in the components of a unit vector .",
    "polynomials are known to form a complete basis for any continuous function over a bounded region ( e.g. the unit sphere ) .",
    "hence , in particular , they form a complete basis for any continuous function defined over the surface of the unit sphere .",
    "let @xmath0 be a three - dimensional unit vector ( e.g. @xmath1 ) .",
    "any continuous  function @xmath2 of direction @xmath0 can therefore be represented as@xmath3where we use the short - hand notation@xmath4(with @xmath5 defined as constant ) and where @xmath6 is a rank @xmath7 tensor that is symmetric under permutation of the indices ( since permutations of the indices does not change the polynomial we can , without loss of generality , limit ourselves to such symmetric tensors ) .",
    "if the function @xmath8 is constrained by symmetry , such constraints can then be implemented by restricting the tensors @xmath9 to obey suitable invariance with respect to all symmetry operations in a given point group @xcite . as explained in more detail in the section secalgo ,",
    "this can be simply accomplished by considering @xmath10 noncolinear trial tensors , and obtaining symmetrized tensors by averaging each trial tensor with all its transformations by each point group symmetry operation .",
    "the desired result is obtained after eliminating colinear symmetrized tensors .",
    "an additional step is needed because expansion ( [ eqexp ] ) is a bit redundant , since the polynomial @xmath11 is constant over the unit sphere .",
    "this would imply that nonzero coefficients @xmath9 for @xmath12 could give rise to a constant @xmath13 , which is undesirable .",
    "this can be avoided by projecting each @xmath9 onto the space orthogonal to tensors giving rise to polynomials that can be factored as@xmath14for some tensor @xmath15 of rank @xmath16 .",
    "( it is not necessary to consider higher powers of @xmath17 in this factorization , because @xmath18 could include additional @xmath17 factors as a special case . )",
    "a simple algorithm to accomplish the symmetrization and this projection is provided in section [ secalgo ] .",
    "the result of this procedure is an expression for the tensor @xmath19 as a sum of @xmath20 symmetry - constrained and non - redundant components @xmath21 : @xmath22where the tensors @xmath21 are fixed and determined by symmetry while the coefficients @xmath23 are completely unrestricted . upon substitution into ( [ eqexp ] ) we obtain a symmetry - constrained expansion:@xmath24",
    "let us first define a few convenient symbols .",
    "* let @xmath25 denote a @xmath26 matrix representing a point symmetry operation in cartesian coordinates and let the corresponding  function @xmath27 applied to a tensor @xmath19 of rank @xmath7 be defined as:@xmath28 _",
    "{ j_{1},\\ldots , j_{l}}=\\sum_{i_{1}=1}^{3}\\cdots \\sum_{i_{l}=1}^{3}a_{i_{1},\\ldots , i_{l}}^{\\left ( l\\right ) } \\prod_{k=1}^{l}s_{i_{k}j_{k}}\\]]and let @xmath29 denote a set of such matrices that defines the point group of interest .",
    "* let @xmath30 denote a permutation vector ( i.e. an @xmath7-dimensional vector containing all the number @xmath31 not necessarily in increasing order ) and let the function @xmath32 be defined as : @xmath33 _ { j_{1},\\ldots , j_{l}}=a_{i_{p\\left ( 1\\right ) } , \\ldots , i_{p\\left ( l\\right ) } } ^{\\left ( l\\right ) } \\]]and let @xmath34 denote the set of all such permutations for a given @xmath7 .",
    "* let @xmath35 denote the number of elements in a set .",
    "* let @xmath36 be a set of rank @xmath7 tensors  defining linear constraints on the generated tensor basis , i.e. the @xmath21 generated must be orthogonal to all @xmath37 , according to the inner product @xmath38(if @xmath39 , no constraints are imposed . )",
    "* let @xmath40 denote a vectorization of the tensor @xmath9 ( i.e. a @xmath10-dimensional column vector containing all elements of the tensor @xmath19 ) and let @xmath41 denote the reverse operation .    our algorithm for generating a basis for tensors of rank @xmath7 obeying symmetric constraints ( defined by a point group @xmath29 ) , indices permutation invariance constraints ( defined by the set @xmath42 ) and some linear constraints ( defined by a basis of tensors @xmath36 ) is then as follows :    1 .   if @xmath43 , define @xmath44 to be the nonzero and non linearly dependent columns of the matrix:@xmath45 .\\ ] ] 2 .   set @xmath46 3 .",
    "consider a set of distinct trial tensors @xmath47 for @xmath48 , each consisting of a single element set to @xmath49 , with all remaining elements set to @xmath50",
    ". obeys @xmath51 . ]",
    "1 .   for each trial tensor @xmath47 , set@xmath52(or simply @xmath53 if @xmath39 ) .",
    "2 .   calculate@xmath54 3 .",
    "if @xmath55 is nonzero and ( for @xmath56 ) not linearly dependent with the @xmath57 $ ] , then increment @xmath58 and set @xmath59 .",
    "4 .   finally , set @xmath60 and orthogonalize ( and normalize ) the element of @xmath61 $ ] using the gram - schmidt procedure .",
    "the harmonics of order up to @xmath62 are then generated by calling the above routine for @xmath63 , setting @xmath39 if @xmath64 and otherwise setting the constraints @xmath65 to be@xmath66where the @xmath67 are also generated with the above routine ,  called with rank @xmath16 , the same point group @xmath29 , the permutation set @xmath68 and @xmath39 ( no constraints @xmath69 ) .",
    "it is instructive to see why the method used for symmetrization in the algorithm of section [ secalgo ] actually works . for an arbitrary trial tensor @xmath47 we can verify that the symmetrized tensor@xmath70obeys @xmath71 for any operation @xmath72 .",
    "indeed , calculate@xmath73where the second equality holds because @xmath74 is just another operation in @xmath75 and two distinct @xmath76 can not be mapped onto the same symmetry operation by applying @xmath77 , since each element of a group admits an inverse .",
    "since the symmetrization procedure is a linear projection , choosing the trial tensors @xmath47 to be an orthogonal basis is sufficient to generate a basis for the space of symmetrized tensors .",
    "a similar argument holds for invariance under permutations @xmath30 of the indices . finally , note that applying a point group operation @xmath78 to a tensor @xmath9 that is invariant to indices permutations yields a tensor with the same property:@xmath79 _",
    "{ j_{1},\\ldots , j_{l } } & = & \\left [ s\\left ( a^{\\left ( l\\right ) } \\right ) \\right ] _ { j\\left ( p_{1}\\right ) , \\ldots , j\\left ( p_{l}\\right ) } = \\sum_{i_{1}=1}^{3}\\cdots \\sum_{i_{l}=1}^{3}a_{i_{1},\\ldots , i_{l}}^{\\left ( l\\right ) } \\prod_{k=1}^{l}s_{i_{k}j_{p\\left ( k\\right ) } } \\\\ & = & \\sum_{i_{1}=1}^{3}\\cdots \\sum_{i_{l}=1}^{3}a_{i_{p\\left ( 1\\right ) } , \\ldots , i_{p\\left ( l\\right ) } } ^{\\left ( l\\right ) } \\prod_{k=1}^{l}s_{i_{p\\left ( k\\right ) , } j_{p\\left ( k\\right ) } } \\\\ & = & \\sum_{i_{1}=1}^{3}\\cdots \\sum_{i_{l}=1}^{3}a_{i_{p\\left ( 1\\right ) } , \\ldots , i_{p\\left ( l\\right ) } } ^{\\left ( l\\right ) } \\prod_{k=1}^{l}s_{i_{k,}j_{k } } \\\\ & = & \\sum_{i_{1}=1}^{3}\\cdots \\sum_{i_{l}=1}^{3}a_{i_{1},\\ldots , i_{l}}^{\\left ( l\\right ) } \\prod_{k=1}^{l}s_{i_{k,}j_{k}}=\\left [ s\\left ( a^{\\left ( l\\right ) } \\right ) \\right ] _",
    "{ i_{1},\\ldots , i_{l}}\\end{aligned}\\]]where we have used the fact re - ordering the sums or the product has no effect and the invariance of @xmath9 under permutation .",
    "this shows that symmetrizing the tensor after making it invariant to indices permutations does not undo the permutation invariance .",
    "it is interesting to observe that expansion ( [ eqexp2 ] ) coincides ( apart from an inconsequential linear transformation ) with spherical harmonics when no symmetry constraints are imposed . the easiest way to see",
    "this is to compare ( [ eqexp2 ] ) with the eigenfunction of the schrdinger equation for some  spherically symmetric potential selected so that the eigenfunctions involve polynomials .",
    "we can use any convenient radial potential because we only focus on the angular part .  consider a spherically symmetric harmonic potential , whose eigenstates are polynomials times a spherically symmetric gaussian .",
    "the gaussian is constant over the unit sphere , so we are left with only a polynomial as the angular dependence.moreover , it is well - known that the order of that polynomial is equal  to @xmath80 , the sum of three principal quantum numbers of the harmonic oscillator along each dimension .",
    "this sum is also ( up to a constant scaling and shift )  the energy of the system .",
    "it follows that there is a direct correspondence between all terms in ( [ eqexp2 ] ) sharing the same value of @xmath7 and all eigenfunctions sharing the same energy .",
    "the different terms sharing the same @xmath7 thus correspond to eigenstates with different angular momentum projections .",
    "we can verify that the number of terms ( in the case of a spherically symmetric potential ) matches the number of spherical harmonics for a given value of @xmath7 .",
    "indeed , the number of distinct terms of total power @xmath7 in a polynomial in @xmath81 variables is @xmath82 . in the present case @xmath83 .  from that number",
    ", we subtract the dimension of the subspace of polynomials that factor as @xmath84 times a polynomial of order @xmath16 , we obtain @xmath85 , exactly the number of spherical harmonics associated with angular momentum is @xmath7 .",
    "hence the dimension of the space spanned by the spherical harmonics for a given @xmath7 is the same as the dimension of the space spanned by our polynomials .",
    "both spaces include polynomials of order @xmath7 on the unit sphere that are not colinear and it follows that both bases must span the same space .",
    "hence both expansions , truncated to the same @xmath7 , span the same space .",
    "suitable treatments for special cases already exist in the literature .",
    "notable examples include the cubic  harmonics ( e.g. altmann : cubharm , muggli : cubharm ) and harmonics for hexagonal symmetry ( e.g. @xcite ) .",
    "a very general treatment can be found in @xcite .",
    "although very complete , this treatment does not lends itself to a simple implementation : the point group and its orientation has to be identified , not just as a list of symmetry operations , but recognized by name as one of the known point groups , so that one can lookup the specific rules applying to that point group .",
    "based on the point group category found ( e.g. , cubic or hexagonal ) , a superset of harmonics is selected . then , based on the specific point group found , index rules  are applied to eliminate those harmonics that should vanish by symmetry .",
    "this treatment is ideally suited for researchers wanting to manually construct a basis based on the knowledge of the point group , as the different case are nicely classified by point group . however , a computer program implementing the method would also necessarily contain a large number of tests and subcases .",
    "it would also have to rotate the symmetries into a standard setting  to use the tabulated index rules .",
    "moreover , if one wishes to handle other points group that are not special cases of cubic or hexagonal symmetries ( e.g. icosahedral symmetry or other noncrystallographic point groups ) , a different superset of harmonics and index rules must be constructed .",
    "in contrast , the approach proposed herein works directly with the symmetry operation in matrix form ( which are easy to determine ) and no classification into categories of point group is needed . the possibility of having point group in different orientation ( or settings ) is automatically handled , with no extra coding effort .",
    "the algorithm only relies on basic linear algebra operations and handles any point groups , not just those for which supersets of harmonics have already been constructed .",
    "the proposed method is related to the one proposed in @xcite to generate tensor bases , although additional steps , provided herein , were needed to formally show that such tensors bases can be used to generate direction - dependent harmonics and to avoid redundant harmonics via a projection scheme .",
    "figure [ ptgrpfig ] shows the harmonics generated by the proposed algorithm for each of the crystallographic point groups .",
    "the coefficients @xmath9 in electronic form can be found in the supplement material ( in the atat  format described in section [ secatat ] , along with the input files needed to generate the harmonics ) .",
    "figure [ nonxtalfig ] shows the result of a similar exercise for selected noncrystallographic point groups .",
    "the code takes , as an input , either a point group ( specified via generators ) or a structural information from which it determines the point symmetry automatically .",
    "it outputs the harmonics in a file , in form that is easy to read into a computer code and outputs the harmonics in human - readable form on the standard output .",
    "some of the file formats contain extraneous items not needed for harmonic generation _",
    "per se _ ( marked in italics below ) , but that are included to ensure compatibility with other portions of the atat package .      by default",
    ", the code reads in structural information ( from the ` lat.in ` file by default  a alternate file name can be specified with the ` -l ` option ) and determines the point group automatically .",
    "the lat.in file has the following format .    1 .   first , the coordinate system @xmath86,@xmath87,@xmath88 is specified , either as@xmath89~[b]~[c]~[\\alpha ] ~[\\beta ] ~[\\gamma ] \\]]*or * in terms of cartesian coordinates , one axis per line:@xmath90 & \\left [ a_{y}\\right ] & \\left [ a_{z}\\right ]",
    "\\\\   \\left [ b_{x}\\right ] & \\left [ b_{y}\\right ] & \\left [ b_{z}\\right ] \\\\",
    "\\left [ c_{x}\\right ] & \\left [ c_{y}\\right ] & \\left [ c_{z}\\right]\\end{array}\\ ] ] 2 .",
    "then the lattice vectors @xmath91 are listed , one per line , expressed in the coordinate system just defined:@xmath92 & \\left [ u_{b}\\right ] & \\left [ u_{c}\\right ] \\\\   \\left [ v_{a}\\right ] & \\left [ v_{b}\\right ] & \\left [ v_{c}\\right ] \\\\",
    "\\left [ w_{a}\\right ] & \\left [ w_{b}\\right ] & \\left [ w_{c}\\right]\\end{array}\\ ] ] 3 .   finally , the position @xmath93 and type(s ) @xmath94 of atom for site @xmath95 are given , expressed in the same coordinate system as the lattice vectors:@xmath96 & \\left [ x_{b1}\\right ] & \\left [ x_{c1}\\right ] & \\left [ t_{11},t_{21}\\ldots \\right ] \\\\",
    "\\left [ x_{a2}\\right ] & \\left [ x_{b2}\\right ] & \\left [ x_{c2}\\right ] & \\left [ t_{12},t_{22},\\ldots \\right ] \\\\   \\vdots & \\vdots & \\vdots & \\vdots\\end{array}\\ ] ]    an example of such file , for an al - ti alloy adopting the hcp crystal structure is :    [ cols= \" < , < \" , ]     invoking the code without any options displays help . at the minimum , the user must specify the -r option .",
    "all other options are optional .",
    "this work is supported by xsede computing resources and by the national science foundation under grant no ."
  ],
  "abstract_text": [
    "<S> we present a simple and general method to generate a set of basis functions suitable for parametrizing the anisotropy of a given physical property in the presence of symmetry constraints . </S>",
    "<S> this mathematical tool has direct applications in various fields , for instance , to parametrize the orientation - dependence of interface energies or to represent the so - called constituent strain elastic energy of superlattice structures in the long wavelength limit . </S>",
    "<S> the proposed method can be easily implemented using generic linear algebra operations without having consider many different subcases that depend on the point group symmetry considered . </S>",
    "<S> the method exploits a direct correspondence between spherical harmonics and polynomial functions of a unit vectors expressed in tensor notation . </S>",
    "<S> the method has been implemented in the ` gencs`code of the alloy theoretic automated toolkit ( atat ) . </S>"
  ]
}
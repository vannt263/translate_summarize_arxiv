{
  "article_text": [
    "the motivation for this work comes form the fact , that many new applications of high order cumulant tensors have recently appeared . as high order cumulant tensor",
    "we understand @xmath1 mode tensor , where @xmath2 is called the order of the cumulant .",
    "high order cumulant tensors have recently been used to analyse non  normally distributed multivariate data such as : financial data @xcite , hyper ",
    "spectral data @xcite and auto  correlated multivariate data @xcite .",
    "there are also other potential applications of high order cumulants resulting from non  normality of : weather data @xcite , medical data @xcite and cosmological data @xcite .",
    "many of listed above types of multivariate data can be recorded and examined in real time . since cumulants are caring information about their frequency distribution @xcite , cumulants online update can be used for rapid determination of any change in such data statistics .",
    "e.g. in the search for anomalies such as : incoming crash on financial markets @xcite , weather anomalies , anomalies recorded in medical data or cosmological anomalies .",
    "the idea of cumulants update leads also to idea of scattered computation used to collect statistics about confidential data . for this purpose ,",
    "suppose we have a few agents possessing confidential multivariate data with the same number of variables .",
    "examples of such confidential data are : different types of financial data , sales records of priory determined products , industrial data or costs records of some operations .",
    "if we want to gather information about the statistics of such data , they have to be preprocessed by each agent separately . to maintain the confidentiality ,",
    "only results of preprocessing are collected .",
    "henceforth we propose the following map reduce algorithm .",
    "first each agent map data onto moment tensors , and further those tensors are reduced into cumulants , by the central agent .",
    "we can now move to the formal definition of cumulant s tensors .",
    "analogically to @xcite let us start with @xmath3 samples of @xmath4 dimensional random variable represented by a matrix @xmath5 , or represented by a sequence of @xmath4 marginal variables @xmath6 : @xmath7   = [ x_1 , \\ldots , x_j , \\ldots , x_m].\\ ] ] here @xmath8 , the @xmath9^th^ record of @xmath10^th^ marginal variable @xmath11^{\\intercal}$ ] .",
    "using this notation the cumulant generation function @xcite is : @xmath12 \\cdot       \\tau^{\\intercal}\\right)}{t}\\right),\\ ] ] where @xmath13 is an argument vector of the cumulant generation function and dot represents scalar product .",
    "the element of the @xmath2^th^ cumulant at multi  index @xmath14 $ ] is : @xmath15}.\\ ] ]    a first cumulant is a mean vector , a second one is a covariance matrix , a third is a @xmath16 mode tensor . the wider discussion of cumulant s features , including their symmetry and meaning is presented in @xcite",
    ".      for multivariate normally distributed data , cumulant generation function eq .",
    "is quadratic in parameter @xmath13 and hence its third and higher derivatives are zero @xcite .",
    "hence , cumulants of order higher or equal @xmath16 are zero . if the multivariate frequency distribution of data is not normal , the characteristic function can be expanded in more terms than quadratic and cumulants of order higher or equal @xmath16 are not zero .",
    "it is why , high order cumulants are caring information about frequency distribution of non  normally distributed data , especially about extreme and cross  correlated events . to show the meaning of extreme events , consider financial data , where an extreme event is a crash , a breakdown of stock market or a bankruptcy .",
    "the paper is organized as follows : in section @xmath17 general procedure of cumulants calculation introduced in @xcite , is discussed . in section",
    "@xmath16 the algorithm of cumulant s updates and cumulant s calculation is introduced and tested against computer generated data . in section @xmath18 the map reduce algorithm used to collect statistic from confidential data is presented .",
    "in @xcite the authors have presented a general recurrence formula for calculation of the cumulant tensor of order @xmath2 , given the @xmath2^th^ moment tensor , and cumulant tensors of lower orders .",
    "that formula will be used in section @xmath16 to construct cumulants update algorithm . to demonstrate the recurrence formula from @xcite we need some definitions .",
    "[ d::moment ] let @xmath19 be as in eq .  , the @xmath2^th^ moment tensor @xmath20 has elements : @xmath21    set partition of the multi ",
    "index @xmath22 , into @xmath23 sub multi ",
    "indices.[d::part ] let @xmath24 be a multi  index , and let @xmath25 .",
    "consider the division of multi ",
    "index @xmath26 into a @xmath23-tuple of sub multi  indices : @xmath27 where @xmath28 , such that @xmath29 and @xmath30 .",
    "in other words the sum of sets of all sub multi  indices gives an original multi index @xmath26 , and each pair of sub multi ",
    "indices is disjoint .",
    "[ d::class ] consider the following set partition of multi ",
    "index @xmath26 : @xmath31 and @xmath32 .",
    "let us introduce the equivalence relation : @xmath33 } \\",
    "\\exists_{\\pi_k}(i_1',\\ldots ,       i_\\sigma ' ) = \\pi'\\left(\\pi_1(i_{1 } ) , \\ldots ,       \\pi_{\\sigma}(i_{\\sigma})\\right ) \\big).\\ ] ] where @xmath34 is a permutation of sub multi  indices and @xmath35 a permutation of indices inside a sub multi  index .",
    "this relation defines the abstraction class .",
    "further , following @xcite , we will take only one representative of each abstraction class and denote it simply by @xmath36 $ ] .",
    "similarly as in @xcite we simply divide a multi ",
    "index into a @xmath23-tuple of sub multi  indices in such a  way that the ordering of indices inside each sub multi  indices does not matter and the ordering of sub multi ",
    "index inside the @xmath23-tuple does not matter either .      for the cumulants calculation purpose , we can refer to @xcite and eq .",
    "( 24 ) within .",
    "an element of @xmath2^th^ cumulant tensor at a multi ",
    "index @xmath26 of size @xmath37 , can be computed using the following recurrence relation :    @xmath38 } \\left(\\prod_{i^ * \\in p_{\\sigma}(i ) }   c_{i^*}(\\textbf{x})\\right).\\ ] ]    here @xmath39 are elements of cumulant tensors of order @xmath40 .",
    "the number of all partitions of a multi  index of size @xmath2 is determined by the bell number @xmath41 @xcite , where @xmath42 , @xmath43 , @xmath44 , @xmath45 etc . henceforth , we have @xmath46 elements of sums in eq .  , the partition which is the identity relation @xmath47 is excluded due to the @xmath48 condition .",
    "number of multiplications for each partition is @xmath49 , since there are @xmath23 elements @xmath39 that are multiplied .",
    "but @xmath50 , hence the number of multiplications required to calculate the second element of the rhs of eq .  , for each multi  index @xmath26 , is limited by @xmath51 from above .    for presentation clarity ,",
    "let us now show some examples of the use of eq .  .",
    "the first cumulant is simply a mean vector @xmath52 .",
    "consider now , the second cumulant .",
    "there is only one way to divide @xmath17 elements multi ",
    "index into @xmath17 sub multi ",
    "indices according to def .",
    "[ d::class ] , hence we have : @xmath53    consider now the third cumulant .",
    "the @xmath16 elements multi  index can be divided into @xmath17 sub multi ",
    "indices of size @xmath54 and @xmath17 in @xmath16 ways and into @xmath16 sub multi  indices of size @xmath54 each , in @xmath54 way : @xmath55",
    "having the cumulant s calculation formula , we can move now to the novel idea of cumulant tensors updates .",
    "let @xmath56 be as in eq .  .",
    "let us consider the update @xmath57 .",
    "the updated matrix @xmath58 is constructed in such a way , that we remove first @xmath59 rows of @xmath60 and add all @xmath59 rows of @xmath61 at the end of reminding . in a formal way ,",
    "elements of @xmath62 are : @xmath63 having the updated matrix of data , we can discuss the update of arbitrary order moment s tensor .",
    "we can show , that the @xmath2^th^ moment of updated data @xmath64 , can be calculated given the original moment s tensor @xmath65 the original data @xmath60 and the update @xmath61 : @xmath66 where @xmath67 are first @xmath59 rows of @xmath60 : @xmath68 .",
    "let us now discuss a number of operations required to update a moment s tensor .",
    "we need @xmath69 multiplications to compute each element @xmath70 and @xmath71 multiplications to compute each element @xmath72 .",
    "henceforth update the @xmath2^th^ moment , we need @xmath73 multiplications for each its element at a given multi ",
    "index @xmath74 . on the other hand",
    ", the nave moment recalculation would require the computation of @xmath75 _",
    "i.e._@xmath76 multiplications for each its element at a given multi ",
    "concluding , the theoretical speed ",
    "up factor is @xmath77 , what is significantly large since usually @xmath78 .      using eq  ,",
    "any cumulant can be computed recursively given moment s tensors .",
    "this approach is desirable for data analysis purpose , since there one often requires a series of cumulants up to the given order , see for example @xcite . for this purpose , in algorithm  [ alg : mlc ] we propose the cumulant s calculation recursive scheme .",
    "next in algorithm  [ alg : cup ] we propose the cumulant s update scheme .    in details ,",
    "we propose the following cumulant s calculation / update scheme .",
    "first we calculate or update moments of order @xmath79 _ i.e._@xmath80 , further given moments , we calculate cumulants of order @xmath81 using eq .  .",
    "the scheme is presented in algorithm  [ alg : mlc ] .",
    "number of multiplications , required to compute the @xmath2^th^ cumulant would be : @xmath82 the first term of the sum is the number of multiplications required to compute the @xmath2^th^ moment s tensor and the second term of the sum is the number of multiplications required to calculate products of lower order cumulants , see second term of rhs of eq .  .",
    "since @xmath83 , if we compute a series of cumulants of order @xmath84 the number of multiplications required to compute the @xmath2^th^ cumulant would be dominant .",
    "the cumulant s update scheme that is presented in algorithm  [ alg : cup ] would require approximately @xmath85 multiplications to update the @xmath2^th^ cumulant . here",
    "also if we compute a series of cumulants of order @xmath84 , the number of multiplications required to update the @xmath2^th^ cumulant would be dominant .    * input *  moment tensors @xmath86 , such that @xmath87 .",
    "* output *  cumulant tensors @xmath88 , such that @xmath89 .",
    "@xmath90 @xmath91 } , \\ldots , p_{[1,r_1 ] } ) , \\ldots ,           i^*_{\\sigma } = ( p_{[\\sigma,1 ] } , \\ldots , p_{[\\sigma , r_{\\sigma}]}),$ ] @xmath92 , @xmath93 .",
    "@xmath94 @xmath95 @xmath96 .    * input *  data @xmath97 moment tensors  @xmath98 .",
    "* output *  cumulant tensors @xmath99 , such that @xmath100 .",
    "@xmath101}$ ] @xmath102 @xmath103      the speed  up of cumulant s update in compare with the nave approach , where moments are recalculated , is roughly @xmath104 , since in our case @xmath105 .    to verify this observation ,",
    "we have implemented the cumulants update algorithm and nave cumulants recalculation algorithm in julia programming language @xcite and executed it on one core of intel(r ) core(tm ) i7 cpu 3.20ghz . to choose the proper size of computer generated data for tests ,",
    "let us consider the analysis of high frequency financial data such as share s price s of companies recorded each second .",
    "we have @xmath106 records each hour , approximately @xmath107 record each day and approximately @xmath108 records each month .",
    "suppose we have monthly records of @xmath109 companies shares , and want to examine the cumulants update calculated for those data , given the @xmath54 hour , @xmath17 hours , @xmath110 hours and @xmath54 day update .",
    "henceforth original data are @xmath56 , where @xmath111 and @xmath112 , and update is @xmath57 .",
    "next we have calculated a series of cumulants of order @xmath54to @xmath18 results of computational time using the nave algorithm and the update algorithm introduced by authors is presented in figure  [ fig::c ] .",
    "we can conclude , that the cumulant calculation speed  up is of one or two orders of magnitude .",
    "being inspired by the performance of cumulant s update algorithm we are going to use it for the collection of statistics of confidential data .",
    "suppose we have data in the following form @xmath113 .",
    "they are parts of data collection @xmath114 , where @xmath115 .",
    "suppose we need to know cummulats of data @xmath60 for some statistical analysis purpose .",
    "e.g. we want to search for extreme events or outliers",
    ". however each piece of data is held by different agents that not wish to share them . to deal with this problem",
    "we propose the following map reduce scheme , see algorithm  [ alg : map ] .",
    "* input * data  @xmath116 , cumulants order  @xmath2 .",
    "* output *  cumulant tensors @xmath117 .",
    "@xmath118 @xmath119 @xmath120 @xmath121    data are mapped by each agent onto moments , see function map in algorithm  [ alg : map ] .",
    "such moments carry only statistical information about data , and can be shared without the break ao confidentiality .",
    "the @xmath10 agent produces following output @xmath122 $ ] .",
    "suppose we have @xmath123 agents , their moments can be reduced into single moments : @xmath124 } \\ \\ { \\mathcal{m}}_k(\\textbf{x } ) =   \\sum_{j=1}^s\\frac{t_j}{t}{\\mathcal{m}}_k(\\textbf{x}_j).\\ ] ] finally given @xmath125 $ ] we calculate cumulants using algorithm  [ alg : mlc ] .",
    "in this paper the idea of cumulants tensors updates of non  gaussian distributed data is discussed .",
    "we introduced a new algorithm for cumulants updates and show algebraically and numerically that it can be faster by one or two orders of magnitude , while comparing with nave cumulants recalculation .",
    "this algorithm is based on cumulants moments recurrence relation that is discussed in @xcite in details , and the fact that moment tensors are easy to update .",
    "the algorithm can be used everywhere , where data are recorded in real time and cumulants fast update is required .",
    "it can also be used to analyse updates of large data set , hence it concerns the big data problem .",
    "for example it can be used to examine high frequency financial data recorded online .",
    "further we propose the map reduce algorithm that can be used to compute cumulants from non - gaussian distributed confidential data , that are held by different agents .",
    "the algorithm preserves data confidentiality , and can be used for example in extreme events determination .",
    "examples of non ",
    "gaussian distributed confidential data may be : different types of financial data , sales records of priory determined products , industrial data or costs records of some operations .",
    "k.  domino , `` the use of the multi - cumulant tensor analysis for the algorithmic optimisation of investment portfolios , '' _ physica a : statistical mechanics and its applications _ , vol .  467 , pp .  267276 , 2017 .",
    "d.  krzysztof , b.  tomasz , and c.  maurycy , `` the use of copula functions for predictive analysis of correlations between extreme storm tides , '' _ physica a : statistical mechanics and its applications _ , vol .  413 , p.  489497",
    ", 2014 .",
    "j.  bezanson , j.  chen , s.  karpinski , v.  shah , and a.  edelman , `` array operators using multiple dispatch : a design methodology for array implementations in dynamic languages , '' in _ proceedings of acm sigplan international workshop on libraries , languages , and compilers for array programming _ , p.  56",
    ", acm , 2014 ."
  ],
  "abstract_text": [
    "<S> high order cumulants carry information about statistics of non  normally distributed multivariate data . </S>",
    "<S> such cumulants are utilised in extreme events analysis , small target detection or outliers detection . in this work we present a new algorithm , for updating high order cumulant tensors of random multivariate data , if new package of data is recorded . </S>",
    "<S> we show algebraically and numerically , that the proposed algorithm is faster than a nave cumulants recalculation algorithm . for investigated computer generated data </S>",
    "<S> our algorithm appears to be fasten than a nave one by @xmath0 orders of magnitude . </S>",
    "<S> that update algorithm makes the online updates of multivariate data statistics much faster , and can be used for the data streaming analysis .    </S>",
    "<S> further we propose the map reduce algorithm of cumulants calculation , that is based on introduced cumulants updates algorithm . </S>",
    "<S> this map reduce algorithm can be used to collect statistics about multivariate confidential data that are held by many agents , without sharing those data . </S>"
  ]
}
{
  "article_text": [
    "we consider a geometric facility location problem of finding @xmath9 disks whose union covers a set @xmath10 of @xmath0 input points with the minimum cost .",
    "a center of the disk of radius @xmath1 is often modeled as a base station(server ) of transmission radius @xmath1 and the input points as point sensors(clients ) , so we assume the cost of the disk to be @xmath11 for some real value @xmath3 .",
    "the goal is to minimize @xmath12 where the disks @xmath13 covering @xmath10 have radius @xmath14 .",
    "specially , it is equivalent to minimizing the sum of their radii for @xmath15 , and the sum of their areas for @xmath16 .",
    "alt et al .",
    "@xcite presented a number of results on several related problems . among them , we focus on a restricted version in which the centers of the disks are aligned on a fixed line , simply saying @xmath5-axis . when the fixed line is not given but its orientation is fixed , finding the best line that guarantees the minimum coverage turned out to be quite hard even for @xmath15 , thus they gave a ptas approximation algorithm  @xcite .",
    "alt et al .",
    "@xcite presented dynamic programming algorithms for this restricted problem of covering @xmath10 by aligned disks on a fixed line in time @xmath8 for @xmath15 , and in time @xmath6 for any",
    "@xmath7 under any @xmath4 metric for @xmath17 . for @xmath18 metric , they presented an @xmath19-time algorithm .",
    "we present new dynamic programming algorithms running in @xmath8 time for any @xmath7 and any @xmath4 metric , and in @xmath20 time for @xmath18 metric .",
    "note here that the number of disks in the optimal covering is automatically determined in the algorithm .",
    "if one would want to restrict the number of disks used , say as a fixed @xmath21 , then we can find at most @xmath9 disks whose union covers @xmath10 with minimum cost in a similar way .",
    "actually we can find such @xmath9 disks for all @xmath22 in @xmath19 time in total .",
    "[ thm : min ] given a set @xmath10 of @xmath0 points in the plane and a non - decreasing cost function with @xmath3 , we can compute an optimal disks centered on the @xmath5-axis such that their union covers @xmath10 and the sum of their costs is minimized in @xmath8 time for any fixed @xmath4 metric and in @xmath20 time for @xmath18 metric .",
    "[ thm : min_k ] given a set @xmath10 of @xmath0 points in the plane and a non - decreasing cost function with @xmath3 , we can compute a collection of optimal @xmath9 disks for @xmath10 such that @xmath10 is covered by at most @xmath9 disks for any @xmath21 and the sum of the costs of the disks is minimized in @xmath19 time for any fixed @xmath4 metric and in @xmath23 time for @xmath18 metric .",
    "the formal definition of the problem is as follows : given a set @xmath24 of @xmath0 points in the plane , a real value @xmath3 and @xmath4 metric for some @xmath25 , find optimal disks @xmath26 centered on the @xmath5-axis with radii @xmath14 such that their union covers @xmath10 and the sum of their costs @xmath27 is minimized .",
    "as mentioned in  @xcite , we assume that all points in @xmath10 lie above or on the @xmath5-axis and no two points have the same @xmath5-coordinates .",
    "if a point @xmath28 is below the @xmath5-axis , we replace it with a new point @xmath29 mirroring @xmath28 with respect to the @xmath5-axis , then we still have the same optimal covering .",
    "if @xmath28 is directly above @xmath29 , then any disk containing @xmath28 always contains @xmath29 , so we can simply discard @xmath29 from @xmath10 . finally we assume the points of @xmath10 are in general position , i.e. , no three or more points lie on the boundary of a disk centered on the @xmath5-axis .",
    "we also notice that the optimal covering is not unique , so we assign the lexicographic order to such optimal coverings , according to @xmath5-coordinates of their centers .",
    "then we consider only the leftmost optimal covering @xmath30 with centers in increasing order on the @xmath5-axis .    for a while ,",
    "let us consider @xmath4 metric only for @xmath31 .",
    "let @xmath32 denote the boundary of a closed region @xmath33 .",
    "we denote by @xmath34 the highest point(or apex ) of @xmath35 , and by @xmath36 and @xmath37 the left and right intersection points of @xmath35 with the @xmath5-axis , respectively .",
    "let @xmath38 be the union of disks in @xmath39 .",
    "then the following facts hold ; the first one is mentioned also in  @xcite .",
    "[ fact : apex]@xcite for each @xmath40 , the apex @xmath34 of @xmath13 appears on @xmath41 .",
    "let us consider @xmath42 , i.e. , the circular arc of @xmath35 which appears on @xmath41 .",
    "by fact  [ fact : apex ] , @xmath34 must be contained on the arc , so the arc is divided into the left and right subarcs at @xmath34",
    ". then we have the following fact .",
    "[ fact : partition ] for each @xmath40 , @xmath42 must contain either one point of @xmath10 at the apex @xmath34 or two points of @xmath10 , one on the left subarc and the other on the right subarc of @xmath43 .",
    "it is obvious that there must be at least one point of @xmath10 on @xmath42 .",
    "otherwise we can shrink @xmath13 to get a smaller cost until @xmath35 contains some point .",
    "also if one of the left and right arcs has no points , then we can shrink @xmath13 while keeping the point on the one subarc until some point lies either on the apex @xmath34 or on the other subarc containing no points .",
    "this contradicts to the optimality .",
    "furthermore , we can also prove the following fact by a similar argument .",
    "[ fact : noptsatintersect ] for any @xmath44 , there is no point of @xmath10 which lies at the intersection @xmath45 if the intersection exists .    for each @xmath46",
    ", we define @xmath47 as a vertical line between @xmath13 and @xmath48 ; if @xmath13 intersects @xmath48 , then @xmath47 is a vertical line through intersections @xmath49 , otherwise @xmath47 is an arbitrary vertical line in between @xmath37 and @xmath50 . for convenience ,",
    "we define @xmath51 as a vertical line in the left of @xmath52 and @xmath53 as a vertical line in the right of @xmath54 .",
    "then fact  [ fact : noptsatintersect ] implies that no points of @xmath10 lie on @xmath47 for any @xmath55 .",
    "let @xmath56 be the points of @xmath10 lying between @xmath57 and @xmath47 for @xmath58 .",
    "then we know that @xmath59 contains at least one point by fact  [ fact : partition ] , and they are pairwise disjoint and their union is the same as the whole set @xmath10 .",
    "let @xmath60 be the smallest axis - centered disk containing @xmath59 .",
    "clearly @xmath61 is a covering for @xmath10 .",
    "we have the following lemma .",
    "[ lem : partition ] @xmath62 .",
    "since @xmath63 is the optimal covering for @xmath10 , it holds that @xmath64 . by the definition of @xmath59",
    ", we see that @xmath65 for each @xmath46 .",
    "thus @xmath66 . since @xmath67 is a nondecreasing function for @xmath3 , @xmath68 , which completes the lemma .",
    "the above lemma means that there is a partition of @xmath10 into @xmath59 s separated by vertical lines such that the set of the smallest disks containing @xmath59 s is an optimal covering for @xmath10 .",
    "using this lemma , we can derive a fast dynamic programming algorithm .",
    "alt et al .",
    "@xcite defined a _ pinned _ disk(or circle ) as the leftmost smallest axis - centered disks enclosing some fixed subset of points of @xmath10 , so the pinned disk contains at least one point on its boundary .",
    "the disk @xmath60 defined in lemma  [ lem : partition ] is a pinned disk .",
    "it is obvious that the optimal covering @xmath39 is a subset of such pinned disks .    in @xcite ,",
    "the dynamic programming algorithm chooses pinned disks with minimum cost from all @xmath20 pre - computed pinned disks by testing the coverage condition for possible pairs of pinned disks that no other points of @xmath10 lie outside the chosen pair .",
    "investigating such pairs requires at least @xmath69 time .",
    "but lemma  [ lem : partition ] tells us there must be a partition @xmath70 , separated by vertical lines , such that a set of the smallest disks @xmath60 enclosing @xmath59 is indeed an optimal covering for @xmath10 .",
    "thus we simply go through the input points in some linear order , not through the pinned disks , and compute @xmath60 by implicitly using the farthest voronoi diagram to check the coverage condition .",
    "let @xmath71 be an array in which @xmath72 $ ] stores the minimum cost for a subset @xmath73 .",
    "the minimum cost for the whole set @xmath74 will be stored at @xmath75 $ ] .",
    "if we denote by @xmath76 the smallest disk enclosing @xmath77 , then we have the following recurrence relation :    @xmath78=\\begin{cases } 0 & \\text{if $ i > n$},\\\\ \\min_{i\\leq j\\leq n } \\{r^\\alpha(d(\\{p_i,\\ldots , p_j\\ } ) ) + a[j+1 ] \\ } & \\text{if $ 1\\leq i\\leq n$}. \\end{cases}\\ ] ]    the key step is to compute @xmath76 efficiently .",
    "we can do this in amortized @xmath79 time by maintaining the intersection of the @xmath5-axis with the farthest voronoi diagram in a dynamic way . for a fixed @xmath80 , @xmath72 $ ]",
    "is computed in @xmath81 time , so the total time to compute @xmath75 $ ] becomes @xmath8 .",
    "partitions the @xmath5-axis into intervals . here",
    "we consider the @xmath82 metric .",
    "@xmath83 , @xmath84 , @xmath85 , @xmath86 , and @xmath87 has no its interval on @xmath5-axis.,width=377 ]    let us focus on computing @xmath72 $ ] for fixed @xmath88 in what follows .    as in figure  [ fig : fvd ] , the intersection of the farthest voronoi diagram for @xmath89 with the @xmath5-axis partitions the @xmath5-axis into intervals @xmath90 from the left to the right , where @xmath91 is a half - open interval @xmath92 , where @xmath93 and @xmath94 .",
    "each interval @xmath91 is a collection of the points from which the farthest point of @xmath95 is the same .",
    "we denote by @xmath96 the farthest point from any @xmath97 .",
    "then a disk centered at some point @xmath97 and with radius @xmath98 encloses all the points of @xmath95 .",
    "let @xmath99 be the smallest disk enclosing @xmath77 whose center lies in @xmath91 .",
    "we have two cases .",
    "for a case that @xmath100 has one point at its apex , the point is indeed @xmath96 and the center of @xmath99 has the same @xmath5-coordinate as that of @xmath96 . for the other case , @xmath100 should have two points , i.e. , @xmath101 and @xmath96 , so the center of @xmath99 must be on @xmath102 , i.e. , the left endpoint of @xmath91 . in either case",
    ", we can compute @xmath99 and its radius in constant time , provided that the interval set is given .",
    "we store the intervals in any balanced search tree @xmath103 which is able to support the insertion and deletion in @xmath79 time ; refer to  @xcite .",
    "each leaf node of @xmath103 keeps an interval @xmath91 together with @xmath99 and @xmath104 from left to right .",
    "each internal node of @xmath103 stores the minimum one among the radii in the leaves of its subtree .",
    "then the radius stored at the root of @xmath103 is the radius of the smallest disk enclosing @xmath89 .",
    "we can also update the smallest radius in @xmath79 time whenever an interval is inserted or deleted .    for a fixed @xmath80",
    ", we need to evaluate @xmath105 for all @xmath106 to determine @xmath72 $ ] .",
    "we do this by maintaining a set of intervals @xmath107 for @xmath106 incrementally from @xmath108 to @xmath109 . for @xmath108 , @xmath103 consists of one interval @xmath110 for @xmath111 .",
    "we then update @xmath103 by adding @xmath112 one by one from @xmath113 .",
    "we now explain how we update @xmath103 for @xmath114 when @xmath112 is inserted .    we know that the interval @xmath115 for @xmath112 must appear as the new leftmost interval because @xmath112 is the rightmost point among @xmath116",
    "thus , @xmath117 .",
    "when @xmath118 is inserted into @xmath103 , several consecutive intervals from the leftmost , which are completely contained in @xmath118 , should be removed from @xmath103 or some interval which is partially overlapped with @xmath118 should be replaced with a shorter one . to identify such intervals efficiently , we need the following properties on the interval set .    [",
    "lem : interval ] for @xmath89 under any @xmath4 metric , @xmath17 , the interval set @xmath119 has two properties : ( 1 ) if a point of @xmath89 has its interval in the interval set , then the interval is connected , and ( 2 ) @xmath120 , where @xmath121 is the @xmath5-coordinate of the point @xmath122 .",
    "a bisector of two points in @xmath95 under any @xmath4 metric intersects the @xmath5-axis because no two points have the same @xmath5-coordinates .",
    "the bisector is monotone to the @xmath5-axis and the @xmath123-axis  @xcite , so it intersects the @xmath5-axis exactly once .",
    "this fact immediately implies that an interval for any point is either empty or connected . for the second property",
    ", it suffices to show that @xmath124 for any two consecutive intervals @xmath125 and @xmath126 in @xmath127 where @xmath125 is in the left of @xmath126 . consider the half - circle of the smallest disk centered at @xmath128 above the @xmath5-axis .",
    "it passes through @xmath122 and @xmath129 . since the half - circle intersects with the bisector of @xmath122 and @xmath129 exactly once",
    ", @xmath122 should be in the right of @xmath129 along the half - circle .",
    "this means that @xmath124 because the half - circle is monotone to the @xmath5-axis .",
    "we now decide the position of @xmath130 , the right endpoint of @xmath118 .",
    "this is equivalent to finding some interval @xmath91 which will contain @xmath130 after @xmath112 is inserted .",
    "then @xmath130 is defined as the intersection of @xmath91 with the bisector of @xmath112 and @xmath96 . by lemma  [ lem : interval ]",
    ", we can find @xmath91 by scanning the intervals from left to right and checking if it intersects with the bisector of @xmath112 and @xmath96 .",
    "once @xmath91 is found , we ( 1 ) delete the intervals @xmath131 from @xmath103 because they are completely contained in @xmath118 , ( 2 ) insert @xmath118 for @xmath112 into @xmath103 , and ( 3 ) replace(i.e .",
    ", delete then insert ) @xmath91 with @xmath132 .",
    "if some interval is removed from @xmath103 , then it is never inserted again into @xmath103 .",
    "hence , for a fixed @xmath80 , we can compute the smallest disks enclosing @xmath89 for all @xmath106 in @xmath133 time . in other words",
    ", we can compute @xmath72 $ ] in @xmath134 time . as a result",
    ", we can compute @xmath75 $ ] , starting from @xmath135 $ ] , in @xmath8 time in total .",
    "this requires @xmath136 space .",
    "the detailed algorithm is summarized below .",
    "a set @xmath10 of @xmath0 points @xmath74 and @xmath3 .",
    "an optimal covering @xmath137 for @xmath10 , and its coverage cost .",
    "@xmath138 = 0 $ ] .",
    "initialize @xmath103 as one interval @xmath110 for @xmath111 .",
    "initialize @xmath72 = r^\\alpha(d(\\{p_i\\ } ) ) + a[i+1]$ ] .",
    "find the first interval @xmath91 such that the bisector @xmath38 of @xmath112 and @xmath96 intersects @xmath91 by scanning the intervals in @xmath103 from left to right .",
    "+ @xmath139 remove intervals @xmath140 , replace @xmath91 with @xmath132 , and insert @xmath118 in @xmath103 .",
    "let @xmath1 be the radius stored at the roof of @xmath103 , i.e. , @xmath141 .",
    "@xmath72 = \\min(a[i],~r^\\alpha+a[j+1])$ ] record the index @xmath142 at which the minimum is achieved .  @xmath142  @xmath80 reconstruct the optimal covering @xmath39 from the recorded indices . @xmath39 and @xmath75 $ ]    [ [ algorithm - for - l_infty - metric . ] ] algorithm for @xmath18 metric .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    under this metric , the disk is an axis - aligned square .",
    "as before , we consider only the leftmost optimal covering by the lexicographic order .",
    "we can easily see that fact  [ fact : apex ] and fact  [ fact : partition ] also hold for @xmath18 metric if the apex @xmath34 of the disk is defined as the upper and right corner of the disk . to apply lemma  [ lem :",
    "partition ] , we would partition @xmath10 by the vertical lines through the intersection of two consecutive squares ; in this metric they are the vertical lines containing the right sides of the squares . but some points can be on such vertical lines , thus fact  [ fact : noptsatintersect ] does not hold . instead we choose the separation lines as the vertical lines a bit right the right sides of the squares",
    ". then we can easily prove that lemma  [ lem : partition ] still holds .",
    "we now compute @xmath72 $ ] similarly .",
    "the key step is to compute the smallest square @xmath143 enclosing @xmath89 quickly .",
    "this square @xmath143 is determined by two points ; @xmath112 and the highest point of @xmath144 , which can be computed in @xmath145 time if we maintain the highest point during the incremental evaluation .",
    "thus we can compute @xmath72 $ ] in @xmath136 time .",
    "the total time is @xmath20 , which completes the proof of theorem  [ thm : min ] .",
    "[ [ algorithm - for - fixed - k - optimal - disks . ] ] algorithm for fixed @xmath9 optimal disks .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we can also consider the case when the maximum number of disks used to cover @xmath10 is given as a fixed value @xmath22 .",
    "this can be similarly solved by filling a two dimensional table @xmath72[k]$ ] , the minimum cost needed to cover @xmath146 with at most @xmath9 disks , in @xmath147 total time .",
    "actually we can find all optimal coverings for any @xmath22 in the same time .",
    "this completes the proof of theorem  [ thm : min_k ] .",
    "we can consider other disk coverage problems with practical constraints such as the connectivity of the disks .",
    "recently , chambers et al .",
    "@xcite investigated a problem of assigning radii to a given set of points in the plane such that the resulting set of disks is connected and the sum of radii , i.e. , @xmath15 is minimized .",
    "when we bring such connectivity constraint to our problem for @xmath3 , we need to find a `` connected '' set of disks which optimally covers the input points . when @xmath15 , the smallest disk enclosing all points is the optimal coverage .",
    "however , we can easily check for @xmath7 that there are input points such that their optimal coverings consist of infinitely many disks .",
    "thus we should restrict the number of disks used to cover , say @xmath22 .",
    "but we have no idea how hard this problem is for a fixed @xmath9 .",
    "it would be challenging for small @xmath9 such as @xmath148 .",
    "helmut alt , esther  m. arkin , herv brnnimann , jeff erickson , sndor  p. fekete , christian knauer , jonathan lenchner , joseph s.  b. mitchell , and kim whittlesey",
    ". minimum - cost coverage of point sets by disks . in _ proceedings of the twenty - second annual symposium on computational geometry _ , scg 06 , pages 449458 , new york , ny , usa , 2006 .",
    "erin  wolf chambers , sndor  p. fekete , hella - franziska hoffmann , dimitri marinakis , joseph s.  b. mitchell , venkatesh srinivasan , ulrike stege , and sue whitesides .",
    "connecting a set of circles with minimum sum of radii . in _ proceedings of the 12th international conference on algorithms and data structures _",
    ", wads11 , pages 183194 , berlin , heidelberg , 2011 .",
    "springer - verlag ."
  ],
  "abstract_text": [
    "<S> in this paper , we consider a facility location problem to find a minimum - sum coverage of @xmath0 points by disks centered at a fixed line . </S>",
    "<S> the cost of a disk with radius @xmath1 has a form of a non - decreasing function @xmath2 for any @xmath3 . </S>",
    "<S> the goal is to find a set of disks under @xmath4 metric such that the disks are centered on the @xmath5-axis , their union covers the points , and the sum of the cost of the disks is minimized . </S>",
    "<S> alt et al .  </S>",
    "<S> @xcite presented an algorithm running in @xmath6 time for any @xmath7 under any @xmath4 metric . </S>",
    "<S> we present a faster algorithm for this problem running in @xmath8 time for any @xmath7 and any @xmath4 metric . </S>"
  ]
}
{
  "article_text": [
    "all the graphs considered here are finite , undirected , simple and connected .",
    "undefined basic concepts can be found in introductory graph theoretical literature as  @xcite .",
    "let @xmath7 be a graph , the _ open neighborhood _ of a vertex @xmath8 is the set @xmath9 of vertices adjacent to @xmath10 .",
    "each vertex @xmath11 is called a _",
    "neighbor _ of @xmath10 .",
    "the _ closed neighborhood _ of a vertex @xmath8 is the set @xmath12=n(v)\\cup\\{v\\}$ ] .",
    "the open neighborhood of a set @xmath13 of vertices is @xmath14 , while the closed neighborhood of a set @xmath1 is @xmath15=\\cup_{v\\in s } n[v]$ ] .",
    "a set @xmath1 is _ independent _ if no two vertices in @xmath1 are adjacent .",
    "a set @xmath1 is a _ dominating set _ of a graph @xmath2 if @xmath15=v$ ] , that is , for every @xmath8 , either @xmath16 or @xmath17 for some vertex @xmath18 .",
    "a dominating set that is independent is an _ independent dominating _ set .    in  @xcite ,",
    "chellali et al .",
    "define a subset @xmath13 in a graph @xmath2 to be a _",
    "[ j , k]-set _ if for every vertex @xmath19 , @xmath20 , that is every vertex in @xmath21 is adjacent to at least @xmath22 vertices , but not more than @xmath3 vertices in @xmath1 . in  @xcite a similar definition was introduced with the additional condition of independence , and the minimum cardinality of an independent @xmath23$]-set is denoted by _",
    "@xmath24}(g)$]_. note that the existence of such sets is not guaranteed in every graph and a characterization of trees having an independent @xmath0$]-set can be found in  @xcite .    in this paper",
    "we focus on independent @xmath4$]-sets , that is an independent dominating set @xmath1 of a graph @xmath2 such that every vertex @xmath25 has at most two neighbors in @xmath1 .",
    "a number of open problems about this type of domination sets are posed in  @xcite . in section  [ sec : spanning ] we give a necessary condition for a graph @xmath2 to have an independent @xmath4$]-set in terms of its spanning trees , that is an answer to problem 2 .",
    "this necessary condition becomes also sufficient in the class of cactus graphs , that gives a partial answer to problem 1 .",
    "we also study the trees having an independent @xmath4$]-set from a different point of view . in section  [ sec : excellent ] we follow the concept of excellent tree proposed in  @xcite and we adapt it to the environment of our study , providing a characterization of trees such that any vertex belong to an independent @xmath4$]-set , that is not necessarily minimum .",
    "the characterization of trees having an independent @xmath4$]-set of  @xcite does not allow to obtain a polynomial algorithm solving this decision problem , so we devoted section  [ sec : algorithm ] to describe a linear algorithm to decide whether a tree has an independent @xmath4$]-set .",
    "this algorithm can be easily modified to obtain the cardinality of the smallest independent @xmath4$]-set of a tree , therefore we can compute @xmath26}(t)$ ] that solves the part of problem 8 of  @xcite regarding this parameter .",
    "in this section we provide a necessary condition for a graph @xmath2 to have an independent @xmath4$]-set , in terms of its spanning trees , which gives an answer to problem 2 posed in  @xcite .",
    "recall that a _ spanning tree _ of a graph @xmath2 is a subgraph that includes all the vertices of @xmath2 and that is a tree .",
    "in addition we show that this condition is also sufficient in the family of cactus graphs , which gives a partial answer to problem 1 .    to this end",
    "we will need the family @xmath27 of trees having an independent @xmath4$]-set given in theorem 11 of @xcite .",
    "for the sake of completeness we sketch here the construction . as a first step",
    "the family of @xmath28-trees is defined in the following way .",
    "let @xmath29 be a non - trivial tree and let @xmath30 be the unique bipartition of the vertex set .",
    "a tree @xmath29 is called a _ @xmath28-tree _ if every vertex in one of the partite sets has degree at most @xmath31 and such a partite set is called a _",
    "@xmath28-set_. it is clear that if @xmath32 is a @xmath28-set of @xmath29 then @xmath33 is an independent @xmath4$]-set of @xmath29 .",
    "finally theorem 11 of  @xcite states that a non - trivial tree @xmath29 admits an independent @xmath4$]-set if and only if @xmath29 can be obtained from a family @xmath34 of @xmath28-trees adding @xmath35 edges where each edge joins vertices in two different sets @xmath36 and @xmath37 .",
    "we call the family of trees @xmath38 a _ generating family _ of @xmath29 and therefore trees in family @xmath27 are those trees having a generating family",
    ". we would like to point out that the proof of theorem 11 of  @xcite also shows the correspondence between generating families and independent @xmath4$]-sets in a tree @xmath29 .",
    "we recall this relationship in the following definition .",
    "let @xmath39 .",
    "the independent @xmath4$]-set associated to the generating family @xmath38 is @xmath40 , where @xmath41 is the bipartition into a @xmath28-set @xmath36 and an independent @xmath4$]-set @xmath42 .",
    "conversely the generating family associated to an independent @xmath4$]-set @xmath1 is the family of trees of the forest resulting of removing from @xmath29 all edges with both vertices in @xmath43 .",
    "the necessary condition for a graph @xmath2 to have an independent @xmath4$]-set is shown in the following result .",
    "[ thm : spanning trees ] let @xmath2 be a graph having an independent @xmath4$]-set .",
    "then there exists a spanning tree @xmath29 of @xmath2 satisfying @xmath44 and having a generating family @xmath45 with @xmath46 the bipartition into a @xmath28-set and an independent @xmath4$]-set respectively , such that any edge @xmath47 satisfies either @xmath48 ( type a edge ) or there exists @xmath49 such that @xmath50 is a leaf of @xmath51 , @xmath52 and @xmath53 ( type b edge ) .",
    "let @xmath2 be a graph having an independent @xmath4$]-set @xmath1 .",
    "if @xmath2 is a tree the conditions are trivially true .",
    "now suppose that @xmath2 has an induced cycle @xmath54 .",
    "if there exists an edge @xmath55 in @xmath54 with both vertices in @xmath56 then pick @xmath57 ( we call this case a ) , if each edge of @xmath54 has exactly one vertex in @xmath1 , take @xmath58 any edge of @xmath54 ( we call this case b ) .",
    "we define @xmath59 , if it is not a tree it has an induced cycle @xmath60 .",
    "again either there is an edge @xmath61 in @xmath60 such that @xmath62 ( case a ) or every edge of @xmath60 has exactly one vertex in @xmath1 ( case b ) . for the second case",
    "although @xmath54 and @xmath60 could share same edges , we can take @xmath63 an edge of @xmath60 which is not an edge of @xmath54 , because @xmath60 is an induced cycle in @xmath64 however vertices of @xmath54 do not induce a cycle in @xmath64 .",
    "we repeat this process until we obtain @xmath65 a spanning tree of @xmath2 , where each edge @xmath66 belong to @xmath67 an induced cycle of @xmath68 and satisfies either @xmath69 or @xmath70 is not an edge of any cycle @xmath71 and every edge in @xmath67 has exactly one vertex in @xmath1 .",
    "now note that @xmath1 is also an independent @xmath4$]-set of @xmath72 , because removing edges from @xmath2 does not affect independence and both cases a and b ensure that @xmath1 dominates @xmath72 .",
    "so @xmath73 and we can take @xmath74 the generating family of @xmath72 associated to @xmath1 . if edge @xmath66 is in case a then @xmath75 ( type a edge ) . if @xmath66 is in case b , then every edge of @xmath67 has exactly one vertex in @xmath1 and note that no other edge of @xmath67 will be removed in successive steps of the construction of @xmath72 , so",
    "@xmath76 are connected in @xmath72 by the path @xmath77 , where each edge has one vertex in @xmath1 .",
    "this means that @xmath76 are in the same connected component of the forest resulting of removing from @xmath72 all edges with no vertex in @xmath1 , or equivalently that there exists @xmath78 with @xmath79 .",
    "moreover @xmath80 and @xmath81 gives @xmath82 and @xmath83 .",
    "finally both neighbors of @xmath84 in the cycle @xmath67 belong to @xmath1 , so if @xmath84 has any other neighbor @xmath85 in @xmath2 , which is not in @xmath67 it is clear that @xmath86 so edge @xmath87 joints two different trees of the generating family @xmath74 .",
    "that means @xmath84 is a leaf of @xmath88 ( type b edge ) .",
    "the following example shows that the converse of theorem  [ thm : spanning trees ] is not true in general .",
    "the graph in figure  [ fig : no_spanning ] has no independent @xmath4$]-set because all black vertices should be in such set , so vertex @xmath10 would have three neighbors in that set .",
    "however the set of black vertices is an independent @xmath4$]-set of the tree in figure  [ fig : spanning ] , which is the spanning tree of @xmath2 resulting from removing edges @xmath58 and @xmath63 , which are type b.    the key point of this counterexample is that the spanning tree is obtained from @xmath2 removing some edges such that at least one of them belong to two induced cycles , in that example the edge @xmath58 .",
    "this idea leads us to the family of cactus graphs where the necessary condition to have an independent @xmath4$]-set showed in theorem  [ thm : spanning trees ] is also sufficient . recall that @xmath2 is a _ cactus graph _ if every edge of @xmath2 belongs to at most one cycle .",
    "equivalently @xmath2 is a cactus graph if and only if every block ( maximal connected induced subgraph with no cut vertices ) is a cycle or the path @xmath89 .",
    "[ thm : cactus graphs ] let @xmath2 be a cactus graph",
    ". then @xmath2 has an independent @xmath4$]-set if and only if there exists a spanning tree @xmath29 of @xmath2 satisfying @xmath44 and having a generating family @xmath45 with @xmath46 the bipartition into a @xmath28-set and an independent @xmath4$]-set respectively , such that any edge @xmath47 satisfies either @xmath48 ( type a edge ) or there exists @xmath49 with @xmath50 a leaf of @xmath51 , @xmath52 and @xmath53 ( type b edge ) .    we just need to prove the sufficiency .",
    "let @xmath90 be the independent @xmath4$]-set of @xmath29 associated to the generating family @xmath91 and let us see that it is also an independent @xmath4$]-set of @xmath2 .",
    "the graph @xmath2 is obtained from the spanning tree @xmath29 adding some edges , so @xmath1 is also a dominating set of @xmath2 .",
    "moreover , by hypothesis no added edge has both vertices in @xmath1 , therefore @xmath1 is independent in @xmath2 .",
    "finally we need to show that @xmath1 is a @xmath4$]-set of @xmath2 .",
    "let @xmath92 , if every edge of @xmath2 incident to @xmath93 is an edge of @xmath29 , then @xmath94 and @xmath93 has at most two neighbors in @xmath1 .",
    "on the contrary suppose that the set of edges incident with @xmath93 which are in @xmath95 is non - empty and denote those edges as @xmath96 with @xmath97 .",
    "using that @xmath2 is a cactus graph and that removing theses edges does not disconnect the graph , each edge @xmath70 belong to exactly one cycle @xmath98 in @xmath2 , with @xmath99 for @xmath100 , and @xmath93 is a common vertex of all of them ( see figure  [ fig : cactus1 ] ) .",
    "firstly suppose that all edges @xmath96 are of type a , that is @xmath101 .",
    "then the neighbors of @xmath93 in @xmath2 other than @xmath102 , are also neighbors on @xmath93 in @xmath29 so it is clear that @xmath93 has at most two neighbors in @xmath2 belonging to @xmath1 . on the other hand suppose , without loss of generality , that @xmath103 is type b , so there exists @xmath104 such that @xmath93 is a leaf of @xmath105 , @xmath106 and @xmath107 .",
    "therefore @xmath93 has just one neighbor in @xmath105 , say @xmath108 , which is in @xmath109 , and both @xmath110 are neighbors of @xmath93 in @xmath2 belonging to @xmath1 .",
    "let @xmath111 , if @xmath112 then @xmath113 belongs to a tree @xmath114 , the edge @xmath115 connects two different trees of the forest @xmath34 , and by construction @xmath116 .",
    "finally if @xmath117 , then @xmath118 , say @xmath119 .",
    "vertex @xmath120 belongs to cycle @xmath121 in @xmath2 , different from cycle @xmath60 containing @xmath122 , and we denote the neighbor of @xmath93 in @xmath121 , other than @xmath120 , by @xmath123 . using that @xmath93 is a leaf of @xmath124 with neighbor @xmath108 , which is a vertex of cycle @xmath60 , we obtain that @xmath125 , the edge @xmath126 does not belong to @xmath124 and thus @xmath127 .",
    "so @xmath123 belongs to a tree of the forest @xmath34 different form @xmath124 and @xmath120 belongs to the same one .",
    "therefore @xmath120 does not belong to @xmath128 ( see figure  [ fig : cactus2 ] ) .",
    "this means that edge @xmath129 must be of type a and @xmath130 as desired .",
    "we recall now the concept of _ excellent graph _ introduced in @xcite . for a graph @xmath7 ,",
    "let @xmath131 denote a property of subsets @xmath13 .",
    "we call a set @xmath1 with property @xmath131 having @xmath132minimum , maximum@xmath133 cardinality @xmath134 a @xmath134-set .",
    "a vertex is called _",
    "@xmath135-good _ if it is contained in some @xmath134-set .",
    "a graph g is called _ @xmath135-excellent _ if every vertex in @xmath136 is @xmath135-good .",
    "for instance @xmath2 is @xmath137-excellent if every vertex of @xmath2 belong to a minimum dominating set .",
    "this concept has been studied in the family of trees for different domination - type properties such as domination , irredundance and independence  @xcite , restrained domination  @xcite and total domination  @xcite .",
    "we define a similar concept for the independent @xmath4$]-domination and having in mind that the existence of such sets is a key problem so we relax the conditions in the following way .",
    "a graph @xmath2 is _ [ 1,2]-semiexcellent _ if every vertex belongs to some independent @xmath4$]-set , not necessarily minimum .",
    "our target is to characterize the family of trees that are @xmath4$]-semiexcellent and to this end we will again use the concept of @xmath28-tree and the family @xmath27 described in section  [ sec : spanning ] .",
    "firstly we show a necessary condition for a vertex in order to belong to some independent @xmath4$]-set .",
    "[ lem : oneleaf ] let @xmath29 be a tree and let @xmath138 .",
    "suppose that there exists an independent @xmath4$]-set @xmath139 containing @xmath10 , then for each @xmath11 , the set @xmath140 contains at most one leaf .",
    "if @xmath139 is an independent @xmath4$]-set containing @xmath10 and @xmath11 , it is clear that @xmath141 and any leaf in @xmath142 must belong to @xmath139 in order to be dominated , so @xmath142 can have at most one leaf because @xmath50 has at most two neighbors in @xmath139 .",
    "the following lemma shows that this condition is also sufficient in the family of @xmath28-trees .",
    "[ lem : p2-trees ]    let @xmath29 be a @xmath28-tree with @xmath30 the bipartition into a @xmath28-set @xmath32 and an independent @xmath4$]-set @xmath33 .",
    "let @xmath143 be such that any @xmath144 satisfies that @xmath145 contains at most one leaf .",
    "then @xmath146 is an independent @xmath4$]-set of @xmath29 containing @xmath93 , where @xmath147 is the set of leaves at distance two of @xmath93 .",
    "firstly the set @xmath146 is independent because @xmath33 is independent and all neighbors of vertices in @xmath148 belong to @xmath149 .",
    "let us see that @xmath150 is a @xmath4$]-set .",
    "let @xmath144 , it is clear that @xmath151 is dominated by @xmath93 and using the hypothesis that @xmath152 has at most one leaf , there is at most one vertex in @xmath147 that dominates @xmath151 .    on the other hand",
    "if @xmath153 and @xmath154 for some @xmath144 , then it is not a leaf so it has degree 2 , because @xmath32 is @xmath28-set .",
    "therefore @xmath85 has a unique neighbor @xmath155 and it satisfies @xmath156 ( see figure  [ ex : p2tress ] ) .",
    "finally let @xmath157 be such that @xmath158 $ ] for any @xmath144 .",
    "then @xmath159 has no neighbors in @xmath148 and it has at least one and at most two neighbors in @xmath160 .",
    "and white vertices are not in @xmath150.,scaledwidth=35.0% ]    recall that a _ strong support _",
    "vertex is a vertex having at least two leaves in its neighborhood . in the family of @xmath28-trees",
    "it is also possible to obtain an independent @xmath4$]-set that skips a fixed pair of adjacent vertices , under the condition of having no strong support vertices .",
    "[ lem : pair ] let @xmath29 be a @xmath28-tree with no strong support vertices , @xmath30 the bipartition into a @xmath28-set @xmath32 and an independent @xmath4$]-set @xmath33 , and let @xmath161 be two adjacent vertices such that none of them is a leaf , @xmath143 and @xmath162",
    ". then there exists an independent @xmath4$]-set @xmath163 such that @xmath164 and @xmath93 has just one neighbor in @xmath163 .",
    "let @xmath29 be a @xmath28-tree with no strong support vertices , @xmath30 the bipartition into a @xmath28-set @xmath32 and an independent @xmath4$]-set @xmath33 and let @xmath161 be two adjacent non - leaves vertices , @xmath143 and @xmath162 . using that @xmath151 is not a leaf , the set @xmath152 is non - empty .",
    "firstly suppose that @xmath165 contains a leaf @xmath166 , that is unique by hypothesis .",
    "then @xmath167 is an independent @xmath4$]-set of @xmath29 with @xmath164 and such that @xmath93 has just one neighbor in it ( see figure  [ fig : pair_a ] ) .    on the contrary",
    "suppose that @xmath165 contains no leaves and take any vertex @xmath168 .",
    "then @xmath166 has degree @xmath31 and let @xmath122 be a neighbor of @xmath166 other than @xmath151",
    ". if @xmath122 is a leaf or if @xmath169 contains no leaves , then define @xmath170 ( see figure  [ fig : pair_b ] ) .",
    "if @xmath169 contains a ( unique ) leaf , say @xmath171 , then define @xmath172 ( see figure  [ fig : pair_c ] ) . in any case @xmath163",
    "is an independent @xmath4$]-set of @xmath29 with @xmath164 and such that @xmath93 has just one neighbor in it .",
    "the last lemma of this section shows that having no strong support vertices is a sufficient condition for a tree for belonging to the family @xmath173 .",
    "[ lem : f2-tress ] let @xmath29 be a tree with no strong support vertices , then @xmath44 .",
    "we root the tree @xmath29 in a leaf @xmath10 and we label the vertices of @xmath29 as @xmath32 or @xmath33 with the following rules .",
    "first of all we label @xmath10 as @xmath32 and its unique neighbor as @xmath33 .",
    "all the children of any vertex labeled as @xmath33 are labeled as @xmath32 . if a vertex with label @xmath32 has just one child we label it as @xmath33 . if a vertex with label @xmath32 has two or more children and ( just ) one of them is a leaf , we label this leaf as @xmath33 and the rest of children as @xmath32 and finally if a vertex with label @xmath32 has two or more children and none of them is a leaf , we label one of the children as @xmath33 and the rest of children as @xmath32 .    removing all edges of @xmath29 between two vertices labeled",
    "as @xmath32 gives a forest @xmath174 and note that each @xmath175 is a @xmath28-tree where vertices labeled as @xmath32 are a @xmath28-set and vertices labeled as @xmath33 are an independent @xmath4$]-set .",
    "so we obtain a generating family for @xmath29 and @xmath44 as desired .",
    "finally we show the characterization of @xmath4$]-semiexcellent trees , as trees having no strong support vertices with the exception of the path @xmath176 .",
    "let @xmath29 be a tree , @xmath177 .",
    "then @xmath29 is @xmath4$]-semiexcellent if and only if @xmath29 has no strong support vertices .",
    "suppose that @xmath29 is @xmath4$]-semiexcellent and that @xmath138 is a strong support vertex of @xmath29 .",
    "let @xmath178 be two leaves of @xmath29 . using that @xmath177",
    ", there exists @xmath179 . by hypothesis",
    "there exists an independent @xmath4$]-set @xmath180 containing @xmath113 and by lemma  [ lem : oneleaf ] the set @xmath181 contains at most one leaf , that contradicts the fact @xmath182 .",
    "conversely suppose that @xmath29 has no strong support vertices and let @xmath138 . by lemma  [ lem : f2-tress ] , @xmath44",
    "so let @xmath45 be a generating family for @xmath29 .",
    "if @xmath183 for some @xmath184 then @xmath185 , that is an independent @xmath4$]-set of @xmath29 .",
    "so suppose that @xmath186 and without loss of generality consider the case @xmath187 .",
    "we are going to construct an independent @xmath4$]-set of @xmath29 containing @xmath93 .",
    "by lemma  [ lem : p2-trees ] , the set @xmath188 is an independent @xmath4$]-set if @xmath189 , so it is clear that @xmath190 is independent and dominates @xmath29 .",
    "if @xmath191 is a @xmath4$]-set we are done . on the contrary",
    "if there exits @xmath192 with more than two neighbors in @xmath191 it must be ( w.l.o.g . ) @xmath193 with exactly one neighbor in @xmath150 ( by definition of the generating family @xmath91 ) and two neighbors in @xmath194 , at least one of them , say @xmath120 , is not a leaf of @xmath29 because @xmath29 has no strong support vertices . using lemma  [ lem : pair ] , let @xmath195 be an independent @xmath4$]-set of @xmath196 such that @xmath197 and @xmath171 is dominated just once .",
    "now we call @xmath198 .",
    "again @xmath199 is an independent dominating set of @xmath29 , if it is also a @xmath4$]-set then we are done .",
    "if it is not the case , there exists @xmath200 ( w.l.o.g . ) with exactly one neighbor in @xmath201 ( again by definition of the generating family @xmath91 ) and two neighbors in @xmath202 .",
    "we repeat the same construction in @xmath203 as in @xmath196 ( see figure  [ fig : excellent ] ) . iterating the process as many times as necessary we finally obtain @xmath204 which is an independent @xmath4$]-set of @xmath29 containing @xmath93 .",
    "$ ] -set containing @xmath93.,scaledwidth=40.0% ]",
    "the characterization of trees having an independent @xmath4$]-set shown in theorem 11 of  @xcite does not allow to devise a polynomial algorithm to solve this decision problem .",
    "in this final section we focus on providing such algorithm for this graph class .",
    "in addition our algorithm can be easily modified to obtain the cardinality of the smallest independent @xmath4$]-set of a tree , which provides the answer to problem 8 of  @xcite regarding the parameter @xmath26}(t)$ ] .",
    "we begin with the definition of the next labeling of vertices .",
    "let @xmath2 be a graph with at least two vertices , and let @xmath205 .",
    "an independent vertex set @xmath206 is of _ _",
    "t__ype i for @xmath10 if every vertex @xmath207 has at least one and at most two vertices in @xmath1 and @xmath10 is either in @xmath1 or it is not in @xmath1 and has zero , one or two neighbors in @xmath1 .",
    "we denote @xmath208 the family of type i sets for @xmath10 in @xmath2 .",
    "given @xmath209 we define the following labeling of @xmath10 .",
    "@xmath210\\cap s=\\emptyset \\text { and every neighbor of $ v$ has exactly one } \\\\ & \\text{neighbor in } s \\\\",
    "-2 & \\text{if } n[v]\\cap s=\\emptyset \\text { and there exists a neighbor of $ v$ having } \\\\ & \\text{two neighbors in } s\\\\ \\end{array } \\right . $ ]    [ rmk : labeling ] note that any independent @xmath4$]-set of @xmath2 is of type i for every vertex in @xmath2 .",
    "it is also clear from the definition that if there exists @xmath211 with @xmath212 then @xmath213 satisfies @xmath209 and @xmath214 .",
    "[ lem : star ] let @xmath215 be the star with @xmath216 leaves and center @xmath10 . if @xmath217 then the unique type i set for @xmath10 is @xmath218 and @xmath214 .",
    "if @xmath219 then @xmath218 and @xmath220 are the unique type i sets for @xmath10 and they satisfy @xmath214 , @xmath221 .",
    "if @xmath222 then @xmath218 and @xmath223 are the unique type i sets for @xmath10 and they satisfy @xmath214 , @xmath224 .      [ lem : onevertex ] let @xmath2 be a graph with at least two vertices and let @xmath205 .",
    "let @xmath225 be the graph obtained from @xmath2 and a new vertex @xmath226 by adding edge @xmath227 and let @xmath228",
    ". then    1 .",
    "@xmath229 and @xmath230 if and only if @xmath231 and @xmath221 2 .",
    "@xmath229 and @xmath232 if and only if @xmath231 and @xmath224 3 .",
    "@xmath229 and @xmath233 if and only if @xmath234 , @xmath209 and @xmath235 4 .",
    "@xmath229 and @xmath236 if and only if @xmath231 and @xmath237 .",
    "in addition if there exists @xmath211 with @xmath238 then @xmath213 satisfies @xmath239 with @xmath240 .",
    "now suppose that @xmath229 and @xmath233 then @xmath241 and we define @xmath242 which is a type i set for @xmath10 in @xmath2 . if @xmath10 has two neighbors in @xmath243 then @xmath244 , if @xmath226 is the unique neighbor of @xmath10 in @xmath243 and every other neighbor of @xmath10 in @xmath2 is dominated just one by vertices in @xmath243 then @xmath245 and if @xmath226 is the unique neighbor of @xmath10 in @xmath243 and there exists a neighbor of @xmath10 in @xmath2 which is dominated twice by vertices in @xmath243 then @xmath246 .",
    "the converse is trivial using the definition of type i set .",
    "[ rmk : onevertex ] in addition to characterize sets @xmath229 , lemma  [ lem : onevertex ] also ensures that from any @xmath209 can be obtained at least one @xmath229 and it shows the labeling @xmath247 in each case .",
    "1 .   @xmath251 and @xmath252 if and only if @xmath253 , @xmath209 , @xmath229 and @xmath254 .",
    "2 .   @xmath251 and @xmath255 if and only if @xmath253 , @xmath209 , @xmath229 and @xmath256 .",
    "3 .   @xmath251 and @xmath257 if and only if @xmath253 , @xmath209 , @xmath229 and @xmath258 . +",
    "furthermore suppose that there exists @xmath259 with @xmath260 then @xmath261 , where @xmath209 and @xmath262 , satisfies @xmath251 and @xmath257 .",
    "4 .   @xmath251 and @xmath263 if and only if @xmath253 , @xmath209 , @xmath229 and @xmath264 .",
    "furthermore suppose that there exists @xmath211 with @xmath238 then @xmath265 , where @xmath229 and @xmath266 , satisfies @xmath251 and @xmath263 .",
    "5 .   @xmath251 and @xmath267 if and only if @xmath253 , @xmath209 , @xmath229 and @xmath268 .",
    "furthermore suppose that there exists @xmath211 with @xmath238 then the set @xmath265 , where @xmath229 and @xmath236 , satisfies @xmath251 and @xmath267 .",
    "the sufficient implication of each equivalence is trivial using the definition of type i set so we just prove the necessity . to this end",
    "let @xmath251 and denote by @xmath269 and @xmath270 . using that each graph has at least two vertices , @xmath1 and @xmath243 are non - empty sets and it is clear that @xmath209 and @xmath229 .    1 .   if @xmath252 then @xmath226 has no neighbors in @xmath271 so @xmath272 and @xmath273 .",
    "if @xmath10 has just one neighbor @xmath85 in @xmath271 then @xmath274 and @xmath275 and using that @xmath252 there exists a neighbor of @xmath226 in @xmath225 with two neighbors in @xmath271 so @xmath230 . if @xmath10 has two neighbors in @xmath271 then both of them belong to @xmath276 and @xmath277 . moreover the neighbors of @xmath226 in @xmath225 could have one or two neighbors in @xmath271 , so @xmath278 .",
    "if @xmath255 then by hypothesis every neighbor of @xmath226 in @xmath250 has just one neighbor in @xmath271 and this easily implies that @xmath275 and @xmath232 .",
    "3 .   if @xmath257 then @xmath241",
    "so @xmath233 . if @xmath10 has two neighbors in @xmath271 then @xmath275 and if @xmath226 is the unique neighbor of @xmath10 in @xmath271 then @xmath279 .",
    "the additional implication comes from remark  [ rmk : labeling ] .",
    "4 .   if @xmath263 then there are two cases . if @xmath280 then @xmath281 and @xmath278 and if @xmath272 then @xmath282 and @xmath236 .",
    "the additional implication comes from remark  [ rmk : labeling ] .",
    "5 .   if @xmath267 then there are two cases . if @xmath280 then @xmath281 and @xmath236 and if @xmath272 then @xmath283 and @xmath284 .",
    "the additional implication comes from remark  [ rmk : labeling ] .",
    "[ rmk : twographs ] in addition to characterize sets @xmath251 , lemma  [ lem : twographs ] also ensures that from sets @xmath209 and @xmath229 can be obtained at least one @xmath251 if and only if @xmath285 and it shows @xmath286 in each case .",
    "finally we present a linear algorithm that decides whether or not a tree @xmath29 has an independent @xmath4$]-set .",
    "the algorithm defines an order in the set of non - leaf vertices and proceeds bottom up in the tree .",
    "` algorithm tree - independent [ 1,2]-set ` + ` input : a tree t with n internal vertices . `",
    "+ ` output : whether or not t admits an independent [ 1,2]-set . `",
    "+ ` choose a non - leaf vertex as the root ; ` + ` label the rest of vertices with different labels , and in such a way ` + ` that if u is a descendant of v then i(u)<i(v ) ; ` + ` initialize a list for each vertex as r(u):=\\{\\ } ; ` + ` for i:=1 to n do ` + ` let v be the vertex with label i , i.e. i(v)=i ; ` + ` if v is a support vertex then , apply lemma  [ lem : star ] to the star with v ` + ` as center and its descendant leaves to actualize r(v ) ; ` + ` for each non - leaf descendant u of v ` + ` apply lemma 7 and actualize r(v ) ; ` + ` if v is not a support vertex then ` + ` pick one of its descendant u and apply lemma 6 for ` + ` actualizing r(v ) ; ` + ` for the rest of its descendant u of v ` + ` apply lemma 7 and actualize r(v ) ; ` + ` if r(v)=\\emptyset then answer no and end ; ` + ` od ; ` + ` if r(v)\\cap \\{0,1,2\\}= \\emptyset for the root v then answer no ` + ` otherwise answer yes ; ` + ` end . `",
    "+      at any moment of the execution , the list @xmath289 associated to the non - leaf vertex @xmath10 contains all the possible labels @xmath290 where @xmath291 and @xmath292 is the subtree rooted in @xmath10 .",
    "note that if @xmath1 is an independent @xmath4$]-set of @xmath29 then @xmath293 for each non - leaf vertex @xmath10 , so if @xmath294 for some @xmath10 then @xmath29 has no independent @xmath4$]-set .",
    "moreover at the end , there is a independent @xmath4$]-set if and only if @xmath295 where @xmath10 is the root .    regarding the complexity ,",
    "the initial part is done in linear time . in the rest of the algorithm , every vertex different from the root and the leaves is considered twice and the operations over it are done in constant time .",
    "hence , the final complexity is in @xmath288 .",
    "although we have preferred to introduce the algorithm in its present form for the sake of simplicity , it would not be difficult to modify it in order to keep track of the minimum cardinality of the possible sets associated to a label in any vertex .",
    "then we obtain a linear algorithm for computing the parameter @xmath26}(t)$ ] , solving part of problem 8 posed in  @xcite .    in the following examples we show a tree having an independent @xmath4$]-set and another one that has no such set .",
    "the vertex indexes appear inside the circles .",
    "figure  [ fig : finalstep_yes ] shows a tree and the final assignment of labels to every non - leaf vertex .",
    "the root @xmath10 satisfies @xmath296 , so the tree has an independent @xmath4$]-set . on the other hand in figure  [ fig : finalstep_no ] we show a different tree such that the root has no suitable label at the end of the algorithm , therefore the tree has no independent @xmath4$]-set ."
  ],
  "abstract_text": [
    "<S> an independent @xmath0$]-set @xmath1 in a graph @xmath2 is a dominating set which is independent and such that every vertex not in @xmath1 has at most @xmath3 neighbors in it . </S>",
    "<S> the existence of such sets is not guaranteed in every graph and trees having an independent @xmath0$]-set have been characterized . in this paper </S>",
    "<S> we solve some problems previously posed by other authors about independent @xmath4$]-sets . </S>",
    "<S> we provide a necessary condition for a graph to have an independent @xmath4$]-set , in terms of spanning trees and we prove that this condition is also sufficient for cactus graphs . </S>",
    "<S> we follow the concept of excellent tree and characterize the family of trees such that any vertex belong to some independent @xmath4$]-set . </S>",
    "<S> finally we describe a linear algorithm to decide whether a tree has an independent @xmath4$]-set . </S>",
    "<S> such algorithm can be easily modified to obtain the cardinality of the smallest independent @xmath4$]-set of a tree .    </S>",
    "<S> domination , independence , spanning trees , excellent trees . </S>",
    "<S> + @xmath5 @xmath6 </S>"
  ]
}
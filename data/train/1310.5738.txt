{
  "article_text": [
    "we aim to do inference about some function @xmath0 with domain ( input space ) @xmath1 .",
    "@xmath2 is a @xmath3-dimensional input space , where each individual dimension is either bounded real or categorical , that is , @xmath4 is either @xmath5 \\subset { \\mathds{r}}$ ] ( with lower and upper bounds @xmath6 and @xmath7 , respectively ) or @xmath8 .    associated with @xmath1 ,",
    "there is a dag structure @xmath9 , whose vertices are the dimensions @xmath10 .",
    "@xmath1 will be restricted by @xmath9 : if vertex @xmath11 has children under @xmath9 , @xmath4 must be categorical .",
    "@xmath9 is also used to specify when each input is _ active _ ( that is , relevant to inference about @xmath0 ) . in particular , we assume each input dimension is only active under some instantiations of its ancestor dimensions in @xmath9 . more precisely , we define @xmath3 functions @xmath12 , for @xmath13 , and where @xmath14 .",
    "we take @xmath15 where @xmath16 are the ancestor vertices of @xmath11 in @xmath9 , such that @xmath17 is true only for appropriate values of those entries of @xmath18 corresponding to ancestors of @xmath11 in @xmath9 .",
    "we say @xmath11 is active for @xmath18 iff @xmath17 .",
    "our aim is to specify a kernel for @xmath1 , _",
    "i.e. _ , a positive semi - definite function @xmath19",
    ". we will first specify an individual kernel for each input dimension , _",
    "i.e. _ , a positive semi - definite function @xmath20 .",
    "@xmath21 can then be taken as either a sum , @xmath22 product , @xmath23 or any other permitted combination , of these individual kernels .",
    "note that each individual kernel @xmath24 will depend on an input vector @xmath18 only through dependence on @xmath25 and @xmath17 , @xmath26 that is , @xmath27 for @xmath28 will influence @xmath29 only if @xmath30 , and only by affecting whether @xmath11 is active .",
    "below we will construct pseudometrics @xmath31 : that is , @xmath32 satisfies the requirements of a metric aside from the identity of indiscernibles . as for @xmath24 , these pseudometrics will depend on an input vector @xmath18 only through dependence on both @xmath25 and @xmath17 .",
    "@xmath33 will be designed to provide an intuitive measure of how different @xmath34 is from @xmath35 . for each @xmath11",
    ", we will then construct a ( pseudo-)isometry @xmath36 from @xmath1 to a euclidean space ( @xmath37 for bounded real parameters , and @xmath38 for categorical - valued parameters with @xmath39 choices ) .",
    "that is , denoting the euclidean metric on the appropriate space as @xmath40 , @xmath36 will be such that @xmath41 for all @xmath42 .",
    "we can then use our transformed inputs , @xmath43 , within any standard euclidean kernel @xmath44 .",
    "we ll make this explicit in proposition [ prop : psd_if_isometry ] .",
    "[ def : psd_fun_euclid ] a function @xmath45 is _ a positive semi - definite covariance function over euclidean space _ if @xmath46 , defined by @xmath47 is positive semi - definite for any @xmath48 .",
    "a popular example of such a @xmath44 is the exponentiated quadratic , for which @xmath49 ; another popular choice is the rational quadratic , for which @xmath50 .",
    "let @xmath44 be a positive semi - definite covariance function over euclidean space and let @xmath32 satisfy equation [ eqn : d_i ] .",
    "then , @xmath51 , defined by @xmath52 is a positive semi - definite covariance function over input space @xmath1 .",
    "[ prop : psd_if_isometry ]    we need to show that for any @xmath53 , @xmath46 defined by @xmath54 where @xmath55 and @xmath56 are elements of @xmath57 .",
    "then , by assumption that @xmath44 is a positive semi - definite covariance function over euclidean space , @xmath58 is positive semi - definite .",
    "we ll now define pseudometrics @xmath32 and associated isometries @xmath36 for both the bounded real and categorical cases .",
    "let s first focus on a bounded real input dimension @xmath11 , i.e. , @xmath59 $ ] . to emphasize that we re in this real case",
    ", we explicitly denote the pseudometric as @xmath60 and the ( pseudo-)isometry from @xmath61 to @xmath62 as @xmath63 . for the definitions , recall that @xmath17 is true iff dimension @xmath11 is active given the instantiation of @xmath11 s ancestors in @xmath18 .",
    "@xmath64    @xmath65^{{\\textrm{\\tiny{\\sf{t } } } } } & \\textrm { if } \\delta_i({{\\underline{\\smash{x } } } } ) = \\textrm { false } \\\\",
    "\\nonumber { } \\omega_i [ \\sin{\\pi\\rho_i\\frac{x_i}{u_i - l_i } } , \\cos{\\pi\\rho_i\\frac{x_i}{u_i - l_i}}]^{{\\textrm{\\tiny{\\sf{t } } } } } & \\textrm { otherwise.}\\end{array}\\right .. \\end{aligned}\\ ] ]    although our formal arguments do not rely on this , proposition [ prop : dbr_pseudometric ] in the appendix shows that @xmath60 is a pseudometric .",
    "this pseudometric is defined by two parameters : @xmath66 $ ] and @xmath67 $ ] .",
    "we firstly define @xmath68 where @xmath69 $ ] .",
    "this encodes the intuitive notion that differences on lower levels of the hierarchy count less than differences in their ancestors .",
    "also note that , as desired , if @xmath11 is inactive for both @xmath18 and @xmath70 , @xmath60 specifies that @xmath34 and @xmath35 should not differ owing to differences between @xmath25 and @xmath71 . secondly , if @xmath11 is active for both @xmath18 and @xmath70 , the difference between @xmath34 and @xmath35 due to @xmath25 and @xmath71 increases monotonically with increasing @xmath72 .",
    "parameter @xmath73 controls whether differing in the activity of @xmath11 contributes more or less to the distance than differing in @xmath25 should @xmath11 be active .",
    "if @xmath74 , and if @xmath11 is inactive for exactly one of @xmath18 and @xmath70 , @xmath34 and @xmath35 are as different as is possible due to dimension @xmath11 ; that is , @xmath34 and @xmath35 are exactly as different in that case as if @xmath75 and @xmath76 . for @xmath77 ,",
    "@xmath11 being active for both @xmath18 and @xmath70 means that @xmath34 and @xmath35 could potentially be more different than if @xmath11 was active in only one of them .",
    "for @xmath78 , the converse is true . and",
    "@xmath70 must differ in at least one ancestor dimension of @xmath11 in order for @xmath79 to hold , such that in the final kernel combining kernels @xmath24 due to each dimension @xmath11 , differences in the activity of dimension @xmath11 are penalized both in kernel @xmath24 and in the distance for the kernel of the ancestor dimension causing the difference in @xmath11 s activity . ]    we now show that @xmath60 and @xmath63 can be plugged into a positive semi - definite kernel over euclidean space to define a valid kernel over space @xmath1 .",
    "let @xmath44 be a positive semi - definite covariance function over euclidean space .",
    "then , @xmath51 , defined by @xmath80 is a positive semi - definite covariance function over input space @xmath1 .",
    "[ prop : cont_psd ]    due to proposition [ prop : psd_if_isometry ] , we only need to show that , for any two inputs @xmath81 , the isometry condition @xmath82 holds .",
    "we use the abbreviation @xmath83 and @xmath84 and consider the following three possible cases of dimension @xmath11 being active or inactive in @xmath18 and @xmath70 .     +",
    "case 1 : @xmath85 . in this case",
    ", we trivially have @xmath86^{{\\textrm{\\tiny{\\sf{t } } } } } , [ 0,0]^{{\\textrm{\\tiny{\\sf{t } } } } } ) = 0 = d{^{\\text{\\textnormal { r}}}}_i({{\\underline{\\smash{x}}}},{{\\underline{\\smash{x}}}}').\\ ] ]     + case 2 : @xmath79 . in this case , we have @xmath87^{{\\textrm{\\tiny{\\sf{t } } } } } , [ 0,0]^{{\\textrm{\\tiny{\\sf{t } } } } } ) = \\sqrt{\\omega_i^2 ( \\sin^2{\\alpha } + \\cos^2{\\alpha } ) } = \\omega_i = d{^{\\text{\\textnormal { r}}}}_i({{\\underline{\\smash{x}}}},{{\\underline{\\smash{x}}}}'),\\ ] ] and symmetrically for @xmath88^{{\\textrm{\\tiny{\\sf{t } } } } } , [ \\sin{\\alpha } , \\cos{\\alpha}]^{{\\textrm{\\tiny{\\sf{t}}}}})$ ] .     + case 3 : @xmath89 .",
    "we have : @xmath90^{{\\textrm{\\tiny{\\sf{t } } } } } , \\omega_i [ \\sin{\\alpha ' } , \\cos{\\alpha'}]^{{\\textrm{\\tiny{\\sf{t}}}}})\\\\   \\nonumber { } & = & \\omega_i \\sqrt{(\\sin{\\alpha}-\\sin{\\alpha'})^2 + ( \\cos{\\alpha}-\\cos{\\alpha'})^2}\\\\ \\nonumber { } & = & \\omega_i \\sqrt{\\sin^2{\\alpha } -2 \\sin{\\alpha}\\sin{\\alpha ' } + \\sin^2{\\alpha ' }   + \\cos^2{\\alpha } -2 \\cos{\\alpha}\\cos{\\alpha ' } + \\cos^2{\\alpha ' } }",
    "\\\\ \\nonumber { } & = & \\omega_i \\sqrt{(\\sin^2{\\alpha}+\\cos^2{\\alpha } )    +   ( \\sin^2{\\alpha'}+\\cos^2{\\alpha ' } )    -2 ( \\sin{\\alpha}\\sin{\\alpha ' } + \\cos{\\alpha}\\cos{\\alpha'})}\\\\ \\label{eqn : simplified } & = & \\omega_i \\sqrt { 1 + 1 - 2 \\cos(\\alpha-\\alpha')}\\\\ \\nonumber & = & \\omega_i \\sqrt{2 } \\sqrt{1 - \\cos(\\pi\\rho_i \\frac{x_i - x_i'}{u_i - l_i } ) } = d{^{\\text{\\textnormal { r}}}}_i({{\\underline{\\smash{x } } } } , { { \\underline{\\smash{x}}}}'),\\end{aligned}\\ ] ] where ( [ eqn : simplified ] ) follows from the previous line by using the identity @xmath91",
    "now let s define @xmath92 and @xmath93 for the case that the input @xmath94 is categorical with @xmath95 possible values .",
    "proceeding as above , we define a pseudometric @xmath93 on @xmath1 and an isometry from @xmath96 to @xmath97 , and show that we can combine these with a kernel over euclidean space to construct a valid kernel over space @xmath1 .",
    "@xmath98    @xmath99    where @xmath100 is the @xmath101th unit vector : zero in all dimensions except @xmath101 , where it is @xmath102 .",
    "note that @xmath103    again , although our analysis does not require it , we prove in proposition [ prop : dbr_pseudometric_cat ] ( see appendix ) that @xmath93 is a pseudometric .",
    "our pseudometric is again defined by two hyperparameters .",
    "firstly , @xmath104 $ ] is exactly as defined in , and similarly allows higher - level inputs to attain greater importance .",
    "similarly , @xmath105 $ ] allows control of to what extent differing in the activity of @xmath11 affects the distance relative to the influence of differing in @xmath25 should @xmath11 be active .",
    "in particular , for @xmath106 @xmath107 implies that differing in the activity of @xmath11 is more significant , whereas @xmath108 implies the converse .",
    "the special case @xmath109 dictates that differing in @xmath25 has no influence on the distance ; @xmath110 assigns maximal importance to differing in @xmath25 .",
    "let @xmath44 be a positive semi - definite covariance function over euclidean space .",
    "then , @xmath51 , defined by @xmath111 is a positive semi - definite covariance function over input space @xmath1 .",
    "[ prop : cat_psd ]    we proceed as in the proof of proposition [ prop : cont_psd ] to show that , for any two inputs @xmath81 , the isometry condition @xmath112 holds .     +",
    "case 1 : @xmath85 . in this case",
    ", we trivially have @xmath113     + case 2 : @xmath79 . in this case",
    ", we have @xmath114 and symmetrically for @xmath115 .     + case 3 : @xmath89 . if @xmath116 , we have @xmath117    if @xmath118 , we have @xmath119",
    "@xmath60 is a pseudometric on @xmath1 .",
    "[ prop : dbr_pseudometric ]           + case 3 : @xmath129 , such that @xmath130 . if @xmath131 , @xmath132 if @xmath126 , consider the ` worst ' possible case in which , without loss of generality , @xmath75 and @xmath133 , such that @xmath134 .",
    "we define the abbreviation @xmath135 , giving @xmath136 hence , from non - negativity , we have @xmath137 ."
  ],
  "abstract_text": [
    "<S> we define a family of kernels for mixed continuous / discrete hierarchical parameter spaces and show that they are positive definite . </S>"
  ]
}
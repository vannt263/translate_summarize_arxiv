{
  "article_text": [
    "numerical simulation of the nonlinear evolution of collisionless dark matter , usually by following a set of point masses as they move under their mutual gravitational influence , has , over the last few decades , played an important role in increasing our understanding of cosmological structure formation .",
    "rather than attempt to make a summary of the extensive literature available on this subject here , we direct the reader to the recent reviews by @xcite and @xcite .    a search of the internet will reveal a diverse set of n - body codes now available to be downloaded by those interested in carrying out cosmological simulations .",
    "one of the first to be developed is the direct code of @xcite .",
    "the operation count for implementing any such particle  particle code scales as @xmath1 , where @xmath2 is the number of particles .",
    "one can reach larger @xmath2 and thus higher mass resolution ( but spatial resolution limited by the cell size on a grid ) in the same amount of cpu time using the pm ( particle  mesh ) method , for example the code by @xcite .",
    "the operation count here scales as @xmath2log@xmath2 , with a small prefactor ; pm is implemented on regular grids , where efficient fast fourier transform ( fft ) algorithms are available . to attain higher , subgrid resolution one can add to a pm code particle  particle interactions and refined subgrids , such as in the hydra code @xcite .",
    "a gridless approach is used in tree codes , for example the zeno package of @xcite . the operation count in the barnes ",
    "hut tree algorithm @xcite also scales as @xmath2log@xmath2 but the prefactor is much larger by a factor of 1050 @xcite than for a pm code .",
    "the tree code of @xcite has been made parallel @xcite .",
    "a tree code with individual particle time steps called gadget has recently been released in both serial and distributed memory parallel versions @xcite .",
    "one promising new development is the use of multigrid methods involving mesh refinements of arbitrary shape @xcite , such as in mlapm @xcite .",
    "another cell - based approach has recently been developed which shows improved performance over standard tree codes @xcite and is included as part of the nemo package @xcite .    for",
    "a given choice of algorithm , a related problem is making it run efficiently on parallel computers @xcite .",
    "gravity is long - range , so to compute the force on a given particle , one needs some information from every other particle , and communication is thus required if particles are distributed among many processors .",
    "@xcite presented a new algorithm , called tree  particle ",
    "mesh , based on using domain decomposition in a manner designed to overcome this difficulty .",
    "tpm uses the efficient pm method for long - range forces and a tree code for sub - grid resolution .",
    "isolated , overdense regions are each treated with a separate tree , thus ensuring coarse  grained parallelism .",
    "@xcite , hereafter box , made several improvements in the code of @xcite . in this paper",
    "we present further refinements which improve the accuracy and efficiency of the algorithm . these include the following : allowing individual particle time steps within trees , an improved treatment of tidal forces , new criteria for higher force resolution and for the choice of time step , and parallel treatment of large trees . in ",
    "[ sec : overview ] we present an overview of latest version of tpm , including time stepping ;  [ sec : implementation ] discusses implementation of domain decomposition and the particle time step criterion , with an overview of how the code works in practice .",
    "the accuracy of the code is explored in  [ sec : perfandacc ] by comparing results with two other algorithms : p@xmath0 m and the gadget tree code .",
    "concluding remarks and details of the public release of the tpm code are given in ",
    "[ sec : discussion ] .",
    "@xcite discuss the distinction between verifying a simulation ( that is , being sure that the equations are being solved correctly ) and validating it ( having confidence that the equations and their solution actually resemble a real world problem ) .",
    "obviously , in this paper only the former is done .",
    "various aspects of the validity of cosmological simulations are addressed in @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , and references therein .",
    "when using an n - body code , the simulator will need to be cognizant of these issues .",
    "tpm begins with a standard pm code ( in fact , if there are no particles selected to be in trees , then tpm defaults to a pm code ) ; this portion is similar to the pm code described by @xcite .",
    "the density on a regular grid is found by interpolating particle positions using the cloud  in  cell ( cic ) method , and poisson s equation is solved on this grid using fast fourier transforms . as noted in the introduction ,",
    "the fft technique is highly efficient and scales as @xmath2log@xmath2 @xcite . in order to obtain subgrid resolution a tree code",
    "one possible manner of doing this is to compute shorter range forces for every particle with a tree code @xcite , in a manner analogous to the p@xmath0 m algorithm .",
    "instead , tpm uses domain decomposition , taking advantage of the fact that potentials due to matter outside and inside a given domain can be added linearly , and it uses different solvers to find these two potentials .",
    "this section begins with a very broad description of the tpm algorithm , and then considers various aspects in more detail .",
    "a basic outline of tpm can be summarized as follows :    1 .",
    "identify tree regions and the particles in each such region ; particles outside of tree regions are evolved with pm only .",
    "push pm particles to midstep 3 .",
    "find the tidal potential in each tree region the potential due to all mass outside of that region .",
    "4 .   integrate each tree region forward to the middle of the pm step .",
    "5 .   find the pm potential and update the acceleration for pm particles .",
    "integrate each tree region forward to the end of the pm step .",
    "update pm particle velocities and positions to the end of the time step .",
    "the motivation behind this algorithm is that the motions of particles within a given tree region can be integrated independently using high temporal and spatial resolution : knowledge of the rest of the simulation is not required , except for the time  averaged , externally produced tidal forces .",
    "the stepping in time of positions @xmath3 and velocities @xmath4 is accomplished with a standard second order leapfrog integration in comoving coordinates , the cosmological model determining the scale factor @xmath5 :    [ eqn : leapfrog ] @xmath6    here @xmath7 , @xmath8 , and the gravitational potential @xmath9 are determined at time @xmath10 .",
    "one advantage of the tpm approach is that it allows the use of multiple time steps .",
    "tree particles are required to take at least two steps per pm step , but each particle has an individual time step so that finer time resolution can be used if required .",
    "particles are arranged in an hierarchy of time bins differing by a factor of two , in the manner of @xcite : @xmath11 where @xmath12 is the pm time step and the integer @xmath13 . in a sense tpm operates along the same lines as a tree code , except that the particles in the @xmath14 time step bin are handled differently from the rest .",
    "a diagrammatic representation of the time stepping is shown in fig@xmath15[fig : tstep ] for the case when all tree particles are in the longest time step bin , @xmath16 .",
    "beginning at time @xmath17 , the pm particle positions are moved forward to midstep ( eq .  [ [ eqn : leapfrog]a ] with @xmath18 ) .",
    "the tidal potential is then found , and the tree particles are evolved forward one full step with @xmath19 .",
    "the pm potential is updated ( eq .",
    "[ [ eqn : leapfrog]b ] ) , and for a second time the tree particles are evolved for one full step , to time @xmath20 .",
    "finally , the pm particle velocities and positions are updated to the end of the step ( eq .",
    "[ [ eqn : leapfrog]c - d ] ) .    to repeat the tpm algorithm in more detail :    [ [ section ] ] 1 .",
    "+ +    identify tree regions and the particles in each region .",
    "this is done by identifying pm cells above a given density threshold , described in ",
    "[ sec : domdec ] .",
    "adjoining cells are then grouped into isolated tree regions , as described in box .",
    "[ [ section-1 ] ] 2 .",
    "+ +    push pm particles to midstep ( eq .  [ [ eqn : leapfrog]a ] ) .",
    "[ [ section-2 ] ] 3 .",
    "+ +    find the tidal potential @xmath21 for each tree region .",
    "first the total potential is computed on the grid in the standard pm manner .",
    "then for each of the tree regions , a small portion of the grid containing the pm potential is saved , and the contribution to this potential made by the tree itself is subtracted out , leaving the tidal potential due to all external mass .",
    "see box  for details .",
    "since @xmath21 can only be calculated once per pm step , it will be calculated at midstep .",
    "pm particles are thus already in the proper location for this , but tree particles , with positions at the beginning of the pm time step , are not . however , since tree regions are spatially separated and the halo density profiles are evolving on slower timescales than any individual particle s orbital period , an approximate position is sufficiently accurate .",
    "( note that since a given tree s own contribution to @xmath21 is exactly subtracted back out , only the effect on other trees needs to be considered ) .",
    "thus , an approximation of the tree particles positions at the middle of the pm step is taken to be the position one full particle time step ahead ; since tree particle time steps are half the pm time step or less , this is no more than the pm midstep . with these advanced positions , the potential on the grid",
    "is found in the standard pm manner .    for each tree",
    "the pm potential in a cubical subvolume is saved .",
    "this volume is slightly larger than the active cell region ( in order to allow for finding the gradient of the potential through finite differencing ) plus one extra cell on a side in case particles migrate out of the active cell region during the time integration .",
    "since the pm time step is limited by a courant condition ( see  [ sec : timestep ] ) such that pm particles can not move more than a fraction of a cell per step , one extra cell is sufficient particles near the edge of a tree region are at only a slightly higher overdensity than the densest pm regions , and hence have similar velocities . at the beginning of a tree step the portion of the pm potential due to the tree particles themselves is subtracted out , leaving the tidal potential . with @xmath21 saved in this manner , every time a particle s acceleration is updated , the tidal force is calculated from the grid in the same manner that pm forces are found .",
    "this is an improvement over the method used in box .",
    "[ [ section-3 ] ] 4 .",
    "+ +    integrate each tree region forward to the middle of the pm step .",
    "this is done with a tree code , adding in the tidal forces .",
    "the tree code we use was written by lars hernquist @xcite .",
    "any other potential solver could be used , but a tree code is well suited for this type of problem , in that it can efficiently handle a wide variety of particle distributions , can include individual particle time steps , and scales as @xmath2log@xmath2 .",
    "note that for each tree this portion of the code is self  contained ; that is , once the particle data and potential mesh for a given tree have been collected together no further information is required to evolve that tree forward .",
    "this makes tpm well suited for parallel processing on distributed memory systems .",
    "once the tree data is received by a given processor this step which is the most computationally expensive part of the algorithm can be performed without any further communication . given this coarse  grained parallelism ,",
    "one can use widely distributed and heterogeneously configured processors , with more capable processors ( or groups of processors ) reserved for the largest trees .",
    "[ [ section-4 ] ] 5 .",
    "+ +    find the density and potential on the pm grid again , and update the acceleration for pm particles ( eq .  [ [ eqn : leapfrog]b ] ) .",
    "all tree particles are at the pm midstep , the proper location for computing the force on pm particles .",
    "[ [ section-5 ] ] 6 .",
    "+ +    integrate each tree region forward to the end of the pm step .",
    "[ [ section-6 ] ] 7",
    ". + +    update pm particle velocities and positions to the end of the time step ( eqs .",
    "[ [ eqn : leapfrog]c - d ] ) .",
    "tpm exploits the fact that gravitational instability in an expanding universe creates spatially isolated high density peaks ; for typical cdm models these peaks will contain a significant fraction of the mass ( @xmath22 ) but occupy a tiny fraction of the volume ( @xmath23 ; see for example fig@xmath152 of @xcite ) . as described in detail in box , this is accomplished by tagging active mesh cells based on the cell density ( which has already been calculated in order to perform the pm step ) .",
    "adjacent cells are linked together , dividing the cells into groups in a friends  of  friends manner .",
    "thus isolated high  density regions of space are identified , separated by at least one cell width .    in box ,",
    "the criterion used to decide if a cell @xmath24 was active was if its density @xmath25 exceeded a global threshold density @xmath26 where @xmath27 is the mean density and @xmath28 is the dispersion of cell densities . while temporally adaptive ( in the sense that the threshold is lower at early times when peaks are rare ) , this criterion has two main drawbacks .",
    "first , small peaks in isolated regions or voids will not be picked up , especially when @xmath28 is large , because the total mass in such a halo would not put a pm cell above @xmath29 .",
    "secondly , in the case of a region with peak density near @xmath29 , whether or not a given pm cell is above @xmath29 can depend on the offset of the grid with respect to the particles the halo mass may be divided into two or more cells .",
    "we have developed an improved criterion for selecting tree regions involving the contrast of a cell with its surroundings ( rather than a single global threshold value ) found by comparing the density smoothed on two scales .",
    "for each cell three densities are computed .",
    "first @xmath30 , found by boxcar smoothing over a length of 5 cells along each dimension .",
    "( another type of smoothing , _ e.g. _ with a gaussian , would be possible , but the boxcar can be done with minimal interprocessor communication ) .",
    "second , @xmath31 , the mean density in the eight  cell cube of which the cell under consideration is the lower octant ( when using cic , a particle in this cell would also assign mass to the other cells in this cube ) .",
    "third , @xmath32 , a measure of the density surrounding this cube , defined as @xmath33 all eight cells used to find @xmath31 are marked as active if @xmath34    the reasons for such a choice of form can be seen by examining the behavior of eq .",
    "[ [ eqn : rhocrit ] ] in various limits . at early times in a cosmological simulation @xmath35 and @xmath36 , so @xmath37 .",
    "thus with a choice of @xmath38 those regions which are only slightly overdense will be selected . at late times",
    "@xmath39 . in void regions @xmath40 , which means @xmath41 ; thus an isolated cell will be chosen if it is a fixed multiple above its surroundings .",
    "if on the other hand @xmath42 , then @xmath43 , meaning that at each step there is a given density above which all cells will be chosen ; this limit will increase with time as @xmath28 increases .",
    "keep in mind that the distribution of cell densities will be approximately lognormal ( @xcite and references therein ) when interpreting the value of @xmath28 .    after cell selection ,",
    "the domain decomposition proceeds in the manner described in box .",
    "cells are linked by friends  of  friends , yielding regions of space separated by at least one cell length . any particle which contributes some mass to an active cell when finding the pm density",
    "is assigned to the corresponding tree .    because the volume of all tree regions is less than one percent of the total volume , the amount of memory allocated to hold the tidal potential data is generally not significant compared to that already needed for the pm mesh . however",
    ", one complication of this scheme is that at early times , when @xmath28 is small , the resulting trees can be very long filaments . while not containing a large amount of matter , being not very overdense and nearly one  dimensional",
    ", the size of a cubical volume enclosing such a tree will sometimes be a significant fraction of the entire simulation volume .",
    "this can cause difficulties because of the amount of computer memory required to compute and save the tidal potential in such subvolumes .",
    "the value of @xmath44 in eq .",
    "[ [ eqn : rhocrit ] ] is thus allowed to increase at early times when the spatial extent of trees tends to become larger , and decrease at later times when trees are more compact .",
    "we have settled on the following method , which has worked well in a variety of simulations .",
    "space is allocated for a maximum subvolume length one quarter of the pm mesh size .",
    "the size of the largest sub - box used is checked at the end of each pm step . at early times ( when @xmath45 ) @xmath44 is increased by 0.5% if this box has a length more than a third of the allocated value .",
    "once @xmath28 exceeds 1.6 in a typical simulation , the spatial extent of trees has stopped growing , so in this case @xmath44 is decreased by 0.25% if the largest sub - box has a length less than half the maximum allocated .",
    "a minimum value is set for @xmath44 to prevent too many tree particles being chosen ; a choice of @xmath46 will place roughly half of the particles in trees at @xmath47 .",
    "an example of this in practice is discussed in ",
    "[ sec : overv ] .",
    "the number of pm grid cells can be more or less than the number of particles , though of course the finer the grid , the greater the accuracy of the pm and tidal forces . generally ,",
    "the number of cells should at least equal the number of particles ; we have found that eight grid cells per particle works well .",
    "a variety of methods for determining the particle time step have been proposed .",
    "this diversity of criteria reflects the fact that the appropriate time step can depend on a number of quite different considerations .",
    "these include the local density or the local dynamical time , nearby substructure , the nearest neighbor , and the softening length @xcite .",
    "in addition , for any single criterion , one can imagine a special circumstance where it breaks down .",
    "this suggests the possibility of basing @xmath48 on more than one criterion .",
    "thus in the tpm code we have decided to combine a number of possible criteria , drawn from variables which do not require any significant computation to find , in the following manner :    [ eqn : deltat ] @xmath49    here @xmath50 is an adjustable dimensionless parameter , @xmath51 is the spline kernel softening length , and @xmath52 is the distance to the nearest neighboring particle .",
    "the latter is found as a byproduct of the force calculation ; if at the beginning of a tree step @xmath52 has not been calculated , one can as a proxy find the minimum @xmath52 that is consistent with the particle s current @xmath48 .",
    "the time derivative of @xmath53 is approximated by @xmath54 .",
    "this criterion for @xmath48 is quite conservative , and is similar in principle to that adopted by @xcite .    a comparison of the time step returned by eq .",
    "[ [ eqn : deltat ] ] and the often used criterion @xmath55 is given in fig@xmath15[fig : dtcomp ] , which shows how these two criteria compare at @xmath47 for particles in the largest tree of the simulation discussed in ",
    "[ sec : overv ] and  [ sec : codecomp ] .",
    "this tree is made up of over @xmath56 particles , and contains two large halos plus a number of smaller satellites and infalling matter . each contour level in fig@xmath15[fig : dtcomp ] encloses a tenth of the particles , and the remaining tenth are plotted as points .",
    "it can be seen that eq .",
    "[ [ eqn : deltat ] ] tends to yield a smaller timestep than @xmath55 ; this is the case for 74% of the particles .",
    "generally the differences are not large less than a factor of two for 60% of the particles .",
    "another trend seen in the figure is that as @xmath55 becomes smaller it is more likely for eq .  [",
    "[ eqn : deltat ] ] to give an even smaller value , and conversely eq .",
    "[ [ eqn : deltat ] ] tends to give a longer time step than @xmath55 as the latter becomes larger . in most cases the value of @xmath48",
    "is set by the factor @xmath57 .",
    "in other words , the distance to the nearest neighbor is not allowed to change by a large factor , unless this distance is small compared to the softening length . even in cases",
    "when this factor is larger than @xmath58 , it is still smaller than @xmath59 and @xmath60 ; since the equations being integrated have the form @xmath61 and @xmath62 this limits integration errors .",
    "the pm time step is limited by a courant condition , such that no pm particle moves more than one quarter of a cell size per step .",
    "also , @xmath7 is not allowed to change by more than 1% per step .",
    "initially this latter criterion is the most restrictive , but over time it allows a longer @xmath12 and becomes unimportant .",
    "the @xmath12 allowed by the courant condition also tends to increase over time , although more slowly .",
    "this is because particles falling into dense regions are placed into trees , and the velocities of the remaining particles are redshifted ( eq .  [ [ eqn : leapfrog]c ] ) .",
    "the largest time step for any particle , @xmath12 , is kept constant until it can safely be increased by a factor of 2 , and it is then doubled .",
    "the time step for tree particles is unchanged , which means they take twice as many steps per pm step as before ; during tree evolution particles will move into a lower time step bin if allowed by eq .  [ [ eqn : deltat ] ] . whenever any particle changes time step , its position is updated as described in @xcite to preserve second order accuracy .",
    "various aspects of a typical tpm run can be demonstrated with a standard cosmological simulation .",
    "this test case contains @xmath2=128@xmath0 particles in a box @xmath63=40@xmath64mpc on a side .",
    "the number of grid points for the pm and domain decomposition portions of the code is eight times the number of particles , or @xmath65 .",
    "the initial conditions were generated using the publicly available codes grafic1 and lingers @xcite .",
    "a spatially flat lcdm model was chosen , with cosmological parameters close to the concordance model of @xcite : @xmath66 , and @xmath67 .",
    "the particle mass is thus @xmath68 . within the tree portion of the code , the opening parameter @xmath69 in the standard barnes ",
    "hut algorithm @xcite is set to @xmath70 , and the time step parameter @xmath50=0.3 ( see eq .  [ [ eqn : deltat ] ] ) .",
    "the cubic spline softening length was chosen to be 3.2@xmath64kpc so that the spatial dynamic range @xmath71 .",
    "with such a small softening length , halos with fewer than 150 particles are likely to undergo some 2-body relaxation in their cores over a hubble time ( assuming the particle distribution follows an nfw profile with concentration @xmath72=12 ) .",
    "fig@xmath15[fig : overv ] displays the evolution of several important quantities during this run as a function of expansion parameter @xmath7 .",
    "the top panel shows the dispersion of pm cell densities @xmath28 ( where the mean cell density is unity ) , and the second panel shows the value of @xmath44 ; both of these factor in eq .  [ [ eqn : rhocrit ] ] , which in turn plays a major part in determining the tree distribution .",
    "various aspects of this distribution are shown in the remaining curves .",
    "the third panel shows the size of the largest cubical subvolume required ( in units of pm grid cells ) .",
    "initially small , this grows extremely rapidly as @xmath28 rises from its initial value of 0.3 to @xmath73 ; in response @xmath44 is increased .",
    "when this size is at its greatest ( at @xmath74 ) , the percentages of total volume and mass in trees ( shown in the next two panels ) are still quite small .",
    "the trees at this time tend to follow caustics they are only slightly overdense and not very massive , but because of their filamentary nature they can have a large spatial extent .",
    "these caustics then fragment and collapse , so even while the total mass in trees and the number of trees ( shown in the third panel from the bottom ) increase the maximum subvolume size decreases .",
    "the changes in @xmath44 affect mainly the maximum subvolume size ; the number of trees and volume contained in tree regions both increase at a steady rate up to @xmath75=1 .",
    "the number of tree particles increases monotonically throughout the simulation .",
    "after @xmath76 ( by far the bulk of the computational time ) , the characteristics of the simulation change much more slowly .",
    "roughly half the particles are in @xmath772700 trees ranging from a few to @xmath78 particles but occupying only 0.4% of the simulation volume .",
    "the penultimate panel shows the number of particles in the first and third largest trees ; by @xmath76 the growth in mass of these objects has slowed to a fairly constant , low rate .",
    "trees are distributed in mass roughly as a power law , with 67% of the trees having fewer than 100 particles and 95% less than 1000 .",
    "most tree particles take two or four steps per pm step , but some are taking up to 64 ; there were 1075 pm steps total in this run .    as @xmath28 increases ,",
    "so does the limiting density above which all cells are treated at full resolution .",
    "it is important to keep track of this limit when interpreting the results of a tpm run .",
    "the bottom panel shows the highest value of the density among those cells evolved only with pm . by @xmath76",
    "this density is 120 times the mean , corresponding to 15 particles inside a cell . by the end of the computation , the densest pm  only cell contains 26 particles ; so trying to make statements about objects smaller than this will be complicated by the varying spatial resolution of tpm .",
    "note that most objects with @xmath79 will in fact be followed at full resolution substructures inside larger objects because they are in regions of higher density , and small isolated halos because they present a density contrast to their surroundings . to be cautious",
    "we will limit our analysis to objects 50% larger than this limit , _ i.e. _ 40 particles or @xmath80 .",
    "as seen in the previous section , during later epochs which take up most of the computational time needed for a run the mass distribution of trees is generally well fit by a power law ranging from a few particles up to of order 0.01@xmath2 .",
    "the actual mass of the largest tree will depend on the ratio of the largest non - linear scale in the box to the box size ; as this ratio becomes larger so does the mass of the largest tree .",
    "furthermore , the amount of computation required for a tree with @xmath81 particles will scale as @xmath81log@xmath81 .",
    "thus , there can be a substantial variation in the computational time required between different trees , and evolving the largest tree can comprise a significant fraction of the total computational load .",
    "an efficient parallel code must handle this situation well when dividing work up among ncpu processors .",
    "load balancing of trees is achieved in three ways .",
    "first , trees are sorted by @xmath81 and then divided into `` copses '' of roughly equal amounts of work using the `` greedy '' algorithm .",
    "that is , starting with the largest tree , each one in turn is given to the copse which up to that point has been assigned the least amount of total work .",
    "usually there is one copse per cpu , but there can be two or more per cpu if required by space constraints .",
    "there is a communication step , when all data associated with a copse is sent to one cpu .",
    "a cpu then evolves each tree in its local copse in turn , starting with the most massive .",
    "additionally , the largest trees can be done in parallel .",
    "if a few large trees dominate the work load , then it is impossible for all copses to contain equal amounts of work ideally , one would want ncpu copses , each comprising 1/ncpu of the total amount of work , but this clearly ca nt happen if the largest tree takes a larger fraction just by itself . in this case , the force calculation for these large trees is done in parallel by a small number of cpus .",
    "this is currently done quite crudely , with only the tree walk and force calculation actually carried out in parallel ; in theory a fully parallel tree code could be used for every tree , allocating more processors to those copses containing the most work . only a few nodes are usually required to reduce the time spent on the largest tree to the level required for load balancing . as a final means of balancing the load ,",
    "when a cpu finishes evolving all the trees in its local copse , it then sends a signal to the other cpus .",
    "a cpu with work still left will send an unevolved tree to the idle cpu for it to carry out the evolution .",
    "the scaling of the current implementation of tpm with number of processors is shown in fig@xmath15[fig : scale ] .",
    "the test case for these timing runs is a standard lcdm model at redshift @xmath75=0.16 with @xmath2=256@xmath0 particles in a 320@xmath64mpc cube .",
    "this particular set of runs was carried out on an ia-64 linux cluster at ncsa named `` titan '' .",
    "this machine consists of 128 nodes , each with dual intel 800mhz itanium processors , and a myrinet network interconnect . while the total time required depends on processor performance , similar scaling with ncpu has been found on a number of machines with various types of processors and interconnects .",
    "the topmost line in fig@xmath15[fig : scale ] is total time , calculated as the number of seconds wallclock time per pm step multiplied by ncpu ; perfect scaling would be a horizontal line .",
    "tpm performs quite well at ncpu=64 the efficiency is still 91% as compared to ncpu=4 . beyond this point scaling begins to degrade , with the efficiency dropping to 75% for ncpu=128 .",
    "the reason tpm scales well can be seen in the second line from the top , which shows the total time spent in tree evolution .",
    "this part of the code takes up most of the cpu time , but it requires no communication and there are enough trees so that just coarse  grained parallelization works reasonably well .",
    "the next two curves shown indicate the amount of time in the pm portion of the code and overhead related to trees ( identifying tree regions and particles , etc . ) . these take a small fraction of the total time and scale well since the grid is distributed across all processors .",
    "the final curve in fig@xmath15[fig : scale ] shows the time related to communication and imbalance in the tree part of the code .",
    "as ncpu increases it becomes more difficult to divide the tree work evenly and processors spend more time either recruiting work from others or waiting for them to finish .",
    "this overhead could likely be reduced by incorporating a fully parallel tree code and also by computing the nonperiodic fft ( required to find the tidal potential see box ) in parallel .",
    "a run with a larger number of particles and grid points , and thus a larger number of trees , would show efficient scaling beyond ncpu=128 .",
    "as a test of new code we have carried out a simulation of the secondary infall and accretion onto an initially uniform overdensity . this can be compared both to other codes and to the analytic , self - similar solution of @xcite . to create the initial conditions ,",
    "@xmath82 particles were placed on a uniform grid with zero velocity .",
    "the eight particles on the grid corners were then removed and placed at the center of the volume with a spacing one half that of the regular grid .",
    "thus , this is actually more of a cubic overdensity than spherical , but it quickly collapses and the subsequent infall is independent of the details of the initial state . also , there is a void located half the box distance away from the overdensity , but the evolution is not carried out for a long enough time for this to be significant .",
    "the initial condition is integrated from expansion factor @xmath83 to @xmath84 .",
    "the values @xmath38 and @xmath46 were used for the constants in eq .",
    "[ [ eqn : rhocrit ] ] . since",
    "only one halo is forming in the box , @xmath28 remains small , rising to only 0.5 by the end of the run . at the end , there are roughly 500 particles within the turnaround radius .",
    "this test can be seen as exploring how well the initial collapse of small objects is followed , which is the beginning stage of halo formation in an hierarchical scenario .",
    "the final state of this run is shown in fig@xmath15[fig : sphod ] .",
    "the top panel shows density as a function of radius .",
    "filled points are the tpm model ; error bars are the square root of the number of particles in a given radial bin .",
    "the inner edge of the innermost bin is twice the softening length .",
    "also shown is the same run carried out with a p@xmath0 m code ( as open circles ; details of this code are discussed in  [ sec : codecomp ] ) , and the solution of @xcite .",
    "the agreement is quite good the main limitation of this run is likely the mass resolution . as a measure of the phase space density",
    ", the lower panel shows @xmath85 , where @xmath86 is the velocity dispersion of the particles in each radial bin .",
    "following @xcite , we compare this to the @xcite solution for a @xmath87 gas . again",
    "the agreement is quite reasonable .",
    "differences between tpm and p@xmath0 m arise from different types of softening ( p@xmath0 m uses plummer softening ; here @xmath51 was set to half the tpm value ) and from time stepping ( for p@xmath0 m , @xmath48 for all particles was set by the minimum @xmath88 ) .      as a test of tpm in a less idealized situation",
    ", the initial conditions described in ",
    "[ sec : overv ] were again evolved , but using two other n - body codes .",
    "the first is the p@xmath0 m code of @xcite in a version made parallel by @xcite this code was also used in  [ sec : sphodtest ] . as in the tpm run ,",
    "a mesh of @xmath65 grid points was used .",
    "this code uses plummer softening ; the softening length was set to half the value used in the tpm run .",
    "the time variable in this code is @xmath89 , defined by @xmath90 ; all particles have the same time step , set by the minimum @xmath88 .",
    "the other n - body code used is the tree code named gadget of @xcite . in this code ,",
    "periodic boundary conditions are handled with ewald summation , the time variable is the expansion factor @xmath7 , and each particle has an individual time step . following @xcite , the conservative tree node opening criterion flagged by -dbmax was used , and the time step was set by @xmath91 .",
    "in addition , the maximum allowed time step was set to 1% of the initial expansion factor ; whenever @xmath7 doubled this maximum was also increased by a factor of two , by checkpointing the run and restarting with the new value .",
    "the softening length was set to be the same as the tpm run ( allowing for different notational conventions ) .    as a first comparison of the codes",
    ", the two point correlation function @xmath92 , found by counting the number of particle pairs in bins of separation @xmath52 , was calculated . to compute @xmath92 ,",
    "51 logarithmically spaced bins were used , with the minimum pair separation considered being @xmath93kpc and the maximum one third of the box size .",
    "the results at various redshifts are shown for all three runs in fig@xmath15[fig : cfcmp ] .",
    "clearly there is little difference to be seen in the three codes . at larger scales",
    "this is to be expected ; at smaller scales force approximations , smoothing , and relaxation may become important .",
    "the fact that p@xmath0 m uses plummer rather than spline softening explains why it shows a lower @xmath92 at scales less than a few times the softening length .",
    "if high values of @xmath92 provide a measure of accuracy , the tpm and gadget are slightly more accurate than p@xmath0 m .",
    "the statistics of mass peaks the dark halos surrounding galaxies , clusters , and so on are an important product of n - body codes @xcite .",
    "one commonly used halo finder is friends  of  friends , or fof @xcite .",
    "the cumulative mass function , found with fof using a linking length of 0.2 times the mean interparticle separation , is shown in fig@xmath15[fig : fofcmp ] . at higher redshifts",
    "there is little discernible difference between the three codes . at later times",
    ", tpm seems to have fewer halos containing @xmath9450 particles .",
    "it is unclear how to interpret this , because halos with less than 150 particles ( i.e. mass @xmath95 ) are affected by two - body relaxation .",
    "@xcite found that an adaptive p@xmath0 m and gadget both produced more small fof halos than the adaptive multigrid mlapm and art codes , so in this case tpm may agree more closely with the latter .    to investigate",
    "further a different halo finder was used , namely the bound density maxima ( bdm ) algorithm @xcite .",
    "this algorithm is significantly different from fof , so the resulting mass function is probing different qualities of the dark matter distribution",
    ". density maxima inside spheres of radius 100 @xmath64kpc were found , and halo centers were then calculated using spheres of radius 40 @xmath64kpc .",
    "the mass for each halo is taken to be that inside a sphere containing the overdensity expected for a virialized halo just collapsed from a spherical top ",
    "hat ; to calculate this overdensity the fit of @xcite was used . in bdm ( unlike fof )",
    "particles moving faster than the escape velocity are removed from the halo .",
    "the bdm cumulative mass functions for the three n - body codes are shown in fig@xmath15[fig : mfcmp ] .",
    "as with fof , the agreement between codes is quite good . in this case it appears to be tpm which produces more small halos , but again this effect is for low mass halos likely affected by relaxation .    using the bdm halos with more than 40 particles , the halo ",
    "halo correlation function is shown in fig@xmath15[fig : cfhal ] .",
    "the number of pairs of halos in 21 logarithmically spaced radial bins , with the smallest separation being 200 @xmath64kpc and the largest one third of the box size , were tallied and compared with the expectation for a random distribution .",
    "all three codes give the same result . from the results presented so far in this section",
    "it is clear that tpm yields a quite similar evolved matter distribution as compared to other codes .",
    "finally we turn to the internal properties of halos .",
    "one probe of the mass distribution in a halo is the circular velocity @xmath96 . for each simulation",
    "we divide halos up into six mass bins . to avoid relaxation effects ,",
    "the lowest mass considered is @xmath97 .",
    "the width of each bin is a factor of @xmath98 , so the largest mass bin contains two halos with mass above @xmath99 . for each set of halos",
    "the average circular velocity as a function of radius was calculated ; these average velocity curves are shown in fig@xmath15[fig : vcirc ] .",
    "it can be seen that these curves are quite similar for all three codes .",
    "two main trends are noticeable , the main one being that p@xmath0 m shows lower circular velocities at small radii .",
    "this is likely due to the use of plummer softening and less strict time step criterion in the p@xmath0 m run , both of which would lead to lower densities in the innermost parts of halos .",
    "the other main difference is that for the lowest masses it appears that tpm yields higher circular velocities than the other two codes .    instead of averaging over a number of halos of similar mass , it is also possible to compare halos on a one - by - one basis .",
    "to find the appropriate pairs of halos , the list of halos with more than 150 particles found by bdm was sorted by mass , and for each target gadget or p@xmath0",
    "m halo a tpm halo was selected as a match if its mass was within 25% and its position within 1 @xmath64mpc of the target halo ; if more than one halo passed this test then the nearest in position was selected .",
    "the selected tpm halo was removed from further consideration , and the process repeated for next target halo . in this manner a match was found for 588 out of 609 gadget halos and 573 out of 582 p@xmath0 m halos . for various measured halo properties , the percentage difference of the tpm halo from the gadget or p@xmath0 m halo was calculated . since the dispersion of these differences increases as less massive halos are considered , halo pairs",
    "are split into two groups , with the higher mass group containing all target halos with 394 or more particles ( i.e. mass @xmath100 ) .",
    "results are shown in table  [ tab : hdiff ] , which for each property gives the mean percentage difference and one standard deviation , as well as the first quartile , median percentage difference , and third quartile .",
    "the first property shown is halo mass @xmath101 .",
    "the difference here is constrained to be less than 25% , but in most cases the tpm value is within 10% of the other code s .",
    "it appears that p@xmath0 m yields slightly lower masses than the other two codes , but the latter two agree quite well .",
    "the agreement in masses shows that the simple scheme used to find matching halo pairs works well , as does the fact that the difference in position is less than 165@xmath64kpc in 95% of the cases .",
    "this is reinforced by the agreement between the halo center of mass velocities @xmath102 shown in table  [ tab : hdiff ] ; the velocity vectors are closely aligned , differing by less than @xmath103 in 95% of the pairs .",
    "thus only a few percent of the halo pairs are mismatches ; since these pairs still have similar masses and are likely in similar environments , they are kept in the comparisons .    in terms of the 3-d root mean square velocity @xmath104 and maximum circular velocity @xmath105 , the more massive halos are very similar in all three codes , with no offset between codes . however , at the lower mass end tpm gives values that tend to be systematically higher by a few percent",
    "this can also be seen for the average circular velocity in the bottom curve of fig@xmath15[fig : vcirc ] ; this is curve is the average for halos below roughly @xmath106 .",
    "the difference between tpm and the other two codes is most pronounced near halo centers .",
    "the last property shown in table  [ tab : hdiff ] is a comparison of central density @xmath107 , which is computed by measuring the amount of mass within @xmath108=12.8@xmath64kpc of the halo center . as would be expected from fig@xmath15[fig : vcirc ] , tpm yields higher central densities than gadget , with p@xmath0 m giving lower @xmath107 than either of these .",
    "one possible source of the differences seen in tpm halos as compared to a pure tree code could simply be the choice of time step .",
    "the p@xmath0 m run took @xmath109 steps and the gadget run @xmath110 ; tpm on the other hand took @xmath111 , or 60% more than gadget .",
    "of course this comparison is not entirely straightforward because different particles determine the smallest time step at different times .",
    "part of the difference between gadget and tpm may be due to the fact that tpm bins time steps by factors of two , whereas gadget allows time steps to vary more gradually .",
    "a second tpm run was carried out to separate other code differences from the time step criterion .",
    "this run was identical to the first except that the time step was set not by eq .",
    "[ [ eqn : deltat ] ] , but rather by @xmath112 ( similar to the gadget and p@xmath0 m codes ) ; as a result it took fewer steps than any of the other runs .",
    "there is no significant difference in the mass functions and halo  halo correlation functions between this run and the original tpm run .",
    "the particle - particle correlation function is different , however .",
    "this can be seen in fig@xmath15[fig : xicmp ] , which shows the ratio of the original tpm run s @xmath92 to that of the new run , at redshift @xmath75=0 .",
    "the new tpm run has a lower @xmath92 for @xmath113kpc , roughly 5 - 10% lower than the original tpm and similar to the p@xmath0 m run .",
    "this indicates the internal structure of halos has been affected by the longer time steps , which is confirmed by repeating the comparison of individual halos .",
    "the difference between halos in the new tpm run and the gadget run are given in table  [ tab : hdiff ] .",
    "for the higher mass halos the new run , unlike the original one , tends to give lower maximum circular velocities and central densities than the tree code .",
    "this indicates that the longer time step is in fact leading to inaccuracies .",
    "the differences between tpm and the tree code for low mass halos seen in the original run persist in the new run , though they are not quite as pronounced .",
    "another point of comparison between codes is efficiency with which they use computing resources .",
    "fig@xmath15[fig : times ] shows the wall - clock time consumed by each of the codes , as a function of expansion parameter , in carrying out the test simulation .",
    "all the runs used four 300 mhz ip27 processors of an sgi origin 2000 ; the codes were compiled with the sgi compilers and mpi library .",
    "all three codes used roughly the same amount of memory ( tpm requires at least 20 reals per particle plus 3 reals per mesh point , divided evenly among processors ) . at the earliest times both p@xmath0 m and tpm spend most of their time in the pm fft , and so they behave similarly . however , as objects begin to collapse p@xmath0 m begins to consume more time computing particle - particle interactions .",
    "the fact that the accelerations of all particles are updated every step also makes p@xmath0 m use more time than do the two multiple time step codes .",
    "the tree code takes more time when the particle distribution is nearly homogeneous , demonstrating that a pm code ( which is what the gridded codes basically are in this situation ) is very efficient .",
    "however , the tree code timing is roughly independent of the particle distribution , and once inhomogeneity develops it does not require more time per update , whereas the other codes do .",
    "tpm does well compared to the tree code for a couple of reasons .",
    "by @xmath7=1 roughly half the particles in the tpm run are still being handled solely by pm .",
    "also , imagine breaking @xmath2 particles up into @xmath17 trees each with @xmath114 particles ; the time required to solve all the trees will scale as @xmath115 , lower by a logarithmic factor than using the same tree solver on all the particles .",
    "overall , despite taking more timesteps , in this test case tpm required less cpu time than the other codes , by a factor of @xmath116 relative to the tree code and @xmath117 relative to p@xmath0 m .",
    "this paper has presented a parallel implementation of the tpm algorithm .",
    "several improvements over the implementation of box   have been made .",
    "particles in tree regions each have an individual time step , half of the pm time step or less , making the tree integration more efficient .",
    "the treatment of tidal forces on trees is also improved by saving the tidal potential on a grid and evaluating the force as a function of particle position at each smaller particle time step ; thus a greater ratio of tree to pm time steps is allowed . a new , more stringent , time step criterion has been implemented .",
    "a new criterion for locating regions for treatment with higher resolution is given ; by finding cells with higher density than their surroundings , small halos in lower density regions are located and followed at full resolution .",
    "these changes significantly increase the speed and accuracy of tpm : a computation of the test case discussed in  [ sec : codecomp ] using the code described in box  required more cpu time ( by a factor of over three ) than the current version , but was only accurate for halos with more than 315 particles .",
    "comparisons with other widely used algorithms were made for a typical cosmological structure formation simulation .",
    "these show excellent agreement .",
    "the particle - particle correlation functions , the halo mass functions , and the halo - halo correlation functions from tpm agree quite well with those from p@xmath0 m and tree codes .",
    "the internal properties of halos also agree ; the main difference being that , for lower mass halos , tpm yields higher @xmath118 and maximum circular velocities ( by a few percent over a tree code ) .",
    "tpm halos also show higher central densities than those of the other two codes , though the mean difference is smaller than the dispersion .",
    "this difference disappeared , at least among the more massive halos , when the time step criterion of eq .",
    "[ [ eqn : deltat ] ] was replaced with one similar to that employed by the other two codes .",
    "thus we conclude that a choice of a relatively conservative time step criterion contributed to a slightly improved accuracy .",
    "tpm yielded results of similar accuracy to the other codes used here while using significantly less computational time ( about a quarter of that needed by a tree code and an eighth of that needed by p@xmath0 m ) .",
    "it also scales well on distributed memory parallel machines , such as networked pcs , because this parallelism is built in as part of the design of tpm .",
    "however , in committing to an algorithm which accentuates the coarse - grained parallelism inherent in a typical cosmological simulation , a large degree of flexibility is sacrificed .",
    "a basic presumption of tpm is that the largest nonlinear structure inside the simulation box is a small fraction of the total mass and volume . to simulate a situation where this is not the case ( e.g. two colliding galaxies ) another code would be preferred .",
    "the tpm source code can be obtained at http://astro.princeton.edu/$\\sim$bode/tpm or by contacting the authors .",
    "the code is written in fortran 77 and uses mpi for message passing ; thus it is very portable and can be used on clustered pc s or other distributed memory systems .",
    "many thanks are due to lars hernquist for generously supplying a copy of his tree code ; also edmund bertschinger for use of his p@xmath0 m code , joe henawi for help with fof , and scott tremaine for useful discussions .",
    "this research was supported by the national computational science alliance under nsf cooperative agreement asc97 - 40300 , paci subaward 766 .",
    "computer time was provided by ncsa and the pittsburgh supercomputing center .",
    "aarseth , s. 1999 , , 111 , 1333 baertschiger , t. , joyce , m. & labini , f.s .",
    "2002 , , 581 , 63 ( astro - ph/0203087 ) bagla , j.s . 1999 ,",
    "preprint ( astro - ph/9911025 ) barnes , j.e .",
    "1998 , galaxies : interactions and induced star formation , r.c .",
    "kennicutt jr .",
    ", f. schweizer and j.e .",
    "barnes , berlin : springer , 275 barnes , j. & hut , p. 1986 , nature , 324 , 446 becciani , u. & antonuccio - delogu , v. 2001 , comp .",
    "comm . , 136 , 54 bertschinger , e. 1985 , , 58 , 39 bertschinger , e. 1998 , , 36 , 599 bertschinger , e. 2001 , , 137 , 1 bryan , g.l . & norman , m.l .",
    "1998 , , 495 , 80 bode , p. , ostriker , j.p .",
    ", & xu , g. 2000 , , 128 , 561 ( box ) calder , a.c .",
    "2002 , , in press couchman , h.m.p . ,",
    "thomas , p.a . & pearce , f.r .",
    "1995 , , 452 , 797 davis , m. , efstathiou g. , frenk , c. & white , s.d.m .",
    "1985 , , 292 , 371 dehnen , w. 2000 , , 536 , l39 dehnen , w. 2002 , j. comp .",
    ", 179 , 27 dorband , e.n . , hemsendorf , m. & merritt , d. 2002 , j. comp .",
    ", in press ( astro - ph/0112092 ) efstathiou g. , davis , m. , frenk , c. & white , s. 1985 , , 57 , 241 ferrell , r. & bertschinger , e. 1994 , int .",
    "c , 5 , 933 frederic , j.j .",
    "1997 , ph.d .",
    "thesis , mit hamana , t. , yoshida , n. & suto , y. 2002 , , 568 , 455 hernquist , l. 1987 , , 64 , 715 hernquist , l. 1990 , j. comp .",
    "phys . , 87 , 137 hernquist , l. & katz , n. 1989 , , 70 , 419 hockney , r.w . & eastwood , j.w .",
    "1981 , computer simulation using particles , new york : mcgraw hill kayo , i. , taruya , a. & suto , y. 2001 , , 561 , 22 jing , y.p .",
    "& suto , y. 2002 , , 574 , in press klypin , a. 2000 , preprint ( astro - ph/0005502 ) klypin , a. , gottlber , s. , kravtsov , a.v . & khokhlov , a.m. 1999 , , 516 , 530 klypin , a. , & holtzman , j. 1997 , preprint ( astro - ph/9712217 ) knebe , a. 2002 , , submitted ( astro - ph/0201490 ) knebe , a. , green , a. & binney , j. 2001 , , 325 , 845 knebe , a. , kravtsov , a.v .",
    ", gottlber , s. & klypin , a.a .",
    "2000 , , 317 , 630 kravtsov , a.v .",
    ", klypin , a.a . & khokhlov a.m. 1997 , , 111 , 73 lia , c. & carraro , g. 2001 , , 276 , 1049 ma , c .- p . , & bertschinger , e. 1995 , , 455 , 7 miocchi , p. & capuzzo - dolcetta , r. 2002 , , 382 , 758 mo , h.j . & white , s.d.m .",
    "2002 , , 336 , 112 ( astro - ph/0202393 ) ostriker , j.p . & steinhardt , p.j .",
    "1995 , nature , 377 , 600 power , c. , navarro , j.f . ,",
    "jenkins , a. , frenk , c.s . , white , s.d.m .",
    ", springel , v. stadel , j. & quinn , t. 2002 , , submitted ( astro - ph/0201544 ) ricker , p.m. , dodelson , s. & lamb , d.q .",
    "2000 , , 536 , 122 springel , v. , yoshida , n. & white , s.d.m .",
    "2001 , new astronomy , 6 , 79 stadel , j.g .",
    "2002 , ph.d .",
    "thesis , university of washington , seattle taylor , j.e . &",
    "navarro , j.f .",
    "2001 , , 563 , 483 teuben , p. 1995",
    ", astronomical data analysis software and systems iv , r.a .",
    "shaw , h.e .",
    "payne & j.j.e .",
    "hayes , san francisco : astronomical society of the pacific , 398 van kampen , e. 2000 , , submitted ( astro - ph/0002027 ) viturro , h.r .",
    "& carpintero , d.d .",
    "2000 , a&as , 142 , 157 xu , g. 1995 , , 98 , 355 white , m. 2002 , , in press yahagi , h. , mori , m. & yoshii , y. 1999 , , 124 , 1 yahagi , h. & yoshii , y. 2001 , , 558 , 463    lccccccccccc & & & + & mean & s.d . & @xmath119 & @xmath120 & @xmath121 & & mean & s.d . & @xmath119 & @xmath120 & @xmath121 +   + @xmath101 & -0.03 & 8.21 &  -5.07 & 0.08 & 4.80 & & -0.37 & 5.33 &  -2.33 & -0.12 & 2.08 + @xmath102 & 0.06 & 9.38 &  -1.08 & 0.52 & 1.74 & & 0.49 & 4.28 &  -0.54 & 0.59 & 1.74 + @xmath104 & 1.59 & 7.94 &  -2.20 & 1.99 & 5.97 & & -0.05 & 4.38 &  -2.12 & 0.18 & 2.23 + @xmath105 & 2.69 & 6.98 &  -1.14 & 2.89 & 6.68 & & 0.35 & 3.85 &  -1.48 & 0.25 & 2.01 + @xmath107 & 16.2 & 38.1 &  -2.22 & 8.33 & 26.0 & & 4.03 & 22.1 &  -8.82 & 2.45 & 13.7 +   + @xmath101 & 1.84 & 8.65 &  -3.40 & 1.75 & 6.74 & & 0.38 & 5.14 &  -1.51 & 0.39 & 2.37 + @xmath102 & 0.22 & 7.44 &  -1.19 & -0.10 & 1.20 & & -0.38 & 4.26 &  -0.93 & -0.07 & 0.84 + @xmath104 & 3.84 & 7.13 &  -0.80 & 3.59 & 8.94 & & 0.23 & 3.82 &  -1.83 & -0.03 & 2.16 + @xmath105 & 6.20 & 8.93 &  1.02 & 5.11 & 10.7 & & 0.32 & 4.06 &  -1.94 & -0.24 & 2.00 + @xmath107 & 29.4 & 39.2 &  3.45 & 20.0 & 47.2 & & 13.7 & 35.0 &  -2.46 & 6.82 & 19.0 +   + @xmath101 & -0.25 & 8.11 &  -4.70 & -0.08 & 4.26 & & -0.63 & 5.82 &  -2.73 & -0.33 & 2.18 + @xmath102 & -0.01 & 8.19 &  -0.97 & 0.34 & 1.65 & & 0.76 & 7.10 &  -0.68 & 0.45 & 1.76 + @xmath104 & 1.55 & 7.83 &  -3.07 & 1.99 & 5.36 & & -1.00 & 3.86 &  -2.65 & -0.62 & 1.28 + @xmath105 & 1.74 & 6.80 &  -2.61 & 1.50 & 5.69 & & -0.77 & 3.85 &  -2.44 & -0.49 & 1.03 + @xmath107 & 12.7 & 30.5 &  -6.24 & 6.89 & 26.7 & & -0.75 & 24.3 &  -12.9 & -4.16 & 6.49 +"
  ],
  "abstract_text": [
    "<S> an improved implementation of an n - body code for simulating collisionless cosmological dynamics is presented . </S>",
    "<S> tpm ( tree  particle  mesh ) combines the pm method on large scales with a tree code to handle particle - particle interactions at small separations . </S>",
    "<S> after the global pm forces are calculated , spatially distinct regions above a given density contrast are located ; the tree code calculates the gravitational interactions inside these denser objects at higher spatial and temporal resolution . </S>",
    "<S> the new implementation includes individual particle time steps within trees , an improved treatment of tidal forces on trees , new criteria for higher force resolution and choice of time step , and parallel treatment of large trees . </S>",
    "<S> tpm is compared to p@xmath0 m and a tree code ( gadget ) and is found to give equivalent results in significantly less time . </S>",
    "<S> the implementation is highly portable ( requiring a fortran compiler and mpi ) and efficient on parallel machines </S>",
    "<S> . the source code can be found at http://astro.princeton.edu/$\\sim$bode/tpm . </S>"
  ]
}
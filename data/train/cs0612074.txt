{
  "article_text": [
    "in this paper we study two fundamental network communication problems , _ broadcasting _ and _ gossiping _ in unknown adhoc networks . in an unknown network the nodes do not know their neighbourhood or the whole the network structure , the only the size of the network .",
    "the nodes model mobile devices equipped with antennas .",
    "each device @xmath3 has a fixed _ communication range _ , meaning that it can listen to all messages send from nodes within that range , and all nodes in that range can receive messages from @xmath3 .",
    "we do not assume that @xmath3 can sent with with different power levels , hence the communication range is fixed .",
    "note that we allow different communication ranges for different nodes . if several nodes @xmath3 s communication range send a message at the same time , these messages _ collide _ , the device is not able to receive any of them .",
    "note that a node does not know which nodes are able to the receive messages it sends , and the node might not know all neighbours in his own communication range .",
    "since the communication ranges of different devices can vary , one device may be able to listen to messages send out by a node in its communication range , but not vice - versa .",
    "this forbids the acknowledgement - based protocols since the receiver might not be able to send a confirmation message to the sender .",
    "another challenge in these networks is that , due to the mobility of the nodes , the network topology changes over time .",
    "this last characteristic makes it desirable that communication algorithms use local information only .",
    "mobile devices tend to be small and have only small batteries .",
    "hence , another important design issue for communication in ad - hoc networks is the energy efficiency ( see , e.g. , @xcite ) of protocols .",
    "in this paper we design efficient communication algorithms which minimise the broadcasting or gossiping time , and which also minimise the energy consumption .",
    "we measure the energy consumption in terms of the number of total transmissions .",
    "we believe that the number of transmissions is a very good measure for the overall energy consumption since we do not assume variable communication ranges .",
    "we also show that there is a trade - off between minimising the broadcast or gossiping time , and the number of messages that are needed by randomised protocols .",
    "the rest of the paper is organised as follows .",
    "the rest of this section introduces the related work , our model , and our new results .",
    "section [ se : rand - broadcast ] and section [ se : rand - gossip ] study broadcasting and gossiping for random networks . in section",
    "[ se : arbitrary ] , we analyse an broadcasting on general ( not random but fixed ) networks with known diameter .",
    "our algorithm minimises both the broadcasting time and the number of transmissions .",
    "finally , in section [ se : lb - arbitrary ] we show some lower bounds on broadcasting time and the number of used messages .",
    "here we only consider randomised broadcasting and gossiping protocols for unknown adhoc networks .",
    "for an overview of deterministic approaches see @xcite .",
    "let @xmath5 be the diameter of the network .",
    "[ [ broadcasting ] ] broadcasting + + + + + + + + + + + +    alon et .",
    "al @xcite show that there exists a network with diameter @xmath10 for which broadcasting takes expected time @xmath11 .",
    "kushilevitz et .",
    "al @xcite show a lower bound of @xmath12 time for any randomised broadcast algorithm .",
    "bar - yehuda et .",
    "al @xcite design an almost optimal broadcasting algorithm which achieves the broadcasting time of @xmath13 , w.h.p .. later , czumaj et .",
    "al @xcite propose an elegant algorithm which achieves ( w.h.p . ) linear broadcasting time on arbitrary networks .",
    "their algorithm uses carefully defined selection sequences which specify the probabilities that are used by the nodes to determine if they will sent a message out or not .",
    "this algorithm needs @xmath14 transmissions per node .",
    "czumaj et .",
    "al @xcite also obtain an algorithm under the assumption that the network diameter is known .",
    "the algorithm finishes broadcasting in @xmath15 rounds , w.h.p , and uses expected @xmath16 transmissions per node .",
    "also , independently , kowalski et.al @xcite obtain a similar randomised algorithm with the same running time .",
    "elssser and gasieniec @xcite are the first to study the broadcasting problem on the class of directed random graphs @xmath17 . in these networks ,",
    "every pair of nodes is connected with probability @xmath18 .",
    "they propose a randomised algorithm which achieves w.h.p .",
    "strict logarithmic broadcasting time .",
    "their algorithm works in three phases : in the first phase ( containing @xmath19 rounds ) , every informed node transmits with probability 1 . in the second phase",
    ", every informed node transmits with probability @xmath20 , where @xmath21 is the expected average degree of the graph . in the third phase",
    ", every node informed in the first two phases transmits with probability @xmath22 .    in @xcite ,",
    "elssser studies the communication complexity of broadcasting in random graphs under the so - called _ random phone call _ model , in which every user forwards its message to a randomly chosen neighbour at every time step .",
    "they propose an algorithm that can complete broadcasting in @xmath4 steps by using at most @xmath23 transmissions , which is optimal under their random phone call model .",
    "[ [ gossiping ] ] gossiping + + + + + + + + +    for gossiping , all the previous works follows the join model , where nodes are allowed to join messages originated from different nodes together to one large message .",
    "so far the fastest randomised algorithm for arbitrary networks has a running time of @xmath24 @xcite .",
    "the algorithm combines the linear time broadcasting algorithm of @xcite , and a framework proposed by @xcite .",
    "the framework applies a series of limited broadcasting phases ( with broadcasting time @xmath25 ) to do gossiping in time @xmath26 .",
    "chlebus et .",
    "al @xcite study the average - time complexity of gossiping in radio networks .",
    "they give a gossiping protocol that works in average time of @xmath27 , which is shown to be optimal .",
    "for the case when @xmath28 different nodes initiate broadcasting ( note that it is gossiping when @xmath29 ) , they give an algorithm with @xmath30 average running time .",
    "[ [ random - graphs ] ] random graphs + + + + + + + + + + + + +    in the classic random graph model of erds and reny , @xmath31 is a @xmath1-node graph where any pair of vertices is connected ( i.  e.  , an edge is built in between ) with probability @xmath18 .",
    "it can be shown by chernoff that every node in the network has @xmath32 neighbours w.h.p . moreover ,",
    "it is well known ( see e.g. @xcite , @xcite ) that as long as @xmath33 , the diameter of the graph is @xmath34 w.h.p . besides , if @xmath35 , the graph is connected w.h.p .",
    "we model a radio network is modeled by a directed graph @xmath36 .",
    "@xmath37 is the set of mobile devices and @xmath38 . for @xmath39 ,",
    "@xmath40 means that @xmath41 is in the communication range of @xmath42 ( but not necessarily vice versa ) .",
    "we assume that the network @xmath43 is unknown , meaning that the nodes do not have any knowledge about the nodes that can receive their messages , nor the number of nodes from which they can receive messages by themselves .",
    "this assumption is helpful since in a lot of applications the graph @xmath43 is not fixed because the mobile agents can move around ( which will results in a changing communication structure ) .",
    "we assume that @xmath43 is either arbitrary @xcite , or that it belongs to the random network class @xcite . for random graphs",
    ", we use a directed version of the standard model @xmath44 , where node @xmath42 has an edge to node @xmath45 with probability @xmath18 .",
    "let @xmath3 be the average in and out degree of @xmath43 . recall that @xmath21 and @xmath46 .    in the broadcasting problem",
    "one node of the network tries to send a message to all other nodes in the network , whereas in the case of gossiping every node of the network tries to sends a message to every other node .",
    "the _ broadcasting time _ ( or the _ gossiping time _ ) denotes the number of communication rounds needed to finish broadcasting ( or gossiping ) .",
    "the _ energy consumption _ is measured in terms of the total ( expected ) number of transmissions , or the maximum number of transmissions per node .",
    "the algorithms we consider are _ oblivious _ , i.  e.  all nodes have to use the same algorithm .",
    "[ [ broadcast - in - random - networks ] ] broadcast in random networks + + + + + + + + + + + + + + + + + + + + + + + + + + + +    our broadcasting algorithm is similar to the one of elssser and gasieniec in @xcite .",
    "the difference is that our algorithm sends at most one message per node , whereas the randomised algorithm of @xcite sends up to @xmath19 messages per node .",
    "the broadcasting time of both algorithms is @xmath4 , w.h.p .",
    "our proof is very different from the one in @xcite .",
    "elssser and gasieniec show first some structural properties of random graph which they then use to analyse their algorithm .",
    "we directly bound the number of nodes which received the message after every round .",
    "our results are also more general in the sense that we only need @xmath47 instead of @xmath48 for constant @xmath49 ( see @xcite ) .",
    "[ [ gossiping - in - random - networks ] ] gossiping in random networks + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we modify the algorithm of @xcite and achieve a gossiping algorithm with running time @xmath2 , w.h.p , where every node sends only @xmath4 messages .",
    "to our best knowledge , this is the first gossiping algorithm specialised on random networks .",
    "so far , the fastest gossiping algorithm for general network achieves @xmath24 running time and uses an expected number of @xmath50 transmissions per node @xcite .",
    "[ [ broadcasting - in - general - networks ] ] broadcasting in general networks + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    our randomised broadcasting algorithm for general networks completes broadcasting time @xmath51 , w.h.p .",
    "it uses an expected number of @xmath52 transmissions per node .",
    "czumaj and rytter ( @xcite ) propose a randomised algorithm with @xmath53 broadcasting time .",
    "their algorithm can easily be transformed into an algorithm with the same runtime bounds and an expected number of @xmath54 transmissions per node .",
    "[ [ lower - bounds - for - general - networks ] ] lower bounds for general networks + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    first we show a lower bound of @xmath55 transmissions for any randomised broadcasting algorithm with a success probability of at least @xmath56 .",
    "we assume that every node in the network uses the same probability distribution to determine if it sends a message or not .",
    "furthermore , we assume that the distribution does not change over time . to our best knowledge ,",
    "all distributions used so far had these properties .",
    "czumaj and rytter ( @xcite ) propose an algorithm that needs @xmath57 messages ( see section [ se : related ] ) .",
    "hence , there is still a factor of @xmath58 messages left betwen upper and our lower bound .    finally ,",
    "using the same lower bound model , we show that there is a network with @xmath59 nodes and diameter @xmath5 , such that every randomised broadcast algorithm requires an expected number of at least @xmath60 transmissions per node in order to finish broadcasting in time @xmath61 rounds with probability at least @xmath62 .",
    "this lower bound shows the optimality of our proposed broadcasting algorithm ( algorithm [ alg : arbitrary ] ) .",
    "in this section we present our broadcasting algorithm for random networks .",
    "our algorithm is based on the algorithm proposed in @xcite .",
    "the algorithm completes broadcasting in @xmath4 rounds w.h.p , which matches the result in @xcite .",
    "let @xmath63 . throughout the analysis",
    ", we always assume that @xmath64 is sufficiently large , and @xmath65 for a sufficiently large constant @xmath66 .",
    "note that the later condition is necessary for the network to be connected . in the following ,",
    "every node that already got the message is called _",
    "informed_. an informed node @xmath42 can be in one of two different states .",
    "@xmath42 is called _ active _ as soon as it is informed , and it will become _ passive _ ( meaning it will never transmit a message again ) as soon as it tried once to send the message .",
    "the state of the source is set to _",
    "every _ active _ node @xmath42 transmits once and becomes _",
    "passive_.    every active node transmits with probability @xmath67 and becomes _ passive_. the status of @xmath42 is set to _",
    "every active node transmits with probability @xmath22 a node that has transmitted the message becomes _",
    "passive_. every active node transmits with probability @xmath68 a node that has transmitted the message becomes _",
    "passive_.    the main idea of the algorithm is as follows .    1 .",
    "the goal of phase 1 is to inform @xmath69 nodes w.h.p .",
    "( lemma [ le : phase1 - 2 ] ) . to prove this result",
    ", we repeatedly use lemma [ le : phase1 - 1 ] , which bounds the number of active nodes after each round .",
    "2 .   the goal of phase 2 is to inform @xmath70 nodes w.h.p .",
    "when @xmath71 ( lemma [ le : phase2 ] ) .",
    "for the rest case we do not need phase 2 .",
    "the goal of phase 3 is to inform every remaining uninformed node in the network w.h.p .",
    "( lemma [ le : phase3 ] ) .",
    "we prove the following theorem .",
    "[ thm : main ] if @xmath72 for a sufficiently large constant @xmath66 , algorithm [ alg : broadcast ] completes broadcasting in @xmath4 rounds , w.h.p",
    ". furthermore , every node performs at most one transmission and the expected total number of transmissions is @xmath73 .",
    "the number of transmissions performed in phase 1 is @xmath74 since @xmath75 .",
    "the ( expected ) number of transmissions in each round of phase 2 and 3 is bounded by @xmath76 .",
    "hence , the expected total number of transmissions is @xmath73 .",
    "to proof theorem [ thm : main ] it remains to bound the broadcasting time .",
    "this part of the proof is split into several lemmata .",
    "let @xmath77 be the set of active nodes at the beginning of round @xmath78 , @xmath79 be the set of nodes which transmit in round @xmath78 .",
    "let @xmath80 be the number of not informed nodes at the beginning of round @xmath78 .",
    "we first prove the following simple observations which will be used in the later sections .",
    "[ obv : relation ]     1 .",
    "@xmath81 $ ] , @xmath82 .",
    "@xmath81 , n_t = n - \\left(\\sum_{i=1}^{t-1 } { |q_i| } + |u_t| \\right).$ ] 3 .",
    "@xmath83 , @xmath84 , @xmath85 .",
    "@xmath86 for all @xmath87 with @xmath88 .",
    "@xmath89 is true since in phase 1 of our algorithm every active node transmits . to prove @xmath90 ,",
    "note that for any informed node @xmath42 at round @xmath78 , there are only two possibilities : either @xmath42 transmits in some round between @xmath91 and @xmath92 ( i.  e.  , @xmath93 $ ] ) , or @xmath42 must be active at round @xmath78 , ( i.  e.  , @xmath94 ) . for @xmath95 , simply note that nodes being active in round @xmath96 will remain active until round @xmath78 if they do not transmit in the meantime . for @xmath97 , note that every node only transmits at most once per broadcast .",
    "observation [ obv : relation](4 ) helps us to argue that the random experiments used later in the analysis are independent from each other . in the following , we first prove lemma [ le : phase1 - 1 ] ( 1 ) showing that in each round of phase 1 the number of active nodes grows by a factor of @xmath98 , w.h.p .",
    "the second part of lemma [ le : phase1 - 1 ] strengthen the results if the number of active nodes is between @xmath99 $ ] .",
    "[ le : phase1 - 1 ] if @xmath100 and @xmath101 ( phase 1 ) , then the following statements are true with a probability @xmath102 .    1 .   for @xmath103 , @xmath104 .",
    "2 .   for @xmath105 ,",
    "@xmath106 .",
    "we show this result by bounding the expected number of informed nodes in each round and then using chernoff bounds . for a detailed proof",
    "see appendix [ pf : phase1 - 1 ] .",
    "now , we are ready to show the following concentration result for @xmath107 , the number of active nodes after phase 1 .    [ le : phase1 - 2 ] let @xmath108 , and @xmath109 .",
    "after phase 1 we have with a probability of @xmath110 @xmath111    by observation [ obv : relation](4 ) , the random experiments performed in different rounds are independent from each other .",
    "hence , we can repeatedly use lemma [ le : phase1 - 1 ] to bound @xmath107 .",
    "[ [ case-1-p - ge - n-45 . ] ] case 1 : @xmath112 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    since @xmath113 , @xmath114 . using lemma [ le : phase1 - 1]@xmath89 for @xmath115 rounds , we get @xmath116 with a probability @xmath117 . to show that we can use lemma [ le : phase1 - 1]@xmath89 for round @xmath118 $ ]",
    ", we note that @xmath119 since @xmath120 and @xmath121 .",
    "the lemma now follows from the choices of @xmath122 and @xmath123 .",
    "[ [ case-2-n-45-p - delta - log - n - n . ] ] case 2 : @xmath124 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in this case we have @xmath125 . using lemma [ le : phase1 - 1]@xmath89 for three rounds ,",
    "we get @xmath126 w.h.p since @xmath127 .",
    "again , we can use lemma [ le : phase1 - 1]@xmath89 for the first three rounds .",
    "after three rounds , the condition of lemma [ le : phase1 - 1]@xmath90 is w.h.p . fulfilled . in the following",
    "we show that @xmath128 does not increase too fast such that we are allowed to use lemma [ le : phase1 - 1]@xmath90 for round @xmath129 , i.  e.   @xmath130 . for the first inequality ,",
    "note that @xmath128 does not decrease for large values of @xmath131 ( lemma [ le : phase1 - 1]@xmath89 ) , w.h.p .",
    "for the second inequality we use lemma [ le : phase1 - 1]@xmath89 for the first three rounds and then lemma [ le : phase1 - 1]@xmath90 for the remaining @xmath132 rounds , we get @xmath133 the first inequality uses the fact that @xmath134 .",
    "the second inequality uses that @xmath135 and @xmath136 .",
    "the last inequality holds because @xmath137 by definition of @xmath115 and @xmath138 .",
    "this shows that we can use lemma [ le : phase1 - 1]@xmath90 for round @xmath129 .",
    "similarly , we get @xmath139 the last inequality holds by @xmath140 .",
    "this shows that we can use lemma [ le : phase1 - 1]@xmath89 for round @xmath115 .",
    "now we are ready to bound @xmath107 .",
    "we use lemma [ le : phase1 - 1]@xmath89 for three rounds , lemma [ le : phase1 - 1]@xmath90 for the next @xmath141 rounds , and then lemma [ le : phase1 - 1]@xmath89 once again .",
    "now we applying the union bound and get with a probability @xmath142    @xmath143 since @xmath144 , and @xmath145 , we have @xmath146 similarly , we get @xmath147 this shows that with a probability @xmath117 we have @xmath148      next we show a result for phase 2 . if @xmath149 for a sufficiently large constant @xmath66 , lemma [ le : phase2 ] shows that after phase 2 the number of active nodes is @xmath14 , w.h.p .",
    "for the rest case we do not need phase 2 .    [",
    "le : phase2 ] let @xmath150 . if @xmath151 for a sufficiently large constant @xmath66 , after phase 2 ( round @xmath152 ) we have with a probability of @xmath110 , @xmath153 .",
    "phase 2 only consists of round @xmath152 in which every active node transmits with probability @xmath67 .",
    "we first prove bounds for @xmath154 .",
    "by lemma [ le : phase1 - 2 ] , @xmath155 = |u_{t+1 } | \\cdot 1/(d^t p ) > c_1/p.\\ ] ] using chernoff bounds we get @xmath156      > 1 - 2e^{-e[|q_{t+1}| ] /4 } > 1 - 2e^{- ( c_1/p ) /4 } = 1 - o(n^{-3}).\\ ] ]    now we fix an arbitrary but not informed node @xmath42 .",
    "we show the probability to inform @xmath42 in phase 2 is constant . in order to inform @xmath42",
    ", @xmath42 must be connect to exactly one node in @xmath157 . hence , using equation [ eq : qt+1 ] together with the fact that @xmath158 , we get @xmath159     = |q_{t+1}| p ( 1-p)^{|q_{t+1}| - 1 } \\ge |q_{t+1}| p ( 1-p)^{-2c_2/p } > c_1 4^{-2c_2 } /2.\\ ] ] next we show that @xmath160 , w.h.p .",
    "first note that we can assume that @xmath161 .",
    "otherwise , the lemma is already fulfilled by observation [ obv : relation]@xmath95 and equation [ eq : qt+1 ] .",
    "this holds since @xmath162 ( @xmath163 ) .",
    "now , using observation [ obv : relation]@xmath90 , @xmath164 with a probability @xmath165 .",
    "the first equation follows since @xmath166 and by lemma [ le : phase1 - 1 ] , @xmath167 .",
    "the second inequality holds since @xmath168 , @xmath144 and @xmath169 .",
    "the third inequality follows since @xmath170 for a sufficiently large constant @xmath66 .",
    "next we estimate the expected number of active nodes at the end of phase 2 .",
    "@xmath171 = n_{t+1 } \\pr [ v \\mbox { is informed } ] \\ge ( c_1 4^{-2c_2 } /4 ) n.\\ ] ] note that the events that different not informed nodes are connected to exactly one node in @xmath172 are independent from each other . also , note",
    "that , due to observation [ obv : relation](4 ) , each of these events is evaluated only once . using chernoff bounds we get @xmath173 \\le \\pr [ |u_{t+2}| \\le 2 e [ |u_{t + 2}| ] ] \\le e^{-e[|u_{t + 2}|]/4 } = o(n^{-3}).\\ ] ]      next , we show that after running phase 3 for @xmath4 rounds , every node is informed w.h.p .",
    "note that even at the end of phase 3 , we still have a considerable amount of active nodes because in each round of phase 3 , only a small number of active nodes will transmit and become passive afterwards .",
    "[ le : phase3 ] after running phase 3 for @xmath174 rounds , every node is informed with a probability of @xmath175 .",
    "let @xmath176 .",
    "fix some uninformed node @xmath42 and let @xmath177 be the number of active neighbours of @xmath42 at the beginning of step @xmath78 of phase 3 . for any @xmath178 ,",
    "let @xmath179 be the number of active neighbours of @xmath42 that transmitted before step @xmath78 of phase 3 .",
    "note that @xmath180 .",
    "let @xmath181 be the probability to inform node @xmath42 in step @xmath78 . in the following we consider two cases for different values of @xmath18 .",
    "[ [ case-1-n-25-ge - p - delta - log - n - n - for - a - sufficiently - large - constant - delta . ] ] case 1 : @xmath182 for a sufficiently large constant @xmath66 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we first show that @xmath183 , w.h.p .. note that @xmath184 is the number of neighbours of @xmath42 that are activated in phase 2 . since the probability that @xmath42 is connected to any node in @xmath185 ( the set of nodes that are activated in phase 2 ) is @xmath18 , @xmath186 = |u_{t+2}| p > cnp = c d$ ] with a probability at least @xmath187 by lemma [ le : phase2 ] .",
    "using chernoff bounds we get , @xmath188 \\le \\pr [ a_0(v ) < e[a_0(v)]/2 ] \\le e^{-e[a_0(v ) ] ( 1/2)^2 / 2 } = o(n^{-3}).\\ ] ] the last inequality holds since @xmath186 > c np$ ] with @xmath189 for a sufficiently large constant @xmath66 .",
    "similarly , we can show that @xmath190 = o(n^{-3}).\\ ] ]    since every active neighbour of @xmath42 transmits with probability @xmath22 in each round of phase 3 , @xmath191 \\le t a_0(v)/d",
    "\\le a_0(v ) / ( 4e)$ ] since @xmath192 and @xmath21 with @xmath170 for a sufficiently large constant @xmath66 . using @xmath193",
    "< ( e / a)^{a np}$ ] we get , @xmath194 \\le ( e / ( 2e))^{a_0(v)/2 } = o(n^{-3}).\\ ] ] the last inequality follows since by equation [ eq : phase3 - 1 ] , @xmath195 .",
    "consequently , it follows by equation [ eq : phase3 - 1 ] and [ eq : phase3 - 2 ] that @xmath196 with a probability at least @xmath117 . using @xmath197 we get with a probability at least @xmath198 , @xmath199 given this , the probability that @xmath42 is not informed in @xmath200 steps is at most @xmath201 .",
    "[ [ case-2-p - n-25 . ] ] case 2 : @xmath202 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in this case @xmath203 and using chernoff bounds we can show that @xmath204 with a probability at least @xmath165 . next we show that @xmath205 w.h.p . since the probability that @xmath42 is connected to any active node in @xmath206 is @xmath18 , @xmath186 = |u_2| p   \\ge 3d p/4 $ ] with a probability at least @xmath207 . using chernoff bounds",
    "we get , @xmath208 \\le \\pr [ a_0(v ) < ( 2/3 ) \\cdot e[a_0(v ) ] ] \\le e^{- e[a_0(v ) ] ( 1/3)^2 / 2 } = o(n^{-3}).\\ ] ] similarly , we get @xmath209 = o(n^{-3})$ ] .",
    "the rest proof is very similar to case 1 . in particular",
    ", we can show that with a probability at least @xmath117 , @xmath210 .",
    "hence , with a probability at least @xmath117 , @xmath211 thus , the probability that node @xmath42 is not informed at step @xmath28 of phase 3 is @xmath212 .",
    "finally our lemma follows due to the union bound .",
    "in this section we analyse a gossiping algorithm specialised on random networks . furthermore , note that similar to @xcite , we can obtain a gossiping algorithm with running time @xmath50 by combining the framework proposed in @xcite and the broadcasting algorithm in section [ se : rand - broadcast ] .",
    "however , the following algorithm [ alg : gossip ] has a better running time of @xmath2 , and it uses @xmath4 transmissions w.h.p .. similar to @xcite , we assume that nodes can join messages originated from different nodes together to one large message , and we also assume that this message can be sent out in a single time step .",
    "let @xmath213 be the message that is send out by node @xmath41 in round t. then @xmath214 is the message originated in @xmath41 .",
    "every node transmits with probability @xmath22 .",
    "every node @xmath41 joins @xmath215 and any incoming messages to @xmath216 .",
    "note that @xmath217 is the average node degree , and diameter @xmath218 .",
    "also , note that here nodes do not become passive after transmitting once ( as it was the case in our broadcasting algorithm in section [ se : rand - broadcast ] ) .",
    "it is easy to see that the algorithm can be transformed into a dynamic gossiping algorithm .",
    "all that has to be done is to provide every message with a time stamp ( generation time ) , and to delete old messages out of the @xmath219 messages .",
    "[ thm : gossip ] assume @xmath100 for a sufficiently large constant @xmath66 .",
    "then , with a probability @xmath220 , algorithm [ alg : gossip ] completes gossiping in @xmath2 , and every nodes performs @xmath4 transmissions w.h.p",
    "..    first we bound the gossiping time .",
    "let @xmath221 ( @xmath222 ) be an arbitrary pair of nodes .",
    "let @xmath115 be the time to send the gossiping message @xmath214 from @xmath41 to @xmath42 .",
    "next , we show that @xmath115 is w.h.p . at most @xmath223 .",
    "fix an arbitrary shortest path @xmath224 of length @xmath225 from @xmath41 to @xmath42 .",
    "let @xmath226 be the random variable representing the number of rounds that it takes node @xmath227 to forward the first message containing @xmath214 from @xmath227 to @xmath228 .",
    "since @xmath41 starts to submit its own message immediately in round 1 , and every node @xmath45 who receives a broadcast message in step @xmath96 joins the message to its message @xmath229 , @xmath42 will get @xmath214 in step @xmath230 .",
    "it is easy to see that the random variables @xmath231 are independent from each other . to bound @xmath115 , we first prove a result which is similar to lemma @xmath232 in @xcite .",
    "[ geoproof ] let @xmath233 be a sequence of geometrically distributed random variables with parameter @xmath234 , i.  e.  , @xmath235 = 1/(16d ) ( 1 - 1/(16d))^{k-1}$ ]",
    ". then @xmath236 \\le \\pr [ b > k]$. } \\sum_{i=1}^l{y_i}$ ] with a probability at least @xmath110 .",
    "the proof can be found in section [ geo ] of the appendix .",
    "in this section we consider broadcasting on arbitrary networks with diameter @xmath5 .",
    "czumaj and rytter ( @xcite ) propose a randomised algorithm with @xmath237 broadcasting time .",
    "their algorithm can easily be transformed into an algorithm with the same runtime and an expected number of @xmath54 transmissions per node .",
    "the only modification necessary is to stop nodes from transmitting after a certain number of rounds ( counting onwards from the round they got the message for the first time ) . in czumaj and rytter s algorithm ,",
    "each active node transmits with probability of @xmath238 per round .",
    "it informs an arbitrary neighbour @xmath41 ( i.  e.   it transmits the message _ and _ is the only neighbour of @xmath41 that transmits in that round ) with a probability of @xmath239 per round .",
    "hence , to get a high probability bound , every node has to try to send a message for @xmath240 rounds .",
    "since an active node transmits with probability @xmath241 , the total expected number of transmissions is @xmath242 per node . similarly , the algorithm of @xcite for unknown diameter can be transformed into an algorithm with an expected number of @xmath243 messages per node .",
    "unfortunately , in general the expected number of @xmath243 transmissions per node can not be improved without increasing the broadcasting time ( see corollary [ cor : lower - bound ] ) . under the assumption that the network diameter @xmath5 is known in advance",
    ", we propose a new randomised oblivious algorithm with broadcasting time @xmath244 that uses only an expected number of @xmath245 transmissions per node ( see section [ se : ub - arbitrary ] ) .",
    "note that our algorithm achieves the same broadcasting time as the algorithm in ( @xcite ) . in section [ se : lb - arbitrary ] , we prove a matching lower bound on the number of transmissions ( theorem [ thm : lb2 ] ) which indicates that our proposed algorithm is optimal in terms of the number of transmissions . in theorem [ thm :",
    "tradeoff ] we show a trade - off between broadcasting time and number of transmissions .      in this section we show that , if the graph diameter @xmath5 is known in advance , the number of transmissions can be reduced from @xmath246 to @xmath247 .",
    "the improvement is due to a new random distribution which is defined in figure [ fig : prob ] .",
    "let @xmath248 .",
    "the distribution we use to generate the randomised sequence is denoted by @xmath249 , and the distribution used in section 4.1 of @xcite is denoted by @xmath250 .",
    "see figure [ fig : prob ] for a comparison of the two distributions .",
    "note that @xmath251 , @xmath252 and @xmath253 .",
    "@xmath254    @xmath255    the status of @xmath41 is set to _",
    "we prove the following theorem .",
    "note that the broadcasting time is optimal according to the lower bounds shown in @xcite and @xcite .",
    "[ thm : upper - bound ] algorithm [ alg : arbitrary ] completes broadcasting in @xmath256 rounds with probability at least @xmath257 . the expected number of messages per node is @xmath258 .",
    "each node is active for @xmath242 rounds . in every round ,",
    "an active node transmits with a probability of @xmath241 .",
    "hence , the expected total number of transmissions is @xmath259 per node .    to show that every node receives the broadcast message , fix a round @xmath96 , an arbitrary active node @xmath42 and one of its neighbors @xmath45 .",
    "assume @xmath45 has @xmath260 active neighbors in round @xmath96 and let @xmath261 such that @xmath262 .",
    "if every active neighbor of @xmath45 sends with probability @xmath263 ( i.  e.   @xmath264 ) , @xmath45 is informed with probability at least @xmath265 according to lemma 3.2 in @xcite . for any @xmath266 , @xmath267 , @xmath268 with probability at least @xmath269 .",
    "hence , the probability to inform @xmath45 is at least @xmath270 per round . using chernoff bounds",
    "we can show that @xmath42 can successfully inform all its neighbours , w.h.p ..    to bound the broadcasting time , we compare the runtime of our algorithm with the runtime of the algorithm for shallow networks in @xcite .",
    "any send probability that is chosen by the algorithm in @xcite is chosen with at least half the probability by our algorithm .",
    "thus , we can use a proof that is similar to the proof of theorem @xmath271 in @xcite to show our result .",
    "finally , we demonstrate that there is a tradeoff between the expected number of transmissions and the broadcasting time .",
    "[ thm : tradeoff ] let @xmath272 .",
    "algorithm [ alg : arbitrary ] finishes broadcasting in @xmath273 rounds w.h.p .. the expected number of transmissions is @xmath274 per node .",
    "every node is active for @xmath242 rounds .",
    "moreover , the expected number of transmissions an active node performs in every round is @xmath275 .",
    "hence the expected total number of transmissions is @xmath276 per node . since for all @xmath277 , @xmath278",
    ", we can show ( similar to the proof of theorem [ thm : upper - bound ] ) that every node receives the broadcasting message w.h.p ..    it remains to bound the broadcasting time .",
    "our proof is similar to the proof of theorem @xmath271 in @xcite .",
    "we first fix some shortest path @xmath279 of length @xmath280 from the source to an arbitrary node .",
    "then , we partition all nodes into @xmath281 disjoint layers with respect to that path . we assign a node @xmath41 to layer @xmath282 , if node @xmath283 is the highest ranked node on the path that @xmath41 has an edge to . in the following , a layer is called _ small _ , if its size is smaller than @xmath284 , otherwise it is called _",
    "large_.    for an arbitrary small layer , since @xmath285 , @xmath286 , use a similar argument as in theorem [ thm : upper - bound ] , we get that the probability to inform some node in the next layer is at least @xmath287 . hence the expected time spent on any small layer",
    "is @xmath288 .",
    "since there are at most @xmath5 layers and by applying the concentration bound in lemma @xmath289 of @xcite , we get that the total time spent on all small layers is @xmath290 w.h.p ..    for an arbitrary large layer ( of size @xmath291 ) , since @xmath292 , @xmath293 , similar to theorem @xmath271 in @xcite , we can show that the probability to inform some node in the next layer is @xmath294 .",
    "hence , the expected time spent on a large layer is @xmath295 .",
    "consequently , the total expected time spent on all large layers is @xmath296 since @xmath297 . applying lemma @xmath289 in @xcite once again",
    ", we obtain the high probability bound .      in this section",
    "we show two lower bounds for oblivious broadcasting algorithms .",
    "observation [ obv : lb1 ] , shows a lower bound on the expected number of transmissions for any randomised oblivious ( every node uses the same algorithm ) broadcasting algorithm .",
    "we call a probability distribution _ time - invariant _ if it does not depend on the time @xmath78",
    ". theorem [ thm : lb2 ] shows a lower bound on the expected number of transmissions of any optimal randomised oblivious algorithm using a time - invariant distribution .",
    "[ obv : lb1 ] let @xmath298 be an oblivious broadcast algorithm .",
    "then , for every @xmath1 there exists a network with @xmath59 nodes such that @xmath298 needs at least @xmath55 transmissions to complete broadcasting with a probability of at least @xmath56 .    the proof can be found in section [ observ ] of the appendix .",
    "next , we show a matching lower bound result on the number of transmissions .",
    "this result holds for a group of randomised oblivious algorithms with optimal ( i.  e.   @xmath299 ) broadcasting time ( e.  g  .",
    "the algorithm in @xcite ) .",
    "[ thm : lb2 ] let @xmath300 , let @xmath301 be constants , and fix an arbitrary @xmath302 .",
    "let @xmath298 be an oblivious broadcast algorithm using a time - invariant probability distribution @xmath249 .",
    "for every @xmath303 , there is a network with @xmath59 nodes and diameter @xmath5 , such that @xmath298 requires an expected number of at least @xmath304 transmissions per node in order to finish broadcasting in @xmath61 rounds with probability at least @xmath62 .",
    "we can assume that @xmath305 , otherwise this result can be obtained directly from observation [ obv : lb1 ] since @xmath306 .",
    "we construct a layered network ( see figure [ fig : lowerbound ] ) consisting of two subgraphs @xmath307 and @xmath308 . @xmath307",
    "has @xmath58 layers , namely @xmath309 , where @xmath310 is a star consisting of one center node @xmath311 and @xmath312 leaf nodes .",
    "every leaf node in @xmath313 has an edge to the center @xmath314 of @xmath315 , for @xmath316 .",
    "@xmath317 is a path of length @xmath318 . to connect @xmath307 and @xmath308 , we connect every node of the star @xmath319 to the first node of @xmath308 , also denoted as @xmath320",
    "note that our network has @xmath321 nodes and diameter @xmath5 .",
    "[ fig : lowerbound ]    we assume that @xmath122 is the originator of the broadcast . the purpose of @xmath307 is to show that every informed node in @xmath43 must be active for at least @xmath322 rounds in order to complete broadcasting with probability @xmath257 . more specifically ,",
    "no matter what @xmath249 is , there is always a star @xmath313 such that the probability to inform @xmath314 is at most @xmath323 .",
    "since our distribution is time invariant and every node does not know which star it belongs to , every node in the network needs to be active for at least @xmath324 rounds .",
    "let @xmath325 be the mean of distribution @xmath249 and @xmath326 be the set of outcomes of @xmath249 .",
    "next , we use @xmath308 to argue that in order to finish broadcasting in @xmath327 rounds , @xmath325 , mean of @xmath249 , must be at least @xmath328 . hence , the total expected number of transmissions per node is at least @xmath329 .",
    "let @xmath330 be the event that @xmath314 is informed in round @xmath331 under the condition that every leaf node of @xmath313 is active ( note that they are always activated at the same time ) .",
    "let @xmath332 be the random variable that represents the probability chosen at round @xmath331 .",
    "note that @xmath332 has distribution @xmath249 . for any @xmath333 ,",
    "let @xmath334 $ ] be the probability to inform @xmath314 if @xmath335 . since @xmath314 is informed if exactly one of the @xmath312 leaf nodes of @xmath313 transmits we get    @xmath336 = 2^i q ( 1 - q)^{2^i-1 } < 2^i q e^{-(2^i-1)q}.\\ ] ]    observe that @xmath337 = \\sum_{q \\in ran(\\alpha)}{(\\pr [ q_{t_i } = q ] \\pr[a_i | q_{t_i } = q])}$ ] .",
    "we get , @xmath338 }   & = & \\sum_{i=1}^{\\log n } \\sum_{q \\in ran(\\alpha ) } { \\left ( \\pr [ q_{t_i } = q ] \\pr[a_i | q_{t_i } = q ] \\right ) } \\\\                                  & = & \\sum_{q \\in ran(\\alpha ) } { \\left ( \\pr [ q_{t_i } = q ] \\sum_{i=1}^{\\log n } { \\pr[a_i | q_{t_i } = q ] } \\right ) }                  \\le \\left ( \\sum_{q \\in ran(\\alpha ) } { \\pr [ q_{t_i } = q ] } \\right ) \\frac{1}{\\ln 2 }                   = \\frac{1}{\\ln 2}.\\end{aligned}\\ ] ]    for the third inequality , we use equation [ eq : prob ] and @xmath339 . consequently , @xmath340 } \\le \\left ( \\sum_{i=1}^{\\log n } { \\pr[a_i ] } \\right ) / \\log n \\le \\frac{1}{\\ln 2 \\log n } = \\frac{1}{\\ln n}.\\ ] ] let @xmath341}$ ] .",
    "consequently , in order to complete broadcasting with probability at least @xmath342 , every leaf node of @xmath343 must be active for at least @xmath344 rounds . in the following we show @xmath345 using @xmath308 .",
    "first note that @xmath346 since @xmath347 . for any @xmath348 ,",
    "let @xmath226 be the number of rounds that @xmath283 is the highest ranked node on the path that is informed .",
    "note that @xmath226 is geometrically distributed with probability @xmath325 , we have @xmath349 = l \\cdot e[t_i ] = l/\\mu$ ] .",
    "hence , in order to inform @xmath350 within @xmath351 steps ( even expectedly ) , we need @xmath345 since @xmath352 .",
    "we have shown that every node in the network needs to be active for @xmath344 rounds while in each round , the expected number of transmissions it performs is at least @xmath328 .",
    "hence , the total expected number of transmissions per node is @xmath353 .",
    "setting @xmath354 in the network constructed above , we immediately get the following corollary .    [",
    "cor : lower - bound ] there exists a network with @xmath59 nodes such that any randomised oblivious broadcasting algorithm that finishes broadcasting in @xmath355 rounds with probability at least @xmath342 requires an expected number of @xmath356 transmissions .    1    , _ proc .",
    "32nd acm symposium on theory of computing ( stoc ) _ , portland , oregon , usa , pp .  171180 , 2000 .    ,",
    "290298 , 1991 .",
    "1 , pp .  104 - 126 , 1992 .    .",
    "the diameter of random graphs .",
    "_ ieee transaction on information theory _",
    "285288 , 1990 .    , pp .  253 - 267 , 2006 .    fast broadcasting and gossiping in radio networks . _ proc .",
    "41st annual ieee symposium on foundations of computer science ( focs ) _ , redondo beach , ca , usa , pp .  575581 , 2000 .    , a randomized algorithm for gossiping in radio networks .",
    "_ proc  7th annual international computing and combinatorics conference ( cocoon ) _ , pp .",
    "483492 . 2001",
    "the diameter of random sparse graphs .",
    "_ adv . in appl .",
    "257279 , 2001 .    .",
    "selective families , superimposed codes , and broadcasting on unknown radio networks .",
    "12th acm symposium on discrete algorithms ( soda ) _ ,",
    "washington , d.c .",
    ", usa , pp .  709718 , 2001 .",
    "broadcasting algorithms in radio networks with unknown topology .",
    "_ journal of algorithms _ , vol .",
    "115143 , 2006 .    .",
    "17th acm symposium on parallelism in algorithms and architectures ( spaa ) _ , las vagas , nv , usa , pp .",
    "309315 , 2005    .",
    "18th acm symposium on parallelism in algorithms and architectures ( spaa ) _ , cambridge , massachussetts , usa , pp .",
    "148157 , 2006 .    , seattle , wa , usa , pp .",
    "174185 . , 1999 .",
    ", hansestadt lbeck , germany , pp .  363 - 374 , 1997 .    .",
    "deterministic broadcasting time in radio networks of unknown topology .. _ proc .",
    "43rd annual ieee symposium on foundations of computer science ( focs ) _ , vancouver , bc , canada , pp .  6372 , 2002 .    .",
    "broadcasting in undirected ad hoc radio networks .",
    "_ proc  24th symposium on principles of distributed computing ( podc ) _ boston , massachusetts , usa , pp .",
    "7382 , 2003 .    .",
    "an @xmath357 lower bound for broadcast in radio networks . , _ siam journal on computing _ , vol .",
    "3 , pp .  702712 , 1998 .    on randomized broadcasting and gossiping in radio networks . _",
    "proc  8th annual international computing and combinatorics conference ( cocoon ) _ , singapore , pp .  340349 , 2002 .    .",
    "the diameter of random massive graphs . _ proc .",
    "12th acm symposium on discrete algorithms ( soda ) _",
    ", washington , d.c .",
    ", usa , pp .",
    "912921 , 2001 .    ,",
    "boston , ma , usa , pp .   131 - 146 , 2002 .    , 2005 .    .",
    "_ algorithmica _ , vol .",
    "1 , pp .  9396,2003 .",
    "* appendix *",
    "here we present a version of chernoff bounds , which can be found , for example , in , @xcite .",
    "let @xmath358 be independent bernoulli random variables and let @xmath359 and @xmath360 $ ] .",
    "then we have ,    1 .",
    "< e^{-\\mu \\epsilon^2/2}$ ] , for @xmath362 .",
    "2 .   @xmath363",
    "< e^{-\\mu \\epsilon^2/3}$ ] , for @xmath364 .",
    "3 .   @xmath365 > 1 - 2 e^{-\\mu \\epsilon^2/3}$ ] , for @xmath362 .",
    "we consider two cases of different values of @xmath18 . if @xmath366 , we have @xmath367 and every node will have expectedly @xmath368 neighbours .",
    "the result now follows from a simple application of chernoff bounds .",
    "if @xmath369 , we fix an arbitrary node @xmath41 and a round @xmath370 in phase 1 .",
    "first we bound @xmath371 , the probability that @xmath41 is informed in round @xmath78 , i.  e. @xmath41 is connected to _ exactly _ one node in @xmath77 .",
    "@xmath372 here , the first inequality uses the condition @xmath373 . to see the second one ,",
    "note that @xmath374 .",
    "next , we show @xmath80 , the number of not informed nodes at time @xmath78 , is larger than @xmath375 . by observation [ obv : relation]@xmath90 , @xmath376 here , the first inequality is true by observation [ obv : relation]@xmath89 and @xmath377 .",
    "the second one uses the condition @xmath378 and @xmath379 .",
    "the third inequality uses @xmath170 .",
    "hence , @xmath380 = n_t q > ( n/2 ) \\cdot q \\ge ( n/2 ) \\cdot p|u_t|/4 = d|u_t|/8,\\ ] ] since @xmath381 and @xmath382 .",
    "note that the events to be connected to exactly one node in @xmath77 are independent for different not informed nodes .",
    "also , note that each event is only evaluated once due to observation [ obv : relation](4 ) . using chernoff bounds we get @xmath383      \\le   \\pr [ |u_{t+1}| \\le e[|u_{t+1}|]/2 ]        \\le e^{-d |u_t|/64 } = o(n^{-4}).\\ ] ] the last inequality uses @xmath217 with @xmath384 for a sufficiently large constant @xmath66 .",
    "consequently @xmath385 with a probability @xmath386 .",
    "using a similar approach , we can prove that @xmath387 with a probability @xmath386 .",
    "this finished the proof of part 1 of the lemma .    to prove part 2 we first need a tighter bound on @xmath371 . by equation [ equq ] ,",
    "@xmath388 next we bound @xmath80 .",
    "using equation [ nt ] with @xmath389 and @xmath390 we get @xmath391 now , we obtain the following lower bound for @xmath392 $ ] , @xmath380= n_t q > \\left ( 1 - 1 / \\log n \\right ) ^2 \\cdot d |u_t| > \\left ( 1 - 2 /\\log",
    "n \\right ) \\cdot d |u_t|.\\ ] ] for an upper bound on @xmath392 $ ] we use @xmath393 and @xmath394 to get @xmath380 = n_t q < n p |u_t| = d |u_t|.\\ ] ] using chernoff bounds together with the assumption that @xmath395 , we get @xmath396 > 1 - 2e^{-\\frac{e[|u_{t+1}|]}{4 \\log^2 n } } = 1 - o\\left ( n^{-4 }",
    "\\right ) .\\ ] ]      the proof is similar to the proof of lemma @xmath232 in @xcite .",
    "all that we have to do is to bound the probability @xmath371 that a node successfully sends a message to a fixed neighbour .",
    "the expected degree of every node is @xmath3 and using chernoff bounds we can show the degree of every node is at most @xmath397 with a probability @xmath398 . hence , with a probability @xmath399 , we have @xmath400    now it remains to bound @xmath401 $ ] .",
    "similar to the proof of lemma @xmath289 of @xcite , applying the standard relation of geometric distribution and binomial distributions , and using chernoff bounds on the corresponding binomial distribution , we get @xmath402      \\le \\pr \\left [ { \\mathbb b } ( 128d \\log n , 1/(16d ) ) < l \\right ]      \\le e^{-   ( 7/8)^2 \\cdot 8\\log n / 2 } < e^{- 3 \\log n } = o(n^{-3}).\\ ] ] the third inequality holds since @xmath403 .",
    "the bound on the gossiping time follows by the union bound and the fact that there are in total @xmath404 source - destination pairs .",
    "next we bound the number of transmissions .",
    "let @xmath42 be an arbitrary node and denote @xmath405 to be the number of transmissions performed by @xmath42 .",
    "note that @xmath406 = 128 \\log n$ ] since in each round , every node transmits with probability @xmath22 and our algorithm has in total @xmath407 rounds . using chernoff bounds we get that @xmath408 with probability @xmath409 . by the union bound ,",
    "we get with a probability @xmath175 , none of the nodes performs more than @xmath410 transmissions .",
    "we construct a network with @xmath411 nodes .",
    "@xmath412 is the node initiating the broadcast , and @xmath413 are the destination nodes . @xmath412",
    "has an edge to @xmath414 intermediate nodes @xmath415 . for all @xmath416",
    ", @xmath417 connects to both @xmath418 and @xmath419 .",
    "let us assume that @xmath412 informs @xmath420 in round @xmath421",
    ". now fix some arbitrary @xmath422 . in round @xmath423 ,",
    "let @xmath424 be the send probability used by the algorithm . for all @xmath425 , the probability to inform node @xmath417 in round",
    "@xmath96 is @xmath426 . due to symmetry",
    "we can assume that @xmath427 , resulting in @xmath428 .",
    "hence ,    @xmath429    & =   & \\prod_{r = t_1 + 1}^t { \\left ( 1 - 2q_r ( 1 - q_r ) \\right ) } \\\\",
    "> \\prod_{r = t_1 + 1}^t { ( 1 - q_r)^2 }       & \\ge & \\prod_{r = t_1 + 1}^t { 4^{-2 q_r } } = 2^{-4 \\sum_{r = t_1 + 1}^t{q_r}}.\\end{aligned}\\ ] ]    now it is easy to see that , to inform @xmath417 with probability @xmath430 , we need @xmath431 . note that @xmath432 is the expected number of transmissions that @xmath227 and @xmath283 perform between round @xmath433 and @xmath115 .",
    "the total number of transmissions performed by all @xmath414 intermediate nodes is at least @xmath434 ."
  ],
  "abstract_text": [
    "<S> this paper studies broadcasting and gossiping algorithms in random and general adhoc networks . </S>",
    "<S> our goal is not only to minimise the broadcasting and gossiping time , but also to minimise the _ energy consumption _ , which is measured in terms of the total _ number of messages _ </S>",
    "<S> ( or _ transmissions _ ) sent . </S>",
    "<S> we assume that the nodes of the network do not know the network , and that they can only send with a fixed power , meaning they can not adjust the areas sizes that their messages cover . </S>",
    "<S> we believe that under these circumstances the number of transmissions is a very good measure for the overall energy consumption .    for random networks , we present a broadcasting algorithm where every node transmits at most once . </S>",
    "<S> we show that our algorithm broadcasts in @xmath0 steps , w.h.p , where @xmath1 is the number of nodes . </S>",
    "<S> we then present a @xmath2 ( @xmath3 is the expected degree ) gossiping algorithm using @xmath4 messages per node .    for general networks with known diameter @xmath5 , we present a randomised broadcasting algorithm with optimal broadcasting time @xmath6 that uses an expected number of @xmath7 transmissions per node . </S>",
    "<S> we also show a tradeoff result between the broadcasting time and the number of transmissions : we construct a network such that any oblivious algorithm using a time - invariant distribution requires @xmath8 messages per node in order to finish broadcasting in optimal time . </S>",
    "<S> this demonstrates the tightness of our upper bound . </S>",
    "<S> we also show that no oblivious algorithm can complete broadcasting w.h.p . using @xmath9 messages per node . </S>"
  ]
}
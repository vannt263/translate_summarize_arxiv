{
  "article_text": [
    "in the conventional theory of linear network coding ( lnc ) @xcite@xcite , the data unit transmitted along every edge of unit capacity in a network consists of a single data symbol belonging to a base field gf(@xmath1 ) .",
    "every outgoing edge of a node @xmath8 transmits a data symbol that is a gf(@xmath1)-linear combination of the incoming data symbols to @xmath8 .",
    "such a coding mechanism is referred to as _",
    "scalar lnc_.    a generalization of scalar lnc is _ vector lnc",
    "_ @xcite or _ block lnc _",
    "@xcite , which models the data unit transmitted along every edge of unit capacity as an @xmath0-dimensional vector of data symbols over a base field gf(@xmath1 ) , and concomitantly defines the coding operations performed at every intermediate node as gf(@xmath1)-linear combinations of all data symbols in incoming data unit vectors , as illustrated in fig .",
    "[ fig : coding_operation_vectorlnc ] .",
    "the introduction of the concept of vector lnc stems from its potential to enrich the choices of coding operations at intermediate nodes in a network .",
    "the potential of vector lnc has been considered from several different aspects ( see for example @xcite-@xcite ) . in particular , the work in @xcite demonstrated a classic multi - source multicast network which has a simple vector linear solution of dimension @xmath9 over gf(2 ) but does not have a scalar linear solution over any base field .",
    "it was also noted in @xcite that the network constructed in @xcite which is not scalar linearly solvable over any field has a vector linear solution .",
    "there is another exemplifying network proposed in @xcite which does not have a scalar linear solution over any field but has a vector linear solution of dimension @xmath10 over gf(2 ) .",
    "these exemplifying networks manifest the superiority of vector lnc over scalar lnc in terms of enabling a linear solution .    up to now ,",
    "most studies on vector lnc have been in the context of general ( non - multicast ) networks .",
    "specific to a ( single - source ) multicast network , though it is well known that there is a scalar linear solution over a field with size no smaller than the number of receivers @xcite , there are still benefits to consider vector lnc , as summarized in @xcite",
    ". in particular , the alphabet size of data units is a key factor that affects the linear solvability of a multicast network . under the same alphabet size @xmath11 , in which case the transmission delay of a data unit along an edge",
    "is same , vector lnc of dimension @xmath0 over gf(@xmath1 ) provides much more choices for coding operations than scalar lnc over gf(@xmath11 ) , and every scalar linear code over gf(@xmath11 ) can be transformed into a vector linear code of dimension @xmath0 over gf(@xmath1 ) , so that the scalar linear code is a solution if and only if its corresponding vector linear code is a solution too .",
    "thus , a network has a scalar linear solution over gf(@xmath11 ) _ only if _ it has a vector linear solution of dimension @xmath0 over gf(@xmath1 ) . it would be natural to conceive the following benefit of vecor lnc , as conjectured in @xcite :    * there exists a multicast network that is vector linearly solvable of dimension @xmath0 over gf(@xmath1 ) , but not scalar linearly solvable over gf(@xmath5 ) for any @xmath2 .",
    "if proven true , this conjecture will imply practical benefit of vector lnc in terms of reducing the alphabet size to yield a solution on a multicast network , which is a fundamental research topic in the network coding literature .",
    "however , even though the work in @xcite indicated the possible correctness of this conjecture from the perspective of multivariate determinant polynomials of transfer matrices , it failed to provide explicit multicast networks to verify its correctness .    in the first part of the paper , we propose a systematic way to construct a multicast network vector linearly solvable over gf(@xmath1 ) at dimension @xmath0 but not scalar linearly solvable over gf(@xmath5 ) for any @xmath2 .",
    "explicit multicast networks are also subsequently constructed based on this method so that the aforementioned conjecture is proven to be correct for _ infinitely many _ alphabet sizes @xmath3 with respect to an _ arbitrary _ prime @xmath4 . moreover , some of the illustrated multicast networks vector linearly solvable at dimension @xmath0 over gf(@xmath4 ) do not have a scalar linear solution over gf(@xmath5 ) , not only for all those @xmath12 , but also for some @xmath13 .",
    "this affirms that in some multicast networks , vector lnc can indeed be superior to scalar lnc , in a stronger sense than as conjectured , in terms of alphabet size of data units to yield a solution .",
    "the vector coding techniques we propose to beat scalar codes have several implications :    * scalar linear solutions over respective alphabets @xmath14 do not necessarily imply another scalar linear solution over @xmath15 , but they guarantee a vector linear solution of dimension @xmath16 over gf(@xmath1 ) .",
    "* for scalar linear codes over respective alphabets @xmath14 , even in the case that none of them has a solution , it is still possible to combine their corresponding vector linear codes , by direct sum , to form a vector linear solution of dimension @xmath16 over gf(@xmath1 ) .    in the second part of the paper , we compare the alphabet size requirements for scalar and vector linear solvability of multicast networks from another direction .",
    "specifically , now that the non - existence of a vector linear solution of dimension @xmath0 over gf(@xmath1 ) implies the non - existence of a scalar linear solution over gf(@xmath11 ) , a natural question is whether it can further imply the non - existence of a scalar linear solution over every gf(@xmath5 ) with @xmath2 .",
    "at a first glance , one might be inclined to believe its correctness . however , as we shall demonstrate , the answer to this question is _ negative_. another contribution of this paper is to show explicit multicast networks , for the first time in the literature , which do not have a vector linear solution of dimension @xmath0 over gf(@xmath9 ) but have a scalar linear solution over gf(@xmath5 ) for some @xmath6 , where @xmath5 can be odd or a power of @xmath9 .",
    "this discovery suggests that it is also possible for scalar lnc to outperform vector lnc ( of dimension @xmath17 ) in multicast networks , in terms of using a smaller alphabet to yield a solution .",
    "more importantly , it further discloses that    * over a given base field , a multicast network vector linearly solvable of dimension @xmath0 is not necessarily vector linearly solvable of dimensions @xmath18 with @xmath7 .",
    "this discovery is intriguing in the sense that it appears to contradict the folklore on multicast networks : the larger the alphabet block length , the more likely a linear solution exists .",
    "recently , a few multicast networks were discovered in @xcite with the intriguing property that they are scalar linearly solvable over a small field but not necessarily scalar linearly solvable over a larger field .",
    "they share a common topological structure , and can thus be subsumed in a particular class of multicast networks , whose scalar linear solvability is completely characterized in @xcite .",
    "one of the fundamental building blocks for the results obtained in this paper is the further analysis of the vector linear solvability of this special class of multicast networks , which was not dealt with in @xcite and @xcite .",
    "the remainder of this paper is organized as follows . in section",
    "ii , we establish the mathematical notations to be adopted and review some useful fundamental results of vector and scalar lnc . in section iii , we present a general way to construct multicast networks vector linearly solvable over gf(@xmath1 ) of dimension @xmath0 but not scalar linearly solvable over gf(@xmath5 ) for any @xmath2 , and present instances for an arbitrary prime @xmath4 and infinitely many alphabet sizes @xmath3 . in section iv , we verify that on multicast networks smaller alphabets can be better than larger ones for yielding a vector linear solution .",
    "section v summarizes the paper .",
    "this work focuses on a single - source multicast network , which is modeled as a finite directed acyclic multigraph , with a unique source node @xmath19 and a set @xmath20 of receivers . for a node @xmath8 in the network , denote by @xmath21 and @xmath22 , respectively , the set of its incoming and outgoing edges .",
    "every edge has unit capacity and every outgoing edge from the source @xmath19 transmits a data unit generated by @xmath19 .",
    "write @xmath23 , which will be referred to as the source dimension of the network",
    ". then there are totally @xmath24 source data units to be transmitted across the network .",
    "a topological order is assumed on the set of edges led by ones in @xmath25 .",
    "for every receiver @xmath26 , based on the data units received from edges in @xmath27 , its goal is to recover the source data units generated from @xmath19 .",
    "the maximum flow for every receiver @xmath28 , which is defined to be the maximum number of edge - disjoint paths leading from @xmath19 to @xmath29 , is assumed to be @xmath24 .    in the conventional scalar lnc ,",
    "the data unit transmitted along every edge @xmath30 merely consists of a single data symbol belonging to a symbol alphabet which is mathematically modeled as a finite field gf(@xmath1 ) .",
    "scalar linear code _ is an assignment of a _ local encoding kernel _",
    "@xmath31 to every pair @xmath32 of edges such that @xmath33 when @xmath32 is not an adjacent pair of edges .",
    "every scalar linear code uniquely determines a global encoding kernel @xmath34 , which is an @xmath24-dimensional column vector over gf(@xmath1 ) , for each edge @xmath30 in the network . on a multicast network , a scalar linear code",
    "is called a _",
    "scalar linear solution _ if for every receiver @xmath26 , the juxtaposition @xmath35_{e\\in in(t)}$ ] of the global encoding kernels for edges incoming to @xmath29 has full rank @xmath24 .    as a generalization of scalar lnc , vector lnc models the data unit transmitted along every edge @xmath30 to be an @xmath0-dimensional _ row vector _",
    "@xmath36 of data symbols over a base field gf(@xmath1 ) .",
    "thus , the mathematical model for the data unit alphabet in vector lnc is a vector space gf(@xmath1)@xmath37 rather than a finite field . under the new mathematical structure of data units , the model of scalar lnc",
    "can be naturally extended to vector lnc as follows .    a _ vector linear code of dimension @xmath0 over _ gf(@xmath1 ) , or _ a vector linear code over _",
    "gf(@xmath1)@xmath37 for short , is an assignment of a _ local encoding kernel _ @xmath38 , which is an @xmath39 matrix over @xmath40 , to every pair @xmath32 of edges such that @xmath38 is the zero matrix @xmath41 when @xmath32 is not an adjacent pair .",
    "then , for every edge @xmath30 outgoing from a non - source node @xmath8 , the data unit vector of data symbols transmitted on @xmath30 is @xmath42 furthermore , every vector linear code uniquely determines a global encoding kernel @xmath43 , which is an @xmath44 matrix over gf(@xmath1 ) , for every edge @xmath30 such that    * the columnwise juxtaposition @xmath45_{e\\in out(s)}$ ] of @xmath46 for @xmath47 forms an @xmath48 identity matrix @xmath49 ; * for every outgoing edge @xmath30 from a non - source node @xmath8 , @xmath50 .",
    "correspondingly , the data unit vector transmitted along every edge @xmath30 can also be represented as @xmath51_{d\\in out(s ) } \\mathbf{f}_e.\\ ] ] a vector linear code over gf(@xmath1)@xmath37 is called a _ vector linear solution _ if for every receiver @xmath26 , the juxtaposition @xmath45_{e\\in in(t)}$ ] of the global encoding kernels for edges incoming to @xmath29 has full rank @xmath52 .",
    "correspondingly , there is an @xmath53 decoding matrix @xmath54 over gf(@xmath1 ) for every receiver @xmath29 such that the source data units can be recovered at @xmath29 via @xmath55_{e\\in in(t)}\\mathbf{d}_t & = \\left([\\mathbf{m_d}]_{d\\in out(s ) } [ \\mathbf{f}_e]_{e\\in in(t ) } \\right ) \\mathbf{d}_t \\\\ & = [ \\mathbf{m_d}]_{d\\in out(s ) } \\left([\\mathbf{f}_e]_{e\\in in(t ) } \\mathbf{d}_t\\right ) \\\\ & = [ \\mathbf{m_d}]_{d\\in out(s ) } \\mathbf{i } = [ \\mathbf{m_d}]_{d\\in out(s)}.\\end{aligned}\\ ] ]    a scalar linear code can be regarded as a vector linear code from two different facets . on one hand , it is straightforward to see that every scalar linear code over gf(@xmath11 ) is naturally a vector linear code of dimension 1 over gf(@xmath11 ) . on the other hand ,",
    "let @xmath56 be a mapping from gf(@xmath11 ) into the ring of @xmath57 matrices over gf(@xmath1 ) via @xmath58 where @xmath59 is the @xmath39 companion matrix of a primitive polynomial @xmath60 of degree @xmath0 over gf(@xmath1 ) , and @xmath61 is a fixed root of @xmath60 , that is , a primitive element of gf(@xmath11 ) .",
    "as a consequence of the cayley - hamilton theorem , this mapping is a homomorphism , and @xmath62 forms a matrix representation of the finite field gf(@xmath11 ) ( see , for example , @xcite ) .",
    "then , every scalar linear code over gf(@xmath11 ) with local encoding kernels @xmath63 corresponds to a vector linear code over gf(@xmath1)@xmath37 with local encoding kernels prescribed as @xmath64 and moreover , based on the homomorphic property of @xmath56 , we can derive the following result .",
    "[ prop : matrix_representation_scalar_solution ] given a ( not necessarily multicast ) network , a scalar linear code over gf(@xmath11 ) with local encoding kernels @xmath63 is a solution if and only if the corresponding vector linear code over @xmath65 with local encoding kernels @xmath66 qualifies as a solution too .",
    "moreover , if @xmath54 is a decoding matrix of the scalar linear solution for receiver @xmath29 , then @xmath67 is also a decoding matrix of the corresponding vector linear solution for @xmath29 , where @xmath56 is applied componentwise for the entries in @xmath54 .",
    "in summary , table [ table : scalar_vs_vector_lnc ] compares the mathematical structures of scalar and vector lnc .",
    ".comparison of scalar and vector lnc when the alphabet size of data units is fixed to @xmath11 with @xmath1 equal to a prime power [ cols=\"^,^,^ \" , ]      recently , the first few known multicast networks that are scalar linearly solvable over gf(@xmath1 ) but not necessarily over a larger gf(@xmath5 ) were discovered in @xcite .",
    "they share a similar topology and can be generalized into a class of multicast networks @xmath68 , as replotted in fig .",
    "[ fig : general_network_for_scalar ] , with topological parameters @xmath24 and @xmath69 .",
    "the network @xmath68 has source dimension @xmath24 , and consists of nodes on five layers .",
    "the source @xmath19 is the unique node in the first layer .",
    "there are @xmath24 layer-2 nodes @xmath70 , @xmath71 , each of which is connected from @xmath19 by an edge .",
    "there are @xmath24 layer-3 nodes @xmath72 , @xmath71 , each of which is connected from two upstream layer-2 nodes @xmath70 and @xmath73 ( @xmath74 represents @xmath75 ) by a respective edge . for each layer-3",
    "node @xmath72 , there are @xmath76 outgoing edges , each of which leads to a different downstream layer-4 ( grey ) node .",
    "thus , the @xmath24-tuple @xmath77 controls the number of layer-4 nodes .",
    "there is a non - depicted bottom - layer node connected from every set @xmath78 of @xmath24 layer-4 nodes with @xmath79 , that is , with @xmath24 edge - disjoint paths starting from @xmath19 and ending at nodes in @xmath78 .",
    "all bottom - layer nodes are receivers .",
    "the following is a concise formula for the scalar linear solvability of @xmath68 derived in @xcite .",
    "[ thm : concise_scalar_linear_solvability_characterization ] consider a network @xmath68 with parameters @xmath24 and @xmath69 .",
    "it is linearly solvable over gf(@xmath1 ) if and only if there is positive divisor @xmath80 of @xmath81 subject to @xmath82    [ cor : swirl_network_scalar_solv ] the network @xmath68 with parameters @xmath24 and @xmath83 is called the _ swirl network _ @xcite . as a consequence of theorem [ thm : concise_scalar_linear_solvability_characterization ] , it is scalar linearly solvable over gf(@xmath1 ) if and only if @xmath84 or @xmath81 is not a prime",
    ".    the analysis of the vector linear solvability of @xmath85 will be one of the building blocks for the main discoveries of this paper .",
    "in this section , we shall first introduce a general method to construct multicast networks vector linearly solvable over gf(@xmath1)@xmath37 but not scalar linearly solvable over any gf(@xmath5 ) with @xmath2 .",
    "then , we make use of this method to design infinitely many instances to verify that vector lnc can indeed outperform scalar lnc for multicast networks in terms of the required alphabet size to yield a solution . the main results to be established in this section are outlined in fig . [",
    "fig : relation_diagram_part1 ] .      under the same alphabet size of data units , which is considered to be a prime power throughout the paper , the number of candidates to which the local encoding kernels can be assigned increases _ exponentially _ from @xmath11 to @xmath86 .",
    "consequently , it is natural to conceive that vector lnc outperforms scalar lnc on a multicast network in the sense that the minimum alphabet size to yield a vector linear solution might be smaller than the minimum required in a scalar solution .",
    "however , to the best of our knowledge , no explicit demonstration of this advantage for vector lnc on multicast networks has ever been given , and this advantage was only partially confirmed in @xcite . in the work of @xcite ,",
    "an algebraic framework is established to characterize the vector linear solvability of a multicast network , which can be regarded as a generalization of the classic algebraic framework in @xcite that concentrates on scalar linear solvability . specifically , the framework associates every receiver in a multicast network with a transfer matrix whose entries are multivariate polynomials .",
    "correspondingly , it associates a multicast network with a multivariate polynomial obtained by the product of the determinants of all transfer matrices .",
    "it is then shown that a multicast network is vector linearly solvable over gf(@xmath1)@xmath37 if and only if there is an assignment of @xmath57 matrices over gf(@xmath1 ) to the variables in the associated polynomial under which the evaluation of this polynomial is an invertible matrix over gf(@xmath1 ) . meanwhile",
    ", a multivariate polynomial was discovered in @xcite which does not have such an assignment over gf(@xmath1 ) for any @xmath87 , but has a feasible assignment over gf(@xmath9)@xmath88 .",
    "however , that work did not show the existence of a multicast network that can be associated with this particular polynomial , and hence whether there exists a multicast network with the desired advantage of vector lnc remains elusive .",
    "we next propose a general construction method , based on which the design of a multicast network vector linearly solvable over gf(@xmath1)@xmath37 but not scalar linearly solvable over gf(@xmath5 ) for every @xmath2 reduces to the design of a multicast network vector linearly solvable over gf(@xmath1)@xmath37 but not scalar linearly solvable over gf(@xmath11 ) .",
    "let @xmath89 be a multicast network with source dimension @xmath24 that is vector linearly solvable over @xmath65 but not scalar linearly solvable over gf(@xmath11 ) .",
    "set @xmath90 .",
    "construct a multicast network @xmath91 of source dimension @xmath24 as follows :    * create the unique source node @xmath92 and another node @xmath19 , as well as @xmath24 edges starting from @xmath92 and ending at @xmath19 . * add @xmath89 as a subnetwork of @xmath91 .",
    "create @xmath24 edges from @xmath19 to the original source node @xmath93 of @xmath89 .",
    "* add an @xmath94-combination network @xmath95 ( see , e.g. , @xcite@xcite ) , as depicted in fig .",
    "[ fig : combination_network ] , to be another subnetwork of @xmath91 .",
    "create 2 edges from @xmath19 to the original source node @xmath96 of @xmath95 .",
    "* for every original receiver @xmath29 of @xmath95 , create @xmath97 edges from @xmath19 to @xmath29 .    in this way",
    ", every node that is originally a receiver in @xmath89 or @xmath95 is also a receiver in @xmath91 .",
    "@xmath98    [ thm : general_construction ] let @xmath89 be a multicast network that is vector linearly solvable over @xmath65 but not scalar linearly solvable over gf(@xmath11 ) .",
    "the network @xmath91 constructed by algorithm 1 with @xmath90 has a vector linear solution over gf(@xmath1)@xmath37 .",
    "however , it is not scalar linearly solvable over gf(@xmath5 ) for any @xmath2 , and not vector linearly solvable over gf(@xmath5)@xmath99 for any @xmath100 .",
    "the network @xmath91 is vector linearly solvable over gf(@xmath5)@xmath99 or scalar linearly solvable over gf(@xmath5 ) if and only if so are the subnetworks @xmath89 and @xmath95 .",
    "it is well known that the @xmath94-combination network is scalar linearly solvable over gf(@xmath5 ) if and only if @xmath101 . in a similar argument to characterize its scalar linear solvability , one can deduce that an @xmath94-combination network is vector linear solvable over gf(@xmath5)@xmath99 if and only if there are @xmath102 invertible matrices @xmath103 over gf(@xmath5 ) such that @xmath104 thus , @xmath105 , together with @xmath41 form an @xmath18-dimensional rank - metric code of distance @xmath18 over gf(@xmath5 ) .",
    "according to the singleton bound for the rank - metric codes ( see @xcite for example ) , there are at most @xmath106 codewords for such a rank - metric code .",
    "thus , if there are @xmath102 invertible matrices @xmath103 over gf(@xmath5 ) subject to ( [ eqn : combination_network_vector_lnc ] ) , then @xmath107 , _",
    "i.e. _ @xmath108 . on the other hand ,",
    "when @xmath108 , a scalar linear solution can be constructed for the @xmath109-combination network over gf(@xmath110 ) , which in turn induces a vector linear solution over gf(@xmath5)@xmath99 according to proposition [ prop : matrix_representation_scalar_solution ] . we can now conclude that an @xmath94-combination network is vector linearly solvable over gf(@xmath5)@xmath99 if and only if @xmath108 .    in consequence ,",
    "the subnetwork @xmath95 of @xmath91 has a vector linear solution over gf(@xmath1)@xmath37 , but neither a scalar nor a vector linear solution when the alphabet size of data units is smaller than @xmath11 . on the other hand ,",
    "the subnetwork @xmath89 of @xmath91 is vector linearly solvable over gf(@xmath1)@xmath37 but not scalar linearly solvable over gf(@xmath11 ) .",
    "we can see when the alphabet size is no greater than @xmath11 , the network @xmath91 does not have any scalar linear solution , and has a vector linear solution only over gf(@xmath1)@xmath37 .      in order to apply algorithm 1 to construct a multicast network vector",
    "linearly solvable over @xmath65 but not scalar linearly solvable over @xmath111 for any @xmath2 , a key step that has not been explicated is to provide a multicast network that is vector linearly solvable over @xmath65 but not scalar linearly solvable over @xmath112 .",
    "we next show that the swirl network with appropriate source dimension @xmath24 is actually the first known one with such a property .",
    "assume that the alphabet size of data units is @xmath113 .",
    "when @xmath114 is a prime , the swirl network with dimension @xmath115 does not have a scalar linear solution over gf(@xmath113 ) . recall that a prime in the form of @xmath114 is called a mersenne prime . after examining the list of all known 48 mersenne primes in the ascending order @xcite",
    ", we found that the @xmath116 one , @xmath117 , can be written as @xmath118 but neither @xmath119 nor @xmath120 is a mersenne prime .",
    "thus , the swirl network turns out to be the first exemplifying multicast network scalar linearly solvable over both gf(@xmath121 ) and gf(@xmath122 ) but not over gf(@xmath123 ) .",
    "this has been noticed in @xcite .    now consider a ( possibly non - multicast ) network and a scalar linear solution of it , with local encoding kernels denoted by @xmath124 , over gf(@xmath125 ) for all @xmath126 .",
    "we can define a vector linear code of dimension @xmath127 over gf(@xmath1 ) with local encoding kernels prescribed by @xmath128,\\ ] ] where @xmath56 is the homomorphism from gf(@xmath11 ) into the ring of @xmath39 matrix over gf(@xmath1 ) defined in ( [ eqn : matrix_representation_homomorphism ] ) .",
    "in the same way as to prove proposition [ prop : matrix_representation_scalar_solution ] , one can prove that this vector code over gf(@xmath1)@xmath37 qualifies as a solution too .",
    "we thus obtained the following .",
    "[ prop_scalar_solv_imply_vector_sol ] if a ( possibly non - multicast ) network is scalar linearly solvable over gf(@xmath125 ) for all @xmath126 , then it is not necessarily scalar linearly solvable over gf(@xmath11 ) , but must be vector linearly solvable over gf(@xmath1)@xmath37 , where @xmath129 .    as a consequence of the above analysis",
    ", the swirl network with source dimension @xmath130 has a vector linear solution over gf(2)@xmath131 but no scalar linear solution over gf(@xmath132 ) .",
    "this satisfies our desired property .",
    "next result can be further obtained .",
    "[ prop_swirl_network_vector_solvability ] let @xmath114 be an arbitrary mersenne prime no smaller than @xmath117 .",
    "the swirl network with source dimension @xmath115 is vector linearly solvable over gf(@xmath5)@xmath99 for every @xmath133 , but not scalar linearly solvable over gf(@xmath5 ) for any @xmath5 with @xmath134 and @xmath135 being a prime .",
    "corollary [ cor : swirl_network_scalar_solv ] characterizes the scalar linear solvability of the considered swirl network .",
    "it remains to show its vector linear solvability .",
    "assume @xmath5 is odd .",
    "the swirl network is scalar linearly solvable over gf(@xmath110 ) for every @xmath136 , and hence vector linearly solvable over gf(@xmath5)@xmath99 by proposition [ prop : matrix_representation_scalar_solution ] .",
    "assume @xmath137 .",
    "the case @xmath138 has been discussed in the analysis prior to the present proposition .",
    "consider the case @xmath139 .",
    "since @xmath140 a mersenne prime , @xmath0 is an ( odd ) prime too .",
    "thus , @xmath141 is even and hence @xmath142 must be a composite .",
    "consequently , the considered swirl network is scalar linearly solvable over gf(@xmath143 ) , gf(@xmath144 ) and gf(@xmath145 ) respectively .",
    "consequently , it is vector linearly solvable over gf(@xmath9)@xmath18 according to proposition [ prop_scalar_solv_imply_vector_sol ] .",
    "let @xmath114 be a mersenne prime no smaller than @xmath117 , and @xmath89 represent the swirl network with source dimension @xmath115 .",
    "the multicast network @xmath91 constructed by algorithm 1 with @xmath146 has a vector linear solution over gf(@xmath9)@xmath37 , but does not have a scalar linear solution over gf(@xmath5 ) for any @xmath147 .",
    "moreover , it is vector linearly solvable over gf(@xmath5)@xmath99 for every @xmath110 larger than @xmath113 , but not scalar linearly solvable over gf(@xmath5 ) for any @xmath5 with @xmath134 and @xmath135 being a prime .",
    "it follows from theorem [ thm : general_construction ] together with proposition [ prop_swirl_network_vector_solvability ] .",
    "we have now affirmed the correctness of the conjecture raised in @xcite by explicit examples that vector linear coding can indeed be superior to scalar one in terms of the required alphabet size in a linear network coding solution .",
    "furthermore , these first exemplifying networks suggest that there are cases where vector linear coding are superior to scalar linear coding in a stronger sense than as conjectured in @xcite :    * it is possible for a multicast network vector linearly solvable over gf(@xmath5)@xmath99 for every prime power @xmath148 , but not scalar linearly solvable not only over any gf(@xmath5 ) with @xmath2 , but also over some gf(@xmath5 ) with @xmath149 , which can be extremely large compared with @xmath11 .      in the previous subsection ,",
    "the key to proving the swirl network to be vector linearly solvable over gf(@xmath9)@xmath37 but not scalar linearly solvable over gf(@xmath113 ) is the observation that scalar linear solutions over respective alphabets @xmath14 do not necessarily imply another scalar linear solution over @xmath15 , but they guarantee a vector linear solution over gf(@xmath1)@xmath150 . at this moment , it only brings us a few alphabet sizes @xmath113 with the property that there is a multicast network vector linearly solvable over gf(@xmath9)@xmath37 but not scalar linearly solvable over gf(@xmath113 ) . in this subsection",
    ", we shall identify _ infinitely many _ alphabet sizes with this property . towards this goal ,",
    "we first characterize the vector linear solvability of the network @xmath85 described in section ii.b .",
    "[ lemma : equivalent_condition_vlnc_1 ] the network @xmath68 with parameters @xmath24 and @xmath77 has a vector linear solution over gf(@xmath1)@xmath37 if and only if there exist invertible matrices @xmath151 of size @xmath57 over gf(@xmath1 ) such that @xmath152    the technical proof of this lemma is provided in appendix [ appendix : lemma : equivalent_condition_vlnc_1 ] .",
    "it is worthwhile to note that when @xmath153 , the lemma degenerates to a scalar linear solvability characterization of @xmath68 , which coincides with the one derived in @xcite as a preliminary to further obtain theorem [ thm : concise_scalar_linear_solvability_characterization ] .",
    "[ prop : infinitely_many_instances ] let @xmath154 be an arbitrary integer larger than 2 . set @xmath155 and @xmath156 .",
    "then , @xmath68 is vector linearly solvable over gf(@xmath9)@xmath157 but not scalar linearly solvable over gf(@xmath158 ) .",
    "we first show that the network @xmath68 is not scalar linearly solvable over gf(@xmath159 ) .",
    "observe that the smallest @xmath160 for @xmath161 for @xmath162 is , respectively , @xmath163 .",
    "thus , it can be seen that the smallest positive integer that possibly divides @xmath164 is 23 , and for every proper divisor @xmath80 of @xmath164 , @xmath165 .",
    "consequently , @xmath166 and hence condition ( [ eqn : equivalence_subgroup_order_perspective ] ) does not hold .",
    "theorem [ thm : concise_scalar_linear_solvability_characterization ] then affirms that @xmath68 is not scalar linearly solvable over gf(@xmath158 ) .",
    "we next establish a vector linear solution for @xmath68 over gf(@xmath9)@xmath157 .",
    "write @xmath167 , @xmath168 , @xmath169 and @xmath170 .",
    "let @xmath171 be the @xmath172 invertible matrix over gf(2 ) representing a primitive element in gf(@xmath173 ) , and @xmath174 be the @xmath175 invertible matrix over gf(2 ) representing a primitive element in gf(@xmath176 ) according to the homomorphism presented in ( [ eqn : matrix_representation_homomorphism ] ) in section ii.a .",
    "then , @xmath177 for all @xmath178 , and @xmath179 for all @xmath180 .",
    "write @xmath181 and @xmath182 .",
    "note that both @xmath183 and @xmath184 are integers .",
    "for @xmath185 , @xmath186 , define @xmath187 to be the @xmath57 matrix over gf(2 ) as @xmath188.\\ ] ] thus , @xmath189 for all @xmath190 . since @xmath191 where the last inequality holds as @xmath154",
    "is assumed larger than @xmath9 , we can set @xmath192 to be arbitrary @xmath80 distinct matrices in @xmath193 for @xmath194 , and set @xmath195 , where @xmath196.\\ ] ] in this way , @xmath197 for all @xmath71 and @xmath198 , and @xmath199 this means that the designed @xmath200 satisfy ( [ eqn : equivalent_condition_1 ] ) and ( [ eqn : equivalent_condition_2 ] ) , so @xmath85 is vector linearly solvable over gf(@xmath9)@xmath37 according to lemma [ lemma : equivalent_condition_vlnc_1 ] .    in the proof of @xmath68 to be vector linearly solvable over gf(@xmath9)@xmath157 in theorem [ prop : infinitely_many_instances ] , we essentially constructed a scalar linear code over gf(@xmath144 ) and another scalar linear code gf(@xmath201 ) , none of which qualifies as a solution according to theorem [ thm : concise_scalar_linear_solvability_characterization ] .",
    "then , we combine their corresponding vector linear codes by direct sum and form a vector linear solution . this provides a new approach to design vector linear codes which scalar codes can not substitute . by a similar but more elaborate argument , we are able to obtain the following generalization .",
    "[ thm : arbitrary_p_infinitely_many_instances ]",
    "let @xmath4 be an arbitrary prime .",
    "there exists a positive integer @xmath202 such that for every @xmath203 , @xmath204 , an instance @xmath68 can be found to be vector linearly solvable over gf(@xmath4)@xmath205 but not scalar linearly solvable over gf(@xmath203 )",
    ".    please refer to appendix [ appendx : thm : arbitrary_p_infinitely_many_instances ] .",
    "if we let @xmath89 represent the network @xmath68 established in theorem [ thm : arbitrary_p_infinitely_many_instances ] , then the multicast network @xmath91 constructed by algorithm 1 with @xmath206 has a vector linear solution over gf(@xmath4)@xmath205 , but does not have a scalar linear solution over gf(@xmath5 ) for any @xmath207 . the conjectured benefit of vector linear codes raised in @xcite is thus proven in the following more general sense .    for every prime @xmath4",
    ", there are infinitely many alphabet sizes @xmath3 each of which corresponds to a multicast network vector linearly solvable over gf(@xmath4)@xmath37 but not scalar linearly solvable over any gf(@xmath5 ) with @xmath12 .",
    "in this section , we shall investigate the vector linear solvability of multicast networks from another direction , in which the main results to be established are outlined in fig .",
    "[ fig : relation_diagram_part2 ] . according to proposition",
    "[ prop : matrix_representation_scalar_solution ] , we have known that if a multicast network is not vector linearly solvable over gf(@xmath1)@xmath37 , then it is not scalar linearly solvable over gf(@xmath11 ) either .",
    "a natural subsequent question is : when a multicast network is not vector linearly solvable over gf(@xmath1)@xmath37 , is it scalar linearly unsolvable over gf(@xmath5 ) for _ any _ @xmath2 ?",
    "it is tempting to think of a ` yes ' answer , since vector lnc offers a much larger set for local encoding kernel choices .",
    "however , we next prove the _ negative _ answer to this question , through further study of the swirl network .",
    "consider the swirl network @xmath68 with @xmath208 and @xmath209 again . as a consequence of corollary [ cor : swirl_network_scalar_solv ] ,",
    "it is scalar linearly solvable over both gf(5 ) and gf(7 ) , no matter how large @xmath24 is selected .",
    "we shall next investigate its vector linear solvability .",
    "our first goal is to check whether the swirl network has a vector linear solution over gf(2)@xmath210 when @xmath211 .",
    "based on lemma [ lemma : equivalent_condition_vlnc_1 ] , a straightforward way to do so is to exhaustively enumerate all invertible @xmath212 matrices over gf(2 ) for @xmath213 to see whether conditions ( [ eqn : equivalent_condition_1 ] ) and ( [ eqn : equivalent_condition_2 ] ) hold . however , because there are total @xmath214 invertible @xmath215 matrices over gf(2 ) , the raw exhaustive enumeration will involve @xmath216 combinations , and such computational complexity is too high to realize . in order to reduce the computational complexity in exhaustive enumeration",
    ", we are able to further refine the equivalent conditions in lemma [ lemma : equivalent_condition_vlnc_1 ] for the swirl network as follows . similar refinement can also be conducted for a general @xmath85 but we shall not address it in this paper .",
    "[ lemma : necessary_condition_swirlnetwork ] the swirl network has a vector linear solution over gf(@xmath1)@xmath37 if and only if there exist invertible matrices @xmath217 of size @xmath57 over gf(@xmath1 ) such that @xmath218    please refer to appendix [ appendix : lemma : necessary_condition_swirlnetwork ] .    consider the case that @xmath219 and @xmath220 .",
    "there are total 48 invertible matrices @xmath221 over gf(2 ) of size @xmath212 satisfying @xmath222 by computer search .",
    "thus , the number of combinations to search for invertible matrices",
    "@xmath223 subject to ( [ eqn : necessary_condition_1 ] ) and ( [ eqn : necessary_condition_2 ] ) , when @xmath24 is set to 6 , is @xmath224 , which becomes more manipulable . by a divide - and - conquer method on @xmath24 , we first find that there are 2304 sets of invertible matrices @xmath225 subject to ( [ eqn : necessary_condition_1 ] ) and ( [ eqn : necessary_condition_2 ] ) when @xmath24 is set to 3 . based on this finding , further exhaustive enumeration verifies that no invertible matrices @xmath223 can be found to make ( [ eqn : necessary_condition_1 ] ) and ( [ eqn : necessary_condition_2 ] ) hold .",
    "it can also be readily verified that there are not invertible matrices @xmath223 over gf(2 ) of size @xmath226 to make conditions ( [ eqn : necessary_condition_1 ] ) and ( [ eqn : necessary_condition_2 ] ) hold , so the swirl network is not vector linearly solvable over gf(2)@xmath227 either .",
    "in addition , the swirl network is not scalar ( and thus not vector ) linearly solvable over gf(2 ) . since the swirl network with @xmath228 has a vector linear solution over gf(@xmath1)@xmath37 only if so is the swirl network with @xmath211 , we conclude the following .    [ prop : swirl_non_vector_solution ] for @xmath208 , the swirl network is scalar linearly solvable over gf(5 ) and gf(7 ) , but does not have a vector linear solution over gf(@xmath9)@xmath37 for any @xmath229 .",
    "the swirl network affirms that even though the choice of local encoding kernels in scalar lnc is more restricted than in vector lnc , scalar lnc can still outperform vector lnc ( of dimension larger than 1 ) in terms of enabling a linear solution using a smaller alphabet .",
    "since every scalar solution can be regarded as a vector solution of dimension 1 , this finding suggests that the alphabet size for vector lnc is not always the larger the better for yielding a solution on a multicast network .",
    "next , we present a more surprising result that over the same base field , a higher dimension of vector lnc is _ not _ always more likely to enable a linear multicast solution .    [",
    "prop : swirl_non_vector_solution2 ] the swirl network , which has a scalar linear solution over gf(@xmath143 ) and thus a vector linear solution over gf(@xmath9)@xmath230 , is _ not _ vector linearly solvable over gf(@xmath9)@xmath231 when source dimension @xmath24 is large enough .    according to corollary [ cor : swirl_network_scalar_solv ] and proposition [ prop : matrix_representation_scalar_solution ] , it is straightforward to see that the swirl network is scalar linearly solvable over gf(@xmath143 ) and then vector linearly solvable over gf(@xmath9)@xmath230 . in order to show that the swirl network is not vector linearly solvable over gf(@xmath9)@xmath231 , by lemma [ lemma : necessary_condition_swirlnetwork ] , it is equivalent to show the non - existence of invertible matrices @xmath232 of size @xmath233 over gf(2 ) to make conditions ( [ eqn : necessary_condition_1 ] ) and ( [ eqn : necessary_condition_2 ] ) hold",
    "however , as @xmath24 is large and there are @xmath234 invertible matrices of size @xmath233 over gf(@xmath9 ) , which form the general linear group @xmath235 , it is hard to directly check this by exhaustive enumeration . by analyzing the group structure of @xmath235 , which is provided in @xcite , we shall first greatly reduce the cases to the degree that exhaustively enumeration is manipulable .",
    "assume that there is a vector linear solution for the swirl network over gf(@xmath9)@xmath231 , and let @xmath236 be @xmath233 matrices over gf(@xmath9 ) satisfying conditions ( [ eqn : necessary_condition_1 ] ) and ( [ eqn : necessary_condition_2 ] ) .",
    "recall that the conjugacy class of an element @xmath237 in a group @xmath238 refers to the set @xmath239 .",
    "the elements in a group can be partitioned into conjugacy classes and elements in the same conjugacy class have the same order . since @xmath240 for every @xmath241 , @xmath242 for a matrix @xmath243 if and only if @xmath244 for every matrix @xmath245 in the conjugacy class of @xmath221 in @xmath235 . after examining the representative of every conjugacy class in @xmath235 ,",
    "as listed in @xcite , we found that there are only 8 conjugacy classes in @xmath235 in which the matrices @xmath221 satisfy @xmath246 .",
    "two of the 8 conjugacy classes comprise matrices of order 21 in @xmath247 , and the other 6 conjugacy classes comprise matrices of order 31 in @xmath247 .",
    "thus , @xmath236 are contained in the union of these @xmath248 conjugacy classes .",
    "next , as @xmath24 is assumed large enough , @xmath249 and thus @xmath250 for all @xmath251 .",
    "let @xmath252 be the representative listed in @xcite for the conjugacy class which @xmath253 belongs to .",
    "then , @xmath252 can be written as @xmath254 for some @xmath241 .",
    "also write @xmath255 . then , @xmath256    it can be observed that the set @xmath257 is identical no matter which conjugacy class of order @xmath258 matrices @xmath259 is in .",
    "it can further be checked that @xmath260 for all @xmath261 .",
    "thus , the @xmath262 matrices @xmath263 form a @xmath264-dimensional rank - metric code of distance @xmath264 over gf(@xmath9 ) .",
    "however , this contradicts the fact that the number of codewords of such a code is at most @xmath265 according to the singleton bound of rank - metric codes .",
    "consequently , @xmath259 can only be the representative for either of the two conjugacy classes of order @xmath266 matrices .",
    "it can be observed that the set @xmath267 is identical for both cases .",
    "then , exhaustive enumeration can be readily conducted on all possible @xmath268 with @xmath269 to verify that there does not exist @xmath270 such that @xmath271 for all @xmath272 .",
    "we can now conclude that there does not exist a vector linear solution over gf(@xmath9)@xmath231 when @xmath24 is large enough .",
    "it has been proven in @xcite that the classical network proposed in @xcite which is not scalar linearly solvable over any field has a vector linear solution over gf(@xmath1)@xmath37 if and only if @xmath0 is even .",
    "however , the discovery in proposition [ prop : swirl_non_vector_solution2 ] is more surprising in the sense that a multicast network is considered , which always has a linear solution over a sufficiently larger alphabet . in comparison ,",
    "a solvable ( non - multicast ) network is not even vector linearly solvable over any gf(@xmath1)@xmath37 @xcite .",
    "in this paper , several new results are established for vector linear network coding ( lnc ) on multicast networks . a systematic way is first introduced to construct a multicast network that has a vector linear solution over gf(@xmath4)@xmath37 , but does not have a scalar linear solution over any gf(@xmath5 ) with @xmath12 , for an _ arbitrary _ prime @xmath4 and _ infinitely many _ alphabet sizes @xmath3 .",
    "this affirms a conjectured benefit of vector lnc over scalar one in @xcite .",
    "in addition , the technique to construct a vector linear solution is new : a vector linear solution over gf(@xmath1)@xmath37 can be constructed by direct sum of different scalar linear codes , which are _ not necessarily _ scalar linear solutions , over gf(@xmath121 ) , @xmath273 , gf(@xmath274 ) with @xmath275 .",
    "this is demonstrated to be useful and can not be substituted by scalar lnc because a multicast network which has scalar linear solutions over gf(@xmath121 ) , @xmath273 , gf(@xmath274 ) is not even scalar linearly solvable over gf(@xmath276 ) . in the second part of the paper ,",
    "explicit multicast networks are presented and proven to have the special property that they do not have a vector linear solution of dimension @xmath0 over gf(@xmath9 ) but have scalar linear solutions over gf(@xmath5 ) for some @xmath6 , where @xmath5 can be odd or even .",
    "this discovery unveils a surprising result for vector lnc on multicast networks : the existence of a vector linear solution over gf(@xmath9)@xmath37 does not imply the existence of a vector linear solution over gf(@xmath9)@xmath99 with @xmath7 .",
    "[ fig : relationship_between_scalar_vector ] summarizes the relationship between scalar and vector lnc on a multicast network established so far in the literature .",
    "denote by @xmath277 the @xmath278 outgoing edges of layer-3 node @xmath72 for each @xmath71 .",
    "consider a vector linear code over gf(@xmath1)@xmath37 .",
    "for @xmath71 , denote by @xmath279 the local encoding kernels for adjacent pairs @xmath280 with @xmath281 and @xmath282 , respectively , where @xmath283 stands for @xmath284 .",
    "note that by left multiplying @xmath285 to the local encoding kernels for downstream adjacent pairs @xmath286 , and resetting @xmath285 to be the @xmath57 identity matrix @xmath49 , the global encoding kernels for edges @xmath277 remain unchanged .",
    "hence , without loss of generality , for all @xmath71 and @xmath287 , we can assume @xmath288 and let @xmath289 denote the local encoding kernels for @xmath290 , @xmath281 .",
    "then , the juxtaposition of global encoding kernels for edges @xmath291 is equal to @xmath292_{1\\leq j \\leq \\omega }   = \\left [ \\begin{smallmatrix }      \\mathbf{k}_{11 } & & \\mathbf{k}_{1d_1 } & & \\mathbf{0 } & & \\mathbf{0 } & \\mathbf{k}_{\\omega d_1 } & & \\mathbf{k}_{\\omega d_\\omega } \\\\      \\mathbf{k}_{11 } ' & & \\mathbf{k}_{1d_1 } ' & & \\vdots & & \\vdots & \\mathbf{0 } & & \\mathbf{0 } \\\\      \\mathbf{0 } & \\cdots & \\mathbf{0 } & \\ddots & \\mathbf{0 } & \\cdots & \\mathbf{0 } & \\vdots & \\cdots & \\vdots \\\\      \\vdots & & \\vdots &   & \\mathbf{k}_{(\\omega-1)1 } & & \\mathbf{k}_{(\\omega-1)d_{\\omega-1 } } & \\mathbf{0 } & &   \\mathbf{0 } \\\\      \\mathbf{0 } & & \\mathbf{0 } &   & \\mathbf{k}_{(\\omega-1)1 } ' & &   \\mathbf{k}_{(\\omega-1)d_{\\omega-1 } } ' & \\mathbf{k}_{\\omega1 } ' & &   \\mathbf{k}_{\\omega d_\\omega } ' \\\\",
    "\\end{smallmatrix } \\right]\\ ] ] since there is a receiver connected from every set @xmath78 of @xmath24 grey nodes with @xmath293 and each @xmath291 is the unique incoming edge to a grey node , the vector linear code is a solution if and only if for every set @xmath294 of @xmath24 edges in @xmath295 with @xmath296 , where @xmath297 means the number edge - disjoint paths starting from the source and ending at edges in @xmath294 , the matrix @xmath45_{e \\in e}$ ] is of full rank @xmath52 .    to prove the necessity part of the lemma ,",
    "assume that the considered code is a vector linear solution .",
    "first observe that @xmath296 when @xmath298 , where @xmath299",
    ". then the matrix @xmath45_{e\\in e } = \\left [ \\begin{smallmatrix } \\mathbf{k}_{1k_1 } & & & \\mathbf{0 } & \\mathbf{0 } \\\\ \\mathbf{k}_{1k_1 } ' & & \\cdots & \\cdots & \\cdots \\\\ \\mathbf{0 } & \\cdots & \\mathbf{k}_{(\\omega-2)k_{\\omega-2 } } & \\mathbf{0 } & \\mathbf{0 } \\\\ \\cdots & & \\mathbf{k}'_{(\\omega-2)k_{\\omega-2 } } & \\mathbf{k}_{(\\omega-1)1 } & \\mathbf{k}_{(\\omega-1)2 }   \\\\ \\mathbf{0 } &   & \\mathbf{0 } &   \\mathbf{k}_{(\\omega-1)1 } ' & \\mathbf{k}_{(\\omega-1)2 } '   \\end{smallmatrix } \\right]$ ] has full rank @xmath52 . because @xmath300_{e\\in e } ) \\\\ & = \\det\\left(\\left[\\begin{smallmatrix } \\mathbf{k}_{1k_1 } & & \\mathbf{0 } & \\mathbf{0 } \\\\ \\mathbf{k}_{1k_1 } ' & & \\cdots & \\cdots \\\\ \\cdots & \\cdots & \\mathbf{k}_{(\\omega-3)k_{\\omega-3 } } & \\mathbf{0 }   \\\\ \\mathbf{0 } & & \\mathbf{k}_{(\\omega-3)k_{\\omega-3 } } ' & \\mathbf{k}_{(\\omega-2)k_{\\omega-2 } }   \\end{smallmatrix } \\right]\\right ) \\det\\left(\\left[\\begin{smallmatrix } \\mathbf{k}_{(\\omega-1)1 } & \\mathbf{k}_{(\\omega-1)2 } \\\\ \\mathbf{k}_{(\\omega-1)1 } ' & \\mathbf{k}_{(\\omega-1)2 } ' \\end{smallmatrix}\\right]\\right ) \\\\ & = \\det(\\mathbf{k}_{1k_1})\\cdots\\det(\\mathbf{k}_{(\\omega-2)k_{\\omega-2}})\\det\\left(\\left[\\begin{smallmatrix } \\mathbf{k}_{(\\omega-1)1 } & \\mathbf{k}_{(\\omega-1)2 } \\\\ \\mathbf{k}_{(\\omega-1)1 } ' & \\mathbf{k}_{(\\omega-1)2 } ' \\end{smallmatrix}\\right]\\right),\\end{aligned}\\ ] ] the local encoding kernels @xmath301 are invertible matrices . by similar arguments on the set @xmath302 , @xmath303 , and @xmath304 , where @xmath299",
    ", we can deduce that all local encoding kernels @xmath305 and @xmath306 for @xmath71 , @xmath287 , are invertible matrices .",
    "write @xmath307 for @xmath308 , @xmath287 , and @xmath309 for @xmath310 .",
    "we need show these invertible matrices satisfy conditions ( [ eqn : equivalent_condition_1 ] ) and ( [ eqn : equivalent_condition_2 ] ) .",
    "define another vector linear code of dimension @xmath0 over gf(@xmath1 ) prescribed by the following global encoding kernels @xmath311_{1\\leq j \\leq \\omega } = \\left [ \\begin{smallmatrix }      \\mathbf{i } & & \\mathbf{i } & & \\mathbf{0 } & & \\mathbf{0 } & \\mathbf{a}_{\\omega1 } & & \\mathbf{a}_{\\omega d_\\omega } \\\\",
    "\\mathbf{a}_{11 } & & \\mathbf{a}_{1 d_1 } & & \\vdots & & \\vdots & \\mathbf{0 } & & \\mathbf{0 } \\\\",
    "\\mathbf{0 } & \\cdots & \\mathbf{0 } & \\ddots & \\mathbf{0 } & \\cdots & \\mathbf{0 } & \\vdots & \\cdots \\vdots \\\\",
    "\\vdots & & \\vdots &   & \\mathbf{i } & & \\mathbf{i } & \\mathbf{0 } & & \\mathbf{0 } \\\\",
    "\\mathbf{0 } & & \\mathbf{0 } &   & \\mathbf{a}_{(\\omega-1)1 } & & \\mathbf{a}_{(\\omega-1 ) d_{\\omega-1 } } & \\mathbf{i } & & \\mathbf{i } \\\\",
    "\\end{smallmatrix } \\right]\\ ] ] since @xmath312_{1\\leq j \\leq \\omega } = [ \\mathbf{f}_{e_{j1 } } \\cdots \\mathbf{f}_{e_{jd_j}}]_{1\\leq j \\leq \\omega}\\mathbf{diag}(\\ast)$ ]",
    ", where @xmath313 stands for the square block diagonal matrix with diagonal blocks equal to @xmath314 , @xmath273 , @xmath315 , we have , for any set @xmath294 of @xmath24 edges with @xmath296 , @xmath316_{e\\in e}\\right ) = rank\\left([\\mathbf{f}_{e}']_{e\\in e}\\right).\\ ] ]    consider @xmath317 subject to @xmath296 , where @xmath318 .",
    "then , @xmath319_{e\\in e}\\right ) = \\det\\left(\\left [ \\begin{smallmatrix } \\mathbf{i } & \\mathbf{i } & \\mathbf{0 } & & \\mathbf{0 } \\\\",
    "\\mathbf{a}_{1k_1 } & \\mathbf{a}_{1k_2 } & \\mathbf{i } & & \\cdots \\\\ \\mathbf{0 } & \\mathbf{0 } & \\mathbf{a}_{21 } & \\cdots & \\mathbf{0 } \\\\ \\cdots & \\cdots & \\cdots & & \\mathbf{i } \\\\",
    "\\mathbf{0 } & \\mathbf{0 } & \\mathbf{0 } & & \\mathbf{a}_{(\\omega-1)1 } \\end{smallmatrix } \\right]\\right ) \\\\ & = \\det\\left(\\left[\\begin{smallmatrix } \\mathbf{i } & \\mathbf{i } \\\\",
    "\\mathbf{a}_{1k_1 } & \\mathbf{a}_{1k_2 } \\end{smallmatrix}\\right]\\right ) \\det\\left(\\left[\\begin{smallmatrix } \\mathbf{a}_{21 } & & \\mathbf{0 } & \\mathbf{0 } \\\\",
    "\\mathbf{0 } & \\cdots & \\cdots \\\\ \\cdots & & \\mathbf{a}_{(\\omega-2)1 } & \\mathbf{i } \\\\",
    "\\mathbf{0 } & & \\mathbf{0 } & \\mathbf{a}_{(\\omega-1)1 } \\end{smallmatrix}\\right]\\right).\\end{aligned}\\ ] ] this implies that @xmath320\\right ) = \\det\\left(\\left[\\begin{smallmatrix } \\mathbf{i } & \\mathbf{0 } \\\\",
    "\\mathbf{a}_{1k_1 } & \\mathbf{a}_{1k_2}-\\mathbf{a}_{1k_1 } \\end{smallmatrix}\\right]\\right)$ ] , _ i.e. _ , @xmath321 . by similar arguments on @xmath322 , where @xmath71 , @xmath323 , and @xmath324 refers to @xmath325 whenever @xmath326",
    ", we can verify that condition ( [ eqn : equivalent_condition_1 ] ) holds for the considered @xmath327 .",
    "consider @xmath328 subject to @xmath296 , where @xmath299 . then , @xmath329_{e\\in e } = \\left [ \\begin{smallmatrix } \\mathbf{i } & \\mathbf{0 } & & \\mathbf{0 } & \\mathbf{a}_{\\omega k_\\omega}\\\\ \\mathbf{a}_{1 k_1 } & \\mathbf{i } & & \\cdots & \\mathbf{0 } \\\\ \\mathbf{0 } & \\mathbf{a}_{2k_2 } & \\cdots & \\mathbf{0 } & \\cdots \\\\ \\cdots & \\cdots & & \\mathbf{i } & \\mathbf{0 } \\\\",
    "\\mathbf{0 } & \\mathbf{0 } & & \\mathbf{a}_{(\\omega-1)k_{\\omega-1 } } & \\mathbf{i } \\end{smallmatrix } \\right]$ ] has full rank @xmath52 .",
    "set @xmath330 , \\mathbf{m}_{\\omega-1 } = \\left[\\begin{smallmatrix } \\mathbf{i } & \\mathbf{0 } & & \\mathbf{a}_{\\omega k_\\omega}\\mathbf{a}_{(\\omega-1)k_{\\omega-1 } } & \\mathbf{0}\\\\ \\mathbf{0 } & \\mathbf{i } & & \\cdots & \\mathbf{0 } \\\\ \\cdots & \\mathbf{0 } & \\cdots & \\mathbf{0 } & \\cdots \\\\ \\cdots & \\cdots & & \\mathbf{i } & \\mathbf{0 } \\\\",
    "\\mathbf{0 } & \\mathbf{0 } & & \\mathbf{0 } & \\mathbf{i } \\end{smallmatrix}\\right],\\cdots$ ] , @xmath331 $ ] . obviously @xmath332 .",
    "a careful calculation yields @xmath333_{e\\in e } = \\left [ \\begin{smallmatrix } \\mathbf{i } + ( -1)^{\\omega-1}\\mathbf{a}_{\\omega k_\\omega}\\cdots\\mathbf{a}_{1 k_1 } & \\mathbf{0 } & & \\mathbf{0 } & \\mathbf{0}\\\\ \\mathbf{a}_{1 k_1 } & \\mathbf{i } & & \\cdots & \\mathbf{0 } \\\\ \\mathbf{0 } & \\mathbf{a}_{2 k_2 } & \\cdots & \\mathbf{0 } & \\cdots \\\\ \\cdots & \\cdots & & \\mathbf{i } & \\mathbf{0 } \\\\",
    "\\mathbf{0 } & \\mathbf{0 } & & \\mathbf{a}_{(\\omega-1)k_{\\omega-1 } } & \\mathbf{i } \\end{smallmatrix } \\right].\\ ] ] this implies @xmath334_{e\\in e } ) \\neq 0 $ ] , and hence @xmath335 .",
    "condition ( [ eqn : equivalent_condition_2 ] ) thus holds for the considered @xmath327 .",
    "the necessity part of the lemma is proved .    for the sufficiency part ,",
    "let @xmath327 , @xmath71 , @xmath287 , be invertible matrices of size @xmath57 over gf(@xmath1 ) subject to conditions ( [ eqn : equivalent_condition_1 ] ) and ( [ eqn : equivalent_condition_2 ] ) .",
    "assume that the considered vector linear code has local encoding kernels @xmath336 and @xmath337 when @xmath308 , and @xmath338 , @xmath339 when @xmath340 , where @xmath287 .",
    "in this way , the juxtaposition @xmath341_{1\\leq j \\leq \\omega}$ ] of global encoding kernels for edges @xmath295 is identical to ( [ eqn : swirl_network_gek ] ) .",
    "it can then be shown , by similar classified discussion following ( [ eqn : swirl_network_gek ] ) , that for every set @xmath294 of @xmath24 edges in @xmath295 with @xmath296 , the @xmath342 matrix @xmath45_{e \\in e}$ ] is of full rank @xmath52 .",
    "the considered code thus qualifies as a solution for @xmath68 .",
    "the case @xmath343 has been considered in proposition [ prop : infinitely_many_instances ] .",
    "assume that @xmath4 is odd and @xmath154 is an arbitrary positive integer .",
    "write @xmath344 and @xmath345 .",
    "note that @xmath237 divides @xmath346 but does not divide @xmath347 , and @xmath348 divides @xmath349 but does not divide @xmath350 .",
    "label all odd primes smaller than @xmath351 as @xmath352 for some @xmath160 . for each @xmath353 ,",
    "denote by @xmath354 the smallest power of @xmath355 that does not divide @xmath356 , and by @xmath357 the smallest positive integer subject to @xmath358 .",
    "define @xmath202 to be the least common multiplier of @xmath359 and @xmath360 . in this manner ,",
    "each of @xmath237 , @xmath348 , @xmath361 divides @xmath362 , but none of them divides @xmath363 . moreover , as @xmath364 , the largest divisor of @xmath363 that is smaller than @xmath351 is @xmath365 .",
    "write @xmath366 , which is no smaller than 13 .",
    "denote @xmath367 by @xmath368 , which is always an integer as @xmath237 divides @xmath369 and @xmath348 divides @xmath370 .",
    "consider the network @xmath85 with @xmath24 sufficiently large and @xmath371 .",
    "it suffices to show that it is not scalar linearly solvable over gf(@xmath3 ) but vector linearly solvable over gf(@xmath4)@xmath37 .",
    "let @xmath80 be a proper divisor of @xmath372 .",
    "in the case @xmath373 , it is obvious to observe that condition ( [ eqn : equivalence_subgroup_order_perspective ] ) does not hold for the @xmath24-tuple @xmath374 when @xmath24 is sufficiently large . consider the case @xmath375 . as @xmath376 and @xmath377 , it can be readily checked that @xmath378 , so @xmath379 and thus can be written as @xmath380 for some divisor @xmath381 of @xmath372 that is smaller than @xmath351 . as argued previously , @xmath382",
    ", so @xmath383 this implies @xmath384 .",
    "@xmath385 so condition ( [ eqn : equivalence_subgroup_order_perspective ] ) does not hold for the case @xmath375 either .",
    "theorem [ thm : concise_scalar_linear_solvability_characterization ] then asserts that the considered network @xmath68 is not scalar linearly solvable over gf(@xmath3 ) .",
    "we next establish a vector linear solution for @xmath68 over gf(@xmath4)@xmath386 .",
    "let @xmath171 be the @xmath387 invertible matrix over gf(@xmath4 ) representing a primitive element in gf(@xmath388 ) , and @xmath174 be the @xmath389 invertible matrix over gf(@xmath4 ) representing a primitive element in gf(@xmath390 ) according to the homomorphism presented in ( [ eqn : matrix_representation_homomorphism ] ) in section ii.a .",
    "then , @xmath391 for all @xmath392 , and @xmath393 for all @xmath394 . for @xmath395 , @xmath396 , define @xmath187 to be the @xmath57 matrix @xmath238 over gf(@xmath1 ) as @xmath397 $ ] . then , @xmath398 for all @xmath399 , @xmath400 .",
    "set @xmath401 to be the @xmath368 distinct matrices in @xmath402 for all @xmath194 , and set @xmath403 to be the @xmath404 distinct matrices in @xmath405\\mathbf{b}_{jk } : 1 \\leq a ' < a , 1 \\leq b ' < b , 1 \\leq j \\leq \\frac{p^{9}-1}{a } , 1 \\leq k \\leq \\frac{p^{l-9}-1}{b}\\right\\}$ ] .",
    "condition ( [ eqn : equivalent_condition_1 ] ) naturally holds for thus defined @xmath327 .",
    "moreover , as @xmath406 and @xmath407 , @xmath408 and @xmath409 for all @xmath410 , @xmath411 and @xmath412 .",
    "consequently , condition ( [ eqn : equivalent_condition_2 ] ) holds for the defined @xmath327 too .",
    "according to lemma [ lemma : equivalent_condition_vlnc_1 ] , @xmath85 is vector linearly solvable over gf(@xmath4)@xmath37",
    ".      given invertible matrices @xmath413 over gf(@xmath1 ) of size @xmath57 , define invertible @xmath57 matrices @xmath414 , @xmath415 in the following way : @xmath416 conversely , given invertible @xmath57 matrices @xmath414 , @xmath415 , define @xmath413 to be arbitrary matrices satisfying ( [ eqn : matrix_transform ] ) .",
    "such a selection always exists because we can set @xmath417 , @xmath418 , and @xmath419 for @xmath71 .",
    "it can be readily checked that the two sets of matrices @xmath420 and @xmath421 are identical . then , @xmath422 hence , condition ( [ eqn : equivalent_condition_2 ] ) holds for @xmath413 if and only if condition ( [ eqn : necessary_condition_2 ] ) holds for @xmath423 .",
    "moreover , because for every @xmath71 , @xmath424 condition ( [ eqn : necessary_condition_1 ] ) holds for @xmath423 if and only if condition ( [ eqn : equivalent_condition_1 ] ) holds for @xmath413 .",
    "the authors would appreciate the helpful suggestions by the editor as well as anonymous reviewers to help improve the presentation of the paper .",
    "s. el rouayheb , a. sprintson , and c. georghiades , `` on the index coding problem and its relation to network coding and matroid theory , '' _ ieee trans .",
    "inf . theory _ ,",
    "56 , no . 7 , pp . 3187 - 3195 , jun .",
    "2010 .",
    "j. guo , t. yang , j. yuan , j. a. zhang , `` linear vector physical - layer network coding for mimo two - way relay channels : design and performance analysis , '' _ ieee trans .",
    "63 , no . 7 , pp . 2591 - 2604 , jul .",
    "2015 .",
    "s. jaggi , p. sanders , p. a. chou , m. effros , s. egner , k. jain , and l. tolhuizen , `` polynomial time algorithms for multicast network code construction , '' _ ieee trans .",
    "inf . theory _ ,",
    "6 , pp . 1973 - 1982 ,",
    "jun . 2005 ."
  ],
  "abstract_text": [
    "<S> vector linear network coding ( lnc ) is a generalization of the conventional scalar lnc , such that the data unit transmitted on every edge is an @xmath0-dimensional vector of data symbols over a base field gf(@xmath1 ) . </S>",
    "<S> vector lnc enriches the choices of coding operations at intermediate nodes , and there is a popular conjecture on the benefit of vector lnc over scalar lnc in terms of alphabet size of data units : there exist ( single - source ) multicast networks that are vector linearly solvable of dimension @xmath0 over gf(@xmath1 ) but not scalar linearly solvable over any field of size @xmath2 . </S>",
    "<S> this paper introduces a systematic way to construct such multicast networks , and subsequently establish explicit instances to affirm the positive answer of this conjecture for _ infinitely many _ alphabet sizes @xmath3 with respect to an _ arbitrary _ prime @xmath4 . on the other hand , this paper also presents explicit instances with the special property that they do not have a vector linear solution of dimension @xmath0 over gf(2 ) but have scalar linear solutions over gf(@xmath5 ) for some @xmath6 , where @xmath5 can be odd or even . </S>",
    "<S> this discovery also unveils that over a given base field , a multicast network that has a vector linear solution of dimension @xmath0 does not necessarily have a vector linear solution of dimension @xmath7 .    </S>",
    "<S> vector network coding , scalar network coding , multicast networks , alphabet size , direct sum . </S>"
  ]
}
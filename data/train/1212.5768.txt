{
  "article_text": [
    "the average consensus problem asks for a protocol by means of which @xmath1 agents with initial values @xmath2 can compute the average @xmath3 subject to unpredictably time - varying restrictions on inter - agent communication .",
    "recent years have seen a surge of interest in consensus protocols due to their widespread use as building blocks for distributed control laws in multi - agent systems ; for example , consensus protocols have been used for formation maintenance @xcite , coverage control @xcite , network clock synchronization @xcite , distributed task assignment and partitioning @xcite , statistical inference in sensor networks @xcite , and many other contexts in which centralized control is absent and agent motion and time - varying interference can lead to repeated failures of communication or sensing .",
    "consensus protocols typically involve each node @xmath4 maintaining a variable @xmath5 which is updated from time @xmath6 to time @xmath7 by setting @xmath5 to be a convex combination of those @xmath8 for which @xmath9 and @xmath4 are neighbors in some undirected graph @xmath10 . the graph sequence @xmath11 is meant to capture the constraints which dictate which pairs of agents can communicate or sense each other at each time .",
    "it is assumed that each @xmath11 has a self - loop at every node so that @xmath5 can always depend on its previous value @xmath12 .",
    "a typical update is the metropolis iteration ( first introduced within the context of consensus in @xcite ) , defined as @xmath13 where @xmath14 is the set of neigbors of node @xmath4 in @xmath11 , @xmath15 is the degree of node @xmath4 in @xmath11 , and @xmath16 is a collection of numbers , defined for all pairs @xmath17 such that @xmath18 , satisfying the symmetry conditions @xmath19 and the upper bounds @xmath20 .",
    "note that choosing @xmath21 works , and choosing @xmath22 for all @xmath18 works too , as well as any upper bound on @xmath1 known to the nodes .",
    "we will assume that the numbers @xmath16 are uniformly bounded from above .",
    "we note that the nodes do not need to know any global information about the sequence @xmath11 to implement this iteration , and we may in fact assume that @xmath11 is exogenously or adversarially given subject to the connectivity constraint we will next describe .",
    "namely , we will assume that the graph sequence @xmath11 satisfies the long - term connectivity condition @xmath23 meaning that the communication restrictions faced by the nodes do not disconnect the network into noncommunicating groups after some finite time @xmath24 .",
    "under this assumption , the metropolis iteration of eq .",
    "( [ metropolis ] ) has the property that @xmath25 meaning that all agents suceed in converging to the average .",
    "we refer the reader to the papers @xcite for proofs of this and similar assertions .",
    "consensus protocols have proven to be useful for multi - agent control due to their attractive robustness properties ( namely , that the communication sequence @xmath11 can vary arbitrarily and unpredictably subject only to the relatively weak long - term connectivity constraint of eq .",
    "( [ connectivity ] ) ) and most importantly due to their local , distributed nature .",
    "indeed , all the information that node @xmath4 needs to implement the metropolis iteration , from its neighbor s values to upper bounds on its neighbors degrees , is locally available . in the event that information exchange is wireless",
    ", nodes may broadcast their values and degrees to their neighbors ; on the other hand , if @xmath5 are quantities like positions or velocities which are physically measured by neighbors , implementation of the metropolis iteration usually requires nodes to know upper bounds @xmath16 on the degrees of their neighbors .",
    "these bounds can be based on the inherent sensing constraints ( e.g. , no node can be sensing too many other nodes simultaneously ) or on an upper bound for the total number of nodes in the system .",
    "we remark that a number of recent advances in multi - agent control have proceeded by reduction to an appropriately defined consensus problem @xcite . moreover , under slightly stronger assumptions on the sequence @xmath11 , it is possible to design average consensus algorithms with convergence time bounds which scale quadratically with the number of nodes @xmath1 @xcite .",
    "however , a limitation of consensus protocols lies in the assumption that agent @xmath4 can update @xmath5 as a function of the states @xmath8 of its neighbors in the graph @xmath11 . while this is very natural in some settings ( such as formation or coverage control , where @xmath26 represents the position of agent @xmath9 , which neighboring agent @xmath4 can be reasonably assumed to sense ) in other contexts ( such as clock synchronization or statistical inference in sensor networks ) this implies that the agents can exchange real numbers at every step , a clearly unrealistic assumption .",
    "indeed , sensor networks which run distributed estimation protocols can not transmit real - valued messages to neighbors ; the physics of information transmission over the wireless medium instead limit the nodes to messages which come from a finite alphabet .",
    "the goal of this paper is to provide a consensus protocol which works in this setting .",
    "specifically , we provide a deterministic protocol for the nodes to exchange messages with neighbors and update @xmath5 which has the following properties :    1 .   for every time - varying sequence @xmath11",
    "subject to a certain connectivity assumption , each @xmath5 converges to the average of the initial values @xmath3 .",
    "2 .   the number of bits that is transmitted from agent to agent at each time @xmath7 is bounded above independently of @xmath27 and all other problem parameters ( in fact in our protocol the agents transmit a single element from the ternary alphabet @xmath0 to each neighbor at every @xmath7 ) .",
    "3 .   the protocol does not require any global knowledge of the graph sequence @xmath11 on the part of the nodes .",
    "4 .   the protocol has a worst - case convergence time which is provably scales polynomially in the number of nodes @xmath1 and the initial values @xmath28 .",
    "we remark that features ( 1 ) and ( 3 ) are particularly crucial since much of the attractiveness of consensus protocols arises from their abilities to cope with link failures and their local , distributed nature .",
    "feature ( 4 ) is clearly useful : the appeal of any protocol is increased by the availability of polynomial worst - case convergence bounds .",
    "finally , feature ( 2 ) ensures that we do not implicitly assume that an arbitrarily large amount of data can transmitted on each link before the graph changes    much like the metropolis protocol , our protocol assumes every node has access to upper bounds @xmath16 on the degres of its neighbors .",
    "moreover , we remark that our protocol may be considered to have binary ( rather than ternary ) messages if we identify no transmission on a link with a `` @xmath29 '' message .",
    "a number of consensus protocols in which agents exchange finitely many bits at every step have recently been proposed .",
    "we mention the paper @xcite which initiated the literature , the follow - on works @xcite , as well as the related papers @xcite . in @xcite and",
    "follow - up papers nodes exchange quantized values in order to eventually approach a neighborhood of the initial average .",
    "variations on this theme have been studied in the past several years , and we mention that the recent preprint @xcite has the best known convergence time bounds at the time of writing for these updates in discrete time . finally , a similar consensus process has been studied recently over finite fields in @xcite .    more directly related to the current work are the papers @xcite which considered the problem using quantized communications to converge to the real - valued average of the initial values _",
    "exactly _ , as we do here .",
    "the present paper is directly motivated by this literature , in particular by the observation that each of the protocols in these papers lacks at least two of the features ( 1)-(4 ) above .",
    "indeed , many of these protocols only work on fixed graphs , and furthermore utilize updates at each node which depend on global information about the network ( for example by having each node s update depend on the eigenvalues of a matrix built from the network ) .",
    "by contrast , the protocol we propose in this paper requires no knowledge about the time - varying graph sequence @xmath11 to implement with the possible exception of each node having upper bounds on the degrees of its neighbors .",
    "we now describe the organization of the remainder of the paper .",
    "we begin by stating our main result in section [ statement ] , where we provide an informal description as well as a formal statement of our protocol .",
    "the proof of the main convergence theorem is given in the subsequent section [ mainthmproof ] .",
    "some simulations of our our protocol are provided in section [ simulations ] .",
    "finally , section [ conclusions ] provides some conclusions and lists some open problems .",
    "we note in particular that our new consensus protocol makes more stringent than usual assumptions on the graph sequence @xmath11 and has more storage than the ordinary consensus algorithms , and we pose the improvement of these features as open problems .",
    "we first reprise the notation we have introduced : @xmath11 is a sequence of undirected graphs with a self - loop at every node , @xmath14 is the set of neighbors of node @xmath4 in @xmath11 , and @xmath15 is the degree of node @xmath4 in @xmath11 .",
    "we begin by informally describing the idea behind our protocol .",
    "we would like to run the metropolis update of eq .",
    "( [ metropolis ] ) , but without the ability to transmit real numbers , node @xmath4 will not know the values of its neighbors @xmath8 exactly .",
    "consequently , node @xmath4 will maintain an estimate of @xmath26 ; we will use the notation @xmath30 for the estimate that node @xmath4 has at time @xmath7 for @xmath26 .    at each time",
    "@xmath7 , node @xmath4 will receive a message from each of its neighbors @xmath31 from the alphabet @xmath0 .",
    "if it receives a @xmath32 , it will add @xmath33 to @xmath34 ; if it receives a @xmath35 , it adds a @xmath36 to the same ; and if it receives a zero , it leaves @xmath34 unchanged .",
    "naturally , node @xmath9 decides to send a @xmath37 depending on whether @xmath38 is too low by at least @xmath33 , within @xmath33 of the true value , or too high by a factor of at least @xmath33 , respectively .",
    "a key point is that even though it is node @xmath4 which maintains the variable @xmath34 , node @xmath9 knows what it is because it is built from previous messages sent by node @xmath9 to node @xmath4 .",
    "note that this update rules may require nodes to send different messages to different neighbors .",
    "the number @xmath39 will be in @xmath40 so that @xmath41 which will be key in ensuring that the estimates @xmath34 increasingly become accurate for links that appear regularly .",
    "meanwhile , the nodes will implement the metropolis update , however with each node @xmath4 using its latest estimate @xmath34 instead of the true value @xmath8 .",
    "however , node @xmath4 will not include all its neighbors in the metropolis updates ; rather , it will include only those nodes @xmath9 which sent it a zero at time @xmath7 ( meaning that node @xmath4 estimate of @xmath9 s value is not too far from the truth ) and whose associated estimates @xmath42 are sufficiently far from @xmath5 ( so that the inevitable pertubration error inherent in using imprecise estimates does not affect the convergence analysis too much ) .    furthermore , we introduce a stepsize of @xmath43 into the metropolis algorithm where @xmath44 and @xmath45 . by choosing @xmath46",
    ", we ensure that agents change their values @xmath47 slower than estimates @xmath34 change .",
    "intuitively , while the estimates @xmath34 will get accurate by an additive factor of @xmath33 whenever they are very inaccurate , the values @xmath47 will have their movement attenuated by a factor of @xmath43 .",
    "the introduction of the @xmath43 stepsize ensures that not only do the estimates eventually `` catch up '' to the true values but also that we can give simple bounds on how long it takes until estimates become accurate .",
    "the nodes begin with initial values @xmath28 .",
    "every node @xmath4 will maintain variables @xmath48 for every node which has been its neighbor in some past @xmath11 .",
    "node @xmath4 initializes @xmath49 at the first time @xmath7 when the edge @xmath50 belongs to @xmath51 .",
    "at each iteration @xmath52 , node @xmath4 will send a value from the set @xmath0 to each of its neighbors @xmath9 in @xmath11 .",
    "the value @xmath4 sends to @xmath9 is @xmath53\\ ] ] where @xmath54 = \\begin{cases } 1 & \\mbox { if } x > 1 \\\\ 0 & \\mbox { if } -1 \\leq x \\leq 1 \\\\ -1 & \\mbox { if } x < -1 \\end{cases}\\ ] ] note that node @xmath4 may send different messages to different neighbors . after sending @xmath55 to each neighbor @xmath31 and receiving @xmath56 from the same",
    ", node @xmath4 updates the values @xmath57 as @xmath58 if @xmath59 and consequently no message from @xmath9 to @xmath4 was sent , but @xmath57 have been previously initialized , then node @xmath4 simply keeps the variables @xmath57 as they are : @xmath60 each node then updates its value @xmath5 as @xmath61 here @xmath16 is , as in the metropolis protocol , a collection of numbers satisfying the symmetry conditions @xmath19 and the upper bounds @xmath62 ; and @xmath63 is the set of neighbors @xmath9 of node @xmath4 in @xmath11 which satisfy @xmath64 and @xmath65      we now provide the main convergence theorem for our protocol .",
    "we begin with a few definitions needed to specify the class of graph sequences on which our protocol is guaranteed to work .",
    "we will call the graph sequence @xmath11 @xmath66-core - connected if there exists a set of edges @xmath67 such that the graph @xmath68 is connected ; and @xmath69 for every nonnegative integer @xmath24 .",
    "that is , a sequence is @xmath66-core - connected if there is a set of edges , forming a connected graph , each of which appears in every interval @xmath70 $ ] .",
    "we will say that the edges in @xmath71 are _ core edges_. our main result provides upper bounds on the time until our consensus protocol reduces a certain measure of disagreement to a small value forever .",
    "we now define this measure ( this is @xmath72 in the next definition ) as well as several related concepts .",
    "@xmath73    note that will use the natural shorthands @xmath74 for @xmath75 .",
    "finally , we will use the notation @xmath76 for the supremum of the all the quantities @xmath16 upper bounding the degrees . note that if @xmath77 then we can trivially bound @xmath78 .",
    "we can now state the main result of this paper .",
    "[ precursorthm ] if @xmath79 then for all nodes @xmath4 , initial values @xmath80 , and @xmath66-core - connected sequences @xmath11 , it is true that @xmath81 moreover , if refers to the smallest integer which is at least @xmath82 . ]    @xmath83    then @xmath84 for all @xmath17 .",
    "our result states that the consensus protocol of the previous section succeeds in computing the average on @xmath66-core - connected sequence and provides a bound for its convergence time .",
    "while the above convergence time expression is somewhat unwieldy , we emphasize that it is polynomial in @xmath85 for any choice of @xmath39 and @xmath86 satisfying the assumption @xmath79 .",
    "observe that there is a tradeoff between the steady - state and transient terms in the convergence time bound .",
    "in particular , as @xmath87 , the term @xmath88 is going to dominate all the other terms in the convergence time expression . consequently , to obtain the best asymptotic decay rate we should choose @xmath39 close to @xmath89 which means we must also choose @xmath86 close to @xmath89 . in that case ,",
    "error decay at time @xmath7 decays nearly as well as @xmath90 as @xmath7 approaches infinity . however , choosing @xmath91 and @xmath92 causes the transient term to blow up , so that it takes longer and longer until the asymptotically dominant term dominates the other terms .    in general",
    ", there is no single best choice of @xmath93 which optimizes the convergence time expression ; rather every choice gives us a tradeoff between transient bounds and steady - state decay .",
    "for example , choosing @xmath94 gives us that the time until @xmath95 is @xmath96 note that every term which does not have an @xmath97 in it will become negligible as @xmath87 . in this limit",
    ", the dominant term will be @xmath98 which will grow faster as @xmath87 than the logarithmic term @xmath99 .",
    "on the other hand , choosing @xmath100 gives us that the time until @xmath101 is @xmath102 which has a worse asymptotic term @xmath103 but the rest of the terms are smaller if @xmath104 are large .",
    "the analysis of consensus algorithms usually relies on a weaker notion of connectivity , namely the so - called @xmath66-connectivity ( sometimes called uniform connectivity ) condition : a sequence @xmath11 of undirected graphs is called @xmath66-connected if for each @xmath24 , the graph @xmath105 is connected . for any fixed @xmath66 ,",
    "there are more @xmath66-connected sequences than @xmath66-core - connected sequences .",
    "it is an open question to prove a convergence time bound similar to our main result on @xmath66-connected sequences .",
    "our protocol requires node @xmath4 to keep track of the numbers @xmath106 for every other node @xmath9 it interacts with .",
    "by contrast , the standard consensus algorithm keeps track of only a single real number , namely @xmath5 at node @xmath4 .",
    "unfortunately , it seems that a `` storage blowup '' phenomenon of this sort is unavoidable , though it remains an open question to prove this in any formal sense .    as a consequence ,",
    "our consensus protocol is is most attractive on graphs sequences @xmath11 in which every node interacts with a relatively small number of neighbors .",
    "one such example is the geometric random graph model of wireless networks , in which sensors have locations in @xmath107 ^ 2 $ ] and every node is connected to an expected @xmath108 neighbors @xcite .",
    "our consensus protocol will work in such networks , even if unpredictable interference or maliicous jamming makes links unreliable , with every node needing to store only @xmath108 additional estimates .",
    "we have not assumed that the nodes know the constant @xmath66 .",
    "however , if the nodes do happen to know @xmath66 or an upper bound on it , they may use it to somewhat reduce their storage requirements . rather than keep track of the estimates @xmath34 for every node @xmath9 that it has interacted with in the past , node @xmath4 can instead just keep track of estimates for just those nodes it has interacted with in the past @xmath66 steps .    our main result , theorem [ precursorthm ] , will then hold verbatim , since our proof of this theorem ( in the next section ) proceeds by analyzing reductions in @xmath109 obtained when neighbors connected by core edges include each other in their metropolis updates , which are unaffected by this modification .",
    "the introduction of the stepsize @xmath43 with @xmath46 is crucial for our proof here .",
    "a main thrust of our argument is that after some transient period , we will have that @xmath43 is negligible compared to @xmath33 , so that estimates across each core link get accurate due to messages between nodes much faster than they drift apart due to node updates .",
    "this argument is the source of the exponent @xmath110 in the first term of our final convergence time bound .",
    "this section is devoted to the proof of our main result , theorem [ precursorthm ]",
    ". we will begin with a long sequence of lemmas which will establish properties of our consensus protocol , putting off the calculations that lead to the bound of theorem [ precursorthm ] as much as possible .",
    "roughly speaking , our initial sequence of lemmas will establish elementary properties of the protocol .",
    "in particular , we rewrite our protocol in more convenient form and establish that several lyapunov functions are conserved by our protocol .",
    "our first substantive statement then comes in lemma [ correctestimate ] which states that , across core edges , estimates get more and more accurate over time . shortly thereafter",
    ", lemma [ mainlemma ] establishes that , after a transient period , the dispersion of the values @xmath28 will decrease by a certain proportion whenever it is not already small .",
    "the complete proof of theorem [ precursorthm ] follows shortly afterwards .",
    "we now proceed to our first lemma , which states the natural fact that the estimate @xmath111 maintained by node @xmath9 equals the estimate @xmath34 maintained by node @xmath4 ( intuitively , this says that each node knows all other node s estimates of its own value ) .",
    "[ estimates ] @xmath112 whenever these variables are defined .",
    "recall that the variables @xmath34 and @xmath111 are initialized and maintained at the first time @xmath50 appears in the sequence @xmath11 .",
    "the first time @xmath113 , the variables @xmath38 and @xmath114 are initialized to zero by both nodes @xmath4 and @xmath9 .",
    "subsequently , they are updated as ( see section [ description ] ) @xmath115 at each time @xmath7 such that @xmath113",
    ". consequently , they have the same value at all times .",
    "the next corollary tells us that if node @xmath4 includes its estimate of the value of node @xmath9 in its metropolis update , then , symmetrically , node @xmath9 includes its estimate of node @xmath4 s value in its own metropolis update .",
    "[ symlinks ] @xmath116 if and only if @xmath117 .",
    "suppose @xmath116 .",
    "this happens if and only if @xmath118 and @xmath119 the condition @xmath118 is naturally symmetric between @xmath4 and @xmath9 .",
    "moreover , using lemma [ estimates ] , we have that eq .",
    "( [ bigdifference ] ) is equivalent to @xmath120 so that @xmath117 .",
    "we next observe that the update equations of our protocols may be rewritten in a convenient form :    [ wbounds ] defining @xmath121 we then have that @xmath122 and moreover @xmath123 for all @xmath17 such that @xmath116 .",
    "the only thing that needs to be proven are the lower and upper bounds on @xmath124 .",
    "now if @xmath116 we have @xmath125 moreover , we also have that @xmath126 , which means that @xmath127 and similarly , @xmath128 which means @xmath129 .",
    "we therefore have @xmath130 and combining this with eq .",
    "( [ atleast4 ] ) , @xmath131,\\ ] ] which completes the proof .    as a consequence of lemma [ estimates ]",
    ", we have that @xmath132 for all @xmath133 . [ symw ]",
    "our next lemma rewrites the update dynamics of our consensus protocol in matrix form .",
    "we may rewrite the main update eq .",
    "( [ mainiter2 ] ) as [ convexrewriting ] @xmath134 where @xmath135 is a symmetric , stochastic , diagonally dominant matrix with the property that if @xmath136 is positive , then @xmath137 .",
    "[ symstoch ]    from eq .",
    "( [ update ] ) ,    @xmath138    we therefore define @xmath135 in the natural way from the above equation by setting @xmath139 for all @xmath140 and @xmath141 by construction the rows add up to @xmath89 .",
    "the off - diagonal entries are clearly nonnegative , and the matrix is diagonally dominant because lemma [ wbounds ] implies that @xmath142 this makes @xmath135 nonnegative , stochastic , and diagonally dominant . finally , remark [ symw ] implies that @xmath135 is symmetric .",
    "the next lemma lists some natural lyapunov functions for our protocol .",
    "@xmath143 is nonincreasing , @xmath144 is nondecreasing , and @xmath145 is nonincreasing .",
    "[ monotonicity ]    the first two claims follow immediately from the stochasticity of @xmath135 .",
    "the last one follows from the symmetry of @xmath146 - see @xcite for a proof .",
    "we will later require a bound on how large the estimates held by any node can be at any time .",
    "the following lemma upper bounds this quantity in terms of a measure of the initial dispersion .    for all @xmath133 such that @xmath42 is defined , @xmath147 [ estimatesbound ]    by induction",
    ", @xmath42 belongs to the convex hull of @xmath29 and @xmath148 .",
    "consequently , its absolute value can not be larger than @xmath149 .",
    "by lemma [ monotonicity ] , this is at most @xmath150 .",
    "we will also need the following observation : there is an upper bound on how much each node moves every step , and that upper bound decays to zero with time as @xmath43 .",
    "this is stated formally in the next lemma .",
    "[ incbound ] @xmath151    lemma [ monotonicity ] implies that for any @xmath7 , @xmath152 and then the current lemma follows from eq .",
    "( [ update ] ) .",
    "having recorded a number of facts about our protocol in the previous sequence of lemmas , we now turn to arguing that estimates on core edges get accurate over time .",
    "our starting point is next lemma which makes the following observation : if @xmath153 and @xmath7 is large enough , then the quantity @xmath154 , which may be thought of as an `` estimation error '' between the estimate @xmath155 and the true value @xmath156 , decreases from step @xmath157 to step @xmath158 by a multiple of @xmath33 .    if @xmath153 and @xmath159 and @xmath160 then @xmath161 [ decbound ]    indeed , under the assumption @xmath153 we have @xmath162 where the last step used lemma [ incbound ] . now because we are assuming @xmath7 is large enough so that @xmath163 we will then have the upper bound @xmath164 which allows us to eliminate @xmath165 from the above equation : @xmath166 where we needed that @xmath160 for the final inequality .",
    "we now proceed to our first substantial lemma , which proves that after a transient period the `` estimation error '' @xmath167 across core links @xmath50 decays to zero at a rate of @xmath168 .",
    "[ correctestimate ] if @xmath169 then @xmath170 for every pair of nodes @xmath17 such that the edge @xmath50 is a core edge .",
    "let @xmath171 be the set of times when the core edge @xmath50 appears in the graph sequence @xmath11 .",
    "suppose @xmath172 so that in particular @xmath173 and lemma [ decbound ] is applicable at all times in @xmath174 $ ] .",
    "observe that since @xmath50 is a core edge and since @xmath175 , the intersection of @xmath171 and @xmath174 $ ] is nonempty .",
    "we consider the messages sent across the edge @xmath50 to node @xmath4 and in particular we consider the last time when @xmath176 during the interval @xmath177 $ ] .",
    "there are three posibilities : ( i ) @xmath178 for all @xmath179 $ ] .",
    "( ii ) @xmath180 for at least one @xmath181 $ ] but the last such @xmath182 is less than @xmath183 .",
    "( iii ) @xmath184 for some @xmath185 .",
    "we will derive an upper bound on the `` estimation error '' @xmath186 in each of these three cases and put the three inequalities together later .    * case ( i ) : * we have that by lemma [ decbound ] , @xmath187 decreases by at least @xmath188 from @xmath189 whenever @xmath50 appears in @xmath190 ; moreover , by lemma [ incbound ] the same quantity increases by at most @xmath191 whenever @xmath50 does not appear in the graph sequence . since by lemmas [ monotonicity ] and [ estimatesbound ] , @xmath192",
    "we can consequently conclude that @xmath193 }   \\frac{7/8}{k^{\\alpha}}.\\ ] ] we manipulate this expression by invoking the assumption that every core edge appears in each block of times @xmath70 $ ] .",
    "this means that because @xmath171 has nonzero intersection with each @xmath194 $ ] , we can infer that for any @xmath195 $ ] such that @xmath196 and @xmath197 we have or more has at least one element from @xmath171 .",
    "moreover , since @xmath198 is a decreasing function of @xmath24 , we have that @xmath199 } \\frac{1}{k^{\\alpha } } \\geq \\sum_{k \\geq 1 \\mbox { such that } a + k 2b \\leq b } \\frac{1}{(a+k2b)^{\\alpha}}\\ ] ] now since @xmath200 ( due to the assumption @xmath196 ) , we have that @xmath201 so that @xmath199 } \\frac{1}{k^{\\alpha } } \\geq   \\left ( \\frac{1}{2 } \\frac{1}{(a+2b)^{\\alpha } } + \\frac{1}{2 } \\frac{1}{(a+2b)^{\\alpha } }   + \\sum_{k \\geq 2 \\mbox { such that } a + k 2b \\leq b}^b \\frac{1}{k^{\\alpha } } \\right ) \\geq    \\sum_{k \\geq 0 \\mbox { such that } a + k 2b \\leq b } \\frac{1}{2 \\cdot 1.5^{\\alpha } k^{\\alpha}}\\ ] ] which implies @xmath199 } \\frac{1}{k^{\\alpha } } \\geq \\frac{1}{2b } \\sum_{k = a}^b \\frac{1/3}{k^{\\alpha}}.\\ ] ] ] : @xmath199 } \\frac{7/8}{k^{\\alpha } }   \\geq \\frac{1}{8b } \\sum _ { k = a}^b \\frac{1}{k^{\\alpha}}.\\ ] ] plugging this into eq .",
    "( [ firstb ] ) ( which we can do since @xmath202 and @xmath203 ) , @xmath204 now since the inequality @xmath205 implies that @xmath206 for all @xmath207 $ ] , we have :    @xmath208    * case ( ii ) : * the only difference from case @xmath209 is that rather than bounding the change in @xmath210 from time @xmath211 to time @xmath7 , we bound it on from time @xmath182 to time @xmath7 .",
    "indeed , since @xmath212 , we have that @xmath213 and consequently @xmath214 } \\frac{7/8}{k^{\\alpha}}\\ ] ] since @xmath215 and @xmath216 , we can apply an identical argument as in case ( i ) to obtain @xmath217    * case ( iii ) : * we proceed as in case ( ii ) by bounding the change in @xmath210 from time @xmath182 to time @xmath7 . in this case , however , we rely on the fact that @xmath218 , so that a straightforward application of lemma [ incbound ] as well as the bound @xmath219 gives : @xmath220    putting it all together , we have :    @xmath221    our next step is to lower bound the sums appearing on the right - hand side of the above equation . using the standard method of lower - bounding the sum of a nonincreasing function by an integral , we have @xmath222 now the lower bound on @xmath7 we have assumed in the statement of this lemma implies that @xmath223 moreover , @xmath224 .",
    "plugging these two inequalities into eq .",
    "( [ sqrtbound ] ) we get that the first term in the maximization of eq .",
    "( [ withsumbound ] ) is nonpositive .",
    "as for the second term in the maximization , it is therefore bounded as @xmath225 and since @xmath226 for all the values of @xmath182 over which we are maximizing , the expression inside the maximum is an increasing function where @xmath227 then @xmath228",
    "the latter expression is nonnegative whenever @xmath229 .",
    "now in the above expression , @xmath230 so we must verify that @xmath231 this holds if @xmath232 because @xmath233 of @xmath182 .",
    "consequently , we may choose @xmath234 in the second term , which immediately implies the current lemma .",
    "we next demonstrate a consequence of the previous lemma : if @xmath7 is large enough and the message @xmath235 on a core edge is nonzero at some time , then the same message @xmath235 will be zero for a substantial amount of time afterwards whenever the edge @xmath50 appears .",
    "intuitively , this lemma says that messages across a core edge can not be in @xmath236 almost always : at least a constant fraction of the time , a message across a core edge should equal zero .",
    "[ messagesexchangepre ] suppose @xmath237 and the edge @xmath50 is a core edge . if @xmath238 then @xmath239 for all @xmath240 $ ] during which @xmath50 appears .    by lemma [ correctestimate ]",
    ", @xmath241 consequently , @xmath238 implies that for each @xmath242 $ ]    @xmath243    here the first two inequalities follow from lemma [ incbound ] ; the third follows from eq .",
    "( [ decbound ] ) ; and the last one follows by plugging in eq .",
    "( [ estappl ] ) .    we claim that our assumption @xmath244 implies the final expression on the right is always less than @xmath245 .",
    "indeed , this assumption implies that @xmath232 so that @xmath246 and @xmath247",
    ". consequently , @xmath248 where the last step used our assumed lower bound on @xmath7 which implies that @xmath249 .",
    "the last inequality is , after rearranging , precisely our claim that the right - hand side of eq .",
    "( [ expr ] ) is at most @xmath245 .    since @xmath250 for all @xmath251 $ ] , we have that @xmath239 for all @xmath252 $ ] when the edge @xmath50 appears .",
    "a corollary of this lemma is that every @xmath253 steps , both messages @xmath235 and @xmath254 across a core link will be zero .",
    "this is stated formally in the following lemma .",
    "this is a key lemma for us , and we will use it later to argue that as long as the values @xmath5 are not very close together , a @xmath109-reducing metropolis update should eventually take place .",
    "[ messagesexchange ] suppose the edge @xmath50 is a core edge and suppose @xmath7 is a multiple of @xmath66 satisfying @xmath255 then there exists a time in @xmath256 $ ] with @xmath257    indeed , since the edge @xmath50 appears at least once in every period @xmath70 $ ] , it follows it must appear at least thrice within the period @xmath256 $ ] . if both @xmath235 and @xmath254 are zero during the first of those times , we are finished .",
    "if not , lemma [ messagesexchangepre ] implies they will be zero during either the second or the third of these times .",
    "our next lemma forms the core of the proof our main theorem .",
    "informally , it states that if the variance is not too low , it must decrease by a multiplicative factor over the next @xmath253 steps . before proceeding , we need to mention the standard relationship between @xmath258 and @xmath109 which we will use : @xmath259    suppose that @xmath7 is a multiple of @xmath66 satisfying @xmath260 and @xmath261 then @xmath262 [ mainlemma ]    because the subgraph consisting of core edges is connected , we have that at any time @xmath7 there exists a core edge @xmath50 such that @xmath263 . indeed ,",
    "if it were otherwise , then taking the shortest path along core edges from a node with the smallest value to a node with the largest value and considering the change in the value along each edge we would get that @xmath264 , which is nonsense .",
    "thus we can conclude that for some core edge @xmath50 , @xmath265 now applying eq .",
    "( [ infty2ineq ] ) to eq .",
    "( [ assumption ] ) we have , @xmath266    putting the last pair of inequalities together , @xmath267    now our assumed lower bound @xmath268 allows us to apply corollary [ messagesexchange ] and claim there exists a time @xmath182 in @xmath256 $ ] such that @xmath269 .",
    "moreover , since between times @xmath7 and @xmath270 , both @xmath5 and @xmath26 can change by at most @xmath271 , and our assumed lower bound on @xmath7 implies that this is at most @xmath272 .",
    "this means @xmath273 and so @xmath274 where we used @xmath232 for the final inequality .",
    "the above equation implies that @xmath275 and consequently @xmath276 .",
    "moreover , putting eq .",
    "( [ bigdiff ] ) with the observation in the previous paragraph that both @xmath277 and @xmath278 are upper bounded by @xmath272 , we have that @xmath279 where the last inequality used the monotonicity of @xmath109 and the penultimate inequality used eq .",
    "( [ nonefive ] ) .",
    "we now proceed to lower bound the decrease from @xmath280 to @xmath281 due to the link between @xmath4 and @xmath9 at time @xmath182 .    since @xmath275 we have that @xmath282 is positive , and therefore @xmath283 .",
    "using the decomposition ( see @xcite , @xcite ) @xmath284_{kl } ( \\e_k - \\e_l ) ( \\e_k - \\e_l)^t,\\ ] ] where @xmath285 as usual means the @xmath24th basis vector , we have that @xmath286_{kl } ( t ) ( x_k(t'-1 ) - x_l(t'-1))^2 , \\end{aligned}\\ ] ] and , since @xmath287 is diagonally dominant and satisfies @xmath283 , we have that @xmath288_{ij } \\geq ( 1/(16   d(i , j , t ' ) ) $ ] ; moreover , using eq .",
    "( [ primevar ] ) , we obtain @xmath289 so @xmath290 and therefore @xmath291 and since @xmath109 is nonincreasing in @xmath7 ( lemma [ monotonicity ] ) and @xmath292 , this concludes the proof .    with this quantitative bound on the decrease of @xmath109 , we are almost ready to begin the proof of our main result , theorem [ precursorthm ] . however , we first need the following technical lemma which will allow us to bound some of the expressions which will appear in the course of the proof that theorem .",
    "the function @xmath293 with @xmath294 , where the constants @xmath295 and @xmath296 are positive , is nondecreasing over the range @xmath297 where @xmath298 is any positive number which satisfies @xmath299 .",
    "[ nondeclemma ]    we have @xmath300 so @xmath301 if @xmath302 or @xmath303 moreover , the expression on the left - hand side is nondecreasing for nonnegative @xmath24 .",
    "we now proceed to the proof of our main result . following the numerous lemmas which we have already established , the proof now follows by a straightforward ( albeit tedious ) calculation .",
    "indeed , lemma [ mainlemma ] tells us that either @xmath109 is small in the sense of being bounded above by something that goes to zero with time , or @xmath109 decreases by a multiplicative factor .",
    "it is now an exercise in analysis to use this dichotomy to obtain an upper bound on the rate at which @xmath109 approaches zero .",
    "let us use the shorthand @xmath304 and let us suppose @xmath305 is a multiple of @xmath66 which satisfies @xmath306 .",
    "( [ assumption ] ) holds at times @xmath307 for some @xmath308 , then we can apply lemma [ mainlemma ] to get @xmath309 which , using the inequality @xmath310 , implies @xmath311 which in turn implies @xmath312 now fix @xmath313 to be the first multiple of @xmath66 which is at least @xmath314 , and observe that @xmath7 ( which satisfies the lower bound we have assumed in the theorem statement ) is at least @xmath313 .",
    "we now consider the last time in the set @xmath315 when eq .",
    "( [ assumption ] ) holds .",
    "we consider three possibilities .",
    "it may be that eq .",
    "( [ assumption ] ) holds for all numbers in @xmath316 . in that case ,",
    "( [ alwaysmult ] ) implies @xmath317 on the other hand , it may be that the last number in @xmath316 when eq .",
    "( [ assumption ] ) does not hold occurs at time @xmath318 or afterwards . in that case , @xmath319 finally , it may be that there exists a number @xmath320 where eq .",
    "( [ assumption ] ) does not hold , but the last such @xmath24 occurs before @xmath318 . in that case , by considering the variance decay from the next multiple of @xmath66 after @xmath24 and applying lemma [ mainlemma ] , we obtain @xmath321 putting the last three inequalities together , we have the unconditional bound    @xmath322    lets consider how long it takes the first term to fall below @xmath97 .",
    "the inequality @xmath323 is implied by @xmath324 or @xmath325 which , using the inequality @xmath326 for @xmath308 , is in turn implied by @xmath327 which is implied by @xmath328 next we consider the second term in the maximum of eq .",
    "( [ unconditional ] ) .",
    "we will argue that it is maximized at the choice of @xmath329 .",
    "indeed , since @xmath7 is fixed and the maximization is over @xmath24 , we are maximizing the function @xmath330 we now appeal to lemma [ nondeclemma ] . in the notation of that lemma , @xmath331 .",
    "the lemma then tells us that if @xmath313 is large enough so that @xmath332 we may set @xmath329 in the maximization problem .",
    "but since @xmath333 , we have that @xmath334 so that for eq .",
    "( [ tcond ] ) to be true it suffices that @xmath335 which clearly holds by definition of @xmath314 . as a consequence",
    ", we finally have @xmath109 is below @xmath97 if    @xmath336    after some simple algebra and rearrangement of terms , this becomes the bound of theorem [ precursorthm ] .",
    "here we report on some simulations of our consensus protocol .",
    "we will be focusing on seeing how the performance of our protocol scales with the time @xmath7 for fixed @xmath1 and seeing how the time to reach a certain level of accuracy scales with the number of nodes for various graph topologies .",
    "we will be simulating a slightly modified form of our protocol in which we omit the stepsize of @xmath43 , i.e , in which we set @xmath337 .",
    "the introduction of this stepsize is a mathematical necessity for our convergence result , but it does not appear to be practically necessary .",
    "similarly , we will double the weight every agent places on its neighbors as our consensus protocol is likely too conservative .",
    "thus we will be simulating the update @xmath338 instead of eq .",
    "( [ mainiter2 ] ) .",
    "@xmath339{ternarypic1.eps } & \\includegraphics[width=3.2in]{ternarypic2.eps }   \\end{array}$ ]    in figure [ time - error ] , we show the decay of the error @xmath340 with time for the complete graph and the line graph with @xmath341",
    ". much like our error bound predicts , we see a slow decay which appears to be asymptotic to a power of @xmath7 .",
    "we point out the jagged features of the graph , which are more prominent in the case of the line : it often takes some time for the estimates @xmath34 to become accurate , which results in periods without any updates .",
    "@xmath339{ternarypic4.eps } & \\includegraphics[width=3.2in]{ternarypic5.eps }   \\end{array}$ ]    in the next figure [ nscaling ] , we are concerned with the time it takes our consensus protocol to achieve a certain level of error ; we plot the time until @xmath342 for the complete graph and the line graph .",
    "as expected , for the complete graph , the time does not grow with @xmath1 .",
    "we note how irregular this time is for the complete graph . finally , we see a reasonably slow growth with @xmath1 for the case of the line .",
    "@xmath339{ternarypic3.eps } & \\includegraphics[width=3.2in]{ternarypic6.eps }   \\end{array}$ ]    finally , in figure [ varying ] , we show our protocol on a time - varying graphs .",
    "we generate a random line at every stage by first relabeling the vertices uniformly at random and then connecting them in a standard line ( i.e. , putting an edge between @xmath89 and @xmath343 , @xmath343 and @xmath344 , and so forth ) .",
    "we see that the protocol appears to work , but the convergence time is considerably slower than for either of our fixed graph examples .",
    "we have provided a consensus protocol in which nodes exchange ternary messages at every step .",
    "in contrast to the previous literature , our protocol can handle time - varying graph sequences , requires the exchange of only finitely many bits at every step , comes with a polynomial - time convergence rate , and does not need knowledge of either the sequence @xmath11 or the number of agents to be implemented .",
    "our paper naturally raises a number of open questions .",
    "first , our protocol uses more storage than the standard consensus algorithm due to the need by each node @xmath4 to maintain the estimates @xmath106 .",
    "is it possible to avoid this without using `` unphysical '' operations ( for example , interleaving the digits of two real numbers to form a single real number ) ?",
    "secondly , our convergence time result was demonstrated to hold on @xmath66-core - connected graph sequences .",
    "however , most of the previous literature on consensus protocol has relied on the weaker assumption of @xmath66-connected graph sequences .",
    "an open question is to derive a similar convergence time result on the larger class of @xmath66-connected sequences .",
    "third , while the standard consensus protocol can be said to rely on broadcasts in the sense that each neighbor of node @xmath9 measures or receives the same value @xmath26 at time @xmath7 , our protocol relies on individualized messages from every node to each of its neighbors .",
    "we wonder whether there exists a consensus protocol with the same properties as ours ( finitely many bits exchanged at each step , polynomial convergence rate on time - varying graphs , does not require knowledge of the graph sequence or of the number of which agents ) which relies only on broadcasts by each node at every step .    finally , the relation between speed , storage , and communication overhead in consensus is still poorly understood .",
    "there appear to be some tradeoffs involved between these quantities ; for example , the current paper which puts aside the assumption that nodes can transmit real numbers derives a slower convergence time bound in contrast to the best average consensus convergence time @xcite and has a larger amount of storage at each node .",
    "however , whether there are indeed any formal tradeoffs between these quantities is not clear at present .",
    "the author would like to thank zhirong qiu for pointing out several errors in an earlier version of this manuscript .",
    "blondel , j.m .",
    "hendrickx , a. olshevsky , j.n .",
    "tsitsiklis , `` convergence in multiagent coordination , consensus , and flocking , '' _ proceedings of the 44th ieee conference on decision and control _ , seville , spain , 2005 .",
    "p. frasca , r. carli , f. fagnani and s. zampieri , `` average consensus on networks with quantized communication , '' _ international journal of nonlinear and robust control _",
    "1787 - 1816 , 2009 .",
    "a.   jadbabaie , j.   lin , and a.  s.   morse , `` coordination of groups of mobile autonomous agents using nearest neighbor rules , '' _ ieee transactions on automatic control _ ,",
    "48 , no .   3 , pp.988 - 1001 , 2003 .",
    "s. liu , t. li , l. xie , `` distributed consensus for multi - agent systems with communication delays and limited data rate , '' _ siam journal on control and optimization _ , vol .",
    "6 , pp . 2239 - 2262 , 2011 .",
    "a. nedic , a. olshevsky , a. ozdaglar and j. n. tsitsiklis , `` on distributed averaging algorithms and quantization effects , ''",
    "_ ieee transactions on automatic control _ , vol .",
    "2506 - 2517 , 2009 .",
    "j. n. tsitsiklis , d. p. bertsekas , and m. athans , `` distributed asynchronous deterministic and stochastic gradient optimization algorithms , '' _ ieee transactions on automatic control , _ vol .",
    "31 , no . 9 , 1986 , pp . 803 - 812"
  ],
  "abstract_text": [
    "<S> we provide a protocol for real - valued average consensus by networks of agents which exchange only a single message from the ternary alphabet @xmath0 between neighbors at each step . </S>",
    "<S> our protocol works on time - varying undirected graphs subject to a connectivity condition , has a worst - case convergence time which is polynomial in the number of agents and the initial values , and requires no global knowledge about the graph topologies on the part of each node to implement except for knowing an upper bound on the degrees of its neighbors .    </S>",
    "<S> consensus protocols , multi - agent systems , distributed control .    93a14 , 93c55 , 68q85 </S>"
  ]
}
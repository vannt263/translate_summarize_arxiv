{
  "article_text": [
    "monte carlo ( mc ) event generators have the double purpose to compensate for detector inefficiencies and to provide theoretical predictions for distributions and integrated cross sections . the second task is more important and difficult .",
    "precision predictions of the standard model , with a total error below 0.5% , for the process of production of the fermion pair in electron ",
    "positron scattering ( @xmath20 ) were first obtained for energies close to the @xmath15 resonance with the mc event generator koralz  @xcite ( see also the latest version  @xcite ) .",
    "the prototype of the modern mc event generator for this process was constructed earlier  @xcite , but it could not deliver sub - per cent precision , because it did not include electroweak corrections and second order qed corrections ( it later became a part of the koralz package ) .",
    "koralz was originally developed for a simulation of the @xmath2-pair production and decay , and later on was extended to muon , quark and neutrino pairs , @xmath21 .",
    "the bhabha scattering @xmath22 was never included in koralz and a dedicated precision mc event generator bhlumi  @xcite was developed for this process .",
    "bhlumi , at the expense of specializing to small scattering angles , could deliver at lep1 energies the integrated cross section with the record total precision of 0.06%  @xcite .",
    "it should be stressed , however , that the high - precision level of koralz and bhlumi was achieved thanks to exclusive exponentiation  @xcite ( eex ) based on the classical work of yennie  frautschi  suura ( yfs )  @xcite , in which the multiple soft and hard real photons are treated in a completely realistic way , i.e. four - momenta are generated , and the infrared ( ir ) cancellations between real and virtual soft photons occur exactly to infinite order .    at the end of lep2 operation the total cross section for",
    "the process @xmath23 will have to be calculated with a precision of @xmath24@xmath25 , depending on the event selection  @xcite .",
    "the arbitrary differential distributions also have to be calculated with the corresponding precision . in future linear colliders ( lcs )",
    "the precision requirement can be substantially stronger , especially for the high luminosity option , as in the tesla case .",
    "the above new requirements necessitate the development of a new calculational framework for the qed corrections and the construction of new dedicated mc programs .",
    "the present work is an important step in this direction .",
    "the main limiting factor that prevents us from getting more precise theoretical predictions for the @xmath26 process is higher - order qed radiative corrections ( the qed part of electroweak standard model ) . in order to achieve the 0.2% precision tag , the virtual corrections have to be calculated up to 23 loops and the multiple bremsstrahlung up to 23 hard photons , integrating exactly the multiphoton phase space for the arbitrary event selection ( phase - space limits ) .",
    "the mc event generators koralz and bhlumi , although representing the state of the art of mc evaluation of qed radiative corrections for @xmath26 at the beginning of the lep2 run , are strongly limited in their development towards higher precision .",
    "the main limitation is rooted in the use of the spin - summed differential cross sections in the otherwise so successful yfs / eex  instead of using spin amplitudes directly .",
    "for this reason , certain interferences such as the one between initial - state radiation ( isr ) and final - state radiation ( fsr ) had to be neglected , especially in the calculations beyond first order .",
    "also , in any processes with more feynman diagrams , such as the bhabha process , eex suffers from the proliferation of the interference terms , especially beyond first order .",
    "eex neglects isr  fsr interferences .",
    "however , they were often unimportant  at the z peak much below 1% of the integrated cross section .",
    "the analogous qed interferences among photons emitted from electron and positron in small - angle bhabha were also small , of order @xmath27 , at the small - angle range of the luminosity measurement .",
    "further improvement on the precision for off-@xmath15-peak ( lep2 ) and for large - angle bhabha scattering definitely requires reintroduction of these interferences .",
    "this is achieved in a natural way by reformulating the exponentiation entirely in terms of spin amplitudes .",
    "this turns out to be quite a non - trivial task , and it was done only recently , see refs .",
    "the resulting new `` reincarnation '' of the yfs exponentiation , called the _ coherent exclusive exponentiation _ ( ceex ) , was born .",
    "the ceex scheme is implemented in the present  mc program for the first time .",
    "in fact we have described in ref .",
    "@xcite only the first version , with the pure qed matrix element , while in the present program we have already implemented the bulk of the qed matrix element , and also electroweak ( ew ) corrections . this new , , important development of ceex , together with the wealth of numerical results , will be published separately  @xcite .",
    "having briefly introduced the reader to the history and the main characteristics of the subject of the mc event generators for the @xmath26 process , let us come to the important question : what is the most complete list of requirements that the precision mc event generator for the @xmath26 process should fulfil in order to satisfy the needs of the experiments in the present and future @xmath28 colliders , that is for the entire centre - of - mass energy range from the @xmath2 production threshold up to 1 tev ?",
    "this would cover experiments at lep , slc , @xmath17-factories , @xmath16-factories , @xmath2-factories , future linear colliders such as tesla , jlc and nlc , and also high - luminosity experiments at the @xmath15 resonance , the so - called @xmath15-factories .    in the following we try to answer the above question , and complete the list of the desired features of the ultimate mc event generator for two - fermion final states :    * the total _ precision _ of the integrated cross section has to be at least 0.2% .",
    "from the above , it automatically follows that we need for the qed part and electroweak corrections the entire first - order and the qed second - order , at least in the leading - log ( ll ) approximation with the exponentiation , e.g. with the contributions , especially for isr .",
    "in fact the qed second - order subleading and third - order leading are also mandatory , at least for the discussion of the theoretical error , but preferably present in the actual mc matrix element .",
    "the inclusion of @xmath29 four - fermion final states will often be necessary , especially the production of the additional soft fermion pair of light fermions . the @xmath15-factory option with @xmath30 statistics",
    "would be the most demanding experiment , asking for precision better than @xmath31 !",
    "note that here we do not attempt to define individual precision requirements for all kinds of distributions and averages , such as charge and spin asymmetries .",
    "we assume that their precision should correspond to a precision of @xmath24-@xmath31 for the integrated cross sections . *",
    "the other role of mc event generators is to provide a",
    "_ realistic picture of the process _ for the detector studies .",
    "it means that it is highly _",
    "undesirable _ to integrate out certain final - state topologies .",
    "for instance we know that contributions from collinear real photons and from virtual photons combine in such a way that the net effect in the integrated cross section is zero or negligible .",
    "nevertheless , for experiments it is of vital importance to have all real photons manifestly in the mc event , even very soft and very collinear ones : it helps enormously to understand correctly the operation of a detector , and hence to reduce the experimental systematic errors .",
    "the same is true for the emission of additional light - fermion pairs .",
    "the above _ maximal exclusivity _ requirement leads directly to _ exponentiation _ in the mc event generator , that is to a procedure in which the perturbative expansion is reorganized in such a way that contributions from ir real and virtual singularities cancel to infinite order .",
    "the remaining non - ir corrections are calculated order by order  for example in the present  mc the non - ir corrections are included in . * for the initial beams and outgoing unstable @xmath2 leptons and @xmath18-quarks _ spin polarizations _ , including _ all spin correlations _ , have to be fully taken into account , also in the presence of the real bremsstrahlung photons . for beams",
    "the longitudinal polarization of both beams is the minimum requirement . for decaying final fermions , longitudinal polarizations are often not sufficient  transverse polarizations are necessary , both for @xmath2 leptons and for @xmath18-quarks . in fact",
    "not only polarizations are required , but also the effects of exact spin correlation between spin polarization vectors of two outgoing fermions .",
    "this again makes it mandatory to the use spin amplitudes and/or spin density matrices for the fermion production and decay processes . * non - qed _ electroweak corrections _ to the @xmath26 process",
    "are usually calculated separately and combined later on with qed corrections in an manner that is , beyond , an `` ad hoc '' recipe .",
    "it is not done at the level of the spin amplitudes , but rather in terms of the inclusive distributions , having integrated some photon phase space e.g. transverse momenta beforehand .",
    "typically such an ad hoc procedure is based on the second- or third - order `` structure functions '' for the incoming electron , adding subleading first- and second - order corrections .",
    "it can be questioned whether such an approach is really justified at the precision level of @xmath24 , because it is too far from the solid environment of the lagrangian , feynman diagrams and the exact phase space .",
    "the monte carlo based on the spin amplitudes offers a natural realization of such an environment .",
    "it is therefore the only viable solution for the problem of combining qed and non - qed corrections beyond first order , without any unnecessary ambiguities .",
    "such a monte carlo can then be used to cross - check ( calibrate ) the popular semi - analytical approaches , which employ all kinds of ad hoc recipes .",
    "this important role should not be underestimated , as the semi - analytical programs have many advantages of their own and will always be around .",
    "* effects due to _ beamstrahlung _ will be present at future linear colliders and thus should be implemented in the mc event generator .",
    "the beamstrahlung structure functions should be a `` user function '' , supplied ( or replaced ) easily by the user , without any loss of the efficiency of the mc program .",
    "note that the `` luminosity energy spectrum '' will be known from machine simulation only to a certain extent ; the true distribution will have to be determined from the inspection of the @xmath26 process , most probably for @xmath32 , at small ( @xmath33 ) or intermediate ( @xmath34 ) angles .",
    "in such a case , reliable mc predictions of the standard model ( sm ) integrated cross sections and distributions in the presence of beamstrahlung , with the non - trivial event selection criteria , are of vital importance . in this context , the @xmath15 radiative return , i.e. the @xmath35 subprocess , may also play an important role . * the mc event generator should be maximally _ upgradable to other processes_. although , in this specification , we concentrate on the precision sm prediction for the two - fermion final states , the mc program should be constructed in such a way that inclusion of the other similar standard processes such as @xmath36 or non - standard processes ( supersymmetric ) should be relatively easy .",
    "also the change of electron beam to muon beam should be possible .",
    "this requires in practice that the mc program be constructed right from the beginning in a _",
    "highly modular _ way .",
    "the object - oriented programming ( oop ) approach would help .",
    "* for quark final states , the photon emission should be well combined with the _ quark  gluon parton shower _ , properly taking qed and qcd corrections at the nll level . *",
    "last but not least the program should also have the option to run in a _ maximally inclusive _ mode in which the type of the final state ( fermion ) is chosen randomly , event per event , exactly according to its integrated cross section .",
    "this requirement is not as trivial as it may seem , since the integrated cross section , in the mc , is typically known at the end of the run ( from the average mc weights ) .",
    "let us note that the above specification goes far beyond the very ambitious ( at the time ) specification of the `` ultimate mc '' formulated at the end of the 1989 lep1 workshop .",
    "how far are we with  mc on the road to this ultimate goal ?",
    "( 160,110 ) ( -2 , 00)(0,0)[lb ]      the present specification of the  mc is summarized in table  [ tab : kk - status ] , where we have also given those of koralz and koralb for comparison .    as we see , the present  mc has already all the functionality of koralb .",
    "the  mc fulfils completely our ultimate specification for the spin treatment . up to now , the first and the only mc event generator fulfilling the above specification was koralb@xcite .",
    "however , koralb is limited to @xmath37 gev , because of the lack of the @xmath15-resonance and it does not include more than one photon emission  it is based on the pure first - order qed calculation , without exponentiation . in koralz , longitudinal polarization effects are implemented at the level of the differential distribution for initial beams and for outgoing fermions ( including longitudinal spin correlations ) .",
    "effects due to transverse spin polarizations are omitted . in the present  program",
    "these limitations are removed  the complete longitudinal and transverse polarizations are implemented for beams and outgoing fermions , including all spin correlations exactly , as in koralb , also in the presence of multiple real photons .    as compared to koralb , there is still one improvement to be done in the  mc : the ceex matrix element does not generally rely on the assumption @xmath38 , but certain parts of the actually implemented virtual corrections may still rely on this approximation , notably the spin amplitudes for the @xmath39-@xmath39 box .",
    "this approximation is not really necessary and will be corrected in the future version .",
    "as compared to koralz , the  mc covers all its functionality , except for the presence of the neutrino channels .",
    "we plan to implement the neutrino channel in the next version .",
    "the most important new features in the present  with respect to koralz is the inclusion of isr  fsr interference , which at lep2 modifies the total cross section and charge asymmetry by about 2% , the inclusion of the second - order subleading corrections and the inclusion of the exact matrix element for two hard photons .",
    "the  mc is the first full - scale event generator to include the bulk of second order nll corrections , and it may easily incorporate second - order nnll corrections .",
    "in fact the exact double bremsstrahlung and exact two - loop virtual corrections are already included , but for the moment there is no need to complete the missing nnll corrections since they are @xmath40 .",
    "the present version of  mc includes first - order qed and electroweak corrections and almost complete qed corrections due to the emission of photons from the initial- and final - state fermions .",
    "it does not include the emission of an additional fermion pair .",
    "the qed part of the calculation is based on the new calculation with coherent exclusive exponentiation ( ceex ) at the amplitude level .",
    "the older qed matrix element based on exclusive exponentiation ( eex ) at the differential distribution level ( amplitudes squared and spin summed ) of the bhlumi type is still present and is used as a backup solution , for various tests . in particular the eex matrix element",
    "includes corrections , which are still absent in our ceex ; it therefore provides a useful estimate of these corrections .      defining the lorentz - invariant phase space as @xmath41 we write the ceex total cross section for the process @xmath42 with polarized beams and decays of unstable final fermions sensitive to fermion spin polarizations , following refs .",
    "@xcite , as follows : @xmath43 where @xmath44^\\star          \\sigma^l_{\\bar{\\lambda}_c \\lambda_c }    \\sigma^m_{\\bar{\\lambda}_d \\lambda_d }          \\hat{h}^l_3                              \\hat{h}^m_4 ,    \\end{split}\\ ] ] where , in order to shorten this and other formulas , we use a compact collective notations @xmath45 for fermion four - momenta @xmath46 and helicities @xmath47 ,    for @xmath48 , @xmath49 are pauli matrices and @xmath50 is the unit matrix . the components @xmath51 , are the components of the conventional spin polarization vectors of @xmath52 and @xmath53 respectively , defined in the so - called gps fermion rest frames ( see ref .",
    "@xcite for the exact definition of these frames ) .",
    "we define @xmath54 in a non - standard way ( i.e. @xmath55 ) .",
    "the _ polarimeter _",
    "vectors @xmath56 are similarly defined in the appropriate gps rest frames of the final unstable fermions ( @xmath57 ) .",
    "note that , in general , @xmath56 may depend in a non - trivial way on the momenta of all decay products , see refs .",
    "@xcite for details .",
    "we did not introduce polarimeter vectors for bremsstrahlung photons , i.e. we take advantage of the fact that all high - energy experiments are completely blind to photon spin polarizations .",
    "see next subsection for more on spin effects .",
    "we define the complete set of spin amplitudes for emission of @xmath58 photons in , @xmath59 as follows : @xmath60}\\ ;      \\beta^{(0)}_0 \\left ( \\st^{p}_{\\lambda } ; x_\\wp \\right ) , \\\\     { \\mathfrak{m}}^{(1)}_n\\left ( \\st^{p}_{\\lambda } \\st^{k_1}_{\\sigma_1 }                                     \\dots \\st^{k_n}_{\\sigma_n }   \\right )     & = \\sum_{\\{\\wp\\}}\\ ;   \\prod_{i=1}^n \\ ; { \\mathfrak{s}}^{\\{\\wp_i\\}}_{[i]}\\ ;      \\left\\ { \\beta^{(1)}_0 \\left ( \\st^{p}_{\\lambda } ; x_\\wp \\right )              + \\sum_{j=1}^n                { \\beta^{(1)}_{1\\{\\wp_j\\ } } \\left ( \\st^{p}_{\\lambda } \\st^{k_j}_{\\sigma_j } ; x_\\wp \\right )                                            \\over { \\mathfrak{s}}^{\\{\\wp_j\\}}_{[j ] } } \\ ;      \\right\\ } , \\\\",
    "\\nonumber     { \\mathfrak{m}}^{(2)}_n\\left ( \\st^{p}_{\\lambda } \\st^{k_1}_{\\sigma_1 }                                     \\dots \\st^{k_n}_{\\sigma_n }   \\right )     & = \\\\      = \\sum_{\\{\\wp\\}}\\ ;   \\prod_{i=1}^n \\ ; { \\mathfrak{s}}^{\\{\\wp_i\\}}_{[i]}\\ ;     & \\left\\ {   \\beta^{(2)}_0 \\left ( \\st^{p}_{\\lambda } ; x_\\wp \\right )              + \\sum_{j=1}^n                { \\beta^{(2)}_{1\\{\\wp_j\\ } } \\left ( \\st^{p}_{\\lambda } \\st^{k_j}_{\\sigma_j } ; x_\\wp \\right )                                            \\over { \\mathfrak{s}}^{\\{\\wp_j\\}}_{[j ] } } \\ ;               + \\sum_{1\\leq j < l\\leq n}\\;\\!\\!\\!\\ !                { \\beta^{(2)}_{2\\{\\wp_j\\wp_l\\ } }                     \\left ( \\st^{p}_{\\lambda } \\st^{k_j}_{\\sigma_j }   \\st^{k_l}_{\\sigma_l } ; x_\\wp \\right )                                 \\over { \\mathfrak{s}}^{\\{\\wp_j\\}}_{[j ] } { \\mathfrak{s}}^{\\{\\wp_l\\}}_{[l ] } } \\ ;      \\right\\}.    \\end{align}\\ ] ] the _ coherent _ sum is taken over set @xmath61 of all @xmath62 partitions ",
    "the partition @xmath63 is defined as a vector @xmath64 ; @xmath65 for an isr and @xmath66 for an fsr photon ; see the analogous construction in refs .",
    "the set of all partitions is explicitly the following : @xmath67 the @xmath68-channel four - momentum in the ( possibly ) resonant @xmath68-channel propagator is @xmath69    at we have to provide functions @xmath70 , from feynman diagrams , which are infrared - finite by construction  @xcite .",
    "their actual precise definitions can be found in refs .",
    "@xcite . here",
    "we shall define only the most essential ingredients .",
    "the lowest - order @xmath71 are just born spin amplitudes times a certain kinematical factor @xmath72 the born spin amplitudes @xmath73 and other spin amplitudes are calculated using the spinor technique of kleiss and stirling ( ks ) @xcite reformulated in ref .",
    "@xcite ( gps ) .",
    "soft factors @xmath74},\\omega=0,1 $ ] , are complex numbers , see ref .",
    "@xcite for exact definitions ; here we only need to know their absolute values @xmath75}\\right|^2",
    "=               -\\frac{e^2q_e^2}{2 } \\bigg ( { p_a\\over k_i p_a } - { p_b\\over k_i p_b }   \\bigg)^2,\\quad \\left|{\\mathfrak{s}}^{(0)}_{[i]}\\right|^2 =               -\\frac{e^2q_f^2}{2 } \\bigg ( { p_c\\over k_i p_c } - { p_d\\over k_i p_d }   \\bigg)^2.\\ ] ]    the factor @xmath76 defines the infrared ( ir ) integration limits for real photons . more precisely for a single photon ,",
    "complementary domain @xmath77 includes the ir divergence point @xmath78 , which is _ excluded _ from the mc phase space , we define a characteristic function @xmath79 for @xmath80 and @xmath81 for @xmath82 .",
    "the characteristic function for the phase space included in the integration is @xmath83 .",
    "the characteristic function for _ all _ photons in the mc phase space is @xmath84 in the present program we opt for an @xmath77 traditionally defined by the photon energy cut condition @xmath85 .",
    "consequently , the yfs form factor  @xcite reads @xmath86 where @xmath87 is given analytically in terms of logarithms and spence functions  @xcite . as we see , the above yfs form factor includes terms due to the initial ",
    "final state interference ( ifi ) . in the mc with exponentiation",
    "it would be possible to do without @xmath77 ( declare it empty ) and rely uniquely on the ir regularization with small photon mass @xmath88 only  @xcite . in that case formulas  ( [ form - factor ] ) for the yfs form factor would include only the second virtual photon integral .      in the case of exclusive exponentiation ( eex ) , we deal with a spin - summed differential distribution .",
    "we neglect the ifi and each photon is therefore attributed either to the initial or to the final state fermion pair .",
    "the initial state photon momenta are denoted by @xmath89 , and final state momenta as @xmath90 .",
    "we shall consider the process @xmath91 .    in the present description of the eex matrix element and in the following sections on the monte carlo algorithm",
    ", we use an _ alternative notation for the fermion momenta _ : @xmath92 this is because such a notation has already been used for a long time in low - level mc programs and in the eex distributions ; we have therefore decided to keep it also in the relevant parts of the paper .",
    "we hope that it will help the user to understand the code more easily . on the other hand",
    "the notation with @xmath93 , and @xmath94 , is very handy in building up a very compact tensor notation , with letters for fermion indices and numerals for photon indices , in the tensor notation for the multiple photon spin amplitudes ; see ref .",
    "@xcite , the previous section , and the relevant parts of the program .    denoting the lorentz invariant phase space , @xmath95 the eex total cross - section @xmath96 is expressed in terms of the fully differential multiphoton distribution @xmath97 the yfs soft factors for real photons emitted from the initial- and final - state fermions read @xmath98 the ir domains @xmath99 and",
    "@xmath100 are different for isr and for fsr  this is easier to implement in the mc .",
    "we define @xmath99 with the condition @xmath101 in the rest frame of @xmath102 called the cms frame , and @xmath100 with @xmath103 in the rest frame of @xmath104 referrred to as qms .",
    "the rest frame of @xmath105 will be referred to as the xms frame .",
    "in eex we generally use small mass approximation @xmath106 ( in the following sections we shall however use finite @xmath107 wherever necessary ) . in this case the yfs form factors of eqs .",
    "( [ form - factor ] ) for the above @xmath77 s are very simple : @xmath108 again the ir - finite functions @xmath109 ( defined at the level of squared spin - summed spin amplitudes ) are calculated , in principle , from the feynman diagrams and they are defined completely in ref .",
    "@xcite .    here ,",
    "let us only give the explicit definition of lowest order @xmath110 where @xmath111 and where all three - vectors are taken in the rest frame of the four - momentum @xmath112 , called the xms .",
    "the above @xmath113 function is proportional to the born differential cross section @xmath114 , for @xmath115 .",
    "spin effects are treated in the most general way . for initial beams we use as an input the full spin polarization vectors and for the outgoing @xmath2 we contract the @xmath2-production spin amplitudes with the polarimeter vectors of the two decaying @xmath2 s defined in exactly the same rest frames of the @xmath2 s where the spin quantization axes of the @xmath2 s were defined in the first place . to find out exactly these frames was a little bit of an exercise , because for the calculation of the spin amplitudes  @xcite for the @xmath116 process we use the kleiss ",
    "stirling technique , for which these spin quantization frames have been found in ref .",
    "we call them the gps frames of the fermions ( beam @xmath117 and @xmath118 ) . at the practical level",
    ", we have written a subprogram that performs the lorentz transformations from the four gps frames to the cms frame .",
    "this subprogram is used to transform all @xmath2 decay products from the gps @xmath2 rest frames to cms frame .",
    "the polarization vectors of the incoming @xmath117 have also to be provided in the gps frames of @xmath117 .",
    "it is simple to obtain by consecutive lorentz transformation from the experimentally defined frames of @xmath117 to cms frame and later to gps frames .",
    "it amounts to making the three - dimensional wigner ",
    "wick rotation of the beam polarization vectors from the experimentally defined frame to the gps frame ( in practice it is a rotation around the beams , due to the smallness of the electron mass ) .",
    "all of the above technique is an extension of the methodology used in koralb  @xcite . for more details ,",
    "see refs .",
    "@xcite .",
    "let us finally touch briefly upon another very serious problem relevant to implementation of spin effects and its solution . in eq .",
    "( [ eq : sigma - ceex2 ] ) the single spin amplitude @xmath119 already contains @xmath120 terms ( due to @xmath62 isr  fsr partitions ) . the grand sum over spins in eq .",
    "( [ eq : sigma - ceex2 ] ) counts @xmath121 terms !",
    "altogether we expect up to @xmath122 operations in the cpu time expensive complex ( 16 bytes ) arithmetics . typically in @xmath20",
    "the average photon multiplicity with @xmath123 mev is about 3 , corresponding to @xmath124 terms . in a sample of @xmath125",
    "mc events there will be a couple of events with @xmath126 and @xmath127 terms , clearly something that would `` choke '' completely any modern , fast workstation .",
    "there are several simple tricks that help to ease the problem ; for instance , objects such as @xmath128 and the @xmath129-factors are evaluated only once and stored for multiple use .",
    "however , this is not sufficient .",
    "what really helps to substantially speed up the numerical calculation in the monte carlo program is the following trick of _ photon spin randomization_. instead of evaluating the sum over photon spins @xmath130 , in eq .",
    "( [ eq : sigma - ceex2 ] ) , we generate randomly one spin sequence of @xmath131 per mc event and the mc weight is calculated only for this particular spin sequence ! in this way",
    "we save one hefty @xmath62 factor in the calculation time factor due to coherent summation over partitions can not be eliminated , unless we give up on narrow resonances . ] .",
    "mathematically this method is correct , i.e. the resulting cross section and all mc distributions will be the same as if we had used in the mc weight the original eq .",
    "( [ eq : sigma - ceex2 ] ) ( see a formal proof of the above statement in section  4 of ref .",
    "let us stress again that it is possible to apply this photon spin randomization trick because ( a ) the typical high - energy experiment is blind to photon spin polarization , so that we did not need to introduce the polarimeter vectors for photons in eq .",
    "( [ eq : sigma - ceex2 ] ) , and ( b ) for our ( circular ) choice of photon spin polarizations the cross section is rather weakly sensitive to them , so the method does not lead to any significant loss in the mc efficiency .",
    "electroweak ( ew ) corrections are implemented using the dizet library  @xcite , more precisely using its most recent version , 6.21 , the same as is used in the zfitter  @xcite semi - analytical program .",
    "the method we use to implement ew corrections is rather simillar to that in koralz  @xcite : they enter through modified coupling constants in the born cross section , and in order to save cpu time , correction factors are stored in the look - up tables ; see the relevant section later .    in the absence of ew corrections , coupling of two neutral bosons @xmath39 and @xmath15",
    "are defined in a conventional way : @xmath132 where @xmath133 is the isospin of the left - handed component of the fermion ( @xmath134 ) .    as in koralz  @xcite",
    ", we implement the ew corrections as follows : the @xmath39 and @xmath15 propagators are multiplied by the corresponding two functions ( scalar formfactors due to vacuum polarizations ) : @xmath135 in addition the vector couplings of @xmath15 get multiplied by extra form factors .",
    "first of all we replace @xmath136 where @xmath137 and @xmath138 are electroweak form factors provided by the dizet program and they correspond to electroweak vertex corrections .",
    "the electroweak box diagrams require a more complicated treatment . in the born spin amplitudes we have essentially two products of the coupling constants : @xmath139 in the above",
    ", the following replacement is done for the doubly - vector component @xmath140 where the new form factor @xmath141 corresponds to electroweak boxes and is angle dependent .    in ceex",
    "the born spin amplitudes modified in the above way enter everywhere as building block , also in the spin amplitudes for the single and multiple real photons .",
    "in eex the born spin amplitudes with the modified couplings enter into the born differential cross section , which is the basic building block in all eex differential distributions . in both cases",
    "it thus constitute an improvement with respect to koralz , electroweak corrections are calculated for every occurrence of born - like building block of the amplitude and not only once per event .",
    "note also that we do not need to discuss final - state mass terms at this point .",
    "beamstrahlung is the effect of loss of the beam energy due to the electron ",
    "bunch interaction .",
    "it is essentially the emission of two effective photons strictly collinear with the beams , as an additional strictly collinear isr .",
    "_ in the mc program , we require that the 2-dimensional beamstrahlung structure function be the `` user function '' , supplied or easily replaced by the user , without any loss of efficiency of the mc program . _    the most general form of the modification of the differential distributions due to beamstrahlung in @xmath142 reads as follows : @xmath143 where @xmath144 is the double differential beamstrahlung `` luminosity spectrum '' for simultaneous beamstrahlung from both beams .",
    "the luminosity spectrum is assumed to be in the most general form @xmath145 where @xmath146 is a constant and @xmath147 and @xmath148 are analytical functions for @xmath149 .",
    "more precisely we allow for power - like integrable singularities at @xmath150 : @xmath151 the functions @xmath152 are regarded as completely arbitrary and we require that the  mc be able to cope efficiently with any beamstrahlung luminosity spectrum of the above most general type .    in the present version of the program ,",
    "we include the beamstrahlung spectra as implemented in the circe package of t. ohl @xcite .",
    "the circe package is based on the results from the machine simulation program guineapig for linear colliders @xcite .",
    "generation of the @xmath153 variables is done at the very beginning of the generation , together with the emission of the qed isr total photon energy .",
    "the technical problem to be solved is hence the following : how to generate up to three variables , the two variables @xmath154 for beamstrahlung and one @xmath155 for isr , according to an arbitrary , highly singular probability density distribution ?",
    "not only are the beamstrahlung spectrum and isr photon distribution strongly singular , but in addition the mc algorithm has to deal efficiently with singularities due to resonances and thresholds in the reduced cms energy variable @xmath156 .    furthermore , owing to the presence of the @xmath157 s in the general beamstrahlung distribution of eq .",
    "( [ eq : general ] ) , four branches in the mc generation are present : one 1-dimensional , two 2-dimensional and one 3-dimensional , corresponding to each term in eq .",
    "( [ eq : general ] ) . in each branch",
    "the corresponding subset of the @xmath158 and @xmath159 variables is generated , using the special general - purpose mc generation program foam  @xcite , developed recently for exactly this type of problem . in the present version",
    ", we also include another solution for the above task based on the classical vegas program  @xcite , customized to our needs .",
    "this second solution based on vegas is , however , much less efficient than the principal one ( vegas will probably be removed in the future version ) .",
    "vegas is extremely efficient in calculating the value of an integral using the mc method , but our problem is different : the variables @xmath158 and @xmath159 are generated at the beginning of the whole  mc algorithm ; consequently they have to be generated with the weight equal 1 ( otherwise we would waste cpu time for calculating for instance the complicated qed matrix element for `` unworthy '' weighted events ) . to this task , vegas is not very well suited ( see a more detailed discussion in ref .",
    "the new mc tool foam is specialized for exactly this difficult task of generating _ unweighted events _ efficiently , according to an arbitrary multidimensional probability distribution .    even if we use powerful mc tool such as foam , it is worthwhile to improve the efficiency of the mc generation by the appropriate change of integration variables ( mapping )",
    ". let us take the most complicated case with @xmath160 where @xmath161 , and @xmath162 is `` after isr '' . by the trial and error method , we have found that the best mapping for @xmath163 1 tev is : @xmath164 where @xmath165 are used by foam",
    ", @xmath166 is from circe and , for the isr , we have @xmath167 . the integral",
    "gets transformed into : @xmath168 note that this mapping only takes care of singularities at @xmath150 ; for the @xmath15 resonance peak and the phase - space limit @xmath169 , the importance sampling is done by foam ( or vegas ) .    for energies up to 1 tev the efficiency of the mc is better by a factor of more than 10 with foam than with vegas .",
    "in this section we describe in detail the numerical monte carlo algorithm used to generate final - state four - momenta , i.e. points within the lorentz invariant phase space , according to eq .",
    "( [ eq : sigma - ceex2 ] ) for ceex and eq .",
    "( [ eq : rho - eex3 ] ) for eex .",
    "we shall not only describe the actual algorithm implemented in the present mc but also try to explain why we opted for certain solutions , and not for others .",
    "we start with a brief discussion of some important general issues .",
    "first of all , we would like to stress that we treat the mc technique as a means of integrating _ exactly _ over the phase space , without any approximation .",
    "generally , our approach is that of the textbooks on quantum mechanics : the differential cross section is the phase - space times the scattering amplitudes from feynman diagrams , squared , spin - summed .",
    "the mc technique is basically the numerical method of integration over the phase space .",
    "our mc is in fact more than the phase - space integration , because we require that events ( lists of four - momenta ) be generated with weight equal 1 , i.e. we directly _ simulate _ the scattering process .",
    "it is quite a strong restriction on the mc algorithm , see below , and it means that our mc program is not merely a _ phase - space integrator _ , but the full - scale mc _ event generator _ ( mceg ) .",
    "concerning the monte carlo techniques , let us remind the reader that there are only a handful of elementary techniques such as weighting - rejection , mapping and multibranching  the whole art being to combine them into one bigger algorithm , see ref .",
    "@xcite for more detailed discussion .",
    "we shall also generally follow the notation and terminology of ref .",
    "there also exists a special group of _ self - adapting _",
    "mc techniques / programs , such as the very popular mc integrator vegas  @xcite , which work , in principle , for arbitrary integrand distributions ( just like a standard gaussian integration program integrates any external function ) .",
    "we use in , for this role , the newly developed foam  @xcite self - adapting program and the old vesko1 ( part of yfs2  @xcite ) as building blocks of our mc , along with other elementary techniques .    in general",
    ", we tried to minimize the use of the multibranching technique and rely as much as possible on the method of reweighting , constructing several layers of weights  the total weight being their product .",
    "nevertheless , we have three multibranchings , one for the types of the final fermions @xmath170 , another one for the photon partitions ( for @xmath58 photons there are @xmath62 ways of attributing photons to isr or fsr ) , and finally for helicities of the bremsstrahlung photons ( for @xmath58 photons there are @xmath62 helicity assignments ) . each of these three multibranchings",
    "is well justified and unavoidable see below .    in the development of the present mc algorithm",
    "there are certain _ critical issues _ , in other words , there are some problems that had to be solved , otherwise it would have been practically impossible to realize the entire mc .",
    "typically , we have seen two possible solutions of an important problem , and we have opted for one of them . in the following we list these critical issues , explaining how the solution was found and/or the critical option chosen .",
    "* _ problem of the sum over partitions in the weight due to ifi_. it was realized already in ref .",
    "@xcite that the effect of the quantum - mechanical interference between photon emissions from initial- and final - state charges ( ifi ) can be introduced by means of the weight @xmath171 , where @xmath172 includes ifi and @xmath173 neglects it . in mc events are generated according to @xmath173 in the first place .",
    "both @xmath172 and @xmath173 include the sum over @xmath62 ways of attributing photons to initial and final states , the so - called photon partitions .",
    "the natural way of generating @xmath173 is to use multi - branching and generate an event for a single partition at a time .",
    "generation of @xmath173 involves the introduction of the additional `` kinematical '' weight of its own .",
    "the possible complication to be avoided is the sum over these kinematical weights over all @xmath62 partitions .",
    "fortunately , this can be done : it is sufficient to multiply @xmath174 by the kinematical weight for a single partition , the one that is actually generated",
    ". the formal proof of this can be found in ref .",
    "the acceptance rate for @xmath58 photons due to @xmath174 is @xmath175 .",
    "it is a severe problem and only the partial , brute - force solution is applied at present . a better solution , taking into account that ifi is destructive for backward scattering and constructive for forward scattering , is needed in the future . *",
    "_ photon helicity generation_. the sum over partitions in @xmath174 already costs a lot of cpu time .",
    "another sum over @xmath62 photon helicities would render the project impractical , even with the present cpu processors .",
    "the solution is to introduce multibranching for @xmath62 photon helicities and generate photon helicities event by event .",
    "it is justified , because high - energy experiment detectors are insensitive to photon polarizations ; consequently the various photon helicity configurations ( branches ) contribute equally . invoking the principles of ref .",
    "@xcite , we can calculate weights like @xmath174 for just one helicity configuration , the actual one .",
    "the sum over @xmath62 photon helicities is avoided . *",
    "_ fermion - type generation versus photon - energy generation_. in the mc we generate flavours according to cross sections that take isr into account in an approximate way , , isr corrections are huge , a factor @xmath176 , and the method would be rather inefficient . ] and the mc weight corrects it to the true value later .",
    "the approximate cross section involves a numerical integral over the isr total energy , which has to be done before the mc generation starts .",
    "the integral can be done ( i ) for each flavour separately , ( ii ) or just once , for the flavour - summed cross section . in the mc generation",
    "the above corresponds to two options : ( i ) the fermion type is generated first , and the total energy loss due to isr , just for this fermion , is generated next ; ( ii ) the total energy loss due to isr is generated first , for all fermions , and the type of the fermion using the born cross section for the reduced centre - of - mass energy is generated next .",
    "we have chosen the second option . *",
    "_ comoving frame for the generation of fsr photons . _",
    "generating fsr photons is much more difficult than isr photons because momenta of the final fermions `` move '' , i.e. they are themselves variables in the phase - space integral , contrary to beams in isr , which are fixed ( except for beamstrahlung ) .",
    "moreover , fsr emission distributions are also the simplest in the rest frame of the final fermions . for the construction of the fsr algorithm",
    ", it was critical to reparametrize the phase space in such a way that photon integrals are formulated in the reference frame attached to outgoing fermions .",
    "this comoving frame was used for fsr generation in the earliest version of the yfs3 mc which was incorporated in the koralz program since the version distributed at the time of the 1989 lep1 workshop .",
    "the detailed derivation of the above phase space re - parametrization introducing the comoving frame can be found in ref .",
    "@xcite . * _ common ir boundary for isr and fsr .",
    "_ since isr photons are generated in cms , and fsr photons in the rest frame of the final fermions ( qms ) , the easiest is therefore to introduce the ir cut for real photons in terms of minimum energy in these two frames .",
    "this defines the ir boundary , and ir domains inside them , which are different for isr and fsr real photons ( the lorentz - boosted sphere is ellipsoidal ) .",
    "this is not a problem , as long as the ifi is neglected . for the ceex , however , the ifi is present and the ir boundary has to be common ( for the basic mc in which ifi is neglected ) .",
    "the problem may look very difficult ; however , an inspection of the proof of the independence of the total cross section on the ir boundary for the non - ifi case tells us that we may simply take the common ir domain , which contains both isr and fsr domains , and , for each event , we may `` remove from the record '' all photons that are inside the new common ir domain .",
    "the above is true , however , only for events weight 1 , not for the weighted events , that are present internally in the mc .",
    "for weighted events , such a procedure of `` photon - removal '' can still be done , provided it is accompanied by the additional weight , calculable analytically .",
    "the above procedure of the `` photon - removal with the weight '' was already implemented in the earliest version of yfs3 in koralz ( although it was not really necessary for the eex matrix element there ) ; however , it was never documented . * _ small photon mass as ir regulator in the mc .",
    "_ there exists all the time an interesting option in the mc implementation of the yfs exponentiation , which was never exploited  that is to use the photon mass as an ir regulator in the mc .",
    "the back - of - the - envelope estimate shows that its disadvantages are a slightly more complicated algorithm for the generation of the photon momenta and higher photon multiplicity .",
    "a clear advantage is that such a cut - off is lorentz - invariant : this would therefore make it automatically the same for isr and fsr , so that we would not need to do any gymnastics with the ir boundaries , as described in the previous point .",
    "the user who is familiar with our programs koralz and bhlumi may be puzzled by the fact that we often we point out to some parts of the basic mc algorithm for qed bremsstrahlung , which have existed for a decade but are still unpublished or undocumented ; let us comment briefly on this point . on the one hand , the full - scale isr and fsr multiphoton generator yfs3 with the eex matrix element was never published as a stand - alone program , for instance because of the lack of ew corrections , and it was absorbed into koralz .",
    "its isr algorithm was rather well documented in ref .",
    "@xcite , but its fsr algorithm was never in fact documented in detail .",
    "in the following sections we do this for the first time .",
    "another reason for this time - lag is that the role of the mc programs at lep1 for fermion pairs , perhaps with the exceptions of bhabha scattering and @xmath2 pair production , was limited to removing detector acceptance , and was not really a primary source of the sm predictions .",
    "the simple two - particle final state could be described fairly well with simple semi - analytical calculations such as zfitter . in lep2",
    "the role of the mc as a source of sm predictions seems to be more important , mainly because of the rise of the ifi corrections , and because of the very strong phenomenon of the @xmath15 radiative return channel because of the 4-body final - state kinematics . ] .    in the following",
    "we shall describe the algorithm of the monte carlo generation of the events according to ceex and/or eex differential distributions .",
    "the algorithm is built using elementary methods of weighting and multibranching with occasional use of the mapping ( change of integration variables ) wherever it is possible and/or profitable .",
    "the weights are usually products of several component weights ordered in a `` chain '' .",
    "their role is to counter another `` chain '' of simplifications that were introduced in order to turn very difficult original differential distributions into simpler ones , in which we can integrate manually over certain integration variables ( that is to generate them with the help of mapping ) , one by one .",
    "the remaining small subset of variables for which we are not able to perform the manual / analytical integration / mapping is treated with the help of the self - adapting monte carlo tool  in our case it is foam and/or vesko1 ( optionally vegas ) .",
    "the above `` bottom - to - top '' procedure of simplifications countered by weights , multibranchings , and integrations / mappings will be described in the following subsections , starting with removing ifi ( countered by @xmath174 ) , then simplifying the sm / qed matrix element , reorganizing phase space ( mapping ) , integrating simplified isr and fsr emission distributions ( mapping ) , summing over photon multiplicities , etc .",
    ", such that in the end we are left with only the integral over photon energy loss due to isr and optionally due to beamstrahlung , which is fed into vesko1 or foam . in the mc program the order of action is `` top - to - bottom '' , i.e. the photon energy loss due to isr is generated first ( together with beamstrahlung , if present ) , then the type of the fermion , the isr photon multiplicity and momenta , the fsr photon multiplicity and momenta , and the series of weights brings us back to the desired eex or ceex differential distributions .",
    "the order of the multibranching and weighting elementary methods can be interchanged , with some care , and the rules for doing it are given in ref .",
    "we shall exploit this possibility , as already indicated .",
    "let us describe the whole organization of the weights and distributions in our mc .",
    "we have four principal distributions , pure phase space , model , crude and primary .",
    "their ratios are the principal weights in the mc .",
    "* _ the pure lorentz - invariant phase space _ ( lips ) distribution of eq .  ( [ eq : dtau ] ) , which includes four - momentum conservation @xmath157 s",
    ". it will not be generated directly in our mc .. ] it is our _ basic reference differential distribution _ in the sense that all other differential distributions of interest to us can be expressed in its terms : @xmath177 where the _ density distributions _ ( we shall use this terminology ) @xmath178 are analytical , decays and quark  gluon parton showers are not included in the discussion . ] except for some simple discontinuities , with no @xmath157 s .",
    "* _ the model distribution _ is a density distribution corresponding to a _ physical model _ @xmath179 and it is our ultimate aim to generate mc events according to this differential distribution .",
    "usually , we have to deal with several variants ( perturbative orders ) of the model distribution , with similar properties , that is to say , peaks . *",
    "_ the crude distribution _ is a density distribution @xmath180 which is rather close to the _ physical model distribution _",
    ", in fact it is close to all model distributions of a certain class , and it should be _ maximally simple_. it should be lorentz - invariant , with no unnecessary traces of the internal technicalities of the mc , just a maximally simple function of dot - products of the four - momenta .",
    "it should have the same pattern of peaks as all model distributions of a certain class . here and later",
    ", @xmath181 will correspond to the momenta of the outgoing fermions , whereas @xmath182 will denote the momenta of the photons .",
    "in such cases we will write the phase - space dimension explicitly as @xmath183 . * _ the primary distribution _ is a density distribution , @xmath184 defined primarily in the space @xmath185 of variables @xmath186 with the following properties : * * the integral @xmath187 is known independently ; in most cases from analytical integration , or an independent numerical integration of the gauss type , or from a special independent mc run . * * a well - defined mapping @xmath188 exists .",
    "the image of this mapping @xmath189 does not necessarily cover the entire @xmath185 .",
    "for @xmath190 the inverse maping @xmath191 exists .",
    "+ we may therefore define @xmath192 restricted to @xmath193 and which is the distribution actually generated at the lowest level of the monte carlo .",
    "a 0 weight will be assigned to mc points @xmath194 .",
    "the @xmath195 corresponds to events generated according to @xmath196 , with all weights ignored ( set to 1 ) ; it is `` inelegant '' , with traces of many technicalities , not necessarily lorentz - covariant , roughly similar to the physical model distribution .",
    "its unique , great property is that it _ can _ actually be generated and integrated .",
    "its integral @xmath197 sets the whole normalization of the mc .",
    "the main rationale for introducing the intermediate _ crude distribution _ , which obviously stands between the primary and model distributions , is a very strong practical need of modularity of the mc program .",
    "for instance we want to use the same low - level mc event generator for both eex and ceex models .",
    "( as the example of bhlumi shows , on top of the low - level with exponentiation one may even impose a model distribution without exponentiation . )",
    "we definitely want the mc event generator to have a well defined low - level mc part , which generates weighted events according to the _ crude distribution _ , that is with the weight @xmath198 with the importance sampling corresponding to the entire group of physical models .",
    "the above weight is provided by the low - level mc to the outside world _ numerically _ , without any further details on how the event @xmath199 was actually produced  just as a black box .",
    "the _ model weight _ for the @xmath200-th model is the ratio @xmath201 calculated in a separate module , and in this module the crude distribution @xmath202 needs to be known _ functionally _ i.e. , it is calculated locally , using a certain analytical expression in terms of the four - momenta of the event , and without any access to information from the lower - level mc ( we even assume that such an information is already trashed ) .",
    "of course , the total weight is the product of the two : @xmath203 and the total cross section is given by @xmath204 this organization is definitely fully modular .",
    "note also that although we did not require that the crude distribution be analytically integrable , such a property is strongly welcomed for the purpose of the technical tests .",
    "we define the crude differential distribution with respect to the standard lorentz invariant phase space as follows : @xmath205 } & ( q_1,q_2 ; \\dot{k}_1,\\dots,\\dot{k}_{\\dot{n } } ; k'_1,\\dots , k'_{n ' } ) \\equiv     { d\\sigma_{cru } \\over         d\\tau_{n+n'+2 } ( p ; q_1,q_2 , \\dot{k}_1,\\dots,\\dot{k}_{\\dot{n } } , k'_1,\\dots , k'_{n ' } ) } \\\\ & = { 1\\over \\dot{n}!}{1\\over n'!}\\ ;    { \\sigma_{\\born}(s_x ) \\over 4\\pi } \\ ; { s_x\\over s_q}\\ ; { 2 \\over \\beta_f } \\ ;    \\prod_{j=1}^{\\dot{n } }   2\\tilde{s}_e(\\dot{k}_j )   \\bar\\theta_{e}(\\dot{k}_j)\\ ;    e^ { \\gamma_e \\ln\\varepsilon_e }     \\prod_{l=1}^{n ' } 2\\tilde{s}_f(k'_l ) \\bar\\theta_{_f}(k'_l)\\ ;    e^ { \\gamma_f \\ln\\varepsilon_f } \\ ; , \\end{split}\\ ] ] where @xmath206 , @xmath207 @xmath208 , @xmath209 , and we `` dotted '' the isr photons in order to avoid a notation clash for ceex in the next section .",
    "the above distribution features a maximum resemblance to the actual qed matrix element from the point of view of peaks and singularities , and is very simple .",
    "the infrared and collinear singularities are in @xmath210 soft factors .",
    "the @xmath211 has a resonance peak in @xmath212 .",
    "the flux - like @xmath213 factor is already present at in the qed matrix element , and it can also be obtained from the leading - log approximation at any order .",
    "it is also necessary to include it in the primary distribution , in order to get reasonable mc weights at and higher orders .",
    "how did we get the above distribution ?",
    "it was rather simple .",
    "we have taken the version of eq .",
    "( [ sigma - eex3 ] ) , with only the @xmath214 term of eq .",
    "( [ beta00 ] ) in which we `` averaged '' over the angles in @xmath215 and we have taken yfs form factors with the first term only , so that the ir finiteness is preserved . the kinematical factor @xmath216 was adjusted to and ll .",
    "the factor @xmath217 is a pure convention .",
    "the above crude distribution is for eex only ; in ceex it would only fit one single partition .      in the eex model",
    "we neglect ifi ; we can therefore consider each bremsstrahlung photon to be attributed to the initial or final state ; this is also true for the crude distribution for eex . in ceex the crude distribution of eq .",
    "( [ eq : dist - crude ] ) is no longer usable , because it does not include the sum over partitions . to see it better",
    ", think about constructing the model weight as in eq .",
    "( [ eq : wt - model ] ) , with the ceex distribution in the numerator and the eex crude distribution of eq .",
    "( [ eq : dist - crude ] ) in the denominator . the resulting weight would be wildly fluctuating .",
    "let us therefore approach the problem in a more systematic way and construct a realistic crude distribution for ceex by simplifying the density distribution in eq .",
    "( [ eq : sigma - ceex2 ] ) , much as we did for eex . neglecting all spin effects ( unpolarized case ) and taking the version of eq .",
    "( [ eq : sigma - ceex2 ] ) we get @xmath218^\\star\\\\ & = { e^{y } \\bar{\\theta } \\over 4s } { 1\\over n ! }    \\sum_{\\sigma_i,\\lambda_i } \\sum_{\\{\\wp\\ } } \\sum_{\\{\\wp'\\ } }     \\left (      \\prod_{i=1}^n { \\mathfrak{s}}_{[i]}^{\\wp_i }      { \\mathfrak{b}}\\left ( \\st^{p}_{\\lambda } ; x_{\\wp_i } \\right)\\ ; { x^2_{\\wp_i }   \\over s '' }    \\right)\\!\\ !    \\left (        \\prod_{j=1}^n { \\mathfrak{s}}_{[j]}^{\\wp'_j }      { \\mathfrak{b}}\\left ( \\st^{p}_{\\lambda } ; x_{\\wp'_j } \\right)\\ ; { x^2_{\\wp_j }   \\over s '' }    \\right)^\\star ,    \\end{split}\\ ] ] where @xmath219 . in the crude distribution",
    "we , of course , want to neglect the ifi . neglecting it in the above formula",
    "means dropping non - diagonal terms @xmath220 .",
    "in addition , in order to preserve ir cancellation we simplify the yfs form factor as well : @xmath221 as a result we obtain @xmath222}^{\\wp_i}\\right|^2      \\sum_{\\lambda_i } \\left|{\\mathfrak{b}}\\left ( \\st^{p}_{\\lambda } ; x_{\\wp_i } \\right)\\right|^2\\ ;       { x^4_{\\wp_i }   \\over ( s'')^2}.\\ ] ] we can easily identify @xmath223}^{\\omega_i}\\right|^2     = -8\\pi^3 \\tilde{s}_\\omega(k_i),\\quad    \\tilde{s}_1(k_i ) \\equiv \\tilde{s}_i(k_i),\\ ;    \\tilde{s}_0(k_i ) \\equiv \\tilde{s}_f(k_i),\\;\\ ] ] and also the born - like expression @xmath224 which is weakly dependent on the dot - products @xmath225 @xmath226 @xmath227 @xmath228 @xmath229 @xmath230 ; it strongly depends on the @xmath231 in the @xmath15 resonance propagator .",
    "we do not enter into the details of defining the above because we replace it by an `` angular average '' anyway : @xmath232 finally , the crude distribution for ceex we define as follows @xmath233 } ( p_c , p_d,\\ ; & k_1,\\dots , k_n )   = { d\\sigma^{\\rm cru}_{\\rm ceex } \\over d\\tau_{n+2 } ( p ; \\ ; p_c , p_d,\\ ; k_1,\\dots , k_n)}\\\\ & = { 1\\over n ! } \\sum_{\\{\\wp\\ } }     { 1\\over s }   e^{\\gamma_e\\ln\\varepsilon_e + \\gamma_f\\ln\\varepsilon_f}\\ ;      { \\sigma^{\\rm born}(x^2_{\\wp_i } ) \\over 4\\pi }      { x^2_{\\wp_i }   \\over s '' }      { 2\\over \\beta_f }      \\prod_{i=1}^n   \\bar{\\theta}(k_i )       \\tilde{s}_{\\wp_i}(k_i ) .    \\end{split}\\ ] ] ( the overall factor like @xmath234 , is just a convention . ) it is almost obvious that the above distribution is the crude distribution for eex of eq .",
    "( [ eq : dist - crude ] ) summed over partitions ",
    "it is important to check it , at least to get statistical factors right .",
    "( we shall come to the question of the common ir boundary @xmath77 later on . ) for example for @xmath235 , omitting final fermion momenta , we have @xmath236 } ( k_1,k_2)=    { 1\\over 2 ! } \\left (    2 !    \\rho^{cru}_{[2,0 ] } (   k_1,k_2   ; \\ ;           )   + 1!1 ! \\rho^{cru}_{[1,1 ] } (   k_1       ;    k_2   )   + 1!1 ! \\rho^{cru}_{[1,1 ] } (   k_2       ;    k_1   )   + 2 !    \\rho^{cru}_{[0,2 ] } ( \\ ;          ;    k_1,k_2   )    \\right)\\ ] ] and putting together @xmath237 $ ] and @xmath238 $ ] we have @xmath236 } ( k_1,k_2)=    \\rho^{cru}_{[2,0 ] } (   k_1,k_2   ; \\ ;           )   + \\rho^{cru}_{[1,1 ] } (   k_1       ;    k_2   )   + \\rho^{cru}_{[0,2 ] } ( \\ ;          ;    k_1,k_2   ) .\\ ] ] as we now see , for arbitrary photon multiplicity we have the following relations between crude distributions for ceex and eex @xmath239 } ( k_1, ... ,k_n)=    \\sum_{\\dot{n}+n'=n }    \\rho^{cru}_{[\\dot{n},n ' ] } (   k_1, ... ,k_{\\dot{n } }   ;    k_1, ... ,k_{n ' } ) \\ ] ] where again we have `` folded in '' together all @xmath240 contributions with the same isr and/or fsr multiplicity .    in the monte carlo we generate for a given @xmath58 one of the @xmath241}$ ] distributions and we implicitly understand that _ in order to get all @xmath62 partitions _ we have to _ undo _ the above `` folding in '' , that is we have to perform the proper bose symmetrization of the photon momenta ; in other words , we must permute the momenta of all photons randomly , so that no trace is left of the primary isr / fsr origin of a given photon .",
    "the above is always understood when we say that , we generate in the mc , all @xmath62 partitions using multibranching methods .",
    "the above rule is important to remember , because the mc code itself may be misleading for two reasons : first of all we exploit the equivalence principle of ref .",
    "@xcite , in order to reorganize our weights , and the model weight for ceex is multiplied by the crude weight for one of the partitions only , and not by the sum of crude weights over all partitions ( branches )  so one may easily get the wrong impression that the multi - branching over partitions is absent .",
    "secondly , in the low - level mc , when generating the _ primary _ primitive distribution , we do not generate first @xmath58 and later @xmath242 with @xmath243 , but rather @xmath244 and @xmath245 independently of each other , taking advantage of the particular properties of the poisson distributions that govern them and allow us to do it .",
    "the bottom line is the following : the crude distributions for ceex and eex can be , and are provided by the same low - level monte carlo , because of the identity ( [ eq : relation - of - two - crudes ] ) , and because the multibranching over partitions is practically equivalent to bose symmetrization . understandably , this has great practical importance .",
    "the model weight for the eex is the following @xmath246 } ( q_1,q_2 ; \\dot{k}_1,\\dots,\\dot{k}_{\\dot{n } } ; k'_1,\\dots , k'_{n ' } )       } , \\ ] ] where the model distribution in the numerator is from eq .",
    "( [ eq : rho - eex3 ] ) , and the crude distribution in the denominator is from eq .",
    "( [ eq : dist - crude ] ) .",
    "the model weight for the ceex is the following @xmath247 } ( p_c , p_d,\\ ; k_1,k_2,\\dots , k_n ) ( 2\\pi)^{3(n+2)-4 }      } , \\ ] ] where the model distribution in the numerator is from eq .",
    "( [ eq : rho - ceex2 ] ) , and the crude distribution in the denominator is from eq .",
    "( [ eq : dist - crude - ceex ] ) .",
    "the factor @xmath248 is due to the difference in the normalization of @xmath249lips@xmath250 and @xmath251 .",
    "as explained in the previous section the corresponding total weight is @xmath252 and @xmath253 where @xmath254 is exactly the same , provided we do for ceex the proper bose ",
    "einstein symmetrization . however , even this is strictly speaking unnecessary because the ceex matrix element is bose - symmetric anyway , by construction .",
    "only one of many model weights is the _ principal weight _ used for a rejection of the events .",
    "of course we choose the best one , that is the ceex - type .",
    "the other ones are available , and we use them for tests .      our starting point is the phase - space integral of eq .",
    "( [ eq : dist - crude ] ) for the crude total cross section , which can be rewritten as follows @xmath255 where @xmath102 .",
    "the integral above is lorentz - invariant and , in principle , can be evaluated in any reference frame , not necessarily in the laboratory frame where @xmath256 and @xmath257 , which we call pms .",
    "the implicit assumption is also that all momenta in the phase space are in the same reference frame at the time of the evaluation .",
    "the reality of the mc world is more complicated .",
    "although the final product , the list of all four - momenta ( mc event ) , is given to the user in one universal frame , the laboratory frame , in the intermediate stages the integral is split into lorentz - invariant parts and each part is worked out separately , in the _ local _ lorentz frame , which is the most convenient for generating subgroup of four - momenta in this subintegral .",
    "then , momenta of this subgroup / subintegral are lorentz - transformed to the laboratory .",
    "the mc generator is not fully documented if the relevant _ local _ frames and the lorentz transformation connecting them to one another and to the laboratory system are not unambiguously defined . in this section",
    "we shall make an effort to do it .    in the case of the above integral",
    "we take advantage of the lorentz invariance of @xmath258 and we transform all its variables to the frame where @xmath259 , the xms frame , and put bars on top of them to mark this : @xmath260 this operation is still not defined unambiguously , unless we specify the direction of two space - like axes in the new frame or , equivalently , write down explicitly the lorentz transformation @xmath261 from xms to cms and back .    before we do this , let us note that there are at least three main ways of fixing the @xmath159-axis in the xms frame .",
    "two possibilities are to use as a direction for the @xmath159-axis three - momenta of beams , @xmath262 or @xmath263 ( they are not the same if @xmath264 ) .",
    "we call them xms1 and xms2 correspondingly . note that these frames were introduced in refs",
    ".  @xcite .",
    "the other choice is to use as @xmath159-axis in the xms frame the direction of the @xmath265 , that is the direction of the boost connecting pms and xms ( that is the direction opposite to the total four - momentum of the isr photons ) .",
    "this choice we shall call simply xms , as it was used in ref .  @xcite . a third choice is to do a so - called parallel boost @xmath266 along the direction of the @xmath267 in pms .",
    "the corresponding transformation matrix is @xmath268 where @xmath269 marks the matrix transposition and @xmath270 marks the tensor product .",
    "this is our choice in the present version of the program ( the same as in the yfs3 mc ) .",
    "note that , in general , in the xms frame defined with the above transformation , the @xmath159-axis is not parallel to @xmath262 or @xmath263 .",
    "the transformation from our xms to cms is @xmath271 the transformations for other types of xms are given explicitly in ref .",
    "@xcite .    now comes an important point .",
    "as already indicated , the emission of the fsr photons is done in the comoving frame attached to the momenta @xmath272 of outgoing fermions , that is in the frame where @xmath273 and @xmath274 .",
    "we shall call it qms .",
    "so why do we not transform immediately from xms to qms , and generate photons there ?",
    "the problem is that @xmath275 , and in order to get from xms to qms we have to know @xmath276 in the first place . we are stuck .",
    "the solution is to reparametrize the fsr integral with the help of the integration over the lorentz group ; the details are given in ref .",
    "here we just apply the result of this work and obtain the new formula : @xmath277 in which those variables with a tilde are defined in the qms .",
    "note that the jacobian due to the reparametrization of the fsr integral cancels exactly the factor @xmath278 .",
    "the explicit transformation from qms to xms defines the meaning of the new @xmath279 integration variables : @xmath280 the most important fact is that the explicit integration over @xmath281 and @xmath282 has disappeared completely !",
    "the angles @xmath283 parametrize the three - dimensional orientation of the momenta set @xmath284 as a whole in xms .",
    "the above treatment of the fsr phase space is the simplest one  this is why we adopted it .",
    "note that the angles @xmath283 have no direct geometric meaning of polar angles of a certain momentum in a certain frame  they are just parameters in the lorentz transformation . in particular ,",
    "momenta @xmath285 and @xmath286 do not coincide with the @xmath159-axis in xms .",
    "such an arrangement is , however , possible .",
    "it corresponds to a different transformation @xmath287 and the integral ( [ eq : intermediate ] ) would look slightly different .",
    "such an alternative solution is described in detail in ref .",
    "@xcite .",
    "the crude integral of eqs .",
    "( [ eq : dist - crude ] ) and ( [ eq : intermediate ] ) can be rewritten as follows : @xmath288 }   ( q_1,q_2 ; k_1 , \\dots , k_{n } ; k'_1 , \\dots , k'_{n ' } ) \\\\   = & \\sum_{f=\\mu,\\tau , d , u , s , c , b}\\;\\ ;    \\int d s_x\\ ;   \\sigma^f_{\\born}(s_x ) \\;\\ ;    \\int { d\\psi d\\cos\\omega \\over 4\\pi } \\ ; \\\\    & \\sum_{n=0}^\\infty { 1\\over n ! }      \\prod_{j=1}^n    { d^3 k_j\\over k^0_j }   \\tilde{s}_e(k_j )   \\bar\\theta_{e}(k_j)\\ ;     \\delta\\left(s_x - ( p- \\sum_{j=0}^n k_j)^2 \\right )     e^ { \\gamma_e \\ln\\varepsilon_e}\\\\    & \\sum_{n'=0}^\\infty { 1\\over n ' ! } \\int d s_q\\ ;     \\prod_{l=1}^{n ' } { d^3 \\tilde{k}'_l\\over   { \\tilde{k'}}_l^0}\\ ;                      \\tilde{s}_f(\\tilde{k}'_l ) \\bar\\theta_{_f}(\\tilde{k}'_l)\\ ;     \\delta\\left(s_x - ( \\hat{q } + \\sum_{j=0}^{n ' } \\tilde{k}'_j)^2 \\right )     e^ { \\gamma_f \\ln\\varepsilon_f } .",
    "\\end{split}\\ ] ] this clearly factorizes into independent isr and fsr parts , with the integration over the effective mass @xmath212 pulled out as a principal integration variable .",
    "the above integral is ready for the mc generation .",
    "let us stress again that in all the above reorganization of the phase space for the @xmath289 , from eq .",
    "( [ eq : dist - crude ] ) through eq .",
    "( [ eq : crude - start ] ) to eq .",
    "( [ eq : ready - to - go ] ) , we only changed variables with _ no approximations _ , with full control of the jacobians of all mappings . for completeness",
    "we write the total transformation from qms down to cms : @xmath290 and @xmath291 is defined in the rest frame of the outgoing fermions .    in the following sections we shall introduce variables that are used directly in the mc generation , separately for isr and fsr , and we shall define _ primary _ differential distributions generated at the lowest level of the mc algorithm .",
    "we start with the fsr  in this case the corresponding _ primary _ differential distribution sums up to unity , and next we elaborate on the case of isr .",
    "the case of fsr will be described in detail , while the case of isr will only be summarized , since it was already discussed in ref .",
    "@xcite .      in the following we shall describe the mc algorithm for the generation of the fsr photon momenta .",
    "although it was used for almost a decade  @xcite , it is the first time that it is described in full detail",
    ". let us consider the fsr part of the crude integral of eq .",
    "( [ eq : ready - to - go ] ) : @xmath292 where we restored finite @xmath107 , photon momenta @xmath293 are defined in the qms rest frame of the outgoing fermions  the natural reference frame to describe the emission of the fsr photons  and",
    "@xmath294 is the real photon minimum energy in this frame .",
    "let us now express the photon momenta in units of @xmath295 , as well as introduce polar parametrization and other auxiliary notation : @xmath296 with the help of the above we are able to eliminate the @xmath157-function : @xmath297 and from now on @xmath298 also the single - photon distribution gets transformed : @xmath299 and the whole integral is transformed into the semi - factorized form : @xmath300 the reader should not , however , be misled by the apparent simplicity of the above integral  it does not factorize yet into a product of independent integrals , one per photon , because the collective dependence on all photon momenta @xmath301 is entering everywhere through the variable @xmath302 , see eq .",
    "( [ eq : sq ] ) .",
    "another complication due to the use of @xmath295 as an energy scale is that , in the case of the hard fsr photon , the upper limit of @xmath303 extends to large values , not really to infinity because of the @xmath304 ; nevertheless , this is not very convenient for the mc integration .",
    "this is cured with the following change of variables : @xmath305 which leads to @xmath306 with the new variables the condition @xmath307 ( easily implementable in the mc ) translates approximately into @xmath308 .",
    "furthermore , we have @xmath309 which is ideal for the mc   and the corresponding contribution to the mc weight is not well bounded from above . ] .",
    "the new ir limit @xmath310 is however inconvenient for the mc .",
    "the solution is to substitute @xmath311 where @xmath312 is from now on the new ir regulator for fsr real photons .",
    "note that this sets @xmath313 as a lower limit for the photon energy in the qms , which is _ higher _ than the previous one @xmath314 ( for @xmath315 ) .",
    "consequently , we have to keep the value of @xmath316 very low , in fact we need @xmath317 , which can be a problem for @xmath32 .      up to this point , the fsr integral of eq .",
    "( [ eq : fsr - integral ] ) was transformed without any approximations and the integral was conveniently parametrized for the mc generation : @xmath318 there is also a one - to - one correspondence between the points in the lorentz - invariant phase space and the points in space of our new variables : @xmath319 we can also write explicitly the differential distributions in the two _ equivalent _ parametrizations @xmath320    we are now ready to introduce the _ simplifications _ leading us to a _ primary _ distribution , which can be integrated analytically and generated using standard uniform random numbers .",
    "the simplifications are for the same reasons as in the case of isr ; see next subsection . ]",
    "@xmath321 where @xmath322 the main purpose of the above is to remove any complicated dependence on the momenta of all photons through @xmath302  it is achieved trivially by replacing @xmath302 by @xmath212 . with this",
    "hard fsr photons , get stronger collinear peaks at @xmath323 in the primary differential distribution . the resulting fsr _ primary _ differential distribution is : @xmath324 and the compensating weight transforming the primary distribution into the crude distribution is @xmath325 events @xmath326 generated according to @xmath327 , defined in eq .",
    "( [ eq : fsr - primary ] ) below with the weight @xmath328 , will be distributed ( if rejection is applied ) according to the differential distribution , that is the integrand in eq .",
    "( [ eq : isr - equivalent ] ) , as desired .",
    "there is only one thing to be remembered : removing @xmath304 in the primary distribution means that we can not map every event generated according to @xmath329 into a lorentz - invariant phase - space point , the unambiguous mapping exists in a strict sense in only one direction : @xmath330 this is , however , not really a serious problem because it occurs only for the events with @xmath331 , while for events with @xmath332 we are able to map @xmath333 nevertheless , one should keep in mind that some 0-weighted events generated by the fsr algorithm do not have four - momenta assigned to them .",
    "finally we may check that , as advertised , the integral over the fsr primary distribution can be evaluated analytically : @xmath334 the photon multiplicity for the primary distribution is the standard poisson distribution , with the average @xmath335 and the overall normalization is trivially equal to 1 , which is a natural choice for the fsr anyway .",
    "the mc generation of the distribution ( [ eq : fsr - prim - dist ] ) is rather easy .",
    "it is fully factorized ",
    "variables @xmath336 , @xmath337 and @xmath338 can be generated independently .",
    "the distribution of @xmath337 is just flat and the distribution of @xmath338 is trivial to generate : @xmath339 where @xmath340 are the standard uniform random numbers @xmath341 .",
    "the distribution of @xmath336 requires applying the branching method : it is split into two components @xmath342 and @xmath336 is generated according to one component , chosen with the equal probability between the two .",
    "for example , if the first component @xmath343 is chosen then @xmath344 where @xmath345 is another uniform random number .      in the following",
    "we shall describe the mc algorithm of the generation of the isr photon momenta .",
    "the algorithm was already described in ref .",
    "@xcite , and for the sake of completeness we shall describe it here , but without going into the fine details .",
    "let us consider the isr part of the crude integral of eq .",
    "( [ eq : ready - to - go ] ) for one final fermion type @xmath346 : @xmath347 where @xmath348 is the minimum energy of the real isr photon in the laboratory cms . in the first step",
    "we introduce the variable @xmath349 and order energies of the photons @xmath350 where @xmath351 and @xmath352 .",
    "now we rescale all momenta and introduce a polar parametrization @xmath353 we fix the scaling factor @xmath354 such that @xmath355 : @xmath356 where @xmath357 is the solution and @xmath358 .",
    "] of the equation @xmath359 and @xmath360 is an overall jacobian factor : @xmath361 and the photon angular distribution is governed by @xmath362      up to this point the isr integral of eq .",
    "( [ eq : isr - integ ] ) was transformed without any approximation and we maintain , modulo ordering of the photon energies , the one - to - one correspondence of the points in the lorentz - invariant phase space and in the space of the new variables : @xmath363 before we define the _ primary _ differential distribution to be generated in the mc , let us write once again explicitly the two _ equivalent _ ( modulo energy ordering ) parametrizations of the isr _ crude _ differential distribution : @xmath364 the _ simplifications _ leading to the isr _ primary _ differential distribution are the following : @xmath365 where @xmath366    the resulting isr _ primary _ differential distribution is @xmath367 and the corresponding weight is @xmath368    let us explain and justify the simplifications of eqs .",
    "( [ eq : isr - simplify ] ) .",
    "the replacement @xmath369 is not really necessary in the present context of building an efficient mc algorithm for isr .",
    "we could do without it , because the @xmath370 distribution is rather simple .",
    "the problem is really in the model weight at and higher orders .",
    "as is well known in the soft limit , the helicity - non - conserving spin - amplitude contribution vanish , on the other hand , a perfect helicity conservation contradicts the angular - momentum conservation for a photon emitted exactly parallel to the respective emitting fermion , and this is reflected in the photon distribution @xmath371 ^ 2},\\ ] ] which has explicit zeros at @xmath323 .",
    "when we admit the exact hard photon emission matrix element , then for hard photons these regions close to @xmath323 will be filled in by the helicity - non - conserving contributions , and the model weight based on @xmath370 would fluctuate wildly when we approach in division by @xmath370 , division by 0 .",
    "the solution is not to have these zeros at all , at the level of the primary distribution , and this is why we opted for @xmath372 .",
    "in such a case the product of the model and crude weight will be regular at and beyond .",
    "the other two simplifications are introduced for purely technical reasons .",
    "the simplification @xmath373 is especially costly in terms of the mc efficiency because , for @xmath374 , it introduces the `` spurious '' singularity @xmath375 . together with the usual @xmath376 from @xmath377",
    ", it builds up strong singularity @xmath378 in the primary differential distribution , and huge primary integrated cross section @xmath379 .",
    "it is almost completely compensated by the very high rejection rate of events close to @xmath380 due to the ratio @xmath381 in @xmath382 .",
    "the rejection rate is @xmath383 . for muons 99% of events",
    "are rejected .",
    "however , in most of the applications , this effect can be easily eliminated by setting @xmath384 or lower .",
    "the above problem is unfortunately unavoidable in the actual mc algorithm for the isr . it can be traced back to the fact that the present mc algorithm is not very well suited for the emission of the two photons of large effective mass , such as the simultaneous emission of two hard photons along two beams .",
    "the present algorithm `` folds in '' together the energies of photons emitted from both beams . a more sophisticated algorithm , in which photons emitted from two beams are generated independently ,",
    "is needed in order to eliminate this problem .    the @xmath385 contribution to the weight",
    "has interesting consequences . as discussed in refs .",
    "@xcite it leads directly is not present for @xmath386 ; it is nevertheless present in the integrated cross section , since the corresponding negative contribution is located just above @xmath387 . ] to a characteristic factor @xmath388 in the @xmath389 and in the total cross section .    finally , let us integrate analytically the isr _ primary _ differential distribution @xmath390    how do we generate the primary differential distribution @xmath391 ?",
    "we start with the generation of @xmath392 according to @xmath393 this is done by using a general - purpose mc tool such as vesko1 or foam ; care is taken of any possible resonance or threshold in the @xmath377 . in the next step ,",
    "photon multiplicity @xmath58 is generated .",
    "for @xmath386 we have simply @xmath394 , and for @xmath395 the photon multiplicity distribution is : @xmath396 which is just the shifted - by - one poisson distribution @xmath397 , with the average @xmath398 .",
    "the angles @xmath336 and @xmath337 are generated in the same way as in the previously discussed case of fsr .",
    "let us consider the case of eex : @xmath399 where the model weight @xmath400 is defined in eq .",
    "( [ eq : wtmot - eex ] ) in terms of the eex differential distribution of eq .",
    "( [ eq : rho - eex3 ] ) . using eq .",
    "( [ eq : crude - start ] ) with the later substitution @xmath401 which was introduced in order to facilitate the mc generation , we obtain @xmath402}(\\omega_i,\\omega_f)\\;\\ ;        a(n , k_1,\\dots , k_n ; n',k'_1,\\dots , k'_{n ' } ; p_i , q_i)\\ ; \\\\ & \\qquad\\qquad\\qquad\\qquad\\qquad\\qquad \\times        w^{(r)}_{\\rm eex}(n , k_1,\\dots , k_n ; n',k'_1,\\dots , k'_{n ' } ; p_i , q_i)\\ ; \\\\ &       d\\sigma^{\\rm cru}_{[n , n']}(\\omega_i,\\omega_f )       \\equiv       d s_x \\ ; { \\sigma_{\\born}(s_x ) \\over 4\\pi } \\ ;        d\\tau_{n+1 }   ( p ; k_1,\\dots , k_n , x)\\ ;       e^ { \\gamma_e \\ln\\varepsilon_e }        { 1\\over n ! } \\prod_{j=1}^n",
    "2\\tilde{s}_e(k_j )   \\bar\\theta(\\omega_i , k_j)\\ ; \\\\ & \\qquad \\times       d\\tau_{n'+2 } ( x ; k'_1,\\dots , k'_{n ' } , q_1,q_2)\\ ;       { s_x\\over s_q}\\ ; { 2 \\over \\beta_f } \\ ;       e^ { \\gamma_f \\ln\\big ( \\delta_f { s_q+2k'q\\over s_q } \\big ) } \\ ;       { 1\\over n'!}\\prod_{l=1}^{n ' } 2\\tilde{s}_f(k'_l ) \\bar\\theta(\\omega_f , k'_l)\\ ; , \\end{split}\\ ] ] where for the sake of the discussion of the ir cancellations we have introduced a general _ acceptance function _ @xmath403 .",
    "every physical , i.e. ir - safe , observable corresponds uniquely to one or more such acceptance functions .",
    "just to give an example : the total cross section corresponds to @xmath404 , the forward ",
    "backward asymmetry is related to @xmath403 expressed in terms of final fermion momenta like @xmath405 , the cross section for the production of exactly two photons above @xmath406 gev corresponds to @xmath407 , and so on .",
    "the acceptance function corresponding to a physically meaningful , ir - safe , observable has to obey one important rule @xmath408 and a similar rule should hold for fsr photons ( in eex we can make a distinction between isr and fsr photons because we neglect isr  fsr interference ) .",
    "so far we kept the ir domains different for isr and fsr , for isr @xmath99 was defined by : @xmath409 in the laboratory cms system where @xmath410 , while for fsr @xmath100 was defined by @xmath411 in the qms system where @xmath412 .",
    "our task is now to bring the two ir domains together .",
    "we know that the total cross section and any ir - safe observable are completely independent of @xmath100 and @xmath99 . the self - suggesting solution is , loosely speaking , to set @xmath316 so small that we always have @xmath413 , and simply neglect all fsr photons @xmath414 , that is just remove them from the list of the generated momenta in the mc .",
    "note that because @xmath415 we may need @xmath416 .",
    "let us work out the details of the above method , providing a formal proof of its validity .",
    "the above prescription definitely leads to a certain new crude distribution @xmath417}(\\omega_i,\\omega_i)\\ ] ] in which the ir - domain @xmath418 is common for isr and fsr photons .",
    "the question is : what is the above new crude distribution ?",
    "it turns out to be calculable analytically .",
    "( in the calculation we follow closely the algebra of the formal proof of the independence of the physical observables on the ir domain @xmath77 as given in ref .  @xcite . )",
    "let us consider the internal fsr subintegral in eq .",
    "( [ eq : observable ] ) , that is all isr photon momenta are fixed ; @xmath419 following @xmath420 we split every photon integral into two parts and reorganize the sum factorizing out the integral over @xmath421 : @xmath422 where @xmath423 for @xmath424 and @xmath425 otherwise .",
    "the most important ingredient in the above algebraic transformation was that the model weight @xmath400 , due to the particular expansion of @xmath426 into @xmath427-components , see eq .",
    "( [ eq : rho - eex3 ] ) , also fulfils the `` ir - safeness '' condition @xmath428 and consequently the function @xmath429 as well .",
    "the resulting integral @xmath430 gets an additional exponential factor , which is easy to interpret .",
    "it can be expressed in terms of the function @xmath431 as follows @xmath432    we have therefore found out by explicit calculation that in the proposed method , in which for @xmath100 much smaller than @xmath99 we skip photons that fall into @xmath433 , the distribution of the remaining photons is the following @xmath434}(\\omega_i,\\omega_i )     = d s_x \\ ; { \\sigma_{\\born}(s_x ) \\over 4\\pi } \\ ;     d\\tau_{n+1 }   ( p ; k_1,\\dots , k_n , x)\\ ;    e^ { \\gamma_e \\ln\\varepsilon_e }     { 1\\over n ! } \\prod_{j=1}^n",
    "2\\tilde{s}_e(k_j )   \\bar\\theta(\\omega_i , k_j)\\ ; \\\\ & \\qquad \\qquad \\times    d\\tau_{n'+2 } ( x ; k'_1,\\dots , k'_{n ' } , q_1,q_2)\\ ;    { s_x\\over s_q}\\ ; { 2 \\over \\beta_f } \\ ;    e^ { r_f(\\omega_i )   } \\ ;    { 1\\over n'!}\\prod_{l=1}^{n ' } 2\\tilde{s}_f(k'_l ) \\bar\\theta(\\omega_i , k'_l)\\ ; \\\\ &    r_f= \\gamma_f \\ln\\left ( \\delta_f { s_q+2k'q\\over s_q } \\right )         + 2q_f^2\\alpha\\tilde{b}(\\omega_i , q_1,q_2 ) -2q_f^2\\alpha\\tilde{b}(\\omega_f , q_1,q_2 ) .",
    "\\end{split}\\ ] ] also note that , _ by construction _ , the integral value is preserved @xmath435}(\\omega_i,\\omega_i ) = \\sum_{n ,",
    "n ' } \\int d\\sigma^{\\rm    cru}_{[n , n']}(\\omega_i,\\omega_f).\\ ] ]    now , since the ir boundary in the above new distribution has changed for fsr photons , we can not continue to use the @xmath436 of eq .",
    "( [ eq : rho - eex3 ] ) .",
    "we have to use another @xmath437 in which we replace @xmath438 by @xmath439 in the yfs form factor , see eq .",
    "( [ eq : y - function ] ) : @xmath440 and consequently , since the model weight is the ratio of the model and crude distributions , the new exponential factors cancel out , and the new model weight is functionally exactly the same @xmath441 in the new mc calculation @xmath442 both the product of the weights and the normalization is the same .",
    "the above result is so trivial that , in fact , in the mc program for the eex model we change almost nothing  we are only omitting hidden photons in the calculation of the model weight .",
    "this simplicity reflects the basic fact that very soft photons are unimportant for all ir - safe integrand functions .",
    "the term @xmath443 in @xmath444 is cancelled by @xmath438 and there is in fact no dependence on @xmath100 nor @xmath316 in @xmath445}(\\omega_i,\\omega_i)$ ] any more .",
    "the ir cancellation is now assured by the term @xmath446 which is implicitly present in @xmath447 .",
    "the situation is , however , not as good as we described above .",
    "there is one important complication due to the use of the weighted events , at the level of the crude distribution .",
    "let us go back again to the case of eex @xmath448 now the problem is that photons in @xmath421 can not be `` hidden '' , because @xmath449 does not obey the `` ir - safeness '' condition @xmath450 even the softest photons contribute the finite ratio @xmath451 , and this contribution is essential for the ir - cancellations and for the overall normalization .",
    "there is , however , a way of saving our method of replacing @xmath100 with @xmath99 .",
    "let us repeat again the calculation of eq .",
    "( [ eq : binomial ] ) assuming that photons `` hidden '' inside @xmath421 do not contribute the factor @xmath451 to the overall weight .",
    "we are able to carry out the calculation as before , obtaining the modified exponential factor @xmath452 it is very important that the effect due to the omission of @xmath451 in the overall weight can be evaluated analytically , and therefore",
    "_ corrected for _ analytically . in other words",
    "we shall be able to compensate analytically for the missing average contribution to @xmath449 from the hidden photons .",
    "the evaluation of the integral over @xmath421 is based on the observation that @xmath453 where @xmath454 , are defined such that @xmath455 .",
    "furthermore , in the qms , they have the same directions as the original @xmath456 and the same total energy , @xmath457 . with the help of the above we get @xmath458.\\ ] ] we have at our disposal an analytical representation of the function @xmath459 , for spherical @xmath77 and regularized with @xmath88 , in terms of logarithmss and dilogarithms , for arbitrary @xmath272 ,",
    "not necessarily antiparallel .",
    "although @xmath460 is ir - finite by definition , it is useful to keep @xmath88 and evaluate separately @xmath439 in the cms and @xmath438 in qms , where the corresponding ir - boundaries are spherical , and subtract the results afterwards .",
    "we may calculate @xmath461 s in any frame , because they are ( when regularized with @xmath88 ) essentially lorentz - invariant  we only need to transform ir - boundaries @xmath77 correctly from one frame to another .    summarizing : in the realistic case of the weighted events ( with non - ir - safe weights ) the method in which we hide photons in @xmath433 leads to a new crude distribution similar to that in eq .",
    "( [ eq : crude - star ] ) with the new @xmath462 as a consequence , the above exponential factor does not cancel out exactly in the model weight with the correction to the yfs form factor as before , and we have the following additional correcting factor in the model weight : @xmath463            + 2\\alpha q_f [ \\tilde{b}(\\omega_i , q_1,q_2 )      - \\tilde{b}(\\omega_f , q_1,q_2 ) ]          } .    \\end{split}\\ ] ] it should be really present in the model weight , but in the program , for historical reasons and for convenience , it is included in the crude weight .",
    "the important profit from the above method is that with the above fix we can now make our calculation for the ceex model with the isr - fsr interference ( ifi ) switched on .",
    "note that the above treatment is more elaborate than the analogous one in bhlumi because it is valid for finite @xmath107 , while in bhlumi we use the approximation @xmath464 .",
    "the correcting weight in bhlumi is a simple one - line expression while here it expressed by a long series of logarithms and dilogarithms .",
    "let us finally add a side remark : another valid method of realizing a hypothetical monte carlo with common @xmath77 for isr and fsr is to generate photons using small @xmath100 and to apply a brute - force rejection of all events with one or more photons falling into @xmath99 .",
    "this was used in the early version of bhlumi .",
    "we do not like this method because it may lead to an excessive number of events with zero weight , lowering substantially the efficiency of the mc .",
    "let us finally describe yet another complication of the _ primary _ distribution , which is introduced for technical reasons , i.e. in order to get better total weight distribution , and a smaller rejection rate in the process of turning weighted events into unweighted events .",
    "this modification is not necessary for weighted events .",
    "( it can be switched off by adjusting input data ) .",
    "the problem is essentially due to the introduction of the isr - fsr interference , which we have already called ifi . as already known from the case , the weight that introduces ifi is sharply peaked around 1 and has a strict upper bound @xmath465 . the destructive interference with the weights @xmath466 occurs in the backward scattering ( in the fermion scattering angle ) and there is a little constructive interference @xmath467 , mostly in the forward direction .",
    "the maximum weight @xmath468 or a factor of @xmath469 in the _ primary _ primary cross section solves the problem , at the expense of the factor of 2 rejection rate  @xcite .    in the case of @xmath58 photons , however , the same leads to : the maximum weight @xmath470 or equivalently the increase of the _ primary _ cross section by a factor of @xmath62 , and consequently increase of the generated photon multiplicity by a factor of 2 .",
    "of course , almost all of this increase is artificial , and it is compensated by @xmath471 , leaving only some small net effect due to ifi in the mc events . a more sophisticated method would be to increase the _ primary _ primary cross section ( and photon multiplicity ) more selectively , that is in a way dependent on the fermion scattering angle . for the moment we do not do it .",
    "it may be done in the future .",
    "what we do is the following : we increase the _ primary _ cross section by a factor of @xmath472 , where @xmath473 is not equal to 2 , but is adjusted empirically so that the tail of the total mc weight is acceptable .",
    "we have found that the value @xmath474 is the optimal one .",
    "the introduction of the above @xmath473 factor affects all formulas for the _ primary _ cross section and for @xmath254 in a rather trivial way , so we do not write it explicitly .",
    "the only non - trivial modification is in the compensating factor for the _ hidden _ photons in the previous section .",
    "this can be understood and implemented as a modification of the electric charge of the final fermion @xmath475 in the _ primary _ cross section .",
    "specializing to the ceex model , we can summarize the results of the three previous sections as follows @xmath476}(\\omega_i).\\ ] ] here @xmath477}(\\omega_i)$ ] is obtained from the product of the isr and fsr primary differential distributions @xmath478}(\\omega_i,\\omega_f )    = d{\\mathfrak{i}}^{\\rm pri}_n(\\omega_i)\\ ;      d{\\mathfrak{f}}^{\\rm pri}_{n'}(\\omega_f),\\ ] ] see eqs .",
    "( [ eq : fsr - prim - dist ] ) and ( [ eq : isr - prim - dist ] ) , by means of hiding / ignoring fsr photons in @xmath421 . consequently , in the evaluation of @xmath479 and of all other weights , only momenta outside the common ir - domain @xmath99 enter .",
    "the value of the integrated cross section with the acceptance function @xmath403 is obtained in the mc run in a standard way @xmath480 the acceptance function @xmath403 may for instance define the entire cross section ( @xmath404 ) , or just a single bin in the histogram of @xmath481 for the outgoing fermion , or any other ir - safe observable .",
    "the overall normalization is based on @xmath482}(\\omega_i )      =   \\sum_{n=0}^\\infty   \\int   d{\\mathfrak{i}}^{\\rm pri}_n(\\omega_i)\\ ;         \\sum_{n'=0}^\\infty \\int   d{\\mathfrak{f}}^{\\rm pri}_{n'}(\\omega_f ) \\\\ &      =   \\sum_{f=\\mu, ... ,b}\\ ;         \\sum_{n=0}^\\infty   \\int   d{\\mathfrak{i}}^{\\rm pri}_n(\\omega_i)\\ ;       =   \\sum_{f=\\mu, ... ,b}\\ ;         \\int\\limits_0 ^ 1 d v\\ ;              \\sigma_{\\born}^f(s(1-v ) ) \\ ; { \\cal j}_0(v)\\ ;               \\bar\\gamma_e v^{\\bar\\gamma_e-1 } \\varepsilon^{\\gamma_e -\\bar\\gamma_e } ,    \\end{split}\\ ] ] where we have exploited the property @xmath483 of eq .",
    "( [ eq : fsr - primary ] ) , and the isr part is taken from eq .",
    "( [ eq : isr - prim - vdist ] ) .",
    "note that we have put @xmath484 , understanding that @xmath485 below the threshold , @xmath486 .",
    "we shall now describe the entire generation of the mc event according to @xmath477}(\\omega_i)$ ] from the top to the bottom , as is done in the program , starting from the generation of @xmath392 describing the total energy loss due to isr , the type of final fermion @xmath346 and the photon multiplicities @xmath58 and @xmath244 .",
    "generation of photon energies and angles comes later , using methods already described in detail in the previous section .",
    "first comes the important practical question : shall we ( a ) generate first the fermion type @xmath346 and later @xmath392 or ( b ) vice versa ?",
    "both options are technically realizable . in case ( a )",
    "we would calculate numerically @xmath487 for @xmath1 , and generate fermion type @xmath346 first ; and later on , for a given @xmath346 , we would generate the variable @xmath392 according to @xmath488 this looks as a natural solution ; however , the generation and integration of the isr spectrum @xmath489 is done numerically in a mc module that creates a look - up matrix , which memorizes very precisely the shape of the distribution during the initialization phase of the mc run ( before mc event generation ) . in this method",
    "we would need several initializations , creating several tables of this kind .",
    "this is feasible , but not very convenient .",
    "the situation is much worse , when beamstrahlung is switched on because in this case the 1-dimensional problem of the generation of @xmath392 is replaced with the 3-dimensional problem of generating @xmath490 , and consequently we would need to manage several sets of 3-dimensional look - up matrices .",
    "this would make the initialization phase rather long in cpu time , and the tables would occupy a lot of processor memory .",
    "we think that the above scenario is still technically realizable , even in the presence of beamstrahlung .",
    "nevertheless , we decided for option ( b ) , which is in our opinion more economical . in this case , we generate first the @xmath392 variable ( the case of beamstrahlung is described below ) according to a distribution summed up over final ",
    "state flavour : @xmath491 next , for a given @xmath392 , we generate the final - state flavour @xmath346 according to a probability @xmath492      in the presence of beamstrahlung , the flavour - summed three - dimensional distribution to be generated in the very beginning of the mc algorithm is @xmath493 see also eq .",
    "( [ eq : beamstrahlung ] ) .",
    "the above 3-dimensional distribution is explored and memorized in the look - up matrices in the initialization phase of the mc run .",
    "this allows us to generate @xmath490 in a very efficient way for arbitrary @xmath494 and arbitrary beamstrahlung structure function @xmath495 .",
    "as discussed previously , we admit in @xmath495 @xmath157-like singularities in @xmath153 and , as a result , the mc integration of @xmath496 is split into three branches with three separate look - up matrices .",
    "the above organization assures that the beamstrahlung structure function can be a completely arbitrary `` user function '' .",
    "next , for a given set @xmath497 , the final fermion flavour @xmath346 is generated with the probability @xmath498      having defined the total isr loss variable @xmath392 or @xmath499 , the isr photon momenta are generated first , and the fsr photon momenta are generated second . for @xmath386",
    "the isr photon multiplicity is zero and for @xmath395 it is generated according to the shifted poisson distribution @xmath397 with @xmath500 , see eq .",
    "( [ eq : isr - multiplicity ] ) , where , in the presence of beamstrahlung , the modified @xmath501 enters instead of @xmath68 into the definition of @xmath502 , see eq .",
    "( [ eq : bar - gamma - e ] ) .",
    "next , all isr photons are generated according to the distribution @xmath503 of eq .",
    "( [ eq : isr - prim - dist ] ) , with the methods already described . the crude weight of eq .",
    "( [ eq : wtcrud - isr ] ) is calculated .",
    "having generated isr photons ( and optionally beamstrahlung ) we now know the total four - momentum of the final fermions plus fsr momenta @xmath504 but to start generation of the fsr momenta we need to know only @xmath505 .",
    "first , the fsr photon multiplicity @xmath244 is generated according to a poisson distribution with the average defined in eq .",
    "( [ eq : fsr - crude - multiplicity ] ) . then",
    ", fsr momenta are generated in the rest frame of @xmath104 ( qms ) .",
    "more precisely , their dimensionless energy parameters and angles are generated , according to the corresponding fsr primary distribution of eq .",
    "( [ eq : fsr - prim - dist ] ) , such that the @xmath506 needs not be known .",
    "the @xmath302 is determined as a fraction of @xmath212 with the help of eq .",
    "( [ eq : sq ] ) , such that photon four - momenta can be constructed in absolute ( gev ) units in qms .    at this point",
    "we need to generate angles @xmath507 and @xmath508 in the transformation form qms down to cms defined in eq .",
    "( [ eq : la - transform ] ) . knowing the momentum @xmath509 in the qms we may apply this transformation and calculate final fermion momenta in the cms where @xmath510 . in the case of beamstrahlung",
    "this transformation bring us to a frame where @xmath511 , and we need an additional boost along beams to brings generated momenta to the laboratory system .",
    "the same boost is done for isr photons .",
    "removal ( hiding ) of the fsr photons in @xmath421 is done at the end of the generation of the fsr photons .",
    "all remaining photons have the common ir - domain @xmath99 defined in the cms where @xmath510 or in the presence of beamstrahlung in the frame where @xmath511 .",
    "in the following we shall describe the topography of the distribution directory , then the programming rules which we follow , and finally we shall briefly describe the functionality of the principal modules of the program .",
    "the program source code is organized into _ modules _ , also called _ pseudo - classes _ , which are located in several unix - type subdirectories of the distribution directory kk - all .",
    "the distribution directory also contains one additional subdirectory , ffbench , with demonstration ( template ) programs and one subdirectory , dok , with the documentation .",
    "the essential part of the source code of the  monte carlo event generator is located in the two subdirectories kk2f and bornv .",
    "the tool box of various utilities is located in the subdirectory glibk , the electroweak library is located in dizet , the mc library of the @xmath2 lepton decays tauola is in the subdirectory tauola , photos in the subdirectory photos and the hadronization package jetset is in the subdirectory jetset .",
    "( 1200,1200 ) ( 00,1150)(0,0)[b ] ( 00,1150 ) ( 00 , 100 ) ( 100,1055)(0,0)[b ] ( 00,1050)(1,0)200 ( 200,1050)(0,0)[l ] ( 100 , 905)(0,0)[b ] ( 00 , 900)(1,0)200 ( 200 , 900)(0,0)[l ] ( 100 , 805)(0,0)[b ] ( 00 , 800)(1,0)200 ( 200 , 800)(0,0)[l ] ( 100 , 705)(0,0)[b ] ( 00 , 700)(1,0)200 ( 200 , 700)(0,0)[l ] ( 100 , 575)(0,0)[b ] ( 00 , 570)(1,0)200 ( 200 , 570)(0,0)[l ] ( 100 , 475)(0,0)[b ] ( 00 , 470)(1,0)200 ( 200 , 470)(0,0)[l ] ( 100 , 375)(0,0)[b ] ( 00 , 370)(1,0)200 ( 200 , 370)(0,0)[l ] ( 100 , 255)(0,0)[b ] ( 00 , 250)(1,0)200 ( 200 , 250)(0,0)[l ] ( 100 , 105)(0,0)[b ] ( 00 , 100)(1,0)200 ( 200 , 100)(0,0)[l ]      the program is written in fortran77 with popular extensions such as long variable names , long source lines , etc .",
    ", which are available on all platforms . in the _ makefile _ in the main directory kk - all , there is a collection , of f77 compilation flags , for linux , aix , hpux and alpha compilers , which should be used to activate these extensions .",
    "the program is written in such a way that its translation to an object - oriented language such as c++ should not be very difficult .",
    "in fact the program is divided into modules , which have the structure of the c++ classes , as far as it is possible to do it within f77 .",
    "below we characterize the rules according to which the program was written .",
    "each pseudo - class with the name module consists of a separate source file module.f and the header file module.h .",
    "each module obeys the following rules :    * there is only one common block /c_module/ which contains all class member variables , which is placed in the header file module.h .",
    "each subroutine in the module.f source file includes an include module.h statement .",
    "the outside programs should never include directly /c_module/. all input / output communication is done with the help of dedicated , easy to use , subroutines . * variables in /c_module/ are _ class members _ and all have the special prefix `` m _ '' in their name , for example m_iterat is the number of iterations . *",
    "the user has access to some class members through `` getters '' and `` setters '' ; see below .",
    "* strong typing is imposed with the help of implicit none .",
    "* initializator with the name module_initialize performs initialization .",
    "typically it initializes variables in /c_module/. * finalizer with the name module_finalize , summarizes the whole run , sets output values in /c_module/ , prints output , etc .",
    "* maker with the name module_makesomething , or a similar one , does the essential part of the job , for instance a maker module_makeevent generates a single mc event . * setter with the name module_setvariable",
    "is called from the outside world to set m_variable in /c_module/. for example call bornv_setcmsene(100d0 ) sets the variable m_cmsene=100d0 .",
    "only certain privileged variables have a right to be served by their own setter , the other ones are in principle `` private '' .",
    "* getter with the name module_getvariable is called from the outside world to get the m_variable from /c_module/. it is a preferred way of sending output information to the outside world .",
    "for example , with the help of call kk2f_getxsecmc(xsecpb , xerrpb ) one gets the mc cross section xsecpb and its error xerrpb in the user program .    in the following",
    "we shall describe all pseudo - classes and their role .",
    "the main purpose of this top - level pseudo - class is to provide the user interface , see section [ sec : usage ] on the usage of the program .",
    "let us list and explain the main entries in this class :    * kk2f_readatax(data_file,ireset , imax , xpar ) reads the input data file .",
    "it should be called twice , once with integer ireset=1 , for the default data file .kk2f_defaults , which is placed in the main directory kk - all .",
    "the user has to provide a link to this file , or absolute path in the name of the file .",
    "( copying it to the local directory is not recommended . )",
    "it should be called for the second time for the user data ./user_data with integer ireset=0 , in order to modify some entries in the input of the program .",
    "the variable integer imax is the dimension of the double precision xpar(imax ) . for the moment imax@xmath512 3000",
    "is required , but we reserve imax= 10000 for future use .",
    "the flag integer ireset=0 is for reading data with resetting all undefined values to zero , while with ireset=1 only entries listed in the data file are modified . *",
    "kk2f_initialize(xpar ) initializes the whole mc generator .",
    "this initializer calls initializers of other classes like bornv_initialize , karlud_initialize , karfin_initialize , qed3_initialize , gps_initialize , taupair_initialize .",
    "it initializes also the database for the branching over final fermion flavours in the class * mbra*. note that bornv_initialize reads from the disk look - up tables for the electroweak corrections and karlud_initialize manages initialization of the isr energy spectrum either with the help of * vesk1 * class or , in the presence of the beamstrahlung , with the help of the * bstra * class , which in turn initializes three copies of the foam package , * foama , foamb , foamc * ( or of vegas package , * vegasa , vegasb , vegasc * ) .",
    "* kk2f_make generates a single event .",
    "it calls karlud_make to make isr photons , karfin_make to make fsr photons and kk2f_merge to merge all photons in a single list .",
    "it invokes kk2f_makephelrand to generate the photon helicities randomly , calculates the eex model weight using call qed3_make and/or the ceex model weight using call gps_make .",
    "optional rejection is performed to produce weight-1 events and the weight book - keeping is done separately for each final fermion type using mbra_fill .",
    "finally , quarks are hadronized using hepevt_hadronize ( interface to jetset ) , or @xmath2 decays are simulated with all spin effects ( including all spin correlations ) .",
    "this is done using subprograms of the * taupair * class ( interface to tauola ) .",
    "* kk2f_getphotall(nphot , phoall ) provides the user with the momenta of all photons : double precision phoall(100,4 ) and photon multiplicity integer nphot .",
    "alternatively , nphot is provided by kk2f_getnphot(nphot ) and the @xmath513-th photon momentum by kk2f_getphoton1(iphot , phot ) , with double precision phot(4 ) . *",
    "kk2f_getfermions(q1,q2 ) provides the user with the momenta of the final fermions double precision q1(4),q2(4 ) . *",
    "kk2f_getbeams(p1,p2 ) provides the user with the momenta of the beams double precision p1(4),p2(4 ) . * kk2f_getwtall(wtmain , wtcrud , wtset ) can be used to get access to the main mc weight wtmain and the list of all alternative weights wtset(1000 ) .",
    "the weight for the crude differential cross section wtcrud is also provided .",
    "all of them are double precision type .",
    "alternatively , the getter kk2f_getwt(wtmain , wtcrud ) may be more convenient .",
    "* kk2f_finalize may be called at the end of the mc run , in order to perform the final book - keeping and printing .",
    "* kk2f_getxsecmc(xsecpb , xerrpb ) should be called after calling kk2f_finalize in order to get the total cross section ( in picobarns ) and its absolute error : double precision xsecpb , xerrpb .",
    "* kk2f_getversion(version ) and kk2f_getdate(date ) provide the user with the version number double precision version and the release data character*14 date information .",
    "this should help to keep track of the development of the program .",
    "* kk2f_print(ie1,ie2 ) can be used to print the actual mc events , limiting their serial number to stay between integer ie1 and integer ie2 .",
    "there are several other getters in the * kk2f * class , which are mainly for internal use .",
    "let us briefly list other subroutines in the * kk2f * class , which are not called by the user of the program :    * kk2f_wignerini(kfbeam , cmsene , polbeam1,polbeam2 , polar1,polar2 ) does wigner rotation for spin polarization vectors of beams .",
    "beam polarization vectors ( in input data ) are defined in the beam particle rest frames , which are reached from the cms by a simple @xmath159-boost without any rotation .",
    "( the first beam is parallel to the @xmath159-axis . ) * kk2f_zboostall(exe ) performs a @xmath159-boost on all momenta of the event .",
    "this @xmath159-boost corresponds to beamstrahlung or beam spread and is done at the very end of generation , after the calculation of the matrix element .",
    "* kk2f_dsigoverdtau(mout , rho ) is only for documentation and testing purposes .",
    "it calculates the distribution @xmath514 corresponding to wtcrud , normalized with respect to @xmath515 = lorentz invariant phase space .",
    "* kk2f_merge merges lists of isr and fsr photon momenta .",
    "the resulting merged photons are ordered according to their energy .",
    "* kk2f_makephelrand generates the photon helicities randomly .      the pseudo - class * hepevt * has the double purpose of ( a ) being another user interface , alternative to getters in * kk2f * , and ( b ) managing also the hadronization of quarks . the user may also traditionally put the common block of the * hepevt * class directly into its code",
    "it is a double precision version of the standard pdg /hepevt/",
    "common block , for a maximum of 2000 particles .    .... * ----------------------------------------------------------------------        integer nmxhep",
    "! maximum number of particles        parameter ( nmxhep=2000 )        double precision    phep , vhep        integer nevhep , nhep , isthep , idhep , jmohep , jdahep        common /d_hepevt/",
    "$      nevhep ,            !",
    "serial number       $      nhep ,              !",
    "number of particles       $      isthep(nmxhep ) ,    !",
    "status code       $      idhep(nmxhep ) ,     !",
    "particle ident kf       $      jmohep(2,nmxhep ) , !",
    "parent particles       $      jdahep(2,nmxhep ) , ! childreen particles",
    "$      phep(5,nmxhep ) ,    ! four - momentum , mass [ gev ]       $      vhep(4,nmxhep )     !",
    "vertex [ mm ]        save   /d_hepevt/ * ---------------------------------------------------------------------- ....    let us now list and explain the subprograms in the * hepevt * class .",
    "* hepevt_fill fills in all of common block /d_hepevt/ using the subprogram hepevt_fil1 .",
    "momenta are provided by getters from * karlud * and * karfin*. * hepevt_fil1 writes a single particle record into the common block /d_hepevt/.",
    "* hepevt_hadronize(hadmin ) arranges jets with the help of lujoin and lushow , and hadronizes quarks using luexec . *",
    "call hepevt_getbeams(p1,p2 ) provides four - momenta of the two beams double precision p1(4),p2(4 ) . *",
    "call hepevt_getffins(q1,q2 ) provides four - momenta of the two final fermions double precision q1(4),q2(4 ) . * call hepevt_getphotall(nphall , phoall ) provides the photon multiplicity integer nphall and the photon four - momenta double precision phoall(100,4 ) . * hepevt_getphotbst(nphot , phot ) provides the multiplicity integer nphot ( = 0,1,2 ) and four - momenta double precision phot(100,4 ) of the beamstrahlung photons .",
    "* hepevt_luhepc this is the double - precision version of luhepc of jetset .",
    "it translates double precision /c_hepevt/ into the old style real*4 lund commons .",
    "the simulation of isr together with the beamstrahlung and generation of the type of final - fermion flavour is implemented in the * karlud * pseudo - class .",
    "let us now list and explain all subprograms in the * karlud * class :    * karlud_initialize(xpar_input , xcrude ) is the initializer of the class .",
    "it initializes the generation of @xmath392 with the help of vesk1_initialize or of @xmath490 with the help of bstra_initialize .",
    "it defines the primary integrated cross section on which the entire normalization is based .",
    "* karlud_smearbeams implements beam spread .",
    "this is correct only for a small spread @xmath14 2  gev .",
    "it should not be used together with beamstrahlung , since this has not been tested yet .",
    "the distribution is gaussian @xmath516 ( delene is the dispersion of the beam energy ebeam , not of cmsene ) . *",
    "karlud_make(px , wt_isr ) generates isr photons with the help of other subprograms ; px(4 ) is the four - momentum left after photon emission , wt_isr is the isr component of the `` crude weight '' .",
    "the other subroutines called here are : karlud_smearbeams ( see below ) , bornv_setcmsene(xxxene ) , which resets the cms four - momentum in * bornv * in the case of beam smearing , vesk1_make , which generates the variable @xmath392 , in the absence of beamstrahlung ( alternatively it is done with vegasa_generate for keyfix=2 ) , or bstra_make , which generates @xmath490 in case of beamstrahlung .",
    "the isr photons are generated with the help of karlud_yfsini , see below , and the type of final - state fermion kf is generated with the help of mbra_genkf .",
    "finally , if fsr is off , then final momenta are produced locally with the help of kinlib_phspc2 * karlud_finalize(mode , xkarlud , kerror ) calculates the crude cross section xkarlud and its error kerror , and prints out final statistics .",
    "the crude cross section is coming from the vesk1_finalize ( alternatively from vegasa_getintcrude ) or , in case of beamstrahlung , from bstra_getxcrude , * karlud_yfsini(xxxene , vv , px , wtini ) is generating the isr photon momenta .",
    "its input is the total energy available xxxene , and vv@xmath517 .",
    "wtini is the isr component of the `` crude weight '' and px(4 ) is the four - momentum left after photon emission .",
    "karlud_yfsini calls bornv_getavmult to get the average isr multiplicity , karlud_poissgen and karlud_angbre , see below .",
    "* karlud_poissgen generates photon multiplicity .",
    "* karlud_angbre generates photon angle .",
    "* karlud_zboostall performs @xmath159-boosts of all photons . * karlud_getphotons(nphot , sphot )",
    "provides all isr photons . * karlud_getphoton1(iphot , phot ) provides single isr photons . *",
    "karlud_getpx(px ) provides four - momentum px , see above . *",
    "karlud_getbeams(p1,p2 ) provides the beam momenta . in the case of beamstrahlung p1,p2 ) are beams _ after _ beamstrahlung . *",
    "karlud_getbeasts(p1,p2 ) provides the collinear photons of the beamstrahlung .",
    "the fsr is implemented in the * karfin * class .",
    "this package was already used in the koralz  @xcite program for some time .",
    "thanks to recent improvements it now works properly without any approximations close to @xmath2 threshold . the @xmath518 approximation is not used anymore .",
    "let us now list and explain all subprograms in the * karfin * class :    * karfin_initialize initializes some internal variables ( weight book - keeping ) .",
    "* karfin_make(px , amfi1,amfi2,charsq , wtfin ) generates fsr photons with the help of other subprograms , see below .",
    "px is the four - momentum of the entire fsr system ( fermions + photons ) , amfi1,amfi2 are masses of the final charged pair ( not necessarily equal ) , charsq is the final - state fermion charge squared and wtfin is the fsr part of the crude weight .",
    "* karfin_yfsfin(px , amfi1,amfi2,charsq , wtfin ) generates momenta of the fsr photons .",
    "px , amfi1 , amfi2 , charsq , wtfin are as defined above .",
    "it calls karfin_poissgen and karfin_angbre to generate photon multiplicity and angles , then karfin_kinf1 and and karfin_piatek see below . * karfin_kinf1(px, ... ,phsu ) transforms from the rest frame of q = q1+q2 qms down to the laboratory through the intermediate rest frame of px = q1+q2 + phsu . * karfin_piatek ( mas1,mas2,charsq , wtmlist , wt3)friday , 22.ix.1989 ( s.j . ) ] optionally removes photons below @xmath519 from the list of photons , appropriately modifying the crude weight .",
    "mas1,2 = fermion masses , wtmlist = list of mass weights @xmath451 for all photons .",
    "wt3 = product of @xmath451 for the alive ( not hidden ) photons .",
    "the correcting weight is calculated with the help of bvr_btildc , calculating @xmath461 for @xmath520 and bvr_btilda for @xmath272 .",
    "* karfin_poissgen generates the photon multiplicity randomly .",
    "* karfin_angbre generates the photon angles randomly . *",
    "karfin_kinf1 transforms the final fermions and all photons from qms through the @xmath15-frame to cms .",
    "random rotation with angles @xmath283 is applied in the intermediate rest frame of px ( @xmath15 boson ) using karfin_bosteul .",
    "* karfin_bosteul performs lorentz transformations consisting of : ( 1 ) parallel boost from the final fermions rest frame to fermions + photons rest frame ( @xmath15 frame ) ; ( 2 ) two rotations with angles @xmath283 ; ( 3 ) parallel boost to the laboratory system cms . *",
    "karfin_zboostall(exe ) does an additional @xmath159-boost of all particles in case of beamstrahlung .",
    "* karfin_finalize prints final statistics .",
    "* karfin_getnphot(nphot ) provides the fsr photon multiplicity .",
    "* karfin_getphoton1(iphot , phot ) provides the four - momentum of a single fsr photon . * karfin_getphotons(nphot , sphot ) provides the four - momenta of all fsr photons . *",
    "karfin_getfermions(qf1,qf2 ) provides the four - momenta of the final fermions . *",
    "karfin_wtmass(wtmass ) provides the product of @xmath451 for the alive ( not hidden ) photons .",
    "class * bornv * is serving as a data - base for fermion properties such as mass , charge , isospin , colour and other fermion - type dependent parameters relevant to mc generation , like the maximum weight for rejection .",
    "it also reads from the disk and keeps the ew form factors produced by the interface to dizet 6.21 .",
    "all other classes use the data - base of the * bornv * class through its getters , see below .",
    "the data - base is located in the class common block c_bornv , which is initialized by bornv_initialize from the default input data file kk - all/.kk2f_defaults passed by arguments from kk2f_initialize .",
    "optionally , only after user modifications , see section [ sec : usage ] on the usage of the program .    for this particular class",
    "it is instructive to look into the list of the _ class member _ variables in the class common block / c_bornv/. below we quote part of the bornv.h source code :    .... * ----------------------------------------------------------------------        common /c_bornv/ * tables of ew formfactors       $   m_cyy(m_poin1 + 1,7,16 ) ,            !",
    "formfactor , table       $   m_czz(m_poin2 + 1,7,16 ) ,            ! formfactor , table       $   m_ctt(m_poin3 + 1,m_point+1,7,16 ) , !",
    "formfactor , table       $   m_clc(m_poin4 + 1,m_point+1,7,16 ) , ! formfactor , table       $   m_syy(m_poin1 + 1,16 ) ,              !",
    "qcd correction , table       $   m_szz(m_poin2 + 1,16 ) ,              ! qcd correction ,",
    "table       $   m_stt(m_poin3 + 1,m_point+1,16 ) ,    ! qcd correction , table       $   m_slc(m_poin3 + 1,m_point+1,16 ) ,    !",
    "qcd correction , table       $   m_gsw(100 ) ,     !",
    "form - factors ,    at the actual energy / angle       $   m_qcdcor ,       ! qcd correction , at the actual energy / angle * --------------------- event ------------------------------------------       $   m_cmsene ,",
    "! initial value of cms energy       $   m_xxxene ,       !",
    "cms energy after beamstrahlung or beam spread       $   m_x1 ,           !",
    "1-z1 = x1 for first   beam(strahlung )       $   m_x2 ,           !",
    "1-z2 = x2 for second beam(strahlung )       $   m_vv ,           !",
    "v = 1-sprim / s       $   m_avmult ,       ! average photon multiplicity crude at given v       $   m_yfskon ,       !",
    "yfs formfactor finite part       $   m_yfs_ir ,       ! yfs formfactor ir part * ---------------------------------------------------------------------       $   m_vvmin ,",
    "! minimum v , infrared cut       $   m_vvmax ,        ! maximum v       $   m_hadmin ,       !",
    "minimum hadronization mass [ gev ] * basic qed------------------------------------------------------------       $   m_alfinv ,       !",
    "1/alphaqed , thomson limit       $   m_alfpi ,        !",
    "alphaqed / pi       $   m_xenph ,        ! enhancement factor for crude photon multipl . * ew parameters       $   m_mz ,           ! z mass       $   m_amh ,          ! higgs mass       $   m_amtop ,        ! top mass       $   m_swsq ,         ! sin(thetaw)**2       $   m_gammz ,        !",
    "z width       $   m_amw ,          !",
    "w mass       $   m_gammw ,        ! w width       $   m_gmu ,          !",
    "fermi constant ( from muon decay ) * table of fermion parameters , quarks ( 1->6 ) and leptons ( 11->16 )       $   m_kfferm(20 ) ,   !",
    "fermion kfcode ( 1->6 ) and ( 11->16 )       $   m_ncf(20 ) ,      !",
    "number of colours       $   m_qf(20 ) ,       ! electric charge       $   m_t3f(20 ) ,      !",
    "isospin , l - hand component       $   m_helic(20 ) ,    ! helicity or polarization       $   m_amferm(20 ) ,   !",
    "fermion mass       $   m_auxpar(20 ) ,   ! auxiliary parameter",
    "$   m_isgenerated(20 ) ,   ! generation flag , only for semian . !",
    "* normalisation       $   m_gnanob ,       !",
    "gev^(-2 ) to nanobarns * initial / final fermion types       $   m_kfini ,        ! kf code of beam * test switches       $   m_keyint ,       ! isr / fsr intereference switch       $   m_keyelw ,       ! type of electroweak library       $   m_keyzet ,       ! z - boson on / off       $   m_keywtm ,       !",
    "photon emission without mass terms       $   m_out           ! output unit for printouts $ * ---------------------------------------------------------------------- ....    let us now list and explain all subprograms in the * bornv * class :    * bornv_initialize(xpar ) initializes data members in /c_bornv/. * bornv_startew(xpar ) initializes electroweak formfactors in /c_bornv/. there are two versions of this routine : one in kk - all / bornv / bornv_startew.f which reads electroweak formfactors from the disk file and another one in kk - all / dizet / bornv_startew.f which calculates it using dizet library .",
    "see section 4.13 for more details .",
    "* bornv_readall reads from the disk - file pretabulated ew form factors for @xmath521 and @xmath2 leptons , and for @xmath522 quarks . for @xmath523",
    "quarks the form factors of @xmath524 are used .",
    "* bornv_readfile(diskfile , kffin ) reads from the disk a single file for a single final fermion . *",
    "bornv_startdz(xpar ) initialized dizet library using current input data in xpar .",
    "* bornv_rebin1 , bornv_rebin1a , bornv_rebin2 , bornv_rebin2a subroutines map the variable @xmath525 ( random number ) into @xmath526 .",
    "various methods are used to do it , with various kinds of the mapping function . *",
    "double precision function bornv_rhofoamc(xarg ) is the integrand for foamc in the 3-dimensional mode for beamstrahlung .",
    "remember that bornv_crude and bornv_makerho use the hidden input m_xxxene .",
    "bornv_crude is in the r - units ( point - like cross - section at @xmath527=m_xxxene ) .",
    "it defines m_vv , which is later on exported to * karlud*. * double precision function bornv_rhofoamb(xarg ) is the integrand for foamb in the two - dimensional mode for beamstrahlung ( it defines m_vv ) . *",
    "double precision function bornv_rhofoama(xarg ) is the integrand for foama in the one - dimensional mode for beamstrahlung off and on ( it defines m_vv ) . *",
    "double precision function bornv_rhovesko1(r ) is the integrand of vesko1 .",
    "( the comment about hidden input m_xxxene applies . ) in the case of beamstrahlung the additional normalization factor circee(1d0,1d0 ) is added inside bstra_initialize ( it defines m_vv ) .",
    "* bornv_makegami(cmsene , gamicr , gami ) calculates gamicr@xmath528 and gami@xmath529 as functions of cmsene . *",
    "bornv_makeisr(rho ) this procedure is tightly related to isr photon generation in * karlud*. it provides rho(m_vv , m_xxxene ) , the primary distribution of @xmath392 .",
    "it also calculates m_avmult , which is later used in karlud_yfsini ; m_yfskon , m_yfs_ir , which are later used in gps_make and qed3_make . * double precision function bornv_crude(vv ) calculates the crude total born cross section summed over fermion types .",
    "it exploits the fact that the born differential distribution reads @xmath530 .",
    "( hidden input is m_xxxene ) .",
    "it is used in bornv_rhovesko1 , bornv_rhofoama , etc . *",
    "double precision function bornv_differential(mode , kff , svar , costhe , ... ) is the born differential distribution . for mode=0",
    "it is a crude version of pure born , no spin , no ew corrections . for mode=1",
    "it is the full result with ew corrections spin , etc . in this mode",
    "it is used in * qed3 * , and for all kinds of tests . for mode=3 it is used in the tests of pretabulation . in this case",
    "gsw(s , theta ) has to be provided from the outside , with the help of bornv_setgsw . *",
    "double precision function bornv_simple(kfi , kff , svar , costhe ) provides for an unsophisticated born differential distribution without ew corrections , with the @xmath15 and @xmath39 @xmath68-channel exchange . * double precision function bornv_integrated(kffin , svar ) _",
    "is used only in semianalytical programs . _",
    "it calculates the total born cross section . for kffin",
    "= 0 it sums over all allowed flavours ; otherwise , for kffin.ne.0 , it calculates the cross section for the actual value of m_kffin . *",
    "double precision function bornv_dizet(mode , kfi , kff , svar , costhe , ... ) provides for bornv_differential the differential born cross section with / without ew corrections . for mode=0 it provides pure born and for mode=1 electroweak corrections are added .",
    "kfi , kff can also be negative for an antiparticle ; in this case it is important to produce tables with the correct input kfini , kffin .",
    "* bornv_interpogsw(kff , svar , costhe ) calculates ew form factors from look - up tables , using linear interpolation . *",
    "bornv_givizo(idferm , ihelic , sizo3,charge , kolor ) provides electric charge , weak isospin and colour of the fermion , where idferm = 1,2,3,4 denotes : neutrino , lepton , up , down quark ; negative idferm=-1,-2,-3,-4 , denotes the corresponding antiparticle ; ihelic = + 1 , @xmath5311 denotes right- and left - handedness ( chirality ) sizo3 is the third projection of weak isospin ( @xmath532 ) , charge is the electric charge ( in units of magnitude of the electron charge ) , kolor is the qcd colour , 1 for lepton , 3 for quarks . * double precision function bornv_sig0nb(cmsene ) provides the point - like muon cross section in nanobarns for the normalization purpose .",
    "communication subprograms ( setters and getters ) used by all other classes are the following :    * bornv_getparticle(kfferm , mass , qf , t3f , ncf ) ; for the fermion type integer kfferm provides its qcd colour integer ncf , mass , electric charge and weak isospin double precision mass , qf , t3f . * double precision function bornv_getmass(kfferm ) ; for the fermion type integer kfferm provides its mass .",
    "* double precision function bornv_getcharge(kfferm ) ; for the fermion type integer kfferm provides its electric charge .",
    "* integer function bornv_getcolor(kfferm ) ; for the fermion type integer kfferm provides its qcd colour . * double precision function bornv_getauxpar(kfferm ) ; for the fermion type integer kfferm it provides its auxiliary parameter . *",
    "bornv_setkeyelw(keyelw ) sets the ew switch keyelw . *",
    "bornv_getkeyelw(keyelw ) gets the ew switch keyelw . *",
    "bornv_getkeyzet(keyzet ) sets the @xmath15 boson switch keyzet . *",
    "bornv_setkeyzet(keyzet ) gets the @xmath15 boson switch keyzet . *",
    "bornv_setcmsene(cmsene ) sets the cms total energy cmsene . *",
    "bornv_setmz(mz ) sets the @xmath15 boson mass . *",
    "bornv_getmz(mz ) gets the @xmath15 boson mass . *",
    "bornv_getgammz(gammz ) gets the @xmath15 boson width . *",
    "bornv_getgmu(gmu ) gets the @xmath533 . *",
    "bornv_getswsq(swsq ) gets the electroweak mixing angle . *",
    "bornv_getalfinv(alfinv ) gets the @xmath534 . *",
    "bornv_getavmult(avmult ) provides the average isr multiplicity . *",
    "bornv_getyfskon(yfskon ) provides the finite part of the yfs form factor . used in * qed3*. * bornv_getyfs_ir(yfs_ir ) provides ir ( cut - off - dependent ) part of the isr yfs form factor .",
    "used in * qed3*. * bornv_getqcdcor(qcdcor ) provides the qcd correction factor , defined by dizet . *",
    "bornv_getvv(vv ) provides @xmath392=vv . * bornv_getvxx(vv , x1,x2 ) provides @xmath392=vv , @xmath535 x1,x2 . *",
    "bornv_getgsw(gsw ) provides the ew form factors gsw(k ) k=1, ... ,7 .",
    "it is used in * gps * and in bornv_dizet . note that bornv_interpogsw has to be called before , in order to interpolate properly . *",
    "bornv_setgsw(gsw ) . for special tests of pretabulation",
    "the values of ew form factors gsw(k ) k=1, ... ,7 can be set with this subprogram from outside .",
    "as was already described , the mc integral for beamstrahlung and isr has three components : @xmath536 , @xmath537 and @xmath538 ( @xmath539 is obtained by symmetrization ) .",
    "the corresponding three - fold branching method is managed by the class * mbrb*. the class bstra contains mainly the interface to the foam and vegas packages , which generate in each branch the corresponding subset of the variables @xmath540 .",
    "since foam makes look - up tables for the distribution to be generated , we need three copies of the foam , which are * foama , foamb , foamc*. similarly for vegas .",
    "there are only five subprograms in the * bstra * class :    * bstra_initialize(keygrid , xcrude ) initializes * foama , foamb , foamc * ( or * vegasa , vegasb , vegasc * ) and the * mbrb * for book - keeping in the three - fold branching",
    ". it also provides the primary integrated cross section used to establish the overall normalization in * karlud * and * kk2f*. * bstra_make(vv , x1 , x2 , mcwt ) randomly chooses one of the branches with the help of mbrb_genkf . *",
    "bstra_finalize(integ , errel ) is calculating the total cross section using the average provided by mbrb_mgetave .",
    "this is for control only . *",
    "bstra_getxcrude(xcrude ) provides the primary integrated cross section that enters the overall normalization . *",
    "bstra_getintegmc(integmc , errelmc ) provides the value of the primary integrated cross section from the entire mc run .",
    "this is for control only .",
    "the circe library of the beamsstrahlung structure functions @xcite is placed in the * irc * module .",
    "the only changes are : adding prefix irc _ to names of all subprograms and the common block /circom/ is renamed as /c_irc/.",
    "it is exploited in the * bstra * class .",
    "the class * bvr * is a collection of the complex functions used in the calculation of the virtual corrections .",
    "it provides also the @xmath461 function necessary to calculate the compensating weight in the procedure of the removal of the fsr photons , see subsection [ sec : hiding ] .",
    "it has its own library of complex logarithms and dilogarithms .",
    "the eex differential distributions is implemented in the * qed3 * module .",
    "this module is rather monolithic .",
    "it contains the initializer qed3_initialize , the maker qed3_make and several small functions for calculating virtual corrections and up to third - order leading - logarighmic structure functions .",
    "the basic ingredient in the eex differential distributions is the born differential distribution that comes from the * bornv * class .",
    "the ceex matrix element is programmed in the * gps * class .",
    "it calculates spin amplitudes for the @xmath541 process .",
    "it has grown to a very large module ( almost 5000 lines of code ) and will therefore be split in the next version into a low - level library of gps tools and the module * ceex * , which calculates solely the ceex spin amplitudes .    the main subprogram in the * gps * class is gps_make , which calculates @xmath59 ceex spin amplitudes m_ampexpo0(4,4,4,4 ) , m_ampexpo1(4,4,4,4 ) , m_ampexpo2(4,4,4,4 ) of the double complex type .",
    "photon helicities are generated randomly in the upper class * kk2f * and provided with the getter kk2f_getphel .",
    "virtual corrections are provided by subprograms from the * bvir * class .",
    "masses , charges , isospin of the particles are provided by the getters of the * bornv * class and the electroweak form factor come from dizet 6.21 through the interface subprogram bornv_getgsw .",
    "the three model weights , @xmath59 , are calculated in gps_make using gps_makerho for polarized beams and _ unpolarized _ final fermions .",
    "subprogram gps_makerho2 is calculating model weights for polarized beams and _ polarized _ final fermions .",
    "it is used by taupair_imprintspin to implement spin effects in @xmath2 decays .",
    "let us now list and explain three groups of subprograms in the * gps * class , ( a ) the main subprograms calculating the spin amplitudes , ( b ) the library of basic tools and ( c ) the communication subprograms ( setters and getters ) .",
    "the first group includes :    * gps_initialize initializes of the class .",
    "it sets some coupling constants , pauli matrices , the axial gauge vector @xmath542 .",
    "* gps_make is the main routine that calculates spin amplitudes m_ampexpo0 , m_ampexpo1 and m_ampexpo2 .",
    "spin amplitudes are calculated in such a way that they are first set to zero and then , in the sum over partitions , they are incremented by @xmath543 with the help of gps_bornplus , by @xmath544 with the help of gps_hiniplus and gps_hfinplus , and by @xmath545 with help of gps_hiiplus , gps_hffplus and gps_hifplus .",
    "three model weights are calculated using gps_makerho and set to m_wtset(i ) , i=1,2,3 ( or to m_wtset(i),i=51 , 52 , 53 if isr ",
    "fsr interference is switched off ) .",
    "the best weight is set as m_wtbest = m_wtset(3 ) ( or m_wtset(53 ) ) .",
    "weights are available through getter gps_getwtset , see below .",
    "* gps_makerho(exponorm ) calculates differential distributions ( normalized to lorentz - invariant phase space ) from spin amplitudes m_ampexpo@xmath513 , @xmath546 , for polarized beams and _ unpolarized _ final fermions .",
    "beam polarizations are set from outside with the help of gps_setpolbeams .",
    "* gps_makerho2(wt0,wt1,wt2 ) is used in taupair_imprintspin and it calculates the differential distributions ( normalized to lorentz - invariant phase space ) from spin amplitudes m_ampexpo@xmath513 , @xmath547 , for polarized beams and _ polarized _ final fermions .",
    "final - state polarimeter vectors are set from outside with the help of gps_sethvectors .",
    "* gps_bornplus calculates the spin amplitudes of @xmath543 .",
    "it is optimized for summation over partitions .",
    "virtual corrections ( boxes and vertices ) are included .",
    "* gps_born provides the born spin amplitudes used in the construction of the hard non - ir parts : in gps_hiniplus , gps_hfinplus and other subprograms .",
    "it is essentially a simplified clone of gps_bornplus .",
    "* gps_ewffact creates form factors for electro - weak corrections .",
    "they are in vector couplings ( multiplied by the correcting factors ) .",
    "because of the @xmath481 dependence of ww boxes , we had to introduce costhetd parameter .",
    "* gps_hiniplus calculates the ir - finite part of 1-photon amplitudes for isr @xmath548 .",
    "( it is equivalent to a testing subprogram gps_hini ) . * gps_hfinplus calculates the ir - finite part of 1-photon amplitudes for fsr @xmath549 .",
    "( it is equivalent to a testing subprogram gps_hfin ) .",
    "* gps_hffplus calculates the ir - finite part of 2-photon amplitudes for fsr @xmath550 . *",
    "gps_hiiplus calculates the ir - finite part of 2-photon amplitudes for isr @xmath551 . *",
    "gps_hifplus calculates the ir - finite part of 2-photon amplitudes @xmath552 for one isr and one fsr photon .",
    "let us now list and explain the subprograms that play a role of the library of basic tools .",
    "( in the future version to be isolated as a separate class , or even several classes ) .",
    "this group includes :    * gps_partitionstart(nphot , last ) initializes the first partition in the sum over partitions . *",
    "gps_partitionplus updates the partition vector m_isr , checks if it is the last partition . *",
    "gps_bornzero(ampborn ) sets ampborn to zero .",
    "* gps_borncopy(ampborn , ampborn2 ) copies ampborn into ampborn2 . *",
    "gps_bornsumsq(ampborn , sum ) sums up ampborn amplitudes squared .",
    "* gps_tralorprepare prepares transformation for tralor , according to gps rules .",
    "the resulting lorentz transformation matrix is stored for multiple use .",
    "* gps_gps(xi , eta , rot ) defines the basis vectors @xmath553 from @xmath554 and @xmath354 according to gps rules .",
    "columns in the matrix rot are @xmath553 . this subprogram is called in gps_tralorprepare .",
    "* gps_tralordoit(id , pp , q ) transforms the four - vector pp from rest frame of fermion i d to lab , q is the result .",
    "it uses a lorentz transformation , prepared and memorized in the subprogram gps_tralorprepare , which has to be called first .",
    "this organization saves cpu time in the case of multiple calls for several @xmath2 decay products . *",
    "gps_tralorundo(id , pp , q ) is the inverse of gps_tralordoit .",
    "it transforms pp from the laboratory to the rest frame of the final fermion , q is the result .",
    "it uses a lorentz transformation , prepared and memorized in the subprogram gps_tralorprepare , which has to be called first . *",
    "gps_trajacobwick(mode , qq , pp , rr ) is for tests only .",
    "it is a tralor - type transformation for the classical jacob",
    " wick quantization axes",
    ". not optimized .",
    "* gps_rmatmake is for tests only .",
    "it translates born spin amplitudes into a double - spin density matrix m_ampborn @xmath555 @xmath556 * gps_makeu(ph , sigma , p1,m1,p2,m2,u ) builds the transition matrix @xmath557 , ( @xmath558 ) . *",
    "gps_makev(ph , sigma , p1,m1,p2,m2,v ) builds the transition matrix @xmath559 , ( @xmath560 ) .",
    "* gps_makeub(ph , sigma , p1,m1,p2,m2,u ) builds the transition matrix @xmath557 , ( @xmath558 ) . * gps_makevb(ph , sigma , p1,m1,p2,m2,v ) builds the transition matrix @xmath559 , ( @xmath560 ) .",
    "* gps_matru(cfact , ph , sigma , p1,m1,p2,m2,u ) builds the transition matrix @xmath557 , ( @xmath558 ) .",
    "* gps_matrv(cfact , ph , sigma , p1,m1,p2,m2,v ) builds the transition matrix @xmath559 , ( @xmath560 ) .",
    "* gps_matrub(cfact , ph , sigma , p1,m1,p2,m2,u ) builds the transition matrix @xmath557 , ( @xmath558 ) .",
    "* gps_matrvb(cfact , ph , sigma , p1,m1,p2,m2,v ) builds the transition matrix @xmath559 , ( @xmath560 ) . * double complex function gps_sof1(sigma , ph , pf )",
    "calculates the single soft photon contribution to the @xmath129-factor . *",
    "double complex function gps_sof1b(sigma , ph , pf , mf ) calculates the single soft photon contribution to the @xmath129-factor . *",
    "double complex function gps_soft(sigma , ph , p1,p2 ) calculates the two - fermion @xmath129-factor . *",
    "double complex function gps_bfact(sigma , phot , pferm ) calculates the diagonal element of the @xmath557-matrix for the massive fermion ( the numerator in the @xmath129-factor ) . * double complex function gps_softb(sigma , ph , p1,m1,p2,m2 )",
    "calculates the @xmath129-factor . *",
    "double complex function gps_bfacb(sigma , phot , pferm , mass ) calculates the diagonal element of the @xmath557-matrix for massive fermion ( the numerator in the @xmath129-factor ) . * double complex function gps_iprod1(l , p , q ) calculates the basic inner product of spinors @xmath561 .",
    "we exploit the identity @xmath562^*$ ] . *",
    "double complex function gps_iprod2(lamp , p , mp , lamq , q , mq ) calculates the general spinor product @xmath563 for massive spinors @xmath564 and/or @xmath392 ; mp and mq are the masses of four - vectors p and q. negative mass means an antiparticle .",
    "* double precision function gps_xiprod(p , q ) is the auxiliary function called in gps_iprod2 .",
    "the last group includes communication subprograms ( setters and getters ) and some miscellaneous routines for debugging :    * gps_bprint(nout , word , ampborn ) prints 16 spin amplitudes of ampborn in a nice format on output unit nout . *",
    "gps_getxi(xi , eta ) provides @xmath554 , the basic light - like vector in the laboratory frame , entering the definition of all spinors ( called @xmath565 in kleiss  stirling papers ) . *",
    "gps_setkeyarb(keyarb ) gps_getkeyarb(keyarb ) sets keyarb , which is switching on / off the use of m_b , keyarb=0 means @xmath566 . *",
    "gps_setb1 gps_setb2 switches the axial gauge vector @xmath542=b to another predefined value .",
    "this is for testing the gauge invariance of the spin amplitudes .",
    "* gps_getwtset(wtbest , wtset ) provides a complete list of weights . *",
    "gps_setkeyint(keyint ) sets the ifi switch keyint * gps_setpolbeams(polbeam1,polbeam2 ) sets the beam polarization vectors .",
    "one should not forget the wigner rotation to the gps frame !",
    "* gps_sethvectors(hvecfer1,hvecfer2 ) sets the final - fermion polarimeter vectors .",
    "tauola and photos are placed in kk - all / tauola and kk - all / photos .",
    "they communicate with the rest of the program through an interface class * taupair * located in kk - all / kk2f .",
    "the initialization is performed in the * tauface * class as well .",
    "the other , very important role of * taupair * is to implement spin effects in the decays of both @xmath2 s , including all spin correlations with the rejection method according to the special spin weght ; as in koralb  @xcite .",
    "the spin weight is : @xmath567^\\star          \\sigma^l_{\\bar{\\lambda}_c \\lambda_c }    \\sigma^m_{\\bar{\\lambda}_d \\lambda_d }          \\hat{h}^l_3                              \\hat{h}^m_4         \\over          \\sum\\limits_{\\sigma_r,\\lambda_a}\\ ;          \\sum\\limits_{i , j}\\ ;          \\left|          { \\mathfrak{m}}^{(r)}_n \\left(\\st^{p}_{\\lambda } \\st^{k_1}_{\\sigma_1 } \\st^{k_2}_{\\sigma_2 }                                                               \\dots \\st^{k_n}_{\\sigma_n } \\right )          \\right|^2         } .",
    "\\end{split}\\ ] ] note that in the present version of the program we include at this step not only the final - state spin effects but also beam - polarization effects .",
    "this is not a very economical solution , especially for strongly polarized beams , when we may get large rejection rates ( roughly equal to the ratio of polarized to unpolarized born cross section ) .",
    "the radical solution of this problem is to introduce longitudinal polarizations in the born cross section as used in the _ crude _ and _ primary _ integrated cross section . at the moment they are completely unpolarized .    in order to save cpu time a special method of `` recycling '' the @xmath2 decay events",
    "is devised ( see below ) .",
    "the interface supplies also the subroutine tralo4 , which is required by tauola in order to transform @xmath2 decay products to the laboratory frame .",
    "some additional subroutines , necessary for the proper functioning of tauola and photos , are placed in kk - all / kk2f / tauface.f .    *",
    "taupair_initialize(xpar ) initializes tauola and photos packages with the help of inimas , initdk , iniphy and dekay .",
    "it initializes the book - keeping for the spin weight , that is the weight used to introduce all spin effects in @xmath2 decays .",
    "* taupair_finalize prints the average spin weight . *",
    "taupair_make1 generates in the first step the unpolarized @xmath2 decays using dekay .",
    "the polarimeter vectors m_hvectau1 and m_hvectau2 are determined .",
    "* taupair_imprintspin introduces spin effects with the help of rejection using spin weight .",
    "the polarimeter vectors are sent to * gps * with the help of gps_sethvectors and the spin weight is calculated with the help of gps_makerho2 ; the event is then rejected or accepted .",
    "for the rejected event the @xmath2-pair event is `` recycled '' , that is each @xmath2 decay product is euler - rotated and reused in the rejection method .",
    "the procedure is repeated until the event is accepted .",
    "the whole procedure is correct because we know exactly the average of the spin weight .",
    "* taupair_make2 transforms accepted @xmath2 decay products to the cms by calling dekay(11 ) and dekay(12 ) .",
    "the transformation is defined according to the gps rules , for each @xmath2 by gps_tralorprepare , and is performed with the help of gps_tralordoit hidden inside the tralo4 routine .",
    "* taupair_clone performs the `` recycling '' of a @xmath2-pair by means of the euler rotation in the rest frame of each @xmath2 . *",
    "tralo4(kto , p , q , am ) , see above .",
    "* filhep(n , ist , id , jmo1,jmo2,jda1,jda2,p4,pinv , phflag ) writes single particles in @xmath2-decay into hepevt class . for historical reasons _",
    "hepevt_fil1 _ is not used directly . *",
    "taupair_setkeyclone(keyclone ) sets keyclone .",
    "keyclone switches between two operational modes of taupair_clone .",
    "both of the modes implement a valid solution . *",
    "taupair_getisinitialized(isinitialized ) gets to know the outside world if tauola is active ( isinitialized=1 ) . *",
    "taupair_gethvectors(hvecfer1,hvecfer2 ) provides the polarimetric @xmath568-vectors .",
    "the library of electroweak ( ew ) corrections is placed in the kk - all / dizet subdirectory . in the initialization phase the ew form factors dependent on @xmath162 , fermion type and some of them ( electroweak boxes ) also on the scattering angles , are placed in the look - up tables . during the event generation they are interpolated in @xmath162 and @xmath481 and provided to the * gps * module , where the ceex spin amplitudes are calculated , or used in the bornv_dizet being used ( through bornv_differential ) in the * qed3 * , where the eex distributions are calculated .",
    "the main aim of the above organization it to speed up the mc by using the ew form factor from look - up tables instead of calculating them , in fact many times , for each mc event .",
    "this reason may be even more important in the future version of the ew corrections which will be slower , owing to the inclusion of more genuine two - loop corrections .",
    "there are two modes of the initialization of the ew look - up tables . in the default mode",
    "they are calculated and stored in several disk files , each for one fermion type , and in the initialization of the  mc run these tables are read by the * bornv * module .",
    "this mode is more conservative ( safer ) , because the fortran77 program providing electroweak corrections does not need to be linked and executed together with the proper mc event generator .",
    "we do not therefore need to worry about the clashes of the names of the procedures and common blocks , and the possible problems with re - initialization of the ew library for different types of the fermions is avoided . ] . in the actual implementation the ew library dizet is run separately , under a special main program kk - all / dizet / tabmain.f , together with an interface module * dzface * , which acts as an interface to the dizet library , properly setting the input data to dizet and writing the ew form factors in the disk file",
    ".    one important disadvantage of the above method is that the input parameters of the ew corrections , such as the higgs mass , can not be changed easily ( for fitting ) , because it requires re - producing new look - up tables of the ew corrections .",
    "this is why we also implemented the second interface to ew library dizet in which the look - up tables are calculated in the initialization phase of the mc run ( in this case the ew library is linked with the entire mc program ) .",
    "how are the ew tables produced in the default method ?",
    "this is done by invoking in the kk - all / dizet/ one of the commands :    ....     make tables         # it makes all tables     make table.mu       # it makes ./table.mu      using ./input.mu     make table.tau      # it makes ./table.tau     using ./input.tau     make table.down     # it makes ./table.down    using ./input.down     make table.up       # it makes ./table.up      using ./input.up     make table.botom    # it makes ./table.botom   using ./input.botom ....    the input data should be used the same as in the mc run . in fact , the * bornv * module is checking if the important ew input data used to generate tables match the actual data provided by the user for the mc run . if not then the program stops .",
    "how does one avoid producing ew tables on the disk ( and apply the second method ) ?",
    "for the instructions see kk - all / ffbench / makefile .",
    "the interface * dzface * to dizet of the dubna ",
    "zeuthen ewrc group version 6.21 is based on the analogous interface in koralz 4.x .",
    "let us now list and explain the subprograms in the interface module * dzface *    * dzface_initialize ( kffin , xpar ) is the class initializer .",
    "initialization of dizet is done with call dizet(npar , ... ) .",
    "npar and other input parameters are defined in the xpar vector , see table [ tab : kk - input3 ] .",
    "* dzface_readatax(diskfile , ireset , imax , xpar ) is functionally the same as + kk2f_readatax .",
    "* dzface_tabluj fills in the ew form factors into look - up tables in /c_bornv/. the factors are provided by dzface_makegsw ( see below ) .",
    "tabulation is done in the three ranges of @xmath527 with different numbers of points .",
    "the energy ranges and numbers of points are defined in bornv.h .",
    "* dzface_writefile(diskfile ) writes tables of the ew form factors into a disk file . *",
    "dzface_clone(kffin ) copies tables calculated for the actual m_kffin into tables for kffin .",
    "it is used to create tables for @xmath16 and @xmath68 quarks using tables of @xmath564 and @xmath249 quarks ( saving a little bit of cpu time ) .",
    "* dzface_makegsw(mode , ww , cosi , gsw , qcdcorn ) gets the ew form - factors gsw and qcd corrections qcdcorn out of dizet , at @xmath569ww and @xmath570cosi .",
    "ew form - factors are obtained with the call rokanc ( ... ) , while qcd corrections come from dzface_qcdtab ( see below ) .",
    "* dzface_qcdtab(mode , ww , qcdcorn ) makes qcd corrections with the + call qcdcof ( ... ) .",
    "it is done in an iterative way in order to find out the qcd corrections at a given @xmath527 .",
    "note that the qed coupling constant the alfinv is separate from the alfinv used in the bremsstrahlung part of  and the fermion masses in dizet are isolated from those in .      the  program in the present version uses exclusively the ranmar random number generator  @xcite .",
    "it is reprogrammed as the pseudo - class * pseumar*. its single - precision generator is accessible with the help of the double - precision interface routine pseumar_makevec . in this way we avoid possible interference with libraries of jetset , photos and tauola , which have their own independent random - number generators , and",
    "typically also have their own version of the ranmar generator .",
    "every mc program of this size has to have its own tools for book - keeping of the mc weights and for making histograms of the weight distribution . in the  mc the built - in histogramming package * glk * plays this role .",
    "histogramming entries are similar to those of the cern library hbook . apart from histogramming",
    ", it also has the capability of `` measuring '' several properties of the mc weight .",
    "this weight monitoring is done with the entries glk_mbook , glk_mfill , glk_mgetall , glk_mgetntot , glk_mgetave and glk_mprint .",
    "the * glk * module features also simple , though versatile , graphical capabilities  it can plot histograms by exploiting the latexenvironment picture .",
    "the other auxiliary package is * mathlib.f * , which includes subprograms for gaussian integration and some transcendental functions .",
    "the  mc does not need any external mathematical library .",
    "( 1600,850 ) ( 600,600)(0,0)[b](a ) ( 1400,600)(0,0)[b](b ) ( -20 , 0)(0,0)[lb ] ( 800 , 0)(0,0)[lb ]",
    "in the complicated mc program aspiring to a precission of order @xmath571 , it is critical to master the overall normalization at this precision level .",
    "this can be done by comparing the program results with another mc program or with a semi - analytical calculation , that is the calculation in which as many integrations as possible are carried out analytically and the remaining ones are done with the gaussian method .",
    "such a test of mc normalization is of critical importance ",
    "this is why we call it a _",
    "normalization anchor_.    it is not trivial to analytically integrate the multiphoton phase space ; nevertheless , for simple or simplified exponentiated distributions such as eex and simple or absent kinematical cuts , such an integration is possible , see refs .  @xcite .    here ,",
    "since our aim is essentialy limited to the very precise numerical test of the mc phase - space integration , we have chosen the eex model , that is the born differential cross section multiplied by the soft factors , see eqs .",
    "( [ sigma - eex3 ] ) and ( [ eq : rho - eex3 ] ) .    in this case",
    "it is relatively easy to obtain by analytical integration the eex cross section , keeping terms @xmath572 , where @xmath573 is the big logarithm , for both isr and fsr . for the isr , however , due to the @xmath15 resonance , and @xmath574 peak at @xmath575",
    ", in order to reach the necessary precision of order @xmath571 , it is necessary to analytically calculate two additional terms of orders @xmath576 and @xmath577 .",
    "this was done in ref .",
    "@xcite , and the relevant semianalytical formula looks as follows : @xmath578 note that the coefficient in front of the term is zero , as marked explicitly . we have checked numerically that the isr term of is worth several per cent for the cross section located close to @xmath380 .    in fig .",
    "[ fig1 ] we present the comparison of the  mc with the above semianalytical formula .",
    "the difference between the mc result and the semianalytical result is divided by the semianalytical result .",
    "the comparison is done for the @xmath579 final state at @xmath580 gev , as a function of @xmath581 . in the last point ( bin ) the entire phase space is covered , @xmath582 .",
    "we conclude that we control the phase - space integration at the level of @xmath583 for @xmath584 , including the @xmath15 radiative return , and at the level of @xmath585 for no cuts at all .    .",
    "list of input parameters of the  generator .",
    "general and related to qed radiation input parameters .",
    "default values in brackets .",
    "user may change , with precautions , the starred items , while the doubly starred ones should never be changed . [",
    "cols=\"<,<\",options=\"header \" , ]      normally , the user will run the program in the mode with the weight equal to 1 . running in the mode with weighted events may be useful for various tests",
    ". it can be useful , for example as a cross check , in the situation when one selects output events strongly , that is imposes cuts that eliminate all but say 1 event in a 1000 .",
    "if at the same time it is seen from the output of kk2f_finalize that the cross section corresponding to @xmath586 is at the similar level of @xmath587 , it is then necessary to cross check if the accepted events do not coincide , by bad luck , with the `` overweighted '' events . if it were true , then the cross section and the distribution of the accepted events could be affected by factor of 2 or more . in that sense",
    "the weighted events are `` safer '' .",
    "it should be kept in mind that , although we have set the maximum weights for the rejection rather high , the user may try an untested configuration of the input data for which the cross section corresponding to @xmath586 is too high .",
    "we recommend that the user always check , at the end of the run , the output from kk2f_finalize , the table in which the percentage of the `` spill over '' cross section corresponding to @xmath586 is given .",
    "the other advantage of the weighted events is that in most cases one needs less cpu time to get the same statistical error in the cross sections and in the histogram",
    ". it can be profitable if one needs to perform many runs with various input parameters .    in the run with weighted events",
    "the user may access the principal weight wtmain and the auxiliary weights wtset through another getter :    ....     double precision     wtset(1000 ) , wtmain , wtcrud     call kk2f_getwtall(wtmain , wtcrud , wtset ) ....",
    "see also the ffbench / prodmc.f example .",
    "the actual auxiliary weight should be defined as wtcrud*wtset(i ) .",
    "note that events with wtcrud=0d0 may have undefined four - momenta , so the user should protect his program against crashing upon an attempt of working out the kinematics of such an event .",
    "the weights wtcrud and wtset are also defined in the run with wtmain=1d0 .",
    "they can be recorded and used in the subsequent run in order to estimate the effects that are included or excluded in the auxiliary weight wtset(i ) .",
    "the meaning of the most important weights in wtset is described in table  [ tab : wtset ] .",
    "how to get cross sections and distributions corresponding to wtset(i ) using an event generated with wtmain = 1 and recorded on the tape ?",
    "* the user should _ record on the tape _ the vector wtset for each event , together with wtcrud and wtmain . * in the subsequent run , to weight events from the tape , each event should be weighted with the ratio and quarks with @xmath588 where , for technical reasons we use wtmain = wtcrud*wtset(74 ) .",
    "this restriction is not important for most of practical purposes . ] wtset(i)/ wtset(203 ) , because in the standard case + wtmain = wtcrud*wtset(203 ) .",
    "a typical application of the above method could be to find out , for a given arbitrary distribution or cross section , the estimate of _ physical precision _ due to higher orders .",
    "we recommend that the user take half of the difference @xmath531 as an estimate of the physical precision .",
    "this can be calculated by applying the above method with the following weight : ( wtset(203)-wtset(202))*wtcrud / wtmain .",
    "the above method can not be used for varying the input parameters of the sm , such as the higgs mass , because this would require recalculating wtset .",
    "we may provide such a capability in the next versions .",
    "some additional information , useful for practical use of the program is collected as answers to `` frequently asked questions '' :    * _ how does one properly normalize total cross section ?",
    "_ look into two demonstration programs in @xmath589 subdirectory .",
    "* _ how does one update tables of electroweak corrections ? _ + ....       cd kk - all / dizet       make all ( or make table.tau etc . ) .... + for more details see section [ sec : ew - lib ] .",
    "* _ how does one switch on beamstrahlung ? _ include keyfix=2 and keygrid=2 in the user input data . an example program is included in @xmath589 subdirectory . *",
    "_ how does one switch off radiation for quarks ? _ include keyqsr=0 in the user input data .",
    "* _ how does one switch from ceex to eex for quarks ? _ include vmaxgps=0 for all quarks in the user input data .",
    "* _ how does one update compilation flags everywhere ? _",
    "compilation flags are set for aix .",
    "examples of f77 flags for hpux , linux , alpha are in ./ffbench / makefile . in order to update centraly makefiles in all subdirectories do the following : +",
    "....      cd ./ffbench       make makflag .... + this causes the mapping makefile.template @xmath590 makefile in all subdirectories , updating compilation flags everywhere with the ones from ./ffbench / makefile .",
    "* _ how does one calculate the qed physical error for a given observable ?",
    "_ calculate the difference between and and the difference between and .",
    "this can be done by running the mc with weighted events and taking the difference of the weights or with unweighted events , following instructions in the previous section . *",
    "_ how can one be sure about the technical precision ? _",
    "the problem may arise for strong selection cuts . in this case",
    "we advise the user to rerun the program with weighted events and check whether the results are the same .",
    "as is summarized in table  [ tab : kk - status ] , the present version of the  mc has almost the full functionality of the older koralz and koralb event generators .",
    "the most important new features in the present  are the isr - fsr interference , the second - order subleading corrections , and the exact matrix element for two hard photons .",
    "this makes  already a unique source of sm predictions for the lep2 physics program .",
    "the inclusion of the beamstrahlung makes it useful for the lc studies .",
    "note that for these the electroweak correction library has to be reexamined .",
    "the most important omission in the present version is the lack of neutrino and electron channels .",
    "let us stress that the present program is an excellent starting platform for the construction of the second - order bhabha mc generator based on ceex exponentiation .",
    "we hope to be able to include the bhabha and neutrino channels soon , possibly in the next version .",
    "the other important directions for the development are the inclusion of the exact matrix element for three hard photons , together with virtual corrections up to and the emission of the light fermion pairs .",
    "the inclusion of the @xmath591 and @xmath592 final states is still in a farther perspective .",
    "two of us ( sj and bflw ) would like to thank the cern ep and th divisions .",
    "we are grateful to all four lep collaborations and their members for support .",
    "in particular we would like to thank dr .",
    "d. schlatter of aleph for continuous support and help .",
    "one of us ( s.j . ) would like to thank the desy directorate for its generous support , and dr .",
    "f. dydak of cern ep division for his support in the critical stage of the beginning of this project .",
    "we would like to express our gratitude to w.  paczek , e.  richter - was , m.  skrzypek and s.  yost for valuable comments .",
    "....   = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =   = = = = = = = = = = = = demo for kk mc = = = = = = = = = = = = = = = = = =   1000   requested eventskk monte carlo                                   *   *             version        4.13           25 jan",
    ". 2000                      *   *      200.00000000                  cms energy average        cmsene      a1 *   *         .00000000                  beam energy spread        delene      a2 *   *               100                  max .",
    "photon mult .",
    "npmax       a3 *   *                 1                  isr switch                keyisr      a4 *   *                 1                  fsr switch                keyfsr      a5 *   *                 2                  isr / fsr interferenc       keyint      a6 *   *                 1                  new exponentiation        keygps      a7 *   *                 1                  hadroniz .",
    "switch         keyhad      a7 *   *         .20000000                  hadroniz .",
    "mass       hadmin      a9 *   *        1.00000000                  maximum weight            wtmax      a10 *   *               100                  max . photon mult .",
    "npmax      a11 *   *                11                  beam ident                kfini      a12 *   *         .00100000                  manimum phot .",
    "ener .",
    "ene        a13 *   *     .10000000e-59",
    "phot.mass , ir regul       maspho     a14 *   *     1.2500000                      phot .",
    "mult . enhanc .",
    "xenph      a15 *   *     .10000000e-08",
    "vcut1                     vcut1      a16 *   *     .50000000e-01",
    "vcut2                     vcut2      a16 *   *     .00000000e+00",
    "vcut3                     vcut2      a16 *   *         .00000000                     polbeam1(1 )            pol1x      a17 *   *         .00000000                     polbeam1(2 )            pol1y      a18 *   *         .00000000                     polbeam1(3 )            pol1z      a19 *   *         .00000000                     polbeam2(1 )            pol2x      a20 *   *         .00000000                     polbeam2(2 )            pol2y      a21 *   *         .00000000                     polbeam2(3 )            pol2z      a22 *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *             bornv   initializator                                          *   *       91.18700000                  z mass      [ gev ]          amz         a1 *   *      100.00000000                  higgs mass [ gev ]          amh         a2 *   *      175.00000000                  top mass    [ gev ]          amtop       a3 *   *        2.50072032                  z width     [ gev ]          gammz       a4 *   *         .22276773                  sin(theta_w)**2           sinw2       a5 *   *      137.03598950                  1/alfa_qed   at   q=0       alfinv      a6 *   *         .20000000                  masscut light qqbar       hadmin      a6",
    "*   *                11                  kf code of beam           kfini       a7 *   *     1.0000000                      input vvmax               vvmax       a8 *   *     .99999888                      reduced vvmax in mc       vvmax       a9 *   *          test switches :                                                   *   *                 1                  electroweak lib .",
    "keyelw      10 *   *                 1                  z on / off    switch         keyzet      11 *   *                 0                  mass terms on / off         keywtm      12 *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *          bornv   reading from disk file :                                   *   *         .. / ..",
    "/dizet / table.down.340pt                                      *   *       91.18700000                  z mass                    amz         a1 *   *      100.00000000                  higgs mass                amh         a2 *   *      175.00000000                  top mass                  amtop       a3 *   *         .22302485                  sin**2(thetaw )            swsq        a3 *   *        2.49925439                  z width                   gammz       a3 *   *       80.37787000                  w mass                    amw         a3 *   *        2.08825838                  w width                   gammw       a3 *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *          bornv   reading from disk file :                                   *   *         .. / .. /dizet / table.up.340pt                                        *   *       91.18700000                  z mass                    amz         a1 *   *      100.00000000                  higgs mass                amh         a2 *   *      175.00000000                  top mass                  amtop       a3 *   *         .22302485                  sin**2(thetaw )            swsq        a3 *   *        2.49925439                  z width                   gammz       a3 *   *       80.37787000                  w mass                    amw         a3 *   *        2.08825838                  w width                   gammw       a3 *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *          bornv   reading from disk file :                                   *   *         .. / .. /dizet / table.down.340pt                                      *   *       91.18700000                  z mass                    amz         a1 *   *      100.00000000                  higgs mass                amh         a2 *   *      175.00000000                  top mass                  amtop       a3 *   *         .22302485                  sin**2(thetaw )            swsq        a3 *   *        2.49925439                  z width                   gammz       a3 *   *       80.37787000                  w mass                    amw         a3 *   *        2.08825838                  w width                   gammw       a3 *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *          bornv   reading from disk file :                                   *   *         .. / ..",
    "/dizet / table.up.340pt                                        *   *       91.18700000                  z mass                    amz         a1 *   *      100.00000000                  higgs mass                amh         a2 *   *      175.00000000                  top mass                  amtop       a3 *   *         .22302485                  sin**2(thetaw )            swsq        a3 *   *        2.49925439                  z width                   gammz       a3 *   *       80.37787000                  w mass                    amw         a3 *   *        2.08825838                  w width                   gammw       a3 *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *          bornv   reading from disk file :                                   *   *         .. / ..",
    "/dizet / table.botom.340pt                                     *   *       91.18700000                  z mass                    amz         a1 *   *      100.00000000                  higgs mass                amh         a2 *   *      175.00000000                  top mass                  amtop       a3 *   *         .22302485                  sin**2(thetaw )            swsq        a3 *   *        2.49925439                  z width                   gammz       a3 *   *       80.37787000                  w mass                    amw         a3 *   *        2.08825838                  w width                   gammw       a3 *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *          bornv   reading from disk file :                                   *   *         .. / .. /dizet",
    "/ table.mu.340pt                                        *   *       91.18700000                  z mass                    amz         a1 *   *      100.00000000                  higgs mass                amh         a2 *   *      175.00000000                  top mass                  amtop       a3 *   *         .22302485                  sin**2(thetaw )            swsq        a3 *   *        2.49925439                  z width                   gammz       a3 *   *       80.37787000                  w mass                    amw         a3 *   *        2.08825838                  w width                   gammw       a3 *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *          bornv   reading from disk file :                                   *   *         .. / .. /dizet / table.tau.340pt                                       *   *       91.18700000                  z mass                    amz         a1 *   *      100.00000000                  higgs mass                amh         a2 *   *      175.00000000                  top mass                  amtop       a3 *   *         .22302485                  sin**2(thetaw )            swsq        a3 *   *        2.49925439                  z width                   gammz       a3 *   *       80.37787000                  w mass                    amw         a3 *   *        2.08825838                  w width                   gammw       a3 *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *                          karlud_initialize start                          *   *      200.00000000                   cms energy average       cmsene      = = *",
    "*         .00000000                   beam energy spread       delene      = = *   *                 1                   isr on / off switch        keyisr      = = *   *                 0                   type of isr              keyfix      = = *   *                 1                   elect_weak switch        keyzet      = = *   *                 0                   fixed nphot mult",
    ".        mltisr      = = *   *                50                   max .",
    "photon mult .",
    "nmax        = = *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *     4370.16701351                  xs_crude   vesko           xcvesk         *   *     4363.90727756                  xs_crude   gauss           xcgaus         *   *         .00143443                  xcvesk / xcgaus-1                         *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *                           karlud_initialize end                           *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *                         karfin initialize   start                          *   *                 1                 fsr radiation on / off       keyfsr      a1 *   *                 1                 radiation from quark       keyqsr      a2 *   *                 1                 removal     switch          keypia      a3 *   *     .10000000e-02                 infrared cut factor        delfac      a4 *   *     .10000000e-07                 infrared cut itself        delta       a5 *   *     .10000000e-02                 emincms for removal        [ gev ]       a6 *   *                50                 max . photon mult .          nmax        a7 *   *                         karfin initialize   end                            *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *              gps    initializator                                          *   *       91.18700000                  z mass      [ gev ]          mz          a1 *   *        2.49925439                  z width     [ gev ]          gammz       a2 *   *         .22302485                  sin(theta_w)**2           sw2         a3 *   *      137.03598950                  1/alfa_qed   at   q=0       alfinv      a4 *   *          test switches :                                                   *   *                 1                  z on / off    switch         keyzet      a5 *   *                 1                  electroweak lib .",
    "keyelw      a6 *   *                 1                  ceex level                keygps      a7 *   *                 1                  isr emission              keyisr      a8 *   *                 1                  fsr emission              keyfsr      a9 *   *                 2                  isr*fsr interferenc       keyint     a10 *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *                            kk2f : initialization                           *   *     9.4892226                      x - crude [ nb ]              xcrunb      * * *   *          list of final fermions :                                          *   *                 1                  kf of final fermion       kffin       * * *   *     .10000000                      mass of final ferm .",
    "amferm      * * *   *     1.3410294                      xborn [ r ]                 xborn       * * *   *     5.0000000                      wtmax sampling par .       wtmax       * * *   *     .99000000                      vmax for ceex            vmaxgps      * * *   *                 2                  kf of final fermion       kffin       * * *   *     .10000000                      mass of final ferm .       amferm      * * *   *     2.1445691                      xborn [ r ]                 xborn       * * *   *     5.0000000                      wtmax sampling par .       wtmax       * * *   *     .99000000                      vmax for ceex            vmaxgps      * * *   *                 3                  kf of final fermion       kffin       * * *   *     .20000000                      mass of final ferm .       amferm      * * *   *     1.3410294                      xborn [ r ]                 xborn       * * *   *     5.0000000                      wtmax sampling par .       wtmax       * * *   *     .99000000                      vmax for ceex            vmaxgps      * * *   *                 4                  kf of final fermion       kffin       * * *   *     1.3000000                      mass of final ferm .       amferm      * * *   *     2.1445691                      xborn [ r ]                 xborn       * * *   *     5.0000000                      wtmax sampling par .       wtmax       * * *   *     .99000000                      vmax for ceex            vmaxgps      * * *   *                 5                  kf of final fermion       kffin       * * *   *     4.5000000                      mass of final ferm .       amferm      * * *   *     1.3410294                      xborn [ r ]                 xborn       * * *   *     5.0000000                      wtmax sampling par .       wtmax       * * *   *     .99000000                      vmax for ceex            vmaxgps      * * *   *                13                  kf of final fermion       kffin       * * *   *     .10565830                      mass of final ferm .       amferm      * * *   *     1.2225177                      xborn [ r ]                 xborn       * * *   *     8.0000000                      wtmax sampling par .       wtmax       * * *   *     .99900000                      vmax for ceex            vmaxgps      * * *   *                15                  kf of final fermion       kffin       * * *   *     1.7770000                      mass of final ferm .       amferm      * * *   *     1.2225177                      xborn [ r ]                 xborn       * * *   *     8.0000000                      wtmax sampling par .       wtmax       * * *   *     1.0000000                      vmax for ceex            vmaxgps      * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *         kk interface of tauola                                            *   *                 2                 cloning procedure        keyclone     t01 *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *         parameters passed from kk   to tauola :                             *   *                 0                 dec .",
    "type 1-st tau         jak1       t01 *   *                 0                 dec .",
    "type 2-nd tau         jak2       t02 *   *                 1                 current type a1 dec .",
    "keya1      t03 *   *                15                 pdg i d 1-st tau            idff       t04 *   *                 1                 r.c .",
    "switch lept dec       itdkrc     t05 *   *     .10000000e-02                 ir - cut for lept r.c .",
    "xk0dec     t06 *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *     tauola initialization subroutine inimas :                              *   *     adopted to read from kk                                               *   *     1.7770000                         amtau tau - mass              * * * * * * * *   *     .51099900e-03                     amel   electron - mass         * * * * * * * *   *     .10565830                         ammu   muon - mass             * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * ............... skipped output from tauola ............... * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *                          * * * * * tauola library : version 2.6 * * * * * *          *   *                          * * * * * * * * * * * august    1995 * * * * * * * * * * * * * * *          *   *                          * * authors : s.jadach , z.was * * * * * * * * * * * * *          *   *                          * * r .",
    "decker , m. jezabek , j.h.kuehn * * * * *          *   *                          * * available from : wasm at cernvm * * * * * *          *   *                          * * * * * published in comp .",
    ". comm . * * *          *   *                          * * * * * * * cern - th-5856 september 1990 * * * * *          *   *                          * * * * * * * cern - th-6195 september 1991 * * * * *          *   *                          * * * * * * * cern th-6793 november   1992 * * * * *          *   *                          * * 5 or more pi dec . :",
    "precision limited           *   *                          * * * * dekay routine : initialization * * * * * *          *   *                    0      jak1    = decay mode tau+                         *   *                    0      jak2    = decay mode tau-                         *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *                              event listing ( summary )      i   particle / jet ks      kf orig     p_x       p_y       p_z        e         m      1   ! e- !          21      11     0      .000      .000   100.000   100.000      .001      2   ! e+ !          21     -11     0      .000      .000 -100.000   100.000      .001      3   ( tau- )        11      15     1   -11.368    -8.313   -16.590    21.834     1.777      4   ( tau+ )        11     -15     1    77.073    19.642    34.404",
    "86.677     1.777      5   gamma          1      22     1   -65.705   -11.329     6.665    67.007      .000      6   gamma          1      22     1     -.001      .000   -24.480    24.480      .000      7   gamma          1      22     2      .002      .001      .000      .002      .000      8   nu_tau         1      16     3     -.030     -.121     -.003      .125      .010      9   ( rho- )        11    -213     3   -11.338    -8.192   -16.587",
    "21.709      .690     10   pi-            1    -211     9    -6.338    -4.212    -9.177    11.922      .140     11   pi0            1     111     9    -5.000    -3.980    -7.410     9.787      .135     12   nu_tau~        1     -16     4    34.604     8.167    14.712    38.478      .010     13   pi+            1     211     4    42.469    11.475    19.692    48.199      .140                     sum :    .00           .000      .000      .000   200.000   200.000     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *                       karlud   final   report                               *   *             90875                   total no of events      nevtot       = = *   *     4370.16701351                   isrcru   [ r ]             isrcru       = = *   *     4363.65383283   + -   .28966439    isrbest [ r],isrerr      isrbest      = = *   *     4370.1670                       xkarlud [ r ]             xkarlud      = = *   *     .00000000e+00                   kerror   [ r ]             kerror       = = *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *                    report on wt_isr of karlud                             *   *             90875                  total no of events       nevtot       = = *   *                 0                  wt<0         events       nevneg       = = *   *         .01551546   + -   .00666845   < wt >                     wt_isr       = = *   *       67.80514951   + -   .45215550   sigma of karlud [ r ]      xskarl       = = *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *         .99850963   + -   .00006638   average wt of vesk1       avesk1      = = *   *     4363.90727756   + -   .04363907   xs_est gauss     [ r ]       xcgaus",
    "= = *   *        -.00005808   + -   .00006738   xcve / xcgs-1                          = = *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *                         karfin finalize     start                          *   *            180070                   generated events         nevgen      a2 *   *         .99710113   + -   .00017970    kinematics , smin         wt1         a5 *   *         .99980533   + -   .00002691    jacobian                 wt2         a6 *   *         .99929387   + -   .00061237    photon ang .",
    "dist .",
    "wt3         a7 *   *                             on mass weights                               *   *         .95525378   + -   .00052108   removal wgt wtrem                    b1 *   *             89774                  no . of raw events                    b2 *   *                 0                  wt6=0       events                    b3 *   *         .99957099   + -   .00051944   control wgt wctrl                    b4 *   *                 0                  marked photons            martot      a5 *   *     .10000000e-02                  emin                                 b6 *   *     .10000000e-07                  delta                                b7 *   *         .15689398                  raw ph .",
    "multipl .",
    "b8 *   *        6.00000000                  highest phot .",
    "mult .",
    "b9 *   *                         yfsfin finalize     end                            *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *                             karfin finalize                               *   *            180070                   generated events         nevgen      a2 *   *         .99634044   + -   .00064027    general weight           wt          a1 *   *         .15643916                   aver .",
    ". multi .",
    "avmlt       a3 *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *        -640           kk2f : photon raw multiplicity                                                                nent             sum            bmin            bmax             1000      .00000e+00      .00000e+00",
    ".33000e+03             undf            ovef            sumw            avex       .00000e+00      .00000e+00      .21210e+04      .28322e+01",
    ".0000     .600000d+02 0xxxxxxxxxxxx",
    "i    1.0000     .277000d+03 0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    "i    2.0000     .330000d+03 0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    3.0000     .196000d+03 0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                           i    4.0000     .990000d+02 0xxxxxxxxxxxxxxxxxxx                                               i    5.0000     .290000d+02 0xxxxx",
    "i    6.0000     .800000d+01 0x                                                                 i    7.0000     .100000d+01 0                                                                  i    8.0000     .000000d+00 0                                                                  i    9.0000     .000000d+00 0                                                                  i   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *                        kk2f_finalize   printouts                           *   *      200.00000000                  cms energy total          cmsene      a0 *   *              1000                  total no of events        nevgen      a1 *   *                * * principal info on x - section * *                          *   *       47.39210315   + -   .51653089   xs_tot mc r - units         xsmc        a1 *   *      102.90549867                  xs_tot     picob .          xsecpb      a3 *   *        1.12157650                  error      picob .",
    "xerrpb      a4 *   *         .01089909                  relative error            erel        a5 *   *        1.17765968                  wtsup , largest wt         wtsup      a10 *   *                        * * some auxiliary info * *                          *   *       23.35792938                  xs_born    picobarns        xborn     a11 *   *        2.12100000                  raw phot . multipl .",
    "= = = *   *        7.00000000                  highest phot .",
    "mult .",
    "= = = *   *                          end of kk2f   finalize                            *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * ........... skipping some lines ................   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *                 mbra : report on the main weight                           *   *             90875                  no of raw events          ntot        b1 *   *              1000                  accepted     events        nacc        b2 *   *                 0                  wt<0         events        nneg        b3 *   *                 1                  wt > wtmax     events        nove        b4 *   *        1.17765968                  wtsup , largest wt         wtsup       b5 *   *         .00000195                  < wt - wtmax >   overfl .",
    "avove       b6 *   *         .00000000                  < wt > for wt<0             avund       b7 *   *         .00018028                  avove/<wt>,wt > wtmax       roverf      b8 *   *         .00000000                  avund/<wt>,wt<0           runder      b9 *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =              mbra :     detailed statistics for all branches      = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =    kf      avewt      erela      wtsup       wt<0    wt > wmax        ntot        nacc    nneg    nove    nzer     1    .017100    .024298 .7062        .000000    .000000       10024         181       0       0      96     2    .005937    .026491 .6685        .000000    .000000       29851         184       0       0     343     3    .024082    .024922 .7078        .000000    .000000        6738         157       0       0      57     4    .034175    .026378 1.178        .000000    .001035        5022         149       0       1      53     5    .046847    .022320 .7777        .000000    .000000        3332         168       0       0      38    13    .002429    .036648 .8380        .000000    .000000       32573          91       0       0     474    15    .020322    .038018 .6182        .000000",
    ".000000        3335          70       0       0      40 all :    .010844    .010899 1.178        .000000    .000180       90875        1000       0       1    1101 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = ........... skipping some lines ................        -630           tau pair : wt1 , spin imprint weight                                                           nent             sum            bmin            bmax              281      .00000e+00      .00000e+00      .23000e+02",
    "undf            ovef            sumw            avex       .00000e+00      .00000e+00      .28107e+03      .13707e+01",
    ".0000     .900000d+01 0xxxxxxxxxxxxxxxxxxxxxxxxx                                         i     .1000     .120000d+02 0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                                i     .2000     .190000d+02 0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx            i     .3000     .110000d+02 0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                                   i     .4000     .900000d+01 0xxxxxxxxxxxxxxxxxxxxxxxxx",
    "i     .5000     .230000d+02 0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     .6000     .150000d+02 0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                       i     .7000     .140000d+02 0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                          i     .8000     .160000d+02 0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    "i     .9000     .230000d+02 0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    1.0000     .210000d+02 0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx      i    1.1000     .150000d+02 0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                       i    1.2000     .140000d+02 0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                          i    1.3000     .170000d+02 0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                  i    1.4000     .110000d+02 0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                                   i    1.5000     .100000d+02 0xxxxxxxxxxxxxxxxxxxxxxxxxxxx                                      i    1.6000     .600000d+01 0xxxxxxxxxxxxxxxxx                                                 i    1.7000     .100000d+02 0xxxxxxxxxxxxxxxxxxxxxxxxxxxx                                      i    1.8000     .300000d+01 0xxxxxxxx                                                          i    1.9000     .200000d+01 0xxxxx                                                             i    2.0000     .500000d+01 0xxxxxxxxxxxxxx                                                    i    2.1000     .700000d+01 0xxxxxxxxxxxxxxxxxxxx                                              i    2.2000     .100000d+01",
    "0xx                                                                i    2.3000     .100000d+01",
    "0xx                                                                i    2.4000     .100000d+01",
    "0xx                                                                i    2.5000     .000000d+00 0                                                                  i    2.6000     .100000d+01",
    "0xx                                                                i    2.7000     .300000d+01 0xxxxxxxx",
    "i    2.8000     .000000d+00 0                                                                  i    2.9000     .100000d+01",
    "0xx                                                                i    3.0000     .000000d+00 0                                                                  i    3.1000     .100000d+01",
    "0xx                                                                i    3.2000     .000000d+00 0",
    "i    3.3000     .000000d+00 0                                                                  i    3.4000     .000000d+00 0                                                                  i    3.5000     .000000d+00 0                                                                  i    3.6000     .000000d+00 0                                                                  i    3.7000     .000000d+00 0                                                                  i    3.8000     .000000d+00 0                                                                  i    3.9000     .000000d+00 0                                                                  i   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *                       tau pair finalize                                   *   *        1.00026167   + -   .03630240   spin imprint < wt1 >        wt1ave      a1 *   *        3.16386575                  maximum value wt1",
    "wt1max      a2 *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * ....        s. jadach , b.  f.  l. ward , and z. was , the monte carlo program koralz , for the lepton or quark pair production at lep / slc energies : from version 4.0 to version 4.04 , 1999 , hep - ph/9905205 , comput .",
    ", in print ."
  ],
  "abstract_text": [
    "<S> we present the monte carlo event generator  version 4.13 for precision predictions of the electroweak standard model for the process @xmath0 , @xmath1 , at centre - of - mass energies from @xmath2 lepton threshold to 1 tev , that is for lep , slc , future linear colliders , @xmath3-factories , etc . </S>",
    "<S> effects due to photon emission from initial beams and outgoing fermions are calculated in qed up to second order , including all interference effects , within coherent exclusive exponentiation ( ceex ) , which is based on yennie  frautschi  suura exponentiation . </S>",
    "<S> electroweak corrections are included in first order , with higher - order extensions , using the dizet 6.21 library . </S>",
    "<S> final - state quarks hadronize according to the parton shower model using jetset . </S>",
    "<S> beams can be polarized longitudinally and transversely . </S>",
    "<S> decay of the @xmath2 leptons is simulated using the tauola library , taking into account spin polarization effects as well . </S>",
    "<S> in particular the complete spin correlations density matrix of the initial - state beams and final state @xmath2 s is incorporated in an exact manner . </S>",
    "<S> effects due to beamstrahlung are simulated in a realistic way . </S>",
    "<S> the main improvements with respect to koralz are : ( a ) inclusion of the initial  </S>",
    "<S> final state qed interference , ( b ) inclusion of the exact matrix element for two photons , and ( c ) inclusion of the transverse spin correlations in @xmath2 decays ( as in koralb ) .     </S>",
    "<S> * desy-99 - 106 + cern - th/99 - 235 + uthep-99 - 08 - 01 *    * the precision monte carlo event generator @xmath4 *    * for two - fermion final states in @xmath5 collisions@xmath6 *    * s. jadach@xmath7 , * * b.f.l . ward@xmath8 * _ and _ * z. was@xmath9 *   +   + _ @xmath10institute of nuclear physics , ul . </S>",
    "<S> kawiory 26a , 30 - 055 cracow , poland , _ + _ @xmath11department of physics and astronomy , + the university of tennessee , knoxville , tn 37996 - 1200 , usa , _ + _ @xmath12slac , stanford university , stanford , ca 94309 , usa , _ </S>",
    "<S> + _ @xmath13cern , theory division , ch-1211 geneva 23 , switzerland , _ +    _ to appear in computer physics communications _    * work supported in part by polish government grants kbn 2p03b08414 , kbn 2p03b14715 , the us doe contracts de - fg05 - 91er40627 and de - ac03 - 76sf00515 , the maria skodowska - curie joint fund ii paa / doe-97 - 316 , and the polish  french collaboration within in2p3 through lapp annecy .     * </S>",
    "<S> desy-99 - 106 + cern - th/99 - 235 + uthep-99 - 08 - 01 + july 1999 *    * program summary *    _ title of the program : _ version 4.13 .    </S>",
    "<S> _ computer : _ + any computer with the fortran 77 compiler and the unix operating system    _ operating system : _ + unix , </S>",
    "<S> program was tested under aix 4.x , hp - ux 10.x and linux    _ programming language used : _ fortran 77 with popular extensions such as long names , etc .    _ high - speed storage required : _ </S>",
    "<S> @xmath14 10 mb    _ no . of cards in combined program and test deck : _ about 21,800 , without jetset , tauola and photos .    </S>",
    "<S> _ keywords : _ quantum electrodynamics ( qed ) , standard model , electroweak interactions , heavy boson @xmath15 , spin polarization , spin correlations , radiative corrections , initial - state radiation ( isr ) , final - state radiation ( fsr ) , qed interference , monte carlo ( mc ) simulation and generation , coherent exclusive exponentiation ( ceex ) , yennie  frautschi  suura ( yfs ) exponentiation , lep2 , linear collider , tesla .    _ </S>",
    "<S> nature of the physical problem : _ the fermion pair production is and will be used as an important data point for precise tests of the standard electroweak theory at lep and future linear colliders at higher energies . </S>",
    "<S> qed corrections to fermion pair production ( especially @xmath2 leptons ) at @xmath16-quark and @xmath17-quark factories has to be known to second order , including spin polarization effects . </S>",
    "<S> the standard model predictions at the per mille precision level , taking into account multiple emission of photons for realistic experimental acceptance , can _ only _ be obtained using a monte carlo event generator .    </S>",
    "<S> _ method of solution : _ the monte carlo methods are used to simulate most of the two - fermion final - state processes in @xmath5 collisions in the presence of multiphoton initial - state radiation . </S>",
    "<S> the latter is described in the framework of exclusive coherent exponentiation ( ceex ) based on yennie  frautschi  suura exclusive exponentiation ( yfs / eex ) . </S>",
    "<S> ceex treats correctly to infinite order not only infrared cancellations but also qed interferences and narrow resonances . </S>",
    "<S> the matrix element according to standard yfs exponentiation is also provided for tests . for quarks and @xmath2 leptons , </S>",
    "<S> the appropriate simulation of hadronization or decay is included . beam polarization and spin effects , </S>",
    "<S> both longitudinal and transverse , in tau decays are properly taken into account .    </S>",
    "<S> _ restrictions on the complexity of the problem : _ in the present version , electron ( bhabha ) , neutrino and top quark final states are not included ( they will be in a future version ) . </S>",
    "<S> additional fermion pair production is not included . </S>",
    "<S> third - order qed corrections in leading - logarithmic approximation are included only in the auxiliary yfs / eex matrix element ( which can be activated with the help of input parameters ) . </S>",
    "<S> electroweak corrections should not be trusted above the @xmath18-quark threshold . </S>",
    "<S> the total cross section for light quarks for @xmath19 gev requires an improvement using experimental data .    </S>",
    "<S> _ typical running time : _ on the ibm powerpc m43p240 installation ( 266 mhz , 65 cern units ) 4 sec per constant - weight event are needed . </S>",
    "<S> this result is for a _ </S>",
    "<S> default / recommended _ setting of the input parameters , with _ all _ hadronization / decay libraries switched on . </S>"
  ]
}
{
  "article_text": [
    "transmission security is often implemented at protocol layers higher than the physical one , by exploiting cryptographic techniques based on computation assumptions .",
    "these schemes rely on the existence of one or more cryptographic keys that must be known by legitimate users and protected from eavesdroppers . on the contrary , when security is implemented at the physical layer , all receivers are perfectly aware of the encoding and transmission procedures , without the need of any shared secret . in this case , security is only based on the differences between the channels experienced by authorized and unauthorized users . on the other hand , exploiting these asymmetries often requires knowledge of the channel , while this assumption is not required in traditional cryptography .",
    "therefore , physical layer security can be viewed as a substrate helping to reduce the complexity of cryptographic techniques at higher layers .",
    "starting from these premises , it is important to investigate which transmission techniques can be used for physical layer security and which of them are able to exploit even small differences between the channels of the authorized and unauthorized users .    for this purpose , we consider the well - known _ wire - tap channel _",
    "model @xcite , shown in fig .",
    "[ fig : wiretap ] , where a transmitter ( alice ) encodes a message vector ( @xmath0 ) into a codeword vector ( @xmath1 ) before transmitting it .",
    "alice s transmission is received by a legitimate receiver ( bob ) and an eavesdropper ( eve ) , and the channel that separates alice from bob is generally different from that between alice and eve .",
    "therefore , the vector received by bob ( @xmath2 ) is different from that gathered by eve ( @xmath3 ) .",
    "it follows that the two codeword vectors ( @xmath4 and @xmath5 ) that bob and eve obtain after decoding can also be different .",
    "if this occurs , after inverting the encoding map , bob and eve obtain two estimates of the message vector , noted by @xmath6 and @xmath7 , with @xmath8 , which is the basis for physical layer security .",
    "however , when eve s probability of error is small , she might be able to correct all errors in her observed codeword by exploiting her complete knowledge of the transmission technique , which is enough to break secrecy . therefore , it is important to avoid that this occurs by finding suitable transmission techniques .    ,",
    "width=340 ]    under an information theoretic viewpoint , the wire - tap channel can be described through the secrecy capacity , defined as the highest transmission rate at which bob can achieve arbitrarily small error probability , while the mutual information between @xmath0 and @xmath3 goes to zero as the blocklength goes to infinity . to take into account the effect of encoding",
    ", the equivocation rate at the eavesdropper , defined as the conditional entropy of the secret message , given eve s observation , can also be used as a measure of secrecy . despite the fact that both the secrecy capacity and equivocation rate provide important estimates of secrecy , when we adopt practical coding and modulation schemes , another valuable metric of security is the bit error rate ( ber ) @xcite .",
    "in fact , when eve experiences a ber of about @xmath9 and the errors are randomly distributed , she is not able to get enough information on the transmitted message . ensuring values of eve s ber close to @xmath9 is also useful for cryptographic techniques that work at higher layers and aim at reaching a prefixed level of computational security .",
    "the ber is also used as a security measure in estimating the _ security gap _ , which was first introduced by klinc et al .",
    "@xcite , and is defined as the quality ratio between bob s and eve s channels required to achieve a sufficient level of physical layer security , while ensuring that bob reliably receives the information . we suppose that bob s and eve s channels are corrupted by additive white gaussian noise ( awgn ) with different signal - to - noise ratio ( snr ) : @xmath10 is bob s channel energy per bit to noise power spectral density ratio , whereas @xmath11 is the same parameter for eve s channel .",
    "similarly , @xmath12 is bob s bit error probability and @xmath13 is that of eve s . following the approach in @xcite",
    ", we aim at achieving a given performance in terms of reliability and security , that is , @xmath14 and @xmath15 , where @xmath16 and @xmath17 are suitably fixed thresholds . under an information theoretical viewpoint ,",
    "achieving security does not require eve s error probability to be fixed . however , a high error probability for eve is a desirable feature for practical secure schemes .",
    "starting from the curve of bit error probability as a function , @xmath18 , of the snr , @xmath16 and @xmath17 can be expressed in terms of @xmath19 as follows : @xmath20 and the security gap is : @xmath21    according to its definition , it is important to keep the security gap as small as possible , so that the desired security level is achieved even with a small degradation of eve s channel with respect to that of bob s .",
    "it is evident that the security gap depends on the steepness of the curve @xmath22 : the steeper the slope is , the smaller will be the security gap .",
    "some previous works have been devoted to examine the transmission techniques that are able to reduce the security gap .",
    "a first requirement is to avoid systematic transmission , which would directly expose the secret information bits . in @xcite",
    ", this target has been achieved through punctured codes , by associating the secret information bits to punctured bits .",
    "thus , they are no longer transmitted over the channel and must be recovered by the receiver from the nonpunctured part of the codeword . in those papers ,",
    "the authors considered punctured low - density parity - check ( ldpc ) codes and proved that for a fixed rate , puncturing is able to guarantee a significant reduction in the security gap with respect to nonpunctured ( systematic ) transmission .",
    "the analysis in @xcite assumed that eve s channel is more noisy than bob s ; that is , a security gap greater than @xmath23 .",
    "when the security gap is @xmath23 , that is , eve s channel has the same quality as that of bob s , a sufficient level of security can still be achieved by introducing a hybrid automatic repeat - request ( harq ) protocol with authentication @xcite .",
    "although being effective in reducing the security gap , punctured codes result in higher power consumption with respect to nonpunctured transmission @xcite .",
    "this fact will also result from the comparison presented in section [ sec : five ] . to overcome such limit ,",
    "we have proposed an alternative solution exploiting nonsystematic transmission based on scrambling of the information bits @xcite .",
    "this technique is able to achieve a strong reduction in the security gap that becomes comparable with ( and even better than ) that obtained through puncturing .",
    "moreover , this result is achieved without increasing the transmitted power , because the frame error rate is unaffected by scrambling .",
    "we have also shown that the security gap can be further reduced by combining concatenation with scrambling @xcite . in this case , the information frames are grouped into blocks and scrambled / descrambled together , thus increasing the effect of scrambling .    in the present study , we have merged and extended the earlier works presented in @xcite and @xcite , aiming at providing a thorough analysis of nonsystematic coded transmission for the wire - tap channel .",
    "first , we have developed some theoretical tools that allow characterizing the ber performance of scrambled transmissions .",
    "based on these tools and numerical simulations , we have provided some examples of the estimation of the security gap for the cases of hard - decoded classical block codes such as bose - chaudhuri - hocquenghem ( bch ) codes , and modern soft - decoded block codes such as ldpc codes .",
    "this allows comparing systematic and nonsystematic transmission techniques under both reliability and security viewpoints , thus providing useful insights on the design of coded transmission schemes for these purposes .",
    "we have also considered the combined use of coding with scrambling , concatenation , and harq .",
    "we have fixed a set of code parameters and provided a wide set of performance assessments , thus extending the comparison among these techniques .",
    "in addition , we have estimated the complexity of systematic and nonsystematic transmission techniques , allowing evaluation of the tradeoff between performance and complexity .",
    "we have also extended the analysis to the case in which eve s channel has a better quality than that of bob s , and we have shown that by using harq in conjunction with concatenated scrambling , a sufficient level of security can still be achieved .",
    "finally , we have introduced the equivocation rate as a security measure in this context to confirm that practical scrambled ldpc codes can outperform solutions based on puncturing and achieve secrecy performance very close to the theoretical bounds .",
    "the rest of the paper is organized as follows . in section [ sec : two ] , we have introduced the notation and described the system that exploits coding with scrambling ; in section [ sec : three ] , we have studied the effect of scrambled transmission with different families of linear block codes ; in section [ sec : arq ] , we have investigated the effect of harq protocols on coded transmission with scrambling ; in section [ sec : secrecy ] , the equivocation rates achievable by scrambled codes have been evaluated ; and finally , in section [ sec : six ] , conclusion is presented .",
    "in the considered awgn wire - tap channel model , alice sends a secret message in the form of a @xmath24 binary vector @xmath0 . before transmission ,",
    "the secret message is encoded by alice into a @xmath25 binary codeword @xmath1 , with @xmath26 , which is then transmitted over the channel .",
    "the _ secrecy rate _",
    "@xmath27 is defined as the ratio between the secret message length and the transmitted codeword length ; that is , @xmath28 .",
    "in fact , alice could use a code with dimension @xmath29 and rate @xmath30 by padding her secret message with @xmath31 nonsecret information bits , before encoding it . in the following ,",
    "however , we will limit to consider @xmath32 , so that @xmath33 .",
    "this is because , as shown in @xcite , choosing @xmath34 could help to reduce the security gap , but also gives some loss in terms of snr .",
    "therefore , as the need to save power is of primary importance in most of the applications , the choice @xmath33 is preferred . according to the wire - tap channel model shown in fig .",
    "[ fig : wiretap ] , we denote the codewords decoded by bob and eve as @xmath4 and @xmath5 , respectively . some remarks concerning the decoding strategies are useful . under a cryptographic viewpoint",
    ", the assumption that an attacker uses the optimal decoder is required to estimate the minimum security level of the system . in the case of ldpc codes , this can be done through asymptotic analyses , possibly based on density evolution @xcite , which accurately describes the performance of belief propagation decoders on arbitrarily long codes . moreover ,",
    "the belief propagation decoder is asymptotically equal to the bitwise maximum a posteriori probability ( map ) decoder .",
    "thus , the results of density evolution can be referred to the use of a bitwise map decoder .",
    "obviously , for finite - length codes , the use of belief propagation , though being the best - known ldpc decoding algorithm with acceptable complexity , must be considered as a suboptimal choice .    however , the use of suboptimal decoders is a further step in the research , especially with the purpose of assessing the security and performance of practical transmission schemes .",
    "therefore , we make some precise assumptions on the decoder used by the eavesdropper .",
    "when dealing with bch codes , we suppose that eve uses a bounded - distance hard - decision decoding algorithm , such as the berlekamp - massey decoder @xcite . when working with ldpc codes , we suppose that eve uses the sum - product algorithm ( spa ) with log - likelihood ratios ( llr ) @xcite . in section [ sec : secrecy ] , we have estimated the performance of ldpc codes through density evolution , thus modeling a bitwise map decoder . throughout the paper ,",
    "we have considered that bob uses the same decoding technique as eve .",
    "in fact , it is not necessary to consider that eve s decoder is better than bob s to make a comparison among different transmission techniques . in the scheme that we have considered , alice implements encoding as follows : @xmath35 where @xmath36 is the @xmath37 generator matrix of an @xmath38-linear block code in systematic form and @xmath39 is a nonsingular @xmath40 binary scrambling matrix .",
    "owing to its systematic form , @xmath36 can also be written as @xmath41 $ ] , where @xmath42 is a @xmath40 identity matrix and @xmath43 is a @xmath44 matrix representing the parity - check constraints .",
    "thus , encoding simply consists of replacing the information vector @xmath0 with its scrambled version @xmath45 , and then applying the linear block code given by @xmath36 . according to the physical layer security principle , both @xmath39 and @xmath36",
    "are made public and both of them are necessary for decoding : the knowledge of the code ( through @xmath36 or , equivalently , the parity - check matrix @xmath46 ) is necessary to exploit its error correcting capability , while @xmath39 ( in fact , its inverse ) must be used for descrambling @xmath47 into @xmath0 .",
    "therefore , both @xmath36 and @xmath39 are known to bob and eve , and the security of the system does not rely on any secret information .",
    "based on the above - mentioned assumptions , the encoded codeword can also be written as @xmath48 = \\left[\\mathbf{c}_l | \\mathbf{c}_r \\right]$ ] , where @xmath49 is the vector containing the first @xmath50 bits of @xmath1 , while @xmath51 collects its last @xmath52 bits .",
    "obviously , both bob s and eve s channels introduce errors . however , as mentioned earlier , @xmath10 should be large enough to ensure that bob s decoder is able to correct all errors with very high probability , thus recovering @xmath53 .",
    "on the contrary , @xmath11 should be small enough to ensure that the codeword obtained by eve after decoding is still affected by an error vector @xmath54 $ ] . in this case",
    ", eve gets : @xmath55 therefore , owing to multiplication by @xmath56 , descrambling can propagate the residual errors .    to estimate the performance achievable by scrambled transmissions",
    ", we can refer to the ideal case that we denote as _ perfect scrambling _ , in which even one residual channel error produces maximum uncertainty .",
    "in other terms , under the hypothesis of perfect scrambling , a single residual bit error in vector @xmath57 is sufficient to ensure that half of the information bits are in error after descrambling and that the error positions are randomly distributed .",
    "perfect scrambling is an expression of the _ strict avalanche effect _ , which is one of the most desirable properties of cryptographic algorithms .",
    "good avalanche features are important to ensure that an algorithm is not susceptible to statistical attacks and ensure randomness of the ciphertext @xcite . in practice , perfect scrambling can be approached by using a matrix @xmath56 with a high density of ones .",
    "the best scrambling effect is obtained when the density of @xmath56 is @xmath9 , but a lower density of @xmath56 can suffice to approach perfect scrambling , as shown next",
    ".    the propagation effect of scrambling matrices on residual errors can be further increased by implementing the scrambling and descrambling operations on blocks of frames , rather than on single frames .",
    "let us consider collecting @xmath58 consecutive information frames in a vector @xmath59 $ ] .",
    "scrambling can be directly applied on the whole @xmath58-frame block as : @xmath60 where @xmath61 is a scrambling matrix with size @xmath62 ; thus , @xmath63 is a scrambled version of the @xmath58-frame block @xmath64 . after scrambling",
    ", vector @xmath63 is divided into @xmath65 subvectors @xmath66 $ ] , that are encoded and transmitted separately .",
    "both bob and eve must collect their received frames into blocks of @xmath58 frames before applying the block descrambling matrix @xmath67 .",
    "therefore , after descrambling , eve gets a block of @xmath58 information frames @xmath68 , where @xmath69 is the vector formed by the concatenation of the error vectors affecting the @xmath58 information frames .    implementing scrambling and descrambling on blocks of @xmath58 frames ( with @xmath70 )",
    "increases the error propagation effect , because a single residual bit error in any of the @xmath58 frames can be spread over all of them .",
    "the concept of perfect scrambling can be extended as follows . under the perfect scrambling condition",
    ", a single bit error in one of the @xmath58 frames ensures that after descrambling : i ) all the @xmath58 frames are in error and ii ) half of the bits in each frame are in error and their positions are random .",
    "the perfect scrambling condition can also be approached for concatenated scrambling using practical system parameters , as will be shown in the following .",
    "we noticed that the increase in complexity due to concatenation is limited , because the code continues to work on single frames .",
    "the only effect is a latency increase that , however , can be taken under control through the choice of @xmath58 and @xmath50 .",
    "to assess the performance , we need an estimate of the bit error probability ( @xmath71 ) and frame error probability ( @xmath72 ) for bob and eve with and without scrambling . for such purpose , we first refer to an explicative case , denoted as `` unitary rate coding . '' in the absence of scrambling , we have a classical uncoded transmission ( i.e. , using a fictitious code with @xmath73 , the @xmath40 identity matrix ) . with scrambling , yields unitary rate encoding through matrix @xmath39 .",
    "after having analyzed the case of unitary rate coding , we will investigate the more realistic scenario of hard - decoded _",
    "t_-error correcting codes , such as bch codes .",
    "finally , we will consider ldpc coding as an example of state - of - the - art soft - based coding scheme , and compare the proposed approach with that based on puncturing .      under the assumption of using binary phase shift keying ( bpsk ) modulation , the bit and frame error probabilities",
    "are given by : @xmath74      when scrambling is performed on single frames , assuming a perfect scrambling condition , the bit error probability after descrambling equals half the frame error probability expressed by ; that is : @xmath75^k\\right\\}. \\\\ \\label{eq : unitaryperfectscrambling}\\ ] ] as perfect scrambling ensures eve s maximum uncertainty , it can be used as a bound on the security performance .",
    "however , for real scrambling matrices , the bit error probability for a unitary rate coded transmission can be estimated as follows .",
    "we denote the column weight of matrix @xmath56 by @xmath76 , which we consider as regular for simplicity .",
    "@xmath77 denotes the probability that a received @xmath50-bit vector contains @xmath78 errors before descrambling , whereas @xmath79 is the probability that exactly @xmath80 out of @xmath78 errors are selected by a weight @xmath81 column of @xmath56 .",
    "the bit error probability after descrambling can be expressed as : @xmath82 with @xmath83    as a numerical example , we consider @xmath84 ( this value of @xmath50 will also be of interest subsequently ) and compute the bit error probability for several values of @xmath81 . fig .",
    "[ fig : unitaryrate ] shows the dependence of @xmath85 on @xmath81 and the two limit cases of unscrambled transmission and perfect scrambling .    ) in the absence of scrambling , with perfect scrambling , and for different values of the descrambling matrix column weight ( @xmath81 ) .",
    "[ fig : unitaryrate],width=313 ]    as we observe from the figure , the unscrambled transmission gives low values of bit error probability even at a rather low snr . on the contrary ,",
    "scrambling is effective in keeping the bit error probability next to @xmath9 up to a rather high @xmath19 threshold ( in the order of @xmath86 db with perfect scrambling ) .",
    "in addition , scrambling helps to improve the slope of the @xmath71 curve , thus reducing the security gap .",
    "as expected , perfect scrambling provides the highest error probability",
    ". however , an @xmath56 matrix with density @xmath87 ( @xmath88 ) is able to approach the performance of the perfect scrambler .",
    "this confirms that it is not necessary to reach a matrix density equal to @xmath9 to approximate a perfect scrambler .",
    "a lower density of @xmath56 is important under the complexity viewpoint , because it is proportional to the number of operations needed by descrambling .",
    "let us consider the case in which scrambling is performed on @xmath58-frame blocks , rather than on single frames . in this case",
    ", the frame and bit error probabilities with perfect scrambling can be estimated as : @xmath89 where @xmath72 is given by .",
    "however , when real scrambling matrices are adopted , the bit error probability can be estimated starting from the bit error probability with single frame descrambling , expressed by .",
    "let us consider a @xmath62 block descrambling matrix formed by @xmath90 square blocks with size @xmath40 and row / column weight @xmath81 .",
    "in fact , such a descrambling matrix would be singular ; hence , in practice , it must have slightly irregular row and column weights . however , under the error probability viewpoint , this yields negligible deviations from the case of regular matrices , considered here for the sake of simplicity .",
    "after multiplication of each vector @xmath57 by a @xmath40 block , the probability that a bit is in error is still @xmath91 , given by .",
    "for the block descrambling matrix that we have considered , after block descrambling , each received bit can be seen as the sum of @xmath58 bits received after single frame descrambling .",
    "therefore , its error probability can be estimated as : @xmath92     with unitary rate coding ( @xmath84 ) and different levels of concatenation ( @xmath58 ) , under the hypothesis of perfect scrambling .",
    "[ fig : concperfscrambunitary],width=313 ]    to evaluate the effect of concatenated scrambling on the security gap , we again consider a unitary rate coded transmission with @xmath93 and fix @xmath94 .",
    "[ fig : concperfscrambunitary ] reports the values of @xmath95 , as a function of the security gap , for different values of @xmath58 .",
    "as we observe from the figure , the use of concatenated scrambling reduces the security gap needed to reach high values of @xmath95 with respect to the case without concatenation ( @xmath96 ) .",
    "obviously , in the case of unitary rate coding , the performance of concatenated scrambling over a block of @xmath58 frames , each with size @xmath50 , is exactly coincident with that of single frame scrambling with frame size @xmath97 .",
    "thus , in this illustrative case , increasing the number of concatenated frames or the frame size produces the same effect .",
    "however , as it will be shown in the next section , this is no longer valid when error correcting codes are used .",
    "a linear block code with rate @xmath98 can be used to increase the slope of the @xmath71 curves . in this subsection",
    ", we consider an @xmath38 code capable of correcting @xmath99 bit errors under hard - decision decoding , as it occurs for bch codes . as an example , in the following we will focus on the @xmath100 bch code , capable of correcting @xmath101 errors .",
    "when this kind of codes is used , the frame and bit error probabilities at the receiver can be estimated as follows @xcite : @xmath102 where @xmath103 is the channel bit error probability , taking into account the bandwidth expansion due to the code , that is : @xmath104      let us first consider the case of single frame scrambling . starting from ,",
    "the bit error probability with perfect scrambling is obtained as : @xmath105    however , when we consider real scrambling matrices , and can be used again , except for the following change in the expression of @xmath77 , due to the @xmath99-error correcting code with rate @xmath106 : @xmath107 in , @xmath108 is the probability that there are @xmath80 errors in a codeword and @xmath109 is the probability that exactly @xmath78 of such @xmath80 errors are within the @xmath50 information bits associated with that codeword .",
    "some examples are shown in fig .",
    "[ fig : terrorcorrecting ] , by considering different levels of scrambling .",
    "bch code in the absence of scrambling , with perfect scrambling , and for different values of the descrambling matrix column weight ( @xmath81 ) .",
    "[ fig : terrorcorrecting],width=313 ]    through a comparison with fig .",
    "[ fig : unitaryrate ] , we can observe that the code reduces the snr for a given bit error probability ( as expected ) and , most important for our purposes , increases the slope of the @xmath85 and @xmath110 curves . from fig .",
    "[ fig : terrorcorrecting ] , we can also note that , in this case , a descrambling matrix with @xmath111 ( density @xmath112 ) is sufficient to approach the effect of perfect scrambling .",
    "thus , when error correcting codes are used , reaching the performance of the perfect scrambler requires even less dense descrambling matrices with respect to the case with unitary rate coding ( for which a density @xmath113 was necessary ; see section [ subsec : unitaryrate ] ) .",
    "block - based scrambling can also be applied to transmissions adopting @xmath99-error correcting codes with hard - decision decoding .",
    "the effect of perfect scrambling on blocks of @xmath58 concatenated frames can be estimated by using again , in which , obviously , the @xmath72 values must be updated by using .",
    "the effect of real scrambling matrices working on @xmath58 concatenated frames can instead be evaluated by resorting again to . in this case , @xmath91 can still be estimated by using and , and changing the expression of @xmath77 as in to consider the @xmath99-error correcting code with rate @xmath106 .    ,",
    "when using the @xmath100 bch code with several levels of concatenated scrambling ( @xmath58 ) , under the hypothesis of perfect scrambling or with a descrambling matrix having column weight @xmath81 .",
    "the performance of a @xmath114 bch code is also reported ( with perfect scrambling and no concatenation ) .",
    "[ fig : terrorcorrecting_conc],width=313 ]    to evaluate the effect of concatenated scrambling on the security gap , we again consider the @xmath100 bch code and fix @xmath94 . fig .",
    "[ fig : terrorcorrecting_conc ] reports the values of @xmath95 , as a function of the security gap , for different values of @xmath58 .",
    "also in this case , concatenated scrambling reduces the gap needed to increase @xmath95 , with respect to the case without concatenation ( @xmath96 ) .",
    "we observed that the effect of a block descrambling matrix with row and column weight @xmath115 approaches that of the perfect scrambler for increasing @xmath58 .",
    "obviously , the convergence to perfect scrambling would also improve with the increasing @xmath81 .",
    "for the sake of comparison , fig .",
    "[ fig : terrorcorrecting_conc ] also includes the curve of a @xmath114 bch code , capable of correcting @xmath116 errors .",
    "this code has parameters that are about @xmath86 times those of the @xmath100 bch code , and different from the case of unitary rate coding , the increased length provides better performance than realizing concatenated scrambling ( even with @xmath117 ) over the shorter code .",
    "another example in this sense can be found in @xcite .",
    "this is expected , because adopting longer codes with higher error correction capability increases the slope of the ber curves , thus reducing the security gap .",
    "however , the use of longer codes also increases the decoding complexity to the point that the system may become impractical . on the contrary",
    ", the use of concatenated scrambling allows lowering the security gap , while still using short codes with small decoding complexity .",
    "in fact , increasing @xmath58 only affects the descrambling matrix size , and , in addition , the descrambling complexity can be kept low by limiting its density .",
    "for the sake of comparison , we consider an ldpc code having exactly the same parameters as the bch code studied in the previous section , that is , @xmath118 and @xmath119 .",
    "the secrecy rate is @xmath120 .",
    "the code has been designed through the progressive edge growth ( peg ) algorithm @xcite and has a lower triangular parity - check matrix . this matrix and those of other ldpc codes considered in our examples",
    "are available in @xcite .",
    "performance with perfect scrambling is shown in fig .",
    "[ fig : ldpc_conc ] that reports the values of @xmath95 versus the security gap , for @xmath94 and different values of @xmath58 .",
    "it can be verified that by using real scrambling matrices with a high density of ones in their inverse , the effect of block scrambling is almost coincident with that predicted through the perfect scrambler approximation .",
    "both the case of scrambling on single frames ( @xmath121 ) and on concatenated frames ( @xmath122 ) are considered .",
    "concatenated scrambling increases the slope of the bit error probability curve , thus reducing the security gap .",
    "also , in this case , starting from the @xmath72 values for single frame scrambling ( that are the same as for systematic transmission ) , the effect of a perfect scrambler on blocks of @xmath58 concatenated frames can be computed through . however , contrary to the case of bch codes , for a finite - length ldpc code , the values of @xmath72 must be estimated through numerical simulations .    ,",
    "when using a @xmath123 ldpc code and different levels of concatenation ( @xmath58 ) , under the hypothesis of perfect scrambling .",
    "[ fig : ldpc_conc],width=313 ]      in this section , we compare the security gap performance achieved by scrambled and punctured transmissions .",
    "the approach based on puncturing does not benefit from the use of concatenation ( unless an interleaved code is used together with arq @xcite ) .",
    "thus , for a fair comparison , we consider the case of single frame scrambling .    in @xcite , a comparison of this kind",
    "has already been presented for the case of @xmath124 and rather long codes .",
    "the examples of bch and ldpc codes discussed in the previous sections , instead , consider the case of @xmath125 and rather short codes ( i.e. , with @xmath126 ) . to find a punctured code with the same parameters",
    ", we should start from a mother code with length @xmath127 , dimension @xmath128 , and then puncture @xmath50 bits .",
    "however , for these parameters and high rate , our simulations show that it is too difficult to find a punctured ldpc code with good performance , even at very high snr , and a lower secrecy rate becomes necessary .",
    "therefore , we fix a secrecy rate @xmath129 for the puncturing - based system and use an ldpc code having @xmath130 , @xmath131 for such setting , in which all the information bits are punctured ( so that @xmath33 ) . in this way ,",
    "the number of secret bits is fixed , though with different @xmath27 .",
    "[ fig : ldpc ] shows the simulated performance .",
    "we can observe that the systematic transmission achieves the best performance in terms of error correction capability .",
    "however , it shows an important drawback concerning security , that is , a bit error probability @xmath132 even at low snr .",
    "ldpc code with systematic transmission and perfect scrambling , in comparison with a punctured @xmath133 ldpc code .",
    "[ fig : ldpc],width=313 ]    the approach based on puncturing gives worse error correcting performance , with a loss of about @xmath23 db in the waterfall region with respect to systematic ldpc coding ( despite the lower rate of the punctured code ) .",
    "however , the use of punctured bits for the secret message provides higher bit error probability for low snr . both such aspects benefit from the use of nonsystematic nonpunctured ldpc codes based on scrambling : in this case , the performance loss with respect to the systematic ldpc code is about @xmath134 db in the waterfall region .",
    "these facts also reflect on the security gap over the awgn wire - tap channel . as presented in the previous subsections , we fix @xmath135 and estimate @xmath17 as a function of the security gap @xmath136 .",
    "[ fig : bervsgap ] reports these curves for the considered transmission techniques . we assume perfect scrambling for all techniques using scrambling .",
    "the value of @xmath50 is fixed to @xmath137 , while the secrecy rate is @xmath138 for the scrambled codes and @xmath9 for the punctured code , as explained earlier .    ) for a ( @xmath84 ) unitary rate code , @xmath100 bch code , and @xmath100 ldpc code with perfect scrambling ( without concatenation ) , in comparison with a punctured @xmath133 ldpc code and a systematic @xmath100 ldpc coded transmission .",
    "[ fig : bervsgap],width=313 ]    as we can observe from the figure , the use of a systematic ldpc code gives a very slow convergence of eve s bit error probability to the ideal value of @xmath9 .",
    "therefore , such technique requires a very high security gap for realistic values of @xmath17 ( that are usually @xmath139 ) .",
    "the reason for such a slow convergence is systematic transmission : if we adopt a nonsystematic unitary rate code , even after renouncing any error correction capability , the performance is improved and @xmath140 is reached for a gap value of @xmath141 db .",
    "these results are improved by nonsystematic transmission with error correcting codes .",
    "if we implement nonsystematicity through puncturing , the condition @xmath140 is achieved with a gap of @xmath142 db . by using scrambled transmission , both the bch and ldpc code achieve very good performance .",
    "the condition @xmath140 is reached with a gap of @xmath143 and @xmath144 db by the scrambled bch and ldpc code , respectively , with a gain of about @xmath145 and @xmath146 db with respect to the approach based on puncturing .",
    "thus , the best performance is achieved by nonsystematic coded transmission through scrambling .",
    "such conclusion is even more evident if we consider that the performance of scrambled transmission can be further improved by concatenated scrambling , as shown in the previous sections .",
    "the same conclusion on the comparison with puncturing techniques can be drawn by using codes with different parameters @xcite ; thus , it does not depend on the cases considered here .      as we have seen in the previous sections ,",
    "nonsystematic transmission achieves better performance in terms of security , with respect to systematic transmission . in this section",
    ", we estimate the cost of such improvement in terms of complexity , for the case of ldpc coded transmissions , and show that the advantage of scrambled transmission over puncturing does not come at the cost of an increased complexity .",
    "let us denote the average number of binary operations for encoding as @xmath147 . by using the generator matrix @xmath36 , which is generally dense",
    ", a systematic code only requires computations for the redundancy part , that is , @xmath148 . when scrambling is considered , the generator matrix becomes @xmath149 ; hence , @xmath150 . in the case of puncturing , the generator matrix has a size @xmath151 and systematic form .",
    "however , puncturing coincides with eliminating the @xmath40 identity block from the generator matrix ; hence , we again obtain @xmath150 .",
    "when the codes have parity - check matrices in lower triangular form , similar to the peg codes considered earlier , some advantages result from performing encoding through back - substitution . in this case , the number of binary operations approximately coincides with the total number of ones in the matrix .",
    "this can be exploited by both puncturing and scrambling . in the latter case",
    ", we can adopt sparse scrambling matrices , though with dense inverses , and the encoding map carries out the following : i ) computation of @xmath152 through multiplication of @xmath0 by the sparse matrix @xmath39 and ii ) ldpc encoding of @xmath153 through back - substitution .    with regard to the decoding complexity",
    ", we consider the implementation of spa proposed in @xcite , according to which the number of binary operations per decoded codeword is @xmath154 $ ] . in this expression",
    ", @xmath155 is the average number of decoding iterations , @xmath156 is the number of quantization bits , and @xmath157 is the average degree of variable nodes in the code tanner graph . when the code is punctured , its length is @xmath158 , because the decoder works on the full code to recover the values of the punctured bits",
    ". finally , when scrambling is used , we must consider additional @xmath159 operations to obtain the decoding complexity ( @xmath160 ) , due to multiplication of the decoded information word by the inverse scrambling matrix .",
    "as we have verified through simulations , the spa decoder working on punctured codes requires a higher average number of iterations to converge with respect to the cases without puncturing .",
    "this partially counterbalances the operations necessary for descrambling .",
    ".complexity assessment for systematic , scrambled , and punctured ldpc codes at ber @xmath161 . [ cols=\"^,^,^,^\",options=\"header \" , ]     the reliability is assumed to be equal to @xmath162 , while the security threshold is @xmath163 , as in @xcite .",
    "table [ tab : equivocation ] shows that by requiring greater snr for bob s channel , when compared with the ldpc codes , the solutions based on bch codes exhibit significantly smaller equivocation rates .",
    "the value of @xmath164 increases , as expected , for increasing code lengths . in the case of regular ldpc codes of the type considered , the limit value ( for @xmath165 ) can be estimated by using density evolution @xcite , and results in @xmath166 .",
    "this value compares favorably with that reported in @xcite , where @xmath167 is obtained for a punctured irregular ldpc code .",
    "moreover , the results provided by the density evolution analysis can be referred to the use of a bitwise map decoder , which is an optimal choice for eve .",
    "the value of @xmath164 achievable by the code proposed in @xcite is @xmath168 @xcite .",
    "thus , we can conclude that scrambled and almost regular ldpc codes permit us to achieve secrecy performance that is similar to and even better than that obtained by optimized punctured irregular ldpc codes . by considering scrambled and irregular ldpc codes , further improvements can be achieved , because the irregular ldpc code with @xmath169 reaches @xmath170 , and the limit value resulting from density evolution for @xmath171 is @xmath172 , which is very close to the boundary of the capacity-(fractional ) equivocation region .",
    "the latter , for @xmath171 , results in @xmath173 .",
    "in this study , we have investigated the use of codes with scrambling , concatenation , and arq for physical layer security over the awgn wire - tap channel .",
    "we have provided some theoretical tools that help estimating the bit and frame error probabilities of scrambled transmissions . based on these tools and numerical simulations ,",
    "we have studied some examples of codes to assess the security performance of practical transmission schemes .",
    "our results show that nonsystematic transmission is capable of reducing the security gap in terms of snr that is needed between bob s and eve s awgn channels to achieve physical layer security .",
    "we have compared nonsystematic transmission implemented through scrambling and puncturing , and showed that the former is able to outperform the latter , requiring a smaller security gap .",
    "the use of concatenated scrambling can further reduce the security gap .",
    "moreover , it becomes mandatory when eve s channel is not worse than bob s , and harq protocols are used to achieve security and reliability .",
    "finally , we have shown that the proposed approach also has a good performance with regard to the maximization of the equivocation rate under the bpsk constraint , as it gives values very close to the ultimate capacity bounds .",
    "x.  tang , r.  liu , p.  spasojevic , and h.  v. poor , `` on the throughput of secure hybrid - arq protocols for gaussian block - fading channels , '' _ ieee trans .",
    "inform . theory _ , vol .",
    "55 , no .  4 , pp . 15751591 , apr .",
    "2009 .",
    "x.  y. hu , e.  eleftheriou , d.  m. arnold , and a.  dholakia , `` efficient implementations of the sum - product algorithm for decoding ldpc codes , '' in _ proc .",
    "ieee global telecommunications conference ( globecom 01 ) _ , vol .  2 ,",
    "san antonio , tx , nov .",
    "2001 , pp . 10361036e .",
    "w.  k. harrison , j.  almeida , d.  klinc , s.  w. mclaughlin , and j.  barros , `` stopping sets for physical - layer security , '' in _ proc .",
    "ieee information theory workshop ( itw 2010 ) _ , dublin , ireland , aug .",
    "2010 .",
    "chung , t.  j. richardson , and r.  l. urbanke , `` analysis of sum - product decoding of low - density parity - check codes using a gaussian approximation , '' _ ieee trans .",
    "inform . theory _",
    "47 , no .  2 , pp . 657670 , feb . 2001"
  ],
  "abstract_text": [
    "<S> this study examines the use of nonsystematic channel codes to obtain secure transmissions over the additive white gaussian noise ( awgn ) wire - tap channel . unlike the previous approaches , we propose to implement nonsystematic coded transmission by scrambling the information bits , and characterize the bit error rate of scrambled transmissions through theoretical arguments and numerical simulations . </S>",
    "<S> we have focused on some examples of bose - chaudhuri - hocquenghem ( bch ) and low - density parity - check ( ldpc ) codes to estimate the security gap , which we have used as a measure of physical layer security , in addition to the bit error rate . based on a number of numerical examples </S>",
    "<S> , we found that such a transmission technique can outperform alternative solutions . </S>",
    "<S> in fact , when an eavesdropper ( eve ) has a worse channel than the authorized user ( bob ) , the security gap required to reach a given level of security is very small . </S>",
    "<S> the amount of degradation of eve s channel with respect to bob s that is needed to achieve sufficient security can be further reduced by implementing scrambling and descrambling operations on blocks of frames , rather than on single frames . </S>",
    "<S> while eve s channel has a quality equal to or better than that of bob s channel , we have shown that the use of a hybrid automatic repeat - request ( harq ) protocol with authentication still allows achieving a sufficient level of security . </S>",
    "<S> finally , the secrecy performance of some practical schemes has also been measured in terms of the equivocation rate about the message at the eavesdropper and compared with that of ideal codes .    </S>",
    "<S> information security , physical layer security , awgn wire - tap channel , scrambled transmissions , low - density parity - check codes </S>"
  ]
}
{
  "article_text": [
    "an _ l@xmath9-convex function _ ( favati - tardella  @xcite , murota  @xcite , fujishige - murota  @xcite ) is a function @xmath10 on integer lattice @xmath11 satisfying so - called _ discrete midpoint convexity inequality _ : @xmath12 where @xmath13 ( resp .",
    "@xmath14 ) is an operation on @xmath15 that rounds down ( resp .",
    "up ) the decimal fraction of each component .",
    "l@xmath9-convex functions may be viewed as a @xmath11-generalization of _ submodular functions _ , and constitute a fundamental class of discrete convex functions in _ discrete convex analysis _ ( murota  @xcite ) .",
    "a representative example of l@xmath9-convex function is a function @xmath10 represented as the following form : @xmath16 where @xmath17 and @xmath18 are one - dimensional convex functions .",
    "the minimization of such a function has both theoretical and practical interests ; it is the dual of a minimum cost network flow problem , and has important applications in computer vision  @xcite .",
    "thus theory of l@xmath9-convex functions provides a unified treatment for optimizing these important classes of functions .",
    "let us mention some of particular features of l@xmath9-convex functions @xmath10 .",
    "( 1 )  an optimality criterion of a local - to - global type  ( * ? ? ?",
    "* theorem 7.14 ) : for each point @xmath19 , a local minimization problem around @xmath20 is defined , and if @xmath20 is local optimal , then @xmath20 is global optimal . moreover",
    "this local minimization problem is a _ submodular function minimization _ , and is solvable in polynomial time  @xcite .",
    "in particular , if @xmath20 is not local optimal , then we can find another point @xmath21 with @xmath22 ; we naturally obtain @xmath21 with smallest @xmath23 . the resulting descent algorithm , called the _ steepest descent algorithm _ , correctly outputs a global minimizer of @xmath10  ( * ?",
    "* section 10.3.1 ) .",
    "the number of the descent steps is the @xmath24-distance between the initial point and global minimizers  @xcite .",
    "( 2 ) proximity theorem ( iwata - shigeno  @xcite , see ( * ? ? ?",
    "* theorem 7.18 ) ) : for a minimizer @xmath20 over the set @xmath25 of all even integral vectors , there is a global minimizer @xmath21 in the @xmath24-ball around @xmath20 with radius @xmath2 .",
    "this intriguing property is the basis of the proximity scaling algorithm for l@xmath9-convex functions  ( * ? ? ?",
    "* section 10.3.2 ) .",
    "recently the l - convexity is considered for functions on general graph structures other than  @xmath11 .",
    "observe that @xmath26 is naturally identified with the vertex set of a directed path ( of infinite length ) , and a function on @xmath11 is regarded as a function on the @xmath2-product of these paths .",
    "observe that operations @xmath27 and @xmath28 are definable in a graph - theoretical way .",
    "hence l@xmath9-convex functions are well - defined functions on the cartesian product of directed paths .",
    "based on this observation , kolmogorov  @xcite considered an analogue of l@xmath29-convex functions defined on the product of rooted trees , called _ tree - submodular functions_. hirai  @xcite considered an analogue of l@xmath29-convex functions on a more general structure , a _ modular complex _ , which is a structure obtained by gluing of modular lattices .",
    "his motivation comes from the tractability classification of minimum 0-extension problems and a combinatorial duality theory of multicommodity flows .    in this paper",
    ", we continue this line of research .",
    "we introduce the notion of _ l - extendability _ for functions on ( the vertex set of ) the @xmath2-fold cartesian product @xmath30 of trees @xmath31 .",
    "this notion is inspired by the idea of _ submodular relaxation _",
    "@xcite and related half - integral relaxations of np - hard problems , such as vertex cover and multiway cut .",
    "we first introduce a variation of a tree - submodular function , called an _ alternating l - convex function_. alternating l - convex functions are also defined by a variation of the discrete midpoint convexity inequality ( [ eqn : midpoint ] ) , and coincide with fujishige s _ uj - convex functions _",
    "@xcite if @xmath31 is a path and is identified with @xmath26 . as an analogue of half - integral integer lattice @xmath32",
    ", we consider the product @xmath33 of the _ edge - subdivision _ @xmath34 of @xmath31",
    ". then an _",
    "l - extendable function _ is defined as a function @xmath10 on @xmath30 such that there is an alternating l - convex function @xmath35 on @xmath36 such that its restriction to @xmath30 is equal to @xmath10 , where @xmath35 is called an _",
    "l - convex relaxation _ of @xmath10 .",
    "the first half of our main contribution is to establish basic properties of alternating l - convex functions and l - extendable functions .",
    "we show that alternating l - convex functions admit an optimality criterion of a local - to - global type . here",
    "the local problem is the problem of minimizing a _",
    "@xmath0-submodular function _ , a generalization of submodular and bisubmodular functions introduced by huber and kolmogorov  @xcite .",
    "this optimality criterion is an immediate consequence of the definition , and may not be precisely new ; it is expected from @xcite .",
    "we further prove the @xmath24-geodesic property for the steepest descent algorithm for alternating l - convex functions : the number of the iterations is equal to the @xmath24-distance from the initial point to minimizers .",
    "we establish the proximity theorem for l - extendable functions : regard @xmath31 as a bipartite graph with two color classes @xmath37 . for a minimizer @xmath20 over @xmath38 ,",
    "there is a global minimizer of @xmath10 within the @xmath24-ball around @xmath20 with radius @xmath2 .",
    "we prove the persistency property for l - convex relaxations : a minimizer of an l - extendable function is obtained by _ rounding _ any minimizer of its l - convex relaxation .",
    "this property is known for the cases of bisubmodular and @xmath0-submodular relaxations  @xcite .",
    "we introduce a useful special class of l - extendable functions , called _",
    "2-separable convex functions _ , as an analogue of a class of functions with form ( [ eqn : midpoint ] ) .",
    "we give explicit l - convex relaxations for which the steepest descent algorithm is implementable by a maximum flow algorithm .",
    "in fact , the local problem is a minimization of a special @xmath0-submodular function , which is a sum of ( binary ) _ basic @xmath0-submodular functions _ , introduced by iwata , wahlstrm , and yoshida  @xcite .",
    "they showed that this class of @xmath0-submodular functions can be minimized by maximum flow computation .",
    "therefore the l - convex relaxation of a @xmath39-separable convex function is efficiently minimized .",
    "for some cases , an optimal solution of this relaxation can easily be rounded to a @xmath39-approximate solution of the original 2-separable convex function .",
    "this approximation algorithm can be viewed as a generalization of the classical @xmath39-approximation algorithm for multiway cut  @xcite .",
    "these results are motivated by the design of a new simple polynomial scaling algorithm for _ minimum cost free multiflow problem _ , which is the second half of our main contribution . for an undirected ( integer-)capacitated network with terminal set @xmath40 , a _ multiflow _",
    "is a pair of a set of paths connecting terminals in @xmath40 and its flow - value function satisfying capacity constraints .",
    "a _ maximum free multiflow _ is a multiflow of a maximum total flow - value .",
    "suppose that each edge has a nonnegative cost . the minimum cost free multiflow problem asks to find a maximum free multiflow with the minimum total cost .",
    "karzanov  @xcite proved that there always exists a half - integral minimum cost maximum free multiflow , and presented a pseudo - polynomial time algorithm to find it .",
    "later he  @xcite gave a strongly polynomial time algorithm by using a generic polynomial time lp solver ( the ellipsoid method or the interior point method ) .",
    "currently no _ purely combinatorial _",
    "strongly polynomial time algorithm is known .",
    "goldberg and karzanov  @xcite presented two purely combinatorial weakly polynomial time algorithms : one of them is based on capacity scaling and the other one is based on cost scaling .",
    "however the description and analysis of their algorithms ( in each scaling phase ) are not easy ; they did not give an explicit polynomial running time .",
    "as an application of the theory of l - extendable functions , we present a new simple purely combinatorial polynomial time scaling algorithm . we hope that our algorithm will be a step toward the design of a purely combinatorial strongly polynomial time algorithm for minimum cost multiflow problem .",
    "we formulate a dual of our problem to the minimization of a 2-separable l - convex function on the product @xmath30 of a subdivided - star @xmath31 , where a _ subdivided star _ is a tree obtained from a star by successive edge - subdivisions",
    ". then we can apply a domain scaling technique .",
    "the scaled problem in each phase is again a minimization of a 2-separable l - convex function , and is solved by the steepest descent algorithm implemented by max - flow computations .",
    "the number of iterations is estimated by the proximity theorem the @xmath24-geodesic property , and the persistency property .",
    "in the last phase , we obtain an optimal dual solution , and from this we can construct a desired minimum cost free multiflow .",
    "our algorithm may be viewed as a multiflow version of a proximity scaling ( or domain scaling ) algorithm for the convex dual of minimum cost flow problem  @xcite , and is the first combinatorial algorithm to this problem having an explicit polynomial running time .",
    "the total time is @xmath41 , where @xmath2 is the number of nodes , @xmath3 is the number of edges , @xmath0 is the number of terminals , @xmath4 is the maximum of an edge - cost , @xmath5 is the total sum of edge - capacities , and @xmath6 is the time complexity of finding a maximum flow in a network of @xmath7 nodes and @xmath8 edges .",
    "our algorithm is designed to solve , in the same time complexity , a more general class of multiflow problems , _ minimum cost node - demand multiflow problems _ , and is the first combinatorial polynomial time algorithm for this class of the problems .",
    "this multiflow problem arises as an lp - relaxation of a class of network design problems , called _ terminal backup problems _",
    "recently fukunaga  @xcite  gave a 4/3-approximation algorithm for capacitated terminal backup problem , based on rounding an lp solution ( obtained by a generic lp - solver ) .",
    "our algorithm gives a practical and combinatorial implementation of his algorithm .",
    "we present results for l - extendable functions in section  [ sec : l - extendable ] and results for minimum cost multiflow problem in section  [ sec : multiflow ] .    [ [ notation . ] ] notation .",
    "+ + + + + + + + +    let @xmath42 , @xmath43 , @xmath26 , and @xmath44 denote the sets of reals , nonnegative reals , integers , and nonnegative integers , respectively .",
    "let @xmath45 , where @xmath46 is an infinity element and is treated as : @xmath47 @xmath48 and @xmath49 @xmath50 .",
    "for a function @xmath51 on a set @xmath52 , let @xmath53 denote the set of elements @xmath54 with @xmath55 .",
    "for a subset @xmath56 , let @xmath57 denote @xmath58 .",
    "for an undirected ( directed ) graph @xmath59 , an edge between nodes @xmath60 and @xmath61 ( from @xmath60 to @xmath61 ) is denoted by @xmath62 . for a node subset @xmath63 , let @xmath64 denote the set of edges @xmath62 with @xmath65 and @xmath66 . for nodes",
    "@xmath67 , an _ @xmath68-cut _ is a node subset @xmath63 with @xmath69 . for a node subset @xmath4 ,",
    "an @xmath70-cut is a node subset @xmath63 with @xmath71 .",
    "in this section , we introduce alternating l - convex functions and l - extendable functions on the product of trees . in section  [ subsec : k - submodular ] , we give preliminary arguments on @xmath0-submodular functions . in section  [ subsec : alternating ] , we introduce alternating l - convex functions , and establish the l - optimality criterion ( theorem  [ thm : l - optimality ] ) and the @xmath72-geodesic property ( theorem  [ thm : bound ] ) of the steepest descent algorithm . in section  [ subsec : l - extendable ] , we introduce l - extendable functions , and establish the proximity theorem ( theorem  [ thm : proximity ] ) and the persistency property ( theorem  [ thm : persistency ] ) . in section  [ subsec:2-separable ] , we introduce 2-separable convex functions .",
    "we show that the steepest descent algorithm for their l - convex relaxations is implementable by minimum cut computations ( theorems  [ thm:2separable ] and [ thm : approx ] ) .",
    "less obvious theorems are proved in section  [ subsec : proof ] .      for a nonnegative integer @xmath0 ,",
    "let @xmath74 be a @xmath75-element set with specified element @xmath76 .",
    "define a partial order @xmath77 on @xmath74 by @xmath78 for @xmath79 with no other relations .",
    "then @xmath74 is a meet - semilattice of minimum element @xmath76 ; in particular meet @xmath80 exists . for @xmath81 , define @xmath82 by @xmath83 if @xmath84 are comparable , and @xmath85 otherwise . for an @xmath2-tuple @xmath86 of nonnegative integers , let @xmath87 denote the direct product @xmath88 of posets @xmath89 @xmath90 . for @xmath91 ,",
    "let @xmath92 and @xmath93 .",
    "@xmath94 is _",
    "@xmath73-submodular _ if it satisfies @xmath95    the notion of @xmath73-submodularity is introduced by huber - kolmogorov  @xcite . if @xmath96 , then @xmath97-submodular functions are particularly called @xmath0-submodular . then @xmath98-submodular functions are submodular functions , and @xmath39-submodular functions are bisubmodular functions .",
    "although both classes of functions can be minimized in polynomial time ( under the oracle model )  @xcite , it is not known whether general @xmath73-submodular functions can be minimized in polynomial time .",
    "recently , thapper and ivn  @xcite discovered a powerful criterion for solvability of _ valued csp _",
    ", that is , a minimization of a function represented as a sum of functions with constant arity ( @xmath99 the number of variables ) . as a consequence of their criterion ,",
    "if @xmath73-submodular function @xmath100 is represented and given as @xmath101 where each @xmath102 is @xmath73-submodular and the number @xmath3 of variables is constant , then @xmath100 can be minimized by solving a certain polynomial size linear program ( blp ) ; see also  @xcite .",
    "we will deal with a further special class of @xmath103-submodular functions , considered by  @xcite , in which this class of @xmath103-submodular functions can be efficiently minimized by a maximum flow algorithm .",
    "let @xmath104 be nonnegative integers .",
    "for @xmath105 , let @xmath106 and @xmath107 be one - dimensional @xmath0-submodular functions on @xmath74 defined by @xmath108 it is not difficult to see that any one - dimensional @xmath0-submodular function @xmath100 is a nonnegative sum of @xmath109 and @xmath107 plus a constant : @xmath110 where @xmath111 is a minimizer of @xmath100 over @xmath74 .",
    "for @xmath112 , let @xmath113 be a function on @xmath114 defined by @xmath115    for a poset isomorphism @xmath116 ( a bijection from @xmath117 to @xmath118 with @xmath119 ) , let @xmath120 be a function on @xmath114 defined by @xmath121 if @xmath122 is the identity map @xmath123 , then @xmath124 is denoted by @xmath125 .    observe that both @xmath113 and @xmath120 are @xmath73-submodular . a ( binary ) _ basic @xmath73-submodular function _",
    "@xmath100 on @xmath87 for @xmath126 is a function represented as    type i : : :    @xmath127 for some @xmath60 and    one - dimensional @xmath0-submodular function    @xmath128 , type ii : : :    @xmath129 for distinct    @xmath130 and an isomorphism    @xmath131 , or type iii : : :    @xmath132 for distinct    @xmath130 and @xmath133 .",
    "iwata , wahlstrm , and yoshida  @xcite showed that a sum of basic @xmath0-submodular function can be efficiently minimized by any maximum flow algorithm .",
    "[ thm : iwy14 ] a nonnegative sum of @xmath3 basic @xmath97-submodular functions for @xmath134 can be minimized in @xmath135 time , where @xmath136 .",
    "their algorithm is sketched as follows .",
    "suppose that @xmath137 for @xmath138 .",
    "we consider a directed network @xmath139 with vertex set @xmath140 , edge set @xmath4 , and edge capacity @xmath141 , where @xmath140 consists of source @xmath142 , sink @xmath143 , and @xmath144 @xmath145 .",
    "let @xmath146 .",
    "a _ legal cut _ is an @xmath68-cut @xmath63 such that @xmath147 for @xmath138 .",
    "there is a natural bijection @xmath148 from @xmath87 to the set of legal cuts , where @xmath148 is given by @xmath149 for an @xmath68-cut @xmath63 , let @xmath150 denote the legal cut obtained from @xmath63 by deleting @xmath151 with @xmath152 for @xmath153 .",
    "we say that network @xmath139 _ represents _ function @xmath154 if    * for some constant @xmath155 , it holds @xmath156 for every @xmath157 , and * @xmath158 for every @xmath68-cut @xmath63 .",
    "suppose that @xmath139 represents @xmath100 . by ( 1 ) and ( 2 ) , the minimum of @xmath159 is equal to the minimum @xmath68-cut capacity , and some legal cut is a minimum @xmath68-cut .",
    "by @xmath160 and ( 2 ) , any inclusion - minimal minimum @xmath68-cut is necessarily a legal cut .",
    "recall the fundamental fact in network flow theory that there is a unique inclusion - minimal mincut @xmath161 , which is equal to the set of vertices reachable from @xmath142 in the residual network for any maximum @xmath68-flow .",
    "then @xmath162 is a minimizer of @xmath100 .",
    "namely @xmath100 is minimized by a single max - flow computation on @xmath139 .    as shown in @xcite , any nonnegative sum of basic @xmath73-submodular functions",
    "is represented by some network @xmath139 .",
    "notice that if @xmath100 is represented by @xmath163 , then for constants @xmath164 and @xmath165 , @xmath166 is represented by @xmath167 , and that if @xmath100 and @xmath168 are represented by networks @xmath139 and @xmath169 ( on the same vertex set @xmath140 ) , respectively , then @xmath170 is represented by the union of @xmath171 and @xmath169 . also notice that a unary @xmath73-submodular function @xmath100 is decomposed to @xmath107 and @xmath172 as ( [ eqn : unary ] ) .",
    "if @xmath173 , then there is at most one @xmath174 with @xmath175 , and the coordinate @xmath176 of term @xmath177 may be fixed to @xmath178 .",
    "so we can assume that @xmath179 .",
    "therefore it suffices to construct a network for the following cases of @xmath100 : ( i@xmath180 ) @xmath181 if @xmath182 and @xmath76 otherwise , ( i ) @xmath183 @xmath184 , ( ii ) @xmath185 , ( iii ) @xmath186 , and ( iv ) @xmath132 .",
    "case ( i@xmath180 ) : consider the network consisting of a single edge @xmath187 with infinite capacity .    case ( i ) : consider the network consisting of a single edge @xmath188 with unit capacity .    case ( ii ) : if @xmath189 , then @xmath100 is the sum of @xmath190 , and reduces to case ( i ) .",
    "suppose that @xmath191 .",
    "consider the network consisting of edges @xmath192 and @xmath193 for @xmath194 .    case ( iii ) : consider the network consisting of edges joining @xmath195 and @xmath196 in both directions for @xmath197 .",
    "case ( iv ) : if @xmath198 , then @xmath100 is the sum of two unary @xmath0-submodular functions , and reduces to case ( i ) .",
    "so suppose @xmath191 .",
    "consider the network consisting of edges @xmath199 for @xmath200 and @xmath201 for @xmath202 if @xmath203 .    in all four cases ,",
    "it is easy to check that the network represents @xmath100 , i.e. , it satisfies ( 1 ) and ( 2 ) . in particular ,",
    "each basic @xmath73-submodular function is represented by @xmath204 edges , where @xmath205 .",
    "thus a nonnegative sum of @xmath3 basic @xmath73-submodular functions is represented by a network with @xmath206 vertices and @xmath207 edges .",
    "hence it can be minimized by @xmath208 time .      here",
    "we introduce the notion of an alternating l - convex function on the product of trees .",
    "alternating l - convex functions may be viewed as a natural variant of _ strongly tree - submodular functions _ due to kolmogorov  @xcite ; see remark  [ rem : midpoint ] for a detailed relation .",
    "in addition , when @xmath11 is identified with ( the vertex set ) of the @xmath2-fold product of a path with infinite length , alternating l - convex functions are equal to _ uj - convex functions _ considered by fujishige  @xcite .",
    "also alternating l - convex functions constitutes a useful special class of _ l - convex functions on modular complexes _",
    "@xcite , in which a modular complex are taken to be the product of zigzag oriented trees .",
    "let @xmath31 be a tree .",
    "we will use the following convention :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ the vertex set of a tree @xmath31 is also denoted by @xmath31 . _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    the exact meaning will always be clear in this context .",
    "regard @xmath31 as a bipartite graph .",
    "let @xmath209 and @xmath210 be the color classes of @xmath31 , where a vertex in @xmath209 is called _ black _ and a vertex in @xmath210 is called _",
    "white_. define a partial order @xmath77 on @xmath31 by : @xmath211 if @xmath178 and @xmath212 are adjacent with @xmath213",
    ". then the resulting poset has no chain of length @xmath39 ; @xmath209 and @xmath210 are the sets of maximal and minimal elements , respectively .",
    "let @xmath214 denote the path metric of @xmath31 , i.e. , @xmath215 is the number of edges in the unique path between @xmath178 and @xmath212 . for vertices @xmath216 , there",
    "uniquely exists a pair @xmath217 of vertices such that @xmath218 , @xmath219 , and @xmath220 .",
    "in particular , @xmath221 or @xmath111 and @xmath222 are adjacent .",
    "define @xmath223 and @xmath224 so that @xmath225 and @xmath226 . namely if @xmath227 then @xmath228 .",
    "otherwise @xmath223 and @xmath224 are the black and white vertices in @xmath229 , respectively .",
    "let @xmath2 be a positive integer .",
    "we consider the @xmath2-fold cartesian product @xmath30 of @xmath31 .",
    "we will use the @xmath24-metric on @xmath30 , which is also denoted by @xmath214 : @xmath230    a function @xmath231 is called _ alternating l - convex _ , or simply , _",
    "l - convex _ if it satisfies @xmath232    the defining inequality ( [ eqn : midpoint ] ) can be viewed as a variation of the discrete midpoint convexity  ( [ eqn : midpoint_org ] ) ; see also remark  [ rem : midpoint ] . as the direct product of posets @xmath31",
    ", we regard @xmath30 as a poset , where the partial order is also denoted by @xmath77 . for @xmath233 , the principal ideal @xmath234 and filter @xmath235 of @xmath20",
    "are given as follows : @xmath236 regard @xmath237 as poset @xmath89 with @xmath238 and the minimum element @xmath176 , and also regard @xmath239 as poset @xmath240 with @xmath241 and the minimum element @xmath176 .",
    "then @xmath242 for @xmath134 and @xmath243 for @xmath244 . by this correspondence",
    ", it is easy to see that @xmath245 and @xmath246 on @xmath247 , and that @xmath248 and @xmath249 on @xmath250 .",
    "therefore we have :    [ lem : locally_k_submo ] for each @xmath251 , an l - convex function @xmath10 is @xmath73-submodular on @xmath250 and on @xmath247 .    in particular , in the case where @xmath31 is a star with @xmath0 leaves and center @xmath252 , under the correspondence @xmath253 , l - convex functions and @xmath0-submodular functions are the same .",
    "the following is an analogue of the l - optimality criterion of l@xmath29-convex functions  ( * ? ? ?",
    "* theorem 7.5 ) ( and strongly - tree submodular function  @xcite ) :    [ thm : l - optimality ] let @xmath10 be an l - convex function on @xmath30 . if @xmath254 is not a minimizer of @xmath10 , then there exists @xmath255 with @xmath256 .",
    "there is @xmath21 with @xmath22 .",
    "take such @xmath21 with @xmath257 minimum . by inequality ( [ eqn : midpoint ] ) , we have @xmath258 .",
    "thus @xmath259 or @xmath260 holds . by the minimality , it must hold @xmath261 ( since @xmath262 and @xmath263 )",
    ". then @xmath264 , @xmath265 , and the claim holds .",
    "this directly implies the following descent algorithm , which is an analogue of the steepest descent algorithm of l@xmath9-convex functions  ( * ? ? ?",
    "* section 10.3.1 ) .",
    "steepest descent algorithm : : : input : : :    an l - convex function @xmath10 and a vertex    @xmath254 .",
    "step 1 : : :    let @xmath21 be a minimizer of @xmath10 over    @xmath266 .",
    "step 2 : : :    if @xmath267 , then stop .",
    "otherwise    @xmath268 , and go to step 1 .    by theorem  [ thm : l - optimality ] , if the algorithm terminates in step 2 , then @xmath20 is a minimizer of @xmath10 .",
    "also the step 1 is conducted by minimizing @xmath10 over @xmath250 and @xmath10 over @xmath247 . by lemma",
    "[ lem : locally_k_submo ] , @xmath10 is @xmath73-submodular on @xmath250 and on @xmath247 , and step  1 can be conducted by @xmath73-submodular function minimization .",
    "therefore , if @xmath10 is represented as a sum of @xmath73-submodular functions of bounded arity , then each iteration is conducted in polynomial time . to obtain a complexity bound ,",
    "we need to estimate the total number of iterations . in the case of l@xmath29-convex functions ,",
    "the number of iterations is bounded by the constant of the @xmath24-diameter of the effective domain  @xcite .",
    "a recent analysis  @xcite showed that the number of iterations is _ exactly _ equal to the minimum of a certain directed analogue of @xmath24-distance from the initial point @xmath20 to the set of minimizers .",
    "we will establish an analogous result for our l - convex function .",
    "let @xmath269 denote the set of all minimizers of @xmath10 .",
    "obviously the total number of the iterations is at least the minimum @xmath24-distance @xmath270 from @xmath20 to @xmath269 .",
    "this lower bound is almost tight , as follows .",
    "[ thm : bound ] for an l - convex function @xmath10 on @xmath30 and a vertex @xmath254 , the total number @xmath3 of the iterations of the steepest descent algorithm applied to @xmath271 is at most @xmath272 .",
    "if @xmath273 or @xmath274 , then @xmath275 .    in the case",
    "where @xmath276 or @xmath277 , the condition @xmath273 or @xmath274 is automatically satisfied . in fact",
    ", @xcite announced ( a slightly weaker version of ) this result for general l - convex functions on modular complexes .",
    "however , the proof needs a deep geometric investigation on modular complex , and will be given in a future paper  @xcite .",
    "we give a self - contained proof of theorem  [ thm : bound ] in section  [ subsec : bound ] .",
    "next we introduce the notion of the l - extendability .",
    "this notion was inspired by the idea of _",
    "( @xmath0-)submodular relaxation _ used in  @xcite .",
    "a function @xmath278 is called _ l - extendable _ if there exists an l - convex function @xmath10 on @xmath30 such that the restriction of @xmath10 to @xmath38 is equal to @xmath279 .",
    "we also define the l - extendability of a function on @xmath30 via the edge - subdivision . the _ edge - subdivision _",
    "@xmath34 of @xmath31 is obtained by adding a new vertex @xmath280 for each edge @xmath281 , and replacing @xmath282 in @xmath31 by two edges @xmath283 .",
    "the new vertex @xmath280 is called the _ midpoint _ of @xmath284 .",
    "the original @xmath31 is a subset of @xmath34 and is one of the color classes of @xmath34 . in @xmath34 ,",
    "vertices in @xmath31 are supposed to be black and midpoints are supposed to be white .",
    "a function @xmath285 is called _ midpoint l - extendable _ , or simply , _",
    "l - extendable _ if there exists an l - convex function @xmath10 on @xmath36 such that the restriction of @xmath10 to @xmath30 is equal to @xmath279 .",
    "we call @xmath10 an _ l - convex relaxation _ of @xmath279 .",
    "if @xmath286 , then @xmath10 is called an _ exact _",
    "l - convex relaxation .",
    "in fact , any l - convex function admits an exact l - convex relaxation , and is ( midpoint ) l - extendable  @xcite ; see remark  [ rem : midpoint ] for related arguments .",
    "we will see that vertex - cover problem and multiway cut problem admits @xmath0-submodular relaxation ( l - convex relaxation in our sense ) .",
    "this means that it is np - hard to minimize l - extendable functions in general .",
    "however l - extendable functions have several useful properties .",
    "the main results in this section are following three properties of l - extendable functions .",
    "these properties will play crucial roles in the proximity scaling algorithm for minimum cost multiflow problem in section  [ sec : multiflow ] .",
    "proofs of the three theorems are given in section  [ subsec : proof ] .",
    "the first property is an optimality criterion analogous to theorem  [ thm : l - optimality ] :    [ thm : optimality_h ]",
    "let @xmath278 be an l - extendable function .",
    "for @xmath287 , if @xmath20 is not a minimizer of @xmath279 , then there exists @xmath288 such that @xmath289 and @xmath290 .",
    "the second property is so - called the _ persistency_.",
    "this notion was introduced by kolmogorov  @xcite for bisubmodular relaxation , and was extended to @xmath0-submodular relaxation  @xcite .",
    "the persistency property says that from a minimizer @xmath20 of a relaxation @xmath10 , we obtain a minimizer @xmath21 of @xmath279 by _ rounding _ each white component of @xmath20 to an adjacent ( black ) vertex .",
    "[ thm : persistency ] let @xmath291 be an l - extendable function and @xmath231 its l - convex relaxation . for a minimizer @xmath20 of @xmath10 , then there is a minimizer @xmath21 of @xmath279 with @xmath292 .",
    "the third one is a proximity theorem .",
    "the proximity theorem of l@xmath29-convex function @xmath293 says that for any minimizer @xmath20 of @xmath10 over @xmath25 , there is a minimizer @xmath21 of @xmath10 with @xmath294   ( iwata - shigeno  @xcite ; see ( * ? ? ?",
    "* theorem 7.6 ) and ( * ? ? ? * theorem 20.10 ) ) .",
    "we establish an analogous result for l - extendable functions .",
    "[ thm : proximity ] let @xmath285 be a midpoint l - extendable function , and let @xmath20 be a minimizer of @xmath279 over @xmath38 .",
    "then there exists a minimizer @xmath21 of @xmath279 with @xmath295 .",
    "in addition , if @xmath279 admits an exact l - convex relaxation , then there exists a minimizer @xmath21 of @xmath279 with @xmath296    as noted in @xcite , vertex cover problem is a representative example admitting a bisubmodular relaxation ( l - convex relaxation in our sense ) .",
    "let @xmath59 be an undirected graph with ( nonnegative ) cost @xmath111 on @xmath297 .",
    "vertex cover _ is a set @xmath63 of vertices meeting every edge .",
    "the vertex cover problem asks to find a vertex cover @xmath63 of minimum cost @xmath298 .",
    "the well - known ip formulation of this problem is : minimize @xmath299 over @xmath300 satisfying @xmath301 for @xmath302 .",
    "define @xmath303 by @xmath304 if @xmath305 and @xmath46 otherwise , and define @xmath306 by @xmath307 .",
    "then the vertex cover problem is the minimization of @xmath308 .",
    "this function @xmath308 is midpoint l - extendable ( if @xmath309 is identified with the vertex set of the graph of single edge ) .",
    "indeed , the natural extension @xmath310 is a bisubmodular relaxation ( if @xmath311 is identified with @xmath312 with @xmath313 ) .",
    "submodular vertex cover problem _",
    "@xcite is to minimize submodular function @xmath314 over @xmath315 satisfying @xmath301 for @xmath302 .",
    "namely this is the minimization of @xmath308 defined by @xmath316 .",
    "again @xmath308 is midpoint l - extendable .",
    "indeed a function @xmath317 is a bisubmodular relaxation of @xmath308 .",
    "[ rem : midpoint ] we can consider several variants of the discrete midpoint convexity inequality and associated discrete convex functions .",
    "suppose that each edge of @xmath31 has an orientation .",
    "let @xmath318 be defined by : @xmath319 is the unique vertex @xmath320 with @xmath321 and @xmath322 .",
    "for @xmath323 , let @xmath324 and @xmath325 denote the vertices of @xmath31 such that @xmath326 is an edge with midpoint @xmath178 , and is oriented from @xmath324 to @xmath325 .",
    "for @xmath327 , let @xmath328 .",
    "extend these operations to operations on @xmath30 in componentwise , as above .",
    "consider function @xmath10 satisfying @xmath329 in the case where @xmath31 is a path on @xmath26 obtained by joining @xmath60 and @xmath330 and by orienting @xmath331 @xmath332 , the above inequality ( [ eqn : midpoint ] ) is equal to ( [ eqn : midpoint_org ] ) , and @xmath10 is l@xmath9-convex . in the case",
    "where there is a unique sink in @xmath31 , i.e. , @xmath31 is a rooted tree , the operations @xmath333 and @xmath334 are equal , respectively , to @xmath335 and @xmath336 in the sense of  @xcite , and @xmath10 is strongly tree submodular .",
    "also notice that alternating l - convex functions correspond to the zigzag orientation .",
    "so different orientations of @xmath31 define different classes of discrete convex functions .",
    "theory of l - extendable functions captures all these discrete convex functions by the following fact :    if @xmath337 satisfies ( [ eqn : midpoint ] ) , then @xmath10 is midpoint l - extendable , where its exact l - convex relaxation @xmath338 is given by @xmath339 [ eqn : fact ]    we will give the proof of this fact in @xcite ( since it is bit tedious ) .",
    "in particular the minimization of @xmath10 over @xmath30 can be solved by the minimization of @xmath35 over @xmath36 . instead of @xmath10 , we can apply our results to @xmath35 ( and obtain results for original @xmath10 ) .",
    "this is another reason why we consider alternating l - convex functions and l - extendable functions .      in this section",
    ", we introduce a special class of l - extendable functions , called _",
    "2-separable convex functions_. this class is an analogue of a class of functions @xmath100 on @xmath11 represented as the following form : @xmath340 where @xmath341 , and @xmath18 are @xmath98-dimensional convex functions on @xmath26 .",
    "hochbaum  @xcite considers minimization of functions with this form , and provides a unified framework to np - hard optimization problems admitting half - integral relaxation and 2-approximation algorithm .",
    "recall ( [ eqn : typical ] ) that a function without terms @xmath342 is a representative example of l@xmath9-convex functions .",
    "it is known that the half - integral relaxation of ( [ eqn:2separable_zz ] ) can be efficiently minimized by a maximum flow algorithm  @xcite ; also see  @xcite .    in this section",
    ", we show analogous results : a 2-separable convex function admits an l - convex relaxation each of whose local @xmath73-submodular function is a sum of basic @xmath73-submodular functions . hence this l - convex relaxation can be efficiently minimized by successive applications of max - flow min - cut computations .",
    "moreover , for some special cases , a solution of the l - convex relaxation can be rounded to a 2-approximation solution of the original 2-separable convex function .",
    "we start with the ( one - dimensional ) convexity on a tree .",
    "a function @xmath279 on @xmath26 is said to be _ nondecreasing _ if @xmath343 for @xmath344 , an is said to be _ convex _ if @xmath345 for @xmath344 , and is said to be _ even _ if @xmath346 for every odd integer @xmath143 .",
    "we can naturally define convex functions on a tree @xmath31 .",
    "it should be noted that this notion of convexity was considered in the classical literature of facility location analysis  @xcite . for @xmath347 and an integer @xmath143 with @xmath348 ,",
    "let @xmath349_t$ ] denote the unique vertex @xmath142 satisfying @xmath350 and @xmath351 .",
    "a function @xmath279 on @xmath31 is said to be _ convex _ if for any vertices @xmath84 in @xmath31 , a function on @xmath26 , defined by @xmath352_t)$ ] for @xmath348 ( and @xmath353 otherwise ) , is convex .",
    "[ lem : tree_convexity ] for a function on @xmath31 , the convexity , l - convexity , and l - extendability are equivalent",
    ". for convex functions @xmath354 on @xmath31 and @xmath355 , @xmath356 is convex , and @xmath357 , defined by @xmath358 , is convex .    let @xmath279 be a function on @xmath26 . for vertices",
    "@xmath359 , we consider three functions @xmath360 defined by @xmath361 we will see below that @xmath362 is l - convex , and the other two functions are ( midpoint ) l - extendable ; notice that they are not l - convex in general .",
    "[ thm:2separable ] let @xmath279 be a non - decreasing convex function on @xmath26 , and let @xmath363 be vertices of @xmath31 .",
    "* @xmath362 is convex on @xmath31 .",
    "* suppose that @xmath279 is even .",
    "then @xmath364 is l - convex .",
    "moreover , for @xmath365 , function @xmath366 on @xmath367 is a sum of basic @xmath73-submodular functions .",
    "namely , for @xmath368 , it holds @xmath369 where @xmath370 , and @xmath111 and @xmath222 are vertices in @xmath371 and in @xmath372 nearest to @xmath212 and @xmath178 , respectively . *",
    "suppose that @xmath279 is even , and @xmath363 belong to the same color class .",
    "then @xmath373 is l - convex .",
    "moreover , for @xmath365 , function @xmath373 on @xmath367 is a sum of basic @xmath73-submodular functions .",
    "namely , for @xmath368 , it holds @xmath374 where @xmath375 , and @xmath111 and @xmath222 are vertices in @xmath371 and @xmath372 nearest to @xmath376 and @xmath377 , respectively .",
    "the local expressions of @xmath364 and @xmath373 on @xmath378 are obtained by replacing roles of @xmath209 and @xmath210 .",
    "a function @xmath308 on @xmath30 is said to be _",
    "@xmath39-separable l - convex _",
    "if @xmath308 is a sum of functions given in theorem  [ thm:2separable ] : @xmath379 where each @xmath380 is a convex function on @xmath31 , each @xmath381 and @xmath18 are nondecreasing even convex function on @xmath26 , and @xmath382 and @xmath383 are vertices in the same color class .",
    "a function @xmath308 on @xmath38 is said to be _",
    "@xmath39-separable convex _ if @xmath308 is the form of ( [ eqn : omega ] ) where each @xmath381 and @xmath18 are ( not necessarily even ) nondecreasing convex functions on @xmath26 .",
    "a @xmath39-separable convex function on @xmath38 is l - extendable , and its l - convex relaxation @xmath384 on @xmath30 is explicitly given by @xmath385 where @xmath386 and @xmath387 are even functions obtained from @xmath381 and @xmath18 by replacing @xmath388 and @xmath389 by @xmath390 and @xmath391 , respectively , for each odd integer @xmath376 .",
    "a function @xmath308 on @xmath30 is also said be @xmath39-separable convex if @xmath308 is the form of ( [ eqn : omega ] ) where each @xmath381 and @xmath18 are ( not necessarily even ) nondecreasing convex functions on @xmath26 . then @xmath308 is midpoint l - extendable .    by theorem  [ thm:2separable ] , the l - convex relaxation @xmath384 is locally a sum of basic @xmath0-submodular functions .",
    "hence @xmath384 is efficiently minimized by successive applications of maximum flow ( minimum cut ) computations .",
    "we will see in section  [ sec : multiflow ] that 2-separable convex functions arise from minimum cost multiflow problems .",
    "a _ convex multifacility location function _ is a special 2-separable convex function represented as @xmath392 where @xmath393 and @xmath381 are nonnegative - valued nondecreasing convex functions , and @xmath394 are black vertices . in this case , we take an l - convex relaxation @xmath395 for the case where all terms are linear functions @xmath396 , @xmath397 with nonnegative coefficients @xmath398 , @xmath399 , the problem of minimizing ( [ eqn : bar_omega ] ) is known as a _",
    "multifacility location problem _ on a tree ; see @xcite and also its recent application to computer vision  @xcite , where a faster algorithm in @xcite is applicable to the case where only @xmath381 are linear ( since our notion of convexity is the same as _ @xmath31-convexity _ in @xcite for the case of uniform edge - length ) .",
    "there is a natural rounding scheme from @xmath30 to @xmath38 . in some cases",
    ", we can construct a good approximate solution for @xmath308 from a minimizer of @xmath384 .",
    "for @xmath400 and @xmath251 , let @xmath401 denote the vertex @xmath402 such that for each @xmath153 , @xmath403 if @xmath404 , and @xmath382 is the unique neighbor of @xmath176 close to @xmath21 ( i.e. , @xmath405 ) if @xmath406 .",
    "[ thm : approx ] let @xmath407 be a @xmath39-separable convex function consisting of @xmath3 terms , and @xmath408 be its l - convex relaxation .    * for a given @xmath276 , there is an @xmath409 time algorithm to find a global minimizer @xmath410 of @xmath384 over @xmath30 , where @xmath0 is the maximum degree of @xmath31 . *",
    "suppose that @xmath308 is a convex multifacility location function .",
    "for any @xmath400 , the rounded solution @xmath411 is a @xmath39-approximate solution of @xmath308 .",
    "[ rem : multiway ] as discussed in @xcite , multiway cut problem is a representative example of np - hard problems admitting a @xmath0-submodular relaxation ( an l - convex relaxation in our sense ) .",
    "let @xmath59 be an undirected graph with a set @xmath412 of terminals and an edge - capacity @xmath413 .",
    "let @xmath414 .",
    "a _ multiway cut _",
    "@xmath415 is a partition of @xmath416 such that each part contains exactly one terminal .",
    "the capacity @xmath417 of @xmath415 is the sum of @xmath418 over all edges @xmath62 whose ends @xmath60 and @xmath61 belong to distinct parts in @xmath415 .",
    "the multiway cut problem in @xmath419 is the problem of finding a multiway cut with minimum capacity .",
    "the multiway cut problem is formulated as minimization of a multifacility location function on a star .",
    "let @xmath31 be a star with leaf set @xmath40 and center vertex @xmath76 .",
    "suppose that @xmath420 and @xmath421 .",
    "consider the following 2-separable convex function minimization : @xmath422 this is equivalent to the multiway cut problem on @xmath419 . to see this , for a multiway cut @xmath415 ,",
    "define @xmath423 by : @xmath424 if @xmath60 and @xmath142 belong to the same part of @xmath415 .",
    "then the objective of the resulting @xmath20 is equal to the cut capacity of @xmath415 .",
    "conversely , for a solution @xmath20 of ( [ eqn : multiway ] ) , define @xmath425 by the set of all vertices @xmath60 with @xmath426 for @xmath427 .",
    "then @xmath428 is a multiway cut whose capacity is equal to the objective value of @xmath20 .",
    "an l - convex relaxation problem relaxes the constraint @xmath276 into @xmath429 .",
    "if @xmath30 is identified with @xmath430 , then this is a @xmath0-submodular function minimization , where @xmath214 is equal to @xmath125 .",
    "an optimum @xmath410 of the relaxed problem can be efficiently obtained by @xmath431-mincut computations for @xmath427 ; see section  [ subsub : lc ] .",
    "take some @xmath432 .",
    "consider @xmath433 .",
    "this 2-approximation is essentially equal to the classical 2-approximation algorithm of multiway cut problem  @xcite ; see ( * ? ? ?",
    "* algorithm 4.3 ) .      in this section ,",
    "we give proofs of results .",
    "we will often use the following variation of @xmath73-submodularity inequality .",
    "[ lem : k - submo ] if @xmath100 is a @xmath73-submodular function on @xmath87 , then @xmath434    observe that @xmath435 is @xmath76 if @xmath436 and is @xmath178 otherwise @xmath437 . from this",
    "we have @xmath438 similarly @xmath439 is @xmath212 if @xmath440 and is @xmath178 otherwise .",
    "from this we have @xmath441 thus we have @xmath442 adding the first three inequalities and one half of the forth inequality , we obtain ( [ eqn : k - submo ] ) .",
    "the binary operation @xmath443 plays important roles in the subsequent arguments .",
    "we note the following properties :    @xmath444 .",
    "if @xmath21 has no zero component , then so does @xmath445 .",
    "@xmath446 and @xmath447 .",
    "[ eqn : sqcup ]    these properties immediately follow from the behavior of each component : @xmath448      let @xmath10 be an l - convex function on @xmath30 , and let @xmath20 be a vertex in @xmath449 . we first show the latter part .",
    "suppose ( w.l.o.g . ) that @xmath450 let @xmath451 be a sequence of vertices in generated by the steepest descent algorithm applied to @xmath452 .",
    "then it holds @xmath453 indeed , @xmath454 follows from ( [ eqn : g(x)=min_g(y ) ] ) .",
    "also @xmath455 ( or @xmath456 ) never occurs .",
    "otherwise @xmath457 and @xmath458 ; this is impossible from the definition of the steepest descent algorithm .",
    "[ lem : geodesic ] for @xmath459 with @xmath460 , we have @xmath461    by ( [ eqn : zigzag ] ) , it holds that @xmath462 if @xmath0 is odd and @xmath463 if @xmath0 is even .",
    "we use the induction on @xmath0 .",
    "then we can assume that @xmath464 and @xmath465 .",
    "suppose for the moment that @xmath0 is odd .",
    "we are going to show that @xmath466 . by lemma  [ lem : locally_k_submo ] , @xmath10 is @xmath73-submodular on @xmath467 .",
    "notice that both @xmath468 and @xmath376 belong to @xmath467 . by lemma  [ lem : k - submo ] , we have @xmath469    since @xmath470 is a minimizer of @xmath10 over @xmath471 , we have @xmath472 hence we necessarily have @xmath473 this implies @xmath474 or @xmath475 .",
    "the second case is impossible .",
    "this follows from : @xmath476 ( see ( [ eqn : sqcup ] )  ( 1 ) ) and ( [ eqn : g(x)=min_g(y ) ] ) for @xmath477 , and @xmath478 and @xmath479 for @xmath480 .",
    "thus we have @xmath481 let @xmath482",
    ". then @xmath483 . by lemma  [ lem : k - submo ] , we have @xmath484 where we use ( [ eqn : sqcup ] )  ( 3 ) to obtain the second and third terms in the right hand side . by ( [ eqn:= > > ] )",
    "we have @xmath485 notice @xmath486 . by induction",
    ", we have @xmath487 hence we can take an index @xmath61 with @xmath488 .",
    "by @xmath489 ( in @xmath490 ) , we have @xmath491 and @xmath492 . since @xmath493 ,",
    "we have @xmath494 ; otherwise @xmath495 or @xmath496 implies a contradiction @xmath497 .",
    "thus @xmath498 and @xmath394 are distinct neighbors of @xmath499 in @xmath31 with @xmath500 and @xmath501 .",
    "since @xmath31 is a tree , we have @xmath502 , and @xmath503 . the argument for even @xmath504",
    "is same ; reverse the partial order @xmath77 .",
    "let @xmath505 be the set of minimizers of @xmath10 , and let @xmath506 .",
    "since @xmath507 is optimal , we have @xmath508 .",
    "our goal is to show @xmath509 .",
    "let @xmath510 be a function defined by @xmath511 if @xmath512 and @xmath513 otherwise .",
    "then @xmath510 is also l - convex since @xmath514 and @xmath515 imply @xmath516 and @xmath517 .",
    "the subsequence @xmath518 is also obtained by applying the steepest descent algorithm to @xmath510 from @xmath20 . by lemma  [ lem : geodesic ] , no vertex @xmath376 with @xmath519 is produced .",
    "hence @xmath520 is necessarily a minimizer of @xmath510 , and is also a minimizer of @xmath10 .",
    "thus @xmath509 .",
    "this completes the latter part of the proof of theorem  [ thm : bound ] .",
    "the former part is now immediately obtained .",
    "suppose that @xmath20 does not satisfy ( [ eqn : g(x)=min_g(y ) ] ) .",
    "but @xmath521 always satisfies @xmath522 or @xmath523 .",
    "the sequence @xmath524 is also obtained by the steepest descent algorithm . by the latter claim and the triangle inequality , we have @xmath525 .    [",
    "prop : sequence ] let @xmath10 be an l - convex function on @xmath30 . for @xmath526 and @xmath254 with @xmath273 ,",
    "there is a sequence @xmath527 such that    * @xmath528 , * @xmath529 for @xmath530 and @xmath531 for @xmath532 , and * @xmath533 for even @xmath60 and @xmath534 for odd  @xmath60 .",
    "take a sufficiently small @xmath535 .",
    "consider the function @xmath536 defined by @xmath537 by theorem  [ thm:2separable ] ( that will be proved independently ) , the second term is l - convex , and hence @xmath536 is also l - convex , and has the unique minimizer @xmath21 .",
    "apply the steepest descent algorithm to @xmath538 . by theorem  [ thm : bound ] , we obtain a sequence @xmath539 with ( 1 ) , ( 2 ) , and ( 3 ) for @xmath536 . since @xmath540 is sufficiently small ,",
    "any steepest direction @xmath541 for @xmath536 at @xmath542 is also a steepest direction for @xmath10 .",
    "thus the sequence also satisfies ( 1),(2 ) , and ( 3 ) for @xmath10 .",
    "let @xmath20 be a minimizer of an l - convex relaxation @xmath10 of an l - extendable function @xmath279 .",
    "take a minimizer @xmath288 of @xmath279 such that @xmath543 is minimum .",
    "we can take a sequence @xmath544 satisfying the conditions in proposition  [ prop : sequence ] , where @xmath528 . if @xmath545 , then @xmath546 ( @xmath547 ) and we are done .",
    "suppose ( indirectly ) @xmath548 .",
    "let @xmath549 and @xmath550 .",
    "notice that @xmath551 .",
    "applying lemma  [ lem : k - submo ] to @xmath73-submodular function @xmath10 on @xmath552 , we have @xmath553 since @xmath21 is a maximal element in @xmath552 and @xmath554 , we have @xmath555 , and @xmath556 . also it holds @xmath557 ( by proposition  [ prop : sequence ]  ( 3 ) ) .",
    "this implies @xmath558 here @xmath559 is also maximal ( in @xmath552 ) and has no zero components ( see ( [ eqn : sqcup ] ) ( 2 ) ) .",
    "thus @xmath560 belongs to @xmath38 , and is also a minimizer of @xmath279 . since @xmath561 ( by @xmath562 ) and @xmath563",
    ", we have @xmath564 . a contradiction to the minimality .",
    "let @xmath10 be an l - convex relaxation of @xmath279 .",
    "suppose that @xmath20 is not a minimizer of @xmath279 .",
    "then @xmath20 is not a minimizer of @xmath10 . by the l - optimality criterion ( theorem  [ thm : l - optimality ] ) , there is @xmath565 such that @xmath566 .",
    "if @xmath376 is a minimizer of @xmath10 , then by theorem  [ thm : persistency ] there is a minimizer @xmath567 of @xmath279 , as required .",
    "suppose that @xmath376 is not a minimizer of @xmath10 .",
    "there is @xmath568 such that @xmath569 . by lemma  [ lem : k - submo ] with @xmath570 , we have @xmath571 notice @xmath572 .",
    "hence @xmath573 , and @xmath574 is a required vertex in @xmath38 ( by ( [ eqn : sqcup ] )  ( 2 ) ) .",
    "we start with preliminary arguments . for a quarter integer @xmath575 ,",
    "define half - integers @xmath576_1 , [ u]_{1/2 } \\in \\zz/2 $ ] by @xmath577_1   : =    \\left\\ {   \\begin{array}{ll }    u       & { \\rm if } \\",
    "u \\in \\zz/2 , \\\\ \\mbox{the integer nearest to $ u$ } & { \\rm otherwise } ,    \\end{array}\\right.\\ ] ] @xmath577_{1/2 } : = \\left\\ {   \\begin{array}{ll } u & { \\rm if}\\   u \\in \\zz/2 , \\\\",
    "\\mbox{the non - integral half - integer nearest to $ u$ } & { \\rm otherwise}. \\end{array}\\right.\\ ] ]    [ lem:1/4 ] for @xmath578 , we have @xmath579_1 - [ v]_1 \\leq \\lceil u - v \\rceil , \\\\ & & \\lfloor u - v \\rfloor \\leq [ u]_{1/2 } - [ v]_{1/2 } \\leq \\lceil u - v \\rceil.\\end{aligned}\\ ] ]    it suffices to consider the cases @xmath580_1,[v]_1 ) =   ( u \\pm 1/4 , v)$ ] , @xmath581 , @xmath582 , or @xmath583 .",
    "suppose that the first two cases occur .",
    "then @xmath584 is not a half - integer , and hence @xmath585 .",
    "consider the last two cases . then @xmath586 and @xmath587 or @xmath588 and @xmath589 .",
    "hence @xmath590 .",
    "this means that @xmath584 is not an integer but a half - integer .",
    "thus @xmath591 .",
    "the second inequality follows from the same argument .",
    "let @xmath592 .",
    "let @xmath593 denote the unique path connecting @xmath176 and @xmath594 in @xmath31 .",
    "we regard vertices of @xmath593 as integers @xmath595 by the following way .",
    "associate vertex @xmath178 in @xmath593 with integer @xmath596",
    ". then @xmath597 and @xmath598 .",
    "similarly , let @xmath599 denote the unique path connecting @xmath176 and @xmath594 in @xmath600 .",
    "associate the midpoint of each edge @xmath284 in @xmath593 with half - integer @xmath601 .",
    "then the vertices of the product @xmath602 are integer vectors @xmath376 with @xmath603 , and the vertices of @xmath604 are half - integer vectors @xmath376 with @xmath605 . under this correspondence",
    ", it holds @xmath606_1 , \\quad z \\circ z ' = [   ( z+ z')/2]_{1/2 } \\quad ( z , z ' \\in p^ * \\subseteq ( \\zz/2)^n ) , \\ ] ] where @xmath607_{1}$ ] and @xmath607_{1/2}$ ] are extended on @xmath608 in componentwise .    for @xmath609 ,",
    "let @xmath610 denote the @xmath60-th unit vector , and let @xmath611 .",
    "we can assume that @xmath612 .",
    "then @xmath21 is represented as @xmath613 where we let @xmath614 .",
    "let @xmath615 and @xmath616 be the sets of integral points and half - integral points , respectively , in the polytope @xmath617 where we let @xmath618 .",
    "observe that the polytope @xmath619 is the set of points @xmath376 represented as @xmath620 for @xmath621 $ ] @xmath90 .",
    "note that this representation is unique .",
    "[ lem : z+z ] for @xmath622 , both @xmath623_1 $ ] and @xmath623_{1/2}$ ] belong to @xmath616 .",
    "we show that half - integer vectors @xmath624_1 $ ] and @xmath623_{1/2}$ ] belong to @xmath619 . by convexity ,",
    "@xmath625 belong to @xmath619 .",
    "hence @xmath626 notice that @xmath627 is integral . by lemma  [ lem:1/4 ]",
    ", we have @xmath628_1 - [ w_{i+1}]_1 \\leq d_{i } - d_{i+1 } , \\quad   0 \\leq [ w_i]_{1/2 } - [ w_{i+1}]_{1/2 } \\leq d_{i } - d_{i+1}.\\ ] ] this means that both @xmath629_1 $ ] and @xmath629_{1/2}$ ] belong to @xmath619 .",
    "let @xmath630 be an l - extendable function , and let @xmath631 be its l - convex relaxation .",
    "the discrete midpoint convexity inequality on @xmath632 is given by @xmath633_{1 } ) + g([(z+z')/2 ] _ { 1/2 } ) \\quad ( z , z ' \\in p^*).\\ ] ] in particular , for @xmath634 , we have @xmath635 for example , @xmath636 for @xmath637 and @xmath638 for @xmath639 . thus",
    "@xmath640_1 = \\pi_j$ ] and @xmath640_{1/2 } = \\pi_i/2 + \\pi_j/2 $ ] .",
    "from ( [ eqn : midpoint_p * ] ) , we see the first equality . the remaining are obtained in the same way .",
    "[ lem : dom ] for @xmath641 , it holds @xmath642 .",
    "we use the induction on @xmath643 .",
    "we can assume that @xmath644 belongs to @xmath615 .",
    "indeed , modify @xmath10 and @xmath279 so that they take @xmath46 on points not belonging to @xmath619 . by lemma  [ lem : z+z ]",
    ", @xmath10 is still l - convex , and hence is an l - convex relaxation of @xmath279 . in particular @xmath279",
    "is l - extendable .",
    "we may assume that one of @xmath645 , say @xmath20 , is not a minimizer of @xmath279 ( by adding a 2-separable l - convex function @xmath646 to @xmath647 if necessarily ) .",
    "use expression ( [ eqn : expression ] ) to represent @xmath648 . by induction",
    "it suffices to show that each @xmath649 with @xmath650 belongs to @xmath644 , since @xmath651 and @xmath652 . by theorem  [ thm : optimality_h ] with expression ( [ eqn : represented ] ) , there is @xmath61 such that @xmath653 and @xmath654 .",
    "consider an index @xmath655 with @xmath650 .",
    "we show that @xmath656 . by induction for @xmath657",
    ", we have @xmath658 . by applying the midpoint convexity ( [ eqn : midpoint_p * ] ) for @xmath10 at @xmath659 and at @xmath660",
    ", we have @xmath661 . by ( [ eqn : pi1 ] )",
    ", we have @xmath662 .",
    "similarly , by ( [ eqn : pi2 ] ) , we have @xmath663 .",
    "by ( [ eqn : pi3 ] ) we have @xmath664 . finally , by ( [ eqn : pi4 ] )",
    ", we have @xmath656 , as required .    the essence of the proximity theorem is the following , where this lemma may be viewed as an analogue of ( * ? ? ?",
    "* ( 20.37 ) ) .",
    "[ lem : pi_i ] for @xmath287 and a minimizer @xmath21 of @xmath279 with @xmath665 , we have @xmath666    as above , we can assume that @xmath644 belongs to @xmath615 , and @xmath667 ( by lemma  [ lem : dom ] ) .",
    "then @xmath21 is a unique minimizer of @xmath279 over @xmath615 .",
    "we use the induction on @xmath543 . consider first the case where @xmath668 for some @xmath60 with @xmath669 . by theorem  [ thm : optimality_h ] with induction",
    ", we have @xmath670 .",
    "by @xmath671 we have @xmath672 by @xmath673 , we have @xmath674 . by @xmath675 , we have @xmath676 .",
    "thus @xmath677 holds .",
    "consider the general case .",
    "take @xmath60 with @xmath669 .",
    "we may assume that there is @xmath678 with @xmath679 .",
    "by induction for @xmath657 , we have @xmath680 by ( [ eqn : j > i+j ] ) and ( [ eqn : pi1 ] ) , we have @xmath681 , and , by ( [ eqn : pi2 ] ) , @xmath682 .",
    "similarly , by ( [ eqn : j > i+j ] ) and ( [ eqn : pi3 ] ) , we have @xmath683 , and , by ( [ eqn : pi4 ] ) , @xmath684 .",
    "thus we have @xmath685 , as required .",
    "we are ready to prove theorem  [ thm : proximity ] .",
    "let @xmath279 be a midpoint l - extendable function on @xmath30 , and let @xmath20 be a minimizer of @xmath279 over @xmath38 .",
    "let @xmath21 be a minimizer of @xmath279 over @xmath30 with @xmath686 .",
    "we can assume that @xmath290 .",
    "consider @xmath615 as above . since @xmath20 is a minimizer of @xmath279 over @xmath38",
    ", we have @xmath687 for an even integer @xmath688 . on the other hand , by lemma  [ lem : pi_i ]",
    ", we have @xmath689 for @xmath690 if @xmath669 .",
    "this means that @xmath691 is impossible .",
    "thus @xmath692 for each @xmath60 .",
    "hence @xmath693 .",
    "consider the case where @xmath279 admits as an exact l - convex relaxation . in the proof of lemma  [ lem : pi_i ]",
    ", we can assume that @xmath21 is also a unique minimizer of @xmath10 ( by perturbing @xmath694 if necessarily ) .",
    "consequently the statement of lemma  [ lem : pi_i ] holds for index @xmath60 with @xmath695 .",
    "therefore , in the above argument , @xmath696 is impossible .",
    "thus we obtain the latter statement of theorem  [ thm : proximity ] .",
    "it suffices to consider the case where @xmath31 is a path .",
    "hence @xmath31 is naturally identified with @xmath26 , and @xmath697 .",
    "suppose that @xmath100 is convex on @xmath26 .",
    "then it is easy to see that @xmath698 .",
    "thus @xmath100 is ( alternating ) l - convex .",
    "the converse is also easy . if @xmath699 is convex , then @xmath700 defined by @xmath701 is also convex ( and l - convex ) on @xmath34 , and @xmath100 is l - extendable .",
    "the converse is also easy : the restriction of convex function on @xmath702 to @xmath26 is also convex on @xmath26 .",
    "the latter part is straightforward to be verified .",
    "we begin with preliminary arguments on the convexity of a tree .",
    "let @xmath703 be the set of all formal combinations of vertices of form @xmath704 , where @xmath284 is an edge , and @xmath705 and @xmath706 are nonnegative reals with @xmath707 .",
    "informally speaking , @xmath703 is a  tree \" obtained by filling the  unit segment \" to each edge",
    ". we can naturally regard @xmath31 and @xmath34 as subsets of @xmath703 ( by @xmath708 ) .",
    "also the metric @xmath214 on @xmath31 is extended to @xmath703 as follows . for two points @xmath709 , @xmath710 , if @xmath711 , then @xmath712 .",
    "otherwise we can assume that @xmath713 .",
    "define @xmath714 . for points",
    "@xmath715 and @xmath716 $ ] , there is a unique point @xmath717 , denoted by @xmath718 , such that @xmath719 , @xmath720 , and @xmath721 . consider the cartesian product @xmath722 . for @xmath723 , define @xmath724 .",
    "a function @xmath100 on @xmath722 is said to be _ convex _ if it satisfies @xmath725 , x , y \\in \\bar t^n).\\ ] ] in the case where @xmath31 is a path of infinite length , @xmath703 is isometric to @xmath42 , and this convexity coincides with the ordinary euclidean convexity .",
    "an old theorem in location theory , due to dearing , francis , and lowe  @xcite , says that the distance function @xmath214 is convex on @xmath726 .",
    "[ lem : dfl ] @xmath214 is convex on @xmath726 .",
    "we note local expressions of functions @xmath727 and @xmath728 .",
    "[ lem:123 ] let @xmath279 be an even function on @xmath26 and let @xmath729 .",
    "* for @xmath730 , we have @xmath731 * for @xmath732 , we have @xmath733 * for @xmath734 , we have @xmath735 & & \\ = \\left\\ { \\begin{array}{ll } h(d(s , a ) + d(t , b ) + 2 ) & { \\rm if } \\ ( a , b ) = ( u , v ) , \\\\    h(d(s , a ) + d(t , b ) + 1 ) & { \\rm if } \\ a = u , b \\neq v\\ { \\rm or}\\ a \\neq u , b = v,\\\\    h(d(s , a)+ d(t , b ) ) & { \\rm if}\\ a \\neq u , b \\neq v.   \\end{array}\\right .   \\\\\\end{aligned}\\ ] ]    ( 1 ) .",
    "observe @xmath736 .",
    "thus @xmath737 implies @xmath738 .",
    "also @xmath739 implies @xmath740 , and @xmath741 implies that @xmath742 ( by the evenness of @xmath279 ) .",
    "consider the case where the right hand side is equal to @xmath743",
    ". then @xmath744 must hold .",
    "therefore the left hand side is @xmath745 .",
    "suppose that the right hand side is equal to @xmath746",
    ". then @xmath747 holds .",
    "therefore the left hand side is @xmath748 .",
    "suppose that the right hand side is equal to @xmath749",
    ". then @xmath750 holds .",
    "therefore the left hand side is @xmath751 .",
    "consider the case where the right hand side is equal to @xmath752 .",
    "then @xmath753 and @xmath754 must hold .",
    "the left hand side is equal to @xmath755 . consider the case where the right hand side is equal to @xmath756 .",
    "then @xmath753 and @xmath757 or @xmath758 and @xmath754 must hold .",
    "the left hand side is equal to @xmath759 .",
    "consider the case where the right hand side is equal to @xmath743 .",
    "then @xmath747 and @xmath760 must hold .",
    "the left hand side is equal to to @xmath761 .",
    "consider the case where the right hand side is equal to @xmath746 . then @xmath762 and @xmath763 , @xmath750 and @xmath764 , @xmath750 and @xmath765 , or @xmath766 and @xmath763 .",
    "the left hand side is equal to @xmath767 .    consider the case where the right hand side is equal to @xmath749 . then @xmath768 and @xmath763 .",
    "the left hand side is equal to @xmath769 .",
    "[ [ proof - of-1 . ] ] proof of ( 1 ) .",
    "+ + + + + + + + + + + + +    take any vertex @xmath20 of @xmath31 and its two distinct neighbors @xmath770 .",
    "it suffices to show @xmath771 .",
    "observe that @xmath772 or @xmath773 holds . for the first case , @xmath774 by the convexity of @xmath279 .",
    "for the second case , @xmath775 by the monotonicity of @xmath279 .",
    "[ [ proof - of-2 . ] ] proof of ( 2 ) .",
    "+ + + + + + + + + + + + +    extend @xmath776 to @xmath777 by @xmath778 if @xmath779 and @xmath780 otherwise .",
    "take @xmath781 .",
    "we are going to show the discrete midpoint convexity for @xmath364 : @xmath782    since @xmath279 is convex , we have @xmath783 by lemma  [ lem : dfl ] , we have @xmath784 .",
    "since @xmath279 is nondecreasing , we have @xmath785    @xmath786    let @xmath787 and @xmath788 .",
    "the claim is obvious when @xmath789 or both @xmath790 and @xmath791 belong to @xmath31 .",
    "so we consider the other cases .",
    "case 1 : @xmath792 and @xmath793 .",
    "then @xmath794 is a half - integer , and hence we have @xmath795 since @xmath796 , we have @xmath797 , and @xmath798 hence we have the claim .",
    "case 2 : @xmath799 and @xmath793 .",
    "we can take edges @xmath800 and @xmath801 of @xmath31 such that @xmath790 and @xmath791 are the midpoints of @xmath800 and @xmath801 , respectively .",
    "in particular , @xmath802 .",
    "we can assume that @xmath803 then @xmath804 , and @xmath805 .",
    "suppose that @xmath806 is odd .",
    "then @xmath142 and @xmath143 belong to different color classes ; so @xmath807 and @xmath808 or @xmath809 and @xmath810 . thus @xmath811 , and",
    "the claim is true .",
    "suppose that @xmath806 is even",
    ". then @xmath812 and @xmath813 or @xmath814 and @xmath815 .",
    "thus we have @xmath816 by @xmath817 that is odd , we have @xmath818 thus we have the claim .    therefore @xmath366 is l - convex . we verify the latter part of ( 2 ) . for the case for @xmath819 , we obtain the formula from lemma  [ lem:123 ]  ( 1 ) . for other cases , we have @xmath820 if @xmath821 , then @xmath822 , and @xmath823 is even . by lemma  [ lem:123 ]  ( 2 ) , we obtain @xmath824 . the argument for the case",
    "@xmath825 is the same .",
    "suppose that @xmath826 with @xmath827 .",
    "then @xmath828 , and @xmath829 is even . by lemma  [ lem:123 ]  ( 3 )",
    "applied to @xmath830 , we obtain the required formula .",
    "[ [ proof - of-3 . ] ] proof of ( 3 ) .",
    "+ + + + + + + + + + + + +    we show the discrete midpoint convexity for @xmath373 .",
    "take vertices @xmath831 .",
    "then we have @xmath832 where we use convexity of @xmath279 in the first inequality , and use the monotonicity and lemma  [ lem : dfl ] in the second .",
    "@xmath833 .",
    "let @xmath834 and @xmath835 .",
    "case 1 : @xmath796 and @xmath836 . in this case ,",
    "@xmath837 and @xmath838 hold , and hence the claim holds .",
    "case 2 : @xmath839 and @xmath840 . in this case",
    ", there is an edge @xmath841 of @xmath31 such that @xmath790 is the midpoint of @xmath841 .",
    "we can assume that @xmath842 and @xmath843 . since @xmath844 is not an integer",
    ", we have @xmath845 then the claim follows from @xmath838 , and @xmath846 .    case 3 : @xmath799 and @xmath793 .",
    "let @xmath847 denote the edge such that @xmath790 is the midpoint of @xmath847 , and let @xmath841 denote the edge such that @xmath791 is the midpoint of @xmath841 .",
    "we can assume that @xmath848 and @xmath849 .",
    "case 3.1 : @xmath850 .",
    "since @xmath363 have the same color and @xmath851 have the same color , @xmath852 must be odd .",
    "hence we have @xmath853 as required .",
    "case 3.2 : @xmath854 . in this case ,",
    "@xmath855 , and hence we have the claim .    we show the latter part of ( 3 ) .",
    "it holds that @xmath856 .",
    "suppose that @xmath857 .",
    "then @xmath858 , @xmath859 , and @xmath860 is odd .",
    "suppose that @xmath861 .",
    "then @xmath862 , and @xmath863 . thus by lemma  [ lem:123 ]  ( 2 ) , we have @xmath864 .",
    "suppose that @xmath865 .",
    "then @xmath866 , and @xmath867 . by lemma  [ lem:123 ]  ( 2 )",
    ", we have @xmath868 .",
    "the argument for @xmath869 is similar .",
    "suppose that @xmath826 .",
    "if @xmath870 and @xmath871 , then @xmath862 and @xmath872 .",
    "also @xmath873 , and @xmath860 is even .",
    "apply lemma  [ lem:123 ]  ( 3 ) to @xmath874 , we obtain the formula .",
    "if @xmath875 and @xmath871 or @xmath870 and @xmath876 , then @xmath877 and @xmath878 or @xmath879 and @xmath880 , and we have @xmath881 with @xmath860 even . by lemma  [ lem:123 ]  ( 2 ) to @xmath882 , we obtain the formula . if @xmath875 and @xmath876 , then @xmath877 , @xmath880 , and @xmath883 with @xmath884 . by lemma  [ lem:123 ]",
    "( 2 ) to @xmath885 , we obtain the formula .",
    "( 1 ) . by theorem  [ thm:2separable ] ,",
    "all functions @xmath886 are locally basic @xmath0-submodular .",
    "hence , by theorem  [ thm : iwy14 ] , the minimization of @xmath384 over @xmath250 and @xmath247 can be done in @xmath887 time . by theorem  [ thm : bound ] , the steepest descent algorithm for @xmath308 with initial point @xmath276 iterates @xmath888 steps to obtain an optimal solution @xmath410 of @xmath384 .",
    "hence the total time is @xmath889 .",
    "let @xmath890 .",
    "it suffices to show @xmath891 for each @xmath130 .",
    "we may suppose that @xmath892 .",
    "namely @xmath893 is a white vertex , and @xmath894 is odd . thus @xmath895 . if @xmath896 , then by monotonicity and nonnegativity we have @xmath897 .",
    "if @xmath898 , then by nonnegativity we have @xmath899    next consider @xmath900 .",
    "suppose that @xmath901 is black .",
    "then @xmath902 and @xmath903 is odd .",
    "thus @xmath904 . by the same argument above",
    ", we have @xmath905 .",
    "suppose that @xmath901 is also white ; @xmath903 is even .",
    "if the unique path between @xmath893 and @xmath21 contains @xmath901 , then @xmath906 , and @xmath907 .",
    "the same holds for the case where the unique path between @xmath901 and @xmath21 contains @xmath893 .",
    "suppose not .",
    "there is a vertex @xmath3 in the path between @xmath893 and @xmath901 such that @xmath3 belongs to the path between @xmath21 and @xmath893 and the path between @xmath21 and @xmath901 .",
    "therefore the rounded @xmath908 and @xmath909 are closer to @xmath3 .",
    "hence @xmath910 , and by monotonicity we have @xmath911 .",
    "in this section , as an application of the results in the previous section , we provide a new simple combinatorial ( weakly ) polynomial time algorithm to solve minimum cost maximum free multiflow problem .",
    "the design of such an algorithm was the original motivation of developing the theory of l - extendable functions .",
    "let @xmath139 be an undirected network on node set @xmath416 , edge set @xmath52 , terminal set @xmath912 , and edge - capacity @xmath913 .",
    "@xmath40-path _ in @xmath139 is a path connecting distinct terminals in @xmath40 .",
    "a _ multiflow _",
    "@xmath100 is a pair @xmath914 of a ( multi-)set @xmath915 of @xmath40-paths and a nonnegative - valued function @xmath916 satisfying the capacity constraint : @xmath917 if @xmath918 is integer - valued , then @xmath100 is called _ half - integral_. for distinct terminals @xmath919 , let @xmath920 denote the total value of the @xmath68-flow in @xmath100 , i.e. , @xmath921 let @xmath922 denote the total value on flows connecting @xmath142 , i.e. , @xmath923",
    ". then the total flow - value @xmath924 is defined by @xmath925 the _ maximum free multiflow problem _ ( mf )",
    "is :    ( mf ) : :    find a multiflow @xmath100 having the maximum total flow value    @xmath924 .",
    "a _ maximum free multiflow _ is a multiflow having the maximum total flow - value .",
    "observe that @xmath922 is the total flow value of the @xmath431-flow in @xmath100 , and hence is at most the minimum value @xmath926 of an @xmath431-cut .",
    "thus the total flow - value of any multiflow is at most @xmath927 . a classical theorem by lovsz  @xcite and cherkassky  @xcite says that this bound is always attained by a half - integral multiflow .",
    "[ thm : lc ] the maximum flow - value of a free multiflow is equal to @xmath928 and there exists a half - integral maximum free multiflow .",
    "karzanov  @xcite considered a minimum cost version of ( mf ) .",
    "now the network @xmath139 has a nonnegative edge - cost @xmath929 .",
    "the total _ cost _ @xmath930 of multiflow @xmath100 is defined by @xmath931 the _ minimum cost maximum free multiflow problem _ is :    ( mcmf ) : :    find a maximum free multiflow having the minimum total cost .",
    "there are two approaches to solve this problem .",
    "the first one is based on the following auxiliary maximum multiflow problem with a positive parameter @xmath932 :    ( m ) : :    find a multiflow @xmath100 maximizing    @xmath933 .",
    "if @xmath706 is sufficiently large , then an optimal multiflow in ( m ) is a minimum cost maximum free multiflow .",
    "karzanov  @xcite showed the half - integrality of ( m ) .",
    "[ thm : halfintegral ] for any @xmath934 , there exists a half - integral optimal multiflow in  @xmath935 .",
    "in particular there always exists a half - integral minimum cost free multiflow .",
    "the previous algorithms  @xcite are based on this formulation .",
    "the second approach , which we will mainly deal with , is based on a node - demand multiflow formulation .",
    "we are further given a nonnegative _ demand _",
    "@xmath936 on terminal set @xmath40 .",
    "a multiflow @xmath100 is said to be _ feasible _ ( to @xmath717 ) if @xmath937 for @xmath427 . the _ minimum cost feasible free multiflow problem _",
    "( n ) is :    ( n ) : :    find a feasible multiflow having the minimum total cost .    this problem ( n ) can solve ( mcmf ) . indeed ,",
    "for each @xmath427 , add new non - terminal node @xmath938 and new edge @xmath939 with capacity @xmath926 and zero cost , and replace each edge @xmath940 by @xmath941 .",
    "let @xmath942 for @xmath427 .",
    "any feasible multiflow @xmath100 for the new network must satisfy @xmath943 . after contracting edges @xmath939 , the resulting @xmath100 is necessarily a maximum free multiflow in the original network .",
    "also all maximum free multiflows are obtained in this way .",
    "indeed , by theorem  [ thm : lc ] , a maximum free multiflow is simultaneously a maximum single commodity @xmath431-flow for @xmath427 .",
    "hence @xmath944 must hold , and @xmath100 is extended to a feasible multiflow in the new network .",
    "the problem ( n ) itself seems natural and fundamental , but has not been well - studied so far . also we do not know whether ( n ) reduces to ( m ) , and whether ( m ) reduces to ( n ) .",
    "recently fukunaga  @xcite addressed the problem ( n ) in connection with a class of network design problems , called ( generalized ) _ terminal backup problems _  @xcite .",
    "as was noted by him , the problem ( n ) is also formulated as the following cut - covering linear program .",
    "@xmath945 where @xmath946 denotes the set of node subsets @xmath947 such that @xmath63 contains @xmath142 and does not contain other terminals . the problems ( n ) and",
    "( l ) are equivalent in the following sense .",
    "[ see @xcite ] [ lem : nvsl ]    * for an optimal solution @xmath100 of ( n ) , the flow - support @xmath948 defined by @xmath949 @xmath950 is an optimal solution of ( l ) .",
    "* for an optimal solution @xmath948 of ( l ) , a feasible multiflow @xmath100 in @xmath139 with the capacity @xmath20 exists , and is optimal to ( n ) .",
    "in particular the optimal values of the two problems are the same .",
    "a feasible multiflow @xmath100 contains an @xmath431-flow with the total flow - value at least @xmath951 .",
    "the capacity of any @xmath431-cut under capacity @xmath20 is at least @xmath951 for @xmath427 .",
    "this means that @xmath20 is feasible to ( l ) .",
    "hence the optimal value of ( l ) is at least that of ( n ) .",
    "conversely , for a feasible solution @xmath20 of ( l ) , consider a maximum free multiflow @xmath100 under capacity @xmath20 . by theorem  [ thm :",
    "lc ] , @xmath922 is equal to the minimum capacity of an @xmath431-cut under capacity @xmath20 , which is at least @xmath951 . thus @xmath100 is feasible , and @xmath952 .",
    "this means that the optimal value of ( n ) is at least that of ( l ) .",
    "notice that a feasible multiflow exists ( or ( l ) is feasible ) if and only if @xmath953 we will assume this condition in the sequel .",
    "fukunaga  @xcite proved the half - integrality for ( n ) and ( l ) .",
    "[ thm : fuku ] there exist half - integral optimal solutions in ( n ) and in ( l ) .",
    "they can be obtained in strongly polynomial time .",
    "the polynomial time solvability depends on a generic lp - solver for solving ( l ) ; observe that the separation of the feasible region of ( l ) is done by minimum cut computations , and thus ( l ) is solved by the ellipsoid method .",
    "also ( l ) has an extended formulation of polynomial size , , consider a single commodity @xmath954-flow @xmath955 under capacity @xmath20 with total flow value at least @xmath951 . ] and thus is solved by the interior point method .",
    "as an application of results in the previous section , we present a purely combinatorial polynomial time scaling algorithm to obtain half - integral optimal solutions in ( n ) , in ( l ) , and in ( mcmf ) .",
    "the main result in this section is as follows :    [ thm : multiflow_main ] there exists an @xmath956 time algorithm to solve ( n ) , ( l ) , and ( mcmf ) , where @xmath2 is the number of nodes , @xmath3 is the number of edges , @xmath0 is the number of terminals , @xmath4 is the maximum of edge - costs , @xmath5 is the total sum of edge - capacities .    to the best of our knowledge",
    ", our algorithm is the first combinatorial polynomial time algorithm for ( n ) and ( l ) , and the first combinatorial algorithm for ( mcmf ) with an explicit polynomial running time .    in section  [ subsec : multiflow_duality ] , we formulate a dual of ( n ) as a convex location problem on a ( topological ) tree @xmath957 that is the union of the coordinate axises in @xmath958 , and establish the half - integrality ( proposition  [ prop : min - max ] ) .",
    "then we give an optimality criterion ( lemma  [ lem : optimality ] ) for ( n ) . in section  [ subsec : double_covering ] , we explain an algorithm to construct an optimal multiflow in ( n ) from a given optimal dual solution .",
    "this algorithm is a slight modification of the algorithm of @xcite devised for ( m ) . in section  [ subsec : proximity_scaling ] , we present an algorithm to solving a dual of ( n ) , providing the proof of theorem  [ thm : multiflow_main ] . by the half - integrality , the dual of ( n )",
    "is the minimization of a 2-separable l - convex function on a tree obtained by joining half - integral points in @xmath957 .",
    "we will design a proximity scaling algorithm by considering a @xmath39-separable l - convex function minimization over the tree of @xmath959-integral points in each scaling phase @xmath122 .",
    "the time complexity will be estimated by the results of the previous section .",
    "we also sketch how to adapt our algorithm to solve  ( m ) . in section  [ subsec : additional ] , we give additional results and remarks . in particular , we explain that our combinatorial algorithm gives a practical implementation of fukunaga s @xmath960-approximation algorithm  @xcite for capacitated terminal backup problem .",
    "we also give a further simple and instructive but pseudo - polynomial time algorithm to solve ( n ) .",
    "we first formulate a dual of ( n ) as a continuous location problem on a tree ( in topological sense ) .",
    "let @xmath961 denote the set of functions on @xmath40 .",
    "for each terminal @xmath427 , let @xmath962 denote the function defined by @xmath963 and @xmath964 for @xmath965 .",
    "namely @xmath962 is the @xmath142th unit vector of @xmath961 .",
    "let @xmath966 , and let @xmath967 .",
    "the metric @xmath860 on @xmath957 is defined by @xmath968 the space @xmath957 is isometric to a _ star _ obtained by gluing half - lines @xmath43 along the origin .",
    "notice that @xmath860 is not equal to an induced metric on @xmath961 .",
    "let @xmath297 .",
    "consider the following continuous location problem on @xmath957 : @xmath969 where @xmath970 denotes @xmath971 . a feasible solution @xmath972 of ( d )",
    "is called a _",
    "potential _ , and called _ half - integral _ if each @xmath973 is a half - integral vector in @xmath961",
    ". a potential @xmath972 is called _ proper _ if @xmath974 for each @xmath427 and @xmath975 with @xmath976 .",
    "[ prop : min - max ] the minimum value of ( n ) is equal to the maximum value of ( d ) .",
    "moreover there exists a proper half - integral optimal potential in ( d ) .",
    "we will give an algorithmic proof in section  [ subsub : simple ] , and here give a sketch of the proof .",
    "for a ( half - integral ) potential @xmath972 and a terminal @xmath427 , let @xmath977 be a ( half - integral ) potential defined by @xmath978 if @xmath976 and @xmath979 , and @xmath980 otherwise .",
    "then the objective value of ( d ) does not decrease .",
    "therefore there always exists a proper optimal potential in ( d ) .",
    "let @xmath981 .",
    "the lp - dual of ( l ) is equivalent to : @xmath982 by the standard uncrossing argument , one can show that there always exists an optimal solution @xmath983 such that for @xmath984 , it holds @xmath985 or @xmath986 if @xmath987 for @xmath427 , and @xmath988 if @xmath989 and @xmath990 for distinct @xmath991 .",
    "such a solution is called _",
    "laminar_.    thus it suffices to show that for a proper potential @xmath972 there is @xmath992 satisfying @xmath993 and that for a laminar solution @xmath992 , there is a proper potential @xmath972 satisfying ( [ eqn : suffice ] ) .",
    "let @xmath994 be a proper potential .",
    "for @xmath427 with @xmath995 , suppose that @xmath996 with @xmath997 .",
    "for @xmath998 , define @xmath999 and @xmath1000 by @xmath1001 where we let @xmath1002 . then @xmath1003 .",
    "define @xmath992 by @xmath1004 and @xmath1005 for other @xmath63 .",
    "then ( [ eqn : suffice ] ) holds .",
    "conversely , let @xmath983 be a laminar solution of ( [ eqn : lp - dual ] ) .",
    "then we can assume that @xmath1006 with @xmath1007 .",
    "for each node @xmath60 , if @xmath60 does not belong to any member of @xmath1008 , then define @xmath1009 .",
    "otherwise there uniquely exist @xmath427 and @xmath1010 such that @xmath1011 and @xmath1012 , where @xmath1013 .",
    ". then we obtain a proper potential @xmath994 of ( d ) satisfying ( [ eqn : suffice ] ) .    by theorem  [ thm : fuku ] , for every cost vector @xmath111 ( not necessarily nonnegative ) there exists a half - integral optimal solution in ( l ) . by the total dual ( half-)integrality , there exists a half - integral laminar optimal solution in ( [ eqn : lp - dual ] ) , and there exists a half - integral optimal potential in ( d ) .",
    "we next provide an optimality criterion for ( n ) and ( d ) .",
    "for a potential @xmath972 , an @xmath68-path @xmath1015 is said to be _",
    "@xmath972-geodesic _ if @xmath1016 observe from the triangle inequality that @xmath1017 always holds .",
    "[ lem : optimality ] a feasible flow @xmath1018 and a potential @xmath972 are both optimal if and only if they satisfy the following conditions :    * for each edge @xmath62 , if @xmath1019 , then @xmath1020 .",
    "* for each edge @xmath62 , if @xmath1021 , then @xmath1022 . * for each path @xmath1023 in @xmath915 , if @xmath1024 , then @xmath1023 is @xmath972-geodesic .",
    "* for each terminal @xmath142 , if @xmath1025 , then @xmath1026 .    for a path @xmath1027 , let @xmath1028",
    "the statement follows from the previous proposition , and @xmath1029 where @xmath841 is taken over all unordered pairs of distinct terminals , and we use @xmath1030      here we describe an algorithm to construct an optimal multiflow in ( n ) from an optimal potential @xmath972 in ( d ) under the condition that each edge - cost is positive :    ( cp ) : :    @xmath1031 for each edge @xmath1032 .",
    "we will see in remark  [ rem : howto ] that we can assume ( cp ) by a perturbation technique . as karzanov",
    "@xcite did for ( m ) , a half - integral optimal multiflow @xmath100 in ( n ) is also obtained by an integral circulation of a certain directed network ( _ double covering network _ ) @xmath1033 associated with an optimal potential @xmath972 .",
    "let @xmath972 be a ( proper ) potential .",
    "let @xmath1034 denote the set of non - terminal nodes @xmath60 with @xmath1035 .",
    "for each terminal @xmath427 , let @xmath1036 denote the set of nodes consisting of terminal @xmath142 and non - terminal nodes @xmath60 with @xmath1037 .",
    "then @xmath416 is the disjoint union of @xmath1034 and @xmath1036 for @xmath427 .",
    "let @xmath1038 denote the set of edges @xmath62 with @xmath1039 , and let @xmath1040 denote the set of edges @xmath62 with @xmath1041 .",
    "the _ double covering network _",
    "@xmath1033 relative to @xmath972 is a directed network constructed as follows . for each terminal @xmath142 ,",
    "consider two nodes @xmath1042 . for each non - terminal node @xmath60 not in @xmath1034 , consider two nodes @xmath1043 .",
    "for each ( non - terminal ) node @xmath60 in @xmath1034 , consider @xmath1044 nodes @xmath1045 @xmath1046 . the node set of @xmath1033 consists of these nodes .",
    "next we define the edge set @xmath4 of @xmath1033 . for each edge",
    "@xmath1047 , define the edge set @xmath1048 by : @xmath1049 notice that for @xmath1047 , potentials @xmath973 and @xmath1050 are different points in @xmath957 since @xmath1051 is positive . the upper capacity of the two edges in @xmath1048 is defined as @xmath418 .",
    "the lower capacity is defined as @xmath76 if @xmath1052 and @xmath418 if @xmath1053 . for each ( non - terminal ) node @xmath60 in @xmath1034 , the edge set @xmath1054 is defined as @xmath1055 .",
    "the lower capacity and the upper capacity of these edges are defined as @xmath76 and @xmath46 , respectively . for terminal @xmath427 ,",
    "add edge @xmath1056 .",
    "the lower capacity is defined as @xmath951 , and the upper capacity is defined as @xmath46 if @xmath1057 and @xmath951 otherwise .",
    "the edge set of @xmath1058 is the ( disjoint ) union of all edge sets @xmath1048 @xmath1059 , @xmath1054 @xmath1060 , @xmath1061 @xmath1046 ( as a multiset ) . as in figure",
    "[ fig : double_covering ] , readers may imagine that @xmath1033 is embedded into @xmath957 by the map @xmath1062 ,    consider an integral feasible circulation @xmath1063 of this network ( if it exists ) .",
    "decompose @xmath148 into the sum of characteristic vectors of directed cycles @xmath1064 with positive integral coefficients @xmath1065 , where @xmath8 is at most the number of edges of @xmath1033 . by construction of @xmath1033 ,",
    "any directed cycle must meet @xmath1066 for some terminal @xmath142 , and next meets @xmath1067 for other terminal @xmath143 after meeting @xmath1066 .",
    "delete all terminal edges @xmath1066 from each @xmath1068 , and obtain directed paths @xmath1069 @xmath1070 .",
    "then each @xmath1071 is a path from @xmath1072 to @xmath1073 for distinct @xmath919 .",
    "let @xmath1074 be the @xmath40-path in the original network @xmath139 obtained from @xmath1075 by replacing @xmath1076 or @xmath1077 by @xmath60 ( and removing @xmath1078 ) .",
    "let @xmath915 be the union of @xmath40-paths @xmath1074 over @xmath1079 .",
    "let @xmath1080 .",
    "then @xmath1081 is a half - integral multiflow ; we see in the proof of the next lemma that @xmath1082 indeed satisfies the capacity constraint .",
    "[ prop : f_phi ] a potential @xmath972 is optimal if and only if there exists a feasible circulation in @xmath1033 .",
    "moreover , for any ( integral ) feasible circulation @xmath148 , the ( half - integral ) multiflow @xmath1082 is optimal to ( p ) .",
    "( only if part ) .",
    "let @xmath1083 be an optimal multiflow .",
    "then @xmath100 satisfies the conditions of lemma  [ lem : optimality ] .",
    "consider an path @xmath1084 in @xmath915 with @xmath1024 . by condition  ( 2 ) with ( cp",
    ") , each edge in @xmath1023 belongs to @xmath1085 . by condition  ( 4 ) , there are an index @xmath1086 such that @xmath1087 and @xmath1088 with @xmath1089 , or @xmath1090 , @xmath1091 , and @xmath1088 with @xmath1092 . for the former case , the union of @xmath1048 over edges @xmath62 in @xmath1023",
    "forms an @xmath1093-path and an @xmath1094-path . for the latter case , the union of @xmath1095 and @xmath1048 over edges @xmath62 in @xmath1023",
    "forms an @xmath1093-path and an @xmath1094-path .",
    "hence a feasible circulation @xmath1096 is constructed as follows . for each terminal @xmath142 ,",
    "define @xmath1097 . for each edge",
    "@xmath1047 , define @xmath1098 for @xmath1099 . for each non - terminal",
    "node @xmath1100 and distinct @xmath919 , define @xmath1101 as the total flow - value of @xmath68-flows in @xmath100 using node @xmath60 . then the resulting @xmath1102 is a feasible circulation in @xmath1033 .",
    "( if part ) .",
    "we verify that @xmath972 and @xmath1082 satisfy the conditions of lemma  [ lem : optimality ] .",
    "since there is no edge in @xmath1033 coming from @xmath302 with @xmath1103 , the multiflow @xmath1104 does not use edge @xmath62 with @xmath1103 , and hence satisfies the condition ( 2 ) .",
    "observe that @xmath1105 for an edge @xmath1106 with @xmath1107 . from this , if @xmath1108 , then @xmath1109 , proving the condition ( 1 ) . for terminal @xmath142",
    ", @xmath1110 is the sum of @xmath1111 over indices @xmath61 such that the cycle @xmath1112 contains @xmath1066 , which is equal to the sum of @xmath1113 over @xmath40-paths @xmath1114 connecting terminal @xmath142 , i.e. , @xmath1115",
    ". thus @xmath1116 ; in particular @xmath1082 is feasible to @xmath717 .",
    "moreover @xmath1117 if @xmath1118 , proving the condition ( 4 ) .    finally consider condition ( 3 ) for @xmath1119 . observe from the construction of @xmath1033 that @xmath1120 , and @xmath1121 .",
    "since the metric space @xmath957 is a tree , we obtain @xmath1122 ; see the next lemma .    in the last part of the proof , we use the following distance property of a tree , which we can easily prove ( by an inductive argument ) .",
    "let @xmath419 be a tree ( with a positive edge - length ) , and let @xmath1123 be a sequence of vertices in @xmath419 .",
    "suppose that    * @xmath1124 for @xmath1125 , and * @xmath1126 for @xmath1127",
    ".    then @xmath1128 .",
    "a simple example @xmath1129 shows that the condition ( 1 ) is necessary .",
    "one may wonder why the edge - cost positivity ( cp ) is needed .",
    "consider the case where some of edges have zero cost .",
    "there may exist edges @xmath1052 with @xmath1130 .",
    "therefore we need to add edges to @xmath1033 corresponding to those edges .",
    "even if we manage to construct a set @xmath915 of paths from a feasible circulation in a modified network , consecutive nodes in some path @xmath1023 may have the same potential , and does not guarantee that @xmath1023 is @xmath972-geodesic ( @xmath1023 may connect the same terminal ) .",
    "[ rem : howto ] the modification is the same as that given in @xcite used for ( m ) .",
    "let @xmath1131 denote the set of edges @xmath282 with @xmath1132 .",
    "define a positive edge - cost @xmath1133 by @xmath1134 then any half - integral optimal solution @xmath20 in ( l ) with edge - cost @xmath1133 is also optimal to ( l ) with edge - cost @xmath111 .",
    "indeed , by the half - integrality theorem  ( theorem  [ thm : fuku ] ) , it suffices to show that for every half - integral solution @xmath21 in ( l ) with cost @xmath111 it holds @xmath1135 where we simply denote @xmath1136 by @xmath1137 .",
    "indeed , we have @xmath1138 this implies that @xmath1139 . since @xmath1140 and @xmath1141 are half - integers , we have @xmath1142 , as required .      in this section",
    "we present an algorithm to prove theorem  [ thm : multiflow_main ] . by the arguments in the previous section",
    ", it suffices to solve ( d ) .",
    "let @xmath1143 be defined by @xmath1144 where @xmath1145 denotes the indicator function of @xmath1146 : @xmath1147 then ( d ) is equivalent to the minimization of @xmath308 .",
    "the range in which an optimum exists is given as follows , where @xmath1148 .",
    "[ lem : region ] there exists a proper half - integral optimal potential @xmath972 such that @xmath1149 for @xmath153 .",
    "take a proper half - integral optimal potential @xmath972 .",
    "suppose that @xmath1150 for @xmath427 , and that @xmath1151 with @xmath1152 .",
    ". then @xmath1153 and @xmath1154 .",
    "thus there is an index @xmath1155 with @xmath1156 .",
    "let @xmath1157 .",
    "for each @xmath1158 , it holds @xmath1159 .",
    "hence @xmath1160 .",
    "let @xmath1161 , which is a half - integer .",
    "define proper half - integral potential @xmath977 by @xmath1162 then @xmath1163 if @xmath1158 with @xmath65 , and @xmath1164 otherwise .",
    "also @xmath1165 and @xmath1166 for other terminal @xmath965 . by feasibility  ( [ eqn : feasible ] ) , we obtain @xmath1167 thus @xmath977 is also optimal .",
    "let @xmath1168 .",
    "repeat this procedure to obtain an optimal potential @xmath972 as required .",
    "let @xmath1169 , and let @xmath1170 be the subset of points @xmath1171 of @xmath957 with @xmath1172 . by the above lemma",
    ", ( d ) is equivalent to the minimization of @xmath308 over @xmath1173 . for @xmath1174 ,",
    "let @xmath1175 denote the tree on @xmath1176 such that vertices @xmath84 are adjacent if @xmath1177 . in particular , @xmath1175 is a ( graph - theoretical ) tree discretizing @xmath1170 .",
    "the graph metric of @xmath1178 is denoted by @xmath1179 .",
    "then it holds @xmath1180 the two color classes of @xmath1175 are denoted by @xmath1181 and @xmath1182 , and suppose @xmath1183 .",
    "then @xmath1184 is naturally identified with the subdivision of @xmath1175 .",
    "hence @xmath1185 for @xmath427 , define @xmath1186 by @xmath1187 for each edge @xmath302 , define @xmath1188 by @xmath1189 let @xmath1190 be the restriction of @xmath308 to @xmath1191 , which is given by @xmath1192 for each edge @xmath62 , consider even function @xmath1193 defined as in section  [ subsec:2-separable ] .",
    "namely let @xmath1194 if @xmath376 is odd and @xmath1195 if @xmath376 is even .",
    "define @xmath1196 by @xmath1197    [ lem : omega ]    * @xmath1198 and @xmath1199 are ( 2-separable ) l - extendable and l - convex on @xmath1200 , respectively .",
    "* @xmath1199 is an l - convex relaxation of @xmath1201 . *",
    "any minimizer of @xmath1202 is optimal to ( d ) .",
    "observe that @xmath1203 is convex on @xmath1178 .",
    "obviously @xmath1204 is convex on @xmath26 .",
    "apply lemma  [ lem : tree_convexity ] and theorem  [ thm:2separable ] to obtain the claim .",
    "let @xmath1205 .",
    "then @xmath1206 is an even integer , and @xmath1207 .",
    "hence @xmath1208 .    ( 3 ) .",
    "we show @xmath1209 . from the view of the proof of ( 2 ) , it suffices to show that @xmath1210 for any odd integer @xmath376 . since @xmath1051 is an integer",
    ", either @xmath1211 or @xmath1212 holds . from this",
    ", we see @xmath1210 .",
    "notice that @xmath1213 is the set of half - integral potentials .",
    "the claim follows from the half - integrality  ( proposition  [ prop : min - max ] ) .    thus our goal is to minimize the l - convex function @xmath1214 .",
    "we are now ready to describe our scaling algorithm to solve ( d ) :    proximity scaling algorithm : : : step 0 : : :    replace @xmath111 by @xmath1133 defined by ( [ eqn : a ] ) if    @xmath111 is not positive . let    @xmath1215 and    @xmath1216 .",
    "step 1 : : :    find a minimizer @xmath1217 of    @xmath1199 by the steepest descent algorithm    with initial point @xmath1218 .",
    "step 2 : : :    if @xmath1219 , then @xmath1220 is an    optimal solution of ( d ) , and go to step 3 .",
    "otherwise , let    @xmath1221 and go to step 1 .",
    "step 3 : : :    construct @xmath1033 , and find an integral feasible    circulation @xmath148 .",
    "then @xmath1082 is a    half - integral optimal multiflow in ( n ) as required .",
    "the time complexity of step 1 is estimated as follows .",
    "@xmath1222 .",
    "we show the existence of a minimizer @xmath1223 of @xmath1199 with @xmath1224 .",
    "first consider the case where @xmath1225 or @xmath1226 . in this case , the diameter of @xmath1178 is @xmath39 or @xmath1227 .",
    "hence the inequality obviously holds .",
    "consider the case @xmath1228 .",
    "then @xmath1229 is a minimizer of an l - convex relaxation @xmath1230 of @xmath1231 ( lemma  [ lem : omega ]  ( 2 ) ) . by the persistency ( theorem  [ thm : persistency ] )",
    ", there exists a minimizer @xmath1171 of @xmath1231 ( over @xmath1232 ) with @xmath1233 .",
    "since @xmath1171 is also a minimizer of l - extendable function @xmath1201 ( on @xmath1234 ) over @xmath1235 , by proximity theorem ( theorem  [ thm : proximity ] ) , there is a minimizer @xmath1236 of @xmath1201 ( over @xmath1237 with @xmath1238 .",
    "since @xmath1199 is an l - convex relaxation of @xmath1201 , the restriction of @xmath1199 to @xmath1239 is equal to @xmath1201 .",
    "hence @xmath1236 is a minimizer of @xmath1199 over @xmath1240 .",
    "since @xmath1199 is also midpoint l - extendable on @xmath1241 , by the proximity theorem , there is a minimizer @xmath1223 of @xmath1199 over @xmath1242 with @xmath1243 .",
    "notice @xmath1244 .",
    "thus we have @xmath1245 as required .",
    "therefore , by theorem  [ thm : bound ] , the number of iterations of the steepest descent algorithm is at most @xmath1246 .",
    "since @xmath1199 is a 2-separable l - convex function consisting of @xmath1247 terms , and the maximum degree of @xmath1178 is the number @xmath0 of terminals , by theorem  [ thm : approx ] we can find an optimal solution in @xmath1248 time .",
    "the total step is @xmath1249 , where @xmath1250 can be taken to be @xmath1251 .",
    "this proves theorem  [ thm : multiflow_main ] .",
    "[ [ algorithm - for - m . ] ] algorithm for ( m ) .",
    "+ + + + + + + + + + + + + + + + + +    let us sketch a proximity scaling algorithm to solve ( m ) .",
    "corresponding to ( d ) , consider the following location problem on @xmath957 .",
    "@xmath1252 again a feasible solution of ( d@xmath1253 ) is called a potential , and called half - integral if each @xmath973 is half - integral .",
    "the following duality is implicit in @xcite .",
    "the maximum value of ( m ) is equal to the minimum value of ( d@xmath1253 ) .",
    "moreover , if @xmath706 is an integer , then there exists a half - integral optimal potential in ( d@xmath1253 ) .",
    "the edge - capacitated formulation is transformed to the node - capacitated formulation , discussed in @xcite , as follows .",
    "replace each edge @xmath1254 by the series of two edges @xmath1255 and @xmath1256 .",
    "define the node - capacity and the node - cost of the new node @xmath178 by @xmath1257 and @xmath1258 . no edge - capacity and edge - cost are given .",
    "the node - capacities of the original nodes are @xmath46 .",
    "then ( m ) becomes a node - capacitated problem , and the results in ( * ? ? ?",
    "* section 4 ) are applicable . in particular , the dual of ( m ) is given by the problem ( 4.6 ) of @xcite in setting @xmath1259 and @xmath1260 .",
    "subtree @xmath1261 for the original node @xmath60 is a single point @xmath973 ( by @xmath1262 ) , and hence @xmath1263 for new node @xmath178 replacing original edge @xmath62 is a path between @xmath973 and @xmath1050 with length ( diameter ) @xmath1264 .",
    "thus ( 4.6 ) of @xcite becomes ( d@xmath1253 ) .",
    "the half - integrality follows from ( * ? ? ?",
    "* remark 4.7 ) .    by the same argument in the proof of lemma  [ lem : optimality ]",
    ", one can prove that a multiflow @xmath100 and a potential @xmath972 are both optimal if and only if they satisfy conditions ( 1 ) , ( 2 ) , and ( 3 ) in lemma  [ lem : optimality ] .",
    "the corresponding double covering network @xmath1265 is obtained by replacing the lower bound and the upper bound capacities of @xmath1066 of @xmath1033 by @xmath76 and @xmath46 , respectively .",
    "then we obtain an analogue of proposition  [ prop : f_phi ] that @xmath972 is optimal if and only if there exists a feasible circulation @xmath148 in @xmath1265 , and @xmath1082 is an optimal multiflow in ( m ) .",
    "we may consider that the variables of ( d@xmath1253 ) are @xmath973 for non - terminal nodes @xmath1266 ( since a potential @xmath1267 of each terminal @xmath142 is fixed to @xmath1268 in ( d@xmath1253 ) ) .",
    "for non - terminal node @xmath60 , define @xmath1269 by @xmath1270 .",
    "we may assume that the set of non - terminal nodes are @xmath1271 .",
    "then ( d@xmath1253 ) is the minimization of @xmath1272 .",
    "again it is easy to see that there is an optimal potential @xmath972 with @xmath1273 . for @xmath1274 , define @xmath1178 , @xmath1275 , @xmath1276 , @xmath1198 , and @xmath1199 as above .",
    "then lemma  [ lem : omega ] holds in this setting .",
    "let @xmath1277 . by the proximity scaling algorithm",
    ", we can minimize @xmath1278 in @xmath1279 time .",
    "it is shown in @xcite that if @xmath1280 for @xmath1281 and @xmath1282 , then every half - integral optimal multiflow in ( m ) is a minimum cost multiflow .",
    "also it is shown in @xcite that cost @xmath111 is replaced by @xmath1133 ( defined by ( [ eqn : a ] ) ) to satisfy the cost positivity .",
    "any half - integral optimal multiflow in ( m ) with cost @xmath1133 is optimal for original cost @xmath111 .",
    "thus , letting @xmath1283 , we obtain a minimum cost half - integral multiflow in @xmath1284 time .",
    "we note a relation between lovsz - cherkassky formula ( theorem  [ thm : lc ] ) , @xmath0-submodular function minimization , and multiway cut .",
    "suppose that @xmath40 consists of @xmath0 terminals , and the set of non - terminal nodes is @xmath1285 .",
    "recall notions in section  [ subsec : k - submodular ] . adding @xmath76 to @xmath40 , we obtain poset @xmath74 , and consider the following @xmath0-submodular function minimization : @xmath1286 recall example  [ rem : multiway ] with @xmath1287 that this problem is nothing but a @xmath0-submodular relaxation ( or an l - convex relaxation ) of multiway cut .    furthermore this problem is also a dual of maximum free multiflow problem ( mf ) , and hence the optimal value of this problem is equal to @xmath927 . to see this , for @xmath1288 and @xmath427 ,",
    "let @xmath1289 .",
    "then @xmath1290 is an @xmath431-cut .",
    "observe @xmath1291 is equal to the objective value of ( [ eqn : ls ] ) at @xmath972 .",
    "conversely , take a minimum @xmath431-cut @xmath425 for each @xmath427 .",
    "we can assume that @xmath425 @xmath1046 are disjoint .",
    "if @xmath1292 , then , by submodularity , we can replace @xmath425 by @xmath1293 and @xmath1294 by @xmath1295 without increasing the cut capacity .",
    "define @xmath972 by @xmath1296 if @xmath1297 for some @xmath427 and @xmath1035 otherwise .",
    "then the objective value at @xmath972 is equal to @xmath1298 . in particular , this @xmath0-submodular function minimization can be solved by @xmath1299-mincut computation for each @xmath427 .",
    "the linear program ( l ) arises as an lp - relaxation of a class of network design problems , called _ terminal backup problems _",
    "@xcite . given a graph @xmath59 with terminal set @xmath40 and edge - cost @xmath929 the terminal backup problem asks to find a minimum cost subgraph @xmath1300 with the property that each terminal @xmath142 is reachable to other terminal in @xmath1300 .",
    "anshelevich and karagiozova  @xcite proved that this problem is solvable in polynomial time .",
    "bernth , kobayashi , and matsuoka  @xcite considered the following weighted generalization . given a graph @xmath59 with terminal set @xmath40 , edge - cost @xmath929 , and a requirement @xmath1301 , find a minimum cost integral edge - capacity @xmath1302 such that for each terminal @xmath142 there is an integral @xmath431-flow in @xmath1303 with flow - value at least @xmath951 .",
    "they proved that this generalization is solvable in ( strongly ) polynomial time , and asked whether a natural capacitated version of this problem is tractable or not .",
    "the capacitated version is to impose the condition @xmath1304 @xmath950 for @xmath913 , and is formulated as the following integer program : @xmath1305 the problem ( l ) is nothing but a natural lp - relaxation of ( ctb ) .",
    "fukunaga  @xcite studied ( ctb ) , and proved the half - integrality ( theorem  [ thm : fuku ] ) of the lp - relaxation ( l ) . as was noted by him ,",
    "a @xmath39-approximation solution is immediately obtained from a half - integral optimal solution @xmath20 in ( l ) by rounding each non - integral component @xmath1306 to @xmath1307 .",
    "he devised a clever rounding algorithm to obtain a @xmath960-approximation solution .",
    "our algorithm gives a practical and combinatorial implementation of his @xmath960-approximation algorithm , as follows .",
    "a half - integral optimal solution @xmath20 of ( l ) and an optimal potential @xmath972 of ( d ) are obtained by our combinatorial algorithm .",
    "fukunaga s algorithm rounds a special half - integral optimal solution @xmath1308 obtained from @xmath20 by the following fixing procedure .",
    "let @xmath1309 be the set of edges @xmath282 with @xmath1310 .",
    "let @xmath1311 for @xmath1312 .",
    "for an edge @xmath1313 ( with non - integral @xmath1306 ) , check whether there is an optimal solution @xmath21 in ( l ) such that @xmath1314 , @xmath1315 for @xmath1316 , and @xmath1317 for @xmath1318 .",
    "if such @xmath21 exists , then let @xmath1319 .",
    "otherwise let @xmath1320 .",
    "add @xmath282 to @xmath1309 , and repeat until @xmath1321 to obtain @xmath1308 .",
    "this procedure can be implemented on the double covering network @xmath1033 . by lemma  [ lem : nvsl ] with ( cp )",
    ", @xmath21 is optimal to ( l ) if and only if @xmath21 is the flow - support of some optimal multiflow @xmath100 in ( n ) . from view of ( the proof of )",
    "proposition  [ prop : f_phi ] , @xmath21 is optimal if and only if there is a circulation @xmath148 of @xmath1033 with @xmath1322 for @xmath1323 .",
    "therefore the above procedure reduces to checking the existence of a circulation in @xmath1033 with changing the lower and upper capacities of edges in @xmath1048 to @xmath1324 or @xmath1325 appropriately .",
    "thus @xmath1308 is obtained by at most @xmath3 max - flow computations on @xmath1033 .",
    "we here present a simple and instructive but pseudo - polynomial time algorithm solving ( n ) and ( d ) of the following descriptionfor a potential @xmath972 , find a feasible circulation @xmath148 in @xmath1033 .",
    "if @xmath148 exists , then @xmath1082 is an optimal multiflow , and stop .",
    "otherwise , from an infeasibility certificate of @xmath1033 , we obtain another potential @xmath977 with @xmath1326 .",
    "let @xmath1327 and repeat .",
the presented algorithm can always keep @xmath972 half - integral , providing an algorithmic proof of proposition  [ prop : min - max ] .",
    "assume the cost positivity ( cp ) .",
    "for a ( proper ) half - integral potential @xmath972 , construct the double covering network @xmath1033 , as above .",
    "we reduce the circulation problem on @xmath1033 to the maximum flow problem on a modified network @xmath1328 . consider supper source @xmath1329 and sink @xmath1330 . for each @xmath1331 modify edge set @xmath1048 as follows . for each @xmath1332",
    "replace @xmath284 by two edges @xmath1333 with ( upper-)capacity @xmath418 ( and lower - capacity @xmath76 ) . for each terminal @xmath427 ,",
    "add new two edges @xmath1334 and @xmath1335 with capacity @xmath951 .",
    "for edge @xmath1336 , change the lower - capacity to @xmath76 and the upper - capacity to @xmath46 if @xmath1057 and to @xmath76 otherwise .",
    "the resulting network is denoted by @xmath1337 .",
    "consider the maximum @xmath1338-flow problem on the new network @xmath1328 .",
    "this is a standard reduction of a circulation problem to a max - flow problem . in particular",
    ", @xmath1033 has a feasible circulation if and only if a maximum @xmath1339-flow @xmath1337 saturates all edges leaving @xmath1329 ( entering @xmath1340 ) , i.e. , @xmath1341 is a minimum @xmath1338-cut .",
    "let @xmath1342 ( resp .",
    "@xmath1343 ) be the set of nodes @xmath1344 , @xmath1345 , @xmath1346 , or @xmath1347 such that @xmath60 has an integral potential @xmath973 ( resp .",
    "non - integral potential @xmath973 ) . by the integrality of @xmath1051",
    ", there is no edge @xmath62 in @xmath1038 such that @xmath60 has an integral potential and @xmath61 has a non - integral potential .",
    "hence there is no edge connecting between @xmath1348 and @xmath1343 .",
    "an @xmath1349-cut @xmath63 in @xmath1337 is called _ legal _ if    * @xmath1350 or @xmath1351 is empty , * for each @xmath1100 , @xmath1352 is empty or @xmath1353 for some @xmath427 , and * for other node @xmath60 , @xmath1354 is empty , @xmath1355 , or @xmath1356 .    for a legal cut @xmath63 of @xmath1357 ,",
    "the potential @xmath1358 is defined by : @xmath1359 then the following lemma holds ; the proofs are given in the end of this section .",
    "[ lem : legal ]    * for a legal cut @xmath63 in @xmath1337 , we have @xmath1360 * let @xmath63 be a ( unique ) inclusion - minimal minimum @xmath1338-cut in @xmath1361 , and let @xmath1362 and @xmath1363",
    ". then both @xmath1364 and @xmath1365 are legal cuts with @xmath1366 in particular , if @xmath1367 , then @xmath1368 or @xmath1369 .",
    "therefore we can check the optimality of @xmath972 by solving the maximum - flow problem on @xmath1337 .",
    "if @xmath972 is not optimal , then we obtain another half - integral potential @xmath1358 having a smaller objective value .",
    "this naturally provides the following algorithm :    descent algorithm by double covering network : : step 0 : : :    replace @xmath111 by @xmath1133 defined by ( [ eqn : a ] ) if    @xmath111 is not positive . let    @xmath1370 .",
    "step 1 : : :    construct @xmath1357 , and find a minimal minimum    @xmath1338-cut @xmath63 and a maximum    @xmath1338-flow @xmath1371 .",
    "step 2 : : :    if @xmath1372 , then @xmath972 is optimal , and    construct a feasible circulation @xmath148 on    @xmath1033 from @xmath1371 and an optimal    multiflow @xmath1082 from @xmath148 ; stop .    otherwise go to step 3 .",
    "step 3 : : :    let @xmath1373 and    @xmath1374 .",
    "choose    @xmath1375 with    @xmath1376 .",
    "let    @xmath1377 and go to step 1 .",
    "observe that this algorithm coincides with the steepest descent algorithm applied to l - convex function @xmath1214 on @xmath1378 , where @xmath1379 is a steepest direction of @xmath1380 for even iterations and of @xmath1381 for odd iterations .",
    "thus , by theorem  [ thm : bound ] and lemma  [ lem : region ] , the number of the iteration is @xmath1382 .",
    "the numbers of nodes and edges of @xmath1337 are @xmath206 and @xmath1383 , respectively .",
    "thus we have :    the above algorithm runs in @xmath1384 time .    in the above algorithm , each step minimizes a sum of basic @xmath1385-submodular functions of type i and iii ( thanks to ( cp ) ) .",
    "the above network @xmath1337 may be viewed as yet another representation of @xmath1385-submodular functions .",
    "in fact , an arbitrary sum of basic @xmath1385-submodular functions of type i and iii admits this kind of a network representation ( yuta ishii , master thesis , university of tokyo , 2014 ) . however this representation seems not to capture basic @xmath1385-submodular functions of type ii . in each scaling phase of the proximity scaling algorithm",
    ", the objective functions of local problems may contain a @xmath1385-submodular term of type ii .",
    "this is why we need an algorithm in theorem  [ thm : iwy14 ] .",
    "let @xmath63 be a legal cut ( with finite cut capacity ) .",
    "observe that @xmath1386 in particular we have @xmath1387 let @xmath1388 .",
    "for an edge @xmath302 , if @xmath973 and @xmath1050 are integral and non - integral potentials , respectively , then @xmath1389 and @xmath1390",
    ". therefore @xmath1391 implies @xmath1392 and @xmath1393 implies @xmath1394 .",
    "consequently we have @xmath1395 it suffices to show that latexmath:[\\[\\begin{aligned }   |\\delta x \\cap a_{ij}|/2 & = & d(p'_i , p'_j)- d(p_i , p_j ) + 1 \\quad ( ij \\in e _",
    "{ > } ) , \\label{eqn:1 } \\\\   |\\delta x \\cap a_{ij}|/2   & = & ( d(p'_i , p'_j ) - a(ij))^+   \\quad ( ij \\in e_= ) , \\label{eqn:2}\\\\    pick @xmath1047 .    case 1 : @xmath1397 , @xmath1398 and @xmath1399 . if @xmath1400 , then @xmath1401 is denoted by @xmath1402 .",
    "suppose @xmath1052 ( to show ( [ eqn:2 ] ) ) .",
    "if @xmath1403 is empty or contains @xmath1345 or @xmath1404 , then @xmath1405 is empty , @xmath1406 and hence @xmath1407 . if @xmath1408 or @xmath1409 , then @xmath1410 , @xmath1411 , and @xmath1412 . if @xmath1413 , then @xmath1414 , @xmath1415 , and @xmath1416 .",
    "suppose @xmath1053 ( to show ( [ eqn:1 ] ) ) .",
    "if @xmath1417 , @xmath1418 or empty , then @xmath1414 , @xmath1419 , and @xmath1420 . if @xmath1408 or @xmath1409 , then @xmath1421 , @xmath1422 , and @xmath1423",
    "if @xmath1424 or @xmath1425 , then @xmath1410 , @xmath1426 , and @xmath1427 . if @xmath1428 , then @xmath1429 , @xmath1430 , and @xmath1431",
    "if @xmath1432 , then @xmath1433 , @xmath1434 , and @xmath1435 .",
    "case 2 : @xmath1397 and @xmath1436 . in this case ,",
    "( [ eqn:1 ] ) and ( [ eqn:2 ] ) are obtained by replacing roles of @xmath1404 and @xmath1437 in the above case 1 .",
    "next consider terminal @xmath427 ( to show ( [ eqn:3 ] ) ) . if @xmath1438 , then @xmath1439 and @xmath1440 is empty . if @xmath1441 , then @xmath1442 and @xmath1443 .",
    "if @xmath1444 is empty , then @xmath1445 and @xmath1446 .",
    "for all cases , ( [ eqn:3 ] ) holds .",
    "the equality @xmath1447 follows from the fact that there is no edge between @xmath1342 and @xmath1448 .",
    "so it suffices to show that minimal minimum @xmath1338-cut @xmath63 satisfies the conditions ( 2 ) and ( 3 ) of legal cuts .",
    "suppose ( for contradiction ) that @xmath63 contains @xmath1449 or @xmath1450 .",
    "remove all such pairs of nodes from @xmath63 to obtain another @xmath1338-cut @xmath1451 .",
    "observe that @xmath1452 for each @xmath1047 , and @xmath1453 for each terminal @xmath142 .",
    "moreover @xmath1454 does not contain edge @xmath1455 ( of infinite capacity ) .",
    "otherwise @xmath1456 , and @xmath64 has edge @xmath1457 of infinite capacity ; a contradiction .",
    "thus @xmath1451 is also a minimum cut , contradicting the minimality of @xmath63 .",
    "thus @xmath64 can not contain both @xmath1458 ( @xmath1346 ) and @xmath1459 ( @xmath1347 ) .",
    "suppose for contradiction that @xmath63 contains @xmath1347 and does not contain @xmath1460 for each @xmath1461 . in this case ,",
    "remove @xmath1347 from @xmath63 .",
    "then the cut capacity does not increase , contradicting the minimality of @xmath63 .",
    "hence @xmath63 satisfies ( 2 ) and ( 3 ) , as required .",
    "the author thanks takuro fukunaga for communicating @xcite , vladimir kolmogorov for helpful comments on the earlier version of this paper , and the referee for helpful comments .",
    "the work was partially supported by jsps kakenhi grant numbers 25280004 , 26330023 , 26280004 .",
    "p. felzenszwalb , g. pap ,  .",
    "tardos , and r. zabih , globally optimal pixel labeling algorithms for tree metrics , in : _ proceedings of the twenty - third ieee conference on computer vision and pattern recognition ( cvpr10 ) _ ( 2010 ) , pp .",
    "31533160 .",
    "t. fukunaga , approximating the generalized terminal backup problem via half - integral multiflow relaxation , in : _",
    "32nd international symposium on theoretical aspects of computer science ( stacs15 ) _ ( 2015 ) , pp .",
    "arxiv:1409.5561 .",
    "i. gridchyn and v. kolmogorov , potts model , parametric maxflow and @xmath0-submodular functions , in : _ proceedings of ieee international conference on computer vision ( iccv13 ) _ , 2013 , 23202327 .",
    "m. grtschel , l. lovsz , and a. schrijver , _ geometric algorithms and combinatorial optimization _ , springer - verlag , berlin , 1988 .",
    "h. hirai , discrete convexity for multiflows and 0-extensions , in : _ proceeding of 8th japanese - hungarian symposium on discrete mathematics and its applications _",
    ", 2013 , pp . 209223 .",
    "h. hirai , l - convexity on graph structures , in preparation .",
    "d. s. hochbaum , solving integer programs over monotone inequalities in three variables : a framework for half integrality and good approximations , _",
    "european journal of operational research _ * 140 * ( 2002 ) , 291321 .",
    "a. huber and v. kolmogorov , towards minimizing @xmath0-submodular functions , in : _ proceedings of the 2nd international symposium on combinatorial optimization ( isco12 ) _ , lncs 7422 , springer , berlin , 2012 , pp .",
    ". s. iwata , l. fleischer , and s. fujishige , a combinatorial strongly polynomial algorithm for minimizing submodular functions , _ journal of the acm _ * 48 * ( 2001 ) , 761777 .",
    "s. iwata and k. nagano , submodular function minimization under covering constraints , in : _ proceeding of the 50th annual ieee symposium on foundations of computer science ( focs09 ) _ ( 2009 ) , pp .",
    "671680 .",
    "v. kolmogorov , submodularity on a tree : unifying l@xmath9-convex and bisubmodular functions , in : _ proceedings of the 36th international symposium on mathematical foundations of computer science ( mfcs11 ) _ , lncs 6907 , springer , berlin , 2011 , pp . 400411                        j. thapper and s. ivn , the power of linear programming for valued csps , in : _ proceedings of the 53rd annual ieee symposium on foundations of computer science ( focs12 ) _ , 2012 , pp .",
    "d. xu , e. anshelevich , and m. chiang , on survivable access network design : complexity and algorithms , in : _ proceedings of the 27th ieee international conference on computer communications , joint conference of the ieee computer and communications societies ( infocom08 ) _ , 2008 , pp .",
    "186190 . v. v. vazirani , _ approximation algorithms _ , springer - verlag , berlin , 2001 ."
  ],
  "abstract_text": [
    "<S> in this paper , we develop a theory of new classes of discrete convex functions , called l - extendable functions and alternating l - convex functions , defined on the product of trees . </S>",
    "<S> we establish basic properties for optimization : a local - to - global optimality criterion , the steepest descend algorithm by successive @xmath0-submodular function minimizations , the persistency property , and the proximity theorem . </S>",
    "<S> our theory is motivated by minimum cost free multiflow problem . to this problem , </S>",
    "<S> goldberg and karzanov gave two combinatorial weakly polynomial time algorithms based on capacity and cost scalings , without explicit running time . </S>",
    "<S> as an application of our theory , we present a new simple polynomial proximity scaling algorithm to solve minimum cost free multiflow problem in @xmath1 time , where @xmath2 is the number of nodes , @xmath3 is the number of edges , @xmath0 is the number of terminals , @xmath4 is the maximum of edge - costs , @xmath5 is the total sum of edge - capacities , and @xmath6 denotes the time complexity to find a maximum flow in a network of @xmath7 nodes and @xmath8 edges . </S>",
    "<S> our algorithm is designed to solve , in the same time complexity , a more general class of multiflow problems , minimum cost node - demand multiflow problem , and is the first combinatorial polynomial time algorithm to this class of problems . </S>",
    "<S> we also give an application to network design problem . </S>"
  ]
}
{
  "article_text": [
    "given an @xmath0-vertex edge - weighted undirected planar graph @xmath10 , a distance oracle for @xmath10 is a data structure that can efficiently answer distance queries @xmath11 between pairs of vertices @xmath12 in @xmath10 .",
    "one way of achieving this is to simply store an @xmath13-distance matrix where @xmath0 is the number of vertices .",
    "each query can be answered in constant time but the space requirement is large .    if one is willing to settle for approximate distances , much more compact oracles exist .",
    "it has been shown that for any @xmath1 , there is a @xmath2-approximate distance oracle for @xmath10 of size @xmath14 which for any query pair @xmath12 outputs in time @xmath15 an estimate @xmath16 such that @xmath17 ( thorup  @xcite and klein  @xcite ) .",
    "the oracles of thorup and of klein both rely on a recursive decomposition of @xmath10 using shortest path separators from a shortest path tree @xmath18 : first @xmath10 is decomposed into two subgraphs with such a separator and then the two subgraphs are recursively decomposed .",
    "an important observation is that for any vertex @xmath19 and any shortest path separator @xmath20 , there is a size @xmath15 set @xmath21 of so called portals on @xmath20 which are vertices such that for any @xmath22 , there exists a @xmath23 such that @xmath24 .",
    "thus , to get an approximate distance from @xmath19 to any @xmath22 only @xmath15 distances @xmath25 need to be stored in addition to distances in @xmath18 .",
    "the oracle stores distances from @xmath19 to portals on each of the @xmath26 separators above @xmath19 in the recursive decomposition tree , giving a total space of @xmath27 . to answer a @xmath28-query , the oracle identifies the nearest common ancestor separator @xmath29 of @xmath19 and @xmath30 in the recursive decomposition . as @xmath29 separates @xmath19 and @xmath30 , distances from @xmath19 and from @xmath30 to their respective portal sets on @xmath29",
    "can be combined to obtain a @xmath2-approximate distance estimate in @xmath15 time .",
    "additional oracles for planar graphs have since been presented .",
    "kawarabayashi , klein , and sommer  @xcite showed how to improve space to @xmath31 at the cost of an increase in query time to @xmath32 and gave generalizations to bounded - genus and minor - free graphs .",
    "kawarabayashi , sommer , and thorup  @xcite focused on improving the space - query time tradeoff and gave an oracle with @xmath33 space and @xmath34 query time , where @xmath35 hides @xmath36 and @xmath37 factors , thereby essentially improving the query time - space product from @xmath38 to @xmath14 .",
    "they also showed that if the average edge weight is poly - logarithmic , @xmath39 space and @xmath34 query time can be obtained .    except for planar graphs with poly - logarithmic average edge weights ,",
    "every oracle presented so far has a query time - space product of order @xmath40 ( ignoring the dependency on @xmath41 ) .",
    "we finally break this barrier by giving an oracle with @xmath3 space and @xmath4 query time .",
    "the exact bounds are given in the following theorem .",
    "[ thm : main ] let @xmath10 be an @xmath0-vertex undirected edge - weighted planar graph . for any @xmath42 , there is a @xmath2-approximate distance oracle of @xmath10 with query time @xmath43 and space @xmath44 .",
    "our dependency on @xmath41 in the query time - space product is worse than in  @xcite but still only a low - degree polynomial in @xmath45 ; it is roughly @xmath46 when @xmath47 and roughly @xmath48 otherwise , compared to @xmath49 in  @xcite .",
    "focus in this paper is on improving the dependency on @xmath0 and not @xmath41 which we regard as fixed .",
    "our data structure uses randomization due to hashing and fast integer sorting .",
    "space and query time for hashing can be made worst - case with expected construction time . for sorting ,",
    "we use the algorithm of han and thorup  @xcite to get the bound in theorem  [ thm : main ] . to make our data structure deterministic",
    ", we can use a standard optimal comparison sort or the slightly faster deterministic integer sorting algorithm of fredman and willard  @xcite . with the latter ,",
    "we get a deterministic query time of our data structure of @xmath50 .",
    "a main difference between our oracle and those of thorup and of klein is that we do not store distances from each vertex @xmath19 to portals on all @xmath26 separators above @xmath19 .",
    "instead we save space by introducing a shortcutting system to the recursive decomposition tree so that we can get from @xmath19 to any separator above it using @xmath51 shortcuts .",
    "each shortcut corresponds to a pair of separators on a root - to - leaf path in the tree and we essentially store approximate distances from vertices on one separator to portals on the other separator closer to the root of the recursive decomposition tree .",
    "this complicates the query algorithm and its analysis since approximate distances are found in @xmath51 steps instead of just one .",
    "thorup  @xcite also gave an oracle for planar _ digraphs _ which for polynomially bounded edge weights achieves @xmath52 space and close to @xmath15 query time .",
    "exact oracles for planar digraphs with tradeoff between space and query time have been studied but require near - quadratic space for constant or near - constant query time  @xcite .    for a general undirected @xmath0-vertex graph @xmath10 , thorup and zwick showed that for any parameter @xmath53",
    ", there is a @xmath54-approximate distance oracle for @xmath10 with @xmath55 space and @xmath56 query time which is believed to be essentially optimal due to a girth conjecture of erds  @xcite .",
    "variations and slight improvements have since been presented ; see , e.g. ,  @xcite .      in section  [ sec :",
    "prelim ] , we give some basic definitions , notation , and a variant of a standard recursive decomposition of planar graphs with shortest path separators .",
    "we then present our oracle in sections  [ sec : phasei ] and  [ sec : phaseii ] .",
    "section  [ sec : phasei ] presents the first phase of the query algorithm .",
    "this phase computes approximate distances from query vertices @xmath19 and @xmath30 to certain portals on the nearest common ancestor separator @xmath29 of @xmath19 and @xmath30 in the recursive decomposition tree but where approximate shortest paths are restricted to the child regions of @xmath29 in the recursive decomposition .",
    "the second phase in section  [ sec : phaseii ] uses the output of the first phase to then find approximate distances from @xmath19 and @xmath30 to portals on @xmath29 in the entire graph @xmath10 .",
    "a main challenge is that the vertices of @xmath29 are not represented explicitly on all recursion levels but on various levels on the path from @xmath29 to the root of the recursive decomposition ; the second phase traverses this path to find the desired approximate distances and portals . from the output of phase ii ,",
    "obtaining an approximate @xmath28-distance can then be done efficiently , as we show in section  [ sec : approxdist ] .",
    "finally , we make some concluding remarks in section  [ sec : conclrem ] .",
    "for a graph @xmath10 , denote by @xmath57 and @xmath58 its vertex set and edge set , respectively . when convenient , an edge @xmath12 with weight @xmath59 is denoted @xmath60 . for a rooted tree @xmath18 and two nodes @xmath61 , denote by @xmath62 the nearest common ancestor of @xmath19 and @xmath30 in @xmath18 . for a path @xmath21 and for two vertices @xmath63 ,",
    "@xmath64 $ ] denotes the subpath of @xmath21 between @xmath19 and @xmath30 . as in previous papers on approximate distance oracles for planar graphs ,",
    "we assume the word - ram model with standard instructions .      in the following , @xmath65 denotes an @xmath0-vertex , undirected , edge - weighted planar embedded graph and @xmath18 is a shortest path tree in @xmath10 rooted at a source vertex @xmath66 . by performing vertex - splitting",
    ", we may assume that @xmath10 has degree three .",
    "the oracle of thorup keeps a recursive decomposition of @xmath10 consisting of shortest path separators .",
    "our oracle obtains a similar decomposition but we need it to have some additional properties which we focus on in the following .    denote by @xmath67 an arbitrary triangulation of @xmath10 where edges of @xmath68 are called _ pseudo - edges _ and are given infinite weight .",
    "a shortest path separator of @xmath67 w.r.t .",
    "an assignment of weights to triangles of @xmath67 consists of a ( possibly non - simple ) cycle @xmath69 defined by two shortest paths @xmath70 and @xmath71 in @xmath18 and a non - tree edge @xmath12 ; the total weight of triangles on each side of @xmath69 is at most @xmath72 of the total weight of all triangles of @xmath67 .",
    "see  @xcite for details .",
    "first , we decompose @xmath67 into two subgraphs enclosed by @xmath69 ; both subgraphs inherit the edges and vertices of @xmath69 , for a suitable weight function on triangles .",
    "degree two vertices @xmath19 are removed from each subgraph by replacing their incident edges @xmath73 and @xmath74 with a single edge @xmath75 whose weight is the sum of weights of @xmath73 and @xmath74 .",
    "then the two subgraphs are recursively decomposed until constant - size subgraphs are obtained .    for each subgraph @xmath76 obtained in the above recursive procedure ,",
    "we form a _ region _ @xmath77 as follows .",
    "subgraph @xmath76 contains @xmath26 separators of the form @xmath78 , namely those formed from the root of the recursion down to @xmath76 .",
    "these are separators formed from the root of the recursion down to @xmath76 .",
    "region @xmath77 is obtained from @xmath76 by removing pseudo - edges , except those contained in the separators that formed @xmath76 , and then removing degree two vertices as above .",
    "let @xmath79 be the faces of @xmath76 containing vertices / edges of @xmath10 not belonging to @xmath76 .",
    "each @xmath80 is a separator @xmath78 ( possibly with some degree two vertices removed ) and we call @xmath80 a _ hole _ ( of @xmath77 ) .",
    "ancestor / descendant relations between regions are defined according to their nesting in the recursive decomposition tree which we denote by @xmath81 . in section  [ subsec : constructrecdecomp ] ,",
    "we show how to pick shortest path separators such that    1 .",
    "there are @xmath31 regions in total each having @xmath82 holes , 2 .   for each child @xmath77 of each region @xmath76 ,",
    "every hole of @xmath76 ( regarded as the closed set of the plane inside the hole ) is fully - contained in a hole of @xmath77 , 3 .",
    "the height of @xmath81 is @xmath26 .",
    "when we refer to a recursive decomposition in the following , we assume it has these properties .",
    "observe that for all regions @xmath76 and @xmath77 where @xmath76 is a descendant of @xmath77 , @xmath83 .",
    "this follows since @xmath76 is obtained from @xmath77 by eliminating subgraphs of @xmath77 and degree two vertices .      in the following ,",
    "refer to the triangulated subgraphs obtained when recursively decomposing @xmath67 as _ @xmath84-regions _ ; holes of @xmath84-regions are defined to be the holes of the corresponding regions with pseudo - edges added to form the triangulation .",
    "we now show how to pick the separators so that the following _ region conditions _ are satisfied :    1 .",
    "each @xmath84-region of even resp .",
    "odd depth in @xmath81 has at most three resp .",
    "four holes , 2 .   for each @xmath84-region of even depth in @xmath81 , if it contains exactly @xmath85 faces of @xmath86 , each of its grandchildren contain at most @xmath87 faces of @xmath86 , 3 .   for each child @xmath77 of each @xmath84-region @xmath76 , every hole of @xmath76 ( regarded as the closed set of the plane inside the hole ) is fully - contained in a hole of @xmath77 .",
    "furthermore , we show that the number of regions is @xmath31 and that the height of @xmath81 is @xmath26 .",
    "this gives the desired properties for a recursive decomposition , as stated above .",
    "all separators are formed from shortest path tree @xmath18 .",
    "the recursion stops once @xmath84-regions with at most two faces of @xmath86 are obtained . for a @xmath84-region @xmath76 of even depth in @xmath81 ,",
    "assume it has at most three holes ( this trivially holds for @xmath67 at the root of @xmath81 ) .",
    "we assign a unit of weight to each face of @xmath76 that is also a face of @xmath67 .",
    "all other faces of @xmath76 are given weight @xmath88 .",
    "using the subtree of @xmath18 in @xmath76 , we find a balanced shortest path separator w.r.t .  this weight function .",
    "if @xmath85 is the number of faces of @xmath86 in @xmath76 then each of the subgraphs formed contain at most @xmath87 of these faces .",
    "furthermore , each of these subgraphs have at most four holes since at most one new hole is formed when removing one side of the separator .",
    "now consider a @xmath84-region @xmath76 of odd depth in @xmath81 and assume it has at most four holes .",
    "if @xmath76 has at most two holes , we decompose it as described above for even - depth @xmath84-regions ; the sub-@xmath84-regions formed will have at most three holes .",
    "otherwise , we define a different weight function than that above : for each hole @xmath89 of @xmath76 , exactly one of the triangles of @xmath76 contained in @xmath89 is given unit weight .",
    "all other triangles of @xmath76 are given weight @xmath88 .",
    "the shortest path separator w.r.t .",
    "this weight function ensures that each of the two sub-@xmath84-regions of @xmath76 formed will have at most three holes , namely at most @xmath90 holes inherited from @xmath76 and one hole formed by removing one side of the separator .",
    "it is now clear that the first region condition holds .",
    "the second region condition holds as well from the above and from the fact that each child of an odd - depth @xmath84-region @xmath76 can not contain more faces of @xmath86 than @xmath76 .",
    "assume for the sake of contradiction that the third region condition does not hold for some @xmath84-region @xmath76 and one of its children .",
    "then the separator that was used to decompose @xmath76 must have used one of the pseudo - edges in the triangulated hole @xmath89 of @xmath76 .",
    "since the boundary of @xmath89 consists of two shortest paths from @xmath18 and a single pseudo - edge , one of the children of @xmath76 must be fully contained in @xmath89 , which for both choices of weight function above gives an unbalanced separator , a contradiction .",
    "we conclude that the third region condition holds .",
    "the number of @xmath84-regions is asymptotically bounded by the number of leaves of the recursive decomposition tree .",
    "each leaf @xmath84-region has a parent with at least three faces of @xmath86 .",
    "for any two distinct @xmath84-regions @xmath76 and @xmath77 that are parents of leaf @xmath84-regions , no face of @xmath86 belongs to both @xmath76 and @xmath77 .",
    "it follows that there are only @xmath31 parents of leaf @xmath84-regions .",
    "since the decomposition tree @xmath81 is binary , the total number of leaf @xmath84-regions is @xmath31 .",
    "this implies that the total number of @xmath84-regions , and hence regions , is @xmath31 .",
    "it follows from the second region condition and the termination condition for the recursion that @xmath81 has height @xmath26 .",
    "let @xmath91 be a path in @xmath18 from @xmath66 to some vertex .",
    "for any subpath @xmath92 $ ] of @xmath91 , let @xmath93 be those interior vertices of @xmath91 having an incident edge of @xmath94 emanating to the left of @xmath92 $ ] when looking in the direction from @xmath19 to @xmath30 .",
    "we order the vertices such that @xmath92 = u\\leadsto v_1\\leadsto\\cdots\\leadsto v_k\\leadsto v$ ] . the _ left side _ of @xmath92 $ ] is the @xmath28-path with edges @xmath95 where each edge has weight equal to the weight of the corresponding subpath of @xmath91 .",
    "we define the _ right side _ of @xmath92 $ ] similarly .    for a region @xmath76 , denote by @xmath96 the _ boundary _ of @xmath76 which is the subgraph of @xmath76 contained in the @xmath82 holes of @xmath76 . for each hole @xmath89",
    ", it will be convenient to regard the two shortest paths in @xmath18 bounding @xmath89 as disjoint in @xmath96 by replacing one path with its left side and the other with its right side ; vertices shared by the original two paths are regarded as distinct in the two new paths , see figure  [ fig : eulertour ] .",
    "note that @xmath96 represented in this way is now a single face of @xmath76 .",
    "cutting open each hole like this ensures that paths in @xmath76 do not cross its boundary .",
    "a vertex ( edge ) of @xmath76 that is not contained in @xmath96 is called _",
    "interior_. denote by @xmath97 the @xmath82 shortest paths from the shortest path tree @xmath18 that bound @xmath96 .",
    "a vertex which is an endpoint of a path in @xmath97 is called a _ corner _ of @xmath76 ; see figure  [ fig : eulertour ] .",
    "we let @xmath98 denote the set of @xmath82 corners of @xmath76 . in some places",
    ", we will instead consider the face @xmath99 obtained from @xmath96 by replacing each edge with its corresponding path in @xmath10 .",
    "the following lemma gives the structure of @xmath96 .",
    "[ lem : deltar ] for any region @xmath76 , @xmath96 consists of @xmath82 subpaths each of which is either a single ( possibly pseudo-)edge between two corners , an edge corresponding to a path in @xmath18 from @xmath66 to some corner of @xmath76 , or the left or right side of a path in @xmath18 .",
    "consider partitioning @xmath96 into subpaths each starting and ending in a corner and with no interior corner vertices .",
    "there are only @xmath82 such subpaths and each of them is either an edge or pseudo - edge ending in corners or the subpath corresponds to a path in @xmath18 incident to one or two holes . if it is incident to one hole , it is the left or right side of a path in @xmath18 and if it is incident to two holes , it is a single edge corresponding to a path ending in @xmath66 .    when convenient , we identify regions with their corresponding nodes in @xmath81 . for two regions @xmath76 and @xmath77 , denote by @xmath100 the simple path from @xmath76 to @xmath77 in @xmath81 .",
    "let @xmath65 be an undirected edge - weighted ( not necessarily planar ) graph , let @xmath101 , and let @xmath91 be a shortest path in @xmath10 .",
    "thorup  @xcite showed that for any given @xmath1 , @xmath102 contains a set @xmath21 of @xmath15 _ portals _ such that for any @xmath103 , there is a @xmath23 such that @xmath104 .",
    "let @xmath76 be a region and let @xmath105 .",
    "given a value @xmath106 , a vertex @xmath101 , and an undirected ( possibly non - planar ) graph @xmath89 with @xmath107 where every edge @xmath108 in @xmath89 corresponds to a path @xmath109 in @xmath10 of the same weight .",
    "then @xmath21 is a _",
    "@xmath110-portal set of @xmath96 _ if for any @xmath111 , there exists a vertex @xmath23 such that @xmath112 .",
    "we call @xmath113 a _ portal _ ( of @xmath21 ) . applying the portal construction of thorup  @xcite",
    "( see also the proof of lemma  [ lem : portal ] ) to each path in @xmath97 gives a @xmath110-portal set of @xmath96 of size @xmath114 .",
    "define @xmath110-portal set of @xmath99 similarly ; its size is @xmath115 as well .",
    "we need a slightly more general result regarding portals than that of thorup which we state in the following somewhat technical lemma .",
    "it roughly says that if we have a graph @xmath89 representing some subgraph of @xmath10 such that distances in @xmath10 from a vertex @xmath19 to a shortest path @xmath91 in @xmath10 are approximated well in @xmath89 , then we can pick a small number of portals from @xmath89 along @xmath91 such that these distances are also approximated well with shortest paths in @xmath89 from @xmath19 to @xmath91 through these portals .",
    "[ lem : portal ] let @xmath91 be a shortest path in an edge - weighted undirected graph @xmath65 and let @xmath101 and @xmath116 be given .",
    "let @xmath89 be an undirected graph with @xmath117 such that for any @xmath118 , @xmath119 .",
    "assume that for any @xmath103 , there is a @xmath120 such that @xmath121 .",
    "then there is a subset @xmath122 of @xmath123 of size @xmath124 such that for any @xmath103 there is a @xmath125 such that @xmath126 .",
    "the construction is similar to that of thorup .",
    "the first portal @xmath127 added to @xmath122 is the vertex @xmath128 minimizing @xmath129 .",
    "let @xmath130 be an endpoint of @xmath91 .",
    "we show how to construct @xmath131 $ ] ; the same construction is done for the other subpath of @xmath91 .",
    "let @xmath132 be the latest portal added to @xmath122 and traverse @xmath133 $ ] towards @xmath130 until encountering a vertex @xmath134 such that @xmath135 .",
    "portal @xmath136 is then the next portal added to @xmath122 .",
    "the process stops when reaching the vertex of @xmath123 closest to @xmath130 ; this vertex is added as the final portal @xmath137 to @xmath122 .",
    "let @xmath103 be given . by assumption , there is a @xmath120 such that @xmath121 .",
    "the above construction ensures that there is a @xmath125 such that @xmath138    it remains to prove that @xmath139 . by symmetry , it suffices to show @xmath140| = o(1/\\epsilon'')$ ] . for any @xmath141)$ ] , define potential @xmath142 . for @xmath143 , @xmath144",
    "so the potential is reduced by @xmath145 since @xmath146 and @xmath147 ( because @xmath148 ) , we have @xmath149 , implying that @xmath150 .",
    "our data structure answers a query for vertex pair @xmath12 in two phases , _ phase i _ and _ phase ii_. in this section , we describe the preprocessing for phase i and then the query part .",
    "the output and performance of phase i applied to @xmath19 is stated in the following lemma ( @xmath30 is symmetric ) .",
    "phase i starts with @xmath151 which is an arbitrary region @xmath76 ( among at most two choices ) such that @xmath152 and @xmath153 where @xmath77 is the parent of @xmath76 in @xmath81 .",
    "region @xmath154 is defined similarly .",
    "[ lem : phasei ] phase i for vertex @xmath19 can be implemented to run in @xmath155 time using @xmath156 space . for the output @xmath157",
    ", we have that for all @xmath158 , there is a @xmath159 such that @xmath160 where @xmath161 is the child of @xmath162 on the path in @xmath81 from @xmath163 to @xmath164 .",
    "furthermore , @xmath165 .",
    "note that any @xmath28-path of @xmath10 must intersect @xmath166 .",
    "phase i computes approximate distances to this separator but with the restriction that paths must be contained in @xmath161 .",
    "phase ii is considered in section  [ sec : phaseii ] and it extends the output of phase i to approximate distances to @xmath167 in the entire graph @xmath10 .",
    "we start by constructing a recursive decomposition of @xmath10 and the associated decomposition tree @xmath81 . in order to traverse leaf - to - root paths of @xmath81 efficiently",
    ", we set up a shortcutting system for @xmath81 .",
    "for any region @xmath168 , let @xmath169 be the largest integer such that the depth of @xmath76 in @xmath81 is divisible by @xmath170 .",
    "for any integer @xmath171 between @xmath88 and @xmath169 , we add a pointer from @xmath76 to the ancestor @xmath77 @xmath172 levels above @xmath76 .",
    "we refer to this pointer as a _ shortcut _ and denote it by @xmath173 .",
    "we can get from any region @xmath174 to any proper ancestor @xmath175 of @xmath174 by traversing only @xmath51 shortcuts : first traverse the shortcut @xmath176 where @xmath77 is the closest region to @xmath175 which is either @xmath175 or one of its descendants .",
    "then recurse on pair @xmath177 until reaching @xmath175 . before describing the preprocessing for phase i ,",
    "we need the following lemma . for any vertex @xmath101 ,",
    "define @xmath178 as the set of regions @xmath76 where @xmath179 .",
    "[ lem : regionpath ] for all @xmath101 , regions of @xmath178 form a subpath of a leaf - to - root path in @xmath81 .",
    "let @xmath76 be a region in @xmath178 .",
    "non - corner vertices of shortest paths in @xmath97 have degree three in @xmath10 ( otherwise , their incident edges would have been merged into one in the construction of @xmath76 ) so @xmath19 must be incident to an interior edge @xmath180 of @xmath76 . this edge can not be a pseudo - edge since @xmath181 but must be an edge of @xmath10 .",
    "the same can not be true for both child regions of @xmath76 in @xmath81 since @xmath10 has degree three so at most one of these regions belongs to @xmath178 .",
    "we sometimes regard @xmath178 as the subpath from the lemma .    for any shortcut @xmath182 ,",
    "define @xmath183 as the set of @xmath82 vertices @xmath184 such that @xmath19 is the last vertex from @xmath66 on a path of @xmath185 satisfying @xmath186 ; see figure  [ fig : phaseidata ] .    for each shortcut @xmath182 and each @xmath187 , we construct and store a size @xmath188 @xmath189-portal set @xmath190 of @xmath191 together with distances",
    "@xmath192 for each @xmath193 ( figure  [ fig : phaseidata ] ) ; @xmath194 will be specified precisely in section  [ subsec : timestretch ] below .",
    "this completes the description of the preprocessing .",
    "[ lem : typeiportalset ] the total space required for phase i is @xmath195 .",
    "it suffices to give an @xmath195 bound on the total size of portal sets defined above .",
    "let @xmath196 be given . by lemma",
    "[ lem : regionpath ] , there can only be @xmath51 shortcuts @xmath182 where @xmath197 and @xmath198 .",
    "hence there are only @xmath51 shortcuts @xmath182 where @xmath199 . the total number of sets @xmath183 and the total number of corners of @xmath174 over all shortcuts @xmath182 is @xmath200 and @xmath201 . as each set @xmath190",
    "has size @xmath188 , total size of portal sets is @xmath195 .      in this subsection ,",
    "we present phase i for query vertices @xmath19 and @xmath30 .",
    "figure  [ fig : phaseidata ] is useful to consult in the following .",
    "we assume that starting regions @xmath151 and @xmath154 are not on the same leaf - to - root path in @xmath81 . as we will see later , the other case is easily handled .",
    "pseudocode for vertex @xmath19 can be found in figure  [ fig : phasei ] ; the same call is made with @xmath19 replaced by @xmath30 .    ' '' ''",
    "+ ddd============**phase i * * for @xmath19 : +   + 1 . let @xmath202 be the shortcuts from @xmath203 to @xmath204 + 2 .",
    "let @xmath205 + 3 . for each @xmath206",
    ", let @xmath207 + 4 .",
    "for @xmath208 to @xmath209 + 5 .",
    "let @xmath210 + 6 .",
    "let @xmath211 + 7 .",
    "let @xmath212 be face @xmath213 restricted to vertices that are either in @xmath214 or + are incident to edges in @xmath215 + 8 .",
    "construct the graph @xmath80 consisting of the edges @xmath216 + 9 . for each @xmath217 ,",
    "let @xmath218 + 10.if @xmath219 , construct @xmath220-portal set @xmath221 of @xmath213 of size @xmath188 + 11.construct @xmath222-portal set @xmath223 of @xmath224 of size @xmath225 + 12.output @xmath226 , where @xmath227 +    ' '' ''    let @xmath161 be defined as in lemma  [ lem : phasei ] ( @xmath228 is defined similarly for @xmath30 ) .",
    "let @xmath202 denote the sequence of shortcuts from @xmath229 to @xmath204 . to simplify the code , we assume @xmath230 ; the other case is straightforward .",
    "note that @xmath231 .    in lines @xmath232 and @xmath233 , we obtain the precomputed portal set @xmath205 as well as distances @xmath234 for each portal @xmath206 . note that @xmath235 is well - defined by definition of @xmath151 .    in the @xmath169th iteration of the for - loop",
    ", we are given @xmath236 constituting portals for @xmath237 and we form a graph @xmath80 containing @xmath19 and a subset of @xmath238 such that all distances from @xmath19 to @xmath213 in @xmath239 can be approximated by going through @xmath80 and then along @xmath213 .",
    "an illustration of @xmath80 can be seen in figure  [ fig : hiphaseidata ] .",
    "edges of @xmath240 in line @xmath241 are added to @xmath80 and these represent the approximate distances to @xmath236 in @xmath242 found in the previous iteration . to have @xmath80 approximate distances from @xmath19 in @xmath239",
    ", we add another edge set @xmath243 , defined in line @xmath244 ; for every vertex in @xmath245 , we add to @xmath80 the edge @xmath246 for every @xmath247 , representing a shortest @xmath248-path in @xmath239 .",
    "to allow @xmath80 to traverse @xmath213 , we add @xmath212 in line @xmath249 .",
    "this is a compact representation of face @xmath213 restricted to a subset of its vertices ; each subpath of @xmath213 between two consecutive vertices in this subset is a single edge of the same weight in @xmath212 .",
    "we show below that distances in @xmath80 from @xmath19 to @xmath250 approximate distances from @xmath19 to @xmath213 in @xmath239 . in order to avoid an explosion in the size of future portal sets , we form a @xmath220-portal set @xmath221 of @xmath213 of size",
    "only @xmath188 in line @xmath251 which is then used in the next iteration .",
    "line @xmath252 is identical to line @xmath251 except that we use a value @xmath253 instead of @xmath254 .",
    "we shall pick @xmath255 which gives a much smaller portal set @xmath256 output in line @xmath257 ; this will help speed up phase ii .",
    "we do not use @xmath258 inside the for - loop in line @xmath251 since the approximation error builds up over each iteration so we need the smaller value @xmath254 there .",
    "lemma  [ lem : phasei ] follows from the following invariant for the for - loop in lines @xmath259@xmath251 :",
    "invariant : : :    at the start of the @xmath169th iteration of the for - loop in    lines @xmath259@xmath251 of figure  [ fig : phasei ] , for all    @xmath260 , there is a    @xmath261 such that    @xmath262 ,    and @xmath263 .",
    "note that the invariant holds initially when @xmath208 since @xmath235 is a @xmath264-portal set of @xmath191 and its size is @xmath188 .",
    "[ [ maintenance - of - invariant ] ] maintenance of invariant : + + + + + + + + + + + + + + + + + + + + + + + + +    let @xmath265 be given and assume the invariant holds at the beginning of the @xmath169th iteration of the for - loop .",
    "we show that it also holds at the beginning of the @xmath266th iteration .",
    "let @xmath91 be a shortest path in @xmath239 from @xmath19 to a vertex @xmath267 .",
    "we show that there is a @xmath268 such that @xmath269 approximates the weight of @xmath91 up to a factor of @xmath270 .",
    "the second inequality of the invariant will then follow from lemma  [ lem : portal ] .",
    "the first inequality follows since @xmath271 is the weight of an actual path in @xmath239 from @xmath19 to @xmath113 for each @xmath272 .",
    "let @xmath273 be the last vertex on @xmath91 such that the subpath of @xmath91 from @xmath19 to @xmath273 is contained in @xmath242 .",
    "in particular , @xmath274 . by the invariant at the beginning of the @xmath169th iteration ,",
    "there is a portal @xmath275 such that @xmath276 .",
    "assume first that @xmath277 .",
    "then @xmath91 is contained in @xmath242 and @xmath80 approximates the distance from @xmath19 to @xmath278 up to a factor of @xmath279 with the path starting with @xmath280 and followed by edges of @xmath212 .",
    "now assume that @xmath281 .",
    "consider first the case where @xmath282 ( figure  [ fig : phaseidata ] with @xmath59 playing the role of @xmath283 ) .",
    "we have the precomputed portal set @xmath284 and it contains a portal @xmath285 such that @xmath286 .",
    "hence , @xmath287    now consider the other case where @xmath281 and @xmath288 .",
    "then a shortest path from @xmath283 to @xmath273 in @xmath237 contains a vertex @xmath289 and the subpath from @xmath283 to @xmath290 is contained in @xmath291 .",
    "we have a precomputed portal set @xmath292 containing a portal @xmath285 such that @xmath293 .",
    "this gives @xmath294 as desired .",
    "[ [ termination ] ] termination : + + + + + + + + + + + +    the invariant shows that at the beginning of the @xmath209th iteration , for all @xmath295 , there is a @xmath296 such that @xmath297 .",
    "line @xmath252 is identical to line @xmath251 for @xmath298 except that @xmath254 is replaced by @xmath258 so line @xmath252 increases the approximation by a factor of @xmath299 .",
    "below we choose @xmath254 and @xmath258 such that @xmath300 .",
    "this will imply lemma  [ lem : phasei ] .",
    "obtaining shortcuts in line @xmath301 can be done in @xmath302 time .",
    "lines @xmath232 and @xmath233 take @xmath303 time as @xmath304 and distances @xmath234 for @xmath206 are precomputed .",
    "we first show how a single iteration @xmath169 of the for - loop in lines @xmath259@xmath251 can be implemented to run in @xmath305 time .",
    "then we show how to improve it to @xmath306 .",
    "finding @xmath240 takes @xmath307 time . as @xmath308 , @xmath243",
    "can be found in time @xmath309 .",
    "face @xmath212 is obtained in @xmath310 time by sorting the vertices according to their cyclic ordering in an euler tour of face @xmath213 .",
    "graph @xmath80 and distances @xmath311 for @xmath217 can then be obtained in @xmath312 time . to obtain @xmath313 ,",
    "apply the portal construction algorithm in the proof of lemma  [ lem : portal ] to each shortest path in @xmath314 restricted to @xmath80 .",
    "this takes @xmath315 time .",
    "line @xmath252 takes @xmath225 time .",
    "we improve the time bound to @xmath306 by avoiding the sorting step above . instead , we omit adding edges of @xmath212 to @xmath80 and apply a variant of the portal construction algorithm in the proof of lemma  [ lem : portal ] to each shortest path @xmath316 restricted to @xmath80 .",
    "we describe this variant in the following .    first observe that @xmath317 can be partitioned into @xmath188 subsets @xmath318 where each subset",
    "@xmath319 is either a singleton set consisting of a vertex in @xmath214 , a singleton set consisting of an endpoint of an edge in @xmath240 , or a set @xmath320 for each @xmath321 . assume that each set @xmath319 is sorted along @xmath322 in non - decreasing distance from the source @xmath66 in shortest path tree @xmath18 ; this sorting can be done in the preprocessing step .",
    "the first portal @xmath127 to be added to @xmath313 is the vertex @xmath323 minimizing @xmath324 .",
    "we can identify @xmath127 in @xmath325 time .",
    "let @xmath130 be the vertex of @xmath322 farthest from @xmath66 .",
    "as in the proof of lemma  [ lem : portal ] , we only describe the algorithm for adding portals to @xmath326 $ ] ; adding portals along @xmath327 $ ] is symmetric .    for each set @xmath319 , we keep a pointer to the first vertex in its sorted order .",
    "we then make a single pass over the sets @xmath319 and for each of them move its pointer forward to the first vertex in @xmath326 $ ] ( if any ) for which the distance to it can not be approximated by going through the previously added portal @xmath127 , i.e. , the first vertex @xmath328 $ ] such that @xmath329 . among the vertices with pointers to them , the one closest to @xmath127 in @xmath322 is then added to @xmath313 as the next portal , and @xmath127 is updated to this vertex .",
    "additional passes are made until the pointers have moved past all vertices of their respective @xmath319 sets .",
    "correctness follows since the set of portals formed is the same as that obtained by the portal - construction algorithm of thorup .",
    "running time is @xmath306 . to see this ,",
    "note that each pass ( except possibly the last ) adds at least one portal to @xmath313 so the number of passes is @xmath188 .",
    "furthermore , each pass takes @xmath330 time where @xmath331 is the total number of vertices visited in that pass over all sets @xmath319 .",
    "since the total number of vertices visited over all passes is @xmath332 , the time bound follows .    we can obtain a stretch of @xmath333 for the approximate distances obtained in the final iteration of phase i as follows . since @xmath334 when @xmath335 , we pick @xmath336 to obtain @xmath337 which is at most @xmath338 when @xmath339 . picking @xmath340 gives @xmath341 for @xmath41 smaller than some positive constant .",
    "this shows lemma  [ lem : phasei ] .",
    "phase ii takes as input the sets @xmath256 and @xmath342 with associated approximate distances @xmath343 and @xmath344 that were output by phase i. the output of phase ii has the properties stated in the following lemma .",
    "denote by @xmath29 the shortest path separator in @xmath10 that separates @xmath163 into @xmath161 and @xmath228 . in section  [ sec : approxdist ]",
    ", we efficiently obtain from this output an approximate @xmath28-distance .",
    "[ lem : phaseii ] phase ii for @xmath19 can be implemented to run in @xmath345 time using @xmath346 space , given the output from phase i. for the output @xmath347 from phase ii , we have @xmath348 and for any @xmath349 , there is a vertex @xmath350 such that @xmath351 .",
    "the preprocessing for phase ii consists of the following four steps :    [ [ step-1 ] ] step @xmath301 : + + + + + + + + + + + + + + + + + + + + +    for each @xmath196 and each of the at most two regions @xmath352 with @xmath353 and @xmath354 where @xmath355 is the parent of @xmath352 in @xmath81 , we form a @xmath356-portal set @xmath357 of @xmath358 . from this",
    "we form and store a subset @xmath359 of @xmath360 .",
    "this subset contains @xmath361 .",
    "in addition , for every @xmath362 and every left or right side @xmath363 ( see section  [ subsec : recdecomp ] ) such that @xmath91 and @xmath113 are contained in the same path of @xmath18 , @xmath359 contains the successor and predecessor ( if any ) of @xmath113 on @xmath91 ; figure  [ fig : pw ] gives an illustration .",
    "note that @xmath364 so @xmath365 . for any @xmath366",
    "there is a @xmath367 with @xmath368 . since @xmath369 the shortest path in @xmath358 from @xmath370 to @xmath30 intersects @xmath360 .",
    "hence there is a @xmath371 which is either @xmath370 , the successor or predecessor of @xmath370 on @xmath91 , or a corner in @xmath372 such that @xmath373 .",
    "we also have @xmath374 .",
    "[ [ step-2 ] ] step @xmath232 : + + + + + + + + + + + + + + + + + + + + +    for each shortcut @xmath182 and each @xmath375 , store a @xmath376-portal set @xmath377 of @xmath378 of size @xmath225 ; call this a _ type 1 _ portal set .",
    "[ [ step-3 ] ] step @xmath233 : + + + + + + + + + + + + + + + + + + + + +    for any shortcut @xmath182 , _ dual portal set _",
    "@xmath379 is the set of vertices @xmath380 for which a vertex @xmath59 exists with @xmath381 , @xmath382 , such that @xmath383 ; see figure  [ fig : phaseiidata ] .",
    "define @xmath384 .",
    "note that @xmath385 .",
    "for each @xmath386 , store a @xmath387-portal set @xmath388 of @xmath378 of size @xmath225 together with distances @xmath389 for each @xmath390 .",
    "refer to it as a _ type 2 _ portal set .",
    "the definition of type 2 portal sets is rather technical so let us give the high - level idea for introducing them ; see figure  [ fig : phaseiidata ] in the following . as in phase",
    "i , we jump along shortcuts @xmath391 in phase ii ; a detailed description is given in the next subsection . in phase ii , we need approximate distances in @xmath10 from certain portals @xmath113 in @xmath237 to @xmath392",
    ". however , @xmath113 might also be present in @xmath213 . in this case",
    ", we can not afford to associate portal sets with @xmath113 and shortcut @xmath391 since @xmath113 may occur in several regions of @xmath81 ( see lemma  [ lem : regionpath ] ) .",
    "however , vertices @xmath59 for which @xmath352 is sandwiched in between @xmath242 and @xmath239 can pay for dual portal set @xmath393 and the associated type 2 portal sets . as we show below",
    ", we can obtain an approximate distance from @xmath113 to any @xmath394 by first going along @xmath18 from @xmath113 to a nearby @xmath395 , then along a shortest path in @xmath10 from @xmath396 to a portal @xmath397 in the type 2 portal set of @xmath396 , and finally from @xmath370 to @xmath398 along @xmath18 .    using hashing",
    ", we can access each type 1 and type 2 portal set in @xmath82 time from the vertex and the shortcut defining it .",
    "[ [ step-4 ] ] step @xmath259 : + + + + + + + + + + + + + + + + + + + + +    for each shortcut @xmath182 and for any shortest path @xmath399 , we keep a veb - tree , allowing us to find the successor / predecessor of any vertex of @xmath91 in the subset @xmath400 in @xmath51 time . with hashing ,",
    "space required for the veb - tree is @xmath401  @xcite .",
    "as mentioned in  @xcite , both space and query bounds can be made deterministic .",
    "[ lem : typeiiandiiiportalset ] the total space required for phase ii is @xmath402 .    the total size of portal sets @xmath403 over all @xmath101 is @xmath404 .",
    "a proof similar to that of lemma  [ lem : typeiportalset ] shows that the total size of all type @xmath301 portal sets is @xmath405 .    to bound the size of type 2 portal sets , consider two shortcuts @xmath182 and @xmath406 . by lemma  [ lem : regionpath ] , @xmath379 and @xmath407",
    "are disjoint if @xmath408 and @xmath409 are not contained in the same leaf - to - root path @xmath21 in @xmath81 .",
    "for any @xmath196 , there are only @xmath51 shortcuts @xmath410 where @xmath411 .",
    "hence @xmath412 summed over all shortcuts @xmath182 is @xmath413 .",
    "hence , the total size of all dual portal sets @xmath379 , and hence also the total size of all veb trees , is @xmath405 . recall that the number of regions is @xmath31 .",
    "each region has @xmath82 corners and each set @xmath183 has constant size so the total size of all sets @xmath414 is @xmath405 .",
    "each element of these sets has a type 2 portal set of size @xmath225 .",
    "let @xmath415 be the path from @xmath161 to the root @xmath10 of @xmath81 . in the following , for any vertex @xmath59 , denote by @xmath352 the region ( if any ) such that @xmath416 , @xmath353 , and @xmath354 where @xmath355 is the parent of @xmath352 in @xmath81 .",
    "observe that @xmath417 .",
    "phase ii for @xmath19 takes the output from phase i and produces output satisfying lemma  [ lem : phaseii ] .    ' '' ''     + ddd============**phase ii * * for @xmath19 : +   + 1 .",
    "let @xmath202 be the shortcuts from @xmath418 to @xmath419 + 2 .",
    "let @xmath420 ( portal set output from phase i ) + 3 .",
    "let @xmath89 be the graph initially consisting of edges @xmath421 for all @xmath422 + 4 .",
    "for @xmath423 to @xmath209 + 5 .",
    "add to @xmath89 edges @xmath424 for all @xmath425 and @xmath426 + 6 .",
    "for each @xmath261 and each @xmath427 + 7 .",
    "add to @xmath89 edge @xmath428 for all @xmath429 + 8 .",
    "let @xmath430 + 9 .",
    "+    ' '' ''    we give a high - level description of phase ii before going into details .",
    "pseudocode can be seen in figure  [ fig : phaseii ] .",
    "the algorithm traverses shortcuts @xmath202 from @xmath418 to the root @xmath419 of @xmath81 and incrementally constructs a graph @xmath89 which at termination will satisfy lemma  [ lem : phaseii ] . in line @xmath233 ,",
    "edges of @xmath89 represent approximate paths found in phase i. these paths correspond to subpaths of the final full paths in @xmath10 ( corresponding to the final @xmath89 ) and the subpaths are prefixes of these full paths that are contained in @xmath161 .",
    "consider the @xmath169th iteration of the for - loop . in line @xmath241 , we check if any subpath endpoint @xmath261 disappears as a boundary vertex when jumping from @xmath242 to @xmath239 .",
    "if so , we can extend the subpath to full paths @xmath432 for each @xmath426 .",
    "the other interesting case is when @xmath433 .",
    "then we do not have a type @xmath301 portal set associated with @xmath113 and @xmath391 but it might be that some separator vertices @xmath59 of @xmath29 that are present in @xmath392 are no longer present in @xmath213 and we need to ensure that there is a good path in @xmath434 from @xmath113 to @xmath59 .",
    "this case is handled in lines @xmath244 and @xmath249 where we ensure such a good path from @xmath113 to @xmath59 by using the type @xmath232 portal sets associated with vertices of @xmath435 that are close to @xmath113 . to show correctness ,",
    "i.e. , that the set output in line @xmath436 satisfies lemma  [ lem : phaseii ] , let @xmath59 be any vertex on @xmath29 and let @xmath21 be a shortest path in @xmath10 from @xmath19 to @xmath59 .",
    "let @xmath398 be the last vertex on @xmath21 such that @xmath437 $ ] is contained in @xmath161 .",
    "note that @xmath438 . by lemma  [ lem : phasei ]",
    ", there is a @xmath439 such that @xmath440 . since @xmath417 , we have @xmath416 .",
    "since @xmath441 , we also have @xmath442 .",
    "let @xmath443 and @xmath444 be the shortcuts such that @xmath445 , @xmath446 , and @xmath447 , @xmath448 .",
    "we consider two cases in the following : @xmath449 and @xmath450 .",
    "[ [ case-1-i_p_1leq - i_w - figurefigcase1 ] ] case @xmath301 , @xmath449 ( figure  [ fig : case1 ] ) : + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    consider iteration @xmath451 of the for - loop .",
    "since @xmath452 , we have @xmath453 . since @xmath448",
    ", it follows that @xmath454 .",
    "hence , the final @xmath89 contains an edge @xmath455 for each portal @xmath456 ( line @xmath241 ) . since @xmath457 and since @xmath458",
    ", we must have @xmath459 so there is a portal @xmath460 satisfying @xmath461 .",
    "note that @xmath462 .",
    "the path in the final graph @xmath89 consisting of edges @xmath463 and @xmath464 followed by the path in @xmath18 from @xmath465 to @xmath59 has weight at most @xmath466    [ [ case-2-i_p_1-i_w - figurefigcase2 ] ] case @xmath232 , @xmath450 ( figure  [ fig : case2 ] ) : + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    consider iteration @xmath467 of the for - loop . since @xmath468 , there is a portal @xmath469 such that @xmath470 ( see step @xmath301 of the preprocessing ) . if @xmath471 then @xmath472",
    "otherwise , there is a vertex @xmath473 such that the path in @xmath18 from @xmath474 to @xmath475 contains @xmath370 .",
    "hence , @xmath476    it follows from the above that there is a vertex @xmath477 such that @xmath478 .",
    "thus , for one of the two choices of @xmath396 in line @xmath244 , we have @xmath479 for that choice of @xmath396 , let @xmath480 be the portal in @xmath481 such that @xmath482 .",
    "the path in @xmath89 consisting of edges @xmath463 ( added in line @xmath233 ) and @xmath483 ( added in line @xmath249 ) followed by the path in @xmath18 from @xmath480 to @xmath59 has weight at most @xmath484    to show lemma  [ lem : phaseii ] , note that @xmath485 is at most @xmath486 for any @xmath41 less than some positive constant . as for query time , lines @xmath301 and @xmath232 can be executed in @xmath302 time . by lemma  [ lem : phasei ] , adding edges to @xmath89 in line @xmath233 can be done in @xmath487 time .",
    "the total time to find successors and predecessors over all iterations of the for - loop is @xmath488 .",
    "the additional time spent in the for - loop is bounded by the number of edges added to @xmath89 .",
    "the total number of edges added in line @xmath249 is @xmath489 .",
    "note that every @xmath113 considered in line @xmath241 is not included in @xmath313 in line @xmath490 .",
    "hence , we add a total of @xmath491 edges in line @xmath241 .",
    "in this section , we show how to obtain an approximate @xmath28-distance within the time and space stated in theorem  [ thm : main ] , given the output of phase ii .    we execute phase ii for both @xmath19 and @xmath30 , getting outputs @xmath492 and @xmath493 , respectively .",
    "to find an approximate @xmath28-distance , assume first that @xmath494 .",
    "let @xmath91 be one of the two shortest paths from @xmath66 in @xmath18 bounding @xmath29 and sort the vertices of @xmath495 along @xmath91 . to do the sorting efficiently",
    ", we make a dfs traversal of @xmath18 during preprocessing and label each vertex with an integer time stamp denoting when it was first visited in the traversal .",
    "now , sorting the vertices of @xmath495 along @xmath91 corresponds to integer sorting their precomputed labels . with the algorithm of han and thorup  @xcite , this takes @xmath496 time .",
    "we then remove all @xmath497 for which there is another @xmath498 such that @xmath499 .",
    "this can be done in @xmath500 time with two linear scans over @xmath495 , one in sorted order and the other in reverse sorted order ; the first resp .",
    "second scan removes @xmath59 if there is a @xmath398 before resp .",
    "after @xmath59 in the order considered such that the inequality holds .",
    "let @xmath501 be the resulting subset and form a similar subset @xmath502 of @xmath503 .",
    "let @xmath504 be the minimum of @xmath505 over all pairs @xmath506 where @xmath507 $ ] has no interior vertices belonging to @xmath508 .",
    "this takes @xmath500 time .",
    "compute a similar value @xmath509 for the other shortest path @xmath510 of @xmath18 bounding @xmath29 .",
    "the approximate distance output is @xmath511 .",
    "we need to show @xmath512 .",
    "pick @xmath349 such that @xmath513 and assume that @xmath514 ; the case where @xmath515 is symmetric . by lemma  [ lem : phaseii ]",
    ", there are vertices @xmath516 and @xmath517 such that @xmath518 and @xmath519 .",
    "pick a pair @xmath520 belonging to @xmath507 $ ] such that they occur on this path in the order @xmath521 and such that @xmath522 $ ] has no interior vertices belonging to @xmath508 . then @xmath523 showing the desired . above",
    ", we assumed that @xmath524 .",
    "if this is not the case , we modify @xmath525 as follows .",
    "partition @xmath526 into maximal - size groups where in each group @xmath527 , all vertices @xmath59 have the same nearest neighbor @xmath398 in @xmath18 belonging to @xmath29 .",
    "replace vertices of @xmath527 by @xmath398 in @xmath525 and instead of approximate distances @xmath528 for @xmath529 , use instead @xmath530 for the approximate distance for @xmath398 .",
    "a similar update is done to @xmath503 , ensuring that @xmath524 .",
    "it is easy to see that the above analysis still carries through .",
    "we have shown theorem  [ thm : main ] in the case where @xmath164 and @xmath531 are not on the same leaf - to - root path in @xmath81 .",
    "if instead , say , @xmath532 then @xmath533 and phase i and ii for @xmath19 gives a portal set of @xmath29 .",
    "our algorithm above is modified to find the portal @xmath113 nearest to @xmath30 on @xmath29 and outputs @xmath534 , giving the desired stretch .",
    "this shows theorem  [ thm : main ] in the remaining case where @xmath164 and @xmath531 are on the same leaf - to - root path .",
    "we gave a @xmath2-approximate distance oracle for undirected @xmath0-vertex planar graphs and fixed @xmath1 with @xmath3 space and @xmath4 query time which improves the previous best query time - space product from @xmath8 to @xmath9 .",
    "we have not focused on preprocessing time . with a simple implementation",
    ", we should get near - quadratic preprocessing time and it is possible that the exact space - efficient oracle in  @xcite can speed this up further to @xmath535 as the number of precomputed distances required by our oracle is only @xmath536 . with techniques from , e.g. ,  @xcite , we can likely get down to @xmath536 .",
    "the dependency on @xmath41 in the query time - space product is slightly worse ; it is roughly @xmath48 ( @xmath46 when @xmath47 ) compared to @xmath49 in  @xcite and roughly @xmath45 in  @xcite ( where the latter has a slightly worse dependency on @xmath0 than  @xcite ) . using mainly monge properties , we believe it should be possible to replace at least one @xmath45 factor by @xmath37 . getting @xmath537 query time and @xmath538 space for some constant @xmath539 seems problematic with our techniques due to the @xmath540 bottleneck from the use of veb trees when answering queries .",
    "99 s.  chechik .",
    "approximate distance oracle with constant query time .",
    "stoc@xmath541 , pp .",
    "p.  erds .",
    "extremal problems in graph theory . in theory of graphs and its applications ( proc .",
    "smolenice , @xmath544 ) , czechoslovak acad .",
    "prague , @xmath545 , pp .",
    "m.  l.  fredman and d.  e.  willard . surpassing the information theoretic bound with fusion trees .",
    "journal of computer and system sciences , @xmath548(@xmath233):@xmath549@xmath550 , @xmath551 .",
    "y.  han and m.  thorup .",
    "integer sorting in @xmath552 expected time and linear space .",
    "@xmath553rd annual symposium on foundations of computer science ( focs ) , pp .",
    "@xmath554@xmath555 , @xmath7 .",
    "k.  kawarabayashi , p.  n.  klein , and c.  sommer .",
    "linear - space approximate distance oracles for planar , bounded - genus , and minor - free graphs . in @xmath556th",
    "international colloquium on automata , languages and programming ( icalp ) , pp .",
    "@xmath554@xmath557 , @xmath558 .",
    "k.  kawarabayashi , c.  sommer , and m.  thorup .",
    "more compact oracles for approximate distances in undirected planar graphs . in @xmath559th acm - siam symposium on discrete algorithms ( soda ) ,",
    "@xmath560@xmath561 , @xmath562 .",
    "p.  n.  klein .",
    "preprocessing an undirected planar network to enable fast approximate distance queries . in @xmath563th acm - siam symposium on discrete algorithms ( soda ) ,",
    "@xmath564@xmath565 , @xmath7 .",
    "r.  j.  lipton and r.  e.  tarjan . a separator theorem for planar graphs",
    "siam journal on applied mathematics , @xmath547(@xmath232):@xmath566@xmath567 , @xmath568 .",
    "m.  mendel and a.  naor .",
    "ramsey partitions and proximity data structures .",
    "journal of the european mathematical society , @xmath436(@xmath232):@xmath569@xmath570 , @xmath571 . announced at focs@xmath572 .",
    "s.  mozes and c.  sommer .",
    "exact distance oracles for planar graphs . in @xmath573rd acm - siam symposium on discrete algorithms ( soda ) ,",
    "@xmath574@xmath575 , @xmath576 .",
    "m.  ptracu and l.  roditty .",
    "distance oracles beyond the thorup - zwick bound . in @xmath577st ieee symposium on foundations of computer science ( focs ) , @xmath578",
    ". m.  ptracu and m.  thorup . time - space trade - offs for predecessor search .",
    "@xmath556th annual acm symposium on theory of computing ( stoc ) , pp .",
    "@xmath579@xmath580 , @xmath581 .",
    "m.  thorup .",
    "compact oracles for reachability and approximate distances in planar digraphs .",
    "journal of the acm , @xmath577(@xmath244):@xmath582@xmath583 , @xmath6 .",
    "announced at focs @xmath5 .",
    "m.  thorup and u.  zwick .",
    "approximate distance oracles .",
    "journal of the acm , @xmath584(@xmath301):@xmath301@xmath559 , @xmath585 . announced at stoc@xmath586 .",
    "d.  e.  willard .",
    "log - logarithmic worst - case range queries are possible in space @xmath587 .",
    "information processing letters , @xmath588(@xmath232):@xmath589@xmath590 , @xmath591 . c.  wulff - nilsen .",
    "algorithms for planar graphs and graphs in metric spaces .",
    "phd thesis , university of copenhagen , @xmath578 . c.  wulff - nilsen .",
    "approximate distance oracles with improved preprocessing time . in @xmath573rd",
    "acm - siam symposium on discrete algorithms ( soda ) , pp .",
    "@xmath592@xmath593 , @xmath576 .",
    "c.  wulff - nilsen .",
    "approximate distance oracles with improved query time . in @xmath559th acm - siam symposium on discrete algorithms ( soda ) ,",
    "@xmath594@xmath595 , @xmath562 ."
  ],
  "abstract_text": [
    "<S> we consider approximate distance oracles for edge - weighted @xmath0-vertex undirected planar graphs . given fixed @xmath1 , we present a @xmath2-approximate distance oracle with @xmath3 space and @xmath4 query time . </S>",
    "<S> this improves the previous best product of query time and space of the oracles of thorup ( focs @xmath5 , j.  acm @xmath6 ) and klein ( soda @xmath7 ) from @xmath8 to @xmath9 . </S>"
  ]
}
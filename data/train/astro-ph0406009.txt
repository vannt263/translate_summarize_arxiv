{
  "article_text": [
    "it is believed that large - scale structures in the universe have formed from the gravitational amplification of initial seed density perturbations .",
    "evolution of density perturbations at scales smaller than the hubble radius in an expanding background can be studied in the newtonian limit in the matter - dominated regime .",
    "linear theory can be used to study the growth of small perturbations in density .",
    "but in the absence of analytical methods , numerical simulations are the only tool available for studying clustering in the non - linear regime .",
    "the last two decades have seen a rapid development of techniques of cosmological simulations as well as computing power and the results of these simulations have provided valuable insight into the study of structure formation .",
    "a number of attempts has been made over the past decade to model the non - linear evolution of constructs like the two - point correlation function using certain non - linear scaling relations @xcite , @xcite . in these relations ,",
    "the evolution of the correlation function can be divided into three distinct regimes @xcite - the linear regime , the intermediate regime and the non - linear regime . clearly , a large dynamic range is required in any n - body simulation in order to address the issue in all the three regimes under consideration .",
    "it has been pointed out @xcite , @xcite that by simulating a two - dimensional system a much higher dynamic range can be achieved as compared to a complete three - dimensional simulation with similar computational resources .",
    "the simplest n - body method that has been used for studying clustering of large scale structure is the particle mesh method .",
    "it has two elegant features in that it provides periodic boundary conditions by default , and the force is softened naturally so as to ensure collisionless evolution of the particle distribution .",
    "however , softening of force done at grid scale implies that the force resolution is very poor .",
    "in particular , this limits the dynamic range over which we can trust the results of the code @xcite , @xcite .",
    "a completely different approach to the problem of computing force is used in the tree method . in this approach",
    "we consider groups of particles at a large distance to be a single entity and compute the force due to the group rather than sum over individual particles .",
    "there are different ways of defining a group , but by far the most popular method is that due to barnes and hut @xcite .",
    "several attempts have been made to combine the high resolution of a tree code with the natural inclusion of periodic boundary conditions in a pm code @xcite .",
    "the treepm method in three dimensions is a hybrid n - body method which attempts to combine the same features @xcite .",
    "the basic motivation for these codes is to improve the acceptable dynamic range of simulations without a proportionate increase in computational requirements . in this paper , we describe the treepm method for a two - dimensional system .",
    "the plan of the paper is as follows :  2 introduces the basic formalism of both tree and particle - mesh codes .",
    " 3 describes the modelling of the force in two dimensions .  4",
    "gives the mathematical model for splitting the force in two dimensions between the tree force and the particle - mesh force components .",
    " 5 describes the softening scheme used for the 2d force and we analyse errors in force for the 2d treepm code in  6 .",
    "we discuss the integration of the equations of motion that we use in the 2d treepm code in  7 .",
    "we also describe a test for self - similar evolution of power law spectra in the same section .",
    "we present some results of a 2d treepm simulation run in  8 .",
    "a discussion of the relative merits of the treepm code and a pm code is also given .",
    "computational requirements of our implementation of the 2d treepm code are discussed in  9 .",
    "we use the same method as the barnes and hut ( 1986 ) tree code in our implementation of the 2d treepm code . in a 2d tree code",
    "the simulation area is taken to be a square .",
    "if this were to represent the stem of a tree , then it will be subdivided at each stage into smaller squares ( branches ) till we reach the particles ( leaves ) . to construct the tree",
    "we add particles to the simulation area and subdivide any cell that ends up with two particles @xcite .",
    "the force on a particle is computed by adding contribution of other particles or of cells .",
    "if a cell is too close to the particle , or if it is too big , we consider the sub cells of the cell in question instead .",
    "the decision is made by computing the quantity @xmath0 and comparing it with a threshold @xmath1 : @xmath2 where @xmath3 is the size of the cell and @xmath4 is the distance from the particle to the centre of mass of the cell .",
    "the error in force increases with @xmath1 .",
    "the number of terms that contribute to the force of a particle is much smaller than the total number of particles for most choices of @xmath1 and this is where a tree code gains on a direct force summation method .",
    "we will use the barnes and hut ( 1986 ) tree code , as already mentioned . a crucial change to the standard tree walk",
    "is that we do not follow nodes representing cells that do not have any spatial overlap with the region within the threshold radius ( @xmath5 , defined later ) for computing the short range force .",
    "a particle - mesh ( pm ) code is the obvious choice for computing long range interactions .",
    "a pm code adds the construct of a regular grid to the distribution of particles .",
    "the density field represented by particles is interpolated onto grid points and the poisson equation is solved in fourier space .",
    "the force is then interpolated back to the positions of particles .",
    "use of a grid makes forces inaccurate at the grid scale and smaller scales . in this scheme ,",
    "the mesh and the weight function ( cloud - in - cell ( cic ) in our case ) used for interpolation between the grid and particle positions are the main sources of anisotropy .",
    "however , we use the particle - mesh method only for computing the long range force and errors at small scales do not contribute significantly . also ,",
    "by _ de - convolving _ the interpolating function @xcite , we reduce errors due to anisotropy effects substantially .",
    "when we go from three to two dimensions , we have , in principle , two different ways of modelling the system @xcite : ( 1 ) we can consider two - dimensional perturbations in a three - dimensional expanding universe . here",
    "we take the force between particles to be @xmath6 and assume that all particles ( representing perturbations ) and their velocities are confined to a single plane at the initial instant .",
    "( 2 ) we can study perturbations that do not depend on one of the three coordinates , i.e. , we start with a set of infinitely long straight `` needles '' all pointing along one axis .",
    "the force of interaction then falls as @xmath7 .",
    "the evolution keeps the `` needles '' pointed in the same direction , and we study the clustering in an orthogonal plane .",
    "particles in the n - body simulation represent the intersection of these `` needles''with this plane . in both of these approaches ,",
    "the universe is three - dimensional and the background is expanding isotropically . following earlier studies @xcite,@xcite , @xcite , we choose the second of the two options .",
    "more specifically , in order to obtain the force due to perturbations in a plane , we solve the poisson equation for the perturbed part of the gravitational potential in two dimensions , whereas the unperturbed background is still the three dimensional _ spherically symmetric _ friedman universe .",
    "thus the perturbations are described by the _ mass per unit length _",
    ", where this length is in the direction orthogonal to the two dimensions considered here .",
    "the gravitational force of a particle situated at the origin in two dimensions then has the form : @xmath8 { \\bf{r } } .",
    "\\label{2dforce}\\ ] ] here @xmath9 is the gravitational coupling constant and @xmath10 is the mass per unit length of the `` needle '' represented by the particle .",
    "we split the @xmath7 force into a long range force and a short range force in a manner identical to that for the three dimensional treepm force @xcite .",
    "we compute the long range force in fourier space and the short range force in real space . following ewald s method @xcite ,",
    "the gravitational potential can be split into two parts in fourier space : @xmath11\\nonumber\\\\    & = & \\phi_k^l + \\phi_k^s \\nonumber \\\\",
    "\\phi_k^l & = & - \\frac{2 \\pi g \\rho_k}{k^2 } \\exp\\left(-k^2   r_s^2\\right )   \\label{longr } \\\\",
    "\\phi_k^s & = & - \\frac{2 \\pi g \\rho_k}{k^2 } \\left[1 - \\exp\\left(-k^2   r_s^2\\right)\\right ]   \\label{shortr}\\end{aligned}\\ ] ] where @xmath12 and @xmath13 are the long range and the short range potentials , respectively .",
    "the splitting is done at the scale @xmath14 .",
    "the expression for the 2d short range force in real space is @xmath15\\frac{g m}{r^2}{\\bf r }   \\label{fshort2d}\\ ] ] the above equations describe the mathematical model for force in the 2d treepm code .",
    "the long range potential is computed in fourier space , just as in a pm code , but using eqn.[longr ] instead of eqn.[pm_std ] .",
    "this potential is then used to compute the long range force .",
    "the short range force is computed directly in real space using eqn.[fshort2d ] .",
    "this is computed using the tree approximation .",
    "the short range force falls rapidly at scales @xmath16 and hence we need to take this into account only in a small region around each particle .",
    "we call the scale upto which we add the small scale force as @xmath5 .    evaluation of the short range force can be time consuming . to save time , we compute an array containing the magnitude of the short range force at the outset .",
    "this procedure is identical to that followed in the 3d treepm code @xcite .",
    "the force between any two objects , particle - cell or particle - particle , is then computed by linearly interpolating between the nearby array elements multiplied by the unit vector @xmath17 .",
    "it is necessary for the array to sample the force at sufficiently closely spaced values of @xmath4 in order to keep interpolation errors in control .",
    "we need to soften the 2d gravitational force at small scales in order to ensure _ collisionless evolution _ of the particle distribution in a cosmological simulation .",
    "we have considered two schemes for softening of the force at small scales :    \\1 ) * plummer softening*. the force , in this case , will be given by @xmath18 where @xmath19 is the softening length .",
    "\\2 ) * cubic spline softening*. in this case , we solve the poisson equation in two dimensions with the force due to a point mass replaced by that exerted by an extended mass distribution represented by the following : @xmath20 here @xmath21 is the normalised spline kernel used in the sph formalism @xcite with @xmath19 the smoothing length .",
    "@xmath21 has the following form in two dimensions . @xmath22",
    "solving the poisson equation and using relevant boundary conditions for the potential and its first derivative ( i.e. the force ) to obtain the constants of integration , we get the cubic spline softened potential and then obtain the force @xmath23 as a gradient of the potential .",
    "one can easily see that the spline softening has the advantage that the force becomes exactly newtonian for @xmath25 , while the plummer force converges relatively slowly to the newtonian form .",
    "dehnen @xcite has argued that compact softening kernels are superior and we use the spline softened kernel in our implemention of the 2d treepm code .",
    "it is important to estimate the errors in numerical evaluation of force in a realistic situation , even though we do not expect errors to add up coherently . for a comprehensive study in errors in force introduced by various components of the treepm code we would like to refer to @xcite .",
    "though the above - mentioned work is in the context of the 3d treepm code , the key features of the analysis actually carry over to the 2d treepm code as well .",
    "we test errors for two distributions of particles : a homogeneous distribution and a clumpy distribution . for the homogeneous distribution ,",
    "we use randomly distributed particles in a box .",
    "we use @xmath26 particles distributed on a @xmath26 grid .",
    "we compute the force using a reference setup ( @xmath27 , @xmath28 , @xmath29 ) and the setup we wish to test ( @xmath30 , @xmath31 , @xmath32 ) .",
    "we compute the fractional error in force acting on each particle .",
    "this is defined as @xmath33    = 4truein    fig.[error_plot ] shows the cumulative distribution of fractional errors .",
    "the curves show the fraction of particles with error greater than @xmath19 .",
    "the thick line shows this for the homogeneous distribution .",
    "error @xmath19 for @xmath34 of particles is less than @xmath35 .",
    "results for the clumpy distribution of particles are shown by the dashed line . for this case",
    ", we used the output of a 2d power law ( @xmath36 ) simulation run in an einstein desitter background universe with the treepm code .",
    "errors in this case are somewhat smaller as compared to the homogeneous distribution for much the same reason as that for a 3d tree code @xcite or a 3d treepm code @xcite .",
    "error @xmath19 for @xmath34 of particles is less than @xmath37 for the clumpy distribution .",
    "our discussion so far has dealt only with the evaluation of force .",
    "this is the main focus of this paper as the key difference between the treepm and other methods is in the scheme used for evaluation of force .",
    "however for the sake of completeness , we give here details of integration of the equations of motion used in the code .",
    "we use an einstein desitter background cosmology for all our 2d simulations .",
    "the equations of motion are then given by the simple form @xmath38 here @xmath39 is the comoving coordinate , @xmath40 is the scale factor , @xmath41 is the gravitational potential of perturbations , @xmath42 is the total density and @xmath43 is the average density of the universe .",
    "dot represents differentiation with respect to time .",
    "we can recast these equations in the following form .",
    "@xmath44 here prime denotes differentiation with respect to the scale factor , @xmath45 is the density contrast and @xmath46 is the appropriately scaled gravitational potential of perturbations .",
    "the equations of motion are identical to that in three dimensions apart from the fact that all the vectors under consideration are two - dimensional vectors .",
    "the functional form of the gravitational force given by @xmath47 is , of course , different .",
    "one can see that the equations of motion contain a velocity dependent term and hence we can not use the usual leap - frog method .",
    "we recast the leap - frog method so that velocities and positions are defined at the same instant @xcite .",
    "we solve the equation for velocity iteratively .",
    "time step is chosen to be a small fraction of the smallest dynamical time in the system at any given stage .",
    "the fraction to be chosen is fixed by checking for _ scale invariance _ in evolution of power law spectra : a simulation is repeated with different choices of timestep until we find the largest timestep for which we can reach the highly non - linear regime and retain scale invariance as well .",
    "we then use a timestep that is half of this largest time step .",
    "fig.[fig_scale_inv ] shows @xmath48 as a function of @xmath49 for several epochs obatined from a 2d treepm simulation of a power law model with index @xmath50 .",
    "@xmath51 is the scale which is going non - linear at time @xmath52 and it varies in proportion with @xmath53 in the einstein desitter model . in the figure , we have only plotted @xmath48 at scales more than two times larger than the artificial softening length used in the simulation .",
    "we can see that scale invariance holds for the spectrum over a wide range which means that we can probe the non - linear regime in gravitational clustering with a high degree of accuracy using the 2d treepm code .",
    "in this section , we present a brief comparison of the 2d treepm and particle - mesh methods with the aim of highlighting the efficacy of our method in 2d cosmological simulations .",
    "we ran a 2d simulation of a power law model with index @xmath50 with @xmath26 particles on a @xmath26 grid in an einstein desitter background universe with a pm code as well as with the treepm code discussed here . for the treepm run we used @xmath30 , @xmath31 and softening parameter @xmath54 .",
    "= 2.46truein = 2.46truein = 2.46truein",
    "= 2.46truein    the top panel of fig.[pos_den_corr_pm_treepm ] shows identical boxes from two independent simulations with the same initial conditions .",
    "the top left panel shows a simulation with the treepm code and the top right panel shows the same for a pm code .",
    "the large scale structures appear to be the same in the two .",
    "however , one can see that there are significant differences at small scales when one plots the two - point correlation function for the two cases .",
    "@xmath55 is plotted as a function of scale @xmath4 in the bottom left panel of fig.[pos_den_corr_pm_treepm ] .",
    "the thick line shows the correlation function for the treepm simulation and the dashed line shows the same for the pm simulation .",
    "we have only plotted @xmath48 at scales more than two times larger than the artificial softening length used in the treepm simulation .",
    "the correlation function in the treepm simulation matches with that from the pm simulation at large scales , but at scales of the order of unity ( in grid units ) and below , the treepm simulation has a higher correlation function .",
    "this is to be expected because of the superior force resolution of the treepm method as opposed to the pm force , where the force is softened naturally at the grid scale .",
    "the scale of softening for the pm code is marked by an arrow in the figure .",
    "we also study the density profiles of the two circled haloes in the top panel of fig.[pos_den_corr_pm_treepm ] .",
    "these particular haloes have been chosen as representatives for the analysis because they are reasonably large , dense and spherically symmetric .",
    "the bottom right panel of fig.[pos_den_corr_pm_treepm ] shows average density @xmath56 within a sphere of radius @xmath4 from the halo centre plotted as a function of @xmath4 for the two haloes .",
    "the full line shows the density profile for the halo from the treepm simulation and the dashed line the same from the pm simulation . here",
    "we have only plotted average density at scales more than four times larger than the artificial softening length used in the treepm simulation .",
    "we can see that , though not visibly obvious from fig.[pos_den_corr_pm_treepm ] , the halo from the treepm simulation is clearly far denser in the central region as compared to the halo from the particle - mesh simulation .",
    "the density profiles converge at some distance from the halo centres as expected .",
    "in this section , we describe the computational resources required for the present implementation of the 2d treepm code . given that we have combined the tree and the pm codes , the memory requirement is obviously greater than that for either one code .",
    "we need four arrays for the pm part i.e. for the potential and the force .",
    "the rest is exactly the same as a standard barnes and hut 2d tree code . with efficient memory management ,",
    "we need less than @xmath57 mb of ram for a simulation with @xmath26 particles on a @xmath26 grid .",
    "the number mentioned is for floating point variables .",
    "if we use double precision variables , our requirement will go up by a factor of two .    the time taken ( per time step per particle ) by the 2d treepm code ( @xmath30 , @xmath31 , @xmath58 , @xmath59 , @xmath60 ) is of the order of @xmath61 microseconds .",
    "this number was generated using a @xmath62ghz xeon personal computer where the code was compiled with the intel f90 compiler .",
    "in this paper , we have described the two - dimensional treepm method in detail .",
    "our method offers greater dynamic range and superior resolution as compared to a 2d particle - mesh method and can therefore probe the non - linear regime in two - dimensional cosmological simulations more effectively .",
    "we believe that a 2d treepm code will allow us to explore a higher dynamic range in densities ( and @xmath48 ) for studying scaling relations in two - dimensions as compared to earlier work done using particle - mesh codes @xcite .",
    "work is in progress in this direction and will be reported elsewhere .",
    "the 2d treepm code is also amenable to parallelisation along the lines of the 3d treepm code @xcite and is likely to scale well .",
    "the work reported here was done using the beowulf at the harish - chandra research institute ( http://cluster.mri.ernet.in ) ."
  ],
  "abstract_text": [
    "<S> we describe the two - dimensional treepm method in this paper . </S>",
    "<S> the 2d treepm code is an accurate and efficient technique to carry out large two - dimensional n - body simulations in cosmology . </S>",
    "<S> this hybrid code combines the 2d barnes and hut tree method and the 2d particle - mesh method . </S>",
    "<S> we describe the splitting of force between the pm and the tree parts . </S>",
    "<S> we also estimate error in force for a realistic configuration . finally , we discuss some tests of the code .    </S>",
    "<S> [ firstpage ]    gravitation , methods : numerical , cosmology : large scale structure of the universe </S>"
  ]
}
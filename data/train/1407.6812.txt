{
  "article_text": [
    "a large number of ontologies have been developed for the annotation of biological and biomedical data , commonly expressed in the web ontology language ( owl ) @xcite or an owl - compatible language such as the obo flatfile format @xcite .",
    "access to the full extent of knowledge contained in ontologies is facilitated by automated reasoners that can compute the ontologies underlying taxonomy and answer queries over the ontology content .    while ontology repositories , such as bioportal @xcite and the ontology lookup service ( ols ) @xcite , provide web services and interfaces to access ontologies , including their metadata such as author names and licensing , the list of classes and asserted structure , they do not enable computational access to the semantic content of the ontologies and the inferences that can be drawn from them .",
    "access to the semantic content of ontologies usually requires further inferences to reveal the consequences of statements ( axioms ) asserted in an ontology ; these consequences may be automatically derived using an automated reasoner . to",
    "the best of our knowledge , no reasoning infrastructure that supports semantically enabled access to biological and biomedical ontologies currently exists .    here",
    ", we present aber - owl , a reasoning infrastructure over ontologies consisting of an ontology repository , web services that facilitate semantic queries over ontologies specified by a user or contained in aber - owl s repository , and a user interface .",
    "such an infrastructure can not only enable access to knowledge contained in ontologies , but crucially can also be used for semantic queries over data annotated with ontologies , including the large volumes of data that are increasingly becoming available through public sparql endpoints @xcite .",
    "allowing access to data through an ontology is known as the `` ontology - based data access '' paradigm @xcite , and can exploit formal information contained in ontologies to :    * identify possible inconsistencies and incoherent descriptions @xcite , * enrich possibly incomplete data with background knowledge so as to obtain more complete answers to a query ( e.g. , if a data item referring to an organism has been characterized with findings of pulmonary stenosis , overriding aorta , ventricular septal defect , and right ventricular hypertrophy , and the ontology  or the set of ontologies it imports  contains enough information to allow , based on these four findings , the inference of a tetralogy of fallot condition , then the data item can be returned when querying for tetralogy of fallot even in the absence of it being explicitly declared in database ) @xcite , * enrich the data schema used to query data sources with additional information ( e.g. , by using a class in a query that is an inferred super - class of one or more classes that are used to annotate data items , but the class itself is never used to characterize data ) @xcite , and * provide a uniform view over multiple data sources with possibly heterogeneous , multi - modal data @xcite .    to demonstrate how aber - owl can be used for ontology - based access to data , we provide a service that performs a semantic search over pubmed and pubmed central articles using the results of an aber - owl query , and a service that performs sparql query extension so that the results of aber - owl queries can be used to retrieve data accessible through public sparql endpoints . in aber - owl , following the ontology - based data access paradigm @xcite , we specify the features of the relevant information on the ontology- and knowledge level @xcite , and retrieve named classes in ontologies satisfying these condition using an automated reasoner , i.e. , a software program that can identify whether a class in an ontology satisfies certain conditions based on the axioms specified in an ontology .",
    "subsequently , we embed the resulting information in database , linked data or literature queries",
    ".    aber - owl can be accessed at http://aber-owl.net .",
    "the aber - owl software is freely available at https://github.com/reality/sparqowl can be installed locally by users who want to provide semantic access to their own ontologies and support the use of their ontologies in semantic queries .",
    "the aber - owl software can be configured with a list of uris that contain ontology documents ( i.e. , owl files ) and employs the owl api @xcite to retrieve the ontologies that are to be included in the repository . for each ontology document included in the repository ,",
    "the labels and definitions of all classes contained within the ontology ( as well as of all the ontologies it imports ) are identified based on obo foundry standards and recommendations : we use the rdfs : label annotation property to identify class labels for each ontology ( as well as of all the ontologies it imports ) , and we employ the _ definition _ ( http://purl.obolibrary.org/obo/iao_0000115 ) annotation property , defined in the information artifact ontology , to identify the text definitions of a class .    labels of the classes occurring in each ontology , as well as of all the ontologies it imports , are stored in a trie ( prefix tree ) .",
    "the use of a trie ensures that class labels can be searched efficiently , for example when providing term completion recommendations .    upon initiating the aber - owl web services ,",
    "we classify each ontology using the elk reasoner @xcite , i.e. , we identify the most specific sub- and super - classes for each class contained in the ontology using the axioms contained within it .",
    "the elk reasoner supports the owl el profile @xcite and ignores ontology axioms that do not fall within the owl el subset .",
    "the benefit of using the owl el profile is the support for fast , polynomial - time reasoning , and the owl el subset is a suitable dialect for a large number of biomedical ontologies @xcite .",
    "while we currently use elk for the aber - owl infrastructure , it is possible for a user to install an aber - owl server that employs different owl reasoners , such as hermit @xcite or pellet @xcite , using the standard reasoner interface of the owl api .    querying is performed by transforming a manchester owl syntax @xcite query string into an owl class expression using the owl api and then aber - owl s short - form provider",
    "is employed to provide the mappings of the owl class and the property uris to the class and property labels .",
    "if this transformation fails ( i.e. , when the query string provided is not a valid owl class expression within the ontology being queried ) , an empty set of results is returned .",
    "if the transformation succeeds , the elk reasoner is used to retrieve sub- , super- or equivalent classes of the resulting owl class expression .",
    "the type of query ( sub - class , super - class , or equivalent class ) is specified by the user and defaults to a sub - class query .",
    "queries in which the url of the ontology document is not specified are delegated to all ontologies in aber - owl s repository .",
    "consequently , results may be returned from different ontologies .",
    "if a url is specified as part of a query but the ontology it corresponds to is not available within aber - owl s repository , an attempt is made to retrieve the ontology from the url , which is then classified and then the query results over the classified ontology are returned to the user .",
    "should this process fail , an empty set of results is returned .",
    "the results of an aber - owl query are provided in json format @xcite and consist of an array of objects containing information about the ontology classes satisfying the query : the uri of the ontology document queried , the iri of the ontology class , the class label and the definition of the class .",
    "detailed documentation of the web services is available at the aber - owl web site .",
    "we implemented a web server that can be used to access the aber - owl s ontology repository and reasoning services .",
    "the web server features a jquery - based @xcite interface and uses ajax @xcite to retrieve data from the aber - owl web services .",
    "aber - owl : pubmed is built on top of the aber - owl reasoning infrastructure .",
    "it employes the aber - owl reasoning infrastructure to resolve a semantic query formulated in manchester owl syntax and retrieve a set of named classes that satisfy the query . in particular ,",
    "depending on the type of query , all subclasses , superclasses or equivalent classes that satisfy a class description in manchester owl syntax within one or all ontologies in aber - owl s repository , or within a user - specified ontology , are returned by aber - owl .",
    "the results of the aber - owl query is a set of class descriptions , including the class uri , the label and the definition of the class .",
    "we use the results to perform a boolean textual search over a corpus of articles .",
    "we use the apache lucene framework @xcite to create a fulltext index of all titles and abstracts in medline / pubmed 2014 @xcite , and all fulltext articles in pubmed central @xcite . before indexing",
    ", every text is processed using lucene s english language standard analyzer which tokenizes and normalises it to lower case as well as applies a list of stop words .    for a user - specified query in manchester owl syntax",
    ", we construct a lucene query string from the set of class descriptions returned from the aber - owl services .",
    "in particular , we concatenate each class label using lucene s or operator . as a result",
    ", the lucene query will match any article ( title , abstract or fulltext ) that contains a label of a class satisfying the semantic query .",
    "it is also possible to conjunctively perform multiple semantic queries by providing more than one query in manchester owl syntax .",
    "data in biology is commonly annotated to named classes in ontologies , identified through a uri or another form of identifier that usually directly maps to a uri .",
    "pieces of data may refer to genes and proteins , text passages , measurements and other observations , and can be presented in multi - modal form as text , formal statements , images , audio or video recordings .",
    "this information is increasingly being made available as linked data through publicly available sparql endpoints @xcite .",
    "to semantically access ontology - annotated data contained in datasets available through public sparql endpoints , we provide a service which extends the sparql language with syntax which allows the user to include aber - owl resultsets within the query .",
    "this comprises of a list of class uris returned by aber - owl , which can then be used to match data in the sparql endpoint .",
    "sparql query expansion is implemented using the php sparql library @xcite and is available both as a web service and through a web interface that can be accessed through aber - owl s main web site .",
    "the aber - owl framework can be used to retrieve all super - classes , equivalent classes or sub - classes resulting from a manchester owl syntax query .",
    "the classes are retrieved either from a specific ontology in aber - owl s ontology repository , from all ontologies in the repository , or from a user - specified ontology that can be downloaded from a specified uri . in our installation of aber - owl at http://aber-owl.net",
    ", the complete library of obo ontologies @xcite is imported as well as several user - requested ontologies .    using our web server , any ontology in aber - owl s ontology repository can be queried and the results subsequently displayed .",
    "furthermore , following execution of any aber - owl query , the web interface provides the means to use the query in aber - owl : pubmed so as to search and retrieve relevant biomedical literature , or in aber - owl : sparql to construct a query for data annotated to one of the resulting classes .",
    "aber - owl : pubmed enables ontology - based semantic access to biomedical literature .",
    "it combines the information in biomedical ontologies with automated reasoning to perform a literature query for all things that can be inferred from a class description within one or more ontologies .",
    "for example , a query for the class ventricular septal defect will return articles in which , among others , tetralogy of fallot is mentioned due to tetralogy of fallot being inferred to be a subclass of ventricular septal defect in the uberpheno @xcite and human phenotype @xcite ontologies .",
    "since aber - owl uses an automated reasoner to identify subclasses , this information does not have to be asserted in the ontology but rather is implied by the ontology s axioms .",
    "aber - owl : pubmed can also perform more complex queries , such as for articles containing mentions of subclasses of part_of some apoptotic process and part_of some regulation , and articles mentioning regulatory processes that are a part of apoptosis will be returned .",
    "such queries are only possible through the application of automated reasoning over the knowledge contained in the biomedical ontologies , and go beyond the state of the art in that they enable a genuinely _ semantic _ way of accessing biomedical literature based on the knowledge contained in the ontologies .    finally , aber - owl",
    ": pubmed can also be used to identify co - occurrences of multiple aber - owl queries .",
    "for example , a conjunctive combination of two sub - class queries , one for ventricular septal defect and another for part_of some heart , will return articles that contain references to both parts of the heart ( such as the aorta ) and particular types of ventricular septal defects , e.g. , muscular or membranous defects , as well as complex phenotypes such as the tetralogy of fallot .",
    "aber - owl : pubmed is accessible through a basic web interface at aber-owl.net/aber-owl/pubmed/ in which queries can be executed , the articles satisfying the queries will be displayed , and matching text passages in the title , abstract or fulltext will be highlighted .",
    "furthermore , aber - owl : pubmed can be accessed through web services and thereby can be embedded in web - based applications .",
    "aber - owl : sparql provides semantic access to linked data by expanding sparql queries with the results returned by an aber - owl query .",
    "query expansion is performed based on sparql syntax extended by the following construct :    .... owl [ querytype ] [ < aber - owl service uri > ] [ < ontology uri > ]     { [ owl query ] } ....    for example , the query    .... owl subclass < http://aber-owl.net/aber-owl/service/",
    "> < http://purl.obolibrary.org/obo/go.owl > { part\\_of some ' apoptotic process ' } ....    will return a set of class uris that satisfy the query part_of some apoptotic process in the gene ontology ( go ) @xcite , and the results will be embedded in the sparql query .",
    "for this purpose , the owl statement is replaced by the aber - owl : sparql service with a set of class uris .",
    "there are two main forms in which the owl statement can be embedded within a sparql query .",
    "the first is the values form in which the results of the owl query are bound to a variable using the sparql 1.1 values statement .",
    "for example ,    .... values ?",
    "ontid {     owl subclass < http://aber-owl.net/aber-owl/service/ > < >       { part_of some ' apoptotic process ' } } ....    will bind the ontology uris resulting from the owl query ( part_of some apoptotic process ) to the sparql variable ?",
    "the second form in which the owl statement is useful is in the form of a filter statement .",
    "for example , the query    .... filter (     ? ontid in ( owl subclass",
    "< http://aber-owl.net/aber-owl/service/ > < >       { part_of some ' apoptotic process ' } ) ) ....    will filter the results of a sparql query such that the values of ?",
    "ontid must be in the result list of the owl query .",
    "as many sparql endpoints use different uris to refer to classes in ontologies , we have added the possibility to re - define prefixes for the resulting ontology classes such that they match the iri scheme used by a particular sparql endpoint .",
    "when this feature is used , the class iris resulting from an owl query will be transformed into a prefix form similar to the format used in the obo flatfile format @xcite , and the appropriate prefix definition will be added to the sparql query if it has not been defined in the query already .",
    "for example , the uniprot sparql endpoint ( http://beta.sparql.uniprot.org ) uses the uri pattern http://purl.uniprot.org/go/<id > to refer to gene ontology classes , the ebi biomodels endpoint uses http://identifiers.org/go/<id > , while the uri policy of the obo foundry @xcite specifies that the uri pattern http://purl.obolibrary.org/obo/go_<id > should be used .",
    "the latter uri scheme is the one employed by aber - owl since this is the authoritative uri provided in the ontology document . using",
    "the prefix format will transform the results of the aber - owl query from uris into strings of the type go:<id > and the appropriate prefix to the sparql query ( i.e. , prefix go : < http://purl.obolibrary.org/obo/go_ > will be added . changing this prefix definition statement to prefix",
    "go : < http://purl.uniprot.org/go/ > will effectively rewrite the uris so that they can be used in conjunction with the uri scheme employed by the uniprot sparql endpoint . alternatively , the sparql query can employ a dedicated mapping service , possibly in the form of a sparql endpoint with access to sameas statements , to convert between uri schemes used in different places .",
    "we can demonstrate the possibilities of using the aber - owl : sparql query expansion service by retrieving all human proteins in uniprot @xcite annotated to part_of some apoptotic process. to achieve this goal , we use the sparql 1.1 values statement to bind the results to a variable ?",
    "ontid , and then we can use this variable in the sparql query to retrieve all human proteins with a gene ontology annotation in ?",
    "the query is shown in figure [ fig : query - uniprot ] .",
    "as uniprot uses different uris for go classes than those returned by aber - owl ( which are based on the officially endorsed uris by the obo foundry and the gene ontology consortium ) , the uris have to be rewritten for the query to succeed . in particular , in aber - owl : sparql , an option must be activated to rewrite uris into a `` prefix form '' ( i.e. , uris of the type http://purl.obolibrary.org/obo/go_0008150 would be rewritten to go:0008150 ) , and the sparql prefix declaration will redefine the prefix to match the uri scheme used in the uniprot sparql endpoint .",
    ".... prefix go : < http://purl.uniprot.org/go/ > prefix taxon:<http://purl.uniprot.org / taxonomy/ > prefix up : < http://purl.uniprot.org/core/ > prefix skos : < http://www.w3.org/2004/02/skos/core # >    select distinct ?",
    "ontid where {     # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #    # binds ?",
    "ontid to the results of the owl query     values ?",
    "ontid {       owl subclass < http://aber-owl.net/aber-owl/service/ > < >          { part\\_of some ' apoptotic process ' }    } .",
    "# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #    # ?",
    "ontid is now bound to the set of class iris of the owl query           ?",
    "protein a up : protein .          ?",
    "protein up : organism taxon:9606 .          ?",
    "protein up : mnemonic ?",
    "pname .          ?",
    "protein up : classifiedwith ?",
    "ontid .          ?",
    "ontid skos : preflabel ?",
    "label . } ....      we can also utilize the aber - owl infrastructure for more powerful queries that use inference over the ontology structure and utilize the results in a sparql query . for example , we can use aber - owl : sparql to query gwas central @xcite for markers that have been identified in gwas studies as significant for ventricular septal defects .",
    "using the human phenotype ontology ( hpo ) @xcite and the definitions that have been developed for the hpo @xcite , we can identify that a tetralogy of fallot is a particular type of ventricular septal defect .",
    "in particular , according to the axioms contained in the hpo , a tetralogy of fallot condition can be inferred from the phenotypes _ ventricular septal defect _ , _ overriding aorta _ , _ pulmonary valve stenosis _ and _ right ventricular hypertrophy_. importantly , no explicit subclass relation between these four key phenotypes and _ tetralogy of fallot _ is asserted in the hpo .",
    "therefore , reasoning is required to retrieve _ tetralogy of fallot _ as a subclass of either of these four , or a combination of these four , phenotypes .",
    "similarly , owl reasoning over the ontology axioms is required to retrieve data annotated to tetralogy of fallot when querying for either of the four phenotypes .",
    "the queries can also be made more precise by explicitly asking for a condition in which all four of the tetralogy of fallot phenotypes must be satisfied : subclasses of overriding aorta and ventricular septal defect and pulmonic stenosis and right ventricular hypertrophy will specifically retrieve the tetralogy of fallot condition , including specific sub - types of tetralogy of fallot in the hpo .",
    ".... prefix rdf:<http://www.w3.org/1999/02/22-rdf - syntax - ns # > prefix gc:<http://purl.org / gwas / schema # > prefix xsd:<http://www.w3.org/2001/xmlschema # > prefix obo:<http://www.obofoundry.org / ro / ro.owl # >    select ?",
    "ontid where {      graph ? g      {          ?",
    "marker gc : associated ?",
    "phenotype ;          gc : locatedingene ?",
    "gene ;          gc : pvalue ?",
    "pvalue ;          obo : hassynonym ?",
    "ext_marker_id .          ?",
    "phenotype gc : hpoannotation ?",
    "ontid .      }      filter ( xsd : float(?pvalue ) < = 1e-10 ) .",
    "filter (       ? ontid in (         owl subclass < http://aber-owl.net/aber-owl/service/",
    ">          < http://purl.obolibrary.org/obo/hp.owl >            { ' ventricular septal defect ' }        )      ) .   } ....",
    "bioportal @xcite , the ontology lookup service ( ols ) @xcite and ontobee @xcite are amongst the most widely used ontology repositories in biology .",
    "these portals offer a user interface for browsing ontologies and searching for classes based on the class label ( or synonym ) .",
    "they also provide web services that enable programmatic access to the ontologies contained within them .",
    "however , neither bioportal , ontobee nor ols allow access to the knowledge that can be derived from the ontologies in the repositories .",
    "aber - owl , on the other hand , provides a reasoning infrastructure and services for ontologies , without aiming at replacing ontology repositories and the user experience they provide . in the future , we intend to integrate aber - owl more closely with other ontology repositories so that the additional information and user - interface widgets provided by these repositories can be combined with the reasoning infrastructure provided by aber - owl .",
    "another related software is ontoquery @xcite , which is a web - based query interface for ontologies that uses an owl reasoner .",
    "it can be used to provide an interface for a single ontology using an owl reasoner , but does not support use of multiple ontologies or access through web interfaces .",
    "the logical gene ontology annotations ( goal ) @xcite outlines an approach to access data annotated with ontologies through owl reasoning . for this purpose",
    ", goal constructs a custom knowledge base integrating both the ontology and the annotations , and then uses an owl reasoner to answer queries over this combined knowledge base .",
    "however , goal uses exactly one ontology , specifically built to incorporate the data queried ( mouse phenotypes ) as a part of the owl ontology so that a reasoner can be used to query both , the ontology and its annotations .",
    "aber - owl , on the other hand , is a general framework and does not require changes to existing ontologies . instead , aber - owl distinguishes between reasoning on the ontology level and retrieval of data annotated with ontologies .",
    "several tools and web servers utilize ontologies or structured vocabularies for the retrieval of articles from pubmed or pubmedcentral .",
    "for example , gopubmed @xcite classifies pubmed articles using the go @xcite and the medical subjects heading thesaurus @xcite .",
    "however , gopubmed uses only a limited number of ontologies , and while gopubmed uses the asserted structure of the ontologies , it does not use the knowledge contained within the ontologies axioms .",
    "aber - owl : pubmed , on the other hand , can utilize the knowledge contained in any ontology to perform basic searches in pubmed abstracts and fulltext articles in pubmed central .    a main limitation of aber - owl : pubmed lies with the absence of a specialized entity recognition method to identify occurrences of ontology class labels in text . in particular , for ontologies such as the go that use long and complex class names , specialized named entity recognition approaches are required to identify mentions of the go terms in text @xcite .",
    "furthermore , aber - owl : pubmed currently uses only the rdfs : label property of classes and properties in ontologies to retrieve literature documents , but ignores possible synonyms , alternative spellings or acronyms that may be asserted for a class . in the future",
    ", we will investigate the possibility of adding more specialized named entity recognition algorithms to aber - owl : pubmed for specific ontologies .",
    "another limitation lies in aber - owl s interface .",
    "aber - owl : pubmed s web - based interface is not a complete text retrieval system but rather demonstrates the possibility of using ontology - based queries for retrieving text and can be used to aid in query construction .",
    "we envision the main use of aber - owl : pubmed in the form of its web services that can be incorporated in more complete and more complex text retrieval systems such as gopubmed or even pubmed itself .    the use of aber - owl : sparql differs in three key points from the use of basic access to ontology - annotated data through sparql alone :    1 .",
    "aber - owl : sparql provides access to the semantic content of ontologies even when the ontologies are not available through the sparql endpoint that contains the ontology - annotated data .",
    "aber - owl : sparql provides access to the inferred ontology structure instead of the asserted structure , even when no owl entailment regime is activated in a sparql endpoint .",
    "aber - owl : sparql enables complex queries formulated in manchester owl syntax , and can perform these queries even when no owl entailment regime is activated in a sparql endpoint .    in particular ,",
    "( 1 ) the ontologies used for annotation are not commonly accessible through the same sparql endpoint as the actual annotated data .",
    "if the sparql endpoint supports query federation ( using the sparql service block ) , this problem can usually be resolved if the ontology is available at some place ( such as bioportal ) through another sparql endpoint . however , in some application settings , a query expansion service may be more efficient than query federation . more importantly , however , ( 2 ) aber - owl : sparql provides access to the structure of an ontology as it is inferred by an owl reasoner . to achieve a similar outcome using plain sparql ,",
    "the sparql endpoint containing the ontology must have an owl entailment regime @xcite activated ; otherwise , only the asserted structure of an ontology is available for queries .",
    "we know of no sparql endpoint in the biomedical domain currently holding ontologies and simultaneously using an owl entailment regime ; in particular , neither bioportal nor ontobee or the ols currently make use of any kind of owl entailment . while the first two points can in principle be addressed by applying semantic web technologies , queries would still have to be formulated in sparql syntax .",
    "( 3 ) aber - owl : sparql uses the manchester owl syntax to formulate queries , and manchester owl syntax is widely used by ontology developers and users as it is closer to a human - readable sentence and therefore easier to access than other ways of expressing owl .",
    "the full benefit of a reasoning infrastructure over multiple ontologies can be realized when these ontologies are `` interoperable '' .",
    "while interoperability between biomedical ontologies has been extensively discussed @xcite , we can nevertheless identify several shortcomings through the use of aber - owl .",
    "firstly , ontology class names and relation names are not standardized .",
    "for example , the current library of ontologies included in aber - owl uses several different names ( and uris ) for the part - of relation , including part_of , part - of , part of and partof .",
    "while each relation is usually consistently applied within a single ontology , the use of different uris and labels for the same relation leads to difficulties when utilizing more than one ontology .",
    "the non - standardized use of relation names is particularly surprising as the obo relation ontology @xcite aimed to achieve the goal of using standard relations and common relation names almost 10 years ago .",
    "one possible explanation for the observed heterogeneity is that the lack of tools and an infrastructure that could efficiently utilize the information in one or more ontology has made it less of a priority for ontology developers to focus on these aspects of interoperability .",
    "furthermore , using the aber - owl infrastructure , potential problems in ontologies can be identified .",
    "for example , we could identify , and subsequently correct , three unsatisfiable classes in the neuro behavior ontology @xcite resulting from changes in the ontologies it imports .",
    "these problems are not easily detectable ; moreover , they require the use of reasoning over more than one ontology , as well as frequent re - classifications .",
    "these tasks are vital for the effects that a change in one ontology has on other ontologies to be detected .      with the aber - owl services , we propose to separate the processing of knowledge in ontologies and the retrieval of data annotated with these ontologies .",
    "aber - owl provides a reasoning infrastructure that can be queried either through its web interface or its web services , and a set of classes that satisfy a specified condition is returned .",
    "these sets of classes can then be used to retrieve data annotated with them , text that contains their label , or from a corpus of text or a formal data resource that references them .",
    "as such , aber - owl provides a framework for automatically accessing information that is annotated with ontologies or contains terms used to label classes in ontologies .",
    "when using aber - owl , access to the information in ontologies is not merely based on class names or identifiers but rather on the knowledge the ontologies contain and the inferences that can be drawn from it .",
    "this also enables the use of knowledge- and ontology - based access to data @xcite : data of interest is specified on the knowledge- or ontology - level @xcite , and all possible classes that satisfy such a specification are inferred using an automated reasoner .",
    "the results of this inference process are then used to actually retrieve the data without the need to apply further inference .",
    "44 # 1isbn # 1#1#1#1#1#1#1#1#1#1*#1*#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1#1prebibitemshook                                                        , , , , , , , , , , , : construction and accessibility of a cross - species phenotype ontology along with gene annotations for biomedical research .",
    "f1000research * 2 * ( 2013 ) .",
    "doi:10.12688/f1000research.2 - 30.v1"
  ],
  "abstract_text": [
    "<S> many ontologies have been developed in biology and these ontologies increasingly contain large volumes of formalized knowledge commonly expressed in the web ontology language ( owl ) . </S>",
    "<S> computational access to the knowledge contained within these ontologies relies on the use of automated reasoning . </S>",
    "<S> we have developed the aber - owl infrastructure that provides reasoning services for bio - ontologies . </S>",
    "<S> aber - owl consists of an ontology repository , a set of web services and web interfaces that enable ontology - based semantic access to biological data and literature . </S>",
    "<S> aber - owl is freely available at http://aber-owl.net . </S>"
  ]
}
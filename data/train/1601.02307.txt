{
  "article_text": [
    "it is well - known that the category of relations between finite sets may be obtained as the category of isomorphism classes of jointly monic spans in the category of finite sets and functions . in this paper",
    "we investigate the dual notion : isomorphism classes of jointly epic cospans .",
    "these are known as corelations , and corelations from a set @xmath0 to a set @xmath1 are characterised as partitions of the disjoint union @xmath2 .",
    "our slogan is ` corelations model connection ' .",
    "we understand a corelation as a partition of two sets into connected components , depicting examples as follows @xmath3      \\begin{pgfonlayer}{nodelayer }          \\node [ contact , outer sep=5pt ] ( 0 ) at ( -2 , 1 ) { } ;          \\node [ contact , outer sep=5pt ] ( 1 ) at ( -2 , 0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 2 ) at ( -2 , -0 ) { } ;          \\node [ contact , outer sep=5pt ] ( 3 ) at ( -2 , -0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 4 ) at ( -2 , -1 ) { } ;          \\node [ contact , outer sep=5pt ] ( 5 ) at ( 1 , 1.25 ) { } ;          \\node [ contact , outer sep=5pt ] ( 6 ) at ( 1 , 0.75 ) { } ;          \\node [ contact , outer sep=5pt ] ( 7 ) at ( 1 , 0.25 ) { } ;          \\node [ contact , outer sep=5pt ] ( 8) at ( 1 , -0.25 ) { } ;          \\node [ contact , outer sep=5pt ] ( 9 ) at ( 1 , -0.75 ) { } ;          \\node [ contact , outer sep=5pt ] ( 10 ) at ( 1 , -1.25 ) { } ;          \\node [ style = none ] ( 11 ) at ( -2.75 , -0 ) { $ x$ } ;          \\node [ style = none ] ( 12 ) at ( 1.75 , -0 ) { $ y$ } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=0 , anchor = north west ) --     ( node cs : name=1 , anchor = south west ) --     ( node cs : name=6 , anchor = south east ) --     ( node cs : name=5 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=2 , anchor = north west ) --     ( node cs : name=3 , anchor = south west ) --     ( node cs : name=3 , anchor = south east ) --     ( node cs : name=2 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=4 , anchor = north west ) --     ( node cs : name=4 , anchor = south west ) --     ( node cs : name=10 , anchor = south east ) --     ( node cs : name=9 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=7 , anchor = north west ) --     ( node cs : name=7 , anchor = south west ) --     ( node cs : name=7 , anchor = south east ) --     ( node cs : name=7 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=8 , anchor = north west ) --     ( node cs : name=8 , anchor = south west ) --     ( node cs : name=8 , anchor = south east ) --     ( node cs : name=8 , anchor = north east ) --     cycle ;      \\end{pgfonlayer } \\end{tikzpicture}\\ ] ] here we have a corelation from a set @xmath0 of five elements to a set @xmath1 of six elements .",
    "elements belonging to the same equivalence class of @xmath2 are grouped ( ` connected ' ) by a dashed line .",
    "composition of corelations takes the transitive closure of the two partitions , before restricting the partition to the new domain and codomain .",
    "for example , suppose in addition to the corelation @xmath4 above we have another corelation @xmath5",
    "@xmath3      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( -2.75 , -0 ) { $ y$ } ;          \\node [ style = none ] ( 1 ) at ( 1.75 , 0 ) { $ z$ } ;          \\node [ contact , outer sep=5pt ] ( 2 ) at ( -2 , 1.25 ) { } ;          \\node [ contact , outer sep=5pt ] ( 3 ) at ( -2 , 0.75 ) { } ;          \\node [ contact , outer sep=5pt ] ( 4 ) at ( -2 , 0.25 ) { } ;          \\node [ contact , outer sep=5pt ] ( 5 ) at ( -2 , -0.25 ) { } ;          \\node [ contact , outer sep=5pt ] ( 6 ) at ( -2 , -0.75 ) { } ;          \\node [ contact , outer sep=5pt ] ( 7 ) at ( -2 , -1.25 ) { } ;          \\node [ contact , outer sep=5pt ] ( 8) at ( 1 , 1 ) { } ;          \\node [ contact , outer sep=5pt ] ( 9 ) at ( 1 , 0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 10 ) at ( 1 , -0 ) { } ;          \\node [ contact , outer sep=5pt ] ( 11 ) at ( 1 , -0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 12 ) at ( 1 , -1 ) { } ;      \\end{pgfonlayer }          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=2 , anchor = north west ) --     ( node cs : name=3 , anchor = south west ) --     ( node cs : name=8 , anchor = south east ) --     ( node cs : name=8 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=4 , anchor = north west ) --     ( node cs : name=4 , anchor = south west ) --     ( node cs : name=4 , anchor = south east ) --     ( node cs : name=4 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=5 , anchor = north west ) --     ( node cs : name=6 , anchor = south west ) --     ( node cs : name=11 , anchor = south east ) --     ( node cs : name=10 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=7 , anchor = north west ) --     ( node cs : name=7 , anchor = south west ) --     ( node cs : name=12 , anchor = south east ) --     ( node cs : name=12 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=9 , anchor = north west ) --     ( node cs : name=9 , anchor = south west ) --     ( node cs : name=9 , anchor = south east ) --     ( node cs : name=9 , anchor = north east ) --     cycle ; \\end{tikzpicture}\\ ] ] then the composite @xmath6 of our two corelations is given by @xmath7      \\begin{pgfonlayer}{nodelayer }          \\node [ contact , outer sep=5pt ] ( -2 ) at ( 1 , 1.25 ) { } ;          \\node [ contact , outer sep=5pt ] ( -1 ) at ( 1 , 0.75 ) { } ;          \\node [ contact , outer sep=5pt ] ( 0 ) at ( 1 , 0.25 ) { } ;          \\node [ contact , outer sep=5pt ] ( 1 ) at ( 1 , -0.25 ) { } ;          \\node [ contact , outer sep=5pt ] ( 2 ) at ( 1 , -0.75 ) { } ;          \\node [ contact , outer sep=5pt ] ( 3 ) at ( 1 , -1.25 ) { } ;          \\node [ style = none ] ( 4 ) at ( -2.75 , -0 ) { $ x$ } ;          \\node [ style = none ] ( 5 ) at ( 4.75 , -0 ) { $ z$ } ;          \\node [ contact , outer sep=5pt ] ( 6 ) at ( -2 , 1 ) { } ;          \\node [ contact , outer sep=5pt ] ( 7 ) at ( -2 , -0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 8) at ( -2 , 0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 9 ) at ( -2 , -0 ) { } ;          \\node [ contact , outer sep=5pt ] ( 10 ) at ( -2 , -1 ) { } ;          \\node [ contact , outer sep=5pt ] ( 11 ) at ( 4 , -0 ) { } ;          \\node [ contact , outer sep=5pt ] ( 12 ) at ( 4 , -1 ) { } ;          \\node [ contact , outer sep=5pt ] ( 13 ) at ( 4 , -0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 14 ) at ( 4 , 0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 19 ) at ( 4 , 1 ) { } ;          \\node [ style = none ] ( 20 ) at ( 1 , -1.75 ) { $ y$ } ;          \\node [ style = none ] ( 21 ) at ( 1 , 1.75 ) { \\phantom{$y$ } } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=6 , anchor = north west ) --     ( node cs : name=8 , anchor = south west ) --     ( node cs : name=-1 , anchor = south east ) --     ( node cs : name=-2 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=9 , anchor = north west ) --     ( node cs : name=7 , anchor = south west ) --     ( node cs : name=7 , anchor = south east ) --     ( node cs : name=9 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=10 , anchor = north west ) --     ( node cs : name=10 , anchor = south west ) --     ( node cs : name=3 , anchor = south east ) --     ( node cs : name=2 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=-2 , anchor = north west ) --     ( node cs : name=-1 , anchor = south west ) --     ( node cs : name=19 , anchor = south east ) --     ( node cs : name=19 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=0 , anchor = north west ) --     ( node cs : name=0 , anchor = south west ) --     ( node cs : name=0 , anchor = south east ) --     ( node cs : name=0 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=1 , anchor = north west ) --     ( node cs : name=1 , anchor = south west ) --     ( node cs : name=1 , anchor = south east ) --     ( node cs : name=1 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=1 , anchor = north west ) --     ( node cs : name=2 , anchor = south west ) --     ( node cs : name=13 , anchor = south east ) --     ( node cs : name=11 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=3 , anchor = north west ) --     ( node cs : name=3 , anchor = south west ) --     ( node cs : name=12 , anchor = south east ) --     ( node cs : name=12 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=14 , anchor = north west ) --     ( node cs : name=14 , anchor = south west ) --     ( node cs : name=14 , anchor = south east ) --     ( node cs : name=14 , anchor = north east ) --     cycle ;      \\end{pgfonlayer } \\end{tikzpicture } \\end{aligned } \\ :    = \\ : \\begin{aligned } \\begin{tikzpicture}[circuit ee iec ]      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( -2.75 , -0 ) { $ x$ } ;          \\node [ style = none ] ( 1 ) at ( 1.75 , -0 ) { $ z$ } ;          \\node [ contact , outer sep=5pt ] ( 2 ) at ( -2 , 1 ) { } ;          \\node [ contact , outer sep=5pt ] ( 3 ) at ( -2 , -0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 4 ) at ( -2 , 0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 5 ) at ( -2 , -0 ) { } ;          \\node [ contact , outer sep=5pt ] ( 6 ) at ( -2 , -1 ) { } ;          \\node [ contact , outer sep=5pt ] ( 7 ) at ( 1 , -0 ) { } ;          \\node [ contact , outer sep=5pt ] ( 8) at ( 1 , -1 ) { } ;          \\node [ contact , outer sep=5pt ] ( 9 ) at ( 1 , -0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 10 ) at ( 1 , 0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 13 ) at ( 1 , 1 ) { } ;          \\node [ style = none ] ( 20 ) at ( 1 , -1.75 ) { \\phantom{$y$ } } ;          \\node [ style = none ] ( 21 ) at ( 1 , 1.75 ) { \\phantom{$y$ } } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=2 , anchor = north west ) --     ( node cs : name=4 , anchor = south west ) --     ( node cs : name=13 , anchor = south east ) --     ( node cs : name=13 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=5 , anchor = north west ) --     ( node cs : name=3 , anchor = south west ) --     ( node cs : name=3 , anchor = south east ) --     ( node cs : name=5 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=6 , anchor = north west ) --     ( node cs : name=6 , anchor = south west ) --     ( node cs : name=8 , anchor = south east ) --     ( node cs : name=7 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed ]      ( node cs : name=10 , anchor = north west ) --     ( node cs : name=10",
    ", anchor = south west ) --     ( node cs : name=10 , anchor = south east ) --     ( node cs : name=10 , anchor = north east ) --     cycle ;      \\end{pgfonlayer } \\end{tikzpicture } \\end{aligned}\\ ] ] informally , this captures the idea that two elements of @xmath8 are ` connected ' if we may travel from one to the other staying within connected components of @xmath9 and @xmath10 .",
    "another structure that axiomatises interconnection is the extraspecial commutative frobenius monoid .",
    "an extraspecial commutative frobenius monoid in a symmetric monoidal category is an object equipped with commutative monoid and cocommutative comonoid structures obeying additional laws known as the frobenius , special , and extra laws .",
    "special commutative frobenius monoids are well - known ; the additional axiom here , the so - called extra law , requires that the unit composed with the counit is the identity on the unit for the monoidal product .",
    "we write this in string diagrams as @xmath11 ( 0 ) at ( 1.75 , -0 ) { } ;          \\node [ style = circ ] ( 1 ) at ( 0.75 , -0 ) { } ;          \\node [ style = circ ] ( 4 ) at ( -0.75 , -0 ) { } ;          \\node [ style = none ] ( 6 ) at ( -1.75 , -0 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }        \\draw[line width=2pt ] ( 1.center ) to ( 4.center ) ;      \\end{pgfonlayer } \\end{tikzpicture }      }    \\end{aligned } } = {    \\begin{aligned }      \\resizebox{.15\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( 1.75 , -0 ) { } ;          \\node [ style = none ] ( 6 ) at ( -1.75 , -0 ) { } ;      \\end{pgfonlayer } \\end{tikzpicture }      }    \\end{aligned } } \\ ] ] together , these axioms express the idea that connectivity is all that matters : not pairwise clustering , not multiple paths , not ` extra ' , interior components .",
    "corelations and extraspecial commutative frobenius monoids are intimately related . to explicate this relationship",
    ", we will use the language of props . recall that a prop is a strict symmetric monoidal category with objects the natural numbers and monoidal product addition . also recall that a prop @xmath12 is termed the prop for an algebraic structure if , given another symmetric monoidal category @xmath13 , the strict symmetric monoidal functor category @xmath14 is isomorphic to the category of the chosen algebraic structure in @xmath13 .    considered as symmetric monoidal categories with monoidal product the disjoint union , lack proved that the category of spans in the category of finite sets and functions is equivalent as a symmetric monoidal category to the prop for bicommutative bimonoids , and the category of cospans is equivalent as a symmetric monoidal category to the prop for special commutative frobenius monoids @xcite .",
    "note that the disjoint union of finite sets also gives a monoidal product on the category of corelations .",
    "our main theorem is :    the category of corelations is equivalent , as a symmetric monoidal category , to the prop for extraspecial commutative frobenius monoids",
    ".    corelations and extraspecial commutative frobenius monoids have been observed to play a key role in many frameworks relying on the interconnection of systems , including electrical circuits @xcite , signal flow graphs @xcite , bond graphs @xcite , linear time - invariant systems @xcite , automata @xcite , proofs @xcite , and matrices and other linear systems @xcite .",
    "the mutual characterisation of these structures provided by our main theorem clarifies and streamlines arguments in many of these applications .",
    "for example , the use of corelations provides a precise extraspecial commutative frobenius monoid extension of the well - known ` spider theorem ' characterising morphisms between tensor powers of a special commutative frobenius monoid @xcite .    in independent but related work",
    ", zanasi proves in his recent thesis @xcite that the so - called prop of equivalence relations is the free prop on the theory of extraspecial commutative frobenius monoids . as we do , zanasi builds on lack s observation that category of cospans in the category of finite sets and functions is equivalent to the prop for special commutative frobenius monoids @xcite , as well as the observation of bruni and gadducci that cospans are related to equivalence relations @xcite .",
    "zanasi argues via a so - called ` cube construction ' , or fibred sum of props .",
    "similarly , doen and petri @xcite prove that the category of ` split equivalences ' is isomorphic to the ` equivalential frobenius monad freely generated by a single object ' .",
    "they argue this analogous result by constructing an auxiliary syntactic category isomorphic to the equivalential frobenius monad freely generated by a single object , and then inducting on the terms of this new category to prove the main result .",
    "our novel approach through the understanding of corelations as jointly epic cospans permits a significantly simpler argument via a coequalizer of props . in doing so",
    ", it provides a clear narrative for the origin of the extra law and its relationship with other fundamental axioms .",
    "moreover , such an approach is philosophically well - motivated , and provides easy generalisation , such as the characterisation of linear relations as jointly epic cospans in the category of matrices over a field @xcite , or linear time - invariant systems as jointly epic cospans in the category of matrices over a relevant laurent polynomial ring @xcite .",
    "ultimately , our work completes the beautiful picture @xmath15 pairing constructions on the category of finite sets and functions with important algebraic structures .",
    "the duality of the bimonoid laws and the frobenius law , the two major ways that a monoid and comonoid can interact , was demonstrated by lack @xcite . moving this duality to the level of relations ,",
    "we show that the importance of the heretofore overlooked extra law as the dual version of the special law .      in the next two sections we introduce corelations and extraspecial commutative frobenius monoids respectively .",
    "these are the stars of this paper , and our task will be to understand their relationship . to this end ,",
    "in section [ sec.props ] we review the idea of a prop for an algebraic structure , and note that the category of corelations between finite sets is equivalent to a prop @xmath16 . in section [ sec.theories ] , we then construct a prop @xmath17 whose algebras are extraspecial commutative frobenius monoids .",
    "we show in section  [ sec.mainthm ] that @xmath16 and @xmath17 are isomorphic , proving the main theorem .",
    "finally , in section [ sec.summary ] we outline the dual characterisation of the category of relations , and summarise the algebraic theories corresponding to spans , cospans , relations , and corelations .",
    "first we define corelations . corelations arise as the dual of relations : recall that a binary relation from a set @xmath0 to a set @xmath1 is a subset of the product @xmath18 .",
    "a corelation is a quotient of the coproduct @xmath2 .",
    "a * corelation * @xmath4 between sets @xmath0 and @xmath1 is a partition of @xmath2 .",
    "given another corelation @xmath5 , the composite @xmath19 is the restriction to @xmath8 of the finest partition on @xmath20 that is coarser than both @xmath9 and @xmath10 when restricted to @xmath2 and @xmath21 respectively .",
    "this composition is associative as both pairwise methods of composing corelations @xmath22 , @xmath23 , and @xmath24 amount to finding the finest partition on @xmath25 that is coarser than each of @xmath9 , @xmath10 , and @xmath26 when restricted to the relevant subset , and then restricting this partition to a partition on @xmath27 ; reference to the motivating visualization makes this clear .",
    "moreover , this composition has an identity : it is the partition of @xmath28 such that each equivalence class comprises exactly two elements , an element @xmath29 considered as an element of both the first and then the second summand of @xmath28 .",
    "this allows us to define a category .",
    "we restrict our attention to corelations between finite sets .",
    "let @xmath16 be the symmetric monoidal category with objects finite sets , morphisms corelations between finite sets , and monoidal product disjoint union .",
    "we shall freely abuse the notation @xmath16 to refer to an equivalent skeleton .",
    "this is key for our main theorem : in section  [ sec.props ] we show this skeleton is strict , and hence a prop .",
    "ellerman gives a detailed treatment of corelations from a logic viewpoint in @xcite , while basic category theoretic aspects can be found in lawvere and rosebrugh @xcite .",
    "note that neither binary relations nor corelations are a generalisation of the other .",
    "a key property of corelation is that it forms a compact category with monoidal product disjoint union of sets .",
    "this is not true of the category of relations .",
    "another way of visualising corelations and their composition is as terminals connected by junctions of ideal wires .",
    "we draw these by marking each equivalence class with a point ( the ` junction ' ) , and then connecting each element of the domain and codomain to their equivalence class with a ` wire ' .",
    "composition then involves collapsing connected junctions down to a point .",
    "the example from the introduction is represented as follows .",
    "@xmath7      \\begin{pgfonlayer}{nodelayer }          \\node [ contact , outer sep=5pt ] ( 6 ) at ( -2 , 1 ) { } ;          \\node [ contact , outer sep=5pt ] ( 7 ) at ( -2 , -0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 8) at ( -2 , 0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 9 ) at ( -2 , -0 ) { } ;          \\node [ contact , outer sep=5pt ] ( 10 ) at ( -2 , -1 ) { } ;          \\node [ style = none ] ( 15 ) at ( -0.5 , 0.875 ) { } ;          \\node [ style = none ] ( 28 ) at ( -0.5 , 0.25 ) { } ;          \\node [ style = none ] ( 16 ) at ( -0.5 , -0.125 ) { } ;          \\node [ style = none ] ( 29 ) at ( -0.5 , -0.375 ) { } ;          \\node [ style = none ] ( 17 ) at ( -0.5 , -1 ) { } ;          \\node [ contact , outer sep=5pt ] ( -2 ) at ( 1 , 1.25 ) { } ;          \\node [ contact , outer sep=5pt ] ( -1 ) at ( 1 , 0.75 ) { } ;          \\node [ contact , outer sep=5pt ] ( 0 ) at ( 1 , 0.25 ) { } ;          \\node [ contact , outer sep=5pt ] ( 1 ) at ( 1 , -0.25 ) { } ;          \\node [ contact , outer sep=5pt ] ( 2 ) at ( 1 , -0.75 ) { } ;          \\node [ contact , outer sep=5pt ] ( 3 ) at ( 1 , -1.25 ) { } ;          \\node [ style = none ] ( 18 ) at ( 2.5 , -1.125 ) { } ;          \\node [ style = none ] ( 21 ) at ( 2.5 , 1 ) { } ;          \\node [ style = none ] ( 22 ) at ( 2.5 , -0.375 ) { } ;          \\node [ style = none ] ( 23 ) at ( 2.5 , 0.475 ) { } ;          \\node [ style = none ] ( 24 ) at ( 2.5 , 0.25 ) { } ;          \\node [ contact , outer sep=5pt ] ( 19 ) at ( 4 , 1 ) { } ;          \\node [ contact , outer sep=5pt ] ( 14 ) at ( 4 , 0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 11 ) at ( 4 , -0 ) { } ;          \\node [ contact , outer sep=5pt ] ( 13 ) at ( 4 , -0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 12 ) at ( 4 , -1 ) { } ;          \\node [ style = none ] ( 4 ) at ( -2.75 , -0 ) { $ x$ } ;          \\node [ style = none ] ( 5 ) at ( 4.75 , -0 ) { $ z$ } ;          \\node [ style = none ] ( 20 ) at ( 1 , -1.75 ) { $ y$ } ;          \\node [ style = none ] ( 30 ) at ( 1 , 1.75 ) { \\phantom{$y$ } } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw [ thick ] ( 6.center ) to ( 15.center ) ;          \\draw [ thick ] ( 8.center ) to ( 15.center ) ;          \\draw [ thick ] ( -2.center ) to ( 15.center ) ;          \\draw [ thick ] ( -1.center ) to ( 15.center ) ;          \\draw [ thick ] ( 9.center ) to ( 16.center ) ;          \\draw [ thick ] ( 7.center ) to ( 16.center ) ;          \\draw [ thick ] ( 10.center ) to ( 17.center ) ;          \\draw [ thick ] ( 17.center ) to ( 2.center ) ;          \\draw [ thick ] ( 17.center ) to ( 3.center ) ;          \\draw [ thick ] ( 3.center ) to ( 18.center ) ;          \\draw [ thick ] ( 18.center ) to ( 12.center ) ;          \\draw [ thick ] ( -2.center ) to ( 21.center ) ;          \\draw [ thick ] ( -1.center ) to ( 21.center ) ;          \\draw [ thick ] ( 21.center ) to ( 19.center ) ;          \\draw [ thick ] ( 1.center ) to ( 22.center ) ;          \\draw [ thick ] ( 2.center ) to ( 22.center ) ;          \\draw [ thick ] ( 22.center ) to ( 11.center ) ;          \\draw [ thick ] ( 22.center ) to ( 13.center ) ;          \\draw [ thick ] ( 23.center ) to ( 14.center ) ;          \\draw [ thick ] ( 28.center ) to ( 0.center ) ;          \\draw [ thick ] ( 0.center ) to ( 24.center ) ;          \\draw [ thick ] ( 29.center ) to ( 1.center ) ;          \\draw [ rounded corners=5pt , dashed , color = gray ]      ( node cs : name=6 , anchor = north west ) --     ( node cs : name=8 , anchor = south west ) --     ( node cs : name=-1 , anchor = south east ) --     ( node cs : name=-2 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed , color = gray ]      ( node cs : name=9 , anchor = north west ) --     ( node cs : name=7 , anchor = south west ) --     ( node cs : name=7 , anchor = south east ) --     ( node cs : name=9 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed , color = gray ]      ( node cs : name=10 , anchor = north west ) --     ( node cs : name=10 , anchor = south west ) --     ( node cs : name=3 , anchor = south east ) --     ( node cs : name=2 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed , color = gray ]      ( node cs : name=-2 , anchor = north west ) --     ( node cs : name=-1 , anchor = south west ) --     ( node cs : name=19 , anchor = south east ) --     ( node cs : name=19 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed , color = gray ]      ( node cs : name=0 , anchor = north west ) --     ( node cs : name=0 , anchor = south west ) --     ( node cs : name=0 , anchor = south east ) --     ( node cs : name=0 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed , color = gray ]      ( node cs : name=1 , anchor = north west ) --     ( node cs : name=1 , anchor = south west ) --     ( node cs : name=1 , anchor = south east ) --     ( node cs : name=1 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed , color = gray ]      ( node cs : name=1 , anchor = north west ) --     ( node cs : name=2 , anchor = south west ) --     ( node cs : name=13 , anchor = south east ) --     ( node cs : name=11 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed , color = gray ]      ( node cs : name=3 , anchor = north west ) --     ( node cs : name=3 , anchor = south west ) --     ( node cs : name=12 , anchor = south east ) --     ( node cs : name=12 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed , color = gray ]      ( node cs : name=14 , anchor = north west ) --     ( node cs : name=14 , anchor = south west ) --     ( node cs : name=14 , anchor = south east ) --     ( node cs : name=14 , anchor = north east ) --     cycle ;      \\end{pgfonlayer } \\end{tikzpicture } \\end{aligned } \\ :    = \\ : \\begin{aligned } \\begin{tikzpicture}[circuit ee iec ]      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( -2.75 , -0 ) { $ x$ } ;          \\node [ style = none ] ( 1 ) at ( 1.75 , -0 ) { $ z$ } ;          \\node [ contact , outer sep=5pt ] ( 2 ) at ( -2 , 1 ) { } ;          \\node [ contact , outer sep=5pt ] ( 3 ) at ( -2 , -0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 4 ) at ( -2 , 0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 5 ) at ( -2 , -0 ) { } ;          \\node [ contact , outer sep=5pt ] ( 6 ) at ( -2 , -1 ) { } ;          \\node [ contact , outer sep=5pt ] ( 7 ) at ( 1 , -0 ) { } ;          \\node [ contact , outer sep=5pt ] ( 8) at ( 1 , -1 ) { } ;          \\node [ contact , outer sep=5pt ] ( 9 ) at ( 1 , -0.5 ) { } ;          \\node [ contact , outer sep=5pt ] ( 10 ) at ( 1 , 0.5 ) { } ;          \\node [ style = none ] ( 11 ) at ( -0.5 , 0.875 ) { } ;          \\node [ style = none ] ( 12 ) at ( -0.5 , 0.3 ) { } ;          \\node [ contact , outer sep=5pt ] ( 13 ) at ( 1 , 1 ) { } ;          \\node [ style = none ] ( 14 ) at ( -0.5 , -0.2 ) { } ;          \\node [ style = none ] ( 15 ) at ( -0.5 , -0.6 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw [ thick ] ( 2.center ) to ( 11.center ) ;          \\draw [ thick ] ( 4.center ) to ( 11.center ) ;          \\draw [ thick ] ( 11.center ) to ( 13.center ) ;          \\draw [ thick ] ( 5.center ) to ( 14.center ) ;          \\draw [ thick ] ( 3.center ) to ( 14.center ) ;          \\draw [ thick ] ( 15.center ) to ( 7.center ) ;          \\draw [ thick ] ( 15.center ) to ( 9.center ) ;          \\draw [ thick ] ( 6.center ) to ( 15.center ) ;          \\draw [ thick ] ( 15.center ) to ( 8.center ) ;          \\draw [ thick ] ( 12.center ) to ( 10.center ) ;          \\draw [ rounded corners=5pt , dashed , color = gray ]      ( node cs : name=2 , anchor = north west ) --     ( node cs : name=4 , anchor = south west ) --     ( node cs : name=13 , anchor = south east ) --     ( node cs : name=13 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed , color = gray ]      ( node cs : name=5 , anchor = north west ) --     ( node cs : name=3 , anchor = south west ) --     ( node cs : name=3 , anchor = south east ) --     ( node cs : name=5 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed , color = gray ]      ( node cs : name=10 , anchor = north west ) --     ( node cs : name=10 , anchor = south west ) --     ( node cs : name=10 , anchor = south east ) --     ( node cs : name=10 , anchor = north east ) --     cycle ;          \\draw [ rounded corners=5pt , dashed , color = gray ]      ( node cs : name=6 , anchor = north west ) --     ( node cs : name=6 , anchor = south west ) --     ( node cs : name=8 , anchor = south east ) --     ( node cs : name=7 , anchor = north east ) --     cycle ;      \\end{pgfonlayer } \\end{tikzpicture } \\end{aligned}\\ ] ] again , the composition law captures the idea that connectivity is all that matters : as long as the wires are ` ideal ' , the exact path does not matter .",
    "the application to electrical circuits is discussed in detail in @xcite .",
    "this visualisation mimics the string diagrams defining extraspecial commutative frobenius monoids .",
    "we introduce extraspecial commutative frobenius monoids in some detail , writing our axioms using the string calculus for monoidal categories introduced by joyal and street @xcite .",
    "diagrams will be read left to right , and we shall suppress the labels as we deal with a unique generating object and a unique generator of each type . while we expect that the algebraic structures below  monoids , comonoids , and so on  are familiar to most readers , we include the additional detail to underscore the similarity between the wire diagrams for corelations and string diagrams for extraspecial commutative frobenius monoids .",
    "again , we shall see that the laws defining this structure express the principle that connectivity is all that matters .",
    "recall that a * commutative monoid * @xmath30 in symmetric monoidal category @xmath31 is an object @xmath0 of @xmath32 together with maps @xmath33 ( 0 ) at ( 1 , -0 ) { } ;          \\node [ style = circ ] ( 1 ) at ( 0.125 , -0 ) { } ;          \\node [ style = none ] ( 2 ) at ( -1 , 0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( -1 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=0 , out=120 , looseness=1.20 ] ( 1.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=0 , out=-120 , looseness=1.20 ] ( 1.center ) to ( 3.center ) ;      \\end{pgfonlayer }        \\end{tikzpicture } } \\end{aligned } } & & {    \\begin{aligned }      \\resizebox{.075\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( 1 , -0 ) { } ;          \\node [ style = none ] ( 1 ) at ( -1 , -0 ) { } ;          \\node [ style = circ ] ( 2 ) at ( 0 , -0 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 2 ) ;      \\end{pgfonlayer }        \\end{tikzpicture } }    \\end{aligned } } \\\\",
    "\\mu{{\\colon}}x\\otimes x \\to x & & \\eta{{\\colon}}i \\to x    } \\ ] ] obeying @xmath34 ( 0 ) at ( 0.125 , -0 ) { } ;          \\node [ style = none ] ( 1 ) at ( -1 , 0.5 ) { } ;          \\node [ style = none ] ( 2 ) at ( -1 , -0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( 0 , -1 ) { } ;          \\node [ style = none ] ( 4 ) at ( 2.25 , -0.5 ) { } ;          \\node [ style = none ] ( 5 ) at ( 0.25 , -0 ) { } ;          \\node [ style = circ ] ( 6 ) at ( 1.25 , -0.5 ) { } ;          \\node [ style = none ] ( 7 ) at ( -1 , -1 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] [ in=0 , out=120 , looseness=1.20 ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=0 , out=-120 , looseness=1.20 ] ( 0.center ) to ( 2.center ) ;          \\draw[line width=2pt ] ( 4.center ) to ( 6 ) ;          \\draw[line width=2pt ] [ in=0 , out=120 , looseness=1.20 ] ( 6 ) to ( 5.center ) ;          \\draw[line width=2pt ] [ in=0 , out=-120 , looseness=1.20 ] ( 6 ) to ( 3.center ) ;          \\draw[line width=2pt ] ( 3.center ) to ( 7.center ) ;      \\end{pgfonlayer }        \\end{tikzpicture } }    \\end{aligned } } = {    \\begin{aligned }      \\resizebox{.1\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = circ ] ( 0 ) at ( 0.125 , -0.5 ) { } ;          \\node [ style = none ] ( 1 ) at ( -1 , -1 ) { } ;          \\node [ style = none ] ( 2 ) at ( -1 , 0 ) { } ;          \\node [ style = none ] ( 3 ) at ( 0 , 0.5 ) { } ;          \\node [ style = none ] ( 4 ) at ( 2.25 , 0 ) { } ;          \\node [ style = none ] ( 5 ) at ( 0.25 , -0.5 ) { } ;          \\node [ style = circ ] ( 6 ) at ( 1.25 , 0 ) { } ;          \\node [ style = none ] ( 7 ) at ( -1 , 0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] [ in=0 , out=-120 , looseness=1.20 ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=0 , out=120 , looseness=1.20 ] ( 0.center ) to ( 2.center ) ;          \\draw[line width=2pt ] ( 4.center ) to ( 6 ) ;          \\draw[line width=2pt ] [ in=0 , out=-120 , looseness=1.20 ] ( 6 ) to ( 5.center ) ;          \\draw[line width=2pt ] [ in=0 , out=120 , looseness=1.20 ] ( 6 ) to ( 3.center ) ;          \\draw[line width=2pt ] ( 3.center ) to ( 7.center ) ;      \\end{pgfonlayer }        \\end{tikzpicture } }    \\end{aligned } } & {    \\begin{aligned }      \\resizebox{.1\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( 1 , -0 ) { } ;          \\node [ style = circ ] ( 1 ) at ( 0.125 , -0 ) { } ;          \\node [ style = circ ] ( 2 ) at ( -1 , 0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( -1 , -0.5 ) { } ;          \\node [ style = none ] ( 4 ) at ( -2 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=0 , out=120 , looseness=1.20 ] ( 1.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=0 , out=-120 , looseness=1.20 ] ( 1.center ) to ( 3.center ) ;          \\draw[line width=2pt ] ( 4.center ) to ( 3.center ) ;      \\end{pgfonlayer } \\end{tikzpicture }      }    \\end{aligned } } =      {    \\begin{aligned }      \\resizebox{.1\\textwidth } { ! } {       \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( -1 , -0 ) { } ;          \\node [ style = none ] ( 1 ) at ( 1 , -0 ) { } ;          \\node [ style = none ] ( 2 ) at ( 0 , 0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( 0 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 1.center ) to ( 0.center ) ;      \\end{pgfonlayer } \\end{tikzpicture }       }    \\end{aligned } } & {    \\begin{aligned }      \\resizebox{.1\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( 1.25 , -0 ) { } ;          \\node [ style = circ ] ( 1 ) at ( 0.375 , -0 ) { } ;          \\node [ style = none ] ( 2 ) at ( -0.5 , -0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( -2 , 0.5 ) { } ;          \\node [ style = none ] ( 4 ) at ( -0.5 , 0.5 ) { } ;          \\node [ style = none ] ( 5 ) at ( -2 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=0 , out=-120 , looseness=1.20 ] ( 1.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=180 , out=0 , looseness=1.00 ] ( 3.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=0 , out=120 , looseness=1.20 ] ( 1.center ) to ( 4.center ) ;          \\draw[line width=2pt ] [ in=0 , out=180 , looseness=1.00 ] ( 4.center ) to ( 5.center ) ;      \\end{pgfonlayer } \\end{tikzpicture }      }    \\end{aligned } } = { \\begin{aligned }      \\resizebox{.07\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( 1 , -0 ) { } ;          \\node [ style = circ ] ( 1 ) at ( 0.125 , -0 ) { } ;          \\node [ style = none ] ( 2 ) at ( -1 , 0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( -1 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=0 , out=120 , looseness=1.20 ] ( 1.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=0 , out=-120 , looseness=1.20 ] ( 1.center ) to ( 3.center ) ;      \\end{pgfonlayer }        \\end{tikzpicture } } \\end{aligned } } \\\\      \\textrm{(associativity ) } & \\textrm{(unitality ) } & \\textrm{(commutativity ) }    } \\ ] ] where @xmath35 ( 2 ) at ( -0.5 , -0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( -2 , 0.5 ) { } ;          \\node [ style = none ] ( 4 ) at ( -0.5 , 0.5 ) { } ;          \\node [ style = none ] ( 5 ) at ( -2 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] [ in=180 , out=0 , looseness=1.00 ] ( 3.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=0 , out=180 , looseness=1.00 ] ( 4.center ) to ( 5.center ) ;      \\end{pgfonlayer } \\end{tikzpicture }      }    \\end{aligned } } $ ] is the braiding on @xmath36 .",
    "in addition to the ` upper ' unitality law above , the mirror image ` lower ' unitality law also holds , due to commutativity and the naturality of the braiding .",
    "dually , a * cocommutative comonoid * @xmath30 in @xmath32 is an object @xmath0 together with maps @xmath33 ( 0 ) at ( -1 , -0 ) { } ;          \\node [ style = circ ] ( 1 ) at ( -0.125 , -0 ) { } ;          \\node [ style = none ] ( 2 ) at ( 1 , 0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( 1 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=180 , out=60 , looseness=1.20 ] ( 1.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=180 , out=-60 , looseness=1.20 ] ( 1.center ) to ( 3.center ) ;      \\end{pgfonlayer }        \\end{tikzpicture } } \\end{aligned } } & & {    \\begin{aligned }      \\resizebox{.075\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( -1 , -0 ) { } ;          \\node [ style = none ] ( 1 ) at ( 1 , -0 ) { } ;          \\node [ style = circ ] ( 2 ) at ( 0 , -0 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 2 ) ;      \\end{pgfonlayer }        \\end{tikzpicture } }    \\end{aligned } } \\\\",
    "\\delta{{\\colon}}x\\to x \\otimes x & & \\epsilon{{\\colon}}x \\to",
    "i    } \\ ] ] obeying @xmath34 ( 0 ) at ( 1.125 , -0.5 ) { } ;          \\node [ style = none ] ( 1 ) at ( 2.25 , -1 ) { } ;          \\node [ style = none ] ( 2 ) at ( 2.25 , 0 ) { } ;          \\node [ style = none ] ( 3 ) at ( 1.25 , 0.5 ) { } ;          \\node [ style = none ] ( 4 ) at ( -1 , 0 ) { } ;          \\node [ style = none ] ( 5 ) at ( 1 , -0.5 ) { } ;          \\node [ style = circ ] ( 6 ) at ( 0 , 0 ) { } ;          \\node [ style = none ] ( 7 ) at ( 2.25 , 0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] [ in=180 , out=-60 , looseness=1.20 ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=180 , out=60 , looseness=1.20 ] ( 0.center ) to ( 2.center ) ;          \\draw[line width=2pt ] ( 4.center ) to ( 6 ) ;          \\draw[line width=2pt ] [ in=180 , out=-60 , looseness=1.20 ] ( 6 ) to ( 5.center ) ;          \\draw[line width=2pt ] [ in=180 , out=60 , looseness=1.20 ] ( 6 ) to ( 3.center ) ;          \\draw[line width=2pt ] ( 3.center ) to ( 7.center ) ;      \\end{pgfonlayer }        \\end{tikzpicture } }    \\end{aligned } } = {    \\begin{aligned }      \\resizebox{.1\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = circ ] ( 0 ) at ( 1.125 , 0 ) { } ;          \\node [ style = none ] ( 1 ) at ( 2.25 , 0.5 ) { } ;          \\node [ style = none ] ( 2 ) at ( 2.25 , -0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( 1.25 , -1 ) { } ;          \\node [ style = none ] ( 4 ) at ( -1 , -0.5 ) { } ;          \\node [ style = none ] ( 5 ) at ( 1 , 0 ) { } ;          \\node [ style = circ ] ( 6 ) at ( 0 , -0.5 ) { } ;          \\node [ style = none ] ( 7 ) at ( 2.25 , -1 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] [ in=180 , out=60 , looseness=1.20 ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=180 , out=-60 , looseness=1.20 ] ( 0.center ) to ( 2.center ) ;          \\draw[line width=2pt ] ( 4.center ) to ( 6 ) ;          \\draw[line width=2pt ] [ in=180 , out=60 , looseness=1.20 ] ( 6 ) to ( 5.center ) ;          \\draw[line width=2pt ] [ in=180 , out=-60 , looseness=1.20 ] ( 6 ) to ( 3.center ) ;          \\draw[line width=2pt ] ( 3.center ) to ( 7.center ) ;      \\end{pgfonlayer }        \\end{tikzpicture } }    \\end{aligned } } & {    \\begin{aligned }      \\resizebox{.1\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( -2 , -0 ) { } ;          \\node [ style = circ ] ( 1 ) at ( -1.125 , -0 ) { } ;          \\node [ style = circ ] ( 2 ) at ( 0 , 0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( 0 , -0.5 ) { } ;          \\node [ style = none ] ( 4 ) at ( 1 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=180 , out=60 , looseness=1.20 ] ( 1.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=180 , out=-60 , looseness=1.20 ] ( 1.center ) to ( 3.center ) ;          \\draw[line width=2pt ] ( 4.center ) to ( 3.center ) ;      \\end{pgfonlayer } \\end{tikzpicture }      }    \\end{aligned } } =      {    \\begin{aligned }      \\resizebox{.1\\textwidth } { ! } {       \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( -1 , -0 ) { } ;          \\node [ style = none ] ( 1 ) at ( 1 , -0 ) { } ;          \\node [ style = none ] ( 2 ) at ( 0 , 0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( 0 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 1.center ) to ( 0.center ) ;      \\end{pgfonlayer } \\end{tikzpicture }       }    \\end{aligned } } & {    \\begin{aligned }      \\resizebox{.1\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( -2 , -0 ) { } ;          \\node [ style = circ ] ( 1 ) at ( -1.125 , -0 ) { } ;          \\node [ style = none ] ( 2 ) at ( -0.25 , -0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( 1.25 , 0.5 ) { } ;          \\node [ style = none ] ( 4 ) at ( -0.25 , 0.5 ) { } ;          \\node [ style = none ] ( 5 ) at ( 1.25 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=180 , out=-60 , looseness=1.20 ] ( 1.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=0 , out=180 , looseness=1.00 ] ( 3.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=180 , out=60 , looseness=1.20 ] ( 1.center ) to ( 4.center ) ;          \\draw[line width=2pt ] [ in=180 , out=0 , looseness=1.00 ] ( 4.center ) to ( 5.center ) ;      \\end{pgfonlayer } \\end{tikzpicture }      }    \\end{aligned } } = { \\begin{aligned }      \\resizebox{.07\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( -1 , -0 ) { } ;          \\node [ style = circ ] ( 1 ) at ( -0.125 , -0 ) { } ;          \\node [ style = none ] ( 2 ) at ( 1 , 0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( 1 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=180 , out=60 , looseness=1.20 ] ( 1.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=180 , out=-60 , looseness=1.20 ] ( 1.center ) to ( 3.center ) ;      \\end{pgfonlayer }        \\end{tikzpicture } } \\end{aligned } } \\\\      \\textrm{(coassociativity ) } & \\textrm{(counitality ) } &      \\textrm{(cocommutativity ) }    } \\ ] ] given a monoid and comonoid on the same object , there are two well - known ways for them to interact : the bimonoid laws and the frobenius law .",
    "we shall discuss both in this paper , but for now we restrict our attention to frobenius structure .",
    "an * extraspecial commutative frobenius monoid * @xmath37 in a monoidal category @xmath38 comprises a commutative monoid @xmath30 and a cocommutative comonoid @xmath39 that further obey @xmath40 ( 0 ) at ( -1.5 , 0.5 ) { } ;          \\node [ style = circ ] ( 1 ) at ( -0.75 , 0.5 ) { } ;          \\node [ style = none ] ( 2 ) at ( 0.25 , -0 ) { } ;          \\node [ style = none ] ( 3 ) at ( 0.25 , 1 ) { } ;          \\node [ style = circ ] ( 4 ) at ( 1 , -0.5 ) { } ;          \\node [ style = none ] ( 5 ) at ( 0 , -0 ) { } ;          \\node [ style = none ] ( 6 ) at ( 1.75 , -0.5 ) { } ;          \\node [ style = none ] ( 7 ) at ( 0 , -1 ) { } ;          \\node [ style = none ] ( 8) at ( 1.75 , 1 ) { } ;          \\node [ style = none ] ( 9 ) at ( -1.5 , -1 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] [ in=180 , out=-60 , looseness=1.20 ] ( 1 ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=180 , out=60 , looseness=1.20 ] ( 1 ) to ( 3.center ) ;          \\draw[line width=2pt ] ( 0.center ) to ( 1 ) ;          \\draw[line width=2pt ] ( 6.center ) to ( 4 ) ;          \\draw[line width=2pt ] [ in=0 , out=120 , looseness=1.20 ] ( 4 ) to ( 5.center ) ;          \\draw[line width=2pt ] [ in=0 , out=-120 , looseness=1.20 ] ( 4 ) to ( 7.center ) ;          \\draw[line width=2pt ] ( 3.center ) to ( 8.center ) ;          \\draw[line width=2pt ] ( 7.center ) to ( 9.center ) ;      \\end{pgfonlayer } \\end{tikzpicture }      }    \\end{aligned } } = {    \\begin{aligned }      \\resizebox{.1\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = circ ] ( 0 ) at ( -0.5 , -0 ) { } ;          \\node [ style = none ] ( 1 ) at ( -1.5 , -0.5 ) { } ;          \\node [ style = none ] ( 2 ) at ( -1.5 , 0.5 ) { } ;          \\node [ style = circ ] ( 3 ) at ( 0.5 , -0 ) { } ;          \\node [ style = none ] ( 4 ) at ( 1.5 , -0.5 ) { } ;          \\node [ style = none ] ( 5 ) at ( 1.5 , 0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] [ in=0 , out=-120 , looseness=1.20 ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=0 , out=120 , looseness=1.20 ] ( 0.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=180 , out=-60 , looseness=1.20 ] ( 3 ) to ( 4.center ) ;          \\draw[line width=2pt ] [ in=180 , out=60 , looseness=1.20 ] ( 3 ) to ( 5.center ) ;          \\draw[line width=2pt ] ( 0 ) to ( 3 ) ;      \\end{pgfonlayer } \\end{tikzpicture }      }    \\end{aligned } } = {    \\begin{aligned }      \\resizebox{.1\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( 1.75 , 0.5 ) { } ;          \\node [ style = circ ] ( 1 ) at ( 1 , 0.5 ) { } ;          \\node [ style = none ] ( 2 ) at ( 0 , -0 ) { } ;          \\node [ style = none ] ( 3 ) at ( 0 , 1 ) { } ;          \\node [ style = circ ] ( 4 ) at ( -0.75 , -0.5 ) { } ;          \\node [ style = none ] ( 5 ) at ( 0.25 , -0 ) { } ;          \\node [ style = none ] ( 6 ) at ( -1.5 , -0.5 ) { } ;          \\node [ style = none ] ( 7 ) at ( 0.25 , -1 ) { } ;          \\node [ style = none ] ( 8) at ( -1.5 , 1 ) { } ;          \\node [ style = none ] ( 9 ) at ( 1.75 , -1 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] [ in=0 , out=-120 , looseness=1.20 ] ( 1 ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=0 , out=120 , looseness=1.20 ] ( 1 ) to ( 3.center ) ;          \\draw[line width=2pt ] ( 0.center ) to ( 1 ) ;          \\draw[line width=2pt ] ( 6.center ) to ( 4 ) ;          \\draw[line width=2pt ] [ in=180 , out=60 , looseness=1.20 ] ( 4 ) to ( 5.center ) ;          \\draw[line width=2pt ] [ in=180 , out=-60 , looseness=1.20 ] ( 4 ) to ( 7.center ) ;          \\draw[line width=2pt ] ( 3.center ) to ( 8.center ) ;          \\draw[line width=2pt ] ( 7.center ) to ( 9.center ) ;      \\end{pgfonlayer } \\end{tikzpicture }      }    \\end{aligned } } & {    \\begin{aligned }      \\resizebox{.1\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( 1.75 , -0 ) { } ;          \\node [ style = circ ] ( 1 ) at ( 0.75 , -0 ) { } ;          \\node [ style = none ] ( 2 ) at ( 0 , -0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( 0 , 0.5 ) { } ;          \\node [ style = circ ] ( 4 ) at ( -0.75 , -0 ) { } ;          \\node [ style = none ] ( 5 ) at ( 0 , -0.5 ) { } ;          \\node [ style = none ] ( 6 ) at ( -1.75 , -0 ) { } ;          \\node [ style = none ] ( 7 ) at ( 0 , 0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=0 , out=-120 , looseness=1.20 ] ( 1.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=0 , out=120 , looseness=1.20 ] ( 1.center ) to ( 3.center ) ;          \\draw[line width=2pt ] ( 6.center ) to ( 4 ) ;          \\draw[line width=2pt ] [ in=180 , out=-60 , looseness=1.20 ] ( 4 ) to ( 5.center ) ;          \\draw[line width=2pt ] [ in=180 , out=60 , looseness=1.20 ] ( 4 ) to ( 7.center ) ;      \\end{pgfonlayer } \\end{tikzpicture }      }    \\end{aligned } } =      {    \\begin{aligned }      \\resizebox{.1\\textwidth } { ! } {       \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( -1 , -0 ) { } ;          \\node [ style = none ] ( 1 ) at ( 1 , -0 ) { } ;          \\node [ style = none ] ( 2 ) at ( 0 , 0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( 0 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 1.center ) to ( 0.center ) ;      \\end{pgfonlayer } \\end{tikzpicture }       }    \\end{aligned } } & {    \\begin{aligned }      \\resizebox{.1\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( 1.75 , -0 ) { } ;          \\node [ style = circ ] ( 1 ) at ( 0.75 , -0 ) { } ;          \\node [ style = circ ] ( 4 ) at ( -0.75 , -0 ) { } ;          \\node [ style = none ] ( 6 ) at ( -1.75 , -0 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }        \\draw[line width=2pt ] ( 1.center ) to ( 4.center ) ;      \\end{pgfonlayer } \\end{tikzpicture }      }    \\end{aligned } } = {    \\begin{aligned }      \\resizebox{.1\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( 1.75 , -0 ) { } ;          \\node [ style = none ] ( 6 ) at ( -1.75 , -0 ) { } ;      \\end{pgfonlayer } \\end{tikzpicture }      }    \\end{aligned } } \\\\      \\textrm{(the frobenius law ) } & \\textrm{(the special law ) } &      \\textrm{(the extra law ) }    } \\ ] ]    while we write two equations for the frobenius law , this is redundant : the equality of any two of the expressions implies the equality of all three .",
    "note that a monoid and comonoid obeying the frobenius law is commutative if and only if it is cocommutative .",
    "thus while a commutative and cocommutative frobenius monoid might more properly be called a bicommutative frobenius monoid , there is no ambiguity if we only say commutative .",
    "the frobenius law and the special law go back to carboni and walters , under the names s = x law and the diamond=1 law respectively @xcite .",
    "the extra law is a more recent discovery , appearing first under this name in the work of baez and erbele @xcite , as the ` bone law ' in @xcite , and as the ` irredundancy law ' in @xcite .",
    "observe that each of these equations equate string diagrams that connect precisely the same elements of the domain and codomain . to wit , the associativity , coassociativity , and frobenius laws show that the order in which we build a connected component through pairwise clustering is irrelevant , the special law shows that having multiple connections between points is irrelevant , and the extra law shows that ` extra ' components not connected to the domain or codomain are irrelevant .",
    "our main theorem will show that these equations are exactly those required to have the converse : two morphisms built from the generators of an extraspecial commutative frobenius monoid are equal and if and only if their diagrams impose the same connectivity relations on the disjoint union of the domain and codomain .",
    "this formalises an extension of the well - known spider theorem for special commutative frobenius monoids @xcite .",
    "introduced by mac lane @xcite to generalise lawvere s algebraic theories approach to universal algebra @xcite , the theory of props provides a framework to discuss algebraic structures with multi - input multi - output operations .",
    "a * prop * is a symmetric strict monoidal category having the natural numbers as objects and tensor product given by addition .",
    "a morphism of props is a symmetric strict identity - on - objects monoidal functor .",
    "if @xmath41 is a prop and @xmath32 is a symmetric monoidal category , we define an * algebra of * @xmath41 * in * @xmath32 to be a symmetric strict monoidal functor @xmath42 .",
    "a morphism of algebras of @xmath41 in @xmath32 is a monoidal natural transformation between them .",
    "props allow us to study ( one - sorted ) symmetric monoidal theories , like those of monoids , groups , and rings .",
    "instances of these structures arise as algebras , or models , of props .",
    "a * symmetric monoidal theory * @xmath43 comprises a signature @xmath44 and a set of equations @xmath45 .",
    "a * signature * is a set of generators , where a * generator * is a formal symbol @xmath46 . from a signature @xmath44",
    ", we may formally construct the set of @xmath44-terms .",
    "defined inductively , a @xmath44 * -term * takes one of the following forms :    * the empty term @xmath47 , the unit @xmath48 , the braiding @xmath35 ( 2 ) at ( -0.5 , -0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( -2 , 0.5 ) { } ;          \\node [ style = none ] ( 4 ) at ( -0.5 , 0.5 ) { } ;          \\node [ style = none ] ( 5 ) at ( -2 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] [ in=180 , out=0 , looseness=1.00 ] ( 3.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=0 , out=180 , looseness=1.00 ] ( 4.center ) to ( 5.center ) ;      \\end{pgfonlayer } \\end{tikzpicture }      }    \\end{aligned } } { { \\colon}}2 \\to 2 $ ] ; * the generators @xmath49 in @xmath44 ; * @xmath50 , where @xmath49 and @xmath51 are @xmath44-terms ; or *",
    "@xmath52 , where @xmath53 and @xmath54 are @xmath44-terms .",
    "we call @xmath55 the * type * of a @xmath44-term @xmath56 .",
    "an * equation * is then a pair of two @xmath44-terms with the same type .    a * model * for a symmetric monoidal theory in a symmetric monoidal category @xmath38 is an object @xmath0 together with morphisms @xmath57 for every generator @xmath46 in @xmath44 , such that for every equation the two @xmath44-terms are equal interpreted as morphisms in @xmath32 .",
    "a morphism of models @xmath0 to @xmath1 is a morphism @xmath58 in @xmath32 such that for every generator @xmath59 we have @xmath60 .",
    "many common algebraic structures can be expressed as symmetric monoidal theories , including all those discussed in the previous section .",
    "for example , the symmetric monoidal theory of commutative monoids has signature @xmath61 and three equations : precisely those pairs of terms depicted in section  [ sec.escfm ] .",
    "we say that a prop @xmath41 * is the prop for * a symmetric monoidal theory @xmath62 if for all symmetric monoidal categories @xmath32 the category of algebras of @xmath41 in @xmath32 is equivalent to the category of models of @xmath62 in @xmath32 .",
    "write @xmath63 for the category of finite sets and functions , and also for its equivalent skeleton .",
    "this category inherits symmetric monoidal structure from the existence of finite coproducts , in this case the disjoint union of sets . fixing a skeleton and , for example , utilising a total order on each set",
    ", one may choose the unitors and associator to be the identity , resulting a symmetric strict monoidal category @xcite .",
    "thus we may consider @xmath63 to be a prop .",
    "it is known that @xmath63 is the prop for commutative monoids @xcite .",
    "indeed , write @xmath64 and @xmath65 for the unique maps of their type in @xmath66 . then given a symmetric monoidal functor @xmath67 ,",
    "the tuple @xmath68 is a commutative monoid .",
    "conversely , any commutative monoid @xmath30 in @xmath32 gives rise to a functor @xmath69 mapping @xmath70 to @xmath0 , @xmath71 to @xmath72 , and @xmath73 to @xmath74 .",
    "we may bootstrap on this construction to show that @xmath16 has a strict skeleton , and so too may be considered a prop .",
    "first , recall that in any finitely cocomplete category @xmath32 we may construct a symmetric monoidal bicategory with the same objects and monoidal product , with morphisms cospans in @xmath32 , composition of morphisms given by pushout , and with 2-morphisms maps between apexes of cospans that commute over the feet @xcite .",
    "decategorifying , we obtain a monoidal category @xmath75 , where morphisms are isomorphism classes of cospans in @xmath32 .",
    "next , call a cospan @xmath76 * jointly epic * if the induced morphism @xmath77 is an epimorphism . if monomorphisms in @xmath32 are preserved under pushout , we may construct a symmetric monoidal category @xmath78 with objects again those of @xmath32 , but this time morphisms isomorphism classes of _ jointly epic _ cospans in @xmath79 , and composition taking the pushout of representative cospans , before corestricting to the jointly epic part @xcite .- factorisation system such that @xmath80 is preserved under pushout @xcite .",
    "in related papers , we have shown that this construction can be used to model interconnection of ` black - boxed ' systems ; that is , to model systems in which only the internal structure is obscured , leaving only the external behaviour @xcite . ]",
    "the unitors , associator , and braiding are inherited from @xmath32 .",
    "our category @xmath16 can be constructed in this way .",
    "the category @xmath16 is isomorphic as a symmetric monoidal category to @xmath81 .    by the universal property of the coproduct , corelations @xmath82 are in one - to - one correspondence with jointly epic cospans @xmath83 .",
    "it is straightforward to check the notions of composition agree : consider the wire diagrams for corelations .    as equivalences preserve colimits , replacing @xmath63 with its strict skeleton",
    "thus shows that @xmath16 also has a strict skeleton .",
    "we henceforth use @xmath16 to refer to this equivalent prop .",
    "this allows us to restate our main theorem as follows .",
    "[ thm.main ] @xmath84 is the prop for extraspecial commutative frobenius monoids .    to prove this theorem",
    ", we begin by giving a more explicit construction of the prop for extraspecial commutative frobenius monoids .",
    "if we consider the set @xmath85 as a discrete category , then a signature is a functor from @xmath85 to the category @xmath86 of sets and functions .",
    "note that to each prop we may associate the so - called underlying signature @xmath87 .",
    "the following important result allows us to understand the category @xmath88 of props ; a proof can be found in rebro @xcite and trimble @xcite .",
    "the underlying signature functor @xmath89 is monadic .",
    "we write the right adjoint of this functor @xmath90 , and call @xmath91 the * free prop * on the signature @xmath44 .",
    "in fact , the free prop on @xmath44 has as morphisms the set of @xmath44-terms @xcite .",
    "another important corollary of this theorem is that the category of props is cocomplete .",
    "in particular , this allows us to take coequalizers in the category of props .",
    "we use this to give an explicit construction of the prop for a symmetric monoidal theory .",
    "let @xmath92 be a symmetric monoidal theory . recall that each equation has a type , and abuse notation to write @xmath45 also for the resulting signature .",
    "then , as the morphisms in @xmath91 are @xmath44-terms and as @xmath93 and @xmath94 are adjoint , we may define functors @xmath95 mapping each equation to the first element and the second element of the pair respectively .",
    "this allows us to build the prop for the theory .",
    "the prop for a symmetric monoidal theory @xmath92 is the coequalizer of the diagram @xmath96_{\\rho } \\ar@<.5ex>[r]^{\\lambda } & f\\sigma .      } \\ ] ]    again , a proof may be found in rebro @xcite or trimble @xcite .",
    "the intuition is that the coequalizer is the weakest prop that forces the ` left - hand side ' ( given by @xmath97 ) of each equation to equal the ` right ' ( given by @xmath98 ) .",
    "write @xmath99 for the prop for extraspecial commutative frobenius monoids constructed in this way .",
    "it remains to prove that this prop is isomorphic to @xmath100 .",
    "in the influential paper @xcite , lack develops the theory of distributive laws for props , and proves the following as an example .",
    "note we write @xmath101 for @xmath102 .",
    "[ prop : cospanfinset2 ] @xmath101 is isomorphic to the prop @xmath103 for special commutative frobenius monoids .",
    "as the name suggests , a special commutative frobenius monoid is a commutative monoid and cocommutative comonid that further obey the frobenius and special laws .",
    "note that in @xmath66 there are unique maps @xmath104 , @xmath105 , and @xmath106 . the isomorphism acts as follows on the generators of @xmath103 : @xmath107 ( 0 ) at ( 1 , -0 ) { } ;          \\node [ style = circ ] ( 1 ) at ( 0.125 , -0 ) { } ;          \\node [ style = none ] ( 2 ) at ( -1 , 0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( -1 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=0 , out=120 , looseness=1.20 ] ( 1.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=0 , out=-120 , looseness=1.20 ] ( 1.center ) to ( 3.center ) ;      \\end{pgfonlayer }        \\end{tikzpicture } } \\end{aligned } } & \\longmapsto \\big(2 \\to 1 \\leftarrow 1\\big ) \\\\    {    \\begin{aligned }      \\resizebox{.05\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( 1 , -0 ) { } ;          \\node [ style = none ] ( 1 ) at ( -1 , -0 ) { } ;          \\node [ style = circ ] ( 2 ) at ( 0 , -0 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 2 ) ;      \\end{pgfonlayer }        \\end{tikzpicture } }    \\end{aligned } } & \\longmapsto \\big(0 \\to 1 \\leftarrow 1\\big ) \\\\     { \\begin{aligned }      \\resizebox{.05\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( -1 , -0 ) { } ;          \\node [ style = circ ] ( 1 ) at ( -0.125 , -0 ) { } ;          \\node [ style = none ] ( 2 ) at ( 1 , 0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( 1 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=180 , out=60 , looseness=1.20 ] ( 1.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=180 , out=-60 , looseness=1.20 ] ( 1.center ) to ( 3.center ) ;      \\end{pgfonlayer }        \\end{tikzpicture } } \\end{aligned } } & \\longmapsto \\big(1 \\to 1 \\leftarrow 2\\big ) \\\\",
    "{    \\begin{aligned }      \\resizebox{.05\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( 0 ) at ( -1 , -0 ) { } ;          \\node [ style = none ] ( 1 ) at ( 1 , -0 ) { } ;          \\node [ style = circ ] ( 2 ) at ( 0 , -0 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 2 ) ;      \\end{pgfonlayer }        \\end{tikzpicture } }    \\end{aligned } } & \\longmapsto \\big(1 \\to 1 \\leftarrow 0\\big).\\end{aligned}\\ ] ] we use this to prove the main theorem .",
    "the guiding intuition is that to corestrict cospans to corelations is to impose the ` extra ' condition upon a special commutative frobenius monoid .",
    "our strategy will be to prove that @xmath17 and @xmath16 are coequalizers of isomorphic diagrams , and hence themselves isomorphic .",
    "first , we show how to construct @xmath17 as a coequalizer of props .",
    "[ lem.coeqfrobmon ] the following is a coequalizer diagram : @xmath108^(.4)\\lambda \\ar@<-0.6ex>[r]_(.4)\\rho      &   \\mathbf{th(scfm ) } \\ar[r ] & \\mathbf{th(escfm)}.    } \\ ] ]",
    "let @xmath109 and @xmath110 be the theories of special commutative frobenius monoids and extraspecial commutative frobenius monoids respectively  note that they have the same set of generators , @xmath44 .",
    "write also @xmath111 for the theory of the ` extra law ' , so @xmath112 contains just a single element @xmath113 .",
    "this has image @xmath114 ( 0 ) at ( 1.75 , -0 ) { } ;          \\node [ style = circ ] ( 1 ) at ( 0.75 , -0 ) { } ;          \\node [ style = circ ] ( 4 ) at ( -0.75 , -0 ) { } ;          \\node [ style = none ] ( 6 ) at ( -1.75 , -0 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }        \\draw[line width=2pt ] ( 1.center ) to ( 4.center ) ;      \\end{pgfonlayer } \\end{tikzpicture }      }    \\end{aligned } } \\end{aligned}$ ] and @xmath115 under the two canonical maps @xmath116 .",
    "now , by construction we have a map @xmath117 , and composing this with @xmath118 and @xmath119 gives @xmath97 and @xmath98 respectively . since an extraspecial commutative frobenius monoid is a fortiori a special commutative frobenius monoid , by construction we also have a map @xmath120",
    "; this is the unlabelled map above . as @xmath121 , it is straightforward to verify that the above diagram is a coequalizer diagram .",
    "next , we construct @xmath16 as a coequalizer .",
    "[ lem.coeqcospan ] the following is a coequalizer diagram : @xmath108^(.45){\\alpha \\circ \\lambda }      \\ar@<-0.6ex>[r]_(.45){\\alpha \\circ \\rho }      & { { { \\mathbf{cospan } } } } \\ar[r ] & { { { \\mathbf{corel } } } }    } \\ ] ]    the map @xmath122 is the canonical one corestricting each cospan to its jointly epic part .",
    "it is straightforward to check this is indeed a map of props ; details can be found in @xcite .",
    "now @xmath123 , while @xmath124 .",
    "this implies the above diagram commutes from @xmath125 to @xmath100 .",
    "it remains to check the universal property .",
    "suppose that we have a prop @xmath12 such that the diagram @xmath126^(.45){\\alpha \\circ \\lambda }        \\ar@<-0.6ex>[r]_(.45){\\alpha \\circ \\rho }        & { { { \\mathbf{cospan } } } } \\ar[r]^(.6)a & \\mathcal t      } \\ ] ] commutes from @xmath125 to @xmath12 .",
    "we must show there is a unique map @xmath127 .    as the map @xmath122 is full ,",
    "it is enough to show that each cospan @xmath128 has the same image as its jointly epic part @xmath129 \\stackrel{g'}{\\leftarrow } m)$ ] under @xmath130we then have a unique and well - defined map @xmath131 sending each corelation to its image as a cospan under @xmath130 .",
    "but this is straightforward : @xmath132 \\stackrel{g'}{\\leftarrow } m\\big ) +      a\\big(0 \\rightarrow ( a-{{\\mathrm{im}}}[f , g ] ) \\leftarrow 0\\big)\\\\      & = a\\big(n \\stackrel{f'}{\\rightarrow } { { \\mathrm{im}}}[f , g ] \\stackrel{g'}{\\leftarrow } m\\big ) +      ( a\\circ\\alpha\\circ\\lambda)\\big(\\bullet^{+(a-{{\\mathrm{im}}}[f , g])}\\big ) \\\\      & = a\\big(n \\stackrel{f'}{\\rightarrow } { { \\mathrm{im}}}[f , g ] \\stackrel{g'}{\\leftarrow } m\\big ) +      ( a\\circ\\alpha\\circ\\rho)\\big(\\bullet^{+(a-{{\\mathrm{im}}}[f , g])}\\big ) \\\\      &",
    "= a\\big(n \\stackrel{f'}{\\rightarrow } { { \\mathrm{im}}}[f , g ] \\stackrel{g'}{\\leftarrow } m\\big ) .    \\end{aligned}\\ ] ] this proves the lemma .",
    "more explicitly now , our strategy is to show both @xmath100 and @xmath17 are coequalizers in the diagram @xmath133^{\\alpha } \\ar[r ] & \\mathbf{th(escfm ) } \\ar[dd ] \\\\",
    "fe_{\\mathrm{ex } } \\ar@<0.6ex>[ur]^\\lambda \\ar@<-0.6ex>[ur]_\\rho      \\ar@<0.6ex>[dr]^{\\alpha \\circ \\lambda }      \\ar@<-0.6ex>[dr]_{\\alpha\\circ\\rho}\\\\      & { { { \\mathbf{cospan } } } } \\ar[r ] & { { { \\mathbf{corel } } } }    } \\ ] ] lemma [ lem.coeqfrobmon ] shows the upper row is a coequalizer diagram , while lemma [ lem.coeqcospan ] shows the lower row is too . as the two relevant triangles commute and the first vertical map is an isomorphism , @xmath17 and @xmath100 are coequalizers of isomorphic diagrams , and hence themselves isomorphic .",
    "the so - called spider theorem is an immediate corollory .",
    "two morphisms in an extraspecial commutative frobenius monoid are equal if and only if they map to the same corelation .",
    "lastly , we return to the big picture . the dual theorems are known for spans and relations @xcite , but the above method of proof provides a novel argument , and illuminates the duality .",
    "recall bimonoids , sometimes also called bialgebras .",
    "a * bicommutative bimonoid * @xmath37 in a monoidal category @xmath38 comprises a commutative monoid @xmath30 and a cocommutative comonoid @xmath39 that further obey the extra law and the bimonoid laws @xmath134 ( 0 ) at ( -2 , 0.75 ) { } ;          \\node [ style = none ] ( 1 ) at ( -2 , -0.5 ) { } ;          \\node [ style = circ ] ( 2 ) at ( -1 , 0.75 ) { } ;          \\node [ style = circ ] ( 3 ) at ( -1 , -0.5 ) { } ;          \\node [ style = none ] ( 4 ) at ( 0 , 1.25 ) { } ;          \\node [ style = none ] ( 5 ) at ( -0.25 , 0.25 ) { } ;          \\node [ style = none ] ( 6 ) at ( -0.25 , -0 ) { } ;          \\node [ style = none ] ( 7 ) at ( 0 , -1 ) { } ;          \\node [ style = none ] ( 8) at ( 0 , 1.25 ) { } ;          \\node [ style = none ] ( 9 ) at ( 0.25 , 0.25 ) { } ;          \\node [ style = none ] ( 10 ) at ( 0.25 , -0 ) { } ;          \\node [ style = none ] ( 11 ) at ( 0 , -1 ) { } ;          \\node [ style = circ ] ( 12 ) at ( 1 , 0.75 ) { } ;          \\node [ style = circ ] ( 13 ) at ( 1 , -0.5 ) { } ;          \\node [ style = none ] ( 14 ) at ( 2 , 0.75 ) { } ;          \\node [ style = none ] ( 15 ) at ( 2 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 2 ) ;          \\draw[line width=2pt ] ( 1.center ) to ( 3 ) ;          \\draw[line width=2pt ] ( 12 ) to ( 14.center ) ;          \\draw[line width=2pt ] ( 13 ) to ( 15.center ) ;          \\draw[line width=2pt ] [ in=180 , out=60 , looseness=1.20 ] ( 2 ) to ( 4.center ) ;          \\draw[line width=2pt ] [ in=180 , out=-60 , looseness=1.20 ] ( 2 ) to ( 5.center ) ;          \\draw[line width=2pt ] [ in=180 , out=60 , looseness=1.20 ] ( 3 ) to ( 6.center ) ;          \\draw[line width=2pt ] [ in=180 , out=-60 , looseness=1.20 ] ( 3 ) to ( 7.center ) ;          \\draw[line width=2pt ] [ in=120 , out=0 , looseness=1.20 ] ( 8.center ) to ( 12 ) ;          \\draw[line width=2pt ] [ in=-120 , out=0 , looseness=1.20 ] ( 9.center ) to ( 12 ) ;          \\draw[line width=2pt ] [ in=120 , out=0 , looseness=1.20 ] ( 10.center ) to ( 13 ) ;          \\draw[line width=2pt ] [ in=-120 , out=0 , looseness=1.20 ] ( 11.center ) to ( 13 ) ;          \\draw[line width=2pt ] ( 4.center ) to ( 8.center ) ;          \\draw[line width=2pt ] [ in=150 , out=-30 , looseness=1.00 ] ( 5.center ) to ( 10.center ) ;          \\draw[line width=2pt ] [ in=-150 , out=30 , looseness=1.00 ] ( 6.center ) to ( 9.center ) ;          \\draw[line width=2pt ] ( 7.center ) to ( 11.center ) ;      \\end{pgfonlayer } \\end{tikzpicture }      }    \\end{aligned } } = {    \\begin{aligned }      \\resizebox{.10\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = circ ] ( 0 ) at ( -0.5 , -0 ) { } ;          \\node [ style = none ] ( 1 ) at ( -1.5 , -0.5 ) { } ;          \\node [ style = none ] ( 2 ) at ( -1.5 , 0.5 ) { } ;          \\node [ style = circ ] ( 3 ) at ( 0.5 , -0 ) { } ;          \\node [ style = none ] ( 4 ) at ( 1.5 , -0.5 ) { } ;          \\node [ style = none ] ( 5 ) at ( 1.5 , 0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] [ in=0 , out=-120 , looseness=1.20 ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=0 , out=120 , looseness=1.20 ] ( 0.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=180 , out=-60 , looseness=1.20 ] ( 3 ) to ( 4.center ) ;          \\draw[line width=2pt ] [ in=180 , out=60 , looseness=1.20 ] ( 3 ) to ( 5.center ) ;          \\draw[line width=2pt ] ( 0 ) to ( 3 ) ;      \\end{pgfonlayer } \\end{tikzpicture }      }    \\end{aligned } } & { \\begin{aligned }      \\resizebox{.08\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = circ ] ( 0 ) at ( 1 , -0 ) { } ;          \\node [ style = circ ] ( 1 ) at ( 0.125 , -0 ) { } ;          \\node [ style = none ] ( 2 ) at ( -1 , 0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( -1 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=0 , out=120 , looseness=1.20 ] ( 1.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=0 , out=-120 , looseness=1.20 ] ( 1.center ) to ( 3.center ) ;      \\end{pgfonlayer }        \\end{tikzpicture } } \\end{aligned } } =      { \\begin{aligned }      \\resizebox{.08\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( e ) at ( 1 , -0 ) { } ;          \\node [ style = circ ] ( 0 ) at ( 0.125 , 0.5 ) { } ;          \\node [ style = circ ] ( 1 ) at ( 0.125 , -0.5 ) { } ;          \\node [ style = none ] ( 2 ) at ( -1 , 0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( -1 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 2.center ) to ( 0.center ) ;          \\draw[line width=2pt ] ( 3.center ) to ( 1.center ) ;      \\end{pgfonlayer }        \\end{tikzpicture } } \\end{aligned } } & { \\begin{aligned }      \\resizebox{.08\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = circ ] ( 0 ) at ( -1 , -0 ) { } ;          \\node [ style = circ ] ( 1 ) at ( -0.125 , -0 ) { } ;          \\node [ style = none ] ( 2 ) at ( 1 , 0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( 1 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 1.center ) ;          \\draw[line width=2pt ] [ in=180 , out=60 , looseness=1.20 ] ( 1.center ) to ( 2.center ) ;          \\draw[line width=2pt ] [ in=180 , out=-60 , looseness=1.20 ] ( 1.center ) to ( 3.center ) ;      \\end{pgfonlayer }        \\end{tikzpicture } } \\end{aligned } } = { \\begin{aligned }      \\resizebox{.08\\textwidth } { ! } { \\begin{tikzpicture }      \\begin{pgfonlayer}{nodelayer }          \\node [ style = none ] ( e ) at ( -1 , -0 ) { } ;          \\node [ style = circ ] ( 0 ) at ( -0.125 , 0.5 ) { } ;          \\node [ style = circ ] ( 1 ) at ( -0.125 , -0.5 ) { } ;          \\node [ style = none ] ( 2 ) at ( 1 , 0.5 ) { } ;          \\node [ style = none ] ( 3 ) at ( 1 , -0.5 ) { } ;      \\end{pgfonlayer }      \\begin{pgfonlayer}{edgelayer }          \\draw[line width=2pt ] ( 0.center ) to ( 2.center ) ;          \\draw[line width=2pt ] ( 1.center ) to ( 3.center ) ;      \\end{pgfonlayer }        \\end{tikzpicture } } \\end{aligned } } \\\\      & \\textrm{(the bimonoid laws ) } &    } \\ ] ]    bimonoids can be understood as dual to frobenius monoids : @xmath135 is the prop for bicommutative bimonoids .",
    "this fact goes back to lack @xcite .",
    "wadsley and woods provide an alternative proof , via the fact that the category of matrices over a rig @xmath136 is the prop for bicommutative bimonoids equipped with an action of the rig @xmath136 ( * ? ? ?",
    "* theorem 5 ) .",
    "choosing the rig of booleans , this also implies that @xmath137 , the prop equivalent to the category of finite sets and relations , is the prop for special bicommutative bimonoids .",
    "the techniques of this paper can be co - opted to provide an alternate proof of this fact .",
    "to sketch : lack has already shown , using the distributive law arising from pullbacks in @xmath66 , that @xmath135 is isomorphic to the prop for bicommutative bimonoids .",
    "we may use this to set up isomorphic coequalizer diagrams in the category @xmath138 to obtain both the prop for special bicommutative bimonoids and the prop @xmath137 .",
    "the isomorphism arises from the observation that taking the jointly monic part of a span is equivalent to iteratively asserting that the span @xmath139 may be replaced by the identity @xmath140 , and that this manifests as the special law .",
    "b.  coecke , e.  paquette , d.  pavlovic , quantum and classical structuralism , in _ semantic techniques for quantum computation _ , eds . i.  mackie and s.  gay , cambridge university press , 2009 , pp.2969 .",
    "http://arxiv.org/abs/0904.1997[arxiv:0904.1997 ] .",
    "k.  doen and z.  petri , syntax for split preorders , _ annals of pure and applied logic _ * 164*(4):443481 , 2013 .",
    "http://doi.org/10.1016/j.apal.2012.10.008[doi:10.1016/j.apal.2012.10.008 ] .",
    "http://arxiv.org/abs/0902.0742[arxiv:0902.0742 ] .",
    "d.  ellerman , an introduction to partition logic , _ logic journal of the interest group in pure and applied logic _ , * 22*(1):94125 , 2014 .",
    "http://doi.org/10.1093/jigpal/jzt036[doi:10.1093/jigpal/jzt036 ] .",
    "available at http://www.ellerman.org / introduction - to - partition - logic/.                f.  w.  lawvere , functorial semantics of algebraic theories and some algebraic problems in the context of functorial semantics of algebraic theories , _ reprints in theory appl .",
    "_ * 5*:1121 .",
    "available at http://www.tac.mta.ca/tac/reprints/articles/5/tr5abs.html .",
    "t.  trimble , multisorted lawvere theories , version april 27 2014 , nlab .",
    "available at http://ncatlab.org/toddtrimble/published/multisorted+lawvere+theories [ http://ncatlab.org/toddtrimble/published/multisorted+lawvere+theories ] ."
  ],
  "abstract_text": [
    "<S> just as binary relations between sets may be understood as jointly monic spans , so too may equivalence relations on the disjoint union of sets be understood as jointly epic cospans . with the ensuing notion of composition inherited from the pushout of cospans , we call these equivalence relations _ corelations_. we define the category of corelations between finite sets and prove that it is equivalent to the prop for extraspecial commutative frobenius monoids . </S>",
    "<S> dually , we show that the category of relations is equivalent to the prop for special commutative bimonoids . throughout , we emphasise how corelations model interconnection . </S>"
  ]
}
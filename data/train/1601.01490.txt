{
  "article_text": [
    "various complex systems are driven by interactions between subsystems via time - stamped discrete events .",
    "for example , in chemical systems , a chemical reaction event changes the number of reagents of particular types in a discrete manner .",
    "stochastic point processes , in particular poisson processes assuming that events occur independently and at a constant rate over time , are a central tool for emulating the dynamics of chemical systems @xcite .",
    "they are also useful in simulating epidemic processes in a population @xcite and many other systems .",
    "consider an event - driven system in which events are generated by poisson processes running in parallel . in chemical reaction systems ,",
    "each poisson process ( possibly with different rates for each process ) is attached to one reaction . in epidemic",
    "processes taking place on human or animal contact networks ( i.e. , graphs ) , each poisson process is assigned to an individual or a link , which may potentially transmit the infection .",
    "the event rate of some of the poisson processes may change with the occurrence of a reaction or infection within the entire system .",
    "the simplest simulation method is to discretise time and then judge whether or not an event occurs in each time window , for individual processes .",
    "this widely used method is sub - optimal because the size of the time window must be sufficiently small to obtain high accuracy , which is computationally expensive @xcite .",
    "the gillespie algorithm is an efficient and statistically exact algorithm for multivariate poisson processes @xcite .",
    "the gillespie algorithm , or particularly the direct method of gillespie @xcite , exploits the fact that a superposition of independent poisson processes is a single poisson process whose event rate is the sum of those of the constituent poisson processes . using this mathematical property , only a single poisson process needs to be emulated in the gillespie algorithm",
    ".    however , for various real - world systems in which multivariate point processes have been applied ( both with and without network structure ) , event sequences are clearly non - poissonian .",
    "in particular , inter - event times typically obey long - tailed distributions , which are inconsistent with the exponential ( i.e. , short - tailed ) distribution that poisson processes produce . examples of long - tailed distributions of inter - event times include earthquake occurrences @xcite , firing of neurons @xcite , social networks and the internet @xcite , financial transactions @xcite , and crimes @xcite .",
    "therefore , multivariate point processes that are not necessarily poissonian have been used in these applications , e.g. , triggered seismicity @xcite , networks of spiking neurons @xcite , epidemic processes @xcite , opinion formation models @xcite , finance @xcite , and criminology @xcite .",
    "these applications call for numerical methods to efficiently and accurately simulate interacting and non - markovian point processes .    a reasonable description of event - sequences in these phenomena requires , to the least , renewal processes , in which inter - event times are independently generated from a given distribution @xcite .",
    "along these lines , one numerical approach is to use the modified next reaction method @xcite , which improves on both the so - called gillespie s first reaction method @xcite and the next reaction method @xcite .",
    "the basic idea behind these methods is to draw the next event time for all processes from predetermined distributions , select the process that has generated the minimum waiting time to the next event , execute the event , and repeat .",
    "however , for non - poissonian renewal processes , it is generally difficult to numerically solve the equations that determine the next event time although these methods call for the generation of only half as many random numbers in comparison to the gillespie algorithm @xcite .",
    "in addition , we can easily halve the number of random variates required in the gillespie algorithm , such that the next reaction methods and the gillespie algorithm demand the same number of random variates ( appendix  a ) . in the following ,",
    "we restrict ourselves to the gillespie algorithm and its variants",
    ".    motivated by applications to chemical reactions , many extensions of the gillespie algorithm in the case of non - poissonian processes assume that the dynamical change in the event rate is exogenously driven in particular functional forms @xcite .",
    "these extensions are not applicable for general renewal processes , because the event rate of a constituent process is a function of the time since the last event of the process , which depends on the process . in other words",
    ", we can not assume a common exogenous drive .",
    "bogu and colleagues extended the gillespie algorithm to be applicable for general renewal processes @xcite ( also see @xcite for further developments ) .",
    "however , the algorithm has practical limitations .",
    "first , it is not accurate when the number of ongoing renewal processes is small @xcite .",
    "this can result in a considerable amount of approximation error in the beginning or final stages of the dynamics of epidemic or opinion formation models , for example , in which only a small number of processes is active , even in a large population @xcite .",
    "second , it is necessary to recalculate the instantaneous event rate of each process following the occurrence of every event in the entire population , a procedure that can be computationally expensive .",
    "in the present study , we propose an innovative gillespie algorithm , the laplace gillespie algorithm , which is applicable to non - poissonian renewal processes .",
    "it exploits the mathematical properties of the laplace transform , is accurate for an arbitrary number of ongoing renewal processes , and runs faster than the previous algorithm @xcite .",
    "this article is organised as follows . in section  [ sec : gillespie algorithm ] , we review the original gillespie algorithm for poisson processes . in section  [ sec : nmga ]",
    ", we review the previous extension of the gillespie algorithm to general renewal processes @xcite . in section  [ sec : lga ] , we introduce the laplace gillespie algorithm , together with theoretical underpinnings and examples . in section  [ sec : numerical ] , we numerically compare the previous algorithm @xcite and the laplace gillespie algorithm . in section  [",
    "sub : positive correlation ] , we introduce a method to generate event sequences with positive correlation in inter - event times , as typically observed in human behaviour and natural phenomena @xcite . in section  [ sec :",
    "epidemic ] , we demonstrate our methods by performing exact simulations of an epidemic process in which inter - event times follow a power - law distribution . in section  [ sec : discussion ] , we discuss the results , including limitations of the proposed algorithm .",
    "the codes used in our numerical simulations are available in the supplementary materials .",
    "the original gillespie algorithm @xcite assumes @xmath0 independent poisson processes with a rate of @xmath1 ( @xmath2 ) running in parallel . because of the independence of the different poisson processes , the superposition of the @xmath0 processes is a poisson process with rate @xmath3 .",
    "therefore , we first draw @xmath4 , an increment in time to the next event of the superposed poisson process , from the exponential distribution given by @xmath5 because the survival function ( i.e. , the probability that a random variable is larger than a certain value ) of @xmath6 is given by @xmath7 , we obtain @xmath8 , where @xmath9 is a random variate drawn from the uniform density on the interval @xmath10 $ ] .",
    "then , we determine the process @xmath11 that has produced the event with probability @xmath12 finally , we advance the time by @xmath4 and repeat the procedure . following the occurrence of an event",
    ", any @xmath1 is permitted to change .",
    "now consider @xmath0 renewal processes running in parallel , and denote by @xmath13 the probability density function of inter - event times for the @xmath11th process ( @xmath2 ) .",
    "if the process is poissonian , we obtain @xmath14 .",
    "for such a population of general renewal processes , bogu and colleagues proposed an extension of the gillespie algorithm , which they called the non - markovian gillespie algorithm ( nmga ) @xcite .    to begin with",
    ", we explain their exact gillespie algorithm for general renewal processes , which is the basis of the nmga .",
    "a short derivation of the exact gillespie algorithm is given in appendix  b. we denote by @xmath15 the time elapsed since the last event of the @xmath11th process , and by @xmath16 the survival function of the @xmath11th process ( i.e. , the probability that the inter - event time is larger than @xmath15 ) .",
    "we also set @xmath17 which is in fact equal to the probability that no process generates an event for time @xmath4 ( appendix  b ) .",
    "the exact gillespie algorithm for general renewal processes is given as follows :    1 .",
    "initialise @xmath18 ( @xmath19 ) for all @xmath20 ( for example , @xmath21 ) .",
    "2 .   draw the time until the next event , @xmath4 , by solving @xmath22 , where @xmath9 is a random variate uniformly distributed over @xmath10 $ ] .",
    "3 .   select the process @xmath11 that has generated the event with probability @xmath23 where @xmath24 is equal to the instantaneous rate of the @xmath11th process .",
    "4 .   update the time since the last event , @xmath18 , to @xmath25 ( @xmath26 ) and set @xmath27 .",
    "5 .   repeat steps 24 .",
    "although this algorithm is statistically exact , step 2 can be time - consuming @xcite . to improve performance , bogu and colleagues",
    "introduced the nmga .",
    "the nmga is an approximation to the aforementioned algorithm and exact as @xmath28 .",
    "when @xmath4 is small , as is the case when @xmath0 is large , eq .",
    "is approximated as @xmath29\\notag\\\\ % = & \\exp \\left [ -\\sum_{j=1}^n \\ln\\frac{\\psi_j(t_j)}{\\psi_j(t_j ) - \\psi_j(t_j)\\delta t + o(\\delta t^2)}\\right]\\notag\\\\ % \\approx & \\exp \\left[-\\delta t \\left(\\sum_{j=1}^n \\lambda_j(t_j)\\right)\\right].\\end{aligned}\\ ] ] with this approximation , the time until the next event is determined by @xmath30 @xmath31 @xmath32 $ ] @xmath33 , i.e. , @xmath34 .",
    "the process that generates the event is determined by setting @xmath35 in eq .  .",
    "for a poisson process , we set @xmath36 to recover the original gillespie algorithm ( eqs .   and ) .",
    "in the nmga , we update the instantaneous event rates for all the processes , @xmath37 @xmath38 , and their sum following the occurrence of each event .",
    "this is because @xmath18 ( @xmath19 ) is updated following an event .",
    "this procedure is time - consuming when @xmath0 is large ; we have to update @xmath37 even if the probability density of the inter - event times for the @xmath20th process is not perturbed by an event that has occurred elsewhere .    to construct an efficient gillespie algorithm for non - markovian point processes , we start by considering the following renewal process , which we call the event - modulated poisson process . when an event occurs , we first draw the rate of the poisson process , denoted by @xmath39 , according to a fixed probability density function @xmath40 .",
    "then , we draw the time until the next event according to the poisson process with rate @xmath39 . upon the occurrence of the next event , we renew the rate @xmath39 by redrawing it from @xmath40 .",
    "we then repeat these steps .",
    "the event - modulated poisson process is a mixture of poisson processes of different rates .",
    "it is a non - poissonian renewal process in general .",
    "it is slightly different from a mixed poisson process , in which a single rate is initially drawn from a random ensemble and used throughout a realisation @xcite .",
    "it is also different from a doubly stochastic poisson process ( also known as a cox process ) , in which the rate of the poisson process is a stochastic process @xcite , or its subclass called the markov - modulated poisson process , in which the event rate switches in time according to a markov process @xcite . in these processes ,",
    "the dynamics of the event rate are independent of the occurrence of events .",
    "in contrast , for event - modulated poisson processes , the event rate changes upon the occurrence of events .    an event - modulated poisson process is a poisson process when conditioned on the current value of @xmath39 .",
    "therefore , when we simulate @xmath0 event - modulated poisson processes , they are independent of each other and of the past event sequences , if we are given the instantaneous rate of the @xmath11th process , denoted by @xmath1 , for all @xmath11 ( @xmath2 ) .",
    "this property enables us to construct a gillespie algorithm .",
    "by engineering @xmath40 , we can emulate a range of renewal processes with different distributions of inter - event times . the new gillespie algorithm , which we call the laplace gillespie algorithm ( the reason for this name will be made clear in section  [ sub : theory ] , where we discuss the algorithm s theoretical basis in the laplace transform ) , is defined as the gillespie algorithm for event - modulated poisson processes .",
    "we denote the density of the event rate for the @xmath11th process by @xmath41 .",
    "the laplace gillespie algorithm proceeds as follows :    1 .",
    "initialise each of the @xmath0 processes by drawing the rate @xmath1 ( @xmath2 ) according to its density function @xmath41 .",
    "2 .   draw the time until the next event @xmath42 , where @xmath9 is a random variate uniformly distributed over @xmath10 $ ] .",
    "3 .   select the process @xmath11 that has generated the event with probability @xmath43 .",
    "4 .   draw a new rate @xmath1 according to @xmath41 . if there are processes @xmath20 ( @xmath19 ) for which the statistics of inter - event times have changed following the occurrence of the event generated in steps 2 and 3 ( e.g. , a decrease in the rate of being infected owing to the recovery of an infected neighbour ) , modify @xmath44 accordingly and draw a new rate @xmath45 from the modified @xmath44 .",
    "the event rates of the remaining processes remain unchanged .",
    "repeat steps 24 .",
    "an event - modulated poisson process is a renewal process .",
    "the renewal process is fully characterised by the probability density of inter - event times , @xmath46 . for an event - modulated poisson process with probability density of the event rate @xmath40",
    ", we obtain @xmath47 integration of both sides of eq .",
    "yields the survival function of the inter - event times as follows : @xmath48 equation   indicates that @xmath49 is the laplace transform of @xmath40 .",
    "therefore , the necessary and sufficient condition for a renewal process to be simulated by the laplace gillespie algorithm is that @xmath49 is the laplace transform of a probability density function of a random variable taking non - negative values .",
    "although this statement can be made more rigorous if we replace @xmath50 by the probability distribution function , we will use the probability density representation for simplicity .",
    "a necessary and sufficient condition for the existence of @xmath40 is that @xmath49 is completely monotone and @xmath51 .",
    "the complete monotonicity is defined by @xmath52 condition @xmath51 is satisfied by any survival function . with @xmath53 ,",
    ".   reads @xmath54 , which all survival functions satisfy . with @xmath55 , eq",
    ".   reads @xmath56 , which is also always satisfied",
    ". however , eq .   with @xmath57 imposes nontrivial conditions .      in this section , we give examples of distributions of inter - event times @xmath46 for which the laplace gillespie algorithm can be used .",
    "these examples are summarised in table  [ tab : examples ] .",
    "* exponential distribution + a poisson process with rate @xmath58 , i.e. , @xmath59 , is trivially generated by @xmath60 , where @xmath61 is the delta function .",
    "* power - law distribution derived from a gamma distribution of @xmath39 + consider the case in which @xmath40 is the gamma distribution given by @xmath62 where @xmath63 is the gamma function , @xmath64 is the shape parameter , and @xmath65 is the scale parameter . by combining eqs .   and , we obtain @xmath66 the probability density of inter - event times is given by the following power - law distribution : @xmath67 when @xmath68 , @xmath40 is the exponential distribution , and @xmath69 @xcite .",
    "the same mathematical relationship connecting the gamma distribution and a power - law distribution has been used in superstatistics in statistical mechanics @xcite and in a reinforcement learning model for generating discount rates that decay with time according to a power law @xcite . * power - law distribution with an exponential tail derived from a gamma distribution of @xmath39 + consider a shifted gamma distribution @xcite given by @xmath70 where @xmath58 is a constant . by combining eqs .   and",
    ", we obtain @xmath71 by differentiating eq .",
    ", we obtain a power - law distribution with an exponential tail given by @xmath72 * power - law distribution derived from a uniform distribution of @xmath39 + assume that @xmath40 is a uniform density on @xmath73 $ ] @xcite .",
    "we obtain @xmath74 and @xmath75 + now suppose that @xmath76 . if @xmath77 , we obtain @xmath78 as @xmath79 , a power - law distribution with an exponential cutoff .",
    "if @xmath80 , we obtain @xmath81 as @xmath79 .",
    "* power - law distribution derived from a power - law distribution of @xmath39 + consider the distribution @xmath82 where @xmath83 and @xmath84 @xcite .",
    "we obtain @xmath85 where @xmath86 is the incomplete gamma function , and @xmath87 as @xmath79 , we obtain @xmath88 .",
    "* weibull distribution + the weibull distribution is defined by @xmath89 which yields @xmath90 the weibull distribution with @xmath68 is an exponential distribution .",
    "the weibull distribution has a longer and shorter tail than the exponential distribution when @xmath91 and @xmath92 , respectively .",
    "the weibull distribution can be expressed as the laplace transform of a @xmath40 if and only if @xmath93 @xcite .",
    "the distribution when @xmath94 is the so - called stable distribution of order @xmath95 , for which we obtain @xcite @xmath96 + for other values of @xmath64 ( i.e. , @xmath97 or @xmath98 ) , the explicit form of @xmath40 is complicated @xcite such that the use of the laplace gillespie algorithm is impractical . for these @xmath64 values ,",
    "a mixture of a small number of exponential distributions may resemble the weibull distribution @xcite , such that we may be able to use @xmath40 with point masses at some discrete values of @xmath39 to approximate the weibull distribution of inter - event times .",
    "* gamma distribution + when inter - event times obey the gamma distribution , i.e. , @xmath99 @xmath49 can be expressed as the laplace transform of a probability density function @xmath40 if and only if @xmath93 @xcite .",
    "we obtain @xcite @xmath100 * mittag - leffler distribution + consider the distribution of inter - event times defined in terms of the survival function given by @xmath101 where @xmath102 is the so - called mittag - leffler function .",
    "when @xmath103 , @xmath49 is completely monotone , and we obtain @xcite @xmath104 when @xmath105 , eqs .   and imply that @xmath106 , yielding a poisson process .",
    "when @xmath103 , @xmath49 is long - tailed with the following asymptotics @xcite : @xmath107 or equivalently , @xmath108 therefore , this class of @xmath46 produces long - tailed distributions of inter - event times with a power - law exponent lying between one and two .",
    "a special case occurs when @xmath109 , in which case @xmath110 $ ] , where @xmath111 is the error function . *",
    "integral of a valid survival function + the function given by @xmath112 is well - defined if and only if @xmath113 , i.e. , the mean inter - event time with respect to density @xmath46 is finite .",
    "assume that the renewal process generated by @xmath46 permits use of the laplace gillespie algorithm . because @xmath114 ( @xmath115 ) , @xmath116/\\int_0^{\\infty}\\psi(\\tau^{\\prime}){\\rm d}\\tau^{\\prime}$ ] ( @xmath117 ) , and @xmath49 is completely monotone , it follows that @xmath118 is completely monotone .",
    "in addition , eq .   implies that @xmath119 .",
    "therefore , the renewal process with survival function @xmath118 can also be simulated by the laplace gillespie algorithm",
    ". + the corresponding probability density of inter - event times is given by @xmath120 in terms of @xmath40 , we obtain @xmath121 and @xmath122 therefore , in each update of the laplace gillespie algorithm with the density of inter - event times given by @xmath123 , the rate of the poisson process @xmath39 should be sampled according to density @xmath124 , where @xmath125 + for example , if @xmath46 is an exponential distribution , then @xmath123 is an exponential distribution of the same mean . if @xmath46 is the power - law distribution given by eq .  , then @xmath123 is a power - law distribution of the same form , with @xmath64 replaced by @xmath126 . *",
    "product of valid survival functions + the product of two completely monotone functions , @xmath127 and @xmath128 , is completely monotone @xcite .",
    "in addition , @xmath129 if @xmath130",
    ". therefore , the survival function @xmath131 admits use of the laplace gillespie algorithm if @xmath127 and @xmath128 do as well .",
    "the probability density of the event rate will be the convolution of @xmath132 and @xmath133 , where @xmath134 ( @xmath135 ) . *",
    "numerical laplace transform + given an arbitrary @xmath40 , we can in principle carry out a numerical laplace transform to derive @xmath49 .",
    "we then obtain a valid @xmath46 by numerically differentiating @xmath49 .",
    "we are often interested in informing multivariate point processes by empirical data of event sequences .",
    "a standard numerical approach is to emulate the dynamics ( e.g. , epidemic processes ) on top of empirical event sequences , i.e. , use empirically observed events having time stamps to induce , for example , infection events @xcite .",
    "there exists a gillespie algorithm to run dynamical processes on such empirical temporal networks @xcite .",
    "another approach is to estimate @xmath46 from empirical data and then use a variant of the gillespie algorithm ( e.g. , the nmga or laplace gillespie algorithm ) to simulate stochastic point processes ( e.g. , epidemic processes ) .",
    "the laplace gillespie algorithm requires the survival function , @xmath49 , to be completely monotone . under this condition",
    ", we may be able to compute the inverse laplace transform to obtain @xmath40 at a reasonable computational cost @xcite .",
    "however , because it is likely that an empirical @xmath49 is not completely monotone , we propose two alternative methods to estimate @xmath40 from empirical data .",
    "the first method is to fit a completely monotone survival function of inter - event times , such as eq .  , to given data .",
    "the second method is to estimate a finite mixture of exponential distributions of different means to approximate the empirical @xmath46 or @xmath49 .",
    "likelihood or other cost - function methods are available for performing this estimation @xcite .",
    "if the empirical @xmath49 is completely monotone , the approximation error is guaranteed to decay inversely proportional to the number of constituent distributions @xcite .",
    "for both of these methods , we should be mindful of the bias in the estimation caused by a finite time window of observation @xcite .",
    "when we begin to run @xmath0 processes , one approach is to initially draw the inter - event time for each process from @xmath46 .",
    "this initial condition defines the so - called ordinary renewal process @xcite .",
    "an alternative model , called the equilibrium renewal process , assumes that the process has begun at time @xmath136 , such that the first inter - event time for each process , drawn at @xmath137 , uses the equilibrium distribution of waiting times to the next event , rather than @xmath46 ( i.e. , the distribution of inter - event times ) @xcite .",
    "in fact , the equilibrium distribution of waiting times to the next event coincides with @xmath123 given by eq .",
    "@xcite . to simulate the equilibrium renewal process , we start by drawing the rates of the poisson processes according to @xmath124 given by eq .  .",
    "afterwards , we draw the event rates according to @xmath40 .",
    "in this section , we compare the performances of the nmga and the laplace gillespie algorithm .",
    "we use the power - law distribution of inter - event times given by eq .  .",
    "because @xmath65 only controls the scale of inter - event times , we set @xmath138 without loss of generality . to generate gamma - distributed random variates",
    ", we use a well - known algorithm @xcite and adapt an open source code @xcite for our purposes .",
    "we generate @xmath139 processes by eq .   with @xmath68 ,",
    "another @xmath139 processes with @xmath140 , and another @xmath141 processes with @xmath142 .",
    "we continue the simulation until one of the @xmath0 processes generates @xmath143 inter - event times .",
    "we employ the ordinary renewal process such that the initial inter - event time for each process is drawn from @xmath46 .",
    "the survival function for one of the processes with @xmath68 , one of those with @xmath140 , and one of those with @xmath142 is shown by the solid curves for the nmga and the laplace gillespie algorithm in figs .",
    "[ fig : survival](a ) and [ fig : survival](b ) , respectively , for @xmath144 . the theoretical survival function , eq .  ,",
    "is plotted by the dashed curves .",
    "the results obtained from the laplace gillespie algorithm ( fig .  [ fig : survival](b ) ) are more accurate than those obtained from the nmga .",
    "this is because the nmga is exact only in the limit of @xmath28 , whereas the laplace gillespie algorithm is exact for any @xmath0 . when @xmath145 , the nmga is sufficiently accurate ( fig .",
    "[ fig : survival](c ) ) , as is the laplace gillespie algorithm ( fig .",
    "[ fig : survival](d ) ) . the results shown in figs .",
    "[ fig : survival](a ) and [ fig : survival](c ) are consistent with the numerical results obtained in ref .",
    "@xcite .",
    "the nmga may require a lot of time in updating the instantaneous event rates for all processes every time an event occurs in one of the @xmath0 processes .",
    "the laplace gillespie algorithm avoids this rate recalculation whereas it may be costly to calculate the gamma variates each time an event occurs .",
    "we numerically compare the computation times for the two algorithms by varying @xmath0 .",
    "the other parameters remain the same as those used in fig .",
    "[ fig : survival](a)(d ) . for the laplace gillespie algorithm",
    ", we use a binary tree data structure to store and update @xmath1 ( @xmath2 ) to accelerate the selection of the @xmath11 value with probability @xmath146 upon the occurrence of each event @xcite . in short ,",
    "each @xmath1 occupies a leaf of the tree , and each non - leaf node stores the sum of its left child and right child .",
    "this data structure is useful when only a small number of @xmath1 are changed following the occurrence of each event @xcite .",
    "this is not the case for the nmga , for which all the @xmath0 instantaneous event rates must be updated upon each event .",
    "therefore , for the nmga , we use a simple linear search , which is computationally less expensive than updating a binary tree every time an event occurs .",
    "we use codes written in c++ , compiled with a standard g++ compiler without an optimisation option on a mac book air with 1.7 ghz intel core i7 and 8 gb 1600 mhz ddr3 .",
    "the computation time in seconds plotted as a function of @xmath0 in fig .",
    "[ fig : survival](e ) indicates that the laplace gillespie algorithm runs substantially faster than the nmga as @xmath0 increases .",
    "both the nmga and the laplace gillespie algorithm require two uniformly distributed random variates per event , as does the standard gillespie algorithm . in addition , for each generated event , the nmga demands @xmath147 time to search for the process to fire and update the instantaneous event rates for all processes .",
    "in contrast , the laplace gillespie algorithm demands @xmath148 time per event on average , where @xmath149 is the typical number of processes that are affected by the firing of the @xmath11th process .",
    "the search for what process to fire requires @xmath150 time , given the binary tree data structure @xcite .",
    "the updating of @xmath45 due to the event of the @xmath11th process requires @xmath151 time , including the generation of @xmath149 gamma - distributed random variates .",
    "the updating of the binary tree requires @xmath152 time because it consumes @xmath150 time for each updated @xmath45 .",
    "because @xmath149 is usually much smaller than @xmath0 in practice @xcite , the laplace gillespie algorithm is expected to run faster than the nmga , which is consistent with the numerical results shown in fig .",
    "[ fig : survival](e ) .",
    "additionally , the laplace gillespie algorithm outperforms the nmga in the sense that the laplace gillespie algorithm is exact for any @xmath0 , whereas the nmga is not . on the other hand , for the laplace gillespie algorithm ,",
    "the form of @xmath46 is limited , whereas the nmga allows for any @xmath46 to be used .",
    "we have considered renewal processes , i.e. , stationary point processes without correlation between inter - event times . however , inter - event times are positively correlated for human activity and earthquakes @xcite .",
    "the laplace gillespie algorithm provides a method for generating point processes with positive correlation , without changing @xmath46 . to generate such event sequences , we redraw a new event rate for the poisson process , @xmath1 , with probability @xmath153 ( @xmath154 ) , when the @xmath11th process has generated an event . with probability @xmath155",
    ", we continue to use the same value of @xmath1 until the @xmath11th process generates another event .",
    "we call this algorithm the correlated laplace gillespie algorithm .",
    "the standard laplace gillespie algorithm is recovered when @xmath156 .",
    "the correlation between inter - event times grows as @xmath155 increases .",
    "although the same @xmath1 value may be used for generating consecutive inter - event times , the corresponding inter - event times are different because they are generated from a poisson process .",
    "the computation time for the correlated laplace gillespie algorithm decreases as @xmath155 increases because the number of times that @xmath1 is redrawn is proportional to @xmath153 .    in a continuous - time markov process with a state - dependent hopping rate ,",
    "the inter - event time defined as the time between two consecutive hops , regardless of the state , is generally correlated across inter - event times @xcite .",
    "the correlated laplace gillespie algorithm can be interpreted as a special case of this such that the state is continuous , the process hops back to the current state with probability @xmath155 , and it hops to any other state with the probability proportional to @xmath157 . the correlated laplace gillespie algorithm can be alternatively built on top of a finite - state @xcite or an infinite - state @xcite markov process with a general transition probability between states .",
    "this variant of the correlated laplace gillespie algorithm is similar to a two - state cascading poisson process in which the two states correspond to different event rates @xcite .",
    "two remarks are now in order .",
    "first , @xmath46 is independent of the @xmath155 value .",
    "this is because the stationary density of the corresponding continuous - time markov process in the @xmath39-space is equal to @xmath40 irrespective of the @xmath155 value .",
    "of course , the distribution of @xmath158 conditioned on the previous inter - event time , @xmath159 , is different from @xmath46 and depends on @xmath159 in general .",
    "second , the correlated laplace gillespie algorithm can not be used to generate correlated event sequences when @xmath46 is the exponential distribution . in this case",
    ", the event rate @xmath39 must be kept constant over time and therefore can not be modulated in a temporally correlated manner .",
    "we measure the so - called memory coefficient @xcite to quantify the amount of correlation in a sequence of inter - event times generated by the correlated laplace gillespie algorithm .",
    "the memory coefficient for a sequence of inter - event times , @xmath160 , where @xmath161 is the number of inter - event times , is defined by @xmath162 where @xmath163 and @xmath164 .    for the power - law distribution of inter - event times given by eq .   with @xmath138",
    ", we generate a sequence of @xmath165 inter - event times and calculate @xmath166 .",
    "the mean and standard deviation of @xmath166 , calculated on the basis of @xmath167 sequences , are plotted for @xmath68 and @xmath142 in figs .",
    "[ fig : correlated](a ) and [ fig : correlated](b ) , respectively . for both @xmath64 values , @xmath166 monotonically increases with @xmath155 , and a range of @xmath166 values between 0 and @xmath168 is produced . in empirical data",
    ", @xmath166 lies between 0 and 0.1 for human activity , and between 0.1 and 0.25 for natural phenomena @xcite .",
    "these ranges of @xmath166 are produced using approximately @xmath169 and @xmath170 , respectively .",
    "previous numerical efforts suggested that the dynamics of epidemic processes in well - mixed populations or networks were altered if contact events were generated by non - poissonian renewal processes @xcite .",
    "the nmga and the laplace gillespie algorithm can be used for implementing such models of epidemic processes . to demonstrate the use of the laplace gillespie algorithm",
    ", we simulate a node - centric susceptible - infected - recovered ( sir ) epidemic process model , which is similar to previous models .",
    "consider a static network composed of @xmath0 nodes . at any point in time",
    ", each node assumes one of the three states : susceptible , infected , or recovered .",
    "an infected node @xmath11 transmits the disease to a susceptible node @xmath20 upon the activation of link @xmath171 . to activate links",
    ", we initially assigned to each node @xmath11 ( @xmath2 ) an independent and identical point process whose probability density of inter - event times is given by @xmath46 .",
    "when an event occurs at node @xmath11 , we select a neighbour of @xmath11 , denoted by @xmath20 , with the equal probability and activate link @xmath171 .",
    "if either @xmath11 or @xmath20 is infected and the other is susceptible , the disease is transmitted such that the susceptible node becomes infected .",
    "an infected node transits to the recovered state according to a poisson process of rate @xmath172 . a recovered node neither infects nor is infected by other nodes .    the mean time to node activation , which enables infection ,",
    "is given by @xmath173 .",
    "the mean time for an infected node to recover is equal to @xmath174 .",
    "we define the effective infection rate by @xmath175 @xcite",
    ". we control @xmath176 by changing @xmath172 for a given @xmath46 .",
    "this definition is justified because multiplying @xmath177 and @xmath174 by the same factor only changes the time scale of the dynamics .",
    "we assume an equilibrium point process , i.e. , we start simulations from the equilibrium state .",
    "this is equivalent to drawing the first event time for each node from the waiting - time distribution , @xmath123 , rather than from @xmath46 , and drawing subsequent event times from @xmath46 .",
    "the population structure is assumed to be either well - mixed ( i.e. , complete graph ) or the regular random graph in which all nodes have degree five and all links are randomly formed . in both cases , we set @xmath178 .",
    "each simulation starts from the same initial condition , in which a particular node , which is the same one in all simulations , is infected and all the other @xmath179 nodes are susceptible .",
    "we measure the number of recovered nodes at the end of the simulation normalised by @xmath0 , called the final size , averaged over @xmath180 simulations .",
    "we consider four renewal processes for node activation : the exponential distribution , corresponding to a poisson process , and three power - law distributions given by eq .   with @xmath140 , @xmath138 , and @xmath156 , 0.2 , and 0.9 .    the final size for the well - mixed population and the regular random graph is shown in figs .  [ fig : epidemic](a ) and [ fig : epidemic](b ) ,",
    "respectively . for both population structures , and across the entire range of the effective infection rate , @xmath176 ,",
    "the final size is larger when @xmath46 is the power - law than when @xmath46 is the exponential distribution .",
    "consistent with this result , the epidemic threshold , i.e. , the value of @xmath176 at which the final size becomes positive , is smaller for the power - law @xmath46 than for the exponential @xmath46 .    the final size is larger with positive correlation of inter - event times ( @xmath181 ) than with no correlation ( @xmath156 ) .",
    "results for @xmath182 are almost identical to those for @xmath156 . because realistic values of the memory coefficient , @xmath166 , for human activity are produced by @xmath169 ( section  [ sub : positive correlation ] ) , we conclude that a realistic amount of positive correlation in inter - event times does not affect the final size .",
    "we provided a generalisation of the gillespie algorithm for non - poissonian renewal processes , which we call the laplace gillespie algorithm .",
    "our algorithm is exact for any number of processes running in parallel and is faster than the nmga @xcite .",
    "although it is only applicable to renewal processes whose survival function is completely monotone , it applies to several renewal processes of interest .",
    "we also proposed a method to simulate non - renewal point processes with tunable positive correlation between inter - event times .",
    "previous studies numerically explored poissonian explanations of long - tailed distributions of inter - event times .",
    "examples include a non - homogeneous poisson process whose event rate switches between two values and is also periodically modulated @xcite .",
    "another example is a self - exciting hawkes process with an exponential memory kernel @xcite .",
    "we showed that a power - law distribution of inter - event times , eq .",
    ", was generated when the rate of an event - modulated poisson process was drawn from the gamma distribution upon the occurrence of every event .",
    "this observation provides a theoretical underpinning of the fact that non - homogeneous poisson processes and hawkes processes can generate long - tailed distributions of inter - event times .",
    "in other words , switching between different rates is a general mechanism to produce long - tailed distributions of inter - event times . although the present results indicate that in theory we require a mixture of an infinite number of poisson processes of different rates to produce a power - law distribution , in practice a small number of poisson processes may be sufficient .",
    "in fact , a mixture of a small number of exponential distributions is sometimes employed to fit empirical distributions of inter - event times @xcite .",
    "we applied the laplace gillespie algorithm to an epidemic model in well - mixed and networked populations .",
    "the applicability of the laplace gillespie algorithm , as well as of the modified next reaction method @xcite and of the nmga , extends far beyond epidemic modelling .",
    "in fact , these algorithms can simulate systems of earthquakes , spiking neurons , financial time series , crimes , and so on ( see section  [ sec : introduction ] for references ) .",
    "in particular , empirical data corresponding to these applications suggest long - tailed distributions of inter - event times ( section  [ sec : introduction ] ) , thus yielding a cv ( coefficient of variation , i.e. , the standard deviation divided by the mean ) larger than unity , and therefore not excluding the use of the laplace gillespie algorithm .",
    "it is also straightforward to include births and deaths of nodes @xcite and links @xcite of contact networks , or rewiring of links @xcite , as long as these events obey renewal processes or non - renewal point processes with positive correlation as emulated by the correlated laplace gillespie algorithm .",
    "the laplace gillespie algorithm can be employed if and only if the survival function of inter - event times is completely monotone . some convenient conditions for and examples of survival functions that are not completely monotone are provided as follows :    \\(i ) non - monotonicity .",
    "by setting @xmath183 in eq .",
    ", we obtain @xmath184 .",
    "therefore , @xmath46 must monotonically decrease with @xmath158 for the laplace gillespie algorithm to be applicable .",
    "this condition excludes the gamma and weibull distributions with shape parameter @xmath185 , any log - normal distribution , and any pareto distribution , i.e. , @xmath186 where @xmath187 and @xmath188 .",
    "\\(ii ) cv is smaller than unity .",
    "complete monotonicity implies that the cv of @xmath158 is larger than or equal to unity @xcite .",
    "this condition again excludes the gamma and weibull distributions with @xmath185 . in practice",
    ", a cv value less than unity indicates that events occur more regularly than in a poisson process , which would yield @xmath189 .",
    "therefore , renewal processes producing relatively periodic event sequences are also excluded .    in epidemiology",
    ", evidence suggests that empirical recovery times are less dispersed than the exponential distribution , implying the cv value less than unity .",
    "therefore , a gamma distribution with scale parameter @xmath185 or even a delta distribution is often employed alternatively .",
    "these distributions can not be simulated by our algorithm .",
    "\\(iii ) higher - order conditions . even when @xmath190 and the cv is large , @xmath49 may not be completely monotone",
    ". for example , the one - sided cauchy distribution defined by @xmath191 $ ] yields @xmath192 $ ] , whose sign depends on the value of @xmath158 .",
    "empirical evidence of online correspondences of humans suggests that , except for very small @xmath158 values , @xmath158 obeys a power - law distribution for small @xmath158 and an exponential distribution for large @xmath158 @xcite .",
    "such a @xmath46 monotonically decreases with @xmath158 , verifying that @xmath190 .",
    "however , the sign of @xmath193 depends on the @xmath158 value , such that the corresponding survival function is not completely monotone .",
    "each step of the gillespie algorithm usually requires two random variates , @xmath194 and @xmath195 , uniformly distributed on @xmath10 $ ] , one to draw the time increment via @xmath196 and the other to select the process @xmath11 that fires on the basis of eq .  .",
    "to eliminate one random variate , we first select @xmath11 using random variate @xmath195 . independently of whether we use a binary or a linear search , we end up identifying the unique @xmath11 value that satisfies @xmath197 .",
    "once @xmath11 is determined , we set @xmath198 , which is in fact uniformly distributed on @xmath10 $ ] .",
    "therefore , we do not have to draw @xmath194 using a random number generator .",
    "this mathematical trick is similar to the one employed in the next reaction methods @xcite .",
    "consider @xmath0 renewal processes running in parallel . if the @xmath11th process is running in isolation , the waiting time @xmath158 until the next event is distributed according to @xmath199 where @xmath200 is the survival function of the @xmath11th process given by eq .  .",
    "in fact , the @xmath11th process coexists with the other @xmath179 processes .",
    "we denote by @xmath201 the probability density with which the @xmath11th process , but not the other @xmath179 processes , generates the next event in the set of @xmath0 processes after time @xmath4 , given the time since the previous event for each process , @xmath202 , i.e. , @xmath203 .",
    "we obtain @xmath204 where @xmath205 is the probability that the time until the next event for the hypothetically isolated @xmath20th process is larger than @xmath4 , conditioned that the last event has occurred time @xmath18 before . using eqs .   and",
    ", we rewrite eq .   as @xmath206 where @xmath30 is given by eq .  .",
    "equation   represents the probability that no process generates an event for time @xmath4 . by equating this quantity to @xmath9 , a random variate over the unit interval",
    ", we can determine @xmath4 , i.e. , the time until the next event in the entire population of the @xmath0 renewal processes . equation   implies that , once @xmath4 is determined , @xmath207 is the instantaneous rate of the @xmath11th process and is proportional to the probability that the @xmath11th process generates this event .",
    "therefore , the exact gillespie algorithm for general renewal processes is produced as given in section  [ sec : nmga ] .",
    "n.m . acknowledges the support provided through jst , crest , and jst , erato , kawarabayashi large graph project .",
    "l.e.c.r . is a charg de recherche of the fonds de la recherche scientifique - fnrs .",
    "r.  gorenflo and f.  mainardi .",
    "fractional calculus : integral and differential equations of fractional order . in a.",
    "carpinteri and f.  mainardi , editors , _ fractals and fractional calculus in continuum mechanics _ , pages 223276 .",
    "springer - verlag , berlin , 1997 .                                                          .",
    "among the @xmath0 processes , @xmath139 processes are simulated with @xmath68 , another @xmath139 processes with @xmath140 , and another @xmath208 @xmath209 processes with @xmath142 .",
    "( a)(d ) survival function of inter - event times for one process with @xmath68 , another with @xmath140 , and another with @xmath142 , from the top to the bottom .",
    "( a ) nmga when @xmath144 .",
    "( b ) laplace gillespie algorithm when @xmath144 .",
    "( c ) nmga when @xmath145 .",
    "( d ) laplace gillespie algorithm when @xmath145 .",
    "( e ) computation time as a function of the number of processes , @xmath0 .",
    ", title=\"fig:\",width=302 ] . among the @xmath0 processes ,",
    "@xmath139 processes are simulated with @xmath68 , another @xmath139 processes with @xmath140 , and another @xmath208 @xmath209 processes with @xmath142 .",
    "( a)(d ) survival function of inter - event times for one process with @xmath68 , another with @xmath140 , and another with @xmath142 , from the top to the bottom .",
    "( a ) nmga when @xmath144 .",
    "( b ) laplace gillespie algorithm when @xmath144 .",
    "( c ) nmga when @xmath145 .",
    "( d ) laplace gillespie algorithm when @xmath145 .",
    "( e ) computation time as a function of the number of processes , @xmath0 .",
    ", title=\"fig:\",width=302 ] . among the @xmath0 processes ,",
    "@xmath139 processes are simulated with @xmath68 , another @xmath139 processes with @xmath140 , and another @xmath208 @xmath209 processes with @xmath142 .",
    "( a)(d ) survival function of inter - event times for one process with @xmath68 , another with @xmath140 , and another with @xmath142 , from the top to the bottom .",
    "( a ) nmga when @xmath144 .",
    "( b ) laplace gillespie algorithm when @xmath144 .",
    "( c ) nmga when @xmath145 .",
    "( d ) laplace gillespie algorithm when @xmath145 .",
    "( e ) computation time as a function of the number of processes , @xmath0 .",
    ", title=\"fig:\",width=302 ] . among the @xmath0 processes ,",
    "@xmath139 processes are simulated with @xmath68 , another @xmath139 processes with @xmath140 , and another @xmath208 @xmath209 processes with @xmath142 .",
    "( a)(d ) survival function of inter - event times for one process with @xmath68 , another with @xmath140 , and another with @xmath142 , from the top to the bottom .",
    "( a ) nmga when @xmath144 .",
    "( b ) laplace gillespie algorithm when @xmath144 .",
    "( c ) nmga when @xmath145 .",
    "( d ) laplace gillespie algorithm when @xmath145 .",
    "( e ) computation time as a function of the number of processes , @xmath0 .",
    ", title=\"fig:\",width=302 ] . among the @xmath0 processes ,",
    "@xmath139 processes are simulated with @xmath68 , another @xmath139 processes with @xmath140 , and another @xmath208 @xmath209 processes with @xmath142 .",
    "( a)(d ) survival function of inter - event times for one process with @xmath68 , another with @xmath140 , and another with @xmath142 , from the top to the bottom .",
    "( a ) nmga when @xmath144 .",
    "( b ) laplace gillespie algorithm when @xmath144 .",
    "( c ) nmga when @xmath145 .",
    "( d ) laplace gillespie algorithm when @xmath145 .",
    "( e ) computation time as a function of the number of processes , @xmath0 .",
    ", title=\"fig:\",width=302 ]     for the correlated laplace gillespie algorithm .",
    "we used the power - law distribution of inter - event times given by eq .   with @xmath138 .",
    "( a ) @xmath68 .",
    "( b ) @xmath142 .",
    "the error bar represents the mean @xmath210 standard deviation .",
    "( c ) survival function of a single event sequence ( i.e. , @xmath211 ) with @xmath143 events with @xmath68 and @xmath212 , 0.5 , and 0.9 .",
    "( d ) same for @xmath142 .",
    ", title=\"fig:\",width=302 ]   for the correlated laplace gillespie algorithm .",
    "we used the power - law distribution of inter - event times given by eq .   with @xmath138 .",
    "( a ) @xmath68 .",
    "( b ) @xmath142 .",
    "the error bar represents the mean @xmath210 standard deviation .",
    "( c ) survival function of a single event sequence ( i.e. , @xmath211 ) with @xmath143 events with @xmath68 and @xmath212 , 0.5 , and 0.9 .",
    "( d ) same for @xmath142 .",
    ", title=\"fig:\",width=302 ]   for the correlated laplace gillespie algorithm .",
    "we used the power - law distribution of inter - event times given by eq .",
    "with @xmath138 .",
    "( a ) @xmath68 .",
    "( b ) @xmath142 .",
    "the error bar represents the mean @xmath210 standard deviation .",
    "( c ) survival function of a single event sequence ( i.e. , @xmath211 ) with @xmath143 events with @xmath68 and @xmath212 , 0.5 , and 0.9 .",
    "( d ) same for @xmath142 .",
    ", title=\"fig:\",width=302 ]   for the correlated laplace gillespie algorithm .",
    "we used the power - law distribution of inter - event times given by eq .   with @xmath138 .",
    "( a ) @xmath68 .",
    "( b ) @xmath142 .",
    "the error bar represents the mean @xmath210 standard deviation .",
    "( c ) survival function of a single event sequence ( i.e. , @xmath211 ) with @xmath143 events with @xmath68 and @xmath212 , 0.5 , and 0.9 .",
    "( d ) same for @xmath142 . , title=\"fig:\",width=302 ]    . for the power - law density of inter - event times ,",
    "we use eq .   with @xmath138 and @xmath140.,title=\"fig:\",width=302 ] .",
    "for the power - law density of inter - event times , we use eq .   with @xmath138 and @xmath140.,title=\"fig:\",width=302 ]"
  ],
  "abstract_text": [
    "<S> the gillespie algorithm provides statistically exact methods for simulating stochastic dynamics modelled as interacting sequences of discrete events including systems of biochemical reactions or earthquake occurrences , networks of queuing processes or spiking neurons , and epidemic and opinion formation processes on social networks . </S>",
    "<S> empirically , the inter - event times of various phenomena obey long - tailed distributions . </S>",
    "<S> the gillespie algorithm and its variants either assume poisson processes ( i.e. , exponentially distributed inter - event times ) , use particular functions for time courses of the event rate , or work for non - poissonian renewal processes , including the case of long - tailed distributions of inter - event times , but at a high computational cost . in the present study , we propose an innovative gillespie algorithm for renewal processes on the basis of the laplace transform . </S>",
    "<S> the algorithm makes use of the fact that a class of point processes is represented as a mixture of poisson processes with different event rates . </S>",
    "<S> the method is applicable to multivariate renewal processes whose survival function of inter - event times is completely monotone . </S>",
    "<S> it is an exact algorithm and works faster than a recently proposed gillespie algorithm for general renewal processes , which is exact only in the limit of infinitely many processes . </S>",
    "<S> we also propose a method to generate sequences of event times with a tunable amount of positive correlation between inter - event times . </S>",
    "<S> we demonstrate our algorithm with exact simulations of epidemic processes on networks , finding that a realistic amount of positive correlation in inter - event times only slightly affects the epidemic dynamics . </S>"
  ]
}
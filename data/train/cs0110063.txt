{
  "article_text": [
    "in the area of model - checking , the search for efficient techniques for verifying infinite - state systems has been an ongoing research effort .",
    "much work has been devoted to investigating various restricted models of infinite - state systems that are amenable to automatic verification for some classes of temporal properties , e.g. , safety and liveness .",
    "a timed automaton is one such model .",
    "a timed automaton @xcite is a finite automaton ( over finitely many control states ) augmented with dense clocks .",
    "the clocks can be reset or progress at the same rate , and can be tested against clock constraints in the form of clock regions ( i.e. , comparisons of a clock or the difference of two clocks against an integer constant , e.g. , @xmath1 , where @xmath2 and @xmath3 are clocks . ) .",
    "the most important result in the theory of timed automata is that region reachability for timed automata is decidable @xcite .",
    "this result has been used in defining various real - time logics , model checking algorithms and tools @xcite for verifying real - time systems .    however , region reachability is not strong enough to verify many complex timing requirements not in the form of clock regions ( e.g. , ",
    "@xmath4 is always true \" ) for timed automata .",
    "recently , decidable binary reachability ( i.e. , the set of all pairs of configurations such that one can reach the other ) characterizations for timed automata and their generalizations were obtained @xcite .",
    "the characterizations opened the door for automatic verification of various real - time models against complex timing requirements .",
    "for instance , a flattening technique was used by comon and jurski @xcite to establish that the binary reachability of timed automata is definable in the additive theory of the reals and integers .",
    "a timed automaton can be augmented with other unbounded discrete data structures such as a free counter and reversal - bounded counters .",
    "a ( free ) counter is an integer variable that can be incremented by 1 , decremented by 1 , and tested against 0 .",
    "a counter is reversal - bounded if the number of times it alternates between nondecreasing and nonincreasing mode and vice - versa is bounded by some fixed number independent of the computation @xcite .",
    "a pattern technique was proposed by dang @xcite to obtain a decidable binary reachability characterization on some  storage - augmented \" timed automata .",
    "for instance , suppose that @xmath5 is a timed automaton ( with dense clocks @xmath6 and @xmath7 ) augmented with two reversal - bounded counters @xmath8 and @xmath9 , and a free counter @xmath10 .",
    "the result of dang @xcite implies that the binary reachability of @xmath5 is definable in the additive theory of the reals and integers .",
    "therefore , we can automatically verify the following safety property , which contains linear constraints on _ both _ dense variables and unbounded discrete variablesgiven two control states @xmath11 and @xmath12 , if @xmath5 starts at @xmath11 in a configuration satisfying @xmath13 , then whenever @xmath5 reaches @xmath12 , its configuration must satisfy @xmathin contrast to safety properties , liveness properties considered in this paper involve properties on infinite executions of @xmath5 .",
    "for instance , consider an infinite execution that passes some control state for infinitely many times .",
    "a mixed linear constraint on clocks and counters in @xmath5 may or may not be satisfied whenever @xmath5 passes the control state .",
    "is there an infinite execution on which the constraint is satisfied for infinitely many times at the control state ?",
    "an example liveness property would be like belowgiven two control states @xmath11 and @xmath12 , if @xmath5 starts at @xmath11 in some configuration satisfying @xmath13 , then @xmath5 has an infinite execution on which @xmath14 is satisfied at @xmath12 for infinitely many timesthis kind of liveness properties have a lot of applications such as whether concurrent real - time processes are livelock - free , starvation - free , etc .",
    "can this liveness property be automatically verified for @xmath5 ?",
    "we approach this question by looking at mixed linear relations @xmath15 that are relations on real and integer variables definable in the additive theory of the reals and integers .",
    "we first prove the main theorem that the existence of an @xmath0-chain for @xmath15 is decidable when @xmath15 is transitive . this proof is done by eliminating quantifiers from @xmath15 using a recent result of @xcite and expressing @xmath15 into mixed linear constraints .",
    "the decidable result follows from the fact that the existence of an @xmath0-chain for @xmath15 forces @xmath15 to have a special format .",
    "notice that the transitivity of @xmath15 is critical ; removing it from @xmath15 obviously causes the existence of an @xmath0-chain undecidable ( e.g. , encoding the one - step transition relations of a two - counter machine into @xmath15 ) . recall that the binary reachability of @xmath5 is a transitive mixed linear relation .",
    "the above liveness question can be reduced to the existence of an @xmath0-chain for some mixed linear relation easily constructed from the binary reachability .",
    "therefore , a direct application of the main theorem gives a positive answer to the question .",
    "we may also use the main theorem to verify a class of pushdown systems .",
    "for instance , suppose that @xmath16 is a pushdown automaton .",
    "consider the following presburger liveness propertygiven two states @xmath11 and @xmath12 , from some configuration at @xmath11 satisfying @xmath17 , @xmath16 has an infinite execution on which @xmath18 holds at @xmath12 for infinitely many times , \" _",
where count variable @xmath19 indicates the number of symbol @xmath20 s in the stack word in a configuration .",
    "this paper provides a technique to reduce this property into the existence of an @xmath0-chain for some presburger relation , which is a special form of mixed linear relations .",
    "therefore , using the main theorem , the above property can be automatically verified for @xmath16 .",
    "in fact , we show the result for a more powerful class of pushdown systems : @xmath16 can be a pushdown automaton augmented with reversal - bounded counters and integer - valued clocks .",
    "this class of pushdown systems can be used to model a class of real - time recursive programs .",
    "the presburger liveness properties for this class of pushdown systems then contain presburger formulas on count variables , reversal - bounded counters and discrete clocks .",
    "the techniques presented in this paper are different from our previous papers @xcite on liveness verification . in those two papers",
    ", we only deal with the presburger liveness problems for discrete timed automata ( i.e. , timed automata with integer - valued clocks ) @xcite and for reversal - bounded counter machines with a free counter ( ncmfs ) @xcite , respectively .",
    "both of the papers are based upon analyzing loops in the machines .",
    "in particular , the key idea in @xcite is to make discrete timed automata static ( i.e. , enabling conditions can be removed ) and memoryless ( i.e. , two integer clock values are somewhat unrelated if they are separated by a large number of clock resets ) .",
    "but , the idea can not be easily extended to dense clocks .",
    "the key idea in @xcite is to partition an execution of an ncmf into phases such that reversal - bounded counters are monotonic in each phase .",
    "then , a technique is used to reduce the ncmf into one with only one free counter , with respect to the liveness property .",
    "but , we were not able to extend the idea when the free counter is replaced by a pushdown stack .",
    "the techniques presented in this paper , however , allows us to handle , in a unified framework , a stronger class of systems : timed automata with dense clocks , reversal - bounded counters , and a free counter .",
    "in addition , we can deal with a class of generalized pushdown systems .",
    "the paper is organized as follows .",
    "section [ chaptprelimi ] gives the basic definitions and preliminary results that are used in the paper .",
    "sections [ s3 ] through [ s5 ] present the proof of the main theorem ; i.e. , it is decidable whether a transitive mixed linear relation has an @xmath0-chain .",
    "section [ s6 ] applies the main theorem in showing the decidable results on the mixed linear liveness problem for a timed automaton augmented with reversal - bounded counters and a free counter and on the presburger liveness problem for a discrete timed automaton augmented with reversal - bounded counters and a pushdown stack . finally , section [ s7 ] concludes with some remarks .",
    "let @xmath21 and @xmath22 be positive integers . consider a formula @xmath23 where each @xmath24 is a real variable , each @xmath25 is an integer variable , each @xmath26 , each @xmath27 and @xmath28 are integers , @xmath29 , and @xmath30 is @xmath31 , @xmath32 , or @xmath33 for some integer @xmath34 . the formula is a _",
    "mixed linear constraint _ if @xmath30 is @xmath31 or @xmath32 .",
    "the formula is called a _ dense linear constraint _ if @xmath30 is @xmath31 or @xmath32 and each @xmath35 , @xmath36 .",
    "the formula is called a _ discrete linear constraint _ if @xmath30 is @xmath32 and each @xmath37 , @xmath38 .",
    "the formula is called a _ discrete mod constraint _ , if each @xmath37 , @xmath38 , and @xmath30 is @xmath33 for some integer @xmath34 .",
    "a formula is _ definable in the additive theory of reals and integers ( resp .",
    "reals , integers ) _ if it is the result of applying quantification ( @xmath39 ) and boolean operations ( @xmath40 and @xmath41 ) over mixed linear constraints ( resp .",
    "dense linear constraints , discrete linear constraints ) ; the formula is called a _ mixed formula ( resp .",
    "dense formula , presburger formula)_. it is decidable whether the formula is satisfiable .",
    "it is well - known that a presburger formula can always be written , after quantifier elimination , as a disjunctive normal form of discrete linear constraints and discrete mod constraints .",
    "it is also known that a dense formula can always be written as a disjunctive normal form of dense linear constraints .",
    "can we eliminate quantifiers in mixed formulas ?",
    "the answer is not obvious .",
    "this is because a mixed formula like @xmath42 , after eliminating all the quantifiers , is not always in the form of a boolean combination of mixed linear constraints .",
    "a real variable @xmath2 can be treated as the sum of an integer variable ( the integral part of @xmath2 ) @xmath43 and a real variable ( the fractional part of @xmath2 ) @xmath44 with @xmath45 and @xmath46 .",
    "a mixed formula @xmath47 , where @xmath48 @xmath49 are the free variables , can therefore be translated into another mixed formula @xmath50 ( called @xmath15 s _ separation _ ) : @xmath51 notice that the separation @xmath50 contains real variables @xmath52 and integer variables @xmath53 @xmath54 .",
    "the following result can be easily obtained from @xcite , in which the separation can be written into a boolean combination of dense linear constraints , discrete linear constraints , and discrete mod constraints .",
    "a nice property of the boolean combination is that real variables and integer variables are separated : each constraint in the combination either contains real variables @xmath52 only or contains integer variables @xmath53 @xmath49 only .",
    "[ weis ] the separation of any mixed formula can be written into a boolean combination of dense linear constraints , discrete linear constraints , and discrete mod constraints .",
    "@xmath15 is a _",
    "mixed linear relation _ if it is a mixed formula @xmath55 over @xmath56 real variables @xmath57 and @xmath58 integer variables @xmath59    we use @xmath60 to denote an @xmath21-ary real vector and use @xmath61 to denote an @xmath22-ary integer vector .",
    "a mixed linear relation @xmath15 is _ transitive _ if for all @xmath62 , @xmath63 implies @xmath64 . an infinite sequence @xmath65 is _ an @xmath0-chain _ of @xmath15 if @xmath66 holds for all @xmath67 . the sequence is a _",
    "strong @xmath0-chain _ of @xmath15 if it is an @xmath0-chain of @xmath15 satisfying @xmath68 for all @xmath69 .",
    "notice that , if @xmath15 is transitive , then any subsequence @xmath70 ( with @xmath71 ) of an @xmath0-chain @xmath65 is also an @xmath0-chain of @xmath15 . according to the definition of the separation @xmath50 ( which is also a mixed linear relation ) of a mixed linear relation @xmath15 and theorem [ weis ] ,",
    "the following lemma can be proved .",
    "[ l1 ] ( 1 ) .",
    "a mixed linear relation is transitive iff its separation is transitive .",
    "a mixed linear relation has an @xmath0-chain iff its separation has an @xmath0-chain .",
    "we will show that it is decidable whether a transitive mixed linear relation @xmath15 has an @xmath0-chain . from lemma [ l1 ]",
    ", it suffices to work on the separation of @xmath15 ; i.e. , from theorem [ weis ] , we assume that @xmath15 itself is already in the form of a boolean combination of dense linear constraints ( with each real variable taking values in @xmath72 ) , discrete linear constraints , and discrete mod constraints .",
    "that is , @xmath55 can be written as a disjunction @xmath73 for some @xmath74 , where each @xmath75 is a conjunction of @xmath76 each @xmath77 is a conjunction of @xmath78 dense linear equations @xmath79 followed by @xmath78 dense linear inequalities @xmath80 with @xmath81 and @xmath82 taking values in @xmath83 .",
    "each @xmath84 is a conjunction of @xmath78 discrete linear inequalities @xmath85 followed by @xmath78 discrete mod constraints @xmath86 notice that discrete linear equations like @xmath87 can be expressed in discrete linear inequalities such as @xmath88 .",
    "also notice that the negation of a discrete mod constraint like @xmath89 can be expressed into a finite disjunction of mod constraints in ( [ eq4 ] ) .",
    "each @xmath90 and each @xmath91 for @xmath92 ( resp .",
    "@xmath93 ) are linear combinations ( with integer coefficients ) over real variables ( resp .",
    "integer variables ) .",
    "mod constraints in ( [ eq4 ] ) can be eliminated using the following procedure .",
    "take @xmath94 let @xmath95 be an @xmath22-ary integer vector taking values in @xmath96 .",
    "let @xmath97 be @xmath98 by substituting @xmath99 with @xmath100 and @xmath101 with @xmath102 in @xmath55 , for all possible choices of @xmath95 and @xmath103 . clearly ,    * @xmath15 is transitive iff @xmath104 is transitive , and * @xmath15 has an @xmath0-chain iff @xmath104 has an @xmath0-chain .    in @xmath104",
    ", there are no mod - constraints , since , after the substitution , the truth value of each mod - constraint in ( [ eq4 ] ) is known ( according to the choice of @xmath95 and @xmath103 ) .",
    "hence , we may assume that @xmath15 itself does not contain mod - constraints in ( [ eq4 ] ) .",
    "consider an infinite sequence @xmath105 @xmath106 let @xmath107 be a term that is a linear combination of real variables @xmath81 and integer variables @xmath99 .",
    "the term is _ increasing _",
    "( resp . _ decreasing , flat _ ) on @xmath105 if @xmath108 ( resp .",
    "@xmath109 , @xmath110 ) , for each @xmath67 .",
    "the term is _ bounded increasing _",
    "_ bounded decreasing _ ) on @xmath105 if @xmath111 is increasing ( resp . decreasing ) on @xmath105 and",
    "there is a number @xmath112 such that @xmath113 ( resp .",
    "@xmath114 ) for all @xmath67 . the term is _ unbounded increasing _ ( resp . _",
    "unbounded decreasing _ ) on @xmath105 if @xmath111 is increasing ( resp . decreasing ) on @xmath105 and @xmath111 is not bounded increasing ( resp . decreasing ) on @xmath105 .",
    "the term of @xmath111 could ( but need not ) be in one of the following five _ modes _ on @xmath105 :    ( mode1 ) unbounded increasing ,    ( mode2 ) unbounded decreasing ,    ( mode3 ) flat ,    ( mode4 ) bounded increasing ,    ( mode5 ) bounded decreasing .    clearly , when @xmath111 only contains real variables , ( mode1 ) and ( mode2 ) are impossible ( since each real variables is assumed in @xmath72 ) ; when @xmath111 only contains integer variables , ( mode4 ) and ( mode5 ) are impossible .",
    "we observe that , since @xmath15 is transitive , @xmath15 has an @xmath0-chain iff @xmath15 has an @xmath0-chain @xmath105 on which each real variable @xmath115 ( as well as each integer variable @xmath116 , and each term @xmath117 and @xmath91 , @xmath118 , @xmath119 ) is in one of the five modes on @xmath105 .",
    "a _ mode vector _",
    "@xmath120 is used to indicate the chosen mode for each of the variables and the terms .",
    "there are at most @xmath121 distinct mode vectors .",
    "therefore , in order to decide whether @xmath15 has an @xmath0-chain , we only need to decide whether @xmath15 has an @xmath0-chain with some mode vector @xmath120 . in the sequel , we use the following abbreviation .",
    "an @xmath0-chain is _ monotonic of mode @xmath120 _ ( or simply , _",
    "monotonic _ when @xmath120 is understood ) if the chain is with mode vector @xmath120 .",
    "now , we are ready to prove the following lemma using the pigeon - hole principle .",
    "[ l2 ] suppose that @xmath15 is a transitive mixed linear relation in the form of @xmath122 where each @xmath75 is a conjunction of atomic formulas in ( [ eq1],[eq2],[eq3],[eq4 ] ) .",
    "then , @xmath15 has an @xmath0-chain iff @xmath75 has a monotonic and strong @xmath0-chain for some @xmath123 and some mode vector @xmath120 .",
    "recall that @xmath124 where @xmath77 contains only dense variables and @xmath84 contains only integer variables .",
    "therefore , for any @xmath120 , @xmath75 has a monotonic and strong @xmath0-chain iff both @xmath77 and @xmath84 have a monotonic and strong @xmath0-chain .",
    "hence , from now on , we will focus on @xmath77 and @xmath84 separately by looking at the following two problems :    \\1 .",
    "whether @xmath125 has a monotonic and strong @xmath0-chain , where @xmath125 is a conjunction of dense linear equations in ( [ eq1 ] ) and inequalities in ( [ eq2 ] ) ;    \\2 . whether @xmath126 has a monotonic and strong @xmath0-chain , where @xmath126 is a conjunction of integer linear inequalities in ( [ eq3 ] ) .",
    "notice that @xmath125 and @xmath126 are not necessarily transitive .",
    "solutions to the problems are given in the following two sections .",
    "assume that @xmath125 is a conjunction of @xmath78 dense linear equations @xmath127 and @xmath78 dense linear inequalities @xmath128 .",
    "each dense variable takes values in @xmath72 .",
    "let @xmath120 be a mode vector ( on each dense variable , each term @xmath129 , @xmath130 , @xmath131 , @xmath132 , @xmath133 ) .",
    "we use  @xmath134 \" ,  @xmath135 \" and  @xmath136 \" to stand for  bounded increasing \" ,  flat \" and  bounded decreasing \" , respectively ( the other two modes  unbounded increasing \" and  unbounded decreasing \" are not possible for dense variables and dense terms ) .",
    "assume that @xmath137 is a monotonic and strong @xmath0-chain @xmath138 of @xmath125 , for a given @xmath120 .",
    "therefore , @xmath139 holds for any @xmath69 ( notice that @xmath125 itself is not necessarily transitive . ) .",
    "since dense variables take values in @xmath72 , we have @xmath140 for some @xmath141^m$ ] .    a number of observations can be made on @xmath138 and @xmath120 .",
    "for instance , each variable @xmath115 ( as well as each term @xmath129 ,",
    "@xmath130 , @xmath131 , @xmath132 ) has a mode ( given in @xmath120 ) on @xmath138 . in particular , for a linear equation like @xmath127 , the mode of @xmath129 and the mode of @xmath130 must be flat . how about a linear inequality like @xmath128 ? let us consider the case when @xmath142 and @xmath143 . in this case , since @xmath140 , we can easily conclude that , for any @xmath144 , @xmath145 , @xmath146 , @xmath147 .",
    "similar conclusions can be made for all the other possible choices for @xmath148 and @xmath149 . combining all these observations",
    ", we obtain that , for any @xmath144 , @xmath150 holds , where @xmath151 is defined as follows :    * @xmath152 and @xmath153 are consistent to the mode @xmath154 for each @xmath115 .",
    "that is , for all @xmath115 , @xmath155 ( resp .",
    "@xmath31 , @xmath32 ) and @xmath156 ( resp .",
    "@xmath31 , @xmath157 ) if @xmath158 ( resp .",
    "@xmath135 , @xmath136 ) , where @xmath159 is the component for variable @xmath2 in vector @xmath152 .",
    "* for each linear equation @xmath127 , both @xmath160 and @xmath161 must be flat . in this case , @xmath162 , @xmath163 , @xmath164 .",
    "* for each linear inequality @xmath128 , according to each possible combination of @xmath148 and @xmath149 , one of the following nine cases is satisfied : * * @xmath165 and @xmath143 .",
    "@xmath166 , @xmath146 , and @xmath167 , * * @xmath165 and @xmath168 .",
    "@xmath166 , @xmath169 , @xmath167 , * * @xmath165 and @xmath170 .",
    "@xmath166 , @xmath171 , @xmath167 , * * @xmath172 and @xmath143 .",
    "@xmath173 , @xmath146 , @xmath167 , * * @xmath172 and @xmath168 .",
    "@xmath173 , @xmath169 , @xmath167 , * * @xmath172 and @xmath170 .",
    "@xmath173 , @xmath171 , @xmath147 , * * @xmath142 and @xmath143 .",
    "@xmath145 , @xmath146 , @xmath147 , * * @xmath142 and @xmath168 .",
    "@xmath145 , @xmath169 , @xmath147 , * * @xmath142 and @xmath170 .",
    "@xmath145 , @xmath171 , @xmath147 .",
    "since @xmath140 , we have @xmath174 latexmath:[\\[\\label{eq10 } ( h(\\u,\\u',\\u'',{{\\cal m}})\\land        conversely , we can show the following lemma .",
    "if there are a @xmath141^m$ ] and a mode vector @xmath120 satisfying formula ( [ eq10 ] ) , then @xmath125 has a monotonic ( of mode @xmath120 ) and strong @xmath0-chain in @xmath83 .",
    "thus , @xmath125 has a monotonic ( of mode @xmath120 ) and strong @xmath0-chain iff formula ( [ eq10 ] ) , which is definable in the additive theory of reals , is satisfied by some @xmath141^m$ ] .",
    "hence ,    [ l3 ] let @xmath125 be a conjunction of @xmath78 dense linear equations @xmath127 and @xmath78 dense linear inequalities @xmath128 defined in ( [ eq1],[eq2 ] ) . let @xmath120 be a mode vector on @xmath81 , @xmath176 , @xmath133 .",
    "then , it is decidable whether @xmath125 has a monotonic and strong @xmath0-chain .",
    "assume that @xmath126 is a conjunction of @xmath78 discrete linear inequalities @xmath177 .",
    "let @xmath120 be a mode vector ( on each integer variable , each term @xmath178 , @xmath179 , @xmath133 ) .",
    "we use  @xmath134 \" ,  @xmath135 \" and  @xmath136 \" to stand for  unbounded increasing \" ,  flat \" and  unbounded decreasing \" modes , respectively . assume that @xmath180 is a monotonic and strong @xmath0-chain @xmath181 of @xmath126 .",
    "therefore , @xmath182 ( [ eq11 ] ) implies that , for each @xmath133 , the mode @xmath183 and the mode @xmath184 only have the following five combinations ( all the others are not possible ) :    * @xmath185 and @xmath186 , * @xmath187 and @xmath186 , * @xmath188 and @xmath186 , * @xmath185 and @xmath189 , * @xmath187 and @xmath189 .    if @xmath190 ( resp .",
    "@xmath189 ) , we use @xmath191 ( resp .",
    "@xmath192 ) to stands for @xmath193 ( resp .",
    "@xmath194 ) . similarly , if @xmath195 , we use @xmath196 to denote the component of @xmath3 in @xmath197 .",
    "suppose @xmath198 , @xmath199 and @xmath200 , @xmath201 and @xmath202 .",
    "that is , @xmath203 , @xmath204 , @xmath205 , and for all @xmath206 , @xmath207 . from ( [ eq11 ] ) , for all @xmath67",
    ", we can pick @xmath208 and @xmath209 such that @xmath210 , and    * @xmath211 , and * @xmath212 ,    and    * @xmath213 , and * @xmath214 .    similar statement can be made for all the valid choices of @xmath183 and @xmath184 , @xmath133 , as well as for @xmath215 , @xmath116 .",
    "that is , for all @xmath67 , there are @xmath208 and @xmath209 such that    * @xmath210 , * @xmath208 and @xmath209 are consistent with mode @xmath215 for each @xmath116 . that is , for all @xmath116 , @xmath216 ( resp .",
    "@xmath31 , @xmath32 ) and @xmath217 ( resp .",
    "@xmath218 , @xmath219 ) if @xmath220 ( resp .",
    "@xmath221 ) , where @xmath222 is the component for @xmath3 in vector @xmath208 .",
    "* for each @xmath133 , one of the following items holds : * * @xmath185 and @xmath186 . in this case ,",
    "@xmath223 and @xmath224 .",
    "* * @xmath187 and @xmath186 . in this case , @xmath225 and @xmath224 . * * @xmath188 and @xmath186 . in this case ,",
    "@xmath226 and @xmath224 .",
    "* * @xmath185 and @xmath189 . in this case ,",
    "@xmath223 and @xmath227 . *",
    "* @xmath187 and @xmath189 . in this case , @xmath225 and @xmath227 .    the above statement ( replacing @xmath208 with @xmath228 and @xmath209 with @xmath229 )",
    "can be written as @xmath230 where @xmath231 represents the tuple of all the constant values @xmath232 and",
    "@xmath233 , @xmath133 , and @xmath196 , @xmath116 . clearly , @xmath234 is a presburger formula .",
    "conversely , we can show the following lemma .",
    "if there are a @xmath231 and a mode vector @xmath120 satisfying ( [ eq12 ] ) , then @xmath126 has a monotonic and strong @xmath0-chain .    in summary , for any @xmath120",
    ", @xmath126 has a monotonic and strong @xmath0-chain iff @xmath235 since @xmath234 is presburger , we have ,    [ l4 ] assume that @xmath126 is a conjunction of @xmath78 discrete linear inequalities @xmath177 .",
    "let @xmath120 be a mode vector on @xmath99 , @xmath178 and @xmath179 , @xmath133 .",
    "it is decidable whether @xmath126 has a monotonic and strong @xmath0-chain .",
    "now , we are ready to put theorem [ weis ] , lemma [ l1 ] , lemma [ l2 ] , lemma [ l3 ] , lemma [ l4 ] together and conclude the main theorem .",
    "[ main ] it is decidable whether a transitive mixed linear relation has an @xmath0-chain .    an upper bound for the time complexity of the decidable result in theorem [ main ] can be obtained as follows .",
    "let @xmath15 be given in ( [ eq00 ] ) whose length is @xmath236 .",
    "one can show that the length of formula ( [ eq10 ] ) as well as formula ( [ eq4354 ] ) is @xmath237 ( for any fixed choice of @xmath238 ) . using the complexity result given in @xcite ,",
    "the satisfiability of ( [ eq10 ] ) and the satisfiability of ( [ eq4354 ] ) are decidable in time @xmath239 , for each fixed @xmath238 .",
    "but since there are only ( at most ) @xmath121 choices for @xmath238 , whether @xmath15 has an @xmath0-chain is still decidable in time @xmath239 .",
    "notice that the transitivity in theorem [ main ] is critical .",
    "the existence of an @xmath0-chain is undecidable for mixed linear relations .",
    "the undecidability remains even for presburger relations .",
    "this is because a presburger relation can be used to encode one - step transitions of a deterministic two - counter machine .",
    "the negation of the halting problem ( which is undecidable ) for the machine can be reduced to the existence of an @xmath0-chain for the presburger relation .",
    "in this section , we will study various verification problems for restricted infinite state systems containing both dense counters and discrete counters .",
    "we start with a general model .",
    "let @xmath240 be a machine that is equipped with a number of dense counters @xmath81 and discrete counters @xmath99 and whose transitions involve changing control states while changing counter values .",
    "a configuration of @xmath240 is a tuple consisting of a control state and counter values .",
    "formally , @xmath240 is a tuple @xmath241 where @xmath242 is the one - step transition such that for each @xmath243 , @xmath244 indicates that @xmath240 transits from a configuration @xmath245 at @xmath246 to another configuration @xmath247 at @xmath248 .",
    "@xmath249 is _ reachable _ from @xmath250 , written @xmath251 , if there are @xmath206 ( for some @xmath206 ) configurations @xmath252 such that @xmath253 , @xmath254 , and @xmath255 @xmath256 for all @xmath257 . in this case",
    ", we say that @xmath250 reaches @xmath249 through configurations @xmath258 , @xmath259 .",
    "notice that @xmath260 , called the _",
    "binary reachability _ of @xmath240 , is the transitive closure of @xmath242 .",
    "@xmath240 is a _",
    "mixed linear counter system _ if , when @xmath246 and @xmath248 are understood as bounded integer variables ,    * @xmath244 is a mixed linear relation , * @xmath261 is an ( obviously transitive ) mixed linear relation .",
    "now , we assume that @xmath240 is a mixed linear counter system .",
    "let @xmath262 and @xmath263 be two subsets of configurations of @xmath240 both of which are definable by mixed formulas .",
    "there are two kinds of verification problems we will consider .",
    "@xmath240 is _",
    "@xmath263-safe from @xmath262 _ if no configuration in @xmath262 reaches a configuration in @xmath263 .",
    "mixed linear safety problem _ for @xmath240 is to decide whether @xmath240 is @xmath263-safe from @xmath262 . an infinite sequence of configurations",
    "@xmath264 of @xmath240 is _ @xmath263-live from @xmath262 _ if the following items hold :    * @xmath265 , * there are infinitely many @xmath206 such that @xmath266 , and * for all @xmath67 , @xmath267 .",
    "that is , the sequence is an infinite execution of @xmath240 .",
    "@xmath240 is _",
    "@xmath263-live from @xmath262 _ if there is an infinite sequence of configurations that is @xmath263-live from @xmath262 .",
    "mixed linear liveness problem _ for @xmath240 is to decide whether @xmath240 is @xmath263-live from @xmath262 .",
    "these two problems can be further generalized .",
    "let @xmath262 , @xmath268 be subsets of configurations of @xmath240 definable in mixed formulas .",
    "the @xmath206-mixed linear safety problem for @xmath240 is to decide whether no configuration in @xmath262 reaches a configuration in @xmath269 through some configurations @xmath270 in @xmath271 respectively .",
    "the @xmath206-mixed linear liveness problem for @xmath240 is to decide whether there is an infinite execution of @xmath240 that is @xmath272-live from @xmath262 for each @xmath273 . the @xmath206-mixed linear safety ( resp",
    ". liveness ) problem is exactly the mixed linear safety ( resp .",
    "liveness ) problem , when @xmath274 .",
    "[ basic11 ] ( 1 ) .",
    "the @xmath206-mixed linear safety problem for mixed linear counter systems is decidable for each @xmath206 .",
    "the @xmath206-mixed linear liveness problem for mixed linear counter systems is decidable for each @xmath206 .",
    "consider the _ eventuality _ problem : is there an infinite execution of @xmath240 that starts from some configuration in @xmath262 such that @xmath263 is satisfied somewhere on the execution ?",
    "the problem is a special case of the mixed linear liveness problem . to see this ,",
    "let @xmath275 be the set of configurations that are reachable from @xmath262 and satisfy @xmath263 . obviously , the eventuality problem is equivalent to the problem whether @xmath240 is _ true_-live from @xmath275 , which is decidable ( _ true _ stands for the set of all configurations ) from theorem [ basic11 ] .",
    "we can modify the eventuality problem as follows : is there an infinite execution of @xmath240 that starts from some configuration in @xmath262 such that @xmath263 is satisfied by each configuration on the execution ?",
    "unfortunately , this modified problem is undecidable for @xmath240 , even when @xmath240 is a discrete timed automaton ( cf .",
    "@xcite for a proof ) .    in practice",
    ", there are many counter models that have been found being mixed linear . applying theorem [ basic11 ] on these systems",
    "gives a number of new decidability results concerning safety / liveness verification .",
    "we first recall some definitions .    a _ timed automaton _",
    "@xmath5 is a tuple @xmath276 where    * @xmath125 is a finite set of _ ( control ) states _ , * @xmath277 are ( dense ) clocks , * @xmath278 is the set of all clock constraints over clocks @xmath277 ; i.e. , boolean combinations of formulas in the form of @xmath279 or @xmath280 where @xmath281 is an integer , @xmath30 stands for @xmath282 .",
    "* @xmath283 assigns a clock constraint over clocks @xmath277 , called an _ invariant _ , to each state , * @xmath284 assigns a subset of clocks to a directed edge in @xmath285 , * @xmath286 assigns a clock constraint over clocks @xmath277 , called a _ reset condition _ , to a directed edge in @xmath285 .",
    "the semantics of @xmath5 is defined as follows .",
    "a configuration @xmath287 is a pair of a control state @xmath246 and a tuple @xmath288 of clock values .",
    "a transition is either a progress transition or a reset transition .",
    "a progress transition makes all the clocks synchronously progress by a positive amount , during which the invariant is consistently satisfied , while the automaton remains at the same control state . a reset transition , by moving from state @xmath11 to state @xmath12 , resets every clock in @xmath289 to 0 and keeps all the other clocks unchanged .",
    "in addition , clock values before the transition satisfy the invariant @xmath290 and the reset condition @xmath291 ; clock values after the transition satisfy the invariant @xmath292 .",
    "in particular , when the clocks are integer - valued ( and hence clocks are incremented by some positive integral amount in a progress transition ) , @xmath5 is called a _ discrete timed automaton_. the following characterization has recently been established @xcite .    [ cj ] timed",
    "automata , as well as discrete timed automata , are mixed linear counter systems .",
    "hence , from theorem [ basic11 ] , the following corollary is obtained .",
    "[ b11 ]    ( 1 ) . the @xmath206-mixed linear safety problem is decidable for timed automata as well as for discrete timed automata @xcite .",
    "the @xmath206-mixed linear liveness problem is decidable for discrete timed automata @xcite .",
    "the @xmath206-mixed linear liveness problem is decidable for timed automata .",
    "a ( free ) counter is an integer variable that can be tested against 0 , incremented by 1 , decremented by 1 , and stay unchanged .",
    "a timed automaton can be augmented with counters by integrating a reset transition with a counter operation .",
    "a counter in a timed automaton is _ reversal - bounded _ if there is a number @xmath293 such that , during any execution of the automaton , the counter changes mode between nondecreasing and nonincreasing for at most @xmath293 times .",
    "let @xmath5 be a timed automaton augmented with a finite number of reversal - bounded counters and one free counter .",
    "now , a configuration @xmath294 of @xmath5 is a tuple of a control state @xmath246 , dense clock values @xmath288 and counter values @xmath228 .",
    "when @xmath5 does not contain any clocks , it is a finite automaton augmented with reversal - bounded counters and one free counter .",
    "[ cj1 ]    ( 1 ) .",
    "discrete timed automata augmented with reversal - bounded counters and one free counter are mixed linear counter systems @xcite .",
    "( 2 ) . timed automata augmented with reversal - bounded counters and one free counter",
    "are mixed linear counter systems @xcite .",
    "hence , from theorem [ basic11 ] , the following corollary is obtained .",
    "[ b12 ]    ( 1 ) .",
    "the @xmath206-mixed linear safety problem is decidable for discrete timed automata augmented with reversal - bounded counters and one free counter @xcite .",
    "the @xmath206-mixed linear safety problem is decidable for timed automata augmented with reversal - bounded counters and one free counter @xcite .",
    "the @xmath206-mixed linear liveness problem is decidable for finite automata augmented with reversal - bounded counters and one free counter @xcite .",
    "the @xmath206-mixed linear liveness problem is decidable for timed automata ( as well as discrete timed automata ) augmented with reversal - bounded counters and one free counter .",
    "corollary [ b11 ] ( 3 ) and corollary [ b12 ] ( 4 ) are new decidability results .",
    "one shall notice that the loop analysis techniques presented in @xcite to show corollary [ b11 ] ( 2 ) and corollary [ b12 ] ( 3 ) can not be easily used to prove our new results .",
    "the corollaries can be used to automatically verify a class of non - region safety and liveness properties that , previously , could not be done using the traditional region technique @xcite .",
    "below , we look at an example of liveness verification . consider a system @xmath125 of two concurrent processes @xmath295 and @xmath296 .",
    "the two processes may use a counting semaphore to perform concurrency control . in some applications",
    ", we would like to ensure that the concurrency control makes @xmath125 starvation - free ; i.e. , it is not possible that the composite system @xmath125 , starting from some initial configuration , executes for some finite number of steps and then @xmath295 solely executes forever ( in this case , @xmath296 starves ) .",
    "we use @xmath297 to denote the system that behaves like @xmath125 then , nondeterministically , behaves like @xmath295 afterwards .",
    "it is observed that @xmath296 starves iff @xmath297 has an @xmath0-chain ( i.e. , @xmath297 is @xmath298-live from the initial configuration ) .",
    "now , we suppose that @xmath295 and @xmath296 are real - time processes modeled as discrete timed automata .",
    "a free counter is used for the counting semaphore . from corollary [ b12 ] ( 4 ) , whether @xmath296 starves can be automatically verified .    besides mixed linear safety / liveness problems",
    ", one may also be interested in a class of boundedness problems as below .",
    "let @xmath240 be a mixed linear counter system with dense counters @xmath81 and discrete counters @xmath99 .",
    "let @xmath262 be a set of configurations definable in a mixed formula .",
    "we use @xmath78 to denote a linear combination of @xmath81 and @xmath99 ; i.e. , @xmath299 with @xmath300 integers . let @xmath301 be @xmath74 such linear combinations . are there numbers @xmath302 such that , starting from a configuration in @xmath262 , @xmath240 can only reach a configuration satisfying @xmath303 for each @xmath123 ? this boundedness problem can be easily shown decidable , since the question is equivalent to the satisfiability ( for @xmath302 ) of the following mixed formula : @xmath304  @xmath305 satisfies @xmath303 for each @xmath123 \" .",
    "one may also ask a slightly different questionfor each infinite execution starting from @xmath262 , are there @xmath306 numbers @xmath302 such that every configuration on the execution satisfies @xmath303 for each @xmath123 ? _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    we call this question as the _ mixed linear boundedness problem _ , whose decidability is not obvious .",
    "[ bound ] the mixed linear boundedness problem is decidable for mixed linear counter systems .",
    "from their proofs , theorem [ bound ] and theorem [ basic11 ] ( 2 ) can be combined .",
    "for instance , the following question is decidable : is there an infinite execution of @xmath240 that is @xmath263-live from @xmath262 and that is unbounded for @xmath78 ?",
    "notice that , in ( * ) , the bounds @xmath302 are not uniform over all the infinite executions . to make them uniform",
    ", one might ask another different question by switching the quantifications in ( * ) :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ( * * ) are there numbers @xmath302 such that , for each infinite execution starting from @xmath262 , every configuration on the execution satisfies @xmath303 for each @xmath123 ? _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    currently , we do not know whether ( * * ) is decidable or not .",
    "we leave this as an open question .",
    "however , the following question ( by making @xmath302 in ( * * ) fixed , e.g. , 0 )    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ is it true that , for each infinite execution starting from @xmath262 , every configuration on the execution satisfies @xmath307 for each @xmath123 ? _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    is decidable , since its negation is equivalent to an eventuality problem .",
    "one can easily find applications for theorem [ bound ] .",
    "for instance , consider a system with two concurrent real - time processes running on one cpu .",
    "the processes are modeled as two discrete timed automata using a lock semaphore to achieve concurrency and using clocks to enforce timing constraints .",
    "the system is designed to be non - terminating and some fairness constraints are expected .",
    "we use @xmath308 ( resp .",
    "@xmath309 ) to denote the total time that process 1 ( resp .",
    "process 2 ) takes the cpu so far .",
    "one such constraint could be as follows .",
    "there is no infinite execution of the system on which the difference @xmath310 is unbounded .",
    "this constraint can be automatically verified due to theorem [ bound ] and the fact , from theorem [ cj1 ] , that the system , a discrete timed automaton augmented with two monotonic ( and hence reversal - bounded ) counters @xmath308 and @xmath309 , is a mixed linear counter system .",
    "there has been much interesting work on various verification problems for pushdown systems @xcite .",
    "studying pushdown systems is important , since they are directly related to recursive programs and processes . in this subsection",
    ", we will study pushdown systems with discrete clocks and reversal - bounded counters .",
    "safety verification for these systems is discussed in @xcite . here",
    ", we investigate the mixed linear liveness problem ( since now we have only discrete variables , we call the problem as the presburger liveness problem ) .",
    "as we mentioned before , a timed automaton can be augmented with reversal - bounded counters .",
    "here we only consider discrete clocks that take integer values .",
    "the discrete timed automaton can be further augmented with a pushdown stack .",
    "the resulting machine @xmath5 is called a discrete pushdown timed automaton with reversal - bounded counters . in addition to counter operations and clock operations , @xmath5 can push a symbol on the top of the stack , pop the top symbol from the stack , and test whether the top symbol of the stack equals some symbol .",
    "a configuration of @xmath5 is a tuple of a control state , discrete clock values , counter values , and a stack word .",
    "the binary reachability @xmath260 is the set of configurations pairs such that one can reach the other in @xmath5 .",
    "each stack word @xmath311 corresponds to an integer tuple @xmath312 , where @xmath313 is the stack alphabet and each count @xmath314 stands for the number of symbol @xmath315 in @xmath311 .",
    "the tuple @xmath316 is also called the _ stack word counts _ for @xmath311 . in this way",
    ", a set @xmath317 of configurations corresponds to a predicate on states , clock values , counter values , and stack word counts .",
    "@xmath317 is presburger if the predicate is definable by a presburger formula .",
    "@xmath317 is _ commutative _ if , for any configurations @xmath28 and @xmath318 satisfying that @xmath28 and @xmath318 are the same except that the stack word in @xmath28 is a permutation of the stack word in @xmath318 , @xmath319 iff @xmath320 . in this case",
    ", the predicate exactly characterizes the set @xmath317 .",
    "let @xmath262 and @xmath263 be two presburger subsets of configurations .",
    "we say @xmath5 is _ @xmath263-live from @xmath262 _ if there is an infinite sequence @xmath321 such that ( 1 ) .",
    "@xmath322 , ( 2 ) . for all @xmath67 , @xmath323 , and ( 3 ) .",
    "@xmath324 for infinitely many @xmath206 .",
    "the presburger liveness problem for @xmath5 is whether @xmath5 is _ @xmath263-live from @xmath262 _ , given @xmath262 and @xmath263 two presburger subsets of configurations .",
    "[ pio ] the presburger liveness problem for discrete pushdown timed automata with reversal - bounded counters is decidable .",
    "we are not able to extend the result of theorem [ pio ] to dense clocks .",
    "the pattern technique @xcite that abstracts a dense clock into a discrete clock and a pattern does not apply here .",
    "this is because the abstraction maintains the exact binary reachability of dense clocks , but does not maintain the exact dense clock values between the binary reachability .",
    "timed pushdown systems with reversal - bounded counters dealt in theorem [ pio ] also have a lot of applications .",
    "for instance , it can be used to model some real - time recursive concurrent programs .",
    "the reversal - bounded counters can also be used to count the number of external events  these counts can be later used to specify some fairness constraints on the environment .",
    "in this paper , we showed that it is decidable whether a transitive mixed linear relation has an @xmath0-chain . using this main theorem",
    ", we were able to establish , within a unified framework , a number of liveness verification results on generalized timed automata .",
    "more precisely , we proved that ( 1 ) the mixed linear liveness problem for timed automata with dense clocks , reversal - bounded counters , and a free counter is decidable , and ( 2 ) the presburger liveness problem for timed automata with discrete clocks , reversal - bounded counters , and a pushdown stack is decidable .",
    "the results can be used to analyze some fairness constraints ( e.g. , livelock - free and starvation - free ) for infinite - state concurrent systems .",
    "our results are useful in formulating a decidable subset of linear temporal logic ( ltl ) for a class of timed automata augmented with counters .",
    "let @xmath5 be a timed automaton with dense clocks , reversal - bounded counters , and a free counter .",
    "the set of linear temporal logic formulas @xmath325 with respect to @xmath5 is defined by the following grammar : @xmath326 where @xmath263 is a set of configurations of @xmath5 definable by a mixed formula ( on control states , dense clocks , reversal - bounded counters , and the free counter ) .",
    "@xmath327 denotes  next \" , and @xmath328 denotes  until \" .",
    "formulas in @xmath325 are interpreted on infinite execution sequences @xmath74 of configurations of @xmath5 in the usual way .",
    "this logic is very similar to the presburger ltl for timed automata with discrete clocks @xcite except that @xmath263 is a mixed formula instead of a presburger formula .",
    "the _ satisfiability - checking problem _ is to check , given @xmath5 and @xmath329 , whether there exists an infinite execution @xmath74 of @xmath5 with @xmath330 . from corollary",
    "[ b12 ] , the satisfiability - checking problems are decidable for the following ltl formulas :        some work needs to be done in the future in formulating an exact decidable subset ( broader than the subset in comon and cortier @xcite ) of @xmath325 for satisfiability - checking . notice that the entire @xmath325 is undecidable for satisfiability - checking / model - checking , even when the next operator is dropped from the logic .",
    "this is because the satisfiability - checking problem for @xmath334 is undecidable , when @xmath5 is a discrete timed automaton , as shown in @xcite .",
    "a similar decidable subset of ltl formulas @xmath325 could be formulated for discrete timed pushdown systems , by combining theorem [ pio ] , the results in @xcite and @xcite .",
    "another issue is on the complexity analysis of the decision procedures presented in theorem [ basic11 ] and theorem [ pio ] .",
    "however , this issue is related to the complexity for the emptiness problem of npcms , which is still unknown , though it is believed that it can be derived along gurari and ibarra @xcite .",
    "we would like to thank the following students at wsu for reading an earlier draft of this paper : k. gjermundrod , h. he , a. khodjanov , c. li , j. nelson , g. xie , and l. yang .",
    "the work by oscar h. ibarra has been supported in part by nsf grant iis-0101134 .",
    "thanks also go to the anonymous referees for many useful suggestions .",
    "t. ball and s. k. rajamani ,  bebop : a symbolic model - checker for boolean programs , \" in _ spin model checking and software verification , proc .",
    "spin workshop _ , eds . k. havelund , j. penix and w. visser ( springer , berlin , 2000 ) pp .",
    "113130 .",
    "a. bouajjani , j. esparza and o. maler ,  reachability analysis of pushdown automata : application to model - checking , \" in _ concur97 , proc .",
    "on concurrency theory _ , eds .",
    "w. mazurkiewicz and j. winkowski ( springer , berlin , 1997 ) pp .",
    "135150 .",
    "a. bouajjani , r. echahed and r. robbana ,  on the automatic verification of systems with continuous variables and unbounded discrete data structures , \" in _ hybrid systems ii _",
    "p. j. antsaklis , w. kohn , a. nerode and shankar sastry ( springer , berlin , 1995 ) pp .",
    "6485 .",
    "h. comon and y. jurski ,  timed automata and the theory of real numbers , \" in _ concur99 , proc .",
    "10th intl .",
    "on concurrency theory _ , eds . jos c. m. baeten and s. mauw ( springer , berlin , 1999 ) pp .",
    "242257 .",
    "z. dang ,  binary reachability analysis of pushdown timed automata with dense clocks , \" in _ cav01 , proc .",
    "13th intl .",
    "on computer aided verification , _ eds . g. berry , h. comon and a. finkel ( springer , berlin , 2001 ) pp .",
    "506517 .",
    "z. dang , o. h. ibarra , t. bultan , r. a. kemmerer and j. su ,  binary reachability analysis of discrete pushdown timed automata , \" in _ cav00 , proc .",
    "12th intl .",
    "conf . on computer aided verification , _",
    "e. a. emerson , a. p. sistla ( springer , berlin , 2000 ) pp .",
    "z. dang , o. h. ibarra and p. san pietro ,  liveness verification of reversal - bounded multicounter machines with a free counter , \" in _ fsttcs01 , proc .",
    "21st intl .",
    "conf . on foundations of software technology and theoretical computer science ,",
    "r. hariharan , m. mukund and v. vinay ( springer , berlin , 2001 ) pp .",
    "132143 .",
    "z. dang , p. san pietro and r. a. kemmerer ,  on presburger liveness of discrete timed automata , \" in _ stacs 2001 , proc .",
    "18th annual symp . on theoretical aspects of computer science ,",
    "a. ferreira and h. reichel ( springer , berlin , 2001 ) pp .",
    "132143 .",
    "j. esparza and s. schwoon ,  a bdd - based model - checker for recursive programs , \" in _ cav01 , proc .",
    "13th intl .",
    "conf . on computer",
    "aided verification , _ eds . g. berry , h. comon and a. finkel ( springer , berlin , 2001 ) pp . 324336 .",
    "o. h. ibarra and z. dang ,  on removing the stack from reachability constructions with applications to presburger ltl satisfiability - checking , \" in _",
    "isaac 2001 , proc .",
    "12th intl .",
    "conf . on algorithms and computation _ eds .",
    "p. eades and t. takaoka ( springer , berlin , 2001 ) pp . 244256 .",
    "f. laroussinie , k. g. larsen and c. weise ,  from timed automata to logic - and back , \" in _ mfcs95 , proc .",
    "20th intl .",
    "symp . on mathematical foundations of computer science",
    "j. wiedermann and p. hajek ( springer , berlin , 1995 ) pp . 529539 .",
    "t. wilke ,  specifying timed state sequences in powerful decidable logics and timed automata , \" in _ ftrtft94 , proc .",
    "conf . on formal techniques in real - time and fault - tolerant systems",
    "h. langmaack , w. p. de roever and j. vytopil ( springer , berlin , 1994 ) pp ."
  ],
  "abstract_text": [
    "<S> we show that it is decidable whether a transitive mixed linear relation has an @xmath0-chain . using this result </S>",
    "<S> , we study a number of liveness verification problems for generalized timed automata within a unified framework . </S>",
    "<S> more precisely , we prove that ( 1 ) the mixed linear liveness problem for a timed automaton with dense clocks , reversal - bounded counters , and a free counter is decidable , and ( 2 ) the presburger liveness problem for a timed automaton with discrete clocks , reversal - bounded counters , and a pushdown stack is decidable .    </S>",
    "<S> zhe dang    and    # 1    # 1    # 1 # 1    p    v u * z*z    # 1    # 1#1^*int * # 1#1^*frac * </S>"
  ]
}
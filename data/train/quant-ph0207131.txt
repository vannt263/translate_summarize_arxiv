{
  "article_text": [
    "let @xmath0 be a multiplicative character and @xmath1 an additive character over a finite ring @xmath2 .",
    "the _ gauss sum _",
    "@xmath3 of this triplet @xmath4 is the inner product between @xmath5 and @xmath6 , that is : @xmath7 .",
    "gauss sums are useful on many fronts for the analysis of finite fields @xmath8 and rings @xmath9 . in combination with the closely related _ jacobi sums _ , they have been used to prove theorems about diophantine equations , difference sets , primality testing , et cetera .",
    "one can view gauss sums as the finite versions of the gamma function @xmath10 .",
    "see brendt et al .",
    "@xcite for a book entirely devoted to these topics .",
    "the theory of quantum computation investigates if the laws of quantum physics allow us to process information in a more efficient way than is possible by the classical , turing machine model of computation .",
    "strong support for the claim that quantum computers are indeed more powerful than classical ones was given in 1994 by peter shor who proved the existence of efficient quantum algorithms for factoring and the discrete logarithm problem @xcite .",
    "more recently , hallgren showed that also pell s equation can be solved in polynomial time on a quantum computer @xcite .",
    "the common ingredient of these ( and other ) quantum algorithms is the use of quantum fourier transform to extract the periodicity of an unknown function in time logarithmic in the size of the domain .",
    "see the book by nielsen and chuang for a thorough introduction to this field @xcite .    in this article",
    "we describe a quantum algorithm that , given the specification of the characters @xmath5 and @xmath6 , efficiently approximates the corresponding gauss sum , for @xmath2 a finite field @xmath11 or a ` @xmath12 ' ring @xmath13 .",
    "because determining the norm @xmath14 of a gauss sum is relatively straightforward , our algorithm focuses on estimating the angle @xmath15 in the equation @xmath16 .",
    "we describe a quantum transform that induces this angle as a relative phase by a mapping @xmath17 .",
    "because this transformation can be implemented efficiently , we can sample the output state @xmath18 times to get an estimation @xmath19 of the angle @xmath20 with expected error @xmath21 .",
    "the time complexity of this algorithm is @xmath22 . using a reduction from the discrete log problem to the approximation of gauss sums",
    ", we provide evidence that this is a hard task on a classical computer .",
    "a discussion on the merits of gauss sum estimation is included at the end of the article .",
    "section  [ sec : defs ] gives the definitions and known results that we will use for the estimation of gauss sums over finite fields .",
    "the basic quantum procedures that we use for our algorithm are defined in section  [ sec : quant ] ; the algorithm itself is described in section  [ sec : alg ] .",
    "next , we discuss the possibility of estimating gauss sums with classical algorithms .",
    "the relationship between this problem and the discrete logarithm problem , galois automorphisms and random walks is explained in section  [ sec : class ] .",
    "section  [ sec : rings ] gives some background that is necessary to define the gauss sum problem for finite rings . a quantum algorithm for this problem",
    "is given in section  [ sec : alg_ring ] .",
    "the final section  [ sec : concl ] discusses the connection between the presented algorithm for gauss sum estimation and other quantum algorithms .",
    "also the relative hardness of the problem with respect to other known problems is addressed . throughout the article ,",
    "results that are already known are indicated as ` facts ' .",
    "let @xmath23 denote the @xmath24th root of unity : @xmath25 .",
    "the _ trace _ of an element @xmath26 of the finite field @xmath11 over @xmath27 is @xmath28 .",
    "it can be shown that for every @xmath29 , its trace is an element of the base - field : @xmath30 . for any @xmath31",
    "we also have the related functions @xmath32 .",
    "these trace functions are all the linear functions @xmath33 ( note that @xmath34 gives the trivial function @xmath35 ) .",
    "when we write @xmath36 we interpret the value @xmath37 as an element of the set @xmath38 . for @xmath31 , the functions @xmath39 describe all possible additive characters @xmath40 .",
    "let @xmath41 be a primitive element of @xmath11 , i.e. the multiplicative group @xmath42 generated by @xmath41 equals @xmath43 . for each @xmath44 ,",
    "the function @xmath45 ( complemented with @xmath46 ) is a multiplicative character @xmath47 .",
    "also , every multiplicative character can be written as such a function . for a non - zero @xmath48 ,",
    "the discrete logarithm with respect to @xmath41 is defined by @xmath49 .",
    "hence , every multiplicative character can be expressed by @xmath50 for @xmath51 and @xmath52 .",
    "the trivial multiplicative character is denoted by @xmath53 and is defined by @xmath54 and @xmath55 for all @xmath51 . using the equality @xmath56 , it is easy to see that the pointwise multiplication between two characters establishes the isomorphism @xmath57 .    for the finite field @xmath11 , the multiplicative character @xmath5 , and the additive character @xmath58 , we define the _ gauss sum _ @xmath3 by @xmath59    let @xmath60 be the multiplicative character defined by : @xmath61 , @xmath62 , @xmath63 , @xmath64 and @xmath65 .",
    "we see that @xmath66 .",
    "obviously , @xmath67 , @xmath68 , and @xmath69 for @xmath70 .",
    "in general , for @xmath71 we have the following fact .    [",
    "ft : beta ] for @xmath72 it holds that @xmath73 .",
    "for @xmath74 we have @xmath75 , where we used the substitution @xmath76 and the multiplicativity of @xmath5 .",
    "from now on we will assume that the gauss sum concerns a nontrivial character @xmath5 and @xmath71 .",
    "the inverse of a character @xmath5 is defined by @xmath77 for all @xmath51 and @xmath78 ( where @xmath79 is the complex conjugate of @xmath80 ) .",
    "it is known that the norm of a gauss sum obeys @xmath81 , and more specifically @xmath82 .",
    "if we want to define the problem of estimating gauss sums as a computational task , we have to make clear what the length of the input is .",
    "as stated above , any multiplicative character @xmath83 can be described by a triplet @xmath84 , where @xmath85 is a generator of @xmath43 and @xmath86 the index of @xmath5 . as a result , the specification of the problem `` what is @xmath87 ? '' as defined below , requires no more than @xmath88 bits of information .",
    "let @xmath11 be a finite field , @xmath5 a nontrivial character over @xmath11 and @xmath89 .",
    "what is ( approximately ) the angle @xmath15 in the gauss sum equation @xmath90 ?    a _",
    "quadratic character _ is a nontrivial @xmath5 such that @xmath91 for all @xmath26 . by the isomorphism @xmath92 one sees that such a character is only possible if @xmath24 is odd and where @xmath5 is defined by @xmath93 . unlike the case of general characters , the gauss sums of such quadratic characters are known completely : @xmath94 if @xmath95 , and @xmath96 if @xmath97 .",
    "( see theorem  11.5.4 in @xcite for a proof . )",
    "in this section we give a brief overview of the known results on quantum computation that are relevant for the rest of this article . for more information ,",
    "we refer the reader to @xcite .",
    "[ ft : phest ] let @xmath20 be an unknown phase @xmath98 of the qubit state @xmath99 .",
    "if we measure this qubit in the orthogonal basis @xmath100 and @xmath101 , then the respective outcome probabilities are @xmath102 and @xmath103 .",
    "hence , if we can sample @xmath104 copies of @xmath105 ( with various different angles @xmath106 ) , then we can obtain an estimate @xmath19 of the unknown @xmath20 within an expected error of @xmath107 .",
    "shor s famous article @xcite implies the following result .",
    "[ ft : dl ] there exists a quantum algorithm that , given a base @xmath108 and an element @xmath109 , determines the discrete logarithm @xmath110 in time polylog(@xmath111 ) .",
    "let @xmath112 .",
    "the quantum fourier transform @xmath113 over the finite field @xmath11 , which is defined as the unitary mapping @xmath114 for every @xmath115 , can be implemented efficiently on a quantum computer .",
    "similarly , we can also perform the fourier transform over the group @xmath13 in an efficient way .",
    "sometimes we use the hat notation in @xmath116 to denote the fourier transform of a state .      for every function @xmath117",
    ", we define the state @xmath118 we also allow ourselves to use the shorthand @xmath119 , for any set @xmath120 .    in this article we are mostly concerned with the preparation of states @xmath121 that refer to a multiplicative character @xmath0 , which is zero for those values that are not in the multiplicative subgroup @xmath122 and that are powers of @xmath123 for the elements that are in @xmath122 .",
    "[ ft : phkbt ] if the computation @xmath124 with @xmath125 can be performed efficiently , then the phase changing transformation @xmath126 can be performed exactly and coherently in time polylog(@xmath111 ) as well .",
    "first , create the state @xmath127 , by applying the fourier transform over @xmath128 to the rightmost part of the initial state @xmath129 .",
    "next , consider the evolution that is established by subtracting @xmath130 to that same rightmost register : @xmath131 where we used the substitution @xmath132 and the additivity @xmath133 .",
    "clearly , the overall phase change of this transformation is the one desired .",
    "the phase kickback trick enables us to induce the character values @xmath134 as phases in a quantum state . for those @xmath26 that have @xmath135 we will use the amplitude amplification process of grover s search algorithm to change the amplitudes of the states @xmath136 .",
    "[ ft : stateprep ] let @xmath137 be function of which we know the total ` weight ' @xmath138 , but not the specific positions for which @xmath139 .",
    "the corresponding state @xmath140 can be efficiently and exactly prepared on a quantum computer with @xmath141 queries to the function @xmath142 .",
    "see the standard literature ( @xcite for example ) .",
    "the facts  [ ft : phkbt ] and [ ft : stateprep ] show that it is easy to create the state @xmath143 with a constant number of queries to the function @xmath5 .",
    "furthermore , we know that @xmath5 , specified by the triplet @xmath84 , is defined by @xmath144 for @xmath29 and @xmath61 . using shor s discrete logarithm algorithm ( fact  [ ft : dl ] ) , we can calculate this discrete log , from which it follows that given @xmath84 , we can create the state @xmath121 efficiently in the following way .    for a finite field @xmath11 and @xmath84 the specification of a multiplicative character @xmath5 , the state @xmath145 and its fourier transform @xmath146",
    "can be created in polylog(@xmath147 ) time steps on a quantum computer .",
    "first , use the amplitude amplification process on the set @xmath11 and the fourier transform over @xmath148 to create the initial state @xmath149 next , in superposition over all @xmath150 states , calculate the discrete logarithm values @xmath151 and subtract @xmath152 to the state in the rightmost register . by the phase kickback trick of fact  [ ft : phkbt ]",
    "we thus obtain the desired state : @xmath153 given this construction , we can also create its fourier transform @xmath146 by using the quantum fourier transform on @xmath121 .",
    "with the ingredients of the last two sections , we are now ready to describe the quantum algorithm that estimates the angle @xmath20 of the gauss sum @xmath16 over finite fields .",
    "the crucial part of our algorithm relies on the interaction between the fourier transform @xmath113 and the multiplicative character @xmath5 .",
    "using the fact that for nontrivial characters @xmath154 , we are able to perform a @xmath20-phase change . by sampling this unknown phase factor",
    "we can obtain an arbitrary precise estimation of @xmath20 and thus of @xmath87 .",
    "consider a finite field @xmath11 , a nontrivial character @xmath5 and a @xmath155 .",
    "if we apply the quantum fourier transform @xmath156 over this field to the state @xmath121 , followed by a phase change @xmath157 , then we generate an overall phase change according to @xmath158    first , we note that the output after the fourier transform @xmath113 looks like @xmath159 the expression between the big parentheses equals @xmath160 , which equals @xmath161 for @xmath162 and is zero if @xmath163 . in sum , we thus see that @xmath164 such that indeed after @xmath157 we have created the eigenstate @xmath165 .    with the above algorithm we are now able to efficiently estimate the angle @xmath20 in the equation @xmath90 .",
    "[ thm : qalgff ] for any @xmath166 , there exists a quantum algorithm that estimates the phase @xmath20 in @xmath167 , with expected error @xmath168 < \\varepsilon$ ] .",
    "the time complexity of this algorithm is bounded by @xmath169 .    by the earlier algorithm",
    ", we know that we can induce the phase change @xmath170 in polylog(@xmath147 ) time . if we do this in superposition with a ` stale ' component @xmath171 , then we have produced the relative phase shift @xmath172 .",
    "as described in fact  [ ft : phest ] , we can estimate this phase by measuring the states along the axis @xmath173 for different @xmath106 .",
    "after @xmath18 of such observations , the estimate @xmath19 of the true @xmath20 will have expected error @xmath168 < \\varepsilon$ ] .      closely related to gauss sums are the _ jacobi sums , _ which play an especially important role in primality testing @xcite .    for a finite field @xmath11 and two multiplicative characters @xmath5 and @xmath174 , the _",
    "jacobi sum _",
    "@xmath175 is defined by @xmath176    clearly , @xmath177 . with @xmath53 the trivial character and @xmath174 a nontrivial character we have @xmath178 , @xmath179 , and @xmath180 .",
    "( note that we use the convention @xmath54 for the primitive character , not @xmath181 . )",
    "the other , less trivial , cases have the following connection with gauss sums , which is proven in section  2 of @xcite .    for @xmath5 and @xmath174",
    "be nontrivial multiplicative characters over @xmath11 , with @xmath182 nontrivial as well , it holds that @xmath183 . as a result , @xmath184 .    using the gauss sum estimation algorithm of theorem  [ thm : qalgff ] , there exists a quantum algorithm that estimates the angle @xmath185 in @xmath186 with expected error @xmath21 with time complexity @xmath169 .",
    "the obvious next question now is : how difficult it is to estimate gauss sums with classical computers ?",
    "although we are not able to prove that this is hard , we can give the following reduction , which indicates that a classical polynomial time algorithm is unlikely .",
    "let @xmath11 be a finite field with primitive element @xmath41 , @xmath187 a multiplicative character and @xmath26 an element of @xmath43 . with an oracle that @xmath21-approximates the angle @xmath20 of the gauss sum @xmath87 for arbitrary @xmath188 , we can efficiently determine , classically , the discrete @xmath151 .    with @xmath189",
    ", we try to determine this @xmath190 . for @xmath191",
    "we observe , using lemma  [ ft : beta ] , that : @xmath192 ; call this angle @xmath193 . using the ` powering algorithm ' ( @xmath194 et cetera ) we can calculate @xmath195 for any @xmath196 in polylog(@xmath147 ) time , hence we can use our oracle to @xmath21-approximate @xmath197 for any such @xmath198 . via the equality @xmath199 this will give us information on the value of @xmath200 depending on @xmath198 . by estimating @xmath197 for @xmath201",
    ", we can thus get a reliable estimation of all @xmath202 bits of @xmath203 , thereby calculating the desired value @xmath204 .",
    "the previous lemma shows that it is not trivial to estimate the gauss sum @xmath87 even if we already know the value @xmath206 .",
    "a similar result seems to hold for the estimation of @xmath207 while having information on @xmath87 .",
    "as noted earlier , @xmath87 is an element of @xmath208 .",
    "compare now the two expressions for @xmath87 and @xmath209 , respectively , @xmath210 and @xmath211 .",
    "this shows that under the homomorphism @xmath212 , with @xmath213 , we have @xmath214 .",
    "( if @xmath215 then this mapping is a galois automorphism @xmath216 .",
    "if @xmath217 then the mapping @xmath218 is not necessarily bijective , and hence not an automorphism . )",
    "this result suggests that knowledge about the gauss sum @xmath87 is sufficient to efficiently determine @xmath209 for all other @xmath219 .",
    "however , it should be noted that the degree @xmath220 $ ] equals @xmath221 , which is exponential in the input size @xmath202 . as a result ,",
    "the @xmath218 mapping concerns an exponential number of coefficients , and is hence not efficient .",
    "let the finite field be a base field @xmath27 .",
    "for every @xmath51 , the terms @xmath223 in the summation @xmath224 are unit norm vectors in @xmath225 that together describe a walk in @xmath225 ( of @xmath226 steps ) from @xmath35 to the final outcome @xmath227 . viewed like this , an obvious classical attempt to approximate @xmath3 consists of trying to estimate the ` average direction ' of the terms @xmath228 by sampling a small number of @xmath26 values .",
    "it should also be obvious that this method will not work for random samples that are not polynomial in @xmath24 .",
    "as the final destination @xmath3 is only @xmath229 away from the origin , a significant average direction can only be obtained with a sample size that is polynomial in @xmath24 .",
    "in fact , the just described walk shares many of the properties that a truly random walk in @xmath225 would have .",
    "not only does the final distance coincide with the expected distance norm of a random walk , but also the sequence of steps exhibits the nonregularity of a random process .",
    "it is easy to verify that the autocorrelation of the sequence @xmath230 is near - zero : @xmath231={\\mbox{$\\frac{-e(-s)}{p-1}$}}$ ] for @xmath232 .",
    "these pseudorandom characteristics do not change when we indexing of the summation ( and hence of the sequence ) to @xmath233 with @xmath41 a generator of @xmath234 , as this sequence obeys @xmath235={\\mbox{$\\frac{-\\chi(-s)}{p-1}$}}$ ] .",
    "see the following example for an illustration of this pseudorandom behavior .",
    "[ ex : prwalk ] consider the gauss sum for the finite field @xmath236 , with multiplicative generator @xmath237 , and the character defined by @xmath238 .",
    "calculations show that @xmath239 .",
    "figure  [ fig : prwalk ] shows the two pseudorandom walks that are defined by the sequences @xmath230 ( left ) and @xmath240 ( right ) .",
    "although the final quantum algorithm for estimating gauss sums over rings @xmath13 is not much more complicated than the finite field algorithm , the theory surrounding it is somewhat more elaborate .",
    "a large part of this section concerns the proper description of a multiplicative character over @xmath13 and its various properties .",
    "these details are necessary to get a valid definition for the input size of the gauss sum problem over @xmath13 ( see definition  [ def : dir ] ) .",
    "again , the @xmath111th root of unity is denoted by @xmath241 . from @xcite ,",
    "section  1.4 we copy the following facts . consider the multiplicative subgroup @xmath242 with the prime decomposition @xmath243 .",
    "following the chinese remainder theorem we have @xmath244 , such that @xmath245 , with @xmath106 euler s totient function .",
    "furthermore we have @xmath246 hence @xmath242 is cyclic if and only if @xmath247 or @xmath248 , with @xmath24 an odd prime .",
    "a function @xmath249 is a dirichlet character if for all @xmath250 we have @xmath251 and @xmath135 if and only if @xmath252 .    using the multiplicative decomposition @xmath253",
    ", we see that all dirichlet characters @xmath254 can be decomposed as @xmath255 with @xmath256 for every @xmath257 , and thus @xmath258 .    for @xmath24 an odd prime",
    "the character @xmath259 can be described by the expression @xmath260 , where @xmath41 is a generator of the cyclic @xmath261 , @xmath262 and @xmath263 .",
    "for @xmath264 we only have the trivial character @xmath53 , while for @xmath265 we have two possibilities : @xmath53 and @xmath266 with @xmath267 and @xmath268 .",
    "if @xmath5 is a character over @xmath269 with @xmath270 , then we have to decompose the character in two terms .",
    "the group @xmath269 is generated by @xmath271 and @xmath272 ( see @xcite ) , hence the character can be described by the pair @xmath273 such that for all @xmath274 and @xmath275 we have @xmath276 ( while @xmath135 if @xmath26 is even ) .",
    "[ def : dir ] let @xmath277 , with @xmath278 ( see equation  [ eq : equiv ] ) . the specification of a dirichlet character @xmath249 is done by three sequences @xmath279 , with the prime decomposition @xmath280 of @xmath111 , the generators @xmath281 of the multiplicative groups , and @xmath282 the specification of the characters @xmath283 in the definition @xmath284 with @xmath285 while @xmath286 if @xmath287 .    with this definition",
    ", we see that the specification of a dirichlet character @xmath249 requires only @xmath288 bits of information . hence , in the context of such characters , an algorithm that requires polylog(@xmath111 ) steps is efficient , while a running time polynomial in @xmath111 is inefficient .",
    "let @xmath279 be the specification of a character @xmath249 .",
    "given @xmath111 and @xmath279 , we can induce the phase change @xmath289 for any @xmath290 efficiently with a quantum algorithm .    to compute the phase change @xmath291 we perform the following two steps ( we use a similar protocol for the @xmath292 part of @xmath5 ) :    1 .",
    "use shor s discrete log algorithm ( fact  [ ft : dl ] ) to determine the value @xmath293 .",
    "2 .   use the phase kickback trick ( fact  [ ft : phkbt ] ) to induce the phase change @xmath294 .    perform the phase changes for all @xmath283 to the same @xmath26 state , such that the overall transformation will be : @xmath295 .",
    "a character @xmath5 is _ trivial _ if @xmath296 for all @xmath290 , that is , if @xmath219 is the zero vector .",
    "the _ conductor _ @xmath297 of a character @xmath249 is the minimum value @xmath298 for which there is a character @xmath299 such that @xmath300 where @xmath53 is the trivial character over @xmath13 .",
    "we call @xmath5 a _ primitive _ character if @xmath5 has the maximum conductance @xmath301 .",
    "the trivial character has conductance @xmath302 and is not primitive .",
    "the field @xmath303 has @xmath304 primitive characters , whereas the ring @xmath305 with @xmath306 has @xmath307 such characters . for @xmath308 with @xmath306",
    "this means that all characters @xmath309 are primitive ( @xmath310 has no primitive characters , and @xmath311 has one ) . for @xmath305 with @xmath24 and",
    "odd prime , a character @xmath312 has conductance @xmath313 where @xmath314 , while @xmath315 . as a result @xmath316 is primitive , if and only if @xmath317 . in general",
    ", a character over the ring @xmath13 with @xmath318 , and accordingly @xmath255 , is primitive if and only if all @xmath319 factors are primitive .",
    "the definition of gauss sums over @xmath13 is a natural generalization of the definition for finite fields .    for the ring @xmath13 , the dirichlet character @xmath5 , and the additive character @xmath321",
    ", we define the _ gauss sum _ @xmath3 by @xmath322    note that the gauss sum terms are the coefficients of the fourier transform of the character : @xmath323 , with the fourier transform over the additive group @xmath13 .",
    "see section  1.6 in @xcite for the proofs of the facts below .",
    "[ ft : nontrivzerosum ] let @xmath5 be a nontrivial dirichlet character over @xmath13 .",
    "the summation of all @xmath5 values obeys @xmath324 .",
    "if @xmath5 is trivial , then the sum equals @xmath325 .",
    "[ ft : charfactor ] let @xmath5 be a character over the ring @xmath326 , such that @xmath327 with @xmath319 a multiplicative character over @xmath328 for every @xmath329 .",
    "with @xmath330 the integers such that @xmath331 , it holds that @xmath332 .",
    "( such @xmath333 always exist because @xmath334 , and hence @xmath335 , for all @xmath274 . )",
    "this last lemma shows that we should only be concerned about gauss sums over rings @xmath305 , the size of a prime power . for trivial characters ,",
    "such gauss sums are easily calculated .",
    "[ ft : trivialchar ] let @xmath336 be the trivial character , and @xmath337 with @xmath338 , then @xmath339    nontrivial characters that are not primitive can be reduced to primitive characters over smaller groups in the following way .",
    "[ ft : periodchar ] let @xmath259 be a non - primitive character with conductance @xmath313 , then the corresponding gauss sum obeys ( note that @xmath5 modulo @xmath313 will be primitive ) : @xmath340    similar to the finite field case , the @xmath188 index of the additive character can be ` factored out ' as @xmath341 :    [ ft : primchar ] let @xmath5 be a primitive character over @xmath13 , then @xmath342 , and hence , equivalently , @xmath343 .",
    "also , @xmath344 holds .",
    "for any @xmath166 , there exists a quantum algorithm that estimates the phase @xmath20 in latexmath:[$g({{\\mathbb z}}/n{{\\mathbb z}},\\chi,\\beta )   =    with expected error @xmath168<\\varepsilon$ ] .",
    "the time complexity of this algorithm is bounded by @xmath346 .",
    "also the norm @xmath347 can be determined in polylog(@xmath111 ) time .    1 .",
    "determine the integers @xmath348 as mentioned in fact  [ ft : charfactor ] .",
    "2 .   calculate the gauss sums @xmath349 for the trivial characters @xmath319 , using fact  [ ft : trivialchar ] .",
    "continue with the reduced product of nontrivial characters .",
    "3 .   re - express the gauss sums terms for the periodic characters , using fact  [ ft : periodchar ] .",
    "continue with the reduced product of primitive characters .",
    "4 .   use algorithm  [ alg : primchar ] to calculate the norms and estimate the phases of the gauss sums of the remaining primitive characters ( using the standard phase estimation technique of fact  [ ft : phest ] this requires @xmath346 steps ) .",
    "[ alg : primchar ] let @xmath249 be a primitive character and @xmath350 .",
    "the following algorithm calculates the norm and estimates the phase @xmath20 in the gauss sum @xmath351 .    1 .",
    "if @xmath352 then conclude that @xmath353 ( see fact  [ ft : primchar ] ) .",
    "2 .   otherwise ,",
    "use shor s discrete log algorithm to determine the @xmath354 factor in the equality @xmath355 ( fact  [ ft : primchar ] ) .",
    "continue with the estimation of @xmath20 in @xmath356 .",
    "3 .   apply the quantum fourier transform @xmath357 over the ring @xmath13 to the state @xmath121 , followed by a phase change @xmath358 for all @xmath359 in the superposition @xmath360 .",
    "because for primitive characters @xmath361 ( fact  [ ft : primchar ] ) , this transformation generate an overall phase change according to @xmath170 . like in theorem",
    "[ thm : qalgff ] , we use this phase change to estimate @xmath20 to the required precision @xmath21 .",
    "it should be noted that for primitive characters over rings @xmath305 with @xmath306 the gauss sums @xmath362 are known ( section  1.6 in @xcite ) .",
    "hence step  3 of the above algorithm is not always necessary .",
    "the algorithms that we presented in this article rely on the specific interaction between multiplicative characters and fourier transformations , some of which have been described earlier in @xcite and @xcite .",
    "typical for these results is the fact they are defined for finite fields or finite rings but not for groups , which indicates a departure from the hidden subgroup framework for quantum algorithms @xcite .",
    "what is new about the results presented here , is that they describe quantum algorithms for a natural problem that does not assume the presence of a black box function .",
    "the only other natural problems for which an efficient quantum algorithm has been constructed are those described by shor @xcite and hallgren @xcite , both of which deal with number theory as well .    for the results of this article",
    "it remains therefore an important open question if gauss sum estimation is hard classically , even under the assumption that factoring and discrete logarithms are easy .",
    "if this is indeed the case , another related question remains : which problems reduce to gauss sum estimation that do not reduce to factoring or the discrete logarithm problems ?",
    "we would like to thank vinay deolalikar , hendrik lenstra and ronny roth for helpful discussions about the topics in this article .",
    "richard cleve , artur ekert , chiara macchiavello , and michele mosca , `` quantum algorithms revisited '' , _ proceedings of the royal society of london a , _ volume  454 , pages  339354 ( 1998 ) ; quant - ph report no",
    ".  9708016            sean hallgren , `` polynomial - time quantum algorithms for pell s equation and the principal ideal problem '' , _ proceedings of the 34th annual acm symposium on theory of computing , _ pages  653658 , acm press ( 2002 )      michele mosca and artur ekert , `` the hidden subgroup problem and eigenvalue estimation on a quantum computer '' , _ proceedings of the 1st nasa international conference on quantum computing and quantum communications _ , lecture notes in computer science , volume  1509 , pages  174188 ( 1999 )"
  ],
  "abstract_text": [
    "<S> we present an efficient quantum algorithm for estimating gauss sums over finite fields and finite rings . </S>",
    "<S> this is a natural problem as the description of a gauss sum can be done without reference to a black box function . with a reduction from the discrete logarithm problem to gauss sum estimation we also give evidence that this problem is hard for classical algorithms . </S>",
    "<S> the workings of the quantum algorithm rely on the interaction between the additive characters of the fourier transform and the multiplicative characters of the gauss sum . </S>"
  ]
}
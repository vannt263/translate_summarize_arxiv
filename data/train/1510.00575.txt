{
  "article_text": [
    "random graphs are used to model large networks that consist of particles , called nodes , which are possibly linked to each other by edges .",
    "the study of random graphs goes back to the works of  @xcite and  @xcite .",
    "since then , numerous random graph models have been introduced and studied in the literature . for an overview",
    "we refer the reader to  @xcite .",
    "empirical studies of large data sets of real - life networks have shown that in many cases the degrees of two nodes belonging to the same edge are not independent ( where the degree of a node is defined to be the number of edges attached to it ) .",
    "it is observed that in some types of real - life networks the degree of a node is positively related to the degrees of its linked neighbors , while in other situations the degree of a node is negatively related to the degrees of its linked neighbors .",
    "this property is called _ assortativity _ or _ assortative mixing_. it has been discovered by  @xcite that financial networks typically show negative assortativity and that the strength of the assortativity influences the vulnerability of the financial network to shocks , see also  @xcite .",
    "in contrast , social networks tend to be positive assortative , see for instance  @xcite . more examples of assortative networks are presented in  @xcite and  @xcite , where also quantities to measure assortativity in networks are proposed . on the other hand , there is only little literature about explicit constructions of random graphs showing assortative mixing .",
    "established constructions of directed random graphs with given bi - degree distribution , called _ configuration graphs _ , lead to _ non - assortative _ graphs , see for instance the construction presented in @xcite . here , the bi - degree of a node @xmath0 is a tuple @xmath1 , where @xmath2 is the number of edges arriving at node @xmath0 ( called _ in - degree _ ) and @xmath3 is the number of edges leaving from node @xmath0 ( called _ out - degree _ ) , and we say that node @xmath0 is of type @xmath1 , see figure  [ figure : node type ] for an illustration .",
    "is of type @xmath4 and node @xmath5 is of type @xmath6 .",
    "edge @xmath7 is of type @xmath8.,width=264 ]    in this article we extend the non - assortative construction presented in  @xcite by giving an explicit algorithm which allows to construct directed configuration graphs with a pre - specified assortativity based on a concept introduced in  @xcite .",
    "namely , @xcite proposed to specify the graph not only through their node - types , but also through their edge - types .",
    "we define the type of an edge @xmath7 connecting node @xmath0 to node @xmath5 by a tuple @xmath9 with @xmath10 denoting the out - degree of node @xmath0 and @xmath11 denoting the in - degree of node @xmath5 , see figure  [ figure : node type ] for an illustration .",
    "this notion of edge - types is directly related to the notion of assortativity . in the positive assortative case @xmath10",
    "is positively related to @xmath11 meaning that edges tend to connect nodes having similar degrees , and accordingly for the negative assortative case .",
    "if @xmath10 is independent of @xmath11 , then the graph is non - assortative .",
    "therefore , @xcite proposed to construct graphs with given node - type distribution @xmath12 describing the nodes _ and _ with given edge - type distribution @xmath13 describing the edges , while different choices of @xmath13 result in different types of assortativity in the constructed graphs , see figure  [ figure : introduction ] for examples .    .33   with @xmath14 nodes .",
    "they all have the same node - type distribution @xmath12 but different edge - type distributions @xmath13 . there are four different types of nodes present in each graph : @xmath15 , @xmath16 , @xmath17 and @xmath18 . edges of identical type are colored the same .",
    "edges that are arriving or leaving a highest - degree node are colored in different shades of blue .",
    "these edges are mainly present in the negative assortative case ( a ) . in the positive assortative case ( c ) , mainly nodes of the same type are connected .",
    "these edges are colored light blue , purple , orange and green .",
    "all other possible edges are colored red , which significantly appear only in ( b ) .",
    ", title=\"fig : \" ]    .33   with @xmath14 nodes .",
    "they all have the same node - type distribution @xmath12 but different edge - type distributions @xmath13 .",
    "there are four different types of nodes present in each graph : @xmath15 , @xmath16 , @xmath17 and @xmath18 .",
    "edges of identical type are colored the same .",
    "edges that are arriving or leaving a highest - degree node are colored in different shades of blue .",
    "these edges are mainly present in the negative assortative case ( a ) . in the positive assortative case ( c ) ,",
    "mainly nodes of the same type are connected .",
    "these edges are colored light blue , purple , orange and green .",
    "all other possible edges are colored red , which significantly appear only in ( b ) .",
    ", title=\"fig : \" ]    .33   with @xmath14 nodes .",
    "they all have the same node - type distribution @xmath12 but different edge - type distributions @xmath13 .",
    "there are four different types of nodes present in each graph : @xmath15 , @xmath16 , @xmath17 and @xmath18 .",
    "edges of identical type are colored the same .",
    "edges that are arriving or leaving a highest - degree node are colored in different shades of blue .",
    "these edges are mainly present in the negative assortative case ( a ) . in the positive assortative case ( c ) , mainly nodes of the same type are connected .",
    "these edges are colored light blue , purple , orange and green .",
    "all other possible edges are colored red , which significantly appear only in ( b ) .",
    ", title=\"fig : \" ]    nevertheless , there was not an explicit construction given in  @xcite .",
    "the aim of this article is to construct random graphs where nodes and edges follow pre - specified given bivariate distributions @xmath12 and @xmath13 , and to give an explicit mathematical meaning to these distributions .",
    "let us first interpret the meaning of distributions @xmath12 and @xmath13 in more detail .",
    "node - type distribution @xmath12 has the following interpretation .",
    "assume we have a large directed network and we choose _ at random _ a node @xmath0 of that network , then the type @xmath1 of @xmath0 has distribution @xmath12 .",
    "similarly , edge - type distribution @xmath13 should be understood as follows .",
    "if we choose _ at random _ an edge @xmath19 of a large network , then its type @xmath9 has distribution @xmath13 .",
    "this concept of @xmath12 and @xmath13 distributions seems straightforward , however , it needs quite some care in order to give a rigorous mathematical meaning to these distributions , the difficulty lying in the `` randomly '' chosen node and edge obeying @xmath12 and @xmath13 , respectively : the graph as total induces dependencies between nodes and edges which implies that the exact distributions can only be obtained in an asymptotic sense ( this will be seen in the construction below ) .",
    "we give an explicit algorithm to construct a directed assortative configuration graph with a given number of nodes and given distributions @xmath12 and @xmath13 , and we prove that the type of a randomly chosen node of the resulting graph converges in distribution to @xmath12 as the size of the graph tends to infinity .",
    "similarly , the type of a randomly chosen edge converges in distribution to @xmath13 .",
    "these convergence results give a rigorous mathematical meaning to @xmath12 and @xmath13 in line with their interpretation given above .",
    "the proposed algorithm allows for self - loops and multiple edges . in order to obtain a simple graph",
    "we delete all self - loops and multiple edges , and we show that the convergence results still hold true for the resulting simple graph .",
    "recently , an alternative approach to construct assortative configuration graphs with given distributions @xmath12 and @xmath13 was proposed in  @xcite using techniques from  @xcite .",
    "our construction is different from  @xcite and more in the spirit of  @xcite .",
    "moreover , we give a rigorous mathematical meaning to the given distributions @xmath12 and @xmath13 which relies on the law of large numbers only .       in section  [ section : model ]",
    "we introduce the model and state our main results .",
    "section  [ section : algorithm ] specifies the algorithm to generate directed assortative configuration graphs .",
    "the implementation of the algorithm in the programming language can be downloaded from : @xmath20 in section  [ section : examples ] we illustrate examples of assortative configuration graphs generated by our algorithm showing different assortative mixing .",
    "the proofs of the results are given in section  [ section : proofs ] .",
    "consider fixed finite integers @xmath21 and @xmath22 which describe the maximal in- and out - degree of a node , respectively . for @xmath23 and @xmath24 define @xmath25_l=\\{l,\\ldots , n\\}$ ] . for @xmath26_0 $ ] and",
    "@xmath27_0 $ ] we say that node @xmath0 is of type @xmath28 if the in - degree of @xmath0 is @xmath29 and the out - degree of @xmath0 is @xmath30 . for @xmath27_1",
    "$ ] and @xmath26_1 $ ] we say that a directed edge @xmath7 is of type @xmath31 if the out - degree of @xmath0 is @xmath30 and the in - degree of @xmath5 is @xmath29 .",
    "figure  [ figure : node type ] illustrates the notions of node- and edge - types . in the remainder",
    ", letter @xmath29 always refers to in - degree and letter @xmath30 to out - degree .",
    "consider two bivariate probability distributions @xmath32_0,k\\in[k]_0 }   \\qquad \\text{with $ \\sum_{j\\in[j]_0,k\\in[k]_0}p_{j , k}=1$;}\\\\ q&=&(q_{k , j})_{k\\in[k]_1 , j\\in[j]_1 }   \\qquad \\text{with $ \\sum_{k\\in[k]_1,j\\in[j]_1}q_{k , j}=1$}.\\end{aligned}\\ ] ] we call @xmath12 node - type distribution and @xmath13 edge - type distribution . we denote the respective marginal distributions of @xmath12 and @xmath13 by @xmath33_0 } p_{j , k ' } \\qquad \\text{and } \\qquad   p_k^+ ~=~ \\sum_{j'\\in[j]_0 } p_{j',k } , \\qquad \\text{$j\\in[j]_0 $ and $ k\\in[k]_0 $ ; } \\\\ q_k^+ & = & \\sum_{j'\\in[j]_1 } q_{k , j ' }   \\qquad \\text{and } \\qquad q_j^- ~=~ \\sum_{k'\\in[k]_1 } q_{k',j } , \\qquad \\text{$k\\in[k]_1 $ and $ j\\in[j]_1$}. \\end{aligned}\\ ] ] in the remainder , superscript `` @xmath34 '' always refers to in - degree and superscript `` @xmath35 '' to out - degree .",
    "for instance , @xmath36_0}$ ] denotes the in - degree distribution of nodes .",
    "observe that in a given graph the number of edges @xmath7 with out - degree of @xmath0 being @xmath37_1 $ ] is equal to @xmath30 times the number of nodes having out - degree @xmath30 , and similarly for the number of nodes having in - degree @xmath38_1 $ ] .",
    "this relation between nodes and edges implies that we can not choose @xmath12 and @xmath13 independently of each other to achieve that nodes and edges in the constructed graph follow @xmath12 and @xmath13 , respectively .",
    "we therefore assume that @xmath12 and @xmath13 satisfy the following consistency conditions , see also  @xcite and  @xcite , which implies that the above observation holds true in expectation in graphs where nodes and edges follow distributions @xmath12 and @xmath13 , respectively .",
    "@xmath39_1 ; \\\\\\label{condition 3}\\tag{c2 } q_j^-&~=~jp_j^-/z ,     \\qquad j\\in [ j]_1,\\end{aligned}\\ ] ] with _ mean degree _ @xmath40_0 } k p_k^+$ ] .",
    "observe that conditions   and   require @xmath40_0 } k",
    "p_k^+ = \\sum_{j \\in [ j]_0 } j p_j^->0 $ ] .",
    "this says that , in expectation , the sum of in - degrees equals the sum of out - degrees if nodes and edges follow distributions @xmath12 and @xmath13 , respectively .",
    "given the number of nodes @xmath41 and given distributions @xmath12 and @xmath13 satisfying   and   the goal is to construct a graph such that the following statement is true in an asymptotic sense as the size @xmath42 of the graph tends to infinity : the type of a randomly chosen node has distribution @xmath12 and the type of a randomly chosen edge has distribution @xmath13 .",
    "the following theorem shows that this is indeed the case for graphs constructed by the algorithm provided in section  [ section : algorithm ] and , hence , the theorem gives an explicit mathematical meaning to @xmath12 and @xmath13 .",
    "[ lemma : random degrees ] fix @xmath43 .",
    "let @xmath44 be the types of @xmath45 randomly chosen nodes of the graph generated by the algorithm provided in section  [ section : algorithm ] .",
    "then , @xmath46 where @xmath47 are @xmath45 independent random variables having distribution  @xmath12 .",
    "similarly , the types of @xmath45 randomly chosen edges converge in distribution , as @xmath48 , to a sequence of @xmath45 independent random variables having distribution  @xmath13 .",
    "if we consider a graph where nodes and edges follow distributions @xmath12 and @xmath13 , respectively , then we expect that the relative number of nodes of type @xmath28 is close to @xmath49 and that the relative number of edges of type @xmath31 is close to @xmath50 . theorem  [ lemma : empirical distributions 2 ] below makes this statement precise for graphs constructed by the algorithm provided in section  [ section : algorithm ] . to formulate the theorem , denote by @xmath51 the number nodes of type @xmath28 , @xmath26_0 $ ] and @xmath52_0 $ ] , and by @xmath53 the number edges of type @xmath31 , @xmath27_1 $ ] and @xmath54_1 $ ] , of the constructed graph of size @xmath42 . the total number of edges we denote by @xmath55 .",
    "theorem  [ lemma : empirical distributions 2 ] says that the relative frequencies @xmath56 and @xmath57 converge to @xmath49 and @xmath50 , respectively , in probability as @xmath48 .",
    "[ lemma : empirical distributions 2 ] for the random graph constructed by the algorithm provided in section  [ section : algorithm ] we have for any @xmath58 @xmath59_0 , k\\in [ k]_0 } \\left| \\frac{\\mcv_{j , k}}{n } - p_{j , k }    \\right|   + \\sum_{k \\in [ k]_1 , j\\in [ j]_1 } \\left| \\frac{\\mce_{k , j } } { \\mce } - q_{k , j }     \\right| > \\varepsilon \\right ] ~=~0.\\ ] ]    the algorithm provided in section  [ section : algorithm ] generates a graph possibly not being simple , i.e.  it may contain self - loops and multiple edges . to obtain a simple graph we delete ( erase ) all self - loops and multiple edges , and",
    "we call the resulting graph _ erased configuration graph_. the following theorem states that the asymptotic results still hold true for the erased configuration graph .    [ theorem : simple ] the results of theorem  [ lemma : random degrees ] and theorem  [ lemma : empirical distributions 2 ] still hold true for the erased configuration graph , based on the algorithm provided in section  [ section : algorithm ] .",
    "the algorithm to construct directed assortative configuration graphs starts from  @xcite , where the authors construct a directed random graph with @xmath41 nodes and given in - degree and given out - degree distributions in the following way .",
    "they assign to each node independently an in - degree and an out - degree according to the given distributions , also independently for different nodes .",
    "some degrees are then modified if the sum of in - degrees differs from the sum of out - degrees so that these sums of degrees are equal , and the sample is only accepted if the number of modifications is not too large .",
    "finally , in - degrees are randomly paired with out - degrees .",
    "note that this construction leads to a _ non - assortative _ configuration graph and the in- and out - degree of a given node are independent .",
    "the construction of an assortative configuration graph is more delicate since in - degrees can not be randomly paired with out - degrees . in our construction",
    "we generate node - types using directly node - type distribution @xmath12 . independently of the node - types we generate @xmath60 edges having independent edge - types according to distribution @xmath13 .",
    "finally , we match in- and out - degrees of nodes with edges of corresponding types .",
    "in general , the matching can not be done exactly , but with high probability the number of types that need to be changed accordingly is small for large @xmath42 , due to consistency conditions   and  .",
    "we first describe the algorithm in detail and then comment on each step of the algorithm below .",
    "* algorithm to construct directed assortative configuration graphs .",
    "*    assume maximal degrees @xmath61 and two probability distributions @xmath12 and @xmath13 satisfying   and   with mean degree @xmath62 are given .",
    "choose @xmath63 fixed .",
    "choose @xmath41 so large that there exists @xmath64 with @xmath65 .",
    "set @xmath66 .    1",
    ".   * step 1 . *",
    "assign to each node @xmath67 independently a node - type @xmath1 according to distribution @xmath12 .",
    "generate edges @xmath68 having independent edge - types @xmath9 according to distribution @xmath13 , independently of the node - types .",
    "define @xmath69_1 $ } ; \\\\ n_j^- & = & \\sum_{v=1}^{n ' } 1 _ { \\ { j_v = j \\ } } \\quad \\text { and } \\quad   e_j^- ~=~ \\left\\lceil \\frac{1}{j}\\sum_{e=1}^{\\lceil zn '' \\rceil } 1 _ { \\ { j_e = j \\}}\\right\\rceil \\quad\\text { for all $ j\\in[j]_1$}.   \\end{aligned}\\ ] ] let @xmath70 be the event on which we have @xmath71_1 $ } ;   \\\\",
    "\\left|   n_j^- - p_j^- n ' \\right| \\le p_j^-n^\\delta/2 & \\quad \\text { and } \\quad & \\left|   e_j^- - p_j^- n '' \\right| \\le p_j^-n^\\delta/2 \\quad\\text { for all $ j\\in[j]_1$}.   \\end{aligned}\\ ] ] proceed to step  2 if event @xmath70 occurs .",
    "otherwise , proceed to step  5 . 2 .",
    "* for each @xmath37_1 $ ] and each @xmath38_1 $ ] do the following .",
    "* add @xmath72 edges of type @xmath73 ; * add @xmath74 edges of type @xmath75 .",
    "+ set @xmath76_1}r_k^+$ ] and @xmath77_1}r_j^-$ ] .",
    "* step 3 . * set the type of each node in @xmath78 to @xmath79 . for",
    "each @xmath37_1 $ ] and each @xmath38_1 $ ] do the following .",
    "* take the first @xmath80 nodes in @xmath78 having out - degree @xmath81 and change their out - degrees to @xmath30 ; * take the first @xmath82 nodes in @xmath78 having in - degree @xmath81 and change their in - degrees to @xmath29 .",
    "* for each @xmath37_1 $ ] and each @xmath38_1 $ ] do the following . *",
    "assign to each node having out - degree @xmath30 exactly @xmath30 uniformly chosen edges @xmath19 of type @xmath9 with @xmath83 ; * assign to every node having in - degree @xmath29 exactly @xmath29 uniformly chosen edges @xmath19 of type @xmath9 with @xmath84 .",
    "+ proceed to step  6 .",
    "* step 5 . *",
    "define node - types @xmath85 , @xmath86 and @xmath87 for all @xmath88 .",
    "insert an edge @xmath89 that connects node @xmath90 to node @xmath91 .",
    "6 .   * step 6 .",
    "* return the constructed graph .",
    "* explanation of the algorithm . *",
    "we say that node @xmath0 is a _",
    "@xmath30-node _ if its out - degree is @xmath37_1 $ ] , and similarly we say that edge @xmath7 is a _ @xmath30-edge _ if @xmath0 is a @xmath30-node , @xmath37_1 $ ]",
    ".    * step 1 .",
    "* we generate only @xmath92 node - types and we keep @xmath93 nodes undetermined for possible modifications in later steps .",
    "the expected number of generated @xmath30-nodes is @xmath94 and the expected number of generated @xmath30-edges is @xmath95 . using condition  , the expected number of @xmath30-nodes needed for the generated @xmath30-edges is therefore @xmath96 . henceforth , if @xmath97 is close to its expectation @xmath98 , it dominates the number of generated @xmath30-nodes @xmath99 which is of order @xmath100 .",
    "step  3 is then used to correct for this imbalance in a deterministic way , and event @xmath70 guarantees that this correction is possible . for receiving an efficient algorithm we would like event @xmath70 to occur sufficiently likely , which is exactly stated in the next lemma .",
    "[ lemma : acceptance set ] we have @xmath101 \\to1 $ ] as @xmath48 .",
    "integer @xmath102 is chosen in such a way that , on event @xmath70 , the number of @xmath30-nodes needed for the generated @xmath30-edges dominates the number of generated @xmath30-nodes , and their difference is at most @xmath103 for each @xmath37_1 $ ] , see also figure  [ figure : construction ] for an illustration .",
    ", the number of generated @xmath30-nodes , @xmath99 , lies in the interval of length @xmath104 around @xmath105 .",
    "the number of @xmath30-nodes needed for the generated @xmath30-edges , @xmath97 , lies in the interval of length @xmath104 around @xmath106 . by definition of @xmath102",
    "the gap between the two intervals is of size between @xmath81 and @xmath107 . from this",
    "it follows that there are at most @xmath108 additional @xmath30-nodes needed in order to attach all generated @xmath30-edges to @xmath30-nodes .",
    ", width=453 ]    therefore , on event @xmath70 , the total number of additional nodes needed having a positive out - degree is @xmath109_1 } \\left ( e_k^+ - n_k^+\\right ) & \\le & 2\\lceil n^\\delta \\rceil \\sum_{k\\in[k]_1 } p_k^+ ~\\le~ 2\\lceil n^\\delta \\rceil . \\end{aligned}\\ ] ] hence , we have sufficiently many undetermined nodes in @xmath78 to which we can assign out - degrees accordingly in step  3 , and similarly for the in - degrees .",
    "* step 2 . * in general",
    ", the number of generated @xmath30-edges is not a multiple of @xmath30 .",
    "therefore , we use step  2 to correct for this cardinality by defining @xmath110 additional edges of type @xmath73 .",
    "note that each such edge requires a node having in - degree @xmath90 .",
    "therefore , in total @xmath111 nodes having in - degree @xmath90 are additionally needed , and similarly for the added edges of type @xmath75 , @xmath38_1 $ ] .",
    "the undetermined @xmath112 nodes are exactly used to correct for the corresponding node - types in step  3 .    * steps 3 and 4 . *",
    "we assign node - types to the undetermined nodes @xmath113 in such a way that the total number of @xmath30-nodes is equal to the number of @xmath30-nodes needed for the @xmath30-edges generated in steps  1 and  2 , for each @xmath37_1 $ ] , and similarly for the total number of nodes having in - degree @xmath38_1 $ ] .",
    "then , all cardinalities for @xmath29 and @xmath30 match and all edges can be randomly connected to corresponding nodes .",
    "after doing so , each node has the correct number of arriving and leaving edges according to its type .",
    "note that this step allows for self - loops and multiple edges",
    ".    * step 5 . *",
    "if event @xmath70 does not occur in step  2 , we just define a deterministic graph so that all terms in theorem  [ lemma : random degrees ] and theorem  [ lemma : empirical distributions 2 ] are well - defined .",
    "due to lemma  [ lemma : acceptance set ] the influence of this deterministic graph is negligible .",
    "given a non - degenerate node - type distribution @xmath12 with mean degree @xmath114 given by @xmath40_0 } k p_k^+=\\sum_{j \\in [ j]_0 } j p_j^-$ ] , we aim to find possible edge - type distributions @xmath13 such that @xmath12 and @xmath13 satisfy   and  .",
    "conditions   and   imply that the marginal distributions of @xmath13 are fully described by the marginal distributions of @xmath12 , and their respective cumulative distribution functions are given by @xmath115 for @xmath37_1 $ ] and @xmath38_1 $ ] .",
    "the possible joint distributions @xmath116 are therefore given by @xmath117 where @xmath118 ^ 2 \\to [ 0,1]$ ] is a @xmath91-dimensional copula , see for instance  @xcite . to measure assortativity of a graph ,  @xcite introduced the _",
    "assortativity coefficient _ of @xmath13 given by @xmath119_1}\\sum_{j\\in[j]_1 } kj \\left ( q_{k , j } - q_k^+q_j^- \\right ) } { \\sqrt{\\sum_{k\\in[k]_1 } k^2q_k^+ - \\left ( \\sum_{k\\in[k]_1 } kq_k^+ \\right)^2 } \\sqrt{\\sum_{j\\in[j]_1 } j^2q_j^- - \\left ( \\sum_{j\\in[j]_1 } jq_j^- \\right)^2 } } ~\\in[-1,1],\\ ] ] which is pearson s correlation coefficient of distribution @xmath13 . by hoeffding s identity and using representation  ,",
    "@xmath120 can be rewritten as @xmath121_1}\\sum_{j\\in[j]_1 }   \\big (   c\\left ( q^+(k),q^-(j ) \\right ) - q^+(k)q^-(j ) \\big ) } { \\sqrt{\\sum_{k\\in[k]_1 } k^2q_k^+ - \\left ( \\sum_{k\\in[k]_1 } kq_k^+ \\right)^2 } \\sqrt{\\sum_{j\\in[j]_1 } j^2q_j^- - \\left ( \\sum_{j\\in[j]_1 } jq_j^- \\right)^2 } } .\\ ] ] observe that @xmath120 is determined by @xmath12 and @xmath122 .",
    "define the copulas @xmath123 for @xmath124 $ ] .",
    "then , @xmath125 corresponds to the minimal possible assortativity coefficient @xmath126 $ ] , and @xmath127 corresponds to the maximal possible assortativity coefficient @xmath128 $ ] .",
    "copula @xmath129 leads to non - assortativity and in this case we have @xmath130 for all @xmath37_1 $ ] and @xmath38_1 $ ] .",
    "note that for given @xmath12 , @xmath120 does not uniquely determine @xmath122 . on the other hand",
    ", one can always find @xmath131 $ ] such that @xmath132 leads to a given assortativity coefficient @xmath133 $ ] .",
    "this allows to construct directed assortative configuration graphs having any given assortativity coefficient that is possible for given node - type distribution @xmath12 .       to illustrate assortativity in an example we consider maximal in- and out - degree @xmath134 and node - type distribution @xmath135 , @xmath136 , given by @xmath137 distribution @xmath138 only allows for nodes of types @xmath16 and @xmath18 , with respective probabilities",
    "@xmath139 and @xmath140 , which results in a mean degree of @xmath141 .",
    "clearly , these nodes can only be connected through edges of types @xmath16 , @xmath142 , @xmath143 and @xmath18 . since @xmath138 is diagonal , consistency conditions   and   fully specify the edge - type distribution @xmath144 which is given by @xmath145 for @xmath146 $ ] . for fixed @xmath136 , different values of @xmath147",
    "lead to different assortativity coefficients @xmath148 .",
    "a straightforward calculation gives @xmath149 for any @xmath136 , the optimal bounds on @xmath150 are given by @xmath151 observe that @xmath152 if and only if @xmath153 .",
    "from now on we fix @xmath154 , meaning that there are nodes of types @xmath16 and @xmath18 with equal probability . for any @xmath155 $ ] or @xmath156 $ ]",
    ", this leads to @xmath157 \\quad \\text { or equivalently   } \\quad   q ~=~ \\frac{\\rho_q + 2}{3 } \\in [ 0.5,1].\\ ] ] a value of @xmath158 results in a graph with maximal assortativity coefficient @xmath159 . in this case , there are only edges that connect nodes having identical types . by decreasing @xmath147",
    "we allow also for edges of types @xmath142 and @xmath143 , while we reduce the probability of having edges of types @xmath16 and @xmath18 .",
    "if we decrease @xmath147 to its minimal value @xmath160 , edges of type @xmath16 finally disappear and there are only edges of types @xmath142 , @xmath143 and @xmath18 .",
    "this means that if @xmath160 , each edge is leaving from a node with maximal possible out - degree or is arriving at a node with maximal possible in - degree . in this case , the assortativity coefficient is negative and given by @xmath161 .",
    "non - assortativity is given for @xmath162 .",
    "to illustrate these different types of assortativity , figure  [ figure : diagonal ] shows six graphs generated by the algorithm given in section  [ section : algorithm ] with @xmath14 nodes , with node - type distribution @xmath163 and edge - type distribution @xmath144 for values of @xmath147 such that @xmath164 .    .32   with @xmath14 , with the same node - type distribution @xmath165 but different edge - type distribution @xmath144 .",
    "edges of type @xmath16 are colored orange , while edges of type @xmath18 are colored blue .",
    "edges of types @xmath142 and @xmath143 are colored green .",
    "all other edges are colored black .",
    ", title=\"fig : \" ]    .32   with @xmath14 , with the same node - type distribution @xmath165 but different edge - type distribution @xmath144 .",
    "edges of type @xmath16 are colored orange , while edges of type @xmath18 are colored blue .",
    "edges of types @xmath142 and @xmath143 are colored green .",
    "all other edges are colored black .",
    ", title=\"fig : \" ]    .32   with @xmath14 , with the same node - type distribution @xmath165 but different edge - type distribution @xmath144 .",
    "edges of type @xmath16 are colored orange , while edges of type @xmath18 are colored blue .",
    "edges of types @xmath142 and @xmath143 are colored green .",
    "all other edges are colored black .",
    ", title=\"fig : \" ]     +    .32   with @xmath14 , with the same node - type distribution @xmath165 but different edge - type distribution @xmath144 .",
    "edges of type @xmath16 are colored orange , while edges of type @xmath18 are colored blue . edges of types @xmath142 and @xmath143 are colored green .",
    "all other edges are colored black .",
    ", title=\"fig : \" ]    .32   with @xmath14 , with the same node - type distribution @xmath165 but different edge - type distribution @xmath144 .",
    "edges of type @xmath16 are colored orange , while edges of type @xmath18 are colored blue . edges of types @xmath142 and @xmath143 are colored green .",
    "all other edges are colored black .",
    ", title=\"fig : \" ]    .32   with @xmath14 , with the same node - type distribution @xmath165 but different edge - type distribution @xmath144 .",
    "edges of type @xmath16 are colored orange , while edges of type @xmath18 are colored blue . edges of types @xmath142 and @xmath143 are colored green .",
    "all other edges are colored black .",
    ", title=\"fig : \" ]    note that the algorithm produces node - types different from @xmath16 and @xmath18 due to the modifications on nodes @xmath78 with @xmath166 as @xmath167 . for better illustration",
    "we erase nodes of type @xmath79 and we erase self - loops and multiple edges . to illustrate the differences between the six generated graphs we color edges of identical types the same as follows : @xmath168 and all other edges are colored black ( which may arise by the construction and the erasure procedure ) . in figure",
    "[ figure : diagonal ] we also present the values of the empirical assortativity coefficients @xmath169 . note that they deviate from the actual assortativity coefficients because of the randomness in the construction and the erasure procedure .",
    "nevertheless , by theorem  [ theorem : simple ] and by the continuous mapping theorem , the empirical assortativity coefficient @xmath170 converges in probability to @xmath120 as @xmath167 .",
    "we start with the proof of lemma  [ lemma : acceptance set ] which states that @xmath171 \\to 1 $ ] as @xmath48 .      for each @xmath52_1 $ ] , @xmath99 has a binomial distribution with parameters @xmath92 and @xmath107 .",
    "therefore , by chebyshev s inequality , @xmath172   ~\\le~ \\frac{n ' p_k^+(1-p_k^+)}{n^{2\\delta}(p_k^+)^2/4 } ~\\to~0 , \\quad \\text{as $ n\\to\\infty$,}\\ ] ] since @xmath173 .",
    "similarly , @xmath174 has a binomial distribution with parameters @xmath175 and @xmath176 .",
    "therefore , by condition  , @xmath177 has mean @xmath178 and the variance is of order @xmath102 . by chebyshev s inequality",
    "it follows that @xmath179   ~\\to~0 , \\quad \\text{as $ n\\to\\infty$.}\\ ] ] similarly for @xmath180 and @xmath181 , @xmath38_1 $ ] , using condition  .      choose @xmath43 fixed and let @xmath182 $ ] be a continuous function bounded by @xmath183",
    ". for @xmath184 , denote by @xmath185 the node - types generated by the algorithm in section  [ section : algorithm ] .",
    "define the coupling @xmath186 , where @xmath187 for all @xmath188 , and @xmath189 , @xmath190 , are independent random variables each having distribution  @xmath12 . by the triangle inequality we have @xmath191   - \\e\\left[u((j'_1,k'_{1}),\\ldots,(j'_s , k'_{s}))\\right ] \\right| \\\\&&\\le~ \\left| \\e\\left[u((j_{v_1},k_{v_1}),\\ldots,(j_{v_s},k_{v_s } ) ) - u((\\tilde j_{v_1 } , \\tilde k_{v_1}),\\ldots,(\\tilde j_{v_s},\\tilde k_{v_s}))\\right ]",
    "\\right| \\\\&&\\hspace{1cm}+~ \\left| \\e\\left[u((\\tilde j_{v_1 } , \\tilde k_{v_1}),\\ldots,(\\tilde j_{v_s},\\tilde k_{v_s } ) ) - u((j'_1,k'_{1}),\\ldots,(j'_s , k'_{s}))\\right ] \\right|.\\end{aligned}\\ ] ] since on @xmath70 , @xmath192 has the same distribution as @xmath193 , the second term on the right - hand side satisfies @xmath194 \\right| \\\\&&\\le~ \\left| \\e\\left[\\left .",
    "u((\\tilde j_{v_1 } , \\tilde k_{v_1}),\\ldots,(\\tilde j_{v_s},\\tilde k_{v_s } ) ) - u((j'_1,k'_{1}),\\ldots,(j'_s , k'_{s}))\\right| a_n \\right ] \\right|       + 2h \\p[a_n^c ] ~=~ 2h \\p[a_n^c],\\end{aligned}\\ ] ] which converges to @xmath81 as @xmath48 by lemma  [ lemma : acceptance set ] . for the first term we have by the definition of the coupling @xmath195 \\right| \\\\&&=~ \\left| \\e\\left[\\left(u((j_{v_1},k_{v_1}),\\ldots,(j_{v_s},k_{v_s } ) ) - u((\\tilde j_{v_1 } , \\tilde k_{v_1}),\\ldots,(\\tilde j_{v_s},\\tilde k_{v_s}))\\right ) 1_{\\bigcup_{l=1}^s\\left\\{v_l \\in\\{n'+1,\\ldots , n\\ }    \\right\\}}\\right ] \\right| \\\\&&\\le~ 2h\\sum_{l=1}^s \\p\\left [ v_l \\in\\{n'+1,\\ldots , n\\ }    \\right ] ~=~ 2hs\\frac{n - n'}{n},\\end{aligned}\\ ] ] which converges to @xmath81 as @xmath48 by the choice of @xmath92 .",
    "the corresponding result for the edge - types follows by exactly the same arguments since , on event @xmath70 , the number of generated edge - types having distribution @xmath13 is @xmath175 and the number of artificially added edge - types is at most @xmath196 , see step  2 of the algorithm .",
    "let @xmath38_0 $ ] , @xmath37_0 $ ] and choose @xmath58 .",
    "for @xmath42 so large that @xmath197 we have @xmath198   & \\le & \\p\\left[\\left .",
    "\\frac{n - n'}{n } +   \\left| \\frac{1}{n}\\sum_{v = 1}^{n ' } 1_{\\ { j_v = j , k_v = k \\ } } - p_{j , k } \\right| >",
    "\\varepsilon \\right| a_n   \\right ]   + \\p\\left[a_n^c   \\right ]   \\\\&\\le & \\p\\left[\\left .",
    "\\left| \\sum_{v = 1}^{n ' } 1_{\\ { j_v = j , k_v = k \\ } } - p_{j , k}n \\right| > n\\varepsilon/2 \\right| a_n   \\right ]   +   \\p\\left[a_n^c   \\right ] .",
    "\\end{aligned}\\ ] ] by lemma  [ lemma : acceptance set ] it remains to consider the first term on the right - hand side . by the triangle and chebyshev s inequality",
    "it follows that @xmath199   & \\le & \\frac{n ' p_{j , k}(1-p_{j , k } ) } { \\p\\left [ a_n \\right]n^2 \\varepsilon^2/16 } +   \\p\\left[\\left .",
    "( n - n ' ) p_{j , k } > n\\varepsilon/4 \\right| a_n   \\right],\\end{aligned}\\ ] ] which converges to @xmath81 as @xmath48 by lemma  [ lemma : acceptance set ] . similarly for the edge - types .      in order to prove theorem  [ theorem : simple ] , we first show that the expected number of self - loops and multiple edges arising from the construction in section  [ section : algorithm ] is bounded in @xmath42 .",
    "[ lemma : expected ] let @xmath200 be the number of self - loops and @xmath201 be the number of multiple edges of the graph generated by the algorithm in section  [ section : algorithm ] . there exists a finite constant @xmath202 such that @xmath203 ~\\le~ c.\\ ] ]      let @xmath204 and denote by @xmath205 the number of edges @xmath19 with @xmath206 .",
    "the probability that an edge leaving from node @xmath0 is also arriving at node @xmath0 is at most @xmath90 divided by the number of nodes having in - degree @xmath2 , which we denote by @xmath207 .",
    "therefore , since there are @xmath3 edges leaving from @xmath0 , @xmath208   & = &   \\sum_{v=1}^n   \\e[\\left.s_v\\right| a_n ]   ~\\le~   \\sum_{v=1}^n   \\e\\left[\\left.\\frac{k_v}{\\mcv_{j_v}^-}\\right| a_n\\right ] .",
    "\\end{aligned}\\ ] ] on event @xmath70 , the number of nodes having in - degree @xmath2 is at least @xmath209 .",
    "it follows that @xmath208   & \\le &   \\sum_{v=1}^n   \\e\\left[\\left.\\frac{k_v } { \\max\\left\\{1,p_{j}^-n'-p_{j}^-n^\\delta/2 \\right\\ } } \\right| a_n\\right ] ~\\le~ \\frac{n k } { \\max\\left\\{1,\\min_{j\\in[j]_1}\\left\\{p_{j}^-n'-p_{j}^-n^\\delta/2\\right\\ } \\right\\}}. \\end{aligned}\\ ] ] since @xmath114 , there exists @xmath38_1 $ ] with @xmath210 and , hence , the right - hand side is bounded in @xmath42 .      to bound the expectation of @xmath201 ,",
    "let @xmath204 and denote by @xmath211 the number of multiple edges leaving from node @xmath0 .",
    "the probability that two distinct edges leaving from @xmath0 are arriving at the same node @xmath212 is at most @xmath213 it follows that @xmath214   & = &   \\sum_{v=1}^n \\e[\\left.m_v\\right| a_n ]   ~\\le~ \\sum_{v=1}^n \\sum_{w=1}^n \\e\\left[\\left .",
    "\\binom{k_v}{2 } \\frac{j_w(j_w-1)}{j_w\\mcv_{j_w}^-\\left(j_w\\mcv_{j_w}^--1\\right ) }   1_{\\ { j_w\\ge2 \\ } }    1_{\\ { k_v\\ge2 \\ } }    \\right| a_n\\right ]   \\\\&\\le & \\sum_{v=1}^n \\sum_{w=1}^n \\e\\left[\\left .",
    "\\frac{k_v^2 j_w^2}{2j_w\\mcv_{j_w}^-\\left(j_w\\mcv_{j_w}^--1\\right ) } 1_{\\ { j_w\\ge2 \\ } }   1_{\\ { k_v\\ge2 \\ } }    \\right| a_n\\right ] . \\end{aligned}\\ ] ] since @xmath215 for @xmath216 , it follows that @xmath214   & \\le &   \\sum_{v=1}^n \\sum_{w=1}^n \\e\\left[\\left .",
    "\\frac{k_v^2}{\\left(\\mcv_{j_w}^-\\right)^2}1_{\\ { j_w\\ge2 \\ } } 1_{\\ { k_v\\ge2 \\ } }     \\right| a_n\\right ] .",
    "\\end{aligned}\\ ] ] using that on @xmath70 , the number of nodes having in - degree @xmath217 is at least @xmath218 , it follows that @xmath214   & \\le &   \\frac{n^2k^2 } { \\max\\left\\{1,\\min_{j\\in[j]_1}\\left\\{p_{j}^-n'-p_{j}^-n^\\delta/2\\right\\ } \\right\\}^2}. \\end{aligned}\\ ] ] the right - hand side is again bounded in @xmath42 .",
    "this finishes the proof of lemma  [ lemma : expected ] .",
    "we first show that theorem  [ lemma : empirical distributions 2 ] holds true for the erased configuration graph .",
    "let @xmath200 be the number of self - loops and let @xmath201 be the number of multiple edges generated by the algorithm . for @xmath26_0 $ ] and @xmath52_0 $ ] denote by @xmath219 the number of constructed nodes of type @xmath28 after erasing all self - loops and multiple edges .",
    "similarly we define @xmath220 for @xmath27_1 $ ] and @xmath54_1 $ ] . in order to prove that theorem  [ lemma : empirical distributions 2 ] holds true for the erased configuration graph",
    ", we show that for any @xmath58 , @xmath221_0 , k\\in [ k]_0 } \\left| \\frac{\\mcv^e_{j , k}}{n }   - p_{j , k } \\right|   \\ge \\varepsilon \\quad \\text { or } \\quad \\sum_{k \\in [ k]_1 , j\\in [ j]_1 } \\left| \\mce^e_{k , j } - q_{k , j}\\mce^e \\right| \\ge \\varepsilon \\mce^e \\right ] ~=~0,\\ ] ] where @xmath222 denotes the total number of edges in the erased configuration graph ( which could be equal to @xmath81 if all edges of the constructed graph are self - loops ) .",
    "let @xmath223 and choose @xmath26_0 $ ] and @xmath52_0 $ ] .",
    "we have @xmath224 ~\\le~ \\p\\left[\\left| \\frac{\\mcv^e_{j , k}- \\mcv_{j , k}}{n }   \\right| \\ge \\varepsilon/2 \\right ] + \\p\\left[\\left| \\frac{\\mcv_{j , k}}{n }   - p_{j , k } \\right| \\ge \\varepsilon/2 \\right].\\ ] ] the second term on the right - hand side converges to @xmath81 as @xmath48 by theorem  [ lemma : empirical distributions 2 ] . for the first term , note that @xmath225 ~\\le~ \\p\\left[\\sum_{v=1}^n   \\left|1_{\\{j_v^e = j , k_v^e = k\\}}- 1_{\\{j_v = j , k_v = k\\ } } \\right| \\ge \\varepsilon n/2 \\right],\\ ] ] where @xmath226 denotes the type of node @xmath0 in the erased configuration graph .",
    "denote by @xmath205 the number of self - loops attached to @xmath0 .",
    "denote by @xmath227 the number of multiple edges leaving from @xmath0 and denote by @xmath228 the number of multiple edges arriving at @xmath0 .",
    "note that @xmath229 if and only if @xmath230 , and similarly @xmath231 if and only if @xmath232 .",
    "we therefore have that @xmath233 where we set @xmath234 .",
    "hence , @xmath235 & \\le & \\p\\left[\\sum_{v=1}^n   1_{\\ { s_v+m_v>0\\ } } \\ge \\varepsilon n/2 \\right ] ~\\le~ \\p\\left[\\sum_{v=1}^n   ( s_v+m_v ) \\ge",
    "\\varepsilon n/2 \\right].\\end{aligned}\\ ] ] it follows by markov s inequality , lemma  [ lemma : acceptance set ] and lemma  [ lemma : expected ] that @xmath225 ~\\le~ \\p\\left[s_n+2m_n \\ge n\\varepsilon/2 \\right ] ~\\le~ \\frac{\\e\\left[\\left .",
    "a_n \\right]}{n\\varepsilon/2 }   + \\p\\left[a_n^c\\right ] ~\\to~0 , \\quad \\text { as $ n\\to\\infty$.}\\ ] ] we now prove the same result for the edge - types under the conditional probability , conditional given @xmath70 , which is enough due to lemma  [ lemma : acceptance set ] .",
    "note that on event @xmath70 the number of generated edges @xmath55 is at least @xmath236 , see step  1 of the algorithm .",
    "it follows by markov s inequality and lemma  [ lemma : expected ] , and since @xmath237 , that for every @xmath238 , @xmath239 ~=~ \\p\\left[\\left .",
    "\\frac{s_n+m_n}{\\mce }   \\ge \\eta \\;\\right| a_n \\right ] ~\\le~ \\p\\left[\\left .",
    "zn''\\eta \\;\\right| a_n \\right ] ~\\to~0,\\ ] ] as @xmath167 .",
    "note that for fixed @xmath27_1 $ ] and @xmath54_1 $ ] , @xmath240 ~\\le~ \\p\\left[\\left .",
    "\\left| \\mce^e_{k , j}- \\mce_{k , j } \\right| \\ge \\varepsilon\\mce^e/2 \\;\\right| a_n \\right ] + \\p\\left[\\left .",
    "\\left| \\mce_{k , j } - q_{k , j}\\mce^e \\right| \\ge \\varepsilon\\mce^e/2 \\;\\right| a_n \\right].\\ ] ] for the second term on the right - hand side we have @xmath241 & = & \\p\\left[\\left",
    ". \\left| \\frac{\\mce_{k , j}}{\\mce }   - \\frac{\\mce - s_n - m_n}{\\mce } q_{k , j } \\right| \\ge \\frac{\\mce^e}{\\mce}\\varepsilon/2 \\;\\right| a_n \\right ] \\\\&\\le & \\p\\left[\\left .",
    "\\left| \\frac{\\mce_{k , j}}{\\mce }   - q_{k , j } \\right| \\ge \\frac{\\mce^e}{\\mce}\\varepsilon/4 \\;\\right| a_n \\right ] + \\p\\left[\\left . \\left(s_n",
    "+ m_n\\right ) q_{k , j } \\ge \\mce^e\\varepsilon/4 \\;\\right| a_n \\right ] \\\\&\\le & \\p\\left[\\left .",
    "\\left| \\frac{\\mce_{k , j}}{\\mce }   - q_{k , j } \\right| \\ge \\frac{\\mce^e}{\\mce}\\varepsilon/4 \\;\\right| a_n \\right ] + \\p\\left[\\left .",
    "s_n + m_n \\ge \\frac{zn''\\varepsilon/4}{q_{k , j}+ \\varepsilon/4 } \\;\\right| a_n \\right],\\end{aligned}\\ ] ] where in the last step we used that @xmath242 . by theorem  [ lemma : empirical distributions 2 ] , and lemma  [ lemma : expected ] ,",
    "the right - hand side converges to @xmath81 as @xmath48 . to bound the first term ,",
    "note that the erasure procedure changes the number of edges of type @xmath31 because such edges may get erased , but also because an erased edge @xmath7 changes the types of unerased edges that are leaving from node @xmath0 or that are arriving at node @xmath5 .",
    "it follows that @xmath243 ~\\le~ \\p\\left[\\left .",
    "s_n+m_n +   \\sum_{e=1}^{\\mce^e } \\left| 1_{\\ { k^e_e = k , j_e^e = j \\}}- 1_{\\ { k_e = k , j_e = j \\ } } \\right| \\ge \\varepsilon\\mce^e/2 \\;\\right| a_n \\right],\\ ] ] where @xmath244 denotes the type of edge @xmath19 in the erased configuration graph . for an edge @xmath7",
    "we have @xmath245 if and only if @xmath246 , and similarly @xmath247 if and only if @xmath248",
    ". therefore , for @xmath7 , @xmath249 where we set @xmath250 and @xmath251 .",
    "it follows that @xmath252 & \\le & \\p\\left[\\left .",
    "s_n+m_n+   \\sum_{e=1}^{\\mce^e } 1_{\\ { s_e+m_e>0\\ } } \\ge \\varepsilon\\mce^e/2 \\;\\right| a_n \\right ] \\\\&\\le & \\p\\left[\\left .",
    "s_n+m_n +   \\sum_{v=1}^n\\left ( k_v1_{\\ { s_v+m^+_v>0\\ } } + j_v1_{\\ { s_v+m_v^->0\\ } }   \\right ) \\ge \\mce^e \\varepsilon/2 \\;\\right| a_n \\right ] \\\\&\\le & \\p\\left[\\left .",
    "s_n+m_n + k ( s_n+m_n )   + j ( s_n+m_n )   \\ge \\mce^e\\varepsilon/2 \\;\\right| a_n \\right],\\end{aligned}\\ ] ] which converges to @xmath81 as @xmath167 by lemma  [ lemma : expected ] and the fact that @xmath253 .",
    "this finally proves  .",
    "we now prove that theorem  [ lemma : random degrees ] holds true for the erased configuration graph .",
    "denote by @xmath254 the set of nodes whose types have been changed due to the erasure procedure .",
    "for the probability that a uniformly chosen node @xmath0 belongs to @xmath255 we have @xmath256   ~=~ \\e\\left [   \\frac { \\left| \\{n'+1,\\ldots , n\\}\\cup\\mcv_{\\rm mod}\\right|}{n }    \\right ]   ~\\le~ \\e\\left [    \\frac { n - n ' +    s_n+2m_n }      { n }   \\right].\\ ] ] since the graph returned by the algorithm in case event @xmath70 does not hold has no self - loops or multiple edges , see step  5 , it follows that @xmath256   ~\\le~ \\e\\left[\\left .",
    "\\frac { n - n ' +    s_n+2m_n }      { n }   \\right| a_n \\right ]   + \\frac { n - n ' } { n},\\ ] ] which converges to @xmath81 as @xmath48 by lemma  [ lemma : expected ] .",
    "going through the proof of theorem  [ lemma : random degrees ] , we see that this observation is enough to conclude that the types of @xmath43 randomly chosen nodes of the erased configuration graph converge in distribution to a sequence of @xmath45 independent random variables each having distribution @xmath12 as @xmath48 . to prove the same result for the edge - types of the erased configuration graph , note that it may happen that all edges of the graph generated by the algorithm of section  [ section : algorithm ] are self - loops , i.e.  @xmath257 . in this case",
    "the edge set is empty for the erased configuration graph and we define `` the type of a randomly chosen edge '' to be identical to @xmath15 if event @xmath258 occurs , and we define it to be as usual if event @xmath258 does not occur .",
    "nevertheless , the probability of event @xmath258 converges to @xmath81 as @xmath48 by lemma  [ lemma : acceptance set ] and   above .",
    "therefore , using similar arguments as above for the node - types , we conclude that the types of @xmath43 randomly chosen edges of the erased configuration graph converge in distribution to a sequence of @xmath45 independent random variables each having distribution @xmath13 as @xmath48 ."
  ],
  "abstract_text": [
    "<S> constructions of directed configuration graphs with given bi - degree distribution were introduced in random graph theory some years ago . </S>",
    "<S> these constructions lead to graphs where the degrees of two nodes belonging to the same edge are independent . </S>",
    "<S> however , it is observed that many real - life networks are assortative , meaning that edges tend to connect low degree nodes with high degree nodes , or variations thereof . in this article </S>",
    "<S> we provide an explicit algorithm to construct directed assortative configuration graphs with given bi - degree distribution and arbitrary pre - specified assortativity .    _ </S>",
    "<S> keywords : _ random graphs ; degree distribution ; assortativity ; assortative mixing ; assortativity coefficient ; degree correlations </S>"
  ]
}
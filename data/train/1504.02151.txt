{
  "article_text": [
    "the travelling salesman problem ( tsp ) is to find a least cost hamilton cycle in an edge weighted graph .",
    "it is of the most widely studied combinatorial optimization problems and is well - known to be np - hard .",
    "the tsp model has been used to formulate a wide variety of applications . for details",
    "we refer the reader to the well - known books  @xcite as well as the following papers  @xcite .    for some applications ,",
    "more than linear combinations of distances between consecutive nodes are desirable in formulating an objective function .",
    "consider the problem of determining an optimal routing of a unmanned aerial vehicle ( uav ) which has a list of targets at specific locations .",
    "this can be modelled as a tsp which requires a tour that minimizes the distance travelled .",
    "however , such a model this neglects to factor in the physical limitations of the vehicle , such as turn radius or momentum . to illustrate this idea , in figure  [ fig : figure1 ] we give a hamilton path , in figure  [ fig : figure2 ] we give the corresponding flight path , and figure  [ fig : figure3 ] shows a route which is longer but",
    "can be travelled at a greater speed and hence reducing the overall travel time . to model the traversal time",
    ", we can introduce penalties for pairs of ( not necessarily adjacent ) edges to force a smooth curve for its traversal . in this paper",
    "we consider a generalization of the tsp which can be used to model similar situations and contains many variations of the tsp , such as the angle - metric tsp  @xcite , dubins tsp  @xcite and the tsp  @xcite as special cases .",
    "let @xmath2 be an undirected graph on the node set @xmath3 with the convention that all indices used hereafter are taken modulo @xmath4 .",
    "for each edge @xmath5 a nonnegative cost @xmath6 is given .",
    "a _ cycle _ in @xmath7 is a subset of @xmath8 that forms a path starting and ending at the same node .",
    "note that a cycle can be represented by either an ordered set of nodes or a set of edges in @xmath7 .",
    "a _ hamilton cycle _ or _ tour _ in @xmath7 is a cycle containing every node of @xmath7 .",
    "let @xmath9 be a tour in @xmath7 and let @xmath10 be the set of all tours in @xmath7 .",
    "the edges @xmath11 and @xmath12 , @xmath13 are _",
    "@xmath0-neighbours _ on @xmath14 if and only if a shortest path between @xmath15 and @xmath16 on @xmath14 containing these edges has exactly @xmath0 edges , for @xmath17 . here",
    "the shortest path refers to the path with the least number of edges , rather than the minimum cost path .",
    "thus @xmath15 and @xmath16 are 2-neighbours in @xmath14 if and only if they share a common node in @xmath14 .",
    "let @xmath18 be the cost of the pair @xmath19 of edges and @xmath20 are @xmath21-neighbours on @xmath22 .",
    "assume that @xmath23 for every pair of edges @xmath24 . then the _ @xmath0-neighbour tsp _ ( tsp(@xmath0 ) )",
    "is defined as in  @xcite    @xmath25    a closely related problem , the quadratic tsp ( qtsp ) , is defined as follows :    @xmath26    where @xmath27 .",
    "note :    @xmath28    thus when @xmath29 ( for @xmath4 even ) or @xmath30 ( for @xmath4 odd ) , the @xmath0-neighbour tsp reduces to the quadratic tsp .",
    "we note tsp(@xmath31 ) is simply the original tsp . elsewhere in the literature ( e.g. @xcite , @xcite ) , the term qtsp",
    "is sometimes used for what we refer to as tsp(@xmath32 ) .",
    "that is , quadratic terms are allowed , but only for pairs of edges that share a node .",
    "the bottleneck version of tsp(@xmath0 ) was introduced by arkin et al .  in  @xcite , denoted as the @xmath0-neighbour maximum scatter tsp .",
    "jger and molitor  @xcite encountered tsp(2 ) while studying the permuted variable length markov model .",
    "several heuristics are proposed and compared in  @xcite as well as a branch and bound algorithm for tsp(2 ) in  @xcite . a column generation approach to solve tsp(@xmath32 )",
    "is given in  @xcite and polyhedral results were reported by fischer and helmberg  @xcite and fischer  @xcite .",
    "the @xmath0-neighbour tsp is also related to the @xmath0-peripatetic salesman problem  @xcite and the watchman problem  @xcite . to the best of our knowledge ,",
    "no other works in the literature address tsp(@xmath0 ) .    referring to the uav example discussed earlier ,",
    "it is clear that the flight subpaths depend on both the angle and distances between successive nodes . by precalculating these and assigning costs to @xmath18 for some @xmath33",
    ", we see that qtsp is a natural model for this problem .",
    "in fact , the flight paths may be affected by edges further downstream .",
    "thus we can get successively better models by considering tsp(@xmath31 ) , tsp(@xmath32 ) , ... , tsp(@xmath0 ) in turn . in practice",
    "we expect diminishing returns to take hold quickly .    in this paper",
    "we show that qtsp is strongly np - hard even if the costs are restricted to 0 - 1 values and the underlying graph is halin . in contrast ,",
    "tsp on a halin graph can be solved in @xmath34 time  @xcite .",
    "interestingly , we show that tsp(@xmath32 ) and tsp(@xmath35 ) can also be solved on a halin graph in @xmath34 time . in fact , our approach can be extended to any fixed @xmath0 .",
    "we note that while halin graphs have treewidth 3 , the results on graphs with bounded treewidth ( e.g.  @xcite ) can not easily extended to graph problems with quadratic objective functions .",
    "the paper is organized as follows . in section  [ halinsec ]",
    "we introduce some preliminary results and notations for the problem .",
    "the complexity result for qtsp on halin graphs is given in section  [ complexsec ] .",
    "an @xmath34 algorithm to solve tsp(@xmath35 ) on halin graphs is given in section  [ tspkhalinsec ] , which can be extended to give an @xmath36 algorithm for tsp(@xmath0 ) .",
    "further extensions of this result to fully reducible classes of graphs is discussed in section  [ reduciblesec ] .",
    "an earlier version of the np - completeness results presented here were included as part of the m.sc .",
    "thesis of the first author  @xcite .",
    "a halin graph @xmath37 is obtained by embedding a tree with no nodes of degree two in the plane and connecting the leaf nodes of @xmath38 in a cycle @xmath39 so that the resulting graph remains planar .",
    "the non - leaf nodes belonging to @xmath38 are referred to as _ tree _ or _",
    "internal _ nodes and the nodes in @xmath39 are referred to as _ cycle _ or _",
    "outer _ nodes of @xmath40 .",
    "a halin graph with exactly one internal node is called a _",
    "wheel_. if @xmath40 has at least two internal nodes and @xmath41 is an internal node of @xmath38 which is adjacent to exactly one other internal node , then @xmath41 is adjacent to a set of consecutive nodes of @xmath39 , which we denote by @xmath42 .",
    "note that @xmath43 .",
    "the subgraph of @xmath40 induced by @xmath44 is referred to as a _ fan _ , and we call @xmath41 the centre of the fan",
    ". see figure  [ fig : fan ] .     with 3 fans .",
    "@xmath41 is the centre of fan @xmath45 . ]",
    "@xcite [ notwheel2fans ] every halin graph which is not a wheel has at least two fans .",
    "let @xmath2 be a graph and let @xmath46 be a connected subgraph of @xmath7 .",
    "let @xmath47 be the cutset of @xmath48 , that is , the smallest set of edges whose removal disconnects @xmath48 from @xmath7 .",
    "let @xmath49 be the graph obtained by contracting @xmath48 to a single node , called a ` pseudo - node ' and denoted by @xmath50  @xcite .",
    "the edges in @xmath49 are obtained as follows :    1 .",
    "an edge with both ends in @xmath48 is deleted ; 2 .",
    "an edge with both ends in @xmath51 remains unchanged ; 3 .",
    "an edge @xmath52 with @xmath53 , @xmath54 is replaced by the edge @xmath55 .",
    "@xcite [ contracthalin ] if @xmath45 is a fan in a halin graph @xmath40 , then @xmath56 is a halin graph .",
    "note that each time a fan is contracted using the graph operation @xmath56 , the number of non - leaf nodes of the underlying tree is reduced by one . that is , after fewer than @xmath57 fan contractions , a halin graph will be reduced to a wheel .",
    "let @xmath41 be the centre of a fan @xmath45 , and label the outer nodes in @xmath45 in the order they appear in @xmath39 as , @xmath58 ( @xmath59 ) .",
    "let @xmath60 be the @xmath35-edge cutset @xmath61 which disconnect @xmath45 from @xmath7 such that @xmath62 is adjacent to @xmath63 , @xmath0 is adjacent to @xmath41 but not adjacent to @xmath64 for any @xmath65 , @xmath66 and @xmath67 is adjacent to @xmath68 ( see figure  [ fig : halin2 ] , @xmath69 ) .",
    "note that any hamilton cycle @xmath14 in @xmath40 contains exactly two edges of @xmath70 .",
    "the pair of edges chosen gives us a small number of possibilities for traversing @xmath45 in a tour @xmath14 .",
    "for example , if @xmath14 uses @xmath0 and @xmath67 , it contains the subsequence @xmath71 ( call this a _ left - traversal _ of @xmath45 ) , if @xmath14 uses @xmath62 and @xmath0 it contains the subsequence @xmath72 ( call this a _ right - traversal _ of @xmath45 ) and if @xmath14 uses @xmath62 and @xmath67 , it contains a subsequence of the form @xmath73 , for some @xmath74 as it must detour through the centre of @xmath45 ( call this a _ centre - traversal _ of @xmath45 ) .     containing fan @xmath45 .",
    "@xmath60 is a 3-edge cutset which disconnects @xmath45 from @xmath40 . ]",
    "many optimization problems that are np - hard on a general graph are solvable in polynomial time on a halin graph  @xcite . unlike these special cases ,",
    "we show that qtsp is strongly np - hard on halin graphs .",
    "the decision version of qtsp on a halin graph , denoted by rqtsp , can be stated as follows :    `` given a halin graph @xmath40 and a constant @xmath75 , does there exist a tour @xmath14 in @xmath40 such that @xmath76 ? ''    [ t1 ]  @xcite rqtsp is strongly np - complete even if the values @xmath77 and @xmath78 for @xmath79 .",
    "rqtsp is clearly in np .",
    "we now show that the 3-sat problem can be reduced to rqtsp .",
    "the 3-sat problem can be stated as follows : `` given a boolean formula @xmath80 in conjunctive normal form ( cnf ) containing a finite number of clauses @xmath81 on variables @xmath82 such that each clause contains exactly three literals ( @xmath83 where for each @xmath65 , @xmath84 or @xmath85 for some @xmath86 ) , does there exists a truth assignment such that @xmath80 yields a value ` true ' ? ''    from a given instance of 3-sat , we will construct an instance of rqtsp .",
    "the basic building block of our construction is a 4-fan gadget obtained as follows .",
    "embed a star on 5 nodes with center @xmath87 and two specified nodes @xmath88 and @xmath89 on the plane and add a path @xmath90 from @xmath88 to @xmath89 covering each of the pendant nodes so that the resulting graph is planar ( see figure  [ fig : gadget ] ) .",
    "call this special graph a 4-fan gadget .",
    "the nodes on path @xmath90 of this gadget are called _",
    "outer nodes _ and edges on @xmath90 are called _ outer edges_.",
    "let @xmath91 be edges with distinct end points in @xmath90 .",
    "note that any @xmath88-@xmath89 hamilton path of the gadget must contain all the outer edges except one which is skipped to detour through @xmath87 .",
    "we will refer to an @xmath88-@xmath89 hamilton path in a @xmath92-fan gadget as a _ center - traversal _ as before .",
    "we will construct a halin graph @xmath40 using one copy of the gadget for each clause and let @xmath91 correspond to literals contained in that clause .",
    "we will assign costs to pairs of edges such that every hamilton cycle with cost 0 must contain a centre - traversal for each clause . to relate a hamilton cycle to a truth assignment , a centre - traversal which does not contain edge @xmath93 corresponds to an assignment of a _ true _ value to literal @xmath94 .",
    "now construct @xmath40 as follows .",
    "for each clause @xmath95 , create a copy of the @xmath92-fan gadget .",
    "the @xmath96 , and @xmath87 nodes of the 4-fan gadget corresponding to the clause @xmath97 are denoted by @xmath98 and @xmath99 respectively .",
    "connect the node @xmath100 to the node @xmath101 , @xmath102 .",
    "introduce nodes @xmath103 and @xmath104 and the edges @xmath105 . also introduce a new node @xmath41 and connect it to @xmath106 and @xmath99 for @xmath107 .",
    "the resulting graph is the required halin graph @xmath40 .",
    "see figure  [ fig : rqtsp ] .",
    "assign the cost @xmath108 for every edge in @xmath40 .",
    "let @xmath109 and @xmath110 .",
    "note that every tour which contains edges @xmath111 and @xmath112 traverses every gadget using a centre - traversal .",
    "for each gadget : assign paired cost @xmath113 for pairs of edges which are neither outer edges nor both adjacent to the same literal edge @xmath114 or @xmath115 , and for all other pairs of edges within the gadget assign cost @xmath116 . for each variable @xmath117 , @xmath118 , and all literals @xmath119 ( @xmath120 ) if @xmath121 , assign cost @xmath122 where @xmath123 and @xmath124 are edges connecting @xmath125 ( and @xmath126 ) to the respective @xmath92-fan gadget centre @xmath87 .",
    "all other paired costs are assumed to be 0 .",
    "suppose @xmath127 is a valid truth assignment .",
    "then in each clause there exists at least one true literal .",
    "consider a tour @xmath14 in @xmath40 which contains the edges @xmath111 and @xmath112 and traverses every gadget such that @xmath14 detours around exactly one literal edge which corresponds to a literal which is true in @xmath127 .",
    "since the truth assignment is valid , such a @xmath14 exists .",
    "clearly @xmath14 has cost 0 , since no costs are incurred by pairs of edges contained in a single gadget , nor are costs incurred of the form @xmath128 where @xmath129 .",
    "the latter must be true because in any truth assignment , the variable corresponding to @xmath130 , say @xmath131 must be either assigned a value of true or false .",
    "suppose a cost of 1 is incurred by @xmath128 and hence @xmath132 .",
    "if @xmath131 is _ true _ , and @xmath133 , then @xmath134 clearly must be _ false _ , so @xmath14 can not detour to miss both @xmath135 and @xmath136 .",
    "the same contradiction arises , if @xmath131 is _",
    "false_. hence a _ yes _ instance of 3-sat can be used to construct a _ yes _",
    "instance for rqtsp .",
    "now suppose there is an optimal tour which solves rqtsp with @xmath137 .",
    "suppose @xmath138 is such a tour .",
    "clearly it must use edges @xmath111 and @xmath112 , and hence must traverse every gadget via a centre - traversal .",
    "such a detour must skip a literal edge in every gadget , otherwise a cost of 1 is incurred .",
    "suppose @xmath139 is the set of literals which are skipped .",
    "@xmath140 for any @xmath141 , otherwise a cost of 1 is incurred .",
    "this implies that a truth assignment which results in every literal in @xmath142 being _ true _ is a valid truth assignment to the variables @xmath143 .",
    "that is , for each literal edge which is skipped in @xmath138 , assign _ true _ or _ false _ to the corresponding variable such that the literal evaluates to _ true _ ( if @xmath84 , set @xmath144 and if @xmath85 , set @xmath145 ) .",
    "the truth values for any remaining variables can be assigned arbitrarily .",
    "this truth assignment returns _ true _ for each clause since exactly one literal in each clause is detoured , and evaluates to _ true_. hence this truth assignment is a valid assignment for 3-sat .",
    "we now examine the case when @xmath0 is fixed . note that for fixed @xmath0 , only a constant number of pairs of edges are relevant in evaluating a tour .",
    "define edges @xmath146 and @xmath147 in a planar graph @xmath7 to be _ consecutive _ at @xmath111 in a planar embedding of @xmath7 if there exists a face which contains both @xmath15 and @xmath16 .",
    "this may include the unbounded _",
    "outer face_. two edges that are not consecutive are called _ non - consecutive _ edges .",
    "[ t3 ]  @xcite given a planar embedding of @xmath40 , no tour in @xmath37 contains edges @xmath146 and @xmath147 which are non - consecutive at @xmath111 .",
    "proceed by contradiction .",
    "suppose that there exists a planar embedding of @xmath40 and a tour @xmath14 in @xmath40 such that @xmath146 and @xmath147 are nonconsecutive edges at @xmath111 and @xmath148 . by our previous discussion regarding fan traversals ,",
    "we only need to consider @xmath149 .",
    "since @xmath15 and @xmath16 are non - consecutive at @xmath111 , there are edges in the planar embedding of @xmath40 , say @xmath150 and @xmath151 , such that the clockwise order of edges around @xmath111 is @xmath152 ( see figure  [ fig : consechalin ] ) .",
    "suppose @xmath38 is rooted at @xmath111 , then @xmath111 has ( at minimum ) subtrees rooted at @xmath153 and @xmath154 . since @xmath14 is a tour which contains edge @xmath15 , it must contain a path through the subtree rooted at @xmath155 from @xmath155 to @xmath156 , which we denote by @xmath157 .",
    "similarily , it must contain a path @xmath158 in the subtree rooted at @xmath87 from @xmath87 to @xmath159 ( see figure  [ fig : consechalin ] ) .",
    "for any @xmath160 , let @xmath161 be the graph obtained from @xmath7 by deleted the vertices in @xmath45 and edges incident to a node in @xmath45 .",
    "now we note that @xmath162 where @xmath163 has two components , one containing @xmath112 and one containing @xmath154 . restricting to @xmath14 , which also contains @xmath90 as a path",
    ", we see that @xmath164 contains at least 2 components , which is a contradiction",
    ".    we will refer to paths that may be contained in a tour as _ candidate paths _ and _ @xmath0-candidate paths _ when the length @xmath0 is specified .",
    "these must satisfy the condition of theorem  [ t3 ] .",
    "[ cor : kpaths ] for fixed @xmath0 , @xmath40 , given tour @xmath14 and @xmath165 , @xmath166 , there are at most @xmath167 @xmath0-candidate paths containing @xmath15 which may belong to @xmath14 .    from corollary  [ cor :",
    "kpaths ] , it is clear that the number of quadratic costs which are relevant is bounded above by @xmath168 for any fixed @xmath0 .    since the interior nodes of @xmath40 form a tree , it is clear that any face of @xmath40 must contain an outer edge .",
    "moreover , the following corollary will prove useful .",
    "[ cor : face ] if @xmath40 is embedded in the plane such that it is planar and @xmath39 defines the outer face , for any outer edge @xmath15 which is contained in the outer face and face @xmath169 , every tour which does not contain @xmath15 must contain all other edges in @xmath169 .",
    "tsp(@xmath31 ) is the same as tsp , which is solvable in linear time on halin graphs  @xcite .",
    "tsp(@xmath32 ) can also be solved in linear time by minor modifications of the algorithm in  @xcite .",
    "to do so , one simply has to store the costs of traversing the fan ( with respect to the tsp(@xmath32 ) cost function ) as the penalties at the node resulting from the fan contraction operation .",
    "however , for fixed @xmath170 , such minor changes appear not to be a viable option .",
    "we now develop a linear time algorithm to handle tsp(@xmath35 ) .",
    "the following modification is applied to the cost function to simplify the problem .",
    "note that we can restrict our attention to the @xmath34 candidate 3-paths as a result of corollary  [ cor : kpaths ] .",
    "let @xmath171 .",
    "for each candidate triple @xmath172 , let @xmath173    consider the problem : @xmath174    [ thm : stsp ] any optimal solution to the stsp(3 ) is also optimal for tsp(3 ) .",
    "suppose @xmath138 is a tour in @xmath10 .",
    "then @xmath175 hence , every tour in @xmath10 has equal cost under the simplified problem as the original tsp(3 ) objective function .",
    "it immediately follows that any optimal solution to the simplified problem is optimal for the tsp(3 ) .    in view of theorem  [ thm : stsp ] , we can restrict our attention to stsp(3 ) .",
    "we note that the approach used in cornuejols et al .",
    "@xcite where the costs of paths are assigned to the newly created arcs by solving a linear system of equations can not be extended for any @xmath0-neighbour tsp for @xmath170 as it leads to an over - determined system of equations which may be infeasible .",
    "instead , we extend the penalty approach used in phillips et al .",
    "the idea here is to introduce a node - weighted version of the problem where we define a penalty function on the nodes of @xmath39 .",
    "we iteratively contract the fans in @xmath40 , storing the values of the best subpaths which traverse each fan in the penalty function .",
    "once we are left with a wheel , we can find the optimal tour .",
    "we reverse the order of contraction and un - contract , maintaining optimality , until we have an optimal tour in the original graph .",
    "let us first discuss the case where @xmath40 is a halin graph which is not a wheel . in this case",
    ", @xmath40 will have at least two fans .",
    "let @xmath45 be an arbitrary fan in @xmath40 with @xmath41 as the centre .",
    "label the outer nodes in the order they appear in @xmath39 , say , @xmath58 ( @xmath59 ) .",
    "let @xmath60 be the @xmath35-edge cutset @xmath61 which disconnects @xmath45 from @xmath40 such that @xmath62 is adjacent to @xmath63 , @xmath0 is adjacent to @xmath41 and @xmath67 is adjacent to @xmath68 .",
    "let @xmath176 , @xmath177 and @xmath178 .",
    "there are at least two edges not connected to @xmath45 which are consecutive with @xmath0 at @xmath111 .",
    "the edge which follows @xmath0 in the clockwise orientation of edges at @xmath111 is denoted @xmath179 , and the other is @xmath180 .",
    "there are exactly two edges not connected to @xmath45 and incident on @xmath181 .",
    "these edges are labelled @xmath182 . likewise , there are exactly two edges not connected to @xmath45 and incident on @xmath183 .",
    "these edges are labelled @xmath184 .",
    "( see figure  [ fig : fanf ] . ) without loss of generality @xmath185 are in @xmath39 and @xmath186 are in @xmath38 .    to complete a fan contraction operation ,",
    "we consider the 3 types of traversals of @xmath45 .",
    "we define a penalty function stored at nodes of @xmath39 which contains the minimum traversal of @xmath45 of each type . for any left or right - traversal of @xmath45",
    ", there is a single path through @xmath45 .",
    "any tour which includes @xmath62 and @xmath0 must pass through one edge of the pair incident with @xmath62 lying outside @xmath45 together with edges @xmath187 .",
    "similarly , any tour which includes @xmath0 and @xmath67 must pass through one edge of the pair incident with @xmath67 lying outside @xmath45 together with edges @xmath188 .",
    "any tour which includes @xmath62 and @xmath67 must also pass through one edge in of each of the pairs of edges incident with @xmath62 ( or @xmath67 ) lying outside @xmath45 .",
    "that is , every @xmath14 containing @xmath62 and @xmath67 must contain a path containing one subsequence from the set @xmath189 .",
    "we refer to a centre - traversal of @xmath45 which bypasses @xmath190 as a left path , one which bypasses @xmath191 for some @xmath192 $ ] as a middle path , and one which bypasses @xmath193 as a right path .",
    "let @xmath194 be the set of pseudo - nodes in @xmath39 .",
    "for each @xmath195 , define @xmath196 and @xmath197 @xmath198 , let @xmath199 and let @xmath200 .",
    "@xmath201 indicates which penalty value ( to be defined shortly ) stored at node @xmath65 is to contribute to the objective function value .",
    "the first component of @xmath201 represents the inner structure of @xmath65 ( edges @xmath202 and @xmath203 prior to fan contraction ) , and the second component of @xmath201 , the outer ( @xmath204 to @xmath180 prior to the contraction of adjacent pseudo - nodes ) .",
    "let @xmath205 be the vector containing @xmath201 for every @xmath195 .",
    "let @xmath206 be the restriction of @xmath205 to the vertices in @xmath56 and augmented by @xmath207 .",
    "let @xmath208 be the penalty that is incurred if @xmath201 occurs at @xmath65 .    for @xmath209",
    "define : @xmath210    since the penalties stored at @xmath211 depend on edges which are not incident with @xmath65 , and the dependent edges may be ` absorbed ' into adjacent pseudo - nodes so not every @xmath205 is feasible for a given @xmath14 .",
    "that is , the inner and outer structures of adjacent pseudo - nodes in @xmath39 must agree . formally , we say that @xmath205 is feasible for @xmath14 if the following conditions are satisfied for every pseudo - node @xmath65    1 .",
    "@xmath212 and 2 .",
    "@xmath213 ,    and for every pair of consecutive pseudo - nodes @xmath214    1 .",
    "@xmath215 , 2 .",
    "@xmath216 , 3 .",
    "@xmath217 and 4 .",
    "@xmath218 .",
    "let @xmath219 be the set of all feasible @xmath220 pairs .",
    "we refer to @xmath220 pairs as tour pairs and now only consider feasible @xmath205 . for an example of a feasible tour pair ,",
    "see figure  [ fig : rho ] .",
    "the problem now contains a cost for every triplet of consecutive edges in tour @xmath14 and additionally , a penalty at each outer node @xmath65 .",
    "consider the modified 3-neighbour tsp on a halin graph defined as follows : @xmath221    note that @xmath222 can be computed in @xmath223 time by storing penalty 20-tuples at each cycle node @xmath87 .",
    "also note that there are @xmath224 feasible @xmath205 vectors for a given @xmath14 , however , we show that the optimal @xmath220 pair can be found in @xmath34-time .",
    "initially , set @xmath225 for all @xmath201 and @xmath209 . for fan @xmath45 in @xmath40 ,",
    "the penalties must be updated to store the costs of traversing @xmath45 when @xmath45 is contracted to pseudo - node @xmath226 .",
    "let @xmath227 represent the traversal of @xmath45 which contains only edges in @xmath39 .",
    "that is , @xmath228 .",
    "then @xmath229 represents the cost incurred by selecting the edges in @xmath227 .",
    "assign the minimum cost of the left - traversal ( which contains @xmath230 , @xmath231 and @xmath180 ) , with inner structure @xmath232 to @xmath233 .",
    "that is , assign the sum of the costs along the traversal together with the set of penalties on the outer nodes in @xmath45 which minimizes this cost . in the case that @xmath234 , it is not possible to have an inner structure @xmath235 , and @xmath236 .",
    "otherwise @xmath237 similarly , assign the minimum cost of the right - traversal ( which contains @xmath238 , @xmath239 and @xmath179 ) with inner structure @xmath240 to @xmath241 . in the case that @xmath242 , it is not possible to have an inner structure @xmath80 , and @xmath243 .",
    "otherwise @xmath244 let @xmath245 , be the centre - traversal of @xmath45 which does not contain @xmath246 .",
    "then @xmath247 represents the cost incurred by the edges in @xmath248 .",
    "that is , @xmath249 @xmath250 for @xmath251 , and @xmath252 assign the minimum cost of the centre - traversal which contains @xmath230 , @xmath231 and @xmath238 , @xmath253 which has inner structure @xmath254 to @xmath255 . in the case",
    "that @xmath234 and @xmath256 , there is a single path traversing @xmath45 with inner structure @xmath235 , namely , @xmath257 so @xmath258 and when @xmath259 , we assign the cost of the minimum centre - traversal with inner structure @xmath235 .",
    "note that this path detours some @xmath260 , @xmath261 .",
    "@xmath262 similarly , when @xmath263 and @xmath242 , there is a single path traversing @xmath45 with inner structure @xmath80 , namely , @xmath264 so @xmath265 and when @xmath242 , we assign the cost of the minimum centre - traversal with structure @xmath80 .",
    "note that this path detours some @xmath260 , @xmath266 .",
    "@xmath267 now consider @xmath268 .",
    "if @xmath269 then @xmath270 is assigned the cost of the minimum path detouring @xmath260 for @xmath271 .",
    "if @xmath63 ( @xmath68 ) is not a pseudo - node then the centre - traversal must contain @xmath272 ( @xmath273 ) and @xmath31 ( @xmath274 ) is removed from @xmath275 from the following equation .",
    "@xmath276 now consider @xmath277 .",
    "this is the same as the case where @xmath268 except for the inner structure .",
    "@xmath278    all @xmath279 which has not been assigned are not associated with a feasible @xmath280 and are assigned a value @xmath281 .",
    "suppose @xmath37 is a halin graph which is not a wheel and @xmath45 is a fan in @xmath40 .",
    "if @xmath282 is an optimal tour pair in @xmath40 then there exists a feasible @xmath283 in @xmath56 such that @xmath284 is optimal in @xmath56 and @xmath285 .",
    "let @xmath194 be the set of pseudo - nodes in @xmath40 .",
    "let @xmath226 be the pseudo - node which results from the contraction of @xmath45 , and label the vertices and edges of @xmath45 as in figure  [ fig : fanf ] .",
    "given @xmath282 , we construct @xmath284 as follows .",
    "let @xmath286 and @xmath287 corresponding to the structure of @xmath282 around @xmath45 in @xmath40 .",
    "that is , @xmath14 contains an @xmath288 path through @xmath45 in @xmath40 , so let @xmath289 where @xmath290 @xmath291 @xmath292 and @xmath293 then @xmath294 is feasible in @xmath56 .",
    "using equations  [ betal]-[betabm ] and noting that all new triples which contain @xmath226 have @xmath295 , we get @xmath296    it remains to show that @xmath284 is optimal in @xmath56 . towards a contradiction ,",
    "suppose there exists a tour pair @xmath297 such that @xmath298 .",
    "@xmath299 otherwise this contradicts the calculations of the minimums in equations  [ betal]-[betabm ] . using equations  [ betal]-[betabm ]",
    ", we can expand @xmath45 , extending @xmath300 to @xmath301 in @xmath40 with @xmath302 . then @xmath303 , contradicting the optimality of @xmath282 .",
    "hence @xmath284 is optimal in @xmath56 .",
    "we now show that @xmath279 can be updated in @xmath304-time , by introducing a structure which allows to optimally chain together the @xmath305-values for consecutive nodes in @xmath306 .",
    "refer to the subgraph induced by the nodes @xmath307 as _ pseudo - fan _ @xmath308 for ( @xmath309 ) .",
    "define the penalty associated with pseudo - fan @xmath308 to be @xmath310 for @xmath311 with inner structure @xmath312 and outer structure @xmath313 .",
    "to compute @xmath310 we use the following recursion which chains together the minimum @xmath305-values through consecutive nodes in @xmath39 while maintaining feasibility of @xmath205 .    for @xmath314 , @xmath315 and @xmath316 , and @xmath317 @xmath318 @xmath319 and @xmath320",
    "it is now possible to compute the minimum traversals of @xmath45 used in equations  [ betal]-[betabm ] . for example , middle paths through @xmath45 have cost which minimizes the sum of @xmath321 and @xmath322 , such that both pairs are feasible . in the worst case ,",
    "when all outer nodes in @xmath45 belong to @xmath194 , we must compute @xmath323 and @xmath324 , which can be done in @xmath304-time . by pre - computing these",
    ", one can evaluate the minimum traversals of @xmath45 used in equations  [ betal]-[betabm ] , in @xmath304-time and hence one can update @xmath279 in @xmath304-time .",
    "we iteratively perform the fan contraction operation , updating costs and penalties until we are left with a wheel . the optimal tour in @xmath40 skirts the cycle @xmath39 and detours exactly once through centre @xmath41 , skipping exactly one edge of @xmath39 .",
    "orient the cycle @xmath39 in the clockwise direction .",
    "@xmath14 contains all edges in @xmath39 except for the skipped edge , say @xmath325 , together with the two edges which detour around @xmath326 .",
    "define function @xmath327 for each edge @xmath328 .",
    "let @xmath329 and @xmath330 be the tree edges adjacent to @xmath64 and @xmath331 , respectively .",
    "define @xmath332    then , the optimal tour pair has @xmath333 suppose that we fix an edge @xmath326 in @xmath14 .",
    "then @xmath40 can be considered to be a fan as shown in figure  [ fig : wheelfan ] .",
    "fix edge @xmath334 in @xmath14 and consider @xmath40 to be a fan @xmath335",
    ". then the minimum tour in @xmath40 can be determined by calculating the minimum of the minimum centre - traversal of @xmath335 and the tour which bypasses @xmath334 ( using , say , fan @xmath336 ) .",
    "this can be computed in @xmath337-time using the pseudofan technique described above .",
    "the preceeding discussion yields the following algorithm .",
    "halin graph @xmath40 use the wheel procedure to find an optimal tour @xmath14 in @xmath40 let @xmath45 be a fan in @xmath40 contract @xmath45 to a single node @xmath226 , using the case 1 procedure .",
    "that is , assign penalties @xmath305 to @xmath226 , assign cost @xmath116 to all triples in @xmath56 and assign costs @xmath338 to all remaining triples which are @xmath35-neighbours in @xmath40 .",
    "halintsp3(@xmath56 ) expand all pseudo - nodes in reverse order and update @xmath14 @xmath14    each time that a fan is contracted , the number of tree nodes is reduced by 1 , and hence the fan contraction operation is performed one less than the number of non - leaf nodes in @xmath40 . the fan contraction operation can be performed in @xmath304-time , and each time it is performed , the number of nodes in @xmath40 is reduced by @xmath339 . since the wheel procedure takes @xmath34-time , the total time for the algorithm is @xmath34 .    as a result of corollary  [ cor : face ] , the preceding algorithm can be extended to solve tsp(@xmath0 ) in @xmath34 time by extending the penalty functions at outer nodes to accommodate subpaths of length @xmath340 .",
    "the method presented here may be extended to tsp(@xmath0 ) for any fixed @xmath0 , however the complexity increases by a factor of @xmath340 , which is constant for fixed @xmath0 and @xmath341 when @xmath342 .",
    "we say that a class @xmath343 of 3-connected graphs is _ fully reducible _ if it satisfies the following :    1 .   if @xmath344 has a 3-edge cutset with shores @xmath48 and @xmath345 , then both @xmath49 and @xmath346 are in @xmath343 and we call @xmath7 a _ reducible _ graph in @xmath343 ; and 2",
    ".   tsp can be solved in polynomial time for the graphs in @xmath343 that do not have non - trivial 3-edge cutsets .",
    "we call such graphs _ irreducible_.    for instance , halin graphs can be understood as graphs built up from irreducible fans connected to the remainder of the graph via @xmath35-edge cutsets",
    ". cornuejols et al .",
    "@xcite show that the ability to solve tsp in polynomial time on irreducible graphs in @xmath343 allows to solve tsp in polynomial time on all of @xmath343 using facts about the tsp polyhedron .",
    "we remark that the algorithm of section @xmath92 can be used to show a similar statement for tsp(@xmath0 ) . here",
    "we consider a graph class @xmath343 that is _ fully @xmath0-reducible _ in the sense that either it can be subdivided into irreducible graphs via @xmath35-edge cutsets , or it is irreducible and it is possible to solve the @xmath0-neighbour hamilton path problem in polynomial time .",
    "this requires solving the following problem : @xmath347 where @xmath348 is a penalty function for the pseudo - node which depends on how tour @xmath14 traverses @xmath65 , analogous to the construction for the @xmath35-neighbour tsp of section  [ ksec ] .",
    "a graph @xmath7 from a class of fully reducible graphs .",
    "hp(@xmath0 ) and hence mtsp(@xmath0 ) can be solved in polynomial time on @xmath7 .",
    "let @xmath14 be the minimum cost tour in @xmath7 .",
    "let @xmath48 be an irreducible subgraph in @xmath7 .",
    "contract @xmath48 to a single node @xmath50 , assigning penalties @xmath348 to @xmath50 . call the resulting graph @xmath49 .",
    "assign cost @xmath116 to all @xmath0-tuples in @xmath49 which correspond to @xmath0-paths containing @xmath50 as an interior node .",
    "all other costs remain the same in @xmath49 as in @xmath7 .",
    "mtsp(@xmath0)(@xmath49 ) expand all pseudo - nodes in reverse order and update @xmath14 @xmath14    we recursively perform the contraction operation on the irreducible subgraphs of @xmath7 , storing the necessary tour information in the penalty at the resulting pseudo - node .",
    "for any fixed @xmath0 , this requires a polynomial number of penalties and the least cost traversals of @xmath48 can be computed in polynomial time using a generalization of the pseudo - fan strategy above .",
    "suppose the contraction operation is performed on a subgraph of size @xmath89 in time @xmath349 , where @xmath350 is a polynomial in @xmath89 .",
    "each time this operation is performed , the number of nodes in the graph is reduced by @xmath89 .",
    "this operation is performed at most @xmath4 times and it follows that the entire algorithm can be performed in polynomial time .",
    "in this paper , we have shown that qtsp is np - hard even when the costs are restricted to taking 0 - 1 values on halin graphs .",
    "we have presented a polynomial time algorithm to solve a restriction of qtsp , denoted tsp(@xmath0 ) on any fully reducible graph for any fixed @xmath0 . to illustrate this",
    ", we have given an algorithm which solves tsp(3 ) on a halin graph in @xmath34 time .",
    "it may be noted that the approach that is presented can directly be extended to the corresponding bottleneck versions on any fully reducible graph class by replacing the ` sum ' operations with ` max ' with the same time complexity .",
    "h.  bodlaender .",
    "dynamic programming on graphs with bounded treewidth . in _",
    "automata , languages and programming ( tampere , 1988 ) _ , volume 317 of _ lecture notes in comput .",
    "_ , pages 105118 .",
    "springer , berlin , 1988 .",
    "a.  fischer , f.  fischer , g.  jger , j.  keilwagen , p.  molitor , and i.  grosse .",
    "exact algorithms and heuristics for the quadratic traveling salesman problem with an application in bioinformatics .",
    ", 166(0):97114 , 2014 .",
    "g.  jger and p.  molitor .",
    "algorithms and experimental study for the traveling salesman problem of second order . in boting yang , ding - zhu du , and caoan wang , editors , _ combinatorial optimization and applications _",
    ", volume 5165 of _ lecture notes in computer science _ , pages 211224 .",
    "springer berlin , 2008 ."
  ],
  "abstract_text": [
    "<S> the quadratic travelling salesman problem ( qtsp ) is to find a least cost hamilton cycle in an edge - weighted graph , where costs are defined on all pairs of edges contained in the hamilton cycle . </S>",
    "<S> this is a more general version than the commonly studied qtsp which only considers pairs of adjacent edges . </S>",
    "<S> we define a restricted version of qtsp , the @xmath0-neighbour tsp ( tsp(@xmath0 ) ) , and give a linear time algorithm to solve tsp(@xmath0 ) on a halin graph for @xmath1 . </S>",
    "<S> this algorithm can be extended to solve tsp(@xmath0 ) on any fully reducible class of graphs for any fixed @xmath0 in polynomial time . </S>",
    "<S> this result generalizes corresponding results for the standard tsp . </S>",
    "<S> tsp(@xmath0 ) can be used to model various machine scheduling problems as well as an optimal routing problem for unmanned aerial vehicles ( uavs ) . </S>"
  ]
}
{
  "article_text": [
    "`` physical unclonable functions '' ( pufs ) are innovative hardware devices that shall be hard to reproduce physically because their functionality depends on variance in the production or configuration process ( e.g. in dopant levels ) @xcite .",
    "they promise to enable qualitatively novel security mechanisms e.g. for authentication and key generation and distribution and have consequently become an important research area of hardware security@xcite .",
    "+ secure authentication of a chip when its responses are obtained from a remote location , i.e. when its physical properties can not be directly examined , is an important security objective . in order to reach this objective , the chip s functionality must be unclonable not only physically but in general ( `` mathematical unclonability''@xcite ) . this property is highly desirable e.g. for chips in banking cards and passports , but has proven to be very difficult to ensure against well - equipped attackers on the authentication secrets in chips@xcite .",
    "mathematical unclonability with pufs can be reached with so called `` strong puf '' which possesses a number of challenge - response ( c - r ) pairs that is so large that an attacker with temporary access to the puf can not evaluate them all .",
    "puf constructions with an exponentially large number of c - r pairs have been constructed , e.g. the arbiter puf@xcite .",
    "it has proved possible to construct models of such pufs based on a relatively small number of c - r pairs by using machine - learning programs@xcite .",
    "with such a model , a simple piece of software can emulate the remote puf , thus breaking its security , completely .",
    "it is the major aim of our contribution to present a qualitatively novel solution to this fundamental vulnerability of strong pufs .",
    "the origin of the problem is that the true information stored in arbiter pufs is not exponentially large but relatively small .",
    "the attacker only has to determine the relative delays of all stages in order to build a complete model . if we estimate that the delay in one stage can be quantified by 1 byte even an xor puf with 10 arbiter pufs and 128 stages each has a true information content only about 1.3 kbyte .",
    "it is true that this information is harder to extract than information stored in a conventional unsecured memory .",
    "but because it is a straightforward exercise to construct simple models in which this information appears as parameters it proves to be too easy to extract it . hence we need to require a qualitatively more difficult extraction methodology and to increase the amount of stored information in the form of manufacturing variations scalable and by a large factor .",
    "+ the basic idea to meet this requirement is to employ a `` second challenge '' which specifies how the puf is to be reconstructed with a subset of gates of an fpga chip .",
    "if the power of this subset is large enough , there is an super - exponentially large number of possible puf constructions , whose properties the attacker can not all learn .",
    "even if the attacker is in physical possession of the chip on which the puf will be realized , she thus remains deprived of the possibility to examine the puf which is finally used for authentication . + the security mechanism",
    "we employ for authentication is to compare a string of single bit responses from a puf , its `` fingerprint '' , with a previously recorded one from the same puf .",
    "we prefer this `` chip biometrics '' to authentication methods based on secret keys , because it does not require to store any helper data for error correction on the chip or to select challenges based on properties derived from the chip .",
    "these practices reveal information about properties of the puf .",
    "such information has been shown to allow very effective learning attacks on the puf employed in the authentication@xcite .",
    "because our security mechanism is to deprive the attacker of any chance to learn anything about the authenticated puf , it reaches its full security potential .",
    "+ reconfigurable pufs have been proposed before .",
    "katzenbeisser et al.@xcite and lao and parhi@xcite studied architectures in which the challenge - response behaviour is changed without modifying the puf itself .",
    "lao and parhi@xcite also proposed constructions in which the underlying puf is modified in its properties .",
    "zhang and lin@xcite presented a scheme against replay attacks in which pufs are completely reconfigured on 16 different locations on an fpga .",
    "gehrer and sigl@xcite reconfigured pufs on an fpga repeatedly to generate keys efficiently .",
    "majzoobi et al.@xcite suggested the use of a `` one time puf '' realized as a reconfigured arbiter puf on an fpga that is used for a single authentication as a measure against man in the middle attacks .",
    "reconfiguration was not used as a measure against machine - learning attacks before .",
    "+ _ contribution _ our main contribution is a highly practical and efficient puf based authentication system that we hope reaches a security level that rivals the best alternative technologies for authentication .",
    "our contributions and insights are :    1 .",
    "we develop a qualitatively new security mechanism that prevents in principle that an attacker with temporary direct access to the fpga has access to the puf that is later used for authentication .",
    "we thus present a strong puf immune to all machine learning attacks presented up to now in the literature .",
    "we demonstrate that , contrary to widespread belief , an fpga based arbiter puf with delay stages based on switched multiplexers offers a viable and simple alternative to the more complex constructions based on delay lines that have programmable lengths ; 3 .   for the first time we employ a machine learning program as a tool for the quantitative characterization of properties of arbiter pufs , rather than only for predicting its responses",
    "we completely avoid all risks from attacks on helper data or specially selected subsets of challenges by strictly only using challenges that are random relative to the chip for which they are chosen and employing no error correction ( i.e. we perform a true `` biometrics of the chip '' ) .",
    "_ structure _ in section [ back ] we supply the necessary background information on components of our puf construction and methods used for the characterization of our puf .",
    "section [ design ] presents first our arbiter puf design and then our authentication architecture .",
    "the results of an experimental characterization of our implementation are presented in section [ results ] .",
    "the discussion in section [ disc ] analyses the security of our construction and section [ concl ] concludes .",
    "an arbiter puf@xcite consists of a chain of n pairs of multiplexers ( with an `` upper '' and `` lower '' multiplexer ) through which pass two signals that started at the same time .",
    "each multiplexer pair is controlled by one bit of a challenge of n bits .",
    "if the challenge bit is 0 the upper ( lower ) signal is passed through the upper ( lower ) multiplexer and if the challenge bit is 1 the upper ( lower ) signal is passed through the lower ( upper ) multiplexer . the response bit is 0 ( 1 ) if the lower ( upper ) signal arrives first at an arbiter at the end of the chain .",
    "the construction of arbiter pufs faces the demand to balance out crossing times for the two paths averaged over the manufacturing induced fluctuations@xcite .",
    "on fpgas the detailed routing on the fabric usually has to be balanced .",
    "compared to puf implementations in asics , where routing is done by fixed circuit path connections , routing in fpgas has has much more influence on the path delays . due to their flexible design",
    ", a complex switching matrix is used to connect the logic elements to each other . hence the routing delay",
    "is mostly defined by the number of switches involved and much less by the process variances of the gates . while it proved possible to roughly balance the delay within and among the delay stages by placing them symmetrically , the delays to the first delay stage and from the last stage to the arbiter turn out to have imbalances due to a different routing that are always at least an order of magnitude larger than the one due to manufacturing variance@xcite .",
    "if this demand is not met , the responses are no longer unique to the individual puf because the routing differences are of course the same on different chips for the same puf .",
    "two solutions to this timing problem have been found .",
    "the first one is to configure the lookup tables typically provided by fpgas as programmable delays lines instead of multiplexers and to tune an individual arbiter puf by placing delay elements only in one of the paths so that it is perfectly balanced@xcite .",
    "the other is to duplicate the puf on different slices of the fpga and to compare the output of these pufs with identical routing ( `` double arbiter puf'')@xcite .",
    "it seems difficult to apply these solutions to our basic approach of an arbiter puf whose delay stages are placed at random positions of the fpga fabric .",
    "the former would require to balance each individual arbiter for the large number of pufs that need to be constructed .",
    "the latter solution is not applicable if the puf must be distributed over a considerable fraction of the fpga fabric as necessary for our approach .",
    "we therefore present another solution to the routing problem in section [ randomarb ] .",
    "the simplest topological timing model of an arbiter puf is the following@xcite .",
    "the parameters @xmath0 and @xmath1 are the differences in delay time between the multiplexers of one pair for a challenge bit of 0 and 1 respectively .",
    "the total delay time of in a n - stage arbiter puf @xmath2d@xmath3 is then given as : @xmath4 here @xmath5 a vector with the challenge bits as entry and @xmath6 is the following recursive parameter : @xmath7 here i in @xmath8 stands for the i - th delay stage .",
    "it is possible to employ programs for machine learning to estimate the vector of @xmath6 values .",
    "the estimate is often good enough to predict the response values of an arbiter puf which is then completely broken as a strong puf because it can be emulated with a piece of software .",
    "we used a learning program based on logistic regression together with the rprop optimization ( section 3 in tobisch & becker@xcite ) , to analyse our implementation .",
    "because the meaning of @xmath6 is not intuitive we calculated the time difference of the delay difference of the upper and lower path for a challenge bit 0 and a challenge bit 1 in each delay stage i : @xmath9 this set of all @xmath10 quantifies the functionality of the arbiter puf .",
    "we obtained @xmath10 by setting all @xmath8 to 0 .",
    "then we inferred 64 @xmath10 values and the value of @xmath11 from eq.([ome ] ) .",
    "@xmath10 remains dimensionless , because the absolute values of the delay times have no influence on the responses .",
    "here we authenticate chips with a protocol that is roughly analogous to protocols for biometric authentication , e.g. with a fingerprint .",
    "a `` basic protocol '' was discussed and realized with several types of asic - based pufs by maes@xcite .",
    "this protocol consists of two phases , enrolment and verification . during the enrolment phase the verifier records a subset of responses to randomly chosen challenges ( analogous to a subset of biometric features chosen ) for each chip to be deployed and stores them in a database together with an i d that identifies the chip . during the verification a chip in the field sends its identifier to the verifier .",
    "the verifier sends one of the stored challenges .",
    "the chip determines the response to the challenge and sends it to the verifier .",
    "the chip is verified if this response differs by less bits than a verification threshold t from the response stored in the database . + according to maes the main drawback of the basic protocol is that it can only be employed in pufs which can not be cloned mathematically , i.e. which functionality can not be cloned in principle .",
    "our main contribution is such a puf , and therefore we will present a realization of the basic protocol in section [ prot ] . rather than inventing a new nomenclature ( like e.g. `` fpga signature '' ) we continue to use the term `` fingerprint '' for our authenticating characteristic , but keep the quotation marks to emphasize that this merely expresses the conceptual similarity to biometrics .",
    "we used the smartfusion2 soc from microsemi corp . for our project@xcite .",
    "it combines a 166 mhz arm cortex m3 microprocessor , a system controller for a variety of hardware tasks and interfaces , embedded non - volatile memory ( envm ) and an fpga fabric on the same chip . because our construction needs both a microprocessor and fpga fabric this soc is ideally suited , because the housing of these components on the same chip eliminates many possible attack vectors among these components .",
    "we used smartfusion2 m2s - fg484 som starter kits from emcraft systems for our investigations .",
    "the fpga of this starter kit has 12084 `` logic units '' each of which consists of a look - up table ( lut ) with four inputs , a flip - flop and a carry signal from the neighbouring logic element .",
    "while most of the characterizations of our implementation was performed in jtag programming mode , the authentication was also tested in the so called `` in - system '' programming mode ( isp ) in which the microprocessor receives data from an interface ( e.g. ethernet and usb ) and transfers it to the system controller which then programs the fpga and/or the envm .",
    "in our implementation we realized an arbiter puf with 64 delay stages .",
    "we first present our solution to the problem of balanced timing announced in section [ arb - fpga ] . from a set of randomly chosen challenges we simply selected those challenges for which the delay - time difference between the two signals happens to be close to 0 fortuitously .",
    "we call these challenges `` m - challenges '' ( m for metastable ) .",
    "we employed two methods :    1 .",
    "we selected challenges with metastable responses ( i.e. responses that flip between 0 and 1 when the same challenge is repeatedly applied ) on a `` reference chip '' that will never leave the customer s security lab .",
    "+ for the m - challenges the delay difference induced by routing and by manufacturing variance exactly balance on the reference chip .",
    "therefore on other chips the m - challenges will also lead to delay times that are expected to be balanced up to time differences induced by manufacturing variance .",
    "2 .   we modelled the reference chip with the machine - learning model explained in section [ arb1 ] .",
    "we then used this model to calculate the predicted delay difference d for a given challenge .",
    "then we selected those challenges for which d was smaller then a maximal bound b.    these two methods did not select the same challenges ( i.e. our learning program was not precise enough to always predict the challenges leading to metastability ) . when we chose b = 0.2 the sets selected by the two different methods had about equal power and were both suitable for the selection of m - challenges for production .",
    "fig.[fig : del - diff ] illustrates the distribution of delay - time differences and the selection of the bounded sample . + our construction is non - ideal because it just balances the routing delays ( these delays will be referred to as `` routing induced delay '' below ) with the delays due to manufacturing variance ( `` manufacturing induced delay '' ) .",
    "+ in order to allow for a very large number of possible arbiter puf constructions we selected a region of the fpga fabric which includes of 84 @xmath12 17 = 1428 lookup tables .",
    "we chose only a small subset of all available lookup tables to make our scheme practical : the rest of the fpga could still be used for other purposes .",
    "the 128 lookup tables used for the 64 delay stages of our arbiter puf are selected randomly from this set .",
    "the positions of the selected luts are stored in the `` core - cell - constraint '' file .",
    "[ fig : plan ] displays the layout of random puf @xmath13 1 .",
    "+ the decision of the response was performed in an arbiter which was not realized as a flip - flop but with a lut that evaluates the response r as ( u and l ) or ( u and r ) , where u and l are the signal from the upper and low path of the arbiter puf .",
    "this construction yields a more symmetric and less temperature dependent response of the arbiter .",
    "the vhdl code of our arbiter puf is given in the appendix .",
    "our authentication system works analogous to conventional biometrics and maes basic protocol@xcite ( see section [ biom ] ) . in the enrolment phase a set of reference templates , consisting of the responses to a number of arbiter - puf random layouts as `` 2nd challenges '' ,",
    "together with 100 randomly chosen m - challenges , is determined and stored in a data base .",
    "both these challenge - response pairs and the random layouts the pufs must be kept secret .",
    "the number of 2nd - challenge/100 m challenge pairs must be sufficiently large for the intended application for the chip authentication . creating and maintaining such a database before the deployment of the chip is a significant effort .",
    "+ when a chip in the field is to be authenticated , two challenges are sent :    1 .   a novel type of challenge , which consist of the compiled vhdl code that determines the configuration of the fpga .",
    "this challenge , which always has a size of 556 kbyte for our fpga , is transferred by the m3 microprocessor to the system controller which then programs the fpga within a time of at most 28 seconds .",
    "2 .   100 conventional 64 bit",
    "long m - challenges that decide the multiplexers settings .",
    "the 100 responses are defined to be the `` fingerprint '' of the chip and are sent to the authenticating party .",
    "it took about 10 @xmath14secs to obtain a single response to an m - challenge .",
    "this procedure is sketched in fig .",
    "[ fig : auth ] .",
    "it is identical to maes basic protocol except that instead of challenge - response pairs , 2nd - challenge and m - challenge - response pairs have to be sent .",
    "the authenticating party calculates the hamming distance between the template and the `` fingerprint '' . only if this hamming distance is smaller than a certain threshold t , the chip is authenticated .",
    "+ both the novel and the m - challenge are analogous just to the information on which part of the human body ( e.g. which finger ) is to be used for authentication .",
    "we characterized the properties of ten different randomly placed arbiter pufs in a climate chamber at different temperatures .",
    "firstly we verified that our construction is really a functional arbiter puf :    1 .   by applying the learning program discussed in section",
    "[ learn ] in order to test if our designs can be modelled as arbiter pufs which show manufacturing variances .",
    "2 .   by directly testing if m - challenges that lead to metastable responses on the reference chip do mostly not lead to metastability bits in other chips instances due to manufacturing variance .    ) for a precise definition of the difference of delay differences.,height=234 ]    fig.[fig : deldiff1 ] shows the difference of delay differences of the 64 stages of ten arbiter pufs obtained with about 20 - 30 iterations of their machine - learning program .",
    "one recognizes that , as expected , the difference of delays differences vary strongly among the pufs because the routing depends strongly on the random positions of the delay stages on the fpga fabric .",
    "we succeeded to predict the responses to random challenges with an error rate of about 1.4 @xmath15 .",
    "fig.[fig : deldiff2 ] shows the difference of delay differences ( see eq.([del - del ] ) ) of the 64 stages of one randomly placed arbiter puf in three different chips , relative to the mean of the delay differences .",
    "even though we are sure that the derived delay differences are correct , because they enable a correct prediction of responses , we did not achieve a deeper understanding of their distribution , e.g. of the surprisingly strong correlation of the delay values in consecutive stages ) that the difficulty of understanding the routing enhances the security of our design by obfuscation . ] .",
    "the inter - chip differences in fig.[fig : deldiff2 ] are mainly due to manufacturing variance .",
    "their mean absolute values were found to be a factor of 29.6 smaller than the differences among chips with a different layout in fig.[fig : deldiff1 ] .",
    "this confirms the well known fact that in a multiplexer based arbiter puf design the delays are dominated by differences in the routing ( morozov et al.@xcite found that they dominate by a factor of 25.6 in their fpga . ) + table [ tab : metastables ] shows the fractions of ones for 10 randomly chosen m - challenges on two further chips .",
    "an analysis of 1000 m - challenges found that only about 10 @xmath15 of all m - challenges on chip a also lead to metastable bits on chip b and c. here a metastable bit is defined as a bit that flips at least once when the challenge is applied 100000 times .",
    "this confirms that the responses of m - challenges are strongly influenced by manufacturing variance .",
    "moreover this fraction is much larger than the one for randomly chosen challenges which we found to be 0.72 @xmath15 2@xmath16 = 1.3 @xmath12 10@xmath17 m - challenges . ] .     [",
    "tab : metastables ]     + the randomness of the responses of our pufs was found to depend on the placement strategy .",
    "therefore we needed to test uniformity , uniqueness and reliability of our puf with the finally chosen placement strategy that is described in section [ randomarb ] .",
    "uniformity was determined as the bias ] of our construction displayed ( fig.[fig : skew ] ) .",
    "the data shown in fig.[fig : skew ] have a mean bias of 4.9 @xmath15 , that is clearly larger than the one expected from statistical fluctuations for our test of 0.3 @xmath15 but still acceptable for fingerprints that do not have to be perfectly random .",
    "moreover the bias is in a range commonly considered to be acceptable for physical random number generators@xcite .",
    "+ the uniqueness of our puf was quantified as the mean hamming distance of a `` fingerprint '' of different chips in the same configuration ( fig.[fig : gdistr1 ] ) .",
    "it has a value of 29.7 which is significantly different from the maximal value of 50 , i.e. the relative entropy among two bits from different chips is only 0.88 .",
    "this is not a problem for our application , as the bits in biometric templates commonly have an entropy smaller than 1 .",
    "the reduced value can be understood as an effect of our method to choose challenges that yield a metastable response on a reference chip . on the reference chip ( see section [ randomarb ] ) metastability means that routing and manufacturing variation induced delay are exactly balanced . on the chips that are compared",
    ", the routing delay will be the same as on the reference chip but the manufacturing induced delay will be different in general .",
    "there is a 50 @xmath15 chance that manufacturing induced delay between the paths will have the same sign as the the one of the routing induced delay on the chips to be compared . in this case",
    "their response will always be identical . if the delay has an opposite sign on both chips there is a 50 @xmath15 chance that this will lead to a different response because the distribution of manufacturing and routing induced delays in our selected sample of challenges must be the same by design .",
    "this argument predicts a mean hamming distance of 25 and the value we found is similar .",
    "the agreement of the hamming distances induced by manufacturing variations in delay times in fig.[fig : gdistr1 ] with a gaussian distribution is excellent .",
    "this suggests that the bits in our `` fingerprints '' are distributed randomly , because for the mean value of 29.7 a gaussian is an excellent approximation to the binomial distribution that is expected if the matching probabilities are described by a bernoullie process .",
    "+ the reliability was tested by measuring the noise in the `` fingerprint '' as a function of temperature .",
    "we found that the noise is caused exclusively by a metastability of the arbiter that develops when the the transit times are nearly exactly balanced so that the both input pulses occur simultaneously .",
    "we identified all metastable bits in a sample of 10000 challenges and its fraction of ones @xmath18 .",
    "the probability p that metastable bit i induces a noise bit , i.e. different responses to consecutive identical challenges is : @xmath19 the total noise fraction n determined with j metastable bits is then : @xmath20 in this manner we obtained n = 1.04 % and 1.59 % for two chips .",
    "n did not change significantly with temperature in the range 5 @xmath21c - 60 @xmath21c .",
    "however we found that even though its power remained roughly constant the set of metastable bits changed with temperature because some bits became stable and others became metastable . while the mean hamming distance between consecutively taken responses with random challenges on",
    "the same puf was 0.08 @xmath22 0.026 @xmath15 it rose to 0.35 @xmath22 0.058 @xmath15 when responses taken at 5 @xmath21c and 60 @xmath21c are compared .",
    "analogously to the common definition in biometrics , the false acceptance rate ( far ) is the probability that the biometric system authenticates a chip incorrectly and the false rejection rate ( frr ) is the probability that the system does not authenticate incorrectly .",
    "we had seen in the previous section [ arb - char ] that the distribution of matching bits in `` fingerprint '' taken from two different chips is random and the probability for a non - match has a certain value p ( p=0.297 in our case ) . under these circumstances",
    "we obtain : @xmath23 where t is the threshold for the number of bits up to which two `` fingerprints '' that are classified a belonging to the same chip can differ .",
    "if we choose t = 12 we find that for our construction far = 2.4 @xmath12 10@xmath24 .",
    "the frr is the probability that more than t bit non - matches occur in two `` fingerprints '' of the same chip .",
    "we estimated the frr by determining the 10000 hamming distances among `` fingerprints '' of the same arbiter puf .",
    "their distribution is plotted in fig.[fig : pdistr1 ] we then performed a fit of these data to a binomial probability distribution and used this fit to determine the frr in a manner analogous to eq.([binom ] ) to frr = 7.2 @xmath12 10@xmath25 .",
    "the underlying extremely conservative assumption of using a binomial distribution to fit these data is that each bit has a mean probability of 1.3 % to have a different value in two consecutive measurements . in reality",
    "we found that the noise for the 100 m - challenges we employed to obtain the `` fingerprint '' comes from six metastable bits with a fraction of ones different from 1 or 0 by more than 0.1 @xmath15 .",
    "it is then much less probable to obtain a hamming distance larger than 6 than expected by a binomial distribution . as a detailed noise model is beyond the scope of the present paper we contend ourselves with the above conservative upper bound on the frr .",
    "as a first attempt to break our construction the attacker could try to use the 100 challenge - response pairs that were sent to obtain the `` fingerprint '' and could be intercepted by her to model the puf .",
    "however we found that it took at least about 2000 challenge - response training pairs for a successful model .",
    "it is conceivable that a smaller number might suffice to construct a model , however it seems certain that 100 c - r pairs are not sufficient , because they contain an information content not larger than 100 bits which is insufficient to encode the 64 difference of delay difference values that constitute the model .",
    "+ another obvious attack on our construction would be an attempt to model all arbiter pufs that can be constructed when the puf is under physical control of the attacker .",
    "a conservative estimate of the number of pufs that can be constructed with our implementation defines pufs to be different only if they contain different gates , i.e. all pufs with identical gates that are only put into a different configuration are counted as a single puf .",
    "we then estimate the number of pufs n@xmath26 as : @xmath27 clearly such a number of pufs can not even be configured on the fpga .",
    "even if ( theoretically ) each reconfiguration could somehow be accelerated to take only a pico - second this would still take 1.6 @xmath12 10@xmath28 years .",
    "therefore the only promising possibility is an attack that faithfully models the timing of the subset of lookup tables selected from the fpga and the gates used for the routing between them .",
    "there are two security mechanisms that make this attack difficult .",
    "the first one is largely due to the need for reverse engineering : it will be more difficult to construct a model of a complex dynamical fpga system than of the simple static arbiter puf system .",
    "it seems likely that as a first step the attacker needs to reverse engineer the fpga in order to obtain a topological model of the fpga fabric .",
    "this model enables the attacker to identify all components that influence the delays and to predict how these components are combined in the connections between delay elements , the switching matrix for routing and the arbiter . only equipped with such a construction model she will be able to understand the distribution of the delay times of the stages we determined ( but did not understand , yet ) in section [ results ] .",
    "without such a model she would need to learn or measure the delays between each delay element and all other delay elements , a number of delays that increases y with the already large number of components .",
    "this reverse engineering step is analogous to the one necessary in attacks on authentication secrets stored in conventional memories and protected by sensors or other protection mechanisms . once the reverse engineering is completed , this security mechanism is broken and further chips can be attacked with relatively little effort . at this point",
    "a second , puf specific , protection mechanism kicks in : even on a reverse engineered fpga the attacker needs to find out about the manufacturing variations of the delays of all elements of the puf that are used in our construction . in our implementation",
    "she needs to determine the properties of 1428 lookup tables , i.e. the individual delays of each of them and of all gates that are used in interconnecting them .",
    "this makes a complete and linear characterization directly in the hardware ( e.g. with techniques developed by tajik et al.@xcite ) or with the use of learning programs a time - consuming task on each individual chip that is to be modelled .",
    "this security mechanism is easily scaled : if an attacker will succeed to break our security mechanism in an unacceptably short time , one can increase the number of lookup tables out of which the pufs are constructed . in this manner",
    "our puf construction promises to make cloning impossible based on physical principles rather than lack of knowledge about the protection method and technical skill to break it .",
    "our second protection mechanism requires a level of effort to clone a chip that does not significantly decrease when the protection mechanism is fully understood by the attacker .",
    "we presented a qualitatively novel concept to increase the security of strong pufs .",
    "up to now most attempts to make pufs more secure aimed at making the individual puf construction more complex , e.g. by performing an xor between several pufs .",
    "this strategy is limited by the need to keep the final output sufficiently reliable .",
    "our strategy was to keep the individual puf simple but to force the attacker to model not only the static puf but a part of a dynamical fpga system .",
    "this concept enabled a qualitative increase the complexity of the system that has to be modelled compared to previous constructions . the only fundamental limit to increasing",
    "it further is the available size of the fpga fabric .",
    "our fpga - based arbiter puf design itself is simpler than the ones proposed up to now .",
    "the price one has to pay for the gain in security is an additional overhead for the sending of the `` 2nd challenge '' that specifies a reconfiguration of the puf .",
    "however , it is not necessary to introduce this overhead for each authentication . from the 1428 luts assigned to our construction in our implementation it is possible to construct 10 arbiter pufs with one second challenge , so that only every 10th authentication needs the additional overhead .",
    "we thank georg becker , shahin tajic , jean - pierre seifert and marco winzker for helpful discussions .",
    "georg becker kindly provided a copy of his machine - learning program to us .",
    "4 becker , g.t . : on the pitfalls of using arbiter pufs as building blocks .",
    "ieee transactions on information forensics and security 34 , 1295 - 1307 ( 2015 )    gassend , b. , clarke , d . , van dijk , m. , devadas , s. : delay - based circuit authentication and applications . in : proc . of the 18th annual acm symposium on applied computing .",
    "294 - 301 .",
    "acm digital library ( march 2003 )    gehrer , s. , sigl , g. : using the reconfigurability of modern fpgas for highly efficient puf - based key generation .",
    "journal of circuits , systems and computers 25.01 , 1640002 ( 2016 )    katzenbeisser , s. , kocabas , . , van der leest , v. , sadeghi , a. , schrijen , g. , schrder , h. , wachsmann , c. : recyclable pufs : logically reconfigurable pufs .",
    "journal of cryptographic engineering 1,177 ( 2011 )    lao , y. , parhi , k. : novel reconfigurable silicon physical unclonable functions . in : proc .",
    "workshop on foundations of dependable and secure cyber - physical systems ( fdscps ) , pp .",
    "30 - 36 ( 2011 )    killmann , w. , schindler , w. : a proposal for : functionality classes for random number generators , https://www.bsi.bund.de/shareddocs/downloads/de/bsi/ zertifizierung / interpretationen/ ais_20_functionality _ classes_for_random_number_generators_e.html ( 2011 )    machida , t. , yamamoto , d. , iwamoto , m. , sakiyama , k. : a new mode of operation for arbiter puf to improve uniqueness on fpga . in : proc .",
    "federated conference on computer science and information systems ( fedcsis ) , pp .",
    "871 - 878 .",
    "ieee press , new york ( 2014 )    maes , r. , : physically unclonable functions : constructions , properties and applications .",
    "phd thesis , katholieke universiteit leuven ( 2012 )    majzoobi , m. , koushanfar , f. , potkonjak , m. : techniques for design and implementation of secure reconfigurable pufs .",
    "acm trans . on reconfigurable technology and systems 2 , 5 ( 2009 )    majzoobi , m. , koushanfar , f. , devadas , s. : fpga puf using programmable delay lines . in : information forensics and security ( wifs ) , pp",
    "ieee press , new york ( 2010 )    majzoobi , m. , kharaya , a. , koushanfar , f. , devadas , s. : automated design , implementation , and evaluation of arbiter - based puf on fpga using programmable delay lines . http://eprint.iacr.org/2014/639.pdf ( 2014 )",
    "microsemi corporation smartfusion2 system - on - chip fpgas product brief , http://www.actel.com/documents/smartfusion2 ds.pdf , ( 2013 )    morozov , s. , maiti , a. , schaumont , p. : a comparative analysis of delay based puf implementations on fpga . in : proc .",
    "6th international symposium , arc 2010 .",
    "lncs , vol . 5992 , pp .",
    "springer , berlin ( 2010 )    pappu , r. : physical one - way functions .",
    "phd thesis , mit , ( 2001 ) ; pappu , r. , recht , b . ,",
    "taylor , j . ,",
    "gershenfeld , n. : physical one - way functions .",
    "science , 297 , 2026 - 2030 ( 2002 ) rhrmair , u. , sehnke , f. , slter , j. , dror , g. , devadas , s. , schmidhuber , j. : modeling attacks on physical unclonable functions . in : acm conference on computer and communications security ( ccs ) , pp . 237249 .",
    "( 2010 )    rhrmair , u. , slter , j. , sehnke , f. , xu , x. , mahmoud , a. , stoyanova , v. , dror , g. , schmidhuber , j. , burleson , w. , devadas , s. : puf modeling attacks on simulated and silicon data .",
    "ieee transactions on information forensics and security 8 , 1876 - 1891 ( 2013 )    rhrmair , u. : disorder - based security hardware : an overview . in : chang c. , potkonjak , m. ( eds . )",
    "security system design and trustable computing .",
    "springer , cham ( 2016 )    tajik , s. , dietz , e. , frohmann , s. , dittrich , h. , nedospasov , d. , helfmeier , c. , seifert , j. , boit , c. , hbers , h. : a complete and linear physical characterization methodology for the arbiter puf family , https://eprint.iacr.org/2015/871 ( 2015 )    c. tarnovsky , c. , deconstructing a `` secure '' processor . in : black hat federal 2010 , washington , https://www.blackhat.com/presentations/bh-dc-10/tarnovsky_chris/blackhat-dc-2010-tarnovsky-dasp-slides.pdf ( 2010 )    tobisch , j. , becker , g. t. : on the scaling of machine learning attacks on pufs with applications to noise bifurcation . in : mangard , s. , schaumont , p. ( eds . )",
    "proceedings of the 11th international workshop , rfidsec 2015 .",
    "lncs , vol . 9440 , pp .",
    "17 - 31 , springer international ( 2015 )    xu , t. , potkonjak , m. : digital bimodal functions and digital physical unclonable functions : architecture and applications . in : chang",
    "c. , potkonjak , m. ( eds . ) security system design and trustable computing .",
    "springer , cham ( 2016 )    zalikava , s.s . ,",
    "zhang , l. , klybik , v.p . ,",
    "ivaniuk , a.a . , chang , c. : design and implementation of high - quality physical unclonable functions for hardware - oriented cryptography . in : chang",
    "c. , potkonjak , m. ( eds . ) security system design and trustable computing .",
    "springer , cham ( 2016 )    zhang , j. , lin , y. , reconfigurable binding against fpga replay attacks .",
    "acm trans . on design automation of electronic systems 20 , 33 ( 2015 )",
    "_ vhdl code for our arbiter puf construction .",
    "`` above '' and `` below '' stand for the upper and lower signal pathes .",
    "[ ... ] stands for the insertion of 62 additional consecutive , identical sub - parts of the code . _    .... ---------------------------------------------------------------------------- ---- -- company : xxx -- file : arbiter_puf.vhd -- description : -- arbiter physical unclonable function ( puf ) -- submodul to evaluate response from arbiter puf . --",
    "the input challenge defines the connection of a row of different gates . --",
    "an arbiter at the end of this gates evaluates which of the two signals arrived first -- and sets the corresponding response . --",
    "targeted device : < family::smartfusion2 > < die::m2s150 > <",
    "package::fg1152 > -- author : xxx -- date : 12.2015 ---------------------------------------------------------------------------- ---- library ieee ; use ieee.std_logic_1164.all ; use ieee.numeric_std.all ;    entity arbiter_puf is port ( c : in std_logic_vector(63 downto 0 ) ; -- challenge enable : in std_logic ; -- enable signal for arbiter puf dc : in std_logic ; -- do n't care input for luts ready : out std_logic ; -- ready signal r : out std_logic -- response ) ; end arbiter_puf ;    architecture architecture_arbiter_puf of arbiter_puf is -- signal , component etc .",
    "declarations attribute syn_keep : boolean ; signal above : std_logic : = ' 0 ' ; signal c0 : std_logic : = ' 0 ' ; signal above0,above1 , [ ... ] , above64 : std_logic : = ' 0 ' ; -- top arbiter puf signals signal below : std_logic : = ' 0 ' ; signal below0,below1 , [ ... ] , below64 : std_logic : = ' 0 ' ; -- bottom arbiter puf signals -- set syn_keep for puf signals to prevent removing in synthesis optimization attribute syn_keep of above , above0,above1 , [ ... ] , above64 , below , below0,below1 , [ ... ] , below64,c0 : signal is true ; begin -- architecture body above0 < = above when ( c0= ' 0 ' and dc = ' 0 ' ) else below ; below0 < = below when ( c0= ' 0 ' and dc = ' 0 ' ) else above ; -- challenge 0 above1 < = above0 when ( c(0)= ' 0 ' and dc = ' 0 ' ) else below0 ; below1 < = below0 when ( c(0)= ' 0 ' and dc = ' 0 ' ) else above0 ; -- challenge 1 above2 < = above1 when ( c(1)= ' 0 ' and dc = ' 0 ' ) else below1 ; below2",
    "< = below1 when ( c(1)= ' 0 ' and dc = ' 0 ' ) else above1 ; [ ... ] -- challenge 63 above64",
    "< = above63 when ( c(63)= ' 0 ' and dc = ' 0 ' ) else below63 ; below64 < = below63 when ( c(63)= ' 0 ' and dc = ' 0 ' ) else above63 ;    ---- arbiter to generate response r < = ( below64 and not(above64 ) ) or ( below64 and r ) ; -- enable process process--(enable ) begin wait on enable ; if(enable = ' 1 ' ) then above < = ' 1 ' ; below < = ' 1 ' ; -- wait until response is generated wait on r ; ready < = ' 1 ' ; else -- enable = ' 0 ' above < = ' 0 ' ; below < = ' 0 ' ; ready < = ' 0 ' ; end if ; end process ; end architecture_arbiter_puf ; ...."
  ],
  "abstract_text": [
    "<S> we present a practical and highly secure method for the authentication of chips based on a new concept for implementing strong physical unclonable function ( puf ) on field programmable gate arrays ( fpga ) . </S>",
    "<S> its qualitatively novel feature is a remote reconfiguration in which the delay stages of the puf are arranged to a random pattern within a subset of the fpga s gates . before the reconfiguration </S>",
    "<S> is performed during authentication the puf simply does not exist . </S>",
    "<S> hence even if an attacker has the chip under control previously she can gain no useful information about the puf . </S>",
    "<S> this feature , together with a strict renunciation of any error correction and challenge selection criteria that depend on individual properties of the puf that goes into the field make our strong puf construction immune to all machine learning attacks presented in the literature . </S>",
    "<S> more sophisticated attacks on our strong - puf construction will be difficult , because they require the attacker to learn or directly measure the properties of the complete fpga . </S>",
    "<S> a fully functional reference implementation for a secure `` chip biometrics '' is presented . </S>",
    "<S> we remotely configure ten 64-stage arbiter pufs out of 1428 lookup tables within a time of 25 seconds and then receive one `` fingerprint '' from each puf within 1 msec .    physical unclonable functions ( pufs ) , biometrics of chips , silicon biometrics , field programmable gate arrays </S>"
  ]
}
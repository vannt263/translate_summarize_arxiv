{
  "article_text": [
    "in computer science , one is led to the study of algebraic structures based on trees , graphs , tableaux , matroids , words and other discrete structures .",
    "hopf algebras are also shown to play an important role in quantum field theory @xcite , non - commutative qft @xcite , @xcite , ( see also the review articles @xcite @xcite ) , or in quantum gravity spin - foam models @xcite , @xcite .",
    "these algebras use a selection - quotient rule for the coproduct .",
    "@xmath0 \\otimes s/_a , \\ ] ] where @xmath1 is some ( general ) combinatorial object ( tree , graph , matroid , _ etc . _ ) , @xmath2 $ ] is a substructure of @xmath1 and @xmath3 is a quotient .",
    "the present article introduces a new hopf algebraic structure , which we call @xmath4 , on the set of packed words .",
    "the product is given by the shifted concatenation and the coproduct is given by such a selection - quotient principle .",
    "let @xmath5 be an infinite totally ordered alphabet @xmath6 and @xmath7 be the set of words with letters in the alphabet @xmath5 .",
    "a word @xmath8 of length @xmath9 is a mapping @xmath10 $ ] from @xmath11 $ ] to @xmath5 . for a letter @xmath12 ,",
    "the partial degree @xmath13 is the number of times the letter @xmath14 occurs in the word @xmath8 .",
    "one has : @xmath15,x_i}.\\ ] ] for a word @xmath16 , one defines the alphabet @xmath17 as the set of its letters , while @xmath18 is the set of indices in @xmath17 . @xmath19",
    "the upper bound @xmath20 is the supremum of @xmath18 , i. e. @xmath21 note that @xmath22 .",
    "let us define the substitution operators .",
    "let @xmath23 and    @xmath24 , with @xmath25 .",
    "one then defines : @xmath26    let us define the pack operator of a word @xmath8 .",
    "let @xmath27 with @xmath28 and define @xmath29 as @xmath30    the corresponding packed word , denoted by @xmath31 , is @xmath32 .",
    "this means that if the word @xmath8 has ( one or several ) `` gap(s ) '' between the indices of its letters , then in the word @xmath31 these gaps have vanished ( the indices of the respective letters being modified accordingly ) .",
    "let @xmath33 .",
    "one then has @xmath34 .",
    "a word @xmath35 is said to be _ packed _ if @xmath36 .",
    "the packed words of weight 2 are @xmath37 , with @xmath38 .",
    "the operator @xmath39 is idempotent ( @xmath40 ) .",
    "it defines , by linear extension , a projector .",
    "the image , @xmath41 , is the set of packed words .",
    "let @xmath42 be two words ; one defines the shifted concatenation @xmath43 by @xmath44 where , for @xmath45 , @xmath46 denotes the image of @xmath8 by @xmath47 for @xmath48 if @xmath49 and @xmath50 ( in general , all letters can be reindexed except @xmath51 ) .",
    "it is straightforward to check that , in the case the words are packed , the result of a shifted concatenation is a packed word .    let @xmath52 be a field .",
    "one defines a vector space @xmath53 .",
    "one can endow this space with a product ( on the words ) given by @xmath54    the product above is similar to the shifted concatenation for permutations .",
    "moreover , if @xmath42 are two words in @xmath7 , then @xmath55 .",
    "@xmath56 is an associative algebra with unit ( aau ) .",
    "let @xmath57 be three words in @xmath58 .",
    "one then has : @xmath59    thus , the algebra @xmath60 is associative . on the other hand , for all @xmath61 , one can easily check that @xmath62    now remark that @xmath63 .",
    "this is clear from the fact that @xmath64 .",
    "one concludes that @xmath56 is an aau .",
    "as already announced in the introduction , we call this algebra @xmath65 .",
    "the product is non - commutative , for example : @xmath66 .",
    "let @xmath67 be a word and @xmath68 $ ] .",
    "a sub - word @xmath69 $ ] is defined as @xmath70 , where @xmath71 .",
    "[ lm : subword]let @xmath42 be two words .",
    "let @xmath72 $ ] and @xmath73 $ ] .",
    "one then has @xmath74 ) = pack(u[i])*pack(v[j']),\\ ] ] where @xmath75 is the set @xmath76 .    by direct computation ,",
    "one has : @xmath77 ) = pack(ut_{sup(u)}(v)[i+j ] ) = pack(u[i]t_{sup(u)}(v)[j])\\notag\\\\   & = pack(u[i]t_{sup(u[i])}(v[j ' ] ) ) = pack(u[i])*pack(v[j ' ] ) .",
    "\\end{aligned}\\ ] ]        let @xmath78 be equipped with the shifted concatenation .",
    "the mapping pack @xmath79 is then a morphism aau .    by using the lemma [ lm : subword ] and taking @xmath80 $ ] and @xmath81 $ ]",
    ", one gets the conclusion .",
    "@xmath65 is , by construction , the algebra of the monoid @xmath41 , therefore to check that @xmath65 is a free algebra , it is sufficient to show that @xmath41 is a free monoid on its atoms .    here we will use an  internal \" characterization of free monoids in terms of irreducible elements .",
    "[ def : irrword ] a packed word @xmath8 in @xmath41 is called an irreducible word if and only if it can not be written under the form @xmath82 , where @xmath83 and @xmath84 are two non trivial packed words .",
    "the word @xmath85 is an irreducible word .",
    "the word @xmath86 is a reducible word because it can be written as @xmath87 .",
    "if @xmath8 is a packed word , then @xmath8 can be written uniquely as @xmath88 , where @xmath89 , @xmath90 , are non - trivial irreducible words .",
    "the @xmath91 position of word @xmath8 is called an admissible cut if @xmath92 ) = inf(w[i+1 \\dots |w| ] ) - 1 $ ] or @xmath93 ) = 0 $ ] , where @xmath94 is infimum of @xmath18 .",
    "because the length of word is finite , one can get @xmath95 , with @xmath96 maximal and @xmath89 non trivial , @xmath97 .",
    "one assumes that one word can be written in two ways @xmath98 and @xmath99    denoting by @xmath52 the first number such that @xmath100 , without loss of generality , one can suppose that @xmath101 . from equation ,",
    "the @xmath102 position is an admissible cut of @xmath8 . from equation ,",
    "the @xmath102 position is not an admissible cut of @xmath8 .",
    "one thus has a contradiction .",
    "one has @xmath103 and @xmath104 for all @xmath90 .",
    "one can thus conclude that @xmath41 is free as monoid with the packed words as a basis .",
    "let us give the definition of the coproduct and prove that the coassociativity property holds .",
    "let @xmath105 , one defines @xmath106 with    @xmath107    let u be a word .",
    "one defines @xmath108 .",
    "[ def : coprod ] the coproduct of @xmath109 is given by @xmath110}pack(w[i ] ) \\otimes pack(w[j]/_{w[i ] } ) , \\forall w \\in \\h,\\ ] ] where this sum runs over all partitions of @xmath111 $ ] divided into two blocks , @xmath112 $ ] and @xmath113 .",
    "one has : @xmath114    let us now prove the coassociativity .",
    "let @xmath115 $ ] , and @xmath116 be a mapping : @xmath117,\\notag\\\\   i_s & \\longmapsto s.\\end{aligned}\\ ] ]    [ lm : coprod1 ] let @xmath35 be a word , @xmath118 be a subset of @xmath119 $ ] and @xmath120 $ ] .",
    "one then has @xmath121)[i_1 ] = s_{\\phi_{w[i]}}(w[i'_1]),\\ ] ] where @xmath122 is @xmath123 and @xmath124}$ ] is the packing map of @xmath69 $ ] that is given in .    using the definition of packing map @xmath124}$ ]",
    ", one can directly check that equation [ eq : coprod1 ] holds .",
    "    let @xmath35 be a word and @xmath125 be a strictly increasing map from @xmath18 to @xmath126 .",
    "one then has :    * @xmath127 * @xmath128    [ lm : coprod2 ]    \\1 ) using the definition of the packing map , one has the following identity : @xmath129    \\2 ) let @xmath130 and @xmath131 .",
    "one can directly check that @xmath132 , for all @xmath133 .",
    "one thus has @xmath134        let @xmath8 be a word in @xmath58 , and @xmath135 be three disjoint subsets of @xmath136 .",
    "one then has : @xmath137}/_{w[i]}}{^{w[j]}/_{w[i ] } } = ^{w[k]}/_{w[i+j]}.\\]][lm : coprod3 ]    using lemma [ lm : coprod2 ] , one has : @xmath138}/_{w[i]}}{^{w[j]}/_{w[i ] } } = ^{s_{\\phi_i}(w[k])}/_{s_{\\phi_i}(w[j ] ) } = s_{\\phi_i}(^{w[k]}/_{w[j ] } ) = s_{\\phi_i}(s_{\\phi_j}(w[k ] ) ) \\notag\\\\ & = s_{\\phi_i \\circ \\phi_j}(w[k ] ) =   ^{w[k]}/_{w[i+j]}.\\end{aligned}\\ ] ]        the vector space @xmath58 endowed with the coproduct is a coassociative coalgebra with co - unit ( c - aau ) .",
    "the co - unit is given by : @xmath139    using the lemmas [ lm : coprod1 ] , [ lm : coprod2 ] and [ lm : coprod3 ] , one has the following identity : @xmath140 } pack(w[i ] ) \\otimes pack(^{w[j]}/_{w[i ] } ) \\notag\\\\ &   \\otimes pack(^{w[k]}/_{w[i+j ] } ) = ( i d \\otimes \\delta)\\circ \\delta(w).\\end{aligned}\\ ] ]    thus , one can conclude that the coproduct is coassociative .",
    "one can easily check that @xmath141 for all word @xmath142 .",
    "one thus concludes that @xmath143 is a c - aau .",
    "    this coalgebra is not cocommutative , for example : @xmath144 where the operator @xmath145 is given by @xmath146 .",
    "[ lm : prod_2 ] let @xmath42 be two words .",
    "let @xmath147 $ ] and @xmath148 $ ] .",
    "one then has @xmath149}/_{u*v[i_1+i_2 ] } ) = pack(^{u[j_1]}/_{u[i_1 ] } ) * pack(^{v[j'_2]}/_{v[i'_2]}),\\ ] ] where @xmath150 is the set @xmath151 and @xmath152 is the set @xmath153 .",
    "one has : @xmath154}/_{u*v[i_1+i_2 ] } ) = pack(s_{\\phi_{i_1+i_2}}(u*v[j_1+j_2 ] ) ) \\notag\\\\ & = pack(s_{\\phi_{i_1}+\\phi_{i_2}}(u[j_1]t_{sup(u)}(v)[j_2 ] ) )   = pack(s_{\\phi_{i_1}}(u[j_1])s_{\\phi_{i_2}}(t_{sup(u)}(v[j'_2 ] ) ) ) \\notag\\\\   & = pack(^{u[j_1]}/_{u[i_1]})t_{sup(^{u[j_1]}/_{u[i_1]})}pack(s_{\\phi_{i'_2}}(v[j'_2 ] ) )   \\notag\\\\ & = pack((^{u[j_1]}/_{u[i_1]})*pack(^{u[j'_2]}/_{u[i'_2]}).\\end{aligned}\\ ] ]        let @xmath42 be two words in @xmath58 .",
    "one has : @xmath155    using the lemma [ lm : prod_2 ] , the proof can be done by a direct check .    since @xmath58 is graded by the word s length , one has the following theorem :    @xmath156 is a hopf algebra .",
    "the proof follows from the above results .    for @xmath157",
    ", the antipode is given by the recursion : @xmath158 , i , j\\neq \\emptyset } s(pack(w[i]))*pack(^{w[j]}/_{w[i]}).\\ ] ]",
    "in this section , we compute the number of packed words with length @xmath96 and supremum @xmath52 . using the formula of stirling numbers of the second kind",
    ", one can get the explicit formula for the number of packed words with length @xmath96 , number which we denote by @xmath159 .",
    "the stirling numbers of the second kind count the number of set unordered partitions of an @xmath96-element set into precisely @xmath52 non - void parts ( or blocks ) .",
    "the stirling numbers , denoted by @xmath160 are given by the recursive definition :    1 .",
    "@xmath161 , 2 .",
    "@xmath162 , 3 .",
    "@xmath163 , for @xmath164 .",
    "one can define a word without @xmath51 by its positions , this means that if a word @xmath165 has length @xmath96 and alphabet @xmath166 , then this word can be determine from the list @xmath167 $ ] , where @xmath168 is the set of positions of @xmath14 in the word @xmath8 , with @xmath169 .",
    "it is straightforward to check that @xmath170 is a partition of @xmath171 $ ] .",
    "one can divide the set of packed words with length @xmath96 and supremum @xmath52 in two parts : _  pure \" _ packed words ( which have no @xmath51 in their alphabet ) , denote @xmath172 and packed words which have @xmath51 in their alphabet , denote @xmath173 .",
    "it is clear that : @xmath174    let us now compute the cardinal of these two sets @xmath172 and @xmath173 .",
    "consider a word @xmath175 , then @xmath166 .",
    "this word is determined by @xmath167 $ ] , in which @xmath168 is a set of positions of @xmath14 , for @xmath176 .",
    "one can see that :    1 .",
    "@xmath177 , @xmath178 $ ] ; 2 .",
    "@xmath179 .    note that 1 - 2 hold even with @xmath180 .",
    "thus , one has the cardinal of packed words with length @xmath96 and supremum @xmath52 : @xmath181    similarly , a word @xmath182 can be determined by @xmath183 $ ] where @xmath168 is the set of positions of @xmath14 , for all @xmath184 .",
    "one then has : @xmath185    from the two equations above , one can get the number of packed word with length @xmath96 , supremum @xmath52 : @xmath186    from this formula ,",
    "using maple , one can get some values of @xmath187 .",
    "we give in the table [ tab : dnk ] the first values .",
    "ccrrrrrrrrr & & + & & 0&1&2&3&4&5&6&7&8 + & & 1&0&0&0&0&0&0&0&0 + & & 1&1&0&0&0&0&0&0&0 + & & 1&3&2&0&0&0&0&0&0 + & & 1&7&12&6&0&0&0&0&0 + & & 1&15&50&60&24&0&0&0&0 + & & 1&31&180&390&360&120&0&0&0 + & & 1&63&602&2100&3360&2520&720&0&0 + & & 1&127&1932&10206&25200&31920&20160&5040&0 + & & 1&255&6050&46620&166824&317520&332640&181440&40320 +    note that the values of table [ tab : dnk ] correspond to those of the triangular array @xmath188 of sloane @xcite .",
    "formulas and imply that the packed words of length @xmath96 and supremum @xmath52 without , and respectively with , @xmath51 are in bijection with the circularly ordered partitions of @xmath189 $ ] in @xmath52 parts and respectively in @xmath190 parts . therefore implies that the set of packed words of length @xmath96 with supremum @xmath52 is in bijection with the circularly ordered partitions of @xmath191 elements in @xmath190 parts .    the formula for the number of packed words of length @xmath96 , @xmath159 ( @xmath192 ) , is then given by @xmath193    using again maple",
    ", one can get the values listed in table [ tab : dn ] .",
    ".some values of @xmath159 obtained from formula .[tab : dn ] [ cols=\"^,>,>,>,>,>,>,>,>,>,>,>,>\",options=\"header \" , ]     note that this sequence does not appear in sloane s on - line encyclopedia of integer sequences @xcite .",
    "let us emphasize that this hopf algebra , although graded , is not cocommutative and thus the primitive elements do not generate the whole algebra but only a sub hopf algebra on which @xmath194 is cocommutative ( the biggest on which cqmm theorem holds ) .",
    "we denote by @xmath195 the algebra generated by the primitive elements of @xmath109 .",
    "let us recall the following result :    [ lm : graded ] let @xmath196 and @xmath197 be two graded vector space .",
    "@xmath198 let @xmath199 , that means @xmath200 .",
    "then , @xmath201 is graded .",
    "one then has :    @xmath195 is a lie subalgebra of @xmath65 , graded by the word s length .",
    "let us define the mapping @xmath202    this mapping is graded .",
    "using lemma [ lm : graded ] , one has @xmath203 .",
    "thus , the subalgebra @xmath195 is graded .",
    "let @xmath204 be the subalgebra generated by the packed words of length @xmath96 , @xmath205 .",
    "one can see an element @xmath206 of this subalgebra as a polynomial of packed words of length @xmath96 .",
    "@xmath207    let us now compute the dimensions of the first few spaces @xmath208 . for @xmath209 ,",
    "one has a basis formed by the primitive elements @xmath51 and @xmath210 .",
    "then one can check that the primitive elements of length @xmath211 have the form @xmath212 , with @xmath213 and @xmath214 scalars . for @xmath215 ,",
    "one has a basis formed by the primitive elements : @xmath216 and @xmath217 .",
    "then one can check that all the primitive elements of the length @xmath218 have the form @xmath219 , with @xmath213 and @xmath214 scalars .",
    "this comes from explicitly solving a system of @xmath220 equations with @xmath221 variables .",
    "nevertheless , the explicit calculations quickly become lengthy . thus , for @xmath222 , one has to solve a system of @xmath223 equations with @xmath224 variables .",
    "to test our results with maple , we implement a random word in the following way . to each word",
    "we associate a certain monomial which encodes , using a given alphabet the position of any letter and its value .",
    "for example , to the word @xmath225 we associate the monomial @xmath226 where the powers ( @xmath218 and respectively @xmath227 ) correspond to the values of the letters ( @xmath228 and respectively @xmath229 ) and the indices ( @xmath211 and @xmath218 ) correspond to the positions of the respective letters .",
    "one has to keep in mind that the letter @xmath51 can also be present in the words . which is encoded with a supplementary word length variable .",
    "using this idea we can then implement in maple packed words ( obtained with a maple function taking as an argument a general word ) .    we have also implemented the lhs ( left hand side ) and the rhs ( right hand side ) of the coproduct formula . for this purpose , one needs to refine the above function by considering two distinct alphabets to  build up  the words , such that one can easily separate - as function of the different alphabets - the lhs from the rhs .    finally ,",
    "using all of the above , we have checked the coassociativity condition for random words up to length @xmath230 , with maximal power @xmath230 .",
    "we acknowledge jean - yves thibon for various discussions and suggestions .",
    "the authors also acknowledge a univ .",
    "paris 13 , sorbonne paris cit bqr grant .",
    "a. tanasa further acknowledges the grants pn 09 37 01 02 and cncsis tinere echipe 77/04.08.2010 .",
    "g. h. e. duchamp acknowledges the grants anr blan08 - 2_332204 ( physique combinatoire ) and pan - cnrs 177494 ( combinatorial structures and probability amplitudes ) ."
  ],
  "abstract_text": [
    "<S> in this paper , we define a hopf algebra structure on the vector space spanned by packed words using a selection - quotient coproduct . </S>",
    "<S> we show that this algebra is free on its irreducible packed words . </S>",
    "<S> finally , we give some brief explanations on the maple codes we have used . </S>"
  ]
}
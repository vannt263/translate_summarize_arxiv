{
  "article_text": [
    "elementary cellular automaton ( ca ) is a one - dimensional array of finite automata , each automaton takes two states and updates its state in discrete time depending on its own state and states of its two closest neighbours , all cell updates their state synchronously .",
    "a general classification of elementary ca was introduced in @xcite :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 1 .",
    "class i. ca evolving to a homogeneous state .",
    "ca evolving periodically .",
    "class iii .",
    "ca evolving chaotically .",
    "4 .   class iv .",
    "include all previous cases , also know as class of complex rules .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    in this classification class iv is of particular interest because rules of the class exhibit non - trivial behaviour with rich and diverse patterns , e.g. rule 54 ca  @xcite .",
    "one - dimensional ca are represented by an infinite array of _ cells _",
    "@xmath3 where @xmath4 and each @xmath5 takes a value from a finite alphabet @xmath6 .",
    "thus , a sequence of cells \\{@xmath3 } of finite length @xmath7 represents a string or _ global configuration _",
    "@xmath8 on @xmath6 .",
    "this way , the set of finite configurations will be represented as @xmath9 . an evolution is represented by a sequence of configurations @xmath10 given by the mapping @xmath11 ; thus their global relation is provided as follows    @xmath12    where @xmath13 is time and every global state of @xmath8 is defined by a sequence of cell states .",
    "also the cell states in configuration @xmath14 are updated at the next configuration @xmath15 simultaneously by a local function @xmath16 as follow    @xmath17    wolfram represents one - dimensional ca with two parameters @xmath18 . where @xmath19 is the number of states , and @xmath20 is radius of neighboourhood .",
    "elementary ca are defined by parameters @xmath21 .",
    "there are @xmath9 different neighborhoods ( where @xmath22 ) and @xmath23 different evolution rules .    in computer experiments we were using automata with periodic boundary conditions .",
    "conventional cellular automata are ahistoric ( memoryless ) : i.e. , the new state of a cell depends on the neighborhood configuration solely at the preceding time step of @xmath16 ( eq .  [ localfunction ] ) .",
    "ca with _ memory",
    "_ considers an extension to the standard framework of ca by implementing memory capabilities in cells @xmath3 from its own history .",
    "thus to implement memory we incorporate a memory function @xmath24 , as follow :    @xmath25    such that @xmath26 determines the degree of memory backwards and each cell @xmath27 being a state function of the series of states of the cell @xmath3 with memory up to time - step . finally to execute the evolution we apply the original rule as :    @xmath28    thus in ca with memory , while the mappings @xmath16 remain unaltered , historic memory of all past iterations is retained by featuring each cell by a summary of its past states from @xmath24 . therefore cells _",
    "canalize _ memory to the map @xmath16 .    as an example",
    ", we can see a case of memory @xmath24 .",
    "the _ majority memory _ is defined as follow :    @xmath29    where in case of a tie given by @xmath30 from @xmath24 then we will take the last value @xmath3 .",
    "so @xmath31 function represents the classic majority function @xcite on the cells @xmath32 and define a temporal ring before to get finally the next global configuration @xmath8 .",
    "majority memory exerts a general inertial effect @xcite .",
    "this effect , when starting from a single site live cell notably restrains the dynamics , as it is illustrated on rule 30 in fig .",
    "[ memoryexample ] .",
    "this figure shows the spatio - temporal patterns of both the @xmath33 @xmath5 state values and that of the underlying @xmath34 ones .",
    "rule 30 was initially studied by wolfram in @xcite because of its chaotic global behavior ; looking for a number random generator .",
    "rule 30 is an elementary ca evolving in one dimension of order @xmath35 .",
    "an interesting property is that rule 30 has a surjective relation and thus do not have _ garden of eden _ configurations @xcite . in this way , any configuration has always at least one predecessor .",
    "the local rule @xmath16 corresponding to rule 30 is following :    @xmath36    generally speaking , rule 30 displays a typical chaotic global behavior  class iii in wolfram s classification .",
    "an interesting study on rule 30 showing a local nested structure that repeat periodically looking invertible properties @xcite .",
    "so , initially @xmath37 has a 50% of probability of states zero or one , and consequently each state appears with the same frequency .",
    "also the evolution rule presents the following feature : if an initial configuration is covered only of state one then the configuration always evolves into one but if this is empty or filled with state one then this always evolves to state zero .",
    "[ r30evol ] shows such two cases of typical evolutions in rule 30 .",
    "given a finite sequence @xmath38 ; such that @xmath39 ; let @xmath40 , @xmath41 , and @xmath42 . with these elements , we can specify a labeled directed graph known as de bruijn diagram @xmath43 associated with the evolution rule of the ca .",
    "the nodes of @xmath44 are defined by @xmath45 and the set of directed edges @xmath46 is defined as follows :    @xmath47    for every directed edge @xmath48 , let @xmath49 where @xmath50 ; that is , @xmath51 is a neighborhood of the automaton . in this way ,",
    "the edge @xmath52 is _ labeled _ by @xmath53 ; hence every labeled path in @xmath44 represents the evolution of the corresponding sequence specified by its nodes .",
    "since each @xmath54 can be described by a number base @xmath55 of length @xmath56 , every node in @xmath44 can be enumerated by a unique element in @xmath57 , which is useful to simplify the diagram . the de bruijn diagram associated to rule 30",
    "is depicted in fig .",
    "[ db30_01 ] ; where black edges indicate the neighborhoods evolving into @xmath58 and the ones evolving into @xmath59 are shown by gray edges .        fig .",
    "[ db30_01 ] shows that there are four neighborhoods evolving into @xmath58 and four into @xmath59 ; so each state has the same probability to appear during the evolution of the automaton ; indicating the possibility of the automaton is surjective , i.e. there are no garden of eden configurations .",
    "classical analysis in graph theory has been applied over de bruijn diagrams for studying topics such as reversibility @xcite : cycles in the diagram indicate periodic elements in the evolution of the automaton if the label of the cycle corresponds to the sequence defined by its nodes , in periodic boundary conditions .",
    "the cycles in the de bruijn diagram from fig .",
    "[ db30_01 ] are presented in fig .",
    "[ db30_02 ] .",
    ".,width=460 ]    the largest cycle in fig .",
    "[ db30_02 ] indicates that the undefined repetition of sequence @xmath60 establishes a periodic structure without displacement in one generation during the evolution of rule 30 we will than @xmath61 is the _ filter _ in rule 30 ; in this case , the filter reported in the original rule 30 and with memory too .",
    "thus we can see how a de bruijn diagram can recognize any periodic structures in ca @xcite .",
    "de bruijn diagram is nondeterministic in the sense that a given node may have several output edges with the same label ; a classical approach to analyse the diagram would be to construct the subset ( or power ) diagram in order to obtain a deterministic version for the de bruijn diagram in the evolution rule @xcite .",
    "the subset diagram is defined as @xmath62 where @xmath63 is the set of nodes of @xmath64 and the directed edges are defined by @xmath65 where for @xmath66 there is a directed edge @xmath67 labeled by @xmath68 in @xmath64 iff @xmath69 is the maximum subset such that for every @xmath70 there exists @xmath71 such that @xmath72 .",
    "the inclusion of the empty set assures that every edge has a well - defined ending node . for a ca with @xmath55 states",
    ", it is fulfilled that @xmath73 which implies an exponential growth in the number of nodes in @xmath64 when more states are considered .",
    "every @xmath74 can be identified by a binary number showing the states belonging to this subset ; that is , taking the states as an ordered list , the ones in @xmath75 can be signed by a @xmath59 and the others by @xmath58 ; conforming a unique binary sequence identifying the subset .",
    "the decimal value of this binary number can be taken to get a shorter representation ; where the empty set has a decimal number @xmath58 and the full subset @xmath76 has the number @xmath77 .",
    "the a subset diagram corresponding to rule 30 is shown in fig .  [ ss30_01b ] .    in fig .",
    "[ ss30_01b ] , the subset diagram has no path starting from the full subset ( node @xmath78 ) going to the empty one ( node @xmath58 ) .",
    "this means that every sequence can be produced by the evolution of the automaton and there are no garden - of - eden sequences .",
    "thus the automaton is surjective .",
    "the subset diagram can be also used as a deterministic automaton for calculating ancestors of any desired sequences  @xcite by recognizing the regular expressions which may be generated by the corresponding automaton .",
    "some of these expressions would be able to represent interesting structures as gliders @xcite ; however more effort is needed in order to get a straightforward detection of such constructions in the diagram .",
    "finally , such diagrams helps to get periodic strings than eventually represent a general filter @xmath61 working at the original rule 30 and rule 30 with memory ( next section ) .",
    "also , we will take advantage of these results to find gliders from these strings .",
    "this section reports how the majority memory @xmath24 helps to discovers complex dynamics in elementary ca by experimentation , see an introduction to elementary ca with memory in  @xcite .    in this way ,",
    "[ mmemory ] displays different scenarios where the majority memory works on rule 30 and therefore extracting complex dynamics on @xmath31 .",
    "we should read the evolutions from left to right and up to down .",
    "also in this case all evolutions use the same random initial density and the filter @xmath61 was utilized in all evolutions ( including the original rule 30 evolution ) .",
    "thus the first evolution is the original function rule 30 , i.e , without majority memory in fig  [ mmemory ] . from its original evolution",
    "we can see gaps that the filter can clean",
    ". traditionally was difficult distinguish such filter in rule 30 but when @xmath31 was applied then its presence was more evident .",
    "a general technique to get filters was developed by wuensche in @xcite .     from a range of values from @xmath79 to @xmath80 although the first evolution shows the original function .",
    "evolutions were calculated on a ring of 104 cells in 104 generations with a random initial density of 50% where the initial condition is the same in all cases . also the filter @xmath61 was applied to see clearly the structures.,width=460 ]    initially , even values of @xmath81 seems extract gliders more quickly and odd values fight to reach an order .",
    "eventually the majority memory will converge to one stability in @xmath82 while @xmath81 increases .",
    "the first snapshot calculating @xmath31 with @xmath83 was the second evolution in fig  [ mmemory ] .",
    "nevertheless , here is not very clear how the memory could induce another behavior because its global behavior is similar at the original but with small changes .    on the other hand , the third evolution with @xmath84 extracts periodic patterns emerging in rule 30 with memory .",
    "the evolution maybe does not display impressive gliders but it already allows to pick up more diversity in mobile localizations on lattices of @xmath85 cells .",
    "thus we have enumerated and ordered values of @xmath81 from fig .",
    "[ mmemory ] based on their space - time dynamics they are responsible for .    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 1",
    ".   _ chaotic global behavior _ @xmath86 .",
    "_ periodic patterns _ @xmath87 .",
    "_ collision patterns _ @xmath88 . _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _        we evaluate morphological complexity of ca studied using morphological richness approach @xcite .",
    "we calculate statistical morphological richness @xmath89 as follows .",
    "given space - time configuration of a one - dimensional ca , for each site of the configuration we extract its @xmath90 cell space - time neighborhood state and build distribution of the space - time neighborhood states over extended period of the automaton s development time .",
    "examples of morphological richness @xmath89 are shown in fig .",
    "[ 2dmorphology ] .",
    "a control case , when next state of a cell is calculated at random the distribution ( fig .",
    "[ 2dmorphology]a ) of space - time neighborhood states is uniform .",
    "two - dimensional random configurations are morphologically rich .",
    "morphology of memoryless , classical , rule 30 automaton is characterized by few peaks in local domains distributions , where several space - time templates dominate in the global space - time configuration ( fig .",
    "[ 2dmorphology]b ) .",
    "the statistical morphological richness @xmath89 decreases .",
    "incorporation of a memory in the cell - state transition rules leads to erosion of the distribution ( fig .  [ 2dmorphology]c ) and thus slight increases in @xmath89 .",
    "with increase of memory depth shape of the morphological distribution changes just slightly , up to minor variations in heights of major peaks ( fig .",
    "[ 2dmorphology]d  f ) .",
    "number @xmath91 of @xmath90 blocks ( of states 0 and 1 ) that never appear in space - time configurations of a cellular automaton can be used as a express estimate of the nominal morphological richness , the less @xmath91 the more rich is a nominally configuration .",
    "the difference between statistical @xmath89 and nominal @xmath91 measures of morphological richness is that @xmath89 allows to pick up most common configurations of local domains , while @xmath91 just shows how many block of @xmath92 states appeared in the automaton evolution at least once .",
    "memoryless automata governed by rule 30 have @xmath94 ( total number of possible blocks is 512 ) .",
    "when memory is incorporated in the cell - state transition function , first richness decreases , e.g. for @xmath95 , we have @xmath96 .",
    "then we observe consistent increase in complexity .",
    "thus rule 30 with small - depth memory ( @xmath97 ) @xmath98 , which drastically decrease to @xmath99 for @xmath79 .",
    "the richness is stabilized , or rather oscillate around values @xmath100 with further increase of memory .",
    "most frequently the complex dynamics related in elementary ca is related to gliders , glider guns , and non - trivial reactions between localizations , for example , rule 110 or 54 @xcite .",
    "the relevance to look for such things is the study of universality @xcite .",
    "another additional subject was its representation by regular expressions and other tools @xcite .     and @xmath101",
    "this evolution shows how some kinds of gliders arise and still interact from random initial conditions .",
    "the evolution was calculated on a ring of 590 cells to 320 generations , and an initial density of 50%.,width=460 ]    among the sets of complex dynamics in rule 30 determined by @xmath81 ( showed in fig .",
    "[ mmemory ] ) , we have chosen the memory @xmath31 with @xmath101 . in this way , fig  [ m8-memory ] illustrates an ample evolution space of its global dynamics .",
    "of course , these gliders maybe are not as impressive as others from well - known complex rules as rule 110 , rule 54 or other one dimensional rules @xcite .",
    "however it is interesting how @xmath31 is able to open complex patterns from chaotic rules .",
    "nevertheless , even that rule 30 does not offer an ample range of complex dynamics , it is useful to describe gliders and collisions .",
    "so , we shall illustrate how a chaotic ca can be discomposed as a complex system .",
    "thus we classify the family of gliders and enumerate some properties . then fig .  [ gliders ] displays the family of gliders @xmath102 .",
    "although as was hoped , an immediate consequence was that gliders in ca with memory have longer periods .",
    "[ stringglider ] enumerates strings for each glider represented as a tiling so we know their `` phases ''  @xcite .",
    "although in this case , it was difficult to classify such strings as regular expressions because not all strings from the tiling representation evolve into gliders ."
  ],
  "abstract_text": [
    "<S> in cellular automata with memory , the unchanged maps of the conventional cellular automata are applied to cells endowed with memory of their past states in some specified interval . </S>",
    "<S> we implement rule 30 automata with a majority memory and show that using the memory function we can transform quasi - chaotic dynamics of classical rule 30 into domains of travelling structures with predictable behaviour . </S>",
    "<S> we analyse morphological complexity of the automata and classify dynamics of gliders ( particle , self - localizations ) in memory - enriched rule 30 . </S>",
    "<S> we provide formal ways of encoding and classifying glider dynamics using de bruijn diagrams , soliton reactions and quasi - chemical representations .    </S>",
    "<S> * keywords : * rule 30 , memory , elementary cellular automata , chaos , complexity dynamics , gliders , emergency .    </S>",
    "<S> @xmath0 department of computer science , university of the west of england , bristol , united kingdom . </S>",
    "<S> + link:{genaro.martinez , andrew.adamatzky}@uwe.ac.uk[\\{genaro.martinez , andrew.adamatzky}@uwe.ac.uk ] + @xmath1 etsi agrnomos , polytechnic university of madrid , madrid , spain . </S>",
    "<S> + ramon.alonso@upm.es + @xmath2 centro de investigacin avanzada en ingeniera industrial , universidad autnoma del estado de hidalgo pachuca , hidalgo , mxico . </S>",
    "<S> + jseck@uaeh.edu.mx + </S>"
  ]
}
{
  "article_text": [
    "in this paper , we consider nonadaptive noiseless group testing with @xmath0 items , of which @xmath1 are defective .",
    "that is , we have @xmath0 items @xmath2 , of which a subset @xmath3 of size @xmath4 are ` defective ' .",
    "( we assume @xmath1 is known throughout . )",
    "we then try to identify @xmath3 through @xmath5 tests of one or more items : a test is positive if at least of of those items is defective ( that is , in @xmath3 ) , and negative if none of the items are defective .    here",
    "we consider only bernoulli nonadaptive testing , where for some fixed @xmath6 $ ] , each item is placed in each test independently with probability @xmath7 .",
    "the bernoulli case has been considered by many authors ( @xcite are just a few examples ) , as it is simpler to use and to study than some complicated combinatorial designs , and appears to perform well in practice .",
    "our main result is the following :    [ main1 ] consider nonadaptive noiseless group testing with a bernoulli test design , and let @xmath8 then , for any @xmath9 , with @xmath10 tests , there exists a bernoulli test design and detection algorithm with error probability tending to @xmath11 as @xmath12 . but with @xmath13 tests , any bernoulli test design and detection algorithm will have error probability of at least @xmath14 for large enough @xmath0 .    here and elsewhere , @xmath15 is the binary entropy of @xmath16 $ ] . from now on",
    ", @xmath17 always denotes log to the base @xmath18 , while natural logarithms are explicitly written as @xmath19 .    a convenient way to understand the main result ( following baldassini , johnson and aldridge @xcite ) is by looking at the rate @xmath20 when @xmath21 for some sparsity parameter @xmath22 .",
    "( recall that @xmath23 if there exists constants @xmath24 such that , for @xmath0 sufficiently large , @xmath25 . )",
    "so , for given @xmath26 , a scheme taking @xmath27 tests , for some constant @xmath28 , has rate @xmath29 .",
    "one can think of @xmath30 as the number of bits learned per test , since @xmath31 is the number of bits required to specify the defective set @xmath3 .",
    "a trivial counting bound ( see , for example , @xcite for a more precise version ) shows we require @xmath32 tests to find the defective set , which corresponds to the bound @xmath33 ; that is , we can only learn at most @xmath34 bit of information from each positive / negative test .    for a given set - up  in this paper , bernoulli nonadaptive testing with @xmath35 defectives for some fixed @xmath22",
    " we say a rate @xmath30 is achievable if there exists a scheme that finds the defective set @xmath3 with @xmath36 tests with the error probability tending to @xmath11 as @xmath12 .",
    "the maximum achievable rate is called the capacity .",
    "theorem [ main1 ] can then be rewritten as follows :    [ capthm ] for nonadaptive noiseless group testing with @xmath21 defectives , @xmath22 , and a bernoulli test design , the capacity is given by @xmath37    it s not difficult to check that for @xmath38 , the second term in is the minimum , and is maximised at @xmath39 , to get @xmath40 . as for @xmath41 , where @xmath42 the minimum in is the first term , maximised at @xmath43 , to get @xmath44 hence , it s only in the narrow range @xmath45 that the complicated maximin is necessary .",
    "the capacity and other important rates are shown in figure [ mainfig ] .",
    "defectives : the trivial counting bound @xmath46 ; the capacity of bernoulli nonadaptive group testing ( theorem [ capthm ] ) ; an achievable rate of the dd algortihm @xcite ; and the maximum achievable rate of the comp algorithm with bernoulli tests ( corollary [ compcor]),scaledwidth=47.5% ]    in , @xmath47 is a parameter representing the bernoulli parameter @xmath7 through the relationship @xmath48 , so @xmath49 for @xmath50 .",
    "note that @xmath39 gives @xmath51 , so @xmath52 , meaning tests are @xmath53 positive or negative , while @xmath43 gives @xmath54 , meaning tests contain an average of one defective item .",
    "the capacity in theorem [ capthm ] is equal to an achievable rate due to scarlett and cevher ( * ? ? ?",
    "* corollary 6 ) .",
    "( in @xcite , scarlett and cevher emphasise the group testing aspects of their wide - ranging results from @xcite . )",
    "the new work in this paper is to give the converse result , showing that this can not be improved .",
    "as far as we are aware , this is the first group testing converse of any sort that gives tighter rate bounds than that given by the counting bound ( or its equivalents for group testing with noise ) .",
    "scarlett and cevher note @xcite , combining their achievability result with the trivial counting bound @xmath46 suffices to establish theorem [ main1 ] for @xmath38 ; the new work in this paper is to prove it for @xmath55 .",
    "our converse requires three parts :    1 .   a typicality bound , which generalises the trivial counting bound @xmath46 ( subsection [ typbd ] ) ; 2 .   a new converse on the comp algorithm of chan , che , jaggi and saligrama @xcite ( subsection [ compbd ] ) ; 3 .   a converse on the sss algorithm very similar to that of aldridge , baldassini and johnson @xcite ( subsection [ sssbd ] ) ;    together with an argument that these three points suffice to prove the desired converse result ( subsection [ outline ] ) .",
    "further , our result ( and its proof ) carry a number of important corollaries :    * for @xmath55 , bernoulli nonadaptive testing is strictly worse than the best adaptive schemes .",
    "this in contrast to the fact that , as scarlett and cevher note @xcite , bernoulli nonadaptive group testing achieves the same rate @xmath56 as the best adaptive schemes for @xmath38 .",
    "* the maximal rate achievable by the comp algorithm of chan et al is @xmath57 . in particular",
    ", comp is a suboptimal detection algorithm for bernoulli nonadaptive group testing for all @xmath22 . *",
    "the sss algorithm ( while probably impractical ) is an optimal detection algorithm for bernoulli nonadaptive group testing for all @xmath26 .",
    "* the practical dd algorithm of aldridge et al @xcite is an optimal detection algorithm for bernoulli nonadaptive group testing for @xmath58 .",
    "we discuss these corollaries further in section [ corrs ] .",
    "in this section , we fix some notation ( which readers familiar with group testing may wish to skip ) .",
    "we then discuss the comp and sss algorithms , which will be important in the proof of our main result later .",
    "recall that we have @xmath0 _ items _ , of which a set @xmath59 of size @xmath60 are _",
    "defective_. we test them with @xmath5 _",
    "tests_. we summarise these tests through a _ test design _ @xmath61 , where @xmath62 denotes that item @xmath63 is in test @xmath64 , and @xmath65 denotes that it is not . upon testing , we receive back the _ outcomes _ @xmath66 according to the rule @xmath67 where @xmath68 denotes a positive test , and @xmath69 denotes a negative test .    in this paper we consider _ bernoulli nonadaptive group testing_. this means that , for some fixed @xmath70 $ ] we have @xmath62 with probability @xmath7 and @xmath65 with probability @xmath71 , independently over @xmath63 and @xmath64 .    then given the testing matrix @xmath72 and the outcomes @xmath73 ( including knowledge of the number of defectives @xmath1 but not the defective set @xmath3 ) , we must estimate the true defective set . a _ detection algorithm _",
    "is a map @xmath74 , where @xmath75 denotes the power - set ( the set of all subsets ) .",
    "the _ average error probability _ of the detection algorithm @xmath76 for bernoulli@xmath77 nonadaptive group testing is @xmath78 where the probability is over the the bernoulli@xmath77 testing matrix @xmath72 , and @xmath73 is related to @xmath72 and @xmath3 through .",
    "the _ success probability _ is @xmath79 .    in this paper",
    "we consider a sequence of group testing procedures , indexed by the number of items @xmath0 , going to @xmath80 .",
    "we consider the case where @xmath81 grows like @xmath82 , and in rate calculations , more specifically when @xmath21 for @xmath83 .",
    "note that our result ( theorem [ main1 ] ) is already proven for @xmath1 bounded ( the @xmath84 case ) , by combining the trivial counting bound with the achievability result at @xmath84 ( originally by malyutov @xcite and seb @xcite , but also as special cases of the results of aldridge et al @xcite or scarlett and cevher @xcite ) .",
    "thus we are safe to consider @xmath85 ( that is , @xmath50 ) where convenient .",
    "we will use @xmath86 tests , and are looking for whether the error probability @xmath87 tends to @xmath11 or is bounded away from @xmath11 .",
    "recall that the _ rate _ of a group testing procedure is defined as @xmath88 , and that a rate @xmath30 is achievable if there exists a sequence of procedures with rate at least @xmath30 with @xmath89 .",
    "we refer to the maximum rate by bernoulli nonadaptive group testing as the _ capacity_.    given a test design @xmath72 and outcomes @xmath90 , we call a set @xmath91 _ satisfying _ if we would have got the same output @xmath73 had @xmath92 been the true defective set .",
    "clearly the defective set @xmath3 itself is a satisfying set , but there can be other satisfying sets too . given the test design and outcomes , the posterior distribution of the defective set is uniform over all satisfying sets of the correct size @xmath1",
    ". hence accurate detection of the defective set requires there to ( usually ) be only one satisfying set of size @xmath1 .",
    "recall we are writing @xmath17 for logarithms to base @xmath18 .",
    "we write @xmath93 for asymptotic equivalence ; that is , @xmath94 if @xmath95 . a useful asymptotic expression for @xmath96 will be @xmath97      the comp algorithm is based on the following observation : any item that appears in a negative test is certainly nondefective .",
    "the comp algorithm therefore declares all such items to be nondefective , and declares all the remaining items to be defective .",
    " in this paper we study it used with a bernoulli nonadaptive test design .",
    "we use the name ` comp ' following chan et al @xcite , although they use the term to mean the detection algorithm _ only _ when twinned with a bernoulli nonadaptive test design .",
    "they use the term ` cbp ' to denote the same detection algorithm  albeit explained differently  when used with a slightly different test design . in a later paper @xcite ,",
    "a similar set of authors refer to comp and cbp respectively by the different names ` coma ' and ` coco ' .",
    "chan et al @xcite note that variants on comp have appeared many times in the literature under various names , for example , @xcite . ]",
    "that is , comp declares @xmath98 as its guess of the defective set @xmath3 .",
    "the following three facts about comp are immediate and will be important :    * @xmath99 , since no actual defectives can have been ruled out ; * @xmath100 is a satisfying set , since by definition no items of @xmath100 are in a negative test , and the true defectives in @xmath3 ensure an item from @xmath100 in each positive test ; * @xmath100 is the unique largest satisfying set , since all items not in @xmath100 are ruled out through their appearance in negative tests .",
    "chan et al @xcite show that comp can succeed with @xmath101 tests , for an achievable rate of @xmath102 ( aldridge et al ( * ? ? ?",
    "* remark 18 ) give an alternative proof . )",
    "we show later ( lemma [ complem ] ) that this is in fact the maximum rate achievable by comp .",
    "the sss algorithm chooses the smallest satisfying set as its guess of @xmath3 .",
    "( for the purposes of this paper , it is not important what the algorithm does if the smallest satisfying set is not unique  it suffices to note that the error probability in this situation is at least @xmath14 . )",
    "the sss algorithm was studied in some detail by aldridge et al @xcite .",
    "note that although we refer to sss as an ` algorithm ' , we do not claim that finding the smallest satisfying set is computationally feasible for large problems .",
    "aldridge et al ( * ? ? ?",
    "* subsection iii.3 ) discuss the connections between sss and the np - complete set - cover problem , and propose an algorithm they call scomp as a ` best practical approximation ' to sss .",
    "we now prove our main theorem ( theorem [ main1 ] ) .",
    "the achievability was proved by scarlett and cevher ( * ? ? ?",
    "* corollary 6 ) @xcite .",
    "( the result was previously known in the special cases @xmath84 @xcite and @xmath58 using the dd algorithm @xcite . )",
    "we are required to prove a converse .",
    "the crucial idea is the following .",
    "first , if the ( necessarily unique ) largest satisfying set is of size @xmath1 , then it must the true defective set @xmath3 , and it is found by the comp algorithm .",
    "second , if the smallest satisfying set is of size @xmath1 and is unique ( which it might or might not be ) , then it is the true defective set @xmath3 , and it is found by the sss algorithm .",
    "third , if neither of these two cases occurs , there is more than one satisfying set of size @xmath1 , and our error probability is at least @xmath14 .",
    "hence , if we can show that both the sss algorithm and the comp algorithm fail above a certain rate , then that rate is not achievable , and we have a converse .",
    "let us now be more formal .",
    "recall that the sss algorithm chooses the smallest set of items @xmath103 that satisfies the test outputs .",
    "recall also ( as noted above and in @xcite ) that the comp algorithm chooses the largest set of items @xmath100 that satisfies the test outputs .",
    "further any set @xmath104 satisfying @xmath105 is also a satisfying set .",
    "hence we also have the following : if both @xmath106 and @xmath107 ( noting the strict inequality ) , then there is not a unique satisfying set of size @xmath1 , since there are at least two such @xmath92s .",
    "in this situation , our average probability of error must be at least @xmath14 , since we can do no better than arbitrarily chose one of the ( at least two ) satisfying sets of the correct size @xmath1 .",
    "hence , if we can show for rates above @xmath108 in that @xmath109 is bounded away from @xmath11 , then we are done .",
    "we can write @xmath110 where we have used the union bound .",
    "note that @xmath111 is precisely the probability that comp succeeds in finding the defective set , as @xmath100 will be the only satisfying set of the correct size , since it is the unique largest satisfying set .",
    "we can also bound @xmath112 by looking at a particular event that causes sss to fail : specifically that some @xmath113 of size @xmath114 is also satisfying , due to one of the defectives never being the only defective item in a test .",
    "what remains is to prove that @xmath111 and @xmath115 are both small .",
    "we prove that @xmath111 is small in lemma [ complem ] , and prove that @xmath115 is small in lemma [ ssslem ] .",
    "this completes the proof . @xmath116",
    "the following typicality bound generalises the trivial counting bound that one requires @xmath117 . in particular , this lemma is necessary to prove lemma [ ssslem ] later .",
    "[ lemtyp ] consider nonadaptive noiseless group testing with a bernoulli@xmath77 test design .",
    "write @xmath118 then with @xmath119 tests , the error probability is bounded away from @xmath11 .",
    "the idea is the following .",
    "the trivial counting bound comes from noting that the number of defective sets @xmath120 must be no larger than the number of possible outcomes @xmath121 .",
    "however , the theory of typical sets tells us that in fact we can only see about @xmath122 outcomes , since @xmath123 is the probability of a negative outcome .",
    "hence we require @xmath124 , and the result follows .    or , for alternative way of thinking about it : the counting bound tells us we can only learn one bit from each positive - or - negative test .",
    "but this is only if the outcome is @xmath53 ; with probability @xmath123 of a negative test , we can only learn @xmath125 bits per test .",
    "note that setting @xmath51 in lemma [ lemtyp ] , so that @xmath52 , and recalling that @xmath126 , we recover the trivial counting bound as a special case .",
    "we now formalise this intuition .",
    "consider a bernoulli@xmath77 test design where there are @xmath1 defectives .",
    "then clearly a test is negative if none of the @xmath1 defectives appear , with probability @xmath127 , and is positive otherwise , with probability @xmath128 .",
    "write @xmath129 for the set of @xmath130-typical outputs @xmath73 ; that is , @xmath131 then standard results on typical sets ( see for example ( * ? ? ?",
    "* chapter 3 ) ) give that    1 .",
    "@xmath132 as @xmath133 , 2 .",
    "@xmath134    we can write the success probability as @xmath135 from point 1 .  above , we know that the second term is small for @xmath5 sufficiently large . we claim that the first term will be bounded away from @xmath34 unless @xmath136 a standard bound on the binomial coefficient completes the proof .",
    "we now prove the claim , in a manner similar to baldassini et al s proof of a ` strong ' version of the trivial counting bound ( * ? ? ?",
    "* theorem 3.1 ) .    fix a test design for @xmath0 items in @xmath5 tests . then , given some @xmath137 with @xmath138 , write @xmath139 for vector of test outcomes given the test design and were the defective set @xmath92 .",
    "further , for @xmath140 , write @xmath141 for the collection of satisfying sets , and @xmath142 for the number of satisfying sets .",
    "note that if @xmath73 is the outcome of the group testing procedure , we can not have @xmath143 , and otherwise the probability of success is at most @xmath144 . then , using @xmath145 $ ] for the indicator function , the probability of success is bounded by @xmath146 \\\\        & \\qquad\\qquad\\qquad\\qquad   \\times { \\mathbb{p}}(\\text{success } \\mid \\text{defective set } { \\mathcal{l } } , { \\mathbf{y } } \\in \\mathcal t(\\delta ) ) \\\\        & \\qquad\\leq \\frac{1}{\\binom nk } \\sum_{|{\\mathcal{l}}| = k } \\sum_{{\\mathbf{y } } \\in \\mathcal t(\\delta ) } \\mathbb i[{\\mathbf{y}}({\\mathcal{l } } ) = { \\mathbf{y } } ] \\frac{1}{d({\\mathbf{y } } ) } \\\\        & \\qquad= \\frac{1}{\\binom nk } \\sum_{{\\mathbf{y } } \\in \\mathcal t(\\delta ) } \\frac{1}{d({\\mathbf{y } } ) } \\sum_{|{\\mathcal{l}}| = k } \\mathbb i[{\\mathbf{y}}({\\mathcal{l } } ) = { \\mathbf{y } } ] \\\\        & \\qquad= \\frac{1}{\\binom nk } \\sum_{{\\mathbf{y } } \\in \\mathcal t(\\delta ) } \\frac{1}{d({\\mathbf{y } } ) } d({\\mathbf{y } } ) \\\\        & \\qquad= \\frac{|\\mathcal t(\\delta)|}{\\binom nk } .",
    "\\end{aligned}\\ ] ] from point 2 .",
    "above , we have @xmath134 .",
    "substituting this in and rearranging ( including resetting @xmath130 ) gives the claim , and we are done .    note that , in particular , any bernoulli nonadaptive algorithm that achieves a nonzero rate must , therefore , use @xmath147 such that @xmath123 is bounded away from @xmath11 and from @xmath34 . in particular",
    ", this means we are safe to assume in what follows that we always have @xmath148 .",
    "recall that the comp algorithm of chan et al @xcite works as follows : any item in a negative test is definitely nondefective , and we declare all other items to have been defective . hence , for comp to succeed , it is necessary for every nondefective to appear in a negative test .",
    "we have the following converse for the comp algorithm    [ complem ] consider noiseless nonadaptive bernoulli group testing , decoding using the comp algorithm .",
    "write @xmath149 then for all @xmath130 , with @xmath150 tests , for any @xmath147 , bernoulli nonadaptive testing using the comp algorithm has error probability at least @xmath151 .",
    "note that @xmath152 was shown to be achievable by chan et al @xcite ( with aldridge et",
    "al ( * ? ? ?",
    "* remark 18 ) providing an alternative proof ) , so this is a tight threshold .    for comp to correctly find the defective set , we require each of the @xmath153 nondefectives to appear in a negative test .",
    "we seek to bound the probability that this occurs .",
    "let us write @xmath154 for brevity .",
    "the number @xmath155 of negative tests is @xmath156 , as each of the @xmath5 tests is negative if and only if all @xmath1 defectives fail to appear in it .",
    "then , conditional on @xmath155 , the probability that a nondefective item appears in at least one of those tests is @xmath157 , and the probability that all @xmath158 do is @xmath159 .",
    "hence we have @xmath160 here we are writing @xmath161 , and using the fact that , since @xmath162 , for @xmath0 sufficiently large we have @xmath163 .",
    "for any @xmath164 we have @xmath165 where we are using that @xmath166 and is increasing in @xmath164 . by choosing @xmath167 , standard concentration of measure results ( the azuma  hoeffding inequality , for example ) the term @xmath168 can be made arbitrarily small as @xmath12 .",
    "it remains to bound the first term in .    expanding this out to five terms , .",
    "combined with a similar bound of @xmath14 for the sss algorithm later , this would insufficient for a nontrivial bound in . hence , we expand to five terms here , to get a slightly tighter bound .",
    "] we get the bound @xmath169    writing @xmath48 , so @xmath170 , and recalling we had set @xmath171 , we have that @xmath172 noting that the error probability decreases with @xmath5 , we see that for @xmath173 we have from that @xmath174 for @xmath175 arbitrarily small and @xmath0 sufficiently large .",
    "this can be substituted into .",
    "finally we note that the bound is optimised at @xmath43 , giving the desired result .",
    "[ ssslem ] consider noiseless nonadaptive bernoulli group testing , decoding using the sss algorithm .",
    "write @xmath176 then for all @xmath130 , with @xmath177 tests , for any @xmath147 , bernoulli nonadaptive testing using the comp algorithm has error probability at least @xmath14 .",
    "the second term in the minimum in is the typicality bound from lemma [ lemtyp ] under the substitution @xmath48 , so that @xmath178 .",
    "it remains to show the bound in the first term .",
    "optimising over @xmath47 then gives the result .",
    "for the first term in , we follow the argument of ( * ? ? ? * lemma 28 ) . early in the argument",
    ", one gets the result required here .",
    "( note also a small typographical error in @xcite , where its applications of the inclusion  exclusion formula in ( 47 ) and ( 48 ) are missing a @xmath179 term . ) for completeness , we give here the full argument , but somewhat briefly  the reader desiring complete details is directed to @xcite . ]",
    "the key point is the following : the sss algorithm will only succeed if for each defective item there is a ( necessarily positive ) test in which it is the _ only _ defective item  otherwise , the item could be removed to give a smaller satisfying set .",
    "note that if this does nt happen  if there is some defective item that only ever appears with other defective items  then we have @xmath180 , so we are bounding @xmath181 here , as required for the larger argument .",
    "if we write @xmath182 for the event that defective @xmath183 is the sole defective in some test , we have @xmath184 by the inclusion ",
    "exclusion formula .",
    "thus we have @xmath185 where we have used that @xmath186 is precisely the event that each of the @xmath5 tests fails to include a unique item from @xmath187 , which has probability @xmath188 .    bounding the same way as we did in the proof of lemma [ complem ] ,",
    "this time expanding out only two terms , gives @xmath189 where we are writing @xmath190 for brevity .",
    "we now use @xmath191 in two ways : first with @xmath192 and second with @xmath193 , to get @xmath194    we thus see that for @xmath195 we have @xmath196 since the error probability is nonincreasing as @xmath5 decreases .",
    "writing @xmath48 , we see that @xmath197 , so @xmath198 , and hence @xmath199 thus we see the bound error probability tends to @xmath14 for @xmath200 giving the second term in in .",
    "we now briefly explain some corollaries to our work , as listed in the introduction . many of these are immediate upon examining figure [ mainfig ] .",
    "we also state some open problems .    in",
    "what follows , we use ` optimal ' to mean ` achieves the optimal rate ' , and not in any stronger sense .    for @xmath38 , bernoulli nonadaptive testing can achieve the same rate as an optimal adaptive test design , whereas for @xmath55",
    ", bernoulli nonadaptive testing can not achieve the same rate as an optimal adaptive test design .    as scarlett and cevher note @xcite , for @xmath38",
    ", their achievability result of rate @xmath34 combined with the trivial counting bound @xmath46 shows that bernoulli nonadaptive testing is optimal .    for @xmath201",
    ", it s simple to see from that our new converse shows that @xmath202 for bernoulli nonadaptive testing .",
    "however , as explicitly noted by baldassini et al @xcite , @xmath40 can be achieved adaptively using hwang s binary splitting algorithm @xcite ( * ? ? ?",
    "* section 2.4 ) .",
    "an important open question here is if nonadaptive strategies can improve by dropping the requirement to be bernoulli .",
    "that is , is @xmath203 as in the capacity of nonadaptive group testing ?",
    "work in the statistical physics literature , suggests that , at least for large @xmath26 , non - bernoulli tests should outperform bernoulli tests @xcite .",
    "[ compcor ] the maximal rate achievable by the comp scheme of chan et al is @xmath57 . in particular , comp is a suboptimal detection algorithm for nonadaptive bernoulli group testing for all @xmath22 .",
    "chan et al ( * ? ? ?",
    "* theorem 4 ) prove achievability , and our lemma [ complem ] gives the converse .",
    "this is clearly suboptimal compared to .",
    "the sss algorithm is an optimal detection algorithm for nonadaptive bernoulli group testing for all @xmath26 .",
    "our ` proof outline ' shows that one can only succeed if either the defective set @xmath3 is the largest satisfying set , in which case comp finds it ; or @xmath3 is the smallest satisfying set , in which case sss finds it .",
    "however , corollary [ compcor ] shows that comp is not optimal , therefore sss must be .",
    "the dd algorithm of aldridge et al @xcite is an optimal detection algorithm for nonadaptive bernoulli group testing for @xmath204 $ ] .",
    "aldridge et al ( * ? ? ?",
    "* theorem 12 ) show that the dd algorithm can achieve the rate @xmath205 for @xmath206 , the first term is the minimum , which is the same as the capacity result in .",
    "an open question is if dd , or any other practical algorithm , achieves the bernoulli nonadaptive capacity for @xmath207 .",
    "another open problem is to produce better converses for bernoulli nonadaptive group testing with noisy tests .",
    "scarlett and cevher @xcite give similar achievability results , but the only converses known are along the lines of the counting bound .",
    "however , the new converses given in this paper relied heavily on the tests being noiseless , so it s not clear if our arguments can be generalised to the noisy case .",
    "the author thanks oliver johnson and jonathan scarlett for useful discussions .",
    "cl chan , ph che , s jaggi , v saligrama , and s agnihotri .",
    "non - adaptive probabilistic group testing with noisy measurements : near - optimal bounds with efficient algorithms .",
    "_ ieee transactions on information theory _ ,",
    "* 60*:5 , 30193035 , 2014 .",
    "m malyutov . search for sparse active inputs : a review . in : h aydinian , f cicalese , and c deppe ( eds ) , _ information theory , combinatorics , and search theory _ , lecture notes in computer science , * 7777 * , springer , 2013 ."
  ],
  "abstract_text": [
    "<S> we consider nonadaptive group testing with bernoulli tests , where each item is placed in each test independently with some fixed probability . we give a tight threshold on the maximum number of tests required to find the defective set under optimal bernoulli testing . </S>",
    "<S> achievability is given by a result of scarlett and cevher ; here we give a converse bound showing that this result is best possible . </S>",
    "<S> our new converse requires three parts : a typicality bound generalising the trivial counting bound , a converse on the comp algorithm of chan et al , and a bound on the sss algorithm similar to that given by aldridge , baldassini , and johnson . </S>",
    "<S> our result has a number of important corollaries , in particular that , in denser cases , bernoulli nonadaptive group testing is strictly worse than the best adaptive strategies . </S>"
  ]
}
{
  "article_text": [
    "we address the problem of automatically acquiring case frame patterns ( selectional patterns ) from large corpus data .",
    "the acquisition of case frame patterns normally involves the following three subproblems : 1 ) extracting case frames from corpus data , 2 ) generalizing case frame slots within the case frames , 3 ) learning dependencies that exist between the ( generalized ) case frame slots .    in this paper",
    ", we propose a method of learning dependencies between case frame slots . by ` dependency ' is meant the relation that exists between case slots which constrains the possible values assumed by each of those case slots . as illustrative examples , consider the following sentences .",
    "@xmath0 @xmath1 @xmath2 @xmath3 we see that an ` airline company ' can be the subject of verb ` fly ' ( the value of slot ` arg1 ' ) , when the direct object ( the value of slot ` arg2 ' ) is an ` airplane ' but not when it is an ` airline company . '",
    "these examples indicate that the possible values of case slots depend in general on those of the other case slots : that is , there exist ` dependencies ' between different case slots .",
    "the knowledge of such dependencies is useful in various tasks in natural language processing , especially in analysis of sentences involving multiple prepositional phrases , such as @xmath4 note in the above example that the slot of ` from ' and that of ` to ' should be considered dependent and the attachment site of one of the prepositional phrases ( case slots ) can be determined by that of the other with high accuracy and confidence .",
    "there has been no method proposed to date , however , that learns dependencies between case slots in the natural language processing literature . in the past research , the distributional pattern of each case slot is learned independently , and methods of resolving ambiguities are also based on the assumption that case slots are independent@xcite , or at most two case slots are dependent @xcite .",
    "thus , provision of an effective method of learning dependencies between case slots , as well as investigation of the usefulness of the acquired dependencies in disambiguation and other natural language processing tasks would be an important contribution to the field .    in this paper",
    ", we view the problem of learning case frame patterns as that of learning multi - dimensional discrete joint distributions , where random variables represent case slots .",
    "we then formalize the dependencies between case slots as the _ probabilistic _ dependencies between these random variables . since the number of parameters that exist in a multi - dimensional joint distribution is exponential if we allow n - ary dependencies , it is infeasible to accurately estimate them with a data size available in practice .",
    "it is also clear that relatively few of these random variables ( case slots ) are actually dependent on each other with any significance .",
    "thus it is likely that the target joint distribution can be approximated reasonably well by the product of component distributions of _ low _ order , drastically reducing the number of parameters that need to be considered .",
    "this is indeed the approach we take in this paper .",
    "now the problem is how to approximate a joint distribution by the product of low order component distributions .",
    "recently , suzuki proposed an algorithm to approximately learn a multi - dimensional discrete joint distribution expressible as a ` dendroid distribution , ' which is both efficient and theoretically sound @xcite .",
    "we employ suzuki s algorithm to learn case frame patterns as dendroid distributions .",
    "we conducted some experiments to automatically acquire case frame patterns from the penn tree bank bracketed corpus .",
    "our experimental results indicate that for some classes of verbs the accuracy achieved in a disambiguation experiment can be improved by using the acquired knowledge of dependencies between case slots .",
    ".... ( fly ( arg1 girl)(arg2 jet ) ) ( fly ( arg1 company)(arg2 jet ) ) ( fly ( arg1 girl)(arg2 company ) ) ....    suppose that we have data of the type shown in figure [ fig : word ] , given by case frame instances of verb ` fly ' automatically extracted from a corpus , using conventional techniques .",
    "as explained in introduction , the problem of learning case frame patterns can be viewed as that of estimating the underlying multi - dimensional joint discrete distributions which give rise to such data . in this research",
    ", we assume that case frame instances with the same head are generated by a joint distribution of type , @xmath5 where index @xmath6 stands for the head , and each of the random variables @xmath7 represents a case slot . in this paper",
    ", we use ` case slots ' to mean _ surface _ case slots , and we uniformly treat obligatory cases and optional cases . thus the number @xmath8 of the random variables is roughly equal to the number of prepositions in english ( and less than @xmath9 ) .    ....",
    "< ... > : word class ( fly ( arg1 < person>)(arg2 < airplane > ) ) ( fly ( arg1 < person>)(arg2 < airplane > ) ) ( fly ( arg1 < person>)(arg2 < airplane > ) ) ( fly ( arg1 < company>)(arg2 < airplane > ) ) ( fly ( arg1 < company>)(arg2 < airplane > ) ) ( fly ( arg1 <",
    "person>)(arg2 < company > ) ) ( fly ( arg1 < person>)(to < place > ) ) ( fly ( arg1 < person>)(from < place>)(to < place > ) ) ( fly ( arg1 < company>)(from < place>)(to < place > ) ) ....    these models can be further classified into three types of probabilistic models according to the type of values each random variable @xmath10 assumes .",
    "when @xmath10 assumes a word or a special symbol ` @xmath11 ' as its value , we refer to the corresponding model @xmath12 as a ` word - based model . ' here ` @xmath11 ' indicates the absence of the case slot in question .",
    "when @xmath10 assumes a word - class or ` @xmath11 ' as its value , the corresponding model is called a ` class - based model . '",
    "when @xmath10 takes on @xmath13 or @xmath11 as its value , we call the model a ` slot - based model . ' here the value of ` @xmath13 ' indicates the presence of the case slot in question , and ` @xmath11 ' absence .",
    "for example , the data in figure [ fig : word ] can be generated by a word - based model , and the data in figure [ fig : class ] by a class - based model .",
    "suppose for simplicity that there are only 4 possible case slots corresponding respectively to the subject , direct object , ` from ' phrase , and ` to ' phrase .",
    "then , @xmath14 is given a specific probability value by a word - based model .",
    "in contrast , @xmath15 is given a specific probability value by a class - based model , where @xmath16 and @xmath17 denote word classes .",
    "finally , @xmath18 is assigned a specific probability value by a slot - based model .",
    "we then formulate the dependencies between case slots as the probabilistic dependencies between the random variables in each of these three models .    in the absence of any constraints , however , the number of parameters in each of the above three models is exponential ( even the slot - based model has @xmath19 parameters ) , and thus it is infeasible to accurately estimate them in practice . a assumption that is often made to deal with",
    "this difficulty is that random variables ( case slots ) are mutually independent .",
    "suppose for example that in the analysis of the sentence @xmath20 the following alternative interpretations are given .",
    "@xmath22 we wish to select the more appropriate of the two interpretations .",
    "a _ heuristic _",
    "word - based method for disambiguation , in which the random variables ( case slots ) are assumed to be dependent , is to calculate the following values of word - based likelihood and to select the interpretation with the higher likelihood value .",
    "@xmath23 @xmath24 if on the other hand we assume that the random variables are _ independent _ , we only need to calculate and compare ( c.f.@xcite ) @xmath25 and @xmath26 the independence assumption can also be made in the case of a class - based model or a slot - based model . for slot - based models , with the independence assumption , the following probabilities @xmath27",
    "@xmath28 are to be compared ( c.f.@xcite ) .    assuming that random variables ( case slots ) are mutually independent",
    "would drastically reduce the number of parameters .",
    "( note that under the independence assumption the number of parameters in a slot - based model becomes @xmath29 . ) as illustrated in section 1 , this assumption is not necessarily valid in practice .",
    "what seems to be true in practice is that some case slots are in fact dependent but overwhelming majority of them are independent , due partly to the fact that usually only a few case slots are obligatory and most others are optional . thus the target joint distribution is likely to be approximable by the product of several component distributions of low order , and thus have in fact a reasonably small number of parameters .",
    "we are thus lead to the approach of approximating the target joint distribution by such a simplified model , based on corpus data .",
    "without loss of generality , any n - dimensional joint distribution can be written as @xmath30 for some permutation ( @xmath31 ) of @xmath32 , where we let @xmath33 denote @xmath34 .",
    "a plausible assumption on the dependencies between random variables is intuitively that each variable _ directly _ depends on at most one other variable .",
    "( note that this assumption is the simplest among those that relax the independence assumption . ) for example , if a joint distribution @xmath35 over 3 random variables @xmath36 can be written ( approximated ) as follows , it ( approximately ) satisfies such an assumption .",
    "@xmath37 such distributions are referred to as ` dendroid distributions ' in the literature .",
    "a dendroid distribution can be represented by a dependency forest ( i.e. a set of dependency trees ) , whose nodes represent the random variables , and whose directed arcs represent the dependencies that exist between these random variables , each labeled with a number of parameters specifying the probabilistic dependency .",
    "( a dendroid distribution is a restricted form of the bayesian network @xcite . )",
    "it is not difficult to see that there are 7 and only 7 such representations for the joint distribution @xmath35 ( see figure [ fig : graph ] ) , disregarding the actual numerical values of the probabilistic parameters .",
    "now we turn to the problem of how to select the best dendroid distribution from among all possible ones to approximate a target joint distribution based on input data ` generated ' by it .",
    "this problem has been investigated in the area of machine learning and related fields .",
    "a classical method is chow & liu s algorithm for estimating a multi - dimensional joint distribution as a dependency tree , in a way which is both efficient and theoretically sound @xcite .",
    "more recently suzuki extended their algorithm so that it estimates the target joint distribution as a dendroid distribution or dependency forest @xcite , allowing for the possibility of learning one group of random variables to be completely independent of another . since many of the random variables ( case slots ) in a case frame pattern are essentially independent , this feature is crucial in our context , and we thus employ suzuki s algorithm for learning our case frame patterns .",
    "( 150,120)(0,0 ) ( 20,40)@xmath38 ( 10,20)@xmath39 ( 30,20)@xmath40 ( 5,15)@xmath41 ( 1,10)@xmath42 ( 1,5)@xmath43 ( 15,21)(1,0)15 ( 22,39)(-1,-2)8    ( 70,40)@xmath38 ( 60,20)@xmath39 ( 80,20)@xmath40 ( 55,15)@xmath44 ( 51,10)@xmath45 ( 51,5)@xmath46 ( 72,39)(-1,-2)8 ( 72,39)(1,-2)8    ( 120,40)@xmath38 ( 110,20)@xmath39 ( 130,20)@xmath40 ( 105,15)@xmath47 ( 101,10)@xmath48 ( 101,5)@xmath49 ( 130,21)(-1,0)15 ( 122,39)(1,-2)8    ( 20,85)@xmath38 ( 10,65)@xmath39 ( 30,65)@xmath40 ( 5,60)@xmath50 ( 1,55)@xmath51 ( 15,66)(1,0)15    ( 70,85)@xmath38 ( 60,65)@xmath39 ( 80,65)@xmath40 ( 55,60)@xmath52 ( 51,55)@xmath53 ( 72,84)(-1,-2)8    ( 120,85)@xmath38 ( 110,65)@xmath39 ( 130,65)@xmath40 ( 105,60)@xmath54 ( 101,55)@xmath55 ( 122,84)(1,-2)8    ( 20,125)@xmath38 ( 10,105)@xmath39 ( 30,105)@xmath40 ( 5,100)@xmath56    suzuki s algorithm first calculates the mutual information between all two nodes ( random variables ) , and it sorts the node pairs in descending order with respect to the mutual information .",
    "it then puts a link between a node pair with the largest mutual information value @xmath57 , provided that @xmath57 exceeds a certain threshold which depends on the node pair and adding that link will not create a loop in the current dependency graph .",
    "it repeats this process until no node pair is left unprocessed .",
    "figure [ fig : algorithm ] shows the detail of this algorithm , where @xmath58 denotes the number of possible values assumed by @xmath10 , @xmath59 the input data size , and @xmath60 denotes the logarithm to the base @xmath61 .    * algorithm : * + 1 .",
    "let @xmath62 ; + 2 .",
    "calculate the mutual information @xmath63 for all node pairs @xmath64 ; + 3 .",
    "sort the node pairs in descending order of @xmath57 , and store them into queue @xmath65 ; + 4 . let @xmath66 be the set of @xmath67 , @xmath68 ; + 5 .",
    "* while * the maximum value of @xmath57 of the node pair @xmath64 in @xmath69 satisfies + @xmath70 + * do * + * begin * + 4 - 1 . remove the node pair @xmath64 having the maximum value of @xmath57 from @xmath69 ; + 4 - 2 . *",
    "if * @xmath10 and @xmath71 belong to different sets @xmath72,@xmath73 in @xmath66 ; + * then * + replace @xmath72 and @xmath73 in @xmath66 with @xmath74 , and add edge @xmath64 to @xmath75 ; + * end * + 6 .",
    "output @xmath75 as the set of edges of the estimated model .",
    "+    it is easy to see that the number of parameters in a dendroid distribution is of the order @xmath76 , where @xmath77 is the maximum of all @xmath58 , and @xmath8 is the number of random variables .",
    "the time complexity of the algorithm is of the order @xmath78 .",
    "we will now show how the algorithm works by an illustrative example .",
    "suppose that the data is given as in figure [ fig : class ] and there are 4 nodes ( random variables ) @xmath79 .",
    "the values of mutual information and thresholds for all node pairs are shown in table [ tb : mutual ] . to actual frequencies ( c.f .",
    "@xcite ) . ] based on this calculation the algorithm constructs the dependency forest shown in figure  [ fig : example ] , because the mutual information between @xmath80 and @xmath81 , @xmath82 and @xmath81 are large enough , but not the others .",
    "the result indicates that slot ` arg2 ' and ` from ' should be considered dependent on ` to . '",
    "note that ` arg2 ' and ` from ' should also be considered dependent via ` to ' but to a somewhat weaker degree .    [ cols=\"<,<,<,<,<\",options=\"header \" , ]     to test how large a data size is required to estimate a class - based model , we conducted the following experiment .",
    "we defined an artificial class - based model and generated some data according to its distribution .",
    "we then used the data to estimate a class - based model ( dendroid distribution ) , and evaluated the estimated model by measuring the number of dependencies ( dependency arcs ) it has and the kl distance between the estimated model and the true model .",
    "we repeatedly generated data and observed the ` learning curve , ' namely the relationship between the number of dependencies in the estimated model and the data size used in estimation , and the relationship between the kl distance between the estimated and true model and the data size .",
    "we defined two other models and conducted the same experiments .",
    "figure [ fig : sim ] shows the results of these experiments for these three artificial models averaged over @xmath83 trials .",
    "( the number of parameters in model1 , model2 , and model3 are @xmath84 , @xmath85 , and @xmath86 respectively , while the number of dependencies are @xmath13 , @xmath87 , and @xmath88 respectively . )",
    "we see that to accurately estimate a model the data size required is as large as @xmath9 times the number of parameters .",
    "since a class - based model tends to have more than @xmath9 parameters usually , the current data size available in the penn tree bank ( see table[tb : verb ] ) is not enough for accurate estimation of the dependencies within case frames of most verbs .",
    "we conclude this paper with the following remarks .    1 .",
    "the primary contribution of research reported in this paper is that we have proposed a method of learning dependencies between case frame slots , which is theoretically sound and efficient , thus providing an effective tool for acquiring case dependency information .",
    "2 .   for the slot - based model , sometimes case slots",
    "are found to be dependent .",
    "experimental results demonstrate that using the dependency information , when dependency does exist , structural disambiguation results can be improved .",
    "3 .   for the word - based or class - based models ,",
    "case slots are judged independent , with the data size currently available in the penn tree bank .",
    "this empirical finding verifies the independence assumption widely made in practice in statistical natural language processing .",
    "we proposed to use dependency forests to represent case frame patterns .",
    "it is possible that more complicated probabilistic dependency graphs like bayesian networks would be more appropriate for representing case frame patterns .",
    "this would require even more data and thus the problem of how to collect sufficient data would be a crucial issue , in addition to the methodology of learning case frame patterns as probabilistic dependency graphs .",
    "finally the problem of how to determine obligatory / optional cases based on dependencies acquired from data should also be addressed .",
    "we thank mr.k.nakamura , mr.t.fujita , and dr.k.kobayashi of nec c&c res . labs . for their constant encouragement .",
    "we thank mr.r.isotani of nec information technology res . labs . for his comments .",
    "we thank ms .",
    "y.yamaguchi of nis for her programming effort ."
  ],
  "abstract_text": [
    "<S> we address the problem of automatically acquiring case frame patterns ( selectional patterns ) from large corpus data . </S>",
    "<S> in particular , we propose a method of learning dependencies between case frame slots . </S>",
    "<S> we view the problem of learning case frame patterns as that of learning multi - dimensional discrete joint distributions , where random variables represent case slots . </S>",
    "<S> we then formalize the dependencies between case slots as the _ probabilistic _ dependencies between these random variables . since the number of parameters in a multi - dimensional joint distribution is exponential , it is infeasible to accurately estimate them in practice . to overcome this difficulty </S>",
    "<S> , we settle with approximating the target joint distribution by the product of _ low _ order component distributions , based on corpus data . in particular we propose to employ an efficient learning algorithm based on the mdl principle to realize this task . </S>",
    "<S> our experimental results indicate that for certain classes of verbs , the accuracy achieved in a disambiguation experiment is improved by using the acquired knowledge of dependencies . </S>"
  ]
}
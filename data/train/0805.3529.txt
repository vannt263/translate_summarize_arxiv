{
  "article_text": [
    "a cubature formula with high accuracy is an important tool for numerical computation and has various applications .",
    "one of the applications is to construct polynomial hyperinterpolation , introduced by sloan @xcite , which is an approximation process constructed by applying the cubature formula on the fourier coefficients of the orthogonal projection operator .    a cubature formula of degree @xmath4 with @xmath5 nodes with respect to a measure @xmath6 supported on a set @xmath7 takes the form @xmath8 where @xmath9 , called weights , are ( positive ) numbers , @xmath10 is a set of points , called nodes , @xmath11 with @xmath12 , and @xmath13 denoted the subspace of @xmath1-variate polynomials of total degree @xmath14 restricted to @xmath7 . for a cubature formula of degree @xmath4 to exist ,",
    "it is necessary that @xmath15 there are improved lower bounds of the same order in terms of @xmath3 .",
    "a challenging problem is to construct cubature formulae with fewer nodes , that is , with the number of nodes @xmath5 close to the lower bound .",
    "in this paper we consider the case that the measure is given by the product chebyshev weight function @xmath16 on the cube @xmath17^d$ ] . for @xmath18 , the gaussian quadrature formula of degree",
    "@xmath4 needs merely @xmath19 points .",
    "our main result is a new family of cubature formulae that uses @xmath20 many nodes .",
    "for @xmath21 these formulae are known to have minimal number of nodes .",
    "for @xmath22 they are still far from the lower bound , but they appear to be the best ones that are known at this moment . we refer to section 2 for further discussions .",
    "we present numerical tests on these cubature formulae in three variables and also apply them to constructing polynomial hyperinterpolation operator in three variables .    for every function",
    "@xmath23 the @xmath24-orthogonal projection of @xmath25 on @xmath26 is @xmath27 where @xmath28 is a @xmath1-dimensional point , @xmath29 is a @xmath1-index of length @xmath30 @xmath31 is any @xmath24-orthonormal basis of @xmath26 with @xmath32 of total degree @xmath30 ( concerning the theory of multivariate orthogonal polynomials , we refer the reader to the monograph @xcite ) .",
    "clearly , @xmath33 for every @xmath34 . given a cubature formula of degree @xmath35 , we obtain from ( [ proj ] ) the polynomial approximation of degree @xmath3 by the _",
    "discretized fourier coefficients _",
    "@xmath37 where @xmath38 and thus @xmath39 for every @xmath34 .",
    "this is the hyperinterpolation operator .",
    "it satisfies the basic estimate : for every @xmath23 , @xmath40 where @xmath41 , so that it converges in mean .",
    "the convergence rate can be estimated by a multivariate version of jackson theorem ( see , for example , @xcite ) , which shows that @xmath42 for @xmath43 , @xmath44 .",
    "it becomes an effective approximation tool in the uniform norm when its operator norm ( the so - called lebesgue constant ) grows slowly ( cf .",
    "the hyperinterpolation has been used effectively in several cases : originally for the sphere @xcite , and more recently for the square @xcite , the disk @xcite , and the cube @xcite .",
    "we will use our new cubature formulae to construct a hyperinterpolation operator of three variables for the chebyshev weight function on the cube .",
    "we show that the computation can be carried out efficiently using the 3-dimensional fft and that the algorithm can be completely vectorized .",
    "we will also present numerical results on hyperinterpolation of several test functions .",
    "the paper is organized as follows . in section 2",
    "we construct new cubature formulae and report results of numerical tests , where comparisons are made with tensor - product gauss - chebyshev formulae .",
    "hyperinterpolation in three variables is considered in section 3 , where we show how to compute it effectively and report the results of numerical tests . finally in section 4",
    ", we obtain a new ( nontensorial ) clenshaw - curtis type formula in the cube by integrating the hyperinterpolant in section 3 and show that it has a clear superiority over tensorial clenshaw - curtis and gauss - legendre cubature on nonentire test integrands , a phenomenon known for 1-dimensional and 2-dimensional clenshaw - curtis formulae ( see @xcite ) .",
    "we consider cubature formula for the product chebyshev weight function ( [ chebw ] ) , which is normalized so that its integral over @xmath45^d$ ] is @xmath46 . for @xmath18 , we write @xmath47 .",
    "let @xmath48 denote the space of polynomials of total degree @xmath49 in @xmath1 variables .",
    "we write @xmath50 if @xmath18 .",
    "the gaussian quadrature formula for @xmath51 takes the form @xmath52 for @xmath53 , a cubature formula of degree @xmath4 needs at least ( cf .",
    "@xcite ) @xmath54 many nodes .",
    "cubature formulae that attain this lower bound can be constructed for the product chebyshev weight @xmath55 ( see @xcite and the references therein ) by studying common zeros of associated orthogonal polynomials . in @xcite ,",
    "these cubature rules were derived by an elementary method which depends on a factorization of the gauss - lobatto quadrature into two sums , over _ even _ indices and _ odd _ indices , respectively .",
    "this factorization method was also used for @xmath56 in @xcite and yields a cubature formula of degree @xmath4 for @xmath57 with roughly @xmath58 many nodes .",
    "a close inspection of the factorization method shows that it actually allows us to derive cubature formulae of degree @xmath4 for @xmath57 with roughly @xmath59 many nodes .",
    "this number of nodes is substantially less than @xmath60 of the product cubature formula or @xmath61 of the formulae in @xcite , although it likely far from optimal as seen from .",
    "we start with the gauss - lobatto formula for @xmath51 on @xmath45 $ ] .",
    "it takes the form @xmath62 which again holds for all @xmath63 .",
    "we proceed to factor this rule into two terms .",
    "the factorization depends on whether @xmath3 is even or @xmath3 is odd .",
    "define @xmath64 and define @xmath65 where we use the superscripts @xmath66 and @xmath67 to signify that the sum is taken over even indices or odd indices , respectively .",
    "evidently , the quadrature becomes @xmath68 by definition .",
    "the chebyshev polynomials , @xmath69 , are orthogonal with respect to @xmath51 on @xmath45 $ ] , @xmath70 the following elementary lemma plays a key role in constructing cubature formulae on @xmath45^d$ ] .",
    "[ lem1 ] for @xmath71 and @xmath72 , @xmath73    * proof . *",
    "the proof follows from elementary trigonometric identities .",
    "for example , for @xmath74 , an elementary calculation shows that @xmath75 from which @xmath76 for @xmath77 follows immediately .",
    "the case when @xmath78 is a multiple of @xmath3 follows from the first equal sign of the above equation without summing it up .",
    "similarly , @xmath79 from which the stated result follows .",
    "the proof for @xmath80 is similar and is omitted for brevity .",
    "0.5 cm    let @xmath81 , that is , @xmath82 for a function @xmath83 , we define the sum @xmath84 as a @xmath1-fold multiple sum in which @xmath85 is applied to the @xmath78-th variable of @xmath25 .",
    "let us define @xmath86 for each @xmath87 , we then define @xmath88 since the sum introduces a symmetry among @xmath87 , there are @xmath89 distinct @xmath90 sums .",
    "[ mainth ] for @xmath91 and each @xmath87 , the cubature formula @xmath92^d } f(x ) w_d(x ) dx = 2^{d-1}i_{n , d}^\\a f\\ ] ] is exact for @xmath93 and its number of nodes , @xmath5 , satisfies @xmath94    * proof . * for @xmath95 let @xmath96 , which is a polynomial of total degree @xmath97 .",
    "it suffices to establish for @xmath98 , since this set is an orthogonal basis of @xmath48 .",
    "in this case we have @xmath99^d } t_k(x ) w_d(x ) dx = 2^{d-1}\\left [       i_n^{\\a_1 } t_{k_1}\\cdots i_n^{\\a_d } t_{k_d}+              i_n^{{\\widetilde}{\\a}_1 } t_{k_1}\\cdots   i_n^{{\\widetilde}{\\a}_d } t_{k_d }          \\right]\\;.\\ ] ] by the orthogonality of @xmath100 , the left hand side is equal to 1 if @xmath101 and zero if @xmath102 . from the definition of @xmath103 and @xmath104 ,",
    "it is evident that @xmath105 .",
    "hence , for @xmath106 , the right hand side is equal to @xmath107 , verifying the equation for @xmath106 .",
    "assume now @xmath108 .",
    "if one of @xmath109 , then @xmath110 by lemma [ lem1 ] .",
    "we are left with the case that @xmath111 for all @xmath112 . since @xmath113",
    ", there can be at most one @xmath114 .",
    "furthermore , @xmath115 shows that there is exactly one @xmath116 .",
    "thus the right hand side becomes @xmath117 , which is zero as @xmath118 and @xmath119 according to the lemma [ lem1 ] .",
    "0.5 cm for the case of @xmath21 , theorem [ mainth ] contains two distinct cubature formulae for @xmath120 , respectively , whose number of nodes are either equal to @xmath121 in or @xmath122 , those are the ones that have appeared in @xcite , and later in @xcite , as mentioned earlier .",
    "for @xmath123 , there are 4 distinct formulae for @xmath124 , respectively .",
    "for @xmath125 , the number of nodes is @xmath126 for @xmath127 and @xmath128 for @xmath129 , respectively .    in order to demonstrate the effectiveness of the new cubature formula , we present in figures 1 - 2 numerical results of ( [ cuba - d ] ) with @xmath130 on the integrals of six text functions with respect to the product chebyshev measure on the 3-cube .",
    "the first three functions are analytic entire ( a polynomial , an exponential and a gaussian ) , whereas the other three are less smooth : one analytic but not entire ( a 3-dimensional version of the runge test function ) , one @xmath131 nonanalytic , and one @xmath132 .",
    "these functions are analogues of test functions for algebraic cubature in dimension 1 and 2 , see @xcite .",
    "we compare them with two natural choices for cubature on a tensor product domain : the tensor - product gauss - chebyshev and gauss - chebyshev - lobatto formulae .",
    "the results , obtained with matlab ( cf .",
    "@xcite ) , demonstrate the superiority of the new formula in all cases , especially for the less smooth functions , in terms of number of function evaluations .",
    "it should be pointed out that , however , the superiority for the less smooth functions arises for _ even _",
    "@xmath3 ( a sort of parity phenomenon ) .",
    "other numerical tests ( not reported for brevity ) have shown that the cubature formula has the same behavior for @xmath133 .",
    "a natural question associated with cubature formulae is polynomial interpolation .",
    "let @xmath134 denote the set of the nodes of the cubature formula ( [ cuba - d ] ) .",
    "the interpolation problem looks for a polynomial subspace , @xmath135 , of the lowest degree such that @xmath136 has a unique solution in @xmath135 . in the case of @xmath21 , this problem",
    "is completely solved in @xcite , where @xmath135 is a subspace of @xmath137 which includes @xmath138 , and compact formulae of the fundamental interpolation polynomials are also given there .",
    "for @xmath139 , however , the problem is much harder , since the number of nodes of our cubature is far from @xmath140 .",
    "for example , if @xmath123 , then @xmath141 , whereas our cubature has @xmath142 many nodes .",
    "the problem essentially comes down to study the polynomial ideal that has @xmath134 as its variety ( see @xcite ) .",
    "a simpler approach to polynomial approximation via these new nodes is given by hyperinterpolation , as described in the introduction .",
    "in the next section we shall apply such a method in the 3-dimensional case .",
    "we now use cubature formula ( [ cuba - d ] ) to construct hyperinterpolation as in ( [ hyper ] ) for the 3-cube @xmath143 ^ 3 $ ] . in this case",
    ", @xmath144 is the product chebyshev orthonormal basis ( cf .",
    "@xcite ) , i.e. @xmath145 where @xmath146 and @xmath147 .",
    "moreover , let @xmath148 be the set of @xmath149 chebyshev - lobatto points , and @xmath150 , @xmath151 its restriction to even and odd indices , respectively .",
    "then , @xmath152 with @xmath153 , see ( [ sigmatilde ] ) .",
    "the weights of the cubature formula ( [ cuba - d ] ) for @xmath154 , are @xmath155 note that , since @xmath156 the polynomial @xmath157 in ( [ hyper ] ) is not interpolant .",
    "now , defining @xmath158 we can write @xmath159 where @xmath160 this shows that the 3-dimensional coefficients array @xmath161 is a scaled discrete cosine tranform of the 3-dimensional array @xmath162 where we eventually pick up only the @xmath163 hyperinterpolation coefficients corresponding to @xmath164 .    a fast implementation of hyperinterpolation is now feasible ( for example in matlab ) , via the fft .",
    "indeed , we have written a matlab code ( see @xcite ) , completely vectorized by several implementation tricks , whose kernel can be summarized as follows : 0.2 cm * algorithm : fast total degree hyperinterpolation in the 3-cube *    * construct the hyperinterpolation point set @xmath10 as union of the two subgrids in ( [ hypernodes ] ) ; * compute the cubature weights in ( [ hyperweights ] ) ; * compute the 3-dimensional array @xmath165 at the complete grid @xmath166 by ( [ f ] ) ( notice that @xmath25 is evaluated _ only _ at @xmath10 ) ; * compute the 3-dimensional array of coefficients @xmath161 by three nested applications of the 1-dimensional @xmath167 operator ; * select the coefficients @xmath161 corresponding to the triples @xmath168 such that @xmath164 .",
    "we recall that there is a simple way to approximate a function in the 3-cube by tensor - product of polynomials of degree @xmath3 , that is , by a tensor - product discrete chebyshev series ( ultimately a tensor - product hyperinterpolant ) .",
    "such an approximation uses @xmath169 function evaluations , and @xmath169 coefficients .",
    "in contrast , let us stress again the following facts on our total - degree hyperinterpolation of degree @xmath3 in the 3-cube : 0.2 cm * remark *    * the number of hyperinterpolation nodes , or function evaluations , is equal to @xmath170 ; * the number of hyperinterpolation coefficients is @xmath171 .    in order to compare the performances of total - degree and tensor - product hyperinterpolation in the 3-cube , we show , in the following figures , the hyperinterpolation errors versus both the number of nodes and the number of coefficients on the six test functions already used in section 2 , and we choose again @xmath172 , see ( [ hypernodes ] ) .",
    "the errors are relative to the maximum deviation of the function from its mean and are computed on a uniform control grid . since the computation of the coefficients via",
    "the fft has roughly the same cost for both kinds of hyperinterpolation , we have chosen the number of function evaluations as a measure of computational cost for the construction , and the number of coefficients as a measure of the compression capability of the algorithms .",
    "the situation here is in some sense opposite to that of figures 1 - 2 . indeed , total - degree appears superior to tensor - product hyperinterpolation on the smoothest functions , but not on the less smooth ones . as it is natural from the observation above , the behavior of total - degree hyperinterpolation in terms of number of coefficients is better than that in terms of number of nodes ( function evaluations ) .",
    "in the recent paper @xcite , perusing an idea already present in @xcite , it has been shown how hyperinterpolation allows us to construct new cubature formulae . given @xmath173 and @xmath23 , we can approximate the integral of @xmath174 in @xmath6 as @xmath175 where the generalized `` orthogonal moments '' @xmath176 and the cubature weights @xmath177 are defined by @xmath178 observe that the cubature formula ( [ prodcub ] ) is _ exact _ for every @xmath179 , and that @xmath176 are just fourier coefficients of @xmath180 with respect to the @xmath24-orthonormal basis @xmath144 .",
    "let all the assumptions for the construction of the cubature formula ( [ prodcub ] ) be satisfied , and in particular let @xmath173 .",
    "then the sum of the absolute values of the cubature weights has a finite limit @xmath181      notice that ( [ lim ] ) ensures that the sum of absolute values of the weights is bounded , and thus by recalling that @xmath182 is a projection operator on @xmath183 we obtain the polya - steklov type ( cf .",
    "@xcite ) convergence estimate @xmath184 where @xmath185 denotes the error of the best polynomial approximation of degree @xmath3 to @xmath25 in the uniform norm .    now , applying ( [ prodcub])-([momwei ] ) in the case @xmath186 ( since then @xmath187 ) we obtain , via hyperinterpolation , a cubature formula for the standard lebesgue measure from an algebraic cubature formula for another measure ( absolutely continuos with respect to the former ) .",
    "the specialization of this approach to the @xmath46-dimensional chebyshev measure gives ultimately the popular clenshaw - curtis quadrature formula @xcite .",
    "an extension to dimension 2 has been studied in @xcite . here",
    "we apply the method in dimension 3 , obtaining a new nontensorial clenshaw - curtis - like cubature formula in the 3-cube .    in figures 7 - 8 we display the relative errors of such a formula for @xmath172 ( cf .",
    "( [ hypernodes ] ) ) on the six test functions already used above , compared with those of the tensor - product clenshaw - curtis , gauss - legendre , and gauss - legendre - lobatto formulae .",
    "the numerical results have been obtained with matlab , using @xcite for the gaussian formulae and @xcite for the tensor - product clenshaw - curtis formula .",
    "in particular , we see that with the entire test functions nontensorial clenshaw - curtis cubature is more accurate than the tensor - product version , but less accurate than the other two tensor - product formulae . on the other hand , in the less smooth cases the nontensorial clenshaw - curtis formula is better than all the other three , especially for _ odd _ hyperinterpolation degrees @xmath3 , which correspond to use @xmath149 _ even _ in ( [ cuba - d ] ) ( again a sort of parity phenomenon , cf .",
    "figure 2 ) .",
    "this behavior echos that of 1-dimensional and 2-dimensional clenshaw - curtis formulae ( see @xcite ) .",
    "other numerical tests ( not reported for brevity ) have shown that the other versions of the nontensorial clenshaw - curtis formula , corresponding to @xmath188 in ( [ hypernodes ] ) , produce essentially the same results .",
    "o. hansen , k. atkinson and d. chien , on the norm of the hyperinterpolation operator on the unit disk and its use for the solution of the nonlinear poisson equation , i m a j. numer .",
    ", published online 20 march 2008 ."
  ],
  "abstract_text": [
    "<S> a new algebraic cubature formula of degree @xmath0 for the product chebyshev measure in the @xmath1-cube with @xmath2 nodes is established . the new formula </S>",
    "<S> is then applied to polynomial hyperinterpolation of degree @xmath3 in three variables , in which coefficients of the product chebyshev orthonormal basis are computed by a fast algorithm based on the 3-dimensional fft . </S>",
    "<S> moreover , integration of the hyperinterpolant provides a new clenshaw - curtis type cubature formula in the 3-cube . </S>"
  ]
}
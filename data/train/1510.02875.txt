{
  "article_text": [
    "the @xmath1-queens problem is the problem of placing @xmath1 queens on an @xmath1 by @xmath1 chessboard such that none are attacking each other .",
    "this puzzle originated as the @xmath2-queens problem played on a standard @xmath3 chessboard and was proposed by max bezzel in 1848  @xcite .",
    "the @xmath2-queens problem and the more general @xmath1-queens problem attracted the interest of notable mathematicians of that time . in 1850 , nauck was the first to publish all 92 solutions for the standard @xmath3 chessboard  @xcite and in 1874 pauls gives the first set of solutions for the general @xmath1-queens problem published in two articles  @xcite .",
    "the problem of finding more solutions in various dimensions has continued to hold the interest of mathematicians and computer scientists .",
    "solutions sets have been found using graph theory , magic squares , latin squares , and group theory , among other techniques . in a brute force approach ,",
    "solution sets for a given @xmath1 can be found use the backtracking algorithm , a standard technique taught in computer science classes . in more modern times , a player can find numerous mobile apps to test his ability to find solutions on @xmath3 or other dimensional boards .    in this paper , we look at a game variant of the @xmath1-queens problem that can be played on chessboards of varying dimensions . the basic version of the @xmath1-queens game is described by noon in  @xcite , who , observing that not all placements of queens will lead to a full solutions with @xmath1 queens , suggests a two player game where each player successively places queens in non - attacking positions .",
    "the first player who can not place a queen loses the game . in the next section ,",
    "we introduce a modification of this @xmath1-queens game .",
    "sections  [ complete ] and  [ locked ] discuss two states a game board may take .",
    "then section  [ alternate ] will discuss alternate versions of the game , while section  [ graph ] looks at the complexity of the game .",
    "we begin by observing that counting all possible arrangement of queens which satisfy noon s @xmath1-queens game can be quite complicated .",
    "this can be illustrated by using a gradient to indicate the number of queens attacking each square on the chessboard , with white indicating an open square and darker shades indicating an increasing number of queens attacking that square .",
    "figure  [ gradient_board ] displays an example of such a chessboard .",
    ".46 @endgroupori@endgroup @endgroup@endgroupori @whitefieldmaskcolor @blackfieldmaskcolor @whitefieldcolor @blackfieldcolor    .46 @endgroupori@endgroup @endgroup@endgroupori @whitefieldmaskcolor @blackfieldmaskcolor @whitefieldcolor @blackfieldcolor    in the modification of the game , we wish to simplify this illustration as well as try to cover more squares on the board with queens . therefore we propose the following additional rule to the two - player game suggested by noon .    _",
rule : let every non - occupied square take on a value given by the number of queens who are directly attacking that square .",
    "if the value is congruent to zero modulo two , then the square is open so a queen may be placed on it , and if the value is congruent to one modulo two the square is closed and we may not place a queen on that square .",
in particular , squares with an even number of attacking queens are open and with an odd number of attacking queens are closed .",
    "play continues as before until a losing player can not place another queen on the board .",
    "we will refer to this game as the * mod 2 @xmath4-queens game*. figure  [ mod2_gradient ] illustrates the same configuration of queen with a now much simpler and more open gradient given by the mod 2 @xmath1-queens game .",
    "there are many differences between this version of the game , and the traditional @xmath1-queens problem .",
    "in particular , the order of the placement of the queens now matters .",
    "further , a maximum of @xmath5 queens can be placed to fill the board , whereas the original game can have at most @xmath1 queens .    in analyzing the game we note there",
    "exist three states for any chessboard which we will call complete , unlocked , and locked .",
    "we define these states as follows .",
    "a * complete * chessboard contains @xmath5 queens that have been placed through legal game play .",
    "an * unlocked * board is one that has less than @xmath5 queens placed on it , and there exist empty open squares in which a queen may be placed .",
    "finally , a * locked * board is one that has less than @xmath5 queens , but no legal moves remaining .    before we look at some complete chessboards ,",
    "let us review some chessboard terminology    each square on a @xmath0 chessboard will be indexed by an * ordered pair * @xmath6 where @xmath7 indicates the row numbered from top to bottom and @xmath8 indicates the column numbered from left to right .",
    "the * @xmath9-sum diagonal * is the diagonal running from left to right and bottom to top in which the sum of the indices of each square is @xmath10 for some integer @xmath11 .",
    "the * @xmath9-difference diagonal * is the diagonal running from left to right and top to bottom in which the difference of the indices of each square is @xmath10 for some integer @xmath12 .",
    "the @xmath13-sum diagonal is known as the * main sum diagonal * , and similarly the @xmath14-difference diagonal is called the * main difference diagonal*.",
    "by definition , we know that a complete chessboard contains @xmath5 queens , so we ask , is this always possible ?    in the case where the size of the board is odd , the answer is yes    [ odd_complete ] if @xmath1 is an odd positive integer , the @xmath0 chessboard has a complete solution of @xmath5 queens .",
    "_ strategy _ : thinking inductively , a @xmath15 chessboard may be filled with one queen , and if we want to fill a @xmath16 board we need to fill the top two rows and left two columns with queens as well as the @xmath15 board in the lower right corner . more generally , to fill a @xmath0 board we need to fill the top two rows , the left two columns , and a @xmath17 board in the lower right corner . looking at the game position where queens have filled the first two rows and the first two columns of the chessboard as illustrated in figure  [ unlocked_11 ] in the case @xmath18 , we observe that every uncovered square on this chessboard can be attacked by an even number of queens .",
    "@endgroupori@endgroup @endgroup@endgroupori @whitefieldmaskcolor @blackfieldmaskcolor @whitefieldcolor @blackfieldcolor    specifically , each square can be attacked vertically , horizontally , and along the difference diagonal by exactly two queens on each line .",
    "squares to left or on the main diagonal are attacked by four queens , squares on the @xmath19 sum diagonal are attacked by exactly two queens , and all other squares are attacked by zero queens on the sum diagonal . therefore game play from the chessboard with queens in this starting configuration is equivalent to the game play on a @xmath20 board with no queens . because we can proceed inductively to a @xmath15 board ,",
    "now we only need to show that this starting board can be obtained from a sequence of legal game moves .",
    "begin by filling the upper left corner of a @xmath0 chessboard with the eight queens in the sequence given by figure  [ unlocked_3 ] . in the following steps , we will successively fill in the next four squares from the first two rows and column .",
    "we proceed as listed in the steps below and illustrated in figures  [ odd_step1 ] and  [ odd_step2 ] for an increasing integer @xmath10 where @xmath21",
    ".    * step 1 : place a queen in square @xmath22 and then in square @xmath23 .",
    "* step 2 : place a queen in square @xmath24 and then in square @xmath25 . * step 3 : place a queen in square @xmath26 and then in square @xmath27 .",
    "* step 4 : place a queen in square @xmath28 and then in square @xmath29 .",
    ".3 @endgroupori@endgroup @endgroup@endgroupori @whitefieldmaskcolor @blackfieldmaskcolor @whitefieldcolor @blackfieldcolor    .4 @endgroupori@endgroup @endgroup@endgroupori @whitefieldmaskcolor @blackfieldmaskcolor @whitefieldcolor @blackfieldcolor    .4 @endgroupori@endgroup @endgroup@endgroupori @whitefieldmaskcolor @blackfieldmaskcolor @whitefieldcolor @blackfieldcolor    once this process is finished , we repeat on the @xmath17 chessboard until we have reduced to the one empty square in the lower right corner which can then be filled with a queen .",
    "not all chessboards , however , will have complete solutions .    [ even_not_complete ] if @xmath1 is an even positive integer , the @xmath0 chessboard does not have a complete solution of @xmath5 queens .    _",
    "contradiction : _ to see how this is true , suppose to the contrary , that there is an open square in which to place @xmath5th queen on a @xmath0 chessboard , and further suppose that square is on the outer edge of the chessboard .",
    "each square on the edge has @xmath30 queens attacking along the horizontal line and @xmath30 queens attacking along the vertical line .",
    "if we chose a corner square , it only has one diagonal containing @xmath30 attacking queens . as you move from a corner square along the edge , the larger diagonal decreases by one and the lesser diagonal increases by one which always keeps the sum of the diagonals of a square on the edge equal to @xmath30",
    "thus , the open square can not be one of the squares on the edge of the chessboard because the number of attacking queens is @xmath31 .",
    "we know the outer ring is filled with queens , so we remove this ring without changing the parity of the chessboard , as each square in the middle is attacked by exactly eight queens from the outer ring .",
    "we are left with @xmath20 chessboard . as @xmath32 is still",
    "even , we repeat , removing the outer rings , until we are left with the contradiction , a @xmath33 chessboard which can not be filled with four queens .",
    "although we can not have a complete solution in the case of an even length chessboard , we can identify a locked solution that comes close .",
    "[ even_complete ] if @xmath1 is an even positive integer , @xmath34 queens can be placed legally on a @xmath0 chessboard .",
    "one such construction could follow similarly to the odd case by applying induction and filling the topmost two rows and leftmost two columns , so we leave it as a challenge .",
    "this case is interesting , however , and we pose the following question .",
    "is the solution of @xmath34 queens on an @xmath0 chessboard for @xmath1 an even positive integer a maximal locked solution ?",
    "empirical data and a computer simulation for @xmath35 suggest that the answer is yes .",
    "however , even though the program could run the simulation for @xmath35 in eleven minutes , it would take approximately 22 years to run for @xmath36 , so verifying computationally is not an option .    in the next section ,",
    "we consider locked chessboards .",
    "another interesting game state is a locked chessboard . for strategy reasons ,",
    "a player would be interested to know of locked solutions in order to lead an opponent into such a solution or avoid them himself . for small @xmath37 or @xmath38",
    ", there is a simple first - player win strategy , that is , placing only one queen as seen in figures  [ locked_2 ] and [ locked_3 ] .",
    ".46 @endgroupori@endgroup @endgroup@endgroupori @whitefieldmaskcolor @blackfieldmaskcolor @whitefieldcolor @blackfieldcolor    .46 @endgroupori@endgroup @endgroup@endgroupori @whitefieldmaskcolor @blackfieldmaskcolor @whitefieldcolor @blackfieldcolor    of course , these small examples can not be generalized and locked boards with only one queen do not exist for @xmath39 .",
    "let s look at a more complex locked chessboard .",
    "again , as we did for complete boards , we separate the chessboards into two classes by their even or odd lengths .",
    "consider the chessboards where queens fill the top row and leftmost column for @xmath1 odd or almost fill the top row and leftmost column for @xmath1 even .",
    "these game positions are illustrated in figure  [ general_locked ] .",
    ".46 @endgroupori@endgroup @endgroup@endgroupori @whitefieldmaskcolor @blackfieldmaskcolor @whitefieldcolor @blackfieldcolor    .46 @endgroupori@endgroup @endgroup@endgroupori @whitefieldmaskcolor @blackfieldmaskcolor @whitefieldcolor @blackfieldcolor    [ odd_locked ] for @xmath1 an odd positive integer , the chessboard with queens exactly on squares in the set @xmath40 is a legal , locked game position .    _ strategy : _ we need to check that this board is locked as well as check that the queens can be placed in this configuration by a legal set of game moves .",
    "first we confirm that an odd number of queens attack every uncovered square .",
    "observe that every unoccupied square has exactly one queen which can attack vertically and exactly one queen that can attack horizontally . on the positive diagonal ,",
    "if the uncovered square is on or to the left of the main sum diagonal exactly two queens can attack along the positive diagonal .",
    "however , if the uncovered square is the right of the main diagonal , no queens can attack along the positive diagonal . further every empty square can be attacked by exactly one queen on the difference diagonal , so all uncovered square are attacked by either exactly five or exactly three queens and hence the board is locked .",
    "next , we need to show that this game board can arise from a sequence of legal placements of queens onto the board .",
    "first consider the case where @xmath41 .",
    "figure  [ locked_n=3 ] illustrates a sequence of five moves to lock a @xmath16 chessboard by playing queens on the first row and column .",
    ".11 @endgroupori@endgroup @endgroup@endgroupori @whitefieldmaskcolor @blackfieldmaskcolor @whitefieldcolor @blackfieldcolor    .11 @endgroupori@endgroup @endgroup@endgroupori @whitefieldmaskcolor @blackfieldmaskcolor @whitefieldcolor @blackfieldcolor    .11 @endgroupori@endgroup @endgroup@endgroupori @whitefieldmaskcolor @blackfieldmaskcolor @whitefieldcolor @blackfieldcolor    .11 @endgroupori@endgroup @endgroup@endgroupori @whitefieldmaskcolor @blackfieldmaskcolor @whitefieldcolor @blackfieldcolor    .11 @endgroupori@endgroup @endgroup@endgroupori @whitefieldmaskcolor @blackfieldmaskcolor @whitefieldcolor @blackfieldcolor    we want to extend the game play in figure  [ locked_n=3 ] to occur in a chessboard of any size",
    ". our strategy will be to repeat the first four moves of figure  [ locked_n=3 ] for the next two vacant squares in the first row and the corresponding two vacant squares in the first column .",
    "suppose we wish to fill the four squares from the set @xmath42 with queens . in each stage",
    "will fill two squares in column one and two squares in row one , so the total number of queens attacking either horizontally or vertically must be even and further there are no queens which can attack from either of the two diagonals .",
    "squares @xmath43 and @xmath44 are not on a line vertically , horizontally , or diagonally , so a queen can be placed on each of these squares .",
    "the remaining squares @xmath45 and @xmath46 can be attacked by both queens that were just played and also are not on a line with each other vertically , horizontally , or diagonally .",
    "we can fill these squares with queens . after repeating this process @xmath47 times",
    ", each square in the first row and first column , except the square in the upper left corner , contains a queen . as the square in the upper left",
    "can be attacked by all @xmath48 queens on the board , we can place the final queen in this position and hence lock the board .",
    "we can find a locked board in the case where @xmath1 is even as well .",
    "for @xmath1 an even positive integer and @xmath49 , the chessboard with queens on squares in the set @xmath50 is a legal , locked game position .",
    "we encourage you to check that this chessboard is locked and arises from a sequence of legal game moves .",
    "we can now make the following observation .",
    "when @xmath1 is an odd positive integer , at most @xmath51 queens are needed to lock the board , and when @xmath1 is an even positive integer , at most @xmath52 queens are needed to lock the board .",
    "this corollary gives an upper bound on the number of queens need to lock an even or odd chessboard , but is this bound strict ?",
    "we know for very small values of @xmath1 the chessboard can be locked with fewer queens , but what about larger values ? we pose the next question .",
    "what is the minimum number of queens needed to lock a @xmath0 chessboard ?",
    "next , we will look at different versions of the game with alternate rules and the connections between them .",
    "thus far , we have seen that there is a difference in outcomes for chessboards with even and odd length , that is , with parity zero or one modulo two respectively .",
    "the rules of the game as well could be modified along the same lines .",
    "let s look at the alternative version of the game where queens can be placed on squares that are attacked by an _",
    "odd _ number of queens .",
    "we will call such a game an * alternate universe mod 2 @xmath4-queens game*.    the first observation of course is that generally this can not happen as an empty board has no squares attacked by on odd number of queens , so we will modify the rules again to start with one queen already on the board before we commence play . from a strategy standpoint , in this alternate universe game a new queen can not be placed unless she is  covered \" by an odd number of queens .",
    "a second way to play the game would be to start with @xmath5 queens on the board and try to remove the queens one by one following the rule that a queen may be removed as long as she can be attacked by an even number of queens .",
    "we call such a game an * complementary mod 2 @xmath4-queens game*. the relationship between alternate universe , complementary games , and standard mod 2 @xmath1-queens games is dependent on the size of the chessboard .    when @xmath1 is an even positive integer , the alternate universe mod 2 @xmath1-queens games are in bijection with complementary mod 2 @xmath1-queens games .",
    "earlier we saw that if an even length chessboard is fully covered with queens , each square is attacked by an odd number of queens . the initial step for both games in the same .",
    "we place one queen in the alternate universe and remove one queen from the same square in the full complementary game .",
    "while playing the complementary game , queens can only be removed if the number of queens attacking is even and hence because of the parity of the board , it means the number of empty squares  attacking \" must be odd . by taking the complement of the board , removing queens to make empty squares , and placing queens on otherwise empty squares , we can go back and forth from the complementary game to the alternate universe game .",
    "it is interesting to note that the alternate universe game on the odd length chessboards does not have the same relationship .",
    "in fact , we have the following :    when @xmath1 is an odd positive integer , the complementary mod 2 @xmath1-queens games are in bijection with standard mod 2 @xmath1-queens games .    in this case , the beginning parity for every square on a complementary game board is even .",
    "we obtain the bijection by placing a queen in the same square of the standard game from which we removed it in the complementary game .",
    "thus for each case , even or odd length chessboard , there is really only two different games to be played , standard and alternate universe , as the complementary game can be completely reconstructed from one of the other two games .",
    "we conclude this section with an open - ended question .",
    "what other @xmath1-queens games can be played on a @xmath0 chessboard ?",
    "in particular , how could we adapt play for a * mod k @xmath4-queens game * ?    in the next section",
    "we will discuss the complexity of the game and give examples of a game tree and a graph created from this tree .",
    "chess and other games played with chess pieces are complex games .",
    "we will discuss several standard measures of complexity of a game for the mod 2 @xmath1-queens game . a * game tree * is the rooted tree whose root is the empty board and whose leaves are locked or complete boards such that the directed paths from the root to a leaf display all possible games .",
    "figure  [ game_tree ] shows the first three levels of the game tree in the case where @xmath41 .",
    "many of the game boards represented by these nodes are identical or symmetric by rotation or reflection .",
    "in fact , any given game board has up to eight symmetric boards . to simplify the structure of this tree , we propose to combine nodes describing boards which are equivalent by symmetry . in this case",
    ", we have fewer nodes , but the tree has become a graph .",
    "figure  [ fullgraph ] shows the full graph for @xmath54 .",
    "this graph is still quite large even for smallest non - trivial value for @xmath1 .",
    "observe that that the first node is the empty board , the last board is the full board , and each of the solid nodes correspond to a locked board .",
    "we are also interested in the complexity of the game . because , for some @xmath1 , all possible squares may be filled , we have a finite set of @xmath5 squares ; any subset of which could be filled with queens .",
    "this set of all subsets of @xmath5 elements is the power set which has size of @xmath55 .",
    "since defining rules for the board limits the number of game boards , @xmath55 is the upper bound for the * state - space complexity * or number of legal game positions .",
    "therefore we have a complexity @xmath56 and this game is in exptime ."
  ],
  "abstract_text": [
    "<S> we introduce a two player game on an @xmath0 chessboard where queens are placed by alternating turns on a chessboard square whose availability is determined by the number of queens already on the board which can attack that square modulo two . </S>",
    "<S> the game is explored along with some variations and its complexity . </S>"
  ]
}
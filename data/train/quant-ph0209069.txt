{
  "article_text": [
    "quantum processor stems from analogy between quantum computer and classical computer .",
    "similarly as in classical computer a fixed classical gate array , which takes the program and data as input , performs operations on the data depending on the program , quantum processor consists of a fixed quantum gate array , a quantum system as data register carrying data state and another quantum system as program register containing information about operation to be performed on the data state .",
    "when the data state and program state go through the fixed quantum gate array together , an unitary operation is executed on the data state depending on the program state .",
    "but it is shown by nielsen and chuang @xcite that in quantum computer no such fixed quantum gate array can be realized in deterministic fashion .",
    "suppose that the action of a fixed quantum gate array is operator @xmath0 , @xmath1 is a data state and @xmath2 is a program state , the total dynamics of the quantum processor can be described as @xcite :    @xmath3    where @xmath4 is a unitary operation corresponding to the state @xmath5 . from eq .",
    "( 1 ) it follows that distinct ( up to a global phase ) unitary operation @xmath4 requires different orthogonal state of program system .",
    "it means that the dimension of the program system has to be infinite because even for a single qubit the set of operations is infinite .",
    "therefore no universal quantum gate array can be constructed in deterministic fashion .",
    "fortunately there is possibility to build a universal quantum gate array in a probabilistic fashion .",
    "an example based on teleportation is given in ref.@xcite .",
    "another explanation in terms of control - u operation is given to realize a one - qubit arbitrary rotation around the @xmath6 axis of a spin @xmath7 particle , in which the probability of success increases exponentially with the number of qubits of the program register @xcite .",
    "on the other hand it is possible to construct a programmable quantum gate to implement an interesting subclass of unitary operations perfectly , accordingly it is possible to implement an arbitrary operation probabilisticly which can be decomposed into linear combinations of the subclass of unitary operations .",
    "the problem is recently examined by hillery et .",
    "generalized to the case of qudits of dimension @xmath8 @xcite .",
    "also a mathematical description of programmable quantum processor is developed and its classes are analyzed by the same group@xcite .",
    "we note that the processors in the previous works @xcite are from an input to an output . in quantum network one - input - to - multiple - output processor",
    "is more desirable .",
    "so it is worthwhile to extend the one - to - one processor to the case of multiple outputs .    in this paper",
    "we combine telecloning @xcite and programmable quantum gate array based on teleportation @xcite to discuss the possibility of multi - output quantum processor for restricted sets of operations commuting and anti - commuting with pauli operator @xmath9 . here",
    "we encode operation into a particular multiparticle - entangled state instead of maximally two - qubit entangled state .",
    "in addition , we slightly modify the procedure of the quantum gate array and redefine the location of the data register output .",
    "similarly , when joint bell - state measurement gives some appropriate values , several identical states come out in the data register outputs .",
    "the output data states are approximately - transformed versions of input data state . then these several approximate data outputs could be distributed to next different quantum processors for different tasks as described in @xcite .",
    "though , compared with one - to - one processors in refs.@xcite , our multi - output processor has several disadvantages , it has extensive applications in remote control and distributed computation . for simplicity , we focus on single qubit operation and two data outputs in the following discussion .",
    "we elaborate the details in sec.ii , and give our discussion in sec.iii and conclusion in sec.iv .",
    "in this section , we will discuss a two - output quantum processor which produces two data register outputs for sets of operations on single qubit commuting or anti - commuting with pauli operator @xmath10 . in the processor the operation is encoded into a four - qubit entangled state and the quantum gate array is similar with one proposed by nielsen and chuang @xcite . after the bell - state measurement , two approximate data register outputs appear at the terminal with probability of @xmath7 , and the fidelity of each data register output is @xmath11 .",
    "first we consider how the quantum gate array implement the operation commuting with operator @xmath10with two data outputs .",
    "the set of operations has the form of @xmath12 where an arbitrary angle @xmath13 @xmath14 .",
    "the gate array is illustrated in fig.1 .",
    "the four - qubit entangled state @xmath15 to be codified into program state is formulated as : @xmath16 where qubit @xmath17 is a port qubit subjected to bell - state measurement m with the qubit as data input register , qubits a , b and c serve as data output register together , qubit a is an ancillary which is discarded eventually . the sates @xmath18 and @xmath19 are given , respectively as : @xmath20 @xmath21 where the subscript is neglected for concision , the qubits are arranged in accordance with the order a , b , c from the left to the right .    in order to prepare a program state , the state @xmath15 is transformed through @xmath22 , that is , @xmath23 where only the port qubit p is altered by @xmath4 . for an arbitrary input data state @xmath24 , where @xmath25 and @xmath26 are",
    "complex numbers and satisfy @xmath27 , the total state @xmath28 feeding into the gate array can be rewritten as : @xmath29   \\nonumber \\\\ & = & \\frac{1}{2}[\\left| \\phi ^{+}\\right\\rangle ( ae^{i\\frac{\\alpha } { 2}}\\left| \\phi _",
    "{ 0}\\right\\rangle + be^{-i\\frac{\\alpha } { 2}}\\left| \\phi _ { 1}\\right\\rangle ) + \\left| \\phi ^{-}\\right\\rangle ( ae^{i\\frac{\\alpha } { 2}% } \\left| \\phi _ { 0}\\right\\rangle -be^{-i\\frac{\\alpha } { 2}}\\left| \\phi _ { 1}\\right\\rangle )   \\nonumber \\\\ & & + \\left| \\psi ^{+}\\right\\rangle ( be^{i\\frac{\\alpha } { 2}}\\left| \\phi _ { 0}\\right\\rangle + ae^{-i\\frac{\\alpha } { 2}}\\left| \\phi _ { 1}\\right\\rangle ) + \\left| \\psi ^{-}\\right\\rangle ( be^{i\\frac{\\alpha } { 2}}\\left| \\phi _ { 0}\\right\\rangle -ae^{-i\\frac{\\alpha } { 2}}\\left| \\phi _ { 1}\\right\\rangle ) ,   \\nonumber\\end{aligned}\\ ] ] where @xmath30 and @xmath31 are bell states .",
    "when the measurement result from m gives an eigenvalue corresponding to @xmath32 , the three data qubits are projected onto a state @xmath33 dropping the ancillary qubit a and calculating the reduced density matrices on the qubits b and c respectively , we get @xmath34 however the correctly transformed version of the input data state should be @xmath35 .",
    "we estimate the fidelity between the correct version and the resulting state as @xmath36 hence we obtain two data register outputs with fidelity of @xmath11 .",
    "when the measurement result from m gives an eigenvalue corresponding to @xmath37 , the three data qubits are projected onto a state @xmath38 which can be converted into the state @xmath39 by applying the operation @xmath10 on all three data qubits .",
    "again we can have the resulting state in the fidelity of @xmath11 with the correctly transformed version of data input state .",
    "for the two possible results of the measurement m corresponding to @xmath40 and @xmath41 , the quantum gate array produces ruined state from which the state @xmath39 can not be retrieved effectively and the process of quantum gate array on the input data state fails .",
    "consequently , from the results of measurement m we know whether the process is successful .",
    "the four results of the measurement m are uniformly distributed at random , containing no information about @xmath4 and @xmath42 .",
    "so our processor is no deterministic and succeeds with certain probability of @xmath7 .",
    "because in the process there is only one data input but there are two data outputs , it implies a cloning transformation .",
    "in fact , it involves a 1@xmath432 telecloning procedure .",
    "each output data state has a fidelity of @xmath11 with the correctly transformed version of input data state .",
    "thus our processor consisting of a fixed gate array illustrated in fig.1 and a particular program register and a data register can implement arbitrary rotation around @xmath6 axis with two data outputs with fidelity of @xmath11 and successful probability of @xmath7 .",
    "next , we adjust our processor to implement operations of anti - commuting with pauli operator @xmath10 with two data outputs .",
    "the set of operations has the form of @xmath44 where an arbitrary angle @xmath45 @xmath14 .",
    "the quantum gate array modified is illustrated in fig.2 .",
    "the initial state of the program register is reset as @xmath46 where the notion and the states @xmath47 and @xmath48 are defined as before . in order to create a program state corresponding to the operation @xmath49 , the state @xmath50 is subjected to a transformation @xmath51 : @xmath52 where only the port qubit is transformed by the operation @xmath49 .",
    "the quantum gate array firstly flips the data qubit by pauli operator @xmath53 , then makes joint bell - state measurement m on data qubit d and port qubit p , and outputs four results . in detail , here is how it works : @xmath54   \\nonumber \\\\ & = & \\frac{1}{2}[\\left| \\phi ^{+}\\right\\rangle ( be^{i\\frac{\\beta } { 2}}\\left| \\phi _",
    "{ 0}\\right\\rangle + ae^{-i\\frac{\\beta } { 2}}\\left| \\phi _ { 1}\\right\\rangle ) + \\left| \\phi ^{-}\\right\\rangle ( be^{i\\frac{\\beta } { 2}}\\left| \\phi _ { 0}\\right\\rangle -ae^{-i\\frac{\\beta } { 2}}\\left| \\phi _ { 1}\\right\\rangle )   \\nonumber \\\\ & & + \\left| \\psi ^{+}\\right\\rangle ( be^{-i\\frac{\\beta } { 2}}\\left| \\phi _",
    "{ 1}\\right\\rangle + ae^{i\\frac{\\beta } { 2}}\\left| \\phi _ { 0}\\right\\rangle ) + \\left| \\psi ^{-}\\right\\rangle ( be^{-i\\frac{\\beta } { 2}}\\left| \\phi _ { 1}\\right\\rangle -ae^{i\\frac{\\beta } { 2}}\\left| \\phi _ { 0}\\right\\rangle ) ] .",
    "\\nonumber\\end{aligned}\\ ] ] as has been discussed above , when the measurement result from m gives eigenvalues corresponding to @xmath32 or @xmath55 , the three data qubits are projected onto or can be effectively converted by pauli operator @xmath10 into a state @xmath56 similarly , dropping the ancillary qubit and tracing out qubit c or b , we have @xmath57 the correctly transformed version of input data state we desired is @xmath58 .",
    "according to the eq.(9 ) we get the fidelities of the states @xmath59 and @xmath60 as @xmath61 for other two results of measurement m , the quantum gate array yields ruined state from which the state @xmath62 we desired can not be retrieved .",
    "therefore for the operation anti - commuting with pauli operator @xmath10 the modified quantum processor yields two approximate transforms with successful probability of @xmath7 .",
    "the fidelity of each successful data output is @xmath11 . in the same way",
    ", the results of measurement give the information about whether the process is successful .",
    "we have designed a two - output programmable processor respectively for sets of operations on single qubit commuting and anti - commuting with pauli operator @xmath10 .",
    "the programmable processor implements the restricted operations on arbitrary data input state with successful probability of @xmath63 and provide two outputs with fidelity of @xmath11 .",
    "it is noticed that the states @xmath64 and @xmath65 just are mixed states since @xmath66 .",
    "that is , we apparently do not have complete knowledge about @xmath67 ( or @xmath62 ) .",
    "we have presented how to construct a two - output programmable processor .",
    "it is necessary to point out that the programmable quantum processor is approximate and probabilistic .",
    "the set of operations which it applies on the input data state is limited .",
    "it comes from three restrictions .",
    "one is that in itself no universal quantum gate array exists in deterministic fashion .",
    "the other is that it involves a telecloning procedure complying with no - cloning theorem @xcite .",
    "the third lies in , during the creation of program state , executing the operation on the port qubit which later is subjected to the joint measurement with the data qubit in the bell basis .",
    "simple algebra shows that @xmath68 , where @xmath69 denotes the transpose of @xmath4 with respect to the computational basis . unlike the quantum gate array proposed by nielsen and chuang @xcite",
    ", we has to concern transforming @xmath70 to @xmath71 .",
    "it is easily proved that for an unknown operation @xmath4 and an arbitrary state @xmath42 , the transformation can not be completed effectively .",
    "nielsen - chuang processor @xcite produces one data output for arbitrary operation on the input data with successful probability of @xmath72 and the perfect fidelity of 1 , and vidal s @xcite one - to - one processor can be programmed to implement restricted set of operations on input data with the successful probability of @xmath73 and the same perfect fidelity .",
    "compared with them our processor creates two data outputs for restricted set of operations on input in price of decreasing of the fidelity and probability of success .",
    "but our processor is more powerful in remote control and distributed computation .",
    "for example , if we expect to rotate two spin-@xmath7 particles in different states simultaneously , we can use our two - output programmable quantum processor as a program encoder and match one particle and one data output of the processor respectively , then feed them into another quantum gate arrays such as the nielsen - chuang @xcite and vidal s @xcite .    on the other hand , a sequential scheme , in which a nielsen - chuang processor on teleportation @xcite is followed by a 1@xmath432 telecloning procedure ,",
    "may achieve the same purpose as our two - output processor .",
    "however , the sequential scheme accomplishes arbitrary transformation on input data state with less probability of success and the same fidelities compared with the two - output processor .",
    "furthermore , the sequential scheme is more complex and more consumptive .",
    "it not only consumes more1 ebit of entanglement and 2 bits of classical information communication than the two - output processor , but also involves more physical qubits and quantum operations than the two - output processor . in a sense ,",
    "our two - output processor reduces the resource consumption and complexity scales of the information process .",
    "if a general approximate 1@xmath432 cloning procedure follows the nielsen - chuang processor instead of 1@xmath432 telecloning procedure in the sequential scheme , besides the above disadvantages , whether the two data output registers of the sequential scheme can be separate from each other is to be queried . since our two - output processor takes advantage of the nonlocal cloning of telecloning procedure and has two distant outputs , it is suitable for remote control and distributed computation of multiple spatial location . at this point",
    "our two - output processor is more useful than the sequential scheme",
    ".    the two - output programmable quantum processor can be straightforward generalized to the case of multi - output and multi - qubit operation .",
    "it is easy to understand that the fidelity decreases with the increase of the numbers of data output and the probability decreases exponentially with the number of qubits the operation involved . whether there is more effective scheme of multi - output quantum processor is still an open question",
    "in this paper , we have proposed a multi - output programmable quantum processor . as a result of three restrictions , our processor is approximate and probabilistic , and the set of operations which it can implement is restricted . as an example , we give a two - output programmable quantum processor for sets of operations commuting and anti - commuting with pauli operator @xmath10 , which is based on telecloning procedure . with probability of @xmath7 , it yields two approximately transformed data outputs in the fidelity of @xmath11 , which can be distributed to next processors for different task , respectively . and due to the property of entanglement ,",
    "the data registers in terminal can separately be located , even far from the processor if it allows locc ( local operation and classical communication ) .",
    "therefore the multi - output processor can be extended to distributed computation and remote control of multi - user . compared with a sequential scheme in which a nielsen - chuang processor is followed by an approximate cloning procedure ,",
    "our processor reduces the resource consumption and complexity scales of the information process and has two distant outputs . but the probability of success and the fidelity of data output of the multi - output processor decrease with the numbers of qubits involved in the computation and of data outputs required .",
    "it would be extremely intriguing to know if it is possible to build a more effective multi - output processor ."
  ],
  "abstract_text": [
    "<S> by combining telecloning and programmable quantum gate array presented by nielsen and chuang [ phys.rev.lett . 79 : 321(1997 ) ] , we propose a programmable quantum processor which can be programmed to implement restricted set of operations with several identical data outputs . </S>",
    "<S> the outputs are approximately - transformed versions of input data . </S>",
    "<S> the processor successes with certain probability .    </S>",
    "<S> pacs number(s ) : 03.67.lx </S>"
  ]
}
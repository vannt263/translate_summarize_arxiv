{
  "article_text": [
    "consider a network @xmath0 , where @xmath1 denotes the set of vertices in @xmath2 , and @xmath3 denotes the set of edges in @xmath2 .",
    "a vertex in @xmath2 is said to be a _ source _ if it is only incident with outgoing edges , and a _ sink _ if it is only incident with incoming edges .",
    "often , a source or sink is referred to as a _ terminal _ vertex .",
    "a non - terminal vertex is said to be a _ hub _ if its degree is greater than or equal to @xmath4 . in this paper , we are primarily concerned with the minimum number of hubs needed when certain constraints on the flow demand between multiple pairs of sources and sinks are imposed .",
    "the flow demand constraints considered in this paper will be in terms of the vertex - cuts between pairs of sources and sinks .",
    "this can be justified by a vertex version of the max - flow min - cut theorem  @xcite , which states that for a network with infinite edge - capacity and unit vertex - capacity , the maximum flow between one source and one sink is equal to the minimum vertex - cut between them . here , we remark that with appropriately modified setup , our results can be stated in terms of edge - cuts as well .",
    "more precisely , for given @xmath5 , let @xmath6 denote the set of all finite networks @xmath2 ( see figure  [ illustrator ] for an example ) such that    * there are @xmath7 sources @xmath8 and @xmath7 sinks @xmath9 in @xmath2 ; * all edges in @xmath2 , except those incident with a source or sink , are undirected ( alternatively , bi - directional ) ; * for each feasible @xmath10 , the minimum vertex - cut from @xmath11 to @xmath12 is @xmath13 .",
    "now , we define @xmath14 where @xmath15 denotes the number of hubs in @xmath16 . the above definition can be roughly interpreted as follows : for a given @xmath2 , we try to find a subgraph @xmath16 that contains the minimum number of hubs required to satisfy the vertex - cut constraints , and @xmath17 gives us the minimum number corresponding to the worst - case scenarios among all possible @xmath2 .     with @xmath18 hubs.,scaledwidth=30.0% ]    at first glance , @xmath19 can be infinite .",
    "one of the main ( and somewhat surprising ) results in this paper , theorem  [ finiteness ] , however , states that for any given @xmath20 , @xmath19 is in fact finite .",
    "with finiteness confirmed , we are primarily interested in computing the value of @xmath19 .",
    "we say a graph @xmath2 is @xmath21 in @xmath22 , if @xmath23 , but for any @xmath24 , @xmath25 .",
    "it then follows from the fact that every graph in @xmath6 has at least one minimal subgraph that @xmath26    the vertex - connectivity version of the classical menger s theorem  @xcite states that for a network with one pair of source @xmath27 and sink @xmath28 with the minimum vertex - cut between them being @xmath29 , there exist @xmath29 vertex - disjoint paths connecting @xmath27 and @xmath28 , which immediately implies that @xmath30 for any given @xmath29 .",
    "theorem  [ finiteness ] states that for any given @xmath23 , one can always find a subgraph @xmath16 of @xmath2 such that @xmath15 is upper bounded by a constant , which is independent of the choice of @xmath2 . in some sense ,",
    "theorem  [ finiteness ] can be viewed as a generalization of the vertex - connectivity version of menger s theorem .",
    "mathematically , the proposed problem of computing @xmath19 is a natural combinatorial optimization problem . on a more practical side ,",
    "hubs in networks naturally correspond to more costly vertices .",
    "for instance , in a transportation network , as opposed to `` relaying '' vertices with degree @xmath31 , hubs may have to be better equipped for traffic scheduling ; for this reason , when designing the route map , an airline may need to avoid running too many airline hubs to reduce the cost .",
    "so , as might be expected , @xmath19 is of significance to cost - minimizing resource allocation in transportation networks .    to the best of our knowledge ,",
    "the proposed problem of computing or estimating @xmath32 has not yet been examined previously and there is little related work in the vast literature of graph theory . on the other hand , to a great extent , this work is motivated by the study of network encoding complexity ( see  @xcite and references therein ) , where the number of encoding vertices in directed networks is of primary concern . moreover ,",
    "our approaches to tackle the problem are influenced by those in network encoding complexity theory , particularly , to a greater extent , those in  @xcite .",
    "the remainder of the paper is organized as follows . in section  [ minimalgraph ] ,",
    "we give necessary and sufficient conditions ( theorem  [ equivalent ] ) for a graph being minimal in @xmath33 . in section  [ sectionminimalrepresentation ] ,",
    "we introduce the notion of a representation of a graph in @xmath33 and we present the structural decomposition theorem ( theorem  [ decomposition ] ) for representations of minimal graphs in @xmath33 .",
    "we will introduce in section  [ xu - algorithm ] a novel path - searching algorithm , the analysis of which will aptly produce an upper bound on @xmath34 for any given @xmath35 . in section  [ sectionhmn ] , we derive the value of @xmath36 ( theorem  [ nmn2mn ] ) , which is a main result in this paper .",
    "another main result is theorem  [ finiteness ] , which establishes the finiteness of @xmath19 , @xmath37 , through a recursive bounding argument .",
    "the remaining part of section  [ more - than - two ] will be devoted to the derivations of the values of @xmath32 for some special parameters ( theorem  [ thm11mn ] , [ thmh222 ] ) .",
    "we first introduce some notation and terminologies that will be used throughout the paper .    a sequence of edges in @xmath2 , @xmath39 , @xmath40 , with @xmath41 , @xmath42 ,",
    "can be linked to form a _ path _",
    "@xmath43 , denoted by @xmath44 ; furthermore , @xmath43 is called a _ cycle _ if @xmath45 .",
    "a path @xmath43 of this form is said to be _ directed _ each @xmath46 is oriented such that all of them concatenate .    for a path @xmath47 and two vertices @xmath48 , @xmath49 of @xmath47 , let @xmath50 $ ] denote the subpath of @xmath47 between @xmath48 and @xmath49 . for a directed path @xmath51 , let @xmath52 , @xmath53 denote the head , tail of @xmath47 , respectively ; and we say @xmath46 is @xmath54 than @xmath55 on @xmath47 , denoted by @xmath56 , if @xmath57 is the head of the directed path @xmath58 $ ] ( or alternatively , @xmath55 is _ larger _ than @xmath46 , denoted by @xmath59 ) .    for a graph @xmath23 , by the vertex - connectivity version of menger s theorem , for each @xmath10 , one can find a set @xmath60 of @xmath13 vertex - disjoint @xmath61-paths from @xmath11 to @xmath12 .",
    "if the choice of @xmath60 is unique , @xmath60 is said to be @xmath62 , otherwise it is said to be _",
    "reroutable_. @xmath2 is said to be _ non - reroutable _ if all @xmath60 s are non - reroutable , _ reroutable _ otherwise . for any index set @xmath63 , let @xmath64 denote the subgraph of @xmath2 induced on the edges of @xmath65-paths .",
    "@xmath2 is said to be a _ @xmath66-graph _ if @xmath67 , that is , each edge in @xmath2 belongs to some @xmath60-path . in order to compute @xmath19 ,",
    "it is enough to only consider all @xmath66-graphs , since @xmath68 is a subgraph of @xmath2 and also in @xmath22 .",
    "sections  [ minimalgraph ] to [ sectionhmn ] will be devoted to derive the value of @xmath34 . for notational convenience only",
    ", we often rewrite @xmath69 , @xmath70 as @xmath61 , @xmath71 , respectively .    for a @xmath72-graph @xmath2 , an edge in @xmath2",
    "is said to be _ public _ if it is shared by a @xmath61-path and a @xmath71-path , _ private _ otherwise .",
    "evidently , for each @xmath10 , from @xmath11 to @xmath12 , each @xmath61 or @xmath71-path in @xmath2 induces a natural orientation to all its edges .",
    "we note that a public edge in @xmath2 may have opposite @xmath61-direction and @xmath71-direction ( such `` inconsistency '' will be dealt with in section  [ sectionminimalrepresentation ] ) .",
    "we say @xmath2 can be _ naturally orientable _ if each public edge in @xmath2 has the same natural @xmath61 and @xmath71-direction . a cycle @xmath73 in @xmath2 , where @xmath74 , @xmath41 for @xmath75 and @xmath45 , is said to be a _ @xmath61-consistent cycle _ , if it satisfies the following property : for any @xmath76 , if @xmath46 belongs to a @xmath61-path , then its natural @xmath61-direction is from @xmath77 to @xmath78 . and",
    "we similarly define a @xmath71-consistent cycle .",
    "the following theorem gives necessary and sufficient conditions for a @xmath72-graph being minimal .",
    "[ equivalent ] the following three statements are equivalent for a @xmath72-graph @xmath2 :    * @xmath2 is minimal ; * @xmath2 is non - reroutable ; * @xmath2 has no @xmath61 or @xmath71-consistent cycle .",
    "* 1 . * * ( ii ) @xmath79 ( i ) * : any edge @xmath80 in @xmath2 must belong to some @xmath61 or @xmath71-path . after deleting @xmath80 from @xmath2 , we no longer find @xmath13 vertex - disjoint paths from @xmath11 to @xmath12 for some @xmath81 .",
    "so @xmath82 , and therefore @xmath2 is minimal .",
    "* 2 . * * ( ii ) @xmath79 ( iii ) * : suppose , by way of contradiction , that @xmath2 has a @xmath61-consistent cycle @xmath83 , which can be written in the following form @xmath84 where each @xmath85 is a subpath of some @xmath61-path , and each @xmath46 is a private @xmath71-edge . furthermore , we assume @xmath83 has the smallest @xmath86 ( the number of private @xmath71-edges ) among all @xmath61-consistent cycles",
    ". then , each @xmath85 belongs to a different @xmath61-path ( since otherwise we can always find a @xmath61-consistent cycle with fewer private @xmath71-edges ) , which further implies that @xmath87 .",
    "suppose @xmath88 $ ] for @xmath76 , @xmath89 for @xmath90 and @xmath91",
    ". then one can find another group of @xmath92 vertex - disjoint paths @xmath93 from @xmath94 to @xmath95 in @xmath2 , where @xmath96 \\circ ( u_1,v_d ) \\circ \\phi_d[u_d , r_1]&\\textrm { for } i=1;\\\\ \\phi_i[s_1,u_i ] \\circ ( u_i , v_{i-1 } ) \\circ \\phi_{i-1}[v_{i-1},r_1]&\\textrm { for } 2\\le i\\le d;\\\\ \\phi_i&\\textrm { for } d+1\\le i\\le c_1,\\\\ \\end{cases}\\ ] ] which contradicts the assumption that @xmath2 is non - reroutable . with a parallel argument",
    ", we conclude that @xmath71-consistent cycles do not exist either .",
    "* 3 . * * ( i ) or ( iii ) @xmath79 ( ii ) * : suppose , by contradiction , that @xmath2 is reroutable , and furthermore , by symmetry , that there exists another group of @xmath92 vertex - disjoint paths @xmath93 from @xmath94 to @xmath95 in @xmath2 with @xmath97 sharing the same outgoing edge from @xmath94 as @xmath98 for every @xmath10 . pick a @xmath99-path , say , @xmath100 , such that @xmath101 , and let @xmath102 denote the smallest vertex on @xmath103 ( under the natural @xmath61-direction ) where they leave each other . assume that , after @xmath102 , @xmath100 first meets some @xmath61-path , say , @xmath104 at the vertex @xmath105 .",
    "denote by @xmath106 the smallest vertex where @xmath107 and @xmath104 leave each other .",
    "assume that , after @xmath106 , @xmath107 first meets some @xmath61-path , say , @xmath108 at the vertex @xmath109 .",
    "continue the procedure in a similar manner to obtain an index sequence @xmath110 , and similarly define @xmath111 s and @xmath112 s .",
    "pick the smallest @xmath113 such that @xmath114 for some @xmath115 .",
    "notice that @xmath116 is smaller than @xmath112 on @xmath117 , which easily follows from three facts :    * @xmath118 first takes apart from @xmath117 at @xmath116 ; * @xmath119 meets @xmath117 at @xmath112 ; * @xmath119 and @xmath118 are vertex - disjoint .",
    "hence , we conclude that @xmath120 \\circ \\phi_{i_{j+1}}[u_{i_j},v_{i_{j+1 } } ] \\circ \\hat{\\phi}_{i_{j+1}}[v_{i_{j+1}},u_{i_{j+1 } } ] \\circ \\phi_{i_{j+2}}[u_{i_{j+1}},v_{i_{j+2 } } ] \\circ \\\\ \\cdots & \\circ \\hat{\\phi}_{i_{k-2}}[v_{i_{k-2}},u_{i_{k-2 } } ] \\circ \\phi_{i_{k-1}}[u_{i_{k-2}},v_{i_{k-1 } } ] \\circ \\hat{\\phi}_{i_{k-1}}[v_{i_{k-1}},u_{i_{k-1 } } ] \\circ \\phi_{i_{j}}[u_{i_{k-1}},v_{i_{j}}]\\end{aligned}\\ ] ] is a @xmath61-consistent cycle in @xmath2 .",
    "since all @xmath71-paths are vertex - disjoint and the above cycle does not contain any terminal vertex , at least one edge @xmath80 in this cycle does not belong to any @xmath71-path ( that is , @xmath80 is a private @xmath61-edge ) . notice that each edge of @xmath121 $ ] , @xmath122 , is a private @xmath71-edge , and each edge of @xmath123 $ ] , @xmath122 , does not belong to any @xmath99-path .",
    "so , @xmath80 must belong to @xmath123 $ ] for some @xmath124 with @xmath122 , and hence @xmath80 does not belong to any @xmath99-path . in the graph @xmath125",
    ", we can find a set @xmath99 of @xmath92 vertex - disjoint paths from @xmath94 to @xmath95 , and a set @xmath71 of @xmath126 vertex - disjoint paths from @xmath127 to @xmath128 .",
    "thus @xmath129 and @xmath2 is not minimal , a contradiction .",
    "[ ifreroutable ] the third part of the proof of the theorem has actually proved that for a @xmath130-graph @xmath2 , if @xmath61 ( resp .",
    "@xmath71 ) is reroutable , then there exists a private @xmath61 ( resp .",
    "@xmath71)-edge @xmath80 such that @xmath131 .",
    "this fact will be used later in the paper .",
    "in this section , we will transform a minimal @xmath130-graph @xmath2 into @xmath132 , its representation , through the following steps :    * step 1 [ remove relays ] * : in this step , we remove all non - terminal vertices in @xmath2 with degree @xmath31 . in more detail , for any non - terminal vertex @xmath49 with @xmath133 and @xmath134 , @xmath135 being the two edges incident with @xmath49 , where @xmath136 , delete edges @xmath137 , @xmath138 and vertex @xmath49 , and then add a new edge @xmath139 .",
    "let @xmath140 denote the resulting graph .",
    "* step 2 [ stretch crossings ] * : we say a @xmath61-path and a @xmath71-path _ cross _ at vertex @xmath49 if they share @xmath49 , but not any edges incident with @xmath49 . in this step ,",
    "we convert each crossing into a pair of degree @xmath4 vertices . in more detail , for any vertex @xmath49 in @xmath140 with @xmath141 and @xmath134 , @xmath135 being the two @xmath61-edges incident with @xmath49 , @xmath142 , @xmath143 being the two @xmath71-edges incident with @xmath49 , where all @xmath77 are all distinct , delete edges",
    "@xmath137 , @xmath138 , @xmath144 , @xmath145 and vertex @xmath49 , and then add two vertices @xmath146 , @xmath147 and edges @xmath148 , @xmath149 , @xmath150 , @xmath151 and @xmath152 .",
    "let @xmath153 denote the resulting graph .",
    "* step 3 [ match directions ] * : for any public edge @xmath80 in @xmath153 with inconsistent @xmath61 and @xmath71-direction , we will perform the following operations to obtain consistency : assume edge @xmath154 belongs to both path @xmath155 \\circ(w_1,u)\\circ ( u , v)\\circ(v , w_2)\\circ \\phi_i[w_2,r_1]$ ] and path @xmath156\\circ(w_3,v)\\circ(v , u)\\circ(u , w_4)\\circ\\psi_j[w_4,r_2]$ ] .",
    "we delete edges @xmath157 , add edges @xmath158 , and then obtain a new @xmath71-path @xmath159\\circ ( w_3,u)\\circ ( u , v)\\circ ( v , w_4)\\circ \\psi_j[w_4,r_2].\\ ] ] let @xmath132 denote the resulting graph , which , evidently , is naturally orientable ; let @xmath160 denote the directed version of @xmath161 , equipped with the consistent natural orientation induced on all its @xmath61 and @xmath71-paths .",
    "apparently , @xmath162 with its @xmath61 and @xmath71-paths determined by the original ones , and all the non - terminal vertices in @xmath161 are hubs .",
    "the obtained @xmath132 after the above three steps is said to be a _ representation _ of @xmath2 . the following lemma states that @xmath161 must be a minimal @xmath72-graph as well .",
    "[ minimalrepresentation ] the representation @xmath161 of a minimal @xmath72-graph @xmath2 is also minimal .",
    "first , since @xmath2 is minimal , by theorem  [ equivalent ] , @xmath2 is non - reroutable .",
    "evidently , @xmath140 is also non - reroutable , and thus minimal . by way of contradiction",
    ", suppose that @xmath132 is not minimal .",
    "again , by theorem  [ equivalent ] , @xmath132 is reroutable .",
    "notice that in step 2 and 3 , both crossings or inconsistently oriented public edges are converted into consistently oriented public edges .",
    "then , by remark  [ ifreroutable ] , one can find a private edge @xmath80 such that @xmath163 , implying @xmath164 also belongs to @xmath38 , which contradicts the minimality of @xmath140 .",
    "let @xmath165 denote the subset of @xmath38 consisting of all networks @xmath2 such that @xmath2 is minimal , naturally orientable and all the non - terminal vertices in @xmath2 are of degree 3 .",
    "apparently , @xmath166 is the set of the representations of all minimal @xmath130-graphs .",
    "the following theorem says that in order to compute @xmath34 , it is enough to only consider all graphs in @xmath165 .",
    "@xmath167    the `` @xmath168 '' direction follows from the observation that @xmath169 and the `` @xmath170 '' direction immediately follows from lemma  [ minimalrepresentation ] .",
    "a path in @xmath171 is said to be an _ alternating _ path if all its edges are privates edges and the terminal pair of this path is one of the following : @xmath172 , @xmath173 , @xmath174 or @xmath175 .",
    "an alternating path has the following properties :    1 .",
    "each of its @xmath61-edges is only adjacent to @xmath71-edges , and each of its @xmath71-edges is only adjacent to @xmath61-edges .",
    "2 .   each of its @xmath61 ( resp .",
    "@xmath71)-edge belongs to a different @xmath61 ( resp .",
    "@xmath71)-path .",
    "this follows from the fact that after step @xmath176 , vertices with degree @xmath31 have been removed and thus no two private @xmath61 ( or @xmath71)-edges are adjacent .",
    "we show that in any alternating path , each @xmath61-edge belongs to a different @xmath61-path .",
    "suppose , by contradiction , that for an alternating path path @xmath177 , where @xmath74 , two edges @xmath178 , @xmath179 , both belong to @xmath180 . if @xmath181 is smaller than @xmath182 on path @xmath180 in @xmath183 , then @xmath184\\circ e_{k+1 } \\circ e_{k+2 } \\circ \\cdots",
    "\\circ   e_{l-1}\\ ] ] is a @xmath61-consistent cycle in @xmath132 , which , by theorem  [ equivalent ] , gives us a contradiction .",
    "if @xmath182 is smaller than @xmath181 on path @xmath180 in @xmath183 , then the subpath @xmath185 $ ] in fact can be expressed as @xmath186 , where @xmath187 are public and @xmath188 are private .",
    "then @xmath189 is a @xmath71-consistent cycle in @xmath132 , which , by theorem  [ equivalent ] , gives us a contradiction . with a parallel argument",
    ", we conclude that each private @xmath71-edge belongs to a different @xmath71-path .",
    "we next present the structural decomposition theorem of a representation @xmath190 , which , roughly speaking , states that after deleting public edges in @xmath161 , each connected component in the resulting graph is an alternating path .",
    "more precisely , letting @xmath191 denote the subgraph of @xmath132 induced on all private edges in @xmath161 , we have    [ decomposition ] @xmath191 consists of @xmath192 alternating paths .",
    "consider @xmath193 , the naturally oriented version of @xmath191 .",
    "obviously , the degree of any non - terminal vertex in @xmath193 is @xmath31 .",
    "now , starting from @xmath94 , traverse along an outgoing @xmath61-edge , say , @xmath137 , and then traverse against the @xmath71-edge adjacent to @xmath137 , say , @xmath138 , and then along a @xmath61-edge adjacent to @xmath138 , say , @xmath144 , and then against a @xmath71-edge adjacent to @xmath144  .",
    "continue the procedure in this fashion , we will always reach @xmath95 or @xmath127 , since otherwise the set of edges that we have traversed will contain a cycle , which is both @xmath61-consistent and @xmath71-consistent .",
    "evidently , a similar argument can be applied to the case when we start from an incoming edge incident with @xmath128 .",
    "it then follows that one can find a set of @xmath192 vertex - disjoint paths in @xmath191 from @xmath194 to @xmath195 ; moreover , it can easily checked that each edge in @xmath191 belong to one of the above - mentioned vertex - disjoint paths .",
    "[ head - tail ] let @xmath49 be a non - terminal vertex of an alternating path in @xmath191 and let @xmath196 be the two edges incident with @xmath49 .",
    "it then follows from the proof of theorem  [ decomposition ] that if @xmath49 is the head ( resp .",
    "tail ) of @xmath80 in @xmath193 , then it is also the head ( resp .",
    "tail ) of @xmath197 .",
    "an alternating path in @xmath191 is said to be an @xmath198 , @xmath199 , @xmath200 , @xmath201-alternating path if its terminal pair is @xmath172 , @xmath173 , @xmath174 or @xmath175 , respectively .",
    "a path is said to be an @xmath94-alternating path is it is either an @xmath198-alternating path or @xmath199-alternating path , similarly , a path is also referred to as an @xmath128-alternating path is it is either an @xmath200-alternating path or @xmath201-alternating path .",
    "apparently , there are @xmath92 @xmath94-alternating paths and @xmath126 @xmath128-alternating paths . for two vertices @xmath202 of an @xmath94 ( resp .",
    "@xmath128)-alternating path @xmath203 , we say @xmath48 is on the right of @xmath49 in @xmath203 if @xmath49 is `` nearer '' to @xmath94 ( resp .",
    "@xmath128 ) than @xmath48 in @xmath203 ( more precisely , the number of edges between @xmath48 and @xmath94 ( resp .",
    "@xmath128 ) in @xmath203 is more than that between @xmath49 and @xmath94 ( resp .",
    "@xmath128 ) ) ( the word `` right '' arises since we will `` position '' the vertices of a path in a plane in section  [ xu - algorithm ] for an easy illustration ) . for two edges @xmath204 in @xmath203",
    ", we say @xmath80 is on the right of @xmath197 if one of two vertices incident with @xmath80 is on the right of the two ones incident with @xmath197 in @xmath203 .",
    "figure  [ illustrator ] shows a naturally oriented minimal @xmath205-graph with @xmath206 hubs . from @xmath94 to @xmath95 , there are two vertex - disjoint @xmath61-paths @xmath207 and @xmath208 ; and from @xmath127 to @xmath128 , there are two vertex - disjoint @xmath71-paths @xmath209 and @xmath210 .",
    "the edges @xmath144 , @xmath211 , @xmath212 , @xmath213 are public since each of them is shared by some @xmath61-path and some @xmath71-path .",
    "the others are all private",
    ". then we can find that @xmath191 consists of four alternating paths : two @xmath94-alternating paths @xmath214 and two @xmath128-alternating paths @xmath215 moreover , @xmath216 is an @xmath217-alternating path , where edge @xmath218 is on the right of edge @xmath219 , vertex @xmath220 is on the right of vertex @xmath29 .",
    "in this section , we introduce an algorithm , the analysis of which will be instrumental for deriving the value of @xmath34 . before rigorously describing the algorithm , we roughly illustrate its idea .",
    "consider a representation @xmath161 of a minimal @xmath130-graph @xmath2 .",
    "imagine on a two - dimensional plane , each alternating path @xmath73 in @xmath191 is `` positioned '' into a `` double deck '' ( see figure  [ alternatingpath ] for an example ) , where @xmath221 is on the right of @xmath46 , and all the tails ( in @xmath222 ) are on the upper deck and heads on the lower deck ( see remark  [ head - tail ] ) .",
    "a vertex on the upper deck is referred to as an _ upper vertex _ if it is not a source , and a vertex on the lower deck is referred to as a @xmath223 if it is not a sink .",
    "notice that there is one more lower vertices than upper vertices in an @xmath217-alternating path , while one less in an @xmath224-alternating path , and there are equally many of them in an @xmath225-alternating path or an @xmath226-alternating path .",
    "-alternating path , @xmath227 , @xmath228 , @xmath229 are upper vertices and @xmath230 , @xmath231 are lower vertices.,scaledwidth=50.0% ]    in each @xmath217-alternating ( resp . @xmath224-alternating ) path , one of the lower ( resp .",
    "upper ) vertices will be labeled as a @xmath232 ( which could be a `` bottleneck '' for the path extending procedure in the algorithm ) , which is initially the rightmost lower ( resp .",
    "rightmost upper ) vertex of the path and will be updated during the execution of the algorithm .",
    "as summarized below , the algorithm will iteratively find a set of the so - called _ interconnecting _ paths in @xmath161 , which will `` link '' the double decks .",
    "* in the beginning of each iteration , we initialize the interconnecting path as a public edge , whose tail is an unoccupied lower vertex .",
    "see step 2 . *",
    "we first traverse along edges in @xmath160 to extend the interconnecting paths to link the double decks .",
    "when we reach a choke vertex , we check if it is possible to switch paths ( see figure  [ switching ] ) and find new ways to extend the interconnecting paths .",
    "see step 3(a ) , 3(b ) .",
    "* then we traverse against edges in @xmath160 to extend the interconnecting paths in a parallel manner .",
    "see step 5(a ) , 5(b ) .",
    "* at the end of @xmath113-th iteration , a set of @xmath113 interconnecting paths is found , whose vertices are all labeled as occupied .",
    "see step 6 .",
    "as proven later , the algorithm will produce all interconnecting paths and upon termination of the algorithm , all hubs in @xmath161 are occupied .",
    "let @xmath233 be the number of @xmath217-alternating paths , then @xmath234 , and moreover , the numbers of @xmath224-alternating paths , @xmath225-alternating paths and @xmath226-alternating paths are @xmath235 , respectively .",
    "the following algorithm will find @xmath233 interconnecting paths in @xmath161 .",
    "[ algorithm ] input : @xmath161 ; output : a set @xmath236 of @xmath233 interconnecting paths .",
    "step 1 : initialize the algorithm .",
    ": :    orient each edge in the direction of @xmath61 and    @xmath71-paths ;    +    label all hubs as `` unoccupied '' ;    +    * for * each @xmath217-alternating path * do *    +    its choke vertex @xmath237 its rightmost lower vertex ;    +    * for * each @xmath224-alternating path * do *    +    its choke vertex @xmath237 its rightmost upper vertex ;    +    @xmath238 ;    +    @xmath239 .",
    "step 2 : initialize the forward extension .",
    ": :    @xmath240 an arbitrarily picked unoccupied lower vertex and    label @xmath49 as `` occupied '' ;    +    @xmath241 the public edge whose tail is @xmath49 ;    +    @xmath242 and label @xmath48 as `` occupied '' ;    +    @xmath243 .",
    "step 3(a ) : prepend a private edge .",
    ": :    @xmath244 the alternating path to which @xmath48    belongs ;    +    * if * @xmath203 is an @xmath224-alternating path * and *    @xmath48 is the choke vertex of @xmath203 * then * * begin *    +    * if * there are no unoccupied upper vertices in @xmath203 * then *    +    go to * step 4 * ;    +    * else * * begin *    +    @xmath245 the rightmost unoccupied upper vertex of    @xmath203 ;    +    @xmath246    the subpath of @xmath203 between @xmath247 and    @xmath48 ;    +    * if * @xmath248 * then * * begin *    +    the choke vertex of @xmath249 ;    +    label @xmath250 as `` occupied '' ;    +    @xmath251 ;    +    @xmath252 ;    +    * end *    +    * else * ( _ viz . _",
    "@xmath253 ) * begin *    +    * for * @xmath254 * to * @xmath86 * do *    +    @xmath255 the interconnecting path in    @xmath236 containing @xmath256 ;    +    @xmath257 ;    +    the choke vertex of @xmath249 ;    +    label @xmath250 as `` occupied '' ;    +    @xmath258 ;    +    @xmath259 ;    +    @xmath260 \\circ e$ ] ;    +    * for * @xmath254 * to * @xmath261 * do *    +    @xmath262 \\circ ( x_{i+1},y_i ) \\circ p_{i}[y_i , h(p_{i})]$ ] ;    +    @xmath263 \\circ ( u , y_d ) \\circ p_{d}[y_d , h(p_{d})]$ ] ;    +    @xmath264 ;    +    * end *    +    * end *    +    * end *    +    * else * * begin *    +    * if * @xmath265 an @xmath94-alternating path * then *    +    @xmath266 the private @xmath71-edge whose tail is    @xmath48 ;    +    * else * ( _ viz . _",
    "@xmath267 an @xmath128-alternating    path )    +    @xmath266 the private @xmath61-edge whose tail is    @xmath48 ;    +    label @xmath268 as `` occupied '' ;    +    @xmath269 .    +    * end * step 3(b ) : prepend a public edge .",
    ": :    @xmath241 public edge whose tail is @xmath268 ;    +    @xmath242 and label @xmath48 as `` occupied '' ;    +    @xmath270 ;    +    go to * step 3(a)*. step 4 : initialize the backward extension .",
    ": :    @xmath271 ;    +    @xmath272 the interconnecting path in    @xmath236 whose tail is @xmath49 ;    +    @xmath273 ;    +    @xmath274 .",
    "step 5(a ) : append a private edge .",
    ": :    @xmath275 the alternating path to which @xmath276    belongs ;    +    * if * @xmath203 is an @xmath217-alternating path * and *    @xmath276 is the choke vertex of @xmath203 * then * * begin *    +    * if * there is no unoccupied lower vertex in @xmath203 * then *    +    go to * step 6 * ;    +    * else * * begin *    +    @xmath277 the rightmost unoccupied lower vertex of    @xmath203 ;    +    @xmath278    the subpath of @xmath203 between @xmath250 and    @xmath276 ;    +    * if * @xmath248 * then * * begin *    +    the choke vertex of @xmath279 ;    +    label @xmath247 as `` occupied '' ;    +    @xmath280 ;    +    @xmath281 ;    +    * end *    +    * else * ( _ viz . _",
    "@xmath253 ) * begin *    +    * for * @xmath254 * to * @xmath86 * do *    +    @xmath282 the interconnecting path in    @xmath236 containing @xmath256 ;    +    @xmath257 ;    +    the choke vertex of @xmath279 ;    +    label @xmath247 as `` occupied '' ;    +    @xmath283 ;    +    @xmath259 ;    +    @xmath284 $ ] ;    +    * for * @xmath254 * to * @xmath261 * do *    +    @xmath285 \\circ ( x_i , y_{i+1 } ) \\circ p_{{i+1}}[y_{i+1 } , h(p_{{i+1}})]$ ] ;    +    @xmath286 \\circ ( x_d , w ) \\circ \\widehat{p}[w , h(\\widehat{p})]$ ] ;    +    @xmath264 ;    +    * end *    +    * end *    +    * end *    +    * else * * begin *    +    * if * @xmath287 an @xmath128-alternating path * then *    +    @xmath266 the private @xmath61-edge whose head is    @xmath276 ;    +    * else * ( _ viz . _",
    "@xmath287 an @xmath94-alternating    path )    +    @xmath266 the private @xmath71-edge whose head is    @xmath276 ;    +    label @xmath288 as `` occupied '' ;    +    @xmath289 .    +    *",
    "end * step 5(b ) : append a public edge .",
    ": :    @xmath241 public edge whose head is @xmath288 ;    +    @xmath290 and label @xmath276 as `` occupied '' ;    +    @xmath291 ;    +    go to * step 5(a)*. step 6 : terminate the iteration .",
    ": :    * if * @xmath292 * then *    +    terminate the algorithm ;    +    @xmath271 ;    +    @xmath293 ;    +    go to * step 2*.        before switching paths 0.5 cm        after switching paths    * 1 .",
    "* for step 2 in each iteration , an unoccupied lower vertex always exists since there is at least one @xmath217-alternating path with its chock vertex left unoccupied .",
    "each iteration of algorithm  [ algorithm ] consists of forward and backward extensions , and each interconnecting path starts from an @xmath217-alternating path and ends at an @xmath201-alternating path .",
    "the algorithm can not be simplified into a `` one - direction extension '' version : for each iteration , the extending procedure will terminate at an @xmath217-alternating path with only one unoccupied lower vertex , but , in the beginning of each iteration , such an alternating path may not exist ( to see this , notice that more than two unoccupied vertices of an alternating path can become `` occupied '' , if we switch paths during one iteration ) .",
    "we will need the following two lemmas in the next section .",
    "[ distinctaasequence ] for a representation @xmath161 of a minimal @xmath130-graph , upon the termination of algorithm  [ algorithm ] , each private edge of any interconnecting path belongs to a different alternating path .    by contradiction , suppose that for an interconnecting path @xmath294 , two private edges @xmath295 and @xmath296 , @xmath297 , belong to the same alternating path @xmath203 .",
    "let @xmath83 be the cycle @xmath298\\circ l[t(e_{2l}),h(e_{2k})].\\ ] ] if @xmath296 is on the right of @xmath295 in @xmath203 , then @xmath83 is a @xmath71-consistent cycle in @xmath161 .",
    "if @xmath295 is on the right of @xmath296 in @xmath203 , then @xmath83 is a @xmath61-consistent cycle in @xmath161 . by theorem  [ equivalent ] ,",
    "both cases imply that @xmath161 is not minimal , which , by lemma  [ minimalrepresentation ] , further implies that @xmath2 is not minimal , a contradiction .",
    "[ atmostmconnectingpaths ] for a representation @xmath161 of a minimal @xmath130-graph @xmath2 , upon the termination of algorithm  [ algorithm ] , @xmath236 consists of at most @xmath299 interconnecting paths , and each hub in @xmath161 is in exactly one of the interconnecting paths in @xmath236 .",
    "each interconnecting path in @xmath236 starts from a lower vertex of a distinct @xmath217-alternating path and ends to an upper vertex of a distinct @xmath224-alternating path .",
    "so the number of interconnecting paths is @xmath233 with @xmath234 .",
    "now upon the termination of algorithm  [ algorithm ] , pick an unoccupied lower vertex , and then execute the algorithm from step 3(b ) ; or pick an unoccupied upper vertex , and then execute the algorithm from step 3(a ) .",
    "since all chock vertices have been unoccupied , the algorithm will fail to terminate , violating the fact that @xmath132 is finite .",
    "[ nmn2mn ] @xmath300    * the `` @xmath301 '' direction : * for a representation @xmath161 of a minimal @xmath130-graph @xmath2 , apply algorithm  [ algorithm ] to obtain a set @xmath236 of @xmath233 interconnecting paths . in the @xmath124-th iteration of the algorithm ,",
    "the forward extension stops at the choke vertex of some @xmath224-alternating path .",
    "let @xmath302 denote this alternating path .",
    "note that after @xmath124 iterations , 1 ) all hubs of @xmath302 become occupied ; 2 ) by lemma  [ distinctaasequence ] , each of the @xmath124 obtained interconnecting paths contains at most two hubs of @xmath302 ; 3 ) one obtained interconnecting path contains exactly one hub of @xmath302 .",
    "hence , we deduce that the number of hubs of @xmath302 is at most @xmath303 , and therefore the total number of hubs of all @xmath224-alternating paths is at most @xmath304 . similarly , the total number of hubs of all @xmath217-alternating paths is at most @xmath305 as well .",
    "again , by lemma  [ distinctaasequence ] , the total number of hubs of all @xmath225 and @xmath226-alternating paths is at most @xmath306 . by lemma  [ atmostmconnectingpaths ] , each hub in @xmath161 belongs to some interconnecting path in @xmath236 .",
    "therefore , @xmath307 where the last inequality follows from @xmath234 .    *",
    "the `` @xmath170 '' direction : * we only need to construct a minimal @xmath130-graph @xmath2 with @xmath308 hubs ( see figure  [ picn33 ] for an example ) .",
    "the graph @xmath2 can be described as follows : @xmath309 is naturally oriented , and there is a set of @xmath92 vertex - disjoint paths @xmath310 from @xmath94 to @xmath95 and a set of @xmath126 vertex - disjoint paths @xmath311 from @xmath127 to @xmath128 .",
    "furthermore , in @xmath312 , the directed version of @xmath2 , paths @xmath98 and @xmath313 meet at vertex @xmath314 and depart at vertex @xmath315 , for @xmath316 , @xmath317 , and    * on path @xmath98 , @xmath318 * on path @xmath313 , @xmath319    -graph with @xmath320 hubs.,scaledwidth=40.0% ]",
    "in this section , we are concerned with @xmath32 with more than two parameters , which turns out to be much more difficult to compute than @xmath32 with two parameters .",
    "we will use an inductive argument on @xmath7 . notice that the case when @xmath323 has been established in theorem  [ nmn2mn ] . by way of induction , we assume that the theorem is true for @xmath324 and proceed to prove it for @xmath325 .    consider any minimal @xmath326-graph @xmath2 .",
    "let @xmath60 denote the set of @xmath13 vertex - disjoint paths from @xmath11 to @xmath12 for @xmath327 .",
    "after necessary rerouting of @xmath328 within @xmath329 , we can assume that @xmath329 is minimal and thus @xmath330    let @xmath16 denote the subgraph of @xmath329 induced on all the edges , each of which is simultaneously an @xmath328-edge , and let @xmath331 denote the number of connected components in @xmath16 .",
    "obviously , each connected component of @xmath16 is in fact a path , and therefore we have @xmath332 .    in this proof ,",
    "we say a hub in @xmath2 is _ new _ if it is a hub in @xmath2 , however , not one in @xmath329 .",
    "and we say a new hub is _ global _ , if this hub belongs to @xmath16 , _ local _ , if this hub is in @xmath333 .      for each @xmath338-path ,",
    "we `` cut '' it at each of its local new hubs and then `` divide '' the path into `` segments '' , each of which , evidently , is a subpath of the original @xmath339-path",
    ". let @xmath340 denote the set of all obtained subpaths .",
    "then we have @xmath341 .      1 .",
    "add sources @xmath345 , sinks @xmath346 .",
    "2 .   for any @xmath347 and for any connected component of @xmath16 ,",
    "whose natural @xmath60-direction is from one end vertex , say @xmath146 , to the other end vertex , say @xmath147 , add two directed edges @xmath348 and @xmath349 ( notice that a connected component may have opposite @xmath350-direction and @xmath351-direction for different @xmath352 , @xmath353 ) .",
    "then , for any @xmath354 , we obtain a group @xmath355 of @xmath331 vertex - disjoint paths from @xmath356 to @xmath357 .",
    "3 .   for any @xmath340-path ,",
    "whose natural @xmath339-direction is from one end vertex , say @xmath146 , to the other end vertex , say @xmath147 , add two directed edges @xmath358 and @xmath359 .",
    "then , we obtain a group @xmath360 of @xmath361 vertex - disjoint paths from @xmath362 to @xmath363 .",
    "obviously , the number of global new hubs in @xmath2 is just @xmath364 .",
    "it follows from the minimality of @xmath2 and the observation that for any @xmath365 , any @xmath355-consistent cycle in @xmath344 naturally corresponds an @xmath60-consistent cycle in @xmath2 that @xmath344 is a minimal @xmath343-graph .",
    "we then proceed to deduce that @xmath360 is non - reroutable in @xmath344 , since otherwise there exists an edge @xmath80 which is exclusively owned by @xmath360-paths ( this follows from a parallel argument leading to remark  [ ifreroutable ] ) such that @xmath366 , violating the fact that @xmath344 is minimal .",
    "now , after necessary rerouting of @xmath355 within @xmath344 , we assume that @xmath367 , the subgraph of @xmath344 consisting of all @xmath355-paths and @xmath360-paths , is non - reroutable and thus , by theorem  [ equivalent ] , minimal .",
    "notice that any hub @xmath49 in @xmath344 must be a hub of some @xmath367 , since otherwise @xmath344 contains an edge incident with @xmath49 that does not belong to any @xmath367 and therefore is not minimal .",
    "hence , by theorem  [ nmn2mn ] , we obtain that @xmath368 therefore , @xmath369 the proof is then complete .        * the `` @xmath168 '' direction : * we will establish this direction using an inductive argument on @xmath7 .",
    "suppose the inequality holds when @xmath375 .",
    "consider a minimal @xmath376-graph @xmath2 with @xmath92 vertex - disjoint paths @xmath377 from @xmath94 to @xmath95 , @xmath126 vertex - disjoint paths @xmath378 from @xmath127 to @xmath128 , and a path @xmath379 from @xmath11 to @xmath12 for @xmath380 .",
    "let @xmath140 be the subgraph of @xmath2 induced on @xmath381 now we split @xmath94 into @xmath92 copies @xmath382 ; @xmath95 into @xmath92 copies @xmath383 ; @xmath127 into @xmath126 copies @xmath384 ; @xmath128 into @xmath126 copies @xmath385 , such that @xmath98 has starting point @xmath386 and ending point @xmath387 for @xmath316 ; @xmath388 has starting point @xmath389 and ending point @xmath390 for @xmath391 .",
    "let @xmath153 denote the resulting graph and @xmath331 be the number of weakly connected components ( which means connected components when disregarding the orientation ) in @xmath153 .",
    "now for any @xmath392 , we identify @xmath386 and @xmath393 if they belong to the same component and we perform similar operations on @xmath387 s , @xmath389 s and @xmath390 s .",
    "let @xmath16 denote the resulting graph , which consists of @xmath331 connected components .",
    "note that the @xmath10-th component @xmath394 is in fact a minimal @xmath395-graph , where @xmath396 , @xmath397 and @xmath398 .",
    "notice that for any @xmath10 , at least one of @xmath399 , @xmath400 and @xmath401 is nonzero , but some @xmath399 s , @xmath400 s , @xmath401 s can be zero , for which case , a @xmath395-graph can be interpreted as if all zero - valued parameters are simply dropped . for each component @xmath394 , by the induction hypothesis , we have        a hub in @xmath2 is said to be _ new _ if it is not a hub in @xmath16 .",
    "notice that the path @xmath406 `` meets '' each component at most once , yielding at most two new hubs ( more precisely , it meets one edge in @xmath394 , then departs from one edge in @xmath394 , and thereafter , it will never meet any edge in @xmath394 again ) , otherwise @xmath2 is not minimal .",
    "hence , @xmath407\\\\ \\le & \\",
    "2\\omega+2(c_1+c_2+t-1-\\omega)+2\\left[\\sum_{i=1}^\\omega(c_{1,i}-1)^+\\right]\\cdot\\left[\\sum_{i=1}^\\omega(c_{2,i}-1)^+\\right]\\\\ \\le & \\ 2(c_1+c_2+t-1)+2(c_1 - 1)(c_2 - 1)\\\\ =    & \\ 2(c_1c_2+t).\\end{aligned}\\ ] ]        it turns out the graph @xmath2 , described below in detail , is such a graph : @xmath2 is naturally orientable ; there is @xmath92 vertex - disjoint paths @xmath377 from @xmath94 to @xmath95 , @xmath126 vertex - disjoint paths @xmath378 from @xmath127 to @xmath128 , and a path @xmath379 from @xmath11 to @xmath12 for @xmath410 ; paths @xmath98 and @xmath313 meet at vertex @xmath314 and depart at vertex @xmath315 for @xmath316 and @xmath317 ; paths @xmath379 and @xmath411 meet at vertex @xmath412 and depart at vertex @xmath413 for @xmath410 .",
    "furthermore , in @xmath312 , we have              so we only need to prove the other direction . by contradiction , suppose that a minimal @xmath420-graph @xmath2 has at least @xmath422 hubs , and there exists a set of two vertex - disjoint path @xmath423 from @xmath94 to @xmath95 , a set of two vertex - disjoint paths @xmath424 from @xmath127 to @xmath128 , and a set of two vertex - disjoint paths @xmath425 from @xmath426 to @xmath427 .    here , we note that when there are three pairs of sources and sinks , the equivalence statements as in theorem  [ equivalent ] do not hold any more : it turns out that a minimal graph can be reroutable ( see figure  [ n222minimalreroutable ] ) .    *",
    "we first consider the case @xmath2 is minimal and non - reroutable .",
    "* let @xmath428 be the subgraph of @xmath2 induced on the edges of @xmath61-paths and @xmath71-paths ; similarly , we define @xmath429 and @xmath430 . by theorem  [ equivalent ]",
    ", these three subgraphs are all minimal , since they are all non - reroutable .",
    "suppose @xmath428 has the most hubs among them .",
    "every hub in @xmath2 belongs to at least one of these three subgraphs , so we have @xmath431 and hence @xmath432 .",
    "now , we transform @xmath428 into a corresponding graph @xmath433 by shrinking each public edge into a vertex ( this can be regarded as the `` inverse '' operation of step 2 in section  [ sectionminimalrepresentation ] ) . in more detail , for a public edge @xmath148 ,",
    "say @xmath434 are two private edges incident with @xmath146 , and @xmath435 , @xmath436 are two private edges incident with @xmath147 .",
    "then we delete edges @xmath137 , @xmath138 , @xmath144 , @xmath145 and vertices @xmath146 , @xmath147 , and then add a new vertex @xmath49 and edges @xmath437 , @xmath438 , @xmath439 , @xmath440 .",
    "if @xmath428 has at least five hubs , then as shown in figure  [ n222threecases ] , up to isomorphism , @xmath433 has three possibilities ( note that the first and second are different ) .",
    "next , we examine in the ways one can add @xmath441-paths into @xmath442 to form @xmath2 such that @xmath2 is minimal . in the following",
    ", a hub in @xmath2 is said to be @xmath443 if it is not a hub in @xmath428 , and an edge is said to be @xmath443 if it does not belong to @xmath428 and not incident with @xmath426 or @xmath427 .",
    "* case 1 : * this case is shown in figure  [ n222threecases](a ) , where each edge is labeled . since @xmath433 has four hubs , @xmath428 has at most eight hubs . and",
    "since @xmath444 , @xmath445 , @xmath446 have to be added to generate at least @xmath447 new hubs . without loss of generality ,",
    "say , @xmath445 contains at least three new hubs .",
    "observe that each of these new hubs is incident with exactly one @xmath445-edge that does not belong to any @xmath61 or @xmath71-path , and @xmath426 and @xmath427 are also incident with one such @xmath445-edge .",
    "so at least @xmath448 edges of @xmath445 are exclusively owned by @xmath445 , and thereby at least one of them , say @xmath449 , is a new edge ( not incident with @xmath426 or @xmath427 ) .",
    "we next discuss the possible locations of @xmath449 ; here , notice that it is possible that either @xmath146 or @xmath147 is not a new hub .",
    "suppose @xmath450 ( this means @xmath146 is one of vertices in @xmath451 , including its two end vertices ) .",
    "then , one verifies that if @xmath452 or @xmath453 , then @xmath61 is reroutable ; if @xmath454 or @xmath455 , then @xmath71 is reroutable .",
    "for example , if @xmath456 , then we can find another two vertex - disjoint @xmath71-paths @xmath457\\circ \\phi_2[a , v_1]\\circ ( v_1,v_2)\\circ \\psi_2[v_2,r_2]\\end{aligned}\\ ] ] from @xmath127 to @xmath128 , and thus @xmath428 is reroutable . and",
    "if @xmath458 , then we can find another two vertex - disjoint paths @xmath459\\circ \\psi_2[b , a]\\circ \\phi_2[a , r_1],\\\\ \\phi_2'&=\\phi_2[s_1,v_1]\\circ ( v_1,v_2)\\circ \\phi_1[v_2,r_1]\\end{aligned}\\ ] ] from @xmath94 to @xmath95 , and thus @xmath428 is reroutable .",
    "hence , we only need to check the last possible case : all new edges ( including @xmath148 ) are incident with public edges in @xmath428 . by symmetry ,",
    "say , @xmath464 .",
    "then , if @xmath465 or @xmath220 , @xmath71 is reroutable ; if @xmath466 , @xmath61 is reroutable ; if @xmath467 , there must be a new edge @xmath468 of @xmath446 with ( @xmath469 and @xmath470 ) or ( @xmath471 and @xmath472 ) ( see figure  [ n222case1and2finalsentence](a)(b ) ) , since otherwise @xmath473 is still in @xmath474 , which contradicts the fact that @xmath2 is minimal .",
    "however , in both cases , we can still find another two vertex - disjoint paths @xmath475\\circ ( v_1',v_2')\\circ \\phi_2[v_2',r_1],\\\\ \\phi_2'&=\\phi_2[s_1,v_1]\\circ ( v_1,v_2)\\circ \\phi_1[v_2,r_1]\\end{aligned}\\ ] ] from @xmath94 to @xmath95 , and thus @xmath428 is reroutable .",
    "hence , we only need to check the last possible case : all new edges ( including @xmath468 ) are incident with public edges in @xmath428 . by symmetry ,",
    "say @xmath464 or @xmath220 . if @xmath464 and @xmath483 or @xmath484 , then @xmath61 is reroutable ; if @xmath464 and @xmath485 , then @xmath71 is reroutable ; if @xmath486 and @xmath487 or @xmath484 , @xmath71 is reroutable ; if @xmath486 and @xmath466 , there must be a new edge @xmath468 of @xmath446 with @xmath469 and @xmath470 ( see figure  [ n222case1and2finalsentence](c ) ) , since otherwise @xmath488 is still in @xmath474 , which contradicts the fact that @xmath2 is minimal .",
    "however , we can still find another two vertex - disjoint paths @xmath489\\circ ( v_1,v_2)\\circ \\phi_2[v_2,r_1],\\\\ \\phi_2'&=\\phi_2[s_1,v_2']\\circ ( v_2',v_1')\\circ \\phi_1[v_1',r_1]\\end{aligned}\\ ] ] from @xmath94 to @xmath95 , and thus @xmath428 is reroutable .",
    "* case 3 : * this case is shown in figure  [ n222threecases](c ) , where each edge is also labeled . since @xmath433 has three hubs , @xmath428 has at most six hubs . and",
    "since @xmath444 , @xmath445 , @xmath446 have to be added to generate at least @xmath490 new hubs .",
    "so at least @xmath491 edges of @xmath445 and @xmath446 do not belong to any @xmath61 or @xmath71-path , and thereby at least two of them , say , @xmath148 and @xmath468 are two new edges .",
    "we next discuss their possible locations .",
    "let @xmath504 be the subgraph of @xmath2 induced on the edges of @xmath505 $ ] and @xmath506 $ ] and @xmath507 be the subgraph induced on the edges of @xmath508 $ ] and @xmath509 $ ] .",
    "if @xmath510 , either @xmath61 or @xmath71 is reroutable , and hence @xmath511 or @xmath512 . similarly , we deduce that @xmath513 or @xmath514 .",
    "then we just need to check the last possibility : @xmath515 and @xmath516 , for which we can also easily rule out the subcases when ( 1 ) @xmath517 and @xmath518 ( 2 ) @xmath519 and @xmath520 ( 3 ) @xmath521 ( 4 ) @xmath522 ( 5 ) @xmath523 and @xmath524 ( 6 ) @xmath525 and @xmath526 .",
    "so , in the following , we examine the remaining two subcases :      \\(2 ) @xmath525 and @xmath524 . by symmetry , we assume @xmath527 on @xmath532 in @xmath529 . if @xmath530 , then @xmath441 is reroutable ; if @xmath531 , then @xmath71 is reroutable .",
    "now , we are ready to conclude that any minimal and non - reroutable graph in @xmath474 has at most @xmath206 hubs .",
    "* we next consider the case when @xmath2 is a minimal but reroutable @xmath420-graph*. suppose @xmath441 is reroutable in the subgraph @xmath430 . by theorem  [ equivalent ] , there exists a @xmath441-consistent cycle @xmath84 where each @xmath85 is a subpath of some @xmath441-path and each @xmath46 is a private @xmath71-edge ( in @xmath533 ) .",
    "we further assume that @xmath86 ( the number of private @xmath71-edges ) is the smallest among all possible @xmath441-consistent cycles in @xmath533 .",
    "then , each @xmath46 belongs to a different @xmath71-path , which implies @xmath534 . since @xmath2 is minimal , each @xmath441-private edge ( in @xmath533 ) in @xmath535 must belong to @xmath61-paths as well .",
    "so , each edge of the @xmath441-consistent cycle in @xmath2 belongs to either some @xmath61-path or @xmath71-path . note that for any edge @xmath80 of this cycle , @xmath536 does not belong to @xmath33 , since otherwise , together with the observation that @xmath441 can be rerouted using edges in @xmath537",
    ", we deduce that @xmath538 , which contradicts the minimality of @xmath2 .",
    "then we can find a minimal subgraph @xmath539 of @xmath428 , which is of either case 1 ( when @xmath540 ) or case 2 ( when @xmath541 ) .",
    "let @xmath542 be the subgraph induced on the edges of @xmath441-paths .",
    "then @xmath543 , by the minimality of @xmath2 .",
    "notice that all contradictions in case 1 and case 2 arise from the rerouting of @xmath61 or @xmath71-paths .",
    "so we can follow similar arguments and conclude @xmath544 .",
    "the proof is then complete ."
  ],
  "abstract_text": [
    "<S> in this paper , a hub refers to a non - terminal vertex of degree at least three . </S>",
    "<S> we study the minimum number of hubs needed in a network to guarantee certain flow demand constraints imposed between multiple pairs of sources and sinks . </S>",
    "<S> we prove that under the constraints , regardless of the size or the topology of the network , such minimum number is always upper bounded and we derive tight upper bounds for some special parameters . in particular , for two pairs of sources and sinks , we present a novel path - searching algorithm , </S>",
    "<S> the analysis of which is instrumental for the derivations of the tight upper bounds . </S>"
  ]
}
{
  "article_text": [
    "every ordinary elliptic curve @xmath2 over a finite field @xmath3 has _ complex multiplication _ by an imaginary quadratic order @xmath4 , by which we mean that the endomorphism ring @xmath5 is isomorphic to @xmath4 .",
    "the deuring lifting theorem implies that @xmath2 is the reduction of an elliptic curve @xmath6 that also has complex multiplication by  @xmath4 .",
    "let @xmath7 denote the fraction field of @xmath4 .",
    "the @xmath8-invariant of @xmath9 is an algebraic integer whose minimal polynomial over @xmath7 is the _ hilbert class polynomial _",
    "@xmath10 , where @xmath0 is the discriminant of @xmath4 .",
    "notably , the polynomial @xmath10 actually lies in @xmath11 $ ] , and its splitting field is the _ ring class field _ @xmath12 for the order @xmath4 .",
    "conversely , an elliptic curve @xmath13 with complex multiplication by @xmath4 exists whenever @xmath14 satisfies the norm equation @xmath15 , with @xmath16 and @xmath17 modulo the characteristic of @xmath3 . in this case @xmath10 splits completely over @xmath3 , and its roots are precisely the @xmath8-invariants of the elliptic curves @xmath13 that have complex multiplication by  @xmath4 .",
    "such a curve has @xmath18 points , where @xmath19 is determined , up to a sign , by the norm equation . with a judicious selection of @xmath0 and @xmath14 one may obtain a curve with prescribed order .",
    "this is known as the _",
    "cm  method_.    the main challenge for the cm method is to obtain the polynomial @xmath10 , which has degree equal to the class number @xmath20 , and total size @xmath21 .",
    "there are three approaches to computing @xmath10 , all of which , under reasonable assumptions , can achieve a running time of @xmath21 .",
    "these include the complex analytic method @xcite , a @xmath22-adic algorithm @xcite , and an approach based on the chinese remainder theorem ( crt ) @xcite .",
    "the first is the most widely used , and it is quite efficient ; the range of discriminants to which it may be applied is limited not by its running time , but by the space required .",
    "the polynomial @xmath10 is already likely to exceed available memory when @xmath23 , hence one seeks to apply the cm method to alternative class polynomials that have smaller coefficients than  @xmath10 .",
    "this makes computations with @xmath24 feasible .",
    "recently , a modified version of the crt approach was proposed that greatly reduces the space required for the cm method @xcite . under the generalised riemann hypothesis ( grh ) , this algorithm is able to compute @xmath25 using @xmath26 space and @xmath21 time .",
    "( here and in the following , all complexity estimates refer to bit operations . )",
    "the reduced space complexity allows it to handle much larger discriminants , including examples with @xmath27 .",
    "an apparent limitation of the crt approach is that it depends on some specific features of the @xmath8-function .",
    "as noted in @xcite , this potentially precludes it from computing class polynomials other than @xmath10 .",
    "the purpose of the present article is to show how these obstructions may be overcome , allowing us to apply the crt method to many functions other than @xmath8 , including two infinite families .",
    "subject to suitable constraints on @xmath0 , we may then compute a class polynomial with smaller coefficients than @xmath10 ( by a factor of up to 72 ) , and , in certain cases , with smaller degree ( by a factor of 2 ) .",
    "remarkably , the actual running time with the crt method is typically _",
    "better _ than the size difference would suggest .",
    "fewer crt moduli are needed , and we may choose a subset for which the computation is substantially faster than on average .",
    "we start   [ sec : crtj ] with a brief overview of the crt method , and then describe a new technique to improve its performance , which also turns out to be crucial for certain class invariants . after discussing families of invariants in   [ sec : invariants ]",
    ", we consider crt - based approaches applicable to the different families and give a general algorithm in   [ sec : crtinv ] .",
    "computational results and performance data appear in   [ sec : implementation ] .",
    "the basic idea of the crt - based algorithm for hilbert class polynomials is to compute @xmath10 modulo many small primes  @xmath22 , and then lift its coefficients by chinese remaindering to integers , or to their reductions modulo a large ( typically prime ) integer  @xmath28 , via the explicit crt ( * ? ? ?",
    "the latter approach suffices for most applications , and while it does not substantially reduce the running time ( the same number of small primes is required ) , it can be accomplished using only @xmath26 space with the method of @xcite .    for future reference , we summarise the algorithm to compute @xmath29 for a prime @xmath22 that splits completely in the ring class field @xmath12 .",
    "let @xmath30 .",
    "[ alg : crtj ]    1 .",
    "find the @xmath8-invariant @xmath31 of an elliptic curve @xmath32 with @xmath33 .",
    "2 .   enumerate the other roots @xmath34 of @xmath35 .",
    "3 .   compute @xmath36 .",
    "the first step is achieved by varying @xmath31 ( systematically or randomly ) over the elements of @xmath37 until it corresponds to a suitable curve ; details and many practical improvements are given in @xcite .",
    "the third step is a standard building block of computer algebra .",
    "our interest lies in step  2 .",
    "the key idea in @xcite leading to a quasi - linear complexity is to apply the galois action of @xmath38 .",
    "the group @xmath39 acts on the roots of @xmath10 , and when @xmath22 splits completely in @xmath12 there is a corresponding action on the set @xmath40 containing the roots of @xmath35 .",
    "for an ideal class @xmath41 $ ] in @xmath39 and a @xmath8-invariant @xmath42 , let us write @xmath41j_i$ ] for the image of @xmath43 under the galois action of @xmath41 $ ] .",
    "we then have @xmath44j_1:[{\\mathfrak{a}}]\\in{\\operatorname{cl}}({\\mathcal{o}})\\}$ ] .    as in @xcite",
    ", we use a polycyclic presentation defined by a sequence of ideals @xmath45 with prime norms @xmath46 whose classes generate @xmath39 . the _ relative order _",
    "@xmath47 is the least positive integer for which @xmath48 \\in \\langle [ { \\mathfrak{l}}_1 ] , \\ldots , [ { \\mathfrak{l}}_{k-1 } ] \\rangle$ ] .",
    "we may then uniquely write @xmath41 = [ { \\mathfrak{l}}_1^{e_1}]\\cdots[{\\mathfrak{l}}_m^{e_m}]$ ] , with @xmath49 . to maximise performance",
    ", we use a presentation in which @xmath50 , with each  @xmath51 as small as possible subject to @xmath52 . note that the relative order @xmath47 divides the order  @xmath53 of @xmath54 $ ] in @xmath39 , but for @xmath55 we can ( and often do ) have @xmath56",
    ".    for each @xmath42 and each @xmath4-ideal @xmath57 of prime norm @xmath58 , the @xmath8-invariant  @xmath59j_i$ ] corresponds to an @xmath58-isogenous curve , which we may obtain as a root of @xmath60 , where @xmath61 $ ] is the _ classical modular polynomial _ @xcite .",
    "the polynomial  @xmath62 has the pair of functions @xmath63 as roots , and parameterises isogenies of degree  @xmath58 .",
    "fixing an isomorphism @xmath64 , we let @xmath65 denote the frobenius endomorphism . when the order  @xmath66 $ ]",
    "is maximal at @xmath58 , the univariate polynomial @xmath67 $ ] has exactly two roots @xmath59j_i$ ] and  @xmath68j_i$ ] when @xmath58 splits in @xmath4 , and a single root @xmath59j_i$ ] if @xmath58 is ramified ( * ? ? ?",
    "23 ) . to simplify matters ,",
    "we assume here that  @xmath66 $ ] is maximal at each @xmath51 , but this is not necessary , see @xcite .",
    "we may enumerate @xmath44j_1:[{\\mathfrak{a}}]\\in\\langle[{\\mathfrak{l}}_1],\\ldots,[{\\mathfrak{l}}_m]\\rangle\\}$ ] via ( * ? ? ?",
    "1.3 ) :    [ alg : crtjenum ]    1 .",
    "let @xmath69 be an arbitrary root of @xmath70 in @xmath37 .",
    "2 .   for @xmath71 from @xmath72 to @xmath73 ,",
    "let @xmath43 be the root of @xmath74 in @xmath37 .",
    "3 .   if @xmath75 , then for @xmath71 from @xmath76 to @xmath73 : + recursively enumerate the set @xmath77j_i:[{\\mathfrak{a}}]\\in\\langle[{\\mathfrak{l}}_1],\\ldots,[{\\mathfrak{l}}_{m-1}]\\rangle\\}$ ] .",
    "in general there are two distinct choices for @xmath69 , but either will do .",
    "once @xmath69 is chosen , @xmath78 are determined .",
    "the sequence @xmath79 corresponds to a path of @xmath80-isogenies ; we call this path an @xmath80-_thread_.    the choice of @xmath69 in step 1 may change the order in which @xmath81 is enumerated .",
    "three of the sixteen possibilities when @xmath82 , @xmath83 , and @xmath84 are shown below ; we assume @xmath85=[{\\mathfrak{l}}_1]$ ] , and label each vertex @xmath86j_1 $ ] by the exponent  @xmath87 .    = [ circle ,",
    "draw = black , fill = black!15,minimum size=9pt , inner sep=0pt ]    //in 0/0.0/1.6 , 3/0.8/1.6 , 6/1.6/1.6 , 9/2.4/1.6 , 1/0.0/0.8 , 4/0.8/0.8 , 7/1.6/0.8 , 10/2.4/0.8 , 2/0.0/0.0 , 5/0.8/0.0 , 8/1.6/0.0 , 11/2.4/0.0 ( g- ) at ( , ) @xmath88 ; /in 0/1,0/3,1/4,2/5 ( g- ) ",
    "( g- ) ; /in",
    "1.23/black,0.43/black at ( -0.15 , ) @xmath89 ; /in 0.4/black,1.2/black,2.0/black at ( , 1.76 ) @xmath90 ; /in 0.4/black,1.2/black,2.0/black at ( , 0.95 ) @xmath90 ; /in 0.4/black,1.2/black,2.0/black at ( , 0.15 ) @xmath90 ; /in",
    "1/2,3/6,6/9,4/7,7/10,5/8,8/11 ( g- )  ( g- ) ;    //in 0/4.4/1.6 , 9/5.2/1.6 , 6/6.0/1.6 , 3/6.8/1.6 , 1/4.4/0.8 , 10/5.2/0.8 , 7/6.0/0.8 , 4/6.8/0.8 , 2/4.4/0.0 , 5/5.2/0.0 , 8/6.0/0.0 , 11/6.8/0.0 ( g- ) at ( , ) @xmath88 ; /in 0/1,0/9,1/10,2/5 ( g- )  ( g- ) ; /in 1.23/black,0.43/black at ( 4.25 , ) @xmath89 ; /in 4.8/black,5.6/black,6.4/black at ( , 1.79 ) @xmath91 ; /in 4.8/black,5.6/black,6.4/black at ( , 0.98 ) @xmath91 ; /in 4.8/black,5.6/black,6.4/black at ( , 0.15 ) @xmath90 ; /in 1/2,9/6,6/3,10/7,7/4,5/8,8/11 ( g- )  ( g- ) ;    //in 0/8.8/1.6 , 3/9.6/1.6 , 6/10.4/1.6 , 9/11.2/1.6 , 11/8.8/0.8 , 8/9.6/0.8 , 5/10.4/0.8 , 2/11.2/0.8 , 10/8.8/0.0 , 1/9.6/0.0 , 4/10.4/0.0 , 7/11.2/0.0 ( g- ) at ( , ) @xmath88 ; /in 0/11,0/3,11/8,10/1 ( g- )  ( g- ) ; /in 1.25/black,0.45/black at ( 8.65 , ) @xmath92",
    "; /in 9.2/black,10.0/black,10.8/black at ( , 1.76 ) @xmath90 ; /in 9.2/black,10.0/black,10.8/black at ( , 0.98 ) @xmath91 ; /in 9.2/black,10.0/black,10.8/black at ( , 0.15 ) @xmath90 ; /in 11/10,3/6,6/9,8/5,5/2,1/4,4/7 ( g- )  ( g- ) ;    bold edges indicate where a choice was made . regardless of these choices , algorithm  [ alg : crtjenum ] correctly enumerates @xmath81 in every case ( * ? ? ?",
    "the potentially haphazard manner in which algorithm  [ alg : crtjenum ] enumerates @xmath81 is not a problem when computing @xmath10 , but it can complicate matters when we wish to compute other class polynomials .",
    "we could distinguish the actions of @xmath57 and @xmath93 using an elkies kernel polynomial @xcite , as suggested in @xcite , however this slows down the algorithm significantly .",
    "an alternative approach using polynomial gcds turns out to be much more efficient , and actually speeds up algorithm  [ alg : crtjenum ] , making it already a useful improvement when computing @xmath10 .",
    "we need not distinguish the actions of @xmath57 and @xmath93 at this stage , but we wish to ensure that our enumeration of @xmath81 makes a consistent choice of direction each time it starts an @xmath58-thread .",
    "the first @xmath58-thread may be oriented arbitrarily , but for each subsequent @xmath58-thread @xmath94 , we apply lemma  [ gcdlemma ] below .",
    "this allows us to  square the corner \" by choosing @xmath95 as the unique common root of @xmath96 and @xmath97 , where @xmath98 is a previously computed @xmath58-thread and @xmath31 is @xmath99-isogenous to @xmath100 .",
    "the edge @xmath101 lies in an @xmath99-thread that has already been computed , for some @xmath102 .",
    "= [ circle , draw , fill = black!15,minimum size=12pt , inner sep=0pt ]    ///in 1/j_1/0.0/1.6 , 2/j_2/0.8/1.6 , 3/j_3/1.6/1.6 , r / j_r/3.3/1.6 , 11/j_1/0.0/0.8 , 22/j_2/0.8/0.8 ( g- ) at ( , ) @xmath103 ; ( g-4 ) at ( 2.3,1.6 ) ; ( g - dots ) at ( 2.5,1.6 ) @xmath104 ; ( g - rm1 ) at ( 2.6,1.6 ) ; /in 1/11,1/2 ( g- )  ( g- ) ; in -0.15,0.65 at ( , 1.22 ) @xmath105 ; in 0.4,1.2,2.0,2.9 at ( , 1.75 ) @xmath57 ; at ( 0.4,0.95 ) @xmath57 ; /in 2/3,3/4,rm1/r ( g- )  ( g- ) ; /in 11/22,2/22 ( g- ) ",
    "( g- ) ;    ///in 1/j_1/6.0/1.6 , 2/j_2/6.8/1.6 , 3/j_3/7.6/1.6 , r / j_r/9.3/1.6 , 11/j_1/6.0/0.8 , 22/j_2/6.8/0.8 , 33/j_3/7.6/0.8 , rr / j_r/9.3/0.8 ( g- ) at ( , ) @xmath103 ; ( g-4 ) at ( 8.3,1.6 ) ; ( g - dots ) at ( 8.5,1.6 ) @xmath104 ; ( g - rm1 ) at ( 8.6,1.6 ) ; ( g-44 ) at ( 8.3,0.8 ) ; ( g - ddots ) at ( 8.5,0.8 ) @xmath104 ; ( g - rrm1 ) at ( 8.6,0.8 ) ; /in 1/11,1/2 ( g- ) ",
    "( g- ) ; in 5.85,6.65,7.45,9.15 at ( , 1.22 ) @xmath105 ; in 6.4,7.2,8.0,8.9 at ( , 1.75 ) @xmath57 ; in 6.4,7.2,8.0,8.9 at ( , 0.95 ) @xmath57 ; /in 2/3,3/4,rm1/r ( g- ) ",
    "( g- ) ; /in 11/22,2/22,22/33,3/33,33/ddots , rrm1/rr , r / rr ( g- )  ( g- ) ;    having computed @xmath95 , we could compute @xmath106 as before , but it is usually better to continue using gcds , as depicted above .",
    "asymptotically , both root - finding and gcd computations are dominated by the @xmath107 time it takes to instantiate @xmath108 , but in practice @xmath58 is small , and we effectively gain a factor of @xmath109 by using gcds when @xmath110 .",
    "this can substantially reduce the running time of algorithm  [ alg : crtjenum ] , as may be seen in table  [ tab1 ] of   [ sec : implementation ] .    with the gcd approach described above",
    ", the total number of root - finding operations can be reduced from @xmath111 to @xmath112 . when @xmath113 is large , this is a big improvement , but it is no help when @xmath114 , as necessarily occurs when @xmath20 is prime .",
    "however , even in this case we can apply gcds by looking for an auxiliary ideal @xmath115 , with prime norm @xmath116 , for which @xmath117=[{\\mathfrak{l}}_1^{e}]$ ] .",
    "when @xmath118 is large , such an @xmath115 is easy to find , and we may choose the best combination of @xmath116 and @xmath87 available .",
    "this idea generalises to @xmath51-threads , where we seek @xmath119\\in\\langle[{\\mathfrak{l}}_1]\\ldots,[{\\mathfrak{l}}_k]\\rangle \\backslash \\langle[{\\mathfrak{l}}_1]\\ldots,[{\\mathfrak{l}}_{k-1}]\\rangle$ ] .",
    "[ gcdlemma ] let @xmath120 , and let @xmath121 be distinct primes with @xmath122 .",
    "then @xmath123 has degree at most  @xmath76 .",
    "it follows from ( * ? ? ?",
    "23 ) that @xmath124 and @xmath125 have at most two common roots in the algebraic closure @xmath126 , which in fact lie in @xmath81 .",
    "if there are exactly two , then both @xmath127 and @xmath128 split in @xmath4 , and one of @xmath129 or @xmath130 is principal with a non - rational generator .",
    "we thus have a norm equation @xmath131 with @xmath132 and @xmath133 , and the lemma follows .",
    "due to the large size of @xmath10 , much effort has been spent seeking smaller generators of @xmath12 .",
    "for a modular function @xmath134 and @xmath135 $ ] , with @xmath136 in the upper half plane , we call @xmath137 a _ class invariant _ if @xmath138 .",
    "the _ class polynomial _ for @xmath134 is @xmath139 ( x ) = \\prod_{[{\\mathfrak{a } } ] \\in { \\operatorname{cl}}({\\mathcal{o } } ) } \\left (   x - [ { \\mathfrak{a } } ] f ( \\tau ) \\right).\\ ] ] the contemporary tool for determining class invariants is shimura s reciprocity law ; see ( * ? ? ? * th .",
    "4 ) for a fairly general result .",
    "class invariants arising from many different modular functions have been described in the literature ; we briefly summarise some of the most useful ones .",
    "let @xmath140 be dedekind s function , and let @xmath141 .",
    "weber considered @xmath142 powers of which yield class invariants when @xmath143 , and also @xmath144 j$ ] , which is a class invariant whenever @xmath145 .",
    "the weber functions can be generalised @xcite , and we have the simple and double @xmath140-quotients @xmath146 where @xmath147 and @xmath148 are primes .",
    "subject to constraints on @xmath0 , including that no prime dividing @xmath149 is inert in @xmath4 , suitable powers of these functions yield class invariants , see @xcite . for @xmath150 , the canonical power @xmath151 is invariant under the fricke involution @xmath152 for @xmath153 , equivalently , the atkin - lehner involution of level @xmath149 , by ( * ? ? ?",
    "* thm .  2 ) .",
    "the theory of @xcite applies to any functions for @xmath153 , in particular to those of prime level @xmath149 invariant under the fricke involution , which yield class invariants when @xmath154 .",
    "atkin developed a method to compute such functions @xmath155 , which are conjectured to have a pole of minimal order at the unique cusp @xcite .",
    "these are used in the sea algorithm , and can be found in magma or pari / gp .    the functions above all yield algebraic integers , so @xmath156 \\in { \\mathcal{o}}_k[x]$ ] .",
    "except for @xmath157 or when @xmath158 , in which cases additional restrictions may apply , one actually has @xmath156 \\in { \\mathbb{z}}[x]$ ] , cf .",
    "the ( logarithmic ) _ height _ of @xmath156=\\sum a_ix^i$ ] is @xmath159 , which determines the precision needed to compute the @xmath160 .",
    "we let @xmath161 denote the ratio of the heights of @xmath162 $ ] and @xmath156 $ ] .    with @xmath163",
    ", we have : @xmath164 ; @xmath165 ( when @xmath166 ) ; @xmath167 where @xmath87 divides the exponent  @xmath168 defined above , @xmath169 is the order of the pole of @xmath155 at the cusp , and @xmath170 is @xmath171 when @xmath172 , and @xmath173 when @xmath174 .",
    "morain observed in @xcite that @xmath175 , which is so far the best value known when @xmath176 .",
    "we conjecture that in fact for all primes @xmath177 with @xmath178 we have @xmath179 , and that for @xmath180 we have @xmath181 .",
    "this implies that given an arbitrary discriminant @xmath0 , we can always choose @xmath149 so that @xmath155 yields class invariants with @xmath182 .",
    "when the prime divisors of @xmath149 are all ramified in @xmath7 , both @xmath183 and @xmath155 yield class polynomials that are squares in @xmath11 $ ] , see @xcite and @xcite .",
    "taking the square root of such a class polynomial reduces both its degree and its height by a factor of 2 . for a composite fundamental discriminant  @xmath0 ( the most common case )",
    ", this applies to @xmath184 $ ] for any prime @xmath185 . in the best case",
    ", @xmath0 is divisible by 71 , and we obtain a class polynomial that is 144 times smaller than @xmath10 .      each function @xmath186 considered above is related to @xmath187 by a modular polynomial @xmath188 $ ] satisfying @xmath189 . for primes @xmath58 not dividing the level @xmath149 , we let @xmath190 denote the minimal polynomial satisfying @xmath191 ; it is a factor of @xmath192 and as such , an element of @xmath193 $ ] .",
    "thus @xmath190 generalises the classical modular polynomial @xmath194 .",
    "the polynomial @xmath195 has degree @xmath196 in @xmath197 and @xmath198 , where @xmath199 divides @xmath200 , see  @xcite , and @xmath201 divides @xmath200 when @xmath134 is invariant under the fricke involution . in general",
    ", @xmath199 is maximal , and @xmath202 is achievable only in the relatively few cases where @xmath203 , respectively @xmath204 , is of genus  @xmath205 and , moreover , @xmath134 is a hauptmodul , that is , it generates the function field of the curve .",
    "happily , this includes many cases of practical interest .",
    "the polynomial @xmath206 characterises the analytic function @xmath134 in an algebraic way ; when @xmath207 , the polynomials @xmath62 and @xmath190 algebraically characterise @xmath58-isogenies between elliptic curves given by their @xmath8-invariants , or by class invariants derived from @xmath134 , respectively .",
    "these are key ingredients for the crt method .",
    "to adapt algorithm  [ alg : crtj ] to class invariants arising from a modular function @xmath186 other than @xmath187 , we only need to consider algorithm  [ alg : crtjenum ] .",
    "our objective is to enumerate the roots of @xmath208\\bmod p$ ] for suitable primes @xmath22 , which we are free to choose .",
    "this may be done in one of two ways .",
    "the most direct approach computes an ",
    "@xmath134-invariant \" @xmath209 , corresponding to @xmath31 , then enumerates @xmath210 using the modular polynomials @xmath195 .",
    "alternatively , we may enumerate @xmath211 as before , and from these derive @xmath212 .",
    "the latter approach is not as efficient , but it applies to a wider range of functions , including two infinite families .",
    "several problems arise .",
    "first , an elliptic curve @xmath32 with cm by  @xmath4 unambiguously defines a @xmath8-invariant  @xmath213 , but not the corresponding @xmath209 .",
    "the @xmath209 we seek is a root of @xmath214 , but @xmath215 may have other roots , which may or may not be class invariants .",
    "the same problem occurs for the @xmath22-adic lifting algorithm and can be solved generically @xcite ; we describe some more efficient solutions , which are in part specific to certain types of functions",
    ".    when @xmath215 has multiple roots that are class invariants , these may be roots of distinct class polynomials .",
    "we are generally happy to compute any one of these , but it is imperative that we compute the reduction of  the same \" class polynomial @xmath208 $ ] modulo each prime @xmath22 .",
    "the lemma below helps to address these issues for at least two infinite families of functions : the double @xmath140-quotients @xmath183 and the atkin functions @xmath155 .",
    "[ lemma : psiroots ] let @xmath134 be a modular function for @xmath153 , invariant under the fricke involution @xmath216 , such that @xmath217 and @xmath218 have rational @xmath14-expansions .",
    "let the imaginary quadratic order @xmath4 have conductor coprime to @xmath149 and contain an ideal @xmath219 .",
    "let @xmath220 and @xmath221 , and assume that @xmath222 .",
    "then @xmath223 is a class invariant , and if @xmath137 is any of its conjugates under the action of @xmath224 we have @xmath225j(\\tau)\\bigr)=0.\\ ] ]    by definition , @xmath226 . applying the fricke involution yields @xmath227 the value",
    "@xmath223 is a class invariant by ( * ? ?",
    "* th .  4 ) .",
    "by the same result , we may assume that @xmath136 is the basis quotient of an ideal @xmath228 with @xmath229 and @xmath230 .",
    "then @xmath231 is the basis quotient of @xmath232 .",
    "it follows that @xmath233 j ( \\tau ) = j \\left ( \\frac { \\tau}{n } \\right)$ ] , and replacing @xmath234 above by @xmath136 completes the proof .",
    "if we arrange the roots of @xmath10 into a graph of @xmath235-isogeny cycles corresponding to the action of @xmath235 , the lemma yields a dual graph defined on the roots of @xmath208 $ ] , in which vertices @xmath236 correspond to edges @xmath237j(\\tau)\\bigr)$ ] .",
    "in computational terms , @xmath137 is a root of @xmath238j(\\tau)\\bigr ) \\big)$ ] .",
    "generically , we expect this gcd to have no other roots modulo primes @xmath22 that split completely in @xmath12 . for a finite number of such primes",
    ", there may be additional roots .",
    "we have observed this for @xmath22 dividing the conductor of the order generated by @xmath137 in the maximal order of @xmath12 .",
    "such primes may either be excluded from our crt computations , or addressed by one of the techniques described in  [ ssec : indirect ] .",
    "when the polynomials @xmath195 have degree @xmath239 we can apply algorithm  [ alg : crtjenum ] with essentially no modification ; the only new consideration is that @xmath58 must not divide the level @xmath149 , but we can exclude such @xmath58 when choosing a polycyclic presentation for @xmath39 .",
    "when the degree is greater than @xmath239 the situation is more complex , moreover the most efficient algorithms for computing modular polynomials do not apply @xcite , making it difficult to obtain @xmath190 unless @xmath58 is very small .",
    "thus in practice we do not use @xmath195 in this case ; instead we apply the methods of  [ ssec : indirect ] or  [ ssec : general ] . for the remainder of this subsection and",
    "the next we assume that we do have polynomials @xmath195 of degree @xmath239 with which to enumerate @xmath212 , and consider how to determine a starting point @xmath209 , given the @xmath8-invariant @xmath213 of an elliptic curve @xmath32 with cm by @xmath4 .    when @xmath214 has only one root , our choice of @xmath209 is immediately determined .",
    "this is usually not the case , but we may be able to ensure it by restricting our choice of  @xmath22 .",
    "as an example , for @xmath240 with @xmath145 , if we require that @xmath241 , then @xmath209 is the unique cube root of  @xmath31 in @xmath37 .",
    "if we additionally have @xmath242 and @xmath243 , then the equation @xmath244 uniquely determines the square of the weber @xmath245 function , by ( * ? ? ?",
    "7.3 ) . to treat @xmath245 itself we need an additional trick described in ",
    "[ ssec : tracetrick ] .",
    "the next simplest case occurs when only one of the roots of @xmath215 is a class invariant .",
    "this necessarily happens when @xmath134 is invariant under the fricke involution and all the primes dividing @xmath149 are ramified in  @xmath4 . in the context of lemma  [ lemma : psiroots ] , each root of @xmath208 $ ] then corresponds to an isolated edge @xmath246j(\\tau)\\bigr)$ ] in the @xmath235-isogeny graph on the roots of @xmath10 , and we compute @xmath209 as the unique root of @xmath247j_1)\\bigr)$ ] .",
    "in this situation @xmath248 , and each @xmath236 occurs twice as a root of @xmath208 $ ] . by using a polycyclic presentation for @xmath249\\rangle$ ] rather than @xmath39 , we enumerate each double root of @xmath208\\bmod p$ ] just once .",
    "even when @xmath215 has multiple roots that are class invariants , it may happen that they are all roots of the _ same _ class polynomial .",
    "this applies to the atkin functions @xmath250 .",
    "when @xmath149 is a split prime , there are two @xmath149-isogenous pairs @xmath251j_1)$ ] and @xmath252j_1,j_1)$ ] in @xmath81 , and under lemma  [ lemma : psiroots ] these correspond to roots @xmath209 and @xmath253f_1 $ ] of @xmath215 .",
    "both are roots of @xmath208 $ ] , and we may choose either .",
    "the situation is slightly more complicated for the double @xmath140-quotients @xmath183 , with @xmath254 composite .",
    "if @xmath255 and @xmath256 both split and @xmath172 , then there are four distinct @xmath149-isogenies corresponding to four roots of @xmath215 .",
    "two of these roots are related by the action of @xmath233=[{\\mathfrak{p}}_1{\\mathfrak{p}}_2]$ ] ; they belong to the same class polynomial , which we choose as @xmath208\\bmod p$ ] .",
    "the other two are related by @xmath257 $ ] and are roots of a different class polynomial .",
    "we make an arbitrary choice for @xmath209 , explicitly compute @xmath233 f_1 $ ] , and then check whether it occurs among the other three roots ; if not , we correct the initial choice .",
    "the techniques of  [ ssec : indirect ] may be used to efficiently determine the action of @xmath233 $ ] .",
    "listed below are some of the modular functions @xmath134 for which the roots of @xmath208\\bmod p$ ] may be directly enumerated , with sufficient constraints on @xmath0 and  @xmath22 . in each case",
    "@xmath22 splits completely in @xmath12 and @xmath258 has conductor @xmath259 .",
    "1 .   @xmath260 , with @xmath145 and @xmath261 ; 2 .",
    "@xmath262 , with @xmath263 , @xmath145 , and @xmath264 ; 3 .",
    "@xmath265 , for @xmath266 and @xmath267 , with @xmath185 and @xmath268 ; 4 .",
    "@xmath269 , with @xmath145 , @xmath270 , and @xmath271 ; 5 .",
    "@xmath155 , for @xmath272 , with @xmath273 and @xmath268 . 6 .",
    "@xmath274 , for @xmath275 and @xmath276 , with @xmath277 and @xmath278 . 7 .",
    "@xmath279 with @xmath280 and @xmath281 .",
    "in  [ ssec : direct ] we were able to treat the square of the weber @xmath245 function but not @xmath245 itself . to remedy this ,",
    "we generalise a method suggested to us by reinier brker .",
    "we consider the situation where there are two modular functions @xmath134 and @xmath282 that are roots of @xmath283 , both of which yield class invariants for @xmath4 , and we wish to apply the direct enumeration approach .",
    "we assume that @xmath22 is chosen so that @xmath284 has exactly two roots , and depending on which root we take as @xmath209 , we may compute the reduction of either @xmath208(x)$ ] or @xmath285(x)$ ] modulo @xmath22 . in the case of weber @xmath245",
    ", we have @xmath286 , and @xmath285 $ ] differs from @xmath208 $ ] only in the sign of every other coefficient .",
    "consider a fixed coefficient @xmath160 of @xmath208(x)=\\sum a_ix^i$ ] ; most of the time , the trace @xmath287 will do ( if @xmath286 , we need to use @xmath160 with @xmath288 ) .",
    "the two roots @xmath209 and @xmath289 lead to two possibilities @xmath19 and @xmath290 modulo  @xmath22 . however , the elementary symmetric functions @xmath291 and @xmath292 are unambiguous modulo  @xmath22 . computing these modulo",
    "many primes @xmath22 yields @xmath293 and  @xmath294 as integers ( via the crt ) , from which @xmath19 and @xmath290 are obtained as roots of the quadratic equation @xmath295 .",
    "if these are different , we arbitrarily pick one of them , which , going back , determines the set of conjugates @xmath296 or @xmath297 to take modulo each of the primes @xmath298 . in the unlikely event that they are the same ( the suspicion @xmath299 being confirmed after , say , looking at the second prime ) , we need to switch to a different coefficient @xmath160 .",
    "if @xmath134 and @xmath282 differ by a simple transformation ( such as @xmath286 ) , the second set of conjugates and the value @xmath290 are obtained essentially for free . as a special case , when @xmath300 is odd and the class invariants are units ( as with weber @xmath245 ) , we can simply fix @xmath301 , and need not compute @xmath302 and @xmath303 .",
    "the key point is that the number of primes @xmath22 we use to determine @xmath19 is much less than the number of primes we use to compute @xmath208 $ ] .",
    "asymptotically , the logarithmic height of the trace is smaller than the height bound we use for @xmath208 $ ] by a factor quasi - linear in @xmath304 , under the grh . in practical terms",
    ", determining  @xmath19 typically requires less than one tenth of the primes used to compute @xmath208 $ ] , and these computations can be combined .",
    "the approach described above generalises immediately to more than two roots , but this case does not occur for the functions we examine .",
    "unfortunately it can be used only in conjunction with the direct enumeration approach of  [ ssec : direct ] ; otherwise we would have to consistently distinguish not only between @xmath209 and @xmath289 , but also between @xmath305 and @xmath306 for @xmath307 .      for functions @xmath134 to which lemma  [ lemma : psiroots ] applies",
    ", we can readily obtain the roots of @xmath208\\bmod p$ ] without using the polynomials @xmath195 .",
    "we instead enumerate the roots of @xmath29 ( using the polynomials @xmath62 ) , and arrange them into a graph  @xmath308 of @xmath235-isogeny cycles , where @xmath235 is the ideal of norm @xmath149 appearing in lemma  [ lemma : psiroots ] .",
    "we then obtain roots of @xmath208\\bmod p$ ] by computing @xmath309j_i)\\bigr)$ ] for each edge @xmath310j_i)$ ] in @xmath308 .    the graph @xmath308 is composed of @xmath311 cycles of length @xmath312 , where @xmath312 is the order of @xmath233 $ ] in @xmath39 .",
    "we assume that the @xmath4-ideals of norm @xmath149 are all non - principal and inequivalent ( by requiring @xmath313 if needed ) .",
    "when every prime dividing @xmath149 is ramified in @xmath4 we have @xmath314 ; as noted in ",
    "[ ssec : direct ] , every root of @xmath208 $ ] then occurs with multiplicity  @xmath315 , and we may compute the square - root of @xmath208 $ ] by taking each root just once .",
    "otherwise we have @xmath316 .",
    "let @xmath317,\\ldots,[{\\mathfrak{l}}_m]$ ] be a polycyclic presentation for @xmath39 with relative orders @xmath318 , as in  [ ssec : crtjenum ] .",
    "for @xmath319 from 1 to @xmath113 let us fix @xmath320 with @xmath321 .",
    "to each vector @xmath322 with @xmath323 , we associate a unique root @xmath324 enumerated by algorithm  [ alg : crtjenum ] , corresponding to the path taken from @xmath31 to  @xmath324 , where @xmath325 counts steps taken along an @xmath51-thread . for @xmath326",
    "we have @xmath327 , and in general @xmath328j_{\\vec{o}},\\ ] ] with @xmath329 . using the method of  [ ssec : gcd ] to consistently orient the @xmath51-threads",
    "ensures that each @xmath330 depends only on the orientation of the first @xmath51-thread .    to compute the graph @xmath308",
    "we must determine the signs @xmath330 .",
    "for those @xmath54 $ ] of order 2 , we let @xmath331 .",
    "we additionally fix @xmath331 for the least @xmath332 ( if any ) for which @xmath54 $ ] has order greater than 2 , since we need not distinguish the actions of @xmath235 and @xmath333 .",
    "it suffices to show how to determine @xmath330 , given that we know @xmath334 .",
    "we may assume @xmath335 $ ] and @xmath54 $ ] both have order greater than 2 , with @xmath336 .",
    "let @xmath57 be an auxiliary ideal of prime norm @xmath58 such that @xmath59=[{\\mathfrak{a}}{\\mathfrak{b}}]=[{\\mathfrak{l}}_1^{e_1}\\cdots{\\mathfrak{l}}_k^{e_k}]$ ] , with @xmath337 , where @xmath338 , and @xmath41 $ ] and @xmath339 $ ] have order greater than 2 .",
    "our assumptions guarantee that such an @xmath57 exists , by the ebotarev density theorem , and under the grh , @xmath58 is relatively small @xcite .",
    "the fact that @xmath41 $ ] and @xmath339 $ ] have order greater than 2 ensures that @xmath340 $ ] is distinct from @xmath59 $ ] and its inverse .",
    "it follows that @xmath331 if and only if @xmath341 , where @xmath342 .",
    "having determined the @xmath330 , we compute the unique vector @xmath343 for which @xmath233=[{\\mathfrak{l}}_1^{\\sigma_1v_1}\\cdots{\\mathfrak{l}}_m^{\\sigma_mv_m}]$ ] .",
    "we then have @xmath233j_{\\vec{o}}=j_{\\vec{v}}$ ] , yielding the edge @xmath344 of @xmath308 . in general",
    ", we obtain the vector corresponding to @xmath233j_{\\vec{e}}$ ] by computing @xmath345 and using relations @xmath48=[{\\mathfrak{l}}_1^{x_1}\\cdots{\\mathfrak{l}}_{k-1}^{x_{k-1}}]$ ] to reduce the result , cf .",
    "@xcite .",
    "this method may be used with any function @xmath134 satisfying lemma  [ lemma : psiroots ] , and in particular it applies to two infinite families of functions :    1 .",
    "@xmath155 , for @xmath346 prime , with @xmath273 and @xmath268 .",
    "2 .   @xmath274 , for @xmath347 primes not both 2 , with @xmath277 and @xmath278 .    as above",
    ", @xmath259 denotes the conductor of @xmath258 .    as noted earlier , for certain primes @xmath22 we may have difficulty computing the edges of @xmath308 when @xmath309j_i)\\bigr)$ ] has more than one root in @xmath37 . while we need not use such primes , it is often easy to determine the correct root .",
    "here we give two heuristic techniques for doing so .",
    "the first applies when @xmath149 is prime , as with the atkin functions . in this case problems",
    "can arise when @xmath208 $ ] has repeated roots modulo  @xmath22 . by kummer s criterion , this can happen only when @xmath22 divides the discriminant of @xmath208 $ ] , and even then , a repeated root @xmath348 is only actually a problem when it corresponds to two alternating edges in @xmath308 , say @xmath349 and @xmath350 , with the edge @xmath351 between them . in this scenario",
    "we will get two roots @xmath348 and @xmath352 of @xmath353 .",
    "but if we already know that @xmath348 corresponds to @xmath349 , we can unambiguously choose @xmath352 .",
    "in each of the @xmath149-isogeny cycles of  @xmath308 , it is enough to find a single edge that yields a unique root .",
    "if no such edge exists , then every edge must yield the _ same _ two roots @xmath348 and  @xmath352 , and we count each with multiplicity @xmath354 .",
    "the second technique applies when the roots of @xmath208 $ ] are units , as with the double @xmath140-quotients ( * ? ? ?",
    "the product of the roots is then @xmath355 . assuming that the number of edges in @xmath308 for which multiple roots arise is small ( it is usually zero , and rarely more than one or two )",
    ", we simply test all the possible choices of roots and see which yield @xmath355 .",
    "if only one combination works , then the correct choices are determined .",
    "this is not guaranteed to happen , but in practice it almost always does .",
    "we now briefly consider the case of an arbitrary modular function @xmath134 of level @xmath149 , and sketch a general algorithm to compute @xmath208 $ ] with the crt method .",
    "let us assume that @xmath236 is a class invariant , and let @xmath0 be the discriminant and @xmath259 the conductor of the order @xmath356 $ ] .",
    "the roots of @xmath357 $ ] lie in the ray class field of conductor @xmath358 over @xmath7 , and some number @xmath312 of these , including @xmath236 , actually lie in the ring class field @xmath12 .",
    "we may determine  @xmath312 using the method described in @xcite , which computes the action of @xmath359 on the roots of @xmath360 .",
    "we note that the complexity of this task is essentially fixed as a function of @xmath361 .",
    "having determined @xmath312 , we use algorithm  [ alg : crtjenum ] to enumerate the roots @xmath211 of @xmath29 as usual , but if for any @xmath43 we find that @xmath362 does not have exactly @xmath312 roots @xmath363 , we exclude the prime @xmath22 from our computations . the number of such @xmath22 is finite and may be bounded in terms of the discriminants of the polynomials @xmath364 as @xmath365 ranges over the roots of @xmath208 $ ] .",
    "we then compute the polynomial @xmath366 of degree @xmath367 in @xmath368 $ ] . after doing this for sufficiently many primes @xmath22 , we can lift the coefficients by chinese remaindering to the integers .",
    "the resulting @xmath369 is a product of @xmath312 distinct class polynomials , all of which may be obtained by factoring @xmath369 in @xmath11 $ ] . under suitable heuristic assumptions ( including the grh ) , the total time to compute @xmath208 $ ] is quasi - linear in @xmath361 , including the time to factor @xmath369 .",
    "this approach is practically efficient only when @xmath312 is small , but then it can be quite useful .",
    "a notable example is the modular function @xmath370 for which @xmath371 this function was originally proposed by atkin , and is closely related to certain class invariants of ramanujan ( * ? ? ?",
    "the function @xmath370 yields class invariants when @xmath372",
    ". in terms of our generic algorithm , we have @xmath314 , and for @xmath261 we get exactly two roots of @xmath373 , which differ only in sign .",
    "thus @xmath374(x^2)=h_d[g](x)h_d[g](-x)$ ] , and from this we easily obtain @xmath375 $ ] , and also @xmath376 $ ] if desired .",
    "this section provides performance data for the techniques developed above .",
    "we used amd phenom ii 945 cpus clocked at 3.0  ghz for our tests ; the software was implemented using the ` gmp ` @xcite and ` zn_poly ` @xcite libraries , and compiled with ` gcc ` @xcite .    to compute the class polynomial",
    "@xmath208 $ ] , we require a bound on the size of its coefficients . unfortunately , provably accurate bounds for functions  @xmath134 other than  @xmath8 are generally unavailable . as a heuristic ,",
    "we take the bound @xmath377 on the coefficients of @xmath10 given by ( * ? ? ?",
    "8) , divide @xmath378 by the asymptotic height factor @xmath379 , and add a  safety margin \" of 256 bits .",
    "we note that with the cm method , the correctness of the final result can be efficiently and unconditionally confirmed  @xcite , so we are generally happy to work with a heuristic bound .",
    "our first set of tests measures the improvement relative to previous computations with the crt method .",
    "we used discriminants related to the construction of a large set of pairing - friendly elliptic curves , see @xcite for details .",
    "we reconstructed many of these curves , first using the hilbert class polynomial @xmath10 , and then using an alternative class polynomial @xmath208 $ ] . in each case",
    "we used the explicit crt to compute @xmath10 or @xmath208 $ ] modulo a large prime @xmath14 ( 170 to 256 bits ) .",
    "table  [ tab1 ] gives results for four discriminants with @xmath380 , three of which appear in ( * ? ? ?",
    "* table  2 ) .",
    "each column lists times for three class polynomial computations .",
    "first , we give the total time @xmath381 to compute @xmath382 , including the time @xmath383 spent enumerating @xmath384 , for all the small primes @xmath22 , using algorithm  [ alg : crtjenum ] as it appears in  [ ssec : crtjenum ] .",
    "we then list the times @xmath385 and @xmath386 obtained when algorithm  [ alg : crtjenum ] is modified to use gcd computations whenever it is advantageous to do so , as explained in  [ ssec : gcd ] .",
    "the gcd approach typically speeds up algorithm  [ alg : crtjenum ] by a factor of  @xmath315 or more .    for the third computation we selected a function @xmath134 that yields class invariants for @xmath0 , and computed @xmath208\\bmod q$ ] .",
    "this polynomial can be used in place of @xmath10 in the cm method ( one extracts a root @xmath387 of @xmath208\\bmod q$ ] , and then extracts a root of @xmath388 ) . for each function",
    "@xmath134 we give a  size factor \" , which approximates the ratio of the total size of @xmath10 to @xmath208 $ ] ( over @xmath389 ) . in the first three examples this is just the height factor @xmath379 , but in example 4",
    "it is @xmath390 because the prime 59 is ramified and we actually work with the square root of @xmath391 $ ] , as noted in ",
    "[ ssec : direct ] , reducing both the height and degree by a factor of  2 .",
    "we then list the speedup @xmath392 $ ] attributable to computing @xmath208 $ ] rather than @xmath10 .",
    "remarkably , in each case this speedup is about twice what one would expect from the height factor .",
    "this is explained by a particular feature of the crt method : the cost of computing @xmath29 for small primes @xmath22 varies significantly , and , as explained in @xcite , one can accelerate the crt method with a careful choice of primes .",
    "when fewer small primes are needed , we choose those for which step 1 of algorithm  [ alg : crtj ] can be performed most quickly .",
    "we also tested a ",
    "worst case \" scenario for the crt approach : the discriminant @xmath394 , for which the smallest non - inert prime is @xmath395 . choosing the function most suitable to each method",
    ", the complex analytic method computes @xmath396 $ ] in 8310 seconds , while the crt method computes @xmath397 $ ] in 7150 seconds .",
    "the crt approach benefits from the attractive height factor of the atkin functions , @xmath398 versus @xmath399 , and the use of gcds in algorithm  [ alg : crtjenum ] . without these improvements ,",
    "the time to compute @xmath10 with the crt method is 1460000 seconds .",
    "the techniques presented here yield more than a 200-fold speedup in this example .",
    "to test the scalability of the crt approach , we constructed an elliptic curve using @xmath400 , with @xmath401 .",
    "this yielded a curve @xmath402 of prime order @xmath312 over the prime field @xmath3 , where @xmath403 this curve was obtained by computing the square root of @xmath404 $ ] modulo @xmath14 , a polynomial of degree @xmath405 .",
    "the height bound of 21533832 bits was achieved with 438709 small primes @xmath22 , the largest of which was 53 bits in size .",
    "the class polynomial computation took slightly less than a week using 32 cores , approximately 200 days of cpu time . extracting a root over @xmath3 took 25 hours of cpu time using ntl @xcite .",
    "we estimate that the size of @xmath406}$ ] is over 13 terabytes , and that the size of the hilbert class polynomial @xmath10 is nearly 2 petabytes .",
    "the size of @xmath406}\\bmod q$ ] , however , is under 200 megabytes , and less than 800 megabytes of memory ( per core ) were needed to compute it ."
  ],
  "abstract_text": [
    "<S> we adapt the crt approach for computing hilbert class polynomials to handle a wide range of class invariants . for suitable discriminants </S>",
    "<S> @xmath0 , this improves its performance by a large constant factor , more than 200 in the most favourable circumstances . </S>",
    "<S> this has enabled record - breaking constructions of elliptic curves via the cm method , including examples with @xmath1 . </S>"
  ]
}
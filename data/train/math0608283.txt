{
  "article_text": [
    "one mathematical background of today s signal processing algorithms , like mobile phone , umts , xdsl or digital television , is the concept of frames , which was introduced by duffin and schaefer @xcite .",
    "it was made popular by daubechies @xcite , and today it is one of the most important foundations of gabor @xcite , wavelet @xcite and sampling theory @xcite . in signal processing applications frames have received more and more attention @xcite .    to be able to work with numerically models , data and operators",
    "have to be discretized .",
    "application and algorithms always work with finite dimensional data .",
    "there are already some works investigating frames in finite dimensional setting , for example refer to @xcite . in the finite dimensional case frames are equivalent to spanning system . here",
    "frames are the only feasible generalization of bases , if reconstruction is wanted .",
    "in contrast to bases , frames loose the linear independence . in this paper we will first give a short introduction to the notation of frames in section [ sec : prelnot0 ] .",
    "in section [ sec : workframfindim0 ] we will summarize some basic properties of frames in finite dimensional spaces .",
    "we give matlab @xcite algorithms to work with frames in finite dimensional spaces .",
    "those algorithms are either very basic and denoted here as single code lines . or they can be downloaded from ` http://www.kfs.oeaw.ac.at/xxl/finiteframes/finfram1.zip ` . in section [ sec : frametrafo0 ] we will look at a way to ` switch ' between different frames , i.e. find a way to map between their coefficient spaces bijectively and give the algorithm for it .",
    "this is done by using the cross - gram matrix of the two involved frames .",
    "it is a canonical extension of the basic transformation matrix used for orthonormal bases ( onb ) , respectively the properties of the gram matrix using a frame and its dual . in section [ sec : claswfram0 ]",
    "we finish the look at the connection between frames and finite dimensional spaces , by giving a criteria for finite dimensional spaces using frames . in particular",
    "a space is finite dimensional if and only if @xmath0 for any frame @xmath1 .",
    "the sequence @xmath2 is called a _ frame _ @xcite for the ( separable ) hilbert space @xmath3 , if constants @xmath4 exist , such that @xmath5 @xmath6 is called a _ lower _ , @xmath7 a _ upper frame bound_. if the bounds can be chosen such that @xmath8 the frame is called _",
    "tight_. let @xmath9 be the _ analysis operator _ @xmath10 .",
    "let @xmath11 be the _ synthesis operator _ @xmath12 .",
    "let @xmath13 be the _ frame operator _ @xmath14 .",
    "if it is important to note from which frame the operator was derived of , we will use an index such as for example as in @xmath15 .",
    "if we have a frame in @xmath3 , we can find an expansion of every member of @xmath3 with this frame .",
    "@xmath16 is a frame with frame bounds @xmath17 , @xmath18 , the so called _ canonical dual frame_. every @xmath19 has the expansions @xmath20 and @xmath21 where both sums converge unconditionally in @xmath3 .",
    "for two sequences in @xmath3 @xmath1 and @xmath22 , let the _ cross - gram matrix _ @xmath23 be given by @xmath24 , @xmath25 .",
    "if @xmath26 we call this matrix the _ gram matrix _ @xmath27 . for frames @xmath28 the orthogonal projection @xmath29 from @xmath30 onto @xmath31",
    "is given by @xmath32 .",
    "for a very good introduction to the topic of frames in @xmath33 refer to @xcite chapter 1 .",
    "the typical properties of frames can be understood easily in the context of finite - dimensional vector spaces .",
    "it is well known @xcite that the finite sequences that span the whole space are exactly the finite frames .",
    "let @xmath34 be a frame in @xmath35 .",
    "the matrices @xmath36 describes the synthesis operator @xmath37 , the analysis operator @xmath38 and the pseudoinverse @xmath39 . here",
    "@xmath40 is defined , such that @xmath41 , where @xmath42 is the canonical projection @xmath43 .",
    "furthermore @xmath44 is the matrix such that @xmath45 .",
    "and the pseudoinverse @xmath39 of the synthesis operator is the analysis operator of the dual frame .",
    "here we summarize basic properties needed later , as well as a simple algorithm to create frames .",
    "infinite frames in finite dimensional spaces can also be constructed like in @xcite .",
    "let us give other examples for this situation , which we refer to in section [ sec : claswfram0 ] .    1 .",
    "take a basis @xmath46 in @xmath35 and let @xmath47 for @xmath48 .",
    "then @xmath49 is a tight frame , as @xmath50 @xmath51 2 .",
    "the same is possible for @xmath52 for @xmath48 .",
    "this is again a tight frame with the bound @xmath53 .",
    "frames can be described as images of an orthonormal basis by bounded linear operators in an infinite dimensional hilbert space .",
    "they can even be classified by this result :    [ sec : framonb1 ] let @xmath54 be an arbitrary infinite onb for @xmath3 .",
    "the frames for @xmath3 are precisely the families @xmath55 , where @xmath56 is a bounded and surjective operator .",
    "this operator is just the composition of an analysis and a synthesis operator .",
    "this proposition seems not very easy to apply for finite dimensional applications at the first look , but it is clearly possible :    [ sec : framonbfin1 ] let @xmath54 be an arbitrary onb for @xmath30 .",
    "the frames for @xmath58 are precisely the families @xmath55 , where @xmath59 is a surjective operator .",
    "let @xmath60 be a frame .",
    "define @xmath61 with @xmath62 as @xmath63 is an onb this operator is well - defined and because @xmath28 is a frame it is surjective .",
    "it is clearly bounded . on the other hand @xmath64 .",
    "therefore @xmath65 is a frame .",
    "[ sec : framinfindim1 ] the frames with @xmath66 elements in @xmath33 are exactly the images of an onb in @xmath67 by a surjective operator .    in the above proof",
    "restrict the onb to @xmath68 , which in this case has dimension @xmath66 .    using this corollary",
    "we know that matrices with full column rank correspond exactly to frames .      the frame operator @xmath69 is a @xmath70 matrix @xmath71 .",
    "this matrix can be represented very easily by    [ sec : frammatr1 ] let @xmath1 and @xmath72 be sequences of elements in @xmath3 and let @xmath73 be the associated frame matrix , then @xmath74    @xmath75    we can also express this term as product of an @xmath76 and a @xmath77 matrix : @xmath78    so the frame operator matrix can be easily calculated either by multiplying @xmath79 or by using corollary [ sec : frammatr1 ] .",
    "let @xmath80 and @xmath81 be frames in @xmath35 with @xmath66 elements . regarding numerical efficiency we see    1 .",
    "@xmath82 needs @xmath83 operations and 2 .",
    "@xmath84 needs @xmath85 operations    this means that the first algorithms is slightly more efficient ( for @xmath86 ) .",
    "+    using the definition of matrix multiplication , it can be easily seen , that a multiplication of a @xmath87 matrix by a @xmath88 matrix needs @xmath89 operations .",
    "this gives the result for @xmath90 .",
    "for @xmath91 we have the complex conjugation of a @xmath92-dimensional vector , which takes @xmath92 operations .",
    "the multiplication of a @xmath76 matrix by a @xmath77 matrix , which takes @xmath93 operations .",
    "this has to be done @xmath66 times .",
    "finally @xmath94 times the @xmath95 matrices are summed , resulting in an overall sum of operations of @xmath96 .      as said before a frame",
    "can be represented as matrix with full column rank .",
    "this is just the synthesis matrix , which therefore is an easy way to represent frames . for an automatic creation of frames",
    ", we can easily create random frames by creating random matrices and checking , if the rank is full .",
    "see the file ` randframe.m ` .",
    "this file uses two parameter , the dimension of the space , @xmath97 and the number of frame elements @xmath66 . in this file also for @xmath98- and @xmath99-dimensional frames the frame elements are plotted plots @xcite is used . ] .",
    "the frame bounds of a frame can be easily found by using an algorithm for the singular value decomposition , the ` svd ` .",
    "it is well known @xcite that the frame bounds are the smallest respectively the biggest eigenvalue of the frame operator @xmath69 . as @xmath100",
    ", we get the frame bounds by using the square of the maximum and minimum of the ` svd ` of @xmath37 .",
    "see for example ` randframe.m ` .",
    "@xmath101.__,title=\"fig:\",scaledwidth=40.0% ]    @xmath101.__,title=\"fig:\",scaledwidth=40.0% ]    [ sec : frameexamp1 ] * :*    1 .   as a non - random example let",
    "@xmath102 this is a frame with bounds @xmath103 , @xmath104 .",
    "see figure [ fig : fframeexampfig1 ] .",
    "2 .   using @xmath105 and @xmath106 in ` randframe.m ` for example produced the matrix @xmath107 this frame has the frame bounds @xmath108 and @xmath109 .",
    "see figure [ fig : fframeexampfig2 ] .",
    "3 .   for @xmath110 and @xmath111 we got as an example @xmath112 as an example of a frame with @xmath113 elements in @xmath114 . it has the frame bounds @xmath115 and @xmath116 .",
    "( for plotting of @xmath99-dimensional frames see ` plot3dframe.m ` . )",
    "see figure [ fig : fframeexampfig3 ] .",
    "@xmath117.__,title=\"fig:\",scaledwidth=40.0% ]    @xmath117.__,title=\"fig:\",scaledwidth=40.0% ]     @xmath118.__,title=\"fig:\",scaledwidth=40.0% ]    @xmath118.__,title=\"fig:\",scaledwidth=40.0% ]    the dual frame can be calculated using an algorithm for the pseudoinverse and typing ` cd = pinv(d ) ` , where @xmath37 is the synthesis matrix of the original frame .",
    "linear algebra tells us that invertible matrices are exactly describing the transformation from one bases to another and unitary operators are exactly representing the change between orthonormal bases .",
    "so `` switching '' from one onb to another is rather straight forward .",
    "but what about frames ? how can a representation be changed from one frame to another in the finite dimensional case ?",
    "let @xmath119 and @xmath120 be two frames .",
    "we want to find a way to switch between the coefficients of these frames .",
    "we extend a well - known property of the gram matrix of a frame and its dual to arrive at    [ sec : framtrans1 ] let @xmath119 and @xmath120 be two frames .",
    "the @xmath87 matrix @xmath121 maps @xmath122 bijectively onto @xmath123 such that @xmath124 and @xmath125     let @xmath126 , there exists @xmath127 such that @xmath128 .",
    "then @xmath129 given @xmath130 for @xmath131 the element @xmath132 is mapped on @xmath133 , as @xmath134 @xmath135 because @xmath130 and @xmath136 is the projection on this space .",
    "so this mapping is surjective .",
    "now suppose @xmath137 for @xmath138 and @xmath139 .",
    "this means that @xmath140 and so the mapping is injective and well - defined .",
    "so analogue to the basis transformation matrix defined in linear algebra , the gram matrix @xmath121can be called the _ frame transformation matrix _",
    "we apply this result on the examples given above .",
    "we want to do the frame transformation from the frame in example [ sec : frameexamp1 ] @xmath101 to the one in example [ sec : frameexamp1 ] @xmath117 :    the cross gram matrix @xmath121 can be calculated very easily . as a matrix clearly @xmath141    in matlab",
    "the above ( easy ) calculation of the cross - gram matrix is done in the file ` crossgram.m ` :    ` g12 = crossgram(pinv(d1)',d2 ) = ( d2')*(pinv(d1 ) ' ) ; `    this can be applied on a random vector @xmath142 to show that the coefficients @xmath143 are mapped to @xmath144 .",
    "see the file ` testframtrans.m ` . to test the numerical stability of this transformation ,",
    "this is repeated @xmath145 times .",
    "the maximum error , i.e. the norm of the difference of the coefficients with the second frame minus the gram matrix times the coefficients of the first frame , is around @xmath146 , where @xmath147 is the smallest non - zero error possible using the given precision . + this can also be used together with the algorithm ` randframe.m ` to compare two randomly created frames .",
    "also in this case it can be nicely seen using the methods above , that the error is around the precision error .",
    "see ` testframtrans2.m ` .",
    "an exemplary output of this algorithm would be :    .... dimension = 8 , number of frame elements , first frame = 19 , second frame = 27 first frame : created a frame with lower bound a = 2.37804 and upper bound b = 11.149 second frame : created a frame with lower bound a = 2.75169 and upper bound b = 20.3146 the maximal error in 100 runs was 2.01704e-014 ....",
    "for an onb @xmath148 if the sum of the elements @xmath149 is finite , the dimension of the space is finite and vice versa is compact if and only if @xmath3 is finite dimensional . ] .",
    "the example [ sec : frameinffin1 ] shows that that is not true anymore with frames , as in this case @xmath150    but taking the square sum of the norms of the elements of a frame for @xmath3 is an equivalent condition for @xmath3 being finite dimensional :    [ sec : frafindim1 ] let @xmath80 be a frame for the hilbert space @xmath3 .",
    "let @xmath151 be an onb for @xmath3 .",
    "then the following statements are equivalent    * @xmath0 * @xmath152 * the space is finite dimensional .",
    "the equivalence of the second and third statements is clear .",
    "@xmath153 on the one hand , when first sum is finite , the summation can be interchanged and this means @xmath154 and so the sum @xmath155 must be finite .    on the other hand when @xmath152 then @xmath156 and so the sum is convergent and the order of the summation can be changed and therefore @xmath157    and as an evident corollaries we find :    [ sec : framdim1 ]",
    "let @xmath28 be a frame and @xmath63 an onb for @xmath3 then @xmath158 or equivalently ( for finite dimensional spaces ) @xmath159    let @xmath160 be a tight frame in the finite dimensional @xmath3 with @xmath161 , then @xmath162 if all frame elements have equal length , i.e. @xmath163 for all @xmath164 , then @xmath165 if this frame is normalized , i.e. @xmath166 , then @xmath167    compare to @xcite , where a possibility to construct such a frame is given .",
    "all algorithms can be found at + ` http://www.kfs.oeaw.ac.at/xxl/finiteframes/finfram1.zip `"
  ],
  "abstract_text": [
    "<S> in this paper we will look at the connection of frames and finite dimensionality . a main focus is to present simple algorithms and make them available online . </S>",
    "<S> the main result is a way to switch between different frames , giving an algorithm to calculate the coefficients of one frame given the analysis of another frame using their cross - gram matrix . </S>",
    "<S> this is a canonical extension of the basic transformation matrix used for orthonormal bases ( onb ) and is therefore called frame transformation . furthermore we will summarize basic properties of frames in finite dimensional spaces </S>",
    "<S> . we will give basic algorithms to use with frames in finite dimensional spaces , useful for basic numerical experiments . </S>",
    "<S> finally we will give a criteria for finite dimensional spaces using frames . </S>",
    "<S> + * keywords * : frames , discrete expansion , matrices , frame transformation , finite dimension , algorithm ; msc : 41a58 , 65f30 ; 15a03 </S>"
  ]
}
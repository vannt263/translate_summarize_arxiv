{
  "article_text": [
    "sensor networks consist of a large number of small , inexpensive sensor nodes .",
    "these nodes have small batteries with limited power and also have limited computational power and storage space .",
    "when the battery of a node is exhausted , it is not replaced and the node dies . when sufficient number of nodes die , the network may not be able to perform its designated task .",
    "thus the life time of a network is an important characteristic of a sensor network and it is tied up with the life time of a node .",
    "various studies have been conducted to increase the life time of the battery of a node by reducing the energy intensive tasks , e.g. , reducing the number of bits to transmit ( @xcite , @xcite ) , making a node to go into power saving modes : ( sleep / listen ) periodically ( @xcite ) , using energy efficient routing ( @xcite , @xcite ) and mac ( @xcite ) .",
    "studies that estimate the life time of a sensor network include @xcite .",
    "a general survey on sensor networks is @xcite which provides many more references on these issues .    in this paper",
    "we focus on increasing the life time of the battery itself by energy harvesting techniques ( @xcite , @xcite ) .",
    "common energy harvesting devices are solar cells , wind turbines and piezo - electric cells , which extract energy from the environment . among these",
    ", solar harvesting energy through photo - voltaic effect seems to have emerged as a technology of choice for many sensor nodes ( @xcite , @xcite ) . unlike for a battery operated sensor node , now there is potentially an _ infinite _ amount of energy available to the node .",
    "hence energy conservation need not be the dominant theme .",
    "rather , the issues involved in a node with an energy harvesting source can be quite different .",
    "the source of energy and the energy harvesting device may be such that the energy can not be generated at all times ( e.g. , a solar cell ) .",
    "however one may want to use the sensor nodes at such times also .",
    "furthermore the rate of generation of energy can be limited .",
    "thus one may want to match the energy generation profile of the harvesting source with the energy consumption profile of the sensor node .",
    "it should be done in such a way that the node can perform satisfactorily for a long time , i.e. , at least energy starvation should not be the reason for the node to die . furthermore , in a sensor network , the mac protocol , routing and relaying of data through the network may need to be suitably modified to match the energy generation profiles of different nodes , which may vary with the nodes .    in the following we survey the literature on sensor networks with energy harvesting nodes .",
    "early papers on energy harvesting in sensor networks are @xcite and @xcite .",
    "a practical solar energy harvesting sensor node prototype is described in @xcite .",
    "a good recent contribution is @xcite .",
    "it provides various deterministic theoretical models for energy generation and energy consumption profiles ( based on @xmath0 traffic models and provides conditions for _ energy neutral operation _ ,",
    ", when the node can operate indefinitely . in @xcite a sensor node is considered which is sensing certain interesting events .",
    "the authors study optimal sleep - wake cycles such that the event detection probability is maximized .",
    "a recent survey is @xcite which also provides an optimal sleep - wake cycle for solar cells so as to obtain qos for a sensor node .",
    "mac protocols for sensor networks are studied in @xcite , @xcite and @xcite .",
    "a general survey is available in @xcite and @xcite .",
    "throughput optimal opportunistic mac protocols are discussed in @xcite .    in this paper",
    "we summarize our recent results ( @xcite ) , on sensor networks with energy harvesting nodes and based on them propose new schemes for scheduling a mac for such networks .",
    "the motivating application is estimation of a random field which is one of the canonical applications of sensor networks .",
    "the above mentioned theoretical studies are motivated by other applications of sensor networks . in our application ,",
    "the sensor nodes sense the random field periodically . after sensing ,",
    "a node generates a packet ( possibly after efficient compression ) .",
    "this packet needs to be transmitted to a central node , possibly via other sensor nodes . in an energy harvesting node , sometimes there may not be sufficient energy to transmit the generated packets ( or even sense ) at regular intervals and then the node may need to store the packets till they are transmitted .",
    "the energy generated can be stored ( possibly in a finite storage ) for later use .",
    "initially we will assume that most of the energy is consumed in transmission only .",
    "we will relax this assumption later on .",
    "we find conditions for energy neutral operation of a node , i.e. , when the node can work forever and its data queue is stable .",
    "we will obtain policies which can support maximum possible data rate .",
    "we also obtain energy management ( power control ) policies for transmission which minimize the mean delay of the packets in the queue .",
    "we use the above energy mangement policies to develop channel sharing policies at a mac ( multiple access channel ) used by energy harvesting sensor nodes .",
    "we are currently investigating appropriate routing algorithms for a network of energy harvesting sensor nodes .",
    "the paper is organized as follows .",
    "section [ model ] describes the model for a single node and provides the assumptions made for data and energy generation .",
    "section [ stability ] provides conditions for energy neutral operation of a node .",
    "we obtain stable , power control policies which are throughput optimal .",
    "section [ opt ] obtains the power control policies which minimize the mean delay via markov decision theory .",
    "a greedy policy is shown to be throughput optimal and provides minimum mean delays for linear transmission .",
    "section [ general ] provides a throughput optimal policy when the energy consumed in sensing and processing is non - negligible . a sensor node with a fading channel is also considered .",
    "section [ simulation ] provides simulation results to confirm our theoretical findings and compares various energy management policies .",
    "section [ tree ] introduces a multiple access channel ( mac ) for energy harvesting nodes .",
    "section [ orthogonal ] provides efficient energy management schemes for orthogonal mac protocols .",
    "sections [ opportunistic ] and [ csma ] consider macs with fading channels ( orthogonal and csma respectively ) .",
    "section [ msimulation ] compares the different mac policies via simulations .",
    "section [ conclude ] concludes the paper .",
    "in this section we present our model for a single energy harvesting sensor node .",
    "we consider a sensor node ( fig . [ fig1 ] ) which is sensing a random field and generating packets to be transmitted to a central node via a network of sensor nodes . the system is slotted . during slot",
    "@xmath1 ( defined as time interval @xmath2 $ ] , i.e. , a slot is a unit of time ) @xmath3 bits are generated by the sensor node .",
    "although the sensor node may generate data as packets , we will allow arbitrary fragmentation of packets during transmission .",
    "thus , packet boundaries are not important and we consider bit strings ( or just fluid ) . the bits @xmath3 are eligible for transmission in @xmath4st slot .",
    "the queue length ( in bits ) at time @xmath1 is @xmath5 .",
    "the sensor node is able to transmit @xmath6 bits in slot @xmath1 if it uses energy @xmath7 .",
    "we assume that transmission consumes most of the energy in a sensor node and ignore other causes of energy consumption ( this is true for many low quality , low rate sensor nodes ( @xcite ) ) .",
    "this assumption will be removed in section [ general ] .",
    "we denote by @xmath8 the energy available in the node at time @xmath1 .",
    "the sensor node is able to replenish energy by @xmath9 in slot @xmath1 .",
    "we will initially assume that @xmath10 and @xmath11 are _ iid _ ( independent , identically distributed ) but will generalize this assumption later .",
    "it is important to generalize this assumption to capture realistic traffic streams and energy generation profiles .    the processes @xmath12 and @xmath13 satisfy @xmath14 where @xmath15 .",
    "this assumes that the data buffer and the energy storage buffer are infinite .",
    "if in practice these buffers are large enough , this is a good approximation .",
    "if not , even then the results obtained provide important insights and the policies obtained often perform well for the finite buffer case .",
    "the function @xmath16 will be assumed to be monotonically non - decreasing .",
    "an important such function is given by shannon s capacity formula @xmath17 for gaussian channels where @xmath18 is a constant such that @xmath19 is the snr .",
    "this is a non - decreasing concave function . at low values of @xmath7 , @xmath20 ,",
    "i.e. , @xmath16 becomes a linear function .",
    "since sensor nodes are energy constrained , this is a practically important case .",
    "thus in the following we limit our attention to linear and concave nondecreasing functions @xmath16 .",
    "we will also assume that @xmath21 which always holds in practice .",
    "many of our results ( especially the stability results ) will be valid when @xmath22 and @xmath23 are stationary , ergodic .",
    "these assumptions are general enough to cover most of the stochastic models developed for traffic ( e.g. , markov modulated ) and energy harvesting .",
    "of course , in practice , statistics of the traffic and energy harvesting models will be time varying ( e.g. , solar cell energy harvesting will depend on the time of day ) .",
    "but often they can be approximated by piecewise stationary processes .",
    "for example , energy harvesting by solar cells could be taken as being stationary over one hour periods .",
    "then our results could be used over these time periods",
    ". often these periods are long enough for the system to attain ( approximate ) stationarity and for our results to remain meaningful .",
    "in section [ stability ] we study the stability of this queue and identify easily implementable energy management policies which provide good performance .",
    "we will obtain a necessary condition for stability . then we present a transmission policy which achieves the necessary condition , i.e. , the policy is throughput optimal . the mean delay for this policy",
    "is not minimal .",
    "thus , we obtain other policies which provide lower mean delay . in the next section",
    "we will consider policies which minimize mean delay .",
    "the proofs of lemma 1 and theorems 1 - 4 are provided in @xcite .",
    "let us assume that we have obtained an ( asymptotically ) stationary and ergodic transmission policy @xmath24 which makes @xmath25 ( asymptotically ) stationary with the limiting distribution independent of @xmath26 .",
    "taking @xmath27 asymptotically stationary seems to be a natural requirement to obtain ( asymptotic ) stationarity of @xmath25 .    in the following @xmath28",
    "will denote generic r.v.s with the distributions of @xmath29 respectively .    * lemma 1 * let @xmath16 be concave nondeceasing and @xmath30 be stationary , ergodic sequences . for @xmath24 to be an asymptotically stationary , ergodic energy management policy that makes @xmath31 asymptotically stationary with a proper stationary distribution @xmath32 , it is necessary that @xmath33 < e_{\\pi } [ g(t ) ] \\leq g(e[y]).$ ] @xmath34    let @xmath35-\\epsilon ) \\label{disp}\\ ] ] where @xmath36 is an appropriately chosen small constant ( see statement of theorem 1 ) . we show that it is a throughput optimal policy , i.e. , using this @xmath7 with @xmath16 satisfying the assumptions in lemma 1 , @xmath25 is asymptotically stationary and ergodic .",
    "* theorem 1 * if @xmath37 are stationary , ergodic and @xmath16 is continuous , nondecreasing , concave then if @xmath38 < g(e[y])$ ] , ( [ disp ] ) makes the queue stable ( with @xmath39 such that @xmath40 < g(e[y ] - \\epsilon)$ ] ) , i.e. , it has a unique , stationary , ergodic distribution and starting from any initial distribution , @xmath5 converges in total variation to the stationary distribution .",
    "henceforth we denote the policy ( [ disp ] ) by to .    from results on gi / gi/1 queues ( @xcite ) , if @xmath22 are _ iid _ , @xmath38 < g(e[y ] ) , t_k = min(e_k , e[y ] - \\epsilon)$ ] and @xmath41 < \\infty $ ] for some @xmath42 then the stationary solution @xmath12 of ( [ eqn1 ] ) satisfies @xmath43 < \\infty$ ] .    taking @xmath44 for all @xmath1 will provide stability of the queue if @xmath38 < e[g(y)]$ ] .",
    "if @xmath16 is linear then this coincides with the necessary condition .",
    "if @xmath16 is strictly concave then @xmath45 < g(e[y ] ) $ ] unless @xmath46 $ ] . thus @xmath44 provides a strictly smaller stability region .",
    "we will be forced to use this policy if there is no buffer to store the energy harvested .",
    "this shows that storing energy allows us to have a larger stability region .",
    "we will see in section [ simulation ] that storing energy can also provide lower mean delays .    although to is a throughput optimal policy , if @xmath5 is small , we may be wasting some energy .",
    "thus , it appears that this policy does not minimize mean delay .",
    "it is useful to look for policies which minimize mean delay .",
    "based on our experience in @xcite , the greedy policy    @xmath47    where @xmath48 , looks promising . in theorem 2",
    ", we will show that the stability condition for this policy is @xmath38 < e[g(y ) ] $ ] which is optimal for linear @xmath16 but strictly suboptimal for a strictly concave @xmath16 ( just as the policy @xmath44 discussed above ) .",
    "we will show in section [ opt ] that when @xmath16 is linear , ( [ eqn5 ] ) is not only throughput optimal , it also minimizes long term mean delay .    for concave @xmath16",
    ", we will show via simulations that ( [ eqn5 ] ) provides less mean delay than to at low load .",
    "however since its stability region is smaller than that of the to policy , at @xmath38 $ ] close to @xmath45 $ ] , the greedy performance rapidly deteriorates .",
    "thus it is worthwhile to look for some other good policy .",
    "notice that the to policy wastes energy if @xmath49 - \\epsilon)$ ] .",
    "therfore , we can improve upon it by saving the energy @xmath50-\\epsilon - g^{-1}(q_k))$ ] and using it when the @xmath5 is greater than @xmath51-\\epsilon)$ ] .",
    "however for @xmath16 a log function , using a large amount of energy @xmath52 is also wasteful even when @xmath53 .",
    "taking into account these facts we improve over the to policy as @xmath54 + 0.001 ( e_k - cq_k)^+ ) ) \\label{onestar}\\ ] ] where @xmath55 is a positive constant .",
    "the improvement over the to also comes from the fact that if @xmath8 is large , we allow @xmath56 $ ] but only if @xmath5 is not very large .",
    "the constants 0.99 and 0.001 were chosen by trial and error from simulations after experimenting with different scenarios .",
    "we will see in section [ simulation ] via simulations that this policy , to be denoted by mto can indeed provide lower mean delays than to at loads above @xmath45 $ ] .",
    "one advantage of ( [ disp ] ) over ( [ eqn5 ] ) and ( [ onestar ] ) is that while using ( [ disp ] ) , after some time @xmath57-\\epsilon$ ] .",
    "also , at any time , either one uses up all the energy or uses @xmath58-\\epsilon$ ] . thus one can use this policy even if exact information about @xmath8 is not available ( measuring @xmath8 may be difficult in practice ) .",
    "in fact , ( [ disp ] ) does not need even @xmath5 while ( [ eqn5 ] ) either uses up all the energy or uses @xmath59 and hence needs only @xmath5 exactly .",
    "now we show that under the greedy policy ( [ eqn5 ] ) the queueing process is stable when @xmath38 < e[g(y)]$ ] . in next few results",
    "( theorems 2 and 3 ) we assume that the energy buffer is finite , although large .",
    "for this case lemma 1 and theorem 1 also hold under the same assumptions with slight modifications in their proofs .    * theorem 2 * if the energy buffer is finite , i.e. , @xmath60 ( but @xmath61 is large enough ) and @xmath38 <",
    "e[g(y ) ] $ ] then under the greedy policy ( [ eqn5 ] ) , @xmath62 has an ergodic set .",
    "@xmath34    the above result will ensure that the markov chain @xmath63 is ergodic and hence has a unique stationary distribution if @xmath64 is irreducible .",
    "a sufficient condition for this is @xmath65 < 1 $ ] and @xmath66 < 1 $ ] because then the state @xmath67 can be reached from any state with a positive probability . in general , @xmath63 can have multiple ergodic sets .",
    "then , depending on the initial state , @xmath63 will converge to one of the ergodic sets and the limiting distribution depends on the initial conditions .",
    "in this section we choose @xmath7 at time @xmath1 as a function of @xmath5 and @xmath8 such that @xmath68\\ ] ] is minimized where @xmath69 is a suitable constant .",
    "the minimizing policy is called @xmath70-discount optimal . when @xmath71 , we minimize @xmath72.\\ ] ] this optimizing policy is called average cost optimal . by little s law ( @xcite )",
    "an average cost optimal policy also minimizes mean delay . if for a given @xmath73 , the optimal policy @xmath7 does not depend on the past values , and is time invariant , it is called a stationary markov policy",
    ".    if @xmath22 and @xmath23 are markov chains then these optimization problems are markov decision problems ( mdp ) . for simplicity , in the following we consider these problems when @xmath22 and @xmath23 are _",
    "iid_. we obtain the existence of optimal @xmath70-discount and average cost stationary markov policies .",
    "* theorem 3 * if @xmath16 is continuous and the energy buffer is finite , i.e. , @xmath74 then there exists an optimal @xmath70-discounted markov stationary policy .",
    "if in addition @xmath38 < g(e[y])$ ] and @xmath75 < \\infty$ ] , then there exists an average cost optimal stationary markov policy .",
    "the optimal cost @xmath76 does not depend on the initial state . also , then the optimal @xmath70-discount policies tend to an optimal average cost policy as @xmath77 .",
    "furthermore , if @xmath78 is the optimal @xmath70-discount cost for the initial state @xmath79 then @xmath80 @xmath34    in section [ stability ] we identified a throughput optimal policy when @xmath16 is nondecreasing , concave .",
    "theorem 3 guarantees the existence of an optimal mean delay policy .",
    "it is of interest to identify one such policy also . in general",
    "one can compute an optimal policy numerically via value iteration or policy iteration but that can be computationally intensive ( especially for large data and energy buffer sizes ) . also it does not provide any insight and requires traffic and energy profile statistics . in section [ stability ] we also provided a greedy policy ( [ eqn5 ] ) which is very intuitive , and is throughput optimal for linear @xmath16 .",
    "however for concave @xmath16 ( including the cost function @xmath81 it is _ not _ throughput optimal and provides low mean delays only for low load .",
    "next we show that it provides minimum mean delay for linear @xmath16 .",
    "* theorem 4 * the greedy policy ( [ eqn5 ] ) is @xmath70-discount optimal for @xmath82 when @xmath83 for some @xmath84 .",
    "it is also average cost optimal .",
    "@xmath34    the fact that greedy is @xmath70-discount optimal as well as average cost optimal implies that it is good not only for long term average delay but also for transient mean delays .",
    "in this section we consider two generalizations .",
    "first we will extend the results to the case of fading channels and then to the case where the sensing and the processing energy at a sensor node are non - negligible with respect to the transmission energy .    in case of fading channels , we assume flat fading during a slot . in slot @xmath1 the channel gain is @xmath85 .",
    "the sequence @xmath86 is assumed stationary , ergodic , independent of the traffic sequence @xmath22 and the energy generation sequence @xmath23 .",
    "then if @xmath7 energy is spent in transmission in slot @xmath1 , the @xmath25 process evolves as @xmath87 if the channel state information ( csi ) is not known to the sensor node , then @xmath7 will depend only on @xmath73 .",
    "one can then consider the policies used above .",
    "for example we could use @xmath88-\\epsilon)$ ] .",
    "then the data queue is stable if @xmath38 < e[g(h(e[y]-\\epsilon))]$ ] .",
    "we will call this policy unfaded to .",
    "if we use greedy ( [ eqn5 ] ) , then the data queue is stable if @xmath38 < e[g(hy)]$ ]",
    ".    if csi @xmath85 is available to the node at time @xmath1 , then the following are the throughput optimal policies . if @xmath16 is linear , then @xmath89 for some @xmath90 .",
    "then , if @xmath91 and @xmath92 , the optimal policy is : @xmath93-\\epsilon)/p(h=\\bar{h})$ ] and @xmath94 otherwise . thus if @xmath95 can take an arbitrarily large value with positive probability , then @xmath96 = \\infty$ ] at the optimal solution .",
    "if @xmath97 , then the water filling ( wf ) policy @xmath98 where @xmath99 is obtained from the average power constraint @xmath100 = e[y ] - \\epsilon$ ] , is throughput optimal . this is because it maximizes @xmath101 $ ] with the given constraints .    both of the above policies can be improved as before , by not wasting energy when there is not enough data . as in ( [ onestar ] ) in section [ stability ] , we can further improve wf by taking @xmath102 we will call it mwf . these policies will not minimize mean delay . for that , we can use the mdp framework used in section [ opt ] and numerically compute the optimal policies .",
    "till now we assumed that all the energy that a node consumes is for transmission .",
    "however , sensing , processing and receiving ( from other nodes ) also require significant energy , especially in more recent higher end sensor nodes ( @xcite ) .",
    "since we have been considering a single node so far , we will now include the energy consumed by sensing and processing only . for simplicity",
    ", we will assume that the node is always in one energy mode ( e.g. , lower energy modes ( @xcite ) available for sensor nodes will not be considered ) .",
    "if a sensor node with an energy harvesting system can be operated in energy neutral operation in normal mode itself ( i.e. , it satisfies the conditions in lemma 1 ) , then there is no need to have lower energy modes .",
    "otherwise one has to resort to energy saving modes .",
    "we will assume that @xmath103 is the energy consumed by the node for sensing and processing in slot @xmath1 .",
    "unlike @xmath7 ( which can vary according to @xmath5 ) , @xmath104 can be considered a stationary , ergodic sequence .",
    "the rest of the system is as in section [ model ] .",
    "now we briefly describe a energy management policy which is an extension of the to policy in section [ stability ]",
    ". this can provide an energy neutral operation in the present case .",
    "improved / optimal policies can be obtained for this system also but will not be discussed due to lack of space .",
    "let @xmath55 be the minimum positive constant such that @xmath38 < g(c)$ ] . then if @xmath105 < e[y]-\\delta $ ] , ( where @xmath106 is a small positive constant ) the system can be operated in energy neutral operation : if we take @xmath107 ( which can be done with high probability for all @xmath1 large enough ) , the process @xmath12 will have a unique stationary , ergodic distribution and there will always be energy @xmath103 for sensing and processing for all @xmath1 large enough .",
    "the result holds if @xmath108 is an ergodic stationary sequence .",
    "the arguments to show this are similar to those in section [ stability ] and are omitted .",
    "when the channel has fading , we need @xmath38 < e[g(ch ) ] $ ] in the above paragraph .",
    "in this section , we compare the different policies we have studied via simulations .",
    "the @xmath16 function is taken as linear @xmath109 or as @xmath110 .",
    "the sequences @xmath22 and @xmath23 are _",
    "iid_. ( we have also done limited simulations when @xmath22 and @xmath23 are autoregressive and found that conclusions drawn in this section continue to hold ) .",
    "we consider the cases when @xmath111 and @xmath112 have truncated poisson , exponential , erlang or hyperexponential distributions .",
    "the policies considered are : greedy , to , @xmath113 , mto ( with @xmath114 ) and the mean delay optimal . at the end , we will also consider channels with fading . for fading channels we compare unfaded to and mto against fading to and fading mto . for the linear @xmath16",
    ", we already know that the greedy policy is throughput optimal as well as mean delay optimal .    ;",
    "finite , quantized data and energy buffers ; @xmath115 : poisson truncated at 5 ; @xmath58=1,e[g(y)]=0.92,g(e[y])=1 $ ] ]    ; @xmath115 : exponential ; @xmath58=1,e[g(y)]=10,g(e[y])=10 $ ] ]    ; @xmath115 : exponential ; @xmath58=10,e[g(y)]=2.01,g(e[y])=2.4 $ ] ]    ; @xmath115 : hyperexponential(5 ) ; @xmath58=1,e[g(y)]=10,g(e[y])=10 $ ] ]    ; @xmath115 : erlang(5 ) ; @xmath58=1,e[g(hy)]=0.62,e[g(he[y])]=0.64 $ ] ; wf , mod .",
    "wf stable for @xmath38<0.70 $ ] ]    the mean queue lengths for the different cases are plotted in figs .",
    "[ plot1]-[plot8 ] .    in fig .",
    "[ plot1 ] , we compare greedy , to and mean - delay optimal ( op ) policies for nonlinear @xmath16 . the op was computed via policy iteration . for numerical computations ,",
    "all quantities need to be finite .",
    "so we took data and energy buffer sizes to be @xmath116 and used quantized versions of @xmath5 and @xmath8 .",
    "the distribution of @xmath111 and @xmath112 is poisson truncated at @xmath117 .",
    "these changes were made only for this example .",
    "now @xmath51 ) = 1 $ ] and @xmath45 = 0.92 $ ] .",
    "we see that the mean queue length of the three policies are negligible till @xmath38=0.8 $ ] .",
    "after that , the mean queue length of the greedy policy rapidly increases while performances of the other two policies are comparable till @xmath118 ( although from @xmath38 = 0.6 $ ] till close to @xmath118 , mean queue length of to is approximately double of op ) . at low loads , greedy has less mean queue length than to .",
    "[ plot2 ] considers the case when @xmath111 and @xmath112 are exponential and @xmath16 is linear .",
    "now @xmath119 = 1 $ ] and @xmath51 ) = e[g(y ) ] = 10.$ ] now all the policies considered are throughput optimal but their delay performances _",
    "differ_. we observe that the policy @xmath113 ( henceforth called unbuffered ) has the worst performance .",
    "next is the to .",
    "[ plot4 ] provides the above results for @xmath16 nonlinear , when @xmath111 and @xmath112 are exponential .",
    "now , as before , @xmath113 is the worst .",
    "the greedy performs better than the other policies for low values of @xmath38 $ ] . but",
    "greedy becomes unstable at @xmath45=2.01 $ ] while the throughput optimal policies become unstable at @xmath51 ) = 2.40 $ ] .",
    "now for higher values of @xmath38 $ ] , the modified to performs the best and is close to greedy at low @xmath38 $ ] .    figs .",
    "[ plot7]-[plot8 ] provide results for fading channels .",
    "the fading process @xmath86 is _ iid _ taking values @xmath120 and @xmath121 with probabilities @xmath122 and @xmath123 respectively .",
    "[ plot7 ] is for linear @xmath16 and fig .",
    "[ plot8 ] is for nonlinear @xmath16 .",
    "the policies compared are unbuffered , greedy , unfaded to ( [ disp ] ) and fading to . in fig .",
    "[ plot8 ] , we have also considered modified unfaded to ( [ onestar ] ) and modified fading to ( mwf ) with @xmath114 ( [ twostar ] ) .    in fig .",
    "[ plot7 ] , @xmath111 and @xmath112 have hyperexponential distributions . the distribution of r.v .",
    "@xmath111 is a mixture of 5 exponential distributions with means @xmath38/4.9 , 2e[x]/4.9 , 3e[x]/4.9 , 6e[x]/4.9 $ ] and @xmath124/4.9 $ ] and probabilities @xmath125 and @xmath123 respectively .",
    "the distribution of @xmath112 is obtained in the same way .",
    "now @xmath58 = 1 $ ] , @xmath126=10 $ ] and @xmath127)]=10 $ ] .",
    "the stability region of fading to is @xmath38<e[g(\\bar{h}y ) ] = 22.0 $ ] while that of the other three policies is @xmath38<10 $ ] .",
    "however , mean queue length of fading to is larger from the beginning till almost 10 .",
    "this is because in fading to , we transmit only when @xmath128 which has a small probability ( @xmath129 ) .",
    "[ plot8 ] considers nonlinear @xmath16 with @xmath115 erlang distributed .",
    "also , @xmath58=1 , e[g(hy)]=0.62 , e[g(he[y ] ) ] = 0.64 $ ] .",
    "now we see that the stability region of unbuffered and greedy is the smallest , then of to and mto while wf and mwf provide the largest region and are stable for @xmath38<0.70 $ ] .",
    "mto and mwf provide improvements in mean queue lengths over to and wf .",
    "in a sensor network , all the nodes need to transmit their data to a fusion node .",
    "thus , for this a natural network to consider is a tree ( @xcite ) . in the present scenario of nodes with energy harvesting sources , selection of a tree",
    "can depend on the energy profiles of different nodes .",
    "this will be subject of another study .",
    "here we assume that an appropriate tree has been formed and will concentrate on the link layer .",
    "an important building block for this network is a multiple access channel . in sensor networks contention based ( e.g. , csma ) and contention - free ( tdma / cdma / fdma ) mac protocols",
    "are considered suitable ( @xcite , @xcite ) .",
    "in fact for estimation of a random field , contention - free protocols are more appropriate .",
    "we consider the case where @xmath130 nodes with data queues @xmath131 are sharing a wireless channel .",
    "each queue generates its traffic , stores in a queue and transmits as in section [ model ] . also , each node has its own energy harvesting mechanism .",
    "the traffic generated at different queues and their energy mechanisms are assumed independent of each other .",
    "let @xmath132 and @xmath133 be the sequences corresponding to node @xmath134 . for simplicity we will assume @xmath135 and @xmath136 to be _ iid _ although these assumptions can be weakened as for a single queue .",
    "as mentioned at the end of section [ general ] , the energy consumption @xmath133 can be taken care of if we simply replace @xmath137 $ ] by @xmath137 - e[z(i)]$ ] in our algorithms . in the following",
    "we do that and write it as @xmath137 $ ] only ( and hence ignore @xmath138 ) .",
    "the @xmath130 queues can share the channel in different ways .",
    "the stability region of @xmath139 and optimal ( good ) transmit policies depend upon the sharing mechanism used .",
    "we consider a few commonly used scenarios in the rest of the paper .",
    "the @xmath130 sensor nodes use tdma / orthogonal cdma / fdma / ofdma to transmit .",
    "then the @xmath130 queues become independent , decoupled queues and can be considered separately .",
    "thus , the transmission policies developed in previous sections for a single queue can be used here . in the following",
    "we explain them in the context of tdma .",
    "if the queues have to use the channel in a tdma fashion then necessary conditions for stability of the @xmath130 queues are : there exist @xmath140 and @xmath141 such that @xmath142 < \\alpha_i \\ g_i \\ \\left ( \\frac{e[y(i)]}{\\alpha_i } \\right ) , \\ \\",
    "i=1,2 , ... , n ,   \\label{meqn6}\\ ] ] where @xmath143 is the energy to bit mapping for @xmath144 . a stable policy for each queue will be as in section [ stability ] :",
    "@xmath144 is given @xmath145 fraction of slots ( on a long term basis ) and it uses energy @xmath146 - \\epsilon)/ \\alpha_i$ ] whenever it transmits .",
    "for better delay performance , the slots allocated to different queues should be uniformly spaced .",
    "we can improve on the mean delay by using ( [ onestar ] ) .",
    "it is possible that more than one set of @xmath147 satisfy the stability condition ( [ meqn6 ] )",
    ". then one should select the values which minimize a cost function , ( say ) weighted sum of mean delays .",
    "now we discuss the mac with fading .",
    "let @xmath148 be the channel gain process for @xmath144 .",
    "it is assumed stationary , ergodic and independent of the fading process for @xmath149 .",
    "we discuss opportunistic scheduling for the contention free mac .",
    "we will study the csma based algorithms in the next section .",
    "if we assume that each of @xmath144 has infinite data backlog , then the policy that maximizes the sum of throughputs for @xmath150 and for symmetric statistics ( i.e. , each @xmath151 has same statistics and all @xmath137 $ ] are same ) is to choose @xmath152 @xmath153 in slot @xmath1 and use @xmath154 via the water - filling formula ( [ fto ] ) with the average power constraint @xmath155 = n   e[y(i^*_k)-\\epsilon].\\ ] ] this is an extension of an algorithm in @xcite to the energy harvesting nodes .",
    "a modification of this policy is available in @xcite for asymmetric case .",
    "if @xmath16 is linear , then for the symmetric case , a channel is selected only if it has the highest possible gain ( for @xmath95 bounded ) .",
    "if more than one channel is in the best state , select one of them with equal probability .",
    "although ( [ meqn10 ] ) maximizes throughput , it may be unfair to different queues and may not provide the qos .",
    "furthermore , in our setup infinite backlog is not a realistic assumption . without this assumption a throughput optimal policy ( in the class of policies which use constant powers ) is to choose queue @xmath156-\\epsilon}{\\alpha(i ) } \\right ) \\right ) \\right)\\ ] ] and then use @xmath157 - \\epsilon ) / \\alpha(i^*_k)$ ] . here",
    "@xmath158 is the fraction of time slots assigned to @xmath159 .",
    "however now we do not know @xmath158 and this may be estimated ( see the end of this section ) .",
    "if @xmath158 is replaced with the true value , then stability of the queues in the mac follows from @xcite if the fading states take values in a finite set and the system satisfies the following condition .",
    "let there exist a function @xmath160 which picks one of the queues as a function of @xmath161 where @xmath162 - \\epsilon}{\\alpha_i } \\right)$ ] , @xmath163 $ ] and @xmath164 is the stationary distribution of @xmath165 . then",
    "if @xmath166 < \\sum r_i 1 \\ { f(r_1 , ... , r_n)=i \\ } \\pi ( r_1 , ... , r_n)$ ] for each @xmath134 , the system is stable",
    ". this policy tries to satisfy the traffic requirements of different nodes but may not be delay optimal . based on experience in @xcite , a greedy policy @xmath167-\\epsilon}{\\alpha(i ) }",
    "\\right),q_k(i ) \\right ) \\right ) \\right)\\ ] ] provides better mean delays .",
    "however , it is throughput optimal only for symmetric traffic statistics and when @xmath137 = e[y(j)],$ ] for all @xmath168 .",
    "but it can be made throughput optimal ( as ( [ meqn11 ] ) ) while still retaining ( partially ) its mean delay performance as follows .",
    "choose an appropriately large positive constant @xmath169 .",
    "if none of @xmath170 is greater than @xmath169 , use ( [ meqn12 ] ) ; otherwise , on the set @xmath171 , use ( [ meqn11 ] ) .",
    "we call this modified greedy policy",
    ".    the mean delay of the above policies can be further improved , if instead of @xmath172 - \\epsilon ) / \\alpha(i)$ ] , we use ( [ onestar ] ) . but the stability region remains same .",
    "the policies ( [ meqn11 ] ) and ( [ meqn12 ] ) can be further improved if instead of using @xmath173 - \\epsilon$ ] , we use waterfilling for @xmath16 in ( [ allert3 ] ) .",
    "of course we reduce transmit power as in ( [ onestar ] ) if there is not enough data to transmit .",
    "now not only the mean delays reduce but the stability region also enlarges .    the policies ( [ meqn11 ] ) , ( [ meqn12 ] ) and modified greedy provide good performance , require minimal information ( only @xmath137 $ ] ) , are easy to implement and have low computational requirements .",
    "in addition they naturally adapt to changing traffic and channel conditions .",
    "in ( [ meqn11])-([meqn12 ] ) we need @xmath174 to obtain the energy @xmath7 .",
    "but unlike for tdma , @xmath175 is not available in these algorithms and depends on the algorithm used .",
    "thus , in these algorithms we use a simple variant of the lms ( least mean square ) algorithm ( @xcite ) to estimate @xmath174 :    initially start with guess @xmath176 run the algorithm for ( say ) @xmath177 number of slots .",
    "each node @xmath134 computes the fraction @xmath178 of slots it gets and recomputes @xmath179 where @xmath180 is a small postive constant .    at any time",
    "the current estimate of @xmath174 is used by the algorithms .",
    "since zigbee and 802.11 use csma , we discuss opportunistic scheduling for csma also . as against ( [ meqn11])-([meqn12 ] ) , this is a completely decentralized algorithm .",
    "this is used by zhao and tong @xcite . the basic idea in @xcite",
    "is to make the back - off mechanism in a node to be a function of the channel state of that node .",
    "the nodes that are to be given priority are given smaller back - off time .",
    "this mechanism has also been used in ieee 802.11e to provide priority to voice and video traffic . in this section",
    "we take this idea further by also including the effect of queue lengths and power control in deciding the back - off interval as against only the channel state in @xcite .",
    "let @xmath181 be a nonincreasing function with values in @xmath182 $ ] where @xmath183 is the maximum allowed back - off time in slots .",
    "if @xmath95 is the channel gain in a slot then in @xcite the back - off time is taken to be @xmath184 .    in our setup , to use opportunistic scheduling in csma , we use the above mentioned monotonic function @xmath181 on each of the sensor nodes contending for the channel .",
    "the @xmath144 uses the back off time of @xmath185-\\epsilon)}{\\alpha(i ) } \\right ) \\right).\\ ] ] when a node gets the channel , it will transmit a complete packet and use energy per slot as @xmath186 -\\epsilon ] / \\alpha(i^*_k).\\ ] ] now we are making the usual assumption that the channel gains stay constant during the transmission of a packet .",
    "we can use ( [ onestar ] ) to improve performance .    using the ideas in the last section we can develop better algorithms than ( [ meqn14])-([meqn15 ] ) . indeed , with ( [ meqn14 ] ) , instead of ( [ meqn15 ] )",
    ", we can use waterfilling ( for @xmath16 in ( [ allert3 ] ) ) .",
    "we can also improve over ( [ meqn14 ] ) by using , for back - off time of @xmath134th node , @xmath187 - \\epsilon}{\\alpha(i ) } \\right ) \\right)\\ ] ] which takes care of the traffic requirements of different nodes .",
    "we can also use the ( modified ) greedy in ( [ meqn12 ] ) .",
    "the @xmath174 in the above algorithms will be computed via lms in ( [ meqn13 ] ) .",
    "we will compare the performance of these algorithms via simulations in section [ msimulation ] .",
    "an advantage of above algorithms over the algorithms in section [ opportunistic ] are that these are completely decentralized : each node uses only its own queue length , channel state and @xmath137 $ ] to decide when to transmit . the algorithms in section [ opportunistic ] require a central controller ( may be a cluster head ) for implementation .",
    "centralized algorithms have also been considered in sensor networks and provide better performance .",
    "in this section for simplicity , we simulate the system under symmetric conditions , apply the different algorithms , and compare their performances .",
    "we use @xmath188 .",
    "the fading of each channel changes from slot to slot independently ; @xmath189 are _ iid _ with values 0.1 , 0.6 , 1.8 and 5 with probabilities 4/12 , 5/12 , 2/12 and 1/12 .",
    "the @xmath190 and @xmath191 are iid expontential .",
    "the lms ( [ meqn13 ] ) was taken with @xmath192 and the @xmath193s were updated after 30 - 50 slots .                for orthogonal channels , under symmetric conditions with 3 queues , average queue lengths",
    "are shown in fig .",
    "[ orth ] for to ( [ meqn11 ] ) , greedy ( [ meqn12 ] ) , tdma , greedy with water - filling and tdma with water - filling policies .",
    "the @xmath189 are _ iid _ exponential with mean 1 .",
    "for symmetric conditions , greedy is throughput optimal and hence modified greedy is not implemented .",
    "we see that tdma becomes unstable much before the other policies , and that its average queue length is much worse even when it is stable .",
    "greedy performs better than to near the stability boundary which is @xmath38=0.39 $ ] .",
    "water - filling improves the stability region of tdma as well as greedy .    for csma , figs .",
    "[ delay ] and [ pl ] show mean delays and packet loss probabilities under symmetric conditions with 10 queues and with normal exponential backoff , zhao - tong @xcite , our policy ( [ meqn16 ] ) and our policy with water - filling ( with @xmath194 and @xmath195 at @xmath196 assumes values 0.1,0.5,1.0,2.2 for time fractions 0.1,0.3,0.4,0.2 ) .",
    "we simulated the 10 queues in continuous time .",
    "also , @xmath58=1 $ ] and the data packets of unit size arrive at each queue as poisson streams .",
    "we see that opportunistic policies improve mean delays substantially .",
    "we have considered sensor nodes with energy harvesting sources , deployed for random field estimation .",
    "throughput optimal and mean delay optimal energy management policies for single nodes are identified which can make them work in energy neutral operation .",
    "next these results are extended to fading channels and when energy at the sensor node is also consumed in sensing and data processing .",
    "similarly we can include leakage / wastage of energy when it is stored in the energy buffer and when it is extracted .",
    "finally these policies are used to develop efficient mac protocols for such nodes . in particular versions of tdma , opportunistic macs for fading channels and csma",
    "are developed .",
    "their performance is compared via simulations .",
    "it is shown that opportunistic policies can substantially improve the performance .",
    "i. f. akyildiz , w. su , y. sankara subramaniam and e. cayirei ,  a survey on sensor networks \" , _ ieee communications magazine _ , vol 40 , 2002 , pp .",
    "102 - 114 .",
    "s. asmussen ,  applied probability and queues \" , _ john wiley and sons_,n.y . ,",
    "s. j. baek , g. veciana and x. su ,  minimizing energy consumption in large - scale sensor networks through distributed data compression and hierarchical aggregation \" , _ ieee jsac _ ,",
    "vol 22 , 2004 , pp .",
    "1130 - 1140 .",
    "d. niyato , e. hossain , m. m. rashid and v. k. bhargava ,  wireless sensor networks with energy harvesting technologies : a game - theoretic approach to optimal energy management \" , _ ieee wireless communications _ , aug .",
    "2007 , pp .",
    "90 - 96 .",
    "s. ratnaraj , s. jagannathan and v. rao ,  optimal energy - delay subnetwork routing protocol for wireless sensor networks \" , _ proc .",
    "of ieee conf . on networking , sensing and control _ , april 2006 , pp .",
    "787 - 792 .",
    "q. zhao and l. tong ,  opportunistic carrier sensing for energy - efficient information retrieval in sensor networks \" , _ eurasip journal on wireless communications and networking _ , vol . 2 , 2005 , pp .",
    "231 - 241 ."
  ],
  "abstract_text": [
    "<S> we study sensor networks with energy harvesting nodes . </S>",
    "<S> the generated energy at a node can be stored in a buffer . </S>",
    "<S> a sensor node periodically senses a random field and generates a packet . </S>",
    "<S> these packets are stored in a queue and transmitted using the energy available at that time at the node . for such networks </S>",
    "<S> we develop efficient energy management policies . </S>",
    "<S> first , for a single node , we obtain policies that are throughput optimal , i.e. , the data queue stays stable for the largest possible data rate . </S>",
    "<S> next we obtain energy management policies which minimize the mean delay in the queue . </S>",
    "<S> we also compare performance of several easily implementable sub - optimal policies . </S>",
    "<S> a greedy policy is identified which , in low snr regime , is throughput optimal and also minimizes mean delay . next using the results for a single node </S>",
    "<S> , we develop efficient mac policies .    </S>",
    "<S> * keywords : * optimal energy management policies , energy harvesting , sensor networks , mac protocols . </S>"
  ]
}
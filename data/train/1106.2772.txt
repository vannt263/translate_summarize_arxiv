{
  "article_text": [
    "let @xmath0 be a simple undirected graph with vertex set @xmath11 and edge set @xmath1 .",
    "a subset @xmath12 of @xmath1 is an _ induced matching _ in @xmath0 if the @xmath0-distance of every pair of edges @xmath13 , @xmath14 , is at least two , i.e. , @xmath15 and there is no edge @xmath16 with @xmath17 and @xmath18 .",
    "a subset @xmath19 is a _ dominating edge set _ if every edge @xmath20 shares an endpoint with some edge @xmath21 , i.e. , if @xmath22 .",
    "a _ dominating induced matching _",
    "( _ d.i.m .",
    "_ for short ) is an induced matching which is also a dominating edge set .",
    "let us say that _ an edge @xmath23 is matched by @xmath12 _ if @xmath24 or there is @xmath21 with @xmath25 .",
    "thus , @xmath12 is a d.i.m . of @xmath0 if and only if every edge of @xmath0 is matched by @xmath12 but no edge is matched twice .",
    "the _ dominating induced matching problem _",
    "( _ dim _ , for short ) asks whether a given graph has a dominating induced matching .",
    "this can also be seen as a special 3-colorability problem , namely the partition into three independent vertex sets @xmath26 such that @xmath27 $ ] is an induced matching : if @xmath19 is a d.i.m .",
    "of @xmath0 then the vertex set has the partition @xmath28 with independent vertex set @xmath29 , and independent sets @xmath30 with @xmath31 .    dominating induced matchings",
    "are also called _ edge packings _ in some papers , and dim is known as the _ efficient edge domination problem _ ( _ eed _ for short ) . a brief history of eed as well as some applications in the fields of resource allocation , encoding theory and network routing are presented in @xcite and @xcite",
    ".    grinstead et al .",
    "@xcite show that eed is @xmath5-complete in general .",
    "it remains hard for bipartite graphs @xcite .",
    "in particular , @xcite shows the intractability of eed for planar bipartite graphs and @xcite for very restricted bipartite graphs with maximum degree three ( the restrictions are some forbidden subgraphs ) . in @xcite",
    ", it is shown that the problem remains @xmath5-complete for planar bipartite graphs with maximum degree three but is solvable in polynomial time for hole - free graphs ( which was an open problem in @xcite and is still mentioned as an open problem in @xcite ; actually , @xcite mention that the complexity of dim is an open problem for weakly chordal graphs which are a subclass of hole - free graphs ) .    in @xcite , as another open problem , it is mentioned that for any @xmath7 , the complexity of dim is unknown for the class of @xmath6-free graphs .",
    "note that the complexity of the related problems maximum independent set and maximum induced matching is unknown for @xmath32-free graphs , and a lot of work has been done on subclasses of @xmath32-free graphs .    in this paper , we show that for @xmath10-free graphs , dim is solvable in linear time .",
    "actually , we consider the edge - weighted optimization version of dim , namely the _ minimum dominating induced matching problem _ ( _ mdim _ ) , which asks for a dominating induced matching @xmath12 in @xmath33 of minimum weight with respect to some given weight function @xmath34 ( if existent ) .    for @xmath32-free graphs ,",
    "dim is solvable in time @xmath35 as a consequence of the fact that the clique - width of ( @xmath32,gem)-free graphs is bounded @xcite and a clique - width expression can be constructed in time @xmath35 @xcite . in @xcite",
    ", it is mentioned that dim is expressible in a certain kind of monadic second order logic , and in @xcite , it was shown that such problems can be solved in linear time on any class of bounded clique - width assuming that the clique - width expressions are given or can be determined in the same time bound .",
    "it is well known that the clique - width of cographs ( i.e. , @xmath36-free graphs ) is at most two ( and such clique - width expressions can be determined in linear time ) and thus the dim problem can be solved in linear time on cographs . in section [ sec : cographs ] we give a simple characterization of cographs having a d.i.m .",
    "our algorithm for @xmath10-free graphs is based on a structural analysis of such graphs having a d.i.m .",
    "it is robust in the sense of @xcite since it is not required that the input graph is @xmath10-free ; our algorithm either determines an optimal d.i.m .",
    "correctly or finds out that @xmath0 has no d.i.m .",
    "or is not @xmath10-free .",
    "let @xmath0 be a finite undirected graph without loops and multiple edges .",
    "let @xmath11 denote its vertex set and @xmath1 its edge set ; let @xmath37 and @xmath38 .",
    "for @xmath39 , let @xmath40 denote the _ open neighborhood of @xmath41 _ , and let @xmath42:=n(v ) \\cup \\{v\\}$ ] denote the _ closed neighborhood of @xmath41_. if @xmath16 , we also say that @xmath43 and @xmath44 _ see each other _ , and if @xmath45 , we say that @xmath43 and @xmath44 _ miss each other_. a vertex set @xmath46 is _ independent _ ( or _ stable _ ) in @xmath0 if for every pair of vertices @xmath47 , @xmath45 .",
    "a vertex set is a _ clique _ in @xmath0 if for every pair of vertices @xmath47 , @xmath48 , @xmath16 holds . for @xmath49 let @xmath50 and @xmath51:= n[u ] \\cup n[v]$ ] .",
    "distinct vertices @xmath43 and @xmath44 are _ true twins _ if @xmath52=n[y]$ ] .    for @xmath53 ,",
    "let @xmath54 $ ] denote the induced subgraph of @xmath0 with vertex set @xmath55 , hence , the graph which contains exactly the edges @xmath16 with both vertices @xmath43 and @xmath44 in @xmath55 .",
    "let @xmath56 ( or co-@xmath0 ) denote the _ complement graph _ of @xmath33 , i.e. , @xmath57 with @xmath58 if and only if @xmath48 and @xmath45 .",
    "let @xmath29 and @xmath59 be disjoint vertex sets in @xmath0 . if every vertex from @xmath29 sees ( misses , respectively ) every vertex from @xmath59 , we denote this by @xmath60 ( by @xmath61 , respectively ) .",
    "a set @xmath62 of at least two vertices of a graph @xmath0 is called _ homogeneous _ if @xmath63 and every vertex outside @xmath62 is adjacent to all vertices in @xmath62 or to no vertex in @xmath62 . obviously , @xmath62 is homogeneous in @xmath0 if and only if @xmath62 is homogeneous in the complement graph @xmath56 .",
    "a homogeneous set @xmath62 is _ maximal _ if no other homogeneous set properly contains @xmath62 .",
    "it is well known that in a connected graph @xmath0 with connected complement @xmath56 , the maximal homogeneous sets are pairwise disjoint and can be determined in linear time ( see , e.g. , @xcite ) .    a _ chordless path _",
    "@xmath6 ( _ chordless cycle _ @xmath64 , respectively ) has @xmath8 vertices , say @xmath65 , and edges @xmath66 , @xmath67 ( and @xmath68 , respectively ) .",
    "we say that such a path ( cycle , respectively ) has length @xmath8 .",
    "let @xmath69 denote the clique with @xmath70 vertices .",
    "let @xmath71 or _ diamond _ be the graph with four vertices and five edges , say vertices @xmath72 and edges @xmath73 ; its _ mid - edge _ is the edge @xmath74 .",
    "let @xmath75 denote the graph with five vertices consisting of a @xmath76 and a universal vertex ( see figure [ k4gem ] ) .",
    "let @xmath77 denote the star with one universal vertex and @xmath8 independent vertices .",
    "a star is _ nontrivial _ if it contains a @xmath78 or an edge , otherwise it is _",
    "trivial_.    for two vertices @xmath79 , let @xmath80 denote the _ distance between @xmath43 and @xmath44 in @xmath0 _ , i.e. , the length of a shortest path between @xmath43 and @xmath44 in @xmath0 . the _ distance of two edges _",
    "@xmath81 is the length of a shortest path between @xmath82 and @xmath83 , i.e. , @xmath84 . in particular",
    ", this means that @xmath85 if and only if @xmath25 . for a vertex @xmath43 ,",
    "let @xmath86 denote the _ distance levels of @xmath43 _ : @xmath87 .",
    "thus , @xmath88 . for an edge @xmath89 ,",
    "let @xmath90 denote the _ distance levels of @xmath89 _ : @xmath91 .",
    "thus , @xmath92 .",
    "a _ connected component _ of @xmath0 is a maximal vertex subset @xmath53 such that all pairs of vertices of @xmath55 are connected by paths in @xmath54 $ ] .",
    "@xmath93-connected component _ of @xmath0 is a maximal vertex subset @xmath53 such that all pairs of vertices of @xmath55 are connected by at least two vertex - disjoint paths in @xmath54 $ ] .",
    "the 2-connected components are also called _",
    "blocks_. it is well known that the blocks of a graph can be determined in linear time @xcite ( see also @xcite ) .    for a set @xmath94 of graphs , a graph @xmath0 is called _",
    "@xmath94-free _ if @xmath0 contains no induced subgraph from @xmath94 .",
    "a _ hole _ is a @xmath64 for some @xmath7 .",
    "a graph is _ hole - free _ if it is @xmath64-free for all @xmath7 .",
    "a graph is _ chordal _ if it is @xmath64-free for all @xmath95 .",
    "a graph is _ weakly chordal _ if it is @xmath64-free and @xmath96-free for all @xmath7 .    if @xmath12 is a d.i.m . ,",
    "an edge is _ matched by @xmath12 _ if it is either in @xmath12 or shares a vertex with some edge in @xmath12 .",
    "likewise , a vertex is _ matched _ if it is in @xmath97 .",
    "note that @xmath12 is a d.i.m . in @xmath0",
    "if and only if it is a dominating vertex set in the line graph @xmath98 and an independent vertex set in the square @xmath99 .",
    "thus , the dim problem is simultaneously a packing and a covering problem .",
    "the following observations are helpful ( some of them are mentioned e.g. in @xcite ) :    [ dimc3c5c7c4 ] let @xmath12 be a d.i.m . in @xmath0 .",
    "* @xmath12 contains at least one edge of every odd cycle @xmath100 in @xmath0 , @xmath101 , and exactly one edge of every odd cycle @xmath102 , @xmath103 , @xmath104 of @xmath0 . *",
    "no edge of any @xmath76 can be in @xmath12 . *",
    "if @xmath105 is a @xmath106 then either exactly two or none of the @xmath105-edges are in @xmath12 .    *",
    "proof . * ( i ) : let @xmath105 be an odd cycle @xmath100 in @xmath0 , @xmath101 , with vertices @xmath107 and edges @xmath66 , @xmath108 ( index arithmetic modulo @xmath109 ) .",
    "suppose first that none of the edges of @xmath105 are in @xmath12 .",
    "then the edge @xmath110 must be matched by an @xmath12-edge , say by @xmath111 , @xmath112 .",
    "now the edge @xmath113 must be matched in @xmath114 and so on , until finally the edge @xmath115 must be matched in @xmath116 but now two @xmath12-edges are in distance one - contradiction .",
    "now for @xmath102 s and @xmath103 s in @xmath0 , obviously not more than one edge can be in @xmath12 .",
    "if for a @xmath104 , two edges would be in @xmath12 , say @xmath117 and @xmath118 then @xmath119 can not be matched - contradiction .",
    "( ii ) : if @xmath120 is a @xmath76 in @xmath0 then if @xmath117 , @xmath121 is not matchable .",
    "( iii ) : this condition obviously holds .    if an edge @xmath23 is contained in any d.i.m . of @xmath0 ,",
    "we call it _ mandatory _ ( or _ forced _ ) in @xmath0 .",
    "mandatory edges are useful for some kinds of reductions .",
    "[ obs : diamondbutterfly ] the mid - edge of any diamond in @xmath0 is mandatory .    if an edge @xmath89 is mandatory , we can reduce the graph as follows : delete @xmath43 and @xmath44 and all edges incident to @xmath43 and @xmath44 , and give all edges in distance one to @xmath89 the weight @xmath122 .",
    "this means that these edges are not in any d.i.m . of finite weight in @xmath0 . for a set @xmath12 of mandatory edges ,",
    "reduced@xmath123 _ denote the reduced graph as defined above .",
    "obviously , this graph is an induced subgraph of @xmath0 and can be determined in linear time for given @xmath0 and @xmath12 .",
    "moreover :    [ obs : reduceddim ] let @xmath124 be an induced matching which is a set of mandatory edges in @xmath0 .",
    "then @xmath0 has a d.i.m .",
    "@xmath12 if and only if reduced@xmath125 has a d.i.m .",
    "@xmath126 .",
    "we can also color red all vertices in distance one to a mandatory edge ; subsequently , edges @xmath127 with a red vertex @xmath128 can not be matched in vertex @xmath128 ; they have to be matched in vertex @xmath129 .",
    "if also @xmath129 is red then @xmath0 has no d.i.m .",
    "subsequently , as a kind of preprocessing , some of the mid - edges of diamonds will be determined . since it would be too time - consuming to determine all diamonds in @xmath0",
    ", we will mainly find such diamonds whose mid - edges are edges between true twins having at least two common neighbors .",
    "these are contained in maximal homogeneous sets which can be found in linear time .    since the edges of any d.i.m",
    "must have pairwise distance at least two , we obtain :    [ obs : dimexneighbhoods ] if @xmath0 has a d.i.m . then for all vertices",
    "@xmath41 , @xmath130 $ ] is the disjoint union of at most one star with @xmath78 , and of edges and vertices .    * proof .",
    "* let @xmath0 have a d.i.m . @xmath12 .",
    "then by observation [ dimc3c5c7c4 ] ( i ) , @xmath12 contains an edge of every triangle , and by observation [ obs : diamondbutterfly ] , any @xmath78 @xmath131 in @xmath132 generates a mandatory edge @xmath133 .",
    "thus , if @xmath132 contains a cycle or @xmath36 , we obtain a contradiction to the distance requirements in @xmath12 .",
    "this means that @xmath132 is a @xmath36-free forest , i.e. , a disjoint union of stars .",
    "if there are two stars with @xmath78 in @xmath132 then again we obtain a contradiction .    from the previous observations , it follows ( see figure [ k4gem ] for @xmath134 , gem , and @xmath135 ) :    [ cly : k4gemfree ] if @xmath0 has a d.i.m .",
    "then @xmath0 is @xmath136-free , @xmath75-free , gem - free and @xmath96-free for any @xmath137 .",
    "now we deal with homogeneous sets in @xmath0 .",
    "[ homsets ] let @xmath0 have a d.i.m . and",
    "let @xmath62 be a homogeneous set in @xmath0 .",
    "* if @xmath62 contains an edge then @xmath138 is stable . *",
    "if @xmath139 then @xmath62 is either a stable set or a disjoint union of edges . * vertices @xmath43 and @xmath44 are true twins with at least two common neighbors in @xmath0 if and only if they appear as an edge in a homogeneous set @xmath62 with @xmath139 .    * proof .",
    "* let @xmath0 have a d.i.m . and",
    "let @xmath62 be a homogeneous set in @xmath0 .",
    "( i ) : if @xmath62 contains an edge then since @xmath0 is @xmath136-free , @xmath138 is stable .",
    "( ii ) : if @xmath139 then by observation [ obs : dimexneighbhoods ] and corollary [ cly : k4gemfree ] , @xmath62 must be @xmath78-free , i.e. , is a disjoint union of cliques . since @xmath0 is @xmath136-free , the cliques are edges or vertices .",
    "if there is an edge @xmath140 in @xmath62 and there is a component @xmath141 consisting of a single vertex then obviously , @xmath142 and for any @xmath143 , the edge @xmath144 can not be matched - contradiction .",
    "( iii ) : if @xmath43 and @xmath44 are true twins then @xmath145 are contained in a ( maximal ) homogeneous set . on the other hand , if @xmath43 and @xmath44 with @xmath16 appear in a @xmath78-free homogeneous set then @xmath43 and @xmath44 are true twins .    the following procedure uses observation [ obs : dimexneighbhoods ] and the fact that for a homogeneous set @xmath62 with @xmath146 , say @xmath147 , all connected components of @xmath62 together with @xmath148 are leaf blocks in @xmath0 .    *",
    "procedure hom-1-dim : *    * given : * a homogeneous set @xmath62 in @xmath0 with @xmath147 .    *",
    "task : * determine some mandatory edges or find out that @xmath0 has no d.i.m .    1 .",
    "if @xmath62 contains a cycle or @xmath36 then stop - @xmath0 has no d.i.m .",
    "( _ now @xmath62 is a @xmath36-free forest .",
    "_ ) if @xmath62 contains at least two @xmath78 s then stop - @xmath0 has no d.i.m .",
    "( _ now @xmath62 is a @xmath36-free forest which contains at most one @xmath78 .",
    "_ ) if @xmath62 contains exactly one @xmath78 , say @xmath131 then @xmath149 . if another connected component of @xmath62 contains an edge then stop - @xmath0 has no d.i.m .",
    "( _ now @xmath62 is a @xmath78-free forest , i.e. , a disjoint union of edges @xmath150 and vertices @xmath151 .",
    "_ ) if @xmath150 contains at least two edges then @xmath152 .",
    "if @xmath153 then stop - @xmath0 has no d.i.m .",
    "( _ now @xmath62 is a disjoint union of at most one edge and vertices @xmath151 .",
    "_ ) if there is an edge @xmath127 in @xmath62 and @xmath153 then @xmath154 or @xmath149 ( depending on the better weight ) .",
    "we postpone the discussion of the two final cases @xmath155 and @xmath156 or @xmath157 and @xmath158 .",
    "obviously , the following holds :    [ hom1dimcorrlintime ] procedure hom-1-dim is correct and can be carried out in linear time .    in the final case of a homogeneous set @xmath62 with only one neighbor @xmath148 where @xmath62 consists of just one edge @xmath127 , @xmath159 forms a leaf block . for graph @xmath0",
    ", let @xmath160 denote the graph obtained from @xmath0 by omitting all such triangle leaf blocks .",
    "obviously , @xmath160 can be constructed in linear time .",
    "we will need this construction in our algorithm @xmath10-free - dim for dim in section [ generalp7freecase ] .",
    "there , we also need the following transformation : for every triangle leaf block @xmath131 with cut - vertex @xmath161 and corresponding edge weights @xmath162 , @xmath163 , @xmath164 , let @xmath165 be the graph with the same cut - vertex @xmath161 where the triangle is replaced by a path @xmath166 with weights @xmath162 for edge @xmath167 and @xmath168 for edge @xmath169 . let @xmath170 be the result of applying @xmath165 to all triangle leaf blocks @xmath131 of @xmath0 .",
    "obviously , @xmath0 has a d.i.m . if and only if @xmath165 has a d.i.m .",
    ", and the optimal weights of d.i.m.s in @xmath0 and @xmath165 are the same .",
    "the only problem is the fact that the new graph is not necessarily @xmath10-free when @xmath0 is @xmath10-free .",
    "we will apply this construction only in one case , namely when the internal blocks of @xmath0 form a distance - hereditary bipartite graph ; then @xmath170 is also distance hereditary bipartite .",
    "finally we need the following :    [ lintimedimchecking ] for a given set @xmath3 of edges , it can be tested in linear time whether @xmath3 is a d.i.m . , and",
    "likewise , whether @xmath3 is an induced matching .",
    "* for @xmath2 , in an array of all vertices in @xmath11 , count the number @xmath171 of appearances of each vertex of @xmath11 in the edges of @xmath3 by going through all edges in @xmath3 once .    1 .",
    "two edges of @xmath3 intersect if and only if one of the vertices appears in more than one edge , i.e. , if there is a vertex @xmath43 with @xmath172 .",
    "2 .   two edges of @xmath3 have distance one if and only if for an edge @xmath173 , both @xmath174 and @xmath175 .",
    "@xmath3 is dominating if and only if for each edge @xmath16 , @xmath174 or @xmath175 .",
    "obviously this can be checked in time @xmath176 .",
    "the first two steps are the test whether @xmath3 is an induced matching .",
    "it is well known that a graph is a cograph if and only if its clique - width is at most two .",
    "thus , for solving the dim problem on cographs , one could use the clique - width argument .",
    "however , we give a simple direct way . obviously , the following holds :    [ cor : coconnwithdim ] if @xmath0 has a d.i.m . and @xmath56 is not connected then @xmath0 is a cograph .    for the subsequent characterization of cographs , i.e. , @xmath36-free graphs , with d.i.m . , we need the following notion :    @xmath0 is a _ super - star _ if @xmath0 contains a universal vertex @xmath177 such that @xmath178 $ ] is the disjoint union of a star and a stable set .",
    "note that every super - star has a d.i.m .",
    "@xmath12 , namely if the star contains a @xmath78 with central vertex @xmath161 then @xmath12 consists of the single edge @xmath179 , and if the star consists of only one edge @xmath127 , then @xmath180 and @xmath181 are both d.i.m.s , and the choice of an optimal d.i.m .",
    "depends on the weights .",
    "if there is no edge in @xmath178 $ ] then any edge @xmath140 is a d.i.m . , and the choice of an optimal d.i.m .",
    "depends on the weights .    for cographs having a d.i.m .",
    ", there is the following simple characterization :    [ dimcographs ] a connected cograph @xmath0 has a d.i.m . if and only if it is either a super - star or the join @xmath182 of a disjoint union of edges @xmath183 and a stable set @xmath184 .",
    "* let @xmath0 be a connected cograph with a d.i.m . @xmath12 . then , since @xmath0 is @xmath136-free , @xmath182 for some triangle - free ( i.e. , bipartite ) subgraphs @xmath183 and @xmath184 .",
    "* @xmath183 ( or @xmath184 ) contains only one vertex ; without loss of generality say @xmath185 .",
    "then by observation [ obs : dimexneighbhoods ] , @xmath184 is a disjoint union of at most one star with @xmath78 , of edges and vertices .",
    "if exactly one of the connected components of @xmath184 contains a @xmath78 then this component is a star , say with central vertex @xmath161 , and @xmath186 .",
    "now the other components of @xmath184 must be single vertices since in every triangle , exactly one edge is in @xmath12 .",
    "this shows that in this case , @xmath0 is a super - star , and an optimal d.i.m .",
    "can be chosen as described above .",
    "if none of these connected components contain @xmath78 then the connected components of @xmath184 are edges and vertices . if at least two such edges exist then all the connected components are edges , otherwise there is no d.i.m .",
    "this corresponds to the second case in proposition [ dimcographs ] .",
    "if exactly one of the connected components is an edge , say @xmath127 , and all the others are vertices then @xmath187 and @xmath188 are possible d.i.m.s .",
    "this is again a special super - star .",
    "if there is no edge in @xmath184 then @xmath0 is simply a star .",
    "* case 2 . *",
    "@xmath183 and @xmath184 contain at least two vertices .",
    "if none of @xmath183 , @xmath184 contains an edge then if both @xmath183 and @xmath184 contain at least two vertices , every edge is in a @xmath76 and therefore not in @xmath12 - contradiction .    if @xmath183 contains an edge then by corollary [ homsets ] ( i ) , @xmath184 is edgeless and by corollary [ homsets ] ( ii ) , @xmath183 is a disjoint union of edges . in this case , the uniquely determined d.i.m . of @xmath0",
    "is the set of edges in @xmath183 .",
    "conversely , it is easy to see that any super - star has a d.i.m . , and likewise any join of a disjoint union of edges and a stable set has a d.i.m .    [ dimcographslinrec ] cographs with d.i.m .",
    "can be recognized in linear time .",
    "the following uses proposition [ dimcographs ] :    * procedure cograph - dim : *    * given : * a connected cograph @xmath0",
    ".    * task : * decide whether @xmath0 has a d.i.m . and",
    "if yes , determine a d.i.m .",
    "of @xmath0 .    1 .",
    "check whether @xmath0 is either a super - star or the join of a disjoint union of edges and a stable set .",
    "if yes then @xmath0 has a d.i.m . as described above , and",
    "if not then stop - @xmath0 has no d.i.m .",
    "throughout this section , let @xmath33 be a connected @xmath10-free graph having a d.i.m . recall that if @xmath12 is a d.i.m . of @xmath0",
    "then the vertex set @xmath11 has the partition @xmath189 with independent vertex set @xmath190 .",
    "we suppose that @xmath191 is an edge in a @xmath78 and consider the distance levels @xmath192 , @xmath193 , with respect to the edge @xmath89 .",
    "note that every edge of an odd hole @xmath103 , @xmath104 , respectively , is in a @xmath78 . for triangles",
    "@xmath131 , this is not fulfilled if @xmath128 and @xmath129 are true twins . however",
    ", true twins with at least two common neighbors will lead to mandatory edges , and true twins @xmath194 with only one common neighbor @xmath161 form a leaf block @xmath131 which will be temporarily omitted by constructing @xmath160 and looking for an odd cycle in @xmath160 .      since we assume that @xmath191 , clearly , @xmath195 and thus : @xmath196    moreover , no edge between @xmath197 and @xmath198 is in @xmath12 .",
    "since @xmath195 and all neighbors of vertices in @xmath190 are in @xmath97 , we have : @xmath199    let @xmath200 denote the set of edges in @xmath198 and let @xmath201 denote the set of isolated vertices in @xmath198 ; @xmath202 .",
    "obviously : @xmath203    let @xmath204 denote the set of @xmath12-edges with one endpoint in @xmath201 ( and the other endpoint in @xmath205 ) .",
    "since @xmath89 is contained in a @xmath78 , i.e. , there is a vertex @xmath206 such that @xmath207 induce a @xmath78 , we obtain some further properties : @xmath208    _ proof of _ ( [ n5empty ] ) : if there is a vertex @xmath209 then there is a shortest path @xmath210 , @xmath211 , @xmath114 , @xmath212 , @xmath213 , @xmath214 , @xmath215 , connecting @xmath216 and a neighbor @xmath217 of @xmath43 or @xmath44 .",
    "if @xmath218 then @xmath219 is a @xmath10 , and if @xmath212 is nonadjacent to any personal neighbor of @xmath43 with respect to @xmath44 then @xmath220 is a @xmath10 or @xmath221 is a @xmath10 - a contradiction which shows ( [ n5empty ] ) .",
    "@xmath222    this kind of argument will be used later again - we will say that the subgraph induced by @xmath223 contains an induced @xmath10 .",
    "obviously , by ( [ m2subm ] ) and the distance condition , the following holds : @xmath224    furthermore the following statement holds .",
    "@xmath225    _ proof of _ ( [ n4m4u4 ] ) : the proof is very similar to the one of ( [ n5empty ] ) : let @xmath140 be an edge in @xmath226 and let @xmath227 see @xmath177 ; then @xmath228 must see also @xmath41 since @xmath0 is @xmath10-free ( recall the existence of @xmath206 in a @xmath78 with @xmath43 and @xmath44 )",
    ". then @xmath226 must be @xmath78-free - otherwise any neighbor @xmath227 of a @xmath78 @xmath131 in @xmath226 would induce a diamond @xmath229 and then edge @xmath230 is mandatory in contradiction to observation [ obs : diamondbutterfly ] and condition ( [ edgesn3n4 ] ) .",
    "moreover , @xmath226 is triangle - free ( otherwise there is a @xmath136 in contradiction to corollary [ cly : k4gemfree ] ) . then @xmath226 is a disjoint union of edges and vertices which shows ( [ n4m4u4 ] ) .",
    "@xmath222    let @xmath231 denote the set of edges in @xmath226 and let @xmath232 denote the set of isolated vertices in @xmath226 ; @xmath233 .",
    "note that by ( [ n5empty ] ) and ( [ edgesn3n4 ] ) , @xmath234 .",
    "since every edge @xmath127 in @xmath226 together with a predecessor @xmath161 in @xmath205 forms a triangle , and @xmath235 , by ( [ edgesn3n4 ] ) necessarily : @xmath236    by observation [ dimc3c5c7c4 ] ( i ) , in every odd cycle @xmath102 , @xmath103 and @xmath104 of @xmath0 , exactly one edge must be in @xmath12 .",
    "thus , ( [ edgesn3n4 ] ) implies : @xmath237    note that in general , @xmath205 is not a stable set .",
    "let @xmath238 , and @xmath239 .",
    "note that if @xmath140 is an edge with @xmath240 then @xmath241 and @xmath140 must be matched by an @xmath12-edge at @xmath41 since it can not be matched at @xmath177 because of the distance condition ; in particular , @xmath242 .    in general , ( [ edgesn3n4 ] ) will lead to some forcing conditions since the edges in @xmath205 and between @xmath205 and @xmath226 have to be matched .",
    "if an edge @xmath49 can not be matched at @xmath177 then it has to be matched at @xmath41 - in this case , as described later , we color the vertex @xmath41 green if it has to be matched by an @xmath204 edge .",
    "( for an algorithm checking the existence of a d.i.m .",
    ", it is useful to observe that if vertices in distance one get color green then no d.i.m . exists . )    let @xmath243 . then @xmath244 and @xmath245 .",
    "furthermore , since @xmath234 , one obtains : @xmath246    let @xmath247 .",
    "then @xmath248 is a partition of @xmath205 .",
    "in particular , @xmath249 contains the @xmath12-mates of the vertices of @xmath201 .",
    "recall that @xmath204 denotes the set of @xmath12-edges with one endpoint in @xmath201 ( and the other endpoint in @xmath249 ) .",
    "let @xmath253 , and let @xmath254 , @xmath255 .",
    "then @xmath256 is a partition of @xmath257 .",
    "the following condition is necessary for the existence of @xmath204 : @xmath258    recall that by observation [ obs : dimexneighbhoods ] , @xmath259 $ ] is the disjoint union of at most one star with @xmath78 , and of edges and vertices .",
    "furthermore , @xmath259 $ ] can not contain two edges , i.e. , the following statement holds for all @xmath255 : @xmath260 \\mbox { is a disjoint union of vertices and at most one star $ y_i$ with an edge.}\\ ] ]    _ proof of _ ( [ conncompti ] ) : assume that there are two edges , say @xmath127 and @xmath167 , in @xmath250 .",
    "then in both triangles @xmath261 , @xmath262 , exactly one edge has to be in @xmath12 but both contain @xmath263 - contradiction .",
    "@xmath222    assume that @xmath250 contains the star @xmath264 with an edge .",
    "@xmath265    _",
    "proof of _ ( [ isolated - ei ] ) : let @xmath266 be an edge of @xmath264",
    ". by contradiction assume that a vertex @xmath267 , @xmath252 , is adjacent to @xmath264 , say @xmath268 sees @xmath269 .",
    "then , since by ( [ n3s4bip ] ) , @xmath270 $ ] is triangle - free , @xmath268 is nonadjacent to @xmath271 , and now @xmath272 induce a subgraph of @xmath0 containing a @xmath10 . @xmath222    [ edgesbetweentitj ] for all @xmath255 , there is at most one @xmath273 such that a vertex in @xmath250 sees a vertex in @xmath251 .    _",
    "proof of claim _ [ edgesbetweentitj ] : by contradiction assume that there are two indices @xmath274 such that some vertices in @xmath250 see vertices in @xmath251 and @xmath275 .",
    "_ case @xmath276 .",
    "_ if there is a vertex @xmath277 which sees a vertex @xmath267 and @xmath278 then , since there is no triangle in @xmath205 , @xmath268 misses @xmath279 , and then @xmath280 induce a subgraph of @xmath0 containing a @xmath10 ( recall the existence of a @xmath78 with @xmath145 and vertex @xmath281 ) .",
    "_ case @xmath93 . _",
    "thus , assume that there are two vertices @xmath282 such that @xmath271 sees a vertex @xmath267 and @xmath269 sees a vertex @xmath278 . clearly , by ( [ isolated - ei ] ) , @xmath283 , and by case 1 , @xmath284 , @xmath285 .",
    "moreover , @xmath286 , otherwise we are in case 1 again . now @xmath287 induce a @xmath10 - contradiction .",
    "@xmath222    let us say that _",
    "@xmath250 sees @xmath251 _ if there are vertices in @xmath250 and @xmath251 which see each other .",
    "now by claim [ edgesbetweentitj ] , for every @xmath255 , @xmath250 either sees no @xmath251 , @xmath273 , and in this case let us say that _",
    "@xmath250 is isolated _ , or sees exactly one @xmath251 , @xmath273 , in which case we say that _ @xmath250 and @xmath251 are paired_.    [ eititj ] if @xmath250 and @xmath251 are paired then @xmath288 $ ] contains at most two components among the four following ones : @xmath264 @xmath289defined above@xmath290 , @xmath291 @xmath289defined above@xmath290 , @xmath292 which is a star with center in @xmath250 and the other vertices in @xmath251 , @xmath293 which is a star with center in @xmath251 and the other vertices in @xmath250 ; in particular , at most one from @xmath294 does exist .",
    "_ proof of claim _ [ eititj ] : by ( [ tinonempty ] ) and since each edge of @xmath0 must be matched by @xmath12 , @xmath288 $ ] contains at most two components . by ( [ conncompti ] ) and ( [ isolated - ei ] ) it is enough to focus on the possible components of @xmath288 $ ] with vertices in both @xmath250 and @xmath251 . in particular , by ( [ conncompti ] )",
    "each such component is a star with center in @xmath250 ( in @xmath251 , respectively ) and the other vertices in @xmath251 ( in @xmath250 , respectively ) ; if any of such stars contains a @xmath78 then its center @xmath161 belongs to @xmath295 ( in fact otherwise , @xmath161 would have have two neighbors in @xmath250 or in @xmath251 , and such neighbors should belong to @xmath97 , a contradiction to ( [ tinonempty ] ) ) ; then if such stars exist and contain @xmath78 , their centers belong to @xmath250 and @xmath251 respectively ; then one obtains the stars described in the claim .",
    "finally , since @xmath288 $ ] contains at most two components , by ( [ isolated - ei ] ) and by definition of paired sets one has that at most one from @xmath294 does exist .",
    "the above claims are useful tools to detect @xmath204 .",
    "then let us observe that :    * if a vertex @xmath277 sees a vertex of @xmath296 , then @xmath297 ; * if a vertex @xmath277 is the center of the star @xmath264 or @xmath292 ( in case of paired sets ) , with a @xmath78 then @xmath297 .",
    "let us say that a vertex @xmath277 is _ green _ if it enjoys one of the above two conditions @xmath298 , @xmath299 .",
    "then the following statement holds for all @xmath255 :    @xmath300 \\mbox { contains at most one green vertex , say } t_i^*\\ ] ]    and    @xmath301 \\mbox { is edgeless . }",
    "in our algorithm @xmath10-free - dim in section [ generalp7freecase ] , we carry out a fixed number of times the subsequent :    * procedure check@xmath302*.    * given : * a ( candidate ) edge @xmath89 which is in a @xmath78 of @xmath0 .    *",
    "task : * determine a minimum weight d.i.m .",
    "@xmath12 of @xmath0 with @xmath191 or return a proof that @xmath0 has no d.i.m . with @xmath89 or @xmath0",
    "is not @xmath10-free .    1 .   determine the distance levels @xmath303 with respect to @xmath89 .",
    "2 .   check if all the conditions ( [ nxysubi])-([isolated - ei ] ) of subsections [ levelstructure ] and [ titjedges ] are fulfilled .",
    "if one of them is not fulfilled then unsuccessfully stop .",
    "otherwise , set @xmath304 . if @xmath305 , then successfully stop - return @xmath12 .",
    "check if claim [ edgesbetweentitj ] of subsection [ titjedges ] holds .",
    "if not , then unsuccessfully stop . otherwise classify the @xmath250 sets into isolated ones and paired ones .",
    "check if claim [ eititj ] of subsection [ titjedges ] holds .",
    "if not , then unsuccessfully stop .",
    "color green every vertex @xmath306 of @xmath250 such that either @xmath306 sees a vertex of @xmath296 or @xmath306 is the center of the star @xmath264 or @xmath292 ( in case of paired sets ) with @xmath264 or @xmath292 containing @xmath78",
    "check if conditions ( [ greenvertex1])-([greenvertex2 ] ) of subsection [ titjedges ] hold .",
    "if not , then unsuccessfully stop .",
    "+ _ notation .",
    "_ for any subset @xmath307 of any",
    "@xmath250 set introduced in subsection [ titjedges ] , let us say that a vertex @xmath271 is a @xmath308 vertex in @xmath307 if @xmath309 for any @xmath310 .",
    "@xmath222 7 .   for all isolated @xmath250 ,",
    "proceed as follows . if @xmath250 has a green vertex @xmath311 , then set @xmath312 .",
    "otherwise set @xmath313 where @xmath271 is a best vertex in @xmath264 ( if @xmath264 does exist ) or is a best vertex in @xmath250 ( otherwise ) . 8 .   for all paired @xmath250 and @xmath251 , proceed as follows .",
    "if @xmath250 and @xmath251 have a green vertex , respectively @xmath314 and @xmath315 , then : if @xmath314 misses @xmath315 , and if @xmath316 $ ] is edgeless then set @xmath317 ; otherwise unsuccessfully stop . 10 . if @xmath250 has a green vertex @xmath314 , and if @xmath251 has no green vertex , then : if @xmath318 $ ] has at least one vertex and contains most one component ( i.e. , @xmath293 or @xmath291 ) , then set @xmath319 where @xmath268 is , in this order , either the vertex in @xmath320 ( if ) , or a best vertex in @xmath291 ( if ) , or a best vertex in @xmath251 . otherwise unsuccessfully stop .",
    "if @xmath251 has a green vertex @xmath315 , and if @xmath250 has no green vertex , then proceed similarly by symmetry .",
    "if @xmath251 and @xmath251 has no green vertex ( according to claim [ eititj ] and to the above , @xmath288 $ ] contains isolated vertices , at most two isolated edges , and at least one isolated edge , say @xmath321 , between @xmath250 and @xmath251 ) , then proceed as follows : * if there exists another edge , say @xmath322 , in @xmath250 or @xmath251 then : if @xmath323 ( or @xmath324 ) then set @xmath325 where @xmath148 is a best vertex in @xmath326 ( or @xmath327 where @xmath148 is a best vertex in @xmath326 ) ; if @xmath328 and @xmath329 , then either set @xmath330 or set @xmath331 , depending on the best alternative . * otherwise : if @xmath332 , then unsuccessfully stop ; if @xmath333 and @xmath334 , then set @xmath335 where @xmath336 is a best vertex in @xmath337 ; if @xmath338 and @xmath339 , then set @xmath340 where @xmath341 is a best vertex in @xmath342 ; if @xmath333 and @xmath339 , then either set @xmath335 where @xmath336 is a best vertex in @xmath337 , or set @xmath340 where @xmath341 is a best vertex in @xmath342 , depending on the best alternative .",
    "successfully stop - return @xmath12 .",
    "[ maintheorem - procedure - xy - in - p3 ] procedure check@xmath302 is correct and runs in linear time .",
    "* proof . * _ correctness _ : the correctness of the algorithm follows from the structural analysis of @xmath10-free graphs with d.i.m . described in subsections [ levelstructure ] and [ titjedges ] .    _ time bound _ : ( a ) : determining the distance levels @xmath343 with respect to edge @xmath89 can be done in linear time , e.g. by using bfs .",
    "( b ) : likewise , concerning conditions ( [ nxysubi])-([isolated - ei ] ) , we can test in linear time if @xmath197 is a stable set , @xmath198 is a disjoint union of edges and vertices , @xmath344 , @xmath226 is a disjoint union of edges and vertices .",
    "the assignments can be done in linear time : this is obvious for @xmath345 and @xmath232 .",
    "then determine the degree of all vertices in @xmath205 with respect to @xmath201 , and assign degree one vertices to @xmath346 and degree @xmath347 vertices to @xmath348 .",
    "obviously , a vertex in @xmath205 which misses @xmath201 has a predecessor in @xmath200 , and thus @xmath349 and @xmath350 form a partition of @xmath205 . obviously",
    ", it can be checked in linear time whether @xmath351 is a bipartite subgraph and whether @xmath296 is a stable set .",
    "( c)-(j ) : all these steps can obviously be done in linear time .    in the other case when an edge @xmath89 is not in any @xmath78",
    ", it follows that @xmath43 and @xmath44 are true twins , and this case will be treated by determining the maximal homogeneous sets of @xmath0 .",
    "a _ domino _ is a bipartite graph having six vertices , say @xmath352 such that @xmath353 is a @xmath32 and @xmath354 sees @xmath355 and @xmath356 .",
    "[ obse : p7c6 ] let @xmath12 be a d.i.m . of a bipartite @xmath10-free graph @xmath59 .",
    "* if @xmath105 is a @xmath106 in @xmath59 then exactly two @xmath105-edges are in @xmath12 .",
    "* @xmath59 is domino - free .",
    "* @xmath298 : assume to the contrary that the statement is not true .",
    "let @xmath105 be a @xmath106 in @xmath59 with vertices @xmath357 and edges @xmath66 , @xmath358 ( index arithmetic modulo 6 ) .",
    "then by observation [ dimc3c5c7c4 ] ( iii ) , none of the @xmath105-edges are in @xmath12 .",
    "then since every edge of @xmath59 is matched by @xmath12 , exactly three vertices of @xmath105 , say @xmath359 , belong to @xmath360 , while @xmath361 belong to @xmath97 : let @xmath362 be respectively their @xmath12-mates . then by definition of @xmath12 and since @xmath59 is bipartite , @xmath363 induce a @xmath10 - contradiction .",
    "@xmath299 : if @xmath364 is a domino in @xmath59 then by observation [ dimc3c5c7c4 ] ( ii ) , the edges of the two @xmath76 s of @xmath364 must be matched from outside but now obviously there is a @xmath10 - contradiction .    if moreover , @xmath59 is @xmath106-free , it is @xmath365-chordal bipartite , i.e. , distance hereditary and bipartite ( see e.g. @xcite ) . in this case , dim can be easily solved in linear time by using the clique - width argument @xcite since the clique - width of distance - hereditary graphs is at most three ( and 3-expressions can be determined in linear time ) .",
    "we want to give a robust linear - time algorithm for @xmath10-free bipartite graphs for solving the dim problem .",
    "if a bipartite graph @xmath59 is given , the algorithm either solves the dim problem optimally or shows that there is a domino or @xmath10 in @xmath59 .",
    "the algorithm constructs the distance levels starting from an arbitrarily chosen vertex .",
    "then it checks whether @xmath59 is distance hereditary as in @xcite .",
    "if a domino or @xmath10 is found , the algorithm unsuccessfully stops , and if a @xmath106 @xmath105 is found , one of the pairs of opposite edges in @xmath105 must be in @xmath12 , say @xmath110 and @xmath366 , and in this case , it is checked by check(@xmath110 ) whether the distance levels starting from @xmath110 have the required properties .    for making this paper",
    "self - contained , we repeat corollary 5 of @xcite :    [ bipdistheredneighb ] let @xmath0 be a connected graph , and let @xmath177 be any vertex of @xmath0 . then @xmath0 is bipartite and distance hereditary if and only if all levels @xmath367 are edgeless , and for any vertices @xmath368 and neighbors @xmath43 and @xmath44 of @xmath41 in @xmath369 , we have    * @xmath370 , and further , * @xmath371 and @xmath372 are either disjoint , or one is contained in the other .",
    "we have to check level by level beginning with the largest index , whether @xmath373 and @xmath374 are fulfilled .",
    "if condition @xmath373 is violated , we obtain a hole or domino .",
    "this leads to the following procedure for the bipartite case which includes a certifying recognition algorithm :    * procedure @xmath10-free - bipartite - dim *    * given : * a connected bipartite graph @xmath59 with edge weights .    *",
    "task : * determine a d.i.m . in @xmath59 of minimum weight",
    "( if existent ) or find out that @xmath59 has no d.i.m . or is not @xmath10-free .    1 .",
    "choose a vertex @xmath375 and determine the distance levels @xmath303 with respect to @xmath128 .",
    "if @xmath376 then stop - @xmath59 is not @xmath10-free .",
    "2 .   for all levels",
    "@xmath377 , @xmath378 , beginning with @xmath379 , check whether conditions @xmath373 and @xmath374 are fulfilled .",
    "if one of them is violated , we obtain an obstruction which is either a hole @xmath380 or @xmath381 ( in the case of a @xmath380 or @xmath381 stop - @xmath59 is not @xmath10-free ) , or a @xmath106 @xmath105 ( in which case we have to proceed with @xmath105 ) or a domino - stop - @xmath59 has no d.i.m . or is not @xmath10-free .",
    "3 .   if in all cases , conditions @xmath373 and @xmath374 are fulfilled , @xmath59 is distance hereditary and bipartite .",
    "apply the clique - width approach for solving the dim problem .",
    "( _ now @xmath59 is not distance hereditary and @xmath105 is a @xmath106 in @xmath59_. ) for three consecutive edges @xmath127 of @xmath105 , carry out check(@xmath127 ) .",
    "if none of them ends successfully , stop - @xmath59 has no d.i.m .",
    ", otherwise we obtain an optimal d.i.m .",
    "( among the at most three solutions ) .",
    "check(@xmath127 ) assumes that @xmath127 is in a @xmath106 of the bipartite graph @xmath59 . in this case",
    "we have some additional properties , and the procedure could be simplified :    let @xmath382 ( @xmath383 , respectively ) .",
    "obviously , the following is a partition of @xmath197 if @xmath59 is bipartite : @xmath384    as before , @xmath197 has to be stable , and @xmath198 is a disjoint union of edges @xmath200 and vertices @xmath201 . since @xmath127 is in a @xmath106 , we have that @xmath385 .",
    "since @xmath59 is @xmath10-free , obviously : @xmath386",
    "moreover : @xmath387    finally , since @xmath59 is @xmath10-free , we obtain : @xmath388    _ proof of @xmath389_. let @xmath390 and @xmath391 with @xmath82 and @xmath392 in the same color class , and suppose that @xmath82 sees @xmath393 while @xmath392 misses @xmath43 .",
    "then there is @xmath394 such that @xmath395 . since @xmath197 is stable , @xmath45 .",
    "since @xmath392 misses @xmath43 , there is a neighbor @xmath396 of @xmath392 . since @xmath397 is no @xmath10 , @xmath398 .",
    "again , since @xmath197 is stable , @xmath399 . if @xmath400 then @xmath401 is a @xmath10 .",
    "thus , @xmath402 but now @xmath403 is a @xmath10 - a contradiction which shows ( [ m2neighbinn1 ] ) .",
    "@xmath222    obviously , @xmath404 is a d.i.m . of @xmath59 if all conditions are fulfilled .",
    "[ bipdimcorr ] procedure @xmath10-free - bipartite - dim is correct and runs in linear time .",
    "* the correctness of the procedure follows from the structural analysis of bipartite @xmath10-free graphs with d.i.m .",
    "the time bound follows from the fact that procedure check(@xmath89 ) is carried out only for a fixed number of edges , and each step of the procedure can be done in linear time .",
    "let @xmath0 be a connected non - bipartite graph .",
    "the following procedure determines an odd cycle @xmath102 , @xmath103 or @xmath104 or a @xmath10 of @xmath0 in linear time .",
    "* procedure find - odd - cycle - or-@xmath10 *    * given : * a connected non - bipartite graph @xmath0 .    *",
    "task : * determine an odd cycle @xmath102 , @xmath103 or @xmath104 of @xmath0 or find out that @xmath0 is not @xmath10-free .    1 .",
    "choose a vertex @xmath43 and determine the distance levels @xmath303 with respect to @xmath43 .",
    "if @xmath376 then stop - @xmath0 contains a @xmath10 .",
    "if there is an edge @xmath405 in @xmath197 then @xmath406 is a @xmath102 .",
    "else @xmath197 is stable .",
    "if there is an edge @xmath405 in @xmath198 then @xmath131 is a @xmath102 for a common neighbor @xmath407 of @xmath194 or for neighbors @xmath408 of @xmath128 and @xmath409 of @xmath129 , @xmath410 is a @xmath103 .",
    "else @xmath198 is stable .",
    "if there is an edge @xmath405 in @xmath205 then @xmath131 is a @xmath102 for a common neighbor @xmath411 of @xmath194 or for neighbors @xmath412 of @xmath128 and @xmath413 of @xmath129 , and a common neighbor @xmath407 of @xmath414 , @xmath415 is a @xmath103 or for neighbors",
    "@xmath416 of @xmath417 and @xmath418 of @xmath419 , @xmath420 is a @xmath104 .",
    "else @xmath205 is stable .",
    "if there is an edge @xmath405 in @xmath226 then @xmath131 is a @xmath102 for a common neighbor @xmath421 of @xmath194 or for neighbors @xmath422 of @xmath128 and @xmath423 of @xmath129 , and a common neighbor @xmath411 of @xmath414 , @xmath415 is a @xmath103 or for neighbors",
    "@xmath424 of @xmath417 and @xmath425 of @xmath426 , @xmath427 is a @xmath10 .",
    "else @xmath226 is stable .",
    "( _ now @xmath379 must contain an edge , otherwise @xmath0 is bipartite .",
    "_ ) for an edge @xmath127 in @xmath379 , let @xmath428 denote a neighbor of @xmath128 in @xmath226 and let @xmath429 denote a neighbor of @xmath430 , @xmath431 . then either @xmath432 is a @xmath102 or @xmath433 is a @xmath10 .",
    "obviously , the following holds :    [ findoddcyccorr ] procedure find - odd - cycle - or-@xmath10 is correct and runs in linear time .",
    "in the previous chapters we have analyzed the structure of @xmath10-free graphs having a d.i.m .",
    "now we are going to use these properties for an efficient algorithm for solving the dim problem on these graphs .",
    "* algorithm @xmath10-free - dim .",
    "*    * given : * a connected graph @xmath33 with edge weights .",
    "* task : * determine a d.i.m . in @xmath0 of finite minimum weight ( if existent ) or find out that @xmath0 has no d.i.m . or is not @xmath10-free .    1 .",
    "if @xmath0 is bipartite then carry out procedure @xmath10-free - bipartite - dim .",
    "( _ now @xmath0 is not bipartite .",
    "_ ) if @xmath0 is a cograph then apply procedure cograph - dim .",
    "if @xmath0 is not a cograph but @xmath56 is not connected then stop - @xmath0 has no d.i.m .",
    "( _ now @xmath0 is not bipartite and @xmath56 is connected .",
    "_ ) let @xmath434 .",
    "determine the maximal homogeneous sets @xmath435 of @xmath0 .",
    "for all @xmath436 do the following steps ( c.1 ) , ( c.2 ) : 4 .   if @xmath437 then carry out procedure hom-1-dim .",
    "5 .   in the case",
    "when @xmath438 and @xmath439 is not a stable set , check whether @xmath440 is stable and @xmath439 is a disjoint union of edges ; if not then stop - @xmath0 has no d.i.m .",
    ", otherwise , for all edges @xmath89 in @xmath439 , let @xmath441 .",
    "construct @xmath442 .",
    "7 .   for every connected component @xmath105 of @xmath443 ,",
    "do : if @xmath105 is bipartite then carry out procedure @xmath10-free - bipartite - dim for @xmath105 . otherwise construct @xmath444 ( where the triangle leaf blocks are temporarily omitted ) and carry out find - odd - cycle - or-@xmath10 for @xmath444 , and if an odd cycle is found , carry out check(@xmath127 ) in the graph @xmath105 for all ( at most seven ) edges of the odd cycle . add the resulting edge set to the mandatory edges from steps ( c.1 ) , ( c.2 ) , respectively .",
    "if however , @xmath444 is bipartite then with procedure @xmath10-free - bipartite - dim for @xmath444 , find out if the procedure unsuccessfully stops or if there is a @xmath106 in @xmath444 ; in the last case , do check(@xmath127 ) for all edges of the @xmath106 . finally ,",
    "if @xmath444 is distance hereditary bipartite , construct @xmath445 ( the omitted triangle leaf blocks are attached as @xmath78 s and the resulting graph is distance hereditary bipartite ) and solve dim for this graph using the clique - width argument ( or using the linear time algorithm for chordal bipartite graphs given in @xcite ) .",
    "finally check once more whether @xmath12 is a d.i.m . of @xmath0 . if not then @xmath0 has no d.i.m .",
    ", otherwise return @xmath12 .",
    "[ dimp5theorem ] algorithm @xmath10-free - dim is correct and runs in linear time .",
    "* _ correctness _ : the correctness of the algorithm follows from the structural analysis of @xmath10-free graphs with d.i.m . in particular , if @xmath0 is bipartite ( a cograph , respectively ) then procedure @xmath10-free - bipartite - dim ( cograph - dim , respectively ) correctly solves the dim problem .",
    "if @xmath56 is not connected , i.e. , @xmath446 for some nonempty @xmath447 and @xmath0 has a d.i.m .",
    "then by corollary [ cor : coconnwithdim ] , @xmath0 must be a cograph .    for the maximal homogeneous sets @xmath435 of @xmath0 , there are two cases @xmath437 or @xmath438 . by corollary [ homsets ] and lemma [ hom1dimcorrlintime ] , steps ( c.1 ) and ( c.2 )",
    "are correct , and @xmath0 can be correctly reduced by using the obtained set @xmath12 of forced edges . since in procedure",
    "hom-1-dim , in the last two cases , the corresponding leaf blocks are postponed , in the reduced graph , every odd cycle contains only edges in @xmath78 s .",
    "thus , it is correct to apply check(@xmath127 ) for the edges of some odd cycle in the ( non - bipartite ) reduced graph .",
    "finally one has to add the postponed edges and solve the dim problem on these graphs .",
    "_ time bound _ : step ( a ) can be done in linear time since procedure @xmath10-free - bipartite - dim takes only linear time . step ( b ) can be done in linear time since it can be recognized in linear time whether @xmath0 is a cograph ( see @xcite ) and procedure cograph - dim can be done in linear time .",
    "step ( c ) can be done in linear time since modular decomposition can be done in linear time and gives the maximal homogeneous sets @xcite .",
    "there is only a linear number of true twins , and the corresponding reduced graph can be determined in linear time .    in the reduced graph @xmath442 , procedure check(@xmath89 )",
    "is carried out only for a fixed number of edges , and the procedures @xmath10-free - bipartite - dim and find - odd - cycle - or-@xmath10 can be done in linear time .",
    "in this paper we solve the dim problem in linear time for @xmath10-free graphs which answers an open question from @xcite .",
    "actually , we solve the minimum weight dim problem in a robust way in the sense of @xcite : our algorithm either solves the problem correctly or finds out that the input graph has no d.i.m . or is not @xmath10-free .",
    "this avoids to recognize whether the input graph is @xmath10-free ; the known recognition time bound is much worse than linear time",
    ".      * acknowledgement . *",
    "the first author gratefully acknowledges a research stay at the limos institute , university of clermont - ferrand , and the inspiring discussions with anne berry on dominating induced matchings .",
    "cardozo , v.v .",
    "lozin , dominating induced matchings , `` graph theory , computational intelligence and thought '' , a conference celebrating marty golumbic s 60th birthday , jerusalem , tiberias , haifa 2008 . _ lecture notes in computer science _ vol .",
    "5420 ( 2009 ) 77 - 86 .",
    "b. courcelle , j.a .",
    "makowsky and u. rotics , linear time solvable optimization problems on graphs of bounded clique width , _ theory of computing systems _ * 33 * ( 2000 ) 125 - 150 .",
    "a. cournier , m. habib , a new linear algorithm for modular decomposition , in trees in algebra and programming  - caap 94 , _ lecture notes in computer science _",
    "( 1994 ) 68 - 84 .            y.d .",
    "liang , c.l .",
    "tang , efficient domination on permutation graphs and trapezoid graphs , in : _",
    "proceedings cocoon97 _ , t. jiang and d.t .",
    "lee , eds .",
    ", _ lecture notes in computer science _ vol . 1276 ( 1997 ) 232 - 241 ."
  ],
  "abstract_text": [
    "<S> let @xmath0 be a finite undirected graph with edge set @xmath1 . </S>",
    "<S> an edge set @xmath2 is an _ induced matching _ in @xmath0 if the pairwise distance of the edges of @xmath3 in @xmath0 is at least two ; @xmath3 is _ dominating _ in @xmath0 if every edge @xmath4 intersects some edge in @xmath3 . </S>",
    "<S> the _ dominating induced matching problem _ </S>",
    "<S> ( _ dim _ , for short ) asks for the existence of an induced matching @xmath3 which is also dominating in @xmath0 ; this problem is also known as the _ efficient edge domination _ problem .    </S>",
    "<S> the dim problem is related to parallel resource allocation problems , encoding theory and network routing . </S>",
    "<S> it is @xmath5-complete even for very restricted graph classes such as planar bipartite graphs with maximum degree three . </S>",
    "<S> however , its complexity was open for @xmath6-free graphs for any @xmath7 ; @xmath6 denotes a chordless path with @xmath8 vertices and @xmath9 edges . </S>",
    "<S> we show in this paper that the weighted dim problem is solvable in linear time for @xmath10-free graphs in a robust way .    </S>",
    "<S> * keywords * : dominating induced matching ; efficient edge domination ; @xmath10-free graphs ; linear time algorithm ; robust algorithm . </S>"
  ]
}
{
  "article_text": [
    "many astrophysical phenomena involve a dramatic change between timescales of interest  the slow convection and simmering in the interior of a white dwarf followed by ignition of a type ia supernova , for example , or the accretion of a layer of fuel onto a white dwarf or neutron star leading to ignition and runaway at the base of the layer , producing a nova or an x - ray burst .",
    "these two regimes are difficult to follow with a single hydrodynamic algorithm because of the disparity of the relevant timescales .",
    "modeling these long timescale events requires an implicit or anelastic hydrodynamic method ; short timescale events require explicit hydrodynamic methods that can capture the transient phenomena .",
    "often , a one - dimensional stellar hydrodynamics code is used to follow the accretion process until just before the fuel reaches the ignition temperature .",
    "simulations of the flash following the ignition requires a multidimensional hydrodynamics code .",
    "matching the two regimes is a difficult process , and can introduce numerous errors into a calculation .",
    "simulations in the atmosphere or interior of a star or compact object often begin with an initial model that was generated by a 1-d implicit code ( see for example @xcite ) , that evolves the system through the long timescale processes ( accretion , slow convection , simmering of nuclear fuel ) until just before the short timescale dynamics begin .",
    "this 1-d initial model is then used as input to a multidimensional , explicit hydrodynamics code ( see for example @xcite ) .",
    "the mapping of a 1-d hydrostatic initial model onto a multidimensional grid is the focus of the present paper . in the absence of any perturbations or external forces",
    ", the system should remain in hydrostatic equilibrium after the mapping .",
    "the mapping process can introduce a variety of errors .",
    "it is common for the two codes to use different equations of state ( eos ) , which can have a large effect on the structure of the atmospheres .",
    "even if the basic physical components are the same , the treatment of physical details ( for example , coulomb corrections or ionization ) may differ , leading to differences in the pressure of a fluid element between the two codes , even with the same density , temperature , and composition .",
    "simply updating the thermodynamics of the initial model with the new eos will most likely push it out of hydrostatic equilibrium .",
    "one - dimensional initial models are almost always created using mixing length theory to describe the convection , implicitly assuming a velocity field necessary to transport the energy as required .",
    "if the 1-d model was convectively unstable , it is unclear how to define the 2- or 3-d velocity field consistent with the 1-d input velocity field .",
    "when mapping into higher dimensions , there is not enough information to set the velocities properly . typically the velocities are zeroed during this transition .",
    "finally , it is unusual for the number of points and the grid spacing in the initial model to match that in the multidimensional grid .",
    "the initial model may have come from a lagrangian code and will need to be converted into an eulerian coordinate system via @xmath0 the initial model will then need to be interpolated onto the new grid , which will introduce even more hydrostatic equilibrium errors .",
    "once the model is on the new grid , differences in the hydrodynamical algorithms can cause problems .",
    "although the two codes are solving the same equations , it is also very likely that the discretization used in the two codes is different .",
    "the very definition of the quantities on the grid may also differ ; the mapping may proceed from a 1-d implicit finite - difference code , where the values on the grid may represent nodal points , to a multidimensional finite - volume code , where the values represent cell averages .",
    "if everything else were constant between the codes , the differences in the discretization and the definition of the variables ( _ e.g. _ pointwise values vs.  cell averages ) is enough to upset the hydrostatic equilibrium .",
    "poor boundary conditions can drive velocities on the grid , pushing our initial model out of hydrostatic equilibrium .",
    "ideally , the boundaries should match the physics of the initial model and present a smooth state to the hydrodynamics solver .    in this article",
    ", we look at bringing an initial model to hydrostatic equilibrium by studying the effects of the initialization method , the boundary conditions , and the solver itself .",
    "an initial model atmosphere is mapped onto the computational grid , transverse to the direction of gravity .",
    "since we are not concerned with perturbing the model after the mapping , all the calculations presented here will be one - dimensional for computational efficiency .",
    "we consider three different initial models  a simple analytic model , a simple hydrostatic equilibrium model with a complicated eos , and an initial model from an implicit stellar hydrodynamics code .",
    "these three different models will allow us to isolate the importance of the different parts of the code ( initialization , boundary conditions , and solver itself ) .",
    "our goal is to find an optimal configuration that allows us to hold an initial model from a different hydrodynamics code in equilibrium in the present code until a perturbation or external force that we impose disturbs it .",
    "furthermore , we want the resulting mapped hydrostatic model to be as close to the original initial model as possible",
    ". regions where disturbances have not yet propagated should remain quiescent for tens or hundreds of dynamical timescales .",
    "the absolute magnitude of the velocity that a simulation can tolerate will be problem dependent ; however , it must be considerably less than the velocity of any dynamics we wish to study ( e.g. , burning front speed , convective speed , and certainly the sound speed . )    for the hydrodynamics , we chose to use ppm @xcite , a widely used godunov method @xcite",
    ". ppm solves the euler equations in conservative form , using a finite - volume discretization , guaranteeing conservation .",
    "ppm is a shock - capturing scheme , which is desirable for the modeling of the rapid transients in the short - timescale regimes we wish to study .",
    "the implementation of ppm we use is contained in the flash code @xcite , and is based on prometheus @xcite . while we use ppm to demonstrate results in this paper , only the discussion in ",
    "[ sec : ppmhse ] , where we discuss extensions to the method to better treat the gravitational source term , is particular to ppm .",
    "discussion of initialization and boundary conditions should be relevant to any godunov - type method , and perhaps other finite - volume methods .",
    "although flash can use an adaptive mesh , in this study we run all the simulations on a uniform grid .",
    "this paper is organized as follows :  2 discusses the hydrodynamics algorithm employed in this study and improvements made to better follow a hydrostatic atmosphere . in ",
    "3 we look at the initial models that will form the basis of our tests .",
    " 4 discusses the different boundary conditions considered . in  5 , we show the results of a grid of calculations of each of the different initial models , varying spatial resolution , boundary conditions , and the details of the hydrodynamics .",
    "finally , we conclude in  6 .",
    "understanding how a simulation code treats the hydrodynamics is critical to being able to accurately initialize the grid and maintain an atmosphere in hydrostatic equilibrium .",
    "the godunov - type methods we consider here solve the compressible euler equations of continuity , @xmath1 momentum , @xmath2 energy , @xmath3 and species advection , @xmath4 where @xmath5 is the total mass density , @xmath6 is the velocity , @xmath7 is the pressure , @xmath8 is the total specific energy , and @xmath9 is the mass fraction of species @xmath10 . in all discussion below , unless otherwise noted , it is assumed that the gravitational acceleration , @xmath11 , is spatially constant and negative , and in the @xmath12 direction so that @xmath13 .",
    "the euler equations are expressed above in their conservation - law form , @xmath14 where @xmath15 are the conserved quantities .",
    "equation ( [ fv ] ) is the differential form of the conservation law .",
    "godunov methods , and other finite - volume methods , solve eq .",
    "( [ fv ] ) in integral form : @xmath16 where @xmath17 is the cell volume . using @xmath18 to denote the cell average of quantity @xmath19",
    ", we can rewrite this as @xmath20 the integral form has the advantage of being able to deal with discontinuities ( e.g. shocks ) because it requires less smoothness of the data @xcite . the second term in the expression above",
    "is simply the sum of the fluxes through the boundaries of the cell .",
    "since whatever flux leaves one cell enters the neighboring cell , any finite - volume discretization of conservative equations will itself be conservative to roundoff error .",
    "much of what we will need to do throughout the rest of the paper to bring a model into hydrostatic equilibrium will involve interpolating or extrapolating from data to the mesh .",
    "however , because finite - volume methods deal with cell - averaged quantities , rather than cell - center or nodal quantities , one can not use usual interpolants when creating functions that reconstruct the discrete data .",
    "rather than using a function @xmath21 such that @xmath22 , one must create a function such that @xmath23 ( see figure [ interp ] ) . for a uniform mesh in one dimension , polynomial reconstruction functions with @xmath24 taken to be the cell center containing the value @xmath25 ( see also @xcite ) are for first - order : @xmath26 for second order : @xmath27 for third order : @xmath28 and , finally , for a fourth order polynomial : @xmath29 these reconstruction functions will be used throughout the paper .",
    "a high - order godunov method solves the euler equations in conservation - law form using eq .",
    "( [ eq : fv_integral ] ) . in one approach ,",
    "the first step in the calculation of fluxes between the finite - volume zones is to perform a reconstruction to represent values of the variables continuously through the zone . in ppm , this reconstruction step is particularly involved .",
    "care is taken to introduce no new maxima / minima in the polynomial representation of the solution . furthermore , near shocks and discontinuities , the profile is flattened , so as to avoid oscillations .",
    "the reconstructed profiles are then averaged over the region that will be ` seen ' by waves during the next timestep to generate average values on the left and right side of the interface , to provide left and right states as input to the riemann problem .",
    "the riemann solver then constructs the fluxes through the boundary , which are then used to update the cell - averaged solution vector , @xmath18 .",
    "the riemann solver we used is based on @xcite , and can handle an arbitrary eos .",
    "we note that in the absence of any initial velocities , eqs .",
    "( [ mass_eq ] ) to ( [ abundance_eq ] ) reduce to @xmath30 these equations represent the condition of hydrostatic equilibrium ( hse ) .",
    "simulations beginning from initial models satisfying @xmath31 , with zero velocity everywhere should maintain that profile with time .",
    "if this expression is not satisfied perfectly , as differenced in the hydrodynamics algorithm , an acceleration will result .",
    "the non - linear character of these equations means the resulting velocities are likely to be amplified and disturb an initially hydrostatic model .    in the operator - split formulation that flash and many other codes use ,",
    "the hydrodynamics and the gravity operators are not very closely coupled . in this case , maintaining hse relies on the exact cancellation of two possibly large terms , @xmath32 and @xmath33 , calculated in two different ways . since this cancellation wo nt in general be exact , spurious velocities result . in godunov - type solvers",
    ", this cancellation must happen in two places : in the highly nonlinear riemann solve across each cell interface during the flux calculation , and in the subsequent update in each zone .",
    "it is the riemann solve which is the most problematic , and which we address here .    for simulations where one of the acceleration terms dominates",
    ", the resulting small errors may not be significant . for nearly - hydrostatic problems ,",
    "however , the spurious velocities could be disastrous .",
    "thus , for these problems , one would like to forgo the splitting of the imposition of the gravitational and hydrodynamic acceleration , and instead include the gravitational effects directly in the hydrodynamic solve .",
    "other authors , such as @xcite , have suggested ways of informing godunov - type hydro solvers of the gravity source term by notionally putting a constant jump into the energy and density field given to the riemann solver to cancel out the source term while maintaining the cell - average quantities .",
    "this works quite well for both the godunov method , where we have implemented the method in the flash code , ( see figure [ fig : lvq_vs_godu ] ) and for a large class of higher - order godunov methods @xcite .",
    "ppm , and other ` reconstruct - solve - average ' methods @xcite , use a large stencil to compute a smooth reconstruction to the fields on either side of the interface , and average over that reconstruction to generate the left and right states to the riemann problem . since the range over which the reconstruction averaged over is determined by the characteristics and is nt known _ a priori _ , it is not obvious how to nicely and efficiently compute a constant jump in the states to account for the gravitational source term . nonetheless , a smooth analog is possible .    in our",
    "` modified states ' version of ppm , when calculating the left and right states for input to the riemann solver , we locally subtract off from the pressure field the pressure that is locally supporting the atmosphere against gravity ; this pressure is unavailable for generating waves . at each cell interface ( @xmath34 ) , we subtract the pressure locally supporting the atmosphere by computing a reconstruction to the quantity @xmath35 from @xmath36 and @xmath37 , and defining a ` wave - generating ' pressure by subtracting off the integral of this quantity . in the zone to the left of the interface @xmath38 ,",
    "the modified pressure is @xmath39 in the zone to the right of the interface , the modified pressure is @xmath40    we may do this because the absolute value of the pressure does nt matter for generating waves , and only the pressure in excess of hydrostatic equilibrium will create motion .",
    "however , there are other effects where the absolute value of pressure is important  in particular , we use @xmath41 , not @xmath42 , in calculating sound speeds . we also see that , if the original reconstructions of pressure were continuous at the interface ( @xmath43 ) , then the new reconstructions will also be .",
    "the reconstruction of @xmath35 is calculated at each point by calculating the product of @xmath5 and @xmath11 and performing the same reconstruction on this quantity as is used for quantities such as pressure and density .",
    "once this ( usually polynomial ) reconstruction is done , integrating it within the cell is straightforward .",
    "the approach is shown schematically in figures [ fig : modifystate ] and [ fig : modifystate2 ] , using the method described below .",
    "given the above reconstructions , the integral of @xmath35 in cell to the right of the interface is ( using eq .",
    "[ eq : ppmreconstructions ] ) : @xmath51 d\\alpha \\\\     & = & \\delta z_{i+1 } \\left [ - \\frac{1}{3 } ( \\rho g)_{6\\;i+1 } \\alpha^3 + \\frac{1}{2 } \\left ( \\delta ( \\rho g)_{i+1 } + ( \\rho g)_{6\\;i+1 } \\right ) \\alpha^2 + ( \\rho g)_{l\\,i+1 } \\alpha \\right ]   \\\\\\end{aligned}\\ ] ] and in the cell to the left of the interface ( using eq .",
    "[ eq : ppmreconstruction2 ] ) , @xmath52 d\\beta \\\\     & = & -\\delta z_i \\left [ - \\frac{1}{3 } ( \\rho g)_{6\\;i } \\beta^3 + \\frac{1}{2 } \\left ( -\\delta ( \\rho g)_i + ( \\rho g)_{6\\;i } \\right ) \\beta^2 + ( \\rho g)_{r\\,i } \\beta \\right ]   \\enskip .\\end{aligned}\\ ] ] note that , by construction , there are no terms in the integral constant in @xmath49 or @xmath50 .",
    "the reconstructed pressure in zones @xmath10 and @xmath53 when integrating from the right and from the left of the interface at @xmath54 is @xmath55 \\enskip , \\\\",
    "\\label{eq : ppmpressureleft } p_{i+1}(\\alpha ) & = &   p_{l\\,i+1 } + \\alpha \\left [ \\delta p_{i+1 } + p_{6\\;i+1 }                          \\left ( 1 - \\alpha \\right ) \\right ]   \\enskip .\\end{aligned}\\ ] ] the new reconstructions of the pressure used in the modified states become @xmath56 \\enskip -                          \\beta^3 p'_{\\mathrm{cubic}\\;i } \\enskip , \\\\",
    "\\label{eq : ppmwavepressureleft } p'_{i+1}(\\alpha ) & = &   p_{l\\,i+1 } + \\alpha \\left [ \\delta p'_{i+1 } +                           p'^{+}_{6\\;i+1 }                          \\left ( 1 - \\alpha \\right ) \\right ] \\enskip +                          \\alpha^3 p'_{\\mathrm{cubic}\\;i \\enskip .}\\end{aligned}\\ ] ] where @xmath57 a diagram showing how this works at an interface is shown in figure [ fig : demoppmreconstruct ] .",
    "since these reconstructions are used to create the states for input into the riemann problem , the effect of gravitational acceleration is incorporated directly into the hydrodynamics .",
    "thus , its effects need not be added in later in the construction of the input states to the riemann solver ; in particular , the terms corresponding to those involving gravity in @xmath58 in eq . ( 3.7 ) of @xcite are removed .",
    "it is still necessary however to add the gravitational terms to the momentum and energy when doing the zone updates , as specified in eq .",
    "for example , the momentum is updated according to @xmath59 where @xmath60 is the flux through the @xmath54 interface .",
    "the results of closer coupling of the gravity to the hydrodynamics is shown in figures [ fig : lvq_vs_godu ] and [ fig : hse_vs_ppm ] . in both figures , the results are from the simulation of an isothermal atmosphere , discussed in  [ gamma_model ] , with a pressure scale height at the base of @xmath61 and sound speed at the base of @xmath62 . in figure [ fig : lvq_vs_godu ] we show the effects of using leveque s method in a godunov solver , and in figure [ fig : hse_vs_ppm ] we show the results of using the above - described modified states in ppm . in both cases , we can see a corresponding increase in accuracy of the solution .",
    "note that neither the two figures , nor the two methods of dealing with the source - terms , can be directly compared , as the first figure demonstrates results with a very low order godunov method , and the second from using higher - order ppm .",
    "the figures demonstrate only that our source - term correction to our hydrodynamic solver gives a similar improvement in results as other approaches in the literature work for other solvers .",
    "to better understand the effects of the initialization , boundary conditions , and hydrodynamics , we consider three different initial models .",
    "we choose the conditions of all of the initial models to roughly agree  a base density of a few @xmath63 and a base temperature of @xmath64 k , with a solar - like composition .",
    "we use a constant gravitational acceleration , @xmath65 .",
    "these conditions are relevant to an accreted atmosphere on a 1.4 solar mass , @xmath66 neutron star .",
    "the accretion phase is computed using a one - dimensional implicit hydrodynamics code for many dynamical times , and the subsequent burning front propagation is then followed using a multidimensional hydrodynamics code .    once the initial model is set up , it will be mapped onto the computational grid .",
    "the ppm algorithm we use carries the cell averaged value of each variable in each zone . for an initial model that is not analytic , but rather a series of points and corresponding values",
    ", we will need to map onto the grid with the understanding that the values on the new grid are treated as zone averages .",
    "we will consider several different initial models of increasing complexity below .",
    "the simplest initial model one can imagine is an isothermal atmosphere in hydrostatic equilibrium , whose pressure is obtained via the ideal gas law , @xmath67 where @xmath7 is the pressure , @xmath11 is the constant gravitational acceleration , @xmath5 is the density , @xmath68 is the boltzmann constant , @xmath69 is the temperature , @xmath70 is the average atomic mass , @xmath71 is the nucleon mass , and @xmath72 is the isothermal sound speed .",
    "although this eos is not relevant to a neutron star atmosphere , we will use it to examine some of the properties of hydrostatic equilibrium in a godunov type code .",
    "( [ eq : hse_ideal ] ) can be integrated analytically to yield an exponential atmosphere , @xmath73 where @xmath74 is the base density , and @xmath75 the quantity @xmath76 , the scale height of the atmosphere , will play an important role in determining the resolution necessary to hold any of the initial models steady . if @xmath77 , where @xmath78 is the zone size , then the model will be very under - resolved , and we can expect to have great difficulty in maintaining hse .    to see this ,",
    "consider modeling the exponential atmosphere with a parabola , similar to the way a second - order godunov - type code will model the physical quantities .",
    "if the pressure at @xmath24 is @xmath79 , and the left and right points are @xmath80 on either side with cell - averaged pressures @xmath81 and @xmath82 ( from eq .",
    "[ eq : quadinterp ] ) , we can construct the quadratic that has the same cell - averaged quantities as the exponential ; in particular , the derivative of pressure over the cell containing @xmath24 is @xmath83 the cell - averaged pressures on the left and right will be @xmath84 and @xmath85 respectively .",
    "( this comes from integrating the exponential pressure , @xmath41 over the left and right cells , which range from @xmath86 and @xmath87 respectively . ) with the above equation and @xmath88 , and defining @xmath89 , the acceleration ( in units of @xmath11 ) at @xmath24 is @xmath90 which , to second order in @xmath91 , is @xmath92 .",
    "the first term of this acceleration is simply the gravitational acceleration , leaving an error in acceleration of magnitude @xmath93 . per cfl",
    "timestep , this corresponds to a spurious velocity , expressed as a mach number , of @xmath94    thus , if one wishes to consider very subsonic flows @xmath95 moving through a stratified atmosphere , one needs at _ least _ 6 points per pressure scale height , or else one will get velocities of greater magnitude every timestep . since the velocity errors are cumulative , one would realistically need much more than that .      the next complication we can imagine adding to our initial model is using a more realistic equation of state .",
    "this more generalized eos prevents us from integrating the model analytically as above , but we can still compute the model on an arbitrary grid by simply differencing the equation of hse ( eq .  [",
    "eq : hse_full ] ) . to recover cell averaged quantities , we can subsample each zone and compute the average .",
    "we use a helmholtz free energy , table - based eos for a degenerate electron gas with perfect gas ions and radiation pressure included with flash @xcite for this model .",
    "the material at the base of this model is partially degenerate , and this eos accurately describes the thermodynamics in our neutron star atmosphere . to complete this model",
    ", we again assume that our atmosphere is isothermal .",
    "the atmospheric structure is completely determined by the choice of temperature ( we use @xmath96 k ) , the composition ( we assume 0.7 @xmath97h and 0.3 @xmath98he by mass ) , and the density at the base ( we take @xmath99 ) . because of the complexity of the eos , despite the fact that this is an isothermal atmosphere , the scale height is not constant .    the pressure and density profiles are computed as follows . at each point , the @xmath9 and @xmath69 are taken as given , and the equation of hydrostatic balance , @xmath100 is numerically integrated outwards , using reconstructions to the data , as described below .",
    "this equation , plus the equation of state , is enough to determine ( by iteration ) both the pressure and density separately .",
    "given the cell - averaged pressure and density data from the previous points and the functions in  [ sec : cellavg ] , we can construct functions for the pressure and density field up to and including the current cell . given two such functions , one for density and one for pressure",
    ", we can use eq .",
    "( [ eq : hse ] ) to relate @xmath101 and @xmath82 .",
    "if we use a linear function to model the density , as in eq .",
    "( [ eq : linearinterp ] ) , we must use a quadratic one to model the pressure ( because of the derivative ) , as in eq .",
    "( [ eq : quadinterp ] ) . using these expressions in eq .",
    "( [ eq : hse ] ) , and solving for @xmath82 and @xmath101 , we get @xmath102 which , with the eos , is enough to determine @xmath82 and @xmath101",
    ". we will refer to this expression as our first - order differencing .    for more accuracy",
    ", we can use a quadratic to fit the density , and a cubic to fit the pressure .",
    "the cubic is given by eq .",
    "( [ eq : cubicinterp ] ) .",
    "we then find @xmath103 we will use both of these differencing schemes in  [ results ] to assess how large of a difference the choice makes .    a final difference scheme , using a quartic ( eq . [ eq : quarticinterp ] ) and a cubic ,",
    "can be constructed : @xmath104 but this extra accuracy is not expected to be significant for a second - order accurate code , and numerical experiments confirm this .    to generate our model , we take the base density and pressure and use either eq . (",
    "[ eq : firstorderdiff ] ) or ( [ eq : secondorderdiff ] ) to find the pressure and density in the next zone .",
    "we continue this procedure , moving outward from the base , until the density falls below a small density cutoff we impose ( @xmath105 ) .",
    "figure [ isothermal_model ] shows a plot of this model .",
    "we notice that as the density changes , the scale height also changes . at the top of the atmosphere , the small scale height is reflected in the steepness of the density just before our low - density cutoff .",
    "the sound speed at the base of the atmosphere is @xmath106 , giving a dynamical timescale for the atmosphere of @xmath107 .",
    "figure [ order_diff ] shows the relative error in the density of the model when using the first - order vs. second - order differencing .      the final model we consider is one that comes directly from the kepler 1-d stellar evolution code @xcite .",
    "this model was generated by accreting h / he onto the surface of a neutron star , gradually building up a fuel layer 17 meters thick .",
    "nuclear burning , a complex equation of state , and convection were included in this calculation .",
    "the evolution was stopped shortly before runaway , and the velocities in the atmosphere are small , but non - zero .",
    "additionally , this code solved the hydrodynamics equations in a lagrangian formulation , requiring a translation from mass - based zones to an eulerian grid .",
    "the number of grid points in the kepler model is much smaller than the number of points on our eulerian grid .",
    "we note that in contrast to the other models described above , the composition in this model is not uniform , but abruptly changes at the transition from the accreted fuel layer to the underlying neutron star , which is comprised of iron .",
    "this in turn creates a density jump , since the ionic component of the pressure scales as @xmath108 .    to import this model onto the flash grid , we use the following prescription",
    "first , the model is re - gridded from the original lagrangian mesh onto a uniform , one - dimensional eulerian grid , whose resolution is equal to the finest spatial resolution on the multidimensional hydrodynamic grid .",
    "once interpolated , we renormalized the abundances .",
    "varying precision in the initial model data file compounded by interpolation errors may result in a set of abundances in a zone that do not sum to unity ; we divide by the actual numerical sum of the abundances to enforce the constraint of mass fractions summing to one .",
    "next we take the temperature , density , and composition as given , and update the remaining thermodynamic variables in the zones with the flash eos . in practice , the change in the thermodynamic variables caused by the differences in the eos is small , @xmath109 .",
    "we now want to restore hydrostatic equilibrium to this model , after adjusting the thermodynamic variables .",
    "the velocities are set to zero in every zone , since we are not presently concerned with how to map a one - dimensional velocity field into multiple dimensions .",
    "if the model was really from a slowly simmering phase , this is not a bad approximation ; in the model used in these calculations , for instance , the maximum velocity was @xmath110 . to restore this model into hydrostatic equilibrium",
    ", we must pick a point in the model whose @xmath5 , @xmath69 , and @xmath9 will remain fixed , and integrate outward from there .",
    "we show two choices here , ( i ) , taking the bottom - most zone as the starting point , and ( ii ) , taking the point just above the composition interface as the starting point .",
    "the differencing is performed in the same manner as described in the previous section .",
    "we experiment with both differencing schemes , eqs .",
    "( [ eq : firstorderdiff ] ) and ( [ eq : secondorderdiff ] ) .",
    "this differencing is continued throughout the entire model .",
    "when integrating toward the top of the atmosphere , we stop putting the model into hydrostatic equilibrium once the density becomes so small as to be no longer dynamically important .",
    "we use a cutoff value for the density of @xmath111 , and affectionately refer to the material above this as the `` fluff '' .",
    "this cutoff is needed since we can not continue the hse profile to arbitrary heights , as the densities would quickly underflow .",
    "we note that instead of adjusting the density along with the pressure , one could adjust the temperature . for cases where the atmosphere is degenerate ( like our present case ) , this can be problematic due to the insensitivity of the pressure on the temperature .",
    "we do not explore this approach in the present paper .",
    "figure [ kepler_model ] shows the results of applying this procedure to our kepler initial model .",
    "the two panels differ in the choice of the reference point used when differencing the model into hse .",
    "we note that in the top panel , where we chose the base of the model to begin the integration , the errors compound greatly as we integrate outward , especially where we have to integrate through a material discontinuity , which is poorly modeled by a low - order polynomial . at the base of the fuel layer",
    ", there is a significant difference in the density .",
    "the agreement is much more uniform in the lower panel , since the reference point ( the base of the fuel layer ) is near the center of the model .",
    "we use the base of the fuel layer as the reference point in all kepler - model simulations presented here .",
    "the stability of the model atmosphere can be very sensitive to the choice of boundary conditions . in these highly - subsonic simulations ,",
    "the hydrodynamic equations are essentially elliptic , so that boundary conditions matter as much as the initial conditions inside the computational domain .",
    "we investigate many different boundary conditions at the lower boundary , and two different boundary conditions at the upper boundary in this study .    in flash , like most finite - volume hydrodynamics codes ,",
    "the boundary conditions are implemented in fictitious zones outside of the physical domain called guardcells or ghostcells . in order to allow for refinement and parallelization of the code",
    ", the computational domain is broken into multiple sub - domains , or blocks .",
    "each block is surrounded by a perimeter of guardcells that hold the data from neighboring blocks , or , if at a physical boundary of the computational domain , are filled with the proper boundary condition .",
    "the problem of generating good hydrostatic boundary conditions is closely related to that of finding good ` outflow ' or non - reflecting boundary conditions ( @xcite ) , which remains an area of research . in both situations , to create a desired flow condition , one has to set up corresponding physical fluid conditions , essentially inverting the riemann problem . further compounding",
    "the difficulty is that the problem must be solved in a way consistent with one s hydrodynamic solver .",
    "below are several boundary conditions , both commonly - used in the astrophysical literature and novel , which are approximations of solutions to the inverse problem .",
    "the lower boundary must support the weight of the atmosphere above it , while still allowing for dynamics .",
    "we consider two classes of boundary conditions  a standard reflecting boundary , and a hydrostatic boundary , which provides pressure support to the material above while still allowing flow through the boundary .",
    "the simplest lower boundary we can use that will support the weight of the material above it is a reflecting boundary .",
    "this is one of the most commonly used boundary conditions when evolving a hydrostatic atmosphere .",
    "absent any gravity , this boundary condition simply reverses the sign of the normal velocities in the boundary region , and gives all other variables a zero - gradient .",
    "the result is that there is no flow through the boundary .",
    "any wave that hits the boundary is reflected back into the interior .",
    "this boundary condition is effective at restricting flow through the boundary , but it will not allow sound waves to leave the grid as the initial model relaxes .    in the presence of gravity , the traditional reflecting velocity boundary condition of ` flipping ' the velocity in the direction transverse to the boundary , @xmath112 ( where @xmath113 is the location of the physical boundary ) will not work , because there is an acceleration term due to gravity .",
    "better is @xmath114 which takes into account the acceleration performed at the hydro step when integrating the equations . in a finite volume - code",
    "it is easy , in addition , to enforce the desired ` no - penetration ' condition exactly by setting the flux across the interface defining the boundary to exactly zero .",
    "this is done in the reflecting boundary condition results below .",
    "the reflecting boundary is artificial in the sense that it does not allow waves to flow off the grid .",
    "an alternative is to use a boundary condition that understands hydrostatic equilibrium .",
    "the basic strategy is to provide pressure support to the material above the boundary by solving the equation of hydrostatic equilibrium in the boundary region .",
    "this is done by simple differencing as described above . when filling the guardcells , an additional constraint on the material is needed , since the hse equation does not uniquely determine the boundary states given the states above .",
    "we assume that the composition and either density , temperature , or entropy are constant .",
    "this is not a complete set of possible constraints , but is enough to illustrate the effect this can have on the evolution of an atmosphere .",
    "any constraint should be motivated by the physics of the model under study .",
    "figure [ fig : bc_guardcells ] shows the density , temperature , and pressure at the base of the kepler model ( including guardcells ) for the different choices of constant variable .",
    "we see that they all yield roughly the same pressure profile , since the pressure at any point in the atmosphere is determined by the weight of the material above it : @xmath115 where @xmath116 is the column density .",
    "because of the degeneracy of the gas , we see that the temperature must rise dramatically in the guardcells in the constant density case in order to provide the needed pressure support .",
    "it is important to note that the best boundary condition may be problem dependent .",
    "differences in the eos or the physics of the atmosphere will affect the choice of the constraint .    the easiest hydrostatic boundary to implement uses the simple first - order differencing of the hydrostatic equilibrium equation ( eq . [ eq : firstorderdiff ] ) . in ",
    "[ realeos_atm ] , we derived this to find the pressure in the zone immediately above the current zone . at the lower boundary ,",
    "we need to find the pressure in the zone below the last interior zone , given the pressure and density in that zone .",
    "thus , our difference equation becomes : @xmath117 the right hand side requires the density in the @xmath118 zone . in this case",
    ", we assume that the density is constant ( zero - gradient ) in the guardcells , initializing all of them with the value of the density in the first interior zone .",
    "therefore in order to satisfy the eos , the temperature will rise in the guardcells .",
    "all other variables are also given a zero - gradient , except the velocity .",
    "we use three different methods for dealing with the velocity .",
    "the first is to give it a zero gradient , so the velocity in the guardcells is constant , and equal in magnitude and direction to the velocity in the last interior zone .",
    "we call this the `` outflow '' condition .",
    "the next method is to perform the outflow method only if the velocity is leaving the grid .",
    "if the sign of the velocity in the first interior zone is positive , indicating that material is flowing onto the grid , we set the velocity in the guardcells to 0 .",
    "we call this the `` diode '' boundary condition .",
    "the final method is to simply reflect the velocity , as indicated by eq .",
    "( [ eq : simple_reflect ] ) .",
    "a slight variation on the above is to give the temperature a zero - gradient in the guardcells , initializing it to the value in the first interior zone .",
    "then the density will need to increase ( as given by the eos ) in order to give the pressure demanded by eq ( [ eq : bc_first_order ] ) .",
    "we also experiment with the three different velocity methods described above .",
    "a more realistic boundary condition for a stellar model is to make the temperature / density profile isentropic and in hse . for an atmosphere in hydrostatic equilibrium",
    "the adiabatic temperature gradient is @xmath119 ( see , for example , @xcite ) where @xmath120 and @xmath121 is the specific heat at constant pressure .",
    "together with the equation of hydrostatic equilibrium , this specifies the conditions in the guardcells .",
    "we still have to assume a function for the velocities , and we use the same choices as above .    to implement this boundary condition",
    ", we use a first order differencing for the hse equation ( eq . [ eq : bc_first_order ] ) , and a simple first order differencing of eq .",
    "( [ eq : ad_t ] ) .",
    "these two expressions are solved simultaneously along with the eos and iterated until we obtain convergence of the pressure and density .",
    "we can use a variation of eq .",
    "( [ eq : secondorderdiff ] ) to perform the differencing in the guardcells .",
    "this is a higher order differencing than that used in the above boundary conditions , and should give more accurate results .",
    "again , we are interested in using the information in the zones just above the lower edge of the computational domain to fill the guardcells below it , so the differencing is in the opposite direction as before : @xmath122 again we give all variables except velocity a zero - gradient , and retain our three choices for dealing with the velocity as described above . in this case",
    "we keep the density constant in the guardcells and the pressure given by eq ( [ eq : bc_second_order ] ) as a constraint on our eos to give the temperature in the guardcells .",
    "thus the temperature will rise with depth in our boundary .",
    "this case is the same as above , but we take the temperature as constant in the boundary zones and solve eq ( [ eq : bc_second_order ] ) in tandem with the eos to find both @xmath123 and @xmath124 simultaneously . again , we allow for all three different velocity choices .",
    "this case is another implementation of the constant entropy boundary condition defined above , but we use the second order differencing for the hse equation ( eq . [ eq : bc_second_order ] ) , and keep the first order differencing for the temperature expression .",
    "the pressure and density are the two variables that are involved in the dynamics , so this is why these are treated as second order .",
    "the choice of the upper boundary is also important .",
    "further out in the hydrostatic envelope , eventually the density will reach a very small value , such that it can no longer be represented in ieee floating point arithmetic without underflowing .",
    "figure [ isothermal_model ] illustrates this effect nicely . above 2000",
    "cm , the density drops off very rapidly .",
    "if we were to continue to follow the density down to arbitrarily small values , the change in the height of the atmosphere would be insignificant , to the point where it would be less than a computational zone .",
    "there are two major paths one may take to get around this .",
    "first , one may only put a portion of the atmosphere on the grid , leaving off the top few scale heights . in this case",
    ", a hydrostatic boundary condition is required at the top , preferably one that makes the same assumptions as the lower boundary .",
    "the difficulty with this method is that , if in the dynamics that follow in a simulation the envelope heats up , the scale height will get larger , and more and more of the envelope will be lost through the top boundary .",
    "this can be overcome partially by employing an expanding grid , but that case is not considered here . once material leaves the top of the grid , it is lost forever , and would be unable to further contribute to the dynamics of the simulation .",
    "an alternative is to follow the hydrostatic structure down to a cutoff value of density ( something large enough still so it will not underflow ) , and then apply a uniform density above this point in the atmosphere .",
    "this creates the ` fluff ' described in  [ stellar_evol_model ] .",
    "the top boundary can then be a zero gradient , or impose some inflow characteristic of accretion .",
    "since we do not place this material in hydrostatic equilibrium , it will fall under the influence of gravity .",
    "however , its mass is so small that it will have very little dynamical impact .",
    "leaving a buffer of the low - density material above the hydrostatic envelope allows the envelope to expand in the computational domain .",
    "in particular , expansion that is non - uniform can more easily be handled in this case than with an expanding eulerian grid .",
    "this choice of boundary condition allows the exploration of surface features , such as waves , that are created as localized heating causes some regions of the envelope to expand before others .",
    "we choose this avenue for most of the simulations presented in this paper , and study the effect of this choice in  [ result : upper_bc ] .",
    "we ran simulations using both the isothermal , realistic eos atmosphere , and the kepler generated initial atmosphere .",
    "both initial models were run many times , varying the resolution , grid type , boundary conditions , and hydrodynamics . unless otherwise noted , all simulations use the standard ppm algorithm .",
    "table [ parameters ] summarizes the different parameters we explore .",
    "all calculations were performed in one dimension , for computational efficiency .",
    "we examine the effect of each of these parameters in turn below .        as discussed in ",
    "[ lower_bc ] , there are a large number of variations of the hydrostatic boundary condition .",
    "we consider the effect of the boundary conditions first , since , as we will see , the choice of boundary condition has a large effect . to examine the influence of all these differences , we ran each of our initial models on a uniform grid with the standard ppm algorithm , varying the parameters in the boundary conditions .",
    "all of these calculations have a zone width of 2.4 cm and were run for @xmath125 ( @xmath126 20 dynamical times ) .",
    "the results are summarized in figures [ fig : iso_bc_plots ] and [ fig : bc_plots ] .",
    "a total of 10 cases are examined here for both the kepler initial model and the isothermal atmosphere initial model , showing both the density and velocity profiles at the end of the calculation ( @xmath125 ) , the total momentum as a function of time , and the kinetic energy as a function of time .",
    "these latter two plots allow us to understand how the velocities are evolving with time  whether they are relaxing down to a quiet state ( as we hope ) , or increasing without bound .",
    "reflecting and hydrostatic boundaries were used at the lower boundary , and a fluff condition was used at the top .",
    "we note that this momentum includes that of the fluff , but since its density is so low , we expect it to only make a minor contribution . despite our best efforts at initializing the grid with our model in a manner consistent with our choice of hydrodynamics algorithm ,",
    "some velocities are quickly generated as we evolve our models in time .",
    "all simulations were initialized using the second order differencing and the second order variants of the different boundary conditions were used .",
    "ideally , the velocities would be small in magnitude and diminish quickly as the model relaxes .",
    "we will look at the effect of the initialization method in a latter section .",
    "we note a number of things right away  the hydrostatic boundary conditions that keep the temperature or entropy constant do a far better job than those that keep the density constant . in figures [ fig : bc_plots]d - e , we note that the kepler atmosphere is falling off the bottom of the grid and large negative velocities are dominating in the atmosphere . in the case of hydrostatic with constant density , but reflecting velocities ( figure [ fig : bc_plots]f ) , we note that the atmosphere is held in the box , due to the reflection of the velocities .",
    "we refer back to figure [ fig : bc_guardcells]the extreme rise in temperature in the guardcells needed to support the weight of the material above the boundaries is the likely culprit here .",
    "this situation is much more severe for the isothermal atmosphere case ( figure [ fig : iso_bc_plots]d - e ) , as the model quickly ( @xmath127 ) falls through the bottom of the domain .",
    "the hydrostatic conditions that use a simple zero - gradient / outflow condition on the velocities for the constant temperature case ( figures [ fig : iso_bc_plots]a and [ fig : bc_plots]a ) show the momentum monotonically increasing with time , while the constant entropy case ( figures [ fig : iso_bc_plots]g and [ fig : bc_plots]g ) show the momentum monotonically decreasing with time .",
    "the velocity is very flat in the hydrostatic atmosphere , with the exception of a ` hiccup ' at the composition interface of the kepler model .",
    "however , this velocities steadily increases in magnitude with time , making this condition ill - suited for long simulations .",
    "any condition ( hydrostatic or not ) that reflects the velocities at the lower boundary ( figures [ fig : iso_bc_plots]c , f , i - j and [ fig : bc_plots]c , f , i - j ) shows a ringing which may be observed in the momentum and energy plots , with a period about equal to the dynamical timescale for the envelope . this is due to the reflection of the velocities , which , with the hydrostatic state , diminishes the waves that can penetrate through the boundary .",
    "the diode constraint coupled with the constant temperature hydrostatic boundary condition also shows a ringing , with an amplitude ( see figures [ fig : iso_bc_plots]b and [ fig : bc_plots]b ) that is on the order of , or less than that of the reflecting boundaries ( compare to figures [ fig : iso_bc_plots]c and [ fig : bc_plots]c ) .",
    "it also appears to be decreasing in amplitude with time .",
    "after an initial transient , the diode boundary conditions give the lowest velocities in the envelope of any of the boundary conditions tested .",
    "we can also look at the effect of the order of the hse differencing in the boundary condition on the velocities in the envelope . in all cases ,",
    "the velocities and magnitude of the momentum are smaller with the 2nd order differencing ( holding the other parameters constant ) .    the boundary condition that leads to the quietest velocity field , after the initial transients die down , is the hydrostatic boundary with constant temperature and diode velocities .",
    "for the kepler model , this boundary condition gives a momentum after @xmath128 that is 2 orders of magnitude smaller than the reflecting boundary .",
    "we stress again that this finding may be problem dependent , and tests should be done on any new problems to see if this remains the case .",
    "figure [ fig : iso_fluff_comp ] shows the density and velocity as a function of height at several times for the isothermal atmosphere initial model , with both the fluff upper boundary and a hydrostatic boundary at the top of the domain .",
    "the hydrostatic boundary was first order , constant temperature , with a diode condition on the velocity .",
    "the isothermal , complex eos initial model was used for these runs .",
    "the two runs were done with the same spatial resolution , on a uniform mesh . in the fluff case ,",
    "the domain extended to 4000 cm , but we only show the lower 2000 cm , to match the domain used in the hydrostatic upper boundary case . figure [ fig : xrb_fluff_comp ] shows the same comparison for the kepler initial model , again run at identical spatial resolutions , with domain sizes of 3000 cm ( without fluff ) and 6000 cm ( with fluff ) .    in both figures",
    "we see that the fluff boundary at the top of the domain is at least as effective as a hydrostatic boundary at the top in maintaining a hydrostatic atmosphere .",
    "in fact , the velocities generated throughout the atmosphere with the fluff boundary condition are generally smaller in magnitude than those with the upper hydrostatic boundary . coupled with the benefit that the envelope is able to expand on our grid with out losing dynamically important mass through the top boundary ,",
    "the fluff condition at the upper boundary is the optimal choice .",
    "all of the boundary condition comparisons shown above were done with second order differencing in the initialization .",
    "we can also use the first order differencing ( eq . [ eq : firstorderdiff ] ) to put the initial model into hse on our grid .",
    "this does not have nearly as large an effect as the different boundary conditions do .",
    "figure [ fig : init_order_comp ] shows the kepler initial model with both first and second order differencing done at initialization .",
    "both runs used the hydrostatic lower boundary with constant temperature and diode velocities , and the standard ppm algorithm .",
    "looking at the plot of momentum verses time , we notice that at early times , the first order case generates higher positive velocities initially than the second order case , as the model relaxes to the grid .",
    "the two cases quickly settle down to roughly the same state after about @xmath129 , and by the end of the calculation ( @xmath125 ) , the plot of velocity as a function of height does not show much difference between the two runs .",
    "this is to be expected ; absent any driving terms from poor boundary conditions or energy inputs , the simulation will eventually ` find ' hydrostatic equilibrium on its own .",
    "however , a good choice of initial model will strongly reduce the initial transients .",
    "this model is more complicated than the simple isothermal atmosphere because of the composition interface .",
    "this leads to the more severe velocities .",
    "we note that this comparison was done with the best choice boundary conditions we had available .",
    "if the boundary conditions are poor , or the problem is under resolved , then spurious velocities will continue to be driven in the simulation every timestep .",
    "everything else , no matter how bad it is , will eventually even out as the euler equations do their work and find hse .",
    "the order of the initialization method should match the order of the boundary condition in to avoid transients caused by jumps at the boundaries .    in some problems",
    ", the initial transient may not be a problem . in others ,",
    "however , they may interfere with a phenomenon one is trying to measure , or  if the transients cause spurious burning , or cause material unphysically to leave your computational domain  they may alter or change entirely the long - term evolution of the system .",
    "figure [ convergence ] shows the kinetic energy verses time for an isothermal atmosphere with 2nd - order differencing and 2nd - order constant - temperature boundary conditions .",
    "this figure shows only the short term evolution . our estimate in ",
    "[ gamma_model ] showed the importance of resolving the scale height in minimizing any spurious velocities .",
    "we therefore expect to see improvement in the ambient velocities as we increase the spatial resolution .",
    "as we might expect , our model shows second - order convergence ( see figure [ convergence1st2ndppm ] ) in resolution .",
    "we can combine the effects of higher - order initialization and resolution by looking at the convergence behavior of the velocities in the isothermal atmosphere with different initialization schemes .",
    "this is also shown in figure [ convergence1st2ndppm ] .",
    "we see that with the operator - split gravity , we still only get 2nd order convergence even with the higher - order spatial discretization for the initial model , however the spurious kinetic energy is an order of magnitude lower .",
    "figure [ fig : xrb_res_study ] shows the long term evolution of the kepler initial model for four different spatial resolutions .",
    "the ` 6 level ' curve corresponds to that shown in figure [ fig : bc_plots ] .",
    "all four simulations were run with the first order initialization and the constant temperature hydrostatic boundary conditions .",
    "we see that as the resolution is increased ( each level is a doubling in resolution ) , the momentum and kinetic energy decreases dramatically , as we would expect .",
    "we performed , with our modified - states ppm , the same numerical experiment as in ",
    "[ res_effect ] , which already had fairly low velocities .",
    "the results are shown in figure [ fig : ppm - hse ] . by modifying the input states , the numerically - induced kinetic energy drops by three orders of magnitude over those shown in figure [ fig : ppm - nohse ] , and",
    "converges to third - order , rather than to second - order , as shown in figure [ fig : ppmhseppmconverge ] .",
    "the more direct coupling of the gravity into the hydrodynamical solver increases both the accuracy of the solution and the convergence properties .",
    "this improvement will only become apparent when using a good initialization method and boundary condition , otherwise , any improvement it may yield will be swamped by noise from these other sources .",
    "we used the second order constant temperature / diode velocity boundaries for these simulations to minimize any boundary effects .",
    "we have studied the effects of the initialization process , boundary conditions , resolution , and the hydrodynamic algorithm on the process of mapping an initial model onto a eulerian grid in a godunov - type code .",
    "we saw that depending on how one goes about the process , the result can be a nicely relaxed , quiet mapping , or one dominated by high velocities , swamping out any physical processes that one may be interested in studying .",
    "boundary conditions have the greatest impact on maintaining the stability of the hydrostatic atmosphere . the standard reflecting boundary is poorly suited for maintaining a hydrostatic envelope  the inability of minor pressure disturbances to escape off the bottom of the grid as the model relaxes results in high velocities .",
    "the actual choice of boundary condition should reflect the physics of the atmosphere being supported .",
    "if the initial model is isothermal , then an isothermal / hse boundary condition provides with best match .",
    "the constant entropy boundary may be a better match for an atmosphere that is generated by a stellar evolution code .",
    "for any model , a hydrostatic boundary condition , using differencing that matches that of the initialization , with a secondary constraint that matches the physics of the model atmosphere is the best solution . assuming that the density is constant in the boundary proved to be the worst assumption .",
    "the degeneracy of the eos puts strong demands on the temperature profile to counteract the weight of the atmosphere .",
    "this assumption may fare better with a gamma - law eos , but this was not considered in the present paper .",
    "we also demonstrated that , once an appropriate boundary condition is chosen , the treatment of source terms in the hydrodynamic solver can have an impact on the stability of the atmosphere .",
    "our modified - states ppm was effective in reducing the magnitude of the spurious velocities generated as our model relaxed onto our grid .",
    "this method , or that proposed by @xcite , can be adopted to most godunov type codes to increase the accuracy of the hydrodynamics in the presence of gravity .",
    "as expected , the resolution is important in reducing the errors in maintaining a hydrostatic atmosphere .",
    "the resolution should be chosen to be fine enough to resolve the scale height of the atmosphere well , and to keep ambient velocities smaller in magnitude than whatever physical processes under study would yield . in an amr calculation ,",
    "the coarsest resolution used in the simulation must be this fine , even in regions of the atmosphere with no features .",
    "boundary conditions , source terms , and poor resolution can all be sources of spurious velocities throughout a calculation .",
    "by contrast , initialization methods can cause at most a transient while the simulation settles into hydrostatic equilibrium . this transient may take a while to settle , however , or",
    "may have dynamical consequences later in the simulation , so care must be taken .",
    "the initialization methods described in this paper produce profiles which generate very small transients .",
    "we note that the methods that we describe in this paper can be applied to any initial hydrostatic atmosphere . as a final example , we show the havoc a poorly initialized model can wreak in a simulation .",
    "figure [ fig : beforeafter ] represents two - dimensional simulations evolved from a one dimensional model provided by s.  a.  glasner ( 2002 , private communication ) of a classical nova precursor ; it is a model from the same simulation that produced the 1d model used in @xcite , but at an earlier time , before convection begins .",
    "thus , one could hope to examine the multidimensional onset of convection in these nova precursors @xcite .",
    "the convection is driven by nuclear reactions ` simmering ' near the interface between the c / o white dwarf and the accreted layer of stellar material .",
    "since the vertical scale of the simulation is significant compared to the radius of the white dwarf , plane - parallel inverse - square gravity is used rather than constant gravity .",
    "the model is perturbed in the highest - temperature region of the accreted atmosphere with a 10% temperature increase at time @xmath130 .",
    "the white contours in the figures enclose the region in the simulation with a temperature greater than this perturbed temperature .",
    "the black contour marks the white dwarf / accreted material interface .    without taking any of the precautions outlined in this paper , an unphysical ` settling ' occurs , caused by poor boundary conditions and differences in the eos .",
    "this generates large velocities ( @xmath131 ) and compressional heating , as shown in the figure .",
    "the heating , combined with unphysical mixing across the interface caused by the large velocities , then cause a completely spurious layer of increased burning , which then dominates the long - term evolution of the simulation .",
    "by contrast , the simulation using constant - temperature second - order boundary conditions , second - order initialization , and the modified - states ppm shows the beginning of the formation of convective rolls .",
    "both simulations were done on a @xmath132 uniform mesh , with a computational domain of @xmath133 ; figure [ fig : beforeafter ] shows only the domain near the interface of the white dwarf and the accreted material .",
    "the authors thank stan woosley for providing initial models from the kepler code for use in this study , and ami glasner for providing the initial nova model used .",
    "we thank edward brown for useful comments on the manuscript .",
    "support for this work was provided by the scientific discovery through advanced computing ( scidac ) program of the doe , grant number de - fc02 - 01er41176 and doe grant number b341495 to the asci / center for astrophysical thermonuclear flashes at the university of chicago .",
    "ljd is supported by the krell institute csgf .",
    "the work of t. plewa was partly supported by the grant 2.p03d.014.19 from the polish committee for scientific research .",
    "these calculations were performed on the nirvana origin 2000 cluster at los alamos national laboratory .",
    "all simulations were performed with the flash 2.1 .",
    "flash is freely available at http://flash.uchicago.edu/.",
    "in this paper , we have considered only the case of constant gravity .",
    "it is relatively straightforward to extend this to the case of fixed but non - spatially - constant gravitational acceleration .",
    "consider for instance eq .",
    "( [ eq : firstorderdiff ] ) .",
    "this was derived by using a linear reconstruction for the @xmath134 data and putting into the equation of hydrostatic balance ( eq . [ eq : hse ] ) .",
    "if instead , the quantity @xmath35 is reconstructed , and the same procedure applied , one ends with @xmath135 however , to iterate on the equation of state and to calculate a local average density , one now must deconvolve @xmath136 to find @xmath137 .",
    "there are a number of ways one could do this .",
    "one way is to use a cell - averaging algorithm consistent with ppm : @xmath138 \\enskip , \\ ] ] where the subscripts @xmath139 refer to the values of the reconstructed function at the left cell interface , cell center , and right cell interface , respectively .",
    "presumably , whatever our fixed gravitational acceleration , we can evaluate it numerically at any given point , so that we can then use @xmath140 \\enskip , \\ ] ] with the computed values of @xmath11 and evaluate the pointwise values of @xmath5 using the ( here , linear ) reconstruction of density to solve for the local density average : @xmath141      thus , one can use the first- or second - order differencing in both the initialization and the boundary condition to find @xmath136 , and then the above equations to find the implied value of @xmath137 , and iterate on the equation of state as before .                                                  property & value + & isothermal + & kepler model + & first order differencing + & second order differencing + & ppm + & ppm / modified - states + & 5 + & 6 + & reflect + & constant @xmath5 , first order + & constant @xmath69 , first order + & constant @xmath143 , first order + & constant @xmath5 , second order + & constant @xmath69 , second order + & constant @xmath143 , second order +     two - dimensional simulations of a perturbed nova precursor atmosphere , zoomed in to near the interface , evolved 0.20 s. plotted is temperature with velocity vectors .",
    "a white contour shows the highest temperature region ( @xmath144 ) , and a black contour shows the interface between the c / o white dwarf and the accreted material . above are the simulation results without adjusting the profile to hse in this code , with reflecting boundary conditions , and without the modified - states ppm .",
    "below are results with the second - order differencing to bring the model to hse , second - order constant - temperature hse boundary conditions , and using the modified - states ppm .",
    "note the difference in velocity magnitudes , spurious compression of the bottom layer , and resulting compressional heating , which wipes out the real physical effect under consideration , the initiation of convection . ]"
  ],
  "abstract_text": [
    "<S> we look in detail at the process of mapping an astrophysical initial model from a stellar evolution code onto the computational grid of an explicit , godunov type code while maintaining hydrostatic equilibrium . </S>",
    "<S> this mapping process is common in astrophysical simulations , when it is necessary to follow short - timescale dynamics after a period of long timescale buildup . </S>",
    "<S> we look at the effects of spatial resolution , boundary conditions , the treatment of the gravitational source terms in the hydrodynamics solver , and the initialization process itself . </S>",
    "<S> we conclude with a summary detailing the mapping process that yields the lowest ambient velocities in the mapped model . </S>"
  ]
}
{
  "article_text": [
    "in 1995 , ref.@xcite showed that any controlled - u gate can be expressed with just 2 cnots ( and some 1-qubit rotations ) ; i.e. ,    c @c=1em @r=1em @!r & & + & &    =    c @c=1em @r=1em @!r & & & & & & + & & & & & &    , where the empty boxes represent 2-dimensional unitary matrices .    in 2003 ,",
    "vidal and dawson@xcite showed that any 2-qubit operator can be expressed by a circuit containing just 3 cnots ( and some 1-qubit rotations ) .    in light of the vidal - dawson result , a quantum circuit that contains exactly two",
    "controlled - u s does not require 4 cnots ( i.e. , twice the number of cnots required by one controlled - u ) to express ; rather , it can be expressed with just 3 cnots .",
    "actually , it turns out that even 3 cnots is more than what is needed . in this paper",
    "we show that any quantum circuit with exactly two controlled - u s can be expressed with just 2 cnots ; i.e. , we show that    [ eq - emblem ]    c @c=1em @r=1em @!r & & & & + & & & &    =    c @c=1em @r=1em @!r & & & & & & + & & & & & &    , and    c @c=1em @r=1em @!r & & & & + & & & &    =    c @c=1em @r=1em @!r & & & & & & + & & & & & &    .    in this paper",
    ", we give a simple , closed - form formula , what we call the deflation identity , for performing the circuit conversions illustrated by eq.([eq - emblem ] ) .",
    "we also give two interesting applications of the deflation identity ; one to  opening and closing a breach \" in a quantum circuit , the other to the cs decomposition of a 2-qubit operator .",
    "note that i am including with the paper an octave / matlab m - file that checks the deflation identity numerically .",
    "in this section , we will define some notation that is used throughout this paper . for additional information about our notation ,",
    "see ref.@xcite .    as usual",
    ", @xmath0 will stand for the real and complex numbers , respectively . for any complex matrix @xmath1 , the symbols @xmath2 will stand for the complex conjugate , transpose , and hermitian conjugate , respectively , of @xmath1 .",
    "( hermitian conjugate a.k.a .",
    "conjugate transpose and adjoint )    the pauli matrices are defined by :    = (    cc 0 & 1 + 1 & 0    ) , = (    cc 0 & -i + i & 0    ) , = (    cc 1 & 0 + 0 & -1    ) .",
    "they satisfy = -= i , and the two other equations obtained from this one by permuting the indices @xmath3 cyclically .",
    "we will also have occasion to use the operators @xmath4 , @xmath5 and @xmath6 .",
    "for any @xmath7 ,    e^-i ( ) e^ i = , where @xmath8 is the vector obtained by rotating @xmath9 by an angle @xmath10 , with respect to an axis parallel to @xmath11 .",
    "( the sense of the rotation is determined by the right hand rule , meaning that if the thumb of your right hand points in the direction @xmath11 , then your other right hand fingers point from @xmath9 to @xmath8 . )    in our quantum circuits , @xmath12 will represent a 2 dimensional unitary matrix , whereas @xmath13 with @xmath14 will represent a 1-qubit rotation @xmath15 in the @xmath16 direction .",
    "let @xmath17 for @xmath18 be defined by @xmath19 , where @xmath20 is the 2 dimensional identity matrix , @xmath21 , @xmath22 , and @xmath23 .",
    "now define    _ x_x_= _ x__x _ for @xmath24 .",
    "for example , @xmath25 and @xmath26 .",
    "the matrices @xmath27 satisfy = = - , [ eq - com - sigxx - sigyy ] and the two other equations obtained from this one by permuting the indices @xmath3 cyclically .",
    "we will also have occasion to use the exchange operator for two qubits , defined by    = .",
    "( if the rows and columns of this matrix are labelled by @xmath28 , where @xmath29 labels the state of qubit @xmath30 and @xmath31 that of qubit @xmath32 , then @xmath33 indeed exchanges the two qubits . )",
    "a useful identity involving @xmath33 is :    = .",
    "define    = .",
    "it is easy to check that @xmath34 is a unitary matrix . the columns of @xmath34 are an orthonormal basis , often called the  magic basis \" in the quantum computing literature .",
    "( that s why we have chosen to call this matrix @xmath34 , because of the  m \" in magic ) .    in this paper",
    ", we often need to find the outcome of applying a similarity transformation ( i.e. , a change of basis ) @xmath35 ( or @xmath36 ) to a matrix @xmath37 . since @xmath38 can always be expressed as a linear combination of the @xmath27 , it is useful to know the outcomes @xmath39 ( or @xmath40 ) for @xmath24 .",
    "one finds the following two tables :    ^(ab)=     & & 1 & & & + & 1 & 1 & - & & - + a & & - & & -&- + & & - & & - & + & & - & & & +    , [ tab - mh - m ] and    ( ab)^=     & & 1 & & & + & 1 & 1 & & -&- + a & & & -&-&- + & & -&- & & + & & & & - & +    .[tab - m - mh ]    another similarity transformation that we shall often encounter in his paper is @xmath41 ( and its twin @xmath42 ) .",
    "one finds ( ab)=     & & 1 & & & + & 1 & 1 & & & + a & & & & & - + & & & & - & + & & & & & +    , [ tab - uutoz ] and    ( ab)=     & & 1 & & & + & 1 & 1 & & & + a & & & & & + & & & & - & + & & & - & & +    .[tab - zztou ]",
    "in this section , we will present theorem [ th - defla1 ] , which is referred to in this paper as the deflation identity .",
    "we will also present a simple generalization , given by theorem [ th - defla2 ] , of the deflation identity .",
    "[ th - defla1 ] for any real numbers @xmath43 and @xmath44 , if u=    c @c=1em @r=.5em @!r & & & & + & & & &    , [ eq - defla - u - in ] then    u=    c @c=1em @r=.5em @!r & & & & & & & & + & & & & & & & &    , [ eq - defla - u - out ] where the real numbers @xmath45 are defined as follows . let    x_1 = ( ) ( - ) ,    x_2 = ( ) ( - ) , and    p _ = .",
    "suppose @xmath46 .",
    "if @xmath47 , then @xmath48 . otherwise ,    _ = , _ = .",
    "let    y_1 = ( ) ( - ) ,    y_2 = ( ) ( - ) , and    q _ = .",
    "suppose @xmath46 . if @xmath49 , then @xmath50 .",
    "otherwise ,    _ = , _ = .",
    "the @xmath51 s are defined by    _",
    "l = ( _ + -_- + _ + -_- ) ,    _l = ( -_+ -_- -_+ -_- + ) ,    _ r = ( -_+ + _ - + _ + -_- ) , and    _r = ( + _ + + _ - -_+ -_- - ) .",
    "the @xmath52 s are defined by    _",
    "= p _ , _ = q _ , and    = ,  = .    note that    c @c=1em @r=.5em @!r & & + & &    = e^i(0)n(1)= e^i(- ) . for the matrix @xmath53 given by eq.([eq - defla - u - in ] ) , we can define a matrix @xmath54 by :    u= e^ i v e^ i .",
    "thus , @xmath54 is merely @xmath53 with the local @xmath55 rotations on both ends removed :    v= e^-i e^ i(+ ) e^-i .",
    "[ eq - v - tbt ] let    = ^v . applying the table given in eq.([tab - mh - m ] ) to eq.([eq - v - tbt ] ) yields :    = e^-i e^ i(-+ ) e^-i .",
    "[ eq - til - v - tbt ] we want to consider the real and imaginary parts of @xmath56 , defined by :    _ 1= , _ 2=",
    ". [ eq - vr - vi - def ] using eqs.([eq - til - v - tbt ] ) and ( [ eq - vr - vi - def ] ) , we can find more explicit expressions for @xmath57 and @xmath58 . if    c_l = ( ) , s_l = ( ) , = -+ , these explicit expressions for @xmath57 and @xmath58 are :    _ 1 = , and    _ 2 = ( - ) [ s_l c_r e^i - c_l s_r e^-i ] . now observe that @xmath57 and @xmath58 are both of the following form : for @xmath59 ,    _ j= (    cc a_j+ & 0 + 0 & a_j-    ) .",
    "[ eq - vj - aj ]    @xmath60 is of the form    a_1 = x_1 + i x_2 = p _ e^i _ .",
    "this last equation defines @xmath61 , @xmath62 , @xmath63 and @xmath64 . if we define @xmath65 and @xmath66 to be arbitrary real numbers such that    _ ^l + _ ^r = _ , then    a_1 = e^i_^l p _ e^i_^r .",
    "@xmath67 is of the form    a_2= y_1 + y_2= q _ e^i_.",
    "this last equation defines @xmath68 , @xmath69 , @xmath70 and @xmath71 .",
    "define @xmath72 by    _ - = - _",
    "^l -_^r . then    e^-i_^l ( a_2 ) e^-i_^r&= & e^-i_^l ( q_e^i _ ) e^-i_^r + & = & q_e^i(_- ) + & = & q_[(_)+ ( _ ) ] + & = & e^-i q_e^i .    inserting these explicit expressions for @xmath60 and @xmath67 into eq.([eq - vj - aj ] )",
    "yields    = , [ eq - tilv-3mat - prod ] where    e^i _ = p _",
    "+ i q _ .",
    "next we want to calculate the effect of a similarity transformation @xmath73 on each of the 3 matrices that are being multiplied on the right hand side of eq.([eq - tilv-3mat - prod ] ) . for any real numbers @xmath74 ,    [ eq - m - ud-1 ] @xmath75 \\udarrow \\unor^\\dagger = } \\nonumber\\\\ & = & \\unor \\udarrow e^{i\\alpha\\sigy(0)\\nbar(1 ) } e^{i\\beta\\sigy(0)n(1 ) } \\udarrow \\unor^\\dagger\\\\ & = & \\unor \\udarrow e^{i\\frac{\\alpha}{2}(\\siguy + \\sigzy ) } e^{i\\frac{\\beta}{2}(\\siguy - \\sigzy ) } \\udarrow \\unor^\\dagger\\\\ & = & e^{i(\\frac{-\\alpha-\\beta}{2})\\sigyu } e^{i(\\frac { \\alpha-\\beta}{2})\\siguy } \\;,\\end{aligned}\\ ] ]    and    [ eq - m - ud-2 ] @xmath76 \\udarrow \\unor^\\dagger = } \\nonumber\\\\ & = & \\unor \\udarrow e^{i\\frac{\\alpha}{2}(\\siguz + \\sigzz ) } e^{i\\frac{\\beta}{2}(\\siguz - \\sigzz ) } \\udarrow \\unor^\\dagger\\\\ & = & e^{i(\\frac { \\alpha+\\beta}{2})\\sigxx } e^{i(\\frac { \\alpha-\\beta}{2})\\sigzz } \\;.\\end{aligned}\\ ] ]    applying the identities given by eqs.([eq - m - ud-1 ] ) and ( [ eq - m - ud-2 ] ) to eq.([eq - tilv-3mat - prod ] ) yields    [ eq - u - pre - fin ] @xmath77    a simple consequence of the table given in eq.([tab - uutoz ] ) is that :    e^i(+ ) =    c @c=1em @r=.5em @!r & & & & + & & & &    .",
    "[ eq - cnot - sigs - cnto ] eqs.([eq - u - pre - fin ] ) and ( [ eq - cnot - sigs - cnto ] ) imply eq.([eq - defla - u - out ] ) .",
    "our next goal is to generalize the above theorem . but",
    "first , let us make some observations that will pave the way towards this goal .",
    "as is well known and easily proven , for any @xmath78 , one can find real numbers @xmath74 and @xmath51 , such that :    a= e^ie^ie^i .",
    "a translation of this last equation into circuit language is :    c @c=1em @r=1em @!r & &    =    c @c=1em @r=1em @!r & & & &    .",
    "[ eq - a-2-rz - ry - rz ]    any @xmath78 can be diagonalized by a unitary matrix @xmath53 : a = u",
    "e^i u^. therefore ,    ^n(1)= u(0 ) [ e^i(0)]^n(1 ) u(0)^. a translation of this last equation into circuit language is :    c @c=1em @r=1em @!r & & + & &    =    c @c=1em @r=.5em @!r & & & & + & & & &    .",
    "[ eq - rz - new ]    since @xmath79 ,    e^i(1)n(0 ) & = & e^i ( 1)[1-(0 ) ] + & = & e^i\\ { ( 1 ) -(0 ) + ( 0)[1-(1 ) ] } + & = & e^i[(1 ) -(0 ) ] e^i(0)n(1 ) .",
    "a translation of this last equation into circuit language is :    c @c=1em @r=.5em @!r & & + & &    =    c @c=1em @r=.5em @!r & & & & + & & & &    .",
    "[ eq - rz - flip ]    we are now ready to prove a simple generalization of the deflation identity :    [ th - defla2 ]    c @c=1em @r=1em @!r & & & & + & & & &    =    c @c=1em @r=1em @!r & & & & & & + & & & & & &    , [ eq - deflat2-same - side ] and    c @c=1em @r=1em @!r & & & & + & & & &    =    c @c=1em @r=1em @!r & & & & & & + & & & & & &    .",
    "[ eq - deflat2-oppo - side ]    by virtue of eqs.([eq - a-2-rz - ry - rz ] ) and ( [ eq - rz - new ] ) ,    c @c=1em",
    "@r=1em @!r & & & & + & & & &    & = &    c @c=1em @r=1em @!r & & & & & & + & & & & & &     + & = &    c @c=1em @r=1em @!r & & & & & & + & & & & & &    . applying the deflation identity to the right hand side of the last equation establishes eq.([eq - deflat2-same - side ] ) .    by virtue of eqs.([eq - rz - new ] ) and ( [ eq - rz - flip ] ) ,    c @c=1em @r=1em @!r & & & & + & & & &    =    c @c=1em @r=1em @!r & & & & & + & & & & &    .",
    "applying eq.([eq - deflat2-same - side ] ) to the right hand side of the last equation establishes eq.([eq - deflat2-oppo - side ] ) .",
    "in this section , we will give two application of the deflation identity , one to  opening and closing a breach \" in a quantum circuit , the other to the cs decomposition of a 2-qubit operator .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ once more unto the breach , dear friends , once more ; or close the wall up with our english dead ! _",
    "( from  king henry v \" by w. shakespeare ) _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _                          the last theorem shows how one can  close a breach \" within a quantum circuit , while simultaneously reducing the number of cnots in the circuit by 1 .",
    "it is also possible to  open a breach \" within a circuit ; i.e. , replace the circuit by an equivalent one that has a breach :          . in the above circuit",
    ", we assume that the total number of cnots within the sub - circuits @xmath53 and @xmath80 does not increase when they are replaced by @xmath81 and @xmath82 . a useful strategy for reducing the number of cnots in a circuit by 1 is to open a breach within the circuit without increasing its number of cnots , and then to close the breach using theorem [ th - closing - breach ] . in a future paper",
    ", we will say more about this strategy for reducing the number of cnots in a circuit .",
    "we will show that the strategy also works for n - qubit circuits with @xmath83 .",
    "c = diag(_1 , _ 2 ) , s = diag(_1 , _ 2 ) , and @xmath84 , and @xmath85 .",
    "our goal for this section is to express the right hand side of eq.([eq - gen-2bit - csd ] ) as a circuit with just 3 cnots ( and some 1-qubit rotations ) .",
    "ref.@xcite showed how , given any 2-qubit unitary operation @xmath53 , one can first perform a kak1 decomposition@xcite of @xmath53 , and then express the outcome as a 3 cnot circuit .",
    "what we give below is an alternative method for expressing a 2-qubit unitary operation as a quantum circuit with 3 cnots .",
    "our method is via the cs decomposition , rather than via kak1 ."
  ],
  "abstract_text": [
    "<S> we give a simple , closed - form formula , what we call the deflation identity , for converting any 2-qubit circuit with exactly two controlled - u s ( and some 1-qubit rotations ) into an equivalent circuit with just two cnots ( and some 1-qubit rotations ) . </S>",
    "<S> we also give two interesting applications of the deflation identity ; one to  opening and closing a breach \" in a quantum circuit , the other to the cs decomposition of a 2-qubit operator . </S>"
  ]
}
{
  "article_text": [
    "multi - user ( mu ) multiple - input multiple - output ( mimo ) technology promises significant improvements in terms of spectral efficiency , coverage , and range compared to traditional , small - scale mimo  @xcite . in fact , massive mu - mimo is commonly believed to be one of the key technologies for future fifth - generation ( 5 g ) wireless systems  @xcite . the idea underlying this technology is to equip the base - station ( bs ) with hundreds of antenna elements while communicating with tens of user terminals concurrently and within the same time - frequency resource .",
    "hence , to reduce the implementation costs while enabling throughputs in the gb / s regime for practical wideband massive mu - mimo systems with hundreds of antenna elements and thousands of subcarriers , novel algorithms and dedicated hardware implementations on field - programmable gate arrays ( fpgas ) or application specific integrated circuits ( asics ) are necessary .    during recent years , various data - detection algorithms  @xcite and dedicated hardware implementations have been proposed for massive mu - mimo systems  @xcite .",
    "we propose a new , low - complexity soft - output data - detection algorithm and a corresponding high - throughput fpga design for massive mu - mimo wireless systems that use ofdm .",
    "we develop a corresponding high - throughput vlsi architecture with a deep and interleaved pipeline , which can be parametrized at design time to support various bs and user antenna configurations . to demonstrate the advantages of ocd compared to existing massive mu - mimo data - detector designs in terms of throughput , hardware complexity , and error - rate performance , we provide implementation results on a xilinx virtex-7 fpga .",
    "boldface lowercase and boldface uppercase letters stand for column vectors and matrices , respectively . for a matrix  @xmath1",
    ", we denote its hermitian transpose by @xmath2 .",
    "we use @xmath3 for the entry in the @xmath4th row and @xmath5th column of the matrix @xmath6 ; the @xmath4th entry of a column vector @xmath7 is  denoted by @xmath8_k$ ] .",
    "the @xmath9-norm of a vector @xmath7 is defined as  @xmath10 .",
    "the rest of the paper is organized as follows .",
    "introduces the massive mu - mimo - ofdm system model and describes data detection using mmse and box - constrained equalization .",
    "details our ocd algorithm and shows error - rate simulation results . and describe our vlsi architecture and shows fpga implementation results , respectively .",
    "we conclude in .",
    "this section introduces the considered ofdm - based uplink model and summarizes efficient methods for linear mmse and box - constrained soft - output data detection .",
    "we consider a massive mu - mimo - ofdm uplink system , where  @xmath11 single - antenna user terminals send data simultaneously to a bs with  @xmath12 antennas over @xmath13 subcarriers .",
    "each user @xmath14 encodes its own bit stream ( using a forward error - correction scheme ) and maps the generated coded bits onto constellation points in a finite set @xmath15 ( e.g. , using a gray mapping rule ) , with unit average transmit power , i.e. , with @xmath16 , and bits per constellation point .",
    "the resulting @xmath13 frequency - domain symbols @xmath17 are then transformed into the time domain ( td ) using an inverse discrete fourier transform ( dft )  @xcite .",
    "after prepending the cyclic prefix , all users transmit their td signals over the frequency - selective wireless channel at the same time .    after removing the cyclic prefixes ,",
    "the td signals received at each bs antenna are transformed back to the fd using a dft .",
    "for the sake of simplicity , we assume a sufficiently long cyclic prefix , perfect synchronization , and that perfect channel - state information ( csi ) has been acquired via pilot - based training . under these assumptions ,",
    "the fd input - output relation on the @xmath18th subcarrier is commonly modeled as  @xcite @xmath19 where @xmath20 is the associated received fd vector , @xmath21 is the channel matrix , @xmath22 contains the symbols transmitted by all @xmath11 users , i.e. , @xmath23_i = s^{(i)}_w$ ] refers to the symbol transmitted by user @xmath24 over subcarrier @xmath18 , and @xmath25 models thermal noise as i.i.d .   complex circularly - symmetric gaussian vector with variance @xmath26 per complex entry .      for the model in ( [ eq : ofdmsystem ] ) , optimal data detection in terms of minimizing the symbol error - rate is accomplished by solving the maximum - likelihood ( ml ) problem  @xcite @xmath27 unfortunately , solving ( [ eq : mlproblem ] ) exactly for massive mu - mimo systems quickly results in prohibitive complexity , even with the best - known sphere - decoding algorithms  @xcite .",
    "equalization - based data detection algorithms @xcite enable one to find approximate solutions to the ml problem at low computational complexity .",
    "virtually all linear as well as non - linear equalization methods relax the finite - alphabet constraint @xmath28 in ( [ eq : mlproblem ] ) , which enables the efficient computation of an estimate @xmath29 that is ( hopefully ) close to the ml solution .",
    "the estimate @xmath29 can then either be sliced element - wise onto the nearest constellation point in @xmath15 as follows : @xmath30_i - z| , \\quad i=1,\\ldots , u,\\end{aligned}\\ ] ] which is known as hard - output data detection , or be used to compute reliability information for each transmitted bit in the form of log - likelihood ratio ( llr ) values ( see ) , which is known as soft - output data detection  @xcite .",
    "the most common equalization - based data detection algorithm is linear mmse data detection  @xcite .",
    "this method was shown to enable fpga and asic designs that are able to achieve high throughput in massive mu - mimo systems  @xcite .",
    "the key idea of mmse data detection is to relax the constraint  @xmath28 in the ml problem  ( [ eq : mlproblem ] ) to the @xmath11-dimensional complex space @xmath31 , and to include a quadratic penalty function . in particular",
    ", mmse equalization solves the following regularized least - squares problem  @xcite : @xmath32 since the objective function in ( [ eq : mmseproblem ] ) is quadratic in @xmath33 , the mmse equalization problem has a closed - form solution .",
    "an explicit solution to ( [ eq : mmseproblem ] ) can be computed as follows .",
    "first , compute the regularized gram matrix @xmath34 with @xmath35 and the matched filter vector @xmath36 . then , the mmse estimate in  ( [ eq : mmseproblem ] ) is computed as @xmath37 while this closed - form approach was shown to be efficient for traditional , small - scale mimo systems ( e.g. , at both ends of the wireless link )  @xcite , computing the regularized gram matrix @xmath38 and its inverse  @xmath39 quickly results in prohibitive complexity in massive mu - mimo systems with hundreds of bs antennas  @xcite . in",
    ", we present a computationally - efficient equalization algorithm that directly solves  ( [ eq : mmseproblem ] ) in a hardware efficient way , which avoids expensive calculations such as the computation of the regularized gram matrix  @xmath38 and its inverse  @xmath39 .",
    "while linear equalization methods are the most common approach in the mimo literature , a few non - linear equalizers have recently emerged and were shown to outperform linear methods in terms of error - rate performance  @xcite .",
    "a promising non - linear equalization method , referred to as box - constrained equalization ( short box equalization ) @xcite , relaxes the constraint to the convex polytope  @xmath40 around the constellation set  @xmath15 , which is formally defined as follows : @xmath41 for example , the convex polytope @xmath42 for qpsk with @xmath43 is given by @xmath44\\}$ ] with @xmath45 ; this is simply a box with radius  @xmath46 around the square constellation ( thus the name box equalization ) .",
    "box equalization solves the following relaxed version of the ml problem in ( [ eq : mlproblem ] ) : @xmath47 since this equalization problem ( [ eq : boxproblem ] ) is convex , it can be solved exactly using well - established numerical methods from convex optimization  @xcite .    unfortunately , solving ( [ eq : boxproblem ] )",
    "exactly with conventional interior - point methods results in prohibitive complexity and requires high numerical precision , which prevents efficient hardware designs that use finite precision ( fixed - point ) arithmetic . in order to solve ( [ eq : boxproblem ] ) at low complexity and in a hardware efficient manner",
    ", we propose a new algorithm in .      from mmse and box equalization , hard - output estimates",
    "can easily be obtained by element - wise slicing of the entries of @xmath48 and @xmath49 onto the nearest constellation point as in  ( [ eq : slicing ] ) , respectively . in systems that use forward error - correction ,",
    "however , one is generally interested in soft - output detection  @xcite . from mmse equalization",
    "where @xmath50 , llr values are typically computed via the max - log approximation  @xcite @xmath51_i}{\\mu_{w , i } } - a\\right|^2\\ ! \\!\\!-\\ !",
    "\\min_{a\\in{\\ensuremath{\\mathcal{o}}}_b^1}\\left| \\frac{[\\tilde{{\\ensuremath{\\mathbf{s}}}}_w]_i}{\\mu_{w , i } } - a\\right|^2 \\right)\\!,\\end{aligned}\\ ] ] where the sets @xmath52 and @xmath53 contain the constellation symbols for which the @xmath54th bit is  @xmath55 and  @xmath46 , respectively . for explicit mmse detection ,",
    "i.e. , the approach discussed in that computes  @xmath39 , the post - equalization signal - to - noise - and - interference - ratio ( sinr )  @xmath56 and the channel gain @xmath57 can be calculated exactly and in the following efficient way  @xcite .",
    "the sinr is calculated as @xmath58 and the channel gain is @xmath59_i^h [ { \\ensuremath{\\mathbf{g}}}_w]_i$ ] , where @xmath60_i$ ] is the @xmath24th row of @xmath39 and  @xmath61_i$ ] is the  @xmath24th column of @xmath62 .",
    "however , for box equalization in , as well as for data detection algorithms that implicitly solve the mmse detection problem ( [ eq : mmseproblem ] ) , no efficient methods that exactly compute the sinr  @xmath56 are known  this prevents a straightforward computation of the llr values in ( [ eq : exactinversellr ] ) . in",
    ", we propose an approximate way to compute  @xmath56 and  @xmath57 , which enables us to generate approximate llr values for such linear and non - linear equalizers .",
    "while the solution to the implicit mmse problem ( [ eq : mmseproblem ] ) can be computed ( exactly or approximately ) at moderate complexity using iterative conjugate gradient ( cg ) or gauss - seidel ( gs ) methods , see , e.g. ,  @xcite , corresponding vlsi designs  @xcite are unable to achieve high throughput , mainly due to a fairly complex algorithm structure , stringent data dependencies , or the need for high arithmetic precision .",
    "we next propose an alternative method to solve both the mmse equalization  ( [ eq : mmseproblem ] ) and box equalizaton ( [ eq : boxproblem ] ) problems at low complexity and in a hardware friendly way .",
    "coordinate descent ( cd )  @xcite is a well - established iterative framework to exactly or approximately solve a large number of convex optimization problems using a series of simple , coordinate - wise updates .",
    "we first define the following function : @xmath63 where @xmath64 is a convex regularizer .",
    "it is now important to realize that both equalization problems ( [ eq : mmseproblem ] ) and  ( [ eq : boxproblem ] ) are special cases when minimizing ( [ eq : function ] ) .",
    "in fact , by setting @xmath65 , minimizing ( [ eq : function ] ) is equivalent to solving the mmse equalization problem ( [ eq : mmseproblem ] ) . by setting @xmath66 , where denotes the characteristic function that is zero if @xmath67 and infinity otherwise , minimizing  ( [ eq : function ] ) is equivalent to solving the box equalization problem ( [ eq : boxproblem ] ) .",
    "cd - based equalization simply minimizes the function @xmath68 in ( [ eq : function ] ) sequentially for each variable ( or coordinate ) @xmath69 , @xmath70 , in a round - robin fashion . for more details on cd ,",
    "see  @xcite and the references therein .",
    "we next detail the cd algorithms for mmse and box equalization .",
    "assume we want to find the @xmath71th optimum value @xmath69 for the mmse equalization problem  ( [ eq : mmseproblem ] ) , i.e. , we seek to compute the solution to @xmath72 where we hold all other values @xmath73 , @xmath74 , fixed .",
    "since this is a quadratic problem , we can solve it in closed form by setting the gradient of the function ( [ eq : function ] ) with respect to the @xmath71th component to zero : @xmath75 @xmath76      analogously to cd - based mmse equalization , we can derive the update rule for the box equalization problem ( [ eq : boxproblem ] ) . even though the characteristic function @xmath66 is not differentiable ,",
    "a similar approach that uses subgradients ( instead of gradients ) enables one to derive the following closed - form expression @xcite : @xmath77 here , @xmath78 is the orthogonal projection onto the convex polytope @xmath40 and is given by @xmath79 in words , if the argument @xmath80 is within the set @xmath40 , then the projection outputs @xmath18 ; if @xmath18 is outside the set @xmath40 , the projection outputs the value @xmath81 that is closest to @xmath18 within the set  @xmath40 in terms of the euclidean distance .",
    "we emphasize that for many practically - relevant constellation sets @xmath15 , the projection  ( [ eq : projection ] ) can be carried out efficiently . for any qam constellation , for example",
    ", we independently clip the real and imaginary part of @xmath18 onto the interval @xmath82 $ ] , for bpsk with  @xmath83 , we clip the real part of @xmath18 onto the interval @xmath84 $ ] and set the imaginary part to zero.[multiblock footnote omitted ]      instead of blindly computing the updates ( [ eq : cdrule ] ) and ( [ eq : cdrulebox ] ) for mmse and box equalization , respectively , we perform preprocessing and algorithm restructuring in order to minimize the amount of ( recurrent ) operations during each of the @xmath85 iterations .",
    "we refer to the resulting method as the ptimized algorithm ( short ocd ) , which is summarized in .",
    "ocd supports both box and mmse equalization and the individual optimization steps are as follows .",
    "* _ inputs : _",
    "* @xmath86 , @xmath87 , and @xmath26 * _ initialization : _ * @xmath88 and @xmath89 @xmath90 and @xmath91 @xmath92 and @xmath93 * _ preprocessing : _ * @xmath94 , @xmath70 @xmath95 , @xmath70 * _ equalization : _ * @xmath96 [ eq : alg1 ] @xmath97 [ eq : alg2 ] @xmath98 [ eq : alg3 ] * _ outputs : _ * @xmath99^t$ ]      to reduce the computational complexity , ocd precomputes certain key quantities that can be re - used during each of the @xmath85 iterations .",
    "this preprocessing step not only results in significant complexity savings during the iterative process , but also simplifies our hardware implementation ( see ) .",
    "in particular , we precompute so - called ( regularized ) inverse squared column norms of  @xmath87 , i.e. , @xmath100 for @xmath70 , with @xmath101 , as well as regularized gains @xmath102 for @xmath70 . in mmse mode , the regularization parameter is given by @xmath90 ; in box mode , the regularization parameter is given by @xmath92 , which yields @xmath103 , @xmath70 .      in order to avoid recurrent operations during the equalization process",
    ", ocd performs incremental updates and re - uses intermediate quantities during each of the @xmath85 iterations .",
    "in essence , we perform sequential updates on the so - called residual approximation vector , which is defined as @xmath104 at every algorithm iteration @xmath85 and for each user @xmath105 .",
    "note , however , that we do _ not _ recompute this residual approximate vector for every iteration and user from scratch . in contrary",
    ", we update the residual approximation vector in every iteration and for each user by first computing the symbol estimates @xmath106 on line  [ eq : alg1 ] of .",
    "we then compute a so - called delta value @xmath107 on line  [ eq : alg2 ] , which enables us to update the residual  @xmath108 on line  [ eq : alg3 ] without calculating the residual ( [ eq : residual ] ) explicitly .        in order to assess the error - rate performance for the proposed ocd - box algorithm , we perform monte - carlo simulations in a coded 20mhz mimo - ofdm uplink system with @xmath109 subcarriers , where @xmath110 are used for data transmission as in  @xcite .",
    "we use 64-qam with gray mapping and a rate-3/4 turbo code . to account for spatial and frequency correlation",
    ", we generate channel matrices using the winner - phase-2 model  @xcite with @xmath111 cm antenna spacing as in @xcite . for channel decoding",
    ", we use a turbo decoder .",
    "we report the packet error - rate , which is obtained by coding over one ofdm symbol with 1200 data subcarriers .",
    "@xmath112}}}{q{\\ensuremath{\\mathbb{e}\\!\\left[\\|{\\ensuremath{\\mathbf{n}}}\\|^2\\right ] } } } \\right)\\!.}}\\end{aligned}\\ ] ]    in particular , we show per results for neumann - series detection  @xcite , cg - based detection  @xcite , and gauss - seidel ( gs)-based detection  @xcite .",
    "we also include an exact linear mmse equalizer as a reference . for all considered antenna configurations ,",
    "ocd - box outperforms neumann , cg , and gs detection for the same iteration count .",
    "we conclude by noting that for many modern wireless communication standards ( such as lte - a @xcite ) achieving a target per of @xmath113% is sufficient .",
    "the proposed ocd detector is able to meet this target performance at only a small snr loss compared to the exact mmse - based data detector .",
    "we now detail our vlsi architecture for ocd - based mmse and box equalization .",
    "the architecture was designed and optimized using xilinx vivado hls  ( version 2015.2 ) , which allows us to conveniently simulate , parameterize , and generate different ocd designs that support various antenna configurations at design time",
    ".      shows two high - level block diagrams of the proposed ocd architecture .",
    "the inputs of our architecture are the channel matrix  @xmath114 , the residual error vector  @xmath108 ( which is initialized to the received vector @xmath115 ) , and the regularization parameter @xmath116 , which we initialized to @xmath26 and @xmath55 for mmse and box equalization , respectively .",
    "our architecture supports two operation modes : ( a ) preprocessing ( lines  68 of ) and ( b ) ocd - based qualization  ( lines 1016 ) .",
    "preprocessing and equalization are carried out in a @xmath117-wide vector pipeline , i.e. , we process @xmath117-dimensional vectors at a time . in the preprocessing mode ,",
    "we compute the regularized inverse squared column norms @xmath118 , @xmath105 , as well as the regularized gains @xmath119 , @xmath105 . in the equalization mode , we perform the iterations on lines  1213 of . in order to support these two operation modes without the need of redundant computation units",
    ", the processing pipeline shares the key building blocks used in both modes .",
    "in particular , the inner product unit consists of @xmath117 parallel complex - valued multipliers followed by a balanced adder tree .",
    "we use multiplexers at the input of the inner product unit , which enables us to switch between preprocessing and equalization on a per - clock cycle  basis .",
    "one of the main implementation challenges of the proposed ocd algorithm are data dependencies between successive iterations , which prevent traditional architecture pipelining .",
    "in particular , as it can be seen on line 14 of , each ocd iteration updates the temporary vector @xmath108 and the vector  @xmath120 given the previous vectors  @xmath108 and  @xmath121 . hence , in order to achieve high throughput , we deploy _ pipeline interleaving _",
    "@xcite , i.e. , we simultaneously process multiple subcarriers in a parallel and interleaved manner within the same architecture .",
    "for example , after performing an ocd iteration for the first subcarrier , we start an ocd iteration for the second subcarrier in the next clock cycle ; we repeat this interleaving process until all pipeline stages are fully occupied .      in order to optimize the hardware efficiency of our architecture",
    ", we use fixed - point arithmetic throughout our design .",
    "we achieved a negligible implementation loss with @xmath122bit precision with 11 fractional bit for most internal signals ; see   for the fixed - point ( fp ) performance .",
    "our design has an implementation loss of less than @xmath123  db snr ( measured at a target per of 10% ) compared to floating - point performance for the considered scenarios , which is a result of the following two optimizations .",
    "this unit first computes entry - wise products of two @xmath117-dimensional vectors and then , generates the final sum of these products .",
    "we use a balanced adder tree to compute the final sum and @xmath124bit adders to achieve sufficiently high arithmetic internal precision . during preprocessing",
    ", the inner - product unit computes @xmath125 ( line 7 of ) ; during equalization , the same unit computes @xmath126  ( line 12 ) . as both of these terms are close to @xmath117 ( for large values of @xmath117 ) , we shift these terms by @xmath127bits to the right in order to reduce the dynamic range .",
    "since we shift @xmath125 by @xmath54 to the right , when we compute the reciprocal value , @xmath94 , we effectively shift the reciprocal value  @xmath128 by @xmath54bits to the left . in the inner - product unit",
    ", we also shift the term @xmath129 by @xmath54bits to the right .",
    "consequently , we do not need to undo both of these shifts , as they cancel out during the multiplication on line 12 of .",
    "this unit consists of two parts .",
    "the first part normalizes the input value to the range @xmath130 $ ] , which is accomplished using a leading - zero detector and programmable shift to the left .",
    "the second part generates a reciprocal value for the normalized input using a look - up table ( lut ) .",
    "we use a fpga bram18 to implement a @xmath131bit , 2048 entry lut , where the leading @xmath132bits of the normalized input value are used to point to the entry in the lut that stores the associated normalized reciprocal . finally , we denormalize the normalized reciprocal value by another left shift .",
    ".implementation results on a xilinx virtex-7 xc7vx690 t  fpga  for different bs antenna numbers [ cols=\"<,<,<,<,<\",options=\"header \" , ]      we designed three different implementations for the following bs antenna configurations : @xmath133 , and @xmath134 . for each configuration",
    ", we provide post place - and - route implementation results on a xilinx xc7vx690 t fpga .",
    "all our designs support @xmath135 users and @xmath136 ocd iterations ; both of these parameters can be set at run - time .",
    "since the proposed architecture performs operations on @xmath117-dimensional vectors , the resource utilization ( excluding the brams ) scales linearly with  @xmath117 . since the quantities @xmath114 and  @xmath115 are assumed to be stored in external memories , our ocd architecture only uses two bram18s : one for the reciprocal lut and one to store the regularized channel gains  @xmath119 , @xmath105 .",
    "the maximum achievable throughput as well as the processing latency are shown in .",
    "we see that the throughput only depends on the maximum iteration number  @xmath137 and the clock frequency , but does not depend on @xmath11 .",
    "the reason is because the number of bits per subcarrier and the number of clock cycles required to process @xmath138 subcarriers grows linearly with respect to @xmath11 .",
    "for example , doubling @xmath11 doubles the number of bits per subcarrier .",
    "however , since the number of ocd updates is  @xmath139 , the number of required clock cycles also doubles ; this results in a constant throughput . for @xmath140 iterations , near - optimal performance",
    ", our design achieves @xmath141mb / s .",
    "hence , the use of only three parallel instances ( to process subcarriers in parallel ) would easily exceed @xmath142gb / s , while consuming less than @xmath143% of the fpga s bram18s ( cf .  ) .",
    "the processing latency increases roughly linearly with respect to @xmath137 and @xmath11 .",
    "more specifically , the processing latency of this design is approximately @xmath144 clock cycles , where @xmath145 is the number of cycles required to flush the pipeline .",
    "typically , @xmath146 cycles are required to flush the pipeline , the exact value of @xmath145 depends on @xmath117 . the ( approximately ) linear increase in @xmath137 can be seen in and for @xmath140 , our design requires only @xmath147@xmath148s to produce its first equalized output .",
    "compares ocd to other , recently proposed large - scale mimo data detectors , namely the conjugate gradient ( cg)-based detector @xcite , the neumann - series detector @xcite , the gauss - seidel ( gs ) detector  @xcite , and triangular approximate semidefinite relaxation ( taser )  @xcite .",
    "all of these detectors have been implemented on the same fpga and for a 128 bs antenna , 8 user system .",
    "we see that for the same system configuration , ocd outperforms all other designs in terms of hardware efficiency , which we define as throughput per fpga luts .",
    "furthermore , our ocd detector achieves superior per performance than the cg , neumann , and gs detector ( see figs .",
    "[ fig:64x8_bler ] and [ fig:128x8_bler ] ) , which demonstrates the effectiveness of ocd .",
    "taser , in contrast , achieves better error - rate performance for the considered antenna configuration but only supports qpsk constellations .",
    "we have proposed a novel coordinate descent ( cd)-based data detector , called optimized cd ( ocd ) , for massive mu - mimo systems that use orthogonal frequency division multiplexing ( ofdm ) .",
    "the proposed ocd detector enables high - performance linear mmse and non - linear box - constrained data detection using a simple , parallel vlsi architecture that requires low hardware complexity .",
    "our fpga reference design achieves @xmath141mb / s for a @xmath149 bs antenna , @xmath150 user system , and substantially outperforms existing approximate linear data - detection methods in terms of hardware efficiency and/or error - rate performance .",
    "our results show that ocd enables realistic ofdm - based massive mu - mimo systems to support tens of users communicating with hundreds of bs antennas , while achieving high throughput at low implementation costs .",
    "there are many avenues for future work .",
    "ocd can also be used for linear and non - linear precoding in the massive mu - mimo downlink ; a corresponding study is part of ongoing work .",
    "computing exact soft - output values for ocd - based detection ( for mmse and box equalization ) is an interesting open research problem . finally , accelerated cd algorithms",
    "have been proposed recently  @xcite ; such methods may lead to even faster convergence and hence , could enable higher throughput at the same error - rate performance when implemented in vlsi .",
    "c. studer would like to thank tom goldstein , charles jeon , shahriar shahabuddin for insightful discussions on the box - constrained equalization method .",
    "the work of m. wu and j. r. cavallaro was supported in part by xilinx inc . , and by the us national science foundation ( nsf ) under grants eccs-1408370 , cns-1265332 , and eccs-1232274 .",
    "the work of c.  studer was supported in part by xilinx inc .  and by the us nsf under grants eccs-1408006 and ccf-1535897 .",
    "f.  rusek , d.  persson , b.  k. lau , e.  g. larsson , t.  l. marzetta , o.  edfors , and f.  tufvesson , `` scaling up mimo : opportunities and challenges with very large arrays , '' , vol .",
    "1 , pp . 4060 , jan .",
    "2013 .",
    "h.  prabhu , j.  rodrigues , o.  edfors , and f.  rusek , `` approximative matrix inverse computations for very - large mimo and applications to linear pre - coding systems , '' in _ proc .",
    "ieee wcnc _ , 2013 , pp",
    ". 27102715 .",
    "o.  castaeda , t.  goldstein , and c.  studer , `` fpga design of approximate semidefinite relaxation for data detection in large mimo wireless systems , '' in _ proc .",
    "ieee intl .",
    "conf . on circuits and systems ( iscas ) _ , may 2016 .",
    "z.  wu , c.  zhang , y.  xue , s.  xu , and z.  you , `` efficient architecture for soft - output massive mimo detection with gauss - seidel method , '' in _ proc .",
    "ieee intl .",
    "conf . on circuits and systems ( iscas ) _ , may 2016 .",
    "n.  e. tunali , m.  wu , c.  dick , and c.  studer , `` linear large - scale mimo data detection for 5 g multi - carrier waveform candidates , '' in _ proc .",
    "asilomar conference on signals , systems , and computers _",
    ", nov . 2015 .",
    "m.  wu , c.  dick , j.  r. cavallaro , and c.  studer , `` iterative detection and decoding in 3gpp lte - based massive mimo systems , '' in _",
    "22nd european signal processing conference ( eusipco ) _ , sept .",
    "2014 , pp . 96100 .",
    "d.  seethaler , g.  matz , and f.  hlawatsch , `` an efficient mmse - based demodulator for mimo bit - interleaved coded modulation , '' in _ proc .",
    "global telecommunications conference ( globecom ) _ , nov .",
    "2004 , vol .  4 , pp .",
    "24552459 .",
    "y.  t. lee and a.  sidford , `` efficient accelerated coordinate descent methods and faster algorithms for solving linear systems , '' in _",
    "ieee 54th annual symposium on foundations of computer science ( focs ) _ , oct .",
    "2013 , pp . 147156 ."
  ],
  "abstract_text": [
    "<S> data detection in massive multi - user ( mu ) multiple - input multiple - output ( mimo ) wireless systems is among the most critical tasks due to the excessively high implementation complexity . in this paper </S>",
    "<S> , we propose a novel , equalization - based soft - output data - detection algorithm and corresponding reference fpga designs for wideband massive mu - mimo systems that use orthogonal frequency - division multiplexing ( ofdm ) . </S>",
    "<S> our data - detection algorithm performs approximate minimum mean - square error ( mmse ) or box - constrained equalization using coordinate descent . we deploy a variety of algorithm - level optimizations that enable near - optimal error - rate performance at low implementation complexity , even for systems with hundreds of base - station ( bs ) antennas and thousands of subcarriers . </S>",
    "<S> we design a parallel vlsi architecture that uses pipeline interleaving and can be parametrized at design time to support various antenna configurations . for a 128 bs antenna , 8 user massive mu - mimo - ofdm system </S>",
    "<S> , our fpga design outperforms the next - best implementation by more than  @xmath0 in terms of throughput per fpga look - up tables .    </S>",
    "<S> coordinate descent , equalization , fpga design , massive multi - user ( mu ) mimo , orthogonal frequency - division multiplexing ( ofdm ) , soft - output data detection . </S>"
  ]
}
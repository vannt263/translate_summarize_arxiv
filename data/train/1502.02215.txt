{
  "article_text": [
    "telecommunications industry has emerged as an appropriate domain for applying large - scale data mining and machine learning techniques for a myriad of applications such as churn propensity scoring[4][5 ] , fraud detection [ 6 ] , improving customer relationship management [ 8][7 ] , network planning [ 9 ] and customer segmentation [ 10 ] , due to availability of large volumes of high quality subscriber data [ 3][2 ] .",
    "mobile internet connectivity is increasingly becoming ubiquitous . in 2011 itself , more than 50% of all local searches were done from mobile devices . in 2013 ,",
    "the total mobile phone subscriptions across the world crossed 6.5 billion , which accounts to nearly 92% of the world s population [ 1 ] .",
    "a gartner study predicts that by 2015 - 16 , there will be more mobile devices connected to the internet than desktops .",
    "these trends indicate that the internet of things ( iot ) and the vision of connecting everyday objects eventually to the internet is becoming as a reality [ 15 ] .",
    "convergence of iot , big data , and device interoperability through open standards has immense potential to affect every aspect of human life , with possibilities to make virtually anything intelligent .",
    "however , this presents a completely new set of challenges to the current big data ecosystem . as granularity of data increase and",
    "countless data sources generate streaming data in a variety of structured and unstructured formats , data mining algorithms need to adapt to handle an explosive volume of data in a variety of formats at varying velocity and veracity to generate value .",
    "the challenge will no longer be the absence of enough data volumes , but would be devising efficient algorithms , which can filter meaningful data from a vast ocean of raw data streams .",
    "data mining challenges faced by today s csps serve as a good reference model that we could leverage to understand some of these futuristic challenges .",
    "the purpose of this paper is two - fold .",
    "first , to introduce our real - time scalable machine learning and personalization platform architecture and thereby contribute to the evolving best practices and guidelines around building and operationalizing large - scale analytics platforms .",
    "second , to highlight a few specific use cases which utilize scalable analytics , and our key learnings from productionizing them . to this end , we intend to sketch our evolution from a relational database management system ( rdbms ) based mobile marketing solution with limited data analytics capabilities and manual rule - based targeting into a scalable big data analytics platform , enabling large scale machine learning applications . while the general practice of applying data mining techniques in an academic setting assume existence of a clearly defined mining problem and a ready - to - consume dataset along with well - defined performance metrics",
    ", it may be unrealistic for real - world problems . in practice , objectives and performance metrics",
    "may need to be derived from imprecisely defined business goals .",
    "we hope that this work will provide practical insights to practitioners for engineering large analytics platforms and expose the data mining research community to novel challenges in productionizing machine learning algorithms .",
    "in early days , marketing campaigns were akin to carpet bombing with only macro - level segmentation at best .",
    "cumbersome data extraction processes , multiple handoffs between various stakeholders , long lead times for execution , lack of response and campaign efficacy measurement , all pointed towards transformation to a fully integrated conversational marketing approach with impact measurement as a natural step in evolution . our mobile marketing platform , with a host of applications like push marketing , interactive marketing and inventory management , focused on enabling this transformation for a wide range of business units , including usage and revenues ( u&r ) , customer acquisition , customer care and retail .",
    "this was realized by providing applications for seamless gui driven campaign execution , automation of underlying processes , full integration to upstream and downstream systems , and closing the loop by providing feedback on campaigns , which could be leveraged in new campaign designs .",
    "practical applications reinforced the need for specialized technical roles , like data management , incident management and data quality assurance that would support the marketer in his endeavor .",
    "for instance , adapting to changing file formats and managing erratic file delivery to assure data quality required dedicated technical personnel . also , achieving operational efficiency was a challenge which required marketers , analysts and system integrators to work in tandem .",
    "as marketing strategy evolved , marketers realized the value of data sciences as part of campaign design and impact analysis .",
    "real - time response based on subscriber actions , network events and subscriber location also emerged as prominent use cases .",
    "later , analytics evolved beyond simple statistics on individual subscriber s key performance indicators ( kpis ) and manually defined rules for grouping and classification , to machine learned tags , clustering , propensity analysis models and recommenders . as a result ,",
    "the need for performance , tunable latencies and scalability increased multi - fold .",
    "our platform had to adapt from being a transformational campaign execution tool to a real - time data analytics powered mobile marketing ecosystem , catering to varied use cases and actors .",
    "originally a fully rdbms based solution , all data processing was performed within the database . as a first candidate for optimization ,",
    "the extract - transform - load ( etl ) framework was identified , where the practice was to ingest data into a database and process using stored procedures .",
    "this approach was inefficient while processing call data record ( cdrs ) which may contain billions of rows and hundreds of columns , often requiring cross references across multiple input sources . by externalizing basic transformations and data",
    "aggregation from rdbms into hadoop , we achieved performance improvements as significant as 100 times speedup in etl and campaign target generation processes .",
    "even then , we faced scalability challenges for csps with more than 50 million subscribers .",
    "this prompted us to overhaul our platform and practices to bring in the desired level of scalability , performance and resiliency .",
    "for real - time delivery of machine learning outcomes at scale , our purpose - built architecture essentially decouples multiple layers and application flows . computational layer , responsible for building and maintaining up to date models operate in a batch mode .",
    "output from models are persisted into a low latency key - value store at scheduled intervals , as configured .",
    "a service layer api provides real - time access to the generated insights .",
    "computational layer is pluggable and allows co - existence of multiple underlying data processing frameworks such as apache hadoop and apache spark , allowing model developers to make choices based on computational needs .",
    "models are expressed as workflows , using a domain specific language ( dsl ) based on xml , facilitating quick experimentation .",
    "common feature engineering steps such as dimensionality reduction and sampling are built into the platform , as reusable components .",
    "delivery channels make use of the personalization api to personalize offers and content across touchpoints .",
    "our platform also leverage rdbms as transactional and metadata store , and an in - memory database for real time analytics .",
    "a host of specialized services are built in to the platform , as illustrated in the figure and summarized below.the platform allows other pluggable applications to consume these services , allowing a wide variety of business units to derive economic value from a common data pool .    *",
    "deployment and integrations - built - in configurable interfaces to csp s network elements which include various data sources , communication channels , operations support and business support systems(oss / bss ) and subscriber touch points ; tools that speed up deployments and ensure adherence to the reference architecture and best practices .",
    "* campaign management - using a configurable rule management ui where domain experts could configure , edit and manage huge number of rules against subscriber kpis and insights * analytics support - using built - in / plug and play domain specific algorithms , data management services and adaptors , and a workflow orchestration mechanism * operations support - using standardized logging , monitoring and alerting tools , and standard operating procedures .",
    "we are also working on an anomaly detection framework that employs predictive analytics to enable proactive issue resolution .",
    "[ fig : platform_architecture ]        lot of our design choices and component evolution were influenced by our learnings from our production systems .",
    "for instance , while standard tools , such as flume and scoop , were available for data acquisition and ingestion into hadoop , further data processing towards insight generation needed a custom data management and workflow orchestration framework .",
    "producer - consumer interdependencies between workflows had to be modelled as data pipelines and processes that are triggered on satisfying a predicate ( a combination of arrival of the required data , a schedule and/or the occurrence of an external event ) .",
    "the service also maintains a state against each process , file and insight at multiple check points , to provide visibility into their lifecycle status .",
    "basic data quality checks like file consistency and header validations were also handled on receiving the file , done only once before supplying them to processes , thus avoiding repetition at the process level .",
    "row level checks are usually disabled to avoid latencies , however data quality assurance tools like daily trend reports , and trip wires based on accumulators and counters are provided to trigger alerts if deviations are observed beyond a threshold .",
    "we also observed that data access patterns varied across different processes , with different sources and sink .",
    "some processes required low latency key - value lookups , as in the case of real - time trigger based rule evaluations , while others required accessing subsets of data qualifying a predicate .",
    "some processes use iterative computing techniques which are i / o intensive , in worst case requiring multiple full table read - writes as in the case machine learning algorithms such as k - means .",
    "applications such as targeting require a full table scan on the insight repository per target calculation , and write the result to an rdbms .",
    "full table operations on the insight repository proved inefficient when multiple such application run together on a very large data set , as is the case with data written to rdbms . a data access layer was thus introduced , which facilitates a publish - subscribe pattern , propagating data to all applications at varying latencies depending on the context .",
    "the layer also provides pluggable adaptors for data format conversions required for integrating external libraries , like mahout , into the platform . for iterative computing , where repetitive disk operations were found to be wasteful",
    ", we introduced apache spark , which loads data in to a cluster s memory and allow repeated processing in - memory .",
    "in this section , we present a few interesting mobile marketing applications which make use of large scale machine learning techniques , which we have productionized successfully .",
    "matching potentially millions of subscribers to relevant mobile advertisements subject to constraints on advertiser budgets , subscriber messaging limits , optimal revenue for the advertising network and fairness to all advertisers , along with the sheer data volumes and changing subscriber behavior , poses significant data management challenges .",
    "a direct , scalable solution to this problem could be extremely i / o intensive and suboptimal in infrastructure utilization , if not intractable .",
    "we make use of a near - linearly scalable approach to solving this constrained allocation problem using a combination of a scaling transformation which groups subscribers based on advertiser s target criteria and application of an integer programming technique .",
    "concretely , the ad - allocation problem can be summarized as follows . there",
    "exist a set of advertisers , with certain targeting criteria expressed in terms of subscriber kpis .",
    "these advertisers pay certain per unit price for every ad sent ; they also have an allocation budget which denote the limit to the number of ads it can afford to send .",
    "these ads are to be allocated to a given set of subscribers , each having kpi values associated with them .",
    "each subscriber also has a limit to the number of ads it is willing to receive , indicated by subscriber limit or frequency cap .",
    "ad - allocation is formulated as an optimization problem which could be solved using an integer program .",
    "@xmath0 : @xmath1    subject to :    @xmath2 , frequency cap of @xmath3 + @xmath4 , frequency cap of @xmath5 + @xmath6 +    here @xmath7 denotes price paid by @xmath5 , per subscriber assigned to @xmath5 and @xmath8 indicate eligibility of @xmath3 to be allocated to @xmath5 , determined by match between subscriber attribute values and advertiser s target criteria ; @xmath9 indicates if @xmath3 is allocated to @xmath5 .    as we are dealing with millions of subscribers and thousands of advertisers , an efficient representation of",
    "the problem is critical .",
    "our approach involved grouping subscribers based on advertiser s target criteria so that all allocations could be made in such a way that a certain volume of these subscriber groups would be allocated to each advertiser , thus converting a large optimization problem to a smaller problem with fewer variables .",
    "a subscriber group , @xmath10 , is characterized by the following properties .",
    "* @xmath10 is a subset of the entire subscriber base * for every other group @xmath11 , @xmath12 , that is , all the groups are mutually exclusive . * all the subscribers in @xmath10 ,",
    "are targeted by exact same set of advertisers . *",
    "the difference between frequency caps which represent individual limit on the number of ads receivable per day , of any 2 subscribers in @xmath10 is at most 1 .",
    "in addition to the above aspects , every subscriber must belong to at least one group .",
    "the group allocation problem corresponding to a subscriber - advertiser allocation problem is obtained by reading the advertisers requirements .",
    "the attribute requirements specified by all the advertisers are gathered first .",
    "every eligibility criterion is represented by a bit .",
    "for all the subscribers satisfying a criterion , the corresponding bit is set to one .",
    "subscribers are further grouped based on their frequency caps as above . this way",
    ", we achieve a set of subscriber groups satisfying all the above properties .",
    "all the members of a group are targeted by the exact same set of advertiser , because of the bit representation .",
    "we define frequency cap of a subscriber group @xmath10 to be equal to the sum of frequency caps of all the subscribers in that group .",
    "these formulated groups , along with the defined frequency cap properties are used to construct a group allocation problem , and solved for a feasible solution .",
    "this defines the procedure to derive a group allocation problem from an instance of the subscriber - advertiser allocation problem . in this approach",
    ", subscriber attributes are read only once from the data store and we explicitly need not care about frequency cap feasibility as it would be taken care of by the model itself .",
    "once a feasible solution to the group allocation problem is obtained , we derive the actual allocation of individual subscribers to advertisers by iterating over each group . within each group ,",
    "we arrange subscribers in the descending order of frequency cap and allocation to each advertiser is carried out in such a way that subscribers with higher frequency cap gets allocated first .",
    "fairness is an important aspect in ad - allocation .",
    "we require that no advertiser must starve because it pays less .",
    "fairness is easily introduced into the model through additional constraints to the optimization problem so that ad allocations are made to advertisers proportional to the price they are willing to pay per impression .",
    "we make use of a mixed integer linear program solver library called symphony[11 ] to solve the formulated problem .",
    "a comparative study of solution running time and problem size of the original subscriber - advertiser allocation problem to the group allocation problem , is described in table [ scaledvsunscaled ] , demonstrating the effect of our reduction approach .",
    "the problem size indicated here is the size of the formulated .mps file representing the integer program that we provide to the solver .",
    ".comparison of original to the reduced allocation [ cols=\"^,^,^,^,^ \" , ]     [ fig_movielens_irstats ]        to scale up the implementation , we split the recommender system into three phases .",
    "first phase generates the content - topic probability distributions or content profiles along with top keywords corresponding to each topic .",
    "we make use of cvb algorithm which is implemented in apache mahout for lda [ 14 ] .",
    "second phase aggregates content - topic distributions according to subscriber rating data to generate subscriber - topic distributions or profiles , using a map - reduce job .",
    "third phase generates the actual recommendations per subscriber based on the learned profiles using multiple map - reduce jobs .",
    "final output from the model is generated as a flat file containing @xmath13 recommendations per subscriber , which gets persisted into a low - latency key - value store for real - time personalization delivery .",
    "seperate workflows were created to automate this whole process .",
    "first phase got scheduled to run weekly , as new contents got added weekly .",
    "second and third phase were daily jobs , due to regular usage .",
    "initially , content personalization was limited to a few touchpoints and hence subscriber base actively using it was limited .",
    "as the usage increased , calculation of user - similarity matrix became computationally intensive .",
    "also , frequent profile updates quickly made the similarity matrix obsolete , forcing its frequent re - computation . to solve this problem ,",
    "efforts are underway to modify the ranking logic of our recommender system to estimate similarity between subscriber profiles and content profiles directly using kullback - leibler divergence .    during the course of operationalizing this model",
    ", we realized that a proper breakup of a recommender model into decoupled phases allows scaling them independently .",
    "also , having a manual rule - based recommendation mechanism integrated with the recommender system is practically useful as marketers could optionally override machine generated recommendations based on business priorities and specialized domain knowledge .",
    "manual rules proved to be also useful to generate default recommendations in situations where enough information about subscribers or content to be recommended is unavailable .",
    "another aspect that we realized was that parallelizing a process in itself may not be sufficient to meet scalability challenges posed by real - world problems as in this case , where revisiting the ranking logic was an appropriate choice .",
    "operationalizing large - scale data mining platforms for real - world csp applications are more than trivial and require a correct blend of technology , human resource , organizational structures and organizational processes .",
    "we realized that , so far , there is no single big data technology , which can readily cater to all csp needs .",
    "practically , a purpose built hybrid architecture , which allows co - existence of several big data and conventional data management technologies proved to be effective .",
    "analytics platform should support multiple data organization strategies to facilitate the necessary data access patterns . providing",
    "pluggable support for multiple distributed and non - distributed execution modalities such as map - reduce and in - memory processing gives flexibility to the analytics process to choose the appropriate execution framework depending on data volume and nature of computation .",
    "need for a meaningful logging strategy coupled with a centralized system that derives operational insights , is paramount . adopting open - source technologies and extending them as per needs",
    ", proved to be of immense value in terms of reducing feature delivery time and total cost of ownership .",
    "another set of key learnings were around data management .",
    "a proper data quality assurance framework is essential to ensure data sanity within the platform .",
    "we also recognized the importance of a data lifecycle management system , which tracks data flows across the platform . maintaining a data catalogue which captures details of data sources , file formats , derived kpis and insights",
    "was observed to be helpful for seamless integration and consumption of insights across the platform .",
    "our scaling efforts on data mining algorithms taught us that there is no single scaling - recipe which is universal .",
    "data preprocessing and feature engineering through a careful blend of domain knowledge and data sciences may prove to be a lot more important than the sophistication of learning algorithms , in practice ."
  ],
  "abstract_text": [
    "<S> communication service providers ( csps ) are in a unique position to utilize their vast transactional data assets generated from interactions of subscribers with network elements as well as with other subscribers . </S>",
    "<S> csps could leverage its data assets for a gamut of applications such as service personalization , predictive offer management , loyalty management , revenue forecasting , network capacity planning , product bundle optimization and churn management to gain significant competitive advantage . </S>",
    "<S> however , due to the sheer data volume , variety , velocity and veracity of mobile subscriber datasets , sophisticated data analytics techniques and frameworks are necessary to derive actionable insights in a useable timeframe . in this paper </S>",
    "<S> , we describe our journey from a relational database management system ( rdbms ) based campaign management solution which allowed data scientists and marketers to use hand - written rules for service personalization and targeted promotions to a distributed big data analytics platform , capable of performing large scale machine learning and data mining to deliver real time service personalization , predictive modelling and product optimization . </S>",
    "<S> our work involves a careful blend of technology , processes and best practices , which facilitate man - machine collaboration and continuous experimentation to derive measurable economic value from data . </S>",
    "<S> our platform has a reach of more than 500 million mobile subscribers worldwide , delivering over 1 billion personalized recommendations annually , processing a total data volume of 64 petabytes , corresponding to 8.5 trillion events . </S>"
  ]
}
{
  "article_text": [
    "parameterized complexity analysis  cyganetal15,downeyf13,fg06,niedermeierbook06 is a flourishing field dealing with the exact solvability of np - hard problems .",
    "the key idea is to lift classical complexity analysis , rooted in the p  versus  np phenomenon , from a one - dimensional to a two- ( or even multi-)dimensional perspective , the key concept being `` fixed - parameter tractability ( fpt ) '' . but why should this natural and successful approach be limited to intractable ( i.e. ,  np - hard ) problems ?",
    "we are convinced that appropriately parameterizing polynomially solvable problems sheds new light on what makes a problem far from being solvable in _ linear _ time , in the same way as classical fpt algorithms help in illuminating what makes an np - hard problem far from being solvable in _ polynomial _ time . in a nutshell ,",
    "the credo and leitmotif of this paper is that `` fpt inside  p '' is a very interesting , but still too  little explored , line of research .",
    "the known results fitting under this leitmotif are somewhat scattered around in the literature and do not systematically refer to or exploit the toolbox of parameterized algorithm design . this should change and `` fpt inside  p ''",
    "should be placed on a much wider footing , using parameterized algorithm design techniques such as data reduction and kernelization . as a simple illustrative example , consider the maximum matching problem . by following a `` buss - like '' kernelization ( as is standard knowledge in parameterized algorithmics  @xcite ) and then applying a known polynomial - time matching algorithm , it is not difficult to derive an efficient algorithm that , given a graph @xmath0 with @xmath2 vertices , computes a matching of size at least  @xmath3 in @xmath5 time . for the sake of completeness we present the details of this algorithm in section  [ matching - kernelization - sec ] .",
    "more formally , and somewhat more generally , we propose the following scenario .",
    "given a problem with instance size  @xmath2 for which there exists an @xmath6-time algorithm , our aim is to identify appropriate parameters @xmath3 and to derive algorithms with time complexity @xmath7 such that @xmath8 , where @xmath9 depends only on  @xmath3 .",
    "first we refine the class fpt by defining , for every polynomially - bounded function @xmath10 , the class fpt@xmath11 containing the problems solvable in @xmath12 time , where @xmath9 is an arbitrary ( possibly exponential ) function of  @xmath3 .",
    "it is important to note that , in strong contrast to fpt algorithms for np - hard problems , here the function @xmath9 may also become _ polynomial _ in  @xmath3 .",
    "motivated by this , we refine the complexity class  p by introducing , for every polynomial function  @xmath10 , the class _ _ p - fpt__@xmath11 _ ( polynomial  fixed - parameter tractable ) _ , containing the problems solvable in @xmath13 time for some constant @xmath14 , i.e. , the dependency of the complexity on the parameter  @xmath3 is at most polynomial . in this paper",
    "we focus our attention on the ( practically perhaps most attractive )  subclass  _",
    "pl - fpt _ _ ( polynomial - linear fixed - parameter tractable ) _ , where pl - fpt = p - fpt@xmath15 .",
    "for example , the algorithm we sketched above for maximum matching , parameterized by solution size  @xmath3 , yields containment in the class pl - fpt .    in an attempt to systematically follow the leitmotif `` fpt  inside  p '' , we put forward three desirable algorithmic properties :    1 .",
    "the running time should have a polynomial dependency on the parameter .",
    "2 .   the running time should be as close to linear as possible if the parameter value is constant , improving upon an existing `` high - degree '' polynomial - time ( unparameterized ) algorithm .",
    "3 .   the parameter value , or a good approximation thereof , should be computable efficiently ( preferably in linear time ) for arbitrary parameter values .",
    "in addition , as this research direction is still only little explored , we suggest to focus first on problems for which the best known upper bounds of the time complexity are polynomials of high degree , e.g. , @xmath16 or higher .",
    "* related work .",
    "* here we discuss previous work on _ graph problems _ that fits under the leitmotif `` fpt inside  p '' ; however , there exists further related work also in other topics such as string matching  @xcite , xpath query evaluation in xml databases  @xcite , and linear program solving  @xcite",
    ".    the complexity of some known polynomial - time algorithms can be easily `` tuned '' with respect to specific parameters , thus immediately reducing the complexity whenever these parameters are bounded .",
    "for instance , in @xmath2-vertex and @xmath17-edge graphs with nonnegative edge weights , dijkstra s @xmath18-time algorithm for computing shortest paths can be adapted to an @xmath19-time algorithm , where @xmath3 is the number of distinct edge weights  @xcite ( also refer to  @xcite ) .",
    "in addition , motivated by the quest for explaining the efficiency of several shortest path heuristics for road networks ( where dijkstra s algorithm is too slow for routing applications ) , the `` highway dimension '' was introduced  abrahamfgw10 as a parameterization helping to do rigorous proofs about the quality of the heuristics .",
    "altogether , the work on shortest path computations shows that , despite of known quasi - linear - time algorithms , adopting a parameterized view may be of significant ( practical ) interest .",
    "maximum flow computations constitute another important application area for `` fpt inside  p '' .",
    "an @xmath20-time maximum flow algorithm was presented  @xcite for graphs that can be made planar by deleting  @xmath3  `` crossing edges '' ; notably , here it is assumed that the embedding and the @xmath3  crossing edges are given along with the input .",
    "an @xmath21-time maximum flow algorithm was developed  @xcite , where @xmath22 is the genus of the graph and @xmath23  is the sum of all edge capacities ; here it is also assumed that the embedding and the parameter  @xmath22 are given in the input .",
    "finally , we remark that multiterminal flow  hagerupknr98 and wiener index computations  @xcite have exploited the treewidth parameter , assuming that the corresponding tree decomposition of the graph is given .",
    "however , in both publications  hagerupknr98,cabellok09 the dependency on the parameter  @xmath3 is _",
    "exponential_.    we finally mention that , very recently , two further works delved deeper into `` fpt inside  p '' algorithms for maximum matching  @xcite .    * our contribution . * in this paper , to illustrate the potential algorithmic challenges posed by the `` fpt inside  p '' framework ( which seem to go clearly beyond the known `` fpt inside  p '' examples ) , we focus on longest path on interval graphs , which is known to be solvable in @xmath1 time  @xcite , and we derive a pl - fpt - algorithm ( with the appropriate parameterization ) that satisfies all three desirable algorithmic properties described above .",
    "the longest path problem asks , given an undirected graph @xmath0 , to compute a maximum - length path in  @xmath0 .",
    "on general graphs , the decision variant of longest path is np - complete and many fpt algorithms have been designed for it , e.g. ,  @xcite , contributing to the parameterized algorithm design toolkit techniques such as color - coding  @xcite ( and further randomized techniques  chenlsz07,kneismrr06 ) as well as algebraic approaches  @xcite .",
    "the currently best known deterministic fpt algorithm runs in @xmath24 time on weighted graphs with maximum edge weight @xmath25 , where @xmath3 is the number of vertices in the path  @xcite , while the currently best known randomized fpt algorithm runs in @xmath26 time with constant , one - sided error  @xcite .",
    "longest path is known to be solvable in polynomial time only on very few non - trivial graph classes  @xcite ( see also  @xcite for much smaller graph classes ) .",
    "this problem has also been studied on directed graphs ; a polynomial - time algorithm was given by gutin  @xcite for the class of orientations of multipartite tournaments , which was later extended by bang - jensen and gutin  @xcite . with respect to undirected graphs ,",
    "a few years ago it was shown that longest path on interval graphs can be solved in polynomial time , providing an algorithm that runs in @xmath1 time  @xcite ; this algorithm has been extended with the same running time to the larger class of cocomparability graphs  @xcite using a lexicographic depth first search ( ldfs ) approach .",
    "notably , a longest path in a _ proper _ interval graph can be computed by a _",
    "trivial _ linear - time algorithm since every connected proper interval graph has a hamiltonian path  bertossi83 .",
    "consequently , as the classes of interval graphs and of proper interval graphs seem to behave quite differently , it is natural to parameterize longest path on interval graphs by the size  @xmath3 of a _ minimum proper interval ( vertex ) deletion set _ ,",
    "i.e. , by the minimum number of vertices that need to be deleted to obtain a proper interval graph . that is , this parameterization exploits what is also known as `` distance from triviality ''  @xcite in the sense that the parameter @xmath3 measures how far a given input instance is from a trivially solvable special case . as it turns out",
    ", one can compute a @xmath27-approximation of  @xmath3 in  @xmath28 time for an interval graph with @xmath2  vertices and @xmath17  edges . using this constant - factor approximation of @xmath3",
    ", we provide a polynomial fixed - parameter algorithm that runs in @xmath4 time , thus proving that longest path on interval graphs is in the class pl - fpt when parameterized by the size of a minimum proper interval deletion set .    to develop our algorithm , we first introduce in section  data - reductions - sec two data reduction rules on interval graphs .",
    "each of these reductions shrinks the size of specific vertex subsets , called _",
    "reducible _ and _ weakly reducible _ sets , respectively .",
    "then , given any proper interval deletion set @xmath29 of an interval graph @xmath0 , in section  special - interval - sec we appropriately decompose the graph @xmath30 into two collections @xmath31 and @xmath32 of reducible and weakly reducible sets , respectively , on which we apply the reduction rules of section  [ data - reductions - sec ] .",
    "the resulting interval graph @xmath33 is _ weighted _ ( with weights on its vertices ) and has some special properties ; we call @xmath33 a _ special weighted interval graph _ with _ parameter _",
    "@xmath34 , where in this case @xmath35 .",
    "notably , although  @xmath33 has reduced size , it still has @xmath36 vertices .",
    "then , in section  [ algorithm - sec ] we present a fixed - parameter algorithm ( with parameter @xmath34 ) computing in @xmath37 time the maximum weight of a path in a special weighted interval graph .",
    "we note here that such a maximum - weight path in a special weighted interval graph can be directly mapped back to a longest path in the original interval graph .",
    "thus , our parameterized algorithm computes a longest path in the initial interval graph  @xmath0 in @xmath38 time .    turning our attention away from longest path on interval graphs we present for the sake of completeness our `` buss - like '' kernelization of the maximum matching problem in section  [ matching - kernelization - sec ] . using this kernelization",
    "an efficient algorithm can be easily deduced which , given an arbitrary graph  @xmath0 with @xmath2  vertices , computes a matching of size at least  @xmath3 in  @xmath0 in @xmath5 time .",
    "finally , in the concluding section  [ outlook - sec ] we discuss our contribution and provide a brief outlook for future research directions .    * notation .",
    "* we consider finite , simple , and undirected graphs . given a graph @xmath0 , we denote by @xmath39 and @xmath40 the sets of its vertices and edges , respectively .",
    "a graph @xmath0 is _ weighted _ if it is given along with a weight function @xmath41 on its vertices .",
    "an edge between two vertices @xmath42 and @xmath43 of a graph @xmath44 is denoted by @xmath45 , and in this case @xmath42 and @xmath43 are said to be _",
    "the _ neighborhood _ of a vertex @xmath46 is the set @xmath47 of its adjacent vertices .",
    "the cardinality of  @xmath48 is the degree  @xmath49 of  @xmath42 . for every subset @xmath50",
    "we denote by @xmath51 $ ] the subgraph of  @xmath0 induced by the vertex set @xmath52 and we define @xmath53 $ ] .",
    "a set @xmath50 induces an _ independent set _ ( resp .  a _ clique _ ) in @xmath0 if @xmath54 ( resp .",
    "if @xmath55 ) for every pair of vertices @xmath56 . furthermore , @xmath52 is a _ vertex cover _ if and only if @xmath57 is an independent set .",
    "for any two graphs @xmath58 , we write @xmath59 if @xmath60 is an induced subgraph of @xmath61 .",
    "a _ matching _",
    "@xmath62 in a graph @xmath0 is a set of edges of @xmath0 without common vertices .",
    "all paths considered in this paper are simple .",
    "whenever a path @xmath63 visits the vertices @xmath64 in this order , we write @xmath65 . furthermore , for two vertex - disjoint paths @xmath66 and @xmath67 where @xmath68 , we denote by @xmath69 the path @xmath70 .",
    "a graph @xmath44 is an _ interval _ graph if each vertex @xmath71 can be bijectively assigned to a closed interval @xmath72 on the real line , such that @xmath55 if and only if @xmath73 , and then the collection of intervals @xmath74 is called an _ interval representation _ of @xmath0 .",
    "the interval graph @xmath0 is a _ proper interval graph _ if it admits an interval representation @xmath75 such that @xmath76 for every @xmath77 , and then @xmath75 is called a _ proper interval representation_. given an interval graph @xmath44 , a subset @xmath78 is a _ proper interval deletion set _ of  @xmath0 if @xmath30 is a proper interval graph . the _ proper interval deletion number _ of  @xmath0",
    "is the size of the smallest proper interval deletion set . finally ,",
    "for any positive integer @xmath79 , we denote @xmath80=\\{1,2,\\ldots , t\\}$ ] .",
    "in this section we present two data reductions on interval graphs .",
    "the first reduction ( cf .",
    "section  [ first - data - reduction - subsec ] ) shrinks the size of a collection of vertex subsets of a certain kind , called _",
    "reducible _ sets , and it produces a _ weighted _ interval graph . the second reduction ( cf .",
    "section  [ second - data - reduction - subsec ] ) is applied to an arbitrary weighted interval graph ; it shrinks the size of a collection of another kind of vertex subsets , called _ weakly reducible _ sets , and it produces a smaller weighted interval graph .",
    "both reductions retain as an invariant the maximum path weight .",
    "the proof of this invariant is based on the crucial notion of a _",
    "normal _ path in an interval graph ( cf",
    ".  section  normal - paths - subsec ) .",
    "the following vertex ordering characterizes interval graphs  @xcite .",
    "moreover , given an interval graph @xmath0 with  @xmath2 vertices and @xmath17 edges , this vertex ordering of @xmath0 can be computed in @xmath81 time  @xcite .",
    "[ lem : ordering.edges ] a graph @xmath0 is an interval graph if and only if there is an ordering @xmath82 ( called _ right - endpoint ordering _ ) of  @xmath39 such that for all @xmath83 , if @xmath84 then also @xmath85 .",
    "in the remainder of the paper we assume that we are given an interval graph  @xmath0 with @xmath2  vertices and @xmath17  edges as input , together with an interval representation  @xmath75 of  @xmath0 , where the endpoints of the intervals are given sorted increasingly . without loss of generality , we assume that the endpoints of all intervals are distinct . for every vertex @xmath86",
    "we denote by @xmath87 $ ] the interval of @xmath75 that corresponds to @xmath43 , i.e. ,  @xmath88 and  @xmath89 are the left and the right endpoint of  @xmath72 , respectively . in particular , @xmath0 is assumed to be given along with the _ right - endpoint ordering _",
    "@xmath82 of its vertices  @xmath90 , i.e. ,  @xmath91 if and only if @xmath92 in the interval representation  @xmath75 ( see also lemma  lem : ordering.edges ) . given a set @xmath93 , we denote by @xmath94 $ ] the interval representation induced from @xmath75 on the intervals of the vertices of  @xmath52 .",
    "we say that two vertices @xmath95 are _ consecutive in  @xmath52 _ ( with respect to the vertex ordering  @xmath82 ) if @xmath96 and for every vertex @xmath97 either @xmath98 or @xmath99 .",
    "furthermore , for two sets @xmath100 , we write @xmath101 whenever @xmath102 for every @xmath103 and @xmath104 .",
    "finally , we denote by @xmath105 the interval @xmath106 $ ] .",
    "it is well known that an interval graph @xmath0 is a proper interval graph if and only if  @xmath0 is @xmath107-free , i.e. ,  if  @xmath0 does not include the claw @xmath107 with four vertices ( cf .",
    "figure  [ claw - k-1 - 3-fig ] ) as an induced subgraph  @xcite .",
    "it is worth noting here that , to the best of our knowledge , it is unknown whether a minimum proper interval deletion set of an interval graph @xmath0 can be computed in polynomial time .",
    "however , since there is a unique forbidden induced subgraph @xmath107 on four vertices , we can apply cai s generic algorithm  @xcite on an arbitrary given interval graph @xmath0 with @xmath2 vertices to compute a proper interval deletion set of  @xmath0 of size at most @xmath3 in fpt time @xmath108 .",
    "the main idea of cai s bounded search tree algorithm in our case is that we repeat the following two steps until we either get a @xmath107-free graph or have used up the deletion of @xmath3 vertices from @xmath0 : ( i )  detect an induced @xmath107 , ( ii )  branch on deleting one of the four vertices of the detected @xmath107 . at every iteration of this process",
    "we have four possibilities on the next vertex to delete .",
    "thus , since we can delete up to @xmath3 vertices in total , the whole process finishes after at most @xmath108 steps .",
    "as we prove in the next theorem , a @xmath27-approximation of the minimum proper interval deletion number of an interval graph can be computed much more efficiently .",
    "[ proper - deletion - set - approximation - thm]let @xmath44 be an interval graph , where @xmath109 and @xmath110 .",
    "let @xmath3 be the size of the minimum proper interval deletion set of  @xmath0 .",
    "then a proper interval deletion set @xmath29 of size at most @xmath111 can be computed in @xmath81 time .",
    "let @xmath112 be a set of four vertices that induces a @xmath107 in  @xmath0 such that @xmath113 , @xmath114 , and @xmath115 in the interval representation @xmath75 ( cf .",
    "figure  [ claw - k-1 - 3-fig ] ) .",
    "let @xmath116 ( resp .",
    "@xmath117 ) be the neighbor of vertex @xmath42 with the leftmost right endpoint @xmath118 ( resp .  with the rightmost left endpoint @xmath119 ) in the representation @xmath75 , i.e. ,  @xmath120 and @xmath121 . then note that the set @xmath122 also induces a @xmath107 in  @xmath0 .",
    "we now describe an @xmath81-time algorithm that iteratively detects an induced @xmath107 and removes its vertices from the current graph . during its execution",
    "the algorithm maintains a set @xmath29 of `` marked '' vertices ; a vertex is marked if it has been removed from the graph at a previous iteration .",
    "initially , @xmath123 , i.e. , all vertices are unmarked .",
    "the algorithm processes once every vertex @xmath46 in an arbitrary order . if @xmath124 ( i.e. , if @xmath42 has been marked at a previous iteration ) , then the algorithm ignores @xmath42 and proceeds with the next vertex in @xmath125 .",
    "if @xmath126 ( i.e. , if @xmath42 is unmarked ) , then the algorithm iterates for every vertex @xmath127 and it computes the vertices @xmath128 such that @xmath129 and @xmath130 . in the case where @xmath131 , the algorithm defines @xmath132 .",
    "then the algorithm iterates once again for every vertex @xmath133 and it checks whether the set @xmath134 induces a @xmath107 in  @xmath0 . if it detects at least one vertex @xmath127 such that @xmath134 induces a @xmath107 , then it marks all four vertices @xmath134 , i.e. ,  it adds these vertices to the set @xmath29 .",
    "otherwise the algorithm proceeds with processing the next vertex of @xmath125 .",
    "it is easy to check that every vertex @xmath46 is processed by this algorithm in @xmath135 time , and thus all vertices of @xmath125 are processed in @xmath81 time in total .",
    "the algorithm terminates after it has processed all vertices of @xmath125 and it returns the computed set @xmath29 of all quadruples of marked vertices .",
    "note that there are @xmath136 such quadruples .",
    "this set @xmath29 is clearly a proper interval deletion set of  @xmath0 , since @xmath30 does not contain an induced @xmath107 , i.e. ,  @xmath137 .",
    "in addition , each of the detected quadruples of the set @xmath29 induces a @xmath107 in the initial interval graph @xmath0 , and thus any minimum proper interval deletion set must contain at least one vertex from each of these quadruples , i.e. ,  @xmath138 . summarizing @xmath139 .",
    "note that , whenever four vertices induce a claw @xmath107 in an interval graph  @xmath0 , then in the interval representation @xmath75 of @xmath0 at least one of these intervals is necessarily properly included in another one ( e.g. ,   @xmath115 in figure  [ claw - k-1 - 3-fig-2 ] ) .",
    "however the converse is not always true , as there may exist two vertices @xmath140 in @xmath0 such that @xmath141 , although @xmath42 and @xmath43 do not belong to any induced claw @xmath107 in @xmath0 .",
    "[ semi - proper - representation - def]let @xmath44 be an interval graph .",
    "an interval representation @xmath75 of @xmath0 is _ semi - proper _ when , for any @xmath77 :    * if @xmath141 in @xmath75 then the vertices @xmath42 and @xmath142 belong to an induced claw @xmath107 in @xmath0 , i.e.  @xmath143 induces a claw @xmath107 in @xmath0 for some vertices @xmath144 .",
    "every interval representation @xmath75 of a graph @xmath0 can be efficiently transformed into a semi - proper representation @xmath145 of @xmath0 , as we prove in the next theorem . in the remainder of the paper",
    "we always assume that this preprocessing step has been already applied to @xmath75 .    [",
    "interval - representation - preprocessing - thm]given an interval representation @xmath75 , a semi - proper interval representation @xmath145 can be computed in  @xmath81 time .",
    "similarly to the proof of theorem  [ proper - deletion - set - approximation - thm ] , the algorithm first computes for every vertex @xmath46 the vertices @xmath146 , such that @xmath147 and @xmath148 . if @xmath149 , then the algorithm defines @xmath132 .",
    "the algorithm iterates over all @xmath46 . for each @xmath46 ,",
    "the algorithm iterates over all @xmath150 such that @xmath141 in the current interval representation .",
    "let these vertices be @xmath151 , where @xmath152 .",
    "the algorithm processes the vertices @xmath153 in this order .",
    "for every @xmath154 , if @xmath155 , then the algorithm increases the right endpoint of  @xmath156 to the point @xmath157 , for an appropriately small @xmath158 .",
    "the algorithm chooses the values of  @xmath159 such that @xmath160 . by performing these operations no new adjacencies",
    "are introduced , and thus the resulting interval representation remains a representation of the same interval graph @xmath0 .",
    "we note here that the algorithm can be efficiently implemented ( i.e. , in @xmath81 time in total ) without explicitly computing the values of these  @xmath159 , as follows .",
    "since the endpoints of the @xmath2 intervals of @xmath75 are assumed to be given increasingly sorted , we initially scan them from left to right and map them bijectively to the integers @xmath161 .",
    "then , instead of increasing the right endpoint of  @xmath156 to the point @xmath157 as described above , where @xmath154 , we just store the vertices @xmath151 ( in this order ) in a linked list after the endpoint @xmath162 . at the end of the whole process",
    "( i.e. , after dealing with all pairs of vertices @xmath163 such that @xmath150 and @xmath141 in the interval representation @xmath75 ) , we scan again all interval endpoints from left to right and re - map them bijectively to the integers @xmath164 , where in this new mapping we place the endpoints @xmath165 ( in this order ) immediately after @xmath162 .",
    "this can be clearly done in @xmath81 time .",
    "then the algorithm iterates ( again ) over all @xmath150 such that @xmath141 in the current interval representation .",
    "let these vertices be @xmath166 , where @xmath167 .",
    "the algorithm processes the vertices @xmath166 in this order . for every @xmath168 , if @xmath169 and @xmath170 , then the algorithm decreases the left endpoint of  @xmath156 to the point @xmath171 , for an appropriately small @xmath158 .",
    "the algorithm chooses the values of  @xmath159 such that @xmath160 . similarly to the above , no new adjacencies are introduced by performing these operations , and thus the resulting interval representation remains a representation of the same interval graph @xmath0 .",
    "furthermore , the algorithm can be efficiently implemented ( i.e. , in @xmath81 time in total ) without explicitly computing these values of @xmath159 , similarly to the description in the previous paragraph .",
    "denote by @xmath145 the resulting interval representation of  @xmath172 , which is obtained after performing all the above operations .",
    "furthermore denote by @xmath173 the right - endpoint ordering of the intervals in  @xmath145 .",
    "let @xmath77 .",
    "it can be easily checked that , if @xmath141 in  @xmath145 , then also @xmath141 in the initial representation @xmath75 .",
    "furthermore , it follows directly by the above construction that , if @xmath141 in  @xmath145 , then @xmath174 , where @xmath175 , and thus the vertices @xmath134 induce a @xmath107 in  @xmath0 .",
    "the computation of the vertices @xmath176 for all vertices @xmath46 can be done in  @xmath81 time .",
    "furthermore , for every @xmath46 we can visit all vertices @xmath150 in  @xmath135 time in the above algorithm , since the endpoints of the intervals are assumed to be given sorted in increasing order .",
    "for every such edge @xmath55 , where @xmath141 , we can check in  @xmath177 time whether @xmath178 ( resp .",
    "whether @xmath179 ) by checking whether @xmath180 ( resp .  by checking whether @xmath181 ) . therefore",
    ", the total running time of the algorithm is @xmath81 .",
    "all our results on interval graphs rely on the notion of a _ normal _",
    "path  @xcite ( also referred to as a _ straight _ path in  @xcite ) .",
    "this notion has also been extended to the greater class of cocomparability graphs  @xcite .",
    "normal paths are useful in the analysis of our data reductions in this section , as well as in our algorithm in section  [ algorithm - sec ] , as they impose certain _ monotonicity _ properties of the paths .",
    "informally , the vertices in a normal path appear in a `` left - to - right fashion '' in the right - endpoint ordering @xmath82 . in the following ,",
    "given a graph @xmath0 and a path @xmath182 of  @xmath0 , we write @xmath183 if and only if @xmath184 , i.e. ,  whenever @xmath185 precedes @xmath186 in  @xmath63 .",
    "[ normal - path - def]let @xmath44 be an interval graph and @xmath82 be a right - endpoint ordering of  @xmath125 .",
    "the path @xmath187 of  @xmath0 is _ normal _ if :    * @xmath188 is the leftmost vertex among @xmath189 in  @xmath82 and * @xmath185 is the leftmost vertex of  @xmath190 in  @xmath82 , for every @xmath191 .",
    "[ lem : normal.path.existence ] let @xmath0 be an interval graph and @xmath75 be an interval representation of  @xmath0 . for every path @xmath63 of  @xmath0 , there exists a normal path @xmath192 of  @xmath0 such that @xmath193 .",
    "we now provide a few properties of normal paths on interval graphs that we will need later on .",
    "[ obs : appending.a.vertex ] let @xmath0 be an interval graph and @xmath63 be a normal path of  @xmath0 .",
    "let @xmath194 be the last vertex of  @xmath63 and @xmath195 such that @xmath196 and @xmath197 for every vertex @xmath198 .",
    "then @xmath199 is a normal path of  @xmath0 .",
    "[ obs : first.vertex ] let @xmath0 be an interval graph , @xmath63 be a normal path of  @xmath0 , and @xmath200 . if @xmath201 and @xmath202 , then @xmath42 is not the first vertex of  @xmath63 .",
    "[ lem : oxi.anapoda ] let @xmath0 be an interval graph , @xmath63 be a normal path of  @xmath0 , and @xmath200 .",
    "if @xmath203 and @xmath204 , then @xmath205 .    the proof is done by contradiction",
    "let @xmath200 , where @xmath203 and @xmath204 .",
    "assume that @xmath206 . among all such pairs of vertices",
    ", we can assume without loss of generality that @xmath207 is maximum , where @xmath207 denotes the distance between the vertices @xmath42 and @xmath208 on the path @xmath63 . from observation  obs",
    ": first.vertex , @xmath42 is not the first vertex of  @xmath63 , and therefore @xmath42 has a predecessor , say @xmath209 , in  @xmath63 .",
    "note that @xmath210 .",
    "suppose that @xmath211 .",
    "then , since @xmath204 and @xmath203 , it follows by the normality of  @xmath63 that @xmath42 is not the next vertex of  @xmath209 in the path @xmath63 , which is a contradiction .",
    "therefore @xmath212 .",
    "suppose now that @xmath213 .",
    "then , since in this case @xmath214 and @xmath215 , it follows by lemma  [ lem : ordering.edges ] that @xmath216 , which is a contradiction to our assumption",
    ". therefore @xmath217 .",
    "recall that @xmath218 , @xmath219 , and @xmath210 .",
    "this is a contradiction to our assumption that @xmath207 is maximum .",
    "therefore @xmath216 .",
    "this completes the proof of the lemma .",
    "[ lem : turning.point ] let @xmath0 be an interval graph and @xmath220 be a normal path of  @xmath172 , @xmath221 . if @xmath202 then @xmath222",
    "let us assume , to the contrary , that @xmath223 , that is , @xmath224 . from observation  [ obs : first.vertex ]",
    ", @xmath42 is not the first vertex of  @xmath63 and therefore @xmath42 has a predecessor , say @xmath209 , in  @xmath63 .",
    "since @xmath63 is normal , @xmath204 , and @xmath203 , it follows that @xmath208 is not a neighbor of  @xmath209 .",
    "notice then that @xmath218 .",
    "furthermore , as @xmath209 is a neighbor of  @xmath42 , @xmath217 . summarizing , @xmath225 , @xmath217 , and @xmath226 . from lemma",
    "[ lem : oxi.anapoda ] , this is a contradiction to the assumption that @xmath63 is normal .",
    "therefore , @xmath222 .",
    "[ lem : propers.consecutive.in.path ] let @xmath0 be an interval graph and @xmath75 be an interval representation of  @xmath0 .",
    "let @xmath93 such that @xmath94 $ ] is a proper interval representation of  @xmath51 $ ] .",
    "let @xmath63 be a normal path of  @xmath0 and @xmath227 .",
    "if @xmath102 then @xmath228 .",
    "let @xmath63 be a normal path of  @xmath0 where @xmath229 , @xmath102 .",
    "if @xmath230 then from lemma  [ lem : oxi.anapoda ] , we obtain that @xmath231 .",
    "thus , from now on , we assume that @xmath232 . towards a contradiction",
    "we further assume that @xmath233 , that is , @xmath234 . from observation  [ obs : first.vertex ] , it follows that @xmath43 is not the first vertex of  @xmath63 and thus @xmath235 , that is , @xmath236 , for some @xmath237 .",
    "notice also that if @xmath238 , then @xmath239 and from lemma  lem : turning.point , @xmath240 , a contradiction to the assumption that @xmath56 and @xmath94 $ ] is a proper interval representation of  @xmath51 $ ] .",
    "thus , @xmath241 . therefore , @xmath242 , for some @xmath243 . since @xmath63 is normal and @xmath102",
    "then @xmath244 .",
    "notice that if we prove that @xmath245 , then we obtain a contradiction from lemma  lem : oxi.anapoda and the lemma follows .",
    "thus , it is enough to prove that @xmath245 .    to prove that @xmath246 we claim towards a contradiction that @xmath247 .",
    "notice then , that as @xmath244 , it also holds that @xmath248 .",
    "however , since @xmath43 and @xmath42 are proper intervals and @xmath249 , @xmath250 .",
    "thus , @xmath251 , a contradiction to the assumption that @xmath252 as @xmath194 is the predecessor of  @xmath43 in  @xmath63 . therefore , @xmath246 and this completes the proof of the lemma .",
    "[ lem : tobenamed1 ] let @xmath0 be an interval graph and @xmath253 be a normal path of  @xmath0 . for every vertex @xmath254 , it holds that @xmath249 or @xmath255 .    towards a contradiction",
    "we assume that @xmath256 and @xmath257 .",
    "then from lemma  [ lem : oxi.anapoda ] , we obtain that @xmath258 .",
    "thus , since @xmath259 and @xmath260 , it follows by the normality of  @xmath63 that @xmath261 is not the next vertex of @xmath42 in  @xmath63 , which is a contradiction",
    ". therefore @xmath102 or @xmath262 .",
    "[ lem : not.turning.point ] let @xmath0 be an interval graph and @xmath263 be a normal path of  @xmath0 .",
    "if @xmath264 then @xmath265 .",
    "let us assume that @xmath264 and @xmath266 .",
    "from lemma  lem : turning.point it follows that @xmath141 and that @xmath267 .",
    "therefore , @xmath222 and thus @xmath268 .",
    "this is a contradiction to the assumption that @xmath63 is normal as @xmath269 , @xmath266 , @xmath270 , and @xmath43 is the vertex that follows @xmath42 in  @xmath63 .",
    "[ lem : endiamesa ] let @xmath0 be an interval graph and @xmath271 be a normal path of  @xmath0 where @xmath150 . if @xmath272 , then @xmath273 , for every vertex @xmath274 .",
    "as @xmath275 , @xmath276 , @xmath208 follows @xmath42 in  @xmath63 , and @xmath63 is normal we obtain that @xmath277 .",
    "thus , it remains to prove that @xmath278 for every @xmath279 .",
    "we prove first that @xmath280 for every @xmath279 .",
    "assume to the contrary that @xmath281 .",
    "if @xmath282 then we obtain a contradiction to the assumption that @xmath63 is normal .",
    "thus , @xmath283 , @xmath284 , and @xmath285 .",
    "this is again a contradiction to the assumption that @xmath63 is normal ( from lemma  [ lem : oxi.anapoda ] ) .",
    "therefore , @xmath280 for every @xmath279 and , since @xmath272 , @xmath280 for every @xmath286 .",
    "we assume towards a contradiction that there exists a vertex @xmath287 such that @xmath288 .",
    "without loss of generality we also assume that @xmath289 is the first such vertex of  @xmath290 , that is , @xmath291 for every vertex @xmath279 with @xmath292 .",
    "we denote by @xmath209 the predecessor of  @xmath289 in  @xmath290 or @xmath208 if @xmath289 is the first vertex of  @xmath290 .",
    "then , as the path is normal , @xmath293 , @xmath288 , and @xmath294 . then , since @xmath295 , @xmath296 . however ,",
    "as @xmath232 and @xmath102 , we obtain that @xmath297 .",
    "thus , @xmath298 and , therefore , @xmath299 , a contradiction .",
    "thus , @xmath291 for every vertex @xmath286 .      here",
    "we present our first data reduction on interval graphs ( see  reduction rule  [ data - reduction-1-redrule ] ) . by applying this data reduction to a given interval graph @xmath0 , we obtain a weighted interval graph @xmath300 with weights on its vertices , such that the maximum weight of a path in  @xmath300 equals the greatest number of vertices of a path in  @xmath0 ( cf .",
    "theorem  first - data - reduction - thm ) .",
    "we first introduce the notion of a _",
    "reducible _ set of vertices and some related properties , which are essential for our reduction rule  [ data - reduction-1-redrule ] .",
    "[ def : reducible.set ] let @xmath0 be a ( weighted ) interval graph and @xmath75 be an interval representation of  @xmath0 .",
    "a set @xmath93 is _ reducible _ if it satisfies the following conditions :    1 .",
    "@xmath94 $ ] induces a connected proper interval representation of @xmath51 $ ] and 2 .   for every @xmath86 such that @xmath301 it holds @xmath302 .",
    "the intuition behind reducible sets is as follows . for every reducible set  @xmath303 ,",
    "a longest path @xmath63 contains either all vertices of @xmath52 or none of them ( cf .",
    "lemma  [ full.component.or.none ] ) .",
    "furthermore , in a certain longest path @xmath63 which contains the whole set @xmath52 , the vertices of @xmath52 appear _ consecutively _ in @xmath63 ( cf .",
    "lemma  [ lem : consecutive.vertices ] ) .",
    "thus we can reduce the number of vertices in a longest path @xmath63 ( without changing its total weight ) by replacing all vertices of @xmath52 with a single vertex having weight @xmath304 , see reduction rule  [ data - reduction-1-redrule ] .",
    "the next two observations will be useful for various technical lemmas in the remainder of the paper .",
    "observation  [ extra - condition - reducible - set - obs ] follows by the two conditions of definition  [ def : reducible.set ] for the reducible sets @xmath52 in a weighted interval graph @xmath0 .",
    "furthermore , observation [ obs : order.in.uirepresentation ] can be easily verified by considering any proper interval representation .",
    "[ extra - condition - reducible - set - obs ] let @xmath0 be a ( weighted ) interval graph , @xmath75 be an interval representation of  @xmath0 , and @xmath305 be a reducible set .",
    "then , for every @xmath306 and every @xmath307 , it holds @xmath308 .",
    "[ obs : order.in.uirepresentation][obs : consecutive.joined.by.edge ] let @xmath0 be a proper interval graph and @xmath75 be a proper interval representation of  @xmath0 . for every @xmath309 :    * if @xmath102 , then @xmath250 .",
    "* if @xmath42 and @xmath43 are consecutive vertices in the ordering  @xmath82 and @xmath0 is connected , then @xmath232 .",
    "[ full.component.or.none ] let @xmath0 be a weighted interval graph with weight function @xmath41 and let @xmath52 be a reducible set in  @xmath0 .",
    "let also @xmath63 be a path of maximum weight in  @xmath0 .",
    "then either @xmath310 or @xmath311 .",
    "let @xmath63 be a path of  @xmath0 of maximum weight and @xmath52 be a reducible set of  @xmath0 .",
    "without loss of generality we may assume by lemma  lem : normal.path.existence that @xmath63 is a normal path .",
    "assume that @xmath312 and @xmath313 .",
    "then there exist two consecutive vertices @xmath95 in the vertex ordering @xmath82 ( where @xmath96 ) such that either @xmath314 and @xmath315 , or @xmath316 and @xmath317 . in both cases we will show that we can augment the path @xmath63 by adding vertex @xmath318 or @xmath319 , respectively , which contradicts our maximality assumption on @xmath63 .",
    "since , by definition  [ def : reducible.set ] , @xmath94 $ ] induces a connected proper interval representation of  @xmath51 $ ] , it follows by observation  [ obs : consecutive.joined.by.edge ] that @xmath320 .",
    "first suppose that @xmath314 and @xmath315 .",
    "let @xmath321 .",
    "notice first that , if @xmath238 , then the path @xmath322 is a path of  @xmath0 with greater weight than @xmath63 , which is a contradiction to the maximality assumption on @xmath63 .",
    "thus , @xmath241 . let @xmath323 be the first vertex of  @xmath290 , i.e. ,  @xmath324 .",
    "we show that @xmath325 .",
    "assume to the contrary that @xmath326 .",
    "then @xmath327 by lemma  [ lem : turning.point ] .",
    "this is a contradiction , since @xmath328 and @xmath52 is a reducible set ( cf .  definition  [ def : reducible.set ] ) .",
    "therefore @xmath325 .",
    "then either @xmath329 or @xmath330 .",
    "now we show that @xmath331 . if @xmath329 , then lemma  [ lem : ordering.edges ] implies that @xmath331 , since @xmath332 .",
    "if @xmath330 then again lemma  lem : ordering.edges implies that @xmath331 since @xmath333 .",
    "thus , since @xmath331 , it follows that there exists the path @xmath334 which has greater weight than @xmath63 , which is a contradiction to the maximality assumption on @xmath63",
    ".    now suppose that @xmath316 and @xmath317 .",
    "let then @xmath335 .",
    "notice that , if @xmath336 , then the path @xmath337 is a path of  @xmath0 with greater weight than @xmath63 , which is a contradiction .",
    "thus @xmath235 .",
    "let @xmath338 be the last vertex of  @xmath339 , i.e. ,  @xmath340 .",
    "we show that @xmath341 .",
    "first let @xmath342",
    ". then @xmath343 by lemma  [ lem : turning.point ] , and thus @xmath344 . therefore , since @xmath320",
    ", it follows that @xmath341 in the case where @xmath345 .",
    "let now @xmath346 .",
    "suppose that @xmath347 .",
    "note that @xmath348 , since @xmath96 and @xmath320 .",
    "furthermore , since @xmath52 is a reducible set , @xmath94 $ ] induces a proper interval representation of  @xmath51 $ ] by definition  def : reducible.set .",
    "then , since @xmath96 and @xmath349 are consecutive in  @xmath82 , observation  obs : order.in.uirepresentation implies that @xmath350 .",
    "that is , @xmath351 .",
    "hence , since @xmath352 and @xmath347 , it follows that @xmath353 .",
    "finally @xmath354 , since @xmath346 by assumption , and thus @xmath355 .",
    "this is a contradiction since @xmath328 and @xmath303 is a reducible set ( cf .  definition  [ def : reducible.set ] ) .",
    "therefore , @xmath356 in the case where @xmath346 .",
    "that is , we always have @xmath356",
    ". therefore there exists the path @xmath357 which has greater weight than @xmath63 , which is a contradiction to the maximality assumption on @xmath63 .",
    "[ lem : consecutive.vertices ] let @xmath0 be a weighted interval graph with weight function @xmath41 , and @xmath52 be a reducible set in  @xmath0 .",
    "let also @xmath63 be a path of maximum weight in  @xmath0 and let @xmath358 .",
    "then there exists a path @xmath192 of  @xmath0 such that @xmath359 and the vertices of  @xmath52 appear consecutively in  @xmath192 .",
    "let @xmath63 be a path of maximum weight of  @xmath0 such that @xmath310 .",
    "denote @xmath360 , where @xmath361 . without loss of generality we may assume by lemma  [ lem : normal.path.existence ] that @xmath63 is normal . since @xmath94 $ ] induces a proper interval representation of  @xmath51 $ ] ( cf .",
    "definition  [ def : reducible.set ] ) lemma  lem : propers.consecutive.in.path implies that also @xmath362 , i.e. ,  the vertices of  @xmath52 appear in the same order both in the vertex ordering @xmath82 and in the path @xmath63 .",
    "furthermore , observation  [ obs : consecutive.joined.by.edge ] implies that @xmath363 for every @xmath364 $ ] .",
    "let @xmath365 , where @xmath366 .",
    "\\label{eq : eq.empty.intersection}\\]]for every @xmath364 $ ] , we denote @xmath367    let @xmath364 $ ] and suppose that @xmath368 . if @xmath369 then @xmath370 , which is a contradiction . therefore @xmath371 .",
    "that is , @xmath372 is the first vertex of  @xmath373 , i.e. ,  the successor of  @xmath374 in  @xmath63 .",
    "then , since we assumed that @xmath368 , it follows by lemma  lem : turning.point that @xmath375",
    ". thus @xmath376 , since @xmath377 and @xmath52 is a reducible set ( cf .  definition  def : reducible.set ) .",
    "this is a contradiction to eq .",
    "( eq : eq.empty.intersection ) .",
    "therefore @xmath378 , for every @xmath364 $ ] .",
    "recall that @xmath94 $ ] induces a proper interval representation of  @xmath51 $ ] and that @xmath379 .",
    "thus @xmath380 and @xmath381 , i.e. ,  @xmath382 $ ] .",
    "now let @xmath383 $ ] .",
    "since @xmath363 and @xmath378 , lemma  [ lem : endiamesa ] implies that @xmath384 for every @xmath385 .",
    "therefore @xmath386 , for every @xmath385 , where @xmath364 $ ] .",
    "suppose that there exists a vertex @xmath385 such that @xmath387 .",
    "then , since @xmath388 , it follows that @xmath389 .",
    "thus @xmath390 , since @xmath52 is a reducible set by assumption ( cf .  definition  [ def : reducible.set ] ) .",
    "this is a contradiction to eq .",
    "( eq : eq.empty.intersection ) .",
    "thus @xmath391 for every @xmath385 , where @xmath364 $ ] .",
    "since also @xmath392 as we proved above , it follows that @xmath393 for every @xmath385 , where @xmath364 $ ] .",
    "thus @xmath394 for every @xmath395 , where @xmath364 $ ] .",
    "therefore @xmath396 is a path of  @xmath0 , where @xmath397 and the vertices of  @xmath52 appear consecutively in  @xmath192 .",
    "this completes the proof of the lemma .",
    "we now present two auxiliary technical lemmas that will be used to prove the correctness of reduction rule  [ data - reduction-1-redrule ] in theorem  first - data - reduction - thm .",
    "[ lem - invariant - reducible]let @xmath0 be an interval graph and @xmath75 be an interval representation of  @xmath0 .",
    "let also @xmath398 be two reducible sets of  @xmath0 such that @xmath399 .",
    "let @xmath400 be the graph obtained from @xmath0 by replacing @xmath94 $ ] by @xmath105 .",
    "then @xmath401 remains a reducible set of  @xmath402 .",
    "let @xmath42 be the vertex of  @xmath403 , i.e. ,  @xmath404 .",
    "denote by @xmath145 the interval representation obtained from @xmath75 after replacing @xmath94 $ ] by @xmath105 . first note that @xmath405=\\mathcal{i}[s^{\\prime } ] $ ] , and thus @xmath405 $ ] induces a connected proper interval representation as @xmath401 is a reducible set by assumption .",
    "this proves condition  1 of definition  def : reducible.set .",
    "let now @xmath406 such that @xmath407 .",
    "assume that @xmath408 .",
    "if @xmath409 , then @xmath410 and thus @xmath411 , since @xmath401 is a reducible set of @xmath0 .",
    "if @xmath412 , then @xmath413 .",
    "that is , for every @xmath414 we have @xmath415 , and thus also @xmath416 , since @xmath401 is a reducible set .",
    "this is a contradiction , since @xmath399 .",
    "therefore , for every @xmath406 such that @xmath407 , we have that @xmath411 .",
    "this proves condition  2 of definition  def : reducible.set and completes the proof of the lemma .",
    "[ lem : equal - weight - first - replacement]let @xmath417 be a positive integer .",
    "let @xmath0 be a weighted interval graph , @xmath41 , @xmath75 be an interval representation of  @xmath0 , and @xmath52 be a reducible set in  @xmath0 .",
    "let also @xmath400 be the graph obtained from @xmath0 by replacing @xmath94 $ ] by an interval @xmath404 where @xmath418 .",
    "then the maximum weight of a path in  @xmath0 is @xmath417 if and only if the maximum weight of a path in  @xmath400 is @xmath417 .",
    "first assume that the maximum weight of a path @xmath63 in  @xmath0 is @xmath417 .",
    "without loss of generality , from lemma  [ lem : normal.path.existence ] , we may also assume that @xmath63 is normal .",
    "furthermore , either @xmath310 or @xmath311 by lemma  [ full.component.or.none ] . notice that if @xmath311 , then @xmath63 is also a path of  @xmath400 .",
    "suppose that @xmath310 .",
    "then from lemma  lem : consecutive.vertices , we can obtain a path @xmath419 such that @xmath420 and the vertices of  @xmath52 appear consecutively in  @xmath419 .",
    "notice then that by replacing the subpath of  @xmath419 consisting of the vertices of  @xmath52 by the single vertex @xmath42 , we obtain a path @xmath421 of  @xmath400 such that @xmath422 and @xmath423 .",
    "since @xmath418 , we obtain that @xmath424 .",
    "thus , @xmath400 has a path @xmath192 of weight at least @xmath417 .",
    "now assume that the maximum weight of a path @xmath192 in  @xmath400 is @xmath417 .",
    "if @xmath425 , then @xmath426 is also a path of  @xmath0 .",
    "suppose that @xmath427 .",
    "let @xmath428 . our aim is to show that @xmath429 and @xmath430 .",
    "suppose that @xmath431 .",
    "then lemma  [ lem : turning.point ] implies that @xmath432 , and thus @xmath433 .",
    "this is a contradiction , since @xmath434 .",
    "thus @xmath435 , i.e. ,  @xmath436 .",
    "since @xmath437 , it follows that @xmath438 .",
    "therefore @xmath439 , and thus @xmath440 .",
    "it remains to show that @xmath430 .",
    "first let @xmath102",
    ". then @xmath240 by lemma  lem : turning.point . furthermore , since @xmath441",
    ", it follows that @xmath442 , and thus @xmath443 .",
    "let now @xmath256 , i.e. ,  @xmath444 . then , since @xmath445 , it follows that @xmath446 . if @xmath447 , then @xmath433 , which is a contradiction since @xmath406 .",
    "thus @xmath308 . therefore , since @xmath448",
    ", it follows that @xmath449 , i.e. ,  @xmath450 .",
    "thus , @xmath451 .",
    "this implies that we may obtain a path @xmath63 of  @xmath0 by replacing the vertex @xmath42 in  @xmath192 by the path @xmath452 . as before , since @xmath418 , the weight of  @xmath63 is equal to the weight of  @xmath192 .",
    "hence , @xmath0 has a path of weight at least @xmath417 .    in the next definition",
    "we reduce the interval graph @xmath0 to the _ weighted _ interval graph @xmath300 which has fewer vertices than @xmath0 .",
    "then , as we prove in theorem  [ first - data - reduction - thm ] , the longest paths of  @xmath0 correspond to the maximum - weight paths of @xmath300 .    [ data - reduction-1-redrule]let @xmath44",
    "be an interval graph , @xmath75 be an interval representation of  @xmath0 , and @xmath29 be a proper interval deletion set of  @xmath0 .",
    "let @xmath453 be a set of vertex disjoint reducible sets of  @xmath0 , where @xmath454 , for every @xmath455 .",
    "the _ weighted interval graph _",
    "@xmath456 is induced by the _ weighted interval representation _ @xmath457 , which is derived from @xmath75 as follows :    * for every @xmath455 , replace in  @xmath75 the intervals @xmath458 with the single interval @xmath459 which has weight @xmath304 ; all other intervals receive weight @xmath460 .    in the next theorem",
    "we prove the correctness of reduction rule  data - reduction-1-redrule .",
    "[ first - data - reduction - thm]let @xmath417 be a positive integer .",
    "let @xmath0 be an interval graph and @xmath300 be the weighted interval graph derived by reduction rule  [ data - reduction-1-redrule ] .",
    "then the longest path in @xmath0 has @xmath417 vertices if and only if the maximum weight of a path in  @xmath300 is @xmath417 .",
    "the construction of the graph @xmath300 from @xmath0 in reduction rule  data - reduction-1-redrule can be done sequentially , replacing each time the intervals of a set @xmath455 with one interval of the appropriate weight . after making this replacement for such a set @xmath455 ,",
    "the maximum weight of a path in the resulting graph is by lemma  lem : equal - weight - first - replacement equal to the maximum weight of a path in the graph before the replacement of  @xmath52 .",
    "furthermore , the vertex set of every other set @xmath461 remains reducible in the resulting graph by lemma  [ lem - invariant - reducible ] .",
    "therefore we can iteratively replace all sets of  @xmath453 , resulting eventually in the weighted graph  @xmath300 , in which the maximum weight of a path is equal to the maximum number of vertices in a path in the original graph @xmath0 .    in the next lemma",
    "we prove that the weighted interval graph @xmath300 , which is obtained from an interval graph @xmath0 by applying reduction rule  data - reduction-1-redrule to it , has some useful properties .",
    "these properties will be exploited in section  [ special - interval - sec ] ( cf .",
    "corollary  [ first - reduction - g - diesi - properties - cor ] in section  special - interval - sec ) as they are crucial for deriving a _ special weighted interval graph _",
    "( cf .  definition  [ special - interval - def ] in section  [ special - interval - sec ] ) .",
    "[ lem : first : data : reduction ] let @xmath0 be an interval graph , @xmath29 be a proper interval deletion set of  @xmath0 , and @xmath453 be a set of vertex - disjoint reducible sets of  @xmath0 , where @xmath454 , for every @xmath455 .",
    "suppose that @xmath462 for every two distinct sets @xmath463 .",
    "furthermore , let @xmath300 be the weighted interval graph obtained from reduction rule  [ data - reduction-1-redrule ] .",
    "then @xmath29 is a proper interval deletion set of  @xmath300 .",
    "furthermore @xmath464 can be partitioned into two sets @xmath465 and @xmath466 , where @xmath467 and :    1 .",
    "@xmath465 is an independent set of  @xmath300 , and 2 .   for every @xmath468 and every @xmath469 , we have @xmath76 .",
    "define @xmath467 and @xmath470 .",
    "note that the sets @xmath465 and @xmath466 form a partition of the set @xmath464 .",
    "first we prove that @xmath465 is an independent set .",
    "note by reduction rule  [ data - reduction-1-redrule ] that every vertex @xmath471 corresponds to a different set @xmath472 , which corresponds to the interval @xmath473 in the interval representation @xmath457 of the graph @xmath300 .",
    "therefore , since @xmath462 for every two distinct sets @xmath474 , it follows that @xmath475 for every two distinct vertices @xmath476 .",
    "that is , @xmath465 induces an independent set in  @xmath300 .",
    "second we prove that for every @xmath468 and every @xmath477 , we have @xmath76 .",
    "suppose otherwise that there exist @xmath468 and @xmath469 such that @xmath240 .",
    "then , since @xmath465 is an independent set , it follows that @xmath478 , i.e. ,  @xmath479 . recall by the construction that @xmath480 , for some reducible set @xmath52 in  @xmath0 .",
    "thus , since @xmath481 , it follows by definition  [ def : reducible.set ] that @xmath306 .",
    "this is a contradiction since by construction @xmath482 .",
    "therefore , for every @xmath468 and every @xmath469 , we have @xmath76 .",
    "now we prove that @xmath29 is a proper interval deletion set of  @xmath300 .",
    "suppose otherwise that @xmath483 is not a proper interval graph .",
    "then @xmath483 contains an induced @xmath107  @xcite .",
    "if this @xmath107 contains no vertex of  @xmath465 , then this @xmath107 is also contained as an induced subgraph of  @xmath30 .",
    "this is a contradiction , since @xmath29 is a proper interval deletion set of  @xmath0 by assumption .",
    "thus this @xmath107 contains at least one vertex of  @xmath465 .",
    "let @xmath43 denote the vertex of degree @xmath484 in this @xmath107 .",
    "suppose that @xmath468 .",
    "then , for at least one vertex @xmath42 of the other three vertices of this @xmath107 we have that @xmath485 , which is a contradiction as we proved above .",
    "suppose that @xmath486 , i.e. ,  @xmath487 .",
    "denote the leaves of the @xmath107 by @xmath488 .",
    "let @xmath489 $ ] .",
    "if @xmath490 , then @xmath491 . otherwise , if @xmath492 , then there exists a reducible set @xmath493 in  @xmath0 such that @xmath494",
    "furthermore , since @xmath487 and @xmath495 , there exists at least one vertex @xmath496 where @xmath497 . for every @xmath489",
    "$ ] , define@xmath498observe that @xmath499 belong to the original graph @xmath0 , i.e. ,  @xmath500 .",
    "since @xmath501 for every @xmath502 and @xmath503 , @xmath489 $ ] it follows that @xmath504 , for every @xmath502 . therefore , @xmath505 is an independent set in  @xmath30 .",
    "moreover @xmath506 , for every @xmath489 $ ] .",
    "thus , @xmath507 induces a @xmath107 in  @xmath30 .",
    "this is a contradiction , since @xmath29 is a proper interval deletion set of  @xmath0 by assumption .",
    "therefore @xmath29 is a proper interval deletion set of  @xmath300 .      here",
    "we present our second data reduction , which is applied to an arbitrary weighted interval graph @xmath0 with weights on its vertices ( cf .",
    "reduction rule  [ data - reduction-2-redrule ] ) .",
    "as we prove in theorem  second - data - reduction - thm , the maximum weight of a path in the resulting weighted interval graph @xmath33 is the same as the maximum weight of a path in  @xmath0 .",
    "we first introduce the notion of a _ weakly reducible _ set of vertices and some related properties , which are needed for our reduction rule  [ data - reduction-2-redrule ] .",
    "[ def : weakly.reducible.set ] let @xmath0 be a ( weighted ) interval graph and @xmath75 be an interval representation of  @xmath0 .",
    "a set @xmath93 is _ weakly reducible _ if it satisfies the following conditions :    1 .",
    "@xmath94 $ ] induces a connected proper interval representation of @xmath51 $ ] and 2 .   for every @xmath86 and every @xmath306 , if @xmath141 then @xmath508 .",
    "note here that condition  2 of definition  [ def : weakly.reducible.set ] also applies to the case where @xmath412 .",
    "therefore @xmath509 for every @xmath510 , i.e. ,  @xmath52 induces a clique , as the next observation states .",
    "[ obs : weakly.reducible.clique]obs : common.intersection.weakly.reducible let @xmath0 be a ( weighted ) interval graph , @xmath75 be an interval representation of  @xmath0 and @xmath52 be a weakly reducible set in  @xmath0 .",
    "then @xmath51 $ ] is a clique .",
    "furthermore @xmath511\\subseteq i_{u}}$ ] , for every  @xmath512 .",
    "the intuition behind weakly reducible sets is as follows . for every weakly reducible set  @xmath52 ,",
    "a longest path  @xmath63 contains either all vertices of @xmath52 or none of them ( cf .",
    "lemma  [ lem : full.weakly.reducible.or.none ] ) .",
    "furthermore let @xmath29 be a given proper interval deletion set of @xmath0 .",
    "then , in a certain path @xmath63 of maximum weight which contains the whole set @xmath52 , the appearance of the vertices of @xmath52 in @xmath63 is _ interrupted at most _",
    "@xmath513 times by vertices outside @xmath52 .",
    "that is , such a path  @xmath63 has at most @xmath514 vertex - maximal subpaths with vertices from @xmath52 ( cf .",
    "lemma  [ lem : weakly.consecutive.vertices ] ) .",
    "thus we can reduce the number of vertices in a maximum - weight normal path  @xmath63 ( without changing its total weight ) by replacing all vertices of  @xmath52 with  @xmath515 vertices , cf .",
    "the reduction rule  [ data - reduction-2-redrule ] ; each of these new vertices has the same weight and their total weight sums up to  @xmath516 .",
    "[ lem : full.weakly.reducible.or.none ] let @xmath0 be a weighted interval graph with weight function @xmath41 and let @xmath52 be a weakly reducible set in  @xmath0 .",
    "let also @xmath63 be a path of maximum weight in  @xmath0 .",
    "then either @xmath310 or @xmath311 .",
    "let @xmath63 be a path of  @xmath0 of maximum weight and @xmath52 be a weakly reducible set in  @xmath0 . without loss of generality we also assume that @xmath63 is a normal path ( lemma  [ lem : normal.path.existence ] ) .",
    "suppose towards a contradiction that @xmath517 and @xmath313 .",
    "then there exist two consecutive vertices @xmath95 in the vertex ordering @xmath82 ( where @xmath96 ) such that either @xmath314 and @xmath315 , or @xmath316 and @xmath317 . in both cases we will show that we can augment the path @xmath63 by adding vertex @xmath318 or @xmath319 , respectively , which contradicts our maximality assumption on @xmath63 . from observation  [ obs : weakly.reducible.clique ]",
    ", @xmath52 induces a clique in  @xmath0 .",
    "hence , @xmath320 .",
    "first suppose that @xmath314 and @xmath315 .",
    "let @xmath321 .",
    "notice first that , if @xmath238 , then the path @xmath322 is a path of  @xmath0 with greater weight than @xmath63 , which is a contradiction to the maximality assumption on @xmath63 .",
    "thus , @xmath241 . let @xmath323 be the first vertex of  @xmath290 , i.e. ,  @xmath324 .",
    "we prove that @xmath331 .",
    "for this , notice first that either @xmath326 or @xmath325 .",
    "if @xmath326 , then @xmath518 by lemma  [ lem : turning.point ] .",
    "since @xmath519 are vertices of the weakly reducible set @xmath52 and @xmath327 then @xmath331 ( definition  [ def : weakly.reducible.set ] ) . if @xmath325 , then either @xmath329 or @xmath330 .",
    "if @xmath329 , then lemma  [ lem : ordering.edges ] implies that @xmath331 since @xmath332 . if @xmath330 , then again lemma  [ lem : ordering.edges ] implies that @xmath331 , since @xmath520 . this completes the argument that @xmath331 . since @xmath521",
    ", it follows that there exists the path @xmath522 which has greater weight than @xmath63 , which is a contradiction to the maximality assumption on @xmath63 .",
    "now suppose that @xmath316 and @xmath317 .",
    "let then @xmath335 .",
    "notice that , if @xmath336 , then the path @xmath337 is a path of  @xmath0 with greater weight than @xmath63 , which is a contradiction .",
    "thus @xmath235 .",
    "let @xmath338 be the last vertex of  @xmath339 , i.e. ,  @xmath340 .",
    "we show that @xmath341 .",
    "first let @xmath342",
    ". then @xmath343 by lemma  [ lem : turning.point ] , and thus @xmath344 .",
    "therefore , since @xmath320 , it follows that @xmath341 in the case where @xmath345 .",
    "now let @xmath346 .",
    "suppose that @xmath347 .",
    "note that @xmath348 since @xmath96 and @xmath320 .",
    "furthermore , since @xmath52 is a weakly reducible set , @xmath94 $ ] induces a proper interval representation of  @xmath51 $ ] by definition  def : weakly.reducible.set .",
    "then , since @xmath96 and @xmath95 are consecutive in  @xmath82 , observation  obs : order.in.uirepresentation implies that @xmath350 .",
    "that is , @xmath351 .",
    "hence , since @xmath352 and @xmath347 , it follows that @xmath353 .",
    "finally @xmath354 , since @xmath346 by assumption , and thus @xmath355 .",
    "then , since @xmath519 are vertices of the weakly reducible set @xmath52 and @xmath355 , it follows by definition  [ def : weakly.reducible.set ] that @xmath341 , a contradiction .",
    "therefore @xmath341 in the case where @xmath523 . that is , always @xmath356 . hence , there exists the path @xmath334 which has greater weight than  @xmath63 , which is a contradiction to the maximality assumption on  @xmath63 .",
    "we are now ready to present our second data reduction . as we prove in theorem  [ second - data - reduction - thm ]",
    ", this data reduction maintains the maximum weight of a path .",
    "[ data - reduction-2-redrule]let @xmath0 be a weighted interval graph with weight function @xmath524 and @xmath75 be an interval representation of  @xmath0 .",
    "let @xmath29 be a proper interval deletion set of  @xmath0 .",
    "finally , let @xmath525 be a family of pairwise disjoint weakly reducible sets , where @xmath526 for every @xmath527}$ ] .",
    "we recursively define the graphs @xmath528 with the interval representations @xmath529 as follows :    * @xmath530 and @xmath531 , * for @xmath532 ,  @xmath533 is obtained by replacing in  @xmath534 the intervals @xmath535 with @xmath536 copies of the interval @xmath537 , each having equal weight @xmath538 ; all other intervals remain unchanged , and * finally @xmath539 and @xmath540 .",
    "note that in the construction of the interval representation @xmath541 by reduction rule  [ data - reduction-2-redrule ] , where @xmath542 copies of the interval @xmath537 such that all endpoints remain distinct in @xmath533 , and such that these @xmath536 newly introduced intervals induce a proper interval representation in @xmath533 .",
    "next we prove in lemma  [ lem : weakly.consecutive.vertices ] that , for every weakly reducible set @xmath52 , every maximum - weight path @xmath63 which contains the whole set @xmath52 can be rewritten as a path @xmath192 , where the appearance of the vertices of @xmath52 in @xmath63 is _ interrupted at most _",
    "@xmath543 times by vertices outside @xmath52 .",
    "that is , such a path  @xmath192 has at most @xmath544 vertex - maximal subpaths with vertices from @xmath52 .",
    "before we prove lemma  [ lem : weakly.consecutive.vertices ] , we first provide the following auxiliary lemma .    [",
    "lem : invariant.weakly.reducible]let @xmath0 be an interval graph and @xmath75 be an interval representation of  @xmath0 .",
    "let also @xmath545 such that @xmath52 is a weakly reducible set of  @xmath0 and @xmath546 .",
    "let @xmath400 be the graph obtained from @xmath0 by replacing @xmath547 $ ] by @xmath548 .",
    "then @xmath303 remains a weakly reducible set of  @xmath400 .",
    "let @xmath42 be the vertex of  @xmath403 , i.e. ,  @xmath549 .",
    "denote by @xmath145 the interval representation obtained from @xmath75 after replacing @xmath547 $ ] by @xmath548 . first note that @xmath550=\\mathcal{i}[s]$ ] , and thus @xmath550 $ ] induces a connected proper interval representation",
    "as @xmath52 is a weakly reducible set by assumption .",
    "this proves condition  1 of definition  def : weakly.reducible.set .",
    "let now @xmath551 and @xmath302 .",
    "assume that @xmath552 .",
    "if @xmath553 , then @xmath554 , and thus @xmath555 in @xmath75",
    ". therefore , since @xmath52 is a weakly reducible set of @xmath0 by assumption , it follows that @xmath556 . if @xmath557 ,",
    "then @xmath558 in @xmath145 .",
    "thus , since @xmath549 , it follows that for every vertex @xmath559 , we have @xmath560 .",
    "thus , since @xmath52 is a weakly reducible set of @xmath0 , it follows that @xmath561 , i.e. ,  @xmath562 for every @xmath563 .",
    "therefore , since @xmath564 , it follows that also @xmath565 for every @xmath563 , i.e. ,  @xmath566 .",
    "this proves condition  2 of definition  def : weakly.reducible.set .",
    "the next observation follows directly by the definition of the graphs @xmath567 ( see the reduction rule  data - reduction-2-redrule ) and by lemma  [ lem : invariant.weakly.reducible ] .",
    "[ obs : weakly.reducible.invariant2 ] for every @xmath568 $ ] , the sets @xmath493 , @xmath569 , @xmath570 are weakly reducible sets of  @xmath571 .",
    "[ lem : weakly.consecutive.vertices ] let @xmath0 be a weighted interval graph with weight function @xmath41 and @xmath75 be an interval representation of  @xmath0 .",
    "let @xmath29 be a proper interval deletion set of @xmath0 and @xmath525 be a family of pairwise disjoint weakly reducible sets of  @xmath0 such that @xmath572 , @xmath573 $ ] .",
    "also , let @xmath573 $ ] and @xmath571 be one of the graphs obtained by reduction rule  [ data - reduction-2-redrule ] .",
    "finally , let @xmath63 be a path of maximum weight in  @xmath571 and let @xmath574 .",
    "then there exists a path @xmath192 in  @xmath571 on the same vertices as @xmath63 , which has at most @xmath536 vertex - maximal subpaths consisting only of vertices from @xmath493 .",
    "let @xmath63 be a path of maximum weight in  @xmath571 such that @xmath575 .",
    "denote @xmath576 , where @xmath577 . without loss of generality we may assume by lemma  [ lem : normal.path.existence ] that @xmath63 is normal .",
    "observation  [ obs : weakly.reducible.invariant2 ] yields that @xmath493 is a weakly reducible set of  @xmath571 .",
    "thus , since @xmath578 $ ] induces a proper interval representation of  @xmath579 $ ] ( cf .",
    "definition  [ def : weakly.reducible.set ] ) , lemma  lem : propers.consecutive.in.path implies that @xmath580 , i.e. ,  the vertices of  @xmath493 appear in the same order both in the vertex ordering @xmath82 and in the path @xmath63 . furthermore , observation  [ obs : weakly.reducible.clique ] implies that @xmath581 , for every @xmath582 $ ] .",
    "let @xmath583 .",
    "for every @xmath582 $ ] , we denote @xmath584    let @xmath585\\ } , \\\\",
    "z_{2 } & = & \\{z_{w}:~u_{w}<_{\\sigma } z_{w},w\\in \\lbrack |s_{i}|-1]\\}.\\end{aligned}\\]]note that , as @xmath586 , for every @xmath582 $ ] it follows that @xmath587 .",
    "in the first part of the proof we show that @xmath588 .",
    "first we show that for every @xmath589 , @xmath590 .",
    "let @xmath591 . then from lemma  [ lem : turning.point ] , @xmath592 .",
    "therefore , since @xmath593 is a vertex of the weakly reducible set of  @xmath493 in  @xmath571 , it follows by definition  [ def : weakly.reducible.set ] that @xmath594 in the graph  @xmath571 .",
    "thus @xmath590 for every @xmath589 .",
    "we now prove that @xmath595 is an independent set . towards a contradiction",
    "we assume that there exist @xmath596 with @xmath597 and @xmath598 .",
    "then , since @xmath599 and @xmath600 is the successor of  @xmath593 in the normal path @xmath63 , it follows that @xmath601 , i.e. ,  @xmath600 and @xmath602 appear in the same order in the vertex ordering @xmath82 and in the path @xmath63 .",
    "let @xmath43 be the successor of  @xmath600 in  @xmath63 .",
    "then since @xmath603 , lemma  lem : not.turning.point implies that @xmath604 .",
    "furthermore , as @xmath601 , from lemma  [ lem : endiamesa ] we obtain that @xmath605 , for every @xmath606 such that @xmath607 . since @xmath608 is the predecessor of  @xmath602 in  @xmath63 , it follows that @xmath609 .",
    "therefore @xmath610 , a contradiction as @xmath611 .",
    "therefore @xmath595 is an independent set .",
    "assume now ( towards a contradiction ) that @xmath612",
    ". then @xmath613 .",
    "hence , there exist at least 3 vertices @xmath614 .",
    "let @xmath615 .",
    "note that @xmath616 , since @xmath572 . then @xmath617 .",
    "moreover , recall that @xmath618 , for every @xmath589 .",
    "thus @xmath619 .",
    "recall also that @xmath595 is an independent set and thus the vertices @xmath620 form an independent set in  @xmath621 .",
    "thus , @xmath622 induce a @xmath107 in  @xmath621 .",
    "notice that by construction of  @xmath571 ( cf .",
    "reduction rule  data - reduction-2-redrule ) each one of the vertices @xmath620 is either a vertex of  @xmath0 , or it appears in  @xmath571 as the replacement of some weakly reducible set @xmath52 . if @xmath623 , then denote by @xmath401 the weakly reducible set corresponding to vertex @xmath624 .",
    "otherwise , if @xmath625 , we define @xmath626 . similarly , if @xmath627 ( resp .",
    "if @xmath628 ) then denote by @xmath629 ( resp .  by @xmath630 )",
    "the weakly reducible set corresponding to vertex @xmath631 ( resp .",
    "@xmath632 ) . otherwise , if @xmath633 ( resp .",
    "if @xmath634 ) , we define @xmath635 ( resp .",
    "@xmath636 ) . since @xmath637 , observe that there always exists at least one vertex @xmath638 such that @xmath639 , and thus @xmath437 .",
    "similarly , since @xmath640 , there always exist vertices @xmath641 and @xmath642 such that @xmath643 and @xmath644 , and thus @xmath645 .",
    "note that @xmath646 .",
    "furthermore , by the definition of  @xmath647 , it follows that @xmath648 , @xmath649 , and @xmath650 .",
    "therefore , since @xmath651 form an independent set , the vertices @xmath647 also form an independent set . furthermore , as @xmath652 , it follows that @xmath653 induce a @xmath107 in  @xmath30 , which is a contradiction to the assumption that @xmath29 is a proper interval deletion set of  @xmath0 .",
    "thus @xmath588 .",
    "this completes the first part of our proof .",
    "let now @xmath654 be the vertex of  @xmath655 that appears first in  @xmath63 .",
    "in the second part of the proof we show that the set @xmath656 induces a clique in  @xmath571 .",
    "note first that , since @xmath657 and @xmath658 , lemma  lem : endiamesa implies that @xmath659 , for every @xmath660 such that @xmath661 .",
    "therefore , since @xmath658 , it follows by lemma  [ lem : ordering.edges ] that @xmath662 for every @xmath663 such that @xmath659 .",
    "we now prove that @xmath664 , for every @xmath660 such that @xmath659 .",
    "suppose otherwise that there exists such an @xmath665 where @xmath666 .",
    "note that @xmath667 , since @xmath668 and @xmath658 .",
    "furthermore , since @xmath493 is a weakly reducible set , @xmath578 $ ] induces a proper interval representation of  @xmath579 $ ] by definition  [ def : weakly.reducible.set ] .",
    "then , since @xmath668 , it follows by observation  obs : order.in.uirepresentation that @xmath669 .",
    "that is , @xmath670 .",
    "hence , since @xmath671 and @xmath666 by our assumption , it follows that @xmath672 , i.e. ,  @xmath673 .",
    "finally @xmath674 from the choice of  @xmath665 , and thus @xmath675 .",
    "therefore , since @xmath493 is a weakly reducible set , @xmath676 for every @xmath615 by definition  def : weakly.reducible.set .",
    "this is a contradiction to our assumption that @xmath666 .",
    "therefore @xmath677 for every @xmath660 such that @xmath661 .",
    "we finally show that the set @xmath656 induces a clique in  @xmath571 .",
    "since @xmath664 for every vertex @xmath665 in this set , we obtain that @xmath678 .",
    "hence , the set @xmath656 induces a clique in  @xmath571 , as all such intervals @xmath679 contain the point @xmath680 .",
    "this completes the second part of our proof .    in the third part of our proof",
    "we show that there exists a path @xmath192 which has at most @xmath681 vertex - maximal subpaths that consist only of vertices from @xmath493 .",
    "define @xmath682 .",
    "notice that @xmath397 . from the second part of our proof the set",
    "@xmath683 induces a clique .",
    "thus , @xmath192 is a path of  @xmath571 with @xmath397 . from the choice of  @xmath684 , for every @xmath685 $ ] , if @xmath686 , then @xmath687 . since @xmath588 , from the first part of our proof , there exist at most @xmath688 paths  @xmath689 , @xmath690 $ ] , that are not empty .",
    "thus , the subpath @xmath691 contains at most @xmath688 vertex - maximal subpaths consisting only of vertices of  @xmath493 .",
    "furthermore , the subpath @xmath692 of  @xmath192 clearly contains two vertex - maximal subpaths consisting only of vertices of  @xmath493 , namely the subpaths @xmath693 and @xmath694 . since , @xmath695",
    ", it follows that @xmath696 has at most @xmath681 vertex - maximal subpaths that consist only of vertices from @xmath493 .",
    "moreover , @xmath192 has clearly at most @xmath697 such vertex - maximal subpaths from vertices of  @xmath493 .",
    "this completes the proof of the lemma .",
    "we now present the next auxiliary technical lemma that will be used to prove the correctness of reduction rule  [ data - reduction-2-redrule ] in theorem  [ second - data - reduction - thm ] .",
    "[ lem : equal.weight.second.replacement.prelim]let @xmath417 and @xmath3 be positive integers .",
    "let @xmath0 be a weighted interval graph with weight function @xmath41 and @xmath75 be an interval representation of  @xmath0 .",
    "also , let @xmath52 be a weakly reducible set of  @xmath0 .",
    "finally , let @xmath400 be the graph obtained from @xmath0 by replacing @xmath94 $ ] with @xmath698 copies of the interval @xmath699 , each having weight @xmath700 .",
    "if the maximum weight of a path in  @xmath400 is @xmath417 , then the maximum weight of a path in  @xmath0 is at least @xmath417 .",
    "denote @xmath360 , where @xmath361 .",
    "that is , @xmath701 .",
    "furthermore , since @xmath94 $ ] induces a proper interval representation , it follows by observation  obs : order.in.uirepresentation that also @xmath702 .",
    "that is , @xmath703 and @xmath704 .",
    "assume that the maximum weight of a path @xmath192 in  @xmath400 is @xmath417 .",
    "define @xmath705 and denote @xmath706 \\}$ ] .",
    "if @xmath707 , then @xmath192 is also a path in  @xmath0 .",
    "assume now that @xmath708 .",
    "then we may assume without loss of generality that @xmath709 .",
    "indeed , otherwise we can augment @xmath192 to a path of  @xmath400 with greater weight by adding the missing copies of  @xmath105 right after the last copy of  @xmath105 in  @xmath192 , which is a contradiction to the maximality assumption on @xmath192 .",
    "furthermore , by lemma  [ lem : normal.path.existence ] we may assume without loss of generality that @xmath192 is normal .",
    "let @xmath710 .",
    "denote by @xmath711 the set of all predecessors and successors of the vertices of  @xmath712 in the path @xmath192 .",
    "consider a vertex @xmath713 . since @xmath209 is a predecessor or a successor of a vertex @xmath714 in  @xmath192 , where @xmath480 , it follows that @xmath715 .",
    "assume that @xmath716 in the initial graph @xmath0 .",
    "recall that @xmath717=[\\max \\{l_{v}:~v\\in s\\},\\min \\{r_{v}:~v\\in s\\}]$ ] .",
    "therefore , since we assumed that @xmath716 , observation  obs : common.intersection.weakly.reducible implies that @xmath718=\\emptyset $ ] , and thus either @xmath719 or @xmath720 .",
    "suppose first that @xmath719 , i.e. ,  @xmath721 .",
    "let @xmath387 , i.e. ,  @xmath722 . then @xmath723 , and thus @xmath724 , since @xmath52 is a weakly reducible set ( cf .  definition  [ def : weakly.reducible.set ] ) .",
    "this is a contradiction to our assumption that @xmath716 .",
    "let @xmath725 , i.e. ,  @xmath726 . then @xmath727",
    "$ ] induces a proper interval representation .",
    "therefore , since the path @xmath192 of  @xmath400 is normal , lemma [ lem : propers.consecutive.in.path ] implies that vertex  @xmath209 appears in  @xmath192 before the first vertex @xmath188 of  @xmath712 , i.e. ,  @xmath728 .",
    "this is a contradiction to our assumption that @xmath713 .",
    "suppose now that @xmath720 , i.e. ,  @xmath729 .",
    "let @xmath730 , i.e. ,  @xmath731 . then @xmath732 , and thus @xmath724 , since @xmath52 is a weakly reducible set ( cf .  definition  [ def : weakly.reducible.set ] ) .",
    "this is a contradiction to our assumption that @xmath716 .",
    "let @xmath733 , i.e. ,  @xmath734 . then @xmath727",
    "$ ] induces a proper interval representation .",
    "therefore , since the path @xmath192 of  @xmath400 is normal , lemma  [ lem : propers.consecutive.in.path ] implies that vertex @xmath209 appears in  @xmath192 after the last vertex @xmath735 of  @xmath712 , i.e. ,  @xmath736 .",
    "this is a contradiction to our assumption that @xmath737 .    summarizing , @xmath724 in the initial graph @xmath0 , for every vertex @xmath738 which is a predecessor or a successor of a vertex of  @xmath712 in  @xmath192 .",
    "therefore @xmath739 is a path in  @xmath0 , where @xmath193 .",
    "finally , since @xmath740}w(u_{i})=\\sum_{j\\in \\left [ \\min \\{|s|,k+4\\}\\right ] } w(v_{j})$ ] , it follows that @xmath741 .",
    "thus @xmath0 has a path @xmath63 of weight at least  @xmath417 .",
    "now we are ready to prove the correctness of our reduction rule  data - reduction-2-redrule .",
    "[ second - data - reduction - thm]let @xmath417 be a positive integer .",
    "let @xmath0 be a weighted interval graph and @xmath33 be the weighted interval graph obtained by reduction rule  [ data - reduction-2-redrule ] .",
    "then the maximum weight of a path in  @xmath0 is @xmath417 if and only if the maximum weight of a path in  @xmath33 is @xmath417 .",
    "first assume that the maximum weight of a path in  @xmath539 is @xmath417 .",
    "then , by iteratively applying lemma  lem : equal.weight.second.replacement.prelim it follows that the maximum weight of a path in  @xmath0 is at least @xmath417 .",
    "conversely , assume that the maximum weight of a path in  @xmath0 is @xmath417 .",
    "we show by induction on @xmath742 that the maximum weight of a path in  @xmath743 is at least @xmath417 .",
    "for @xmath744 we have @xmath530 and the argument follows by our assumption .",
    "this proves the induction basis .    for the induction step ,",
    "let @xmath745 and assume that the weight of a maximum path in  @xmath571 is at least @xmath417 .",
    "let @xmath63 be a path of maximum weight in  @xmath571 , i.e. ,  the weight of  @xmath63 is at least @xmath417 . without loss of generality , from lemma  [ lem : normal.path.existence ]",
    ", we may also assume that @xmath63 is normal .",
    "furthermore , lemma  lem : full.weakly.reducible.or.none implies that either @xmath574 or @xmath746 . notice that if @xmath746 , then @xmath63 is also a path of  @xmath743 .",
    "suppose that @xmath574 . then from lemma  [ lem : weakly.consecutive.vertices ]",
    ", we can obtain a path @xmath419 such that @xmath420 and such that @xmath419 has @xmath747 vertex - maximal subpaths consisting only of vertices of  @xmath493 .",
    "let @xmath748 be those subpaths .",
    "consider now the path @xmath192 that is obtained by replacing in the interval representation of  @xmath419 each of the subpaths @xmath749 with a copy of  @xmath750 , and by replacing the subpath @xmath751 with @xmath752 copies of  @xmath750 .",
    "note that @xmath192 is a path in the graph  @xmath743 .",
    "recall by the definition of  @xmath743 ( cf .",
    "reduction rule  [ data - reduction-2-redrule ] ) that each of the @xmath536 copies of the interval @xmath750 has weight @xmath753 .",
    "since the total weight of all these copies of  @xmath750 is equal to @xmath754 , it follows that @xmath424 .",
    "that is , the weight of the path @xmath192 of  @xmath743 is at least @xmath417 .",
    "therefore the maximum weight of a path in  @xmath743 is at least @xmath417 .",
    "this completes the induction step and the proof of the theorem .",
    "in this section we sequentially apply the two data reductions of sections  [ first - data - reduction - subsec ] and  [ second - data - reduction - subsec ] to a given interval graph  @xmath0 with a proper interval deletion set @xmath29 . to do so , we first define a specific family @xmath31 of _ reducible _ sets in  @xmath30 and we apply reduction rule  data - reduction-1-redrule to @xmath0 with respect to the family @xmath755 , resulting in the weighted interval graph  @xmath300 . then we define a specific family @xmath32 of _ weakly reducible _ sets in  @xmath483 and we apply reduction rule  [ data - reduction-2-redrule ] to @xmath300 with respect to the family @xmath32 , resulting in the weighted interval graph @xmath33 .",
    "as it turns out , the vertex sets of @xmath756 are a partition of the graph @xmath30 .",
    "the final graph @xmath33 is then given as input to our fixed - parameter algorithm of section  [ algorithm - sec ] .    we now introduce the notion of a _ special weighted interval graph _ with _ parameter _ @xmath34 . as we will prove at the end of this section , the constructed graph @xmath33 is a special weighted interval graph with parameter @xmath34 , where @xmath34 depends only on the size of  @xmath29 ( cf .",
    "theorem  [ special - weighted - interval - graph - thm ] ) .",
    "furthermore @xmath33 can be computed in @xmath757 time ( cf .",
    "theorem  second - reduction - computation - thm ) .",
    "[ special - interval - def ] let @xmath44 be a weighted interval graph , @xmath74 be an interval representation of  @xmath0 , and @xmath758 , where the vertex set @xmath125 can be partitioned into two sets @xmath465 and @xmath759 such that :    1 .",
    "@xmath465 is an independent set in  @xmath0 , 2 .   for every @xmath468 and every @xmath760 , we have @xmath76 , and 3 .   @xmath761 .",
    "then @xmath0 ( resp .",
    "@xmath75 ) is a _ special weighted interval graph _",
    "_ special interval representation _ ) with",
    "_ parameter _",
    "the partition @xmath763 is a _ special vertex partition _ of  @xmath0 .",
    "let @xmath29 be a proper interval deletion set of  @xmath0 with @xmath3 vertices @xmath764 , i.e. ,  @xmath30 is a proper interval graph .",
    "first we add two isolated dummy vertices @xmath765 to the set @xmath29 ( together with the corresponding intervals @xmath766 ) , such that @xmath767 for every vertex @xmath86 .",
    "note that @xmath768 is the interval representation of an interval graph @xmath400 , where @xmath769 and @xmath770 .",
    "for simplicity of the presentation we refer in the following to @xmath400 and @xmath145 by @xmath0 and @xmath75 , respectively .",
    "furthermore we denote @xmath771 , where @xmath772 and @xmath765 are the two dummy isolated vertices .",
    "now we define the following four sets : @xmath773furthermore , for every @xmath774 $ ] we define the following set : @xmath775    for every @xmath774 $ ] we denote @xmath776 , where @xmath777 .",
    "note that @xmath778 and @xmath779 , and thus @xmath780 for every @xmath774 $ ] .",
    "now , for every @xmath774 $ ] and @xmath781 $ ] define@xmath782and @xmath783}u_{i , j}^{\\ast } \\right ) = \\emptyset \\right\\ } .\\]]note that the set @xmath784 is partitioned by the sets @xmath785,x\\in \\lbrack p_{i}]\\}$ ] .",
    "[ u - star - star - between - consecutive - r - or - l - obs]let @xmath786 such that @xmath787 is strictly contained between two consecutive points of  @xmath788 .",
    "then @xmath789 , for some @xmath774 $ ] and @xmath781 $ ] .",
    "[ sum - pi - lem]@xmath790    first , note by eq .",
    "( [ li - eq ] ) that @xmath791 . furthermore , since @xmath792 , it follows that @xmath793 , i.e. ,  @xmath794 .",
    "therefore , @xmath795    [ lem : proper.repres ] let @xmath796 $ ] and @xmath797 $ ] .",
    "the interval representation @xmath798 $ ] of  @xmath799 $ ] is a proper interval representation .",
    "the proof is done by contradiction .",
    "assume that , for some @xmath774 $ ] and @xmath800 $ ] , @xmath801 $ ] is not a proper interval representation of  @xmath802 $ ] .",
    "that is , there exist two vertices @xmath803 such that @xmath240 . from the preprocessing of theorem",
    "[ interval - representation - preprocessing - thm ] there exist two vertices @xmath804 such that @xmath805 , where @xmath806 .",
    "first suppose that @xmath807 . then the vertices @xmath808 induce a @xmath107 in  @xmath30 , which is a contradiction to the assumption that @xmath29 is a proper interval deletion set of  @xmath0  roberts69 .",
    "now suppose that @xmath809 .",
    "since @xmath810 and @xmath811 , it follows that @xmath812 .",
    "thus @xmath813 . therefore , since we assumed that @xmath809 , it follows that @xmath814 and thus @xmath815 ( cf .  the definition of the set @xmath784 ) .",
    "this is a contradiction to the assumption that @xmath816 .",
    "finally suppose that @xmath817 . then , since @xmath818 and @xmath819 , it follows that @xmath820 .",
    "if @xmath821 , then @xmath822 , which is a contradiction . thus @xmath823 , i.e. ,  @xmath824 . therefore , since we assumed that @xmath817 , it follows that @xmath163 do not belong to the same set @xmath825 ( cf .  the definition of  @xmath825 ) , which is a contradiction to our assumption .",
    "thus , for every @xmath826}$ ] and @xmath827}$ ] , @xmath828}$ ] is a proper interval representation of  @xmath829}$ ] .",
    "for every @xmath774 $ ] and @xmath800 $ ] we denote the connected components of  @xmath830 by @xmath831 , such that @xmath832 .",
    "note that any two distinct components @xmath833 and @xmath834 are disjoint , i.e. ,  @xmath835 .",
    "furthermore we define the family @xmath31 of vertex subsets of  @xmath836 as follows:@xmath837,\\ x\\in \\lbrack p_{i}],\\ t\\in \\lbrack q(i , x)]\\}.   \\label{s-1-family - eq}\\ ] ]    [ all - components - u**-reducible - lem]every set @xmath838 is reducible .",
    "consider a set @xmath838 .",
    "then @xmath839 , for some @xmath774 $ ] , @xmath800 $ ] , and @xmath840 $ ] .",
    "we need to prove that the two conditions of definition  [ def : reducible.set ] are satisfied for the connected component @xmath833 of  @xmath841 . for condition 1 , recall that @xmath842 .",
    "thus , since the interval representation @xmath801 $ ] of  @xmath802 $ ] is proper by lemma  lem : proper.repres , the interval representation @xmath843 $ ] of  @xmath844 $ ] is a connected proper interval representation .",
    "this proves condition  1 of definition  [ def : reducible.set ] .",
    "now let @xmath86 such that @xmath845 .",
    "recall by the definition of  @xmath846 that @xmath844 $ ] is connected .",
    "therefore , since @xmath847 for every @xmath848 @xmath849 , it follows that @xmath850 , and thus also @xmath851 .",
    "that is , @xmath852 ( cf .  the definition of  @xmath784 ) .",
    "let @xmath853 , where @xmath854 . note that @xmath855 , since @xmath845 by assumption .",
    "furthermore , since @xmath843 $ ] is a proper interval representation as we proved above , observation  obs : order.in.uirepresentation implies that @xmath856 .",
    "suppose that @xmath857 .",
    "then , since @xmath858 , it follows that @xmath859 .",
    "this is a contradiction to condition  1 of definition  [ def : reducible.set ] that we proved above .",
    "thus @xmath860 .",
    "that is , @xmath861 . therefore @xmath862 ( cf .",
    "the definition of  @xmath825 ) .",
    "moreover , since @xmath845 by assumption , it follows that @xmath863 , and thus @xmath864}u_{i , j}^{\\ast } = \\emptyset $ ] ( cf .  the definition of  @xmath830 ) .",
    "it follows that @xmath865 , and thus @xmath866 .",
    "this proves condition  2 of definition  def : reducible.set .",
    "[ span - s-1-disjoint - lem]if @xmath52 and @xmath401 are two distinct elements of  @xmath31 , then @xmath462 .    towards a contradiction",
    "let @xmath52 and @xmath401 be two distinct elements of  @xmath31 .",
    "that is , @xmath839 and @xmath867 , for some @xmath868 $ ] , @xmath800 $ ] , @xmath869 $ ] , and @xmath840 $ ] , @xmath870 $ ] .",
    "assume that @xmath871 .",
    "then there exist @xmath306 and @xmath872 such that @xmath873 .",
    "first suppose that @xmath874 .",
    "without loss of generality we assume that @xmath875 .",
    "note that @xmath876 , since @xmath877 .",
    "furthermore , since by the definition of the set @xmath878 we have @xmath879 and @xmath880 , it follows that @xmath881 .",
    "similarly it follows that @xmath882",
    ". therefore , @xmath883 . furthermore , since @xmath884",
    ", it follows that @xmath885 .",
    "that is , @xmath886 , and thus @xmath887 .",
    "this is a contradiction , since @xmath888 ( cf .  the definition of  @xmath784 )",
    "therefore , @xmath889 .    now suppose that @xmath890 . without loss of generality",
    "we assume that @xmath891 .",
    "note that @xmath892 and that @xmath893}u_{i , j}^{\\ast } $ ] . therefore , since @xmath894}u_{i , j}^{\\ast } \\right ) = \\emptyset $ ] ( cf . the definition of  @xmath830 )",
    ", it follows that @xmath895 .",
    "this is a contradiction , since @xmath884 .",
    "therefore , @xmath896 .",
    "summarizing , the sets @xmath52 and @xmath401 are two different connected components of  @xmath830 .",
    "therefore , there are no vertices @xmath510 and @xmath897 such that @xmath884 , which is a contradiction to our assumption .",
    "it follows that @xmath871 , for any two distinct sets @xmath898 .",
    "note that , for every @xmath899 , the connected component @xmath833 of  @xmath830 contains no vertices of  @xmath29 , since by definition @xmath900 .",
    "therefore , since all sets of  @xmath31 are reducible ( by lemma  all - components - u**-reducible - lem ) and disjoint , we can apply reduction rule  [ data - reduction-1-redrule ] to the graph  @xmath0 with respect to the sets of  @xmath31 , by replacing in the interval representation @xmath75 the intervals @xmath458 with the interval @xmath459 with weight @xmath304 , for every @xmath838 .",
    "denote the resulting weighted graph by @xmath456 and its interval representation by @xmath457 .",
    "furthermore denote by @xmath901 the right - endpoint ordering of  @xmath457 .",
    "then , the next corollary follows immediately by theorem  [ first - data - reduction - thm ] .",
    "[ g - diesi - correctness - cor]the maximum number of vertices of a path in  @xmath172 is equal to the maximum weight of a path in  @xmath300 .",
    "define @xmath467 , i.e. ,  each vertex @xmath468 corresponds to an interval @xmath480 in the interval representation @xmath457 , where @xmath838 .",
    "recall that for every @xmath838 , we have that @xmath839 , where @xmath902 $ ] , @xmath800 $ ] , and @xmath840 $ ] .",
    "thus , in the remainder of this section we denote @xmath903,\\ x\\in \\lbrack p_{i}],\\ t\\in \\lbrack q(i , x)]\\}$ ] . furthermore , for every @xmath904 we denote for simplicity the corresponding interval in the representation @xmath457 by @xmath905",
    ". recall that @xmath906 in the graph @xmath0 , and thus @xmath907 in the graph @xmath300 . furthermore , since @xmath462 for any two distinct sets @xmath908 by lemma  [ span - s-1-disjoint - lem ] , the next corollary follows immediately by lemma  [ lem : first : data : reduction ] .",
    "[ first - reduction - g - diesi - properties - cor]the set @xmath29 remains a proper interval deletion set of the weighted interval @xmath456 .",
    "furthermore the set @xmath909 can be partitioned into the sets @xmath467 and @xmath910 , such that :    1 .",
    "@xmath465 is an independent set of  @xmath300 , and 2 .   for every @xmath904 and every @xmath911",
    ", we have @xmath912 .    in the next theorem",
    "we prove that the weighted interval graph @xmath300 and the vertex subset @xmath465 ( cf .",
    "corollary  first - reduction - g - diesi - properties - cor ) can be computed in @xmath36 time .",
    "[ first - reduction - computation - thm]let @xmath44 be an interval graph , where @xmath109 .",
    "let @xmath29 be a proper interval deletion set of  @xmath0 , where @xmath771 .",
    "then the graph @xmath456 and the independent set @xmath913 can be computed in  @xmath36 time .",
    "denote by @xmath75 the given interval representation of  @xmath0 .",
    "recall that the endpoints of the intervals in  @xmath75 are given sorted increasingly , e.g. ,  in a linked list @xmath62 .",
    "the sets @xmath914 and @xmath915 can be computed in  @xmath916 time , since they store the left and the right endpoints of the intervals of the set @xmath29 , where @xmath917 .",
    "furthermore , the set @xmath918 can be clearly computed in  @xmath36 time .",
    "the set @xmath784 and the sets @xmath878 , @xmath774 $ ] , can be efficiently computed as follows .",
    "first we visit all endpoints of the intervals in  @xmath75 ( in increasing order ) . for every endpoint @xmath919 that we visit , such that @xmath920 , where @xmath921 , we add to @xmath922 the label @xmath923 .",
    "initially , we set @xmath924 , for every @xmath774 $ ]",
    ". then we iterate for every @xmath925 . if @xmath923 then we add @xmath922 to the set @xmath878 .",
    "note that , during this computation , we can store the elements of each set @xmath878 in increasing order , using a linked list . furthermore , in the same time we add to every element @xmath922 of the set @xmath878 a pointer to the position of  @xmath922 in the linked list @xmath62 , which keeps the endpoints of the intervals in  @xmath75 in increasing order . to compute the set @xmath784",
    "we iterate for every @xmath786 and we compare @xmath926 with @xmath927 .",
    "if @xmath928 then we set @xmath888 , otherwise we set @xmath929 .",
    "similarly , during this computation we can store the elements of the set @xmath784 in increasing order ( according to the order of their right endpoints in the linked list @xmath62 ) . since the endpoints in  @xmath75 are assumed to be sorted in increasing order , the computation of  @xmath784 and of all sets  @xmath878 , @xmath774 $ ] , can be done in total in  @xmath36 time .",
    "note that there are in total @xmath930 different sets @xmath825 , where @xmath774 $ ] and @xmath800 $ ] ( cf .",
    "lemma  [ sum - pi - lem ] ) .",
    "all these sets @xmath825 can be efficiently computed as follows , using the sets @xmath784 and @xmath931 , which we have already computed , as follows . for every",
    "@xmath932 $ ] we iterate over the points @xmath933 of the set  @xmath878 in increasing order . for every @xmath781 $ ] we visit sequentially in the linked list @xmath62 ( which keeps the endpoints of  @xmath75 in increasing order ) from the point @xmath934 until the point @xmath935 . for every point @xmath922 between @xmath934 and @xmath935",
    ", we check whether @xmath936 and @xmath888 , and if this is the case then we add vertex @xmath42 to the set  @xmath825 .",
    "this check on point @xmath922 can be done on @xmath177 time , e.g. ,  by checking whether @xmath928 , as we described above .",
    "thus , as we scan once through the linked list @xmath62 , the computation of all sets  @xmath937 can be done in  @xmath36 time in total . note that , during this computation we can store the elements of each of the sets @xmath825 in increasing order ( according to the order of their right endpoints in the linked list @xmath62 )",
    ".    the computation of the sets @xmath830 , where @xmath774 $ ] and @xmath800 $ ] , can be done efficiently as follows .",
    "first , we scan once through each of the @xmath916 sets @xmath938 and , for every such set , we compute its rightmost right endpoint @xmath939 in the interval representation @xmath75 , i.e. ,  @xmath940",
    ". furthermore define @xmath941 , for every @xmath774 $ ] .",
    "the computation of all such points @xmath939 can be done in  @xmath36 time in total .",
    "now , for every fixed @xmath774 $ ] , the computation of the sets @xmath942 can be done as follows .",
    "initially , set @xmath943 .",
    "we iterate for every @xmath944 ( in this order ) . for every such @xmath665 ,",
    "we first define @xmath945 .",
    "then , for every vertex @xmath946 we check whether @xmath947 , and if it is the case then we add vertex @xmath42 to the set @xmath830 . it can be easily checked that this process eventually correctly computes the sets @xmath830 ( cf .  the definition of  @xmath830 ) .",
    "since every two sets @xmath948 are disjoint , all the sets @xmath830 , where @xmath774 $ ] and @xmath800 $ ] , can be done by these computations in  @xmath36 time in total . moreover , in the same time we can store the elements of each of the sets @xmath830 in increasing order ( according to the order of their right endpoints in the linked list @xmath62 ) .",
    "let now @xmath774 $ ] and @xmath800 $ ] .",
    "the computation of the connected components @xmath949 , @xmath950 of  @xmath830 can be done efficiently as follows .",
    "we visit all vertices of  @xmath830 in increasing order . for every such vertex @xmath42",
    ", we compare its left endpoint @xmath951 with the right endpoint @xmath952 of the previous vertex @xmath261 of  @xmath953 . if @xmath885 then @xmath42 belongs to the same connected component @xmath833 where @xmath261 belongs , otherwise @xmath42 belongs to the next connected component @xmath954 .",
    "the correctness of this computation of  @xmath949 , @xmath950 follows from the fact that the interval representation @xmath801 $ ] of  @xmath802 $ ] is proper by lemma  [ lem : proper.repres ] and by observation  [ obs : consecutive.joined.by.edge ] . since we visit every vertex of each @xmath830 once , where @xmath774 $ ] and @xmath800 $ ] , the computation of all connected components @xmath833 , where @xmath774 $ ] , @xmath800 $ ] , and @xmath955 $ ] , can be done in  @xmath36 time in total .",
    "note that , in the same time we can also compute the interval @xmath956 for every such component @xmath833 , by just keeping track of the left endpoint @xmath951 ( resp .",
    "right endpoint @xmath952 ) of the leftmost vertex @xmath42 ( resp .  of the rightmost",
    "vertex  @xmath261 ) in  @xmath833 .    summarizing",
    ", we can compute in  @xmath36 time the family @xmath31that contains all vertex sets @xmath839 , where @xmath774 $ ] , @xmath800 $ ] , and @xmath840 $ ] , cf .",
    "eq .  ( s-1-family - eq )",
    ". moreover , in the same time we can also compute the intervals @xmath459 , where @xmath838 .",
    "then the interval representation @xmath457 can be computed from @xmath75 in  @xmath36 time , by replacing for every @xmath838 the intervals @xmath458 with the interval @xmath459 .",
    "note that these intervals @xmath957 are exactly the intervals of the vertices in the independent set @xmath465 of  @xmath300 .",
    "therefore , the sets @xmath913 and @xmath910 can be computed in  @xmath36 time .",
    "consider the weighted interval graph @xmath456 with the interval representation @xmath457 and the right - endpoint ordering @xmath958 that we constructed in section  [ graph - g - diesi - subsec ] .",
    "recall that , by corollary  [ first - reduction - g - diesi - properties - cor ] , @xmath959 is a proper interval deletion set of  @xmath300 and that the vertices of  @xmath960 are partitioned into the independent set @xmath961,\\ x\\in \\lbrack p_{i}],\\",
    "t\\in \\lbrack q(i , x)]\\}$ ] and the set @xmath910 . recall that @xmath907 . for every vertex @xmath904",
    ", the interval of  @xmath962 in the representation @xmath457 is denoted by @xmath963 .",
    "we define the set @xmath964 of endpoints in the representation @xmath457 as    @xmath965    note that @xmath966 , and thus lemma  sum - pi - lem implies that @xmath967 .",
    "we denote @xmath968 , where @xmath969 . for every @xmath970",
    "we define @xmath971note that @xmath972 provides a partition of  @xmath466 . as the next lemma shows",
    ", it suffices to consider in the following only the sets @xmath973 such that @xmath974 .",
    "[ lem : uii.is.empty ] for every @xmath796 $ ] , @xmath975 .",
    "let @xmath976 , for some @xmath977 .",
    "since @xmath978 , note that vertex @xmath42 exists also in the original ( unweighted ) interval graph @xmath0 .",
    "furthermore , since @xmath787 is strictly contained between two consecutive points of  @xmath964 , it is also strictly contained between two consecutive points of  @xmath979 .",
    "therefore , for some @xmath774 $ ] and @xmath800 $ ] , @xmath980 by observation  u - star - star - between - consecutive - r - or - l - obs .",
    "however , all vertices of  @xmath981 in the initial interval graph @xmath0 have been replaced by the vertex set @xmath465 in the weighted interval graph @xmath300 .",
    "this is a contradiction , since @xmath982 .",
    "thus @xmath983 .",
    "we are now ready to define the family @xmath32 of vertex subsets of @xmath466 as follows:@xmath984    [ uji - weakly - reducible - lem]every set @xmath985 is weakly reducible in the graph @xmath456 .    consider a set @xmath985 .",
    "then @xmath986 , for some @xmath987 . in the first part of the proof",
    "we show by contradiction that @xmath988 $ ] is a proper interval representation of  @xmath989 $ ] .",
    "assume otherwise that there exist two vertices @xmath990 such that @xmath141 .",
    "since the intervals for the vertices of  @xmath973 are the same in both interval representations @xmath75 and @xmath457 , it follows that @xmath141 in the representation @xmath75 of the initial ( unweighted ) interval graph @xmath0 .",
    "then , from the preprocessing of theorem  interval - representation - preprocessing - thm there exist two vertices @xmath804 such that @xmath991 , where @xmath992 in the graph @xmath0 .",
    "first suppose that @xmath807 .",
    "then the vertices @xmath993 induce a @xmath107 in  @xmath30 , which is a contradiction to the assumption that @xmath29 is a proper interval deletion set of  @xmath0  roberts69 .",
    "now suppose that @xmath809 .",
    "then @xmath994 . if @xmath995 then @xmath996 , which is a contradiction . thus @xmath997 .",
    "moreover , since @xmath294 and @xmath295 , it follows that @xmath296 .",
    "that is , @xmath998 , where @xmath999 .",
    "this is a contradiction to the assumption that both @xmath43 and @xmath42 belong to the same set @xmath973 .",
    "finally suppose that @xmath817 . then @xmath1000 .",
    "if @xmath820 then @xmath1001 , which is a contradiction . thus @xmath1002 .",
    "moreover , since @xmath1003 and @xmath1004 , it follows that @xmath821 .",
    "that is , @xmath1005 , where @xmath1006 .",
    "this is a contradiction to the assumption that both @xmath142 and @xmath42 belong to the same set @xmath973 .",
    "this proves condition  1 of definition  [ def : weakly.reducible.set ] .    in the second part of the proof",
    "we show by contradiction that for every @xmath1007 and every @xmath1008 , if @xmath141 , then @xmath1009 in the graph @xmath300 .",
    "let @xmath1007 and @xmath1010 such that @xmath141 .",
    "assume that there exists a vertex @xmath1011 such that @xmath1012 .",
    "first suppose that @xmath1013 , i.e. ,  @xmath1014 for some @xmath1015 .",
    "let @xmath1016 . then , since @xmath1012 by assumption , it follows that @xmath1017 .",
    "furthermore @xmath250 , since @xmath1018 .",
    "therefore , @xmath1019 , i.e. ,  @xmath1020 , where @xmath1015 .",
    "this is a contradiction to the assumption that both @xmath42 and @xmath261 belong to the same set @xmath1021 .",
    "let @xmath1022 . then , since @xmath1023 by assumption , it follows that @xmath1024 .",
    "furthermore @xmath1025 , since @xmath141 . therefore , @xmath1026 , i.e. ,  @xmath1027 , where @xmath1028 .",
    "this is a contradiction to the assumption that both @xmath42 and @xmath261 belong to the same set @xmath973 .",
    "now suppose that @xmath1029 . if @xmath1030 then both its endpoints belong to @xmath1031 , and thus @xmath1032 , which is a contradiction .",
    "thus @xmath1033 .",
    "let @xmath487 , i.e. ,  @xmath1034 , for some @xmath1035 .",
    "note that @xmath1036 by lemma  [ lem : uii.is.empty ] , and thus @xmath1037",
    ". thus , it follows by equation ( [ uji - eq ] ) that @xmath1038 , i.e. ,  @xmath1032 , which is a contradiction .",
    "therefore , @xmath487 , and thus @xmath468 .",
    "if @xmath1039 , then both its endpoints belong to @xmath964 ( by the definition of the set @xmath964 ) , i.e. ,  @xmath1013 , which is a contradiction .",
    "therefore @xmath1040 , for some @xmath774 $ ] , @xmath1041 $ ] , and @xmath1042 .",
    "recall that @xmath1043 .",
    "furthermore recall that the intervals @xmath1044 in the interval representation @xmath75 of the initial graph @xmath0 have been replaced by the intervals @xmath1045 in the interval representation @xmath457 of the graph @xmath300 .",
    "suppose that @xmath1046 .",
    "then , since @xmath1047 by assumption , it follows that @xmath787 properly contains in the representation @xmath457 all three intervals of the vertices @xmath1048 , @xmath1049 , and @xmath1040 .",
    "therefore the interval @xmath787 properly contains in the initial representation @xmath75 all triples of intervals @xmath1050 , where @xmath1051 , @xmath1052 , and @xmath1053 .",
    "thus , since @xmath1054 induce an independent set ( they belong to different connected components @xmath1055 of  @xmath830 in the initial graph @xmath0 ) , it follows that the vertices @xmath1056 induce a @xmath107 in  @xmath30 .",
    "this is a contradiction to the assumption that @xmath29 is a proper interval deletion set of  @xmath0  @xcite .",
    "thus @xmath1057 .",
    "suppose that @xmath1058 . then it follows similarly that @xmath787 properly contains in the initial representation @xmath75 all triples of intervals @xmath1059 , where @xmath1060 , @xmath1061 , and @xmath1062 , which is again a contradiction .",
    "therefore , @xmath1063 .",
    "that is , the interval @xmath787 is properly contained in the interval @xmath1064 , and thus @xmath789 ( cf .",
    "the definition of the sets @xmath825 and @xmath830 in section  graph - g - diesi - subsec ) .",
    "therefore , vertex  @xmath42 has been replaced in the weighted graph @xmath300 by a vertex of  @xmath465 .",
    "this is a contradiction , since @xmath1065 by assumption .",
    "thus for every @xmath1007 and every @xmath1008 , if @xmath1018 , then @xmath1009 in the graph @xmath300 .",
    "this proves condition  2 of definition  [ def : weakly.reducible.set ] .",
    "note that for every @xmath1066 , the set @xmath973 contains no vertices of  @xmath29 , since by definition @xmath1067 .",
    "therefore , since all sets of  @xmath32 are disjoint , we can apply reduction rule  [ data - reduction-2-redrule ] to the graph @xmath300 with respect to the sets of  @xmath32 , by replacing in the interval representation @xmath457 the intervals @xmath458 with @xmath514 copies of the interval @xmath459 , for every @xmath985 .",
    "denote the resulting weighted graph by @xmath1068 and its interval representation by @xmath1069 .",
    "then the next corollary follows immediately by theorem  [ second - data - reduction - thm ] .",
    "[ g - tilde - correctness - cor]the maximum weight of a path in  @xmath300 is equal to the maximum weight of a path in  @xmath33 .    in the next two theorems we provide the main results of this section . in particular , in theorem  [ special - weighted - interval - graph - thm ] we prove that the constructed weighted interval graph @xmath33 is a special weighted interval graph with a parameter  @xmath1070 that is upper bounded by @xmath1071 and in theorem  [ second - reduction - computation - thm ] we provide a time bound of @xmath757 for computing @xmath1068 and a special vertex partition @xmath1072 .",
    "[ special - weighted - interval - graph - thm]the weighted interval graph @xmath1068 is a _ special weighted interval graph _ with _ parameter _ @xmath35 .",
    "define @xmath467 , i.e. ,  @xmath465 is the set of vertices that have been introduced in the weighted interval graph @xmath300 by applying reduction rule  [ data - reduction-1-redrule ] to the initial ( unweighted ) interval graph @xmath0 ( cf .",
    "section  [ graph - g - diesi - subsec ] ) .",
    "note that the vertices of  @xmath465 also belong to the weighted graph @xmath33 , since they are not affected by the application of reduction rule  data - reduction-2-redrule to the graph @xmath300 .",
    "furthermore , we define the vertex set @xmath1073 , i.e. ,  @xmath1074 is partitioned into the sets @xmath465 and @xmath759 .",
    "we will prove that @xmath465 and @xmath759 satisfy the three conditions of definition [ special - interval - def ] .",
    "since the vertices of  @xmath465 are not affected by the application of reduction rule  [ data - reduction-2-redrule ] , corollary  [ first - reduction - g - diesi - properties - cor ] implies that @xmath465 induces an independent set in  @xmath33 .",
    "this proves condition  1 of definition  special - interval - def .",
    "let @xmath904 and @xmath1075 .",
    "assume that @xmath1076 in the interval representation  @xmath1069 .",
    "if @xmath42 is also a vertex of the weighted graph @xmath1077 , then corollary  [ first - reduction - g - diesi - properties - cor ] implies that @xmath912 in the interval representation @xmath1078 ( and thus also in the representation @xmath1069 ) . this is a contradiction to the assumption that @xmath1079 in  @xmath1069",
    "otherwise , if @xmath42 is a vertex of  @xmath33 but not a vertex of  @xmath300 , then @xmath404 , for some @xmath985 .",
    "therefore , for every vertex @xmath1080 , we have that @xmath1081 in the interval representation @xmath457 of the graph  @xmath300 .",
    "this is a contradiction by corollary  first - reduction - g - diesi - properties - cor .",
    "therefore , for every @xmath904 and every @xmath1075 , we have @xmath1076 in the interval representation @xmath1069 .",
    "this proves condition  2 of definition  special - interval - def .",
    "recall by corollary  [ first - reduction - g - diesi - properties - cor ] that the set @xmath909 is partitioned into the sets @xmath465 and @xmath466 .",
    "furthermore , recall that @xmath1082 provides a partition of  @xmath466 , and that each of these vertex sets @xmath973 is replaced in the graph @xmath33 by at most @xmath1083 vertices .",
    "thus the vertex set @xmath759 contains all vertices of  @xmath29 and at most @xmath681 vertices for each of the vertex subsets @xmath1082 of  @xmath300 .",
    "recall that @xmath967 , and thus there exist at most @xmath1084 different sets @xmath973 .",
    "furthermore , recall that @xmath1085 , i.e. ,  @xmath1086 .",
    "therefore , @xmath1087 .",
    "this proves condition 3 of definition  [ special - interval - def ] and completes the proof of the theorem .",
    "[ second - reduction - computation - thm]let @xmath44 be an interval graph , where @xmath109 .",
    "let @xmath771 be a proper interval deletion set of  @xmath0 .",
    "then the special weighted interval graph @xmath1068 and a special vertex partition @xmath1072 can be computed in  @xmath757 time .",
    "first recall that the graph @xmath456 and the independent set @xmath913 can be computed in  @xmath36 time by theorem  first - reduction - computation - thm .",
    "furthermore , recall by the proof of theorem  [ first - reduction - computation - thm ] that , during the computation of the interval representation @xmath457 of the graph @xmath300 , we also compute the points of  @xmath788 and the intervals @xmath1088 for the connected components @xmath833 of  @xmath830 , where @xmath774 $ ] , @xmath1089 $ ] , and @xmath840 $ ] .",
    "thus , since all these computations can be done in  @xmath36 time , we can also compute the set @xmath964 of endpoints in the interval representation @xmath457 in  @xmath36 time in total .",
    "now , for every pair @xmath1090 such that @xmath1066 , we can compute the set @xmath973 in  @xmath36 time by visiting each vertex @xmath1091 once and by checking whether @xmath1092 and @xmath1093 ( cf . the definition of the sets @xmath973 ) .",
    "furthermore , we can compute in the same time the interval @xmath1094 by keeping the leftmost left endpoint and the rightmost right endpoint of  @xmath973 , respectively . thus , since there are @xmath1095 such pairs of indices @xmath1090 , all sets @xmath1096 and all intervals @xmath1094 can be computed in  @xmath757 time in total .",
    "once we have computed all intervals @xmath1094 , we can iteratively remove from the representation @xmath457 the intervals of the vertices of  @xmath973 and replace them with @xmath1097 copies of the interval @xmath1094 , resulting thus at the interval representation @xmath1069 of  @xmath33 .",
    "since the number of vertices in all these sets @xmath973 is at most @xmath2 , all these replacements can be done in  @xmath36 time in total .",
    "finally , since the set  @xmath465 can be computed in  @xmath36 time by theorem  first - reduction - computation - thm , the set @xmath1073 can be also computed in  @xmath36 time .",
    "summarizing , the interval representation @xmath1069 of  @xmath33 and the special vertex partition @xmath1072 can be computed in  @xmath1098 time in total .",
    "note here that , although @xmath1068 is a special weighted interval graph with a parameter @xmath1070 that depends only on the size of  @xmath29 by theorem  [ special - weighted - interval - graph - thm ] , @xmath33 may still have @xmath36 vertices , as the independent set @xmath465 in its special vertex partition @xmath1072 may be arbitrarily large .",
    "in this section , we first present algorithm  weighted - path - special - interval - graph - alg ( cf .",
    "section  special - algorithm - subsec ) which computes in  @xmath37 time the maximum weight of a path in a _ special weighted interval graph _ with parameter @xmath34 ( cf .  definition  [ special - interval - def ] ) .",
    "then , using algorithm  [ weighted - path - special - interval - graph - alg ] and the results of sections  [ data - reductions - sec ] and  [ special - interval - sec ] , we conclude in section  [ general - algorithm - subsec ] with our fixed - parameter algorithm for longest path on interval graphs , where the parameter @xmath3 is the size of a minimum proper interval deletion set @xmath29 . since algorithm  [ weighted - path - special - interval - graph - alg ] can be implemented to run in  @xmath37 time and @xmath35 by theorem  special - weighted - interval - graph - thm , the algorithm of section  general - algorithm - subsec runs in  @xmath4 time .",
    "consider a _ special weighted interval graph _ @xmath44 with parameter @xmath758 , which is given along with a special interval representation @xmath75 and a special vertex partition @xmath763 .",
    "recall by definition  [ special - interval - def ] that @xmath465 is an independent set and that @xmath761 .",
    "let @xmath1099 be the vertex weight function of  @xmath0 .",
    "now we add to the set @xmath759 an isolated dummy vertex @xmath1100 such that @xmath1101 and @xmath1102 .",
    "thus , after the addition of  @xmath1100 to @xmath0 , we have @xmath1103 .",
    "note that @xmath1100 is not contained in any maximum - weight path of this augmented graph .",
    "thus , every maximum - weight path in the augmented graph is also a maximum weight path in  @xmath0 , and vice versa . in the following",
    "we denote this augmented graph by @xmath0",
    ". furthermore , denote by @xmath75 the augmented interval representation and by @xmath1104 its right - endpoint ordering . for every vertex @xmath1105 ,",
    "we define@xmath1106    [ lem : xi.is.well.defined ] for every vertex @xmath1105 , @xmath1107 is well - defined .",
    "it is enough to prove that if there exists a vertex @xmath1108 such that @xmath1109 then @xmath42 is unique .",
    "let us assume to the contrary that there exist two distinct vertices @xmath42 and @xmath261 in  @xmath465 such that @xmath1110 and @xmath1111 . then @xmath884 and @xmath1112 .",
    "this is a contradiction , since @xmath465 is an independent set .",
    "now we define the set @xmath1113 as@xmath1114note that @xmath1115 .",
    "furthermore , let @xmath77 , where @xmath1116 and @xmath1117 .",
    "we define the vertex @xmath1118note that , by definition , if @xmath1119 then @xmath1120 .",
    "furthermore , due to the condition that @xmath1116 in the definition of the vertex @xmath1121 , it follows that @xmath1122 or @xmath1105 , since @xmath465 is an independent set .",
    "that is , vertex  @xmath1123 is defined for at most @xmath1124 pairs of vertices @xmath163 .",
    "[ subgraphs - interval - definition ] let @xmath1125 and @xmath1126 $ ] such that @xmath1127 .",
    "we define the induced subgraph @xmath1128}$ ] of  @xmath0 which contains all vertices whose intervals ( in the representation @xmath75 of  @xmath0 ) are entirely contained between the points @xmath1129 and @xmath1130 .",
    "note by definition  [ subgraphs - interval - definition ] that , if @xmath1131 , then the vertex @xmath185 does not belong to the subgraph @xmath1132 .",
    "[ notation - interval - paths ] let @xmath1125 and @xmath1133 $ ] such that @xmath1127 . furthermore , let @xmath1134 such that @xmath1135 .",
    "we denote by @xmath1136 a _ maximum weight normal path _ of  @xmath1132 , among those normal paths whose last vertex is @xmath194 . for every path @xmath1136",
    ", we denote its weight @xmath1137 by @xmath1138 .    before we present algorithm  [ weighted - path - special - interval - graph - alg ] , we first present some auxiliary technical lemmas ( cf .",
    "lemmas  lem : vi.not.in.p-[lem : algorithm.second - direction-1 ] ) that will be useful in the proof of correctness and the running time analysis of the algorithm ( cf",
    ".  theorems  [ special - algorithm - correcntess - thm ] and  special - algorithm - running - time - thm , respectively ) .",
    "[ lem : vi.not.in.p ] let @xmath1125 and @xmath1133 $ ] , where @xmath1139 , and let @xmath1134 and @xmath1140 .",
    "let also @xmath63 be a normal path of  @xmath1132 that has @xmath194 as its last vertex .",
    "if @xmath1141 , then @xmath63 is a path of  @xmath1142 .",
    "let @xmath1143 denote the rightmost vertex of  @xmath63 ( in the ordering @xmath82 ) .",
    "since @xmath1141 , we have that @xmath1144 . note also that either @xmath1145 or @xmath1146 .",
    "we claim that @xmath1147 .",
    "notice that the statement trivially holds if @xmath1145 .",
    "thus , it is enough to prove that @xmath1147 when @xmath1146 .",
    "first , as @xmath1146 and @xmath1148 , lemma  lem : oxi.anapoda implies that @xmath1149 .",
    "furthermore , since @xmath63 is normal , lemma  [ lem : propers.consecutive.in.path ] implies that @xmath1150 $ ] does not induce a proper interval representation . therefore , since @xmath1146 , it follows that @xmath1151 , and thus @xmath1152 .",
    "hence , since also @xmath1153 and @xmath1149 , it follows that @xmath1154 .",
    "therefore @xmath63 is a path of  @xmath1142 .",
    "[ extra - computation - lem]let @xmath1125 and @xmath1133 $ ] , where @xmath1127 , and let @xmath1134 and @xmath1140 . if @xmath1155 or @xmath1156 , then @xmath1157 .",
    "let @xmath1155 or @xmath1156 .",
    "first we prove that @xmath1158 .",
    "if @xmath1156 , then clearly @xmath1158 .",
    "suppose now that @xmath1159 and that @xmath1155 .",
    "for the sake of contradiction , assume that @xmath1160 .",
    "since @xmath1155 and @xmath1161 , note that @xmath1162 and @xmath1163 . thus @xmath1164 $ ] induces a proper interval representation .",
    "therefore , since @xmath1165 and @xmath1166 by assumption , lemma  lem : propers.consecutive.in.path implies that @xmath1167 . this is a contradiction to the assumption that @xmath194 is the last vertex of  @xmath1168 .",
    "therefore @xmath1158 .",
    "thus lemma  [ lem : vi.not.in.p ] implies that @xmath1169 is a path of @xmath1142 .",
    "therefore , since @xmath1170 is a subgraph of @xmath1171 ( cf .",
    "( [ pi - eq ] ) ) , it follows that @xmath1172 .",
    "[ lem : algorithm.first ] let @xmath1125 and @xmath1133 $ ] , where @xmath1127 , and let @xmath1159",
    ". then @xmath1173 , where @xmath1174    let @xmath1175 be a normal path of  @xmath1132 such that @xmath1176 .",
    "denote by @xmath665 the last vertex of  @xmath339 .",
    "then , since @xmath63 is a normal path of  @xmath1132 , @xmath339 is a normal path of  @xmath1132 that does not contain  @xmath185 .",
    "lemma  [ lem : vi.not.in.p ] implies that @xmath339 is a normal path of  @xmath1177 that has @xmath665 as its last vertex and hence @xmath1178    we will now prove that @xmath1179 . for this , assume towards a contradiction that @xmath1180 .",
    "recall that @xmath1181 is a normal path of  @xmath1182 that has @xmath665 as its last vertex . since @xmath1183",
    ", this implies that @xmath1184 is a path of  @xmath1132 that has @xmath185 as its last vertex .",
    "furthermore , since @xmath185 is the rightmost vertex of the path , it follows that @xmath1184 is normal ( observation  obs : appending.a.vertex ) .",
    "moreover , @xmath1185a contradiction to the assumption that @xmath1176 .",
    "hence , @xmath1186    to conclude , @xmath1187 , where @xmath1188and this completes the proof of the lemma .",
    "[ lem : algorithm.second - direction-2 ] let @xmath1125 and @xmath1189 $ ] , where @xmath1127 , and let @xmath1190 and @xmath1140 .",
    "let @xmath1191 and @xmath1192 be such that @xmath1193 .",
    "furthermore , let @xmath339 be a normal path of  @xmath1177 with @xmath665 as its last vertex and @xmath290 be a normal path of  @xmath1194 with @xmath194 as its last vertex .",
    "then @xmath1195 is a normal path of  @xmath1132 with @xmath194 as its last vertex .    since @xmath1196 it follows that @xmath1197 for every vertex @xmath254 .",
    "therefore , since @xmath1198 , it follows that @xmath1199    therefore , since @xmath339 is normal , @xmath665 is the last vertex of  @xmath339 , and @xmath291 , @xmath1200 for every @xmath254 , it follows that @xmath1201 ( lemma  [ lem : oxi.anapoda ] ) .",
    "moreover , since @xmath1202 , @xmath1183 and since @xmath1203 it follows that @xmath1204 for every vertex in  @xmath1205 .",
    "therefore , @xmath1206 is a path that has @xmath194 as its last vertex ( as @xmath194 is the last vertex of  @xmath290 ) .",
    "moreover , since @xmath1207 , @xmath1208 and @xmath1209 , @xmath63 is a path of  @xmath1132 .",
    "it remains to show that @xmath63 is normal .",
    "we first show that if @xmath188 is the first vertex of  @xmath339 , then @xmath1210 for every vertex @xmath1211 .",
    "notice that @xmath1210 , for every vertex @xmath1212 , since @xmath339 is a normal path and @xmath188 is its first vertex .",
    "recall also that @xmath291 , for every vertex @xmath1213 ( equation  ( [ eq : eqinequal ] ) ) . as @xmath1214 for every vertex @xmath1213",
    ", it indeed follows that @xmath1210 , for every vertex in  @xmath1215 .",
    "we now show that for every vertex @xmath198 , with successor @xmath1216 and every vertex @xmath606 such that @xmath1217 , and @xmath445 it holds that @xmath431 .",
    "let us assume to the contrary that for some @xmath198 , with successor @xmath1218 there exists a vertex @xmath606 such that @xmath1217 , @xmath445 , and @xmath435 .",
    "notice that if @xmath1219 or @xmath1220 , then we obtain a contradiction to the assumptions that @xmath339 and @xmath290 are normal paths .",
    "similarly , if @xmath1221 we obtain a contradiction to the fact that @xmath290 is a normal path since the successor of  @xmath185 in  @xmath63 is the first vertex of  @xmath290 .",
    "moreover , as the only neighbor of  @xmath665 in  @xmath1222 is @xmath185 we obtain that @xmath1223 and @xmath1224 .",
    "notice then that since @xmath445 , it holds that @xmath1225 , and since @xmath291 and @xmath1226 , as @xmath339 is normal from lemma  [ lem : oxi.anapoda ] , @xmath1227 .",
    "however , then @xmath1228 , a contradiction to the assumption that @xmath339 is normal . therefore , we conclude that for every vertex @xmath198 , with successor @xmath1218 and every vertex @xmath606 such that @xmath1217 , and @xmath445 it holds that @xmath431 .",
    "thus , we completed the proof that @xmath63 is a normal path of  @xmath1132 that has @xmath194 as its last vertex .",
    "[ lem : algorithm.second - direction-1 ] let @xmath1125 and @xmath1189 $ ] , where @xmath1127 , and let @xmath1190 and @xmath1140 .",
    "let @xmath1229 .",
    "if @xmath1230 , then there exists some @xmath1231 , where @xmath1232 , such that@xmath1233otherwise , if @xmath1234 then @xmath1235 and @xmath1236    denote @xmath1237 .",
    "notice first that , since @xmath185 is the rightmost vertex of  @xmath63 , the path @xmath339 is not empty by observation  obs : first.vertex .",
    "denote by @xmath665 the last vertex of  @xmath339 .",
    "then , since @xmath339 is the prefix of the normal path @xmath63 , observe that @xmath339 is a normal path of  @xmath1132 that has @xmath665 as its last vertex and does not contain  @xmath185 .",
    "furthermore , @xmath339 is a path of  @xmath1238 by lemma  [ lem : vi.not.in.p ] .",
    "therefore @xmath339 is a normal path of  @xmath1177 , and thus , @xmath1178    let @xmath254 .",
    "since @xmath1239 and @xmath1240 , lemma  lem : oxi.anapoda implies that @xmath1204 .",
    "therefore , again since @xmath1239 and @xmath1240 , lemma  lem : propers.consecutive.in.path implies that @xmath1241 $ ] does not induce a proper interval representation , i.e. ,  either @xmath1242 or @xmath1243 .",
    "thus , since @xmath1240 , it follows that @xmath1244 .",
    "that is , @xmath1242 for every @xmath254 .",
    "therefore , since @xmath1245 , it follows that @xmath1246 , and thus in particular @xmath1235 .",
    "now let @xmath1247we show that , if @xmath1230 , then @xmath1248 , and thus @xmath1249 is well - defined . notice first that , if @xmath1250 , then @xmath1251 .",
    "let @xmath1252 , then let @xmath1143 be the neighbor of  @xmath194 in  @xmath290 ( note that @xmath1143 always exists since @xmath1253 ) . then , as @xmath465 is an independent set , it follows that @xmath1152 , and thus @xmath1254 .",
    "hence , if @xmath1230 , then in any case @xmath1255 .",
    "suppose that @xmath1256 .",
    "then , by definition of  @xmath1249 , there exists some @xmath254 such that @xmath1257 .",
    "let @xmath1258 , i.e. ,   @xmath1259 . then @xmath1227 .",
    "therefore , since @xmath1260 for every @xmath254 , it follows by the normality of  @xmath63 that @xmath185 is not the next vertex of  @xmath665 in  @xmath63 , which is a contradiction .",
    "let @xmath1261 , i.e. ,  @xmath1262 . then , since @xmath1263 , lemma  lem : oxi.anapoda implies that @xmath1227 , which is again a contradiction by the normality of  @xmath63 . therefore @xmath1198 .",
    "now note that @xmath1202 , since @xmath1183 .",
    "that is , @xmath1193 .",
    "therefore , since @xmath1264 by the definition of  @xmath1249 , it follows that @xmath1265    let now @xmath1230 .",
    "we prove that @xmath1266 , for every @xmath1267 .",
    "assume otherwise that there exists a vertex @xmath254 such that @xmath1268 .",
    "then , by the definition of  @xmath1249 , it follows that @xmath1269 .",
    "therefore @xmath1270 , and thus @xmath468 ( cf .  the definition of the set @xmath1113 ) .",
    "since @xmath1230 , it follows that @xmath43 has at least one neighbor  @xmath42 in  @xmath290 .",
    "then @xmath1122 , since @xmath465 is an independent set . furthermore , @xmath1271 . therefore , since @xmath232 by assumption",
    ", it follows that @xmath1272 .",
    "that is , @xmath1273 ( cf .  the definition of  @xmath1274 for a vertex @xmath1122 ) .",
    "therefore @xmath1275 , which is a contradiction to our assumption . thus @xmath1266 , for every @xmath254 .",
    "now recall that @xmath1244 for every @xmath254 , as we proved above , and thus @xmath1204 for every @xmath254 .",
    "furthermore , recall that all vertices of  @xmath290 appear in  @xmath63 after vertex @xmath185 .",
    "therefore , since @xmath63 is a normal path by assumption , it follows that @xmath290 is also a normal path .",
    "thus , since @xmath1266 for every @xmath254 , as we proved above , it follows that @xmath290 is a normal path of  @xmath1276 that does not contain  @xmath185 .",
    "therefore lemma  [ lem : vi.not.in.p ] implies that @xmath290 is a path of  @xmath1194 .",
    "thus , since @xmath194 is the last vertex of  @xmath290 , it follows that@xmath1277    in the remainder of the proof we show that @xmath1278 and @xmath1279 . towards a contradiction",
    "assume that at least one of the equalities does not hold .",
    "notice first that from lemma  [ lem : algorithm.second - direction-2 ] , @xmath1280 is a normal path of  @xmath1132 that has @xmath194 as its last vertex .",
    "notice now that @xmath1281a contradiction .",
    "therefore , @xmath1282and @xmath1283summarizing , if @xmath1230 we obtain that @xmath1284and if @xmath1234 we obtain that @xmath1285this completes the proof of the lemma .",
    "we are now ready to present algorithm  weighted - path - special - interval - graph - alg , which computes the maximum weight of a path in a given _ special _ _ weighted _ interval graph @xmath0 .",
    "it is easy to check that algorithm  weighted - path - special - interval - graph - alg can be slightly modified such that it returns the actual path @xmath63 instead of its weight only .",
    "first we give a brief overview of the algorithm .",
    "using dynamic programming , it computes a 3-dimensional table . in this table , for every point @xmath1286 , every index @xmath1133 $ ] , and every vertex @xmath1287 , where @xmath1127 and @xmath1140 , the entry @xmath1288 ( resp .",
    "the entry  @xmath1289 ) keeps the weight of a normal path in the subgraph @xmath1132 which is the largest among those normal paths whose last vertex is @xmath194 ( resp .",
    "@xmath185 ) .",
    "thus , since @xmath1102 for the dummy isolated vertex @xmath1100 ( cf .",
    "line  [ alg - line-1 ] of the algorithm ) , the maximum weight of a path in @xmath0 will be eventually stored in one of the entries @xmath1290 or in one of the entries @xmath1291 , depending on whether the last vertex @xmath194 of the desired maximum - weight path coincides with the rightmost vertex @xmath185 of this path in the ordering @xmath82 ( cf .",
    "line  [ alg - line-18 ] of the algorithm ) .",
    "note that for every computed entry @xmath1138 the vertices @xmath185 and @xmath194 are adjacent , and thus @xmath1292 or @xmath1293 , since @xmath465 is an independent set .",
    "thus , since @xmath1294 , there are at most @xmath1295 such eligible pairs of vertices @xmath1296 .",
    "furthermore , since also @xmath1297 , the computed 3-dimensional table stores at most @xmath1298 entries @xmath1289 and @xmath1138 . from the _ for_-loops of lines  [ alg - line-2]-[alg - line-3 ] of the algorithm and from the obvious inductive hypothesis",
    "we may assume that during the @xmath1299th iteration all previous values @xmath1300 and @xmath1301 , where @xmath875 or @xmath1302 , have been correctly computed at a previous iteration .    in the initialization phase for a particular pair @xmath1299 ( cf .",
    "lines  [ alg - line-4]-[alg - line-6 ] ) the algorithm computes some initial values for @xmath1289 and @xmath1138 . for a path with @xmath185 as its last vertex ,",
    "we are only interested in the case where @xmath1159 ; in this case we initialize @xmath1303 , cf .  line  [ alg - line-4 ] . for a path with @xmath1304 as its last vertex ( cf .",
    "lines  [ alg - line-5]-[alg - line-6 ] ) , we initialize @xmath1172 , since the path @xmath1305 is indeed a normal path of the graph @xmath1306 , which is an induced subgraph of @xmath1132 .    for the induction step phase ( cf .  lines  [ alg - line-7]-[alg - line-17 ] ) the algorithm updates the initialized entries @xmath1289 and @xmath1138 according to lemmas  [ extra - computation - lem]-lem : algorithm.second - direction-1 . to update the value @xmath1307 we only need to consider the case where @xmath1209 ; in this case @xmath1289 is updated in lines  alg - line-7-[alg - line-9 ] according to lemma  [ lem : algorithm.first ] .",
    "the values of @xmath1138 , where @xmath1308 , are updated in lines  [ alg - line-10]-[alg - line-17 ] . in particular , in the case where @xmath1155 or @xmath1156 , the value of @xmath1288 is updated in lines  [ alg - line-11]-[alg - line-12 ] according to lemma  [ extra - computation - lem ] .",
    "otherwise , @xmath1309 is updated in lines  [ alg - line-14]-[alg - line-17 ] according to lemma  [ lem : algorithm.second - direction-1 ] .",
    "the correctness of the algorithm is proved in theorem  special - algorithm - correcntess - thm and its running time is proved in theorem  [ special - algorithm - running - time - thm ] .",
    "[ alg - line-1 ]    [ alg - line-2 ] [ alg - line-3 ]    [ alg - line-4 ]    [ alg - line-5 ] [ alg - line-6 ]    [ alg - line-7 ] [ alg - line-8 ] [ alg - line-9 ]    [ alg - line-10 ] [ alg - line-11 ] [ alg - line-12 ] [ alg - line-13 ] [ alg - line-14 ] [ alg - line-15 ] [ alg - line-16 ] [ alg - line-17 ]    [ alg - line-18 ]    [ special - algorithm - correcntess - thm]let @xmath44 be a special weighted interval graph , given along with a special interval representation @xmath75 and a special vertex partition @xmath763 .",
    "then algorithm  weighted - path - special - interval - graph - alg computes the maximum weight of a path @xmath63 in  @xmath0 .    in lines",
    "[ alg - line-2]-[alg - line-17 ] , algorithm  weighted - path - special - interval - graph - alg iterates for every @xmath1310 and for every @xmath1125 such that @xmath1127 . for every such @xmath1311 and @xmath1129",
    ", the algorithm computes the values @xmath1307 and the values @xmath1138 , for every vertex @xmath1312 such that @xmath1140 .",
    "we will prove by induction on @xmath1311 that these values are the weights of the maximum - weight normal paths @xmath1313 and the values @xmath1136 , respectively ( cf . notation  [ notation - interval - paths ] ) .",
    "for the induction basis , let @xmath744 . then , since @xmath1100 is an isolated vertex ( cf .",
    "line  [ alg - line-1 ] of algorithm  weighted - path - special - interval - graph - alg ) , the only @xmath1125 , for which @xmath1314 , is @xmath1315 . then line  [ alg - line-4 ] of the algorithm is executed and the algorithm correctly computes the value @xmath1316 .",
    "furthermore , since @xmath1100 is a dummy vertex by assumption , the lines  [ alg - line-5]-[alg - line-6 ] and the lines  [ alg - line-10]-[alg - line-17 ] of the algorithm are not executed at all for @xmath744 .",
    "finally , in lines  [ alg - line-7]-[alg - line-9 ] the algorithm recomputes the value @xmath1316 , since there exists no vertex @xmath665 such that @xmath1317 ( cf .",
    "line [ alg - line-8 ] of the algorithm ) .",
    "this value of  @xmath1318 is clearly correct .",
    "this completes the induction basis .    for the induction step ,",
    "let @xmath745 .",
    "consider the iteration of the algorithm for any @xmath1125 , where @xmath1127 .",
    "first the algorithm initializes in lines  [ alg - line-4]-[alg - line-6 ] the values @xmath1289 and the values @xmath1138 , for every vertex @xmath1134 such that @xmath1140 .",
    "the initialization of line  [ alg - line-4 ] is correct , since the single - vertex path @xmath1319 is clearly a normal path of the graph @xmath1132 which has @xmath185 as its last vertex .",
    "the initialization of lines  [ alg - line-5]-alg - line-6 is correct , since the path @xmath1305 is indeed a normal path of  @xmath1142 , which is an induced subgraph of  @xmath1132 ( cf .",
    "definition  subgraphs - interval - definition ) .    in lines",
    "[ alg - line-7]-[alg - line-9 ] the algorithm updates the current ( initialized ) value of  @xmath1289 .",
    "the correctness of this update follows directly by lemma  [ lem : algorithm.first ] .",
    "furthermore , in lines  [ alg - line-10]-[alg - line-17 ] the algorithm iterates for every vertex @xmath1134 such that @xmath1140 . for every such value of  @xmath194",
    ", the algorithm updates the current ( initialized ) value of  @xmath1138 .",
    "the correctness of the update in line  [ alg - line-12 ] follows directly by lemma  [ extra - computation - lem ] .    during the execution of lines  [ alg - line-14]-[alg - line-17 ] the algorithm deals with the case where @xmath1320 and @xmath1235 .",
    "if @xmath185 does not belong to the desired path @xmath1168 , then by lemma  [ lem : vi.not.in.p ] @xmath1136 is also a normal path of  @xmath1142 , which is an induced subgraph of @xmath1132 .",
    "therefore , in this case , @xmath1321 . the algorithm does not update the current value of  @xmath1288 , since @xmath1138 has been initialized to @xmath1322 in line  [ alg - line-6 ] .    for",
    "the remainder of the proof , assume that @xmath185 belongs to the desired path @xmath1136 , i.e. ,  @xmath1229 , for some sub - paths @xmath339 and @xmath290 of  @xmath1136 . in lines  alg - line-14-[alg - line-16 ]",
    "the algorithm distinguishes between the cases where @xmath1234 and @xmath1230 . to deal with the case where @xmath1234 , i.e. ,  with the case where @xmath1323 , the algorithm computes in line  [ alg - line-14 ] the value @xmath1324 of the desired path @xmath339 ( cf .",
    "( [ w - p1-eq-3 ] ) of lemma  [ lem : algorithm.second - direction-1 ] ) .",
    "then it compares in line  [ alg - line-17 ] the current value of  @xmath1138 with the value @xmath1325 , and it stores the greatest value between them in  @xmath1138 .",
    "this update is correct by eq .",
    "( [ w - p1-eq-3 ] ) of lemma  [ lem : algorithm.second - direction-1 ] .    to deal with the case where @xmath1230",
    ", the algorithm iterates in lines [ alg - line-15]-[alg - line-16 ] for every @xmath1231 such that @xmath1232 . for every such value of  @xmath1249 it computes the value @xmath1326 of the desired path @xmath339 ( cf .",
    "( [ w - p1-eq-2 ] ) of lemma  [ lem : algorithm.second - direction-1 ] ) .",
    "then the algorithm compares in line  [ alg - line-17 ] the current value of  @xmath1138 with the value @xmath1327 and it stores the greatest between them in  @xmath1138 . for every @xmath1231 , where @xmath1232 , lemma  lem : algorithm.second - direction-2 implies that the path @xmath1328 is a normal path of  @xmath1132 with @xmath194 as its last vertex .",
    "therefore @xmath1329 , for every such value of  @xmath1249 .",
    "furthermore lemma  [ lem : algorithm.second - direction-1 ] implies that there exists at least one such value @xmath1249 , such that the values @xmath1330 and @xmath1331 are equal to the weights of the sub - paths @xmath339 and @xmath290 of  @xmath1168 , respectively .",
    "therefore , these updates of  @xmath1138 for all values of  @xmath1249 are correct .",
    "this completes the induction step .",
    "therefore , after the execution of lines  [ alg - line-2]-[alg - line-17 ] , algorithm  [ weighted - path - special - interval - graph - alg ] has correctly computed all values @xmath1289 and @xmath1138 , where @xmath1332 , @xmath1125 such that @xmath1127 , and @xmath1134 such that @xmath1140 . thus , since for every @xmath1311 and every @xmath1129 the graph @xmath1132 is an induced subgraph of  @xmath1333 , it follows that the maximum weight of a path in  @xmath0 is one of the values @xmath1334 and @xmath1335 .",
    "therefore the algorithm returns the correct value in line  [ alg - line-18 ] .",
    "[ special - algorithm - running - time - thm]let @xmath44 be a special weighted interval graph with @xmath2 vertices and parameter @xmath34 .",
    "then algorithm  [ weighted - path - special - interval - graph - alg ] can be implemented to run in  @xmath37 time .    since @xmath0 is a special weighted interval graph with @xmath763 as its special vertex partition ( cf .",
    "definition  [ special - interval - def ] ) , @xmath465 is an independent set and @xmath1103 ( after the addition of the dummy vertex @xmath1100 to the set  @xmath759 ) .",
    "recall that the endpoints of the intervals in  @xmath75 are given sorted increasingly , e.g. ,  in a linked list @xmath62 .",
    "the points @xmath1336 can be efficiently as follows .",
    "first we visit all endpoints of the intervals in  @xmath75 ( in increasing order ) . for every endpoint @xmath88 , where @xmath1105 , which we visit between the endpoints @xmath951 and @xmath162 , for some @xmath1108 , we define @xmath1337 .",
    "thus the points @xmath1336 can be computed in  @xmath36 time .",
    "furthermore the points @xmath1338 can be computed in  @xmath1339 time by just enumerating all vertices of  @xmath759 .",
    "therefore the set @xmath1113 can be computed in  @xmath1340 time in total .",
    "furthermore recall that there are @xmath1341 different vertices @xmath1121 ( cf .",
    "( [ pi - eq ] ) ) and note that , given two adjacent vertices @xmath163 , we can compute the vertex @xmath1121 in  @xmath1339 time by enumerating in worst case all vertices of  @xmath759 .",
    "thus , all vertices @xmath1121 can be computed in total @xmath1298 time .",
    "now we provide an upper bound on the number of values @xmath1289 and @xmath1138 that are computed by algorithm  weighted - path - special - interval - graph - alg .",
    "since @xmath1342 and @xmath1343 , there are in total at most @xmath1341 different values @xmath1307 .",
    "furthermore , the values @xmath1138 , where @xmath1304 , are computed for every @xmath1332 , every @xmath1286 such that @xmath1127 , and every @xmath1134 such that @xmath1140 .",
    "thus , due to the condition that @xmath1140 , it follows that @xmath1292 or @xmath1293 .",
    "that is , there are in total at most @xmath1124 pairs of vertices @xmath1296 for which we compute the values @xmath1138 .",
    "therefore , since @xmath1342 and @xmath1103 , there are at most @xmath1298 different values @xmath1138 . summarizing , algorithm  weighted - path - special - interval - graph - alg computes at most @xmath1298 different values @xmath1289 and @xmath1138 .",
    "we now show that all computations performed in the lines  [ alg - line-8 ] ,  [ alg - line-14 ] , and  [ alg - line-16 ] of the algorithm can be implemented to run in total @xmath1298 time .",
    "denote by @xmath1344 the set of all endpoints of the intervals in  @xmath75 . recall that the points of  @xmath1345 are assumed",
    "to be already sorted increasingly .",
    "note that , in order to perform all computations of the lines  [ alg - line-8 ] ,  alg - line-14 , and  [ alg - line-16 ] , it suffices to store at each point @xmath1346 the values @xmath1347for every @xmath1125 and every @xmath1133 $ ] such that @xmath1348 .",
    "indeed , once we have computed all possible values @xmath1349 , lines  [ alg - line-8 ] ,  [ alg - line-14 ] , and  [ alg - line-16 ] of the algorithm can be executed in @xmath177 time by just accessing the stored values @xmath1350 , @xmath1351 , and @xmath1352 , respectively . observe that for every point @xmath1346 such that @xmath1353 , the vertex which has @xmath1354 as an endpoint is adjacent to vertex @xmath185 .",
    "thus , since there are at most @xmath1341 pairs of adjacent vertices in  @xmath0 , it follows that there are @xmath1341 such pairs of a point @xmath1346 and a vertex @xmath1355 .    given a point @xmath1125 and a vertex @xmath185",
    ", we can compute all values @xmath1349 in  @xmath1356 time as follows .",
    "let @xmath1357 be the first endpoint after @xmath1358 in the ordering of the endpoints in  @xmath1345 .",
    "as there does not exist any vertex @xmath665 such that @xmath1359 ( cf .",
    "( [ omega - eq-1 ] ) ) , we store at point @xmath1360 the value @xmath1361",
    ". then , we visit in increasing order all points of  @xmath1346 between @xmath1362 and @xmath1130 .",
    "note that we can visit all these vertices in @xmath1356 time as the points of  @xmath1345 are already sorted increasingly .",
    "let @xmath1346 be the currently visited point between @xmath1362 and @xmath1130 , and let @xmath1363 be the predecessor of  @xmath1354 in the ordering of  @xmath1345 .",
    "then it follows by the definition of @xmath1349 in eq .",
    "( [ omega - eq-1 ] ) that @xmath1364therefore , since @xmath1363 and @xmath1354 are two consecutive points of @xmath1345 between @xmath1362 and @xmath1130 , the value @xmath1349 can be computed in @xmath177 time using the value of @xmath1365 , as follows:@xmath1366since the value of @xmath1349 can be computed by eq .",
    "( omega - eq-3 ) in @xmath177 time , all these computations of the values @xmath1367 ( for a fixed @xmath1129 and a fixed @xmath185 ) can be performed in  @xmath1356 time in total .",
    "thus , since @xmath1297 and @xmath1368}|n(v_{i})|=o(\\kappa n)$ ] , we can compute all values @xmath1369 in total @xmath1298 time .",
    "that is , all computations performed in the lines  [ alg - line-8 ] ,  [ alg - line-14 ] , and  alg - line-16 of the algorithm can be implemented to run in total @xmath1370 time .    in the remainder of the proof",
    "we assume that each of the lines  alg - line-8 ,  [ alg - line-14 ] , and  [ alg - line-16 ] is executed in  @xmath177 time .",
    "each of the lines  [ alg - line-4 ] ,  [ alg - line-8 ] , and  alg - line-9 is executed for every @xmath1371 and at most for every @xmath1125 , i.e. ,  @xmath1341 times in total .",
    "furthermore , each of the lines  [ alg - line-6 ] ,  [ alg - line-11 ] ,  [ alg - line-12 ] , and  alg - line-14 is executed at most for every @xmath1125 and for every pair @xmath1372 of adjacent vertices in  @xmath0 , i.e. ,  @xmath1298 times in total .",
    "each of the lines  [ alg - line-16]-[alg - line-17 ] is executed at most for every @xmath1125 , for every @xmath1231 , and for every pair @xmath1372 of adjacent vertices in  @xmath0 , i.e. ,  @xmath1373 times in total .    finally , once we have computed all values @xmath1289 and @xmath1138 in lines  [ alg - line-2]-[alg - line-17 ] , the output of line  [ alg - line-18 ] can be computed in  @xmath1341 time by considering the @xmath1341 computed values @xmath1334 and @xmath1374 , for every vertex @xmath185 and for at most each pair of adjacent vertices @xmath1296 . summarizing , algorithm  weighted - path - special - interval - graph - alg can be implemented to run in total @xmath1375 time .      here",
    "we combine all our results of sections  [ data - reductions - sec ] ,  special - interval - sec , and  [ special - algorithm - subsec ] to present our _ parameterized linear - time _",
    "algorithm for longest path on interval graphs .",
    "the parameter @xmath3 of this algorithm is the size of a _ minimum proper interval deletion set _ @xmath29 of the input graph  @xmath0 and its running time has a _ polynomial dependency _ on @xmath3 .",
    "[ general - longest - path - algorithm - thm]let @xmath44 be an interval graph , where @xmath109 and @xmath110 , and let @xmath3 be the minimum size of a proper interval deletion set of  @xmath0 .",
    "let @xmath75 be an interval representation of  @xmath0 whose endpoints are sorted increasingly . then :    1 .   a proper interval deletion set @xmath29 , where @xmath1376 , can be computed in @xmath28 time , 2 .",
    "a semi - proper interval representation @xmath145 of  @xmath0 can be constructed in  @xmath81 time , and 3 .   given @xmath29 and @xmath145 , a longest path of  @xmath0 can be computed in  @xmath4 time .",
    "the first two statements of the theorem follow immediately by theorems  proper - deletion - set - approximation - thm and  interval - representation - preprocessing - thm , respectively .",
    "for the remainder of the proof we assume that the proper interval deletion set @xmath29 and the semi - proper interval representation @xmath145 of  @xmath0 have been already computed .    for the third statement of the theorem",
    ", we first compute the weighted interval graph @xmath456 in  @xmath36 time by theorem  first - reduction - computation - thm .",
    "then , given the graph  @xmath300 , we compute the weighted interval graph @xmath1068 in  @xmath757 time by theorem  [ special - weighted - interval - graph - thm ] . by theorem  [ special - weighted - interval - graph - thm ] , this graph @xmath33 is a special weighted interval graph with parameter @xmath35 , cf . definition  [ special - interval - def ] . during the computation of the graph @xmath33",
    ", we can compute in the same time ( i.e. ,  in  @xmath757 time ) also a special vertex partition @xmath1072 of its vertex set .",
    "furthermore , it follows by corollaries  [ g - diesi - correctness - cor ] and  g - tilde - correctness - cor that the maximum number of vertices of a path in the initial interval graph @xmath0 is equal to the maximum weight of a path in the special weighted interval graph @xmath33 .",
    "therefore , in order to compute a longest path in  @xmath0 it suffices to compute a path of maximum weight in  @xmath33 .",
    "thus , since @xmath33 is a special weighted interval graph with parameter @xmath35 , we compute the maximum weight of a path in  @xmath33 by algorithm  weighted - path - special - interval - graph - alg .",
    "the running time of algorithm [ weighted - path - special - interval - graph - alg ] with input @xmath33 is @xmath38 by theorem  special - algorithm - running - time - thm .",
    "for the sake of completeness , in this section we present the details of the algorithm for maximum matching , find a maximum - cardinality matching in  @xmath0 ; in its decision version , additionally the desired matching size  @xmath3 is specified as part of the input . ] that we sketched in section  [ introduction - sec ] .",
    "the parameter @xmath3 is the solution size ; for this parameter we show that a _ kernel _ with at most @xmath1377 vertices and edges can be computed in @xmath1378 time , thus leading to a total running time of @xmath5 .",
    "hence , maximum matching , parameterized by the solution size , belongs to the class pl - fpt .",
    "first we present two simple data reduction rules , very similar in spirit to the data reduction rules of buss for vertex cover ( see e.g. ,  @xcite ) .",
    "[ red - rule-1]if @xmath1379 for some vertex @xmath86 , then return the instance @xmath1380 .",
    "[ red - rule-2]if @xmath1381 for some vertex @xmath86 , then return the instance @xmath1382 .",
    "an instance of parameterized maximum matching is called _ reduced _ if none of reduction rules  [ red - rule-1 ] and  [ red - rule-2 ] can be applied to this instance .",
    "it can be easily checked that reduction rule  [ red - rule-2 ] is safe . in the next lemma",
    "we show that reduction rule  [ red - rule-1 ] is also safe .",
    "[ rule-1-safe - lem]let @xmath3 be a positive integer and @xmath0 be a graph . if @xmath86 such that @xmath1383 , then @xmath1380 is a yes - instance if and only if @xmath1384 is a yes - instance .",
    "we first show that if @xmath1384 is a yes - instance then @xmath1385 is a yes - instance . for this , let @xmath1386 be a matching of  @xmath0 of size at least  @xmath3 . if @xmath1387 , then @xmath1388 and hence @xmath1389 .",
    "therefore , @xmath62 is a matching of  @xmath1390 of size at least @xmath3 and thus @xmath1380 is a yes - instance . if @xmath1391 , then there exists a unique edge @xmath1392 such that @xmath1393 .",
    "this implies that @xmath1394 and @xmath1395 .",
    "therefore , @xmath1396 is a matching of  @xmath1390 and @xmath1397 .",
    "thus , @xmath1380 is again a yes - instance .",
    "we now show that if @xmath1380 is a yes - instance , then @xmath1384 is also a yes - instance",
    ". let @xmath1398 be a matching of  @xmath1390 of size at least @xmath1399 .",
    "note that , since @xmath1400 , any matching of  @xmath1390 is also a matching of  @xmath0 . if @xmath1401 , then @xmath1384 is clearly a yes - instance , since @xmath1398 is a matching of  @xmath0 of size at least @xmath3 .",
    "suppose now that @xmath1402 , that is ,  @xmath1403 .",
    "then , since @xmath1383 in the graph @xmath172 by assumption , there exists at least one vertex @xmath1404 .",
    "thus , since also @xmath1405 ( as @xmath1398 is a matching of  @xmath1390 ) , it follows that the edge set @xmath1406 is a matching of  @xmath0 and @xmath1407 .",
    "thus , @xmath1384 is a yes - instance .    in the following",
    ", @xmath1408 denotes the size of a maximum matching of graph  @xmath0 .",
    "furthermore , for every subset @xmath50 we denote @xmath1409 .",
    "[ matching - bound - kernel - lem ] let @xmath0 be a graph .",
    "if @xmath1410 for every @xmath86 , then @xmath1411 .",
    "let @xmath1412 and let @xmath1413\\}$ ] be a maximum matching of  @xmath0 .",
    "then @xmath1414 is a vertex cover of  @xmath0 , and thus @xmath1415 for every vertex @xmath1387 .",
    "now suppose that there exists some @xmath1416 $ ] such that @xmath1417 and @xmath1418 .",
    "let then @xmath1419 and @xmath1420 .",
    "then there exists the alternating path @xmath1421 , and thus the set @xmath1422 is a matching of  @xmath0 of size @xmath1423 , which is a contradiction to the maximality of  @xmath62 .",
    "therefore , for every @xmath1416 $ ] we have that @xmath1424 or @xmath1425 . without loss of generality ,",
    "we assume in the following that @xmath1425 , for every @xmath1426 $ ] .",
    "let now @xmath1427 .",
    "then @xmath1428 , since @xmath1414 is a vertex cover of  @xmath0 .",
    "hence , since @xmath1425 , for every @xmath1416 $ ] , it follows that there exists at least one @xmath1429 $ ] such that @xmath1430 .",
    "that is , the set @xmath1431\\}$ ] is also a vertex cover of  @xmath172 . since @xmath1432 by assumption",
    ", it follows that @xmath1433 .",
    "this implies @xmath1434 since @xmath1435 .",
    "finally , since @xmath1431\\}$ ] is a vertex cover and @xmath1436 for every @xmath1416 $ ] , it follows that @xmath1437 .",
    "now we are ready to provide our kernelization algorithm for maximum matching , together with upper bounds on its running time and on the size of the resulting kernel .",
    "[ kernel - thm]maximum matching , when parameterized by the solution size @xmath3 , admits a kernel with at most @xmath1377 vertices and at most @xmath1377 edges . for an @xmath2-vertex graph",
    "the kernel can be computed in  @xmath1378 time .",
    "let @xmath1384 be an instance of parameterized maximum matching .",
    "our kernelization algorithm either returns yes , or it computes an equivalent reduced instance @xmath1438 .",
    "first , we exhaustively apply reduction rule  [ red - rule-1 ] by visiting every vertex once and removing every vertex of degree greater than @xmath1439 in the current graph .",
    "notably , since vertex removals can only reduce the degree of the remaining vertices , the algorithm does not need to visit any vertex twice .",
    "if we construct an instance @xmath1440 during this procedure , that is , if we remove @xmath3 vertices from @xmath0 , then we stop and return yes .",
    "the correctness of this decision follows immediately by the facts that @xmath1440 is clearly a yes - instance and reduction rule  [ red - rule-1 ] is safe by lemma  [ rule-1-safe - lem ] .",
    "the exhaustive application of reduction rule  [ red - rule-1 ] can be implemented to run in @xmath1441 time , as follows .",
    "every time we discover a new vertex @xmath43 with @xmath1383 in the current graph ( and for the current value of the parameter  @xmath3 ) , then we do not actually remove @xmath43 from the current graph but we mark it as `` removed '' and we proceed to the next vertex .",
    "furthermore we keep in a counter  @xmath1442 the number of vertices that have been marked so far as `` removed '' .",
    "note that , to check whether we need to apply reduction rule  [ red - rule-1 ] on a vertex  @xmath43 , we only need to visit at most all _ marked _ neighbors of @xmath43 and at most @xmath1443 _ unmarked _ neighbors in the initial graph @xmath0 .",
    "thus , since there exist at every point at most @xmath1444 marked vertices , we only need to check less than @xmath1445 neighbors of  @xmath43 in the initial graph @xmath0 to decide whether we mark @xmath43 as a new `` removed '' vertex .",
    "thus , since there are @xmath2 vertices in total , the whole procedure runs in @xmath1378 time .",
    "denote by @xmath1446 the total number of vertices that have been marked as `` removed '' at the end of this process .",
    "next , we exhaustively apply reduction rule  [ red - rule-2 ] by removing every unmarked vertex @xmath43 that has only marked neighbors in @xmath0 .",
    "since such a vertex @xmath43 remained unmarked during the exhaustive application of reduction rule  [ red - rule-1 ] , @xmath43  has less than  @xmath3 _ marked _ neighbors and less than @xmath1447 _ unmarked _ neighbors in @xmath0 , that is , at most @xmath1445 neighbors in total .",
    "thus we can check in @xmath916 time whether a currently unmarked vertex has only marked neighbors ; in this case we mark @xmath1448 as `` removed '' .",
    "this process can be clearly done in @xmath1441 time .",
    "let @xmath400 be the induced subgraph of @xmath172 on the unmarked vertices and let @xmath1449 .",
    "note that every vertex of @xmath400 has at least one and at most @xmath1450 neighbors in @xmath400 .",
    "finally we count the number of vertices and edges of @xmath400 in @xmath1378 time .",
    "this can be done by visiting again all unmarked vertices @xmath43 and their unmarked neighbors in @xmath0 .",
    "if @xmath400 has strictly more than @xmath1451 vertices or edges , then we stop and return yes .",
    "otherwise the kernelization algorithm returns the kernel @xmath1438 , which has @xmath1377 vertices and @xmath1377 edges .",
    "consequently , the kernelization algorithm runs in  @xmath1378 time in total .",
    "it remains to prove that , if at least one of  @xmath1452 or @xmath1453 is greater than @xmath1451 , then @xmath1438 is a yes - instance .",
    "assume otherwise that @xmath1438 is a no - instance , that is , @xmath1454 .",
    "then it follows by lemma  matching - bound - kernel - lem that @xmath1455 , which is a contradiction .",
    "this completes the proof of the theorem .    applying the matching algorithm due to micali and vazirani  @xcite to the kernel we obtained by theorem  [ kernel - thm ]",
    ", we achieve the following result .",
    "[ matching - algorithm - from - kernel - cor]maximum matching , when parameterized by solution size  @xmath3 , can be solved in  @xmath1456 time .",
    "let @xmath1384 be an instance of parameterized maximum matching , where @xmath3 is the solution size .",
    "first we apply to  @xmath1384 the kernelization algorithm of theorem  [ kernel - thm ] , which returns either yes or an equivalent instance @xmath1457 with @xmath1377 vertices and @xmath1377 edges .",
    "then we compute a maximum matching @xmath1458 of the graph @xmath1459 using any of the known algorithms , e.g. ,  the algorithm of micali and vazirani  micaliv80 .",
    "it computes @xmath1458 in  @xmath1460 , then return yes , otherwise return no . in total",
    ", maximum matching can be thus solved in  @xmath1456 time .",
    "our work heads at stimulating a general research program which systematically exploits the concept of fixed - parameter tractability for polynomially solvable problems . for several fundamental and widely known problems ,",
    "the time complexities of the currently fastest algorithms are upper - bounded by polynomials of large degrees .",
    "one of the most prominent examples is arguably the celebrated polynomial - time recognition algorithm for _ perfect graphs _ , whose time complexity still remains @xmath1461  @xcite .",
    "apart from trying to improve the _ worst - case _ time complexity for such problems , which may be a very difficult ( if not impossible ) task , the complementary approach that we propose here is to try to spot a _",
    "parameter _ that causes these high - degree polynomial - time algorithms and to separate the dependency of the time complexity from this parameter such that the dependency on the input size becomes as close to linear as possible .",
    "we believe that the `` fpt  inside  p '' field is very rich and offers plenty of research possibilities .",
    "we conclude with three related topics that may lead to further interactions .",
    "first , we remark that in classical parameterized complexity analysis there is a growing awareness concerning the polynomial - time factors that often have been neglected  @xcite .",
    "notably , there are some prominent fixed - parameter tractability results giving _ linear - time _ factors in the input size ( but quite large exponential factors in the parameter ) ; these include bodlaender s famous `` linear - time '' algorithm for computing treewidth  @xcite and the more recent `` linear - time '' algorithm for computing the crossing number of a graph  @xcite .",
    "interestingly , these papers emphasize `` linear time '' in their titles , instead of `` fixed - parameter tractability '' . in this spirit ,",
    "our result for longest path in interval graphs is a `` linear - time '' algorithm where the dependency on the parameter is not exponential  @xcite but _ polynomial_. in this line of research , fomin et al .  studied graph and matrix problems on instances with small treewidth .",
    "in particular the authors presented , among other results , an @xmath1462 randomized algorithm for computing the cardinality of a maximum matching and an @xmath1463 randomized algorithm for actually constructing a maximum matching , where @xmath3 is an upper bound for the treewidth of the given graph  fominlpsw_matching - treewidth_soda17 .",
    "second , polynomial - time solvability and the corresponding _",
    "lower bounds _ have been of long - standing interest , e.g. , it is believed that the famous 3sum problem is only solvable in quadratic time and this conjecture has been employed for proving relative lower bounds for other problems  gajentaano95 . very recently , there was a significant push in this research direction with many new relative lower bounds  abboudw14,abboudgw15,bringmann14 .",
    "the `` fpt  inside  p '' approach might help in `` breaking '' these nonlinear relative lower bounds by introducing useful parameterizations and striving for pl - fpt  results . in this direction",
    "an interesting negative result appeared very recently by abboud et al .",
    "abboud - vw - w - soda16 who proved that , unless some plausible complexity assumptions fail , for any @xmath1464 there does not exist any algorithm with running time @xmath1465 for @xmath1466-approximating the diameter or the radius of a graph , where @xmath3 is an upper bound for the treewidth .",
    "in contrast , the authors proved that both the diameter and the radius can be computed in @xmath1467 time  @xcite .    finally ,",
    "coming back to a practical motivation for `` fpt inside  p '' , it has been very recently observed that identifying various parameterizations for the same problem may help in designing meta - algorithms that ( dynamically ) select the most appropriate solution strategy ( also specified by respective parameters)this approach is known as `` programming by optimization ''  hoos12 .",
    "note that so far this line of research is still in its infancy with only one known study  @xcite for np - hard problems ; following this approach might also be promising within our `` fpt inside  p '' framework .",
    "a.  abboud , f.  grandoni , and v.  v. williams .",
    "subcubic equivalences between graph centrality problems , apsp and diameter . in _ proceedings of the 26th annual acm - siam symposium on discrete algorithms ( soda ) _ , pages 16811697 , 2015 .",
    "a.  abboud and v.  v. williams .",
    "popular conjectures imply strong lower bounds for dynamic problems . in _ proceedings of the 55th ieee annual symposium on foundations of computer science ( focs ) _",
    ", pages 434443 , 2014 .",
    "a.  abboud , v.  v. williams , and j.  wang .",
    "approximation and fixed parameter subquadratic algorithms for radius and diameter . in",
    "_ proceedings of the 27th annual acm - siam symposium on discrete algorithms ( soda ) _ , 2016 .",
    "i.  abraham , a.  fiat , a.  v. goldberg , and r.  f.  f. werneck .",
    "highway dimension , shortest paths , and provably efficient algorithms . in _ proceedings of the 21st annual acm - siam symposium on discrete algorithms ( soda ) _ , pages 782793 , 2010 .",
    "k.  bringmann .",
    "why walking the dog takes time : frechet distance has no strongly subquadratic algorithms unless seth fails . in _ proceedings of the 55th ieee annual symposium on foundations of computer science ( focs ) _ , pages 661670 , 2014 .",
    "j.  chen , s.  lu , s.  sze , and f.  zhang . improved algorithms for path , matching , and packing problems . in",
    "_ proceedings of the 18th annual acm - siam symposium on discrete algorithms ( soda ) _ , pages 298307 , 2007 .                f.  v. fomin , d.  lokshtanov , m.  pilipczuk , s.  saurabh , and m.  wrochna .",
    "fully polynomial - time parameterized computations for graphs and matrices of low treewidth . in _ proceedings of the 28th annual acm - siam symposium on discrete algorithms ( soda ) _ , pages 14191432 , 2017 .",
    "f.  v. fomin , d.  lokshtanov , and s.  saurabh .",
    "efficient computation of representative sets with applications in parameterized and exact algorithms . in _ proceedings of the 25th annual acm - siam symposium on discrete algorithms ( soda ) _ , pages 142151 , 2014 .",
    "a.  c. giannopoulou , g.  b. mertzios , and r.  niedermeier .",
    "polynomial fixed - parameter algorithms : a case study for longest path on interval graphs . in",
    "_ proceedings of the 10th international symposium on parameterized and exact computation ( ipec ) _ , pages 102113 , 2015 .",
    "j.  guo , f.  hffner , and r.  niedermeier . a structural view on parameterizing problems : distance from triviality . in _ proceedings of the 1st international workshop on parameterized and exact computation ( iwpec ) _ ,",
    "pages 162173 , 2004 .",
    "s.  hartung and h.  h. hoos .",
    "programming by optimisation meets parameterised algorithmics : a case study for cluster editing . in",
    "_ proceedings of the 9th learning and intelligent optimization conference ( lion ) _ , pages 4358 , 2015 .",
    "i.  koutis , g.  l. miller , and r.  peng . a nearly-@xmath1470 time solver for sdd linear systems . in _ proceedings of the ieee 52nd annual symposium on foundations of computer science ( focs ) _ ,",
    "pages 590598 , 2011 .",
    "s.  micali and v.  v. vazirani .",
    "an @xmath1471 algorithm for finding maximum matching in general graphs . in _ proceedings of the 21st annual symposium on foundations of computer science ( focs ) _ , pages 1727 , 1980 .",
    "r.  niedermeier .",
    "reflections on multivariate algorithmics and problem parameterization . in _ proceedings of the 27th international symposium on theoretical aspects of computer science , ( stacs ) _ , pages 1732 , 2010 ."
  ],
  "abstract_text": [
    "<S> we study the design of fixed - parameter algorithms for problems already known to be solvable in polynomial time . </S>",
    "<S> the main motivation is to get more efficient algorithms for problems with unattractive polynomial running times . here </S>",
    "<S> , we focus on a fundamental graph problem : longest path , that is , given an undirected graph , find a maximum - length path in  @xmath0 . </S>",
    "<S> longest path is np - hard in general but known to be solvable in @xmath1  time on @xmath2-vertex interval graphs . </S>",
    "<S> we show how to solve longest path on interval graphs , parameterized by vertex deletion number  @xmath3 to proper interval graphs , in @xmath4 time . </S>",
    "<S> notably , longest path is trivially solvable in linear time on proper interval graphs , and the parameter value  @xmath3 can be approximated up to a factor of  4 in linear time . from a more general perspective </S>",
    "<S> , we believe that using parameterized complexity analysis may enable a refined understanding of efficiency aspects for polynomial - time solvable problems similarly to what classical parameterized complexity analysis does for np - hard problems .    </S>",
    "<S> * keywords : * polynomial - time algorithm , longest path problem , interval graphs , proper interval vertex deletion  set , data reduction , fixed - parameter algorithm . </S>"
  ]
}
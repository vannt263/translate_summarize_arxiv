{
  "article_text": [
    "in this paper we present a technique to numerically solve second order elliptic problems in domains @xmath1 which are not necessarily polygonal .",
    "in addition , we deal with domains divided in two regions by a curved interface @xmath2 .",
    "in particular we use a high order hybridizable discontinuous galerkin method ( hdg ) @xcite where the computational domain do not exactly fit the curved boundary or interface .",
    "the main motivation of this technique is being able to use high order polynomial approximations and keep high order accuracy using triangular meshes having only straight elements .",
    "one of the first ideas in this direction was introduced by @xcite for the one - dimensional case and then extended to higher space dimensions for pure diffusion @xcite and convection - diffusion @xcite equations . in their work , the mesh does not fit the domain and the distance between the computational domain and the boundary @xmath3 is of only order @xmath4 , making this method attractive from a computational point of view . in addition , @xcite applied this method to couple boundary element and hdg methods to solve exterior diffusion problems .",
    "however , only dirichlet boundary value problems have been considered since neumann data can not be handled in the same way as we will explain below .",
    "we will see that for the neumann boundary case the proposed technique works properly if the computational domain is order @xmath0 away from the actual boundary .",
    "the work presented here focuses first on the treatment of part of the boundary where a neumann data is prescribed .",
    "it is important to understand this situation in order to extend the ideas to problems having a curved interface .",
    "in fact , the transmission conditions at the interface involve jumps of the scalar variable and jumps of the normal component of the flux .",
    "the computational jump of the scalar variable can be treated considering the _ transferring _ technique of @xcite and the computational jump of the normal component of the flux can be handled using the _ extrapolation _",
    "method for the neumann data that we will describe in the following sections .",
    "+ one of the first methods that approximate neumann boundary conditions on curved domains considering non - fitted meshes was introduced by @xcite . here ,",
    "a piecewise linear finite element method was considered and optimal convergence in the @xmath5-norm was shown .",
    "in addition , the same authors solved a semi - definite neumann problem on curved domains using a similar technique ( @xcite ) .",
    "they showed optimal behavior of the errors in @xmath5 and @xmath6-norms using again piecewise linear elements . on the other hand , higher order approximation finite element methods require to properly fit the boundary in order to keep high order accuracy .",
    "for instance , isoparametric element can be considered ( @xcite,@xcite ) . in the case of elliptic interface problems ,",
    "usually the curve describing the interface is interpolated by a piecewise linear computational interface . hence",
    ", super - parametric elements near the interface must be considered in order to achieve high order accuracy ( @xcite ) .",
    "this article aims to develop a high order method based on a triangulation of the domain involving only straight elements . as we will discuss",
    ", the boundary / interface must be interpolated by piecewise linear function in order to obtain the expected rates of convergence .",
    "since most of the methods based on linear fitting are only second order accurate , we believe our method constitutes a competitive alternative .",
    "the rest of the manuscript is organized as follows",
    ". we will begin by setting notation .",
    "then , we will describe the technique for a boundary - value problem where neumann data is prescribed in part of the boundary .",
    "in particular , we will discuss the proper choice of the _ paths _ that will _ transfer _ the dirichlet and impose the neumann data .",
    "we will provide numerical simulations showing the performance of the method .",
    "then , we will adapt these ideas in order to solve a elliptic interface problem and show numerical experiments validating the technique .",
    "let @xmath7 be a a triangulation constructed by the union of disjoint straight triangles that approximates a bounded domain @xmath8 and does not necessarily fit its boundary .",
    "the dirichlet and neumann part of the boundary @xmath9 are denoted by @xmath10 and @xmath11 ( @xmath12 , @xmath13 ) .",
    "we also assume that the computational boundary , @xmath14 , satisfies @xmath15 and @xmath16 where @xmath17 and @xmath18 are part of @xmath14 with dirichlet ( @xmath19 ) and neumman ( @xmath20 ) data , respectively .",
    "let @xmath21 be the distance between @xmath9 and @xmath14 .",
    "we denote by @xmath22 the diameter of the element @xmath23 and by @xmath24 its outward unit normal . the meshsize @xmath25 is defined as @xmath26 .",
    "let @xmath27 be the set of interior edges of @xmath28 and @xmath29 the edges at the boundary .",
    "we say that an edge @xmath30 if there are two elements @xmath31 and @xmath32 in @xmath28 such that @xmath33 . also , we say that @xmath34 if there is an element @xmath35 such that @xmath36 .",
    "we set @xmath37 . for each element @xmath38 in the triangulation @xmath28 , we denote by @xmath39 the space of polynomials of degree at most @xmath40 defined on the element @xmath38 . for each edge",
    "@xmath41 in @xmath42 @xmath43 is the space of polynomials of degree at most @xmath40 defined on the edge @xmath41 . given an element @xmath38 , @xmath44 and @xmath45 denote the @xmath46 and @xmath47 products , respectively .",
    "thus , for each @xmath48 and @xmath49 we define @xmath50",
    "we consider the following model problem :            here @xmath19 and @xmath20 are unknowns . as we mentioned before",
    ", @xmath19 can be calculated following @xcite , i.e. , @xmath57 where @xmath58 , is a path starting at @xmath59 and ending at @xmath60 ; and @xmath61 is the tangent vector to @xmath58 .",
    "this expression comes from integrating ( [ problem2 ] ) along the path @xmath58 ( see @xcite for details ) .    in principle",
    ", any kind of numerical method using polygonal domains can be used to solve the equations in @xmath7 .",
    "however , it is desirable to consider those methods where an accurate approximation of @xmath62 is obtained , since the boundary condition ( [ new_bc ] ) depends on that flux .",
    "we also notice from ( [ new_bc ] ) that the same idea will not work for @xmath20 since a similar expression will involve derivatives of @xmath62 which are not well approximated by the numerical method .",
    "@xmath66 ^ 2 : & & \\quad{\\boldsymbol{v}}|_k\\in   [ \\mathcal{p}^{k}(k)]^2&&\\quad\\forall k\\in \\textsf{d}_h\\},\\\\ w_h&=\\{w\\in l^2(\\textsf{d}_h ) : & & \\quad w|_{k}\\in \\mathcal{p}^{k}(k ) & & \\quad\\forall k\\in \\textsf{d}_h\\},\\\\ m_h&=\\{\\mu \\in l^2(\\mathcal{e}_h ) : & & \\quad \\mu|_e \\in \\mathcal{p}^{k}(e ) & & \\quad \\forall e \\in \\mathcal{e}_h\\}.\\end{aligned}\\ ] ]      [ hdg_eq ] @xmath67 for all @xmath68 .",
    "here @xmath69 is the approximation of @xmath19 proposed by @xcite .",
    "more precisely , let @xmath70 .",
    "we define the operator @xmath71 ^ 2 \\rightarrow [ \\mathcal{p}^k(\\mathbb{r}^2)]^2 $ ] such that @xmath72 for all @xmath73 ^ 2 $ ] . then , for @xmath74 , @xmath75 where @xmath76 is the triangle where @xmath41 belongs . in other words",
    ", @xmath77 is the standard extension of a polynomial to the whole @xmath78 space . on the other hand",
    ", @xmath79 is an approximation of @xmath20 which is still unknown . in subsection",
    "[ sec : gnh ] we propose to replace ( [ nbc ] ) by an equation involving known quantities at the right hand side .",
    "the representation of @xmath69 in ( [ gh_d ] ) is independent on the integration path .",
    "let @xmath85 be a point on a boundary edge @xmath41 .",
    "previous work have proposed two ways to determine a point @xmath86 in @xmath9 and hence construct @xmath58 :    1 .",
    "if @xmath85 is a vertex , an algorithm developed by @xcite uniquely determines @xmath86 as the closest point to @xmath85 such that @xmath58 does not intersect another path before terminating at @xmath9 and does not intersect the interior of the domain @xmath1 .",
    "in addition , if @xmath85 is not a vertex , its corresponding path is defined as convex combination of those paths associated to the vertices of @xmath41 . for the dirichlet boundary value problem",
    ", the authors in @xcite numerically showed optimal rates of convergence with this choice of @xmath58 when @xmath21 is of order @xmath25 , that is , order @xmath87 for @xmath88 and @xmath89 and order @xmath90 for the numerical trace @xmath91 .",
    "2 .   on the other hand , @xcite proposed to determine @xmath86 such that @xmath61 is normal to the edge @xmath41 . in this case",
    "these authors theoretically proved that if @xmath21 is of order @xmath25 , the order of convergence for @xmath88 and @xmath89 is indeed @xmath87 , but the order for @xmath91 is only @xmath92 .",
    "however , if @xmath21 is of order @xmath93 the numerical trace also superconverges with order @xmath90 .",
    "moreover , they also showed numerical evidence indicating that the numerical trace optimally superconverges even though @xmath21 is of order @xmath25 .",
    "+    let now be @xmath41 a boundary edge with vertices @xmath94 and @xmath95 .",
    "we denote by @xmath96 the part of @xmath9 determined by @xmath97 and @xmath98 as it is shown in fig .",
    "[ fig1 ] . in this paper",
    "we assume that if @xmath99 ( or @xmath100 then @xmath101 @xmath102 .",
    "the algorithm in * ( p1 ) * can be easily modified to satisfy this assumption . on the other hand , the paths defined in * ( p2 )",
    "* will not always satisfy this condition .",
    "the main idea is to characterize @xmath96 using the parameterization _ induced _ by the family of paths .",
    "more precisely , let @xmath105\\}$ ]",
    ". then @xmath106\\},\\end{aligned}\\ ] ] where we recall that @xmath107 and @xmath108 are the length and tangent vector of the segment joining @xmath109 and @xmath110 .",
    "we define the space        notice that ( [ neumann ] ) becomes @xmath113 for all @xmath114)$ ] ; hence , there is no need of computing the derivative of @xmath115 .",
    "+ on the other hand , we observe that if @xmath61 and @xmath116 were independent of @xmath117 ( for example , if @xmath96 were polygonal and @xmath61 perpendicular to @xmath41 ) , then @xmath118 would be constant and hence @xmath119 becomes a standard space of polynomials through pulling back polynomials from the interval @xmath120 $ ] . as we will see in the numerical experiments provided in next section ,",
    "this technique performs optimally if @xmath61 and @xmath24 have the same direction .      in this section",
    "we present numerical experiments showing the performance the extrapolation technique and the influence of the choice of paths . since the size of the computational domain changes with @xmath25",
    ", we measure the errors @xmath121 , @xmath122 and @xmath123 by using the following norms : @xmath124 ^ 2}}{|\\textsf{d}_h|^{1/2}},\\\\ \\|e_{\\hat{u}}\\|_{\\mathcal{e}_h}:&=&\\left(\\frac { \\sum_{k\\in \\textsf{d}_h } h_k \\|\\textsf{p}_{\\partial } u - \\hat{u}_h \\|^2_{l^2(\\partial k ) } } { \\sum_{k\\in\\textsf{d}_h } h_k |\\partial k|}\\right)^{1/2}.\\end{aligned}\\ ] ] here @xmath125 is the @xmath126projection over @xmath127 with @xmath128 .",
    "in addition we compute an element - by - element postprocessing , denoted by @xmath129 , of the approximate solution @xmath88 , which provides a better approximation for the scalar variable when @xmath130 ( @xcite ) . given an element @xmath38 we construct @xmath131 as the only function in @xmath132 such that @xmath133 and @xmath134 is the polynomial in @xmath135 ( set of functions in @xmath132 with mean zero ) satisfying @xmath136 in the purely diffusive case , this new approximation of @xmath137 has been proven to converge with order @xmath90 for @xmath138 when the domain is polygonal ( @xcite ) , and also when it has curved dirichlet boundary ( @xcite ) .",
    "+ we set @xmath139 in all the experiments of this section . in subsection",
    "[ subsec : h ] we show that deteriorate convergence can happen if @xmath140 .",
    "however , we will see in subsection  [ subsec : h2 ] that optimal convergence is obtained when @xmath141 .      in the following examples",
    "the computational domain is constructed in such a way that the distance @xmath21 is of order @xmath25 .",
    "moreover , @xmath142 , @xmath143 and @xmath144 are chosen in order that @xmath145 is solution the exact of ( [ model_problem ] ) .",
    "+      our first example consist of approximating a squared domain @xmath146 by a squared subdomain satisfying @xmath140 as fig .",
    "[ fig_ex1 ] shows .",
    "let @xmath147 , @xmath148 and the family of paths is computed according to * ( p2)*.     and @xmath149 ) approximating the domain of example [ ex1 ] .",
    "( figure obtained from @xcite),title=\"fig : \" ]   and @xmath149 ) approximating the domain of example [ ex1 ] .",
    "( figure obtained from @xcite),title=\"fig : \" ]    in table  [ table : r1_square ] we display the history of convergence for different polynomial degree ( @xmath150 and @xmath151 ) and meshsizes ( @xmath152 and @xmath153 ) .",
    "we observe that the error of @xmath137 and @xmath62 behaves optimally with convergence rate of order @xmath87 .",
    "moreover the error of numerical trace and postprocessed solution also converge with order @xmath87 , which is not optimal for the standard hdg method on polygonal domains . even though , the errors @xmath154 are always small than @xmath155 .",
    "we attribute this lack of superconvergence to the fact that the neumann condition ( [ neumann ] ) is being imposed on @xmath89 and not on @xmath80 as in the standard hdg method .",
    "+            b. cockburn , j. gopalakrishnan and r. lazarov , _ unified hybridization of discontinuous galerkin , mixed and continuous galerkin methods for second order elliptic problems _ , siam j. numer .",
    ", 47 ( 2009 ) , pp ."
  ],
  "abstract_text": [
    "<S> we generalize the technique of [ _ solving dirichlet boundary - value problems on curved domains by extensions from subdomains _ , siam j. sci . comput . </S>",
    "<S> 34 , pp . a497a519 ( 2012 ) ] to elliptic problems with mixed boundary conditions and elliptic interface problems involving a non - polygonal interface . </S>",
    "<S> we study first the treatment of the neumann boundary data since it is crucial to understand the applicability of the technique to curved interfaces . </S>",
    "<S> we provide numerical results showing that , in order to obtain optimal high order convergence , it is desirable to construct the computational domain by interpolating the boundary / interface using piecewise linear segments . in this case </S>",
    "<S> the distance of the computational domain to the exact boundary is only @xmath0 .    </S>",
    "<S> = 1    discontinuous galerkin , high order , curved boundary , curved interface . </S>"
  ]
}
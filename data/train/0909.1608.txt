{
  "article_text": [
    "_ multiframe motion segmentation _ is a very important yet challenging problem in computer vision .",
    "given multiple image frames of a dynamic scene taken by a ( possibly moving ) camera , the task is to segment the point correspondences in those views into different motions undertaken by the moving objects . a more formal definition of the problem appears below .    consider a dynamic scene consisting of @xmath1 rigid - body motions undertaken by @xmath1 objects relative to a moving camera .",
    "suppose that @xmath2 frames of images have been taken by the camera , and that @xmath3 feature points @xmath4 are detected on the objects .",
    "let @xmath5 be the coordinates of the feature point @xmath6 in the @xmath7 image frame for every @xmath8 and @xmath9 , and form @xmath3 trajectory vectors : @xmath10'\\in\\mathbb{r}^{2f}$ ] .",
    "the task is to separate these trajectories @xmath11 into independent motions undertaken by those objects .",
    "there has been significant research on this subject over the past few years ( see  @xcite for a comprehensive literature review ) . according to the assumption on the camera model",
    ", those algorithms can be divided into the following two categories :    1 .   _ affine methods _",
    "@xcite assume an affine projection model , so that the trajectories associated with each motion live in an affine subspace of dimension at most three ( or a linear subspace of dimension at most four containing the affine subspace ) .",
    "thus , the motion segmentation problem is equivalent to a subspace clustering problem .",
    "state - of - the - art affine algorithms that have been applied to this problem include random sample consensus ( ransac )  @xcite , multi - stage learning ( msl )  @xcite , generalized principal component analysis ( gpca )  @xcite , local subspace affinity ( lsa )  @xcite , and agglomerative lossy compression ( alc )  @xcite .",
    "2 .   _ perspective methods _  @xcite assume a perspective projection model under which point trajectories associated with each moving object lie on a multilinear variety",
    ". however , clustering multilinear varieties is a challenging task and very limited research has been done in this direction .",
    "an extensive benchmark for comparing the performance of these algorithms is the hopkins 155 database  @xcite .",
    "it contains 155 video sequences along with features extracted and tracked in all frames for each sequence , 120 of which have two motions and the rest ( 35 sequences ) consist of three motions .    in this paper",
    "we examine the performance of a recent affine method , spectral curvature clustering ( scc )  @xcite , on the hopkins 155 database and compare it with other affine algorithms that are mentioned above ( their results have been reported in @xcite and also partly online at http://www.vision.jhu.edu/data/hopkins155/ ) .",
    "our experiments show that scc outperforms all the above - mentioned affine algorithms on this benchmark dataset with an average classification error of 1.41% for two motions and 4.85% for three motions .",
    "in contrast , the smallest average misclassification rate among all other affine methods is 2.40% for sequences containing two motions and 6.26% for sequences with three motions , both achieved by alc  @xcite .",
    "the rest of the paper is organized as follows .",
    "we first briefly review the scc algorithm in section  [ sec : scc_nn ] , and then test in section  [ sec : experiments ] the scc algorithm against other common affine methods on the hopkins 155 database .",
    "finally , section  [ sec : discussions ] concludes with a brief discussion .",
    "the scc algorithm  ( * ? ? ?",
    "* algorithm  2 ) takes as input a data set @xmath12 , which is sampled from a mixture of affine subspaces in the euclidean space @xmath13 and possibly corrupted with noise and outliers . the number of the subspaces @xmath1 and the maximum - dimensional .",
    "this strategy works quite well in many cases , as demonstrated in  @xcite .",
    "] of their dimensions @xmath14 should also be provided by the user .",
    "the output of the algorithm is a partition of the data into @xmath1 ( disjoint ) clusters , @xmath15 , representing the affine subspaces .",
    "the initial step of the scc algorithm is to randomly select from the data @xmath16 subsets of ( distinct ) points with a fixed size @xmath17 .",
    "based on these @xmath16 @xmath18-tuples , an affinity matrix @xmath19 is formed in the following way .",
    "let @xmath20 be the index sets of the @xmath16 subsets .",
    "then for each @xmath21 and @xmath22 , if @xmath23 , we set @xmath24 by default ; otherwise , we form the corresponding union @xmath25 $ ] and define @xmath26 in which @xmath27 is a fixed constant whose automatic choice is explained later , and @xmath28 is the ( squared ) polar curvature  @xcite of the corresponding @xmath29 points , @xmath30_{i\\in \\mathrm{i}}$ ] .",
    "that is , @xmath31    note that the numerator @xmath32 is , up to a factor , the ( squared ) volume of the @xmath18-simplex formed by the @xmath29 points @xmath33 .",
    "therefore , the polar curvature can be thought of as being the volume of the simplex , normalized at each vertex , averaged over the vertices , and then scaled by the diameter of the simplex .",
    "when @xmath29 points are sampled from the same subspace , we expect the polar curvature to be close to zero and consequently the affinity close to one . on the other hand , when they are sampled from mixed subspaces , the polar curvature is expected to be large and the affinity close to zero .    the scc algorithm next forms pairwise weights @xmath34 from the above multi - way affinities : @xmath35 and applies spectral clustering  @xcite to find @xmath1 clusters @xmath36 .    in order to refine the clusters , scc then re - samples @xmath37 @xmath18-tuples from each of the clusters @xmath38 , and re - applies the rest of the steps .",
    "this procedure is repeated until convergence for a best segmentation , and is referred to as _ iterative sampling _ ( see  ( * ? ? ?",
    "3.1.1 ) ) .",
    "its convergence is measured by the total _ orthogonal least squares ( ols ) _ error of @xmath14-dimensional affine subspace approximations @xmath39 to the clusters @xmath36 : @xmath40 in situations where the ground truth labels of the data points are known , we also compute the misclassification rate : @xmath41    the parameter @xmath42 of eq .",
    "is automatically selected by scc at each iteration in the following way .",
    "let @xmath43 denote the vector of all the @xmath44 squared polar curvatures computed in an arbitrarily fixed iteration .",
    "the algorithm applies the following set of candidate values which represent several scales of the curvatures : @xmath45 and chooses the one for which the error of eq .   is minimized . a quantitative derivation of the above selection criterion for @xmath42 appears in ( * ? ? ?",
    "* section  3.1.2 ) .",
    "it is also demonstrated in @xcite that scc will often fail with arbitrary choices of @xmath42 .",
    "we present ( a simplified version of ) the scc algorithm below ( in algorithm [ alg : scc ] ) .",
    "we note that the storage requirement of the algorithm is @xmath46 , and the total running time is @xmath47 , where @xmath48 is the number of sampling iterations performed ( till convergence , typically @xmath49 ) .",
    "data set @xmath50 , maximal intrinsic dimension @xmath14 , and number of subspaces @xmath1 ( required ) ; number of sampled subsets @xmath16 ( default = @xmath51 ) @xmath1 disjoint clusters @xmath36 . +",
    "* steps : * + sample randomly @xmath16 subsets of @xmath50 ( with indices @xmath52 ) , each containing @xmath17 distinct points .",
    "[ step : columnwise_polcurv_computation ] for each sampled subset @xmath53 , compute the squared polar curvature of it and each of the remaining @xmath54 points in @xmath50 by eq .  .",
    "sort increasingly these @xmath44 squared curvatures into a vector @xmath43 .",
    "[ step : spectral_clustering ] * for * @xmath55 to @xmath17 * do * +    * form the matrix @xmath19 by setting @xmath56 in eq .  , and estimate the weights @xmath34 via eq .   * apply spectral clustering  @xcite to these weights and find a partition of the data @xmath50 into @xmath1 clusters    * end for * + record the partition @xmath36 that has the smallest total ols error , i.e. , @xmath57 of eq .",
    ", for the corresponding @xmath1 @xmath14-dimensional affine subspaces .",
    "sample @xmath37 subsets of points ( of size @xmath17 ) from each @xmath58 found above and repeat steps  [ step : columnwise_polcurv_computation ] and [ step : spectral_clustering ] to find @xmath1 newer clusters .",
    "iterate until convergence to obtain a best segmentation .",
    "we compare the scc algorithm with other state - of - the - art affine methods , such as alc  @xcite , gpca  @xcite , lsa  @xcite , msl  @xcite , and ransac  @xcite , using the hopkins 155 benchmark  @xcite .",
    "we also compare the performance of affine methods with an oracle , the reference algorithm ( ref )  @xcite , which fits subspaces using the ground truth clusters and re - assigns points to its nearest subspace . though it can not be used in practice , ref verifies the validity of affine camera model and provides a basis for comparison among practical algorithms .",
    "the results of the latter six methods ( including ref ) are already published in @xcite , so we simply copy them from there .",
    ".summary information of the hopkins 155 database : number of sequences ( # seq . ) , average number of feature points ( @xmath3 ) , and average number of frames ( @xmath2 ) in each category for two motions and three motions separately . [ cols=\"<,^,^,^,^,^,^ \" , ]     [ tab : three_motions ]    we use the default value @xmath59 for all scc @xmath60 when applied to the 155 sequences . also , in order to mitigate the randomness effect due to initial sampling , we repeat the experiment 100 times and record only the average misclassification rate . for each scc @xmath60 , we report in table  [ tab : two_motions ] the mean and median of the averaged errors for sequences with two motions , and in table  [ tab : three_motions ] results on three motions . figure  [ fig : hists ] shows histograms of the misclassification rates with the percentage of sequences in which each algorithm achieved a certain error .",
    "the corresponding histograms for other methods are shown in  ( * ? ? ?",
    "* figure 3 ) .",
    "+    looking at tables  [ tab : two_motions ] and [ tab : three_motions ] , we conclude that the scc algorithm ( with all six pairs @xmath60 ) outperforms all competing methods ( in terms of the mean error ) and is very close to the reference algorithm ( ref ) . in the checkerboard category",
    ", it even has a better performance than ref .",
    "in addition , scc has the following two strengths in comparison with most other affine methods .",
    "first , as we observed in experiments , the performance of scc is not so sensitive to its free parameter @xmath16 . in contrast , the alc algorithm is very sensitive to its distortion parameter @xmath61 and often gives incorrect number of clusters , requiring running it for many choices of @xmath61 while having no theoretical guarantee .",
    "second , scc can be directly applied to the original trajectory vectors ( which are very high dimensional ) , thus preprocessing of the trajectories , i.e. , dimensionality reduction , is not necessary ( unlike gpca and lsa ) .",
    "finally , we remark that scc also outperforms some perspective methods , e.g. , local linear manifold clustering ( llmc )  @xcite ( their misclassification rates are also available at http://www.vision.jhu.edu/data/hopkins155/ ) .",
    "the histograms ( in figure  [ fig : hists ] ) show that the scc algorithm obtains a perfect segmentation for 80% of two - motion sequences and for over 50% of three - motion sequences . under this criterion ,",
    "scc is at least comparable to the best algorithms ( alc , lsa @xmath62 , msl ) and the reference algorithm ( ref ) ; see ( * ? ? ?",
    "* figure 4 ) and ( * ? ? ?",
    "* figure 3 ) .",
    "moveover , scc has the shortest tails ; its worst case segmentation error ( about 35% ) is much smaller than those of other methods some of which are as large as 50% .",
    "regarding running time , the scc algorithm generally takes 1 to 2 seconds to process one sequence on a compute server with two dual core amd opteron 64-bit 280 processors ( 2.4 ghz ) and 8 gb of ram .",
    "it is much faster than the best competitors such as alc , lsa @xmath62 , and msl ( see their computation time in ( * ? ? ?",
    "* table 6 ) and ( * ? ? ?",
    "* tables 3 & 5 ) while also noting that there were all performed on faster machines ) .    at the time of finalizing this version we have found out about the very recent affine method of sparse subspace clustering ( ssc )  @xcite which reportedly has superb results on the hopkins 155 database and outperforms the results reported here for both scc and ref",
    ". it will be interesting to test its sensitivity to its tuning parameter @xmath63 in future work .",
    "we thank the anonymous reviewers for their helpful comments and for pointing out reference @xcite to us .",
    "special thanks go to rene vidal for encouraging comments when this manuscript was still at an early stage and for referring us to the workshop .",
    "thanks to the institute for mathematics and its applications ( i m a ) , in particular doug arnold and fadil santosa , for an effective hot - topics workshop on multi - manifold modeling that we participated in . the research described in this paper",
    "was partially supported by nsf grants # 0612608 and # 0915064 .",
    "r.  hartley and r.  vidal .",
    "the multibody trifocal tensor : motion segmentation from 3 perspective views . in _ proceedings of the 2004 ieee computer society conference on computer vision and pattern recognition _ , volume  1 , pages 769775 , 2004 .",
    "s.  rao , r.  tron , r.  vidal , and y.  ma .",
    "motion segmentation via robust subspace separation in the presence of outlying , incomplete , or corrupted trajectories . in _",
    "ieee conference on computer vision and pattern recognition ( cvpr ) _ , 2008 .",
    "k.  schindler , j.  u , and h.  wang .",
    "perspective @xmath64-view multibody structure - and - motion through model selection . in _ proc . of the 9th european conference on computer vision _ , volume  1 , pages 606619 , 2006 .",
    "y.  sugaya and k.  kanatani",
    ". geometric structure of degeneracy for multi - body motion segmentation . in _",
    "lecture notes in computer science _ ,",
    "volume 3247/2004 , chapter statistical methods in video processing , pages 1325 .",
    "springer berlin / heidelberg , 2004 ."
  ],
  "abstract_text": [
    "<S> we apply the spectral curvature clustering ( scc ) algorithm to a benchmark database of 155 motion sequences , and show that it outperforms all other state - of - the - art methods . </S>",
    "<S> the average misclassification rate by scc is 1.41% for sequences having two motions and 4.85% for three motions .    </S>",
    "<S> * supp .  </S>",
    "<S> webpage * : http://www.math.umn.edu/@xmath0lerman/scc/ </S>"
  ]
}
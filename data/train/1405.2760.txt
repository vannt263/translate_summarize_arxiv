{
  "article_text": [
    "the conventional view that the internet is very large but finite follows from the fact that the set of all possible internet addresses is finite , and in addition that the memory of any computer connected to the internet is also finite . though this view may dominate for many more years",
    ", the world of networks and data is so large that this is not a convenient way to represent reality .",
    "thus our paper takes a continuous and infinite view of such systems , in line with approaches taken in other fields of science with regard to search for specific objects . in such systems",
    "we are faced with three basic questions :    1 .",
    "can we estimate the time it takes to find a particular object ?",
    "2 .   is there any certainty that we will actually find the data object in finite time ? or will we just engage in an eternal and futile search ? 3 .",
    "since any search activity is bounded by key resources such as computational time and , increasingly by energy consumption , is there a way to estimate whether objects may be found with finite energy and if so what is the energy needed ?",
    "calling upon recent research , this paper will attempt to answer some of these questions .      just as in molecular science",
    "the identity and location of the molecules with which a given `` searcher molecule '' will bind are unknown , in network and data engineering we often do not know the characteristics of the data items which are of interest to us , nor do we know which specific data items actually respond to the requirements of a search or where they are . only search in an unbounded data and network universe will eventually provide some data items that are of interest to the end user .    within computer science ,",
    "many efforts have been devoted to developing appropriate languages and data organisations that can help formulate requests , organise the data appropriately in advance of search to achieve fast data identification and extraction from the web @xcite . in packet and peer - to - peer networks ,",
    "effective algorithms have been studied for neighbourhood search @xcite , and routing in opportunistic networks @xcite while diffusion models have also been studied for sensor networks @xcite .",
    "learning based search in large networks @xcite is also studied for large clouds where network and data links @xcite make the network connexions more complex .",
    "search for objects which are hard to find has been addressed in robotics for dangerous environments @xcite but this still remains an area that relies heavily on human guidance and intuition .",
    "much of the earlier theoretical work on search originates in biology @xcite .",
    "physics @xcite and biochemistry @xcite often consider `` an infinite universe for search '' , where the objects ( molecules ) that conduct the search and the objects that need to be found ( yet other molecules with which they may react or bind , or specific sites on cells ) are tiny @xcite . moving or fixed objects are a few angstroms in size , and move in 3d volumes which are millimeters , centimetres or larger in diameter .",
    "furthermore the actual boundaries of the volumes considered may be difficult to define .",
    "similar problems arise in biology where predators seek preys in a very large search space @xcite .",
    "much of the work in this area uses diffusion models which offer a relatively simple and convenient analytical framework to represent approximately the discrete time steps of a long search process , together with _",
    "lvy flights _ or instantaneous jumps @xcite to represent the accelerated movement of the searcher , or the sudden escape of the object that is being sought .",
    "such models were also used for performance analysis of computer systems .",
    "for instance , when a diffusion represents the waiting time for a processing unit or a memory sub - system , the instantaneous jump is the service time of the first request that arrives when the processor or memory unit is idle @xcite .",
    "the situation is similar in very large networks containing huge volumes of data @xcite .",
    "the objects which conduct the search are programs which crawl through the web , looking for specific data objects which are tiny in comparison to the vast data sets contained in thousands of computers .",
    "the paper is organised as follows .",
    "section [ model ] discusses a framework within which the above questions may be addressed using a simple mathematical model that represents a finite set of @xmath0 statistically identical searchers that seek a given object independently of each other .",
    "the searchers are subject to `` accidents '' and may be destroyed or `` killed '' .",
    "however each of the searchers may search `` for ever '' if they are left to their own devices , simply because the search space is infinite .",
    "thus , a time - out is set for each of the searchers independently , and when an individual searcher s time - out runs out , the searcher stops in its tracks and is removed and it will ( after another finite time interval ) be replaced by a new searcher that acts independently but statistically identically , with respect to its previous incarnation . in the sequel",
    "we will see that the time - out is essential , and that together with the statistically identical behaviour of successive incarnations of searchers , it guarantees that the object will eventually be found even when @xmath1 .    in section [ avg - comput ]",
    "we see that even when searchers make poor choices about the direction in which they should orient their search , and drift progressively away from the object being sought , one of the searchers will eventually find the object even when @xmath1 .",
    "the formula for the average search time also allows us to estimate how the search time is reduced as a function of @xmath0 .",
    "we then consider the case where the success of the search requires that out of the @xmath0 searchers , @xmath2 of them must be successful .",
    "this arises in different applications .",
    "for instance , if multiple searchers all confirm that an object is found , this will provide greater assurance that the object has actually been found .",
    "also , once an object is found it may be necessary for multiple agents to provide separate keys or process it in order to extract its content .",
    "when coded packets are transmitted , it may be necessary to receive or find multiple copies of the packet in order to decode it correctly @xcite .    thus section [ asymptot1 ]",
    "presents a formula that is valid for any large value of time @xmath3 .",
    "this formula provides a quick estimate of the number @xmath0 of searchers which are needed if @xmath2 of them are required to find the object within time @xmath3 .",
    "while time is an important factor , an increasingly important and critical resource for ict is energy consumption .",
    "thus the amount of energy consumed by @xmath0 searchers during a successful search is also an important issue that we discuss in section [ energy ] .",
    "the first part of the analysis assumes that the search occurs in a spatially homogeneous and time - invariant search space .",
    "yet search in non - homogeneous media is quite important in many cases .",
    "for instance , in security applications , if a malignant searcher is trying to find a specific web site or network node that it wishes to attack , that site or node may in turn be much better protected in its own immediate vicinity so that the malignant search agent will have a harder time finding its target as it gets closer to it .",
    "this is the case when , for instance , a network node is being defended against cyberattacks , and deep inspection of packets approaching the node are being carried out and suspicious looking packets are simply dropped .    thus in section [ non - hom ] we describe results based on a numerical approach that computes the search time and the energy needed to find an object when the search space is non - homogeneous .",
    "in particular , we show that a form of phase transition occurs when the rate at which searchers are lost or destroyed is adjusted in conjunction with the speed at which the search agent can move towards the data object that it is seeking . with a proper choice of its speed , the searcher will always be successful in finding a well concealed or protected item , while in other cases it will never be successful in finding the object .",
    "consider @xmath0 independent search agents that are sent out simultaneously at time @xmath4 , in the quest for the same object .",
    "let @xmath5 be the @xmath6-th searcher s _ distance _ from its destination at time @xmath7 . since all the searchers start from the same point , their unknown distance from that object when they start is @xmath8 and therefore @xmath9 .",
    "the time it takes the @xmath6-th searcher to find the object is simply the first time that this distance @xmath5 becomes zero , or @xmath10 .",
    "take the @xmath0 values @xmath11 and order them so that @xmath12 are the variables @xmath13 rearranged in ascending order .",
    "a schematic representation of the search process for @xmath1 is presented in figure  [ diagram ] .    : in this example the search is relaunched twice due to timeout and loss , before the object is finally found . then , after one time unit , the search process starts again as before at the source with a new searcher being sent out.,scaledwidth=48.0% ]    the state of the @xmath6-th searcher at time @xmath7 is @xmath14 which can take one of the values @xmath15 defined as follows :    * @xmath16 : if the @xmath6-th searcher is searching and its distance from the destination is @xmath17 .",
    "we denote the probability density function ( pdf ) of the distance @xmath5 by @xmath18 $ ] . *",
    "@xmath19 : the @xmath6-th searcher s life - span has ended , and so has its search .",
    "note that this may have happened because it was destroyed or became lost , but this becomes known to the source via the time - out which is exponentially distributed with parameter @xmath20 .",
    "after an additional exponentially distributed delay of parameter @xmath21 , it is replaced at the source by a new searcher with the same identity . *",
    "@xmath22 : the @xmath6-th searcher has been destroyed or lost , and its search is ended ; for small @xmath23 and @xmath24 , this happens with a probability @xmath25 , where @xmath26 is the loss rate at distance @xmath27 .",
    "the time spent in this state is exponentially distributed with the same parameter @xmath20 as the life - span since the source realises that the searcher is lost or destroyed via the time - out effect . at the end of this exponentially distributed time , the searcher is handled just as if it has `` died '' . *",
    "@xmath28 : the @xmath6-th searcher has found the object being sought , and its search process stops .",
    "@xmath29 is modelled as a diffusion process , and when @xmath30 :    * the average change in the searcher s distance to the object being sought in a small time interval @xmath23 is @xmath31 and @xmath32}{\\delta t}$ ] , * the variance of the distance travelled by the searcher over the same time interval is @xmath33 , where @xmath34-(e[z_i(t+\\delta t)-z_i(t)])^2| z_i(t)=z]}{\\delta t}$ ] .",
    "however , for @xmath35 we also need to represent the `` race '' between the @xmath0 searchers , and the interaction between them due to the fact that when the first one reaches the object , the progress of all others is stopped .",
    "this race is modelled in @xcite using a parameter @xmath36 , @xmath37 , which represents the total rate of attraction exerted at time @xmath38 on the @xmath6-th searcher , by all other search processes , due to the fact that one of the others may have finished its search .",
    "the ergodic process @xmath39 can then be expressed in terms of a system of coupled equations describing a mixed continuous space ( diffusion ) supplemented by a discrete markov process , where the discrete part describes the states in which the search agents finds itself when it is not actually searching .",
    "the searcher can enter the rest state @xmath28 from the `` active '' state @xmath16 , the `` lost '' state @xmath22 and the `` time - out before retransmission '' state @xmath19 .",
    "we also see in figure  [ diagram ] that the searcher can enter the lost state from any position @xmath40 , and that a time - out can occur for a searcher that is in the lost state . since the behaviour of all searchers when they are not in the rest state are independent",
    ", it follows that the event that triggers the jump of searcher @xmath6 into the rest state does not depend on the prior state of searcher @xmath6 but on the state of the _ other _ searchers .",
    "obviously the case with @xmath41 is the most favourable , since the searcher is getting on average closer to the destination with time . when @xmath42 , the searcher on average moves _ away _ from the object of interest , for instance because intermediate locations provide wrong information on average .",
    "when the searcher lacks information altogether and is on average not getting closer nor further from the object , then @xmath43 .",
    "in most applications including web search , both the time and energy needed for a successful search are of interest , and we may assume that when the search agent is actually searching , i.e. , when it is in state @xmath16 , it consumes energy at a rate of one energy unit per unit time due to the use of computational processors and access to memories .",
    "no energy is being consumed by the search agent when it has been disabled or when the source is waiting to send out another searcher .",
    "@xmath44 will denote the total energy consumed by the @xmath0 searchers from time @xmath4 up to the instant when the minimum required number of @xmath2 search agents have found the object . in the best of cases all remaining @xmath45 search agents",
    "can then be stopped simultaneously",
    ".    however we may not be able to stop the remaining search agents through a common control program . in that case",
    "they will stop later either because they successfully complete , or are destroyed or lost , or they are stopped by time - outs . in this case",
    "we denote by @xmath46 the total energy that is consumed .",
    "consider the most common case where the search is successful as soon as any _ one _ of the @xmath0 searcher agents actually finds the object . to do this",
    "we construct an indefinitely repeating ergodic search process which simulates a situation in which all the @xmath0 searchers are sent out at time @xmath4 and as soon as the first of these finds the object , all other searchers are artificially stopped and instantaneously moved to the rest state where they remain for one time unit . after this `` rest '' the process is repeated indefinitely in the same manner , and state @xmath47 becomes a synchronised re - start state for all of the searchers .",
    "this transformation of the initial problem of finding the search time now allows us to use the steady - state distributions of the recurrent process so as to compute the average time @xmath48 $ ] needed from any successive start of the search until the first instance when state @xmath47 is reached again . if we denote by @xmath49 the steady - state probability that the recurrent process we have just described is in state @xmath47 , then it is easy to see that @xmath48 = p^{-1}-1 $ ] .    to answer question 1 of section [ basic ] ,",
    "when the medium in which the searchers move is homogeneous , i.e. @xmath50 , @xmath51 and @xmath52 , the the average time @xmath48 $ ] for the most successful searcher to find the object @xcite includes the searcher s loss rate @xmath53 , the average drift @xmath54 so that @xmath55 means that on average at each step the searcher gets closer to the object being sought , @xmath56 which is the second moment parameter of the searcher s random motion per unit time , while @xmath57 is the average time - out used by the sender at the source , @xmath58 is the average additional wait time before the search restarts , and @xmath59 is computed numerically as indicated below : @xmath60   = \\frac{\\mu+r+a}{n(\\mu+a)(r+a ) } [ e^{\\frac{d}{c}[b+\\sqrt{b^2 + 2c(\\lambda+r+a)}]}-1]\\ ] ] where @xmath61\\}$ ] so that @xmath62 for @xmath1 .    from this expression",
    "we make further observations , and answer question 2 of section [ basic ] :    * if the search is deterministic so that @xmath63 , then a simple calculation using lhpital s rule tells us that the search time is finite if @xmath55 and the searcher always heads towards the object being sought , while the object will never be found if @xmath64 . * on the other hand : * * if the search process is randomised so that @xmath65 and either @xmath66 and there are losses , or @xmath67 and there is a finite time - out , surprisingly enough the search time is _ finite _ when at each step the searcher gets _ on average further away _ from the object being sought , i.e. @xmath64 .",
    "this is due to the fact that the loss with @xmath68 or the time - out with @xmath67 , both act to curtail a search which is being unsuccessful , and the process is repeatedly restarted after the time - out until a given search is successful . * * the search time is finite also in the obvious case when the searcher gets on average closer to the object being sought @xmath55 .",
    "let us now turn to question 3 of [ basic ] . since energy is consumed by the search as a unit of energy per unit of search time when the search agents move through the search space , and hence _",
    "are not _ resting in one of the states @xmath69 , the energy expended by the search is proportional to the number of the searchers @xmath0 and to the time they spend in the state @xmath70 , namely @xmath71 = n(1+e[t_{1,n}])\\int_0^\\infty f_i(z)dz$ ] , since all searchers are statistically identical .",
    "this allows us to use to compute the average amount of energy which is expended by all of the @xmath0 searchers together until the instant when the object is found : @xmath72 = \\frac{1}{\\lambda + r + a } [ e^{\\frac{d}{c}[b+\\sqrt{b^2 + 2c(\\lambda+r+a)}]}-1 ] \\label{energy}\\ ] ]    in order to see how @xmath0 should be chosen to optimise both search time and energy , we have plotted the locus of @xmath48 $ ] and @xmath71 $ ] when the average time - out @xmath73 is varied for @xmath74 and @xmath75 in figure  [ fig - tradeoff](a ) . the relatively unfavourable case when the searcher does not really know which direction it should search , with @xmath76",
    "is shown in figure  [ fig - tradeoff](b ) .    in both of these cases there",
    "is definitely a range of values of @xmath73 where both energy and time are at close to their minima .",
    "+      figure  [ timeout ] shows the average energy consumed by the @xmath0 searchers if they are all stopped as soon as @xmath2 are successful : we see that the energy consumed decreases as @xmath0 increases .",
    "however , when the successful searchers stop but the unsuccessful ones continue until a time - out or until they are destroyed by some other cause , we observe that the energy consumed increases with @xmath0 . in figure",
    "[ opt](a ) we plot the minimum achievable average search time and energy consumption versus the number of searchers @xmath0 , and figure  [ opt](b ) shows the corresponding optimum time - outs .",
    "one sees that the minimum energy consumed until the object is found ( i.e. @xmath77 $ ] ) does not vary much with the number of searchers @xmath0 .",
    "however , in the absence of a stopping mechanism the minimum energy consumed by the search @xmath78 $ ] _ increases _ with @xmath0 while the optimum time - out decreases in order to reduce the additional energy wasted by active searchers after the completion of the search     for @xmath79 and different values of @xmath0 .",
    "when @xmath0 increases , the _ energy consumed increases if there is no stopping mechanism _ , and the opposite is true with the stopping mechanism.,scaledwidth=42.0% ]     for @xmath80,title=\"fig:\",scaledwidth=42.0% ] +   for @xmath80,title=\"fig:\",scaledwidth=42.0% ]",
    "consider a single searcher , and denote by @xmath81 and @xmath82 its search time and energy consumption , respectively .",
    "the probability that the searcher has reached the object by time @xmath38 is @xmath83 $ ] and its pdf @xmath84 .",
    "if the searcher is successful in locating the object in its first attempt then the search time and energy consumption are equivalent . on the other hand ,",
    "if the search is interrupted at least once then @xmath81 will exceed @xmath82 by the amount of time spent in states @xmath85 and @xmath86 waiting for the search to be relaunched .",
    "therefore , the joint pdf of @xmath81 and @xmath82 can be obtained by accounting for the possibilities of locating the object in @xmath87 attempts while including the time spent in states @xmath85 and @xmath86 in @xmath81 but not in @xmath82 .",
    "note that an attempt to locate the object can be interrupted by either time - out or loss , which are mutually independent and exponentially distributed random variables with parameters @xmath20 and @xmath53 .",
    "thus the pdf of the duration of a search time until its first interruption is @xmath88 $ ] , where @xmath89 is the probability that a pure diffusion process starting at distance @xmath8 reaches destination by time @xmath38 .",
    "the search may be interrupted randomly several times in this manner , and after each interruption it starts again at the source after a further delay .",
    "the last and hence successful attempt at reaching the destination has a duration whose pdf is @xmath90 .",
    "since each attempt is independent of its predecessors , it is then straightforward to compute the laplace transform ( lt ) of the joint density of @xmath81 and @xmath82 .",
    "the probability that @xmath2 out of @xmath0 independent searchers will be successful by time @xmath38 is @xmath91 = \\binom{n}{k}g(t)^k[1-g(t)]^{n - k}$ ] .",
    "define @xmath92 , the _ quantile function _ of the distribution of the search time for a single searcher .",
    "when @xmath0 is large , it is known that @xmath93 , the @xmath94-th sample quantile , is asymptotically normally distributed : @xmath95 ^ 2 } \\right)$ ] .",
    "thus for large @xmath0 the distribution of the time for @xmath2 out of @xmath0 searchers to be successful tends to a constant equal to the @xmath96-th quantile of @xmath97 . as a consequence",
    ", the number of searchers @xmath98 required to find the object in time @xmath3 when @xmath0 is large is given approximately by : @xmath99 since convergence to the normal distribution is fast , the expression provides a good approximation even for relatively small @xmath98 . the good agreement between the asymptotic approximation of and the detailed analysis for @xmath100",
    "is illustrated in figure  [ nosearchers ] .     that are required so that @xmath101 of them find the object within time @xmath3 .",
    "here @xmath76 , @xmath102 , @xmath103 , @xmath104 , @xmath105 and @xmath106 . , scaledwidth=42.0% ]",
    "a non - homogeneous search space may be motivated by the case where the object being sought is protected and well hidden : as the searcher approaches , its progress becomes more frequently blocked or destroyed , and a new searcher has to be sent out to replace it .",
    "however the search may progress faster as the searcher approaches the object since it may now have better information .",
    "this case can be analysed by using a finite number of `` segments '' to represent the search space with different parameters describing the searcher s movement as a function of its distance to the object : +   + @xmath107{segments}$ ] + the first segment is in the immediate proximity of the object starting at distance @xmath108 .",
    "each segment may have a different size , and as many segments as are needed can be used to describe the search accurately , with each segment being as small as necessary all not necessarily of the same size .",
    "this leads to a neat algebraic `` product form '' representation for the average search time @xcite .",
    "the destruction of the searcher followed by a time - out , as well as just the time - out itself , relaunches the search process allowing the searcher to improve its chance to find the object .",
    "however if the object being sought is well hidden then the searcher may never attain the object .",
    "figure  [ fig7 ] shows for successive segments @xmath2 of the search space , when the searcher s destruction rate ( defence ) varies as @xmath109 while the rate of approaching the object improves as @xmath110 with @xmath111 , then the average time @xmath112 $ ] to find the object tends to infinity even when near the object the search speed is greater and its randomness is smaller .",
    "however if the searcher s speed of approach to the object grows faster than the rate at which the searcher is destroyed , then @xmath112 $ ] remains finite and can tend to zero , while in the opposite case it will tend to infinity .",
    "average search time @xmath112 $ ] versus @xmath113 when @xmath114 and @xmath115 for different values of @xmath116 ; @xmath117 , @xmath106 , @xmath118 , @xmath119 and @xmath120 for @xmath121.,scaledwidth=42.0% ]",
    "many other aspects of search are not addressed in this paper .",
    "load sharing or balancing so as to achieve overall better performance in search is of great interest , to subdivide work among multiple subsets of searchers .",
    "it is also interesting to exploit the distinct capacities of multiple classes of searchers that are specialised in different features so as to improve both the time and energy needed for a search .",
    "another interesting area concerns how agents learn from each other .",
    "searchers may also conceal their knowledge of the location of an object , or deceive other searchers so as to impede them and maximise their own chances of success .",
    "malicious agents may use viruses @xcite to infect some other agents , and must stop their search from being successful , so that one may study schemes that optimally impede the search , rather than make it easier .",
    "thus this area still reserves many opportunities to study problems that are of value to search in big data sets and networks .",
    "t.  furche , g.  gottlob , g.  grasso , c.  schallhart , and a.  j. sellers , `` oxpath : a language for scalable data extraction , automation , and crawling on the deep web , '' _ vldb journal _ , vol .",
    "22 , no .  1 ,",
    "pp . 4772 , 2013 .",
    "m.  brambilla , s.  ceri , t.  furche , and g.  gottlob , eds . ,",
    "_ proceedings of the second international workshop on searching and integrating new web data sources , istanbul , turkey , august 31 , 2012 _ , ser .",
    "ceur workshop proceedings , vol .",
    "884.1em plus 0.5em minus 0.4emceur-ws.org , 2012 .",
    "j.  elias , f.  martignon , and g.  carello , `` very large - scale neighborhood search algorithms for the design of service overlay networks , '' _ telecommunication systems _ , vol .",
    "49 , no .  4 , pp .",
    "391408 , april 2012 .",
    "y.  wang , s.  jain , m.  martonosi , and k.  fall , `` erasure - coding based routing for opportunistic networks , '' in _ proc .",
    "sigcomm wshop on delay - tolerant networking ( wdtn05)_.1em plus 0.5em minus 0.4emphiladelphia , pa : acm , aug .",
    "2005 , pp . 229236 .",
    "t.  czachrski , k.  grochla , and f.  pekergin , `` diffusion approximation model for the distribution of packet travel time at sensor networks , '' in _ wireless systems and mobility in next generation internet _ ,",
    "lncs.1em plus 0.5em minus 0.4emberlin , heidelberg : springer - verlag , 2008 , vol . 5122 , pp .",
    "1025 .",
    "erol gelenbe is the denis gabor chair professor at imperial college in the department of electrical and electronic engineering . a fellow of ieee and acm",
    ", he graduated from the middle east technical university ( ankara ) and holds msc and phd degrees from the polytechnic institute of new york university .",
    "a member of the french national academy of engineering and of the science academies of hungary , poland and turkey , he is known for inventing the g - network queueing network models and the random neural network model and deriving their product form solutions , he is a designer of the qnap performance modeling package and of the flexsim object - oriented flexible manufacturing system simulation method , and developed the first random access fiber optics network ( xanthos ) , the multiprocessor voice packet based switch sycomore and the autonomic software defined network protocol cpn . he has received several prizes including acm sigmetrics life - time achievement award , the iet oliver lodge medal , the _ grand prix france telecom _ , and the _ in memoriam dennis gabor award _ from hungary .",
    "omer h. abdelrahman is a research associate in the intelligent systems and networks group at imperial college with a bsc in electrical engineering from university of khartoum , sudan .",
    "he holds an msc in communications and signal processing , and a phd in computer networks , both from imperial college .",
    "his research interests include stochastic performance models , search techniques in uncertain environments , and network security , and he is active in the eu fp7 project nemesys ."
  ],
  "abstract_text": [
    "<S> searching in the internet for some object characterised by its attributes in the form of data , such as a hotel in a certain city whose price is less than something , is one of our most common activities when we access the web . </S>",
    "<S> we discuss this problem in a general setting , and compute the average amount of time and the energy it takes to find an object in an infinitely large search space . </S>",
    "<S> we consider the use of @xmath0 search agents which act concurrently . both the case where the search agent knows which way it needs to go to find the object , and the case where the search agent is perfectly ignorant and may even head away from the object being sought . </S>",
    "<S> we show that under mild conditions regarding the randomness of the search and the use of a time - out , the search agent will always find the object despite the fact that the search space is infinite . </S>",
    "<S> we obtain a formula for the average search time and the average energy expended by @xmath0 search agents acting concurrently and independently of each other . </S>",
    "<S> we see that the time - out itself can be used to minimise the search time and the amount of energy that is consumed to find an object . </S>",
    "<S> an approximate formula is derived for the number of search agents that can help us guarantee that an object is found in a given time , and we discuss how the competition between search agents and other agents that try to hide the data object , can be used by opposing parties to guarantee their own success .    </S>",
    "<S> the internet ; big data ; the web ; search time ; energy consumption ; diffusion process ; brownian motion ; lvy flights . </S>"
  ]
}
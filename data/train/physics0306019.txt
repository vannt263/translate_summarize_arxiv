{
  "article_text": [
    "in performing linear collider physics and detector studies , one encounters a number of existing fortran77 , and new c++ and fortran95 software modules for event generation , detector simulation and analyis .",
    "stand - alone packages exist for pandora(c++ ) , pythia(f77 ) and whizard(f95 ) physics generation , and in some cases have been integrated into separate simulation packages for tesla simdet(f77 ) , asian jlc quicksim(c++ ) and american java fast monte carlo detector studies .",
    "individual physics analyses proceed by adopting one of the generator and detector simulation packages and often are hard to compare to similar analyses done in different environments .",
    "a java software framework  @xcite allows the use of different event generators , detector simulation packages and analyis modules in the same high level object - oriented ( oo ) environment .",
    "an environment which provides modern development tools for java physics and detector analysis modules using prototype hep class libraries  @xcite .",
    "the model allows networked graphical interactive applications , or batch single - pass processing of complete physics generation , parallel detector simulations and event analysis for full 500  fb@xmath0 simulated data samples .",
    "java histogram objects files can be saved for final presentation using the java analysis studio ( jas )  @xcite .    in this paper , java native interfaces ( jni ) for pandora , pythia and whizard",
    "linear collider physics event generators are described and used in defining a java framework with a common generator interface package , sec .",
    "[ sec : framework ] .",
    "sections  [ sec : generators ] and [ sec : detectors ] list the generator and detector simulation modules , respectively",
    ". a simple comparison of the different physics generators is made for a lc bench mark process in sec .",
    "[ sec : generator - comparisons ] .",
    "detector simulations using the u.s .",
    "fast monte carlo , tesla simdet and asian quicksim packages are compared in sec .",
    "[ sec : detector - models ] .",
    "details of interface implementations for the generators , and for executing simdet and quicksim detector simulations and accessing simulated quantities are outlined in sec .",
    "[ sec : jni ] .",
    "java software package organization and a brief discussion of the documentation is left for sec .",
    "[ sec : packages ] .",
    "several prototype java interfaces , classes and libraries have been written@xcite to provide a high level object - oriented physics generation , detector simulation and analysis environment for  linear collider studies .      a protype java object model has been developed to generalize the interface to physics generators such as pandora , pythia and whizard .",
    "the following methods are implemented through java native interfaces ( jni ) to the underlying c++ , fortran77 or fortran95 package :    * setup ( ) - set up generator configuration using default parameters .",
    "* initialize ( ) - initialize for selected beams , energy and physics process with given parameters . * generateevent ( ) - generate an event . * terminate ( ) - summarize generated data sample .",
    "one additional method is required to provide information about the generator .",
    "* getname ( ) - return generator name and version number .",
    "generator specific methods have been added such as    * list(int ) - list particles in the event .",
    "the useage of the java generator interface is outlined in the following excerpt :    .... // import the pythia generator classes .",
    "import hep.generator.pythia .",
    "* ;    // create a pythia process .",
    "pythia = new pythia ( ) ;    // set up a \" user - defined \" pythia process // with a string of parameters settings .",
    "pythia.give(parameters ) ;    // initialize the e+e- center - of - mass system .",
    "pythia.init(\"cms\",\"e+\",\"e-\",ecm ) ;    // run pythia to generate and list events .    for ( int n=1 ; n<=nevents ; n++ ) {      pythia.generateevent ( ) ;      pythia.list(1 ) ;    } ....    generator processes interfaces have been defined for classes which dynamically load predefined process settings , such as pythiaprocess for initializing pythia . a number of reference process classes have been written , such as * eetozh * for higgsstrahlung and * eetottbar * for top - pair production processes .",
    "the generator interface described above is used to provide `` eventgenerator '' modules for the american lcd framework@xcite . a java package * hep.lcd.generator *",
    "is abstracted to introduce different generator modules as alternative `` eventsource s '' :    * generator - defines a standard hep physics event generator module .",
    "* generatedevent - defines a generated event .",
    "* hepevent - provides a standard /hepevt/ implementation of a generated event .",
    "the useage of a lcd eventgenerator module is illustrated by    .... // import the lcd generator classes for pythia .",
    "import hep.lcd.generator.pythia .",
    "// create a pythia generator for given process .",
    "generator = new pythiagenerator(processname ) ;    // run to generate and dump the first event .    for ( int n=1 ; n<=nevents ; n++ ) {      event = generator.generateevent ( ) ;",
    "if ( n==1 ) event.dump ( ) ;    } ....    within the lcd java framework , event processing and analysis modules are added as `` driver s '' or `` processor s '' defined in a * hep.lcd.util.driver * package .",
    "the following classes outline the use of detector simulation and analysis modules :    .... public class anlpythiazhjets implements driver      public anlpythiazhjets ( )        add(detectorsimulation ) ;      add(analysis ) ;   or      add(new mcfast ( ) ) ;      add(new simdetmodule ( ) ) ;      add(new quicksimmodule ( ) ) ;      ...      add(new pythiazhjetanalysis ( ) ) ;    class pythiazhjetanalysis implements processor    void process(lcdevent event )      particles = event.get(\"mcparticles \" ) ;      tracks   = event.get(\"simdet tracks \" ) ;      objects = event.get(\"energy flow objects \" ) ;      ... ....    note that the java virtual machine ( jvm ) allows multiple detector simulations to run in independent computer memory space .",
    "the utility of java physics and analysis class libraries is illustrated in the following excerpts for the particle physics class    ....    int pdgid = particle.gettype().getpdgid ( ) ;    double [ ] pv = particle.getmomentum ( ) ;      double pt = math.sqrt(pv[0]*pv[0]+pv[1]*pv[1 ] ) ;      double tanth = pt / pv[2 ] ; ....    and the histogram analysis class    ....",
    "histogram(\"mass\").fill(particle.getmass ( ) ) ; ....    java framework applications can be built using standard hep analysis tools and run through convenient java packages so that    * gmake - compiles java and native code then creates a shared object library .",
    "* java -mx64 m genwhizard ... - loads java and all shared object libraries , executes whizard and writes a xxx.javahist unbinned histogram file .    after completing several jobs",
    ", the java analysis studio  @xcite can be used to combine histograms and make presentation plots .    ....",
    "jas &      open files : xxx.javahist yyy.javahist ...      overlay and format plots      save as postscript files ....",
    "three representative lc physics generators have been used in this development : ,  and .",
    "pythia which has been extensively tested by many experiments was used to provide checks on specific processes .",
    "pandora and whizard are new developments which also offer complete event generation capability .",
    "the  @xcite monte carlo provides simulations of selected two- and three - body processes and some illustrative beyond the standard model processes .",
    "initial state radiation , beam polarization , and final state spin correlations are included for all processes . in stand - alone applications pandora",
    "is used with the  @xcite interface package to generate final state events . a `` straight - forward '' interface from the java language to underlying pandora c++ methods , sec .",
    "[ sec : jni ] , is provided in a * hep.generator.pythia * java package , sec .",
    "[ sec : packages ] .",
    "the  @xcite monte carlo program allows generation of high - energy physics events including hard and soft interactions , parton distributions , initial and final state parton showers , multiple interactions , fragmentation and decay . a java - c - fortran77 interface described below provides full pythia functionality within the java environment .",
    "the  @xcite monte carlo system is designed for the efficient calculation of multi - particle scattering cross sections and simulated event samples .",
    "tree - level matrix elements are generated automatically for arbitrary partonic processes by calling external programs ( omega , madgraph and comphep ) . in this development , java - c - fortran95 interfaces to new whizard procedures for initialization , phase space integration ,",
    "event generation and summary was written to allow easy portability and compiler independence .",
    "models of the expected lc detector response to 500  gev  annihilation events are being developed .",
    "preliminary versions used in this study are described below , and compared in sec .",
    "[ sec : detector - models ] .",
    "the detailed java interface implementations are outlined in sec .",
    "[ sec : jni ] .",
    "the american lcd v1.4 detector simulation includes charged particle momentum smearing based on detailed error estimates , gaussian energy smearing for photons and neutral hadrons , and acceptance and energy threshold requirements .",
    "it does nt account for confusion in reconstructing calorimeter energy deposits resulting in perfect energy flow separation of charged and neutral components of jets .",
    "the european simdet v4.0 detector simulation includes parameterized charged and neutral energy smearing based on full ( * brahms * ) monte carlo simulations , acceptance requirements , and a realistic energy flow algorithm .",
    "the asian quicksim detector simulation includes the generation of tracker hits followed by track and vertex reconstruction .",
    "simulated calorimeter cell energy depositions are formed based on detailed detector simulations .",
    "detailed cluster finding and track - cluster matching are performed before writing out combined track information ..",
    "the pandora , pythia and whizard linear collider physics event generators are compared in fig  [ fig : jet - comparisons ] for lcd fast monte carlo detector simulations of higgsstrahlung , , events . in these studies",
    "all generators were run at e@xmath1 = 500  gev , and the higgs mass was set to 115  gev .",
    "pythia hadronization was used following all parton - level event generation processes . for pandora ,",
    "the nlc500 machine parameters were selected in simulating the beamstrahlung energy spectrum . while both pythia and whizard event generators used circe beamstrahlung simulation of the tesla machine .",
    "these different machine settings are not significant in this comparison .    overall , the generators were found to be in good agreement . in this study ,  generated events did not include the natural z width as seen in the jet - jet mass distributions shown in fig  [ fig : jet - comparisons]d ; a whizard deficiency that has been corrected following this work .",
    "in related studies  @xcite , the java framework was used to compare the simulation of background processes for ,  and  production from pandora with explicit final state simulations in whizard .",
    "these comparisons showed discrepancies due to the more precise treatment of polarization in pandora for exclusive processes .",
    "the simulation of inclusive , interferring processes in whizard was found to be the most complete , and the whizard madgraph amplitude calculation provided handelling of parton color flow information .",
    "in a  the higgs can be reconstructed through hadronic decays@xcite even in multijet final states .",
    "the jet - jet mass distributions for the american  ( fmc ) ,  and  detector simulations of higgstrahlung signal - only events with the z and higgs decaying hadronically are shown in fig  [ fig : zh - comparison ] . in these current simulations ,",
    "the lcd fmc jet - jet mass resolution is significantly better since it assumes `` perfect '' energy flow .",
    "more - realistic tesla simdet and jlc quicksim detector simulations give comparable jet energy resolutions but different mean reconstructed jet - jet masses .",
    "both these simulation models may be improved with the development of new techniques to resolve charged and neutral calorimeter clusters , and to correct for the loss of low energy tracks and clusters .        the overall performance of the java framework , event generators , detector simulations and jet analyis was quite acceptable for full 500  fb@xmath0 production runs .",
    "each generator was run separately with all three detector simulations being performed for the same generated event .",
    "the java framework itself and event generation and fragmentation typically took much less than 100  msec per event , with the longest times for multi - body processes .",
    "the detailed native simdet and quicksim detector simulations each took about 300 - 500  msec per event , depending on the type of events .",
    "the java jet - finding which included multiple passes to merge jets and the subsequent analysis took roughly 100  msec per event for each type of particle jet being found , e.g. for monte carlo particles , for jets found from reconstructable tracks and clusters , or for energy flow object jets .",
    "the typical overall event generation , multiple detector simulation , and jet analysis took about 1 - 1.5 seconds per event .",
    "+     batch jobs were labelled by the generator name and parameters that were set , and histogram folders were created for the different detector simulations . in the analysis of results , jas would open separate output histogram files in different folders and use the folder names to automatically generate plot legends .",
    "the physics generator , physics event , detector simulation and software framework implementations for all developed software modules are outlined in table  [ table : jniimplementations ] .    in generating events through the pandora - jni ,",
    "a java - c++ interface is used to allow the setting of different beam configurations , and to create physics processes to be added to pandora s box .",
    "pandora processes parameters , such as the higgs mass , are required for the java interface construction .",
    "once a pandora process has been created no java object to c++ object interface is needed .",
    "pandora generates primary partons which are accessed through the * hepevt - jni * and passed to pythia for fragmentation .",
    "the pythia - jni allows for independent event generation and fragmentation processing .",
    "the interface can be used to pass configurations through pygive or to use java classes such as `` eetozh '' to configure pythia for simulating the higgsstrahlung process .",
    "the pythia interface will be quickly replaced when new c++ versions of pythia are made available and tested .",
    "the whizard interfacing to fortran95 was simplified by creating a few simple fortran95 modules .",
    "whizard is configured by reading a `` whizard.in '' data file .",
    "future developments of the whizard java interface are planned .",
    "java interfaces to the hepevt data structure and stdhep output were written for multi - purpose use .",
    "after a generator fills hepevt , framework modules read the information and create event objects .",
    "these objects are later downloaded into hepevt structures that are accessed by fragmentation processes or by the different detector simulations .",
    "the design allows any combination of physics generator , fragmentation process or detector simulation .",
    "user analysis interfaces have also been written to allow one to use existing analysis packages .",
    "an interface to circe  @xcite is used to handle the initialization of beamstrahlung simulation parameters from the java framework for the pythia and whizard generators .",
    "the tauola  @xcite @xmath2-decay package was used to handle polarization effects .",
    "a simple java interface was written to allow testing of individual tau decay modes .",
    "the detector simulation packages have simple interfaces to set up , initialize and execute the simulations .",
    "care was taken to pass events into the packages through separate hepevt interfaces .",
    "the simulated detector responses for simdet and quicksim are accessed from underlying storage into java track and cluster classes to form reconstructed objects that are added to the lcd event for subsequent analysis .",
    "the simdet and quicksim interfaces follow a similar design model which could be generalized for other applications .        special utility packages , * pandorapythia * and * whizardpythia * , based on the pandora - pythia  @xcite software model for handelling the physics interfacing from pandora and whizard generated parton color flow information to pythia hadronization , are located in the * hep.lcd.util * package .",
    "software application programming interface ( api ) documentation on all java packages is available on the web .",
    "class inheritance and method signiture documentation is automatically generated .",
    "some documentation exists for most classes while comments on many self - explanatory methods are missing .",
    "+                     where javajdk locates the java development kit ( jdk ) , the include files are used by the jni implementations , and the library list usually includes linux specific libraries and general libraries that normally would be loaded into an executable image .",
    "the shared object library is located by the ld_library_path environment variable and loaded into the javavm following        i thank tony johnson for many useful discussions on java object modeling and for presenting this paper at the conference .",
    "tony provided an initial interface to the hepevt data structure .",
    "michael peskin and tim barklow provided guidance on interfacing to pandora and on passing the parton color flow information to pythia for fragmenting high - energy  jets .",
    "the pythia generator interface was extended to include pygive & pyinit in consultation w/ stephen mrenna .",
    "tim barklow , wolfgang kilian and thorsten ohl helped in defining the whizard interface and in implementing simple fortran95 procedures .",
    "i thank heinz - jrgen schreiber and akiya miyamoto for reviewing the detailed interfacing to the tesla simdet and jlc quicksim detector simulation packages .",
    "the java physics generator and detector simulation modules described in this paper are used within the java based software framework under development by the american lcd software group@xcite ."
  ],
  "abstract_text": [
    "<S> a java software framework allows modules written in different languages to be used in a high level object - oriented ( oo ) environment . </S>",
    "<S> java native interfaces ( jni ) for linear collider ( lc ) physics event generators are used in defining a common generator interface package . </S>",
    "<S> portable - jni for tesla and asian jlc detector simulation modules have been written for performing comparisons to the american lc detector simulation . </S>",
    "<S> physics and detector java analysis modules using prototype hep class libraries provide high level oo study tools . complete physics generation , parallel detector simulations and event analysis for full 500 fb@xmath0 simulated data samples are performed in single - pass batch jobs . </S>",
    "<S> java histogram objects files are saved for final presentation using the java analysis studio ( jas ) . </S>",
    "<S> the software architecture , jni designs and overall performance is presented . </S>",
    "<S> comparisons of american , asian and european detector simulations of higgsstrahlung events generated by pandora , pythia and whizard are made . </S>"
  ]
}
{
  "article_text": [
    "with the recent advances in quantum information processing , protecting a physical system from environmental noise became an ultimate desideratum in the construction of a large scale quantum computer .",
    "quantum error correcting codes , introduced about a decade ago @xcite , play an important role in this respect and allow the protection of fragile quantum computation against undesired errors via the use of redundancy .    an important class of quantum error correcting codes are the _ stabilizer codes _ @xcite , which are the quantum analog of classical linear codes @xcite .",
    "most known quantum error correcting codes belong to the class of stabilizer codes , which in turn are equivalent @xcite to the so - called _",
    "graph codes_. the latter , as their name states , are codes built using an undirected symmetric graph on @xmath0 vertices . for more details about their properties",
    "see @xcite .",
    "the performance of quantum codes is characterized by the _ distance _ of the code , a positive integer that specifies how many errors the code tolerates ( see e.g. @xcite for a detailed discussion ) .",
    "the classical analog of the quantum distance is the well - known hamming distance @xcite .",
    "a vast amount of work has been dedicated to constructing quantum error correcting codes with the highest possible distance , see @xcite for a list of up - to - date codes and bounds on the distance .",
    "given a quantum error correcting code , determining its distance is highly non - trivial and in general requires numerical methods . inspired by this , in the current article we investigate a combinatorial problem involving graphs and operations on graphs , whose solution provides the distance of a corresponding graph code . our solution is algorithmic and , although scales exponentially with the number of vertices of the graph , can nevertheless be of great use in the construction of quantum error correcting codes .",
    "the solution we provide is elegantly described by linear systems over finite fields with the properties of the solution space providing the distance of the code .",
    "although the space of solutions itself can be compactly described using a suitable basis , computing the distance reduces to searching among _ all _ possible solutions , and is this searching that makes the problem exponentially - hard .    even though the problem we investigate is motivated from the theory of quantum error correcting codes , we believe , given its combinatorial nature , that it may be of intrinsic interest to the discrete mathematics community , see e.g. @xcite for a related work .",
    "let @xmath1 be a graph with @xmath0 vertices where @xmath2 is the vertex set of @xmath3 and @xmath4 is the edge set of @xmath3 .",
    "a graph labelling of @xmath3 is a function @xmath5 , which can be written as an element of @xmath6 by using the ordering of the vertices .",
    "for example , if we have a graph with @xmath7 and a graph labelling @xmath8 , then we write the graph labelling simply as @xmath9 by requiring that the @xmath10 entry in the element of @xmath11 is the label of the @xmath10 vertex of the graph for @xmath12 . in order to simplify notation",
    "we will henceforth refer to the graph labelling @xmath13 as the element of @xmath6 instead of as the function @xmath14 . in order to define the diagonal distance of a graph @xmath3",
    "we need to define two operations which indicate the possible ways to move between graph labellings . defining these operations",
    "requires the notion of the adjacency matrix @xmath15 of a graph @xmath3 which is defined as the @xmath16 matrix with @xmath17 if @xmath18 ( there is an edge between @xmath19 and @xmath20 ) and @xmath21 if @xmath22 ( there is no edge between @xmath19 and @xmath20 ) .",
    "observe that @xmath6 is the set of all graph labellings of a graph with @xmath0 vertices and so our operations our defined as follows .    [ dfn1 ]",
    "define two operations applied to the graph labelling @xmath13 of @xmath3 for arbitrary @xmath23 by ,    * @xmath24 defined by @xmath25 .",
    "* @xmath26 defined by @xmath27 , @xmath28 .    where @xmath29 denotes the @xmath10 entry in @xmath13 .",
    "applied to a graph with 7 vertices . ]",
    "we name an element in the group of operations at the @xmath10 vertex of @xmath3 by @xmath30 ; that is , @xmath31 is an arbitrary element of the group of operations generated by the operations @xmath32 and @xmath33 with composition of maps as the group operation .",
    "the characteristic @xmath34-function is defined by , @xmath35 where @xmath36 is the identity map .",
    "we are now prepared to define the diagonal distance of a graph . intuitively , the diagonal distance of a graph @xmath3 is the minimum number of composed @xmath31 s that change the labelling @xmath13 of @xmath3 to a non - zero number of other labellings before returning to the original labelling @xmath13 .",
    "formally , summing the characteristic @xmath34-function over a collection of @xmath31 s counts the number of composed @xmath31 s different from the identity . by ensuring that the composition ( denoted by @xmath37 ) of the @xmath31 s equals the identity map @xmath38 , we guarantee that the graph returns to its original labelling .",
    "notice that the diagonal distance is invariant under different numberings of the vertices , as long as the notation remains consistent throughout the usage of this algorithm .",
    "[ dfn2 ] the diagonal distance @xmath39 of a graph @xmath3 is defined as , @xmath40",
    "given a graph @xmath3 , we construct the @xmath42 matrix @xmath43 by concatenating @xmath44 and @xmath15 as , @xmath45\\ ] ] where @xmath44 is the @xmath16 identity matrix and @xmath15 is the adjacency matrix of @xmath3 .",
    "we think of @xmath44 as the part of @xmath43 which keeps track of @xmath32 applied to @xmath3 and @xmath15 as the part of @xmath43 which keeps track of @xmath33 applied to @xmath3 .",
    "let @xmath46 be an arbitrary nonzero @xmath47 vector with entries in @xmath41 and write @xmath48\\ ] ] if @xmath49 @xmath50 , that is , if @xmath51 is in the nullspace of @xmath43 over @xmath41 , then we claim that @xmath51 contains the information about the application of @xmath31 s to @xmath3 which changes the labelling @xmath13 of @xmath3 to a non - zero number of other labellings before returning to the original labelling @xmath13 . in order to justify this claim",
    "we require the characteristic @xmath52-function defined for @xmath53 by @xmath54    by relating the characteristic @xmath52-function and the characteristic @xmath34-function to each other we can relate elements @xmath55 to a vector @xmath51 that is constructed to encode the information in @xmath31 .",
    "more precisely , we consider an arbitrary set of group operations @xmath56 and for each @xmath57 construct the vector @xmath51 with the @xmath10 entry given by @xmath58 and the @xmath59 entry given by @xmath60 , where @xmath53 .",
    "[ lma1 ] let @xmath61 be an arbitrary collection of @xmath62 .",
    "then for any @xmath31 in this collection , there exists @xmath63 such that @xmath57 and @xmath64 where @xmath51 is the @xmath65 vector with @xmath66 and @xmath67 for @xmath53 .",
    "let @xmath57 , where @xmath68 .",
    "note that since labellings are elements of @xmath41 , then @xmath69 and @xmath70 since these maps act by adding the same quantity twice .",
    "thus @xmath71 and so @xmath31 is equivalent to @xmath72 for some @xmath73 .",
    "construct the vector k as stated in the lemma . if @xmath74 , then @xmath75 and so either @xmath76 or @xmath77 , which implies that @xmath78 . if @xmath79 , then @xmath80 and so @xmath81 , which implies that @xmath82 .",
    "therefore , @xmath83 .",
    "we now prove another lemma which restricts the possible vectors @xmath51 , and thus the possible set of group operations @xmath56 , which can satisfy the definition of diagonal distance .",
    "[ lma2 ] let @xmath56 be a set of group operations with each @xmath57 , where @xmath63 .",
    "then , @xmath84 where @xmath51 is the @xmath65 vector with @xmath66 and @xmath67 for @xmath53 .",
    "write a labelling @xmath85 of a graph @xmath3 as an @xmath86 vector and represent @xmath87 by additive matrix operations as @xmath88 and @xmath89 , where @xmath90 is the @xmath86 matrix with @xmath91 in the @xmath10 entry and @xmath92 elsewhere and where @xmath93 is the @xmath10 column of @xmath15 .",
    "( @xmath94 ) then for an arbitrary @xmath57 we have that @xmath31 can be represented by an action on the labelling @xmath13 as @xmath95 .",
    "then for any set of group operations @xmath56 , @xmath96 if @xmath97 , then @xmath98 which yields @xmath99 and therefore every set of group operations @xmath56 has a representation as a vector in the kernel of @xmath43",
    ". + ( @xmath100 ) the backward implication follows from rewriting the previous equation , since we now assume that @xmath51 is some arbitrary vector in the kernel .",
    "use lemma @xmath91 to construct a set of group operations corresponding to @xmath51 . since @xmath101 by assumption , we get that @xmath102 then , as in the other direction , we have that @xmath103 , which implies that @xmath104 . + therefore , @xmath105    this leads to the main theorem regarding the computation of diagonal distance .",
    "[ thm1 ] the diagonal distance @xmath39 of a graph @xmath3 can be computed as @xmath106    by lemma [ lma1 ] and lemma [ lma2 ] we have that , @xmath107    an immediate consequence of this theorem is a deterministic algorithm for computing the diagonal distance @xmath39 of any graph @xmath3 . to run this algorithm , one must first compute a basis for @xmath108 .",
    "then the entire kernel must be spanned to check each vector @xmath51 for @xmath109 , and the smallest @xmath109 ( along with its corresponding vector , if extra information is desired ) is stored .",
    "once the algorithm terminates , the smallest of all the @xmath109s will have been stored and will be equal to the diagonal distance @xmath39 .",
    "we now generalize the diagonal distance of a graph over @xmath41 to the diagonal distance of a multigraph ( a graph that can have multiple edges between vertices ) over @xmath110 , where @xmath111 is prime .",
    "we define a graph labelling exactly as over @xmath41 and note that the set of all graph labellings is now @xmath112 .",
    "the operations @xmath32 and @xmath33 applied to a graph labelling is defined exactly as over @xmath41 , except the adjacency matrix @xmath15 of a multigraph @xmath3 is defined as the @xmath16 matrix with @xmath113 if there are @xmath51 occurrences of @xmath18 ( there are @xmath51 edges between @xmath19 and @xmath20 ) and @xmath21 if @xmath22 ( there is no edge between @xmath19 and @xmath20 ) .",
    "and @xmath114 applied to a multigraph with 7 vertices . ]",
    "we can then define the group of operations @xmath115 , with our operations defined over @xmath110 in order to obtain the straightforward generalization of theorem [ thm1 ] to @xmath110 by writing mod @xmath111 everywhere that mod @xmath116 is written in the proofs of lemma [ lma1 ] , lemma [ lma2 ] , and theorem [ thm1 ] .",
    "[ thm2 ] the diagonal distance @xmath39 of a graph @xmath3 can be computed as , @xmath117",
    "thus far we have considered the diagonal distance @xmath39 over @xmath41 of a graph @xmath3 and , more generally , the diagonal distance @xmath39 over @xmath110 of a multigraph @xmath3 . in either of these cases , we built into the definition of diagonal distance that @xmath97 where @xmath118 is the identity map .",
    "yet , we can extend this notion to requiring that @xmath119 , where @xmath120 is some specific map , e.g. the map sending the configuration @xmath121 to @xmath122 .",
    "let @xmath123 be a set of graph labellings ( i.e. codewords ) , where @xmath124 .",
    "we then want to determine the diagonal distance between any two graph labellings @xmath125 and @xmath126 in this set , the distance of the code , which can be defined as follows .",
    "[ dfn3 ] for a multigraph @xmath3 and a set of graph labellings @xmath127 , the diagonal distance @xmath128 between two graph labellings @xmath125 and @xmath126 is defined as , @xmath129 where @xmath3 is assumed to be originally labelled by @xmath125 and @xmath130 is the map sending the graph labelling @xmath125 to the labelling @xmath126 .    similarly to computing @xmath39 , we can minimize @xmath128 by minimizing the summation of the characteristic @xmath52-function of vector @xmath131 such that @xmath132 .",
    "it is a straightforward generalization of lemma [ lma1 ] and lemma [ lma2 ] in order to obtain the analogue of theorem [ thm2 ] for distance of a code .",
    "[ thm3 ] the generalized diagonal distance @xmath128 of a graph @xmath3 can be computed as , @xmath133 where @xmath3 is originally labelled by @xmath125 .",
    "note that the distance @xmath134 of a code @xmath127 is simply min@xmath135",
    "we run the main algorithm on the @xmath136-cycle graph in @xmath137 .",
    "it is well - known that the diagonal distance of the @xmath136-cycle is @xmath138 , for example by the set of operations shown in figure 3 .",
    "this can be found directly using our algorithm .",
    "-cycle . ]    to compute the diagonal distance , we must first set up the matrix @xmath139 $ ] .",
    "for the @xmath136-cycle , this is a @xmath140 matrix which has many possibilities depending on how the vertices are numbered .",
    "however , diagonal distance is invariant under different numberings and so we will just pick one .",
    "@xmath141 next we must compute the kernel of this matrix .",
    "some computation gives that the kernel has the following basis vectors .",
    "@xmath142 to find the vector in the kernel with the least amount of @xmath91 s in it , we must search through all the linear combinations of these basis vectors .",
    "it is easy enough to write a program to do this .",
    "for this example , it actually turns out that the linear combinations with the least amount of @xmath91 s in them are exactly the basis vectors themselves .",
    "notice that all of these vectors have @xmath138 @xmath91 s in them .",
    "therefore , the diagonal distance of the @xmath136-cycle graph is @xmath138 .",
    "v. gheorghiu acknowledges support from the natural sciences and engineering research council ( nserc ) of canada and from the pacific institute for the mathematical sciences ( pims ) .",
    "german luna department of mathematics and statistics , university of calgary , calgary ab t2n 1n4 , canada samuel reid department of mathematics and statistics , university of calgary , calgary ab t2n 1n4 , canada bianca de sanctis department of mathematics and statistics , university of calgary , calgary ab t2n 1n4 , canada vlad gheorghiu department of mathematics and statistics , university of calgary , calgary ab t2n 1n4 , canada institute for quantum science and technology , calgary ab t2n 1n4 , canada"
  ],
  "abstract_text": [
    "<S> motivated from the theory of quantum error correcting codes , we investigate a combinatorial problem that involves a symmetric @xmath0-vertices colourable graph and a group of operations ( colouring rules ) on the graph : find the minimum sequence of operations that maps between two given graph colourings . </S>",
    "<S> we provide an explicit algorithm for computing the solution of our problem , which in turn is directly related to computing the distance ( performance ) of an underlying quantum error correcting code . computing </S>",
    "<S> the distance of a quantum code is a highly non - trivial problem and our method may be of use in the construction of better codes . </S>"
  ]
}
{
  "article_text": [
    "modern software and database technology uses clever heuristics to minimize the number of accesses to external memory and to prefer _ streaming _ over _ random accesses _ to external memory .",
    "there has also been a wealth of research on the design of so - called _ external memory algorithms _ ( cf .",
    ", e.g.  @xcite ) .",
    "the classes considered in _ computational complexity theory _ , however , usually do not take into account the existence of different storage media .    in @xcite complexity classes for such a scenario",
    "were introduced .",
    "the two most significant resource bounds in this setting are imposed on the number of random accesses to external memory and the size of the internal memory .",
    "our complexity classes are based on a standard multi - tape turing machine .",
    "some of the tapes of the machine , among them the input tape , represent external memory devices .",
    "they are unrestricted in size , but access to these tapes is restricted by allowing only a certain number @xmath0 ( where @xmath2 denotes the input size ) of reversals of the head directions .",
    "this may be seen as a way of ( a ) restricting the number of sequential scans and ( b ) restricting random access to these tapes , because each random access can be simulated by moving the head to the desired position on a tape , which involves at most two head reversals .",
    "the remaining tapes of the turing machine represent the internal memory .",
    "access to these internal memory tapes ( i.e. , the number of head reversals ) is unlimited , but their size is bounded by a parameter @xmath1 .",
    "we let @xmath8 denote the class of all problems that can be solved on such an @xmath9-bounded deterministic turing machine , i.e. , a turing machine with @xmath10 external memory tapes which , on inputs of size @xmath2 , performs less than @xmath0 head reversals on the external memory tapes , and uses at most space @xmath1 on the internal memory tapes .",
    "similarly , we use @xmath11 and @xmath12 for the corresponding nondeterministic , respectively , randomized classes .",
    "the acceptance criterion for the @xmath5 classes is defined in the same way as for the class @xmath13 of _ randomized polynomial time _ , i.e. , `` no''-instances of a decision problem are _ always _ rejected , whereas `` yes''-instances are accepted with probability @xmath14 .    with the `` external memory '' motivation in mind ,",
    "we are mainly interested in classes where the number of head reversals and the internal memory size are comparably small , i.e. , of size @xmath15 .",
    "let us , however , emphasize that the main objective in introducing the @xmath16-classes is _ not _ to provide a `` realistic '' computation model suitable for designing efficient external memory algorithms , but to provide robust complexity classes which reflect the existence of different storage media and which are _ at least _ as powerful as any `` realistic '' external memory computation model .",
    "lower bounds _ in terms of these complexity classes will immediately imply lower bounds for the `` external memory complexity '' of certain problems . for a more detailed discussion on the motivations for considering the @xmath16-classes we refer the reader to the articles @xcite and the survey @xcite .",
    "obviously , our @xmath17-classes are related to the _ bounded reversal turing machines _ , which have been studied in classical complexity theory ( see , e.g. , @xcite ) .",
    "however , in bounded reversal turing machines , the number of head reversals is limited on _ all _ tapes , whereas in our model there is no such restriction on the internal memory tapes . thus , a priori , the @xmath17-classes are considerably stronger than conventional bounded reversal classes .    in @xcite ,",
    "_ lower bounds _ for particular problems , including the sorting problem , the set equality problem , and several query evaluation problems , have been shown for the deterministic and randomized @xmath17 classes .",
    "the relations between the @xmath6-classes and classical complexity classes , as well as the structural complexity of the @xmath6-classes remained as future tasks that are now addressed by the present paper , whose main results are    1 .   a trade - off between internal memory space and external memory head reversals , stating that internal memory can be compressed from size @xmath1 to @xmath18 at the expense of adding an extra factor @xmath1 to the external memory head reversals ( theorem  [ theorem : internal - memory - to - reversals ] ) .",
    "correspondences between the @xmath6 classes and `` classical '' time - bounded , space - bounded , reversal - bounded , and circuit complexity classes .",
    "for example , we obtain that @xmath19 ( corollary  [ cor : np - characterization ] ) and that @xmath20 ( theorem  [ thm : polylog - characterisation ] ) .",
    "hierarchies of @xmath7-classes in terms of increasing numbers of head reversals on external memory tapes .",
    "e.g. , for all @xmath21 , we obtain @xmath22{\\log n}),o(\\log n),o(1 ) )      \\varsubsetneq       \\rst(o(\\sqrt[k]{\\log n}),o(\\log n),o(1 ) )    $ ] ( theorem  [ thm : hier - o ] ) . for the special case",
    "where only _ one _ external memory tape is available , we obtain for all functions @xmath23 that adding one single extra head reversal leads to a strictly larger @xmath17 class ( theorem  [ thm : separation - r(n)->r(n)+1 ] ) .",
    "* organization . * in section  [ section : notation - and - main - results ] we formally introduce the @xmath6 classes and summarize what has been known about these classes .",
    "afterwards , in section  [ section : trade - off ] , we show a trade - off between internal memory size and external memory head reversals . section  [ section : em - vs - classical ] investigates the relations between the @xmath6-classes and `` classical '' time - bounded , space - bounded , reversal - bounded , and circuit complexity classes . in section",
    "[ section : hierarchies ] we prove hierarchies of deterministic and randomized @xmath17 classes in terms of increasing numbers of head reversals on external memory tapes .",
    "we close in section  [ section : conclusion ] with a few concluding remarks .",
    "this section fixes some basic notation , gives a formal introduction of the @xmath17 complexity classes that were proposed in @xcite , and summarizes what is known about the inclusion structure of these classes .",
    "we write @xmath24 to denote the set of natural numbers excluding 0 .",
    "all logarithms are to the base 2 unless otherwise stated .    as our basic model of computation",
    ", we use standard multi - tape nondeterministic turing machines ( ntms , for short ) .",
    "the turing machines we consider will have @xmath25 tapes .",
    "we call the first @xmath10 tapes _ external memory tapes _ ( and think of them as representing @xmath10 external memory devices ) ; the other @xmath26 tapes are called _ internal memory tapes_. the first external memory tape is always viewed as the ( read / write ) input tape .    without loss of generality",
    "we assume that our turing machines are normalized in such a way that in each step at most one of its heads moves to the left or to the right .",
    "a finite run of an ntm @xmath27 is a sequence @xmath28 of configurations of @xmath27 such that @xmath29 is an initial configuration , @xmath30 is a final configuration , and for all @xmath31 , @xmath32 can be reached from @xmath33 in a single computation step .",
    "let @xmath27 be an ntm and @xmath34 a finite run of @xmath27 .",
    "let @xmath35 be the number of a tape .",
    "we use @xmath36 to denote the number of times the @xmath37-th head changes its direction in the run @xmath34 .",
    "furthermore , we let @xmath38 be the number of cells of tape @xmath37 that are used by @xmath34 .",
    "[ def : boundedtm ] let @xmath39 and @xmath40 .",
    "an ntm @xmath27 is",
    "_ @xmath41-bounded _ , if every run @xmath34 of @xmath27 on an input of length @xmath2 ( for arbitrary @xmath42 ) satisfies the following conditions : ( 1 ) @xmath34 is finite , ( 2 ) @xmath43 to the number @xmath44 of changes of the head direction . as defined here",
    ", @xmath0 thus bounds the number of sequential scans of the external memory tapes rather than the number of changes of head directions . ] , and ( 3 ) @xmath45 , where @xmath25 is the total number of tapes of @xmath27 .",
    "[ def : st ] let @xmath39 and @xmath40 .",
    "a decision problem belongs to the class @xmath46 ( resp . , @xmath47 ) , if it can be decided by a deterministic ( resp . ,",
    "nondeterministic ) @xmath41-bounded turing machine .",
    "note that we put no restriction on the running time or the space used on the first @xmath10 tapes of an @xmath41-bounded turing machine .",
    "the following lemma shows that these parameters can not get too large .",
    "[ lem : time][lemma : tape - length - bound ] let @xmath39 and @xmath40 , and let @xmath27 be an @xmath41-bounded ntm .",
    "then for every run @xmath28 of @xmath27 on an input of size @xmath2 we have @xmath48 and thus   @xmath49    in @xcite , the lemma has only been stated and proved for deterministic turing machines , but it is obvious that the same proof also applies to nondeterministic machines ( to see this , note that , by definition , _ every _ run of an @xmath41-bounded turing machine is finite ) .    in analogy",
    "to the definition of _ randomized _ complexity classes such as the class @xmath50 of randomized polynomial time ( cf .",
    ", e.g. , @xcite ) , we also consider the randomized version @xmath5 of the @xmath17 and @xmath4 classes .",
    "the following definition of randomized turing machines formalizes the intuition that in each step , a coin can be tossed to determine which particular successor configuration is chosen in this step . for a configuration @xmath51 of an ntm @xmath27 , we write @xmath52 to denote the set of all configurations @xmath53 that can be reached from @xmath51 in a single computation step . each such configuration @xmath54 is chosen with uniform probability , i.e. , @xmath55 . for a run @xmath28 , the probability @xmath56 that @xmath27 performs run",
    "@xmath34 is the product of the probabilities @xmath57 , for all @xmath31 . for an input word @xmath58 , the probability @xmath59 that @xmath27 accepts",
    "@xmath58 is the sum of @xmath56 for all accepting runs @xmath34 on input @xmath58 .",
    "we say that a decision problem @xmath60 is solved by a @xmath61-rtm if , and only if , there is an ntm @xmath27 such that every run of @xmath27 has finite length , and the following is true for all input instances @xmath58 : if @xmath62 , then @xmath63 ; if @xmath64 , then @xmath65 .",
    "[ def : rst ] let @xmath66 and @xmath67 .",
    "a decision problem @xmath60 belongs to the class @xmath68 if it can be solved by a @xmath61-rtm that is @xmath41-bounded .    as a straightforward observation one obtains :    [ prop : detvsrandvsndet ] for all @xmath66 and @xmath67 , @xmath69 .    for classes @xmath70 and @xmath71 of functions we let",
    "@xmath72 the classes @xmath73 , @xmath74 , @xmath75 , and @xmath76 are defined in the analogous way .    as usual , for every complexity class @xmath77 , we write @xmath78 to denote the class of all decision problems whose _ complements _ belong to @xmath77 .",
    "note that the @xmath5-classes consist of decision problems that can be solved by randomized algorithms that _ always _ reject `` no''-instances and that accept `` yes''-instances with probability @xmath79 .",
    "in contrast to this , the @xmath80-classes consist of problems that can be solved by randomized algorithms that _ always _ accept `` yes''-instances and that reject `` no''-instances with probability @xmath79 . + from lemma  [ lem : time ] , one immediately obtains    [ cor : time ] let @xmath39 and @xmath40 .",
    "then @xmath81 where @xmath82 denotes the class of all decision problems that can be solved by a @xmath61-rtm that has time bound @xmath83 .    in particular , whenever  @xmath84 , we have @xmath85 where @xmath13 denotes randomized polynomial time , i.e. , the class of all decision problems that can be solved by a polynomial time bounded @xmath61-rtm .",
    "separation results are known for , e.g. ,  the following decision problems :    @xmath86 , + where @xmath87 and @xmath88 .",
    "decide if the multisets @xmath89 and @xmath90 are equal ( i.e. , they contain the same elements with the same multiplicities ) .",
    "@xmath86 , + where @xmath87 and @xmath91 .",
    "decide if @xmath92 as sets ( i.e. , disregarding multiplicities of elements ) .",
    "one of the main results of @xcite shows :    [ thm : multiseteq ] @xmath93 and @xmath94    a.   do not belong to @xmath95 , + whenever @xmath96 and @xmath97 are functions with @xmath98 and @xmath99n / r(n))$ ] .",
    "b.   belong to @xmath100 and to @xmath101 .",
    "furthermore , the @xmath93 problem belongs to @xmath102 .",
    "this immediately leads to the following separations between the deterministic , randomized , and nondeterministic @xmath17 classes :    [ cor : detvsrandvsndet ] + let @xmath96 and @xmath97 be functions with @xmath98 and @xmath99n / r(n))\\cap \\omega(\\log n)$ ] .",
    "then ,    a.   @xmath103 , b.   @xmath104 .",
    "in this section we show that internal memory tapes can be simulated by head reversals on external memory tapes :    [ theorem : internal - memory - to - reversals ] for all @xmath105 and all functions @xmath96 and @xmath97 with @xmath106 , we have @xmath107     \\rst(r , s , t ) & \\ \\subseteq \\ & \\rst(\\bigo\\left(r{\\cdot } s\\right),\\bigo(1),t{+}2 ) ,     \\\\[1 mm ]     \\nst(r , s , t ) & \\ \\subseteq \\ & \\nst(\\bigo\\left(r{\\cdot } s\\right),\\bigo(1),t{+}2 ) .   \\end{array}\\ ] ]    the proof is inspired by the proof of chen and yap ( * ? ? ?",
    "* theorem  8) , where it is shown that computations in @xmath108 can be simulated by deterministic 2-tape turing machines with @xmath109 head reversals , provided that @xmath110 and @xmath97 is _ reversal - constructible _",
    "( i.e. , given @xmath2 in unary , a string of length @xmath1 can be produced by a multi - tape turing machine that performs @xmath111 head reversals ) .",
    "note , however , that our following proof of theorem  [ theorem : internal - memory - to - reversals ] does not need an assumption on any kind of reversal - constructibility of @xmath97 or @xmath96 , and that we have to deal with computations that , in addition to the space - bounded internal memory tapes , also involves the external memory tapes ( which are bounded in the number of head - reversals , but unbounded in space ) .    for proving theorem  [ theorem : internal - memory - to - reversals ] for the deterministic case ,",
    "let @xmath112 be a deterministic @xmath41-bounded turing machine , for functions @xmath96 and @xmath97 with @xmath106 .",
    "without loss of generality , @xmath112 uses tape alphabet @xmath113 and has exactly one internal memory tape .",
    "we describe a simulation of @xmath112 by an @xmath114-bounded turing machine .",
    "let @xmath115 be an input of length @xmath2 .",
    "an _ internal configuration _ of @xmath112 on input @xmath115 is a tuple @xmath116 , where @xmath117 is a state of @xmath112 and @xmath118 is a string of length at most @xmath1 , and describes the situation when @xmath112 is in state @xmath117 and contains the string @xmath118 on its internal memory tape , where the head reads the first symbol of @xmath119 .",
    "our simulation proceeds in _ meta - steps _ , each of which simulates one step of @xmath112 . at the beginning , the external memory tapes @xmath120 and @xmath121 contain the same list of all possible internal configurations @xmath116 of @xmath112 on input @xmath115 , where @xmath118 has length 1 .",
    "the head of tape @xmath120 is placed on the leftmost symbol of the initial internal configuration of @xmath112 on input @xmath115 in this list , and the head of tape @xmath121 is placed at the leftmost symbol of the entire list .",
    "this situation can be achieved with a constant number of reversals .    in the @xmath37th meta - step , assume that external memory tapes @xmath120 and @xmath121 both contain the following string : @xmath122 for some @xmath123 , where @xmath124 is an enumeration of all internal configurations of @xmath112 on input @xmath115 , such that there exists an @xmath125 such that each configuration has the form @xmath116 for some state @xmath117 and some string @xmath118 of length @xmath126 .",
    "we call a substring of the form @xmath127 a _ segment _ , and a substring of the form @xmath128 a _ @xmath129-subsegment_.    assume that the head of tape @xmath120 is placed on the leftmost symbol of the second copy of an internal configuration @xmath130 in the @xmath130-subsegment of the @xmath37th segment , and that the head of tape @xmath121 is placed on the leftmost symbol of the @xmath37th segment . by reading @xmath130 on tape @xmath120 and the symbols currently read on the first @xmath10 external memory tapes , determine the action of @xmath112 when being in this configuration . if the next internal configuration @xmath131 induced by this action has the form @xmath116 for some string @xmath118 of length @xmath132 , then modify both strings on tape @xmath120 and @xmath121 such that @xmath133 is an enumeration of all internal configurations @xmath116 of @xmath112 on input @xmath115 such that @xmath118 has length @xmath132 .",
    "this can be done in a constant number of reversals .",
    "then , using the remaining @xmath134 copies of @xmath130 in the current segment of tape @xmath120 , search for @xmath131 in the segment of tape @xmath121 .",
    "if it has been found , use the remaining copies of @xmath131 in the current segment of tape @xmath121 to search for @xmath131 in the next segment of tape @xmath120 .",
    "if there is no such segment , then duplicate the string on both tapes @xmath120 and @xmath121 first .",
    "finally , simulate @xmath112 s action on the first @xmath10 tapes .",
    "this finishes the @xmath37th meta - step .",
    "lemma [ lemma : tape - length - bound ] tells us that on input @xmath115 , the turing machine @xmath112 performs at most @xmath135 steps",
    ". therefore , there are at most @xmath136 meta - steps in the simulation .",
    "there are three situations in which a constant number of head reversals occur during a meta - step :",
    "the first one is that a head on one of the first @xmath10 tapes changes its direction , which happens at most @xmath0 times .",
    "the second one is that @xmath112 uses @xmath126 cells of internal memory before , and @xmath132 cells after one step , which happens at most @xmath1 times .",
    "the last situation is that the string on tapes @xmath120 and @xmath121 is too short , so that it has to be doubled .",
    "this happens at most @xmath137 times , since there are at most @xmath136 steps in the simulation and in each step we use only one segment of the string on these tapes . in total , there are at most @xmath138 head reversals in the whole simulation , and the proof of theorem  [ theorem : internal - memory - to - reversals ] for the deterministic case is complete .",
    "the proof for the randomized and nondeterministic case is the same , except that in each meta - step , the successor configuration @xmath53 of the current configuration @xmath51 of @xmath112 is determined in a randomized way , respectively , in a nondeterministic way .",
    "then , in the randomized case , the probability that we choose a successor configuration @xmath53 of @xmath51 during the simulation is precisely the probability that @xmath51 yields @xmath53 in a run of @xmath112 .",
    "therefore , the probability that @xmath115 is accepted in the simulation is the same as the probability that @xmath115 is accepted by @xmath112 .",
    "[ rem : notrevtoint ] inclusion in the other direction fails in general , at least for the deterministic and the randomized case . for example , by theorem  [ theorem : internal - memory - to - reversals ] we have @xmath139 however , @xmath140 since , according to theorem  [ thm : multiseteq ] , the @xmath93 problem belongs to @xmath141 , but _ not _ to @xmath142 .",
    "in this section we clarify the relations between the @xmath17 classes and `` classical '' complexity classes such as time- or space - bounded classes , reversal - bounded classes , and circuit complexity classes .",
    "figure  [ fig : classes ] at the end of section  [ section : em - vs - classical ] visualizes some of the present section s results .",
    "recall that a function @xmath143 is called _ space - constructible _ ( cf .",
    ", e.g. , @xcite ) if there is a deterministic turing machine that , given @xmath144 in unary on its ( read - only ) input tape , writes @xmath145 in unary on its output tape and uses @xmath146 space on its work tapes .",
    "[ theorem : ntime - in - nst ] for all space - constructible functions @xmath147 , we have @xmath148    let @xmath112 be a nondeterministic turing machine with time bounded by @xmath149 . we describe how to simulate @xmath112 by a @xmath150-bounded nondeterministic turing machine",
    "let @xmath115 be an input of length @xmath2 .",
    "the machine nondeterministically writes ( the same ) sequence of configurations @xmath151 , @xmath152 , on both external memory tapes .",
    "it does so without any head reversal and by using that @xmath153 is space - constructible .",
    "if @xmath154 is rejecting , then the machine rejects , too .",
    "if @xmath154 is accepting , then the machine checks in a backward scan of both external memory tapes that for every @xmath155 , @xmath156 is a successor configuration of @xmath131 , and that @xmath157 is the start configuration of @xmath112 on input @xmath115 .",
    "the first condition can be checked without any head reversal while scanning @xmath131 and @xmath156 on separate tapes , and the latter one can be checked while scanning @xmath157 and @xmath115 on separate tapes .",
    "the machine accepts if , and only if , both conditions are satisfied .",
    "together with theorem  [ theorem : internal - memory - to - reversals ] and corollary  [ cor : time ] , we obtain the following :    [ corollary : ntime - characterisation ] for all space - constructible functions @xmath158 , we have @xmath159      & \\ = \\       & \\nst(\\bigo(1),\\bigo(t(n)),\\bigo(1 ) )   \\ = \\ \\nst(\\bigo(t(n)),\\bigo(1),\\bigo(1 ) ) .",
    "\\end{array}\\ ] ]     + @xmath160{rcl }       \\ntime(2^{o(t(n ) ) } )     & \\",
    "\\ref{theorem : ntime - in - nst}}}{\\subseteq } \\     & \\nst(\\bigo(1),\\bigo(t(n)),\\bigo(1 ) )    \\\\[1ex ]     & \\stackrel{\\text{thm \\ref{theorem : internal - memory - to - reversals}}}{\\subseteq }     & \\nst(\\bigo(t(n)),\\bigo(1),\\bigo(1 ) )    \\\\[1ex ]     & \\stackrel{\\text{cor \\ref{cor : time}}}{\\subseteq }     & \\ntime(2^{o(t(n ) ) } ) .",
    "\\end{array } $ ] +    [ rem : ] corollary  [ corollary : ntime - characterisation ] tells us that internal memory space can freely be traded for external memory head reversals , and vice versa , on _ nondeterministic _ machines .",
    "contrast this with remark  [ rem : notrevtoint ] which states that for _ deterministic _ and _ randomized _ machines , external memory head reversals are strictly more powerful than internal memory space .",
    "i.e. : @xmath161     \\rst(\\bigo(1),\\bigo(\\log n),\\bigo(1 ) ) & \\ \\varsubsetneq \\ & \\rst(\\bigo(\\log n),\\bigo(1),\\bigo(1 ) ) & \\quad\\text{and }    \\\\[0.5ex ]     \\st(\\bigo(1),\\bigo(\\log n),\\bigo(1 ) ) & \\ \\varsubsetneq \\ & \\st(\\bigo(\\log n),\\bigo(1),\\bigo(1 ) ) . &    \\end{array } \\vspace{1ex}\\ ] ]    note that corollary  [ corollary : ntime - characterisation ] gives us , in particular , a characterization of the class @xmath162 :    [ cor : np - characterization ] @xmath163    the classes @xmath164 and @xmath13 can not be characterized in the analogous way : obviously , the @xmath93 problem belongs to @xmath165 but , due to theorem  [ thm : multiseteq ] , it does _ not _ belong to @xmath166 .",
    "thus , together with corollary  [ cor : time ] we obtain @xmath167 it remains a future task to determine whether the inclusions @xmath168 are strict .",
    "however , even an inclusion of the form @xmath169 seems rather unlikely , since @xmath170 , together with the next subsection s theorem  [ thm : polylog - characterisation ] , would imply that @xmath171 ( where @xmath172 denotes the class of all decision problems that can be solved in space @xmath173 ) .",
    "+ currently , the best simulation of time - bounded computations by deterministic reversal - bounded computations seems to be likiewicz s result @xcite that , for any function @xmath27 with @xmath174 , @xmath175      different versions of _ reversal - bounded _",
    "computation models have been studied in the literature , cf .",
    ", e.g. , @xcite .",
    "the model that is closest to our @xmath17 classes certainly being chen and yap s @xcite class @xmath176 which consists of all decision problems that can be solved by a deterministic multi - tape turing machine that , on an input @xmath115 of length @xmath2 , performs at most @xmath177 head reversals on all its tapes , provided that @xmath115 is a `` yes''-instance of the decision problem  on `` no''-instances , chen and yap s model does not impose any resource bounds .",
    "however , as pointed out in @xcite , it does not make any difference to also impose the resource bounds for `` no''-instances , provided that the function @xmath96 is `` reasonable '' in the sense that it is _ reversal - constructible _",
    ", i.e. , there is a deterministic 2-tape turing machine which , given @xmath42 in unary , generates @xmath0 in unary on one of its tapes and uses @xmath177 head reversals in total .",
    "it is noted in @xcite that many complexity functions , including @xmath178 , @xmath179 , and @xmath180 , are in fact reversal - constructible .",
    "so , essentially , the class @xmath176 corresponds to our class @xmath181 , where only _ constant _ internal memory is available",
    ". translated into the present paper s terminology , one of the main results of @xcite is :    [ thm : chenyap ] let @xmath97 be a reversal - constructible function and let @xmath96 be an arbitrary function with @xmath182 .",
    "then , @xmath183    from this , together with theorem  [ theorem : internal - memory - to - reversals ] , one immediately obtains the following :    [ cor : chenyap : st2dspace ] for all functions @xmath96 and @xmath97 with @xmath184 , we have @xmath185    by giving a _ direct _ proof",
    ", we can slightly improve this to    [ lemma :",
    "st - in - dspace ] for all functions @xmath96 and @xmath97 with @xmath186 ,",
    "we have @xmath187    let @xmath96 and @xmath97 be functions with @xmath186 , let @xmath112 be a @xmath188-bounded deterministic turing machine , and let @xmath26 be the number of internal memory tapes of @xmath112 .",
    "let @xmath115 be an input of length @xmath2 .",
    "we describe how to determine the final state of @xmath112 on input @xmath115 in space @xmath189 .",
    "the proof idea is to construct a space - bounded machine that simulates @xmath112 by re - computing the content of a tape cell of @xmath112 every time @xmath112 encounters this tape cell .",
    "here , we proceed by induction on the head reversals .",
    "assume that we have already constructed a procedure that can compute the state and content of @xmath112 s tapes on input @xmath115 after the @xmath134th head reversal in space @xmath190 , for an appropriate function @xmath191 .",
    "then we can compute the state and content of @xmath112 s tapes after the @xmath192st head reversal in space @xmath193 by simulating @xmath112 , starting in the state after the @xmath134th head reversal , where this state and all tape contents are determined as needed by computing the corresponding bits by the procedure for @xmath134 . here , the extra space of size @xmath194 is needed to store the current head positions on all tapes ( recall from lemma  [ lemma : tape - length - bound ] that @xmath112 can visit at most @xmath195 cells on each tape ) .",
    "more formally , define a function @xmath71 such that for every input string @xmath196 and every @xmath197 , @xmath198 is the state of @xmath112 on input @xmath196 directly after the @xmath134th head reversal ( if @xmath112 on input @xmath196 performs less than @xmath134 head reversals , then @xmath199 ) ; @xmath200 is the start state of @xmath112 .",
    "we use two other functions , @xmath201 and @xmath202 , for each tape @xmath203 of @xmath112 . for every input string @xmath196 , every @xmath197 , and every @xmath204 , @xmath205 is the position of the head of the @xmath37th tape of @xmath112 on input @xmath196 after the @xmath134th head reversal , and @xmath206 is the @xmath207th symbol on tape @xmath37 of @xmath112 on input @xmath196 after the @xmath134th head reversal ( again , if @xmath112 on input @xmath196 performs less than @xmath134 head reversals , then @xmath208 and @xmath209 ) ; for @xmath210 , @xmath201 and @xmath202 describe the situation at the start of the computation .    to compute @xmath211 , we start simulating @xmath112 in state @xmath212 such that the head of tape @xmath37 is positioned on cell @xmath213 . whenever @xmath112 reads cell @xmath207 on tape @xmath37 , we compute @xmath214 and continue the simulation until @xmath112 encounters a final state or a head reversal occurs",
    ". then @xmath211 is the last state of @xmath112 in the simulation .",
    "@xmath201 and @xmath202 can be computed in a similar way : @xmath215 is simply the position of the @xmath37th head at the end of this simulation , whereas @xmath216 is the symbol written into cell @xmath207 of tape @xmath37 during the simulation , or @xmath214 if this cell has not been passed . for the simulation",
    "we need to maintain the current state and the positions of the heads of all tapes . by lemma  [ lemma :",
    "tape - length - bound ] these positions can be numbers between 1 and @xmath217 ( recall that @xmath186 ) . hence , @xmath138 space suffices to store the current state and head positions on all tapes .",
    "we additionally need space to compute @xmath212 , @xmath213 and @xmath218 .",
    "since @xmath71 , @xmath201 and @xmath202 can be computed in constant space for @xmath210 , it follows by induction on @xmath134 that @xmath219 space suffices to compute @xmath71 , @xmath201 and @xmath202 for @xmath220 .    finally ,",
    "to determine the final state of @xmath112 on input @xmath115 , we iteratively compute @xmath221 , @xmath222 , @xmath223 until @xmath211 is a final state for some @xmath134 .",
    "since on an input @xmath115 of length @xmath2 , @xmath112 performs at most @xmath0 head reversals , we have @xmath224 .",
    "hence , the final state of @xmath112 on input @xmath115 can be determined in space @xmath225 .",
    "we write @xmath172 to denote the complexity class that consists of all decision problems that can be solved in space @xmath173 . using lemma  [ lemma : st - in - dspace ] , theorem  [ thm : chenyap ] , and theorem  [ theorem : internal - memory - to - reversals ] , one easily obtains the following :    [ thm : polylog - characterisation ]    a.   @xmath226 b.   @xmath227    _ ( a ) : _  the first inclusion is due to lemma  [ lemma : st - in - dspace ] ; the second and the third inclusion are due to theorem  [ thm : chenyap ] .",
    "+ _ ( b ) : _  this immediately follows from theorem  [ thm : chenyap ] and theorem  [ theorem : internal - memory - to - reversals ] .",
    "later on , in remark  [ remark : strictinclusioninlogspace ] we will see that the inclusion of @xmath228 in @xmath229 is , in fact , _",
    "strict_.    let us note that our approach for proving lemma  [ lemma : st - in - dspace ] does not work for nondeterministic or randomized machines .",
    "in fact , a nondeterministic analogue of lemma  [ lemma : st - in - dspace ] of the form @xmath230 seems rather unlikely , since this would imply that @xmath231 . to see this , recall from corollary  [ cor : np - characterization ] that @xmath232 .",
    "thus , @xmath233 would imply that @xmath162 is included in @xmath234 which , due to savitch s theorem @xcite is equal to @xmath235 .",
    "recall that @xmath236 is the class of all decision problems that can be solved by uniform families of circuits of size @xmath237 and depth @xmath179 , that consist of bounded fan - in @xmath238-gates .",
    "@xmath239 denotes the analogous class where gates of unbounded fan - in are allowed .",
    "thus , for all @xmath240 , we have @xmath241 .",
    "furthermore , @xmath242 denotes the union of the classes @xmath236 , for all @xmath240 .",
    "the next lemma shows that @xmath243 head reversals and constant internal memory suffice to simulate all @xmath236 circuits , and that this is optimal in the following sense : just @xmath244 head reversals are too weak for simulating @xmath245 circuits , even if internal memory may get as large as @xmath246{n}/\\log n)$ ] .",
    "[ lemma : aci][lemma : acvsst ]    a.   @xmath247 , for all @xmath240 .",
    "b.   @xmath248 . c.   @xmath249{n}/\\log n),o(1))$ ] .    _",
    "( a ) : _ it is known that @xmath250 ( cf . ,",
    "e.g. , ( * ? ? ?",
    "* proposition4.2 ) ) . due to theorem  [ thm : chenyap ]",
    "we have @xmath251 , and thus the claim follows .",
    "+ _ ( b ) : _ it is known ( cf . ,",
    "@xcite ) that uniform @xmath245 can be characterized as the class of all string - languages that are definable by a sentence of _ first - order logic _ with built - in _ bit_-predicate , @xmath252 $ ] , for short ( for an introduction to first - order logic and its relation to complexity theory see , e.g. , the textbook @xcite ) . to prove _ ( b )",
    "_ , it therefore suffices to find an @xmath253$]-sentence @xmath254 that is satisfied exactly by those strings that are `` yes''-instances of the @xmath94 problem .",
    "to construct such a sentence , we use the result ( cf .",
    "e.g.  @xcite ; or @xcite for a purely logical proof ) that @xmath252 $ ] has the `` polylog counting capability '' , i.e. , for every fixed @xmath255 there is an @xmath252$]-formula @xmath256 such that for all @xmath42 , @xmath257 , and @xmath258 , the structure @xmath259 satisfies the formula @xmath256 if , and only if , @xmath260 .",
    "recall that an input instance for the @xmath94 problem is a string of the form @xmath261 where @xmath262 and each @xmath263 and @xmath264 is a @xmath113-string of length @xmath265 . using the counting formula @xmath266 , it is straightforward to construct an @xmath252$]-sentence @xmath267 that is satisfied by exactly those strings that are valid input instances of @xmath94 .",
    "in addition , we can construct an @xmath252$]-sentence @xmath268 that is satisfied by a valid input instance if , and only if , this is a `` yes''-instance . to this end , the formula @xmath268 just has to express that for every position @xmath115 carrying a @xmath269-symbol in the first half , there is an according position @xmath196 in the second half ( and vice versa ) , such that the @xmath113-strings of length @xmath270 to the left of @xmath115 and @xmath196 , respectively , are equal  and equality of substrings of length @xmath270 can easily be checked when using the counting formula @xmath271 .",
    "finally , the desired @xmath252$]-sentence @xmath254 that defines @xmath94 is chosen as the conjunction of the two sentences @xmath267 and @xmath268 .",
    "this completes the proof of _ ( b)_. + _ ( c ) : _ follows immediately from _ ( b ) _ and theorem  [ thm : multiseteq ] .",
    "[ remark : strictinclusioninlogspace ] in particular , as an application of lemma  [ lemma : aci ] and theorem  [ thm : multiseteq ] we obtain that  @xmath272 , because @xmath94 belongs to @xmath273 , but not to @xmath228 .    in @xcite , pippenger showed that @xmath242 is precisely the class of languages recognized by deterministic multi - tape turing machines that _ simultaneously _ have time - bound @xmath237 and perform at most @xmath173 head reversals on all its tapes .",
    "the inclusion `` @xmath274 '' follows by a rather direct construction ; the proof of the opposite inclusion `` @xmath275 '' is more intricate and is obtained by showing that a turing machine which simultaneously has time - bound @xmath276 and performs only @xmath0 head reversals , can be simulated by a uniform family of circuits of depth @xmath277 and size @xmath278 .",
    "this simulation result was improved by parberry @xcite to :    [ theorem : space - rev - in - circ ] a deterministic @xmath134-tape turing machine which simultaneously has space - bound @xmath279 and performs at most @xmath0 head reversals on all its tapes , can be simulated by a uniform family of circuits ( with @xmath238-gates of bounded fan - in ) of depth @xmath280 and width @xmath281 .",
    "note that the present paper s @xmath41-bounded turing machines , which are used to define the complexity classes @xmath46 , are different from pippenger s and parberry s machines , as the latter are _ simultaneously _ bounded in head reversals and either time or space on _ all _ tapes , whereas our @xmath41-bounded machines have some tapes ( namely , the @xmath10 external memory tapes ) which are unrestricted in size but restricted in head reversals , and some further tapes ( namely , the internal memory tapes ) which are restricted in size but unrestricted in terms of head reversals .",
    "however , by using theorem  [ theorem : internal - memory - to - reversals ] and lemma  [ lemma : tape - length - bound ] , parberry s theorem  [ theorem : space - rev - in - circ ] immediately implies that @xmath282-bounded deterministic turing machines can be simulated by circuits of the following kind :    [ corollary : st - and - circuits ] let @xmath96 and @xmath97 be functions such that @xmath106 .",
    "then , every language in @xmath283 can be decided by a uniform family of circuits ( with @xmath238-gates of bounded fan - in ) of depth @xmath284 and size @xmath217 .    by theorem [ theorem : internal - memory - to - reversals ] , @xmath285 .",
    "+ furthermore , we know from lemma  [ lemma : tape - length - bound ] that an @xmath286-bounded turing machine uses space @xmath287 on _ all _ its tapes and therefore simultaneously has space - bound @xmath288 and performs at most @xmath138 head reversals on all its tapes .",
    "thus , theorem  [ theorem : space - rev - in - circ ] gives us a uniform family of circuits of depth @xmath284 and width @xmath289 . since the _ size _ of a circuit",
    "is bounded by the product of its _ depth _ and its _ width _ , the claim follows and the proof of corollary  [ corollary : st - and - circuits ] is complete .",
    "in this section we prove hierarchies within the @xmath7 classes .",
    "first , in subsection  [ section : hierarchies / arbitrary - many - tapes ] , we consider classes in which arbitrarily many external memory tapes are available ; afterwards , in subsection  [ section : hierarchies / one - tape ] , we turn to classes with only one external memory tape .      chen and yap have observed in @xcite that their theorem  [ thm : chenyap ] , together with the _ space hierarchy theorem _",
    "e.g. , the textbook @xcite ) , leads to a strict hierarchy of reversal complexity classes . using theorem  [ theorem : internal - memory - to - reversals ] to shift from internal memory to external head reversals ,",
    "this leads to :    [ proposition : spacehierthm ] let @xmath96 , @xmath97 , and @xmath70 be functions such that @xmath290 , @xmath291 , and @xmath70 reversal - constructible and space - constructible .",
    "then , @xmath292     +  @xmath293{rclll }      \\st(o(r),o(s),o(1 ) )    & \\ \\subseteq \\    & \\dspace(r^2{\\cdot}s )    & \\quad    & \\text{(lemma~\\ref{lemma : st - in - dspace } ) }   \\\\    & \\varsubsetneq    & \\dspace(r )    &    & \\text{(space hierarchy theorem ) }    \\\\    & \\subseteq    & \\st(o(r),o(1),o(1 ) )    &    &   \\text{(theorem~\\ref{thm : chenyap } ) }   \\end{array } $ ] +    [ rem : space - hier ] for example , the above proposition in particular tells us for all @xmath294 that @xmath295    note that proposition  [ proposition : spacehierthm ] does not apply to classes where only @xmath244 head reversals are available . to also treat such cases",
    ", we consider padded versions of the @xmath93 problem to transfer the lower bound of of theorem  [ thm : multiseteq ] into the following separations for classes with @xmath244 head reversals :    [ lem : hier - o ] let @xmath96 and @xmath97 be functions such that @xmath296 and    a.   given an input string of length @xmath2 , a string of length @xmath0 can be produced by a deterministic @xmath297-bounded turing machine , and b.   given an input of length @xmath298 , a string of length @xmath2 , where @xmath2 is the smallest number with @xmath299 , can be produced by a deterministic @xmath300{\\tilde{n}}),o(1)\\big)$]-bounded turing machine .",
    "then , there is a decision problem that belongs to @xmath301 , but not to @xmath302{2^{r(n)}}),o(1))$ ] .    consider the decision problem    @xmath303 , + where @xmath87 , @xmath88 , @xmath304 such that for the total input length @xmath2 and for @xmath305 we have @xmath299 .",
    "decide if the multisets @xmath89 and @xmath90 are equal .    to show that @xmath306 does @xmath307{2^{r(n)}}),o(1)),\\ ] ] we give a reduction from @xmath93 to @xmath306 : given an input of length @xmath298 of the form @xmath308 for the @xmath93 problem , we proceed as follows : first",
    ", we search for a number @xmath2 such that @xmath309 . due to assumption _",
    "( ii ) _ , this can be achieved with @xmath310 head reversals on external memory tapes and @xmath311{\\tilde{n}})$ ] internal memory space .",
    "afterwards , we pad the input to a string of length @xmath2 to obtain an input instance for @xmath306 . thus , if @xmath306 belonged to @xmath312{2^{r(n)}}),o(1 ) ) , $ ] then @xmath93 could be solved by a randomized @xmath313{\\tilde{n}}),\\allowbreak o(1)\\big)$]-bounded turing machine ( to see this , recall that @xmath314 and @xmath315{2^{r(n)}}\\leq \\sqrt[5]{2^{\\log \\tilde{n } } } = \\sqrt[5]{\\tilde{n}}$ ] ) .",
    "this , however , is a contradiction to theorem  [ thm : multiseteq](a ) .    to see that @xmath306 belongs to @xmath316",
    ", we construct a turing machine @xmath112 which , in a first phase , tests if the input is an admissible instance for @xmath306 as follows : @xmath112 checks if the input is of the form @xmath317 , for some @xmath262 , such that @xmath318 and @xmath319 , for all @xmath320 ( this can be done with a constant number of head reversals on two external memory tapes ) . then , @xmath112 checks for the total input length @xmath2 and the number @xmath305 , that @xmath309 ( due to assumption _ ( i ) _ , this can be done with @xmath321 head reversals on external memory tapes and internal memory space @xmath322 ) .",
    "this completes @xmath112 s first phase .",
    "provided that the input is an admissible instance , @xmath112 then sorts each of the two lists @xmath323 and @xmath324 of @xmath113-strings in ascending lexicographic order .",
    "due to ( * ? ? ?",
    "* lemma7 ) , this can be achieved with constant internal memory space and @xmath325 head reversals on two external memory tapes .",
    "afterwards , a single scan of the two sorted lists in parallel suffices to decide if the multisets @xmath326 and @xmath327 are equal .    as a consequence of lemma  [",
    "lem : hier - o ] we obtain , for example , the following separation result :    [ thm : hier - o ] for every @xmath21 , @xmath328{\\log n}),o(\\log n),o(1 ) ) \\",
    "\\not\\subseteq \\",
    "\\rst(o(\\sqrt[k]{\\log n}),(\\log n)^{o(1)},o(1)).\\ ] ] in particular , this implies the following hierarchy of classes for all @xmath21 : @xmath329{\\log n}),o(\\log n),o(1 ) )     \\ \\varsubsetneq \\      \\textsc{(r)}\\st(o(\\sqrt[k]{\\log n}),o(\\log n),o(1)).\\ ] ]    the second statement obviously follows from the first statement . to prove the first statement , use lemma  [ lem : hier - o ] for the functions @xmath330{\\log n}$ ] and @xmath331",
    "obviously , @xmath296 .",
    "furthermore , assumption _",
    "( i ) _ of lemma  [ lem : hier - o ] is satisfied , because on an input of length @xmath2 , internal memory of size @xmath332 is available and thus the binary representations of @xmath2 , @xmath178 , and @xmath333{\\log n}$ ] can be computed in internal memory .",
    "then , a string of length @xmath334{\\log n}$ ] can be produced with a single scan on an external memory tape .",
    "concerning assumption _",
    "( ii ) _ of lemma  [ lem : hier - o ] , we need to find a turing machine which , on an input of length @xmath298 , constructs a string of length @xmath2 , where @xmath333{\\log n } = r(n ) \\leq \\log \\tilde{n } \\leq \\sqrt[k]{\\log ( n{+}1)}$ ] , i.e. , @xmath335 . to achieve this",
    ", we may use internal memory of size up to @xmath315{\\tilde{n}}$ ] . note that with internal memory of that size , the binary representations of numbers of size up to @xmath336{\\tilde{n } } } \\geq 2^{((\\log \\tilde{n})^{k})}$ ] can be handled in internal memory .",
    "thus , the binary representation of @xmath2 can be computed in internal memory , and afterwards a string of length @xmath2 can be produced with a single scan on an external memory tape .    therefore , the assumptions of lemma  [ lem : hier - o ] are satisfied , and lemma  [ lem : hier - o ] tells us that @xmath337{\\log n}),o(\\log n),o(1 ) ) \\",
    "\\not\\subseteq \\       \\rst(o(\\sqrt[k]{\\log n}),\\sqrt[5]{2^{r(n)}},o(1 ) ) .",
    "$ ] theorem  [ thm : hier - o ] follows , since @xmath338{\\log n } \\in o(\\sqrt[k]{\\log n})$ ] and @xmath315{2^{r(n ) } } \\in 2^{\\omega(\\log\\log n)}$ ] , and thus is larger than any internal memory bound in @xmath173 .",
    "a visualization of the hierarchy results from section  [ section : hierarchies / arbitrary - many - tapes ] is shown in figure [ fig : hierarchy ] .      when considering @xmath17 classes where only _ one _ external memory tape is available , strong results and methods from _ communication complexity _ can be used to prove lower bounds .",
    "this technique has already been used in @xcite to obtain bounds on the data complexity of query evaluation problems on data streams and to obtain a hierarchy of @xmath339 classes for the special case where @xmath96 is _",
    "constant_. this subsection s main result generalizes the hierarchy of @xcite to non - constant functions @xmath96 .",
    "the method of choice , again , is to use appropriate lower bound results for communication complexity .",
    "this subsection s main result is    [ thm : separation - r(n)->r(n)+1 ] for every logspace - computable function @xmath96 and for all classes @xmath71 of functions @xmath340 we have :    a.   if @xmath23 and @xmath341 , then + @xmath342 .",
    "b.   if @xmath343 and @xmath344 , then + @xmath345 .    before proving theorem  [ thm : separation - r(n)->r(n)+1 ]",
    ", we introduce some basic definitions and a strong result from communication complexity .",
    "let @xmath346 be finite sets and @xmath347 a boolean function . in yao s @xcite basic model of communication",
    ", alice gets an input @xmath348 , bob gets an input @xmath349 , and together they wish to evaluate @xmath350 by exchanging messages according to a fixed _",
    "protocol @xmath351 _ that depends on @xmath352 , but not on @xmath115 or @xmath196 .",
    "the _ cost _ of @xmath351 is the worst case number of bits that have to be communicated , so that alice and bob both know @xmath350 .",
    "_ randomization _ can be introduced by giving each player access to his or her own random string .",
    "then , we say that _",
    "@xmath351 computes @xmath352 with @xmath353-error _ if for all inputs @xmath354 , @xmath351 computes the correct value @xmath350 with probability @xmath355 .",
    "a protocol has _",
    "@xmath134 rounds _ , for some @xmath197 , if alice and bob alternately exchange at most @xmath134 messages .",
    "the _ deterministic @xmath134-round communication complexity of @xmath352 _ is defined as the minimum cost of a deterministic @xmath134-round protocol that computes @xmath352 .",
    "the _ randomized @xmath134-round communication complexity of @xmath352 _ is the minimum cost of a randomized @xmath134-round protocol that computes @xmath352 with @xmath353-error .    to prove theorem [ thm : separation - r(n)->r(n)+1 ]",
    ", we consider the _ pointer jumping function _",
    "@xmath356 which , for given parameters @xmath357 is defined as follows :   @xmath358 if @xmath359 , @xmath360 , where @xmath361 , and there exist indices @xmath362 such that to denote the binary representation of @xmath207 of length @xmath363 . ]",
    "@xmath364 , @xmath365 and @xmath366 has an even number of 1s ; and @xmath367 otherwise .",
    "+ we will use the following lower bounds on the communication complexity of @xmath356 :    [ thm : cc - lower - bounds ] let @xmath368 .",
    "+ if @xmath369 , then the deterministic @xmath134-round communication complexity of @xmath370 is @xmath371 .",
    "furthermore , if @xmath372{\\hat{n}/\\log \\hat{n}}$ ] , then the randomized @xmath134-round communication complexity of @xmath370 is @xmath373 .",
    "theorem [ thm : separation - r(n)->r(n)+1 ] now is obtained as an immediate consequence of the following lemma , which gives upper and lower bounds for the language @xmath374 , defined for a given function @xmath375 via @xmath376    [ thm : st1-hierarchy ]    a.   [ thm : st1-hierarchy : item : pj(r+1)-in - st1 ] for all logspace - computable functions @xmath377 , we have + @xmath378 b.   [ thm : st1-hierarchy : item : pj(r+1)-notin - st1 ] let @xmath379 such that @xmath380 and @xmath381 .",
    "+ then , @xmath382 c.   [ thm : st1-hierarchy : item : pj(r+1)-notin - rst1 ] let @xmath379 such that @xmath383 and @xmath384 .",
    "+ then , @xmath385    _ ( a ) : _ let @xmath386 be an input of length @xmath2 , where @xmath387 for all @xmath388 . to decide whether @xmath389 , we just have to determine @xmath390 , @xmath391 , one after the other , where @xmath392 is determined from @xmath393 with at most one head reversal on the external memory tape .",
    "in internal memory we maintain the value of @xmath126 ( @xmath178 bits ) , the current value of @xmath394 ( @xmath178 bits ) , and a counter ( @xmath395 bits ) which , at the beginning , is initialized to @xmath0 and decreased in every step . note that we do not need any head reversal on the external memory tape to determine @xmath396 from @xmath397 .",
    "therefore we need at most @xmath0 head reversals and @xmath398 internal memory space .",
    "+ _ ( b ) : _ for contradiction , we assume that there is a deterministic @xmath399-bounded turing machine @xmath112 that decides @xmath374 .",
    "let @xmath400 be the set of states of @xmath112 .",
    "for @xmath401 let @xmath402 , @xmath403 and @xmath404 .",
    "then , @xmath112 leads to a deterministic @xmath134-round communication protocol for @xmath405 as follows : let @xmath406 be the input for alice and @xmath407 be the input for bob .",
    "alice simulates @xmath112 on input @xmath408 until @xmath112 reads cell @xmath409 on its external memory tape .",
    "then , alice sends the current state of @xmath112 ( @xmath410 bits ) and the contents of @xmath112 s internal memory tapes ( @xmath111 bits ) to bob .",
    "bob continues the simulation until @xmath112 accesses cell @xmath411 , sends the current state of @xmath112 and the contents of its internal memory tapes to alice , and so on . since @xmath112 is @xmath412-bounded , the head of the external memory tape passes cell @xmath413 , or @xmath411 respectively , at most @xmath414 times .",
    "so the number of rounds of the protocol is @xmath134 and the total communication is at most @xmath415 , which is of size @xmath416 by the assumption of _",
    "( b)_. moreover , @xmath417 . hence ,",
    "for sufficiently large @xmath126 we obtain a @xmath134-round - protocol for @xmath405 with communication @xmath418 , where @xmath369 . but",
    "this contradicts theorem  [ thm : cc - lower - bounds ] s statement on deterministic @xmath134-round communication complexity .",
    "+ _ ( c ) : _  this can be shown in the same way as _ ( b ) _ , when using theorem  [ thm : cc - lower - bounds ] s statement on randomized @xmath134-round communication complexity .",
    "note that theorem  [ thm : separation - r(n)->r(n)+1 ] is an immediate consequence of lemma  [ thm : st1-hierarchy ] .",
    "the present paper s main results are _ ( a ) _  a trade - off between internal memory space and external memory head reversals , stating that internal memory can be compressed from size @xmath1 to @xmath18 at the expense of adding an extra factor @xmath1 to the external memory head reversals ( see section  [ section : trade - off ] ) , _ ( b ) _",
    "correspondences between the @xmath6 classes and `` classical '' time - bounded , space - bounded , reversal - bounded , and circuit complexity classes ( see section  [ section : em - vs - classical ] ) , and _ ( c )",
    "_  hierarchies of @xmath7-classes in terms of increasing numbers of head reversals on external memory tapes ( see section  [ section : hierarchies ] ) .",
    "visualizations of some of our results can be found in figure  [ fig : classes ] and figure  [ fig : hierarchy ] .",
    "an intriguing future task is to develop techniques for proving lower bounds for appropriate decision problems in a setting where @xmath419 head reversals and several external memory tapes are available .",
    "of course , particular separating problems are immediately obtained from the space hierarchy theorem via proposition  [ proposition : spacehierthm ] ( see remark  [ rem : space - hier ] ) . however , to find lower bounds for _ `` natural '' _ decision problems can be expected to be rather difficult , since we know from theorem  [ thm : polylog - characterisation ] that @xmath420 .    to conclude the paper ,",
    "let us comment on the open questions listed in the conclusion of chen and yap s article @xcite .",
    "one question was whether one can `` speedup '' reversal complexity by a constant factor , i.e. , whether , for @xmath421 ,  @xmath422 reversals can be simulated by just @xmath0 head reversals .",
    "theorem  [ thm : separation - r(n)->r(n)+1 ] shows that there is no such speedup for @xmath423 and @xmath424-classes with just _",
    "one _ external memory tape , as long as @xmath96 is in @xmath425 , respectively , in @xmath426{n/(\\log n)^2})$ ] .",
    "another question of @xcite was whether @xmath0 reversals on two external memory tapes can be simulated by @xmath427 reversals on a single external memory tape .",
    "in general , this is not the case .",
    "for example , lemma [ lemma : st - in - dspace ] implies that @xmath229 is included in the class @xmath141 .",
    "however , it is not included in @xmath428 . to see this ,",
    "let @xmath429 be the subset of @xmath430 represented by the characteristic string @xmath115 ( i.e. , @xmath431 is a bit - string of length @xmath2 , where @xmath432 if and only if @xmath433 ) .",
    "let @xmath434 then , @xmath435 is easily seen to be in @xmath229 . on the other hand , ( * ? ? ?",
    "* proposition 4.2 ) says that @xmath436 , whenever @xmath437 .",
    "in particular , @xmath438 .",
    "m.  grohe , c.  koch , and n.  schweikardt .",
    "tight lower bounds for query processing on streaming and external memory data . in _ proc .",
    "icalp05 _ , volume 3580 of _ lecture notes in computer science _ ,",
    "pages 10761088 .",
    "springer - verlag , 2005 .",
    "( best paper award for track b of icalp05 . ) ."
  ],
  "abstract_text": [
    "<S> we study a generalized version of reversal bounded turing machines where , apart from several tapes on which the number of head reversals is bounded by @xmath0 , there are several further tapes on which head reversals remain unrestricted , but _ </S>",
    "<S> size _ is bounded by @xmath1 ( where @xmath2 denotes the input length ) . </S>",
    "<S> recently @xcite , such machines were introduced as a formalization of a computation model that restricts random access to external memory and internal memory space . </S>",
    "<S> here , each of the tapes with a restriction on the head reversals corresponds to an external memory device , and the tapes of restricted size model internal memory . </S>",
    "<S> we use @xmath3 to denote the class of all problems that can be solved by deterministic turing machines that comply to the above resource bounds . similarly , @xmath4 and @xmath5 , respectively , </S>",
    "<S> are used for the corresponding nondeterministic and randomized classes .    while previous papers focused on lower bounds for particular problems , including sorting , the set equality problem , and several query evaluation problems , the present paper addresses the relations between the @xmath6-classes and classical complexity classes and investigates the structural complexity of the @xmath6-classes . </S>",
    "<S> our main results are ( 1 ) a trade - off between internal memory space and external memory head reversals , ( 2 ) correspondences between the @xmath6 classes and `` classical '' time - bounded , space - bounded , reversal - bounded , and circuit complexity classes , and ( 3 ) hierarchies of @xmath7-classes in terms of increasing numbers of head reversals on external memory tapes . </S>"
  ]
}
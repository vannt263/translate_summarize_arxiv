{
  "article_text": [
    "one of the fundamental aspects of the analysis of security protocols is the model of the intruder that seeks to compromise the protocols . in many situations ,",
    "such a model can be described in terms of a deduction system which gives a formal account of the ability of the intruder to analyse and synthesize messages . as shown in many previous works ( see , e.g. ,  @xcite ) , finding attacks on protocols can often be framed as the problem of deciding whether a certain formal expression is derivable in the deduction system which models the intruder capability .",
    "the latter is sometimes called the _ intruder deduction problem _ , or the ( ground ) reachability problem .",
    "a basic deductive account of the intruder s capability is based on the so - called dolev - yao model , which assumes perfect encryption . while this model has been applied fruitfully to many situations , a stronger model of intruders",
    "is needed to discover certain types of attacks .",
    "a recent survey @xcite shows that attacks on several protocols used in real - world communication networks can be found by exploiting algebraic properties of encryption functions .",
    "the types of attacks mentioned in @xcite have motivated many recent works in studying models of intruders in which the algebraic properties of the operators used in the protocols are taken into account  @xcite . in",
    "most of these , the intruder s capability is usually given as a natural - deduction - like deductive system . as is common in natural deduction",
    ", each constructor has a rule for introducing the constructor and one for eliminating the constructor .",
    "the elimination rule typically decomposes a term , reading the rule top - down : _",
    "e.g. _ , a typical elimination rule for a pair @xmath2 of terms is : @xmath3 { \\gamma \\vdash m } { \\gamma \\vdash { \\langle m , n \\rangle}}\\ ] ] here , @xmath1 denotes a set of terms , which represents the terms accumulated by the intruder over the course of its interaction with participants in a protocol . while a natural deduction formulation of deductive systems may seem",
    "`` natural '' and may reflect the meaning of the ( logical ) operators , it does not immediately give us a proof search strategy .",
    "proof search means that we have to apply the rules bottom up , and as the above elimination rule demonstrates , this requires us to come up with a term @xmath4 which might seem arbitrary . for a more complicated example , consider the following elimination rule for _ blind signatures _ @xcite . @xmath3",
    "{ \\gamma \\vdash { \\mathsf{sign}(m , k ) } } { \\gamma \\vdash { \\mathsf{sign}({\\mathsf{blind}(m , r)},k ) } & \\gamma \\vdash r}\\ ] ] the basis for this rule is that the `` unblinding '' operation commutes with signature .",
    "devising a proof search strategy in a natural deduction system containing this type of rule does not seem trivial . in most of the works mentioned above , in order to show the decidability results for the natural deduction system , one needs to prove that the system satisfies a notion of _ locality _ , i.e. , in searching for a proof for @xmath5 , one needs only to consider expressions which are made of subterms from @xmath1 and @xmath6 in addition , one has to also deal with the complication that arises from the use of the algebraic properties of certain operators .    in this work",
    ", we recast the intruder deduction problem as proof search in sequent calculus .",
    "a sequent calculus formulation of dolev - yao intruders was previously used by the first author in a formulation of open bisimulation for the spi - calculus  @xcite to prove certain results related to open bisimulation .",
    "the current work takes this idea further to include richer theories .",
    "part of our motivation is to apply standard techniques , which have been well developed in the field of logic and proof theory , to the intruder deduction problem . in proof theory , sequent calculus",
    "is commonly considered a better calculus for studying proof search and decidability of logical systems , in comparison to natural deduction .",
    "this is partly due to the so - called `` subformula '' property ( that is , the premise of every inference rule is made up of subterms of the conclusion of the rule ) , which in most cases entails the decidability of the deductive system .",
    "it is therefore rather curious that none of the existing works on intruder deduction so far uses sequent calculus to structure proof search .",
    "we consider the ground intruder deduction problem ( i.e. , there are no variables in terms ) under the class of _ ac - convergent theories_. these are equational theories that can be turned into convergent rewrite systems , modulo associativity and commutativity of certain binary operators .",
    "many important theories for intruder deduction fall into this category , e.g. , theories for exclusive - or  @xcite , abelian groups  @xcite , and more generally , certain classes of monoidal theories  @xcite .",
    "we show two main results .",
    "firstly , we show that the decidability of intruder deduction under ac - convergent theories can be reduced , in polynomial time , to _ elementary intruder deduction problems _ , which involve only the equational theories under consideration .",
    "secondly , we show that the intruder deduction problem for a combination of disjoint theories @xmath7 can be reduced , in polynomial time , to the elementary deduction problem _ for each theory @xmath8 .",
    "_ this means that if the elementary deduction problem is decidable for each @xmath8 , then the intruder deduction problem under the combined theory is also decidable .",
    "we note that these decidability results are not really new , although there are slight differences and improvements over the existing works ( see section  [ sec : rel ] ) .",
    "our contribution is more of a methodological nature .",
    "we arrive at these results using rather standard proof theoretical techniques , e.g. , _ cut - elimination _ and permutability of inference rules , in a uniform and systematic way . in particular , we obtain locality of proof systems for intruder deduction , which is one of the main ingredients to decidability results in @xcite , for a wide range of theories that cover those studied in these works .",
    "note that these works deal with a more difficult problem of deducibility constraints , which models _ active intruders _ , whereas we currently deal only with passive intruders .",
    "as future work , we plan to extend our approach to deal with active intruders .",
    "the remainder of the paper is organised as follows .",
    "section  [ sec : intruder ] presents two systems for intruder theories , one in natural deduction and the other in sequent calculus , and show that the two systems are equivalent . in section  [ sec : cutelim ] , the sequent system is shown to enjoy cut - elimination . in section  [ sec : normal ] , we show that cut - free sequent derivations can be transformed into a certain normal form . using this result",
    ", we obtain another `` linear '' sequent system , from which the polynomial reducibility result follows .",
    "section  [ sec : examples ] discusses several example theories which can be found in the literature .",
    "section  [ sec : comb ] shows that the sequent system in section  [ sec : intruder ] can be extended to cover any combination of disjoint ac - convergent theories , and the same decidability results also hold for this extension .",
    "detailed proofs can be found in the appendix .",
    "we consider the following problem of formalising , given a set of messages @xmath1 and a message @xmath0 , whether @xmath0 can be synthesized from the messages in @xmath9 we shall write this judgment as @xmath10 this is sometimes called the ` ground reachability ' problem or the ` intruder deduction ' problem in the literature",
    ".    messages are formed from names , variables and function symbols .",
    "we shall assume the following sets : a countably infinite set @xmath11 of names ranged over by @xmath12 , @xmath13 , @xmath14 , @xmath15 , @xmath16 and @xmath17 ; a countably infinite set @xmath18 of variables ranged over by @xmath19 , @xmath20 and @xmath21 ; and a finite set @xmath22 of symbols representing the _ constructors_. thus @xmath23 is a public key constructor , @xmath24 is a public key encryption function , @xmath25 is the blinding encryption function ( as in @xcite ) , @xmath26 is a pairing constructor , and @xmath27 is the dolev - yao symmetric encryption function .",
    "additionally , we also assume a possibly empty equational theory @xmath28 , whose signature is denoted with @xmath29 we require that @xmath30 function symbols ( including constructors ) are ranged over by @xmath31 , @xmath32 and @xmath33 .",
    "the equational theory @xmath28 may contain at most one associative - commutative function symbol , which we denote with @xmath34 , obeying the standard associative and commutative laws .",
    "we restrict ourselves to equational theories which can be represented by terminating and confluent rewrite systems , modulo the associativity and commutativity of @xmath35 we consider the set of messages generated by the following grammar @xmath36 the message @xmath37 denotes the public key generated from a private key @xmath0 ; @xmath38 denotes a message @xmath0 signed with a private key @xmath4 ; @xmath39 denotes a message @xmath0 encrypted with @xmath4 using a special blinding encryption ; @xmath2 denotes a pair of messages ; and @xmath40 denotes a message @xmath0 encrypted with a key @xmath4 using a dolev - yao symmetric encryption .",
    "the blinding encryption has a special property that it commutes with the @xmath24 operation , i.e. , one can `` unblind '' a signed blinded message @xmath41 using the blinding key @xmath42 to obtain @xmath43 this aspect of the blinding encryption is reflected in its elimination rules , as we shall see later .",
    "we denote with @xmath44 the set of variables occurring in @xmath0 .",
    "a term @xmath0 is _ ground _ if @xmath45 we shall be mostly concerned with ground terms , so unless stated otherwise , we assume implicitly that terms are ground ( the only exception is proposition  [ prop : var - abs ] and proposition  [ prop : var - abs2 ] ) .",
    "we shall use several notions of equality so we distinguish them using the following notation : we shall write @xmath46 to denote syntactic equality , @xmath47 to denote equality modulo associativity and commutativity ( ac ) of @xmath34 , and @xmath48 to denote equality modulo a given equational theory @xmath49 . we shall sometimes omit the subscript in @xmath50 if it can be inferred from context .",
    "given an equational theory @xmath28 , we denote with @xmath51 the set of rewrite rules for @xmath28 ( modulo ac ) .",
    "we write @xmath52 when @xmath0 rewrites to @xmath4 using one application of a rewrite rule in @xmath51 .",
    "the definition of rewriting modulo ac is standard and is omitted here .",
    "the reflexive - transitive closure of @xmath53 is denoted with @xmath54 we shall often remove the subscript @xmath51 when no confusion arises .",
    "a term @xmath0 is in _ @xmath28-normal form _ if @xmath55 for any @xmath56 we write @xmath57 to denote the normal form of @xmath0 with respect to the rewrite system @xmath51 , modulo commutativity and associativity of @xmath34 .",
    "again , the index @xmath28 is often omitted when it is clear which equational theory we refer to .",
    "this notation extends straightforwardly to sets , e.g. , @xmath58 denotes the set obtained by normalising all the elements of @xmath9 a term @xmath0 is said to be _ headed by _ a symbol @xmath31 if @xmath59 .",
    "@xmath0 is _ guarded _ if it is either a name , a variable , or a term headed by a constructor .",
    "a term @xmath0 is an _",
    "@xmath28-alien term _",
    "if @xmath0 is headed by a symbol @xmath60 it is a _",
    "pure @xmath28-term _ if it contains only symbols from @xmath61 , names and variables .",
    "a _ context _ is a term with holes .",
    "we denote with @xmath62 $ ] a context with @xmath63-hole(s ) .",
    "when the number @xmath63 is not important or can be inferred from context , we shall write @xmath64 $ ] instead . viewing a context",
    "@xmath62 $ ] as a tree , each hole in the context occupies a unique position among the leaves of the tree .",
    "we say that a hole occurrence is the @xmath65-th hole of the context @xmath62 $ ] if it is the @xmath65-th hole encountered in an inorder traversal of the tree representing @xmath62.$ ] an @xmath28-context is a context formed using only the function symbols in @xmath29 we write @xmath66 $ ] to denote the term resulting from replacing the holes in the @xmath63-hole context @xmath62 $ ] with @xmath67 with @xmath68 occuping the @xmath65-th hole in @xmath62.$ ]    [ [ natural - deduction - and - sequent - systems ] ] natural deduction and sequent systems + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the standard formulation of the judgment @xmath5 is usually given in terms of a natural - deduction style inference system , as shown in figure  [ fig : nat ] .",
    "we shall refer to this proof system as @xmath69 and write @xmath70 if @xmath5 is derivable in @xmath71 the deduction rules for dolev - yao encryption is standard and can be found in the literature , e.g. , @xcite .",
    "the blind signature rules are taken from the formulation given by bernat and comon - lundh  @xcite .",
    "note that the rule @xmath72 assumes implicitly that signing a message hides its contents .",
    "an alternative rule without this assumption would be @xmath3 { \\gamma \\vdash m } { \\gamma \\vdash { \\mathsf{sign}(m , k)}}\\ ] ] the results of the paper also hold , with minor modifications , if we adopt this rule .",
    "[ cols= \" < , < , < \" , ]     [ prop : normal ] every sequent @xmath5 is provable in @xmath73 if and only if it is provable in @xmath74    we now show that the decidability of the deduction problem @xmath75 can be reduced to decidability of elementary deduction problems .",
    "we consider a representation of terms as directed acyclic graphs ( dag ) , with maximum sharing of subterms .",
    "such a representation is quite standard and can be found in , e.g. , @xcite , so we will not go into the details here .    in the following ,",
    "we denote with @xmath76 the set of subterms of the terms in @xmath9 in the dag representation of @xmath1 , the number of distinct nodes in the dag representing distinct subterms of @xmath1 co - incides with the cardinality of @xmath77 a term @xmath0 is a _ proper subterm _ of @xmath4 if @xmath0 is a subterm of @xmath4 and @xmath78 we denote with @xmath79 the set of proper subterms of @xmath1 , and we define @xmath80 the _ saturated set _ of @xmath1 , written @xmath81 , is the set @xmath82 the cardinality of @xmath81 is at most quadratic in the size of @xmath76 .",
    "if @xmath1 is represented as a dag , one can compute the dag representation of @xmath81 in polynomial time , with only a quadratic increase of the size of the graph . given a dag representation of @xmath83",
    ", we can represent a sequent @xmath5 by associating each node in the dag with a tag which indicates whether or not the term represented by the subgraph rooted at that node appears in @xmath1 or @xmath0 .",
    "therefore , in the following complexity results for deducibility problem @xmath84 ( for some proof system @xmath85 ) , we assume that the input consists of the dag representation of the saturated set @xmath83 , together with approriate tags in the nodes .",
    "since each tag takes only a fixed amount of space ( e.g. , a two - bit data structure should suffice ) , we shall state the complexity result w.r.t .",
    "the size of @xmath86    let @xmath87 be a deduction problem , where @xmath88 is some proof system , and let @xmath17 be the size of @xmath86 let @xmath28 be the equational theory associated with @xmath88 .",
    "suppose that the elementary deduction problem in @xmath28 has complexity @xmath89 where @xmath16 is the size of the input .",
    "then the problem @xmath87 is said to be _ polynomially reducible _ to the elementary deduction problem @xmath90 if it has complexity @xmath91 for some constant @xmath92    a key lemma in proving the decidability result is the following invariant property of linear proofs .",
    "[ lm : st - inv ] let @xmath93 be an @xmath94-derivation of @xmath10 then for every sequent @xmath95 occurring in @xmath93 , we have @xmath96    the existence of linear size proofs then follows from the above lemma .    [ lm : linear ] if there is an @xmath94-derivation of @xmath5 then there is an @xmath94-derivation of the same sequent whose length is at most @xmath97    another useful observation is that the left - rules of @xmath94 are _ invertible _ ; at any point in proof search , we do not lose provability by applying any left rule .",
    "polynomial reducibility of @xmath98 to @xmath90 can then be proved by a deterministic proof search strategy which systematically tries all applicable rules .",
    "[ thm : deducibility ] the decidability of the relation @xmath98 is polynomially reducible to the decidability of elementary deduction @xmath99    note that in the case where the theory @xmath28 is empty , we obtain a ptime decision procedure for intruder deduction with blind signatures .",
    "we now consider several concrete ac convergent theories that are often used in reasoning about security protocols .",
    "decidability of intruder deduction under these theories has been extensively studied @xcite .",
    "these results can be broadly categorized into those with explicit pairing and encryption constructors , e.g. , @xcite , and those where the constructors are part of the equational theories , e.g. , @xcite . for the latter",
    ", one needs explicit decryption operators with , e.g. , an equation like @xmath100 decidability results for these deduction problems are often obtained by separating elementary deducibility from the general deduction problem .",
    "this is obtained by studying some form of normal derivations in a natural deduction setting .",
    "such a reduction , as has been shown in the previous section , applies to our calculus in a more systematic fashion .",
    "[ [ exclusive - or . ] ] exclusive - or .",
    "+ + + + + + + + + + + + +    the signature of this theory consists of a binary operator @xmath34 and a constant @xmath101 the theory is given by the axioms of associativity and commutativity of @xmath34 together with the axiom @xmath102 and @xmath103 this theory can be turned into an ac convergent rewrite system with the following rewrite rules : @xmath104 checking @xmath105 can be done in ptime , as shown in , e.g. , @xcite .    [",
    "[ abelian - groups . ] ] abelian groups .",
    "+ + + + + + + + + + + + + + +    the exclusive - or theory is an instance of abelian groups , where the inverse of an element is the element itself .",
    "the more general case of abelian groups includes an inverse operator , denoted with @xmath106 here .",
    "the equality theory for abelian groups is given by the axioms of associativity and commutativity , plus the theory @xmath107 the equality theory of abelian groups can be turned into a rewrite system modulo ac by orienting the above equalities from left to right , in addition to the following rewrite rules : @xmath108 one can also obtain an ac convergent rewrite system for an extension of abelian groups with a homomorphism axiom involving a unary operator @xmath33 : @xmath109 in this case , the rewrite rules above need to be extended with @xmath110 decidability of elementary deduction under abelian groups ( with homomorphism ) can be reduced to solving a system of linear equations over some semirings ( see @xcite for details ) .",
    "we now consider the intruder deduction problem under a convergent ac theory @xmath28 , which is obtained from the union of pairwise disjoint convergent ac theories @xmath111 each theory @xmath8 may contain an associative - commutative binary operator , which we denote with @xmath112 we show that the intruder deduction problem under @xmath28 can be reduced to the elementary deduction problem of each @xmath113    given a term @xmath114 , where @xmath31 is a function symbol ( i.e. , a constructor , an equational symbol or @xmath34 ) , the terms @xmath115 are called the _ immediate subterms _ of @xmath6 given a term @xmath0 and a subterm occurrence @xmath4 in @xmath0 , we say that @xmath4 is a _ cross - theory subterm _ of @xmath0 if @xmath4 is headed with a symbol @xmath116 and it is an immediate subterm of a subterm in @xmath0 which is headed by a symbol @xmath117 , where @xmath118 we shall also refer to @xmath4 as an _ @xmath119-subterm _ of @xmath0 when we need to be explicit about the equational theories involved .    throughout this section , we consider a sequent system @xmath88 , whose rules are those of @xmath73 , but with @xmath120 replaced by the rule below left and with the addition of the rule below right where @xmath4 is a cross - theory subterm of some term in @xmath121 : @xmath122 { \\gamma \\vdash m } { \\begin{array}{c } m \\approx_{e } c[m_1,\\ldots , m_k ] \\\\",
    "\\hbox{$c[\\ ] $ an $ e_i$-context , and $ m_1,\\ldots , m_k \\in \\gamma$ } \\end{array } } \\qquad \\infer[cs ] { \\gamma \\vdash m } { \\gamma \\vdash n & \\gamma , n \\vdash m}\\ ] ]    the analog of proposition  [ prop : s - equal - n ] holds for @xmath88 .",
    "its proof is a straightforward adaptation of the proof of proposition  [ prop : s - equal - n ] .",
    "[ prop : d - equal - n ] the judgment @xmath5 is provable in the natural deduction system @xmath69 , under theory @xmath28 , if and only if @xmath123 is provable in the sequent system @xmath88 .    cut elimination also holds for @xmath88 .",
    "its proof is basically the same as the proof for @xmath73 , since the `` logical structures '' ( i.e. , those concerning constructors ) are the same .",
    "the only difference is in the treatment of abstracted terms ( the rules @xmath124 and @xmath125 ) . in @xmath88",
    "we allow abstraction of arbitrary cross - theory subterms , in addition to guarded subterm abstraction .",
    "the crucial part of the proof in this case relies on the variable abstraction technique ( proposition  [ prop : var - abs ] and proposition  [ prop : var - abs2 ] ) , which applies to both guarded subterm and cross - theory subterm abstraction .",
    "[ thm cut elim for d ] the cut rule is admissible for @xmath88 .",
    "the decidability result for @xmath73 also holds for @xmath126 this can be proved with straightforward modifications of the similar proof for @xmath73 , since the extra rule @xmath125 has the same structure as @xmath124 in @xmath127 it is easy to see that the same normal forms for @xmath73 also holds for @xmath128 with @xmath125 considered as a left - rule .",
    "it then remains to design a linear proof system for @xmath126 we first define the notion of right - deducibility : the relation @xmath129 holds if and only if the sequent @xmath5 is derivable in @xmath88 using only the right rules .",
    "we next define a linear system for @xmath88 , called @xmath130 , which consists of the rules of @xmath94 defined in the previous section , but with the proviso @xmath131 changed to @xmath129 , and with the additional rule : @xmath132 { \\gamma \\vdash m } { \\gamma , r \\vdash m}\\ ] ] where @xmath133 is a cross - theory subterm of some term in @xmath121 and @xmath134    a sequent @xmath5 is provable in @xmath88 if and only if it is provable in @xmath135    the notion of polynomial reducibility is slightly changed .",
    "suppose each elementary deduction problem in @xmath8 is bounded by @xmath136 let @xmath16 be the size of @xmath86 then the deduction problem @xmath87 is polynomially reducible to @xmath137 if it has complexity @xmath138 , for some constant @xmath63 .",
    "[ thm : d - deducibility ] the decidability of the relation @xmath139 is polynomially reducible to the decidability of elementary deductions @xmath140 @xmath141 @xmath142 .",
    "we have shown that decidability of the intruder deduction problem , under a range of equational theories , can be reduced to the simpler problem of elementary deduction , which amounts to solving equations in the underlying equational theories .",
    "this reduction is obtained in a purely proof theoretical way , using standard techniques such as cut elimination and permutation of inference rules .",
    "there are several existing works in the literature that deal with intruder deduction .",
    "our work is more closely related to , e.g. , @xcite , in that we do not have explicit destructors ( projection , decryption , unblinding ) , than , say , @xcite . in the latter work ,",
    "these destructors are considered part of the equational theory , so in this sense our work slightly extends theirs to allow combinations of explicit and implicit destructors .",
    "a drawback for the approach with explicit destructors is that one needs to consider these destructors together with other algebraic properties in proving decidability , although recent work in combining decidable theories @xcite allows one to deal with them modularly .",
    "combination of intruder theories has been considered in @xcite , as part of their solution to a more difficult problem of deducibility constraints which assumes active intruders . in particular ,",
    "delaune , et .",
    "@xcite obtain results similar to what we have here concerning combination of ac theories .",
    "one difference between these works and ours is in how this combination is derived .",
    "their approach is more algorithmic whereas our result is obtained through analysis of proof systems .",
    "it remains to be seen whether sequent calculus , and its associated proof techniques , can prove useful for richer theories . for certain deduction problems , i.e. , those in which the constructors interact with the equational theory , there does not seem to be general results like the ones we obtain for theories with no interaction with the constructors .",
    "one natural problem where this interaction occurs is the theory with homomorphic encryption , e.g. , like the one considered in @xcite .",
    "another interesting challenge is to see how sequent calculus can be used to study the more difficult problem of solving intruder deduction constraints , e.g. , like those studied in @xcite .",
    "[ [ acknowledgement ] ] acknowledgement + + + + + + + + + + + + + + +    we thank the anonymous referees of earlier drafts of this paper for their careful reading and helpful comments .",
    "this work has been supported by the australian research council ( arc ) discovery project dp0880549",
    ".    10    m.  abadi and v.  cortier . deciding knowledge in security protocols under equational theories . , 367(1 - 2):232 , 2006 .",
    "r.  m. amadio and d.  lugiez . on the reachability problem in cryptographic protocols . in c.",
    "palamidessi , editor , _ concur _ , volume 1877 of _ lncs _ , pages 380394 .",
    "springer , 2000 .",
    "m.  arnaud , v.  cortier , and s.  delaune . combining algorithms for deciding knowledge in security protocols . in b.",
    "konev and f.  wolter , editors , _ frocos _ , volume 4720 of _ lncs _ , pages 103117 .",
    "springer , 2007 .",
    "f.  baader and k.  u. schulz .",
    "unification in the union of disjoint equational theories : combining decision procedures .",
    ", 21(2):211243 , 1996 .",
    "v.  bernat and h.  comon - lundh .",
    "normal proofs in intruder theories . in _",
    "asian 2006 _ , volume 4435 of _ lncs _ , pages 151166 .",
    "springer , 2007 .",
    "m.  boreale .",
    "symbolic trace analysis of cryptographic protocols . in f.",
    "orejas , p.  g. spirakis , and j.  van leeuwen , editors , _ icalp _ , volume 2076 of _ lncs _ , pages 667681 .",
    "springer , 2001 .",
    "y.  chevalier , r.  ksters , m.  rusinowitch , and m.  turuani .",
    "an np decision procedure for protocol insecurity with xor . in _ lics _ , pages 261270 , 2003 .",
    "y.  chevalier and m.  rusinowitch .",
    "combining intruder theories . in l.",
    "caires , g.  f. italiano , l.  monteiro , c.  palamidessi , and m.  yung , editors , _ icalp _ , volume 3580 of _ lncs _ , pages 639651 .",
    "springer , 2005 .    h.  comon - lundh and v.  shmatikov .",
    "intruder deductions , constraint solving and insecurity decision in presence of exclusive or . in _ lics _ , pages 271280 .",
    "ieee computer society , 2003 .",
    "v.  cortier and s.  delaune .",
    "deciding knowledge in security protocols for monoidal equational theories . in n.",
    "dershowitz and a.  voronkov , editors , _ lpar _ , volume 4790 of _ lncs _ , pages 196210 .",
    "springer , 2007 .",
    "v.  cortier , s.  delaune , and p.  lafourcade .",
    "a survey of algebraic properties used in cryptographic protocols .",
    ", 14(1):143 , 2006 .",
    "s.  delaune .",
    "easy intruder deduction problems with homomorphisms .",
    ", 97(6):213218 , 2006 .",
    "s.  delaune , p.  lafourcade , d.  lugiez , and r.  treinen .",
    "symbolic protocol analysis in presence of a homomorphism operator and _ exclusive or_. in m.  bugliesi , b.  preneel , v.  sassone , and i.  wegener , editors , _ icalp ( 2 ) _ , volume 4052 of _ lncs _ , pages 132143 .",
    "springer , 2006 .",
    "s.  delaune , p.  lafourcade , d.  lugiez , and r.  treinen .",
    "symbolic protocol analysis for monoidal equational theories .",
    ", 206(2 - 4):312351 , 2008 .",
    "a.  fujioka , t.  okamoto , and k.  ohta . a practical secret voting scheme for large scale elections . in _",
    "asiacrypt 1992 _ , volume 718 of _ lncs _ , pages 244251 .",
    "springer , 1993 .",
    "s.  kremer and m.  ryan .",
    "analysis of an electronic voting protocol in the applied pi calculus . in _ esop _ ,",
    "volume 3444 of _ lncs _ , pages 186200 .",
    "springer , 2005 .",
    "p.  lafourcade , d.  lugiez , and r.  treinen .",
    "intruder deduction for the equational theory of abelian groups with distributive encryption .",
    ", 205(4):581623 , 2007 .",
    "m.  schmidt - schau .",
    "unification in a combination of arbitrary disjoint equational theories .",
    ", 8(1/2):5199 , 1989 .",
    "a trace based bisimulation for the spi calculus : an extended abstract . in _ aplas _ ,",
    "volume 4807 of _ lncs _ , pages 367382 .",
    "springer , 2007 .",
    "let @xmath93 be a natural deduction derivation of @xmath5 .",
    "we construct a sequent derivation @xmath144 of @xmath123 by induction on @xmath147 the @xmath120 rule translates to the @xmath120 rule in sequent calculus ; the introduction rules for constructors translate to the right - rules for the same constructors .",
    "if @xmath93 ends with the @xmath148-rule , then the premise and the conclusion of the rules translate to the same sequent , hence @xmath144 is constructed by induction hypothesis .",
    "it remains to show the translations for elimination rules and rules concerning @xmath149    * suppose @xmath93 ends with @xmath150 , for some @xmath151 : @xmath152 { \\gamma \\vdash f(m_1,\\ldots , m_k ) } {   \\deduce{\\gamma \\vdash m_1}{\\pi_1 }   & \\cdots &   \\deduce{\\gamma \\vdash m_k}{\\pi_k } } \\ ] ] by induction hypothesis , we have sequent derivations @xmath153 of @xmath154 , for each @xmath155 .",
    "lemma  [ lm : weak ] , applied to the @xmath153 , gives us another sequent derivation @xmath156 of @xmath157 we note that the sequent @xmath158 is provable in the sequent system by an application of the @xmath120-rule .",
    "the derivation @xmath144 is then constructed by successive applications of the cut rule to this sequent with @xmath159 where the @xmath65-th cut eliminates @xmath160 * suppose @xmath93 ends with @xmath161 @xmath162 { \\gamma \\vdash m}{\\deduce{\\gamma \\vdash { \\langle m , n \\rangle}}{\\pi_1}}\\ ] ] note that @xmath163 by induction hypothesis , we have a sequent derivation @xmath164 of @xmath165 , and since the sequent @xmath166 is derivable in sequent calculus ( using an @xmath120 rule followed by a @xmath167-rule ) , we can use the cut rule to get a sequent derivation of @xmath168 * suppose @xmath93 ends with @xmath169 @xmath170 { \\gamma \\vdash m } {    \\deduce{\\gamma \\vdash { \\{m\\}_{n}}}{\\pi_1 }    &    \\deduce{\\gamma \\vdash n}{\\pi_2 } } \\ ] ] by induction hypothesis , we have a sequent derivation @xmath164 of @xmath171 and a sequent derivation @xmath172 of @xmath173 by lemma  [ lm : weak ] , we have a derivation @xmath174 of @xmath175 we construct a sequent derivation for the sequent @xmath176 this can be done ( in a bottom - up proof construction ) by an application of @xmath177 , followed by two applications of @xmath178 then @xmath144 is constructed by applying the cut rule to this sequent using @xmath164 and @xmath179",
    "* suppose @xmath93 ends with @xmath72 : @xmath180 { \\gamma \\vdash m } {   \\deduce{\\gamma \\vdash { \\mathsf{sign}(m , k)}}{\\pi_1 }   &   \\deduce{\\gamma \\vdash { \\mathsf{pub}(k)}}{\\pi_2 } } \\ ] ] by induction hypothesis , we have a sequent derivation @xmath164 and a sequent derivation @xmath172 of , respectively , @xmath181 let @xmath182 be a derivation of @xmath183 obtained by an application of lemma  [ lm : weak ] to @xmath184 let @xmath174 be the derivation @xmath185 { { \\gamma\\!\\!\\downarrow\\ } , { \\mathsf{sign}({m\\!\\!\\downarrow\\ } , { k\\!\\!\\downarrow\\ } ) } , { \\mathsf{pub}({k\\!\\!\\downarrow\\ } ) } \\vdash { m\\!\\!\\downarrow\\ } } {   \\infer[id ]   { { \\gamma\\!\\!\\downarrow\\ } , { \\mathsf{sign}({m\\!\\!\\downarrow\\ } , { k\\!\\!\\downarrow\\ } ) } , { \\mathsf{pub}({k\\!\\!\\downarrow\\ } ) } , { m\\!\\!\\downarrow\\ } \\vdash { m\\!\\!\\downarrow\\ } }   { } } \\ ] ] then @xmath144 is constructed by successive applications of @xmath182 and @xmath164 to @xmath179 * the cases where @xmath93 ends with @xmath186 is analogous to the case with @xmath187 .",
    "* suppose @xmath93 ends with @xmath188 : @xmath189 { \\gamma \\vdash { \\mathsf{sign}(m , k ) } } { \\deduce{\\gamma \\vdash { \\mathsf{sign}({\\mathsf{blind}(m , r)},k)}}{\\pi_1 }   &    \\deduce{\\gamma \\vdash r}{\\pi_2 } } \\ ] ] by induction hypothesis , we have a derivation @xmath164 and a derivation @xmath172 of , respectively , @xmath190 let @xmath174 be the derivation @xmath191 { { \\gamma\\!\\!\\downarrow\\ } , { \\mathsf{sign}({\\mathsf{blind}({m\\!\\!\\downarrow\\ } , { r\\!\\!\\downarrow\\ } ) } , { k\\!\\!\\downarrow\\ } ) }   \\vdash { \\mathsf{sign}({m\\!\\!\\downarrow\\ } , { k\\!\\!\\downarrow\\ } ) } } { \\deduce{\\ldots \\vdash { r\\!\\!\\downarrow\\ } } { \\pi_2 '' } & \\infer[id ] { \\ldots , { \\mathsf{sign}({m\\!\\!\\downarrow\\ } , { k\\!\\!\\downarrow\\ } ) } , { r\\!\\!\\downarrow\\ } \\vdash { \\mathsf{sign}({m\\!\\!\\downarrow\\ } , { k\\!\\!\\downarrow\\ } ) } } { } } \\ ] ] where @xmath182 is obtained from @xmath172 by weakening the sequent with @xmath192 then the derivation @xmath144 is constructed by a cut between @xmath164 and @xmath179        * the right - introduction rules for @xmath73 maps to the same introduction rules in @xmath71 @xmath144 in this case is constructed straightforwardly from the induction hypothesis using the introduction rules of @xmath71 * if @xmath93 ends with an @xmath120 rule , i.e. , @xmath194 $ ] , for some @xmath195 and @xmath28-context @xmath196 $ ] , we construct a derivation @xmath197 of @xmath198 $ ] by induction on the context @xmath64 $ ] .",
    "this is easily done using the @xmath150 introduction rule in @xmath71 the derivation @xmath144 is then constructed from @xmath197 by an application of the @xmath148-rule .",
    "* suppose @xmath199 and @xmath93 ends with @xmath200 @xmath201 { \\gamma ' , { \\langle u , v \\rangle } \\vdash m } { \\deduce{\\gamma ' , { \\langle u , v \\rangle } , u , v \\vdash m}{\\pi_1}}\\ ] ] by induction hypothesis , we have an @xmath69-derivation @xmath164 of @xmath202 .",
    "the derivation @xmath144 is constructed inductively from @xmath164 by copying the same rule applications in @xmath164 , except when @xmath164 is either @xmath203 { \\gamma , u , v \\vdash u } { } ~ \\hbox { or } ~ \\infer[id ] { \\gamma , u , v \\vdash v } { } \\ ] ] in which case , @xmath144 is @xmath162 { \\gamma \\vdash u } {    \\infer[id ]    { \\gamma \\vdash { \\langle u , v \\rangle } } { } } ~ \\hbox { and } ~ \\infer[p_e ] { \\gamma \\vdash v } {    \\infer[id ]    { \\gamma \\vdash { \\langle u , v \\rangle } } { } } \\ ] ] respectively .",
    "* suppose @xmath204 and @xmath93 ends with @xmath205 @xmath206 { \\gamma ' , { \\{u\\}_{v } } \\vdash m } {   \\deduce{\\gamma \\vdash v}{\\pi_1 }   &   \\deduce{\\gamma , u , v \\vdash m}{\\pi_2 } } \\ ] ] by induction hypothesis , we have an @xmath69-derivation @xmath164 of @xmath207 and an @xmath69-derivation @xmath172 of @xmath208 @xmath144 is then constructed inductively from @xmath172 by applying the same rules as in @xmath172 , except when @xmath172 is either @xmath203 { \\gamma , u , v \\vdash u } { } ~ \\hbox { or } ~ \\infer[id ] { \\gamma , u , v \\vdash v}{}\\ ] ] in which case , @xmath144 is , respectively , @xmath170 { \\gamma \\vdash u } {    \\infer[id]{\\gamma \\vdash { \\{u\\}_{v } } } { }    &    \\deduce{\\gamma \\vdash v}{\\pi_1 ' } } \\ ] ] and @xmath209 * suppose @xmath210 and @xmath93 ends with @xmath211 : @xmath185 { \\gamma ' , { \\mathsf{sign}(n , k ) } , { \\mathsf{pub}(l ) } \\vdash m } { \\deduce{\\gamma ' , { \\mathsf{sign}(n , k ) } , { \\mathsf{pub}(l ) } , n \\vdash m}{\\pi_1}}\\ ] ] where @xmath212 ( hence @xmath213 ) . by induction hypothesis",
    ", we have an @xmath69-derivation @xmath164 of @xmath214 as in the previous case , the derivation @xmath144 is constructed by imitating the rules of @xmath164 , except for the following @xmath120 case : @xmath203 { \\gamma ' , { \\mathsf{sign}(n , k ) } , { \\mathsf{pub}(l ) } , n",
    "\\vdash n } { } \\ ] ] which is replaced by @xmath180 { \\gamma , { \\mathsf{sign}(n , k ) } , { \\mathsf{pub}(l ) } \\vdash n } {   \\infer[id ]   { \\gamma ' , { \\mathsf{sign}(n , k ) } , { \\mathsf{pub}(l ) } \\vdash { \\mathsf{sign}(n , k ) } }   { }   &   \\infer[\\approx ]   { \\gamma ' , { \\mathsf{sign}(n , k ) } , { \\mathsf{pub}(l ) } \\vdash { \\mathsf{pub}(k ) } }   {    \\infer[id ]    { \\gamma ' , { \\mathsf{sign}(n , k ) } , { \\mathsf{pub}(l ) } \\vdash { \\mathsf{pub}(l ) } }    { }   } } \\ ] ] * the case where @xmath93 ends with @xmath215 is similar to the case with @xmath216 * suppose @xmath217 and @xmath93 ends with @xmath218 : @xmath191 { \\gamma ' , { \\mathsf{sign}({\\mathsf{blind}(n , r)},k ) } \\vdash m } { \\deduce { \\gamma \\vdash r}{\\pi_1 } & \\deduce { \\gamma , { \\mathsf{sign}(n , k ) } , r \\vdash m}{\\pi_2 } } \\ ] ] similarly to the previous case , we apply induction hypothesis to both @xmath197 and @xmath219 , obtaining @xmath164 and @xmath172 .",
    "the derivation @xmath144 is constructed by imitating the rules of @xmath172 , but with the following @xmath120 instances : @xmath203 { \\gamma , { \\mathsf{sign}(n , k ) } , r \\vdash { \\mathsf{sign}(n , k ) } } { } \\qquad \\infer[id ] { \\gamma , { \\mathsf{sign}(n , k ) } ,",
    "r \\vdash r}{}\\ ] ] replaced by @xmath3 { \\gamma \\vdash { \\mathsf{sign}(n , k ) } } {   \\infer[id ]   { \\gamma \\vdash { \\mathsf{sign}({\\mathsf{blind}(n , r)},k ) } } { }   &   \\infer [ ]   { \\gamma \\vdash r}{\\pi_1 ' } } \\quad \\hbox { and } \\quad \\deduce{\\gamma \\vdash r}{\\pi_1'}.\\ ] ] * suppose @xmath93 ends with @xmath124 : @xmath220 { \\gamma \\vdash m } { \\deduce{\\gamma \\vdash a}{\\pi_1 }    &   \\deduce{\\gamma , a \\vdash m}{\\pi_2 } } \\ ] ] by induction hypothesis , we have an @xmath69-derivation @xmath164 of @xmath221 and an @xmath69-derivation @xmath172 of @xmath222 again , as in the previous cases , we construct @xmath144 inductively , on the height of @xmath172 , by imitating the rules in @xmath172 , except when @xmath172 ends with an instance of @xmath120 of the form @xmath203 { \\gamma , a \\vdash a } { } \\ ] ] in which case , @xmath144 is @xmath209                * if @xmath0 is a name then the lemma holds vacuously .",
    "* suppose @xmath225 there are two cases to consider : * * the redex is in @xmath226 .",
    "this case follows straightforwardly from the induction hypothesis and the definition of @xmath227 . * * the redex is @xmath0 .",
    "then there must be a rewrite rule in @xmath51 of the form @xmath228 \\rightarrow c'[x_1,\\ldots , x_n]\\ ] ] where @xmath196 $ ] and @xmath229 $ ] are @xmath8-context , such that @xmath230)\\sigma   \\qquad \\hbox { and } \\qquad n \\equiv ( c'[x_1,\\ldots , x_l])\\sigma\\ ] ] for some substitution @xmath231 note that since @xmath0 is a quasi @xmath8 term , it follows that each @xmath232 is also a quasi @xmath8 term .",
    "hence @xmath4 must also be a quasi @xmath8 term .",
    "from the definition of @xmath227 , we have the following equality ( we abbreviate @xmath227 as @xmath233 ) : @xmath234\\sigma ) \\\\ & = c[f(x_1\\sigma ) , \\ldots , f(x_l\\sigma ) ] \\\\ & = c[x_1,\\ldots , x_l ] \\sigma ' \\end{array}\\ ] ] where @xmath235 is the substitution @xmath236 similarly , we can show that @xmath237\\sigma'.$ ] therefore , we have @xmath238 * suppose @xmath239 and @xmath240 .",
    "then @xmath0 is an @xmath8-alien subterm of @xmath0 , and since @xmath0 is a quasi @xmath8 term , @xmath0 must be in @xmath28-normal form .",
    "therefore no reduction is possible , hence the lemma holds vacuously .",
    "it is enough to show that this holds for one - step rewrite @xmath224 this can be done by induction on the structure of @xmath0 . in particular , we need to show that a rewrite rule that applies to @xmath245 also applies to @xmath0 .",
    "let @xmath246 be the free variables in @xmath245 .",
    "let @xmath247 be normal @xmath28-terms such that @xmath248 for each @xmath249 , and @xmath250 then we can show by induction on the structure of @xmath0 and @xmath4 , and using the fact that they are quasi @xmath8-terms , that @xmath251 note that for any rewrite rule in a rewrite system , by definition , we have that all the variables free in the right - hand side of the rule are also free in the left - hand side . hence , the free variables of @xmath252 are among the free variables in @xmath245 since they are related by rewriting",
    ".    now suppose there is a rewrite rule in @xmath51 @xmath253 \\rightarrow c'[x_1,\\ldots , x_l]\\ ] ] where @xmath196 $ ] and @xmath229 $ ] are @xmath8-contexts , such that @xmath254\\theta$ ] and @xmath255\\theta$ ] , for some substitution @xmath231 then we have @xmath256\\theta)\\sigma \\equiv c[x_1,\\ldots , x_n](\\theta \\circ \\sigma)\\ ] ] and @xmath257\\theta)\\sigma \\equiv c'[x_1,\\ldots , x_n](\\theta \\circ \\sigma).\\ ] ] hence we also have @xmath258              let @xmath93 be a cut - free derivation of @xmath268 .",
    "we construct a cut - free derivation @xmath144 of @xmath269 by induction on @xmath270 with subinduction on @xmath147 the only non - trivial cases are when @xmath93 ends with @xmath218 , acting on @xmath271 , and when @xmath93 ends with @xmath120 and @xmath271 is used in the rule .",
    "we examine these cases in more details below .",
    "* suppose @xmath93 ends with @xmath218 , acting on @xmath271 , i.e. , @xmath272 and @xmath273 : @xmath191 { \\gamma , { \\mathsf{sign}({\\mathsf{blind}(n , r)},y ) } \\vdash m } { \\deduce{\\gamma , { \\mathsf{sign}({\\mathsf{blind}(n , r)},y ) } \\vdash r}{\\pi_1 } & \\deduce{\\gamma , { \\mathsf{sign}({\\mathsf{blind}(n , r)},y ) } , { \\mathsf{sign}(n , y ) } , r \\vdash m}{\\pi_2 } } \\ ] ] applying the inner induction hypothesis ( on proof height ) to @xmath197 and @xmath219 we obtain two derivations @xmath164 and @xmath172 of @xmath274 next we apply the outer induction hypothesis ( on the size of @xmath271 ) to decompose @xmath275 in the latter sequent to get a derivation @xmath182 of @xmath276 the derivation @xmath144 is constructed as follows : @xmath277 { \\gamma , { \\mathsf{blind}(n , r ) } , y \\vdash m } { \\deduce{\\gamma , { \\mathsf{blind}(n , r ) } , y \\vdash r}{\\pi_1 ' } & \\deduce{\\gamma , { \\mathsf{blind}(n , r ) } , n , y , r \\vdash m}{\\pi_2 '' } } \\ ] ] * suppose @xmath93 ends with @xmath120 .",
    "the only non - trivial case is when @xmath271 is used in the rule , that is , we have @xmath278\\ ] ] where @xmath195 , @xmath64 $ ] is an @xmath28-context and @xmath271 fills @xmath17-holes in @xmath64.$ ] we distinguish several cases : * * there is a guarded subterm @xmath279 in @xmath0 or some @xmath68 such that @xmath280 note that in this case @xmath279 must be of the form @xmath281 for some @xmath282 and @xmath283 in this case , @xmath144 is constructed as follows : @xmath220 { \\gamma , x , y \\vdash m } {    \\deduce{\\gamma , x , y \\vdash f(x',y')}{\\xi }    &    \\infer[id ]    { \\gamma , x , y , f(x',y ' ) \\vdash m } { } } \\ ] ] where @xmath284 is a derivation formed using @xmath120 and the right rules for the constructor @xmath31 . * * suppose that there is no subterm @xmath279 of @xmath0 , @xmath115 such that @xmath285 note that since @xmath0 is in normal form , we have @xmath286 \\to^ * m.\\ ] ] and both @xmath287 $ ] and @xmath0 are quasi @xmath28-terms .",
    "let @xmath288 .",
    "it follows from proposition  [ prop : var - abs ] that @xmath289 ) = c[x^n , f_e(m_1 ) , \\ldots , f_e(m_k ) ] \\to^ * f_e(m).\\ ] ] since no subterms of @xmath0 and @xmath247 are equivalent to @xmath271 , @xmath19 does not appear in any of @xmath290 , @xmath291 .",
    "now let @xmath12 be a name that does not occur in @xmath1 , @xmath266 , @xmath267 or @xmath0 .",
    "since rewriting is invariant under variable / name substitution , by substituting @xmath12 for @xmath19 in the above sequence of rewrites , we have @xmath292 ) = c[a^n , f_e(m_1 ) , \\ldots , f_e(m_k ) ] \\to^ * f_e(m).\\ ] ] now by proposition  [ prop : var - abs2 ] , we have @xmath293 \\to^ * m.\\ ] ] by substituting @xmath266 for @xmath12 in this sequence , we have @xmath294 \\longrightarrow_{\\rscr}^ * m.\\ ] ] thus , in this case , @xmath144 is constructed by an application of @xmath178        by induction on @xmath147 the case where @xmath93 ends with @xmath120 , or rules in which @xmath298 is not principal , is trivial .",
    "the other cases , where @xmath93 ends with a rule applied to @xmath298 , are given in the following .",
    "* suppose @xmath93 ends with @xmath167 on @xmath299 this means that @xmath298 is a guarded term , i.e. , it is a pair @xmath300 for some @xmath301 and @xmath302 , and therefore @xmath303 let @xmath304 . by proposition  [ prop : var - abs ]",
    ", we have @xmath305 obviously , @xmath19 has to occur in @xmath306 for some @xmath307 . without loss of generality",
    "we assume that @xmath308 this means that there exists a subterm @xmath279 of @xmath309 such that @xmath310 and @xmath311 and @xmath312 .",
    "that is , @xmath313 $ ] for some context @xmath314.$ ] + let @xmath315 be the set @xmath316 . then @xmath144 is the derivation @xmath220 { \\gamma , c[{\\langle u ' , v ' \\rangle } ] , x_2 , \\ldots , x_k \\vdash m } {    \\infer[id ]    { \\gamma ' \\vdash { \\langle u ' , v ' \\rangle } } { }    &    \\deduce{\\gamma ' , { \\langle u ' , v ' \\rangle } \\vdash m}{\\pi_1 } } \\ ] ] the instance of @xmath120 above is valid since @xmath317 and @xmath318 @xmath141 @xmath319 the derivation @xmath197 is obtained by weakening @xmath93 with @xmath295 and applying lemma  [ lm : equiv ] to replace @xmath300 with its equivalent @xmath320 the cases where @xmath298 is headed with some other constructor are proved analogously .",
    "* suppose @xmath93 ends with @xmath124 on @xmath298 : @xmath220 { \\gamma , { f(x_1,\\ldots , x_k)\\!\\!\\downarrow\\ } \\vdash m } { \\deduce{\\gamma ' \\vdash a}{\\pi_1 } & \\deduce{\\gamma ' , a \\vdash m}{\\pi_2 } } \\ ] ] where @xmath279 is a guarded subterm of @xmath298 and @xmath321 using a similar argument as in the previous case ( utilising proposition  [ prop : var - abs ] ) , we can show that @xmath322 for some @xmath323 which is either an @xmath28-alien subterm of some @xmath307 ( w.l.o.g .",
    ", assume @xmath324 ) or a guarded subterm of an @xmath28-alien subterm of @xmath307 . in either case",
    ", we have that @xmath325 $ ] for some context @xmath314.$ ] then @xmath144 is @xmath220 { \\gamma , x_1 , \\ldots , x_k \\vdash m } {    \\deduce{\\gamma '' \\vdash a'}{\\pi_1 ' }    &    \\deduce{\\gamma'',a ' \\vdash m}{\\pi_2 ' } } \\ ] ] where @xmath326 and @xmath164 and @xmath172 are obtained by applying the induction hypothesis on @xmath197 and @xmath219 , followed by applications of lemma  [ lm : equiv ] to replace @xmath279 with its equivalent @xmath327              we give a set of transformation rules for derivations ending with cuts and show that given any derivation , there is a sequence of reductions that applies to this derivation , and terminates with a cut free derivation with the same end sequent .",
    "this is proved by induction on the height of the _ left premise derivation _ immediately above the cut rule .",
    "this measure is called the _ cut rank_. as usual in cut elimination ,",
    "we proceed by eliminating the topmost instances of cut with the highest rank .",
    "so in the following , we suppose a given derivation @xmath93 ending with a cut rule , which is the only cut in @xmath93 , and then show how to transform this to a cut free derivation @xmath330      1 .",
    "suppose the left premise of @xmath93 ends with either @xmath331 , @xmath332 , @xmath333 or @xmath334 , thus @xmath93 is @xmath335 { \\gamma \\vdash r } {   \\infer[\\rho ]   { \\gamma \\vdash f(m , n ) }   { \\deduce{\\gamma \\vdash m}{\\pi_1 } & \\deduce{\\gamma \\vdash n}{\\pi_2 } }   &   \\deduce{\\gamma , f(m , n ) \\vdash r}{\\pi_3 } } \\ ] ] where @xmath31 is a constructor and @xmath336 is its right introduction rule .",
    "by lemma  [ lm : decomp1 ] , we have a cut free derivation @xmath337 of @xmath338 by applying lemma  [ lm : weak ] to @xmath219 , we also have a cut - free derivation @xmath172 of @xmath339 such that @xmath340 the above cut is then reduced to @xmath335 { \\gamma \\vdash r } {   \\deduce{\\gamma \\vdash m}{\\pi_1 }   &   \\infer[cut ]   { \\gamma , m \\vdash r }   {    \\deduce{\\gamma , m \\vdash n } { \\pi_2 ' }    &    \\deduce{\\gamma , m , n \\vdash r}{\\pi_3 ' }   } } \\enspace .\\ ] ] these two cuts can then be eliminated by induction hypothesis since their left premises are of smaller height than the left premise of @xmath193 2 .",
    "suppose the left premise of the cut ends with a left rule acting on @xmath9 we show here the case where the left - rule has only one premise ; generalisation to the other case ( with two premises ) is straightforward .",
    "therefore @xmath93 is of the form : @xmath335 { \\gamma \\vdash r } {   \\infer[\\rho ]   { \\gamma \\vdash m }   {    \\deduce{\\gamma ' \\vdash m}{\\pi_1 }   }   &   \\deduce{\\gamma , m \\vdash r}{\\pi_2 } } \\ ] ] by inspection of the inference rules in figure  [ fig : msg ] , it is clear that in the rule @xmath336 above , we have @xmath143 .",
    "we can therefore weaken @xmath219 to a derivation @xmath172 of @xmath341 with @xmath342 .",
    "the cut is then reduced as follows .",
    "@xmath343 { \\gamma \\vdash r } {   \\infer[cut ]   { \\gamma ' \\vdash r }   {     \\deduce{\\gamma ' \\vdash m}{\\pi_1 }     &     \\deduce{\\gamma ' , m \\vdash r}{\\pi_2 }   } } \\ ] ] the cut rule above @xmath336 can be eliminated by induction hypothesis , the height of the left premise of the cut is smaller than the left premise of the original cut .",
    "3 .   suppose the left premise of the cut ends with @xmath124 , but using a subterm from the right hand side of the sequent , i.e. , @xmath93 is @xmath335 { \\gamma \\vdash r } {    \\infer[gs ]    { \\gamma \\vdash c[a ] }    {      \\deduce{\\gamma \\vdash a}{\\pi_1 }      &      \\deduce{\\gamma , a \\vdash c[a]}{\\pi_2 }    }    &    \\deduce{\\gamma , c[a ] \\vdash r}{\\pi_3 } } \\ ] ] if @xmath314 $ ] is an empty context , then @xmath344 \\equiv a$ ] and the above cut reduces to @xmath335 { \\gamma \\vdash r } {    \\deduce{\\gamma \\vdash a}{\\pi_1 }    &    \\deduce{\\gamma , a \\vdash r}{\\pi_3 } } \\ ] ] this cut can be reduced by induction hypothesis , since the height of the left premise derivation ( @xmath197 ) is smaller than the left premise of the original cut .",
    "if @xmath314 $ ] is a non - empty context , the above cut reduces to the following two cuts : @xmath335 { \\gamma \\vdash r } {    \\deduce{\\gamma \\vdash a}{\\pi_1 }    &    \\infer[cut ]    { \\gamma , a \\vdash r }    {      \\deduce{\\gamma , a \\vdash c[a]}{\\pi_2 }      &      \\deduce{\\gamma , a , c[a ] \\vdash r}{\\pi_3 ' }    }   } \\ ] ] the derivation @xmath337 is obtained by weakening @xmath174 with @xmath279 ( lemma  [ lm : weak ] ) .",
    "both cuts can be removed by induction hypothesis ( the upper cut followed by the lower cut ) .",
    "4 .   suppose the left premise of the cut ends with the @xmath120-rule : @xmath335 { \\gamma \\vdash r } {   \\infer[id ]   { \\gamma \\vdash m }   { }   &   \\deduce{\\gamma , m \\vdash r}{\\pi_1 } } \\ ] ] where @xmath345\\!\\!\\downarrow\\ } $ ] and @xmath346 in this case , we apply lemma  [ lm : decomp3 ] to @xmath197 , hence we get a cut free derivation @xmath144 of @xmath347        we permute any offending right rules up over any left rules .",
    "this is done by induction on the number of occurrences of the offending rules .",
    "we first show the case where @xmath93 has at most one offending right rule . in this case , we show , by induction on the height of @xmath93 , that any offending right - introduction rule can be permuted up in the derivation tree until it is above any left - introduction rule . we show here a non - trivial case involving @xmath124 ; the others are treated analogously .",
    "suppose @xmath93 is as shown below at left where @xmath336 denotes a right introduction rule for the constructor @xmath31 and @xmath279 is a guarded subterm of @xmath0 . by the weakening lemma ( lemma  [ lm : weak ] )",
    ", we have a derivation @xmath337 of @xmath348 with @xmath349 the original derivation @xmath93 is then transformed into the derivation shown below at right : @xmath343 { \\gamma \\vdash f(m , n ) } {   \\infer[gs ]   { \\gamma \\vdash m }   {    \\deduce{\\gamma \\vdash a}{\\pi_1 }    &    \\deduce{\\gamma , a \\vdash m}{\\pi_2 }   }   &   \\deduce{\\gamma \\vdash n}{\\pi_3 } } \\hspace{1 cm } \\infer[gs ] { \\gamma \\vdash f(m , n ) } {   \\deduce{\\gamma \\vdash a}{\\pi_1 }   &   \\infer[\\rho ]   { \\gamma , a \\vdash f(m , n ) }   {    \\deduce{\\gamma , a \\vdash m}{\\pi_2 }    &    \\deduce{\\gamma , a \\vdash n}{\\pi_3 ' }   } } \\ ] ]            let @xmath93 be a cut - free derivation of @xmath5 . by lemma  [ lm : perm1 ] , we can assume without loss of generality that all the right rules in @xmath93 appear above the left rules .",
    "we construct a normal derivation @xmath144 of the same sequent by induction on the number of offending left rules in @xmath93 .",
    "we first consider the case where @xmath93 has at most one offending left rule .",
    "let @xmath284 be a subtree of @xmath93 where the offending rule occurs , i.e. , @xmath284 ends with a branching left rule , whose left premise derivation ends with a left rule .",
    "we show by induction on the height of the left premise derivation of the last rule in @xmath284 that @xmath284 can be transformed into a normal derivation .",
    "there are two cases to consider : one in which the left premise derivation ends with a branching left rule and the other where it ends with a non - branching left rule .",
    "we consider the former case here , the latter can be dealt with analogously .",
    "so suppose @xmath284 is of the form : @xmath350 { \\gamma_1 \\vdash m ' } {    \\infer[l_2 ]    { \\gamma_1 \\vdash n_1 }    {      \\deduce{\\gamma_1 \\vdash n_2}{\\pi_1 }      &      \\deduce{\\gamma_2 \\vdash n_1}{\\pi_2 }     }    &    \\deduce{\\gamma_3 \\vdash m'}{\\pi_3 } } \\ ] ] where @xmath351 is a left rule , and @xmath197 , @xmath219 and @xmath174 are normal derivations , @xmath352 and @xmath353 we first weaken @xmath174 into a derivation @xmath337 of @xmath354 , where @xmath355 . such a weakening can be easily shown to not affect the shape of the derivations ( i.e.",
    ", it does not introduce or remove any rules in @xmath174 ) .",
    "@xmath284 is then transformed into @xmath356 { \\gamma_1 \\vdash m ' } {    \\deduce{\\gamma_1 \\vdash n_2}{\\pi_1 }    &    \\infer[l_1 ]    { \\gamma_2 \\vdash m ' }    {      \\deduce{\\gamma_2 \\vdash n_1}{\\pi_2 }      &      \\deduce{\\gamma_4 \\vdash m'}{\\pi_3 ' }    } } \\ ] ] by inspection of the rules in figure  [ fig : msg ] , it can be shown that this transformation is valid for any pair of left rules @xmath357 note that this transformation may introduce at most two offending left rules , i.e. , if @xmath197 and/or @xmath219 end with left rules . but notice that the left premise derivations of both @xmath351 and @xmath358 in this case have smaller height than the left premise derivation of @xmath351 in @xmath284 . by induction hypothesis ,",
    "the right premise derivation of @xmath358 can be transformed into a normal derivation , say @xmath359 , resulting in @xmath356 { \\gamma_1 \\vdash m ' } {    \\deduce{\\gamma_1 \\vdash n_2}{\\pi_1 }    &    \\deduce{\\gamma_2 \\vdash m'}{\\pi_4 } } \\ ] ] by another application of the induction hypothesis , this derivation can be transformed into a normal derivation .                  the non - trivial case is the rule @xmath361 : @xmath362 { \\gamma_1 , { \\mathsf{sign}({\\mathsf{blind}(n , r)},k ) } \\vdash m } { \\gamma_1 , { \\mathsf{sign}({\\mathsf{blind}(n , r)},k ) } , { \\mathsf{sign}(n , k ) } , r \\vdash m}\\ ] ] where @xmath363 the premise of the rule has a term @xmath364 which may not occur in the conclusion .",
    "however , the proper subterms of @xmath364 are included in the proper subterms of @xmath365 , hence both the premise and the conclusion have the same set of proper subterms .",
    "notice that @xmath366 , since both @xmath4 and @xmath367 are in @xmath368 therefore in this case we also have that @xmath369        we first note that any derivation of @xmath5 can be turned into one in which every sequent in the derivation occurs exactly once on a branch .",
    "our rules preserve their principal formula when read upwards from conclusion to premise , hence the left hand sides of the sequents as we go up a branch accumulate more and more formulae .",
    "that is , they form an increasing chain .",
    "at worst , each such rule adds only one formula from @xmath83 .",
    "thus , by lemma  [ lm : st - inv ] , the number of different sequents on a branch is bounded by the cardinality of @xmath83 , which is quadratic in the size of @xmath370        1 .",
    "if @xmath5 is elementarily deducible , then we are done .",
    "2 .   otherwise , apply a right - introduction rule ( backwards ) to @xmath5 and repeat step 1 for each obtained premise , and so on . if no such rules are applicable , then @xmath5 is not derivable .",
    "there are at most @xmath17 iterations where @xmath17 is the number of distinct subterms of @xmath6 note that the check for elementary deducibility in step 1 is done on problems of size less or equal to @xmath17 .",
    "before we proceed with proving theorem  [ thm : deducibility ] , let us first define the notion of a _ principal term _ in a left - rule in the proof system @xmath94 ( we refer to figure  [ fig : linear ] in the following definition ) :    * @xmath2 is the principal term of @xmath372 .",
    "* @xmath373 is the principal term of @xmath374 .",
    "* @xmath375 is the principal term of @xmath24 .",
    "* @xmath376 is the principal term of @xmath377 .",
    "* @xmath378 is the principal term of @xmath379 * @xmath279 is the principal term of @xmath380 .",
    "* @xmath336 is @xmath380 , @xmath4 is a guarded subterm of @xmath121 , and there is an instance of @xmath336 with @xmath383 as its premise ; * @xmath336 is not @xmath380 ,",
    "@xmath384 , and there is an instance of @xmath336 with @xmath5 as its conclusion ;      f1 : :    the complexity of checking whether @xmath381 is    applicable to @xmath5 is    @xmath386 for some constant @xmath387 ; f2 : :    if @xmath381 is applicable to    @xmath5 , then there is a unique sequent    @xmath145 such that the sequent below is a valid    instance of @xmath336 : @xmath343    { \\gamma \\vdash m }    { \\gamma ' \\vdash m}\\ ] ]              let @xmath17 be the size of @xmath83 . notice that the left - rules in figure  [ fig : linear ] are invertible ( they accumulate terms , reading the rules bottom - up ) , so one does not lose provability by applying any of the rules in proof search . thus by blindly applying the left - rules , we eventually reach a point where the right - rule ( @xmath42 ) is applicable , hence the original sequent is provable , or we reach a `` fix point '' where we encounter all previous sequents . for the latter , we show that there is a polynomial bound to the number of rule applications we need to try before concluding that the original sequent is not provable .",
    "let @xmath388 be an enumeration of the set @xmath86 suppose @xmath5 is provable in @xmath74 then there is a shortest proof in @xmath1 where each sequent appears exactly once in the proof .",
    "this also means that there exists a sequence of principal - term - and - rule pairs @xmath389 that is applicable , successively , to @xmath5 .",
    "note that @xmath390 by lemma  [ lm : linear ] .",
    "a simple proof search strategy for @xmath5 is therefore to repeatedly try all possible applicable pairs @xmath391 for each possible @xmath392 and each left - rule @xmath393 .",
    "more precisely : let @xmath394 and initialise @xmath395    1 .",
    "if @xmath397 then we are done .",
    "3 .   otherwise , for @xmath398 to @xmath17 do * for every left - rule @xmath336 do * * if @xmath399 is applicable to @xmath400 , then let @xmath401 be the unique premise of @xmath336 determined by @xmath399 via * f2 * and let @xmath402 .",
    "4 .   if @xmath403 then go to step 1 .",
    "if the original sequent is provable , then at each iteration @xmath404 , the algorithm ( i.e. , step 3 ) will find the correct pair @xmath405 .",
    "( strictly speaking , the algorithm finds the @xmath404-th pair of a shortest proof , and not necessarily the one given above , since there can be more than one proof of a given length . ) if no proof is found after @xmath17 iterations , then the original sequent is not provable , since the length of any shortest proof is bound by @xmath17 by lemma  [ lm : linear ] . by lemma  [ lm : right - deducibility ]",
    ", step 2 takes @xmath406 for some constant @xmath12 . by ( * f1 * ) above , each iteration in step 3 takes @xmath407 for some constant @xmath13 .",
    "since there are at most @xmath408 distinct principal - term - and - rule pairs , this means step 3 takes @xmath409 therefore the whole procedure takes @xmath410 where @xmath14 is the greater of @xmath12 and @xmath411 .",
    "hence the complexity of @xmath98 is polynomially reducible to @xmath99        [ lm : equiv2 ] let @xmath93 be a derivation of @xmath259 . then for any @xmath414 @xmath141 @xmath415 and @xmath261",
    "such that @xmath262 and @xmath263 , there is a derivation @xmath144 of @xmath414 @xmath141 @xmath416 such that @xmath265        [ lm : d - decomp2 ] let @xmath318 @xmath141 @xmath417 be normal terms and let @xmath93 be a cut - free @xmath88-derivation of @xmath296 , where @xmath418 then there exists a cut - free @xmath88-derivation @xmath144 of @xmath297    by induction on @xmath419 .",
    "most cases are similar to the proof of lemma  [ lm : decomp2 ] .",
    "in particular , the case involving cross - theory subterms are a straightforward generalisation of those involving guarded subterms in the proof of lemma  [ lm : decomp2 ] .",
    "let @xmath420 the new case we need to consider is when @xmath93 ends with @xmath421 @xmath422 { \\gamma , n \\vdash m } {   \\deduce{\\gamma , n \\vdash r}{\\pi_1 }   &   \\deduce{\\gamma , n , r \\vdash m}{\\pi_2 } } \\ ] ] where @xmath133 is a cross - theory subterm of @xmath56    observe that since @xmath423 are in normal form , the term @xmath424 is a quasi @xmath8-term .",
    "as in the proof of lemma  [ lm : decomp2 ] , using the variable abstraction technique ( proposition  [ prop : var - abs ] and proposition  [ prop : var - abs2 ] ) , we can show that there must be a cross - theory subterm @xmath425 in some @xmath307 ( w.l.o.g .",
    ", assume @xmath426 ) such that @xmath427 .",
    "thus @xmath144 is constructed straightforwardly by induction hypothesis on @xmath197 and @xmath219 followed by ( possibly ) an application of @xmath125 on @xmath428 and lemma  [ lm : equiv2 ] .",
    "[ lm : d - decomp3 ] let @xmath429 @xmath141 @xmath430 be normal terms and let @xmath64 $ ] be a @xmath63-hole @xmath8-context . if @xmath328\\!\\!\\downarrow\\ } \\vdash m$ ] is cut - free derivable in @xmath88 , then @xmath329 is also cut - free derivable in @xmath88 ."
  ],
  "abstract_text": [
    "<S> we consider the problem of intruder deduction in security protocol analysis : that is , deciding whether a given message @xmath0 can be deduced from a set of messages @xmath1 under the theory of blind signatures and arbitrary convergent equational theories modulo associativity and commutativity ( ac ) of certain binary operators . </S>",
    "<S> the traditional formulations of intruder deduction are usually given in natural - deduction - like systems and proving decidability requires significant effort in showing that the rules are `` local '' in some sense . by using the well - known translation between natural deduction and sequent calculus , </S>",
    "<S> we recast the intruder deduction problem as proof search in sequent calculus , in which locality is immediate . using standard proof theoretic methods , such as permutability of rules and cut elimination , </S>",
    "<S> we show that the intruder deduction problem can be reduced , in polynomial time , to the elementary deduction problems , which amounts to solving certain equations in the underlying individual equational theories . </S>",
    "<S> we further show that this result extends to combinations of disjoint ac - convergent theories whereby the decidability of intruder deduction under the combined theory reduces to the decidability of elementary deduction in each constituent theory . </S>",
    "<S> although various researchers have reported similar results for individual cases , our work shows that these results can be obtained using a systematic and uniform methodology based on the sequent calculus .    </S>",
    "<S> [ [ keywords ] ] keywords : + + + + + + + + +    ac convergent theories , sequent calculus , intruder deduction , security protocols . </S>"
  ]
}
{
  "article_text": [
    "logic programming under the answer set semantics ( asp ) is a nonmonotonic reasoning paradigm for declarative problem solving @xcite .",
    "recently , there have been extensive interests in combining asp with other computational and reasoning paradigms .",
    "one of the main interests in this direction is the integration of asp with ontology reasoning , for the semantic web .",
    "the semantic web is an evolving development of the world wide web in which the meaning of information and services on the web are defined , so that the web content can be precisely understood and used by agents @xcite . for this purpose , a layered structure including the rules layer built on top of the ontology layer has been recognized as a fundamental framework .",
    "description logics ( dls ) @xcite provide a formal basis for the web ontology language which is the standard of the ontology layer @xcite .",
    "adding nonmonotonic rules to the rules layer would allow default reasoning with ontologies .",
    "for example , we know that most _ natural kinds _ do not have a clear cut definition . for instance , a precise definition of _ scientist _ seems to be difficult by enumerating what a scientist is , and does .",
    "though we can say that a scientist possesses expert knowledge on the subject of his or her investigation , we still need a definition of expert knowledge , which can not be defined quantitatively . using nonmonotonic rules",
    ", we can perform default , typicality reasoning over categories , concepts , and roles .",
    "the integration of dls and ( nonmonotonic ) rules has been extensively investigated as a crucial problem in the study of the semantic web , such as _ semantic web rule language _ ( swrl ) @xcite , _ mknf knowledge base _ @xcite , and _ description logic programs _ ( _ dl - programs _ ) @xcite .",
    "there are different approaches to the integration of asp with description logics .",
    "the focus of this paper is on the approach based on dl - programs .",
    "informally , a dl - program is a pair @xmath0 , where @xmath1 is a dl knowledge base and @xmath2 is a logic program whose rule bodies may contain queries , embedded in _ dl - atoms _ , to the knowledge base @xmath1 .",
    "the answer to such a query depends on inferences by rules over the dl knowledge base @xmath1 . in this way",
    ", rules are built on top of ontologies .",
    "on the other hand , ontology reasoning is also enhanced , since it depends not only on @xmath1 but also on inferences using ( nonmonotonic ) rules .",
    "two semantics for dl - programs have been proposed , one of which is based on _",
    "strong answer sets _ and the other based on _ weak answer sets_.    in this paper , we generalize the notions of completion and loop formulas of logic programs @xcite to dl - programs and show that weak and strong answer sets of a dl - program can be captured precisely by the models of its completion and the corresponding loop formulas .",
    "this provides not only a semantic characterization of answer sets for dl - programs but also an alternative mechanism for answer set computation , using a dl - reasoner and a sat solver .    as commented by @xcite ,",
    "the reason to introduce strong answer sets is because some weak answer sets seem counterintuitive due to `` self - supporting '' loops .",
    "recently however , one of the co - authors of this paper , yi - dong shen , discovered that strong answer sets may also possess self - supporting loops , and a detailed analysis leads to the conclusion that the problem can not be easily fixed by an alternative definition of _ reduct _ , since the reduct of dl - atoms may not be able to capture dynamically generated self - supports arising from the integrated context .",
    "the solution proposed in this paper is to use loop formulas as a way to define answer sets for dl - programs that are free of self - supports .",
    "thus , we define what are called _ canonical loops _ and",
    "_ canonical loop formulas_. given a dl - program , the models of its completion satisfying the canonical loop formulas constitute a new class of answer sets , called _",
    "canonical answer sets _ , that are minimal and noncircular .",
    "the paper is organized as follows . in the next section , we recall the basic definitions of description logics and dl - programs . in section  [ completion - and - loop - formulas ] , we define completion , weak and strong loop formulas for dl - programs .",
    "the new semantics of dl - programs based on canonical loop formulas is given in section  [ canonical - answer - sets ] .",
    "section  [ related - work ] discusses related work , and finally section  [ discussion - and - future - work ] gives concluding remarks .",
    "in this section , we briefly review the basic notations for description logics and description logic programs @xcite .      in principle",
    ", the description logics employed in description logic programs can be arbitrary , with the restriction that the underlying entailment relation is decidable .",
    "due to space limitation , we introduce the basic description logic @xmath3 @xcite , instead of the description logics @xmath4 and @xmath5 described in @xcite .",
    "the notations introduced here will be used throughout the paper , particularly the entailment relation @xmath6 , given at the end of this subsection .    for the language @xmath3",
    ", we assume a vocabulary @xmath7 , where @xmath8 and @xmath9 are pairwise disjoint ( denumerable ) sets of _ atomic concepts _ , _ roles _ ( including equality @xmath10 and inequality @xmath11 ) , and _ individuals _ respectively .",
    "the _ concepts _ of @xmath3 are defined as follows : @xmath12 where @xmath13 is an atomic concept and @xmath14 is a role .",
    "the _ assertions _ of @xmath3 are of the forms @xmath15 or @xmath16 , where @xmath17 is a concept , @xmath14 is a role , and @xmath18 are individuals .",
    "an _ inclusion axiom _ of @xmath3 has the form @xmath19 where @xmath17 and @xmath20 are concepts .",
    "a _ description knowledge base _ ( or _ ontology _ ) of @xmath3 is a set of inclusion axioms and assertions of @xmath3 .",
    "the semantics of @xmath3 is defined by translating to first - order logic and then using classical first - order interpretations as its semantics .",
    "informally , let the transformation be @xmath21 : ( 1 ) @xmath22 , @xmath23 where @xmath13 is an atomic concept and @xmath14 a role ; ( 2 ) @xmath24 , and @xmath25 ; ( 3 ) @xmath26 , @xmath27 , and @xmath28 ; ( 4 ) @xmath29 , @xmath30 ; ( 5 ) @xmath31",
    ". then , the semantics of @xmath3 follows from that of first - order logic , so is the entailment relation @xmath6 , for a description knowledge base @xmath1 and an assertion or inclusive axiom @xmath32 .",
    "let @xmath33 be a first - order vocabulary with nonempty finite sets @xmath34 and @xmath35 of constant symbols and predicate symbols respectively such that @xmath35 is disjoint from @xmath36 and @xmath37 .",
    "_ atoms _ are formed from the symbols in @xmath35 and @xmath34 as usual .",
    "a _ dl - atom _ is an expression of the form @xmath38(\\vec t),\\ \\   ( m\\ge 0)\\ ] ] where    * each @xmath39 is either a concept , a role or a special symbol in @xmath40 ; * @xmath41 ; * @xmath42 is a unary predicate symbol in @xmath35 if @xmath39 is a concept , and a binary predicate symbol in @xmath35 otherwise .",
    "the @xmath42s are called _ input predicate symbols _ ; * @xmath43 is a _ dl - query _ , i.e. , either ( 1 ) @xmath44 where @xmath45 ; ( 2 ) @xmath19 where @xmath46 is an empty argument list ; ( 3 ) @xmath47 where @xmath48 ; ( 4 ) @xmath49 where @xmath48 ; or their negations , where @xmath17 and @xmath20 are concepts , @xmath14 is a role , and @xmath46 is a tuple of constants .",
    "the precise meanings of @xmath50 will be defined shortly . intuitively , @xmath51 ( resp .",
    "@xmath52 ) extends @xmath53 ( resp .",
    "@xmath54 ) by the extension of @xmath55 , and @xmath56 constrains @xmath53 to @xmath55 .",
    "for example , suppose the interface is such that if any individual @xmath57 is registered for a course ( the information from outside an ontology ) then @xmath57 is a student ( @xmath57 may not be a student by the ontology before this communication ) , and we query if @xmath58 is a student .",
    "we can then write the dl - atom @xmath59(a)$ ]",
    ". similarly , @xmath60(a)$ ] queries if @xmath58 is not a student nor employed , with the ontology enhancement that if we can not show @xmath57 is registered , then @xmath57 is not a student .    a _ dl - rule _ ( or simply a _ rule _ ) is an expression of the form @xmath61 where @xmath13 is an atom , each @xmath62 is an atom or a dl - atom .",
    "we refer to @xmath13 as its _ head _ , while the conjunction of @xmath63 and @xmath64 is its _",
    "body_. for convenience , we may abbreviate a rule in the form ( [ normal : rule ] ) as @xmath65 where @xmath66 and @xmath67 .",
    "let @xmath68 be a rule of the form ( [ normal : rule : set ] ) . if @xmath69 and @xmath70 , @xmath68 is a fact and we may write it as  @xmath13 \" instead of",
    " @xmath71 \" .",
    "a _ description logic program _ ( _ dl - program _ ) @xmath72 consists of a dl knowledge base @xmath1 and a finite set @xmath2 of dl - rules . in what follows",
    "we assume the vocabulary of @xmath2 is implicitly given by the constant symbols and predicates symbols occurring in @xmath2 , unless stated otherwise .",
    "given a dl - program @xmath72 , the _ herbrand base _ of @xmath2 , denoted by @xmath73 , is the set of atoms formed from the predicate symbols in @xmath74 occurring in @xmath2 and the constant symbols in @xmath75 occurring in @xmath2 . an _ interpretation _",
    "@xmath76 ( relative to @xmath2 ) is a subset of @xmath77 .",
    "such an @xmath76 is a _ model _ of an atom or dl - atom @xmath13 under @xmath1 , written @xmath78 , if the following holds :    * if @xmath79 , then @xmath78 iff @xmath80 ; * if @xmath13 is a dl - atom @xmath81 of the form ( [ dl : atom ] ) , then @xmath78 iff @xmath82 where @xmath83 @xmath84    where @xmath85 is a tuple of constants over @xmath75 .",
    "the interpretation @xmath76 is a _ model _ of a dl - rule of the form ( [ normal : rule : set ] ) iff @xmath86 for any @xmath87 and @xmath88 for any @xmath89 implies @xmath78 .",
    "@xmath76 is a _ model _ of a dl - program @xmath90 , written @xmath91 , iff @xmath76 is a model of each rule of @xmath2 .",
    "@xmath76 is a _ supported model _ of @xmath72 iff , for any @xmath92 , there is a rule ( @xmath93 ) in @xmath2 such that @xmath94 for any @xmath95 and @xmath96 for any @xmath97 .",
    "a dl - atom @xmath13 is _ monotonic _ relative to a dl - program @xmath90 if @xmath98 implies @xmath99 , for all @xmath100 , otherwise @xmath13 is _",
    "nonmonotonic_. it is clear that if a dl - atom does not mention @xmath101 then it is monotonic .",
    "however , a dl - atom may be monotonic even if it mentions @xmath101 .",
    "e.g. , the dl - atom @xmath102(a)$ ] is monotonic ( which is a tautology ) . clearly , the @xmath101 operator is the only one that may cause a dl - atom to be nonmonotonic .",
    "thus one has no reason to use @xmath101 in monotonic dl - atoms .",
    "it is a reasonable assumption that we can rewrite a monotonic dl - atom into an equivalent one without using @xmath101 at all .",
    "we use @xmath103 to denote the set of all dl - atoms that occur in @xmath2 , @xmath104 to denote the set of monotonic dl - atoms , and @xmath105 . a dl - program @xmath72 is _ positive _",
    "if ( i ) @xmath2 is  not \"- free , and ( ii ) every dl - atom is monotonic relative to @xmath106 .",
    "it is evident that if a dl - program @xmath106 is positive , then @xmath106 has a ( set inclusion ) least model .",
    "let @xmath72 be a dl - program .",
    "the _ strong dl - transform _ of @xmath106 relative to @xmath1 and an interpretation @xmath107 , denoted by @xmath108 , is the positive dl - program @xmath109 ) , where @xmath110 is obtained from @xmath2 by deleting :    * the dl - rule @xmath68 of the form ( [ normal : rule ] ) such that either @xmath111 for some @xmath112 and @xmath113 , or @xmath114 for some @xmath115 ; and * the nonmonotonic dl - atoms and @xmath116 from the remaining dl - rules where @xmath13 is an atom or dl - atom .",
    "the interpretation @xmath76 is a _",
    "strong answer set _ of @xmath106 if it is the least model of @xmath108 .",
    "the _ weak dl - transform _ of @xmath106 relative to @xmath1 and an interpretation @xmath117 , denoted by @xmath118 , is the positive dl - program @xmath119 , where @xmath120 is obtained from @xmath2 by deleting :    * the dl - rules of the form ( [ normal : rule ] ) such that either @xmath111 for some @xmath112 and @xmath121 , or @xmath114 for some @xmath115 ; and * the dl - atoms and @xmath116 from the remaining dl - rules where @xmath13 is an atom or dl - atom .",
    "the interpretation @xmath76 is a _",
    "weak answer set _ of @xmath106 if @xmath76 is the least model of @xmath118 .",
    "[ exam : dl : program:1 ] consider the following dl - programs :    * @xmath122 where @xmath123 and @xmath124(a ) ; p(a ) \\leftarrow\\}$ ] . for this dl - program to make some sense ,",
    "let s image this situation : @xmath125 and @xmath126 are classes of good conference papers and iclp papers respectively , @xmath127 means that @xmath57 is a paper in the tplp special issue of iclp 2010 , @xmath128 means that @xmath57 is worth reading , and @xmath58 stands for `` this paper '' .",
    "note that @xmath126 and @xmath125 are concepts in @xmath1 , and @xmath55 and @xmath129 are predicates outside of @xmath1 .",
    "the communication is through the dl - rule , @xmath130(a)$ ] , which says that if `` this paper '' is a good conference paper , given that any paper in the tplp special issue of iclp 2010 is an iclp paper and iclp papers are good conference papers ( by the knowledge in @xmath1 ) , then it is worth reading .",
    "@xmath131 has exactly one strong answer set @xmath132 , which is also its unique weak answer set . * now , suppose someone writes @xmath133 where @xmath123 and @xmath134(a)\\}$ ] .",
    "this program has a unique strong answer set @xmath135 and two weak answer sets @xmath136 and @xmath137 .",
    "it can be seen that there is a circular justification in the weak answer set @xmath138 : that `` this paper '' is in the tplp special issue of iclp 2010 is justified by its being in it .",
    "+ the interested reader may verify the following . by the definition of @xmath139 , @xmath140 , and clearly @xmath141 and @xmath142 .",
    "so the weak dl - transform relative to @xmath1 and @xmath138 is @xmath143 .",
    "since @xmath138 coincides with the least model of @xmath144 , it is a weak answer set of @xmath145 .",
    "similarly , one can verify that the strong dl - transform relative to @xmath1 and @xmath138 is @xmath146 .",
    "its least model is the empty set , so @xmath138 is not a strong answer set of @xmath145 . *",
    "@xmath147 where @xmath148 and @xmath149(a)\\}$ ] .",
    "both @xmath150 and @xmath151 are strong and weak answer sets of the dl - program .",
    "* @xmath152 where @xmath153(a)\\}$ ] .",
    "@xmath150 and @xmath151 are both strong and weak answer sets of the dl - program .",
    "* @xmath154 where @xmath155(a)\\}$ ] .",
    "@xmath156 has no weak answer set , and thus it has no strong answer set either .",
    "these dl - programs show that strong ( and weak ) answer sets may not be ( set inclusion ) minimal .",
    "it has been shown that if a dl - program contains no nonmonotonic dl - atoms then its strong answer sets are minimal @xcite . however , this does not hold for weak answer sets as shown by the dl - program @xmath145 above , even if it is positive .",
    "it is known that strong answer sets are always weak answer sets , but not vice versa @xcite .",
    "[ loop ] in this section , we define completion , characterize weak and strong answer sets by loop formulas , and outline an alternative method of computing weak and strong answer sets .      given a dl - program @xmath72 , we assume an underlying propositional language @xmath157 , such that the propositional atoms of @xmath157 include the atoms and dl - atoms occurring in @xmath2 . the _ formulas _ of @xmath157 are defined as usual using the connectives @xmath158 and @xmath159 . the _ dl - interpretations _ ( or simply _ interpretations",
    "_ if it is clear from context ) of the language @xmath160 are the interpretations relative to @xmath2 , i.e. , the subsets of @xmath77 . for a formula @xmath161 of @xmath157 and an interpretation @xmath76 of @xmath157",
    ", we say @xmath76 is a _ model _ of @xmath161 relative to @xmath1 , denoted @xmath162 , whenever ( i ) if @xmath161 is an atom , then @xmath163 ; ( ii ) if @xmath161 is a dl - atom , then @xmath162 ; and ( iii ) the above is extended in the usual way to arbitrary formulas of @xmath157 .",
    "let @xmath72 be a dl - program and @xmath164 an atom in @xmath77 .",
    "the _ completion _ of @xmath164 ( relative to @xmath106 ) , written @xmath165 , is the following formula of @xmath160 : @xmath166 where @xmath167 are all the rules in @xmath2 whose heads are the atom @xmath164 .",
    "the _ completion _ of @xmath106 , written @xmath168 , is the collection of completions of all atoms in @xmath77 .",
    "recall that a model @xmath169 of a dl - program @xmath72 is a _ supported model _",
    "if for any atom @xmath170 , there is a rule in @xmath2 whose head is @xmath58 and whose body is satisfied by @xmath171 .",
    "[ prop : completion : supported ] let @xmath72 be a dl - program and @xmath76 an interpretation of @xmath2 . then @xmath76 is a supported model of @xmath106 if and only if @xmath172 .    [ prop : as : supported : model ] every weak ( resp",
    ". strong ) answer set of a dl - program @xmath106 is a supported model of @xmath106 .      in order to capture weak answer sets of dl - programs using completion and loop formulas , we define weak loops .",
    "formally , let @xmath72 be a dl - program .",
    "the _ weak positive dependency graph _ of @xmath106 , written @xmath173 , is the directed graph @xmath174 , where @xmath175 ( note that a dl - atom is not in @xmath176 ) , and @xmath177 if there is a dl - rule of the form ( [ normal : rule ] ) in @xmath2 such that @xmath178 and @xmath179 for some @xmath180 .",
    "a nonempty subset @xmath181 of @xmath77 is a _ weak loop _ of @xmath106 if there is a cycle in @xmath182 which goes through only and all the nodes in @xmath181 .",
    "given a weak loop @xmath181 of a dl - program @xmath72 , the _ weak loop formula _ of @xmath181 ( relative to @xmath106 ) , written @xmath183 , is the following formula of @xmath160 : @xmath184 where @xmath185 are all the rules in @xmath2 such that @xmath186 and @xmath187 for any @xmath188 .",
    "let @xmath72 be a dl - program and @xmath76 an interpretation of @xmath2 .",
    "then @xmath76 is a weak answer set of @xmath106 if and only if @xmath189 , where @xmath190 is the set of weak loop formulas of all weak loops of @xmath106 .",
    "[ weak ]      let @xmath72 be a dl - program .",
    "the _ strong positive dependency graph _ of @xmath106 , denoted by @xmath191 , is the directed graph @xmath174 , where @xmath192 and @xmath193 if there is a rule of the form ( [ normal : rule ] ) in @xmath2 such that , ( 1 ) @xmath194 and , ( 2 ) for some @xmath180 , either    * @xmath195 , or * @xmath196 is a monotonic dl - atom mentioning the predicate @xmath197 and @xmath198 is a tuple of constants matching the arity of @xmath197 .",
    "( if this condition is ignored then it becomes the definition of weak positive dependency graph . )    a nonempty subset @xmath181 of @xmath73 is a _ strong loop _ of @xmath106 if there is a cycle in @xmath191 which passes only and all the nodes in @xmath181 .    to define strong loop formulas of a dl - program @xmath72",
    ", we need to extend the vocabulary @xmath199 , such that , for any predicate symbol @xmath55 and a nonempty set of atoms @xmath181 , @xmath199 contains the predicate symbol @xmath200 that has the same arity as that of @xmath55 .",
    "let @xmath181 be a nonempty set of atoms , @xmath201(\\vec t)$ ] be a dl - atom .",
    "the _ irrelevant formula _ of @xmath13 relative to @xmath181 , written by @xmath202 , is the conjunction of ( 1 ) @xmath203(\\vec t)$ ] , where @xmath204 is obtained from @xmath205 by replacing each predicate symbol @xmath55 with @xmath200 whenever @xmath55 appears in both @xmath205 and @xmath181 and , ( 2 ) for each predicate symbol @xmath55 mentioned in both @xmath205 and @xmath181 , the instantiation on @xmath75 @xcite of the formula : @xmath206\\end{aligned}\\ ] ] where @xmath207 is a tuple of distinct variables matching the arity of @xmath55 , and @xmath208 stands for @xmath209 , i.e. , @xmath210",
    "if @xmath211 and @xmath212 . please note that , the instantiation of a formula @xmath213 on a finite set @xmath20 of constants is the formula @xmath214 $ ] , in which @xmath215 ( resp . , @xmath216 ) is replaced with @xmath217 ( _ true _ ) ( resp .",
    ", @xmath218 ( _ false _ ) ) , where @xmath126 and @xmath125 are two distinct constants . in",
    "what follows , we identify the formula ( [ if : formula ] ) with its instantiation whenever it is clear from its context , unless otherwise stated .    for instance , let @xmath219(a)$ ] and @xmath220 . then @xmath221 is the formula : @xmath222(a)\\wedge ( p_l(a){\\leftrightarrow}p(a)\\wedge a\\neq a)\\wedge(p_l(b){\\leftrightarrow}p(b)\\wedge a\\neq b)\\end{aligned}\\ ] ] which is equivalent to @xmath223(a)\\wedge \\neg p_l(a)\\wedge ( p_l(b){\\leftrightarrow}p(b)).\\ ] ] intuitively , the irrelevant formula of @xmath13 relative to @xmath181 says that the truth of @xmath13 only depends on the truth of the atoms not in @xmath181 .",
    "we are now in a position to define strong loop formulas .",
    "let @xmath181 be a strong loop of @xmath72 .",
    "the _ strong loop formula _ of @xmath181 ( relative to @xmath106 ) , written @xmath224 , is the following formula of @xmath225 : @xmath226 where    * @xmath227 are all the rules in @xmath2 such that @xmath186 and @xmath187 for all @xmath188 , * @xmath228 if @xmath13 is a monotonic dl - atom , and @xmath13 otherwise .    in general",
    ", we have to recognize the monotonicity of dl - atoms in order to construct strong loops of dl - programs .",
    "in this sense , the strong loops and strong loop formulas are defined semantically .",
    "if a dl - atom does not mention the operator @xmath101 then it is obviously monotonic .",
    "thus for the class of dl - programs in which no monotonic dl - atoms mention @xmath101 , the strong loops and strong loop formulas are given syntactically , since it is sufficient to determine the monotonicity of a dl - atom by checking whether it contains the operator @xmath101 .",
    "[ thm : s : loop : comp ] let @xmath72 be a dl - program and @xmath76 an interpretation of @xmath2 .",
    "then @xmath76 is a strong answer set of @xmath106 if and only if @xmath238 , where @xmath239 is the set of strong loop formulas of all strong loops of @xmath106 and @xmath240 is the extension of @xmath76 satisfying ( [ if : formula ] ) .    since a weak loop of a dl - program @xmath106 is also a strong loop of @xmath106 , as a by - product , our loop formula characterizations yield an alternative proof that strong answer sets are also weak answer sets .",
    "let @xmath72 be a dl - program , @xmath76 an interpretation of @xmath2 and @xmath181 a weak loop of @xmath106 .",
    "then we have @xmath241 , where @xmath240 is the extension of @xmath76 satisfying ( [ if : formula ] ) .",
    "theorems [ weak ] and [ thm : s : loop : comp ] serve as the basis for an alternative method of computing weak and strong answer sets using a sat solver , along with a dl - reasoner @xmath242 with the following property : @xmath242 is sound , complete , and terminating for entailment checking .",
    "let @xmath72 be a dl - program and @xmath243 .",
    "we replace all dl - atoms in @xmath244 with new propositional atoms to produce @xmath245 .",
    "let @xmath246 be the new atom in @xmath245 , for the dl - atom @xmath13 in @xmath244 , and @xmath247 be the set of all such new atoms in @xmath245 .",
    "below , we outline an algorithm to compute the weak answer sets of @xmath106 ( here we only describe how to compute the first such an answer set ) . to compute a strong answer set ,",
    "replace the word weak with strong .",
    "* generate a model @xmath76 of @xmath244 ; if there is none , then there is no weak answer set . *",
    "check if @xmath76 is a weak answer set of @xmath106 , * * if yes , return @xmath76 as a weak answer set of @xmath106 .",
    "* * if no , add a weak loop formula into @xmath244 that is not satisfied by @xmath76 relative to @xmath1 , and goto ( i ) .",
    "to generate a model of @xmath244 , we compute a model @xmath171 of @xmath245 using a sat solver , and then use @xmath242 to check the entailment : for any dl - atom @xmath13 in @xmath244 , if @xmath248 then @xmath249 otherwise @xmath250 .",
    "let @xmath251 .",
    "it is not difficult to verify that @xmath252 is a model of @xmath106 .",
    "the strong and weak answer set semantics of dl - programs have been implemented in a prototype system called swlp , using the asp solver dlv and a dl - reasoner .",
    "the main difference in the method outlined here is that we use a sat solver to generate candidate models , which allows to take the advantages of the state - of - the - art sat technology .    for strong answer sets ,",
    "the construction of a strong loop formula requires checking monotonicity of dl - atoms .",
    "however , for the class of dl - programs mentioning no @xmath101 , this checking is not needed and the construction of a strong loop formula is hence tractable .",
    "as commented by eiter _",
    "et al_. @xcite , some weak answer sets may be considered counterintuitive because of  self - supporting \" loops . for instance , consider the weak answer set @xmath151 of the dl - program @xmath145 in example [ exam : dl : program:1 ] .",
    "the evidence of the truth of @xmath234 is inferred by means of a self - supporting loop :  @xmath253(a){\\leftarrow}p(a)$ ] \" , which involves not only the dl - atom @xmath254(a)$ ] but the dl knowledge base @xmath1 .",
    "thus the truth of @xmath234 depends on the truth of itself .",
    "this self - support is excluded by the strong loop formula of the loop @xmath255 .",
    "let s consider the dl - program @xmath256 in example [ exam : dl : program:1 ] again .",
    "note that @xmath151 is a strong answer set of @xmath256 .",
    "the truth of the atom @xmath234 depends on the truth of @xmath257(a)$ ] which depends on the truth of @xmath234 and @xmath258 .",
    "thus the truth of @xmath234 depends on the truth of itself . the self - supporting loop is :  @xmath259(a){\\leftarrow}(p(a)\\wedge\\neg q(a))$ ] \" . in this sense , some strong answer sets may be considered counterintuitive as well .",
    "the notion of  circular justification \" was formally defined by @xcite to characterize self - supports for lparse programs , which was motivated by the notion of _ unfoundedness _ for logic programs @xcite and logic programs with aggregates @xcite . with slight modifications ,",
    "we extend the concept of circular justification to dl - programs .",
    "formally , let @xmath72 be a dl - program and @xmath260 be a supported model of @xmath106 .",
    "@xmath76 is said to be _",
    "circularly justified _ ( or simply _ circular _ ) if there is a nonempty subset @xmath171 of @xmath76 such that @xmath261 for any dl - rule ( @xmath93 ) in @xmath2 with @xmath262 and @xmath263 .",
    "otherwise , we say that @xmath76 is _",
    "noncircular_. intuitively speaking , condition ( [ eq : circular ] ) means that the atoms in @xmath171 have no support from outside of @xmath171 , i.e. , they have to depend on themselves .",
    "[ exam : dl - program:3 ] let @xmath229 where @xmath2 consists of @xmath264(a).\\ ] ] it is not difficult to verify that @xmath106 has two weak answer sets @xmath150 and @xmath151 .",
    "they are strong answer sets of @xmath106 as well . in terms of the above definition , @xmath151 is circular .",
    "it is interesting to note that weak answer sets allow self - supporting loops involving any dl - atoms ( either monotonic or nonmonotonic ) , while strong answer sets allow self - supporting loops only involving nonmonotonic dl - atoms and their default negations .",
    "these considerations motivate us to define a new semantics which is free of circular justifications .",
    "let @xmath72 be a dl - program .",
    "the _ canonical dependency graph _ of @xmath106 , written @xmath265 , is the directed graph @xmath174 , where @xmath175 and @xmath177 if there is a rule of the form ( [ normal : rule ] ) in @xmath2 such that @xmath178 and there exists an interpretation @xmath260 such that either of the following two conditions holds :    1 .",
    "@xmath111 and @xmath266 , for some @xmath180 . in this case",
    ", we say that @xmath267 is a _ positive monotonic _",
    "_ nonmonotonic _ ) dependency of @xmath196 if @xmath196 is a monotonic ( resp .",
    ", nonmonotonic ) dl - atom .",
    "intuitively , the truth of @xmath196 may depend on that of @xmath267 while the truth of @xmath268 may depend on that of @xmath196 .",
    "thus the truth of @xmath268 may depend on that of @xmath267 .",
    "2 .   @xmath114 and @xmath269 , for some @xmath270 .",
    "clearly , @xmath271 must be nonmonotonic . in this case",
    ", we say that @xmath267 is a _ negative nonmonotonic dependency _ of @xmath271 .",
    "intuitively , the truth of @xmath268 may depend on that of  @xmath272 \" , while its truth may depend on that of @xmath267 .",
    "thus the truth of @xmath268 may depend on that of @xmath267 .",
    "a nonempty subset @xmath181 of @xmath77 is a",
    "_ canonical loop _ of @xmath106 if there is a cycle in @xmath273 that goes through only and all the nodes in @xmath181 .",
    "it is clear that if @xmath179 then the interpretation @xmath274 satisfies @xmath267 while @xmath275 does not .",
    "thus the notion of canonical loops is a generalization of that of weak loops given in subsection  [ weak - loop ] , and a generalization of the notion of loops for normal logic programs @xcite .",
    "note further that the canonical dependency graph is not a generalization of the strong positive dependency graph , since some strong loops are not canonical loops .",
    "e.g. , with the dl - program @xmath229 , where @xmath276(a)\\}$ ] , the dl - atom @xmath277(a)$ ] is equivalent to @xmath217 .",
    "so it is monotonic .",
    "it follows that @xmath231 is a strong loop of @xmath106 .",
    "however @xmath181 is not a canonical loop of @xmath106 because there is no interpretation @xmath76 such that @xmath278 and @xmath279 .    due to the two kinds of dependencies in a canonical dependency graph defined above , to define canonical loop formulas , we need two kinds of irrelevant formulas : let @xmath181 be a set of atoms and @xmath201(\\vec t)$ ] a nonmonotonic dl - atom .",
    "the _ positive canonical irrelevant formula _ of @xmath13 with respect to @xmath181 , written @xmath280 , is the conjunction of ( 1 ) @xmath203(\\vec t)$ ] , where @xmath204 is obtained from @xmath205 by replacing each predicate @xmath55 with @xmath200 if @xmath181 contains an atom @xmath281 which is a positive nonmonotonic dependency of @xmath13 and , ( 2 ) for each predicate @xmath55 occurring in @xmath205 , the instantiation on @xmath75 of the formula ( [ if : formula ] ) if @xmath181 contains an atom @xmath281 which is a positive nonmonotonic dependency of @xmath13 .",
    "the _ negative canonical irrelevant formula _ of @xmath13 with respect to @xmath181 , written @xmath282 , is the conjunction of ( 1 ) @xmath203(\\vec t)$ ] , where @xmath204 is obtained from @xmath205 by replacing each predicate @xmath55 with @xmath200 if @xmath181 contains an atom @xmath281 which is a negative nonmonotonic dependency of @xmath13 and , ( 2 ) for each predicate @xmath55 occurring in @xmath205 , the instantiation on @xmath75 of the formula ( [ if : formula ] ) if @xmath181 contains an atom @xmath281 which is a negative nonmonotonic dependency of @xmath13 .",
    "let @xmath72 be a dl - program , @xmath283 and @xmath181 a loop of @xmath106 .",
    "canonical loop formula _ of @xmath181 relative to @xmath106 under @xmath171 , written @xmath284 , is the following formula : @xmath285 where    * @xmath286 are all the rules in @xmath2 such that @xmath186 , @xmath187 and @xmath287 for each @xmath188 , * @xmath288 if @xmath13 is a nonmonotonic dl - atom , @xmath289 otherwise , * @xmath290 if @xmath291 is a nonmonotonic dl - atom , and @xmath291 otherwise .    given a dl - program @xmath72 and an interpretation @xmath260 .",
    "we call @xmath76 a _ canonical answer set _ of @xmath106 if @xmath240 is a model of @xmath292 relative to @xmath1 , where @xmath240 is the extension of @xmath76 satisfying ( [ if : formula ] ) and @xmath293 .",
    "it is not difficult to prove that every canonical answer set of a dl - program @xmath106 is a supported model of @xmath106 .",
    "consider the dl - program @xmath256 in example [ exam : dl : program:1 ] , i.e. , @xmath294 where @xmath149(a)\\}$ ] .",
    "it is easy to see that the dl - atom @xmath295(a)$ ] is nonmonotonic , @xmath296(a)$ ] , and @xmath297(a)$ ] .",
    "thus @xmath231 is a canonical loop of @xmath256 .",
    "let @xmath236 .",
    "the canonical loop formula @xmath298 is equivalent to @xmath299(a)\\wedge ( p_l(a){\\leftrightarrow}p(a)\\wedge ( a\\neq a))\\ ] ] where the last conjunct is equivalent to @xmath300 .",
    "thus , the loop formula is not satisfied by the extension of @xmath76 satisfying ( [ if : formula ] ) relative to the knowledge base @xmath150 .",
    "so @xmath76 is not a canonical answer set of @xmath256 , even if @xmath76 is a model of @xmath301 relative to the knowledge base @xmath150 .",
    "the next example demonstrates the difference among the positive dependency graphs of dl - programs .",
    "let @xmath72 be a dl - program where @xmath148 and @xmath2 consists of the following rules : +    [ cols= \" < , < , < \" , ]     the only weak positive dependency on @xmath77 is @xmath302 , the strong positive dependency includes @xmath303 besides the weak one , while the canonical positive dependency contains @xmath304 and @xmath305 in addition to the strong ones .",
    ", title=\"fig:\",width=302 ] +    figure [ fig:1 ] depicts the various dependency relations on @xmath77 .",
    "the weak positive dependency graph is @xmath306 where @xmath307 and @xmath308 , while the strong one is @xmath309 where @xmath310 .",
    "the canonical dependency graph is @xmath311 where @xmath312 .    comparing with the previous definitions of loop formulas , in addition to the irrelevant formulas of nonmonotonic dl - atoms , the definition of canonical loop formulas has a notable distinction",
    ": it is given under a set @xmath171 of atoms whose purpose is to restrict that the support of any atom in @xmath181 come from the rules whose bodies are satisfied by @xmath171 ( relative to a knowledge base ) .",
    "the next proposition shows that the canonical loops and canonical loop formulas for dl - programs are indeed a generalization of loops and loop formulas for normal logic programs @xcite respectively .",
    "let @xmath2 be a normal logic program , @xmath313 and @xmath171 a model of the completion of @xmath2 .",
    "* @xmath181 is a loop of @xmath2 if and only if @xmath181 is a canonical loop of @xmath229 . *",
    "@xmath314 if and only if @xmath315 , where @xmath316 is the loop formula associated with @xmath181 under @xmath2 @xcite and @xmath148 .",
    "let @xmath72 be a dl - program and @xmath76 a canonical answer set of @xmath106 .",
    "then @xmath76 is minimal in the sense that @xmath106 has no canonical answer set @xmath240 such that @xmath317 .",
    "the following two propositions show that the canonical answer sets of dl - programs are noncircular strong answer sets .",
    "thus canonical answer sets are weak answer sets as well .",
    "[ prop : cas : non : cir ] let @xmath72 be a dl - program and @xmath260 a canonical answer set of @xmath106 .",
    "then @xmath76 is noncircular .",
    "let @xmath72 be a dl - program and @xmath260 a canonical answer set of @xmath106 .",
    "then @xmath76 is a strong answer set of @xmath106 .",
    "the following proposition , together with proposition [ prop : cas : non : cir ] , implies that the operator @xmath101 is the only cause that a strong answer set of a dl - program is circular .",
    "let @xmath72 be a dl - program in which @xmath2 does not mention the operator @xmath101 .",
    "then @xmath260 is a canonical answer set of @xmath106 if and only if @xmath76 is a strong answer set of @xmath106 .",
    "integrating asp with description logics has attracted a great deal of attention recently .",
    "the existing approaches can be roughly classified into three categories .",
    "the first is to adopt a nonmonotonic formalism that covers both asp and first - order logic ( if not for the latter , then extend it to the first - order case ) @xcite , where ontologies and rules are written in the same language , resulting in a tight coupling .",
    "the second is a loose approach : an ontology knowledge base and the rules share the same constants but not the same predicates , and the communication is via a well - defined interface , such as dl - atoms @xcite .",
    "the third is to combine ontologies with hybrid rules @xcite , where predicates in the language of ontologies are interpreted classically , whereas those in the language of rules are interpreted nonmonotonically .",
    "although each approach above has its own merits , the loose approach possesses some unique advantages . in many situations",
    ", we would like to combine existing knowledge bases , possibly under different logics . in this case , a notion of interface is natural and necessary .",
    "the loose approach seems particularly intuitive , as it does not rely on the use of modal operators nor on a multi - valued logic .",
    "one notices that dl - programs share similar characteristics with another recent interest , _ multi - context systems _ , in which knowledge bases of arbitrary logics communicate through _ bridge rules _ @xcite .",
    "however , the relationships among these different approaches are currently not well understood .",
    "for example , although we know how to translate a dl - program without the nonmonotonic operator @xmath101 to an mknf theory while preserving the strong answer set semantics @xcite , when @xmath101 is involved , no such a translation is known .",
    "similarly , although a variant of quantified equilibrium logic ( qel ) captures the existing hybrid approaches , as shown by @xcite , it is not clear how one would apply the loop formulas for logic programs with arbitrary sentences @xcite to dl - programs , since , to the best of our knowledge , there is no syntactic , semantics - preserving translation from dl - programs to logic programs with arbitrary sentences or to qel .",
    "in fact , the loop formulas for dl - programs are more involved than any previously known loop formulas , due to mixing asp with classical first - order logic .",
    "this is evidenced by the fact that weak loop formulas permit self - supports , strong loop formulas eliminate certain kind of self - supports , and finally canonical loop formulas remove all self - supports .",
    "this seems to be a unique phenomenon that arises to dl - programs , not to any other known extensions of asp , including logic programs with arbitrary sentences .",
    "in this paper , we characterized the weak and strong answer sets of dl - programs by program completion and loop formulas .",
    "although these loop formulas also provide an alternative mechanism for computing answer sets , building such a system presents itself as an interesting future work .",
    "we also proposed the canonical answer sets for dl - programs , which are minimal and noncircular in a formal sense . from the perspective of loop formulas",
    ", we see a notable distinction among the weak , strong and canonical answer sets : the canonical answer sets permit no circular justifications , the strong answer sets permit circular justifications involving nonmonotonic dl - atoms but not monotonic ones , whereas the weak answer sets permit circular justifications that involve any dl - atoms but not atoms .",
    "we remark that , for a given dl - program @xmath72 , to decide if a set @xmath318 is a strong or canonical loop and to construct the strong or canonical loop formula of @xmath171 are generally quite difficult , since we have to decide the monotonicity of the dl - atoms occurring in @xmath2 . the exact complexity of deciding if a set of atoms is a strong or canonical loop is one of our ongoing studies , in addition to the complexity of deciding if a given dl - program has a canonical answer set .    * acknowledgment * : we thank the anonymous reviewers for their detailed comments , which helped improve the presentation of the paper .",
    "yisong wang was supported in part by nsfc grants 90718009 and 60703095 , the fund of guizhou science and technology 2008[2119 ] , the fund of education department of guizhou province 2008[011 ] , scientific research fund for talents recruiting of guizhou university 2007[042 ] .",
    "jia - huai you and li yan yuan are partially supported by nserc and by the ministry of science and technology of china under 863 plan .",
    "yi - dong shen is supported in part by nsfc grants 60970045 and 60721061 .    ,",
    "calvanese , d. , mcguinness , d.  l. , nardi , d. , and patel - schneider , p.  f. 2007 . ,",
    "cambridge university press , new york , ny .    , hendler , j. , and lassila , o. 2001 .",
    "the semantic web .",
    "_ 284 , _  5 , 3443 .",
    "equilibria in heterogeneous nonmonotonic multi - context systems . in _ proceedings of the twenty - second aaai conference on artificial intelligence ( aaai 2007)_. aaai press , vancouver , british columbia , canada , 385390 .    ,",
    "eiter , t. , polleres , a. , and tompits , h. 2007 . embedding non - ground logic programs into autoepistemic logic for knowledge - base combination . in _ proceedings of the 20th international joint conference on artificial intelligence ( ijcai-07)_. hyderabad , india , 304309 .    ,",
    "faber , w. , leone , n. , and perri , s. 2005 .",
    "declarative and computational properties of logic programs with aggregates . in _ proceedings of the nineteenth international joint conference on artificial intelligence ( ijcai 2005)_. professional book center , edinburgh , scotland , uk , 406411 .    ,",
    "lin , f. , wang , y. , and zhang , m. 2006 .",
    "first - order loop formulas for normal logic programs . in _ proceedings of the 10th international conference on principles of knowledge representation and reasoning ( kr 2006)_. aaai press , lake district of the united kingdom , 298307 .    , pearce , d. , polleres , a. , and valverde , a. 2007 . quantified equilibrium logic and hybrid rules . in _",
    "web reasoning and rule systems , first international conference , rr 2007_. lecture notes in computer science , vol . 4524 .",
    "springer , innsbruck , austria .    ,",
    "ianni , g. , lukasiewicz , t. , schindlauer , r. , and tompits , h. 2008 . combining answer set programming with description logics for the semantic web .",
    "_ 172 , _  12 - 13 , 14951539",
    ".    \\2004 . a proposal for an owl rules language . in _ proceedings of the 13th international conference on world wide web ( www 2004)_. acm , new york , ny , usa , 723731",
    ".    \\2008 . on loop formulas with variables .",
    "in _ proceedings of the 11th international conference on principles of knowledge representation and reasoning ( kr 2008)_. aaai press , sydney , australia , 444453 .",
    "assat : computing answer sets of a logic program by sat solvers .",
    "_ 157 , _  1 - 2 , 115137 .",
    "lparse programs revisited : semantics and representation of aggregates . in _ logic programming ,",
    "24th international conference ( iclp 2008)_. lecture notes in computer science , vol .",
    "springer , udine , italy , 347361 .",
    "stable models and an alternative logic programming paradigm . in _ the logic programming paradigm : a 25-year perspective _ , k.  apt , v.  marek , m.  truszczynski , and d.  warren , eds .",
    "springer - verlag , berlin , 375398 .",
    "\\2010 . reconciling description logics and rules .",
    "_ 36 _ , 165228 .    \\1999 .",
    "logic programs with stable model semantics as a constraint programming paradigm .",
    "_ 25 , _  3 - 4 , 241273 .",
    "\\2005 . on the decidability and complexity of integrating ontologies and rules .",
    "_ 3 , _  1 , 6173 .",
    "dl+log : tight integration of description logics and disjunctive datalog . in _ proceedings ,",
    "tenth international conference on principles of knowledge representation and reasoning ( kr2006)_. aaai press , lake district of the united kingdom , 6878 .    ,",
    "ross , k.  a. , and schlipf , j.  s. 1991 . the well - founded semantics for general logic programs .",
    "_ 38 , _  3 , 620650 .",
    "w3c recommendation , aa .",
    "available at http://www.w3.org / tr / owl2-overview/.    , you , j .- h . ,",
    "yuan , l .- y .",
    ", and shen , y .- d . 2010 .",
    "loop formulas for description logic programs .",
    "_ 10 , _  4 - 6 , 531545 .",
    "we first recall the operator @xmath319 for a positive dl - program @xmath72 @xcite : let @xmath320 , @xmath321 since @xmath322 is monotonic , so it has the least fix - point which is the unique least model of @xmath106 .",
    "such least fix - point can be iteratively constructed as :              \\(1 ) let @xmath76 be a strong answer set of @xmath106 .",
    "it is sufficient to show that , for any @xmath92 , @xmath331 by proposition [ prop : completion : supported ] .",
    "note that + @xmath92 + @xmath332 there is a dl - rule ( @xmath333 ) in @xmath334 such that @xmath78 for any @xmath335 + @xmath332 there is a dl - rule ( @xmath336 ) in @xmath2 such that @xmath337 is obtained from @xmath68 by the strong dl - transformation , where @xmath338 is a set of nonmonotonic dl - atoms , i.e. , ( i ) @xmath339 for any @xmath340 , and ( ii ) @xmath88 for any @xmath89 + @xmath341 .",
    "( @xmath332 ) by proposition [ prop : as : supported : model ] , we only need to show that , @xmath344 for any weak loop @xmath181 of @xmath106 .",
    "suppose @xmath345 , i.e. , @xmath346 for any rule @xmath328 in @xmath2 such that @xmath347 and @xmath348 .",
    "it implies that @xmath349 . without loss of generality ,",
    "suppose @xmath350 and @xmath351 . because @xmath76 is a weak answer set of @xmath106 , @xmath327 .",
    "it follows that @xmath352 .",
    "let @xmath353 be the least number such that @xmath354 .",
    "thus @xmath355 must have a rule @xmath356 such that @xmath357 for any @xmath335 .",
    "suppose @xmath358 is obtained from the following rule @xmath359 in @xmath2 by the weak dl - transformation , where @xmath360 is a set of dl - atoms .",
    "thus @xmath94 for any @xmath361 and @xmath362 for any @xmath363 . by ( [ thm : w : eq:1 ] ) ,",
    "note that @xmath365 .",
    "thus @xmath366 .",
    "without loss of generality , suppose @xmath367 .",
    "similarly , there exists the least number @xmath368 such that @xmath369 . using the construction",
    ", we may have a sequence @xmath370 of natural numbers and a sequence @xmath371 of atoms in @xmath372 such that        ( @xmath384 ) firstly , we show @xmath385 .",
    "let @xmath386 be the set of rules in @xmath355 whose bodies are satisfied by @xmath76 . since @xmath76 is a supported model of @xmath106 , the heads of rules in @xmath386 are also satisfied by @xmath76 . moreover , @xmath76 is the set of atoms occurring in @xmath386 .",
    "let @xmath387 , where @xmath388 .",
    "let @xmath389 and @xmath390 be the set of rules in @xmath386 whose heads are in @xmath391 .",
    "we show that @xmath392 has at least one terminating loop .    for any rule @xmath393 in @xmath390 , @xmath394 since @xmath395 for any @xmath95 and @xmath355 mentions only atoms .",
    "however @xmath396 otherwise @xmath397 for any @xmath398 and then @xmath399 . it implies that @xmath400 suppose @xmath401 .",
    "then there is an edge @xmath402 in the weak positive dependency graph of @xmath392 .",
    "so we can construct a sequence of atoms @xmath403 such that @xmath404 for any @xmath405 and @xmath406 is an edge of the weak positive dependency graph of @xmath392 . since @xmath391 is finite",
    ", the above sequence must contain a loop .",
    "it is clear that if a graph has a loop then it has at least one terminating loop .",
    "now suppose @xmath407 is a terminating loop of @xmath390 .",
    "we further claim that , for any rule @xmath408 in @xmath390 such that @xmath347 : @xmath409 otherwise , we can construct another path @xmath410 in the positive weak dependency graph of @xmath392 such that @xmath411 and @xmath412 .",
    "thus we have a path from @xmath181 to another maximal loop of the weak dependency graph of @xmath392 , which contradicts the fact that @xmath181 is a terminating loop .",
    "note that @xmath181 is also a weak loop of @xmath106 , @xmath344 and @xmath413 .",
    "it follows that @xmath2 should have at least one rule @xmath414 such that @xmath415 , @xmath94 for any @xmath416 and @xmath417 for any @xmath418 , where @xmath419 .",
    "suppose @xmath420 is the rule obtained from @xmath337 by the weak dl - transformation .",
    "evidently , @xmath421 .",
    "furthermore @xmath422 since @xmath423 .",
    "this implies that @xmath424 which contradicts with @xmath425 since @xmath426 .",
    "consequently , @xmath427 and then @xmath428 . it implies that @xmath429 and @xmath385 by @xmath430 .    secondly ,",
    "we prove @xmath431 .",
    "let @xmath432 .",
    "suppose @xmath433 .",
    "let @xmath164 be an arbitrary atom in @xmath240 .",
    "there is the least number @xmath434 such that @xmath435 . so that there exists a rule @xmath436 in @xmath120 such that @xmath437 .",
    "note that @xmath438 and @xmath331 .",
    "it follows that , for any rule @xmath328 in @xmath2 , @xmath439 it implies that @xmath440 .",
    "thus there exists an atom @xmath441 such that @xmath442 .",
    "so we can construct a sequence of numbers @xmath443 and a sequence @xmath444 of atoms in @xmath240 such that , for any @xmath445 ,          [ lem : i : i ] let @xmath72 be a dl - program , @xmath320 , @xmath240 is the extension of @xmath76 satisfying ( [ if : formula ] ) and @xmath181 be an arbitrary nonempty set of atoms .",
    "then we have , for any dl - atom @xmath13 , @xmath452 iff @xmath453 .    since @xmath240 is the extension of @xmath76 satisfying ( [ if : formula ] ) , we have that @xmath454 iff @xmath455 for any @xmath456 .",
    "furthermore , for any atom @xmath457 , @xmath458 iff @xmath459 . without loss of generality ,",
    "let @xmath460(\\vec t)$ ] .",
    "it obviously holds that if the predicates @xmath55 and @xmath197 do not occur in @xmath181 since @xmath461 .",
    "let s assume that the predicates @xmath55 and @xmath197 appear in @xmath181 .",
    "+ @xmath462 + @xmath463(\\vec t)$ ] + @xmath464 @xmath465 + @xmath464 @xmath466 + @xmath467(\\vec t)$ ] + @xmath464 @xmath468 .",
    "let @xmath470 and @xmath471 . if @xmath472 then @xmath473 .",
    "suppose @xmath472 .",
    "for any @xmath474 , there exists the least natural number @xmath434 and a rule @xmath393 in @xmath334 such that @xmath475 for any @xmath95 .",
    "but we know that @xmath438 and @xmath331 which implies that , for any rule @xmath476 in @xmath2 : @xmath477 it follows that @xmath278 for some @xmath95 .",
    "it implies that either    a.   there is some atom @xmath478 such that @xmath479 , or b.   there is a monotonic dl - atom @xmath201(\\vec t)$ ] in @xmath480 such that , for some @xmath481 ( or @xmath482 ) occurring in @xmath205 , there is an atom @xmath483 such that @xmath484 and @xmath485 .",
    "since @xmath391 is finite , in the above sequence of atoms there must be @xmath380 such that @xmath381 .",
    "it implies that @xmath382 which contradicts with @xmath448 .",
    "consequently , @xmath427 , i.e. , @xmath492 .",
    "let @xmath72 be a dl - program and @xmath107 .",
    "@xmath76 is a strong answer set of @xmath106 if and only if @xmath238 , where @xmath239 is the set of strong loop formulas of all strong loops of @xmath106 and @xmath240 is the extension of @xmath76 satisfying ( [ if : formula ] ) .",
    "( @xmath332 ) evidently , @xmath494 . by proposition [ prop : as : supported : model ] , it is sufficient to prove that , for any strong loop @xmath181 of @xmath106 , @xmath495 .",
    "suppose @xmath350 is a strong loop of @xmath106 and @xmath496 , i.e. , @xmath497 where @xmath227 are all the rules in @xmath2 such that @xmath186 and @xmath187 for any @xmath188 .",
    "it follows that , for any @xmath188 , @xmath498 since @xmath499 , we have that @xmath500 and then @xmath349 . without loss of generality ,",
    "let s assume @xmath351 .",
    "note that @xmath76 is a strong answer set of @xmath106 , i.e. , @xmath326 .",
    "thus there is the least number @xmath353 such that @xmath501 .",
    "so there is a rule ( @xmath502 ) in @xmath110 such that @xmath503 for any @xmath335 .",
    "it is evident that @xmath365 .",
    "it implies that @xmath2 has a rule @xmath504 where @xmath505 is a set of nonmonotonic dl - atoms , such that @xmath358 is obtained from @xmath506 by the strong dl - transformation , i.e. , @xmath78 for any @xmath507 and @xmath417 for any @xmath363 .",
    "note that @xmath493 .",
    "it is clear that , @xmath508 for each @xmath509 and @xmath510 for any @xmath363 . by ( [ thm : eq:1 ] ) ,",
    "at least one of the following two cases holds :    * @xmath511 . in this case",
    ", there is some atom @xmath512 and @xmath513 .",
    "* @xmath514 for some monotonic dl - atom @xmath515(\\vec t)$ ] in @xmath516 . by lemma [ lem :",
    "i : i ] , we have @xmath517 . since @xmath13 is monotonic",
    ", then we further have @xmath518 .",
    "but we know that @xmath503 .",
    "it follows that , there exists some atom @xmath519 , @xmath520 and @xmath481 ( or @xmath482 ) appears in @xmath181 for some @xmath53 .",
    "( @xmath384 ) let @xmath524 . by proposition  [ prop : completion : supported ] , @xmath76 is a supported model of @xmath106 .",
    "let @xmath386 be the set of rules in @xmath110 whose bodies are satisfied by @xmath76 relative to @xmath1 . clearly , for any rule @xmath408 in @xmath386 , @xmath92 . and inversely , for any @xmath92 , there exists at least one rule @xmath408 in @xmath386",
    ". let @xmath525 where @xmath388 .",
    "evidently , @xmath526 .",
    "let @xmath389 .",
    "suppose @xmath473 .",
    "let @xmath390 be the set of rules in @xmath386 whose heads belong to @xmath391 .",
    "we claim that the dl - program @xmath392 must have one terminating loop .",
    "firstly , let @xmath474 and suppose @xmath408 be a rule in @xmath390 .",
    "we have that @xmath527 it follows that there is an atom or dl - atom @xmath13 in @xmath480 such that @xmath528 .",
    "that implies that at least one of the following cases hold :    * there is some atom @xmath441 , @xmath487 ; * there exists a monotonic dl - atom @xmath201(\\vec t)$ ] in @xmath480 such that @xmath528 , which implies that there exists some @xmath481 ( or @xmath482 ) appearing in @xmath205 and @xmath529 for some atom @xmath281 since @xmath78 , otherwise @xmath530 .",
    "it follows that , there exists an edge @xmath402 in the positive strong dependency graph @xmath531 of the dl - program @xmath392 where @xmath487 .",
    "consequently , we can construct a sequence @xmath532 of atoms in @xmath391 such that , for any @xmath445 , @xmath406 is an edge of @xmath531 . since @xmath391 is finite",
    ", the constructed sequence must contain a loop .",
    "furthermore , @xmath531 has at least one terminating loop .",
    "let @xmath181 be a terminating loop of @xmath392 , @xmath347 and @xmath533 be an arbitrary rule in @xmath390 .",
    "it is obvious that @xmath413 .",
    "because @xmath181 is a terminating loop of @xmath392 , it follows that the following cases hold :      note that @xmath181 is also a loop of @xmath106 . due to @xmath495 , @xmath413 , and @xmath538",
    ", we have @xmath499 .",
    "thus , @xmath2 has at least one rule @xmath539 such that @xmath419 , @xmath415 and @xmath540 it implies that @xmath78 for any nonmonotonic dl - atom @xmath416 and @xmath417 for any @xmath418 .",
    "let @xmath541 be the rule in @xmath110 that is obtained from @xmath337 by the strong dl - transformation",
    ". clearly , @xmath542 by lemma [ lem : i : i ] . furthermore , due to @xmath423 , so we have @xmath543 note that @xmath544 implies @xmath545 .",
    "it follows that @xmath546 by @xmath415 .",
    "so we have @xmath547 since @xmath395 for any @xmath548 .",
    "it implies that @xmath549 . since @xmath550",
    ", @xmath551 must have a monotonic dl - atom @xmath201(\\vec t)$ ] such that @xmath528 , i.e. , @xmath552 .",
    "by lemma [ lem : i : i ] , we have @xmath468 since @xmath553 .",
    "thus there must exist some atom @xmath554 and @xmath481 ( or @xmath482 ) appears in @xmath205 since @xmath13 is monotonic .",
    "however , we know that , for any such above atom @xmath281 , @xmath536 implies @xmath537 .",
    "it follows that @xmath555 by @xmath552 .",
    "it is a paradox .",
    "consequently , @xmath556 .",
    "it implies that @xmath557 .",
    "note that @xmath558 .",
    "we have that @xmath559 .",
    "it follows that @xmath560 . by lemma [ lem : slf:1 ] , @xmath561 since @xmath172 .",
    "consequently , @xmath326 .",
    "thus @xmath76 is a strong answer set of @xmath106 .",
    "let @xmath72 be a dl - program , @xmath76 an interpretation of @xmath2 and @xmath181 a weak loop of @xmath106 .",
    "then we have @xmath241 , where @xmath240 is the extension of @xmath76 according to ( [ if : formula ] ) .",
    "suppose @xmath562 and @xmath563 .",
    "we have that @xmath500 and , for any dl - rule @xmath328 in @xmath2 such that @xmath347 and @xmath348 , @xmath564 note that @xmath181 is also a strong loop of @xmath106 and @xmath562 .",
    "it implies that there exists at least one rule @xmath565 in @xmath2 such that @xmath419 , @xmath415 and @xmath566 it is clear that , for any formula @xmath161 of @xmath157 , @xmath567 implies that @xmath162 since @xmath161 mentions only the predicates occurring in @xmath106 .",
    "notice further that if @xmath568 is a monotonic dl - atom then @xmath78 by lemma [ lem : i : i ] .",
    "it follows that @xmath569 which contradicts with @xmath345 .      1 .",
    "if @xmath571 and @xmath572 then there exists an interpretation @xmath573 and an atom @xmath574 such that @xmath575 , @xmath530 and @xmath576 .",
    "if @xmath13 is nonmonotonic , @xmath577 and @xmath578 then there exists an interpretation @xmath573 and an atom @xmath574 such that @xmath579 , @xmath580 and @xmath530 .",
    "since both @xmath138 and @xmath171 are finite , the algorithm definitely terminates .",
    "note that @xmath171 is a nonempty subset of @xmath138 , the * forall * loop will run at least once . suppose _",
    "psup(@xmath587 _ is terminated .",
    "there are only two cases leading to its termination :    * there is no @xmath588 ( line 3 ) .",
    "it implies that @xmath589 and @xmath530 .",
    "the latter contradicts with @xmath571 .",
    "thus this case is impossible . *",
    "the  break \" is executed ( line 9 ) .",
    "it implies that @xmath590 and @xmath591 .",
    "similarly , since both @xmath171 and @xmath138 are finite then the algorithm _ nsup _ definitely terminates and the * forall * loop will be executed at least once .",
    "_ is executed and terminated . if _",
    "nsup _ terminates because of @xmath597 in the * forall * loop , in this case , we have @xmath598 and @xmath530 .",
    "the latter contradicts with @xmath578 .",
    "thus the only case leading to the termination of _ nsup _ is the  break \" ( line 10 ) . in that case , we have that @xmath580 and @xmath530 .",
    "it is obvious @xmath599 .",
    "\\(1 ) suppose @xmath603 .",
    "there is no atom @xmath604 which is a positive nonmonotonic dependency of @xmath13 . if there is no atom @xmath605 such that @xmath606 is a positive nonmonotonic dependency of @xmath13 then @xmath607 .",
    "it follows that @xmath78 since @xmath508 and @xmath240 is the extension of @xmath76 .",
    "suppose @xmath555 . from ( 1 ) of lemma",
    "[ lem : cano : dep ] , there is an atom @xmath608 , i.e. , @xmath347 , and an interpretation @xmath573 such that @xmath528 and @xmath609 . it is evident that @xmath164 must mention the predicate @xmath610 .",
    "it implies that @xmath164 is a positive nonmonotonic dependency of @xmath13 which contradicts with the assumption .",
    "thus @xmath453 .",
    "suppose there is some atom @xmath605 such that @xmath606 is a positive nonmonotonic dependency of @xmath13 .",
    "note that @xmath611 iff @xmath612 according to ( [ if : formula ] ) .",
    "+ @xmath600 + @xmath613 + @xmath614 + @xmath615 + @xmath616(\\vec t)$ ] + @xmath617 .",
    "\\(2 ) suppose @xmath603 .",
    "there is no atom @xmath606 which is a negative nonmonotonic dependency of @xmath13 . if there is no atom @xmath619 such that @xmath604 is a negative nonmonotonic dependency of @xmath13 then @xmath620 .",
    "it implies that @xmath278 since @xmath621 and @xmath240 is the extension of @xmath76 .",
    "suppose @xmath453 . by ( 2 ) of lemma [ lem : cano : dep ]",
    ", there is some atom @xmath608 , i.e. , @xmath347 , and an interpretation @xmath573 such that @xmath530 and @xmath622 .",
    "it is clear that @xmath164 must mention the predicate @xmath623 .",
    "it implies that @xmath164 is a negative nonmonotonic dependency of @xmath13 which contradicts with the assumption .",
    "thus @xmath555 .",
    "suppose there is some atom @xmath619 such that @xmath604 is a negative nonmonotonic dependency of @xmath13 .",
    "note that @xmath624 iff @xmath625 according to ( [ if : formula ] ) .",
    "+ @xmath626 ) + @xmath627 + @xmath628 + @xmath629 + @xmath630(\\vec t)$ ] + @xmath631 .",
    "please note that the inverses of ( 1 ) and ( 2 ) do not generally hold .",
    "for example , let @xmath632(a)$ ] , @xmath633 , @xmath634 , @xmath635 and @xmath636 .",
    "because there is no interpretation @xmath76 such that @xmath278 and @xmath637 , it implies @xmath638 .",
    "similarly , we have @xmath639 .",
    "note that @xmath640 .",
    "however @xmath641 since @xmath571 .",
    "similarly , we have that @xmath642 and @xmath643 since @xmath578 .",
    "* @xmath181 is a loop of @xmath2 if and only if @xmath181 is a canonical loop of @xmath229 . *",
    "@xmath314 if and only if @xmath644 where @xmath316 is the loop formula associated with @xmath181 under @xmath2 @xcite ) and @xmath148 .",
    "\\(2 ) @xmath644 if and only if there is a rule @xmath648 in @xmath2 such that @xmath347 , @xmath348 , @xmath649 and @xmath650 since @xmath68 mentions no dl - atoms at all .",
    "it implies that @xmath651 and @xmath652 .",
    "thus equation ( [ eq : prop:4.1 ] ) holds iff @xmath653 .",
    "consequently , @xmath644 iff @xmath314 .",
    "suppose there is a canonical answer set @xmath136 of @xmath106 such that @xmath654 .",
    "let @xmath655 .",
    "please note that @xmath172 and @xmath656 . for any atom @xmath262",
    ", there is no rule @xmath328 in @xmath2 such that @xmath657 note that there is at least one rule @xmath658 in @xmath2 such that @xmath659 it implies that at least one of the following conditions hold :    * there is an atom @xmath660 such that @xmath661 .",
    "* there is a dl - atom @xmath416 such that @xmath571 . but note that @xmath78 .",
    "it implies that there is some atom @xmath662 , i.e. , @xmath661 , and an interpretation @xmath573 such that @xmath528 and @xmath663 by ( 1 ) of lemma [ lem : cano : dep ] .",
    "* there is a nonmonotonic dl - atom @xmath418 such that @xmath664 .",
    "but note that @xmath417 .",
    "it implies that there is some atom @xmath662 , i.e. , @xmath661 , and an interpretation @xmath573 such that @xmath665 and @xmath666 by ( 2 ) of lemma [ lem : cano : dep ] .",
    "it follows that @xmath402 is an edge of @xmath273 . due to",
    "that @xmath164 is an arbitrary atom in @xmath171 and @xmath171 is finite , there must exists a canonical loop @xmath181 of @xmath106 such that @xmath667 .",
    "we can further assume @xmath181 is such a terminating one , i.e. , ( a ) @xmath181 is a maximal subset of @xmath171 and ( b ) @xmath181 is a canonical loop of @xmath106 and ( c ) @xmath273 has no path from one atom of @xmath181 to an atom of another maximal canonical loop @xmath668 of @xmath106 with @xmath669 .",
    "note that @xmath670 where @xmath240 is the extension of @xmath76 according to ( [ if : formula ] ) .",
    "it follows that there is at least one rule @xmath671 in @xmath2 such that @xmath347 , @xmath672 , @xmath673 by lemma [ lem : i : i ] and [ lem : cdf ] , it implies that @xmath674    if @xmath675 then @xmath676 . in terms of the previous analysis , there is some atom @xmath677 , i.e. , @xmath678 , such that @xmath679 is an edge of @xmath273 .",
    "thus @xmath273 must have a path from @xmath164 to another canonical loop @xmath680 of @xmath106 , where @xmath681 , which contradicts with @xmath181 is a terminating canonical loop .",
    "so we have @xmath682 .",
    "according to equation ( [ eq : prop:4.4:b ] ) , we have @xmath683 which contradicts with the condition ( [ eq : prop:4.4:a ] ) .",
    "consequently , @xmath136 can not be a canonical answer set of @xmath106 .",
    "then we complete the proof .",
    "suppose @xmath76 is circular , i.e. , there exists @xmath684 such that , for any @xmath328 in @xmath2 with @xmath262 and @xmath685 , the following condition holds : @xmath686 without loss of generality , we assume @xmath171 is such a minimal one .",
    "it implies that at least one of the following cases hold :    * @xmath687 which implies that there is some atom @xmath688 .",
    "* there is a dl - atom @xmath95 such that @xmath689 . knowing that @xmath78 , it follows that there is an interpretation @xmath526 and an atom @xmath690 , i.e. , @xmath661 such that @xmath530 and @xmath691 by ( 1 ) of lemma [ lem : cano : dep ] . so that @xmath692 is a positive nonmonotonic dependency of @xmath13 .",
    "* there is a nonmonotonic dl - atom @xmath97 such that @xmath693 . knowing that @xmath417 , it follows that there is an interpretation @xmath573 and an atom @xmath694 , i.e. , @xmath661 such that @xmath665 and @xmath666 by ( 2 ) of lemma [ lem : cano : dep ] . so that @xmath692 is a negative nonmonotonic dependency of @xmath13 .",
    "thus we have that @xmath402 is an edge of the canonical dependency graph of @xmath106 . because the atom is an arbitrary one in @xmath171 and",
    "@xmath171 is finite , . there is a terminating canonical loop in the generated subgraph of @xmath273 on @xmath171 , i.e. , the graph @xmath695 where @xmath696 and @xmath177 if @xmath697 is an edge of @xmath273",
    "let @xmath667 be such a terminating canonical loop .",
    "note that @xmath670 and @xmath698 .",
    "it implies that there is at least one rule @xmath658 in @xmath2 such that @xmath347 , @xmath699 , @xmath700 it implies that , by lemma [ lem : i : i ] and lemma [ lem : cdf ] , @xmath701    thus @xmath702 by equation ( [ eq : can : non : cir:1 ] ) .",
    "however , using the above analysis , we have that @xmath703 has a path from one atom in @xmath181 to another loop of @xmath703 .",
    "it contradicts with the fact that @xmath181 is a terminating canonical loop of @xmath703",
    ". thus @xmath76 must be noncircular .",
    "suppose @xmath76 is not a strong answer set of @xmath106 .",
    "since @xmath704 , there must exist some strong loop @xmath181 of @xmath106 such that @xmath496 , where @xmath240 is the extension of @xmath76 according to ( [ if : formula ] ) .",
    "it implies that , @xmath705 and @xmath706 for any rule @xmath328 in @xmath2 with @xmath348 . without loss of generality , we assume @xmath181 is a minimal one such that @xmath496 .",
    "let @xmath707 .",
    "it is evident that @xmath708 and @xmath709 .",
    "let @xmath692 be an atom in @xmath171 . because @xmath710 , there exists at least one rule @xmath565 in @xmath2 such that @xmath711 it implies that at least one of the following conditions holds :    * @xmath712 .",
    "it shows that there is some atom @xmath713 .",
    "* there is a monotonic dl - atom @xmath416 such that @xmath714 .",
    "it shows that @xmath555 by lemma [ lem : i : i ] , i.e. , @xmath689 .",
    "note that @xmath78 .",
    "there must have some interpretation @xmath573 and an atom @xmath715 , i.e. , @xmath716 such that @xmath530 and @xmath717 by ( 1 ) of lemma [ lem : cano : dep ] .    so that @xmath718 is an edge of the canonical dependency graph of @xmath106 . due to the arbitrariness of @xmath692 and that @xmath171 is finite",
    ", the generated subgraph @xmath703 of @xmath273 on @xmath171 must have a terminating canonical loop @xmath252 .",
    "it is clear that @xmath719 .",
    "note that @xmath720 and @xmath721 .",
    "it implies that there is at least one rule @xmath722 in @xmath2 such that @xmath723 , @xmath724 , @xmath725 it follows that , by lemmas [ lem : i : i ] and [ lem : cdf ] , @xmath726      * @xmath727 , i.e. , @xmath728 .",
    "it implies that there is an atom @xmath729 such that @xmath730 .",
    "* there is a monotonic dl - atom @xmath731 such that @xmath689 .",
    "but we know that @xmath732 by lemma [ lem : cdf ] .",
    "it shows that there is an atom @xmath730 such that @xmath528 and @xmath733 for some interpretation @xmath573 by lemma [ lem : cano : dep ] .",
    "it follows that @xmath734 is also an edge of @xmath273 .",
    "since @xmath171 is finite , @xmath703 must have a path from @xmath735 to another canonical loop of @xmath703 .",
    "it contradicts with @xmath252 is a terminating canonical loop of @xmath703 .",
    "consequently , @xmath76 is a strong answer set of @xmath106 .",
    "let @xmath72 be a dl - program in which @xmath2 does not mention the operator @xmath101 .",
    "then @xmath260 is a canonical answer set of @xmath106 if and only if @xmath76 is a strong answer set of @xmath106 .    by proposition [ prop : cas :",
    "sas ] , it is sufficient to show that if @xmath76 is a strong answer set of @xmath106 then @xmath76 is a canonical answer set of @xmath106 .",
    "suppose @xmath76 is a strong answer set of @xmath106 but @xmath76 is not a canonical answer set of @xmath106 .",
    "since @xmath704 , it implies that there exists at least one canonical loop @xmath181 of @xmath106 such that @xmath736 , where @xmath240 is the extension of @xmath76 according to ( [ if : formula ] ) .",
    "since @xmath2 mentions no @xmath101 , all dl - atoms appearing in @xmath2 must be monotonic .",
    "in particular , if @xmath13 is a monotonic dl - atom and there is some atom @xmath281 and an interpretation @xmath573 such that @xmath528 and @xmath737 then @xmath13 must contain @xmath481 ( or @xmath482 ) for some @xmath53 .",
    "it implies that @xmath181 is also a strong loop of @xmath106 and then @xmath562 , i.e. , @xmath2 has at least one rule @xmath328 such that @xmath347 , @xmath348 and @xmath738 note that no dl - atoms mention @xmath101 . by lemma [ lem : i : i ]",
    ", it follows that @xmath739 it contradicts with @xmath736 .",
    "thus @xmath76 is a canonical answer set of @xmath106 ."
  ],
  "abstract_text": [
    "<S> description logic programs ( dl - programs ) proposed by eiter et al . constitute an elegant yet powerful formalism for the integration of answer set programming with description logics , for the semantic web . in this paper </S>",
    "<S> , we generalize the notions of completion and loop formulas of logic programs to description logic programs and show that the answer sets of a dl - program can be precisely captured by the models of its completion and loop formulas . </S>",
    "<S> furthermore , we propose a new , alternative semantics for dl - programs , called the _ </S>",
    "<S> canonical answer set semantics _ , which is defined by the models of completion that satisfy what are called canonical loop formulas . </S>",
    "<S> a desirable property of canonical answer sets is that they are free of circular justifications . </S>",
    "<S> some properties of canonical answer sets are also explored .    </S>",
    "<S> # 1    [ firstpage ]    semantic web , description logic programs , answer sets , loop formulas </S>"
  ]
}
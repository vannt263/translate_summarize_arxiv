{
  "article_text": [
    "a _ monotone system of polynomial equations _ ( mspe for short ) has the form @xmath10 where @xmath11 are polynomials with _ positive _ real coefficients . in vector form",
    "we denote an mspe by @xmath3 .",
    "we call mspes `` monotone '' because @xmath12 implies @xmath13 for every @xmath14 .",
    "mspes appear naturally in the analysis of many stochastic models , such as context - free grammars ( with numerous applications to natural language processing @xcite , and computational biology @xcite ) , probabilistic programs with procedures @xcite , and web - surfing models with back buttons @xcite .    by kleene",
    "s theorem , a feasible mspe @xmath3 ( i.e. , an mspe with at least one solution ) has a least solution @xmath15 ; this solution can be irrational and non - expressible by radicals . given an mspe and a vector @xmath16 encoded in binary , the problem whether @xmath17 holds is in pspace and at least as hard as the square - root - sum problem , a well - known problem of computational geometry ( see  @xcite for more details ) .",
    "for the applications mentioned above the most important question is the efficient numerical approximation of the least solution . finding the least solution of a feasible system @xmath3 amounts to finding the least solution of @xmath18 for @xmath19 . for this we can apply ( the multivariate version of ) _",
    "newton s method _",
    "@xcite : starting at some @xmath20 ( we use uppercase to denote variables and lowercase to denote values ) , compute the sequence @xmath21 where @xmath22 is the jacobian matrix of partial derivatives .",
    "while in general the method may not even be defined ( @xmath23 may be singular for some  @xmath24 ) , etessami and yannakakis proved in  @xcite that this is not the case for the _ decomposed newton s method ( dnm ) _ , that decomposes the mspe into _ strongly connected components _",
    "( sccs ) and applies newton s method to them in a bottom - up fashion for details . ] .",
    "the results of @xcite provide no information on the number of iterations needed to compute @xmath25 _",
    "valid bits _ of @xmath5 , i.e. , to compute a vector @xmath26 such that @xmath27 for every @xmath28 . in a former paper @xcite",
    "we have obtained a first positive result on this problem .",
    "we have proved that for every strongly connected mspe @xmath3 there exists a threshold @xmath4 such that for every @xmath29 the ( @xmath30)-th iteration of newton s method has at least @xmath25 valid bits of @xmath5 .",
    "so , loosely speaking , after @xmath4 iterations dnm is guaranteed to compute at least 1 new bit of the solution per iteration ; we say that dnm converges _ linearly with rate 1_.    the problem with this result is that its proof provides no information on @xmath4 other than its existence . in this paper",
    "we show that the threshold @xmath4 can be chosen as @xmath31 where @xmath32 is the number of equations of the mspe , @xmath33 is such that all coefficients of the mspe can be given as ratios of @xmath33-bit integers , and @xmath34 is the minimal component of the least solution @xmath15 .",
    "it can be objected that @xmath4 depends on @xmath5 , which is precisely what newton s method should compute . however , for mspes coming from stochastic models , such as the ones listed above , we can do far better .",
    "the following observations and results help to deal with @xmath34 :    * we obtain a syntactic bound on @xmath34 for probabilistic programs with procedures ( having stochastic context - free grammars and back - button stochastic processes as special instances ) and prove that in this case @xmath35 . *",
    "we show that if every procedure has a non - zero probability of terminating , then @xmath36 .",
    "this condition always holds in the special case of back - button processes @xcite .",
    "hence , our result shows that @xmath25 valid bits can be computed in time in the unit cost model of blum , shub and smale @xcite , where each single arithmetic operation over the reals can be carried out exactly and in constant time .",
    "it was proved in  @xcite by a reduction to a semidefinite programming problem that @xmath25 valid bits can be computed in @xmath37-time in the classical ( turing - machine based ) computation model .",
    "we do not improve this result , because we do not have a proof that round - off errors ( which are inevitable on turing - machine based models ) do not crucially affect the convergence of newton s method .",
    "but our result sheds light on the convergence of a practical method to compute @xmath5 . * finally",
    ", since @xmath38 holds for every @xmath39 , as newton s method proceeds it provides better and better lower bounds for @xmath34 and thus for @xmath4 . in the paper",
    "we exhibit a mspe for which , using this fact and our theorem , we can prove that no component of the solution reaches the value 1 .",
    "this can not be proved by just computing more iterations , no matter how many .",
    "the paper contains two further results concerning non - strongly - connected mspes : firstly , we show that dnm still converges linearly even if the mspe has more than one scc , albeit the convergence rate is poorer .",
    "secondly , we prove that newton s method is well - defined also for non - strongly - connected mspes .",
    "thus , it is not necessary to decompose an mspe into its sccs  although decomposing the mspe may be preferred for efficiency reasons .",
    "the paper is structured as follows . in section  [ sec : prelim ] we state preliminaries and give some background on newton s method applied to mspes .",
    "sections  [ sec : conv - scmsp ] ,  [ sec : conv - dnm ] , and  [ sec : well - defined ] contain the three results of the paper .",
    "section  [ sec : ppda ] contains applications of our main result .",
    "we conclude in section  [ sec : conclusions ] .",
    "missing proofs can be found in a technical report  @xcite .",
    "in this section we introduce our notation and formalize the concepts mentioned in the introduction .",
    "@xmath40 and @xmath41 denote the sets of real , respectively natural numbers .",
    "we assume @xmath42 .",
    "@xmath43 denotes the set of @xmath32-dimensional real valued _ column _ vectors and @xmath44 the subset of vectors with non - negative components .",
    "we use bold letters for vectors , e.g. @xmath45 , where we assume that @xmath46 has the components @xmath47 .",
    "similarly , the @xmath48 component of a function @xmath49 is denoted by  @xmath2 .",
    "@xmath50 denotes the set of matrices having @xmath33 rows and @xmath32 columns .",
    "the transpose of a vector or matrix is indicated by the superscript @xmath51 .",
    "the identity matrix of @xmath52 is denoted by @xmath53 .",
    "the _ formal neumann series _ of @xmath54 is defined by @xmath55 .",
    "it is well - known that @xmath56 exists if and only if the spectral radius of @xmath57 is less than @xmath58 , i.e. @xmath59 . if @xmath56 exists , we have @xmath60 .",
    "the partial order @xmath61 on @xmath43 is defined as usual by setting @xmath62 if @xmath63 for all @xmath64 .",
    "by @xmath65 we mean @xmath62 and @xmath66 . finally , we write @xmath67 if @xmath68 in every component .",
    "we use @xmath69 as variable identifiers and arrange them into the vector @xmath70 . in the following @xmath32 always denotes the number of variables , i.e. the dimension of @xmath70 . while @xmath71 denote arbitrary elements in @xmath43 , resp .",
    "@xmath44 , we write @xmath70 if we want to emphasize that a function is given w.r.t .  these variables .",
    "hence , @xmath6 represents the function itself , whereas @xmath72 denotes its value for @xmath45 .    if @xmath73 is a set of variables and @xmath46 a vector , then by @xmath74 we mean the vector obtained by restricting @xmath46 to the components in @xmath73 .",
    "the _ jacobian _ of a differentiable function @xmath6 with @xmath75 is the matrix @xmath76 given by @xmath77      a function @xmath6 with @xmath78 is a _ monotone system of polynomials ( msp ) _ , if every component @xmath79 is a polynomial in the variables @xmath69 with coefficients in @xmath80 .",
    "we call an msp @xmath6 _ feasible _ if @xmath81 for some @xmath82",
    ".    every msp @xmath83 is monotone on @xmath44 , i.e. for @xmath84 we have @xmath85 .    since every msp is continuous , kleene s fixed - point theorem ( see e.g. @xcite ) applies .",
    "[ thm : kleene ] every feasible msp @xmath6 has a least fixed point @xmath15 in @xmath44 i.e. , @xmath86 and , in addition , @xmath81 implies @xmath87 .",
    "moreover , the sequence @xmath88 with @xmath89 , and @xmath90 is monotonically increasing with respect to @xmath91 ( i.e. @xmath92 and converges to  @xmath15 .    in the following we call @xmath88 the _ kleene sequence _ of @xmath6 , and drop the subscript whenever @xmath83 is clear from the context .",
    "similarly , we sometimes write @xmath93 instead of @xmath5 .",
    "a variable @xmath94 of an msp @xmath6 is _ productive _ if @xmath95 for some @xmath96 .",
    "an msp is _ clean _ if all its variables are productive .",
    "it is easy to see that @xmath97 implies @xmath98 for all @xmath96 . as for context - free grammars we can determine all productive variables in time linear in the size of  @xmath83 .    in the following",
    ", we always assume that an msp @xmath83 is clean and feasible .",
    "i.e. , whenever we write `` msp '' , we mean `` clean and feasible msp '' , unless explicitly stated otherwise .    for the formal definition of",
    "the _ decomposed newton s method ( dnm ) _",
    "( see also section  [ sec : intro ] ) we need the notion of _ dependence _ between variables .",
    "let @xmath6 be an msp .",
    "@xmath94 _ depends directly _ on @xmath99 , denoted by @xmath100 , if @xmath101 is not the zero - polynomial .",
    "@xmath94 _ depends _ on @xmath99 if @xmath102 , where @xmath103 is the reflexive transitive closure of @xmath104 .",
    "an msp is _ strongly connected _",
    "( short : an _ scmsp _ ) if all its variables depend on each other .",
    "any msp can be decomposed into strongly connected components ( sccs ) , where an scc @xmath105 is a maximal set of variables such that each variable in @xmath105 depends on each other variable in @xmath105 .",
    "the following result for strongly connected msps was proved in @xcite :    [ scmsp : th ] let @xmath6 be an scmsp and define the newton operator @xmath106 as follows @xmath107 we have : ( 1 ) @xmath108 is defined for all @xmath109 ( i.e. , @xmath110 exists ) . moreover ,",
    "@xmath111 exists for all @xmath112 , and so @xmath113 .",
    "( 2 ) the newton sequence @xmath114 with @xmath115 is monotonically increasing , bounded from above by @xmath15 ( i.e. @xmath116 ) , and converges to @xmath15 .",
    "dnm works by substituting the variables of lower sccs by corresponding newton approximations that were obtained earlier .",
    "in this section we obtain a threshold after which dnm is guaranteed to converge linearly with rate 1 .",
    "we showed in @xcite that for worst - case results on the convergence of newton s method it is enough to consider _ quadratic _ msps , i.e. , msps whose monomials have degree at most 2 .",
    "the reason is that any msp ( resp .",
    "scmsp ) @xmath83 can be transformed into a quadratic msp ( resp .",
    "scmsp ) @xmath117 by introducing auxiliary variables .",
    "this transformation is very similar to the transformation of a context - free grammar into chomsky normal form .",
    "the transformation does not accelerate dnm , i.e. , dnm on @xmath83 is at least as fast ( in a formal sense ) as dnm on @xmath117 , and so for a worst - case analysis , it suffices to consider quadratic systems .",
    "we refer the reader to @xcite for details .",
    "we start by defining the notion of `` valid bits '' .",
    "[ def : i - valid - bits ] let @xmath6 be an msp .",
    "a vector @xmath26 has _ @xmath25 valid bits _ of the least fixed point @xmath5 if @xmath27 for every @xmath28 .    in the rest of the section",
    "we prove the following :    [ thm : estimate ] let @xmath6 be a quadratic scmsp .",
    "let @xmath118 be the smallest nonzero coefficient of @xmath83 and let @xmath34 and @xmath119 be the minimal and maximal component of @xmath5 , respectively .",
    "let @xmath120 then @xmath121 has @xmath25 valid bits of @xmath5 for every @xmath29 .    loosely speaking ,",
    "the theorem states that after @xmath4 iterations of newton s method , every subsequent iteration guarantees at least one more valid bit .",
    "it may be objected that @xmath4 depends on the least fixed point @xmath15 , which is precisely what newton s method should compute . however , in the next section we show that there are important classes of msps ( in fact , those which motivated our investigation ) , for which bounds on @xmath34 can be easily obtained .    the following corollary is weaker than theorem [ thm : estimate ] , but less technical in that it avoids a dependence on @xmath119 and @xmath118 .",
    "[ cor : estimate - size ] let @xmath6 be a quadratic scmsp of dimension @xmath32 whose coefficients are given as ratios of @xmath33-bit integers .",
    "let @xmath34 be the minimal component of @xmath15 .",
    "let @xmath122 then @xmath121 has at least @xmath25 valid bits of @xmath5 for every @xmath29 .",
    "corollary  [ cor : estimate - size ] follows from theorem  [ thm : estimate ] by a suitable bound on @xmath119 in terms of @xmath118 and @xmath34 @xcite ( notice that , since @xmath118 is the quotient of two @xmath33-bit integers , we have @xmath123 ) .    in the rest of the section we sketch the proof of theorem  [ thm : estimate ] .",
    "the proof makes crucial use of vectors @xmath124 such that @xmath125 .",
    "we call a vector satisfying these two conditions a _ cone vector of @xmath83 _ or , when @xmath83 is clear from the context , just a cone vector .    in a previous paper",
    "we have shown that if the matrix  @xmath126  is singular , then @xmath83 has a cone vector ( @xcite , lemmata 4 and 8) .",
    "as a first step towards the proof of theorem  [ thm : estimate ] we show the following stronger proposition .",
    "[ prop : ex - d ] any scmsp has a cone vector .    to a cone vector @xmath127 we associate two parameters , namely the maximum and the minimum of the ratios @xmath128 , which we denote by @xmath129 and @xmath130 , respectively .",
    "the second step consists of showing ( proposition [ prop : blubblubblub ] ) that given a cone vector @xmath131 , the threshold @xmath132 satisfies the same property as @xmath4 in theorem  [ thm : estimate ] , i.e. , @xmath133 has @xmath25 valid bits of @xmath5 for every @xmath29 .",
    "this follows rather easily from the following fundamental property of cone vectors : a cone vector leads to an upper bound on the error of newton s method .",
    "[ lem : blubblub ] let @xmath131 be a cone vector of an msp @xmath83 and let @xmath134 . then @xmath135    _ proof idea .",
    "_ consider the ray @xmath136 starting in @xmath5 and headed in the direction @xmath137 ( the dashed line in the picture below ) .",
    "it is easy to see that @xmath138 is the intersection of @xmath139 with an axis which is located farthest from @xmath15 .",
    "one can then prove @xmath140 , where @xmath141 is the point of the ray equidistant from @xmath138 and @xmath15 . by repeated application of this argument one obtains @xmath142 for all @xmath96 .",
    "the following picture shows the newton iterates @xmath143 for @xmath144 ( shape : @xmath145 ) and the corresponding points @xmath146 ( shape : @xmath147 ) located on the ray @xmath139 .",
    "notice that @xmath148 .",
    "now we easily obtain :    [ prop : blubblubblub ] let @xmath6 be an scmsp and let @xmath131 be a cone vector of @xmath83 .",
    "let @xmath149 , where @xmath150 and @xmath151",
    ". then @xmath152 has at least @xmath25 valid bits of @xmath5 for every @xmath153 .",
    "we now proceed to the third and final step .",
    "we have the problem that @xmath154 depends on the cone vector @xmath131 , about which we only know that it exists ( proposition  [ prop : ex - d ] ) .",
    "we now sketch how to obtain the threshold @xmath4 claimed in theorem  [ thm : estimate ] , which is independent of any cone vectors .",
    "consider proposition  [ prop : blubblubblub ] and let @xmath155 and @xmath156 .",
    "we have @xmath157 .",
    "the idea is to bound @xmath154 in terms of @xmath118 .",
    "we show that if @xmath154 is very large , then there must be variables @xmath158 such that @xmath159 depends on @xmath73 only via a monomial that has a very small coefficient , which implies that @xmath118 is very small .",
    "as mentioned in the introduction , several problems concerning stochastic models can be reduced to problems about the least solution @xmath5 of an mspe @xmath83 . in these cases",
    ", @xmath5 is a vector of probabilities , and so @xmath160 .",
    "moreover , we can obtain information on @xmath34 , which leads to bounds on the threshold @xmath4 .",
    "our study of msps was initially motivated by the verification of probabilistic pushdown automata .",
    "a _ probabilistic pushdown automaton ( ppda ) _ is a tuple @xmath161 where @xmath162 is a finite set of _ control states _ , @xmath163 is a finite _ stack alphabet _ , @xmath164 is a finite _ transition relation _ ( we write @xmath165 instead of @xmath166 ) , and @xmath167 is a function which to each transition @xmath168 assigns its probability @xmath169 $ ] so that for all @xmath170 and @xmath171 we have @xmath172 .",
    "we write @xmath173 instead of @xmath174 .",
    "a _ configuration _ of @xmath175 is a pair @xmath176 , where @xmath177 is a control state and @xmath178 is a _",
    "stack content_. a probabilistic pushdown automaton @xmath175 naturally induces a possibly infinite markov chain with the configurations as states and transitions given by : @xmath179 for every @xmath180 iff @xmath173 .",
    "we assume w.l.o.g . that if @xmath173 is a transition then @xmath181 .",
    "ppdas and the equivalent model of recursive markov chains have been very thoroughly studied @xcite .",
    "these papers have shown that the key to the analysis of ppdas are the _ termination probabilities _",
    "@xmath182 , where @xmath183 and @xmath177 are states , and @xmath159 is a stack letter , defined as follows ( see e.g. @xcite for a more formal definition ) : @xmath182 is the probability that , starting at the configuration @xmath184 , the ppda eventually reaches the configuration @xmath185 ( empty stack ) .",
    "it is not difficult to show that the vector of termination probabilities is the least fixed point of the mspe containing the equation @xmath186    for each triple @xmath187 . call this quadratic mspe the _ termination mspe _ of the ppda ( we assume that termination mspes are clean , and it is easy to see that they are always feasible ) .",
    "we immediately have that if @xmath3 is a termination msp , then @xmath188 .",
    "we also obtain a lower bound on @xmath189 :    [ lem : lower - bound - mu ] let @xmath3 be a termination mspe with @xmath32 variables",
    ". then @xmath190 .",
    "together with theorem  [ thm : estimate ] we get the following exponential bound for @xmath4 .",
    "[ prop : lower - bound - exp ] let @xmath83 be a strongly connected termination msp with @xmath32 variables and whose coefficients are expressed as ratios of @xmath33-bit numbers",
    ". then @xmath35 .",
    "we conjecture that there is a lower bound on @xmath4 which is exponential in @xmath32 for the following reason . we know",
    "a family @xmath191 of strongly connected msps with @xmath32 variables and irrational coefficients such that @xmath192 for all @xmath32 and @xmath193 is double - exponentially small in @xmath32 .",
    "experiments suggest that @xmath194 iterations are needed for the first bit of @xmath195 , but we do not have a proof .      a ppda is _ strict _",
    "if for all @xmath196 and all @xmath197 the transition relation contains a pop - rule @xmath198 for some @xmath199 . essentially , strict ppdas model programs in which every procedure has at least one terminating execution that does not call any other procedure .",
    "the termination msp of a strict ppda is of the form @xmath200 for @xmath201 .",
    "so we have @xmath202 , which implies @xmath203 . together with theorem  [ thm :",
    "estimate ] we get :    [ prop : lower - bound - backbutton ] let @xmath83 be a strongly connected termination msp with @xmath32 variables and whose coefficients are expressed as ratios of @xmath33-bit numbers . if @xmath83 is derived from a strict ppda , then @xmath36 .",
    "since in most applications @xmath33 is small , we obtain an excellent convergence threshold .    in @xcite fagin et al .",
    "introduce a special class of strict ppdas called _ back - button processes _ : in a back - button process there is only one control state @xmath183 , and any rule is of the form @xmath204 or @xmath205 .",
    "so the stack corresponds to a path through a finite graph with @xmath163 as set of nodes and edges @xmath206 for @xmath205 .    in @xcite",
    "back - button processes are used to model the behaviour of web - surfers : @xmath163 is the set of web - pages , @xmath207 is the probability that a web - surfer uses a link from page @xmath57 to page @xmath208 , and @xmath209 is the probability that the surfer pushes the `` back''-button of the web - browser while visiting @xmath57 .",
    "thus , the termination probability @xmath210 $ ] is simply the probability that , if @xmath57 is on top of the stack , @xmath57 is eventually popped from the stack .",
    "the termination probabilities are the least solution of the mspe consisting of the equations @xmath211      as an example of application of theorem  [ thm : estimate ] consider the following scmspe @xmath3 .",
    "@xmath212 the least solution of the system gives the revocation probabilities of a back - button process with three web - pages .",
    "for instance , if the surfer is at page 2 it can choose between following links to pages 1 and 3 with probabilities 0.3 and 0.4 , respectively , or pressing the back button with probability 0.3 .",
    "we wish to know if any of the revocation probabilities is equal to 1 . performing @xmath213 newton steps ( e.g.  with maple ) yields an approximation @xmath214 to the termination probabilities with @xmath215 we have @xmath216 .",
    "in addition , since newton s method converges to @xmath5 from below , we know @xmath217 . moreover , @xmath218 , as @xmath219 and so @xmath220 . hence @xmath221 .",
    "theorem  [ thm : estimate ] then implies that @xmath214 has ( at least ) 8 valid bits of @xmath5 . as @xmath220 ,",
    "the absolute errors are bounded by the relative errors , and since @xmath222 we know : @xmath223 so theorem  [ thm : estimate ] gives a proof that all 3 revocation probabilities are strictly smaller than  @xmath58 .",
    "given a strongly connected msp @xmath83 , theorem  [ thm : estimate ] states that , if we have computed @xmath4 preparatory iterations of newton s method , then after @xmath25 additional iterations we can be sure to have computed at least @xmath25 bits of @xmath5 .",
    "we call this linear convergence with rate @xmath58 .",
    "now we show that dnm , which handles non - strongly - connected msps , converges linearly as well .",
    "we also give an explicit convergence rate .",
    "let @xmath6 be any quadratic msp ( again we assume _ quadratic _ msps throughout this section ) , and let @xmath224 denote the height of the dag of strongly connected components ( sccs ) .",
    "the convergence rate of dnm crucially depends on this height : in the worst case one needs asymptotically @xmath225 iterations in each component per bit , assuming one performs the same number of iterations in each component .    to get a sharper result",
    ", we suggest to perform a different number of iterations in each scc , depending on its _",
    "depth_. the depth of an scc @xmath105 is the length of the longest path in the dag of sccs from @xmath105 to a top scc .",
    "in addition , we use the following notation .    for a depth @xmath226 ,",
    "we denote by @xmath227 the set of sccs of depth @xmath226 .",
    "furthermore we define @xmath228 : = @xmath229 and @xmath230 : = @xmath231 and , analogously , @xmath232 .",
    "we will sometimes write @xmath233 for @xmath234 and @xmath235 for @xmath236 and @xmath237 for @xmath238 , where @xmath16 is any vector .",
    "figure  [ fig : decompnewton ] shows the decomposed newton s method ( dnm ) for computing an approximation @xmath26 for @xmath5 , where @xmath6 is any quadratic msp .",
    "the authors of @xcite recommend to run newton s method in each scc @xmath105 until `` approximate solutions for @xmath105 are considered ` good enough ' '' . here",
    "we suggest to run newton s method in each scc @xmath105 for a number of steps that depends ( exponentially ) on the depth of @xmath105 and ( linearly ) on a parameter @xmath239 that controls the number of iterations ( see figure  [ fig : decompnewton ] ) .",
    "[ ht ]    recall that @xmath224 was defined as the height of the dag of sccs .",
    "similarly we define the width @xmath240 to be @xmath241 .",
    "notice that @xmath83 has at most @xmath242 sccs .",
    "we have the following bound on the number of iterations run by dnm .",
    "[ prop : dnm - how - many - iterations ] the function @xmath243 of fig .",
    "[ fig : decompnewton ] runs at most @xmath244 iterations of newton s method .",
    "we will now analyze the convergence behavior of dnm asymptotically ( for large @xmath239 ) .",
    "let @xmath245 denote the error in @xmath105 when running dnm with parameter @xmath239 , i.e. , @xmath245 : = @xmath246 .",
    "observe that the error @xmath247 can be understood as the sum of two errors : @xmath248 where @xmath249 : = @xmath250\\big)}$ ] , i.e. , @xmath249 is the least fixed point of @xmath251 after the approximations from the lower sccs have been applied .",
    "so , @xmath247 consists of the _ propagation error _ @xmath252 and the newly inflicted _ approximation error _ @xmath253 .",
    "the following lemma , technically non - trivial to prove , gives a bound on the propagation error .",
    "[ lem : propagation - error ] there is a constant @xmath254 such that @xmath255 holds for all @xmath256 with @xmath257 , where @xmath258\\big)}$ ] .",
    "intuitively , lemma  [ lem : propagation - error ] states that if @xmath256 has @xmath24 valid bits of @xmath259 , then @xmath260 has roughly @xmath261 valid bits of @xmath262 . in other words ,",
    "( at most ) one half of the valid bits are lost on each level of the dag due to the propagation error .",
    "the following theorem assures that after combining the propagation error and the approximation error , dnm still converges linearly .",
    "[ thm : dnm - error ] let @xmath83 be a quadratic msp .",
    "let @xmath263 denote the result of calling @xmath264 ( see figure  [ fig : decompnewton ] ) .",
    "then there is a @xmath265 such that @xmath266 has at least @xmath25 valid bits of @xmath5 for every @xmath267 .",
    "we conclude that increasing @xmath25 by one gives us asymptotically at least one additional bit in each component and , by proposition  [ prop : dnm - how - many - iterations ] , costs @xmath268 additional newton iterations . in the technical report",
    "@xcite we give an example that shows that the bound above is essentially optimal in the sense that an exponential ( in @xmath224 ) number of iterations is in general needed to obtain an additional bit .",
    "etessami and yannakakis @xcite introduced dnm because they could show that the matrix inverses used by newton s method exist if newton s method is run on each scc separately ( see theorem  [ scmsp : th ] ) .",
    "it may be surprising that the matrix inverses used by newton s method exist even if the msp is _ not _ decomposed .",
    "more precisely one can show the following theorem , see  @xcite .",
    "[ thm : well - defined ] let @xmath6 be any msp , not necessarily strongly connected . let the newton operator @xmath106 be defined as before : @xmath269 then the newton sequence @xmath114 with @xmath115 is well - defined ( i.e. , the matrix inverses exist ) , monotonically increasing , bounded from above by @xmath15 ( i.e. @xmath270 ) , and converges to @xmath15 .    by exploiting theorem  [ thm :",
    "dnm - error ] and theorem  [ thm : well - defined ] one can show the following theorem which addresses the convergence _ speed _ of newton s method in general .",
    "[ thm : conv - speed - general ] let @xmath83 be any quadratic msp . then the newton sequence @xmath271 is well - defined and converges linearly to @xmath5 .",
    "more precisely , there is a @xmath265 such that @xmath272 has at least @xmath25 valid bits of @xmath5 for every @xmath267 .",
    "again , the @xmath273 factor can not be avoided in general as shown by an example in @xcite .",
    "we have proved a threshold @xmath4 for strongly connected mspes .",
    "after @xmath30 newton iterations we have @xmath25 bits of accuracy .",
    "the threshold @xmath4 depends on the representation size of @xmath83 and on the least solution @xmath15 .",
    "although this latter dependence might seem to be a problem , lower and upper bounds on @xmath15 can be easily derived for stochastic models ( probabilistic programs with procedures , stochastic context - free grammars and back - button processes ) .",
    "in particular , this allows us to show that @xmath4 depends linearly on the representation size for back - button processes .",
    "we have also shown by means of an example that the threshold @xmath4 improves when the number of iterations increases .",
    "in @xcite we left the problem whether dnm converges linearly for non - strongly - connected mspes open .",
    "we have proven that this is the case , although the convergence rate is poorer : if @xmath9 and @xmath8 are the height and width of the graph of sccs of @xmath83 , then there is a threshold @xmath274 such that @xmath275 iterations of dnm compute at least @xmath25 valid bits of @xmath5 , where the exponential factor can not be avoided in general .",
    "finally , we have shown that the jacobian of the whole mspe is guaranteed to exist , whether the mspe is strongly connected or not .",
    "the authors wish to thank kousha etessami and anonymous referees for very valuable comments .",
    "t.  brzdil , a.  kuera , and o.  straovsk . on the decidability of temporal properties of probabilistic pushdown automata . in _ proceedings of stacs2005",
    "_ , volume 3404 of _ lncs _ , pages 145157 .",
    "springer , 2005 .",
    "j.  esparza , a.  kuera , and r.  mayr . quantitative analysis of probabilistic pushdown automata : expectations and variances . in _ proceedings of lics 2005",
    "_ , pages 117126 .",
    "ieee computer society press , 2005 .",
    "k.  etessami and m.  yannakakis .",
    "recursive markov chains , stochastic grammars , and monotone systems of nonlinear equations , 2006 .",
    "draft journal submission , ` http://homepages.inf.ed.ac.uk/kousha/bib_index.html ` ."
  ],
  "abstract_text": [
    "<S> monotone systems of polynomial equations ( mspes ) are systems of fixed - point equations @xmath0 @xmath1 where each @xmath2 is a polynomial with positive real coefficients . </S>",
    "<S> the question of computing the least non - negative solution of a given mspe @xmath3 arises naturally in the analysis of stochastic models such as stochastic context - free grammars , probabilistic pushdown automata , and back - button processes . </S>",
    "<S> etessami and yannakakis have recently adapted newton s iterative method to mspes . in a previous paper </S>",
    "<S> we have proved the existence of a threshold @xmath4 for strongly connected mspes , such that after @xmath4 iterations of newton s method each new iteration computes at least 1 new bit of the solution . however , the proof was purely existential . </S>",
    "<S> in this paper we give an upper bound for @xmath4 as a function of the minimal component of the least fixed - point @xmath5 of @xmath6 . using this result </S>",
    "<S> we show that @xmath4 is at most single exponential resp .  </S>",
    "<S> linear for strongly connected mspes derived from probabilistic pushdown automata resp . from back - button processes . </S>",
    "<S> further , we prove the existence of a threshold for arbitrary mspes after which each new iteration computes at least @xmath7 new bits of the solution , where @xmath8 and @xmath9 are the width and height of the dag of strongly connected components .    </S>",
    "<S> javier esparza    stefan kiefer    michael luttenberger </S>"
  ]
}
{
  "article_text": [
    "image decomposition , variational calculus , inverse problems , image inpainting , image denoising , cartoon image , texture image , noise , residual image , feature extraction .",
    "image enhancement and image restoration are two superordinate concepts in image processing which encompass a plethora of methods to solve a multitude of important real - world problems @xcite .",
    "image enhancement has the goal of improving an input image for a specific application , e.g. in areas such as medical image processing , biometric recognition , computer vision , optical character recognition , texture recognition or machine inspection of surfaces @xcite .",
    "methods for image enhancement can be grouped by the domain in which they perform their operations : images are processed in the spatial domain or fourier domain , or modified e.g. in the wavelet or curvelet domain @xcite .",
    "types of enhancement methods include contextual filtering , e.g. for fingerprint image enhancement  @xcite , contrast enhancement , e.g. by histogram equalization @xcite , and image superresolution @xcite .",
    "image restoration is connected to the notion that a given input image suffers from degradation and the goal is restore an ideal version of it .",
    "degradations are caused by various types of noise , missing pixels or blurring and their countermeasures are denoising , inpainting and deblurring . in general",
    ", one has to solve a linear or nonlinear inverse problem to reconstruct the ideal image from its given degraded version .",
    "denoising aims to remove noise from an image and denoising methods include total variation minimization based approaches @xcite , the application of nonlocal means ( nl - means ) @xcite or other dictionaries of image patches for smoothing , and adaptive thresholding in the wavelet domain @xcite .",
    "inpainting @xcite is the filling - in of missing pixels from the available information in the image and it is applied for scratch removal from scanned photographs , for occlusion filling , for removing objects or persons from images ( in image forgery @xcite or for special effects ) , for filling - in of pixels which were lost during the transmission of an image or left out on purpose for image compression @xcite .",
    "deblurring @xcite addresses the removal of blurring artifacts and is not in the focus of this paper .",
    "rudin , osher , and fatemi @xcite pioneered two - part image decomposition by total variation ( tv ) regularization for denoising .",
    "shen and chan @xcite applied tv regularization to image inpainting , called tv inpainting model .",
    "and they also suggested image inpainting by curvature - driven diffusions ( cdd ) , see @xcite .",
    "starck et .",
    "@xcite defined a model for two - part decomposition based on dictionary approach .",
    "then , elad _ et al . _",
    "@xcite applied this decomposition idea for image inpainting by introducing the indicator function in the @xmath1 norm of the residual , see eq . ( 6 ) in @xcite .",
    "esedoglu and shen @xcite introduced two inpainting models based on the mumford - shah model @xcite and its higher order correction - the mumford - shah - euler image model .",
    "they also presented numerical computation based on the @xmath2-convergence approximations @xcite .",
    "@xcite proposed image inpainting based on bounded variation and elastica models for non - textured images .",
    "image inpainting can be an easy or difficult problem depending on the amount of missing pixels @xcite , the complexity of the image content and whether prior knowledge about the image content is available .",
    "methods have been proposed which perform only cartoon inpainting ( also referred to as structure inpainting ) @xcite or only texture inpainting @xcite .",
    "images which consist of both cartoon ( structure ) and texture components are more challenging to inpaint .",
    "@xcite , elad _ et al .",
    "_ @xcite and cai _ et al .",
    "_ @xcite have proposed methods for inpainting which can handle images with both cartoon ( structure ) and texture components .    in this paper , we tackle an even more challenging problem .",
    "consider an input image  @xmath3 which has the following three properties :    *  a large percentage of pixels in @xmath3 are missing and shall be inpainted . *  the known pixels in @xmath3",
    "are corrupted by noise .",
    "*  @xmath3 contains both cartoon and texture elements .",
    "the co - occurrence of noise and missing pixels in an image with cartoon and texture components increases the difficulty of both the inpainting problem and the denoising problem .",
    "a multitude of methods has been proposed for inpainting and denoising .",
    "existing inpainting methods in the literature typically assume that the non - missing pixels in a given image contain only a small amount of noise or are noise - free , and existing methods for denoising typically assume all pixels of the noisy image are known .",
    "the proposed method for solving this challenging problem is inspired by the works of efros and leung  @xcite , bertalmio _ et al . _",
    "@xcite , vese and osher @xcite , aujol and chambolle @xcite , buades _",
    "_ @xcite and elad _ et al . _",
    "@xcite , and it is based on the directional global three - part decomposition ( dg3pd ) @xcite .",
    "the dg3pd method decomposes an image into three parts : a cartoon image , a texture image and a residual image .",
    "advantages of the dg3pd model lie in the properties which are enforced on the cartoon and texture images .",
    "the geometric objects in the cartoon image have a very smooth surface and sharp edges .",
    "the texture image yields oscillating patterns on a defined scale which is both smooth and sparse .",
    "recently , the texture images have been applied as a very useful feature for fingerprint segmentation @xcite .",
    "[ fig : overview ]        we address the challenging task of simultaneous inpainting and denoising in the following way : the advanced dg3pd model introduced in the next section decomposes a noisy input image @xmath3 ( with missing regions @xmath4 ) into cartoon @xmath5 , texture @xmath6 and residual @xmath7 components . at the same time , the missing regions @xmath4 of the cartoon component @xmath5 are interpolated and the available regions of @xmath5 are denoised by the advantage of multi - directional bounded variation .",
    "this effect benefits from the help of the indicator function in the measurement of the residual , i.e. @xmath8 in ( 1 ) . however , texture @xmath6 is not interpolated due to the `` cancelling '' effect of this supremum norm for residual in unknown regions .",
    "therefore , the texture component @xmath6 is inpainted and denoised by a dictionary based approach instead . the dg3pd decomposition drives noise into the residual component @xmath7 which is discarded .",
    "the reconstruction of the ideal version of @xmath3 is obtained by summation of the inpainted and denoised cartoon and texture components ( see figure [ fig : overview ] for an visual overview ) .",
    "moreover , we uncover the link between the calculus of variations @xcite and filtering in the fourier domain @xcite by analyzing the solution of the convex minimization in eq .",
    "( [ eq : dg3pd_inpainting ] ) , i.e. roughly speaking the solution of the dg3pd inpainting model which can be understood as the response of the lowpass filter @xmath9 , highpass filter @xmath10 and bandpass filter @xmath11 and the unity condition is satisfied , i.e. @xmath12 where @xmath13 ^ 2 $ ] is a coordinator in the fourier domain .",
    "we observe that this decomposition is similar to wavelet or pyramidal decomposition scheme @xcite .",
    "however , the basis elements obtaining the decomposition , i.e. scaling function and frame ( or wavelet - like ) function , are constructed by discrete differential operators ( due to the discrete setting in minimizing ( 1 ) ) which are referred to as wavelet - like operators in @xcite . in particular ,    * the scaling function and wavelet - like function for the cartoon @xmath5 are from the effect of the multi - directional tv norm , * the scaling function and wavelet - like function to extract the texture @xmath6 are reconstructed by the effect of the multi - directional g - norm , * the effect of @xmath0 norm @xmath8 is to remove the remaining signal in the known regions of the residual @xmath7 ( due to the duality property of @xmath0 ) .",
    "we also describe flowcharts to show that the method of variational calculus ( or the dg3pd inpainting ) is a closed loop pyramidal decomposition which is different from an open loop one , e.g. wavelet @xcite , curvelet @xcite , see figure [ fig : variationpyramid ] . by numerics , we observe that the closed loop filter design by the calculus of variation will result in lowpass , highpass and bandpass filters which are `` unique '' for different images , see figure [ fig : fourier : uniquefilter ] .",
    "we also analyze the dg3pd inpainting model from a view of the bayesian framework and then define a discrete innovation model for this inverse problem .",
    "the setup of paper is as follows . in section [ sec : inpaintingdg3pd ]",
    ", we describe the dg3pd model for image inpainting and denoising . in section [ sec : solutiondg3pd ] , we show how to compute the solution of the convex minimization in the dg3pd inpainting problem by augmented lagrangian method . in section [ sec :",
    "textureinpainting ] , we describe the proposed method for texture inpainting and denoising . in section [ sec : comparisonpriorart ] , we compare the proposed method to existing ones ( tvl2 inpainting , telea @xcite and navier stokes @xcite ) . in section [ sec :",
    "bayesiandecomposition ] , we consider our inverse problem from a statistical point of view , i.e. the bayesian framework , to describe how to select priors for cartoon @xmath5 and texture @xmath6 .",
    "we analyze the relation between the calculus of variations and the traditional pyramid decomposition scheme , e.g. gaussian pyramid , in section [ sec : variationalfourierconnection ] .",
    "we conclude the study with section [ sec : conclusion ] . for more detailed notation and mathematical preliminaries",
    ", we refer the reader to @xcite .",
    "we define a method for a restoration of the original noisy / non - noisy image @xmath3 with a set of known missing regions @xmath4 .",
    "the proposed model is a generalized version of dg3pd @xcite for the inpainting and denoising problem .",
    "this modification for our dg3pd - inpainting is inspired by @xcite .",
    "in particular , the discrete image @xmath3 ( size @xmath14 ) with missing regions @xmath4 is simultaneously decomposed into cartoon @xmath5 , texture @xmath6 and noise @xmath7 , especially , cartoon @xmath5 is interpolated on the missing regions due to the indicator function @xmath15 in the modified model .",
    "a set of missing regions @xmath4 on a bounded domain @xmath16 is defined by the indicator function @xmath15 whose complement is @xmath17 = \\begin{cases } 1 \\ , , & { { \\boldsymbol k}}\\in \\omega \\backslash d   \\\\   0 \\ , , & { { \\boldsymbol k}}\\in d \\end{cases}.\\ ] ]    instead of putting @xmath18 on @xmath1 norm of the residual ( see eq .",
    "( 4 ) and ( 6 ) in @xcite ) , we introduce @xmath18 for the residual in the dg3pd model with the point - wise multiplication operator @xmath19 , i.e. @xmath20 .",
    "we propose the dg3pd - inpainting as follows @xmath21 }                   _ { = \\text{div}^+_s { { \\mathbf g } } } \\,,~   { { \\mathbf f}}= { { \\mathbf u}}+ { { \\mathbf v}}+ { { \\boldsymbol \\epsilon}}\\bigg\\}.\\end{aligned}\\ ] ]    note that if there are no missing regions , i.e. @xmath22 = 1 \\ , , \\forall { { \\boldsymbol k}}\\in \\omega$ ] , the minimization problem ( [ eq : dg3pd_inpainting ] ) becomes the dg3pd model @xcite .",
    "next , we discuss how to solve the dg3pd - inpainting model ( [ eq : dg3pd_inpainting ] ) .",
    "in this section we present a numerical algorithm for obtaining the solution of the dg3pd - inpainting model stated in ( [ eq : dg3pd_inpainting ] ) . to simplify the calculation , we introduce three new variables : @xmath23 and denote @xmath24 as the indicator function on the feasible convex set @xmath25 of ( [ eq : dg3pd_inpainting ] ) , i.e. @xmath26 due to the constrained minimization problem in ( [ eq : dg3pd_inpainting ] ) , the augmented lagrangian method is applied to turn it into an unconstrained one as @xmath27_{l=0}^{l-1 } \\",
    ", ,   \\big [ { { \\mathbf w}}_s \\big]_{s=0}^{s-1 } \\ , , \\big [ { { \\mathbf g}}_s \\big]_{s=0}^{s-1 } \\big ) \\in x^{l+2s+4 } }   \\mathcal l \\big ( \\cdot \\ ; ; \\big [ \\boldsymbol{\\lambda}_{\\boldsymbol{1 } l } \\big]_{l=0}^{l-1 } \\ , ,   \\big [ \\boldsymbol{\\lambda}_{\\boldsymbol{2}s } \\big]_{s=0}^{s-1 } \\ , , \\boldsymbol{\\lambda_3 } \\ , , \\boldsymbol{\\lambda_4 } \\ , , \\boldsymbol{\\lambda_5 } \\big ) \\,,\\ ] ] where the lagrange function is @xmath28 + \\frac{\\boldsymbol{\\lambda_3}}{\\beta_3 } } ^2_{\\ell_2 }   \\\\ &   + \\frac{\\beta_4}{2 } \\norm { { { \\mathbf f}}- { { \\mathbf u}}- { { \\mathbf v}}- { { \\boldsymbol \\epsilon}}+ \\frac{\\boldsymbol{\\lambda_4}}{\\beta_4 } } _ { \\ell_2}^2   + \\frac{\\beta_5}{2 } \\norm { { { \\mathbf e}}- \\chi_d^c \\cdot^\\times { { \\boldsymbol \\epsilon}}+ \\frac{\\boldsymbol{\\lambda_5}}{\\beta_5 } } _ { \\ell_2}^2   \\bigg\\ } .\\end{aligned}\\ ] ] similar to @xcite , the alternating directional method of multipliers is applied to solve the unconstrained minimization problem ( [ eq : dg3pd_inpainting_alm ] ) . its minimizer is numerically computed through iterations @xmath29 @xmath30_{l=0}^{l-1 } \\ , ,   \\big [ { { \\mathbf w}}_s^{(t ) } \\big]_{s=0}^{s-1 } \\ , , \\big [ { { \\mathbf g}}_s^{(t ) } \\big]_{s=0}^{s-1 } \\big ) }                      \\notag   ~=~   \\\\   & { \\mathop{\\rm argmin}}~ \\mathcal l \\big ( { { \\mathbf u}}\\ , , { { \\mathbf v}}\\ , , { { \\boldsymbol \\epsilon}}\\ , , { { \\mathbf e}}\\ , , \\big [ { { \\mathbf r}}_l \\big]_{l=0}^{l-1 } \\ , ,",
    "\\big [ { { \\mathbf w}}_s \\big]_{s=0}^{s-1 } \\ , ,",
    "\\big [ { { \\mathbf g}}_s \\big]_{s=0}^{s-1 } \\;;~ \\big [ \\boldsymbol{\\lambda}_{\\boldsymbol{1 } l}^{(t-1 ) } \\big]_{l=0}^{l-1 } \\ , ,   \\big [ \\boldsymbol{\\lambda}_{\\boldsymbol{2}s}^{(t-1 ) } \\big]_{s=0}^{s-1 } \\ , , \\boldsymbol{\\lambda}_{\\mathbf 3}^{(t-1 ) } \\ , ,    \\boldsymbol{\\lambda}_{\\mathbf 4}^{(t-1 ) } \\ , , \\boldsymbol{\\lambda}_{\\mathbf 5}^{(t-1 ) } \\big)\\end{aligned}\\ ] ] and the lagrange multipliers are updated after every step @xmath31 . we also initialize @xmath32_{l=0}^{l-1 }   = \\big [ { { \\mathbf w}}_s^{(0 ) } \\big]_{s=0}^{s-1 } = \\big [ { { \\mathbf g}}_s^{(0 ) } \\big]_{s=0}^{s-1 }   = \\big[\\boldsymbol{\\lambda}_{\\mathbf{1}l}^{(0)}\\big]_{l=0}^{l-1 } = \\big[\\boldsymbol{\\lambda}_{\\mathbf{2}a}^{(0)}\\big]_{a=0}^{s-1 }   = \\boldsymbol{\\lambda}_{\\mathbf 3}^{(0 ) } = \\boldsymbol{\\lambda}_{\\mathbf 4}^{(0 ) } = \\boldsymbol{\\lambda}_{\\mathbf 5}^{(0 ) } = \\boldsymbol 0 $ ] , where @xmath33 is a @xmath14 zero matrix .    in each iteration",
    ", we first solve the seven subproblems in the listed order : `` @xmath34_{l=0}^{l-1}$]-problem '' , `` @xmath35_{s=0}^{s-1}$]-problem '' , `` @xmath36_{s=0}^{s-1}$]-problem '' , `` @xmath6-problem '' , `` @xmath5-problem '' , `` @xmath37-problem '' , `` @xmath7-problem '' , and then we update the five lagrange multipliers , namely @xmath38_{l=0}^{l-1 } \\ , , \\big[\\boldsymbol{\\lambda}_{\\mathbf{2a}}\\big]_{a=0}^{s-1 }   \\ , , \\boldsymbol{\\lambda_3}\\ , ,   \\boldsymbol{\\lambda_4 } \\ , , \\boldsymbol{\\lambda_5}$ ] , see algorithm 1 .    in this section",
    ", we only present the solution of the `` @xmath37-problem '' and `` @xmath7-problem '' as well as the updated lagrange multiplier @xmath39 .",
    "we refer the readers to @xcite for the detailed explanation of the other subproblems and the other lagrange multipliers .",
    "* the @xmath37-problem : * fix @xmath5 , @xmath6 , @xmath7 , @xmath34_{l=0}^{l-1}$ ] , @xmath35_{s=0}^{s-1}$ ] , @xmath36_{s=0}^{s-1}$ ] and @xmath40 the solution of ( [ eq : sub : e ] ) is defined as a projection operator on a convex set @xmath25 , i.e. @xmath41 : @xmath42    * the @xmath7-problem : * fix @xmath5 , @xmath6 , @xmath37 , @xmath34_{l=0}^{l-1}$ ] , @xmath35_{s=0}^{s-1}$ ] , @xmath36_{s=0}^{s-1}$ ] and @xmath43 the solution of ( [ eq : sub : epsilon ] ) with the point - wise division operator @xmath44 is @xmath45   /_. \\big [ \\beta_4 \\mathbf{1_{mn } } + \\beta_5 \\chi^c_d \\big]\\ ] ] and @xmath46 is a @xmath14 matrix of ones .    * updated lagrange multiplier @xmath47 : * @xmath48    * choice of parameters *    due to an adaptability to specific images and a balance between the smoothing terms and updated terms for the solution of the above subproblems , the selection of parameters @xmath49 is described in @xcite and @xmath50 is defined as @xmath51     \\sim \\mathcal n(0 \\ , , \\sigma^2 = 100 ^ 2 ) \\ , , { { \\boldsymbol k}}\\in \\omega$ ] .",
    ", scaledwidth=100.0% ]    the term @xmath52 in ( [ eq : dg3pd_inpainting ] ) serves as a good measurement for the amount of noise due to the substraction in eq .",
    "( [ eq : sub : e : solution ] ) , see @xcite ( thanks to the multiscale and multidirection properties of the curvelet transform and its duality ) .",
    "however , due to the indicator function @xmath18 in the noise measurement @xmath52 , the interpolated texture by dg3pd inpainting is almost in the residual , see figure [ fig : dg3pdinpainting : texturedg3pd ] ( a ) , and its smoothed version by curvelet shrinkage ( b ) . because of the substraction operator in eq .",
    "( [ eq : sub : e : solution ] ) , these interpolated textures are canceled out in @xmath37 , see ( c ) .",
    "figure [ fig : dg3pdinpainting : texturedg3pd ] ( d ) illustrates the estimated texture before the substraction in eq .",
    "( [ eq : sub : e : solution ] ) as @xmath53 where roi is the region of interest obtained by the morphological operator for texture image in @xcite .    .,scaledwidth=100.0% ]    in order to analyze the effects of the proposed model in terms of interpolation ( for @xmath5 ) and decomposition , we consider a 1-dimensional signal ( which is extracted along the red line in figure [ fig : dg3pd : analysis ] ( a)-(d ) ) . by the dg3pd inpainting ,",
    "the mean values of the cartoon @xmath5 in ( e ) `` nearly '' remain unchanged .",
    "the homogeneous regions have `` sharp '' edges and a `` stair - case '' effect does not occur ( thanks to the directional tv ) .",
    "texture @xmath6 in ( f ) is extracted in areas which contain repeated pattern in ( b ) .",
    "moreover , small scales objects , e.g. noise , are removed from @xmath6",
    ".    however , the term @xmath52 causes a `` canceling effect '' which removes the interpolated texture in unknown area during the decomposition process .",
    "therefore , texture inpainting and denoised is tackled separately as described in the next section by a generalized version of the dictionary learning for texture synthesis @xcite .    ,",
    "see ( b ) .",
    "thanks to the directional tv norm , the dg3pd inpainting produces `` sharp '' edges without `` stair - case '' effect in a cartoon @xmath5 ( e ) and the mean values of @xmath5 `` nearly '' remains . due to noise and the shrinkage soft - thresholding operator by @xmath54 in ( [ eq : dg3pd_inpainting ] ) , texture @xmath6 is reconstructed with a `` sharp '' transition on areas where texture presents in the original signal ( c ) .",
    "however , due to a `` heavy '' noise @xmath7 on the known domains in ( e ) , the dg3pd fails to reconstruct a `` full '' texture . in general , this is a challenging problem to recover an oscillating ( or weak ) signal corrupted by heavy noise .",
    "( h ) is a reconstructed image ( without step of inpainting texture ) and ( i ) is a quantized signal , i.e. truncate to [ 0 , 255 ] and quantize . ,",
    "scaledwidth=100.0% ]    [ alg : dg3pd ]    [ alg : dg3pd_part2 ]    @xmath55   ~+~ \\beta_3 \\big [ \\sin\\big ( \\frac{\\pi a}{s } \\big ) ( z_1^{-1 } -1 ) + \\cos\\big ( \\frac{\\pi a}{s } \\big ) ( z_2^{-1}-1 ) \\big ] \\times   \\\\ &   \\bigg [ v({{\\boldsymbol z } } ) - \\sum_{s=[0\\,,s-1 ] \\backslash \\{a\\ } }   \\big [ \\cos\\big ( \\frac{\\pi s}{s } \\big ) ( z_2 - 1 )   + \\sin\\big ( \\frac{\\pi s}{s } \\big ) ( z_1 - 1 ) \\big ] g_s({{\\boldsymbol z } } )   + \\frac{\\lambda_3({{\\boldsymbol z}})}{\\beta_3 } \\bigg ] \\ , ,   \\\\   & \\mathcal x({{\\boldsymbol z } } ) =   \\beta_4 \\mathbf{1_{mn } } + \\beta_1 \\sum_{l=0}^{l-1 } \\abs { \\sin\\big ( \\frac{\\pi l}{l } \\big ) ( z_1 - 1 ) + \\cos\\big ( \\frac{\\pi l}{l } \\big ) ( z_2 - 1 ) } ^2 \\ , ,   \\\\   & \\mathcal y({{\\boldsymbol z } } ) =   \\beta_4 \\big [ f({{\\boldsymbol z } } ) - v({{\\boldsymbol z } } ) - \\mathcal{e}({{\\boldsymbol z } } ) + \\frac{\\lambda_4({{\\boldsymbol z}})}{\\beta_4 } \\big ]   + \\beta_1 \\sum_{l=0}^{l-1 } \\big [ \\sin \\big ( \\frac{\\pi l}{l } \\big ) ( z_1^{-1}-1 ) + \\cos \\big ( \\frac{\\pi l}{l } \\big ) ( z_2^{-1}-1 ) \\big ]   \\big [ r_l({{\\boldsymbol z } } ) + \\frac{\\lambda_{1l}({{\\boldsymbol z}})}{\\beta_1 } \\big ] .\\end{aligned}\\ ] ] * choice of parameters * @xmath56 } \\big ) \\ , ,   \\mu_2 = c_{\\mu_2 } ( \\beta_3 + \\beta_4 ) \\cdot \\max_{{{\\boldsymbol k}}\\in \\omega } \\big ( \\abs{t_{{\\mathbf v}}[{{\\boldsymbol k } } ] } \\big ) \\ , ,   \\beta_2 = c_2 \\beta_3 \\ , , \\beta_3 = \\frac{\\theta}{1 - \\theta } \\beta_4 \\ , , \\beta_1 = c_1 \\beta_4 \\ , , \\beta_5 = c_3 \\beta_4.\\end{aligned}\\ ] ]",
    "equal to zero are visualized by gray pixels in ( a ) , positive coefficients are indicated by white pixels and negative coefficients by black pixels .",
    "( b ) depicts the resulting segmentation .",
    "the mask of missing pixels @xmath4 shown in ( c ) is dilated and then intersected with ( b ) , leading to the ( white ) pixels which are to be inpainted with texture in ( d ) .",
    "[ fig : texturemorphology],scaledwidth=100.0% ]    , scaledwidth=100.0% ]    the proposed method for reconstructing the texture component combines the following ideas in five subsequent steps .",
    "* texture extraction by dg3pd @xcite . * morphological processing @xcite . *",
    "texture inpainting inspired by the work of efros and leung @xcite . *",
    "texture denoising by nonlocal means @xcite .",
    "* image synthesis by summation with the cartoon component @xmath5 .",
    "the dg3pd model enforces sparsity and smoothness on the obtained texture component @xmath6 .",
    "sparsity means that the vast majority of coefficients in @xmath6 are equal to zero ( the percentage of zero coefficients depends on how much texture a specific image contains ) .",
    "we make good use of this property to answer the question : which pixels of the missing shall be inpainted with texture ?",
    "first , the texture component @xmath6 is segmented into zero ( gray pixels in figure [ fig : texturemorphology](a ) ) and nonzero coefficients ( black and white pixels in figure [ fig : texturemorphology](a ) ) .",
    "morphological processing ( as described in @xcite for fingerprint segmentation ) obtains texture regions ( see figure [ fig : texturemorphology](b ) ) .",
    "the mask of missing pixels @xmath4 shown in ( c ) is dilated ( we used a circular structure element with 5 pixels radius in order to avoid border effects on the margin between existing and missing pixels ) and then , it is intersected with the texture region segmentation to obtain the mask @xmath57 shown in figure [ fig : texturemorphology](d ) which are the pixels to be inpainted with texture .",
    "the proposed texture inpainting proceeds in two phases : first , we build a dictionary of texture patches and second , we inpaint all pixels of mask @xmath57 in a specific order . for the dictionary , we select all patches of size @xmath58 pixels ( we used @xmath59 in our experiments ) from texture component @xmath6 which meet the following two criteria : at least @xmath60 percent of the pixels are known ( and additional , the central pixel of the patch has to exist ) and at least @xmath61 percent of the coefficients are nonzero ( we used @xmath62 and @xmath63 in our experiments ) .",
    "the first criterion excludes patches which contain too many missing ( unknown ) pixels and the second criterion excludes patches without texture from the dictionary .",
    "next , we iterate over all pixels of mask @xmath57 and consider the pixel to be inpainted as the central pixel of an image patch with size @xmath58 .",
    "we count the number of known pixels inside the patch and compute the percentage of known pixels .",
    "pixels are inpainted in the following order .",
    "we start with a threshold percentage @xmath64 which is decreased in steps of @xmath65 per iteration and in each iteration , we inpaint all pixels of mask @xmath57 for which at least @xmath31 percent are known .",
    "the rationale behind this ordering is that the more pixels are known ( or already inpainted ) in the neighborhood around a missing pixels , the better it can inpainted , because this additional information improves the chances of finding a good match in the texture dictionary .",
    "a third constraint ensures that the overlap of known pixels between a dictionary patch and the patch around the missing pixels contains at least @xmath66 percent of known pixels ( we used @xmath67 in our experiments ) .",
    "inpainting a pixel means that we find the best fitting patch in our texture dictionary and set the pixel value to the central pixel of that patch .",
    "best fitting is defined as minimum sum of squared differences per pixel , divided by the number of pixels which overlap .",
    "after all missing texture pixels have been inpainted the texture region is denoised @xmath68 iterations of nonlocal means . in each iteration , we first construct a dictionary considering all patches in the texture region with known and previously inpainted pixels .",
    "next , for each pixel to be denoised , we find the top @xmath69 fitting patches in the dictionary using the same distance function ( sum of squared pixelwise differences ) and set the denoised pixel to the average value of the top @xmath69 central pixel values . in our experiments , we used @xmath70 and we have observed that after about @xmath71 iterations , the image has reached a steady state .",
    "see figure [ fig : textureinpaintinganddenoising ] for a visualization of the status at several intermediate steps during the inpainting and denoising process .",
    "finally , the full image is reconstructed by summation of the inpainted cartoon component @xmath5 with the inpainted and denoised texture component @xmath6 , see figure  [ fig : dg3pd_inpainting : discreteinnovationmodel ] .",
    "figure [ fig : comparison ] shows inpainting results for the considered challenging problem ( see figure [ fig : challenge ] ( c ) ) obtained by well - known inpainting methods from the literature : an approach based on navier stokes equations from fluid dynamics which has been proposed by bertalmio _",
    "@xcite , an inpainting method suggested by telea @xcite and a well - known tvl2 inpainting approach with its synthesis image shown in figure [ fig : comparison ] ( b ) and ( c ) .",
    "the image shown in figure [ fig : challenge](c ) has the three properties discussed in section  1 :    *  a large percentage of pixels in @xmath3 are missing and shall be inpainted . *  the known pixels in @xmath3",
    "are corrupted by noise . *",
    "@xmath3 contains both cartoon and texture elements .",
    "furthermore , a noise - free , ideal version @xmath72 depicted in figure [ fig : challenge](a ) is available which serves as ground truth for evaluating the quality of inpainted and denoised images by different methods . the availability of a noise - free image is an advantage for comparing and evaluating different inpainting and denoising methods . in contrast , images taken by a digital camera contain a certain amount of noise and for them , an ideal version is not available , see e.g. the barbara image we used in previous comparisons @xcite .",
    "the choice of the ideal image ( shown in figure [ fig : challenge ] ) enables to clearly see and understand the advantages and limitations of the compared methods ( see figure [ fig : comparison ] ) .    due to the fidelity term , the @xmath73-norm , in the tvl2 inpainting model",
    ", noise is reduced and the homogeneous areas are well interpolated .",
    "however , the method is known to cause the `` stair case '' effect on the homogeneous regions and texture , while small scale objects tend to be eliminated .",
    "if the parameter @xmath74 is chosen smaller ( e.g. @xmath75 ) , the resulting inpainted image is smoother , i.e. effect of `` stair case '' is reduced , but also more texture parts are removed .",
    "dg3pd inpainting produces a smooth result without stair case effect . in comparison to the other approaches ,",
    "it is the only method which can reconstruct the texture regions in a satisfactory way .",
    "in this section , we describe the dg3pd inpainting model from a view of the bayesian framework through maximum a posterior ( map ) estimator .",
    "we assume that @xmath5 and @xmath6 are independent random variables ( r.v . ) .    * * prior of cartoon image @xmath5 : * a cartoon @xmath76 \\big]_{k \\in \\omega}$ ] consists of element pixel @xmath77 $ ] which is considered as an independent r.v . with a prior @xmath78 .",
    "+ given @xmath79 , denote @xmath80 = \\nabla_l^+ u[{{\\boldsymbol k } } ] = \\big [ r_l[{{\\boldsymbol k } } ] \\big]_{l=0}^{l-1}$ ] .",
    "to describe the distribution of a r.v .",
    "@xmath81 , we firstly define the distribution of @xmath82-dimensional r.v .",
    "@xmath83 $ ] .",
    "we assume that r.v .",
    "@xmath84 has a multi - dimensional laplace distribution which is a part of multi - dimensional power exponential distribution @xcite , i.e. @xmath85 with @xmath86 : @xmath87 \\mid 0 , \\sigma , \\frac{1}{2 } ) & = \\frac{1}{8 \\pi \\gamma^2 }      \\exp \\big\\ { -\\frac{1}{2 } \\big (      \\begin{pmatrix } r_0[{{\\boldsymbol k } } ]",
    "\\\\ \\vdots \\\\ r_{l-1}[{{\\boldsymbol k } } ] \\end{pmatrix}^t      \\frac{1}{\\gamma^4 }     \\begin{pmatrix } \\gamma^2 & 0 \\\\ 0 & \\gamma^2 \\end{pmatrix }     \\begin{pmatrix } r_0[{{\\boldsymbol k } } ] \\\\ \\vdots \\\\ r_{l-1}[{{\\boldsymbol k } } ] \\end{pmatrix }     \\big)^\\frac{1}{2 } \\big\\ }     \\\\     & = \\frac{1}{8\\pi \\gamma^2 } \\exp \\big\\ { -\\frac{1}{2\\gamma }       \\underbrace{\\big [ \\sum_{l=0}^{l-1 } \\abs{r_l[{{\\boldsymbol k}}]}^2 \\big]^\\frac{1}{2}}_{:= \\abs{r[{{\\boldsymbol k } } ] } = \\abs{\\nabla^+_l u[{{\\boldsymbol k } } ] } }      \\big\\}.    \\end{aligned}\\ ] ] thus , the distribution of a r.v .",
    "@xmath81 is a multi - dimensional laplace distribution with operator @xmath88 : @xmath89 ) = \\frac{1}{8\\pi \\gamma^2 } \\exp \\big\\ { -\\frac{1}{2\\gamma } \\abs{\\nabla^+_l u[{{\\boldsymbol k } } ] } \\big\\}.\\ ] ] the joint probability density function ( p.d.f . ) of a prior @xmath5 is @xmath90 )      = \\frac{1}{(8\\pi \\gamma^2)^{\\abs{\\omega } } } \\exp \\big\\ { -\\frac{1}{2\\gamma } \\sum_{{{\\boldsymbol k}}\\in \\omega } \\abs{\\nabla^+_l u[{{\\boldsymbol k } } ] } \\big\\ }     = \\frac{1}{(8\\pi \\gamma^2)^{\\abs{\\omega } } } e^{-\\frac{1}{2\\gamma } \\norm{\\nabla_l^+ { { \\mathbf u}}}_{\\ell_1}}.\\ ] ] we choose @xmath91 .",
    "the potential function of @xmath5 in a matrix form is @xmath92 note that the original @xmath5 is not a laplace distribution , but a transform of @xmath5 under an operator @xmath93 has an independent multi - dimensional laplace distribution . * * prior of texture image @xmath6 : * under a transform operator @xmath94 , the texture image @xmath6 is decomposed in different orientations .",
    "operator @xmath94 is suitably chosen to capture the texture components in the original image @xmath3 .",
    "as definition of discrete multi - dimensional g - norm @xcite , the definition of the transform @xmath94 ( in a direction @xmath95 , @xmath96 ) is defined by its inversion ( note that @xmath97 ) : @xmath98_{s=0}^{s-1 } = { { \\mathbf g}}~\\leftrightarrow~     { { \\mathbf v}}= \\mathcal t^{-1 } \\big\\ { \\big [ { { \\mathbf g}}_s \\big]_{s=0}^{s-1 } \\big\\ }     = \\text{div}^+_s { { \\mathbf g}}\\,.\\ ] ] we assume that a texture @xmath6 is sparse in a transform domain @xmath94 and sparse in the spatial domain ( nonzero coefficients of @xmath6 are only due to texture ) . to satisfy these conditions",
    ", we assume that a r.v .",
    "@xmath99 has a mixture of a laplace distribution in spatial domain with a p.d.f .",
    "@xmath100)$ ] ( w.r.t .",
    "sparse in spatial domain ) and multi - dimensional laplace distribution ( in an operator @xmath94 ) with a p.d.f .",
    "@xmath101)$ ] ( w.r.t .",
    "sparse in transform domain @xmath94 ) .",
    "thus , we have a p.d.f .",
    "@xmath99 as follows @xmath102 ) = p_{v_{1k}}(v[{{\\boldsymbol k } } ] ) \\cdot p_{v_{2k}}(v[{{\\boldsymbol k}}]).\\ ] ] since @xmath103 , we have @xmath104 ) = \\frac{1}{4\\gamma_2 } \\exp \\big\\ { -\\frac{1}{2 \\gamma_2 } \\abs{v[{{\\boldsymbol k } } ] } \\big\\}.\\ ] ] to define the distribution of a r.v .",
    "@xmath105 , we define the distribution of @xmath106-dimension r.v . @xmath107 $ ] .",
    "similar to @xmath108 , we assume that r.v .",
    "@xmath109 has a multi - dimensional laplace distribution , i.e. @xmath110 with @xmath111 .",
    "it is easy to see that ( with @xmath112 = { { \\mathcal t}}\\{{{\\mathbf v}}\\}[{{\\boldsymbol k } } ] \\ , , { { \\boldsymbol k}}\\in \\omega$ ] ) @xmath113 ) = \\frac{1}{8\\pi\\gamma_1 ^ 2 } \\exp\\big\\ { -\\frac{1}{2\\gamma_1 } \\abs{g[{{\\boldsymbol k } } ] } \\big\\}\\ ] ] or @xmath114 ) = \\frac{1}{8\\pi\\gamma_1 ^ 2 } \\exp\\big\\ { -\\frac{1}{2\\gamma_1 } \\abs{{{\\mathcal t}}\\{{{\\mathbf v}}\\}[{{\\boldsymbol k } } ] } \\big\\}.\\ ] ] put ( [ eq : pdf : v2 ] ) and ( [ eq : pdf : v1 ] ) to ( [ eq : pdf : v ] ) , we have the p.d.f . of r.v . @xmath99 as @xmath115 ) = \\frac{1}{32\\pi\\gamma_1 ^ 2 \\gamma_2 } \\exp\\big\\ { -\\frac{1}{2\\gamma_1 } \\abs{{{\\mathcal t}}\\{{{\\mathbf v}}\\}[{{\\boldsymbol k } } ] } - \\frac{1}{2 \\gamma_2 } \\abs{v[{{\\boldsymbol k } } ] } \\big\\}.\\ ] ] the joint p.d.f . of a texture image @xmath116",
    "\\big]_{{{\\boldsymbol k}}\\in \\omega}$ ] is @xmath117 ) =      \\frac{1 } { ( 32\\pi\\gamma_1 ^ 2 \\gamma_2)^{\\abs{\\omega } } }     \\exp \\big\\ { -\\frac{1}{2 \\gamma_1 } \\norm{{{\\mathcal t}}\\{{{\\mathbf v}}\\}}_{\\ell_1 } - \\frac{1}{2 \\gamma_2 } \\norm{{{\\mathbf v}}}_{\\ell_1 } \\big\\}.\\ ] ] we choose @xmath118 and @xmath119 .",
    "the potential function of @xmath6 with an anisotropic version @xmath120 in a matrix form is defined as @xmath121 * * likelihood ( or the joint p.d.f . of @xmath122 ) : * if we assume that the residual @xmath7 in an image @xmath3 has a power exponential distribution @xcite , i.e. @xmath123 , e.g. gaussian @xmath124 or laplacian @xmath125 , its density function at @xmath79 is @xmath126 \\mid \\mu ) = \\frac{1}{\\gamma(1+\\frac{1}{2\\xi } ) 2^{1+\\frac{1}{2\\xi } } \\sigma }      \\exp \\big\\ { -\\frac{1}{2 } \\frac{\\abs{\\epsilon[{{\\boldsymbol k}}]-\\mu}^{2 \\xi}}{\\sigma^{2\\xi } } \\big\\}.\\ ] ] due to the inpainting problem with a missing region @xmath4 , the likelihood is defined on a known domain @xmath127 as @xmath128 \\mid u[{{\\boldsymbol k } } ] , v[{{\\boldsymbol k } } ] )     \\\\     & = \\frac{1}{\\big ( \\gamma(1+\\frac{1}{2\\xi } ) 2^{1+\\frac{1}{2\\xi } } \\sigma \\big)^{\\abs{\\omega } } }     \\exp \\big\\ { -\\frac{1}{2 \\sigma^{2\\xi } } \\underbrace { \\sum_{{{\\boldsymbol k}}\\in \\omega } \\abs{\\chi_d^c[{{\\boldsymbol k } } ] ( f[{{\\boldsymbol k}}]-u[{{\\boldsymbol k}}]-v[{{\\boldsymbol k } } ] ) } ^{2 \\xi } } _ { : = \\norm{\\chi_d^c \\cdot^\\times ( { { \\mathbf f}}- { { \\mathbf u}}- { { \\mathbf v}})}^{2\\xi}_{2\\xi } } \\big\\ } \\ , .    \\end{aligned}\\ ] ] * * a posterior : * since @xmath5 and @xmath6 are independent to each other , a posterior is written as @xmath129    let @xmath130 , the map estimator , i.e. @xmath131 , is defined as @xmath132       \\ , ,   { { \\mathbf f}}= { { \\mathbf u}}+ { { \\mathbf v}}+ { { \\boldsymbol \\epsilon}}\\big\\ } .\\end{aligned}\\ ] ] however , in practice , we do not know which types of noise are observed in a signal . instead of the @xmath133 norm of the residual @xmath7 on a known domain @xmath127 to characterize the properties of noise",
    ", we control the smoothness of the solution by the maximum of curvelet coefficient of @xmath7 on a domain @xmath127 by a constant @xmath134 , i.e. @xmath135 .    in @xcite , if noise in image @xmath3 is gaussian , as in extreme value theory , the r.v .",
    "@xmath136 has a gumbel distribution .",
    "thus , there is a condition to choose @xmath134 .",
    "however , in practice , if noise can not be identified , @xmath134 is chosen by @xmath137-quantile .",
    "note that the condition @xmath135 is similar to the dantzig selector @xcite .",
    "figure [ fig : dg3pd : densityfunc ] illustrates the empirical density functions of the solution of the minimization ( [ eq : dg3pd_inpainting_alm_numerical ] ) .",
    "the statistical properties of the solution can be characterized in the bayesian framework with the priors , likelihood and posterior as mentioned above .    ) by admm : ( a ) , ( b ) , ( c ) , ( d ) , ( e ) , ( f ) and ( g ) are the empirical density functions of @xmath138 and the qq - plot of the residual @xmath7 , respectively .",
    "we assume that the prior of @xmath139 has a multi - laplacian distribution , i.e. a changed variable @xmath140_{l=0}^{l-1 } = \\nabla_l^+ { { \\mathbf u}}$ ] has a multi - laplace distribution , or @xmath141 has an univariate laplace distribution .",
    "this effect causes the sparseness of @xmath141 due to the shrinkage operator , see ( d ) .",
    "the sparsity for @xmath139 causes the smoothness of the objects in the cartoon @xmath5 , see ( a ) .",
    "the smooth and sparse texture @xmath6 ( due to the expansion of a whole range in intensity value of its non - zero coefficients caused by @xmath54 in ( [ eq : dg3pd_inpainting ] ) ) is illustrated in ( b ) .",
    "because of an additive white gaussian noise in a simulation , the distribution of @xmath7 in @xmath127 is approximately normal , see plot ( c ) and its qq - plot ( g ) .",
    "the reasons of the differences near the boundary in ( g ) may cause by : ( 1 ) a simulation of a gaussian noise , i.e. the tail of a gaussian noise does not go to infinity in a simulation .",
    "( 2 ) the remaining texture in @xmath7 ( due to a selection of @xmath134 ) .",
    "changing variable @xmath142 causes a non - sparsity in @xmath143 and a sparsity in @xmath144 ( which is shrinked from @xmath143 ) , c.f .",
    "( e ) and ( f ) .",
    ", scaledwidth=95.0% ]     does not exist in general , but the reconstructed image is obtained by the function space of the inverse problem . [ fig : dg3pd_inpainting : discreteinnovationmodel ] , scaledwidth=110.0% ]    note that the dg3pd inpainting model ( [ eq : dg3pd_inpainting ] ) can be described as an inverse problem in image restoration ( e.g. image inpainting and denoising ) , see figure [ fig : dg3pd_inpainting : discreteinnovationmodel ] for the discrete innovation model .",
    "in this section , we discuss connections and similarities between the proposed dg3pd inpainting model and existing work in the area of pyramid representations , multiresolution analysis , and scale - space representation .",
    "historically , gaussian pyramids and laplacian pyramids have been developed for applications like texture synthesis , image compression and denoising .",
    "early works in this area include a paper by burt and adelson in 1983 @xcite applying laplacian pyramids for image compression .",
    "pyramidal decomposition schemes @xcite can be grouped into two categories .",
    "their main property is either lowpass or bandpass filtering .",
    "very related are transforms from multiresolution analysis , including wavelet , curvelet @xcite , contourlet @xcite , and steerable wavelet @xcite .",
    "a difference of the proposed dg3pd inpainting model is that its basis elements for obtaining the decomposition are constructed by discrete differential operators and the decomposition is solved in a non - linear way which adapts to each image ( enabled by update iterations , corresponding to the loop in figure [ fig : variationpyramid ] ) .",
    "the discussion of commonalities and differences is made more precise and detailed in the following rest of the section .",
    "let denote @xmath145 a discrete fourier transform pair .",
    "given @xmath146 and @xmath147 and the dirac delta function @xmath148 , the impulse response of the discrete directional derivative operators ( @xmath149 ) and their spectra are    * the forward operator : @xmath150 = \\big [ \\cos(\\frac{\\pi l}{l } ) \\partial_x^+   +   \\sin(\\frac{\\pi l}{l } ) \\partial_y^+ \\big ] \\delta[{{\\boldsymbol k } } ]     ~\\stackrel{{{\\mathcal f}}}{\\longleftrightarrow}~ \\cos(\\frac{\\pi l}{l } ) ( z_2 - 1 ) + \\sin(\\frac{\\pi l}{l } ) ( z_1 - 1 ) \\,,\\ ] ] * the backward operator : @xmath151 = \\big [ \\cos(\\frac{\\pi l}{l } ) \\partial_x^-   +   \\sin(\\frac{\\pi l}{l } ) \\partial_y^- \\big ] \\delta[{{\\boldsymbol k } } ]     ~\\stackrel{{{\\mathcal f}}}{\\longleftrightarrow}~ -\\cos(\\frac{\\pi l}{l } ) ( z_2^{-1 } - 1 ) - \\sin(\\frac{\\pi l}{l } ) ( z_1^{-1 } - 1 ) \\,.\\ ] ]      in order to describe the variational analysis for the @xmath5-problem from the view of filtering in the fourier domain for a pyramid decomposition scheme , we define the discrete inverse fourier transform of @xmath152 and @xmath153 in the `` @xmath5-problem '' in @xcite as @xmath154 = \\big [ \\beta_4 - \\beta_1 \\sum_{l=0}^{l-1 } \\partial_l^- \\partial_l^+ \\big ] \\delta [ { { \\boldsymbol k } } ] ,   \\\\   & \\mathcal y({{\\boldsymbol z } } ) ~\\stackrel{\\mathcal f^{-1}}{\\longleftrightarrow}~   y[{{\\boldsymbol k } } ] = \\beta_4 \\big ( f[{{\\boldsymbol k } } ] - v[{{\\boldsymbol k } } ] - \\epsilon[{{\\boldsymbol k } } ] + \\frac{\\lambda_4[{{\\boldsymbol k}}]}{\\beta_4 } \\big )   - \\beta_1 \\sum_{l=0}^{l-1 } \\partial_l^- \\big\\ {    \\underbrace { { \\mathop{\\rm shrink}}\\big ( \\partial_l^+ u[{{\\boldsymbol k } } ] - \\frac{\\lambda_{\\boldsymbol{1 } l}[{{\\boldsymbol k}}]}{\\beta_1 } \\ , , \\frac{1}{\\beta_1 } \\big ) } _ { : = ~ r_l[{{\\boldsymbol k } } ] }   + \\frac{\\lambda_{1l}[{{\\boldsymbol k}}]}{\\beta_1 } \\big\\ } \\,.\\end{aligned}\\ ] ] note that the function @xmath152 satisfies @xmath155 ^ 2\\ ] ] and it is similar to the autocorrelation function in @xcite which follows the condition of the riesz basis .",
    "we rewrite cartoon @xmath5 in the fourier and spatial domain in the scheme of filter design as @xmath156    \\notag   \\\\",
    "\\stackrel{\\mathcal f^{-1}}{\\longleftrightarrow }   u[{{\\boldsymbol k } } ] & = \\underbrace { \\big ( \\phi*(f - v-\\epsilon + \\frac{\\lambda_4}{\\beta_4 } ) \\big)[{{\\boldsymbol k } } ] } _ { : = u_\\text{update } [ { { \\boldsymbol k } } ] }   ~+~ \\underbrace { \\sum_{l=0}^{l-1 } \\big ( \\tilde \\psi_l \\ast \\big [ { \\mathop{\\rm shrink}}\\big ( \\psi_l \\ast u - \\frac{\\lambda_{1 l}}{\\beta_1 } \\ , , \\frac{1}{\\beta_1 } \\big )   + \\frac{\\lambda_{1l}}{\\beta_1 } \\big ] \\big)[{{\\boldsymbol k } } ]      } _ { : = ~ \\text{fst}_{\\psi , \\tilde \\psi , c_1 } ( u \\ , , \\frac{\\lambda_{1 l}}{\\beta_1 } \\ , , \\frac{1}{\\beta_1 } )   ~:= u_\\text{smooth } [ { { \\boldsymbol k } } ]    ~~ \\text{(frame soft thresholding)}}\\end{aligned}\\ ] ] given @xmath157 , the spectra and impulse responses of the scaling and frame functions in ( [ eq : projection : u ] ) @xmath158 are @xmath159 = \\big [ 1 - c_1 \\sum_{l=0}^{l-1 } \\partial_l^- \\partial_l^+ \\big]^{-1 } \\delta [ { { \\boldsymbol k } } ] \\ , ,   \\\\   \\tilde \\psi_l({{\\boldsymbol z } } ) & = \\beta_1 \\mathcal x^{-1}({{\\boldsymbol z } } ) \\big [ ( z_1^{-1}-1 ) \\sin \\frac{\\pi l}{l } ~+~ ( z_2^{-1}-1 ) \\cos",
    "\\frac{\\pi l}{l } \\big ]   ~\\stackrel{\\mathcal f}{\\longleftrightarrow}~    \\tilde \\psi_l[{{\\boldsymbol k } } ] = - c_1 \\big [ 1 - c_1 \\sum_{l=0}^{l-1 } \\partial_l^- \\partial_l^+ \\big]^{-1 } \\partial_l^- \\delta [ { { \\boldsymbol k } } ] \\ , ,   \\\\   \\psi_l ( { { \\boldsymbol z } } ) & = ( z_1 - 1 ) \\sin \\frac{\\pi l}{l }   + ( z_2 - 1 ) \\cos \\frac{\\pi l}{l }   ~\\stackrel{\\mathcal f}{\\longleftrightarrow}~    \\psi_l [ { { \\boldsymbol k } } ] = \\partial_l^+ \\delta [ { { \\boldsymbol k}}].\\end{aligned}\\ ] ] the equation ( [ eq : projection : u ] ) is somewhat similar to the projection operator in the pyramid decomposition scheme ( see curvelet @xcite , contourlet @xcite , steerable wavelet @xcite , etc . ) , with :    * scaling function @xmath160 and its dual @xmath161 with the interpolant @xmath162 , * frame function @xmath163 and its dual @xmath164 , * proximity operator for frame elements , i.e. @xmath165 .    note that the frame soft thresholding @xmath166 in ( [ eq : projection : u ] ) consists of frame element @xmath167 , its dual @xmath168 and shrinkage operator @xmath165 together with the updated lagrange multiplier .",
    "although @xmath166 is similar to wavelet / curvelet shrinkage operator , this operator is obtained from the calculus of variation .",
    "it is easy to obtain the unity property of frame elements @xmath169 in the fourier domain as @xmath170 which satisfies the condition of the perfect reconstruction in the scheme of wavelet pyramid , see figure [ fig : fourieru_l4 ] for illustration with @xmath171 directions .",
    "when the number of directions @xmath82 increases , the bandwidth of the scaling function @xmath172 in the spectral domain reduces , see figure [ fig : fourieru_l8 ] .",
    "due to the effect of this lowpass filter , the cartoon @xmath5 is smoother .",
    "these frame elements @xmath173 which consist of partial differential operators can be considered as a kind of a wavelet - like operator @xcite . however , the procedure to obtain these elements is from the calculus of variation .",
    "-problem '' and the `` @xmath143-problem '' with the parameters : @xmath174 and @xmath175 . the unity properties for these frame functions are @xmath176 and @xmath177 .",
    ", scaledwidth=100.0% ]      in analogy to the @xmath5-problem in the variational framework , we define the frame operators to extract the directional features of the texture @xmath6 in pyramid decomposition scheme .",
    "the discrete inverse fourier transforms of @xmath178 and @xmath179 in the solution of the `` @xmath6-problem '' @xcite are defined as @xmath180 ~=~ \\big [ \\beta_2 - \\beta_3 \\partial_a^- \\partial_a^+ \\big ] \\delta[{{\\boldsymbol k } } ] \\ , ,   \\\\",
    "\\mathcal b_a({{\\boldsymbol z } } ) & ~\\stackrel{\\mathcal f^{-1}}{\\longleftrightarrow}~   b_a[{{\\boldsymbol k } } ] ~=~ \\beta_2 \\big [ { \\mathop{\\rm shrink}}\\big ( g_a[{{\\boldsymbol k } } ] - \\frac{\\lambda_{2a}[{{\\boldsymbol k}}]}{\\beta_2 } \\ , , \\frac{\\mu_1}{\\beta_2 } \\big )   + \\frac{\\lambda_{2a}[{{\\boldsymbol k}}]}{\\beta_2 } \\big ]   - \\beta_3 \\partial_a^- \\big\\ { \\underbrace { v[{{\\boldsymbol k } } ] - \\sum_{s=[0 , s-1 ] \\backslash \\{a\\ } } \\partial_s^+g_s[{{\\boldsymbol k } } ] } _ { \\displaystyle : = ~ \\partial_a^+ g_a[{{\\boldsymbol k } } ] }   + \\frac{\\lambda_3 [ { { \\boldsymbol k}}]}{\\beta_3 } \\big\\ } \\end{aligned}\\ ] ] similar to @xmath152 , the `` autocorrelation '' function @xmath181 is bounded as in the condition of the riesz basis @xcite , i.e. @xmath182 ^ 2 \\,.\\ ] ] texture @xmath6 is rewritten in the fourier and spatial domain with @xmath183 , as @xmath184   ~+~ \\psi'_a({{\\boldsymbol z } } )   \\big [ \\psi_a ( { { \\boldsymbol z } } ) g_a({{\\boldsymbol z } } ) + \\frac{\\lambda_3({{\\boldsymbol z}})}{\\beta_3 } \\big ]      \\notag   \\\\   \\stackrel{\\mathcal f^{-1}}{\\longleftrightarrow}~    g_a[{{\\boldsymbol k } } ] & ~=~ \\bigg ( \\xi_a \\ast \\big [    \\underbrace { { \\mathop{\\rm shrink}}\\big ( g_a - \\frac{\\lambda_{2a}}{\\beta_2 } \\ , , \\frac{\\mu_1}{\\beta_2 } \\big )   + \\frac{\\lambda_{2a}}{\\beta_2 } } _ { \\displaystyle : = ~ \\text{st } \\big(g_a \\ , , \\frac{\\lambda_{2a}}{\\beta_2 } \\ , , \\frac{\\mu_1}{\\beta_2 } \\big ) } \\big ] \\bigg ) [ { { \\boldsymbol k } } ]   ~+~ \\bigg ( \\psi'_a \\ast   \\big [ \\psi_a \\ast g_a   + \\frac{\\lambda_3}{\\beta_3 } \\big ] \\bigg)[{{\\boldsymbol k } } ] \\,.\\end{aligned}\\ ] ] given @xmath185 , the spectra and impulse responses of the frame functions in ( [ eq : projection : g ] ) are @xmath186 = c_2 \\big ( c_2 - \\partial_a^- \\partial_a^+ \\big)^{-1 } \\delta[{{\\boldsymbol k } } ] \\ , ,   \\\\   \\psi'_a({{\\boldsymbol z } } ) & = \\beta_3 \\mathcal a^{-1}({{\\boldsymbol z } } ) \\big [ ( z_1^{-1 } - 1 ) \\sin \\frac{\\pi a}{s } ~+~ ( z_2^{-1 } - 1 ) \\cos \\frac{\\pi a}{s } \\big ]   ~\\stackrel{\\mathcal f^{-1}}{\\longleftrightarrow}~    \\psi'_a[{{\\boldsymbol k } } ] = - \\big ( c_2 - \\partial_a^- \\partial_a^+ \\big)^{-1 } \\partial_a^- \\delta[{{\\boldsymbol k } } ]   \\\\",
    "\\psi_a({{\\boldsymbol z } } ) & = ( z_2 - 1 ) \\cos \\frac{\\pi a}{s } ~+~ ( z_1 - 1 ) \\sin \\frac{\\pi a}{s }   ~\\stackrel{\\mathcal f^{-1}}{\\longleftrightarrow}~    \\psi_a[{{\\boldsymbol k } } ] = \\partial_a^+ \\delta [ { { \\boldsymbol k } } ] \\,.\\end{aligned}\\ ] ]    similar to the @xmath5-problem , it is easy to obtain the unity property of frame elements @xmath187 with @xmath188 $ ] in fourier domain : @xmath189 which satisfies the condition of the perfect reconstruction , see figure [ fig : fourieru_l4 ] with @xmath171 directions and figures [ fig : fourieru_l8 ] and [ fig : fourierga_l8 ] with @xmath190 directions .",
    "the solution of the @xmath6-problem is rewritten as @xmath191 } \\big ) \\big)\\ ] ] with @xmath192   + ( 1-\\theta ) \\big [ \\underbrace { { { \\mathbf v}}+ \\frac{\\boldsymbol{\\lambda_4}}{\\beta_4 } } _ { \\mathbf{t}_{\\mathbf v \\text{update } } } \\big ] \\,.\\ ] ] note that there is a shrinkage operator with two terms in texture @xmath6 , namely a smoothing term and a updated term , balanced by a parameter @xmath193 .      the noise term @xmath194 in eq .",
    "( [ eq : dg3pd_inpainting ] ) is suitable to capture high oscillating patterns , especially small - scale types of noise , due to the advantage of the multi - orientation and multi - scale in a curvelet domain and the supremum norm . for a convenient calculation",
    ", we introduce a variable @xmath37 as a residual @xmath7 in a known domain @xmath127 .",
    "the explanation for using the supremum norm of @xmath7 in the curvelet domain can be found in ( [ eq : sub : e : solution ] ) .",
    "in particular , there are two terms in ( [ eq : sub : e : solution ] ) , including a residual in @xmath127 with an updated lagrange multiplier @xmath39 , i.e. @xmath195 , and its curvelet smoothing term at a level @xmath134 , i.e. @xmath196 . assume at an iteration @xmath31 , there are some remaining signals , e.g. texture , in residual @xmath7 in @xmath127 . the curvelet soft - thresholding operator @xmath197 reduces noise ( or small scale objects ) in @xmath198 at a level @xmath134 in different scales and orientations . by a subtraction operator in ( [ eq :",
    "sub : e : solution ] ) , @xmath37 at a iteration @xmath31 contains mainly noise or small scale objects , see figure [ fig : l_infty_residual ] .",
    "on @xmath127 in ( [ eq : dg3pd_inpainting ] ) by introducing a new variable @xmath199 .",
    "the first and second rows are the images @xmath200 and @xmath37 and their 1d signals along the red lines at iteration 20 , respectively .",
    "similarly , the third and fourth rows are at iteration 100 .",
    "we observe that cartoon and texture still remain in @xmath201 and its curvelet smoothing term @xmath202 at iteration 20 .",
    "however , these geometrical signals are reduced in their difference @xmath37 due to a subtraction operator . at iteration 100",
    ", there is almost no cartoon in @xmath200 and @xmath37 .",
    "note that there are some information in the missing domain @xmath4 due to the updated @xmath39 . , scaledwidth=100.0% ]      at iteration @xmath31 , we denote the updated residual by the unity condition as @xmath203 and rewrite ( [ eq : sub : epsilon : solution ] ) with the indicator functions on unknown domain @xmath4 and",
    "known domain @xmath127 as @xmath204 } _ { : = ~ { { \\boldsymbol \\epsilon}}^{(t)}_\\text{known } }   \\cdot^\\times \\chi_d^c   ~+~ \\underbrace { \\frac{\\beta_4}{\\beta_4 + \\beta_5 } { { \\boldsymbol \\epsilon}}^{(t)}_\\text{unity } }       _ { : = ~ { { \\boldsymbol \\epsilon}}^{(t)}_\\text{unknown } } \\cdot^\\times ( 1 - \\chi_d^c).\\ ] ] we see that there are two terms in the residual @xmath205 , including the updated term @xmath206 for @xmath127 and @xmath207 for @xmath4 . and",
    "there are other two terms for updating @xmath206 in @xmath127 , namely @xmath208 ( from an unity condition ) and @xmath209 ( from a curvelet smoothing operator ) . in a contrast to an open loop in a pyramidal decomposition ( e.g. laplacian pyramid , wavelet , curvelet , etc )",
    ", the solution of dg3pd inpainting can be considered as a closed loop of the pyramid scheme with the true solution @xmath210 in the minimization problem .",
    "the loop of the updated lagrange multipliers can be seen as a refinement .",
    "if we remove this loop from the scheme in figure [ fig : variationpyramid ] ( a ) , the minimization in dg3pd becomes the quadratic penalty method .",
    "the removal would cause an imperfect reconstruction for the constraints , e.g. @xmath211 , see figure 7 ( p ) and ( q ) in  @xcite .",
    "we note that the lowpass , bandpass , and highpass filters for cartoon , texture and residual components are custom - made for each image , resulting in different filters for different images , see figure [ fig : fourier : uniquefilter:3d ] and [ fig : fourier : uniquefilter ] .",
    "the directional properties of texture and their directional filter banks are illustrated in figure [ fig : dg3pd : fingerprint ] and [ fig : dg3pd : fingerprint : filter ] .     and @xmath212 .",
    "cartoon @xmath5 is similar to lowpass signal and directional texture @xmath213_{s=0}^3 $ ] is directional bandpass signals .",
    "the traditional linear filtering is difficult to design a filter to obtain a smooth lowpass signal with sharp edge as ( b ) , because it is difficult to define frequencies ( i.e. location in the fourier domain ) and their magnitude to approximate a cartoon - like image , see figure [ fig : dg3pd : fingerprint : filter].,scaledwidth=100.0% ]     and @xmath214_{i=0}^3 $ ] in figure [ fig : dg3pd : fingerprint ] obtained by dg3pd @xcite . given a spectrum @xmath215 of the original image , their corresponding lowpass , highpas and directional bandpass in the second row are defined as @xmath216 and @xmath217_{s=0}^3 = \\frac { \\big [ v_{\\text{re}s}({{\\boldsymbol z } } ) \\big]_{s=0}^3 } { f({{\\boldsymbol z } } ) } $ ] , see ( m)-(r ) for their 3-dimensional filters .",
    "the error in ( s ) is due to the iterative method in alm . in theory ,",
    "when the number of iteration goes to infinity , a solution of a decomposition satisfies the condition of the perfect reconstruction .",
    "given @xmath218 iterations , mse for the unity condition of all filters is small enough , i.e. it closely satisfies the unity property and the reconstructed signal well approximates to the original one .",
    ", scaledwidth=150.0% ]     ( in a linear convolution ) for a similar fingerprint image as in figure [ fig : dg3pd : fingerprint ] .",
    "we observe that applying the same linear filter for a `` similar '' image can not give a good result for the decomposition .",
    "thus , the linear filters are `` unique '' for every image to obtain a suitable decomposition .",
    "we apply dg3pd with an iterative method to obtain the decomposition in the third and fourth rows with the same parameters as in figure [ fig : dg3pd : fingerprint : filter ] and mse for the reconstructed image ( i ) is much smaller than ( b ) , see figure [ fig : fourier : uniquefilter:3d ] for its 3-dimensional linear filters . , scaledwidth=80.0% ]     ( a ) by dg3pd with the same parameters as in figure [ fig : dg3pd : fingerprint ] .",
    "the linear filters are different and unique ( in term of computation ) to obtain a `` good '' approximated solution .",
    "the scheme of filtering design depends on the characteristic of the image .",
    "the variational method will automatically design a filter in a `` nonlinear way '' ( due to a minimization via an iterative method ) and adapt to the characteristic of each image .",
    ", scaledwidth=100.0% ]     and @xmath143 problems with the parameters @xmath219 and @xmath175 , see figure [ fig : fourierga_l8 ] for more directional frame functions of the @xmath143 problem.,scaledwidth=100.0% ]    -problem with @xmath220 directions.,scaledwidth=100.0% ]",
    "in this paper , we have addressed the very challenging task of restoring images with a large number of missing pixels , whose existing pixels are corrupted by noise and importantly , the image to be restored contains both cartoon and texture elements . the proposed dg3pd model for inpainting and denoising can cope with this threefold difficult problem . the task of simultaneous inpainting and denoising for cartoon and texture components is solved by dg3pd decomposition , followed by inpainting and denoising both components separately and finally , image restoration by synthesis of the restored components",
    "more specifically , the dg3pd inpainting model is based on a regularization in the banach space in a discrete setting which is solved by alm and admm .",
    "in summary , the decomposition step of the proposed method has two major advantages for tackling this challenging problem .",
    "firstly , the decomposition step denoises simultaneously the cartoon and texture component .",
    "secondly , it allows to handle cartoon and texture in different ways .",
    "the cartoon image is inpainted by dg3pd as described in section [ sec : inpaintingdg3pd ] and [ sec : solutiondg3pd ] .",
    "separately , the texture component is inpainted followed by further denoising as described in section  [ sec : textureinpainting ] .",
    "therefore , the proposed dg3pd decomposition can also be understood as breaking the full problem down into smaller subproblems ( e.g. texture only inpainting ) which are easier to solve .",
    "image restoration ( or image denoising and inpainting ) can be understood as an inverse problem and it can described by a discrete innovation model ( see figure [ fig : dg3pd_inpainting : discreteinnovationmodel ] ) .",
    "the assumption in this procedure is that signal has a sparse representation in suitable transform domains .",
    "it is known from the probability theory that the sparsity ( by @xmath221 ) is connected to the laplace distribution of the signal which results in the heavy tail distribution .",
    "note that the laplace distribution with the @xmath221 norm is one of the best approximation of the sparsity by @xmath222 norm .",
    "moreover , by choosing the priors and posterior according to the bayesian framework and a maximum of a posterior ( map ) , we can understand the selection of parameters ( see figure [ fig : dg3pd : densityfunc ] for the results of the selection of the heavy - tailed distribution , e.g. the laplace distribution ) .",
    "note that map requires an assumption on the noise , e.g. gaussian or laplacian , to establish a minimization . in our proposed model",
    ", there is no requirement for an assumption on noise distribution , e.g. independent identical distributed ( i.i.d ) , or correlated and gaussian or non - gaussian ( due to the measurement @xmath223 , which is similar to the dantzig selector @xcite ) .",
    "d.h .  thai is supported by the national science foundation under grant dms-1127914 to the statistical and applied mathematical sciences institute .",
    "+ c.  gottschlich gratefully acknowledges the support of the felix - bernstein - institute for mathematical statistics in the biosciences and the niedersachsen vorab of the volkswagen foundation ."
  ],
  "abstract_text": [
    "<S> we consider the very challenging task of restoring images ( i )  which have a large number of missing pixels , ( ii )  whose existing pixels are corrupted by noise and ( iii )  the ideal image to be restored contains both cartoon and texture elements . </S>",
    "<S> the combination of these three properties makes this inverse problem a very difficult one . </S>",
    "<S> the solution proposed in this manuscript is based on directional global three - part decomposition ( dg3pd ) @xcite with directional total variation norm , directional g - norm and @xmath0-norm in curvelet domain as key ingredients of the model . </S>",
    "<S> image decomposition by dg3pd enables a decoupled inpainting and denoising of the cartoon and texture components . a comparison to existing approaches for inpainting and </S>",
    "<S> denoising shows the advantages of the proposed method . </S>",
    "<S> moreover , we regard the image restoration problem from the viewpoint of a bayesian framework and we discuss the connections between the proposed solution by function space and related image representation by harmonic analysis and pyramid decomposition . </S>"
  ]
}
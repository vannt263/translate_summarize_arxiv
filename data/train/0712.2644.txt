{
  "article_text": [
    "since the five last decades , game theory has become a major aspect in economic sciences modelling and in a great number of domains where strategical aspects has to be involved .",
    "game theory is usually defined as a mathematical tool allowing to analyse strategical interactions between individuals .",
    "+ initially funded by mathematical researchers , j. von neumann , e. borel or e. zermelo in 1920s , game theory increased in importance in the 1940s with a major work by j. von neumann and o. morgenstern and then with the works of john nash in the 1950s @xcite .",
    "john nash has proposed an original equilibrium ruled by an adaptive criterium . in game theory ,",
    "the nash equilibrium is a kind of optimal strategy for games involving two or more players , whereby the players reach an outcome to mutual advantage .",
    "if there is a set of strategies for a game with the property that no player can benefit by changing his strategy while the other players keep their strategies unchanged , then this set of strategies and the corresponding payoffs constitute a nash equilibrium .",
    "+ we can understand easily that the modelization of a player behavior needs some adaptive properties .",
    "the computable model corresponding to genetic automata are in this way a good tool to modelize such adaptive strategy .",
    "+ the plan of this paper is the following . in the next section , we present some efficient algebraic structures , the automata with multiplicities , which allow to implement powerful operators .",
    "we present in section 3 , some topological considerations about the definition of distances between automata which induces a theorem of convergence on the automata behaviors .",
    "genetic operators are proposed for these automata in section 4 . for that purpose , we show that the relevant `` calculus '' is done by matrix representions unravelling then the powerful capabilities of such algebraic structures . in section 5 ,",
    "we focus our attention on the `` iterated prisonner dilemma '' and we buid an original evolutive probabilistic automaton for strategy modeling , showing that genetic automata are well - adapted to model adaptive strategies .",
    "section 6 shows how we can use the genetic automata developed previously to represent agent evolving in complex systems description .",
    "an agent behavior semi - distance is then defined and allows to propose an automatic computation of emergent systems as a kind of self - organization detection .",
    "automata are initially considered as theoretical tools .",
    "they are created in the 1950 s following the works of a. turing who previously deals with the definition of an abstract `` machine '' .",
    "the aim of the turing machines is to define the boundaries for what a computing machine could do and what it could not do .",
    "+ the first class of automata , called finite state automata corresponds to simple kinds of machines @xcite .",
    "they are studied by a great number of researchers as abstract concepts for computable building . in this aspect",
    ", we can recall the works of some linguist researchers , for example n. chomsky who defined the study of formal grammars .",
    "+ in many works , finite automata are associated to a recognizing operator which allows to describe a language @xcite . in such works ,",
    "the condition of a transition is simply a symbol taken from an alphabet . from a specific state @xmath0 , the reading of a symbol @xmath1 allows to make the transitions which are labeled by @xmath1 and @xmath2 ( in case of a deterministic automaton - a dfa - there is only one transition - see below ) .",
    "a whole automaton is , in this way , associated to a language , the recognized language , which is a set of words .",
    "these recognized words are composed of the sequences of letters of the alphabet which allows to go from a specific state called initial state , to another specific state , called final state .",
    "+ a first classification is based on the geometric aspect  : dfa ( deterministic finite automata ) and nfa ( nondeterministic finite automata ) .    * in deterministic finite automata , for each state there is at most one transition for each possible input and only one initial state . * in nondeterministic finite automata , there can be none or more than one transition from a given state for a given possible input .    besides the classical aspect of automata as machines allowing to recognize languages , another approach consists in associating to the automata a functional goal .",
    "in addition of accepted letter from an alphabet as the condition of a transition , we add for each transition an information which can be considered as an output data of the transition , the read letter is now called input data .",
    "we define in such a way an _ automaton with outputs _ or _ weighted",
    "automaton_. +    such automata with outputs give a new classification of machines .",
    "_ transducers _ are such a kind of machines , they generate outputs based on a given input and/or a state using actions .",
    "they are currently used for control applications . _",
    "moore machines _ are also such machines where output depends only on a state , i.e. the automaton uses only entry actions .",
    "the advantage of the moore model is a simplification of the behaviour .",
    "+ finally , we focus our attention on a special kind of automata with outputs which are efficient in an operational way .",
    "this automata with output are called _ automata with multiplicities_. an automaton with multiplicities is based on the fact that the output data of the automata with output belong to a specific algebraic structure , a semiring @xcite . in that way , we will be able to build effective operations on such automata , using the power of the algebraic structures of the output data and we are also able to describe this automaton by means of a matrix representation with all the power of the new ( i.e. with semirings ) linear algebra . +    * ( automaton with multiplicities ) * + an automaton with multiplicities over an alphabet @xmath3 and a semiring @xmath4 is the 5-uple @xmath5 where    * @xmath6 is the finite set of state ; * @xmath7 is a function over the set of states , which associates to each initial state a value of k , called entry cost , and to non- initial state a zero value ; * @xmath8 is a function over the set states , which associates to each final state a value of k , called final cost , and to non - final state a zero value ; * @xmath9 is the transition function , that is @xmath10 which to a state @xmath11 , a letter @xmath1 and a state @xmath12 associates a value @xmath13 of @xmath4 ( the cost of the transition ) if it exist a transition labelled with @xmath1 from the state @xmath11 to the state @xmath12 and and zero otherwise .",
    "+    automata with multiplicities are a generalisation of finite automata .",
    "in fact , finite automata can be considered as automata with multiplicities in the semiring @xmath4 , the boolan set @xmath14 ( endowed with the logical `` or / and '' ) .",
    "to each transition we affect 1 if it exists and 0 if not .",
    "+    we have not yet , on purpose , defined what a semiring is .",
    "roughly it is the least structure which allows the matrix `` calculus '' with unit ( one can think of a ring without the `` minus '' operation ) .",
    "the previous automata with multiplicities can be , equivalently , expressed by a matrix representation which is a triplet    * @xmath15 which is a row - vector which coefficients are @xmath16 , * @xmath17 is a column - vector which coefficients are @xmath18 , * @xmath19 is a morphism of monoids ( indeed @xmath20 is endowed with the product of matrices ) such that the coefficient on the @xmath21th row and @xmath22th column of @xmath23 is @xmath24",
    "if @xmath4 is a field , one sees that the space @xmath25 of automata of dimension @xmath26 ( with multiplicities in @xmath4 ) is a @xmath4-vector space of dimension @xmath27 ( @xmath28 is here the number of letters ) .",
    "so , in case the ground field is the field of real or complex numbers @xcite , one can take any vector norm ( usually one takes one of the hlder norms @xmath29 where @xmath30 stands for the vector of all coefficients of @xmath31 arranged in some order one has then the result of theorem [ th1 ] . assuming that @xmath4 is the field of real or complex numbers , we endow the space of series / behaviours with the topology of pointwise convergence ( topology of f. treves @xcite ) .",
    "[ th1 ] let @xmath32 be a sequence of automata with limit @xmath33 ( @xmath33 is an automaton ) , then one has @xmath34 where the limit is computed in the topology of treves .",
    "we define the chromosome for each automata with multiplicities as the sequence of all the matrices associated to each letter from the ( linearly ordered ) alphabet .",
    "the chromosomes are composed with alleles which are here the lines of the matrix @xcite .",
    "+ in the following , genetic algorithms are going to generate new automata containing possibly new transitions from the ones included in the initial automata .",
    "+ the genetic algorithm over the population of automata with multiplicities follows a reproduction iteration broken up in three steps @xcite :    * _ duplication _ : where each automaton generates a clone of itself ; * _ crossing - over _ : concerns a couple of automata . over this couple",
    ", we consider a sequence of lines of each matrix for all .",
    "for each of these matrices , a permutation on the lines of the chosen sequence is made between the analogue matrices of this couple of automata ; * _ mutation _ : where a line of each matrix is randomly chosen and a sequence of new values is given for this line .",
    "finally the whole genetic algorithm scheduling for a full process of reproduction over all the population of automata is the evolutionary algorithm :    1 .   for all couple of automata ,",
    "two children are created by duplication , crossover and mutation mechanisms ; 2 .",
    "the fitness for each automaton is computed ; 3 .   for all 4-uple composed of parents and children , the performless automata , in term of fitness computed in previous step , are suppressed .",
    "the two automata , still living , result from the evolution of the two initial parents .",
    "the fitness is not defined at this level of abstract formulation , but it is defined corresponding to the context for which the automaton is a model , as we will do in the next section .",
    "we develop in this section how we can modelize competition - cooperation processes in a same automata - based representation .",
    "the genetic computation allows to make automatic transition from competition to cooperation or from coopeartion to competition .",
    "the basic problem used for this purpose is the well - known prisoner dilemma @xcite .",
    "the prisoner dilemma is a two - players game where each player has two possible actions : cooperate ( @xmath35 ) with its adversary or betray him ( @xmath36 ) .",
    "so , four outputs are possible for the global actions of the two players .",
    "a relative payoff is defined relatively to these possible outputs , as described in the following table where the rows correspond to one player behaviour and the columns to the other player one .",
    "+    .prisoner dilemma payoff [ cols=\"<,^,^\",options=\"header \" , ]     in the iterative version of the prisoner s dilemma , successive steps can be defined .",
    "each player do not know the action of its adversary during the current step but he knows it for the preceding step .",
    "so , different strategies can be defined for a player behaviour , the goal of each one is to obtain maximal payoff for himself .",
    "+ in figures [ titfortat ] and [ vindictive ] , we describe two strategies with transducers",
    ". each transition is labeled by the input corresponding to the player perception which is the precedent adversary action and the output corresponding to the present player action .",
    "the only inital state is the state 1 , recognizable by the incoming arrow labeled only by the output .",
    "the final states are the states 1 and 2 , recognizable with the double circles .",
    "+ in the strategy of figure [ titfortat ] , the player has systematically the same behaviour as its adversary at the previous step . in the strategy of figure [ vindictive ]",
    ", the player chooses definitively to betray as soon as his adversary does it .",
    "the previous automaton represents static strategies and so they are not well adapted for the modelization of evolutive strategies . for this purpose ,",
    "we propose a model based on a probabilistic automaton described by figure [ probadilemma ] @xcite .",
    "+    [ htp ]        [ htp ]        [ htp ]        this automaton represents all the two - states strategies for cooperation and competitive behaviour of one agent against another in prisoner s dilemma .",
    "+ the transitions are labeled in output by the probabilities @xmath37 of their realization .",
    "the first state is the state reached after cooperation action and the second state is reached after betrayal .",
    "+ for this automaton , the associated matrix representation , as described previously , is :    @xmath38      with the matrix representation of the automata , we can compute genetic automata as described in previous sections . here",
    "the chromosomes are the sequences of all the matrices associated to each letter .",
    "we have to define the fitness in the context of the use of these automata .",
    "the fitness here is the value of the payoff .",
    "a population of automata is initially generated .",
    "these automata are playing against a predefined strategy , named @xmath39 .",
    "+ each automaton makes a set of plays . at each play",
    ", we run the probabilistic automaton which gives one of the two outputs : ( @xmath35 ) or ( @xmath36 ) . with this output and the @xmath39 s output , we compute the payoff of the automaton , according with the payoff table .",
    "+ at the end of the set of plays , the automaton payoff is the sum of all the payoffs of each play .",
    "this sum is the fitness of the automaton . at the end of this set of plays",
    ", each automaton has its own fitness and so the selection process can select the best automata . at the end of these selection process , we obtain a new generation of automata . +",
    "this new generation of automata is the basis of a new computation of the 3 genetics operators . +",
    "this processus allows to make evolve the player s behavior which is modelized by the probabilistic multi - strategies two - states automaton from cooperation to competition or from competition to cooperation .",
    "the evolution of the strategy is the expression of an adaptive computation .",
    "this leads us to use this formalism to implement some self - organisation processes which occurs in complex systems .",
    "in this section , we study how evolutive automata - based modeling can be used to compute automatic emergent systems .",
    "the emergent systems have to be understood in the meaning of complex system paradigm that we recall in the next section .",
    "we have previously defined some way to compute the distance between automata and we use these principles to define distance between agents behaviours that are modeled with automata .",
    "finally , we defined a specific fitness that allows to use genetic algorithms as a kind of reinforcement method which leads to emergent system computation @xcite .",
    "[ ht ]        according to general system theory @xcite , a complex system is composed of entities in mutual interaction and interacting with the outside environment .",
    "a system has some characteristic properties which confer its structural aspects , as schematically described in part ( a ) of figure [ sys2beh ] :    * the set elements or entities are in interactive dependance .",
    "the alteration of only one entity or one interaction reverberates on the whole system . *",
    "a global organization emerges from interacting constitutive elements .",
    "this organization can be identified and carries its own autonomous behavior while it is in relation and dependance with its environment .",
    "the emergent organization possesses new properties that its own constitutive entities do nt have .",
    "`` the whole is more than the sum of its parts '' . * the global organization retro - acts over its constitutive components .",
    "`` the whole is less than the sum of its parts '' after e. morin .",
    "+    the interacting entities network as described in part ( b ) of figure [ sys2beh ] leads each entity to perceive informations or actions from other entities or from the whole system and to act itself . + a well - adapted modeling consists of using an agent - based representation which is composed of the entity called agent as an entity which perceives and acts on an environment , using an autonomous behaviour as described in part ( c ) of figure [ sys2beh ] .",
    "+ to compute a simulation composed of such entities , we need to describe the behaviour of each agent . this one can be schematically described using internal states and transition processes between these states , as described in part ( d ) of figure [ sys2beh ] .",
    "+ there are several definitions of `` agents '' or `` intelligent agents '' according to their behaviour specificities  @xcite .",
    "their autonomy means that the agents try to satisfy a goal and execute actions , optimizing a satisfaction function to reach it .",
    "+ for agents with high level autonomy , specific actions are realized even when no perception are detected from the environment . to represent the process of this deliberation , different formalisms can be used and a behaviour decomposed in internal states is an effective approach .",
    "finally , when many agents operate , the social aspects must also be taken into account .",
    "these aspects are expressed as communications through agent organisation with message passing processes .",
    "sending a message is an agent action and receiving a message is an agent perception . the previous description based on the couple : perception and action ,",
    "is well adapted to this .",
    "we describe in this section the bases of the genetic algorithm used on the probabilistic automata allowing to manage emergent self - organizations in the multi - agent simulation . + for each agent , we define @xmath40 an evaluation function of its own behaviour returning the matrix @xmath41 of values such that @xmath42 is the output series from all possible successive perceptions when starting from the initial state @xmath43 and ending at the final state @xmath44 , without cycle .",
    "it will clearly be @xmath45 if either @xmath43 is not an initial state or @xmath44 is not a final one and the matrix @xmath42 is indeed a matrix of evaluations @xcite of subseries of @xmath46    notice that the coefficients of this matrix , as defined , are computed whatever the value of the perception in the alphabet @xmath3 on each transition on the successful path .",
    "that means that the contribution of the agent behaviour for collective organization formation is only based , here , on probabilities to reach a final state from an initial one .",
    "this allows to preserve individual characteristics in each agent behaviour even if the agent belongs to an organization .",
    "+ let @xmath47 and @xmath48 two agents and @xmath49 and @xmath50 their respective evaluations as described above .",
    "we define @xmath51 a semi - distance ( or pseudometrics , see @xcite ch ix ) between the two agents @xmath47 and @xmath48 as @xmath52 , a matrix norm of the difference of their evaluations .",
    "let @xmath53 a neighbourhood of the agent @xmath47 , relatively to a specific criterium , for example a spatial distance or linkage network .",
    "we define @xmath54 the agent fitness of the agent @xmath47 as  : @xmath55      in the previous computation , we defined a semi - distance between two agents .",
    "this semi - distance is computed using the matrix representation of the automaton with multiplicities associated to the agent behaviour .",
    "this semi - distance is based on successful paths computation which needs to define initial and final states on the behaviour automata . for specific purposes , we can choose to define in some specific way , the initial and final states .",
    "this means that we try to compute some specific action sequences which are chararacterized by the way of going from some specific states ( defined here as initial ones ) to some specific states ( defined here as final ones ) .",
    "+ based on this specific purpose which leads to define some initial and final states , we compute a behaviour semi - distance and then the fitness function defined previously .",
    "this fitness function is an indicator which returns high value when the evaluated agent is near , in the sense of the behaviour semi - distance defined previously , to all the other agents belonging to a predefined neighbouring .",
    "+ genetic algorithms will compute in such a way to make evolve an agent population in a selective process .",
    "so during the computation , the genetic algorithm will make evolve the population towards a newer one with agents more and more adapted to the fitness",
    ". the new population will contain agents with better fitness , so the agents of a population will become nearer each others in order to improve their fitness . in that way , the genetic algorithm reinforces the creation of a system which aggregates agents with similar behaviors , in the specific way of the definition of initial and final states defined on the automata . + the genetic algorithm proposed here can be considered as a modelization of the feed - back of emergent systems which leads to gather agents of similar behaviour , but these formations are dynamical and we can not predict what will be the set of these aggregations which depends of the reaction of agents during the simulation . moreover the genetic process has the effect of generating a feed- back of the emergent systems on their own contitutive elements in the way that the fitness improvement lead to bring closer the agents which are picked up inside the emergent aggregations . + for specific problem solving , we can consider that the previous fitness function can be composed with another specific one which is able to measure the capability of the agent to solve one problem .",
    "this composition of fitness functions leads to create emergent systems only for the ones of interest , that is , these systems are able to be developed only if the aggregated agents are able to satisfy some problem solving evaluation .",
    "the aim of this study is to develop a powerful algebraic structure to represent behaviors concerning cooperation - competition processes and on which we can add genetic operators .",
    "we have explained how we can use these structures for modeling adaptive behaviors needed in game theory .",
    "more than for this application , we have described how we can use such adaptive computations to automatically detect emergent systems inside interacting networks of entities represented by agents in a simulation .    1 r. axelrod ( 1997 ) _ the complexity of cooperation _ ,",
    "princeton university press j. berstel and g. reutenauer ( 1988 ) _ rational series and their language _ , eatcs n. bourbaki ( 1998 ) _ elements of mathematics : general topology _ , chapters 5 - 10 , springer - verlag telos l. von bertalanffy ( 1968 ) _ general system theory _ , georges braziller ed .    c. bertelle , m. flouret , v. jay , d. olivier , and j .- l .",
    "ponty ( 2002 ) `` adaptive behaviour for prisoner dilemma strategies based on automata with multiplicities . '' in _ ess 2002 conf . , dresden _ , germany c. bertelle , m. flouret , v. jay , d. olivier , and j .- l .",
    "ponty ( 2001 ) `` genetic algorithms on automata with multiplicities for adaptive agent behaviour in emergent organizations '' in _ sci2001 _ , orlando ,",
    "florida , usa g.h.e .",
    "duchamp , h. hadj - kacem and e. laugerotte ( 2005 ) `` algebraic elimination of @xmath56-transitions '' , _ dmtcs _ , 7(1):51 - 70 g. duchamp and j - m champarnaud ( 2004 ) _ derivatives of rational expressions and related theorems _ , theoretical computer science * 313 * n. eber ( 2004 ) _ thorie des jeux _ , dunod s. eilenberg ( 1976 ) _ automata , languages and machines _ ,",
    "a and b , academic press j. ferber ( 1999 ) _ multi - agent system _ , addison - wesley l.j .",
    "fogel , a.j .",
    "owens , m.j .",
    "welsh ( 1966 ) _ artificial intelligence through simulated evolution _ , john wiley j.s .",
    "golan ( 1999 ) _ power algebras over semirings _",
    ", kluwer academic publishers d.e .",
    "goldberg ( 1989 ) _ genetic algorithms _ , addison - wesley j. h. holland ( 1995 ) _",
    "hidden order - how adaptation builds complexity _ , persus books ed .",
    "hopcroft , r. motwani , j.d .",
    "ullman ( 2001 ) _ introduction to automata theory , languages and computation _ , addison - wesley j. koza ( 1997 ) _ genetic programming _ , encyclopedia of computer sciences and technology m. mitchell ( 1996 ) _ an introduction to genetic algorithms _ , the mit press j .-",
    "le moigne ( 1999 ) _ la modlisation des systmes complexes _ ,",
    "dunod    i. rechenberg ( 1973 ) _ evolution strategies _ , fromman - holzboog m.p .",
    "schutzenberger ( 1961 ) `` on the definition of a family of automata '' , information and control , 4:245 - 270 r.p .",
    "stanley ( 1999 ) _ enumerative combinatorics _ ,",
    "cambridge university press f. treves ( 1967 ) _ topological vector spaces , distributions and kernels _",
    "press g. weiss , ed .",
    "( 1999 ) _ multiagent systems _ , mit press"
  ],
  "abstract_text": [
    "<S> in this paper , we deal with some specific domains of applications to game theory . </S>",
    "<S> this is one of the major class of models in the new approaches of modelling in the economic domain . </S>",
    "<S> for that , we use genetic automata which allow to buid adaptive strategies for the players . </S>",
    "<S> we explain how the automata - based formalism proposed - matrix representation of automata with multiplicities - allows to define a semi - distance between the strategy behaviors . with that tools , we are able to generate an automatic processus to compute emergent systems of entities whose behaviors are represented by these genetic automata .    </S>",
    "<S> l  </S>"
  ]
}
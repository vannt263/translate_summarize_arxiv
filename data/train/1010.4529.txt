{
  "article_text": [
    "in classical temporal logic structures are defined by assigning properties ( propositional variables ) to points of time ( which is an ordering , discrete or dense ) .",
    "however , not all phenomena can be well described by such logics .",
    "sometimes we need to talk about actions ( processes ) that take some time and we would like to be able to say that one such action takes place , for example , during or after another .    the halpern ",
    "shoham logic @xcite , which is the subject of this paper , is one of the modal logics of time intervals .",
    "judging by the number of papers published , and by the amount of work devoted to the research on it , this logic is probably the most influential of time interval logics .",
    "but historically it was not the first one .",
    "actually , the earliest papers about intervals in context of modal logic were written by philosophers , e.g. , @xcite . in computer science ,",
    "the earliest attempts to formalize time intervals were process logic @xcite and interval temporal logic @xcite .",
    "relations between intervals in linear orders from an algebraic point of view were first studied systematically by allen @xcite .    the halpern ",
    "shoham logic is a modal temporal logic , where the elements of a model are no longer  like in classical temporal logics  points in time , but rather pairs of points in time .",
    "any such pair  call it @xmath6 $ ] , where @xmath7 is not earlier than @xmath8  can be viewed as a ( closed ) time interval , that is , the set of all time points between @xmath8 and @xmath7 .",
    "hs logic does not assume anything about order  it can be discrete or continuous , linear or branching , complete or not .",
    "halpern and shoham introduce six modal operators , acting on intervals .",
    "their operators are `` begins '' @xmath9 , `` during '' @xmath0 , `` ends ''",
    "@xmath10 , `` meets ''",
    "@xmath11 , `` later '' @xmath12 , `` overlaps '' @xmath13 and the six inverses of those operators : @xmath14 , @xmath15 .",
    "it is easy to see that the set of operators is redundant .",
    "the , , more expressive  of them , which are @xmath16 and @xmath10 can define @xmath0 ( @xmath9 and @xmath10 suffice for that  a prefix of my suffix is my infix ) and @xmath12 ( here @xmath11 is enough ``later '' means `` meets an interval that meets '' ) .",
    "the operator @xmath13 can be expressed using @xmath10 and @xmath17 .    in their paper , halpern and shoham",
    "show that ( satisfiability of formulae of ) their logic is undecidable .",
    "their proof requires logic with five operators ( @xmath18 and @xmath11 are explicitly used in the formulae and , as we mentioned above , once @xmath18 and @xmath11 are allowed , @xmath0 and @xmath12 come for free ) so they state a question about decidable fragments of their logic .",
    "considerable effort has been put since this time to settle this question .",
    "first , it was shown @xcite that the @xmath2 fragment is undecidable . recently",
    ", negative results were also given for the classes @xmath19 , @xmath20 , @xmath21 , @xmath22 @xcite , and @xmath3 @xcite .",
    "another elegant negative result was that @xmath23 is undecidable over discrete orders @xcite .",
    "on the positive side , it was shown that some small fragments , like @xmath24 or @xmath25 , are decidable and easy to translate into standard , point - based modal logic @xcite .",
    "the fragment using only @xmath11 and @xmath26 is a bit harder and its decidability was only recently shown @xcite .",
    "obviously , this last result implies decidability of @xmath27 as @xmath12 is expressible by @xmath11 .",
    "another fragment known to be decidable is @xmath28 @xcite .",
    "the last interesting fragment of the halpern and shoham logic of unknown status was the , apparently very simple , fragment with the single operator @xmath0 ( , , during  ) , which we call here _ the logic of sub - intervals_. since @xmath0 does not seem to have much expressive power ( an example of a formula would be , , each morning i spend a while thinking of you  or , , each nice period of my life contains an unpleasant fragment  ) logic of sub - intervals was widely believed to be decidable .",
    "a number of decidability results concerning variants of this logic has been published .",
    "for example , it was shown in ( @xcite ) than satisfiability of formulae of logic of subintervals is decidable over dense structures . in @xcite .",
    "decidability is proved for ( slightly less expressive ) , , reflexive @xmath0  .",
    "the results in @xcite imply that @xmath0 ( as well as some richer fragments of the hs logic ) is decidable if we allow models , in which not all the intervals defined by the ordering are elements of the kripke structure .    in this paper we show that satisfiability of formulae from the @xmath0 fragment is undecidable over the class of finite orderings as well as over the class of all discrete orderings .",
    "our result subsumes the negative results for the discrete case for @xmath1 @xcite , @xmath2 @xcite , @xmath3 @xcite and @xmath4 , @xmath5 @xcite .",
    "our contribution consists of the proofs of the following two theorems :    [ main ] the satisfiability problem for the formulae of the logic of subintervals , over models which are suborders of the order @xmath29 , is undecidable .    since truth value of a formula",
    "is defined with respect to a model and an initial interval in this model ( see preliminaries ) , and since the only allowed operator is @xmath0 , which means that the truth value of a formula in a given interval depends only on the labeling of this interval and its subintervals theorem [ main ] can be restated as : _ the satisfiability problem for the formulae of the logic of subintervals , over finite models is undecidable _ , and it is this version that will be proved in section [ natural ] .    [ main - discrete ] the satisfiability problem for the formulae of the logic of sub - intervals , over all discrete models , is undecidable .",
    "* orderings . * as in @xcite , we say that a total order @xmath30 is _ discrete _ if each element is either minimal ( maximal ) or has a unique predecessor ( successor ) ; in other words for all @xmath31 if @xmath32 , then there exist points @xmath33 such that @xmath34 , @xmath35 and there exists no @xmath36 with @xmath37 or @xmath38 .",
    "an _ interval _ over @xmath41 is a pair @xmath42 $ ] with @xmath31 and @xmath43 .",
    "a _ labeling _ is a function @xmath44 , where @xmath45 is a set of all intervals over @xmath41 and @xmath46 is a finite set of variables .",
    "a structure of the form @xmath47 is called a _ model_.        1 .   for all @xmath49 we have @xmath50 \\models v$ ] iff @xmath51)$ ] .",
    "@xmath50 \\models \\neg \\varphi$ ] iff @xmath52 \\not \\models \\varphi$ ] .",
    "@xmath50 \\models \\varphi_1 \\wedge \\varphi_2 $ ] iff @xmath50   \\models \\varphi_1 $ ] and @xmath50   \\models \\varphi_2 $ ] .",
    "@xmath50 \\models \\langle d\\rangle \\varphi$ ] iff there exists an interval @xmath53 $ ] such that @xmath54 \\models \\varphi$ ] , @xmath55 , @xmath56 , and @xmath42\\neq [ a ' , b']$ ] . in that case",
    "we say that @xmath42 $ ] _ sees _",
    "@xmath57 $ ] .      a formula @xmath63 is said to be _",
    "satisfiable _ in a class of orderings @xmath64 if there exist a structure @xmath65 , a labeling @xmath66 , and an interval @xmath42 $ ] , called _ the initial interval _ , such that @xmath67 \\models \\varphi$ ] .",
    "a formula is satisfiable in a given ordering @xmath41 if it is satisfiable in @xmath68 .        * our representation .",
    "* we imagine the kripke structure of intervals of a finite ordering as a directed acyclic graph , where intervals are vertices and each interval @xmath42 $ ] with the length greater that @xmath69 has two successors : @xmath70 $ ] and @xmath71 $ ] .",
    "each level of this representation contains intervals of the same length ( see fig .",
    "[ exmple ] ) .        in this section",
    "we will , for a given two - counter finite automaton ( minsky machine ) @xmath73 , define a regular language @xmath74 whose words will almost for an explanation what we mean by  almost  . ]",
    "encode the computation of @xmath73 ( beginning from the empty counters ) .",
    "the alphabet @xmath78 of @xmath72 will consist of all the elements of @xmath79 ( jointly called _ states _ ) and of all the subsets ( possibly empty ) of @xmath9 which consist of at most 4 elements : at most one of them from @xmath80 , at most one from @xmath81 , at most one from @xmath82 , and at most one from @xmath83 .",
    "symbols of @xmath78 containing @xmath84 or @xmath85 ( @xmath86 or @xmath87 ) will be called _ first _",
    "_ second _ ) _ counters_. symbols of @xmath78 containing @xmath88 or @xmath89 ( @xmath90 or @xmath91 ) will be called _ first _ ( resp . _",
    "second _ ) _ shadows _ ( or _ shadows of the first / the second counter _ ) .        by a _",
    "configuration _ we will mean a maximal sub - word of @xmath92 , whose first element is a state ( called _ the state of this configuration _ ) and which contains exactly one state ( so that @xmath92 is split into disjoint configurations ) .",
    "a configuration will be called _ even _ if its state is from @xmath75 and _ odd _ if it is from @xmath96 .    *",
    "odd and even configurations alternate in @xmath92 . *",
    "each configuration , except of the last one ( which only consists of the state ) contains exactly one first counter and exactly one second counter .",
    "if a configuration is even , then its first counter contains @xmath84 and its second counter contains @xmath86 . if a configurations is odd , then its first counter contains @xmath85 and its second counter contains @xmath87 .",
    "the first non - state symbol of the first configuration is both a first counter and a second counter .",
    "* the are no shadows in the first and the last configuration .",
    "each configuration , except of the first and the last , contains exactly one first shadow and exactly one second shadow .",
    "if a configuration is even , then its first shadow contains @xmath89 and its second shadow contains @xmath91 . if a configurations is odd , then its first shadow contains @xmath88 and its second shadow contains @xmath90 .",
    "it follows , from the conditions above , that if ( in a word from the language @xmath72 ) there is a counter containing @xmath84 ( @xmath97 ) then there is its shadow @xmath88 ( resp .",
    "@xmath98 ) in the subsequent configuration . call a sub - word beginning with first ( second ) counter and ending with its shadow _ a first _ ( resp . _",
    "second _ ) _ shade_. notice , that the above conditions imply in particular that each state ( except of the first one and last one ) is in exactly one first shade and in exactly one second shade .",
    "the last condition defining @xmath72 will depend on the instructions of the automaton @xmath73 .",
    "we say that a configuration has _ first _",
    "( _ second _ ) _ counter equal zero _ if the first non - state symbol of this configuration contains @xmath84 or @xmath85 ( resp",
    ". @xmath86 or @xmath87 ) .",
    "it is good to think , that the number of symbols before the first / second counter is the value of this counter in the given configuration .",
    "notice that the first configuration of a @xmath102 is indeed the initial configuration of @xmath11  its state is @xmath93 and both its counters equal 0 .",
    "since the format of an instruction of @xmath11 is : + if in state @xmath7 + the first counter + equals / does not equal 0 and + the second counter + equals / does not equal 0 + then change the state to @xmath103 and + decrease / increase / keep unchanged + the first counter and + decrease / increase / keep unchanged + the second counter .",
    "+      * if @xmath104 and @xmath106 are subsequent configurations in @xmath92 , and @xmath104 matches the assumption of an instruction @xmath105 , then : * * if @xmath105 changes the state into @xmath103 then the state of @xmath106 is @xmath103 .",
    "* * if @xmath105 orders the first ( second ) counter to remain unchanged , then the first ( resp .",
    "second ) counter in @xmath106 coincides with the first ( resp .",
    "second ) shadow in @xmath106 . * * if @xmath105 orders the first ( second ) counter to be decreased , then the first ( resp .",
    "second ) counter in @xmath106 is the direct predecessor of the first ( resp .",
    "second ) shadow in @xmath106 . * * if @xmath105 orders the first ( second ) counter to be increased , then the first ( resp .",
    "second ) counter in @xmath106 is the direct successor of the first ( resp .",
    "second ) shadow in @xmath106 .",
    "a.   automaton @xmath11 , started from the initial state @xmath93 and empty counters , accepts .",
    "b.   there exists a word @xmath107 and a natural number @xmath108 such that : * each configuration in @xmath92 ( except of the last one , consisting of a single symbol ) has length @xmath109 * each shade in @xmath92 has length @xmath108 ( this includes the two symbols in the two ends of a shade ) .    for the @xmath110 direction consider an accepting computation of @xmath11 and take @xmath108 as any number greater than all the numbers that appear on the two counters of @xmath11 during this computation . for the @xmath111 direction notice that the distance constraint from ( ii ) imply , that the distance between a state and the subsequent first ( second ) shadow equals the value of the first ( resp .",
    "second ) counter in the previous configuration . together with the last of the six conditions defining @xmath74",
    "this implies that the subsequent configurations in @xmath102 can indeed be seen as subsequent configurations in the valid computation of @xmath11 .",
    "since the halting problem for two - counter automata is undecidable , the proof of theorem [ main ] will be completed when we write , for a given automaton @xmath11 , a formula @xmath112 of the language of the logic of sub - intervals which is satisfiable ( in a finite model ) if and only if condition ( ii ) from lemma [ prawie ] holds .",
    "actually , what the formula @xmath112 is going to say is , more or less , that the word written ( with the use of the labeling function @xmath66 ) in the leaves of the model is a word @xmath92 as described in lemma [ prawie ] ( ii ) .",
    "the first problem we need to overcome is the symmetry of @xmath0  the operator does not see a difference between past and future , or between left and right , so how can we distinguish between the beginning of @xmath92 and its end ?",
    "we deal with this problem by introducing five variables @xmath118 and writing a formula @xmath113 which will be satisfied by an interval @xmath42 $ ] if @xmath119 $ ] is the only interval that satisfies @xmath12 and @xmath120 $ ] is the only interval that satisfies @xmath121 , or @xmath120 $ ] is the only interval that satisfies @xmath12 and @xmath119 $ ] is the only interval that satisfies @xmath121 , and if all the following conditions hold :    * any interval that satisfies @xmath12 satisfies also @xmath122 ; * each leaf is labeled either with @xmath123 or with @xmath124 or with @xmath125 ; * each interval labeled with @xmath123 or with @xmath124 or with @xmath125 is a leaf ; * if @xmath126 are three consecutive leaves of @xmath42 $ ] and if @xmath127 holds in @xmath36 , @xmath128 holds in @xmath129 and @xmath130 holds in @xmath131 then @xmath132 .    if @xmath133\\models \\phi_{\\mathrm{orient}}$ ] then the leaf of @xmath133 $ ] where @xmath12 holds ( resp . where @xmath121 holds )",
    "will be called the left ( resp . the right ) end of @xmath133 $ ] .",
    "let @xmath134 be a formula saying ( which is not hard to guess ) that exactly one variable from the set @xmath135 is true in the current interval .",
    "@xmath113 is a conjunction of the following formulae .",
    "a.   [ or1 ] @xmath60 ( ( [ d ] \\bot \\rightarrow exactly\\_one\\_of(\\{s_0 , s_1 , s_2\\ } ) \\wedge ( s_0 \\vee s_1 \\vee s_2 \\rightarrow [ d ] \\bot ) ) ) $ ] b.   [ or2 ] @xmath60 ( \\langle d \\rangle \\langle d \\rangle \\top \\rightarrow \\langle d \\rangle s_0 \\wedge \\langle d \\rangle s_1 \\wedge \\langle d \\rangle s_2)$ ] c.   [ or4p ] @xmath60 ( l \\rightarrow s_0)$ ] d.   [ or3 ] @xmath136 e.   [ or4 ] @xmath60 ( l \\rightarrow \\neg r)$ ] f.   [ or5 ] @xmath60 ( [ d][d]\\bot \\wedge \\langle d \\rangle l \\rightarrow \\neg \\langle d \\rangle s_2)$ ] g.   [ or6 ] @xmath137 ( [ d][d]\\bot \\wedge \\langle d \\rangle r \\rightarrow \\neg \\langle d \\rangle s_i)$ ]          formula ( [ or5 ] ) guarantees that no interval containing exactly 2 leaves , which is a super - interval of an interval labeled with @xmath12 , can contain a sub - interval labeled with @xmath138 .",
    "it implies that an interval labeled with @xmath12 can only have one super - interval containing exactly 2 leaves  if there were two , then their common super - interval containing 3 leaves would not have a sub - interval labeled with @xmath138 , what would contradict ( [ or2 ] ) .    finally , formula ( [ or6 ] ) , finally ,",
    "works like ( [ or5 ] ) but for @xmath121 .",
    "we have to use disjunction in this case since we do not know which @xmath127 is satisfied in the interval labeled with @xmath121 .",
    "there exists a formula @xmath143 of the @xmath0 fragment of halpern  shoham logic over alphabet @xmath144 that is satisfiable ( with respect to the valuation of the variables from @xmath145 ) if and only if the word , over the alphabet @xmath78 written in the leaves of the model , read from @xmath12 to @xmath121 , belongs to the language accepted by @xmath146 .      1 .   [ eoaf ] in every leaf , exactly one letter from @xmath78 is satisfied ( so there is indeed a word written in the leaves ) .",
    "each leaf is labeled with exactly one variable from @xmath145 .",
    "3 .   for each interval with the length @xmath147 ,",
    "if this interval contains an interval labeled with @xmath127 , with @xmath148 and with @xmath149 and another interval labeled with @xmath150 , and with @xmath151 , then @xmath152 .",
    "4 .   interval labeled with @xmath121 is labeled with such @xmath153 and @xmath148 that @xmath152 for some @xmath154 .",
    "5 .   [ eoal ] interval labeled with @xmath12 is labeled with @xmath155 .",
    "clearly , a model satisfies properties [ eoaf]-[eoal ] if and only if its leaves are labeled with an accepting run of @xmath156 on the word over @xmath157 written in its leaves .",
    "the formulae of the @xmath0 fragment of halpern  shoham logic expressing properties [ eoaf]-[eoal ] are not hard to write :    1 .",
    "@xmath62 ( ( [ d ] \\bot \\rightarrow exactly\\_one\\_of ( { \\sigma } ) ) \\wedge ( \\bigvee \\sigma \\rightarrow [ d ] \\bot ) ) $ ] 2 .",
    "@xmath62 ( ( [ d ] \\bot \\rightarrow exactly\\_one\\_of ( { \\cal q } ) ) \\wedge ( \\bigvee { \\cal q } \\rightarrow [ d ] \\bot))$ ] 3 .",
    "@xmath62 ( [ d][d ] \\bot \\wedge \\langle d \\rangle s_i \\wedge \\langle d \\rangle s_{i+1 \\texttt { mod } 3 } \\rightarrow \\bigvee_{\\langle q , a , q ' \\rangle \\in \\delta } \\langle d \\rangle ( s_i \\wedge q \\wedge a ) \\wedge \\langle d \\rangle ( s_{i+1 \\texttt { mod } 3 } \\wedge q'))$ ] , for each @xmath158 4 .",
    "@xmath62 ( r \\rightarrow \\bigvee_{\\langle q , a , q ' \\rangle \\in \\delta , q ' \\in \\cal f } ( q \\wedge a))$ ] 5 .",
    "@xmath62 ( l \\rightarrow q^0)$ ]          we still need to make sure , that there exists @xmath108 such that each configuration ( except of the last one ) has length @xmath109 and that each shade has the length exactly @xmath108 .",
    "let us start with :      so one can view a cloud as a set of all intervals of some fixed length .",
    "notice , that if the current interval has length @xmath162 then exactly @xmath163 leaves are reachable from this segment with the operator @xmath0 .",
    "we want to write a formula of the language @xmath0 fragment of halpern - shoham logic saying that @xmath8 is a cloud . in order to do that we use an additional variable @xmath131 .",
    "the idea is that an interval @xmath164 $ ] satisfies @xmath131 iff @xmath165 $ ] does not .",
    "1 .   @xmath166  there exists at least one point that satisfies @xmath8 .",
    "2 .   @xmath60 ( p \\rightarrow [ d ] \\neg p)$ ]  intervals labeled with @xmath8 can not contain intervals labeled with @xmath8 .",
    "3 .   @xmath62 ( ( \\langle d \\rangle p ) \\rightarrow ( \\langle d \\rangle ( p \\wedge e ) ) \\wedge ( \\langle d \\rangle ( p \\wedge \\neg e)))$ ]  each interval that contains an interval labeled with @xmath8 actually contains at least two such intervals  one labeled with @xmath131 and one with @xmath167 .",
    "we will prove that if an interval @xmath172 $ ] is labeled with @xmath8 , then also @xmath173 $ ] is labeled with @xmath8 .",
    "a symmetric proof shows that the same holds for @xmath174 $ ] , so all the intervals of length equal to @xmath175 , where @xmath175 is the length of @xmath176 $ ] , are labeled with @xmath8 .    this will imply that no other intervals can be labeled with @xmath8 and @xmath8 is indeed a cloud .",
    "this is because each such interval either has a length greater than @xmath175 , and thus contains an interval of length @xmath175 , and as such labeled with @xmath8 , or has a length smaller than @xmath175 , and is contained in an interval labeled by @xmath8 , in both cases contradicting ( ii ) .",
    "consider an interval @xmath172 $ ] labeled with @xmath8 .",
    "interval @xmath177 $ ] contains an interval labeled with @xmath8 , so it has to contain two different intervals labeled with @xmath8  one labeled with @xmath131 and the other one with @xmath167 .",
    "suppose without loss of generality that @xmath172 $ ] is the one labeled with @xmath131 , and let us call the second one @xmath178 $ ] .",
    "if @xmath179 , then @xmath180 $ ] is a sub - interval of @xmath172 $ ] and is labeled with @xmath8 , a contradiction .",
    "so @xmath181 .",
    "let us assume that @xmath182 .",
    "the interval @xmath183 $ ] must contain two different intervals labeled with @xmath8 .",
    "one of them is @xmath177 $ ] , and it can not contain another interval labeled with @xmath8 , so the other one must be a sub - interval of @xmath184 $ ] .",
    "but then it is a sub - interval of @xmath172 $ ] ( because @xmath185 ) which also is labeled with @xmath8  a contradiction .",
    "so @xmath186 .",
    "let us now concentrate on models which satisfy @xmath187 .",
    "since @xmath115 is satisfied then @xmath8 is a cloud .",
    "let @xmath109 denote number of leaves contained in the intervals that form the cloud .",
    "our goal is to write a formula @xmath116 that would guarantee the following properties :    1 .",
    "configurations and shades are not too short . if you see two states ( i.e. more than an entire configuration ) or an entire shade , then you must see a lot , at least @xmath108 leaves .",
    "so you must be high enough .",
    "higher than the cloud . 2 .   configurations and shades are not too long . if you only see an interior of a configuration ( i.e. you do not see states ) or an interior of some shade , then you do not see much , at most @xmath188 leaves .",
    "so you must be under the cloud .",
    "once we do that , the formula @xmath189 will be satisfiable if and only if there exists a word satisfying the conditions from lemma [ prawie ] ( ii )  it is straightforward how to translate such a word into a model of @xmath190 and vice versa .",
    "d. bresolin , d. della monica , v. goranko , a. montanari , g. sciavicco , decidable and undecidable fragments of halpern and shoham s interval temporal logic : towards a complete classification , in : proc . of 15th int .",
    "conf . on logic for programming , artificial intelligence , and reasoning ,",
    "5330 of lncs , springer , 2008 , pp .",
    "590 - 604 .",
    "d. bresolin , d. della monica , v. goranko , a. montanari , g. sciavicco , undecidability of interval temporal logics with the overlap modality , in : proc . of 16th international symposium on temporal representation and reasoning - time 2009 , ieee computer society press , 2009 , pp .",
    "88 - 95 .",
    "d. bresolin , d. della monica , v. goranko , a. montanari , g. sciavicco , undecidability of the logic of overlap relation over discrete linear orderings .",
    "proceedings of m4 m 6 : 6th workshop on methods for modalities , november 2009 .",
    "d. bresolin , v. goranko , a. montanari , p. sala , tableau - based decision procedures for the logics of sub - interval structures over dense orderings .",
    "journal of logic and computation , vol .",
    "20 , n. 1 , 2010 , pp .",
    "133 - 166 .",
    "d. bresolin , v. goranko , a. montanari , g. sciavicco , propositional interval neighborhood logics : expressiveness , decidability , and undecidable extensions , annals of pure and applied logic , vol.161(3 ) , 2009 , pp .",
    "289 - 304 .",
    "d. bresolin , a. montanari , p. sala , g. sciavicco , optimal tableaux for right propositional neighborhood logic over linear orders , in : proc . of the 11th european conference on logics in ai ,",
    "5293 of lnai , springer , 2008 , pp .",
    "62 - 75 .",
    "j. marcinkowski , j. michaliszyn , and e. kieronski , b and d are enough to make the halpern  shoham logic undecidable . in proc .",
    "37th international colloquium on automata , languages and programming , icalp 2010 , proceedings , part ii , lncs 6199 , pages 357 - 368 .",
    "a. montanari , i. pratt - hartmann and p. sala , decidability of the logic of the reflexive sub - interval relation over finite linear orders , time 2010 .",
    "a. montanari , g. puppis , p. sala , a decidable spatial logic with cone - shaped cardinal directions , in : 18th annual conference of the eacsl , vol .",
    "5771 of lncs , 2009 , pp .",
    "394 - 408 .",
    "a. montanari , g. puppis , p. sala , g. sciavicco , decidability of the interval temporal logic @xmath28 on natural numbers .",
    "in proc . of the 27th symposium on theoretical aspects of computer science ( stacs 2010 ) , pp",
    ". 597 - 608 ."
  ],
  "abstract_text": [
    "<S> the halpern  shoham logic is a modal logic of time intervals . </S>",
    "<S> some effort has been put in last ten years to classify fragments of this beautiful logic with respect to decidability of its satisfiability problem . </S>",
    "<S> we contribute to this effort by showing  what we believe is quite an unexpected result  that the logic of subintervals , the fragment of the halpern  </S>",
    "<S> shoham where only the operator `` during '' , or @xmath0 , is allowed , is undecidable over discrete structures . </S>",
    "<S> this is surprising as this logic is decidable over dense orders @xcite and its reflexive variant is known to be decidable over discrete structures @xcite . </S>",
    "<S> our result subsumes a lot of previous results for the discrete case , like the undecidability for @xmath1 @xcite , @xmath2 @xcite , @xmath3 @xcite , @xmath4 , @xmath5 , and so on @xcite . </S>"
  ]
}
{
  "article_text": [
    "in many applications , initial value problems of ordinary differential equations are given as _",
    "additively _ partitioned systems @xmath0 where the right - hand side @xmath1 is split into @xmath2 different parts with respect to , for example , stiffness , nonlinearity , dynamical behavior , and evaluation cost .",
    "additive partitioning also includes the special case of _ component _ partitioning where the solution vector is split into @xmath2 disjoint sets , @xmath3 , with the @xmath4-th set containing the components @xmath5 with indices @xmath6 .",
    "one defines a corresponding partitioning of the right hand side @xmath7 where @xmath8 is the @xmath9-th column of the identity matrix , and superscripts ( without parentheses ) represent vector components .",
    "a particular case is _ coordinate _ partitioning where @xmath10 and @xmath11 , @xmath12 : @xmath13 the development of runge - kutta ( rk ) methods that are tailored to the partitioned system   started with the early work of rice @xcite .",
    "hairer @xcite developed the concept of p - trees and laid the foundation for the modern order conditions theory for partitioned runge - kutta methods .",
    "the investigation of practical partitioned runge - kutta methods with implicit and explicit components @xcite was revitalized by the work of ascher , ruuth , and spiteri @xcite .",
    "additive runge - kutta methods have been investigated by cooper and sayfy @xcite and kennedy and carpenter @xcite , and partitioning strategies have been discussed by weiner @xcite .",
    "this work focuses on specialized schemes which exploit the different dynamics in the right hand sides @xmath14 ( e.g. , stiff and non - stiff ) , allow for arbitrarily high orders of accuracy , and posses good stability properties with respect to dissipative systems .",
    "the approach taken herein generalizes the additively partitioned runge - kutta family of methods @xcite by allowing for different stage values as arguments of different components of the right hand side .",
    "the paper is organized as follows .",
    "section [ sec : gark ] introduces the new family of generalized additively partitioned runge - kutta schemes .",
    "generalized implicit - explicit runge - kutta schemes are discussed in section [ sec : imex ] .",
    "a stability and monotonicity analysis is performed in section [ sec : stability ] .",
    "section [ sec : imim ] builds implicit - implicit generalized additively partitioned runge - kutta methods .",
    "conclusions are drawn in section [ sec : conclusions ] .",
    "in this section we extend additive runge - kutta to generalized additively partitioned runge - kutta schemes . the order conditions for this new class",
    "are derived using the n - tree theory of sanz - serna @xcite .",
    "kennedy and carpenter @xcite developed additive runge - kutta ( ark ) methods for systems with partitioned right hand sides  .",
    "one step of an ark scheme reads    [ eqn : ark ] @xmath15    the corresponding butcher tableau is @xmath16      the _ generalized additively partitioned runge - kutta _ ( gark )",
    "family of methods extends the traditional approach by allowing for different stage values with different components of the right hand side .",
    "one step of a gark scheme applied to solve reads :    [ eqn : gark ] @xmath17    the corresponding generalized butcher tableau is @xmath18 in contrast to traditional additive methods  @xcite different stage values are used with different components of the right hand side .",
    "the methods @xmath19 can be regarded as stand - alone integration schemes applied to each individual component @xmath20 .",
    "the off - diagonal matrices @xmath21 , @xmath22 , can be viewed as a coupling mechanism among components .",
    "for the special case of component partitioning a gark step reads    [ eqn : gark - componentwise ] @xmath23 \\begin{bmatrix } y_{n+1}^{\\{1\\ } } \\\\ \\vdots \\\\ y_{n+1}^{\\{n\\ } } \\end{bmatrix } & = &   \\begin{bmatrix } y_{n}^{\\{1\\ } } \\\\ \\vdots \\\\ y_{n}^{\\{n\\ } } \\end{bmatrix } + h \\begin{bmatrix } \\sum_{i=1}^{s^{\\{1\\ } } } b_{i}^{\\{1\\ } } f^{\\{1\\}}\\left(y_i^{\\{1\\}}\\right ) \\\\ \\vdots \\\\",
    "\\sum_{i=1}^{s^{\\{n\\ } } } b_{i}^{\\{n\\ } } f^{\\{n\\}}\\left(y_i^{\\{n\\}}\\right )   \\end{bmatrix}\\,.\\end{aligned}\\ ] ]    a gark scheme is called internally consistent if @xmath24    in order to understand internal consistency consider the system @xmath25 with the exact solution @xmath26^t$ ] .",
    "the gark stages are @xmath27 the internal consistency condition ensures that all components of the stage vectors are calculated at the same internal approximation times .",
    "we derive the gark order conditions by applying araujo , murua , and sanz - serna s n - tree theory @xcite to  , while taking into account the fact that the internal stages @xmath28 and the stage numbers @xmath29 depend on the partition @xmath14 .",
    "n - trees @xcite are a generalization of p - trees from the case of component partitioning   to the general case of right - hand side partitioning  .",
    "the set nt of n - trees consists of all butcher trees with colored vertices ; each vertex is assigned one of @xmath2 different colors corresponding to the @xmath2 components of the partition .",
    "similar to regular butcher trees each vertex is also assigned a label .",
    "the order @xmath30 is the number of nodes of @xmath31 .",
    "the empty n - tree is denoted by @xmath32 .",
    "the n - tree with a single vertex of color @xmath33 is denoted by @xmath34}$ ] .",
    "the n - tree @xmath31 with @xmath35 and a root of color @xmath33 can be represented as @xmath36^{[\\nu]}$ ] , where @xmath37 are the non - empty subtrees ( n - trees ) arising from removing the root of @xmath38 .",
    "similar to regular butcher trees one denotes by @xmath39 the number of symmetries of @xmath31 , and by @xmath40 the density defined recursively by @xmath41}\\right ) & = & 1 , \\quad \\nu=1,\\ldots , n , \\\\",
    "\\gamma(u )   & = & \\rho(u ) \\gamma(u_1 ) \\cdots",
    "\\gamma(u_m ) \\text { for } u=[u_1,\\ldots , u_m]^{[\\nu]}.\\end{aligned}\\ ] ]    an elementary differential @xmath42 is associated to each n - tree @xmath31 .",
    "the elementary differentials are defined recursively for each component @xmath43 as follows : @xmath44}\\right)(y ) & = & f^{[\\nu]i}(y ) , \\quad \\nu=1,\\dots , n\\ , , \\\\",
    "f^i(u)(y ) & = & \\sum_{i_1,\\ldots , i_m=1}^{d }   \\frac{\\partial^m\\ , f^{[\\nu]i}}{\\partial y^{i_1 } \\cdots \\partial y^{i_m}}(y ) f^{i_1}(u_1)(y ) \\cdots f^{i_m}(u_m)(y ) \\\\ & & \\quad \\textnormal{for } ~~u=[u_1,\\ldots , u_m]^{[\\nu]}\\,.\\end{aligned}\\ ] ] an nb - series is a formal power expansion @xmath45 where @xmath46 is a mapping that assigns a real number to each n - tree . for example",
    ", the exact solution of can be written as the following nb - series @xcite @xmath47    the order conditions for a gark method are obtained from the order conditions of ordinary runge - kutta methods .",
    "the usual labeling of the runge - kutta coefficients ( subscripts @xmath48 ) is accompanied by a corresponding labeling of the different partitions for the n - tree ( superscripts @xmath49 ) .",
    "let @xmath50 be a vector of ones of dimension @xmath51 , and @xmath52 .",
    "the specific conditions for orders one to four are as follows .",
    "[ eqn : gark - order - conditions-1-to-4 ] @xmath53    here , and throughout this paper , the matrix and vector multiplication is denoted by dot ( e.g. , @xmath54 is a dot product ) , while two adjacent vectors denote component - wise multiplication ( e.g. , @xmath55 is a vector of element - wise products ) .",
    "these order conditions are given in element - wise form in appendix [ sec : oder - conditions - detailed ] .",
    "we derive the nb - series of the solution of the gark scheme following the approach in  @xcite for the nb - series of ark schemes .",
    "the gark solution , the stage vectors , and the stage function values are expanded in nb - series @xmath56 from we have that the method gark is of order @xmath57 iff @xmath58    the coefficients @xmath59 , @xmath60 and @xmath61 are related through the numerical equations . for @xmath62 relation yields    [ eqn : nbtrees ] @xmath63 and",
    "relation gives @xmath64 from the properties of a derivative of a b - series on has @xmath65^{\\{q\\}}\\ , ,   \\end{array } \\right .",
    "\\\\ \\nonumber & & i=1,\\ldots , s^{\\{m\\ } } , \\quad m , q=1,\\ldots , n\\,.\\end{aligned}\\ ] ]    using equations ",
    "recursively , we have that for @xmath66^{\\{q\\}}$ ] @xmath67 equation becomes @xmath68^{\\{q\\}}~~ \\textnormal{and}~~q \\ne m\\ , , \\\\ 1 \\quad \\textnormal{for}~~ u = \\tau^{\\{m\\}}\\ , , \\\\",
    "\\sum_{j_1,\\ldots , j_\\ell=1}^{s^{\\{m\\ } } } a_{i , j_1}^{\\{m,\\nu_1\\ } } \\cdots   a_{i , j_\\ell}^{\\{m,\\nu_\\ell\\ } } \\mathbf{g}_{j_1}^{\\{\\nu_1\\}}(u_1 ) \\cdots \\mathbf{g}_{j_\\ell}^{\\{\\nu_\\ell\\}}(u_\\ell )   \\\\",
    "\\qquad   \\textnormal{for}~~ u = [ u_1,\\ldots , u_\\ell]^{\\{m\\}}~~ \\textnormal{and}~~\\textnormal{color(root}(u_j ) ) = \\nu_j\\ , ,   \\end{array } \\right . \\\\ \\nonumber & & i=1,\\ldots , s^{\\{m\\ } } , \\quad m=1,\\ldots , n\\,.\\end{aligned}\\ ] ] from we have @xmath69^{\\{m\\}}\\ , .",
    "\\ ] ]    for a regular runge - kutta method we ignore the coloring of the tree nodes and consider @xmath70 , where @xmath71 are the regular butcher trees .",
    "the nb - series expansions are regular b - series expansions @xmath72 whose coefficients are given by @xmath73^{\\{\\bullet\\}}\\ , ,   \\end{array } \\right .   \\\\",
    "\\nonumber & & \\quad   i=1,\\ldots , s\\ , , \\\\",
    "\\label{eqn : btrees - solution - expanded } \\mathbf{c}(u ) & = & \\sum_{i=1}^{s } b_i \\mathbf{f}_i(u).\\end{aligned}\\ ] ] the rk method has order @xmath57 iff @xmath74    for any n - tree @xmath31 the recurrences and mimic the b - series relations and , respectively . each coefficient subscript in , is paired with a unique color superscript in and , for example @xmath75 , @xmath76 , and @xmath77 .",
    "the nb - series coefficient @xmath78 written in terms of the gark scheme coefficients @xmath79 , @xmath80 has precisely the same form as the b - series coefficient @xmath81 written in terms of the rk scheme coefficients @xmath82 , @xmath83 , with color superscripts added to match the corresponding subscripts .",
    "( the calculation of @xmath81 ignores the vertex coloring of @xmath38 . )",
    "since has to hold for any coloring of the vertices of @xmath31 , the corresponding rk condition has to hold for arbitrary sets of superscripts , provided that they are paired correctly with the coefficient subscripts .    for n - trees @xmath31 with all vertices of the same color @xmath20 one obtains the traditional rk order conditions for the individual method @xmath84 .",
    "as an example consider the order conditions for equal superscripts @xmath85 .",
    "therefore a necessary condition for a gark method to have order @xmath57 is that each individual component method has order @xmath57 . in addition , the gark method needs to satisfy the coupling conditions resulting from trees with vertices of different colors .    for internally consistent gark methods",
    "the order conditions simplify considerably .",
    "conditions , , and become @xmath86 and correspond to order two conditions , and to the first order three condition of each individual component method ( @xmath87 , @xmath88 ) , @xmath89 .    condition becomes @xmath90 and gives raise to @xmath2 order three conditions for each component method , and @xmath91 coupling conditions . compare this with the @xmath92 coupling conditions in the absence of internal consistency .",
    "the @xmath93 order four conditions  reduce to the following @xmath94 equations @xmath95",
    "we now focus on systems with a two - way partitioned right hand side @xmath96 where @xmath97 is non - stiff and @xmath98 is stiff .",
    "an implicit - explicit ( imex ) gark scheme is a two way partitioned method where one component method @xmath99 is explicit , and the other one @xmath100 implicit :    [ eqn : imexrk ] @xmath101    the corresponding generalized butcher tableau is @xmath102 with @xmath103 for all @xmath104 , where @xmath105^t \\in { { \\mathbbm r}}^{s^{\\{\\nu\\ } } } $ ] .    in",
    "we use @xmath106 with @xmath107 lower triangular and @xmath108 strictly lower triangular .",
    "we obtain @xmath109 , @xmath110 , and recover the classical imex rk of ascher , ruuth , and spiteri @xcite :    [ eqn : classical - imexrk ] @xmath111    in we use @xmath112 with @xmath107 lower triangular and @xmath108 strictly lower triangular , to obtain @xmath109 , and the interesting family of schemes :    [ eqn : transposed - imexrk ] @xmath113    the low storage imex methods recently presented by higueras and roldan @xcite can also be formulated as imex - gark schemes .",
    "the gark order conditions in matrix form are given in .",
    "each of the implicit and explicit methods @xmath114 and @xmath115 has to satisfy the corresponding order conditions for @xmath116 . in addition , two coupling conditions are required for second order , and 12 coupling conditions are required for third order accuracy .",
    "these conditions are listed in appendix [ sec : oder - conditions - imex ] .",
    "the gark internal consistency condition reads @xmath117 these conditions are automatically satisfied in the case of classical - transposed imex rk methods . in case of classical imex",
    "rk equations are equivalent to @xmath118 .    assuming that both the implicit and the explicit methods have order at least three , implies that the the second order coupling conditions are automatically satisfied .",
    "the third order coupling conditions reduce to : @xmath119    assume that the implicit and explicit methods have order at least four . with the order conditions ",
    "reduce to the following order four coupling relations : @xmath120 these order conditions are listed explicitly in appendix [ sec : oder - conditions - imex-4 ] .",
    "additional simplifying assumptions @xmath121 further reduce the number of order conditions ; these are are listed in appendix [ sec : oder - conditions - imex-4 ] .",
    "consider now the classical - transposed methods and assume that both the explicit and the implicit method have order three .",
    "since holds , the remaining third order coupling conditions read :    @xmath122    assuming that the explicit and implicit methods have each order at least four , the order four coupling conditions are : @xmath123 if , in addition , @xmath124 and @xmath125 , then the third order coupling conditions are automatically satisfied .",
    "the remaining order four coupling conditions read : @xmath126    [ [ example - an - order - three - imex - method ] ] example : an order three imex method + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the implicit part is kvaerno s four stages , order three method ( * ? ? ?",
    "* esdirk 3/2 ) : @xmath127 @xmath128 @xmath129\\ , , \\quad \\mathbf{c}^ { { \\ { \\textsc{i}\\ } } } = \\begin{bmatrix }                       0\\\\     0.871733043016918\\\\     1\\\\     1 \\end{bmatrix}\\,.\\ ] ] the explicit method has @xmath130 , @xmath131 , and @xmath132    [ [ example - an - order - four - imex - method ] ] example : an order four imex method + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the implicit part is kvaerno s five stages , order four method ( * ? ? ?",
    "* esdirk 4/3 ) : @xmath133 with @xmath134   \\ , , \\quad \\mathbf{c } = \\begin{bmatrix }           0 \\\\     1.145632124964268 \\\\     0.597104987652310 \\\\     1 \\\\     1   \\end{bmatrix }   \\,,\\ ] ] together with the explicit method @xmath135 all other coefficients are zero . the above form a transposed - classical imex rk method of order four .",
    "we consider the prothero - robinson ( pr ) @xcite test problem written as a split system @xmath136 where the exact solution is @xmath137 .",
    "an imex - gark method is pr - convergent with order @xmath57 if its application to ( [ prothero - robinson ] ) gives a solution whose global error decreases as @xmath138 for @xmath139 and @xmath140 .",
    "[ thm : pr - convergence ] consider the imex - gark method of order @xmath57 .",
    "assume that the implicit component has a nonsingular coefficient matrix @xmath141 , and an implicit transfer function stable at infinity , @xmath142 assume also that the additional order conditions hold : @xmath143 for @xmath144 , @xmath145 .",
    "then the imex - gark method is pr - convergent with order :    * @xmath146 if @xmath147 , and * @xmath20 if @xmath148 .",
    "the method applied to the scalar equation ( [ prothero - robinson ] ) reads    [ eqn : imex - on - pr ] @xmath149    here @xmath150^t\\ , , \\\\",
    "\\phi^ { { \\ { \\textsc{i}\\ } } } & = &   \\phi\\left(t_{n-1 } + \\mathbf{d}^ { { \\ { \\textsc{i}\\ } } } \\ , h \\right ) = \\left [   \\phi(t_{n-1 } + d_1^ { { \\ { \\textsc{i}\\ } } } \\ , h ) , \\ldots,\\phi(t_{n-1 } + d_{s^ { { \\ { \\textsc{i}\\ } } } } ^ { { \\ { \\textsc{i}\\ } } } \\ , h ) \\right]^t\\ , , \\\\\\end{aligned}\\ ] ] where @xmath151 , @xmath152 are the stage approximation times . due to the structure of the test problem",
    ", the method uses an explicit approach for the time variable , therefore @xmath153 the exact solution is expanded in taylor series about @xmath154 : @xmath155 where the vector power @xmath156 is taken componentwise .",
    "consider the global errors @xmath157 write the stage equation in terms of the exact solution and global errors , and use the taylor expansions to obtain @xmath158 similarly , write the solution equation ( [ eqn : imex - sol2 ] ) in terms of the exact solution and global errors : @xmath159 where the stability function of the implicit component method is @xmath160 since the explicit component method ( by itself ) has at least order @xmath57 , it follows from and the explicit order conditions that @xmath161 consequently , the global error recurrence reads @xmath162 for @xmath163 @xmath164    if conditions hold we infer from that @xmath165 for @xmath144 .",
    "the global error recurrence reads @xmath166 this gives the desired result .",
    "if one defines the test problem such that the time is an implicit variable then becomes @xmath167 equation is satisfied automatically by the imex coupling conditions of order @xmath57 .",
    "the additional order conditions become @xmath168      consider now the semi - linear ( sl ) problem @xmath169 where @xmath170 is smooth and non - stiff .",
    "an imex - gark method is sl - convergent with order @xmath57 if its application to ( [ semi - linear ] ) gives a solution whose global error decreases as @xmath138 for @xmath139 and @xmath140 .",
    "[ thm : sl - convergence ] consider an internally consistent imex - gark method of order @xmath57 .",
    "assume that the implicit component has a nonsingular coefficient matrix @xmath141 , and an implicit transfer function strictly stable at infinity , @xmath171 assume also that the additional order conditions hold :    [ eqn : sl - order - conditions ] @xmath172    for @xmath145 .",
    "then the imex - gark method is sl - convergent with order @xmath146 .",
    "the exact solution is expanded in taylor series about @xmath154 : @xmath173 application of the method to problem gives @xmath174 insert the exact solutions in the numerical scheme to obtain @xmath175 where @xmath176 and @xmath177 .",
    "the exact solutions satisfy the numerical scheme only approximately .",
    "the residuals are as follows : @xmath178 for the solution equation we have that @xmath179 where the last equality follows from the order @xmath57 conditions for the implicit and explicit components .",
    "consider the global errors @xmath180 relations for these errors are obtained by subtracting from : @xmath181 using the mean function theorem , @xmath182 the error equations become    @xmath183    @xmath184    inserting into and rescaling gives @xmath185 which for @xmath163 gives the following recurrence for the global error : @xmath186 we have that @xmath187 where the last equality follows from the additional order conditions .",
    "since @xmath188 the global error recurrence becomes @xmath189 which gives the desired result in the limit @xmath190 .",
    "the following extension of the stiff accuracy concept @xcite offers a convenient way to satisfy the additional order conditions and .",
    "a gark method is _ stiffly accurate _ if @xmath191    note that stiff stability can be formulated with respect to any component method @xmath20 by replacing @xmath2 with @xmath20 in .    a stiffly accurate imex - gark satisfies @xmath192 and consequently @xmath193 the prothero - robinson order conditions are equivalent to @xmath194 and therefore to @xmath195 the conditions are automatically satisfied for @xmath196 as they are part of the explicit component order conditions . for a stiffly accurate imex method applied to prothero - robinson with implicit time",
    "the order conditions are equivalent to @xmath197 and is satisfied automatically for @xmath198 due to the imex coupling conditions of order @xmath57 .",
    "thus a stiffly accurate method is pr - convergent with order @xmath199 regardless of the form of the test problem .    for a stiffly accurate imex - gark",
    "the semi - linear oder conditions read @xmath200 and are satisfied automatically through the explicit order conditions .",
    "in this section a stability and monotonicity analysis is performed .",
    "we derive a linear stability theory , as well as nonlinear stability theories for both dispersive and coercive problems .",
    "we apply the gark scheme to the linear scalar test problem @xmath201 with @xmath202 one obtains @xmath203 denote @xmath204 and @xmath205 we have that @xmath206 where the stability function can be written compactly as @xmath207    consider a stiffly accurate gark method and assume that @xmath208 for @xmath209 .",
    "we have @xmath210 assume that the system integrated with the stiffly accurate component is very stiff , @xmath211 .",
    "then the _ entire _ gark stability function becomes zero , @xmath212 .",
    "we now study the nonlinear stability of gark methods applied to partitioned systems where each of the component functions is dispersive with respect to the same scalar product @xmath213 : @xmath214 consider two solutions @xmath215 and @xmath216 of , each starting from a different initial condition .",
    "equation implies that @xmath217 and consequently the norm of the solution difference @xmath218 is non - increasing , @xmath219 .",
    "it is desirable that the difference of the corresponding numerical solutions is also non - increasing , @xmath220 .",
    "the analysis is carried out in the norm associated with the scalar product in .",
    "several matrices are defined from the coefficients of for @xmath221 : @xmath222 with @xmath223 , @xmath224 , and @xmath225 the following definition and analysis generalize the ones in @xcite .",
    "a generalized additive runge - kutta method is algebraically stable if the weight vectors are non - negative    @xmath226    and the following matrix is non - negative definite : @xmath227    we have the following result .",
    "an algebraically stable gark method applied to a partitioned system with dispersive component functions is unconditionally nonlinearly stable , in the sense that the difference of any two numerical solutions in non - increasing @xmath228 for any step size @xmath229 .",
    "the difference between solutions @xmath230 advances in time as follows :    @xmath231    where @xmath232 from we get @xmath233 from it follows that @xmath234 substituting into leads to @xmath235 equation can be written in the equivalent form @xmath236 where @xmath237^t.\\ ] ] from and the positive definiteness of @xmath238 we have that @xmath239 the positivity of the weights and dispersion condition give the desired result : @xmath240    a gark method is _ stability - decoupled _ if @xmath241    for stability decoupled gark methods the interaction of different components does not influence the overall nonlinear stability . if each of the component methods is nonlinearly stable , perhaps under a suitable step size restriction , then the overall method is nonlinearly stable ( under a step size restriction that satisfies each of the components ) . in particular , if each of the component runge - kutta scheme is algebraically stable @xmath242 then equation shows that is a sufficient condition for the algebraic stability of the gark scheme .",
    "equation shows that the nonlinear stability of each of the component methods is sufficient to obtain a nonlinear stable gark scheme in the case of component partitioning .",
    "next , consider partitioned systems where each of the component functions is coercive @xcite : @xmath243    consider a partitioned system with coercive component functions solved by a gark method .",
    "assume that there exist @xmath244 such that the following matrix is positive definite @xmath245 where @xmath238 was defined in .",
    "then the solution is conditionally nonlinearly stable , in the sense that @xmath246 , under the step size restriction @xmath247    equation and condition yield @xmath248 from the positive definiteness assumption @xmath249 we see that if @xmath250 for all @xmath251 then @xmath252 .",
    "this proves the desired result , which extends the one given in @xcite for classical additive runge - kutta methods .",
    "if the gark method is stability decoupled then the weights @xmath253 in are chosen independently for each component . in this case",
    "each component method , applied to the corresponding subsystem , is conditionally stable under a step restriction @xmath254 .",
    "the gark method s step size restriction is given by the bounds for individual components , @xmath255 , i.e. , no additional stability restrictions are imposed on the step size .",
    "we construct a second order imex - gark method where the implicit and explicit parts have different numbers of stages .",
    "the method has a free parameter denoted @xmath256 .",
    "the implicit method    @xmath257    is second order accurate and algebraically stable since @xmath258 the explicit method is :    @xmath259\\ , , \\quad \\mathbf{b}^ { { \\ { \\textsc{e}\\ } } } =   \\left[\\begin{array}{c } \\frac{1}{4}\\\\ \\frac{1}{2}\\\\ \\frac{1}{4 } \\end{array}\\right ] \\ , , \\quad \\mathbf{c}^ { { \\ { \\textsc{e } , \\textsc{e}\\ } } } =    \\left[\\begin{array}{c } 0\\\\ \\frac{1}{2}\\\\ 1 \\end{array}\\right ]    \\,.\\ ] ] the explicit method is conditionally stable for coercive problems .",
    "a good value of the free parameter for stability is @xmath260 for which holds with @xmath261 .",
    "the coupling coefficients are @xmath262\\ , , \\quad \\mathbf{c}^ { { \\ { \\textsc{e } , \\textsc{i}\\ } } } = \\mathbf{c}^ { { \\ { \\textsc{e } , \\textsc{e}\\ } } } = \\left[\\begin{array}{c } 0\\\\ \\frac{1}{2}\\\\ 1 \\end{array}\\right]\\,,\\ ] ] and @xmath263\\ , , \\quad \\mathbf{c}^ { { \\ { \\textsc{i } , \\textsc{e}\\ } } } = \\mathbf{c}^ { { \\ { \\textsc{i } , \\textsc{i}\\ } } } = \\left[\\begin{array}{c } \\frac{1}{4}\\\\ \\frac{3}{4 } \\end{array}\\right]\\,.\\ ] ]    the imex - gark method is stability - decoupled @xmath264^t   \\mathbf{b}^ { { \\ { \\textsc{i}\\ } } } + \\mathbf{b}^ { { \\ { \\textsc{e}\\ } } } \\mathbf{a}^ { { \\ { \\textsc{e } , \\textsc{i}\\ } } } -   \\mathbf{b}^ { { \\ { \\textsc{e}\\ } } } \\left[\\mathbf{b}^ { { \\ { \\textsc{i}\\ } } } \\right]^t = \\mathbf{0}\\,.\\ ] ] this property , and the algebraic stability of the implicit part , imply that the gark method is nonlinearly stable under the same step size restriction for which the explicit component is nonlinearly stable ( e.g. , for @xmath260 we have @xmath265 ) .",
    "this imex - gark scheme is represented compactly by its generalized butcher tableau as :    @xmath266      this section studies the contractivity and monotonicity of the generalized additively partitioned runge - kutta methods .",
    "we are concerned with partitioned systems where there exist @xmath267 such that @xmath268 this implies that condition holds for any @xmath269 , i.e. , for each individual subsystem @xmath4 the solution of one forward euler step is monotone under this step size restriction .",
    "the condition also implies that the system has a solution of non increasing norm .",
    "to see this write an euler step with the full system as a convex combination @xmath270 if @xmath271 , and consequently @xmath272 @xcite .",
    "we seek to construct gark schemes which guarantee a monotone numerical solution @xmath273 for under suitable step size restrictions .    a comprehensive study of contractivity of runge - kutta methods is given in @xcite .",
    "step size conditions for monotonicity are discussed in @xcite .",
    "strong stability preserving methods suitable for hyperbolic pdes are reviewed in @xcite .",
    "monotonicity for runge - kutta methods in inner product norms is discussed in @xcite .",
    "this study follows the approach of higueras and co - workers , who have extended the monotonicity theory to additive runge - kutta methods @xcite .",
    "the scheme can be represented in matrix form as    [ eqn : genaddrk - matrix ] @xmath274    using notation and @xmath275 equations become @xmath276 the following definitions extend the corresponding ones from @xcite .",
    "let @xmath277 and @xmath278 a gark scheme defined by @xmath279 is called _ absolutely monotonic _",
    "( a.m. ) at @xmath280 if    [ eqn : am - conditions ] @xmath281    where @xmath282 . here",
    "all the inequalities are taken component - wise .",
    "the region of absolute monotonicity of the gark scheme is @xmath283 \\times \\dots \\times \\left[0,r^{\\{n\\}}\\right ] \\right\\}\\,.\\ ] ]    consider the gark scheme defined by @xmath284 and a point in the interior of its absolute monotonicity region @xmath285 for any step size obeying the restriction @xmath286 the stage values and the solution of are monotonic    [ eqn : monotonicity - conclusions ] @xmath287    in practice we are interested in the largest upper bound for the time step that ensures monotonicity .",
    "the proof is a direct extension of the corresponding one for classical additively partitioned runge - kutta methods given in @xcite .",
    "construct the matrix @xmath288 as in .",
    "add the same quantity @xmath289 to both sides of to obtain @xmath290 using the notation of this relation can be written in the equivalent form @xmath291 denote a vector of norms by @xmath292 since @xmath293 we have that @xmath294 and @xmath295 .",
    "taking norms in leads to @xmath296 under the step size restriction we have @xmath297 for any @xmath298 , and from @xmath299 it follows that @xmath300 and @xmath301 multiplication by the matrix @xmath302 , whose entries are all non - negative , implies that @xmath303 and the monotonicity relation follows .",
    "for @xmath304 we have @xmath305 which we write in the equivalent form @xmath306 where the extra stage does not contribute to the final solution .",
    "in particular , for classical imex rk we have @xmath307 consequently @xmath308 with @xmath309 we have @xmath310 and @xmath311 gark absolute monotonicity conditions are equivalent to the absolute traditional additive rk monotonicity conditions obtained by higueras @xcite",
    "@xmath312    here we have @xmath313 and @xmath314 @xmath315 the gark absolute monotonicity conditions lead to @xmath316    consider the following second order imex - gark scheme",
    ". the explicit method has order two , is strong stability preserving , and has an absolute stability radius @xmath317    [ eqn : imex2-monotone ]    @xmath318    the implicit method has order two , is stiffly accurate , and has an absolute stability radius @xmath319 .",
    "the coefficients are @xmath320 and @xmath321 the two methods can not be paired as a classical imex runge - kutta method .",
    "the following coupling terms @xmath322    ensure that the gark scheme is second order .",
    "this can be seen from the fact that the internal consistency conditions are satisfied .",
    "the coupling has one free parameter @xmath323 . for @xmath324",
    "the imex scheme is of transposed - classical type .",
    "different values of @xmath323 lead to different regions of monotonicity , as illustrated in figure [ fig : imex2-monotone ] .",
    "a numerical search has revealed that the largest region is obtained for @xmath325 .",
    "the method has the following generalized butcher tableau :    @xmath326    monotonicity conditions for several multirate and partitioned explicit runge - kutta schemes are also discussed by hundsdorfer , mozartova , and savcenco in a recent report @xcite .",
    "we now consider systems with two way partitioned right hand sides where both components @xmath97 and @xmath98 are stiff .",
    "we apply a two way partitioned gark method    [ eqn : imimrk ] @xmath327    the scheme has the following characteristics :    * the discretization is implicit - implicit ( imim ) ; stages are implicit in @xmath328 , while stages are implicit in @xmath329 .",
    "* one solves in succession nonlinear subsystems corresponding to each individual component . *",
    "if each of the implicit schemes is algebraically stable , and the gark scheme is stability decoupled , then the separation of subsystem solutions does not affect the algebraic stability of the overall method .",
    "we consider a pair of dirk schemes and compute the corresponding coupling conditions .",
    "the first method is second order accurate and algebraically stable with @xmath330    @xmath331\\,,\\quad \\mathbf{b}^{\\{1\\ } }    = \\left[\\begin{array}{c } \\frac{1}{4}\\\\ \\frac{3}{4 } \\end{array}\\right]\\ , , \\quad \\mathbf{c}^{\\{1,1\\ } }   = \\left[\\begin{array}{c } \\frac{1}{8}\\\\ \\frac{5}{8 } \\end{array}\\right]\\,.\\ ] ] the second method is second order accurate and algebraically stable with @xmath332 @xmath333\\ , , \\quad \\mathbf{b}^{\\{2\\ } }   =    \\left[\\begin{array}{c } \\frac{2}{3}\\\\ \\frac{1}{3 } \\end{array}\\right]\\ , , \\quad \\mathbf{c}^{\\{2,2\\ } } =    \\left[\\begin{array}{c } \\frac{1}{3}\\\\ \\frac{5}{6 } \\end{array}\\right]\\,.\\ ] ] the coupling coefficients @xmath334\\ , , \\quad \\mathbf{c}^{\\{1,2\\ } } = \\left[\\begin{array}{c } 0\\\\ \\frac{2}{3 } \\end{array}\\right]\\,,\\ ] ] and @xmath335\\ , , \\quad \\mathbf{c}^{\\{2,1\\ } }   = \\left[\\begin{array}{c } \\frac{1}{4}\\\\ 1 \\end{array}\\right]\\,,\\ ] ] ensure that the gark method is second order accurate and is stability - decoupled , @xmath336 .",
    "the generalized butcher tableau of the scheme reads : @xmath337    the method proceeds as follows : @xmath338 where in each stage one nonlinear system is solved for the underlined variable .",
    "this work develops a generalized additive runge - kutta family of methods .",
    "the new gark schemes extend the class of additively partitioned runge - kutta methods by allowing for different stage values as arguments of different components of the right hand side .",
    "the theoretical investigations develop order conditions for the gark family using the nb - series theory .",
    "we carry out linear and nonlinear stability analyses , extend the definition of algebraic stability to the new generalized family of schemes , and show that it is possible to construct stability - decoupled methods .",
    "we also perform a monotonicity analysis , extend the concept of absolute monotonicity to our new family , and prove monotonic behavior under step size restrictions .",
    "we develop implicit - explicit gark schemes in the new framework .",
    "we show that classical implicit - explicit runge - kutta methods are a particular subset , and develop a new set of transposed - classical schemes . a theoretical investigation of the stiff convergence motivates an extension of the stiff accuracy concept .",
    "we construct implicit - implicit gark methods where the nonlinear system at each stage involves only one component of the system .",
    "future work will search for practical methods of high order , and will test their performance on relevant problems . partitioned implicit - implicit methods with the same coefficients on the diagonal of each method ( sdirk type )",
    "are desirable , as are orders higher than two and a partitioning of the right hand side into three or more components .",
    "also stiffly accurate methods with @xmath339 and @xmath340 when @xmath341 are desirable for systems driven by multiple stiff physical processes .",
    "we are developing multirate schemes @xcite as well as symplectic schemes @xcite based on the generalized additive runge - kutta framework presented here .",
    "10    , _ symplectic methods based on decompositions _ , siam journal on numerical analysis , 34 ( 1997 ) , pp .",
    "19261947 .    , _ additive runge - kutta methods for stiff ordinary differential equations _ , mathematics of computation , 40 ( 1983 ) , pp .",
    "207218 .    , _",
    "contractivity / monotonicity for additive runge - kutta methods : inner product norms _ , applied numerical mathematics , 56 ( 2006 ) , pp .",
    "862878 .    , _ strong stability - preserving high - order time discretization methods _ , siam review , 43 ( 2001 ) , pp .  89112 .    , _ gark methods for hamiltonian systems_. in preparation , 2013 .",
    "height 2pt depth -1.6pt width 23pt , _ multirate gark methods_. in preparation , 2013 .    , _ order conditions for numerical methods for partitioned ordinary differential equations _",
    ", numerische mathematik , 36 ( 1981 ) , pp .",
    "431445 .    , _ solving ordinary differential equations ii : stiff and differential - algebraic problems _ ,",
    "springer , 1993 .",
    ", _ on strong stability preserving time discretization methods _ , journal of scientific computing , 21 ( 2004 ) , pp",
    ".  193223 .",
    "height 2pt depth -1.6pt width 23pt , _",
    "monotonicity for runge - kutta methods : inner product norms _ , journal of scientific computing , 24 ( 2005 ) , pp .",
    "97117 .    height 2pt depth -1.6pt width 23pt , _ representations of runge - kutta methods and strong stability preserving methods _ , siam journal on numerical analysis , 43 ( 2005 ) , pp .",
    "924948 .    height 2pt depth -1.6pt width 23pt , _ strong stability for additive runge - kutta methods _ , siam journal on numerical analysis , 44 ( 2006 ) , pp .",
    "17351758 .    height 2pt depth -1.6pt width 23pt , _ characterizing strong stability preserving additive runge - kutta methods _ , journal of scientific computing , 39 ( 2009 ) , pp .",
    "115128 .    , _ efficient implicit - explicit runge - kutta methods with low storage requirements_. presentation at scicade 2013 , valladolid , spain , september 2013 .    ,",
    "_ monotonicity conditions for multirate and partitioned explicit runge - kutta schemes_. cwi report , unpublished , 2013 .    ,",
    "_ additive runge - kutta schemes for convection - diffusion - reaction equations _ , appl",
    ", 44 ( 2003 ) , pp .",
    "139181 .    , _ contractivity of runge - kutta methods _ , bit numerical mathematics , 31 ( 1991 ) , pp .",
    "482528 .    , _ singly diagonally implicit runge - kutta methods with an explicit first stage _ ,",
    "bit numerical mathematics , 44 ( 2004 ) , pp .",
    "489502 .    , _ on the stability and accuracy of one - step methods for solving stiff systems of ordinary differential equations _ , mathematics of computation , 28 ( 1974 ) , pp .",
    "145162 .    ,",
    "_ partitioned runge - kutta methods with stepsize control and stiffness detection _ , numerische mathematik , 47 ( 1985 ) , pp .",
    "545564 .    , _ split runge - kutta methods for simultaneous equations _",
    ", journal of research of the national institute of standards and technology , 64 ( 1960 ) .    ,",
    "_ stepsize conditions for general monotonicity in numerical initial value problems _ , siam journal on numerical analysis , 45 ( 2007 ) , pp .",
    "12261245 .    , _ implicit - explicit runge - kutta methods for time - dependent partial differential equations _ , applied numerical mathematics , 25 ( 1997 ) , pp .",
    "151167 .    ,",
    "_ partitioning strategies in runge - kutta type methods _ , i m a journal on numerical analysis , 13 ( 1993 ) , pp .",
    "the specific conditions for orders one to four are as follows .",
    "[ eqn : gark - order - conditions-1-to-4-detail ]    order 1 : @xmath342 order 2 : @xmath343 order 3 : @xmath344 order 4 : @xmath345",
    "each of the implicit and explicit methods @xmath114 and @xmath346 has to satisfy the corresponding order conditions for @xmath116 . in addition , the following coupling conditions are required for third order accuracy .",
    "the imex order two coupling conditions are :    [ eqn : coupling-2 ] @xmath347    these are equivalent to the requirement that the coupling methods @xmath348 for @xmath349 are second order .",
    "the imex order three coupling conditions read :    [ eqn : coupling-3 ] @xmath350",
    "the order four imex order conditions under the simplifying assumption are as follows .",
    "we have two compatibility relation between the implicit and the explicit methods : @xmath351 and 16 conditions involving the coupling terms : @xmath352 @xmath353 @xmath354 @xmath355    when both simplifying assumptions and are satisfied , each of the coupling methods @xmath356 and @xmath357 needs to be fourth order accurate in its own right . in addition the following 12 coupling conditions are required : @xmath358 @xmath359 @xmath360 @xmath361 moreover , if the two coupling terms are equal , @xmath362 , then @xmath363 needs to be fourth order accurate .",
    "the remaining six coupling conditions are @xmath364",
    "we consider the modified prothero - robinson ( pr ) @xcite test problem written as a split system @xmath365 the method applied to the scalar equation reads      here @xmath150^t\\ , , \\\\",
    "\\phi^ { { \\ { \\textsc{i}\\ } } } & = &   \\phi\\left(t_{n-1 } + \\mathbf{d}^ { { \\ { \\textsc{i}\\ } } } \\ , h \\right ) = \\left [   \\phi(t_{n-1 } + d_1^ { { \\ { \\textsc{i}\\ } } } \\ , h ) , \\ldots,\\phi(t_{n-1 } + d_{s^ { { \\ { \\textsc{i}\\ } } } } ^ { { \\ { \\textsc{i}\\ } } } \\ , h ) \\right]^t\\ , , \\\\\\end{aligned}\\ ] ] where @xmath151 , @xmath152 are the stage approximation times . due to the structure of the test problem",
    ", the method uses an explicit approach for the time variable , therefore @xmath367 the exact solution is expanded in taylor series about @xmath154 : @xmath368 where the vector power @xmath156 is taken componentwise .      write the stage equation @xmath372 in terms of the exact solution and global errors , and use the taylor expansions to obtain @xmath373 similarly , write the solution equation ( [ eqn : imex - sol ] ) in terms of the exact solution and global errors : @xmath374    the stability function of the implicit component method is @xmath160 since the explicit component method ( by itself ) has at least order @xmath57 , it follows from and the explicit order conditions that @xmath375 consequently , the global error recurrence reads @xmath376"
  ],
  "abstract_text": [
    "<S> this work generalizes the additively partitioned runge - kutta methods by allowing for different stage values as arguments of different components of the right hand side . </S>",
    "<S> an order conditions theory is developed for the new family of generalized additive methods , and stability and monotonicity investigations are carried out . </S>",
    "<S> the paper discusses the construction and properties of implicit - explicit and implicit - implicit , methods in the new framework . </S>",
    "<S> the new family , named gark , introduces additional flexibility when compared to traditional partitioned runge - kutta methods , and therefore offers additional opportunities for the development of flexible solvers for systems with multiple scales , or driven by multiple physical processes .    </S>",
    "<S> computational science laboratory technical report csl - tr-5/2013 +    adrian sandu and michael gnther    `` a class of generalized + additive runge - kutta methods ''    computational science laboratory + computer science department + virginia polytechnic institute and state university + blacksburg , va 24060 + phone : ( 540)-231 - 2193 + fax : ( 540)-231 - 6075 + email : sandu@cs.vt.edu + web : http://csl.cs.vt.edu    [ cols=\"^,^,^ \" , ]     partitioned runge - kutta methods , nb - series , algebraic stability , absolute monotonicity , implicit - explicit , implicit - implicit methods    65l05 , 65l06 , 65l07 , 65l020 . </S>"
  ]
}
{
  "article_text": [
    "symmetry occurs in many constraint satisfaction and optimisation problems @xcite . for example , suppose we have a proper coloring of a graph , and we permute the colors then we will obtain another symmetric coloring .",
    "symmetries are problematic as they increase the size of the search space .",
    "we will waste time visiting symmetric solutions .",
    "worse still , we will waste even more time visiting the ( many failing ) parts of the search tree which are symmetric to already visited states . a common and effective method to deal with symmetry is to add constraints which eliminate some , but not all symmetric solutions ( e.g. @xcite ) . in this paper , we survey recent results on symmetry breaking constraints .",
    "we hope that this survey is of wider interest as many of the results are likely to translate to other domains like planning , model checking and heuristic search .",
    "symmetry breaking constraints have a number of good and bad properties . on the positive side",
    ", a few simple constraints can often eliminate most if not all symmetry in a problem quickly and easily .",
    "in addition , propagation between the problem and the symmetry breaking constraints can reduce search considerably . on the negative side , we pick out particular solutions in each symmetry class , and this may conflict with the direction of the branching heuristic .",
    "an alternative to posting static symmetry breaking constraints is a more dynamic approach that modifies the search method to ignore symmetric states @xcite .",
    "the advantage of a dynamic method is that it can reduce the conflict with the branching heuristic .",
    "however , we may also get less propagation . the results reported here on static symmetry breaking constraints typically have implications for dynamic methods as most dynamic methods are equivalent to adding static symmetry breaking constraints `` on the fly '' .",
    "there are several aspects of symmetry breaking that this survey does not cover .",
    "we do not discuss methods to identify symmetry in a problem .",
    "see , for instance , @xcite .",
    "we suppose that the symmetries are known in advance as they often are , and our challenge is merely to deal with them .",
    "the survey also does not cover other active area of research like the intersection of symmetry reasoning and nogood learning .",
    "see , for instance , @xcite . for background material on constraint satisfaction in general , see a text like @xcite .",
    "we consider a combinatorial problem studied in several earlier works on symmetry breaking .",
    "the equidistant frequency permutation array ( efpa ) problem @xcite is a challenging problem in coding theory .",
    "the goal is to find a set of @xmath0 code words , each of length @xmath1 such that each word contains @xmath2 copies of the symbols 1 to @xmath3 , and each pair of code words is hamming distance @xmath4 apart .",
    "for example , for @xmath5 , @xmath6 , @xmath7 , @xmath8 , one solution is :    @xmath9    this problem has applications in communication theory , and is related to other combinatorial problems like finding orthogonal latin squares . we can model this problem by a @xmath0 by @xmath1 array of decision variables with domains @xmath10 to @xmath3 .    a _ symmetry _ of such a problem is a bijection @xmath11 that maps solutions onto solutions @xcite .",
    "we consider two special classes of symmetries : _ variable symmetries _ which act just on variables , and _ value symmetries _ which act just on values . both types of symmetry can be found in our model of the efpa problem .",
    "this model of the efpa problem has variable symmetry since we can permute the variables in any two rows , or in any two columns and still have a solution .",
    "for example , we can swap the first column with the third without changing the frequency of symbols in each row or the hamming distance between any two rows :    @xmath12    the model also has value symmetry since we can interchange values throughout any solution .",
    "for example ,",
    "the value symmetry @xmath13 swaps the value 0 with 2 throughout solution ( [ epfa ] ) , again without changing the frequency of symbols in each row or the hamming distance between any two rows :    @xmath14",
    "a simple but effective method to deal with symmetry is to add constraints which eliminate some ( but not all ) symmetric solutions in each symmetry class .    to eliminate the value symmetry in the efpa problem",
    ", we can add a precedence constraint @xcite to ensure that the values in the bottom row occur in order .",
    "that is , the value 0 first occurs on the bottom row before 1 , and 1 first occurs before 2 .",
    "the bottom row of solution ( [ epfa ] ) is @xmath15 which satisfies this symmetry breaking constraint .",
    "the value 0 first occurs in the first position , the value 1 later on in the third position , and the value 2 even later on in the fifth position .",
    "suppose we swap 0 with 2 , then the bottom row of solution ( [ epfa ] ) becomes @xmath16 , the bottom row of ( [ epfa3 ] ) .",
    "this violates the precedence symmetry breaking constraint .",
    "the value 1 first occurs in the third position , which is before the first occurrence of the value 0 in the fifth position .",
    "hence , by posting this symmetry breaking constraint , we only find solution ( [ epfa ] ) , and the symmetric solution ( [ epfa3 ] ) is eliminated .    two important properties of symmetry breaking constraints are soundness and completeness .",
    "a set of symmetry breaking constraints is _ sound _ iff it leaves at least one solution in each symmetry class , and _ complete _ iff it leaves at most one solution in each symmetry class . the precedence constraint is , for example , sound and complete . where do symmetry breaking constraints like this",
    "come from in general ?",
    "the lex - leader method offers a generic method for deriving a sound and complete set of symmetry breaking constraints for variable symmetries @xcite and value symmetries @xcite .",
    "the method picks out the lexicographically smallest solution in each symmetry class . for every symmetry @xmath11 , it posts a lexicographical ordering constraint : @xmath17 where @xmath18 to @xmath19 is some fixed ordering on the variables in the problem .",
    "consider again the value symmetry , @xmath13 that swaps 0 and 2 .",
    "we can describe this by the mapping @xmath20 .",
    "the lex - leader method eliminates this symmetry with the ordering constraint : @xmath21 where @xmath18 to @xmath22 is some ordering of the 24 decision variables modelling our 4 by 6 instance of the efpa problem .",
    "this simplifies to : @xmath23 suppose we order the variables in the matrix row - wise from top left to bottom right",
    ". then this constraint would accept solution ( [ epfa ] ) , but eliminate solutions ( [ epfa2 ] ) and ( [ epfa3 ] ) .",
    "many static symmetry breaking constraints can be derived from such lex - leader constraints .",
    "for example , precedence constraints to break the symmetry due to interchangeable values can be derived from them @xcite .",
    "efficient algorithms have been developed to propagate lexicographical ordering constraints @xcite .",
    "one way of constructing new symmetry breaking constraints is to use symmetry itself @xcite .",
    "any symmetry acting on a set of symmetry breaking constraints will itself break the symmetry in a problem .",
    "this requires us to define the action of a symmetry on a set of symmetry breaking constraints .",
    "we defined symmetry as acting on assignments , mapping solutions to solutions .",
    "we can lift this definition to constraints .",
    "for example , the action of a variable symmetry on a constraint changes the scope of the constraint ( that is , the variables on which the constraint acts ) .",
    "given a set of symmetries @xmath24 of c , if s is a sound ( complete ) set of symmetry breaking constraints for @xmath24 then @xmath25 for any @xmath26 is also a sound ( complete ) set of symmetry breaking constraints for @xmath24 .",
    "different symmetries pick out different solutions in each symmetry class . in fact , if we have a particular solution in mind , we can pick it out using a suitable symmetry of a set of symmetry breaking constraints .",
    "let @xmath27 be the set of solutions of a set of constraints @xmath28 .",
    "given a set of symmetries @xmath24 of a set of constraints c , a sound set s of symmetry breaking constraints , and any solution a of c , then there is a symmetry @xmath26 such that @xmath29 .",
    "applying symmetry to a set of symmetry breaking constraints does not change the symmetries which are eliminated .",
    "we say that a set of constraints @xmath30 _ breaks _ a symmetry @xmath11 of a problem @xmath28 iff there exists a solution @xmath31 of @xmath32 such that @xmath33 is not a solution of @xmath32 , and",
    "_ completely breaks _ a symmetry @xmath11 iff for each solution @xmath31 of @xmath32 , @xmath33 is not a solution of @xmath32 .",
    "given a symmetry group @xmath24 , we say that a set of constraints ( completely ) breaks @xmath24 iff it breaks every non - identity symmetry in @xmath24 .",
    "given a problem @xmath28 and a symmetry group @xmath24 , if @xmath30 ( completely ) breaks @xmath24 then @xmath25 ( completely ) breaks @xmath24 for any @xmath26 .",
    "we have used these ideas as the theoretical basis for a hybrid symmetry breaking method that tries to have the best of both worlds , posting static symmetry breaking constraints dynamically during search according to the direction of the branching heuristic @xcite .",
    "the symmetry groups seen in practice can be very large . as a result , symmetry breaking can be computationally challenging .",
    "for example , if we have a @xmath3 interchangeable values ( as in our efpa model ) , then we have @xmath34 symmetries . to eliminate each of these symmetries requires a separate lex - leader constraint . as a consequence ,",
    "the lex - leader method is not tractable in general .",
    "an alternative is to break symmetry partially by posting just a subset of the lex - leader constraints ( e.g. @xcite ) .",
    "crawford _ et al . _",
    "( @xcite ) proved that breaking symmetry completely by adding constraints to eliminate symmetric solutions is computationally intractable in general .",
    "more specifically , they prove that , given a matrix model with row and column symmetries , deciding if an assignment is the smallest in its symmetry class is np - hard where we append rows together and compare them lexicographically",
    ". there is , however , nothing special about appending rows together or comparing assignments lexicographically .",
    "we could break symmetry with _ any _ total ordering over assignments .",
    "recently we have shown that , under modest assumptions , breaking symmetry remains intractable if we use a different ordering of variables , or even a different ordering over solutions than the lexicographical ordering .",
    "more precisely , we show that the problem is np - hard for any _ simple _ ordering where , given an assignment , we can compute the position in the ordering in polynomial time and , in the reverse , given a position in the ordering , we can compute the associated assignment in polynomial time .",
    "given any simple ordering , there exists a symmetry group such that deciding if an assignment is smallest in its symmetry class according to this ordering is np - hard .",
    "since breaking symmetry appears intractable in general , a major research direction is to identify special cases which occur in practice where the symmetry group is more tractable to break .",
    "we consider two such cases : row and column symmetry , and value symmetry .",
    "a matrix of decision variables has _ row symmetry _",
    "iff given a solution , any permutation of the rows is also a solution .",
    "similarly , it has _ column symmetry _",
    "iff given a solution , any permutation of the columns is also a solution .",
    "for example , our model of the efpa problem has both row and column symmetry . row and",
    "column symmetry occurs in many models with matrices of decision variables @xcite .",
    "we can break row and and column symmetry using the lex - leader method .",
    "however , this is not practical in general .",
    "a @xmath35 by @xmath36 matrix has @xmath37 row and column symmetries , and each symmetry would require a separate lexicographical ordering constraint .    to break all row symmetry , we can post a linear number of constraints that lexicographically order the rows . similarly , to break all column symmetry we can post a linear number of constraints that lexicographically order the columns . when we have both row and column symmetry , we can post a @xmath38 constraint that lexicographical orders both the rows and columns @xcite . in fact , @xmath38 constraints can be derived from a subset of the constraints introduced by the lex - leader method @xcite . as a result",
    ", @xmath38 does not break all row and column symmetry .",
    "nevertheless , it is often highly effective in practice .",
    "consider again solution .",
    "if we order the rows of lexicographically , we get a solution in which rows and columns are ordered lexicographically :    @xmath39    similarly if we order the columns of lexicographically , we get a different solution in which both rows and columns are again ordered lexicographically :    @xmath40    all three solutions are thus in the same row and column symmetry class . note that both    and satisfy the @xmath38 constraint",
    ". therefore @xmath38 can leave multiple solutions in each symmetry class and is not a complete symmetry breaking method .",
    "in fact , @xmath38 is a very incomplete method for breaking symmetry",
    ". it can leave @xmath41 symmetric solutions in an @xmath42 by @xmath42 matrix model .",
    "in addition , it only partially provides tractability . whilst it is polynomial to check a @xmath38 constraint given a complete assignment , it is not tractable to propagate it completely given a partial assignment . that is",
    ", pruning all symmetric values is np - hard .",
    "propagating the constraint is np - hard .",
    "we have identified three tractable cases where we can break all row and column symmetry in polynomial time @xcite : ( 1 ) a matrix with a bounded number of rows ( or columns ) ; ( 2 ) a 0/1 matrix model where every row sum is 1 ; ( 3 ) an all - different matrix where all entries are different .",
    "the first two are perhaps the most interesting and useful cases .",
    "we have , for example , used the first case as the basis of a complete method for breaking row and column symmetry .",
    "we used this to measure how many symmetries are left by  in practice .",
    "see table 1 for some results that demonstrate  actually leaves very few symmetric solutions in practice despite the worst case result that it can leave a factorial number of such solutions .",
    "more recently , yip and van hentenryck have turned this theoretical result into a complete and efficient method for breaking all row and column symmetry in matrix models with a small number of rows ( or columns ) .",
    "another interesting research direction is to identify other constraints that can be effectively added to  to increase the amount of row and column symmetry broken @xcite .    .[t",
    ": t1 ] equidistant frequency permutation array problems .",
    "number of solutions left when posting  symmetry breaking constraints . [ cols=\">,^,^,^,^ \" , ]",
    "a second important class of symmetries which are more tractable to break than symmetries in general are value symmetries .",
    "when a problem has many value symmetries , the lex - leader method again introduces too many symmetry breaking constraints to be practical .",
    "puget has proposed an effective alternative that maps value symmetries into variables symmetries @xcite .",
    "his method channels into some auxiliary variables which , as in @xcite , permit the ( symmetry breaking ) constraints to be easily specified .",
    "@xmath43 records the first index using each value @xmath44 with constraints of the form : @xmath45 puget then breaks the variable symmetry on the @xmath43 by posting binary ordering constraints .",
    "for example , if the values 1 to @xmath3 are interchangeable , we can strictly order the @xmath43 : @xmath46 this ensures that the first occurrence of 1 is before that of 2 , that of 2 is before 3 , etc .",
    "this is the condition enforced by the precedence constraint mentioned previously .",
    "puget proved that we can break _ any _ number of value symmetries ( and not just those due to interchangeable values ) with a linear number of ordering constraints on the @xmath43 .",
    "this means that we can break any number of value symmetries in polynomial time .",
    "unfortunately , this decomposition into ordering constraints on @xmath43 hinders propagation , and we may not prune all symmetric values .",
    "this is not surprising as pruning all symmetric values is intractable in general .    given a set of value symmetries and a partial assignment , pruning all symmetric values is np - hard .",
    "we have , however , identified a common case where pruning all symmetric values is tractable .",
    "if values partition into a fixed number of sets and values within each set are interchangeable then we can prune all symmetric values in polynomial time using a global regular constraint @xcite or one of its decompositions @xcite .",
    "when there is a single set of interchangeable values , we can prune all symmetric values using a global precedence constraint @xcite or its decomposition @xcite .",
    "another important question is how we deal with with combinations of symmetries .",
    "we have already seen that we can take a symmetry group that is tractable to break completely ( row symmetry ) , combine it with another symmetry group that is tractable to break completely ( column symmetry ) , and end up with a symmetry group ( row and column symmetry ) that is intractable to break and where we lack good methods to eliminate _ all _ symmetric solutions in general .",
    "another challenging combination is when we have both variable and value symmetries .",
    "how do we break both types of symmetry simultaneously ? we can use the lex - leader method but this is not practical when we have many variable and value symmetries .",
    "unfortunately , puget s method for breaking value symmetry on the @xmath43 variables is not compatible in general with breaking variable symmetry via the lex - leader method on the @xmath47 variables .",
    "this corrects theorem 6 and corollary 7 in @xcite which claim that the two methods are compatible if we use the same ordering of variables in each method .",
    "there exist problems on which posting lex - leader constraints to break variable symmetries and applying puget s method to break value symmetries remove all solutions in a symmetry class irrespective of the orderings on variables used by both methods .",
    "there is , however , an important and common case where the two methods for breaking variable and value symmetry are compatible . if values partition into interchangeable sets then it is always consistent to post symmetry breaking constraints using both methods provided we index their variables identically in both cases @xcite .",
    "this is again a case where tractability is limited as pruning all symmetric values is np - hard .",
    "a number of important and challenging questions about symmetry breaking constraints remain including :    identifying tractable cases : : :    are there other common types of symmetry which occur in practice that    are polynomial to break ?",
    "for instance , suppose we are coloring the    edges of a graph , and we have a clique of interchangeable vertices .",
    "this induces a particular symmetry on the decision variables    representing the colors of the different edges in the graph .",
    "how do we    efficiently break this large symmetry group ?",
    "exploring other orderings : : :    are there other orderings besides the lexicographical ordering with    which we can break symmetry effectively ? we have seen some promise for    the gray code ordering .",
    "there are , however , many other orderings we    could consider .",
    "for example , frisch _ et al .",
    "_ have proposed the    multiset ordering @xcite . even though this is only a partial    ordering ,",
    "it has also shown some promise .",
    "in addition , can we use a    different ordering in each symmetry class ? reducing branching conflict : : :    one of the major issues with symmetry breaking constraints is that    they may conflict with the direction of the branching heuristic .",
    "how    can we retain the benefits of static symmetry breaking constraints and    of dynamic branching heuristics , whilst avoiding such conflict ?",
    "how do    we get the best of static and dynamic symmetry breaking methods ? how    do we choose static symmetry breaking constraints that align with a    dynamic branching heuristic ? studying combinations of symmetries : : :    how do we eliminate combinations of symmetries effectively ? there are    issues of both soundness ( which symmetry breaking constraints can be    combined together safely ? ) , completeness ( how we do eliminate all    combinations of symmetry ? ) and tractability ( which symmetry groups    that are tractable to break individually combine together to give a    symmetry group which is also tractable to break ? ) .",
    "dominance detection and elimination : : :    in constraint optimisation problems , the notion of dominance plays a    very similar role to symmetry .",
    "one ( partial ) solution dominates    another if it is sure to be at least as good in quality .",
    "how do we    identify dominating solutions ?",
    "is there a generic method like    lex - leader for adding constraints that remove dominated solutions ?    what are interesting and useful tractable cases ?",
    "backofen , r. , and will , s. 1999 . excluding symmetries in constraint - based search . in jaffar , j. , ed .",
    ", _ proc . of the 5th international conf . on principles and practice of constraint programming _ , lncs 1713 , 7387 .",
    "springer .",
    "benhamou , b. ; nabhani , t. ; ostrowski , r. ; and sadi , m. 2010 . enhancing clause learning by symmetry in sat solvers . in _ proc . of 22nd",
    "ieee international conf . on tools with artificial intelligence (",
    "ictai 2010 ) _ , volume  1 , 329335 .",
    "ieee computer society .",
    "bessiere , c. ; narodytska , n. ; quimper , c .- g . ; and walsh , t. 2011 . the alldifferent constraint with precedences . in achterberg , t. , and beck , j.  c. , eds .",
    ", _ proc . of 8th international conf . on integration of ai and or techniques in constraint programming for combinatorial optimization problems ( cpaior 2011 ) _ ,",
    "_ lncs _ 6697 , 3652 .",
    "springer .",
    "chu , g. ; stuckey , p. ; de  la banda , m. ; and mears , c. 2011 .",
    "symmetries and lazy clause generation . in walsh ,",
    "of 22nd international joint conf . on artificial intelligence",
    "( ijcai-2011 ) _ , 516521 .",
    "ijcai / aaai .",
    "crawford , j. ; luks , g. ; ginsberg , m. ; and roy , a. 1996 .",
    "symmetry breaking predicates for search problems . in _ proc . of the 5th international conf . on knowledge representation and reasoning , ( kr 96 )",
    "_ , 148159 .",
    "fahle , t. ; schamberger , s. ; and sellmann , m. 2001 .",
    "symmetry breaking . in walsh , t. , ed .",
    ", _ proc . of 7th international conf . on principles and practice of constraint programming ( cp2001 ) _ , 93107 .",
    "springer .",
    "flener , p. ; frisch , a. ; hnich , b. ; kiziltan , z. ; miguel , i. ; pearson , j. ; and walsh , t. 2001a .",
    "symmetry in matrix models .",
    "technical report apes-30 - 2001 , apes group .",
    "presented at symcon01 ( symmetry in constraints ) , cp2001 post - conference workshop .",
    "flener , p. ; frisch , a. ; hnich , b. ; kiziltan , z. ; miguel , i. ; and walsh , t. 2001b .",
    "matrix modelling .",
    "technical report apes-36 - 2001 , apes group . presented at formul01 workshop on modelling and problem formulation , cp2001 post - conference workshop .",
    "flener , p. ; frisch , a. ; hnich , b. ; kiziltan , z. ; miguel , i. ; pearson , j. ; and walsh , t. 2002 .",
    "breaking row and column symmetry in matrix models . in _",
    "8th international conf . on principles and practices of constraint programming ( cp-2002)_. springer .",
    "flener , p. ; pearson , j. ; sellmann , m. ; and hentenryck , p.  v. 2006 .",
    "static and dynamic structural symmetry breaking . in _ proc . of 12th international conf . on principles and practice of constraint programming ( cp2006)_. springer .",
    "frisch , a. ; hnich , b. ; kiziltan , z. ; miguel , i. ; and walsh , t. 2002 . global constraints for lexicographic orderings . in _",
    "8th international conf . on principles and practices of constraint programming ( cp-2002)_. springer .",
    "frisch , a. ; jefferson , c. ; and miguel , i. 2003 .",
    "constraints for breaking more row and column symmetries . in rossi , f. ,",
    "of 9th international conf . on principles and practice of constraint programming ( cp2003)_. springer .",
    "gent , i. , and walsh , t. 1999 . : a benchmark library for constraints . technical report , technical report apes-09 - 1999 .",
    "a shorter version appears in _ proc . of the 5th international conf . on principles and practices of constraint programming ( cp-99)_.      grayland , a. ; miguel , i. ; and roney - dougal , c. 2009 .",
    "snake lex : an alternative to double lex . in gent , i.",
    ", _ proc . of 15th international conf . on principles and practice of constraint programming _ , _ lncs _ 5732 , 391399",
    ". springer .",
    "huczynska , s. ; mckay , p. ; miguel , i. ; and nightingale , p. 2009 . modelling equidistant frequency permutation arrays : an application of constraints to mathematics . in gent , i.  p. , ed .",
    ", _ proc . of 15th international conf . on principles and practice of constraint programming ( cp 2009 )",
    "_ , _ lncs _ 5732 , 5064 .",
    "springer .",
    "jefferson , c. , and petrie , k. 2011 .",
    "automatic generation of constraints for partial symmetry breaking . in lee , j. h .-",
    ", _ proc . of 17th international conf . on principles and practice of constraint programming ( cp 2011 )",
    "_ , _ lncs _ 6876 , 729743 .",
    "springer .",
    "katsirelos , g. ; narodytska , n. ; and walsh , t. 2009 . combining symmetry breaking and global constraints . in oddi ,",
    "a. ; fages , f. ; and rossi , f. , eds .",
    ", _ recent advances in constraints , 13th annual ercim international workshop on constraint solving and constraint logic programming ( csclp 2008 ) _ , _ lncs _ 5655 , 8498 .",
    "springer .",
    "katsirelos , g. ; narodytska , n. ; and walsh , t. 2010 . on the complexity and completeness of static constraints for breaking row and column symmetry . in cohen , d. , ed . , _ proc . of the 16th international conf . on the principles and practice of constraint programming ( cp 2010 )",
    "_ , _ lncs _ 6308 , 305320 .",
    "springer .",
    "law , y. , and lee , j. 2004 .",
    "global constraints for integer and set value precedence . in _ proc . of 10th international conf . on principles and practice of constraint programming ( cp2004 ) _ , 362376 .",
    "springer .",
    "law , y .- c . ; lee , j. ; walsh , t. ; and yip , j. 2007 .",
    "breaking symmetry of interchangeable variables and values . in _",
    "13th international conf . on principles and practices of constraint programming ( cp-2007)_. springer .",
    "mears , c. ; de  la banda , m. ; wallace , m. ; and demoen , b. 2008 .",
    "a novel approach for detecting symmetries in csp models . in perron , l. , and trick , m.  a. , eds .",
    ", _ proc . of 5th international conf . on integration of ai and or techniques in constraint programming for combinatorial optimization problems ( cpaior 2008 ) _ , volume",
    "_ lncs _ 5015 , 158172 .",
    "springer .",
    "narodytska , n. , and walsh , t. 2012 .",
    "beyond lex leader : breaking symmetry with other orderings .",
    "under review for _ proc . of the 18th international conf . on the principles and practice of constraint programming ( cp 2012 )",
    "springer .",
    "pesant , g. 2004 . a regular language membership constraint for finite sequences of variables . in wallace , m. , ed .",
    ", _ proc . of 10th international conf . on principles and practice of constraint programming ( cp2004 ) _ , 482295 .",
    "springer .",
    "puget , j .- f . 2005a .",
    "automatic detection of variable and value symmetries . in van beek ,",
    ", _ proc . of 11th international conf . on principles and practice of constraint programming ( cp 2005 )",
    "_ , _ lncs _ 3709 , 475489 . springer .",
    "puget , j .- f . 2005b .",
    "breaking all value symmetries in surjection problems .",
    "in van beek , p. , ed .",
    ", _ proc . of 11th international conf . on principles and practice of constraint programming ( cp2005)_. springer .",
    "walsh , t. 2011 . on the complexity of breaking symmetry . in _ proc . of the 11th international workshop on symmetry in constraint satisfaction problems ( symcon11)_. held alongside the 1th international conf . on the principles and practice of constraint programming ( cp 2011 ) .    yip , j. , and hentenryck , p.  v. 2011 .",
    "symmetry breaking via lexleader feasibility checkers . in walsh , t. , ed .",
    ", _ proc . of the 22nd international joint conf . on artificial intelligence",
    "( ijcai-2011 ) _ , 687692 .",
    "ijcai / aaai ."
  ],
  "abstract_text": [
    "<S> symmetry is an important problem in many combinatorial problems . </S>",
    "<S> one way of dealing with symmetry is to add constraints that eliminate symmetric solutions . </S>",
    "<S> we survey recent results in this area , focusing especially on two common and useful cases : symmetry breaking constraints for row and column symmetry , and symmetry breaking constraints for eliminating value symmetry . </S>"
  ]
}
{
  "article_text": [
    "the _ geometric steiner tree problem _ , which asks for a network with minimum total edge length interconnecting a given set of points ( called _ terminals _ ) , is a well known variant of the _ spanning tree problem_. the steiner tree problem can be viewed as belonging to a family of problems where the aim is to construct a network @xmath4 interconnecting a given set of @xmath5 terminals , with the following properties :    1 .",
    "@xmath4 may contain nodes ( _ steiner points _ ) other than the given terminals ; 2 .",
    "@xmath4 minimises a given cost function ; 3 .",
    "the given cost function guarantees that @xmath4 can be assumed to be a minimum spanning tree on its nodes ( for a given metric ) .",
    "in addition to the steiner tree problem under various metrics , this family also includes the _",
    "power-@xmath6 steiner tree problem _",
    ", where the cost of each edge of the network is the @xmath6-th power of its length , and the _ bottleneck steiner tree problem _ , where the cost of the network is the length of its longest edge and there is a bound on the number of extra nodes in the network .",
    "both of these variants on the steiner tree problem have numerous applications , particularly in the design of wireless communication networks such as sensor networks .",
    "in contrast to the _ graph steiner problem _ , in the geometric versions of the problem the steiner points may potentially be located at any of an infinite number of points in a given space .",
    "this makes the geometric steiner tree problems , and the methods of finding optimal solutions , fundamentally different from their purely combinatorial analogues . in many versions of the geometric problem",
    "it is not even immediately clear how an optimal solution can be calculated .",
    "although the spanning tree problem is polynomially solvable , being solvable in @xmath1 time in a general metric and in @xmath7 time in the euclidean plane , see @xcite , the problems in this more general family are mostly @xmath8-hard , even in the plane .",
    "this essentially stems from the fact that as the number of extra nodes that can be added to the network increases there is an exponential explosion in the number of different topologies that need to be considered .",
    "a natural way of controlling this increase in complexity is to bound the number of extra nodes , in other words , replace property  1 above by the following :    1 .",
    "@xmath4 may contain up to @xmath2 nodes other than the given terminals , where @xmath2 is a constant positive integer .",
    "we refer to problems in this modified class as _ generalised @xmath2-steiner tree problems_. one of the seminal papers on this topic , for the @xmath0-steiner tree problem in the euclidean plane , is a paper by georgakopoulos and papadimitriou @xcite , where an @xmath1-time solution is given .",
    "they conclude their paper with a tantalising comment relating to their unsuccessful attempts at generalising their methodology to the @xmath2-steiner tree problem , even for @xmath9 . this comment has been a motivating factor for the current paper .",
    "also , in their paper the proofs of some of the primary results and sufficient details are omitted ; another aim of this paper is to add some rigour to the more fundamental of these results .",
    "it should be noted that solutions to @xmath2-steiner problems are fundamentally different to the analogous classical steiner problems where the number of steiner points is not bounded .",
    "a case in point is the package of exact algorithms called geosteiner of warme , winter , zachariasen ( see @xcite for one of the companion papers ) for constructing optimal euclidean and rectilinear steiner trees . for a variety of reasons these algorithms",
    "can not simply be adapted to solve the respective @xmath2-steiner problems , whilst maintaining efficiency .",
    "a fundamental obstacle in the euclidean plane is the fact that the degrees of steiner points can be @xmath10 when @xmath2 is bounded , so many of the nice geometric properties utilised in geosteiner are lost .",
    "we may restate the goal of the georgakopoulos and papadimitriou paper as follows : find the point in the euclidean plane which , if added to a given set of points , will result in the shortest possible spanning tree .",
    "the authors observed that one can significantly reduce the time complexity of an algorithmic solution to the problem by first constructing a special partition .",
    "given a set @xmath11 of @xmath5 terminals in the euclidean plane , it is possible to partition the plane into @xmath1 regions such that if any new point @xmath12 is embedded in the plane within one of these regions , say @xmath13 , then any minimum spanning tree @xmath4 on @xmath14 will have the following property : the neighbours of @xmath12 in @xmath4 will belong to some subset of a set @xmath15 containing at most six points from @xmath11 , where @xmath15 is fixed for the given region @xmath13 .",
    "this useful partition is referred to as the _ overlayed oriented dirichlet cell partition _ , or oodc partition .",
    "their algorithm takes as input the set @xmath11 of terminals and then starts by calculating the oodc partition , the set @xmath15 for every @xmath13 , and a minimum spanning tree @xmath16 on @xmath11 .",
    "all this , as well as a preprocessing step on @xmath16 , is done within a time of @xmath1 . for each region @xmath13",
    ", the algorithm then iterates through all subsets @xmath17 of @xmath15 and calculates @xmath12 , the steiner point of the nodes in @xmath17 ( this takes constant time for each @xmath17 ) .",
    "the algorithm then updates @xmath16 ( which can also be done in constant time because of the preprocessing step ) to include @xmath12 .",
    "the cheapest tree is selected at the end as an optimal solution . a naive algorithm for",
    "the @xmath0-steiner tree problem would attain a complexity of @xmath18 since it would have to iterate through _ all _ subsets of up to six terminals and then calculate the optimal position of the steiner point and the corresponding minimum spanning tree for each of these subsets .",
    "the powerful simplifying properties of the oodc would clearly be advantageous in a generalisation of the algorithm to arbitrary normed planes .",
    "however , the construction of the oodc partition given in @xcite is valid for the euclidean plane only",
    ". we will provide a new method , based on abstract voronoi diagrams , for constructing the partition for terminals embedded in an arbitrary normed plane .",
    "the construction is based on theoretical results , but we also define a class of norms for which the algorithm would be practically implementable .",
    "once the partition has been found , our algorithm calculates the optimal positions of all @xmath2 steiner points simultaneously .",
    "of course , these positions will depend not only on the neighbours of the steiner points , but also on the cost function of the given generalised steiner tree problem . since , at the start of this step , the neighbours of the steiner points are fixed but the steiner points are free , this subproblem is a generalised version of the well - known _ fixed topology steiner tree problem _ ( discussed in section [ topology3 ] ) . since @xmath2 is constant",
    "we assume that this step can be done in constant time . a novel method for updating",
    "a minimum spanning tree is then utilised to calculate a potential solution for every choice of coordinates of the steiner points . once again , a cheapest tree is selected as the optimal solution .",
    "the total time complexity turns out to be @xmath3 when constant factors are excluded .",
    "there are a number of authors who have looked at adapting the solution to the @xmath0-steiner tree problem in @xcite to other @xmath19 norms .",
    "kahng and robins in @xcite do this for the rectilinear plane , however , their paper only uses the solution as a step in a heuristic algorithm for the rectilinear steiner tree problem , and not much attention is devoted to the solution of the @xmath0-steiner tree problem itself .",
    "griffith et al .",
    "@xcite expand on this heuristic idea in the rectilinear plane .",
    "they provide a simple procedure ( though without proof ) for updating a minimum spanning tree when a new node is introduced .",
    "lin et al .",
    "@xcite in turn adapt the approach presented by kahn and robins to the norm induced by a regular hexagon .",
    "recent papers @xcite by bae et al .",
    "provide the first exact algorithms for solving the _ bottleneck _ @xmath2-steiner tree problem in the @xmath19 planes .",
    "the complexity of their algorithms are @xmath20 when @xmath21 and @xmath22 for all other finite @xmath6 .",
    "however , the methods they use are based on farthest colour voronoi diagrams and therefore can not be utilised for any other cost functions .",
    "besides these authors we are not aware of any significant study into the properties and construction of optimal geometric @xmath2-steiner trees . although the classical steiner tree problem ( where the number of steiner points is not bounded ) has been considered in a multitude of norms and under many cost functions , these results are mostly irrelevant to the @xmath2-steiner problem .",
    "section [ prelim1 ] provides some preliminary definitions .",
    "our algorithm for solving the generalised @xmath2-steiner tree problem in normed planes has three primary phases .",
    "the first phase constructs a set of _ feasible internal topologies_. each feasible internal topology is a forest with leaves only from the set @xmath11 of terminals , and interior nodes only from the set @xmath23 of steiner points . at this stage",
    "the nodes of @xmath23 are not yet located in the plane . by utilising oodc partitions , as discussed in section [ odc2 ] , we are able to significantly reduce the total number of feasible internal topologies . in section [ odc2 ]",
    "we also present three restrictions on the given normed plane that allows the construction of the oodc partition to be implemented in practice .",
    "the next phase of our algorithm consists of finding the optimal locations in the plane of the nodes of @xmath23 for each feasible internal topology .",
    "this is known in the literature as the _ fixed topology steiner tree problem _ , and its solution depends crucially on the cost function @xmath24 and on the given normed plane .",
    "we briefly discuss this phase of the algorithm again in section [ topology3 ] .",
    "the final phase is to add each feasible internal topology ( with steiner points optimally located ) to a minimum spanning tree on @xmath11 .",
    "the union of these two graphs produces cycles and thus a method is needed for deleting the appropriate edges from the union until an optimal final tree is attained .",
    "this so called _ minimum spanning tree update _",
    "method is the topic of section [ mst4 ] . in section [ algorithm5 ]",
    "we present our main algorithm and then prove its correctness and verify its time complexity .",
    "we begin by formalising the definition of a generalised @xmath2-steiner tree problem , sketched in the introduction . throughout this paper",
    "we use the symbols @xmath25 and @xmath26 for the edge - set and node - set respectively of a graph @xmath27 .",
    "we also use the notation @xmath28 .",
    "let @xmath29 be given .",
    "let @xmath30 be a given norm on @xmath31 , that is , a function @xmath32 that satisfies @xmath33 for all @xmath34 , @xmath35 if and only if @xmath36 , @xmath37 for @xmath38 , and @xmath39 for all @xmath40 .",
    "the _ unit ball _",
    "@xmath41 is a centrally symmetric convex set .",
    "given a set @xmath42 , let @xmath43 represent the set of all spanning trees for the elements of @xmath44 .",
    "for each @xmath45 there is a corresponding set of edges @xmath46 ( with every @xmath47 ) .",
    "let @xmath48 , with @xmath49 , represent an embedding of the set @xmath50 in @xmath31 ( where @xmath51 is an embedding of the corresponding @xmath52 ) .",
    "we can think of @xmath45 as representing the topology of a tree network interconnecting @xmath11 and using @xmath53 extra nodes , and we can equate the edges @xmath54 with the arcs of such a network . for a fixed embedding of this network we let @xmath55 , with @xmath49 , be the locations of the extra nodes corresponding to @xmath56 .",
    "we refer to @xmath11 as the set of _ terminals _ and @xmath23 as the set of _ steiner points _ of the network .",
    "now let @xmath57 ; i.e. , the components of @xmath58 are the edge lengths of such a network , for a given tree topology and a given set of embedded nodes .",
    "such a vector is well defined up to the order of its components .",
    "let @xmath59 be a symmetric function ( i.e. , independent of the order of the components of the vector on which it acts ) .",
    "we think of @xmath24 as a cost function on a tree network . in other words",
    ", @xmath60 is the cost of the network with topology @xmath45 and nodes @xmath11 and @xmath23 , and @xmath61 is the minimum cost ( with respect to @xmath24 ) of any tree interconnecting the nodes @xmath11 and @xmath53 other points .",
    "hence , for the power-@xmath6 steiner tree problem we define @xmath62 whereas , for the bottleneck problem ( where the cost of the network is the cost of the longest edge ) we have @xmath63    we say that such a symmetric function @xmath24 is _",
    "@xmath64-optimisable _ if and only if there exist @xmath65 and @xmath66 such that @xmath67 and @xmath68 . in other words , @xmath24 is _",
    "@xmath64-optimisable _ if for any given @xmath11 there exists a tree @xmath4 interconnecting @xmath11 , with minimum cost with respect to @xmath24 , that is a minimum spanning tree on its _ complete set _ of nodes .",
    "we denote the cost of such a tree by @xmath69 .",
    "it is easy to show that @xmath70 , for @xmath71 , and @xmath72 are @xmath64-optimisable .    *",
    "* for any constant positive integer @xmath2 , a _ generalised k - steiner tree problem _ is defined to be any problem of the following formgiven * : :    a set @xmath11 of @xmath5 points in    @xmath31 , a norm @xmath30 , and a    symmetric @xmath64-optimisable function    @xmath24 . *",
    "find * : :    a set @xmath23 of @xmath73 points in    @xmath31 , and a spanning tree @xmath4 on    @xmath74 with topology @xmath45 such    that    @xmath75 .",
we refer to @xmath4 as a _ generalised @xmath2-steiner minimum tree_. the next lemma is an extension of the swapping algorithm , found in @xcite .",
    "it follows from the matroid properties of minimum spanning trees .",
    "[ mstswap]let @xmath76 be a minimum spanning tree on the terminal set @xmath11 , and let @xmath77 be any spanning tree for @xmath11 .",
    "we can transform @xmath77 to @xmath76 by a series of edge swaps , where each swap involves replacing an edge @xmath78 by @xmath79 such that @xmath80 .",
    "the corollary below shows that @xmath4 is equivalent in cost to any minimum spanning tree on @xmath74 .",
    "[ mst - coroll]every minimum spanning tree on @xmath74 is a generalised @xmath2-steiner minimum tree on @xmath11 .    by the @xmath64-optimisability of @xmath24",
    "we may assume that @xmath4 is a minimum spanning tree on @xmath74 .",
    "let @xmath16 be any other minimum spanning tree @xmath74 .",
    "by lemma  [ mstswap ] , we can transform @xmath16 to @xmath4 by a series of edge swaps , each of which replaces an edge with another of the same length . by the symmetry of @xmath24 each such edge swap does not increase @xmath81 .    throughout this paper",
    "we perform various constructions involving the unit ball @xmath82 for the given norm @xmath30 , for instance calculating the intersections of two unit balls .",
    "our main interest in this paper is in the computational nature , specifically the time complexity , of a solution to any instance of the generalised @xmath2-steiner tree problem . in order to find efficient algorithms",
    ", we need to perform these unit ball operations to within any fixed precision in constant time .",
    "we therefore restrict the norm @xmath30 so that its unit ball is always simple enough to perform these operations . we will provide more detail regarding these restrictions in the next section . for similar computational reasons we will also be placing a restriction on @xmath24 , and this is discussed in section [ topology3 ] .",
    "let a norm @xmath83 on @xmath31 be given with corresponding unit ball @xmath82 .",
    "our aim in this section is to describe the construction of the oriented dirichlet cell ( odc ) partition for any set @xmath11 of @xmath5 terminals embedded in this normed plane , and to show that it can be constructed within a time of @xmath7 .",
    "we also show that , with a time complexity of @xmath1 , multiple odc partitions can be overlayed .",
    "this final partition is the aforementioned _ overlayed odc partition _",
    "( oodc partition ) , and is a core component of our algorithm .",
    "georgakopoulos and papadimitriou @xcite allude to a simple method of constructing an odc partition for terminals embedded in the euclidean plane .",
    "unfortunately this method does not work for arbitrary normed planes .",
    "we circumvent this problem by defining a type of abstract voronoi diagram that is equivalent to the odc partition , and then showing that this voronoi diagram can be calculated in the required time .",
    "we now state the first of three restrictions on @xmath82 .",
    "we defer a discussion of these restrictions ( including the description of a class of norms that satisfy all of them ) to the end of the section .",
    "let the boundary of @xmath82 be denoted by @xmath84 .",
    "* restriction 1 * _ the intersection points of any two translated copies of @xmath84 , and the intersection points of any straight line and @xmath84 , can be calculated to within any fixed precision in constant time . _    [ ylemma]there exist six points @xmath85 on @xmath84 such that for any pair of rotationally consecutive ones , say @xmath86 , we have @xmath87 . moreover , these six points are constructible",
    ".    the standard ruler and compass construction of the hexagon will produce these six points , where @xmath82 plays the role of the circle in the construction .",
    "given any point @xmath88 on @xmath84 construct a translation of @xmath84 centered around @xmath88 .",
    "let @xmath89 be the first intersection point of the two boundaries as we traverse the boundary of the original ball anticlockwise from @xmath88 .",
    "let @xmath90 .",
    "note that this point also lies on @xmath84 and that @xmath91 is a parallelogram .",
    "the remaining three points are constructed using the central symmetry of @xmath82 .",
    "see figure [ figurehex ] for an example where @xmath82 is a tilted ellipse .",
    "the distance properties of the lemma follow easily by construction .    ]    for any two directions @xmath92 and @xmath93 in the plane @xmath94 denotes the cone defined to be the set consisting of all rays emanating from @xmath95 in direction @xmath96 , for @xmath97 . for each @xmath98 from lemma [ ylemma ] let @xmath99 be the direction of the ray @xmath100 , where @xmath101 is the center of @xmath82 .",
    "we assume that the @xmath102 are ordered in an anticlockwise manner , and two consecutive directions will be denoted by @xmath99 and @xmath103 ( i.e. the @xmath104 notation will be omitted ) . as another example",
    "we show , in figure [ figurerect ] , the six directions produced when @xmath82 is the unit ball of the rectilinear plane .",
    "[ figurerect ] ]    [ tilemma]let @xmath105 , @xmath106 and @xmath107 and @xmath108 points on the boundary of @xmath82 such that the segments @xmath109 and @xmath110 intersect in a point @xmath111",
    ". then @xmath112 .    applying the triangle inequality to @xmath113 and @xmath114",
    ", we obtain @xmath115 from which the lemma follows ; see figure [ fig ] .",
    "[ fig ] ]    [ cony]let @xmath95 be any point in the plane .",
    "then there exists a minimum spanning tree @xmath4 on @xmath116 with the following property : for each @xmath117 there is at most one point of @xmath11 adjacent to @xmath95 in @xmath4 and lying within @xmath118 , and this point is a closest terminal to @xmath95 in the cone .",
    "let @xmath16 be a minimum spanning tree on @xmath119 .",
    "let @xmath120 be a terminal in @xmath118 that is closest to @xmath95 , and suppose that @xmath121 where @xmath122 is any other terminal in @xmath118 . we show that we can replace the edge @xmath123 in @xmath16 by either @xmath124 or @xmath125 so that the resulting tree is still a minimum spanning tree on @xmath119 . from this , the statement of the lemma follows .",
    "assume first that the path in @xmath16 connecting @xmath95 and @xmath126 passes through @xmath127 .",
    "in this case we can replace @xmath123 by @xmath124 without losing connectivity or increasing the length of @xmath16 .",
    "assume , on the other hand , that the path in @xmath16 connecting @xmath95 and @xmath126 does not pass through @xmath127 .",
    "* claim : * @xmath128 .",
    "+ without loss of generality , we assume that @xmath129 , @xmath130 , and @xmath131 intersects the boundary of the unit ball @xmath82 in an arc from @xmath107 to @xmath108 ( with @xmath132 ) .",
    "we can also assume , without loss of generality , that @xmath127 lies on the same side of the line through @xmath133 as @xmath108 .",
    "the convexity of @xmath82 implies that the line segments @xmath134 and @xmath135 intersect , hence by lemma  [ tilemma ] we have @xmath136 we now prove the claim via two cases , illustrated in figure  [ figurecone ] .    [ figurecone ] ]    firstly , suppose @xmath126 and @xmath101 are on the same side of @xmath137 ( including the case where @xmath126 lies on @xmath138 ) . by inequality  ( [ eq1 ] )",
    "@xmath107 lies in the unit ball centered at @xmath127 , so , by convexity , @xmath126 also lies in this unit ball . hence , @xmath139 as required . for the second case , suppose that @xmath126 and @xmath101 are on opposite sides of @xmath137 .",
    "let the ray from @xmath127 passing through @xmath126 intersect @xmath82 at @xmath140 .",
    "then @xmath140 and @xmath101 are also on opposite sides of @xmath137 , and hence , by lemma  [ tilemma ] , @xmath141",
    ". therefore , @xmath139 by inequality  ( [ eq1 ] ) , and the claim is proven .    by the claim",
    "we can now replace the edge @xmath123 by @xmath125 without losing connectivity or increasing the length of @xmath16 .    for each @xmath117 , the @xmath142-th _ oriented dirichlet cell _",
    "( odc ) of @xmath143 is the set : @xmath144 in other words , this is the set of all points @xmath145 whose closest terminal in the cone @xmath146 is @xmath147 .",
    "we will show that the set of @xmath142-th odcs , called the _",
    "@xmath142-th odc partition of @xmath11 _ is a type of voronoi diagram .",
    "in @xcite chew and drysdale present an  expanding waves \" view of voronoi diagrams .",
    "if @xmath5 pebbles are dropped simultaneously into a pond , the places where wave fronts meet define the voronoi diagram on the @xmath5 points of impact . in the euclidean case",
    "the wavefronts are circular , but in theory any closed convex curve @xmath148 containing the origin can qualify as a wavefront and thereby define an abstract voronoi diagram . for any such @xmath148 and set of terminals",
    "@xmath11 we say that the resulting diagram is the _ voronoi diagram of @xmath11 based on @xmath148_. the _ bisector based on _",
    "@xmath148 for any two points @xmath149 is defined as the intersection @xmath150 where @xmath151 is the voronoi diagram of @xmath152 based on @xmath148 .",
    "we may define this voronoi diagram more formally as follows .",
    "let @xmath153 be the distance function based on @xmath148 ; in other words , for any points @xmath154 we let @xmath155 .",
    "we then define a region @xmath156 for each @xmath157 .",
    "the set @xmath158 is the required voronoi diagram based on @xmath148 . in figure [ figurehexbis ]",
    "we give an example of what the boundary of wavefronts look like when @xmath148 is a regular hexagon .    ]    for any @xmath159 the @xmath142-th odc partition of @xmath11 is equal to the voronoi diagram of @xmath11 based on the sector @xmath160 .",
    "this follows immediately from the central symmetry of @xmath82 .",
    "figure [ figureodc ] illustrates an odc partition when the original unit ball is a circle ( i.e. the euclidean case ) and therefore @xmath148 is a circular sector .    ]",
    "the next theorem now gives us the required time complexity for calculating the @xmath142-th odc partition under certain conditions .",
    "[ conditions]@xcite the voronoi diagram of @xmath5 points based on a closed convex shape @xmath148 can be constructed in @xmath7 time and @xmath161 space as long as the following operations can be performed in constant time :    1 .   given two points ,",
    "find the boundary where the two wavefronts meet .",
    "2 .   given two such boundaries ,",
    "compute their intersection(s ) .",
    "we therefore also impose the following restriction on @xmath82 .",
    "* restriction 2 * _ let @xmath162 be any sector of @xmath82 . then , given any two points , we can find the boundary where the two wavefronts based on @xmath162 meet , and , given two such boundaries , we can compute their intersection .",
    "moreover , these operations can be performed to within any fixed precision in constant time_.    the next step is to overlay the six @xmath142-th odc partitions .",
    "the theorem we use , which is a result from @xcite , assumes that the regions in each partition have boundaries consisting of straight line segments .",
    "we therefore state our third restriction on @xmath82 .",
    "* restriction 3 * _ the shape of @xmath82 implies that the @xmath142-th odc partition of any set of points is piecewise linear ( i.e. the boundary of any odc consists of straight line segments)_.    @xcite[thr8]let @xmath163 be any positive integer .",
    "then @xmath163 linear plane partitions can be overlayed in @xmath164 time , where @xmath5 is the total number of regions in each partition .    as a consequence of the previous results , within @xmath7 total time we can calculate the @xmath142-th odc partition of the plane for each @xmath142 , and then , in a time of @xmath1 , overlay these six partitions resulting in the oodc partition .",
    "it is easily observed that the oodc partition has @xmath1 regions .",
    "let @xmath13 be a region of the oodc partition and let @xmath165 ( where @xmath166 is an index - set ) be the set of odcs such that @xmath167 .",
    "note then that @xmath168 .",
    "for each @xmath169 suppose that @xmath170 is the terminal associated with @xmath171 ; in other words , @xmath171 is the odc of @xmath170 . finally let @xmath172 .",
    "the power of the oodc partition lies in the next theorem , which now follows from lemma [ cony ] .",
    "[ mainth]let @xmath12 be any point in @xmath13 .",
    "then there exists a minimum spanning tree @xmath4 on @xmath173 such that the set of neighbours of @xmath12 in @xmath4 is a subset of @xmath15 .",
    "the question arises as to which norms exist with unit balls satisfying all three restrictions .",
    "let @xmath174 be the class of norms defined by the condition that each norm s unit ball is either a polygon or an ellipse .",
    "suppose that @xmath175 and that the corresponding unit ball is @xmath82 .",
    "clearly restriction 1 is true for @xmath82 .",
    "given any two points , their bisector ( based on a sector of @xmath82 ) will be a polygonal line that can be computed with some simple vector operations ( see @xcite ; for elliptic unit balls this follows since ellipses are linear transformations of a circle ) .",
    "the same holds true for intersecting two boundaries , and therefore restriction 2 is satisfied .",
    "since any @xmath142-th odc partition consists of segments of bisectors and segments of the limiting rays of @xmath146 for some @xmath95 , restriction 3 follows immediately .",
    "this class of norms includes ( amongst others ) the well - known euclidean , rectilinear , @xmath176 , and fixed - orientation planes . in this paper",
    "we do not undertake a deeper investigation into the question of whether theorem [ thr8 ] can be generalised to include norms whose unit ball is neither linear nor elliptical , but leave it as an open question .",
    "by using the results of the previous section , specifically theorem [ mainth ] , each main iteration of our algorithm produces a feasible internal topology which , recall , is a forest @xmath177 spanning the set of all steiner points such that @xmath177 s internal nodes are steiner points and its leaves are terminals . finding the optimal coordinates of the steiner points for the topology is a problem known in the literature as the _ fixed topology steiner tree problem_. we state the problem more formally as follows : given a set @xmath178 of @xmath179 embedded terminals , a set @xmath180 of @xmath53 free ( i.e. non - embedded ) steiner points , and a tree topology @xmath45 spanning all these nodes , we wish to find the coordinates of the steiner points ( i.e. find the set @xmath23 ) such that @xmath181 is minimised , where @xmath182 .",
    "observe that we may assume @xmath45 is a tree topology since each component of @xmath177 may be solved separately .",
    "the fixed topology problem is interesting in its own right , but is also a key step of our main algorithm .",
    "since @xmath2 ( and therefore @xmath183 ) is constant we are not particularly interested in the time complexity of this step .",
    "we therefore introduce one more restriction :    * restriction 4 * _ @xmath24 and @xmath82 are such that a solution to the fixed topology steiner tree problem is computable to within any fixed precision in finite time . _",
    "as far as we know there are no instances of @xmath24 and @xmath82 for which it has been demonstrated that the fixed topology problem is impossible to solve .",
    "since we do not place restrictions on the methods or time - complexity of potential solutions to this problem ( besides finiteness ) , we can not fully characterise the class of cost - functions and norms that satisfy restriction 4 .",
    "note also that for many cost - functions and norms there may exist numerical methods ( for instance gradient descent ) that solve the fixed topology problem to any finite degree of accuracy .",
    "we now briefly discuss a few functions and norms that satisfy restriction 4 .",
    "1 .   @xmath184 . in this case",
    "we are dealing with the well - known steiner tree problem for a fixed topology . in the euclidean plane",
    "the problem has an @xmath185-time solution provided that no point has degree larger than @xmath186 , see @xcite .",
    "unfortunately , for the @xmath2-steiner tree problem degree @xmath10 points do exist ( but degree @xmath187 do not ; see @xcite ) .",
    "a similar result holds for the rectilinear and other fixed orientation planes @xcite .",
    "@xmath188 , @xmath71 .",
    "this is referred to as the power-@xmath6 steiner tree problem for a fixed topology . in the euclidean plane with @xmath189",
    ", ganley @xcite shows that the problem can be solved within time @xmath190 .",
    "3 .   @xmath191 , i.e. the bottleneck steiner problem for a fixed topology .",
    "this problem has an @xmath185 solution in the rectilinear plane , see @xcite . in the euclidean and general @xmath19 planes there",
    "exists various numerical algorithms that can calculate a solution to any desired precision , see for instance @xcite , @xcite .",
    "a fully polynomial time approximation scheme ( fptas ) exists for the problem in the euclidean plane ( see @xcite ) .",
    "recently bae et al .",
    "@xcite produced the first exact algorithm for solving this problem .",
    "this section deals with the final phase of our algorithm . at this stage",
    "the algorithm must select an appropriate set of cycle - edges to delete after forming the union of a minimum spanning tree on @xmath11 and a forest @xmath192 , where @xmath192 has a given feasible internal topology and optimally located steiner points for that topology . as in @xcite for the case",
    "@xmath193 , the fact that one can _ update _ ( in constant time ) a minimum spanning tree on @xmath11 to include the steiner points ultimately reduces time complexity : without an update method a minimum spanning tree would have to be constructed for every choice of feasible internal topology .",
    "by corollary [ mst - coroll ] in section [ prelim1 ] we know that as long as the locations of the steiner points are optimal then any minimum spanning tree on @xmath74 will also be an optimal generalised @xmath2-steiner tree .",
    "many papers exist in the literature that deal with the time complexity of updating a minimum spanning tree when a single new node is introduced ; see for instance @xcite where the authors show that a tree on @xmath5 nodes can be updated with a new node in @xmath194 parallel time using @xmath195 exclusive read , exclusive write , parallel random access machines ( erew prams ) .",
    "georgakopoulos and papadimitriou utilise a preprocessing step in @xcite so that a minimum spanning tree can be updated in constant time with a single new point .",
    "let @xmath192 be a solution to the fixed topology steiner problem for some choice of feasible internal topology @xmath177 .",
    "as will become clear in section  [ algorithm5 ] the requirement that the updated tree , say @xmath196 , is a minimum spanning tree on its nodes can be slightly relaxed in our algorithm .",
    "it is only required that @xmath196 be a shortest total length tree spanning @xmath74 such that the neighbour - set of each steiner point in @xmath192 is the same as in @xmath196 .",
    "we therefore require that only edges not belonging to @xmath192 are deleted during the update process .",
    "the intuitive reason for modifying the update process in this way is to deal with cases when some component of @xmath192 is not a minimum spanning tree on its nodes ( this can occur , for instance , in solutions to the bottleneck steiner tree problem ) .    in the remainder of this section",
    "we introduce a few preliminary results , formalise the details of the update process , and prove in theorems [ connected ] and [ notconnected ] that , given a preprocessing stage , updating only requires constant time .",
    "let @xmath197 denote the set of neighbours of a node @xmath198 in a graph @xmath4 .",
    "a forest @xmath192 with node - set @xmath199 , where @xmath200 and @xmath201 with @xmath202 , is called _ viable _ if and only if @xmath203 and @xmath204 for every @xmath205 . a shortest total length tree @xmath196 , such that @xmath206 and @xmath207 for every @xmath205 ,",
    "is referred to as a _",
    "minimum @xmath192-fixed spanning tree_. we use the symbol @xmath208 to represent a path through @xmath4 with endpoints @xmath209 and @xmath95 , and we use @xmath210 to denote the longest edge on @xmath208 .",
    "we will make use of the following theorem .",
    "@xcite[kortee ] a tree @xmath4 is a minimum spanning tree on @xmath11 if and only if for every @xmath211 , @xmath212 for every @xmath213 .",
    "now let @xmath4 be a minimum spanning tree on @xmath11 and let pp1 denote a preprocessing stage to calculate @xmath210 for every pair of nodes @xmath214 .",
    "pp1 requires @xmath1 time and @xmath1 space .",
    "we incorporate a consistent tie - breaking procedure for choosing between edges of exactly the same length during pp1 .",
    "the tie - breaking procedure places any order on @xmath215 and chooses the earlier edge in this ordering whenever a tie occurs .",
    "the next theorem shows that if @xmath192 is connected ( i.e. , @xmath192 is a tree ) then updating a minimum spanning tree takes constant time .",
    "[ connected]let @xmath4 be a minimum spanning tree on @xmath11 , and assume that pp1 has been performed .",
    "if @xmath192 is connected and viable , then a minimum @xmath192-fixed spanning tree @xmath196 can be constructed from @xmath4 in @xmath216 time .",
    "let @xmath217 , let @xmath218 , and note that @xmath219 .",
    "a number of cycles may occur in @xmath27 , each one of them containing a path through @xmath192 with endpoints from @xmath178 .",
    "let @xmath16 be the graph obtained by deleting the set of edges @xmath220 from @xmath27 .",
    "we will show that @xmath221 , which suffices to prove the proposition since @xmath16 can clearly be constructed in @xmath216 time .    to prove that @xmath221 we first show that @xmath16 is acyclic and spans @xmath74 .",
    "every cycle of @xmath27 is of the form @xmath222 , and therefore deleting every @xmath223 from @xmath27 produces an acyclic graph .",
    "we use induction on @xmath224 to prove that @xmath16 is connected .",
    "let @xmath225 for some @xmath226 , let @xmath227 be the subtree of @xmath192 induced by @xmath228 , and let @xmath229 . subtracting @xmath230 from @xmath231 produces the graph @xmath232 . for the base case",
    "we let @xmath233 .",
    "the only cycle of @xmath234 is @xmath235 , and @xmath236 is an edge of this cycle . therefore deleting @xmath236",
    "does not destroy the connectivity of @xmath237 on @xmath74 .",
    "next assume that @xmath232 spans @xmath74 for some @xmath238 and suppose that @xmath239 . since @xmath232 is connected and acyclic there",
    "is exactly one path connecting @xmath240 to a node of @xmath241 not passing through any element of @xmath23 , i.e. this path is of the form @xmath242 for some unique @xmath243 .",
    "let @xmath244 and let @xmath245 .",
    "then @xmath246 is the graph with @xmath247 and @xmath248 .",
    "* claim : * for every @xmath249 either @xmath250 or @xmath251 .",
    "+ let @xmath252 and consider the following two cases .",
    "if @xmath240 lies on @xmath253 then @xmath254 since @xmath242 is a path in @xmath232 and therefore does not contain @xmath255 .",
    "therefore @xmath250 .",
    "for the second case , if @xmath240 does not lie on @xmath253 then let @xmath95 be the first common point of the paths @xmath253 and @xmath242 ; see figure  [ figureclaim ] .    ]",
    "note that @xmath95 may be equal to @xmath256 .",
    "clearly @xmath257 since @xmath258 is also a path in @xmath232 .",
    "there are now two possibilities to consider ; either @xmath259 , or @xmath260 , where for each possibility the second equality follows from inequality  ( [ eq2 ] ) .",
    "the claim follows .    by the above claim @xmath261 and we deduce that @xmath246 has been constructed from @xmath232 by adding one edge from @xmath192 and then deleting an edge of @xmath4 on the resultant cycle",
    "this completes the induction argument , and hence @xmath16 is connected and spans @xmath74 .",
    "next we prove that @xmath16 is a _ minimum _",
    "@xmath192-fixed spanning tree .",
    "let @xmath262 be the complete graph on @xmath11 .",
    "furthermore , suppose that the edges of @xmath262 are weighted by the function @xmath263 , where @xmath264 let @xmath265 be any spanning tree on @xmath178 .",
    "then clearly @xmath16 is a minimum @xmath192-fixed spanning tree if and only if the graph @xmath266 , where @xmath267 and @xmath268 , is a minimum spanning tree of @xmath262 with the above weight function . but this follows from a simple application of theorem [ kortee ] .",
    "hence @xmath221 , as required .    an immediate consequence of the above proof is the following result .    [ cora]@xmath269 .",
    "next we extend theorem  [ connected ] to the case where @xmath192 is not necessarily connected , which must be considered if @xmath270 . if @xmath270 we perform an additional preprocessing stage , pp2 , to calculate a true / false table @xmath271 such that @xmath272 if and only if edge @xmath273 .",
    "this requires at most @xmath274 time and @xmath274 space . for each connected component @xmath275 of @xmath192 let @xmath276 .",
    "we claim that _ algorithm @xmath192-mst _ , given in table [ table1 ] , calculates a minimum @xmath192-fixed spanning tree for any viable forest @xmath192 .",
    "+   +   +   +   + * step * & * description * + @xmath277 & @xmath277 + @xmath277 & let @xmath278 and let @xmath279",
    ". + @xmath277 & @xmath277 + 1 & * for * @xmath280 * to * @xmath281 * do * + @xmath277 & * begin * + 1a & @xmath282**for * * every distinct pair @xmath283 * do * + @xmath277 & @xmath282**begin * * + 1a(i ) & @xmath284let @xmath285 be the graph with + @xmath277 & @xmath286 + @xmath277 & @xmath284and + @xmath277 & @xmath287 + @xmath277 & @xmath288 .",
    "+ @xmath277 & @xmath277 + 1a(ii ) & @xmath284for every @xmath289 let @xmath290 and let + @xmath277 & @xmath291 ( where @xmath292 are from the previous step ) .",
    "+ 1a(iii ) & @xmath284perform a search through @xmath285 to find the path + @xmath277 & @xmath293 .",
    "+ @xmath277 & @xmath284let @xmath294 be the edge from @xmath295 + @xmath277 & @xmath284of maximum length .",
    "+ @xmath277 & @xmath282**end * * + @xmath277 & @xmath277 + @xmath277 & @xmath282let @xmath296 , + @xmath277 & @xmath297 , + @xmath277 & @xmath298 , + @xmath277 & @xmath299 .",
    "+ @xmath277 & * end * + @xmath277 & let @xmath300 .",
    "+    to understand algorithm @xmath192-mst observe first that for @xmath301 the algorithm is identical to that of theorem [ connected ] .",
    "in other words @xmath302 and this set is deleted from @xmath303 to produce @xmath196 .",
    "the algorithm is inductive in nature , at each step adding component @xmath275 to the current tree @xmath304 and then deleting the longest edges on every cycle to get a tree @xmath305 .",
    "all cycles that are obtained when adding @xmath275 to @xmath304 are of the form @xmath306 where @xmath283 . similarly to the proof of theorem [ connected ] , the required edge to be deleted at step @xmath142 for the pair @xmath307 , namely @xmath308 , is simply the longest edge on @xmath309 .",
    "it is clear that @xmath309 is either a path of @xmath4 or consists of alternating subpaths of @xmath4 and @xmath310 for various @xmath311 .",
    "since @xmath2 is constant it is possible to find , also in constant time , the subpaths of @xmath309 that lie in @xmath4 . by taking the maximum of the longest edges of all these paths in @xmath4 we get @xmath308 .",
    "the purpose of @xmath285 , as defined in the algorithm , is to have a graph of constant structural complexity that contains a representative edge for every path of @xmath304 that lies wholly in @xmath4 . by specifying the nodes and edges of @xmath285 in the manner of algorithm @xmath192-mst",
    "we are assured that @xmath309 corresponds to a path in @xmath285 connecting @xmath312 and @xmath145 .",
    "observe that any path @xmath313 in @xmath304 connecting nodes @xmath314 and @xmath315 lies entirely in @xmath4 if and only if @xmath316 for all @xmath317 , where @xmath318 is the set of edges that have been deleted from @xmath4 up to and including step @xmath319 .",
    "given an edge @xmath320 of @xmath285 we need to know the endpoints of the path in @xmath4 represented by @xmath320 . for this",
    "we introduce the functions @xmath321 , @xmath322 in algorithm @xmath192-mst .     at step @xmath142 ]    before formally proving the correctness of algorithm @xmath192-mst we illustrate a few of the above concepts in figure [ figeg1 ] .",
    "the solid - boundary ellipses and the sets @xmath324 are nodes of @xmath285 , the dashed lines are edges of @xmath285 , and the solid lines and circles are edges and nodes of @xmath4 . for @xmath313 we have @xmath325 and @xmath326 .",
    "notice that @xmath285 is not necessarily a tree , and therefore it is not immediately clear that there will be a unique path in @xmath285 connecting @xmath312 and @xmath145 .",
    "the next lemma settles this question .",
    "we assume by the inductive hypothesis that @xmath304 is a tree ; the base case @xmath280 holds from theorem [ connected ] .",
    "observe that for every path @xmath44 of @xmath285 connecting some @xmath327 and @xmath328 there exists a unique path @xmath329 in @xmath304 connecting some pair of nodes @xmath330 and @xmath331 .    ]",
    "[ jlem]@xmath285 contains at most one path connecting @xmath312 and @xmath145 .    to get a contradiction let @xmath332 and @xmath333 be two distinct paths of @xmath285 connecting @xmath312 and @xmath145 .",
    "let @xmath334 and @xmath335 be distinct nodes of @xmath332 such that the subpath @xmath336 of @xmath333 connecting @xmath334 and @xmath335 shares no internal nodes with @xmath332 ; see figure [ figeg2 ] .",
    "the pair @xmath334 and @xmath335 must exist since @xmath333 is a proper path ( i.e. , no nodes are repeated in the @xmath337 walk through @xmath333 ) .",
    "let @xmath338 be the subpath of @xmath332 connecting @xmath334 and @xmath335 .",
    "for @xmath339 let @xmath340 be the unique path through @xmath341 connecting the distinct endpoints of @xmath342 and @xmath343 in @xmath344 ; if @xmath342 and @xmath343 share the same endpoint in @xmath344 then @xmath340 is the empty set .",
    "clearly then @xmath345 is a cycle of @xmath304 , which contradicts the inductive hypothesis .",
    "[ pathlem]let @xmath283",
    ". then @xmath294 , as defined in algorithm @xmath192-mst , is the longest edge of @xmath309 , excluding any edges of @xmath192 .    by the previous lemma",
    "there is a unique path @xmath346 for algorithm @xmath192-mst to find .",
    "the required longest edge on this path is the maximum of the longest edges for each subpath of @xmath347 containing edges of @xmath4 only .",
    "the result follows .",
    "we now prove the main result of this section .",
    "the theorem implies that even in the case when @xmath192 is disconnected , our update method , as described in algorithm @xmath192-mst , produces an optimal @xmath192-fixed spanning tree in constant time .",
    "[ notconnected]let @xmath4 be a minimum spanning tree on @xmath11 , and assume that preprocessing steps pp1 and pp2 have been performed . if @xmath192 is a viable forest then algorithm @xmath192-mst correctly produces a minimum @xmath192-fixed spanning tree @xmath196 in at most @xmath348 time .",
    "the proposition is verified by using induction on @xmath281 ( the number of connected components of @xmath192 ) .",
    "theorem [ connected ] proves the base case : @xmath349 is connected , acyclic , and a minimum @xmath350-fixed spanning tree .",
    "similar reasoning is used to prove that each subsequent @xmath305 is connected and acyclic . at each inductive step ,",
    "corollary [ pathlem ] assures us that algorithm @xmath192-mst correctly deletes the longest edge ( excluding edges of @xmath192 ) of any new cycle formed .",
    "let @xmath351 .",
    "to prove minimality of @xmath305 we once again construct ( analogously to theorem [ connected ] ) a weighted complete graph @xmath262 on @xmath11 and a tree @xmath266 , such that @xmath305 is a minimum @xmath352-fixed spanning tree on @xmath74 if and only if @xmath266 is a minimum spanning tree of @xmath262 .",
    "theorem [ kortee ] then completes the minimality proof .    to verify the time complexity first note that @xmath353 and @xmath354",
    "line 1a of the algorithm requires @xmath216 time , line 1a(i ) requires at most @xmath355 time and line 1a(iii ) requires @xmath356 time .",
    "+   +   +   +   + * step * & * description * & * time * + @xmath277 & @xmath277 & @xmath277 + 1 & construct the oodc partition of @xmath11 . & @xmath7 + 2 & construct a minimum spanning tree @xmath4 on @xmath11 . & @xmath7 + 3 & perform preprocessing steps pp1 and pp2 on @xmath4 . &",
    "@xmath274 + @xmath277 & @xmath277 & @xmath277 + 4 & * for * every @xmath73 and each choice ( with repetition ) & @xmath3 + @xmath277 & of @xmath53 regions , @xmath357 , of the oodc partition * do * & @xmath277 + @xmath277 & * begin * & @xmath277 + 4a(i ) & @xmath284associate the free steiner point @xmath358 with region @xmath359 .",
    "& @xmath277 + 4a(ii ) & @xmath284let @xmath360 be the graph consisting of the vertices & @xmath277 + @xmath277 & @xmath361 , all edges @xmath362 , and & @xmath277 + @xmath277 & @xmath284all edges @xmath363 for every @xmath364 . & @xmath277 + 4a(iii ) & @xmath284let @xmath365 be the set of all viable subforests of @xmath360 . &",
    "@xmath277 + @xmath277 & @xmath277 & @xmath277 + 4b & @xmath284**for * * each @xmath366 * do * & @xmath367 + @xmath277 & @xmath284**begin * * & @xmath277 + 4b(i ) & @xmath368solve the fixed topology generalised steiner & @xmath369 + @xmath277 & @xmath368tree problem for @xmath177 to get the forest @xmath192 . & @xmath277 + 4b(ii ) & @xmath368run algorithm @xmath192-mst with input @xmath4 and @xmath192 , & @xmath348 + @xmath277 & @xmath368and let @xmath196 be its output . &",
    "@xmath277 + @xmath277 & @xmath284**end * * & @xmath277 + @xmath277 & * end * & @xmath277 + 5 & select a smallest total cost @xmath196 produced and let @xmath370 . & @xmath277 + @xmath277 & let @xmath23 be the set of steiner points of @xmath371 .",
    "& @xmath277 +    we present _",
    "algorithm @xmath2-gsmt _ , in table [ table2 ] .",
    "as stated in section 1 , the algorithm contains three main phases for a given iteration .",
    "lines 4a(i)-4a(iii ) represent the first phase , namely the construction of a feasible internal topology .",
    "the set @xmath365 contains all feasible internal topologies as specified by a given choice of regions of the oodc partition .",
    "line 4b(i ) performs the second phase by solving the fixed topology problem for the current feasible internal topology .",
    "line 4b(ii ) executes the minimum spanning tree update process , which is the final phase for the given iteration . to prove correctness of algorithm @xmath2-gsmt we first need some definitions and two observations .",
    "let @xmath372 be a generalised @xmath2-steiner minimum tree on @xmath11 .",
    "let @xmath23 be the set of steiner points in @xmath372 and let @xmath373 be the subforest of @xmath372 induced by the edges of @xmath372 incident with elements of @xmath23 .",
    "let @xmath374 be a connected component of @xmath373 with @xmath375 steiner points and terminal set @xmath376 .",
    "note that , like @xmath372 , @xmath373 may not be unique for a given set @xmath11 .",
    "[ fiopt]@xmath374 is a generalised @xmath375-steiner minimum tree on @xmath377 .",
    "[ fiswap]let @xmath378 be any generalised @xmath375-steiner minimum tree on @xmath377 .",
    "suppose we transform @xmath372 to @xmath16 by replacing the subtree @xmath374 on @xmath4 by @xmath378 .",
    "then @xmath16 is also a generalised @xmath2-steiner minimum tree on @xmath11 .",
    "we can now prove correctness .",
    "[ correctness ] if @xmath82 and @xmath24 satisfy restrictions 14 then algorithm @xmath2-gsmt constructs , in a time of @xmath3 , a tree @xmath371 that is a generalised @xmath2-steiner minimum tree on the terminal set @xmath11 .    by the properties of the oodc partition ,",
    "during the course of the algorithm a forest @xmath192 induced by edges incident with steiner points is constructed with connected components @xmath275 such that each @xmath275 has the same terminal set ( i.e. @xmath377 ) and the same topology as @xmath374 , and therefore @xmath379 where , recall , for any @xmath4 the symbol @xmath380 denotes the cost of @xmath4 with respect to @xmath24 .",
    "we now consider two cases .",
    "suppose , for the first case , that @xmath381 .",
    "step  4b(ii ) of the algorithm constructs a minimum @xmath192-fixed spanning tree @xmath196 on @xmath74 .",
    "since @xmath372 is a minimum spanning tree on @xmath74 and contains @xmath192 as a subforest , it follows that @xmath196 is also a minimum spanning tree on @xmath74 . by corollary  [ mst - coroll ]",
    ", @xmath370 is a generalised @xmath2-steiner minimum tree on @xmath11 , as required .",
    "if , on the other hand , @xmath382 , then there is a tree @xmath196 constructed in step  4b(ii ) of the algorithm that is the same as in the previous paragraph , except each @xmath275 is replaced by @xmath374 . by equation  ( [ eqfi ] ) and",
    "observation  [ fiswap ] it again follows that @xmath370 is a generalised @xmath2-steiner minimum tree on @xmath11 .    by using cayley s formula and the observation that each spanning forest is a subgraph of a spanning tree",
    "which has @xmath383 edges , we get an upper bound for @xmath384 of @xmath385 in step 4b of the algorithm .",
    "the function @xmath386 in step 4b(i ) will depend on the relevant generalised @xmath2-steiner tree problem and will be a function of @xmath2 only . since @xmath2 is constant the overall time complexity of algorithm @xmath2-gsmt is @xmath3 .",
    "note that if @xmath193 or if the there is only one component , then the algorithm takes @xmath1 time since we do not run pp2 .    for any planar norm and symmetric @xmath64-optimisable cost function satisfying restrictions 1 - 4",
    "there exists a polynomial time algorithm with complexity @xmath3 that solves the generalised @xmath2-steiner tree problem for constant @xmath2 .",
    "the outcome of this paper is a generalisation , on multiple fronts , of georgakopoulos and papadimitriou s @xmath1 solution to the @xmath0-steiner tree problem . by utilising abstract voronoi diagrams ,",
    "we build on their complexity - reducing concept of oriented dirichlet cell partitions .",
    "the result is a broadening of the scope of these partitions to include terminal sets in a larger class of normed planes .",
    "a bigger challenge in our research was to construct a generalisation to @xmath2 steiner points .",
    "we achieve this by producing a novel method of updating a minimum spanning tree to include a fixed subtree .",
    "a two - part preprocessing stage allows this to be done in constant time with respect to the total number of terminals .",
    "one of the key observations of our research was that the main algorithm from @xcite basically pertains to any  steiner - like \" problem with cost function @xmath24 , as long as it is guaranteed that a solution exists which is optimal with respect to @xmath24 and is also a minimum spanning tree on its complete set of nodes .",
    "this fact allows us to accommodate the class of generalised @xmath2-steiner tree problems with symmetric @xmath64-optimisable cost functions .",
    "the result is an @xmath3-time solution to this class of problems .    it may be possible to generalise our algorithm to higher dimensional spaces , at least in the euclidean case .",
    "a natural starting point could be monma and suri s paper @xcite , where a partition of @xmath387-dimensional euclidean space is constructed that has similar topology - limiting properties as the oriented dirichlet cell partition .",
    "bae , c. lee and s. choi , on exact solutions to the euclidean bottleneck steiner tree problem , information processing letters 110 ( 2010 ) 672678 .",
    "bae , s. choi , c. lee and s. tanigawa , exact algorithms for the bottleneck steiner tree problem , _ algorithmica _ , 61 ( 2011 ) , pp .",
    "m. brazil , m. zachariasen , steiner trees for fixed orientation metrics , _ journal of global optimization _",
    ", 43 ( 2009 ) , pp .",
    ". l. p. chew , r. l. drysdale , iii , voronoi diagrams based on convex distance functions , _",
    "proceedings 1st acm symposium on computational geometry _ , ( 1985 ) , pp .",
    "z. drezner , g. o. wesolowsky , a new method for the mulfifacility minimax location problem , _ the journal of the operational research society _ , 29 ( 1978 ) , pp .",
    ". j. l. ganley , geometric interconnection and placement algorithms , ph .",
    "d thesis , department of computer science , university of virginia , charlottesville , va , 1995 .",
    "j. l. ganley , j. s. salowe , optimal and approximate bottleneck steiner trees , _",
    "operations research letters _ , 19 ( 1996 ) , pp . 217224 .",
    "g. georgakopoulos , c. h. papadimitriou , the 1-steiner tree problem , _ journal of algorithms _ , 8 ( 1987 ) , pp .",
    "e. n. gilbert , h. o. pollak , steiner minimal trees , _ siam j. appl",
    "_ , 16 ( 1968 ) , pp",
    ". j. griffith , g. robins , j. s. salowe , t. zhang , closing the gap : near - optimal steiner trees in polynomial time , _ ieee transactions on computer - aided design of integrated circuits and systems _ , 13 , ( 1994 ) , pp .",
    ". f. k. hwang , d. s. richards , p. winter , the steiner tree problem .",
    "_ annals of discrete mathematics _ 53 , elsevier science publishers b.v . ,",
    "amsterdam , 1992 .",
    "f. k. hwang , j. f. weng , the shortest network under a given topology , _ journal of algorithms _",
    ", 13 ( 1992 ) , pp .",
    "468 - 488 .",
    "d. b. johnson , p. metaxas , optimal algorithms for the vertex updating problem of a minimum spanning tree , _ proceedings of the sixth international parallel processing symposium _ , march 1992 , pp .",
    "a. b. kahng , g. robins , a new class of iterative steiner tree heuristics with good performance , _ ieee transactions on computer - aided design _ , 11 ( 1992 ) , pp .",
    ". b. korte , j. vygen , combinatorial optimization : theory and algorithms , _ algorithms and combinatorics _",
    ", 21 , springer - verlag , 2008 , pp . 120121 .",
    "j. lee , a first course in combinatorial optimization , _ cambridge texts in applied mathematics _ , cambridge university press , 2004 .",
    "lin , a. p. thurber , g. xue , the @xmath0-steiner tree problem in lambda-3 geometry plane , _ proceedings of the 1999 ieee international symposium on circuits and systems _",
    ", 6 ( july 1999 ) , pp .",
    "r. f. love , g. o. wesolowsky , s. a. kraemer , a multifacility minimax location method for euclidean distances , _ international journal of production research _ , 11 ( 1973 ) , pp .",
    "c. monma , s. suri , transitions in geometric minimum spanning trees , _ discrete and computational geometry _ , 8 ( 1992 ) , pp .",
    ". j. h. rubinstein , d. a. thomas , j. f. weng , degree - five steiner points can not reduce network costs for planar sets , _ networks _",
    ", 22 ( 1992 ) , pp .",
    ". m. sarrafzadeh , c.k .",
    "wong , bottleneck steiner trees in the plane , _ ieee trans .",
    "comput_. , 41 ( 1992 ) , pp . 370374 .",
    "m. i. shamos and d. hoey , closest - point problems , _ proceedings of the 16-th annual symposium on foundations of computer science _ , ( 1975 ) , pp .",
    "warme , d.m . , winter , p. , zachariasen , m. : exact algorithms for steiner tree problems : a computational study . in : du , d. , smith , j.m . ,",
    "rubinstein , j.h .",
    "advances in steiner trees , pp .",
    "kluwer academic publishers , netherlands ( 2000 )"
  ],
  "abstract_text": [
    "<S> the @xmath0-steiner tree problem , the problem of constructing a steiner minimum tree containing at most one steiner point , has been solved in the euclidean plane by georgakopoulos and papadimitriou using plane subdivisions called oriented dirichlet cell partitions . </S>",
    "<S> their algorithm produces an optimal solution within @xmath1 time . in this paper </S>",
    "<S> we generalise their approach in order to solve the @xmath2-steiner tree problem , in which the steiner minimum tree may contain up to @xmath2 steiner points for a given constant @xmath2 . </S>",
    "<S> we also extend their approach further to encompass other normed planes , and to solve a much wider class of problems , including the @xmath2-bottleneck steiner tree problem and other generalised @xmath2-steiner tree problems . </S>",
    "<S> we show that , for any fixed @xmath2 , such problems can be solved in @xmath3 time .    </S>",
    "<S> _ keywords : _ </S>",
    "<S> @xmath2-steiner tree ; bottleneck steiner problem ; network optimisation ; polynomial time algorithm </S>"
  ]
}
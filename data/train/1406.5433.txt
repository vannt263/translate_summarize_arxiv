{
  "article_text": [
    "a _ mean payoff game _ involves two opponents , `` max '' and  min  , who alternatively move a pawn over the nodes of a weighted bipartite digraph .",
    "the latter consists of two classes of nodes , represented by squares and circles , and respectively indexed by @xmath1 $ ] and @xmath2 $ ] ( we use the notation @xmath3 : = \\{1 , \\dots , k\\}$ ] ) . the weight of the arc @xmath4 ( resp .",
    "@xmath5 ) ) is a real number denoted by @xmath6 ( resp .",
    "@xmath7 ) .",
    "we set @xmath8 ( resp .",
    "@xmath9 ) when there is no such arc .",
    "an example of game is given in figure  [ fig : game ] .",
    "when the pawn is placed over a square node @xmath10 , player max selects an outgoing arc @xmath4 , and then moves the pawn to circle node @xmath11 and receives the payment @xmath6 from player min .",
    "conversely , when the pawn is located on a circle node @xmath11 , player min chooses an arc @xmath12 , moves the pawn to square node @xmath13 , and player max pays her the amount @xmath14 .",
    "we assume that @xmath15 ( resp .",
    "@xmath16 ) does not have any identically @xmath17 row ( resp .",
    "column ) , so that both players have at least one possible action at every node .",
    "the game starts from a circle node @xmath18 , and then the two players make infinitely many moves , visiting a sequence @xmath19 of nodes .",
    "the objective of player max is to maximize his mean payoff , defined as the liminf of the following ratio when @xmath20 : @xmath21 symmetrically , player min aims at minimizing her mean loss , defined as the limsup of   when @xmath20 .",
    "mean payoff games can be defined more generally over arbitrary ( not necessarily bipartite ) digraphs .",
    "this situation can be reduced to the present one  @xcite .",
    "-15ex    ( i1 ) at ( 0,0 ) @xmath22 ; ( i2 ) at ( 3,0 ) @xmath23 ; ( i3 ) at ( 6,0 ) @xmath24 ;    ( j1 ) at ( 0,2.5 ) @xmath22 ; ( j2 ) at ( 3,2.5 ) @xmath23 ; ( j3 ) at ( 6,2.5 ) @xmath24 ;    ( i1 ) to[out=120,in=-120 ] node[above left=0ex and -0.5ex , font= ] @xmath25 ( j1 ) ; ( i1 ) ",
    "node[above right=2ex and -0.5ex , font= ] @xmath26 ( j2 ) ;    ( j1 ) to[out=-60,in=60 ] node[below left=0ex and -0.3ex , font= ] @xmath27 ( i1 ) ; ( j1 )  node[below right=1.5ex and 0.5ex , font= ] @xmath24 ( i2 ) ;    ( i2 ) to[out=20,in=-120 ] node[above right=2ex and 3.5ex , font= ] @xmath23 ( j3 ) ; ( j2 ) to[out=-90,in=90 ] node[below right=0ex and -0.5ex , font= ] @xmath28 ( i2 ) ; ( j2 ) to[out=-20,in=120 ] node[above=0.5ex , font= ] @xmath22 ( i3 ) ;    ( j3 ) .. controls ( -2.5,5 ) and ( -2,1 ) .. node[left , font= ] @xmath24 ( i1 ) ; ( i3 ) to[out=160,in=-60 ] node[above left=1ex and -0.5ex , font= ] @xmath29 ( j2 ) ;    mean payoff games were studied by ehrenfeucht and mycielski  in @xcite , where they proved that these games have a value and positional optimal strategies . in more detail , for every initial state @xmath2 $ ]",
    ", there exists a real @xmath30 and positional strategies @xmath31 \\rightarrow [ n]$ ] and @xmath32 \\rightarrow [ m]$ ] , such that :    player max is certain to win a mean payoff greater than or equal to @xmath30 with the strategy @xmath33 ( _ i.e. _  by choosing the arc @xmath34 every time the pawn is on a square node @xmath1 $ ] ) ,    player min is sure that her mean loss is less than or equal to @xmath30 with the strategy @xmath35 .",
    "the decision problem associated with mean payoff games consists in determining whether the initial state @xmath11 is _ winning _ for player max , _",
    "i.e. _  @xmath36 .",
    "the question of the existence of a polynomial time algorithm solving this problem was first raised by gurvich , karzanov and khachiyan in  @xcite .",
    "this problem was shown to be in @xmath37 by zwick and paterson in  @xcite .",
    "while mean payoff games ( and the related class of parity games ) received an important attention over the past years  @xcite , all the algorithms developed so far are superpolynomial , and the question raised by gurvich  _ et al .",
    "_ is still open .",
    "the present work exploits the equivalence between mean payoff games and linear feasibility problems in tropical algebra .",
    "indeed , it was shown by akian , gaubert and guterman in  @xcite that the initial state @xmath38 is winning for player max in the game with payments matrices @xmath39 if , and only if , there exists a solution @xmath40 to the following system of inequalities : @xmath41 , \\qquad \\max(a_{i1 } + x_1 , \\dots , a_{i(n-1 ) } + x_{n-1 } , a_{in } ) \\\\",
    "\\geq \\max(b_{i1 } + x_1 , \\dots , b_{i(n-1 ) } + x_{n-1 } , b_{in } ) \\ .",
    "\\label{eq : trop_ineq}\\end{gathered}\\ ] ] the constraints of the form   correspond to affine inequalities over the tropical ( max - plus ) semiring , _",
    "i.e. _  the set @xmath42 endowed with the operations @xmath43 as addition , and @xmath44 as multiplication .",
    "the conjunction of finitely many such inequalities defines a _",
    "tropical polyhedron_. solving a mean payoff game consequently amounts to determine whether a tropical polyhedron is empty , which can be thought of as the tropical analogue of the feasibility problem in linear programming .",
    "this is among the motivations leading to the development of a tropical simplex method in a previous work of the authors and joswig  @xcite .",
    "then , complexity results known for the classical simplex algorithm can be potentially transferred to the tropical setting . however , the main obstacle is to `` tropicalize '' the pivoting rule involved , _",
    "i.e. _  to define a tropical pivoting rule which is both compatible with the classical one , and computable , if possible , with a reasonable time complexity .",
    "so far  @xcite , the only pivoting rules which have been tropicalized are _ combinatorial _ , _ i.e. _  they are defined in terms of the neighborhood of the current basic point in the vertex / edge graph of the polyhedron .",
    "we prove that the shadow - vertex simplex algorithm can be tropicalized .",
    "following the average - case analysis of the shadow - vertex algorithm of adler , karp and shamir in  @xcite , we deduce that the tropical algorithm solves mean payoff games in polynomial time on average ( section  [ sec : pcbc ] ) .",
    "the complexity bound holds when the distribution of the games satisfies a _ flip invariance _ property .",
    "the latter requires that the distribution of the games is left invariant by every transformation consisting , for an arbitrary node of the game , in flipping the orientation of all the arcs incident to this node .",
    "equivalently , the probability distribution on the set of payment matrices @xmath39 is invariant by every transformation consisting in swapping the @xmath10th row of @xmath15 with the @xmath10th row of @xmath16 , or the @xmath11th column of @xmath15 with the @xmath11th column of @xmath16 .",
    "figure  [ fig : flip ] provides the illustration of a discrete distribution of games satisfying the property .",
    "the key difficulty in our approach is to show that the computation of the tropical shadow - vertex pivoting rule can be done in polynomial time ( section  [ sec : shadow_vertex ] ) . to this end , we exploit the fact that the shadow - vertex rule is semi - algebraic , _",
    "i.e. _  it is defined in terms of the signs of finitely many polynomials . under some genericity conditions ,",
    "we deduce that the tropical rule reduces to classical linear programs over some newton polytopes , which are actually ( minkowski sums of ) bipartite perfect matching polytopes .",
    "we are not aware of other works with such average - case complexity results on mean payoff games .",
    "in  @xcite , roth  _ et al .",
    "_ made a probabilistic analysis of @xmath45 bi - matrix games with weights chosen independently uniformly in @xmath46 $ ] . under this assumption , they showed that with high probability ( greater than @xmath47 , with @xmath48 for all constant @xmath49 ) , such games admit a pure stationary strategy equilibrium parametrized by only @xmath50 actions .",
    "the latter can be consequently found in polynomial time .",
    "while this result indicates that complex instances of games are rare , it does not seem to us that it can be used to deduce an average - case complexity bound .",
    "( i1 ) at ( 0,0 ) @xmath22 ;    ( j1 ) at ( 2.5,1.15 ) @xmath22 ; ( j2 ) at ( 2.5,-1.15 ) @xmath23 ;    ( i1 ) to[out=40,in=-166 ] node[above , font= ] @xmath51 ( j1 ) ; ( j1 ) to[out=-140,in=14 ] node[below right=-0.75ex and 0.5ex , font= ] @xmath25 ( i1 ) ; ( i1 ) to[out=-14,in=140 ] node[above right=-0.75ex and 0.5ex , font= ] @xmath23 ( j2 ) ; ( j2 ) to[out=166,in=-40 ] node[below , font= ] @xmath24 ( i1 ) ; at ( 1.25,-2.35 ) @xmath52 b & = ( 5 \\ ; \\ , 3 ) \\end{aligned } $ ] ;    ( i1 ) at ( 0,0 ) @xmath22 ;    ( j1 ) at ( 2.5,1.15 ) @xmath22 ; ( j2 ) at ( 2.5,-1.15 ) @xmath23 ;    ( i1 ) to[out=40,in=-166 ] node[above , font= ] @xmath25 ( j1 ) ; ( j1 ) to[out=-140,in=14 ] node[below right=-0.75ex and 0.5ex , font= ] @xmath51 ( i1 ) ; ( i1 ) to[out=-14,in=140 ] node[above right=-0.75ex and 0.5ex , font= ] @xmath24 ( j2 ) ; ( j2 ) to[out=166,in=-40 ] node[below , font= ] @xmath23 ( i1 ) ; at ( 1.25,-2.35 ) @xmath53 b & = ( 7 \\ ; \\ , 2 ) \\end{aligned } $ ] ;    ( i1 ) at ( 0,0 ) @xmath22 ;    ( j1 ) at ( 2.5,1.15 ) @xmath22 ; ( j2 ) at ( 2.5,-1.15 ) @xmath23 ;    ( i1 ) to[out=40,in=-166 ] node[above , font= ] @xmath25 ( j1 ) ; ( j1 ) to[out=-140,in=14 ] node[below right=-0.75ex and 0.5ex , font= ] @xmath51 ( i1 ) ; ( i1 ) to[out=-14,in=140 ] node[above right=-0.75ex and 0.5ex , font= ] @xmath23 ( j2 ) ; ( j2 ) to[out=166,in=-40 ] node[below , font= ] @xmath24 ( i1 ) ; at ( 1.25,-2.35 ) @xmath54 b & = ( 7 \\ ; \\ , 3 ) \\end{aligned } $ ] ;    ( i1 ) at ( 0,0 ) @xmath22 ;    ( j1 ) at ( 2.5,1.15 ) @xmath22 ; ( j2 ) at ( 2.5,-1.15 ) @xmath23 ;    ( i1 ) to[out=40,in=-166 ] node[above , font= ] @xmath51 ( j1 ) ; ( j1 ) to[out=-140,in=14 ] node[below right=-0.75ex and 0.5ex , font= ] @xmath25 ( i1 ) ; ( i1 ) to[out=-14,in=140 ] node[above right=-0.75ex and 0.5ex , font= ] @xmath24 ( j2 ) ; ( j2 ) to[out=166,in=-40 ] node[below , font= ] @xmath23 ( i1 ) ; at ( 1.25,-2.35 ) @xmath55 b & = ( 5 \\ ; \\ , 2 ) \\end{aligned } $ ] ;",
    "as previously discussed , the triple @xmath56 forms a semiring , and the elements @xmath57 and @xmath58 correspond to the zero and unit respectively .",
    "the tropical operations can be extended to matrices with entries in @xmath59 in a usual way , by defining @xmath60 and @xmath61 .",
    "we also introduce the exponentiation @xmath62 for any @xmath63 and @xmath64 , which is defined as the product @xmath65 of @xmath66 occurrences of @xmath67 ( if @xmath68 , it is set to @xmath69 ) .",
    "even if the addition @xmath70 does not have an inverse , it is convenient to consider tropical numbers with a negative sign .",
    "the sign is encoded in a formal way , by introducing two copies @xmath71 and @xmath72 of @xmath73 , respectively consisting of the positive and negative elements .",
    "the set @xmath74 of _ tropical signed numbers _ is defined as @xmath75 .",
    "the elements of @xmath71 are simply denoted by elements @xmath76 , while the elements of @xmath72 are denoted by @xmath77 .",
    "the _ modulus _ of @xmath78 is defined as @xmath79 if @xmath80 or @xmath81 , and @xmath82 .",
    "similarly , the _ sign _ of @xmath78 is defined by @xmath83 if @xmath84 , @xmath85 if @xmath86 , and @xmath87 .",
    "while the tropical addition of signed elements may not be well defined , we can extend the multiplication over @xmath88 , by defining @xmath89 as the unique element of @xmath74 with modulus @xmath90 and sign @xmath91 .",
    "for instance , @xmath92 , and @xmath93 .",
    "the exponentiation @xmath62 is generalized to the case @xmath78 as well . for any @xmath78",
    ", we use the notation @xmath94 as a shorthand for the operation @xmath95 .",
    "the _ positive _ and _ negative parts _ @xmath96 and @xmath97 of an element @xmath78 are defined by @xmath98 if @xmath84 , @xmath99 if @xmath86 , and @xmath100 if @xmath101 .",
    "we extend this notation to vectors and matrices entrywise .",
    "a matrix @xmath102 is said to be _ generic _ if the following maximum @xmath103 is not equal to @xmath104 , and is attained by only one permutation @xmath33 in the symmetric group @xmath105 .",
    "a matrix @xmath106 is _ strongly non - degenerate _ if all of its square submatrices are generic .",
    "in particular , the coefficients of @xmath15 are not null ( tropically ) .",
    "tropical arithmetic can be intuitively illustrated by the arithmetic over asymptotic orders of magnitude .",
    "for instance , if we denote by @xmath107 the equivalence class of real functions of @xmath108 which belong to some interval @xmath109 $ ] when @xmath110 ( @xmath111 ) , we have @xmath112 , and @xmath113 .",
    "we use generalized puiseux series as a way to manipulate such orders of magnitude in a formal way .",
    "a _ ( real ) generalized puiseux series _ ( or _ puiseux series _ for short ) is a formal series @xmath114 in the indeterminate @xmath108 of the form @xmath115 , where @xmath116 , @xmath117 , and the sequence of the @xmath118 is decreasing , and either finite or unbounded .",
    "the set of generalized puiseux series forms a field that we denote @xmath119 . given a puiseux series @xmath114 as above",
    ", the largest exponent @xmath120 is called the _ valuation _ of @xmath114 , and is denoted by @xmath121 . by convention , the valuation of the null series @xmath122 is defined as @xmath123 . thus the valuation @xmath124 maps @xmath119 to @xmath59 .    a puiseux series",
    "@xmath114 is _ positive _ , which is denoted by @xmath125 , if the coefficient @xmath126 of the term with largest exponent in @xmath114 is positive .",
    "we denote by @xmath127 the total order over @xmath119 defined by @xmath128 if @xmath129 or @xmath130 .",
    "then , we define the _ signed valuation _",
    "@xmath131 of @xmath114 as the element of @xmath74 given by @xmath121 if @xmath125 , @xmath132 if @xmath133 , and @xmath104 if @xmath122 . given @xmath78",
    ", we also denote by @xmath134 the set of puiseux series @xmath114 such that @xmath135 .",
    "valuation , signed valuation and its inverse are extended to vectors and matrices coordinate - wise .",
    "as discussed above , the arithmetic operations over @xmath119 and @xmath59 are related .",
    "for instance , for all @xmath136 , we have @xmath137 .",
    "similarly , if @xmath138 , then @xmath139 . more generally , the valuation will be used to transfer `` classical '' results to the tropical setting . in particular , convex polyhedra and linear programs over generalized puiseux series",
    "essentially behave as over @xmath140 ( @xmath119 is a real - closed field  @xcite , so tarski s transfer principle applies ) .",
    "the simplex algorithm can be defined over @xmath119 as usual , and the valuation map will allow us to relate it with the tropical simplex algorithm .      given a matrix @xmath15 of dimension @xmath141 , and two subsets @xmath142 $ ] and @xmath143 $ ] , we denote by @xmath144 the submatrix formed by the rows and the columns of @xmath15 respectively indexed by @xmath145 and @xmath146 .",
    "if @xmath147 $ ] , we simply use the notation @xmath148 .",
    "similarly , if @xmath149 $ ] , @xmath150 represents the @xmath10-th line of @xmath15 .",
    "the transpose matrix of @xmath15 is denoted by @xmath151 , and the cardinality of a set @xmath152 by @xmath153 . given @xmath154 , we denote by @xmath155 ( resp .",
    "@xmath156 ) the matrix of dimension @xmath45 , with coefficients @xmath157 on the diagonal , and @xmath29 ( resp .",
    "@xmath104 ) elsewhere .",
    "the tropical simplex method , introduced in  @xcite , allows to solve tropical analogues of linear programming problems : @xmath158 where @xmath106 , @xmath159 , and @xmath160 .",
    "we denote by @xmath161 the tropical polyhedron defined by the constraints of  [ eq : trop_lp ] .",
    "note that the inequalities @xmath162 are trivially satisfied by any @xmath163 , hence they are superfluous .",
    "however , as we shall see , they are involved in the definition of tropical basic points , which is why we need to keep them .",
    "( -0.5,-0.5 ) grid ( 9.5,7.5 ) ; ( -0.5,0 )  ( 9.5,0 ) node[color = gray!50,above ] @xmath164 ; ( 0,-0.5 )  ( 0,7.5 ) node[color = gray!50,above ] @xmath165 ;    ( -0.5,2 ) ",
    "( 7,2 )  ( 7,-0.5 ) ;    ( 7.5,7.5 ) ",
    "( 4,-0.5 ) ;    ( 4,2 ) circle ( 4pt ) ;    similarly to the classical simplex method , the principle of the tropical simplex method is to pivot over the ( feasible ) tropical basic points , while decreasing the objective function @xmath166 .",
    "it handles tropical linear programs which satisfy a certain non - degeneracy assumption . here",
    ", we will make the following sufficient assumption :    [ assump : non_degenerate ] the matrices @xmath167 and @xmath168 are strongly non - degenerate .    in this setting , a _ basis _",
    "is a couple @xmath169 where @xmath142 $ ] , @xmath143 $ ] satisfy @xmath170 .",
    "note that we will often manipulate @xmath169 through the disjoint union @xmath171 of @xmath152 and @xmath172 . by a tropical analogue of cramer theorem  @xcite",
    ", it can be shown that , under assumption  [ assump : non_degenerate ] , the system @xmath173 admits at most one solution in @xmath174 . if this system admits a solution @xmath175 , the latter is referred to as the _ basic point _ associated with the basis @xmath169 .",
    "when @xmath175 belongs to @xmath161 , it is called a _",
    "feasible basic point _ , and @xmath169 is a _ feasible basis_.",
    "every equality in the system described in   defines a _",
    "tropical hyperplane_. assumption  [ assump : non_degenerate ] ensures that these hyperplanes are in general position , so that the intersection of @xmath38 such hyperplanes is either empty , or reduced to a singleton .",
    "we refer to figure  [ fig : hyperplanes ] for an illustration .",
    "this provides a geometric interpretation of basic points in terms of the arrangement of the tropical hyperplanes associated with the system @xmath162 , @xmath176 .",
    "the execution of the tropical simplex method on  [ eq : trop_lp ] is related with the execution of the classical simplex method on a lifting linear program over puiseux series .",
    "more precisely , a _ lift _ of  [ eq : trop_lp ] is a linear program over puiseux series of the form : @xmath177 where @xmath178 , @xmath179 , and @xmath180 .",
    "let us denote by @xmath181 the convex polyhedron defined by the inequalities of  [ eq : lp ] .",
    "then , @xmath161 and @xmath181 have precisely the same ( feasible ) bases , and the map @xmath182 induces a one - to - one correspondence between their basic points  ( * ? ? ?",
    "* proposition  17 ) .",
    "besides , if @xmath183 minimizes the function @xmath184 , then @xmath185 minimizes @xmath166 . note that under assumption  [ assump : non_degenerate ] , the linear program @xmath186 is non - degenerate , in the sense that no minor of @xmath187 and @xmath188 is null .    moreover , both simplex methods iterate over basic points in the same way . starting from a basic point of basis @xmath169",
    ", they pivot to an adjacent basic point associated with a basis @xmath189 such that @xmath190 , for some @xmath191 , @xmath192 .",
    "the element @xmath193 is called the _ leaving variable _ , and is provided by the pivoting rule .",
    "the integer @xmath194 is uniquely determined when the problem is non - degenerate .    as a consequence , under assumption  [ assump : non_degenerate ] ,",
    "if the classical and tropical simplex methods both start from the basis @xmath169 and select the same leaving variable @xmath193 , they pivot to the same basis @xmath195 . in other words ,",
    "the tropical simplex method traces the image under the map @xmath124 of the path followed by the classical simplex method , provided that they use compatible pivoting rules , _",
    "i.e. _  at any feasible basis , both rules select the same leaving variable .",
    "we recall that , given a tropical basic point with basis @xmath169 and a leaving variable @xmath193 , the operation of pivoting to the next tropical basic point can be done in time @xmath196  ( * ? ? ?",
    "* theorem  33 ) .",
    "however , this pivoting operation is limited to basic points with no @xmath17 coefficients .",
    "we present in figure  [ fig : tropical_pivoting ] a simpler , but more expensive , pivoting operation , which handles the general case .",
    "the algorithm @xmath197 consists in testing all the @xmath198 possibly entering variables @xmath194 in the complement of @xmath171 . by the non - degeneracy assumptions ,",
    "only one variable can lead to a feasible basis .",
    "each candidate basic point can be computed in time @xmath199 ( see  @xcite ) , and the feasibility can be checked in @xmath200 by testing the @xmath198 inequalities in @xmath201 .",
    "the total complexity of our pivoting operation is therefore in @xmath202 .",
    "let @xmath203 ) be defined by @xmath190 @xmath195    [ remark : edge ] the geometric interpretation of the pivoting operation in the tropical setting is analogous to the classical setting .",
    "let @xmath67 and @xmath204 be two adjacent tropical basic points , respectively associated with the bases @xmath169 and @xmath195 , so that @xmath190 for some @xmath191 , @xmath192 .",
    "let @xmath205 $ ] and @xmath206 $ ] such that @xmath207 .",
    "then , the set @xmath208 of points @xmath209 which satisfy the equalities @xmath210 is called a _ tropical edge _ of @xmath161 .",
    "geometrically , it coincides with the _ tropical segment _ between the two points @xmath211 , which consists of the set @xmath212 . as shown in  (",
    "* proposition  18 ) , this tropical edge is equal to the image under the map @xmath124 of the edge @xmath213 of the polyhedron @xmath181 which connects the two basic points associated with the bases @xmath169 and @xmath189 .",
    "we provide in figure  [ fig : tropical_polyhedron ] an example of tropical polyhedron in dimension @xmath23 .",
    "it is defined by the following five inequalities : @xmath214 or , equivalently , by the system @xmath215 where : @xmath216 note that the inequalities @xmath162 are never active ( our polyhedron is bounded in @xmath217 ) , so that all feasible bases are of the form @xmath218 , where @xmath219 $ ] has cardinality @xmath23 .",
    "the basic points associated with the bases @xmath220 and @xmath221 are depicted in blue and orange respectively . the tropical edge between them is represented in green .",
    "( -0.5,-0.5 ) grid ( 9.5,7.5 ) ; ( -0.5,0 )  ( 9.5,0 ) node[color = gray!50,above ] @xmath164 ; ( 0,-0.5 )  ( 0,7.5 ) node[color = gray!50,above ] @xmath165 ;    ( 1,2 )  ( 3,2 ) ",
    "( 7,4 )  ( 8,5 ) ",
    "( 1,5 )  cycle ; ( 1,2 ) ",
    "( 1,5 )  cycle ;    ( 7,1 )  ( 7,4 ) ",
    "( 8,5 ) ; ( 7,1 ) circle ( 4pt ) ; ( 8,5 ) circle ( 4pt ) ;",
    "given @xmath222 , the shadow - vertex rule aims at solving the following parametric family of linear programs for increasing values of @xmath223 : @xmath224 the vectors @xmath225 and @xmath226 are respectively called _ objective _ and _ co - objective _ vectors .",
    "the input of   is supposed to satisfy a genericity property . here",
    ", we will assume that no minor of @xmath227 and @xmath228 is null .    when @xmath229 is continuously increased from @xmath29 , the basic points of @xmath181 minimizing the function @xmath230 form a sequence @xmath231 .",
    "the shadow - vertex rule amounts to iterate over this sequence .",
    "it relies on the reduced cost vectors w.r.t",
    ".  the objective and co - objective vectors . given a basis @xmath169 , the _ reduced cost vector _",
    "@xmath232 w.r.t .",
    "the objective vector @xmath225 is defined as the unique solution @xmath233 of the system @xmath234 , where @xmath235 , and @xmath236 is the identity matrix .",
    "the reduced cost vector @xmath237 w.r.t .  the co - objective vector @xmath226 can be defined similarly , by replacing @xmath225 by @xmath226 .",
    "then , at basis @xmath169 , the shadow - vertex rule selects the leaving variable @xmath191 such that @xmath238 , @xmath239 , and : @xmath240 note that @xmath193 is unique under the non - degeneracy assumptions .",
    "we refer to  ( * ? ? ?",
    "* chapter  1.3 ) for a proof of  . in the following",
    ", we will denote by @xmath241 the function which , given a basis @xmath169 , returns the leaving variable provided by the shadow - vertex rule with objective and co - objective vectors @xmath225 and @xmath226 . if there is no @xmath242 such that @xmath243 and @xmath244 , the function @xmath245 will be supposed to return the special value @xmath246 .",
    "it can be shown that this happens if , and only if , the basic point associated with the basis @xmath169 maximizes the co - objective function @xmath247 ( see  ( * ? ? ?",
    "* chapter  1.3 ) ) .      in this section ,",
    "we focus on the problem of finding a tropical pivoting rule @xmath248 compatible with the shadow - vertex rule @xmath249 .",
    "more formally , we aim at defining a function @xmath250 parametrized by a tropical matrix @xmath106 , and objective and co - objective vectors @xmath251 , such that : @xmath252 for all @xmath178 , @xmath253 , and @xmath254 . in this case , @xmath248 will be said to be _ compatible with _",
    "@xmath249 _ on the instance _ @xmath255 .",
    "the connection we use between the classical and tropical worlds relies on polynomials over generalized puiseux series .",
    "let @xmath256 $ ] be a multivariate polynomial , and suppose that it is of the form @xmath257 , where @xmath258 , and @xmath259 for all @xmath260 .",
    "the set @xmath261 is called the _ support _ of @xmath262 .",
    "we associate a tropical polynomial @xmath263 $ ] defined as the following formal expression : @xmath264 with @xmath265 for all @xmath260 . given @xmath266 , we say that the polynomial @xmath267 _ vanishes _ on @xmath67 if the following maximum @xmath268 is reached at least twice , or is equal to @xmath104 .",
    "if @xmath267 does not vanish on @xmath67 , we define @xmath269 as follows : @xmath270 where @xmath271 is the unique element of @xmath261 reaching the maximum in  .",
    "the following lemma relates the values of @xmath262 and @xmath267 :    [ lemma : poly_sign ] let @xmath266 , and suppose that @xmath267 does not vanish on @xmath67 .",
    "then , for any @xmath272 , we have @xmath273 . in particular , the sign of @xmath274 is equal to the sign of @xmath275 .",
    "let @xmath272 . given @xmath260 , the valuation of the term",
    "@xmath276 is equal to @xmath277 .",
    "similarly , its signed valuation is given by @xmath278 .",
    "as the maximum in   is reached by only one element @xmath279 , we deduce that @xmath280 is the unique monomial with largest valuation in @xmath274 .",
    "thus , the signed valuation of @xmath274 coincides with the signed valuation of @xmath280 , and is equal to @xmath281 .",
    "following this , we can introduce determinants of tropical matrices .",
    "let us define @xmath282 where @xmath283 if the permutation @xmath33 is even , @xmath284 otherwise . the polynomial @xmath285 is simply denoted @xmath286 when there is no ambiguity . if @xmath102 , the _ tropical determinant _ of @xmath287 is defined as @xmath288 when the polynomial @xmath286 does not vanish on @xmath287 .",
    "note that the latter condition is equivalent to the fact that @xmath287 is generic . in this case , @xmath288 can be computed in time complexity @xmath199 , by solving an assignment problem over the bipartite graph with node set @xmath289 { \\uplus}[n]$ ] , in which every arc @xmath4 is equipped with the weight @xmath290 .",
    "indeed , the maximum weight matching provides the unique permutation @xmath291 reaching the maximum in  , and by definition , @xmath288 is given by @xmath292 .",
    "the determinant of @xmath293-matrices is given by the polynomial @xmath294 , and the corresponding tropical polynomial is @xmath295 .",
    "let us consider the tropical matrix @xmath296 , and let @xmath297 be an arbitrary lift of @xmath287 ( the dots represent terms of the series which have a smaller exponent , which we left unspecified ) .",
    "the tropical polynomial @xmath298 does not vanish on @xmath287 , since we have : @xmath299 hence , the term reaching the maximum in   is associated with the monomial @xmath300 of @xmath298 , so that @xmath301 . on the other hand ,",
    "the determinant of @xmath302 is of the form @xmath303 .",
    "consequently , we indeed have @xmath304 , as expected .",
    "moreover , the term @xmath305 attaining the maximum in   is given by the maximum weight assignment @xmath306 in the following bipartite graph with weights @xmath290 :    node[row ] ( h1 ) at ( 0,0 ) ( h1 ) node[left=0.25ex , font= ] @xmath22 ; node[col ] ( j1 ) at ( 2,0 ) ( j1 ) node[right=0.25ex , font= ] @xmath22 ; node[row ] ( h2 ) at ( 0,-2 ) ( h2 ) node[left=0.25ex , font= ] @xmath23 ; node[col ] ( j2 ) at ( 2,-2 ) ( j2 ) node[right=0.25ex , font= ] @xmath23 ;    ( h1.center ) ",
    "node[above ] @xmath24 ( j1.center ) ",
    "node[above right=-0.5ex and 1.5ex ] @xmath22 ( h2.center )  node[below ] @xmath22 ( j2.center ) ",
    "node[above left=-0.5ex and 1.5ex ] @xmath23 ( h1.center ) ;      we claim that the shadow - vertex rule is a _ semi - algebraic rule _",
    ", in the sense that the leaving variable returned by @xmath245 only depends on the current basis @xmath169 and on the signs of finitely many polynomials taken on the matrix @xmath307 .",
    "to make the notations simpler , we fix a basis @xmath169 , and we respectively denote by @xmath233 and @xmath308 the reduced cost vectors @xmath309 and @xmath237 .",
    "we also define @xmath310 \\setminus j$ ] .",
    "let us denote by @xmath311 the polynomial given by the @xmath312-minor of the matrix @xmath313 of formal variables , for any @xmath314 $ ] and @xmath206 $ ] such that @xmath315 .",
    "for instance , if @xmath316 and @xmath317 , @xmath311 is given by the determinant of the submatrix @xmath318 , _ i.e. _  @xmath319 . for all @xmath242",
    ", we define two polynomials @xmath320 and @xmath321 as follows : @xmath322    [ lemma : reduced_cost ] for all @xmath242 , @xmath323 where @xmath324 is a constant in @xmath325 which only depends on the integer @xmath326 and the sets @xmath152 and @xmath172 .",
    "we restrict our attention to the vector @xmath233 ( the proof is similar for the vector @xmath308 ) . recall that @xmath233 is given by the following system : @xmath327 by the latter part , for all @xmath145 , @xmath328 where @xmath329 represents the index of @xmath10 in the ordered set @xmath152 .",
    "it follows that for all @xmath146 , we have : @xmath330 by developing the determinant of @xmath331 w.r.t .",
    "the column @xmath332 , we obtain that : @xmath333 where @xmath334 stands for the index of @xmath11 in the ordered set @xmath335 .    as a consequence of lemma  [ lemma : reduced_cost ] , the properties @xmath336 , @xmath337 can be tested by determining the signs of @xmath338 , @xmath339 and @xmath340 .",
    "moreover , we have : @xmath341 hence , the comparison of two ratios @xmath342 and @xmath343 involved in the shadow - vertex rule can be made by evaluating the sign of a polynomial of the form @xmath344 on the matrix @xmath302 .",
    "this shows that the shadow - vertex rule is semi - algebraic .",
    "following the previous discussion , we can express @xmath241 as a function defined in terms of the signs of some minors @xmath345 , and of the signs of the @xmath346 ( @xmath347 ) .",
    "given tropical entries @xmath255 , we simply define @xmath348 as the same function , in which the minors of @xmath302 have been substituted by the corresponding tropical minors of the matrix @xmath349 , and the @xmath346 have been replaced by @xmath350 .    in more detail",
    ", the function @xmath351 returns the unique element @xmath352 such that @xmath353 where @xmath354 is the set of the elements @xmath242 such that @xmath355 .",
    "the latter condition is the tropical counterpart of the conditions @xmath356 in the definition of @xmath249 .",
    "equation   is the analogue of @xmath357 for all @xmath358 , @xmath359 .",
    "if the set @xmath354 is empty , we set @xmath351 to the special value @xmath246 .    the main result of this section is the following :    [ th : gs_trop ] if the matrix @xmath360 is strongly non - degenerate , then @xmath248 is compatible with @xmath249 on the instance @xmath361 .",
    "moreover , for all bases @xmath169 , the leaving variable returned by @xmath351 can be computed in time @xmath362 .",
    "let @xmath178 , @xmath253 , and @xmath254 .",
    "by assumption , the matrix @xmath363 is strongly non - degenerate , so that the sign of every tropical minor @xmath364 coincides with the sign of the corresponding minor of @xmath307 by lemma  [ lemma : poly_sign ]",
    ". consequently , by lemma  [ lemma : reduced_cost ] , the set @xmath354 precisely consists of the elements @xmath242 such that @xmath336 and @xmath337 . as discussed earlier ,",
    "each tropical minor can be computed in time @xmath199 .",
    "hence , the set @xmath354 can be determined in time @xmath362 .",
    "it now remains to examine the case of the polynomials @xmath365 , and to show in particular that they do not vanish on @xmath287 .",
    "for the sake of brevity , we restrict to the case @xmath366 .",
    "the general case can be handled in a similar way .",
    "let us write the polynomial @xmath365 under the form @xmath367 , where @xmath261 is the support of @xmath368 ( we use the notation @xmath369 as a shorthand of @xmath370 ) . by definition ,",
    "@xmath365 does not vanish on @xmath287 if , and only if , there exists a unique solution to the following maximization problem : @xmath371 observe that the coefficients in @xmath368 are integers . hence , as elements of the field @xmath119 , they are constant puiseux series , with valuation @xmath372 . besides , @xmath373 for all @xmath4 , thanks to the strong non - degeneracy of @xmath287 .",
    "then , we can simply rewrite @xmath374 for all @xmath260 . as a consequence",
    ", problem   can be solved by considering the following classical linear program : @xmath375 where @xmath376 is the _ newton polytope _ of the polynomial @xmath368 , defined as the convex hull of its support @xmath261 .",
    "since the set of vertices of the polytope @xmath377 is a subset of @xmath261 , it is easy to show that @xmath365 does not vanish on @xmath287 if , and only if , problem   admits a unique solution @xmath271 . in this case",
    ", we have @xmath279 , and the sign of @xmath350 is immediately given by the sign of the term @xmath378 .",
    "it now remains to check that problem   indeed has a unique solution , and that the latter can be found efficiently . to this aim",
    ", we use plcker quadratic relations ( see for instance  ( * ? ? ?",
    "* chapter 3 ) ) , which provide the identity @xmath379 .",
    "this implies that the newton polytope of @xmath368 consists in the minkowski sum of the two polytopes @xmath380 and @xmath381 . as a result",
    ", problem   can be decomposed into the following two linear programs : @xmath382 more precisely , the set of optimal solutions of problem   is precisely the minkowski sum of the set of optimal solutions of the two problems given in  .",
    "the polytopes @xmath383 are bipartite perfect matching polytopes .",
    "consequently , the two problems in   correspond to optimal assignment problems , and can be solved in @xmath199 .",
    "besides , they both admit a unique solution thanks to the genericity condition on @xmath287 .    to summarize , @xmath365 does not vanish on @xmath287 , and the sign of @xmath350 can be computed in time @xmath199 . by lemmas  [ lemma : poly_sign ] and",
    "[ lemma : reduced_cost ] , @xmath384 if , and only if , @xmath385 .",
    "this completes the analysis of the polynomial @xmath365 .",
    "we deduce that @xmath248 and @xmath249 are compatible .",
    "the output @xmath193 of @xmath351 can be computed by determining the smallest element of the set @xmath354 according to the abstract ordering relation @xmath386 defined by @xmath387 .",
    "every comparison has time complexity @xmath199 , and so the result can be obtained in time @xmath362 .",
    "@xmath388 @xmath389 [ line : init ] [ line : bloop ] starting from @xmath390 , iterate over the basic points and edges of @xmath391 using the rule @xmath392 } , { \\mathbold{u } } , { ( { \\mathbold{a}}_k)^{\\intercal}})$ ] , until finding a point @xmath393 such that @xmath394 .",
    "[ line : simplex ] `` empty '' [ line : stop ] @xmath395 [ line : eloop ] `` non - empty ''    the average - case analysis of  @xcite applies to the so - called _ parametric constraint - by - constraint _ ( @xmath396 ) algorithm .",
    "we first recall the principle of this algorithm .",
    "we restrict the presentation to polyhedral feasibility problems , following our motivation to their tropical counterparts and mean payoff games .",
    "the @xmath396 algorithm is given in figure  [ fig : pcbc ] .",
    "given @xmath397 , @xmath398 , and @xmath399 , we denote by @xmath400 the polyhedron defined by the first @xmath401 inequalities of the system @xmath402 .",
    "the @xmath396 algorithm consists in determining by induction on @xmath403 whether the polyhedron @xmath400 is empty .",
    "the invariant of the loop from lines   to   is that @xmath390 is the ( unique ) basic point of @xmath391 minimizing the function @xmath404 , where @xmath225 is an objective vector fixed throughout the whole execution of @xmath396 . at the @xmath66-th iteration of the loop ,",
    "when @xmath390 does not satisfy the constraint @xmath405 , the simplex algorithm equipped with the shadow - vertex pivoting rule is used .",
    "the co - objective vector is set to @xmath406 .",
    "the simplex algorithm thus follows a path in @xmath391 consisting of basic points and the edges between them .",
    "we stop it as soon as it discovers a point @xmath407 such that @xmath394 on the path .",
    "this point is obviously a basic point of @xmath400 .",
    "it follows from the definition of the shadow - vertex rule that @xmath393 minimizes the objective function @xmath404 over @xmath400 .",
    "then , @xmath393 can be used as a starting point for the execution of the simplex algorithm during the @xmath408-th iteration .",
    "if no such point @xmath393 is discovered , the simplex algorithm stops at a basic point @xmath409 associated with a basis @xmath410 such that @xmath392 } , { \\mathbold{u } } , { ( { \\mathbold{a}}_k)^{\\intercal}})(i '' , j '' ) = { \\mathsf{none}}$].as noted in  ( * ? ? ?",
    "* section  4 ) , if the simplex algorithm encounters a ray of the polyhedron of @xmath391 on the path , it necessarily finds a point @xmath407 such that @xmath394 . ] in this case , @xmath409 maximizes the function @xmath411 over @xmath391 , which shows that @xmath412 for all @xmath413 .",
    "then , the algorithm returns `` empty '' .",
    "the objective vector @xmath225 is set to @xmath414 , where @xmath415 is a sufficiently small scalar . since @xmath416 for all @xmath2 $ ]",
    ", the vector @xmath417 is a basic point of @xmath418 minimizing @xmath404 .",
    "the @xmath396 algorithm is still correct when applied on inputs @xmath419 with entries in  @xmath119 .",
    "this suggests to tropicalize it by using the tropical simplex algorithm equipped with the pivoting rule developed in section  [ sec : shadow_vertex ] .",
    "this is the purpose of the algorithm @xmath420 given in figure  [ fig : trop_pcbc ] .",
    "its principle is analogous to @xmath396 .",
    "it manipulates the sequence of tropical polyhedra @xmath421 ( @xmath422 ) , which are respectively defined by the first @xmath401 inequalities of the system @xmath162 , @xmath176 .",
    "it also involves an objective vector of the form @xmath423 , with @xmath424 .",
    "let us describe in more detail the operations performed at line  .",
    "for each visited basic point @xmath67 of @xmath425 , the tropical rule @xmath426 } , u , { ( a_k)^{\\intercal}})$ ] determines a variable @xmath193 leaving the basis @xmath169 associated with @xmath67 .",
    "the tropical simplex algorithm then pivots along the edge @xmath208 formed by the points @xmath427 which activate all the inequalities indexed by @xmath428 in the system defining @xmath425 ( see remark  [ remark : edge ] ) .",
    "there exists a point @xmath429 such that @xmath430 if , and only if , the pair @xmath195 given by @xmath431 is a feasible basis of @xmath421 .",
    "indeed , such an @xmath432 is precisely characterized as the basic point of @xmath421 of basis @xmath195 .",
    "thus , its existence can be checked in time @xmath433 , as explained in section  [ subsec : tropical_simplex ] .",
    "if there is no such @xmath432 in @xmath208 , we use the algorithm @xmath197 to compute the next basis of @xmath425 .",
    "note that the condition at line   is satisfied when there is no basic point of @xmath425 to be visited anymore , _",
    "i.e. _  when the tropical pivoting rule @xmath426 } , u , { ( a_k)^{\\intercal}})$ ] returns @xmath246 .",
    "@xmath423 @xmath434 starting from @xmath175 , iterate over the tropical basic points and edges of @xmath425 using the tropical rule @xmath426 } , u , { ( a_k)^{\\intercal}})$ ] until finding a point @xmath435 such that @xmath430 .",
    "[ line : trop_simplex ] `` empty '' @xmath436 `` non - empty ''    -2ex    in order to use the tropical shadow - vertex rule on the instances @xmath437 } , u , { ( a_k)^{\\intercal}})$ ] , we verify that the matrix @xmath438 is strongly non - degenerate .",
    "the following lemma shows that this property holds assuming that @xmath439 is small enough :    [ lemma : eps ] suppose that the matrix @xmath15 is strongly non - degenerate , and @xmath440 .",
    "then , the matrix @xmath438 is strongly non - degenerate .",
    "let @xmath441 be a square submatrix of @xmath438 .",
    "if @xmath287 is a submatrix of @xmath15 , then it is clear that @xmath287 is generic .",
    "now , suppose that @xmath287 involves the last line @xmath442 ( _ i.e. _  @xmath443 ) , and that the maximum @xmath444 is reached at least by two distinct bijections @xmath445 and @xmath446 .",
    "if @xmath447 , this immediately shows that the @xmath448-submatrix of @xmath15 is degenerate .",
    "thus , we can suppose that @xmath449 and @xmath450 are distinct , for instance @xmath451 .",
    "however , as @xmath424 , we have : @xmath452 in any case , we get a contradiction .",
    "we deduce that @xmath287 is generic .",
    "note that , under the assumptions of lemma  [ lemma : eps ] , if we choose @xmath178 and @xmath253 , no minor of the matrix @xmath453 is null .",
    "this ensures that the application of the classical shadow - vertex pivoting rule also makes sense in the @xmath396 algorithm .",
    "thanks to the compatibility of the tropical shadow - vertex rule with its classical counterpart ( theorem  [ th : gs_trop ] ) , we immediately obtain the following result :    [ prop : trop_pcbc ] let @xmath106 , @xmath454 such that @xmath455 is strongly non - degenerate , and let @xmath440 .    then , the algorithm @xmath420 correctly determines whether the tropical polyhedron @xmath456 is empty .",
    "moreover , for all @xmath178 , @xmath179 and @xmath457 , the total number of basic points visited by @xmath458 and by @xmath459 are equal .",
    "first note that the conditions of theorem  [ th : gs_trop ] are satisfied , thanks to lemma  [ lemma : eps ] .",
    "we are going to show by induction that the algorithms @xmath396 and @xmath420 iterate over the same sequence of bases .",
    "initially , at line  , both algorithms start from the basis @xmath460)$ ] .    now , consider the @xmath66-th iteration of the loop between lines   and  . by induction hypothesis , the points @xmath390 and @xmath175 are basic points of @xmath391 and @xmath425 respectively , associated with the same basis @xmath461 . the point @xmath390 ( resp .",
    "@xmath175 ) satisfies the condition @xmath462 ( resp .",
    "@xmath463 ) if , and only if , @xmath461 is a feasible basis of @xmath400 ( resp .",
    "@xmath421 ) . as the polyhedra @xmath400 and",
    "@xmath421 have the same feasible bases ( see  ( * ? ? ?",
    "* proposition  17 ) ) , we deduce that the two conditions @xmath462 and @xmath463 are equivalent .    if none of these conditions is satisfied , the two algorithms @xmath396 and @xmath420 execute line   and run the classical and tropical shadow - vertex algorithms .",
    "assume that the two latter algorithms are located at basic points @xmath114 and @xmath67 of @xmath391 and @xmath425 respectively , associated with the same basis @xmath169 .",
    "note that @xmath114 is the final point of the path followed by the classical simplex algorithm if , and only if , @xmath67 is the final point of the path followed by the tropical simplex algorithm . indeed , these two statements amount to @xmath392 } , { \\mathbold{u } } , { { \\mathbold{a}}_k^{\\intercal}})(i , j ) = { \\mathsf{none}}$ ] and @xmath426 } , u , { a_k^{\\intercal}})(i , j ) = { \\mathsf{none}}$ ] respectively .",
    "the equivalence then follows from theorem  [ th : gs_trop ] .",
    "if @xmath114 , or equivalently @xmath67 , is not the final point of the path , the pivoting rules @xmath249 and @xmath248 returns the same leaving variable @xmath191 , still by theorem  [ th : gs_trop ] . in this case , the classical ( resp .",
    "tropical ) simplex algorithm pivots along the edge @xmath213 ( resp .",
    "@xmath208 ) formed by the points of @xmath391 ( resp .",
    "@xmath425 ) which activate the inequalities indexed by @xmath428 . let @xmath464 $ ] and @xmath465 $ ] such that @xmath431 .",
    "the existence of a point @xmath466 ( resp .",
    "@xmath429 ) such that @xmath394 ( resp .",
    "@xmath430 ) is equivalent to the fact that the basis @xmath195 is a feasible basis of @xmath400 ( resp .  of @xmath421 ) .",
    "using again the fact that the polyhedra @xmath400 and @xmath421 have the same feasible bases , we deduce that the classical simplex algorithm finds a point @xmath393 such that @xmath394 when pivoting along the edge @xmath213 if , and only if , the tropical simplex algorithm discovers a point @xmath429 which satisfies @xmath430 . in this case ,",
    "@xmath393 and @xmath432 are basic points ( of @xmath400 and @xmath421 respectively ) associated with the same basis @xmath195 . if no such points @xmath393 and @xmath432 exist , the edge @xmath213 is necessarily bounded ( see footnote  [ footnote : ray ] ) .",
    "thus , the tropical edge @xmath467 is also bounded . as a result",
    ", the two simplex algorithms both reach new basic points of @xmath391 and @xmath425 respectively .",
    "these points are associated with the same basis @xmath410 , given by @xmath468 for some @xmath192 ( the entering variables in the classical and tropical cases are necessarily identical , by unicity ) .",
    "this completes the proof by induction , and shows the second part of the proposition .",
    "the correctness of the algorithm @xmath420 immediately follows from the correctness of @xmath396 , and the fact that @xmath469 if , and only if , @xmath470 .",
    "[ remark : eps ] as stated in proposition  [ prop : trop_pcbc ] , the scalar @xmath439 is supposed to be small enough .",
    "we point out that there is no need to choose or manipulate @xmath439 explicitly in the algorithm @xmath420 .",
    "indeed , as shown in the proof of theorem  [ th : gs_trop ] , @xmath439 is only involved in optimal assignment problems which arise in the computation of the leaving variable returned by the tropical shadow - vertex rule @xmath426 } , u , { ( a_k)^{\\intercal}})$ ] at line   ( @xmath471 $ ] ) .",
    "let us fix @xmath66 , and let @xmath472 } \\\\",
    "{ u^{\\intercal } } \\\\",
    "a_k \\end{psmallmatrix } \\in { { { \\ifthenelse{\\equal { } { } } { \\mathbb{t } } { \\mathbb{t } ( ) } } } _ { \\pm}}^{(k+1 ) \\times n}$ ] .",
    "the optimal assignment problems to be solved are associated to weighted bipartite graphs , with node sets @xmath473 $ ] and @xmath206 $ ] and weights @xmath474 for @xmath475 and @xmath476 .",
    "let @xmath477 be such a graph .",
    "it involves weights with a dependency on @xmath439 if , and only if , the set @xmath478 contains the node @xmath66 , which corresponds to the index of the row vector @xmath442 in the matrix @xmath287 .",
    "more precisely , the arcs whose weight depends on @xmath439 are precisely of the form @xmath479 , for all @xmath476 .",
    "their respective weights are @xmath480 .",
    "it is clear that for any sufficiently small @xmath424 , the ( unique ) optimal assignment @xmath445 in @xmath477 is obtained by mapping the node @xmath66 to the smallest element @xmath481 of @xmath482 , and then by solving the optimal assignment problem in the graph @xmath483 obtained from @xmath477 by removing the nodes @xmath66 and @xmath481 and their incident arcs .",
    "since the weights of @xmath483 do not depend on @xmath439 , the optimal assignment problem in @xmath483 can be solved numerically , in a standard way .",
    "in other words , the dependency on @xmath439 in the optimal assignment problems can be handled in a symbolic way .",
    "this is comparable to the `` lexicographic '' treatment of the scalar @xmath484 in the @xmath396 algorithm described in  ( * ? ? ?",
    "* section  6.1 ) .",
    "given @xmath397 , @xmath398 such that no minor of the matrix @xmath485 is null , the probabilistic analysis of  @xcite applies to polyhedra of the form @xmath486 where @xmath487 , @xmath488 , and the @xmath157 and @xmath489 are i.i.d .",
    "entries with values in @xmath325 such that each of them is equal to @xmath490 ( resp .",
    "@xmath27 ) with probability @xmath491 .",
    "equivalently , the @xmath492 polyhedra of the form @xmath493 are equiprobable .",
    "[ th : adler ] for any fixed choice of @xmath494 and @xmath495 such that no minor of @xmath485 is null , provided that @xmath496 is sufficiently small , the total number of basic points visited by @xmath497 is bounded by @xmath498 on average .",
    "it can be verified that the proof of theorem  [ th : adler ] is still valid when we replace @xmath140 by any real - closed field @xmath478 .",
    "alternatively , it can be shown that theorem  [ th : adler ] can be expressed as a first - order sentence , so that tarski s principle can be used to transpose it to any real - closed field . as a consequence of proposition  [ prop : trop_pcbc ] ,",
    "the algorithm @xmath420 should visit a quadratic number of tropical basic points on average .",
    "this is the way we translate the result of adler  _ et al . _ to mean payoff games .",
    "the probability distribution of games is expressed over their payments matrices @xmath499 , and must satisfy the following requirements :    [ ass : model ]    a.   [ item : cond3 ] for all @xmath1 $ ] ( resp .",
    "@xmath2 $ ] ) , the distribution of the matrices @xmath499 is invariant by the exchange of the @xmath10-th row ( resp .",
    "@xmath11-th column ) of @xmath15 and @xmath16 .",
    "b.   [ item : cond1 ] almost surely , @xmath6 and @xmath7 are distinct and not equal to @xmath104 for all @xmath1 $ ] , @xmath2 $ ] . in this case , we introduce the signed matrix @xmath500 , defined by @xmath501 if @xmath502 , and @xmath503 if @xmath504 . c.   [ item : cond2 ] almost surely , the matrix @xmath505 is strongly non - degenerate .",
    "let us briefly discuss the requirements of assumption  [ ass : model ] .",
    "condition   corresponds to the flip invariance property .",
    "it handles discrete distributions ( see figure  [ fig : flip ] ) as well as continuous ones . in particular , if the distribution of the payment matrices admits a density function @xmath506 , condition   can be expressed as the invariance of @xmath506 by exchange operations on its arguments .",
    "for instance , if @xmath507 and @xmath508 , the flip invariance holds if , and only if , for almost all @xmath509 , @xmath510 .",
    "the requirements @xmath511 for all @xmath512 in condition   ensure that the flip operations always provide games in which the two players have at least one action to play from every position .",
    "the matrix @xmath505 can be intuitively thought of as a tropical subtraction `` @xmath513 '' , and the conditions @xmath514 ensure that @xmath505 is well defined .",
    "then , the following result holds :    [ lemma : trop_pcbc_game ] if @xmath514 for all @xmath512 , and @xmath505 is defined as in condition   of assumption  [ ass : model ] , then the initial state @xmath38 is winning in the game with matrices @xmath499 if , and only if , @xmath515 \\times [ n-1 ] } , w_{[m ] \\times \\{n\\}})$ ] returns `` non - empty '' .",
    "given @xmath516 such that @xmath517 , it can be easily proved that the inequality @xmath518 over @xmath164 is equivalent to @xmath519 if @xmath520 , and @xmath521 if @xmath522 .",
    "using this principle , we deduce that the two systems @xmath523 \\times [ n-1 ] } { \\odot}x { \\oplus}a_{[m ] \\times \\{n\\ } } \\geq b_{[m ] \\times [ n-1 ] } { \\odot}x { \\oplus}b_{[m ] \\times \\{n\\}}$ ] and @xmath524 \\times [ n-1]}^+ { \\odot}x { \\oplus}w_{[m ] \\times \\{n\\}}^- \\geq w_{[m ] \\times [ n-1]}^- { \\odot}x { \\oplus}w_{[m ] \\times \\{n\\}}^-$ ] are equivalent . as a result , by  ( * ? ? ?",
    "* theorem  3.2 ) , the initial state @xmath38 is winning if , and only if , the tropical polyhedron defined by the latter system is non - empty .",
    "this provides the expected result , thanks to the first part of proposition  [ prop : trop_pcbc ] .",
    "finally , condition   is the tropical counterpart of the non - degeneracy assumption used in  @xcite to establish the average - case complexity bound .",
    "we point out that the set of matrices @xmath499 which do not satisfy the requirements stated in conditions   and   has measure zero . as a consequence , these two conditions do not impose important restrictions on the distribution of @xmath499 , and they can rather be understood as genericity conditions .",
    "we are now ready to establish our polynomial bound on the average - case complexity of mean payoff games .",
    "[ th : game_complexity ] under a distribution satisfying assumption  [ ass : model ] , @xmath420 determines in polynomial time on average whether an initial state is winning for player max in the mean payoff game with payment matrices @xmath499 .    without loss of generality , we assume that the initial state is the circle node @xmath38 .",
    "let us fix two payment matrices @xmath499 satisfying conditions   and   of assumption  [ ass : model ] , and let @xmath505 as defined in condition  . starting from the pair @xmath525 of matrices , the successive applications of row / column exchange operations precisely yield @xmath526 different pairs of matrices .",
    "in particular , without loss of generality , we can assume that the @xmath38-th columns of @xmath15 and @xmath16 have not been switched .",
    "then , the pair of matrices that we obtained are of the form @xmath527 , where @xmath528 , @xmath529 , and @xmath530 and @xmath531 are the matrices obtained from @xmath15 and @xmath16 respectively , by exchanging the rows @xmath10 and the columns @xmath11 such that @xmath532 and @xmath533 .",
    "the @xmath4-entries of @xmath530 and @xmath531 are distinct , and so we can define a matrix @xmath534 in the same way we have built @xmath505 from @xmath15 and @xmath16 .",
    "observe that @xmath535 \\times [ n-1 ] } = s { \\odot}w_{[m ] \\times [ n-1 ] } { \\odot}s'$ ] and @xmath535 \\times \\{n\\ } } = s { \\odot}w_{[m ] \\times \\{n\\}}$ ] , where @xmath536 and @xmath537 .",
    "thus , by lemma  [ lemma : trop_pcbc_game ] , the @xmath526 games obtained by the successive flipping operations can be solved by calling the algorithm @xmath538 \\times [ n-1 ] } { \\odot}s ' , s { \\odot}w_{[m ] \\times \\{n\\}})$ ] .",
    "let @xmath539 be a fixed lift of @xmath505 .",
    "thanks to condition  , no minor of @xmath540 is null .",
    "besides , as explained in remark  [ remark : eps ] , we do not explicitly manipulate the scalar @xmath439 in the algorithm @xmath420 .",
    "instead , we use a symbolic technique which simulates the behavior of the tropical shadow - vertex rule for any choice of @xmath439 small enough .",
    "this ensures that for all @xmath541 , the conditions of theorem  [ th : adler ] are satisfied on the instance @xmath542 \\times [ n-1 ] } , { \\mathbold{w}}_{[m ] \\times \\{n\\}})$ ] .",
    "note that the @xmath543 instances @xmath544 \\times [ n-1 ] } { \\mathbold{s } } ' , { \\mathbold{s } } { \\mathbold{w}}_{[m ] \\times \\{n\\}})$ ] , where @xmath545 are diagonal matrices with diagonal coefficients in @xmath325 , are respectively lifts of the instances @xmath546 \\times [ n-1 ] } { \\odot}s ' , s { \\odot}w_{[m ] \\times \\{n\\}})$ ] .",
    "thanks to the second part of proposition  [ prop : trop_pcbc ] and theorem  [ th : adler ] , it follows that the total number of visited basic points when calling the algorithm @xmath538 \\times [ n-1 ] } { \\odot}s ' , s { \\odot}w_{[m ] \\times \\{n\\}})$ ] for all @xmath528 , @xmath529 is bounded by @xmath547 . moreover , every iteration of the tropical simplex algorithm at line   of @xmath420 consists in determining the leaving variable returned by the tropical shadow - vertex rule , and pivoting to the next basis or computing the point @xmath432 .",
    "the complexity of the former step is @xmath199 by the second part of theorem  [ th : gs_trop ] , and the complexity of the latter step is @xmath202 .",
    "hence , every iteration is polynomial time . in total , solving the @xmath526 games associated with the matrices @xmath548 can be done in time @xmath549 .",
    "let @xmath550 be the random variable corresponding to the time complexity of our method to solve the game with payment matrices @xmath39 drawn from a distribution satisfying assumption  [ ass : model ] .",
    "similarly , given @xmath528 , @xmath529 , let @xmath551 be the random variable representing the time complexity to solve the game with matrices @xmath552 , where @xmath499 are drawn from the latter distribution .",
    "thanks to condition  , @xmath553 = \\mathbb{e}[t_{s , s'}]$ ] for all @xmath554 , and so : @xmath555 = \\frac{1}{2^{m+n-1 } } \\times \\mathbb{e } \\big[\\sum_{s , s ' } t_{s , s'}\\big ] \\leq \\frac{1}{2^{m+n-1 } } \\times ( k 2^{m+n-1 } m n(m + n^2 ) \\min(m^2 , n^2))\\ ] ] for a certain constant @xmath556 .",
    "this concludes the proof .",
    "we have defined a tropical analogue of the shadow - vertex simplex algorithm , and shown that every iteration has polynomial time complexity . as a corollary , we have established a polynomial - time average - case result on mean payoff games , based on the analysis of adler , karp and shamir of the classical shadow - vertex algorithm .",
    "the main restriction of the model is the flip invariance property .",
    "it is an open question whether the tropical approach can be applied with other probabilistic models . in particular , it would be interesting to transfer smoothed complexity results , _ e.g. _",
    "@xcite , to the tropical setting .",
    "the results of section  [ sec : shadow_vertex ] also suggest that there is a general method to tropicalize any semi - algebraic pivoting rule , based on the characterization of the newton polytopes involved .",
    "this will be addressed in a future work .",
    "a.  roth , m.  f. balcan , a.  kalai , and y.  mansour . on the equilibria of alternating move games . in _ proceedings of the twenty - first annual acm - siam symposium on discrete algorithms _ , pages 805816 , philadelphia , pa , usa , 2010 .",
    "siam .",
    "j.  vge and m.  jurdziski . a discrete strategy improvement algorithm for solving parity games . in e.",
    "a emerson and a.  p. sistla , editors , _ computer aided verification _ , volume 1855 of _ lncs _ , pages 202215 .",
    "springer berlin heidelberg , 2000 ."
  ],
  "abstract_text": [
    "<S> we introduce an algorithm which solves mean payoff games in polynomial time on average , assuming the distribution of the games satisfies a flip invariance property on the set of actions associated with every state . </S>",
    "<S> the algorithm is a tropical analogue of the shadow - vertex simplex algorithm , which solves mean payoff games via linear feasibility problems over the tropical semiring @xmath0 . </S>",
    "<S> the key ingredient in our approach is that the shadow - vertex pivoting rule can be transferred to tropical polyhedra , and that its computation reduces to optimal assignment problems through plcker relations . </S>"
  ]
}
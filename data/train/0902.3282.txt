{
  "article_text": [
    "a common type of facility location or clustering problem is the @xmath0-center problem , which is defined as follows : given a set @xmath1 of @xmath10 points in a metric space and a positive integer @xmath0 , find a set of @xmath0 supply points such that the maximum distance between a point in @xmath1 and its nearest supply point is minimized . for the cases of the @xmath11 and @xmath12-metric the problem is usually referred to as the euclidean and rectilinear @xmath0-center problem respectively .",
    "the cluster centers ( i.e. , the supply points ) can be seen as an approximation of the set @xmath13 .",
    "drezner  @xcite describes many variations of the facility location problem and their numerous applications .",
    "@xmath0-center problems ( as well as many other clustering problems ) arise naturally in many applications ( like , e.g. , in the shape simplification or in the construction of bounding volume hierarchies ) .",
    "they can be formulated as geometric optimization problems and , as such , they have been studied extensively in the field of computational geometry .",
    "efficient polynomial - time algorithms have been found for the planar @xmath0-center problem when @xmath0 is a small constant  @xcite .",
    "also , the rectilinear @xmath14-center problem can be solved in polynomial time , even when @xmath15 is part of the input  @xcite .",
    "however both the euclidean and rectilinear ( decision ) problems are np - hard , for @xmath16 when @xmath0 is part of the input  @xcite , while the euclidean 2-center and rectilinear 3-center are np - hard when @xmath15 is part of the input  @xcite .",
    "hwang et al .",
    "@xcite gave an @xmath17-time algorithm for the euclidean @xmath0-center problem in the plane .",
    "agarwal and procopiuc  @xcite presented an @xmath18-time algorithm for solving the @xmath0-center problem in @xmath19 under @xmath11 and @xmath12-metrics , and a simple @xmath7-approximation algorithm with running time @xmath20 .    [ [ problems . ] ] problems .",
    "+ + + + + + + + +    in this paper , we consider a variation of the @xmath0-center problem with potential applications in wireless network design : given @xmath10 sensors which are modeled as points , we want to locate @xmath0 base stations ( or servers ) , which are modeled as centers of disks , for receiving the signal from the sensors .",
    "the sensors operate by self - contained batteries , but the servers should be connected to a power line , so they have to lie on a straight line which models the power line .",
    "thus we define the _ @xmath0-center on a line problem _ as follows : _ given a set @xmath1 of @xmath10 points ( i.e. , sensors ) and an integer @xmath2 , find @xmath0 disks with centers ( i.e. , base stations ) on a line such that the union of the disks covers @xmath1 and the maximum radius of the disks is minimized .",
    "_ we will also study several variants of the problem depending on whether the orientation of the center line is fixed or not .",
    "[ [ related - results . ] ] related results .",
    "+ + + + + + + + + + + + + + + +    the problem of finding the @xmath0-centers on a line is a constrained version of the standard @xmath0-center problems where the centers are constrained to lie in a specific region such as a line , a segment , and a polygonn .    for @xmath21 , megiddo  @xcite showed that the 1-center constrained to be on a given line can be computed in @xmath22 time ; our problem is a direct extension of this for @xmath23 .",
    "hurtado et al .",
    "@xcite considered the 1-center in a convex region instead of the line , and showed that the 1-center lying in the convex polygon of @xmath24 vertices can be computed in @xmath25 time . if the 1-center is restricted to lie in a set of simple polygons with a total of @xmath24 edges , then bose et al .",
    "@xcite proved that it can be computed in @xmath26 time , which is an improvement to the previous quadratic time algorithm  @xcite .",
    "they also showed how to preprocess the @xmath10 points in @xmath27 time and @xmath22 space such that for any query segment the 1-center lying on the segment can be reported in @xmath28 time . for @xmath29 , there are a few results  @xcite which have been done mostly for the base station placement problem in wireless sensor network .",
    "das et al .",
    "@xcite studied more constrained problems where the @xmath0 centers lie on a specific edge of a convex polygon and the corresponding disks cover all @xmath10 vertices of the polygon .",
    "their algorithm runs in @xmath30 time . in  @xcite , they considered different constrained 2-center problems in which the centers lie in a convex polygon  @xcite or on a pair of specified edges of the convex polygon  @xcite , but the two disks should cover all points in the polygon , i.e. , the convex polygon itself .",
    "alt et al .",
    "@xcite studied a similar problem where the goal is to minimize the sum of the radii ( instead of minimizing the maximum of the radii ) ; in fact , they minimized the cost function of the form @xmath31 for any fixed @xmath32 under any fixed @xmath33 metric , where @xmath34 represents the radius of each disk . in their model @xmath0",
    "is not part of the input .",
    "they presented an algorithm that runs in @xmath35 time to compute the optimal solution for a fixed line where @xmath36 for @xmath37 and @xmath38 for @xmath39 . for a horizontal line moving",
    "freely , they proved that the value of the optimal solution ( as well as the location of the optimal horizontal line ) can not be expressed by radicals , and they gave an @xmath7-approximation algorithm requiring @xmath40 time .",
    "they also presented an @xmath7-approximation algorithm for arbitrary line which takes @xmath41 time .",
    "[ [ our - results . ] ] our results .",
    "+ + + + + + + + + + + +    we investigate the @xmath0-center problem for arbitrary @xmath2 where the @xmath0 centers are collinear and should cover a set of @xmath10 points . in section  [ sec : fixed ]",
    "we first consider the simplest version of the problem where the line @xmath3 is fixed ( we will assume w.o.l.g . that the centers of the @xmath0 disks must lie on the @xmath42-axis ) .",
    "we can solve this problem in @xmath4 time .",
    "next , we consider two problems : in section  [ sec : orienfix ] , we look at the case where only the orientation of the line @xmath3 is fixed ( we will assume w.l.o.g . that @xmath3 is horizontal ) , and solve it in @xmath5 time . in section  [ sec : arbit ] , we study the most general case where the line @xmath3 can have an arbitrary orientation .",
    "we solve this problem in @xmath6 expected time .",
    "for these two problems , we also present @xmath7-approximation algorithms , which run in @xmath8 time and @xmath9 time , respectively .",
    "these results are the first on the @xmath0-center problem on a line for @xmath43 .",
    "note here that @xmath0 is part of the input but not involved in the running time , and all algorithms also work for the problems under any fixed @xmath33 metric .",
    "the results are summarized in table  [ tab : results ] .",
    "[ tab : results ]    .summary of the results . [ cols=\"<,^,^\",options=\"header \" , ]     [ [ preliminaries . ] ] preliminaries .",
    "+ + + + + + + + + + + + + +    let @xmath44 be the set of input points , where @xmath45 .",
    "we assume that no two points in @xmath1 have the same @xmath42-coordinate , no four points lie on the same circle and that they are sorted in non - decreasing @xmath42-order .",
    "let @xmath3 be the line on which the disk centers have to lie .",
    "denote by @xmath46 the disk centered at @xmath47 with radius @xmath48 ; if the radius @xmath48 is fixed , we denote this disk by @xmath49 .",
    "we first consider the simplest version of the problem where the line @xmath3 is fixed . without loss of generality , we assume that @xmath3 is the @xmath42-axis .",
    "let @xmath50 .",
    "let @xmath51 be the minimum radius such that there exist @xmath0 disks of that radius with centers on the @xmath42-axis and with union covering @xmath1 .",
    "then it is clear that @xmath52 . to find the minimum radius @xmath51",
    ", we will perform a binary search , combining the results of  @xcite with an algorithm for the following decision problem :    _ given @xmath53 , decide if there exist @xmath0 disks of radius @xmath48 with centers on the @xmath42-axis and with union covering @xmath1 .",
    "_      let @xmath54 be the intersection of @xmath55 , i.e. , @xmath56 $ ] is an interval on the @xmath42-axis with the two endpoints @xmath57 .",
    "a _ piercing set _ of the interval set @xmath58 is a set of points on @xmath3 such that every interval in @xmath59 contains at least one point in the piercing set .",
    "we call the minimum cardinality of a piercing set for @xmath59 the _ minimum piercing number _ @xmath60 of @xmath59 .",
    "this number can be computed in @xmath27 time by selecting a piercing point at the leftmost right endpoint , removing all the intervals containing the piercing point , and repeating the same process for the remaining intervals until all the intervals are removed , c.f .",
    "@xcite .",
    "it is clear that @xmath1 can be covered by the union of @xmath0 disks of radius @xmath48 with centers on @xmath3 if and only if the minimum piercing number @xmath60 is not larger than @xmath0 .",
    "thus we can answer the decision problem in @xmath27 time ; if the right endpoints ( and the left endpoints ) of @xmath54 are sorted then we can even do it in @xmath22 time .      if the piercing number at @xmath61 is no more than @xmath0 , we find that @xmath62 .",
    "so , in what follows , we assume that @xmath63 , and that the intervals @xmath64 $ ] are sorted in non - decreasing order of their right endpoints @xmath65 . as @xmath48 increases , @xmath66 decreases and @xmath65 increases . we can interpret @xmath67 and @xmath68 as the @xmath42-coordinates of intersection points of the hyperbola @xmath69 with the horizontal line @xmath70 in the @xmath71-plane , as illustrated in figure  [ fig : fixedline ] .",
    "since no bisector between @xmath72 and @xmath73 is horizontal , every bisector intersects the @xmath42-axis @xmath3 once and thus two hyperbolas @xmath74 and @xmath75 meet exactly once .",
    "if we consider @xmath74 as two curve segments by cutting it at its lowest point , then we have @xmath76 curves with the property that any two of them intersects at most once",
    ". we will denote the set of these curves ( which are also called pseudoline segments ) by @xmath77 .    as @xmath48 increases , the minimum piercing number @xmath60 for the interval system @xmath59 is non - increasing .",
    "our goal is to find the radius @xmath51 such that @xmath78 is the largest integer with @xmath79 . since @xmath60 can change ( i.e. , decrease ) only when the relative order of the endpoints of the intervals in @xmath59 changes , we know that @xmath51 is a radius where two hyperbolas from @xmath77 meet .",
    "a straightforward way to find the radius @xmath51 is to compute all the radii at which two hyperbolas meet , sort them , and do a binary search over these radii with the decision algorithm of the previous subsection ; sorting all the @xmath80 candidate radii takes @xmath81 time and the binary search requires @xmath4 time because it invokes the decision algorithm @xmath28 times .",
    "thus the total running time is @xmath81",
    ".    we can improve the running time to @xmath4 by using the result of  @xcite which was developed for the slope - selection problem . in the slope - selection problem",
    "we are given a set of @xmath10 points in the plane and an integer @xmath24 , and we have to determine the line of the @xmath24-th smallest slope among all the lines spanned by two input points .",
    "in the dual setting , this problem is equivalent to finding the intersection point with the @xmath24-th smallest @xmath82-coordinate among all intersection points of the lines ( dual to the input points ) .",
    "this problem can be solved in @xmath27 deterministic time  @xcite .",
    "since the curves in @xmath77 we are dealing with are pseudoline segments , we can adopt these algorithms immediately .",
    "thus we can do one step of the binary search in @xmath27 time : choose the median radius @xmath83 by the algorithm of  @xcite , and decide if @xmath84 by the decision algorithm of the previous section .",
    "as a result , we can find @xmath51 in @xmath85 total time .",
    "the result is summarized in the following :    [ th:0dof ] let @xmath1 be a set of @xmath10 points in @xmath86 and @xmath87 .",
    "let @xmath51 be the minimum radius such that there exist @xmath0 disks of that radius with centers on the @xmath42-axis and with union covering @xmath1 .",
    "then @xmath51 and such disks can be computed in @xmath4 deterministic time .",
    "[ [ remark . ] ] remark .",
    "+ + + + + + +    we can compute @xmath51 in @xmath27 time if we use the @xmath88 or the @xmath12 metric . in these cases",
    "the functions @xmath66 and @xmath65 are linear functions with a slope of @xmath89 and @xmath90 , respectively .",
    "there are no intersections among the functions @xmath66 and no intersections among the functions @xmath65 .",
    "consequently the sorted sequence of the @xmath66 s ( resp . , @xmath65 s ) defined at @xmath61 remains the same for any @xmath53 .",
    "so once we have the sorted sequences at the beginning of the algorithm , we do not need to sort the endpoints again when we make decision for a fixed radius during the binary search ; this results in a linear - time decision algorithm for a fixed radius @xmath48 .",
    "a radius @xmath48 will be potentially tested during the binary search only if @xmath91 for some @xmath92 .",
    "we can represent these radii implicitly in a doubly sorted matrix as follows : let @xmath93 be the increasing sequence of @xmath66 for some permutation @xmath94 at @xmath95 , and let @xmath96 be the decreasing sequence of @xmath65 for some permutation @xmath97 at @xmath61 .",
    "we define @xmath98 as the radius @xmath48 such that @xmath99 ; if @xmath100 then we set @xmath101 .",
    "it is easy to see that @xmath102 for any @xmath103 , and @xmath104 for any @xmath105 .",
    "consequently , if we put the @xmath98 into an @xmath106 matrix with rows ( ordered by @xmath94 ) representing @xmath107 and columns ( ordered by @xmath97 ) representing @xmath108 we get a matrix in which each row and each column is totally ordered . with this doubly sorted matrix",
    ", we can search the @xmath24-th smallest entry in the matrix in @xmath22 time  @xcite ( in particular we need to access only @xmath22 matrix entries ) . using the @xmath22-time decision algorithm outlined above",
    ", we can perform the binary search for @xmath51 in @xmath27 total time .",
    "[ th:0dofl1 ] let @xmath1 be a set of @xmath10 points in @xmath86 and @xmath87 .",
    "let @xmath51 be the minimum radius such that there exist @xmath0 @xmath88-disks ( resp .",
    "@xmath12-disks ) of that radius , with centers on the @xmath42-axis and with union covering @xmath1 . then @xmath51 and",
    "such disks can be computed in @xmath27 deterministic time .",
    "we now consider the case where only the orientation of the line @xmath3 is fixed . without loss of generality",
    ", we may assume that @xmath3 is horizontal .",
    "let @xmath51 be the minimum radius such that there exist @xmath0 disks of that radius with centers on _ a horizontal line _ and with union covering @xmath1 . for @xmath109 , denote the horizontal line @xmath110 by @xmath111 .    like in the previous case",
    ", we first develop an algorithm for the following decision problem , and then find the minimum radius @xmath51 by using this algorithm and the techniques in  @xcite :    _ given @xmath112 , decide if there exist @xmath0 disks of radius @xmath48 with centers on a horizontal line @xmath113 and with union covering @xmath1 .",
    "_      consider the disks @xmath114 of radius @xmath48 around the points @xmath115 .",
    "as the line @xmath116 moves from @xmath117 to @xmath118 , we maintain the minimum piercing number @xmath119 for the intervals @xmath120 .",
    "since all the disks must intersect @xmath116 , it is actually sufficient to sweep @xmath116 from the topmost bottom point of the disks to the bottommost top point of the disks . denote the @xmath82-coordinates of these two points by @xmath121 and @xmath122 , respectively .",
    "then for any @xmath82 from @xmath123 to @xmath122 , the interval @xmath124 of any point @xmath72 is non - empty .",
    "set @xmath125 .",
    "as the line @xmath116 moves from @xmath126 to @xmath127 , the minimum piercing number @xmath119 changes only when the relative order of the endpoints of two intervals changes . thus the events correspond to intersections of circles bounding the @xmath128 s , and the total number of the events is @xmath80 .",
    "if we have a dynamic data structure to maintain the minimum piercing number of intervals for each event in @xmath129 ( amortized ) time , we can handle all the events in @xmath130 time .",
    "chan and mahmood  @xcite describe a data structure to maintain the minimum piercing number of a set of @xmath10 intervals under insertions with @xmath28 amortized time per insertion . using this data structure",
    ", we can maintain @xmath119 during the sweep with @xmath28 amortized time per event , so we can handle all the events in @xmath81 time .",
    "[ [ maintaining - the - piercing - number . ] ] maintaining the piercing number .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    for completeness , we briefly explain how the data structure proposed by chan and mahmood  @xcite can be applied to our problem . for a fixed @xmath82 , we consider the intervals @xmath131 $ ] for @xmath132 ( omitting ` @xmath82 ' in the notation ) , together with two dummy intervals @xmath133 $ ] and @xmath134 $ ] .",
    "the greedy algorithm to compute the minimum piercing number ( as described in the previous section ) chooses the right endpoints of the intervals as piercing points . if @xmath135 and @xmath136 for @xmath137 are two consecutive piercing points chosen by the greedy algorithm , then @xmath138 .",
    "now we define @xmath139 if @xmath140 , and partition the intervals into groups each of which is a maximal set of intervals with a common `` next '' value .",
    "chan and mahmood observe that the intervals in a group appear in consecutive order when all @xmath141 intervals are sorted according to their right endpoints .",
    "thus we can define a weighted tree @xmath142 of intervals with the `` next '' relation such that a pair of consecutive vertices in a group is connected by an edge of weight @xmath143 , and if @xmath144 is the last interval in its group , then the vertex for @xmath144 is connected to the vertex for @xmath145 by an edge of weight @xmath146 . as a consequence",
    ", the minimum piercing number corresponds to the total weight of the path from @xmath147 to @xmath148 in @xmath142 .",
    "the tree @xmath142 is implemented with a data structure for dynamic trees  @xcite that supports link , cut and path - length queries in @xmath28 amortized time .",
    "the intervals in each group @xmath149 are maintained in a balanced search tree @xmath150 ordered by the right endpoints so that the operations such as search , split , and concatenation can be done in logarithmic time .",
    "all the intervals are also stored in a priority search tree @xmath151 ordered by the left endpoints with priorities defined by the right endpoints .",
    "this allows us to find the next interval for a given interval in @xmath28 time .",
    "these priority search trees support insertion and deletion of intervals in @xmath28 time each . for further details ,",
    "refer to  @xcite .",
    "as the sweep line @xmath116 moves from @xmath121 to @xmath122 , we maintain the intervals on @xmath116 in the dynamic tree @xmath142 .",
    "first , at @xmath152 , we construct the data structures of all @xmath10 intervals by simply inserting them in @xmath153 time  @xcite .",
    "the line @xmath116 stops at each event @xmath154 , which is the @xmath82-coordinate of the intersection of the circles bounding two disks @xmath128 and @xmath155 for some @xmath156 and @xmath157 ; we here assume that @xmath72 is in the left of @xmath73 . when these two circles intersect , the relative order of the endpoints of @xmath158 $ ] and @xmath159 $ ] changes just after @xmath82",
    ". then we have four different cases that the order change .",
    "let @xmath160 and @xmath161 for a small @xmath162 ( see figure  [ fig : sweepevents ] ) .",
    "[ [ case - i - b_iy -- a_jy -- and - b_iy - a_jy . ] ] case ( i ) @xmath163 and @xmath164 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    two intervals @xmath144 and @xmath165 start to overlap after @xmath82 .",
    "if the next interval of @xmath144 at @xmath166 is not @xmath165 , then we have nothing to do .",
    "otherwise , @xmath165 is no longer the next interval of @xmath144 at @xmath167 . by the definition of the group",
    ", @xmath144 must be the last interval in the group @xmath149 that @xmath144 belongs to .",
    "first we find the new next interval @xmath168 of @xmath144 at @xmath167 using @xmath151 , where @xmath169 .",
    "next we split the group @xmath149 into two groups @xmath170 and @xmath171 .",
    "then , at @xmath167 , the next interval for @xmath172 is still @xmath165 , and the next one for @xmath173 is now @xmath168 .",
    "so we merge @xmath173 into the group @xmath174 that @xmath168 belongs to at @xmath166 . for these changes ,",
    "we update @xmath142 , @xmath150 , and @xmath175 .",
    "[ [ case - ii - b_iy -- a_jy -- and - b_iy - a_jy . ] ] case ( ii ) @xmath176 and @xmath177 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    two intervals @xmath144 and @xmath165 start to be disjoint after @xmath82 .",
    "the interval @xmath165 is not the next interval for @xmath144 at @xmath166 because they overlap , but @xmath165 can be the next interval for @xmath144 at @xmath167 .",
    "if it is indeed , then we know from the definition of the group that @xmath144 must be the first interval of the group @xmath149 of @xmath144 at @xmath166 .",
    "we split @xmath149 into @xmath178 and @xmath179 .",
    "the next interval of @xmath172 is now @xmath165 , thus @xmath172 is merged with the group @xmath174 whose next interval is @xmath165 at @xmath166 . as did in case ( i ) , we update @xmath142 , @xmath150 , and @xmath175 to reflect the changes .",
    "[ [ case - iii - a_iy -- a_jy -- and - a_iy - a_jy . ] ] case ( iii ) @xmath180 and @xmath181 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in this case the relative order of the left endpoints is reversed after @xmath82 , i.e. , @xmath181 .",
    "for this change , we have nothing to do .",
    "[ [ case - iv - b_iy -- b_jy -- and - b_iy - b_jy . ] ] case ( iv ) @xmath182 and @xmath183 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the relative order of the right endpoints is reversed after @xmath82 , i.e. , @xmath183 .",
    "for the group @xmath149 whose next interval is @xmath144 at @xmath166 , the next interval must be changed from @xmath144 to @xmath165 .",
    "so we merge @xmath149 into the group @xmath174 of @xmath165 . for this change , we update @xmath142 , @xmath150 , @xmath175 and @xmath151 properly .",
    "+ as a result , we can update all the data structures in @xmath28 amortized time per event , so we can solve the decision problem for a fixed radius in @xmath81 time .",
    "we now describe how to find the optimal line @xmath184 and radius @xmath51 by a binary search that uses the decision algorithm for a fixed radius . to run a binary search , we need a discrete candidate set for the optimal radius @xmath51 , and we first study necessary conditions for the optimal line @xmath184 and radius @xmath51",
    ".    the optimal line @xmath184 must be immobilized , in the sense that if we translate it either upward or downward then the radius of the disks should be increased in order to cover @xmath1 .",
    "so in every optimal configuration , there must be at least two points of @xmath1 on the circles that immobilize @xmath184 , as illustrated in figure  [ fig : optimal ] . in the first two configurations @xmath184",
    "is fixed by two or three points on one bounding circle , and in the other configurations it is fixed by at most four points on two bounding circles .    from these optimal configurations ,",
    "we obtain @xmath80 candidates for the optimal radius as follows : consider the discs @xmath185 with @xmath72 and @xmath73 on its bounding circle .",
    "their centers move along the bisector of @xmath72 and @xmath73 , and thus in the @xmath186-plane we can define the function @xmath187 of the radius of @xmath185 with center of @xmath82-coordinate @xmath82 . it is easy to see that @xmath188 is a unimodal function , i.e. , @xmath188 is decreasing for @xmath189 and increasing for @xmath190 .",
    "if we define @xmath191 as the distance of @xmath72 to the line @xmath116 , we get another unimodal function @xmath191 ( which is decreasing for @xmath192 and increasing for @xmath193 ) .",
    "we now split @xmath188 into two monotone pieces : a decreasing piece @xmath194 and an increasing piece @xmath195 , and set @xmath196 , @xmath197 , and @xmath198 .",
    "then every optimal configuration illustrated in figure  [ fig : optimal ] corresponds to an intersection point of two pieces , one from @xmath199 and the other from @xmath200 ; the first case ( a ) corresponds to the point @xmath201 for a pair of @xmath72 and @xmath73 , the second case ( b ) corresponds to the point @xmath202 for a triple of @xmath72 , @xmath73 , and @xmath203 , and the remaining cases ( c ) , ( d ) , and ( e ) correspond to the points @xmath204 , @xmath205 , and @xmath206 for points @xmath72 , @xmath73 , @xmath203 , and @xmath207 , respectively .",
    "therefore , the optimal radius @xmath51 is the @xmath48-coordinate of one of the intersection points between @xmath199 and @xmath200 .",
    "both @xmath199 and @xmath200 consist of @xmath80 curves , so the number of intersection points is @xmath208 .    consequently , we can determine @xmath51 by performing a binary search ( discriminated by the decision algorithm ) on the radii associated with the vertices of the arrangement of the curves in @xmath209 .",
    "but the complexity of the arrangement is @xmath208 , so we find a way to compute the median of these radii without computing the arrangement explicitly . since any two functions in @xmath209 intersect at most once , we can pick the median of the radii from the arrangement in @xmath81 time , by using the modified slope selection algorithm  @xcite as we did in section  [ subsec : fixed ] . with this median of the radii , we run the decision algorithm given in section  [ subsec : orienfix ] in @xmath81 time .",
    "thus we can perform a step in the binary search in @xmath81 time , and @xmath51 can be found in @xmath210 time .",
    "we just proved the following :    [ th : orienfix ] let @xmath1 be a set of @xmath10 points in @xmath86 and @xmath87 .",
    "let @xmath51 be the minimum radius such that there exist @xmath0 disks of that radius with centers on a horizontal line and with union covering @xmath1 .",
    "then @xmath51 and such disks can be computed in @xmath210 deterministic time .",
    "[ [ remarks . ] ] remarks .",
    "+ + + + + + + +    this algorithm can be immediately applied to the problem in the @xmath88-metric . for the @xmath12-metric ,",
    "it is trivially solved in @xmath27 time because the optimal horizontal line is the middle line between the lowest and highest points .",
    "we now consider the case where the line @xmath3 can have arbitrary orientation and position . for @xmath211 ,",
    "the problem is equivalent to the standard two - center problem  @xcite , so we assume that @xmath212 .",
    "let @xmath51 be the minimum radius such that there exist @xmath0 disks of that radius with centers on a line and with union covering @xmath1 .",
    "we will find @xmath51 in a similar way as before : we first design a deterministic algorithm for the following decision problem and then perform a randomized binary search over some candidate set of radii :    _ given @xmath112 , decide if there exist @xmath0 disks of radius @xmath48 with centers on a line and with union covering @xmath1 . _",
    "the decision algorithm for fixed @xmath48 runs in @xmath213 time , and the randomized algorithm for finding the optimal radius @xmath51 by a binary search takes @xmath214 expected time .",
    "let @xmath215 denote the line with slope @xmath216 and @xmath82-intercept @xmath217 , and let @xmath112 be fixed . we need to decide",
    "if there exists a line @xmath215 such that @xmath215 intersects @xmath218 for all @xmath219 and the minimum piercing number @xmath220 for the interval system @xmath221 is no more than @xmath0 .",
    "note that the set @xmath222 is fixed and thus that if such a line @xmath215 exists , then we can move , i.e. , translate and rotate , the line without making any combinatorial change , until the line reaches one of the following configurations : ( i ) it contacts two disks tangentially , or ( ii ) it passes through an intersection of circles bounding two disks and is tangent to a third disk , or ( iii ) it passes through an intersection of two disks and another intersection of two different disks ; refer to the dash - lined disks of figure  [ fig : optimal ]  ( c),(d ) and ( e ) , respectively .",
    "thus we need to check only the lines in such configurations for this decision problem .    for the first case ( i )",
    ", there are only @xmath80 possible configurations ",
    "the bitangents of the disks @xmath218so we can check them all with the decision algorithm for the fixed center line .",
    "this takes @xmath223 total time . for the second case ( ii ) , we have @xmath224 possible configurations , and again we can check them all ; this takes @xmath213 total time .",
    "we now describe how to check the @xmath208 possible configurations corresponding to the third case ( iii ) .",
    "we fix an intersection point @xmath225 of circles bounding two disks , and check all center lines passing through @xmath225 . to this end",
    "we first sort all the intersections of the other circles in angular order around @xmath225 ; let @xmath226 denote this sorted sequence ( note that @xmath227 ) .",
    "we denote the line passing through @xmath225 and @xmath228 by @xmath229 . in a next step",
    "we determine a maximal interval @xmath230 such that for any @xmath231 the line @xmath229 intersects all @xmath10 disks .",
    "this can be done in @xmath232 time by a simple angular sweep .",
    "we now maintain the minimum piercing number for the intervals on the line @xmath229 as we sweep it from @xmath233 to @xmath234 .",
    "we can maintain the corresponding data structures in @xmath28 amortized time per event as described in section  [ sec : orienfix ] , so we can check in @xmath81 time all center lines passing through a fixed intersection @xmath225 .",
    "we run this algorithm for all intersection points of circles bounding two disks , thus we can check the @xmath208 possible configurations corresponding to the third case in @xmath213 time .",
    "to find an optimal triple @xmath235 , we use another form of binary searching which was applied to the slope selection problem by shafer and steiger  @xcite . as before",
    ", we investigate all optimal configurations to get a discrete candidate set of optimal radius @xmath51 .",
    "recall the optimal configurations for the center lines of fixed orientation , shown in figure  [ fig : optimal ] . in each configuration",
    ", we can slightly rotate the center line in clockwise direction without increasing the radius while the union keeps covering @xmath1 .",
    "thus we need more points on another disk to immobilize the line , and we obtain optimal configurations defined by two or three disks of radius @xmath51 ; in every optimal configuration with two disks , at least one of the two disks is such as ( a ) or ( b ) of figure  [ fig : optimal ] that contains a diametral pair of points or a triple of points on its boundary . every other configuration consists of three disks , each having one or two points on the boundary .    from these optimal configurations ,",
    "we collect candidates for the optimal radius @xmath51 .",
    "we first consider the configurations defined by two disks .",
    "as noted above , every optimal configuration with two disks includes a diametral pair or a triple of points of @xmath1 that lie on the boundary of an optimal disk .",
    "this pair or triple determines the radius of the optimal disk that it lies on .",
    "so we simply compute the radii from all pairs and triples of points and get @xmath224 candidates for the optimal radius .",
    "every other configuration consists of three disks , each having one or two points on the boundary .",
    "we can interpret the radii in such configurations as intersections of triples of surfaces as follows : let @xmath236 be the radius of the disk whose center lies on the line @xmath215 of slope @xmath216 and @xmath82-intercept @xmath217 and whose boundary contains two points @xmath72 and @xmath73 of @xmath1 ; if @xmath156 is equal to @xmath157 then @xmath237 is the distance from @xmath72 to @xmath215 .",
    "the graph of @xmath238 is a well - behaved low - degree algebraic surface in 3-dimensional @xmath239-space , and each triple of these surfaces provides only constant number of radius values . let @xmath240 be the set of these @xmath80 surfaces , and @xmath241 be their arrangement ; the complexity of @xmath241 is @xmath242 ( see page 533 in  @xcite ) .",
    "now we may compute all @xmath242 radii from the vertices of the arrangement @xmath241 and perform a binary search on the union of two sets of the previously computed @xmath224 radii and of the just computed @xmath242 radii , which will take @xmath243 time .",
    "however , we can do better if we adopt the randomization technique , as used in the slope selection problem by shafer and steiger  @xcite . instead of computing all @xmath242 vertices and radii from the arrangement , we select uniformly at random @xmath244 triples of surfaces in @xmath240 and compute the radii from the triples ; each triple of the surfaces gives us constant number of vertices from @xmath241 , so we get @xmath208 radii in total .",
    "we sort these @xmath208 radii together with the previously computed @xmath224 radii , in @xmath213 time . using the decision algorithm for a fixed radius ( of the previous subsection ) , we now perform a binary search and determine two consecutive radii @xmath34 and @xmath245 such that @xmath51 is between @xmath34 and @xmath245 .",
    "this takes @xmath6 time in total .",
    "since the vertices were picked randomly , the strip @xmath246 $ ] bounded by the two planes @xmath247 and @xmath248 contains only @xmath224 vertices of @xmath241 with high probability ; in fact this is always guaranteed if we select @xmath249 triples of the surfaces .",
    "so we can compute all the vertices in @xmath250 $ ] by a sweep - plane algorithm  @xcite in @xmath213 time as follows : we first compute the intersection of the sweeping plane at @xmath247 with the surfaces in @xmath240 .",
    "this intersection forms a two - dimensional arrangement of @xmath80 quadratic closed curves and straight lines with @xmath208 total complexity , so we can compute it in @xmath213 time .",
    "we next construct the arrangement in @xmath250 $ ] incrementally by sweeping from the intersection at @xmath251 towards @xmath248 . as a result",
    ", we can compute the @xmath224 vertices ( and the corresponding @xmath224 radii ) in @xmath250 $ ] .",
    "the computation time depends on the complexities of the curve arrangements on two planes @xmath247 and @xmath252 plus the complexity of the surface arrangement in the strip @xmath246 $ ] , which is @xmath208 .",
    "thus the time to identify all @xmath224 vertices lying in the strip is @xmath213 .",
    "as a final step , we perform again a binary search over these @xmath224 radii in @xmath250 $ ] to find @xmath51 , which takes @xmath6 time . we can find the optimal radius @xmath51 in @xmath6 time with high probability , so this randomized algorithm to find the optimal radius takes @xmath6 expected time .",
    "this result is summarized in the following :    [ th : arbi ] let @xmath1 be a set of @xmath10 points in @xmath86 and @xmath87 .",
    "let @xmath51 be the minimum radius such that there exists a set of @xmath0 disks of that radius with centers on a line and with union covering @xmath1",
    ". then @xmath51 and such disks can be computed in @xmath6 expected time .",
    "we propose two approximation algorithms for the problem of computing @xmath0-line centers for lines with fixed and arbitrary orientations , respectively .",
    "we consider the case where the orientation of the line @xmath3 is given in advance . without loss of generality",
    ", we may assume that @xmath3 is horizontal .",
    "fix an approximation parameter @xmath162 .",
    "let @xmath217 be the difference of the @xmath82-coordinates of the lowest point @xmath253 and the highest point @xmath254 in @xmath1 . clearly , the optimal radius @xmath51 is at least @xmath255 .",
    "for @xmath256 we sample @xmath257 lines of equal distance between @xmath253 and @xmath254 , solve the problem for the fixed lines in @xmath4 time per line , and take the smallest radius @xmath258 among the solutions .",
    "since the optimal line lies between two consecutive sampled lines , the radius @xmath258 is at most @xmath259 , which is @xmath260 .",
    "this result is summarized in the following :    [ th : fptas1dof ] let @xmath1 be a set of @xmath10 points in @xmath86 .",
    "let @xmath87 and @xmath162 .",
    "let @xmath51 denote the minimum radius such that there exists a set of @xmath0 disks with radius @xmath51 centered on some horizontal line that cover @xmath1 .",
    "we can compute in time @xmath261 a set of @xmath0 disks with radius at most @xmath262 centered on some horizontal line that cover @xmath1 .      in this section ,",
    "we give approximation algorithms for the general case where the line @xmath3 containing the @xmath0-centers is arbitrary .",
    "we first give a constant - factor approximation algorithm , and we show how to use this result to get a fully polynomial - time approximation scheme .",
    "the width of @xmath1 is the minimum distance between two lines that contain @xmath1 ; we denote this width by @xmath266 .",
    "we first compute a line @xmath267 such that the maximum distance between @xmath267 and any point of @xmath1 is at most @xmath268 ; this computation can be done in time @xmath153 by first computing the convex hull of @xmath1 , and then by finding the width of this convex hull in linear time using the rotating calliper technique  @xcite .",
    "we denote by @xmath47 the orthogonal projection to @xmath267 .",
    "we project all the points in @xmath1 and obtain a point set @xmath269 .",
    "( see figure  [ fig : constant ] . )",
    "we solve the @xmath0-center problem for @xmath270 when the centers are constrained to lie on @xmath267 .",
    "it is the one - dimensional @xmath0-center problem , which can be solved in @xmath22 time after the points in @xmath270 have been sorted  @xcite .",
    "we denote by @xmath271 the optimal radius for this problem , and we denote by @xmath272 a set of @xmath0 points such that @xmath1 is contained in the union of the @xmath0 disks with radius @xmath271 and center in @xmath272 .",
    "we have @xmath273 , because when we project the @xmath0 disks of a solution of the original problem to @xmath267 , we obtain a set of segments with length @xmath274 whose union contains @xmath270 .",
    "we now distinguish between two cases .",
    "first we assume that @xmath275 .",
    "let @xmath276 be a point in @xmath1 .",
    "there exists @xmath277 such that @xmath278 . as @xmath279",
    ", it implies that @xmath280 .",
    "we have just proved that @xmath1 is contained in the union of the disks centered at @xmath272 with radius @xmath281 . as we noticed earlier that @xmath282",
    ", we conclude that the set of disks centered at @xmath272 with radius @xmath281 is a @xmath283-factor approximation of the optimum .",
    "now we prove the remaining case : we assume that @xmath284 .",
    "let @xmath276 be a point in @xmath1 .",
    "there exists @xmath277 such that @xmath285 .",
    "since @xmath286 , we get @xmath287 .",
    "it follows that @xmath1 is contained in the union of the disks centered at @xmath272 with radius @xmath288 , and we conclude using the fact that @xmath273 .",
    "we now extend lemma  [ lem : constant_factor ] into an approximation scheme .",
    "we first compute a radius @xmath264 such that @xmath289 .",
    "the diameter @xmath15 of @xmath1 is the maximum distance between any two points in @xmath1 .",
    "we compute a pair @xmath290 such that @xmath291 ; it can be done in @xmath292 time in the same way as we computed the width .",
    "the lemma below handles the case where @xmath1 is skinny .",
    "[ lem : skinny ] we assume that @xmath293 . if @xmath294 , then we can compute in time @xmath295 a set of @xmath0 disks with collinear centers and with radius less than @xmath262 , such that these disks cover @xmath1 .",
    "let @xmath296 be a constant , to be specified later .",
    "we scale @xmath1 so that @xmath297 , and we choose a coordinate frame such that @xmath298 and @xmath299 .",
    "when @xmath300 , we denote @xmath301 . for each @xmath156 such that @xmath302 , using the result of section  [ sec : fixed_apx ] , we compute a @xmath303-approximation for lines with slope @xmath304 , and we return the covering with disks of smallest radius . as we consider only @xmath305 slopes @xmath304 , it takes total time @xmath295 .",
    "we will now prove the correctness of this algorithm .",
    "let @xmath263 be an optimal line ; we write its equation @xmath306 .",
    "consider the two axis - parallel squares centered at @xmath307 and @xmath308 with edge - length @xmath309 .",
    "( see figure  [ fig : skinny ] . ) since @xmath310 and @xmath294 , a line with slope outside the interval @xmath311 $ ] can not intersect both these squares , and thus this line is at distance more than @xmath264 from @xmath307 or @xmath308 . since @xmath312 , we know that @xmath263 intersects both of these squares and thus @xmath313 $ ] .",
    "so there exists @xmath314 such that @xmath315 $ ] and @xmath316 .",
    "we denote by @xmath317 the centers of @xmath0 disks with radius @xmath51 that cover @xmath1 .",
    "all the points in @xmath1 have @xmath42-coordinates in @xmath318 $ ] , so we can assume that the points in @xmath319 also have @xmath42-coordinates in @xmath318 $ ] . let @xmath320 $ ] denote the @xmath42-coordinates of the points in @xmath319 .",
    "we have @xmath321 we introduce the point set @xmath322 obtained by translating each point of @xmath319 vertically until it reaches the line @xmath323 with equation @xmath324 .",
    "hence we have @xmath325 notice that for all @xmath156 , we have @xmath326 so choosing @xmath327 , we get that @xmath328 and thus @xmath1 is covered by the disks with radius @xmath329 centered at @xmath330 .",
    "so if we consider the @xmath303-approximate radius @xmath331 that our algorithm returned for lines with slope @xmath332 , we have @xmath333 which completes our proof .",
    "[ lem : fat ] we assume that @xmath293 . if @xmath334 , then we can compute in time @xmath295 a set of @xmath0 disks with collinear centers and with radius less than @xmath262 , such that these disks cover @xmath1 .",
    "let @xmath296 be a constant , to be specified later .",
    "for each integer @xmath335 such that @xmath336 , using the result of section  [ sec : fixed_apx ] , we compute a @xmath303-approximation for lines making an angle @xmath337 with horizontal . among all these @xmath303-approximate solution , we return one with minimum radius .",
    "as there are @xmath305 angles @xmath337 , it takes total time @xmath295 .",
    "we will now prove the correctness of this algorithm .",
    "we denote by @xmath319 a set of centers in an exact solution to our problem , and we denote by @xmath338 the angle that the corresponding optimal line @xmath263 makes with horizontal . since @xmath339 , there exists a point @xmath340 that is at distance at most @xmath15 from @xmath307 .",
    "we choose @xmath156 such that @xmath341 is minimized , hence @xmath342 .",
    "we consider the line @xmath343 through @xmath225 making the angle @xmath337 with horizontal .",
    "we denote by @xmath344 the rotation around @xmath225 with angle @xmath345 ; hence @xmath346 .",
    "we now prove that the disks with radius @xmath329 centered at @xmath347 cover @xmath1 .",
    "so let @xmath276 denote a point in @xmath1 .",
    "there exists a center @xmath348 such that @xmath349 .",
    "we have @xmath350",
    ". then we have @xmath351 , and since @xmath334 and @xmath352 , we get @xmath353 . choosing @xmath354 , we get that the disks with radius @xmath329 centered at @xmath347 cover @xmath1 .",
    "consider the approximate @xmath0-center @xmath355 that was computed for lines making an angle @xmath337 with horizontal , and @xmath34 the corresponding radius .",
    "we have @xmath356 , which proves that @xmath355 is a @xmath7-approximate @xmath0 center for lines with arbitrary direction .",
    "[ th : fptas ] let @xmath1 be a set of @xmath10 points in @xmath86 .",
    "let @xmath87 and @xmath293 .",
    "let @xmath51 denote the minimum radius such that there exists a set of @xmath0 disks with radius @xmath51 and collinear centers that cover @xmath1 .",
    "we can compute in time @xmath295 a set of @xmath0 disks with radius at most @xmath262 and collinear centers that cover @xmath1 .",
    "h.  alt , e.  m.  arkin , h.  brnnimann , j.  erickson , s.  p.  fekete , c.  knauer , j.  lenchner , j.  s.  b.  mitchell , and k.  whittlesey .",
    "minimum - cost coverage of point sets by disks . in _ proc . of the 22nd annual acm symposium on computational geometry _ ( 2006 ) , 449458 .",
    "s. roy , d. bardhan and s. das .",
    "efficient algorithm for placing base stations by avoiding forbidden zone . in _ proc . of the 2nd int .",
    "conf . on distributed computing and internet technology _",
    "springer lncs , 3816 ( 2005 ) 105 - 116 ."
  ],
  "abstract_text": [
    "<S> in this paper we consider several instances of the _ @xmath0-center on a line problem _ where the goal is , given a set of points @xmath1 in the plane and a parameter @xmath2 , to find @xmath0 disks with centers on a line @xmath3 such that their union covers @xmath1 and the maximum radius of the disks is minimized . </S>",
    "<S> this problem is a constraint version of the well - known @xmath0-center problem in which the centers are constrained to lie in a particular region such as a segment , a line , and a polygon .    </S>",
    "<S> we first consider the simplest version of the problem where the line @xmath3 is given in advance ; we can solve this problem in @xmath4 time . </S>",
    "<S> we then investigate the cases where only the orientation of the line @xmath3 is fixed and where the line @xmath3 can be arbitrary . </S>",
    "<S> we can solve these problems in @xmath5 time and in @xmath6 expected time , respectively . for the last two problems , we present @xmath7-approximation algorithms , which run in @xmath8 time and @xmath9 time , respectively . </S>"
  ]
}
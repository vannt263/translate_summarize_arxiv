{
  "article_text": [
    "information age has altered the way people communicate by breaking the barriers imposed on communications by time , distance , and location and has undoubtedly impact not only humans activities but also global industry and economy .",
    "communication has been greatly affected by the constant and rapid evolution of many technologies such as fiber optic , cellular and satellite technology , networking , digital transmission and compression as well as advanced computers , and improved human - computer interaction .",
    "the aforementioned technologies allow the rapid transmission , and store , of great amounts of information .",
    "the digital era has already had extensive impacts on business , commerce , education , services , and social life .",
    "the concepts of e - government , e - learning , e - commerce , e - business , e - publishing , refer peoples interaction in the digital world . in this world",
    ", people everyday , interact by exchanging e - mails , instant messages , video , audio , images , and digital documents .",
    "part of the information transmitted is an increasing amount of sensitive information , such as personal data , medical and financial records , business information , government data , legal documents .",
    "another part of information available in the web is used to promote ones work or product .",
    "electronic document , is an extensively used medium traveling over the internet for information exchange and due to the ease of copying and distributing they are susceptible to threats like illegal copying , redistribution of copyrighted documents , and plagiarism .",
    "subsequently , it has become more important to protect the electronic documents from any malicious user while existing in the digital world .",
    "copyright protection of digital contents is such a need of time which can not be overlooked . in past ,",
    "various methods like encryption , steganography and watermarking has been used to solve these problems . however , digital watermarking is the better solution for copyright protection than encryption and steganography .",
    "it is well known that digital watermarking methods are efficient enough to identify the original copyright owner of the contents .",
    "recall that there are many reasons why you would want to use watermarks in digital documents : as a copying deterrent , as a means of identifying the source of a printed document , as a means of determining whether a document has been altered , etc .",
    "* attacks . *",
    "any action that a user can perform on a text that can affect the watermark , or its usefulness , is called attack . in @xcite",
    "existing attacks on text watermarking can be classified into three main categories :    * watermark attacks , * geometric attacks , and * system attacks .    in a watermark attack",
    ", the adversary aims to detect and destroy the watermark , without necessarily decoding the original message .",
    "in contrast to watermark attacks , geometrical attacks are blind attacks on watermarked text documents .",
    "the process of these attacks requires neither the algorithmic knowledge of the watermarking technique nor the watermarking key , geometrical attacks intend not to remove the embedded watermark itself , but to prevent it from serving its intended purpose through altering format or content of the watermarked text documents .",
    "this type of attack includes reformatting , reproducing , sentences swapping , paragraphs shuffling , the addition / deletion of words , sentences and paragraphs .",
    "system attacks use several signal processing tools such as principal component analysis , independent component analysis , clustering , vector quantization , etc .",
    "* related work .",
    "*  text watermarking is the area of research that has emerged after the development of internet and communication technologies ; we mention that the first reported effort on marking documents dates back to 1993  @xcite .",
    "generally , we can classify the previous work on digital text watermarking in the following four categories :    * image based approach , * syntactic approach , * semantic approach , and * structural approach .    in image - based approach ,",
    "a watermark is embedded in text image .",
    "brassil , et  al .",
    "were the first to propose a few text watermarking methods utilizing text image  @xcite ; they also developed document watermarking schemes based on line shifts , word shifts as well as slight modifications to the characters @xcite .",
    "maxemchuk , et  al .",
    "@xcite analyzed the performance of these methods , while later low , et  al .",
    "@xcite further analyzed their efficiency .",
    "huang and yan @xcite proposed a text watermarking method based on an average inter - word distance in each line . in syntactic approach ,",
    "the syntactic structure of the text is used to embed watermark .",
    "atallah , et  al .",
    "@xcite proposed several methods of natural language watermarking , which opened up a brand - new and challenging research direction for text watermarking .",
    "meral et  al .",
    "performed morpho - syntactic alterations to the text to watermark it  @xcite ; they also provided an overview of available syntactic tools for text watermarking  @xcite .    in semantic approach , semantics of text",
    "are used to embed the watermark in text .",
    "atallah et  al .",
    "were the first to propose the semantic watermarking schemes  @xcite .",
    "later , the synonym substitution method was proposed , in which watermark was embedded by replacing certain words with their synonyms @xcite .",
    "sun , et  al .",
    "@xcite proposed noun - verb based technique for text watermarking which used nouns and verbs parsed by semantic networks .",
    "topkara , et  al . proposed an algorithm of the text watermarking by using typos , acronyms and abbreviation in the text to embed the watermark  @xcite .",
    "algorithms were developed to watermark the text using the linguistic approach of presuppositions  @xcite in which the discourse structure , meaning , and representations are observed and utilized to embed watermark bits .",
    "the text pruning and the grafting algorithms were also developed in the past . another algorithm based on text meaning representation ( tmr ) strings has also been proposed  @xcite .",
    "the structural approach is the most recent approach used for copyright protection of text documents . in this approach",
    ", text is not altered , rather it is used to logically embed watermark in it .",
    "a text watermarking algorithm , for copyright protection of text using occurrences of double letters ( aa - zz ) in text , has recently been proposed @xcite .",
    "recently , a significant number of techniques have been proposed in the literature which use portable document format ( pdf ) files as cover media in order to hide data  @xcite",
    ".    * contribution . *  in this paper , in order to provide to web users copyright protection of their digital documents , we present easily implemented techniques for watermarking pdf documents .",
    "our aim is to extent the digital objects that the proposed representations of a self - inverting permutation , i.e. the 1d - representation , the 2d - representation , and the rpg - representation , can be efficiently applied to ; note that , rpg - representation means the encoding of permutation @xmath0 as a reducible permutation graph @xmath3 $ ] .",
    "we first propose an image - based technique for marking the pdf document @xmath1 by exploiting the 1d - representation of a permutation @xmath0 .",
    "the embedding of a mark is performed by increasing the distance ( or , space ) between two consecutive words in a paragraph of the document @xmath1 .",
    "the extraction algorithm operates in a reverse manner .",
    "consequently , since pages of a pdf documents @xmath1 are two dimensional objects , we propose an algorithm for encoding a self - inverting permutation @xmath0 into a document @xmath1 by first mapping the elements of @xmath0 into an @xmath4 matrix @xmath2 and then using the information stored in @xmath2 to mark invisibly specific areas of pdf document @xmath1 resulting thus the watermarked pdf document @xmath5 .",
    "we also propose an efficient algorithm for extracting the embedded self - inverting permutation @xmath0 from the watermarked pdf document @xmath5 by locating the positions of the marks in @xmath5 ; it enables us to recontract the 2d representation of the self - inverting permutation @xmath0 .",
    "finally , we describe a watermarking algorithm for embedding a self - inverting permutation into the document structure of a pdf file @xmath1 , by exploiting the graph representation of @xmath0 and the structure of a pdf document @xmath1 .",
    "more precisely , in light of the two embedding algorithms @xmath6-@xmath7 and -@xmath8 , we present an algorithm for embedding a reducible permutation graph @xmath3 $ ] into a pdf document @xmath1 . the main idea behind",
    "the proposed embedding algorithm is a systematic addition of appropriate object - references in the input pdf document @xmath1 , through the use of entries of type @xmath9 , so that the graph @xmath3 $ ] can be easily constructed from the page tree pt(@xmath5 ) of the resulting watermarked document @xmath5 .",
    "* road map . *",
    "the paper is organized as follows : in section  [ sec : background - results - pdf ] we establish the notation and related terminology , and we present background results . in section  [ sec : watermarking - pdf - document ] based on the three different representations of self - inverting permutation ( sip ) , i.e. , the 1d - representation , the 2d - representation , and the rpg - representation ( the encoding of permutation @xmath0 as a reducible permutation graph @xmath3 $ ] ) , we present the algorithms @xmath10-@xmath7 , @xmath10-@xmath8 , and @xmath11 , along with the corresponding extracting algorithms , for embedding a watermark number ( or , equivalently , a self - inverting permutation @xmath0 or a reducible permutation graph @xmath3 $ ] ) into a pdf document file . finally , in section  [ sec : concluding - remarks - pdf ] we conclude the paper and discuss possible future extensions .",
    "in this section we give some definitions and the theoretical background we use towards the watermarking of portable document format ( pdf ) documents .",
    "we first briefly present the different representations of a self - inverting permutation ( sip ) , and then we present the structure of pdf documents .    *",
    "1d - representation of sip . *",
    "recently , we presented the one - dimensional representation ( 1d - representation ) of a self - inverting permutation ( sip ) @xmath0 and the one - dimensional marked representation of @xmath0 ( 1dm - representation ) , and showed how to embed a sip , represented by 1d space , into an audio signal @xcite . in our 1d - representation , the elements of the permutation @xmath12 are mapped in specific cells of an array @xmath13 of size @xmath14 as follows :    * number @xmath15 @xmath16 entry @xmath17    or , equivalently , the cell at the position @xmath18 is labeled by the number @xmath15 , for each @xmath19 .    in our 1 dm representation , a permutation @xmath12 over the set  @xmath20",
    "is represented by an @xmath14 array @xmath21 by marking the cell at the position @xmath18 by a specific symbol , where , in our implementation , the used symbol is again the asterisk character  * \" .    ' '' ''        ' '' ''    [ fig : fig-1 ]    * 2d - representation of sip .",
    "* we have also presented the two - dimensional representation of a sip ( 2d - representation ) and the two - dimensional marked representation of sip ( 2dm - representation ) ; note that , theses representations have been recently used for watermarking images in the frequency domain @xcite .",
    "we defined the 2d - representation of a sip as the representation where the elements of the permutation @xmath22 are mapped in specific cells of an @xmath23 matrix @xmath24 as follows :    * number @xmath15 @xmath16 entry @xmath25    or , equivalently ,    * the cell at row @xmath26 and column @xmath15 is labeled by the number @xmath15 , for each @xmath19 .    in 2dm - representation the cell at row @xmath26 and column @xmath15 of matrix @xmath24 is marked by a specific symbol , for each @xmath19 .",
    "we have presented algorithms for embedding the 2d - dimensional representation of sip in an image .",
    "recall that the matrix @xmath24 incorporates important structural properties which , in image watermarking , make it possible to detect geometric transformations on the watermarked image .",
    "the properties of the matrix @xmath24 are the following :    * the matrix @xmath24 is symmetric ; * the main diagonal of the symmetric matrix @xmath2 has always one and only one marked cell ; * the marked cell on the diagonal is always in entry @xmath27 of @xmath2 , where @xmath28 , @xmath29 , @xmath30 , @xmath31 .    the authors of this paper , we have also presented an efficient and easily implemented algorithm for encoding numbers as reducible permutation graphs ( or , for short , rpg ) through the use of self - inverting permutations @xcite . in particular",
    ", we have proposed two such encoding algorithms : the algorithm @xmath6-@xmath7 applies to any permutation @xmath12 and relies on domination relations on the elements of @xmath12 whereas the algorithm @xmath6-@xmath8 applies to a self - inverting permutation @xmath0 produced in any way and relies on the decreasing subsequences of @xmath0 .",
    "figure  [ fig : fig-1 ] summarizes by an example the representations of the permutation @xmath32 .    ' '' ''        ' '' ''    [ fig : file - structure ]    0.0 in      the portable document format ( pdf )  @xcite is an open standard ( defined in iso 32000 ) which facilitates device and platform independent capture and representation of rich information such as text , multimedia and graphics , into a single medium .",
    "thus the pdf format enables viewing and printing of a rich document , independent of either application software or hardware . in this section we present a structural analysis of a pdf file , by giving its basic components .",
    "* object . *",
    "an object is the basic element in pdf files , in which eight kinds of objects , namely boolean object , numeric object , string object , name object , array object , null object , dictionary and stream object are sustained .",
    "objects may be labeled so that they can be referred to by other objects .",
    "a labeled object is called an indirect object .    * file structure . *",
    "the pdf file structure determines how objects are stored in a pdf file , how they are accessed , and how they are updated .",
    "the file structure ( see , figure  [ fig : file - structure ] ) includes the following :    * an one - line header identifying the version of the pdf specification to which the file conforms , * a body containing the objects that make up the document contained in the file , * a cross - reference table containing information about the indirect objects in the file , and * a trailer giving the location of the cross - reference table and of certain special objects within the body of the file .    ' '' ''        ' '' ''    [ fig : document - structure ]    figure  [ fig : file - structure ] shows an example of a pdf file and its internal file structure .    * document structure .",
    "* the pdf document structure specifies how the basic object types are used to represent components of a pdf document : pages , fonts , annotations , and so forth . the document structure of a pdf file",
    "is organized in the shape of an object tree topped by catalog , page tree , outline hierarchy and article thread included .",
    "the outline hierarchy is the bookmarker of pdf , and page tree includes page and pages which in turn includes the total page number and each page marker .",
    "page , the main body of pdf file , is the most important object which involves the typeface applied , the text , pictures , page size , and so on .",
    "the organization of other objects is analogous to page tree .",
    "figure  [ fig : document - structure ] illustrates the structure of the object hierarchy .",
    "in this section we describe embedding algorithms for encoding a sip @xmath0 into a digital document @xmath1 . more specifically , we embed the permutation @xmath0 into a pdf document by exploiting ( i ) the one - dimensional representation of @xmath0 , ( ii ) the two - dimensional representation of a @xmath0 , and ( iii ) the encoding of @xmath0 as a reducible permutation graph @xmath33 $ ] .",
    "we first design an embedding algorithm for watermarking a pdf document by exploiting the 1d - representation of a permutation @xmath0 .",
    "the marking is performed by increasing the space between two consecutive words in a paragraph of @xmath1 .",
    "let @xmath21 be the 1d array of size @xmath34 which represents the permutation @xmath0 of length @xmath31 , and let ( w@xmath35 , s@xmath35 ) , ( w@xmath36 , s@xmath36 ) , @xmath37 , ( w@xmath38 , s@xmath38 ) be @xmath39 pairs of type  word - space \" of a paragraph _ par _ of the input pdf document ; recall that the entry @xmath40 contains the symbol  * \" , @xmath41 .",
    "the algorithm increases by a small value ",
    "c \" the @xmath26-th space of the pair ( w@xmath42 , s@xmath42 ) if @xmath43 .",
    "we next give a high - level description , with respect to pdf modification , of our proposed embedding algorithm .    ' '' ''",
    "+ ( a ) +    ' '' ''    [ fig : file - structure - ex ]    * algorithm @xmath10-@xmath7 *    1 .",
    "compute the 1 dm representation of the permutation @xmath0 , i.e. , construct the array @xmath21 of size @xmath34 where the @xmath44 entry of @xmath21 contains the symbol  * \" , @xmath41 ; 2 .   select an appropriate paragraph _ par _ on a page @xmath45 of pdf document @xmath1 to embed the self - inverting permutation @xmath0 ; 3 .",
    "partition the paragraph _ par _ into @xmath39 pairs @xmath46 , where @xmath47 and @xmath48 are the @xmath26-th word and space , respectively , in selected paragraph _",
    ", @xmath49 ; 4 .   for each pair @xmath50 s.t .",
    "@xmath43 , increases the space @xmath48 or , equivalently , distance @xmath51 between words @xmath47 and @xmath52 , by a relative small value @xmath53 , @xmath49 ; 5 .   return the watermarked pdf document @xmath5 .    *",
    "extraction . *  the extraction algorithm , which we call @xmath54-@xmath7 , operates as follow : it takes as input the watermarked pdf document @xmath5 , locates the paragraph _ par _ , and computes the permutation @xmath0 by finding the positions of the words @xmath47 such that :    * @xmath55 , or * @xmath56    where , @xmath57 is the distance between words @xmath47 and @xmath58 in a paragraph _ par _ of @xmath5 , @xmath49 ; note that , an appropriate paragraph _ par _ contains more that @xmath39 words .      in this section",
    "we describe a different approach of embedding algorithm a self - inverting permutation @xmath0 into a digital document @xmath1 , by exploiting the two - dimensional representation of permutation @xmath0 .",
    "the main idea behind the embedding algorithm , we call it @xmath10-@xmath8 , is similar of that of algorithm @xmath59-@xmath60 ( see , @xcite ) .",
    "the most important of this idea is the fact that it suggests a way in which the permutation @xmath0 can be represented with a 2d - representation and since pages of a pdf document @xmath1 are two dimensional objects that representation can be efficiently marked on them resulting the watermarked pdf document @xmath5 ; in a similar way as in our image watermarking approach , such a 2d - representation can be efficiently extracted for a watermarked pdf document @xmath5 and converted back to the self - inverting permutation @xmath0 .",
    "let @xmath2 be the 2d matrix of size @xmath4 which represents the permutation @xmath0 of length @xmath31 .",
    "the marking of the input pdf document @xmath1 is performed by selecting an appropriate page @xmath45 of @xmath1 and setting @xmath31 objects ( e.g. , characters , symbols , images ) in a specific positions on page @xmath45 , @xmath41 .",
    "in fact , we set an object @xmath61 in position with @xmath62 coordinates on page @xmath45 if @xmath63 , where @xmath64 and @xmath65 ; note that , @xmath66 is the lower - left point ( or , equivalently , the bottom - left corner ) of the page @xmath45 .",
    "the algorithm takes as input a sip @xmath0 and a pdf document @xmath1 , and returns the watermarked document @xmath5 ; it consists of the following steps .    ' '' ''     + ( a ) +    ' '' ''    [ fig : file - structure - ex ]    * algorithm @xmath10-@xmath8 *    1 .   compute the 2 dm representation of the self - inverting permutation @xmath0 , i.e. , construct an array @xmath2 of size @xmath4 s.t .",
    "the entry @xmath67 contains the symbol  * \" , @xmath41 ; 2 .   select an appropriate page @xmath45 to embed the permutation @xmath0 and compute the size @xmath68 of the page @xmath45 , say , @xmath69 ; 3 .",
    "segment the pdf page @xmath45 into @xmath4 grid - cells @xmath70 of size @xmath71 , @xmath72 ; 4 .   for each grid - cell @xmath70 s.t .",
    "@xmath73 , mark the cell @xmath70 by setting a symbol , with an appropriate color , in any position inside @xmath70 of @xmath45 , @xmath72 , resulting thus the marked document @xmath5 ; 5 .   return the watermarked pdf document @xmath5 .    ' '' ''        ' '' ''    [ fig : rpg - in - page - tree ]    * extraction . *",
    "the algorithm which extracts the permutation @xmath0 from the watermarked pdf @xmath5 operates in a similar way as the corresponding extraction algorithm for images : it takes the input watermarked image @xmath74 , locate the marked page @xmath45 , computes its @xmath69 size , and segments @xmath45 into @xmath4 grid - cells @xmath70 of size @xmath75 ; then , it computes the permutation @xmath0 by finding the coordinates @xmath76 of the @xmath31 symbols in the page @xmath45 , @xmath41 ; we call it @xmath54-@xmath8 .      in this section",
    "we describe a watermarking algorithm for embedding a self - inverting permutation @xmath0 into a pdf document @xmath1 , by exploiting the rpg - representation of @xmath0 and the structure of a pdf document @xmath1 .",
    "indeed , we have recently proposed two algorithms , namely @xmath6-@xmath7 and -@xmath8 , for encoding self - inverting permutations @xmath0 as reducible permutation graphs @xmath3 $ ] . moreover , in this paper we have described the document structure ds(@xmath1 ) of a pdf document @xmath1 ( see , subsection  [ subsec : structure - of - pdf ] ) ; note that , the document structure of a pdf file always contains a node , namely @xmath77-@xmath78 , and a page tree pt(@xmath1 ) rooted at node @xmath79-@xmath80 , denoted by @xmath81 ; see , figure  [ fig : document - structure](b ) .",
    "in light of the two encoding algorithms @xmath6-@xmath7 and -@xmath8 , we next present an algorithm for embedding a reducible permutation graph @xmath3 $ ] into a pdf document @xmath1 . the main idea behind",
    "the proposed embedding algorithm is a systematic addition of appropriate object - references in selected nodes of the page - tree pt(@xmath1 ) of the document structure ds(@xmath1 ) , through the use of entries of type @xmath82 , so that the graph @xmath3 $ ] can be easily constructed from the page - tree pt(@xmath5 ) of the resulting watermarked document @xmath5 .",
    "let @xmath3 $ ] be a reducible permutation graph produced by one of our two encoding algorithms ( i.e. , @xmath6-@xmath7 or -@xmath8 ) , and let @xmath83 be the nodes of the graph @xmath3 $ ] ; note that , @xmath3 $ ] does not contain the back - edge @xmath84 .",
    "in order to simplify the extraction process , the graph @xmath3 $ ] which is embedded into a pdf document @xmath1 contains one extra back - edge , i.e. , the edge @xmath84 ; see , @xcite .",
    "the algorithm for embedding a reducible permutation graph @xmath3 $ ] into a pdf document @xmath1 is called @xmath85 and is described below .    0.0 in * algorithm @xmath85 *    1 .",
    "compute the document structure ds(@xmath1 ) of the input pdf document @xmath1 and locate its page - tree pt(@xmath1 ) ; let @xmath86 be the document catalog node of structure ds(@xmath1 ) and @xmath81 be the root node of the page tree pt(@xmath1 ) ; see , figure  [ fig : document - structure](b ) ; 2 .",
    "compute a path @xmath87 on @xmath88 nodes ( i.e. , objects ) of the page - tree pt(@xmath1 ) s.t .",
    "@xmath89 , and set @xmath90 and @xmath91 ; 3 .",
    "assign an exact pairing ( i.e. , 1 - 1 correspondence ) of the @xmath88 nodes of path @xmath92 to the nodes @xmath83 of the watermark graph @xmath3 $ ] ; 4 .   for each back -",
    "edge @xmath93 of the graph @xmath3 $ ] ( i.e. , @xmath94 ) , add the forward - edge @xmath95 in page - tree pt(@xmath1 ) by adding in object @xmath96}$ ] an entry of type @xmath97 ; add in object @xmath98}$ ] an entry of type @xmath99 ; 5 .   return the modified pdf document @xmath1 , i.e. , the watermarked document @xmath5 ;    let us briefly discuss the way we add forward - edge in the page - tree pt(@xmath1 ) ; recall that , in step  4 of the previous algorithm @xmath85 we add the forward - edge @xmath95 in page - tree pt(@xmath1 ) by adding in object @xmath96}$ ] an entry of type @xmath97 .",
    "the entry @xmath97 may be of various types ; note that , @xmath100 is used as parameter in our algorithm s description .    in our implementation",
    ", for the forward - edge @xmath95 such that the object @xmath96}$ ] is not the rood - node @xmath81 of the page - tree pt(@xmath1 ) , we always chose the entry @xmath97 which we add in object @xmath96}$ ] to be of the same type of object @xmath101}$ ] . in the case where @xmath102 , we chose the entry @xmath97 to be of type @xmath103 .",
    "for example , in figure  [ fig : rpg - in - page - tree ] we have added forward - edges from object @xmath104}$ ] to object @xmath105}$ ] , from object @xmath104}$ ] to object @xmath106}$ ] , from object @xmath105}$ ] to object @xmath107}$ ] , etc .",
    "thus , in our implementation we have added in the root - node object @xmath104}$ ] the entries @xmath108 and @xmath109 , in object @xmath105}$ ] the entry @xmath110 , while in object @xmath107}$ ] the entries @xmath111 and @xmath112 .    * remark  3.1*.  let @xmath1 be a pdf file and let pt(@xmath1 ) be a page - tree of the document structure ds(@xmath1 ) .",
    "a node of the page - tree pt(@xmath1 ) may contain several entries @xmath100 of various types .",
    "we mention that , some types are required for the entries in specific nodes of pt(@xmath1 ) ; for example , the required entries in the root - node @xmath81 of the page - tree pt(@xmath1 ) are the following four : @xmath113 , @xmath114 , @xmath103 , and @xmath115 .",
    "* extraction . *",
    "we next describe the corresponding extraction algorithm , which we call @xmath116 ; it extracts the graph @xmath3 $ ] from the pdf document @xmath5 watermarked by the embedding algorithm @xmath85 .",
    "the algorithm works as follows :    1 .   take first as input the pdf document @xmath5 watermarked by the embedding algorithm @xmath85 , compute the document structure ds(@xmath5 ) of @xmath5 , and locate its page tree pt(@xmath5 ) ; then , find in object @xmath117 , where @xmath117 is the root of the tree pt(@xmath5 ) , the entry @xmath118 s.t .",
    "@xmath119 is not a child of @xmath117 , and set @xmath89 and @xmath120 ; 2 .   compute the path @xmath87 of pt(@xmath5 ) , from node @xmath117 to @xmath121 , and assign an exact pairing ( i.e. , 1 - 1 correspondence ) of the @xmath88 nodes of path @xmath92 to the nodes @xmath83 of a graph @xmath3 $ ] ; initially , @xmath122)=\\emptyset$ ] ; 3 .   add edges @xmath123 in @xmath3 $ ] for @xmath124 , and the edge @xmath125 iff @xmath126 is a forward edge in the page tree pt(@xmath5 ) ; 4 .   delete the edge @xmath127 from the graph @xmath3 $ ] ; 5 .   return the graph @xmath3 $ ] ;    it is easy to see that , by construction the returned graph @xmath3 $ ] is a reducible permutation graph produced by either algorithm @xmath6-@xmath7 or algorithm @xmath6-@xmath8 .",
    "thus , @xmath3 $ ] has the following property : the structure which results after deleting    * all the forward edges @xmath123 of @xmath3 $ ] , @xmath128 , and * the node @xmath129    is either the tree  @xmath130 $ ] or the tree  @xmath131 $ ] produced during the execution of either the decoding algorithm @xmath132-@xmath7 or algorithm @xmath132-@xmath8 , respectively ( see , @xcite ) .",
    "thus , we can efficiently extract the self - inverting permutation @xmath0 embedded into a pdf document @xmath1 by algorithm @xmath85 .",
    "in this paper we presented embedded algorithms , along with their corresponding extraction algorithms , for watermarking pdf documents @xmath1 using three different representations of a self - inverting permutation @xmath0 , namely 1d - representation , 2d - representation , and rpg - representation ; note that , rpg - representation means the encoding of permutation @xmath0 as a reducible permutation graph @xmath33 $ ] .    the main features of our algorithms , i.e. , the way they mark a pdf document @xmath1 or , equivalently , the way they embed a self - inverting permutation @xmath0 into document @xmath1 , are summarized as follows :    * in the first algorithm @xmath10-@xmath7 the marking of a pdf document @xmath1 is performed by increasing the distance ( or , space ) between two consecutive words in a paragraph of @xmath1 . * the main idea behind the second algorithm @xmath10-@xmath8",
    "is based on the fact that @xmath0 has a 2d - representation and , since pages of a pdf documents @xmath1 are two dimensional objects , it can be efficiently used to mark specific positions on a page of @xmath1 resulting thus the watermarked pdf document @xmath5 . *",
    "the third graph - based embedding algorithm @xmath85 uses a deferent approach : it exploits the structure of a pdf document @xmath1 and embeds the graph @xmath3 $ ] into @xmath1 by adding appropriate object - references in the document @xmath1 , through the use of entries of type @xmath133 , so that the graph @xmath3 $ ] can be easily constructed from the page tree pt(@xmath5 ) of the resulting watermarked document @xmath5 .    in light of our graph - based embedding algorithm @xmath85",
    "it would be very interesting to investigate the possibility of altering other components of the document structure of a pdf file in order to embed the graph @xmath3 $ ] ; we leave it as a direction for future work .",
    "moreover , an interesting open question is whether the embedding approaches and techniques used in this paper can help develop efficient encoding algorithms having  better \" properties with respect text attacks ; we leave it as an open problem for future investigation .",
    "amano , t. , and misaki , d. : a feature calibration method for watermarking of document images . in : ieee proceedings of the 5th inl conference on document analysis and recognition ( icdar99 ) , pp .",
    "9194 ( 1999 )        brassil , j.t . ,",
    "low , s. , maxemchuk , n.f . , and gorman , l.o . : electronic marking and identification techniques to discourage document copying .",
    "ieee journal on selected areas in communications 13(8 ) , 14951504 ( 1995 )    brassil , j.t . , low , s. , maxemchuk , n.f . , gorman , l.o .",
    ": hiding information in document images . in : proceedings of the 29th annual conference on information sciences and systems , johns hopkins university , pp .",
    "482489 ( 1995 )      bindra , g.s .",
    ": invisible communication through portable document file ( pdf ) format . in : proceedings of the 7th international conference on intelligent information hiding and multimedia signal processing ( iih - msp11 ) , pp .",
    "173176 ( 2011 )    bindra , g.s . : masquerading as a trustworthy entity through portable document file ( pdf ) format . in : proceedings of the 2011 ieee international conference on passat and ieee international conference on social com . ,",
    "boston , usa , pp .",
    "784789 ( 2011 )    chroni , m. : algorithmic techniques for encoding permutations and permutation graphs for watermarking software , image , audio , and text .",
    "department of computer science and engineering , university of ioannina , phd  thesis ( 2014 ) .",
    "chroni , m. , fylakis , a. , and nikolopoulos , s.d . : from image to audio watermarking using self - inverting permutations . in : proceedings of the 10th intl conference on web information systems and technologies ( webist14 ) , scitepress , pp .  177184 ( 2014 )",
    "chroni , m. , fylakis , a. , and nikolopoulos , s.d . : watermarking images in the frequency domain by exploiting self - inverting permutations . in : proceedings of the 9th intl conference on web information systems and technologies ( webist13 ) , scitepress , pp .",
    "4554 ( 2013 )    chroni , m. , and nikolopoulos , s.d . : design and evaluation of a graph codec system for software watermarking . in : proceedings of the 2nd intl conference on data management technologies and applications ( data13 ) , scitepress , 277284 ( 2013 )    chroni , m. , and nikolopoulos , s.d . : an efficient graph codec system for software watermarking . in : proceedings of the 36th intl conference on computers , software , and applications ( compsac12 ) , workshop stpsa12 , ieee , pp .  595600 ( 2012 )",
    "lu , p. , lu , z. , zhou , z. , and gu , j. : an optimized natural language watermarking algorithm based on tmr . in : proceedings of the 9th international conference for young computer scientists , pp .",
    "14591463 ( 2008 )    liu , h. , li , l. , li , j. , and huang , j. : three novel algorithms for hiding data in pdf files based on incremental updates .",
    "digital forensics and watermarking , springer berlin heidelberg , pp .",
    "167180 ( 2012 )    liu , x. , zhang , q. , tang , c. , zhao , j. , and liu , j. : a steganographic algorithm for hiding data in pdf files based on equivalent transformation . in : international symposiums on information processing ( isip08 ) , pp .",
    "417421 ( 2008 )                meral , h.m .",
    ", sevin , e. , nkar , e. , sankur , b. , zsoy , a. , and gngr , t. : syntactic tools for text watermarking . in : proceedings of the 19th spie electronic imaging conference on security , steganography , and watermarking of multimedia contents , san jose , ca , ( 2007 )        topkara , u. , topkara , m. , and atallah , m.j . : the hiding virtues of ambiguity : quantifiably resilient watermarking of natural language text through synonym substitutions . in : proceedings of acm multimedia and security conference ( 2006 )    topkara , m. , topraka , u. , and atallah , m.j . : information hiding through errors : a confusing approach . in : proceedings of the spie international conference on security , steganography , and watermarking of multimedia contents , san jose , ca , ( 2007 )    zhou , x. , and zhao , w. , and wang , z. , and pan , l. : security theory and attack anlysis for text watermarking . in : proceedings of the international conference on e - business and information system security ( ebiss ) , pp .  16 ( 2009 )"
  ],
  "abstract_text": [
    "<S> this work provides to web users copyright protection of their portable document format ( pdf ) documents by proposing efficient and easily implementable techniques for pdf watermarking ; our techniques are based on the ideas of our recently proposed watermarking techniques for software , image , and audio , expanding thus the digital objects that can be efficiently watermarked through the use of self - inverting permutations . in particular , we present various representations of a self - inverting permutation @xmath0 namely 1d - representation , 2d - representation , and rpg - representation , and show that theses representations can be efficiently applied to pdf watermarking . indeed , </S>",
    "<S> we first present an audio - based technique for marking a pdf document @xmath1 by exploiting the 1d - representation of a permutation @xmath0 , and then , since pages of a pdf document @xmath1 are 2d objects , we present an image - based algorithm for encoding @xmath0 into @xmath1 by first mapping the elements of @xmath0 into a matrix @xmath2 and then using the information stored in @xmath2 to mark invisibly specific areas of pdf document @xmath1 . finally , we describe a graph - based watermarking algorithm for embedding a self - inverting permutation @xmath0 into the document structure of a pdf file @xmath1 by exploiting the rpg - representation of @xmath0 and the structure of a pdf document . we have evaluated the embedding and extracting algorithms by testing them on various and different in characteristics pdf documents .    * keywords . *  watermarking techniques ; text watermarking ; pdf documents , self - inverting permutations ; representations of permutations ; embedding algorithms ; extracting algorithms . </S>"
  ]
}
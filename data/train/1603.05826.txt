{
  "article_text": [
    "the mechanism of nature selection has produced the whole of life on earth in a surprisingly short time of about three and half billion years .",
    "a computational question inspired by this phenomenon is  chastain what algorithm could possibly achieve all this in such a short time ?",
    "can we develop algorithms using this mechanism ?",
    "the @xmath0-bit exact cover problem  ( ec@xmath0 ) is a hard problem in computer science and mathematics . in this problem",
    ", one has to find out if there exists an assignment(s ) of an @xmath1-bit string that satisfies a boolean formula of clauses .",
    "the ec@xmath0 problem shares similar property as the evolution of life : lives / assignments have to fit to the changing environments / clauses to survive . here",
    ", we propose a multi - step quantum algorithm for solving this problem .",
    "quantum computing offers speedup in solving a number of problems  @xcite : factorizing large integers , searching unsorted databases , and simulating quantum systems , etc . the question of whether there are polynomial algorithms for np - complete  ( npc ) problems is an unsolved problem in mathematics  @xcite .",
    "the ec@xmath0 problem is a restricted version of the @xmath0-bit satisfiability problem  @xcite and is one of the npc problems .",
    "a quantum adiabatic algorithm was proposed for solving the ec@xmath0 problem on a quantum computer  @xcite , and it was found later that it can not solve the ec@xmath0 problem efficiently  @xcite .",
    "the question of whether npc problems can be solved in polynomial time on a quantum computer is an open question .    in most of the methods that have been tried ,",
    "the ec@xmath0 problem is turned to a search problem directly .",
    "classically , the cost for searching an item in a space of @xmath2 items scales as @xmath3(@xmath2 ) .",
    "grover s algorithm provides quadratic speedup over classical algorithms for the search problem on a quantum computer . while the cost can be reduced with the help of some tools .",
    "let s see an example : there are @xmath4 balls , all of them have equal weights except one that is lighter than the others . how to find out the lighter ball ?",
    "if we randomly pick up a ball and compare its weight with the others , this will take about @xmath5 trials on average .",
    "if we have a balance , then how many times do we have to use the balance to find out the lighter ball ? according to information theory ,",
    "the number of times the balance has to be used is @xmath6 .",
    "the procedure is as follows : divide all the @xmath4 balls into @xmath0 groups , each group has @xmath7 , @xmath7 and @xmath8 balls , respectively .",
    "pick up the two groups that both have @xmath7 balls , and use the balance to determine if they have equal weights .",
    "if the answer is positive , pick the group with @xmath8 balls and divide it into @xmath0 groups again : @xmath9 ; otherwise , take the group that is lighter and divide it into three new groups , @xmath10 .",
    "one can continue this process until the lighter ball is found .    from the above example",
    ", we can see that the search space is reduced exponentially by using the balance , therefore the cost of searching the target ball is reduced exponentially . in the algorithm we proposed in this work , by constructing a tool that has similar property as the balance and applying the clauses of the boolean formula sequentially",
    ", the search space of the ec@xmath0 problem is reduced exponentially .",
    "the runtime of the algorithm is proportional to the number of clauses , therefore scales polynomial to the size of the problem .",
    "the ec@xmath0 problem on a quantum computer can be formulated as follows : the @xmath0-bit instance of satisfiability is a boolean formula with @xmath11 clauses @xmath12where each clause @xmath13 is true or false depending on the values of a subset of the @xmath1 bits , and each clause contains three bits .",
    "the clause is true if and only if one of the three bits is @xmath14 and the other two are @xmath15 .",
    "the task is to determine whether one  ( or more ) of the @xmath16 assignments satisfies all of the clauses , that is , makes formula  ( @xmath14 ) true , and find the assignment(s ) if it exists .",
    "let @xmath17 , @xmath18 and @xmath19 be the @xmath0 bits associated with clause @xmath20 , for each clause @xmath20 , we define a function @xmath21 the hamiltonian for clause @xmath20 is defined as @xmath22where @xmath23 is the @xmath24-th bit and has value @xmath15 or @xmath14 .",
    "if the ground state energy of the hamiltonian @xmath25 is zero , the ground state is a superposition of @xmath26 , where each bit string @xmath27 satisfies clause @xmath20 .",
    "the dimension of computational basis states  ( cbs ) @xmath26 is @xmath28 .",
    "a solution to the ec@xmath0 problem is a state which is a superposition of cbs that satisfies all of the clauses , the eigenvalue of the state is zero for every hamiltonian @xmath25 for all of the clauses .    in this algorithm",
    ", we prepare an equal superposition of all cbs of @xmath1 bits as initial state of the problem , and the clauses are applied in @xmath11 steps sequentially . in each step , the state that satisfies the corresponding clause is projected out from the previous state .",
    "this procedure is based on resonance phenomenon .",
    "the eigenstates of the hamiltonian @xmath25 for clause @xmath20 have eigenenergies of either @xmath15 or @xmath14 , the energy of the ground state of @xmath25 is @xmath15 if it is an equal superposition of basis states that satisfy the clause @xmath20 . for a probe qubit coupled to a system , the probe qubit exhibits dynamical response when it resonates with a transition in the system . the system can be guided to evolve to its ground state by inducing resonance between the probe qubit and a transition in the system  @xcite . based on this idea , we can obtain the ground state of @xmath25 with eigenvalue zero . a detailed procedure of the algorithm is as follows .",
    "we construct a quantum register @xmath29 of @xmath30 qubits , which contains one ancilla qubit and an @xmath1-qubit quantum register that represents the ec@xmath0 problem of dimension @xmath2 .",
    "a probe qubit is coupled to @xmath29 and the hamiltonian of the entire @xmath31-qubit system is @xmath32 where @xmath33 and @xmath34 are two- and @xmath2-dimensional identity operators , respectively , @xmath35 and @xmath36 are the pauli matrices .",
    "the first term in the above equation is the hamiltonian of the probe qubit , the second term is the hamiltonian of the register @xmath29 , and the third term describes the interaction between the probe qubit and @xmath29 . here",
    ", @xmath37 is the frequency of the probe qubit  ( @xmath38 ) , and @xmath39 is the coupling strength between the probe qubit and @xmath29 , and @xmath40 .",
    "the hamiltonian of @xmath29 is in the form@xmath41    we set the frequency of the probe qubit as @xmath42 , and let @xmath43 where @xmath44 are the cbs of the @xmath1 qubits .",
    "the procedure of the algorithm is as follows :    for @xmath45 :    @xmath46 prepare the probe qubit in its excited state @xmath47 and the register @xmath29 in state @xmath48 , which is the eigenstate of @xmath49 with eigenvalue @xmath50 .",
    "@xmath51 construct hamiltonian @xmath52 for clause @xmath53 , and hamiltonian @xmath54 of the algorithm as shown in eq .",
    "( @xmath55 ) .",
    "then implement time evolution operator @xmath56 on the @xmath57-qubit system .",
    "@xmath58 read out the state of the probe qubit by performing a measurement on the probe qubit in its computational basis .",
    "@xmath59 repeat steps",
    "@xmath60  @xmath58 until a decay of the probe qubit is observed , and run a purification procedure as described below .",
    "@xmath61 take the state of the last @xmath1 qubits obtained from step @xmath62 as input state of the problem @xmath63 .",
    "set @xmath64 , repeat steps @xmath65-@xmath66 , until run over all of the @xmath11 clauses .",
    "the state @xmath67 of the last @xmath1 qubits encodes the solution to the ec@xmath0 problem , that is , all assignments of the @xmath1 bits that satisfy all of the @xmath11 clauses . the quantum circuit for the @xmath68-th round of the algorithm is shown in fig .",
    "@xmath14 .",
    "the first line represents a probe qubit .",
    "@xmath69 is a time evolution operator driven by a hamiltonian in eq .",
    "( @xmath55 ) .",
    "the last @xmath1 qubits represent the ec@xmath0 problem . ]    in each round of the algorithm , the state in step @xmath66 of the algorithm can be purified to make it closer to the solution state of the round of the algorithm , that is , the eigenstate of the hamiltonian @xmath25 with eigenvalue @xmath15 , by performing partial measurements on the probe qubit  nakazato .",
    "this can be run on the circuit in fig .",
    "@xmath14 . in step @xmath66 of the @xmath70-th round of the algorithm ,",
    "when the measurement result on the probe qubit is in state @xmath71 , the state @xmath72 of the last @xmath1 qubits is set as the input state of the problem , and the clause hamiltonian is unchanged .",
    "the entire @xmath73-qubit system is set in an initial state of @xmath74 , and evolve with hamiltonian @xmath54 for time @xmath75 , then read out the state of the probe qubit by performing a measurement on the probe qubit .",
    "repeat these steps until a decay of the probe qubit to its ground state is observed .",
    "this procedure can be repeated to improve the amplitude of the solution state of the round of the algorithm , while compress the amplitude of non - solution state of the algorithm . in each round of the algorithm",
    ", the purification procedure can be repeated for a number of times until a total number of @xmath11 times of the measurements on the probe qubit are in its ground state @xmath71 .",
    "we now analyze the efficiency of the algorithm . in the first round of the algorithm , the eigenstate @xmath76 obtained from the algorithm",
    "is the ground state of the hamiltonian @xmath77 with eigenvalue @xmath15 , which is an equal superposition of all cbs that satisfy clause @xmath78 .",
    "the probability for obtaining the state @xmath79 is @xmath80 , where @xmath81 is the number of cbs that satisfy clause @xmath78 . in this round of the algorithm ,",
    "the state space of the problem is reduced to @xmath82 .    in the second round of the algorithm",
    ", we set the state @xmath83 as input state of the problem , construct hamiltonian @xmath84 for clause @xmath85 , and run the algorithm .",
    "the eigenstate @xmath86 of the hamiltonian @xmath84 with eigenvalue @xmath15 is projected out from the state @xmath79 that satisfies clause @xmath78 , therefore @xmath87 .",
    "the probability for obtaining state @xmath88 is the number of cbs that satisfy clauses @xmath89 .",
    "it depends on clause @xmath85 , and can be one of the three values of \\{@xmath90 } , which corresponds to the cases where clause @xmath85 has zero , one , or two bits same as clause @xmath91 . in the second round , the state space of the problem is reduced to @xmath92 .    in the third round of the algorithm ,",
    "the state @xmath86 is set as input state of the problem , the hamiltonian @xmath93 is constructed for clause @xmath94 .",
    "the eigenstate @xmath95 of the hamiltonian @xmath93 with eigenvalue @xmath15 can be projected out from the state @xmath86 . since the state @xmath86 satisfies clauses @xmath89 , the state @xmath95 is an equal superposition of basis states that satisfy clauses @xmath96 .",
    "the probability @xmath97 where @xmath98 is the number of cbs that satisfy clauses @xmath99 . in the following we discuss possible values of @xmath100 .",
    "we define a function @xmath101 , which gives the number of bits in clause @xmath102 that are same as that of in clause set \\{@xmath103 } and @xmath104 .",
    "the function @xmath101 can be @xmath105 , or @xmath106 .",
    "we now discuss the possible values of @xmath107 for obtaining the state @xmath108 from state @xmath109 when @xmath101 takes different values .",
    "it is obvious that @xmath110 when @xmath111 . for @xmath112 , the smallest value that @xmath113 can be is @xmath114 . in the case of @xmath115 ,",
    "the smallest value for @xmath116 is @xmath117 , while the next smallest value of @xmath118 . for @xmath119 , the smallest value of @xmath120 , and the next smallest value of @xmath121 .",
    "these estimations consider the maximal dimension of the state space that the bits in clause @xmath53 associated with the clauses in the clause set \\{@xmath103}.    from the above analysis , we can see that the smallest possible value of @xmath113 is @xmath15 , while the next smallest value of @xmath116 is finite .",
    "this means we can conclude whether the probability @xmath116 for obtaining the state @xmath108 is zero or not in finite number of trials in each round of the algorithm .    in the following ,",
    "we discuss the evolution time required for obtaining the eigenstate of a clause hamiltonian with eigenvalue @xmath15 in each round of the algorithm .",
    "we take the @xmath70-th round of the algorithm for obtaining state latexmath:[$%     in the @xmath70-th round , the input state of the problem is @xmath109 , in basis of \\{@xmath123 , @xmath124 } , where states @xmath125 and @xmath126 are the eigenstates of @xmath127 with eigenvalues @xmath15 and @xmath14 , respectively , @xmath128 are the cbs that satisfy clauses @xmath129 , and @xmath130 are the cbs that satisfy clauses @xmath131 but do not satisfy clause @xmath102 , the hamiltonian @xmath54 of the algorithm in eq .",
    "( @xmath55 ) can be written as @xmath132where @xmath107 .",
    "let @xmath133 , the schrdinger equation with the above hamiltonian can be solved exactly and @xmath134where @xmath135 are eigenvalues of the hamiltonian matrix in eq .",
    "( @xmath136 ) .",
    "when a decay of the probe qubit occurred , the state @xmath137 can be evolved to state @xmath138 with probability close to one at time @xmath139 , as long as @xmath116 is finite . as we have discussed above , @xmath116 is finite when @xmath140 . in fig .",
    "@xmath141 , by setting @xmath142 and @xmath143 , we show the variation of @xmath144 .",
    "the variation of @xmath145 with respect to evolution time @xmath146 is shown in fig .",
    "we can see that @xmath147 is very small and in most of the evolution time @xmath148 . by running the algorithm for different evolution time to obtain the decay dynamics of the probe qubit  @xcite",
    ", one can locate the optimal evolution time @xmath146 in which the decay probability of the probe qubit reaches its maximal value and latexmath:[$%    of the clause hamiltonian with eigenvalues of @xmath15 and @xmath14 , the probabilities of the system being in state @xmath138 and @xmath150 are @xmath151 and @xmath152 , respectively . by running the purification procedure ,",
    "the amplitude of the state @xmath138 can be greatly improved while the amplitude of the state @xmath150 can be compressed to be very small and close to zero in polynomial number of trials .",
    "this is analyzed in detail in the next section .",
    "and latexmath:[$%    @xmath70-th round of the algorithm , as @xmath154 and @xmath142 .",
    "the blue curve shows the results for @xmath155 , while the red dot curve shows the results for latexmath:[$%      vs. evolution time @xmath146 in the @xmath70-th round of the algorithm , as @xmath143 and @xmath142 . ]    in the case of @xmath120 , the hamiltonian @xmath54 in basis of @xmath157 can be written as @xmath158 . with the initial state",
    "being set as @xmath137 , the decay probability of the probe qubit is @xmath159 .",
    "it is very small for @xmath160 and oscillates between @xmath15 and @xmath161 .",
    "the dynamics of the probe qubit in this case can be well distinguished from that of the probe qubit in the resonance case  whf2 .    in the algorithm ,",
    "the total number of trials for executing the algorithm is proportional to the number of clauses @xmath11 as @xmath162 . and",
    "since @xmath116 is finite when @xmath140 , the amplitudes of the eigenstates that contain the solution to the problem can be amplified to close to unity in finite time by setting @xmath39 to be small but finite .",
    "the maximum number of clauses for an @xmath1-bit string is @xmath163 , in each round of the algorithm , the evolution time of the algorithm is finite when @xmath140 , and the case when @xmath120 can be determined in finite number of trials",
    ". therefore the runtime of the algorithm scales polynomial with the number of bits of the ec@xmath0 problem .",
    "the time evolution operator @xmath56 in the algorithm can be implemented efficiently through the trotter formula  nc on a quantum computer",
    ".    the cost of the algorithm will be different if we apply the clauses in different order .",
    "we use an @xmath164-bit ec@xmath0 problem as an example .",
    "the @xmath0-bit sets of the @xmath136 clauses @xmath165 are applied in the order of \\{@xmath166 } , \\{@xmath167 } , \\{@xmath168 } , \\{@xmath169 } , \\{@xmath170 } , and \\{@xmath171}. in this case , the corresponding probabilities of @xmath172 are \\{@xmath173 } , respectively .",
    "the solution to the ec@xmath0 problem is @xmath174 .",
    "if we set the order of the @xmath136 clauses as \\{@xmath167 } , \\{@xmath168 } , \\{@xmath170 } , \\{@xmath169 } , \\{@xmath175 } , and \\{@xmath166 } , the corresponding probabilities of @xmath176 are \\{@xmath177}. the cost of the algorithm is less in the second case .",
    "suppose in the @xmath70-th round of the algorithm , the probability of the system being in state @xmath150 is @xmath178 , and in state @xmath138  is @xmath179 , then the success probability of the algorithm is @xmath180 .",
    "this shows that the success probability of the algorithm can be very small when @xmath11 is large .",
    "fortunately , by running the purification procedure in each round of the algorithm , the state of the system can be purified to be very close to the solution state of the round of the algorithm , the error @xmath181 can be compressed to be very small such that the algorithm can still have high success probability .",
    "we now analyze the effect of the purification procedure in detail .",
    "we define a measurement as successful measurement  only if the measurement result on the probe qubit is in its ground state @xmath71 . in step @xmath66 of the @xmath70-th round of the algorithm , after a successful measurement on the probe qubit at evolution time @xmath139 , the entire system is collapsed to state @xmath182 , where @xmath183 .",
    "we take the state of the last @xmath1 qubits of the system as input state of the problem and run the purification procedure , the probability of the system being evolved to state @xmath138 , which is the solution state of the round of the algorithm , can be further improved .    from fig .",
    "@xmath141 and fig .",
    "@xmath0 , we can see that latexmath:[$|c_{1}^{\\prime } |\\gg    therefore in the purification procedure , we perform a measurement on the probe qubit after the system being evolved for time @xmath75 .",
    "this guarantees that both the decay probability of the probe qubit and the probability of the system being evolved to the solution state of the round of the algorithm is close to one .",
    "if the measurement result on the probe qubit is in state latexmath:[$%    unchanged .",
    "when a successful measurement is performed , the operation acts on the register @xmath29 is @xmath186 , this operator in general is a non - unitary operator . in step ( @xmath187 ) of the algorithm",
    ", we can repeat the purification procedure until @xmath11 successful measurements on the probe qubit are achieved , then the register @xmath29 is evolved to state @xmath188 ^{m}|0\\rangle |\\varphi _ { k}\\rangle $ ] . in basis of \\{@xmath189 is a two dimensional matrix whose eigenvalues @xmath190 and @xmath191 are discrete and non - degenerate and @xmath192 . in this process ,",
    "when @xmath11 is large , the state of the register @xmath29 converges to the eigenstate of @xmath193 with corresponding eigenvalue @xmath190  @xcite .",
    "we now estimate the effect of the operator @xmath194 acting on the register @xmath29 . in step ( @xmath187 ) of the algorithm , when the first successful measurement on the probe qubit is achieved , the probability of the system being in state @xmath138 is @xmath195 and @xmath196 , while the probability of the system being in state @xmath150 is @xmath197 and @xmath198 .",
    "then in the purification procedure , the input state of the algorithm is @xmath199 .    in basis of \\{@xmath200 , @xmath138 , @xmath201 } ,",
    "the hamiltonian of the algorithm is in the form @xmath202",
    "this purification procedure can be iterated for a number of times until @xmath11 successful measurements on the probe qubit are obtained . with the same initial state and evolution time @xmath203 ,",
    "as the parameter @xmath204 becomes larger , the probability of the system being evolved to state @xmath138 is larger  @xcite .",
    "therefore we have the following relation : @xmath205 , and @xmath206 , the converge speed to the state @xmath138 of the system is accelerated in the purification process .",
    "the first iteration provides the lowest transformation speed to state @xmath138 . from fig .",
    "@xmath141 and fig .",
    "@xmath0 , we can see that @xmath207 , where @xmath208 .",
    "based on this , we can conclude that after @xmath11 successful measurements on the probe qubit , the upper bound for the error ( the probability of the system being in state @xmath209 .",
    "the probability for the system being in state @xmath138 is @xmath210 . and unlike the approach in ref .",
    "@xcite , we do not require @xmath11 continuous successful measurements of the probe qubit in the purification process of this algorithm .",
    "the state that is to be purified is updated in each iteration of the purification procedure .",
    "therefore @xmath11 successful measurements on the probe qubit can be achieved in polynomial number of trials .    .",
    "]    we make a numerical estimation on the success probability of the algorithm . from fig .  @xmath141 and fig .",
    "@xmath0 , we can see that @xmath211 , then @xmath212 .",
    "after @xmath11 successful measurements on the probe qubit , the error in each round of the algorithm can be controlled to be smaller than @xmath213 .",
    "the success probability of the algorithm @xmath214 ^{m}$ ] . fig .",
    "@xmath55 shows the variation of the success probability of the algorithm @xmath215 vs. @xmath11 . from the figure",
    "we can see that the success probability of the algorithm converges quickly to one even after a few purification iterations .    in practice",
    ", the state in each round of the algorithm can be purified in a few iterations such that the state is very close to the solution state of the round of the algorithm , as in the example above , by setting @xmath142 , and @xmath216 , the errors are \\{@xmath217 } , for @xmath218 , respectively . from the expression @xmath219 , we can see that the algorithm can still have a high success probability as long as the error is compressed to a certain degree in each round of the algorithm , since the error decreased exponentially with the number of successful measurements .",
    "for example , the success probability of the algorithm can be @xmath220 , if the error in each round of the algorithm is controlled smaller than @xmath221 . in real implementation of the algorithm , a polynomial large success probability of the algorithm",
    "can be achieved by performing only a few iterations of the purification procedure in each round of the algorithm , e.g. , by performing only one successful measurement on the probe qubit , the error can be controlled to a degree that guarantees the success probability of the algorithm @xmath222 for @xmath223 clauses .",
    "for an @xmath1-bit ec@xmath0 problem , classically the probability @xmath224 for obtaining a solution to the problem is @xmath225 , where @xmath226 is the number of the assignments that satisfy all of the @xmath11 clauses according to the algorithm . in the algorithm , the probability @xmath224 is decomposed into @xmath11 steps @xmath227 , and each @xmath116 is finite . by applying the @xmath11 clauses sequentially , and using a non - unitary operator through introducing partial measurement , the state that satisfies all of the clauses",
    "is projected out step by step .",
    "the dimension of the search space of the problem is reduced exponentially in each round of the algorithm .",
    "this makes the run time of the algorithm scales linearly with the number of clauses , thus scales polynomial with the number of bits of the problem .    in each round of the algorithm , a state that satisfies the current clause and",
    "all of the clauses in previous rounds of the algorithm can be obtained with finite success probability .",
    "we introduce a purification procedure which is based on resonance and partial measurement to purify the solution state of each round of the algorithm , the error in each round of the algorithm decreases exponentially with the number successful measurements on the probe qubit .",
    "therefore the success probability of the algorithm can be polynomial large by compressing the error through the purification procedure , which can be can be achieved in finite number of trials .",
    "w.  van dam , m. mosca , and u. vazirani , in _ proceedings of the _ @xmath228__th ieee symposium on foundations of computer science _ _ ( _ focs _ _ 2001 _ )  ( ieee computer society , washington , dc , 2001 ) , p.  279 - 287 ."
  ],
  "abstract_text": [
    "<S> we present a multi - step quantum algorithm for solving the @xmath0-bit exact cover problem , which is one of the np - complete problems . </S>",
    "<S> unlike the brute force methods have been tried before , in this algorithm , we showed that by applying the clauses of the boolean formula sequentially and introducing non - unitary operations , the state that satisfies all of the clauses can be projected out from an equal superposition of all computational basis states step by step , and the search space is reduced exponentially . </S>",
    "<S> the runtime of the algorithm is proportional to the number of clauses , therefore scales polynomial to the size of the problem . </S>",
    "<S> our results indicate that quantum computers may be able to outperform classical computers in solving np - complete problems . </S>"
  ]
}
{
  "article_text": [
    "observations suggest that the present universe is populated by very large structures like galaxies , clusters of galaxies etc .",
    "current models for formation of these structures are based on the assumption that gravitational amplification of density perturbations resulted in the formation of large scale structures . in absence of analytical methods for computing quantities of interest ,",
    "numerical simulations are the only tool available for study of clustering in the non - linear regime .",
    "last two decades have seen a rapid development of techniques and computing power for cosmological simulations and the results of these simulations have provided valuable insight into the study of structure formation .",
    "the simplest n - body method that has been used for studying clustering of large scale structure is the particle mesh method ( pm hereafter ) . the genesis of this method is in the realisation that the poisson equation is an algebraic equation in fourier space , hence if we have a tool for switching to fourier space and back , we can calculate the gravitational potential and the force with very little effort .",
    "it has two elegant features in that it provides periodic boundary conditions by default , and the force is softened naturally so as to ensure collisionless evolution of the particle distribution .",
    "however , softening of force done at grid scale implies that the force resolution is very poor .",
    "this limits the dynamic range over which we can trust the results of the code between a few grid cells and about a quarter of the simulation box  ( bouchet and kandrup , 1985 ; bagla and padmanabhan , 1997 .",
    "many efforts have been made to get around this problem , mainly in the form of p@xmath0 m ( particle - particle particle mesh ) codes  ( efstathiou et al , 1985 ; couchman 1991 ) . in these codes , the force computed by the particle mesh part of the code is supplemented by adding the short range contribution of nearby particles , to improve force resolution .",
    "the main problem with this approach is that the particle - particle summation of the short range force takes a lot of time in highly clustered situations .",
    "another , more subtle problem is that the force computed using the pm method has anisotropies and errors in force at grid scale  these errors are still present in the force calculated by combining the pm force with short range corrections  ( bouchet and kandrup , 1985 ) .    a completely different approach to the problem of computing force",
    "are codes based on the tree method . in this approach",
    "we consider groups of particles at a large distance to be a single entity and compute the force due to the group rather than sum over individual particles .",
    "there are different ways of defining a group , but by far the most popular method is that due to barnes and hut  ( 1986 ) .",
    "applications of this method to cosmological simulations require including periodic boundary conditions .",
    "this has been done using ewald s method  ( ewald , 1921 ; rybicki , 1986 ; hernquist , bouchet and suto , 1991 ; springel , yoshida and white , 2001 ) .",
    "ewald s method is used to tabulate the correction to the force due to periodic boundary conditions .",
    "this correction term is stored on a grid ( in relative separation of a pair of particles ) and the interpolated value is added to the pairwise force .",
    "some attempts have been made to combine the high resolution of a tree code with the natural inclusion of periodic boundary conditions in a pm code by simply extending the p@xmath0 m method and replacing the particle - particle part for short range correction with a local tree  ( xu , 1995 ) .    in this paper",
    "we present a hybrid n - body method that attempts to combine the good features of the pm and the tree method , while avoiding the problems of the p@xmath0 m and the tpm methods .",
    "our approach is to divide force into long and short range components using partitioning of unity , instead of taking the pm force as given .",
    "this allows us greater control over errors , as we shall see below .",
    "the plan of the paper is as follows :  2 introduces the basic formalism of both the tree and pm codes .",
    " 2.3 gives the mathematical model for the treepm code .",
    "we analyse errors in force for the treepm code in  3",
    ". computational requirements of our implementation of the treepm code are discussed in  4 .",
    "a discussion of the relative merits of the treepm method with respect to other n - body methods follows in  5 .",
    "we use the approach followed by barnes and hut  ( 1986 ) . in this",
    ", the simulation volume is taken to be a cube .",
    "the tree structure is built out of cells and particles .",
    "cells may contain smaller cells ( subcells ) within them .",
    "subcells can have even smaller cells within them , or they can contain a particle .",
    "we start with the simulation volume and add particles to it .",
    "if two particles end up in the same subcell , the subcell is geometrically divided into smaller subcells until each subcell contains either subcells or at most one particle .",
    "the cubic simulation volume is the root cell . in three dimensions ,",
    "each cubic cell is divided into eight cubic subcells .",
    "cells , as structures , have attributes like total mass , location of centre of mass and pointers to subcells .",
    "particles , on the other hand have the traditional attributes like position , velocity and mass .",
    "more details can be found in the original paper  ( barnes and hut , 1986 ) .",
    "force on a particle is computed by adding contribution of other particles or of cells . a cell that is sufficiently far away",
    "can be considered as a single entity and we can just add the force due to the total mass contained in the cell from its centre of mass . if the cell is not sufficiently far away then we must consider its constituents , subcells and particles . whether a cell can be accepted as a single entity for force calculation is decided by the cell acceptance criterion ( cac ) .",
    "we compute the ratio of the size of the cell @xmath1 and the distance @xmath2 from the particle in question to its centre of mass and compare it with a threshold value @xmath3 the error in force increases with @xmath4 .",
    "there are some potentially serious problems associated with using @xmath5 , a discussion of these is given in salmon and warren  ( 1994 ) .",
    "one can also work with completely different definitions of the cac  ( salmon and warren , 1994 ; springel , yoshida and white , 2001 ) .",
    "irrespective of the criterion used , the number of terms that contribute to the force on a particle is much smaller than the total number of particles , and this is where a tree code gains in terms of speed over direct summation .",
    "we will use the barnes and hut tree code and we include periodic boundary conditions for computing the short range force of particles near the boundaries of the simulation cube . another change to the standard tree walk is that we do not consider cells that do not have any spatial overlap with the region within which the short range force is calculated .",
    "we also use an optimisation technique to speed up force calculation  ( barnes , 1990 ) .",
    "a pm code is the obvious choice for computing long range interactions .",
    "much has been written about the use of these in cosmological simulations ( e.g. , see hockney and eastwood , 1988 ) so we will not go into details here .",
    "pm codes solve for the gravitational potential in the fourier space .",
    "these use fast fourier transforms ( fft ) to compute fourier transforms , and as fft requires data to be defined on a regular grid the concept of mesh is introduced .",
    "the density field represented by particles is interpolated onto the mesh .",
    "poisson equation is solved in fourier space and an inverse transform gives the potential ( or force ) on the grid .",
    "this is then differentiated and interpolated to the position of each particle in order to calculate the displacements .",
    "use of a grid implies that forces are not accurate at the scale smaller than the grid cells .",
    "a discussion of errors in force in a pm code can be found in efstathiou et al  ( 1985 ) and elsewhere  ( bouchet and kandrup , 1985 ; bagla and padmanabhan , 1997 ) . the error in force can be very large at small scales but it drops to an acceptable number beyond a few grid cells , and is negligible at large scales .",
    "we use the cloud - in - cell weight function for interpolation .",
    "we solve the poisson equation using the natural kernel , @xmath6 ; this is called the poor man s poisson solver  ( hockney and eastwood , 1988 ) .",
    "we compute the gradient of the potential in fourier space .",
    "we now turn to the question of combining the tree and the pm code .",
    "we wish to split the inverse square force into a long range force and a short range force .",
    "the gravitational potential can be split into two parts in fourier space  ( ewald , 1921 ) .",
    "@xmath7 where @xmath8 and @xmath9 are the long range and the short range potentials , respectively .",
    "the splitting is done at the scale @xmath10 .",
    "@xmath11 is the gravitational coupling constant and @xmath12 is density .",
    "the expression for the short range force in real space is : @xmath13 here , @xmath14 is the complementary error function .",
    "these equations describe the mathematical model for force in the treepm code .",
    "the long range potential is computed in the fourier space , just as in a pm code , but using eqn.([longr ] ) instead of eqn.([pm_std ] ) .",
    "this potential is then used to compute the long range force .",
    "the short range force is computed directly in real space using eqn.([fshort ] ) . in the treepm method",
    "this is computed using the tree approximation .",
    "the short range force falls rapidly at scales @xmath15 , and hence we need to take this into account only in a small region around each particle .",
    "= 4truein    we have plotted the long range and the short range force ( eqn.([fshort ] ) ) as a function of @xmath2 in fig.1 to show their dependence on scale .",
    "we have chosen @xmath16 here .",
    "the short range force closely follows the total force up to about @xmath17 and then falls rapidly , its magnitude falls below @xmath18 of the total force by @xmath19 .",
    "the long range force reaches a peak around @xmath17 .",
    "it makes up most of the total force beyond @xmath20 .",
    "it falls with scale below @xmath17 , becoming negligible below @xmath21 .",
    "evaluation of special functions for calculating the short range force can be time consuming . to save time , we compute an array containing the magnitude of the short range force .",
    "the force between any two objects , particle - cell or particle - particle , is computed by linearly interpolating between the nearby array elements multiplied by the unit vector @xmath22 .",
    "it is necessary for the array to sample the force at sufficiently closely spaced values of @xmath2 in order to keep error in interpolation small .",
    "in this section we will study errors in force introduced by various components of the treepm code .",
    "we will only list salient points here and the reader is referred to a more comprehensive study for details  ( bagla and ray , 2002 ) .",
    "we start by estimating the error in force due to one particle .",
    "the long range force of a particle is calculated using the pm method , but using eqn.([longr ] ) instead of eqn.([pm_std ] ) .",
    "the cutoff at high wave numbers largely removes the effect of the grid and we find that the dispersion in the long range force is very small , e.g. for @xmath23 grid length the dispersion is smaller than @xmath18 of the total force at all scales .",
    "there is a systematic offset in the long range force that is larger than the dispersion .",
    "this offset is induced by the interpolating function , and can be corrected  ( white , 2000 ; bagla and ray , 2002 ) by de - convolving the square of the interpolating function ( we need to interpolate twice )",
    ". this deconvolution does not affect the dispersion in any significant manner .",
    "there are no errors in computing the short range force for one particle , hence the only source of errors is in the calculation of the long range force in this case .",
    "all the errors arise due to anisotropies in the long range force .",
    "the errors in the long range force increase as we approach small scales , but the contribution of the long range force to the total force falls sharply below @xmath24 and hence the errors also drop rapidly .",
    "there is a peak in errors around @xmath24@xmath25 , and for @xmath16 maximum rms error in force of one particle is @xmath18 of the total force .    in calculating the total force",
    ", we added the short range force to the long range force at all scales .",
    "however , this is not necessary as beyond some scale , the contribution of small scale force to the total force drops to a negligible fraction of the total force .",
    "we will call the scale upto which we add the small scale force as @xmath26 .",
    "the short range force is just below @xmath18 of the total force at @xmath27 .",
    "we choose this value of @xmath26 for the treepm code .",
    "= 4truein    the other source of error is the tree approximation that we use for computing the short range force .",
    "the first correction term is due to the quadrapole moment of the particle distribution in the cell , however the magnitude of this error is larger than in the inverse square force due to a more rapid variation in force with distance . in the worst case",
    ", this error can be more than twice the error in the corresponding case of inverse square force  ( bagla and ray , 2002 ) . in more generic cases , errors due to this effect tend to cancel out and",
    "the net error is small .",
    "apart from this effect , there is also a dispersion introduced by the tree approximation .",
    "the magnitude of this dispersion varies monotonically with @xmath4 .",
    "one factor that we have to weigh in is that the execution time is small for large @xmath4 and small @xmath26 . given these considerations , the obvious solution is to choose the smallest @xmath10 and the largest @xmath4 that gives us a sufficiently accurate force field .",
    "it is important to estimate the errors in a realistic situation , even though we do not expect errors to add up coherently in most situations .",
    "we test errors for two distributions of particles : a homogeneous distribution and a clumpy distribution . for the homogeneous distribution ,",
    "we use randomly distributed particles in a box .",
    "we use @xmath28 particles in a @xmath29 box for this distribution .",
    "we compute the force using a reference setup ( @xmath30 , @xmath31 , @xmath32 ) and the setup we wish to test ( @xmath16 , @xmath33 , @xmath34 ) .",
    "it can be shown that the errors in the reference setup are well below @xmath35 for the entire range of scales  ( bagla and ray , 2002 ) .",
    "we compute the fractional error in force acting on each particle , this is defined as , @xmath36 fig.2 shows the cumulative distribution of fractional errors .",
    "the curves show the fraction of particles with error greater than @xmath37 .",
    "the thick line shows this for the homogeneous distribution .",
    "error @xmath37 for @xmath38 of particles is less than @xmath39 .",
    "results for the clumpy distribution of particles are shown by the dashed line .",
    "we used the output of a cdm simulation ( fig.3a ) run with the treepm code .",
    "errors in this case are much smaller , as compared to the homogeneous distribution , as in the case of tree code  ( hernquist , bouchet and suto , 1991 ) .",
    "error @xmath37 for @xmath38 of particles is around @xmath40 , as compared to @xmath39 for the homogeneous distribution .",
    "= 3.2truein = 3.2truein    there are two noteworthy features of this figure .",
    "one is that the error for the homogeneous distribution is higher .",
    "the main reason for this is similar to that in tree codes , though the effect is much smaller here .",
    "when we are dealing with a homogeneous distribution , the total force on each particle is very small because forces due to nearly identical mass distributions on opposite sides cancel out .",
    "this near cancellation of large numbers gives rise to errors that decrease as the net result of these cancellations grows . in a tree code",
    ", we calculate the force due to all the particles in the simulation box whereas in the treepm method we add up the contribution of only those within a sphere of radius @xmath26 .",
    "this is the reason for the difference in these two curves being much less pronounced than the corresponding curves for the tree code  ( hernquist , bouchet and suto , 1991 ) .",
    "the other feature is that the shape of the curves for the homogeneous distribution and the clumpy distribution is different .",
    "this is because we begin to see the effect of the error due to tree approximation in case of clumpy distribution . in case of the homogeneous distribution",
    ", the distribution of particles is close to isotropic around any given particle and hence the error cancels out .",
    "this error can be controlled by reducing @xmath4 .",
    "we end this section with a brief comparison of the treepm code with a pm code .",
    "we ran a simulation of the scdm model ( @xmath28 particles , @xmath41h@xmath42mpc box ) with a pm code ( bagla and padmanabhan , 1997 ) and with the treepm code discussed here .",
    "fig.3 shows a slice from these simulations ; fig.3a shows the simulation with the treepm code and fig.3b shows the same for a pm code .",
    "the large scale structures are the same in the two but there are significant differences at small scales .",
    "the halos are much more compact in the treepm simulation , and large halos show more substructure .",
    "these differences are also clear in the two point correlation function @xmath43 plotted in fig.4 .",
    "the thick line shows the correlation from the treepm simulation and the dashed line shows the same for the pm simulation . as expected from fig.3 and from general considerations , the correlation function in the treepm simulation matches with that from the pm simulation at large scales , but at small scales , the treepm simulation has a higher correlation function .",
    "= 4truein    we have checked the accuracy of evolution by checking the rate of growth for the correlation function in the linear regime and also by looking for scale invariance of the correlation function for power law models . for more details",
    "please see  ( bagla and ray , 2002 ) .",
    "in this section , we describe the computational resources required for the present implementation of the treepm code . given that we have combined the tree and the pm code , the memory requirement is obviously greater than that for either one code .",
    "we need four arrays for the pm part , the potential and the force .",
    "the rest is exactly the same as a standard barnes and hut tree code . with efficient memory management ,",
    "we need less than @xmath44 mb of ram for a simulation with @xmath45 particles in a @xmath45 mesh for most part . in absence of memory management",
    ", this requirement can go up to 250 mb .",
    "these are the numbers for floating point numbers , if we use double precision variables then this requirement goes up by a factor of two .",
    ".time taken by the code , per time step per particle .",
    "column  1 lists the number of particles .",
    "column  2 , 3 , 4 and 5 list the time taken ( per time step per particle ) by the treepm code for an unclustered and a clustered particle distribution .",
    "column  6 lists the same number for a tree code for an unclustered distribution of particles .",
    "all the times are in milli  seconds .",
    "[ cols= \" < , < , < , < , <",
    ", < \" , ]     table 1 lists the time required per time step per particle for three values of the number of particles . these were run on a 533mhz alpha workstation ( ev5 ) and compiled with the native f90 compiler , a @xmath46ghz pentium iii desktop or a @xmath47ghz p-4 and compiled with the intel f90 compiler .",
    "column  1 lists the number of particles and col.2 , 3 and 4 list the time per step per particle for an unclustered distribution .",
    "this number increases much slower than the total number of particles , as expected from the theoretical scaling of @xmath48 .",
    "column 5 of table gives the same number for a highly clustered particle distribution , similar in clustering strength to that shown in fig.3 .",
    "column  6 lists the time per step per particle taken by the tree code for the particle distribution used in col.4 .",
    "it is clear that the treepm code is faster than the tree code by a factor of about @xmath49 .",
    "it is also clear that this code performs well even on inexpensive hardware .",
    "the performance of this code can be improved further by including features like individual time steps for particles .",
    "it is expected that adding individual time steps will improve the performance by a factor of two or more .",
    "amongst other codes that try to augment the performance of pm codes are the p@xmath0 m  ( efstathiou et al , 1985 ; couchman , 1991 ) codes and the tpm code  ( xu , 1995 ) .",
    "following subsections compare treepm with these codes .",
    "there are two main differences between p@xmath0 m codes  ( efstathiou et al , 1985 ; couchman , 1991 ) and the treepm code presented here .",
    "one is that most p@xmath0 m codes use the natural cutoff provided by the grid for the long range force , i.e. these take the pm force to be the long range force .",
    "hence errors in the pm force are present in the p@xmath0 m force .",
    "in contrast , the treepm code uses an explicit cutoff that allows us to limit errors near the grid scale .",
    "the second difference is in terms of the time taken for the adding the short range correction as a function of clustering . in both instances ,",
    "the short range force is added for particles within a fixed radius @xmath26 .",
    "this process is of order @xmath50 for the p@xmath0 m method , where @xmath51 is the number of particles in the simulation , @xmath52 is the number density of particles and @xmath53 is the average number of excess particles around a particle , here excess is measured compared to a homogeneous distribution of particles with the same number density . at early times",
    "this reduces to @xmath54 , but at late times , when the density field has become highly non - linear ( @xmath55 ) , it becomes @xmath56 . as the density field becomes more and more clumpy , the number of operations required for computing the short range force increase rapidly .",
    "this is to be compared with the number of operations required for adding the short range correction in the treepm code : @xmath57 .",
    "the linear and the non - linear limits of this expression are @xmath58 and @xmath59 , respectively .",
    "thus the variation in the number of operations with increase in clustering is much less for treepm code than a p@xmath0 m code .",
    "the problem is not as severe as outlined for the adaptive p@xmath0 m code  ( couchman , 1991 ) but it still persists .",
    "therefore the treepm code has a clear advantage over the p@xmath0 m and ap@xmath0 m code for simulations of models where @xmath53 is very large .    in turn",
    ", p@xmath0 m codes have one significant advantage over treepm , these require much less memory .",
    "this gives p@xmath0 m codes an advantage on small machines and for simulations of models where @xmath53 is not much larger than unity .",
    "before we go into the differences between the treepm and tpm methods , we would like to summarise the tpm method  ( xu , 1995 ) here .",
    "the tpm method is an extension of the p@xmath0 m method in that the pm force is taken to be the long range force and a short range force is added to it .",
    "tree method is used for adding the short range correction instead of the particle - particle method .",
    "there are some further differences , e.g. correction is added only for particles in high density regions implying that the resolution is non - uniform . at each time step , high density regions are identified and a local tree is constructed in each of these regions for computing the short range correction .",
    "thus , there are two clear differences between the treepm and the tpm method :    * the tpm code uses the usual pm force to describe the long range component .",
    "in contrast , the treepm code uses an explicit cutoff ( @xmath10 ) .",
    "* treepm treats all the particles on an equal footing , we compute the short range ( eqn([fshort ] ) ) and the long range force for each particle . in the tpm code ,",
    "the short range force is computed only for particles in the high density regions .",
    "preceeding sections show that we have developed a new method for doing cosmological n - body simulations with a clean mathematical model .",
    "the model splits force into long and short range forces using a parameter @xmath10 . by choosing this parameter judiciously , in conjunction with two other parameters that arise in the implementation of this model ( @xmath26 and @xmath4 ) we can obtain a configuration that matches our requirements for the error budget .",
    "it is possible to devise a more complex scheme for splitting the force into two parts but the one we have chosen seems to be the optimal scheme from the point of view of errors in force calculation as well as cpu time  ( bagla and ray , 2002 ) .",
    "apart from improving control over errors , the treepm code also leads to a significant gain in speed over the traditional tree code .",
    "treepm code is also amenable to parallelisation along the lines of  ( dubinski , 1996 ) , and is likely to scale well because the communication overhead is much more limited .",
    "work in this direction is in progress and will be reported elsewhere  ( bagla , 2002 ) .",
    "i would like to thank rupert croft , lars hernquist , suryadeep ray , volker springel and martin white for insightful comments and discussions .",
    "part of the work reported in this paper was done while the author was at the harvard - smithsonian center for astrophysics ."
  ],
  "abstract_text": [
    "<S> we describe the treepm method for carrying out large n - body simulations to study formation and evolution of the large scale structure in the universe . </S>",
    "<S> this method is a combination of barnes and hut tree code and particle - mesh code . </S>",
    "<S> it combines the automatic inclusion of periodic boundary conditions of pm simulations with the high resolution of tree codes . </S>",
    "<S> this is done by splitting the gravitational force into a short range and a long range component . </S>",
    "<S> we describe the splitting of force between these two parts . </S>",
    "<S> we outline the key differences between treepm and some other n - body methods .    </S>",
    "<S> [ firstpage ]    gravitation , methods : numerical , cosmology : large scale structure of the universe </S>"
  ]
}
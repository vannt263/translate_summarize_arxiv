{
  "article_text": [
    "partial differential equations on evolving surfaces with a _ given velocity _",
    "@xmath0 have been discretized using a huge variety of methods .",
    "probably one of the most popular is the evolving surface finite element method developed by dziuk and elliott in @xcite .    as it was pointed out by dziuk and elliott early on ( see , ( * ? ?",
    "* section 7.2 ) ) : _  a drawback of our method is the possibility of degenerating grids .",
    "the prescribed velocity may lead to the effect , that the triangulation @xmath1 is distorted_. the same issue occurs for problems in moving domains .    in recent years",
    "this problem have been theoretically overcome in a couple of ways :    * _ arbitrary lagrangian eulerian _ ( ale ) maps for moving domains have been studied many times in the literature , see for instance @xcite and @xcite , and the references therein . *",
    "the ale version of the evolving surface finite element method have been proposed by elliott and styles in @xcite . * elliott and fritz @xcite constructed meshes with very good properties using the quite technical _",
    "deturck trick_.    by the evolving surface ale approach of @xcite a better triangulation is obtained by using an arbitrary lagrangian eulerian map , or equivalently , allowing the nodes of the mesh to evolve with a velocity which has an additional tangential component compared to the ( pure normal ) surface velocity .",
    "here we propose an algorithm to compute such an arbitrary lagrangian eulerian map .",
    "many experiments have been presented in the above references , especially see @xcite , where smaller discretization errors have been obtained by solving evolving surface problems on ale meshes .",
    "the ale maps used in these experiments were obtained from an _ a priori knowledge _ on the surface and its evolution , using deep understanding and structure of the signed distance function ( which defines the surface ) .",
    "the numerical analysis of the ale evolving surface finite element method has been carried out in @xcite and @xcite .",
    "ale maps for surfaces with boundary could be computed numerically based on the ideas for moving domain problems .",
    "see for example : ( * ? ? ?",
    "* section  2.4 ) , where ale maps are obtained by solving a parabolic problem , or the corresponding stationary problem ; or @xcite , where an elastodynamic equation system is solved for the moving domain . for these approaches",
    "the evolution of the boundary needs to be _ a priori known_. hence , such approaches can not be applied to closed surfaces .",
    "in fact , to determine such a boundary evolution is equivalent to finding an ale map for a lower dimensional closed surface , which is the same problem as before .    for non - ale methods it is usual that nodes disappear and/or",
    "new nodes are added to the mesh ( see , e.g.  ( * ? ? ?",
    "* figure  14 ) ) . from a theoretical point of view",
    "this seems a minor issue , however from the implementation side this is undesirable , since then a map , between the old and the new mesh , has to be computed after each remeshing process . in most cases",
    "this is a nontrivial and costly task , and hence , should be avoided .    the numerical computation of a good ale map , _ without any a priori knowledge _ , yet using simple ideas , still remained elusive .    in the present paper",
    "we propose a simple idea , based on a mechanical system of springs , to compute a suitable ale map for meshes of closed evolving surfaces .",
    "the algorithm is based on the following idea : the ale map for a possibly degenerated mesh is determined by a simple mechanical system , where the nodes are connected along the edges by springs , while they are allowed to slide along the surface .",
    "the equilibrium state of the spring system defines the ale map and directly gives the new mesh .",
    "this equilibrium is found by numerically solving the corresponding differential algebraic system .",
    "the algorithm is free of any a priori knowledge in the following sense : the algorithm uses the distance function at each time , but it does not use its structure or any other special properties of it , unlike the ale maps from the literature .",
    "we note here that probably the use of the distance function can be also avoided .    in the case of moving domain problems : the resulting algorithm could be used to compute the evolution of the boundary , and then use the classical ideas for moving domains proposed in @xcite .    during the compilation of this paper",
    ", we discovered that the widely used meshing program distmesh of strang and persson @xcite works exactly along the same idea .",
    "as strang and persson encourage their users to _  [ ... ] modify the code according to their needs  _ , we indeed modified distmesh to suit our purposes .",
    "in particular , we do not add or delete nodes ( which is essential in distmesh for the meshing ) , furthermore we compute the desired spring length in a different way ( distmesh having a rule which fits better with the possibility to delete nodes and also with the startup of their process ) .",
    "we give some further details on possible extensions of the proposed algorithm : to handle other mesh properties ( e.g.  acuteness ) , improve robustness , decrease computational time .",
    "we present various numerical experiments illustrating the performance of the proposed algorithm compared to the ale maps given in the literature .",
    "as our main motivation lies in the numerical solution of parabolic pdes on evolving surfaces we shortly recap the setting of @xcite . we will also use this setting as an illustrative background to the proposed algorithm .",
    "let @xmath2 , @xmath3 , be a smooth evolving closed hypersurface .",
    "further , let the evolution of the surface given by the smooth velocity @xmath0 .",
    "let @xmath4 denote the material derivative of @xmath5 , the tangential gradient is denoted by @xmath6 and given by @xmath7 , with unit outward normal @xmath8 .",
    "we denote by @xmath9 the laplace  beltrami operator .",
    "we consider the following linear evolving surface pde : @xmath10 basic and detailed references on evolving surface pdes and evolving surface finite elements are @xcite and @xcite .",
    "in addition a detailed description of the ale version of the evolving surface finite element method can be found in @xcite .",
    "the evolving surface is usually represented in two ways .    * distance function representation . * based on a signed distance function the evolving @xmath11-dimensional closed surface @xmath12 is given by @xmath13 cf .",
    ".    * diffeomorphic parametrization . * the surface can also be described by a diffeomorphic parametrization , cf .",
    "@xcite and @xcite .",
    "we consider the evolving @xmath11-dimensional closed surface @xmath12 as the image @xmath14 of a sufficiently regular vector - valued function @xmath15\\to { \\mathbb{r}}^{m+1}$ ] , where @xmath16 is the smooth closed initial surface , and @xmath17 .",
    "it is convenient to think of @xmath18 as the position at time @xmath19 of a moving particle with label @xmath20 , and of @xmath21 as a collection of such particles .",
    "the _ velocity _",
    "@xmath22 at a point @xmath23 equals @xmath24 note that for a known velocity field @xmath0 , the position @xmath18 at time @xmath19 of the particle with label @xmath20 is obtained by solving the ordinary differential equation from @xmath25 to @xmath19 for a fixed @xmath20 .",
    "let @xmath26 be any other parametrization of @xmath27 , called an _ arbitrary lagrangian eulerian map _ ( ale map ) .",
    "the associated velocity is denoted by @xmath28 , which we refer as the _ ale velocity_.      the smooth initial surface @xmath29 is approximated by a triangulated surface @xmath30 , i.e.  an admissible family of triangulations @xmath31 of maximal element diameter @xmath32 ; see @xcite for the notion of an admissible triangulation , which includes quasi - uniformity .",
    "let @xmath33 , ( @xmath34 ) denote the nodes of @xmath30 lying on the initial smooth surface @xmath29 .",
    "the nodes will be evolved in time with the given normal velocity @xmath0 , by solving the ode ( cf .   for the nodes ) : @xmath35 obviously , the nodes remain on the surface @xmath36 for all times .",
    "therefore , the smooth surface @xmath36 is also approximated by a discrete surface @xmath37 , whose elements also form a triangulation @xmath38 .",
    "we have @xmath39    as already mentioned in the introduction , it is reasonable to assume that the surface does not develop topological changes due to the evolution , the assumption on quasi - uniformity , i.e.  there is a @xmath40 ( independent of @xmath19 ) such that for any triangle @xmath41 the radius of the inscribed circle @xmath42 satisfies @xmath43 for @xmath44 is generally not always satisfied .    as an example , from @xcite , for degenerating surface evolution , we evolved a surface using the ode .",
    "as observed in figure  [ figure : example ] : however the initial mesh ( left ) has nice regularity , the meshes at later times ( middle and right ) do not preserve these good mesh qualities . both quite bad surface resolution and",
    "unnecessarily fine elements occur .    ;",
    "@xcite , title=\"fig : \" ] ; cf .",
    "@xcite , title=\"fig : \" ] ; cf .",
    "@xcite , title=\"fig : \" ] +",
    "we now propose an algorithm which will be used to determine a suitable ale map which improves the mesh quality during the surface evolution .    the ale map is determined based on a simple mechanical system of springs , where the nodes are allowed the slide on the surface , while they are connected along the edges by springs .",
    "the equilibrium state of the spring system defines the new mesh and therefore gives the ale map .",
    "as already pointed out in the introduction , this is a similar idea as the one behind distmesh @xcite , however , our algorithm has significant differences compared to distmesh .",
    "let us fix a time @xmath45 $ ] , and for the ease of presentation drop the omnipresent argument @xmath19 , whenever it is clear from the context .",
    "the surface approximation mesh @xmath46 is given through its nodes @xmath47 . by the construction in section  [ section : surface approximation ] each node sits on the exact surface , i.e.  they satisfy @xmath48    we substitute the grid with a _ spring system _ such that the nodes @xmath49 are allowed to slide on the exact surface @xmath50 ( but not allowed to leave it , therefore a constrained is introduced ) and they are connected by springs following the edges of the elements , i.e.  the topology is determined by the triangulation @xmath46 .",
    "the new positions of the nodes are determined by finding a force equilibrium of this mechanical system .",
    "the mesh properties can be improved by carefully choosing the equilibrial spring lengths . here",
    "we will aim at equidistributing the nodes .",
    "the above mechanical system can be written as differential algebraic equation system ( dae system ) for the vector @xmath51 collecting the nodes , for the artificial time @xmath52 , @xmath53 with initial value @xmath54 , and where @xmath55 is a function describing the force relations of the mechanical spring system , while the function @xmath56 represents the constraint .",
    "the new positions of the nodes @xmath57 are given by integrating the system over the artificial time interval @xmath58 $ ] .",
    "the force function can be chosen in many ways , however our main idea is that the mesh is close to the equilibra and that in the equilibrium state most of the springs ( edges ) have almost the same length , and the triangles are close to regular triangles .",
    "we propose definitions to @xmath55 , in such a way that initially the springs over long edges are stretched , short ones are compressed , while springs with average lengths are in , or close to , equilibrium .    since it is easier to define @xmath55 based on the edges .",
    "the net force for each node can be calculated based on the connectivity ( described by the elements ) and by the forces @xmath59 over the edges . here",
    "@xmath60 is the desired length of the spring ( or edge ) @xmath61 , with current length @xmath62 , while @xmath63 is the spring constant ( which we set to @xmath64 for simplicity ) .",
    "we use the following length function @xmath65 other length functions can be also used , for instance the @xmath66 version of @xmath67 , or more complicated functions , such as the analogue of @xmath67 with more steps .    in practice",
    "the equilibrium is found by solving the dae system over a large artificial time interval by a suitable time integrator .",
    "for this purpose we use the classical @xmath68-stage runge  kutta method .",
    "we choose this method , since being explicit it is rather cheap , having only four right - hand side evaluations per step , but still have high - order .",
    "however , implicit methods have better stability properties , we suggest avoiding them since they require solving a nonlinear system for @xmath69 in each time step . according to our experience , a quite good mesh can be achieved by a couple of dozen steps with a quite large stepsize .",
    "we also note , here that the original distmesh code uses the explicit euler method . in general for time discretization of daes we refer to ( * ? ? ?",
    "* chapter  vi . ) .",
    "the process described in the above section is used to compute ale maps for evolving surfaces . after the initial surface approximation is determined it is evolved by the given surface velocity @xmath0 , by solving the corresponding ode for the nodes . in each time step , after evolving the surface to the next time step , the ale map is calculated using the mechanical spring system , by solving the dae on a sufficiently large artificial time interval .",
    "the algorithm sketched above can be summarized in the following four steps .",
    "* algorithm  1 .",
    "*    1 .   construct the initial triangulation @xmath30 .",
    "2 .   assuming that the discrete surface at time @xmath70 is given . evolve the nodes of @xmath71 with the known velocity @xmath0 , using a high - order time integrator over the time interval @xmath72 $ ] , to obtain @xmath73 .",
    "3 .   calculate the ale map based on the algorithm described in the previous section based on solving the dae system using the length function , with initial value @xmath73 , over a fictious time interval .",
    "the newly obtained nodes form the discrete surface @xmath74 at time @xmath75 .",
    "+ goto ( 1 ) .",
    "note that the function distance function @xmath76 is simply used as a black - box tool , no structural , or any other type of information is used about @xmath76 .",
    "we make some further remarks on the algorithm described above .",
    "if a parabolic pde is numerically solved on the discrete surface @xmath77 then the matrices are assembled after step ( 2 ) , using the ale scheme , cf .",
    "* ( 4.3 ) and ( 4.4 ) ) or ( * ? ? ?",
    "* ( 3.5 ) and ( 3.6 ) ) .",
    "the tangential vector appearing in the formulas is simply obtained by subtracting the nodes of the discrete surfaces @xmath74 and @xmath73 .",
    "the algorithm clearly uses the surface velocity @xmath0 in step ( 1 ) , in the exact same way as for the purely lagrangian esfem algorithms : only to evolve the surface .",
    "however , in step ( 3 ) the distance function is used , which is avoided by the standard esfem method .",
    "it is usual to use the same time discretization method in ( 1 ) as for the time integration of the parabolic pde on the surface .",
    "this time discretization scheme could be also used to solve the dae system in step ( 2 ) .",
    "in a couple of recent works discrete maximum principles ( dmps ) have been studied for surface problems discretized by surface finite elements , see @xcite and @xcite .",
    "it is well known that _",
    "acute _ or _ nonobtuse _ meshes are required for the dmp even for flat domains , and also for triangulated surface meshes . in general the meshes generated by usual algorithms ( for instance distmesh @xcite , the grid generators of dune @xcite , etc . )",
    "are not necessarily satisfy these angle conditions .",
    "the algorithm proposed here can be modified in such a way that the resulting mesh is acute or nonobtuse . in practice",
    "the force function @xmath55 ( appearing in ) is obtained not only based on the length function , but also on an _ angle function _ , which does not allow angles approaching a user given tolerance @xmath78 .",
    "this can be viewed as three cords added to a triangle at each angle , which does not allow the angles expand above the specified angle @xmath78 .",
    "naturally , not every initial mesh will lead to an acute triangulation by this process .",
    "the usage of the distance function could also be completely avoided . by calculating @xmath79 , an approximation of @xmath80 based on the nodes obtained in step ( i ) of algorithm  1 .",
    "such an approximation can be obtained by a a suitable interpolation process over the nodes of @xmath73 .",
    "for instance obtained by a spline interpolation over the nodes , this problem appears to be well studied in the computer science literature , see for instance @xcite and the references therein",
    ".    this approach can be useful also in cases where the surface evolution is coupled to the problem on the surface , such as @xcite , or @xcite .",
    "we note here that in the case of such a modified algorithm the nodes @xmath81 no longer stay on the surface for all times .",
    "therefore , the spatial convergence results of @xcite do not hold .",
    "however , in order to show convergence results the approach of @xcite  using three surfaces : the exact surface , its interpolation and the discrete surface  can be used here .",
    "the robustness of algorithm  1 can be increased by building in some mesh quality test while performing the time integration in step ( 2 ) . in this case",
    "the following algorithm could be realized  assuming a fast implementation of the mesh quality tester . in step",
    "( 2 ) of algorithm  1 : first test the quality of the mesh . if the mesh is good , accept it ; else perform a timestep solving the dae , and then repeat .",
    "( the process should be terminated if the number of timesteps reaches a user given upper limit . )",
    "such an approach could altogether speed up algorithm  1 , as the numerical solution of the dae system is avoided for already good meshes , whereas the computational overhead due to the mesh quality test is negligable .",
    "later on we will give some possible mesh quality measures , but it can be anything suitable specified by the user .      to decrease computational cost of algorithm  1 , one may perform step ( 2 ) only locally . since in most cases",
    "the evolution of the discrete surface distorts the mesh only locally , one could apply our algorithm on those patches which consist of ill shaped triangles , ( e.g.  those with too small or large angles ) , and additionally a few layers of neighbouring elements , the rest of the nodes are not moved .",
    "now we will present some numerical experiments illustrating the performance of algorithm  1 , with the spring system , compared to the pure normal evolution of the surface and to ale maps given in the literature .",
    "these examples have been used many times previously , see for instance @xcite and the references therein . through these literature ale maps",
    "it will be also clarified further what was meant under _ a priori knowledge _ in the introduction .",
    "in step ( 2 ) for the time integration of we use the classical 4-stage runge  kutta method , over the artificial time interval @xmath82 $ ] , with @xmath83 time steps , with the value @xmath84 in .",
    "let the closed surface @xmath85 given by the zero level set of the distance function @xmath86 here the functions @xmath87 , @xmath88 and @xmath89 are given by @xmath90 the normal velocity @xmath0 describes the surface evolution by the odes : @xmath91 for @xmath92 , where the surface velocity in @xmath93 is given by @xmath94    finally , the ale map from the literature is given by @xmath95 for every @xmath96 $ ] , for @xmath97 , as suggested in @xcite .",
    "this map clearly uses the a priori knowledge on the structure of the distance function .    in figure",
    "[ figure : e - s evolutions ] the discrete initial surface @xmath30 is evolved over @xmath98 $ ] by three different methods .",
    "firstly , plotted on the left - hand side , the purely normal surface evolution obtained by solving the ode system .",
    "we have used here the explicit euler method , with step size @xmath99 . although , this method is clearly not the best choice , we used it in order to illustrate the performance of the proposed ale algorithm .",
    "secondly , plotted in the middle , the ale map proposed in the literature , cf .",
    "@xcite , based on the structure of the distance function .",
    "finally , plotted on the right - hand side , the spring ale map obtained by algorithm 1 .",
    "the evolution and the ale map is computed exactly as described in section  [ section : ale map for evolving surfaces ] .",
    "the surface is again evolved by the explicit euler method , with @xmath99 , while the dae for the spring system is solved over the artificial time interval @xmath82 $ ] , with @xmath83 time steps .",
    "it can be clearly observed visually that the spring ale approach provides a mesh with roughly the same quality as the literature ale map .",
    "( from top to bottom).,title=\"fig : \" ] +   ( from top to bottom).,title=\"fig : \" ] +   ( from top to bottom).,title=\"fig : \" ] +   ( from top to bottom).,title=\"fig : \" ] +     +    in figure  [ figure : e - s mesh quality ] we plotted the evolution of some mesh quality measures for all three surface evolutions ( described above ) against time .    in the top left the maximal ratio of element size and the radius of the inscribed circle , @xmath100 can be observed , where @xmath101 is the maximal edge length and @xmath102 is the radius of the inscribed circle of a triangle @xmath103 . the same mesh quality measure is also used in @xcite .",
    "the plots on the right - hand side show minimum and maximum angles ( @xmath104 and @xmath105 , top and bottom , respectively ) of the mesh , i.e.@xmath106 where @xmath107 contains the three angles of the triangle @xmath103 .",
    "finally , the bottom left plot shows the maximal skewness ( or also called equiangular skew ) @xmath108 , where @xmath109 , the skewness of a triangle @xmath103 , is defined as follows @xmath110,\\ ] ] measuring how irregular the triangle @xmath111 is . for a regular triangle @xmath112 and for highly irregular ones",
    "@xmath109 tends to one .",
    "usually , a mesh is considered good with skewness less than @xmath113 , while non - acceptable if its skewness exceeds @xmath114 .    in figure",
    "[ figure : e - s mesh quality ] it can be clearly observed that both ale maps ( literature and spring ) provide significantly better meshes as the purely normal evolution .",
    "also , the ale map of algorithm 1 provides a slightly better mesh then the literature ale map .",
    "let the closed surface @xmath85 given by the zero level set of the distance function @xmath115 here the functions @xmath87 , @xmath88 and @xmath89 are given by @xmath116 the normal velocity @xmath0 describes the surface evolution by the odes : @xmath117 for @xmath92 , where the surface velocity at @xmath93 is again given by the formula .",
    "finally , the ale map from the literature is given by @xmath118 for every @xmath96 $ ] , for @xmath97 , as suggested in @xcite .",
    "in figure  [ figure : 4h surface evolution ] the surface @xmath29 ( cf .  )",
    "is evolved over @xmath119 $ ] by three different methods , exactly as for figure  [ figure : e - s evolutions ] .",
    "again , the poor meshes of the normal movement can be nicely observed , in contrast with the quasi - regular meshes obtained by the ale maps .",
    "( from top to bottom).,title=\"fig : \" ] +   ( from top to bottom).,title=\"fig : \" ] +   ( from top to bottom).,title=\"fig : \" ] +   ( from top to bottom).,title=\"fig : \" ] +   ( from top to bottom).,title=\"fig : \" ] +   ( from top to bottom).,title=\"fig : \" ] +     +    similarly , the mesh quality measures are plotted in figure  [ figure : 4h mesh quality ] , as well .",
    "it is again clear that both ale methods provide much better meshes as the normal evolution . while both ale approaches still provide meshes of similar quality .",
    "we tested the performance of the spring ale algorithm by using it in the numerical solution of an evolving surface pde .",
    "as a well studied example , we carried out the same experiments over the evolving surface of section  [ section : e - s example ] , which have been also used in @xcite .",
    "the evolving surface pde is discretized using ale esfem , described in detail in @xcite .",
    "the inhomogeneity @xmath120 is chosen such that the true solution is known .",
    "the errors of the obtained lifted numerical solution is calculated in the following norms at time @xmath121 : @xmath122 the logarithmic plots , in figure  [ figure : conv ] , show the usual convergence plots : the two errors against time step size @xmath123 .     and",
    "@xmath124 norm of the errors for different spatial refinements plotted against the stepsize , title=\"fig : \" ] +    figure  [ figure : conv ] only serves as an illustration that the meshes from the literature ale map and from the spring system yields errors of the same magnitude .",
    "more spatial refinements would obfuscate the readability of the plots . for rigorous convergence test",
    "we refer to @xcite .",
    "the plots show the errors for all three methods concerning the evolution of the surface ( normal evolution , literature ale and spring ale of algorithm 1 ) . on the left",
    "we show the errors in the @xmath125 norm , while on the right in the @xmath124 norm .",
    "different shades correspond to different ale maps ( light gray , gray and black , respectively ) , while the lines with different markers are corresponding to different mesh refinements .    as usual we can observe two regions in figure  [ figure : conv ] : a region where the time discretisation error dominates , matching to the convergence rates of the theoretical results for the backward euler method ( order 1 ) . in the other region , with smaller stepsizes ,",
    "the spatial discretisation error is dominating ( the error curves are flatting out ) .",
    "we thank christian lubich and christian power for stimulating discussions on the topic .          , _ time  discrete higher  order ale formulations : a priori error analysis _",
    "math . , ( 2013 ) , pp .",
    "577604 . , _ time  discrete higher  order ale formulations : stability _ , siam j. numer .",
    "anal . , 51 ( 2013 ) , pp .",
    "577604 . , _ surface reconstruction from points _ , ucsd cse technical report , cs2008 - 0922 , ( 2007 ) , pp",
    ".  118 .        , _ finite elements on evolving surfaces _ , i m a journal of numerical analysis , 27 ( 2007 ) , pp .",
    "262292 . , _ finite element methods for surface pdes _ , acta numerica , 22 ( 2013 ) , pp .  289396 . , _",
    "@xmath125estimates for the evolving surface finite element method _ , mathematics of computation , 82 ( 2013 ) , pp",
    ".  124 .        , _ an ale esfem for solving pdes on evolving surfaces _ , milan journal of mathematics , 80 ( 2012 ) , pp .  469501 . , _ error analysis for an ale evolving surface finite element method _ , numerical methods for partial differential equations , 31 ( 2015 ) , pp .",
    "459499 .    , _ mixed explicit - implicit time integration of coupled aeroelastic problems : three - field formulation , geometric conservation and distributed solution _ , international journal for numerical methods in fluids , 21 ( 1995 ) , pp ."
  ],
  "abstract_text": [
    "<S> the good mesh quality of an evolving discretized surface or domain is often compromised during time evolution . in recent years </S>",
    "<S> this phenomena have been overcome in a couple of ways , one of them uses arbitrary lagrangian eulerian maps . </S>",
    "<S> however , the numerical computation of such maps , without a priori knowledge , still remained elusive . </S>",
    "<S> an algorithm is proposed here to numerically compute an arbitrary lagrangian eulerian map , which helps to preserve the mesh properties over time . </S>",
    "<S> the algorithm is based on finding an equilibrium state of a mechanical system of springs , which is determined by the connectivity of the nodes in the mesh . </S>",
    "<S> we present various numerical experiments illustrating the good properties of the algorithm .    </S>",
    "<S> keywords : arbitrary lagrangian eulerian map , evolving surfaces , evolving surface pde , esfem , spring system    ams : 65m50 , 34a09 , 35r01 </S>"
  ]
}
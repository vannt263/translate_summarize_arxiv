{
  "article_text": [
    "are quantum computers more powerful than classical ones ? concerning computational complexity , i.e. the speed of solving certain problems , the answer seems to be yes .",
    "a well - known example is shor s algorithm ( cf .",
    "ref .  ) for factoring large integers on quantum computers in polynomial time , which is generally believed to be impossible for a classical computer .    in this paper",
    ", we intend to compare classical and quantum computers with respect to a different complexity measure , which does not care about the time of computation , but instead measures the minimal description length .",
    "more in detail , let @xmath0 denote the finite binary strings , where @xmath1 is the empty string , and let @xmath2 be a universal computer .",
    "then , the kolmogorov complexity of any string @xmath3 is defined as @xmath4 i.e. the length of the shortest computer program that makes @xmath2 compute and output @xmath5 .",
    "since it was developed in the 1960 s by solomonoff , kolmogorov and chaitin , this complexity measure has turned out to have useful applications in several different areas of mathematics ( as explained e.g. in ref .  ) , besides being an interesting object of study itself .",
    "due to the rapid development of quantum information theory , there has been some interest in recent years ( cf . refs .  , , ) to extend this quantity to the quantum case .",
    "while inputs and outputs of classical computers are binary strings , quantum computers may also work with superpositions of strings .",
    "thus , it makes sense to consider quantum states like , for example , @xmath6 as inputs and outputs of quantum computers , and to assign a quantum kolmogorov complexity measure @xmath7 to those states , by a definition similar to eq .",
    "( [ eqdefc ] ) .",
    "such a definition has first been given by berthiaume , van dam , and laplante in 2001 in ref .  .",
    "formally , the aforementioned quantum state @xmath8 is an element of some hilbert space @xmath9 that contains the classical binary strings as an orthonormal basis .",
    "we do not restrict our considerations to pure states like @xmath8 , but also allow mixed states , i.e. arbitrary density operators @xmath10 on @xmath9 as inputs and outputs of quantum computers .",
    "we call these density operators _ qubit strings_.    once a quantum analogue of kolmogorov complexity has been defined , the question arises how classical and quantum complexity are related to each other on their common domain of definition . in other words , how are @xmath11 and @xmath12 related for classical binary strings @xmath3 ?",
    "generically , it might be true that quantum computers offer better possibilities to find short ( quantum ) descriptions of binary strings than classical computers . in this case",
    ", we would have @xmath13 for some strings @xmath5 .    here",
    ", we shall show that this is not the case , and that @xmath11 and @xmath12 are equal up to an additive constant .",
    "we prove an analogue of this result also for the case that a certain probabilistic error is allowed for the quantum computer s output ( corresponding to the complexity notion @xmath14 introduced below in section  [ secqcomplexity ] ) .",
    "our result answers an open problem posed in ref .  .",
    "note that if @xmath8 is a non - classical qubit string , then the classical complexity @xmath15 is undefined , because @xmath8 is not a classical binary string .",
    "however , if we define @xmath15 to be the _ shortest classical description _ of @xmath8 , then @xmath16 and @xmath17 behave completely differently : for example , if @xmath18 where @xmath19 denotes the ( non - computable ) halting probability of a universal turing machine ( cf .",
    "ref .  ) , then @xmath8 is a quantum description of itself ( with a length of one qubit ) , whereas @xmath8 does not even possess a finite classical description ( i.e. computer program to compute @xmath8 ) .",
    "even an approximate description must contain a large number of bits , as @xmath20 is a random real number .",
    "hence @xmath21 .",
    "thus , the result in this paper does _ not _ imply that @xmath16 and @xmath17 are just the same ; they only agree on the domain of classical strings .",
    "we remark that the exposition in this paper focuses more on a compact presentation than on mathematical rigidity . for more mathematical details of the proof , we refer the reader instead to ref .  .",
    "we would like to define the quantum complexity of some qubit string @xmath10 as the length of the shortest quantum computer program that produces @xmath10 . but",
    "while classical strings are discrete objects , the set of qubit strings is a continuum .",
    "if two qubit strings are close to each other , they are very difficult to distinguish by means of any quantum measurement . thus , it does not make sense to demand that the desired output @xmath10 is produced perfectly by the computer program , but it is more useful to allow a certain error tolerance .    to quantify the difference between two qubit strings , it is natural to use the trace distance ( see ref .  ) , which is defined as @xmath22 .",
    "quantum kolmogorov complexity can now be defined in essentially two ways : first , one can just fix some error tolerance @xmath23 .",
    "second , one can demand that the quantum computer outputs the qubit string @xmath10 as accurately as one wants , by supplying the machine with a second parameter as input that represents the desired accuracy . we consider both approaches and follow the lines of berthiaume et al .",
    "( ref .  ) except for slight modifications :    [ defqc ] let @xmath2 be a universal quantum computer and @xmath23 .",
    "then , for every qubit string @xmath10 , we define @xmath24 moreover , we set @xmath25    the universal quantum turing machine ( qtm ) , constructed in ref .   and modified for the definition of kolmogorov complexity with respect to base length in ref .",
    ", can serve as a model for a universal quantum computer .",
    "the length @xmath26 of a qubit string @xmath27 is here defined as the maximal length of any classical string that has non - zero overlap with @xmath27 .",
    "for example , the qubit string @xmath28 ( or rather its corresponding density operator @xmath29 ) is understood to have length @xmath30 .",
    "this is called the `` base length '' by bostrm and felbinger in ref .  .",
    "quantum kolmogorov complexity shares many properties with its classical counterpart .",
    "for example , there is a constant @xmath31 such that for every qubit string @xmath10 , it holds @xmath32 ( the same for @xmath14 ) , and the value of @xmath33 depends on the choice of the universal quantum computer @xmath2 only up to an additive constant as shown in ref .  .",
    "the main result of this paper is the following theorem :    [ maintheorem ] for every classical string @xmath3 , @xmath34 i.e. the absolute value of the difference of @xmath16 and @xmath17 is bounded by a constant on the domain of classical strings .",
    "moreover , for every rational @xmath35 , there are constants @xmath36 such that @xmath37    thus , the only possible difference between classical and quantum complexity for classical strings is the factor @xmath38 in the second equation , indicating that a quantum computer with large error tolerance @xmath39 might sometimes have shorter programs for generating classical strings than a classical computer ( which always has error tolerance zero ) .    note that in a very interesting paper based on a different complexity notion ( ref .  )",
    ", gcs has already shown a prefix - free analogue of eq .",
    "( [ eqo1 ] ) .",
    "we start with a simple argument , showing that for every rational number @xmath23 , there is a constant @xmath40 such that @xmath41 for every qubit string @xmath10 : this is clear , since every ( quantum ) program that computes @xmath10 to any desired accuracy can be transformed into a program that computes @xmath10 within some fixed accuracy @xmath39 .",
    "we just have to additionally specify the parameter @xmath39 , which costs at most a fixed number of bits @xmath42 .",
    "also , we claim that there is some constant @xmath31 such that for every classical string @xmath5 , it holds @xmath43 this can be seen as follows : as bennett has shown in ref .  , we can choose the classical computer which is used in the definition of @xmath11 to be reversible .",
    "but every reversibe computer is also a ( special case of a ) quantum computer and can thus be simulated by our universal quantum computer @xmath2 .",
    "we can thus find a program for @xmath2 which computes @xmath5 perfectly , and we only have to add a constant number of bits for the simulation .    it remains to show that there is some constant @xmath44 such that @xmath45 we prove this inequality by giving a classical computer program @xmath46 that simulates the universal quantum computer @xmath2 .",
    "more in detail , on input @xmath47 and @xmath48 , that program approximately computes the @xmath49-th classical string that is generated within some accuracy @xmath39 by the quantum computer @xmath2 on any input qubit string of length @xmath50 .",
    "it works as follows :    * set the time @xmath51 and the counter @xmath52 . *",
    "compute a discretization of the set of qubit strings ( density matrices ) of length less than or equal to @xmath50 , that is , the description of a finite set @xmath53 of qubit strings such that for every qubit string @xmath27 of length at most @xmath50 , there is some @xmath54 such that @xmath27 is very close to @xmath55 in trace distance . * for every @xmath54 , simulate the quantum computer @xmath2 on input @xmath55 for @xmath56 time steps and decide whether @xmath2 approximately halts on input @xmath55 at time @xmath56 .",
    "if this is the case , then compute a good approximation of the corresponding output , and check for every classical string @xmath5 of length @xmath57 whether that output is very close to @xmath58 ( with a suitable distance threshold depending on @xmath39 ) . if such a string @xmath5 is found , increase the counter by one , i.e. @xmath59 , and check if @xmath60",
    ". if this is true , then output @xmath5 and halt . * increase the time @xmath56 by one , i.e. @xmath61 , and go back to step 3 .",
    "if every approximation in every step is done in appropriate accuracy , then this program will find every classical string @xmath5 which is generated by some input qubit string @xmath27 of length @xmath62 within accuracy @xmath39 , whenever the corresponding index @xmath49 is given as input .",
    "but then , we can construct a classical computer program @xmath63 to produce @xmath5 : we just have to append a description of the program above to a description of the integer @xmath49 . the resulting program @xmath63 will have length @xmath64 where @xmath65 denotes an upper bound on the possible values of @xmath49 ( given @xmath50 and @xmath39 ) , i.e. @xmath66 , and @xmath67 is a constant that depends on @xmath39 ( since a description of @xmath39 has to be included in the program ) .",
    "as long as the string @xmath5 satisfies @xmath68 , the program @xmath63 must terminate and return output @xmath5 , which can be seen as follows . if @xmath68 , then there exists an input qubit string @xmath27 such that @xmath69 is @xmath39-close in trace distance to @xmath70 , and there is a corresponding halting time @xmath71 . if the counter @xmath56 in the four - step program given above is large enough , it will reach @xmath71 and finally discover the corresponding output string @xmath5 .    to get a useful number of bits @xmath72 to encode the value of @xmath49",
    ", we have to estimate the total number @xmath73 of classical strings that are produced by the quantum computer @xmath2 on some input of length less than or equal to @xmath50 , if some error tolerance @xmath39 is allowed .",
    "( since it may be hard to compute the actual value of @xmath73 , we do not use @xmath74 directly ; we only have to ensure that @xmath75 ) .",
    "viewed as qubit strings , the classical strings are mutually orthogonal .",
    "moreover , it has been shown in ref .   that the quantum computer @xmath2 as a mapping on the qubit strings is a quantum operation , as every physically realizable operation on quantum states ( cf .",
    "ref .  ) .",
    "thus , we have an instance of a more general problem : given some quantum operation on some hilbert space , how many mutually orthogonal vectors can be created by that operation if some error @xmath39 is allowed ? we give an estimate below in lemma  [ lemquantumcountingargument ] . using the result of that lemma",
    ", we get a constant @xmath76 such that @xmath77 since the qubit strings of length @xmath50 or less are density matrices on the hilbert space @xmath78 which is spanned by the classical strings of length less than or equal to @xmath50 , and thus @xmath79 .",
    "thus , it is possible to choose the fixed value @xmath80 as the number of bits that are used in the description of @xmath63 to specify the corresponding index @xmath49 .",
    "the program @xmath63 will then have length @xmath81 in particular , the value of @xmath50 can be deduced from the length of @xmath63 .",
    "this is the reason why we do _ not _ have to implement an additional description of @xmath50 in the program @xmath63 ( which would add an additional number of about @xmath82 bits ) . instead",
    ", the program @xmath63 may compute @xmath50 from its own length , more in detail , from the length of the description of @xmath49 . which does _ not _ contain the description of @xmath49 might be encoded , for example , in some self - delimiting manner , e.g. by means of a prefix - free code , such that it becomes clear at what bit position the description of @xmath49 starts .",
    "the description of @xmath49 , however , does _ not _ need to be self - delimiting , since programs may always determine their own lengths : in the turing - machine picture , they may look for the first blank symbol on the tape , for example . ]",
    "we get a bound on the classical kolmogorov complexity of @xmath5 via @xmath83 where @xmath84 .",
    "the desired inequality ( [ eqdesired ] ) now follows from the special case @xmath85 ( we have only used `` @xmath86 '' in the calculation above ) .    finally , it remains to prove that @xmath87 we start by bounding the number @xmath88 of classical strings @xmath89 with quantum kolmogorov complexity @xmath90 .",
    "first notice that if @xmath91 is fixed , then the map @xmath92 is a quantum operation ( cf . ref .  ) .",
    "thus , if we define @xmath93 then it follows from lemma  [ lemquantumcountingargument ] that the cardinality of these sets is bounded by @xmath94 consequently , if a classical string @xmath5 has quantum kolmogorov complexity @xmath95 , then it must be an element of @xmath96 for every @xmath97 , i.e. @xmath98 ( cf . the definition of @xmath17 in definition  [ defqc ] ) .",
    "hence the number @xmath88 of such strings is bounded by @xmath99 it also follows from inequality  ( [ eqbounded3 ] ) that there is some @xmath100 ( possibly depending on @xmath50 ) such that @xmath101 for every @xmath102 .",
    "since cardinalities are integer - valued , this means that @xmath103 for every @xmath102 .    in the proof of inequality  ( [ eqdesired ] ) ,",
    "we have given a classical computer program @xmath63 that approximately computes the @xmath49-th classical binary string @xmath5 that is generated by some quantum computer program of length less than @xmath50 up to trace distance @xmath39 .",
    "we modify this program to obtain a new program @xmath104 , containing an integer @xmath105 , which works as follows :    * set @xmath106 .",
    "* approximately compute the list of all classical strings @xmath89 that are generated by any quantum computer program of length less than or equal to @xmath50 up to trace distance @xmath39 . *",
    "if this list contains more than @xmath107 items , then let @xmath108 and go back to step 2 .",
    "* output the @xmath49-th element of this list .",
    "this program always terminates : if @xmath39 is small enough , then @xmath109 holds , and the set @xmath96 contains at most @xmath107 elements , which interrupts the loop in step 3 . due to the calculations above , every classical string @xmath5 with @xmath95",
    "is output by this computer program @xmath110 if @xmath49 is chosen appropriately .",
    "moreover , it holds @xmath111 due to inequality  ( [ eqlog2n ] ) , such that it is possible to encode @xmath49 in @xmath112 bits .",
    "in contrast to the program @xmath63 , this program @xmath104 does not need any specific parameter @xmath39 as input . moreover , it will also compute @xmath50 directly from its own length similarly as explained above for the program @xmath63 .",
    "it follows that there is a constant @xmath113 ( and @xmath114 ) such that @xmath115 this proves inequality  ( [ eqdesired2 ] ) .",
    "combining all the previous inequalities completes the proof of the theorem .",
    "here is an analytical result that we have used above to estimate the number of classical outputs .",
    "note that a special case of this lemma has been published in ref .  . for @xmath117 ,",
    "setting @xmath118 , that lemma states that quantum operations can not increase the number of dimensions , which is obvious , since quantum operations are linear maps .",
    "for small @xmath23 , the number of orthonormal vectors can increase only slightly .",
    "to state our result , we use the trace norm @xmath119 , which is used also in ref .  .",
    "it is easy to translate the result to the @xmath120-norm , since @xmath121 . in the field of classical kolmorogov complexity ,",
    "a `` counting argument '' is frequently used , stating that @xmath88 different inputs for a computer can have at most @xmath88 different outputs . since",
    "our lemma is some kind of quantum generalization of this result ,",
    "we call it a `` quantum counting argument '' .    the proof is based on holevo s @xmath122-quantity associated to any ensemble @xmath123 , consisting of probabilities @xmath124 , @xmath125 , and of density matrices @xmath126 acting on a hilbert space @xmath78 . setting @xmath127 ,",
    "the @xmath122-quantity is defined as follows : @xmath128 where @xmath129 denotes the relative entropy .",
    "[ lemquantumcountingargument ] let @xmath78 and @xmath130 be separable hilbert spaces with @xmath131 , and let @xmath132 . if @xmath133 is a quantum operation from the density operators of @xmath78 to those of @xmath130 , then the maximal number @xmath88 of mutually orthonormal vectors on @xmath130 which are all produced by @xmath133 within trace distance @xmath39 on some ( possibly mixed ) input is bounded by @xmath134    * proof . * for @xmath117 ,",
    "the assertion of the theorem is trivial ( setting , as usual , @xmath135 ) , so assume @xmath23 .",
    "let @xmath136 be a set of orthonormal vectors @xmath137 such that there exists some input density operator @xmath27 on @xmath78 with @xmath138 we may also assume that @xmath139 .",
    "let @xmath140 .",
    "our task is to upper - bound the number of vectors @xmath88 . by definition ,",
    "there exist density operators @xmath141 on @xmath78 such that @xmath142 . for @xmath143 , define the projectors @xmath144 , and set @xmath145 .",
    "let @xmath146 be an orthonormal basis of @xmath130 .",
    "now we define a quantum operation @xmath147 from the trace - class operators on @xmath130 to those on @xmath148 via @xmath149 where @xmath150 denotes an arbitrary orthonormal basis of @xmath148 .",
    "it is clear that @xmath147 is completely positive ( kraus representation ) , and one easily checks that @xmath147 is also trace - preserving .",
    "this is also true if @xmath151 ; then , the corresponding infinite series is absolutely convergent in @xmath152-norm , and inherits complete positivity from its partial sums .",
    "moreover , for @xmath153 , we have @xmath154    consider the equidistributed ensemble @xmath155 , and let @xmath156 . due to the monotonicity of relative entropy with respect to quantum operations",
    ", we have @xmath157 the trace distance is also monotone with respect to quantum operations as explained in ref .  .",
    "thus , for every @xmath143 , @xmath158 let now @xmath159 , then @xmath160 , and @xmath161 now we use the fannes inequality as given in ref .",
    ". it states . ] that for density matrices @xmath10 and @xmath27 with trace distance @xmath162 , it holds @xmath163 where @xmath164 is the dimension of the hilbert space and @xmath165 . in our case",
    ", this inequality yields @xmath166 altogether , we get @xmath167 where we have used the inequality @xmath168 for @xmath169 .",
    "the claim follows by rearranging.@xmath116",
    "we have shown in this paper that classical and quantum kolmogorov complexity agree for classical strings up to an additive constant . in some sense ,",
    "quantum computers are no more powerful in describing classical strings than classical computers .    yet",
    ", there is another , more positive way to state the result : this also means that quantum complexity is an extension of classical complexity to the domain of quantum states , similar to the way that von neumann entropy extends classical shannon entropy .",
    "thus , every result on quantum complexity will contain some classical result as a special case .",
    "moreover , this allows to treat both classical and quantum complexity in a single mathematical framework ."
  ],
  "abstract_text": [
    "<S> we show that classical and quantum kolmogorov complexity of binary strings agree up to an additive constant . </S>",
    "<S> both complexities are defined as the minimal length of any ( classical resp . </S>",
    "<S> quantum ) computer program that outputs the corresponding string .    </S>",
    "<S> it follows that quantum complexity is an extension of classical complexity to the domain of quantum states . </S>",
    "<S> this is true even if we allow a small probabilistic error in the quantum computer s output . </S>",
    "<S> we outline a mathematical proof of this statement , based on an inequality for outputs of quantum operations and a classical program for the simulation of a universal quantum computer .    # </S>",
    "<S> 1#1 : </S>"
  ]
}
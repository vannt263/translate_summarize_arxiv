{
  "article_text": [
    "to explain our intended approach to integrating high and low level planning , we introduce the high level motion plan random _ trajectory _ variable @xmath5 that is governed by the distribution @xmath6 and conditioned on symbolic data @xmath7 .",
    "we treat the high level plan as a random variable because of the following : the high level planner must be able to accommodate local disturbances returned by the low level motion planner . in turn",
    ", high level motion plans must be able to adjust to online goal changes ; these high level changes must then trickle down to low level behavior .",
    "conceptually then , the high level plan and the low level plan are _ coupled _ variables ; if either is restricted to a single hypothesis ( as is typical in conventional approaches to hierarchical planning ) , then the high and low level plans are unable to influence each other .",
    "similarly , we represent the low level motion plan with a random trajectory variable @xmath8 that is governed by the joint distribution @xmath9 over the platform and environmental agents @xmath10 , where @xmath11 $ ] is platform state data ( such as localization information ) and agent state data respectively ( as in  @xcite ) . because the high and low level plans are dependent , we seek models for @xmath12 , the joint distribution over the high level plan , low level plan , and environmental agents .    in taking a probabilistic approach , our first challenge lies in modeling the distribution in a faithful yet tractable way . in figure",
    "[ fig : single - level - hierarchy ] we present the graphical model of our approach , inspired by the approach taken in  @xcite ; similarly , undirected graphical models of this sort ( markov random fields ) have enjoyed great success in the image and natural processing literature . according to the graphical model in figure  [ fig : single - level - hierarchy ] , the distribution factors as @xmath13 where @xmath14 encodes the `` agreeability '' of the low level plan and the high level plan and @xmath15 encodes the most likely path through the dynamic , responsive environment ( e.g. , a crowd of humans ) . as was argued in  @xcite , our model immediately suggests a natural way to perform navigation : at time @xmath16 , find the _ maximum a - posteriori _",
    "( map ) assignment for the joint distribution @xmath17 , and then take @xmath18 as the next action in the path . since @xmath19 captures the most probable joint value of the high level and low level plan , @xmath18 captures the next actuator command that is most in agreement with the high level plan and most likely to succeed in navigating through the dynamic , responsive environment .    in the following case studies , we present scenarios that move from the most limited form of high level guidance ( designating a goal in a map ) to a scenario where a human operator interacts arbitrarily ( sets as many waypoints as desired / grabs and releases the joystick whenever he pleases ) .",
    "* the environment is static with a single known obstacle .",
    "thus , we have @xmath20 ( i.e. , there is no crowd ) . *",
    "the operator designates the goal @xmath21 in the predefined map @xmath22 .",
    "* we can thus utilize a standard global planner ; call it a*. we let @xmath23 .",
    "thus , @xmath24 . *",
    "our local planner is trivial , since there are no local disturbances .",
    "* we compute `` actuator inputs '' by finding @xmath25 where @xmath26 is the kinematic model of the robot , and @xmath27 is the interaction function between the robot and the global plan . the operator - robot interaction function",
    "@xmath27 could take a number of forms ; we choose @xmath28[{{\\boldsymbol \\eta}}_0-{{\\mathbf{f}}^r}]^\\top)$ ] .",
    "thus , @xmath29 converges to @xmath30 in the situation of figure  [ fig : gotog ] .        recovering the ros navigation stack with this approach is trivial : at each time step @xmath16 , sample local paths @xmath31 , and weight each sample according to @xmath32the first factor encodes global compatibility , while the second factor encodes kinematic feasibility .",
    "choose the sample @xmath33 with the highest weight as the inputs to the actuators .",
    "the probabilistic formulation allows us to approach the dwa ros navigation stack in a more general manner : in the ros navigation stack , sampling from @xmath26 and then weighting amounts to straightforward importance sampling .",
    "however , the distribution @xmath34 can be approximately inferred using a host of methods : markov chain monte carlo , laplace approximation , hybrid monte carlo , etc  any approximate inference technique is at our disposal .",
    "in contrast , the ros navigation stack ( http://wiki.ros.org/base_local_planner ) , does not pose the high level to low level path planning problem as a probability distribution , so it is not immediately clear how to employ approximate inference techniques to find more accurate solutions in a more efficient manner .    [ [ single - global - operator - instruction - multiple - static - and - dynamic - obstacles ] ] single global operator instruction , multiple static and dynamic obstacles ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    in figure  [ fig : gotog_multiple ] we introduce the notion of multiple global plans , each of which have nontrivial value .",
    "in particular , global plans @xmath35 have values in the static map of @xmath36 .",
    "the global plan distribution thus takes the form @xmath37 in figure  [ fig : gotog_multiple_dynamic ] , we introduce a local crowd disturbance in the bottom right of the map .",
    "we assume that the crowd enters into the robot s field of view near the center corridor ;    thus , the robot has to make a planning decision according to @xmath38 when the crowd is not in the robot s field of view , @xmath20 , and the low level planner stays close to the optimal global plan @xmath30 .",
    "however , when @xmath39 , it is no longer obvious which global plan to follow . with our probabilistic approach , which global path to follow",
    "is determined by balancing the capabilities of the low level planner in the crowd ( effectively , how much probability is in @xmath15 near the global plan @xmath40 ) against how much more efficient @xmath30 is than @xmath41 ( or , how @xmath42 compares to @xmath43 ) .",
    "heuristically , one can think of the distribution @xmath44 as having three modes , each ( roughly ) centered around the global plans . the relative probability mass in each mode ends up determining the map value of the distribution .",
    "thus , the global plan s fitness  represented by @xmath45is balanced against the challenge of the local situation , which is represented by @xmath15 .        now",
    ", suppose that the operator has provided a global goal @xmath21 ( and thus high level plans are generated ) , but intervenes via a joystick at random times according to @xmath46 and @xmath47 , as in figure  [ fig : intervene ] ( the difference between this scenario and the scenario in figure  [ fig : gotog_multiple_dynamic ] is the presence of the joystick data ) .",
    "now , not only do we have to balance global considerations ( the weights of the global plans ) against local disturbances , but also the online desires of the operator .",
    "in particular , the robot will move through the environment in the same manner as in figure  [ fig : gotog_multiple_dynamic ] , until the operator intervenes with the joystick at @xmath46 . at this point ,",
    "the global plan distribution will become @xmath48 , and thus influence local decision making by `` pulling '' @xmath15 towards the more peaked regions of @xmath48we are able to simultaneously represent high level operator desires with online refinements .",
    "our full joint distribution now becomes @xmath49 .",
    "importantly , in the absence of a global goal @xmath21 , the formulation reduces to @xmath50 .",
    "this is the case of fully assistive shared control , where the absence of a global map or corrupted localization data renders the global goal @xmath21 meaningless . in this case",
    ", the global plan @xmath5 is revealed incrementally via local user input data @xmath46 .",
    "this capability becomes important when , for instance , the robot enters a crowd , and standard localization techniques start to fail  at this point the robot must `` share awareness '' with the operator by inferring global destinations from local operator input data .",
    "while the success of previous experiments and the utility of the markov random field factorization lend credence to our model above , we point out that results from formal methods ( and thus provably correct constructions ) can guide how we model our joint distribution ( courtesy of ufuk topcu ) . to see how",
    ", we refer to figure  [ fig : pgm - to - hier ] , where we have plotted the state of the art formal methods decision stack next to its corresponding graphical model decomposition .",
    "note that the results from formal methods suggests that a `` tactical variable '' , which we call @xmath51 , is used to mediate information between the high level @xmath5 and the low level @xmath8 ( we assume that some form of tactical data , @xmath52 informs the governing distribution @xmath53 ) .",
    "this graphical model in turn represents the factorization      one of our ongoing research objectives is to fully understand how formal methods can guide our probabilistic decompositions  while the probabilistic approach is well suited to capture dependencies between variables and flexible enough to capture the vagaries of human behavior ( or online manipulation of robot objectives ) , balancing tractability and fidelity in the factorization of the joint distribution is more of an anecdotal art than a science .",
    "results from formal analysis , however , can provide guidance on our decomposition and potentially insight into the form of our      `` cooperation functions '' @xmath55 and @xmath56 that link the mission , tactical , and trajectory levels .",
    "furthermore , it is not immediately clear how to relate data coming in at various levels to planning level variables ( e.g. , high level symbolic data @xmath57 clearly relates to @xmath5 ; however , the introduction of other planning levels necessitates understanding of how lower level data  such as joystick commands in the form of @xmath58measures lower level planning variables ) .",
    "the hierarchical decision stack illustrated in figure  [ fig : pgm - to - hier ] was tied to a specific application , and so is not in general the correct hierarchical decomposition .",
    "however , the approach of finding provably correct hierarchical decompositions for arbitrary scenarios , and then reading off the corresponding graphical model ( and thus probabilistic decomposition ) is fully general ; we depict this approach in figure  [ fig : arbitrary - stacks ] . in combination with human - learning and symbolic planner approaches ( which guide how we model and adapt distributions , such as @xmath59 and @xmath60 , at specific levels of the planning stack )",
    ", our approach has the potential to be both flexible enough to accommodate a wide variety of online manipulation of global robot objectives while maintaining the rigor of formal analysis ."
  ],
  "abstract_text": [
    "<S> we present a possible method for integrating high level and low level planning . to do so , we introduce the global plan random _ trajectory _ @xmath0 </S>",
    "<S> \\to \\mathbb r^2 $ ] , measured by goals @xmath1 and governed by the distribution @xmath2 . </S>",
    "<S> this distribution is combined with the low level robot - crowd planner @xmath3 ( from  @xcite ) in the distribution @xmath4 . </S>",
    "<S> we explore this _ integrated planning _ </S>",
    "<S> formulation in three case studies , and in the process find that this formulation 1 ) generalizes the ros navigation stack in a practically useful way 2 ) arbitrates between high and low level decision making in a statistically sound manner when unanticipated local disturbances arise and 3 ) enables the integration of an onboard operator providing real time input at either the global ( e.g. , waypoint designation ) or local ( e.g. , joystick ) level . </S>",
    "<S> importantly , the integrated planning formulation @xmath4 highlights failure modes of the ros navigation stack ( and thus for standard hierarchical planning architectures ) ; these failure modes are resolved by using @xmath4 . </S>",
    "<S> finally , we conclude with a discussion of how results from formal methods can guide our factorization of @xmath4 . </S>"
  ]
}
{
  "article_text": [
    "multiple testing is a widespread tool to evaluate scientific studies .",
    "we are interested in testing @xmath0 hypotheses @xmath1 with corresponding p - values @xmath2 for statistical significance .",
    "following @xcite , we define a multiple testing procedure as a mapping @xmath3^m \\times [ 0,1 ] \\rightarrow \\mathcal{p}(\\ { 1,\\ldots , m \\ } ) \\label{label_h}\\end{aligned}\\ ] ] whose input is a vector of @xmath4 p - values @xmath5^m$ ] and a testing threshold @xmath6 $ ] and whose output is the set of indices of rejected hypotheses , where @xmath7 denotes the power set",
    ".    many procedures of the above form are available in the literature in order to correct for multiple tests , for instance the procedures of @xcite , @xcite , @xcite , @xcite or @xcite .",
    "many common procedures , including the ones aforementioned , belong to a certain class of procedures , called step - up and step - down procedures @xcite .",
    "this article focuses on two types of multiple testing procedures : _ monotonic _ procedures defined in @xcite and @xcite as well as _",
    "well - behaved _ procedures @xcite .",
    "we investigate to which extent the class of monotonic and well - behaved multiple testing procedures is closed under the computation of the union , intersection , difference or the complement of sets of rejected or non - rejected hypotheses .",
    "a multiple testing procedure is said to be monotonic if smaller p - values @xcite or a higher testing threshold @xcite lead to more rejections .",
    "@xcite call a monotonic multiple testing procedure well - behaved if p - values corresponding to rejected hypotheses can be lowered and p - values corresponding to non - rejected hypotheses can be increased while leaving all rejections and non - rejections invariant .",
    "the motivation for the present article is as follows :    1 .",
    "investigating the closeness of a class is of interest in its own right : the closeness of step - up and step - down procedures allows us to construct new multiple testing procedures of the same ( step - up / step - down ) form from existing ones ; moreover , the resulting procedure will be given explicitly .",
    "2 .   being able to perform arithmetic operations with multiple testing procedures is useful in practice : many multiple testing procedures exist to test hypotheses according to various criteria , each of which might prove beneficial in certain applications . whereas hypotheses can also be tested sequentially using several procedures , it is nontrivial a priori that procedures can be combined to test multiple hypotheses in a single run while drawing benefits of several criteria simultaneously .",
    "3 .   monotonic and well - behaved procedures have already been of interest in the literature .",
    "for instance , @xcite uses the idea of monotonicity to show that there is no monotonic step - up procedure which improves upon the @xcite procedure in the sense that it always returns the same rejections or possibly more .",
    "@xcite show that the classical @xcite procedure dominates all monotonic step - down multiple testing procedures in the above sense .",
    "proving that certain classes of procedures ( for instance , monotonic procedures ) are closed renders the applicability of known results more apparent .",
    "4 .   the results discussed in this paper extend the methodology developed in @xcite and @xcite which relies on both monotonic as well as well - behaved procedures .",
    "briefly , the authors consider a scenario in which the p - value underlying each hypothesis is unknown , but can be estimated through monte carlo samples drawn under the null , for instance using bootstrap or permutation tests .",
    "instead of using estimated p - values to obtain ad - hoc decisions on all hypotheses , the authors prove that it is possible to improve existing algorithms designed for monte carlo based multiple testing @xcite : the proposed modifications guarantee that the test results of published algorithms are identical ( up to an error probability pre - specified by the user ) to the ones obtained with the unknown p - values .",
    "this ensures the repeatability and objectivity of multiple testing results even in the absence of p - values .",
    "the article is structured as follows .",
    "section [ section_basic ] provides formal definitions of the two properties of a multiple testing procedure under investigation .",
    "section [ section_arbitrary ] considers arbitrary ( monotonic and well - behaved ) multiple testing procedures and demonstrates that solely the monotonicity is preserved when taking unions and intersections .",
    "the difference and complement are neither monotonic nor well - behaved .",
    "section [ section_stepupdown ] focuses on step - up and step - down procedures and shows that both classes of ( monotonic and well - behaved ) step - up and step - down procedures are closed under the union or intersection operation , but not the complement or difference .",
    "the article concludes with a short discussion in section [ section_discussion ] .",
    "all proofs are given in [ section_proofs ] .",
    "in the entire article , @xmath8 and @xmath9 denote the absolute value and the euclidean norm , respectively .",
    "we consider two useful properties of multiple testing procedures .",
    "the first one , monotonicity , states that smaller p - values @xcite or a higher testing threshold @xcite lead to more rejections :    [ definition_monotonicity ] a multiple testing procedure @xmath10 is _ monotonic _ if @xmath11 for @xmath12 and @xmath13 .",
    "the monotonicity in the testing threshold @xmath14 introduced by @xcite , also called @xmath14-consistency @xcite , is a natural property desired for any testing procedure since testing at a more stringent threshold should never result in more rejections @xcite .",
    "@xcite introduce another useful property , the class of well - behaved multiple testing procedures .",
    "such procedures , in connection with a generic algorithm presented in @xcite , allow to use p - value estimates obtained with independent samples under the null to compute test results which are proven to be identical ( up to a pre - specified error probability ) to the ones obtained with the unknown p - values . a monotonic multiple testing procedure @xmath10 is well - behaved if it additionally satisfies the following condition .    [ condition_h ]    1 .",
    "let @xmath15^m$ ] and @xmath16 . if @xmath17 @xmath18 and @xmath19 @xmath20 , then @xmath21 .",
    "2 .   fix @xmath22^m$ ] and @xmath23 $ ] .",
    "then there exists @xmath24 such that @xmath5^m$ ] , @xmath6 $ ] and @xmath25 imply @xmath26 .",
    "well - behaved procedures stay invariant if rejected ( non - rejected ) p - values are replaced by smaller ( larger ) values . moreover , well - behaved procedures are constant on a @xmath27-neighbourhood around fixed inputs @xmath28 and @xmath29 .    the threshold @xmath14 is a parameter in condition [ condition_h ] to account for settings in which @xmath14 is unknown a - priori : this can occur , for instance , when the testing threshold depends on an estimate of the proportion of true null hypotheses which is often a functional of @xmath30 ( * ? ? ?",
    "* section 2.2 ) .",
    "condition [ condition_h ] is a generalisation of ( * ? ? ?",
    "* condition 1 ) which states the same invariance property for the case that @xmath14 is a given constant : in this case , @xmath10 is solely a function of @xmath30 and the condition @xmath31 in the second part of condition [ condition_h ] can be ignored .",
    "we define the union , intersection , difference and the complement of two procedures to be the equivalent operations on the sets of rejected hypotheses returned by the two procedures .",
    "formally , for two multiple testing procedures @xmath32 and @xmath33 we define @xmath34^m \\times [ 0,1 ] \\rightarrow \\mathcal{p}(\\{1,\\ldots , m\\}),\\\\ & h_1 \\cup h_2(p,\\alpha ) : = h_1(p,\\alpha ) \\cup h_2(p,\\alpha),\\end{aligned}\\ ] ] and similarly @xmath35 , @xmath36 and the complement @xmath37 , where @xmath38 .    in what follows",
    ", we sometimes drop the dependence of @xmath39 on @xmath30 , on @xmath14 , or on both parameters .",
    "the following lemma summarises the results .",
    "[ lemma_results_arbitrary ] let @xmath32 and @xmath33 be two monotonic and well - behaved multiple testing procedures .    1",
    ".   @xmath40 and @xmath35 are monotonic and satisfy part 2 .  of condition [ condition_h ] .",
    "2 .   @xmath41 and @xmath36 are not monotonic , @xmath38 .",
    "as well - behaved procedures are also monotonic , the complement or difference of two procedures is also not well - behaved .",
    "although by lemma [ lemma_results_arbitrary ] , both the union and the intersection are monotonic , they do not necessarily allow to lower the p - values of rejected hypotheses or to increase the p - values of non - rejected hypotheses ( first part of condition [ condition_h ] ) as demonstrated in the following two counterexamples .",
    "[ counterexample_intersection ] let @xmath42 and @xmath43 .",
    "let @xmath32 be the @xcite step - up procedure , @xmath33 be the @xcite step - down procedure and @xmath44 .",
    "then @xmath45 , @xmath46 and thus @xmath47 . however , increasing @xmath28 to @xmath48 results in @xmath49 and thus @xmath50 .",
    "[ counterexample_union ] let @xmath28 and @xmath29 be as in example [ counterexample_intersection ] .",
    "let @xmath32 be a step - up procedure which uses the same threshold as the ( step - down ) @xcite correction , and likewise @xmath33 be a step - down procedure using the same threshold as the ( step - up ) @xcite procedure  using ( * ? ? ? * lemma 3 ) , it is straightforward to show that both procedures are monotonic and well - behaved .",
    "let @xmath51 .",
    "then @xmath52 , @xmath53 and thus @xmath54 . however , decreasing @xmath28 to @xmath55 results in @xmath56 and thus @xmath57 .",
    "examples [ counterexample_union ] and [ counterexample_intersection ] also demonstrate that both the union and the intersection of a well - behaved step - up and a well - behaved step - down procedure are not necessarily well - behaved any more .",
    "however , by lemma [ lemma_results_arbitrary ] , the union ( intersection ) of two procedures still satisfies the second part of condition [ condition_h ] .",
    "this has the following consequences : the union ( intersection ) of two procedures continues to have the property that for fixed p - values @xmath28 and threshold @xmath29 , a @xmath27-neighbourhood exists on which the union stays constant ; nevertheless , the union ( intersection ) is not stable any more in the sense that it does not stay invariant if p - values of rejected ( non - rejected ) hypotheses are decreased ( increased ) .",
    "although neither the class of monotonic and well - behaved multiple testing procedures of general form nor the combination of a ( monotonic and well - behaved ) step - up and step - down procedure is closed under the four arithmetic operations aforementioned , the next section proves that this holds true for the special classes of ( monotonic and well - behaved ) step - up and step - down procedures individually ( when taking unions and differences ) .",
    "consider a step - up ( @xmath58 ) and step - down ( @xmath59 ) procedure @xmath60 returning the set of indices of rejected hypotheses @xcite , where @xmath61 refers to the ordered p - values .",
    "any procedure of the above form is fully characterised by a threshold function @xmath62 $ ] returning the critical value @xmath63 each @xmath64 is compared to .",
    "a step - up procedure first determines the largest @xmath65 such that the p - value @xmath66 lies below the threshold @xmath67 and then rejects all hypotheses having p - values up to @xmath66 .",
    "likewise , a step - down procedure non - rejects all those hypotheses with p - values larger or equal to the smallest p - value above the threshold .",
    "@xcite show that any step - up or step - down procedure ( characterised by its threshold function @xmath68 ) which satisfies the following condition is both monotonic and well - behaved :    [ condition_threshold ]    1 .",
    "@xmath63 is non - decreasing in @xmath69 for each fixed @xmath14 .",
    "@xmath63 is continuous in @xmath14 and non - decreasing in @xmath14 for each fixed @xmath69 .",
    "furthermore , @xcite verify that a large variety of commonly used procedures satisfies condition [ condition_threshold ] and is hence both monotonic and well - behaved , among them the procedures of @xcite , @xcite , @xcite , @xcite or @xcite .",
    "even though ( * ? ?",
    "* lemma 3 ) only prove that condition [ condition_threshold ] is sufficient for a procedure to be monotonic and well - behaved , the condition is actually also necessary :    [ lemma_necessary ] any monotonic and well - behaved step - up or step - down procedure satisfies condition [ condition_threshold ] .",
    "consider two step - up procedures @xmath58 and @xmath70 with threshold functions @xmath71 and @xmath72 as well as two step - down procedures @xmath59 and @xmath73 with threshold functions @xmath74 and @xmath75 .    in the following subsections we separately investigate whether the classes of step - up ( step - down ) procedures are closed under each of the four set operations ( union , intersection , difference and complement ) .",
    "moreover , we investigate whether the subclasses of monotonic and well - behaved step - up ( step - down ) procedures are closed . to this end , by lemma [ lemma_necessary ] , it suffices to show that the classes of step - up ( step - down ) procedures satisfying condition [ condition_threshold ] are closed .           the class of step - up procedures is closed under the union operation : to be precise , if @xmath58 and @xmath70 are two step - up procedures , their union is computed by another step - up procedure @xmath10 with threshold function @xmath76 as visualised in fig .  [ figure_visualisation ] ( left ) .",
    "this is seen as follows : as @xmath77 for all @xmath78 , all hypotheses rejected by either @xmath58 or @xmath70 are also rejected by @xmath10 , that is @xmath79 .",
    "likewise , as @xmath63 takes precisely one of the values @xmath80 or @xmath81 for each @xmath78 , any p - value belonging to the non - rejection area of both procedures @xmath58 and @xmath70 also stays non - rejected in @xmath10 , hence @xmath82 .",
    "moreover , the subclass of monotonic and well - behaved step - up procedures is also closed under the union operation as proven in the following lemma .",
    "[ lemma_stepup_union ] if @xmath58 and @xmath70 are two step - up procedures which satisfy condition [ condition_threshold ] then so does the union @xmath83 .",
    "similarly , the union of two step - down procedures @xmath59 and @xmath73 ( having threshold functions @xmath74 and @xmath75 ) is obtained through another step - down procedure characterised by the threshold function @xmath84 .",
    "as the threshold function is the same as the one in lemma [ lemma_stepup_union ] , condition [ condition_threshold ] is still satisfied .      similarly to section [ subsection_stepupdown_union ] , the intersection of two step - up procedures @xmath58 and @xmath70 is again a step - up procedure @xmath10 , characterised by the new threshold function @xmath85 as visualised in fig .",
    "[ figure_visualisation ] ( right ) .",
    "the validity of the threshold for the intersection procedure can be proven as follows : as @xmath86 for all @xmath78 , any hypothesis non - rejected by either procedure @xmath58 or @xmath70 is also non - rejected by @xmath10 , that is @xmath87 . likewise , as @xmath63 takes precisely one of the values @xmath80 or @xmath81 for each @xmath78 , any p - value in the rejection area of both procedures remains rejected when tested with @xmath10 , thus @xmath88 .",
    "similarly to lemma [ lemma_stepup_union ] , the subclass of monotonic and well - behaved step - up procedures is again closed under the intersection operation .",
    "[ lemma_stepup_intersection ] if @xmath58 and @xmath70 are two step - up procedures which satisfy condition [ condition_threshold ] then so does the intersection @xmath89 .    similarly to section [ subsection_stepupdown_union ] , the intersection of two step - down procedures @xmath59 and @xmath73 is obtained with another step - down procedure using the threshold function @xmath90 .",
    "this is again the same threshold function as the one considered in lemma [ lemma_stepup_intersection ] , thus condition [ condition_threshold ] remains satisfied .      whereas the complement is generally neither monotonic nor well - behaved , it can be computed for step - up and step - down procedures using the following construction .",
    "let @xmath14 be a known constant .",
    "we re - consider the step - up procedure @xmath58 with threshold function @xmath71 .",
    "then the step - down procedure @xmath91 with threshold function @xmath92 applied to @xmath93 ( instead of @xmath30 ) computes the complement of @xmath94 .",
    "the reasoning behind this is as follows : for any hypothesis with p - value @xmath64 below the threshold @xmath80 , @xmath95 ( having rank @xmath96 in the sorted sequence of values @xmath93 ) is above @xmath97 by construction of @xmath74 .",
    "therefore , all former rejections of @xmath58 turn into non - rejections of @xmath59 and vice versa .",
    "likewise , the complement of a step - down procedure @xmath59 with threshold function @xmath74 and constant @xmath14 is computed by a step - up procedure @xmath58 with threshold function @xmath98 .",
    "condition [ condition_threshold ] is again satisfied :    [ lemma_stepup_complement ] let @xmath14 be a known constant . if the step - up procedure @xmath58 with threshold @xmath71 satisfies condition [ condition_threshold ] , then so does its step - down complement @xmath59 ( defined with threshold function @xmath92 ) .",
    "the requirement that @xmath14 be a known constant is crucial since @xmath74 is not non - decreasing in @xmath14 for a fixed @xmath69 as required in the second part of condition [ condition_threshold ] .",
    "however , lemma [ lemma_stepup_complement ] is made possible by the fact that for a given constant @xmath14 ( that is , if @xmath10 and the threshold function seize to be a function of @xmath14 ) , all the parts in condition [ condition_h ] ( and likewise , condition [ condition_threshold ] ) which involve @xmath14 can be ignored ( see remark at the end of section [ section_basic ] ) .      following the notation of section [ section_arbitrary ] ,",
    "the difference @xmath36 of two procedures @xmath32 and @xmath33 can equivalently be written as @xmath99 using the complement of @xmath33 .",
    "if @xmath33 is a step - up procedure , @xmath100 turns into a step - down procedure ( see section [ subsection_stepupdown_complement ] ) .",
    "therefore , in case both @xmath32 and @xmath33 are of equal type , by lemma [ lemma_results_arbitrary ] , the intersection of a step - up and a step - down procedure is still monotonic but not well - behaved any more .",
    "however , the difference @xmath36 is computable if one of @xmath32 or @xmath33 is a step - up procedure and the other is a step - down procedure .",
    "this article investigates closeness properties of general multiple testing procedures , step - up and step - down procedures as well as subclasses of so - called monotonic and well - behaved procedures under four set operations ( union , intersection , complement and difference ) .",
    "the article shows that for general multiple testing procedures , solely the class of monotonic procedures is closed under taking the union and intersection .",
    "however , the subclass of monotonic and well - behaved step - up ( step - down ) procedures is closed under taking the union and intersection .",
    "the implications of the closeness properties proven in this article are threefold : they provide a tool to construct new procedures of known form and with known properties , they render theoretical results @xcite instantly applicable to a large class of multiple testing procedures and they allow to combine the benefits of various multiple testing procedures in practice .",
    "the author was supported by the engineering and physical sciences research council ( epsrc ) .",
    "the appendix contains all proofs sorted by section .        1 .   monotonicity . if @xmath101 and @xmath13 then @xmath102 , @xmath103 and thus @xmath104 as well as @xmath105 .",
    "+ the second statement of condition [ condition_h ] . as @xmath32 satisfies condition [ condition_h ] ,",
    "there exists @xmath106 such that @xmath107 implies @xmath108 .",
    "likewise for @xmath33 with a suitable @xmath109 . for @xmath110 and @xmath25",
    ", we have @xmath108 and @xmath111 and thus @xmath112 .",
    "likewise for the intersection .",
    "2 .   fix @xmath14 .",
    "if @xmath113 then @xmath114 , but @xmath115 for @xmath38 .",
    "the complement is thus not monotonic .",
    "the operation @xmath116 is equivalent to @xmath117 and thus also not monotonic .        1 .",
    "we show that @xmath63 must be non - decreasing in @xmath69 for a fixed @xmath14 . indeed , suppose @xmath68 is decreasing for some @xmath69 . then @xmath10 can not be monotonic for all inputs : assume that @xmath118 , @xmath119 and @xmath10 is of step - up type with @xmath120 and @xmath121 . then @xmath122 but increasing @xmath30 to @xmath123 results in @xmath124 , thus contradicting monotonicity",
    "we show that @xmath63 must also be non - decreasing in @xmath14 for any fixed @xmath69 . indeed , for a fixed @xmath69 , suppose @xmath125 for @xmath126",
    ". then @xmath10 can again not be monotonic for all inputs : assume we test @xmath127 hypothesis @xmath128 with p - value @xmath129 .",
    "then @xmath128 is rejected with threshold @xmath130 but non - rejected with @xmath131 even though @xmath126 , thus contradicting monotonicity .",
    "3 .   we show that @xmath63 is continuous in @xmath14 for a fixed @xmath69 .",
    "let @xmath132 be given .",
    "fix @xmath69 and @xmath29 .",
    "we show continuity of the threshold function at @xmath29 as @xmath133 . +",
    "case 1 : @xmath134 . then @xmath135 by monotonicity .",
    "define @xmath136 for any @xmath137 ( i.e. , @xmath28 contains @xmath138 as @xmath69th entry , zeros before and ones after ) .",
    "since @xmath10 is well - behaved it satisfies the second part of condition [ condition_h ] , hence for the fixed @xmath28 and @xmath29 there exists @xmath24 such that for all @xmath14 and @xmath30 satisfying @xmath139 , @xmath140 we have @xmath26 .",
    "assume @xmath139 .",
    "define @xmath141 for any @xmath142 . since @xmath139 and @xmath143 , @xmath26 by condition [ condition_h ] : as the @xmath69th hypothesis is rejected in @xmath144 and hence also in @xmath39 , it follows that @xmath145 .",
    "this holds true for all @xmath137 , thus @xmath146 and hence @xmath147 .",
    "+ case 2 : @xmath148",
    ". then @xmath149 . using @xmath136 with @xmath150 $ ] and @xmath151 with @xmath152 , the same argument as in case @xmath153 yields @xmath154 .      1 .",
    "the function @xmath63 is non - decreasing in @xmath69 : suppose w.l.o.g .",
    "if @xmath157 then @xmath158 by definition of @xmath68 as the maximum of @xmath71 and @xmath72 .",
    "if @xmath159 then @xmath160 .",
    "@xmath68 is continuous in @xmath14 as the maximum of two continuous functions ( in this case in @xmath14 ) is continuous .",
    "the function @xmath68 is also non - decreasing in @xmath14 : indeed , fix @xmath69 , let @xmath13 and suppose w.l.o.g .  @xmath156 . if @xmath161 then @xmath162 by definition of @xmath68 as the maximum of @xmath71 and @xmath72 .",
    "otherwise , @xmath163 .      1 .",
    "the function @xmath63 is non - decreasing in @xmath69 : suppose w.l.o.g .",
    "@xmath156 . if @xmath157 then @xmath165 by definition of @xmath68 as the minimum of @xmath71 and @xmath72 .",
    "if @xmath159 then @xmath158 .",
    "@xmath68 is continuous in @xmath14 as the minimum of two continuous functions ( in this case in @xmath14 ) is continuous .",
    "the function @xmath68 is also non - decreasing in @xmath14 : indeed , fix @xmath69 , let @xmath13 and suppose w.l.o.g .  @xmath156 . if @xmath161 then @xmath163 .",
    "otherwise , @xmath166 ( by definition of @xmath68 as the minimum ) .",
    "since @xmath80 is non - decreasing in @xmath69 , it is immediate to verify that @xmath167 is also non - decreasing in @xmath69 . for a given constant @xmath14 , the second part of condition [ condition_threshold ]",
    "can be ignored as shown in ( * ? ? ?",
    "* condition 1 ) and is hence automatically satisfied ( see section [ section_basic ] ) ."
  ],
  "abstract_text": [
    "<S> statistical discoveries are often obtained through multiple hypothesis testing . </S>",
    "<S> a variety of procedures exists to evaluate multiple hypotheses , for instance the ones of benjamini - hochberg , bonferroni , holm or sidak . </S>",
    "<S> we are particularly interested in multiple testing procedures with two desired properties : monotonic and well - behaved procedures . </S>",
    "<S> this article investigates to which extent the classes of ( monotonic and well - behaved ) multiple testing procedures , in particular the subclasses of so - called step - up and step - down procedures , are closed under basic set operations , specifically the union , intersection , difference and the complement of sets of rejected or non - rejected hypotheses . </S>",
    "<S> the present article proves two main results : first , taking the union or intersection of arbitrary ( monotonic and well - behaved ) multiple testing procedures results in new procedures which are monotonic but not well - behaved , whereas the complement or difference generally preserves neither property . </S>",
    "<S> second , the two classes of ( monotonic and well - behaved ) step - up and step - down procedures are closed under taking the union or intersection , but not the complement or difference .    _ </S>",
    "<S> keywords : _ multiple hypothesis testing , statistical significance , step up procedure , set operations , monotonicity </S>"
  ]
}
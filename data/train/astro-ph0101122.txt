{
  "article_text": [
    "every scientific payload adopting the esa packet telecommand ( tc ) and telemetry ( tm ) standards uses the tc and tm source packet structures in order to receive the commands which determine the payload set up and operations , and to send the data generated by its subsystems .",
    "these standards dictate the guidelines for the packet structure , as formed by an header , a data field and a trailer .",
    "they also state the information to be included in the header and in the trailer in order to allow the verification and decoding of the packet content . among them , the application identifier ( apid ) is required to identify the subsystem which is the destination or the source of the tc or the tm packet , respectively .",
    "in addition , for a given apid , the type / subtype keywords identify the specific operative mode under which the data have been produced , and , then , the structure of the data contained in the data field .",
    "suitable electrical ground support equipment ( egse ) hardware and software are required in order to test and verify , before launch , all the payload functionality and performances . to this purpose",
    ", the egse provides the simulation of the relevant missing on  board subsystems , generates and sends to the payload the tc packets , receives and archives all the tm packets . by inspecting in near real time the tm reports and the tm housekeeping packets ,",
    "the egse verifies the correct execution of the tc , and is able to monitor the payload health , as required to support the basic engineering tests .",
    "in addition , a big effort is required to the egse software developers in order to allow the egse operator to easily verify all the different scientific operative modes , and , in particular , to verify and calibrate the scientific performance of the detectors illuminated with x and @xmath0ray sources or beams .",
    "the use of the esa tc / tm standards , allowed us to adopt the common design concept sketched in figure  [ t1.10-fig-1 ] , where the egse is limited to the engineering functionality , while the scientific functionality is provided by the science console , which receives in near real time , from the egse , a copy of all the tc and tm packets .",
    "the egse was procured by the industry , and the science console software was in charge of the scientific team responsible for the instrument acceptance test and calibration .",
    "the discos ( detector independent science console subystem ) software we present in the following sections , is the part of the science console software which was integrated with various detector specific software written in order to unpack the information contained in the tc / tm packets and to perform the quick look on the scientific data .",
    "the current version , which is being developed for the agile mission ( trifoglio et al . 2000 ) , profits from the experience gained with the previous versions which have been exploited for the xmm  epic mission ( trifoglio et al . 1997 ; trifoglio et al .",
    "1998 ) , and the integral  ibis mission ( la rosa et al . 1999 ; trifoglio et al . 1999 ) .",
    "the discos software consists of the c programs ( monitor , receiver , archiver and provider ) which allow the science console to acquire , verify and archive in near real time the tc / tm packets in one set of files for each measurement setup , and to reconstruct , either in live or in playback mode , the various stream of tm scientific packets pertaining to the various operative mode , i.e having the same apid / type / subtype .",
    "figure  [ t1.10-fig-2 ] sketches how these programs interact together and with the unpacking programs ( processors ) and the quick look programs ( quick look analysis and graphical display ) to be written by the discos users",
    ".    once started from a shell script , every second the monitor updates on a screen window the status information and relevant parameters that the concerned programs write on the shmmon shared memory by using specific routines .",
    "in addition , the monitor program allows the operator to generates fake start / stop tc , to be used by the science console in order to close and open the measurements files independently from the tc packets generated by the egse .",
    "the receiver is the program which interfaces the egse through a tcp / ip or udp socket on an ethernet lan 10/100 baset",
    ". once started from a shell script , it waits as a server , and , in the tcp / ip case , establishes with the egse a stream socket connection .",
    "hence , using a fork the receiver generates the archiver program .",
    "as long as the connection is active , the receiver performs a reading loop . on each iteration , by using a non blocking call it reads from the monitor task message queue the next fake tc packet , if any ; and by using a blocking call , it reads from the lan in order to acquire the next tc / tm packet . for each packet ,",
    "the receiver inspects the header in order to verify the application identifier ( apid ) , the source sequence counter ( ssc ) and the packet length .",
    "hence , by using a blocking call , the receiver sends through a message queue the packet to the archiver program , and restarts reading . in case",
    "a start / stop measurement commands is detected , the receiver waits until the archiver message queue is empty , then it sends a sigint signal to terminate the running archiver , forks a new archiver , and eventually restarts reading .",
    "every time is started , the archiver opens a new set of raw files : one to contain all tc / tm packets , and one for the tc and the tm housekeeping only .",
    "their locations and names are automatically derived from the progressive number ( run i d ) which identifies the measurement .",
    "an additional suffix is used to identify the files containing the data generated during the instrument configuration . by using blocking calls",
    ", the archiver reads each tc / tm packet from the message queue and writes each packet on the local disk using low level c  unix unformatted i / o routines . upon receiving a sigint signal from the receiver ,",
    "the archiver completes the reading and archiving of any tc / tm packet from the message queue , closes the raw files , and then terminates itself .",
    "the provider reads and sorts the tc / tm packets from the raw file .",
    "this program is run by a shell script either in live or in playback mode . in the former , the raw file name is derived from the current run i d and the forthcoming tc / tm packets are read upon receiving the sigusr1 signal from the receiver . in the playback mode ,",
    "the program starts reading from the raw file which name has been provided by the script . for each packet ,",
    "the provider verifies the correctness of the packet header , sorts the packet by apid , and writes the packet in the column of the shared memory shm assigned to the apid .",
    "indeed , this shared memory is managed as a two  dimensional circular buffer capable of containing some hundreds of packets for each apid .",
    "information exchanged with the provider , through the shared memory shms , allows each processor to read new tc / tm packets having the required apid as soon as they are available in the shared memory shm .",
    "a synchronization mechanism guarantees that no tc / tm packet is overwritten until it has been read by the related processor . unless a time out is expired , before overwriting the provider waits for a sigusr2 signal generated by the concerned processor to notify that the new data have been already read .    in order to allow the interfacing with the detector specific programs ,",
    "the discos software includes a set of c , fortran and idl callable routines .",
    "they allow the user to write the processors as separated programs which have access to the monitor window and to the various source packet streams sorted by apid , without having to deal neither with the egse interfacing , nor with the tc / tm packet acquisition , verification and archiving .",
    "usually , one processor program is run for each apid . for each sorted stream",
    ", the processor has access to 100% of the acquired packets , irrespective of both the input rate and the processing to be performed on the packet .",
    "a typical processor reads the tc / tm packets from the shared memory shm , verifies and archives the instrument data extracted from the packet data field in a format suitable for further off  line analysis ( e.g. fits format ) .",
    "other discos routines allows the processor to communicate these data , through the shared memory shmf , to another user s program , written in idl , which is devoted to quick look purposes . depending on the selected mechanism , on each call the quick look program receives the unpacked data related to either the next or the last packet processed by the processor .",
    "a typical quick look program produces and displays in near real time further data products ( e.g. time profile , spectra , and images ) allowing the user interaction .",
    "the discos software presented herein has demonstrated its effectiveness and re  usability in the science consoles developed for several egse and test equipments which have been designed adopting the esa packet telemetry and telecommand standards for the instrument data and commands transport structure . the software architecture and implementation has allowed a simple porting from the original hp  ux unix workstation platform to the linux pc platforms with the gnu compiler collection ( gcc ) ."
  ],
  "abstract_text": [
    "<S> the esa packet telemetry and telecommand standards accommodate the requirements of a great variety of scientific space missions , thus providing a standard basis for cost - effective and technically compatible developments of on  board and on - ground data handling systems for a wide range of projects . </S>",
    "<S> this paper describes the design and the implementation of a detector  independent software , running on unix platforms , which has been developed for the near real time acquisition , archiving , and basic processing of the esa based telemetry and telecommand data produced during the on ground testing and calibration of various x and @xmath0ray space borne detectors . </S>"
  ]
}
{
  "article_text": [
    "let @xmath10 be a simple undirected graph with vertex set @xmath11 and edge set @xmath12 .",
    "the closed neighbourhood of a vertex @xmath13 , which consists of the vertex itself and all the adjacent vertices , is denoted by @xmath14 $ ] .",
    "in addition , we write @xmath15=\\bigcup_{v\\in x } n[v]$ ] for @xmath16 . in @xcite , a subset @xmath17 is called a @xmath2-_identifying code _ if @xmath18\\cap c \\neq n[y]\\cap c\\ ] ] for any two distinct subsets @xmath16 and @xmath19 of size at most @xmath4 ( one of them can be the empty set ) .",
    "the elements of a code @xmath0 are called _",
    "identifying codes were introduced by karpovsky , chakrabarty and levitin in @xcite and can be applied to locate objects in sensor networks @xcite .",
    "a network is modelled by a graph and a sensor can check its closed neighbourhood .",
    "it gives an alarm if it detects at least one of the sought objects there .",
    "suppose we have a @xmath20-identifying code @xmath0 in the graph , and we place the sensors to the vertices corresponding to the codewords of @xmath0 .",
    "then , knowing the set of alarming sensors @xmath21 , we can determine where the objects are ( assuming that there are at most @xmath4 of them ) .",
    "indeed , we have @xmath22\\cap c$ ] for some subset @xmath3 of size at most @xmath4 , and because these are unique , we can determine @xmath3  the set of vertices where the objects are .",
    "of course , we would like to use as few sensors as possible , so our aim is to find identifying codes with smallest possible cardinality .",
    "for infinite grids , we define below the measure _ density _ for this purpose .    identifying codes",
    "have been considered , for example , in the following infinite grids : the square grid , the triangular grid , the king grid and the hexagonal mesh @xcite . for more papers concerning the topic of identification ,",
    "see @xcite . in this paper , we focus on @xmath23-identifying codes in the king grid .",
    "the king grid has vertex set @xmath24 and two vertices are adjacent if and only if the euclidean distance between them is at most @xmath25 hence , the closed neighbourhood of a vertex consists of nine vertices ( see figure [ fig : king ] ) .",
    "( -3.7,-2.7 ) rectangle ( 6.7,3.7 ) ;    ( -6.9,-5.9 ) grid ( 6.9,5.9 ) ; ( -15.9,-15.9 ) grid [ xstep=1.414,ystep = 1.414 ] ( 15.9,15.9 ) ; ( -10.9,-10.9 ) grid [ xstep=1.414,ystep = 1.414 ] ( 10.9,10.9 ) ;    in -6, ... ,6 in -5, ... ,5 ( ) at ( , ) ;    in -5, ... ,5 in -13,-11,-9,-6,-4,-2,1,3,5 at ( + + 5 , ) ;    ( -2.5,-1.5 ) rectangle ( 4.5,-0.5 ) ; ( -1.5,-0.5 ) rectangle ( 5.5,0.5 ) ;    in @xcite , a construction of a @xmath23-identifying code in the infinite king grid with density @xmath26 is given ( see figure [ fig : king ] ) .",
    "recently , in @xcite , a lower bound of @xmath27 was obtained . in this paper , we show that our approach which utilizes certain _ frames _ , improves this lower bound to @xmath9 .",
    "we call _ code _ any subset of @xmath24 . as usual ,",
    "the _ density _ @xmath28 of a code @xmath29 is defined by : @xmath30 where @xmath31 .",
    "the next theorem gives the previously known bounds for the optimal density of a @xmath6-identifying code in the king grid .",
    "[ thm : previous ] let @xmath32 be the optimal density of a @xmath6-identifying code in the king grid",
    ". then @xmath33 .    to prove bounds on the density of a code @xmath0 ,",
    "one method is to use a finite subset @xmath3 of @xmath24 . for any vertex @xmath34 ,",
    "we denote by @xmath35 or @xmath36 the set @xmath37 , and by @xmath38 the average number of codewords of @xmath0 in the translations of @xmath3 : @xmath39 .",
    "if we have some knowledge about @xmath38 , we can get results on the density of @xmath0 with the following proposition .",
    "[ prop : dens ] let @xmath0 be a code of @xmath24 and @xmath3 a nonempty finite subset of @xmath24 , then : @xmath40    let @xmath41 be an integer such that @xmath42 .",
    "let @xmath43 be a positive integer .",
    "a vertex of @xmath44 , for @xmath45 is either in @xmath46 , or in @xmath47 . among all the sets @xmath44 , with @xmath45 , each vertex of @xmath46",
    "is counted exactly @xmath48 times and each vertex of @xmath47 is counted at most @xmath48 times .",
    "hence we have :    @xmath49    by dividing every term by @xmath50 , we obtain : @xmath51    since @xmath41 is a fixed integer , we have : @xmath52 . as @xmath53",
    "we obtain :    @xmath54    to end the proof , one can easily verify that @xmath55 .",
    "the identifying code problem can be seen as a covering problem .",
    "indeed , a code @xmath0 is a @xmath2-identifying code if and only if , for any two distinct subsets of vertices , @xmath3 and @xmath56 , of size at most @xmath4 , the symmetric difference @xmath15\\delta n[y]$ ] is covered by at least one element of @xmath0 .",
    "the following theorem , from @xcite , reduces ( in the case of the king grid ) the family of sets that a code has to cover to be a @xmath6- identifying code .",
    "[ thm : equiv ] a code @xmath0 is a @xmath6-identifying code in the king grid if and only if , for all @xmath57 , the sets    1 .   [ set4 ] @xmath58 , 2 .   [ sethori ]",
    "@xmath59 3 .",
    "[ setvert ] @xmath60    each contain at least one codeword of @xmath0 .",
    "note that theorem  [ thm : equiv ] together with proposition  [ prop : dens ] directly implies that the density of a @xmath6-identifying code of the king grid is at least @xmath61 . to improve this lower bound ( and the one of theorem  [ thm : previous ] ) , we will use , as the set @xmath3 of proposition  [ prop : dens ] , the set of figure [ fig : not ] ( without loss of generality",
    ", one can set the left - lower corner of this set to be the origin ) .",
    "we call _ frame _ any set isomorphic to the set of figure  [ fig : not ] . the aim of this paper is to give a lower bound on the average number of codewords in a frame .",
    "more precisely , we will use a discharging procedure to show that the average number of codewords in a frame is at least @xmath62 .",
    "hence , we will need to consider the _",
    "neighbourhood _ of a frame .",
    "there is a natural bijection between all the frames and the set @xmath24 .",
    "we will also consider the _ frames lattice _ over the set of all frames , where the distance between two frames will be the distance in the king grid between the two corresponding vertices .",
    "as an example , the _ @xmath63-ball _ of a frame @xmath64 is the set of frames @xmath65    we will often study a frame together with all the vertices at distance at most two of some vertex of the frame .",
    "therefore , we will use the notation * xy * with * x*@xmath66*a - h * and * y*@xmath66*a - h * , for a vertex on line * x * and row * y * with respect to the coordinates of figure [ fig : not ] .",
    "the four vertices in positions * cc * , * cf * , * fc * and * ff * are called the _ corners _ of the frame .",
    "side _ of a frame is a set of four vertices of the frame lying in the same line or column .",
    "the conditions of theorem  [ thm : equiv ] can be reformulated using our terminology .",
    "a code @xmath0 is a @xmath6-identifying code in the king grid , if and only if for each frame @xmath64 :    * condition 1 : * at least one corner of @xmath64 is a codeword of @xmath0 .",
    "* condition 2 : * each set of three consecutive vertices on a side of @xmath64contains at least one codeword of @xmath0 .",
    "( -4.7,-4.7 ) rectangle ( 3.7,3.7 ) ; ( -4.9,-4.9 ) grid ( 3.9,3.9 ) ; ( -15.9,-15.9 ) grid [ xstep=1.414,ystep = 1.414 ] ( 15.9,15.9 ) ; ( -10.9,-10.9 ) grid [ xstep=1.414,ystep = 1.414 ] ( 10.9,10.9 ) ; in -4, ... ,3 in -4, ... ,3 ( ) at ( , ) ;    / in 3/a , 2/b , 1/c , 0/d , -1/e , -2/f , -3/g , -4/h at ( -5 , ) ; / in 3/a , 2/b , 1/c , 0/d , -1/e , -2/f , -3/g , -4/h at ( -1-,4 ) ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in the following , we assume that @xmath0 is a @xmath6-identifying code of the king grid",
    ". given an integer @xmath67 , a _",
    "_ @xmath68-frame _ ) is a frame containing exactly @xmath67 ( resp .",
    "at least @xmath67 ) vertices of @xmath0 .",
    "[ lem : fourcorners ] let @xmath64 be a frame , then @xmath64 is a @xmath69-frame .",
    "if @xmath64 is a @xmath70-frame , then all its codewords are in the corners of @xmath64 .",
    "it is easily observed that any frame @xmath64 can be partitioned into four sets of three consecutive vertices on a line or column .",
    "hence , by condition 2 , @xmath64 contains at least four codewords .",
    "assume that @xmath64 contains exactly four codewords .",
    "by condition 1 , one of the codewords must be in a corner , say in position *",
    "cc*. then , by condition 2 , there must be another codeword on line * c*. if it was on column * d * or * e * , one could partition the remaining vertices into three sets of three consecutive vertices on a line or column and @xmath64 would be a @xmath71-frame , a contradiction .",
    "so there is a codeword in position * cf*. using similar arguments , the two other codewords must be in positions * fc * and * ff*.    [ obs : nc ] if a frame has three non - corner codewords on two of its sides , then it is a @xmath72-frame .",
    "assume first that the three non - corner codewords lie on opposite sides .",
    "without loss of generality , we can assume there are in positions * cd * , * ce * and * fd*. by condition 1 , there must be one codeword in a corner .",
    "assume it is in column * c*. then , by condition 2 , there must be another codeword in column * c * and one in column * f * , leading to a @xmath72-frame .",
    "if the corner codeword is in column * f * , then there would be two codewords in column * f * and one in column * c * , leading again to a @xmath72-frame .",
    "we assume now that the three non - corner codewords are on adjacent sides . without loss of generality",
    ", we can assume they are not in the set @xmath73 composed by line * c * and column * f*. by condition 2 , there are at least two codewords in @xmath73 . by condition 1 , there is a codeword in a corner .",
    "if there is a codeword in position * fc * then @xmath64 is a @xmath72-frame .",
    "otherwise , there is a corner codeword in @xmath73 and then there must be three codewords in @xmath73 , leading to a @xmath72-frame .",
    "[ obs : co ] if a frame @xmath64 has a corner codeword @xmath74 and two non - corner codewords on one of the sides of @xmath64 that @xmath74 does not belong to , then @xmath64 is a @xmath72-frame .    without loss of generality",
    ", we assume that there are three codewords in positions * cc * , * fd * and * fe*. by condition 2 , there must be another codeword in column * c * , another codeword in line * c * and one among positions * df * , * ef * and * ff*. hence , @xmath64 is a @xmath72-frame .",
    "[ lem : four ] let @xmath64 be a @xmath70-frame",
    ". then the four frames @xmath75 are @xmath72-frames .    by lemma",
    "[ lem : fourcorners ] , the four codewords of @xmath64 are its four corners . by condition @xmath76 applied on @xmath77 ,",
    "there is a codeword on either position * cg * or position * fg*. hence by observation  [ obs : nc ] , @xmath78 is a @xmath72-frame .",
    "the claim is obtained by symmetry .",
    "lemma  [ lem : four ] gives a short proof of a result first given in @xcite .",
    "the proof is a warm - up for our main result .",
    "[ thm : mikko ] the density of any @xmath6-identifying code of the king grind is at least @xmath27 .",
    "let @xmath0 be a @xmath6-identifying code of the king grid .",
    "we use the discharging method to show that the average number of codewords in a frame is at least @xmath79 .",
    "since the size of each frame is @xmath80 , the result will follow by proposition  [ prop : dens ] .    in the beginning , each @xmath67-frame has charge @xmath67 .",
    "then , each @xmath72-frame @xmath64 gives charge @xmath81 to each @xmath70-frame among frames @xmath75 . by lemma  [ lem : fourcorners ] , there exist only @xmath69-frames . by lemma  [ lem : four ] ,",
    "each @xmath70-frame receives charge @xmath76 and each @xmath72-frame gives at most charge @xmath76 away .",
    "so after the discharging process , each frame has at least charge @xmath79 .",
    "each frame only gives charge to vertices at distance at most 2 , hence the average number of codewords of @xmath0 in a frame is at least @xmath79 and we are done .    in the following",
    ", we will prove our main result :    [ thm : main ] the density of any @xmath6-identifying code of the king grid is at least @xmath82 .    to prove this theorem , we will use a similar technique than the one of the proof of theorem [ thm : mikko ] , but giving a final charge of more than @xmath79 to each frame .",
    "hence , a charge of @xmath79 can be seen as the reference value for the charge of a frame .",
    "we say that the _ charge excess _ of a @xmath67-frame is @xmath83 .",
    "charge excess _ within a subset @xmath73 of frames is the sum of the charge excesses of all the frames of @xmath73 .",
    "we now prove some results on the structure of @xmath0 in the viewpoint of the frames .",
    "we call _ @xmath70-benefactor _ a @xmath72-frame @xmath64 having a @xmath70-frame among frames @xmath75 .    [ lem:4benef ]",
    "let @xmath64 be a @xmath70-benefactor .",
    "then @xmath64 has @xmath72-frames in each corner position of its @xmath63-ball being at distance  @xmath63 from the @xmath70-frames among @xmath75 .",
    "moreover , if @xmath64 is a @xmath84-frame , there is a unique @xmath70-frame among frames @xmath75 .",
    "if @xmath64 is a @xmath85-frame , there are at most two @xmath70-frames among frames @xmath75 .    the first part of the claim is a direct consequence of lemma  [ lem : four ] .",
    "there is at least one @xmath70-frame among @xmath75 , without loss of generality , we can assume that @xmath86 is a @xmath70-frame .",
    "then @xmath78 can not be a @xmath70-frame since then , no corner of @xmath64 is a codeword , contradicting condition @xmath76 on @xmath64 .",
    "suppose now that there is another @xmath70-frame among @xmath87 , say @xmath88 . as before , @xmath89 can not be a @xmath70-frame . by condition @xmath76 applied on @xmath64 , there is a codeword in position * ff*. by condition 1 applied on @xmath90 and @xmath91 , there are two codewords among positions * ce , fe , ec * and * ef*. hence @xmath64 is a @xmath85-frame and we are done .",
    "( -2,-2 ) grid ( 3,3 ) ; ( 0,0 ) rectangle ( 1,1 ) ; ( -2,-2 ) rectangle ( 3,3 ) ; at ( 0.5,0.5 ) @xmath92 ; at ( -1.5,-1.5 ) @xmath72 ; at ( -1.5,2.5 ) @xmath72 ; at ( -1.5,0.5 ) @xmath70 ; in -0.5,0.5,1.5,2.5 at ( , 2.5 ) @xmath93 ; at ( , -1.5 ) @xmath93 ; in -0.5,0.5,1.5 at ( 2.5 , ) @xmath93 ; at ( 1.5 , ) @xmath94 ;    at ( 0.5,1.5 ) @xmath94 ; at ( 0.5,-0.5 ) @xmath94 ; at ( -0.5,-0.5 ) @xmath95 ; at ( -0.5,1.5 ) @xmath95 ; at ( -1.5,-0.5 ) @xmath93 ; at ( -1.5,1.5 ) @xmath93 ; at ( -0.5,0.5 ) @xmath93 ;    the @xmath72-frames in the corner positions of a @xmath70-benefactor @xmath72-frame described in the previous lemma are called the _ co - benefactors _ of @xmath64 .",
    "the next lemma is valid for other cases by smmetry .",
    "[ lem:4benef6 ] let @xmath64 be a @xmath70-benefactor @xmath84-frame oriented as in figure  [ fig:4benef ] .",
    "then :    * frame @xmath64 has at least two @xmath72-frames @xmath96 , @xmath97 in its @xmath63-ball ( in addition to its co - benefactors ) . *",
    "if @xmath64 has no @xmath72-frame in a @xmath95- or @xmath94-position , then @xmath64 has at least three @xmath72-frames in its @xmath63-ball ( in addition to its co - benefactors ) , or one of its co - benefactors is a @xmath85-frame and @xmath90 is not a @xmath72-frame .    in this proof",
    ", we will often use conditions 1 and 2 without explicitly referring to them .    by condition 1 applied on @xmath90 ,",
    "there is a codeword in either * ce * or * fe*. without loss of generality , we may assume that there is a codeword in position * ce * ( the other case follows by symmetry ) .    since @xmath64 is not a @xmath85-frame ,",
    "there is no codeword in position * fe * and only one codeword among positions * dc * and * ec*.    assume there is a codeword in position * ec * and no codeword in position * dc*. due to condition 2 , there is a codeword in * de*. hence , by observation  [ obs : nc ] , @xmath98 is a @xmath72-frame .",
    "if @xmath90 is a @xmath72-frame , we are done .",
    "otherwise , @xmath99 is a @xmath72-frame and we are also done .",
    "assume now that there is no codeword in position *",
    "ec*. then by condition 2 , there is a codeword in position * dc*.",
    "if there is a codeword in position * de * , @xmath90 is a @xmath72-frame and , by observation  [ obs : co ] , @xmath98 is a @xmath72-frame and we are done .",
    "hence we may suppose that there is no codeword in position * de*. this implies that there is a codeword in position * df * , and no codeword in position * ef*.    if there is a codeword in position * cf * , by observation  [ obs : nc ] , @xmath91 is a @xmath72-frame . moreover , by observation  [ obs : co ] , @xmath77 is a @xmath72-frame and we are done .",
    "so , we may assume there is no codeword in position * cf * , which implies that there is a codeword in position * ff*.    if there is a codeword in position * gd * , by observation  [ obs : nc ] , @xmath100 and @xmath101 are @xmath72-frames and we are done .",
    "hence we may assume that there is no codeword in position * gd*.    if there is a codeword in position * fg * , @xmath77 is a @xmath72-frame and by observation  [ obs : nc ] , @xmath78 is a @xmath72-frame and we are done .",
    "so we may assume that there is no codeword in position * fg*.    if there is a codeword in position * db * , @xmath90 is a @xmath84-frame and by observation  [ obs : nc ] , @xmath102 is @xmath72-frame .",
    "if @xmath100 is a @xmath72-frame we are done , otherwise , by observation  [ obs : nc ] , @xmath89 is a @xmath72-frame .",
    "hence we may assume that there is no codeword in position * db*.    if there is no codeword in position * bf * , then there is a codeword in position * bc * , and by observation  [ obs : nc ] , @xmath103 is a @xmath72-frame .",
    "then , there must be a codeword among positions * bd * and * be * , implying that @xmath98 is a @xmath72-frame .",
    "hence we may assume that there is a codeword in position * bf*.    if there is a codeword in position * be * , by observation  [ obs : nc ] , @xmath104 and @xmath105 are @xmath72-frames and we are done .",
    "hence we assume that there is no codeword in position * be*.    if there is no codeword in position * eg * , by observation  [ obs : nc ] , @xmath106 and @xmath105 are @xmath72-frames . now ,",
    "if there is a codeword in * bd * , then by observation  [ obs : nc ] , @xmath107 is a @xmath72-frame and we are done .",
    "otherwise , there is a codeword in * bc * and * ba * , and @xmath103 is a @xmath84-frame , and we are done .",
    "so , assume that there is a codeword in position * eg*.    if there is a codeword in position *",
    "dg * , then @xmath77 is a @xmath72-frame and by observation  [ obs : nc ] , @xmath106 is a @xmath72-frame .",
    "so we assume there is no codeword in position * dg * , which implies that there is a codeword in position * gg * by condition 1 .",
    "if there is a codeword in position * gf * , by observation  [ obs : nc ] , @xmath89 and @xmath106 are @xmath72-frames .",
    "now , if there is a codeword in position * ge * , @xmath108 is a @xmath72-frame and we are done .",
    "otherwise , there is a codeword in position * gb * and @xmath102 is a @xmath72-frame .",
    "so we assume that there is no codeword in position * gf * , which implies that there is a codeword in position * ge*.    if there is a codeword in position * gb * , @xmath100 and @xmath102 are @xmath84-frames and we are done .",
    "so we assume that there is no codeword in position * gb*.    if there is a codeword in position * bd * , by observation  [ obs : nc ] , @xmath107 is a @xmath72-frame .",
    "moreover @xmath104 is a @xmath72-frame so we are done .",
    "so we assume there is no codeword in position *",
    "bd*. then there is a codeword in both positions * ba * and * bc * , implying that @xmath103 is a @xmath84-frame .",
    "if there is a codeword in position * cg * , @xmath77 is a @xmath84-frame and we are done .",
    "so , we assume there is no codeword in * cg*. then , by observation  [ obs : nc ] , @xmath99 is a @xmath84-frame .    now ,",
    "if @xmath101 is a @xmath72-frame we are done .",
    "otherwise , there is no codeword in position * hd * and exactly one codeword among positions * he * and * hf*. since @xmath89 is a @xmath71-frame , there is a codeword in position * hc*. by condition 1 , there is a codeword in position * ha*. this implies that @xmath109 is a @xmath110-frame and finishes the case analysis .",
    "a frame is called _ @xmath76-poor _",
    "_ @xmath63-poor _ ) if it is a @xmath79-frame having at most one @xmath84-frame in its @xmath63-ball ( resp .",
    "no @xmath72-frame at distance  @xmath76 and at most two @xmath84-frames at distance  @xmath63 ) .",
    "[ lem : five ] let @xmath64 be a @xmath79-frame , then @xmath64 has at least one @xmath72-frame in its @xmath63-ball .",
    "moreover , one of the following properties holds :    * @xmath64 has a @xmath84-frame at distance  @xmath76 and another @xmath72-frame in its @xmath63-ball , * @xmath64 has a total charge excess of at least @xmath111 within its @xmath63-ball , with at least two @xmath72-frames , * @xmath64 is @xmath76-poor and , up to symmetry , the configuration around @xmath64 is depicted on figure [ fig:1poor ] , * @xmath64 is @xmath63-poor and , up to symmetry , the configuration around @xmath64 is depicted on figure [ fig:2poor ] .",
    "( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -2,1),(-2,0),(-1,1),(-1,-2),(1,0 ) at ; at ( -0.5,-3.5 ) @xmath112 ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -2,1),(-2,0),(-1,1),(-1,-2),(1,-1 ) at ; at ( -0.5,-3.5 ) @xmath113 ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -2,1),(-2,0),(-1,1),(0,-2),(1,-1 ) at ; at ( -0.5,-3.5 ) @xmath114 ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -2,1),(-2,0),(0,1),(-1,-2),(1,0 ) at ; at ( -0.5,-3.5 ) @xmath115 ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -2,1),(-2,0),(0,1),(0,-2),(1,-1 ) at ; at ( -0.5,-3.5 ) @xmath116 ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -2,1),(-2,0),(0,1),(-1,-2),(1,-1 ) at ; at ( -0.5,-3.5 ) @xmath117 ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -2,1),(-2,0),(0,1),(0,-2),(1,0 ) at ; at ( -0.5,-3.5 ) @xmath118 ;",
    "( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -2,1),(-2,-1),(0,1),(0,-2),(1,-1 ) at ; at ( -0.5,-3.5 ) @xmath119 ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -2,1),(-2,-1),(0,1),(-1,-2),(1,0 ) at ; at ( -0.5,-3.5 ) @xmath120 ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -2,1),(-2,-1),(0,1),(-1,-2),(1,-1 ) at ; at ( -0.5,-3.5 ) @xmath121 ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -2,1),(-2,-2),(-1,1),(-1,-2),(1,0 ) at ; at ( -0.5,-3.5 ) @xmath122 ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -2,1),(-2,-2),(-1,1),(0,-2),(1,0 ) at ; at ( -0.5,-3.5 ) @xmath123 ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -2,1),(-2,-2),(-1,1),(0,-2),(1,-1 ) at ; at ( -0.5,-3.5 ) @xmath124 ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -2,1),(-2,-2),(0,1),(0,-2),(1,0 ) at ; at ( -0.5,-3.5 ) @xmath125 ;",
    "( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -2,1),(-2,-2),(-1,-2),(1,1),(1,0 ) at ; at ( -0.5,-3.5 ) @xmath126 ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -2,1),(-2,-2),(0,-2),(1,1),(1,0 ) at ; at ( -0.5,-3.5 ) @xmath127 ;",
    "( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -2,1),(-2,-2),(0,-2),(1,1),(1,-1 ) at ; at ( -0.5,-3.5 ) @xmath128 ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -2,1),(-2,-2),(1,-2),(1,1),(1,0 ) at ; at ( -0.5,-3.5 ) @xmath129 ;",
    "let @xmath64 be @xmath79-frame .",
    "we make a case analysis according to the configurations of @xmath64 depicted on figure  [ fig:5frames ] .",
    "note that cases @xmath112 to @xmath130 represent cases where @xmath64 has only one corner codeword , cases @xmath122 to @xmath125 are those cases where @xmath64 has exactly two corner codewords on the same side , cases @xmath126 to @xmath128 are the cases where @xmath64 has three corner codewords , and case @xmath129 is the case where @xmath64 has four corner codewords .",
    "the cases which are symmetric to those of figure  [ fig:5frames ] will follow from the same arguments .",
    "moreover , note that if @xmath64 had exactly two corner codewords on opposite corners , by condition 2 , each side of @xmath64 would contain an additional codeword and @xmath64 would be a @xmath72-frame .    by observation  [ obs : nc ] , @xmath90 and",
    "@xmath91 both are @xmath72-frames and we are done .    by observation  [ obs : nc ] , @xmath90 is a @xmath72-frame . by observation  [ obs : co ]",
    ", @xmath91 is a @xmath72-frame and we are done .    by observation  [ obs : co ] ,",
    "@xmath90 and @xmath91 both are @xmath72-frames and we are done .    by observation  [ obs : nc ] , @xmath91 is a @xmath72-frame .",
    "now , by condition 2 , there is a codeword on either position * dd * or * ed*. in either case , by observation  [ obs : nc ] , @xmath131 or @xmath108 respectively , is a @xmath72-frame and we are done .    by observation  [ obs : co ]",
    ", @xmath91 is a @xmath72-frame .",
    "now , by condition 2 , there is a codeword on either position * dd * or * de*. in either case , by observation  [ obs : nc ] , @xmath100 or @xmath99 respectively , is a @xmath72-frame and we are done .    by observation  [ obs : co ] , @xmath91 is a @xmath72-frame .",
    "now , by condition 2 , there is a codeword in either position * dd * or * ed*. in both cases , by observation  [ obs : nc ] , @xmath100 or @xmath108 respectively , is a @xmath72-frame and we are done .    by observation  [ obs : nc ] , @xmath91 is a @xmath72-frame .",
    "if @xmath100 is a @xmath72-frame , we are done .",
    "otherwise , from the assumptions there are already four non - corner codewords in @xmath100 , hence @xmath100 is a @xmath79-frame and , by condition  1 , all its further non - corner positions contain no codeword .",
    "in particular , there is no codeword in both positions * dd * and * gd*. by condition 1 , there is a codeword on at least one of the positions * dg * and * gg*. hence , by observation  [ obs : nc ] , @xmath106 is a @xmath72-frame and we are done .",
    "assume there is no codeword in position *",
    "dd*. then , @xmath90 and @xmath99 are @xmath72-frames and we are done .",
    "so , assume there is a codeword in position * dd*.    if there is a codeword in position * ed * , by observation  [ obs : nc ] , @xmath86 and @xmath77 are @xmath72-frames .",
    "hence we may assume there is no codeword in position * ed * , and by symmetry , no codeword in position * de * either .",
    "if there is a codeword in position * ee * , by observation  [ obs : nc ] , @xmath104 and @xmath100 are @xmath72-frames .",
    "hence we may assume there is no codeword in position * ee*.    if there is a codeword in position * be * , by observation  [ obs : nc ] , @xmath104 and @xmath105 are @xmath72-frames .",
    "hence we may assume there is no codeword in position * be * , and by symmetry , no codeword in position * eb * either .",
    "by condition 1 , this implies that there is a codeword in position * bb*.    if there is a codeword in position * eg * , by observation  [ obs : nc ] , @xmath77 and @xmath99 are @xmath72-frames .",
    "hence we may assume there is no codeword in position * eg * , and by symmetry , no codeword in position * ge * either .",
    "if there is no codeword in position * bd * , by observation  [ obs : nc ] , @xmath88 and @xmath103 are @xmath72-frames .",
    "if @xmath104 is a @xmath72-frame , we are done .",
    "otherwise , by observation  [ obs : nc ] , @xmath99 is a @xmath72-frame and we are done too .",
    "hence we may assume there is a codeword in position * bd * , and by symmetry , another codeword in position * db*.    if there is a codeword in position * bc * , @xmath91 is a @xmath84-frame and by observation  [ obs : nc ] , @xmath98 is a @xmath72-frame , so we are done .",
    "hence we may assume there is no codeword in position * bc * , and by symmetry , no codeword in position * cb * either .",
    "if there is a codeword in position * gb * , @xmath100 and @xmath132 are @xmath72-frames .",
    "hence we may assume there is no codeword in position * gb * , and by symmetry , no codeword in position * bg * either .    if there is no codeword in position * gf * , there is , by condition 1 , a codeword in position * gc * and then @xmath100 is a @xmath84-frame .",
    "now , if there is no codeword in position * fg * , @xmath108 is a @xmath70-frame and by lemma  [ lem : four ] , @xmath104 is a @xmath72-frame and we are done .",
    "otherwise , by observation  [ obs : nc ] , @xmath101 is a @xmath72-frame .",
    "hence we may assume that there is a codeword in position * gf * , and by symmetry , another codeword in position * fg*.    if there is a codeword in position * gg * , @xmath108 is a @xmath84-frame and by observation  [ obs : nc ] , @xmath101 is a @xmath72-frame , so we are done .",
    "hence we may assume there is no codeword in position * gg*.    if there is a codeword in position * gc * , @xmath133 and @xmath100 is a @xmath72-frame , so we are done .",
    "hence we may assume there is no codeword in positions * gc * and * cg*.    if @xmath131 is a @xmath79-frame , by condition 2 , there is no codeword in position * ae * and a codeword on exactly one of the positions * ac * and * ad*. then there must be a codeword in position * af * because @xmath88 has a fifth codeword .",
    "but then @xmath105 is a @xmath72-frame .",
    "hence , there is a @xmath72-frame among @xmath131 and @xmath105 . by symmetry",
    ", there is also a @xmath72-frame among @xmath103 and @xmath109 .",
    "if @xmath132 is a @xmath72-frame , we are done .",
    "otherwise , there is no codeword in position * hd * , which implies that there is a codeword in position * hg * , as well as one codeword among positions * he * and * hf*. by symmetry , if @xmath99 is a @xmath79-frame , there a codeword in position * gh * , as well as a codeword among positions * eh * and * fh*. then , @xmath134 is a @xmath72-frame and we are done .    by condition 2 , there are at least two codewords among positions * dd * , * de * , * ed * and * ee*. if there are two codewords on the same column or line , ( resp .",
    "* d * , * d * , * e * , * e * ) , then by observation  [ obs : nc ] , resp .",
    "@xmath77 , @xmath133 , @xmath90 , @xmath91 , is a @xmath72-frame .",
    "hence , if there are three codewords among positions * dd * , * de * , * ed * and * ee * , there are two @xmath72-frames at distance  1 of @xmath64 and we are done .    therefore , we assume that there are exactly two codewords among positions * dd * , * de * , * ed * and * ee*. then by condition 2 , they can not lie on a same line or column .",
    "if there are codewords in positions * de * and * ed * , by observation  [ obs : nc ] , @xmath108 and @xmath98 are @xmath72-frames and we are done .",
    "hence , we assume that there are codewords in positions * dd * and * ee*.    if there is a codeword in position * eb * , by observation  [ obs : nc ] , @xmath103 is a @xmath72-frame , and by condition 2 , @xmath98 is a @xmath72-frame as well .",
    "hence we may assume there is no codeword in position * eb*.    if there is a codeword in position * cb * , by observation  [ obs : nc ] , @xmath86 is a @xmath72-frame , and by condition 2 , @xmath90 is a @xmath72-frame as well",
    ". hence we may assume there is no codeword in position * cb*.    if there is a codeword in position * gd * , @xmath108 is necessarily a @xmath72-frame , and by observation  [ obs : nc ] , @xmath101 is a @xmath72-frame .",
    "hence we may assume there is no codeword in position * gd*.    by symmetry , we can assume that there is no codeword in any of the positions * be * , * bc * and * dg*. using condition 2 , this implies that there are codewords in positions * db * and * bd*.    if there is a codeword in position * gg * , @xmath108 is necessarily a @xmath72-frame , and by observation  [ obs : nc ] , @xmath106 is a @xmath72-frame .",
    "hence we may assume there is no codeword in position * gg*.    if there is a codeword in position * ge * , @xmath108 is necessarily a @xmath72-frame .",
    "now , if there is a codeword in position * fb * , @xmath100 is necessarily a @xmath84-frame too .",
    "otherwise , either @xmath102 , @xmath98 or @xmath135 is a @xmath72-frame , and we are done .",
    "hence we may assume there is no codeword in position * ge * and by symmetry , there is no codeword in position * eg * either .    if there is a codeword in position * fb * ( resp . in position * bf * ) , @xmath90 ( resp .",
    "@xmath91 ) is necessarily a @xmath84-frame .",
    "if there is a codeword in both positions , we are done . hence by symmetry , without loss of generality",
    ", we can assume that there is no codeword in position * fb*. this implies that @xmath102 is a @xmath72-frame .",
    "if there is a @xmath72-frame at distance  1 of @xmath64 , we are done .",
    "otherwise , @xmath107 is a @xmath72-frame .",
    "if @xmath135 is a @xmath72-frame , we are done .",
    "otherwise , @xmath102 and @xmath107 are both necessarily @xmath85-frames and we are done too .",
    "assume that there are no codewords among positions * ed * and * ee*. then , by condition 2 , there are codewords on both positions * dd * and * de * , and by observation  [ obs : nc ] , @xmath133 and @xmath99 are @xmath72-frames .",
    "now , assume that there is a codeword in position * ed * or * ee*. then , by condition 2 , @xmath91 is a @xmath72-frame . if there is a codeword in position * ed * , by observation  [ obs : nc ] , @xmath108 is a @xmath72-frame .",
    "if there is a codeword in position * ee * , by observation  [ obs : nc ] , @xmath104 is a @xmath72-frame . in both cases",
    "we are done .    by observation  [ obs : nc ] , @xmath90 is a @xmath72-frame . by condition 1 , there is a codeword among positions * cb * and * fb*. then , by observation  [ obs : nc ] , @xmath86 is a @xmath72-frame and we are done .    by observation  [ obs : nc ] , @xmath90 is a @xmath72-frame . by condition 2",
    ", there is a codeword among positions * dd * and * ed*. if there is a codeword in position * dd * ( resp . *",
    "ed * and not in * dd * ) , by observation  [ obs : nc ] , @xmath104 ( resp .",
    "@xmath108 ) is a @xmath72-frame and we are done .    by observation  [ obs : nc ] , @xmath90 is a @xmath72-frame .",
    "if @xmath104 is a @xmath72-frame , we are done .",
    "otherwise , @xmath104 is a @xmath79-frame and it has a unique corner codeword in position * ed*. by condition 2 , this implies that there is a codeword in position * bc * , and then by observation  [ obs : nc ] , @xmath88 is a @xmath72-frame and we are done .",
    "assume first that there are no codewords among positions * de * and * ee*. then by condition 2 , there must a codeword on both positions * dd * and * ed*. then by observation  [ obs : nc ] , @xmath77 and @xmath86 are @xmath72-frames .    if there is a codeword in position * de * or * ee * ,",
    "then @xmath90 is a @xmath72-frame . if there is a codeword in position * de * ( resp . *",
    "ee * ) , by observation  [ obs : nc ] , @xmath108 ( resp .",
    "@xmath106 ) is a @xmath72-frame and we are done .    by observation  [ obs : nc ] , both @xmath90 and @xmath91 are @xmath72-frames .    by observation  [ obs : nc ]",
    ", @xmath91 is a @xmath72-frame . by condition 1",
    ", there is a codeword among positions * bc * and * bf*. then , by observation  [ obs : nc ] , @xmath88 is a @xmath72-frame .",
    "assume first that there is no codeword in position *",
    "de*. then , there must be codewords in both positions * dd * and * ee*. then , by observation  [ obs : nc ] , @xmath104 and @xmath100 are both @xmath72-frames .",
    "hence we can assume that there is a codeword in position * de * , and , by symmetry in position * ed*.    if there is a codeword in position * dd * , by observation  [ obs : nc ] , @xmath88 and @xmath133 are @xmath72-frames and we are done .",
    "hence we may assume there is no codeword in position * dd*.    if there is a codeword in position * ee * , by observation  [ obs : nc ] , @xmath91 and @xmath78 are @xmath72-frames and we are done .",
    "hence we may assume there is no codeword in position * ee*.    if there is a codeword in position * bc * or * bf * , by observation  [ obs : nc ] , @xmath88 is a @xmath72-frame and @xmath91 must be a @xmath72-frame too , so we are done .",
    "hence we may assume there is no codeword in positions * bc * and * bf * and , by symmetry , on positions * cb * and * fb*.    if there is a codeword in position * be * , then @xmath91 is a @xmath72-frame .",
    "now , if either @xmath98 or @xmath135 is a @xmath72-frame , we are done .",
    "otherwise , there is no codeword in position * ca * and hence there is a codeword in position * fa * by condition 1.this implies that @xmath102 is a @xmath72-frame , so we are done .",
    "hence we may assume there is no codeword in position * be * and , by symmetry , in position * eb*.    if there is a codeword in position * eg * , by observation  [ obs : nc ] , @xmath99 and @xmath134 are @xmath72-frames .",
    "if @xmath77 is a @xmath72-frame , we are done .",
    "otherwise , there is no codeword in position * dg * , and a codeword among positions * cg * and * fg*. if there is a codeword in position * fg * , by observation  [ obs : nc ] , @xmath108 is a @xmath72-frame . if there is a codeword in position * cg * , by observation  [ obs : nc ] , @xmath78 is a @xmath72-frame .",
    "hence we may assume there is no codeword in position * eg * and , by symmetry , in position * ge*.    if there is a codeword in position * gc * , by observation  [ obs : nc ] , @xmath89 and @xmath102 are @xmath72-frames .",
    "if there are only two @xmath84-frames and no additional @xmath72-frame in the @xmath63-ball of @xmath64 , @xmath64 is @xmath63-poor , then , using the same techniques than previously , one can check that the codewords around @xmath64 are fixed as in figure [ fig:2poor ] and we are done .",
    "otherwise , there is a total charge excess of at least @xmath111 within the @xmath63-ball of @xmath64 and we are done too .",
    "hence we may assume there is no codeword in position * gc * and , by symmetry , in position * cg*.    we note that @xmath108 is a @xmath72-frame .",
    "if @xmath108 is a @xmath84-frame and if it is the only @xmath84-frame within the @xmath63-ball of @xmath64 , then , one can check that @xmath64 is @xmath76-poor and that the codewords around @xmath64 are fixed as in figure [ fig:1poor ] , and so , we are done . otherwise , either @xmath108 is a @xmath85-frame and then @xmath101 is a @xmath72-frame , or @xmath108 is a @xmath84-frame and there exists another @xmath72-frame within the @xmath63-ball of @xmath64 . in both cases",
    "we are done .    by observation  [ obs : nc ] , @xmath91 is a @xmath72-frame . by condition 1 , there is a codeword among positions * bc * and * bf*. then , by observation  [ obs : nc ] , @xmath88 is a @xmath72-frame .",
    "( -4.7,-5.7 ) rectangle ( 4.7,3.7 ) ; ( -8.9,-8.9 ) grid [ xstep=1.414,ystep = 1.414 ] ( 6.9,6.9 ) ; ( -7.9,-6.9 ) grid [ xstep=1.414,ystep = 1.414 ] ( 6.9,6.9 ) ; ( -4.9,-5.9 ) grid ( 4.9,3.9 ) ; in -4, ... ,3 in -4, ... ,3 ( ) at ( , ) ;    / in 3/a , 2/b , 1/c , 0/d , -1/e , -2/f , -3/g , -4/h at ( -5.2 , ) ; / in 3/a , 2/b , 1/c , 0/d , -1/e , -2/f , -3/g , -4/h at ( -1-,4.2 ) ;    ; ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -4,-4),(-4,-1),(-4,1),(-4,3 ) , ( -3,-4 ) , ( -3,-3),(-3,0),(-3,2),(-2,-2),(-2,1),(-2,3),(-1,-3),(-1,-1),(-1,2),(0,-4),(0,-2),(0,0),(0,3),(1,-3),(1,-1),(1,1),(2,-2),(2,0),(2,2),(3,-4),(3,-1),(3,2),(3,3 ) at ;    ( -6,-7 ) rectangle ( -5,-6 ) ; at ( -1.8,-6.5 ) @xmath76-poor frame @xmath92 ;    ( -6,-7 ) rectangle ( -5,-6 ) ;    at ( -1.5,-6.5 ) @xmath76-poor benefactor ;    at ( 4,0 ) @xmath3 : not a @xmath76-poor frame ; at ( 4,-1 ) @xmath136 : maybe a @xmath76-poor frame ;    ( -6,-7 ) rectangle ( -5,-6 ) ; at ( -3,-6.5 ) @xmath72-frame ;    ( -3,-3 ) grid ( 4,4 ) ; ( 0,0 ) rectangle ( 1,1 ) ; ( -2,-2 ) rectangle ( 3,3 ) ; ( 1,-1 ) rectangle ( 2,0 ) ; at ( 0.5,0.5 ) @xmath92 ; at ( 1.5,-0.5 ) @xmath84 ; at ( 3.5,1.5 ) @xmath72 ; at ( -0.5,-2.5 ) @xmath72 ; at ( 0.5,-1.5 ) @xmath3 ; at ( 2.5,0.5 ) @xmath3 ; at ( 2.5,-1.5 ) @xmath136 ;    [ lem:1poor ] if @xmath64 is a @xmath76-poor frame , then @xmath64 has a @xmath84-frame @xmath137 at distance  @xmath76 such that :    * @xmath137 has at most two @xmath76-poor frames in its @xmath63-ball and each of them is at distance  @xmath76 of @xmath137 , * @xmath137 has at least two @xmath72-frames at distance  @xmath63 , * @xmath137 is not a @xmath70-benefactor .    by lemma  [ lem : five ] ,",
    "if @xmath64 is a @xmath76-poor frame , the neighbourhood of @xmath64 is fixed and depicted in figure [ fig:1poor ] ( up to symmetry ) .",
    "the only @xmath72-frame in the neighbourhood of @xmath64 is @xmath138 and contains exactly six codewords .",
    "the first point of the lemma follows from the fact that a @xmath76-poor frame must have a @xmath84-frame in a corner of its @xmath76-ball , however by using the left part of figure [ fig:1poor ] the positions marked by `` x '' on the right part of the figure can not host a @xmath76-poor frame .",
    "the second point follows using observation [ obs : nc ] on the left part of figure [ fig:1poor ] .",
    "the last point follows by noting that a @xmath70-benefactor must have two non - codeword corners in the same column or line , which is not the case here .",
    "a frame playing the role of @xmath137 in the previous lemma is called a _ @xmath76-poor - benefactor_.    ( -5.7,-5.7 ) rectangle ( 4.7,3.7 ) ; ( -8.9,-8.9 ) grid [ xstep=1.414,ystep = 1.414 ] ( 8.9,8.9 ) ; ( -8.9,-8.9 ) grid [ xstep=1.414,ystep = 1.414 ] ( 8.9,8.9 ) ; ( -5.9,-5.9 ) grid ( 4.9,3.9 ) ; in -4, ... ,3 in -4, ... ,3 ( ) at ( , ) ;    / in 3/a , 2/b , 1/c , 0/d , -1/e , -2/f , -3/g , -4/h at ( -6.2 , ) ; / in 3/a , 2/b , 1/c , 0/d , -1/e , -2/f , -3/g , -4/h at ( -1-,4.2 ) ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ;    ; ;    ( -2.5,-2.5 ) rectangle ( 1.5,1.5 ) ( -1.5,-1.5 ) rectangle ( 0.5,0.5 ) ;    in ( -4,-3),(-4,-1),(-4,1),(-4,3),(-3,-4),(-3,-3),(-3,0),(-3,2),(-2,-3),(-2,-2),(-2,1),(-2,3),(-1,-4),(-1,-1),(-1,2),(0,-2),(0,0),(0,3),(1,-3),(1,-1),(1,1),(2,-4),(2,-2),(2,0),(2,2),(3,-4),(3,-1),(3,2),(3,3 ) at ;    ( -6,-7 ) rectangle ( -5,-6 ) ; at ( -1.9,-6.5 ) @xmath63-poor frame @xmath92 ;    ( -6,-7 ) rectangle ( -5,-6 ) ; at ( -1.3,-6.5 ) @xmath63-poor - benefactor ;    ( -6,-7 ) rectangle ( -5,-6 ) ; at ( -3,-6.5 ) @xmath72-frame ;    at ( -4,-6.5 ) @xmath3 : not a @xmath63-poor frame ;    ( -3,-3 ) grid ( 4,4 ) ; ( 0,0 ) rectangle ( 1,1 ) ; ( -2,-2 ) rectangle ( 3,3 ) ; ( -2,-1 ) rectangle ( -1,0 ) ; at ( 0.5,0.5 ) @xmath92 ; at ( -1.5,-0.5 ) @xmath84 ; at ( 0.5,-1.5 ) @xmath84 ; at ( -2.5,-0.5 ) @xmath72 ; at ( -2.5,-1.5 ) @xmath72 ; at ( -0.5,-2.5 ) @xmath72 ; at ( -0.5,1.5 ) @xmath3 ; at ( -2.5,1.5 ) @xmath3 ;    [ lem:2poor ] if @xmath64 is a @xmath63-poor frame , then @xmath64 has two @xmath84-frames at distance  @xmath63 .",
    "one of them , say @xmath137 , has the following properties :    * @xmath137 is neither a @xmath70-benefactor nor a @xmath76-poor - benefactor , * @xmath137 has at least four @xmath72 frames in its @xmath63-ball , * @xmath137 has only one @xmath63-poor frame in its @xmath63-ball .    by lemma  [ lem : five ] , if @xmath64 is a @xmath63-poor frame , the neighbourhood of @xmath64 is fixed and depicted in figure [ fig:2poor ] ( up to symmetry ) .",
    "let @xmath139 .",
    "the first point of the lemma follows from the fact that , by lemma [ lem : five ] , a @xmath76-poor benefactor must have a @xmath84-frame in its @xmath63-ball ( and only this @xmath84-frame in its @xmath63-ball ) and that a @xmath70-benefactor must have two non - codeword corners in the same line or column ( hence , the only possibility would be that @xmath103 is a @xmath70-frame which is not true ) . the second point follows by using observation [ obs : nc ] on the left part of figure [ fig:2poor ] . for the third point , observe that the only possible locations for another @xmath63-poor frame in the @xmath63-ball of @xmath137 are those marked by an `` x '' on the right part of figure [ fig:2poor ] : @xmath140 and @xmath98 .",
    "however , both have two @xmath72-frames in their @xmath63-ball that do not match the codeword configuration of a @xmath63-poor frame as given on the left part of figure [ fig:2poor ] .    a frame playing the role of @xmath137 in the previous lemma",
    "is called a _ @xmath63-poor - benefactor_.",
    "we are now ready to describe the discharging procedure which leads to our result . in the beginning , each @xmath67-frame has charge @xmath67 .",
    "let @xmath141 .",
    "we apply the following rules :    1 .",
    "let @xmath64 be a @xmath70-benefactor @xmath84-frame without any @xmath85-frame among its co - benefactors .",
    "assume @xmath64 is oriented as in figure  [ fig:4benef ] ( other cases follow by symmetry ) .",
    "we consider two subrules : 1 .",
    "if there is a @xmath72-frame in a @xmath95-position of figure  [ fig:4benef ] , say in position @xmath98 ( the other case will be covered by symmetry ) , and no other @xmath72-frames in @xmath95- and @xmath94-positions of figure  [ fig:4benef ] , then @xmath64 gives charge @xmath142 to the @xmath70-frame @xmath86 , charge @xmath143 to frame @xmath91 , charge @xmath144 to the other @xmath79-frames in @xmath94-positions of figure  [ fig:4benef ] , charge @xmath145 to the other @xmath79-frame in @xmath95-position of figure  [ fig:4benef ] and charge @xmath143 to all the other @xmath79-frames in the @xmath63-ball of @xmath64 .",
    "2 .   otherwise , @xmath64 gives charge @xmath142 to the @xmath70-frame @xmath86 , charge @xmath144 to @xmath79-frames in @xmath94-positions of figure  [ fig:4benef ] , charge @xmath145 to @xmath79-frames in @xmath95-positions of figure  [ fig:4benef ] and charge @xmath146 to all the other @xmath79-frames in the @xmath63-ball of @xmath64 .",
    "2 .   let @xmath64 be a @xmath70-benefactor @xmath84-frame with a @xmath85-frame among its co - benefactors .",
    "assume @xmath64 is oriented as in figure  [ fig:4benef ] , and that @xmath135 is a @xmath85-frame ( other cases follow by symmetry ) .",
    "then @xmath64 gives the same charges than in rule 1b , except for the frame @xmath98 which receives no charge from @xmath64 .",
    "3 .   a @xmath70-benefactor @xmath85-frame @xmath64 gives charge @xmath142 to the @xmath70-frames among @xmath75 , charge @xmath147 to frames at distance  @xmath76 and charge @xmath148 to frames at distance  @xmath63 .",
    "4 .   a @xmath76-poor - benefactor , recall that it is a @xmath84-frame , gives charge @xmath147 to the @xmath76-poor frames in its @xmath63-ball , @xmath144 to the other @xmath79-frames at distance  1 and charge @xmath146 to the other @xmath79-frames at distance  2 .",
    "5 .   a @xmath63-poor - benefactor ,",
    "recall that it is a @xmath84-frame , gives charge @xmath144 to the unique @xmath63-poor frame in its @xmath63-ball , @xmath144 to the other @xmath79-frames at distance  1 and charge @xmath146 to the other @xmath79-frames at distance  2 .",
    "other @xmath84-frames give charge @xmath144 to @xmath79-frames at distance  1 and charge @xmath146 to @xmath79-frames at distance  2 .",
    "other @xmath85-frames give charge @xmath147 to @xmath79-frames at distance  1 and charge @xmath144 to @xmath79-frames at distance  2 .",
    "we note that the rules are not ambiguous . indeed , by lemmas  [ lem:1poor ] and  [ lem:2poor ]",
    ", a @xmath84-frame can be either a @xmath70-benefactor , a @xmath76-poor benefactor , a @xmath63-poor benefactor or not a benefactor at all , but never two at the same time .",
    "if @xmath64 has two @xmath70-frames among @xmath75 then it has at least three co - benefactors .",
    "hence , @xmath64 has at most eleven @xmath79-frames at distance  @xmath63 . by rule 3",
    ", @xmath64 gives at most charge @xmath151 .",
    "if @xmath64 has only one @xmath70-frame among @xmath75 , then it has two co - benefactors and hence , at most thirteen @xmath79-frames at distance  @xmath63 . by rule 3",
    ", @xmath64 gives at most charge @xmath152 .",
    "assume first that @xmath64 is a @xmath70-benefactor without any @xmath85-frame among its co - benefactors .",
    "if there were no other @xmath72-frames than the co - benefactors of @xmath64 within its @xmath63-ball , @xmath64 would give , according to rule 1 , charge @xmath155 .",
    "however , by lemma  [ lem:4benef6 ] , @xmath64 has at least two non - co - benefactor @xmath72-frames in its 2-ball .",
    "moreover by lemma [ lem:4benef6 ] as well , either one of those is on a @xmath95- or @xmath94-position , or there is a third non - co - benefactor @xmath72-frame in the @xmath63-ball of @xmath64 .",
    "we distinguish two cases .",
    "if there is an extra @xmath72-frame on a @xmath95-position and one on an @xmath93-position ( rule 1a applies ) , then we save charge at least @xmath156 from the extra frames and charge @xmath143 from frame @xmath91 .",
    "otherwise ( rule 1b applies ) , the total charge saved on the extra @xmath72-frames is at least @xmath157 .",
    "indeed , we save at least @xmath158 if the two extra @xmath72-frames are both on @xmath56-positions , @xmath159 if they are both on @xmath160-positions , @xmath161 for a @xmath160-position and a @xmath56-position , @xmath162 for a @xmath160-position and an @xmath3-position , and @xmath163 if there are three extra @xmath72-frames . in all cases , @xmath64 gives at most @xmath164 of charge .",
    "if @xmath64 is a @xmath70-benefactor with a @xmath85-frame among its co - benefactors , by lemma  [ lem:4benef6 ] , there are two @xmath72-frames in the @xmath63-ball of @xmath64 in addition to its two co - benefactors and they are at distance  @xmath63 from @xmath64 .",
    "hence , @xmath64 has at most eleven @xmath79-frames at distance  @xmath63 . by rule @xmath63",
    ", @xmath64 gives at most @xmath165 .",
    "if @xmath64 is a @xmath76-poor - benefactor , by lemma  [ lem:1poor ] , @xmath64 has at most two @xmath76-poor frames in its @xmath63-ball and each of them is at distance  1 of @xmath64",
    ". moreover , there are at least two @xmath72-frames at distance  2 of @xmath64 .",
    "we may assume that @xmath64 has two @xmath76-poor frames in its @xmath63-ball since by rule @xmath70 , @xmath64 would give away more charge in this case .",
    "now , by rule @xmath70 , @xmath64 gives at most @xmath166 .",
    "if @xmath64 is a @xmath63-poor - benefactor , by lemma  [ lem:2poor ] , @xmath64 has only one @xmath63-poor frame and at least four @xmath72-frames in its @xmath63-ball .",
    "we may assume that these frames are at distance  2 of @xmath64 since by rule @xmath79 , @xmath64 would give away more charge in this case . by rule @xmath79",
    ", @xmath64 gives at most @xmath167 .",
    "we first note that by our discharging rules , each @xmath84-frame @xmath137 gives at least charge @xmath143 to each @xmath79-frame of its @xmath63-ball , except in rule 2 where @xmath137 does not give anything to one @xmath79-frame @xmath169 at distance  @xmath76 of @xmath137 .",
    "however , @xmath169 has a @xmath70-benefactor @xmath85-frame at distance  @xmath76 , which , by rule 3 , gives charge @xmath157 to @xmath169 .",
    "let @xmath64 be a @xmath79-frame .",
    "by the previous paragraph , we can consider that @xmath64 receives at least charge @xmath143 from each @xmath84-frame in its @xmath63-ball . by rules @xmath111 and @xmath110",
    ", @xmath64 receives at least charge @xmath148 from each @xmath85-frame in its @xmath63-ball .",
    "hence , if @xmath64 has a total charge excess of at least @xmath111 within its @xmath63-ball , with two @xmath72-frames , @xmath64 receives at least charge @xmath157 and we are done .",
    "otherwise , by lemma  [ lem : five ] , @xmath64 is either @xmath76-poor , @xmath63-poor or has a @xmath84-frame at distance  @xmath76 and another one in its @xmath63-ball .",
    "if @xmath64 is @xmath63-poor , by lemma  [ lem:2poor ] , it has a @xmath63-poor - benefactor in its @xmath63-ball which , by rule 5 , gives charge @xmath148 to @xmath64 .",
    "moreover , by lemma  [ lem:2poor ] , @xmath64 has another @xmath72-frame in its @xmath63-ball which gives charge @xmath143 to @xmath64 .",
    "finally , suppose @xmath64 has a @xmath84-frame @xmath137 at distance  @xmath76 and another one , @xmath170 , in its @xmath63-ball .",
    "if @xmath64 receives charge @xmath148 from @xmath137 , we are done .",
    "otherwise , by our discharging rules @xmath137 is necessarily a @xmath70-benefactor . without loss of generality",
    ", we can assume that @xmath137 is oriented as in figure  [ fig:4benef ] .",
    "then @xmath137 gives always charge @xmath148 to the @xmath79-frames in @xmath94-positions , except in rule @xmath171 where @xmath172 receives only charge @xmath143 , but in this case , @xmath172 has three @xmath72-frames in its @xmath63-ball , so @xmath173 .",
    "frame @xmath174 has three @xmath72-frames in its @xmath63-ball , so @xmath175 .",
    "thus , we can assume that @xmath64 is on a @xmath95-position .",
    "hence , @xmath170 is also a @xmath70-benefactor . in this case , by rules 1 and 2 , both @xmath137 and @xmath170 give charge @xmath145 to @xmath64 , and we are done .      by lemma  [ lem : four ] , a @xmath70-frame @xmath64 has four @xmath70-benefactors . by rules @xmath76 , @xmath63 and @xmath111 ,",
    "each @xmath70-benefactor gives charge @xmath142 to @xmath64 .",
    "hence , @xmath64 receives charge @xmath176 and ends with charge @xmath149 .    after the application of our discharging rules , by lemmas  [ lem : d7 ] ,  [ lem : d6 ] ,  [ lem : d5 ] and  [ lem : d4 ] , each frame has charge at least @xmath177 , therefore , the average number of codewords in each frame is at least @xmath178 ( this is due to the fact that each frame gives charge to vertices at distance at most 2 ) .",
    "there are twelve vertices in each frame , hence , by proposition  [ prop : dens ] , we obtain theorem [ thm : main ] ."
  ],
  "abstract_text": [
    "<S> we call a subset @xmath0 of vertices of a graph @xmath1 a @xmath2-identifying code if for all subsets @xmath3 of vertices with size at most @xmath4 , the sets @xmath5 are distinct . the concept of identifying codes was introduced in 1998 by karpovsky , chakrabarty and levitin . identifying codes have been studied in various grids . in particular , it has been shown that there exists a @xmath6-identifying code in the king grid with density @xmath7 and that there are no such identifying codes with density smaller than @xmath8 . using a suitable frame and a discharging procedure , </S>",
    "<S> we improve the lower bound by showing that any @xmath6-identifying code of the king grid has density at least @xmath9 .    * keywords : * identifying codes , king grid , density , discharging method </S>"
  ]
}
{
  "article_text": [
    "a theoretical understanding of the behavior of many - body systems is a great challenge and provides fundamental insights into quantum mechanical studies , as well as offering potential areas of applications .",
    "however , apart from some few analytically solvable problems , the typical absence of an exactly solvable contribution to the many - particle hamiltonian means that we need reliable numerical many - body methods .",
    "these methods should allow for controlled approximations and provide a computational scheme which accounts for successive many - body corrections in a systematic way .",
    "typical examples of popular many - body methods are coupled - cluster methods @xcite , various types of monte carlo methods @xcite , perturbative expansions @xcite , green s function methods @xcite , the density - matrix renormalization group @xcite , ab initio density functional theory @xcite and large - scale diagonalization methods @xcite",
    ".    however , all these methods have to face in some form or the other the problem of an exponential growth in dimensionality . for a system of @xmath0 fermions which can be placed into @xmath1 levels ,",
    "the total number of basis states are given by @xmath2 .",
    "the dimensional curse means that most quantum mechanical calculations on classical computers have exponential complexity and therefore are very hard to solve for larger systems . on the other hand , a so - called quantum computer , a particularly dedicated computer ,",
    "can improve greatly on the size of systems that can be simulated , as foreseen by feynman @xcite .",
    "a quantum computer does not need an exponential amount of memory to represent a quantum state .",
    "the basic unit of information for a quantum computer is the so - called qubit or quantum bit .",
    "any suitable two - level quantum system can be a qubit , but the standard model of quantum computation is a model where two - level quantum systems are located at different points in space , and are manipulated by a small universal set of operations .",
    "these operations are called gates in the same fashion as operations on bits in classical computers are called gates .",
    "for the example of @xmath0 spin @xmath3 particles , a classical computer needs @xmath4 bits to represent all possible states , while a quantum computer needs only @xmath0 qubits .",
    "the complexity in number of qubits is thus linear .",
    "based on these ideas , several groups have proposed various algorithms for simulating quantal many - body systems on quantum computers .",
    "abrams and lloyd , see for example refs .",
    "@xcite , introduced a quantum algorithm that uses the quantum fast fourier transform to find eigenvalues and eigenvectors of a given hamiltonian , illustrating how one could solve classically intractable problems with less than 100 qubits .",
    "achieving a polynomial complexity in the number of operations needed to simulate a quantum system is not that straightforward however . to get efficient simulations in time",
    "one needs to transform the many - body hamiltonian into a sum of operations on qubits , the building blocks of the quantum simulator and computer , so that the time evolution operator can be implemented in polynomial time . in refs .",
    "@xcite it was shown how the jordan - wigner transformation in principle does this for all hamiltonians acting on fermionic many - body states .",
    "based on this approach , recently two groups , see refs .",
    "@xcite , published results where they used nuclear magnetic resonance ( nmr ) qubits to simulate the pairing hamiltonian .",
    "the aim of this work is to develop an algorithm than allows one to perform a quantum computer simulation ( or simply quantum simulation hereafter ) of any many - body fermionic hamiltonian .",
    "we show how to generate , via various jordan - wigner transformations , all qubit operations needed to simulate the time evolution operator of a given hamiltonian .",
    "we also show that for a given term in an @xmath5-body fermionic hamiltonian , the number of operations needed to simulate it is linear in the number of qubits or energy - levels of the system .",
    "the number of terms in the hamiltonian is of the order of @xmath6 for a general @xmath5-body interaction , making the simulation increasingly harder with higher order interactions .",
    "we specialize our examples to a two - body hamiltonian , since this is also the most general type of hamiltonian encountered in many - body physics . besides fields like nuclear physics , where three - body forces play a non - neglible role , a two - body hamiltonian captures most of the relevant physics .",
    "the various transformations are detailed in the next section . in sec .",
    "[ sec : details ] we show in detail how to simulate a quantum computer finding the eigenvalues of any two - body hamiltonian , with all available particle numbers , using the simulated time evolution operator . in that section",
    "we describe also the techniques which are necessary for the extraction of information using a phase - estimation algorithm .    to demonstrate the feasibility of our algorithm , we present in sec .  [",
    "sec : results ] selected results from applications of our algorithm to two simple model - hamiltonians , a pairing hamiltonian and the hubbard model .",
    "we summarize our results and present future perspectives in sec .",
    "[ sec : conclusion ] .",
    "a general two - body hamiltonian for fermionic system can be written as @xmath7 where @xmath8 is a constant energy term , @xmath9 represent all the one - particle terms , allowing for non - diagonal terms as well .",
    "the one - body term can represent a chosen single - particle potential , the kinetic energy or other more specialized terms such as those discussed in connection with the hubbard model @xcite or the pairing hamiltonian discussed below .",
    "the two - body interaction part is given by @xmath10 and can be any two - body interaction , from coulomb interaction to the interaction between nucleons .",
    "the sums run over all possible single - particle levels @xmath1 .",
    "note that this model includes particle numbers from zero to the number of available quantum levels , @xmath11 . to simulate states with fixed numbers of fermions",
    "one would have to either rewrite the hamiltonian or generate specialized input states in the simulation .",
    "the algorithm which we will develop in this section and in sec .",
    "[ sec : details ] can treat any two - body hamiltonian . however , in our demonstrations of the quantum computing algorithm",
    ", we will limit ourselves to two simple models , which however capture much of the important physics in quantum mechanical many - body systems .",
    "we will also limit ourselves to spin @xmath12 systems , although our algorithm can also simulate higher @xmath13-values , such as those which occur in nuclear , atomic and molecular physics , it simply uses one qubit for every available quantum state .",
    "these simple models are the hubbard model and a pairing hamiltonian .",
    "we start with the spin @xmath3 hubbard model , described by the following hamiltonian @xmath14 where @xmath15 and @xmath16 are fermion creation and annihilation operators , respectively .",
    "this is a chain of sites where each site has room for one spin up fermion and one spin down fermion .",
    "the number of sites is @xmath1 , and the sums over @xmath17 are sums over spin up and down only .",
    "each site has a single - particle energy @xmath18 .",
    "there is a repulsive term @xmath19 if there is a pair of particles at the same site .",
    "it is energetically favourable to tunnel to neighbouring sites , described by the hopping terms with coupling constant @xmath20 .",
    "the second model - hamiltonian is the simple pairing hamiltonian @xmath21 the indices @xmath22 and @xmath13 run over the number of levels @xmath1 , and the label @xmath23 stands for a time - reversed state .",
    "the parameter @xmath24 is the strength of the pairing force while @xmath25 is the single - particle energy of level @xmath22 . in our case",
    "we assume that the single - particle levels are equidistant ( or degenerate ) with a fixed spacing @xmath26 .",
    "moreover , in our simple model , the degeneracy of the single - particle levels is set to @xmath27 , with @xmath12 being the spin of the particle .",
    "this gives a set of single - particle states with the same spin projections as for the hubbard model .",
    "whereas in the hubbard model we operate with different sites with spin up or spin down particles , our pairing models deals thus with levels with double degeneracy . introducing the pair - creation operator @xmath28 , one can rewrite the hamiltonian in eq .",
    "( [ eq : pairing ] ) as @xmath29 where @xmath30 is the number operator , and @xmath31 so that the single - particle orbitals are equally spaced at intervals @xmath26 . the latter commutes with the hamiltonian @xmath32 . in this model ,",
    "quantum numbers like seniority @xmath33 are good quantum numbers , and the eigenvalue problem can be rewritten in terms of blocks with good seniority . loosely speaking",
    ", the seniority quantum number @xmath33 is equal to the number of unpaired particles ; see @xcite for further details .",
    "furthermore , in a series of papers , richardson , see for example refs .",
    "@xcite , obtained the exact solution of the pairing hamiltonian , with semi - analytic ( since there is still the need for a numerical solution ) expressions for the eigenvalues and eigenvectors .",
    "the exact solutions have had important consequences for several fields , from bose condensates to nuclear superconductivity and is currently a very active field of studies , see for example refs .",
    "finally , for particle numbers up to @xmath34 , the above model can be solved exactly through numerical diagonalization and one can obtain all eigenvalues .",
    "it serves therefore also as an excellent ground for comparison with our algorithm based on models from quantum computing .",
    "benioff showed that one could make a quantum mechanical turing machine by using various unitary operations on a quantum system , see ref .",
    "benioff demonstrated that a quantum computer can calculate anything a classical computer can . to do",
    "this one needs a quantum system and basic operations that can approximate all unitary operations on the chosen many - body system .",
    "we describe in this subsection the basic ingredients entering our algorithms .      in this article",
    "we will use the standard model of quantum information , where the basic unit of information is the qubit , the quantum bit . as mentioned in the introduction ,",
    "any suitable two - level quantum system can be a qubit , it is the smallest system there is with the least complex dynamics .",
    "qubits are both abstract measures of information and physical objects .",
    "actual physical qubits can be ions trapped in magnetic fields where lasers can access only two energy levels or the nuclear spins of some of the atoms in molecules accessed and manipulated by an nmr machine .",
    "several other ideas have been proposed and some tested , see @xcite .",
    "the computational basis for one qubit is @xmath35 ( representing for example bit @xmath36 ) for the first state and @xmath37 ( representing bit @xmath38 ) for the second , and for a set of qubits the tensor products of these basis states for each qubit form a product basis .",
    "below we write out the different basis states for a system of @xmath11 qubits .",
    "@xmath39 this is a @xmath40-dimensional system and we number the different basis states using binary numbers corresponding to the order in which they appear in the tensor product .",
    "quantum computing means to manipulate and measure qubits in such a way that the results from a measurement yield the solutions to a given problem .",
    "the quantum operations we need to be able to perform our simulations are a small set of elementary single - qubit operations , or single - qubit gates , and one universal two - qubit gate , in our case the so - called cnot gate defined below .    to represent quantum computer algorithms",
    "graphically we use circuit diagrams . in a circuit diagram each qubit is represented by a line , and operations on the different qubits are represented by boxes . in fig .",
    "[ fig : circ ] we show an example of a quantum circuit , with the arrow indicating the time evolution ,    ( 0,65)(160,55 ) ( 60,87)(0,0)@xmath41 ( 60,63)(0,0)@xmath42 ( 90,50 )    ( 240 , 87)(0,0)@xmath43 ( 240 , 63)(0,0)@xmath44    the states @xmath41 and @xmath42 in the figure represent qubit states . in general , the total state will be a superposition of different qubit states .",
    "a single - qubit gate is an operation that only affects one physical qubit , for example one ion or one nuclear spin in a molecule .",
    "it is represented by a box on the line corresponding to the qubit in question .",
    "a single - qubit gate operates on one qubit and is therefore represented mathematically by a @xmath45 matrix while a two - qubit gate is represented by a @xmath46 matrix . as an example we can portray the so - called cnot gate as matrix , @xmath47 this is a very important gate , since one can show that it behaves as a universal two - qubit gate , and that we only need this two - qubit gate and a small set of single - qubit gates to be able to approximate any multi - qubit operation .",
    "one example of a universal set of single - qubit gates is given in fig .",
    "[ fig : elementarysinglequbitgates ] . the products of these three operations on one qubit can approximate to an arbitrary precision any unitary operation on that qubit .",
    "( 200,20 ) ( 25,-10)(0,0)hadamard ( 50,-22 )    ( 150 , -10)(0,0)@xmath48    ( 200,10 ) ( 50,-22 )    ( 150 , -10)(0,0)@xmath49    ( 200,30 ) ( 50,-2 )    ( 150 , 10)(0,0)@xmath50      the next step is to find elementary operations on a set of qubits that can be put together in order to approximate any unitary operation on the qubits . in this way we can perform computations on a quantum computer by performing many of these elementary operations in the correct order .",
    "there are three steps in finding the elementary operations needed to simulate any unitary operation .",
    "first , any @xmath51 unitary matrix can be factorized into a product of at most @xmath52 two - level unitary matrices , see for example ref .",
    "@xcite for details .",
    "a two - level unitary matrix is a matrix that only acts non - trivially on two vector components when multiplied with a vector .",
    "for all other vector components it acts as the identity operation .",
    "the next step is to prove that any two - level unitary matrix can be implemented by one kind of two - qubit gate , for example the cnot gate in eq .",
    "( [ eq : cnot ] ) , and single - qubit gates only .",
    "this simplifies the making of actual quantum computers as we only need one type of interaction between pairs of qubits .",
    "all other operations are operations on one qubit at the time .",
    "finally , these single - qubit operations can be approximated to an arbitrary precision by a finite set of single - qubit gates .",
    "such a set is called a universal set and one example is the phase gate , the so - called hadamard gate and the @xmath53 gate .",
    "[ fig : elementarysinglequbitgates ] shows these gates . by combining these properly with the cnot gate",
    "one can approximate any unitary operation on a set of qubits .",
    "the aspect of quantum computers we are focusing on in this article is their use in computing properties of quantum systems .",
    "when we want to use a quantum computer to find the energy levels of a quantum system or simulate it s dynamics , we need to simulate the time evolution operator of the hamiltonian , @xmath54 . to do that on a quantum computer we must find a set of single- and two - qubit gates that would implement the time evolution on a set of qubits .",
    "for example , if we have one qubit in the state @xmath55 , we must find the single - qubit gates that when applied results in the qubit being in the state @xmath56 .    from what we have written so far the naive way of simulating @xmath19 would be to calculate it directly as a matrix in an appropriate basis , factorize it into two - level unitary matrices and then implement these by a set of universal gates . in a many - body fermion system for example",
    ", one could use the fock basis to calculate @xmath19 as a matrix .",
    "a fermion system with @xmath11 different quantum levels can have from zero to @xmath11 particles in each fock basis state .",
    "a two - level system has four different basis states , @xmath57 , @xmath58 , @xmath59 and @xmath60 , where @xmath61 corresponds to an occupied quantum level .",
    "the time evolution matrix is then a @xmath62 matrix .",
    "this matrix is then factorized into at most @xmath63 two - level unitary matrices .",
    "an exponential amount of operations , in terms of the number of quantum levels , is needed to simulate @xmath19 ; by definition not an effective simulation .",
    "this shows that quantum computers performing quantum simulations not necessarily fulfill their promise . for each physical system",
    "to be simulated one has to find representations of the hamiltonian that leads to polynomial complexity in the number of operations .",
    "after one has found a proper representation of the hamiltonian , the time evolution operator @xmath64 is found by using a trotter approximation , for example @xmath65 there are different ways to approximate @xmath19 by products of exponentials of the different terms of the hamiltonian , see ref .",
    "@xcite and eq .",
    "( [ eq : trotter2 ] ) .",
    "the essential idea is to find a form of the hamiltonian where these factors in the approximated time evolution operator can be further factorized into single- and two - qubit operations effectively . in refs .  @xcite it was shown how to do this in principle for any many - body fermion system using the jordan - wigner transformation . in this article",
    "we show how to create a quantum compiler that takes any many - body fermion hamiltonian and outputs the quantum gates needed to simulate the time evolution operator .",
    "we implement it for the case of two - body fermion hamiltonians and show results from numerical calculations finding the energylevels of the well known pairing and hubbard models .      for a spin-@xmath3 one - dimensional quantum spin - chain a fermionization procedure exists which allows the mapping between spin operators and fermionic creation - annihilation operators .",
    "the algebra governing the spin chain is the @xmath66 algebra , represented by the @xmath17-matrices .",
    "the jordan - wigner transformation is a transformation from fermionic annihilation and creation operators to the @xmath17-matrices of a spin-@xmath3 chain , see for example ref .",
    "@xcite for more details on the jordan - wigner transformation .",
    "there is an isomorphism between the two systems , meaning that any @xmath16 or @xmath67 operator can be transformed into a tensor product of @xmath17-matrices operating on a set of qubits .",
    "this was explored by somma _",
    "et al . _ in refs .",
    "the authors demonstrated , with an emphasis on single - particle fermionic operators , that the jordan - wigner transformation ensures efficient , i.e. , not exponential complexity , simulations of a fermionic system on a quantum computer .",
    "similar transformations must be found for other systems , in order to efficiently simulate many - body systems .",
    "this was the main point in ref .",
    "@xcite .",
    "we present here the various ingredients needed in order to transform a given hamiltonian into a practical form suitable for quantum mechanical simulations .",
    "we begin with the fermionic creation and annihilation operators , which satisfy the following anticommutation relations @xmath68 thereafter we define the three traceless and hermitian generators of the @xmath66 group , the @xmath17-matrices @xmath69 , @xmath70 and @xmath71 .",
    "together with the identity matrix @xmath72 they form a complete basis for all hermitian @xmath45 matrices .",
    "they can be used to write all hamiltonians on a spin @xmath3 chain when taking sums of tensor products of these , in other words they form a product basis for the operators on the qubits .",
    "the three @xmath17-matrices are @xmath73 we define the raising and lowering matrices as @xmath74 @xmath75 the transformation is based on the fact that for each possible quantum state of the fermion system , there can be either one or zero fermions",
    ". therefore we need @xmath11 qubits for a system with @xmath11 possible fermion states .",
    "a qubit in state @xmath76 represents a state with a fermion , while @xmath77 represents no fermions .",
    "then the raising operator @xmath78 changes @xmath79 into @xmath80 when @xmath81 this means that @xmath78 acts as a creation operator , and @xmath82 acts as an annihilation operator .",
    "in addition , because of the anticommutation of creation(annihilation ) operators for different states we have latexmath:[$a_1^\\dag a_2^\\dag    creation and annihilation operators for states higher than the state corresponding to the first qubit , we need to multiply with a @xmath71-matrix on all the qubits leading up to the one in question , in order to get the correct sign in the final operation .",
    "this leads us to the jordan - wigner transformation @xcite @xmath84 the notation @xmath85 means a tensor product of the identity matrix on all qubits other than @xmath22 and @xmath13 , @xmath86 , if @xmath87 , with @xmath72 being the identity matrices of appropriate dimension .",
    "what we must do now is to apply the jordan - wigner transformation to a general fermionic hamiltonian composed of creation and annihilation operators , so we can write it as a sum of products of @xmath17 matrices .",
    "the matrix @xmath88 is then an operation on the @xmath89 qubit representing the @xmath89 quantum level of the fermion system .",
    "when we have expressed the hamiltonian as a sum of products of operations on the qubits representing the system , we must find a representation of the time evolution operator as products of two - qubit operations .",
    "these operations can be further decomposed into elementary operations , see subsection [ sec : gates ] for further discussion .",
    "we first describe the procedure for the simplest case of a general single - particle hamiltonian , @xmath90 we now use the transformation of eq .",
    "( [ eq : jwtransformation ] ) on the terms @xmath91 .",
    "the diagonal terms of the one - particle hamiltonian , that is the case where @xmath92 , can be rewritten as @xmath93 @xmath94 since @xmath95 which is the number operator .",
    "it counts whether or not a fermion is in state @xmath22 . in the case of qubits counting",
    "whether or not the qubit is in state @xmath80 , we have eigenvalue one for @xmath80 and eigenvalue zero for @xmath79 .",
    "the action of this hamiltonian on qubit @xmath22 can be simulated using the single - qubit operation @xmath96 see subsection [ sec : gates ] for other examples of single - qubit gates .    for the non - diagonal elements , @xmath87 , not all of the @xmath71 matrices",
    "multiply with each other and end up in the identity operation . as an example we will consider a five level system , @xmath97 , and look at the transformation of the term @xmath98 whith @xmath99 and @xmath100 , @xmath101 the operation on all qubits before @xmath22 and after @xmath13 is identity , on qubits @xmath102 through @xmath103 it is @xmath71 .",
    "we can then write the non - diagonal one - body operators as    @xmath104    using eqs .",
    "( [ eq : h_1sigmas ] ) and ( [ eq : singleparticle ] ) the total single - particle fermionic hamiltonian of @xmath11 quantum levels , transformed using the jordan - wigner transformation of eq .",
    "( [ eq : jwtransformation ] ) , is written as @xmath105      the hamiltonian is now transformed into a sum of many - qubit operations , @xmath106 . the @xmath107 term in eq .",
    "( [ eq : fivequbitsystem ] ) for example , is transformed into a three - qubit operation .",
    "the next step is to factorize these many - qubit operations @xmath108 into products of two - qubit operations , so that we in the end can get a product of two - qubit operations @xmath109 , that when performed in order give us the time evolution operator corresponding to each term in the hamiltonian , @xmath110 .",
    "the first thing we do is to find a set of two - qubit operations that together give us the hamiltonian , and later we will see that to find the time evolution from there is straightforward .",
    "the many - qubit terms in eq .",
    "( [ eq : singleparticletotal ] ) are products of the type @xmath111 with @xmath69 or @xmath70 at either end .",
    "these products have to be factorized into a series of two - qubit operations .",
    "what we wish to do is successively build up the operator using different unitary transformations .",
    "this can be achieved with successive operations with the @xmath17-matrices , starting with for example @xmath112 , which can be transformed into @xmath113 , then transformed into @xmath114 and so forth .",
    "our goal now is to express each term in the hamiltonian eq .",
    "( [ eq : singleparticletotal ] ) as a product of the type @xmath115 , with a different form in the case where the hamiltonian term starts and ends with a @xmath70 matrix .",
    "to achieve this we need the transformations in eqs .",
    "( [ eq : rotations1])-([eq : rotations4 ] ) .",
    "we will use this to find the time - evolution operator for each hamiltonian , see eq .",
    "( [ eq : us ] ) below .    to understand how we factorize the hamiltonian terms into single- and two - qubit operations we follow a bottom up procedure .",
    "first , if we have a two qubit system , with the operator @xmath116 , we see that the unitary operation @xmath117 transforms it into @xmath118 in addition , if we start out with the operator @xmath112 we can transform it into @xmath113 or @xmath119 using the operators @xmath120 or @xmath121 accordingly .",
    "we can then generate the @xmath122 part of the terms in eq .",
    "( [ eq : singleparticletotal ] ) by succesively applying the operator @xmath123 for @xmath124 through @xmath125 . yielding the operator @xmath126 with a phase of @xmath127 , because of the sign change in eqs .",
    "( [ eq : rotations3 ] ) and ( [ eq : rotations4 ] ) .",
    "we write @xmath128 to show that we can start with both a @xmath69 and a @xmath70 matrix . to avoid the sign change we can simply use the operator @xmath129 instead for those cases where we have @xmath119 on site @xmath22 instead of @xmath113 .",
    "this way we always keep the same phase .",
    "finally , we use the operator @xmath120 if we want the string of operators to end with @xmath69 , or @xmath121 if we want it to end with @xmath70 .",
    "the string of operators starts with either @xmath69 or @xmath70 . for an odd number of @xmath130 operations , the operations that add a @xmath71 to the string",
    ", the first operator has changed from what we started with .",
    "in other words we have @xmath69 instead of @xmath70 at the start of the string or vice versa , see eqs .",
    "( [ eq : rotations3 ] ) and ( [ eq : rotations4 ] ) . by counting , we see that we do @xmath131 of the @xmath130 operations to get the string @xmath132 . and therefore if @xmath131 is odd , the first matrix is the opposite of what we want in the final string .",
    "the following simple example can serve to clarify .",
    "we want the hamiltonian @xmath133 , and by using the transformations in eqs .",
    "( [ eq : rotations1])-([eq : rotations4 ] ) we can construct it as a product of single- and two - qubit operations in the following way , @xmath134 we see that we have factorized @xmath135 into @xmath136 .",
    "now we can find the time - evolution operator @xmath64 corresponding to each term of the hamiltonian , which is the quantity of interest . instead of starting with the operator @xmath112 we start with the corresponding evolution operator and observe that @xmath137 where @xmath16 is a scalar .",
    "this means that we have a series of unitary transformations on this operator yielding the final evolution , namely @xmath138 with the exact same unitary operations @xmath139 as we find when we factorize the hamiltonian .",
    "these are now the single- and two - qubit operations we were looking for , first we apply the operations @xmath139 to the appropriate qubits , then @xmath140 to qubit @xmath22 , and then the @xmath141 operations , all in usual matrix multiplication order",
    ".      in this section we will do the same for the general two - body fermionic hamiltonian .",
    "the two - body part of the hamiltonian can be classified into diagonal elements and non - diagonal elements . because of the pauli principle and the anti - commutation relations for the creation and annihilation operators ,",
    "some combinations of indices are not allowed .",
    "the two - body part of our hamiltonian is @xmath142 where the indices run over all possible states and @xmath11 is the total number of available quantum states .",
    "the single - particle labels @xmath143 refer to their corresponding sets of quantum numbers , such as projection of total spin , number of nodes in the single - particle wave function etc . since every state @xmath143 is uniquely defined , we can not have two equal creation or annihilation operators and therefore @xmath144 and @xmath145 .    when @xmath146 and @xmath147 , or @xmath148 and @xmath149 , we have a diagonal element in the hamiltonian matrix , and",
    "the output state is the same as the input state .",
    "the operator term corresponding to @xmath150 has these equalities due to the anti - commutation relations @xmath151 which means that @xmath152 the term @xmath153 with @xmath87 is described using the pauli matrices @xmath154 when we add all four different permutations of @xmath22 and @xmath13 this is the number operator on qubit @xmath22 multiplied with the number operator on qubit @xmath13 .",
    "the eigenvalue is one if both qubits are in the state @xmath80 , that is the corresponding quantum states are both populated , and zero otherwise .",
    "we can in turn rewrite the sets of creation and annihilations in terms of the @xmath17-matrices as @xmath155    in the general case we can have three different sets of non - equal indices .",
    "firstly , we see that @xmath156 , meaning that the exchange of @xmath22 with @xmath157 and @xmath13 with @xmath158 gives the same operator @xmath159 .",
    "this results in a two - body hamiltonian with no equal indices @xmath160 choosing to order the indices from lowest to highest gives us the position where there will be @xmath71-matrices to multiply with the different raising and lowering operators , when we perform the jordan - wigner transformation eq .",
    "( [ eq : jwtransformation ] ) .",
    "the order of matrix multiplications is fixed once and for all , resulting in three different groups into which these terms fall , namely @xmath161 these @xmath162 possibilities for @xmath163 are mirrored in the symmetric term in eq .",
    "( [ eq : h2nonequalsymmetric ] ) giving us the @xmath164 different possibilities when permuting four indices .    the @xmath143 term of eq .",
    "( [ eq : h2nonequalsymmetric ] ) is @xmath165 in the case of @xmath166 we have @xmath167 using eq .",
    "( [ eq : pmzs ] ) , where we have the rules for sign changes when multiplying the raising and lowering operators with the @xmath71 matrices , gives us @xmath168    if we switch the order of @xmath22 and @xmath13 so that @xmath169 , we change the order in which the @xmath71-matrix is multiplied with the first raising and lowering matrices , resulting in a sign change .",
    "we get a change in sign for every permutation of the ordering of the indices from lowest to highest because of the matrix multiplication ordering .",
    "the ordering is described by another set of indices @xmath171 where @xmath172 .",
    "we assign a number to each of the four indices , @xmath173 , @xmath174 , @xmath175 and @xmath176 .",
    "if @xmath166 we say the ordering is @xmath177 , @xmath178 , @xmath179 and @xmath180 , where @xmath181 is a number from one to four indicating which of the indices @xmath22 , @xmath13 , @xmath158 and @xmath157 is the smallest . if @xmath22 is the smallest , @xmath182 and @xmath183 .",
    "this allows us to give the sign of a given @xmath184 term using the totally anti - symmetric tensor with four indices , which is @xmath185 for even permutations , and @xmath186 for odd permutations . for each of the three groups in eq .",
    "( [ eq : threegroups ] ) we get a different set of raising and lowering operators on the lowest , next lowest and so on , indices , while the sign for the whole set is given by @xmath187 .",
    "we are in the position where we can use the relation in eq .",
    "( [ eq : raisingandlowerin ] ) to express the hamiltonian in terms of the @xmath17-matrices .",
    "we get 16 terms with products of four @xmath69 and or @xmath70 matrices in the first part of eq .",
    "( [ eq : vijklphi ] ) , then when we add the hermitian conjugate we get another 16 terms .",
    "the terms with an odd number of @xmath70 matrices have an imaginary phase and are therefore cancelled out when adding the conjugates in eq .",
    "( [ eq : h2nonequalsymmetric ] ) .",
    "this leaves us with just the terms with four @xmath69 matrices , four @xmath70 matrices and two of each in different orderings .",
    "the final result is given as an array with a global sign and factor given by the permutation of the ordering , and eight terms with different signs depending on which of the three groups , eq .",
    "( [ eq : threegroups ] ) , the set of indices belong to .",
    "these differing rules are due to the rules for @xmath71 multiplication with the raising and lowering operators , resulting in @xmath188 where the letters @xmath189 , @xmath190 and @xmath191 refer to the subgroups defined in eq .",
    "( [ eq : threegroups ] ) .    as for the single - particle operators in subsection [ sec:1parth ] we now need to factorize these multi - qubit terms in the hamiltonian to products of two - qubit and single - qubit operators . instead of transforming a product of the form @xmath192",
    ", we now need to transform a product of the form @xmath193 , where @xmath16 , @xmath194 , @xmath195 and @xmath26 are short for either @xmath69 or @xmath70 while @xmath196 is short for @xmath71 .",
    "the generalization is quite straightforward , as we see that if the initial operator is @xmath197 instead of just @xmath198 , we can use the same set of transformations as for the single - particle case , @xmath199 using the same unitary two - qubit transformations , which we now call @xmath200 , that take @xmath201 to @xmath202 , we find @xmath203 this straightforward generalization of the procedure from the single - particle hamiltonian case is possible because the operations commute when performed on different qubits .    with the above expressions , we can start with the unitary operator @xmath204 and have two different series of unitary operators that give us the evolution operator of the desired hamiltonian .",
    "the @xmath19 operators are defined as in eq .",
    "( [ eq : us ] ) , @xmath205 while the @xmath200 operators are defined in a similar way @xmath206 where the @xmath17-matrices without subscripts represent that we can have @xmath69 or @xmath70 in each position .",
    "this gives us the total evolution operator for each term in eq .",
    "( [ eq : phiijkl ] ) @xmath207 here we have all the single- and two - qubit operations we need to perform on our set of qubits , that were initially in the state @xmath208 , to simulate the time evolution @xmath209 of the hamiltonian term @xmath210 .",
    "every factor in the above equation is a single- or two - qubit operation that must be performed on the qubits in proper matrix multiplication order .    when using the jordan - wigner transformation of eq .",
    "( [ eq : jwtransformation ] ) applied to our two model hamiltonians of eqs .",
    "( [ eq : hubbard ] ) and ( [ eq : pairing ] ) , we choose a representation with two qubits at each site .",
    "these correspond to fermions with spin up and down , respectively .",
    "the number of qubits , @xmath11 , is always the total number of available quantum states and therefore it is straightforward to use this model on systems with higher degeneracy , such as those encountered in quantum chemistry @xcite or nuclear physics @xcite .",
    "site one spin up is qubit one , site one spin down is qubit two and site two spin up is qubit three and so on . to get all the quantum gates one needs to simulate a given hamiltonian one needs to input the correct @xmath9 and @xmath10 values .",
    "in order to test the efficiency of a quantum algorithm , one needs to know how many qubits , and how many operations on these , are needed to implement the algorithm .",
    "usually this is a function of the dimension of the hilbert space on which the hamiltonian acts .",
    "the natural input scale in the fermionic simulator is the number of quantum states , @xmath11 , that are available to the fermions . in our simulations of the hubbard and the pairing models of eqs .",
    "( [ eq : hubbard ] ) and ( [ eq : pairing ] ) , respectively , the number of qubits is @xmath211 since we have chosen systems with double - degeneracy for every single - particle state , where @xmath1 is the number of energy - levels in the model .",
    "we use one qubit to represent each possible fermion state , on a real quantum computer , however , one should implement some error - correction procedure using several qubits for each state , see ref .  @xcite .",
    "the complexity in number of qubits remains linear , however , since @xmath212 qubits are needed for error correction .",
    "the single - particle hamiltonian has potentially @xmath213 different @xmath9 terms .",
    "the two - particle hamiltonian has up to @xmath214 @xmath10 terms .",
    "a general @xmath5-body interaction has in the worst case @xmath215 terms .",
    "it is straightforward to convince oneself that the pairing model has @xmath213 terms while in the hubbard model we end up with @xmath216 terms .",
    "not all models have maximum complexity in the different @xmath5-body interactions .",
    "how many two - qubit operations do each of these terms need to be simulated ?",
    "first of all a two - qubit operation will in general have to be decomposed into a series of universal single- and two - qubit operations , depending entirely on the given quantum simulator .",
    "a particular physical realization might have a natural implementation of the @xmath217 gate and save a lot of intermediary operations .",
    "others will have to use a fixed number of operations in order to apply the operation on any two qubits .",
    "a system with only nearest neighbor interactions would have to use @xmath218 operations for each @xmath217 gate , and thereby increase the polynomial complexity by one degree .    in our discussion on the one - body part of the hamiltonian",
    ", we saw that for each @xmath9 we obtained the @xmath219 operator which is transformed into the two terms in eq .",
    "( [ eq : singleparticle ] ) , @xmath220 and @xmath221 .",
    "we showed how these terms are decomposed into @xmath222 operations , leading to twice as many unitary transformations on an operator , @xmath223 for the time evolution .",
    "the average of @xmath131 is @xmath224 in this case and in total we need to perform @xmath225 two - qubit operations per single - particle term in the hamiltonian , a linear complexity .    in",
    "the two - particle case each term @xmath226 is transformed into a sum of eight operators of the form @xmath227 , eq .",
    "( [ eq : phiijkl ] ) .",
    "the two parts of these operators are implemented in the same way as the @xmath228 term of the single - particle hamiltonian , which means they require @xmath229 and @xmath230 operations , since @xmath231 the average is @xmath232 . for both of these parts we need to perform both the unitary operation @xmath200 and it s hermitian conjugate @xmath233 . in the end",
    "we need @xmath234 two - qubit operations per two - particle term in the hamiltonian , the complexity is linear .",
    "a term of an @xmath5-body hamiltonian will be transformed into @xmath235 operators since each annihilation and creation operator is transformed into a sum of @xmath69 and @xmath70 matrices .",
    "all the imaginary terms cancel out and we are left with @xmath236 terms .",
    "each of these terms will include @xmath237 @xmath17 matrices , in products of the form @xmath238 , and we use the same procedure as discussed above to decompose these @xmath5 factors into unitary transformations . in this case",
    "each factor will require an average of @xmath239 operations for the same reasons as in the two - body case .",
    "all in all , each @xmath5-body term in the hamiltonian requires @xmath240 operations .",
    "thus , the complexity for simulating one @xmath5-body term of a fermionic many - body hamiltonian is linear in the number of two - qubit operations , but the number of terms is not . for a full - fledged simulation of general three - body forces , in common use in nuclear physics @xcite ,",
    "the total complexity of the simulation is @xmath241 .",
    "a complete two - particle hamiltonian would be @xmath242.the bottleneck in these simulations is the number of terms in the hamiltonian , and for systems with less than the full number of terms the simulation will be faster .",
    "this is much better than the exponential complexity of most simulations on classical computers .",
    "having detailed how a general hamiltonian , of two - body nature in our case , can be decomposed in terms of various quantum gates , we present here details of the implementation of our algorithm for finding eigenvalues and eigenvectors of a many - fermion system . for our tests of the fermionic simulation algorithm",
    "we have implemented the phase - estimation algorithm from @xcite which finds the eigenvalues of an hamiltonian operating on a set of simulation qubits .",
    "there are also other quantum computer algorithms for finding expectation values and correlation functions , as discussed by somma _",
    "et al . _ in refs .",
    "@xcite . in the following",
    "we first describe the phase - estimation algorithm , and then describe its implementation and methods we have developed in using this algorithm . a much more thorough description of quantum computers and the phase - estimation algorithm can be found in @xcite .      to find the eigenvalues of the hamiltonian we use the unitary time evolution operator we get from the hamiltonian",
    "we have a set of simulation qubits representing the system governed by the hamiltonian , and a set of auxiliary qubits , called work qubits @xcite , in which we will store the eigenvalues of the time evolution operator .",
    "the procedure is to perform several controlled time evolutions with work qubits as control qubits and the simulation qubits as targets , see for example ref .",
    "@xcite for information on controlled qubit operations . for each work",
    "qubit we perform the controlled operation on the simulation qubits with a different time parameter , giving all the work qubits different phases .",
    "the information stored in their phases is extracted using first an inverse fourier transform on the work qubits alone , and then performing a measurement on them .",
    "the values of the measurements give us directly the eigenvalues of the hamiltonian after the algorithm has been performed a number of times .",
    "the input state of the simulation qubits is a random state in our implementation , which is also a random superposition of the eigenvectors of the hamiltonian @xmath243 .",
    "it does not have to be a random state , and in @xcite the authors describe a quasi - adiabatic approach , where the initial state is created by starting in the ground state for the non - interacting hamiltonian , a qubit basis state , e.g. @xmath244 , and then slowly the interacting part of the hamiltonian is turned on .",
    "this gives us an initial state mostly comprising the true ground state , but it can also have parts of the lower excited states if the interacting hamiltonian is turned on a bit faster . in for example nuclear physics it is common to use a starting state for large - scale diagonalizations that reflects some of the features of the states one wishes to study . a typical example is to include pairing correlations in the trial wave function , see for example refs .",
    "iterative methods such as the lanczo s diagonalization technique @xcite converge much faster if such starting vectors are used .",
    "however , although more iterations are needed , even a random starting vector converges to the wanted states .",
    "the final state of all the qubits after an inverse fourier transform on the work qubits is @xmath245 } 2^t\\rangle \\otimes |k\\rangle.\\ ] ] if the algorithm works perfectly , @xmath246 should be an exact eigenstate of @xmath19 , with an exact eigenvalue @xmath247}$ ] .",
    "when we have the eigenvalues of the time evolution operator we easily find the eigenvalues of the hamiltonian .",
    "we can summarize schematically the phase - estimation algorithm as follows :    1 .",
    "intialize each of the work qubits to @xmath248 by initializing to @xmath80 and applying the hadamard gate , h , see fig .",
    "[ fig : elementarysinglequbitgates ] .",
    "2 .   initialize the simulation qubits to a random or specified state , depending on the whether one wants the whole eigenvalue spectrum .",
    "3 .   perform conditional time evolutions on the simulation qubits , with different timesteps @xmath249 and different work qubits as the control qubits .",
    "4 .   perform an inverse fourier transform on the work qubits .",
    "5 .   measure the work qubits to extract the phase . 6 .",
    "repeat steps 1 - 6 until the probability distribution gathered from the measurement results is good enough to read out the wanted eigenvalues .",
    "( 250,200 ) ( 15,0 )    ( 0,15)(0,0)@xmath250 ( 0,67)(0,0)@xmath61 ( 0,95)(0,0)@xmath61 ( 0,123)(0,0)@xmath61 ( 0,163)(0,0)@xmath251 ( 240,15)(0,0)[l]@xmath250 ( 240,67)(0,0)[l]@xmath252 ( 240,95)(0,0)[l]@xmath253 ( 240,123)(0,0)[l]@xmath254 ( 240,163)(0,0)[l]@xmath255    as discussed above a set of two - qubit operations can be simulated by the cnot two - qubit operation and a universal set of single - qubit operations",
    ". we will not use or discuss any such implementation in this article , as one will have to use a different set for each physical realization of a quantum computer .",
    "when simulating a fermion system with a given quantum computer , our algorithm will first take the fermionic many - body evolution operator to a series of two - qubit and single - qubit operations , and then one will have to have a system dependent setup that takes these operations to the basic building blocks that form the appropriate universal set .    in subsection [ sec:2bh ]",
    "we showed how to take any two - particle fermionic hamiltonian to a set of two - qubit operations that approximate the evolution operator .",
    "in addition we must use one of the trotter approximations @xcite eqs .",
    "( [ eq : trotter1 ] ) and ( [ eq : trotter2 ] ) that take the evolution operator of a sum of terms to the product of the evolution operator of the individual terms , see for example ref .",
    "@xcite for details .",
    "to order @xmath256 in the error we use eq .",
    "( [ eq : trotter1 ] ) while to order @xmath257 we have @xmath258      the output of the phase - estimation algorithm is a series of measurements of the @xmath259 number of work qubits . putting them all together",
    "we get a probability distribution that estimates the amplitudes @xmath260 for each eigenvalue @xmath247}$ ] .",
    "the @xmath247}2^w$ ] values we measure from the work qubits , see eq .",
    "( [ eq : finalstate ] ) , are binary numbers from zero to @xmath261 , where each one translates to a given eigenvalue of the hamiltonian depending on the parameters we have used in our simulation .",
    "when accurate , a set of simulated measurements will give a distribution with peaks around the true eigenvalues .",
    "the probability distribution is calculated by applying non - normalized projection operators to the qubit state , @xmath262}2^t\\rangle \\langle\\phi^{[k]}2^t | \\otimes   { \\bf 1 } \\right )      \\left ( \\sum_{i}c_i |\\phi_i 2^t\\rangle \\otimes |i\\rangle \\right )      = c_k|\\phi^{[k ] } 2^t\\rangle \\otimes |k\\rangle.\\ ] ] the length of this vector squared gives us the probability , @xmath263}\\rangle 2^t \\otimes |k\\rangle \\right|^2=|c_k|^2       \\langle \\phi^{[k ] } 2^t|\\phi^{[k ] } 2^t\\rangle\\langle k",
    "|k \\rangle= |c_k|^2.\\ ] ] since we do not employ the exact evolution due to different approximations , we can have non - zero probabilities for all values of @xmath264 , yielding a distribution without sharp peaks for the correct eigenvalues and possibly peaks in the wrong places .",
    "if we use different random input states for every run through the quantum computer and gather all the measurements in one probability distribution , all the eigenvectors in the input state @xmath243 should average out to the same amplitude .",
    "this means that eigenvalues with higher multiplicity , i.e. , higher degeneracy , will show up as taller peaks in the probability distribution , while non - degenerate eigenvalues might be difficult to find .    to properly estimate the eigenvalues @xmath265 of the hamiltonian from this distribution",
    ", one must take into account the periodicity of @xmath266 . if @xmath267 and @xmath268 , where @xmath269 is an integer , then @xmath270 .",
    "this means that to get all the eigenvalues correctly @xmath264 must be positive and less than one .",
    "since @xmath271 this means all the eigenvalues @xmath265 must be negative , this merely means subtracting a constant we denote @xmath272 from the hamiltonian , @xmath273 , where @xmath272 is greater than the largest eigenvalue of @xmath32 .",
    "the values we read out from the work qubits are integers from zero to @xmath261 . in other words",
    ", we have @xmath247}2^w\\in [ 0 , 2^w-1]$ ] , with @xmath274 for @xmath275 .",
    "the value @xmath274 corresponds to the lowest eigenvalue possible to measure , @xmath276 , while @xmath277 corresponds to @xmath272 .",
    "the interval of possible values is then @xmath278 .",
    "if we want to have all possible eigenvalues in the interval the largest value @xmath249 can have is @xmath279      in the general case one does not know the upper and lower bounds on the eigenvalues beforehand , and therefore for a given @xmath272 and @xmath249 one does not know if the @xmath247}$ ] values are the correct ones , or if an integer has been lost in the exponential function .    when @xmath280 for one @xmath249 , and we slightly change @xmath249 , @xmath281 will change if @xmath282 as the period of the exponential function is a function of @xmath249 . to find out which of @xmath247}$]s are greater than one ,",
    "we perform the phase - estimation algorithm with different values for @xmath283 and see which eigenvalues shift .",
    "if we measure the same @xmath264 after adding @xmath284 to the time step , and @xmath285 is not a rational number , we know that @xmath286",
    ". in practice it does not have to be an irrational number , but only some unlikely fraction .",
    "there are at least two methods for finding the eigenvalues .",
    "one can start with a large positive @xmath272 and a small @xmath249 , hoping to find that the whole spectrum falls within the range @xmath287 $ ] , and from there zoom in until the maximal eigenvalue is slightly less than @xmath272 and the groundstate energy is slightly larger than @xmath276 .",
    "this way the whole spectrum is covered at once .",
    "from there we can also zoom in on specific areas of the spectrum , searching the location of the true eigenvalues by shifting @xmath249 .",
    "the number of measurements needed will depend entirely on the statistics of the probability distribution .",
    "the number of eigenvalues within the given energy range determines the resolution needed .",
    "that said , the number of measurements is not a bottleneck in quantum computer calculations .",
    "the quantum computer will prepare the states , apply all the operations in the circuit and measure .",
    "then it will do it all again",
    ". each measurement will be independent of the others as the system is restarted each time . this way the serious problem of decoherence only apply within each run , and the number of measurements is only limited by the patience of the scientists operating the quantum computer .",
    "in this section we present the results for the hubbard model and the pairing model of eqs .",
    "( [ eq : hubbard ] ) and ( [ eq : pairing ] ) , respectively , and compare the simulations to exact diagonalization results . in fig .",
    "[ fig : p24 - 13 - 15im ] we see the resulting probability distribution from the simulated measurements , giving us the eigenvalues of the pairing model with six degenerate energy levels and from zero to 12 particles .",
    "the pairing strength was set to @xmath288 .",
    "the eigenvalues from the exact solutions of these many - particle problems are @xmath36 , @xmath186 , @xmath289 , @xmath290 , @xmath291 , @xmath292 , @xmath293 , @xmath294 , @xmath295 , @xmath296 .",
    "all the eigenvalues are not seen as this is the probability distribution resulting from one random input state .",
    "a different random input state in each run could be implemented on an actual quantum computer .",
    "these are results for the degenerate model , where the single - particle energies of the doubly degenerate levels are set to zero for illustrate purposes only , since analytic formula are available for the exact eigenvalues .",
    "the block diagonal structure of the pairing hamiltonian has not been used to our advantage in this straightforward simulation as the qubit basis includes all particle numbers .    we have also performed tests of the algorithm for the non - degenerate case , with excellent agreement with our diagonalization codes , see discussion in ref .  @xcite .",
    "this is seen in fig .",
    "[ fig : p24 - 17-e3imd ] where we have simulated the pairing model with four energy levels with a total possibility of eight fermions .",
    "we have chosen @xmath288 and @xmath297 , so this is a model with low degeneray and since the dimension of the system is @xmath298 there is a lot of different eigenvalues . to find the whole spectrum one would have to employ some of the techniques discussed in subsection  [ sec : output ] .",
    "the largest possible amount of different eigenvalues is @xmath299 , where @xmath269 is the number of simulation qubits .",
    "the resolution in the energy spectrum we get from measuring upon the work qubits is @xmath300 , with @xmath259 the number of work qubits .",
    "therefore the resolution per eigenvalue in a non - degenerate system is @xmath301 .",
    "the higher the degeneracy the less work qubits are needed .    in fig .",
    "[ fig:24 - 17 - 1t0 ] we see the results for the hubbard model eq .",
    "( [ eq : hubbard ] ) with @xmath302 , @xmath303 and @xmath304 .",
    "the reason we chose @xmath303 was just because of the higher degeneracy and therefore fewer eigenvalues .",
    "the number of work qubits is @xmath305 and the number of simulation qubits is eight for a total of @xmath164 qubits .",
    "the difference between work qubits and simulation qubits is eight which means there are @xmath306 possible energy values for each eigenvalue . combining that with the high degeneracy we get a very sharp resolution",
    ". the correct eigenvalues with degeneracies are obtained from exact diagonalization of the hamiltonian , the degeneracy follows the eigenvalue in paranthesis : 0(1 ) , 1(8 ) , 2(24 ) , 3(36 ) , 4(40 ) , 5(48 ) , 6(38 ) , 7(24 ) , 8(24 ) , 9(4 ) , 10(8 ) , 12(1 ) .",
    "we can clearly see that even though we have a random input state , with a random superposition of the eigenvectors , there is a correspondence between the height of the peaks in the plot and the degeneracy of the eigenvalues they represent .",
    "the number of time intervals , @xmath189 , is the number of times we must implement the time evolution operator in order to reduce the error in the trotter approximation @xcite , see eq .",
    "( [ eq : trotter1 ] ) . in our program",
    "we have only implemented the simplest trotter approximation and in our case we find that we do not need a large @xmath189 before the error is small enough . in fig .",
    "[ fig:24 - 17 - 1t0 ] @xmath189 is only one , but here we have a large number of work qubits . for other or larger systems it might pay off to use a higher order trotter approximation .",
    "the total number of operations that have to be done is a multiple of @xmath189 , but this number also increases for higher order trotter approximations , so for each case there is an optimal choice of approximation .    in figs .",
    "[ fig : p24 - 15 - 1im ] and [ fig : p24 - 15-e1im ] we see the errors deriving from the trotter approximation , and how they are reduced by increasing the number of time intervals .",
    "the results in this figure are for the degenerate pairing model with 24 qubits in total , and ten simulation qubits with @xmath307 and @xmath288 . in fig .",
    "[ fig : p24 - 15 - 1im ] we had @xmath308 while in fig .",
    "[ fig : p24 - 15-e1im ] @xmath189 was set to ten .",
    "both simulations used the same starting state .",
    "the errors are seen as the small spikes around the large ones which represent some of the eigenvalues of the system .",
    "the exact eigenvalues are @xmath36 , @xmath186 , @xmath289 , @xmath290 , @xmath291 , @xmath292 , @xmath293 , @xmath294 , @xmath295 .",
    "counting the number of single - qubit and @xmath309 operations for different sizes of systems simulated gives us an indication of the decoherence time needed for different physical realizations of a quantum simulator or computer .",
    "the decoherence time is an average time in which the state of the qubits will be destroyed by noise , also called decoherence , while the operation time is the average time an operation takes to perform on the given system .",
    "their fraction is the number of operations possible to perform before decoherence destroys the computation . in table",
    "[ fig : noofgates ] we have listed the number of gates used for the pairing model , @xmath310 , and the hubbard model , @xmath311 , for different number of simulation qubits .",
    ".number of two - qubit gates used in simulating the time evolution operator of the pairing model , @xmath310 , and the hubbard model , @xmath311 , for different number of simulation qubits @xmath269 . [ cols=\"<,^,^,^,^,^,^\",options=\"header \" , ]",
    "in this article we have shown explicitly how the jordan - wigner transformation is used to simulate any many - body fermionic hamiltonian by two - qubit operations . we have shown how the simulation of such hamiltonian terms of products of creation and annihilation operators are represented by a number of operations linear in the number of qubits . to perform efficient quantum simulations on quantum computers",
    "one needs transformations that take the hamiltonian in question to a set of operations on the qubits simulating the physical system .",
    "an example of such a transformation employed in ths work , is the jordan - wigner transformation . with the appropriate transformation and relevant gates or quantum circuits , one can taylor an actual quantum computer to simulate and solve the eigenvalue and eigenvector problems for different quantum systems .",
    "specialized quantum simulators might be more efficient in solving some problems than others because of similarities in algebras between physical system of qubits and the physical system simulated .",
    "we have limited the applications to two simple and well - studied models that provide , via exact eigenvalues , a good testing ground for our quantum computing based algorithm . for both the pairing model and the hubbard model",
    "we obtain an excellent agreement .",
    "we plan to extend the area of application to quantum mechanical studies of systems in nuclear physics , such as a comparison of shell - model studies of oxygen or calcium isotopes where the nucleons are active in a given number of single - particle orbits @xcite .",
    "these single - particle orbits have normally a higher degeneracy than @xmath312 , a degeneracy studied here",
    ". however , the algorithm we have developed allows for the inclusion of any degeneracy , meaning in turn that with a given interaction @xmath10 and single - particle energies , we can compare the nuclear shell - model ( configuration interaction ) calculations with our algorithm .",
    "this work has received support from the research council of norway through the center of excellence program .",
    "we list here some useful relations involving different @xmath17 matrices , @xmath313=-2i\\sigma_y,\\ ] ] @xmath314=2i\\sigma_z,\\ ] ] and @xmath315=2i\\sigma_x.\\ ] ]      the hermitian @xmath17-matrices @xmath69 , @xmath70 and @xmath71 result in the identity matrix when squared @xmath317 which can be used to obtain simplified expressions for exponential functions involving @xmath17-matrices @xmath318    the equations we list below are necessary for the relation between a general unitary transformation on a set of qubits with a product of two - qubit unitary transformations .",
    "we have the general equation for @xmath319 , where @xmath320 .",
    "@xmath321 ) \\notag\\\\    & & = \\frac{i}{2}[b , a].\\end{aligned}\\ ] ] the more specialized equations read @xmath322"
  ],
  "abstract_text": [
    "<S> we show in detail how the jordan - wigner transformation can be used to simulate any fermionic many - body hamiltonian on a quantum computer . </S>",
    "<S> we develop an algorithm based on appropriate qubit gates that takes a general fermionic hamiltonian , written as products of a given number of creation and annihilation operators , as input . </S>",
    "<S> to demonstrate the applicability of the algorithm , we calculate eigenvalues and eigenvectors of two model hamiltonians , the well - known hubbard model and a generalized pairing hamiltonian . </S>",
    "<S> extensions to other systems are discussed . </S>"
  ]
}
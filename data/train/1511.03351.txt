{
  "article_text": [
    "social media sharing has been an extremely popular social interaction in online social networks ( osn ) nowadays . for example , on the world s most popular video sharing web site youtube , there are more than 1 billion active users , who averagely upload 300 hours of video contents per minute @xcite . for another example , since facebook has launched the video sharing platform in 2014 , more than 1 billion videos are watched on facebook every day @xcite .",
    "although most of the current social media contents are free and available for all the others , the portion of social media contents that require specific access privileges keeps increasing .",
    "the phenomena can be driven by interest or by privacy requirement . in both cases , there is a need of media access control mechanism .",
    "specifically , since the social media contents are generally stored in the servers owned by the osns , while not managed by the media data distributors themselves , it is more appropriate to apply encryption - based access control instead of rule - based access control .",
    "additionally , due to the diversity of social attributes and the heterogeneity of network environment associated with different social network users , it is reasonably desired to distribute a media content in different versions with different qualities @xcite . with the support of scalable media formats such as jpeg 2000 and h.264 scalable video coding ( svc ) ,",
    "the media stream can be encoded into a base layer that provides the lowest quality , and enhancement layers for enhancing the media data quality in terms of multiple factors such as frame rate , resolution , and snr @xcite .",
    "take the 2-by-3-by-2 data structure shown in fig.[intro ] as an example , the base layer ( 0,0,0 ) provides the media quality with the lowest snr , the lowest frame rate , and the lowest resolution . with an additional enhancement layer ( 1,0,0 ) ( ( 0,1,0 ) , ( 0,0,1 ) ) , the media quality improves in terms of snr , ( frame rate , resolution ) .",
    "more enhancement layers corresponds to higher media qualities .",
    "we hence need to assign an access key to each layer , and set an access policy for each media quality . therefore ,",
    "under the scalable media data structure , the access privileges are no longer just presence and absence , but instead scalable in multiple dimensions and with the total number of @xmath0 in this example . the multi - dimensional scalable media access control ( md - smac ) , which is able to enforce the multiple - dimensional scalable access policies ,",
    "is therefore expected .        in this paper",
    ", we propose a md - smac system based on the proposed scalable ciphtertext policy attribute - based encryption ( scp - abe ) algorithm , which encrypts multiple messages under a scalable attribute - based access tree .",
    "specifically , we assign an access key for each layer of the scalably encoded media content , and then encrypt the key under scp - abe .",
    "the access on a media layer thus requires decrypting the corresponding access key under scp - abe .",
    "a successful decryption requires the attributes described in the corresponding part of the scp - abe access tree .",
    "the more parts an individual s attributes can satisfy the access tree , the more media layers the individual can decrypt , and hence the higher media quality the individual can enjoy .",
    "the rest of the paper is organized as follows . in section 2",
    "we introduce the related work . in section 3",
    "we present the proposed md - smac system for social media sharing .",
    "security and performance analysis are presented in section 4 .",
    "finally , conclusions are summarized in section 5 .",
    "as we know , when a media content is encoded in a scalable manner , there will be multiple layers generated . as a consequence",
    ", key distribution will become troublesome since multiple access keys may be sent to one data consumer . in order to reduce the cost of key distribution , related works @xcite usually expand one access key as multiple segments .",
    "the number of segments is equal to the number of dimensions .",
    "additionally , segments of lower - level access keys can be generated from the corresponding segments of higher - level access keys through one - way hash chains . in this way",
    ", only one access key needs to be sent to each data consumer .",
    "hence , the key distribution cost suppose to significantly decrease with slightly sacrificing the computation cost .",
    "unfortunately , such method may result in user collusion when the media layers are organized following the multi - dimensional scalable format .",
    "that is two users may collude with each other to generate a valid but illegal access key for unauthorized higher level access .",
    "the resistance of such collusion attack requires increasing the number of key segments . from the results shown in @xcite , the best performance of a collusion secure scheme needs @xmath1 key segments under a @xmath2-by-@xmath3-by-@xmath4 ( @xmath5 ) data structure , but at the same time results in @xmath6 more hash calculations . as a result ,",
    "the communication cost saved by segmenting access keys is less significant , while the resulted computation cost is more than expected .",
    "therefore , the aim to reduce the cost of key distribution is not sufficiently meaningful .",
    "we hence consider a more important issue of scalable access control under the social media sharing application as how to distribute the access keys among media data consumers . to solve this problem ,",
    "a recent research @xcite has reported a multi - message ciphertext policy attribute - based encryption ( mcp - abe ) scheme to achieve fine - grained scalable media access control .",
    "specifically , this scheme sets a scalable access policy for the scalable media data , and encrypts the access keys under the policy .",
    "data consumers with proper attributes can obtain the specific access keys and then acquire the media data with the corresponding quality .",
    "this scheme is rather flexible in terms of key distribution , since the data distributor does not need to distribute access keys for each consumer .",
    "however , this scheme only considers the media data with one - dimensional scalability . in @xcite ,",
    "a 2-dimensional scalable access control scheme is proposed by converting the 2-dimensional scalable data structure into a tree structure .",
    "but there is no discuss on how to expand the scheme to achieve md - smac .",
    "this issue is addressed in our work .",
    "more specifically , we propose a md - smac system based on the proposed scp - abe algorithm , which is able to adapt to data structures that are scalable in terms of arbitrary dimensions .",
    "in the proposed scalable media access control architecture as shown in fig.[architecture ] , there are four communication parties , i.e. the data distributor who owns the copyright of the media contents , the data consumers who are interested in the media contents , the osn servers run by the social networking site , and the attribute authority ( aa ) who authorizes the attributes involved in the access policies . in practice , the aa can be run by a trusted third party . or alternatively , data distributors can run their aas by themselves . in either way , the aa should be guaranteed accessible by the data consumers .    in the system , a media stream is encoded into a manner that the quality is scalable in multiple dimensions .",
    "each resulted media layer is encrypted by an access key , which is further encrypted under the scp - abe algorithm .",
    "the encrypted media stream and the encrypted access keys are stored on the osn servers , and accessible for all data consumers .",
    "a data consumer decrypts the media stream by first decrypting the access keys using their scp - abe user keys that are assigned by the aa according to their attributes .",
    "the principle of scalable media access control is that the access to the higher level media layer guarantees the access to the lower level media layer @xcite . in attribute - based access control schemes ,",
    "attributes determine access privileges .",
    "therefore , to achieve scalable access control , the attributes associated with the higher level layer should also satisfy the access policy to the lower level layer . in a 3d - scalable media data structure ,",
    "e.g. the 2-by-3-by-2 one shown in fig.[intro ] , suppose the access policy associated with the layer @xmath7 is @xmath8 , then we always have : @xmath9 based on this rule , we can further conclude that : @xmath10 we follow these access privilege enforcement principles when designing the scp - abe algorithm .",
    "for the 2d - scalable media data structure shown in fig.[tree ] , we hence have @xmath11 , @xmath12 , and @xmath13 .",
    "furthermore , we have @xmath14 .",
    "similarly , we have @xmath15 .",
    "the proposed scp - abe algorithm is a variation of the cp - abe algorithm @xcite . in cp - abe scheme ,",
    "a message is encrypted under an access policy and a secret key of a user is associated with a set of attributes , which are authorized by attribute authorities ( aas ) .",
    "a user could decrypt the message only if his or her attributes satisfy the access policy . instead of encrypting one message in one ciphertext as in cp - abe , scp - abe encrypts multiple ones in one ciphertext .",
    "under the proposed md - smac system , a message refers to an access key that is used to encrypt a media layer .",
    "the messages a user can decrypt depends on the individual s access privilege , which is determined by the individual s attributes .",
    "similar to cp - abe , scp - abe algorithm is also based on the bilinearity property and the non - degeneracy property of bilinear map .",
    "moreover , scp - abe algorithm is composed of six sub - algorithms including system setup , access tree construction , encryption , decryption , user key generation , and delegation .",
    "we present scp - abe by first introducing the properties of bilinear map , and then describing each sub - algorithm .",
    "let @xmath16 and @xmath17 be two multiplicative cyclic groups of prime order @xmath18 .",
    "let @xmath19 be a generator of @xmath16 and @xmath20 be a bilinear map , @xmath21 .",
    "then @xmath20 has the following properties :    * _ bilinearity _ : for all @xmath22 and @xmath23 , we have @xmath24 . * _ non - degeneracy _ : @xmath25 .",
    "the setup algorithm chooses a bilinear group @xmath16 of prime order @xmath18 with generator @xmath19 , and two random exponents @xmath26 .",
    "the public key @xmath27 and the master key @xmath28 are returned as : @xmath29 , @xmath30 .",
    "given the scalable data structure and the corresponding access policies , the access key generation algorithm constructs the access tree , which has the feature that the access to higher level data layer guarantees the access to lower level data layer , but not vice versa . for ease of presentation",
    ", we here use the 2d - scalable ( @xmath31-by-@xmath32 ) data structure to describe the access tree construction algorithm .",
    "however , note that the process is applicable for multiple - dimensional scalable data structure .",
    "suppose that the access policy corresponding to each data segment @xmath33 @xmath34 is @xmath35 .",
    "the access policy has the property that @xmath36 if @xmath37 , meaning that all rules in @xmath35 are included in @xmath38 if @xmath39 has longer distance to @xmath40 than @xmath33 .",
    "then the access tree @xmath41 is constructed as following .",
    "a.   to begin with , we define the _ referee _ for @xmath42 as the key(s ) in the path from @xmath33 to @xmath40 that is ( are ) nearest to @xmath33 .",
    "the referee for @xmath40 is defined as itself . in the example shown in fig .",
    "5 , the referees of @xmath43 , and @xmath44 are ( @xmath40 ) , ( @xmath40 ) , ( @xmath45 ) , ( @xmath46 ) , and ( @xmath47 ) , respectively . additionally",
    ", we divide the data segments into @xmath48 groups according to their distances to @xmath40 in the data structure . under the data structure shown in fig .",
    "5 , there are four groups , i.e. @xmath49 , @xmath50 , @xmath51 , and @xmath52 .",
    "let @xmath53 be the union access policy of members in group @xmath54 , and @xmath55 be the common access policy of members in group @xmath56 .",
    "b.   construct the sub - tree @xmath57 according to @xmath58 .",
    "c.   then we construct @xmath59 according to @xmath60 , and @xmath61 according to @xmath62 , where @xmath63 is the common access policy of members in group @xmath64 that @xmath65 belongs to , and @xmath66 is the referee(s ) of @xmath35 .",
    "the root @xmath67 of @xmath68 is called key node .",
    "d.   let @xmath69 and an additional attribute @xmath70 be the children of the @xmath71 gate , build the subtree @xmath72 , whose root is @xmath73 .",
    "e.   let all @xmath73 in the group @xmath74 be the children of the @xmath75 gate , build the group subtree @xmath76 .",
    "let @xmath77 be @xmath78 , and @xmath79 be @xmath59 .",
    "f.   the whole access tree is constructed group by group in a bottom - to - up manner .",
    "starting from @xmath80 , for group @xmath56 , let an @xmath71 gate be the mother of the root of @xmath76 and an @xmath81 gate whose children are a selected attribute @xmath82 and the root of @xmath83 . then let the @xmath71 gate and @xmath84 be the children of a new @xmath71 gate .",
    "let the new constructed tree as @xmath85 , and recursively do the previous steps until all groups are in the access tree .",
    "the root of the access tree will be an @xmath71 gate .",
    "then we choose a polynomial @xmath86 for each tree node @xmath87 in the access tree @xmath88 in a manner as : ( 1 ) from the bottom to up , set the degree @xmath89 of the polynomial @xmath86 to be @xmath90 , where @xmath91 is the threshold value of node @xmath87 ; ( 2 ) for the root node @xmath92 , choose a random @xmath93 and set @xmath94 , and randomly choose other points of polynomial @xmath95 ; ( 3 ) for any other node @xmath87 , set @xmath96 , and randomly choose other points of @xmath86 .",
    "figure [ tree ] indicates a case of access tree construction based on a 2-by-3 data structure .    in the access tree structure",
    ", we have added some additional attributes except for the attributes related to the access policies .",
    "specifically , @xmath97 is used to enable users to compute starting from the level where @xmath56 locates .",
    "for example , if the attributes of a user only conform to @xmath60 , the user takes the user key corresponding to attributes in @xmath60 and @xmath98 as input of the decryption algorithm , and performs decryption operation starting from the level that @xmath99 locates .",
    "if the user has attributes that conform to @xmath100 , he or she can instead perform decryption starting from the level that @xmath101 locates . additionally , @xmath102 is used to guarantee the uniqueness of each key node , which is essential to enforce the access policies .",
    "for example , without @xmath103 and @xmath104 , @xmath105 will be equal to @xmath106 since their mother node has the degree of zero . as a result",
    ", a user who can access @xmath105 will also be able to access @xmath106 even without the required attributes .",
    "the encryption algorithm encrypts the data segments .",
    "let @xmath107 be the set of leaf nodes in @xmath88 , @xmath108 be the set of key nodes @xmath73 @xmath34 , and @xmath33 be the corresponding data segment , the ciphertext is given as @xmath109      the decryption algorithm takes as input several messages encrypted under an access policy , a secret key @xmath110 of a user , and the public key @xmath27 .",
    "the number of access keys that a user is able to decrypt depends on how much the attributes can satisfy the access policy .",
    "suppose that the highest level of access keys a user can obtain is @xmath39 @xmath111 .",
    "starting from @xmath112 , the user needs to perform the following computation for each leaf node @xmath87 of @xmath112 and that locates at the path from @xmath113 to the root . @xmath114",
    "then the user recursively computes the corresponding values of non - leaf nodes including the key nodes , in a bottom - up manner using polynomial interpolation technique @xcite , until reaches the root and obtains : @xmath115 in this process , the user also obtains : @xmath116 furthermore , the user compute @xmath117 .",
    "each data segment @xmath33 @xmath118 can then be decrypted as following .",
    "@xmath119      the algorithm generates user secret keys used for deriving the access keys . specifically , taking a set of attributes @xmath120 as input , the key generation algorithm outputs a secret key that identifies with the set .",
    "the algorithm selects a random @xmath121 for every attribute in @xmath120 .",
    "note that @xmath120 always include @xmath97 , and @xmath102 .",
    "the user secret key is computed as @xmath122      given a user secret key @xmath110 with the attribute set @xmath120 , the delegation algorithm creates a new user secret key @xmath123 with the attribute set @xmath124 .",
    "specifically , the algorithm selects a random number @xmath125 and also @xmath126 .",
    "then @xmath123 is created as @xmath127      following the access privilege enforcement principle , the attributes associated with a higher level access key always contains those associated with a lower level access key .",
    "if we simply apply an existing abe algorithm to encrypt each access key separately , the computation power will be significantly wasted on repeatedly computing on the overlapped attributes .",
    "such redundant computations can be avoided in the proposed scp - abe algorithm , since the access tree is organized in a scalable manner .",
    "therefore , the proposed scp - abe algorithm is essential for the efficiency of the md - smac system .",
    "additionally , the delegation algorithm in scp - abe provides additional flexibilities for social media sharing .",
    "for example , if a media data distributor individually runs the aa , which is not reachable for friends friends , the distributor s friends can run the delegation algorithm and assign user keys for their friends .",
    "the detailed discussion will be presented in our future work .",
    "by encrypting the media layers resulted from scalable media format under scp - abe , the proposed md - smac system enables a data distributor to define fine - grained and scalable access privileges on the media contents shared on the osns . in this process",
    ", there is a potential collusion issue that two or more data consumers may collude with each other and try to obtain an access privilege higher than they suppose to deserve . in this section ,",
    "we present analysis on how collusion resistance is provided by the proposed md - smac system .",
    "specifically , we consider collusion in the following two cases . for ease of presentation",
    ", we use the media data structure shown in fig .",
    "[ tree ] .",
    "a classical collusion issue in smac is that the user who has access key @xmath33 ( e.g. @xmath128 ) and other lower level access keys ( e.g. @xmath40 and @xmath45 ) collude with the user who owns access key @xmath39 ( e.g. @xmath129 ) and other lower level access keys ( e.g. @xmath40 ) , trying to derive the target access key @xmath130 ( @xmath131 , e.g. @xmath44 ) and all lower level access keys that the two users do not have ( e.g. @xmath132 ) .",
    "since the target access key always locate at a different group ( as defined in scp - abe access tree construction algorithm ) , we refer such collusion as cross group collusion .",
    "since the access keys are encrypted under scp - abe , the success of such collusion requires the attributes of the two users satisfy the access policy corresponding to the target access key . for example",
    ", the derivation of @xmath44 from @xmath128 and @xmath129 needs @xmath133 . under the access privilege enforcement principle",
    ", we have @xmath134 .",
    "the success of collusion then requires @xmath135 , which means there is no @xmath136 or @xmath137 in the access tree and hence no @xmath138 or @xmath139 .",
    "however , to avoid that @xmath132 and @xmath44 are transmitted in plain text , they have to be encrypted under scp - abe .",
    "therefore , such collusion is infeasible .",
    "the other potential collusion issue is that two users exchange their attributes to obtain a specific access privilege .",
    "for example , suppose @xmath60 is @xmath140 _ and _ @xmath141 .",
    "one user owns attributes @xmath141 , while the other user just owns the attribute @xmath140 .",
    "the two users then try to collude and decrypt @xmath40 . for the first user",
    ", he has the following secret key and is able to compute @xmath142 for leaf node @xmath141 in @xmath59 .",
    "@xmath143    for the second user , he has the following secret key and is able to compute @xmath144 for leaf node @xmath140 in @xmath59 .",
    "@xmath145 their goal is to obtain @xmath146 , which is essential to derive @xmath147 and to decrypt @xmath40 .",
    "however , @xmath146 should be either @xmath148 or @xmath149 .",
    "if the first user wants to compute @xmath146 , he needs the second user to send him @xmath150 , instead of @xmath151 that the second user has .",
    "therefore , the first user can not obtain @xmath146 .",
    "similarly , the second user can not obtain @xmath146 either .",
    "therefore , the random collusion is also infeasible in our proposed system .      in the proposed md - smac system ,",
    "a media data distributor always first encrypts their media content before distribution , while a media data consumer always needs to perform decryption before enjoying the media content .",
    "the encryption and decryption operations on online media contents actually have already been widely applied in web sites nowadays with the emergence of security requirement .",
    "therefore , the extra cost in the proposed md - smac system merely results from the operations under scp - abe . in this section ,",
    "we present analysis and experimental results of the scp - abe computation cost on both data distributor side and data consumer side .",
    "distributor side computation cost mainly comes from scp - abe encryption , which involves pairings , exponentiations , and multiplications computations on @xmath152 and @xmath99 .",
    "the encryption computation cost linearly increases with the number of attributes .",
    "we measure the average computation time per attribute on the user side on google nexus 4 ( 1.5ghz quad - core snapdragon s4 pro with krait cpus , android 5.0 ) , and on lenovo t430 ( 2.6ghz intel i5 cpu , ubuntu 14.04 ) over 512-bit finite field . ] , which are 60ms and 35ms respectively .",
    "suppose the given media content has @xmath31 layers , and the access policy of layer @xmath153 involves @xmath154 ( @xmath155 ) attributes .",
    "plus the additional @xmath32 attributes involved in the scp - abe algorithm , there will be @xmath156 attributes in total .",
    "the total computation time of scp - abe encryption and decryption can be obtained accordingly .",
    "consumer side computation cost results from scp - abe decryption , which include pairings and multiplications computations on @xmath99 . for scp - abe decryption ,",
    "the computation cost is not only impacted by the number of attributes , but also by the access policies . for simplification ,",
    "we adjust the access policies and make the computation cost grow with the number of attributes in approximately linear way , and test the computation time per ten attributes on devices .",
    "the result is 48ms on smart phone and 25ms on laptop .",
    "the server side computation cost comes from delegation .",
    "the aa side computation cost comes from user key generation .",
    "both of the two algorithms involve in exponentiations and multiplications on @xmath152 and @xmath99 . according to the results provided in @xcite ,",
    "the computation time of user key generation is about 30ms per attribute on workstation with 64-bit 3.2 ghz pentium 4 processor .",
    "the computation time of delegation is almost the same .",
    "we have presented in this paper a novel scalable ciphertext policy attribute - based encryption ( scp - abe ) algorithm , and based on what designed a multi - dimensional scalable media access control ( md - smac ) system . with this system , we are able to achieve secure and fine - grained access control on social media contents encoded in multi - dimensional scalable format . we have confirmed the effectiveness of the proposed system through both numerical analysis and mobile terminal implementation with typical laptop and smart phone .",
    "10 http://expandedramblings.com/index.php/youtube-statistics/ http://www.businessinsider.com/facebook-video-statistics-2015-1 zhu , x. ; chen , c. w. ,  a collusion resilient key management scheme for multi - dimensional scalable media access control , \" image processing ( icip ) , the 18th ieee int .",
    "conference on , pp.2769,2772 , 11 - 14 sept .",
    "schwarz , h. ; marpe , d. ; wiegand , t. ,  overview of the scalable video coding extension of the h.264/avc standard , \" circuits and systems for video technology , ieee trans .",
    "on , vol.17 , no.9 , pp.1103,1120 , sept .",
    "zhu , b.b . ; feng , m. ; li , s. ,  an efficient key scheme for layered access control of mpeg-4 fgs video , \" icme 04 .",
    "2004 ieee international conference on , pp.443,446 , 30 - 30 june 2004 .",
    "imaizumi , s. ; fujiyoshi , m. ; abe , y. ; kiya , h. ,  collusion attack - resilient hierarchical encryption of jpeg 2000 codestreams with scalable access control , \" image processing , 2007 .",
    "icip 2007 .",
    "ieee international conference on , vol.2 , no .",
    ", pp.ii - 137,ii - 140 , sept . 16 2007-oct .",
    "crampton , j. ; daud , r. ; martin , k. m. ,  constructing key allignment schemes from chain partitions \" , proc .",
    "the 24th annual ifip wg 11.3 working conference on data and applications security and privacy , 2010 .",
    "wu , y. ; zhuo , w. ; deng , r. ,  attribute - based access to scalable media in cloud - assisted content sharing networks , \" multimedia , ieee transactions on , vol.15 , no.4 , pp.778,788 , june 2013 .",
    "ma , c. ; chen , c. w. ,  secure media sharing in the cloud : two - dimensional - scalable access control and comprehensive key management , \" multimedia and expo ( icme ) , 2014 ieee international conference on , pp.1 - 6 , 14 - 18 july 2014 .",
    "bethencourt , j. ; sahai , a. ; waters , b. ,  ciphertext - policy attribute - based encryption , \" security and privacy , 2007 .",
    "ieee symposium on , pp.321,334 , 20 - 23 may 2007 ."
  ],
  "abstract_text": [
    "<S> media sharing is an extremely popular paradigm of social interaction in online social networks ( osns ) nowadays . </S>",
    "<S> the scalable media access control is essential to perform information sharing among users with various access privileges . in this paper </S>",
    "<S> , we present a multi - dimensional scalable media access control ( md - smac ) system based on the proposed scalable ciphertext policy attribute - based encryption ( scp - abe ) algorithm . in the proposed md - smac system </S>",
    "<S> , fine - grained access control can be performed on the media contents encoded in a multi - dimensional scalable manner based on data consumers diverse attributes . through security analysis </S>",
    "<S> , we show that the proposed mc - smac system is able to resist collusion attacks . additionally , we conduct experiments to evaluate the efficiency performance of the proposed system , especially on mobile devices </S>",
    "<S> .    l    scp - abe , social media sharing , multi - dimensional scalable access control </S>"
  ]
}
{
  "article_text": [
    "over recent years , peer to peer ( p2p ) networks have emerged as the most popular method for sharing and streaming data ( see for instance  @xcite ) .",
    "there has been popular adoption and widespread success due to the high efficiencies that these networks obtain for broadcast data .",
    "apart from personal usage , many companies , like for instance * * red**hat@xmath3 , provide links in order to download their free distributions in a p2p fashion . in doing so",
    ", companies avoid the problem of too many clients connected to their server .",
    "this solves bottleneck or high concentrated transmission cost on a single node with a significant chance of failure at peak loads . on the other hand ,",
    "companies are not the only benefactor .",
    "indeed , it makes things much faster from the point of view of the user even though at the expense of `` being used '' by other users .    another very interesting application where such networks are highly successful concerns the distribution of data for storage purposes .",
    "the idea , in fact , to collect data among users spread over all the world is increasing more and more .",
    "instead of having ( for each one ) a full copy of everything , a community can share resources hence obtaining a distributed storage device .",
    "this permits them to collectively maintain more and more data and it increases also the reliability .",
    "it ensures , in fact , that data will not disappear due to the malfunction of a small number of devices .",
    "the main differences among the two applications we have just outlined are a more collaborative environment and a lower percentage of disappearing pieces of data , with the second being the more reliable in this sense . for downloading purposes ,",
    "in fact , the aim is sometimes to download the required data as fast as possible and then leave the network .",
    "this implies also a higher frequency in peers disappearing . on the other hand , in an ideal world where people collaborate for a common final purpose , we like to imagine both the applications are quite equivalent .",
    "we consider the following processes .",
    "a file is divided into @xmath4 chunks .",
    "the network contains a large number of nodes .",
    "we distinguish among _ peers _ , i.e. , nodes with a number of chunks less than @xmath4 and _ roots _ , i.e. , nodes owning all the chunks .",
    "we assign to peers a probability @xmath5 for which they may disappear .",
    "this means that peers live on average @xmath6 rounds . for the roots we chose a probability @xmath7 .",
    "we consider closed network , i.e. , every time a peer or a root leaves the network a new peer will join with no chunks . for the sake of simplicity we consider a synchronous model . during a round each node can receive or send one chunk ; and at the end of each round any node disappears with respect to the related probability .",
    "we study the following three scenarios :    * spreading or centralized scenario : * peers contain no chunks and there are @xmath8 roots .",
    "we wonder if the _ file is spread into the network_. this happens if all the chunks are sent from the roots inside the network where they multiply themselves .",
    "this can give us a measure for the file length with respect to the life of the last surviving root .",
    "after the last root leaves the network , in fact , either the file has been spread or it is not possible to build it back .",
    "we say in this case , the network ( or the file ) is `` dead '' .",
    "* distributed scenario : * the chunks are widely spread in the network .",
    "there is not a fixed amount of roots , @xmath8 can be also zero , we only require that the whole chunks composing the file are there .",
    "we wonder if the network life is long or short . as we are going to see",
    ", the network life is long when some almost steady state is reached .",
    "this can give us a measure about the conditions ensuring a long life for the network , and , when this happens , how often a full download is completed .    *",
    "survivability scenario : * in this scenario we are interested in studying the network behavior under extreme conditions .",
    "we consider , in fact , the case in which a file is almost never downloaded since peers have a very high volatility .",
    "they almost never stay in the network long enough to perform a full download .",
    "however , it is still very interesting to note that the network is able to survive .",
    "we recall that a network is said to survives whenever it still contains all the @xmath4 chunks composing the original file , no matter where they reside .    given some parameter settings ,",
    "our aim is to answer the question of how long we can expect a network to continue producing new completed downloads . for all the previous three scenarios we provide a stochastic formulation .",
    "we show how parameters should be set up in order to obtain the desired results concerning network survivability and file downloading rate .",
    "it turns out that the eventual fate of the network is mainly dependent on the number of nodes @xmath1 and the number of chunks @xmath4 in which the file is split .",
    "we show how the network may pass through the previous three scenarios before eventually dying .",
    "a lot of work has been devoted to the area of file sharing in p2p networks .",
    "many experimental papers provide practical strategies and preliminary results concerning the behavior of these kind of networks . in  @xcite for instance ,",
    "the authors essentially describe properties like liveness and downloading rate by means of extended experiments and simulations under several assumptions .",
    "concerning analytical models it is very difficult to capture suitable features in order to describe what happens and why protocols like bittorrent  @xcite are so powerful in practice .",
    "suitable models are hard to find that describe what sometimes is easily observable by simulations .",
    "one of the main assumption made in the literature in order to describe the behavior of such networks at a top level concern flow models  @xcite , queueing theory  @xcite , network coding  @xcite and coupon collector aspects  @xcite .",
    "this latter paper mainly focuses on systems in which peers owning some chunks ( usually one at random ) appear in the network with some probability and disappear as soon as they complete their download . recently in  @xcite",
    ", the distribution of @xmath4 chunks on a network with diameter @xmath9 and maximum degree @xmath10 has been proved to require at most @xmath11 rounds of concurrent downloads with high probability .",
    "this is tight within a factor of @xmath10 .",
    "they also specialized to the networks used by bittorrent improving the bound to @xmath12 rounds where @xmath1 is the number of nodes .",
    "such results are quite interesting from a theoretical point of view but sometimes not truly representative of the real life .",
    "the main assumption that collides with practical aspects is that the number of peers participating in the protocol is assumed to be huge , hence obtaining asymptotically optimal results in terms of network survivability and spreading speed of the desired file .",
    "moreover , different from our model many of the previously cited papers do not assume the possibility for a peer to leave the network before it completes the whole file .",
    "this aspect is indeed introduced also in  @xcite . on the other hand",
    "we should immediately point out that if there is at least one root that stays indefinitely , then the file will always be available in the network , if a peer is willing to wait .",
    "we call such a scenario `` _ trivial _ '' since there is no question about the behavior of the network .",
    "in contrast , if all the original @xmath8 roots disappear ( at some time @xmath13 ) then there are many possibilities .",
    "we say a chunk is present in the network if at least one peer has that chunk .",
    "if there exists a chunk that is not present on the network , then no more full downloads are possible .",
    "therefore , the most interesting case is when no roots are persistent ( @xmath14 ) .    when using bittorrent  @xcite or similar programs in order to download desired files , usually such networks look quite different .",
    "the assumption for which a huge number of nodes is participating in the protocol given in  @xcite is indeed too strong .",
    "moreover , in practice , the number of chunks is usually much bigger than the number of nodes composing the network .",
    "this is due to the fact that even if a file is spread among thousands of users , they do not participate concurrently in the protocol . at any given time",
    "the network is usually quite small if compared to the actual number of downloads .",
    "figure  [ adbit ] shows a standard screenshot of the advanced bittorrent window while downloading a file of size roughly @xmath15 . as it is described in the figure , there are @xmath16 peers participating in the protocol with @xmath17 roots and @xmath18 peers while the number of chunks is @xmath19 that is @xmath20 per chunk , hence obtaining @xmath21 chunks . ] .",
    "it is worth noting that under those circumstances the success of these protocols has to reside in the adopted strategies , in contrast with that outlined in  @xcite .",
    "in such a setting , for instance , the `` rarest pieces '' distribution becomes quite important .",
    "this is the peculiarity in bittorrent for which once an empty peer appears in the network it is provided with the least common chunk among the network .",
    "also the `` altruistic user behavior '' is quite crucial from the point of view of the network survivability .",
    "it is based on the observable fact for which peers that terminate their download do not immediately disappear . in  @xcite for instance ,",
    "it is pointed out how friendly users usually behave in the network .",
    "they do not disappear as soon as their download is finished thus ensuring that all the chunks are available .",
    "indeed most of the time this happens since whoever is downloading has just left the computer unattended but working .",
    "the remainder of the paper is organized as follows . in the next section",
    "we give our first insight of p2p networks by introducing the so called spreading scenario .",
    "we show under which conditions a file is successfully spread over the network , hence remains alive .",
    "section  [ sc22 ] describes the so called distributed scenario .",
    "we show under which conditions a file spread over the network can survive according to the number of peers composing the network and the number of chunks in which the file is split .",
    "section  [ sc2 ] is devoted to the so called survivability scenario . in this case",
    "the behavior of the network is studied under critical circumstances like the high volatility of peers persistence .",
    "section  [ model ] provides a simple model for p2p networks in order to obtain numerical results about peers volatility , chunks distributions and downloading rate .",
    "finally , section  [ concl ] provides some conclusive remarks .",
    "in this section we study our first scenario in which a file must be distributed among the network by spreading its @xmath4 chunks .",
    "our model is synchronous . at round @xmath13",
    "the network is composed by @xmath22 roots that disappear with probability @xmath23 . in this scenario",
    "we do not take into account the number of peers .",
    "usually peers are much more than roots but for our analysis we just consider that a root can provide one chunk to one single peer at each round .",
    "this can be seen also by considering at round @xmath13 a number of peers equal to @xmath22 since we are just analyzing the number of rounds needed by the roots in order to spread the file . at a generic round",
    "@xmath13 each peer asks a root for one random chunk . a root answers with a random chunk that has never been spread inside the network before . this implements the previously described `` rarest pieces '' issue .",
    "after each round , roots coordinate with each other in order to maintain the list of chunks that have been sent across the network .",
    "the process is then similar to a coupon collector problem  @xcite .",
    "all the @xmath4 chunks have to be collected , but a chunk can be collected several times during a round . moreover the number of roots from which one can collect a coupon decreases exponentially . let @xmath24 be the number of chunks to be collected at time @xmath13 , i.e. , chunks that have not been distributed until round @xmath13 .    for a given chunk @xmath25 : @xmath26    hence @xmath27 \\approx e^{-\\frac{r_t}{k_t } } k_t$ ] .",
    "assuming for now that @xmath28 $ ] with probability @xmath29 we get @xmath30 \\approx e^{-\\frac{r_t}{k_t } } e[k_t]$ ] .",
    "for @xmath22 the situation is simpler since @xmath22 is just the sum of @xmath8 independent variables , ( each one being described by the series @xmath31 , and @xmath22 is concentrated around its mean @xmath32 .",
    "so we have @xmath33 =   \\alpha_r e[r_t]$ ] .",
    "let @xmath34/e[k_t]$ ] , we get @xmath35    from this , two situations can follow . if @xmath36 , then @xmath37 always increases , and this increase is faster and faster .",
    "this implies that the spreading will easily succeed since the number of chunks not spread decreases much faster than the number of roots that leave the network .",
    "conversely , if @xmath38 , @xmath39 decreases and keep doing it faster and faster .",
    "this means that the process dies soon .    in the first situation",
    "we almost always collect all the chunks otherwise never .",
    "of course , either at some point the chunks are all distributed or there are no roots that can provide the missing chunks .",
    "we can conclude from this first analysis that the file gets spread whenever @xmath40 .",
    "note that when @xmath41 this actually means @xmath42 and this is usually the case .",
    "for @xmath43 we get @xmath44 but , in real world scenarios , this usually does not happen .",
    "in the previous section we gave a necessary and sufficient condition to describe the asymptotic behavior of the network . that is , the network must move from the initial state to the distributed state . in this section",
    "we study the behavior of p2p networks in the distributed state , that is , there are no roots , yet every chunk is available on the network after time @xmath13 . in the following we refer to  @xcite for the applied probabilistic tools .",
    "our next goal is to show that networks that are in the distributed state will not survive if the number of chunks is exponentially big in the number of peers . in order to show this we assume the following model . in each time",
    "step each peer asks a random chunk among all the chunks that the peer is missing .",
    "we assume that if the chunk is anywhere on the network then the peer will get this chunk in the next time step . clearly",
    "this assumption is optimistic and will help the survival of the network .",
    "importantly , this makes the network s gross behavior deterministic and thus we can say with certainty that every peer stays precisely @xmath4 timesteps before leaving , since he gets exactly @xmath29 chunk per timestep .",
    "when a new peer enters , it has no chunks and we may use the variable @xmath45 , with @xmath46 , to indicate its ordering when all peers are sorted according to their number of chunks .",
    "this ordering is equivalent to the chronological ordering .",
    "after @xmath47 time steps , each peer is promoted to the next ordinal position .",
    "we point out that nothing changes in the network viability unless a peer leaves , and further the only peer that may leave is the last one , or the one with the most chunks ; eventually the last peer will have @xmath4 chunks when the file has been completely downloaded .",
    "we wish to bound the probability that a chunk will be missing .",
    "therefore the number of chunks that each peer @xmath45 has is @xmath48 whenever a peer is leaving .    to be precise , we imagine the total network state at any time to be given by a binary vector of length @xmath49 ; that is",
    ", @xmath50 in @xmath51 , the first @xmath4 coordinates describe the chunks held by the first peer . in this first part ,",
    "the first coordinate is @xmath29 if and only if the first peer holds the first chunk , otherwise , it is @xmath52 .",
    "the next coordinate indicates the next chunk , and so on for all @xmath4 chunks .",
    "we will define an event @xmath53 on @xmath51 such that @xmath54 , peer @xmath45 has exactly @xmath55 chunks .",
    "let @xmath56 be the event that peer @xmath45 has chunk @xmath57 .",
    "let @xmath58 be the indicator variable of @xmath56 .",
    "let @xmath59 , i.e. , @xmath60 is the indicator variable of the event that chunk @xmath57 is in the system .",
    "we define the random variable @xmath61 as follows : it is the indicator variable of the event that there is a missing chunk in the network . in other words ,",
    "@xmath62 means the network has died , and @xmath63 means it continues to distribute the file .",
    "let @xmath1 and @xmath4 be the number of peers and chunks in the system respectively . for @xmath64 , the probability that there is a missing chunk can be bounded by @xmath65\\leq k",
    "n e^{-n}$ ] .    by the union bound over all @xmath4 chunks , @xmath66<k \\pr[y^1=0 ] = k \\prod_{i=1}^{n } \\frac{i } { n}= k \\frac{n!}{n^n}\\ ] ] and by sterling s approximation , @xmath67 @xmath68    the next corollary shows that if the number of chunks is small the probability for the network to die approaches 0 .    for all @xmath69 , @xmath70 = 0.\\ ] ]",
    "the next corollary shows that if the number of chunks is small the system survives for a long time .",
    "if the number of chunks is a polynomial @xmath71 then the expected survival time is at least @xmath72      the main problem in proving the lower bound is the dependence between the random variables @xmath60 and @xmath73 . to remove this technical difficulty we use a different model , the binomial model",
    "the idea is to make @xmath60 and @xmath73 i.i.d",
    ". variables . in order to prove a lower bound on the previous model we increase the expected number of chunks that peer @xmath45 has at the time the last peer leaves the network .",
    "i.e. , we relax the assumption that , at the time the last peer leaves the network , the number of chunks in the peer @xmath45 is @xmath74 .",
    "moreover we assume that the number of chunks is a binomial random variable .",
    "this assumption is legitimate since the binomial distribution is highly concentrated .",
    "the problem with this approach is that now we are no longer sure that each peer has enough chunks .",
    "the way we solve this problem is by strengthening the peer capabilities by increasing the chance that a peer has received chunk @xmath45 . since in a normal file sharing system chunks",
    "are correlated and peers have a smaller number of chunks , our lower bound also captures the behavior of these systems .",
    "this is justified since both assumptions ( increasing the number of packets and the fact that packets are i.i.d ) decrease the probability of failure .",
    "we do not offer a method to achieve this , but rather we use this approach to prove a lower bound with high probability .",
    "we posit this property ( the binomial distribution ) for the proof .",
    "we assume that the peers @xmath75 have @xmath76 chunks on average .",
    "more precisely , let @xmath77 be a bernoulli random variable such that @xmath78=\\frac{i}{n+1}$ ] .",
    "let @xmath79 be a random variable that counts the number of chunks that peer @xmath45 has .",
    "note that @xmath80=\\frac{k i}{n+1}$ ] .",
    "the next lemma bounds the probability that peer @xmath45 will have less than @xmath81 chunks .",
    "[ rlem ] let @xmath82 be the number of different chunks belonging to peer @xmath45 . for all @xmath83 , @xmath84 < e^{-\\frac { k}{2 n^3(n+1 ) } } $ ] .",
    "@xmath85=\\pr\\left[\\mathcal{g}_i < \\left(1-\\frac{n+1 - 1}{i n}\\right)\\frac{ki}{(n+1)}\\right]<\\ ] ] @xmath86 the first equality follows from algebra , and a chernoff bound yields the next inequality .",
    "@xmath68    if @xmath87 we get that the probability that the @xmath45-peer ( bernoulli process ) has less than @xmath88 chunks is exponentially small .",
    "let @xmath89 .",
    "note that @xmath90 is the event that all peers have more chunks than they are supposed to have , i.e. , for all @xmath45 , @xmath91 .    for all @xmath92 , @xmath93",
    "> 1-   n e^{-\\frac { k}{2(n+1)n^3}}$ ] .",
    "@xmath94 = \\prod_{i=1}^{n } \\pr\\left[\\mathcal{g}_i\\geq \\frac{k ( i-1)}{n}\\right ] = \\ ] ] @xmath95 \\right ) \\geq \\prod_{i=1}^{n } \\left ( 1-e^{-\\frac { k}{2(n+1)n^3 } } \\right ) .\\ ] ]    we apply lemma  [ rlem ] to derive the last inequality above .",
    "we choose the smallest term in the product and raise it to the @xmath1 power for the bound :    @xmath94\\geq \\left ( 1-e^{-\\frac {   k}{2(n+1)n^3 } } \\right ) ^{n } > 1-n e^{-\\frac { k}{2(n+1)n^3 } } .\\ ] ] @xmath68    using the previous lemma it follows that the probability for which @xmath96 holds is exponentially small .    for all @xmath97 , @xmath98 <",
    "n e^{-\\frac { k}{2(n+1)n^3 } } $ ] .",
    "after bounding the probability that all the bernoulli peers will have more chunks than the discrete peers , we analyze the probability that the bernoulli peers will fail , i.e. , some chunk is missing .",
    "let @xmath99 , @xmath100 .",
    "note that @xmath101 is equivalent to say that the bernoulli peers will fail .",
    "the following lemmata lead to the last corollary that shows under which condition the network goes to miss some chunk , i.e. , it is not able to deliver any further complete download .",
    "[ ylem]the probability that the bernoulli peers will fail is , @xmath102>\\frac{1}{e^{n+1}}.\\ ] ]    the proof follows from the following computation .",
    "\\frac{i+1}{n+1}=\\frac{(n+1)!}{(n+1)^n } > \\frac{\\frac{(n+1)^{n+1}}{e^{n+1}}}{(n+1)^{n+1}}= \\frac{1}{e^{n+1}}.\\ ] ] @xmath68    @xmath103<e^{-\\frac{k(n+1)}{e^{n+1}}}.\\ ] ]    in order to prove the claim we make use of lemma  [ ylem ] , followed by the limit definition of @xmath104 and then sterling s approximation , hence obtaining @xmath103=\\prod_{j=1}^k \\left(1-\\pr[\\mathcal{y}^j=0]\\right)= \\left(1-\\frac{(n+1)!}{(n+1)^n}\\right)^k \\cong e^{-\\frac{k(n+1)!}{(n+1)^n}}<e^{-\\frac{k(n+1)}{e^{n+1}}}.\\ ] ] @xmath68    for @xmath105 , @xmath66\\geq 1-e^{-\\frac{k(n+1)}{e^{n+1}}}- n e^{-\\frac { k}{2(n+1)n^3}}.\\ ] ]    from bayes law and the complementary events property ,    @xmath66 > \\pr[\\mathcal{z}=0| q ] = \\pr[\\mathcal{z}=0]-\\pr[\\overline{q } ] \\pr[\\mathcal{z}=0|\\overline{q } ] > \\ ] ] @xmath106-\\pr[\\overline{q } ] \\geq 1-e^{-\\frac{k(n+1)}{e^{n+1}}}- n e^{-\\frac { k}{2(n+1)n^3}}.\\ ] ] @xmath68    for all @xmath107 , @xmath70 = 1.\\ ] ]    from the previous corollary it follows that if the number of chunks @xmath4 is bigger than or equal to @xmath108 , then the expected survival time is constant .",
    "in this section we study how likely the network is to survive in extreme conditions . with extreme conditions we mean that a file is almost never downloaded since peers have a very high volatility and almost never stay in the network long enough to perform a full download . however , it is still very interesting to note that the network is able to survive .",
    "we remind that a network survives whenever it still contains all the @xmath4 chunks composing the original file , no matter where they reside .",
    "we will assume that peers leave the system with probability @xmath5 while roots or _ experts _ ( peers that succeed at the full download ) leave the network with probability @xmath23 .    during the process chunks",
    "are duplicated and hence created while others disappear because of nodes leaving the system .",
    "let us denote by @xmath109 the number of nodes ( peers plus experts , assuming roots as experts ) in the network and by @xmath110 the probability ( percentage of peers ) that a peer has @xmath45 chunks .",
    "the number of chunks lost during one time step is then :    @xmath111    the amount @xmath112 of chunks created , depends on how many successful download are performed during a step .",
    "this strongly depends on the chosen protocol . in any case",
    "this amount can not be more than the number of peers with one packet @xmath113 multiplied by the probability to stay inside the network , i.e. , @xmath114 .",
    "hence a necessary condition for the network survival is that    @xmath115    and this leads to have @xmath116 , i.e. , @xmath117 .",
    "when @xmath118 the stationary distribution is as follows @xmath119 , after each communication step all the nodes have a chunk , but then half of them die ( reset to zero chunks ) .",
    "note that such a network dies quite quickly , from deviations .",
    "however , as soon as @xmath120 the network lives almost forever .",
    "our process is very similar to a birth and death process , each node lives on average @xmath121 rounds . and",
    "at each round it generates @xmath122 chunks , hence its average number of children is @xmath123 .",
    "it holds that when this number is strictly greater than @xmath29 the network survives .",
    "let us assume the network to be in some random state with @xmath119 , with @xmath4 chunks regularly spread across the peers with one chunk each .",
    "let @xmath124 be a random variable that denotes the percentage of peers with the @xmath45-th chunk at time @xmath13 .",
    "@xmath125 is deterministic with value @xmath126 .",
    "after the first step of the protocol , we have :    @xmath127 =   { 2f_{0,t } \\choose k } / 2^{2f_{i,0}}\\ ] ]    so after the initial step , chunks are distributed as the sum of @xmath126 random bits .",
    "we study this phenomenon at the critical point in its most canonical form . at time",
    "@xmath13 we have a number @xmath128 of chunks alive , we double each chunk and randomly destroy half of the chunks .",
    "first we consider the future of a single chunk .",
    "let @xmath129 denote the generating series at time @xmath13 associated with the future of chunk @xmath130 .",
    "considering one time step we have : with probability @xmath131 the process dies , with probability @xmath132 the process restarts with @xmath29 chunk and @xmath133 time units remain , with probability @xmath131 we get two chunks and @xmath133 time units remain .",
    "@xmath134    note that by setting @xmath135 , we obtain    @xmath136 and @xmath137 is the probability to stop before time @xmath13 .",
    "so the probability to have the process alive at time @xmath13 is about @xmath138 , and if one considers @xmath1 bits one needs @xmath139 time units to kill all of them .",
    "this scenario is quite optimistic since one assumes that the network exchanges @xmath113 chunks during a round which corresponds to a _ perfect _ situation .",
    "this happens , in fact , by means of a _ perfect matching _ between the nodes that meet their necessities .",
    "indeed , if we make use of a non optimal strategy , i.e. , matching the node in a perfectly arbitrarily way , it is worth noting that this does not affect and degrade the process too much .",
    "a typical way to marry the nodes is to choose randomly for each node a server , and to elect a node randomly for each server . despite the simplicity of this process",
    "( nodes which have all the chunks still demand some , and nodes with no chunks are considered as able to provide some ) , it does not affect the network survivability as we are going to see .",
    "note that , by means of a simple matching algorithm , the number of edges is already of order @xmath140 . among those edges some are unable to duplicate chunks ( if the server does not have any chunks that the client needs ) .",
    "a critical stage occurs when almost all the nodes with chunks have almost no chunks , so the probability for an edge to be useful is indeed exactly @xmath141 . in such a situation",
    "the number of chunks replicated is @xmath142    while the number of chunks destroyed is at least @xmath143 .",
    "this implies that the network survives when @xmath144 .",
    "to better understand the behavior of this kind of network we propose a simplified model and protocol . such a model can be easily applied and modified in order to find preliminary results on p2p networks",
    "we have also compared our easy model s results to the outputs of more sophisticated simulators .",
    "even though the comparison is outside the scope of this paper , it is worth mentioning that the deviation from the simulations is negligible .",
    "* at the beginning of each time slot , each peer chooses another peer randomly .",
    "an inquired peer randomly selects one of its customers .",
    "we call this customer _ lucky_.",
    "next the uploading peer delivers to its lucky customer a useful random chunk , i.e. , a chunk that he has and that this customer has not .",
    "the unlucky customers do not get any chunk at this round . + * in order to get a stable situation , each peer that disappears ( with probability @xmath5 ) is immediately replaced by a new empty peer ( i.e. , with no chunks ) .",
    "the probability @xmath145 that a customer gets lucky is indeed equal to the proportion of customers served , which is the number of peers having at least one customer .",
    "hence , @xmath146 .",
    "we first compute the probability that a node with @xmath45 chunks gets a new useful one . to do this",
    "we make a strong assumption that chunks remains almost identically distributed , i.e. , a random node with @xmath45 chunks contains a given chunk with probability @xmath147 .    to get a chunk ,",
    "a node needs first to be lucky , then the probability that it gets a chunk depends on the number of chunks of its uploading peer .",
    "assume that a customer with @xmath45 chunks contacts an uploading peer with @xmath57 chunks , its probability to receive a chunk is @xmath148    note that we use the standard convention @xmath149 whenever @xmath150 , but in the case @xmath151 we have @xmath152 , so we consider @xmath153 .",
    "it follows that a lucky node in state @xmath45 that does not vanish ( i.e. , conditioned on all those events ) moves to states @xmath154 with probability    @xmath155    from that it follows that a peer in state @xmath156 moves to :    * state @xmath154 with probability @xmath157 * state @xmath45 with probability @xmath158 * state @xmath52 with probability @xmath5    to summarize we have : @xmath159    @xmath160 @xmath161    for the aim of preliminary and experimental results such a model is already enough in order to get an idea of the general behavior of this class of networks .",
    "in this paper we have studied the behavior of p2p networks .",
    "we have considered three main scenarios . in the first one",
    "there are some peers owning all the chunks ( roots ) composing a file and the aim is to study the time required to ensure that every chunk is spread out on the network .",
    "this is very important to understand since , of course , it reflects the required behavior for peers that want to share their information .",
    "we have shown that the success of the spreading phase depends on two main parameters .",
    "namely , the number of roots in the network and the number of chunks in which the file is divided .",
    "the probability @xmath23 for which @xmath8 roots can leave the network should be smaller than @xmath162 where @xmath4 is the number of chunks . in the second scenario ,",
    "we have started with a configuration in which many peers have subsets of the whole chunk set and the aim is to study the probability for the network to survive , i.e. , every chunk must belong to some peer .",
    "this is also very important since it gives a measure of the behavior that peers should exhibit in order to maintain the viability of their download and archival capabilities .",
    "we have shown that if @xmath4 is much less than @xmath0 , with @xmath1 being the number of peers in the network , the expected survival time of the network is exponential in @xmath1 . moreover ,",
    "if the number of chunks is greater than @xmath163 , the network survival time is constant .",
    "the third proposed scenario concerns the critical setting for the peers in terms of volatility .",
    "we have shown how under this setting the network is still able to survive .",
    "namely , our estimated maximum value of the probability @xmath5 for which a peer can leave the network while guaranteing its survivability is @xmath164 . from the point of view of experimental results ,",
    "we have also proposed a simple way for analyzing and modeling p2p networks .",
    "our study has raised many open questions that might be investigated for further research .",
    "many variations of our proposed models are possible and interesting .",
    "an important issue , for instance , concerns file sharing protocols that cope with security aspects . deep analysis of tit - for - tat strategies for avoiding the so called free - riders problem is of primary interest to better understand the success of these protocols ( see  @xcite for preliminary results ) .",
    "free - riders are users that download files from the network but do not share their own chunks . in bittorrent , those kind of users are allowed even though the performance of their downloads is much slower than for `` friendly '' users .",
    "sun , t. , tamai , m. , yasumoto , k. , shibata , n. , ito , m. , mori , m. : . in",
    ": proceedings of the 9th international conference on principles of distributed systems ( opodis ) .",
    "lecture notes in computer science , springer - verlag ( 2005 )    izal , m. , urvoy - keller , g. , biersack1 , e.w . , felber , p. , hamra , a.a . , garces - erice , l. : . in : proceedings of the 5th international workshop on passive and active network measurement ( pam ) .",
    "volume 3015 of lecture notes in computer science .",
    "springer - verlag ( 2004 ) 111        qiu , d. , srikant , r. : modeling and performance analysis of bittorrent - like peer - to - peer networks . in : proceedings of conference on applications , technologies , architectures , and protocols for computer communications ( sigcomm ) , acm press ( 2004 ) 367378    ge , z. , figueiredo , d.r . , jaiswal , s. , kurose , j. , towsley , d. : modeling peer - peer file sharing systems . in : proceedings of the 22nd annual joint conference of the ieee computer and communications societies ( infocom ) , ieee computer society ( 2003 )    jain , k. , lovasz , l. , chou , p.a .",
    ": building scalable and robust peer - to - peer overlay networks for broadcasting using network coding . in : proceedings of the 24th annual acm sigact - sigops symposium on principles of distributed computing ( podc ) , acm press ( 2005 ) 5159"
  ],
  "abstract_text": [
    "<S> in this paper we analyze the ability of peer to peer networks to deliver a complete file among the peers . early on </S>",
    "<S> we motivate a broad generalization of network behavior organizing it into one of two successive phases . according to this view the network has two main states : first centralized - few sources ( roots ) hold the complete file , and next distributed - peers hold some parts ( chunks ) of the file such that the entire network has the whole file , but no individual has it . in the distributed state we study two scenarios , first , when the peers are `` patient '' , i.e , </S>",
    "<S> do not leave the system until they obtain the complete file ; second , peers are `` impatient '' and almost always leave the network before obtaining the complete file .    </S>",
    "<S> we first analyze the transition from a centralized system to a distributed one . </S>",
    "<S> we describe the necessary and sufficient conditions that allow this vital transition . </S>",
    "<S> the second scenario occurs when the network is already in the distributed state . </S>",
    "<S> we provide an estimate for the survival time of the network in this state , i.e. , the time in which the network is able to provide all the chunks composing the file . </S>",
    "<S> we first assume that peers are patient and we show that if the number of chunks is much less than @xmath0 , where @xmath1 is the number of peers in the network , then the expected survival time of the network is exponential in the number of peers . </S>",
    "<S> moreover we show that if the number of chunks is greater than @xmath2 , the network s survival time is constant . </S>",
    "<S> this surprisingly suggests that peer to peer networks are able to sustain only a limited amount of information . </S>",
    "<S> we also analyze the scenario where peers are impatient and almost always leave the network before obtaining the complete file . </S>",
    "<S> we calculate the steady state of the network under this condition . finally a simple model for evaluating peer to peer networks is presented .    </S>",
    "<S> * keywords : * p2p , file sharing , chunk , downloading rate , survivability </S>"
  ]
}
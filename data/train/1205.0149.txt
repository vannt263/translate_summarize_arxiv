{
  "article_text": [
    "general ba , directed ba , undirected ba , neighbors , and fortran programs",
    "the barabsi - albert network is growing such that the probability of a new site to be connected to one of the already existing sites , is proportional to the number of previous connections to this already existing site : the rich gets richer , in this way , each new site selects exactly @xmath0 old sites as neighbors .    in directed barabsi - albert networks[1 ] , the network itself was produced in the standard way , but then the neighbor relations were such that if a has b as a neighbor , b in general does not have a as a neighbor[2 ] .",
    "the undirected barabsi - albert network [ 3 ] , usually is grown in the same way , but then the neighbor relations were such that if a has b as a neighbor , b has a as a neighbor[2 ] .",
    "now we try to introduce a directedness already in the construction of the network[3 ] . in the undirected barabsi - albert network",
    "[ 4 - 5 ] , if a new node selects @xmath0 old nodes as neighbor , then the @xmath0 old nodes are added to the kertsz list , and the new node is also added @xmath0 times to that list .",
    "connections are made with @xmath0 randomly selected elements of that list .",
    "if one would only add the old nodes to the list , then only the initial core can be selected as neighbors , which is not interesting .",
    "but if one adds the @xmath0 old nodes plus only once ( and not @xmath0 times ) the new node , then one has a semi - directed network . in this modified barabsi - albert model",
    "one can ( but we do nt do that here ) put in neighbor relations which are directed or which are undirected .",
    "we use the fortran program[6 ] , as in appendix , with different @xmath6 , and the maxtime = 41,000,000 nodes .",
    "figure(1 ) shows the number @xmath7 of nodes with @xmath2 links each .",
    "changes are seen with increasing number of neighbors @xmath0 , and the curvature shows that the exponent should be determined from the region on large @xmath2 only .",
    "we are going to plot the slopes versus @xmath8 to get the second plot , which makes clearer the possible extrapolation towards infinite @xmath9 as shown in figure 2 .",
    "the exponent gamma for the decay of the number @xmath10 of nodes with @xmath2 links each , changes with increasing number of neighbors @xmath0 , the exponent should be determined from the region on large @xmath2 only .",
    "fig.2 shows @xmath11 since we summed all @xmath2 into bins limited by powers of two , e.g , @xmath12 is one of the many points onto which we fitted the exponent @xmath11 .",
    "the authors would like to thank prof .",
    "stauffer for many valuable suggestions , fruitful discussions and constructive advice during the development of this work .",
    "parameter(nrun=1 , maxtime=40000000 , m=2,iseed=1,max = maxtime+m ,       1       length=1+(1+m)*maxtime+m*(m-1 ) )         integer*8 ibm          real*8 factor         dimension k(max ) , nk(131070 ) , list(length ) , nklog(30 )         data nk/131070 * 0/,nklog/30 * 0/         open ( unit=60,file='n(k)m2.dat ' )         write ( 60,*)'#(nrun , maxtime , m , iseed)',nrun , maxtime , m , iseed         ibm=2*iseed-1            factor=(0.25/2147483648.0d0)/2147483648.0d0          fac=1.0/0.69314   c       factor=0.5/2147483648.0d0         do 5 irun=1,nrun           do 3 i=1,m             do 7 j=(i-1)*(m-1)+1,(i-1)*(m-1)+m-1   7            list(j)=i    3        k(i)=m-1",
    "l = m*(m-1 )            if(m.eq.1 ) then             l=1                 list(1)=1           endif   c        all m initial sites are connected with each other          do 1 n = m+1,max            do 2 new=1,m    4         ibm = ibm*16807             j=1+(ibm*factor+0.5)*l              if(j.le.0.or.j.gt.l ) goto 4             j = list(j )              list(l+new)=j     2         k(j)=k(j)+1            list(l+m+1)=n            l = l+m+1    1        k(n)=1             write ( 60 , * ) , ' # ( irun ) ' , irun   c        print * , ' # ( irun ) ' , irun          do 5 i=1,max           k(i)=min0(k(i),131070 )   5        nk(k(i))=nk(k(i))+1             do 6 i=1,131070    6",
    "if(nk(i).gt.0 ) write ( 60 , * ) , i , nk(i )          do 9 i=1,131070                j = alog(float(i))*fac     9       nklog(j)=nklog(j)+nk(i )          do 10 j=0,18   10      write ( 60 , * ) , sqrt(2.0)*2**j , nklog(j),j          stop               end    ....",
    "[ 1 ] r. albert and a. l. barabsi , , , statistical mechanics of complex networks .",
    " reviews of modern physics , physics 74 , 47 ( 2002 ) .",
    "[ 2 ] david p. landau , kurt binder , a guide to monte carlo , simulation in statistical physics . cambridge university press ; ( 2002 ) .",
    "[ 3]a.l.barabsi , linked , perseus , cambridge ( 2002 ) and science 325 , 412 ( 2009 ) .",
    "there are other network articles in that part of the science issue ( 24 july 2009 ) .",
    "a. sumour , m. m. shabat , int . m. phys .",
    "c , 16 , 585(2005 ) .",
    "[ 5 ] m. a. sumour , m. m. shabat and d. stauffer , islamic university journal ( series of natural studies and engineering ) 14 , 209 ( 2006 ) , arxiv : cond - mat/0504460 . [ 6 ]",
    "d. stauffer , random networks and small worlds , preprint for : handbook modelling and simulation in the social sciences , to be edited by n. braun and n.j .",
    "saam , vs - verlag , wiesbaden ( in german language ) ."
  ],
  "abstract_text": [
    "<S> in usual scale - free networks of barabsi - albert type , a newly added node selects randomly @xmath0 neighbors from the already existing network nodes , proportionally to the number of links these had before . </S>",
    "<S> then the number @xmath1 of nodes with @xmath2 links each decays as @xmath3 where @xmath4 is universal , i.e. independent of @xmath0 . </S>",
    "<S> now we use a limited directedness in the construction of the network , as a result of which the exponent @xmath5 decreases from 3 to 2 for increasing @xmath0 . </S>"
  ]
}
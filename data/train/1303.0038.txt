{
  "article_text": [
    "the past two decades have seen considerable research activity around the study of the effects of long range dependent traffic on the performance measures of queueing systems .",
    "the interest was sparked by the observations made from real measurements of internet traffic from a variety of sources , which revealed characteristics of self similarity , long range dependence and heavy tailed response times , see @xcite .",
    "the prime objective has been to study the performance of systems under different scheduling policies in the presence of such traffic and to identify optimal policies for various notions of optimality .    in the classical probabilistic",
    "setting , a natural objective is to find a policy which minimizes the mean sojourn time of a job in the system . for this objective , when the service duration of the jobs are known at the time of the arrival , the policy of serving the job with the shortest remaining processing time ( srpt ) is optimal for any distribution of the service time ( see @xcite ) .",
    "but when this information is not known , an optimal policy depends on the distribution and is generally difficult to obtain .",
    "the critical pitfall that needs to be avoided by a good policy is the starving of small jobs due to the time spent on serving longer jobs .",
    "hence such a policy needs to be sensitive to the distributions of the residual service times of the jobs in the system at any given time .",
    "this problem is especially grave when the distribution is heavy tailed .",
    "indeed , it was shown in an example in @xcite that when the service times have an infinite variance , the mean sojourn time of a job is infinite under any non - preemptive scheduling policy , although there exist preemptive policies which are able to keep it finite .",
    "another objective that has received considerable attention in literature is that of optimizing the tail of the sojourn time of a job , where a scheduling policy needs to asymptotically minimize the probability of facing a long sojourn time . in that case , even when the information about the job service times is available on arrival , the results are very interesting .",
    "in contrast to the objective of mean optimality , the performance of different policies crucially depend on the tail characteristics of the service time distributions . for",
    "this objective , the first come first serve policy ( fcfs ) is asymptotically optimal for jobs with light tailed service times ( see @xcite ) , whereas it performs arbitrarily bad for heavy tailed jobs ( see @xcite ) . on",
    "the other hand srpt performs very well for heavy tailed jobs but performs very poorly if the jobs are light tailed ( see @xcite and @xcite ) .",
    "a survey of these results can be found in @xcite and @xcite .",
    "indeed , it was recently proved in @xcite that there can be no scheduling policy in a broadly defined class , which uniformly optimizes the tail of the sojourn time under every distribution of the service time of jobs .",
    "the design of a tail optimal scheduling policy thus critically depends on the details of the distribution of the service times .",
    "this sensitivity is not desirable since it is practically difficult to estimate the tail characteristics of heavy tailed distributions .",
    "does this sensitivity also hold for the objective of mean optimality when the service times are not known on arrival ?",
    "if so , how bad is the effect of errors in our estimates ?",
    "can the loss be unbounded ( especially in the view of observations in @xcite ) ?",
    "these are the central questions that we try to answer in this paper .",
    "our result is positive : for the specific case of an m / g/1 queue , we show that the dependence of the optimal policy on the service time distribution is only through the first and second order moments of the tail , and that an approximately optimal policy can be found to the desired magnitude of diminishing additive error by appropriately truncating the distribution .",
    "we consider the scheduling of jobs in an m / g/1 queue with a service time distribution @xmath0 . at",
    "any given time , the server remembers how long he has worked on each job in the queue and chooses which job to work on , possibly in a preemptive way .",
    "the objective of the server is to find a scheduling policy that minimizes the mean sojourn time of the jobs in the system .",
    "let @xmath1 be a service time of a typical job and let the rate of arrival be @xmath2 .",
    "if the distribution of the service time has an infinite variance , we can derive an approximately optimal policy from the optimal policy for a related queue with truncated jobs .",
    "this truncation is defined as follows .",
    "[ typea ] let @xmath1 be the random variable denoting the service time of a typical job with a c.d.f .",
    "the for any @xmath3 , we define a random variable @xmath4 with a c.d.f . @xmath5 defined as @xmath6 which implies that @xmath7    we show that the following policy is approximately optimal . fix a truncation duration @xmath8 , and compute the optimal policy for scheduling jobs with these truncated service times .",
    "use this policy for scheduling all jobs which have been served for a duration less than @xmath8 . for any job",
    "longer than @xmath8 , after working on it for a duration @xmath8 , place it in a secondary low priority queue . finally use last - come - first - serve ( lcfs ) policy to serve this secondary queue as long as there are no jobs left in the primary queue .",
    "for this policy , termed as priority optimal - lcfs ( po - lcfs ) , we show that as the truncation @xmath8 goes to infinity , the expected contribution to the delay cost from the secondary queue goes to zero under the following technical condition .",
    "@xmath9    if the job sizes have a finite variance i.e. @xmath10 , then we obtain a stronger result .",
    "we show that there exist constants @xmath11 and @xmath12 dependent only on @xmath13 , @xmath14 and @xmath2 such that if @xmath15 is such that @xmath16 + k_2 e[x^2\\mathbf{1}_{\\{x > s\\ } } ] \\leq   \\epsilon\\ ] ] for @xmath17 , then one can again derive an @xmath18-optimal scheduling policy by truncating the distribution of @xmath1 to @xmath8 .",
    "in this case the truncation is different from the truncation of type a and is defined as follows .",
    "[ typeb ] let @xmath1 be the random variable denoting the service time of a typical job with a c.d.f .",
    "@xmath0 . then for any @xmath3 , we define a random variable @xmath19 with a c.d.f . @xmath20 defined as @xmath21\\ ] ]    specifically , this @xmath18-optimal policy agrees with the optimal policy for the distribution @xmath0 truncated ( type b ) at @xmath8 , except that it switches to _ any arbitrary _ work - conserving policy when it discovers a job whose service time exceeds @xmath8 .    in both these cases ,",
    "finding the value of @xmath8 that corresponds to a desired approximation is simpler than estimating the details of the tail of the distribution of @xmath1 , so this result has practical significance .",
    "consider the optimal scheduling problem of an m / g/1 queue where the service durations of the jobs have a c.d.f .",
    "@xmath0 and the rate of arrival of these jobs is @xmath2 . since the process describing the total workload in the system is a renewal process that does not depend on the work - conserving policy , we consider a single busy period and our aim is to find a work conserving scheduling strategy @xmath22 which minimizes the expected value of the sum of sojourn times of all jobs in the busy period .",
    "formally , for a busy period labeled @xmath23 , we want to minimize @xmath24 where @xmath25 where @xmath26 is a random variable denoting the number of jobs that arrive in the busy period @xmath23 , and @xmath27 is a random variable denoting the sojourn time of job @xmath28 when policy @xmath22 is used to schedule the jobs .",
    "let @xmath29 be the optimal policy with service times distributed according to @xmath0 , and @xmath30 be the corresponding optimal expected cost .",
    "we want to define an approximately optimal policy for this scheduling problem , which is derived from the optimal policy for a related problem where the distribution of the job sizes are truncated according to truncation of type a defined in ( [ typea ] ) .",
    "consider those jobs arriving in a busy period @xmath23 whose service time is larger than @xmath8 .",
    "let @xmath31 be the number of these jobs .",
    "we can consider each such job to be composed of two smaller jobs , one of length @xmath8 which arrives when the original job arrives and a second job of the residual length which arrives when the first job of length @xmath8 is finished . for any fixed scheduling policy ,",
    "the sojourn time of the original job is exactly the sum of sojourn times of the two smaller jobs . preserving the label of each original large job for the first small job of service time @xmath8 that it is composed of and defining new labels for the residual small jobs",
    ", we can express the objective in ( [ obj1 ] ) as minimizing @xmath32 where @xmath33 the first term of this cost is the contribution by all the jobs whose service time is smaller than or equal to @xmath8 .",
    "the distribution of the service time of each of these jobs is @xmath5 .",
    "this term can be minimized by using the optimal scheduling policy for the m / g/1 queue where the service times of the jobs are distributed as @xmath5 . in the implementation",
    ", the server uses this optimal policy to schedule the jobs and whenever the service time of any job reaches @xmath8 , he stops serving that job and places it in a low priority queue .",
    "this event is equivalent to the arrival of the smaller residual job .",
    "the low priority queue is thus composed of all the residual jobs and it is served only when there is no job left which has been served for a duration less than @xmath8 .",
    "thus the residual jobs which contribute to the second term in the cost do not interfere with the first term .",
    "define the following policy for the original scheduling problem .",
    "* priority optimal + lcfs ( po - lcfs ) * a ` priority optimal + lcfs ' policy for a truncation parameter @xmath34 gives a high priority to jobs which have been served for a duration less than or equal to @xmath8 , while using the optimal scheduling policy for the @xmath35 queue where the service times of the jobs are distributed as @xmath5 for these jobs , and uses the lcfs policy on jobs which have been served for a duration greater than @xmath8 only when no high priority jobs remain .",
    "we will show that under the po - lcfs policy , denoted by @xmath36 , the expected contribution to the total cost in ( [ obj2 ] ) from the residual jobs diminishes to @xmath37 as the truncation parameter @xmath8 grows to infinity .",
    "this implies that an approximately optimal policy can the found for the original problem to the desired degree of approximation by choosing an appropriate truncation parameter .",
    "let @xmath38 be the corresponding expected average of sojourn times of the jobs in a busy period under this policy .",
    "let @xmath1 be the service time of a typical job .",
    "suppose that    1 .",
    "@xmath39 and @xmath40 , 2 .",
    "@xmath41    then under the po - lcfs policy , @xmath42    first observe that @xmath43 where the inequality follows since the po - lcfs policy is optimal for jobs with service tmes smaller than or equal to @xmath8 and moreover we can ignore the negative term at the end . now",
    "let the sum of sojourn times of all the residual files under the @xmath44 policy be denoted by @xmath45 i.e. @xmath46 .",
    "then @xmath45 is bounded by the first step decomposition @xmath47 where    * @xmath48 is the number of residual jobs in the low priority queue when it is served for the first time in the busy period , * @xmath49 is the time spent on the high priority jobs before the low priority queue is served for the first time , * @xmath50 is the total workload of the @xmath48 jobs in the low priority queue at the first time that it is served , * @xmath51 is the number of digressions that occur of complete sub - busy periods that interrupt the service of the @xmath48 jobs due to the lcfs policy in the low priority queue ( see for example fig .",
    "1 ) , * @xmath52 is the length of the @xmath28th sub - busy period which interrupts the service of the @xmath48 jobs in the low priority queue , * and @xmath53 is the sum of the sojourn times of all the residual files under the @xmath44 policy in a sub - busy period @xmath28 .    we thus have @xmath54 we find lower bounds for each of these terms separately .",
    "first , let us consider @xmath55 . observe that the random variables @xmath48 and @xmath49 do not depend on the particular policy used to schedule the high priority ( small ) jobs as long as this policy is work conserving .",
    "thus to estimate these random variables , we can assume that @xmath56 policy is used for the high priority jobs .",
    "let @xmath4 be the random variable denoting the duration of the first job that arrives in the busy period @xmath23 .",
    "then @xmath48 can be expressed as @xmath57 where @xmath58 is the number of high priority sub - busy periods that interrupt the service of the first job due to the lcfs policy and @xmath59 is the number of residual jobs brought in by the @xmath28th sub - busy period .",
    "thus @xmath60)\\\\ & = & p(x > s)+e(\\lambda x^se(m)).\\end{aligned}\\ ] ] here the second equality holds because @xmath59 and @xmath1 are mutually independent and conditional on @xmath1 , @xmath58 is a poisson random variable with mean @xmath61 .",
    "further each @xmath59 has the same distribution as @xmath48 . and",
    "hence , @xmath62 similarly , @xmath49 can be expressed as @xmath63 where @xmath64 is the duration of the @xmath28th high - priority sub - busy period .",
    "we can again derive @xmath65 which is finite by our assumptions .",
    "further , we have @xmath66\\\\ & = & sp(x^s = s)+e[\\sum_{i=1}^{k(x^s)}l_i\\mid x^s = s]p(x^s = s ) \\\\ & & + ~ e(x^s\\sum_{i=1}^{k(x^s)}m_i)+ e((\\sum_{i=1}^{k(x^s)}m_i)(\\sum_{i=1}^{k(x^s)}l_i))\\end{aligned}\\ ] ] @xmath67 we thus have @xmath68 let us now consider @xmath69 .",
    "notice that we can express @xmath50 as , @xmath70 where @xmath71 is the ( residual ) service time of @xmath28th job in the low priority queue .",
    "thus we have @xmath72)\\nonumber\\\\ & = & e(m^2)e(\\overline{x})\\end{aligned}\\ ] ] now from ( [ mexp ] ) , we can compute @xmath73 as @xmath74\\\\ & = & p(x > s ) + 2sp(x > s)\\lambda e(m)\\\\ & & + ~ e(\\sum_{i=1}^{k(x^s)}m_i^2)+2e(\\sum_{1\\leq i < j\\leq k(x^s)}m_im_j)\\\\ & = & p(x > s ) + 2sp(x > s)\\lambda",
    "e(m)\\\\ & & + ~ \\lambda e(x^s)e(m^2)+e(k(x^s)^2)e(m)^2\\\\ & = & p(x > s ) + 2sp(x > s)\\lambda e(m)\\\\ & & + ~\\lambda e(x^s)e(m^2)+\\lambda^2e((x^s)^2)e(m)^2 + \\lambda e(x^s)e(m)^2.\\end{aligned}\\ ] ] and thus we have @xmath75}{1-\\lambda e(x^s)}\\end{aligned}\\ ] ] now we turn to find a bound for the term @xmath76 .",
    "we have @xmath77)\\nonumber\\\\ & = & e(\\lambda mq e(w))\\nonumber\\\\ & = & \\lambda e(mq ) \\frac{e(x)}{1-\\lambda e(x)}\\end{aligned}\\ ] ] again because @xmath52 are i.i.d . and",
    "conditional on @xmath50 , @xmath51 is a poisson random variable with rate @xmath2 .",
    "the second equality follows since @xmath78 , which is the expected duration of the busy period @xmath23 , does not depend on the scheduling policy and it is well known , again using first step arguments for the lcfs policy to be @xmath79 , which is finite by our assumptions . similarly for the last term we have @xmath80)\\nonumber\\\\ & = & e(\\lambda q e(r))\\nonumber\\\\ & = & \\lambda e(m ) e(\\overline{x})e(r).\\end{aligned}\\ ] ] here the second equality follows from ( [ qexp ] ) .",
    "thus from ( [ 3exp ] ) and ( [ 4exp ] ) and the expression for @xmath81 in ( [ mainexp ] ) , we finally have    @xmath82    where @xmath55 and @xmath69 is bounded by the expressions in ( [ eml ] ) and ( [ emq ] ) respectively .",
    "the convergence of this upper bound for increasing threshold parameter @xmath8 is governed by the following terms .",
    "1 .   @xmath83)=o(p(x > s)e[x\\mid x > s]$ ] from ( [ em ] ) .",
    "@xmath84 \\,+\\ , sp(x >",
    "s))=o(sp(x > s))$ ] .",
    "3 .   @xmath85 .",
    "now since @xmath86 by our assumption , @xmath87 .",
    "this also implies that @xmath88 .",
    "further , by our second assumption , @xmath89 .      consider a shifted pareto distribution with parameter @xmath90 where @xmath91 for @xmath92 and @xmath93 for @xmath94 .",
    "the density is given by @xmath95 .",
    "note that since @xmath90 , @xmath86 .",
    "then @xmath96 here the inequality follows because the integrand is always bounded by @xmath97 , since @xmath90 .",
    "now @xmath98 again because @xmath90 .",
    "thus the condition of the theorem is satisfied .",
    "we again consider the optimal scheduling problem of an m / g/1 queue , but now we constrain the variance of the service durations of the jobs to be finite .",
    "we look at a single busy period and our aim is to find a work conserving scheduling strategy @xmath22 which minimizes the expected value of the sum of sojourn times of all jobs in the busy period . for a busy period labeled @xmath23 ,",
    "we want to minimize @xmath24 where @xmath99 is given by equation ( [ obj1 ] ) .",
    "let @xmath29 be the optimal policy with service times distributed according to @xmath0 , and @xmath30 be the corresponding optimal expected cost .",
    "we again want to define an approximately optimal policy for this scheduling problem , which is derived from the optimal policy for a related problem where the distribution of the job sizes are truncated . but",
    "this truncation is of type b , defined in ( [ typeb ] ) , which is different from the type a truncation described for the po - lcfs policy .    fix a threshold @xmath15 and let @xmath36 be the optimal policy when all service times are distributed according to the truncated distribution @xmath20 .",
    "also , let @xmath100 be the policy that uses the policy @xmath36 till it discovers a job whose service time exceeds @xmath8 , after which it switches to an arbitrary but work conserving policy @xmath101 .",
    "let @xmath102 be the corresponding expected average of sojourn times of the jobs in a busy period under this policy .",
    "let @xmath1 be the service time of a typical job such that @xmath86 and @xmath103 .",
    "then , there exist constants @xmath104 and @xmath105 dependent only on the mean and variance of @xmath0 , such that @xmath106 + k_2 e[x^2\\mathbf{1}_{\\{x > s\\}}].\\ ] ] hence @xmath107      [ lma1 ] let @xmath1 be the service time of a typical job . consider a busy period b. let @xmath108 be the duration of the busy period and @xmath26 be the number of jobs that arrive during the busy period",
    ". for a threshold @xmath8 , let @xmath109 be the event that the service time of every job in the busy period is less than the threshold .",
    "then        we first compute an upper bound for @xmath113 .",
    "this is the probability that at least one job in the busy period has a service time that exceeds the threshold .",
    "suppose that the policy is lcfs .",
    "let @xmath1 denote the service time of the first job .",
    "then we have the following expression : @xmath114.\\end{aligned}\\ ] ] this holds because while working on the first job with service time @xmath1 , new busy periods with at least one job with service time that exceeds the threshold @xmath8 and busy periods with no job with service time exceeding @xmath8 arrive as independent poisson processes with rate @xmath115 and @xmath116 respectively .",
    "these  sub - busy periods \" interrupt the service of the first job until it finishes .",
    "but since @xmath117 , we have @xmath118.\\end{aligned}\\ ] ] thus we have @xmath119}. \\end{aligned}\\ ] ] but since @xmath120\\leq   e(x)$ ] , we have @xmath121 now to prove part ( 1 ) , we find an upper bound for @xmath110 $ ] .",
    "we again assume that the policy is lcfs .",
    "we use a first step argument that decomposes @xmath108 into @xmath1 plus the duration of the busy periods that arrive while the server processes the first job .",
    "assume that @xmath122 busy periods arrive during the processing of the first job . among these @xmath122 sub - busy periods ,",
    "@xmath123 have at least one job with service time that exceeds @xmath8 and @xmath124 have all jobs with service times less than @xmath8 .",
    "note that as mentioned before , conditional on @xmath1 , the random variables @xmath123 and @xmath125 are poisson with mean @xmath126 and @xmath127 , respectively .",
    "define @xmath128 $ ] , @xmath129 $ ] and @xmath130 = \\frac{p(x > s)}{p(a^c)}$ ] . then @xmath131\\gamma + e[w \\mid",
    "x \\leq   s , a^c ] ( 1 - \\gamma).\\end{aligned}\\ ] ] now , @xmath132 = e[w\\mid   x > s ] = e[x \\mid   x > s ] + \\lambda e[x\\mid x > s ] e(w).\\end{aligned}\\ ] ] also , @xmath133 \\\\ & & ~= e[x + \\alpha e [ n(x ) \\mid   n(x ) > 0 , x ] \\mid   x \\leq   s , n(x)>0]\\\\ & & ~~+ e[\\delta e[m(x)\\mid   n(x)>0 , x ] \\mid   x \\leq   s , n(x)>0].\\end{aligned}\\ ] ] furthermore , @xmath134 & = & \\frac{\\lambda p(a^c)x } { 1-\\exp(-\\lambda p(a^c)x)}. \\end{aligned}\\ ] ] since @xmath135 , we have @xmath136 & \\leq &   1 + \\lambda p(a^c)x.\\end{aligned}\\ ] ] also @xmath125 and @xmath123 are independent conditional on @xmath1 .",
    "hence , @xmath137 + \\lambda e[x\\mid   x > s ] e(w)\\right ) \\\\ & & + ( 1- \\gamma)\\left(e\\left[(1 + \\lambda p(a^c)x ) \\alpha + x + \\lambda p(a)x \\delta \\mid   x\\leq   s , n(x)>0\\right ] \\right ) \\\\ & = & \\gamma ( 1+\\lambda e(w ) ) e[x\\mid   x > s]\\\\ & & + ( 1-\\gamma)\\left ( \\alpha+(1 + \\lambda e(w))e[x\\mid   x \\leq   s , n(x)>0]\\right ) .",
    "\\\\\\end{aligned}\\ ] ] now denote @xmath138=\\phi(s)$ ] . then we have , @xmath139 + ( 1-\\gamma)\\phi(s)\\right).\\end{aligned}\\ ] ] now from the the definition of @xmath140 we have @xmath141\\\\ & & ~\\leq   \\frac{p(a^c)}{p(x >",
    "s)}(1+\\lambda e(w))\\bigg(\\frac{p(x > s)}{p(a^c ) } e[x\\mid   x > s]\\\\ & & ~~+~ ( 1-\\frac{p(x > s)}{p(a^c)})\\phi(s)\\bigg).\\end{aligned}\\ ] ] now , ( a ) from the upper bound on @xmath113 in ( [ d2 ] ) , ( b ) since @xmath79 and ( c ) since @xmath142\\leq   e[x\\mid   x > s]$ ] , we finally have @xmath143 & \\leq & c\\end{aligned}\\ ] ] where @xmath144\\textrm {   and}\\\\ d & = & 1-\\lambda e(x).\\end{aligned}\\ ] ] we thus have the required result .    now to prove part ( 2 ) , we find an upper bound for @xmath111 $ ] .",
    "again define @xmath145 $ ] , @xmath146 $ ] and @xmath130 = \\frac{p(x > s)}{p(a^c)}$ ] .",
    "then , @xmath147\\gamma + e[n_b\\mid   x \\leq   s , a^c ] ( 1 - \\gamma).\\end{aligned}\\ ] ] now , @xmath148 = e[n_b\\mid   x > s ]   =   1 + \\lambda e[x\\mid   x > s ] e(n_b).\\end{aligned}\\ ] ] also , @xmath149\\\\ & & ~= e[1 + \\beta e [ n(x ) \\mid   n(x ) > 0 , x ] \\mid   x \\leq   s , n(x)>0]\\\\ & & ~~+e [ \\rho e[m(x)\\mid   n(x)>0,x ] \\mid   x \\leq   s , n(x)>0].\\end{aligned}\\ ] ] hence by same arguments as in the case before , @xmath150 e(n_b)\\right ) \\\\ & & + ( 1- \\gamma)\\left(e\\left[(1 + \\lambda p(a^c)x ) \\beta + 1 + \\lambda p(a)x \\rho \\mid   x\\leq   s , n(x)>0\\right ] \\right ) \\\\ & = & \\gamma \\left(1 + \\lambda e[x\\mid   x > s ] e(n_b)\\right)+ ( 1-\\gamma)\\left(\\beta+1+\\lambda e(n_b)\\phi(s)\\right ) . \\\\\\end{aligned}\\ ] ] therefore , @xmath151 + ( 1-\\gamma)\\phi(s)\\big ) \\bigg ] .\\end{aligned}\\ ] ] now from the the definition of @xmath140 we have @xmath152\\\\ & & ~\\leq   \\frac{p(a^c)}{p(x > s)}\\bigg [ 1 + \\lambda e(n_b ) \\bigg(\\frac{p(x > s)}{p(a^c ) } e[x\\mid   x > s]\\\\ & & ~~+~ ( 1-\\frac{p(x > s)}{p(a^c)})\\phi(s)\\bigg ) \\bigg ] .\\end{aligned}\\ ] ] now again ( a ) from the upper bound on @xmath113 in ( [ d2 ] ) , ( b ) since @xmath153 and ( c ) since @xmath142\\leq   e[x\\mid   x > s]$ ] , we finally have @xmath154 & \\leq &   p\\end{aligned}\\ ] ] where @xmath155\\textrm {   and}\\\\ d & = & 1-\\lambda e(x)\\end{aligned}\\ ] ] which is the required result .",
    "the system starts empty and we consider the first busy period .",
    "let @xmath1 be the service time of the first job that arrives .",
    "let @xmath109 be the event that every service time in the busy period is less than the threshold @xmath8 .",
    "then we have @xmath156=e[c(u^ * ) \\mid   a]p(a)+e[c(u^ * ) \\mid   a^c]p(a^c ) \\\\ & \\geq & e[c(u^ * ) \\mid   a]p(a ) \\geq e[c(u^s)\\mid   a]p(a).\\end{aligned}\\ ] ] the first inequality holds because we ignore the second term in the first expression while the second inequality holds because , on the event @xmath109 , policy @xmath36 gives a lower cost than policy @xmath29 . by definition of @xmath36 and @xmath100 , one has @xmath157p(a)+e[c(\\tilde{u}^s)\\mid   a^c]p(a^c).\\ ] ] we thus have @xmath158p(a^c).\\ ] ] under any work conserving policy , the sum of sojourn times of the jobs in a busy period , is upper bounded by the total duration of the busy period times the number of files that arrived in the busy period , and this random variable is independent of the scheduling policy .",
    "let @xmath108 be the random variable denoting the total duration of the busy period and @xmath26 is the number of files that arrived in tha busy period .",
    "then we have @xmath159p(a^c).\\ ] ] the rest of the proof is providing an upper bound on this quantity .",
    "we already have an upper bound for @xmath113 from ( [ d2 ] ) .",
    "we move on to find an upper bound for @xmath160 $ ] .",
    "again we use a technique similar to the one used in proving the lemma .",
    "say that the policy is lcfs .",
    "we use a first step argument that decomposes @xmath161 into the contribution to this quantity by this first job in the busy period plus the contribution from all the sub - busy periods that arrive and interrupt while the server processes the first job . as in the proof of the lemma ,",
    "assume that @xmath122 sub - busy periods arrive during the processing of the first job . among these @xmath122",
    "busy periods , @xmath123 have at least one job with service time that exceeds @xmath8 and @xmath124 have all jobs with service times less than @xmath8 . here as before , given @xmath1 , the random variables @xmath123 and @xmath125 are independent poisson with mean @xmath126 and @xmath127 respectively .",
    "we define two sets of notation for the durations of these busy periods .",
    "the duration of all the busy periods are denoted by @xmath162 and the number of jobs in each of these busy periods is denoted by @xmath163 .",
    "we will find it convenient to also denote the busy periods with at least one job with service time exceeding threshold @xmath8 by @xmath164 and the number of jobs in these busy periods by @xmath165 .",
    "similarly , the busy periods with no job with service time exceeding threshold @xmath8 are denoted by @xmath166 and the number of jobs in these busy periods are denoted by @xmath167 .",
    "also define @xmath130 = \\frac{p(x > s)}{p(a^c)}$ ] .",
    "then , @xmath168 = e[wn_b \\mid   x > s , a^c]\\gamma + e[wn_b \\mid   x \\leq   s , a^c ] ( 1 - \\gamma).\\ ] ] we now have the following decomposition : @xmath169 @xmath170 now , @xmath171&=&e[wn_b\\mid   x > s ] \\\\ & = & e[x + \\sum_{i=1}^{k(x)}w_i + \\sum_{j=1}^{k(x)}w_in_{b_i } \\mid   x > s]\\\\ & & + ~e [ \\sum_{k=1}^{k(x)}n_{b_k}(x+\\sum_{j\\neq k ; j=1}^{k(x ) } w_j)\\mid   x > s].\\end{aligned}\\ ] ] now for each sub - busy period @xmath28 , @xmath172 is independent of @xmath1 and @xmath173 .",
    "we thus have @xmath174\\\\ & = & xe[\\sum_{k=1}^{k(x)}n_{b_k}\\mid x]+e[(\\sum_{k=1}^{k(x)}n_{b_k})(\\sum_{j\\neq k ; j=1}^{k(x ) } w_j)\\mid   x]\\\\ & = & \\lambda x^2 e(n_b ) + e[k(x)(k(x)-1)e(w)e(n_b)\\mid x]\\\\ & = & \\lambda x^2 e(n_b ) + e(w)e(n_b)\\lambda^2x^2\\end{aligned}\\ ] ] where again the last equality follows since @xmath122 is a poisson random variable conditional on x. thus we have @xmath175&= & e[x\\mid   x > s]\\left(1",
    "+ \\lambda e(w ) + \\lambda e(wn_b)\\right ) \\nonumber\\\\ & & + ~ e[x^2\\mid   x >",
    "s ] \\lambda e(n_b ) ( 1+\\lambda e(w)).\\end{aligned}\\ ] ] further , @xmath176=",
    "e[w n_b\\mid   x \\leq   s , n(x)>0 ] \\ ] ] @xmath177 \\\\ & & ~~~+~e[\\sum_{i=1}^{n(x)}\\hat{w}_in_{\\hat{b}_i } + \\sum_{j=1}^{m(x)}\\tilde{w}_jn_{\\tilde{b}_j } \\mid   x \\leq   s , n(x)>0 ]   \\nonumber\\\\ & & ~~~+~e[\\sum_{i=1}^{n(x)}n_{\\hat{b}_i}(x+\\sum_{l\\neq i ; l=1}^{n(x ) } \\hat{w}_l + \\sum_{j=1}^{m(x ) } \\tilde{w}_j ) \\mid   x \\leq   s , n(x)>0]\\nonumber \\\\ & & ~~~+ ~e[\\sum_{j=1}^{m(x)}n_{\\tilde{b}_k}(x+\\sum_{i=1}^{n(x ) } \\hat{w}_i + \\sum_{m\\neq j ; m=1}^{m(x ) } \\tilde{w}_m)\\mid   x \\leq   s , n(x)>0]\\nonumber.\\end{aligned}\\ ] ] now from ( [ key ] ) we know that @xmath178 \\leq   1 + \\lambda p(a^c)x.\\ ] ] hence , @xmath179\\nonumber\\\\ & & + ~e[\\sum_{i=1}^{n(x)}\\hat{w}_in_{\\hat{b}_i } + \\sum_{j=1}^{m(x)}\\tilde{w}_jn_{\\tilde{b}_j } \\mid   x \\leq   s , n(x)>0 ] \\nonumber\\\\ & \\leq &   e[x+ ( 1+\\lambda p(a^c)x)e[w\\mid a^c]\\mid   x\\leq   s , n(x)>0]\\nonumber\\\\ & & + ~e[\\lambda p(a)xe[w\\mid a]\\mid   x\\leq   s , n(x)>0]\\nonumber \\\\ & & + ~e [ ( 1+\\lambda p(a^c)x)e[wn_{b}\\mid a^c ] \\mid   x\\leq   s , n(x)>0]\\nonumber\\\\ & & + ~e[\\lambda p(a)xe[wn_b\\mid a ] \\mid   x\\leq   s , n(x)>0]\\nonumber\\\\ & = & \\phi(s)\\left(1+\\lambda e[w ] + \\lambda e(wn_b)\\right ) + e[w\\mid a^c ] + e[wn_{b}\\mid   a^c]\\end{aligned}\\ ] ] where @xmath180 $ ] . now @xmath181\\\\ & & = ~x(1+\\lambda p(a^c)x)e[n_b\\mid a^c]\\\\ & & ~+~ e[\\sum_{i=1}^{n(x)}n_{\\hat{b}_i}(\\sum_{l\\neq i ; l=1}^{n(x ) } \\hat{w}_l + \\sum_{j=1}^{m(x ) } \\tilde{w}_j ) \\mid   x , n(x)>0].\\end{aligned}\\ ] ] now since for each busy period @xmath28 , @xmath172 is independent of @xmath1 , @xmath123 , @xmath182 and @xmath183 , we have @xmath184\\\\ & & ~~\\leq   e[n(x)(n(x)-1)e[n_{b}\\mid   a^c ] e[w\\mid a^c ] \\mid   x , n(x)>0]\\\\ & & ~~~+~e[n(x)m(x)e[n_{b}\\mid   a^c ] e[w\\mid a]\\mid x , n(x)>0]\\\\ & & ~~=\\lambda p(a^c)x(1+\\lambda p(a^c ) x)e[n_{b}\\mid   a^c ] e[w\\mid a^c ]   \\\\ & & ~~~+~\\lambda p(a)x(1+\\lambda p(a^c)x)e[n_{b}\\mid   a^c ] e[w\\mid a]\\\\ & & ~~=\\lambda x(1+\\lambda p(a^c ) x)e[n_{b}\\mid   a^c]e(w)\\end{aligned}\\ ] ] where the first equality follows because @xmath123 and @xmath125 are independent conditional on @xmath1 and @xmath185&=&\\frac{e[n(x)^2-n(x)\\mid x]}{1-\\exp(-\\lambda p(a^c)x)}\\nonumber\\\\ & = & \\frac{\\lambda^2p(a^c)^2x^2}{1-\\exp(-\\lambda p(a^c)x)}\\nonumber\\\\ & \\leq & \\lambda p(a^c)x(1+\\lambda p(a^c ) x).\\end{aligned}\\ ] ] and hence , @xmath186\\nonumber\\\\ & & ~~\\leq e[x(1+\\lambda p(a^c ) x)\\mid x\\leq s , n(x)>0 ] e[n_{b}\\mid   a^c](1+\\lambda e(w))\\nonumber\\\\ & & ~~\\leq   \\phi'(s)\\lambda p(a^c ) e[n_{b}\\mid   a^c ] ( 1+\\lambda e(w))\\nonumber\\\\ & & ~~~+~\\phi(s)e[n_b\\mid   a^c](1+\\lambda e(w ) ) \\end{aligned}\\ ] ] where @xmath187 $ ] .",
    "similarly we have @xmath188\\\\ & & ~~\\leq   \\lambda p(a)x^2e[n_b\\mid a ] \\\\ & & ~~~+~e[\\sum_{j=1}^{m(x)}n_{\\tilde{b}_k}(\\sum_{i=1}^{n(x ) } \\hat{w}_i + \\sum_{m\\neq j ; m=1}^{m(x ) } \\tilde{w}_m)\\mid   x , n(x)>0]\\\\ & & ~~= \\lambda p(a)x^2[n_b\\mid a]+\\lambda p(a)x(1+\\lambda p(a^c)x)e[n_{b}\\mid   a ] e[w\\mid a^c ] \\\\ & & ~~~+~ \\lambda^2p(a)^2x^2e[n_{b}\\mid   a ] e[w\\mid a]\\\\ & & ~~= \\lambda p(a)x^2e[n_b\\mid a](1+\\lambda e(w))+\\lambda p(a)xe[n_b\\mid a]e[w\\mid a^c]\\end{aligned}\\ ] ] and hence , @xmath189\\nonumber\\\\ & & ~~\\leq   \\phi'(s)\\lambda p(a ) e[n_{b}\\mid a](1 + \\lambda e(w))\\nonumber\\\\ & & ~~~+~ \\phi(s)\\lambda p(a ) e[n_{b}\\mid a]e[w\\mid a^c]\\end{aligned}\\ ] ] now combining equations ( [ aexpression ] ) , ( [ part1 ] ) , ( [ part2 ] ) and ( [ part3 ] ) , we have @xmath190 & \\leq &   \\phi(s)\\big ( 1+\\lambda e[w ] + \\lambda e(wn_b)\\nonumber\\\\ & & + ~ e[n_b\\mid a^c](1+\\lambda e(w ) ) \\nonumber \\\\ & & + ~\\lambda p(a)e[n_b\\mid a]e[w\\mid a^c]\\big)\\nonumber\\\\ & & + ~\\phi'(s)(\\lambda e(n_b)(1+\\lambda e(w ) ) \\nonumber\\\\ & & + ~e[wn_{b}\\mid a^c]+e[w\\mid a^c].\\end{aligned}\\ ] ] finally , combining equations ( [ eventac ] ) and ( [ eventa ] ) , we have @xmath191&\\leq &   \\gamma\\bigg ( e[x\\mid   x > s]\\left(1",
    "+ \\lambda e(w ) + \\lambda e(wn_b)\\right)\\\\ & & + ~e[x^2\\mid   x >",
    "s ] \\lambda ( 1+\\lambda e(w))e(n_b)\\bigg)\\\\ & & + ~(1-\\gamma)\\bigg(e[wn_{b}\\mid a^c]+e[w\\mid a^c ]    \\\\ & & + ~ \\phi(s)\\big ( 1+\\lambda e[w ] + \\lambda e(wn_b)\\nonumber\\\\ & & + ~ e[n_b\\mid a^c](1+\\lambda e(w))\\nonumber\\\\ & & + ~\\lambda p(a)e[n_b\\mid a]e[w\\mid a^c]\\big)\\nonumber\\\\ & & + ~\\phi'(s)(\\lambda e(n_b)(1+\\lambda e(w))\\bigg ) \\nonumber\\\\\\end{aligned}\\ ] ] and thus we get the upper bound : @xmath191&\\leq &   \\gamma^{-1}\\bigg[\\gamma\\bigg ( e[x\\mid   x > s]\\left(1",
    "+ \\lambda e(w ) + \\lambda e(wn_b)\\right)\\nonumber\\\\ & & + ~e[x^2\\mid   x >",
    "s ] \\lambda ( 1+\\lambda e(w))e(n_b)\\bigg)\\nonumber\\\\ & & + ~(1-\\gamma)\\bigg(e[w\\mid a^c ] \\nonumber\\\\ & & + ~\\phi(s)\\big ( ( e[n_b\\mid a^c]+1)(1+\\lambda e[w])+\\lambda e(wn_b)\\nonumber\\\\   & & + ~ \\lambda e[w\\mid a^c]e(n_b)\\big)+\\phi'(s ) \\lambda e(n_b ) ( 1+\\lambda e(w))\\bigg)\\bigg].\\end{aligned}\\ ] ] here we used the fact that @xmath192p(a)$ ] .",
    "now from the definition of @xmath140 , we have @xmath193p(a^c)\\nonumber\\\\ & & ~\\leq   \\frac{p(a^c)}{p(x > s)}\\bigg[p(x > s)\\bigg ( e[x\\mid   x >",
    "s]\\big(1 + \\lambda e(w ) \\nonumber\\\\ & & ~~+~\\lambda e(wn_b)\\big)+ e[x^2\\mid   x > s ] \\lambda ( 1+\\lambda e(w))e(n_b)\\bigg)\\nonumber\\\\ & & ~~+~(p(a^c)-p(x >",
    "s))\\bigg(e[w\\mid a^c ] \\nonumber\\\\ & & ~~+~\\phi(s)\\big ( ( e[n_b\\mid a^c]+1)(1+\\lambda e[w ] ) \\nonumber\\\\ & & ~~+~\\lambda e(wn_b)+ \\lambda e[w\\mid a^c]e(n_b)\\big)\\nonumber\\\\   & & ~~+~ \\phi'(s ) \\lambda e(n_b ) ( 1+\\lambda e(w))\\bigg)\\bigg].\\end{aligned}\\ ] ] now since @xmath194 $ ] and @xmath195 $ ] , we have    @xmath193p(a^c)\\nonumber\\\\ & & ~\\leq   \\frac{p(a^c)}{p(x >",
    "s)}\\bigg[p(a^c)\\bigg ( e[x\\mid   x > s]\\big(1 + \\lambda e(w ) \\nonumber\\\\ & & ~~+~\\lambda e(wn_b)\\big)+ e[x^2\\mid   x > s ] \\lambda ( 1+\\lambda e(w))e(n_b)\\bigg)\\nonumber\\\\ & & ~~+~(p(a^c)-p(x >",
    "s))\\bigg(e[w\\mid a^c ] \\nonumber\\\\ & & ~~+~e[x\\mid x > s]\\big ( e[n_b\\mid a^c](1+\\lambda e[w ] ) \\nonumber\\\\ & & ~~+~ \\lambda e[w\\mid a^c]e(n_b)\\big)\\bigg)\\bigg].\\end{aligned}\\ ] ]    finally , using the bound on @xmath113 in ( [ d2 ] ) , and ignoring the negative term we have @xmath196p(a^c)\\leq   m\\ ] ] where @xmath197\\bigg((1+e[n_b\\mid a^c])(1+\\lambda e[w ] )   \\\\ & & + ~\\lambda e(wn_b)+\\lambda e[w\\mid a^c]e(n_b)\\bigg)+e[w\\mid a^c ] \\\\ & & + ~e[x^2\\mid   x > s ] \\lambda ( 1+\\lambda e(w))e(n_b)\\bigg]\\end{aligned}\\ ] ] and @xmath198 now we have bounds for all the quantities in @xmath48 .",
    "first , from the lemma , we have @xmath199 & \\leq &   \\frac{e[x\\mid   x >",
    "s]}{d^2}\\\\ e[n_b\\mid   a^c ] & \\leq &   \\frac{1}{d } + \\frac{\\lambda e[x\\mid   x > s]}{d^2}.\\end{aligned}\\ ] ]",
    "further , we can compute an upper bound on @xmath200 using our decomposition : @xmath201\\\\ & & ~~= e(x)\\big(1 + \\lambda e(w ) +",
    "\\lambda e(wn_b)\\big)\\\\ & & ~~~ + ~ e [ e[\\sum_{k=1}^{k(x)}n_{b_k}(x+\\sum_{j\\neq k ; j=1}^{k(x ) } w_j)\\mid x]]\\\\ & & ~~= e(x)\\big(1 + \\lambda e(w ) + \\lambda e(wn_b)\\big)\\\\ & & ~~~+~ e [ \\lambda x^2 e(n_b)+\\lambda^2x^2 e(w)e(n_b)]\\\\ & & ~~=   e(x)\\big(1 + \\lambda e(w ) + \\lambda e(wn_b)\\big ) \\\\ & & ~~~+~ \\lambda(\\lambda e(w)+1 ) e(n_b)e(x^2).\\end{aligned}\\ ] ] we thus have                @xmath191p(a^c)&\\leq &   m\\nonumber\\\\   & \\leq &   \\frac{p(x > s)}{d^2}\\bigg[e[x\\mid   x > s]\\bigg(\\frac{d^2+d+\\lambda",
    "e[x\\mid   x > s]}{d^3}\\nonumber\\\\ & & + ~\\frac{\\lambda e(x)+\\lambda^2e(x^2)}{d^3}+ \\frac{\\lambda e[x\\mid   x > s]}{d^3}\\bigg)\\nonumber\\\\ & & + ~ \\frac{\\lambda e[x^2\\mid   x > s]}{d^2}+\\frac{e[x\\mid   x > s]}{d^2 } \\bigg]\\end{aligned}\\ ] ]      @xmath193p(a^c )   \\\\ & & ~~\\leq   \\frac{p(x > s)}{d^4}\\bigg[e[x\\mid   x > s]\\bigg(2+d+\\frac{\\lambda e(x)+\\lambda^2e(x^2)}{d}\\bigg)\\\\ & & ~~+~ e[x^2\\mid   x > s ] \\bigg(\\frac{2\\lambda}{d}+\\lambda\\bigg)\\bigg].\\end{aligned}\\ ] ]",
    "thus we have @xmath206p(a^c)\\leq   k_1e[x\\mathbf{1}_{x >",
    "s}]+k_2[x^2\\mathbf{1}_{x > s}]\\ ] ] where @xmath207 now @xmath208=\\lim_{s\\rightarrow \\infty } e[x^2 \\mathbf{1}_{x > s}]=0 $ ] since @xmath39 and @xmath209 .",
    "thus @xmath210 hence proving the result .",
    "consider @xmath211 and assume that the service times of the jobs have the pareto distribution with the tail probability function @xmath212 .",
    "the density function is @xmath213 .",
    "then we have @xmath214 and @xmath215=1 $ ] .",
    "thus @xmath216 .",
    "then from equations ( [ k1 ] ) and ( [ k2 ] ) we find that @xmath217 and @xmath218 .",
    "further we can compute @xmath219&=&\\frac{3s+1}{2(s+1)^3}\\textrm {   and}\\\\ e[x^2\\mathbf{1}_{\\{x > s\\}}]&=&\\frac{3s^2 + 3s+1}{(s+1)^3}.\\end{aligned}\\ ] ] thus we have @xmath220 this function is plotted in fig .",
    "2 .        23 abate , j. , choudhury , g.l . ,",
    "whitt , w. ( 1994 ) .",
    "waiting - time tail probabilities in queues with long - tail service - time distributions . _ queueing systems 16 , 311 - 338 . _",
    "abate , j. , whitt , w. ( 1999 ) .",
    "explicit m / g/1 waiting - time distributions for a classof long - tail service - time distributions .",
    "operations research letters 25 , 25 - 31 .",
    "anantharam , v. ( 1999 ) .",
    "scheduling strategies and long - range dependence . queueing systems 33 , 73 - 89 .",
    "asmussen , s. ( 2003 ) . applied probability and queues ( vol .",
    "new york : springer .",
    "asmussen , s. , kluppelberg , c. ( 1996 ) .",
    "stationary m / g/1 excursions in the presence of heavy tails .",
    "journal of applied probability 33 , 208 - 212 .",
    "beran , j. , sherman , r. , taqqu , m. s. , willinger , w. ( 1995 ) .",
    "long - range dependence in variable - bit - rate video traffic .",
    "communications , ieee transactions on , 43(234 ) , 1566 - 1579 .",
    "borst , s. c. , boxma , o. j. , nez - queija , r. , zwart , a. p. ( 2003 ) . the impact of the service discipline on delay asymptotics .",
    "performance evaluation , 54(2 ) , 175 - 206 .",
    "boxma , o.j . , dumas , v. ( 1998 ) .",
    "fluid queues with heavy - tailed activity period distributions .",
    "computer communications 21 , 1509 - 1529 .",
    "boxma , o.j . ,",
    "cohen , j.w .",
    "the m / g/1 queue with heavy - tailed service time distribution .",
    "ieee journal on selected areas in communications 16 , 349 - 363 .",
    "boxma , o. , zwart , b. ( 2007 ) .",
    "tails in scheduling .",
    "acm sigmetrics performance evaluation review , 34(4 ) , 13 - 20 .",
    "grossglauser , m. , bolot , j .- c .",
    "( 1999 ) . on the relevance of long - range dependencein network traffic .",
    "ieee / acm transactions on networking 7 , 629 - 640 .",
    "heyman , d. , lakshman , t.v .",
    "what are the implications of long - range dependence for traffic engineering ?",
    "ieee / acm transactions on networking 4 , 301 - 317 .",
    "jelenkovic , p.r .",
    "( 2000 ) . on the asymptotic behavior of a fluid queue with a heavy - tailed m / g/1 arrival process .",
    "preprint , columbia university . submitted for pub - lication .",
    "leland , w. e. , taqqu , m. s. , willinger , w. , wilson , d. v. ( 1994 ) . on the self - similar nature of ethernet traffic ( extended version ) .",
    "networking , ieee / acm transactions on , 2(1 ) , 1 - 15 .",
    "likhanov , n. , mazumdar , r.r .",
    "loss asymptotics in large buffers fed by heterogeneous long - tailed sources .",
    "advances in applied probability 32 , 1168 - 1189 .",
    "nuyens , m. , zwart , b. ( 2006 ) .",
    "a large - deviations analysis of the gi / gi/1 srpt queue . queueing systems , 54(2 ) , 85 - 97 .",
    "nuyens , m. , wierman , a. , zwart , b. ( 2008 ) . preventing large sojourn times using smart scheduling .",
    "operations research , 56(1 ) , 88 - 101 .",
    "resnick , s. , samorodnitsky , g. ( 2000 ) . a heavy traffic approximation for workload processes with heavy tailed service requirements .",
    "management science 46 , 1236 - 1248 .",
    "schrage , l. ( 1968 ) .",
    "a proof of the optimality of the shortest remaining processing time discipline .",
    "operations research , 16(3 ) , 687 - 690 .",
    "stolyar , a. l. , ramanan , k. ( 2001 ) .",
    "largest weighted delay first scheduling : large deviations and optimality .",
    "annals of applied probability , 1 - 48 .",
    "whitt , w. ( 2000 ) .",
    "the impact of a heavy - tailed service - time distribution upon the m / gi / s waiting - time distribution . queueing systems 36 , 71 - 87 .",
    "queueing systems with heavy tails .",
    "_ phd thesis , _ * 36 , * 14061416 .",
    "wierman , a. , zwart , b. ( 2012 ) . is tail - optimal scheduling possible ? .",
    "operations research , 60(5 ) , 1249 - 1257 ."
  ],
  "abstract_text": [
    "<S> distributions with a heavy tail are difficult to estimate . </S>",
    "<S> if the design of an optimal scheduling policy is sensitive to the details of heavy tail distributions of the service times , an approximately optimal solution is difficult to obtain . </S>",
    "<S> this paper shows that the optimal scheduling of an m / g/1 queue with heavy tailed service times does not present this difficulty and that an approximately optimal strategy can be derived by truncating the distributions . </S>"
  ]
}
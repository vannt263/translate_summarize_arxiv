{
  "article_text": [
    "in description logics ( dls ) a concrete domain is a construct that can be used to define new classes by specifying restrictions on attributes that have literal values ( as opposed to relationships to other concepts ) .",
    "practical applications of dls usually require concrete properties with values from a fixed domain , such as strings or integers , supporting built - in predicates . for dls that are extended with concrete domains",
    ", there exist partial functions mapping objects of the abstract domain to values of the concrete domain , and can be used for building complex concepts .",
    "concrete domains can be used to construct complex concepts as for instance , the axiom @xmath2 defines a teenager as a person whose age is at least 13 and at most 19 . in dls , concrete domains are also known as _",
    "datatypes_. several probabilistic extensions of dls opt to exclude datatypes while , in fact , it is an essential feature as several knowledge extraction tools produce weighted rules or axioms that contain concrete data values .",
    "reasoning over these data either to infer new knowledge or to verify correctness is indispensable .",
    "additionally , recent advances in information extraction have paved the way for the automatic construction and growth of large , semantic knowledge bases from different sources .",
    "however , the very nature of these extraction techniques entails that the resulting knowledge bases may contain a significant amount of incorrect , incomplete , or even inconsistent ( i.e. , uncertain ) knowledge , which makes efficient reasoning and query answering over this kind of uncertain data a challenge . to address these issues ,",
    "there exist ongoing studies on probabilistic knowledge bases .",
    "the study of extending dls to handle uncertainty and vagueness has gained momentum recently . there have been several proposals to add probabilities to various dls .",
    "probabilistic dls can be classified in several dimensions .",
    "one possible classification is on the reasoning mechanism used : markov logic networks ( mlns ) , bayesian networks , and probabilistic reasoning .",
    "there exist some studies that employ mlns to extend various dls .",
    "the study in @xcite extends @xmath1 with probabilistic uncertainty based on the annotation of axioms using mlns .",
    "the main focus of this work is ranking queries in descending order of probability of atomic inferences which is different from the objective of this paper .",
    "another study in @xcite , presents a probabilistic extension of the dl @xmath1 without nominals and concrete domains in mln in order to find the most probable coherent ontology . in doing so",
    ", they have developed a reasoner for probabilistic owl - el called elog @xcite . in this study , we extend this work in order to deal with concrete domains in addition to nominals and instances . in databases",
    ", mlns have been used to create a probabilistic datalog called datalog@xmath3 .",
    "it is an extension of datalog that allows to express ontological axioms by using rule - based constraints @xcite .",
    "the probabilistic extension of datalog@xmath3 uses mlns as the underlying probabilistic semantics .",
    "the focus of this work is on scalable threshold query answering which is different from that of this work .",
    "other literatures extend dls with bayesian networks .",
    "some notable works include : an extension of @xmath4 with bayesian networks called @xmath5 is presented in @xcite .",
    "they study the complexity of reasoning under @xmath5 to show that reasoning is intractable .",
    "however , their work does not discuss probabilities in the abox and concrete domains are excluded . on the other hand , in @xcite , they added uncertainty to dl - lite based on bayesian networks . additionally , they have shown that satisfiability test and query answering in probabilistic dl - lite can be reduced to satisfiability test and query answering in the dl - lite family .",
    "further , it is proved that satisfiability checking and union of conjunctive query answering can be done in logspace in the data complexity .",
    "consequently , as discussed above , most of the studies that involve extending description logics to deal with uncertainty by using either bayesian or mlns often excluded concrete domains .",
    "this is partly due to either the lack of supporting features or the difficulty in dealing with them . in this paper",
    ", we study a novel way of dealing with uncertainty involving concrete domains .",
    "henceforth , we provide an extension to @xmath1-ll with concrete domains , nominals and instances .",
    "in this section , we present a brief summary of : @xmath1 , markov logic networks , cutting plane inference , and @xmath1-ll . for a detailed discussion on these subjects ,",
    "we refer the reader to @xcite and the references therein .",
    "@xmath1 is the description logic underlying the owl 2 profile owl - el .",
    "given a set of concept names @xmath7 , role names @xmath8 , individuals @xmath9 , and feature names @xmath10 , @xmath1 concepts and roles are formed according to the following syntax : @xmath11 a concept in @xmath1 is either a top , bottom concept , an atomic concept or a complex concept ( formed by conjunction and existential restriction ) .",
    "given a datatype restriction @xmath12 and @xmath13 , we say that @xmath14 satisfies @xmath15 and write @xmath16 iff @xmath17 , where @xmath18 , @xmath19 is interpreted as the standard relation on real numbers , and @xmath20 is a concrete domain @xcite . in this work ,",
    "we consider only numerical concrete domains and leave out the others for future work .",
    "an @xmath1 tbox contains a set of gci ( general concept inclusion ) axioms , i.e. , @xmath21 , as well as role inclusion axioms , i.e. , @xmath22 .",
    "the semantics of @xmath1 concepts and roles is given by an interpretation function @xmath23 which consists of a non - empty ( abstract ) domain @xmath24 and a mapping function @xmath25 @xcite .",
    "the semantics of @xmath1 concepts and roles is given by an interpretation function @xmath23 which consists of a non - empty ( abstract ) domain @xmath24 and a mapping @xmath25 that assigns to each atomic concept @xmath26 a subset of @xmath24 , to each abstract role @xmath27 a subset of @xmath28 , to each concrete relation @xmath29 a subset of @xmath30 , and to each individual @xmath31 an element of @xmath24 .",
    "the mapping @xmath32 is extended to all concepts and roles as follows : @xmath33 knowledge about specific objects can be expressed using concept and role assertions of the form @xmath34 and @xmath35 .",
    "the axioms and assertions are contained in the tbox and abox , respectively , which together form a knowledge base ( kb ) .",
    "an @xmath1 knowledge base ( or ontology ) @xmath36 consists of a set @xmath37 of general concept inclusion axioms ( tbox ) and role inclusion axioms , and possibly a set @xmath38 of assertional axioms ( abox ) .",
    "a concept name @xmath39 in an ontology @xmath40 , is _",
    "unsatisfiable _ iff , for each interpretation @xmath41 of @xmath40 , @xmath42 .",
    "an ontology @xmath40 is _ incoherent _ iff there exists an unsatisfiable concept name @xmath39 in @xmath40 , i.e. , @xmath43 @xcite .    to simplify the translation of probabilistic @xmath1 kb into fol ,",
    "we first obtain the _ normal _ form of the kb in such a way that satisfiability is preserved @xcite .",
    "an @xmath1 kb is in _ normal _ form if its axioms are in the following form : @xmath44 where @xmath45 , @xmath15 is a datatype restriction , and @xmath46 .",
    "it is possible to provide a probabilistic extension of @xmath1 using mlns .",
    "an @xmath1 kb can be seen as a set of hard constraints on the set of possible interpretations : if an interpretation violates even one axiom or assertion , it has zero probability .",
    "the basic idea in mlns is to soften these constraints , i.e. , when an interpretation violates one axiom or assertion in the kb it is less probable , but not impossible .",
    "the fewer axioms an interpretation violates , the more probable it becomes .",
    "each axiom and assertion has an associated weight that reflects how strong a constraint is : the higher the weight , the greater the difference in log probability between an interpretation that satisfies the axiom and one that does not , other things being equal @xcite .",
    "markov logic networks ( mlns ) combine markov networks and first - order logic ( fol ) by attaching weights to first - order formulas and viewing these as templates for features of markov networks @xcite .",
    "an mnl @xmath47 is a set of pairs @xmath48 where @xmath49 is a formula in fol and @xmath50 is a real number representing a weight .",
    "together with a finite set of constants @xmath39 , it defines a markov network @xmath51 , where @xmath51 contains one node for each possible grounding of each predicate appearing in @xmath47 .",
    "the value of the node is @xmath52 if the ground predicate is true , and @xmath53 otherwise . the probability distribution over possible worlds @xmath14 specified by the ground markov network @xmath51 is given by : @xmath54 where @xmath55 is the number of formulas in the mln and @xmath56 is the number of true groundings of @xmath49 in @xmath14 .",
    "the groundings of a formula are formed simply by replacing its variables with constants in all possible ways . the _ herbrand universe _",
    "@xmath57 for an mln @xmath47 is the set of all terms that can be constructed from the constants in @xmath47 .",
    "the _ herbrand base _",
    "@xmath58 is often defined as the set of all ground predicates ( atoms ) that can be constructed using the predicates in @xmath47 and the terms in @xmath57 . in this paper",
    "we focus on mlns whose formulas are function - free clauses .    in order to compute a maximum a - posteriori ( map ) state of an mln , we formulate the problem as an integer linear program ( ilp ) using the cutting plane inference algorithm .",
    "a map query corresponds to an optimization problem with linear constraints and a linear objective function .",
    "hence , it can be formulated and solved as an instance of an integer linear program ( ilp ) .",
    "@xcite  introduced cutting plane inference as a meta algorithm that transforms an mln into ilp .",
    "the basic idea of cpi is to add all constraints to the ilp that violate the current intermediate solution .",
    "this process is repeated until no ( additional ) violated ground clauses exist .",
    "an ilp solver resolves the conflicts by computing an optimal truth assignment for an mln .",
    "hence , the solution of the final ilp corresponds to the map state .",
    "it is necessary to execute several iterations as the intermediate solution changes after each iteration and more violated clauses might be detected . at the beginning of each cpi iteration",
    "it is necessary to determine the violated ground clauses @xmath59 that are specified by the mln and are in conflict with the intermediate solution .",
    "a binary ilp variable @xmath60 gets assigned to each grounded predicate occurring in a violated clause @xmath61 .",
    "the value of the the variable @xmath62 is @xmath52 if the respective literal @xmath63 is true and @xmath53 when it is false .",
    "these variables are used to generate ilp constraints that are added to the ilp for each violated ground clause . for each clause @xmath61",
    ", we define @xmath64 as the set of ground atoms that occur unnegated in @xmath65 and @xmath66 as the set of ground atoms that occur negated in @xmath65 .",
    "the transformation scheme depends on the weight @xmath67 of the violated clause @xmath65 .",
    "it is also necessary to create a binary variable @xmath68 for every @xmath65 with @xmath69 that is used in the objective of the ilp . for every ground clause @xmath65 with @xmath70 ,",
    "the following constraint has to be added to the ilp .",
    "@xmath71 a ground atom @xmath63 that is set to false ( true if it appears negated ) by evidence will not be included in the ilp as it can not fulfil the respective constraint . for every @xmath65 with weight @xmath72 ,",
    "we add the following constraint to the ilp : @xmath73 the variable @xmath68 expresses if a ground formula @xmath65 is true considering the optimal solution of the ilp .",
    "however , for every @xmath65 with weight @xmath74 this variable can be replaced with 1 as the respective formula can not be violated in any solution : @xmath75    finally , the objective of the ilp sums up the weights of the ( satisfied ) ground formulas : @xmath76 the map state corresponds to the solution of the ilp in the last cpi iteration",
    ". it can be directly obtained from the solution as the assignment of the variables @xmath77 can be directly mapped to the optimal truth values for the ground predicates , i.e. , @xmath78 if the corresponding ilp variable is @xmath52 and @xmath79 otherwise .",
    "the map state of an @xmath1-ll tbox can be computed by a reduction into cpi .",
    "@xmath1-ll ( log - linear @xmath1 ) is a probabilistic extension of @xmath1 without nominals , instances and concrete domains @xcite .",
    "each @xmath1-ll tbox axiom is either deterministic ( i.e. , axioms that are known to be true ) or uncertain ( i.e. , axioms that have a degree of confidence ) .",
    "the uncertain axioms have associated weight .",
    "formally , a @xmath1-ll tbox is given by @xmath80 , where @xmath81 and @xmath82 , is a set of pairs of @xmath83 where @xmath84 is an axiom and @xmath85 is its real - valued weight , denote deterministic and uncertain axioms respectively .",
    "the semantics of an @xmath1-ll tbox is given by a joint probability distribution over a _",
    "@xmath1 tbox . given tboxes @xmath80 and @xmath86 over the same vocabulary ,",
    "the probability of @xmath86 is given by : @xmath87    in order to generate the most probable , coherent and classified tbox using mln , @xmath1 completion rules and @xmath1-ll tbox axioms are translated into fol formulae . in the following ,",
    "we show how to extend @xmath1-ll with nominals , instances , and concrete domains .",
    "in @xcite , the authors claim that their approach is extensible to the horn fragments of dls ( look @xcite for instance ) . to take advantage of this claim , we extend @xmath1-ll with probabilistic knowledge expressed through nominals , individuals , and concrete domains .",
    "the syntax of this extension ( that we call @xmath88 ) is the same as that of @xmath1-ll , basically , it is the syntax of @xmath1 with weights attached to each uncertain axiom and assertion .",
    "an @xmath0 kb has two components : deterministic @xmath89 and uncertain @xmath90 knowledge bases . in order to provide semantics , we assume that @xmath89 is coherent .",
    "the semantics of _ coherent _ @xmath88 kbs is given by a probability distribution as defined below .",
    "given an @xmath88 knowledge base @xmath91 over a vocabulary of @xmath7 , @xmath8 , @xmath10 , and @xmath9 , the semantics of a _ coherent _ @xmath92 over the same vocabulary is given by a probability distribution : @xmath93    consider an @xmath0 @xmath94 : @xmath95 the probabilities of the axioms and assertions can be computed as follows : @xmath96    in order to derive the most probable , classified and coherent @xmath1 ontology from an @xmath0 kb , we transform the kb , tbox completions rules @xcite , concrete domains , and abox completion rules @xcite into fol formulae .",
    "( un)certain axioms that contain nominals can be translated into fol in mnl by using definition [ def : mapping ] .",
    "inference in mnl can be done by converting the completion rule cr6 @xcite into fol and enforcing that each nominal @xmath97 is distinct .",
    "alternatively , _",
    "unique name assumption _ for individuals names can be enforced by using the axiom @xmath98 for all relevant individual names @xmath99 and @xmath100 .",
    "in addition , the transformation of tbox completion rules into fol in mnl is given in table [ tab : tboxcompletionrules ] .    by using nominals",
    ", instance knowledge can be added to an abox .      since the description logic @xmath1 is equipped with nominals .",
    "abox knowledge can be converted into tbox axioms .",
    "thus , with nominals , abox becomes syntactic sugar : @xmath101 instance checking in turn is directly reducible to subsumption checking in the presence of nominals .",
    "there exist two ways to represent uncertain abox assertions , i.e. , @xmath34 and @xmath35 , in mln :    * transform abox assertions into tbox axioms using nominals as follows : @xmath102 * introduce two new predicates for each instance type as : @xmath103 this approach requires transforming abox completion rules into fol , so as to generate classified ontologies .    in this paper , we consider the second approach ( ii ) .",
    "next , we show how concrete domains are translated into the mln framework .",
    "[ cols= \" < , < \" , ]      reasoning over uncertain concrete domains can be done by transforming the datatype predicates in the axioms and assertions into mixed integer programming as shown in @xcite .",
    "however , in this work , we introduce an efficient approach that transforms the predicates into a test function that evaluates to _ true _ or _ false _ based on the grounding generated by an extension of the cpi algorithm .",
    "inference involving axioms that contain concrete domains can be done according to the deduction rules given below : @xmath104 where @xmath105 checks if all possible values of the first _ operator - value _ pair @xmath106 are covered by the possible values of the second _ operator - value _",
    "pair @xmath107 , when so , it evaluates to true otherwise false .",
    "the function @xmath105 is defined based on a datatype @xmath108 , i.e. , @xmath109 or @xmath110 or @xmath111 , and algebraic operators .",
    "some of the algebraic comparisons , computed via @xmath105 , that are useful to determine inference are listed below : @xmath112 this function is computed on - demand after each cpi iteration as discussed in the next section .",
    "the translation of the deduction rules into fol is given in table [ tab : tboxcompletionrules ] and table  [ tab : aboxcompletionrules ] .",
    "[ ex : inferencedatatype ] consider an @xmath0 @xmath113 that contains axioms expressed using concrete domains . from the kb ,",
    "the axiom @xmath114 can be inferred since @xmath115 is _ true _ ,",
    "i.e. , @xmath116 .",
    "so far we have discussed how axioms and assertions can be translated into fol .",
    "next , we show how the most probable kb is derived using map inference .",
    "to derive the most probable classified and coherent ontology from a weighted @xmath1 kb , we proceed by transforming tbox and abox completion rules , schema axioms , and assertions into function - free fol formulae .",
    "the formulae corresponding to the translation of completion rules into fol are shown in table [ tab : tboxcompletionrules ] and table [ tab : aboxcompletionrules ] .",
    "the formulae from @xmath117 through @xmath118 are taken from @xcite .",
    "additionally , a _ bijective _ mapping function is provided in definition [ def : mapping ] to transform axioms and assertions into formulae .",
    "of particular interest for us is proposing a novel way to deal with concrete domains under mln by modifying the cutting plane inference ( cpi ) algorithm .    in @xmath1",
    ", it is possible to build incoherent tbox axioms due to the presence of the bottom concept @xmath119 , for instance , consider the axiom @xmath120 , this can not be satisfied by any interpretation . to filter out such incoherencies in models generated by mln",
    ", we include the formula @xmath121 ( formula @xmath118 in table [ tab : tboxcompletionrules ] ) to the translation of the completion rules into fol .",
    "this technique has already been used in @xcite .",
    "[ def : mapping][mapping @xmath0 kb into ground fol predicates ] the function @xmath122 translates a normalized @xmath0 knowledge base kb into fol formulae in mln as follows : @xmath123 where @xmath46 , @xmath124 , @xmath125 , @xmath29 , @xmath126 , and @xmath127 ( set of real numbers ) .    the translation of an @xmath1 kb into fol and vice versa can be done in polynomial time in the size of the knowledge base @xcite .    from the above lemma",
    ", we see that the translation of @xmath0 kb completion rules , axioms , and assertions into fol in mln does not affect the complexity of inference in mln .",
    "besides , as _ typed variables _ and _ constants _ greatly reduce size of ground markov nets .",
    "we introduce types to all of the predicates shown in tables [ tab : tboxcompletionrules ] and table [ tab : aboxcompletionrules ] .    given an @xmath0 ontology @xmath128 and @xmath129 , a herbrand interpretation @xmath130 is a model of @xmath131 , i.e. , @xmath132 if and only if there exist a mapping function @xmath122 such that @xmath133 .",
    "so far we have introduced a mapping function @xmath122 for kb assertions and axioms and completion rules as formulae ( @xmath117@xmath134 ) .",
    "the next step requires using map inference of mln to obtain the most probable ontology of a given @xmath0 kb .      in order to deal with @xmath0 datatypes",
    ", we introduced a predicate called @xmath105 in the translation of @xmath1 completion rules into fol , depicted in table [ tab : tboxcompletionrules ] and table [ tab : aboxcompletionrules ] .",
    "the truth value of @xmath105 is computed by evaluating the logical expressions corresponding to datatypes in an @xmath0 kb .",
    "for instance , consider the @xmath105 predicate in example [ ex : inferencedatatype ] . in the following ,",
    "we show how the expression @xmath135 , operator - value pair coverage , i.e. , is evaluated by extending the cpi algorithm .",
    "thus , we propose an extension of cpi by incorporating algebraic expressions .",
    "in particular , our extension addresses a limitation of mln with respect to concrete domains . in general",
    ", all ( numerical ) values are represented as constants in mln .",
    "the only semantics that are related to constants might be the type to which they belong .",
    "this enables more efficient grounding and leads to smaller mlns .",
    "however , this does hardly cover the characteristics of numerical values .",
    "therefore , we exploit the iterative character of cpi in order to evaluate numerical ( in)equalities . the extension can be considered as additional features that are only used on - demand .",
    "it is formula - specific as it affects the ground values and the truth value of specific constraints .",
    "hence , it can be implemented as an extension of the detection of the violated constraints .",
    "the algorithm identifies at the beginning of each cpi iteration for each formula all violated groundings considering the current intermediate solution .",
    "each of the violated ground clauses has to be translated and added to the ilp .",
    "therefore , an ilp variable is generated for each ground predicate as well as additional ilp constraints .",
    "datatype ground predicates @xmath105 appear during this process as any other predicates .",
    "however , we exploit there semantics to decide whether @xmath105 predicates evaluate to _ true _ or _ false_. depending on the result of the evaluation of the attached boolean expression of the respective predicate , we decide whether it is necessary to add the violated ground clause to the ilp .",
    "for instance , if the datatype predicate is positive ( negative ) and it appears without negation ( or negation ) in the formula , we do not add the ground clause to the ilp as it is not violated in the current iteration .",
    "otherwise , we need to add the clause to the ilp but leave out the datatype ground predicates as they can not fulfil the violated clause , i.e. , the respective literal is false due to evidence .",
    "hence , we do not introduce ilp variables for datatype predicates as they will not be added to the ilp .",
    "instead , we compute the truth value of the datatype predicates on - the - fly and only on - demand .",
    "hence , the proposed approach improves the efficiency of processing numerical predicates in a markov logic solver without sacrificing the performance .",
    "we implemented this algorithm as an extension to the mln inference engine rockit @xcite .",
    "we leave out testing this implementation with different ontologies as a future work .",
    "[ thm : soundness ] given the following :    * an @xmath0 knowledge base @xmath94 formed from a vocabulary containing a finite set of individuals @xmath9 , concepts @xmath7 , features @xmath10 , and roles @xmath8 , * @xmath58 as a herbrand base of the formulae @xmath55 in table [ tab : tboxcompletionrules ] and table [ tab : aboxcompletionrules ] over the same vocabulary , * @xmath136 as a set of ground formulae constructed from @xmath89 , and * @xmath137 as a set of ground formulae constructed from @xmath90 ,    the most probable coherent and classified ontology is obtained with : @xmath138    from theorem [ thm : soundness ] and the results in @xcite , finding the most probable , classified and coherent @xmath0 kb is in np .",
    "the _ hardness _ of this complexity bound can be obtained by reducing partial weighted maxsat problem into an @xmath0 map query .",
    "consequently , the map problem for @xmath0 is np - hard .",
    "in this work , we have extended @xmath1-ll into @xmath0 with nominals , concrete domains and instances .",
    "in particular , we proposed an extension to the cpi algorithm in order to deal with reasoning under uncertain concrete domains .",
    "we have implemented the proposed approach and planned to carry out experiments in the future .",
    "we will also investigate to extend the proposed approach to other datatypes such as date , time , and so on .",
    "flouris , g. ; huang , z. ; pan , j.  z. ; plexousakis , d. ; and wache , h. 2006 .",
    "inconsistencies , negations and changes in ontologies . in _ proceedings of the national conference on artificial intelligence _ , volume  21 , 1295 .",
    "menlo park , ca ; cambridge , ma ; london ; aaai press ; mit press ; 1999 .",
    "noessner , j. ; niepert , m. ; and stuckenschmidt , h. 2013 .",
    "rockit : exploiting parallelism and symmetry for map inference in statistical relational models . in _ twenty - seventh aaai conference on artificial intelligence_."
  ],
  "abstract_text": [
we present @xmath0 ( m denotes markov logic networks ) an extension of the log - linear description logics @xmath1-ll with concrete domains , nominals , and instances </S>",
    "<S> . we use markov logic networks ( mlns ) in order to find the most probable , classified and coherent @xmath1 ontology from an @xmath0 knowledge base . </S>",
    "<S> in particular , we develop a novel way to deal with concrete domains ( also known as datatypes ) by extending mln s cutting plane inference ( cpi ) algorithm
  ]
}
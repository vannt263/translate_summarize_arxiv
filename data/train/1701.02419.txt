{
  "article_text": [
    "modern cluster computing frameworks , such as mapreduce @xcite and spark @xcite , have been widely used in large - scale data processing and analytics . despite the differences among these frameworks ,",
    "they share a common feature : the computation is divided into multiple stages and a collection of parallel data flows need to be transferred between groups of machines in successive computation stages .",
    "often the next computation stage can not start until the completion of all of these flow transfers .",
    "for example , during the shuffle phase in mapreduce , any reducer node can not start the next reduce phase until it receives intermediate results from all of the mapper nodes . as a result ,",
    "the response time of the entire computing job critically depends on the completion time of these intermediate flows . in some applications",
    ", these intermediate flow transfers can account for more than 50% of job completion time @xcite .",
    "the recently proposed _ coflow _",
    "abstraction @xcite represents such a collection of parallel data flows between two successive computation stages of a job , which exposes application - level requirements to the network .",
    "it builds upon the _ all - or - nothing _ property observed in many applications @xcite : a coflow is not complete until the completion of all its constituent flows . as a result ,",
    "one of the most important metrics in this context is _ coflow - level delay _",
    "( also referred to as _ coflow completion time _ in some literature @xcite ) , i.e. , the time to complete all of the flows in a coflow . to improve the overall response time of a job ,",
    "it is crucial to schedule flow transfers in a way that the coflow - level delay can be reduced .",
    "unfortunately , researchers have largely overlooked such application - level requirements and there has been little work on coflow - level delay optimization .    in this paper , we study coflow - level delay in the context of an @xmath0 input - queued switch with stochastic coflow arrivals . in each slot , a random number of coflows , each of them consisting of multiple parallel flows , arrive to the input - queued switch where each input / output port can process at most one packet per slot .",
    "such an input - queued switch model is a simple yet practical abstraction for data centers with full bisection bandwidth , where @xmath3 represents the number of servers . due to the large scale of modern data centers",
    ", we are motivated to study the scaling of coflow - level delay as @xmath1 .",
    "in particular , we are interested in the optimal scaling of coflow - level delay , i.e. , the scaling under an  optimal \" scheduling policy , and should achieve the minimum coflow - level delay among all throughput - optimal policies . ] .",
    "as far as we know , this is the first paper to present coflow - level delay analysis in a large - scale stochastic system .",
    "the contributions of this paper are summarized as follows .",
    "* we derive lower bounds on the expected coflow - level delay that can be achieved by any scheduling policy in an @xmath0 input - queued switch .",
    "these lower bounds critically depend on the variability of flow sizes .",
    "in particular , it is shown that if flow sizes are light - tailed , no scheduling policy can achieve an average coflow - level delay better than @xmath4 .",
    "* we analyze the coflow - level performance of several coflow - agnostic scheduling policies , where coflow - level information is not leveraged .",
    "it is shown that none of these scheduling policies achieves a _ provably optimal _ scaling of coflow - level delay .",
    "for example , the expected coflow - level delay achieved by randomized scheduling is @xmath5 if coflow sizes are light - tailed , far above the @xmath4 lower bound .",
    "* we show that @xmath4 is the optimal scaling of average coflow - level delay when flow sizes are light - tailed and coflow arrivals are poisson .",
    "this optimal scaling is achievable with our coflow - aware batching ( cab ) policy .",
    "the organization of this paper is as follows .",
    "we first review related work in section [ sec : related ] and introduce several mathematical tools in section [ sec : pre ] .",
    "the system model is introduced in section [ sec : model ] . in section [ sec : lower ] , we demonstrate fundamental lower bounds on the expected coflow - level delay that can be achieved by any scheduling policy . in section [ sec : agnostic ] , we analyze the coflow - level performance of some coflow - agnostic scheduling policies . in section [ sec :",
    "cab ] , we propose the coflow - aware batching ( cab ) policy and show that it achieves the optimal coflow - level delay scaling under some conditions . finally , simulation results and conclusions are given in sections [ sec : simulation ] and [ sec : conclusion ] , respectively .",
    "we start with a brief literature review on coflow - level optimization and delay scaling in input - queued switches .    * coflow - level optimization . * the notion of coflows was first proposed by chowdhy and stoica @xcite to convey job - specific requirements such as minimizing coflow - level delay or meeting some job completion deadline . unfortunately , coflow - level optimization is often computationally intractable .",
    "for example , it was shown in @xcite that minimizing the average coflow - level delay is np - hard . as a result",
    ", many heuristic scheduling principles were developed to improve coflow - level delay . in @xcite ,",
    "a decentralized coflow scheduling framework was proposed to give priority to coflows according to a variation of the fifo principle , which performs well for light - tailed flow sizes . in @xcite ,",
    "the @xmath6 scheme improves the performance of @xcite by leveraging more sophisticated heuristics such as  smallest - bottleneck - first \" and  smallest - total - size - first \" , where global information about coflows is required .",
    "the d - cas scheme in @xcite exploits a similar  shortest - remaining - time - first \" principle for coflow scheduling . the @xmath7 framework @xcite generalizes the classic least - attained service ( las ) discipline @xcite to coflow scheduling ; such a scheme does not require prior knowledge about coflows .",
    "@xcite develop an approximation algorithm to minimize the average coflow - level delay in data centers .",
    "additionally , chen _ et al . _",
    "@xcite jointly consider coflow routing and scheduling in data centers . despite these efforts towards coflow - level optimization , most prior works do not provide any analytical performance guarantee , and",
    "there is a lack of fundamental understanding of coflow - level scheduling , especially in the context of large - scale stochastic systems .    *",
    "optimal delay scaling in input - queued switches . *",
    "the optimal ( _ packet - level _ ) delay scaling in input - queued switches ( i.e. , the delay scaling under an optimal scheduling policy ) has been an important area of research for more than a decade . the randomized scheduling policy @xcite ( based on birkhoff - von neumann decomposition ) achieves an average packet delay of @xmath8 . the well - known max - weight matching ( mwm ) @xcite policy and various approximate mwm algorithms @xcite are shown to have an average packet delay no greater than @xmath8 , although it is conjectured that this bound is not tight for a wide range of traffic patterns @xcite .",
    "recently , maguluri _ et al .",
    "_ @xcite show that mwm can achieve the optimal @xmath9 packet - level delay in the _ heavy - traffic regime_. neely _ et al .",
    "_ @xcite propose a batching scheme that achieves an average packet delay of @xmath4 ; this is the best known result for packet - level delay scaling as @xmath1 _ under general traffic conditions_. zhong _ et al .",
    "_ @xcite consider the joint scaling of queue length as @xmath1 and @xmath10 .",
    "they propose a policy that gives an upper bound of @xmath11 ; this joint scaling is shown to be  optimal \" in the _ heavy - traffic regime _ where @xmath12 . however , to the best of our knowledge , the optimal scaling of packet - level delay under a general traffic condition is still an open problem in input - queued switches . by comparison , the optimal scaling of _ coflow - level delay",
    "_ , which is an upper bound for packet - level delay , has not been studied before . in this paper",
    ", we make the first attempt in deriving the optimal coflow - level delay scaling as @xmath1 .",
    "in this section , we briefly introduce some common notations and useful mathematical tools that facilitates our subsequent analysis .",
    "define @xmath13=\\{1,\\cdots , n\\}$ ] .",
    "we reserve bold letters for matrices .",
    "for example , @xmath14 denotes an @xmath0 matrix with the @xmath15-th element being @xmath16 . for simplicity of notation",
    ", we may drop the subscript  @xmath0 \" if the context is clear .",
    "we use the traditional asymptotic notations .",
    "let @xmath17 and @xmath18 be two functions defined on some subset of real numbers",
    ". then @xmath19 if there exists some positive constant @xmath20 and a real number @xmath21 such that @xmath22 for all @xmath23 ; similarly , @xmath24 if there exists some positive constant @xmath20 and a real number @xmath21 such that @xmath25 for all @xmath23 ; finally , @xmath26 if @xmath19 and @xmath24 .      * ( 1 ) . stochastic dominance .",
    "* we consider the first - order stochastic dominance whose definition is as follows .",
    "consider + two random variables @xmath27 and @xmath28 .",
    "then @xmath27 stochastically dominates @xmath28 if @xmath29\\ge \\mathbb{p}[x_2\\ge x]$ ] for all @xmath30 .",
    "intuitively , stochastic dominance defines the  inequality relationship \" between two random variables in the probabilistic sense .",
    "if @xmath27 stochastically dominates @xmath28 , then @xmath27 has an equal or higher probability of taking on a large values than @xmath28 .",
    "two useful properties of stochastic dominance are as follows @xcite .",
    "* consider two non - negative random variables @xmath27 and @xmath28 . if @xmath27 stochastically dominates @xmath28 , then @xmath31\\ge \\mathbb{e}[x^n_2]$ ] for all @xmath32 .",
    "* suppose @xmath33 is a set of independent random variables and @xmath34 is another set of independent random variables .",
    "if @xmath35 stochastically dominates @xmath36 for all @xmath37 $ ] , then @xmath38 also stochastically dominates @xmath39 .",
    "the above properties will be helpful when establishing inequalities among expectations ( and higher moments ) of random variables .    *",
    "associated random variables . *",
    "the association of random variables is a stronger notion of positive correlation .",
    "the formal definition is as follows",
    ".    a collection of random variables @xmath40 are said to be associated if @xmath41 for all pairs of non - decreasing functions @xmath17 and @xmath18 .    intuitively , if a collection of random variables are associated , they are usually positively correlated ( at least independent ) . in other words , if @xmath27 takes on a large value , then @xmath42 are also very likely to take on large values .",
    "the followings are some useful properties of associated random variables ( see appendix a of @xcite ) .",
    "* independent random variables are associated ( trivial case ) .",
    "* non - decreasing functions of associated random variables are also associated .",
    "* if two sets of associated random variables are independent of one another , then their union is a set of associated random variables . *",
    "if @xmath43 are associated , then @xmath38 is stochastically dominated by @xmath44 where @xmath45 s are _ independent _ random variables identically distributed as @xmath35 s .",
    "a particularly important property is ( p4 ) which relates the maximum of a set of ( possibly dependent ) random variables to the maximum of a set of independent random variables .",
    "we consider an @xmath0 input - queued switch with @xmath3 input ports and @xmath3 output ports .",
    "the system operates in slotted time , and the slot length is normalized to one unit of time . in each slot , each input can transfer at most one packet and each output can receive at most one packet ( this is referred to as",
    " crossbar constraints \" ) .",
    "such an input - queued switch model is simple yet very useful in modeling many practical networked systems .",
    "for example , data centers with full bisection bandwidth can be abstracted out as a giant input - queued switch interconnecting different machines .",
    "note that each input port may have packets destined for different output ports , which can be represented as _ virtual output queues _",
    "there are a total of @xmath46 virtual output queues , indexed by @xmath15 for @xmath47 $ ] , where @xmath13\\triangleq\\{1,\\cdots , n\\}$ ] and queue @xmath15 holds packets from input @xmath48 to output @xmath49 .",
    "figure [ fig : switch ] shows a @xmath50 input - queued switch with four virtual output queues .    the schedule of packet transmissions in slot @xmath51 can be represented by an @xmath0 matrix @xmath52 where @xmath53 if the connection between input @xmath48 and output @xmath49 is activated .",
    "a feasible schedule @xmath54 is one that satisfies the crossbar constraints , i.e. , @xmath54 must be a binary matrix where there is at most one  1 \" in each row and each column .",
    "input - queued switch with two coflow arrivals.,width=288 ]      a coflow is a collection of parallel data flows belonging to the same job .",
    "it has the all - or - nothing property : a coflow is not complete until the completion of all its constituent flows .",
    "coflows are a useful abstraction for many communication patterns in data - intensive computing applications such as mapreduce ( see @xcite for applications of coflows ) .",
    "note that the traditional point - to - point communication is a special case of coflows ( i.e. , a coflow with a single flow ) .",
    "formally , we represent each coflow by a random traffic matrix @xmath55 where @xmath16 is the number of packets in this coflow that need to be transmitted from input @xmath48 to output @xmath49 .",
    "note that each coflow may contain many small flows from input @xmath48 to output @xmath49 , that are aggregated into a single batch @xmath16 for ease of exposition . in the following",
    ", @xmath16 will be referred to as the  * batch size * \" or  * flow size * \" from input @xmath48 to output @xmath49 .",
    "we assume that all the packets in a coflow are released simultaneously upon the arrival of this coflow .",
    "figure [ fig : switch ] illustrates two coflow arrivals whose traffic matrices are @xmath56 and @xmath57 let @xmath58=\\beta_{ij}$ ] and assume that coflows arrive to the system with rate @xmath59 .",
    "then the arrivals of packets to queue @xmath15 is a _ batch arrival process _ with rate @xmath59 and mean batch size @xmath60 . also define @xmath61 . in our analysis",
    ", we also make the following assumptions :    * the arrival times and the batch sizes of different coflows are independent .",
    "* @xmath16 s are independent random variables .",
    "* if the @xmath62-th moment of @xmath16 is finite , we assume @xmath63=o(1)$ ] for all @xmath37 $ ] and @xmath64=o(1)$ ] for all @xmath65 $ ] as @xmath1 . *",
    "the sub - critical condition holds : @xmath66 .    in this paper , we focus on optimizing _ coflow - level delay _ , i.e. , _ the time between the arrival of a coflow until all the packets associated with this coflow are transmitted_. in particular , we are interested in the scaling of coflow - level delay in a large - scale system , as @xmath1 .",
    "our objective is to find a scheduling policy that achieves the best dependence of coflow - level delay on @xmath3 while stabilizing the system whenever @xmath67 .",
    "before we investigate any specific scheduling policy , it is useful to study the fundamental scaling properties of coflow - level delay as @xmath1 . in this section ,",
    "we develop lower bounds on coflow - level delay in input - queued switches .",
    "these lower bounds serve as the baselines when we evaluate the coflow - level performance of a scheduling policy .",
    "we first introduce the notion of _ clearance time_.    the clearance time of a coflow @xmath55 is @xmath68    clearly , @xmath69 is the maximum number of packets in a row or a column of @xmath70 . since each input / output port can process at most one packet per slot , the minimum time to clear all the packets in @xmath70",
    "must be no smaller than @xmath69 .",
    "in fact , @xmath70 can be cleared in exactly @xmath69 slots by using the _ optimal clearance algorithm _ described in @xcite . as a result ,",
    "@xmath69 is the minimum time needed to transmit all the packets in a coflow @xmath70 . in the rest of this section , we investigate the scaling of clearance time as @xmath1 and its relationship to coflow - level delay .",
    "depending on the distributions of @xmath16 s ( the flow sizes ) , the scaling of clearance time exhibits different behaviors .",
    "first , we consider the general case where the flow size distribution is arbitrary ( as long as @xmath58<\\infty$ ] for all @xmath71 $ ] ) .",
    "[ thm : ct - general ] for a coflow @xmath55 with @xmath58<\\infty$ ] , the expected clearance time is @xmath72=o(n)$ ] .",
    "moreover , there exist distributions of @xmath16 s such that @xmath72=\\omega(n^{\\frac{1}{1+\\epsilon}})$ ] for any @xmath73 .",
    "the @xmath8 upper bound is nearly trivial .",
    "it is clear that @xmath74&\\le \\mathbb{e}[\\sum_{i , j}x_{ij}]\\le n\\beta = o(n ) .",
    "\\end{split}\\ ] ]    to prove the lower bound , we find some distributions of @xmath16 s such that @xmath72=\\omega(n^{\\frac{1}{1+\\epsilon}})$ ] for any @xmath73 .",
    "consider the scenario where @xmath70 is a diagonal matrix : @xmath75 with probability 1 for @xmath76 and @xmath77 has the power law for all @xmath37 $ ] , i.e. , @xmath78=\\frac{1}{k^{1+\\epsilon}},~k=1,2,\\cdots,\\ ] ] where @xmath73 .",
    "note that @xmath79=\\frac{1+\\epsilon}{\\epsilon}$ ] but it can be easily scaled or shifted to have an arbitrary expectation . by simple calculation on the order statistics , we have @xmath74&\\ge \\mathbb{e}[\\max_i \\sum_j x_{ij}]\\\\ & = \\mathbb{e}[\\max_i x_{ii}]\\\\ & = \\sum_{k=1}^{\\infty } \\big[1-(1-\\frac{1}{k^{1+\\epsilon}})^n\\big]\\\\ & \\ge \\sum_{k=1}^{n_{\\epsilon } }   \\big[1-\\big(1-\\frac{1}{n^{1+\\epsilon}_{\\epsilon}}\\big)^n\\big]\\\\ & \\ge n_{\\epsilon }   \\big[1-\\big(1-\\frac{1}{n}\\big)^n\\big ] , \\end{split}\\ ] ] where @xmath80 . since @xmath81 , we can conclude that @xmath82=\\theta(n_{\\epsilon})=\\theta(n^{\\frac{1}{1+\\epsilon}})$ ] as @xmath1 . as a result ,",
    "there exist ( heavy - tailed ) distributions of @xmath16 s such that @xmath72=\\omega(n^{\\frac{1}{1+\\epsilon}})$ ] for any @xmath73 .",
    "if @xmath16 also has a finite variance , we can obtain a better scaling behavior of clearance time as @xmath1 . in this case , we assume @xmath83 for all @xmath37 $ ] and @xmath84 for all @xmath65 $ ] , where @xmath85 is a constant independent of @xmath3 .    [ thm : ct - second ] for a coflow @xmath55 with @xmath86 for all @xmath47 $ ] , the expected clearance time is @xmath72=o(\\sqrt{n})$ ] .",
    "moreover , there exist distributions of @xmath16 s such that @xmath72=\\omega(n^{\\frac{1}{2+\\epsilon}})$ ] for any @xmath73 .",
    "devroye @xcite shows that if @xmath87 are ( possibly dependent ) random variables with finite means and finite variances , then @xmath88\\le \\max_i \\mathbb{e}[y_i]+\\sqrt{n}\\max_{i}\\sqrt{\\text{var}(y_i)}.\\ ] ] if @xmath86 for all @xmath71 $ ] , it follows that @xmath89&\\le   \\max_i \\mathbb{e}[\\sum_{j } x_{ij}]+\\sqrt{n}\\max_{i}\\sqrt{\\text{var}(\\sum_{j } x_{ij})}\\\\ & \\le \\beta+\\sqrt{n}\\sigma . \\end{split}\\ ] ] similarly , it can be shown that @xmath90\\le \\beta+\\sqrt{n}\\sigma$ ] . as a result , we have @xmath91\\le \\mathbb{e}[\\max_i \\sum_{j } x_{ij}]+\\mathbb{e}[\\max_j \\sum_{i } x_{ij}]\\le 2\\beta+2\\sqrt{n}\\sigma.\\ ] ] consequently , @xmath72=o(\\sqrt{n})$ ] .",
    "the @xmath92 lower bound can be proved in a similar way to lemma [ thm : ct - general ] with the power being @xmath93 instead of @xmath94 such that the variance is finite .",
    "furthermore , if @xmath16 s have light - tailed distributions , the scaling of clearance time is logarithmic .",
    "[ thm : ct - light ] for a coflow @xmath55 with light - tailed @xmath16 s , the expected clearance time is @xmath72=o(\\log n)$ ] .",
    "moreover , there exist distributions of @xmath16 s such that this bound is tight",
    ".    see appendix [ appendix : ct - light ] .",
    "finally , if @xmath16 s are deterministic , it is clear that @xmath72\\le\\beta=\\theta(1)$ ] .",
    "since clearance time is the minimum time to transmit all the packets in a coflow , it is a natural lower bound on coflow - level delay ( which is the time between the arrival of a coflow until all the packets associated with this coflow are transmitted ) .",
    "consequently , the above results essentially impose fundamental limits on the coflow - level delay that can be achieved by any scheduling policy .",
    ".lower bounds on coflow - level delay [ cols=\"^,^,^\",options=\"header \" , ]     [ coro : lower - bound ] the expected coflow - level delay achieved by any scheduling policy can not be better than @xmath95 , where + ( 1 ) @xmath96 for any @xmath73 if @xmath58<\\infty$ ] ; + ( 2 ) @xmath97 for any @xmath73 if @xmath86 ; + ( 3 ) @xmath98 if @xmath16 s have light - tailed distributions ; + ( 4 ) @xmath99 if @xmath16 s are deterministic .",
    "the scaling properties of expected coflow - level delay are summarized in table [ tb : lower ] .",
    "it can be observed that the lower bound on coflow - level delay critically depends on the _ variability _ of @xmath16 s : the less @xmath16 s vary , the smaller lower bound on coflow - level delay we can obtain . in the rest of this paper , we mainly focus on the case where @xmath16 s have light - tailed distributions unless otherwise stated .",
    "the heavy - tailed case is left for future work .",
    "to gain further insights into the design of coflow - level scheduling policies , we study the performance of some _ coflow - agnostic _ scheduling policies where coflow - level information ( e.g. , which packets / flows belong to the same coflow ) is not leveraged .",
    "in particular , we study the coflow - level performance of two simple scheduling policies : randomized scheduling and periodic scheduling .",
    "* randomized scheduling .",
    "* let @xmath100 be the @xmath101 perfect matchings ( permutation matrices ) associated with the @xmath0 switch . with the birkhoff - von neumann decomposition , we can find probabilities @xmath102 such that the matrix @xmath103 ( where @xmath104 $ ] ) .",
    "such a decomposition is always feasible since @xmath105 is sub - stochastic by assumption ( 4 ) in section [ sec : coflow - abs ] . in each slot , the randomized policy uses matching @xmath106 as the schedule , with probability @xmath107 . under uniform traffic ,",
    "a simple way to implement the randomized policy is to connect the @xmath3 input ports with a random permutation of the @xmath3 output ports .",
    "such a policy is guaranteed to stabilize the network as long as @xmath67 although @xmath59 and @xmath108 need to be known in advance .",
    "the detailed description of this policy can be found in @xcite and it can be easily shown that the randomized policy achieves @xmath8 average _ packet - level _",
    "delay @xcite .",
    "* periodic scheduling .",
    "* this policy is similar to randomized scheduling except that the scheduling decisions are deterministic .",
    "specifically , for some ( sufficiently long ) period @xmath109 , we use matching @xmath106 for exactly @xmath110 times every @xmath109 slots . under uniform traffic , a simple way to implement periodic scheduling is to connect each input port @xmath48 to output port @xmath111 + 1 $ ] in slot @xmath51 .",
    "this policy also achieves @xmath8 average packet - level delay whenever @xmath67 @xcite .",
    "now we analyze the coflow - level delay achieved by the above two policies .",
    "in contrast to the simple analysis of packet - level delay , it is non - trivial to analyze the coflow - level delay achieved by these policies , due to the correlation between packets ( e.g. , packets belonging to the same coflow arrive simultaneously ) .",
    "for ease of exposition , we assume that traffic is uniform such that @xmath58=\\frac{\\beta}{n}$ ] and @xmath112 for all @xmath47 $ ] .",
    "we also assume that coflow arrivals are poisson .",
    "the analysis can be easily extended to the general case .",
    "[ thm : random - delay ] suppose @xmath16 s have light - tailed distributions .",
    "the expected coflow - level delay achieved by the randomized or periodic scheduling policy is @xmath5 whenever @xmath67 .",
    "see appendix [ appendix : random ] .",
    "* remark 1 .",
    "* the proof to theorem [ thm : random - delay ] also shows that the average coflow - level delay achieved by the randomized or periodic policy is @xmath113 as @xmath114 and @xmath1 .",
    "* remark 2 .",
    "* comparing with the @xmath8 packet - level delay , we can observe a coflow - level delay ",
    "dilation \" factor of @xmath4 .",
    "intuitively , the delay dilation is due to the additional  assembly delay \" : packets processed earlier must wait for packets ( in the same coflow ) that are processed later .",
    "finally , it is worth mentioning that the randomized or periodic scheduling policy is the simplest throughput - optimal policy in input - queued switches , but it sheds light on the non - triviality of coflow - level analysis ( e.g. , the correlation between packets ) and the potential weakness of coflow - agnostic algorithms ( as can be seen from the coflow - level delay dilation ) .",
    "the coflow - level analysis of more sophisticated policies , such as maxweight matching ( mwm ) scheduling , are very challenging and left for future work .",
    "in fact , even the _ packet - level _ delay of mwm is still an open problem @xcite .    in conclusion",
    ", there has been no throughput - optimal scheduling policy that achieves the provably optimal scaling with respect to coflow - level delay . in the next section",
    ", we propose a new coflow - aware scheduling policy that achieves the optimal scaling of coflow - level delay while maintaining throughput optimality and requiring no traffic statistics .",
    "in this section , we develop a coflow - aware scheduling policy that achieves @xmath4 expected coflow - level delay whenever @xmath67 under the assumption that arrivals of coflows are poisson and flow sizes @xmath16 s are light - tailed .",
    "the policy is called the coflow - aware batching ( cab ) scheme .",
    "note that in section [ sec : lower ] , we showed that if @xmath16 s are light - tailed , no scheduling policy can achieve an expected coflow - level delay better than @xmath4 . as a result , the cab policy attains the lower bound , which implies that @xmath4 is optimal scaling of coflow - level delay ( under poisson arrivals and light - tailed flow sizes ) .",
    "the basic idea of the cab policy is to group timeslots into frames of size @xmath109 slots and clear coflows in batches , where one batch of coflows correspond to the collection of coflows arriving in the same frame .",
    "coflows that are not cleared during a frame are handled separately in future frames . by properly setting the frame size @xmath109",
    ", the cab policy can achieve the desirable @xmath4 average coflow - level delay .",
    "note that neely _",
    "@xcite proposed a similar batching scheme to reduce _ packet - level _ delay . by comparison",
    ", our cab policy explicitly leverages coflow - level information ( e.g. , which packets belong to the same coflow ) to reduce _ coflow - level _ delay .",
    "more importantly , as mentioned in section [ sec : agnostic ] , coflow - level delay analysis is fundamentally different from packet - level analysis .",
    "the detailed description of the cab policy is as follows .",
    "* coflow - aware batching ( cab ) scheduling policy *    * setup .",
    "*    * timeslots are grouped into frames of size @xmath109 slots",
    ".    * notation .",
    "*    * denote by @xmath115 the aggregate traffic matrix of all the coflows arriving in the @xmath116-th frame , where @xmath117 is the total number of packets from input @xmath48 to output @xmath49 that arrive during the @xmath116-th frame .    * procedures .",
    "*    * in the @xmath118-th frame , we try to clear the coflows that arrived in the @xmath116-th frame , i.e. , @xmath119 . let @xmath120 be the traffic matrix we choose to clear in the @xmath118-th frame ( which may be less than @xmath119 ) , and denote by @xmath121 the clearance time of @xmath119 .",
    "if @xmath122 , then @xmath119 can be cleared within the first @xmath123 slots in the @xmath118-th frame . in this case , we just set @xmath124 .",
    "note that we only use the first @xmath123 slots in a frame while the remaining slot is reserved for clearing  overflow \" coflows as discussed below .",
    "if @xmath125 , then _ overflow _ occurs and only a subset of @xmath119 can be cleared in the @xmath118-th frame . in this case , we sequentially add coflows to @xmath120 in order of their arrival in the @xmath116-th frame until @xmath120 becomes maximal , i.e. , adding any other coflow will make the clearance time of @xmath120 exceed @xmath123 . if a coflow is selected to @xmath120 , it is referred to as a _ * conforming coflow * _ otherwise it is called a _ * non - conforming coflow*_. * all the conforming coflows that arrive in the @xmath116-th frame are scheduled during the @xmath118-th frame by clearing @xmath120 in minimum time using an optimal clearance algorithm ( e.g. , see @xcite ) . * all the non - conforming coflows are put into a separate fifo queue . in the last slot of each frame , this fifo queue gets served by the switch . note that non - conforming coflows are served one at a time , and the service time ( measured in the number of _ frames _ ) of each non - conforming coflow is its clearance time .",
    "+ in words , the first @xmath123 slots in a frame are used to serve conforming coflows arriving in the previous frame and the remaining slot is reserved to serve non - conforming coflows in a fifo manner . note that conforming coflows ( that arrive in the same frame ) are cleared together in a batch while non - conforming coflows are served one at a time in the separate fifo queue . under the cab policy ,",
    "either all the packets in a coflow are conforming or none of them are conforming .",
    "the following theorem shows that the cab policy achieves @xmath4 expected coflow - level delay whenever @xmath67 ( under poisson coflow arrivals and light - tailed flow sizes ) .",
    "[ thm : cab - log ] suppose coflows arrive according to a poisson process and flow sizes are light - tailed . by selecting a proper frame size @xmath126 , the cab policy achieves @xmath4 expected coflow - level delay if @xmath67 .",
    "the choice of @xmath109 will be specified later in section [ sec : proof1 ] .",
    "in fact , the cab policy not only guarantees that the _ average _ coflow - level delay is @xmath4 but also ensures that the @xmath4 delay is achievable for an arbitrary coflow with high probability .",
    "[ co : cab - log - worst ] by selecting a proper frame size @xmath126 , the cab policy achieves @xmath4 delay for an arbitrary coflow with probability @xmath127 whenever @xmath67 .    in the following",
    ", we present a proof for the above results .",
    "the proof itself suggests the choice of @xmath109 .      for simplicity",
    ", we assume that traffic is uniform such that @xmath58=\\frac{\\beta}{n}$ ] and @xmath112 for all @xmath47 $ ] .",
    "the analysis can be easily extended to non - uniform traffic .",
    "we discuss the expected coflow - level delay experienced by a conforming and a non - conforming coflow , respectively .    *",
    "conforming coflows are cleared within 2 frames : the frame where they arrive plus the frame where they are cleared . as a result ,",
    "the coflow - level delay experienced by a conforming coflow is at most @xmath128 time slots , i.e. , @xmath129 * a non - conforming coflow first waits for at most t slots ( the frame where it arrives ) and then waits in the separate fifo queue . as a result , the coflow - level delay experienced by a non - conforming coflow is @xmath130    let @xmath131 be the long - term fraction of non - conforming coflows",
    ". then the average coflow - level delay of an _ arbitrary coflow _ is @xmath132\\le ( 1-\\eta)2t+\\eta[t+\\text{delay(fifo~queue)}].\\ ] ] in the following , we choose @xmath126 ( the specific value of @xmath109 will be made clear later ) .",
    "under such a choice of @xmath109 , we prove that @xmath131 is miniscule and @xmath133 is not very large .",
    "thus , it can be concluded that @xmath134=o(\\log n)$ ] .    * step 1 : determine the value of @xmath109 . *    we first show that the overflow probability decreases exponentially with the frame size @xmath109 .",
    "[ lm : exp - decay ] let @xmath135 be the overflow probability in an arbitrary frame .",
    "if @xmath67 , there exists some constant @xmath136 such that @xmath137    note that an overflow occurs in the @xmath116-th frame if the clearance time of @xmath119 is greater than @xmath123 slots , i.e. , if any of the following @xmath138 inequalities is violated .",
    "@xmath139 where @xmath117 is the number of packets that arrive to queue @xmath15 during the @xmath116-th frame .",
    "clearly , @xmath140 ( or @xmath141 ) is the total number of packets that arrive to input @xmath48 ( or output @xmath49 ) during the @xmath116-th frame , which corresponds to the number of packet arrivals during @xmath109 time slots in a _ poisson process with batch arrivals _ where the arrival rate is @xmath59 and the mean batch size is @xmath142 .    let @xmath143 be the total number of packet arrivals during @xmath109 time slots in the above _ batch poisson process_. it is clear that @xmath144 here , @xmath145 is the number of coflow arrivals during the @xmath109 time slots , and has a poisson distribution with rate @xmath146 ; @xmath147 is the number of packets brought by the @xmath62-th coflow to a certain input or output port , which is identically distributed as @xmath148 or @xmath149 and @xmath150=\\beta$ ] . by wald s equality",
    ", we have @xmath151=\\mathbb{e}[n(t)]\\mathbb{e}[b_1]=\\rho t < t$ ] if @xmath67 .",
    "suppose the moment generating function ( mgf ) of @xmath147 is @xmath152 , and the mgf of @xmath143 is @xmath153 . by the property of a poisson process with batch arrivals , we have @xmath154\\}$ ] . by the chernoff bound",
    ", we have for any @xmath155 , @xmath156&\\le m_y(s)e^{-st}\\\\ & = \\exp\\big\\{\\lambda t[m_b(s)-1]-st\\big\\}\\\\ & = \\exp\\big(-f(s)t\\big ) , \\end{split}\\ ] ] where @xmath157+s.\\ ] ] it is clear that @xmath158 and @xmath159=1-\\rho>0 $ ] . as a result",
    ", there exists a sufficiently small @xmath73 such that @xmath160 .",
    "let @xmath161 . by the same argument as in the proof to lemma [ lm : asy - order - light ] ( see appendix [ appendix : ct - light ] ) , it can be verified that @xmath162 is a constant independent of @xmath3 under our assumptions on @xmath16 s .",
    "then we have @xmath163\\le \\exp(-\\gamma t).\\ ] ] applying the union bound , we can conclude that the overflow probability ( i.e. , at least one of the @xmath138 inequalities in is violated ) is bounded by @xmath164 which completes the proof .",
    "* remark 1 .",
    "* lemma [ lm : exp - decay ] implies that if we want to keep the overflow probability below @xmath165 , we can choose @xmath166 where @xmath167 is some constant independent of @xmath3 . since @xmath109 is an integer , we can choose @xmath168 the value of @xmath165 will be specified later such that @xmath126 and the average coflow - level delay is also @xmath4 .",
    "the constant @xmath162 can also be found in a systematic way ( see section [ sec : discussion ] for details ) .    * remark 2 .",
    "* lemma [ lm : exp - decay ] holds only if @xmath67 . if @xmath169 , @xmath151=\\rho t\\ge t$ ] and the chernoff bound does not hold .    * step 2 : determine the value of @xmath131 .",
    "*    next , we derive an upper bound for the long - term fraction of non - conforming coflows , i.e. , @xmath170 where @xmath171 is the total number of coflows that arrive during the @xmath116-th frame and @xmath172 is the number of non - conforming coflows in the @xmath116-th frame .",
    "we begin by identifying a stochastic bound for the number of coflow arrivals in an * overflow * frame .",
    "[ lm : non - conforming - bound ] suppose @xmath145 is a poisson random variable with rate @xmath146 .",
    "given that an overflow occurs in a frame , the number of coflows arrivals in this frame is stochastically dominated by @xmath173 when @xmath109 is sufficiently large .",
    "let @xmath145 be the total number of coflow arrivals in an arbitrary frame of @xmath109 time slots . clearly , @xmath145 is a poisson random variable with rate @xmath146 .",
    "denote by @xmath174 the traffic matrix of the @xmath62-th coflow , and let @xmath175 be the aggregate traffic matrix of these coflows , i.e. , @xmath176 .",
    "it is clear that an overflow occurs if the clearance time of @xmath175 is greater than @xmath123 , i.e. , @xmath177 .",
    "we first find a lower bound on the overflow probability when @xmath109 is sufficiently large .",
    "[ lm : overflow - lower ] there exists some @xmath178 such that for any @xmath179 the overflow probability @xmath180\\ge \\mathbb{p}\\big[n(t)\\ge t\\slash\\beta\\big].\\ ] ]    first notice that @xmath181 where the last equality is due to the fact that @xmath182 . as a result ,",
    "for any @xmath37 $ ] @xmath183\\ge \\mathbb{p}[\\sum_{n=1}^{n(t)}\\sum_j x^{(n)}_{ij}\\ge t].\\ ] ] by elementary probability calculation , we can derive @xmath184=\\beta\\lambda t=\\rho t\\ ] ] @xmath185 where @xmath186 is the variance of @xmath187 .",
    "note that when @xmath188 , then @xmath189 with probability 1 for any @xmath37 $ ] , which implies that @xmath190=\\mathbb{p}[\\beta n(t)\\ge t]= \\mathbb{p}[n(t)\\ge t\\slash\\beta].\\ ] ] therefore , we only need to consider the case where @xmath191 .    note that @xmath192 . by central limit theorem",
    ", we have @xmath193=1-\\phi\\big(\\frac{t-\\rho t}{\\sqrt{\\lambda t(\\beta^2+\\sigma^2)}}\\big)\\triangleq p.\\ ] ] at the same time , since @xmath145 is a poisson random variable with mean @xmath146 , we can use normal approximation to poisson distribution : @xmath194=1-\\phi\\big(\\frac{t-\\rho t}{\\sqrt{\\lambda t \\beta^2}}\\big)\\triangleq p'.\\ ] ] as a result , for any @xmath73 , there exist a sufficiently large @xmath195 such that for any @xmath179 @xmath196-p\\big|\\le \\epsilon\\\\ \\big|\\mathbb{p}[n(t)\\ge t\\slash \\beta]-p'\\big|\\le \\epsilon . \\end{split}\\ ] ] since @xmath197 ( note that @xmath191 ) , we can choose @xmath198 and conclude that for any sufficiently large @xmath179 @xmath199-\\mathbb{p}\\big[n(t)\\ge t\\slash \\beta\\big]\\\\ \\ge & \\mathbb{p}\\big[\\sum_{n=1}^{n(t)}\\sum_j x^{(n)}_{ij}\\ge t\\big]-\\mathbb{p}\\big[n(t)\\ge t\\slash \\beta\\big]\\\\ \\ge & p-\\epsilon-(p'+\\epsilon)=0 , \\end{split}\\ ] ] where the first inequality is due to and the second inequality is due to .",
    "next we evaluate the probability that there are at least @xmath200 coflow arrivals in an overflow frame .",
    "[ lm : stochastic - domin1 ] given that an overflow occurs in a frame , the probability that there are at least @xmath200 coflow arrivals in this frame is upper bounded by @xmath201 $ ] when @xmath109 is sufficiently large , i.e. , @xmath202\\le \\mathbb{p}\\big[n(t)\\ge m\\big|n(t)\\ge t\\slash\\beta\\big].\\ ] ]    if @xmath203 , then @xmath201=1 $ ] and the upper bound naturally holds .    if @xmath204 , then @xmath205&=\\frac{\\mathbb{p}[n(t)\\ge m , n(t)\\ge \\frac{t}{\\beta}]}{\\mathbb{p}[n(t)\\ge \\frac{t}{\\beta}]}\\\\ & = \\frac{\\mathbb{p}[n(t)\\ge m]}{\\mathbb{p}[n(t)\\ge \\frac{t}{\\beta}]}\\\\ & \\ge \\frac{\\mathbb{p}[n(t)\\ge m , \\tau(\\mathbf{l})\\ge t]}{\\mathbb{p}[\\tau(\\mathbf{l})\\ge t]}\\\\ & = \\mathbb{p}[n(t)\\ge m|\\tau(\\mathbf{l})\\ge t ] , \\end{split}\\ ] ] where the first equality is due to the rule of conditional probability , the second equality holds because @xmath206 = \\mathbb{p}[n(t)\\ge m]$ ] when @xmath204 , and the third inequality is due to claim [ lm : overflow - lower ] and the fact that @xmath207\\ge \\mathbb{p}[n(t)\\ge m , \\tau(\\mathbf{l})\\ge t]$ ] .",
    "[ lm : poisson - dist ] if @xmath145 is a poisson random variable , then @xmath208\\le \\mathbb{p}[n(t)\\ge m]$ ] .",
    "this claim was proved in appendix b of @xcite .",
    "the above claims imply that when @xmath109 is sufficiently large @xmath209&\\le \\mathbb{p}\\big[n(t)\\ge m\\big|n(t)\\ge \\frac{t}{\\beta}\\big]\\\\ & \\le \\mathbb{p}\\big[n(t)\\ge m-\\frac{t}{\\beta}\\big]\\\\ & = \\mathbb{p}\\big[n(t)+\\frac{t}{\\beta}\\ge m\\big ] , \\end{split}\\ ] ] where the first inequality is due to claim [ lm : stochastic - domin1 ] and the second inequality is due to claim [ lm : poisson - dist ] .",
    "the above inequalities imply that given an overflow occurs in a frame , the number of coflow arrivals in this frame is stochastically dominated by @xmath210 when @xmath109 is sufficiently large .",
    "this completes the proof of lemma [ lm : non - conforming - bound ] .",
    "with lemma [ lm : non - conforming - bound ] , we can find an upper bound for the long - term fraction of non - conforming coflows .",
    "[ lm : non - conforming - fraction ] if the overflow probability is @xmath165 , the long - term fraction of non - conforming coflows among all coflows is upper bounded by @xmath211 when the frame size @xmath109 is sufficiently large .",
    "according to lemma [ lm : non - conforming - bound ] , the expected number of non - conforming coflows in an overflow frame is at most @xmath212 ( note that this is a loose bound since we treat all the coflows in an overflow frame as non - conforming coflows ) . as a result ,",
    "the long - term fraction of non - conforming coflows is @xmath213 note that the inequality holds because the number of overflow frames is @xmath214 as @xmath215 and the average number of non - conforming coflows in each overflow frame is at most @xmath212 . noticing that @xmath216 and @xmath66",
    ", we have @xmath217 which completes the proof .",
    "* step 3 : determine delay in the separate fifo queue .",
    "*    the third step is to find an upper bound for the average delay experienced by non - conforming coflows in the separate fifo queue .",
    "note that lemma [ lm : exp - decay ] shows that whenever @xmath67 , the overflow probability @xmath165 can be made arbitrarily small by setting the frame size @xmath109 as in .",
    "in particular , we can choose the frame size to be @xmath218 to achieve the overflow probability @xmath219 .",
    "under such a choice of @xmath109 , we can prove the following lemma .",
    "[ lm : delay - fifo ] under a proper choice of @xmath109 , the fifo queue holding non - conforming coflows is stable whenever @xmath67 and the average delay experienced by non - conforming coflows in the fifo queue is @xmath220 .",
    "note that non - conforming coflows are placed in a discrete - time fifo queue and are served one at a time . at the end of each frame ,",
    "a batch of non - conforming coflows arrive to this queue , with probability @xmath165 . since non - conforming coflows arrive to the fifo queue in batches , the arrivals of non - conforming coflows are dependent . to circumvent this dependence",
    ", we notice that the arrivals of different batches of non - conforming coflows are independent : in each frame , there is a batch arrival with probability @xmath165 , independent of any other frames . as a result , we overestimate the delay of any _ individual _ non - conforming coflow by the delay experienced by the _ entire batch _ of non - conforming coflows ( i.e. , the time between the arrival of the entire batch and the completion of all the non - conforming coflows in this batch ) plus @xmath109 slots ( the size of the frame in which the non - conforming coflow arrive ) .    as an overestimate , all the coflows that arrive in an overflow frame are treated as non - conforming coflows .",
    "let @xmath221 be the total number of non - conforming coflows in an overflow frame , and denote by @xmath222 the traffic of the @xmath62-th non - conforming coflow in this overflow frame .",
    "let @xmath223 be the aggregate traffic matrix associated with these non - conforming coflows .",
    "it follows that the service time for the entire batch of non - conforming coflows is @xmath224 ( measured in the number of frames since only one slot per frame is used to serve non - conforming coflows ) . clearly , the service times for different batches of non - conforming coflows are independent . as a result ,",
    "if the entire batch of non - conforming coflows is treated as a  customer \" , the fifo queue is a discrete - time gi / gi/1 queue with bernoulli arrivals ( of rate @xmath165 per frame ) and general service time @xmath225 .",
    "the average waiting time ( measured in the number of frames ) in such a system can be exactly characterized @xcite : @xmath226-\\delta\\mathbb{e}[u]}{2(1-\\delta\\mathbb{e}[u])}+\\mathbb{e}[u].\\ ] ] now we evaluate @xmath227 $ ] and @xmath228 $ ] . without loss of generality , we assume @xmath229 so that @xmath230 ( this simplification does not influence the scaling as @xmath1 ) . note that @xmath231 .",
    "thus , we have @xmath232 by lemma [ lm : non - conforming - bound ] , @xmath221 is stochastically dominated by @xmath173 where @xmath145 is a poisson random variable with rate @xmath146 . by lemma [ lm : non - conforming - batch ]",
    "( see appendix [ app : overflow - size ] ) , @xmath233 is stochastically dominated by @xmath234 where @xmath235 is the traffic of an arbitrary coflow in an arbitrary frame . as a result",
    ", we have @xmath236&\\le \\sum_i \\mathbb{e}[m]\\mathbb{e}\\big[\\sum_j \\tilde{x}_{ij}^{(n)}\\big]\\\\ & \\le",
    "n ( \\lambda t+t\\slash \\beta)(\\beta+t)=\\theta(nt^2 ) , \\end{split}\\ ] ] where the second inequality is due to ( p1 ) of stochastic dominance . at the same time , we have @xmath237\\text{var}\\big(\\sum_j \\tilde{x}_{ij}^{(n)}\\big)+\\mathbb{e}^2\\big[\\sum_j \\tilde{x}_{ij}^{(n)}\\big]\\text{var}(m)\\bigg]\\\\ & \\le \\sum_i \\bigg[\\mathbb{e}[m]\\mathbb{e}\\big[(\\sum_j \\tilde{x}_{ij}^{(n)})^2\\big]+\\mathbb{e}^2\\big[\\sum_j \\tilde{x}_{ij}^{(n)}\\big]\\mathbb{e}[m^2]\\bigg ] .",
    "\\end{split}\\ ] ] by ( p1 ) of stochastic dominance , we have @xmath238\\le \\mathbb{e}\\big[(\\sum_j x_{ij}+t)^2\\big ] = \\sigma^2 + ( \\beta+t)^2,\\\\ & \\mathbb{e}[m^2]\\le \\mathbb{e}[(n(t)+t\\slash\\beta)^2 ] = \\lambda t + ( \\lambda t+t\\slash \\beta)^2 . \\end{split}\\ ] ] taking into , we have @xmath239\\bigg\\}\\\\ & = \\theta(nt^4 ) , \\end{split}\\ ] ] which implies that @xmath240 = \\text{var}(u)+\\mathbb{e}^2[u ] = \\theta(n^2t^4).\\ ] ] taking and into , we have @xmath241 note that the above delay is measured in the number of _ frames _ , which implies that the expected delay ( measured in the number of _ timeslots _ ) experienced by a non - conforming coflow in the fifo queue is @xmath220 .    finally , it is worth mentioning that the gi / gi/1 queue is stable whenever @xmath242<1 $ ] .",
    "due to , this is true whenever the following condition is satisfied : @xmath243 since @xmath219 and @xmath126 , the left - hand side of can be made arbitrarily small ( i.e. , the queue is stable ) for any @xmath244 under a suitably small @xmath165 .",
    "we will further discuss the exact value of @xmath165 in section [ sec : discussion ] .",
    "* remark . * if @xmath169 , then lemma [ lm : exp - decay ] does not hold and the overflow probability @xmath165 can not be made arbitrarily small regardless of the choice of @xmath109 . in this case",
    ", the fifo queue holding non - conforming coflows is unstable .",
    "* step 4 : putting it all together .",
    "*    finally , we can evaluate the average coflow - level delay experience by both conforming and non - conforming coflows . by lemma [ lm : non - conforming - fraction ] ,",
    "the fraction of non - conforming coflows is at most @xmath211 . if @xmath67 , lemma [ lm : exp - decay ] shows that we can choose the frame size to be @xmath218 to achieve the overflow probability @xmath219 .",
    "under such a choice of @xmath109 , lemma [ lm : delay - fifo ] shows that @xmath245 .",
    "taking the values of @xmath109 , @xmath131 and @xmath246 into , we can conclude that the average coflow - level delay under the cab policy is @xmath247&\\le ( 1-\\frac{2\\delta}{\\rho})2t+\\frac{2\\delta}{\\rho}[t+\\text{delay(fifo queue)}]\\\\ & \\le 2t+\\frac{2\\delta } { \\rho}\\text{delay(fifo queue)}\\\\ & = o(t)+o(\\delta nt^3)\\\\ & = o(t)\\\\ & = o(\\log n ) .",
    "\\end{split}\\ ] ] this completes the proof to theorem [ thm : cab - log ] .      the proof to theorem [ thm : cab - log ] shows that the coflow - level delay experienced by any conforming coflow is no greater than @xmath248 and the fraction of conforming coflows is more than @xmath249 . as a result",
    ", the cab policy also ensures that the @xmath4 delay is achievable for an arbitrary coflow with high probability @xmath127 .      in this section ,",
    "we propose several heuristics that improve the practical performance of the cab policy up to some constant factor ( as compared to @xmath3 ) .    *",
    "shortest - clearance - time - first ( sctf ) rule .",
    "* this rule simply means that we should first clear the coflow with the smallest clearance time .",
    "it is inspired by the optimality of the shortest - processing - time rule in traditional machine scheduling literature .",
    "the sctf rule can be leveraged when we clear conforming coflows .",
    "we first order these conforming coflows according to their clearance time . in a certain slot ,",
    "suppose that queue @xmath15 gets scheduled . instead of transmitting a packet in queue @xmath15 according to fifo , we select to transmit a packet of the coflow with the shortest clearance time that also has a remaining packet in queue @xmath15 .",
    "* dynamic frame sizing .",
    "* this heuristic was suggested in . in each frame , if all the conforming coflows from the previous frame have been cleared and there are no non - conforming coflows in the system , the system starts a new frame immediately ( rather than being idle for the remainder of the frame ) .      * robustness to assumptions . * note that the poisson assumption is not essential in the proof ; a similar proof can be constructed for any arrival process such that the number of arrivals during @xmath109 slots has a light - tailed distribution ( referred to as a light - tailed arrival process ) . on the other hand ,",
    "if the batch size or the arrival process is not light - tailed , then the overflow probability no longer decreases exponentially with the frame size @xmath109 and the logarithmic bound does not hold .    *",
    "joint scaling as @xmath10 and @xmath1 . *",
    "it is also interesting to study the joint scaling of the coflow - level delay achieved by the cab policy as @xmath1 and @xmath10 .",
    "since the majority of coflows experience a delay no greater than @xmath250 , we focus on the scaling of @xmath109 as @xmath10 .",
    "the second - order taylor series of @xmath251 ( see equation ) around @xmath252 is @xmath253 when @xmath10 , we can set @xmath254 so that @xmath255 define @xmath256 .",
    "it follows from that @xmath257 as @xmath10 and @xmath1 .",
    "compared with the @xmath113 scaling under randomized or periodic scheduling , the cab policy has a much better dependence on @xmath3 but becomes more sensitive to @xmath258 .    * computational complexity . * the computational complexity of the cab policy can be analyzed in a similar way to the original batching policy @xcite .",
    "the computational complexity is @xmath259 per slot .",
    "* choosing parameters . * in the cab policy , the frame size is set to be @xmath260 . as a result",
    ", we need to choose the parameters @xmath165 and @xmath162 .",
    "we first fix @xmath162 and discuss how to determine the value of @xmath165 ( the overflow probability ) .",
    "the requirements on @xmath165 are :    * the left - hand side ( lhs ) of needs to be made below 1 such that the system is stable . *",
    "@xmath219 such that the @xmath4 delay is achievable .    note that when @xmath261 ( which is true for relatively large @xmath3 ) , the lhs of can be upper bounded by @xmath262 then we can obtain @xmath165 by solving the following system of equations : @xmath263 clearly , the solution to finds @xmath264 such that the second requirement is met ; the first requirement is met due to the fact that @xmath265 is greater than the lhs of .",
    "note that the system utilization @xmath258 can be measured , so equations can solved iteratively for a given @xmath162 .",
    "now we discuss how to estimate the value of @xmath162 . to obtain a smaller @xmath109 , it is desirable to have a larger @xmath162",
    ". if we know the coflow arrival rate and the distribution of batch sizes , we can compute @xmath162 by maximizing @xmath251 shown in , i.e. , @xmath266+s.\\ ] ] if the system has no information about @xmath59 or batch size distributions , @xmath162 can be empirically tuned .",
    "we can first pick some ( small ) arbitrary value of @xmath162 and obtain @xmath165 and @xmath109 by solving equations .",
    "the system then measures the actual overflow probability @xmath267 under such a frame size .",
    "if @xmath268 , the value of @xmath162 is reduced by some step size to increase the frame size @xmath109 ; otherwise the value of @xmath162 is increased by some step size .",
    "the above procedure proceeds until @xmath269 , and a good value of @xmath162 is found .",
    "in this section , we numerically evaluate the coflow - level performance of the cab policy .      in our simulations ,",
    "coflows arrive to the system according to a poisson process with rate @xmath270 ( per slot ) .",
    "the batch sizes ( @xmath16 s ) follow a geometric distribution with mean @xmath271 where @xmath272 ( measured in the number of packets ) .",
    "hence , the offered load is @xmath273 .",
    "the simulation is run for a sufficiently long time ( @xmath274 slots ) such that the steady state is reached .",
    "the parameter @xmath162 is obtained by solving equation offline ; the parameters @xmath165 and @xmath109 are obtained by solving equation .",
    "first , we evaluate the scaling of coflow - level delay as @xmath1 .",
    "the following schemes are compared :    * cab policy .",
    "note that two heuristics mentioned in section [ sec : heu ] are leveraged . *",
    "randomized scheduling as described in section [ sec : agnostic ] .",
    "* max - weight matching ( mwm ) scheduling : the schedule in slot @xmath51 is the maximum weight matching of @xmath276 where @xmath277 is the queue length matrix in slot @xmath51 .",
    "figure [ fig : basic ] shows the comparison of these schemes with respect to the average coflow - level delay , where the horizontal axis is on a logarithmic scale .",
    "as the theoretical bound suggests , the cab policy achieves the logarithmic scaling as @xmath1 ( i.e. , a straight line in the figure ) . by comparison",
    ", the average coflow - level delay achieved by the randomized scheme grows much faster with @xmath3 .",
    "moreover , it can be observed that the cab policy outperforms the randomized scheme even for very small @xmath3 ( e.g. , @xmath278 ) .",
    "another interesting observation is that the mwm policy has an exceptional coflow - level performance .",
    "it is observed that the mwm policy empirically achieves the optimal logarithmic coflow - level delay scaling as @xmath1 .",
    "the mwm policy also slightly outperforms the cab policy by some constant factor .",
    "unfortunately , the coflow - level delay analysis of the mwm policy is very challenging and left for future work .    in the above",
    ", the _ average _ coflow - level delay is evaluated but in many cases we are also interested in _ tail latency_. note that the cab policy guarantees that the @xmath4 coflow - level delay is achievable with high probability @xmath279 ( see corollary [ co : cab - log - worst ] ) , so the coflow - level delay tail under the cab policy also scales as @xmath4 when @xmath3 is relatively large .",
    "this is illustrated in figure [ fig : tail ] , where the 99.9-percentile coflow - level delay is evaluated . as expected , the cab policy achieves @xmath4 scaling for the coflow - level delay tail , significantly outperforming the randomized scheme .",
    "the mwm algorithm has a similar delay tail as the cab policy when @xmath3 is relatively large .",
    "next , we compare the coflow - level delay with the packet - level delay under the randomized policy and the cab policy . in particular ,",
    "we are interested in the _ coflow - level delay dilation factor _ which is the ratio between the average coflow - level delay and the average packet - level delay .",
    "as is illustrated in figure [ fig : dilation ] , the randomized policy has a coflow - level delay dilation factor of @xmath4 ; this observation empirically validates the tightness of the @xmath5 bound shown in theorem [ thm : random - delay ] ( note that the average packet delay achieved by the randomized policy is exactly @xmath280 under our simulation environment ) . by comparison ,",
    "the delay dilation factor for the cab policy remains at a constant level as @xmath1 , which shows the benefits of  coflow - awareness \" .",
    "finally , we numerically study the sensitivity of the coflow - level performance under different scheduling policies as the offered load @xmath10 .",
    "this is shown in figure [ fig : rho ] . clearly , the cab policy is more sensitive to the offered load @xmath258 than the randomized policy . in the heavy - traffic regime ,",
    "the randomized policy even outperforms the cab policy .",
    "indeed , the average coflow - level delay achieved by the randomized policy grows as @xmath282 as @xmath10 ( see remark 1 below theorem [ thm : random - delay ] ) . by comparison ,",
    "the cab policy achieves @xmath283 average coflow - level delay as @xmath10 ( see section [ sec : discussion ] ) . as a result , the price for the better scaling with @xmath3 is the worse dependence on @xmath258 .",
    "( @xmath284 ) .",
    "note that the vertical axis is in the log scale.,width=240 ]",
    "in this paper , we investigate the optimal scaling of coflow - level delay in an @xmath0 input - queued switch as @xmath1 .",
    "we develop lower bounds on the coflow - level delay that can be achieved by any scheduling policy .",
    "in particular , when flow sizes have light - tailed distributions , the lower bound @xmath4 can be attained by the proposed coflow - aware batching ( cab ) policy .",
    "thus , the optimal scaling of coflow - level delay is @xmath4 under light - tailed flow sizes .",
    "future work includes the design of a throughput - optimal scheduling policy that achieves the best scaling of coflow - level delay under a general coflow arrival process and general flow size distributions .",
    "variations of the maximum weight matching ( mwm ) algorithm ( that leverage coflow - level information ) may be a promising direction to investigate since our simulation results show that the mwm algorithm has exceptional coflow - level performance .",
    "however , the coflow - level performance analysis of the mwm algorithm may be very challenging .",
    "another interesting direction is to consider _ correlated _ flow sizes and investigate how the correlation influences the scaling properties . finally , it is also worth studying the case without prior knowledge on coflows such as coflow sizes and release times of flows ( currently we assume that all the flows in a coflow are released simultaneously and coflow sizes are known ) .    1 j. dean and s. ghemawat .",
    "mapreduce : simplified data processing on large clusters . in _ osdi _ , 2004 .",
    "m. zaharia , m. chowdhury , t. das , a. dave , j. ma , m. mccauley , m. j. franklin , s. shenker , i. stoica .",
    "resilient distributed datasets : a fault - tolerant abstraction for in - memory cluster computing . in _",
    "usenix nsdi _ ,",
    "m. chowdhury , m. zaharia , j. ma , m. i. jordan , and i. stoica . managing data transfers in computer clusters with orchestra . in _ proceedings of the acm sigcomm _ , pp .",
    "98109 , 2011 . m. chowdhury and i. stoica .",
    "coflow : a networking abstraction for cluster applications . in _",
    "acm hotnets _ , 2012",
    ". m. chowdhury , y. zhong , and i. stoica .",
    "efficient coflow scheduling with varys . in _",
    "acm sigcomm _ , 2014 .",
    "m. chowdhury and i. stoica .",
    "efficient coflow scheduling without prior knowledge . in _",
    "acm sigcomm _ , 2015 .",
    "y. zhao , k. chen , w. bai , m. yu , c. tian , y. geng , y. zhang , d. li , and s. wang .",
    "rapier : integrating routing and scheduling for coflow - aware data center networks . in _",
    "ieee infocom _ , 2015 .",
    "f. r. dogar , t. karagiannis , h. ballani , and a. rowstron .",
    "decentralized task - aware scheduling fordata center networks . in _",
    "acm sigcomm _ , 2014 .",
    "i. a. rai , g. urvoy - keller , and e. w. biersack .",
    "analysis of las scheduling for job size distributions with high variance . in _",
    "acm sigmetrics performance evaluation review _ ,",
    "1 , pp . 218228 , 2003 .",
    "c. hung , l. golubchik , m. yu . scheduling jobs across geo - distributed datacenters . in _ acm socc _ , 2015 .",
    "s. luo _ et .",
    "al_. minimizing average coflow completion time with decentralized scheduling . in",
    "ieee icc _ , 2015 .",
    "z. qiu , c. stein , and y. zhong . minimizing the total weighted completion time of coflows in datacenter networks . in _",
    "spaa _ , 2015 .",
    "d. shah , n. walton , and y. zhong .",
    "optimal queue - size scaling in switched networks . in _",
    "acm sigmetrics _ , 2012 .",
    "d. shah and m. kopikare .",
    "delay bounds for the approximate maximum weight matching algorithm for input queued switches . in _",
    "ieee infocom _ , 2002 .",
    "s. t. maguluri and and r. srikant .",
    "heavy - traffic behavior of the maxweight algorithm in a switch with uniform traffic . in _",
    "acm sigmetrics performance evaluation review _ ,",
    "72 - 74 , 2015 .",
    "s. t. maguluri , s. k. burle and r. srikant .",
    "optimal heavy - traffic queue length scaling in an incompletely saturated switch . in _",
    "acm sigmetrics _ , 2016",
    ". t. inukai .",
    "an efficient ss / tdma time slot assignment algorithm . in _",
    "transactions on communications _ , vol .",
    "1449 - 1455 , 1979 . b. eisenberg . on the expectation of the maximum of iid geometric random variables .",
    "_ statistics and probability letters _ , vol .",
    "135 - 143 , 2008 .",
    "f. baccelli , a. m. makowski and a. shwartz . the fork - join queue and related systems with synchronization constraints : stochastic ordering and computable bounds . in _ advances in applied probability",
    "629 - 660 , 1989 .",
    ". maximum variance of order statistics . in _ ann .",
    "185 - 193 , 1995 .",
    "m. neely , e. modiano , and y. s. cheng .",
    "logarithmic delay for @xmath285 packet switches under the cross - bar constraint . in _",
    "ieee / acm transactions on networking _ , vol .",
    "15 , no . 3 , 2007 .",
    "e. wolfstetter .",
    "stochastic dominance : theory and applications .",
    "in _ topics in microeconomics : industrial organization , auctions , and incentives ( second edition ) _ , cambridge university press , 2002 .",
    "t. l. lai and h. robbins .",
    "a class of dependent random variables and their maxima . _ z. wahrscheinlichkeitsch_. vol .",
    "89 - 111 , 1978 .",
    "c - s chang , w - j chen , and h - y huang .",
    "birkhoff - von neumann input buffered crossbar switches . in _ proc .",
    "ieee infocom _ , 2000 .",
    "r. srikant and lei ying .",
    "_ communication networks : an optimization , control , and stochastic networks perspective",
    ". _ cambridge university press , 2014 .",
    "n. mckeown , v. anantharam , and j. walrand .",
    "achieving 100% throughput in an input - queued switch . in _",
    "ieee infocom _ , 1996 .",
    "e. leonardi , m. mellia , f. neri , and m. ajmone marsan .",
    "bounds on average delays and queue size averages and variances in input - queued cell - based switches . in _",
    "ieee infocom _ , 2001 .",
    "l. p. devroye .",
    "inequalities for the completion times of stochastic pert networks . in _",
    "mathematics of operations research _ , vol .",
    "441 - 447 , 1979 .",
    "r. nelson and a. n. tantawi .",
    "approximate analysis of fork / join synchronization in parallel queues . in _",
    "ieee transactions on computers _ , vol .",
    "37 , no . 6 , 1988 .",
    "a. a. borovkov .",
    "stochastic processes in queueing theory ( english translation ) .",
    "springer - verlag , new york , 1976 .",
    "p. gao , s. wittevrongel , and h. bruneel .",
    "discrete - time multiserver queues with geometric service times . in _ computers & operations research _ , vol .",
    "81 - 99 , 2004 .",
    "j. d. esary , f. proschan , and d. w. walkup .",
    "association of random variables , with applications . in _ ann .",
    "5 , pp . 1466 - 1474 , 1967 . robert g. gallager . _",
    "stochastic processes : theory for applications_. cambridge university press , 2014 .",
    "torben meisling .",
    "discrete - time queuing theory . in _",
    "operations research _ , vol . 6 , no . 1 , pp .",
    "96 - 105 , 1957 .",
    "[ lm : asy - order ] let @xmath286 be i.i.d . @xmath287-valued random variables whose common cdf @xmath288 satisfies the following conditions : @xmath289 and @xmath290 under these conditions , the asymptotics @xmath88 = m_n ( 1+o(1))\\ ] ] holds true as @xmath291 , where @xmath292        suppose the cdf of @xmath36 is @xmath296 , and let @xmath297=\\mu_i$ ] .",
    "also let @xmath298 be the moment generating function of @xmath36 .",
    "since @xmath36 is light - tailed , there exists some @xmath299 such that @xmath300 for all @xmath301 . by chernoff bound , for any @xmath301 and @xmath302 @xmath303 where",
    "@xmath304 it is clear that @xmath305 and @xmath306 for any @xmath302 . due to the continuity of @xmath307 around @xmath252 ,",
    "there exists a sufficiently small @xmath308 such that @xmath309 .",
    "define @xmath310 .",
    "we have @xmath311 let @xmath312 .",
    "then it follows that for all @xmath37 $ ] @xmath313 consider a sequence of i.i.d .",
    "random variables @xmath314 with shifted exponential distribution @xmath315 for @xmath316 , where @xmath317 .",
    "it is clear that @xmath36 is stochastically dominated by @xmath318 for all @xmath37 $ ] . by ( p2 ) of stochastic dominance ( see section [ sec : math ] ) , we have @xmath295\\le \\mathbb{e}[\\max_i y'_i]$ ] .",
    "thus , it suffices to show @xmath319=o(\\log n)$ ] as @xmath1 .",
    "note that @xmath320 satisfies the conditions in lemma [ lm : asy - order ] .",
    "hence , we have @xmath319=m'_n(1+o(1))$ ] where @xmath321 since @xmath322 , we can conclude that @xmath319=o(\\frac{\\log n}{\\gamma})$ ] as @xmath1 .",
    "now it remains to show that @xmath323 as @xmath1 .",
    "taking the taylor expansion of @xmath307 around @xmath252 , we have @xmath324 where @xmath325 is the @xmath62-th cumulant - th cumulant of @xmath36 is the @xmath62-th order derivative for the logarithm of the mgf of @xmath36 , evaluated at zero , i.e. , @xmath326 , where @xmath327 . ]",
    "of @xmath36 . note that @xmath325 is a degree-@xmath62 polynomial in the first @xmath62 moments of @xmath36 . since @xmath293=o(1)$ ] for all @xmath32",
    ", we have @xmath328 as @xmath1 . as a result , the second term in ( i.e. , @xmath329 ) is also independent of @xmath3 .",
    "hence , there exists some @xmath330 independent of @xmath3 such that @xmath331 and @xmath332 is independent of @xmath3 , which implies that @xmath333 .",
    "+ * takeaway . * note that lemma [ lm : asy - order - light ] only shows the scaling of @xmath295 $ ] in the case where all the moments of @xmath36 are constants as compared to @xmath3 . sometimes , we are also interested in the case where @xmath297=o(f(n))$ ] and @xmath334 as @xmath1 . for simplicity ,",
    "we assume that @xmath36 s are i.i.d . random variables .",
    "[ coro : taylor - scaling ] suppose @xmath286 are i.i.d .",
    "light - tailed random variables with @xmath297=o(f(n))$ ] where @xmath334 as @xmath1 . if @xmath293=o(f^n(n))$ ] for all @xmath32 , then @xmath295=o(f(n)\\log n)$ ] as @xmath1 .      with lemma [ lm : asy - order - light ]",
    ", we can easily prove the theorem .",
    "it is clear that @xmath74&\\le \\mathbb{e } [ \\max_i \\sum_{j } x_{ij}]+ \\mathbb{e } [ \\max_j \\sum_{i } x_{ij } ] .",
    "\\end{split}\\ ] ] by our assumption , @xmath336 is a sequence of independent light - tailed random variables with @xmath63=o(1)$ ] as @xmath1 for all @xmath32 . by lemma [ lm : asy - order - light ]",
    ", we have @xmath337=o(\\log n ) .",
    "$ ] similarly , we have @xmath90=o(\\log n)$ ] . as a result , we can conclude that @xmath72=o(\\log n)$ ] .    to show the tightness",
    ", we consider a scenario where @xmath70 is a diagonal matrix : @xmath75 with probability 1 for @xmath76 and @xmath77 has a geometric distribution with mean @xmath142 for all @xmath37 $ ] . in this case , we have @xmath72= \\mathbb{e}[\\max_i x_{ii}]$ ] .",
    "it was shown in @xcite that the expectation of the maximum of @xmath3 i.i.d .",
    "geometric random variables is @xmath338 as @xmath1 . as a result , @xmath72=\\theta(\\log n)$ ] in this scenario .",
    "we only prove the result for the periodic scheduling policy ; the randomized policy can be analyzed in exactly the same way .",
    "we assume the system is initially empty .",
    "coflow arrivals are indexed by @xmath339 .",
    "suppose the traffic matrix of coflow @xmath116 is @xmath340 , and denote by @xmath341 the inter - arrival time between coflow @xmath116 and coflow @xmath342 .",
    "let @xmath343 be the queuing delay experienced by coflow @xmath116 in queue @xmath15 , and denote by @xmath344 the processing time for the batch of coflow @xmath116 in queue @xmath15 .",
    "under periodic scheduling , each queue gets served every @xmath3 time slots . as a result",
    ", we have @xmath345 where @xmath346 and @xmath347 is the processing time of the first packet of coflow @xmath116 in queue @xmath15 .",
    "it is clear that @xmath348 with probability 1 under periodic scheduling . as a result",
    ", we have @xmath349 with probability 1 . obviously , the delay performance of the original system ( with the batch processing time @xmath344 ) is upper - bounded by the delay performance under a system where the batch processing time is @xmath350 .",
    "the latter system is referred to as  system 2 \" , and denote by @xmath351 the queuing delay experienced by coflow @xmath116 in queue @xmath15 in system 2 .",
    "now we show that @xmath351 s are _ associated random variables _ ( see section [ sec : math ] for the definition ) .",
    "first , some simple associated random variables are identified in our context .",
    "given @xmath355 , it is clear that @xmath356 s are independent and thus associated ( by ( p1 ) of associated random variables ) . as a result , by the definition of associated random variables , for any non - decreasing functions @xmath17 and @xmath18 @xmath357 as a result",
    ", it follows that @xmath358\\\\ = & \\int_{t=0}^{\\infty } \\text{cov}\\big(f(\\mathbf{v}^{(k)}),g(\\mathbf{v}^{(k)})\\big|t^{(k)}=t\\big ) f_{t^{(k)}}(t)dt \\ge 0 , \\end{split}\\ ] ] where @xmath359 is the pdf for @xmath341 .",
    "therefore , random variables @xmath354 $ ] are associated , and this conclusion holds for all @xmath353 .            * inductive step .",
    "* for some @xmath364 , assume that random variables @xmath360 $ ] are associated .",
    "now we prove that random variables @xmath365 $ ] are also associated .",
    "it is clear that @xmath366 we identify three sets of associated random variables :    * random variables @xmath367 $ ] are associated due to lemma [ lm : simple - associate ] ; * the union of @xmath368\\}$ ] and @xmath369\\}$ ] is a set of associated random variables since they are two sets of independent associated random variables ( by ( p3 ) of associated random variables ) ; * random variables @xmath365 $ ] are associated since they are non - decreasing functions of the set of associated random variables identified in ( 2 ) ( by ( p2 ) of associated random variables ) .",
    "since the above lemma holds for all @xmath353 , we drop the superscript @xmath116 for convenience .",
    "define @xmath370 , i.e. , the total time that coflow @xmath116 needs to wait for until its batch in queue @xmath15 is cleared .",
    "note that the @xmath371 term is due to the fact that if a coflow contains no packets in queue @xmath15 , it does not need to experience the queuing delay @xmath372 . by lemma [ lm : waiting - associate ] , @xmath372 s are associated ; @xmath16 s are also associated due to the independence ( p1 ) ; the union of @xmath372 s and @xmath16 s is also a set of associated random variables due to the independence of @xmath16 s and @xmath372 s ( p3 ) .",
    "therefore , we can conclude that @xmath373 s are associated since they are non - decreasing functions of @xmath372 s and @xmath16 s ( p2 ) .",
    "note that @xmath374 is the coflow - level delay experienced by a coflow in system 2 . by ( p4 ) of associated random variables , we have @xmath375\\le \\mathbb{e}[\\max_{ij}\\tilde{z}'_{ij}]$ ] where @xmath376 s are _ independent _ random variables identically distributed as @xmath373 s . in order to evaluate the value of @xmath377 $ ]",
    ", we identify some important properties of the distribution of @xmath373 .",
    "first , we claim that @xmath373 s are light - tailed .",
    "indeed , since @xmath16 is light - tailed , the service time @xmath378 is also light - tailed . according to @xcite ( theorem 11 , p. 129 ) ,",
    "if the service time is light - tailed , the tail of the queuing time in an m / g/1 queue decreases exponentially .",
    "hence , @xmath372 s are light - tailed , which implies that @xmath373 s also have light - tailed distributions .",
    "next , we evaluate the value of @xmath379 $ ] and higher moments of @xmath373 .",
    "it is clear that queue @xmath15 is a slotted m / g/1 queue with arrival rate @xmath59 and service time @xmath380 .",
    "note that @xmath381 = \\beta$ ] and @xmath382=(n\\sigma^2+\\beta^2)$ ] . according to the pollaczek - khinchin formula for slotted m / g/1 queues",
    ", we have @xmath383 & = \\frac{\\lambda \\mathbb{e}[\\tilde{u}_{ij}^2]}{2(1-\\lambda\\mathbb{e}[\\tilde{u}_{ij}])}+\\frac{1}{2}\\\\ & = \\frac{\\lambda ( n\\sigma^2+\\beta^2)}{2(1-\\rho)}+\\frac{1}{2}. \\end{split}\\ ] ] as a result , we have @xmath384 & = \\mathbb{p}(x_{ij}\\ge 1)\\mathbb{e}[\\tilde{w}_{ij}]+\\mathbb{e}[\\tilde{u}_{ij}]\\\\ & \\le \\frac{\\beta}{n}\\big[\\frac{\\lambda ( n\\sigma^2+\\beta^2)}{2(1-\\rho)}+\\frac{1}{2}\\big]+\\beta\\\\ & = o(1 ) , \\end{split}\\ ] ] where the inequality utilizes the markov inequality , i.e. , @xmath385=\\frac{\\beta}{n}$ ] .",
    "furthermore , noting that @xmath386=n^n\\mathbb{e}[x^{n}_{ij}]=o(n^{n-1})$ ] for all @xmath32 ( by our assumptions on @xmath16 s ) , we can similarly obtain @xmath387=o(n^{n-1})$ ] according to the moment bounds in @xcite .",
    "recall that @xmath376 s are independent random variables identically distributed as @xmath373 s .",
    "define @xmath388 for all @xmath37 $ ] .",
    "it follows from the above analysis that @xmath389 are a sequence of i.i.d .",
    "light - tailed random variables with @xmath390\\le \\sum_j\\mathbb{e}[\\tilde{z}'_{ij}]=o(n)$ ] and @xmath391\\le o\\big(\\sum_j \\mathbb{e}[(\\tilde{z}'_{ij})^n]\\big)=o(n^n)$ ] for all @xmath32 . by corollary [ coro : taylor - scaling ]",
    "( see appendix [ appendix : ct - light ] ) , we have @xmath392=o(n\\log n)$ ] as @xmath1 .",
    "then it follows that @xmath393\\le \\mathbb{e}[\\max_{i , j}\\tilde{z}'_{ij}]=\\mathbb{e}[\\max_i \\tilde{z}'_{i } ] = o(n\\log n).\\ ] ] therefore , the average coflow - level delay achieved by the periodic scheduling policy is @xmath5 .",
    "[ lm : non - conforming - batch ] let @xmath394 be the traffic of an arbitrary coflow in an * overflow * frame",
    ". then @xmath395 is stochastically dominated by @xmath234 for all @xmath37 $ ] , where @xmath235 is the traffic matrix of an arbitrary coflow in an * arbitrary * frame .",
    "let @xmath175 be the total traffic that arrives in an arbitrary frame , and denote by @xmath55 the traffic associated with an arbitrary coflow in this frame .",
    "clearly , an overflow occurs in this frame if and only if @xmath177 . as a result",
    ", the flow size distribution for an arbitrary coflow in this overflow frame is @xmath396\\triangleq\\mathbb{p}[\\tilde{x}_{ij}\\ge m],\\ ] ] where @xmath235 is the traffic of an arbitrary coflow in an arbitrary frame .    in order to show that @xmath397 is stochastically dominated by @xmath234 for all @xmath37 $ ] , it suffices to show that for all @xmath37 $ ] @xmath398\\le \\mathbb{p}[\\sum_j x_{ij}+t\\ge m].\\ ] ] to show this inequality , we first prove that for all @xmath37 $ ] @xmath399 \\le \\mathbb{p}[\\sum_j x_{ij}\\ge m|\\sum_j x_{ij}\\ge t].\\ ] ] if @xmath400 , we note that the right - hand side of equals to 1 , so inequality naturally holds .",
    "if @xmath401 , we notice that @xmath402 which implies that @xmath403 = \\mathbb{p}[\\sum_j x_{ij}\\ge m].\\ ] ] similarly , we can show that when @xmath401 @xmath404=\\mathbb{p}[\\sum_j x_{ij}\\ge m].\\ ] ] comparing with , we have when @xmath401 @xmath405=\\mathbb{p}[\\sum_j x_{ij}\\ge m , \\sum_j x_{ij}\\ge t].\\ ] ] now we rewrite @xmath406 $ ] according to the rule of conditional probability : @xmath407&=\\frac{\\mathbb{p}[\\sum_j x_{ij}\\ge m,\\tau(\\mathbf{l})\\ge t]}{\\mathbb{p}[\\tau(\\mathbf{l})\\ge t]}\\\\ & \\le\\frac{\\mathbb{p}[\\sum_j x_{ij}\\ge m , \\sum_j x_{ij}\\ge t]}{\\mathbb{p}[\\sum_j x_{ij}\\ge t]}\\\\ & = \\mathbb{p}[\\sum_j x_{ij}\\ge m|\\sum_j x_{ij}\\ge t ] , \\end{split}\\ ] ] where the inequality is due to and the fact that @xmath408\\ge \\mathbb{p}[\\sum_j x_{ij}\\ge t]$ ] .",
    "this completes the proof to .",
    "since @xmath409 is light - tailed , we know from @xcite that as @xmath410 , @xmath411\\le \\mathbb{p}[\\sum_j x_{ij } \\ge m - t].\\ ] ] taking into , we obtain @xmath412\\le \\mathbb{p}[\\sum_j x_{ij } \\ge m - t].\\ ] ] note that the left - hand side of equals to @xmath413 $ ] by our definition of @xmath414 , and the right - hand side of can be rewritten as @xmath415 $ ] . as a result , we have for all @xmath37 $ ] @xmath416\\le \\mathbb{p}[\\sum_j x_{ij}+t\\ge m],\\ ] ] i.e. , @xmath395 is stochastically dominated by @xmath234 ."
  ],
  "abstract_text": [
    "<S> a coflow is a collection of parallel flows belonging to the same job . </S>",
    "<S> it has the all - or - nothing property : a coflow is not complete until the completion of all its constituent flows . in this paper , we focus on optimizing _ coflow - level delay _ , i.e. , the time to complete all the flows in a coflow , in the context of an @xmath0 input - queued switch . </S>",
    "<S> in particular , we develop a throughput - optimal scheduling policy that achieves the best scaling of coflow - level delay as @xmath1 . </S>",
    "<S> we first derive lower bounds on the coflow - level delay that can be achieved by any scheduling policy . </S>",
    "<S> it is observed that these lower bounds critically depend on the variability of flow sizes . </S>",
    "<S> then we analyze the coflow - level performance of some existing coflow - agnostic scheduling policies and show that none of them achieves provably optimal performance with respect to coflow - level delay . finally , we propose the coflow - aware batching ( cab ) policy which achieves the optimal scaling of coflow - level delay under some mild assumptions .    at ( @xmath2 ) </S>",
    "<S> technical report ; </S>"
  ]
}
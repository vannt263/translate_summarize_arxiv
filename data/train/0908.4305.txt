{
  "article_text": [
    "` groupoidification ' is an attempt to expose the combinatorial underpinnings of linear algebra  the hard bones of set theory underlying the flexibility of the continuum .",
    "one of the main lessons of modern algebra is to avoid choosing bases for vector spaces until you need them . as hermann weyl wrote , ",
    "the introduction of a coordinate system to geometry is an act of violence \" . but",
    "vector spaces often come equipped with a natural basis  and when this happens , there is no harm in taking advantage of it .",
    "the most obvious example is when our vector space has been defined to consist of formal linear combinations of the elements of some set .",
    "then this set is our basis .",
    "but surprisingly often , the elements of this set are _ isomorphism classes of objects in some groupoid_. this is when groupoidification can be useful .",
    "it lets us work directly with the groupoid , using tools analogous to those of linear algebra , without bringing in the real numbers ( or any other ground field ) .",
    "for example , let @xmath3 be the groupoid of finite sets and bijections .",
    "an isomorphism class of finite sets is just a natural number , so the set of isomorphism classes of objects in @xmath3 can be identified with @xmath4 . indeed , this is why natural numbers were invented in the first place : to count finite sets . the real vector space with @xmath4 as basis is usually identified with the polynomial algebra @xmath5 $ ] , since that has basis @xmath6 alternatively",
    ", we can work with _",
    "infinite _ formal linear combinations of natural numbers , which form the algebra of formal power series , @xmath7 $ ] .",
    "so , the vector space of formal power series is a kind of stand - in for the groupoid of finite sets .",
    "indeed , formal power series have long been used as ` generating functions ' in combinatorics @xcite .",
    "given any combinatorial structure we can put on finite sets , its generating function is the formal power series whose @xmath8th coefficient says how many ways we can put this structure on an @xmath8-element set .",
    "andr joyal formalized the idea of ` a structure we can put on finite sets ' in terms of _ espces de structures _ , or ` structure types ' @xcite .",
    "later his work was generalized to ` stuff types ' @xcite , which are a key example of groupoidification .",
    "heuristically , a stuff type is a way of equipping finite sets with a specific type of extra stuff  for example a 2-coloring , or a linear ordering , or an additional finite set .",
    "stuff types have generating functions , which are formal power series .",
    "combinatorially interesting operations on stuff types correspond to interesting operations on their generating functions : addition , multiplication , differentiation , and so on .",
    "joyal s great idea amounts to this : _ work directly with stuff types as much as possible , and put off taking their generating functions .",
    "_ as we shall see , this is an example of groupoidification .    to see how this works",
    ", we should be more precise . a * stuff type * is a groupoid over the groupoid of finite sets : that is , a groupoid @xmath9 equipped with a functor @xmath10 .",
    "the reason for the funny name is that we can think of @xmath9 as a groupoid of finite sets ` equipped with extra stuff ' .",
    "the functor @xmath11 is then the ` forgetful functor ' that forgets this extra stuff and gives the underlying set .",
    "the generating function of a stuff type @xmath10 is the formal power series @xmath12 here @xmath13 is the ` full inverse image ' of any @xmath8-element set , say @xmath14 .",
    "we define this term later , but the idea is straightforward : @xmath13 is the groupoid of @xmath8-element sets equipped with the given type of stuff .",
    "the @xmath8th coefficient of the generating function measures the size of this groupoid .",
    "here we need the concept of _ groupoid cardinality_. it seems this concept first appeared in algebraic geometry @xcite .",
    "we rediscovered it by pondering the meaning of division @xcite .",
    "addition of natural numbers comes from disjoint union of finite sets , since @xmath15 multiplication comes from cartesian product : @xmath16 but what about division ?",
    "if a group @xmath17 acts on a set @xmath18 , we can ` divide ' the set by the group and form the quotient @xmath19 .",
    "if @xmath18 and @xmath17 are finite and @xmath17 acts freely on @xmath18 , @xmath19 really deserves the name ` quotient ' , since then @xmath20 indeed , this fact captures some of our naive intuitions about division .",
    "for example , why is @xmath21 ?",
    "we can take a 6-element set @xmath18 with a free action of the group @xmath22 and construct the set of orbits @xmath19 :    = 1.0 in    since we are ` folding the 6-element set in half ' , we get @xmath23 .    the trouble starts when the action of @xmath17 on @xmath18 fails to be free . let s try the same trick starting with a 5-element set :    = 1.0 in    we do nt obtain a set with @xmath24 elements !",
    "the reason is that the point in the middle gets mapped to itself . to get the desired cardinality @xmath25",
    ", we would need a way to count this point as ` folded in half ' .    to do this",
    ", we should first replace the ordinary quotient @xmath19 by the ` action groupoid ' or * weak quotient * @xmath26 .",
    "this is the groupoid where objects are elements of @xmath18 , and a morphism from @xmath27 to @xmath28 is an element @xmath29 with @xmath30 .",
    "composition of morphisms works in the obvious way .",
    "next , we should define the ` cardinality ' of a groupoid as follows . for each isomorphism class of objects , pick a representative @xmath31 and compute the reciprocal of the number of automorphisms of this object ; then sum the result over isomorphism classes . in other words , define the * cardinality * of a groupoid @xmath32 to be @xmath33 } \\frac{1}{|{{\\rm aut}}(x)| } \\;.\\ ] ] with these definitions , our problematic example gives a groupoid @xmath26 with cardinality @xmath24 , since the point in the middle of the picture gets counted as ` half a point ' .",
    "in fact , @xmath34 whenever @xmath17 is a finite group acting on a finite set @xmath18 .",
    "the concept of groupoid cardinality gives an elegant definition of the generating function of a stuff type  equation [ eq : generating_function]which matches the usual ` exponential generating function ' from combinatorics . for the details of how this works , see example [ generating_function ] .",
    "even better , we can vastly generalize the notion of generating function , by replacing @xmath3 with an arbitrary groupoid .",
    "for any groupoid @xmath32 we get a vector space : namely @xmath35 , the space of functions @xmath36 , where @xmath37 is the set of isomorphism classes of objects in @xmath32 .",
    "any sufficiently nice groupoid over @xmath32 gives a vector in this vector space .",
    "the question then arises : what about linear operators ?",
    "here it is good to take a lesson from heisenberg s matrix mechanics . in his early work on quantum mechanics ,",
    "heisenberg did not know about matrices .",
    "he reinvented them based on this idea : a matrix @xmath18 can describe a quantum process by letting the matrix entry @xmath38 stand for the ` amplitude ' for a system to undergo a transition from its @xmath39th state to its @xmath40th state .",
    "the meaning of complex amplitudes was somewhat mysterious  and indeed it remains so , much as we have become accustomed to it .",
    "however , the mystery evaporates if we have a matrix whose entries are natural numbers",
    ". then the matrix entry @xmath41 simply counts the _ number of ways _ for the system to undergo a transition from its @xmath39th state to its @xmath40th state .",
    "indeed , let @xmath32 be a set whose elements are possible ` initial states ' for some system , and let @xmath42 be a set whose elements are possible ` final states ' .",
    "suppose @xmath18 is a set equipped with maps to @xmath32 and @xmath42 : @xmath43_q\\ar[dr]^p & \\\\   y & & x \\\\ } \\ ] ] mathematically , we call this setup a span of sets",
    ". physically , we can think of @xmath18 as a set of possible ` events ' .",
    "points in @xmath18 sitting over @xmath44 and @xmath45 form a subset @xmath46 we can think of this as the _ set of ways _ for the system to undergo a transition from its @xmath39th state to its @xmath40th state .",
    "indeed , we can picture @xmath18 more vividly as a matrix of sets : +   + @xmath47{matrix.eps }   \\put(-138,88){$q$ }   \\put(-52,88){$p$ }   \\put(-8,98){$x$ }   \\put(-180,98){$y$ }   \\put(-80,170){$s$ } \\end{picture}\\ ] ] if all the sets @xmath48 are finite , we get a matrix of natural numbers @xmath49 .    of course , matrices of natural numbers only allow us to do a limited portion of linear algebra .",
    "we can go further if we consider , not spans of sets , but _ spans of groupoids_. we can picture one of these roughly as follows :    @xmath50{grpdmatrix.eps }   \\put(-138,88){$q$ }   \\put(-52,88){$p$ }   \\put(-8,98){$x$ }   \\put(-180,98){$y$ }   \\put(-80,170){$s$ } \\end{picture}\\ ] ] if a span of groupoids is sufficiently nice  our technical term will be ` tame'we can convert it into a linear operator from @xmath51 to @xmath52 .",
    "viewed as a matrix , this operator will have nonnegative real matrix entries .",
    "so , we have not succeeded in ` groupoidifying ' full - fledged quantum mechanics , where the matrices can be complex .",
    "still , we have made some progress .    as a sign of this",
    ", it turns out that any groupoid @xmath32 gives not just a vector space @xmath51 , but a real hilbert space @xmath53 . if @xmath54 , the complexification of this hilbert space is the hilbert space of the quantum harmonic oscillator .",
    "the quantum harmonic oscillator is the simplest system where we can see the usual tools of quantum field theory at work : for example , feynman diagrams .",
    "it turns out that large portions of the theory of feynman diagrams can be done with spans of groupoids replacing operators @xcite .",
    "the combinatorics of these diagrams then becomes vivid , stripped bare of the trappings of analysis .",
    "we sketch how this works in section [ feynman ] .",
    "a more detailed treatment can be found in the work of jeffrey morton @xcite .    to get complex numbers into the game , morton generalizes groupoids to ` groupoids over @xmath55 ' :",
    "that is , groupoids @xmath32 equipped with functors @xmath56 , where @xmath55 is the groupoid with unit complex numbers as objects and only identity morphisms .",
    "the cardinality of a groupoid over @xmath55 can be complex .",
    "other generalizations of groupoid cardinality are also interesting . for example , leinster has generalized it to categories @xcite . the cardinality of a category can be negative !",
    "more recently , weinstein has generalized the concept of cardinality to lie groupoids @xcite . getting a useful generalization of groupoids",
    "for which the cardinality is naturally complex , without putting in the complex numbers ` by hand ' , remains an elusive goal .",
    "however , the work of fiore and leinster suggests that it is possible @xcite .    in the last few years",
    "james dolan , todd trimble and the authors have applied groupoidification to better understand the process of ` @xmath0-deformation ' @xcite .",
    "many important algebraic structures can be systematically deformed in a way that depends on a parameter @xmath0 , with @xmath57 being the ` default ' case of no deformation at all .",
    "a beautiful story has begun to emerge in which @xmath0-deformation arises naturally from replacing the groupoid of pointed finite sets by the groupoid of finite - dimensional vector spaces over the field with @xmath0 elements , @xmath58 , where @xmath0 is a prime power .",
    "we hope to write up this material and develop it further in the years to come .",
    "this paper is just a first installment .",
    "for example , any dynkin diagram with @xmath8 dots gives rise to a finite group of linear transformations of @xmath59 which is generated by reflections , one for each dot of the dynkin diagram , which satisfy some relations , one for each edge .",
    "these groups are called ` coxeter groups ' @xcite .",
    "the simplest example is the symmetry group of the regular @xmath8-simplex , which arises from a dynkin diagram with @xmath8 dots in a row , like this : @xmath60 & \\bullet \\ar@{-}[r ] & \\bullet}\\ ] ] this group is generated by @xmath8 reflections @xmath61 , one for each dot @xmath62 .",
    "these generators obey the yang ",
    "baxter equation : @xmath63 when the dots @xmath62 and @xmath64 are connected by an edge , and they commute otherwise .",
    "indeed the symmetry group of the regular @xmath8-simplex is just the symmetric group @xmath65 , which acts as permutations of the vertices , and the generator @xmath61 is the transposition that switches the @xmath62th and @xmath66st vertices .",
    "coxeter groups are a rich and fascinating subject , and part of their charm comes from the fact that the group algebra of any coxeter group admits a @xmath0-deformation , called a ` hecke algebra ' , which has many of the properties of the original group ( as expressed through its group algebra ) .",
    "the hecke algebra again has one generator for each dot of the dynkin diagram , now called @xmath67 .",
    "these generators obey the same relation for each edge that we had in the original coxeter group .",
    "the only difference is that while the coxeter group generators are reflections , and thus satisfy @xmath68 , the hecke algebra generators obey a @xmath0-deformed version of this equation : @xmath69    where do hecke algebras come from ?",
    "they arise in a number of ways , but one enlightening description involves the theory of ` buildings ' , where each dynkin diagram corresponds to a type of geometry @xcite .",
    "for example , the dynkin diagram shown above ( with @xmath8 dots ) corresponds to the geometry of projective @xmath8-space .",
    "projective @xmath8-space makes sense over any field , and when @xmath0 is a prime power , the hecke algebra arises in the study of @xmath8-dimensional projective space over the field @xmath58 .",
    "we shall explain this in detail in the case of the projective plane .",
    "but the @xmath8-simplex can be thought of as a ` @xmath70 limit ' of an @xmath8-dimensional projective space over @xmath58 .",
    "the idea is that the vertices , edges , triangles , and so on of the @xmath8-simplex play the role of points , lines , planes , and so on in a degenerate sort of projective space . in this limiting case",
    ", the hecke algebra reduces to the group algebra of the symmetric group . as it turns out ,",
    "this fact can be understood more clearly when we _ groupoidify _ the hecke algebra .",
    "we shall sketch the idea in this paper , and give more details in the next paper of this series . in the meantime , see @xcite .",
    "any dynkin diagram also gives a geometry over the field @xmath71 , and the symmetries of this geometry form a simple lie group .",
    "the symmetry transformations close to the identity are described by the lie algebra @xmath72 of this group  or equally well , by the universal enveloping algebra @xmath73 , which is a hopf algebra .",
    "this universal enveloping algebra admits a @xmath0-deformation , a hopf algebra @xmath74 known as a ` quantum group ' . there has been a lot of work attempting to categorify quantum groups , from the early ideas of crane and frenkel @xcite , to the work of khovanov , lauda and rouqier @xcite , and beyond .",
    "here we sketch how to groupoidify , not the whole quantum group , but only its ` positive part ' @xmath75 .",
    "when @xmath57 , this positive part is just the universal enveloping algebra of a chosen maximal nilpotent subalgebra of @xmath72 .",
    "the advantage of restricting attention to the positive part is that @xmath75 has a basis in which the formula for the product involves only _ nonnegative _ real numbers  and any such number is the cardinality of some groupoid .    the strategy for groupoidifying @xmath75 is implicit in ringel s work on hall algebras @xcite .",
    "suppose we have a ` simply - laced ' dynkin diagram , meaning one where two generators of the coxeter group obey the yang - baxter equation whenever the corresponding dots are connected by an edge .",
    "if we pick a direction for each edge of this dynkin diagram , we obtain a directed graph .",
    "this in turn freely generates a category , say @xmath76 .",
    "the objects in this category are the dots of the dynkin diagram , while the morphisms are paths built from directed edges .    for any prime power @xmath0",
    ", there is a category @xmath77 whose objects are ` representations ' of @xmath76 : that is , functors @xmath78 where @xmath79 is the category of finite - dimensional vector spaces over @xmath58 .",
    "the morphisms in @xmath77 are natural transformations .",
    "thanks to the work of ringel , one can see that the underlying groupoid of @xmath77which has only natural _ isomorphisms _ as morphisms  groupoidifies the vector space @xmath75 .",
    "even better , we can groupoidify the product in @xmath75 .",
    "the same sort of construction with the category of pointed finite sets replacing @xmath79 lets us handle the @xmath57 case @xcite .",
    "so yet again , @xmath0-deformation is related to the passage from pointed finite sets to finite - dimensional vector spaces over finite fields .",
    "the plan of the paper is as follows . in section [ degroupoidification ] , we present some basic facts about ` degroupoidification ' .",
    "we describe a process that associates to any groupoid @xmath32 the vector space @xmath80 consisting of real - valued functions on the set of isomorphism classes of objects of @xmath32 , and associates to any ` tame ' span of groupoids a linear operator . in section [ homology ] , we describe a slightly different process , which associates to @xmath32 the vector space @xmath81 $ ] consisting of formal linear combinations of isomorphism classes of objects of @xmath32",
    ". then we turn to some applications .",
    "section [ feynman ] describes how to groupoidify the theory of feynman diagrams , section [ hecke ] describes how to groupoidify the theory of hecke algebras , and section [ hall ] describes how to groupoidify hall algebras . in section",
    "[ processes ] we prove that degroupoidifying a tame span gives a well - defined linear operator .",
    "we also give an explicit criterion for when a span of groupoids is tame , and an explicit formula for the operator coming from a tame span .",
    "section [ properties ] proves many other results stated earlier in the paper .",
    "appendix [ appendix ] provides some basic definitions and useful lemmas regarding groupoids and spans of groupoids .",
    "the goal is to make it easy for readers to try their own hand at groupoidification .",
    "in this section we describe a systematic process for turning groupoids into vector spaces and tame spans into linear operators .",
    "this process , ` degroupoidification ' , is in fact a kind of functor . `",
    "groupoidification ' is the attempt to _ undo _ this functor . to ` groupoidify ' a piece of linear algebra means to take some structure built from vector spaces and linear operators and try to find interesting groupoids and spans that degroupoidify to give this structure .",
    "so , to understand groupoidification , we need to master degroupoidification .",
    "we begin by describing how to turn a groupoid into a vector space . in what follows",
    ", all our groupoids will be * essentially small*. this means that they have a _ set _ of isomorphism classes of objects , not a proper class .",
    "we also assume our groupoids are * locally finite * : given any pair of objects , the set of morphisms from one object to the other is finite .    given a groupoid @xmath32 ,",
    "let @xmath82 be the set of isomorphism classes of objects of @xmath32 .",
    "[ vectorspace ] given a groupoid @xmath32 , let the * degroupoidification * of @xmath32 be the vector space @xmath83    a nice example is the groupoid of finite sets and bijections :    [ power_series ]    a sufficiently nice groupoid over a groupoid @xmath32 will give a vector in @xmath80 . to construct this",
    ", we use the concept of groupoid cardinality :    the * cardinality * of a groupoid @xmath32 is @xmath84\\in { \\underline{x } } } \\frac{1}{|{{\\rm aut}}(x)|}\\ ] ] where @xmath85 is the cardinality of the automorphism group of an object @xmath31 in @xmath32 .",
    "if this sum diverges , we say @xmath86 .",
    "the cardinality of a groupoid @xmath32 is a well - defined nonnegative rational number whenever @xmath82 and all the automorphism groups of objects in @xmath32 are finite .",
    "more generally , we say :    a groupoid @xmath32 is * tame * if it is essentially small , locally finite , and @xmath87 .",
    "we show in lemma [ equivgrpd ] that given equivalent groupoids @xmath32 and @xmath42 , @xmath88 . we give a useful alternative formula for groupoid cardinality in lemma [ altcard ] .",
    "the reason we use @xmath89 rather than @xmath90 as our ground field is that there are interesting groupoids whose cardinalities are irrational numbers .",
    "the following example is fundamental :    with the concept of groupoid cardinality in hand , we now describe how to obtain a vector in @xmath80 from a sufficiently nice groupoid over @xmath32 .    given a groupoid @xmath32 ,",
    "a * groupoid over @xmath32 * is a groupoid @xmath9 equipped with a functor @xmath91 .",
    "given a groupoid over @xmath32 , say @xmath91 , and an object @xmath92 , we define the * full inverse image * of @xmath31 , denoted @xmath93 , to be the groupoid where :    * an object is an object @xmath94 such that @xmath95 ; * a morphism @xmath96 is any morphism in @xmath9 from @xmath97 to @xmath98 .",
    "a groupoid over @xmath32 , say @xmath91 , is * tame * if the groupoid @xmath93 is tame for all @xmath92 .",
    "we sometimes loosely say that @xmath9 is a tame groupoid over @xmath32 .",
    "when we do this , we are referring to a functor @xmath91 that is tame in the above sense .",
    "we do not mean that @xmath9 is tame as a groupoid .",
    "[ degroupoidification_of_vectors ] given a tame groupoid over @xmath32 , say @xmath99 , there is a vector @xmath100 defined by : @xmath101 ) = |v^{-1}(x)|.\\ ] ]    as discussed in section [ intro ] , the theory of generating functions gives many examples of this construction . here",
    "is one :    [ generating_function ]    both addition and scalar multiplication of vectors have groupoidified analogues .",
    "we can add two groupoids @xmath102 , @xmath9 over @xmath32 by taking their coproduct , i.e. , the disjoint union of @xmath102 and @xmath9 with the obvious map to @xmath32 : @xmath103 \\\\ x } \\ ] ] we then have :    given tame groupoids @xmath102 and @xmath9 over @xmath32 , @xmath104    this will appear later as part of lemma [ addvectors ] , which also considers infinite sums .    we can also multiply a groupoid over @xmath32 by a ` scalar'that is , a fixed groupoid . given a groupoid over @xmath32 , say @xmath105 , and a groupoid @xmath106 , the cartesian product @xmath107 becomes a groupoid over @xmath32 as follows : @xmath108^{v\\pi_2}\\\\ x\\\\ } \\ ] ] where @xmath109 is projection onto the second factor .",
    "we then have :    given a groupoid @xmath106 and a groupoid @xmath9 over @xmath32 , the groupoid @xmath110 over @xmath32 satisfies @xmath111    this is proved as proposition [ scalarmult1 ] .",
    "we have seen how degroupoidification turns a groupoid @xmath32 into a vector space @xmath80 .",
    "degroupoidification also turns any sufficiently nice span of groupoids into a linear operator .",
    "given groupoids @xmath32 and @xmath42 , a * span * from @xmath32 to @xmath42 is a diagram @xmath43_q\\ar[dr]^p & \\\\   y & & x \\\\ } \\ ] ] where @xmath18 is groupoid and @xmath112 and @xmath113 are functors .    to turn a span of groupoids into a linear operator , we need a construction called the ` weak pullback ' .",
    "this construction will let us apply a span from @xmath32 to @xmath42 to a groupoid over @xmath32 to obtain a groupoid over @xmath42 . then , since a tame groupoid over @xmath32 gives a vector in @xmath80 , while a tame groupoid over @xmath42 gives a vector in @xmath114 , a sufficiently nice span from @xmath32 to @xmath42 will give a map from @xmath80 to @xmath114 .",
    "moreover , this map will be linear .    as a warmup for understanding weak pullbacks for groupoids",
    ", we recall ordinary pullbacks for sets , also called ` fibered products ' . the data for constructing such a pullback is a pair of sets equipped with functions to the same set : @xmath115_{q } & & s \\ar[dl]^{p } & \\\\   & & x & &   } \\ ] ] the pullback is the set @xmath116 together with the obvious projections @xmath117 and @xmath118 .",
    "the pullback makes this diamond commute : @xmath119_{\\pi_t } \\ar[dr]^{\\pi_s } & & \\\\ & t \\ar[dr]_{q } & & s \\ar[dl]^{p } & \\\\   & & x & &   } \\ ] ] and indeed it is the ` universal solution ' to the problem of finding such a commutative diamond @xcite .    to generalize the pullback to groupoids , we need to weaken one condition .",
    "the data for constructing a weak pullback is a pair of groupoids equipped with functors to the same groupoid : @xmath115_{q } & & s \\ar[dl]^{p } & \\\\   & & x & &   } \\ ] ] but now we replace the _ equation _ in the definition of pullback by a _ specified isomorphism_.",
    "so , we define the weak pullback @xmath120 to be the groupoid where an object is a triple @xmath121 consisting of an object @xmath122 , an object @xmath123 , and an isomorphism @xmath124 in @xmath32 .",
    "a morphism in @xmath120 from @xmath121 to @xmath125 consists of a morphism @xmath126 in @xmath18 and a morphism @xmath127 in @xmath128 such that the following square commutes : @xmath129_{p(f ) } \\ar[r]^{\\alpha } & q(t ) \\ar[d]^{q(g ) } \\\\ p(s ' ) \\ar[r]_{\\alpha ' } & q(t ' ) } \\ ] ] note that any set can be regarded as a * discrete * groupoid : one with only identity morphisms . for discrete groupoids",
    ", the weak pullback reduces to the ordinary pullback for sets . using the weak pullback",
    ", we can apply a span from @xmath32 to @xmath42 to a groupoid over @xmath32 and get a groupoid over @xmath42 . given a span of groupoids : @xmath130_{q } \\ar[dr]^{p } & \\\\ y & & x } \\ ] ] and a groupoid over @xmath32 : @xmath131_{v } \\\\     x &    } \\ ] ]",
    "we can take the weak pullback , which we call @xmath132 : @xmath133_{\\pi_s}\\ar[dr]^{\\pi_{\\psi } } & \\\\ & s \\ar[dl]_{q } \\ar[dr]^{p } & & \\psi \\ar[dl]_{v } \\\\ y & & x &    } \\ ] ] and think of @xmath132 as a groupoid over @xmath42 : @xmath134_{q \\pi_s }   \\\\ y    } \\ ] ] this process will determine a linear operator from @xmath80 to @xmath114 if the span @xmath18 is sufficiently nice :    a span @xmath130_{q } \\ar[dr]^{p } & \\\\ y & & x } \\ ] ] is * tame * if @xmath91 being tame implies that @xmath135 is tame .    given a tame span : @xmath130_{q } \\ar[dr]^{p } & \\\\ y & & x } \\ ] ] there exists a unique linear operator @xmath136 such that @xmath137 whenever @xmath9 is a tame groupoid over @xmath32 .",
    "this is theorem [ process1 ] .",
    "theorem [ matrix1 ] provides an explicit criterion for when a span is tame .",
    "this theorem also gives an explicit formula for the the operator corresponding to a tame span @xmath18 from @xmath32 to @xmath42 .",
    "if @xmath82 and @xmath138 are finite , then @xmath80 has a basis given by the isomorphism classes @xmath139 $ ] in @xmath32 , and similarly for @xmath114 .",
    "with respect to these bases , the matrix entries of @xmath140 are given as follows : @xmath141[x ] } =   \\sum_{[s]\\in{\\underline{p^{-1}(x)}}\\bigcap { \\underline{q^{-1}(y ) } } } \\frac{|{{\\rm aut}}(x)|}{|{{\\rm aut}}(s)|}\\ ] ] where @xmath85 is the set cardinality of the automorphism group of @xmath92 , and similarly for @xmath142 .",
    "even when @xmath82 and @xmath138 are not finite , we have the following formula for @xmath143 applied to @xmath144 : @xmath145 ) =   \\sum_{[x ] \\in { \\underline{x } } } \\;\\ , \\sum_{[s]\\in{\\underline{p^{-1}(x)}}\\bigcap { \\underline{q^{-1}(y ) } } } \\frac{|{{\\rm aut}}(x)|}{|{{\\rm aut}}(s)| } \\,\\ , \\psi([x ] ) \\ , .\\ ] ]    as with vectors , there are groupoidified analogues of addition and scalar multiplication for operators .",
    "given two spans from @xmath32 to @xmath42 : @xmath130_{q_s } \\ar[dr]^{p_s } & & & t\\ar[dl]_{q_t } \\ar[dr]^{p_t } & \\\\ y & & x & y & & x } \\ ] ] we can add them as follows . by the universal property of the coproduct we obtain from the right legs of the above spans a functor from the disjoint union @xmath146 to @xmath32 .",
    "similarly , from the left legs of the above spans , we obtain a functor from @xmath146 to @xmath42 .",
    "thus , we obtain a span @xmath147 \\ar[dr ] & \\\\ y & & x } \\ ] ] this addition of spans is compatible with degroupoidification :    if @xmath18 and @xmath128 are tame spans from @xmath32 to @xmath42 , then so is @xmath146 , and @xmath148    this is proved as proposition [ add_spans ] .",
    "we can also multiply a span by a ` scalar ' : that is , a fixed groupoid . given a groupoid @xmath106 and a span @xmath130_q \\ar[dr]^p & \\\\ y & & x } \\ ] ] we can multiply them to obtain a span @xmath149_{q\\pi_2 } \\ar[dr]^{p\\pi_2 } & \\\\ y & & x } \\ ] ] again",
    ", we have compatibility with degroupoidification :    given a tame groupoid @xmath106 and a tame span @xmath130 \\ar[dr ] & \\\\ y & & x } \\ ] ] then @xmath150 is tame and @xmath151    this is proved as proposition [ scalarmult2 ] .",
    "next we turn to the all - important process of _ composing _ spans .",
    "this is the groupoidified analogue of matrix multiplication .",
    "suppose we have a span from @xmath32 to @xmath42 and a span from @xmath42 to @xmath152 : @xmath153_{q_t } \\ar[dr]^{p_t } & & s \\ar[dl]_{q_s } \\ar[dr]^{p_s } & \\\\ z & & y & & x } \\ ] ] then we say these spans are * composable*. in this case we can form a weak pullback in the middle : @xmath154_{\\pi_t } \\ar[dr]^{\\pi_s } & & \\\\ &",
    "t\\ar[dl]_{q_t } \\ar[dr]^{p_t } & & s \\ar[dl]_{q_s } \\ar[dr]^{p_s } & \\\\ z & & y & & x } \\ ] ] which gives a span from @xmath32 to @xmath152 : @xmath155_{q_t \\pi_t } \\ar[dr]^{p_s\\pi_s } & \\\\   z & & x \\\\ } \\ ] ] called the * composite * @xmath156 .    when all the groupoids involved are discrete , the spans @xmath18 and @xmath128 are just matrices of sets , as explained in section [ intro ] .",
    "we urge the reader to check that in this case , the process of composing spans is really just matrix multiplication , with cartesian product of sets taking the place of multiplication of numbers , and disjoint union of sets taking the place of addition : @xmath157 so , composing spans of groupoids is a generalization of matrix multiplication , with weak pullback playing the role of summing over the repeated index @xmath40 in the formula above .",
    "so , it should not be surprising that degroupoidification sends a composite of tame spans to the composite of their corresponding operators :    if @xmath18 and @xmath128 are composable tame spans : @xmath153_{q_t } \\ar[dr]^{p_t } & & s \\ar[dl]_{q_s } \\ar[dr]^{p_s } & \\\\ z & & y & & x } \\ ] ] then the composite span @xmath155_{q_t \\pi_t } \\ar[dr]^{p_s\\pi_s } & \\\\   z & & x \\\\ } \\ ] ] is also tame , and @xmath158    this is proved as lemma [ composition ] .",
    "besides addition and scalar multiplication , there is an extra operation for groupoids over a groupoid @xmath32 , which is the reason groupoidification is connected to quantum mechanics .",
    "namely , we can take their inner product :    given groupoids @xmath102 and @xmath9 over @xmath32 , we define the * inner product * @xmath159 to be this weak pullback : @xmath160 \\ar[dr ] & \\\\",
    "\\phi \\ar[dr ] & & \\psi \\ar[dl ] \\\\ & x & } \\ ] ]    [ l2 ] a groupoid @xmath9 over @xmath32 is called *",
    "square - integrable * if @xmath161 is tame .",
    "we define @xmath53 to be the subspace of @xmath80 consisting of finite real linear combinations of vectors @xmath162 where @xmath9 is square - integrable .",
    "note that @xmath53 is all of @xmath80 when @xmath82 is finite .",
    "the inner product of groupoids over @xmath32 makes @xmath53 into a real hilbert space :    given a groupoid @xmath32 , there is a unique inner product @xmath163 on the vector space @xmath53 such that @xmath164 whenever @xmath102 and @xmath9 are square - integrable groupoids over @xmath32 . with this inner product @xmath53",
    "is a real hilbert space .",
    "this is proven later as theorem [ innerprod_theorem ] .",
    "we can always complexify @xmath53 and obtain a complex hilbert space .",
    "we work with real coefficients simply to admit that groupoidification as described here does not make essential use of the complex numbers .",
    "morton s generalization involving groupoids over @xmath55 is one way to address this issue @xcite .",
    "the inner product of groupoids over @xmath32 has the properties one would expect :    given a groupoid @xmath106 and square - integrable groupoids @xmath102 , @xmath9 , and @xmath165 over @xmath32 , we have the following equivalences of groupoids :    1 .",
    "@xmath166 2 .",
    "@xmath167 3 .",
    "@xmath168    here equivalence of groupoids is defined in the usual way  see definition [ equivalence_of_groupoids ] .",
    "this result is proved below as proposition [ innerprodandadjointprops ] .    just as we can define the adjoint of an operator between hilbert spaces",
    ", we can define the adjoint of a span of groupoids :    given a span of groupoids from @xmath32 to @xmath42 : @xmath130_{q } \\ar[dr]^{p } & \\\\ y & & x } \\ ] ] its * adjoint * @xmath169 is the following span of groupoids from @xmath42 to @xmath32 : @xmath130_{p } \\ar[dr]^{q } & \\\\ x & & y } \\ ] ]    we warn the reader that the adjoint of a tame span may not be tame , due to an asymmetry in the criterion for tameness , theorem [ matrix1 ] .",
    "but of course a span of finite groupoids is tame , and so is its adjoint .",
    "moreover , we have :    given a span @xmath170_{q } \\ar[dr]^{p } & \\\\ y & & x } \\ ] ] and a pair @xmath91 , @xmath171 of groupoids over @xmath32 and @xmath42 , respectively , there is an equivalence of groupoids @xmath172",
    "this is proven as proposition [ innerprod_adjoint ] .",
    "we say what it means for spans to be ` equivalent ' in definition [ equivalence ] .",
    "equivalent tame spans give the same linear operator : @xmath173 implies @xmath174 .",
    "spans of groupoids obey many of the basic laws of linear algebra  up to equivalence .",
    "for example , we have these familiar properties of adjoints :    given spans @xmath175_{q_t } \\ar[dr]^{p_t } & & & s \\ar[dl]_{q_s } \\ar[dr]^{p_s } & \\\\ z & & y & y & & x } \\ ] ] and a groupoid @xmath106 , we have the following equivalences of spans :    1 .",
    "@xmath176 2 .",
    "@xmath177 3 .",
    "@xmath178    these will follow easily after we show addition and composition of spans and scalar multiplication are well defined .    in fact , degroupoidification is a functor @xmath179 where @xmath180 is the category of real vector spaces and linear operators , and @xmath181 is a category with    * groupoids as objects , * equivalence classes of tame spans as morphisms ,    where composition comes from the method of composing spans we have just described .",
    "we prove this fact in theorem [ functor ]",
    ". a deeper approach , which we shall explain elsewhere , is to think of @xmath181 as a weak 2-category ( i.e. , bicategory ) with :    * groupoids as objects , * tame spans as morphisms , * isomorphism classes of maps of spans as 2-morphisms    then degroupoidification becomes a functor between weak 2-categories : @xmath182 where @xmath180 is viewed as a weak 2-category with only identity 2-morphisms .",
    "so , groupoidification is not merely a way of replacing linear algebraic structures involving the real numbers with purely combinatorial structures .",
    "it is also a form of ` categorification ' @xcite , where we take structures defined in the category @xmath180 and find analogues that live in the weak 2-category @xmath181 .",
    "we could go even further and think of @xmath181 as a weak 3-category with    * groupoids as objects , * tame spans as morphisms , * maps of spans as 2-morphisms , * maps of maps of spans as 3-morphisms .",
    "however , we have not yet found a use for this further structure .",
    "lastly we would like to say a few words about tensors and traces",
    ". we can define the * tensor product * of groupoids @xmath32 and @xmath42 to be their cartesian product @xmath183 , and the * tensor product * of spans @xmath170_{q } \\ar[dr]^{p } & & & s ' \\ar[dl]_{q ' } \\ar[dr]^{p ' } & \\\\ y & & x & y ' & & x ' } \\ ] ] to be the span @xmath184 defining the tensor product of maps of spans in a similar way , we conjecture that @xmath181 actually becomes a _",
    "symmetric monoidal _",
    "weak 2-category@xcite .",
    "if this is true , then degroupoidification should be a ` lax symmetric monoidal functor ' , thanks to the natural map @xmath185 the word ` lax ' refers to the fact that this map is not an isomorphism of vector spaces unless either @xmath32 or @xmath42 has finitely many isomorphism classes of objects .",
    "in the next section we present an alternative approach to degroupoidification that avoids this problem . the idea is simple : instead of working with the vector space @xmath80 consisting of all functions on @xmath82 , we work with the vector space @xmath81 $ ] having @xmath82 as its basis",
    ". then we have @xmath186 { \\otimes}{{\\mathbb r}}[{\\underline{y } } ] { \\cong}{{\\mathbb r}}[{\\underline{x \\times y } } ]   .\\ ] ] in fact both approaches to groupoidification have their own advantages , and they are closely related , since @xmath187^ *   \\ , .\\ ] ]    regardless of these nuances , the important thing about the ` monoidal ' aspect of degroupoidification is that it lets us mimic all the usual manipulations for tensors with groupoids replacing vector spaces .",
    "physicists call a linear map @xmath188 a * tensor * , and denote it by an expression @xmath189 with one subscript for each ` input ' vector space @xmath190 , and one superscript for each ` output ' vector space @xmath191 . in the traditional approach to tensors , these indices label bases of the vector spaces in question .",
    "then the expression @xmath192 stands for an array of numbers : the components of the tensor @xmath18 with respect to the chosen bases .",
    "this lets us describe various operations on tensors by multiplying such expressions and summing over indices that appear repeatedly , once as a superscript and once as a subscript . in the more modern ` string diagram '",
    "approach , these indices are simply names of input and output wires for a black box labelled @xmath18 :    ( 60,115)(0,-10 )   ( -62,-5)@xmath193 ( -43,-9)@xmath194 ( -20,-9)@xmath195 ( -1,-5)@xmath196 ( -51,96)@xmath197 ( -33,98)@xmath198 ( -14,96)@xmath199 ( -32,44)@xmath18    here we are following physics conventions , where inputs are at the bottom and outputs are at the top . in this approach ,",
    "when an index appears once as a superscript and once as a subscript , it means we attach an output wire of one black box to an input of another .",
    "the most famous example is matrix multiplication : @xmath200 here is the corresponding string diagram :    ( 60,110)(-20,0 )   ( -20,94)@xmath201 ( -20,50)@xmath40 ( -20,8)@xmath39 ( -16,71)@xmath128 ( -16,28)@xmath18    another famous example is the trace of a linear operator @xmath202 , which is the sum of its diagonal entries : @xmath203 as a string diagram , this looks like :    ( 60,120)(12,0 )   ( -51,66)@xmath39 ( -51,16)@xmath39 ( -49,40)@xmath18    here the sum is only guaranteed to converge if @xmath204 is finite - dimensional , and indeed the full collection of tensor operations is defined only for finite - dimensional vector spaces .",
    "all these ideas work just as well with spans of groupoids @xmath205 taking the place of tensors .",
    "the idea is that _ weak pullback takes the place of summation over repeated indices_. even better , there is no need to impose any finiteness or tameness conditions until we degroupoidify .",
    "we have already seen the simplest example : composition of spans via weak pullback is a generalization of matrix multiplication . for",
    "a trickier one , emphasized by urs schreiber @xcite , consider the trace of a span : @xmath170_q \\ar[dr]^p & \\\\ x & & x    } \\ ] ] here it is a bit hard to see which weak pullback to do !",
    "we can get around this problem using an alternate formula for the trace of a linear map @xmath202 : @xmath206 here @xmath207 is the tensor corresponding to an arbitrary inner product @xmath208 . in the finite - dimensional case , any such inner product determines an isomorphism @xmath209 , so we can interpret the adjoint of @xmath210 as a linear map @xmath211 , and the tensor for this is customarily written as @xmath210 with superscripts : @xmath212 .",
    "equation [ trace ] says that the operator @xmath213 is multiplication by @xmath214 .",
    "we can draw @xmath210 as a ` cup ' and @xmath215 as a ` cap ' , giving this string diagram :    ( 60,120)(12,0 )   ( -0,66)@xmath201 ( -0,17)@xmath201 ( -51,66)@xmath40 ( -51,17)@xmath39 ( -49,40)@xmath18    now let us see how to implement this formula for the trace at the groupoidified level , to define the trace of a span of groupoids .",
    "any groupoid @xmath32 automatically comes equipped with a span @xmath216 where @xmath217 is the diagonal map and the left - hand arrow is the unique functor to the * terminal groupoid*that is , the groupoid @xmath218 with one object and one morphism .",
    "we can check that at least when @xmath82 is finite , degroupoidifying this span gives an operator @xmath219 corresponding to the already described inner product on @xmath80 .",
    "similarly , the span @xmath220 degroupoidifies to give the operator @xmath221 so , to implement equation [ trace ] at the level of groupoids and define the trace of this span : @xmath170_q \\ar[dr]^p & \\\\ x & & x    } \\ ] ] we should take the composite of these three spans : @xmath222 the result is a span from @xmath218 to @xmath218 , whose apex is a groupoid we define to be the * trace * @xmath214 . we leave it as an exercise to check the following basic properties of the trace :    given a span of groupoids @xmath170_q \\ar[dr]^p & \\\\ x & & x    } \\ ] ] its trace @xmath214 is equivalent to the groupoid for which :    * an object is a pair @xmath223 consisting of an object @xmath122 and a morphism @xmath224 ; * a morphism from @xmath223 to @xmath225 is a morphism @xmath126 such that @xmath129_{p(f ) } \\ar[r]^{\\alpha } & q(s ) \\ar[d]^{q(f ) } \\\\",
    "p(s ' ) \\ar[r]_{\\alpha ' } & q(s ' ) } \\ ] ] commutes .    given a span of groupoids @xmath170_q \\ar[dr]^p & \\\\ x & & x    } \\ ] ] where @xmath82 is finite , we have @xmath226    given spans of groupoids",
    "@xmath170_{q_s } \\ar[dr]^{p_s } & & & t \\ar[dl]_{q_t } \\ar[dr]^{p_t } & \\\\ x & & x & x & & x } \\ ] ] and a groupoid @xmath106 , we have the following equivalences of groupoids :    1 .",
    "@xmath227 2 .",
    "given spans of groupoids @xmath175_{q_t } \\ar[dr]^{p_t } & & & s \\ar[dl]_{q_s } \\ar[dr]^{p_s } & \\\\ x & & y & y & & x } \\ ] ] we have an equivalence of groupoids @xmath229    we could go even further generalizing ideas from vector spaces and linear operators to groupoids and spans , but at this point the reader is probably hungry for some concrete applications . for these ,",
    "proceed directly to section [ applications ] .",
    "section [ homology ] can be skipped on first reading , since we need it only for the application to hall algebras in section [ hall ] .",
    "the work we have described so far has its roots in the cohomology of groupoids .",
    "any groupoid @xmath32 can be turned into a topological space , namely the geometric realization of its nerve @xcite , and we can define the cohomology of @xmath32 to be the cohomology of this space .",
    "the set of connected components of this space is just the set of isomorphism classes of @xmath32 , which we have denoted @xmath82 .",
    "so , the * zeroth cohomology * of the groupoid @xmath32 , with real coefficients , is precisely the vector space @xmath80 that we have been calling the degroupoidification of @xmath32 .    indeed , one reason degroupoidification has been overlooked until recently is that every groupoid is equivalent to a disjoint union of one - object groupoids , which we may think of as groups .",
    "to turn a groupoid into a topological space it suffices to do this for each of these groups and then take the disjoint union .",
    "the space associated to a group @xmath17 is quite famous : it is the eilenberg  mac lane space @xmath230 .",
    "similarly , the cohomology of groups is a famous and well - studied subject .",
    "but the zeroth cohomology of a group is always just @xmath89 .",
    "so , zeroth cohomology is not considered interesting .",
    "zeroth cohomology only becomes interesting when we move from groups to groupoids ",
    "and then only when we consider how a tame span of groupoids induces a map on zeroth cohomology .",
    "these reflections suggest an alternate approach to degroupoidification based on homology instead of cohomology :    given a groupoid @xmath32 , let the * zeroth homology * of @xmath32 be the real vector space with the set @xmath82 as basis .",
    "we denote this vector space as @xmath81 $ ] .",
    "we can also think of @xmath81 $ ] as the space of real - valued functions on @xmath82 with finite support .",
    "this makes it clear that the zeroth homology @xmath81 $ ] can be identified with a subspace of the zeroth cohomology @xmath80 .",
    "if @xmath32 has finitely many isomorphism classes of objects , then the set @xmath82 is finite , and the zeroth homology and zeroth cohomology are canonically isomorphic . for a groupoid with infinitely many isomorphism classes , however , the difference becomes important .",
    "the following example makes this clear :    [ polynomials ]    before pursuing a version of degroupoidification based on homology , we should ask if there are other choices built into our recipe for degroupoidification that we can change .",
    "the answer is yes . recalling equation [ operator_formula ] , which describes the operator associated to a tame span : @xmath231 ) =   \\sum_{[x ] \\in { \\underline{x } } } \\;\\ , \\sum_{[s]\\in{\\underline{p^{-1}(x)}}\\bigcap { \\underline{q^{-1}(y ) } } } \\frac{|{{\\rm aut}}(x)|}{|{{\\rm aut}}(s)| } \\,\\ , \\psi([x ] ) \\,.\\ ] ] one might wonder about the asymmetry of this formula .",
    "specifically , one might wonder why this formula uses information about @xmath232 but not @xmath233 .",
    "the answer is that we made an arbitrary choice of conventions .",
    "there is another equally nice choice , and in fact an entire family of choices interpolating between these two :    [ cohomological_alpha_degroupoidification ] given @xmath234 and a tame span of groupoids : @xmath43_q\\ar[dr]^p & \\\\   y & & x \\\\ } \\ ] ] there is a linear operator called its * @xmath235-degroupoidification * : @xmath236 given by : @xmath237 ) =   \\sum_{[x ] \\in { \\underline{x } } } \\;\\ , \\sum_{[s]\\in{\\underline{p^{-1}(x)}}\\bigcap { \\underline{q^{-1}(y ) } } } \\frac{|{{\\rm aut}}(x)|^{1-\\alpha}|{{\\rm aut}}(y)|^\\alpha}{|{{\\rm aut}}(s)| } \\,\\ , \\psi([x ] ) \\,.\\ ] ]    the only thing that needs to be checked is that the sums converge for any fixed choice of @xmath238 .",
    "this follows from our explicit criterion for tameness of spans , theorem [ matrix1 ] .",
    "the most interesting choices of @xmath235 are @xmath239 , @xmath240 , and the symmetrical choice @xmath241 .",
    "the last convention has the advantage that for a tame span @xmath18 with tame adjoint @xmath242 , the matrix for the degroupoidification of @xmath242 is just the transpose of that for @xmath18 .",
    "we can show :    [ alphaspancompose ] for any @xmath234 there is a functor from the category of groupoids and equivalence classes of tame spans to the category of real vector spaces and linear operators , sending :    * each groupoid @xmath32 to its zeroth cohomology @xmath243 , and * each tame span @xmath18 from @xmath32 to @xmath42 to the operator @xmath244 .",
    "in particular , if we have composable tame spans : @xmath153 _ { } \\ar[dr]^ { } & & s \\ar[dl ] _ { } \\ar[dr]^ { } & \\\\ z & & y & & x } \\ ] ] then their composite @xmath155 _ { } \\ar[dr]^ { } & \\\\   z & & x \\\\ } \\ ] ] is again tame , and @xmath245    we omit the proof because it mimics that of theorem [ functor ] . note that a groupoid @xmath9 over @xmath32 can be seen as a special case of a span , namely a span @xmath246_{v } \\ar[dr]^ { } & \\\\   x & & 1 \\\\ } \\ ] ] where @xmath218 is the terminal groupoid  that is , the groupoid with one object and one morphism .",
    "so , @xmath235-degroupoidification also gives a recipe for turning @xmath9 into a vector in @xmath243 : @xmath247 } = |{{\\rm aut}}(x)|^\\alpha { |v^{-1}(x)| } \\,.\\ ] ] this idea yields the following result as a special case of proposition [ alphaspancompose ] :    [ alpha_degroupoidification_vector ] given a tame span : @xmath170_{q } \\ar[dr]^{p } & \\\\ y & & x } \\ ] ] and a tame groupoid over @xmath32 , say @xmath248 , then @xmath249    equation [ alpha_degroupoidification_formula ] also implies that we can compensate for a different choice of @xmath235 by doing a change of basis .",
    "so , our choice of @xmath235 is merely a matter of convenience . more precisely :    regardless of the value of @xmath234 , the functors in proposition [ alphaspancompose ] are all naturally isomorphic .    given @xmath250 , equation [ alpha_degroupoidification_formula ] implies that @xmath251 } = |{{\\rm aut}}(x)|^{\\alpha-\\beta }   \\utilde{\\psi_\\beta}{[x]}\\ ] ] for any tame groupoid @xmath9 over a groupoid @xmath32 .",
    "so , for any groupoid @xmath32 , define a linear operator @xmath252 { \\rightarrow}{{\\mathbb r}}[{\\underline{x}}]\\ ] ] by @xmath253 ) = |{{\\rm aut}}(x)|^{\\alpha-\\beta } \\psi([x ] )   .\\ ] ] we thus have @xmath254    by proposition [ alpha_degroupoidification_vector ] , for any tame span @xmath18 from @xmath32 to @xmath42 and any tame groupoid @xmath9 over @xmath32 we have @xmath255",
    "since this is true for all such @xmath9 , this implies @xmath256 so , @xmath128 defines a natural isomorphism between @xmath235-degroupoidification and @xmath257-degroupoidification .",
    "now let us return to homology .",
    "we can also do @xmath235-degroupoidification using zeroth homology instead of zeroth cohomology . recall that while the zeroth cohomology of @xmath32 consists of all real - valued functions on @xmath82 , the zeroth homology consists of such functions _ with finite support_. so , we need to work with groupoids over @xmath32 that give functions of this type :    a groupoid @xmath9 over @xmath32 is * finitely supported * if it is tame and",
    "@xmath162 is a finitely supported function on @xmath82 .",
    "similarly , we must use spans of groupoids that give linear operators preserving this finite support property :    [ finitetypespan ] a span : @xmath170_{q } \\ar[dr]^{p } & \\\\ y & & x } \\ ] ] is of * finite type * if it is a tame span of groupoids and for any finitely supported groupoid @xmath9 over @xmath32 , the groupoid @xmath132 over @xmath42 ( formed by weak pullback ) is also finitely supported .    with these definitions",
    ", we can refine the previous propositions so they apply to zeroth homology :    [ homological_alpha_degroupoidification ] given any fixed real number @xmath235 and a span of finite type : @xmath43_q\\ar[dr]^p & \\\\   y & & x \\\\ } \\ ] ] there is a linear operator called its * @xmath235-degroupoidification * : @xmath258 { \\rightarrow}{{\\mathbb r}}[{\\underline{y}}]\\ ] ] given by : @xmath259 = \\sum_{[y ] \\in { \\underline{y } } } \\;\\ , \\sum_{[s]\\in{\\underline{p^{-1}(x)}}\\bigcap { \\underline{q^{-1}(y ) } } } \\frac{|{{\\rm aut}}(x)|^{1-\\alpha}|{{\\rm aut}}(y)|^\\alpha}{|{{\\rm aut}}(s)| } \\,\\ , [ y ]    \\ , .\\ ] ]    [ alphaspancomposefinite ] for any @xmath234 there is a functor from the category of groupoids and equivalence classes of spans of finite type to the category of real vector spaces and linear operators , sending :    * each groupoid @xmath32 to its zeroth homology @xmath81 $ ] , and * each span @xmath18 of finite type from @xmath32 to @xmath42 to the operator @xmath260 { \\rightarrow}{{\\mathbb r}}[{\\underline{y}}]$ ] .",
    "moreover , for all values of @xmath234 , these functors are naturally isomorphic .",
    "given a span of finite type : @xmath170_{q } \\ar[dr]^{p } & \\\\ y & & x } \\ ] ] and a finitely supported groupoid over @xmath32 , say @xmath248 , then @xmath132 is a finitely supported groupoid over @xmath42 , and @xmath261 .",
    "the moral of this section is that we have several choices to make before we apply degroupoidification to any specific example .",
    "the choice of @xmath235 is merely a matter of convenience , but there is a real difference between homology and cohomology , at least for groupoids with infinitely many nonisomorphic objects .",
    "the process described in section [ degroupoidification ] is the combination of choosing to work with cohomology and the convention @xmath262 for degroupoidifying spans .",
    "this will suffice for the majority of this paper .",
    "however , we will use a different choice in our study of hall algebras .",
    "degroupoidification is a systematic process ; groupoidification is the attempt to undo this process .",
    "the previous section explains degroupoidification  but not why groupoidification is interesting .",
    "the interest lies in its applications to concrete examples .",
    "so , let us sketch three : feynman diagrams , hecke algebras , and hall algebras .",
    "one of the first steps in developing quantum theory was planck s new treatment of electromagnetic radiation .",
    "classically , electromagnetic radiation in a box can be described as a collection of harmonic oscillators , one for each vibrational mode of the field in the box .",
    "planck ` quantized ' the electromagnetic field by assuming that the energy of each oscillator could only take discrete , evenly spaced values : if by fiat we say the lowest possible energy is @xmath263 , the allowed energies take the form @xmath264 , where @xmath8 is any natural number , @xmath265 is the frequency of the oscillator in question , and @xmath266 is planck s constant .",
    "planck did not know what to make of the number @xmath8 , but einstein and others later interpreted it as the number of ` quanta ' occupying the vibrational mode in question .",
    "however , far from being particles in the traditional sense of tiny billiard balls , quanta are curiously abstract entities  for example , all the quanta occupying a given mode are indistinguishable from each other .    in a modern treatment ,",
    "states of a quantized harmonic oscillator are described as vectors in a hilbert space called ` fock space ' .",
    "this hilbert space consists of formal power series . for a full treatment of the electromagnetic field we would need power series in many variables , one for each vibrational mode . but to keep things simple ,",
    "let us consider power series in one variable . in this case",
    ", the vector @xmath267 describes a state in which @xmath8 quanta are present .",
    "a general vector in fock space is a convergent linear combination of these special vectors .",
    "more precisely , the * fock space * consists of @xmath268 $ ] with @xmath269 , where the inner product is given by @xmath270    but what is the meaning of this inner product ?",
    "it is precisely the inner product in @xmath271 , where @xmath3 is the groupoid of finite sets !",
    "this is no coincidence .",
    "in fact , there is a deep relationship between the mathematics of the quantum harmonic oscillator and the combinatorics of finite sets .",
    "this relation suggests a program of _ groupoidifying _ mathematical tools from quantum theory , such as annihilation and creation operators , field operators and their normal - ordered products , feynman diagrams , and so on .",
    "this program was initiated by dolan and one of the current authors @xcite .",
    "later , it was developed much further by morton @xcite .",
    "guta and maassen @xcite and aguiar and maharam @xcite have also done relevant work .",
    "here we just sketch some of the basic ideas .",
    "first , let us see why the inner product on fock space matches the inner product on @xmath271 as described in theorem [ innerprod_theorem ] .",
    "we can compute the latter inner product using a convenient basis .",
    "let @xmath272 be the groupoid with @xmath8-element sets as objects and bijections as morphisms .",
    "since all @xmath8-element sets are isomorphic and each one has the permutation group @xmath273 as automorphisms , we have an equivalence of groupoids @xmath274 furthermore , @xmath272 is a groupoid over @xmath3 in an obvious way : @xmath275 we thus obtain a vector @xmath276 following the rule described in definition [ degroupoidification_of_vectors ] .",
    "we can describe this vector as a formal power series using the isomorphism @xmath277\\ ] ] described in example [ power_series ] . to do this , note that @xmath278 where @xmath263 stands for the empty groupoid .",
    "it follows that @xmath279 and thus @xmath280    next let us compute the inner product in @xmath271 . since finite linear combinations of vectors of the form @xmath281",
    "are dense in @xmath271 it suffices to compute the inner product of two vectors of this form .",
    "we can use the recipe in theorem [ innerprod_theorem ] .",
    "so , we start by taking the weak pullback of the corresponding groupoids over @xmath3 : @xmath282 \\ar[dr ] & \\\\",
    "\\psi_m \\ar[dr ] & & \\psi_n \\ar[dl ] \\\\ & e & } \\ ] ] an object of this weak pullback consists of an @xmath283-element set @xmath18 , an @xmath8-element set @xmath128 , and a bijection @xmath284 .",
    "a morphism in this weak pullback consists of a commutative square of bijections : @xmath285_{f } \\ar[r]^{\\alpha } & t \\ar[d]^{g } \\\\ s ' \\ar[r]_{\\alpha ' } & t ' } \\ ] ] so , there are no objects in @xmath286 when @xmath287 . when @xmath288 , all objects in this groupoid are isomorphic , and each one has @xmath289 automorphisms .",
    "it follows that @xmath290 using the fact that @xmath291 , we see that this is precisely the inner product in equation [ fock_inner_product ] .",
    "so , as a complex hilbert space , fock space is the complexification of @xmath271 .",
    "it is worth reflecting on the meaning of the computation we just did .",
    "the vector @xmath291 describes a state of the quantum harmonic oscillator in which @xmath8 quanta are present .",
    "now we see that this vector arises from the groupoid @xmath272 over @xmath3 .",
    "in section [ intro ] we called a groupoid over @xmath3 a * stuff type * , since it describes a way of equipping finite sets with extra stuff .",
    "the stuff type @xmath272 is a very simple special case , where the stuff is simply ` being an @xmath8-element set ' .",
    "so , groupoidification reveals the mysterious ` quanta ' to be simply elements of finite sets .",
    "moreover , the formula for the inner product on fock space arises from the fact that there are @xmath289 ways to identify two @xmath8-element sets .",
    "the most important operators on fock space are the annihilation and creation operators .",
    "if we think of vectors in fock space as formal power series , the * annihilation operator * is given by @xmath292 while the * creation operator * is given by @xmath293 as operators on fock space , these are only densely defined : for example , they map the dense subspace @xmath294 $ ] to itself .",
    "however , we can also think of them as operators from @xmath295 $ ] to itself .",
    "in physics these operators decrease or increase the number of quanta in a state , since @xmath296 creating a quantum and then annihilating one is not the same as annhilating and then creating one , since @xmath297 this is one of the basic examples of noncommutativity in quantum theory .",
    "the annihilation and creation operators arise from spans by degroupoidification , using the recipe described in theorem [ process1 ] .",
    "the annihilation operator comes from this span : @xmath298_{1 } \\ar[dr]^{s \\mapsto s+1 } & \\\\ e & & e } \\ ] ] where the left leg is the identity functor and the right leg is the functor ` disjoint union with a 1-element set ' . since it is ambiguous to refer to this span by the name of the groupoid on top , as we have been doing , we instead call it @xmath299",
    ". similarly , we call its adjoint @xmath300 : @xmath298_{s \\mapsto s+1 } \\ar[dr]^{1 } & \\\\ e & & e } \\ ] ] a calculation @xcite shows that indeed : @xmath301 moreover , we have an equivalence of spans : @xmath302 here we are using composition of spans , addition of spans and the identity span as defined in section [ degroupoidification ] .",
    "if we unravel the meaning of this equivalence , it turns out to be very simple @xcite .",
    "if you have an urn with @xmath8 balls in it , there is one more way to put in a ball and then take one out than to take one out and then put one in .",
    "because in the first scenario there are @xmath303 balls to choose from when you take one out , while in the second scenario there are only @xmath8 .",
    "so , the noncommutativity of annihilation and creation operators is not a mysterious thing : it has a simple , purely combinatorial explanation .    we can go further and define a span @xmath304 which degroupoidifies to give the well - known * field operator * @xmath305 our normalization here differs from the usual one in physics because we wish to avoid dividing by @xmath306 , but all the usual physics formulas can be adapted to this new normalization .    the powers of the span",
    "@xmath102 have a nice combinatorial interpretation .",
    "if we write its @xmath8th power as follows : @xmath307_{q } \\ar[dr]^{p } & \\\\ e & & e } \\ ] ] then we can reinterpret this span as a groupoid over @xmath308 : @xmath309_{q \\times p } \\\\",
    "e \\times e } \\ ] ] just as a groupoid over @xmath3 describes a way of equipping a finite set with extra stuff , a groupoid over @xmath308 describes a way of equipping a _",
    "pair _ of finite sets with extra stuff . and",
    "in this example , the extra stuff in question is a very simple sort of diagram !",
    "more precisely , we can draw an object of @xmath310 as a @xmath39-element set @xmath18 , a @xmath40-element set @xmath128 , a graph with @xmath311 univalent vertices and a single @xmath8-valent vertex , together with a bijection between the @xmath311 univalent vertices and the elements of @xmath146 .",
    "it is against the rules for vertices labelled by elements of @xmath18 to be connected by an edge , and similarly for vertices labelled by elements of @xmath128 .",
    "the functor @xmath312 sends such an object of @xmath310 to the pair of sets @xmath313 .",
    "an object of @xmath310 sounds like a complicated thing , but it can be depicted quite simply as a * feynman diagram*. physicists traditionally read feynman diagrams from bottom to top .",
    "so , we draw the above graph so that the univalent vertices labelled by elements of @xmath18 are at the bottom of the picture , and those labelled by elements of @xmath128 are at the top . for example , here is an object of @xmath314 , where @xmath315 and @xmath316 :    ( 110,120 )   ( -96,110)@xmath317 ( -66,110)@xmath318 ( -36,110)@xmath319 ( -6,110)@xmath320 ( -76,-13)@xmath218 ( -46,-13)@xmath321 ( -16,-13)@xmath322    0.5em in physics , we think of this as a process where 3 particles come in and 4 go out .",
    "feynman diagrams of this sort are allowed to have * self - loops * : edges with both ends at the same vertex .",
    "so , for example , this is a perfectly fine object of @xmath323 with @xmath315 and @xmath316 :    ( 110,120 )   ( -96,110)@xmath317 ( -66,110)@xmath318 ( -36,110)@xmath320 ( -6,110)@xmath319 ( -76,-13)@xmath322 ( -46,-13)@xmath321 ( -16,-13)@xmath218    0.5em to eliminate self - loops , we can work with the * normal - ordered powers * or ` wick powers ' of @xmath102 , denoted @xmath324 .",
    "these are the spans obtained by taking @xmath310 , expanding it in terms of the annihilation and creation operators , and moving all the annihilation operators to the right of all the creation operators ` by hand ' , ignoring the fact that they do not commute .",
    "for example : @xmath325 and so on .",
    "objects of @xmath326 can be drawn as feynman diagrams just as we did for objects of @xmath310 .",
    "there is just one extra rule : self - loops are not allowed .    in quantum field theory one",
    "does many calculations involving products of normal - ordered powers of field operators .",
    "feynman diagrams make these calculations easy . in the groupoidified context ,",
    "a product of normal - ordered powers is a span @xmath327_>>>>>>>{q } \\ar[dr]^>>>>>>>{p } & \\\\ e & & e \\ , . } \\ ] ] as before , we can draw an object of the groupoid @xmath328 as a feynman diagram .",
    "but now these diagrams are more complicated , and closer to those seen in physics textbooks .",
    "for example , here is a typical object of @xmath329 , drawn as a feynman diagram :    ( 110,130 )   ( -100,125)@xmath317 ( -68,125)@xmath330 ( -36,125)@xmath319 ( -6,125)@xmath320 ( -101,-11)@xmath218 ( -68,-11)@xmath318 ( -36,-11)@xmath322 ( -5,-11)@xmath321    0.5em in general , a * feynman diagram * for an object of @xmath331 consists of an @xmath39-element set @xmath18 , a @xmath40-element set @xmath128 , a graph with @xmath201 vertices of valence @xmath332 together with @xmath311 univalent vertices , and a bijection between these univalent vertices and the elements of @xmath333 .",
    "self - loops are forbidden ; it is against the rules for two vertices labelled by elements of @xmath18 to be connected by an edge , and similarly for two vertices labelled by elements of @xmath128 .",
    "as before , the forgetful functor @xmath334 sends any such object to the pair of sets @xmath335 .",
    "the groupoid @xmath331 also contains interesting automorphisms .",
    "these come from _",
    "symmetries _ of feynman diagrams : that is , graph automorphisms fixing the univalent vertices labelled by elements of @xmath18 and @xmath128 .",
    "these symmetries play an important role in computing the operator corresponding to this span : @xmath327_>>>>>>>{q } \\ar[dr]^>>>>>>>{p } & \\\\ e & & e \\ , . } \\ ] ] as is evident from theorem [ matrix1 ] , when a feynman diagram has symmetries , we need to divide by the number of symmetries when determining its contribution to the operator coming from the above span .",
    "this rule is well - known in quantum field theory ; here we see it arising as a natural consequence of groupoid cardinality .      here",
    "we sketch how to groupoidify a hecke algebra when the parameter @xmath0 is a power of a prime number and the finite reflection group comes from a dynkin diagram in this way .",
    "more details will appear in future work @xcite .",
    "let @xmath336 be a dynkin diagram .",
    "we write @xmath337 to mean that @xmath62 is a dot in this diagram .",
    "associated to each unordered pair of dots @xmath338 is a number @xmath339 . in the usual dynkin",
    "diagram conventions :    * @xmath340 is drawn as no edge at all , * @xmath341 is drawn as a single edge , * @xmath342 is drawn as a double edge , * @xmath343 is drawn as a triple edge .    for any nonzero number @xmath0",
    ", our dynkin diagram gives a hecke algebra .",
    "since we are using real vector spaces in this paper , we work with the hecke algebra over @xmath89 :    let @xmath336 be a dynkin diagram and @xmath0 a nonzero real number .",
    "the * hecke algebra * @xmath344 corresponding to this data is the associative algebra over @xmath89 with one generator @xmath67 for each @xmath337 , and relations : @xmath345 for all @xmath337 , and @xmath346 for all @xmath347 , where each side has @xmath348 factors .",
    "hecke algebras are @xmath0-deformations of finite reflection groups , also known as coxeter groups @xcite .",
    "any dynkin diagram gives rise to a simple lie group , and the weyl group of this simple lie algebra is a coxeter group . to begin understanding hecke algebras ,",
    "it is useful to note that when @xmath57 , the hecke algebra is simply the group algebra of the * coxeter group * associated to @xmath336 : that is , the group with one generator @xmath61 for each dot @xmath337 , and relations @xmath349 so , the hecke algebra can be thought of as a @xmath0-deformation of this coxeter group .",
    "if @xmath0 is a power of a prime number , the dynkin diagram @xmath336 determines a simple algebraic group @xmath17 over the field with @xmath0 elements , @xmath58 .",
    "we choose a borel subgroup @xmath350 , i.e. , a maximal solvable subgroup .",
    "this in turn determines a transitive @xmath17-set @xmath351 .",
    "this set is a smooth algebraic variety called the * flag variety * of @xmath17 , but we only need the fact that it is a finite set equipped with a transitive action of the finite group @xmath17 .",
    "starting from just this @xmath17-set @xmath32 , we can groupoidify the hecke algebra @xmath344 .    recalling the concept of ` action groupoid ' from section [ intro ]",
    ", we define the * groupoidified hecke algebra * to be @xmath352 this groupoid has one isomorphism class of objects for each @xmath17-orbit in @xmath353 : @xmath354 the well - known ` bruhat decomposition ' @xcite of @xmath355 shows there is one such orbit for each element of the coxeter group associated to @xmath336 . since the hecke algebra has a standard basis given by elements of the coxeter group @xcite , it follows that @xmath356 degroupoidifies to give the underlying vector space of the hecke algebra .",
    "in other words , we obtain an isomorphism of vector spaces @xmath357    even better , we can groupoidify the _ multiplication _ in the hecke algebra . in other words , we can find a span that degroupoidifies to give the linear operator @xmath358 this span is very simple : @xmath359 where @xmath360 is projection onto the @xmath39th factor .    for a proof that this span degroupoidifies to give the desired linear operator , see @xcite .",
    "the key is that for each dot @xmath337 there is a special isomorphism class in @xmath356 , and the function @xmath361 that equals 1 on this isomorphism class and 0 on the rest corresponds to the generator @xmath362 .    to illustrate these ideas ,",
    "let us consider the simplest nontrivial example , the dynkin diagram @xmath1 : @xmath60 & \\bullet}\\ ] ] the hecke algebra associated to @xmath1 has two generators , which we call @xmath120 and @xmath363 , for reasons soon to be revealed : @xmath364 the relations are @xmath365 it follows that this hecke algebra is a quotient of the group algebra of the 3-strand braid group , which has two generators @xmath120 and @xmath363 and one relation @xmath366 , called the * yang  baxter equation * or * third reidemeister move*. this is why jones could use traces on the @xmath367 hecke algebras to construct invariants of knots @xcite .",
    "this connection to knot theory makes it especially interesting to groupoidify hecke algebras .",
    "so , let us see what the groupoidified hecke algebra looks like , and where the yang  baxter equation comes from .",
    "the algebraic group corresponding to the @xmath1 dynkin diagram and the prime power @xmath0 is @xmath368 , and we can choose the borel subgroup @xmath369 to consist of upper triangular matrices in @xmath370 . recall that a * complete flag * in the vector space @xmath371 is a pair of subspaces @xmath372 the subspace @xmath373 must have dimension 1 , while @xmath374 must have dimension 2 .",
    "since @xmath17 acts transitively on the set of complete flags , while @xmath369 is the subgroup stabilizing a chosen flag , the flag variety @xmath351 in this example is just the set of complete flags in @xmath371hence its name .",
    "we can think of @xmath375 as a point in the projective plane @xmath376 , and @xmath377 as a line in this projective plane . from this viewpoint ,",
    "a complete flag is a chosen point lying on a chosen line in @xmath378 .",
    "this viewpoint is natural in the theory of ` buildings ' , where each dynkin diagram corresponds to a type of geometry @xcite .",
    "each dot in the dynkin diagram then stands for a ` type of geometrical figure ' , while each edge stands for an ` incidence relation ' .",
    "the @xmath1 dynkin diagram corresponds to projective plane geometry .",
    "the dots in this diagram stand for the figures ` point ' and ` line ' : @xmath379 &   \\bullet \\ ; { \\rm line } } \\ ] ] the edge in this diagram stands for the incidence relation ` the point @xmath380 lies on the line @xmath381 ' .",
    "we can think of @xmath120 and @xmath363 as special elements of the @xmath1 hecke algebra , as already described .",
    "but when we groupoidify the hecke algebra , @xmath120 and @xmath363 correspond to _ objects _ of @xmath356 .",
    "let us describe these objects and explain how the hecke algebra relations arise in this groupoidified setting .",
    "as we have seen , an isomorphism class of objects in @xmath356 is just a @xmath17-orbit in @xmath353 .",
    "these orbits in turn correspond to spans of @xmath17-sets from @xmath32 to @xmath32 that are * irreducible * : that is , not a coproduct of other spans of @xmath17-sets .",
    "so , the objects @xmath120 and @xmath363 can be defined by giving irreducible spans of @xmath17-sets : @xmath382\\ar[dr ] &     & &      & l\\ar[dl]\\ar[dr ] & \\\\ x &                   & x & & x &                  & x } \\ ] ]    in general , any span of @xmath17-sets @xmath170_{q } \\ar[dr]^{p } & \\\\ x & & x}\\ ] ] such that @xmath383 is injective can be thought of as @xmath17-invariant binary relation between elements of @xmath32 .",
    "irreducible @xmath17-invariant spans are always injective in this sense .",
    "so , such spans can also be thought of as @xmath17-invariant relations between flags . in these terms , we define @xmath120 to be the relation that says two flags have the same line , but different points : @xmath384 similarly , we think of @xmath363 as a relation saying two flags have different lines , but the same point : @xmath385 given this , we can check that @xmath386 here both sides refer to spans of @xmath17-sets , and we denote a span by its apex .",
    "addition of spans is defined using coproduct , while @xmath218 denotes the identity span from @xmath32 to @xmath32 .",
    "we use ` @xmath0 ' to stand for a fixed @xmath0-element set , and similarly for ` @xmath387 ' .",
    "we compose spans of @xmath17-sets using the ordinary pullback .",
    "it takes a bit of thought to check that this way of composing spans of @xmath17-sets matches the product described by equation [ multiplication ] , but it is indeed the case @xcite .    to check the existence of the first two isomorphisms above , we just need to count . in @xmath388 ,",
    "the are @xmath389 points on any line .",
    "so , given a flag we can change the point in @xmath0 different ways . to change it again , we have a choice : we can either send it back to the original point , or change it to one of the @xmath387 other points .",
    "so , @xmath390 . since there are also @xmath389 lines through any point , similar reasoning shows that @xmath391 .",
    "baxter isomorphism @xmath392 is more interesting .",
    "we construct it as follows .",
    "first consider the left - hand side , @xmath393 .",
    "so , start with a complete flag called @xmath394 :    ( 50,25 )   ( -20,2)@xmath395 ( 0,-10)@xmath396    then , change the point to obtain a flag @xmath397 .",
    "next , change the line to obtain a flag @xmath398 . finally , change the point once more , which gives us the flag @xmath399 :    ( 250,45 )   ( -245,4)@xmath395 ( -225,-10)@xmath396 ( -185,4)@xmath395 ( -165,-10)@xmath396 ( -200,25)@xmath400 ( -120,4)@xmath395 ( -100,-10)@xmath396 ( -130,23)@xmath400 ( -80,35)@xmath401 ( -40,4)@xmath395 ( -20,-10)@xmath396 ( -55,23)@xmath400 ( 5,35)@xmath401 ( -15,40)@xmath402    the figure on the far right is a typical element of @xmath393 .    on the other hand , consider @xmath403 .",
    "so , start with the same flag as before , but now change the line , obtaining @xmath404 .",
    "next change the point , obtaining the flag @xmath405 .",
    "finally , change the line once more , obtaining the flag @xmath406 :    ( 240,40 )   ( -245,3)@xmath395 ( -225,-10)@xmath396 ( -185,3)@xmath395 ( -170,-10)@xmath396 ( -150,45)@xmath407 ( -120,3)@xmath395 ( -100,-10)@xmath396 ( -85,45)@xmath407 ( -85,20)@xmath408 ( -45,4)@xmath395 ( -25,-10)@xmath396 ( -10,43)@xmath407 ( -10,20)@xmath408 ( -60,25)@xmath409    the figure on the far right is a typical element of @xmath403 .",
    "now , the axioms of projective plane geometry say that any two distinct points lie on a unique line , and any two distinct lines intersect in a unique point .",
    "so , any figure of the sort shown on the left below determines a unique figure of the sort shown on the right , and vice versa :    ( 150,50 )     comparing this with the pictures above , we see this bijection induces an isomorphism of spans @xmath410 .",
    "so , we have derived the yang  baxter isomorphism from the axioms of projective plane geometry !    to understand groupoidified hecke algebras , it is important to keep straight the two roles played by spans . on the one hand ,",
    "objects of the groupoidified hecke algebra @xmath411 can be described as certain spans from @xmath32 to @xmath32 , namely the injective @xmath17-invariant ones .",
    "multiplying these objects then corresponds to composing spans . on the other hand , equation [ multiplication ] gives a span describing the multiplication in @xmath411 .",
    "in fact , this span describes the process of composing spans .",
    "if this seems hopelessly confusing , remember that any matrix describes a linear operator , but there is also a linear operator describing the process of matrix multiplication .",
    "we are only groupoidifying that idea .",
    "other approaches to categorified hecke algebras and their representations have been studied by a number of authors , building on kazhdan  lusztig theory @xcite .",
    "one key step was soergel s introduction of what are nowadays called soergel bimodules @xcite . also important were khovanov s categorification of the jones polynomial @xcite and the work by bernstein , frenkel , khovanov and stroppel on categorifying temperley  lieb algebras , which are quotients of the type @xmath299 hecke algebras @xcite .",
    "a diagrammatic interpretation of the soergel bimodule category was developed by elias and khovanov @xcite , and a geometric approach led webster and williamson @xcite to deep applications in knot homology theory .",
    "this geometric interpretation can be seen as going beyond the simple form of groupoidification we consider here , and considering groupoids in the category of schemes .",
    "the hall algebra of a quiver is a very natural example of groupoidification , and a very important one , since it lets us groupoidify ` half of a quantum group ' .",
    "however , to obtain the usual formula for the hall algebra product , we need to exploit one of the alternative conventions explained in section [ homology ] . in this section",
    "we begin by quickly reviewing the usual theory of hall algebras and their relation to quantum groups @xcite .",
    "then we explain how to groupoidify a hall algebra .",
    "we start by fixing a finite field @xmath58 and a directed graph @xmath336 , which might look like this : @xmath412 \\ar@/^1pc/[rr ]   & & \\bullet \\ar@/^1pc/[ll ] \\ar@/^1pc/[rr ] \\ar@/_1pc/[rr ] \\ar[rr ]   & & \\bullet \\ar[ur ] \\ar[dr ] \\\\   & & & & & \\bullet     } \\ ] ] we shall call the category @xmath76 freely generated by @xmath336 a * quiver*. the objects of @xmath76 are the vertices of @xmath336 , while the morphisms are edge paths , with paths of length zero serving as identity morphisms .    by a * representation * of the quiver",
    "@xmath76 we mean a functor @xmath78 where @xmath79 is the category of finite - dimensional vector spaces over @xmath58 .",
    "such a representation simply assigns a vector space @xmath413 to each vertex of @xmath336 and a linear operator @xmath414 to each edge @xmath415 from @xmath62 to @xmath64 . by a * morphism * betwen representations of @xmath76 we mean a natural transformation between such functors .",
    "so , a morphism @xmath416 assigns a linear operator @xmath417 to each vertex @xmath62 of @xmath336 , in such a way that @xmath418_{\\alpha_d } \\ar[r]^{r(e ) } & r(d ' ) \\ar[d]^{\\alpha_{d ' } } \\\\",
    "s(d ) \\ar[r]_{s(d ) } & s(d ' ) } \\ ] ] commutes for any edge @xmath415 from @xmath62 to @xmath64 .",
    "there is a category @xmath77 where the objects are representations of @xmath76 and the morphisms are as above .",
    "this is an abelian category , so we can speak of indecomposable objects , short exact sequences , etc .  in this category .    in 1972",
    ", gabriel @xcite discovered a remarkable fact .",
    "namely : a quiver has finitely many isomorphism classes of indecomposable representations if and only if its underlying graph , ignoring the orientation of edges , is a finite disjoint union of dynkin diagrams of type @xmath419 or @xmath3 .",
    "these are called * simply laced * dynkin diagrams .",
    "henceforth , for simplicity , we assume the underlying graph of our quiver @xmath76 is a simply laced dynkin diagram when we ignore the orientations of its edges . let @xmath32 be the underlying groupoid of @xmath77 : that is , the groupoid with representations of @xmath76 as objects and _ isomorphisms _ between these as morphisms .",
    "we will use this groupoid to construct the hall algebra of @xmath76 .    as a vector space ,",
    "the hall algebra is just @xmath81 $ ] .",
    "remember from section [ homology ] that this is the vector space whose basis consists of isomorphism classes of objects in @xmath32 . in fancier language , it is the zeroth homology of @xmath32 .",
    "so , we should use the homology approach to degroupoidification , instead of the cohomology approach used in our examples so far .",
    "we now focus our attention on the hall algebra product . given three quiver representations @xmath420 and @xmath3",
    ", we define : @xmath421 the hall algebra product counts these exact sequences , but with a subtle ` correction factor ' : @xmath422 \\cdot [ n ] = \\sum_{e \\in { \\underline{x } } }   \\frac{|\\mathcal{p}_{mn}^e|}{|{{\\rm aut}}(m)| \\",
    ", |{{\\rm aut}}(n)|}\\ , [ e ] \\,.\\ ] ] all the cardinalities in this formula are ordinary _ set _ cardinalities .",
    "somewhat suprisingly , the above product is associative . in fact",
    ", ringel @xcite showed that the resulting algebra is isomorphic to the positive part @xmath75 of the quantum group corresponding to our simply laced dynkin diagram !",
    "so , roughly speaking , the hall algebra of a simply laced quiver is ` half of a quantum group ' .    since the hall algebra product can be seen as a linear operator @xmath423 { \\otimes}{{\\mathbb r}}[{\\underline{x } } ] & { \\rightarrow } & { { \\mathbb r}}[{\\underline{x } } ] \\\\",
    "a { \\otimes}b        & \\mapsto & a\\cdot b   \\end{array}\\ ] ] it is natural to seek a span of groupoids @xmath424_{q } \\ar[dr]^{p } & \\\\ x & & x\\times x } \\ ] ] that gives this operator .",
    "indeed , there is a very natural span that gives this product .",
    "this will allow us to groupoidify the algebra @xmath75 .",
    "we start by defining a groupoid @xmath425 to serve as the apex of this span .",
    "an object of @xmath425 is a short exact sequence in @xmath77 , and a morphism from @xmath426 to @xmath427 is a commutative diagram @xmath428 &   n \\ar[r]^{f } \\ar[d]^{\\alpha } &   e \\ar[r]^{g } \\ar[d]^{\\beta } &   m \\ar[r ] \\ar[d]^{\\gamma } & 0 \\\\ 0 \\ar[r ] & n ' \\ar[r]^{f ' } & e ' \\ar[r]^{g ' } & m ' \\ar[r ] & 0 \\\\ } \\ ] ] where @xmath429 and @xmath430 are isomorphisms of quiver representations .    next , we define the span @xmath431_{q } \\ar[dr]^{p } & \\\\ x & & x\\times x } \\ ] ] where @xmath380 and @xmath0 are given on objects by @xmath432 and defined in the natural way on morphisms .",
    "this span captures the idea behind the standard hall algebra multiplication .",
    "given two quiver representations @xmath433 and @xmath434 , this span relates them to every representation @xmath3 that is an extension of @xmath433 by @xmath434 .",
    "before we degroupoidify this span , we need to decide on a convention .",
    "it turns out that the correct choice is @xmath235-degroupoidification with @xmath435 , as described in section [ homology ] .",
    "recall from proposition [ homological_alpha_degroupoidification ] that a span of finite type @xmath43_q\\ar[dr]^p & \\\\   y & & x \\\\ } \\ ] ] yields an operator @xmath436 { \\rightarrow}{{\\mathbb r}}[{\\underline{y}}]\\ ] ] given by : @xmath437 = \\sum_{[y ] \\in { \\underline{y } } } \\;\\ , \\sum_{[s]\\in{\\underline{p^{-1}(x)}}\\bigcap { \\underline{q^{-1}(y ) } } } \\frac{|{{\\rm aut}}(y)|}{|{{\\rm aut}}(s)| } \\,\\ , [ y ]    \\ , .\\ ] ] we can rewrite this using groupoid cardinality as follows : @xmath437 = \\sum_{[y ] \\in { \\underline{y } } } \\;\\ ,    applying this procedure to the span with @xmath425 as its apex , we get an operator @xmath438 { \\otimes}{{\\mathbb r}}[{\\underline{x } } ] { \\rightarrow}{{\\mathbb r}}[{\\underline{x}}]\\ ] ] with @xmath439 { \\otimes}[n ] )   = \\sum_{e\\in\\mathcal{p}^e_{mn } }    show this matches the hall algebra product @xmath440 \\cdot [ n]$ ] .    for this",
    ", we must make a few observations .",
    "first , we note that the group @xmath441 acts on the set @xmath442 .",
    "this action is not necessarily free , but this is just the sort of situation groupoid cardinality is designed to handle . taking the weak quotient , we obtain a groupoid equivalent to the groupoid where objects are short exact sequences of the form @xmath443 and morphisms are isomorphisms of short exact sequences .",
    "so , the weak quotient is equivalent to the groupoid @xmath444 . remembering that groupoid cardinality is preserved under equivalence , we see : @xmath445",
    "so , we obtain @xmath439 { \\otimes}[n ] )   = \\sum_{e\\in\\mathcal{p}^e_{mn } } \\frac{|\\mathcal{p}^e_{mn}| } { |{{\\rm aut}}(m)| \\ , |{{\\rm aut}}(n)| }   \\,\\ , [ e ] .\\ ] ] which is precisely the hall algebra product @xmath440 \\cdot [ n]$ ] .",
    "we can define a coproduct on @xmath81 $ ] using the the adjoint of the span that gives the product .",
    "unfortunately this coproduct does not make the hall algebra into a bialgebra ( and thus not a hopf algebra ) .",
    "ringel discovered how to fix this problem by ` twisting ' the product and coproduct @xcite .",
    "the resulting twisted hall algebra is isomorphic _ as a hopf algebra _ to @xmath75 .",
    "this adjustment also removes the dependency on the direction of the arrows in our original directed graph .",
    "we hope to groupoidify this construction in future work .",
    "in section [ degroupoidification ] we described a process for turning a tame span of groupoids into a linear operator . in this section",
    "we show this process is well - defined .",
    "the calculations in the proof yield an explicit criterion for when a span is tame .",
    "they also give an explicit formula for the the operator coming from a tame span . as part of our work",
    ", we also show that equivalent spans give the same operator .      to prove that a tame span gives a well - defined operator , we begin with three lemmas that are of some interest in themselves .",
    "we postpone to appendix [ appendix ] some well - known facts about groupoids that do not involve the concept of degroupoidification .",
    "this appendix also recalls the familiar concept of ` equivalence ' of groupoids , which serves as a basis for this :    two groupoids over a fixed groupoid @xmath32 , say @xmath91 and @xmath446 , are * equivalent * as groupoids over @xmath32 if there is an equivalence @xmath447 such that this diagram @xmath448^{f } \\ar[dr]_{p } & & \\phi \\ar[dl]^{q } \\\\ & x & } \\ ] ] commutes up to natural isomorphism .",
    "[ vectorswelldefined ] let @xmath91 and @xmath446 be equivalent groupoids over @xmath32 .",
    "if either one is tame , then both are tame , and @xmath449 .",
    "this follows directly from lemmas [ equivgrpd ] and [ essentialpullback ] in appendix [ appendix ] .",
    "[ addvectors ] given tame groupoids @xmath102 and @xmath9 over @xmath32 , @xmath104 more generally , given any collection of tame groupoids @xmath450 over @xmath32 , the coproduct @xmath451 is naturally a groupoid over @xmath32 , and if it is tame , then @xmath452 where the sum on the right hand side converges pointwise as a function on @xmath82 .",
    "the full inverse image of any object @xmath92 in the coproduct @xmath451 is the coproduct of its fulll inverse images in each groupoid @xmath450 . since groupoid cardinality is additive under coproduct , the result follows .",
    "[ linearity ] given a span of groupoids @xmath130_{q } \\ar[dr]^{p } & \\\\ y & & x } \\ ] ] we have    1 .",
    "@xmath453 2 .",
    "@xmath454    whenever @xmath455 are groupoids over @xmath32 , @xmath91 is a groupoid over @xmath32 , and @xmath106 is a groupoid .    to prove 1",
    ", we need to describe a functor @xmath456 that will provide our equivalence . for this",
    ", we simply need to describe for each @xmath39 a functor @xmath457 .",
    "an object in @xmath458 is a triple @xmath459 where @xmath460 , @xmath461 and @xmath462 .",
    "@xmath463 simply sends this triple to the same triple regarded as an object of @xmath464 .",
    "one can check that @xmath465 extends to a functor and that this functor extends to an equivalence of groupoids over @xmath18 .    to prove 2",
    ", we need to describe a functor @xmath466 .",
    "this functor simply re - orders the entries in the quadruples which define the objects in each groupoid .",
    "one can check that this functor extends to an equivalence of groupoids over @xmath32 .",
    "finally we need the following lemma , which simplifies the computation of groupoid cardinality :    [ altcard ] if @xmath32 is a tame groupoid with finitely many objects in each isomorphism class , then @xmath467 where @xmath468 is the set of morphisms whose source is the object @xmath92 .",
    "we check the following equalities : @xmath469 \\in { \\underline{x } } } \\frac{1}{|{{\\rm aut}}(x)| }   = \\sum_{[x ] \\in { \\underline{x } } } \\frac{|[x]|}{|{{\\rm mor}}(x,-)| }   = \\sum_{x \\in x } \\frac{1}{|{{\\rm mor}}(x,-)| } .\\ ] ] here @xmath139 $ ] is the set of objects isomorphic to @xmath31 , and @xmath470|$ ] is the ordinary cardinality of this set . to check the above equations , we first choose an isomorphism @xmath471 for each object @xmath472 isomorphic to @xmath31 .",
    "this gives a bijection from @xmath139 \\times   { { \\rm aut}}(x)$ ] to @xmath473 that takes @xmath474 to @xmath475 .",
    "thus @xmath476| \\ , |{{\\rm aut}}(x)| = |{{\\rm mor}}(x,-)| , \\ ] ] and the first equality follows .",
    "we also get a bijection between @xmath477 and @xmath473 that takes @xmath478 to @xmath479 .",
    "thus , @xmath480 whenever @xmath472 is isomorphic to @xmath31 .",
    "the second equation follows from this .",
    "now we are ready to prove the main theorem of this section :    [ process1 ] given a tame span of groupoids @xmath170_{q } \\ar[dr]^{p } & \\\\ y & & x } \\ ] ] there exists a unique linear operator @xmath481 such that @xmath482 for any vector @xmath162 obtained from a tame groupoid @xmath9 over @xmath32 .",
    "it is easy to see that these conditions uniquely determine @xmath140 .",
    "suppose @xmath483 is any nonnegative function .",
    "then we can find a groupoid @xmath9 over @xmath32 such that @xmath484 .",
    "so , @xmath140 is determined on nonnegative functions by the condition that @xmath482 .",
    "since every function is a difference of two nonnegative functions and @xmath140 is linear , this uniquely determines @xmath140 .",
    "the real work is proving that @xmath140 is well - defined .",
    "for this , assume we have a collection @xmath485 of groupoids over @xmath32 and real numbers @xmath486 such that @xmath487 we need to show that @xmath488    we can simplify our task as follows .",
    "first , recall that a * skeletal * groupoid is one where isomorphic objects are equal .",
    "every groupoid is equivalent to a skeletal one .",
    "thanks to lemmas [ vectorswelldefined ] and [ skeletal ] , we may therefore assume without loss of generality that @xmath18 , @xmath32 , @xmath42 and all the groupoids @xmath450 are skeletal .",
    "second , recall that a skeletal groupoid is a coproduct of groupoids with one object . by lemma [ addvectors ] , degroupoidification converts coproducts of groupoids over @xmath32 into sums of vectors .",
    "also , by lemma [ linearity ] , the operation of taking weak pullback distributes over coproduct . as a result",
    ", we may assume without loss of generality that each groupoid @xmath450 has one object .",
    "write @xmath489 for the one object of @xmath450 .    with these simplifying assumptions , equation [ assumption1 ]",
    "says that for any @xmath92 , @xmath490 ) }       =   \\displaystyle{\\sum_{i \\in",
    "i } \\alpha_i \\",
    ", |v_i^{-1 } ( x)| }         = \\displaystyle{\\sum_{i \\in j } \\frac{\\alpha_i}{|{{\\rm aut}}(\\ast_i)|}}\\ ] ] where @xmath491 is the collection of @xmath492 such that @xmath493 is isomorphic to @xmath31 .",
    "since all groupoids in sight are now skeletal , this condition implies @xmath494 .",
    "now , to prove equation [ fact0 ] , we need to show that @xmath495 ) = 0\\ ] ] for any @xmath238 .",
    "but since the set @xmath496 is partitioned into sets @xmath491 , one for each @xmath92 , it suffices to show @xmath497 ) = 0 .\\ ] ] for any fixed @xmath92 and @xmath238 .    to compute @xmath498",
    ", we need to take this weak pullback : @xmath499_{\\pi_s}\\ar[dr]^{\\pi_{\\psi_i } } & \\\\ & s \\ar[dl]_{q } \\ar[dr]^{p } & & \\psi_i \\ar[dl]_{v_i } \\\\ y & & x &    } \\ ] ] we then have @xmath500 ) = |(q \\pi_s)^{-1}(y)| , \\ ] ] so to prove equation [ fact1 ] it suffices to show @xmath501    using the definition of ` weak pullback ' , and taking advantage of the fact that @xmath450 has just one object , which maps down to @xmath31 , we can see that an object of @xmath458 consists of an object @xmath122 with @xmath502 together with an isomorphism @xmath503 .",
    "this object of @xmath504 lies in @xmath505 precisely when we also have @xmath506 .",
    "so , we may briefly say that an object of @xmath507 is a pair @xmath508 , where @xmath122 has @xmath502 , @xmath506 , and @xmath235 is an element of @xmath232 . since @xmath18 is skeletal , there is a morphism between two such pairs only if they have the same first entry .",
    "a morphism from @xmath223 to @xmath509 then consists of a morphism @xmath510 and a morphism @xmath511 such that @xmath512^{\\alpha}\\ar[d]_{p(f ) } & x\\ar[d]^{v_i(g ) } \\\\ x \\ar[r]_{\\alpha ' } & x } \\ ] ] commutes .",
    "a morphism out of @xmath223 thus consists of an arbitrary pair @xmath513 , @xmath511 , since these determine the target @xmath509 .",
    "this fact and lemma [ altcard ] allow us to compute : @xmath514 so , to prove equation [ fact2 ] , it suffices to show @xmath515 but this easily follows from equation [ assumption2 ] .",
    "so , the operator @xmath140 is well defined .    in definition [ equivalence ]",
    "we recall the natural concept of ` equivalence ' for spans of groupoids .",
    "the next theorem says that our process of turning spans of groupoids into linear operators sends equivalent spans to the same operator :    [ linops_equivspans1 ] given equivalent spans @xmath130_{q_s } \\ar[dr]^{p_s } &   & & t\\ar[dl]_{q_t } \\ar[dr]^{p_t } & \\\\ y & & x & y & & x } \\ ] ] the linear operators @xmath140 and @xmath516 are equal .",
    "since the spans are equivalent , there is a functor providing an equivalence of groupoids @xmath517 along with a pair of natural isomorphisms @xmath518 and @xmath519 .",
    "thus , the diagrams @xmath520 & & \\phi \\ar[dl ] & & t \\ar[dr ] & & \\phi \\ar[dl ] \\\\ & x & & & & x & } \\ ] ] are equivalent pointwise .",
    "it follows from lemma [ skeletal ] that the weak pullbacks @xmath132 and @xmath521 are equivalent groupoids with the equivalence given by a functor @xmath522 . from the universal property of weak pullbacks , along with @xmath465",
    ", we obtain a natural transformation @xmath523 .",
    "we then have a triangle @xmath524 where the composite of @xmath430 and @xmath257 is @xmath525 . here",
    "@xmath526 stands for whiskering : see definition [ whiskering ] .",
    "we can now apply lemma [ essentialpullback ] .",
    "thus , for every @xmath527 , the full inverse images @xmath528 and @xmath529 are equivalent .",
    "it follows from lemma [ equivgrpd ] that for each @xmath238 , the groupoid cardinalities @xmath530 and @xmath531 are equal . thus , the linear operators @xmath140 and @xmath516 are the same .",
    "our calculations in the proof of theorem [ process1 ] yield an explicit formula for the operator coming from a tame span , and a criterion for when a span is tame :    [ matrix1 ] a span of groupoids @xmath130_{q } \\ar[dr]^{p } & \\\\ y & & x } \\ ] ] is tame if and only if :    1 .   for any object @xmath532 ,",
    "the groupoid @xmath533 is nonempty for objects @xmath31 in only a finite number of isomorphism classes of @xmath32 .",
    "2 .   for every @xmath92 and @xmath238 ,",
    "the groupoid @xmath533 is tame .",
    "here @xmath533 is the subgroupoid of @xmath18 whose objects lie in both @xmath534 and @xmath535 , and whose morphisms lie in both @xmath534 and @xmath535 .",
    "if @xmath18 is tame , then for any @xmath144 we have @xmath231 ) =   \\sum_{[x ] \\in { \\underline{x } } } \\;\\ , \\sum_{[s]\\in{\\underline{p^{-1}(x)}}\\bigcap { \\underline{q^{-1}(y ) } } } \\frac{|{{\\rm aut}}(x)|}{|{{\\rm aut}}(s)| } \\,\\ , \\psi([x ] ) \\,.\\ ] ]    first suppose the span @xmath18 is tame and @xmath91 is a tame groupoid over @xmath32 .",
    "equations [ formula1 ] and [ formula2 ] show that if @xmath536 and @xmath9 are skeletal , and @xmath9 has just one object @xmath537 , then @xmath538 ) = \\sum_{s \\in p^{-1}(x ) \\cap q^{-1}(y ) } \\frac{|{{\\rm aut}}(v(\\ast))|}{|{{\\rm aut}}(s)| |{{\\rm aut}}(\\ast)|}\\ ] ] on the other hand , @xmath101 ) =   \\begin{cases}\\displaystyle{\\frac{1}{|{{\\rm aut}}(\\ast)| } }                 & \\textrm{if } \\ ; v(\\ast ) = x \\\\                                              \\\\                0                      & \\textrm{otherwise . }    \\end{cases}\\ ] ] so in this case , writing @xmath162 as @xmath539 , we have @xmath231 ) =   \\sum_{[x ] \\in x } \\;\\ , \\sum_{[s]\\in p^{-1}(x ) \\bigcap q^{-1}(y ) } \\frac{|{{\\rm aut}}(x)|}{|{{\\rm aut}}(s)| } \\,\\ , \\psi([x ] ) \\,.\\ ] ] since both sides are linear in @xmath539 , and every nonnegative function in @xmath80 is a pointwise convergent nonnegative linear combination of functions of the form @xmath540 with @xmath9 as above , the above equation in fact holds for _ all _ @xmath541 .    since all groupoids in sight are skeletal , we may equivalently write the above equation as @xmath231 ) =   \\sum_{[x ] \\in { \\underline{x } } } \\;\\ , \\sum_{[s]\\in{\\underline{p^{-1}(x)}}\\bigcap { \\underline{q^{-1}(y ) } } } \\frac{|{{\\rm aut}}(x)|}{|{{\\rm aut}}(s)| } \\,\\ , \\psi([x ] ) \\,.\\ ] ]",
    "the advantage of this formulation is that now both sides are unchanged when we replace @xmath32 and @xmath42 by equivalent groupoids , and replace @xmath18 by an equivalent span .",
    "so , this equation holds for all tame spans , as was to be shown .",
    "if the span @xmath18 is tame , the sum above must converge for all functions @xmath539 of the form @xmath540 .",
    "any nonnegative function @xmath483 is of this form .",
    "for the sum above to converge for _ all _ nonnegative @xmath539 , this sum : @xmath542\\in{\\underline{p^{-1}(x)}}\\bigcap { \\underline{q^{-1}(y ) } } } \\frac{|{{\\rm aut}}(x)| } { |{{\\rm aut}}(s)|}\\ ] ] must have the following two properties :    1 .",
    "for any object @xmath238 , it is nonzero only for objects @xmath31 in a finite number of isomorphism classes of @xmath32 .",
    "2 .   for every @xmath92 and @xmath238",
    ", it converges to a finite number .",
    "these conditions are equivalent to conditions 1 ) and 2 ) in the statement of the theorem .",
    "we leave it as an exercise to check that these conditions are not only necessary but also sufficient for @xmath18 to be tame .",
    "the previous theorem has many nice consequences .",
    "for example :    [ add_spans ] suppose @xmath18 and @xmath128 are tame spans from a groupoid @xmath32 to a groupoid @xmath42",
    ". then @xmath543 .",
    "this follows from the explicit formula given in theorem [ matrix1 ] .",
    "in this section we prove all the remaining results stated in section [ degroupoidification ] .",
    "we start with results about scalar multiplication .",
    "then we show that degroupoidification is a functor . finally , we prove the results about inner products and adjoints .      to prove facts about scalar multiplication , we use the following lemma :    [ essinverseproduct ] given a groupoid @xmath106 and a functor between groupoids @xmath544 , then the functor @xmath545 ( where @xmath546 is the unique morphism from @xmath106 to the terminal groupoid @xmath218 )",
    "satisfies : @xmath547 for all @xmath92 .    by the definition of full inverse image we have @xmath548 in the product @xmath549 ,",
    "an automorphism of an object @xmath550 is an automorphism of @xmath551 together with an automorphism of @xmath472 .",
    "we thus obtain @xmath552 \\in { \\underline{\\lambda } } } \\ ; \\sum_{[y]\\in { \\underline{p^{-1}(x ) } } }   \\frac{1}{|{{\\rm aut}}(\\lambda)| } \\",
    ", \\frac{1}{|{{\\rm aut}}(y)|}\\ ] ] which is equal to @xmath553 , as desired .",
    "[ scalarmult1 ] given a groupoid @xmath106 and a groupoid over @xmath32 , say @xmath91 , the groupoid @xmath110 over @xmath32 satisfies @xmath111    this follows from lemma [ essinverseproduct ] .",
    "[ scalarmult2 ] given a tame groupoid @xmath106 and a tame span @xmath130 \\ar[dr ] & \\\\ y & & x } \\ ] ] then @xmath150 is tame and @xmath151    this follows from lemma [ essinverseproduct ] .      in this section",
    "we prove that our process of turning groupoids into vector spaces and spans of groupoids into linear operators is indeed a functor .",
    "we first show that the process preserves identities , then show associativity of composition , from which many other things follow , including the preservation of composition .",
    "the lemmas in this section add up to a proof of the following theorem :    [ functor ] degroupoidification is a functor from the category of groupoids and equivalence classes of tame spans to the category of real vector spaces and linear operators .",
    "as mentioned above , the proof follows from lemmas [ identities ] and [ composition ] .    [ identities ] degroupoidification preserves identities , i.e. , given a groupoid @xmath32 , @xmath554 , where @xmath555 is the identity span from @xmath32 to @xmath32 and @xmath556 is the identity operator on @xmath557 .",
    "this follows from the explicit formula given in theorem [ matrix1 ] .",
    "we now want to prove the associativity of composition of tame spans . amongst the consequences of this proposition",
    "we can derive the preservation of composition under degroupoidification . given",
    "a triple of composable spans : @xmath558_{q_t}\\ar[dr]^{p_t } & & s \\ar[dl]_{q_s}\\ar[dr]^{p_s } & & r \\ar[dl]_{q_r}\\ar[dr]^{p_r } & \\\\ z & & y & & x & & w } \\ ] ] we want to show that composing in the two possible orders@xmath559 or @xmath560will provide equivalent spans of groupoids .",
    "in fact , since groupoids , spans of groupoids , and isomorphism classes of maps between spans of groupoids naturally form a bicategory , there exists a natural isomorphism called the * associator*. this tells us that the spans @xmath559 and @xmath560 are in fact equivalent .",
    "but since we have not constructed this bicategory , we will instead give an explicit construction of the equivalence @xmath561 .",
    "[ associativity ] given a composable triple of tame spans , the operation of composition of tame spans by weak pullback is associative up to equivalence of spans of groupoids .",
    "we consider the above triple of spans in order to construct the aforementioned equivalence .",
    "the equivalence is simple to describe if we first take a close look at the groupoids @xmath559 and @xmath560 .",
    "the composite @xmath559 has objects @xmath562 such that @xmath563 , @xmath564 , @xmath565 , @xmath566 , and @xmath567 , and morphisms @xmath568 , which consist of a map @xmath569 in @xmath570 and a map @xmath571 such that the following diagram commutes : @xmath572 ^ ---{\\beta } \\ar[d]_{q_s\\pi_s(g ) } & p_t(t ) \\ar[d]^{p_t(h ) } \\\\ q_s\\pi_s((s',r',\\alpha ' ) ) \\ar[r]_---{\\beta ' } & p_t(t ' ) } \\ ] ] where @xmath573 maps the composite @xmath570 to @xmath18 .",
    "further , @xmath210 consists of a pair of maps @xmath574 and @xmath575 such that the following diagram commutes : @xmath576^{\\alpha } \\ar[d]_{q_s(k ) } & p_s(s ) \\ar[d]^{p_s(j ) } \\\\ q_r(r ' )",
    "\\ar[r]_{\\alpha ' } & p_s(s ' ) } \\ ] ]    the groupoid @xmath560 has objects @xmath577 such that @xmath578 , @xmath564 , @xmath565 , @xmath579 , and @xmath580 , and morphisms @xmath581 , which consist of a map @xmath582 in @xmath156 and a map @xmath583 such that the following diagram commutes : @xmath584_{p_r(h)}\\ar[r]^---{\\beta } & p_s\\pi_s((t , s,\\alpha ) )    \\ar[d]^{p_s\\pi_s(g ) }    \\\\",
    "p_r(r ' )   \\ar[r]_---{\\beta ' } & p_s\\pi_s((t',s',\\alpha ' ) )   } \\ ] ] further , @xmath210 consists of a pair of maps @xmath585 and @xmath586 such that the following diagram commutes : @xmath587^{\\alpha } \\ar[d]_{q_s(k ) } & p_t(t ) \\ar[d]^{p_t(j ) } \\\\ q_s(s ' ) \\ar[r]_{\\alpha ' } & p_t(t ' ) } \\ ] ]    we can now write down a functor @xmath588 : @xmath589 again , a morphism @xmath568 consists of maps @xmath574 , @xmath590 , and @xmath571 .",
    "we need to define @xmath591 .",
    "the first component @xmath592 consists of the maps @xmath593 and @xmath594 , and the following diagram commutes : @xmath587^{\\beta}\\ar[d]_{q_s(j ) } & p_t(t ) \\ar[d]^{p_t(h ) } \\\\ q_s(s ' ) \\ar[r]_{\\beta ' } & p_t(t ' ) } \\ ] ] the other component map of @xmath595 is @xmath596 and we see that the following diagram also commutes : @xmath584_{p_r(k)}\\ar[rr]^---{\\alpha } & & p_s\\pi_s((t , s,\\beta ) )   \\ar[d]^{p_s\\pi_s(g ' ) }    \\\\ p_r(r ' )   \\ar[rr]_---{\\alpha ' } & & p_s\\pi_s((t',s',\\beta ' ) )   } \\ ] ] thus , defining a morphism in @xmath560 .",
    "we now just need to check that @xmath465 preserves identities and composition and that it is indeed an isomorphism .",
    "we will then have shown that the apexes of the two spans are isomorphic .",
    "first , given an identity morphism @xmath597 , then @xmath598 is the identity morphism on @xmath599 .",
    "the components of the identity morphism are the respective identity morphisms on the objects @xmath600,@xmath601 , and @xmath602 . by the construction of @xmath465 , it is clear that @xmath598 will then be an identity morphism .    given a pair of composable maps @xmath568 and @xmath603 in @xmath559 , the composite is a map @xmath604 with components @xmath605 and @xmath606 .",
    "further , @xmath607 has component morphisms @xmath608 and @xmath609 .",
    "it is then easy to check that under the image of @xmath465 this composition is preserved .",
    "the construction of the inverse of @xmath465 is implicit in the construction of @xmath465 , and it is easy to verify that each composite @xmath610 and @xmath611 is an identity functor .",
    "further , the natural isomorphisms required for an equivalence of spans can each be taken to be the identity .",
    "it follows from the associativity of composition that degroupoidification preserves composition :    [ composition ] degroupoidification preserves composition .",
    "that is , given a pair of composable tame spans : @xmath612\\ar[dl ]   &    & s\\ar[dr]\\ar[dl ] & \\\\ z &                   & y &                  & x } \\ ] ] we have @xmath613    consider the composable pair of spans above along with a groupoid @xmath9 over @xmath32 : @xmath612\\ar[dl ]   &    & s\\ar[dr]\\ar[dl ] &   & \\psi\\ar[dr]\\ar[dl ] & \\\\ z &                   & y &                  & x &      & 1 } \\ ] ] we can consider the groupoid over @xmath32 as a span by taking the right leg to be the unique map to the terminal groupoid .",
    "we can compose this triple of spans in two ways ; either @xmath614 or @xmath615 . by the proposition [ associativity ] stated above ,",
    "these spans are equivalent . by theorem [ linops_equivspans1 ]",
    ", degroupoidification produces the same linear operators .",
    "thus , composition is preserved .",
    "that is , @xmath616      now we prove our results about the inner product of groupoids over a fixed groupoid , and the adjoint of a span :    [ innerprod_theorem ] given a groupoid @xmath32 , there is a unique inner product @xmath163 on the vector space @xmath53 such that @xmath164 whenever @xmath102 and @xmath9 are square - integrable groupoids over @xmath32 . with this inner product @xmath53",
    "is a real hilbert space .",
    "uniqueness of the inner product follows from the formula , since every vector in @xmath53 is a finite - linear combination of vectors @xmath162 for square - integrable groupoids @xmath9 over @xmath32 . to show the inner product exists ,",
    "suppose that @xmath617 are square - integrable groupoids over @xmath32 and @xmath618 for @xmath619 .",
    "then we need to check that @xmath620 implies @xmath621 the proof here closely resembles the proof of existence in theorem [ process1 ] .",
    "we leave to the reader the task of checking that @xmath53 is complete in the norm corresponding to this inner product .",
    "[ innerprod_adjoint ] given a span @xmath170_{q } \\ar[dr]^{p } & \\\\ y & & x } \\ ] ] and a pair @xmath91 , @xmath171 of groupoids over @xmath32 and @xmath42 , respectively , there is an equivalence of groupoids @xmath622    we can consider the groupoids over @xmath32 and @xmath42 as spans with one leg over the terminal groupoid @xmath218 .",
    "then the result follows from the equivalence given by associtativity in lemma [ associativity ] and theorem [ linops_equivspans1 ] .",
    "explicitly , @xmath623 is the composite of spans @xmath132 and @xmath102 , while @xmath624 is the composite of spans @xmath625 and @xmath9 .",
    "[ adjoint_comp ] given spans @xmath626_{q_t } \\ar[dr]^{p_t }   & & & s \\ar[dl]_{q_s } \\ar[dr]^{p_s } & \\\\   z & & y & y & & x   } \\ ] ] there is an equivalence of spans @xmath627    this is clear by the definition of composition .",
    "[ adjoint_add ] given spans @xmath170_{q_s } \\ar[dr]^{p_s } & & & t \\ar[dl]_{q_t } \\ar[dr]^{p_t } & \\\\ y & & x & y & & x } \\ ] ] there is an equivalence of spans @xmath628    this is clear since the addition of spans is given by coproduct of groupoids .",
    "this construction is symmetric with respect to swapping the legs of the span .",
    "[ innerprodandadjointprops ] given a groupoid @xmath106 and square - integrable groupoids @xmath102 , @xmath9 , and @xmath165 over @xmath32 , we have the following equivalences of groupoids :    1 .",
    "@xmath166 2 .",
    "@xmath167 3 .",
    "@xmath168    each part will follow easily from the definition of weak pullback .",
    "first we label the maps for the groupoids over @xmath32 as @xmath629 , @xmath630 , and @xmath631 .",
    "1 .   @xmath632 + by definition of weak pullback , an object of @xmath159 is a triple @xmath633 such that @xmath634 and @xmath635 .",
    "similarly , an object of @xmath636 is a triple @xmath637 such that @xmath638 and @xmath639 .",
    "since @xmath235 is invertible , there is an evident equivalence of groupoids .",
    "@xmath640 + recall that in the category of groupoids , the coproduct is just the disjoint union over objects and morphisms . with this",
    "it is easy to see that the definition of weak pullback will ` split ' over union .",
    "3 .   @xmath641 + this follows from the associativity ( up to isomorphism ) of the cartesian product .",
    "we thank james dolan , todd trimble , and the denizens of the @xmath8-category caf , especially urs schreiber and bruce bartlett , for many helpful conversations .",
    "ah was supported by the national science foundation under grant no .",
    "cw was supported by an fqxi grant .",
    "a * groupoid * is a category in which all morphisms are invertible .",
    "a * natural transformation * @xmath651 between functors @xmath652 consists of a morphism @xmath653 in @xmath654 for each @xmath648 such that for each morphism @xmath655 in @xmath643 the following naturality square commutes : @xmath656^{\\alpha_x } \\ar[d]_{f(h ) } & g(x ) \\ar[d]^{g(h ) } \\\\ f(x ' ) \\ar[r]_{\\alpha_{x ' } } & g(x ' ) } \\ ] ]        in what follows , and throughout the paper , we write @xmath92 as shorthand for @xmath659 .",
    "also , several places throughout this paper we have used the notation @xmath660 or @xmath661 to denote operations combining a functor @xmath465 and a natural transformation @xmath235 .",
    "these operations are called ` whiskering ' :    [ whiskering ] given groupoids @xmath32 , @xmath42 and @xmath152 , functors @xmath662 , @xmath663 and @xmath664 , and a natural transformation @xmath665 , there is a natural transformation @xmath666 called the * right whiskering * of @xmath235 by @xmath465 .",
    "this assigns to any object @xmath92 the morphism @xmath667 in @xmath152 , which we denote as @xmath668 .",
    "similarly , given a groupoid @xmath669 and a functor @xmath670 , there is a natural transformation @xmath671 called the * left whiskering * of @xmath235 by @xmath491 .",
    "this assigns to any object @xmath238 the morphism @xmath672 in @xmath669 , which we denote as @xmath673 .",
    "[ equivalence_of_groupoids ] a functor @xmath644 between groupoids is called an * equivalence * if there exists a functor @xmath674 , called the * weak inverse * of @xmath465 , and natural isomorphisms @xmath675 and @xmath676 . in this case",
    "we say @xmath32 and @xmath42 are * equivalent*.          a functor has all three of the above properties if and only if the functor is an equivalence .",
    "it is often convenient to prove two groupoids are equivalent by exhibiting a functor which is full , faithful and essentially surjective .",
    "[ map ] a * map * from the span of groupoids @xmath130_{q } \\ar[dr]^{p }    \\\\ y & & x   } \\ ] ] to the span of groupoids @xmath680_{q ' } \\ar[dr]^{p ' }    \\\\ y & & x   } \\ ] ] is a functor @xmath681 together with natural transformations @xmath682 , @xmath683 .",
    "[ equivalence ] an * equivalence * of spans of groupoids @xmath130_{q } \\ar[dr]^{p } &   & & s'\\ar[dl]_{q ' } \\ar[dr]^{p ' } & \\\\ y & & x & y & & x } \\ ] ] is a map of spans @xmath684 from @xmath18 to @xmath685 together with a map of spans @xmath686 from @xmath685 to @xmath18 and natural isomorphisms @xmath687 and @xmath688 such that the following equations hold : @xmath689      from a functor @xmath644 between groupoids , we can obtain a function @xmath690 . if @xmath465 is an equivalence",
    ", @xmath691 is a bijection .",
    "since these are the indexing sets for the sum in the definition of groupoid cardinality , we just need to check that for a pair of elements @xmath139 \\in { \\underline{x}}$ ] and @xmath692 \\in { \\underline{y}}$ ] such that @xmath693 ) = [ y]$ ] , we have @xmath694 .",
    "this follows from @xmath465 being full and faithful , and that the cardinality of automorphism groups is an invariant of an isomorphism class of objects in a groupoid .",
    "thus , @xmath695 given a diagram of groupoids @xmath696 where @xmath465 is an equivalence of groupoids , the restriction of @xmath465 to the full inverse image @xmath697 @xmath698 is an equivalence of groupoids , for any object @xmath699 .",
    "it is sufficient to check that @xmath700 is a full , faithful , and essentially surjective functor from @xmath697 to @xmath701 .",
    "first we check that the image of @xmath700 indeed lies in @xmath701 .",
    "given @xmath702 and @xmath703 , there is a morphism @xmath704 in @xmath369 . since @xmath705 $ ] , then @xmath706 $ ] .",
    "it follows that @xmath707 .",
    "next we check that @xmath700 is full and faithful .",
    "this follows from the fact that full inverse images are full subgroupoids .",
    "it is clear that a full and faithful functor restricted to a full subgroupoid will again be full and faithful .",
    "we are left to check only that @xmath700 is essentially surjective .",
    "let @xmath708 . then , since @xmath465 is essentially surjective , there exists @xmath709 such that @xmath710 $ ] . since @xmath706 $ ] and there is an isomorphism @xmath711 , it follows that @xmath712 .",
    "so @xmath700 is essentially surjective .",
    "we have shown that @xmath700 is full , faithful , and essentially surjective , and , thus , is an equivalence of groupoids .      given groupoids @xmath32 and @xmath42 ,",
    "a * cospan * from @xmath32 to @xmath42 is a diagram @xmath713_g &   & x\\ar[dl]^f\\\\    & z &   \\\\ } \\ ] ] where @xmath152 is groupoid and @xmath714 and @xmath715 are functors .",
    "we next prove a lemma stating that the weak pullbacks of equivalent cospans are equivalent .",
    "weak pullbacks , also called _ iso - comma objects _ , are part of a much larger family of limits called _ flexible limits_. to read more about flexible limits , see the work of street @xcite and bird @xcite . a vastly more general theorem than the one we intend to prove holds in this class of limits .",
    "namely : for any pair of parallel functors @xmath716 from an indexing category to @xmath717 with a pseudonatural equivalence @xmath718 , the pseudo - limits of @xmath465 and @xmath17 are equivalent . but to make the paper self - contained , we strip this theorem down and give a hands - on proof of the case we need .    to show that equivalent cospans of groupoids have equivalent weak pullbacks",
    ", we need to say what it means for a pair of cospans to be equivalent .",
    "as stated above , this means that they are given by a pair of parallel functors @xmath716 from the category consisting of a three - element set of objects @xmath719 and two morphisms @xmath720 and @xmath721 .",
    "further there is a pseudonatural equivalence @xmath722 . in simpler terms",
    ", this means that we have equivalences @xmath723 for @xmath724 , and squares commuting up to natural isomorphism : @xmath725    for ease of notation we will consider the equivalent cospans : @xmath713_{g } & & x\\ar[dl]^{f } & \\hat{y}\\ar[dr]_{\\hat{g } } & & \\hat{x}\\ar[dl]^{\\hat{f } } \\\\ & z & & & \\hat{z } & } \\ ] ] with equivalences @xmath726 , @xmath727 , and @xmath728 and natural isomorphisms @xmath729 and @xmath730 .    [",
    "skeletal ] given equivalent cospans of groupoids as described above , the weak pullback of the cospan @xmath713_{g } & & x\\ar[dl]^{f } \\\\ & z &   } \\ ] ] is equivalent to the weak pullback of the cospan @xmath731_{\\hat{g } } & & \\hat{x}\\ar[dl]^{\\hat{f } } \\\\ & \\hat{z } &   } \\ ] ]    we construct a functor @xmath465 between the weak pullbacks @xmath732 and @xmath733 and show that this functor is an equivalence of groupoids , i.e. , that it is full , faithful and essentially surjective .",
    "we recall that an object in the weak pullback @xmath732 is a triple @xmath734 with @xmath735 , @xmath736 and @xmath737 .",
    "a morphism in @xmath738 in @xmath732 is given by a pair of morphisms @xmath739 in @xmath32 and @xmath740 in @xmath42 such that @xmath741 .",
    "we define @xmath742 on objects by @xmath743 and on a morphism @xmath744 by sending @xmath40 to @xmath745 and @xmath201 to @xmath746 . to check that this functor is well - defined we consider the following diagram : @xmath747^{v_r}\\ar[d]_{\\hat{f}\\hat{x}(j ) } & \\hat{z}f(r)\\ar[r]^{\\hat{z}(\\alpha)}\\ar[d]_{\\hat{z}f(j ) } & \\hat{z}g(s)\\ar[r]^{w_s^{-1}}\\ar[d]^{\\hat{z}g(k ) } & \\hat{g}\\hat{y}(s)\\ar[d]^{\\hat{g}\\hat{y}(k)}\\\\ \\hat{f}\\hat{x}(r')\\ar[r]_{v_{r ' } } & \\hat{z}f(r')\\ar[r]_{\\hat{z}(\\alpha ' ) } & \\hat{z}g(s')\\ar[r]_{w_{s'}^{-1 } } & \\hat{g}\\hat{y}(s ' ) } \\ ] ] the inner square commutes by the assumption that @xmath744 is a morphism in @xmath732 .",
    "the outer squares commute by the naturality of @xmath11 and @xmath748 . showing that @xmath465 respects identities and composition is straightforward .",
    "we first check that @xmath465 is faithful .",
    "let @xmath749 be morphisms in @xmath732 such that @xmath750 .",
    "assume @xmath744 consists of morphisms @xmath751 , @xmath585 and @xmath752 consists of morphisms @xmath753 and @xmath754 .",
    "it follows that @xmath755 and @xmath756 .",
    "since @xmath757 and @xmath758 are faithful we have that @xmath759 and @xmath760 .",
    "thus , we have shown that @xmath761 and @xmath465 is faithful .    to show that @xmath465 is full , we assume @xmath734 and @xmath762 are objects in @xmath732 and @xmath763 is a morphism in @xmath733 consisting of morphisms @xmath764 and @xmath765 .",
    "since @xmath757 and @xmath758 are full , there exist morphisms @xmath766 and @xmath767 such that @xmath768 and @xmath769 .",
    "we consider the following diagram : @xmath770^{v_r^{-1 } } \\ar[d]_{\\hat{z}(f(\\tilde{j } ) ) } & \\hat{f}\\hat{x}(r)\\ar[r]^{\\hat{z}(\\alpha)}\\ar[d]_{\\hat{f}\\hat{x}(\\tilde{j } ) } & \\hat{g}\\hat{y}(s)\\ar[r]^{w_s}\\ar[d]^{\\hat{g}\\hat{y}(\\tilde{k } ) } & \\hat{z}(g(s ) ) \\ar[d]^{\\hat{z}(g(\\tilde{k } ) ) } \\\\ \\hat{z}(f(r'))\\ar[r]_{v_{r'}^{-1 } } & \\hat{f}\\hat{x}(r ' ) \\ar[r]_{\\hat{z}(\\alpha ' ) } & \\hat{g}\\hat{y}(s')\\ar[r]_{w_s } & \\hat{z}(g(s ' ) ) } \\ ] ] the center square commutes by the assumption that @xmath744 is a morphism in @xmath733 , and the outer squares commute by naturality of @xmath11 and @xmath748 .",
    "since @xmath771 is full , there exists morphisms @xmath772 and @xmath773 such that @xmath774 and @xmath775 .",
    "now since @xmath771 is faithful , we have that @xmath776^{\\bar{\\alpha } } \\ar[d]_{f(\\tilde{j } ) } & g(s ) \\ar[d]^{g(\\tilde{k } ) } \\\\ f(r ' ) \\ar[r]_{\\bar{\\alpha ' } } & g(s ' ) } \\ ] ] commutes .",
    "hence , @xmath465 is full .    to show @xmath465 is essentially surjective we let @xmath734 be an object in @xmath733 .",
    "since @xmath757 and @xmath758 are essentially surjective , there exist @xmath777 and @xmath778 with isomorphisms @xmath779 and @xmath780 .",
    "we thus have the isomorphism : @xmath781 since @xmath771 is full , there exists an isomorphism @xmath782 such that @xmath783 .",
    "we have constructed an object @xmath784 in @xmath732 and we need to find an isomorphism from @xmath785 to @xmath734 .",
    "this morphism consists of @xmath779 and @xmath780 . that this is an isomorphism follows from @xmath786 being isomorphisms and the following calculation : @xmath787 we have now shown that @xmath465 is essentially surjective , and thus an equivalence of groupoids .",
    "j.  dolan and j.  baez , categorification , in _ higher category theory , _ eds .",
    "e.  getzler and m.  kapranov , contemp .",
    "230 , american mathematical society , providence , rhode island , 1998 , pp .",
    "136 . also available as http://arxiv.org/abs/math/9802029[arxiv:math/9802029 ] .",
    "j.  baez and j.  dolan , from finite sets to feynman diagrams , in _",
    "mathematics unlimited2001 and beyond _ , eds .",
    "b.  engquist and w.  schmid , springer , berlin , 2001 , pp .",
    "2950 . also available as http://arxiv.org/abs/math/0004133[arxiv:math/0004133 ] .",
    "j.  bernstein , i.  frenkel and m.  khovanov , a categorification of the temperley ",
    "lieb algebra and schur quotients of @xmath791 via projective and zuckerman functors , ( 1999 ) , 199241 . also available as http://arxiv.org/abs/math/0002087[arxiv:math/0002087 ] .",
    "l.  crane and i.  frenkel , four - dimensional topological quantum field theory , hopf categories , and the canonical bases , _ jour .",
    "* 35 * ( 1994 ) , 51365154 . also available as http://arxiv.org/abs/hep-th/9405183[arxiv:hep-th/9405183 ]",
    "p.  garrett , _ buildings and classical groups _ , crc press , new york , 1997 .",
    "preliminary version available at http://www.math.umn.edu/~garrett/m/buildings/[@xmath788http://www.math.umn.edu/@xmath789garrett/m/buildings/@xmath790 .",
    "m.  khovanov and a.  d.  lauda , a diagrammatic approach to categorification of quantum groups i , _ represent .",
    "theory _ * 13 * ( 2009 ) , 309347 . also available as http://arxiv.org/abs/0803.4121[arxiv:0803.4121 ] .",
    "m.  kim , a lefschetz trace formula for equivariant cohomology , _ ann .",
    "sci .  cole norm .",
    "( 4 ) _ * 28 * ( 1995 ) , no . 6 , 669688 . also available at http://www.numdam.org/numdam-bin/fitem?id=asens_1995_4_28_6_669_0[@xmath788http://www.numdam.org@xmath790 .          paddy mccrudden , balanced coalgebroids , _ _ th .",
    "appl .  cat .",
    "_ _ * 7 * ( 2000 ) , 71147 .",
    "available at http://www.tac.mta.ca/tac/volumes/7/n6/7-06abs.html[@xmath788http://www.tac.mta.ca/tac/volumes/7/n6/7-06abs.html@xmath790 .",
    "c.  ringel , hall algebras revisited , _ _ israel math .",
    "conf .  proc .",
    "_ _ * 7 * ( 1993 ) , 171176 .",
    "also available at http://www.mathematik.uni-bielefeld.de/~ringel/opus/hall-rev.pdf[@xmath788http://www.mathematik.uni-bielefeld.de/@xmath789ringel/opus/hall-rev.pdf@xmath790 ."
  ],
  "abstract_text": [
    "<S> groupoidification is a form of categorification in which vector spaces are replaced by groupoids and linear operators are replaced by spans of groupoids . </S>",
    "<S> we introduce this idea with a detailed exposition of ` degroupoidification ' : a systematic process that turns groupoids and spans into vector spaces and linear operators . </S>",
    "<S> then we present three applications of groupoidification . </S>",
    "<S> the first is to feynman diagrams . </S>",
    "<S> the hilbert space for the quantum harmonic oscillator arises naturally from degroupoidifying the groupoid of finite sets and bijections . </S>",
    "<S> this allows for a purely combinatorial interpretation of creation and annihilation operators , their commutation relations , field operators , their normal - ordered powers , and finally feynman diagrams . </S>",
    "<S> the second application is to hecke algebras . </S>",
    "<S> we explain how to groupoidify the hecke algebra associated to a dynkin diagram whenever the deformation parameter @xmath0 is a prime power . </S>",
    "<S> we illustrate this with the simplest nontrivial example , coming from the @xmath1 dynkin diagram . in this example </S>",
    "<S> we show that the solution of the yang  </S>",
    "<S> baxter equation built into the @xmath1 hecke algebra arises naturally from the axioms of projective geometry applied to the projective plane over the finite field @xmath2 . </S>",
    "<S> the third application is to hall algebras . </S>",
    "<S> we explain how the standard construction of the hall algebra from the category of @xmath2 representations of a simply - laced quiver can be seen as an example of degroupoidification . </S>",
    "<S> this in turn provides a new way to categorify  or more precisely , groupoidify  the positive part of the quantum group associated to the quiver . </S>"
  ]
}
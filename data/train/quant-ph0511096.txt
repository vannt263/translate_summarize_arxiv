{
  "article_text": [
    "since shor s breakthrough discovery in 1994 @xcite , quantum algorithms with an exponential speedup over the best known classical algorithms have been shown for a number of problems ( e.g. , @xcite ) .",
    "all these problems and algorithms share some common features : the problems are group or number theoretic in nature and the key component of each algorithm is the quantum fourier transform . arguably , the greatest challenge of quantum computation is the discovery of new algorithmic techniques .    in this paper",
    "we describe a polynomial time quantum algorithm that approximates the @xmath9p - hard problem of evaluating the jones polynomial at certain roots of unity .",
    "the best classical algorithm for this problem is exponential .",
    "our algorithm is significantly different from all previously known quantum algorithms that achieve an exponential speed up in the following three important ways : 1 ) it solves a problem which is combinatorial rather than group or number theoretic in nature , 2 ) it does so not by using the fourier transform , but instead , by exploiting a certain structure of the problem and encoding it into the nature of the unitary gates being used , and 3 ) it solves a problem that is bqp - hard @xcite , that is , a problem that captures all the power of the quantum model .    the connection between quantum computation and the jones polynomial was first made through the series of papers @xcite . a model of quantum computation based on topological quantum field theory ( @xmath1 ) and chern - simons theory was defined in @xcite , and kitaev , larsen , freedman and wang showed that this model is polynomially equivalent in computational power to the standard quantum computation model in @xcite .",
    "these results , combined with a deep connection between @xmath1 and the value of the jones polynomial at particular roots of unity discovered by witten @xmath10 years ago @xcite , implicitly implies an efficient quantum algorithm for the approximation of the jones polynomial at the value @xmath2 .",
    "this connection is also discussed , from the point of view of @xmath1 , in preskill s notes @xcite .",
    "unfortunately , the important quantum algorithm implied by these intriguing results , though referred to in @xcite , was never explicitly formulated .    in this paper",
    "we use a different route to connect quantum computation and the jones polynomial , one that does not involve @xmath1 .",
    "we present an explicit and simple to state algorithm for the above problem , which is based purely on algebraic results from more than @xmath10 years ago .",
    "moreover , our algorithm works for all roots of unity of the form @xmath6 , going beyond the discussions in previous works involving only constant @xmath8 s .",
    "we now describe the precise problem that we solve .",
    "a central issue in low dimensional topology is that of _ knot invariants_. a knot invariant is a function on knots ( or links i.e .",
    "circles embedded in @xmath11 ) which is invariant under isotopy of the link , i.e. , it does not change under stretching , moving , etc . , but no cutting . in @xmath0 , jones @xcite discovered a new knot invariant , now called the jones polynomial @xmath12 , which is a laurent polynomial in @xmath13 with integer coefficients , and which is an invariant of the link @xmath14 .",
    "in addition to the important role it has played in low dimensional topology , the jones polynomial has found applications in numerous fields , from @xmath15 recombination @xcite , to statistical physics @xcite .",
    "the jones polynomial can also be defined as a function of braids .",
    "a braid of @xmath4 strands and @xmath5 crossings is described pictorially by @xmath4 strands hanging alongside each other , with @xmath5 crossings , each of two adjacent strands .",
    "a braid may be `` closed '' to form a link by tying its ends together . in this paper",
    "we will be interested in two ways to perform such closures , namely , the _ trace closure _ and the _ plat closure _ ( to be defined later )",
    ". we will be interested in the jones polynomial of links that are trace or plat closures of braids .",
    "the essential aspect of the jones polynomial of a link @xmath14 can be computed by the following process : project @xmath14 to the plane keeping track crossings to get what is called a _",
    "link diagram_. now replace every crossing @xmath16 by a particular linear combination ( with coefficients being functions of the parameter @xmath17 ) of the pictures @xmath18 and @xmath19 .",
    "the result is a linear combination of diagrams containing only closed loops .",
    "replace each of these diagrams with a particular function of the parameter @xmath17 and the number of loops .",
    "the resulting function of @xmath17 is a scaled version of the jones polynomial @xmath12 .    from the moment of the discovery of the jones polynomial ,",
    "the question of how hard it is to compute was important .",
    "there is a very simple inductive algorithm ( essentially due to conway @xcite ) to compute it by changing crossings in a link diagram , but , naively applied , this takes exponential time in the number of crossings .",
    "it was shown @xcite that the computation of @xmath12 is @xmath9p - hard for all but a few values of @xmath17 where @xmath12 has an elementary interpretation .",
    "thus a polynomial time algorithm for computing @xmath12 for any value of @xmath17 other than those elementary ones is unlikely .",
    "of course , the @xmath9p - hardness of the problem does not rule out the possibility of good approximations ; see , e.g. , @xcite .",
    "still , the best classical algorithms to approximate the jones polynomial at all but trivial values are exponential .",
    "we show an efficient , explicit , and simple quantum algorithm to approximate the jones polynomial at all points of the form @xmath20 .",
    "it will in fact be easier to use the parameter @xmath21 .",
    "we prove the following for the trace closure @xmath22 and the plat closure @xmath23 of a braid @xmath24 :    [ thm : maintrace ] for a given braid @xmath24 with @xmath4 strands and @xmath5 crossings , and a given integer @xmath8 , there is a quantum algorithm which is polynomial in @xmath25 which with all but exponentially small probability , outputs a complex number @xmath26 with @xmath27 where @xmath28 , and @xmath29 is inverse polynomial in @xmath30 .",
    "[ thm : mainplat ] for a given braid @xmath24 with @xmath4 strands and @xmath5 crossings , and a given integer @xmath8 , there is a quantum algorithm which is polynomial in @xmath25 which with all but exponentially small probability , outputs a complex number @xmath26 with @xmath31 where @xmath28 and @xmath29 is inverse polynomial in @xmath30 ( @xmath32 is an exponentially large factor to be defined later ) .",
    "we remark that the approximation we provide here is additive , namely the result lies in a given window , whose size is independent of the actual value we are trying to approximate .",
    "this of course is much weaker than a multiplicative approximation , which is what one might desire ( see discussion in @xcite ) .",
    "one might wonder if under such weak requirements , the problem remains meaningful at all .",
    "it turns out that , in fact , this additive approximation problem is hard for quantum computation :    * adapted from freedman , larsen and wang @xcite * [ thm : universal ] the problem of approximating the jones polynomial of the plat closure of a braid at @xmath6 for constant @xmath8 , to within the accuracy given in theorem [ thm : mainplat ] , is @xmath3-hard .",
    "this result was recently strengthened by aharonov and arad @xcite to any @xmath8 which is polynomial in the size of the input , namely , for all the plat closure cases for which our algorithm is polynomial in the size of the braid .",
    "curiously , the hardness results of @xcite are not known to hold ( regardless of @xmath8 ) for the approximation of the trace closure for which we give an algorithm as well .",
    "we discuss the difference between the two problems in the open questions section .",
    "the essence of the algorithm lies in the fact that for braids with @xmath4 strands , the pictures that one gets by replacing each crossing by one of the two pictures @xmath33 , can be assigned the structure of an algebra .",
    "this algebra is called the temperley lieb algebra , and denoted by @xmath34 .",
    "in fact , the map from the crossing to the appropriate linear combination of the above two pictures defines a _ representation _ of the group @xmath35 of braids of @xmath4 strands , inside the @xmath34 algebra .",
    "the jones polynomial of the trace closure of a braid can be seen as a certain trace function ( i.e. , a linear function satisfying @xmath36 ) on the image of the braid in the @xmath34 algebra .",
    "our goal is then to design an algorithm that approximates this trace . to this end",
    "we use an important fact about this trace : it satisfies an additional property called the _",
    "markov property_. moreover , this property makes it unique ; any trace function on the @xmath34 algebra ( or a representation of it ) that satisfies this property is equal to the above trace ! this leads us to the key idea of the algorithm : suppose we can define a representation of the @xmath34 algebra by matrices operating on qubits , and we can identify and estimate the trace that satisfies the markov property on this representation .",
    "then by the uniqueness of this trace we can estimate the jones polynomial .",
    "but what is the representation that should be used ?",
    "if our intent is to design a quantum algorithm , it is best if the representation induced on the braid group be unitary , so that we can hope to approximate its trace by a quantum computer . fortunately , it is in fact possible to give representations of the temperley lieb algebra which induce _ unitary _ representations of the braid group .",
    "such representations were constructed in @xcite and are called the _ path model _ representations .",
    "if we want to evaluate the jones polynomial @xmath12 for @xmath14 a closure of a braid in @xmath35 , and @xmath20 , we use the @xmath8th path model representation of @xmath35 .",
    "it is fairly straight forward to adapt these representations to work on the space of @xmath4 qubits , and moreover , to show that the resulting unitary matrices ( namely , the images of the generators of the braid group ) can be applied efficiently by a quantum computer .",
    "we find that the image ( by the path model representation ) of an entire braid @xmath24 can be applied efficiently by a quantum computer .",
    "let us call the unitary matrix corresponding to a braid @xmath37 .",
    "to approximate the jones polynomial of a trace closure of the braid , it suffices to approximate the markov trace of @xmath37 .",
    "this is done using standard quantum and classical algorithmic techniques , including the well known @xmath38 test .",
    "the algorithm for the plat closure builds on similar ideas , though it is not directly stated in terms of traces .",
    "thus we obtain a polynomial quantum algorithm for the @xmath3-complete problem of approximating the jones polynomial of a plat closure of a braid .",
    "we remark that after we completed this work , we learned about a previous independent attempt to prove similar results @xcite .",
    "unfortunately , the work of @xcite is greatly flawed , and in particular claims to provide an exact solution to the @xmath39-hard problem .",
    "we have provided a simple algorithm for a @xmath3-complete problem , which is different in its methods than previous quantum algorithms .",
    "in essence , what it does is to isolate a certain local structure of the problem , and assign gates which somehow exhibit the same local structure .",
    "our hope is that this more combinatorial direction in quantum algorithms will lead to further progress in the area .",
    "in particular , one very interesting related question is an important problem from mathematical physics : that of approximating the partition function of the potts model @xcite , which is known to be tightly connected to the jones polynomial @xcite , and its exact evaluation is once again @xmath9p - hard @xcite .",
    "we hope that the results of this paper will lead to progress in this question , or in other questions related to approximating @xmath39-complete problems .",
    "we briefly discuss the relation between the plat and the trace closures problems .",
    "it is known that any plat closure of a braid can be transformed efficiently into a trace closure of some other braid @xcite .",
    "the reader might therefore find it curious that one of these problems is @xmath3-complete , while the other one is not known to be so .",
    "the explanation lies in the fact that the quality of the approximation in both algorithms depends _ exponentially _ on the number of strands in the braid .",
    "the transformation from plat to trace closures requires , in the worst case , a significant increase in the number of strands .",
    "this , unfortunately , degrades the quality of the approximation exponentially .",
    "the computational complexity of the trace closure problem is left open .    finally , we believe that this paper helps to clarify and demystify ( at least one direction of ) the intriguing equivalence between quantum computation and the problem of approximating the jones polynomial .",
    "we hope this connection leads to a deeper understanding of quantum computation complexity .",
    "* organization of paper : * section [ sec : background ] provides the background and the necessary definitions , starting from quantum computation , the @xmath38 test , the braid group , algebras and representations , the jones polynomial , the temperley lieb algebras and the path model representation . using these notions we describe the algorithms in section [ sec : alg ] and prove their correctness .",
    "for background on quantum computation , see @xcite .",
    "we merely mention here that , strictly speaking , we use here a quantum - classical hybrid model of computation , in which a classical probabilistic turing machine performs calls to a quantum computer , and uses its outcomes to perform some classical computations .",
    "it is standard that this model can be simulated efficiently by the standard quantum computation model .",
    "the following fact is standard in quantum computation .",
    "if a state @xmath40 can be generated efficiently , and a unitary @xmath41 can be applied efficiently , then there exists an efficient quantum circuit whose output is a random variable @xmath42 , and whose expectation is @xmath43 .",
    "start with the two - register state @xmath44 , apply @xmath41 conditioned on the first qubit to get the state @xmath45 if the measurement result is @xmath46 , @xmath47 if the measurement result is @xmath48 .",
    "the expectation of the output is exactly @xmath49 . to get a random variable",
    "whose expectation is the imaginary part , start with the state @xmath50 instead .",
    "an algebra is a vector space with a multiplication .",
    "the multiplication must be associative and distributive .",
    "a representation of a group @xmath51 inside an algebra is a group homomorphism @xmath52 from @xmath51 to the group of invertible elements in the algebra , namely , we require @xmath53 for any @xmath54 .",
    "we say a representation is reducible if there exists a proper subspace of vectors which is invariant under the group action .",
    "if there is no such subspace , we say the representation is irreducible .",
    "we shall sometimes refer to a representation of g without specifying the algebra ; in these cases we shall mean a representation inside the algebra of @xmath55 matrices",
    ". we shall be interested in algebra representations as well :    an @xmath26 dimensional representation @xmath56 of an algebra is a linear mapping from the algebra into the set of @xmath57 complex matrices @xmath58 , such that for any two elements @xmath59 in the algebra , @xmath60 .",
    "if a group is represented inside an algebra then any representation of the algebra gives a representation of the group by composition .",
    "often , an algebra or a group is defined using a set of generators and relations between them . in this case",
    ", a representation may be defined by specifying the images of the generators , provided the same relations hold for the images as for the generators .",
    "consider two horizontal bars , one on top of the other , with n pegs on each . by an _",
    "n strand braid _ we shall mean a set of n strands such that : ( 1 ) each strand is tied to one peg on the top bar and one peg on the bottom bar , ( 2 ) every peg has exactly one end attached to it , ( 3 ) the strands may pass over and under each other , ( 4 ) the tangent vector of every strand at any point along the path from top to bottom always has a non - zero component in the downward direction .",
    "here is an example of a 4-strand braid : @xmath61 the set of n - strand braids , @xmath35 , has a group structure with multiplication as follows . given two n - strand braids @xmath62 , place braid @xmath63 above @xmath64 , remove the bottom @xmath63 bar and the top @xmath64 bar and fuse the bottom of the @xmath63 strands to the top of the @xmath64 strands .",
    "the product of the above 4-strand braid with the 4-strand braid @xmath65 is : @xmath66    an algebraic presentation of the braid group due to artin is as follows @xcite : let @xmath35 be the group with generators @xmath67 and relations    1 .",
    "@xmath68 for @xmath69 , 2 .",
    "@xmath70 .",
    "this algebraic description corresponds to the pictorial picture of braids : @xmath71 corresponds to the pictorial braid @xmath72 , and concatenating such pictures gives a general braid in @xmath35 .",
    "[ d:1 ] given @xmath4 an integer and @xmath73 a complex number we define the temperley - lieb algebra @xmath74 to be the algebra generated by @xmath75 with relations    1 .",
    "@xmath76 , @xmath77 , 2 .",
    "@xmath78 , 3 .",
    "@xmath79 .",
    "there is a well known geometric description of @xmath74 due to kauffman @xcite .",
    "it uses the notion of kauffman @xmath4-diagrams , which is best explained by an example , e.g. , a kauffman @xmath80-diagram : @xmath81 in general , a kauffman @xmath4-diagram is a diagram as above , with @xmath4 top pegs and @xmath4 bottom pegs , and no crossings and no loops . more formally :    let @xmath82 be a rectangle with @xmath4 marked points on the top of the boundary and @xmath4 marked points on the bottom .",
    "kauffman n - diagram _ is a picture sitting inside @xmath82 consisting of @xmath4 non - intersecting curves that begin and end at distinct marked boundary points .",
    "we will consider two such diagrams equal if they are isotopically equivalent ( keeping the boundary fixed ) .",
    "we define a vector space over these diagrams :    let @xmath83 be the vector space of complex linear combinations of kauffman n - diagrams .",
    "multiplication of two kauffman n - diagrams is done just like in the case of braids . to multiply a diagram @xmath84 with a diagram @xmath85 we stack @xmath84 on top of @xmath85 , and fuse the matching ends of the strands .",
    "the resulting diagram is a new kauffman diagram @xmath86 with possibly some extra closed loops .",
    "we define the product of @xmath84 and @xmath85 to be @xmath87 where @xmath5 is the number of extra closed loops . for example , a multiplication of the above kauffman 4-diagram with the kauffman 4-diagram @xmath88 results in :    @xmath89    this multiplication rule can be extended linearly to @xmath83 , we call the resulting algebra @xmath90 .    the algebras @xmath74 and @xmath90 are isomorphic :    the map @xmath91 given by the homomorphic extension of @xmath92 is an isomorphism .",
    "it is a simple and fun exercise to check that the image of the relations given in definition [ d:1 ] are relations in @xmath90 . for the remaining details see @xcite .",
    "we shall refer to the pictures of the form @xmath18 , which generate @xmath93 , as _",
    "we define a mapping from the braid group to @xmath74 :    [ def : embed ] @xmath95 is defined by @xmath96    [ cl : embed ] for a complex number @xmath97 which satisfies @xmath28 , the mapping @xmath98 is a representation of the braid group @xmath35 inside @xmath94 .",
    "we need to check that the relations of the braid group are satisfied by this mapping . for @xmath99",
    ", @xmath100 commutes with @xmath101 since @xmath102 commutes with @xmath103 . to show that @xmath104 , substitute to get an expression in @xmath102 s .",
    "opening up the first expression we get @xmath105 .",
    "the second expression gives @xmath106 .",
    "we remove similar terms , and using the relations of the @xmath94 it remains to show that @xmath107 .",
    "this holds because the constants are @xmath108 due to the relation between @xmath73 and @xmath97 .",
    "given a representation @xmath109 of @xmath94 , we may use the representation of the braid group inside the @xmath94 algebra ( definition [ def : embed ] ) to derive a representation of @xmath35 by composition , as follows . define the map @xmath110 by specifying its operation on the generators @xmath111 of @xmath35 to be @xmath112 .",
    "this representation is unitary under certain constraints :    [ cl : braidrepunitary ] if @xmath113 and @xmath114 are hermitian for all @xmath115 , then the map @xmath110 is a unitary representation of @xmath35 .",
    "@xmath116 .      for this paper ,",
    "we define a tangle to be a braid in which some of its crossings have been replaced by a picture of the form @xmath117 .",
    "braids and kauffman diagrams are tangles .",
    "we can connect up the endpoints of a braid in a variety of ways to get links .",
    "we single out two such ways :    the _ trace closure _ of a braid @xmath24 shall be the link achieved by connecting the strand at the rightmost top peg , around to the right , to the strand at the rightmost bottom peg , then connecting in the same way the next to rightmost top and bottom strands and so on .",
    "we denote the resulting link by @xmath22 .",
    "the _ plat closure _ of a @xmath118-strand braid shall be the link formed by connecting pairs of adjacent strands ( beginning at the leftmost strand ) , on both the top and bottom .",
    "we denote the resulting link by @xmath23 .",
    "examples of the trace closure and the plat closure of the same 4-strand braid are : @xmath119    these closures are also well defined for tangles .      a definition of the jones polynomial @xmath12 due to kauffman @xcite is as follows .",
    "we start by defining the kauffman bracket @xmath120 as a polynomial in @xmath97 for @xmath97 such that @xmath121 .",
    "consider a link @xmath14 , given by a link diagram .",
    "a state @xmath122 of @xmath14 shall mean a choice , at each crossing @xmath123 of @xmath14 , from the set @xmath124 . to a state @xmath122 of a link @xmath14",
    "we associate the following expression @xmath125 : let @xmath126 ( respectively @xmath127 ) be the number of crossings for which @xmath128 chooses @xmath129 ( respectively @xmath130 ) .",
    "let @xmath131 be the number of closed loops in the diagram gotten by replacing each crossing @xmath123 by the choice indicated by the state @xmath128 .",
    "define @xmath132 the kauffman bracket polynomial , also called the bracket state sum , for @xmath14 , is defined to be    @xmath133    to define the jones polynomial , we consider oriented links , namely links with one arrow on each connected component .",
    "the connection between the jones polynomial and the kauffman bracket is given by a notion called the _ writhe _ :    for an oriented link @xmath14 , assign to each crossing that looks like this @xmath134 the value @xmath135 , and to each crossing that looks like this : @xmath136 the value @xmath47 .",
    "the writhe of @xmath14 is the sum over all the crossings of these signs .",
    "[ def : jones ] the jones polynomial of an oriented link @xmath14 is defined to be @xmath137 where @xmath138 is the writhe of the oriented link @xmath14 , and @xmath120 is the bracket state sum of the link @xmath14 , ignoring the orientation .    thus , the jones polynomial is a scaled version of the bracket polynomial .",
    "moreover , the writhe of a link can be easily calculated from the link diagram , and hence the problem of calculating the bracket sum polynomial is equivalent in complexity to that of calculating the jones polynomial .      a linear function from an algebra to the complex numbers is called a _ trace _ if it satisfies @xmath139 for every two elements @xmath59 in the algebra .",
    "we define the following trace on @xmath90 .",
    "the _ markov trace _",
    "@xmath140 is defined on a kauffman n - diagram @xmath141 as follows .",
    "connect the top @xmath4 labeled points to the bottom @xmath4 labeled points of @xmath141 with non - intersecting curves , as in the trace closure .",
    "let @xmath142 be the number of loops of the resulting diagram .",
    "define @xmath143 .",
    "extend @xmath144 to all of @xmath90 by linearity .",
    "for example :    @xmath145    since @xmath74 and @xmath90 are isomorphic , @xmath144 induces a trace on @xmath74 ; for simplicity we shall denote this map by @xmath144 as well .",
    "[ cl : properties ] @xmath144 satisfies the following three properties :    1 .",
    "@xmath146 , 2 .",
    "@xmath147 for any @xmath148 , 3 .   if @xmath149 then @xmath150 .",
    "it is straightforward to verify this by examining the appropriate pictures in @xmath90 .    of particular importance",
    "is the third property , which is referred to as the _ markov _ property .",
    "these three properties uniquely determine a linear map on @xmath74 :    @xcite[lem : markovunique ] there is a unique linear function @xmath144 on @xmath74 ( and on any representation of it ) that satisfies properties @xmath151 .    by a reduced word @xmath152",
    "we shall mean a word in the set @xmath153 that is not equal to @xmath154 for any @xmath155 a constant and @xmath156 a word of smaller length . using the relations of @xmath74 and applying simple combinatorial arguments",
    ", we show that a reduced word @xmath157 contains at most one @xmath158 term .",
    "we induct on @xmath4 .",
    "clearly the only reduced words in @xmath159 are @xmath160 and @xmath161 .",
    "assume the statement is true for reduced words in @xmath162 .",
    "suppose there exists a reduced word @xmath157 containing more than one @xmath158 term .",
    "write @xmath163 with @xmath164 a word without @xmath158 .",
    "since @xmath164 must be reduced and is in @xmath162 , the induction hypothesis implies @xmath164 contains at most one @xmath165 term .",
    "if @xmath164 does not contain a @xmath165 term , @xmath166 and it commutes with @xmath158 so we have @xmath167 which shows that @xmath168 was not reduced . otherwise we can write @xmath169 with @xmath170 both words in @xmath171 .",
    "it follows therefore that @xmath172 and @xmath173 commute with @xmath158 and thus @xmath174 which again shows that @xmath168 was not reduced .",
    "we conclude that any reduced word in @xmath74 contains at most one @xmath158 term .    given @xmath175 a reduced word we write @xmath176 with @xmath177 , @xmath178",
    ". then @xmath179 , the first equality by property 2 , the second by property 3 .",
    "thus for any word @xmath157 we can reduce the trace computation to the trace of a word @xmath180 .",
    "iterating this process , ( and using the fact that @xmath181 ) , we see that the trace of a word in @xmath74 is uniquely determined by the relations 1.-3 . since the trace is linear , the result follows .",
    "we have the following convenient description of the jones polynomial in terms of the markov trace .",
    "[ lem : jonestrace ] given a braid @xmath24 , then @xmath182    by definition [ def : jones ] , we need to show that @xmath183 .",
    "we observe that there exists a one to one correspondence between states that appear in the bracket sum @xmath184 , and kauffman @xmath4-diagrams that appear in @xmath185 .",
    "the weight of an element in the bracket state sum corresponding to the state @xmath128 is @xmath186 .",
    "we observe that the corresponding kauffman @xmath4-diagram appears in @xmath185 with the weight @xmath187 .",
    "hence , by linearity of the trace , it remains to show that for each @xmath128 , the trace of the kauffman diagram corresponding to @xmath128 , times @xmath188 , equals to the remaining factor in the contribution of @xmath128 to the bracket state sum , @xmath189 .",
    "this is true since by the definition of the trace of a kauffman diagram , it is exactly @xmath190 .",
    "this lemma also holds if @xmath24 is replaced by a tangle .",
    "we describe the path model representation of @xmath94 due to @xcite .",
    "the representation will act on a vector space determined by paths on a graph . specifically , given an integer @xmath8 ( @xmath8 will be chosen in relation to @xmath73 later ) , let @xmath191 be the straight line graph with @xmath192 segments and @xmath193 vertices : @xmath194    define @xmath195 to be the set of all paths of length @xmath4 on the graph @xmath191 beginning at the leftmost vertex .",
    "given @xmath196 , we shall denote by @xmath197 the sequence of vertices of @xmath191 describing @xmath198 ; thus q(0 ) is the leftmost vertex and @xmath199 and @xmath200 are adjacent vertices of @xmath191 for all @xmath115 .",
    "we shall think of the elements of @xmath195 as an orthonormal basis of a vector space @xmath201 ; hence an element @xmath196 shall represent both a path on @xmath191 and a basis element of @xmath202 .",
    "we now construct the path model representation @xmath203 .    given a kauffman n - diagram @xmath204 , to describe @xmath205 it will suffice to give the matrix entry @xmath206 for each pair @xmath207 . to do this , we note that the strands of a kauffman diagram separate the rectangle into regions ; we would like to label the regions by vertices of @xmath191 , such that the labeling of the bottom part of @xmath204 will correspond to @xmath198 and the top part to @xmath208 , and then compute the matrix element @xmath206 from the labels .",
    "this is done as follows .",
    "the @xmath4 marked points of a kauffman n - diagram divide the top and bottom boundary into @xmath209 segments which we shall refer to as _",
    "gaps_. we shall say a set of gaps that bound the same region in the diagram are _",
    "connected_. for example , in the following kauffman 3-diagram : @xmath210 the set of gaps @xmath211 are connected as are the set of gaps @xmath212 .",
    "we shall say that the pair @xmath213 is _ compatible _ with @xmath204 if once we label the gaps on the bottom from left to right by @xmath214 and we label the gaps on the top from left to right by @xmath215 , then any set of connected gaps are all labeled by the same vertex of @xmath191 .",
    "thus in this case each region of @xmath204 can be thought of as being labeled by a single vertex of @xmath191 .",
    "the matrix entry @xmath206 will only be nonzero in case the pair of paths @xmath213 is _ compatible _ with @xmath204 .    in this case",
    ", the regions are indeed labeled by vertices in @xmath191 ; we can now do the following . to each local maximum and minimum of the kauffman diagram @xmath204",
    ", we associate a complex number that depends on the labeling of the regions that surround them as follows : +    @xmath216 @xmath217 , @xmath218 , @xmath219 @xmath220 @xmath221 , @xmath222 @xmath223    the matrix element @xmath224 at a compatible pair @xmath213 , is defined to be the product of the appropriate complex numbers over all local maxima and minima in @xmath204 .    for the map @xmath225 described above to be well - defined , it has to give the same result for isotopic kauffman diagrams .",
    "an isotopic move can be seen to only create or eliminate local maxima and minima in pairs ; we see that the conditions @xmath226 are necessary and sufficient for the map to be isotopically invariant . a single extra constraint is needed to produce a representation of @xmath227 :",
    "if the coefficients @xmath228 satisfy ( [ e : isotopy ] ) and @xmath229 then the resulting map @xmath109 defined as above is a representation of @xmath94 .    to prove the result we need only verify that the matrices @xmath114 satisfy the relations of definition [ d:1 ] .",
    "this amounts to verifying that the matrix elements of the operators on both sides of each relation are equal .",
    "pictorially , a matrix element in a product of operators is given by stacking the operators together , and summing up over all possible labeling inside loops , such that the label inside the loop is different by exactly one from the label outside the loop .",
    "this summation corresponds to the summation over the intermediate index in matrix multiplication .",
    "we now check for the different relations in definition [ d:1 ] . for the generator @xmath102",
    ", there are only four types of non - zero elements , namely , four types of compatible pairs corresponding to the following types of labeling of the regions near the @xmath115-th strand : @xmath230 , @xmath231 , @xmath232 , @xmath233    in the first two relations no loops are created when the operators are multiplied , so the verification follows from the isotopy invariance of @xmath109 ( i.e. , equation ( [ e : isotopy ] ) ) .",
    "the third relation follows from equation ( [ eq : drep ] ) , using the fact that one loop was created and there are two possible ways to label the region inside .",
    "we would like @xmath114 to be hermitian , so that the induced representation on @xmath35 is unitary by claim [ cl : braidrepunitary ] . for this",
    "we add the constraints @xmath234    if the coefficients @xmath228 satisfy equations ( [ e : isotopy])-([eq : conj ] ) then @xmath235 for all @xmath115 .",
    "we need to prove that @xmath236 .",
    "we need to check only for compatible pairs , namely for @xmath237 which on the @xmath238 entry are equal to @xmath239 for some @xmath240 .",
    "this amounts to checking that @xmath241 , @xmath242 , and @xmath243 .",
    "this follows from ( [ eq : conj ] ) .",
    "it is now left to solve equations [ e : isotopy ]  [ eq : conj ] to derive the definition of @xmath109 .",
    "[ cl : solve ] define @xmath244 for @xmath245",
    ". then @xmath246 , @xmath247 satisfy equations ( [ e : isotopy])-([eq : conj ] ) , with @xmath248 .",
    "we solve the equations directly .",
    "define @xmath249 , and solve for @xmath250 .",
    "( @xmath250 is defined for @xmath251 ) .",
    "we have @xmath252 , and if we set @xmath253 ( and @xmath254 whenever undefined ) we have @xmath255 .",
    "this is the familiar equation , defining the eigenvector of the adjacency matrix of the graph @xmath191    @xmath256    with eigenvalue @xmath73 .",
    "it is not difficult to check that the @xmath257-dimensional vector @xmath258 is exactly this eigenvector .",
    "we have @xmath259 , which gives @xmath260 .",
    "the equations @xmath261 and ( [ eq : conj ] ) determine @xmath262 .    using these coefficients , we get the definition of @xmath114 as follows .",
    "@xmath263 if @xmath264 is not compatible with @xmath102 . for a compatible pair @xmath264 , @xmath265 is the product of two coefficients , one corresponding to the maximum and the other to the minimum in @xmath102 .",
    "for example , if @xmath266 both move from the site @xmath240 to @xmath267 in the @xmath115th step , and then return to the site @xmath240 in the @xmath268th step , we have @xmath269 . given @xmath114",
    ", we can extend our definition of @xmath109 to all elements in @xmath74 .",
    "the previous section provided a representation @xmath109 of @xmath74 defined for @xmath270 .",
    "we have that @xmath28 for @xmath271 , and also that @xmath114 are hermitian .",
    "thus , the conditions of subsection [ sec : unitary ] are satisfied . we define :    [ deff : varphi ] the unitary path model representation of @xmath35 is defined to be @xmath272 .",
    "the map @xmath110 can be extended to operate on tangles by letting @xmath98 be applied only to the crossings in the tangle .",
    "we are now ready to prove theorems [ thm : maintrace ] and [ thm : mainplat ] .",
    "we first translate the path model representation to work on qubits , and show that it can be implemented efficiently .",
    "we use this to design the algorithms , and then prove their correctness .",
    "the adaptation of the path model representation to qubits is fairly straightforward .",
    "we simply switch from presenting paths by the list of their locations , to a binary representation which indicates the _ direction _ of each step .",
    "thus , we shall interpret a string of @xmath4 bits to be a sequence of instructions , where a @xmath108 shall mean take one step to the left and a @xmath160 shall mean take one step to the right .",
    "we shall restrict our attention to those @xmath4 bit strings that describe a path that starts at the leftmost vertex of @xmath191 and remains inside @xmath191 at each step . from here on when we say `` path ''",
    "we actually mean the bit string that represents the path .",
    "we define @xmath273 to be the set of all paths @xmath274 on @xmath191 of @xmath4 steps which start at the left most site and end at the @xmath240 s site .",
    "we define the subspace @xmath275 to be the span of @xmath276 over all @xmath277 . in a similar way",
    ", we define @xmath278 to be all paths with no restriction on the final point , i.e. , @xmath279 , and we define @xmath280 to be the span of the corresponding computational basis states .",
    "we define a representation @xmath56 as a homomorphism from @xmath94 to matrices operating on @xmath281 . to define @xmath56 it suffices to specify the images of the @xmath102 s , @xmath282 .",
    "the operators @xmath283 are defined so that they correspond to the operators @xmath114 ( see subsection [ sec : pathmodel ] ) via the natural isomorphism between @xmath202 and @xmath281 .",
    "thus , the transition from @xmath109 to @xmath56 is merely a change of language .",
    "this is done as follows .    to uniquely define @xmath283 on @xmath281",
    ", it suffices to define what it does to each basis element , namely , to @xmath284 for @xmath285 .",
    "we need the following notation :    let @xmath286 denote the restriction of a path @xmath274 to its first @xmath287 coordinates . given a path @xmath274 on @xmath288 , we denote by @xmath289 the location in @xmath288 that the path @xmath274 reached in its final site .",
    ".    we can now define the operation of @xmath283 .",
    "@xmath283 is defined as an operation on the first @xmath268 coordinates in a path @xmath274 :    @xmath291    to apply @xmath283 on the @xmath4-bit string @xmath284 we tensor the above transformation with identity on the last @xmath292 qubits . for dealing with the edge cases",
    ", we use the convention @xmath293 for any @xmath294 .",
    "once we have defined @xmath283 , @xmath56 is then extended to the entire algebra by the multiplication property of a representation , and by linearity .",
    "[ cl : rep ] @xmath56 is a representation of @xmath74 .",
    "@xmath283 are hermitian .",
    "moreover , @xmath56 induces a unitary representation of the braid group @xmath35 , operating on @xmath295 .",
    "the proof follows from the corresponding properties of @xmath109 , namely subsections [ sec : pathmodel ] , [ sec : unitarypathmodel ] , and the natural isomorphism between paths on @xmath191 presented by their sequence of locations , @xmath202 , and paths presented as bit strings , namely @xmath296 .    with the risk of confusion",
    ", we denote the unitary representation of @xmath35 induced by @xmath56 , also by @xmath110 as in definition [ deff : varphi ] .",
    "the only difference is that now @xmath297 operates on @xmath281 rather than on @xmath202 .",
    "the matrices @xmath298 are defined so far only on @xmath296 which is a subspace of the hilbert space of @xmath4 qubits ; we arbitrarily define their extension to the rest of the hilbert space to be the identity .",
    "[ cl : efficient ] for all @xmath299 , @xmath298 can be implemented on the hilbert space of @xmath4 qubits using @xmath300 gates .",
    "we note that the application of @xmath298 on @xmath285 modifies only the @xmath301 bits of @xmath274 , and the modification depends on the location up to the @xmath115th step , namely on @xmath302 .",
    "@xmath303 is a number which can be calculated efficiently and written on @xmath304 ancilla qubits , using the following standard technique : initialize a counter register of , say , @xmath305 qubits to the value @xmath160 .",
    "then move along the qubits of the path @xmath274 from left to right , and for each of the @xmath4 qubits update the current state of the counter , @xmath240 , by applying @xmath306 where @xmath307 is the state of the currently read qubit .",
    "since this is a unitary operation on @xmath308 qubits , it can be applied using polynomially in @xmath8 many elementary quantum gates ( this is a standard result in quantum computation ) .",
    "we end up with the extra register carrying @xmath309 .",
    "now , @xmath298 depends only on the location @xmath309 and on the @xmath115 and @xmath268 qubits .",
    "hence , once again we have a unitary transformation which operates on logarithmically in @xmath8 many qubits , and so we can implement it in polynomially in @xmath8 many quantum gates .",
    "after we apply @xmath298 , we erase the calculation of @xmath309 by applying the inverse of the first transformation which wrote the location down .    as a corollary",
    ", we can deduce that    [ cor : efficient ] for every braid @xmath310 , with @xmath5 crossings , there exists a quantum circuit @xmath37 that applies @xmath297 on @xmath4 qubits , using @xmath311 elementary gates .",
    "order the crossings in the braid in topological order , and apply the corresponding unitary matrix of each crossing , @xmath298 , one by one , in that order .",
    "each crossing takes @xmath312 elementary gates by claim [ cl : efficient ] , and there are @xmath5 of them .",
    "we can now describe the algorithms .",
    "the input for both is a braid of @xmath4 strands and @xmath5 crossings , and an integer @xmath8 .    ",
    "* algorithm approximate - jones - plat - closure *    * repeat for @xmath313 to @xmath314 : 1 .",
    "generate the state @xmath315 2 .",
    "output a random variable @xmath316 whose expectation value is @xmath317 using the @xmath38 test .",
    "* do the same but for random variables @xmath318 whose expectation value is @xmath319 using the appropriate variant of the @xmath38 test .",
    "* let @xmath26 be the average over all @xmath320 achieved this way .",
    "output @xmath321 .    ",
    "* algorithm approximate - jones - trace - closure *    * repeat for @xmath313 to @xmath314 : 1 .   classically ,",
    "pick a random path @xmath285 with probability @xmath322 , where @xmath240 is the index of the site which @xmath274 ends at . 2 .",
    "output a random variable @xmath316 whose expectation value is @xmath323 using the @xmath38 test .",
    "* do the same but for random variables @xmath318 whose expectation value is @xmath324 using the appropriate variant of the @xmath38 test .",
    "* let @xmath26 be the average over all @xmath320 .",
    "output @xmath325 .    ",
    "the above two quantum algorithms can be performed in time polynomial in @xmath25 .",
    "algorithm approximate - jones - plat - closure is clearly efficient , because the @xmath38 test can be applied efficiently using corollary [ cor : efficient ] . to perform the first step of the second algorithm efficiently",
    ", we pick a random @xmath326 , with probability proportional to @xmath327 , and then use claim [ cl : random ] below .",
    "we note that our calculations involve irrational numbers , @xmath327 , but these can be approximated to within an exponentially good precision efficiently .",
    "[ cl : random ] given @xmath328 , there exists a classical probabilistic algorithm which runs in time polynomial in @xmath4 and @xmath8 , and outputs a random path in @xmath273 according to a distribution which is exponentially close to uniform .",
    "( we thank o. regev for a discussion that lead to this variant . )",
    "we briefly sketch the proof .",
    "we first note that the following @xmath329 array @xmath330 , defined by @xmath331 ( the number of path on @xmath191 of @xmath115 steps that start at @xmath160 and end at @xmath332 ) can be easily calculated efficiently using the recursion @xmath333 to pick a random path ending at @xmath240 , we pick the values of the sites in @xmath274 one by one in reverse order .",
    "if @xmath334 , we randomly decide if @xmath335 or @xmath267 according to the ratio @xmath336 .",
    "given @xmath337 we can continue to pick @xmath338 in a similar manner , and so on .",
    "[ thm : tracecorrect ] algorithm approximate - jones - trace - closure approximates the jones polynomial of @xmath22 at @xmath339 , to within the precision specified in theorem [ thm : maintrace ] .    we will need the following definition .    [ deff : trn ]",
    "define @xmath340 for every @xmath341 in the image of @xmath342 to be : @xmath343 where @xmath344 denotes the restriction of @xmath341 to the subspace @xmath345 , and tr denotes the standard trace on matrices .",
    "the renormalization is @xmath346 where the sum is taken over all @xmath240 s such that @xmath273 is non empty .",
    "this definition makes sense because matrices in the image of @xmath110 are block diagonal , with the blocks indexed by @xmath240 , the last site of the paths :    [ cl : reducible ] for any @xmath347 , @xmath348 .",
    "@xmath283 can not change the final point of a path since it only moves @xmath349 to @xmath350 and vice versa .",
    "hence , the above trace function simply gives different weights to these blocks ( and gives zero weights on strings that are nt paths ) .",
    "we claim that @xmath351 is a markov trace .",
    "[ cl : markov ] the function @xmath352 satisfies the three properties in claim [ cl : properties ] .",
    "that @xmath353 follows from the renormalization .",
    "the second property follows from claim [ cl : reducible ] plus the fact that the standard trace on matrices satisfies this property , so @xmath352 satisfies it on each block separately . to show the markov property , we have to show that if @xmath354 then @xmath355 .",
    "we note that for any @xmath149 , @xmath356 can be written as a linear combination of terms of the form @xmath357 , with @xmath358 and the identity operates on the last qubit . by linearity , it suffices to prove the markov property on such matrices .",
    "writing @xmath359 we require : @xmath360 this can be easily verified using the definition of @xmath56 by checking the two cases @xmath361 and @xmath362 .",
    "we start with the case @xmath362 . in this case",
    "the right hand side is @xmath108 . as for the left hand side",
    ", @xmath363 has a zero component on @xmath364 . to see this",
    ", we check the two cases : if @xmath365 ends with @xmath108 then @xmath366 , otherwise @xmath365 ends with @xmath160 .",
    "@xmath363 is then a sum of two terms , one equals to @xmath367 and is therefore different than @xmath364 , and the other ends with @xmath349 and is thus also different from @xmath364 . the same argument works to show that @xmath368 has a zero component on @xmath369 .",
    "hence , the left hand side is also @xmath108 .",
    "it is left to check the equality in the case @xmath361 .",
    "we require @xmath370 suppose @xmath371 then the right hand side is equal to @xmath372 , using the properties of the eigenvector @xmath258 , as in claim [ cl : solve ] . to see that the left hand side is the same",
    ", we again divide to cases .",
    "suppose first that @xmath274 ends with @xmath108 .",
    "in this case @xmath373 . as for the other term , @xmath374 , using the definition of @xmath375 and the fact that @xmath274 without its last step ends in @xmath267 .",
    "the weight in the trace of the left hand side is @xmath376 , and so the left hand side is equal to @xmath327 too .",
    "the argument is similar in the case that @xmath274 ends with @xmath160 .    by the uniqueness of the markov trace , lemma [ lem : markovunique ] , we have that @xmath377 . hence , using lemma [ lem : jonestrace ] , we have that for any braid @xmath310    [ le : jonesmatrixtrace ] @xmath378    due to lemma [ le : jonesmatrixtrace ] , the correctness of the algorithm follows trivially from the following claim .    with all but exponentially small probability",
    ", the output @xmath26 satisfies @xmath379 for @xmath29 which is inverse polynomial in @xmath30 .",
    "the @xmath38 test indeed implies that the expectation of @xmath316 for a fixed @xmath274 is exactly @xmath380 .",
    "the expectation of the variable @xmath316 taken over a random @xmath274 is thus @xmath381 @xmath382 the same argument works for the imaginary part .",
    "since @xmath26 is the sum of two averages of polynomially many @xmath383 random variables , each taking values between @xmath160 and @xmath47 , the result follows by the chernoff - hoeffding bound .",
    "this completes the proof of theorem [ thm : tracecorrect ] .",
    "[ thm : platcorrect ] algorithm approximate - jones - plat - closure approximates the jones polynomial of @xmath23 at @xmath339 , to within the desired precision as in theorem [ thm : mainplat ] .    by the correctness of the @xmath38 test , and by the chernoff - hoeffding bound , the variable @xmath26 which the algorithm computes is , with exponentially good confidence , within @xmath384 from @xmath385 , which is equal to @xmath386 .",
    "we need to connect this expression to the jones polynomial of the plat closure of @xmath24 .",
    "the main observation here is that the plat closure of a braid @xmath24 is isotopic to the trace closure of a tangle @xmath387 achieved by applying the braid on @xmath388 capcups , as in the following picture :    @xmath389    it therefore suffices to relate the jones polynomial of @xmath390 to @xmath386 .",
    "since the question is now stated in terms of trace closures and traces , there is hope to be able to apply lemma [ lem : jonestrace ] and claim [ cl : markov ] as in the proof of theorem [ thm : tracecorrect ] .",
    "but we first need to make the connection between the projection on @xmath40 and capcups .",
    "[ cl : platcupcap ] @xmath391    it is easy to verify that @xmath392 applied to any path except for @xmath40 gives @xmath108 , and when applied to @xmath40 it gives the desired factor .",
    "to do this we use the fact that @xmath283 commute if their indices are more than one apart , and so we can first apply @xmath393 , then @xmath394 and so on . since the path starts at the left most site ,",
    "@xmath393 on @xmath274 simply applies the following rescaled projection : @xmath395 on the first two coordinates .",
    "this projection forces the first two coordinates to be @xmath350 , and so @xmath396 returns to the starting point after two steps .",
    "therefore a similar argument applies when we apply @xmath394 on the next two coordinates , and so on . by induction , we get the desired result .",
    "we thus have , using definition [ deff : trn ] and claim [ cl : platcupcap ] : @xmath397 @xmath398    by the uniqueness of the markov trace , lemma [ lem : markovunique ] , and by claim [ cl : markov ] , we have that @xmath399 . using lemma [ lem : jonestrace ] , we have : @xmath400 which we substitute in the previous equation .",
    "this completes the proof of theorem [ thm : platcorrect ] .",
    "we thank alesha kitaev for clarifications regarding the difference between the plat and trace closure , and the nature of the path model representation .",
    "we are grateful to umesh vazirani for helpful remarks regarding the presentation .",
    "m.freedman , a.kitaev , m. larsen , z. wang , _ topological quantum computation . _",
    "_ mathematical challenges of the 21st century _",
    "( los angeles , ca , 2000 ) .",
    "( n.s . ) 40 ( 2003 ) , no .",
    "1 , 3138                        neilsen , chuang , quantum computation and quantum information , cambridge press , 2000 a. podtelezhnikov , n. cozzarelli , a. vologodskii , equilibrium distributions of topological states in circular dna : interplay of supercoiling and knotting . proc .",
    "usa 96 ( 1999 ) , no .",
    "23 , 1297412979 ."
  ],
  "abstract_text": [
    "<S> the jones polynomial , discovered in @xmath0 @xcite , is an important knot invariant in topology . among its many connections to various mathematical and physical areas , </S>",
    "<S> it is known ( due to witten @xcite ) to be intimately connected to topological quantum field theory ( @xmath1 ) . </S>",
    "<S> the works of freedman , kitaev , larsen and wang @xcite provide an efficient simulation of @xmath1 by a quantum computer , and vice versa . </S>",
    "<S> these results implicitly imply the existence of an efficient quantum algorithm that provides a certain additive approximation of the jones polynomial at the fifth root of unity , @xmath2 , and moreover , that this problem is @xmath3-complete . </S>",
    "<S> unfortunately , this important algorithm was never explicitly formulated . </S>",
    "<S> moreover , the results in @xcite are heavily based on @xmath1 , which makes the algorithm essentially inaccessible to computer scientists .    </S>",
    "<S> we provide an explicit and simple polynomial quantum algorithm to approximate the jones polynomial of an @xmath4 strands braid with @xmath5 crossings at any primitive root of unity @xmath6 , where the running time of the algorithm is polynomial in @xmath7 and @xmath8 . </S>",
    "<S> our algorithm is based , rather than on @xmath1 , on well known mathematical results ( specifically , the path model representation of the braid group and the uniqueness of the markov trace for the temperly lieb algebra ) . by the results of @xcite , </S>",
    "<S> our algorithm solves a @xmath3 complete problem .    </S>",
    "<S> the algorithm we provide exhibits a structure which we hope is generalizable to other quantum algorithmic problems . </S>",
    "<S> candidates of particular interest are the approximations of other downwards self - reducible @xmath9p - hard problems , most notably , the important open problem of efficient approximation of the partition function of the potts model , a model which is known to be tightly connected to the jones polynomial @xcite . </S>"
  ]
}
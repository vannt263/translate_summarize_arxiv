{
  "article_text": [
    "consider a data source with unknown distribution characteristics , which can generate sequences @xmath1 of letters from an alphabet @xmath2 in a time homogeneous way .",
    "if the distribution of each letter @xmath3 depends on the previous @xmath0 letters @xmath4 then the sequence can be described by an @xmath0-markov chain .    storing all the information of an @xmath0-markov chain , however , can be costly in practice .",
    "thus it becomes desirable to represent a chain in a more efficient way .",
    "in many applications it turns out that one does nt have to know the full @xmath0 letter history to accurately describe the distribution of the next letter in the stream .",
    "it is also often referred to as a variable length markov chain ( vlmc ) .",
    "one can define @xmath5 as subsequences of letters in the data stream that contain sufficient information about the distribution of the next letter .",
    "thus , contexts are the memory segments as strings that are required for the accurate description of the chain . for",
    "any given chain , the set of contexts can be arranged in a _ context tree _ structure as follows : we say that a string @xmath6 is a postfix of a string @xmath7 , when there exists a string @xmath8 such that @xmath9 .",
    "( @xmath10 means a concatenation of u and v in the natural ordering . ) a set @xmath11 of strings ( and perhaps also of semi - infinite sequences ) is called a _ context tree _ if no @xmath12 is a postfix of any other @xmath13 .",
    "we draw the context tree as a rooted tree where each vertex other than the root is labeled by a letter from the alphabet @xmath14 .",
    "a context is a string ( a sequence of letters ) that follows the path starting from any leaf and ending at the root .",
    "a semi - infinite sequence @xmath15 is an infinite path to the root .",
    "for example , the context marked with * is 1101 in the context tree below .",
    "it turns out that context trees where each node is either a leaf or has exactly @xmath16 children ( one for each letter in @xmath14 ) are particularly important .",
    "such trees are referred to as _ complete _ ( see definition  [ definition1 ] ) .",
    "a context tree of maximal depth @xmath0 can be used to naturally represent an @xmath0-markov chain by assigning to each leaf a probability distribution on the alphabet describing the distribution of the next letter  @xcite .",
    "similarly , a context tree can be used to naturally represent a vlmc .",
    "such a structure is called a stochastic context tree ( scot ) .",
    "the root represents the upcoming , yet unknown , future state and each child of a node represents a possible previous state .",
    "see figure below .",
    "@xcite    at ( 0 , 0 ) ( a ) @xmath17(root ) child node at ( -4 , -1 ) @xmath18 edge from parent node [ left=10pt ] 0 child node at ( 4 , -1 ) ( b ) @xmath19 child node at ( -4 , -1 ) ( d ) @xmath20 edge from parent node [ left=10pt ] 0 child node at ( 4 , -1 ) ( e ) @xmath21 edge from parent node [ right=10pt ] 1 edge from parent node [ right=10pt ] 1 ;    then , given an @xmath0-markov chain , it can always be represented as a scot on the complete @xmath16-ary tree of depth @xmath0 .",
    "however , ideally one would like to try to find the most economical scot representation of the chain .    when trying to find the most economical scot representation , however , a curious problem may arise .",
    "suppose that the string @xmath22 is sufficient to determine the distribution of the next state ( @xmath23 ) , but for some @xmath24 the string @xmath25 is not enough to predict the subsequent state ( @xmath26 ) .",
    "this implies that @xmath7 should not be used as a context . despite",
    "that it allows prediction of the next state , it does nt carry sufficient information to predict later states .",
    "we say that a context tree is _ perfect - memory _ tree ( or `` has perfect memory '' ) if such a situation can never arise .",
    "in other words the requirement is that when passing from @xmath27 to @xmath28 , the context for the latter should not include older symbols other than those within the context ending with @xmath28 .",
    "we formalize this in definition  [ definition4 ] .",
    "thus , for the purpose of applications , it is important to recognize whether a context tree has perfect memory .",
    "the only known result about this class of context trees has been the following sufficient condition .",
    "[ theorem1 ] let @xmath11 be a complete context tree . if there is a @xmath29 such that the distance of each leaf from the root is either @xmath29 or @xmath30 , then @xmath11 has perfect - memory .",
    "the goal of this paper is twofold .",
    "first , we provide a simple characterization of perfect - memory context trees in terms of it s subtrees . for a context tree @xmath11",
    "let us denote by @xmath31 the subtrees rooted at the children of @xmath11 s root . for two context trees @xmath32 let us write @xmath33 if @xmath34 is contained in @xmath11 such that they have the same root .",
    "our first main results is the following .",
    "[ theorem2 ] let @xmath11 be a complete context tree .",
    "then , @xmath11 has perfect - memory if and only if @xmath35 .    in the process",
    "we study the partially ordered set of of perfect - memory context trees .",
    "we find that this is a lattice ( that is , intersections and unions preserve perfect - memory ) , which in turn allows us to talk about the perfect - memory closure of a context tree .",
    "our second goal is to give a simple algorithm to construct the perfect - memory closure of an arbitrary context tree .",
    "the paper is organized as follows . in section",
    "[ sec : prelim ] we give the detailed definitions and notation , and derive some simple properties of context trees . in section  [ sec : perfect - memory ] we formally introduce perfect - memory context trees , establish their main properties , prove theorem  [ theorem2 ] , and describe some of its corollaries . in section  [ sec : alg ] we describe a linear algorithm for finding the perfect - memory closure .",
    "finally in section  [ sec : examples ] we provide examples to illustrate some of our results .",
    "in this section we provide the basic concepts about context trees .",
    "fix a nonempty and finite set @xmath2 .",
    "the set @xmath14 is called the _ alphabet _ , and its elements are called _",
    "letters_. a finite sequence of elements of @xmath14 , including the empty sequence , is called a _",
    "string_. the set of all strings is denoted by @xmath36 .    for two strings @xmath37",
    ", we denote the concatenation of @xmath8 and @xmath6 in the natural ordering by @xmath10 .",
    "we say that a string @xmath38 is a _",
    "postfix _ of a string @xmath39 , denoted by @xmath40 , if there exists a string @xmath41 such that @xmath42 .",
    "+ in order to not abuse the terminology we give the definitions as follows :    [ definition1 ] a _ `` context tree '' _ on the alphabet @xmath14 is a rooted tree where each vertex , except the root , is labeled by one letter in @xmath14 and no two siblings are labeled by the same letter .",
    "a context tree is said to be _",
    "`` complete '' _ , if each node is either a leaf or has exactly @xmath43 children . in a context tree ,",
    "a _ `` context '' _ is a string that follows the letters along a path starting from a leaf and ending at the root .    for a context tree @xmath11",
    ", we denote the set of all its contexts by @xmath44 .",
    "the figure below provides an example of a complete context tree @xmath11 over the alphabet @xmath45 :    in this context tree , the set of contexts is @xmath44=@xmath46 .",
    "note that for each context @xmath47 in a context tree @xmath11 there is a unique path @xmath48 in @xmath11 starting from a leaf and ending at a root that follows all the letters in @xmath47 .",
    "it can be easily verified that if @xmath11 is a context tree , then no context @xmath49 is a postfix of any other context @xmath50 .",
    "[ definition2 ] for nonempty context trees @xmath51 , @xmath52 over the same alphabet , we write @xmath53 to denote _",
    "`` @xmath51 is contained in @xmath52 at the root '' _ , that is    @xmath54    the following lemma gives an equivalent condition , provided that the context trees are complete .",
    "it will be used to prove theorem  [ theorem2 ] in the next section .",
    "+    [ lemma1 ]    let @xmath55 be complete context trees over the same alphabet @xmath14 .",
    "then , the following statements are equivalent .",
    "1 .   @xmath53 2 .",
    "@xmath56 :  @xmath57 .    ",
    "( i ) @xmath58 ( ii ) \" : since @xmath51 and @xmath52 are both complete context trees over the same alphabet , @xmath59 , @xmath60 s.t .",
    "@xmath57 or @xmath61 .",
    "if @xmath57 , we are done . if @xmath61 , then because of ( i ) , @xmath62 , s.t .",
    "we have @xmath64 , @xmath65 and @xmath66 are both contexts in @xmath67 , then @xmath68 , thus , @xmath57 .    ",
    "( ii ) @xmath58 ( i ) \" : since @xmath51 and @xmath52 are both complete context trees over the same alphabet , @xmath69 , @xmath70 s.t .",
    "@xmath57 or @xmath61 .",
    "if @xmath57 , by definition [ definition2 ] we are done . if @xmath61 , then because of ( ii ) , @xmath71 , s.t .",
    "we have @xmath73 , @xmath74 and @xmath75 are both contexts in @xmath76 , therefore @xmath77 , thus , @xmath57 , @xmath53 .",
    "note that it is essential in lemma [ lemma1 ] that @xmath51 and @xmath52 are both complete .",
    "indeed , consider the context @xmath51 and @xmath52 in the figure below .",
    "= @branches    = @branches    = @branches    = @branches    we have @xmath78 , @xmath79",
    ". therefore , condition ( ii ) of lemma [ lemma1 ] is satisfied .",
    "however , @xmath51 is not contained in @xmath52 at the root , since 11 is not a postfix of any string in @xmath67 . in the other direction , it is clear that @xmath52 is contained in @xmath51 at the root but 11 does not have any postfix that is a context in @xmath52",
    ".    given two complete context trees over the same alphabet , then each context in a context tree is either a postfix of some context in the other context tree or has a postfix that is a context in the other context tree . based on this fact , we can define the following .",
    "[ definition3 ] for nonempty complete context trees @xmath51 , @xmath52 over the same alphabet , we write @xmath80 to denote _ `` the intersection at the root '' of @xmath51 and @xmath52 _ and we write @xmath81 to denote _ `` the union at the root '' of @xmath51 and @xmath52 _ , they are @xmath82 @xmath83    note that @xmath84 is not equal to @xmath85 most of the time .",
    "the next lemma shows the relationship between the two expressions .",
    "[ property2 ] let @xmath55 be complete context trees on the same alphabet @xmath14 .",
    "then we have + @xmath86 and @xmath87 .",
    "+    there is a natural bijection map between the set of finite context trees and the set of finite complete context trees over the same alphabet .    for any complete context tree",
    ", we can remove all the leaves to get a `` parent tree '' which is an arbitrary context tree . on the opposite , given an arbitrary context tree , by making sure each node grows @xmath16 leaves we get a complete context tree .    the total number of complete context trees on @xmath14 with length no more than @xmath88 is @xmath89 .",
    "in this section we define perfect - memory context trees and analyze their properties .",
    "[ definition4 ] a context tree @xmath11 on the alphabet @xmath90 is called _",
    " perfect - memory \" _ context tree ( or @xmath11 has `` perfect - momory '' , denoted as @xmath91 ) if @xmath92 , s.t .",
    "+    not all complete context trees have perfect - memory . the binary context tree in the figure below",
    "provides an example for this .",
    "the tree is obviously complete , and we have @xmath44=@xmath94 .",
    "however , for the context @xmath95 in @xmath44 and letter @xmath96 , the concatenation is @xmath97 , and there is no context @xmath98 that is a postfix of @xmath99 .",
    "thus , the tree does not have perfect - memory .    nevertheless , the converse is true , and perfect - memory implies completeness .",
    "[ property1 ] a perfect - memory context tree is complete .",
    "assume there exists a perfect - memory context tree @xmath11 that is not complete .",
    "let @xmath47 be a minimum length string that makes @xmath11 not complete ( a shortest string that @xmath11 is missing to be complete ) , i.e. @xmath100 , the leaf of path @xmath101 has at least one sibling in @xmath11 and    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath102 s.t .",
    "@xmath103 , we have @xmath104.(i ) _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    therefore , by the definition of context tree and that the leaf of context path @xmath101 has a sibling in @xmath11 , we have    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath102 s.t .",
    "@xmath105 , we have @xmath106(ii ) _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    let @xmath107 , i.e. the last letter of c is @xmath108 . if @xmath109 , i.e. @xmath110 is the empty string , pick some @xmath111 . because @xmath11 has perfect - memory , @xmath112 s.t .",
    "but then @xmath114 , which contradicts ( i ) .",
    "therefore , @xmath110 can not be the empty string .    if @xmath115 , then by definition [ definition4 ] , @xmath116 s.t .",
    "but this is a contradiction of ( ii ) , therefore , @xmath118 .    since @xmath110 is shorter than @xmath47 , and using the assumption that @xmath47 is the shortest string that makes @xmath11 not complete , we know that there exists @xmath119 s.t .",
    "@xmath120 or @xmath121 . by definition [ definition4 ] , @xmath122 s.t . @xmath123 .    if @xmath120 , then @xmath124 .",
    "this contradicts ( ii ) , thus , @xmath121 .",
    "therefore , we have @xmath125 and @xmath123 .",
    "@xmath126 and @xmath47 are both postfixes of @xmath127 , then one must be the postfix of the other . if @xmath128 , contradiction of ( ii ) . if @xmath129 , this is a contradiction of ( i ) .",
    "therefore , the assumption always leads to a contradiction , which means that a perfect - memory context tree has to be complete .",
    "[ property2 ] if @xmath51 , @xmath52 are perfect - memory context trees , then @xmath130 and @xmath131 are also perfect - memory context trees .",
    "let @xmath51 and @xmath52 be perfect - memory context trees .",
    "let @xmath132 , and @xmath133 .",
    "we need to find a context @xmath134 such that @xmath135 .",
    "we separate into three cases .",
    "\\(i ) if @xmath136 , @xmath137 , s.t . @xmath138 and @xmath139 , because of @xmath51 and @xmath52 have perfect - memory and definiton [ definition4 ] . @xmath74 and @xmath65",
    "are both postfixes of @xmath140 , if @xmath61 , by definition [ definition3 ] , @xmath141 , done . if @xmath57 , then @xmath142 , done .",
    "\\(ii ) if @xmath143 , @xmath144 , s.t . @xmath145 and @xmath146 .",
    "@xmath147 , s.t . @xmath138 since @xmath76 has perfect - memory .",
    "@xmath148 , s.t .",
    "@xmath149 since @xmath67 has perfect - memory .",
    "then we have @xmath150 and @xmath151 . if @xmath63 , then @xmath152 , done . if @xmath153 , then @xmath141 , done .",
    "\\(iii ) if @xmath154 , proceed similarly to ( ii ) .",
    "therefore , @xmath130 is a perfect - memory context tree .",
    "similarly , we can prove @xmath131 is a perfect - memory context tree .",
    "since perfect - memory is closed under intersection , we can define the following .",
    "[ definition5 ] let @xmath11 be a context tree .",
    "`` perfect - memory closure of @xmath11 '' _ , denoted as @xmath155 , is the intersection of all the perfect - memory context trees that contain @xmath11 , i.e. @xmath156    having perfect - memory is preserved under intersection in view of property [ property2 ] , so the perfect - memory closure @xmath155 of a context tree @xmath11 has perfect - memory .",
    "thus , by definition , @xmath155 is the minimal context tree that contains @xmath11 and has perfect - memory .",
    "[ notation1 ] let @xmath157 denote the minimum complete context tree that contains @xmath11 .",
    "+    @xmath158 .    for any context tree @xmath11",
    ", we have @xmath159 because of property  [ property1 ] . therefore ,",
    "@xmath158 .",
    "[ notation2 ] for a context tree @xmath11 and an @xmath160 , by * @xmath161 * we denote the subtree of @xmath11 whose root is @xmath162 .",
    "note that @xmath163 can be empty , and @xmath164 .",
    "moreover , let @xmath165 denote set of all subtrees of @xmath11 that the root is a node of @xmath11 , i.e. @xmath166 .",
    "the figure below serves as an illustration .",
    "+     + now we are ready to prove our first main result .",
    "let @xmath11 be a complete context tree .",
    "it follows from lemma  [ lemma1 ] that when @xmath167 , the following statements are equivalent .",
    "\\(i ) @xmath168 .",
    "\\(ii ) @xmath169 , s.t . @xmath103 .    therefore ,",
    "since @xmath170 , the statement of the theorem about the complete context tree @xmath11 can be reformulated as follows : @xmath11 has perfect - memory if and only if @xmath171 , either @xmath172 or @xmath169 , s.t . @xmath103",
    ".    * necessity . *",
    "assume that @xmath11 has perfect - memory .",
    "let @xmath173 and @xmath174 . by definition [ definition4 ] , @xmath116 , s.t .",
    "@xmath175 . let @xmath176 so that @xmath177 . if @xmath178 , then @xmath172 .",
    "otherwise , if @xmath179 , then c is not the empty string and @xmath180 . since @xmath181 , we have @xmath103 .",
    "* sufficiency . *",
    "assume that @xmath182 , either @xmath172 or @xmath169 , s.t .",
    "let @xmath173 and @xmath174 .",
    "we distinguish two cases , and show in both that there exists @xmath98 with @xmath175 .",
    "if @xmath172 , then @xmath178 , and hence we can choose @xmath183 . otherwise , if @xmath184 , by assumption , @xmath185 , s.t .",
    "@xmath103 . in this case",
    ", we can choose @xmath177 .",
    "thus , @xmath11 has perfect - memory .",
    "now we discuss some corollaries of the characterization in theorem  [ theorem2 ] .",
    "[ notation3 ] if a context @xmath186 , let @xmath187 denote the string of the context c without the last letter @xmath188 .",
    "+    [ corollary1 ] a context tree @xmath11 has perfect - memory if and only if the following two conditions hold : [ 1 ] @xmath11 is complete , and [ 2 ] @xmath189 .",
    "this corollary follows by theorem  [ theorem2 ] and lemma  [ lemma1 ] .",
    "[ corollary2 ] a context tree @xmath11 has perfect - memory if and only if the following two conditions hold : [ 1 ] @xmath11 is complete , and [ 2 ] @xmath190 for which @xmath191 , we have @xmath192 .",
    "the sufficiency follows by corollary [ corollary1 ] just letting @xmath193 .    to prove the necessity now we assume @xmath11 has perfect - memory , by property  [ property1 ] we have @xmath11 is complete .",
    "take @xmath194 , when @xmath110 is the empty string , then it is trivial that when @xmath195 is the empty string , @xmath196 .",
    "when @xmath110 is not the empty string , we assume the necessary requirement is not true , i.e. @xmath197 , s.t .",
    "@xmath198 where @xmath199 is not the empty string , since @xmath200 is complete .",
    "let @xmath201 , then because @xmath11 has perfect - memory , we have @xmath202 , for @xmath203 , s.t .",
    "@xmath204 . therefore , @xmath205 .",
    "since @xmath47 and @xmath206 are both contexts in @xmath44 , and @xmath11 is complete , @xmath207 , this is a contradiction of @xmath199 is not the empty string .",
    "hence , the necessary requirement is true .",
    "[ corollary3 ] let @xmath11 be a complete context tree , then @xmath208 is the union at the root of all the subtrees of @xmath11 , i.e. @xmath209    see notation  [ notation2 ] .",
    "it is clear that any @xmath210 , @xmath211 , is complete and @xmath212 is complete .",
    "@xmath213 s.t .",
    "@xmath214 , then @xmath215 such that @xmath216 .",
    "therefore , @xmath217 , then @xmath218 such that @xmath219 . by definition  [ definition2 ] , @xmath220 s.t . @xmath221 since @xmath222 . by corollary [ corollary2 ]",
    "we know that @xmath223 has perfect - memory .",
    "since @xmath224 , we have @xmath225 .    on the other hand , @xmath226 , @xmath227 , s.t .",
    "@xmath228 , thus @xmath229 .",
    "assume there is no @xmath230 s.t . @xmath103 .",
    "then @xmath231 , s.t . @xmath232 and @xmath233 , since @xmath208 is complete .",
    "we have @xmath234 , @xmath235 s.t .",
    "@xmath236 , since @xmath237 .",
    "@xmath208 has perfect - memory , by corollary  [ corollary2 ] , @xmath238 s.t .",
    "this is a contradiction of @xmath233 and @xmath240 .",
    "therefore , @xmath241 s.t . @xmath103 . by lemma  [ lemma1 ]",
    ", we have @xmath242",
    ". therefore , @xmath243 .",
    "[ notation4 ] given a context tree @xmath11 , we have the following notations : +    [ cols= \" > , < \" , ]      +    therefore , we have @xmath244 and @xmath245 .",
    "we consider rate @xmath246 as a measurement of how sparse a context tree is and rate @xmath247 as a measurement of how far a context tree is to perfect - memory .",
    "[ property6 ] @xmath248 .",
    "assume we have a complete context tree @xmath11 .",
    "let @xmath249 , where @xmath187 are different contexts in @xmath44 .",
    "thus , @xmath250 . we say that a string @xmath38 is a _ prefix _ of a string @xmath39 , denoted by @xmath251 , if there exists a string @xmath41 such that @xmath252 let @xmath253 . by corollary [ corollary3 ] and definition [ definition3 ]",
    ", we have @xmath254 therefore , @xmath255",
    "* example 1 : comb tree *    this is a perfect - memory the context tree with the minimum rate @xmath246 .",
    "+ @xmath256    * example 2 : a sparse tree * +    @xmath11 is the tree with solid lines .",
    "the solid lines and dashed lines all together made @xmath208 .",
    "@xmath11 is not perfect - memory .",
    "@xmath11 has the same number of leaves as the binary comb tree ( example 1 ) . +",
    "* example 3 : the smallest compete context tree whose perfect - memory closure contains full m - mc .",
    "( m=4 ) * +    same as the previous example , the original trees are in solid lines .",
    "the dashed lines are the leaves added in the perfect - memory closure .",
    "since for each new leaf of depth m is added if and only if there is another leaf of depth @xmath257 in the original tree by corollary [ corollary1 ] , we find the context tree in the figure above has the smallest number of leaves and the perfect - memory closure contains the full m - mc . for binary case",
    "we have : + @xmath258 + @xmath259 + * example 4 : a complete context tree with a large @xmath247 *   +    at ( 0 , 0 ) ( a ) root child node at ( -2 , -1 ) @xmath260 child node at ( -4.5 , -1 ) @xmath261 child node at ( -3 , -1 ) @xmath260 child node at ( -2 , -1 ) ( f ) @xmath261 child node at ( 3 , -1 ) ( g ) @xmath262 child [ emph ] node at ( -1 , -1 ) @xmath261 child node at ( -1 , -1 ) @xmath260 child node at ( -0.5 , -1 ) ( d ) @xmath261 child node at ( 5 , -1 ) ( e ) @xmath262 child [ emph ] node at ( -0.4 , -1 ) ( b ) @xmath263 child [ emph ] node at ( 5 , -1 ) ( c ) @xmath262 ;    \\(b ) ",
    "( c ) node[midway ] @xmath264 ; ( d )  ( e ) node[midway ] @xmath264 ; ( f )  ( g ) node[midway ] @xmath264 ;    parent tree of @xmath11 and @xmath208    the figure above is an example for a large @xmath247 .",
    "the parent tree of @xmath11 is in solid lines and the parent tree of its perfect - memory closure is in both solid and dashed lines . in the figure above @xmath265 , in general we have @xmath266 , @xmath267 + thus , @xmath268 . noting that @xmath16 , the size of the alphabet , is finite .",
    "i am very grateful to mikhail malioutov , who introduced me to scot and gave me this problem to solve and gabor lippner , who guided me with the research on the perfect - memory context tree .",
    "* input : * a complete context tree @xmath11 from an alphabet @xmath2 . + * output : * @xmath208 , the perfect - memory closure of @xmath11 .",
    "frans m. j. willems , yuri m. shtarkov , and tjalling j. tjalkens , `` the context - tree weighting method : basic properties '' , _ ieee transactions on information theory _ , vol .",
    "41 , issue : 3 , 653 - 664 `` universal piecewise linear prediction via context trees '' , issue 7 part 2  date july 2007"
  ],
  "abstract_text": [
    "<S> the stochastic context tree ( scot ) is a useful tool for studying infinite random sequences generated by an @xmath0-markov chain ( m - mc ) . </S>",
    "<S> it captures the phenomenon that the probability distribution of the next state sometimes depends on less than @xmath0 of the preceding states . </S>",
    "<S> this allows compressing the information needed to describe an m - mc . </S>",
    "<S> the scot construction has been earlier used under various names : vlmc , vomc , pst , ctw .    in this paper </S>",
    "<S> we study the possibility of reducing the m - mc to a 1-mc on the leaves of the scot . </S>",
    "<S> such context trees are called _ perfect - memory_. we give various combinatorial characterizations of perfect - memory context trees and an efficient algorithm to find the minimal perfect - memory extension of a scot .    * index terms * context tree , vlmc , scot , m - mc , memory structure , dimension reduction </S>"
  ]
}
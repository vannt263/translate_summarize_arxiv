{
  "article_text": [
    "in recent years the research in the field of smart grids has had a significant increase in exploring the concept of interconnected microgrids @xcite .",
    "this approach has resulted in novel types of typologies for electrical grids and new aspects of such systems that should be considered .",
    "some of the most prominent newly emerged problems are the maximizing of self - adequacy @xcite , reliability , supply - security @xcite and the potential for self - healing @xcite of such systems . in many cases",
    "the underlying optimization problems are of a very high complexity and can not be solved to optimality in polynomial time .",
    "electrical grids are systems of gigantic size , which makes their optimization very hard from a computational point of view . luckily , previous research has shown that for many systems it is not necessary to use highly detailed models ; often simplified graph ones can give sufficiently good approximations to the original problem .",
    "the family of graph partitioning problems has proven to be closely related to power supply and delivery networks @xcite .    in a system of interconnected microgrids",
    "each microgrid is made as independent from the rest of the system as possible ; this results in many positive characteristics .",
    "some examples are the lower complexity of the entire grid and enhanced reliability of each of the microgrids due to the increased resistance to failures in other parts of the system .",
    "the term independent is used for the case when there is a minimum of power exchange between the connected microgrids .",
    "this property of the system is formally defined as the maximization of self - adequacy of interconnected microgrids .",
    "recently , research has been conducted in developing algorithms for finding approximate solutions @xcite to this problem .",
    "previous research has also explored the closely related problem of efficient decomposition or islanding of large grids into islands with a balanced generation / load subject to specific constraints @xcite . due to the large complexity and size of electrical grids , when attempting to model and optimize some global properties , it is frequently convenient to use simplified graph models .",
    "such models often result in different versions of graph partitioning problems suitable for specific real life applications .",
    "some examples are having a balanced partitioning @xcite , minimizing the number or weight of cuts @xcite , or by limiting the number of cuts @xcite .",
    "the focus of this paper is on the maximal partitioning of graphs with supply and demand ( mpgsd ) .",
    "the majority of previous research has been dedicated to the theoretical aspects of this problem @xcite .",
    "a significant part of the published work is focused on solving this problem for specific types of graphs like trees @xcite and series - parallel graphs @xcite . a method for finding solutions with",
    "a guarantee of a @xmath0-approximation for general graphs has been presented in @xcite .",
    "different variations of the original problem have been developed , like a parametric version @xcite and one with additional capacity constraints @xcite .    in this paper",
    "we present an ant colony optimization ( aco ) @xcite approach for finding high quality approximate solutions to the mpgsd .",
    "aco has previously been successfully applied to problems of multiway @xcite and balanced @xcite graph partitioning .",
    "the same method has also proven to be suitable for the closely related problems of graph cutting @xcite and covering @xcite and partitioning of meshes @xcite . the proposed aco adaptation for our problem of interest",
    "is based on the greedy algorithm presented in @xcite .",
    "the aco algorithm is further improved by combining it with our previously developed correction procedure @xcite . in our tests on general graphs and trees ,",
    "we show that the newly developed method frequently manages to find optimal solutions and has a small average error when compared to known optimal solutions .",
    "the paper is organized as follows . in the second section",
    "we give the definition of the mpgsd .",
    "then we provide a short outline of a greedy algorithm which is used as a basis for the proposed method . in the third section we present details of our aco algorithm . in the subsequent sections we discuss results of our computational experiments and provide some conclusions .",
    "the mpgsd is defined for an undirected graph @xmath1 with a set of nodes @xmath2 and a set of edges @xmath3 .",
    "the set of nodes @xmath2 is split into two disjunct subsets @xmath4 and @xmath5 .",
    "each node @xmath6 will be called a supply vertex and will have a corresponding positive integer value @xmath7 .",
    "elements of the second subset @xmath8 will be called demand vertices and will have a corresponding positive integer value @xmath9 .",
    "the goal is to find a partitioning @xmath10 of the graph @xmath11 that satisfies the following constraints .",
    "all the subgraphs in @xmath12 must be connected subgraphs containing only a single distinct supply node . as a result",
    "we have @xmath13 .",
    "each of the @xmath14 must have a supply greater or equal to its total demand .",
    "each demand vertex can be an element of only one subgraph , or in other words it can only receive power from one supply vertex through the edges of @xmath11 .    with the intention of having a simpler notation , we will use strictly negative values for demand nodes and positive values for supply nodes ( note that this is slightly different from the definition of @xcite ) .",
    "the goal is to maximize the fulfillment of demands , or more precisely to maximize the following sum .",
    "@xmath15 while the following constraints are satisfied for all @xmath16 @xmath17    an illustration of the mpgsd is given in figure [ fig : problemcolor ] .",
    "it has been shown that the mpgsd is np - hard even in the case of a graph containing only one supply node and having a star structure @xcite .",
    "in this section we give a short overview of the greedy algorithm , for which details can be found in @xcite , that is used as a base for the aco method for the mpgsd .",
    "as previously stated , the solution of the problem of interest is a set of @xmath18 subgraphs where @xmath19 is the number of supply nodes . in the initial step of the algorithm",
    "we start with @xmath20 disjunct subgraphs @xmath14 , that only contain one supply node @xmath21 . at each of the following steps ( iterations ) of the algorithm",
    "one vertex @xmath8 is selected and used to expand a selected subgraph @xmath14 .",
    "the selection of both @xmath22 and @xmath14 is performed in a way that the newly generated subgraph satisfies the constraints of being connected , disjunct and fulfills eq .",
    "[ constarint ] .",
    "let us define @xmath23 as the set of adjacent vertices to @xmath22 in @xmath11 using the following equation @xmath24    the idea is to gradually expand each of the subgraphs @xmath14 by adding new vertices @xmath22 to them .",
    "the set of potential candidates for expansion of subgraph @xmath14 , or in other words vertices that are adjacent to the @xmath14 , can be defined using the extension of @xmath23 to subgraphs .",
    "it is important to note that as the subgraph @xmath14 will be changed in subsequent iteration , the notation @xmath25 will be used to specify the state of subgraph @xmath14 at iteration @xmath26 .",
    "now we can extend the definition of @xmath23 with the following equation .",
    "@xmath27    it is evident that if the expansion of subgraph @xmath25 is done by @xmath28 the newly created subgraph @xmath29 will be connected , but it is not necessary that the other constraints will be satisfied . more precisely , the new @xmath29 need not satisfy eq . [ constarint ] , or there may exist such an @xmath30 that @xmath31 for the new subgraph .",
    "this can be avoided if instead of using set @xmath32 , we use a restricted set of vertices @xmath33 that guarantees that the constraints will be satisfied when @xmath34 is expanded using @xmath35 .",
    "we shall first define @xmath36 as the available supply for subgraph @xmath14 at iteration @xmath26 in the following equation . @xmath37 using @xmath36 given in eq .",
    "[ available ] , @xmath33 is defined in the following way .",
    "@xmath38    the sets @xmath33 are used to specify the greedy algorithm for the mpgsd in combination with two heuristic functions . more precisely , at each iteration one heuristic @xmath39 is used to select the subgraph @xmath25 most suitable for expansion , and the second heuristic @xmath40 will be used to select the best @xmath35 to be added to @xmath25 .",
    "an extensive analysis of potential heuristics is given in our previous work given in articles@xcite .",
    "this procedure will be repeated until it is not possible to expand any of the subgraphs .",
    "in this section we present an aco approach for solving the mpgsd , based on the greedy algorithm from @xcite , outlined in the previous section .",
    "the general idea of aco algorithms is to perform an `` intelligent '' randomization of an appropriate greedy algorithm for the problem of interest .",
    "there are several variations of aco , out of which the ant colony system @xcite is most commonly used . in it",
    "the `` intelligence '' comes from experience gained by previously generated solutions , which is stored in a pheromone matrix . in practice",
    ", a colony of @xmath20 artificial ants generates solutions using a probabilistic algorithm based on a heuristic function and the pheromone matrix . as in the case of the greedy algorithm ,",
    "an ant generates a solution by expanding a partial one through steps .",
    "the difference is that instead of using a heuristic function it uses a probabilistic transition rule to decide what is to be added to the partial solution .",
    "the pheromone matrix stores the experience gathered by the artificial ants .",
    "this is done by applying a global and local update rule to the pheromone matrix .",
    "the global update rule is used after all @xmath20 ants in the colony have generated a solution and it reinforces the selection of elements inside of the best found solution or in some variations of good solutions .",
    "the local update is performed after an ant has applied the transition rule , and its purpose is to diversify the search of the solution space by avoiding the selection of the same elements of the solution by all of the ants .    before defining the aco algorithm for the mpgsd , we will first state some observations regarding the greedy algorithm and the form of the solution of the problem . a solution @xmath12 of the mpgsd can also be observed as a set of pairs @xmath41 , which states that node @xmath22 is inside subgraph @xmath42 . in this notation",
    "we will include @xmath43 for the case where @xmath22 is not a member of any subgraph @xmath42 . from this type of notation",
    "we realize that in the algorithm given in the previous section only the second stage , the selection of node @xmath22 , directly specifies the elements of the solution .",
    "the purpose of the heuristic in the first stage is to make it possible to perform a good expansion of the partial solution , which is of significant importance when only one solution is generated using a deterministic algorithm . in case of an aco algorithm",
    "this becomes less important since many solutions are generated and the `` steering '' in the direction of good solutions is , to a large extent , done by the pheromone matrix .",
    "because of this , in the proposed aco algorithm the heuristic function at this stage will be substituted with a random selection from the set of subgraphs that can be expanded . in this way the aco mechanism will only be dedicated to the selection of expansion nodes .      to specify the aco for the mpgsd we need to define the transition rule , global and local update rules . in all of the following equations",
    "we will assume that we have a randomly selected subgraph @xmath42 with index @xmath44 .",
    "we will first define the transition rule , based on the same heuristic function as in @xcite , defined in the following equation . @xmath45    the heuristic function @xmath46 given in eq .",
    "[ hv ] states that vertices with high demand are considered more desirable .",
    "the logic behind this is that it gets harder to satisfy high demands as the algorithm progresses since the available supply decreases as new vertices are added to the subgraphs . because of this it is better to resolve high demands early .    using @xmath46",
    "we can define the transition rule for individual ants .",
    "this selection is done using a combination of deterministic and probabilistic steps .",
    "first we need to include the constraint that only vertices from the set @xmath33 can be selected .",
    "we specify this constraint using the following equation .",
    "@xmath47    in eq .",
    "[ definicijaraspodele ] , @xmath48 gives us the probability of selecting node @xmath22 at step @xmath26 .",
    "as previously stated we only consider @xmath49 where @xmath44 is the selected subgraph , as a consequence the probability of selecting @xmath50 is @xmath51 .",
    "for the nodes that are elements of @xmath52 their selection is done using the following formula .",
    "@xmath53    in eq .",
    "[ definicijaprobability ] @xmath54 gives us the probability of selecting node @xmath22 at step @xmath26 .",
    "the values of the pheromone matrix @xmath55 correspond to elements of the solution in the form of a vertex - subgraph pair @xmath56 . in the same equation parameter @xmath57",
    "is used to define the exploitation/ exploration rate .",
    "connected to it , @xmath58 is a random variable which specifies whether the next selected node will be deterministic or non - deterministic . in the case of the former @xmath59",
    ", we simply select the node @xmath22 with the maximal value of @xmath60 , which results in a probability @xmath61 .",
    "if the selection is non - deterministic ( @xmath62 ) , the probability distribution for node selection is given in the last row of eq .",
    "[ definicijaprobability ] .",
    "the next component of the aco method that needs to be specified is the global update rule .",
    "the proposed aco algorithm is based on the ant colony system , in which only the best found solution deposits pheromone after each iteration of the colony .",
    "this update is formally defined using the following equations @xmath63    @xmath64    in eq .",
    "[ definicijadeltatau ] @xmath65 is used to note the currently best found solution .",
    "@xmath66 is used to specify the quality of the solution @xmath65 using function @xmath67 for which we will give details in the implementation subsection . in eq .",
    "[ definiciajtau ] , the parameter @xmath68 is used to specify the influence of the global update rule .",
    "it is important to point out that eq .",
    "[ definiciajtau ] only effects the values of pheromone @xmath69 for @xmath70 .    as previously mentioned the local update rule",
    "is applied after individual ants perform the transition rule . in our implementation",
    "the local update rule is applied after an ant @xmath71 has generated a solution @xmath72 using the following formula @xmath73    in eq .",
    "[ definicijalocal ] @xmath74 is used to specify the influence of the local update rule .      in this section",
    "we give details of the implementation of the proposed aco algorithm .",
    "the first necessary step is to define a suitable quality function @xmath67 for the generated solutions .",
    "this is done by using the following equations .",
    "@xmath75    eq .  [ quality ]",
    "states that the quality of the solution will be inversely proportional to the difference of @xmath76 , the total initially available supply in @xmath11 and the satisfied demand @xmath77 of partitioning @xmath12 . to avoid division by zero one",
    "is added to this value . using this measure ,",
    "the initial value of all the pheromone matrix elements @xmath78 is set to the value @xmath79 , where @xmath80 is the solution acquired using the previously outlined greedy algorithm .",
    "more precisely , it corresponds to the method presented in @xcite , where the node selection heuristic is the maximal demand and the subgraph selection heuristic is the maximal available supply .    with the goal of having a better presentation of the proposed method , it is presented in the form of the following pseudo - code",
    "generate solution @xmath80 using the greedy algorithm initialize the pheromone matrix @xmath81 with @xmath79 @xmath82    as illustrated in the pseudo - code , the first step is generating a solution using a greedy algorithm and initializing the pheromone matrix @xmath81 .",
    "the main loop performs one iteration for the colony of ants by generating a solution for each of the @xmath20 artificial ants . for each of the ants we start with the initial partitioning @xmath12 . at each iteration of the following loop ,",
    "we randomly select a subgraph @xmath83 , and using the transition rule a node @xmath22 is selected for expansion .",
    "after each such step it is necessary to update the auxiliary structures , presented in @xcite , that are used to make the proposed algorithm computation efficient .",
    "after an ant has generated a solution @xmath12 we apply the correction procedure , presented in @xcite , which corresponds to a local search to improve its quality .",
    "this is done due to the fact that , in general , aco algorithms have a problem with narrowing on local minima .",
    "it has been shown that the performance of such methods can be significantly improved if they are combined with a local search .",
    "for the newly acquired solution we apply the local update rule given in eq .",
    "[ definicijalocal ] .",
    "after all of the ants in the colony have generated their solutions we apply the global update rule given in eq .",
    "[ definiciajtau ] for the best solution @xmath84 found by the algorithm for all the previous iterations .",
    "in this section we present the results of our computational experiments used to evaluate the performance of the proposed aco methods .",
    "we give a comparison of the proposed aco algorithm , with ( aco - c ) and without ( aco ) the use of a correction procedure , and the basic greedy algorithm ( gr ) .",
    "all the algorithms have been implemented in c # using microsoft visual studio 2012 .",
    "the source code and the executive files have been made available at @xcite .",
    "the calculations have been done on a machine with intel(r ) core(tm ) i7 - 2630 qm cpu 2.00 ghz , 4 gb of ddr3 - 1333 ram , running on microsoft windows 7 home premium 64-bit .",
    "410ptx*13c    sup x dem & & & + & gr & aco & aco - c & gr & aco & aco - c & gr & aco & aco - c + 2 x 6 & 7.45(8.71 ) & 0.28(1.77 ) & 0.00(0.00 ) & 46.10 & 11.36 & 0.00 & 17 & 39 & 40 + 2 x 10 & 5.62(4.39 ) & 0.24(0.60 ) & 0.00(0.00 ) & 23.08 & 3.04 & 0.00 & 4 & 32 & 40 + 2 x 20 & 1.85(1.11 ) & 0.09(0.13 ) & 0.00(0.00 ) & 4.21 & 0.46 & 0.00 & 1 & 26 & 40 + 2 x 40 & 0.77(0.50 ) & 0.00(0.00 ) & 0.00(0.00 ) & 1.74 & 0.00 & 0.00 & 3 & 40 & 40 + 5 x 15 & 10.88(7.77 ) & 0.59(1.31 ) & 0.13(0.44 ) & 38.78 & 7.14 & 2.22 & 0 & 28 & 36 + 5 x 25 & 7.89(5.99 ) & 0.78(0.77 ) & 0.22(0.29 ) & 34.62 & 3.84 & 1.07 & 0 & 7 & 21 + 5 x 50 & 3.89(2.62 ) & 0.15(0.13 ) & 0.01(0.03 ) & 10.27 & 0.65 & 0.10 & 0 & 8 & 35 + 5 x 100 & 2.01(2.54 ) & 0.02(0.03 ) & 0.00(0.00 ) & 13.63 & 0.13 & 0.00 & 0 & 26 & 40 + 10 x 30 & 11.53(4.44 ) & 0.51(0.82 ) & 0.16(0.40 ) & 23.88 & 4.29 & 1.60 & 0 & 19 & 32 + 10 x 50 & 7.36(2.79 ) & 1.08(0.45 ) & 0.26(0.26 ) & 14.19 & 2.20 & 0.90 & 0 & 0 & 13 + 10 x 100 & 3.92(2.44 ) & 0.28(0.14 ) & 0.05(0.05 ) & 13.14 & 0.69 & 0.18 & 0 & 0 & 18 + 10 x 200 & 2.52(2.81 ) & 0.10(0.05 ) & 0.00(0.00 ) & 12.98 & 0.22 & 0.00 & 0 & 1 & 40 + 25 x 75 & 12.14(3.16 ) & 1.63(1.08 ) & 0.28(0.29 ) & 19.23 & 5.38 & 1.14 & 0 & 1 & 12 + 25 x 125 & 8.64(2.07 ) & 1.76(0.58 ) & 0.51(0.31 ) & 13.64 & 3.16 & 1.49 & 0 & 0 & 0 + 25 x 250 & 4.60(1.49 ) & 0.83(0.19 ) & 0.13(0.06 ) & 8.68 & 1.22 & 0.23 & 0 & 0 & 0 + 25 x 500 & 2.81(1.37 ) & 0.44(0.07 ) & 0.01(0.02 ) & 6.10 & 0.56 & 0.06 & 0 & 0 & 11 + 50 x 150 & 12.04(1.86 ) & 2.20(0.78 ) & 0.46(0.40 ) & 15.63 & 3.91 & 1.78 & 0 & 0 & 3 + 50 x 250 & 8.76(1.34 ) & 2.67(0.47 ) & 0.84(0.22 ) & 10.80 & 3.59 & 1.42 & 0 & 0 & 0 + 50 x 500 & 4.65(1.28 ) & 1.56(0.23 ) & 0.31(0.07 ) & 7.39 & 2.27 & 0.50 & 0 & 0 & 0 + 50 x 1000 & 3.07(0.99 ) & 0.73(0.11 ) & 0.06(0.02 ) & 5.97 & 0.99 & 0.13 & 0 & 0 & 0 + 100 x 300 & 11.75(1.45 ) & 3.69(0.69 ) & 0.90(0.42 ) & 14.61 & 6.05 & 2.02 & 0 & 0 & 0 + 100 x 500 & 8.77(1.07 ) & 3.93(0.60 ) & 1.42(0.28 ) & 11.65 & 6.21 & 2.13 & 0 & 0 & 0 + 100 x 1000 & 4.67(0.89 ) & 2.29(0.22 ) & 0.60(0.07 ) & 7.04 & 2.71 & 0.74 & 0 & 0 & 0 + 100 x 2000 & 3.04(0.73 ) & 1.11(0.22 ) & 0.14(0.04 ) & 4.58 & 1.82 & 0.27 & 0 & 0 & 0 +    410ptx*13c    sup x dem & & & + & gr & aco & aco - c & gr & aco & aco - c & gr & aco & aco - c + 2 x 6 & 1.67(5.92 ) & 0.00(0.00 ) & 0.00(0.00 ) & 26.37 & 0.00 & 0.00 & 37 & 40 & 40 + 2 x 10 & 5.46(8.02 ) & 0.11(0.50 ) & 0.02(0.13 ) & 35.14 & 3.08 & 0.85 & 16 & 37 & 39 + 2 x 20 & 8.71(9.11 ) & 0.09(0.34 ) & 0.01(0.07 ) & 28.94 & 2.13 & 0.43 & 3 & 35 & 39 + 2 x 40 & 6.09(7.65 ) & 0.05(0.14 ) & 0.00(0.00 ) & 30.58 & 0.57 & 0.00 & 3 & 34 & 40 + 5 x 15 & 8.47(8.71 ) & 0.01(0.04 ) & 0.00(0.00 ) & 27.19 & 0.27 & 0.00 & 13 & 39 & 40 + 5 x 25 & 7.87(6.04 ) & 0.10(0.25 ) & 0.07(0.29 ) & 21.80 & 1.11 & 1.49 & 1 & 33 & 37 + 5 x 50 & 10.63(6.99 ) & 0.07(0.16 ) & 0.04(0.15 ) & 29.60 & 0.89 & 0.89 & 0 & 28 & 35 + 5 x 100 & 16.43(11.22 ) & 0.12(0.64 ) & 0.00(0.00 ) & 50.93 & 4.09 & 0.00 & 0 & 30 & 40 + 10 x 30 & 8.66(6.44 ) & 0.09(0.25 ) & 0.01(0.06 ) & 27.17 & 1.13 & 0.37 & 2 & 34 & 39 + 10 x 50 & 9.67(5.59 ) & 0.07(0.17 ) & 0.07(0.21 ) & 29.53 & 0.70 & 1.08 & 0 & 31 & 34 + 10 x 100 & 11.40(6.33 ) & 0.09(0.13 ) & 0.03(0.09 ) & 26.73 & 0.53 & 0.48 & 0 & 19 & 33 + 10 x 200 & 13.92(6.58 ) & 0.27(1.15 ) & 0.25(1.15 ) & 26.02 & 6.71 & 6.71 & 0 & 23 & 37 + 25 x 75 & 9.52(4.87 ) & 0.18(0.35 ) & 0.03(0.12 ) & 22.49 & 1.44 & 0.73 & 0 & 26 & 36 + 25 x 125 & 10.79(3.83 ) & 0.15(0.16 ) & 0.06(0.13 ) & 17.29 & 0.63 & 0.47 & 0 & 12 & 27 + 25 x 250 & 10.68(3.22 ) & 0.29(0.60 ) & 0.06(0.23 ) & 20.23 & 2.73 & 1.31 & 0 & 9 & 30 + 25 x 500 & 11.64(3.93 ) & 0.48(0.69 ) & 0.14(0.34 ) & 19.37 & 2.72 & 1.27 & 0 & 2 & 30 + 50 x 150 & 8.66(2.93 ) & 0.15(0.18 ) & 0.04(0.09 ) & 17.04 & 0.76 & 0.46 & 0 & 13 & 30 + 50 x 250 & 10.20(3.07 ) & 0.31(0.29 ) & 0.07(0.09 ) & 18.72 & 1.23 & 0.39 & 0 & 2 & 17 + 50 x 500 & 11.92(3.03 ) & 0.44(0.50 ) & 0.05(0.13 ) & 18.84 & 2.21 & 0.79 & 0 & 0 & 11 + 50 x 1000 & 12.75(2.41 ) & 1.09(0.85 ) & 0.51(0.60 ) & 18.30 & 3.61 & 1.92 & 0 & 0 & 10 + 100 x 300 & 9.83(1.99 ) & 0.27(0.18 ) & 0.09(0.15 ) & 14.11 & 0.81 & 0.64 & 0 & 2 & 17 + 100 x 500 & 10.26(1.79 ) & 0.56(0.35 ) & 0.08(0.06 ) & 14.43 & 1.62 & 0.21 & 0 & 0 & 3 + 100 x 1000 & 11.18(1.82 ) & 1.05(0.51 ) & 0.18(0.29 ) & 14.55 & 2.25 & 1.55 & 0 & 0 & 3 + 100 x 2000 & 12.07(1.86 ) & 2.03(0.75 ) & 0.97(0.75 ) & 17.49 & 3.69 & 3.99 & 0 & 0 & 0 +    to have an extensive evaluation of the proposed algorithm tests have been conducted on a wide range of graphs .",
    "we have used 24 different graph sizes having 2 - 100 supply nodes and 6 - 2000 demand nodes . for each of the test sizes",
    "40 different problem instances have been generated .",
    "we have compared the average solution and the number of found optimal solutions for each size . with the goal of observing the potential dependence between the method performance and graph structure ,",
    "we have performed tests on trees and general graphs .",
    "the same data sets have been used in the article @xcite , which can be downloaded from @xcite , where specifics of the method for their generation are presented .",
    "it is important to note that the optimal solutions are known for each of the test instances due to the algorithm used for their generation .    for each of the 40 problem instances , inside of one graph size",
    ", a single run of the aco algorithm has been performed for both versions of the method . in each of the runs the colony had @xmath85 ants and 150 iterations",
    "have been performed . in practice",
    "this means that 1500 solutions have been generated for each test instance .",
    "the parameters for specifying the influence of the global and the local update rules had the following values @xmath86 and @xmath87 .",
    "we have used the value @xmath88 to define the exploitation / exploration rate .",
    "the chosen parameters correspond to the commonly used values for the aco algorithm , for which our initial tests have shown that they give the best performance .",
    "the results of the conducted computational experiments are presented in tables [ table : gencor ] , [ table : treecor ] for general graphs and trees , respectively .",
    "the values in these tables represent the average normalized error of the found solutions compared to the known optimal one , for each of the used methods .",
    "more precisely , for each of the 40 test instances , for each graph size , the normalized error is calculated by @xmath89 , and we show the average value in tables [ table : gencor ] , [ table : treecor ] . to have a better comprehension of the performance we have also included the standard deviation and maximal errors .",
    "the last value included in these tables is the number of found optimal solutions ( hits ) for each graph size out of the 40 test instances .    for both types of graphs ,",
    "there is a very significant improvement of the aco algorithms when compared to the basic greedy algorithm . in case of the greedy algorithm",
    "the average error varies from less than 1% to even 16% , while for the aco algorithm the range is between 0 - 4% , and in case of aco - c it is within 0 - 1.5% .",
    "the aco - c method proves to be very robust in the sense that maximal error has never exceeded 7% , and has been greater than 1% in only 17 out of the 48 graphs sizes .",
    "the basic aco significantly improves the maximal error when compared with the greedy algorithm but lacks behind aco - c with the maximal error never exceeding 12% and being less than 1% in 50% of test sizes .",
    "it is important to note that there is a difference in performance of the methods for general graphs and trees .",
    "while the greedy algorithm has a slightly better performance in case of general graphs , in case of the proposed aco algorithms we have an opposite situation .",
    "in case of trees , the aco had only twice an average error higher than 1% and never higher than 2.03% .",
    "aco - c produces even better results with never having an error greater than 1% , and having an error of less than 0.1% in 19 out of 24 graph sizes .",
    "the results in tables [ table : gencor ] and [ table : treecor ] show that the greedy algorithm only manages to find optimal solutions in the case of the smallest graphs . on the other hand the aco - c manages to find the optimal solution for about 50% of the test instances , while aco is close to 30% . as in the case of average errors",
    "both aco methods have a significantly better performance for trees than for general graphs . in case of trees aco - c",
    "has found the optimal solution for 65% of the test instances , but it would rarely find ones for the largest graphs .            due to the stochastic nature of the aco algorithm , we have also performed multiple runs of aco and aco - c , with different seeds for the random number generator , on a single problem instance . in case of this type of analysis , for small problem instances both methods have a very good performance and manage to find the best solution for the vast majority of runs .",
    "the interesting cases are connected to the  harder to solve  large graph sizes .",
    "the behavior of both algorithms is similar for all tested instances in one problem size , because of which we believe it is sufficient to give a graphic illustration only for a single test instance for general graphs and trees in figures [ fig : general ] , [ fig : tree ] . in case of general graphs , in figure",
    "[ fig : general ] , we can see that aco - c has a significantly higher speed of convergence .",
    "aco - c also proves to be significantly more reliable , since its maximal error is lower than the minimal error for aco .",
    "we can also see that both methods have a notable dependence on the selected seed of the random number generator since the difference between minimal and maximal error is 2% and 1% for aco and aco - c , respectively .",
    "the results in figure [ fig : tree ] , for trees , show that the advantage of aco - c is much lower when compared to aco .",
    "the range of error for both methods is much lower in case of trees .    from the performed tests we can conclude that the proposed aco algorithm is a very effective method for solving the mpgsd .",
    "the tests have also shown that , as for many others , in the case of the problem of interest the performance of the aco algorithm can be significantly improved by adding a local search method . finally , the quality of the solutions acquired by the aco and aco - c is to a certain extent dependent on the seed of the random number generator . because of this fact , when applying the proposed method it is advisable to perform multiple runs to get the highest quality of found solutions .",
    "in this paper we have presented an ant colony optimization algorithm for solving the problem of the maximum partitioning of graphs with supply and demand . to the best of our knowledge ,",
    "this is the first time that the aco metaheuristic has been applied to this type of problem .",
    "the basic aco algorithm has been combined with a local search to enhance the performance of the method .",
    "our computational experiments have shown that the proposed approach managed to find the optimal solutions in more than 50% of the test problem instances , and had an average relative error of less then 0.5% .",
    "the tests have been performed on trees and general graphs and shown that the method is more suitable for trees .    in the future",
    "we plan to adapt the method to a less constrained and a stochastic version of the problem .",
    "this type of research can prove to be very beneficial for problems appearing in the field of electrical distribution systems especially for the optimization of self - adequacy of interconnected microgrids and other related problems .",
    "s.  arefifar , y .- r .",
    "mohamed , t.  el - fouly , comprehensive operational planning framework for self - healing control actions in smart distribution grids , power systems , ieee transactions on 28  ( 4 ) ( 2013 ) 41924200 .",
    "a.  popa , modelling the power supply network - hardness and approximation , in : t .- h .",
    "chan , l.  lau , l.  trevisan ( eds . ) , theory and applications of models of computation , vol .",
    "7876 of lecture notes in computer science , springer berlin heidelberg , 2013 , pp . 6271 .",
    "k.  sun , d .- z .",
    "zheng , q.  lu , a simulation study of obdd - based proper splitting strategies for power systems under consideration of transient stability , ieee transactions on power systems 20  ( 1 ) ( 2005 ) 389399 .",
    "s.  morishita , t.  nishizeki , parametric power supply networks , in : d .- z .",
    "du , g.  zhang ( eds . ) , computing and combinatorics , vol .",
    "7936 of lecture notes in computer science , springer berlin heidelberg , 2013 , pp . 245256 .",
    "f.  comellas , e.  sapena , a multiagent algorithm for graph partitioning , in : f.  rothlauf , j.  branke , s.  cagnoni , e.  costa , c.  cotta , r.  drechsler , e.  lutton , p.  machado , j.  moore , j.  romero , g.  smith , g.  squillero , h.  takagi ( eds . ) , applications of evolutionary computing , vol .",
    "3907 of lecture notes in computer science , springer berlin heidelberg , 2006 , pp . 279285 .",
    "m.  hinne , e.  marchiori , cutting graphs using competing ant colonies and an edge clustering heuristic , in : p.  merz , j .- k .",
    "hao ( eds . ) , evolutionary computation in combinatorial optimization , vol .",
    "6622 of lecture notes in computer science , springer berlin heidelberg , 2011 , pp . 6071 .",
    "p.  korosec , j.  silc , b.  robic , mesh - partitioning with the multiple ant - colony algorithm , in : m.  dorigo , m.  birattari , c.  blum , l.  gambardella , f.  mondada , t.  stutzle ( eds . ) , ant colony optimization and swarm intelligence , vol .",
    "3172 of lecture notes in computer science , springer berlin heidelberg , 2004 , pp . 430431 .",
    "r.  jovanovic , a.  bousselham , a greedy method for optimizing the self - adequacy of microgrids presented as partitioning of graphs with supply and demand , in : the 2nd international renewable and sustainable energy conference ouarzazate , morocco  october 17 - 19 , 2014 , ieee conference , 2014 , pp .",
    "154159 .",
    "r.  jovanovic , benchmark data sets for the problem of partitioning graphs with supply and demand ( 2013 ) ."
  ],
  "abstract_text": [
    "<S> in this paper we focus on finding high quality solutions for the problem of maximum partitioning of graphs with supply and demand ( mpgsd ) . </S>",
    "<S> there is a growing interest for the mpgsd due to its close connection to problems appearing in the field of electrical distribution systems , especially for the optimization of self - adequacy of interconnected microgrids . </S>",
    "<S> we propose an ant colony optimization algorithm for the problem . with the goal of further improving the algorithm </S>",
    "<S> we combine it with a previously developed correction procedure . in our computational experiments </S>",
    "<S> we evaluate the performance of the proposed algorithm on both trees and general graphs . </S>",
    "<S> the tests show that the method manages to find optimal solutions in more than 50% of the problem instances , and has an average relative error of less than 0.5% when compared to known optimal solutions .    </S>",
    "<S> ant colony optimization , microgrid , graph partitioning , demand vertex , supply vertex , combinatorial optimization </S>"
  ]
}
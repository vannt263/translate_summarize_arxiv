{
  "article_text": [
    "completely integrable nonlinear partial differential equations ( pdes ) have a rich mathematical structure and many hidden properties .",
    "for example , these pdes have infinitely many conservation laws and generalized symmetries of increasing order .",
    "they have the painlev property @xcite , bi - hamiltonian ( sometimes tri - hamiltonian ) structures @xcite , lax pairs @xcite , bcklund and darboux transformations @xcite , etc .",
    "completely integrable pdes can be solved with the inverse scattering transform ( ist ) @xcite .",
    "application of the ist or hirota s direct method @xcite allows one to construct explicit soliton solutions of any order .",
    "while there are numerous definitions of complete integrability , fokas  @xcite defines an equation as completely integrable if and only if it possesses infinitely many generalized symmetries .",
    "a _ recursion operator _ ( also called a formal symmetry or a master symmetry ) is a linear integro - differential operator which links such symmetries .",
    "the recursion operator is thus a key tool for proving the existence of an infinite hierarchy of generalized symmetries  @xcite and for computing them sequentially .",
    "the recursion operator story @xcite starts with the korteweg - de vries ( kdv ) equation , @xmath1 which is undeniably the most famous completely integrable pde .",
    "the first few generalized symmetries ( of infinitely many ) for the kdv equation are @xmath2 note that generalized symmetries depend on the dependent variables of the system as well as the @xmath3-derivatives of the dependent variables ( in contrast to so - called lie - point or _ geometric _ symmetries which only depend on the independent and dependent variables of the system ) .",
    "the kdv equation is a member of a hierarchy of integrable pdes , which are higher - order symmetries of the kdv itself .",
    "for example , the lax equation @xcite , which is the fifth - order member in the hierarchy , is @xmath4 based on the recursion formula @xcite due to lenard , in 1977 olver @xcite derived an explicit recursion operator for the kdv equation , namely @xmath5 in ( [ kdvrecursion ] ) , @xmath6 denotes the total derivative with respect to @xmath7 @xmath8 is its left inverse , and @xmath9 is the identity operator .",
    "total derivatives act on differential functions @xcite , i.e.  differentiable functions of independent variables , dependent variables , and their derivatives up to an arbitrary but fixed order .",
    "the recursion operator ( [ kdvrecursion ] ) allows one to generate an infinite sequence of local generalized symmetries of the kdv equation . indeed , starting from  seed \" or ",
    "root \" @xmath10 repeated application of the recursion operator ( [ kdvrecursion ] ) , @xmath11 produces the symmetries in ( [ kdvsym ] ) and infinitely many more .",
    "analysis of the form of recursion operators like ( [ kdvrecursion ] ) reveals that they can be split into a ( local ) differential part , @xmath12 and a ( non - local ) integral part @xmath13 the differential operator @xmath14 involves @xmath15 etc .",
    ", acting on monomials in the dependent variables . barring strange cases @xcite , the integral operator @xmath16 only involves @xmath8 and can be written as the outer product of generalized symmetries and cosymmetries ( or conserved covariants )  @xcite . furthermore",
    ", if @xmath17 is a recursion operator , then the lie derivative  @xcite of @xmath17 with respect to the evolution equation is zero .",
    "the latter provides an explicit defining equation for the recursion operator .    for more information on the history of completely integrable systems and recursion operators ,",
    "see  @xcite . based on studies of formal symmetries and recursion operators , researchers",
    "have compiled lists of integrable pdes @xcite .    while the computation of the lie derivative of @xmath17 is fairly straightforward , it is computationally intensive and prone to error when done by hand .",
    "for example , the computation of the recursion operators of the kaup - kupershmidt equation or the hirota - satsuma system ( see section  [ sec : examples ] ) may take weeks to complete by hand and might fill dozens of pages . using a computer algebra system to carry out the lengthy computations is recommended , yet , it is not without challenge either ; systems like _ mathematica _ and _ maple _ are designed to primarily work with commutative algebraic structures and the computation and application of recursion operators requires non - commutative operations .",
    "there is a variety of methods @xcite to construct recursion operators ( or master symmetries ) .",
    "as shown in @xcite , one first finds a bi - hamiltonian structure ( with hamiltonians @xmath18 and @xmath19 ) for the given evolution equation and then constructs the recursion operator as @xmath20 , provided @xmath19 is invertible ; for the kdv equation , @xmath21 and @xmath22 form a hamiltonian pair @xcite and @xmath20 yields ( [ kdvrecursion ] ) . the hamiltonians are cosymplectic operators , their inverses are symplectic operators  @xcite . a complicated example of a recursion operator ( obtained by composing cosymplectic a symplectic operators of a vector derivative schrdinger equation ) can be found in @xcite",
    ".    a recent approach @xcite uses the symbolic method of gelfand and dickey @xcite , and applies to non - local and non - evolutionary equations such as the benjamin - ono and camassa - holm equations .    at the cost of generality",
    ", we advocate a direct approach which applies to polynomial evolution equations . in the spirit of work by bilge @xcite",
    ", we use the scaling invariance of the given pde to build a polynomial candidate recursion operator as a linear combination of scaling homogeneous terms with constant undetermined coefficients . the defining equation for the recursion operator",
    "is then used to compute the undetermined coefficients .",
    "the goals of our paper are threefold .",
    "we present ( i ) an algorithmic method in a language that appeals to specialists and non - specialists alike , ( ii ) a symbolic package in _ mathematica _ to carry out the tedious computations , ( iii ) a set of carefully selected examples to illustrate the algorithm and the code .",
    "the theory on which our algorithm is based has been covered extensively in the literature @xcite .",
    "our paper focuses on _ how _ things work rather than on _ why _ they work . the package ` pderecursionoperator.m `  @xcite is part of our symbolic software collection for the integrability testing of nonlinear pdes , including algorithms and _ mathematica _ codes for the painlev test @xcite and the computation of conservation laws @xcite , generalized symmetries @xcite and recursion operators @xcite . as a matter of fact ,",
    "our package ` pderecursionoperator.m ` builds on the code ` invariantssymmetries.m ` @xcite for the computation of conserved densities and generalized symmetries for nonlinear pdes .",
    "the code ` pderecursionoperator.m ` automatically computes _ polynomial _ recursion operators for polynomial systems of nonlinear pdes in @xmath0 dimensions , i.e.  pdes in one space variable @xmath3 and time @xmath23 at present , the coefficients in the pdes can not _ explicitly _ depend on @xmath3 and @xmath23 our code can find recursion operators with coefficients that _ explicitly _ depend on powers of @xmath3 and @xmath24 as long as the maximal degree of these variables is specified .",
    "for example , if the maximal degree is set to @xmath25 , then the coefficients will be at most linear in both @xmath3 and @xmath23 an example of a recursion operator that explicitly depends on @xmath3 and @xmath24 is given in section  [ subsec : burgers ] . for extra versatility",
    ", the code can be used to test polynomial and rational recursion operators found in the literature , computed by hand , or with other software packages .",
    "drawing on the analogies with the pde case , we also developed methods , algorithms , and software to compute conservation laws @xcite and generalized symmetries @xcite of nonlinear differential - difference equations ( ddes ) .",
    "although the algorithm is well - established @xcite , a _ mathematica",
    "_ package that automatically computes recursion operators of nonlinear ddes is still under development .",
    "the paper is organized as follows . in section  [ sec : algorithm ] we briefly discuss our method for computing scaling invariance , conserved densities , and generalized symmetries ( which are essential pieces for the computation of recursion operators ) .",
    "our method for computing and testing recursion operators is discussed in section  [ sec : algorecursion ] . in section  [ sec : examples ] , we illustrate the subtleties of the method using the kdv equation , the kaup - kupershmidt equation , and the hirota - satsuma system of coupled kdv ( ckdv ) equations .",
    "the details of computing and testing recursion operators are discussed in section  [ sec : keyalgorithms ] .",
    "section  [ sec : othersoftware ] compares our software package to other software packages for computing recursion operators . in section  [ sec : additionalexamples ] we give additional examples to demonstrate the capabilities of our software .",
    "a discussion of the results and future generalizations are given in section  [ sec : conclusions ] .",
    "the use of the software package ` pderecursionoperator.m `  @xcite is shown in appendix  [ sec : softwareusage ] .",
    "consider a polynomial system of evolution equations in @xmath0 dimensions , @xmath26 where @xmath27 has @xmath28 components @xmath29 ,  , @xmath30 , @xmath31 has @xmath28 components @xmath32 ,  , @xmath33 and @xmath34 .",
    "henceforth we write @xmath35 although @xmath27 ( typically ) depends on @xmath36 and its @xmath3-derivatives up to some fixed order @xmath37 in the examples , we denote the components of @xmath31 as @xmath38 , @xmath39 ,  , @xmath40 . if present , any parameters in the pdes are assumed to be nonzero and are denoted by greek letters .",
    "our algorithms are based on scaling ( or dilation ) invariance , a feature common to many nonlinear pdes .",
    "if ( [ pdesystem ] ) is scaling invariant , then quantities like conserved densities , fluxes , generalized symmetries , and recursion operators are also scaling invariant  @xcite . indeed , since their defining equation must be satisfied on solutions of the pde , these quantities `` inherit '' the scaling symmetry of the original pde .",
    "thus , scaling invariance provides an elegant way to construct the form of candidate densities , generalized symmetries , and recursion operators .",
    "it suffices to make linear combinations ( with constant undetermined coefficients ) of scaling - homogeneous terms . inserting the candidates into their defining equations then leads to a linear system for the undetermined coefficients .",
    "many completely integrable nonlinear pdes are scaling invariant .",
    "pdes that are not scaling invariant can be made so by extending the set of dependent variables with parameters that scale appropriately , see @xcite for details .",
    "for example , the kdv equation ( [ kdv ] ) is invariant under the scaling symmetry @xmath41 where @xmath42 is an arbitrary parameter . indeed , upon scaling , a common factor @xmath43 can be pulled out . assigning _ weights _ ( denoted by @xmath44 to the variables based on the exponents in @xmath42 and setting @xmath45 ( or equivalently , @xmath46 ) gives @xmath47 and @xmath48 ( or @xmath49 ) .",
    "the _ rank _ of a monomial is its total weight ; in the kdv equation , all three terms are rank @xmath50 .",
    "we say that an equation is _ uniform in rank _ if every term in the equation has the same rank .",
    "conversely , requiring uniformity in rank in ( [ kdv ] ) yields @xmath51 hence , after setting @xmath52 one obtains @xmath53 and @xmath54 so , scaling symmetries can be computed with linear algebra .",
    "the first two conservation laws for the kdv equation are @xmath55 were classically known and correspond to the conservation of mass and momentum ( for water waves ) .",
    "whitham found the third conservation law , @xmath56 which corresponds to boussinesq s moment of instability .",
    "for ( [ pdesystem ] ) , each conservation law has the form @xmath57 where @xmath58 is the conserved density and @xmath59 is the associated flux .",
    "algorithms for computing conserved densities and generalized symmetries are described in  @xcite .",
    "our code , ` pderecursionoperator.m `  @xcite , uses these algorithms to compute the densities and generalized symmetries needed to construct the non - local part of the operator . for the benefit of the reader , we present an abbreviated version of these algorithms .    the kdv equation ( [ kdv ] ) has conserved densities for any even rank . to find the conserved density @xmath58 of rank @xmath60 we consider all the terms of the form @xmath61 where @xmath6 is the total derivative with respect to @xmath3 .",
    "hence , since @xmath47 , we have @xmath62 we then remove divergences and divergence equivalent terms @xcite , and take a linear combination ( with undetermined coefficients ) of the remaining terms as the candidate @xmath63 terms are divergence equivalent if and only if they differ by a divergence , for instance @xmath64 and @xmath65 are divergence equivalent because @xmath66 divergences are divergence equivalent to zero , such as @xmath67 thus , the candidate @xmath58 of rank @xmath68 is @xmath69 to determine the coefficients @xmath70 we require that ( [ conservationlaw ] ) holds on the solutions of ( [ pdesystem ] ) .",
    "in other words , we first compute @xmath71 and use ( [ pdesystem ] ) to remove @xmath72 etc . for the kdv equation ,",
    "@xmath73 after @xmath74 etc .  have been replaced using ( [ kdv ] ) .",
    "then , we require that @xmath71 is a total derivative with respect to @xmath75 to do so , for each component @xmath76 of @xmath36 , we apply the euler operator ( variational derivative ) to @xmath77 and set the result identically equal to zero  @xcite .",
    "the euler operator for @xmath36 is defined as @xmath78 where @xmath79 is the highest order needed . in our scalar example",
    "there is only one component ( @xmath80 ) . using ( [ dtrhokdv ] ) , which is of order @xmath81 @xmath82 to find the undetermined coefficients , we consider all monomials in @xmath38 and its derivatives as independent , giving a linear system for @xmath83 for the example , @xmath84 and taking @xmath85 and @xmath86 gives @xmath87 which is the conserved density in conservation law ( [ whitham ] ) .      a generalized symmetry",
    ", @xmath88 leaves the pde invariant under the replacement @xmath89 within order @xmath90  @xcite .",
    "hence , @xmath91 must satisfy the linearized equation @xmath92,\\ ] ] where @xmath93 $ ] is the frchet derivative of @xmath27 in the direction of @xmath94 @xmath95 =       \\frac{\\partial}{\\partial \\epsilon}\\left .",
    "{ \\mathbf{f}}({\\mathbf{u } }         + \\epsilon { \\mathbf{g } } ) \\right|_{\\epsilon = 0 }      = \\sum_{i=0}^m ( d_x^i { \\mathbf{g } } )         \\frac{\\partial { \\mathbf{f}}}{\\partial { \\mathbf{u}}_{ix}},\\ ] ] where @xmath79 is the order of @xmath96 the kdv equation ( [ kdv ] ) has generalized symmetries for any odd rank . to find the generalized symmetry of rank @xmath97 we again consider the terms in ( [ rankterms ] ) .",
    "this time we do not remove the divergences or divergence equivalent terms .",
    "the candidate generalized symmetry is then the linear combination of the monomials generated by ( [ rankterms ] ) .",
    "for the example , where @xmath47 , @xmath98 so the candidate generalized symmetry of rank @xmath99 is @xmath100 the undetermined coefficients are then found by computing ( [ symlineq ] ) and using ( [ pdesystem ] ) to remove @xmath101 etc .",
    "thus , continuing with the example we have @xmath102 again , considering all monomials in @xmath38 and its derivatives as independent gives a linear system for @xmath83 from ( [ systemforkdv ] ) , @xmath103 setting @xmath104 we find @xmath105 which is the fifth - order symmetry @xmath106 in ( [ kdvsym ] ) .",
    "a recursion operator , @xmath107 is a linear integro - differential operator which links generalized symmetries  @xcite , @xmath108 where @xmath109 is the gap and @xmath110 is the @xmath111-th generalized symmetry . in many cases , @xmath112",
    "because the generalized symmetries differ by a common rank _ and _ , starting from @xmath113 all higher - order symmetries can indeed be consecutively generated with the recursion operator .",
    "however , there are exceptions @xcite where @xmath114 or @xmath115 examples of the latter are given in sections  [ subsec : kkrecursion ] , [ subsec : hirotasatsuma ] , [ subsec : drinfeld ] , and appendix  [ sec : softwareusage ] .",
    "inspection of the ranks of generalized symmetries usually provides a hint on how to select the gap .",
    "if @xmath17 is a recursion operator for ( [ pdesystem ] ) , then the lie derivative  @xcite of @xmath17 is zero , which leads to the following defining equation : @xmath116 +    { \\mathcal{r}}\\circ { \\mathbf{f}}'({\\mathbf{u}})-{\\mathbf{f}}'({\\mathbf{u } } ) \\circ { \\mathcal{r}}= 0,\\ ] ] where @xmath117 denotes a composition of operators , @xmath118 $ ] is the frchet derivative of @xmath17 in the direction of @xmath119 @xmath120 =     \\sum_{i=0}^m \\left(d_x^i { \\mathbf{f}}({\\mathbf{u}})\\right )       \\frac{\\partial { \\mathcal{r}}}{\\partial { \\mathbf{u}}_{ix}},\\ ] ] and @xmath121 is the frchet derivative operator , i.e.  a @xmath122 matrix with entries @xmath123 where @xmath79 is the highest order occurring in the right hand side of ( [ pdesystem ] ) .    in the scalar case",
    ", @xmath124 and @xmath125 ( [ frechetfu ] ) simplifies into @xmath126 rather than solving ( [ defining ] ) , we will construct a candidate recursion operator and use ( [ defining ] ) to determine the unknown coefficients , as shown in the following two steps .",
    "_ step  generate the candidate recursion operator . _",
    "the rank of the recursion operator is determined by the difference in ranks of the generalized symmetries the recursion operator actually connects , @xmath127 where @xmath17 is an @xmath128 matrix and @xmath91 has @xmath28 components . as before , @xmath109 is the gap and typically @xmath112 . yet",
    ", there are cases where @xmath114 or @xmath129 .",
    "the recursion operator naturally splits into two pieces  @xcite , @xmath130 where @xmath14 is a ( local ) differential operator and @xmath16 is a ( non - local ) integral operator .",
    "the differential operator @xmath14 is a linear combination of terms @xmath131 where the @xmath132 are non - negative integers taken so the monomial has the correct rank and the operator @xmath6 has been propagated to the right .",
    "for example , @xmath133 which , after multiplying the terms by undetermined coefficients , leads to @xmath134 we will assume that the integral operator @xmath16 is a linear combination of terms @xmath135 of the correct rank  @xcite . in ( [ r1construction ] )",
    ", @xmath136 is the matrix outer product , and @xmath137 is the cosymmetry ( euler operator applied to @xmath138 to standardize @xmath16 , propagate @xmath6 to the left . for example , by integration by parts , @xmath139    as shown in  @xcite , the integral operator @xmath16 can also be computed as a linear combination of the terms @xmath140 of the correct rank , where @xmath141 is the covariant ( frchet derivative of @xmath138 while @xmath142 is strictly non - local , @xmath143 contains both differential and integral terms .",
    "therefore , it is computationally more efficient to build the candidate recursion operator using @xmath137 instead of @xmath144 finally , the local and non - local operators are added to obtain a candidate recursion operator ( [ sumr0andr1 ] ) .",
    "_ step  determine the unknown coefficients .",
    "_ to determine the unknown coefficients in the recursion operator , we substitute the candidate into the defining equation ( [ defining ] ) .",
    "after normalizing the form of the terms ( propagating the @xmath6 through the expression toward the right ) , we group the terms in like powers of @xmath145 and @xmath146 requiring that these terms vanish identically gives a linear system for the @xmath83 solving this linear system and substituting the coefficients into the candidate operator gives the recursion operator for ( [ pdesystem ] ) .",
    "if @xmath147 for all @xmath148 then either the gap @xmath109 is incorrect or ( [ pdesystem ] ) does not have a recursion operator . while the gap @xmath149 is usually @xmath150 or @xmath151 it is not obvious",
    "which value to take for @xmath152 in sections  [ subsec : kkrecursion ] and  [ subsec : hirotasatsuma ] we give a couple of examples where @xmath153 starting from @xmath113 the recursion operator then generates the higher - order symmetries @xmath154 analogously , starting from @xmath155 the recursion operator produces @xmath156 and so on . in section  [ subsec",
    ": drinfeld ] we show an example where @xmath157 further details on how to select the gap are given in section  [ sec : keyalgorithms ] .",
    "to illustrate the method , we use the kdv equation ( [ kdv ] ) . reversing the sign of @xmath158 @xmath159 for scalar @xmath160 from ( [ kdvsym ] ) ,",
    "the difference in ranks of the generalized symmetries is @xmath161 therefore , we will assume @xmath162 and build a recursion operator with @xmath163 thus , the local operator has the terms @xmath164 and @xmath165 of rank @xmath166 so , the candidate differential operator is @xmath167 using @xmath168 and @xmath169 the non - local operator is @xmath170 where we used @xmath171 given in ( [ euleroperator ] ) .",
    "thus , the candidate recursion operator is @xmath172 note that each term in ( [ candidatekdvr ] ) indeed has rank 2 .",
    "now , we separately compute the pieces needed to evaluate ( [ defining ] ) . using ( [ frechetfuscalar ] ) , we readily compute @xmath173 since the candidate recursion operator ( [ candidatekdvr ] ) is @xmath24-independent , we have @xmath174 next , using ( [ frechetofr ] ) and ( [ candidatekdvr ] ) we compute @xmath175 = ( 6 c_{2 } u u_{x } + c_{2 } u_{3 x } ) i                + ( 6 c_{3 } u_{x}^{2 } + 6 c_{3 } u u_{2 x }                     + c_{3 } u_{4 x } ) d_x^{-1}.\\ ] ] using ( [ candidatekdvr ] ) and ( [ frechetonf ] ) , we compute @xmath176 and @xmath177 substituting ( [ frechetofrkdv ] ) , ( [ rafterfprimekdv ] ) and ( [ fprimeafterrkdv ] ) into ( [ defining ] ) and grouping like terms , we find @xmath178 so , @xmath179 and @xmath180 taking @xmath181 gives @xmath182 which is indeed the recursion operator ( [ kdvrecursion ] ) of the kdv equation  @xcite .",
    "consider the kaup - kupershmidt ( kk ) equation  @xcite , @xmath183 to find the dilation symmetry for ( [ kk ] ) , we require that all the terms in ( [ kk ] ) have the same rank : @xmath184 if we set @xmath52 then @xmath185 and the rank of ( [ kk ] ) is @xmath186    using ` invariantssymmetries.m `  @xcite , we compute the conserved densities @xmath187 and the generalized symmetries @xmath188 of ( [ kk ] ) .",
    "we do not show @xmath106 through @xmath189 explicitly due to length . from the weights above ,",
    "the ranks of the first six generalized symmetries are @xmath190 we assume that @xmath191 and @xmath192 since @xmath193 but @xmath194 thus , taking all terms of the form @xmath195 @xmath196 such that @xmath197 gives @xmath198 using the densities and generalized symmetries above , we compute @xmath199 and @xmath200 thus , the candidate non - local operator is @xmath201 substituting @xmath202 into ( [ defining ] ) gives @xmath203 linear equations for @xmath83 solving yields @xmath204 where @xmath205 is arbitrary .",
    "setting @xmath206 we obtain @xmath207 which was computed in  @xcite as the composition of the cosymplectic and symplectic operators of ( [ kk ] ) .    since @xmath114 the symmetries",
    "are not generated sequentially via ( [ sequentialsymmetries ] ) .",
    "actually , @xmath208 and @xmath209 in ( [ symmetrieskk ] ) are the  seeds \" ( or roots ) and one must use ( [ nonsequentialsymmetries ] ) .",
    "indeed , from @xmath208 one obtains @xmath210 and so on . from @xmath211 upon repeated application of @xmath107 one obtains @xmath212 etc .",
    "thus , using the recursion operator one can generate an infinity of generalized symmetries , confirming that ( [ kk ] ) is completely integrable .",
    "consider the system of coupled kdv equations due to hirota and satsuma  @xcite , @xmath213 which model shallow water waves .",
    "solving the equations for the weights , @xmath214 yields @xmath215 and @xmath216    the first few conserved densities and generalized symmetries computed with ` invariantssymmetries.m `  @xcite are @xmath217 @xmath106 and @xmath218 are not shown explicitly due to length . based on the above weights",
    ", @xmath219 and @xmath220 we first set @xmath221 so that @xmath222 if indeed the generalized symmetries were linked consecutively , then @xmath223 using ( [ densitiessymmetrieshirota ] ) , we have @xmath224 substituting @xmath225 into ( [ defining ] ) , we find @xmath226 thus , the choice @xmath227 appears to be _",
    "incorrect_. noting that the ranks of the symmetries in ( [ ranksymmetrieshirota ] ) differ by 2 , we repeat the process with @xmath228 so that @xmath229 thus , @xmath230 where @xmath231 are linear combinations ( with different undetermined coefficients ) of @xmath232 for instance , @xmath233 using ( [ densitiessymmetrieshirota ] ) , the first term of @xmath16 in ( [ totalrecursionoperator ] ) is @xmath234 the second term of @xmath16 in ( [ totalrecursionoperator ] ) is @xmath235 substituting the form of @xmath236 into ( [ defining ] ) , the linear system for @xmath237 has a non - trivial solution . solving the linear system ,",
    "we finally obtain @xmath238 with @xmath239 the above recursion operator was computed in  @xcite as the composition of the cosymplectic and symplectic operators of ( [ hirota ] ) .    in agreement with @xmath114 , there are two seeds . using ( [ nonsequentialsymmetries ] ) and starting from @xmath240 in ( [ densitiessymmetrieshirota ] ) , the recursion operator ( [ hsrec ] ) generates the infinite sequence of generalized symmetries with odd labels .",
    "starting from @xmath241 the recursion operator ( [ hsrec ] ) generates the infinite sequence of generalized symmetries with even labels .",
    "the existence of a recursion operator confirms that ( [ hirota ] ) is completely integrable .",
    "in this section , we present details of the algorithm . to illustrate the key algorithms in sections  [ subsec : candidateoperator ] and  [ subsec : coefficients ]",
    ", we will use the dispersiveless long wave system  @xcite , @xmath242 which is used in applications involving shallow water waves .",
    "recursion operators are non - commutative by nature and certain rules must be used to simplify expressions involving integro - differential operators . while the multiplication of differential and integral operators is completely described by @xmath243 the propagation of a differential operator through an expression is trickier . to propagate the differential operator to the right",
    ", we use leibniz rule @xmath244 where @xmath245 is an expression and @xmath246 is the @xmath247-th derivative with respect to @xmath3 of @xmath248 unlike the finite series for a differential operator , leibniz rule for an inverse differential operator is @xmath249 therefore , rather than dealing with an infinite series , we only use leibniz rule for the inverse differential operator when there is a differential operator to the right of the inverse operator . in such cases we use @xmath250 repeated application of ( [ propleftbasic ] ) yields @xmath251 by using these identities , all the terms are either of the form @xmath252 or @xmath253 where @xmath254 and @xmath255 are polynomials in @xmath36 and its @xmath3 derivatives .",
    "_ step  find the dilation symmetry . _",
    "the dilation symmetry is found by requiring that each equation in ( [ pdesystem ] ) is uniform in rank , i.e.  every monomial in that equation has the same rank .",
    "if ( [ pdesystem ] ) is not uniform in rank we use a trick . in that case",
    ", we multiply those terms that are not uniform in rank by auxiliary parameters ( @xmath256 with weights .",
    "once the computations are finished we set the auxiliary parameters equal to one .",
    "since the linear system for the weights is always underdetermined , we set @xmath45 and this ( typically ) fixes the values for the remaining weights . for the example under consideration , ( [ dlw ] ) , we have the linear system @xmath257 thus , @xmath258 provided @xmath259 if we select @xmath260 then the scaling symmetry for ( [ dlw ] ) becomes @xmath261 in the code ` pderecursionoperator.m ` , the user can set the values of weights with ` weightrules - > { weight[u ] - > 2 } ` .",
    "_ step  determine the rank of the recursion operator .",
    "_ since the gap @xmath109 can not be determined _ a priori _ , we assume @xmath262 should this choice not lead to a result , one could set @xmath114 or @xmath115 in the code , the user can set the ` gap ` to any positive integer value ( see appendix  [ sec : softwareusage ] ) .    to determine the rank of the recursion operator , we compute the first @xmath263 generalized symmetries and then use @xmath264 to determine the rank of @xmath265 hence",
    ", the rank of the recursion operator @xmath17 can be represented ( in matrix form ) as follows @xmath266 in exceptional cases , the rank of the recursion operator might be lower ( or higher ) than computed by ( [ imprankrelation ] ) . in the code",
    ", the user has some additional control over the rank of the recursion operator .",
    "for example , in an attempt to find a simpler recursion operator , the rank of the recursion operator can be shifted down by one by setting ` rankshift - > -1 ` .",
    "similarly , to increase the rank of the recursion operator one can set ` rankshift - > 1 ` ( see appendix  [ sec : softwareusage ] ) .    for ( [ dlw ] ) ,",
    "the first two generalized symmetries and their ranks are @xmath267 then , using ( [ imprankrelation ] ) and ( [ rankrgeneral ] ) , @xmath268 _ step  generate the ( local ) differential operator @xmath14 . _ given the rank of the recursion operator , we take a linear combination of @xmath269 where the @xmath132 are taken so the monomial has the correct rank , the operator @xmath6 has been propagated to the right , and @xmath270 are the weighted parameters from step  @xmath25 ( if present ) .    for ( [ dlw ] ) , the ( local ) differential operator is @xmath271 _ step  generate the ( non - local ) integral operator @xmath16 . _ since the integral operator involves the outer product of generalized symmetries and cosymmetries , we compute the conserved densities up to @xmath272 we add @xmath273 in ( [ rankofdensity ] ) because the euler operator @xmath274 decreases the weight of the conserved density by the weight of @xmath275 in most cases , we take a linear combination of the terms @xmath276 of the correct rank as the candidate non - local operator .",
    "however , there are cases in which we must take a linear combination of the monomials in _ each term _ of type ( [ nonlocalterm ] ) with different coefficients .    for ( [ dlw ] )",
    ", we only need the cosymmetry of density @xmath277 @xmath278 hence , @xmath279 thus , the ( non - local ) integral operator is @xmath280 _ step  add the local and the non - local operators to form @xmath17 . _",
    "the candidate recursion operator is @xmath281 so , the candidate recursion operator for ( [ dlw ] ) is @xmath282      _ step  compute the terms in the defining equation ( [ defining ] ) . _ _ step  compute @xmath283 . _",
    "the computation of @xmath284 is easy .",
    "since the candidate recursion operator is @xmath24-independent one has @xmath285 _ step  compute . _ the frchet derivative of @xmath17 in the direction of @xmath35 is given in ( [ frechetofr ] ) .",
    "unlike the frchet derivative ( [ frechet ] ) of @xmath35 in the direction of @xmath91 ( used in the computation of generalized symmetries ) , @xmath17 and @xmath35 in ( [ frechetofr ] ) are operators .",
    "applied to the example ( [ dlw ] ) with 2 components , @xmath286 =     \\begin{pmatrix }     ( { \\mathcal{r}}'[{\\mathbf{f}}({\\mathbf{u}})])_{11 } \\quad & ( { \\mathcal{r}}'[{\\mathbf{f}}({\\mathbf{u}})])_{12 } \\\\    ( { \\mathcal{r}}'[{\\mathbf{f}}({\\mathbf{u}})])_{21 } \\quad & ( { \\mathcal{r}}'[{\\mathbf{f}}({\\mathbf{u}})])_{22 }    \\end{pmatrix},\\ ] ] where @xmath287)_{ij } =     \\sum_{k=0}^m \\left(d_x^k { \\mathbf{f}}({\\mathbf{u}})\\right )       \\frac{\\partial ( { \\mathcal{r}})_{ij}}{\\partial { \\mathbf{u}}_{kx } } , \\quad i , j = 1 , 2.\\ ] ] explicitly , @xmath288)_{11 } & = c_2 \\left ( u_{x } + vv_{x}\\right ) i , \\\\",
    "( { \\mathcal{r}}'[{\\mathbf{f}}({\\mathbf{u}})])_{21 } & = 0 , \\\\",
    "( { \\mathcal{r}}'[{\\mathbf{f}}({\\mathbf{u}})])_{12 } & = \\notag     + c_5 \\left ( u_{x } + vv_{x } \\right ) d_x      + \\big ( c_4uv_{x } + ( 2c_6 + c_4 ) vu_{x } + 2c_6v^{2}v_{x }   \\\\ &       + c_7vv_{2x } + c_7v_{x}^{2 } + c_7u_{2 x } \\big ) i       + c_{11 } ( 2u_{x}v_{x } + uv_{2 x } + vu_{2 x})d_x^{-1 } , \\\\",
    "( { \\mathcal{r}}'[{\\mathbf{f}}({\\mathbf{u}})])_{22 }   & =     c_{10 } \\left ( u_{x } + vv_{x } \\right ) i     + c_{12 } \\left ( u_{2 x } + vv_{2 x } + v_{x}^{2 } \\right ) d_x^{-1}.\\end{aligned}\\ ] ] 0.01pt _ step  compute @xmath121 .",
    "_ use formula ( [ frechetfu ] ) to compute @xmath289 continuing with example ( [ dlw ] ) , @xmath290 0.01pt _ step  compose @xmath17 and @xmath121 . _ the composition of the @xmath128 matrices @xmath17 and @xmath121 is an order preserving inner product of the two matrices . for example ( [ dlw ] ) , @xmath291 with @xmath292 similarly , @xmath293 with @xmath294 0.1pt _ step  sum the terms in the defining equation . _ for ( [ dlw ] ) ,",
    "summing the terms in the defining equation ( [ defining ] ) , we find @xmath295 @xmath296 @xmath297 @xmath298 0.1pt _ step  extract the linear system for the undetermined coefficients .",
    "_ group the terms in like powers of @xmath299 and @xmath146 then , grouping like terms and setting their coefficients equal to zero yields a linear system for the undetermined coefficients . for ( [ dlw ] )",
    ", we obtain @xmath300 _ step  solve the linear system and build the recursion operator .",
    "_ solve the linear system and substitute the constants into the candidate recursion operator . for ( [ dlw ] )",
    ", we find @xmath301 so taking @xmath302 gives @xmath303 in  @xcite this recursion operator was obtained as the composition of the cosymplectic and symplectic operators of ( [ dlw ] ) .",
    "starting from @xmath10 repeated application of ( [ recoperdlw ] ) generates an infinite number of generalized symmetries of ( [ dlw ] ) , establishing its completely integrable .",
    "there has been little work on using computer algebra methods to find and test recursion operators . in 1987 , fuchssteiner et al .",
    "@xcite wrote _ pascal _ , _ maple _ , and _ macsyma _ codes for testing recursion operators . while these packages could verify if a recursion operator is correct , they were unable to either generate the form of the operator or test a candidate recursion operator with undetermined coefficients",
    ". bilge  @xcite did substantial work on finding recursion operators interactively with _",
    "reduce_.    sanders and wang  @xcite wrote _ maple _ and _ form _ codes to aid in the computation of recursion operators . their software was used to compute the symplectic , cosymplectic , as well as recursion operators of the 39 pdes listed in @xcite and @xcite .    recently , meshkov  @xcite implemented a package in _",
    "maple _ for investigating complete integrability from the geometric perspective .",
    "if the zero curvature representation of the system is known , then his software package can compute the recursion operator . to our knowledge , our package ` pderecursionoperator.m `  @xcite is the only fully automated software package for computing and testing polynomial recursion operators of polynomial evolution equations .",
    "for convenience , we write the standard nonlinear schrdinger equation ( nls ) , @xmath304 as the system of two real equations , @xmath305 where @xmath306 and @xmath307 has been absorbed in @xmath23    to determine the weights , we assume @xmath308 so that ( [ nlssys ] ) has dilation symmetry @xmath309 hence , @xmath310 and @xmath311 as usual . the first densities and symmetries are @xmath312 thus , @xmath313 and the candidate local operator is @xmath314 the candidate non - local operator is @xmath315 substituting @xmath316 into ( [ defining ] ) , solving for the undetermined coefficients , and setting @xmath317 we find @xmath318 starting from  seed \" @xmath10 the generalized symmetries can be constructed sequentially using ( [ sequentialsymmetries ] ) .",
    "this establishes the complete integrability of ( [ nlssys ] ) .    in @xcite , wang split ( [ nlseq ] ) into an alternate system of two real equations by setting @xmath319 using the cosymplectic and symplectic operators of that system",
    ", she obtained a recursion operator which is equivalent to ( [ nlsrec ] ) .",
    "consider the burgers equation  @xcite , @xmath320 which has the dilation symmetry @xmath321 or @xmath322 @xmath323 with @xmath259 for ( [ burgers ] ) , @xmath324 assuming that @xmath221 the candidate recursion operator of @xmath325 is @xmath326 using the defining equation ( [ defining ] ) , we determine that @xmath327 and @xmath328 taking @xmath329 gives the recursion operator reported in  @xcite , @xmath330 as expected , starting from @xmath10 one computes @xmath331 @xmath332 etc . , confirming that ( [ burgers ] ) is completely integrable .",
    "the burgers equation also has the recursion operator  @xcite , @xmath333 which explicitly depends on @xmath3 and @xmath23 using @xmath334 and @xmath260 one can readily verify that each term in ( [ rtburgers ] ) has rank @xmath335    to find recursion operators like ( [ rtburgers ] ) , which depend explicitly on @xmath3 and @xmath158 we can again use scaling symmetries to build @xmath336 however , one must select the maximum degree for @xmath3 and @xmath23 for instance , for degree 1 the coefficients in the recursion operator will at most depend on @xmath3 and @xmath24 ( but not on @xmath337 , @xmath338 or @xmath339 which are quadratic ) . to control the highest exponent in @xmath3 and @xmath158 in the code",
    "the user can set ` maxexplicitdependency ` to any non - negative integer value ( see appendix  [ sec : softwareusage ] ) .    with ` maxexplicitdependency - > 1 `",
    ", the candidate local operator then is @xmath340 the first symmetries that explicitly depend on @xmath3 and @xmath24 ( of degree 1 ) are @xmath341 thus , the candidate non - local operator is @xmath342 requiring that @xmath343 satisfies the defining equation ( [ defining ] ) , next solving for the constants @xmath344 through @xmath345 and finally setting @xmath346 yields the recursion operator ( [ rtburgers ] ) . using ( [ rtburgers ] ) , one can construct an additional infinite sequence of generalized symmetries .",
    "furthermore , @xmath347 @xmath348 etc .",
    "connections between @xmath17 and @xmath349 and their symmetries are discussed in @xcite and @xcite .",
    "consider the drinfeld - sokolov - wilson system  @xcite , @xmath350 0.1pt which has static soliton solutions that interact with moving solitons without deformation .",
    "the scaling symmetry for ( [ dsw ] ) is @xmath351 expressed in weights , @xmath352 and @xmath353 the first few conserved densities and generalized symmetries are @xmath354 and @xmath355 despite the fact that @xmath356 0.1pt we can not take @xmath227 or @xmath166 surprisingly , for ( [ dsw ] ) we must set @xmath357 and @xmath358 so , the candidate local operator has elements involving @xmath359 for example , @xmath360 the candidate non - local operator is @xmath361 where @xmath362 the terms in ( [ defining ] ) fill 160 pages and grouping like terms results in a system of 508 linear equations for @xmath83 solving these linear equations and setting @xmath363 gives the recursion operator @xmath364 with @xmath365 @xmath366 @xmath367 0.1pt and @xmath368 0.1pt this recursion operator can also be computed @xcite by composing the cosymplectic and symplectic operators of ( [ dsw ] ) . since @xmath357 the symmetries are not generated via ( [ sequentialsymmetries ] ) . instead , there are three seeds , @xmath369 and @xmath106 given in ( [ g1g2drinfeld ] ) and ( [ g3drinfeld ] ) . using ( [ nonsequentialsymmetries ] ) , from @xmath208 one obtains @xmath370 @xmath371 and so on . from @xmath211 upon repeated application of @xmath107 one",
    "gets @xmath372 etc . , whereas @xmath106 generates @xmath373 etc .",
    "thus , the recursion operator generates a threefold infinity of generalized symmetries , confirming that ( [ dsw ] ) is completely integrable .",
    "this example illustrates the importance of computer algebra software in the study of integrability , in particular , for the computation of recursion operators .",
    "the length of the computations makes it impossible to compute the recursion operators for all but the simplest systems by hand .",
    "to our knowledge , no one has ever attempted to fully automate an algorithm for finding or testing recursion operators .",
    "the commutative nature of computer algebra systems makes it a non - trivial task to efficiently implement the non - commutative rules needed for working with integro - differential operators .",
    "based on our recursion operator algorithm and it implementation in ` pderecursionoperator.m ` , a large class of nonlinear pdes can be tested for complete integrability in a straightforward manner .",
    "currently our code computes polynomial recursion operators for polynomial pdes ( with constant coefficients ) which can be written in evolution form , @xmath374    with the tools developed for finding and testing recursion operators , it would be possible to extend the algorithm to find master symmetries as well as cosymplectic , symplectic and conjugate recursion operators . a symplectic operator maps ( generalized ) symmetries into cosymmetries , while a cosymplectic operator maps cosymmetries into generalized symmetries .",
    "hence , the recursion operator for a system is the composition of the cosymplectic operator and the symplectic operator of the system . a conjugate recursion operator maps conserved densities of lower order to conserved densities of higher order .",
    "the master symmetry can be used to generate an infinite hierarchy of time - dependent generalized symmetries .",
    "it would be worthwhile to add to our _ mathematica _ code an automated test of the  hereditary \" condition @xcite for recursion operators .",
    "this material is based upon work supported by the national science foundation ( nsf ) under grant nos .",
    "ccf-0830783 and ccr-9901929 .",
    "this work was also partially supported by a ndseg fellowship awarded to db .",
    "any opinions , findings , and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of nsf .",
    "wh thanks jan sanders ( free university amsterdam , the netherlands ) and jing ping wang ( university of kent , canterbury , uk ) for many valuable discussions .",
    "the package ` pderecursionoperator.m ` has been tested with mathematica 4.0 through 7.0 using more than 30 pdes .",
    "the backus - naur form of the main function ( ` recursionoperator ` ) is    @xmath375 = @xmath376 = @xmath377 + @xmath378 $ ] + @xmath379 = @xmath380 + @xmath381 + @xmath382 + @xmath383 + @xmath384 + @xmath385 + @xmath386 + @xmath387 + @xmath388 \\rightarrow } \\langle integer \\rangle\\mathtt { ,     weight[v ] \\rightarrow}\\langle integer \\rangle \\mathtt { , ... \\ } } $ ] +    when using a pc , place the packages ` pderecursionoperator.m ` and ` invariantssymmetries.m ` in a directory , for example , ` mydirectory ` on drive ` c ` .",
    "start a _ mathematica _",
    "notebook session and execute the commands :            .... in[4 ] : = recursionoperator [                  ( * burgers ' equation * )             d[u[x , t],t]==u[x , t]*d[u[x , t],x]+d[u[x , t],{x,2 } ] ,              u[x , t ] , { x , t } , maxexplicitdependency - > 1 ] out[4 ] =   ....      .... in[5 ] : = recursionoperator [            ( * potential mkdv equation * )             d[u[x , t],t]==1/3*d[u[x , t],x]^3+d[u[x , t],{x,3 } ] ,             u[x , t ] , { x , t } ,              weightrules - > { weight[u ] - > 1 } , gap - > 2 ] ....      .... in[6 ] : = recursionoperator [                   ( * diffusion system * )             { d[u[x , t],t]==d[u[x",
    ", t],{x,2}]+v[x , t]^2 ,                d[v[x , t],t]==d[v[x , t],{x , 2 } ] } ,              { u[x , t],v[x , t ] } , { x , t } ,              weightrules - > { weight[u ] - > weight[v ] } ,              rankshift - > -1 ] ....    @xmath392 in this system of equations , we again use the option ` weightrules ` to fix the weights .",
    "we also use the option ` rankshift ` to force ` recursionoperator ` to search for recursion operator of a lower than expected rank .    the option ` verbose ` prints out a trace of the calculations , while the option ` weightsverbose ` prints out a trace of the calculation of the scaling symmetry .",
    "if one or more parameters have a weight , these weights can be specified using ` weightedparameters ` .",
    "the undetermined constants can be set to any variable using the option ` unknowncoefficients ` ( the default is @xmath393 ) .",
    "adams , _ symbolic computation of conserved densities and fluxes for systems of partial differential equations with transcendental nonlinearities _ , m.s .",
    "thesis , colorado school of mines , golden , colorado ( 2003 ) .",
    "adams and w.  hereman , _ transpdedensityflux.m _ : a _ mathematica _ package for the symbolic computation of conserved densities and fluxes for systems of partial differential equations with transcendental nonlinearities ( 2002 ) .",
    "d.  baldwin , _ symbolic algorithms and software for the painlev test and recursion operators for nonlinear partial differential equations _ , m.s .  thesis , colorado school of mines , golden , colorado ( 2004 ) .",
    " , symbolic software for the painlev test of nonlinear ordinary and partial differential equations , j.  nonl .",
    "* 13 * ( 2006 ) 90 - 110 .",
    " , _ ` pderecursionoperator.m ` : a _ mathematica _",
    "package for the symbolic computation of recursion operators for nonlinear partial differential equations _ , 2003 - 2009 ; software available at http://inside.mines.edu/@xmath395whereman/software/pderecursionoperator .",
    "d.  baldwin , w.  hereman , and j.  sayers , _ symbolic algorithms for the painlev test , special solutions , and recursion operators for nonlinear pdes _ , in _ group theory and numerical analysis _ , p.  winternitz , d.  gomez - ullate , a.  iserles , d.  levi , p.j .",
    "olver , r.  quispel , and p.  tempesta , eds . , crm proc .  & lect .",
    "39 , ams , providence , ri , 2005 , pp .",
    "1732 .",
    "b.  fuchssteiner and w.  oevel , _ the bi - hamiltonian structure of some nonlinear fifth- and seventh - order differential equations and recursion formulas for their symmetries and conserved covariants _ , j.  math .",
    "phys .  23 ( 1982 ) ,",
    "358363 .",
    " , _ algorithmic computation of symmetries , invariants and recursion operators for systems of nonlinear evolution and differential - difference equations _ , ph.d",
    ", colorado school of mines , golden , colorado ( 1998 ) .    .",
    "gkta and w.  hereman , _ mathematica _ package _ invariantsymmetries.m _ : symbolic computation of conserved densities and generalized symmetries of nonlinear pdes and differential - difference equations , 1997 ; software available at http://library.wolfram.com/infocenter/mathsource/570 and http://inside.mines.edu/@xmath395whereman/software/invarsym .",
    "w.  hereman , _ symbolic computation of conservation laws of nonlinear partial differential equations in multi - dimensions _ , int .",
    "j.  quant .",
    "chem .  * 106 * ( 2006 ) , pp .",
    "278 - 299 .",
    "w.  hereman , p.a .",
    "adams , h.l .",
    "eklund , m.s .",
    "hickman , and b.m .",
    "herbst , direct methods and symbolic software for conservation laws of nonlinear equations , in _ advances in nonlinear waves and symbolic computation _",
    ", z.  yan , ed . ,",
    "nova science publishers , new york ( 2009 ) , pp .  1979 . w.  hereman , m.  colagrosso , r.  sayers , a.  ringler , b.  deconinck , m.  nivala , and m.  hickman , _ continuous and discrete homotopy operators and the computation of conservation laws _ , in _ differential equations with symbolic computation _ , d.  wang and z.  zheng , eds . , birkhuser verlag , 2005 , pp .",
    "249285 .",
    "w.  hereman , j.a .",
    "sanders , j.  sayers , and j.p .",
    "wang , _ symbolic computation of polynomial conserved densities , generalized symmetries , and recursion operators for nonlinear differential - difference equations _ , in _ group theory and numerical analysis _ , p.  winternitz , d.  gomez - ullate , a.  iserles , d.  levi , p.j .",
    "olver , r.  quispel , and p.  tempesta , eds .",
    ", crm proc .  & lect .",
    "39 , ams , providence , ri , 2005 , pp .  267282 .",
    "mikhailov , a.b .",
    "shabat , and v.v .",
    "sokolov , _ the symmetry approach to classification of integrable equations _",
    ", in _ what is integrability ?",
    "_ , v.e .",
    "zakharov , ed .",
    ", springer verlag , berlin heidelberg , 1991 , pp ."
  ],
  "abstract_text": [
    "<S> a recursion operator is an integro - differential operator which maps a generalized symmetry of a nonlinear pde to a new symmetry . </S>",
    "<S> therefore , the existence of a recursion operator guarantees that the pde has infinitely many higher - order symmetries , which is a key feature of complete integrability . </S>",
    "<S> completely integrable nonlinear pdes have a bi - hamiltonian structure and a lax pair ; they can also be solved with the inverse scattering transform and admit soliton solutions of any order .    </S>",
    "<S> a straightforward method for the symbolic computation of polynomial recursion operators of nonlinear pdes in @xmath0 dimensions is presented . </S>",
    "<S> based on conserved densities and generalized symmetries , a candidate recursion operator is built from a linear combination of scaling invariant terms with undetermined coefficients . </S>",
    "<S> the candidate recursion operator is substituted into its defining equation and the resulting linear system for the undetermined coefficients is solved .    </S>",
    "<S> the method is algorithmic and is implemented in _ </S>",
    "<S> mathematica_. the resulting symbolic package ` pderecursionoperator.m ` can be used to test the complete integrability of polynomial pdes that can be written as nonlinear evolution equations . with ` pderecursionoperator.m ` , recursion operators were obtained for several well - known nonlinear pdes from mathematical physics and soliton theory .    </S>",
    "<S> recursion operator , generalized symmetries , complete integrability , nonlinear pdes , symbolic software .    </S>",
    "<S> primary : 37k10 , 35q51 , 68w30 ; secondary : 37k05 , 35q53 , 35q58 , </S>"
  ]
}
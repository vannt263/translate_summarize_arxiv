{
  "article_text": [
    "the backpressure routing and scheduling paradigm has emerged from the pioneering work in @xcite , @xcite , which showed that , in wireless networks where nodes route packets and make scheduling decisions based on queue backlog differences , one can stabilize queues for any feasible traffic .",
    "this seminal idea has generated a lot of research interest .",
    "most importantly ; it has been shown that backpressure can be combined with flow control to provide utility - optimal operation guarantee @xcite .",
    "the strengths of these techniques have recently increased the interest on practical implementation of backpressure framework over wireless networks , some of which are summarized in section [ sec : related ] .",
    "however , the practical implementation of backpressure imposes several challenges mainly due to the joint nature of the routing and scheduling algorithms , which is the focus of this paper .    in classical backpressure",
    ", each node constructs per - flow queues .",
    "based on the per - flow queue backlog differences , and by taking into account the state of the network , each node makes routing and scheduling decisions .",
    "although the backpressure framework is conceptually viewed as layered , the decisions of routing and scheduling are made jointly .",
    "to better illustrate this key point , let us discuss the following example .",
    "[ ex1 ] let us consider fig .",
    "[ fig : example_backpressure_diffmax](a ) for backpressure operation . at time @xmath0",
    ", node @xmath1 makes routing and scheduling decisions for flows @xmath2 and @xmath3 based on the per - flow queue sizes ; @xmath4 , @xmath5 , as well as the queue sizes of the other nodes , _ i.e. , _ node @xmath6 and @xmath7 in this example , and using the channel state of the network @xmath8 .",
    "in particular , the backpressure determines the flow that should be transmitted over link @xmath9 by @xmath10 such that @xmath11 .",
    "the decision mechanism is the same for link @xmath12 .",
    "note that this is joint routing ( _ i.e. , _ the next hop decision ) and scheduling ( _ i.e. , _ the flow selection for transmission ) . the scheduling algorithm also determines the link activation policy . in particular , the maximum backlog differences over each link are calculated as ; @xmath13 and @xmath14",
    ". based on @xmath15 and @xmath8 , the scheduling algorithm determines the link that should be activated .",
    "note that the decisions of routing and scheduling ( also named as max - weight algorithm ) are made jointly in the backpressure framework , which imposes several challenges in practice .",
    "we elaborate on them next .",
    "@xmath16    [ fig : example_backpressure_diffmax ]    routing algorithms are traditionally designed in the network layer , while the scheduling algorithms are implemented in the link layer in current networks .",
    "however , the joint routing and scheduling nature of backpressure imposes challenges for practical implementation . to deal with these challenges , @xcite implements the backpressure at the link layer",
    ", @xcite proposes a system in the mac layer .",
    "this approach is practically difficult due to device memory limitations and strict limitations imposed by device firmware and drivers not to change the link layer functionalities .",
    "the second approach is to implement backpressure in ( or below ) the network layer , @xcite , @xcite , @xcite .",
    "this approach requires joint operation of the network and link layers , so that the backpressure framework gracefully work with the link layer .",
    "therefore , the network and link layers should work together synchronously , which may not be practical for many off - the - shelf devices .",
    "existing networks are designed in layers , in which protocols and algorithms are modular and operate independently at each layer of the protocol stack . _",
    "e.g. , _ routing algorithms at the network layer should work in a harmony with different types of scheduling algorithms in the link layer",
    ". however , the joint nature of the backpressure stresses joint operation and hurts modularity , which is especially important in contemporary wireless networks , which may vary from a few node networks to ones with hundreds of nodes .",
    "it is natural to expect that different types of networks , according to their size as well as software and hardware limitations , may choose to employ backpressure partially or fully . _",
    "e.g. , _ some networks may be able to employ both routing and scheduling algorithms , while others may only employ routing . therefore , the algorithms of backpressure , _",
    "i.e. , _ routing and scheduling should be modular .    in this paper",
    ", we are interested in a framework in which the routing and scheduling are separated .",
    "we seek to find such a scheme where routing is performed independently at the network layer and scheduling decisions are performed at the link layer .",
    "the key ingredients of our approach , which we call diff - max , are ; ( i ) per - flow queues at the network layer and making routing decision based on their differences , ( ii ) per - link queues at the link layer and making scheduling decision based on their size .",
    "_ example 1 - continued : _ let us consider fig .",
    "[ fig : example_backpressure_diffmax](b ) for diff - max operation .",
    "( i ) routing : at time @xmath0 , node @xmath1 makes routing decision for flows @xmath2 and @xmath3 based on queue backlogs @xmath17 and @xmath18 , where @xmath19 .",
    "this decision is made at the network layer and the routed packets are inserted in the link layer queues .",
    "note that in classical backpressure , routed packets are scheduled jointly , _",
    "i.e. , _ when a packet is routed , it should be transmitted if the corresponding links are activated .",
    "hence , both algorithms should make decision jointly in classical backpressure .",
    "however , in our scheme , a packet may be routed at time @xmath0 , and scheduled and transmitted at a later time @xmath20 where @xmath21 .",
    "( ii ) scheduling : at the link layer , links are activated and packets are transmitted based on per - link queue sizes ; @xmath22 , @xmath23 , and @xmath8 .",
    "the details of diff - max are provided in section  [ sec : opt2 ] .",
    "@xmath16    our approach is grounded in a network utility maximization ( num ) framework @xcite .",
    "the solution decomposes into several parts with an intuitive interpretation , such as routing , scheduling , and flow control .",
    "the structure of the num solution provides insight into the design of our scheme , diff - max .",
    "thanks to separating routing and scheduling , diff - max makes the practical implementation easier and minimizes cross - layer operations .",
    "we also propose two practical schemes ; diff - submax and wdiff - submax .",
    "the following are the key contributions of this work :    * we propose a new system model and num framework to separate routing and scheduling .",
    "our solution to the num problem , separates routing and scheduling such that routing is implemented at the network layer , and scheduling is at the link layer .",
    "based on the structure of the num solution , we propose diff - max .",
    "* we extend diff - max to employ routing and scheduling parts , but disable the link activation part of the scheduling algorithm .",
    "we call the new framework diff - submax , which reduces computational complexity and overhead significantly , and provides high throughput improvements in practice .",
    "namely , diff - submax only needs information from one - hop away neighbors to make its routing and scheduling decisions .",
    "* we propose a window - based routing mechanism , wdiff - submax , which implements routing , but disables the scheduling .",
    "wdiff - submax is designed for the scenarios , in which the implementation of the scheduling algorithm in the link layer is impossible ( or not preferable ) due to device restrictions .",
    "wdiff - submax makes routing decision on the fly , and minimizes overhead .",
    "* we evaluate our schemes in a multi - hop setting and consider their interaction with transport , network , and link layers .",
    "we perform numerical calculations confirming that diff - max is as good as backpressure .",
    "we implement our schemes in a simulator ; ns-2 @xcite , and show that they significantly improve throughput as compared to adaptive routing schemes such as ad hoc on - demand distance vector ( aodv ) @xcite .",
    "finally , we implemented a prototype of wdiff - submax on galaxy nexus smartphones with android 4.0 ( ice cream sandwich ) @xcite .",
    "the structure of the rest of the paper is as follows .",
    "section  [ sec : system ] gives an overview of the system model .",
    "section  [ sec : opt2 ] presents the num formulation and solution .",
    "section  [ sec : algs ] presents the design and development of diff - max schemes and their interaction with the protocol stack .",
    "section  [ sec : performance ] presents simulation results .",
    "section  [ sec : related ] presents related work .",
    "section  [ sec : conclusion ] concludes the paper .",
    "we consider multi - hop wireless networks , in which packets from a source traverse potentially multiple wireless hops before being received by their receiver . in this setup ,",
    "each wireless node is able to perform routing , scheduling , and flow control . in this section ,",
    "we provide an overview of this setup and highlight some of its key characteristics .",
    "[ fig : main - example ] shows the key parts of our system model in an example topology .     a wireless mesh network .",
    "the queues at the network and link layers , and the interaction among the queues , inside node @xmath1 are shown here in detail . @xmath24 and @xmath25 are the network layer queues for flows @xmath26 and @xmath27 , and @xmath22 and @xmath28 are the per - link queues for links ; @xmath9 and @xmath29 .",
    "diff - max algorithm makes the routing decision in the network layer , and the scheduling decision in the link layer . ]",
    "the wireless network consists of @xmath30 nodes and @xmath31 edges , where @xmath32 is the set of nodes and @xmath33 is the set of edges in the network .",
    "we consider in our formulation and analysis that time is slotted , and @xmath0 refers to the beginning of slot @xmath0 .",
    "let @xmath34 be the set of unicast flows between source - destination pairs in the network .",
    "each flow @xmath35 arrives from the application layer to the transport layer with rate @xmath36 , @xmath37 at time slot @xmath0 .",
    "the arrival rates are i.i.d . over the slots and their expected values",
    "are ; @xmath38 $ ] , @xmath37 , and @xmath39 $ ] are finite .",
    "transport layer stores the arriving packets in reservoirs ( _ i.e. , _ transport layer per - flow queues ) , and controls the flow traffic .",
    "in particular , each source @xmath26 is associated with rate @xmath40 considering a utility function @xmath41 , which we assume to be a strictly concave function of @xmath40 .",
    "the transport layer determines @xmath42 at time slot @xmath0 according to the utility function @xmath43 .",
    "@xmath42 packets are transmitted from the transport layer reservoir to the network layer at slot @xmath0 .      at node @xmath44",
    ", there are network and link layer queues .",
    "the network layer queues are per - flow queues ; _ i.e. , _",
    "@xmath24 is the queue at node @xmath44 that only stores packets from flow @xmath35 .",
    "the link layer queues are per - link queues ; _ i.e. , _ at each node @xmath44 , a link layer queue @xmath22 is constructed for each neighbor node @xmath45 ( fig .",
    "[ fig : main - example ] ) .",
    "our model optimizes the flow rates among different nodes as well as the flow rates in a node among different layers ; transport , network , and link layer .",
    "the transport layer determines @xmath42 at time @xmath0 , and passes @xmath42 packets to the network layer .",
    "these packets are inserted in the network layer queue ; @xmath24 ( assuming that node @xmath1 is the source node of flow @xmath26 ) .",
    "the network layer may also receive packets from the other nodes and insert them in @xmath24 .",
    "the link transmission rate is @xmath46 at time @xmath0 .",
    "@xmath46 is larger than ( or equal to ) per - flow data rates over link @xmath47 .",
    "_ e.g. , _ we can write for fig .",
    "[ fig : main - example ] that @xmath48 where @xmath49 is the data rate of flow @xmath26 over link @xmath47 . note that @xmath49 is the actual data transmission rate of flow @xmath26 over link @xmath47 , while @xmath46 is the available rate over link @xmath47 , at time @xmath0 . at every timeslot @xmath0 , @xmath24 changes according to the following dynamics .",
    "@xmath50 + \\sum_{j \\in { \\mathcal{n } } } h_{j , i}^{s}(t ) \\nonumber \\\\ & + x_{s}(t)1_{[i = o(s)]}\\end{aligned}\\ ] ] where @xmath51 is the source node of flow @xmath26 and @xmath52 is an indicator function , which is @xmath2 if @xmath53 , and @xmath54 , otherwise .",
    "the data rate from the network layer to the link layer queues is @xmath55 . in particular",
    ", @xmath55 is the actual rate of the packets , belonging to flow @xmath26 , from the network layer queue ; @xmath24 to the link layer queue ; @xmath22 at node @xmath1 .",
    "note that the optimization of flow rate @xmath55 is the routing decision , since it basically determines how many packets from flow @xmath26 should be forwarded ( hence routed ) to node @xmath6 . at every timeslot @xmath0 , @xmath22 changes according to the following queue dynamics .",
    "@xmath56 + \\sum_{s \\in { \\mathcal{s } } } f_{i , j}^{s}(t)\\end{aligned}\\ ] ] the link transmission rate from @xmath1 to node @xmath6 is @xmath57 . as mentioned above @xmath57 upper bounds per - flow data rates ; _ i.e. , _",
    "note that the optimization of link transmission rate @xmath57 corresponds to the scheduling decisions , since it determines which packets from which link layer queues should be transmitted as well as whether a link is activated .",
    "consider one - hop transmission over link @xmath59 , where @xmath60 , such that @xmath61 and @xmath62 . at each slot",
    "@xmath0 , @xmath8 is the channel state vector , where @xmath63 .",
    "@xmath64 is the state of the link @xmath59 at time @xmath0 and takes values from the set @xmath65 according to a probability distribution which is i.i.d . over time slots . if @xmath66 , packets are transmitted with rate @xmath67",
    ". otherwise ; ( _ i.e. , _ if @xmath68 )",
    ", no packets are transmitted .",
    "@xmath69 denote the set of the link transmission rates feasible at time slot @xmath0 and for channel state @xmath8 .",
    "in particular , at every timeslot @xmath0 , the link transmission vector @xmath70 should be constrained such that @xmath71 .",
    "let @xmath72 is the vector of arrival rates @xmath37 .",
    "the network layer capacity region @xmath73 is defined as the closure of all arrival vectors that can be stably transmitted in the network , considering all possible routing and scheduling policies @xcite , @xcite , @xcite .",
    "@xmath73 is fixed and depends only on channel statistics characterized by @xmath69 .",
    "in this section , we formulate and design the diff - max framework .",
    "our first step is the num formulation of the problem and its solution .",
    "this approach ( _ i.e. , _ num formulation and its solution ) sheds light into the structure of the diff - max algorithms . note that the num formulation optimizes the average values of the parameters ( _ i.e. , _ flow rates ) that are defined in section  [ sec : system ] . by abuse of notation",
    ", we use a variable , _",
    "e.g. , _ @xmath74 as the average value @xmath75 in our num formulation , if both @xmath74 and @xmath75 refers to the same parameter .",
    "our objective is to maximize the total utility function by optimally choosing the flow rates @xmath76 , @xmath37 , as well as the following variables at each node : the amount of data traffic that should be routed to each neighbor node ; _ i.e. , _",
    "@xmath77 , the link transmission rates ; _ i.e. , _ @xmath78 .",
    "@xmath79 the first constraint is the flow conservation constraint at the network layer : at every node @xmath1 and for each flow @xmath26 , the sum of the total incoming traffic , _",
    "i.e. , _ @xmath80 and exogenous traffic , _",
    "@xmath76 should be equal to the total outgoing traffic from the network layer , _",
    "i.e. , _ @xmath81 .",
    "the second constraint is also the flow conservation constraint , but at the link layer ; the link transmission rate ; _ i.e. , _",
    "@xmath78 should be larger than the incoming traffic ; _",
    "i.e. , _ @xmath82 .",
    "note that this constraint is inequality , because the link transmission rate can be larger than the actual data traffic .",
    "the third constraint shows the relationship between the network and link layer per - flow data rates .",
    "the last constraint shows that the vector of link transmission rates , @xmath83 should be the element of the available link rates ; @xmath84 .",
    "note that @xmath84 is different than @xmath69 in the sense that @xmath84 is characterized with the loss probability over each link ; @xmath85 , @xmath86 , rather than the channel state vector ; @xmath8 .",
    "the first and second constraints are key to our work , because they determine the incoming and outgoing flow relationships at the network and link layers , respectively .",
    "such an approach separates routing from scheduling , and assigns the routing to the network layer and scheduling to the link layer .",
    "note that if these constraints are combined in such a way that incoming rate from a node and exogenous traffic should be smaller than the outgoing traffic for each flow , we obtain the backpressure solution @xcite , @xcite .      by relaxing the first two flow conservation constraints in eq .",
    "( [ opt : eq1 ] ) , we have : @xmath87 } \\bigr ) - \\sum_{(i , j ) \\in { \\mathcal{l } } } v_{i , j } \\bigl ( \\sum_{s \\in { \\mathcal{s } } } f_{i , j}^{s } - h_{i , j } \\bigr),\\end{aligned}\\ ] ] where @xmath88 and @xmath89 are the lagrange multipliers , which can be interpreted as the representative of the network and link layer queues , @xmath24 and @xmath22 , respectively . and @xmath89 are lagrange multipliers .",
    "although they are interpreted as the representation of the queue sizes , they are not actual queue sizes , but the functions of them .",
    "on the other hand , @xmath24 and @xmath22 are actual queue sizes . ]",
    "the lagrange function can be re - written as ;    @xmath90    eq .",
    "( [ opt : eq1_lagrange2 ] ) can be decomposed into several intuitive problems such as flow control , routing , and scheduling .",
    "first , we solve the lagrangian with respect to @xmath76 : @xmath91 where @xmath92 is the inverse function of the derivative of @xmath43 .",
    "this part of the solution is interpreted as the flow control .",
    "second , we solve the lagrangian for @xmath77 and @xmath93 .",
    "the following part of the solution is interpreted as the routing .",
    "@xmath94 the above problem is equivalent to ; @xmath95    third , we solve the lagrangian for @xmath78 .",
    "the following part of the solution is interpreted as scheduling . @xmath96    the decomposed parts of the lagrangian , _",
    "i.e. , _ eqs .",
    "( [ opt : eq1_ratecontrol ] ) , ( [ opt : eq1_routing2 ] ) , ( [ opt : eq1_scheduling1 ] ) as well as the lagrange multipliers ; @xmath88 and @xmath89 can be solved iteratively via a gradient descent algorithm .",
    "the convergence properties of this iterative algorithm are provided in @xcite .",
    "next , we propose diff - max based on the structure of the decomposed solution .      now , we provide stochastic control strategy including routing , scheduling , and flow control .",
    "the strategy , _",
    "i.e. , _ diff - max , which mimics the num solution , combines separated routing and scheduling together with the flow control strategy .    * * routing .",
    "* node @xmath1 observes the network layer queue backlogs in all neighboring nodes at time @xmath0 and determines ; @xmath97 where @xmath98 is constant larger than the maximum outgoing rate from node @xmath1 . according to eq .",
    "( [ eq_stoc : routing ] ) , @xmath55 packets are removed from @xmath99 and inserted in the link layer queue @xmath100 .",
    "this routing algorithm mimics eq .",
    "( [ opt : eq1_routing2 ] ) and has the following interpretation . packets from flow @xmath26 can be transmitted to the next hop node @xmath6 as long as the network layer queue in the next hop ( node @xmath6 ) is small , which means that node @xmath6 is able to route the packets , and the link layer queue at the current node ( node @xmath1 ) is small , which means that the congestion over link @xmath9 is relatively small .",
    "note that if the number of packets in @xmath99 is limited , the packets are transmitted to the link layer queues beginning from the largest @xmath101 .",
    "+ the routing algorithm in eq .",
    "( [ eq_stoc : routing ] ) uses per - link queues as well as per - flow queues , which is the main difference of eq .",
    "( [ eq_stoc : routing ] ) as compared to backpressure routing .",
    "the backpressure routing only uses per - flow queues , and does not take into account the state of the link layer queues ( they do not exist due to formulation ) . *",
    "* scheduling .",
    "* at each time slot @xmath0 , link rate @xmath57 is determined by ; @xmath102 this scheduling algorithm mimics eq .",
    "( [ opt : eq1_scheduling1 ] ) and has the following interpretation . the link @xmath9 with the largest queue backlog @xmath22 , by taking into account the channel state vector ; @xmath8 ,",
    "should be activated , and a packet(s ) from the corresponding queue ( @xmath22 ) should be transmitted .",
    "we note that this problem ( scheduling or max - weight ) is known to be a hard problem , @xcite , @xcite .",
    "therefore , we propose sub - optimal scheduling algorithms that interact well with the routing algorithm in eq .",
    "( [ eq_stoc : routing ] ) .",
    "+ the scheduling algorithm in eq .",
    "( [ eq_stoc : scheduling ] ) differs from the classical backpressure in the sense that it is completely independent from the routing .",
    "in particular , eq .",
    "( [ eq_stoc : scheduling ] ) makes the scheduling decision based on per - link queues ; @xmath22 and the channel state ; @xmath8 , while the classical backpressure uses maximum queue backlog differences dictated by the routing algorithm .",
    "as it is seen the routing and scheduling are operating jointly in backpressure , while in diff - max , these algorithms are separated .",
    "* * flow control .",
    "* at every time slot @xmath0 , the flow / rate controller at the transport layer of node @xmath1 determines the current level of network layer queue backlogs @xmath99 and determines the amount of packets that should be transported from the transport layer to the network layer according to : @xmath103 \\nonumber \\\\    \\mbox{s.t . } &   \\sum_{s \\in { \\mathcal{s}}|",
    "i = o(s ) } x_{s}(t ) \\leq r_{i}^{max }    \\end{aligned}\\ ] ] where @xmath104 is a constant larger than the maximum outgoing rate from node @xmath1 , and @xmath105 is a constant parameter , @xmath106 .",
    "the flow control part of our solution mimics eq .",
    "( [ opt : eq1_ratecontrol ] ) as well as the flow control algorithm proposed in @xcite .",
    "the discussions on the analysis and performance bounds of diff - max are provided in @xcite .",
    "we propose practical implementations of diff - max ( fig .  [",
    "fig : protocol_stack ] ) as well as diff - submax , which combines the routing algorithm with a sub - optimal scheduling , and wdiff - submax which makes routing decision based on a window - based algorithm .            the flow control algorithm , implemented at the transport layer at the end nodes ( see fig .",
    "[ fig : protocol_stack ] ) , determines the rate of each flow .",
    "we implement our flow control algorithm as an extension of udp in our simulator ns-2 and in our android testbed .",
    "the flow control algorithm , at the source node @xmath1 , divides time into epochs ( virtual slots ) such as @xmath107 , where @xmath108 is the beginning of the @xmath7th epoch .",
    "let us assume that @xmath109 where @xmath110 is the epoch duration .    at time @xmath108",
    ", the flow control algorithm determines the rate according to eq .",
    "( [ eq_stoc : rate_control ] ) .",
    "we consider @xmath111 ( note that any other concave utility function can be used ) .",
    "after @xmath112 is determined , corresponding number of packets are passed to the network layer , and inserted to the network layer queue @xmath24 .",
    "note that there might be some excessive packets at the transport layer if some packets are not passed to the network layer .",
    "these packets are stored in a reservoir at the transport layer , and transmitted in later slots . at the receiver node",
    ", the transport protocol receives packets from the lower layers and passes them to the application .      the routing algorithm , implemented at the network layer of each node ( both the end and intermediate nodes ) ( see fig .",
    "[ fig : protocol_stack ] ) , determines routing policy , _",
    "i.e. , _ the next hop(s ) that packets are forwarded . the first part of our routing algorithm is the neighbor discovery and queue size information exchange .",
    "each node @xmath1 transmits a message containing the size of its network layer queues ; @xmath24 .",
    "these messages are in general piggy - backed to data packets .",
    "the nodes in the network operates on the promiscuous mode .",
    "therefore , each node , let us say node @xmath6 , overhears a packet from node @xmath1 even if node @xmath1 transmits the packet to another node , let us say node @xmath7 .",
    "node @xmath6 reads the queue size information from the data packet it receives or overhears ( thanks to operating on the promiscuous mode ) .",
    "the queue size information is recorded for future routing decisions .",
    "note that when a node hears from another node through direct or promiscuous mode , it classifies it as its neighbor .",
    "the neighbor nodes of node @xmath1 forms a set @xmath113 .",
    "as we mentioned , queue size information is piggy - backed to data packets . however , if there is no data packet for transmission for some time duration , the node creates a packet to carry queue size messages and broadcast it .",
    "the second part of our routing algorithm is the actual routing decision .",
    "similar to the flow control algorithm , the routing algorithm divides time into epochs ; such as @xmath114 , where @xmath115 is the beginning of the @xmath7th epoch at node @xmath1 .",
    "let us assume that @xmath116 where @xmath117 is the epoch duration .",
    "note that we use @xmath115 and @xmath117 instead of @xmath108 and @xmath110 , because these two time epochs do not need to be the same nor synchronized .    at time",
    "@xmath115 , the routing algorithm at the network layer checks @xmath118 for each flow @xmath26 .",
    "note that @xmath119 is not the instantaneous value of @xmath120 at time @xmath115 , instead it is the latest value of @xmath120 heard by node @xmath1 before @xmath115 .",
    "note also that @xmath121 is the per - link queue at node @xmath1 , and this information should be passed to the network layer for routing decision . according to eq .",
    "( [ eq_stoc : routing ] ) , @xmath122 is determined , and @xmath122 packets are removed from @xmath24 and inserted to the link layer queue @xmath22 at node @xmath1 . note that the link layer transmits packets from @xmath22 only to node @xmath6 , hence the routing decision is completed .",
    "the routing algorithm is summarized in algorithm  [ alg : routing_decision ] .",
    "note that algorithm  [ alg : routing_decision ] considers that there are enough packets in @xmath24 for transmission .",
    "if not , the algorithm lists all the links @xmath123 in decreasing order , according to the weight ; @xmath118 .",
    "then , it begins to route packets beginning from the link that has the largest weight .    read the network layer queue size information of neighbors : @xmath119 read the link layer queue size information : @xmath121 @xmath124 @xmath125 remove @xmath122 packets from @xmath24 pass @xmath122 packets to the link layer and insert them to @xmath22      the scheduling algorithm in eq .",
    "( [ eq_stoc : scheduling ] ) assumes that time is slotted , and determines the links that should be activated and the ( number of ) packets that should be transmitted at each time slot . although there are time - slotted system implementations , and also recent work on backpressure implementation over time - slotted wireless networks @xcite , ieee 802.11 mac , an asynchronous medium access protocol without time slots , is the most widely used mac protocol in the current wireless networks .",
    "therefore , we implement our scheduling algorithm ( eq .",
    "( [ eq_stoc : scheduling ] ) ) on top 802.11 mac ( see fig .  [",
    "fig : protocol_stack ] ) with the following updates .",
    "the scheduling algorithm constructs per - link queues at the link layer .",
    "node @xmath1 knows its own link layer queues , @xmath22 , and estimates the loss probability and link rates .",
    "let us consider that @xmath126 and @xmath127 are the estimated values of @xmath85 and @xmath67 , respectively .",
    "@xmath126 is calculated as one minus the ratio of correctly transmitted packets over all transmitted packets in a time window over link @xmath59 . in our implementation , since it is not practical to get this information .",
    "even if one can estimate @xmath64 using physical layer learning techniques , @xmath64 should be estimated @xmath86 , which is not practical in current wireless networks .",
    "] @xmath127 is calculated as the average of the recent ( in a window of time ) link rates over link @xmath59 .",
    "@xmath22 , @xmath128 , and @xmath129 are piggy - backed to the data packets and exchanged among nodes .",
    "note that this information should be exchanged among all nodes in the network since each node is required to make its own decision based on global information .",
    "also , each node knows the general topology and interfering links .    the scheduling algorithm that we implemented mimics eq .",
    "( [ eq_stoc : scheduling ] ) .",
    "each node @xmath1 knows per - link queues , _ i.e. , _",
    "@xmath130 , estimated loss probabilities , _ i.e. , _",
    "@xmath126 , and link rates , _",
    "@xmath131 , for @xmath132 as well all maximal independent sets , which consist of links that are not interfering .",
    "let us assume that there are @xmath133 maximal independent sets .",
    "for the @xmath134th maximal independent set such that @xmath135 , the policy vector is ; @xmath136 , where @xmath137 if link @xmath59 is in the @xmath134th maximal set , and @xmath138 , otherwise .",
    "our scheduling algorithm selects @xmath139th maximal independent set such that @xmath140 .",
    "node @xmath1 solves @xmath139 as one of the parameters ; @xmath130 , @xmath126 , @xmath127 change @xmath86 . if , according to @xmath139 , node @xmath1 decides that it should activate one of its links , then it reduces the contention window size of 802.11 mac so that node @xmath1 can access the medium quickly and transmit a packet .",
    "if node @xmath1 should not transmit , then the scheduling algorithm tells 802.11 mac that there are no packets in the queues available for transmission . note that we update 802.11 mac protocol so that we can implement the scheduling algorithm in diff - max .",
    "the scheduling algorithm is summarized in algorithm  [ alg : scheduling ] .",
    "determine @xmath139 such that @xmath141 reduce 802.11 mac contention window size and access the medium transmit a packet from @xmath22 according to fifo rule tell 802.11 mac that there are no packets in the queues available for transmission    note that algorithm  [ alg : scheduling ] is a hard problem , because it reduces to maximum independent set problem , @xcite , @xcite . furthermore",
    ", it introduces significant amount of overhead ; each node needs to know every other node s queue sizes and link loss rates . due to the hardness of the problem and overhead",
    ", we implement this algorithm for small topologies over ns-2 for the purpose of comparing its performance with sub - optimal scheduling algorithms , which we describe next .",
    "diff - submax is a low complexity and low overhead counterpart of diff - max . the flow control and the routing parts of diff - submax is exactly the same as in diff - max .",
    "the only different part is the scheduling algorithm , which uses 802.11 mac protocol without any changes . when a transmission opportunity arises according to underlying 802.11 mac at time @xmath0 , then the scheduling algorithm of node @xmath1 calculates weights for all outgoing links to its neighbors .",
    "let us consider link @xmath9 at time @xmath0 .",
    "the weight is @xmath142 .",
    "based on the weights , the link is chosen as ; @xmath143 .",
    "this decision means that a packet from the link layer queue @xmath144 is chosen according to fifo rule and transmitted .",
    "note that this scheduling algorithm only performs intra - scheduling , _",
    "i.e. , _ it determines from which link layer queue , packets should be transmitted , but it does not determine which node should transmit , which is handled by 802.11 mac .",
    "diff - submax reduces the complexity of the algorithm and overhead significantly . in particular ,",
    "each node @xmath1 calculates and compares weights @xmath145 for each neighbor node .",
    "therefore , the complexity is linear with the number of ( neighbor ) nodes .",
    "the overhead is also significantly reduced ; each node needs to know the queue size of only its one - hop away neighbors .",
    "wdiff - submax is an extension of diff - submax for the scenarios that link layer operations and data exchange ( between the network and link layers ) are not possible due to wifi firmware or driver restrictions or may not be preferable .",
    "therefore , wdiff - submax does not employ any scheduling mechanism , but the routing and flow control .",
    "the flow control algorithm is the same as in diff - max .",
    "yet , the routing algorithm is updated as explained in the next .",
    "( [ eq_stoc : routing ] ) requires per - flow queues as well as per - link queues for routing decision . if per - link",
    "queues are not available at the network layer , these parameters should be estimated .",
    "wdiff - submax , window - based routing algorithm , implements eq .",
    "( [ eq_stoc : routing ] ) by estimating per - link queue sizes .",
    "in particular , the routing algorithm sends a window of packets , and receive acknowledgement ( ack ) for each transmitted packet .",
    "the ack mechanism has three functions : ( i ) carries per - flow queue size information , ( ii ) provides reliability , _",
    "i.e. , _ packets which are not acked are re - transmitted , ( iii ) estimates per - link queue sizes .",
    "the algorithm works as follows .    at time",
    "@xmath115 , the window size for link @xmath9 is @xmath146 , the average round trip time of the packets is @xmath147 , and the average round trip time of the packets in the last window is @xmath148 .",
    "if @xmath149 and @xmath150 , then @xmath146 is increased by 1 .",
    "if @xmath149 and @xmath151 , then @xmath146 is decreased by 1 .",
    "if none of the packets in the last window is acked , @xmath146 is halved .",
    "after @xmath146 is determined , @xmath122 is set to @xmath146 and @xmath122 packets are passed to the link layer .",
    "wdiff - submax , similar to diff - submax , reduces computational complexity and overhead significantly as compared to diff - max .",
    "we first simulate our scheme , diff - max as well as classical backpressure in an idealized time slotted system in our in - house simulator .",
    "the simulation results show that diff - max performs as good as the classical backpressure .",
    "next , we discuss the simulation setup and results in detail .",
    "we consider the triangle and diamond topologies shown in figs .",
    "[ fig : topologies](a ) and [ fig : topologies](b ) . in the triangle topology",
    ", there are two flows between sources ; @xmath152 , @xmath153 and receivers ; @xmath154 , @xmath155 , respectively .",
    "@xmath152 is originated from node @xmath156 and ends at node @xmath157 , and @xmath153 is originated from node @xmath156 and ends at node @xmath158 . in the diamond topology , there are two flows between sources ; @xmath152 , @xmath153 and receivers ; @xmath154 , @xmath155 , respectively .",
    "@xmath152 is originated at node @xmath156 and ends at node @xmath157 , and @xmath153 is originated at node @xmath156 and ends at node @xmath159 . in both topologies , all nodes are capable of relaying packets to their neighbors .",
    "the simulation duration is @xmath160 slots , and each simulation is repeated for 10 seeds .",
    "each slot is either on @xmath161 or @xmath162 state according to the loss probability , which i.i.d . over slots and",
    "uniformly distributed at each slot .",
    "[ fig : matlab_results_1 ] shows throughput vs. the loss probability for the triangle topology .",
    "the loss is only over link @xmath163 .",
    "[ fig : matlab_results_1](a ) shows the total throughput of the two flows , _",
    "i.e. , _ from @xmath152 to @xmath154 and @xmath153 to @xmath155 , while fig .",
    "[ fig : matlab_results_1](b ) and fig .",
    "[ fig : matlab_results_1](c ) present individual throughput of flows from @xmath152 to @xmath154 and @xmath153 to @xmath155 , respectively .",
    "as it is seen , both the total throughput and individual throughput in diff - max scheme is equal to the ones in the classical backpressure .",
    "this observation is confirmed for different loss scenarios and for the diamond topology in figs .",
    "[ fig : matlab_results_2 ] , [ fig : matlab_results_3 ] , [ fig : matlab_results_4 ] .      in this section ,",
    "we simulate our schemes , diff - max , diff - submax , wdiff - submax as well as classical backpressure in the ns-2 simulator @xcite .",
    "the simulation results show that diff - max , diff - submax and wdiff - submax significantly improves throughput as compared to the adaptive routing scheme ; ad hoc on - demand distance vector ( aodv ) @xcite .",
    "next , we present the simulator setup and results in detail .",
    "we considered two topologies : diamond topology shown in fig .",
    "[ fig : topologies](b ) ; and a grid topology shown in fig .",
    "[ fig : topologies](c ) . in the diamond topology ,",
    "the nodes are placed over @xmath164 terrain .",
    "two flows are transmitted from node @xmath156 to nodes @xmath157 and @xmath159 . in the grid topology ,",
    "@xmath165 cells are placed over a @xmath166 terrain .",
    "@xmath167 nodes are randomly placed to the cells . in the grid topology ,",
    "each node can communicate with other nodes in its cells or with the ones in neighboring cells .",
    "four flows are generated randomly .",
    "we consider cbr traffic .",
    "cbr flows start at random times within the first @xmath168 and are on until the end of the simulation which is @xmath169 .",
    "the cbr flows generate packets with inter - arrival times @xmath170 .",
    "ieee 802.11b is used in the mac layer ( with updates for diff - max implementation as explained in section  [ sec : algs ] ) . in terms of wireless channel",
    ", we simulated a rayleigh fading channel with average channel loss rates @xmath171 .",
    ", because recent studies of ieee 802.11b based wireless mesh networks @xcite , @xcite , have reported packet loss rates as high as 50% .",
    "] we have repeated each @xmath169 simulation for @xmath172 seeds .",
    "the channel capacity is @xmath173 , the buffer size at each node is set to @xmath174 packets , packet sizes are set to @xmath175 .",
    "we compare our schemes ; diff - max , diff - submax , and wdiff - submax with aodv , in terms transport - level throughput .",
    "the diff - max parameters are set as follows .",
    "for the flow control algorithm ; @xmath176 , @xmath177 packets , @xmath178 .",
    "for the routing algorithm ; @xmath179 , @xmath180 packets .",
    "[ fig : ns2_results ] , presents simulation results in ns-2 simulator over diamond and grid topologies for different loss rates .",
    "[ fig : ns2_results](a ) shows the results for the diamond topology .",
    "the loss rate is over the link between nodes @xmath156 and @xmath157 .",
    "diff - max performs better than the other schemes for the range of loss rates .",
    "the reason is that diff - max activates links based on per - link queue backlogs , loss rates , and link rates . on the other hand ,",
    "diff - submax , wdiff - submax , and aodv uses classical 802.11 mac , which provides fairness among the competing nodes for the medium , which is not utility optimal .",
    "when the loss rate over link @xmath181 increases , the total throughput of all the schemes reduces as expected . as it can be seen , the decrease of our schemes ; diff - max , diff - submax , wdiff - submax is linear , while the decrease of aodv is quite sharp .",
    "the reason is that when aodv experiences loss over a path , it deletes the path and re - calculates new routes .",
    "therefore , aodv does not transmit over lossy links for some time period and tries to find new routes , which reduces throughput .",
    "[ fig : ns2_results](b ) elaborates more on the above discussion .",
    "it shows the throughput of two flows @xmath156 to @xmath157 and @xmath156 to @xmath159 as well as their total value when the loss rate is @xmath182 over link @xmath181 .",
    "as it can be seen , the rate of flow @xmath181 is very low in aodv as compared to our schemes , because aodv considers the link @xmath181 is broken at some periods during the simulation , while our schemes continue to transmit over this link .",
    "let us consider fig .",
    "[ fig : ns2_results](a ) again .",
    "diff - submax and wdiff - submax improve throughput significantly as compared to aodv thanks to exploring routes to improve utility ( hence throughput ) .",
    "the improvement of our schemes over aodv is up to @xmath183 in this topology .",
    "also , diff - submax and wdiff - submax have similar throughput performance , which emphasis the benefit of routing part and the effective link layer queue estimation mechanism of wdiff - submax .",
    "[ fig : ns2_results](a ) also shows that when loss rate is @xmath184 , the throughput improvement of all schemes are similar , because at @xmath184 loss rate , link @xmath181 becomes very inefficient , and all of the schemes transmit packets mostly from flow @xmath156 to @xmath159 over path @xmath185 and have similar performance at high loss rates .",
    "[ fig : ns2_results](b ) shows the results for the grid topology .",
    "the throughput improvement of our schemes is higher than aodv for all loss rates in the grid topology and higher as compared to the improvement in the diamond topology , _",
    "e.g. , _ the improvement is up to @xmath186 in the grid topology .",
    "the reason is that aodv is designed to find the shortest paths , but our schemes are able to explore interference free paths even if they are not the shortest paths , which is emphasized in larger topologies .",
    "we consider a scenario in which a group of smartphones collaborate in the same geographical area . in our setting , we use four android 4.0 @xcite based galaxy nexus phones , and configure them to operate in ad - hoc mode over wifi .",
    "we implement our wdiff - submax scheme ( flow control and routing ) as an extension of udp socket .",
    "we first consider a scenario in which two phones ( @xmath156 and @xmath157 ) are connected to each other .",
    "phone @xmath156 transmits @xmath187 audio file to phone @xmath157 .",
    "the transmission time for wdiff - submax was @xmath188 which is comparable with its tcp counterpart , which was @xmath189 .",
    "this example shows the efficiency of our algorithm as an extension of udp , which causes packet losses or too long transmission times .    in the second scenario",
    ", we placed / separated phones to be able to create a topology similar to the diamond topology shown in fig .",
    "[ fig : topologies](b ) . in this setup",
    ", phone @xmath156 transmits @xmath187 audio file to phone @xmath159 either using phone @xmath157 or @xmath158 as a relay .",
    "we first consider tcp connection over the path @xmath190 and configure phone @xmath157 so that it drops relaying packets after @xmath191 transmission .",
    "as expected , tcp connection fails when @xmath157 stops relaying packets .",
    "on the other hand , wdiff - submax continues transmission even after @xmath157 stops , by relaying packets using phone @xmath158 , and completes the transmission in @xmath192 .",
    "_ backpressure and follow - up work .",
    "_ this paper builds on backpressure , a routing and scheduling framework over communication networks @xcite , @xcite , which has generated a lot of interest in the research community @xcite ; especially for wireless and - hoc networks @xcite , @xcite , @xcite , @xcite , @xcite , @xcite .",
    "also , it has been shown that backpressure can be combined with flow control to provide utility - optimal operation guarantee @xcite , @xcite .",
    "this paper follows the main idea of backpressure framework , and revisit it considering the practical challenges that are imposed by the current networks .",
    "_ backpressure implementation . _",
    "the strengths of the backpressure framework have recently increased the interest on practical implementation of backpressure over wireless networks .",
    "multi - path tcp scheme is implemented over wireless mesh networks @xcite , where tcp flows are transmitted over multiple pre - determined paths and packets are scheduled according to backpressure scheduling algorithm . at the link layer , @xcite , @xcite , @xcite , @xcite propose , analyze , and evaluate link layer backpressure - based implementations with queue prioritization and congestion window size adjustment .",
    "the backpressure framework is implemented over sensor networks @xcite and wireless multi - hop networks @xcite , which are also the most close implementations to ours .",
    "our main differences are that ; ( i ) we consider separation of routing and scheduling to make practical implementation easier , ( ii ) we design and analyze a new scheme ; diff - max , ( iii ) we simulate and implement diff - max over ns-2 and android phones .",
    "_ backpressure and queues .",
    "_ according to backpressure framework , each node constructs per - flow queues .",
    "there is some work in the literature to stretch this necessity .",
    "for example , @xcite , @xcite propose using real per - link and virtual per - flow queues .",
    "such a method reduces the number of queues required in each node , and reduces the delay .",
    "although this approach reduces the backpressure framework to make routing decision using virtual queues and scheduling decision using the real per - link queues by decoupling routing and scheduling , it does not separate routing from scheduling .",
    "therefore , this approach requires strong synchronization between the network and link layers , which is difficult to implement in practice as explained in section  [ sec : intro ] .",
    "in this paper , we proposed diff - max , a framework that separates routing and scheduling in backpressure - based wireless networks .",
    "diff - max improves throughput significantly .",
    "also , the separation of routing and scheduling makes practical implementation easier by minimizing cross - layer operations and it leads to modularity .",
    "our design is grounded on a network utility maximization ( num ) formulation of the problem and its solution .",
    "simulations in ns-2 demonstrate the performance of diff - max as compared adaptive routing schemes , such as aodv .",
    "the evaluations on an android testbed confirm the efficiency and practicality of our approach .",
    "l.  tassiulas and a.  ephremides , `` stability properties of constrained queueing systems and scheduling policies for maximum throughput in multihop radio networks , '' _ in ieee trans . on automatic control _ , vol .",
    "37(12 ) , dec . 1992 .",
    "m.  chiang , s.  t.  low , a.  r.  calderbank , and j.  c.  doyle , `` layering as optimization decomposition : a mathematical theory of network architectures , '' _ in proceedings of the ieee _ , vol .",
    "95(1 ) , jan . 2007 .",
    "h.  seferoglu , e.  modiano , `` diff - max : separation of routing and scheduling in backpressure - based wireless networks , '' tech .",
    "report , available at _ newport.eecs.uci.edu / hseferog/_. m.  j.  neely , `` stochastic network optimization with application to communication and queueing systems , '' morgan & claypool , 2010 .",
    "d.  aguayo , j.  bicket , s.  biswas , g.  judd , and r.  morris , `` link - level measurements from an 802.11b mesh network , '' _ in proc . of acm sigcomm _",
    ", portland , or , sept .",
    "2004 . c.  steger , p.  radosavljevic , and j.  p.  frantz , `` performance of ieee 802.11b wireless lan in an emulated mobile channel , '' _ in proc . of vtc _ , orlando , fl , oct .",
    "2003 .",
    "j.  liu , a.  l.  stolyar , m.  chiang , and h.  v.  poor , `` queue back - pressure random access in multihop wireless networks : optimality and stability , '' _ in ieee trans . on information theory _ ,",
    "55(9 ) , sept .",
    "2009 .",
    "l.  x.  bui , r.  srikant , and a.  stolyar , `` a novel architecture for reduction of delay and queueing structure complexity in the back - pressure algorithm , '' _ in ieee / acm transactions on networking _ , vol .",
    "19(6 ) , dec . 2011 ."
  ],
  "abstract_text": [
    "<S> the backpressure routing and scheduling , with throughput - optimal operation guarantee , is a promising technique to improve throughput over wireless multi - hop networks . </S>",
    "<S> although the backpressure framework is conceptually viewed as layered , the decisions of routing and scheduling are made jointly , which imposes several challenges in practice . in this work , we present diff - max </S>",
    "<S> , an approach that separates routing and scheduling and has three strengths : ( i ) diff - max improves throughput significantly , ( ii ) the separation of routing and scheduling makes practical implementation easier by minimizing cross - layer operations ; _ i.e. , _ routing is implemented in the network layer and scheduling is implemented in the link layer , and ( iii ) the separation of routing and scheduling leads to modularity ; _ i.e. , _ routing and scheduling are independent modules in diff - max and one can continue to operate even if the other does not . our approach is grounded in a network utility maximization ( num ) formulation of the problem and its solution . based on the structure of diff - max , we propose two practical schemes : diff - submax and wdiff - submax . </S>",
    "<S> we demonstrate the benefits of our schemes through simulation in ns-2 , and we implement a prototype on smartphones . </S>"
  ]
}
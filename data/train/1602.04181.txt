{
  "article_text": [
    "the term _ network alignment _ encompasses several distinct but related problem variants @xcite . in general ,",
    "network alignment aims to find a bijective mapping across two ( or more ) networks so that if two nodes are connected in one network , their images are also connected in the other network(s ) .",
    "if such an errorless alignment scheme exists , network alignment can be simplified to the problem of graph isomorphism @xcite . however , in general , an errorless alignment scheme may not be feasible across two networks . in that case",
    ", network alignment aims to find a mapping with the minimum error and/or the maximum overlap .",
    "network alignment has a broad range of applications in systems biology , social sciences , computer vision , and linguistics .",
    "for instance , network alignment has been used frequently as a comparative analysis tool in studying protein - protein interaction networks across different species @xcite . in computer vision",
    ", network alignment has been used in image recognition by matching similar images @xcite .",
    "it has also been applied in ontology alignment to find relationships among different representations of a database @xcite , and in user de - anonymization to infer user / sample identifications using similarity between datasets @xcite .",
    "a network alignment optimization seeks an assignment of nodes and edges across multiple networks to maximize ( or alternatively minimize ) a cost function with quadratic terms .",
    "this problem is closely related to the quadratic assignment problem ( qap ) @xcite which is computationally challenging to solve exactly .",
    "reference @xcite shows that approximating a solution of maximum quadratic assignment problem within a factor better than @xmath0 is not feasible in polynomial time in general .",
    "however , owing to numerous applications of quadratic assignment problems in different areas , several algorithms have been designed to solve it approximately : some methods use exact search approaches based on branch - and - bound @xcite and cutting plane @xcite .",
    "these methods can only be applied to very small problem instances owing to their high computational complexity .",
    "some methods attempt to solve the underlying qap by linearizing the quadratic term and transforming the optimization into a mixed integer linear program ( milp ) @xcite . in practice",
    ", the very large number of introduced variables and constraints in linearization of the qap objective function poses an obstacle for solving the resulting milp efficiently .",
    "some methods use convex relaxations of the qap to compute a bound on its optimal value @xcite .",
    "the provided solution by these methods may not be a feasible solution for the original quadratic assignment problem .",
    "other methods to solve the network alignment optimization include semidefinite @xcite or non - convex @xcite relaxations , bayesian inference @xcite , message passing @xcite or other heuristics @xcite .",
    "we will review these methods in section [ sec : overview ] . for more details on these methods",
    ", we refer readers to references @xcite .",
    "spectral inference methods have received significant attention in various network science problems such as network clustering and low dimensional embedding problems @xcite . however , the use of spectral techniques in the network alignment problem has been limited @xcite partially owing to the lack of principled connections between existing spectral network alignment methods and relaxations of the underlying qap .",
    "in fact , the performance of existing spectral network alignment methods have been assessed mostly through limited simulations and/or validations with real data where an analytical performance characterization is lacked even in simple cases .    in this paper",
    ", we propose a network alignment framework that uses an orthogonal relaxation of the underlying qap in a maximum weight bipartite matching optimization .",
    "our method simplifies , in a principled way , the network alignment optimization to simultaneous alignment of eigenvectors of ( transformations of ) adjacency graphs scaled by corresponding eigenvalues .",
    "we show that our framework not only can be employed to provide a theoretical justification for existing heuristic spectral network alignment methods , but it also leads to a new scalable network alignment algorithm which outperforms existing ones over various synthetic and real networks .",
    "we prove that our solution is asymptotically exact with high probability for erds - rnyi graphs @xcite , under some general conditions .",
    "proofs are based on a characterization of eigenvectors of erds - rnyi graphs , along with some spectral perturbation analysis . for an analytical performance characterization of our proposed method , we consider asymptotically large erds - rnyi graphs owing to their tractable spectral characterization . note that finding an isomorphic mapping across asymptotically large erds - rnyi graphs is a well studied problem and can be solved efficiently through canonical labeling @xcite . however , note that in the network alignment problem graphs can be non - isomorphic as well .",
    "also note that in our optimality analysis we only consider finite and asymptotically large graphs . for arguments on infinite graphs , see section [ sec : isomorphism ] .",
    "moreover , we generalize the objective function of the network alignment problem to consider both matched and mismatched interactions in a standard qap formulation . in general , existing scalable network alignment methods only consider maximizing the number of overlapping edges ( matches ) across two networks and ignore the number of resulting mismatches ( interactions that exist only in one of the networks ) . this limitation can be critical particularly in applications where networks have different sizes and low similarity . through analytical performance characterization , simulations on synthetic networks , and real - data analysis ,",
    "we show that the combination of both algorithmic and qualitative aspects of our network alignment framework leads to improved performance of our proposed algorithm compared to existing network alignment methods . on simple examples ,",
    "we isolate multiple aspects of the proposed algorithm and show that each aspect is critical in the performance of the method .",
    "the proposed algorithmic and qualitative improvements can also be adapted to existing network alignment packages .",
    "some network alignment formulations aim to align paths @xcite or subgraphs @xcite across two ( or multiple ) networks .",
    "the objective of these methods is different from our network alignment optimization where a bijective mapping across nodes of two networks is desired according to a quadratic assignment problem .",
    "solutions of these different methods may be related .",
    "for instance , a bijective mapping across nodes of two networks can provide information about conserved pathways and/or subgraphs across networks , and vice versa .",
    "many networks have modular structures in which groups of nodes tend to interact with each other more strongly compared to the rest of the network @xcite .",
    "one can take advantage of such modular structure to split a large network alignment optimization into small subproblems and use semidefinite programming ( sdp ) over each subproblem , which yields a more accurate approximation to the underlying qap at the expense of more computation @xcite . here , we consider a special class of modular networks and propose an extension of the spectral network alignment algorithm where spectral information is used to split a large qap into smaller ones over which a sdp - based optimization @xcite is performed .",
    "this hybrid method has high performance similar to sdp , while enjoying significantly less computational complexity .",
    "we illustrate the effectiveness of our spectral network alignment algorithm against some existing network alignment methods over various synthetic network models including erds - rnyi , power law , regular , and stochastic block structures , under different noise models .",
    "having illustrated the efficiency of our algorithm both theoretically and through simulations , we apply it to two real - data applications : we use network alignment to compare gene regulatory networks across human , fly and worm species which we infer by integrating genome - wide functional and physical genomics datasets from encode and modencode consortia .",
    "we show that our network alignment method infers conserved regulatory interactions across these species despite long evolutionary distances separating these organisms .",
    "moreover , we find strong conservation of centrally - connected genes and biological pathways , especially for human - fly comparisons . in a second application",
    ", we show that our spectral network alignment algorithm improves our ability to de - anonymize small subgraphs of the twitter follower network sampled in years 2008 and 2009 , where we de - anonymize user ids in 2009 using user ids in 2008 .",
    "this application illustrates the extent of personal information that can be retrieved from network structures , and raises additional considerations that need to be addressed in different privacy - related applications .",
    "the rest of the paper is organized as follows . in section [ sec :",
    "setup ] , we present the network alignment problem and review existent network alignment techniques . in section [ sec : eigenalign - alg ] , we introduce our proposed algorithm and discuss its relationship with the underlying quadratic assignment problem .",
    "moreover , we present the optimality of our method over random graphs , under some general conditions . in section [ sec : lowrank ] , we consider the trace formulation of the network alignment optimization and introduce a network alignment algorithm which uses higher - order eigenvectors of adjacency graphs to align network structures . in section [",
    "sec : modular ] , we consider the network alignment problem of modular networks and introduce an algorithm which solves it efficiently . in section [ sec : eval ] , we compare performance of our method with existent network alignment methods over different synthetic network structures . in section [ sec :",
    "inference ] , we introduce our network inference framework to construct integrative gene regulatory networks in different species used in the network alignment application . in section [ sec : regulatory ] , we illustrate applications of our method in comparative analysis of regulatory networks across species . in section [ sec : twitter ] , we explain an application of network alignment in user de - anonymization over twitter follower subgraphs . in section",
    "[ sec : proofs ] , we present proofs for the main results of the paper .",
    "in this section , we introduce the network alignment problem formulation . let @xmath1 and @xmath2 be two graphs ( networks ) where @xmath3 and @xmath4 represent set of nodes and edges of graph @xmath5 , respectively . by abuse of notation ,",
    "let @xmath6 and @xmath7 be their matrix representations as well where @xmath8 iff @xmath9 , for @xmath5 .",
    "suppose network @xmath10 has @xmath11 nodes , i.e. , @xmath12 .",
    "we assume that networks are un - weighted ( binary ) , and possibly directed .",
    "the proposed framework can be extended to the case of weighted graphs as well .",
    "let @xmath13 be an @xmath14 binary matrix where @xmath15 means that node @xmath16 in network @xmath17 is mapped to node @xmath18 in network @xmath19 .",
    "the pair @xmath20 is called a mapping edge across two networks . in the network alignment setup",
    ", each node in one network can be mapped to at most one node in the other network , i.e. , @xmath21 for all @xmath18 , and similarly , @xmath22 for all @xmath16 .",
    "let @xmath23 be a vectorized version of @xmath13 .",
    "that is , @xmath23 is a vector of length @xmath24 where , @xmath25 . to simplify notation ,",
    "define @xmath26 .",
    "two mappings @xmath20 and @xmath27 can be matches which cause overlaps , can be mismatches which cause errors , or can be neutrals ( figure [ fig : match - mismatch - illustration]-a ) .",
    "[ def : match - mismatch ] suppose @xmath1 and @xmath2 are undirected graphs .",
    "let @xmath28 and @xmath29 where @xmath15 and @xmath30 .",
    "then ,    * @xmath20 and @xmath27 are _ matches _ if @xmath31 and @xmath32 . * @xmath20 and @xmath27 are _ mismatches _ if only one of the edges @xmath33 and @xmath34 exists . * @xmath20 and @xmath27 are _ neutrals _ if none of the edges @xmath33 and @xmath34 exists",
    ".        definition [ def : match - mismatch ] can be extended to the case where @xmath6 and @xmath7 are directed graphs . in this case , mappings @xmath20 and @xmath27 are matches / mismatches if they are matches / mismatches in one of the possible directions .",
    "however , it is possible to have these mappings be matches in one direction , while they are mismatches in the other direction ( figure [ fig : match - mismatch - illustration]-b ) .",
    "these mappings are denoted as _ inconsistent mappings _",
    ", defined as follows :    [ def : inconsistent ] let @xmath1 and @xmath2 be two directed graphs and @xmath28 and @xmath29 where @xmath15 and @xmath30 .",
    "if edges @xmath35 , @xmath36 , and @xmath37 exist , however , @xmath38 does not exist , then mappings @xmath20 and @xmath27 are _",
    "existing network alignment formulations aim to find a mapping matrix @xmath13 which maximizes the number of matches between networks .",
    "however , these formulations can lead to mappings which cause numerous mismatches , especially if networks have different sizes and low similarity . in this paper",
    ", we propose a more general formulation for the network alignment problem which considers both matches and mismatches simultaneously .    for a given alignment matrix @xmath13 across networks @xmath6 and @xmath7 , we assign an _ alignment score _ by considering the number of matches , mismatches and neutrals caused by @xmath13 : @xmath39 where @xmath40 , @xmath41 , and @xmath42 are scores assigned to matches , neutrals , and mismatches , respectively .",
    "note that existing alignment methods ignore effects of mismatches and neutrals by assuming @xmath43 which is restrictive particularly in aligning graphs with different number of nodes and low similarity . in the following ,",
    "we re - write as a quadratic assignment formulation .",
    "consider two undirected graphs @xmath1 and @xmath2 .",
    "we form an _ alignment network _ represented by adjacency matrix @xmath44 in which nodes are mapping edges across the original networks , and the edges capture whether the pair of mapping edges induce matches , mismatches or neutrals ( figure [ fig : framework ] ) .",
    "[ def : alignment - network ] let @xmath28 and @xmath29 , where @xmath15 and @xmath30 .",
    "@xmath45=\\begin{cases }      s_1 , & \\text{if } ( i , j ' ) \\text { and } ( r , s ' ) \\text { are matches},\\\\      s_2 , & \\text{if } ( i , j ' ) \\text { and } ( r , s ' ) \\text { are neutrals},\\\\      s_3 , & \\text{if } ( i , j ' ) \\text { and } ( r , s ' ) \\text { are mismatches } , \\end{cases}\\ ] ] where @xmath40 , @xmath41 , and @xmath42 are scores assigned to matches , neutrals , and mismatches , respectively .",
    "we can re - write as follows : @xmath46=(s_1+s_2 - 2s_3)g_1(i , r)g_2(j',s')+(s_3-s_2)(g_1(i , r)+g_2(j',s'))+s_2.\\ ] ] we can summarize and as follows : @xmath47 where @xmath48 represents matrix kronecker product , and @xmath49 is an @xmath50 matrix whose elements are all ones .",
    "a similar scoring scheme can be used for directed graphs .",
    "when graphs are directed , some mappings can be inconsistent according to definition [ def : inconsistent ] , i.e. , they are matches in one direction and mismatches in another",
    ". scores of inconsistent mappings can be assigned randomly to matched / mismatched scores , or to an average score of matches and mismatches ( i.e. , @xmath51 ) . for random graphs ,",
    "inconsistent mappings are rare events .",
    "for example , suppose network edges are distributed according to a bernoulli distribution with parameter @xmath52 .",
    "then , the probability of having an inconsistent mapping for a particular pair of paired nodes across networks is equal to @xmath53 . therefore , their effect in network alignment is negligible particularly for large sparse networks . throughout the paper , for directed graphs , we assume inconsistent mappings have negligible effect unless it is mentioned explicitly .",
    "alignment scores @xmath40 , @xmath41 and @xmath42 of can be arbitrary in general .",
    "however , in this paper we consider the case where @xmath54 with the following rationale : suppose a mapping matrix @xmath13 has a total of @xmath55 non - zero edges .",
    "for example , if networks have @xmath56 nodes and there is no unmapped nodes across two networks , @xmath57 .",
    "the total number of matches , mismatches and neutrals caused by this mapping is equal to @xmath58 .",
    "thus , for mapping matrices with the same number of mapping edges , without loss of generality , one can assume that , alignment scores are strictly positive @xmath59 ( otherwise , a constant can be added to the right - hand side of ) . in general , mappings with high alignment scores might have slightly different number of mapping edges owing to unmapped nodes across the networks which has a negligible effect in practice . moreover , in the alignment scheme , we wish to encourage matches and penalize mismatches .",
    "thus , throughout this paper , we assume @xmath54 .    in practice , some mappings across two networks may not be possible owing to additional side information .",
    "the set of possible mappings across two networks is denoted by @xmath60 . if @xmath61 , the problem of network alignment is called _",
    "unrestricted_. however , if some mappings across two networks are prevented ( i.e. , @xmath62 , for @xmath63 ) , then the problem of network alignment is called _",
    "restricted_.    in the following , we present the network alignment optimization which we consider in this paper :    [ def : network_alignment ] let @xmath1 and @xmath2 be two binary networks .",
    "network alignment aims to solve the following optimization : @xmath64 where @xmath44 is defined according to , and @xmath65 is the set of possible mappings across two networks .    in the following , we re - write using the trace formulation of a standard qap . here",
    ", we consider undirected networks @xmath1 and @xmath2 with @xmath66 and @xmath67 nodes , respectively . without loss of generality , we assume @xmath68 .",
    "moreover , we assume that all nodes of the network @xmath6 are mapped to nodes of the network @xmath7 ( i.e. , there are no un - aligned nodes in @xmath6 ) .",
    "define @xmath69 , @xmath70 and @xmath71 .",
    "we can rewrite the objective function of optimization using as follows : @xmath72 where @xmath73 thus , the network alignment optimization can be reformulated as follows : @xmath74      network alignment problem is an example of a quadratic assignment problem ( qap ) @xcite .",
    "reference @xcite shows that approximating a solution of maximum quadratic assignment problem within a factor better than @xmath0 is not feasible in polynomial time in general .",
    "however , owing to various applications of qap in different areas , many methods exist for approximate solutions . in the following , we briefly summarize previous works by categorizing them into four groups and explain advantages and shortcomings of each .",
    "for more details on these methods , we refer readers to references @xcite .    *",
    "* exact search methods : * these methods provide a global optimal solution for the quadratic assignment problem",
    ". however , owing to their high computational complexity , they can only be applied to very small problem instances .",
    "examples of exact algorithms include methods based on branch - and - bound @xcite and cutting plane @xcite . *",
    "* linearizations : * these methods attempt to solve qap by eliminating the quadratic term in the objective function of optimization , transforming it into a mixed integer linear program ( milp ) .",
    "an existing milp solver is applied to find a solution for the relaxed problem .",
    "examples of these methods are lawler s linearization @xcite , kaufmann and broeckx linearization @xcite , frieze and yadegar linearization @xcite , and adams and johnson linearization @xcite",
    ". these linearizations can provide bounds on the optimal value of the underlying qap @xcite . in general , linearization of the qap objective function",
    "is achieved by introducing many new variables and new linear constraints . in practice",
    ", the very large number of introduced variables and constraints poses an obstacle for solving the resulting milp efficiently . * * semidefinite / convex relaxations and bounds : * these methods aim to compute a bound on the optimal value of the network alignment optimization , by considering the alignment matrix in the intersection of the sets of orthogonal and stochastic matrices .",
    "the provided solution by these methods may not be a feasible solution of the original quadratic assignment problem .",
    "examples of these methods include orthogonal relaxations @xcite , projected eigenvalue bounds @xcite , convex relaxations @xcite , and matrix splittings @xcite . in the computer vision literature , @xcite use spectral techniques to approximately solve qap by inferring a cluster of assignments over the feature network .",
    "then , they use a greedy approach to reject assignments with low associations .",
    "+ in particular , @xcite introduces a convex relaxation of the underlying network alignment optimization based on matrix splitting which provides bounds on the optimal value of the underlying qap .",
    "the proposed sdp method provides a bound on the optimal value and additional steps are required to derive a feasible solution .",
    "moreover , owing to its computational complexity , it can only be used to align small networks , limiting its applicability to alignment of large real networks . in section [ sec :",
    "modular ] , we address these issues and introduce a hybrid method based on our proposed scheme in section [ sec : eigenalign - alg ] , and the semidefinite relaxation of @xcite to align large modular network structures with low computational complexity . * * other methods : * there are several other techniques to approximately solve network alignment optimization .",
    "some methods use a lagrangian relaxation @xcite , bayesian framework @xcite , or message passing @xcite , or some other heuristics @xcite . in section",
    "[ sec : eval ] , we assess the performance of some of these network alignment techniques through simulations .",
    "network alignment optimization is closely related to the problem of _ graph isomorphism _ ,",
    "defined as follows :    let @xmath1 and @xmath2 be two binary networks .",
    "@xmath6 and @xmath7 are isomorphic if there exists a permutation matrix @xmath75 such that @xmath76 .    the computational problem of determining whether two finite graphs are isomorphic is called the _ graph isomorphism problem_. moreover , given two isomorphic networks @xmath6 and @xmath7 , the problem of graph isomorphism aims to find the permutation matrix @xmath75 such that @xmath76 .",
    "the computational complexity of this problem is unknown @xcite .",
    "network alignment and graph isomorphism problems are related to each other . loosely speaking",
    ", network alignment aims to minimize the distance between premuted versions of two networks ( or , alternatively to maximize their overlap ) .",
    "therefore , if the underlying networks are isomorphic , an optimal solution of the network alignment optimization should be the same ( or close ) to the underlying permutation matrix @xmath75 , where @xmath76 . in the following lemma",
    ", we formalize such a connection between the network alignment optimization and the classical graph isomorphism problem :    [ lem : iso - align - relation1 ] let @xmath6 and @xmath7 be two isomorphic erds - rnyi graphs @xcite such that @xmath77=p$ ] and @xmath78 , where @xmath75 is a permutation matrix .",
    "let @xmath79 .",
    "then , for any selection of scores @xmath54 , @xmath75 maximizes the expected network alignment objective function of optimization .    the proof is presented in section [ subsec : proof - lem : iso - align - relation2 ] .",
    "the result of lemma [ lem : iso - align - relation1 ] can be extended to the case where edges of graphs are flipped through a random noise matrix :    [ lem : iso - align - relation2 ] let @xmath6 be an erds - rnyi graphs such that @xmath77=p$ ] .",
    "let @xmath80 be a graph resulting from flipping edges of @xmath6 independently and randomly with probability @xmath81 .",
    "suppose @xmath82 where @xmath75 is a permutation matrix .",
    "let @xmath83 and @xmath84 .",
    "then , for any selection of scores @xmath54 , @xmath75 maximizes the expected network alignment objective function of optimization .    the proof is presented in section [ subsec : proof - lem : iso - align - relation2 ] .    finding an isomorphic mapping across sufficiently large erds - rnyi graphs",
    "can be done efficiently with high probability ( w.h.p . ) through canonical labeling @xcite .",
    "canonical labeling of a network consists of assigning a unique label to each vertex such that labels are invariant under isomorphism .",
    "the graph isomorphism problem can then be solved efficiently by mappings nodes with the same canonical labels to each other @xcite .",
    "one example of canonical labeling is the degree neighborhood of a vertex defined as a sorted list of neighborhood degrees of vertices @xcite .",
    "note that , network alignment formulation is more general than the one of graph isomorphism ; network alignment aims to find an optimal mappings across two networks which are not necessarily isomorphic .",
    "we now introduce _ eigenalign _ , an algorithm which solves a relaxation of the network alignment optimization leveraging spectral properties of networks . unlike other alignment methods",
    ", eigenalign considers both matches and mismatches in the alignment scheme .",
    "moreover , we prove its optimality ( in an asymptotic sense ) in aligning erds - rnyi graphs under some technical conditions . in the following ,",
    "we describe the eigenalign algorithm :    .,height=264 ]    [ alg : eigenalign ] let @xmath1 and @xmath2 be two binary networks whose corresponding alignment network is denoted by @xmath44 according to .",
    "eigenalign algorithm solves the network alignment optimization in two steps :    * * eigenvector computation step : * in this step , we compute @xmath85 , an eigenvector of the alignment network @xmath44 with the maximum eigenvalue . *",
    "* linear assignment step : * in this step , we solve the following maximum weight bipartite matching optimization : @xmath86    this framework is depicted in figure [ fig : framework ]",
    ". in the rest of this section , we provide intuition on different steps of the eigenalign algorithm through both quadratic assignment relaxation argument as well as a fixed point analysis . in section [ subsec : erdos ] , we discuss optimality of eigenalign over random graphs . in section [ sec : lowrank ] , we will introduce an extension of the eigenalign algorithm which uses higher - order eigenvectors of adjacency graphs to align network structures .      in this section , we explain eigenalign as a relaxation of the underlying quadratic assignment optimization . for simplicity , we assume all mappings across networks are possible ( i.e. , @xmath87 ) . in the restricted network alignment setup , without loss of generality , one can eleminate rows and columns of the alignment matrix corresponding to mappings that are not allowed .    in the eigen decomposition step of eigenalign , we ignore bijective constraints ( i.e. , constraints @xmath88 and @xmath89 ) because they will be satisfied in the second step of the algorithm through a linear optimization . by these assumptions",
    ", optimization can be simplified to the following optimization : @xmath90 to approximate a solution of this optimization , we relax integer constraints to constraints over a hyper - sphere restricted by hyper - planes ( i.e. , @xmath91 and @xmath92 ) . using this relaxation , optimization is simplified to the following optimization : @xmath93 in the following , we show that @xmath85 , the leading eigenvector of the alignment matrix @xmath44 is an optimal solution of optimization .",
    "suppose @xmath94 is an optimal solution of optimization .",
    "let @xmath95 be a solution of the following optimization which ignores non - negativity constraints : @xmath96 following the rayleigh @xmath97 ritz formula , the leading eigenvector of the alignment matrix is an optimal solution of optimization ( i.e. , @xmath98 ) .",
    "now we use the following theorem to show that in fact @xmath99 :    [ thm : perron ] suppose @xmath44 is a matrix whose elements are strictly positive .",
    "let @xmath85 be an eigenvector of @xmath44 corresponding to the largest eigenvalue .",
    "then , @xmath100 , @xmath101 .",
    "moreover , all other eigenvectors must have at least one negative , or non - real component .",
    "since @xmath95 is a solution of a relaxed version of optimization , we have @xmath102 . using this inequality along with perron - frobenius theorem lead to @xmath103 , as the unique solution of optimization .",
    "the solution of the eigen decomposition step assigns weights to all possible mappings across networks ignoring bijective constraints .",
    "however , in the network alignment setup , each node in one network can be mapped to at most one node in the other network . to satisfy these constraints",
    ", we use eigenvector weights in a linear optimization framework of maximum weight bipartite matching setup of optimization @xcite .",
    "@xmath104 @xmath105    @xmath106      in this part , we analyze computational complexity of the eigenalign algorithm [ alg : eigenalign ] .",
    "suppose the number of nodes of networks @xmath6 and @xmath7 are @xmath107 .",
    "let @xmath108 be the number of possible mappings across two networks .",
    "in an unrestricted network alignment setup , we have @xmath109 . however , in a restricted network alignment , @xmath110 may be significantly smaller than @xmath111 .",
    "eigenalign has three steps :    * \\(i ) the alignment network @xmath44 should be formed which has a computational complexity of @xmath112 because all pairs of possible mappings should be considered .",
    "* \\(ii ) in the eigen decomposition step , we need to compute the leading eigenvector of the alignment network .",
    "this operation can be performed in almost linear time in @xmath110 using qr algorithms and/or power methods @xcite .",
    "therefore , the worst case computational complexity of this part is @xmath113 . *",
    "\\(iii ) finally , we use eigenvector weights in a maximum weight bipartite matching algorithm which can be solved efficiently using linear programming or hungarian algorithm @xcite .",
    "the worst case computational complexity of this step is @xmath114 .",
    "if the set @xmath115 has a specific structure ( e.g. , small subsets of nodes in one network are allowed to be mapped to small subsets of nodes in the other network ) , this cost can be reduced significantly . in section [ sec : regulatory ] , we see this structure in aligning regulatory networks across species as genes are allowed to be aligned to homologous genes within their gene families .",
    "[ prop : complexity ] the worst case computational complexity of the eigenalign algorithm is @xmath116 .",
    "[ remark : greedy ]      in this section , we analyze optimality of the eigenalign algorithm over erds - rnyi graphs , for both isomorphic and non - isomorphic cases , and under two different noise models",
    ". while real networks often have different structures than erds - rnyi graphs , the analytical tractability and the spectral characterization of these graphs makes it possible to actually prove that the proposed relaxations are asymptotically tight , at least in special cases , providing a rigorous foundation for the proposed eigenalign algorithm . in this section ,",
    "we only consider finite and asymptotically large graphs . for arguments on infinite graphs ,",
    "see section [ sec : isomorphism ] .",
    "suppose @xmath1 is an undirected erds - rnyi graph with @xmath117 nodes where @xmath77=p$ ] .",
    "self - loops are allowed as well .",
    "suppose @xmath118 is a noisy version of the graph @xmath6 .",
    "we consider two different noise models in this section :    * noise model i : in this model , we have , @xmath119 where @xmath120 represents the hadamard product , and @xmath121 is a binary random matrix whose edges are drawn i.i.d . from a bernoulli distribution with @xmath122=p_e$ ] . in words ,",
    "the operation @xmath123 flips edges of @xmath6 independently randomly with probability @xmath124 .",
    "* noise model ii : in this model , we have , @xmath125 where @xmath121 and @xmath126 are binary random matrices whose edges are drawn i.i.d . from a bernoulli distribution with @xmath122=p_e$ ] and",
    "@xmath127={p_{e_2}}$ ] . under this model ,",
    "edges of @xmath6 flip independently randomly with probability @xmath124 , while non - connecting tuples in @xmath6 will be connected in @xmath80 with probability @xmath128 . because @xmath6 is an erds - rnyi graph with parameter @xmath52 ,",
    "choosing @xmath129 leads to the expected density of networks @xmath6 and @xmath7 be @xmath52 .",
    "we define @xmath7 as follows : @xmath130 where @xmath75 is a permutation matrix . throughout this section",
    ", we assume that we are in the restricted network alignment regime : we desire to choose @xmath117 mappings @xmath131 across two networks among @xmath132 possible mappings where @xmath133 , @xmath134 , and @xmath135 .",
    "@xmath117 true mappings ( @xmath136 if @xmath137 ) are included in @xmath115 , while the remaining @xmath138 mappings are selected independently randomly .",
    "moreover , we choose scores assigned to matches , neutrals and mismatches as @xmath139 , @xmath140 and @xmath141 , respectively , where @xmath142 and @xmath143 .",
    "these selections satisfy score conditions @xmath54 .",
    "[ thm : erdos - noisy ] let @xmath144 be the solution of the eigenalign algorithm [ alg : eigenalign ] .",
    "then , under both noise models and , if @xmath83 , and @xmath145 , then as @xmath146 , the error probability goes to zero : @xmath147\\to 0.\\nonumber\\ ] ]    theorem [ thm : erdos - noisy ] states that , the eigenalign algorithm is able to recover the underlying permutation matrix which relates networks @xmath6 and @xmath7 to each other according to . on the other hand , according to lemma [ lem : iso - align - relation2 ] , this permutation matrix is in fact optimizes the expected network alignment score .    [",
    "prop : erdos - p - max - qap ] under conditions of theorem [ thm : erdos - noisy ] , the permutation matrix inferred by eigenalign maximizes the expected network alignment objective function defined according to optimization .    in noise models and ,",
    "if we put @xmath148 , then @xmath7 is isomorphic with @xmath6 because there exists a permutation matrix @xmath75 such that @xmath78 . for this case",
    ", we have the following corollary :    [ thm : erdos ] let @xmath6 and @xmath7 be two isomorphic erds - rnyi graphs with @xmath117 nodes such that @xmath76 , where @xmath75 is a permutation matrix . under conditions of theorem [ thm : erdos - noisy ] , as @xmath146 , the error probability of eigenalign solution goes to zero .",
    "we present proofs of theorem [ thm : erdos - noisy ] and corollary [ thm : erdos ] in sections [ subsec : proof - thm - erdos ] and [ subsec : proof - erdos - noisy ] . in the following , we sketch main ideas of their proofs : since input networks @xmath6 and @xmath7 are random graphs , the alignment network formed according to will be a random graph as well",
    "the first part of the proof is to characterize the leading eigenvector of this random alignment network . to do this ,",
    "we first characterize the leading eigenvector of the expected alignment network which in fact is a deterministic graph . in particular",
    ", we prove that eigenvector scores assigned to true mappings is strictly larger than the ones assigned to false mappings . to prove this , we characterize top eigenvalues and eigenvectors of the expected alignment network algebraically .",
    "the restricted alignment condition ( i.e. , @xmath132 ) is necessary to have this bound .",
    "then , we use wedin sin theorem @xcite from perturbation theory , gershgorian circle theorem @xcite from spectral matrix theory , and chernoff bound to characterize the leading eigenvector of the random alignment network for sufficiently large @xmath117 .",
    "finally , we use chebyshev s inequality to show that the error probability of the eigenalign algorithm is asymptotically zero w.h.p .    note",
    "that finding an isomorphic mapping across asymptotically large erds - rnyi graphs ( corollary [ thm : erdos ] ) is a well studied problem and can be solved efficiently through canonical labeling @xcite . however",
    ", those techniques do not address a more general network alignment problem similar to the setup considered in theorem [ thm : erdos - noisy ] . for more details , see section [ sec : isomorphism ] .",
    "theorem [ thm : erdos - noisy ] and corollary [ thm : erdos ] consider a restricted network alignment case where @xmath132 .",
    "as explained briefly in the proof sketch and with more details in lemma [ lem : average ] , this technical condition is necessary to show that , expected eigenvector scores of true mappings are strictly larger than the ones of false mappings as @xmath146 . in section [ sec : eval ] and through simulations , we show that error of the eigenalign algorithm is empirically small even in an unrestricted network alignment setup .",
    "the eigenalign algorithm introduced in section [ sec : eigenalign - alg ] uses the leading eigenvector of the alignment graph to align graph structures .",
    "eigenalign can be viewed as the rank - one approximation of the linearization of the underlying quadratic assignment problem . in this section ,",
    "we introduce an extension of eigenalign which uses higher - order eigenvector of adjacency graphs to align network structures .",
    "we refer to this extension as _ lowrank align_. lowrank align can be useful specially in cases where leading eigenvectors of graphs are not informative .",
    "this case occurs for instance in the alignment of regular graph structures .",
    "moreover , lowrank align does not require an explicit formation of the alignment graph which can be costly for large networks if all mappings across networks are possible .",
    "suppose @xmath6 and @xmath7 are input networks with @xmath66 and @xmath67 nodes . for simplicity , in this section",
    "we assume that they are symmetric . recall that @xmath13 represents the mapping matrix whose size is @xmath14 . in this section ,",
    "we use the trace formulation of the quadratic assignment problem .",
    "the maximum overlap network alignment optimization can be written as follows : @xmath149 optimization finds a mapping matrix @xmath13 that maximizes the number of overlapping edges ( matches ) across two graphs .",
    "however , such a mapping can cause numerous mismatches .",
    "we discuss a balanced network alignment optimization later in this section .    for simplicity ,",
    "we assume @xmath56 .",
    "all discussions can be extended to the case where @xmath150 .",
    "let @xmath151 be the set of all permutation matrices of size @xmath50 .",
    "thus , optimization can be written as follows : @xmath152 let @xmath153 be an optimal solution of optimization .",
    "finding an optimal solution of this optimization is known to be np - hard @xcite .",
    "if @xmath154 , we have , @xmath155 in other words , we can add and subtract multiples of identity to make the resulting symmetric matrices positive definite , without changing the structure of the problem .",
    "thus , without loss of generality , we assume that matrices @xmath6 and @xmath7 are positive semi - definite .",
    "several algorithms have considered relaxations / approximations of this optimization as follows : @xmath156 suppose @xmath157 is a solution of optimization such that @xmath158 ( i.e. , its distance from the optimal solution is bounded by @xmath159 ) .",
    "@xmath160 may not be a valid permutation matrix .",
    "one way to find a permutation matrix using @xmath160 is to project @xmath160 over the space of permutation matrices @xmath151 : @xmath161 however , it has been shown that an optimal solution of optimization has a poor perform in practice @xcite . in the following , we propose an alternative algorithm to efficiently infer a permutation matrix using @xmath160 with a certain performance guarantee :    consider the following optimization : @xmath162 this is a maximum weight bipartite matching optimization which can be solved exactly using linear programming .",
    "let @xmath163 be an optimal solution of optimization .",
    "define @xmath164    [ thm : gaurantee ] let @xmath153 and @xmath163 be optimal solutions of optimizations and , respectively .",
    "we have , latexmath:[\\ ] ] where the size of the top and bottom blocks are @xmath66 and @xmath67 , respectively .",
    "let @xmath530 be the leading eigenvector of @xmath13 . then ,",
    "if @xmath531 , @xmath532 , and @xmath533 , we have , @xmath534    suppose @xmath220 is an eigenvector of the matrix @xmath13 with the corresponding eigenvalue @xmath345 .",
    "owing to the symmetric structure of the matrix @xmath13 , we have , @xmath535 using in the eigen decomposition equality , we have , @xmath536 thus , we have , @xmath537 where , @xmath538 let @xmath539 be the largest root of , which corresponds to the leading eigenvector of the matrix @xmath530 . to prove the lemma , it is sufficient to show that , @xmath540 this is true if @xmath364 and @xmath533 . to show this , we need to show , @xmath541 which is true under the conditions of the lemma .",
    "this completes the proof .    if @xmath221 and @xmath222 , we have @xmath542 .",
    "thus , lemma [ lemma : c - eigenvector ] leads to .",
    "this completes the proof .",
    "we use the same setup considered in the proof of theorem [ thm : noiseless - modular ] to form the expected alignment network . considering @xmath543 and @xmath544 , expected",
    "scores of different mapping - pairs illustrated in figure [ fig : proof - combination - ap ] can be approximated as follows : @xmath545 the proof is similar to the one of theorem [ thm : noiseless - modular ] . to use lemma [ lem : perron - increase ] , we need to have , @xmath546 which results in following conditions : @xmath547 because @xmath548 , we then have , @xmath549 to use lemma [ lemma : c - eigenvector ] , we need to have @xmath550 . using , we have : @xmath551 to show the non - negativity of the right - hand side of , it is sufficient to show the non - negativity of polynomial i. this polynomial has two roots at @xmath552 if @xmath553 , @xmath554 because the value of the polynomial i at @xmath555 is positive , if @xmath553 , the polynomial is always non - negative .",
    "if @xmath556 , we need to have , @xmath557 which guarantees the non - negativity of polynomial i. the rest of the proof is similar to the one of theorem [ thm : noiseless - modular ] .",
    "we use the same setup considered in the proof of theorem [ thm : noiseless - modular ] to form the expected alignment network .",
    "suppose @xmath558 and @xmath559 correspond to the expected objective function of the network alignment optimization [ opt : alignment ] using permutation matrices @xmath75 and @xmath144 , respectively , where , @xmath560 we wish to show that , @xmath561 .",
    "we have , @xmath562 where @xmath563 and @xmath564 are defined according to . under conditions of theorem [ thm : noiseless - modular ] , we have @xmath565 according to .",
    "thus , @xmath566 using and , we need to show that @xmath567 .",
    "we have , @xmath568 this polynomial have two roots at @xmath569 because @xmath142 , the minimum root is always negative .",
    "moreover , at @xmath555 , the polynomial value is negative .",
    "thus , is negative if @xmath570 this completes the proof .",
    "we use the same setup considered in the proof of theorem [ thm : noiseless - modular ] to form the expected alignment network . similarly to the proof of theorem [ thm : noiseless - modular - qap ] , we need to show @xmath567 according to .",
    "we have , @xmath571 which is positive if @xmath572 this completes the proof .",
    "in this paper , we made a principled connection between spectral network alignment techniques and relaxations of the network alignment optimization ( quadratic assignment problem ) . using such connection",
    ", we proposed a network alignment algorithm which employs an orthogonal relaxation of the underlying qap in a maximum weight bipartite matching optimization .",
    "our method simplifies , in a principled way , the network alignment optimization to simultaneous alignment of eigenvectors of ( transformations of ) adjacency graphs scaled by corresponding eigenvalues .",
    "our framework also provides a theoretical justification for other existing heuristic spectral network alignment methods .",
    "our proposed framework advances existing network alignment methods not only in algorithmic aspects , but also in qualitative terms of the network alignment objective function .",
    "our formulation considers both matched and mismatched interactions in its optimization and therefore , it is effective in aligning networks even with low similarity .",
    "this is critical in applications where networks have low similarities such as comparative analysis of biological networks of distal species .",
    "this idea can also be adapted to existing network alignment packages .    for erds - rnyi graphs graphs",
    ", we proved that the proposed algorithm is asymptotically optimal with high probability , under some general conditions . through simulations",
    ", we compared the performance of our algorithm with the one of existing network alignment methods based on belief propagation ( netalign ) , spectral decomposition ( isorank ) , lagrange relaxation ( klau optimization ) , and a sdp - based method .",
    "our simulations illustrated the effectiveness of our proposed algorithm in aligning various network structures such as erds - rnyi , power law , regular , and stochastic block structures , under different noise models .",
    "for modular graph structure , we proposed a framework that uses spectral network alignment to split the large network alignment optimization into small subproblems .",
    "this enables the use of computationally expensive , but tight , semidefinite programming relaxations over each subproblem .",
    "this hybrid method has high performance similar to sdp , with significantly less computational complexity .",
    "designing other sdp - based network alignment methods with low computational complexity for various network models remains a promising direction for future work .",
    "moreover , in the our network alignment framework one can use other relaxations of qap ( for example by considering the alignment matrix in the intersection of the sets of orthogonal and stochastic matrices ) to obtain tighter bounds .",
    "here we considered two real - data applications .",
    "we applied our proposed network alignment algorithm to compare gene regulatory networks across human , fly and worm species which we inferred by integrating genome - wide functional and physical genomics datasets from encode and modencode consortia . our method inferred conserved regulatory interactions across these species despite large evolutionary distances spanned .",
    "moreover , we found strong conservation of centrally - connected genes and biological pathways , especially for human - fly comparisons . in a second application , we used network alignment in user de - anonymization over twitter follower subgraphs sampled in two different years .",
    "this application illustrates the extent of personal information that can be retrieved from network structures , and raises additional considerations that need to be addressed in different privacy - related applications .",
    "this study was designed by s. feizi , g. quon and m. kellis . s. feizi initiated , developed and analyzed the methods , and performed the experiments .",
    "g. quon and m. kellis contributed to the inference and comparative analysis of regulatory networks across species .",
    "m. mdard and a. jadbabaie contributed to analysis of the methods , characterizing performance guarantees , and comparison with other optimization techniques .",
    "m. mendoza contributed to the inference of regulatory networks and processing of expression datasets .",
    "the manuscript was written by s. feizi , and commented on by all the authors .",
    "authors thank encode and modencode consortia for collecting and providing genome - wide functional genomics datasets .",
    "we thank fontom5 consortium for providing initial tf lists .",
    "we thank przemyslaw grabowicz for providing the twitter follower subgraphs .",
    "authors acknowledge funding from coding instead of splitting ( 6927164 ) and afosr complex networks program and onr basic research challenge program on decentralized and online optimization .",
    "mariana recamonde - mendoza acknowledges the capes foundation / brazil ( bolsista capes - pdse - processo bex n 7137 - 12 - 5 ) .",
    "r.  singh , j.  xu , and b.  berger , `` global alignment of multiple protein interaction networks with application to functional orthology detection , '' _ proceedings of the national academy of sciences _ , vol .",
    "105 , no .",
    "35 , pp . 1276312768 , 2008 .",
    "j.  flannick , a.  novak , b.  s. srinivasan , h.  h. mcadams , and s.  batzoglou , `` graemlin : general and robust alignment of multiple large interaction networks , '' _ genome research _",
    "16 , no .  9 , pp . 11691181 , 2006 .",
    "b.  p. kelley , b.  yuan , f.  lewitter , r.  sharan , b.  r. stockwell , and t.  ideker , `` pathblast : a tool for alignment of protein interaction networks , '' _ nucleic acids research _",
    "suppl 2 , pp .",
    "w83w88 , 2004 .",
    "d.  conte , p.  foggia , c.  sansone , and m.  vento , `` thirty years of graph matching in pattern recognition , '' _ international journal of pattern recognition and artificial intelligence _ , vol .",
    "18 , no .  03 , pp . 265298 , 2004 .    c.  schellewald and c.  schnrr ,",
    "`` probabilistic subgraph matching based on convex relaxation , '' in _ energy minimization methods in computer vision and pattern recognition_.1em plus 0.5em minus 0.4emspringer , 2005 , pp . 171186",
    "s.  lacoste - julien , b.  taskar , d.  klein , and m.  i. jordan , `` word alignment via quadratic assignment , '' in _ proceedings of the main conference on human language technology conference of the north american chapter of the association of computational linguistics_.1em plus 0.5em minus 0.4emassociation for computational linguistics , 2006 , pp .",
    "112119 .",
    "s.  melnik , h.  garcia - molina , and e.  rahm , `` similarity flooding : a versatile graph matching algorithm and its application to schema matching , '' in _ data engineering , 2002 .",
    "18th international conference on_.1em plus 0.5em minus 0.4emieee , 2002 , pp .",
    "117128 .",
    "k.  makarychev , r.  manokaran , and m.  sviridenko , `` maximum quadratic assignment problem : reduction from maximum label cover and lp - based approximation algorithm , '' in _ automata , languages and programming_.1em plus 0.5em minus 0.4emspringer , 2010 , pp .",
    "594604 .",
    "w.  p. adams and t.  a. johnson , `` improved linear programming - based lower bounds for the quadratic assignment problem , '' _ dimacs series in discrete mathematics and theoretical computer science _ ,",
    "16 , pp . 4375 , 1994 .",
    "q.  zhao , s.  e. karisch , f.  rendl , and h.  wolkowicz , `` semidefinite programming relaxations for the quadratic assignment problem , '' _ journal of combinatorial optimization _ , vol .  2 , no .  1 ,",
    "pp . 71109 , 1998 .",
    "j.  t. vogelstein , j.  m. conroy , v.  lyzinski , l.  j. podrazik , s.  g. kratzer , e.  t. harley , d.  e. fishkind , r.  j. vogelstein , and c.  e. priebe , `` fast approximate quadratic programming for large ( brain ) graph matching , '' _ arxiv preprint arxiv:1112.5507 _ , 2011 .",
    "m.  leordeanu and m.  hebert , `` a spectral technique for correspondence problems using pairwise constraints , '' in _ computer vision , 2005 .",
    "iccv 2005 .",
    "tenth ieee international conference on _ , vol .",
    "2.1em plus 0.5em minus 0.4emieee , 2005 , pp .",
    "14821489 .",
    "e.  kazemi , h.  s  hamed , and m.  grossglauser , `` growing a graph matching from a handful of seeds , '' in _ proceedings of the vldb endowment international conference on very large data bases _ , vol .  8 , no .",
    "epfl - article-207759 , 2015 .",
    "e.  m. loiola , n.  m.  m. de  abreu , p.  o. boaventura - netto , p.  hahn , and t.  querido , `` a survey for the quadratic assignment problem , '' _",
    "european journal of operational research _ ,",
    "176 , no .  2 ,",
    "pp . 657690 , 2007 .",
    "d.  l. sussman , m.  tang , d.  e. fishkind , and c.  e. priebe , `` a consistent adjacency spectral embedding for stochastic blockmodel graphs , '' _ journal of the american statistical association _ ,",
    "499 , pp . 11191128 , 2012 .",
    "a.  athreya , v.  lyzinski , d.  j. marchette , c.  e. priebe , d.  l. sussman , and m.  tang , `` a central limit theorem for scaled eigenvectors of random dot product graphs , '' _ arxiv preprint arxiv:1305.7388 _ , 2013 .",
    "e.  segal , m.  shapira , a.  regev , d.  peer , d.  botstein , d.  koller , and n.  friedman , `` module networks : identifying regulatory modules and their condition - specific regulators from gene expression data , '' _ nature genetics _ , vol .",
    "34 , no .  2 ,",
    "pp . 166176 , 2003 .",
    "j.  kuczynski and h.  wozniakowski , `` estimating the largest eigenvalue by the power and lanczos algorithms with a random start , '' _ siam journal on matrix analysis and applications _",
    ", vol .  13 , no .  4 , pp . 10941122 , 1992 .",
    "e.  segal , m.  shapira , a.  regev , d.  peer , d.  botstein , d.  koller , and n.  friedman , `` module networks : identifying regulatory modules and their condition - specific regulators from gene expression data , '' _ nature genetics _",
    "34 , no .  2 ,",
    "pp . 166176 , 2003 .",
    "z.  bar - joseph , g.  k. gerber , t.  i. lee , n.  j. rinaldi , j.  y. yoo , f.  robert , d.  b. gordon , e.  fraenkel , t.  s. jaakkola , r.  a. young _ et  al .",
    "_ , `` computational discovery of gene modules and regulatory networks , '' _ nature biotechnology _ , vol .  21 , no .  11 , pp .",
    "13371342 , 2003 .",
    "d.  marbach , s.  roy , f.  ay , p.  e. meyer , r.  candeias , t.  kahveci , c.  a. bristow , and m.  kellis , `` predictive regulatory models in drosophila melanogaster by integrative inference of transcriptional networks , '' _ genome research _ , vol .",
    "22 , no .  7 , pp . 13341349 , 2012 .",
    "s.  a. mccarroll , c.  t. murphy , s.  zou , s.  d. pletcher , c .- s .",
    "chin , y.  n. jan , c.  kenyon , c.  i. bargmann , and h.  li , `` comparing genomic expression patterns across species identifies shared transcriptional profile in aging , '' _ nature genetics _",
    "36 , no .  2 ,",
    "pp . 197204 , 2004 .",
    "j.  o. woods , u.  m. singh - blom , j.  m. laurent , k.  l. mcgary , and e.  m. marcotte , `` prediction of gene  phenotype associations in humans , mice , and plants using phenologs , '' _ bmc bioinformatics _ , vol .",
    "14 , no .  1 ,",
    ", 2013 .",
    "j.  j. faith , b.  hayete , j.  t. thaden , i.  mogno , j.  wierzbowski , g.  cottarel , s.  kasif , j.  j. collins , and t.  s. gardner , `` large - scale mapping and validation of escherichia coli transcriptional regulation from a compendium of expression profiles , '' _ plos biology _ , vol .  5 , no .  1",
    ", 2007 .",
    "s.  roy , j.  ernst , p.  v. kharchenko , p.  kheradpour , n.  negre , m.  l. eaton , j.  m. landolin , c.  a. bristow , l.  ma , m.  f. lin _",
    "et  al . _ , `` identification of functional elements and regulatory circuits by drosophila modencode , '' _ science _",
    "330 , no . 6012 ,",
    "17871797 , 2010 .",
    "d.  j. reiss , n.  s. baliga , and r.  bonneau , `` integrated biclustering of heterogeneous genome - wide datasets for the inference of global regulatory networks , '' _ bmc bioinformatics _",
    ", vol .  7 , no .  1 , p. 280",
    ", 2006 .",
    "a.  greenfield , a.  madar , h.  ostrer , and r.  bonneau , `` dream4 : combining genetic and dynamic information to identify biological networks and dynamical models , '' _ plos one _ , vol .  5 , no .  10 , p. e13397 , 2010 .",
    "d.  marbach , j.  c. costello , r.  kffner , n.  m. vega , r.  j. prill , d.  m. camacho , k.  r. allison , m.  kellis , j.  j. collins , g.  stolovitzky _ et  al .",
    "_ , `` wisdom of crowds for robust gene network inference , '' _ nature methods _ , vol .  9 , no .  8 , pp . 796804 , 2012 .",
    "d.  marbach , r.  j. prill , t.  schaffter , c.  mattiussi , d.  floreano , and g.  stolovitzky , `` revealing strengths and weaknesses of methods for gene network inference , '' _ proceedings of the national academy of sciences _ , vol .",
    "107 , no .",
    "14 , pp . 62866291 , 2010 .",
    "r.  bonneau , d.  j. reiss , p.  shannon , m.  facciotti , l.  hood , n.  s. baliga , and v.  thorsson , `` the inferelator : an algorithm for learning parsimonious regulatory networks from systems - biology data sets de novo , '' _ genome biology _",
    ", vol .  7 , no .  5 , p. r36 , 2006 .",
    "e.  wingender , x.  chen , r.  hehl , h.  karas , i.  liebich , v.  matys , t.  meinhardt , m.  pr , i.  reuter , and f.  schacherer , `` transfac : an integrated system for gene expression regulation , '' _ nucleic acids research _ , vol .",
    "28 , no .  1",
    "316319 , 2000 .",
    "s.  m. gallo , d.  t. gerrard , d.  miner , m.  simich , b.  des  soye , c.  m. bergman , and m.  s. halfon , `` redfly v3 . 0 : toward a comprehensive database of transcriptional regulatory elements in drosophila , '' _ nucleic acids research _",
    "suppl 1 , pp .",
    "d118d123 , 2011 .",
    "m.  i. barrasa , p.  vaglio , f.  cavasino , l.  jacotot , and a.  j. walhout , `` edgedb : a transcription factor - dna interaction database for the analysis of c. elegans differential gene expression , '' _ bmc genomics _ ,",
    "8 , no .  1 , p.  21",
    ", 2007 .",
    "a.  p. boyle , c.  l. araya , c.  brdlik , p.  cayting , c.  cheng , y.  cheng , k.  gardner , l.  w. hillier , j.  janette , l.  jiang _ et  al .",
    "_ , `` comparative analysis of regulatory information and circuits across distant species , '' _ nature _ , vol .",
    "7515 , pp . 453456 , 2014 .",
    "d. thomas , v.  wood , c.  j. mungall , s.  e. lewis , j.  a. blake , g.  o. consortium _",
    "_ , `` on the use of gene ontology annotations to assess functional similarity among orthologs and paralogs : a short report , '' _ plos computational biology _",
    "8 , no .  2 , p. e1002386 , 2012 .",
    "y.  benjamini and y.  hochberg , `` controlling the false discovery rate : a practical and powerful approach to multiple testing , '' _ journal of the royal statistical society .",
    "series b ( methodological ) _ , pp . 289300 , 1995 .",
    "b.  zhou , j.  pei , and w.  luk , `` a brief survey on anonymization techniques for privacy preserving publishing of social network data , '' _ acm sigkdd explorations newsletter _ , vol .",
    "10 , no .  2 ,",
    "pp . 1222 , 2008 .",
    "m.  f. schwartz , a.  r. brecher , j.  whyte , and m.  g. klein , `` a patient registry for cognitive rehabilitation research : a strategy for balancing patients privacy rights with researchers need for access , '' _ archives of physical medicine and rehabilitation _ , vol .",
    "86 , no .  9 , pp .",
    "18071814 , 2005 ."
  ],
  "abstract_text": [
    "<S> network alignment refers to the problem of finding a bijective mapping across vertices of two graphs to maximize the number of overlapping edges and/or to minimize the number of mismatched interactions across networks . </S>",
    "<S> this problem arises in many fields such as computational biology , social sciences and computer vision and is often cast as an expensive quadratic assignment problem ( qap ) . although spectral methods have received significant attention in different network science problems such as network clustering , the use of spectral techniques in the network alignment problem has been limited partially owing to the lack of principled connections between spectral methods and relaxations of the network alignment optimization . in this paper , we propose a network alignment framework that uses an orthogonal relaxation of the underlying qap in a maximum weight bipartite matching optimization . </S>",
    "<S> our method takes into account the ellipsoidal level sets of the quadratic objective function by exploiting eigenvalues and eigenvectors of ( transformations of ) adjacency graphs . </S>",
    "<S> our framework not only can be employed to provide a theoretical justification for existing heuristic spectral network alignment methods , but it also leads to a new scalable network alignment algorithm which outperforms existing ones over various synthetic and real networks . </S>",
    "<S> moreover , we generalize the objective function of the network alignment problem to consider both matched and mismatched interactions in a standard qap formulation </S>",
    "<S> . this can be critical in applications where networks have low similarity and therefore we expect more mismatches than matches . </S>",
    "<S> we assess the effectiveness of our proposed method theoretically for certain classes of networks , through simulations over various synthetic network models , and in two real - data applications ; in comparative analysis of gene regulatory networks across human , fly and worm , and in user de - anonymization over twitter follower subgraphs . </S>"
  ]
}
{
  "article_text": [
    "many authors agree that the first suggestion of some time - parallel solution for scalar ordinary differential equation was proposed by nievergelt in 1964 and led to the so called multiple - shooting methods @xcite .",
    "a few years latter ( 1967 ) , miranker and liniger proposed a family of parallel runge kutta methods for small scale parallelism , based on the predictor - corrector method @xcite . in 1982 ,",
    "lelarasmee , ruehli and sangiovanni - vicentelli introduced the waveform relaxation methods ( wr ) in @xcite .",
    "wr is based on the decomposition of a complex system of mixed implicit equations into a system of single implicit equations .",
    "after decomposition , each implicit equation can be solved independently of the others and consequently the system can be solved in parallel in a natural way . the first implementation of some time - parallel algorithm for ode systems which takes advantage of those three methods is given by bellen and zennaro in @xcite .    in the context of almost integrable hamiltonian systems , saha , stadel and tremaine introduced , in 1997 , a parallel method for the computation of orbits for the solar system dynamics @xcite . in part ,",
    "their work is the continuation of other papers published in 1992 et 1994 about symplectic integrators and long - term planetary integration @xcite .",
    "simultaneously to saha _ et al .",
    "_ , fukushima introduced an alternative method for to obtain numerically a global solution of ode systems @xcite .",
    "his method consists in to use the picard iteration method to approximate iteratively a global solution .",
    "such solutions will be expressed in terms of chebyshev polynomials to accelerate numerical computations . between 1998 and 2000 ,",
    "erhel and rault worked on a parallel algorithm applied to the computation of satellite s trajectories @xcite . in the same approach as bellen and zennaro",
    ", they implement a multiple shooting technique but instead of the wr method they use the fixed point theory and newton iterations .",
    "they use _ automatic differentiation _",
    "@xcite in order to save time when computing the jacobians @xmath0 for the newton iterations .",
    "the parareal algorithm was introduced by lions , maday and turicini in @xcite and modified by bal and maday in @xcite .",
    "it had received with interest some years latter @xcite .",
    "this algorithm is based on a coarse - discretization predictor ( solved sequentially ) and a fine - discretization corrector ( solved in parallel ) . in the very",
    "beginning the pararreal algorithm was used to accelerate numerical solutions for parabolic and elliptic systems of pdes . however , for hyperbolic systems and highly oscillatory problems , the coarse solver can not predict the fine solution in a satisfactory way .",
    "several attempts has been tested in refinning the coarse solver @xcite and the more recent refinement is a symmetric scheme with projection due to dai , le bris , legoll and maday @xcite .",
    "this symmetric algorithm was tested for solving almost integrable hamiltonian systems with good results . however , for long - term computations of highly oscillatory systems we must to reduce the local error to the size @xmath1 , it means , to the @xmath2-machine , and this is achieved for several ( more than 10 ) iterations of the parareal scheme .    in this paper",
    "we propose a refinement of the sst97 algorithm looking for to accelerate the solution and to preserve the accuracy of the sequential integrator .",
    "in fact , our algorithm converges 100% to the sequential underlying integrator althrought the cost of the corrector step is high .",
    "our current research is about the economy of the corrector step and the first results are documented in @xcite .",
    "the method we introduce in this paper is concerned with numerical solutions of almost integrable hamiltonian systems .",
    "although the exposition will be done for hamiltonian vector fields with hamiltonian perturbing part , at this point we do not know about any restriction to apply this method to vector fields with non - hamiltonian perturbation .",
    "this method is an extension of the saha , stadel and tremaine algorithm @xcite and it is based in the multi - shooting and picard s iterative methods , as well as the theory of almost integrable hamiltonian systems .",
    "we start with the picard s iterative method for solving differential systems .",
    "let s consider the initial value problem ( ivp ) @xmath3 where @xmath4\\to\\mathbb r^m$ ] and @xmath5\\times \\mathbb r^m\\to\\mathbb r^m$ ] .    integrating both sides of ( [ eqn : sys:1 ] ) from zero to @xmath6 $ ] we obtain the system of differential equations written in its integral form @xmath7 .",
    "\\label{eqn : sys : int}\\end{aligned}\\ ] ] applying picard s iterative method , we can approximate the solution for every @xmath6 $ ] by @xmath8 .",
    "\\label{eqn : sys : iter}\\end{aligned}\\ ] ]    if @xmath9 belongs to some convex domain @xmath10 around the solution and if @xmath11 is lipchitz in @xmath12 $ ] , picard s theorem assures the convergence of its iterative method .",
    "an iteration of the picard s method approximates the solution in space and we say that it is a _ vertical _ iteration .    in order to parallelize the numerical computations , we discretize the problem by partitioning @xmath13 $ ] in @xmath14 small _ slices _ of size @xmath15 we set @xmath16 , @xmath17 and @xmath18 such that    @xmath19    then the @xmath20-th slice is @xmath21 $ ] for @xmath22 . in the same way we write @xmath23 for the value of the solution at time @xmath24 and for the approximations of the picard s method we will use the superscript @xmath25 .",
    "using this discretization we use the linearity of the integral to rewrite ( [ eqn : sys : iter ] ) like a sum of integrals in the form @xmath26 .",
    "\\label{eqn : sys : stadelt}\\end{aligned}\\ ] ]    the solution at time @xmath27 is approximated by the @xmath28-th iteration denoted by @xmath29 with partial sums @xmath30,\\quad",
    "1\\leq n\\leq n.    \\label{eqn : sys : stadeltn}\\end{aligned}\\ ] ]    developping the sums we obtain an iterative scheme for the time by @xmath31 we call the iterations in time",
    "_ horizontal _ iterations .",
    "the reader must note that , until now , all computations are exacts .",
    "the discretization just give us the way to combine vertical and horizontal iterations .",
    "since we are interested in almost integrable hamiltonian systems , we will use perturbed ivp in the form @xmath32 where @xmath33\\times \\mathbb r^m\\to\\mathbb r^m$ ] is the perturbing function with perturbing parameter @xmath34 .",
    "its integral expression is @xmath35 ,     \\label{eqn : diffsys : fegint}\\end{aligned}\\ ] ] and the bi - iterative scheme is @xmath36 for @xmath37 .",
    "this bi - iterative scheme permit us to compute the definite integral from the preceding iteration @xmath38 and to make a correction with the values of the new iteration @xmath39 .",
    "it means that the integrals can be computed in parallel with some numerical scheme and a small stepsize @xmath40 , and perform the corrections in sequence , just as in the parareal scheme .",
    "however , applying this bi - iterative scheme directly will introduce a lot of errors to mid and long term computations and it converges very slowly .",
    "seen as a _ predictor - corrector _ scheme , it corresponds to the identity map as the predictor , which produce a so far approximation .",
    "one way to boost the convergence of the method is to consider the problem of solving ( [ eqn : sys : stadel4 ] ) as a system of algebraic equations .",
    "we denote the integrals by @xmath41 and we consider @xmath42 as a fixed parameter ( it corresponds to the initial condition to the sub - problem when @xmath43 $ ] ) .",
    "then , we want to solve @xmath44 as the fixed point problem @xmath45    let @xmath46 be a solution for ( [ eqn : fix : point ] ) , then for every @xmath47 the following identity holds @xmath48 it implies that the iteration @xmath49 will converges to the solution if @xmath50 is close to @xmath51 . returning to the integral form for @xmath52 and @xmath53",
    "we obtain the iteration @xmath54 where @xmath55 , @xmath56 , @xmath57 and @xmath58 is a remainder which goes to zero when @xmath59 .    in @xcite",
    ", the authors considered @xmath60 as a second order term and their bi - iterative scheme is just @xmath61 ( expression ( 9 ) in @xcite ) .",
    "the rule ( [ eqn : asd1 ] ) define an implicit difference equation which can be solved by some iterative scheme for algebraic equations , for example the wr algorithm @xcite .",
    "however , for the case of almost integrable hamiltonian systems , there are explicit ( symplectic ) algorithms for which the numerical computation of @xmath62 has no additional cost .",
    "an almost integrable hamiltonian system in generic canonical variables has a hamiltonian function in the form @xmath63 where    * @xmath64 is the integrable term which is independent of the time , * @xmath65 is the perturbing term which can depends on @xmath66 , @xmath67 and the time @xmath68 as well , * @xmath69 is the perturbing parameter and it gives the size of the perturbation , and * @xmath70 is the number of degrees of freedom ( dof ) of the system .    if we define @xmath71 we can write the hamiltonian vector field for the almost integrable problem as @xmath72 where @xmath73{cc }      0 & i \\\\",
    "-i & 0    \\end{array }    \\right ) , \\qquad i,0 \\in m_{r}(\\mathbb r)\\end{aligned}\\ ] ] is the canonical symplectic matrix in @xmath74 and @xmath75 means the gradient with respect to @xmath76 .    from ( [ eqn : diffsys : ham ] ) we see that @xmath77    now we return to expression ( [ eqn : asd2 ] ) and we split it in @xmath66 and @xmath67 to obtain two iterative rules @xmath78 where @xmath56 , @xmath57 , @xmath79 , @xmath80 , @xmath81 and @xmath82    the most important fact obtained from these expressions is that perturbing terms depend only on the values obtained in the last iteration .",
    "this implies that we can compute them in parallel and attach those values in the sequential correction .",
    "in the rest of this work we will be interested in almost integrable systems in action - angle coordinates with separable perturbing function in the form @xmath83 in order to use symplectic integrators . with this restriction , ( [ eqn : f : g ] ) becomes @xmath84 additionally , we must separate the remainders to be computed in an independent step .",
    "the iterative scheme reduces to @xmath85 with the same notation as above .",
    "the two first steps correspond to the sst97 algorithm if we use the symplectic implicit integrator of middle point .",
    "we extend the sst97 algorithm using explicit symplectic integrators of higher order and the second order term @xmath86    we take expression ( [ eqn : f : g:1 ] ) and we separe @xmath87 as @xmath88 where the subscript @xmath89 ( respectively @xmath90 ) means that @xmath91 ( resp .",
    "@xmath92 ) is the perturbing term of the @xmath93 ( resp .",
    "@xmath94 ) equation .",
    "our `` toy '' parallel _ leapfrog _ scheme is @xmath95 which is an explicit scheme . in this case , @xmath96 the reader must note that this scheme is more expensive that the original sequential scheme . in order to have a gain on the algorithm we must concatenate several _ leapfrog _ schemes or other explicit symmetric symplectic integrators .",
    "in fact , we can see this procedure like a parallel composition method for symmetric symplectic integrators , equivalent to those used by suzuki @xcite , yoshida @xcite , mclachlan @xcite and laskar - robutel @xcite .    for simplicity , we can put together @xmath97 steps of the _ leapfrog _ scheme to get @xmath98 in this case we have @xmath99 meanning that the second order term will be computed once every @xmath97 @xmath100-steps .",
    "more complex symplectic integrators can be used instead of the _ leapfrog _ scheme like the @xmath101 or @xmath102 integrators from laskar and robutel @xcite .",
    "the original algorithm was designed by saha _",
    "et al . _ and introduced in @xcite to compute planetary orbits for solar system dynamics .",
    "the integrable part of the hamiltonian function corresponds to the keplerian orbits of the planets around the sun ( in elliptic coordinates ) and the perturbing term corresponds to the interplanetary forces ( in jacobian ccordinates ) .",
    "our algorithm uses a high - order multistep integrator where each local perturbing value must be saved and passed to the master process . in order to avoid `` bottle - necks '' in the communication",
    "it is recommended to use this algorithm in a shared memory environment .",
    "intervals of size @xmath103 in parallel .",
    "every interval @xmath103 is decomposed in smaller intervals of size @xmath100 ]    we select an explicit symmetric symplectic integrator @xmath52 , for instance , the leapfrog or any of the @xmath101 or @xmath102 integrators @xcite .",
    "we concatenate @xmath105 schemes to be compute in parallel by each thread .",
    "we define @xmath100 to be the time step of a single @xmath52 scheme and @xmath106 the interval computed in parallel .",
    "finally , we open a _ shifting parallelization window _ which contains @xmath107 intervals of size @xmath103 .",
    "@xmath107 is the number of threads or , if each thread runs on a single processor , @xmath107 becomes the number of processors in the parallel machine . after each iteration , we verify how many @xmath103 intervals have converged and we shift the window until the first non converged @xmath103 interval ( see figure [ fig : window ] ) .",
    "we denote by @xmath108 the @xmath20-th numerical value for the integrable part and by @xmath109 the corresponding @xmath20-th value for the perturbing part of the hamiltonian function .",
    "the coefficients @xmath110 and @xmath111 , @xmath112 are selected based on the symplectic underlying integrator .",
    "we show the general structure of the algorithm in the following frame    [ cols=\"<\",options=\"header \" , ]      + table 2 .",
    "spin - orbit problem : values obtained for different sizes of the + shifting parallelization window @xmath107 .",
    "the values for the parameters are + @xmath113 , @xmath114 , @xmath115 , @xmath116 , @xmath117 , @xmath118 and @xmath119 .",
    "figure [ fig : spin ] shows the data of table 2 with the fitted curves for the spin - orbit problem with parameters @xmath120 and @xmath121 .    , @xmath122 , and @xmath123 and its fitting curves with parameters @xmath120 and @xmath121 .",
    "]    [ fig : spin ]      in this subsection we find an expression for the _ speed - up _ of the algorithm with parallelization window .",
    "we call _ speed - up _ , denoted by @xmath124 , to the ratio of the time @xmath125 required to solve a given problem using the _ best known serial _ method to the time @xmath126 required to solve the same problem by a parallel algorithm using @xmath107 processors @xmath127 where @xmath14 denotes the size of the problem .",
    "we use an alternative notation inverting the parameter @xmath107 and the variable @xmath14 since we are interested in finding some expression for the speed - up @xmath128 in terms of @xmath107 .",
    "the classical notation is @xmath129 .",
    "let @xmath130 be the predictor s computing time for a @xmath103 interval and let @xmath131 be the corrector s computing time for the same interval .",
    "we suppose we have a first estimation of the solution .",
    "then , the speed - up function for the parallel @xmath101 with shifting parallelization window @xmath107 is given by @xmath132 where @xmath133 is the number of iterations to converge .",
    "this is the worst case , since with our algorithm we do not wait for ending the @xmath107 corrections .",
    "in fact , a more accurate expression is obtained substituting @xmath107 by @xmath134 . since",
    ", it is desirable to have an expression in terms of @xmath107 only we use equations ( [ eqn : cik ] ) to obtain such expression .    in what follows , we assume @xmath135 has an analytic expression equivalent to ( [ eqn : cik ] ) as in the cases for the hamiltonian pendule , the spin - orbit problem and the planetary problem ( see @xcite ) .",
    "after some simplifications and considering @xmath136 instead of @xmath107 , the formula for the speed - up becomes @xmath137 where @xmath138 expression ( [ eqn : sp ] ) does not depend on the size of the problem @xmath14 ( see figure [ fig : sp ] ) .",
    ", @xmath121 , @xmath139 and @xmath140 . ]",
    "since we have a quadratic polynomial in the denominator , we may have vertical asymptotes in its roots .",
    "we impose the condition @xmath141 for @xmath142 which implies @xmath143 .",
    "additionaly , we have that @xmath144 , @xmath145 if @xmath142 and since @xmath146 then there exists a critical point @xmath147 which maximize @xmath148 .",
    "we have the following    if the function @xmath149 has the form ( [ eqn : cik ] ) , then @xmath148 has a maximum in @xmath150 which optimize the parallel algorithm .",
    "moreover , the theoretic optimal speed - up is @xmath151    _ proof .",
    "_ we consider expression ( [ eqn : sp ] ) in the extended case @xmath152 and we obtain a differentiable function for @xmath142 such that the original problem is just the restriction @xmath153 .",
    "we procede in the classical way looking for the critical points by differentiation . since @xmath154 then the only positive critical ( in fact the maximum ) point for the extended problem is @xmath155 .",
    "we define @xmath156 & { \\rm if}\\hspace{20pt }              \\mathcal s_n([p _ * ] ) -\\mathcal s([p_*]+1)\\leq0\\\\          \\left[p_*\\right]+1 & \\hspace{25pt}{\\rm otherwise}.      \\end{array }      \\right.\\end{aligned}\\ ] ] where @xmath157 $ ] is the maximum integer function . finally , for the case where @xmath158)=\\mathcal s([p_*]+1)$ ] we know that @xmath159 $ ] is optimal then @xmath147 is well defined .    the second affirmation is obtained directly by substituting @xmath160 directly in ( [ eqn : sp ] ) .",
    "@xmath161    once we know the optimal value for @xmath147 as a function of @xmath162 , we are interested in the gain , the speed - up which we can reach with this strategy of parallelizing windows . we write the speed - up function ( [ eqn : s : max ] ) as a function of the ratio @xmath163 with parameters @xmath164 , @xmath165 and @xmath97 as @xmath166    from expression ( [ eqn : s : opt ] ) we obtain another useful result    let @xmath123 be the number of iterations needed to convergence for the parallel algorithm where @xmath123 is as in ( [ eqn : cik ] ) and the parameters @xmath164 , @xmath165 and @xmath97 are fixed for some particular problem .",
    "the speed - up of the parallel algorithm is bounded by @xmath167 [ cor:1 ]    _ proof . _",
    "take the limit for expression ( [ eqn : s : opt ] ) when @xmath168 .",
    "what we gain with this algorithm is the time computation of the perturbing terms .",
    "since we have concatenated 100 @xmath169 schemes , we have called 500 times the perturbing function in each parallel step ( 5 times in each @xmath169 ) . in the sequential correction",
    "we gain in time @xmath170 where @xmath171 is the time used in the computation of the perturbing term .",
    "however , we must call the integrable function @xmath172 times in the correction step .",
    "it means that this algorithm works in problems where @xmath173 like the spin - orbit problem .",
    "this is clear from the optimal value of the shifting window @xmath174 in expression ( [ eqn : s : opt ] ) and the fact that @xmath175 and @xmath176 .",
    "we have @xmath177    moreover , the time of one iteration for this algorithm using the @xmath102 scheme as underlying integrator is @xmath178 where @xmath97 and @xmath107 must be selected such that the following conditions are fulfilled :      the reader must note that for large values of @xmath107 or @xmath97 the algorithm might not work if @xmath181 are comparable . in those cases",
    "we have used an alternative corrector scheme to parallelize the la2010 solution ( see @xcite ) , such scheme reduces the time @xmath131 but increases the number of iterations needed to convergence ( see @xcite ) .",
    "finally , for higher dimensional hamiltonian problems as the solar system dynamics , we find that the value of @xmath97 is very restricted . some tests with the la2010 solutions @xcite accept only a maximum of @xmath182 @xmath183 schemes concatenated in a @xmath103 interval , and for @xmath184 the value of @xmath185 which is a worst case than the sequential solution .",
    "99 c. audouze , m. massot and s. volz , _ symplectic multi - time step parareal algorithms applied to molecular dynamics _ , hal-00358459 , feb 2009 .",
    "a. bellen and m. zennaro , _ parallel algorithms for initial - value problems for difference and differential equations _ , j. of comp . and appl",
    ". math . 25 : 341 - 350 , 1989 . g. bal , _ parallelization in time of ( stochastic ) ordinary differential equations _ , submitted .",
    "g. bal , _ symplectic parareal _ , lecture notes in comp .",
    "vol 60(ii ) : 401 - 408 , 2008 . g. bal and y. maday , _ a parareal time discretization for non - linear pde s with application to the pricing of an american put _ , lecture notes in comp .",
    "sci . and engin .",
    "vol 23:189 - 202 , 2002 .",
    "j. cortial and c. farhat , _ a time - parallel implicit method for accelerating the solutions of nonlinear structural dynamics problems _ , int .",
    "j. numer . meth .",
    "engng . ? ?",
    ". j. cortial and c. farhat , _ a time - parallel implicit methodology for the near - real - time solution of systems of linear oscillators _ , l. biegler , o. ghattas , m. heinkenschloss , d. keyes , and b. van bloemen wanders , eds.real-time pde - constrained optimization , springer , 2006 .",
    "x. dai , c. le bris , f. legoll and y. maday , _ symmetric parareal algorithms for hamiltonian systems _ , preprint , arxiv:1011.6222 , 2010 .",
    "j. erhel and s. rault , _ algorithme parallle pour le calcul dorbites _",
    ", technique et science informatiques .",
    "vol 19(5 ) : 649 - 673 , 2000 .",
    "c. farhat and m. chandesris , _ time decomposed parallel time - integrators i : theory and feasibility studies for fluid , structure , and fluid - structure applications _ , int",
    ". j. numer .",
    "methods eng . 58(9):1397 - 1434 , 2003 .",
    "t. fukushima , _",
    "picard iteration method , chebyshev polynomial approximation , and global numerical integration of dynamical motions _ , the astronomical journal , vol 113(5 ) : 1909 - 1914 , 1997 .",
    "t. fukushima , _ vector integration of dynamical motions by the picard - chebyshev method _ , the astronomical journal , vol 113(6 ) : 2325 - 2328 , 1997 .",
    "t. fukushima , _",
    "parallel / vector integration methods for dynamical astronomy _ , cel . mech . and",
    "astr . , 73 : 231 - 241 , 1999 .",
    "m. gastineau and j. laskar , 2010 .",
    "trip 1.1a10 , _ trip reference manual_. imcce , paris observatory .",
    "http://www.imcce.fr / trip/. m. gander and e. hairer , _ nonlinear convergence analysis for the parareal algorithm _",
    ", m. gander and s. vandewalle , _ on the superlinear and linear convergence of the parareal algorithm _ , lecture notes in comp .",
    "vol 55:291 - 298 , 2007 .",
    "a. griewank , _ on automatic differentiation _",
    ", m. iri and k. tanabe , eds .",
    "mathematical programming : recent developments and applications .",
    "kluwer acad . pub .",
    "83 - 108 , 1989 .",
    "h. jimnez - prez and j. laskar _ the parallel asd algorithm for solar system dynamics _ ,",
    "preprint , 2011 .",
    "j. laskar and p. robutel _ high order symplectic integrators for perturbed hamiltonian systems _ , celestial mechanics and dynamical astronomy 80(1 ) : 39 - 62 , 2001 .",
    "j. laskar , a. frienga , m. gastineau , h. manche , _ la2010 : a new orbital solution for the long term motion of the earth _ , astronomy & astrophysics , in press .",
    "e. lelarasmee , a. ruehli and a. sangiovanni - vincentelli , _ the waveform relaxation method for time - domain analysis of large scale integrated circuits _ , ieee trans . on comp .- aid",
    "design of int .",
    "circ . and syst",
    "cad 1(3 ) : 131 - 145 , 1982 .",
    "lions , y. maday and g. turinici , _",
    "rsolution dedp par un schma en temp `` pararel '' _ , c. r. acad .",
    "serie i analyse numrique ( 332 ) : 1 - 6 , 2001 .",
    "mclachlan , _ composition methods in the presence of small parameters _",
    ", bit 35:258 - 268 , 1995 .",
    "mclachlan , _ on the numerical integration of ordinary differential equations by symmetric composition methods _",
    ", bit 35:258 - 268 , 1995 .",
    "miranker and w. liniger , _ parallel methods for the numerical integration of ordinary differential equations _",
    ", math . comp .",
    ", 91:303 - 320 , 1967 . j. nievergelt , _ parallel methods for integrating ordinary differential equations _",
    "acm , 7(12 ) : 731 - 733 , 1964 .",
    "p. saha and s. tremaine , _ symplectic integrators for solar systems dynamics _ , the astron .",
    "vol 104(4 ) : 1633 - 1640 , 1992 .",
    "p. saha and s. tremaine , _ long - term planetary integration with individual time steps _ , the astron .",
    "vol 108(5 ) : 1962 - 1969 , 1994 .",
    "p. saha , j. stadel and s. tremaine , _ a parallel integration method for solar system dynamics _ , the astron .",
    "vol 114(1 ) : 409 - 415 , 1997 . g. staff , _ the parareal algorithm : a survey of present work _ , notur , 2003 .",
    "m. suzuki , _ fractal decomposition of exponential operators with applications to many - body theories and monte carlo simulations _ , physicletters a 146:319 - 323 , 1990 . h. yoshida , _ construction of higher order symplectic integrators _ , physics letters a 150(5,6,7):262 - 268 , 1990 ."
  ],
  "abstract_text": [
    "<S> we introduce a time - parallel algorithm for solving numerically almost integrable hamiltonian systems in action - angle coordinates . </S>",
    "<S> this algorithm is a refinement of that introduced by saha , stadel and tremaine in 1997 ( sst97 ) for the same type of problems . </S>",
    "<S> our refined algorithm has a better convergence obtained from the use of derivatives of the perturbing term not considered in the original sst97 algorithm . </S>",
    "<S> an advantage of this algorithm is its independence of the step - size for the parallelized procedures which can be consider as a particular case of the parareal scheme . </S>"
  ]
}
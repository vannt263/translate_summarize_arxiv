{
  "article_text": [
    "global optimization , computational intelligence and soft computing often use metaheuristic algorithms .",
    "these algorithms are usually nature - inspired , with multiple interacting agents .",
    "a subset of metaheuristcs are often referred to as swarm intelligence ( si ) based algorithms , and these si - based algorithms have been developed by mimicking the so - called swarm intelligence characteristics of biological agents such as birds , fish , humans and others .",
    "for example , particle swarm optimization was based on the swarming behavior of birds and fish @xcite , while the firefly algorithm was based on the flashing pattern of tropical fireflies @xcite and cuckoo search algorithm was inspired by the brood parasitism of some cuckoo species @xcite .    in the last two decades , more than a dozen new algorithms such as particle swarm optimization , differential evolution , ant and bee algorithms , bat algorithm , firefly algorithm and cuckoo search have appeared and they have shown great potential in solving tough engineering optimization problems @xcite . in this paper , we provide a first attempt to give some theoretical basis for the optimal balance of exploitation and exploration for 2d multimodal objective functions . then",
    ", we use it for choosing algorithm - dependent parameters .",
    "then , we use bat algorithm as an example to show how such optimal combination can be achieved .",
    "nature - inspired algorithms , especially those based on swarm intelligence , have become very popular in recent years .",
    "there are a few recent books which are solely dedicated to metaheuristic algorithms @xcite .",
    "metaheuristic algorithms are very diverse , and here we will provide a brief review of some commonly used metaheuristics .    ant algorithms , especially ant colony optimization @xcite , mimic the foraging behaviour of social ants , while bees - inspired algorithms use various characteristics such as waggle dance , polarization and nectar maximization are often used to simulate the allocation of the foraging bees along flower patches and thus different search regions in the search space , depending on many factors such as the nectar richness and the proximity to the bee hive @xcite . for a more comprehensive review , please refer to yang @xcite and parpinelli and lope @xcite .",
    "genetic algorithms are a class of algorithms using genetic operators such as crossover , mutation and selection of the fittest , pioneered by j. holland and his collaborators in the 1960s and 1970s @xcite . on the other hand , differential evolution ( de )",
    "was developed by r. storn and k. price by their nominal papers in 1996 and 1997 @xcite .",
    "particle swarm optimization ( pso ) was developed by kennedy and eberhart in 1995 @xcite , based on the swarm behaviour such as fish and bird schooling in nature .",
    "there are many variants which extend the standard pso algorithm @xcite .",
    "firefly algorithm ( fa ) was first developed by xin - she yang in 2007 @xcite which was based on the flashing patterns and behaviour of fireflies .",
    "firefly algorithm has attracted much attention @xcite .",
    "a discrete version of fa can efficiently solve np - hard scheduling problems @xcite , while a detailed analysis has demonstrated the efficiency of fa over a wide range of test problems , including multobjective load dispatch problems @xcite .",
    "high nonlinear and non - convex global optimization problems can be solved using firefly algorithm efficiently @xcite .",
    "cuckoo search ( cs ) is one of the latest nature - inspired metaheuristic algorithms , developed in 2009 by xin - she yang and suash deb @xcite .",
    "cs is based on the brood parasitism of some cuckoo species .",
    "furthermore , cs can be further enhanced by lvy flights @xcite .",
    "extensive studies show that cs can perform much better than pso and genetic algorithms .",
    "there have been a lot of attention and recent studies using cuckoo search with diverse range of applications @xcite .",
    "walton et al .",
    "improved the algorithm by formulating a modified cuckoo search algorithm @xcite , while yang and deb extended it to multiobjective optimization problems by yang and deb in 2011 , though the paper was published later in 2013 @xcite .",
    "the main components of any metaheuristic algorithms are : intensification and diversification , or exploitation and exploration @xcite .",
    "diversification can generate diverse , explorative solutions , and intensification provides a mechanism for exploiting local information so as to speed up convergence .",
    "in addition , selection of the best solutions often ensure the quality solution will remain in the population so as to avoid potential divergence .",
    "exploration in metaheuristics can be achieved often by the use of randomization @xcite , which enables an algorithm to have the ability to jump out of any local optimum so as to explore the search space globally .",
    "randomization often use random walks , and it can use for both local and global search , depending on the step sizes and way to generate new solutions .",
    "fine - tuning the right amount of randomness and balancing local search and global search may be essential for any algorithm to perform well .",
    "exploitation is the use of local knowledge of the search and solutions found so far so that new search moves can concentrate on the local regions or neighborhood where the optimality may be close ; however , this local optimum may not be the global optimality .",
    "exploitation tends to use strong local information such as gradients , the shape of the mode such as convexity , and the history of the search process .",
    "a classic technique is the so - called hill - climbing which uses the local gradients or derivatives intensively .",
    "empirical knowledge from observations and simulations of the convergence behaviour of common optimization algorithms suggests that exploitation tends to increase the speed of convergence , while exploration tends to decrease the convergence rate of the algorithm . on the other hand , too much exploration increases the probability of finding the global optimality , while strong exploitation tends to make the algorithm being trapped in a local optimum .",
    "therefore , there is a fine balance between the right amount of exploration and the right degree of exploitation . despite its importance",
    ", there is no practical guideline for this balance .",
    "even there is no guideline in practice , some preliminary work on the very limited cases exists in the literature and may provide some insight into the possible choice of parameters so as to balance these components .",
    "intermittent search strategies concern an iterative strategy consisting of a slow phase and a fast phase @xcite . here",
    "the slow phase is the detection phase by slowing down and intensive , static local search techniques , while the fast phase is the search without detection and can be considered as an exploration technique .",
    "for example , the static target detection with a small region of radius @xmath0 in a much larger region @xmath1 where @xmath2 can be modelled as a slow diffusive process in terms of random walks with a diffusion coefficient @xmath3 .",
    "let @xmath4 and @xmath5 be the mean times spent in intensive detection stage and the time spent in the exploration stage , respectively , in the 2d case .",
    "the diffusive search process is governed by the mean first - passage time satisfying the following equations d _",
    "r^2 t_1 + _ 0 ^ 2 [ t_2(r ) - t_1(r ) ] d+1=0 , _",
    "r t_2(r ) - [ t_2(r)-t_1(r)]+1=0 , where @xmath6 and @xmath7 are mean first - passage times during the search process , starting from slow and fast stages , respectively , and @xmath8 is the mean search speed @xcite .",
    "after some lengthy mathematical analysis , the optimal balance of these two stages can be estimated as r_optimal= .",
    "[ equ - balance ] assuming that the search steps have a uniform velocity @xmath9 at each step on average , the minimum times required for each phase can be estimated as _",
    "a^ , and _ b^ .",
    "when @xmath10 , these relationships lead to the above optimal ratio of two stages .",
    "it is worth pointing out that the above result is only valid for 2d cases , and there is no general results for higher dimensions , except in some special 3d cases @xcite .",
    "now let us use this limited results to help choose the possible values of algorithm - dependent parameters in bat algorithm @xcite , as an example .    for higher - dimensional problems , no result exists .",
    "one possible extension is to use extrapolation to get an estimate .",
    "based on the results on 2d and 3d cases @xcite , we can estimate that for any @xmath11-dimensional cases @xmath12 ~o ( ) , _",
    "m ~o ( ( ) ^d-1 ) , where @xmath13 the mean search time or average number of iterations . this extension may not be good news for higher dimensional problems , as the mean number of function evaluations to find optimal solutions can increase exponentially as the dimensions increase .",
    "however , in practice , we do not need to find the guaranteed global optimality , we may be satisfied with suboptimality , and sometimes we may be lucky to find such global optimality even with a limited / fixed number of iterations .",
    "this may indicate there is a huge gap between theoretical understanding and the observations as well as run - time behaviour in practice .",
    "more studies are highly needed to address these important issues .",
    "bat algorithm was developed by xin - she yang in 2010@xcite , which were based on the fascinating characteristics of echolocation of microbats @xcite .",
    "bat algorithm uses the following two idealized rules :    * bats fly randomly with velocity @xmath14 at position @xmath15 to search for food / prey .",
    "they emit short pulses at a rate of @xmath16 , with a varying frequency @xmath17 , wavelength @xmath18 and loudness @xmath19 . *",
    "frequency ( or wavelength ) and the rate of pulse emission @xmath20 $ ] can be adjusted , depending on the proximity of their target .",
    "loudness can vary in many ways , though a common scheme is to vary from a large ( positive ) @xmath19 to a minimum constant value @xmath21 . for simplicity ,",
    "no ray tracing is used .",
    "furthermore , the frequency @xmath22 in a range @xmath23 $ ] corresponds to a range of wavelengths @xmath24 $ ] .",
    "the positions @xmath15 and velocities @xmath14 of bat @xmath25 in a @xmath11-dimensional search space are updated as follows : f_i = f _ + ( f_-f _ ) , _ i^t+1 = _ i^t + ( _ i^t - _ * ) f_i , _ i^t+1=_i^t",
    "+ _ i^t , where the random number is drawn uniformly from @xmath26 $ ] . here",
    "@xmath27 is the current global best location ( solution ) which is located after comparing all the solutions among all the @xmath28 bats at each iteration @xmath29 .",
    "for ease of implementation , @xmath30 and @xmath31 are used , depending on the domain size of the problem of interest . at the start of the simulation , each bat is randomly initialized with a frequency in @xmath23 $ ] .    as part of local random walks ,",
    "once a solution is selected among the current best solutions , a new solution for each bat is generated by _",
    "new=_old + a^t , where @xmath32 is a random number vector drawn from @xmath33 $ ] , while @xmath34 is the average loudness of all the bats at this time step .    furthermore , for simplicity",
    ", we can also use @xmath35 and @xmath36 , assuming @xmath36 means that a bat has just found the prey and temporarily stop emitting any sound .",
    "now we have @xcite a_i^t+1=a_i^t , r_i^t= r_i^0 [ 1-(-t ) ] , [ rate - equ-50 ] where @xmath37 and @xmath38 are constants . here",
    ", @xmath37 has a similar role to that played by the cooling factor of a cooling schedule in the simulated annealing . for any @xmath39 and @xmath40",
    ", we have a_i^t 0 , r_i^t r_i^0 , t .",
    "obviously , @xmath41 can be assumed for simplicity , and in fact @xmath42 has been used in our simulations .",
    "bat algorithm has been proved to be very efficient for solving various optimization problems @xcite .",
    "if we use the 2d simple , isotropic random walks for local exploration , then we have d , where @xmath43 is the step length with a jump during a unit time interval or each iteration step . from equation ( [ equ - balance ] ) , the optimal ratio of exploitation and exploration in a special case of @xmath44 becomes 0.2 . in case of @xmath45 , we have @xmath46 which implies that more times should spend on the exploration stage .",
    "it is worth pointing out that the naive guess of 50 - 50 probability in each stage is not the best choice .",
    "more efforts should focus on the exploration so that the best solutions found by the algorithm can be globally optimal with possibly the least computing effort .    in the case studies to be described below , we have used the bat algorithm to find the optimal solutions to two design benchmarks . if we set @xmath47 as the reference timescale , then we found that the optimal ratio is between 0.18 to 0.24 , which are roughly close to the above theoretical result .",
    "this may imply that bat algorithm has an intrinsic ability of balancing exploration and exploitation close to the true optimality .",
    "let us first use a multimodal test function to see how to find the fine balance between exploration and exploitation in an algorithm for a given task",
    ". a standing - wave test function can be a good example @xcite f()=1 + \\{- 2 } _",
    "i=1^d ^2 x_i , which is multimodal with many local peaks and valleys .",
    "it has a unique global minimum at @xmath30 at @xmath48 in the domain @xmath49 where @xmath50 and @xmath51 . in this case",
    ", we can estimate that @xmath52 and @xmath53 , this means that @xmath54 , and we have in the case of @xmath55 p_e _ optimal 0.19 .",
    "this indicate that the algorithm should spend 80% of its computational effort on global explorative search , and 20% of its effort on local intensive search .    for the bat algorithm ,",
    "we have used @xmath56 and @xmath57 iterations .",
    "we have calculated the fraction of iterations / function evaluations for exploitation to exploration , that is @xmath58 exploitation / exploration , thus @xmath59 can thus affect the solution quality . a set of 25 numerical experiments have been carried out for each value of @xmath59 and the results are summarized in table 1 .",
    ".variations of @xmath59 and its effect on the solution quality . [ cols=\"<,<,<,<,<,<,<,<,<\",options=\"header \" , ]      in engineering optimization , a well - known design benchmark is the spring design problem with three design variables : the wire diameter @xmath60 , the mean coil diameter @xmath11 , and the length ( or number of coils ) @xmath61 . for detailed description",
    ", please refer to earlier studies @xcite .",
    "this problem can be written compactly as f()=(l+2 ) w^2 d , subject to    lll g_1 ( ) = 1- 0 , +   + g_2 ( ) = 1- 0 , +   + g_3 ( ) = -1 0 , +   + g_4()= + -1 0 ,    with the following limits 0.05 w 2.0 , 0.25 d 1.3 , 2.0 l 15.0 .    using bat algorithm ,",
    "we have obtained f_*=0.012665 ( 0.051690 , 0.356750 , 11.287126 ) .",
    "the welded beam design is another well - known benchmark @xcite .",
    "the problem has four design variables : the width @xmath60 and length @xmath61 of the welded area , the depth @xmath62 and thickness @xmath62 of the main beam .",
    "the objective is to minimise the overall fabrication cost , under the appropriate constraints of shear stress @xmath63 , bending stress @xmath64 , buckling load @xmath65 and maximum end deflection @xmath66 .",
    "the problem can be written as f()=1.10471 w^2 l + 0.04811 d h ( 14.0+l ) , subject to    lll g_1()=w -h 0 , + g_2 ( ) =( ) - 0.25 0 , + g_3()=()-13,600 0 , + g_4()=()-30,000 0 , + g_5()=0.10471 w^2 + 0.04811 h d ( 14+l ) -5.0 0 , +",
    "g_6()=0.125 - w 0 , + g_7()=6000 - p ( ) 0 ,    where    ll ( ) = , & q=6000 ( 14 + ) , +   + d= , &",
    "j= w l [ + ] , +   + = , & = , +   + = , & ( ) = , +   + p=0.61423 10 ^ 6 ( 1- ) . &",
    "the simple bounds for design variables are @xmath67 and @xmath68 .    using our bat algorithm ,",
    "we have obtained @xmath69 = ( 0.20572963978 , 3.47048866563 , 9.03662391036 , 0.20572963979 ) , which gives the optimal solution f ( ) _ = 1.724852308598 .",
    "nature - inspired metaheuristic algorithms have gained popularity , which is partly due to its ability of dealing with nonlinear global optimization problems .",
    "we have highlighted the importance of exploitation and exploration and their effect on the efficiency of an algorithm .",
    "then , we use the intermittent search strategy theory as a preliminary basis for analyzing these key components and ways to find the possibly optimal settings for algorithm - dependent parameters .    in addition , we have used the bat algorithm to find this optimal balance , and confirmed that bat algorithm can indeed provide a good balance of exploitation and exploration .",
    "we have also shown that bat algorithm requires far fewer function evaluations .",
    "however , the huge differences between intermittent search theory and the behaviour of metaheuristics in practice also suggest there is still a huge gap between our understanding of algorithms and the actual behaviour of metaheuristics .",
    "it is highly desirable to carry out more research in this area .",
    "apostolopoulos , t. and vlachos , a. , ( 2011 ) .",
    "application of the firefly algorithm for solving the economic emissions load dispatch problem , international journal of combinatorics , volume 2011 .",
    "o. bnichou , c. loverdo , m. moreau and r. voituriez , two - dimensional intermittent search processes : an alternative to lvy flight strategies , _ phys .",
    "_ , e*74 * , 020102(r ) , ( 2006 ) .",
    "a. h. gandomi , x. s. yang , and a. h. alavi , cuckoo search algorithm : a metaheuristic approach to solve structural optimization problems , _ engineering with computers _ , * 27 * , article doi 10.1007/s00366 - 011 - 0241-y , ( 2011 ) .",
    "a. h. gandomi , x. s. yang , s. talatahari , s. deb , ( 2012 ) .",
    "coupled eagle strategy and differential evolution for unconstrained and constrained global optimization , _ computers & mathematics with applications _ , * 63*(1 ) , 191 - 200 .",
    "a. h. gandomi , g. j. yun , x. s. yang , s. talatahari , chaos - enhanced accelerated particle swarm optimization , _ communications in nonlinear science and numerical simulation _ , * 18*(2 ) , pp .",
    "327340 ( 2013 ) .",
    "r. kolisch and a. sprecher , psplib - a project scdeluing problem library , or software - orsep ( operations research software exchange prorgam ) by h. w. hamacher , _ euro .",
    "_ , * 96 * , 205 - 216 ( 1996 ) .",
    "m. k. sayadi , r. ramezanian and n. ghaffari - nasab , a discrete firefly meta - heuristic with local search for makespan minimization in permutation flow shop scheduling problems , int . j. of industrial engineering computations , * 1 * , 110 ( 2010 ) .",
    "x. s. yang , engineering optimization via nature - inspired virtual bee algorithms . in : _ artificial intelligence and knowledge engineering applications : a bioinspired approach _ , lecture notes in computer science ,",
    "springer berlin / heidelberg , * 3562 * , pp .",
    "317 - 323 ( 2005 ) .",
    "x. s. yang , firefly algorithms for multimodal optimisation , _ proc .",
    "5th symposium on stochastic algorithms , foundations and applications _ ,",
    "watanabe and t. zeugmann ) , lecture notes in computer science , 5792 : 169 - 178 ( 2009 ) .",
    "x. s. yang and s. deb , eagle strategy using lvy walk and firefly algorithms for stochastic optimization , in : _ nature inspired cooperative strategies for optimization ( nicso2010 ) _ , studies in computational intelligence , vol .",
    "284 , springer , berlin , pp .",
    "101 - 111 ( 2010 ) .",
    "x. s. yang , swarm - based metaheuristic algorithms and no - free - lunch theorems , in : _ theory and new applications of swarm intelligence _",
    "r. parpinelli and h. s. lopes ) , intech open science , pp . 1 - 16 ( 2012 ) ."
  ],
  "abstract_text": [
    "<S> the efficiency of any metaheuristic algorithm largely depends on the way of balancing local intensive exploitation and global diverse exploration . </S>",
    "<S> studies show that bat algorithm can provide a good balance between these two key components with superior efficiency . in this paper , we first review some commonly used metaheuristic algorithms , and then compare the performance of bat algorithm with the so - called intermittent search strategy . from simulations , we found that bat algorithm is better than the optimal intermittent search strategy . </S>",
    "<S> we also analyse the comparison results and their implications for higher dimensional optimization problems . in addition </S>",
    "<S> , we also apply bat algorithm in solving business optimization and engineering design problems .    </S>",
    "<S> * citation details : * x. s. yang , s. deb , s. fong , bat algorithm is better than intermittent search strategy , _ multiple - valued logic and soft computing _ , 22 ( 3 ) , 223 - 237 ( 2014 ) . </S>"
  ]
}
{
  "article_text": [
    "when developing complex astrophysical codes , we often start with a simple hydrodynamics engine . this",
    "is designed to numerically solve the euler equations of pure hydrodynamics , which  in conservative form  can be written as : @xmath1 where @xmath2 is the vector of state quantities we wish to evolve in time , and the flux vectors @xmath3 , @xmath4 and @xmath5 contain their respective fluxes in the three spatial ( cartesian ) dimensions .",
    "a popular approach for solving these equations numerically is the reconstruct - solve - average ( rsa ) strategy ( a term coined by * ? ? ?",
    "we start by dividing our space into a 3d grids of ` cells ' , and then we discretise the initial data by storing only the cell - volume averages of the state quantities at every cell centre .",
    "each timestep then comprises three stages .",
    "first , we _ reconstruct _ this discretised data to estimate the value of the state quantities on either side of each cell face , thus defining  in effect  a series of ` riemann problems . '",
    "next , we _ solve _ each of these problems independently using a riemann solver algorithm , which determines the fluxes of the state quantities through each cell face .",
    "finally , we use these inter - cell fluxes to determine the new cell - averaged state quantities .",
    "these three stages are repeated until the desired amount of ` time ' has been simulated .",
    "this strategy is often combined with dimensional splitting",
    "( ds ) , where the 3d grid is split into several independent 1d problems and each timestep then becomes a series of ` directional passes ' . in each of these passes , all of the rows in a given direction",
    "are evolved according to the rsa strategy above .",
    "however , we only deal with the cell faces which are perpendicular to the direction of the pass : the @xmath6-direction pass determines the flux vector @xmath3 through all the @xmath7 constant faces , while the @xmath8- and @xmath9- direction passes determine @xmath4 and @xmath5 through the @xmath10 constant and @xmath11 constant faces respectively .",
    "the popularity of this approach is due to its many advantages : the timestep is not as constricted by stability conditions as with a fully multi - dimensional code ; it is simple to upgrade an existing 1d code to more dimensions in this way ; the rows in each pass can be evolved independently , which means the code can be easily parallelised ; it has been shown that the accuracy of the 1d code can be preserved by alternating the order of the passes @xcite .",
    "once this hydrodynamics engine is in place , it can be improved by adding other physical phenomena ( such as viscosity , self - gravity or a realistic equation of state ) , and more sophisticated computational features ( such as parallelisation and adaptive / non - uniform grids ) . this is generally an effective way to develop code , but can cause difficulties if we then need to modify the underlying engine  for example , when adding the effects of magnetic fields .",
    "the dynamics of a fluid in a magnetic field are governed by the equations of magnetohydrodynamics ( mhd ) , which combine the euler equations with maxwell s equations of electromagnetics . although these equations can be written in the same form as eq .",
    "( [ eqn : conservationlaw ] ) , they can not be easily incorporated into ds - rsa codes because of the need to maintain the divergence - free condition : @xmath12 ignoring this condition in numerical simulations can result in unwanted effects , such as the creation of unphysical forces parallel to the magnetic field , and the loss of conservation of momentum and energy @xcite .",
    "there are several families of algorithms for maintaining this condition ( which are summarised in e.g. * ? ? ?",
    "* ) . in this paper",
    ", we focus on the constrained transport ( ct ) family , where the magnetic field quantities are discretised in such a way that @xmath13 does not change in time analytically ( to machine error ) .",
    "we then simply choose initial conditions such that @xmath0 .",
    "many ct algorithms have been developed ( such as * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "* ) , but these are often dimensionally unsplit and/or require a ` staggered ' grid : the fluid quantities are stored as volume - averages at cell centres , while the magnetic field quantities are stored as _",
    "surface_-averages at cell _ faces_.",
    "this is not troublesome for researchers intending to develop new codes from scratch , but is less than ideal for those working on mature codes as described above . even implementing the non - staggered algorithm suggested in @xcite  which was modified from the algorithm of @xcite ",
    "would require considerable restructuring of the underlying hydrodynamics engine . instead , a preferable algorithm is one that minimises the need for such restructuring . in this paper , we show that one can be developed by reframing tth s approach so that it is more compatible with a dimensionally - split framework . by doing so , we aim to considerably simplify the development required to add the mhd equations to mature astrophysical codes .",
    "in  2 we describe some practical details , including notation , units and the formulation of the mhd equations used . in ",
    "3 we summarise the balsara - spicer - tth algorithm for maintaining the divergence - free condition , while in  4 we derive our ` more ' dimensionally - split version . readers who are only interested in the final algorithm may skip ahead to  5 , where we include a clear step - by - step guide to implementing it .",
    "( additionally , illustrative source code has been made available online  which was designed to be as easy as possible to be read  in order to aid understanding of the algorithm . ) finally , in  6 we demonstrate its accuracy with several well - known mhd tests .",
    "we model cartesian space in the domain @xmath14 .",
    "we divide this space into @xmath15 ` cells ' in the usual way , each of volume @xmath16 , such that @xmath17 , etc .",
    "( we assume that the cell sizes are constant and uniform , but it is simple to extend our algorithm to adaptive / non - uniform grids . ) the position of each cell centre is labelled as @xmath18 , where @xmath19 , etc .",
    "we also refer to the faces and edges of cells , using starred notation @xmath20 .",
    "a face will therefore have one starred co - ordinate , e.g. @xmath21 , while an edge will have two , e.g. @xmath22 . a typical cell , face and edge",
    "are depicted in fig .",
    "[ img : cell ] .",
    "finally , we discretise time such that @xmath23 .",
    "the timestep @xmath24 can change with time , but must always satisfy the courant - friedrich - lewy ( cfl ) stability condition .    .",
    "the orange face is labelled @xmath21 , where @xmath20 , because it is located @xmath25 away from the cell centre . using similar reasoning , the red edge is labelled @xmath26 .",
    "( see  [ sec : discretisation ] for details . ) ]    to avoid excessive indices , we only write down spatial co - ordinates that _ differ _ from @xmath18 .",
    "for example , the face - average @xmath27 will be abbrievated to @xmath28 .",
    "the reader should therefore assume that there are always three spatial co - ordinates , even if all three are not explicitly written down .",
    "when there is no change from @xmath18 we use @xmath29 , such that @xmath30 is abbrievated to @xmath31 .",
    "similarly , we do not use subscripts to denote components of discretised values .",
    "for example : the cell average of the @xmath6-component of the magnetic field will be written as @xmath32 , not @xmath33 .",
    "a summary of the non - standard notation used throughout this paper is provided in table [ tbl : notationsummary ] .",
    ".a summary of the non - standard notation used throughout this paper .",
    "[ sec : discretisation ] for more details . [ cols=\"<,<\",options=\"header \" , ]      once all three passes have been completed , we simply need to perform the following operation : @xmath34 and similarly for @xmath35 and @xmath36 to update the magnetic field .",
    "there are some additional subleties associated with this , regarding the pressure and energy ( which depend on the magnetic field ) , and these are described in the next section .      1 .",
    "_ reduced storage of information .",
    "_ we have minimised the amount of information that needs to be stored during the directional passes .",
    "instead of storing the individual inter - cell fluxes and electric field components ( which requires twelve 3d arrays ) , we only store the change in the magnetic field quantities ( which requires just three ) .",
    "2 .   _ reduced processing between sets of directional passes .",
    "_ we have also minimised the number of operations required between complete sets of directional passes : we only need to perform the simple calculation given in eq .",
    "( [ eqn : magfieldupdate ] ) .",
    "3 .   _ no staggered grids . _ furthermore , the three arrays we require store only _ cell_-averaged values , which means we no longer need to store any information on the cell faces .",
    "this simplifies the use of adaptive and non - uniform grids .",
    "_ simplified parallelisation . _",
    "the modified algorithm is more easily parallelisable .",
    "for example , assume that we have a number of processors , each independently evolving some rows in a given directional pass .",
    "each of these processors should have a copy of the @xmath37 array , which are updated as described above . then , because these all contain _ changes _ in the magnetic field quantities , we only require a simple ` collect'-style operation to sum over all of these copies and obtain the total change before completing eq .",
    "( [ eqn : magfieldupdate ] ) .",
    "_ dimensionally - split framework .",
    "_ finally , because this algorithm is more compatible with the dimensionally - split framework , it is considerably simpler to include in existing dimensionally - split hydrodynamics codes .",
    "we will now describe the complete algorithm for each timestep . note that we require the following sets of arrays :    1 .",
    "@xmath38 : the 3d arrays which store the cell - averaged state quantities as listed in eq .",
    "( [ eqn : statevector ] ) .",
    "@xmath39 : the 1d arrays which are used to store 1d rows extracted from the full 3d grid .    additionally , we require two more sets of arrays for the magnetic field quantities :    1 .",
    "@xmath40 : used to store a copy of the cell - averaged magnetic field quantities at the start of each timestep .",
    "@xmath41 : used to store the change in the cell - averaged magnetic field quantities during each timestep .      1 .",
    "_ make a copy of the magnetic field quantities .",
    "_ copy the three @xmath42 arrays that store the cell - averaged magnetic field quantities into the corresponding @xmath43 arrays .",
    "these copies should not be modified during the directional passes .      1 .",
    "_ extract a 1d row .",
    "_ choose an @xmath6-direction row from the grid , which is defined as having fixed @xmath44 and @xmath45 indices .",
    "extract the cell - averaged state quantities along this row from the @xmath42 arrays , and store them in the corresponding @xmath46 arrays",
    "reconstruct the cell - averaged data .",
    "_ for each @xmath46 array , interpolate the cell - averaged data to obtain left and right states at each cell interface @xmath47",
    ". these will be input states for riemann problems .",
    "for the tests in this paper , we use the tvd scheme of ( * ? ? ?",
    "* @xmath48 ) , which includes a steepening algorithm .",
    "however , a popular alternative is the piecewise parabolic method of @xcite , an mhd version of which is summarised in  4.2.3 of ( * ? ? ?",
    "* @xmath49 ) .",
    "3 .   find the inter - cell fluxes .",
    "solve the riemann problem at each cell interface , to obtain the inter - cell flux for each state variable .",
    "we use the multi - state hlld approximate riemann solver of ( * ? ? ?",
    "* @xmath49 ) . in the @xmath6-direction",
    "pass  should be uniform and constant in time .",
    "this automatically satisfies the divergence - free condition .",
    "the reconstruction and solver algorithms we use were designed for such 1d systems , which means that the former does not find left and right states for this parallel component in step ( c ) , while the latter assumes it is constant across the cell interface in step ( d ) .",
    "this is not an issue when using staggered grids , because this constant value is stored explicitly at the cell interface .",
    "however , this is clearly not the case for non - staggered grids , which means we must interpolate this parallel component to get its value across the interface .",
    "our tests have shown that a simple linear interpolation is sufficient , for example : @xmath50/2 $ ] . ]",
    "_ update the state variables . _ using the inter - cell fluxes @xmath51 which were determined in step ( d ) , update the cell averages stored in @xmath46 using eq .",
    "( [ eqn : rsasteps ] ) .",
    "note that this should be done for the magnetic field quantities as well .",
    "this is because we require the _ gas _ pressure @xmath52 when we return to the earlier steps . however , recall that we only store the total pressure @xmath53 , so we need to calculate it by subtracting the magnetic pressure @xmath54 ( i.e.@xmath55 ) , which is in turn determined by the magnetic field quantities .",
    "hence , in cases where @xmath56 , not updating the magnetic field components can result in negative pressures .",
    "this issue is discussed further in @xcite . ]",
    "_ return the 1d row .",
    "_ return the new cell averages stored in the @xmath46 arrays to the @xmath42 arrays ( again , including magnetic field quantities ) .",
    "_ complete the @xmath6-direction pass : _ repeat steps ( b ) to ( f ) for each 1d row in the @xmath6-direction ( that is , for all fixed @xmath57 ) .      1 .",
    "_ complete all passes : _ repeat the equivalents of steps ( b ) to ( g ) for the @xmath8- and @xmath9- directions .",
    "remember to extract and return the velocity and magnetic field components in the usual dimensionally - split manner , as described in table [ tbl : dimsplit ] .",
    "also note that in some code implementations , the order of the passes is alternated between timesteps to preserve the accuracy of the 1d method .",
    "after all of the above steps have been completed , the fluid quantities will be fully evolved to the next timestep .",
    "we will also have three versions of the magnetic field quantities : their values at the start of the timestep ( stored in @xmath43 ) , their ( correct ) change during the timestep as determined by the constrained transport algorithm ( stored in @xmath37 ) , and their values as evolved  incorrectly  through the standard rsa strategy ( stored in the @xmath42 arrays corresponding to the magnetic field quantities ) .",
    "then the final steps are :    1 .",
    "_ correct the energy and pressure ( i ) .",
    "_ this is an optional step .",
    "we use the magnetic field quantities stored in the @xmath42 arrays to calculate the magnetic field pressure @xmath54 ( using @xmath58 ) .",
    "we then subtract this contribution from the newly evolved values of the total energy ( using the equation of state defined in eq .",
    "( [ eqn : equationofstate ] ) as a guide ) and the total pressure .",
    "2 .   _ update the magnetic field_. we replace the magnetic field quantities stored in the @xmath42 arrays with @xmath43 + @xmath37 ( in other words , their value at the start of the timestep , plus their _ correct _ change in value during the timestep , according to the constrained transport algorithm ) .",
    "consequently , the stored magnetic field quantities now maintain the divergence - free condition .",
    "3 .   _ correct the energy and pressure ( ii ) . _",
    "if step ( i ) was completed : use these new magnetic field quantities to recalculate the magnetic pressure and add this back to the total energy and total pressure .",
    "this correction means that energy may not be conserved entirely ( as discussed in * ? ? ?",
    "* ) , but avoids negative pressures if @xmath56 , as described in footnote [ ftn : gaspressure ] .",
    "to illustrate the accuracy of the modified algorithm , we now present the results of four standard mhd tests .",
    "all results were obtained using the second - order tvd reconstruction of @xcite , and the hlld riemann solver of @xcite . also note that we use units of @xmath59 , except for the circularly - polarised alfvn waves , which use @xmath49 .",
    "the test of circularly polarised alfvn waves were first described by @xcite .",
    "such waves are smooth , analytic , non - linear solutions of the mhd equations , which makes them ideal for testing the implementation of these equations .",
    "the version implemented is sinusoidal and uses a periodic domain that can fit exactly one wavelength .",
    "we test two versions : a travelling wave , where the wave returns to its original position at integer multiples of the period ( which is equal to 1 in this case ) , and a standing wave , where it stays at its original position .",
    "we use the initial conditions described in @xcite .",
    "we start by defining a rotated coordinate system , @xmath60 and @xmath61 .",
    "these are rotated by an angle @xmath62 from the cartesian @xmath6 and @xmath8 ( and hence our discretised grid ) such that : @xmath63 we then define the velocity and magnetic field components along these axes : @xmath64 for travelling waves and @xmath65 for standing waves ; @xmath66 ; @xmath67 .",
    "we then have :    1 .   _",
    "space and time .",
    "_ domain : @xmath68 , @xmath69 ; number of cells : varying from @xmath70 to @xmath71 ; total time @xmath72 .",
    "2 .   _ fluid quantities . _ across the entire grid : mass density @xmath73 ; gas pressure @xmath74 ; @xmath6-velocity @xmath75 ; @xmath8-velocity @xmath76 ; @xmath9-velocity @xmath77 ; adiabatic index @xmath78 .",
    "3 .   _ magnetic field quantities . _ the magnetic field is set up equivalently to the velocity . across the entire grid : @xmath79 ; @xmath80 ; @xmath81 .",
    "the results for both the travelling and standing waves at time @xmath72 are shown in fig .",
    "[ fig : alfven - results ] , and can be compared with figs . 8 and 9 in @xcite .",
    "note that we plot @xmath82 , which can be determined from @xmath83 and @xmath84 using eq .",
    "( [ eqn : coordinatechange ] ) .",
    "we include reference plots , which are simply the initial conditions on a grid with 128@xmath85128 cells .",
    "this was designed as a difficult test  especially at low resolutions  so the results do not coincide exactly with the expected analytic solution .",
    "however , they are comparable with results from other algorithms , as presented in @xcite",
    ". it may also be possible to improve them with the use of a higher - order reconstruction .",
    "the blast problem is initialised as a small disk of high - pressure fluid in the centre of the grid , which then expands rapidly into the low - pressure ambient fluid . as pointed out by @xcite ,",
    "it is not necessarily useful for testing whether the magnetic field is divergence free : the conditions are such that the build - up of non - zero @xmath13 will not have a major effect on the overall dynamics .",
    "however , it is useful for testing the propagation of strong mhd shocks in multiple dimensions @xcite .",
    "we use the initial conditions described in @xcite ( which were in turn taken from * ? ? ?",
    "* ) :    1 .   _",
    "space and time .",
    "_ domain : @xmath86 ; @xmath87 ; number of cells : 300 @xmath85 450 ; total time @xmath88 .",
    "2 .   _ fluid quantities .",
    "_ across the entire grid : mass density @xmath73 ; velocity @xmath89 ; adiabatic index @xmath78 .",
    "the gas pressure is set to @xmath90 within a radius @xmath91 in the centre of the grid , and @xmath74 everywhere else .",
    "3 .   _ magnetic field quantities . _ across the entire grid : @xmath92 ; @xmath93 .",
    "the mass density , thermal pressure and magnetic pressure at time @xmath88 are shown in fig .",
    "[ fig : blast - results ] , and can be compared with fig . 28 in @xcite .",
    "the results are as expected : the blast  which would otherwise be circular - has aligned itself with the magnetic field .",
    "the near - perfect @xmath94-rotational symmetry of the results are also of note .",
    "the orszag - tang vortex is another commonly - used 2d mhd test , which starts with smooth initial data but becomes progressively more complex @xcite .",
    "the expected symmetry of the solution is useful for showing that the dimensionally - split algorithm ( which uses the same code for each dimensional pass , but just extracts and returns the rows differently ) works and has been implemented correctly .",
    "we use the initial conditions described in @xcite ( which were in turn taken from * ? ? ?",
    "* ) .    1 .   _ space and time .",
    "_ domain : @xmath95 ; number of cells : @xmath96 ; total time @xmath97 .",
    "fluid quantities .",
    "_ across the entire grid : mass density @xmath98 ; pressure @xmath99 ; @xmath6-velocity @xmath100 ; @xmath8-velocity @xmath101 ; @xmath9-velocity @xmath102 ; adiabatic index @xmath78 .",
    "3 .   _ magnetic field quantities . _ across the entire grid : @xmath103 ; @xmath104 ; @xmath105 .    the mass density , thermal pressure and magnetic pressure at time @xmath97",
    "are shown in fig .",
    "[ fig : orszag - results ] , and can be compared with fig . 22 in @xcite .",
    "the mass density can also be compared with fig .",
    "16 in @xcite or fig . 14 in @xcite .",
    "the @xmath94-rotational symmetry of the results implies that our dimensionally - split approach is effective .      finally , we consider the rotor problem , first proposed in its current form by @xcite .",
    "this involves placing a rotating disk in the centre of a square domain , which creates rotational discontinuities and propagates alfvn waves into the ambient fluid .",
    "the magnetic field is initialised such that it wraps around the rotor , squeezing the fluid from its original circular form .",
    "this problem is very useful for testing whether the magnetic field is divergence free , because the build - up of non - zero @xmath0 greatly influences the dynamics .",
    "we use the initial conditions described in @xcite .",
    "however , as noted by @xcite , the results they present are ( erroneously ) from a different set of conditions .",
    "we stick to what is described in the text , and compare our results with the correct results presented in other papers .",
    "we define the radius of the rotor in the centre of the grid as @xmath106 .",
    "this is separated from the ambient fluid by a taper , @xmath107 .",
    "we also define @xmath108 , and a constant @xmath109 ( which is used for the taper ) .",
    "then :    1 .   _",
    "space and time .",
    "_ domain : @xmath110 ; number of cells : @xmath111 ; total time @xmath112 .",
    "2 .   _ fluid quantities . _ the ambient fluid : mass density @xmath73 ; pressure @xmath113 ; velocity @xmath89 ; adiabatic index @xmath114 .",
    "the rotor is defined within a radius @xmath91 : mass density @xmath115 ; @xmath6-velocity @xmath116 ; @xmath8-velocity @xmath117 .",
    "the taper is defined within the band @xmath118 : mass density @xmath119 ; @xmath6-velocity @xmath120 ; @xmath8-velocity @xmath121 .",
    "3 .   _ magnetic field quantities . _ across the entire grid : @xmath122 ; @xmath123 .",
    "the mass density , thermal pressure and magnetic pressure at time @xmath112 are shown in fig .",
    "[ fig : rotor - results ] .",
    "in each plot , there are thirty equally - spaced contours between the highest and lowest values .",
    "these results can be compared with fig .",
    "18 of @xcite or fig .",
    "25 of @xcite , and imply that the magnetic field is divergence free .",
    "again , it is worth noting the @xmath94-rotational symmetry of the results .",
    "we have presented a partially dimensionally - split algorithm for numerically solving the equations of mhd .",
    "this was done by reformulating the algorithm of @xcite and @xcite .",
    "it is based on the standard reconstruct - solve - average strategy ( using a riemann solver ) , and relies on constrained transport to ensure the magnetic field remains divergence free ( @xmath0 ) .",
    "the dimensionally - split approach , while not necessarily as accurate as the detailed unsplit algorithm described by @xcite , comes with many implementational advantages over their approach , and even the balsara - spicer - tth algorithm : the information that needs to be stored during the directional passes is minimised ; the processing required between complete sets of three directional passes is minimised ; the need for staggered grids has been completely eliminated ( simplifying the use of adapative and non - uniform grids ) ; the algorithm is more easily parallelisable .",
    "all of these advantages also make the addition of this algorithm to existing dimensionally - split codes much simpler .",
    "this makes it particularly useful for mature astrophysical codes , which often model more complicated physical effects on top of an underlying hydrodynamics engine and so can not be restructured easily .",
    "we included a complete description of the implementation , and illustrative source code will be made freely available soon .",
    "finally , we demonstrated the accuracy of the algorithm with several common mhd test problems .",
    "this research was supported by the engineering and physical sciences research council , and has made use of the resources provided by the edinburgh compute and data facility ( ecdf ) .",
    "we would also like to thank sam falle at the university of leeds for his comments ."
  ],
  "abstract_text": [
    "<S> we modify an existing magnetohydrodynamics algorithm to make it more compatible with a dimensionally - split ( ds ) framework . </S>",
    "<S> it is based on the standard reconstruct - solve - average strategy ( using a riemann solver ) , and relies on constrained transport to ensure that the magnetic field remains divergence - free ( @xmath0 ) . </S>",
    "<S> the ds approach , combined with the use of a single , cell - centred grid ( for both the fluid quantities and the magnetic field ) , means that the algorithm can be easily added to existing ds hydrodynamics codes . </S>",
    "<S> this makes it particularly useful for mature astrophysical codes , which often model more complicated physical effects on top of an underlying ds hydrodynamics engine , and therefore can not be restructured easily . </S>",
    "<S> several test problems have been included to demonstrate the accuracy of the algorithm , and illustrative source code has been made freely available online .    </S>",
    "<S> [ firstpage ]    mhd  methods : numerical  magnetic fields </S>"
  ]
}
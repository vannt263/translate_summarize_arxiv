{
  "article_text": [
    "the damped least squares is a simple but effective analytical manipulation that helps to avoid singularity in practical minimization and control algorithms .",
    "it is also known as levenberg - marquardt method levenberg:1944 . in order to illustrate the idea in simple terms ,",
    "let us consider the minimization problem @xmath0where @xmath1 @xmath2 is a given vector , the notation @xmath3 indicates the euclidean norm in @xmath4 , @xmath5 is typically a jacobian matrix of @xmath6 rows and @xmath7 columns , and @xmath8 is an unknown minimization vector .",
    "although a formal solution of this problem is given by @xmath9 , the matrix product @xmath10 may appear to be singular so that no unique solution is possible .",
    "this fact usually points to multiple possibilities of achieving the same result unless specific conditions are imposed on the vector @xmath11 .",
    "the idea of damped least squares is to avoid such conditioning by adding one more quadratic form to the left hand side of expression ( [ p0 ] ) as follows@xmath12where @xmath13 is a positive scalar number , which is often called _ damping constant _ ; note that the term ` damping ' has no relation to the physical damping or energy dissipation effects in vibrating systems usually characterized by _",
    "damping ratios_.    now the inverse matrix includes the damping constant @xmath13 which can provide the uniqueness of solution given by    @xmath14    where @xmath15 is @xmath16 identity matrix .",
    "different arguments are discussed in the literature regarding the use of damped least squares and best choice for the damping parameter @xmath13 @xcite , @xcite , @xcite , chung:2000 , @xcite , @xcite , @xcite , hattori:2003 , @xcite , @xcite , nakamura:1986jdsmc , @xcite , @xcite .",
    "in particular , it was noticed that the parameter @xmath13 may affect convergence properties of the corresponding algorithms .",
    "the parameter @xmath17 can be used also for other reason such as shifting the solution @xmath18 into desired area in @xmath19 .  in this case , the meaning of @xmath17 is rather close to that of lagrangian multiplier imposing constraints on control inputs .    in case of dynamical systems ,",
    "when all the quantities in ( [ p ] ) may depend on time , a continuous time analogue of ( [ p ] ) can be written in the integral form@xmath20where the interval of integration is manipulated as needed , for instance , @xmath21 can be equal to sampling time of the controller @xcite .",
    "however , in the present work , a discrete time algorithm based on the damped least squares solution ( [ du ] ) , which is used locally at every sample time @xmath22 , is introduced .",
    "such algorithm appears to be essentially discrete namely using different time step @xmath23 may lead to different results .",
    "nevertheless , if the parameters @xmath13 and @xmath23 are coupled by some condition then the control input and system response show no significant dependence on the time step .",
    "a motivation for the present work is as follows . in order to comply with the standard tool of dynamical systems dealing with differential equations ,",
    "the methods of control are often formulated in continuous time by silently assuming that a discrete time analogous is easy to obtain one way or another whenever it is needed for practical reasons .",
    "for instance , data acquisition cards and on - board computers of ground vehicles usually acquire and process data once per 0.01 sec .",
    "typically , based on the information , which is known about the system dynamic states and control inputs by the time instance @xmath24 , the computer must calculate control adjustments for the next active time instance , @xmath25 .",
    "the corresponding computational time should not therefore exceed @xmath26 sec . generally speaking ,",
    "it is possible to memorize snapshots of the dynamic states and control inputs at some of the previous times @xmath27 ... , @xmath28 , @xmath29 .",
    "however , increasing the volume of input data may complicate the code and , as a result , slow down the calculation process .",
    "therefore , let us assume that updates for the control inputs are obtained by processing the system states , controls , and target states given only at the current time instance , @xmath22 .",
    "the corresponding algorithm can be built on the system model described by its differential equations of motion and some rule for minimizing the deviation ( error ) of the current dynamic states from the target .",
    "recall that , in the present work , such a rule will be defined according to the damped least squares ( [ p ] ) .",
    "illustrating physical example of two linearly coupled duffing oscillators is considered .",
    "it is shown that the corresponding algorithm , which is naturally designed and effectively working in discrete time , may face a problem of transition to the continuous time limit .",
    "consider the dynamical system @xmath30where @xmath31 is the system position ( configuration ) vector , the overdot indicates derivative with respect to time @xmath32 , the right - hand side @xmath33 represents a vector - function that may be interpreted as a force per unit mass of the system , and @xmath34 is a control vector , whose dimension may differ from that of the positional vector @xmath35 so that generally @xmath36 .    in common words ,",
    "the purpose of control @xmath37 is to keep the acceleration @xmath38 of system ( [ system ] ) as close as possible to the target @xmath39 .",
    "the term ` close ' will be interpreted below through a specifically designed target function of the following error vector @xmath40    as discussed in introduction , for practical implementations , the problem must be formulated in terms of the discrete time @xmath41 as follows .",
    "let @xmath42 , @xmath43 , and @xmath44 are observed at some time instance @xmath45 .",
    "the corresponding target acceleration , @xmath46 , is assumed to be known .",
    "then , taking into account ( [ system ] ) and ( [ error cont ] ) , gives the following error at the same time instance@xmath47    now the purpose of control is to minimize the following target function@xmath48^{t}w_{k}[\\ddot{x}_{k}^{\\ast } -f(x_{k},\\dot{x}% _ { k},t_{k},u_{k } ) ]   \\notag\\end{aligned}\\]]where @xmath49 is @xmath16 diagonal weight matrix whose elements are positive or at least non - negative functions of the system states , @xmath50 .",
    "note that all the quantities in expression ( [ target 1 ] ) represent a snapshot of the system at @xmath51 while including no data from the previous time step @xmath52 .",
    "since the control vector @xmath53 can not be already changed at time @xmath45 then quantity @xmath54 is out of control at time @xmath45 . in other words expression ( [ target 1 ] ) summarizes all what is observed _ now _ , at the time instance @xmath45 .",
    "the question is how to adjust the control vector @xmath55 for the next step @xmath56 based on the information included in ( [ target 1 ] ) while the system state at @xmath57 is yet unknown , and no information from the previous times @xmath27 ... , @xmath28 , @xmath29 is available .",
    "let us represent such an update for the control vector in the form@xmath58were @xmath59 is an unknown adjustment of the control input .",
    "replacing @xmath53 in ( [ target 1 ] ) by ( [ u(n+1 ) ] ) and taking into account that@xmath60gives@xmath61where @xmath62 is the jacobian matrix of @xmath6 rows and @xmath7 columns .",
    "although the replacement @xmath53 by @xmath63 in ( [ upredict ] ) may look artificial , this is how the update rule for the control vector @xmath55 is actually defined here .",
    "namely , if @xmath53 did not provide a minimum for @xmath64 , then let us minimize @xmath65 with respect to @xmath59 and then apply the adjusted vector ( [ u(n+1 ) ] ) at least the next next time , @xmath25 .",
    "assuming that the variation @xmath59 is small , in other words , @xmath53 is still close enough to the minimum , expansion ( [ upredict ] ) is applied .",
    "now the problem is formulated as a minimization of the quadratic form ( [ target 2 ] ) with respect to the adjustment @xmath59 .",
    "however , what often happens practically is that function ( [ target 2 ] ) has no unique minimum so that equation@xmath66has no unique solution .",
    "in addition , even if the unique solution does exist , it may not satisfy some conditions imposed on the control input due to the physical specifics of actuators . as a result",
    ", some constraint conditions may appear to be necessary to impose on the variation of control adjustment , @xmath67 .",
    "however , the presence of constraints would drastically complicate the problem . instead",
    ", the target function ( [ target 2 ] ) can be modified in order to move solution @xmath59 into the allowed domain .",
    "for that reason , let us generalize function ( [ target 2 ] ) as   @xmath68where @xmath69 is a diagonal regularization matrix , @xmath70 is a vector - function of @xmath6 elements , and @xmath71 is a matrix of @xmath6 rows and @xmath7 columns .",
    "note that the structure of new function ( [ target 3 ] ) is a generalization of ( [ p ] ) . substituting ( [ target 3 ] ) in ( [ equation du ] ) , gives a linear set of equations in the matrix form whose solution @xmath59 brings relationship ( [ u(n+1 ) ] ) to the form    @xmath72    the entire discrete time system is obtained by adding a discrete version of the dynamical system ( [ system ] ) to ( [ soln u ] ) .",
    "assuming that the time step is fixed , @xmath73 , a simple discrete version can be obtained by means of euler explicit scheme as follows@xmath74    finally , equations ( [ soln u ] ) and ( [ discrete system ] ) represent a discrete time dynamical system , whose motion should follow the target acceleration @xmath46 .",
    "it will be shown in the next section that the structure of equation ( soln u ) does not allow for the transition to continuous limit of the entire dynamic system ( [ soln u ] ) through ( [ discrete system ] ) , unless some specific assumption are imposed on the parameters in order to guarantee that @xmath75 as @xmath76 .",
    "the algorithm , which is designed in the previous section , is applied now to a two - degrees - of - freedom nonlinear vibrating system for an _ active _ control of the energy exchange ( nonlinear beats ) between the two oscillators .",
    "the problem of  _ passive _ control of energy flows in vibrating systems is of great interest @xcite , and it is actively discussed from the standpoint of nonlinear beat phenomena manevitchgendelman:2011 .",
    "the beating phenomenon takes place when frequencies of the corresponding linear oscillators are either equal or at least close enough to each other .    for illustrating purposes ,",
    "let us consider two unit - mass duffing oscillators of the same linear stiffness @xmath77 coupled by the linear spring of stiffness @xmath78 .",
    "the system position is described by the vector - function of coordinates , @xmath79 . introducing the parameters @xmath80  and @xmath81 , brings the differential equations of motion to the form @xmath82where",
    "@xmath83 is a positive parameter , @xmath84 and @xmath55 are damping ratios . ]",
    "of the first and the second oscillators , respectively ; the damping ratio @xmath55 , which is explicitly shown as an argument of the function @xmath85 , will be considered as a control input .",
    "the problem now is to find such variable damping ratio @xmath86 under which the second oscillator accelerates as close as possible to the given ( target ) acceleration , @xmath87 .",
    "following the discussion of the previous section , let us consider the problem in the discrete time @xmath41 .",
    "in order to avoid confusion , the iterator @xmath88 will be separated from the vector component indexes by coma , for instance , @xmath89 . since",
    "only the second mass acceleration is of interest and the system under consideration includes only one control input @xmath55 , then , assuming the weights to be constant , gives@xmath90 \\text { , \\ \\ } a_{k}=\\frac{\\partial } { \\partial u_{k}}\\left [   \\begin{array}{c } f_{1,k } \\\\   f_{2,k}% \\end{array}% \\right]\\]]where @xmath91 and @xmath92 , and other matrix terms become scalar quantities , say , @xmath93 ,  @xmath94 ,  and @xmath95 .",
    "the unities in @xmath49 and @xmath96 can always be achieved by re - scaling the target function and parameters @xmath13 and @xmath97 .",
    "note that re - scaling the target function by a constant factor has no effect on the solution of equation ( [ equation du ] ) .    as a result",
    ", the target function ( [ target 3 ] ) takes the form    @xmath98    in this case , equation ( [ equation du ] ) represents a single linear equation with respect to the scalar control adjustment , @xmath59 .",
    "substituting the corresponding solution in ( [ soln u ] ) and taking into account ( [ discrete system ] ) , gives the discrete time dynamical system @xmath99and@xmath100    let us assume now that the target acceleration @xmath101 is zero , in other words , the purpose of control is to minimize acceleration of the second oscillator at any sample time @xmath45 as much as possible .",
    "let us set still arbitrary parameter @xmath97 also to zero .",
    "then the target function ( [ sample_target ] ) and dynamical system ( [ du_solution ] ) and ( sample_iter ) take the form@xmath102 ^{2}+\\frac{\\lambda } { 2}(\\delta u_{k})^{2 }   \\label{sample_target1}\\ ] ]    @xmath103    where the functions @xmath104 and @xmath105 are defined in ( [ nb3 ] ) .    as follows from the first equation in ( [ sample_iter1 ] ) , transition to the continuous time limit for the entire system ( [ sample_iter1 ] )",
    "would be possible under the condition that@xmath106    condition ( [ cond1 ] ) can be satisfied by assuming that @xmath107 .",
    "such an assumption , however , makes little if any physical sense . as an alternative choice",
    ", the condition @xmath108 can be imposed by setting , for instance , @xmath109where @xmath110 remains finite as @xmath76 .",
    "however , condition ( [ cond2 ] ) essentially shifts the weight on control to the second term of the target function ( [ sample_target ] ) so that the function asymptotically takes the form@xmath111    such a target function leads to the solution @xmath112 , which effectively eliminates the control equation .",
    "in other words , the iterative algorithm seems to be essentially discrete . as a result",
    ", the control input @xmath113 , generated by the first equation in ( [ sample_iter1 ] ) , depends upon sampling time interval @xmath23 .",
    "let us illustrate this observation by implementing the iterations ( [ sample_iter1 ] ) under the fixed set of parameters , @xmath114 , @xmath115 , @xmath116 , @xmath117 , and initial conditions , @xmath118 , @xmath119 , @xmath120 , @xmath121 .",
    "the values to vary are two different sampling time intervals , @xmath122 and @xmath123 , and three different values of the damping constant , @xmath124 , @xmath125 , and @xmath126 . for comparison reason ,",
    "1 shows time histories of the system coordinates under the fixed control variable @xmath127 .",
    "this ( no control ) case corresponds to free vibrations of the model ( [ nb3 ] ) whose dynamics represent a typical beat - wise decaying energy exchange between the two oscillators .",
    "as mentioned at the beginning of this section , the beats are due to the 1:1 resonance in the generating system ( @xmath128 , @xmath129 ) ; more details on non - linear features of this phenomenon , the related analytical tools , and literature overview can be found in pilipchuk:2010 and @xcite . in particular , the standard averaging method was applied to the no damping case of system ( nb3 ) in @xcite .",
    "now the problem is to suppress the beat phenomenon by preventing the energy flow from the first oscillator into the second oscillator . as follows from figs . 2 through 5 ,",
    "such a goal can be achieved by varying the damping ratio of the second oscillator , @xmath130 , during the vibration process according to the algorithm ( [ sample_iter1 ] ) .",
    "first , the diagrams in figs .",
    "2 and 3 confirm that the sampling time interval @xmath23 represents an essential parameter of the entire control loop .",
    "in particular , decreasing the sampling interval from @xmath122 to @xmath123 effectively increases the strength of the control ; compare fragments ( b ) in figs . 2 and 3 .",
    "however , if such decrease of the sampling time is accompanied by the increase of @xmath13 according to condition ( [ cond2 ] ) , then the strength of control remains practically unchanged ; compare now fragments ( b ) in figs . 2 and 4 .",
    "as follows from fragments ( a ) in figs . 2 and 4 , the above modification of both parameters , @xmath23 and @xmath13 , also brings some difference in the system response during the interval @xmath131 , but this is rather due to numerical effect of the time step . finally , analyzing the diagrams in figs . 3 and 5 , shows that reducing the parameter @xmath13 as many as ten times under the fixed time step @xmath23 leads to a significant increase of the control input @xmath132 with a minor effect on the system response though .",
    "therefore the parameter @xmath13 can be used for the purpose of satisfying some constraint conditions on the control inputs @xmath130 in case such conditions are due to physical limits of the corresponding actuators .",
    "in addition , let us show that parameter @xmath13 may affect the convergence of algorithm ( [ sample_iter1 ] ) based on the following convergence criterion @xcite :    _ for a fixed point _ @xmath133 _ _  to be a point of attraction of the algorithm _ _",
    "@xmath134 _ _  a sufficient condition is that the jacobian matrix of _ _",
    "@xmath135 _ _  at the point _ _ @xmath133 _ _  has all its eigenvalues numerically less than 1 , and a necessary condition is that they are numerically at most 1",
    ". the geometric rate of convergence is the numerically largest eigenvalue of this jacobian . _ _    applying this criterion to the algorithm ( [ sample_iter1 ] ) at zero point , gives that one of the eigenvalues is always zero , @xmath136 , whereas another four eigenvalues , @xmath137 ( @xmath138 ) are proportional to the time step , @xmath139 , where the coefficients @xmath140 are given by the roots of algebraic equation@xmath141    as follows from ( [ char equation ] ) , the damping coefficient @xmath13 has no influence on the convergence condition near the equilibrium point , and the convergence can always be achieved under a small enough time step @xmath23 .",
    "nevertheless , the damping coefficient may appear to affect the convergence away from the equilibrium point . in this case ,",
    "analytical estimates for eigen values of the jacobian become technically complicated unless @xmath142 , when four of the five eigenvalues vanish as @xmath76 , except one eigenvalue , which is estimated by @xmath143    this root gives @xmath144 as @xmath145 . however , when @xmath146 , equation ( [ q ] ) gives the estimate @xmath147 as @xmath148 . therefore",
    ", only the necessary convergence condition is satisfied for @xmath149 .",
    "in this work , a discrete time control algorithm for nonlinear vibrating systems using the damped least squares is introduced .",
    "it is shown that the corresponding damping constant @xmath13 and sampling time step @xmath23 must be coupled by the condition @xmath150 = _ constant _ in order to preserve the result of calculation when varying the time step .",
    "in particular , the above condition prohibits a direct transition to the continuos time limit .",
    "this conclusion and other specifics of the algorithm are illustrated on the nonlinear two - degrees - of - freedom vibrating system in the neighborhood of 1:1 resonance .",
    "it is shown that the dissipation ratio of one of the two oscillators can be controlled in such way that prevents the energy exchange ( beats ) between the oscillators . from practical standpoint , controlling the dissipation ratio can be implemented by using devices based on the physical properties of magnetorheological fluids ( mrf ) dyke:1996 , @xcite . in particular , different mrf dampers are suggested to use for semi - active ride controls of ground vehicles and seismic response reduction .",
    "chiaverini , s. siciliano , b. , and egeland , o. , review of damped least - squares inverse kinematics with experiments on an industrial robot manipulator ,  _ ieee transactions on control systems technology _ , 2 , 123 - 134 , ( 1994 ) .",
    "deo , a. s. , and walker , i. d. , robot subtask performance with singularity robustness using optimal damped least squares ,  _ proc .",
    "ieee international conference on robotics and automation _ , 434 - 441 , ( 1992 ) .",
    "dyke , s.j .",
    ", spencer jr . , b.f . ,",
    "sain , m.k . , and carlson , j.d . , seismic response reduction using magnetorheological dampers ,  _ proceedings of the ifac world congress , san francisco , california , june 30-july 5 _ , vol .",
    "l , 145 - 150 , ( 1996 ) .",
    "lee , j.h . , and yoo , w.s . , predictive control of a vehicle trajectory using a coupled vector with vehicle velocity and sideslip angle ,  _ international journal of automotive technology _ , 10 ( 2 ) , 211 - 217 , ( 2009 )",
    "mayorga , r. v. , milano , n. , and wong , a. k. c. , a simple bound for the appropriate pseudoinverse perturbation of robot manipulators ,  _ proc .",
    "ieee international conference on robotics and automation _ , vol . 2 , 1485 - 1488 , ( 1990 ) .",
    "mayorga , r. v. , wong , a. k. c. , and milano , n. , a fast procedure for manipulator inverse kinematics evaluation and pseudoinverse robustness ,  _ ieee transactions on systems , man , and cybernetics _ , 22 , 790 - 798 , ( 1992 ) .",
    "vakakis , a.f . ,",
    "gendelman , o.v . ,",
    "bergman , l.a . ,",
    "mcfarland , d.m . ,",
    "kerschen , g. , lee , y.s .",
    ", _ nonlinear targeted energy transfer in mechanical and structural systems _",
    ", springer - verlag , berlin heidelberg , 2009 , 1032 p.      wampler , c. w. , and leifer , l. j. , applications of damped least - squares methods to resolved - rate and resolved - acceleration control of manipulators ,  _ journal of dynamic systems , measurement , and control _ , 110 , 31 - 38 , ( 1988 ) ."
  ],
  "abstract_text": [
    "<S> a discrete time control algorithm using the damped least squares is introduced for acceleration and energy exchange controls in nonlinear vibrating systems . </S>",
    "<S> it is shown that the damping constant of least squares and sampling time step of the controller must be inversely related to insure that vanishing the time step has little effect on the results . </S>",
    "<S> the algorithm is illustrated on two linearly coupled duffing oscillators near the 1:1 internal resonance . </S>",
    "<S> in particular , it is shown that varying the dissipation ratio of one of the two oscillators can significantly suppress the nonlinear beat phenomenon . </S>"
  ]
}
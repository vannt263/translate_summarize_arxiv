{
  "article_text": [
    "the numerical solution of maxwell s equations is an active area of computational research . typically , maxwell s equations are solved either in the frequency domain or in the time domain , where each of these approaches has its own relative merits .",
    "we are specifically interested in efficient algorithms for light propagation problems in guided wave photonic applications  @xcite , and work in the time domain .",
    "the most popular class of methods in this area is the finite difference time domain ( fdtd ) method  @xcite . due to the structured grid requirement of these methods ,",
    "they become cumbersome while dealing with optical devices having curved interfaces and different length scales . to overcome these difficulties , a discontinuous galerkin time domain ( dgtd )",
    "method has been investigated  @xcite . for a time dependent wave propagation problem ,",
    "all these methods use a fixed grid / mesh for discretization .",
    "in general , such a grid can under - sample the temporal dynamics , or over - sample the field propagation causing high computational costs .",
    "if the spatial grid adapts itself according to the temporal evolution of the field , then the computational resources will be used much more efficiently .",
    "we propose an adaptive - grid method which represents propagating fields at each time step by a compressed wavelet decomposition , and which automatically adapts the computational mesh to the changing shape of the signal . in the initial studies of the wavelet formulation ,",
    "the interpolating scaling functions were used for frequency domain waveguide analysis  @xcite . to the best of our knowledge , the suitability of the wavelet decompositions for time dependent maxwell problems has not yet been investigated .",
    "vasilyev and his co - authors developed the adaptive wavelet collocation time domain ( awc - td ) method as a general scheme to solve evolution equations , and they successfully verified the scheme s effectiveness in the area of computational fluid dynamics  @xcite . based on these studies , we present in this work a proof - of - concept for an awc - td for the time dependent maxwell s equations .",
    "the paper is organized as follows . in sec.[sec : tdme ] , we provide a brief account on maxwell s equations and some of the related concepts for their numerical solutions .",
    "we start sec.[sec : awcm ] with an introduction to ( interpolating ) wavelets , and how they can be used to discretize partial differential equations .",
    "also in this section we explain the structure of awc - td method in the context of maxwell s equations .",
    "sec.[sec : algo ] gives algorithmic details of the method .",
    "numerical results of the awc - td method are given in sec.[sec : ns ] which contains our numerical experiments of propagating a 2d gaussian peak in homogeneous environment .",
    "finally we close the paper with concluding remarks in sec.[sec : con ] .",
    "propagation of optical waves in a linear , non - magnetic dielectric medium with no charges and currents is governed by the following time dependent maxwell s equations @xmath0 where the electric field @xmath1 and the electric flux density @xmath2 , as well as the magnetic field @xmath3 and the magnetic flux density @xmath4 , are related by the constitutive relations @xmath5 here @xmath6 is the free space permittivity , @xmath7 is the relative permittivity and @xmath8 is free space permeability .    for illustration purpose ,",
    "we restrict ourselves to a 2d setting where the fields and the material properties are assumed to be invariant in the @xmath9-direction , i.e. @xmath10 and the partial derivatives of all fields with respect to @xmath9 vanish identically .",
    "we suppress the explicit function dependence on @xmath11 and @xmath12 .",
    "then maxwell s equations   decouple into a pair of independent sets of equations , @xmath13 identified as _ transverse electric _",
    "( te)@xmath14 setting , and @xmath15 identified as _ transverse magnetic _ ( tm)@xmath14 setting .",
    "here @xmath16 , @xmath17 , @xmath18 etc .",
    "denote the respective field components .",
    "originally , maxwell s equations are formulated for a whole space . for numerical computations",
    "we need to restrict them to a bounded computational domain @xmath19 as shown in fig .",
    "[ fig : comp_domain ] .",
    "this is done with a transparent boundary condition , which is realized in our case with _",
    "perfectly matched layer _",
    "( pml )  @xcite .",
    "the principle of pml is that ( outgoing ) waves scattered from the scatterer @xmath20 pass through the interface between @xmath19 and pml without reflections , and attenuate significantly inside the pml .",
    "the waves virtually vanish before reaching the outermost boundary of the pml , where the perfectly electric boundary ( peb ) condition is employed .",
    "implementation details about the pml technique specific for the method discussed in this paper can be found in ref.@xcite .",
    "for the sake of clarity , we work with the general formulation given by eq.- .     typical simulation setting with a computational domain @xmath19 surrounded by the perfectly matched layer .",
    "here just for the sake of illustration , we show the scatterer @xmath21 completely enclosed inside @xmath19 .",
    "other configurations like incoming - outgoing waveguides are also possible  @xcite.,width=377 ]    as in the case of the standard fdtd method  @xcite , in our approach we use the central difference scheme for the time derivatives in eq.- , but we will construct a different discretization scheme of the spatial derivatives .",
    "this is done with interpolating scaling functions and lifted interpolating wavelets ( explained in sec.[sec : awcm ] ) .",
    "the induced multiresolution approximation  @xcite enables us to decompose fields into various resolution levels , and thus allows to discard unimportant features . as a result , we will obtain a variant of the fdtd method , which is constructed with respect to a locally refined grid . in the next section",
    "we describe this numerical scheme in detail .",
    "the adaptive wavelet collocation ( awc ) method was proposed by vasilyev and co - authors in a series of papers  @xcite as a general scheme to solve evolution equations . in the present section ,",
    "we tailor the awc method to tackle eq.- .",
    "in contrast to the originally formulated awc method , we do not need to utilize second generation wavelets , which have been mainly invented to implement boundary constraints , and to find wavelet decompositions on irregular domains .",
    "since we use the pml method , we can identify field values outside the pml region with zero , and therefore we are not forced to adapt our wavelets to the boundary restrictions .",
    "hence , we consider only the first generation wavelets , which are generated by the shifts and the dilations of a single function .",
    "now we outline the essential steps for computing spatial derivatives of functions in wavelet representations .",
    "a starting point of the awc method is a wavelet decomposition of a function @xmath22 : @xmath23 where @xmath24 , @xmath25 is the _ scaling function _ and @xmath26 is the _ wavelet function _  @xcite . for all @xmath27 , by @xmath28 and @xmath29",
    "we abbreviate the dilated and translated versions of @xmath25 and @xmath26 , i.e. @xmath30 , @xmath31 .",
    "the first ( single ) sum in ( [ eq : wavelet_decomp ] ) represents _ rough _ or _ low frequency information _ of @xmath32 , while the second ( double ) sum contains the _ detail information _ at various resolution levels starting from the level @xmath33 to @xmath34 .",
    "the absolute magnitude of the coefficients @xmath35 and @xmath36 measure the contributions of @xmath37 and @xmath38 to @xmath32 . by discarding terms in the double sum for which the wavelet coefficients @xmath36",
    "are absolutely less than a given threshold , one can efficiently compress the representation of @xmath32 .",
    "this wavelet decomposition compression principle is exploited in the awc method to enhance the computational efficiency .",
    "there are various families of the scaling functions @xmath25 and wavelet functions @xmath26 allowing representations like  . as in  @xcite",
    ", we work with the interpolating scaling functions  @xcite and the corresponding lifted interpolating wavelets  @xcite . due to their interpolation property , we have @xmath39 0\\ : & \\ ! k\\in\\mathbb{z}\\setminus\\{0\\ } , \\end{cases}\\ ] ] and as a result , there exits a unique grid associated with the family @xmath40 .",
    "the resulting numerical scheme can be seen as a variant of the well known finite difference method .",
    "we exploit this interpolating property in sec.[sec : wc ] and sec.[sec : sp ] .    in particular , we use the interpolating scaling function ( isf ) family developed by deslauriers and dubuc  @xcite .",
    "they constructed the interpolating functions by the _",
    "iterative interpolation method _ , which does not require the concept of wavelets .",
    "later sweldens  @xcite constructed the corresponding wavelet by lifting the donoho wavelet  @xcite .",
    "we use @xmath41 to denote isf of order @xmath42 , and @xmath43 to denote the lifted interpolating wavelet of order  @xmath44 . here",
    "the order @xmath42 means that any polynomial @xmath45 of degree @xmath46 can be expressed as @xmath47 with suitable coefficients @xmath48 .",
    "the order @xmath49 is half the number of the vanishing moments of the lifted interpolating wavelet , i.e. , @xmath50 further details can be found in @xcite .",
    "we normally choose same orders for the isf and the lifted interpolating wavelet , i.e. , @xmath51 .",
    "it is easy to see that @xmath41 and @xmath52 have compact supports , which increase with the order @xmath42 .    for the tm@xmath14 setting in eq .  , the electric and magnetic fields depend on the spatial variables @xmath53 . as usual , see , e.g. , @xcite , we represent 2d fields by expansions of 2d scaling functions and wavelets which are defined by @xmath54    { { \\displaystyle \\boldsymbol}\\psi}^{\\nu}_n ( x , z ) & : = \\left \\{\\ ! \\begin{array}{ll }     { \\displaystyle d \\hspace{-0.2 mm } l}_n(x ) { \\displaystyle d \\hspace{-0.5 mm } d}_n(z ) & : \\quad \\nu = 1,\\\\[1 mm ]     { \\displaystyle d \\hspace{-0.5 mm } d}_n(x ) { \\displaystyle d \\hspace{-0.2 mm } l}_n(z ) & : \\quad \\nu = 2,\\\\[1 mm ]     { \\displaystyle d \\hspace{-0.2 mm } l}_n(x ) { \\displaystyle d \\hspace{-0.2 mm } l}_n(z ) & : \\quad \\nu = 3 , \\end{array } \\right .\\end{aligned}\\ ] ] and use the following abbreviations @xmath55    ( { { \\displaystyle \\boldsymbol}\\psi}_n^{\\nu})_{j , m , n } ( x , z ) & : = \\left\\{\\ !   \\begin{array}{ll }     { ( { \\displaystyle d \\hspace{-0.2 mm } l}_n)}_{j , m } ( x ) { ( { \\displaystyle d \\hspace{-0.5 mm } d}_n)}_{j+1,2n } ( z ) & : \\quad \\nu = 1 , \\\\[1 mm ]    { ( { \\displaystyle d \\hspace{-0.5 mm } d}_n)}_{j+1,2 m } ( x ) { ( { \\displaystyle d \\hspace{-0.2 mm } l}_n)}_{j , n } ( z ) & : \\quad \\nu = 2 , \\\\[1 mm ]    { ( { \\displaystyle d \\hspace{-0.2 mm } l}_n)}_{j , m } ( x ) { ( { \\displaystyle d \\hspace{-0.2 mm } l}_n)}_{j , n } ( z ) & : \\quad \\nu = 3 .",
    "\\end{array } \\right.\\end{aligned}\\ ] ] let @xmath56 and @xmath57 ( with @xmath58 ) be the coarsest and the finest spatial resolution levels .",
    "let us consider @xmath59 with exact resolution level @xmath57 , that is , @xmath60 then the wavelet representation of @xmath32 with coarsest resolution level @xmath56 is given by @xmath61 where the scaling coefficients @xmath62 and the wavelet coefficients @xmath63 can be calculated from the level @xmath57 scaling coefficients @xmath64 by the _",
    "2d _ forward wavelet transform _ ( fwt ) :    [ eq:2dfwt_d ] @xmath65[eq:2dfwt ]    with the following normalization conventions @xmath66 the coefficients @xmath67 and @xmath68 are lagrangian interpolation weights . for example , when @xmath69 , these weights are @xmath70 and @xmath71 readers may consult  @xcite and ( * ? ? ?",
    "* theorem  12 ) for an explanation of how and why lagrangian weights enter the iterative interpolation process .",
    "we also can compute back from the wavelet representation   to the scaling function representation   by the _ inverse wavelet transform _ ( iwt ) :    @xmath72      we thin out the triple sum in ( [ eq:2d_decomposition ] ) by discarding small wavelet coefficients , which corresponds to small scale details . for a given threshold @xmath73 ,",
    "let @xmath74 where the threshold function @xmath75 is defined by @xmath76 note that we have defined the uniform threshold @xmath77 in terms of the normalized wavelet coefficients @xmath78 defined in eq .",
    "i.e. , if @xmath79 then @xmath80 in @xmath81 in eq .",
    ". then the compression error is proportional to @xmath77 @xcite : @xmath82 our basis functions in , which are translates and dilates of @xmath83 and @xmath84 , are interpolating at the corresponding grid points .",
    "let @xmath85 then we have the following one - to - one correspondence between the basis functions and the grid points : @xmath86 here this correspondence means the validity of the interpolation property .",
    "for instance , we have that @xmath87 with this explanations , we justified the synonymous usage of _ compression of the wavelet representation _ and _ compression / adaption of the grid points_.      with the above described wavelet compression , the grid gets suitably sampled only for the current state of the fields . for a meaningful ( i.e. physical ) field evolution in the next time - step ,",
    "the grid need to be supplemented by additional grid points , on which the fields may become significant in the next time step .",
    "this allows the grid to capture correctly the propagation of a wave .",
    "to this end vasilyev  @xcite has introduced a concept of an _",
    "adjacent zone_.    to each point @xmath88 in the current grid , we attach an adjacent zone which is defined as the set of points @xmath89 which satisfy @xmath90 where @xmath91 is the width of the adjacent levels and @xmath92 is the width of the physical space . as in @xcite",
    ", we verified that @xmath93 is a computationally sufficient choice .",
    "then the adjacent zone for a point @xmath94 can be depicted as in fig .",
    "[ fig : adjacent ] .",
    ".[fig : adjacent],width=377 ]    note that the concept of adjacent zone is reasonable only for continuously propagating waves , as in case of our guided - wave applications , where in each time step the propagating waves do not travel far from the current position due to their finite propagation speed .      in this work",
    "we use the wavelet decompositions of the fields only to determine the adaptive grid .",
    "we do not propagate fields in their wavelet representations ( cf .",
    "the statement in the first paragraph of sec .",
    "[ sec : algo ] ) .",
    "thus at each time step , after adapting the grid using the fwt , and adding the adjacent zone , we need to restore the fields in the physical space by performing the inverse wavelet transformation ( iwt ) . to this end , we may need to augment the adaptive grid with additional neighboring points ( e.g. see fig  [ fig : wc_grid ] ) .",
    "this process of adding neighboring points needed to calculate the wavelet coefficients in the next time step is called _",
    "reconstruction check_. fig  [ fig : wc_grid ] shows various possible scenarios , and the corresponding minimal set of the grid points required for calculation of the wavelet coefficients .",
    "the values of the wavelet coefficients at these _ newly _ added points are set to zero .",
    "the efficiency of the wavelet transform depends on the number of the finest grid points only at the beginning ; however , after the first compression , it depends solely on the cardinality (= number of grid points ) of the adaptive grid .      after the adjacent zone correction and the reconstruction check , we are in a position to calculate the derivative of @xmath95 at a grid point in the adaptive grid . for this",
    "we need to know the _ density level _ of this point , which is defined as the maximum of the _ @xmath96-level _ and the _ @xmath97-level _ of that point .",
    "we illustrate this concept explicitly only for the @xmath96-level , the @xmath97-level can be determined analogously . for a point @xmath98 in the adaptive grid @xmath99 ,",
    "let @xmath100 be the nearest point to @xmath101 .",
    "then the @xmath96-level @xmath102 of @xmath101 relative to @xmath99 is @xmath103 where @xmath104 is the smallest computational mesh size along the @xmath96 axis , and @xmath105 . for @xmath106 , the level @xmath102 of",
    "@xmath101 attains its maximum @xmath57 . for @xmath107",
    ", we have @xmath108 , etc .",
    "see fig.[fig : densitylevel ] for an example of describing the density level of a grid point .     in an adaptive grid : the @xmath96-level of @xmath101 is @xmath109 and the @xmath97-level of @xmath101 is @xmath57 , thus , the density level of @xmath101 is @xmath57.[fig : densitylevel],width=151 ]    now we continue to discuss the derivative calculations .",
    "suppose @xmath33 to be the density level of @xmath101 in @xmath99 .",
    "then , we can represent @xmath95 by a finite sum @xmath110 locally in some neighborhood @xmath111 of @xmath101 .",
    "@xmath112 we differentiate @xmath110 with respect to @xmath96 to approximate the @xmath96-derivative of @xmath32 at @xmath101 .",
    "if any points in the sum ( [ eq : awcm2d_diff_appr ] ) are not present in @xmath99 , then we interpolate the values at these points by the iwt using the values of the coarser levels . from the interpolation property of @xmath113",
    "we know that @xmath114 thus , we have @xmath115 differentiate both sides of ( [ eq : awcm_diff ] ) with respect to @xmath96 gives @xmath116 the derivatives of @xmath117 can be calculated exactly at the integers using the difference filters shown in table  [ table : deri_filter ] ( see ref .",
    "@xcite for details of the derivation ) .",
    ".difference filters @xmath118 with consistency order @xmath119 .",
    "note that @xmath120 .",
    "[ table : deri_filter ] [ cols=\"^,>,>,>\",options=\"header \" , ]     since the density level of @xmath101 is @xmath33 , there exist @xmath121 such that @xmath122 and it is easy to see that @xmath123   & =   2^{j_0 } \\sum_{m } ( { \\bf p}_{j_0 } f ) \\big ( \\frac{m}{2^{j_0 } } , \\frac{n'}{2^{j_0 } } \\big ) { \\displaystyle d \\hspace{-0.5 mm } d}_n ' \\big ( m'- m \\big).\\label{eq : diffx } \\end{aligned}\\ ] ] similarly , @xmath124 this finishes the general discussion about the adaptive wavelet collocation method ; in the next section , we apply it to maxwell s equations .",
    "in this section we formulate the update scheme for maxwell s equations , and then elaborate on algorithmic issues related with the awc - td method . in the present formulation",
    "we represent the electric and magnetic fields in the physical space , and not in the wavelet space . to unleash the full power of adaptivity , however , the field representation and the update in wavelet space are advantageous .",
    "we illustrate the method for the transverse magnetic ( tm)@xmath14 setting given by .",
    "similar procedure can also be formulated for te@xmath14 setting in . unlike the standard fdtd method , here the electric field and the magnetic field components",
    "are evaluated on same spatial grid , and their spatial derivatives are approximated at the same grid point .",
    "but the electric field components are sampled at integer time - steps , whereas the magnetic field components are sampled at half - integer time - steps .",
    "for a point @xmath101 in the adapted grid @xmath99 , let @xmath125 , @xmath126 and @xmath127 denote the discretized value of @xmath128 , @xmath129 and @xmath130 at the point @xmath101 , and at a time @xmath131 for the magnetic field components and at a time @xmath132 for the electric field component where @xmath133 is the time step size ( note that , the electric field components are sampled at integer time - steps , whereas the magnetic field components are sampled at half - integer time - steps . ) .",
    "assume @xmath134 to be the density level of @xmath101 relative to @xmath99 .",
    "then we can represent the point @xmath101 as @xmath135 for some @xmath136 .",
    "let @xmath91 be the length of the computational domain @xmath19 .",
    "we rescale the wavelet decomposition with the factor @xmath91 . then using the central difference scheme for the time derivatives and using - for the spatial derivatives ,",
    "we get the following difference equations    [ eq : update_tmy ] @xmath137    the first time step ( @xmath138 ) is an explicit euler step with step size @xmath139 using initial conditions for the fields at the time @xmath140 .",
    "if not explicitly mentioned , otherwise the fields are set zero at the beginning for all our numerical experiments in sec .",
    "[ sec : ns ] .",
    "the update equations for the pml assisted maxwell s equations can be found in ref .",
    "@xcite .    from the form of these update equations ,",
    "it is clear that the awc - td method can be thought as an variant of high order fdtd method .",
    "the awc - td method is defined with respect to a locally adapted mesh , and unlike the fdtd method , it does not require a static ( fixed ) , structured mesh .",
    "this will lead to efficient use of the computational resources . in the next section",
    ", we elaborate on algorithmic aspects of the method .",
    "several choices are available for time stepping . as in case of the standard fdtd method",
    ", we use in the central difference scheme for the discretization of the time derivatives . for this explicit scheme",
    ", the smallest spatial step - size restricts the maximal time - step according to the courant  friedrichs  lewy ( cfl ) stability condition . using a uniform spatial mesh in the update equations with a mesh size @xmath141 in both",
    "coordinate directions the cfl condition reads @xmath142 see ( * ? ? ?",
    "3.5 ) and @xcite , where @xmath143 is the speed of light in vacuum and @xmath144 is the known derivative filter of the isf as in table  [ table : deri_filter ] .",
    "due to the local adaptive grid strategy of the awc - td method , we can not define a global stability criteria as above . but choosing @xmath141 to be the smallest step size in the adaptive grid , we get a conservative bound for @xmath145 via for the awc - td method . in the simulation tests ( in this paper , and in @xcite ) we did not experience any stability related issues with this modus operandi .        in awc method the computational grid",
    "is changed with the state ( spatial localization ) of the propagating field .",
    "thus the grid management is one of the important steps in the implementation of this method .",
    "this is done as following : we store the information of the adaptive grid into a 2d boolean array called a _ grid mask _ or simply a _ mask _ , whose size is square the number of the finest grid points along one direction .",
    "we use 2d arrays of real numbers with the size of the grid mask to store the fields such as @xmath146 , @xmath147 , and @xmath148 etc .",
    "note that the computational effort for updating the fields at each time step is proportional to the cardinality ( i.e. the number of entries in the mask with value @xmath149 ) of the adaptive grid .",
    "if the value of an entry of a mask is @xmath150 or @xmath149 , then the corresponding grid point is included in the adaptive grid ; otherwise , it is not included in the grid .",
    "thus by forcing the value of an entry of a mask to @xmath149 , we can _ include _ the corresponding point to the grid , or by forcing the entry to @xmath151 , we can _ exclude _ the corresponding point from the grid .",
    "algorithm  [ algo : awcm_tmy ] outlines the main function _ awcm_main ( ) _ of awc - td method for tm@xmath14 setting .",
    "it mainly consists of two blocks of operations : the first block is _ initialization _ , and the second block is _",
    "time stepping_. in the time stepping block , at each time step the routines _",
    "awcm_adaptive ( ) _ and _ awcm_update ( ) _ are called .",
    "the former routine optimally adapts the computational grid for the field updates at the next time step , whereas the latter routine calculates the spatial derivatives on the non - equidistant , adaptive grid , and updates the field values .",
    "# initialization + awcm_initialize ( ) +   # ",
    "+   # time stepping of @xmath130 , @xmath128 and @xmath129 +    the initialization subroutine awcm_initialize ( ) ensures that various required inputs for the awc method are systematically prepared .",
    "it consists of checking the given initial data ( i.e. for time step @xmath138 ) @xmath152 , @xmath153 and @xmath154 at the finest resolution level @xmath155 , the threshold @xmath77 , the maximum and the minimum spatial resolution levels @xmath155 and @xmath156 respectively , and the number of time steps @xmath157 .",
    "the time step @xmath145 is chosen such that it satisfies the cfl condition given by .",
    "the adaptivity procedure in algorithm[algo : awcm_tmy ] handled by a subroutine awcm_adaptive ( ) is outlined in algorithm  [ algo : awcm_adaptive ] .",
    "it is done by means of a 2d array @xmath130 with a mask @xmath158 . for later use , we store a copy of @xmath158 in @xmath159 , since",
    "@xmath158 will be modified by the subsequent subroutines .",
    "the duplicate @xmath159 serves as a reference for finding those points which need to be interpolated before we can update the fields .",
    "we perform the fast wavelet transform of @xmath130 on @xmath158 .",
    "note that @xmath158 is either fully @xmath149 ( as at the beginning ) or a reconstruction check has been performed in the previous time step . in any case ,",
    "fwts on @xmath158 are always possible . by the fwt applied to @xmath130 we",
    "obtain the scaling coefficients on the coarsest level @xmath56 , and the wavelet coefficients on levels from @xmath56 to @xmath109 .    for each wavelet coefficient",
    ", we compare its absolute value with the given tolerance @xmath77 .",
    "if it is less than @xmath77 , we _",
    "remove _ the corresponding point from @xmath158 .",
    "next , we determine the adjacent zone for each point in @xmath158 , and then modify @xmath158 to include all points in these adjacent zones .",
    "finally , a reconstruction check is applied to @xmath158 so that the fwt in the next time step is well defined .",
    "the latter two processes are done in the subroutine maskext(@xmath158 ) as shown in algorithm  [ algo : awcm_adaptive ] .",
    "# store @xmath158 into @xmath159 .",
    "+   # @xmath159 : the adaptive grid for @xmath130 at current time step . + @xmath160 +   #    +   # fast wavelet transform of @xmath130 on @xmath158 with @xmath77 .",
    "+   # @xmath130 is converted into coefficients of wavelet domain , @xmath158 is thinned .",
    "+ fwt(@xmath130 , @xmath158 , @xmath77 ) +   #    +   #",
    "add adjacent zone and perform a reconstruction check to @xmath158 .",
    "+ maskext(@xmath158 ) +   # ",
    "+   # add points needed to calculate @xmath161 and @xmath162 on @xmath158 .",
    "determine the density level of each point in @xmath158 .",
    "+ @xmath163 level(@xmath158 ) +   # 2 .",
    "initialize @xmath164 with @xmath158 .",
    "+ @xmath165 +   # 3 .",
    "update @xmath164 .",
    "+ gmaskext(@xmath164 , @xmath166 ) +   # ",
    "+   # add points needed to calculate @xmath167 and @xmath168 on @xmath164 .",
    "+   # 1 . determine the density level of each point in @xmath164 .",
    "+ @xmath169 level(@xmath164 ) +   # 2 .",
    "initialize @xmath170 with @xmath164 .",
    "+ @xmath171 +   # 3 .",
    "update @xmath170 .",
    "+ gmaskext(@xmath170 , @xmath172 ) +   # ",
    "+   # inverse wavelet transform of the values @xmath130 in the wavelet domain on @xmath170 .",
    "+   # @xmath130 is reconstructed from the values in the wavelet domain on @xmath170 .",
    "+ iwt(@xmath130 , @xmath170 )    after the above adaptation of the grid is done , we still need to make further reconstructions on this grid , so that it will allow computation of the field derivatives required for the field update . for updating @xmath128 and @xmath129 , we need @xmath162 and @xmath173 ( see or ) . to calculate these spatial derivatives of the electric field , we interpolate values of @xmath130 at those neighbors of points in @xmath158 which are not already in @xmath158 .",
    "we store the information of @xmath158 into @xmath164 .",
    "further , we add all points to @xmath164 needed in the calculations of spatial derivatives according to the density levels of the points in @xmath164 .",
    "these density levels are computed in subroutine level(@xmath164 ) and stored in the 2d array @xmath166 . again a reconstruction check of @xmath164 is required to enable iwts .",
    "this is done by the subroutine gmaskext(@xmath164 , @xmath166 ) .",
    "then we need to follow the same procedure as above for updating @xmath130 using the spatial derivatives @xmath174 and @xmath175 .",
    "again we add the neighboring points needed for calculations of the spatial derivatives of the magnetic field .",
    "we copy @xmath164 to @xmath170 , and calculate the density level array @xmath172 of @xmath170 .",
    "the necessary reconstruction check is then done by calling gmaskext(@xmath170,@xmath172 ) .",
    "the call of iwt(@xmath130 , @xmath170 ) to reconstruct @xmath130 in the physical domain finishes the routine _ awcm_adaptive ( ) _ in algorithm  [ algo : awcm_adaptive ] .",
    "next , we update the field values on the adaptive grid , which is described by algorithms  [ algo : awcm_update ] .",
    "since the adaptive grid may change with time , we need to interpolate the field values at points in the adaptive grid of the current time step , which are not included in the adaptive grid of the previous time step .",
    "for example , consider the update of @xmath147 about a grid point @xmath101 at a time @xmath176 in . since @xmath101 is not necessarily in the adaptive grid of previous time @xmath177 , the value @xmath178 in must be interpolated .",
    "once this is done , algorithm  [ algo : diffx ] calculates the spatial derivatives of each field components on the adaptive grid , and then the fields are updated .",
    "# to update @xmath128 : +   # interpolate @xmath128 on points in @xmath164 which are not in @xmath159 using inverse wavelet transform .",
    "+ interpolate(@xmath128 , @xmath159 , @xmath164 ) +   # calculate @xmath162 on @xmath164 using algorithm  [ algo : diffx ] .",
    "+ @xmath179 diffz(@xmath130 , @xmath164 , @xmath172 , _ dfilter _ ,",
    "@xmath180 ) + update @xmath128 on @xmath164 using @xmath181 as per formulation in . +   #",
    "   +   # to update @xmath129 : +   # interpolate @xmath129 on points in @xmath164 which are not in @xmath159 using inverse wavelet transform .",
    "+ interpolate(@xmath129 , @xmath159 , @xmath164 ) +   # calculate @xmath161 on @xmath164 using algorithm  [ algo : diffx ] .",
    "+ @xmath182 diffx(@xmath130 , @xmath164 , @xmath172 , _ dfilter _ , @xmath183 ) + update @xmath129 on @xmath164 using @xmath184 as per formulation in .",
    "+   #    +   # to update @xmath130 : +   # interpolate @xmath130 on points in @xmath158 which are not in @xmath159 using inverse wavelet transform .",
    "+ interpolate(@xmath130 , @xmath159 , @xmath158 ) +   # calculate @xmath167 and @xmath185 on @xmath158 , see the algorithm  [ algo : diffx ] .",
    "+   # diffx ( ) is defined in algorithm  [ algo : diffx ] .",
    "diffz ( ) is similarly defined .",
    "+ @xmath179 diffz(@xmath128 , @xmath158 , @xmath166 , _ dfilter _ , @xmath180 ) + @xmath182 diffx(@xmath129 , @xmath158 , @xmath166 , _ dfilter _ , @xmath183 ) +",
    "update @xmath130 on @xmath158 using @xmath181 and @xmath184 as per formulation in .",
    "# initialize a 2d array @xmath186 for the storage of @xmath187 .",
    "+ @xmath188 + @xmath189 , where @xmath190 , for @xmath191 .",
    "in this section we demonstrate the applicability of the awc - td method .",
    "the method has been implemented in c++ , and the computations have been performed on @xmath192  gb ram , linux system with amd opteron processors .    as an example , we consider propagation of a spatial gaussian pulse in free space ( @xmath193 ) .",
    "we solve a system of tm@xmath14 equations within a square domain @xmath194 \\times [ -l/2 , l/2]$ ] in the @xmath195 plane .",
    "we set the domain length @xmath196  @xmath197 m , the pml width @xmath198 , and the initial spatial gaussian excitation @xmath199 with the gaussian pulse width @xmath200 @xmath197 m .",
    "implementation details about the pml can be found in ref.@xcite .",
    "our minimum and maximum resolution levels are @xmath201 and @xmath202 inducing the smallest mesh size @xmath203 nm .",
    "the temporal error of the awc - td method is controlled by @xmath204 if we do not consider the compression , which is the consistency order of the central difference discretization of the time derivatives . accordingly , a reasonable choice for the threshold @xmath77 is a value slightly larger than the discretization error . as the orders of the underlying interpolating scaling function / wavelet pair is @xmath205 , we set @xmath206 , which is just below the maximal step size from the cfl condition . for this setting ,",
    "a choice of wavelet threshold @xmath207 experimentally turned out to be sufficient concerning both adaptivity and accuracy .     in the @xmath195 plane with @xmath200 @xmath197 m , @xmath205 and @xmath207 .",
    "on top of each time frame , time and grid compression rate  are given (  is the ratio of the cardinality of the adaptive grid and the cardinality of the full grid with a uniform step size @xmath141 (= the smallest mesh size ) in the both coordinate directions ) .",
    "the adaptive grid systematically follows and resolves the wavefront . in regions where the field is small or not present only grid points of the coarsest level",
    "are assigned .",
    "for an animation movie , see the youtube channel : www.youtube.com/user/haojunli#p/u/1/2yzpjf7xnp4 . ]",
    "the gaussian pulse , launched in the center of the computational domain , spreads away from the center as time evolves .",
    "fig.[fig : gauss2d ] illustrates how the adaptive grid systematically follows and resolves the wavefront . since the electromagnetic field energy is spreading in all directions , the field s amplitude is decreasing ( unlike as in 1d , where during the propagation the amplitude stays at half of the initial value , see ( * ? ? ?",
    "* sec.4.4.1 ) ) .",
    "the awc method generates a detailed mesh only in the regions where the field is localized , the mesh gets coarse in other parts of the computational domain . as seen in the snapshots for @xmath208 or @xmath209 , it is evident that depending on the extend of the field localization , the density of the grid points varies accordingly .",
    "a figure of merit for the performance of the awc - td method is the compression rate , which is defined as a ratio of the cardinality of the adaptive grid and the cardinality of the full grid with a uniform step size @xmath141 (= the smallest mesh size ) in the both coordinate directions .",
    "the percentage  on the top of each time frame in fig.[fig : gauss2d ] shows the grid compression rate .",
    "since the extent of a spatial localization of a pulse depends on its frequency contents , the compression rate  for the test case in fig.[fig : gauss2d ] varies ( also seen in fig.[fig : compression ] ) .",
    "nevertheless , for all time steps the number of grid points in the adapted grid is substantially less than that of in the full grid ; but still the awc method resolves the pulse very well with an optimal ( with respect to the given threshold @xmath77 ) allocation of the grid points .     between the adaptive wavelet collocation method and the full grid wavelet method .",
    "]    the relative maximal error of @xmath130 field values over @xmath19 between the adaptive and the full grid methods as the time evolves is shown in fig.[fig : error_gauss2d ] . despite of grid compression ( which can be quite significant at some time instants , as seen in fig.[fig : gauss2d ] ) , the solution by the awc method is quite close to that of by the full grid method .",
    "as mentioned earlier , as the pulse spreads in all the direction , the field becomes weak , and the real performance gain by the adaptivity effectively reduces .",
    "it is reflected in the apparent increase in the relative maximal error ( with respect to the full grid method ) in fig.[fig : error_gauss2d ] .",
    "note that when the field has completely left the computational domain @xmath19 roughly after @xmath210 time steps , the error over @xmath19 is not defined meaningfully any more .",
    "fig.[fig : compression ] demonstrates that ( the major part of ) the computational effort of the awc - td method per time step is indeed proportional to the cardinality of the adapted grid at that time instant . to this end , we recorded the cpu time for every ten time steps ( fig.[fig : compression ] top ) .",
    "for comparison , we also plotted the grid compression rate as a function of the time step ( fig.[fig : compression ] bottom ) .",
    "both functions progress in parallel , thus validating the above assertion about the numerical effort of the awc - td method .",
    "in this paper we investigated an adaptive wavelet collocation time domain method for the numerical solution of maxwell s equations . in this method a computational grid is dynamically adapted at each time step by using the wavelet decomposition of the field at that time instant . with additional amendments ( e.g. adjacent zone corrections , reconstruction check , etc . )",
    "to the adapted grid , we formulated explicit time stepping update scheme for the field evolution , which is a variant of high order fdtd method , and is defined with respect to the locally adapted mesh .",
    "we illustrated that the awc - td method has high compression rate . since ( the major part of ) the computational cost of the method per time step is proportional to the cardinality of the adapted grid at that time instant , it allows efficient use of computational resources .",
    "this method is especially suitable for simulation of guided - wave phenomena as in the case of integrated optics devices .",
    "initial studies for simulation of integrated optics microring resonators can be found in @xcite . in the present feasibility study we represented the electric and magnetic fields in the physical space , and not in the wavelet space . to unleash the full power of adaptivity , however , the field representation and the update in wavelet space are mandatory .",
    "this work is funded by the deutsche forschungsgemeinschaft ( german research foundation ) through the research training group 1294 ` analysis , simulation and design of nanotechnological processes ' at the karlsruhe institute of technology .",
    "h.  li , numerical simulation of a micro - ring resonator with adaptive wavelet collocation method , ph.d .",
    "thesis , karlsruhe institute of technology , germany , online available from http://digbib.ubka.uni-karlsruhe.de/volltexte/1000024186 ( july 2011 ) .",
    "e.  m. tentzeris , r.  l. robertson , j.  f. harvey , l.  p.  b. katehi , stability and dispersion analysis of battle - lemarie - based mrtd schemes , ieee trans .",
    "microwave theory and techniques 47  ( 7 ) ( 1999 ) 10041013 ."
  ],
  "abstract_text": [
    "<S> this paper investigates an adaptive wavelet collocation time domain method for the numerical solution of maxwell s equations . in this method a computational grid is dynamically adapted at each time step by using the wavelet decomposition of the field at that time instant . in the regions where the fields are highly localized , the method assigns more grid points ; and in the regions where the fields are sparse , there will be less grid points . on the adapted grid , </S>",
    "<S> update schemes with high spatial order and explicit time stepping are formulated . </S>",
    "<S> the method has high compression rate , which substantially reduces the computational cost allowing efficient use of computational resources . </S>",
    "<S> this adaptive wavelet collocation method is especially suitable for simulation of guided - wave optical devices .    </S>",
    "<S> * keyword * : maxwell s equations , time domain methods , wavelets , wavelet collocation method , adaptivity </S>"
  ]
}
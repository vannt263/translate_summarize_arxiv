{
  "article_text": [
    "let @xmath3\\times \\cdots\\times [ 0,l_d]$ ] be a bounded , periodic domain .",
    "let @xmath4 be a basis of a @xmath5-dimensional lattice , and define @xmath6 note that to make the boundary of @xmath7 periodic , we require that @xmath8 be divisible by @xmath9 , for @xmath10 .",
    "endow @xmath7 with the usual inner product @xmath11 for any function @xmath12 , we say @xmath13 is _ shift orthogonal _",
    ", if it satisfies _ shift orthogonality constraints _ : @xmath14 shift orthogonality constraints arise naturally in many applications of science and engineering .",
    "however , due to the numerical and theoretical challenges in imposing the shift orthogonality constraints , these constraints have not received much attention in the literature .",
    "the main contribution of this paper is to propose a very fast algorithm for finding a shift orthogonal functions that is closest in @xmath0 norm to a given function ( i.e. projection to the set of shift orthogonal functions ) .",
    "note that shift orthogonal functions constitute a set and not a vector space .",
    "there are many potential applications for the algorithm described in this paper . as an example , in section [ section : applicationcpw ] we demonstrate how the algorithm increases the speed in computing cpws described in @xcite .",
    "further applications of the algorithm will be investigated in subsequent research projects .    in order to devise the algorithm",
    "we introduce the notion of shift orthogonal basis functions ( sobfs ) and develop some theory for them .",
    "for one dimensional periodic domain @xmath15 $ ] we call a family of functions @xmath16 with @xmath17 , _ shift orthogonal basis functions ( sobfs ) _ if they form a complete orthonormal set of basis for space @xmath18)$ ] .",
    "we refer to superscript index @xmath19 as the _ depth index _ , and subscript index @xmath20 as the _ shift index_. for higher dimensional periodic domains , we call a complete set of basis sobfs if they are formed from the tensor product of one dimensional sobfs . section [ section : definitionsopw ] describes a concrete example of sobfs with certain nice properties .    it turns out that sobfs have been of interest to quantum mechanics and signal analysis communities ( i.e. although , the orthonormal basis considered in these literatures are usually defined in domain @xmath21 , instead of periodic bounded domains ) . in @xcite , a numerical example of sobfs , called phase space wannier functions , are provided that are exponentially localized in time and frequency domain and for which the matrix of the laplacian operator is near - diagonal ( i.e. see ( * ? ? ?",
    "* equations 2.1 , 2.3 and 2.5 ) ) .",
    "reference @xcite provides a simple description of certain sobfs , called wilson basis , whose fourier transform have specific bimodal form ( see ( * ? ? ?",
    "* equations 1.9a and 1.9b ) ) .",
    "an explicit example of wilson basis with exponential decay in time and frequency domain is also constructed in @xcite using rapidly converging superpositions of gaussians ( i.e. however , the laplacian matrix is no longer near - diagonal for this basis ) .",
    "other examples of wilson basis are presented in @xcite and @xcite .",
    "the remainder of this paper consists of the following : section [ section : theorysobf2d ] develops some theory regarding sobfs that is used in devising the fast algorithm .",
    "section [ section : projectionalgorithm ] contains the description of the fast algorithm and highlights some of its important properties including its computational complexity .",
    "section [ section : definitionsopw ] describes a concrete example of sobfs , which we call shift orthogonal plane waves ( sopws ) , that have certain nice properties .",
    "section [ section : applicationcpw ] gives an application of the fast algorithm in generating cpws .",
    "section [ section : conclusion ] presents some concluding remarks .",
    "appendices [ section : variation ] , [ section : samedepth ] and [ section : firstsecondderivative ] contain proofs for properties of sopws mentioned in section [ section : definitionsopw ] .",
    "this section develops some theory for sobfs in multidimensional domains",
    ". some of this theory also appears in @xcite . for the ease of exposition ,",
    "the concepts are illustrated for 2d domain .",
    "the results to other dimensions can be extended in the trivial way .    by scaling ,",
    "it is assumed without loss of generality that @xmath3\\times [ 0,l_2]$ ] and the length of the shift in each coordinate is unit length ( i.e. @xmath22 and @xmath23 are replaced by @xmath24 and @xmath25 , respectively ) .",
    "because sobfs in 1d form an orthonormal set of basis , tensor product can be used to form orthonormal set of basis for 2d .",
    "that is , any function @xmath26 can be expressed by @xmath27    in what follows @xmath28 and @xmath29 and their primes ( i.e. @xmath30 , @xmath31 , etc . )",
    "take value from @xmath32 .",
    "indices @xmath33 , @xmath34 and their primes take value from @xmath35 .",
    "indices @xmath36 and @xmath37 and their primes take value from @xmath38 . also addition and subtraction for indices @xmath33 , @xmath34 and their primes are performed in module @xmath22 .",
    "similarly , addition and subtraction for indices @xmath36 , @xmath37 and their primes are performed in module @xmath23 .",
    "note that @xmath39 also , suppose @xmath40 because sobfs in 2d form an orthonormal set : @xmath41    we use a specific multi - index notation @xmath42 to refer to the entries of an infinite dimensional vector . to be rigorous",
    ", there is a ( non - unique ) one - to - one and onto mapping @xmath43 indeed , by @xmath44 , we mean @xmath45 ; however , to avoid cumbersome notation , we just use @xmath44 to refer to the positive integer instead . as it will be seen shortly , @xmath28 and @xmath33",
    "are related to depth index and shift index for the first coordinate , respectively . similarly , @xmath29 and",
    "@xmath36 are related to the depth index and shift index for the second coordinate , respectively .",
    "we also use multi - index notation @xmath46 to refer to the entries of a vector of length @xmath47 . again , to be rigorous , there is a ( non - unique ) one - to - one and onto mapping @xmath48 indeed , by @xmath49 , we mean @xmath50 ; however , to avoid cumbersome notation , we just use @xmath49 to refer to the elements of @xmath51 .    in view of , function @xmath13 can be represented in sobfs basis using infinite dimensional vector @xmath52 also for any infinite dimensional vector @xmath53 , define @xmath54    for any infinite dimensional vector @xmath55 and all pairs @xmath49 , define transformation @xmath56 in the following way : @xmath57 note that from , @xmath58 in view of , for @xmath59 and @xmath60 : @xmath61 define set of shift orthogonal as follow : @xmath62 observe that @xmath63 is only a set and not a subspace .",
    "moreover , equation implies that @xmath64 is shift orthogonal if and only if @xmath65 ( i.e. see theorem [ theorem:3equivalence2d ] ) .",
    "define @xmath66-transform to be operator @xmath67 defined by @xmath68 the intuition for @xmath66-transform is that for every fixed @xmath28 and @xmath29 , if @xmath69 and @xmath70 are thought as @xmath71 matrices then @xmath72 where @xmath73 is the 2d discrete inverse fourier transform .",
    "the inverse of @xmath66-transform , @xmath74 , is @xmath75 similar to the above , @xmath76-transform can be written as @xmath77 where @xmath78 is the 2d discrete fourier transform .",
    "the importance of @xmath66-transform appears in the following two theorems :    for given function @xmath13 , the followings are equivalent :    1 .",
    "@xmath13 is shift orthogonal .",
    "2 .   @xmath65 .",
    "3 .   for all @xmath79 , @xmath80    [ theorem:3equivalence2d ]    for given functions @xmath13 and @xmath81 ,",
    "the followings are equivalent :    1 .   for all @xmath59 and @xmath60 , @xmath82 2 .   for all @xmath83 and @xmath84 , @xmath85 3",
    ".   for all @xmath86 and @xmath87 , @xmath88    [ theorem : shiftperpendicular2d ]    in order to prove the above two theorems , we need to introduce some more notations and concepts .",
    "we use multi - index notation to define matrices in the following way : identify entries of matrix @xmath89 by @xmath90 , where the index to the left of `` @xmath91 '' determines the row number of the entry and the index to the right of `` @xmath91 '' determines the column number of the entry .",
    "let @xmath92 be the @xmath93 matrix defined by @xmath94 let @xmath95 to be infinite dimensional square matrix defined by @xmath96 finally , for any infinite dimensional vector @xmath55 , let @xmath97 be the @xmath98 matrix defined by @xmath99 note that @xmath92 and @xmath95 are unitary matrix ( i.e. although the latter is infinite dimensional and by unitary we mean that @xmath100 is infinite dimensional diagonal matrix whose diagonal entries are one ) . to see this ,",
    "observe that for example , @xmath101    another important property that @xmath92 and @xmath95 have is that if @xmath97 is multiplied on left by @xmath92 and on right by @xmath102 , then @xmath103 to see the above , note that @xmath104 where was used for the last equality .",
    "equality is very significant : it shows how @xmath97 can be turned into a `` pseudo - diagonal '' matrix using unitary matrices @xmath92 and @xmath95 .",
    "equation is used extensively , in the remainder of this section .    finally , for any two infinite dimensional vectors @xmath105 and",
    "@xmath106 : @xmath107 for observe that @xmath108 now we are ready to prove theorem [ theorem:3equivalence2d ] and [ theorem : shiftperpendicular2d ] .",
    "* proof of theorem [ theorem:3equivalence2d ] : * the equivalence of 1 and 2 follows easily from ( i.e. with @xmath109 ) and the definition of @xmath63 .",
    "it remains to prove the equivalence between 2 and 3 :    set @xmath110 .",
    "equation ( i.e. with @xmath111 ) implies that @xmath112 if and only if @xmath113 for all @xmath34 , @xmath33 , @xmath37 and @xmath36 ( i.e. matrix @xmath114 is the @xmath93 identity matrix ) .",
    "next let @xmath115 compute @xmath116 in two ways : on one hand , because @xmath95 is unitary @xmath117 on the other hand , yields that @xmath118 now if @xmath119 is the identity matrix ( i.e. @xmath120 ) , then from and @xmath92 being unitary , one concludes that @xmath116 is the identity matrix .",
    "hence , by , it must be the case that @xmath121 for all @xmath122 .",
    "conversely , if the above holds , then by , @xmath116 is the identity matrix .",
    "therefore , because @xmath92 is a unitary matrix , @xmath123 would be the identity matrix as well .",
    "equation , yields that @xmath124 hence , @xmath114 is the identity matrix , which implies @xmath112 .",
    "* proof of theorem [ theorem : shiftperpendicular2d ] : * the equivalence of 1 and 2 follows easily from and the fact that @xmath125 is equivalent to @xmath126 it remains to show that is equivalent to 3 .",
    "let @xmath127 and @xmath128 .",
    "equation , yields that is equivalent to @xmath129 for all @xmath34 , @xmath33 , @xmath37 and @xmath36 ( i.e. matrix @xmath130 is the @xmath93 zero matrix ) .",
    "next let @xmath131 compute @xmath132 in two ways : on one hand , because @xmath95 is unitary @xmath133 on the other hand , yields that @xmath134 now if @xmath135 is the zero matrix , then implies that @xmath132 is the zero matrix . hence , by , it must be the case that @xmath136 for all @xmath122 .",
    "conversely , if the above holds , then by , @xmath132 is the zero matrix .",
    "therefore , @xmath137 would also be the zero matrix .",
    "equation yields that @xmath138 hence , @xmath130 is the zero matrix , which implies .    for any function @xmath139 ,",
    "let @xmath140 denote the projection of @xmath81 into the set of shift orthogonal functions ; that is , @xmath141 indeed using sobfs basis , @xmath142 where for any @xmath143 , @xmath144 observe that in the above two definitions the minimum arguments are not necessarily unique , and @xmath140 and @xmath145 are sets .",
    "define operator @xmath146 by @xmath147 where @xmath148 is a fixed infinite dimensional real vector with unit @xmath0 norm .    for any @xmath143 ,",
    "@xmath149 [ lemma : projection2d ]    suppose @xmath112 and set @xmath150    note that , @xmath151 where equalities similar to were used for the second last inequality . now minimizing @xmath152 amounts to solving @xmath47 subproblems : for every @xmath86 and @xmath87 , solve @xmath153 the constraints in the above subproblems are due to @xmath112 and equivalence of 2 and 3 in theorem [ theorem:3equivalence2d ] .",
    "the solutions to the above subproblems are exactly @xmath154 that is , projection of @xmath155 into an infinite dimensional ball of radius 1 . in particular , set @xmath156 ( i.e. choose a fixed real valued vector in the second case above ) , in which case , @xmath157 would be an element of @xmath145 .    [",
    "remark : realness ] theorem 2.2 in paper @xcite and definition of operator @xmath158 , yields that if infinite dimensional vector @xmath106 is real valued , then @xmath159 is also real valued .",
    "this is why in the case @xmath160 , we assign to operator @xmath158 the fixed infinite dimensional vector @xmath148 ; which is real valued and has unit @xmath0 norm . indeed , ( as it is apparent in the proof of lemma [ lemma : projection2d ] )",
    "had we defined operator @xmath158 to output all infinite dimensional ( complex ) vector of unit @xmath0 norm in the case @xmath160 , then @xmath159 would have been a set equal to @xmath161 ; however , some elements of @xmath159 would have been complex valued .",
    "for computational purposes , only a finite number of sobfs basis are used to represent a function . in this section , assume that for the first coordinate all sobfs basis whose depth index is smaller or equal to @xmath162 and for the second coordinate all sobfs basis whose depth index is smaller or equal to @xmath163 are used to denote functions in @xmath164 .",
    "that is , @xmath165    the analysis done in section [ section : theorysobf2d ] can be adapted for this situation by simple modification . in particular , index @xmath28 ( and @xmath30 ) takes value from @xmath166 instead of @xmath32 and index @xmath29 ( and @xmath167 ) takes value from @xmath168 instead of @xmath32 .",
    "the adapted definition for set @xmath63 with finite depth indices is @xmath169    as noted earlier , an important question that arises in optimization problems that involve shift orthogonality constraints is to find @xmath140 for a given function @xmath81 ; that is , find shift orthogonal function @xmath13 that minimizes @xmath170 .",
    "when functions are expressed in terms of tensor product of one dimensional sobfs basis ( i.e. with corresponding depth indices smaller or equal to @xmath162 and @xmath163 ) , then the question is equivalent to : given @xmath171 , solve @xmath172    result of lemma [ lemma : projection2d ] in section [ section : theorysobf2d ] implies that the solution to problem can be obtained using the procedure in algorithm [ algorithm : proceduren2d ] .",
    "all the results that were developed in section [ section : theorysobf2d ] can also be easily adapted for domains with other dimensions .",
    "for example suppose @xmath3\\times [ 0,l_2]\\times [ 0,l_3]$ ] ( i.e. using appropriate scaling , it is assumed that the length of the shift along each coordinate is 1 ) , and let @xmath173 three dimensional version of algorithm [ algorithm : proceduren2d ] is :    finally , the one dimensional version of algorithm [ algorithm : proceduren2d ] for domain @xmath174 $ ] ( i.e. again using appropriate scaling , it is assumed that the length of the shift is 1 ) and @xmath175 is the following :      this sections describes the computational complexity of algorithm [ algorithm : proceduren2d ] and highlights some of the important properties of this algorithm .",
    "the results stay the same for domains with dimensions other than @xmath176 .",
    "let @xmath177 be the size of input vector @xmath178 ; which indicates the number of coefficients used to represent the given function .",
    "algorithm [ algorithm : proceduren2d ] consists of three `` for '' loops .",
    "each iteration in the first and the last  for \" loop can be computed using @xmath179 operations via inverse fast fourier transform and fast fourier transform , respectively .",
    "each iteration in the second  loop \" can be done using @xmath180 .",
    "therefore , algorithm [ algorithm : proceduren2d ] can be performed using @xmath181 operations , which leads to computational complexity of @xmath182    furthermore , note that each of the  for \" loops in algorithms [ algorithm : proceduren2d ] can be done in parallel .",
    "this enhances the speed of the algorithm even further and makes it suitable for inputs with large dimensions .",
    "another nice property of algorithm [ algorithm : proceduren2d ] is that for real valued input vector @xmath183 , it outputs a real valued vector @xmath184 ( i.e. recall remark [ remark : realness ] ) .",
    "the importance of this property is that if function @xmath81 and sobfs @xmath185 are real valued then @xmath186 would be a real valued vector , and therefore using algorithm [ algorithm : proceduren2d ] , the projected @xmath140 would also be real valued .",
    "this section provides an example of real valued sobfs with certain nice properties called shift orthogonal plane waves ( sopws ) . as it will be seen",
    "shortly , sopws are suitable for numerical computation because there exist an exact prescription of them in terms of fourier basis .",
    "therefore , functions can be expanded in terms of sopws very efficiently using fft and its inverse .",
    "consider 1d domain @xmath174 $ ] with periodic boundary and by scaling ( i.e. replacing @xmath187 by @xmath188 ) assume that @xmath189 . furthermore , suppose that @xmath187 is even .",
    "this assumption is made so that the formulas provided in this section are easier to express .",
    "nevertheless , the assumption that @xmath187 is even is not very restrictive as the parity of @xmath187 is not significant in many applications .",
    "recall that functions @xmath190 as well as @xmath191 form orthonormal basis for @xmath164 .",
    "denote the @xmath187-th roots of unity by @xmath192 shift orthogonal plane waves ( sopws ) are denoted by @xmath193 and defined in the following way : set @xmath194    figure [ figure : first_6 ] plots sopws given by equations and with depth index ranging from 1 to 6 and shift index equal to @xmath195 .    .",
    "]     +    . ]",
    "+    . ]",
    "+    . ]",
    "+    . ]",
    "+    . ]    using the expression @xmath196 and after some calculations one can verify that for @xmath197 , @xmath198 first note that @xmath199 .",
    "moreover , it is straightforward using identity to verify that @xmath200 form an orthonormal set .",
    "finally , @xmath200 is complete in @xmath164 because of relations , , and completeness of @xmath201 .",
    "hence , the set of sopws defined by and is an example of sobfs .",
    "equations and can be re - written to represent sopws @xmath200 in terms of : @xmath202 and in closed form : @xmath203   \\quad \\hbox{for $ k$ even } , \\notag \\\\",
    "\\theta^k_j(x ) & = \\frac{2}{l}(-1)^{\\frac{k-1}{2}}\\cos\\left(\\frac{2\\pi ( \\frac{kl}{2}-\\frac{l}{4})(x - j)}{l}\\right)\\left [ \\frac{\\sin(\\pi(\\frac{l}{2}-1)(x - j)/l)}{\\sin(\\pi ( x - j)/l ) } + \\sqrt{2 } \\cos(\\frac{\\pi ( x - j)}{2})\\right ]   \\quad \\hbox{for $ k$ odd}. \\notag\\end{aligned}\\ ] ]    equations , and equations , , suggest that fft can be used to switch between fourier basis and sopws efficiently and easily .",
    "this is very important for computational purposes as it provides an efficient method to represent functions in terms of sopws .",
    "another important property of the sopws is that @xmath204 are the solutions to a specific variational problem .",
    "this is shown in appendix [ section : variation ] .",
    "the final important property of @xmath204 is that for any @xmath19 and @xmath20 @xmath205 this can be seen by direct computation ( see appendix [ section : firstsecondderivative ] ) or using euler - lagrange equations for the variational problem ( i.e. see appendix [ section : samedepth ] ) .",
    "a disadvantage that sopws have , in comparison to fourier basis is that sopws are not eigenfunctions of the derivative operator .",
    "nevertheless , it is shown in appendix [ section : firstsecondderivative ] that for any @xmath19 and @xmath20 , @xmath206",
    "this section outlines how the projection algorithm described in section [ section : projectionalgorithm ] is used to compute compressed plain waves ( cpws ) ( i.e. see @xcite ) .",
    "the shift orthogonality constraints in the construction of cpws makes their computation challenging and numerically inefficient .",
    "however , applying the projection algorithm circumvents these difficulties .      to simplify our discussion",
    ", we only consider @xmath3\\times [ 0,l_2]$ ] , in 2d with periodic boundary conditions ; the algorithms below can be straightforwardly extended to other dimensions .",
    "we use sopws given by equations and as the sobfs used in section [ section : projectionalgorithm ] .",
    "in particular , we expand the given function @xmath81 in terms of sopws : @xmath211 operators @xmath212 and @xmath213 are defined in the similar way to definitions and : @xmath214 and @xmath215    other examples of sobfs could also be used . for this application ,",
    "sopws were chosen mainly due to the efficiency in calculating the result of operators @xmath212 and @xmath213 from fourier coefficient ( i.e. recall from section [ section : definitionsopw ] that fft and its inverse provide an efficient procedure to switch between representation of a function in fourier basis @xmath216 s and its representation in sopws @xmath204 s ) .    by introducing an auxiliary variable @xmath217 ,",
    "the constrained optimization problem is equivalent to the following problem : @xmath218 which can be solved by an algorithm based on the bregman iteration ( i.e. see @xcite ) .",
    "similarly , @xmath221 is obtained by solving the optimization problem efficiently .",
    "suppose that the first @xmath222 levels @xmath223 are already constructed and let @xmath224 .",
    "in this case , the goal is to find @xmath225 satisfying @xmath226 define @xmath227 using the sopws basis , the above problem is equivalent to solving the following problem in sopws frequency space : @xmath228 vector @xmath106 is given and the objective is to find vector @xmath55 closest to @xmath106 that is shift orthogonal and perpendicular to @xmath229 to @xmath230 .",
    "theorems [ theorem:3equivalence2d ] and [ theorem : shiftperpendicular2d ] yield that in order to solve problem , for each @xmath33 and @xmath36 one needs to find vector @xmath231 that is closest to @xmath232 , perpendicular to @xmath233 for @xmath234 , and lives on the unit sphere .",
    "moreover note that , again by theorems [ theorem:3equivalence2d ] and [ theorem : shiftperpendicular2d ] , @xmath235 form an orthonormal set of vectors for each @xmath33 and @xmath36 , because elements of @xmath236 are constructed such that they are shift orthogonal and orthogonal to shift span of each other .",
    "hence , @xmath231 can be computed in two steps :              figure [ fig : bcpws ] plots the first four bcpws in 1d using the proposed algorithms .",
    "these results are very consistent with the results in @xcite .",
    "table [ tab : efficiencycomparisons ] , highlights the computational speed gained by using the new procedure outlined in this section .",
    "the proof of theorems [ theorem : firstderivative ] and [ theorem : secondderivative ] are very similar .",
    "the idea of the proof is simple : write sopws basis in terms of fourier basis using formulas and , take appropriate number of derivatives , and then use formulas and to write back the result in terms of the sopws basis .",
    "* proof of theorem [ theorem : firstderivative ] : * first observe that because @xmath241 , it suffices to find @xmath242 and then by shifting , the corresponding formulas for sopws with other shift indices follow easily .",
    "now using formulas and , @xmath243 now from equations and using lemma [ lemma : sumomega ] , @xmath244 where @xmath245 on the other hand , equation implies that for @xmath246 , @xmath247 therefore , @xmath248 again , equation implies that for @xmath249 , @xmath250 therefore , @xmath251 substituting , and into equation yields that @xmath252.\\ ] ] this completest the proof .    *",
    "proof of theorem [ theorem : secondderivative ] : * again observe that because @xmath241 , it suffices to find @xmath253 and then by shifting , the corresponding formulas for sopws with other shift indices follow easily .",
    "now using formulas and , @xmath254 now from equations and using lemma [ lemma : sumomega ] , @xmath255 where @xmath256/3 \\qquad & \\hbox{if } j=0 , \\\\ ( -1)^{k}(4k-2)\\csc^2(\\pi j / l)-(-1)^k(2k-1)l    & \\hbox{if $ j$ is odd } , \\\\",
    "2\\csc^2(\\pi j / l)-(k^2+(k-1)^2)l   & \\hbox{otherwise}. \\end{cases}\\ ] ] on the other hand , from , @xmath257 also from , @xmath258 substituting , and into equation and simplifying yields that @xmath259 this completest the proof .",
    "v.  ozolin , r.  lai , r.  caflisch , s.  osher , _ compressed plane waves yield a compactly supported multiresolution basis for the laplace operator _ , proceedings of the national academy of sciences , 111 ( 2014 ) , pp . 16911696 .",
    "e.  laeng , _ une base orthonormale de @xmath260 do nt les lments sont bien localiss dans lespace de phase et leurs supports adapts  toute partition symtrique de lespace des frquences _ , c. r. acad .",
    "paris , 311 ( 1990 ) , pp ."
  ],
  "abstract_text": [
    "<S> this paper presents a fast algorithm for projecting a given function to the set of shift orthogonal functions ( i.e. set containing functions with unit @xmath0 norm that are orthogonal to their prescribed shifts ) . </S>",
    "<S> the algorithm can be parallelized easily and its computational complexity is bounded by @xmath1 , where @xmath2 is the number of coefficients used for storing the input . to derive the algorithm , a particular class of basis called shift orthogonal basis functions </S>",
    "<S> are introduced and some theory regarding them is developed . </S>"
  ]
}
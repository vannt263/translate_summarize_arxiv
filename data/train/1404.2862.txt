{
  "article_text": [
    "this paper introduces a diagrammatic formalism for computation and for information processing . behind this endeavor",
    "is the observation that the combinatorial properties of knot diagrams mimic principles pertaining to conservation and to manipulation of information in networks .",
    "our approach is low - dimensional topological , whereas previous diagrammatic descriptions of information flow in networks have been in terms of labeled graphs .     a tangle machine with colours suppressed.,scaledwidth=90.0% ]",
    "we construct diagrammatic models called _ tangle machines _ , or just _ machines _ for short , represented by labeled versions of diagrams such as those of figure  [ f : machine ] , that represent entities and relationships between those entities . unlike labeled graphs , in which edge @xmath0 from vertex @xmath1 to vertex @xmath2 represents a transition from the label of @xmath1 to the label of @xmath2 , the basic building block of a tangle machine",
    "is an _ interaction _ , in which _ agent _ @xmath3 causes a transition from colours of _ input patients _",
    "@xmath4 to colours of corresponding _ output patients _ @xmath5 .",
    "a tangle machine ( which we call a _ machine _ for short ) makes explicit the _ cause _ of a transition . from one perspective",
    ", a machine is a computational scheme , a sort of `` planar algorithm '' wherein interactions represent basic computations . from the dual perspective ,",
    "a machine is a network within which information is manipulated at interactions and then transmitted further down to registers at other interactions .",
    "information can be both a patient ( _ e.g. _ an input data stream ) and an agent ( _ e.g. _ commands of a computer programme ) .",
    "this aspect of information is captured by tangle machines but not necessarily by labeled graphs .",
    "the novel feature of tangle machines is their flexibility . whereas competing graphical models are rigid",
    ", tangle machines admit a natural local notion of _ equivalence_. roughly speaking , two machines are equivalent if one can be perfectly reproduced from the other .",
    "machine equivalence parallels the notion of _ ambient isotopy _ in low dimensional topology .",
    "we consider a ` crossing ' ( which we call an _ interaction _ ) to represent a computation ( in the sense of computer science or of automata ) or a fusion of information whose basic symmetries are encapsulated by the three _",
    "reidemeister moves _ of figure  [ f : local_moves_machines1 ] in section  [ s : machines][ss : equivalence ] .",
    "topology suggests that these three local rewrite moves are in a sense different aspects of a single operation consisting of rotating a plane onto which an embedded object is projected .",
    "local features such as implementation and performance of computations or of information manipulations modeled by the tangle machine may be different for networks modeled by equivalent machines , but we consider the global _ information content _ of such networks to be the same .",
    "we may thus use the tangle machine formalism to select , from among many equivalent models which ` perform the same task ' , the model ( and thus the network ) best suited for a specified application .",
    "this concept is illustrated in our examples :    * machines representing networks of distributed information processing ( section  [ s : information ] ) .",
    "* machines representing adiabatic quantum computations ( section  [ s : aqc ] ) .",
    "* machines representing iteration and markov chains ( section  [ s : recursion ] ) .    all of the examples make use of the tautological fact that colours of endpoints are _ machine invariants_. in each example , in order to illustrate the operational meaning of machine equivalence , three equivalent machines with different local features are examined .",
    "our paper is organized as follows . in the introduction",
    "we give a toy example roughly explaining what a tangle machine is , followed by a summary of our examples . in section  [ ss : context ] we discuss several aspects of how tangle machines fit into a wider scientific context . in section  [ s : machines ] we define tangle machines and tangle machine equivalence , deferring technical details to the appendix .",
    "following this are our examples , which can be read independently from one another , followed by the conclusion .      to give some idea of the sorts of things that tangle machines can be useful for , consider the following toy example.three transmitting devices @xmath6 , @xmath7 , and @xmath8 continuously stream data @xmath9 , @xmath10 , and @xmath11 . our task is to combine these data streams , eliminating redundancy ( _ e.g. _ because of the problem of double counting @xcite ) .",
    "two schemes to combine the data streams are represented by the machines in figure  [ f : toy ] .",
    "[ c]@xmath10 [ c]@xmath9 [ c]@xmath11 [ c]@xmath12 [ c]@xmath13 [ l]@xmath14 [ r]@xmath15 [ l]@xmath16 [ r]@xmath17 [ r]@xmath18   two equivalent data stream fusion networks described by two equivalent tangle machines.,title=\"fig:\",scaledwidth=70.0% ]    in the left machine , combine @xmath9 and @xmath10 with @xmath11 to obtain fused data streams @xmath19 and @xmath20 .",
    "we indicate that these two fusions are performed independently by thickening the strand labeled @xmath11 .",
    "we read the fusion from bottom to top because the overcrossing arc is directed from left to right .",
    "if it were oriented from right to left , we would read from top to bottom and we would be filtering out the data stream @xmath11 from @xmath19 and from @xmath20 . at the top , @xmath19 is combined with @xmath20 using a possibly different operation @xmath13 to combine the data streams .",
    "the left and the right machine describe equivalent data stream fusion schemes , which is visually indicated by the fact that they are related by sliding one overcrossing arc over another .",
    "indeed , the result of the data stream fusion in the right machine is @xmath21 , which is the same combined data stream as in the left machine because redundant double  appearance of @xmath11 in @xmath19 and @xmath20 is eliminated by @xmath13 .",
    "this redundancy elimination is possible only because we know that @xmath6 and @xmath7 independently fused their data streams with @xmath8 .",
    "however , there is an important difference between these two schemes in figure  [ f : toy ] .",
    "imagine that , at some time @xmath22 , device @xmath7 becomes faulty .",
    "in this case , the left machine is superior because it contains the intermediate data stream @xmath19 which might be useful even when @xmath23 is junk .",
    "conversely , if @xmath8 becomes faulty at some time @xmath24 , then the right machine would be preferred .",
    "the top overcrossing arc might slide back and forth at different times .",
    "thus , the machines in our toy example might be describing the underlying logic of a simple self - optimizing fault - tolerant data stream fusion network .",
    "these ideas will recur in various contexts throughout the paper :    1 .",
    "reversibility and redundancy elimination hardwired into the formalism ( see section  [ s : machines][ss : quandle ] ) .",
    "hardwired independence ( the thickened overcrossing arc ) of updates .",
    "independent updates commute , as expressed by the @xmath25 move of figure  [ f : local_moves_machines ] in section  [ s : machines][ss : equivalence ] .",
    "3 .   local directionality ( direction of the thickened arc ) but no global ` time line ' within the machine .",
    "4 .   a flexible setup in which equivalent machines have different performance features .",
    "classical information : :    the machines of section  [ s : information ] , whose arcs are coloured by    entropies , represent distributed information processing .",
    "the    difference between input and output entropies represents the capacity    of the computation , and the computation is said to be _ optimal _ if    this number equals the mutual information of the input and the output .",
    "we exhibit three equivalent machines which represent computations with    are locally optimal , locally suboptimal , and abstract .",
    "this paradigm ,    which we plan to study further in the future , takes the formalism of    tangle machines into the realm of information theory .",
    "adiabatic quantum computation : :    section  [ s : aqc ] discusses how machines can represent networks of    adiabatic quantum computations , and presents equivalent machines which    perform the same computations , but with different energy gaps .",
    "iteration : :    by concatenating copies of the same machine one beside the other ,    machines may represent iterative computations and markov chains .",
    "we    exhibit three machines , one of which has a stochastic transition    matrix , and two of which of which have a stochastic two - step    transition matrix but not a one - step transition matrix .",
    "one of these    represents a feed - forward system , while the other represents a    feedback loop .",
    "this is discussed in section  [ s : recursion ] .",
    "the authors thank louis kauffman and marius buliga for useful comments .",
    "dm thanks also dror bar - natan for useful suggestions .",
    "the idea to model computations using tangle diagrams and related structures from low dimensional topology was pioneered by louis kauffman .",
    "motivated by spencer  brown s _ laws of form _",
    "@xcite , kauffman used knot and tangle diagrams to study automata @xcite , nonstandard set theory , and lambda calculus @xcite .",
    "the diagrammatic calculus of braids ( braids are a special class of tangles ) also lies at the basis of topological quantum computing see _",
    "e.g. _ @xcite .",
    "buliga has suggested to represent computations using a calculus of coloured tangles @xcite . in another direction ,",
    "a different diagrammatic calculus , originating in higher category theory , has been used in the theory of quantum information see _",
    "e.g. _ @xcite .",
    "we would argue that our approach is conceptually distinct from all previous approaches for the following reasons .",
    "first , on the practical level , we have not yet found direct overlap between our applications and the applications of other low - dimensional topological approaches to computation we do not know how we might describe _",
    "e.g. _ physical motion of anyons , nor do we know how previous diagrammatic approaches could naturally describe any of our examples . secondly , tangle machines place primary emphasis on a distributive property of computation and of information fusion ( compare  @xcite ) via the r3 move of figure  [ f : local_moves_machines1 ] in section  [ f : machine][ss : equivalence ] , as opposed to other approaches in which the lead role is played by associativity of a ` stacking ' operation .",
    "thirdly , in contrast with most other approaches , tangle machines are coloured .",
    "colours of registers represent information and are a fundamental part of our structure .",
    "interactions are coloured by binary operations representing fusion or computation schemes , which may differ for different interactions .",
    "a fourth difference is that our interactions can not be merged or split , so that we can graphically represent independence or indistinguishability of operations , which could not be deduced from the colours alone .",
    "a fifth difference is that only our overstrands are oriented and that their orientations are independent of one another .",
    "thus there is no global time line and directionality is localized at crossings .",
    "for these reasons we do not believe that it is possible to usefully reformulate tangle machines in , for instance , the language of braided monoidal categories , that is the language of categorical quantum mechanics .",
    "the combinatorial paradigm of knot theory manifests a new philosophy of what constitutes _ algebra _",
    "for the combinatorial knot theorist , algebra no longer consists merely of formal manipulations of strings of symbols , but rather of local rewriting moves on labeled figures in the plane and in higher dimensions .",
    "this new philosophy of diagrammatic algebra has become particularly well established in the representation theory of quantum groups , in higher category theory , and in quantum field theory .",
    "perhaps knot diagrams , tangle diagrams , and related objects are logical structures , algebraic structures , and categorical structures as much as they are topological structures ( see _ e.g. _ @xcite ) . in this paper , tangle machines are considered primarily as algebraic structures which capture and which highlight an underlying distributive aspect of computation and of information fusion .",
    "turing machines are the heart of theory of computation and complexity theory @xcite .",
    "they formalize the notion of an algorithm or of an effective procedure , and they define the class of computable functions .",
    "there are profound interrelationships between turing machines and low dimensional topology .",
    "for example , the classification of four - manifolds is undecidable due to the unsolvability of the word problem for finitely presented groups ( see _ e.g. _ @xcite ) .",
    "but there is an ongoing debate as to whether the non - mathematical church ",
    "turing thesis holds in general , namely , whether any ( intuitively ) computable function is realizable by a turing machine .",
    "it essentially questions the expressiveness of the turing model in various non-(turing ) standard settings . to quote copeland @xciteit is an open question whether there can be actual deterministic physical processes that , in the long run , elude simulation by a turing machine , and in particular whether any such hypothetical process could usefully be harnessed in the form of a calculating machine ( a hypercomputer ) that could solve the halting problem for a turing machine amongst other things .",
    "it is also an open question whether any such unknown physical processes are involved in the working of the human brain , and whether humans can solve the halting problem . _",
the present paper suggests that coloured knots , tangles , spaces , and related structures can be computers .",
    "indeed , the term _ tangle machine _ imitates _",
    "turing machine_. the _ computation _ of a tangle machine involves reading off colours of a chosen set of _ output registers _ given a colouring of a chosen set of _ input registers _ ( assuming that the latter uniquely dictates the former ) .",
    "a tangle machine may thus capture a certain sort of network computation . in future work",
    "we plan to investigate tangle machine simulation of turing machines and of neural nets .",
    "in this section we introduce the diagrammatic formalism of _ tangle machines _ , which we call _ machines _ for short .",
    "we consider a set @xmath26 , whose elements we call _ colours _ , equipped with a set @xmath27 of binary operations from @xmath28 to @xmath26 .",
    "we think of elements of @xmath26 as representing _ pieces of information _ and of elements of @xmath27 , which we call _ updates _ , as representing _ information fusion _ or _ basic computation _ , although the precise interpretation of these terms is different in each of sections  [ s : information ] ,  [ s : aqc ] ,  and  [ s : recursion ] .",
    "our updates are required to satisfy three properties :    idempotence : : :    @xmath29 for all @xmath30 and    for all @xmath31 .",
    "reversibility : : :    the map @xmath32 , which maps    each colour @xmath30 to a corresponding colour    @xmath33 , is a bijection for all    @xmath34 . in particular ,",
    "if    @xmath35 for some    @xmath36 and for some    @xmath31 , then @xmath37 .",
    "we    interpret this condition to mean for example that information fusion    does not forget information , because @xmath6 can uniquely be    reconstructed from @xmath38 together with    @xmath13 and @xmath7 .",
    "distributivity : : :    for all @xmath36 and for all    @xmath39 :    @xmath40    we interpret this equation to mean for example that information fusion    eliminates redundancy .",
    "thus , information @xmath8 which    appeared once in @xmath41 and once in    @xmath42 is not double - counted towards    @xmath43 .",
    "we call @xmath44 a",
    "_ @xmath27family of quandles _ or just a _",
    "quandle_.    the low - dimensional topology literature contains several variants on our notion of a @xmath27family of quandles .",
    "the usual definition of a quandle is the case when @xmath27 consists of only a single element @xmath13 and its inverse @xmath45 ( _ e.g. _ @xcite ) .",
    "_ defined the notion of a _",
    "@xmath46family of quandles _",
    "@xcite , in which elements of @xmath27 are indexed by a group @xmath46 and satisfy two additional compatibility relations .",
    "the case of an abelian group @xmath46 had been considered previously in @xcite .",
    "the set @xmath27 can indeed be turned into an abelian group in all of our examples , and the additional conditions are satisfied . but because we do not make use of this additional structure , we do not impose it .",
    "our notion of a @xmath27family of quandles follows przytycki @xcite who named such a structure a _ multi - quandle_.    we list several archetypal examples of @xmath27families of quandles .",
    "[ e : quantumgate ] colours might be elements of a group @xmath47 , and the operation might be conjugation : @xmath48 the pair @xmath49 is called a _",
    "conjugation quandle_. such quandles feature in knot theory , _",
    "e.g. _ @xcite .",
    "[ e : linearquandle ] colours might be elements of a real vector space @xmath26 and the operations might be convex combinations : @xmath50 the pair @xmath51 is called a _",
    "linear quandle_. our examples in sections  [ s : information ] ,  [ s : aqc ] ,  and  [ s : recursion ] all involve linear quandles .",
    "[ e : loglinear ] in the same setting as example  [ e : linearquandle ] , consider the operations : @xmath52 the pair @xmath53 is called a _ loglinear quandle_. in @xcite",
    "we exhibited several standard information fusion operations as quandle operations of quotients of loglinear quandles .",
    "the fundamental building block of a machine is an _ interaction_.",
    "the simplest interaction is graphically depicted as @xmath54{\\small $ x$ } \\psfrag{y}[c]{\\small $ y$ } \\psfrag{x}[l]{\\small $ x { \\triangleright}y$ } \\includegraphics[width=0.1\\textwidth]{cross.eps}\\ ] ] this interaction describes initial information @xmath6 ( called the _ input patient _ ) being updated by new information @xmath7 ( called the _ agent _ ) to obtain updated information @xmath38 ( called the _ output patient _ ) .",
    "the updating operation @xmath13 may differ for different interactions .",
    "the colours @xmath6 , @xmath7 , and @xmath38 are elements of a quandle @xmath44 .",
    "we name the strands being coloured as _ registers_. the assignments of colours to registers and of binary operations to interactions is called _",
    "colouring_.    the agent in an interaction may update multiple registers . in this case the agent is drawn as a thick line .",
    "for example ( with colours suppressed ) :    @xmath55{kebab11 } \\ ] ]    a general tangle machine is obtained by concatenating a disjoint union of a finite number of interactions and building blocks which look like  @xmath56{patient}$ ] .",
    "concatenation is the process of connecting endpoints of a tangle machine .",
    "@xmath57{concat}\\ ] ]    the dotted line around the interaction , called the _ firmament _ , and the endpoints of the interaction , should be thought of as living `` at infinity '' .",
    "the purpose of the firmament is to facilitate the definition of concatenation .",
    "as such , the final stage in our construction is to erase the firmament and to draw rays from each tangle endpoint to infinity which intersect the tangle diagram only transversely at double - points ( if at all ) .",
    "the choice of these ` rays to infinity ' is essentially arbitrary .",
    "we do not distinguish between tangle machines which differ only in the choice of these rays .",
    "our diagrammatic model of machines as concatenated interactions is inspired by diagrammatic formalisms in low dimensional topology .",
    "_ combinatorial  knot  theory _ studies knots as planar diagrams instead of as embedded objects in @xmath58space .",
    "these diagrams may be decomposed into _",
    "tangles _ @xcite .",
    "knots and tangles are modified by _",
    "local moves _ , which replace one tangle within a knot by another .",
    "knots are thus revealed to be algebraic objects arising as concatenations of crossings ( which are very simple tangles ) in the plane @xcite .",
    "dropping the requirement that concatenation be planar , kauffman defined _ virtual tangles _ @xcite .",
    "a strengthening of the equivalence relation imposed on virtual tangles gives rise to w - tangles .",
    "our diagrammatic construction is most similar to the diagrammatic calculus of w - tangles @xcite , which form an algebra over a _ modular  operad _ @xcite .",
    "the differences are that our diagrams are coloured , that we allow multiple quandle operations , and that our interactions can not be split or merged .",
    "also , as in the theory of _ disoriented  tangles _ , no compatibility condition is imposed for directions of concatenated agents @xcite .    the rigourous definition of a tangle machine is deferred to the appendix .",
    "examples of tangle machines are given below and are scattered throughout the paper .",
    "@xmath59{0.4\\linewidth } \\psfrag{x}[c]{\\small $ y$ } \\psfrag{y}[c]{\\small $ x$ }              \\includegraphics[width=0.95\\textwidth]{square_machine.eps } \\end{minipage }   \\hspace{7pt } \\begin{minipage}[t]{0.43\\linewidth } \\centering \\psfrag{x}[c]{\\small $ y$ } \\psfrag{y}[c]{\\small $ x$ } \\psfrag{a}[c]{\\small $ x$ } \\psfrag{b}[c]{\\small $ y$ } \\psfrag{c}[c]{\\small $ v$ } \\psfrag{d}[r]{\\small $ w$ }           \\includegraphics[width=0.5\\textwidth]{linking.eps } \\end{minipage}\\ ] ]      the main feature of machines is their natural local notion of equivalence , described here and assembled into a concise definition in the appendix .",
    "[ c]@xmath13 [ c]@xmath45 [ c]_i1 _ [ c]@xmath6 [ c]_vr1_[c]_vr2_[c]_vr3 _ [ c]_sv_[c]_i2_[c]_fm1_[c]_fm2_[c]_i3_[c]_st _ [ c]_st _   cosmetic moves for machines . where directions are not indicated",
    ", the meaning is that the move is valid for any directions , and the same for colourings.,title=\"fig:\",scaledwidth=85.0% ]    [ c]_vr1_[c]_vr2_[c]_vr3 _ [ c]_sv_[c]_r1_[c]_r2_[c]_r3_[c]_uc _ [ c]_st _   reidemeister moves for machines , valid for any directions of the agents and for any colouring.,title=\"fig:\",scaledwidth=85.0% ]    first , we do not ascribe physical meaning to colours , but only to differences between colours .",
    "thus , if change the colouring of a machine @xmath60 by an action of an automorphism of @xmath44 inside a disc @xmath61 , where @xmath60 does not intersect the boundary of @xmath61 , then the resulting machine @xmath62 is considered to be equivalent to @xmath60 .",
    "secondly , as in graph theory , intersections between edges in diagrams of machines ` do not really exist ' , and can be added or taken away at will by one of the modifications @xmath63 , @xmath64 and @xmath65 in figure  [ f : local_moves_machines ] .",
    "this amounts to choosing different concatenating lines when recursively building the machine out of interactions .",
    "moves @xmath66 , @xmath67 , and @xmath25 relate local pictures which express the same inputs changing to the same outputs as a result of the same agent . and move @xmath68 allows us to add and delete agents which do not act on anything .    [ e : disk ] an example of machine equivalence.,title=\"fig : \" ]    third , updates performed by a single agent should be thought of as simultaneous .",
    "thus , the two diagrams below , whose diagrams differ by permutation of input - output pairs ( on the lhs the agent , indicated by the thick line , appears first to update process @xmath69 and then process @xmath27 , while on the rhs it appears first to update process @xmath27 and then process @xmath69 ) , depict equivalent machine :    @xmath70{$a$}\\psfrag{b}[c]{$b$ } \\includegraphics[width=1.9in]{r3a3 } \\end{minipage}\\ ] ]    fourth , the reidemeister moves , r1 , r2 and r3 of figure  [ f : local_moves_machines1 ] embody the defining axioms of @xmath44 .",
    "this is illustrated in , , and , which reflect idempotence , reversibility , and distibutivity respectively ( in each equation designated colours on either side of the arrow are equal ) .",
    "note that reversibility implicitly defines an inverse operation @xmath45 for each @xmath31 such that @xmath71 for all @xmath72 .",
    "machines related via a finite sequence of reidemeister moves are considered equivalent .",
    "@xmath73{\\small $ \\overline{x}$ } \\psfrag{b}[c]{\\small $ x$ } \\psfrag{c}[c]{\\small $ \\overline{{x { \\triangleright}x}}$ } \\includegraphics[width=0.38\\textwidth]{r_one.eps}\\ ] ]    @xmath74{\\small $ y$ } \\psfrag{c}[c]{\\small $ y$ } \\psfrag{e}[c]{\\small $ y$ } \\psfrag{h}[c]{\\small $ y$ } \\psfrag{b}[c]{\\small $ x$ } \\psfrag{d}[c]{\\small $ \\overline{x}$ } \\psfrag{f}[c]{\\small $ x$ } \\psfrag{i}[l]{\\small $ \\overline{{(x { \\triangleright}y ) { \\triangleleft\\,}y}}$ } \\includegraphics[width=0.38\\textwidth]{r_two.eps}\\ ] ]",
    "@xmath75{\\small $ y$ } \\psfrag{c}[c]{\\small $ z$ } \\psfrag{z}[c]{\\small $ x$ } \\psfrag{a}[c]{\\small $ x$ } \\psfrag{b}[c]{\\small $ y$ } \\psfrag{e}[l]{\\small $ y { \\blacktriangleright}z$ } \\psfrag{d}[l]{\\small $ \\overline{(x { \\triangleright}y ) { \\blacktriangleright}z}$ } \\psfrag{f}[l]{\\small $ \\overline{(x { \\blacktriangleright}z ) { \\triangleright}(y { \\blacktriangleright}z)}$ } \\includegraphics[width=0.38\\textwidth]{r_three.eps}\\ ] ]",
    "the concept of computation is broad , and extends beyond calculating the answer to a prescribed problem .",
    "perhaps the most general characterization of computation is that it is ` a manipulation or processing of information ' .",
    "computation and information are intertwined , and these two concepts rely heavily on one another . in this section , machines are conceived of as a class of networks for distributed information processing . the colours represent information entropies .",
    "the information processing capacity associated with an interaction , called its _ local capacity _ , is defined to be a difference between initial and terminal colours . a machine @xmath60 represents a network within which information is processed and sent further down to other interactions or registers .",
    "a machine equivalent to @xmath60 has the same information processing capacity as @xmath60 , but its local capacities may be different .",
    "our definitions in this section follow @xcite .",
    "we keep our discussion as informal as possible .",
    "an _ information channel _ is an apparatus through which messages are transmitted from one location to another . in practical situations ,",
    "a message entering the channel on one end will emerge corrupted on the other end .",
    "it is convenient to think of a message as a sequence of zeroes and ones .",
    "an information channel is characterized by its _ capacity _ , that is the maximal rate at which messages may be transmitted with a ` negligible ' loss of information .",
    "entropy is a measure of information , or rather , of uncertainty .",
    "if a message is constructed by sampling @xmath76 independent identically distributed ( iid ) binary random variables , then shannon s source coding theorem @xcite tells us that , for _ typical sequences _ , the entropy times @xmath76 is nearly the number of information units ( _ e.g. _ bits ) required to encode a message so that it can reliably be recovered by a receiver .",
    "_ compressible messages _ exhibit some kind of pattern ( @xmath77 ) , and these admit shorter descriptions than the length of the message itself .",
    "this is the key principle underlying message compression .",
    "_ incompressible _ messages are messages for which randomness inhibits descriptions shorter than the message own length ( _ i.e. _ @xmath78 ) .    a general computing device ( _ e.g. _ a universal turing machine ) requires two distinct inputs . the first input @xmath79 is a stream of data that is read and manipulated by the machine according to instructions given by the second input @xmath80 . both inputs @xmath79 and @xmath80 and the _ result _ of a computation @xmath81 are assumed to be typical binary sequences .",
    "a machine describing an information processing network is a concatenation of interactions .",
    "each of its registers is coloured by a real number representing an entropy .",
    "the colour of an agent register represents the entropy of a programme typical sequence , while colours of input registers represent entropies of data typical sequences .",
    "the agent register is equipped with a parameter @xmath82 which may represent some ( input - independent ) property of the computing device itself .",
    "the colour of the output corresponding to input @xmath83 is :    @xmath84    if @xmath85 then the output entropy is strictly lower than the input entropy , _",
    "i.e. _ @xmath86 .",
    "thus , the machine computes @xmath81 by applying the instruction data steam @xmath80 to the input data stream @xmath79 , and the entropy of @xmath81 is @xmath87 .",
    "see figure  [ f : computercrossing ] .",
    "[ r]@xmath88 [ c]@xmath89 [ l]@xmath90 [ r]@xmath79 [ c]@xmath80 [ l]@xmath81 [ c]@xmath91   the computation and the corresponding interaction between entropies.,title=\"fig:\",scaledwidth=65.0% ]      in this section we describe various capacities associated to machines , which provide a measure of how ` good ' a computation is .",
    "our analysis of a computing device whose internal workings are unknown to us focusses on discrepancies between its input and output streams .",
    "suppose that we wish to know if the computation is meaningful in some sense .",
    "if no additional restrictions are made , then `` meaningful '' might mean that computations produce intelligible answers which could read off by a human operator . translating this requirement into the language of preceding paragraphs",
    ", the output stream is expected to appear ` less random ' than the input stream . according to this paradigm , computation and compression are literally the same thing .",
    "a ` good computation ' is one which compresses @xmath79 as much as possible , _ given @xmath80_. in the language of information theory , the optimal output @xmath81 has entropy equal to the _ conditional entropy _",
    "the _ channel capacity _ of the computing device is defined as the _ mutual information _ : @xmath93    the _ capacity _ of a _ process _",
    "( that is , a chain of registers connected by concatenation and by being input - output pairs of an interaction ) is the entropy of its initial register minus the entropy of its terminal register . for example , for an interaction with a single input - output pair : @xmath94{$_{\\mathrm{in}}$}\\psfrag{b}[c]{$$}\\psfrag{c}[l]{$_{\\mathrm{out}}$}\\includegraphics[width=50pt]{crosm}\\end{minipage } } } \\ ; \\ ; \\;\\",
    "\\right ) { \\stackrel{\\textup{\\tiny def}}{=}}\\ \\underbrace{h(\\mathcal{x}_0)}_{\\mathrm{in } } - \\underbrace{h(\\mathcal{x}_0 ) { \\triangleright}_s h(\\mathcal{x}_1)}_{\\mathrm{out}}\\enspace .\\ ] ] an interaction is _ optimal _ if its capacity equals its mutual information : @xmath95 which occurs when @xmath96 .",
    "the _ global capacity _ of a machine is the set of all capacities of its processes .",
    "consider the three equivalent machines in figure  [ fig : procmachines ] .",
    "[ c]@xmath97 [ c]@xmath98 [ c]@xmath99 [ c]@xmath100 [ l]@xmath101 [ c]@xmath102 [ r]@xmath103 [ c]@xmath104 [ c]@xmath105 [ c]@xmath106 [ c]_abstract _ [ c]_locally suboptimal _",
    "[ c]_locally optimal _ equivalent machines with the same global information processing capacities .",
    "the middle and right machines are feasible whereas the left machine is abstract . while all of them are globally optimal only the rightmost machine is also locally optimal.,title=\"fig:\",scaledwidth=85.0% ]    as the three machines are equivalent , they have the same global capacities .",
    "but the capacities of their interactions are different , and the leftmost machine represents an impossible , _ abstract _ computation .",
    "set the following values of @xmath107 and @xmath91 : @xmath108    in order to assure that @xmath109 , we choose our entropies so that :    @xmath110    which essentially describe the extent to which the sources , @xmath79 , @xmath80 , and @xmath111 , are statistically dependent .",
    "this is illustrated by the following venn diagrams : @xmath112{\\small $ h(1 \\mid 2)$ } \\psfrag{b}[c]{\\small $ h(1 \\mid 0,2)$ } \\psfrag{y}[c]{\\small $ \\mathcal{x}_2 $ } \\psfrag{x}[c]{\\small $ \\mathcal{x}_1 $ } \\psfrag{z}[c]{\\small $ \\mathcal{x}_0",
    "$ } \\includegraphics[width=0.60\\textwidth]{venn.eps}\\ ] ]    all three machines are globally optimal , but the local capacities for the three machines in figure  [ fig : procmachines ] are different . in the rightmost machine , by our choices of @xmath107 and @xmath91 , each interaction is locally optimal see figure  [ fig : capacities ] .",
    "this is no longer true for the middle machine , which has a register labeled @xmath113 , which may not equal @xmath114 . in this case",
    ", the middle machine contains a non - optimal interaction .",
    "the left machine involves the inverse operation @xmath115 , so that its colour @xmath116 might be negative .",
    "the idea of negative entropies may sound absurd , but nevertheless the leftmost machine in figure  [ fig : procmachines ] is equivalent to a machine all of whose computations are feasible , and in fact even optimal . in view of this , we may think of this machine as a sort of _ abstract _ information processing scheme .",
    "[ c]@xmath97 [ c]@xmath98 [ c]@xmath99 [ c]@xmath80 [ c]@xmath111 [ c]@xmath79 [ c]@xmath100 [ c]_process capacity in _ @xmath117 [ r]@xmath103 [ c]_local capacities at crossings _ @xmath118 [ c]@xmath105 [ c]@xmath106 [ c]@xmath119 [ c]@xmath120 [ c]@xmath121 .,title=\"fig:\",scaledwidth=85.0% ]",
    "some paradigms for quantum computation do away with the conventional circuit model .",
    "adiabatic quantum computation is one such approach @xcite .",
    "the idea behind it rests on the adiabatic theorem in quantum mechanics which roughly states that a ( quantum ) system remains in its ground state when subjected to environmental perturbations , as long as these act slowly enough and as long as there is a gap between the ground state and the rest of the hamiltonian s spectrum .",
    "adiabatic quantum computation makes use of this fact by adiabatically evolving a simple hamiltonian @xmath122 , which can be thought of as a problem whose solution ( the ground state ) is easy , into a different and perhaps more complicated hamiltonian @xmath123 whose ground state is the solution to the problem at hand .",
    "the computation initializes the system in its ground state , the ground state of @xmath122 , and then slowly evolves its hamiltonian to @xmath123 .",
    "this process is called _ quantum annealing_. by the adiabatic theorem , the system remains in its ground state throughout the evolution process , and the computation concludes at the ground state of @xmath123 , that is the sought - after solution .",
    "the computational difficulty of this procedure is inversely proportional to the square of the minimal energy gap between the ground state and the rest of the spectrum , namely to the square of @xmath124 , where @xmath125 are the underlying energy eigenvalues of the hamiltonian .",
    "we introduce an adiabatic quantum machine ( aqc ) . strictly speaking ,",
    "this is a one - parameter family of tangle machines . for @xmath126 , consider the quandle @xmath127 whose elements are self - adjoint operators over a hilbert space of dimension @xmath128 and whose operation is @xmath129 . in most cases",
    "@xmath76 stands for a number of qubits , and @xmath76 is always fixed . as @xmath91 evolves from @xmath130 to @xmath131",
    ", a machine @xmath132 coloured by a trivial quandle @xmath133 evolves through machines @xmath134 coloured by @xmath127 .",
    "the algebraic structure @xmath135 is not a quandle ( reversibility fails ) but the machine is designed so that the colours in the terminal registers of @xmath136 represent the solution to the computation .",
    "the standard notion of adiabatic quantum computation corresponds to a machine with a single interaction , as pictured in figure  [ f : singlecrossingaqc ] .",
    "a general aqc has multiple interactions , which we should consider as adiabatic computers working in conjunction to arrive at a solution .",
    "we will not details about adiabatic quantum machines in this paper we will only demonstrate what we have set out to : the way in which machine equivalence makes a difference in terms of computation .",
    "our example involves only a single qubit .",
    "[ c]@xmath122 [ c]@xmath123 [ l]@xmath137   an aqc with a single crossing.,title=\"fig:\",scaledwidth=15.0% ]    let @xmath138 and @xmath139 denote two out of three pauli matrices , expressed with respect to the basis of @xmath140 consisting of the eigenvectors of @xmath141 .",
    "we use the standard notation , in which subscripts denote spin axes .",
    "let @xmath142 denote the identity operator .",
    "our adiabatic computer is designed to output the ground state @xmath143 .",
    "choose the terminal hamiltonian to be : @xmath144    choose the initial hamiltonian to be :    @xmath145    the ground state of @xmath122 is @xmath146 and the ground state of @xmath123 is @xmath147 .    at time @xmath91",
    ", our interaction has input @xmath122 , agent @xmath123 , and output @xmath148 starting from @xmath122 , the system evolves @xmath149 towards @xmath123 as @xmath91 approaches @xmath131 .",
    "the computation turns out to be infeasible because the minimal energy gap along the evolution path vanishes , @xmath150 .",
    "this is due to the problem hamiltonians @xmath122 and @xmath123 sharing the same eigenbasis , causing the energy levels to cross one another .",
    "we say that such a machine is ( computationally ) _",
    "infeasible_.      the level crossing problem described in section  [ s : aqc][ss:1xngaqc ] can be avoided by extending the machine to include more than one interaction .",
    "equivalent variants of the proposed aqc machine are given in figure  [ fig : adiabaticm ] .",
    "all machines have registers coloured @xmath122 , @xmath137 , and @xmath151 .",
    "these colours do not depend on @xmath91 .",
    "set @xmath152 .",
    "the terminal colour @xmath137 has the following form :    [ c]@xmath151 [ c]@xmath122 [ c]@xmath153 [ c]@xmath154 [ l]@xmath155 [ c]@xmath156 [ c]@xmath137 [ c]@xmath46 [ c]_feasible _ [ c]_feasible _ [ c]_infeasible _ equivalent adiabatic quantum machines.,title=\"fig:\",scaledwidth=80.0% ]    @xmath157    thus if we write @xmath149 for @xmath137 at time @xmath91 , then @xmath158 for @xmath159 while @xmath160 for @xmath161 .",
    "the ground state of @xmath123 is the sought - after solution .",
    "the simple calculation of the classical adiabatic computer @xmath162 in section  [ s : aqc][ss:1xngaqc ] has been replaced by the more involved computation of equation  [ e : r3aqc ] .",
    "we find that @xmath163^{\\frac{1}{2}}\\enspace,\\ ] ] and @xmath164 .",
    "thus we have solved the level crossing problem , and the final computations of each of the machines in figure  [ fig : adiabaticm ] are feasible .",
    "a general aqc machine is fundamentally different from the single - crossing ` classical adiabatic computation ' in that it has intermediate stages at which _ intermediate hamiltonians _",
    "are present , describing neither the initial nor the terminal problem .",
    "as we are no longer interested only in the output @xmath137 but also in the system as a whole , the adiabatic theorem should be applied also to all of the intermediate hamiltonians in the aqc machine . with this in mind , let us examine the behavior of the intermediate hamiltonians in the equivalent machines from figure  [ fig : adiabaticm ] .",
    "the middle machine has two intermediate hamiltonians that depend on @xmath91 , namely , @xmath165 and @xmath166 , written explicitly as : @xmath167 thus , @xmath168^{\\frac{1}{2}}$ ] and @xmath169^{\\frac{1}{2}}$ ] , both which have minimum energy gap @xmath170 . as the energy gaps @xmath171 , @xmath172 , and @xmath173 in the middle machine are all non - vanishing throughout the adiabatic evolution , we conclude that this machine in its entirety represents a feasible computation .",
    "conversely , the machine on the right possesses no advantage compared to the classical adiabatic scheme .",
    "one of its hamiltonians , @xmath174 , has a vanishing energy gap for @xmath175 .",
    "so taken as a whole , the machine on the right represents an infeasible computation .",
    "the machine on the left in figure  [ fig : adiabaticm ] presents another equivalent feasible computation . here the hamiltonian @xmath176 , where @xmath45 is the inverse of the quandle operation @xmath13 , has at least one negative eigenvalue for any @xmath177 , @xmath178",
    "iteration lies at the heart of computational paradigms such as automata and turing machines .",
    "it manifests the principle that the future state is determined exclusively by the current state and by subsequent inputs , via a _",
    "transition function_. similar concepts underlie several widely used probabilistic models such as markov chains and autoregressive processes .    to realize iteration in a machine , consider copies @xmath179 of a fixed machine @xmath60 .",
    "as we are going to construct a new machine by concatenating these , we assume each of these copies to have its endpoints lying on a circular firmament .",
    "partition these sets of ` endpoint registers ' into two subsets of the same size @xmath180 and @xmath181 , and associate a unique _ terminal register _ in @xmath181 to each _ initial register _ in @xmath180 .",
    "we graphically indicate an element of @xmath180 with an arrow from the firmament into the disk it bounds , and an element of @xmath181 with an arrow out of the disk to the firmament .",
    "we refer to registers of closed processes in @xmath60 as _ control registers_. write @xmath182 for the set of control registers in @xmath60 .",
    "initialize the registers of @xmath183 to the initial state of the iteration , and initialize also the control registers within each @xmath184 .",
    "concatenate each terminal register in @xmath184 with its corresponding initial register in @xmath185 for @xmath186 .",
    "denote the resulting machine @xmath187 . for each @xmath186 ,",
    "the result of the computation of @xmath184 appears as the colours stored in @xmath181 , assuming these are uniquely determined by @xmath180 and by @xmath188 .",
    "given the initial condition and colours for the control registers , the computation of @xmath187 is its _ steady state _",
    ", that is the set of colours in @xmath189 where @xmath190 is such that each initial register has the same colour as its corresponding terminal register in @xmath191 for all @xmath192 .",
    "a steady state can be diagrammatically described via a colouring of the _ closure _ of @xmath60 ( concatenating each terminal vertex with its corresponding initial vertex ) .",
    "conversely , @xmath60 may compute the set of initial conditions for which a steady state exists .",
    "special cases of the above computational paradigm have been studied in @xcite .",
    "his tangles consist of a single open process , and the iteration represents feedback loops which are a research interest of kauffman and a primary ingredient in cybernetic sciences . using a quandle colouring , kauffman showed that such _",
    "long knots _ underlie a class of automata which can emulate multi - valued logic and modular arithmetic computations .",
    "an example he considers is based on iterating a ` trefoil machine ' @xmath60 in which initial registers @xmath193 and @xmath194 are coloured @xmath1 and @xmath2 in some quandle @xmath26 whose underlying set underlies a field @xmath195 and whose operation is @xmath196 .",
    "the iteration machine @xmath187 attains a steady state if and only if @xmath197 , _ i.e. _ if and only if @xmath198 is an element of order @xmath58 in @xmath195 .",
    "figure  [ f : nesting ] shows some examples of iteration , and of a more general construction which we call _ nesting_. the machines on the upper row are studied in section  [ s : recursion][ss : slrecursion ] , while the remainder of the section considers a machine which models a markov chain .",
    "our theory does not account for machines with infinitely many interactions , so we may assume that the nesting is large but finite",
    ". this assumption has nothing to do with whether or not the process halts , whatever halting means in our context .",
    "[ c]@xmath199 [ c]@xmath200 [ c]@xmath201 [ c]@xmath202 [ c]@xmath203 [ c]@xmath204 [ c]@xmath205 [ c]@xmath206 [ c]@xmath207 nested machines , title=\"fig:\",scaledwidth=75.0% ]      we investigate the computation of the equivalent machines in the upper row of figure  [ f : nesting ] .",
    "we colour these machines by a linear quandle ( example  [ e : linearquandle ] ) which has only a single operation @xmath208 for some fixed @xmath209 ( and its inverse @xmath45 ) .",
    "the initial colours in both machines are given as @xmath210 .",
    "the terminal colours are then computed to be : @xmath211 which can be expressed concisely as @xmath212 with @xmath213 .",
    "this iteration describes a dynamical system , or more precisely , an equivalence class of such systems whose behavior is dictated by the fixed _",
    "quandle parameter _ @xmath91 and by the inputs @xmath214 .",
    "equation  [ e : xon ] expresses @xmath205 as a sum of an effect of the initial condition @xmath199 with a discrete - time convolution of @xmath215 with the inputs @xmath216 , where @xmath217 is the discrete - time index .",
    "this expression may be viewed as a generating function encoding information about the inputs , by rewriting it as : @xmath218 the coefficients @xmath219 , @xmath186 all are machine invariants , _",
    "i.e. _ for equivalent machines they are the same .    aside from @xmath205 ,",
    "the machines also compute @xmath220 .",
    "these all are the outputs of related dynamical systems with increasingly smaller evolution histories .",
    "thus @xmath221 is the output of a system whose initial state is @xmath222 and which so far has processed @xmath223 inputs .",
    "we next present a more involved example of an iterative computation .",
    "[ c]@xmath224 [ c]@xmath225 [ l]@xmath226 [ c]@xmath227 [ c]@xmath228 [ c]@xmath229 [ c]_sub - machine _ @xmath184 [ c]@xmath230 [ c]@xmath184 [ c]@xmath185 [ l]@xmath231 [ c]@xmath232 [ c]@xmath233 [ c]@xmath234 [ l]@xmath235 [ l]@xmath236 [ c]_coloured closure ( stationarity ) _ [ c]_iteration _",
    "@xmath187   an iterative machine and its steady - state.,title=\"fig:\",scaledwidth=93.0% ]    consider the iteration machine @xmath187 built out of concatenating identical copies @xmath132 , @xmath237 , @xmath238 ,  of the machine pictured in the upper left corner in figure  [ fig : hopfm ] by concatenating the two terminal registers @xmath239 and @xmath240 in @xmath184 to their namesake initial registers in @xmath185 .",
    "for this example , consider a linear quandle with two operations @xmath241 and @xmath242 with @xmath243 .",
    "to avoid degenerate cases we assume also that @xmath244 .",
    "we abbreviate the names of these operations to @xmath228 and @xmath229 correspondingly . for the specified concatenation to be defined",
    ", the following relation between @xmath245 and @xmath246 must be satisfied : @xmath247 where @xmath248 $ ] .",
    "all entries of the _ one - step transition matrix _",
    "@xmath249 are non - negative , and each of its rows sums to @xmath131 . a matrix with such properties",
    "is said to be _",
    "( right ) stochastic_.    the perron ",
    "frobenius theorem for stochastic matrices tells us that @xmath249 has a unique largest eigenvalue equal to @xmath131 whose corresponding eigenvector @xmath250 has strictly positive entries .",
    "again by perron ",
    "frobenius , for _ any _ vector @xmath251 of probabilities satisfying @xmath252 , the homogenous irreducible markov chain with one - step transition matrix @xmath249 converges to @xmath250 irrespective of the initial distribution @xmath251 :    @xmath253    the iteration machine @xmath187 represents an homogeneous irreducible markov chain whose one - step transition matrix @xmath249 is given by .",
    "we have shown that @xmath187 has a steady - state , which we may describe by ` closing ' a machine @xmath184 : @xmath254 thus , @xmath255 $ ] is the eigenvector of @xmath249 corresponding to the eigenvalue  @xmath131 .    in the special case @xmath256 , matrix @xmath249 is",
    "_ doubly stochastic_.      figure  [ fig : hopfm ] depicts a machine analogous to an homogeneous irreducible markov chain , for which a steady - state colouring is always attained .",
    "such machines are said to be _",
    "( externally ) stable_. the machine @xmath187 is also _ internally stable _ , meaning that for any concatenation of machines that gives rise to @xmath187 , each transition matrix describing the concatenation is stochastic .    in this section and the next , we shall exhibit equivalent machines to @xmath187 which are not internally stable . to the best of our knowledge",
    ", there is no competing formalism in the literature for which to discuss equivalent markov chains which may or may not be internally stable .",
    "consider a machine @xmath257 built from concatenating ( ` stacking ' ) copies @xmath258 of the upper machine @xmath62 in figure  [ fig : hopfm1 ] by concatenating each register in @xmath259 with its namesake register in @xmath260 .",
    "the machines are now coloured by a linear quandle with three operations ( and their inverses ) corresponding to three real numbers @xmath261 .",
    "the ` feed - forward machine ' @xmath62 is created by sliding the concatenated output strand @xmath227 of @xmath184 all the way across the outputs of @xmath185 , crossing over the inputs of @xmath184 .",
    "this overcrossing strand , pictured as a thickened line , acts as an agent via @xmath262 .",
    "metaphorically , we are using a colour @xmath227 ` from the past ' to manipulate colours @xmath235 and @xmath236 ` in the future ' .",
    "[ c]@xmath184 [ c]@xmath185 [ c]@xmath225 [ c]@xmath224 [ l]@xmath227 [ l]@xmath226 [ l]@xmath236 [ l]@xmath235 [ c]_feed - forward machine _ @xmath62 [ c]_feed - back machine",
    "_ @xmath263   feed - forward and feed - back equivalent machines.,title=\"fig:\",scaledwidth=60.0% ]    by the equivalence of @xmath60 with @xmath62 , we know that:@xmath264 where , as before , @xmath265 $ ] . unlike in @xmath187 , the colours @xmath266 and of @xmath267",
    "need not coincide in @xmath268 .",
    "writing @xmath269 for the matrix such that @xmath270 , instead of the relation @xmath271 for @xmath187 , we now obtain the pair of relations @xmath272 and @xmath273 , where @xmath274 .",
    "thus , the one step transition matrices in @xmath187 all equal @xmath249 , while in @xmath268 the transition matrix from @xmath275 to @xmath276 is @xmath277 .",
    "we compute @xmath278 and @xmath279 explicitly :    @xmath280    @xmath281    the important point is that @xmath278 and @xmath279 may no longer be stochastic as some of their entries may be negative or greater than @xmath131 . but @xmath282 is stochastic and well - behaved .",
    "so perhaps the computation of internal colours in each @xmath283 should be thought of as _",
    "abstract_. moreover , the internal colours of @xmath266 registers may not even be bounded for @xmath284 sufficiently close to @xmath131 , and therefore they may not represent probabilities .",
    "thus , @xmath62 and @xmath268 are internally unstable .",
    "next consider the _ feed - back machine _",
    "@xmath263 in figure  [ fig : hopfm1 ] .",
    "it is formed by sliding the output strand @xmath236 all the way back across the inputs of @xmath184 .",
    "it is as though a ` future ' register manipulates ` past ' ones . similarly to the feed - forward machine , the feed - back machine may be internally unstable .",
    "its structure is yet more intricate in that it resembles a regulating control loop such as those which are encountered in the theory of dynamical systems and in cybernetics .",
    "we again compute the relations between @xmath285 and @xmath286 required for concatenation .",
    "for the feed - back machine , @xmath272 with : @xmath287 for the transition from @xmath288 to @xmath289 , we compute : @xmath290    we deduce that : @xmath291    moreover , attests that @xmath292 equals @xmath293 , because both map @xmath294 to @xmath295 .",
    "hence we find that : @xmath296 which leads to @xmath297    relations of the form are encountered in the theory of dynamical systems , where they manifest a regulating procedure known as a closed ( control ) loop . in the context of machines ,",
    "a closed loop is interpreted as follows .",
    "any machine equivalent to the internally stable machine @xmath187 is stable , but not necessarily internally stable .",
    "we might imagine islands of instability in an externally stable cosmos ( machine ) .",
    "feed - back and feed - forward machines which are not internally stable regulate their behavior so as to become externally stable . in our example , the one - step transition matrices are not stochastic , but the two - step transition matrices are stochastic .",
    "we have introduced tangle machines as a diagrammatic algebra uniting ideas in low - dimensional topology , causality , information , and computation .",
    "there is a natural local notion of tangle machine equivalence .",
    "we have exhibited ways in which machine equivalence may represent networks with identical global properties , but with different local properties , within a number of different paradigms of computation .",
    "our vision is to model these and other complex real - world phenomena by machines , then to use machine equivalence to select a ` best ' machine ( whatever ` best ' means in that context ) , and then to perform a computation for that ` best ' machine which might not have been tractable for the machine that we started with .",
    "future work will discuss topological invariants of machines , will expand on our examples , will discuss statistical detection of machines inside data , and will discuss algorithmic aspects of finding a ` best ' machine inside an equivalence class .",
    "99 [ 1]#1 urlstyle [ 1]doi:#1    abramsky s. , & coecke , b. 2009 categorical quantum mechanics . in _ handbook of quantum logic and quantum structures _ , vol .",
    "2 , 261323 .    baez , j. , & stay , m. 2011 physics , topology , logic and computation :   a rosetta stone . in _",
    "new structures for physics _ , lecture notes in phys . *",
    "813 * , 95172 .",
    "bar - natan , d. , & dancso , s. 2013 finite type invariants of w - knotted objects :   w - knots and the alexander polynomial .",
    "manuscript submitted for publication .",
    "buliga , m. 2011 braided spaces with dilations and sub - riemannian symmetric spaces . in _ geometry .",
    "exploratory workshop on differential geometry and its applications _ , ( d. andrica & s. moroianu ed . ) , cluj - napoca 2135 .",
    "buliga , m. 2011 computing with space :   a tangle formalism for chora and difference .",
    "preprint .",
    "buliga , m. , & kauffman , l. 2013 glc actors , artificial chemical connectomes , topological issues and knots . in _",
    "alife 14 : proceedings of the fourteenth international conference on the synthesis and simulation of living systems _ , 490497 .",
    "carmi , a.y . & moskovich , d. 2014 low dimensional topology for information fusion . in _ proceedings of the 8th international conference on bio - inspired information and communications technologies _ ,",
    "acm / eai . in press .",
    "clark , d. , morrison , s. & walker , k. 2009 fixing the functoriality of khovanov homology .",
    "_ * 13*(3 ) , 14991582 .    conway , j.h .",
    "1970 an enumeration of knots and links , and some of their algebraic properties . in _ computational problems in abstract algebra ( proc .",
    "oxford , 1967 ) _",
    "( j. leech ed . ) 329358 .",
    "copeland , b.j . ed .",
    "2004 _ the essential turing :   seminal writings in computing , logic , philosophy , artificial intelligence , and artificial life plus the secrets of enigma_. clarendon press ( oxford university press ) , oxford uk .",
    "cover , t.m .",
    ", & joy t.a .",
    "1991 _ elements of information theory_. 2nd edn .",
    "wiley - interscience , new york .",
    "farhi , e. , goldstone , j. , gutmann , s. & sipser , m. 2000 quantum computation by adiabatic evolution .",
    "preprint .",
    "getzler , e. , & kapranov , m. 1998 modular operads .",
    "_ compositio math . _",
    "* 110*(1 ) , 65126 .",
    "ishii , a. , iwakiri , m. , jang , y. & oshiro , k. 2013 a @xmath46family of quandles and handlebody - knots .",
    "_ illinois j. math .",
    "_ , * 57 * 817838 .",
    "jazwinski , a.h .",
    "1970 stochastic processes and filtering theory .",
    "new york : academic press .",
    "jones , v.f.r .",
    "1999 planar algebras .",
    "preprint .",
    "joyce , d. 1982 a classifying invariant of knots :   the knot quandle . _",
    "j. pure appl . algebra _ * 23 * , 3765 .",
    "kauffman , l.h .",
    "1988 new invariants in the theory of knots . _ amer .",
    "monthly _ * 95*(3 ) , 195242 .",
    "kauffman , l.h .",
    "1994 knot automata . in _",
    "twenty - fourth international symposium on multiple - valued logic , conference proceedings _",
    ", 328333 .",
    "kauffman , l.h .",
    "1995 knot logic . in _ knots and applications _ ,",
    "series of knots and everything * 6 * , world scientific publications , 1110 .",
    "kauffman , l.h .",
    "1999 virtual knot theory .",
    "j. combinatorics _ * 20*(7 ) , 663690 .",
    "kauffman , l.h .",
    "& lomonaco jr , s.j .",
    "2004 braiding operators are universal quantum gates .",
    "_ new j. phys .",
    "_ , * 6*(1 ) , 134 .",
    "miller , c.f .",
    "1992 decision problems for groups survey and reflections . in _",
    "algorithms and classification in combinatorial group theory ( berkeley , ca , 1989 ) _ , math .",
    "publ , * 23 * , 159",
    ".    nayak , c. , simon , s.h . ,",
    "stern , a. , freedman , m. , & sarma , s.d .",
    "2008 non - abelian anyons and topological quantum computation .",
    "_ , * 80*(3 ) , 10831159 .",
    "nelson , s. 2011 the combinatorial revolution in knot theory .",
    "_ notices of the ams _ ,",
    "* 58*(11 ) 15531561 .",
    "przytycki , j.h .",
    "2011 distributivity versus associativity in the homology theory of algebraic structures .",
    "_ demonstration mathematica _ * 44*(4 ) , 823869 .",
    "roscoe , a.w .",
    "1990 consistency in distributed databases . _ oxford university computing laboratory technical monograph _ * prg-87*.    shannon , c.e .",
    "1948 a mathematical theory of communication .",
    "_ bell system technical journal _ * 27 * 379423 , 623656 .",
    "spencer - brown , g. 1969 _ laws of form . _",
    "london : allen & unwin .",
    "turing , a.m. 1937 _ on computable numbers , with an application to the entscheidungsproblem .",
    "_ p. lond .",
    "ser . 2 * 42 * , 230265 . ( and turing , a.m. 1938 _ on computable numbers , with an application to the entscheidungsproblem :  a correction_. p. lond .",
    "ser . 2 * 43 * , 544546 .",
    "vicary , j. 2012 higher semantics for quantum protocols . in _ proceedings of the 27th annual acm / ieee symposium on logic in computer science _ , 606615 .",
    "* a finite graph @xmath46 that is a disjoint union of path graphs @xmath299 and cycles @xmath300 : @xmath301 the graph @xmath46 is called the _ underlying graph _ of @xmath60 .",
    "vertices of @xmath46 are called _",
    "registers_. * a subset of registers @xmath302 called _",
    "agents_. * a multivalued _ interaction function _",
    "@xmath303 specifying the edges acted on by each agent . * an _ operation function _",
    "@xmath304 specifying the action of each agent . * a _ colouring function _",
    "@xmath305 such that if @xmath306 and @xmath307 are registers in @xmath60 and if @xmath0 is an edge from @xmath306 to @xmath307 then @xmath308 if @xmath309 .",
    "otherwise let @xmath310 be the vertex such that @xmath311 and set @xmath312 . then either @xmath313 or @xmath314 .    to draw a tangle machine ,",
    "first draw the graph @xmath46 , then draw a dotted line between each agent @xmath315 in @xmath316 and the edges in its image , with the @xmath317 indicated on each of these edges . finally , label each register by its image under @xmath318 .",
    "reidemeister : : :    for @xmath319 :    @xmath320{tikpic1.eps}\\ ] ] reidemeister : : :    in following local modification , the top central register must be    outside the set of agents @xmath316 . here ,",
    "@xmath72 and @xmath31 .",
    "@xmath321{tikpic2.eps}\\ ] ] reidemeister : : :    here , @xmath36 and    @xmath39 .",
    "writing    @xmath315 for the register coloured @xmath7 in the move    below , all edges in @xmath322 must participate in the move    ( the move is invalid for a strict subset of them ) :    +    @xmath57{tikpic3.eps}\\ ] ]    +    for example , one r3 move for @xmath323 reads :    +    @xmath324{tikpic4.eps}\\ ] ]    +    one r3 move for @xmath325 reads :    +    @xmath326{tikpic5.eps}\\ ] ]        two tangle machines are _ equivalent _ if they are related by an automorphism of @xmath44 followed by a finite number of reidemeister moves .",
    "the machines @xmath328 are _ stably equivalent _ if there exist equivalent machines @xmath329 such that @xmath330 is obtained from @xmath237 by a finite sequence of stabilizations and @xmath331 is obtained from @xmath238 by a finite sequence of stabilizations .      tangle diagrams @xmath60 and @xmath62 of tangle machines are considered _ equivalent _ if they ( or rather their restrictions to a closed disk outside which they both consist only of rays to infinity ) are related by an automorphism of @xmath44 together with planar isotopies and a finite sequence of cosmetic moves ( figure  [ f : local_moves_machines ] ) and reidemeister moves ( figure  [ f : local_moves_machines1 ] ) .    to obtain our ` tangle description ' from the above definition , first destabilize until each edge is in the @xmath332image of some agent .",
    "then replace each ` interaction ' ( an agent in @xmath316 together with all edges in its @xmath332image ) by an ` interaction ' in the sense of section  [ s : machines][ss : tanglemachines ] :        concatenate as prescribed by the graph .",
    "the indeterminacy in doing this is captured by moves @xmath63 , @xmath64 , @xmath65 , and @xmath334 in figure  [ f : local_moves_machines ] .",
    "once tangle endpoints have been ` sent to infinity ' , there are no further indeterminacies",
    ". reidemeister moves on quintuples @xmath335 correspond to the reidemeister moves of figure  [ f : local_moves_machines1 ] by construction .",
    "a quandruple @xmath335 may be considered as a _ gau diagram _ of its corresponding tangle diagram.to translate from a tangle diagram back to a gau diagram , get rid of interactions without patients using @xmath68 and reverse the above process .",
    "there are no indeterminacies .",
    "we have proven the following proposition :      in fact @xmath68 ( whose left - hand side may result from an @xmath336 move ) should be thought of as a stabilization and equivalent tangle diagrams should be called _",
    "stably equivalent_. we adopt the present convention for main - text simplicity .",
    "we conclude with two examples of gau diagrams and corresponding tangle diagrams .",
    "the first example features a quandle for which @xmath337 for all @xmath338 and for all @xmath31 . in the second example , colours are suppressed ."
  ],
  "abstract_text": [
    "<S> tangle machines are topologically inspired diagrammatic models . </S>",
    "<S> their novel feature is their natural notion of equivalence . </S>",
    "<S> equivalent tangle machines may differ locally , but globally they share the same information content . </S>",
    "<S> the goal of tangle machine equivalence is to provide a context - independent method to select , from among many ways to perform a task , the ` best ' way to perform the task . </S>",
    "<S> the concept of equivalent tangle machines is illustrated through examples in which tangle machines represent networks for distributed information processing , networks of adiabatic quantum computations , and iterative computations .    </S>",
    "<S> [ firstpage ] </S>"
  ]
}
{
  "article_text": [
    "we consider simple coalitional games called _ path coalitional games _ , in particular _ edge path coalitional games ( epcgs ) _ and _ vertex path coalitional games ( vpcgs)_. in these games , the players control the edges and the vertices , respectively , and a coalition of players wins if it enables a path from the source @xmath0 to the sink @xmath1 and loses otherwise .",
    "both of these coalitional games are natural representations , for which solution concepts such as the shapley value or the nucleolus represent the amount of payoff the respective edges or vertices deserve for enabling a path from @xmath0 to @xmath1 .",
    "the payoff can indicate the importance of the players or the proportional resource , profit , maintenance or security allocation required at the respective nodes and vertices .",
    "this kind of stability analysis is especially crucial if the underlying graph represents a logistics , communication , military , supply - chain or information network  @xcite .",
    "we study the computational complexity of computing important cooperative game theoretic solutions of path coalitional games .",
    "path coalitional games also have a natural correspondence with two - person zero - sum noncooperative games . in such games , which we term as _",
    "path intercept games _ , there are two players , the _ interceptor _ and the _ passer_. the problem is to maximize the probability of intercepting a strategically chosen path in an undirected graph .",
    "we refer to the path intercept games as _ edge path noncooperative games ( epngs ) _ and _ vertex path noncooperative games ( vpngs)_. the pure strategies of the interceptor are the edges @xmath2 ( or vertices @xmath3 ) and the set of pure strategies of the _ passer _ is the set @xmath4 which contains all paths from vertex @xmath0 to vertex @xmath1 . if the edge ( or vertex ) used by the interceptor intersects with the chosen path , then the interceptor wins and gets payoff @xmath5 .",
    "otherwise , the interceptor loses and gets payoff @xmath6 .",
    "thus , the _ value _ of the game is the greatest probability that the interceptor can guarantee for successfully intercepting the chosen path .",
    "the area of algorithmic cooperative game theory is beset with negative computational results  ( * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "* see e.g. , ) . in this paper",
    ", we present positive algorithmic results for _ cost - based generalizations _ of path coalitional games and their duals .",
    "the cost - based generalization of a simple game is a rich and widely - applicable model .",
    "for example in the case of edge path coalitional games , each edge charges a certain cost for its services being utilized .",
    "a coalition of edges gets a fixed reward for enabling an @xmath0-@xmath1 path .",
    "it is then natural to examine payoffs which are fair and stable and also manage to transport goods from @xmath0 to @xmath1  @xcite .",
    "the cost - based generalizations of path coalitional games have significance in logistics , planning and operations research .",
    "similarly , the cost - based generalizations of duals of path coalitional games have natural importance in proposing stable reward schemes to protect strategic assets or blocking intruders in a network .",
    "[ [ contribution ] ] contribution : + + + + + + + + + + + + +    * we use dualization and cost - based generalization to provide a unifying way to model @xmath0-@xmath1 connectivity . in doing so",
    ", we also identify some interesting connections between coalitional game theory and network interdiction .",
    "* for the cost - based generalization of path coalitional games and their duals we present the first polynomial - time algorithms to compute and verify least core payoffs .",
    "interestingly , the problem of computing the least core of the dual of vertex path coalitional game was ( wrongly ) claimed to be np - hard  @xcite and the problem of computing the least core of cost - based generalization of edge path coalitional game was conjectured to be np - hard  ( * ? ? ?",
    "* we present an algorithmic technique to compute least core payoffs for cost - based generalizations of simple games in any representation . as a corollary",
    ", it is shown that there exist polynomial - time algorithms to compute the least core payoffs of cost - based generalizations of _ spanning connectivity games _ and _ weighted voting games _ with bounded weights and costs . *",
    "the least core payoffs of simple path coalitional games are characterized and purely combinatorial polynomial - time algorithms to compute a least core payoff are presented .",
    "* the nucleolus is a solution concept which is notoriously hard to compute for most interesting coalitional games .",
    "a polynomial - time algorithm to compute the nucleolus of edge path coalitional games for undirected series - parallel graphs is presented .",
    "network interdiction is the general framework in which weakening of a network by an adversary or fortification of a network by defenders is considered  @xcite . within this body of literature , shortest path interdiction (",
    "in which an adversary wants to maximize the length of the @xmath0-@xmath1 shortest path in a directed network ) is related to our setting of @xmath0-@xmath1 path coalitional games .",
    "whereas all the variants of shortest path interdiction problem are np - hard  @xcite , we present positive computational results .    while _ vertex path noncooperative games ( vpngs ) _ have not been considered in the interdiction literature ( to the best of our knowledge ) ,",
    "_ edge path noncooperative games ( epngs ) _ is equivalent to the two player zero sum games considered in @xcite .",
    "@xcite studied maxmin strategies in epngs .",
    "our cooperative game formulation helps us in proposing equilibrium refinements such as the nucleolus ( which corresponds to a unique refinement of the maxmin strategy of the corresponding path intercept games ) and other cooperative - game solution concepts such as the shapley value .",
    "the coalitional model , especially the cost - based generalizations , helps us reason about more elaborate security settings in which incentives , money , and cooperation of agents is involved .",
    "the comparison between a simple coalitional game and its natural noncooperative version is similar in spirit to @xcite where spanning trees are considered .",
    "the general definition of cost - based generalization of a simple game is inspired by @xcite and @xcite where cost - based versions of specific graph - based simple games are considered .",
    "@xcite examined conditions for the non - emptiness of the core of _ ` shortest path games ' _ ( which are equivalent to cost - based generalization of epcgs ) . however",
    ", computational problems such as computing a least core payoff were not considered .",
    "different variants of epcgs were considered under the umbrella of ` shortest path games ' in @xcite but either the complexity of core - based relaxations is not examined or the complexity of computing least core solutions was left open and in fact conjectured to be computationally hard  ( * ? ? ? * , ) .",
    "similarly , in @xcite , it is claimed that the least core of the dual of vpcgs is np - hard to compute .",
    "we disprove the claim in @xcite and present a polynomial - time algorithm to solve a generalization of the same problem for this game as well as three other games on _ any graph_.    a variant of epcgs was also considered in @xcite but the focus was on strategy - proof mechanisms rather than stability issues .",
    "@xcite consider a different type of @xmath0-@xmath1 connectivity game which is balanced .",
    "the @xmath0-@xmath1 path connectivity setting also has natural links with network reliability where the goal is to compute the probability that there exists a connected path .",
    "however the network reliability literature does not consider strategic settings and certainly has no equivalent concepts such as the least core and the nucleolus etc .",
    "in this section , we first define the path coalitional games and path intercept games and then consider suitable game - theoretic solution concepts for these games .",
    "we begin with the formal definition of a _",
    "coalitional game_.    a _ coalitional game _ is a pair @xmath7 where @xmath8 is a set of players and @xmath9 is a _ characteristic or valuation function _ that associates with each coalition @xmath10 a payoff @xmath11 where @xmath12 .. ] a coalitional game  @xmath7 is _ monotonic _ when it satisfies the property that @xmath13 if @xmath14 .    throughout the paper ,",
    "when we refer to a coalitional game , we assume such a coalitional game with transferable utility . for the sake of brevity , we will sometimes refer to the game @xmath7 as simply  @xmath15 .",
    "a _ simple game _ is a monotonic coalitional game @xmath7 with @xmath16 such that @xmath12 and @xmath17 .",
    "a coalition @xmath18 is _ winning _ if @xmath19 and _ losing _ if @xmath20 .",
    "a _ minimal winning coalition _ of a simple game @xmath15 is a winning coalition in which defection of any player makes the coalition losing .",
    "we now define the following two _ path coalitional games_.    for an unweighted directed / undirected graph , @xmath21 ,    * the corresponding _ edge path coalitional game ( epcg ) _ is a simple coalitional game @xmath7 such that @xmath22 and for a @xmath10 , @xmath19 if and only if @xmath23 admits an @xmath0-@xmath1 path . *",
    "the corresponding _ vertex path coalitional game ( vpcg ) _ is a simple coalitional game @xmath7 such that @xmath24 and for a @xmath10 , @xmath19 if and only if @xmath23 admits an @xmath0-@xmath1 path .    for a game @xmath25 , the corresponding _ dual _",
    "game @xmath26 can be defined in the following way : @xmath27 for all @xmath10 .    for both epcg and vpcg , the corresponding duals @xmath28 and @xmath29 can be defined .",
    "it will be seen that @xmath29 is equivalent to a well - studied coalitional game .    for a simple game",
    ", we can define a game which is the _ cost - based generalization_.    for a given simple game @xmath25 we can define a _ cost - based generalization _",
    "@xmath30-@xmath31 based on _ cost vector _ @xmath32 and _ reward _ @xmath33 . for a coalition @xmath10 , the value of the @xmath34 if @xmath19 and @xmath35 if @xmath20 .",
    "the intuition of a cost - based generalization is that each player demands some cost for its services being utilized and a coalition of players @xmath23 get a reward @xmath36 only if it is winning and gets the job done .",
    "the coalition also incurs a cost of @xmath37 when it pools resources to get the job done .",
    "based on this formulation , we can define edge path coalitional games with costs c - epcg and vertex path coalitional games with costs , c - vpcg .",
    "it is easy to see that for a game c - g , if @xmath38 and the costs are all zero , then c - g is equivalent to g.    c - espg is equivalent to the _ value shortest path game ( vspg ) _ in @xcite .",
    "@xmath39 is equivalent to the _ simple path disruption game _ in @xcite .",
    "we now define the following two _ path intercept games_.    for an unweighted directed graph , @xmath21 , the corresponding _ edge path noncooperative game ( epng ) _ is a noncooperative game with two players , the _ interceptor _ and the _ passer_. the pure strategies of the interceptor are the edges @xmath2 and the pure strategies of the _ passer _ is set @xmath4 which contains all paths from vertex @xmath0 to vertex @xmath1 . if the edge used by the interceptor intersects with the chosen path , then the interceptor wins and gets payoff @xmath5 .",
    "otherwise it loses and gets payoff @xmath6 .",
    "_ vertex path noncooperative games ( vpngs ) _ have an analogous definition to epngs except that the pure strategies of the interceptor are the vertices @xmath3 and that if the vertex used by the interceptor intersects with the chosen path , then the interceptor wins and gets payoff @xmath5 .",
    "both epcg and vpng can be generalized to the case with detection probabilities where the probability that the passer moving through edge @xmath40 ( or vertex @xmath15 ) will be detected if the interceptor inspects @xmath40 ( or @xmath15 ) is @xmath41 ( or @xmath42 respectively ) .",
    "a cooperative game solution consists of a distribution of the value of the grand coalition over the players . formally speaking",
    ", a solution associates with each cooperative game  @xmath7 a set of _ payoff vectors @xmath43 _ such that @xmath44 , where @xmath45 denotes player  @xmath46 s share of  @xmath47 .",
    "such efficient payoff vectors are also called _ preimputations_. as such , solution concepts formalize the notions of fair and stable payoff vectors . in",
    "what follows , we use notation similar to that of @xcite .    given a cooperative game  @xmath7 and payoff vector @xmath48 ,",
    "the _ excess of a coalition @xmath23 with respect to @xmath49 _ is defined by @xmath50 where @xmath51 .",
    "we are now in a position to define one of the most fundamental solution concepts of cooperative game theory , viz . , the core .",
    "a payoff vector @xmath52 is in the _ core _ of a cooperative game  @xmath7 if and only for all @xmath10 , @xmath53 .",
    "a core payoff vector guarantees that each coalition gets at least what it could gain on its own .",
    "the core is a desirable solution concept , but , unfortunately it is empty for many games .",
    "games which have a non - empty core are called _ balanced_. the possibility of the core being empty led to the development of the _ @xmath54-core _",
    "@xcite and the _ least core _  @xcite .    for @xmath55 ,",
    "a payoff vector @xmath49 is in the _ @xmath54-core _ if for all @xmath10 , @xmath56 .",
    "the payoff vector  @xmath49 is in the _ least core _",
    "if it is in the @xmath54-core for the smallest  @xmath54 for which the @xmath54-core is non - empty .",
    "we will denote by @xmath57 , the minimum excess of any least core payoff vector of @xmath7 .",
    "it is easy to see from the definition of the least core , that it is the solution of the following linear program ( lp ) :    @xmath58    the nucleolus is a special payoff vector which is in the core if the core is non - empty and is otherwise a member of the least core .",
    "the _ excess vector _ of a payoff vector @xmath49 , is the vector @xmath59 where @xmath60 .",
    "a payoff vector @xmath49 such that @xmath61 for all @xmath62 and @xmath49 has lexicographically the largest excess vector is called the _",
    "nucleolus_.    the nucleolus is unique and always exists as long as @xmath20 for all singleton coalitions  @xcite .",
    "before considering other computational issues , we notice that the value of a coalition in epcgs and vpcgs can be computed in polynomial time . for a coalition @xmath23 in a epcg / c - vpcg ,",
    "use _ depth first search _ to check whether @xmath0 and @xmath1 are connected in a graph restricted to @xmath23 . if not , then @xmath20 . otherwise , @xmath11 is equal to @xmath5 .",
    "our first observation is that in all games epcg , vpcg , @xmath28 and @xmath29 , the core can be empty .",
    "in fact , the following proposition characterizes when the core of these games is non - empty :    the core of    * epcg is non - empty if and only if there exists an edge , the removal of which disconnects @xmath0 and @xmath1 .",
    "* vpcg is non - empty if and only if there exists a vertex , the removal of which disconnects @xmath0 and @xmath1 .",
    "* @xmath28 is non - empty if and only if there exists an @xmath63 edge . * ( @xcite ) @xmath29 is non - empty if and only if there exists a vertex @xmath49 such that @xmath64 and @xmath65 are edges in the graph .",
    "all cases follow directly from the fact that in a simple monotone game , the core is non - empty if and only if there exists a vetoer , i.e. , a player @xmath62 such that @xmath66  ( see e.g. , * ? ? ? * ) . for the dual games , note the following .",
    "let @xmath67 be the dual game and let @xmath49 be a player such that @xmath68 .",
    "we want to show that player @xmath49 is a vetoer in @xmath67 i.e. , @xmath69 . we know that @xmath17 .",
    "then , by definition of dual , @xmath70 .",
    "thus x is a vetoer in @xmath67 .",
    "since the core can be empty , the least core payoff assumes more importance .",
    "we will first present a general positive result ( theorem  [ th : main ] ) regarding the computation of least core payoff for cost - based generalizations of simple games . for a simple game @xmath25 and @xmath71 , denote by @xmath72 game @xmath73 in which each player @xmath62 has weight @xmath45 .",
    "then , a _ minimum weight winning coalition _ of @xmath72 a winning coalition @xmath23 such that @xmath74 is minimal .",
    "[ th : main ] for a simple game @xmath25 , assume that there exists an algorithm which for a given weight vector @xmath71 , computes in polynomial time a minimum weight winning coalition of @xmath72 .",
    "then , a least core payoff of a cost - based generalization of @xmath73 can be computed and verified in polynomial time .",
    "we will denote the algorithm in the statement as algorithm @xmath75 .",
    "consider c - g@xmath76 be the cost - based generalization of @xmath7 with associates cost vector @xmath32 and reward @xmath33 .    in order to compute a least core payoff of c - g",
    ", we consider the least core lp for c - g .",
    "the size of the linear program   is exponential in the size of game c - g , with an inequality for every subset of players .",
    "however , this linear program can be solved using the ellipsoid method and a separation oracle , which verifies in polynomial time whether a solution is feasible or returns a violated constraint  @xcite .",
    "we now demonstrate how algorithm @xmath75 can be used to construct the separation oracle for the least core lp of c - g .",
    "a candidate solution for the least core payoff is an efficient payoff @xmath77 such that @xmath78 weight of the minimum weight winning coalition of @xmath79 . since @xmath32",
    ", algorithm @xmath75 can be used to compute @xmath37 and therefore @xmath80 .",
    "now that @xmath80 is known , a separation oracle for the least core lp considers different candidate solutions @xmath49 such that @xmath80 is constant .    for a candidate solution @xmath77 , where @xmath81 minimum cost of a winning coalition in c - g , construct the weighted function @xmath82 such that @xmath83 for all @xmath62 . since @xmath84 and @xmath85 for all @xmath62 , @xmath86 for all @xmath62 .",
    "therefore , we can use algorithm @xmath75 to compute a minimum weight winning coalition @xmath87 of @xmath88 .",
    "now the claim is that @xmath87 is a coalition with the minimum excess of c - g with respect to payoff @xmath49 and that @xmath89 is the minimum of excess of game c - g with respect to payoff @xmath49 .",
    "note that @xmath90    for the sake of contradiction , assume that there is a coalition @xmath91 which has the minimum excess with respect to @xmath49 in game c - g such that @xmath91 is not a minimum weight winning coalition of @xmath88 . then , either @xmath91 is not winning or is winning but not a minimum weight winning coalition . if @xmath91 is losing , then @xmath92 . since @xmath93 , @xmath91 does not have smaller excess that @xmath87 in game c - g with respect to payoff @xmath49 .    in the second case ,",
    "assume that @xmath94 but @xmath95 .",
    "without loss of generality , @xmath91 is a minimal winning coalition .",
    "if it were not , then we prove that there exists an @xmath96 such that @xmath97 is a minimal winning coalition and @xmath98 .",
    "if @xmath99 , then we are already done as @xmath100 .",
    "assume that @xmath101 .",
    "then , there exists a minimal winning coalition @xmath102 such that @xmath103 .",
    "but then it must be that @xmath104 because if it were not , then @xmath105 .",
    "thus , we have established that @xmath91 is a minimal winning coalition without loss of generality . since @xmath106 , therefore @xmath107 .",
    "we can use the known algorithm @xmath75 to compute the winning coalition @xmath87 with the smallest total weight @xmath108 . if we have @xmath109 , then @xmath110 for all @xmath10 .",
    "therefore , @xmath49 is feasible .",
    "otherwise , the constraint @xmath111 is violated .",
    "this completes our argument that a polynomial - time separation oracle for the least core lp of the c - g can be constructed .",
    "a payoff @xmath77 can be verified if it is in the @xmath54-core by using the separation oracle .",
    "since the minimum excess @xmath112 of the least core payoff can be computed , therefore the separation oracle can also be used directly to check if the given payoff is in the least core .",
    "[ cor : scg ] a least core can be computed for cost - based generalizations of the following games : _ spanning connectivity games _",
    "@xcite and _ weighted voting games  @xcite with bounded weights and also bounded costs_.    for a spanning connectivity game @xmath73 , there exists an algorithm which for a given weight vector @xmath71 , computes in polynomial time a minimum weight winning coalition of @xmath72  ( proposition 5 , * ? ? ?",
    "* ) .    for weighted voting games with weights represented in unary",
    ", there exists an algorithm which for a given weight vector @xmath71 , computes in polynomial time a minimum weight winning coalition of @xmath72  ( theorem 5 , * ? ? ?",
    "since the algorithm works only for weighted voting games with small weights , the algorithm can be used as a separation oracle for the least core of cost - based generalization of weighted voting games only if the associated cost vector is also represented in unary .    from the proof of theorem",
    "[ th : main ] and corollary  [ cor : scg ] it is evident that if there the separation oracle to compute the least core lp of a simple game @xmath73 can also be used as a separation oracle to compute the least core lp of a cost - based generalization of @xmath73 .",
    "we say that the representation of a coalitional game @xmath7 is _ as compact _ as the cost function @xmath113 , if the following condition holds : if cardinal values used in the representations of @xmath7 are in unary , then @xmath114 is also represented in unary .",
    "[ th : main2 ] let @xmath25 be the underlying simple game and c - g@xmath76 be the cost - based generalization of @xmath7 .",
    "assume that the representation of @xmath7 is as compact as the cost function @xmath114 .",
    "then , if there exists a polynomial - time separation oracle for the least core lp of the underlying simple game , then a least core payoff of the cost - based generalization can be computed and verified in polynomial time .",
    "we now apply theorem  [ th : main ] to path coalitional games .",
    "[ th : escg - costs - lc ] there exist polynomial - time algorithms to compute and verify least core payoffs of cost - based generalizations of edge path coalitional games ( c - epcgs ) and edge path coalitional games ( c - epcgs ) for both directed and undirected graphs .",
    "we use theorem  [ th : main ] to prove the statement .",
    "+ c - epcgs : for a c - epcg @xmath73 , it is sufficient to show that for a weight vector , @xmath115 , we can compute a minimum weight winning coalition of @xmath72 .",
    "each player ( edge ) @xmath46 has a weight @xmath45 and the minimum weight winning coalition is an @xmath0-@xmath1 simple path @xmath116 with the smallest weight , that is the shortest @xmath0-@xmath1 path .",
    "dijkstra s shortest path algorithm _ to compute the shortest path @xmath116 from @xmath0 to @xmath1 in graph @xmath117 and then the minimum weight winning coalition is @xmath118 , the edges used in path @xmath116 . + c - vpcgs : for a c - vpcg @xmath73 , it is sufficient to show that for a weight vector , @xmath119 , we can compute a minimum weight winning coalition of @xmath72 .",
    "each player ( node ) @xmath46 has a weight @xmath45 and the minimum excess coalition is an @xmath0-@xmath1 simple path @xmath116 with the smallest weight , that is the shortest vertex @xmath0-@xmath1 path .",
    "then compute the shortest vertex weighted path @xmath116 from @xmath0 to @xmath1 in graph @xmath117 and then the minimum weight winning coalition is @xmath120 .",
    "dijkstra s shortest path algorithm can be used to compute the shortest vertex weighted path as follows .",
    "the problem can be reduced to the classic shortest path problem in the following way : duplicate each vertex ( apart from @xmath0 and @xmath1 ) with one getting all ingoing edges , and the other getting all the outgoing edges , add an internal edge between them with the node weight as the edge weight . use the algorithm to compute the shortest vertex path @xmath116 from @xmath0 to @xmath1 in graph @xmath117 .",
    "a least core payoff of a coalitional game is not necessarily a least core payoff of the dual game . therefore , we require new algorithms to compute the least core of dual coalitional path games .    [",
    "th : dual - epcg - costs - lc ] there exist polynomial - time algorithms to compute and verify least core payoffs of c-@xmath28s and c-@xmath29s for both directed and undirected graphs .",
    "we utilize theorem  [ th : main ] to prove the statement .",
    "+ c-@xmath28 : for a c-@xmath28 @xmath73 , it is sufficient to show that for a weight vector , @xmath115 , we can compute a minimum weight winning coalition of @xmath72 .",
    "each player ( edge ) @xmath46 has a weight @xmath45 and the minimum weight winning coalition is an @xmath0-@xmath1 cut @xmath116 with the smallest weight .",
    "use the maximum network flow algorithm  ( * ? ? ?",
    "* chapter 27 , ) to compute the minimum weight edge @xmath0-@xmath1 cut @xmath30 in graph @xmath72 .",
    "this gives us the minimal winning coalition @xmath30 with the minimum weight .",
    "+ c-@xmath29 : for a c-@xmath29 @xmath73 , it is sufficient to show that for a weight vector , @xmath119 , we can compute a minimum weight winning coalition of of @xmath72 .",
    "each player ( node ) @xmath46 has a weight @xmath45 and the minimum weight winning coalition is a minimum weight @xmath0-@xmath1 vertex cut .",
    "then compute the minimum weight @xmath0-@xmath1 vertex cut in graph @xmath117 and then the minimum weight winning coalition is @xmath120 .",
    "it is known that the minimum weight vertex @xmath0-@xmath1 cut can be computed in polynomial time for directed graphs by standard network - flow methods . the network flow method to compute the minimum edge @xmath0-@xmath1 cut",
    "can be used to compute the minimum vertex @xmath0-@xmath1 cut as following .",
    "the problem can be reduced to the problem of min weight @xmath0-@xmath1 edge cut of an edge weight directed graph in the following way : duplicate each vertex ( apart from @xmath0 and @xmath1 ) with one getting all incoming edges , and the other getting all the outgoing edges , add an internal edge between them with the node weight as the edge weight . set the weight of all original edges as infinite ( sufficiently large ) .",
    "we use existing algorithms to compute the minimum weight vertex @xmath0-@xmath1 cut to construct the separation oracle for the c-@xmath39 least core lp .",
    "we note that if instead of using @xmath0-@xmath1 connectivity settings , we consider more than two terminals then some problems such as in-@xmath54-core become np - hard .",
    "this follows from the fact that computing a min cut for more than two terminals is np - hard .",
    "in this section , we take a closer look at simple path coalitional games without costs",
    ". we will refer to the minimum size of an @xmath0-@xmath1 cut of a unweighted graph as @xmath121 if we refer to edge cuts and as @xmath122 if we refer to vertex cuts .",
    "then we have the following theorem :    [ th : lc - charac ] consider an epcg @xmath123 and a vpcg @xmath124",
    ". then @xmath125 and @xmath126 . moreover , there are combinatorial polynomial - time algorithms to compute and verify a least core payoff of epcgs and vpcgs",
    ".    consider an epng based on graph @xmath73 with detection probabilities @xmath127 .",
    "let @xmath128 denote set of mixed strategies ( probability distributions ) on a finite set @xmath75 .",
    "the equilibrium or _ maxmin _ strategies of the interceptor are the solutions @xmath129 to the following linear program , which has the optimal value @xmath130 .",
    "@xmath131    we notice that if @xmath132 for @xmath133 , then lp   is equivalent to the least core lp for epcgs .",
    "it is clear that maxmin strategy @xmath49 of epng where @xmath132 for all @xmath133 is equivalent to the least core payoff of epcg corresponding to @xmath73 .",
    "lp   is equivalent to lp 1 in @xcite if @xmath41 is set to @xmath5 for each edge in both lps .",
    "this demonstrates that computing maxmin strategies of epng is equivalent to computing least core payoffs of epcgs .",
    "@xcite conclude that maxmin strategy is obtained by constructing a graph @xmath134 where @xmath135 and then computing the minimum weight @xmath0-@xmath1 cut @xmath23 .",
    "each edge @xmath136 is then given interdiction probability proportional to @xmath137 .",
    "it follows that if @xmath132 for all @xmath133 , then @xmath135 , and the minimum weight @xmath0-@xmath1 cut @xmath23 of @xmath134 is simply the min cardinality @xmath0-@xmath1 cut @xmath23 of @xmath73 .",
    "a maxmin strategy @xmath49 of the interceptor , each edge in @xmath23 is inspected with probability @xmath138 .",
    "therefore for epcg corresponding to @xmath73 , the payoff of each simple @xmath0-@xmath1 path or equivalently minimum winning coalition has payoff @xmath139 and the minimum excess @xmath112 of the epcg is @xmath140 .",
    "we note that a similar analysis holds for vpcgs .",
    "theorem  [ th : lc - charac ] helps to give a correspondence between epcg and epng and also between vpcg and vpng .",
    "we note that there is no such correspondence between , for example epng with detection probabilities and c - epcg .",
    "theorem  [ th : lc - charac ] helps us formulate combinatorial algorithms to compute the least core of epcgs and vpcgs ( without costs ) .",
    "the problem of computing a least core payoff reduces to computing a minimum cardinality edge cut ( or vertex cut ) of the graph and uniformly distributing the probability over the minimum cut .",
    "_ such least core payoffs are the extreme points of the least core convex polytope and in fact any other least core payoff is a convex combination of the extreme points . _",
    "our demonstrated connection of epngs to the corresponding coalitional epcg in the proof of theorem  [ th : lc - charac ] helps examine refinements of the maxmin strategies such as the nucleolus .",
    "the nucleolus of a coalitional game is the unique and arguably the fairest solution concept which is guaranteed to lie in the core if the core is non - empty . the interpretation of the nucleolus in the non - cooperative setting is the maxmin strategy of the passer which not only minimizes the number of pure best responses of the interceptor but also maximizes the potential extra payoff if the interceptor does not choose the optimal strategy .",
    "computing the nucleolus is a notoriously hard problem and only a handful of non - trivial coalitional games are known for which the nucleolus can be computed efficiently  ( see * ? ? ?",
    "we will show that for certain graph classes like series - parallel graphs , the nucleolus strategy can be computed in polynomial time ( theorem  [ th : epcg - nucleolus - sp ] ) .",
    "series - parallel graphs are an especially useful class of graphs because they are present in many settings such as electrical networks , urban grid lay - outs etc .",
    "let @xmath141 be a graph with source @xmath0 and sink @xmath1 .",
    "then @xmath73 is a _ series - parallel graph _ if it may be reduced to @xmath142(a two vertex clique ) by a sequence of the following operations :    1 .",
    "replacement of a pair of parallel edges by a single edge that connects their common endpoints ; 2 .",
    "replacement of a pair of edges incident to a vertex of degree 2 other than @xmath0 or @xmath1 by a single edge so that @xmath143 degree vertices get removed .",
    "denote the set of edge min cuts of a graph @xmath73 by @xmath144 .",
    "denote by @xmath145 the set @xmath146 .",
    "[ lemma : epcg ] for an undirected series - parallel graph @xmath21 , let @xmath49 be a least core payoff of the corresponding epcg and let @xmath133 be such that @xmath147 . then @xmath148 .",
    "let @xmath149 be such that @xmath147 and assume for contradiction that there is a least core payoff of epcg for @xmath73 such that @xmath150 .",
    "let the graph component in series with and left of @xmath40 be @xmath151 , the graph component in series with and right of @xmath40 be @xmath152 , the graph component in parallel and above @xmath40 be @xmath153 and the graph component in parallel below @xmath40 be @xmath154 . since @xmath147 there exists no edge @xmath155 such that @xmath156 .",
    "now assume that the mincut value of @xmath73 is @xmath157 .",
    "the mincut @xmath30 with size @xmath157 must either be in @xmath151 or @xmath152 .",
    "we also know that since @xmath49 is a least core payoff , the length of the shortest @xmath0-@xmath1 path in @xmath73 is @xmath158 .",
    "we show that if @xmath150 , then a transfer of payoff from certain edge in @xmath159 increases the minimum excess , thereby showing that @xmath49 is not a least core payoff .",
    "if there exists no shortest @xmath160-@xmath161 path which includes @xmath40 , then we know that @xmath40 is present in no coalition which gets the minimum excess .",
    "therefore @xmath40 can donate its payoff uniformly to @xmath30 and increase the minimum excess by @xmath162 .",
    "now assume that @xmath40 is in one of the shortest @xmath160-@xmath161 paths . clearly , this is not the only simple @xmath160-@xmath161 paths because if this were the case then @xmath40 would be a bridge be one of the mincuts .",
    "we know that mincut value of @xmath159 is more than @xmath157 .",
    "let @xmath23 be the minimum cut of @xmath159 .",
    "we know that @xmath163 .",
    "then , we can show that the minimum excess of @xmath49 increases if @xmath74 is distributed uniformly over @xmath30 .",
    "each shortest @xmath0-@xmath1 path if @xmath72 has to pass one edge in @xmath30 and one edge in @xmath23 .",
    "the the weight of each edge in @xmath30 has increased by @xmath164 and the length of the shortest @xmath160-@xmath161 has decreased by @xmath164 , the excess increases exactly by positive value @xmath165 without decreasing any other excesses .",
    "[ th : epcg - nucleolus - sp ] the nucleolus of epcgs for undirected series - parallel graphs can be computed in polynomial time .    we show that the problem of computing the nucleolus of epcgs of undirected series - parallel graphs reduces to computing the parallel - series decomposition of the graph",
    ". there are known standard algorithms to identify and decompose series - parallel graphs  ( * ? ? ?",
    "* see e.g. , ) .",
    "the reduction is based on an inductive argument in which if we know the nucleolus of two graphs @xmath166 and @xmath167 , then we can also compute in polynomial time the nucleolus of the graph made by connecting @xmath166 and @xmath167 in series or parallel .",
    "the proof by induction is as follows :    [ [ base - case ] ] base case : + + + + + + + + + +    the base case is trivial . in any graph @xmath73 with a single edge @xmath40 connecting @xmath0 and @xmath1 , the ( pre)nucleolus @xmath49 gives payoff @xmath5 to @xmath40 .    [",
    "[ induction ] ] induction : + + + + + + + + + +    our induction involves two cases : attaching two graph components in series and parallel .",
    "consider two series - parallel undirected graphs @xmath166 and @xmath167 and assume we already know that their nucleoli are @xmath168 and @xmath169 respectively .",
    "we will show that computing the nucleolus of @xmath73 formed by joining @xmath166 and @xmath167 in series and parallel is polynomial - time easy .    1",
    ".   assume we attach @xmath166 and @xmath167 in series to obtain @xmath73 .",
    "let the size of any edge mincut be @xmath170 and any edge mincut be @xmath171 .",
    "if @xmath172 , then by lemma  [ lemma : epcg ] , there is no advantage of giving payoff to any edges in @xmath167 .",
    "therefore , the nucleolus of @xmath166 is equal to the nucleolus of @xmath73 and we are done .",
    "assume that @xmath173 .",
    "we recall that the nucleolus satisfies _ anonymity _ and _ covariance _  @xcite . then due to lemma  [ lemma : epcg ] and covariance and anonymity property of the nucleolus , we have @xmath174 where @xmath175 .",
    "let @xmath176 and @xmath177 be the smallest non - zero payoff of a player in @xmath168 and @xmath169 respectively .",
    "we then show that @xmath174 is the nucleolus if @xmath178 has the unique value for which @xmath179 , i.e. , @xmath180 . if this were true , then @xmath181 . in this case , the minimum excess for @xmath49 is @xmath182 and the number of coalitions achieving this in @xmath73 is @xmath183 where @xmath75 is the set number of simple paths in @xmath72 and @xmath184 .",
    "we also know that the value of the second minimum excess is @xmath185 .",
    "now assume that there exists another payoff @xmath186 for some @xmath187 such that @xmath188 has a lexicographically greater excess vector than @xmath49 .",
    "clearly @xmath188 is a least core payoff of @xmath73 .",
    "then the minimum excess for @xmath49 is @xmath182 and the number of coalition achieving this in @xmath73 is still @xmath183 .",
    "however the second minimum excess for @xmath188 is less than @xmath185 .",
    "therefore , @xmath188 has a smaller lexicographical excess vector than @xmath49 which is a contradiction .",
    "2 .   consider two series - parallel undirected graphs @xmath166 and @xmath167 and assume we attach them in parallel to obtain @xmath73 .",
    "let the size of any edge mincut of @xmath166 be @xmath170 and the size of any edge mincut of @xmath167 be @xmath171 .",
    "both the mincut values can be computed in polynomial time for a graph .",
    "we know that the size of mincut of @xmath73 is @xmath189 .",
    "then due to lemma  [ lemma : epcg ] and covariance and anonymity properties of the nucleolus , we know that @xmath174 where @xmath175 .",
    "we then show that @xmath174 is the nucleolus if alpha has the unique value @xmath190 .",
    "since the size of a mincut of @xmath73 is @xmath189 , every least core payoff @xmath188 of is such that @xmath191 has shortest path @xmath192 .",
    "we want that every shortest @xmath0-@xmath1 path which passes from @xmath73 to have length @xmath192 .",
    "this is only possible if @xmath193 .",
    "we conjecture that a similar approach may help construct a polynomial - time algorithm to compute the nucleolus of vpcgs for series - parallel graphs .",
    "path coalitional games provide a simple yet rich framework to model strategic settings in the area of network security and logistics . in this paper",
    "we analyzed different generalizations and variants of path coalitional games and classified the computational complexity of computing different cooperative and noncooperative game solutions .",
    "one key result was a general method to compute least core payoffs of cost - based generalizations of simple games .",
    "many of our positive results are based on separation oracles and linear programs .",
    "it will be interesting to see if there are purely combinatorial algorithms for the same problems .",
    "apart from the epcgs on series - parallel graphs , the complexity of computing the nucleolus is open for all other games .",
    "for all variants of path coalitional games , we assumed that each edge / vertex is owned by a separate player .",
    "it will be interesting to see if our positive results can be extended to the more general scenario where a single player may own more than one edge or vertex .",
    "h.  aziz , o.  lachish , m.  paterson , and r.  savani .",
    "wiretapping a hidden network . in _ proceedings of the 5th international workshop on internet and network economics ( wine ) _ , volume 5929 of _ lecture notes in computer science ( lncs ) _ , pages 438446 .",
    "springer - verlag , 2009 .",
    "h.  aziz , f.  brandt , and p.  harrenstein .",
    "monotone cooperative games and their threshold versions . in w.",
    "van  der hoek , g.  a. kaminka , y.  lesprance , and m.  luck , editors , _ proceedings of the 9th international joint conference on autonomous agents and multi - agent systems ( aamas ) _ , pages 10171024 , 2010 .",
    "y.  bachrach and e.  porat .",
    "path disruption games . in w.",
    "van  der hoek , g.  kaminka , y.  lesprance , m.  luck , and s.  sen , editors , _ proceedings of the 9th international joint conference on autonomous agents and multi - agent systems ( aamas ) _ , pages 11231130 , 2010 .",
    "x.  deng and z.  fang .",
    "algorithmic cooperative game theory . in a.",
    "chinchuluun , p.  m. pardalos , a.  migdalas , and l.  pitsoulis , editors , _ pareto optimality , game theory and equilibria _ , volume  17 of _ springer optimization and its applications_. springer - verlag , 2008 .",
    "l.  khachiyan , e.  boros , k.  borys , k.  m. elbassioni , v.  gurvich , g.  rudolf , and j.  zhao . on short paths",
    "interdiction problems : total and node - wise limited interdiction .",
    "_ theory of computing systems _ , 430 ( 2):0 204233 , 2008 .",
    "j.  c. smith and c.  lim .",
    "algorithms for network interdiction and fortification games . in _ pareto optimality , game theory and equilibria _ , volume  17 of _ springer optimization and its applications _ , pages 609644 .",
    "springer , 2008 ."
  ],
  "abstract_text": [
    "<S> we present a general framework to model strategic aspects and stable and fair resource allocations in networks via variants and generalizations of _ path coalitional games_. in these games , a coalition of edges or vertices is successful if it can enable an @xmath0-@xmath1 path . </S>",
    "<S> we present polynomial - time algorithms to compute and verify least core payoffs of _ cost - based generalizations _ of path coalitional games and their duals , thereby settling a number of open problems . </S>",
    "<S> the least core payoffs of path coalitional games are completely characterized and a polynomial - time algorithm for computing the nucleolus of edge path coalitional games on undirected series - parallel graphs is presented . </S>"
  ]
}
{
  "article_text": [
    "the characterization of porous media at the pore level is undergoing a revolution @xcite . through the use of new scanning techniques",
    ", we are capable of reconstructing the pore space completely , including the tracking of motion of immiscible fluids .",
    "a gap is now appearing between the geometrical characterization of porous media and our ability to predict their flow properties based on this knowledge .",
    "the pore scale may be of the order of microns whereas the largest scales  e.g.  the reservoir scale  may be measured in kilometers .",
    "hence , there are some eight orders of magnitude between the smallest and the largest scales . at some intermediate scale ,",
    "that of the representative elementary volume ( rev ) , the porous medium may be regarded as a continuum and the equations governing the flow properties are differential equations .",
    "the crucial problem is to construct these effective differential equations from the physics at the pore scale .",
    "this is the upscaling problem .",
    "a possible path towards this goal is to use brute computational power to link the pore scale physics to pore networks large enough so that a continuum description makes sense .",
    "alas , this is still beyond what can be done numerically .",
    "however , computational hardware and algorithms are steadily being improved and we are moving towards this goal .",
    "it is the aim of this paper to introduce a new algorithm that improves significantly on the efficiency of network models @xcite .",
    "these are models that are based on the skeletonization of the spaces in such a way that a network of links and nodes emerge .",
    "each link and node are associated with parameters that reflect the geometry of the pore space they represent .",
    "the fluids are then advanced by time stepping some simplified version of equations of motion of fluid .",
    "the bottle neck in this approach is the necessity to solve the kirchhoff equations to determine the pressure field whose gradients drive the fluids in competitions with the capillary forces .",
    "a different and at present popular computational approach , among several , is the lattice boltzmann method @xcite .",
    "this method , based on simultaneously solving the boltzmann equations for different species of lattice gases , is very efficient compared to the network approach necessitating solving the kirchhoff equations .",
    "however , the drawback of the lattice boltzmann approach is that one needs to resolve the pore space .",
    "hence , one needs to use a grid with a finer mask than the network used in the network approach .",
    "this makes the lattice boltzmann approach very efficient at the scale where the actual shape of the pores matter , but not at the larger scale where the large scale topology of the pore network is more important .",
    "further methods which resolve the flow at the pore level are e.g.  smoothed particle hydrodynamics @xcite and density functional hydrodynamics @xcite . when network models are so heavy numerically that the networks that can be studied are not much larger than those studied with the pore scale methods , the latter win as they can give a more detailed description of the flow",
    "however , if the computational limitations inherent to network models could be overcome , they would form an important tool in resolving the scale - up problem : at small scale network models would be calibrated against the methods that are capable of resolving the flow at the pore level . on large scales , their results",
    "may be extrapolated to scales large enough for homogenization , i.e. , replacing the original pore network by a continuum .    as pointed out above",
    ", the bottleneck in the network models is the necessity to determine the pressure field at each time step . when the time steps are determined by the motion of the fluid interfaces",
    ", these will be small as they typically are set by the time lapse before the next interface reaches a node in the network .",
    "time stepping allows detailed questions concerning how flow patterns develop in time to be answered . that is , the time stepping provides a detailed sequence of configurations where each member of the sequence is the child of the one before and the parent of the one after . if the quantities that are calculated are averages over configurations , time stepping will provide too much information ; for averages the _ order _ in which the configurations occur is of no consequence .",
    "if the order in which the fluid configurations occur is scrambled , the averages remain unchanged .",
    "this is where the monte carlo method enters .",
    "it provides a way to produce configurations that will result in the same averages as those obtained through time stepping .",
    "the order in which the configurations occur will be different from those obtained by time stepping .",
    "the time stepping procedure necessitates that there are tiny differences between each configuration in the sequence , since the time steps have to be small .",
    "this limitation is overcome in the monte carlo method which we will describe here .",
    "this makes the monte carlo method much more efficient than time stepping as we will see .    in section [ sec : network ]",
    "we describe the network model we use to compare the monte carlo method with time stepping , see aker et al .  and",
    "knudsen et al .  @xcite . in the next section [ sec : metropolis ] ,",
    "we start by explaining the statistical mechanics approach to immiscible two - phase flow in porous media that lies behind the monte carlo algorithm we propose @xcite . in particular",
    ", we derive the configuration probability  the probability that a given distribution of fluid interfaces in the model will appear .",
    "this is also known as the _ ensemble distribution _ in the statistical physics community .",
    "based on this knowledge , we then go on to describe the monte carlo algorithm itself .",
    "this section is followed by section [ sec : results ] where we compare the monte carlo method with time stepping using the same network model described in section [ sec : network ] .",
    "we then go on to compare the efficiency in terms of computational cost of the two methods .",
    "we end this section by discussing the limitations of the monte carlo algorithm as it now stands and point towards how these may be overcome .",
    "we end by section [ sec : conc ] where we summarize the work and draw our conclusions .",
    "in order to have a concrete system to work with , we describe here the details of the network model we use .",
    "the model is essentially the one first developed in references @xcite . for simplicity we do not consider a reconstructed pore network based on a real porous medium @xcite",
    "rather , we simply use a two - dimensional square network , with disorder in the pore radii , oriented at 45@xmath0 with respect to the average flow direction as shown in figure [ fig2 - 1 ] .",
    "as described in @xcite , we use _ bi - periodic boundary conditions . _",
    "hence , the network takes a form of the surface of a torus . in this way",
    ", the two - phase flow enters a steady state after an initial transient period .",
    "this steady state does _ not _ mean that the fluid interfaces are static .",
    "rather , we use capillary numbers high enough so that fluid clusters incessantly form and break up . by _ steady state _",
    "we mean that the macroscopic averages  averages over the entire network  are well defined and do not drift .",
    "the network contains @xmath1 links .",
    "all links have equal length @xmath2 , but their radii have been drawn from a uniform distribution of random numbers in the interval @xmath3 $ ] .",
    "we set @xmath4 mm .",
    "we neglect gravitational effects .",
    "fluid flow through each link in the network is modeled using the washburn equation @xcite , see figure [ fig2 - 2 ] .",
    "there is a volume flow @xmath5 passing through it driven by the two pressures @xmath6 and @xmath7 .",
    "each fluid interface contributes a capillary pressure @xmath8 where @xmath9 $ ] is the position of the interface . the capillary pressure is given by the young - laplace equation @xmath10\\;,\\ ] ] where @xmath11 is the surface tension , @xmath12 the contact angle between the interface and the pore wall .",
    "we set @xmath13 dyn / cm .",
    "@xmath14 is the average link radius .",
    "we assume that the link has a shape so that @xmath15 attains the given @xmath16 dependence .",
    "it has been chosen so that @xmath17 and @xmath18 .",
    "the washburn equation then becomes @xmath19\\;,\\ ] ] where @xmath20 is the viscosity .",
    "@xmath21 and @xmath22 are the fractions of the link length that cover the non - wetting and wetting fluids respectively so that @xmath23 .",
    "we set @xmath24 poise .",
    "we define the capillary number @xmath25 as @xmath26 where @xmath27 is an average over all links .",
    "a pressure difference @xmath28 is applied across the network .",
    "this is done in spite of the network being periodic in the direction of the pressure difference , see knudsen et al .",
    "@xcite . by demanding balance of flow at each node using the washburn equation ( [ eq : wash ] ) ,",
    "we determine the pressures ( @xmath29 ) at the nodes .",
    "this is done by solving the corresponding matrix inversion problem by using the conjugate gradient algorithm @xcite .    when the pressures at nodes are known , the flow @xmath30  here between neighboring nodes @xmath31 and @xmath32 connected by a link",
    " is calculated using equation ( [ eq : wash ] ) .",
    "knowing the velocity of the interfaces in each link , we then determine the time step such that any meniscus can move a maximum distance , say , one - tenth of the length of corresponding link in that time .",
    "all the interfaces are then moved accordingly and the pressure at the nodes are determined again by conjugate gradient algorithm .",
    "this is equivalent to event - driven molecular dynamics .",
    "when an interface reaches the node , the interface will spread into the links that are connected to the node and which have fluid entering them from the node .",
    "the rules for how this is done are described in detail in knudsen et al .",
    "we first describe the theory that lies behind the monte carlo algorithm that we present . we need to introduce the concepts of _ configuration _ , and _ configuration probability , _ also known as the ensemble distribution in the statistical mechanics community .",
    "we then go on to derive the configurational probability .",
    "armed with this , we construct the monte carlo algorithm @xcite after having presented a short review of the metropolis version of monte carlo @xcite .",
    "sinha et al .",
    "@xcite studied the motion of bubbles in a single capillary tube with varying radius .",
    "suppose that the capillary tube has a length @xmath33 and a radius that varies as @xmath34 $ ] where @xmath35 , @xmath36 is an amplitude and @xmath14 the average radius of the tube .",
    "suppose furthermore that the tube is filled with wetting fluid except for a bubble of length @xmath37 and a center position @xmath38 . by using equation ( [ eq : cap ] ) ,",
    "one derives the net capillary force from the two interfaces that limit the bubble as , @xmath39 where @xmath40 . by combining this equation with the washburn equation ( [ eq : wash ] ) , one finds @xmath41\\;,\\ ] ] where @xmath42 , and @xmath43 where @xmath28 is the pressure difference across the tube .",
    "suppose there is a quantity @xmath44 that depends on the position of the bubble in the capillary tube .",
    "for example , @xmath45 might be the flow @xmath5 .",
    "let us now assume that @xmath28 does not vary in time .",
    "the time average of @xmath45 is then @xmath46 where @xmath47 is the time integration of the washburn equation ( [ eq : wash ] ) and the time period @xmath48 .",
    "we note , _ and this is the crucial observation , _ that we may change integration variable from time @xmath49 to bubble position @xmath38 , @xmath50 where @xmath51 is the _ configuration probability . _",
    "that is , the _ configuration _ of the tube is given by the position of @xmath38 of the bubble .",
    "equation ( [ eq:1dpi ] ) gives the probability density to find the bubble at position @xmath38  and hence in that configuration .",
    "the washburn equation ( [ eq : mot1d ] ) gives the motion of the bubble that is used in equations ( [ eq : fxave ] ) and ( [ eq:1dpi ] ) .",
    "the washburn equation assumes that we control the pressure drop @xmath28 .",
    "if we on the other hand control the flow @xmath5 , the equation of motion becomes @xmath52 the time period now becomes @xmath53 and hence the configurational probability is @xmath54 which states that all positions of the bubble is equally probable .",
    "to ramp up the complexity of the problem , we assume that there are @xmath55 bubbles in the one - dimensional tube . the centers of mass of bubble number @xmath56 $ ] is @xmath57 and it has a width of @xmath58 .",
    "since the system is one dimensional , all bubbles move with the same speed @xmath59 .",
    "the washburn equation is then @xmath60\\;,\\ ] ] where @xmath61 and @xmath62 solving the equations of motion ( [ eq : washmany ] ) gives @xmath63 .",
    "we may invert @xmath64 to get @xmath65 .",
    "hence , we then have @xmath66 for all @xmath32 .",
    "suppose now we have a function @xmath67 , analogous to the one introduced in equation ( [ eq : fxave ] ) .",
    "its time average is @xmath68 where @xmath69 where @xmath70 .",
    "this is precisely the same expression as in ( [ eq:1dpi ] ) .",
    "we now turn to complex network topologies . for concreteness",
    ", we may imagine a two - dimensional square network .",
    "however , the arguments presented in the following are general . a configuration is given by the position of all interfaces .",
    "let us denote that @xmath71 , where @xmath72 is the position of the @xmath31th interface .",
    "hence , @xmath72 contains information both on which link the interface sits in and where it sits in the link .",
    "a flow @xmath73 passes through the network .",
    "the flow equations for the network consist of a washburn constitutive equation for each link combined with the kirchhoff equations distributing the flow between the links .",
    "the motion of the interfaces are highly non - linear , but of the form @xmath74 .",
    "solving these equations gives @xmath63 .",
    "again we consider a function @xmath75 of the position of the interfaces .",
    "its time average is @xmath76 here we have inverted @xmath77 so that we have @xmath78 and then substituted @xmath79 .",
    "the configurational probability is defined as before , @xmath80 let us now choose @xmath81 to be an interface moving in a link that carries all the flow in the network .",
    "such a link is a capillary tube connected in series with the rest of the network . in this case",
    "we have @xmath82 , where @xmath73 is the total flow .",
    "hence , we have @xmath83    we have in the discussion so far compared the time evolution of a given sample defined by an initial configuration of interfaces .",
    "we now imagine _ an ensemble _ of initial configurations of interfaces .",
    "each sample evolves in time and there will be a configurational probability ( [ eq : piintq0 ] ) for each .",
    "this will have the same value for each configuration @xmath84 that corresponds to the same flow @xmath73 .",
    "hence , we have the configurational probability @xmath85 this equation is the major theoretical result of this paper : all configurations corresponding to the same @xmath73 are equally probable . intuitively , equation ( [ eq : piintq ] ) makes sense : the slower the flow , proportionally the more the system stays in  or close to  a given configuration @xcite .",
    "is the system ergodic",
    "? equations ( [ eq : fxave ] ) , ( [ eq : fxavemany ] ) and ( [ eq : fxcomplex ] ) answer this question positively .",
    "time averages give , by construction , the same results as configurational averages .      in order to present the details of the metropolis monte carlo algorithm that we propose , we first review the general formulation of the metropolis algorithm @xcite .",
    "we have a set of configurations characterized by the variable @xmath86 , the positions of the interfaces .",
    "we now wish to construct a _ biased random walk _ through these configurations",
    "so that the number of times each configuration is visited  i.e. , the random walk comes within @xmath87 of the configuration  is proportional to @xmath88 .",
    "proportional to the probability for that configuration .",
    "the metropolis algorithm accomplishes this goal . in order to do so , a transitional probability density from state @xmath84 to state @xmath89 is constructed as @xmath90 where @xmath91 is the probability density to pick trial configuration @xmath89 given that the system is in configuration @xmath84 .",
    "it is crucial that @xmath92 is symmetric , @xmath93 equations ( [ eq : met ] ) and ( [ eq : sym ] ) ensure detailed balance , @xmath94 detailed balance guarantees that the biased random walk visits the configurations @xmath84   with a frequency proportional to @xmath95 .",
    "the generated configurations follow the ensemble distribution .    when we combine equations ( [ eq : piintq ] ) and ( [ eq : met ] ) , we have @xmath96      the metropolis monte carlo algorithm based on equation ( [ eq : metq ] ) consists of two crucial steps .",
    "the first step consists in generating a _ trial configuration _ and the second step consists in deciding whether to keep the old configuration or replacing it with the trial configuration .",
    "the first step , generating the trial configuration , is governed by the trial configuration probability @xmath91 which must obey the symmetry ( [ eq : sym ] ) .",
    "that is , if the system is in configuration @xmath84 , the probability to pick a trial configuration @xmath89 must be equal to the probability to pick as trial configuration @xmath84 if the system is in configuration @xmath89 .",
    "suppose the system is in configuration @xmath84 .",
    "one needs to define a _",
    "neighborhood _ of configurations among which the trial configuration is chosen .",
    "if the neighborhood is too restricted , the monte carlo random walk will take steps that are too small and hence would be inefficient . if , on the other hand , the neighborhood is too large , the random walk ends up doing huge steps that will miss the details .",
    "we propose generating the trial configurations as follows .",
    "our system is shown in figure [ fig3 - 1 ] and consists of @xmath1 links as described in section [ sec : network ] .",
    "there is a flow @xmath30 through link @xmath97 connecting the neighboring nodes @xmath31 and @xmath32 .",
    "there is a total flow rate @xmath73 in the network given by @xmath98 and a corresponding pressure drop @xmath28 .",
    "we choose a randomly positioned sub network as shown in figure [ fig3 - 1 ] .",
    "the network consists of @xmath99 links .",
    "we  lift \" the sub network out of the complete network and fold it into a torus , i.e , implementing bi - periodic boundary conditions .",
    "the configurations of fluid interfaces in the sub network remains unchanged at this point .",
    "we calculate the flow rate in the sub network @xmath100 by solving the kirchhoff equations on the sub network , we _ time step _ the configuration forwards in time while keeping the flow rate @xmath101 constant .",
    "we end the time integration when @xmath102  arbitrarily chosen  sub network pore volumes have passed through it .",
    "the bi - periodic boundaries of the sub network is then opened up and the sub network with the new configuration of fluid interfaces is placed back into the full network .",
    "this is then the trial configuration @xmath89 .",
    "part of the probabilistic choice of the trial configuration that defines @xmath91 rests on the choice of the sub network : its position is picked at random .",
    "hence , if the system is in state @xmath84 or in trial state @xmath89 , the probability to pick a particular sub network is the same .",
    "this makes this part of the choice of trial configuration symmetric . when the sub network is time stepped for @xmath102 sub system pore volumes , this is done at constant flow rate @xmath101 .",
    "hence , all sub network configurations are equally probable , see equation ( [ eq : piintq ] ) .",
    "hence , also this part of the choice of trial configuration is symmetric .",
    "the full probability @xmath103 is the probability of picking a given sub network times the probability that a given configuration will occur . combining the two leads to the necessary symmetry ( [ eq : sym ] ) .",
    "we point out here that whereas the configurational probability @xmath95 in ( [ eq : piintq ] ) is valid for all configurations , through the way we generate our samples , we are restricting ourselves to physically realistic samples in that they are generated through time stepping parts of the system .",
    "we can not at this stage prove that this does not bias our sampling .",
    "once the trial configuration @xmath84 has been generated , it is necessary to calculate the total flow rate @xmath104 in the network .",
    "we then decide to accept the trial configuration @xmath89 by using ( [ eq : metq ] ) .",
    "this defines a monte carlo _ update .",
    "_    we repeat this procedure until each link in the network has been part of at least one sub network .",
    "this defines a monte carlo _ sweep . _",
    "we now present numerical results of the monte carlo simulation considering the model described in section [ sec : network ] and we will compare them with the results by time stepping simulations .",
    "simulations are performed for two different ensembles , one is when the total flow rate @xmath73 is kept constant ( cq ensemble ) and the other when the total pressure drop @xmath28 is kept constant ( cp ensemble ) . a network of @xmath105 links ( @xmath106 ) is considered for both monte carlo and time stepping procedure .",
    "the sub network size is @xmath107 links ( @xmath108 ) . to identify whether the system has reached the steady state , we measured the quantities as a function of time steps in time stepping and as a function of sweeps in the case of monte carlo .",
    "we then identified the steady states when the averages of measured quantities ( eg . @xmath109 and @xmath28 or @xmath73 ) did not change with time or with sweeps .",
    "we then take average over time ( time stepping ) or sweeps ( monte carlo ) which give us the time average and the ensemble average , respectively .",
    "we average 10 different networks , but with the same sequence of networks for both monte carlo and time stepping .",
    "first we present the results for cq ensemble .",
    "two capillary numbers , @xmath110 and @xmath111 are used , and for each @xmath112 , simulations are performed for different values of non - wetting saturations in intervals of @xmath113 from 0.05 to 0.95 .      with @xmath73 constant , the metropolis monte carlo algorithm becomes very simple .",
    "equation ( [ eq : metq ] ) simply becomes @xmath114 in other words , all trial configurations are accepted .    in figure",
    "[ fig4 - 1 ] we plot @xmath109  the non - wetting fractional flow  as a function of @xmath115  the non - wetting saturation  where the circles and the squares denote the results from monte carlo and time stepping , respectively . the plots ,",
    "as expected , show an s - shape .",
    "this is because the two immiscible fluids do not flow equally , and the one with higher saturation dominates .",
    "hence , the curve does not follow the diagonal dashed line , which corresponds to @xmath116 , shown in the figure .",
    "rather , @xmath109 is less than @xmath115 for low values of @xmath115 and higher than @xmath115 for higher value of @xmath115 .",
    "it therefore crosses the @xmath116 line at some point , which is not at @xmath117 .",
    "this is due to the asymmetry between the two fluids , as one is more wetting than the other with respect to the pore walls .",
    "this behaviour is more prominent for the lower value of @xmath112 , as capillary forces play a more dominant role .",
    "the curves from the monte carlo and time stepping calculations fall on top of each other for most of the lower to intermediate range of the saturation values and we only see some difference at very high or low @xmath115",
    ". we will present a more quantitative comparison between the results of monte carlo and time stepping later in section [ sub : limitations ] .",
    "the variation of total pressure drop @xmath28 for the two capillary numbers as a function of @xmath115 are shown in figure [ fig4 - 2 ] .",
    "similar to the fractional flow plots , we see that the results are same for monte carlo and time stepping for a wide range of @xmath115 .",
    "we only see differences at high values of @xmath115 .",
    "@xmath28 increases with @xmath115 , reaching a maximum at some intermediate saturation and then decreases again .",
    "when @xmath115 increases from zero , more and more interfaces appear in the system causing an increase in capillary barriers associated with interfaces . as",
    "the total flow rate @xmath73 is constant , a higher pressure is needed to overcome the capillary barriers .",
    "the decrease of @xmath28 after the maximum is due to the decrease of the number of interfaces blocking the fluids .",
    "we now turn to the constant pressure ensemble . here",
    "we keep @xmath28 constant throughout the calculations . in this case",
    ", the metropolis monte carlo algorithm , equation ( [ eq : metq ] ) , becomes @xmath118    results for the simulations with constant @xmath28 are shown in figures [ fig4 - 3 ] and [ fig4 - 4 ] .",
    "simulations are performed for two different values of @xmath28 , @xmath119 and @xmath120 .",
    "the steady - state values of @xmath109 show similar variation with @xmath115 as in the constant @xmath73 ensemble and we see good agreement between the results for monte carlo and time stepping for a wide range of @xmath115 . here",
    "@xmath73 varies with the saturation and the corresponding capillary numbers are plotted in figure [ fig4 - 4 ] for monte carlo and time stepping .",
    "as discussed before , the number of interfaces first increase with the increase in saturation from zero , reaches a maximum value , and then decreases again as @xmath115 approaches @xmath121 .",
    "the pressure is constant here , so the total flow rate decreases with increasing capillary barriers at the interfaces and correspondingly @xmath112 varies as in figure [ fig4 - 4 ] . here again , good match between the results monte carlo and time stepping can be observed .",
    "we show in table [ table1 ] the percentage of rejections for the data shown in figure [ fig4 - 4 ] .",
    "the number of rejections is in all cases quite small .",
    "this can be understood as follows .",
    "set @xmath122 and @xmath123 where @xmath124 may be positive or negative .",
    "hence , the probability to accept the new configuration is @xmath125 where we have assumed @xmath126 . with a small @xmath124 the probability to reject the trial configuration is small .",
    "this is reflected in table [ table1 ] .",
    ".the percentage of rejected configurations in the constant @xmath28 ensemble .",
    "[ table1 ] [ cols=\"^,^,^\",options=\"header \" , ]      here we present a detailed comparative analysis of the computational cost of the two algorithms .",
    "we do this by measuring the computational time ( @xmath127 for the monte carlo method and @xmath128 for the time stepping method respectively ) for different system sizes @xmath33 .",
    "we use the conjugate gradient method to solve the kirchhoff equations .",
    "this is an iterative solver .",
    "when the network contains @xmath1 links ( @xmath129 nodes ) , each iteration demands @xmath129 operations . the number of iterations necessary to solve the equations _",
    "exactly _ scales as @xmath130 , making the total cost scale as @xmath131 , where @xmath132 .",
    "however , in practice , the number of iterations necessary to reach the solution of the kirchhoff equations to within machine precision is much lower than that needed for the theoretically exact solution .",
    "as we shall see , @xmath133 is much smaller than four .",
    "the number of time steps needed to push one pore volume through the network is @xmath134 .",
    "we expect it to depend on @xmath33 as @xmath135 , where @xmath36 is a prefactor essentially measuring the number of time steps on the average it takes for an interface to cross a link . in our calculations , this is of the order of 10 .",
    "intuitively , this number should be proportional to the width of the network , @xmath33 , making @xmath136 . in practice , as we shall see , it is slightly larger .    for each time step , the conjugate gradient demands @xmath137 operations where @xmath138 is another prefactor .",
    "the total computational time ( @xmath128 ) per pore volume is then @xmath139 where @xmath140 .",
    "based on the theoretical considerations above , setting @xmath141 and @xmath136 , we have @xmath142 . the actual computational time measured using the ` clock ( ) ` function in c",
    "is plotted in figure [ fig4 - 5 ] for @xmath143 and @xmath144 .",
    "we find that @xmath128 scales with @xmath33 with an exponent @xmath145 which is much smaller than @xmath146 .",
    "measuring @xmath134 and @xmath147 independently gives @xmath148 and @xmath149 , see the insert in figure [ fig4 - 5 ] .",
    "for the monte carlo algorithm , each sweep ideally contains @xmath150 individual monte carlo updates .",
    "each monte carlo update consists of time stepping a sub lattice of size @xmath99 .",
    "hence , the cost of a monte carlo update is @xmath151 when using equation ( [ timets ] ) .",
    "however , each time stepping of a sub lattice is followed by solving the kirchhoff equations for the _ entire _ lattice in order to determine @xmath73 for the trial configuration .",
    "the cost of this operation is @xmath152 .",
    "the time per monte carlo sweep is then @xmath153=4ab\\lambda^{\\alpha_\\text{ts}-2}l^2+\\frac{b}{\\lambda^2}\\   l^{2+\\beta}\\;,\\ ] ] where @xmath154 and @xmath155 .",
    "the factor  4 \" signifies that we time step the sub lattice for four pore volumes . by setting @xmath156 and @xmath108",
    ", the first term will dominate compared to the second term on the right hand side of this equation if @xmath157 or @xmath158 where the second term , which scales as @xmath159 , starts dominating .",
    "it is this behavior we see in figure [ fig4 - 5 ] : the computational time in the monte carlo method scales according to the first term , i.e. , as @xmath130 .",
    "hence , we summarize : the time stepping procedure scales as @xmath160 whereas the monte carlo algorithm scales as @xmath161 , as shown in figure [ fig4 - 5 ]",
    ".      a closer inspection of figures [ fig4 - 1 ] to [ fig4 - 4 ] shows that the match between the monte carlo and the time stepping procedures is good but not perfect . in this section",
    "we discuss the discrepancies between the two methods quantitatively .",
    "we show in figure [ fig4 - 6 ] the non - wetting fractional flow for a @xmath105 network using both time stepping and monte carlo with sub network size @xmath162 ranging from @xmath102 to @xmath163 .",
    "notice that we also consider the sub - network size @xmath163 which is equal to @xmath33 .",
    "the calculations here are done in the constant @xmath73 ensemble with a capillary number ca equal to @xmath164 or @xmath113 . as we see , there is a systematic deviation between the time stepping and the monte carlo results that increases with increasing non - wetting saturation @xmath115 .",
    "this deviation is highlighted in figure [ fig4 - 7 ] where the difference between the time stepping and the monte carlo results for different @xmath162 is shown .",
    "we note that the difference between the monte carlo and the time stepping decreases with increasing capillary number ca .",
    "this is , however , to be expected , as for infinite @xmath112 , any curve , monte carlo or time stepping , must fall on the diagonal of figure [ fig4 - 6 ] .    in figure",
    "[ fig4 - 8 ] we show the discrepancy between the pressure drop @xmath28 using time stepping and monte carlo for different sub lattice size @xmath162 .",
    "the systematics seen in the fractional flow data , figures [ fig4 - 6 ] and [ fig4 - 7 ] , where the difference grows with increasing non - wetting saturation is much less pronounced in this case .    in figure [ fig4 - 9 ] , we show histograms over the non - wetting saturation of the links .",
    "that is , we measure how much non - wetting fluid each link contains . when the overall non - wetting saturation @xmath165 , there is essentially no difference between the time stepping and the monte carlo result .",
    "however , for @xmath166 , there is a difference that depends on the sub lattice size @xmath162 .",
    "this difference , measured as the area between the time stepping and the monte carlo histograms , is shown in figure [ fig4 - 10 ] as a function of @xmath115 .",
    "the picture seen here resembles that seen for the non - wetting fractional flow ( figure [ fig4 - 6 ] ) : the difference grows with increasing @xmath115 .    when the non - wetting saturation @xmath115 is small , the non - wetting fluid will form bubbles or small clusters surrounded by the wetting fluid . as @xmath115 is increased ,",
    "these clusters grow in size until there is a percolation - type transition where the wetting fluid starts forming clusters surrounded by the non - wetting fluid .",
    "this scenario has been studied experimentally by tallakstad et al .",
    "they argued that there is a length scale @xmath167 .",
    "clusters that are larger than this length scale will move , whereas clusters that are smaller will be held in place by the capillary forces .",
    "the monte carlo algorithm calls for selecting a sub network which is then  lifted \" out of the system ,  folded \" into a torus and then time stepped .",
    "the boundaries of the sub network will cut through clusters and mobilize these .",
    "this changes the cluster structure from that of the time stepping procedure .    in order to investigate this",
    "we have studied the cluster structure in the model under monte carlo and time stepping . in order to do this",
    ", we identify the non - wetting clusters . to do this ,",
    "two nodes are considered to be part of the same cluster if the link between them has a non - wetting saturation more than a threshold value , a clip - threshold @xmath168 .",
    "here we use a clip threshold equal to @xmath169 @xcite . in figure",
    "[ fig4 - 11 ] , we show typical cluster structures for two different non - wetting saturations obtained with monte carlo and with time stepping . for @xmath170 ,",
    "the non - wetting clusters are still quite small and there is no discernable difference between the configurations obtained with time stepping and with monte carlo . however , for @xmath166 , there is one dominating cluster in the time stepping case whereas the clusters are more broken up in the monte carlo case .",
    "mc , @xmath170 ts , @xmath170 mc , @xmath166 ts , @xmath166    we measure this qualitative difference in cluster structure for @xmath166 by recording the cluster size distribution for the two types of updating , see figure [ fig4 - 12 ] . when following the time stepping procedure , we run the system for @xmath171 pore volumes . during the last @xmath172 pore volumes injected ( @xmath173th of the total )",
    ", we measure the cluster size distribution after passing each pore volume of fluids .",
    "when using monte carlo , we run the system for 400 monte carlo updates .",
    "we record the cluster size distribution for every of the last @xmath174 updates .",
    "in both the time stepping and monte carlo runs , we average over @xmath175 samples .",
    "the number of links belong to a cluster defines the size of that cluster .",
    "the total number of clusters is @xmath176 and the number of clusters of size @xmath177 that we record is @xmath178 .",
    "we show @xmath179 in the figure . for @xmath180 and 0.7",
    ", there is no discernable difference in the cluster structure between the monte carlo and the time stepping procedures .",
    "however , for @xmath166 , there are differences . for every @xmath177",
    "the number of clusters during the monte carlo updating procedure is larger than for the time stepping procedure , except for the largest clusters , the percolating cluster seen in figure [ fig4 - 11 ] .",
    "this supports the supposition that the monte carlo breaks up the large non - wetting clusters .",
    "clearly , for the monte carlo algorithm to be perfected , this tendency of chopping up large non - wetting clusters needs to be counteracted .",
    "presumably , this is a problem that decreases with increasing system and sub lattice size as it is a boundary effect .",
    "we have in this work presented a new monte carlo algorithm for immiscible two - phase flow in porous media under steady - state conditions using network models .",
    "it is based on the metropolis transition probability ( [ eq : metq ] ) which in turn is build upon the configuration probability ( [ eq : piintq ] ) which we derive here . by steady - state conditions , we mean that the macroscopic parameters that describe the flow such as pressure difference , flow rate , fractional flow rate and saturation all have well defined means that stay constant . on the pore level , however , clusters flow , merge , break up , and so on . the flow may be anything but stationary .",
    "we described the algorithm in section [ subsub : implementation ] .",
    "computationally , the monte carlo algorithm is very fast compared to time stepping .",
    "we find that the time stepping procedure when implemented on a square lattice demands a computing time that scales as the linear size of the lattice , @xmath33 , to the fourth power , whereas the monte carlo method scales as the linear size to the second power , see section [ sub : cost ] .",
    "however , there is another term that contributes to the computing time in the monte carlo procedure which scales as @xmath159 .",
    "this term has a prefactor associated with it which is very small compared to the other term scaling as @xmath130 . for @xmath33 up to about 230 ,",
    "this term is small compared to the first one .",
    "there are open questions with respect to the metropolis monte carlo approach that we present here .",
    "the most important step in the direction of constructing such an approach is to identify the configuration probability ( [ eq : piintq ] ) .",
    "the second most important step is to provide a way to generate trial configurations that obey the symmetry requirement ( [ eq : sym ] ) . section [ subsub : implementation ] is concerned with this .      *",
    "the monte carlo algorithm needs to be generalized to irregular networks , e.g. , those based on reconstructed porous media @xcite . +",
    "* the necessity to solve the kirchhoff equations for the entire pore network once for every monte carlo update will slow down the algorithm when it is implemented for large systems .",
    "ideally , one should find a way to circumvent this necessity .",
    "+ * the monte carlo algorithm has a tendency to break up large non - wetting clusters as described in section [ sub : limitations ] .",
    "this is a problem for large non - wetting saturations .",
    "it is most probably a boundary effect that comes from the way the sub networks are constructed .",
    "however , it needs to be overcome if the algorithm is to be useful for the entire range of saturations .",
    "+      we have in this article presented a first attempt at constructing a markov chain monte carlo algorithm based on the configurational probability ( [ eq : piintq ] ) .",
    "there is no reason not to believe that other ways of constructing such monte carlo algorithms might be possible that are both faster and do not pose the challenges listed above .",
    "a. m. tartakovsky and p. meakin , _ a smoothed particle hydrodynamics model for miscible flow in three - dimensional fractures and the two - dimensional rayleigh - taylor instability , _ j. comp",
    ". phys . * 207 * , 610 ( 2005 ) .",
    "k. t. tallakstad , h. a. knudsen , t. ramstad , g. lvoll , k. j. mly , r. toussaint and e. g. flekky , _ steady - state two - phase flow in porous media : statistics and transport properties , _ phys .",
    "lett . * 102 * , 074502 ( 2009 ) ."
  ],
  "abstract_text": [
    "<S> we present a markov chain monte carlo algorithm based on the metropolis algorithm for simulation of the flow of two immiscible fluids in a porous medium under macroscopic steady - state conditions using a dynamical pore network model that tracks the motion of the fluid interfaces . </S>",
    "<S> the monte carlo algorithm is based on the configuration probability , where a configuration is defined by the positions of all fluid interfaces . </S>",
    "<S> we show that the configuration probability is proportional to the inverse of the flow rate . </S>",
    "<S> using a two - dimensional network , advancing the interfaces using time integration the computational time scales as the linear system size to the fourth power , whereas the monte carlo computational time scales as the linear size to the second power . </S>",
    "<S> we discuss the strengths and the weaknesses of the algorithm . </S>"
  ]
}
{
  "article_text": [
    "classes of infinite structures with nice algorithmic properties ( such as decidable model checking ) are of increasing interest in a variety of fields of computer science . for instance",
    "the theory of infinite state transition systems concerns questions of symbolic representations , model checking , specification and verification .",
    "also , string query languages in databases may be captured by ( decidable ) infinite string structures . in these and other areas",
    "there has been an effort to extend the framework of finite model theory to infinite models that have finite presentations .",
    "automatic structures are ( usually ) infinite relational structures whose domain and atomic relations can be recognised by finite automata operating synchronously on their input .",
    "consequently , automatic structures have finite presentations and are closed under first order interpretability ( as well as some of extensions of first order logic ) .",
    "moreover , the model checking problem for automatic structures is decidable .",
    "hence automatic structures and tools developed for their study are well suited to these fields of computer science , see for instance @xcite .    a computability and logical point of view , automatic structures are used to provide generic examples of structures with decidable theories , to investigate the relationship between automata and definability , and to refine the ideas and approaches in the theory of computable structures .",
    "this paper investigates the problem of characterising automatic structures in algebraic , model theoretic or logical terms .",
    "specifically this paper addresses two foundational problems in the theory of automatic structures .",
    "the first is that of providing _ structure theorems _ for classes of automatic structures .",
    "fix a class @xmath1 of structures ( over a given signature ) , closed under isomorphism .",
    "for instance , @xmath1 may be the class of groups @xmath2 or the class of linear orders @xmath3 .",
    "a structure theorem should be able to distinguish whether a given member of @xmath1 has an automatic presentation or not ( a special case of this is telling whether a given structure is automatically presentable or not ) .",
    "this usually concerns the interactions between the combinatorics of the finite automata presenting the structures and properties of the structures themselves .",
    "the second problem , which is related to the first , is the complexity of the _ isomorphism problem _ for classes of automatic structures .",
    "namely , fix a class of automatic structures @xmath1 .",
    "the isomorphism problem asks , given automatic presentations of two structures from @xmath1 , are the structures isomorphic ?    with regard to the first problem , we provide new techniques for proving that some foundational structures in computer science and mathematics do not have automatic presentations .",
    "for example , we show that the limits of many classes of finite structures , such as finite partial orders or finite graphs , do not have automatic presentations .",
    "this shows that the infinite random graph and random partial order do not have automatic presentations .",
    "the idea is that the finite amount of memory intrinsic to the finite automata presenting the structure can be used to extract algebraic and model theoretic properties ( invariants ) of the structure , and so used to classify such structures up to isomorphism .",
    "this line of research has indeed been successful in investigating automatic ordinals , linear orders , trees and boolean algebras .",
    "for example there is a full structure theorem for the automatically presentable ordinals ; namely , they are those strictly less than @xmath4 @xcite .",
    "there are also partial structure theorems saying that automatic linear orders and automatic trees have finite cantor - bendixson rank @xcite . in this paper",
    "we provide a structure theorem for the ( infinite ) automatic boolean algebras ; namely , they are those isomorphic to finite products of the boolean algebra of finite and co - finite subsets of @xmath5 .    with regard to the second problem , it is not surprising that the isomorphism problem for the class of all automatic structures in undecidable @xcite .",
    "the reason for the undecidability is that the configuration space of a turing machine , considered as a graph , is an automatic structure .",
    "moreover , the reachability problem in the configuration space is undecidable",
    ". thus with some extra work , as in @xcite or @xcite , one can reduce the reachability problem to the isomorphism problem for automatic structures .",
    "in addition , the isomorphism problem for automatic ordinals @xcite and boolean algebras ( corollary  [ cor : badec ] ) is decidable . for equivalence structures it is in @xmath6 ( though not more is known ) , and for configuration spaces of turing machines is @xmath7-complete @xcite .    hence it is somewhat unexpected that the complexity of the isomorphism problem for the class of automatic structures is @xmath0-complete .",
    "the @xmath0-completeness is proved by reducing the isomorphism problem for computable trees , known to be @xmath8-complete @xcite , to the isomorphism problem for automatic structures .",
    "the two problems are related in the following way .",
    "if one has a ` nice ' structure theorem for a class @xmath1 of automatic structures , then one expects that the isomorphism problem for @xmath1 be computationally ` reasonable ' .",
    "for instance , as corollaries of the structure theorems for automatic ordinals and for automatic boolean algebras , one obtains that their corresponding isomorphism problems are decidable .",
    "in contrast , the @xmath0-completeness of the isomorphism problem of the class of all automatic structures tells us that the language of first order arithmetic is not powerful enough to give a structure theorem for the class of all automatic structures . in other words",
    "we should not expect a ` nice ' structure theorem for the class of all automatic structures .    here is an outline of the rest of the paper .",
    "the next section is a brief introduction to the basic definitions .",
    "section @xmath9 provides some counting techniques sufficient to prove non - automaticity of many classical structures such as fields , integral domains and boolean algebras .",
    "section @xmath10 provides a technique that is used to show non - automaticity of several structures , such as the infinite random graph and the random partial order .",
    "the last section is devoted to proving that the isomorphism problem for automatic structures is @xmath0-complete .",
    "finally , we note that automatic structures can be generalised in several directions : for instance , by using finite automata on infinite strings @xcite , finite ranked trees @xcite , or finite unranked trees @xcite .",
    "although this paper only deals with the finite word case , some of the ideas presented here should give rise to a better understanding of the generalisations .",
    "indeed , delhomm , who independently proved that the random graph has no automatic presentation ( using a similar technique as the one presented here ) has extended the technique to tree - automatic structures @xcite .",
    "the authors would like to thank referees for comments on improvement of this paper .",
    "a thorough introduction to automatic structures can be found in @xcite and @xcite . we assume familiarity with the basics of finite automata theory though to fix notation the necessary definitions are included .  a _ finite automaton _ @xmath11 over an alphabet @xmath12 is a tuple @xmath13 , where @xmath14 is a finite set of _ states _",
    ", @xmath15 is the _ initial state _ , @xmath16 is the _ transition table _ and @xmath17 is the set of _ final states_. a _ computation _ of @xmath11 on a word @xmath18 ( @xmath19 ) is a sequence of states , say @xmath20 , such that @xmath21 and @xmath22 for all @xmath23 . if @xmath24 , then the computation is _ successful _ and we say that automaton @xmath11 _ accepts _ the word .",
    "the _ language _ accepted by the automaton @xmath11 is the set of all words accepted by @xmath11 . in general",
    ", @xmath25 is _ finite automaton recognisable _ , or _ regular _ , if @xmath26 is the language accepted by a finite automaton  @xmath11 .",
    "the following definitions extends recognisability to relations of arity @xmath27 , called _",
    "synchronous @xmath27tape automata_. a synchronous @xmath27tape automaton can be thought of as a one - way turing machine with @xmath27 input tapes @xcite .",
    "each tape is regarded as semi - infinite having written on it a word in the alphabet @xmath12 followed by an infinite succession of blanks , @xmath28 symbols .",
    "the automaton starts in the initial state , reads simultaneously the first symbol of each tape , changes state , reads simultaneously the second symbol of each tape , changes state , etc .",
    ", until it reads a blank on each tape .",
    "the automaton then stops and accepts the @xmath27tuple of words if it is in a final state .",
    "the set of all @xmath27tuples accepted by the automaton is the relation recognised by the automaton .",
    "here is a definition .",
    "write @xmath29 for @xmath30 where @xmath31 is a symbol not in @xmath12 .",
    "the _ convolution of a tuple _ @xmath32 is the string @xmath33 of length @xmath34 over alphabet @xmath35 defined as follows .",
    "its @xmath36th symbol is @xmath37 where @xmath38 is the @xmath36th symbol of @xmath39 if @xmath40 and @xmath28 otherwise .",
    "the _ convolution of a relation _",
    "@xmath41 is the relation @xmath42 formed as the set of convolutions of all the tuples in @xmath43 .",
    "that is @xmath44 .",
    "[ dfn : n - tape ] _ an @xmath27tape automaton _ on @xmath12 is a finite automaton over the alphabet @xmath35 .",
    "an @xmath27ary relation @xmath45 is _ finite automaton recognisable _ ( in short fa recognisable ) or _ regular _ if its convolution @xmath46 is recognisable by an @xmath27tape automaton .",
    "we now relate @xmath27tape automata to structures . a _ structure _ @xmath11",
    "consists of a countable set @xmath47 called the _",
    "domain _ and some relations and operations on @xmath47 .",
    "we may assume that @xmath11 only contains relational predicates as the operations can be replaced with their graphs .",
    "we write @xmath48 where @xmath49 is an @xmath50ary relation on @xmath11 .",
    "the relation @xmath51 are sometimes called basic or atomic relations .",
    "we assume that the function @xmath52 is always a computable one .",
    "[ dfn : automatic ] a structure @xmath11 is _ automatic _ over @xmath12 if its domain @xmath53 is finite automata recognisable , and there is an algorithm that for each @xmath54 produces a finite automaton recognising the relation @xmath55 . a structure is called _ automatic _ if it is automatic over some alphabet . if @xmath56 is isomorphic to an automatic structure @xmath11 , then call @xmath11 an _ automatic presentation _ of @xmath56 and say that @xmath56 is called _ automatically presentable _ @xmath57over @xmath58 .",
    "an example of an automatic structure is the word structure @xmath59 , where for all @xmath60 , @xmath61 , @xmath62 , @xmath63 iff @xmath64 , and @xmath65 is the lexicographical order .",
    "the configuration graph of any turing machine is another example of an automatic structure .",
    "examples of automatically presentable structures are @xmath66 , @xmath67 , @xmath68 , the group @xmath69 , the order on the rationals @xmath70 , and the boolean algebra of finite or co - finite subsets of @xmath5 .",
    "note that every finite structure is automatically presentable .",
    "we use the following important theorem without reference .",
    "@xcite let @xmath11 be an automatic structure .",
    "there exists an algorithm that from a first order definition ( with possible use of the additional quantifier ` there exists infinitely many ' ) in @xmath11 of a relation @xmath43 produces an automaton recognising @xmath43 .",
    "the first technique for proving non - automaticity was presented in @xcite and later generalised in @xcite .",
    "the technique is based on a pumping argument and exhibits the interplay between finitely generated ( sub ) algebras and finite automata .",
    "we briefly recall the technique for completeness .",
    "a relation @xmath71 is called _ locally finite _ if there exists @xmath72 with @xmath73 so that for every @xmath74 ( of size @xmath36 ) there are at most a finite number of @xmath75 ( of size @xmath76 ) such that @xmath77 .",
    "we write @xmath78 . for @xmath79 , write @xmath80 to mean @xmath81 for some @xmath54 .",
    "we start with the following elementary but important proposition .",
    "[ prop : locfin ] let @xmath78 be locally finite , with @xmath36 and @xmath76 as in the definition above .",
    "suppose further that @xmath43 is a regular relation , and that the automaton for @xmath82 has @xmath83 states .",
    "then @xmath84 for every @xmath85 where @xmath86 has @xmath36 elements and @xmath87 has @xmath76 elements .",
    "fix @xmath85 and say @xmath88 has length @xmath89 and say @xmath90 has length @xmath91 .",
    "so @xmath92 implies that we can pump the string @xmath93 between positions @xmath94 and @xmath95 .",
    "then either the automaton for @xmath82 accepts a string that is not in @xmath96 ( because one of the components contains a subword of the form @xmath97 ) or otherwise it accepts strings of the form @xmath98 for infinitely many @xmath99 , contradicting that @xmath43 is locally finite .    the typical application of this proposition is to prove that certain structures do not have automatic presentations .",
    "assume @xmath11 is an automatic structure in which each atomic relation @xmath51 is a graph of a function @xmath100 , @xmath101 .",
    "let @xmath102 be a sequence of some elements of @xmath47 such that the relation @xmath103 is regular .",
    "consider the sequence @xmath104 , @xmath105 . by the proposition",
    "there is a constant @xmath83 such that the length of all elements in @xmath106 is bounded by @xmath107 .",
    "therefore the number of elements in @xmath106 is bounded by @xmath108 . some combinatorial reasoning combined with this observation",
    "can now be applied to provide examples of structures with no automatic presentations , see @xcite and @xcite .",
    "for example , the following structures have no automatic presentation :    1 .   the free group on @xmath109 generators ; 2 .   the structure @xmath110 ; 3 .   the structure @xmath111 , where @xmath112 is a bijection ; 4",
    "the term algebra generated by finitely many constants with at least one non - unary atomic operation of arity @xmath27 from the language on ground terms @xmath113 is @xmath114 . ] .",
    "note that each of these structures has a decidable first order theory .",
    "in the next sections we provide other more intricate techniques for showing that particular structures do not have automatic presentations . we then apply those techniques to give a characterisation of boolean algebras that have automatic presentations .",
    "we also prove that @xmath115 has no automatic presentation and show that no infinite integral domain ( in particular no infinite field ) has an automatic presentation .",
    "we also study automaticity of some limits .",
    "first we introduce a very useful property true of every automatic monoid @xmath116 .",
    "[ lem : product ] for each @xmath117 , @xmath118 , where @xmath36 is the number of states in the automaton recognising the graph of @xmath119 .    here",
    "logarithm is to base 2 and @xmath120 is the least @xmath54 such that @xmath121 .",
    "we use induction on @xmath122 . for @xmath123 ,",
    "the inequality becomes @xmath124 . if @xmath125 let @xmath126 where @xmath127 .",
    "apply proposition  [ prop : locfin ] to the graph of the monoid operation @xmath128 and elements @xmath129 and @xmath130 .",
    "then , by induction , @xmath131 which is equal to @xmath132 which is at most @xmath133 since @xmath134 .",
    "all finite boolean algebras are automatic .",
    "thus , in this section we deal with infinite countable boolean algebras only .",
    "our goal in this section is to give a full characterisation of infinite automatic boolean algebras .",
    "our characterisation can then be applied to show that the isomorphism problem for automatic boolean algebras is decidable .",
    "compare this with the result from computable algebra that the isomorphism problem for computable boolean algebras is @xmath0-complete @xcite .",
    "recall that a boolean algebra @xmath135 is a structure , where @xmath136 and @xmath137 and @xmath138 operations satisfy all the basic properties of the set - theoretic intersection , union , and complementation operations ; in @xmath56 the relation @xmath139 is a partial order in which @xmath140 is the smallest element , and @xmath141 is the greatest element .",
    "the complement of an element @xmath142 is @xmath143 and is denoted by @xmath75 .",
    "a linearly ordered set determines a boolean algebra in a natural way described as follows .",
    "let @xmath144 be a linearly ordered set with a least element .",
    "an interval is a subset of @xmath145 of the form @xmath146 , where @xmath147 . the * interval algebra * denoted by @xmath148 is the collection of all finite unions of intervals of @xmath149 , with the usual set - theoretic operations of intersection , union and complementation .",
    "every interval algebra is a boolean algebra .",
    "moreover for every countable boolean algebra @xmath11 there exists an interval algebra @xmath148 isomorphic to @xmath11 .",
    "we write @xmath150 for the ordered sum @xmath151 .",
    "[ lem : finite - cofinite ] the interval boolean algebras @xmath152 , where @xmath54 is positive integer , all have automatic presentations .",
    "the boolean algebra @xmath153 has an automatic presentation .",
    "indeed , every element @xmath154 of @xmath153 can be represented by a string that codes the characteristic function of @xmath154 .",
    "for example , the element @xmath155 can be represented by the string @xmath156 while @xmath157 can be represented by the string @xmath158 .",
    "the boolean operations under this representation are regular , hence this is an automatic presentation of @xmath153 .",
    "now , @xmath152 is isomorphic to the cartesian product of @xmath54 copies of @xmath153 .",
    "automatic structures are closed under the cartesian product , and this completes the proof .",
    "an * atom * in a boolean algebra is a non - zero element @xmath159 such that for every @xmath160 we have @xmath161 or @xmath162 .",
    "assume that @xmath56 is an automatic boolean algebra not isomorphic to any of the algebras @xmath152 .",
    "call two elements @xmath163 * @xmath164-equivalent * if the element @xmath165 is a union of finitely many atoms .",
    "factorise @xmath56 with respect to the equivalence relation .",
    "denote the factor algebra by @xmath166 . due to the assumption on @xmath56",
    "the algebra @xmath166 is not finite .",
    "call @xmath167 in @xmath56 * large * if its image in @xmath166 is not a finite union of atoms or @xmath140 . for example",
    "the element @xmath141 is large in @xmath56 because @xmath56 is not isomorphic to @xmath152 . call an element @xmath167 in @xmath56 * infinite * if there are infinitely many elements below it .",
    "say that @xmath167 * splits * @xmath168 , for @xmath169 , if @xmath170 and @xmath171 . for every large element @xmath172 there exists an element @xmath173 that splits @xmath76 such that @xmath174 is large and @xmath175 is infinite .",
    "also for every infinite element @xmath176 there exists an element @xmath173 that splits @xmath54 such that either @xmath177 or @xmath178 is infinite .",
    "we are now ready to prove the following theorem characterising infinite automatic boolean algebras .",
    "[ thm : ba ] an infinite boolean algebra has an automatic presentation if and only if it is isomorphic to @xmath152 for some positive @xmath179 .    we first construct a sequence @xmath180 of trees and elements @xmath181 corresponding to elements @xmath182 as follows .",
    "the tree @xmath180 will be a set of binary strings closed under prefixes .",
    "therefore it suffices to define leaves of @xmath180 .",
    "initially , we set @xmath183 and @xmath184 .",
    "assume that @xmath180 has been constructed .",
    "by induction hypothesis we may assume that the leaves of @xmath180 satisfy the following properties : @xmath185 there exists at least one leaf @xmath186 such that @xmath187 is large in @xmath56 .",
    "call the element @xmath187 leading in @xmath180 .",
    "@xmath188 there exist @xmath27 leaves @xmath189 , @xmath190 , @xmath191 such that each @xmath192 is an infinite element in @xmath56 .",
    "call these elements sub - leading elements . @xmath193",
    "the number of leaves in @xmath180 is greater than or equal to @xmath194 .",
    "@xmath195 for every pair of leaves @xmath196 of @xmath180 it holds that @xmath197 .    for each leaf",
    "@xmath198 proceed as follows :    1 .",
    "if @xmath186 is leading then find the first length lexicographical @xmath199 that splits @xmath200 such that both @xmath201 and @xmath202 are infinite and one of them is large .",
    "put @xmath203 and @xmath204 into @xmath205 .",
    "set @xmath206 and @xmath207 .",
    "if @xmath186 is a sub - leading then find the first length lexicographical @xmath199 that splits @xmath200 such that one of @xmath201 or @xmath202 is infinite . put @xmath203 and @xmath204 into @xmath205 .",
    "set @xmath208 and @xmath207 .",
    "thus , we have constructed the tree @xmath205 and elements @xmath187 corresponding to the leaves of the tree . note that the inductive hypothesis holds for @xmath205 .",
    "this completes the definition of the trees .",
    "lemma  [ lem : product ] is now used a number of times to justify the following steps .",
    "there exists a constant @xmath209 such that @xmath210 for all defined elements @xmath187 .",
    "now for every @xmath27 consider the set @xmath211 .",
    "there exists a constant @xmath212 such that for all @xmath213 we have @xmath214 .",
    "therefore @xmath215 and the number of leaves in @xmath180 is greater than or equal to @xmath216 .",
    "now for every pair of elements",
    "@xmath217 in @xmath218 we have @xmath219 . therefore the number of elements of the boolean algebra generated by the elements in @xmath218 is @xmath220 . now let @xmath221 . consider the element @xmath222 . by lemma  [ lem : product ]",
    "applied to the binary operation @xmath137 there exists a constant @xmath223 such that @xmath224 .",
    "this gives us a contradiction because the number of elements generated by elements of @xmath218 clearly exceeds the cardinality of @xmath225 .",
    "[ cor : badec ] it is decidable whether two automatic boolean algebras are isomorphic .",
    "every automatic boolean algebra is isomorphic to the cartesian product of @xmath54 copies of @xmath226 , the boolean algebra of finite and co - finite subsets of @xmath5 .",
    "this @xmath54 can be obtained effectively : given an fa - presentation of a structure @xmath47 in the signature of boolean algebras , one can decide if @xmath47 is a boolean algebra , and if so compute the largest @xmath54 such that @xmath47 models    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ `` there are @xmath54 disjoint elements each with infinitely many atoms below . ''",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    thus the isomorphism problem is decidable",
    ".      note that for groups and monoids the term ` automatic ' is used in a different way @xcite .",
    "so to avoid confusion we say such a structure is ` fa presented ' instead of saying it is ` automatic ' , and it is ` fa presentable ' instead of ` automatically presentable ' .",
    "we prove that @xmath115 , or equivalently , the free abelian group of rank @xmath227 , is not fa presentable .",
    "[ thm : nmonoid ] let @xmath228 be a monoid containing @xmath229 as a submonoid . then @xmath228 is not fa presentable .",
    "assume for a contradiction that an fa presentation of @xmath230 is given .",
    "let @xmath231 be the prime numbers , viewed as elements of @xmath232 , and listed in length - lexicographical order ( with respect to this presentation of @xmath230 ) .",
    "let @xmath233 be such that @xmath234 are the primes of length at most @xmath27 .",
    "let    @xmath235 .    by lemma [ lem : product",
    "] , each term @xmath236 has length at most @xmath237 .",
    "again by the lemma , each product has length at most @xmath238 .",
    "since all the products are distinct ,    @xmath239 .",
    "thus @xmath240 $ ] and @xmath241 , a contradiction because @xmath242 goes to infinity .    in @xcite",
    "a stronger form is proved : if @xmath243 is a submonoid of @xmath230 , then @xmath244 , where @xmath12 is the alphabet and @xmath36 the number of states needed to recognize the graph of the operation of @xmath230 .",
    "[ cor : qtimes ] @xmath115 is not fa presentable .    for a prime @xmath83 ,",
    "let @xmath245 $ ] be the additive group of rationals of the form @xmath246 , @xmath247 an integer , @xmath248 , and let @xmath249 be the prfer group @xmath245/\\mathbb{z}$ ] . using representations to base @xmath83 , it is easy to give fa presentations of these groups",
    ". hence finite direct sums of those groups are also fa presentable .",
    "the proof of the following uses similar methods to the ones of theorem [ thm : nmonoid ] .",
    "[ thm : qomega ] let @xmath250 denote the direct sum of infinitely many copies of the group @xmath47 .",
    "the infinite direct sums @xmath245^{(\\omega)}$ ] and @xmath251 are not fa presentable .",
    "the proof is similar to the proof of theorem  [ thm : nmonoid ] .",
    "suppose there is an fa presentation , and the @xmath54-th copy of the group in question is generated by all elements of the form @xmath252 , @xmath253 , where the elements @xmath231 are listed in length - lexicographical order .",
    "define @xmath233 as before , and consider sums @xmath254 , where @xmath255 . by proposition  [ prop : locfin ] ,",
    "the definable operation @xmath256 increases the length by at most a constant .",
    "so , using lemma  [ lem : product ] each term @xmath257 has length at most @xmath258 for appropriate @xmath259",
    ". thus each sum has length at most @xmath260 .",
    "as there are @xmath261 distinct sums , this yields a contradiction as before .      in our next result",
    "we prove that no infinite integral domain is fa presentable .",
    "the following definition and lemma will be used in the next section as well .",
    "suppose @xmath262 is a structure over alphabet @xmath12 .",
    "write @xmath263 for @xmath264 ; that is the elements of @xmath26 of length at most @xmath27 .",
    "write @xmath265 for @xmath266 , namely all prefixes of length @xmath27 of all words in the domain .",
    "[ lem : s_n ] if @xmath25 is a regular language then    1 .",
    "@xmath267 and 2 .",
    "@xmath268 for every constant @xmath269 .",
    "suppose the automaton recognising @xmath26 has @xmath270 states .",
    "then for @xmath271 there exists @xmath272 with @xmath273 such that @xmath274 @xmath275 . if @xmath276 then @xmath277 since the map associating @xmath271 with the word consisting of the first @xmath278 letters of @xmath167 , is @xmath279-to - one . but by using @xmath275 we see that @xmath280 .",
    "so @xmath281 as required for the first part .",
    "fix @xmath269 .",
    "the mapping associating @xmath282 to the prefix of @xmath167 of length @xmath27 is @xmath283-to - one .",
    "hence    @xmath284 .",
    "since @xmath285 one has that @xmath286 and @xmath287 .",
    "this completes the proof of the lemma .",
    "recall that an integral domain @xmath288 is a commutative ring with identity such that @xmath289 only if @xmath290 or @xmath291 .",
    "for example every field is an integral domain .",
    "no infinite integral domain is fa presentable .",
    "suppose that @xmath288 is an infinite automatic integral domain . for each @xmath292 recall that @xmath293 .",
    "we claim that there exists an @xmath167 in @xmath26 such that for all @xmath294 the condition @xmath295 implies that @xmath296 and @xmath297 .",
    "we say such @xmath167 * separates * @xmath263 .",
    "indeed , assume that such an @xmath167 does not exist .",
    "then for each @xmath298 there exist @xmath299 such that @xmath300 but @xmath301 .",
    "hence , since @xmath263 is finite , there exist @xmath299 such that @xmath300 but @xmath301 for infinitely many @xmath167 .",
    "thus , for infinitely many @xmath167 we have @xmath302 . but",
    "@xmath303 for otherwise also @xmath304 , contrary to assumption .",
    "also there exist distinct @xmath305 and @xmath306 such that @xmath307 . since @xmath26 is an integral domain we conclude that @xmath308 which is a contradiction .    for each @xmath263 we can select the length - lexicographically first @xmath309 separating @xmath263 . now",
    "the set @xmath310\\}$ ] has at least @xmath311 many elements .",
    "however by proposition  [ prop : locfin ] there exists a constant @xmath312 such that @xmath313 , and by lemma  [ lem : s_n ] the number of elements in @xmath314 is in @xmath315 .",
    "thus , we have a contradiction .",
    "the theorem is proved .",
    "no infinite field is fa presentable .",
    "we briefly recall the definition of limit ; see for instance @xcite . in this section",
    "we restrict consideration to relational structures of finite signature , although the definition can be extended to signatures with function symbols .",
    "let @xmath316 be a class of finite structures closed under isomorphism .",
    "we say that @xmath316 has the * hereditary property ( hp ) * if for @xmath317 every substructure of @xmath11 is also in @xmath316 .",
    "we say that @xmath316 has the * joint embedding property ( jep ) * if for all @xmath318 there exists @xmath319 such that @xmath11 and @xmath56 are both embeddable into @xmath1 .",
    "we say that @xmath316 is the * age * of a structure @xmath262 if @xmath316 coincides with the class of all finite substructures of @xmath262 .",
    "it clear that the age of a structure has hp and jep .",
    "in fact , it is not hard to prove that a class @xmath316 has @xmath320 and @xmath321 if and only if @xmath316 coincides with the class of all finite substructure of some structure .",
    "however , note that non - isomorphic structures may have the same age .",
    "the following property guarantees that a class @xmath316 with hp and jep defines a unique structure up to isomorphism :    a class @xmath316 of finite structures has * amalgamation property ( ap ) * if for @xmath322 with embeddings @xmath323 and @xmath324 there are @xmath325 and embeddings @xmath326 and @xmath327 such that @xmath328 .    below",
    "we cite a classical result in model theory due to . for this",
    "we mention that a structure @xmath11 is called * ultra - homogeneous * if every isomorphism between finite substructures of @xmath11 can be extended to an automorphism of @xmath11 . for the proof the reader may consult ( * ? ? ?",
    "* theorem @xmath329 ) .",
    "let @xmath316 be a nonempty class of finite structures which has hp , jep , and ap .",
    "then there exists a up to isomorphism unique countable structure @xmath11 , called the * limit of @xmath316 * , such that @xmath11 is ultra - homogeneous and @xmath316 is the age of @xmath11 .",
    "now we can apply the theorem to obtain several examples of structures . in each of these examples the classes @xmath316 have hp , jep , and ap .",
    "let @xmath316 be the class of all finite linear orders .",
    "the limit of @xmath316 is isomorphic to the ordering of rationals .",
    "let @xmath316 be the class of all finite linear orders with one unary predicate .",
    "the limit of @xmath316 is isomorphic @xmath330 , where @xmath331 is the linear order of rationals @xmath332 , and @xmath333 is a dense and co - dense subset of @xmath332 .",
    "[ example : random - graph ] let @xmath316 be the class of all finite graphs .",
    "the limit of @xmath316 is known as the * random graph*. the following is an algebraic property that gives a characterisation ( of the isomorphism type ) of the random graph @xmath334 @xmath57see @xcite@xmath335 . for every disjoint partition @xmath336 of every finite set @xmath337 of vertices",
    "there exists a vertex @xmath168 such that for all @xmath338 and @xmath339 we have @xmath340 and @xmath341 .",
    "an explicit description of a random graph is the following .",
    "the set @xmath342 of vertices is @xmath5 and @xmath343 if in the binary representation of @xmath27 , the term @xmath344 has coefficient @xmath345 .",
    "let @xmath316 be the class of all finite structures of a given signature @xmath145 .",
    "the limit of @xmath316 is known as the * random @xmath145-structure*.    denote by @xmath346 the complete graph ( every pair of vertices are connected by an edge ) on @xmath83 vertices . for @xmath347 , consider the class of all finite graphs which do not contain @xmath348 as a subgraph .",
    "the limit of @xmath316 is known as the * random @xmath346-free graph*. it has the following property . for every finite @xmath349-free subgraph ,",
    "say with domain @xmath337 , and every disjoint partition @xmath336 of @xmath337 , there exists a vertex @xmath167 that is edge connected to every vertex in @xmath350 and no vertex in @xmath351 .",
    "recall that an anti - chain in a partial order is a set of pairwise incomparable elements .",
    "a chain in a partial order is a set in which every pair of elements are comparable .    [",
    "random - order ] let @xmath316 be the class of all finite partially ordered set .",
    "the limit @xmath352 of @xmath316 is known as the * random partial order*. the following is an algebraic characterisation ( of the isomorphism type ) of the random partial order @xmath353 @xmath57see @xcite@xmath335 .    1 .",
    "if @xmath354 is a _ finite _ anti - chain of @xmath352 and @xmath154 and @xmath337 partition @xmath354 then there exists an element @xmath355 such that for every @xmath356 , @xmath357 and for every @xmath358 , element @xmath247 is not comparable with @xmath359 .",
    "if @xmath354 is a _ finite _ chain of @xmath352 with least element @xmath167 and largest element @xmath168 then there exists an element @xmath355 such that @xmath360 and @xmath361 and @xmath247 is not comparable with every @xmath362 .",
    "let @xmath316 be the class of all finite boolean algebras .",
    "the limit of @xmath316 is isomorphic to the atomless boolean algebra .",
    "this is the boolean algebra that satisfies the following property . for every non - zero element @xmath167",
    "there exists a nonzero @xmath168 strictly below @xmath167 @xmath57that is @xmath363 . by theorem  [ thm : ba ]",
    "this limit has no automatic presentation .",
    "let @xmath316 be the class of all finite abelian @xmath83-groups .",
    "the limit of @xmath316 is isomorphic to @xmath364 .",
    "note that @xmath365 has no fa - presentation by theorem  [ thm : qomega ] .",
    "the class @xmath316 has hp , jep and ap , so the limit exists . to show this limit is isomorphic to @xmath365 , by ( *",
    "* lemma 7.1.4 ) it suffices to show that the age of @xmath365 is @xmath316 ( clear ) and that @xmath365 is weakly homogeneous .",
    "to do so , suppose @xmath366 are in @xmath316 .",
    "we have to show that each embedding of @xmath47 into @xmath365 extends to an embedding of @xmath367 .",
    "we may assume that @xmath368 . since @xmath367 is a direct product of cyclic groups",
    "whose order is a power of @xmath83 , either @xmath369 or there is @xmath370 such that @xmath167 is not divisible by @xmath83 in @xmath47 , and @xmath371 for some @xmath372 . in either case",
    "we can extend the embedding .    below are examples of limits that have automatic presentations .",
    "the linear order of rational numbers has an automatic presentation .",
    "in fact it is straightforward to check that @xmath373 is an automatic presentation of @xmath374 .",
    "let @xmath375 .",
    "the structure @xmath376 is the limit for the class @xmath316 of all finite linear orders with one unary predicate .",
    "we now provide some methods for proving non - automaticity of structures .",
    "these methods are then applied to prove that some limits do not have automatic presentations .",
    "let @xmath11 be an automatic structure over the alphabet @xmath12 .",
    "recall @xmath377 .",
    "let @xmath378 be a two variable formula in the language of this structure .",
    "we do not exclude that @xmath378 has a finite number of parameters from the domain of the structure .",
    "now for each @xmath379 and @xmath380 we define the following function @xmath381 : @xmath382 we may drop the superscript @xmath383 if there is no danger of ambiguity . in the next theorem",
    "we count the number of functions @xmath384 using the fact that @xmath11 is an automatic structure .",
    "we will use this as a criterion for proving that a given structure is not automatically presentable .",
    "[ bound ] let @xmath11 be an automatic structure and @xmath378 a first order formula ( possibly with parameters ) over the language of @xmath11 . then the number of functions @xmath384 is in @xmath385 .",
    "it is sufficient to prove that there is a constant @xmath36 so that the number of functions of the form @xmath386 with @xmath387 is at most @xmath388 ; this is because the @xmath168 s in @xmath389 can supply at most @xmath390 many additional functions @xmath386 .",
    "let @xmath391 be a deterministic automaton recognising the relation @xmath392 { \\mathcal a}\\models \\phi(x , y)\\}$ ] .",
    "fix @xmath292 .",
    "we will associate with each @xmath386 , where @xmath387 , two pieces of information ; namely , a function @xmath393 and a set @xmath394 as follows .",
    "let @xmath395 , where @xmath396 and @xmath397 . then define @xmath398 .",
    "define @xmath399 as those states @xmath400 such that @xmath401 .",
    "note that @xmath402 , for some @xmath403 , and is independent of @xmath167 .",
    "we claim that if @xmath404 then @xmath405 .",
    "so suppose that @xmath404 , and let @xmath396 be given .",
    "say @xmath406 , and @xmath407",
    ". then @xmath408 then @xmath405 as claimed .",
    "thus the number of functions of the form @xmath386 ( @xmath409 ) is at most the number of distinct pairs of the type @xmath410 . now",
    "the number of @xmath411 is at most @xmath412 , so we concentrate on bounding the number of distinct functions @xmath413 by @xmath385 .",
    "note that @xmath413 depends only on the first @xmath27 letters of @xmath168 in the sense that for @xmath414 and @xmath415 , @xmath416 .",
    "now every @xmath417 can be decomposed as @xmath418 with @xmath419 .",
    "but the first part of lemma  [ lem : s_n ] says that there are @xmath385 many such @xmath168 , and so the result follows .",
    "we give several applications of this theorem .",
    "first we apply the theorem to random graphs .",
    "( independently @xcite ) the random graph has no automatic presentation .",
    "let @xmath420 be an automatic presentation of the random graph and let @xmath378 be @xmath63 .",
    "for every partition @xmath336 of the set @xmath389 of vertices there exists a vertex @xmath168 such that for all @xmath338 and @xmath339 it holds that @xmath421 and @xmath422 .",
    "hence , for every @xmath27 , we have @xmath423 number of functions of type @xmath386 , contradicting theorem  [ bound ] .",
    "hence the random graph has no automatic presentation .",
    "let @xmath11 be a random structure of a signature @xmath145 , where @xmath145 contains at least one non - unary symbol .",
    "then @xmath11 does not have an automatic presentation .",
    "let @xmath43 be a non - unary predicate of @xmath145 of arity @xmath36 .",
    "consider the following formula @xmath424 where @xmath425 are fixed constants from the domain of @xmath11 .",
    "it is not hard to prove that @xmath420 is isomorphic to the random graph .",
    "but if @xmath11 is automatically presentable then so is the random graph @xmath420 , hence contradicting the previous corollary .",
    "the next goal is to show that the random @xmath348-free graph has no automatic presentation . for this one",
    "needs to have a finer analysis than the one for the random graph .",
    "let @xmath426 be a finite graph .",
    "for a vertex @xmath427 , write @xmath428 for the set of vertices adjacent to @xmath427 .",
    "the _ degree _ of a vertex is the cardinality of @xmath428 .",
    "write @xmath429 for the maximum degree over all the vertices of @xmath164 . call a subgraph @xmath430 with no edges an _ independent _ graph .",
    "let @xmath431 be the number of vertices of a largest independent subgraph of @xmath432 .",
    "@xmath348 denotes the complete graph on @xmath83 vertices ; that is , there is an edge between every pair of vertices .",
    "a graph is called _",
    "@xmath348-free _ if it has no subgraph isomorphic to @xmath348 .    for every @xmath347",
    ", there is a polynomial @xmath433 of degree @xmath434 so that if @xmath432 is a finite @xmath348-free graph then @xmath435 .",
    "we first prove that for every finite graph @xmath432 , @xmath436 let @xmath430 be an independent subgraph of @xmath432 with a maximal number of vertices .",
    "that is , @xmath437 .",
    "for every @xmath438 let @xmath439 , where @xmath440 is the set of vertices in @xmath432 adjacent to @xmath441 . then",
    "since @xmath430 is maximal , for every @xmath442 there is some ( not necessarily unique ) @xmath438 such that @xmath443 . hence @xmath444 . but @xmath445 equals the degree ( in @xmath432 ) of @xmath441 plus one , and so the largest cardinality amongst the @xmath446 s is at most @xmath447 . hence @xmath448 as required .",
    "the lemma is proved by induction on @xmath83 .",
    "we will show that @xmath449 .",
    "for the case @xmath450 note that for every vertex @xmath427 , the subgraph on domain @xmath428 is independent . for",
    "otherwise if @xmath451 were joined by an edge then the subgraph of @xmath432 on @xmath452 is @xmath453 . in particular ,",
    "@xmath454 . combining this with inequality ( [ eqn : cp ] )",
    ", we get @xmath455 \\geq |f|$ ] as required .    for the inductive step , let @xmath432 be a @xmath348-free graph with @xmath456 . for every vertex @xmath427 , the set @xmath428 is @xmath349-free for otherwise the subgraph of @xmath432 on @xmath457 has a copy of @xmath348 .",
    "applying the induction hypothesis to @xmath428 such that @xmath458 , we get that @xmath428 must have an independent set @xmath154 so that @xmath459 . but",
    "@xmath154 is also independent in @xmath432 so @xmath460 . combining this with inequality [ eqn : cp ]",
    ", we get that @xmath461 \\geq |f|$ ] .",
    "hence @xmath462 as required .",
    "[ cor : kpfree ] for @xmath347 , the random @xmath348-free graph is not automatically presentable .    fix @xmath347 and let @xmath463 be a copy of the random @xmath348-free graph .",
    "then for every @xmath349-free subset @xmath464 there exists an @xmath465 that is connected to every vertex in @xmath316 and none in @xmath466 .",
    "so let @xmath467 be an independent subgraph of @xmath468 so that @xmath469 as in the lemma .",
    "so letting @xmath378 be @xmath63 , for a fixed @xmath27 the number of functions @xmath386 as @xmath168 varies over @xmath26 is at least @xmath470 which is not linear in @xmath471 .",
    "hence by theorem  [ bound ] the random @xmath348 graph @xmath262 is not automatically presentable .    as the fourth application",
    "we prove that the random partial order @xmath352 does not have an automatic presentation . for the proof",
    "we need the following combinatorial result that connects the size of a finite partial order @xmath472 with the cardinalities of its chains and anti - chains .",
    "[ dilworth ] [ lem : dilworth ] let @xmath472 be a finite partial order of cardinality @xmath27 .",
    "let @xmath159 be the size of largest anti - chain in @xmath472 and let @xmath270 be the size of the largest chain in @xmath472",
    ". then @xmath473 .    for @xmath474",
    "define @xmath475 as the set of all elements @xmath167 such that the size of the largest chain in the subpartial order @xmath476 is @xmath54 .",
    "then the @xmath475 s partition @xmath367 .",
    "moreover if @xmath477 and @xmath478 then the size of the largest chain in @xmath479 is @xmath480 .",
    "hence each @xmath475 is an anti - chain .",
    "thus @xmath56 can be partitioned into exactly @xmath270 many anti - chains . if @xmath159 is the size of the largest anti - chain in @xmath56 then @xmath473 as required .",
    "[ cor : p ] the random partial order @xmath353 has no automatic presentation .",
    "recall that the random partial order has the following property    1 .",
    "if @xmath354 is a _ finite _ anti - chain of @xmath352 , and @xmath154 and @xmath337 partition @xmath354 , then there exists an element @xmath355 such that @xmath357 for every @xmath356 , and @xmath247 is not comparable with @xmath168 for every @xmath358 .",
    "if @xmath354 is a _ finite _ chain of @xmath352 with least element @xmath167 and largest element @xmath168 , then there exists an element @xmath355 such that @xmath360 and @xmath361 and @xmath247 is not comparable with every @xmath362 .",
    "assume that @xmath352 has an automatic presentation @xmath481 .",
    "the formula @xmath378 is @xmath482 .",
    "now let us take @xmath389 .",
    "let @xmath354 be an anti - chain of @xmath389 .",
    "consider a subset @xmath154 of @xmath354 .",
    "there exists an element @xmath483 such that for every @xmath356 , @xmath484 and for every @xmath485 , element @xmath168 is not comparable with @xmath486 . from this",
    "we conclude that @xmath487 let @xmath354 be a chain of @xmath389 with least element @xmath427 and largest element @xmath488 .",
    "then there exists an element @xmath483 such that @xmath489 and @xmath490 and @xmath168 is not comparable with @xmath167 for every @xmath491 . from this",
    "we conclude that @xmath492 let @xmath154 be the largest anti - chain and @xmath337 be the largest chain of @xmath389 with cardinalities @xmath159 and @xmath270 , respectively .",
    "using dilworth lemma , substituting @xmath159 for @xmath493 in @xmath494 , and @xmath270 for @xmath493 in @xmath495 , one can , with a little algebra , derive a contradiction to the bound in the statement of theorem [ bound ] .",
    "the results in the previous sections give us hope that one can characterise automatic structures for certain classes of structures , e.g. boolean algebras .",
    "however , in this section we prove that the isomorphism problem is @xmath0-complete , thus showing that the problem is as hard as possible when considering the class of _ all _ automatic structures",
    ". then * complexity of the isomorphism problem * for automatic structures consists in establishing the complexity of the set @xmath496 and @xmath56 are automatic structures and @xmath11 is isomorphic to @xmath497 .",
    "let @xmath498 be a turing machine over input alphabet @xmath12 .",
    "its configuration graph @xmath499 is the set of all configurations of @xmath498 , with an edge from @xmath270 to @xmath441 if @xmath500 can move from @xmath270 to @xmath441 in a single transition .",
    "the following is an easy lemma :        now let @xmath503 be a reversible turing machine . consider its configuration space @xmath504 .",
    "the machine @xmath503 can be modified so that it only halts in an accepting state ; so , instead of halting in a rejecting state , it loops forever .",
    "let @xmath167 be a configuration of @xmath503 .",
    "consider the sequence : @xmath505 , @xmath305 , @xmath306 , @xmath190 such that @xmath506 , where @xmath507 is the edge relation of the configuration space . call this sequence the * chain defined by @xmath167*. we say that @xmath167 is the * base * of chain @xmath154 . if @xmath167 does not have a predecessor then the chain defined by @xmath167 is maximal .",
    "since @xmath503 is reversible , the configuration space @xmath504 is a disjoint union of maximal chains such that each chain is either finite , or isomorphic to @xmath508 , or isomorphic to @xmath509 , where @xmath510 iff @xmath511 .",
    "it is known that every turing machine can be converted into an equivalent reversible turing machine ( see for example @xcite ) .",
    "our next lemma states this fact and provides some additional structural information about the configuration space of reversible turing machines :      denote by @xmath512 the set of all finite strings from @xmath5 .",
    "a set @xmath513 is a _ special tree _",
    "if @xmath500 is closed downward , namely @xmath514 implies @xmath515 , for @xmath516 .",
    "we view these special trees as structures of the signature @xmath507 , where @xmath63 if and only if @xmath517 for some @xmath518 .",
    "thus , for every @xmath519 the set @xmath520 can be thought as the set of all _ immediate successors of @xmath167_.    a special tree @xmath500 is _ recursively enumerable _ if the set @xmath500 is the domain of the function computed by a turing machine .",
    "we will use the following fact from computable model theory ( * ? ? ?",
    "* thm 3.2 ) .",
    "consider the prefix relation @xmath523 on the set of all binary strings .",
    "the tree @xmath512 is isomorphic to the automatic successor tree @xmath524 , where @xmath525 is the set of all pairs @xmath526 such that @xmath168 is the immediate @xmath527-successor of @xmath167 .",
    "the isomorphism is established via the computable mapping sending @xmath528 to @xmath529 and the root to @xmath530 .      1 .",
    "all special trees we consider will be viewed as subsets of @xmath532 .",
    "the set of inputs for all turing machines considered are strings from @xmath533 .",
    "each @xmath534 is identified with the initial configuration starting from @xmath488 .",
    "3 .   all turing machines considered are reversible .",
    "the domains of the functions computed by the turing machines are assumed to be downward closed .",
    "thus , these domains form recursively enumerable special trees .",
    "our goal is to transform every recursively enumerable tree @xmath535 into an automatic structure @xmath536 , where @xmath503 is the reversible machine with domain @xmath500 .",
    "the idea is to attach computations of @xmath503 to the initial configurations in @xmath533 .",
    "for all recursively enumerable trees @xmath537 and",
    "@xmath538 , @xmath537 and @xmath538 are isomorphic if and only if the automatic structures @xmath539 and @xmath540 are isomorphic . to ensure this we also have to attach infinitely many chains of each finite length to the initial configurations , for in that case the length of a halting computation does not make a difference .",
    "let @xmath503 be a reversible turing machine .",
    "a * chain * is an initial segment of @xmath508",
    ". let @xmath541 be the graph consisting of infinitely many finite chains of every finite length .",
    "we denote by @xmath542 the set of vertices of @xmath541 , and the bases of the chains in @xmath541 by @xmath543 .",
    "the following is not hard to prove :      to construct @xmath536 , with every @xmath544 associate a graph @xmath545 defined as follows .",
    "the vertex set of @xmath545 consists of all @xmath546 and edges between @xmath547 and @xmath548 if and only if @xmath549 is an edge in @xmath541 .",
    "put connecting edges from @xmath488 into each @xmath550 .",
    "let @xmath551 be the graph consisting of @xmath522 and every @xmath545 and the connecting edges .",
    "clearly , the graph @xmath551 is automatic .    to the set @xmath552 add all the configurations of the turing machine @xmath503 and all the edges of the configuration space of @xmath503 .",
    "note that each @xmath553 , which is an initial configuration of @xmath503 is by convention @xmath554 already in @xmath552 .",
    "in addition , add a disjoint automatic copy of the graph @xmath541 , and an automatic copy of infinitely many infinite chains .",
    "call all chains added at this stage * junk chains*. the resulting graph is denoted by @xmath536 .",
    "we summarise the structure of the graph @xmath536 .",
    "firstly , in @xmath536 there are infinitely many junk chains of every ( finite and infinite ) length .",
    "an * isolated chain * of @xmath536 is one in which every vertex , except the base , has exactly one successor in @xmath536 .    with each element @xmath488 in @xmath522",
    "there is an associated structure @xmath545 , which consists of infinitely many isolated chains of every finite length , and no infinite isolated chain . finally with every initial configuration @xmath488 ( which is an element of @xmath536 and belongs to the infinitely branching tree @xmath522 ) there is an isolated chain with base @xmath488 that is the computation path from the configuration space of turing machine @xmath500 .",
    "these observations prove the following .",
    "let @xmath488 be an initial configuration of @xmath536 .",
    "then @xmath488 is the base of infinitely many isolated chains of every finite length .",
    "also the turing machine @xmath500 halts on @xmath488 if and only if there is no infinite isolated chain with base @xmath488 . in case @xmath500",
    "does not halt on @xmath488 there is exactly one infinite isolated chain with base @xmath488 .",
    "let @xmath537 and @xmath538 be computable trees which are domains of reversible turing machines @xmath555 and @xmath556 respectively",
    ". then the trees @xmath537 and @xmath538 are isomorphic if and only if the automatic graphs @xmath539 and @xmath540 are isomorphic .    first note that the domain @xmath500 of @xmath503 consists of all @xmath488 in @xmath557 that are initial configurations and are not the base of an infinite isolated chain .",
    "hence @xmath500 may be thought of as a subgraph of @xmath557 .",
    "now suppose @xmath539 is isomorphic to @xmath540 via the map @xmath558 .",
    "note that @xmath488 is the base of an infinite isolated chain if and only if @xmath559 is the base of an infinite isolated chain .",
    "hence @xmath558 is an isomorphism between the trees @xmath537 and @xmath538 viewed as subgraphs of @xmath539 and @xmath540 respectively .",
    "conversely assume @xmath537 and @xmath538 are isomorphic via @xmath560 ( as before we may assume that @xmath561 is a subgraph of @xmath562 ) .",
    "consider the sets @xmath563 and @xmath564 of all junk chains in @xmath539 and @xmath540 .",
    "there is an isomorphism between @xmath563 and @xmath564 , since both consist of infinitely many chains of every length ( finite and infinite ) , independently of the chains of the configuration graphs that are _ not _ defined by initial configurations .",
    "therefore it suffices to establish an isomorphism extending @xmath560 on the rest of the structure .",
    "if @xmath565 then there is an isomorphism between all the isolated chains with base @xmath488 and all the isolated chains with base @xmath566 .",
    "indeed each is the base of infinitely many isolated chains of every finite length and no isolated chain of infinite length , independently of the ( possibly different ) lengths of the finite computations of @xmath567 on @xmath488 and @xmath568 on @xmath566 . hence extend @xmath560 from the chains defined by elements of @xmath537 to the chains defined by elements of @xmath538 .",
    "suppose @xmath565 and consider the set @xmath569 of immediate successors of @xmath488 that are initial configurations but not in @xmath537 .",
    "similarly write @xmath570 for the set of immediate successors of @xmath566 that are initial configurations but not in @xmath538 . by the extra condition in lemma [ lemma : computable - trees ]",
    "that the trees be subtrees of @xmath521 , both @xmath569 and @xmath570 are infinite .",
    "so we may extend @xmath560 to those immediate successors by adding a bijection between @xmath569 and @xmath570 .",
    "finally , for any initial configurations @xmath571 and @xmath572 , there is an isomorphism between the nodes in @xmath533 extending @xmath573 and the ones extending @xmath574 .",
    "this isomorphism extends to the attached chains ( as there is one infinite isolated chain and infinitely many isolated chains of each finite length ) .",
    "so we may extend @xmath560 to an isomorphism of @xmath539 and @xmath540 .",
    "m.  benedikt , l.  libkin , t.  schwentick and l.  segoufin . a model - theoretic approach to regular string relations . in _ proceedings of the 16th annual ieee symposium on logic in computer science ( lics ) _ , pages 431440 , 2001 ."
  ],
  "abstract_text": [
    "<S> we study the existence of automatic presentations for various algebraic structures . </S>",
    "<S> an automatic presentation of a structure is a description of the universe of the structure by a regular set of words , and the interpretation of the relations by synchronised automata . </S>",
    "<S> our first topic concerns characterising classes of automatic structures . </S>",
    "<S> we supply a characterisation of the automatic boolean algebras , and it is proven that the free abelian group of infinite rank , as well as certain frass limits , do not have automatic presentations . in particular , the countably infinite random graph and the random partial order do not have automatic presentations . </S>",
    "<S> furthermore , no infinite integral domain is automatic . </S>",
    "<S> our second topic is the isomorphism problem . </S>",
    "<S> we prove that the complexity of the isomorphism problem for the class of all automatic structures is @xmath0-complete . </S>"
  ]
}
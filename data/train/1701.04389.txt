{
  "article_text": [
    "energy resources ( ders ) such as demand responsive electric loads and residential solar generation are becoming more common within electricity distribution networks @xcite . sensing infrastructure , such as household smart meters ,",
    "are also becoming more common @xcite .",
    "however , distribution system operators still often lack an accurate real - time picture of overall der characteristics such as i ) the total power consumption of the air conditioners connected to a distribution feeder , or ii ) the total power production of all solar panels installed on a distribution feeder .    knowing overall ders characteristics in real - time can help system operators , utilities , and third - party companies ( such as energy efficiency and demand response providers ) improve power system reliability , economic efficiency , and environmental impact .",
    "for example , 1 ) a system operator can better determine balancing reserve requirements by knowing the real - time production of intermittent distributed generation ; 2 ) a utility can better plan demand response actions by knowing the weather forecast and the real - time portion of weather - dependent loads ( e.g. , air conditioners , heaters , dehumidifiers ) ; 3 ) a demand response provider offering ancillary services to the system operator can better determine its bid capacity by knowing the real - time consumption of demand responsive loads ; and 4 ) a demand response provider can use the real - time consumption of demand responsive loads as the feedback control signal within a load coordination algorithm .",
    "perfect real - time knowledge of der characteristics requires a sensor at each of the large number ( e.g. , thousands ) of spatially distributed devices and a communication infrastructure capable of reliably transmitting the data at the necessary frequency ( e.g. , every few seconds ) . rather than installing additional , costly metering and communication infrastructure , in this paper",
    ", we show that it is possible to estimate real - time der characteristics using existing sensing capabilities and some knowledge of the underlying system .",
    "specifically , we show how to separate measurements of the net demand served by a distribution feeder into its components in real - time , using knowledge of the physical processes driving load / generation .",
    "we refer to this task as _ feeder - level energy disaggregation_.    in this paper , we develop the feeder - level energy disaggregation problem framework and apply an online learning algorithm to separate the active power demand served by a feeder into the active power demand of a population of residential air conditioners and the active power demand of all other loads connected to the feeder .",
    "the algorithm @xcite incorporates dynamical system models of arbitrary forms , blending aspects of machine learning and state estimation . building upon our preliminary work @xcite ,",
    "the contributions of this paper are to i ) frame the feeder - level energy disaggregation problem , ii ) adapt the machine learning algorithm in @xcite to the feeder - level energy disaggregation problem , iii ) develop a variation of the machine learning algorithm that allows it to include models with different underlying states , iv ) demonstrate the performance of the online learning algorithm via a realistic data - driven case study , and v ) compare the performance of the algorithm to that of a set of kalman filters .",
    "beyond @xcite , this paper develops a modified version of the algorithm , compares this modified implementation to a direct implementation of the algorithm , uses only real data ( rather than models ) to construct the feeder active power signal , uses real data to identify all load models , and compares algorithm performance to that of an aggressive benchmark as opposed to a simple prediction model .",
    "section  [ sec : lit ] compares our problem and approach to related problems / work . section  [ sec : overview ] defines the problem framework .",
    "section  [ sec : constructionofplantsignals ] describes the data used to construct the underlying system , and section  [ sec : models ] describes the models used within the algorithm .",
    "section  [ sec : onlinelearningalgorithm ] summarizes the online learning algorithm and our implementations for the feeder - level energy disaggregation problem .",
    "section  [ sec : casestudies ] constructs case studies and summarizes their results .",
    "finally , section  [ sec : conclusions ] presents the conclusions .",
    "the feeder - level energy disaggregation problem combines aspects of building - level energy disaggregation and load forecasting .",
    "building - level energy disaggregation , also referred to as nonintrusive load monitoring@xcite , separates building - level demand measurements into estimates of the demand of individual or small groups of devices @xcite .",
    "disaggregation algorithms use data sampled at frequencies ranging from over 1 mhz to 0.3 mhz ( i.e. , hourly interval data ) where higher - frequency data allows separation of more devices , in some work up to 100 @xcite .",
    "the problem is not usually solved online because the goal is long - term energy efficiency decisions such as identification and replacement of faulty appliances and/or load research .",
    "both unsupervised and supervised learning approaches have been proposed , with the latter often using models developed with submetering data .",
    "load forecasting predicts the total future demand within a given area over time horizons ranging from hours to years @xcite . whereas energy disaggregation typically deals with small load aggregations , load forecasting typically deals with large aggregations , e.g. , thousands to millions of loads .",
    "for example , forecasting the load served by a distribution transformer is considered a `` small '' forecasting problem @xcite .",
    "very short term load forecasting , corresponding to intraday forecasts , generally uses fifteen minute to one hour interval data @xcite .",
    "smart meter data enables offline development of detailed load models @xcite , which may be used online for operational decisions @xcite , e.g. , for predicting the curtailable load @xcite . however , load forecasting is typically done offline and used for planning .",
    "in contrast to building - level energy disaggregation , feeder - level energy disaggregation involves disaggregating the demand of a large number of loads , e.g. , thousands , into a small number of source signals , e.g. , two .",
    "in contrast to load forecasting , feeder - level energy disaggregation involves estimating _ portions _ of the total demand and assumes real - time demand measurements , e.g. , taken by scada systems at distribution substations , are available on timescales of seconds to minutes .",
    "this corresponds to relatively fast sampling for load forecasting and relatively slow sampling for building - level energy disaggregation .",
    "in contrast to both building - level energy disaggregation and load forecasting , feeder - level energy disaggregation is done online . however , much like load forecasting and some building - level energy disaggregation approaches , we assume detailed historical load data are available and used offline to construct predictive models .",
    "machine learning algorithms have been proposed to address a number of problems in power systems including security assessment , forecasting , and optimal operation @xcite .",
    "a variety of machine learning techniques have been used to forecast load , renewable generation , and prices@xcite .",
    "references  @xcite apply learning approaches to demand response .",
    "however , to the best of our knowledge , this is the first paper to pose and solve the feeder - level energy disaggregation problem , or to apply the approach in @xcite to a power systems problem .",
    "we assume that a power system entity ( e.g. , a system operator , utility , or third - party company ) has access to real - time measurements of the electricity demand served by a distribution feeder .",
    "the power system entity is interested in separating these measurements into two components in real - time , i.e. , at each time - step .",
    "the first component is the power demand of a population of residential air conditioners served by the feeder , referred to as the `` ac demand . ''",
    "air conditioners generally draw power periodically to maintain a building s indoor temperature within a range centered at a user - defined temperature set - point .",
    "the ac demand varies in time due to each air conditioner s power cycling , weather - related influences , and building occupant influences .",
    "the second component is the power demand of the other loads on the feeder , referred to as the `` ol demand , '' which we assume includes both residential and commercial loads .",
    "figure  [ fig : problemintro ] displays example time series for the measured total demand @xmath0 , the ac demand @xmath1 , and the ol demand @xmath2 over a day",
    ". we measure @xmath0 at each time - step and try to estimate @xmath1 and @xmath2 at each time - step as each measurement arrives .     and its components @xmath3 and @xmath4 .",
    "]    [ fig : problemintro ]    the power system entity has two distinct modes of operation .",
    "the first is the real - time estimation mode depicted in fig .",
    "[ fig : systemoverviewa ] .",
    "the second is the offline model generation mode , depicted in fig .",
    "[ fig : systemoverviewb ] . during real - time operation , we assume that the power system entity has access to active power measurements corresponding to the demand served by the distribution feeder as well as weather - related measurements for the physical area .",
    "the power measurements are time - averaged active power demands over one minute intervals , and they are the sum of the ac and ol demand .",
    "the weather - related measurements could include , for example , temperature and humidity , and can be obtained from existing weather sensors ; load - specific weather monitoring is not required .",
    "+    model generation occurs offline using historical smart meter , feeder , and weather data .",
    "we assume that smart meters are installed at all houses , and they enable the collection of household- or device - level measurements at one minute intervals . the smart meters communication limitations @xcite make real - time communication of this information infeasible , and so it is only available offline for prior days .",
    "we also assume that the power system entity has access to historical feeder and weather data .",
    "once the models are formed , they are used along with the real - time measurements to estimate the ac and ol demand .",
    "an online learning algorithm , dynamic mirror descent ( dmd ) @xcite , uses a single model , taken from the bank of models , to generate predictions of the total demand , a loss function to penalize errors between the predicted and measured total demand , and a convex optimization formulation to adjust this prediction based on the measured total demand .",
    "dynamic fixed share ( dfs ) @xcite , uses dmd within the fixed share algorithm @xcite to include predictions from the entire bank of models .",
    "specifically , dfs applies dmd separately to each of the models within the bank and uses a weighting algorithm to associate a weight with each model s adjusted prediction before combining the individual predictions into an overall estimate . in dfs , these models are weighted based on their prediction accuracy  better prediction - measurement matching leads to larger weighting and more influence in the overall prediction . the algorithm is described in detail in section  [ sec : onlinelearningalgorithm ] , but first we describe the construction of the underlying physical system , i.e. , the plant , used within the case studies and the models used within the algorithm .",
    "in this section , we detail the construction of the ac and ol demand time series and the associated weather time series over one day .",
    "these time series are used as the plant , i.e. , the underlying physical system .",
    "the day consists of @xmath5 one - minute time - steps with @xmath6 at 12:00 am , resulting in @xmath7 time - steps . because we were unable to find sufficient data from a single location / day , we use demand and weather data from a variety of sources .",
    "we use feeder model r5 - 25.00 - 1 from gridlab - d s feeder taxonomy @xcite to set the average residential and commercial demand on the feeder to @xmath8 mw and @xmath9 mw , respectively . ignoring network losses ( which",
    ", if included , would be treated as part of the ol demand ) , the total feeder demand measurements are the sum of the ac and ol demand , i.e. , @xmath10 , where @xmath11 is the sum of the other residential demand and the commercial demand @xmath12 . both @xmath4 and @xmath13 are constructed using residential data from the pecan street dataport @xcite , while @xmath14 is constructed using commercial building data provided by pacific gas & electricity company .",
    "the residential data consists of historical 1 minute interval household- and device - level demand measurements for a set of single family homes in austin , tx .",
    "daily household demand signals were randomly drawn with replacement and added together until the total residential signal s mean matched that of the feeder model , resulting in @xmath15 total houses . to construct the ac demand signal",
    ", we summed the demand of each household s primary air conditioner and air blower unit .",
    "note that some houses have no / multiple air conditioner and air blower units .",
    "we assume that only one unit per household contributes to the ac demand , resulting in @xmath16 units .",
    "the remaining demand is the residential ol demand .",
    "the commercial data consists of historical 4 second interval whole - building demand measurements from two buildings in the california bay area , a municipal building and a big box retail store .",
    "we summed the demand of the two buildings , and then scaled the sum by 2.61 to match the average commercial demand of the feeder model .",
    "we also down - sampled the data to 1 minute intervals by averaging the values over each minute .",
    "the plant s weather data is constructed from two sources : 1 ) pecan street dataport @xcite , and 2 ) national oceanic and atmospheric administration ( noaa ) weather station data from the national climatic data center @xcite .",
    "the pecan street weather data corresponds to the residential demand .",
    "it consists of the outdoor air temperature for austin , tx , and it is sampled at one hour intervals .",
    "we linearly interpolate the data down to one minute intervals .",
    "the noaa weather data corresponds to the commercial demand .",
    "it consists of outdoor temperature data from the concord , ca weather station , sampled at one hour intervals .",
    "again , we linearly interpolate the data down to one minute intervals .",
    "all weather data was taken from the same day as the demand data .",
    "in this section , we describe the models used to generate predictions of the ac and ol demands .",
    "these models are generated offline , using historical data , and then used within the online learning algorithm detailed in section  [ sec : onlinelearningalgorithm ] .",
    "the historical demand signals were constructed in the same manner as described in section  [ sec : constructionofplantsignals ] , using the same combination of houses as used to construct the plant signals , and excluding any atypical data such as those corresponding to holidays .",
    "the ol demand is modeled using two different linear regression methods as detailed in section  [ sec : uncontrollablemodels ] , and the ac demand is modeled using several linear dynamic systems as well as a linear regression method as detailed in section  [ sec : controllablemodels ] .",
    "we use two variations of regression models to predict the ol demand .",
    "the first model , referred to as the time - of - day ( tod ) regression model , is a lookup table where an ol demand prediction is generated for each minute of the day based on the ol demand of a single day in the past .",
    "the second model is a multiple linear regression ( mlr ) model in which a vector of input features @xmath17 is used to generate an ol demand prediction for the next time - step @xmath18 .",
    "the predictions are formed as a linear combination of the input features where the weights , or regression parameters , are generated such that they minimize the sum of the squared errors between historical measurements @xmath19 and their model - based predictions @xmath20 .",
    "figure  [ fig : uncontrollablemodels ] displays @xmath3 for a simulated day , several tod regression model predictions , e.g. , @xmath21 , and the mlr regression model prediction @xmath22 .",
    "we next describe the construction of these models .",
    "[ fig : uncontrollablemodels ]      the tod regression model is a lookup table of the predicted ol demand for each minute of the day @xmath23 whereas @xmath24 indexes overall time - steps , @xmath25 indexes the time of day in minutes , i.e. , @xmath26 for 12:00 am and @xmath27 for 1:00 am .",
    "the scalar @xmath28 corresponds to the predicted ol demand value for time - of - day @xmath25 , @xmath29 is a row vector containing all @xmath28 values , and @xmath30 is a column vector that selects the appropriate @xmath29 based on the corresponding time of day for @xmath24",
    ". we generate @xmath29 by smoothing the ol demand signal of a previous day using a piecewise linear and continuous , least - squares fit .",
    "each linear segment corresponds to a fifteen minute interval of the historical data .",
    "we generate one tod regression model for each weekday , and the models are denoted @xmath31 , @xmath32 , @xmath33 , @xmath34 , and @xmath35 .",
    "their corresponding predictions are @xmath21 , @xmath36 , @xmath37 , @xmath38 , and @xmath39 , respectively .      the mlr model of the ol demand",
    "is denoted @xmath40 , and it uses input features that include calendar - based variables , e.g. , the day of the week , as well as weather - based variables , e.g. , the outdoor temperature .",
    "we split the mlr model into two distinct components : one model for the commercial demand and one model for the residential ol demand since the underlying data corresponds to different geographic areas and time periods .",
    "the overall mlr model of the ol demand is then the sum of the predicted residential ol demand @xmath41 and the predicted commercial demand @xmath42 , i.e. , @xmath43 where the row vectors @xmath44 and @xmath45 are the regression parameters for the residential ol demand and the commercial demand , respectively .",
    "the column vectors @xmath46 and @xmath47 are the corresponding input features .    the mlr model for the residential ol demand uses input features @xmath48 where @xmath49 is an indicator vector for the time of week in minutes , @xmath50 is the outdoor temperature for austin , tx , and @xmath51 is the measured total demand of the previous time - step .",
    "the row vector of corresponding regression parameters is @xmath52 , where the row vector @xmath53 consists of parameters @xmath54 and @xmath55 indexes the minute of the week .",
    "the indicator vector @xmath49 selects the appropriate @xmath56 based on the corresponding time - of - week of @xmath24 .",
    "the resulting form of the predictions is then @xmath57    the commercial regression model corresponds to `` baseline method 1 '' from @xcite , which we describe here for convenience .",
    "it uses input features @xmath58 where @xmath59 is the outdoor temperature for concord , ca and @xmath60 is a vector that associates the temperature to the corresponding time of week .",
    "the row vector of corresponding regression parameters is @xmath61 , where @xmath62 is defined similarly to @xmath53 and row vector @xmath63 consists of parameters @xmath64 , where @xmath55 indexes the time of week .",
    "the resulting form of the predictions is then @xmath65      we use a variety of models to predict the ac demand : an mlr model , linear time invariant ( lti ) system models , and linear time varying ( ltv ) system models .",
    "the mlr model of the ac demand is similar to the mlr model in section  [ sec : uncontrollablemlr ] with different input features . the lti and ltv models are versions of an aggregate model developed in @xcite that predicts the portion of air conditioners that draw power versus the portion that are not drawing power .",
    "figure  [ fig : controllablemodels ] displays @xmath4 for a simulated day , several ltv model predictions , e.g. , @xmath66 , and the mlr regression model prediction @xmath67 .",
    "we next describe the construction of these models .          the mlr model of the ac demand",
    "is denoted @xmath68 , and it includes the input features @xmath69 , where @xmath70 is the temperature in austin , tx from @xmath71 time - steps ago and @xmath71 is the time lag that maximizes the cross correlation between the historical ac demand signal and temperature signal ( 119 minutes for our plant ) .",
    "the row vector of corresponding regression parameters is @xmath72 .",
    "the resulting form of the predictions is then @xmath73      we construct a set of lti models @xmath74 , originally developed in @xcite . as in @xcite",
    ", each model within the set captures the aggregate behavior of the population of air conditioners for a different outdoor temperature @xmath75 and has the form @xmath76 with @xmath77 .",
    "the state vector @xmath78 consists of the portion of the air conditioners within each of @xmath79 discrete states . in this paper , we use one state to represent the portion of air conditioners that are drawing power and another to represent those that are not , i.e. , @xmath80 . the state transition matrix , @xmath81 ,",
    "is a transposed markov transition matrix .",
    "its entries capture the probabilities that air conditioners maintain their current state or transition to the other state during the time - step .",
    "the output matrix @xmath82 estimates the ac demand @xmath83 from the portion of air conditioners that are drawing power , i.e. , @xmath84 , where @xmath85 is a parameter approximating of the average power draw of air conditioners drawing power and @xmath86 is the number of air conditioners , which we assume is known .    to identify @xmath87 and @xmath82 for all @xmath88 ,",
    "we first define a set of @xmath89 evenly spaced temperatures @xmath90 and denote the @xmath88-th temperature of the set as @xmath75 .",
    "the difference between successive temperatures @xmath75 and @xmath91 is @xmath92 .",
    "matrices @xmath87 and @xmath82 are constructed using power demand signals from each air conditioner corresponding to periods when @xmath93 .",
    "some heuristics were used to exclude anomalous high or low power demand measurements .",
    "the @xmath85 parameter of @xmath82 is set as the average power draw of air conditioners that are drawing power .",
    "the four entries of @xmath87 were determined by checking whether an air conditioner 1 ) started drawing power , 2 ) stopped drawing power , 3 ) continued to draw power , or 4 ) continued to not draw power during each time - step .",
    "the occurrences for each case were counted for every air conditioner at every time - step and the totals were placed into their respective entries in @xmath87 , and then each column was normalized so that the sum of the column entries was 1 . in our case studies ,",
    "we construct an lti model for each integer temperature in the set @xmath94 @xmath95 . if the outdoor temperature lies outside of the range used to generate the models , we use the model corresponding to the closest temperature .      in this section ,",
    "we describe how to incorporate the lti models into an ltv model denoted @xmath96 with the form @xmath97 where @xmath98 and @xmath99 are generated by linearly interpolating the matrix entries based on @xmath70 .",
    "specifically , if @xmath70 is between temperatures @xmath75 and @xmath91 , @xmath100 is formed as @xmath101 the matrix @xmath99 is formed similarly . if the temperature lies outside of the range used to generate the models , we extrapolate using the difference between the nearest two models .",
    "we also construct an ltv model denoted @xmath102 that uses a moving average of the historical outdoor temperature @xmath103 where @xmath104 is number of time - steps used to compute the moving average .",
    "we chose @xmath104 to be the value that maximizes the cross correlation between the historical moving average temperature and the historical ac demand signal ( 270 minutes for our plant ) .",
    "we construct the underlying lti models as in section  [ sec : ltimodels ] except that we divide the data based on the historical moving average temperature rather than the delayed temperature .",
    "we construct the ltv model as in section  [ sec : delayedtempltv ] and , again , use extrapolation for temperatures outside of the range used to generate the models .",
    "we denote the resulting predictions as @xmath105 .",
    "in this section , we first summarize the dfs algorithm developed in @xcite and then describe two algorithm implementations , one inspired by dfs but not a direct implementation and one a direct implementation .",
    "dfs incorporates dmd , also developed in @xcite , into the fixed share algorithm originally developed in @xcite .",
    "the fixed share algorithm combines a set of predictions that are generated by independent experts , e.g. , models , into an estimate of the system parameter using the experts historical accuracy with respect to observations of the system .",
    "dmd extends the traditional online learning framework by incorporating dynamic models , enabling the estimation of time - varying system parameters ( or states ) .",
    "dfs uses dmd , applied independently to each of the models , as the experts within the fixed share algorithm .",
    "the objective of dfs is to form an estimate @xmath106 of the dynamic system parameter @xmath107 at each discrete time - step @xmath24 where @xmath108 is a bounded , closed , convex feasible set .",
    "the underlying system produces observations , i.e. , measurements , @xmath109 at each time - step after the prediction has been formed , where @xmath110 is the domain of the measurements . from a control systems perspective , this is equivalent to a state estimation problem where @xmath111 is the system state .",
    "dfs utilizes a set of @xmath112 models defined as @xmath113 to generate the estimate @xmath114 . to do this",
    ", dfs applies the dmd algorithm to each model , forming predictions @xmath115 for each @xmath116 .",
    "dmd is executed in two steps ( similar to a discrete - time kalman filter ) : 1 ) an observation - based update incorporates the new measurement into the parameter prediction , and 2 ) a model - based update advances the parameter prediction to the next time - step .",
    "dfs then uses the fixed share algorithm to form the estimate @xmath117 as a weighted combination of the individual model s dmd - based predictions .",
    "a weighting algorithm computes the weights based on each model s historical accuracy with respect to the observations @xmath0 , and models that perform poorly have less influence in the overall estimate .",
    "the dfs algorithm is @xcite @xmath118 for each @xmath116 , and @xmath119 where each term is defined below .",
    "dmd is applied to each model in and to form the expert predictions , where is a convex program that constructs the measurement - based update to the previous prediction and is the model - based advancement of the adjusted prediction .",
    "the fixed share algorithm consists of and , where computes the weights and computes the estimate as a weighted combination of the individual experts estimates .",
    "we note that the fixed share algorithm s updates are independent of the dynamics and only use the experts predictions and their resulting losses . in",
    ", we minimize over the variable @xmath120 , @xmath121 is a step - size parameter , and @xmath122 is the standard dot product .",
    "the value @xmath123 is a subgradient of the convex loss function @xmath124 .",
    "the loss function @xmath125 penalizes the error between the predicted and observed values @xmath0 using a known , possibly time - varying , function @xmath126 that maps @xmath111 to an observation , i.e. , @xmath127 , to form predictions of the measurements . an example loss function is @xmath128 where the matrix @xmath129 is @xmath130 . in , the function @xmath131 applies model @xmath88 to advance the adjusted estimate @xmath132 in time , and each @xmath131 can have arbitrary form , e.g. , be a nonlinear function , and can have time - varying model parameters . in , the weight associated with model @xmath88 at time - step @xmath24 is @xmath133 , @xmath134 dictates the amount of weight that is shared amongst models , and @xmath135 is a user - defined parameter that influences switching speed .",
    "the weight for model @xmath88 is based on the loss of each model and the total loss of all models .    in",
    ", the term @xmath136 captures the alignment of the variable @xmath120 with the positive gradient of @xmath137 . to minimize this term alone , we would choose @xmath120 to be exactly aligned with the negative gradient direction .",
    "the term @xmath138 is a bregman divergence that penalizes the deviation between the new variable @xmath120 and the old variable @xmath114 .",
    "note that , for simplicity , we have excluded regularization within , which dmd readily incorporates @xcite .      in this section , we describe two algorithm implementations to update the expert predictions .",
    "first , we describe an implementation that uses the concept of dmd , i.e. , model - based predictions and measurement - based update to those predictions , but it is not a direct implementation of dmd .",
    "this method treats the models as black boxes and adjusts only their output , i.e. , the ol and ac demand predictions , using the measured and predicted total feeder demand .",
    "second , we describe a direct implementation of dmd . in contrast to the previous method , this method updates the state @xmath139 of the lti and ltv ac demand models . in the following ,",
    "the total demand model is @xmath140 where @xmath141 is an ac demand model and @xmath142 is an ol demand model .",
    "their respective predictions are @xmath143 and @xmath144 .",
    "we develop a variation of the dmd algorithm that allows us to include a diverse set of models .",
    "the models used within this paper have different underlying parameters , dynamic variables , and/or structures , which makes it difficult to define a common @xmath111 across all of the models used . as a result",
    ", we desire a formulation that is similar to dmd , but that allows us to adjust the demand predictions directly , rather than applying the updates to quantities influencing the demand predictions .",
    "to achieve this , we modify the dmd formulation to @xmath145 the ac and ol demand models generate their predictions independently from one another , and so can be rewritten as @xmath146 the convex program is now used to update a value @xmath147 that accumulates the deviation between the predicted and actual measurements .",
    "the model - based update computes an open - loop prediction @xmath148 , meaning that the measurements do not influence @xmath148 .",
    "the measurement - based updates and model - based , open - loop predictions are combined in .",
    "in contrast , dmd uses a closed - loop model - based update where the convex program adjusts the parameter estimate to @xmath149 , which is used to compute the next parameter estimate @xmath150 .    in this method , we define @xmath111 as the ac and ol demand , i.e. , @xmath151 .",
    "the mapping from the parameter to the measurement is @xmath152 where the matrix @xmath153 . while the mapping and matrix are time - invariant , they may be time - varying in section  [ sec : dmd2 ] , and so we use the more general notation .",
    "we choose the loss function as @xmath154 and the divergence as @xmath155 .",
    "we can then write in closed form as @xmath156      this method applies only to dynamic system models with dynamic states , i.e. , in this paper the lti or ltv ac demand models , which have dynamic states @xmath139 .",
    "we set @xmath157 , where @xmath139 is @xmath158 in , @xmath159 in , or @xmath160 in an update equation similar to .",
    "the mapping from the parameter to the measurement is then @xmath161 where @xmath162 is the output matrix of the lti or ltv ac demand model , i.e. , @xmath82 , @xmath99 , or @xmath163 .",
    "defining the system parameter in this way allows us to update the dynamic states of the lti and ltv ac demand models , rather than just the output as in update method 1 .",
    "the model - based update is then @xmath164 where we update the ac demand model using the adjusted parameter estimate , as in dmd .",
    "because the ol demand models do not include dynamic states , we continue to update their estimates according to update method 1 .",
    "we again use as the measurement - based update .",
    "in this section , we investigate the performance of dfs on our problem .",
    "first , we define the scenarios , describe the benchmark , summarize the data and parameters settings , and define the performance metric used in the case studies . following this , we present the results .",
    "we construct a number of scenarios using three sets of models and the two implementation methods .",
    "we define the three sets of models for use within dfs :    1 .",
    "@xmath165 , all of the models developed in section  [ sec : models ] , i.e. , every combination of ac and ol demand models from the ac demand model set @xmath166 and the ol demand model set @xmath167 ; 2 .",
    "@xmath168 , a reduced set that excludes the lti models , which are not accurate over the course of the day , i.e. , every combination of ac and ol demand models from the reduced ac demand model set @xmath169 and @xmath170 ; and 3 .",
    "@xmath171 , a further reduced set that excludes the mlr ac demand model , which can not be used in a kalman filter , i.e. , every combination of ac and ol demand models from the further reduced ac demand model set @xmath172 and @xmath170 .",
    "since the dmd implementation , update method 2 , is only applicable to the lti and ltv ac demand models , simulations corresponding to update method 2 apply the method to all applicable model combinations and otherwise use update method 1 , e.g. , if the ac demand model is the mlr model .",
    "a set of kalman filters are used to establish a benchmark for the dfs algorithm .",
    "a kalman filter uses measurements , an assumed system model , and known statistics of random variables , which are assumed to be zero - mean and normally distributed , to estimate the value of dynamic system parameters , i.e. , the system state , at each time - step .",
    "additional background on kalman filters can be found in @xcite .",
    "we use the ltv ac demand models within the kalman filters . for each ltv model , the covariance of the process noise , which includes modeling error ,",
    "is computed using a historical week of data , where the true state is generated using the measured ac demand and the ltv model s matrices .",
    "the kalman filter estimates the state of the ac demand model , i.e. , @xmath173 where @xmath139 is @xmath159 or @xmath160 , using output pseudo - measurements of the ac demand @xmath174 .",
    "we assume that @xmath0 is noise - free , but @xmath175 is noisy due to ol demand prediction error .",
    "the covariance of the measurement errors depends on the ol demand model used , and is computed for each model using a week of historical errors .",
    "we simulate one kalman filter for each model pair in the set @xmath171 .",
    "we compare the performance of the dfs algorithm to that of the best kalman filter ( bkf ) , which takes the lowest _ ex post _ rmse value achieved by a kalman filter within the set @xmath171 , and that of the average kalman filter ( akf ) , which is the average rmse value across all of the kalman filters .",
    "we test the methods on data from august 3 - 5 , 10 - 14 , 17 , and 18 , where the commercial data is from 2009 and the residential data is from 2015 .",
    "note that the dates in both years pertain to the same days of the week .",
    "we excluded weekends and days on which demand response actions were taken by the commercial buildings .",
    "the household and commercial demand data for august 3 were used to determine the set of houses included on the feeder , and this was set was used to construct all other demand signals as described in section  [ sec : constructionofplantsignals ] .    to generate the mlr regression models of the ac and ol demand , we use data from june 24 to august 2 , 2015 and commercial data from june 24 to august 2 , 2009 .",
    "the lti and ltv models of the ac demand were constructed using device - level data from individual air conditioners from may 2 to august 2 , 2015 .",
    "the tod regression models and kalman filter covariance matrices were generated using data from the week preceding august 3 .",
    "table  [ table : dmdparams ] summarizes the settings of @xmath176 , and we set @xmath177 across all simulations .",
    "parameter @xmath178 dictates the amount of weight shared amongst the models , where high values , i.e. , near 1 , force the dfs algorithm to generate estimates that are close to an average of the predictions of all models . by using a low value , i.e. , near 0",
    ", a single model can dominate the estimate , if one model proves to be more accurate than the rest .",
    "parameter @xmath179 was roughly tuned using the simulation for august 3 .",
    "rather than tuning to optimize the rmse for the day , the parameter was tuned to achieve qualitative characteristics of fast switching between models without over - fitting , i.e. , allowing the weights to become erratic due to noise .",
    "furthermore , the optimal @xmath179 for a given day will generally not be optimal across all days , and so tuning to achieve the desired qualitative characteristics is appropriate .",
    "the @xmath176 parameter was also tuned in this manner .    .parameter",
    "@xmath176 used in the dfs scenarios [ cols=\">,^,^,^,^,^,^ \" , ]     the scenarios using @xmath165 have significantly higher ac demand rmses than the simulations using @xmath168 as well as the bkf and akf simulations .",
    "each of the lti models may be accurate for a portion of the day when the ac demand is near the steady - state demand of the particular model .",
    "however , as the ac demand changes due to changes in the outdoor temperature , a given lti model will become highly inaccurate .",
    "the dfs algorithm takes time to shift weight from the inaccurate model that was heavily weighted to the new model , and this results in increased rmse . eliminating these `` bad models '' , by using @xmath168 rather than @xmath165 ,",
    "eliminates this issue .    the scenarios using @xmath168 generally do better , in terms of ac demand rmse , than akf and worse than bkf .",
    "on some simulated days dfs also outperforms bkf , as was shown in fig .",
    "[ fig : resultstimeseries ] . within this set of simulations ,",
    "update method 2 results in higher ac demand rmse than update method 1 .",
    "the increased rmse in update method 2 versus update method 1 can be explained due to the usage of only two discrete states within the ltv models . specifically ,",
    "the states reach their steady - state values rapidly , and so the measurement - based updates to the state do not persist for very long , whereas the measurement - based updates to the output used in update method 1 do . using ltv models with more discrete states",
    "may allow update method 2 to achieve better rmse , but this would complicate system identification .",
    "finally , the scenarios with @xmath171 result in larger ac demand rmse than those with @xmath168 . the mlr model of the ac demand is often weighted heavily in the @xmath168 simulations , especially for update method 2 . given this",
    ", it makes sense that excluding this model would result in increased rmse .",
    "in this paper , we applied an online learning algorithm , dfs , which uses dmd together with the fixed share algorithm , to estimate the real - time ac demand on a distribution feeder using feeder demand measurements , weather data , and system models .",
    "two implementations of algorithms based on dmd were developed and compared via simulations .",
    "our results showed that dfs can effectively estimate the real - time ac demand on a feeder .",
    "dfs achieved lower ac demand rmse than the average across a set of kalman filters . when selecting the most accurate kalman filter _",
    "ex post _ , dfs generally results in larger rmse .",
    "however , dfs learns the most accurate model , or combination of models , in real - time whereas the best kalman filter can only be chosen after the simulation .",
    "the performance of dfs depends heavily on the inclusion of models within its set . including models that are inaccurate for majority of the day degraded the algorithm performance as did removing models that were frequently weighted heavily",
    ".    future work will develop improved ac demand models , investigate the relationship between the dmd and kalman filter algorithms , and incorporate active control into the problem framework . including more than two states into the ltv models",
    "may allow these models to be more effective , but will complicate system identification .",
    "dmd and kalman filtering have structural similarities and further establishing these similarities will help connect the online learning and state estimation fields . finally , taking advantage of the ability to manipulate the ac demand through active control of demand response resources can enable better disaggregation .",
    "we thank the pg&e company for the commercial building electric load data ."
  ],
  "abstract_text": [
    "<S> though distribution system operators have been adding more sensors to their networks , they still often lack an accurate real - time picture of the behavior of distributed energy resources such as demand responsive electric loads and residential solar generation . </S>",
    "<S> such information could improve system reliability , economic efficiency , and environmental impact . rather than installing additional , costly sensing and communication infrastructure to obtain additional real - time information </S>",
    "<S> , it may be possible to use existing sensing capabilities and leverage knowledge about the system to reduce the need for new infrastructure .    in this paper , we disaggregate a distribution feeder s demand measurements into two components : 1 ) the demand of a population of air conditioners , and 2 ) the demand of the remaining loads connected to the feeder . </S>",
    "<S> we use an online learning algorithm , dynamic fixed share ( dfs ) , that uses the real - time distribution feeder measurements as well as models generated from historical building- and device - level data . </S>",
    "<S> we develop two implementations of the algorithm and conduct simulations using real demand data from households and commercial buildings to investigate the effectiveness of the algorithm . </S>",
    "<S> case studies demonstrate that dfs can effectively perform online disaggregation and the choice and construction of models included in the algorithm affects its accuracy , which is comparable to that of a set of kalman filters .    </S>",
    "<S> ledva : real - time energy disaggregation of feeder - level active demand using online learning    online learning , machine learning , energy disaggregation , output feedback , real - time filtering </S>"
  ]
}
{
  "article_text": [
    "image and video compression can be performed lossless or lossy . in lossless compression ,",
    "the reconstructed image or video data is identical to the original visual data , and in lossy compression , some amount of degradation in the reconstruction is allowed to achieve higher compression .",
    "the emerging video coding standard hevc @xcite or the widely deployed standard h.264/avc @xcite support both lossy and lossless compression .",
    "lossy compression in these standards is achieved with a block - based approach .",
    "first , a block of pixels are predicted using pixels from a previously coded frame ( inter prediction ) or using pixels from previously coded regions of the current frame ( intra prediction ) .",
    "the prediction is in many cases not accurate and as the next step , the block of prediction errors are computed and transformed to remove any remaining spatial redundancy .",
    "finally , the transform coefficients are quantized and entropy coded together with other relevant side information such as prediction modes .    it is desirable to support lossless compression using this lossy coding architecture with as little modification as possible so that encoders / decoders can also support lossless compression without any significant complexity increase .",
    "the simplest approach is to just skip the transform and quantization steps , and directly entropy code the block of prediction errors .",
    "this approach is indeed used in hevc version 1 @xcite .",
    "while this is a simple and low - complexity approach , it is well known that in many regions of images / videos , residuals of block - based prediction are not sufficiently decorrelated and directly entropy coding these prediction errors is inefficient for compression . hence",
    ", a large number of approaches have been proposed to improve the compression performance .",
    "the majority of the proposed approaches can be grouped into two groups .",
    "approaches in the first group perform the standard block - based prediction and then apply differential pulse code modulation ( dpcm ) on the prediction error block to further decorrelate it . the output",
    "is then fed to the entropy coder .",
    "the dpcm is a pixel - by - pixel prediction algorithm and many variations of it have been proposed @xcite . in the second group of approaches , which are applied to only lossless intra coding , the block - based intra prediction step is replaced directly with a pixel - by - pixel prediction approach @xcite .",
    "these approaches are discussed in more detail in the next section .",
    "this paper explores an alternative approach for lossless compression within hevc . in this approach ,",
    "the residuals of block - based prediction are processed with integer - to - integer ( i2i ) transforms .",
    "integer - to - integer transforms map integers to integers .",
    "however , unlike the integer transforms used in hevc for lossy coding , they do not increase the dynamic range at the output and can therefore be easily employed in lossless coding .",
    "this paper uses a computationally efficient i2i approximation of the 4-point dct to process both intra and inter prediction residual blocks .",
    "while there are many papers that employ i2i transforms in lossless or lossless - to - lossy image compression @xcite , we could not come across a work which explores i2i transforms for lossless compression of prediction residuals within video coding standards h.264/avc or hevc .    the remainder of the paper is organized as follows . in section [ sec : pr ] , a brief overview of related previous research on lossless video compression is provided .",
    "section [ sec : i2i ] discusses i2i transforms and section [ sec : exp ] presents experimental results of using an i2i transform within hevc for lossless compression .",
    "finally , section [ sec : con ] concludes the paper .",
    "methods based on residual differential pulse code modulation ( rdpcm ) first perform the default block - based prediction and then process the prediction error block further with a dpcm method , i.e. a pixel - by - pixel prediction method .",
    "the literature contains many variations of this general rdpcm approach @xcite .",
    "one of the earliest of such methods was proposed in @xcite for lossless intra coding in h.264/avc . here , first the block - based spatial prediction is performed , and then a simple pixel - by - pixel differencing operation is applied on the residual pixels in only horizontal and vertical intra prediction modes . in horizontal mode , from each residual pixel , its left neighbor is subtracted and the result is the rdpcm pixel of the block .",
    "similar differencing is performed along the vertical direction in the vertical intra mode .",
    "note that the residuals of other angular modes are not processed in @xcite .    the same rdpcm method as in @xcite is now included in hevc version 2 @xcite for intra and inter coding . in inter coding , rdpcm",
    "is applied either along the horizontal or vertical direction or not at all , and a flag is coded in each transform unit ( tu ) to indicate if it is applied , and if so , another flag is coded to indicate the direction . in intra coding",
    ", rdpcm is applied only when prediction mode is either horizontal or vertical and no flag is coded since the rdpcm direction is inferred from the intra prediction mode .",
    "methods based on pixel - by - pixel prediction are applied to only intra coding in lossless compression .",
    "since the transform is skipped in lossless coding , a pixel - by - pixel intra prediction approach can now be used instead of a block - based approach for more efficient prediction .",
    "the literature contains many such methods @xcite . while these methods can provide the best compression performance @xcite",
    ", their distinguishing property can also be a drawback : their pixel - based nature is not congruent with the block - based architecture of video codecs and introduces undesired pixel - based dependencies in the prediction architecture @xcite .      in lossy coding , transform coefficients of prediction residuals are entropy coded , while in lossless coding , the prediction residuals are entropy coded . considering the difference of the statistics of quantized transform coefficients and prediction residuals , several modifications in entropy coding",
    "were proposed for lossless coding @xcite .",
    "the hevc version 2 includes reversing the scan order of coefficients , using a dedicated context model for the significance map and other tools @xcite .",
    "integer - to - integer ( i2i ) transforms map integer inputs to integer outputs and are invertible .",
    "however , unlike the integer transforms in hevc @xcite , which also map integers to integers , they do not increase the dynamic range at the output .",
    "therefore they can be easily used in lossless compression .    a significant amount of work on i2i transforms",
    "is done to develop i2i approximations of the discrete cosine transform ( dct ) .",
    "there are a number of ways to develop i2i dcts and in all of them the common approach is to decompose the dct into elementary operations @xcite .",
    "each elementary operation is then modified to map integers to integers through rounding operations .",
    "perhaps the most popular method , due its to lower computational complexity , is to use the factorization of the dct into plane rotations and butterfly structures @xcite .",
    "this is also the method that is used in this paper .",
    "two well - known factorizations of the dct into plane rotations and butterflies are the chen s and loeffler s factorizations @xcite .",
    "loeffler s 4-point dct factorization is shown in figure [ fig : loefffact4 ] .",
    "it contains three butterflies and one plane rotation .",
    "note that the output samples in figure [ fig : loefffact4 ] need to be scaled by @xmath0 to obtain an orthogonal dct .",
    "the butterfly structure shown in figure [ fig : loefffact4 ] maps integers to integers because the output samples are the sum and difference of the inputs .",
    "it is also easily invertible by itself and dividing the output samples by 2 .",
    "the plane rotation in figure [ fig : loefffact4 ] can be modified as follows so that it also maps integers to integers .",
    "a plane rotation can be represented with the 2x2 matrix below and it can be decomposed into three lifting steps as follows : @xmath1 =   \\left [    \\begin{array } { c c }       1 & p",
    "\\\\       0 & 1     \\end{array } \\right ] \\left [    \\begin{array } { c c }       1 & 0 \\\\       u & 1     \\end{array } \\right ]    \\left [    \\begin{array } { c c }       1 & p \\\\       0 & 1     \\end{array } \\right ] .",
    "\\label{eq : rot}\\ ] ] here , @xmath2 and @xmath3 .",
    "a graphical representation of the decomposition is shown in figure [ fig : rotlif]-a .",
    "\\(a ) forward rotation        \\(b ) inverse rotation    each lifting step can be inverted with another lifting step : @xmath4^{-1 } = \\left [    \\begin{array } { c c }       1 & -p \\\\       0 & 1     \\end{array }",
    "\\right ]    , \\left [    \\begin{array } { c c }       1 & 0 \\\\       u & 1     \\end{array } \\right]^{-1 } = \\left [    \\begin{array } { c c }       1 & 0 \\\\       -u & 1     \\end{array } \\right ] .",
    "\\label{eq : lif}\\ ] ] in other words , each lifting step is inverted by subtracting out what was added in the forward lifting step ( see figure [ fig : rotlif]-b ) .",
    "notice that each lifting step is still invertible even if the multiplication of the input samples with floating point @xmath5 or @xmath6 are rounded to integers , as long as the same rounding operation is applied in both forward and inverse lifting steps .",
    "this implies that each lifting step can map integers to integers and is easily invertible .",
    "notice that each lifting step in the above factorization requires floating point multiplications since @xmath5 and @xmath6 are in general not integers . to avoid floating point multiplications ,",
    "the lifting factors @xmath5 and @xmath6 can be approximated with with rationals of the form @xmath7 ( @xmath8 and @xmath9 are integers ) , which can be implemented with only addition and bitshift operations .",
    "a plane rotation can be represented by three lifting steps as in figure [ fig : rotlif ] or by two lifting steps and two scaling factors as shown in figure [ fig : rotlif2 ] @xcite .",
    "using two lifting steps per plane rotation reduces the complexity .",
    "the two scaling factors can be combined with other scaling factors at the output , creating a scaled i2i dct .",
    "the scaling factors at the output can be absorbed into the quantization stage in lossy coding . in lossless coding , all scaling factors can be omitted .",
    "however , care is needed when omitting scaling factors since for some output samples , the dynamic range may become too high when scaling factors are omitted .",
    "for example , in figure [ fig : loefffact4 ] , the dc output sample becomes the sum off all input samples when scaling factors are omitted , however , it may be preferable that it is the average of all input samples .",
    "this can improve the entropy coding performance .",
    "hence it is common in lossless coding to replace butterflies of figure [ fig : loefffact4 ] with lifting steps as shown in figure [ fig : bindct4 ] @xcite .",
    "the @xmath5 and @xmath6 scaling factors in figure [ fig : bindct4 ] can be chosen as rationals of the form @xmath7 ( @xmath8 and @xmath9 are integers ) , to be implemented with only addition and bitshift operations .",
    "note that bitshift operation implicitly includes a rounding operation , which is necessary for mapping integers to integers , as discussed above . @xmath8 and",
    "@xmath9 can be chosen depending on the desired accuracy to approximate the dct and the desired level of computational complexity .",
    "this paper uses the i2i dct approximation shown in figure [ fig : bindct4 ] to explore i2i transforms in lossless coding within hevc .",
    "the scaling factors @xmath5 and @xmath6 are chosen as @xmath10 and @xmath11 .",
    "one reason for this choice is that it allows implementing the i2i dct with only addition and bitshift operations .",
    "another reason is that , since the i2i transform is used on prediction residuals , approximating the dct very well is not necessary since prediction residuals have typically smaller correlation than image pixels .",
    "the i2i dct approximation in figure [ fig : bindct4 ] is used along first the horizontal and then the vertical direction to obtain an i2i 2d dct .",
    "the i2i 2d dct is used in lossless compression to transform both intra and inter prediction residuals of luma and chroma pictures in only 4x4 transform units ( tu ) .",
    "the transform coefficients are directly fed to the entropy coder without quantization . in larger",
    "tus , the default hevc processing is used . notice that in lossless coding , the encoder choses 4x4 tus much more frequently ( even at large resolutions ) than other tus .",
    "exploring i2i transforms in larger tus is part of our plans for future work .",
    "the explored i2i transform approach is implemented into the hevc version 2 range extensions ( rext ) reference software ( hm-15.0+rext-8.1 ) @xcite to provide experimental results for the i2i transform approach .",
    "the following systems are derived from the reference software and compared in terms of lossless compression performance and complexity :    * hevcv1 * hevcv2 * i2i * i2i+rdpcm .",
    "the hevcv1 system represents hevc version 1 , which just skips transform and quantization for lossless coding , as discussed in section [ sec : intro ] .",
    "the hevcv2 system represents hevc version 2 , and includes all available rext tools , such as rdpcm , reversing the scan order , a dedicated context model for the significance map and other tools @xcite as discussed in sections [ ssec : rdpcm ] and [ ssec : entropy ] .",
    "the remaining two systems , i2i and i2i+rdpcm employ the i2i transform discussed in section [ ssec : i2ihevc ] .",
    "the i2i transform is used in intra and inter coded blocks in only 4x4 transform units ( tu ) . in larger tus ,",
    "the default processing of hevc version 2 is used . in the i2i system ,",
    "the rdpcm system of the reference software is disabled in 4x4 tus , and is replaced with the 4x4 i2i transform . in intra coding , the i2i transform is applied to the residual tu of all intra prediction modes . in inter coding ,",
    "the i2i transform is either applied or not applied on the prediction residual tu , and is indicated to the decoder with a flag , similar to hevc version 2 , as discussed in section [ ssec : rdpcm ] .    in the i2i+rdpcm system ,",
    "the i2i transform and rdpcm methods are combined in intra coding . in other words , in intra coding of 4x4 tus , the rdpcm method of hevc version 2 is used if the intra prediction mode is equal to horizontal or vertical mode , and the i2i transform method is used for other intra prediction modes .",
    "inter coding remains the same as in the i2i system .",
    "table [ tb : systems ] summarizes the processing in all systems .",
    ".processing of 4x4 block prediction residuals prior to entropy coding in each system . [ cols=\"<,^,^,^,^,^\",options=\"header \" , ]     consider first the results for all - intra - main coding settings .",
    "hevcv2 , i2i , and i2i+rdpcm systems achieve @xmath12 , @xmath12 and @xmath13 percent overall average bitrate reduction over hevcv1 , respectively . for class a sequences , which include sequences with the largest resolution ( 2560x1600 )",
    ", systems employing i2i transforms ( i2i and i2i+rdpcm systems ) achieve significantly larger bitrate reductions than the hevcv2 system .",
    "for the other classes , the i2i+rdpcm system is typically slightly better than the hevcv2 system , which in turn is typically slightly better than the i2i system .",
    "we note that the results for all - intra - main coding settings may look counter - intuitive at first , since the i2i transforms are applied at only the smallest 4x4 tus but the largest coding gains by i2i or i2i+rdpcm systems are achieved in class a sequences , which have the largest resolution sequences . however , while the tendency of the encoder to choose smaller block - sizes ( i.e. 4x4 tus ) less often at higher resolutions than in lower resolutions is significant for lossy coding ( due to rd - optimized mode decisions ) , it becomes less significant at high bitrates or lossless coding .",
    "this is due to following reasons .",
    "first , since there is no quantization in lossless coding , rdpcm or i2i transforms can not obtain many zero - coefficients like in lossy coding with quantization , and thus prediction becomes very important in lossless coding , and prediction is most effective at the smallest available block - size .",
    "furthermore , any overhead bitrate due to using smallest block - size pus or tus becomes negligible in lossless coding compared to the bitrate of coding the actual residual . in summary , even at higher resolutions , the encoder chooses 4x4 blocks for prediction or transformation very often in lossless coding .",
    "the actual reason behind the better coding gains with i2i transforms at higher resolutions can be explained by the statistical characteristics of the residuals . in larger resolutions ,",
    "a similar sized image or residual block ( e.g. 4x4 block ) is more likely to have higher spatial correlation than in smaller resolutions . for a stronger correlated signal",
    ", a transform is expected to provide larger coding gains than a dpcm technique . for less correlated signals ,",
    "the coding gain difference is expected to diminish , and if the used transform is an i2i one , its coding gain can drop below that of dpcm .",
    "rdpcm is a very effective method for horizontal and vertical intra modes , because for these modes , block - based prediction followed by rdpcm becomes overall equivalent to pixel - by - pixel prediction , which is known to be a very effective method @xcite .",
    "however , in hevc , rdpcm is used to process only residuals of horizontal and vertical intra modes , while the residuals of other intra modes are not processed at all .",
    "hence , as can be seen from the all - intra - main results in table [ tb : res ] , depending on the image / video characteristics , the i2i transform applied to all intra modes ( i2i system ) can obtain larger coding gains , or the rdpcm method applied to only horizontal and vertical modes ( hevcv2 system ) can obtain larger coding gains .",
    "however , when i2i transform and rdpcm methods are combined ( i2i+rdpcm system ) , then the best coding gain is achieved almost exclusively as shown in table [ tb : res ] .",
    "consider next the results for low - delay - main and random - access - main coding settings . in both of these settings , hevcv2 , i2i , and i2i+rdpcm systems",
    "achieve @xmath14 , @xmath14 and @xmath15 percent overall average bitrate reduction over hevcv1 , respectively . again , for class a sequences , systems employing i2i transforms ( i2i and i2i+rdpcm systems ) achieve significantly larger bitrate reductions than the hevcv2 system . for the other classes ,",
    "all three systems achieve bitrate reductions that are typically close to each other .",
    "notice that the residuals of inter prediction are typically much less correlated than those of intra prediction , and thus the coding gains achievable by rdpcm or i2i transform methods are much lower for inter coding than those of intra coding .",
    "the average encoding and decoding times are also shown in table [ tb : res ] .",
    "they are compared to those of hevcv1 in percentages .",
    "the hevcv2 , i2i , and i2i+rdpcm systems achieve up to @xmath16 lower encoding or decoding times than hevcv1 , despite their additional processing of the residuals , mainly due to their lower bitrates which allow the complex entropy coding / decoding to finish faster .",
    "this paper explored an alternative approach for lossless video coding based on integer - to - integer ( i2i ) transforms within hevc .",
    "i2i transforms map integers to integers without increasing the dynamic range at the output and were used in this paper to transform intra and inter prediction residuals of luma and chroma pictures in only 4x4 transform units ( tu ) .",
    "experimental results showed competitive performance with respect to other major methods , such as rdpcm , in terms of both compression performance and complexity .",
    "several directions for future research are possible , such as exploring use of i2i transforms also in larger tus and adaptively turning on / off the i2i transforms in each tu ."
  ],
  "abstract_text": [
    "<S> many approaches have been proposed to support lossless coding within video coding standards that are primarily designed for lossy coding . </S>",
    "<S> the simplest approach is to just skip transform and quantization and directly entropy code the prediction residual , which is used in hevc version 1 . </S>",
    "<S> however , this simple approach is inefficient for compression . </S>",
    "<S> more efficient approaches include processing the residual with dpcm prior to entropy coding . </S>",
    "<S> this paper explores an alternative approach based on processing the residual with integer - to - integer ( i2i ) transforms . </S>",
    "<S> i2i transforms map integers to integers , however , unlike the integer transforms used in hevc for lossy coding , they do not increase the dynamic range at the output and can be used in lossless coding . </S>",
    "<S> experiments with the hevc reference software show competitive results </S>",
    "<S> .    image coding , video coding , discrete cosine transforms , lossless coding , hevc </S>"
  ]
}
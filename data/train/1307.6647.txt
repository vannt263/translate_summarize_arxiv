{
  "article_text": [
    "in the vicinity of a continuous phase transition , particle or spin systems of statistical mechanics develop extended spatial correlations signaling the onset of long - range translational order through spontaneous symmetry breaking .",
    "it has been realized early on that these phenomena suggest a description of the ordering in geometrical terms , using analogies to the percolation transition @xcite . while fisher s droplet model initially considered simple clusters of like spins ( geometrical clusters ) as the relevant quantities ,",
    "it was only gradually realized in the 1980s that the relevant collective degrees of freedom , or `` physical clusters '' , are indeed of a different nature , and they can be constructed by breaking the geometric clusters up following a suitable stochastic prescription activating bonds within clusters with probability @xmath0 @xcite .",
    "initially , this breakup was only applied to one spin species ( of the ising model , say ) , leading to inconsistencies in the symmetric high - temperature phase .",
    "it was in an independent line of thought by fortuin and kasteleyn @xcite that an equivalence of the partition function of the @xmath1-state potts model @xcite to a correlated bond - percolation problem known as the random - cluster model with partition function @xmath2 was established . here",
    ", @xmath3 denotes the set of @xmath4 activated edges on a lattice graph @xmath5 , resulting in @xmath6 connected components , and the bond weight @xmath7 .",
    "these results led hu @xcite to generalize the above bond activation probability to _ all _ geometric clusters irrespective of their orientation . as a consequence , the right choice of physical droplets is now well understood , and the equivalence of their percolation properties and thermal quantities has been explicitly checked @xcite .",
    "the growth without bounds of static correlations in critical systems is accompanied in the time domain by a divergence of relaxation times known as _",
    "critical slowing down _",
    "@xcite . while this is a physical phenomenon connected , for instance , to the effect of critical opalescence , it is also of direct relevance for the pseudo - dynamics in monte carlo simulations of near - critical systems .",
    "as this leads to an asymptotic inefficiency of markov chain monte carlo in producing independent samples , an improved understanding of spatial correlations was hoped to translate into suitable non - local updating procedures allowing to precisely study near - critical systems .",
    "initial attempts in this direction , such as variants of the multi - grid approach @xcite , were based on renormalization group ideas , and turned out to be only moderately successful . the first monte carlo algorithm based on the concept of physical clusters",
    "was suggested by sweeny in 1983 @xcite .",
    "he considered a direct simulation of the bond variables of eq .",
    ", randomly suggesting state switches from active to inactive and vice versa . as the relevant boltzmann weight depends on the number @xmath6 of connected components resulting from a given bond configuration , calculating the acceptance probability of the bond moves needs up - to - date information about cluster connectivity .",
    "hence , a single update might require the expensive traversal of large ( possibly spanning ) clusters , potentially destroying the computational advantage of an accelerated decorrelation of configurations through _ computational _ critical slowing down @xcite .",
    "an alternative suggestion made by swendsen and wang @xcite works directly on the spin configuration , freezing bonds between like spins with probability @xmath8 and independently flipping the resulting spin clusters .",
    "instead of working in the graph language alone , this series of alternating updates of spin and bond variables corresponds to a markov chain in an augmented state space @xcite .",
    "the resulting algorithm ( with its many variants including , for instance , the single - cluster version @xcite ) is rather straightforward to implement and turns out to be very efficient in beating critical slowing down , reducing the dynamical critical exponent , e.g. , of the 2d ising model from @xmath9 for local spin flips to @xmath10 @xcite . owing to this success of the swendsen - wang algorithm and related techniques as well as the delicacies of maintaining up - to - date connectivity information , sweeny s approach was not used by many researchers .",
    "also , its reduction of critical slowing down was not precisely investigated until , about 20 years after the original work , it was claimed that a variant of the single - bond algorithm was completely free of critical slowing down @xcite . although this was later shown to be incorrect @xcite , it was not until recently that its dynamical critical behavior was investigated in more detail @xcite , revealing the surprising feature of _ critical speeding up _ ,",
    "i.e.  @xmath11 , for certain ranges of @xmath1 alongside generally smaller dynamical critical exponents than those found for the swendsen - wang dynamics .    besides it being a very elegant and direct sampling procedure for the weights of eq .",
    ", another favorable feature of sweeny s approach is its general applicability to arbitrary values of @xmath1 : while the potts model is only defined for integer @xmath12 , @xmath13 , @xmath14 , @xmath15 , the random cluster model of eq .",
    "is meaningful for any real value @xmath16 , serving as an analytic continuation of the potts model to real @xmath1 @xcite .",
    "the swendsen - wang algorithm , originally working with a joint spin and bond representation meaningful only for integer @xmath1 , can be generalized to non - integer @xmath17 @xcite .",
    "the bond algorithm , however , is the only approach for @xmath18 .",
    "this fact has prompted a number of researchers to use sweeny s approach to probe the @xmath19 regime , for instance to study fractal properties of the cluster structure @xcite .",
    "the main obstacle to a more widespread adoption , however , has been the problem of expensive connectivity checks : inserting an edge might join two previously unconnected clusters , deleting a bond can lead to cluster fragmentation .",
    "a naive approach without additional data structures appears to require the tracing out of one ( or two ) randomly chosen cluster(s ) to check for connectivity . as the average cluster size scales proportional to @xmath20 @xcite and @xmath21 for the random - cluster model ,",
    "the cost of a full lattice sweep is almost squared as compared to single spin flips or swendsen - wang . in his paper , sweeny had suggested a specific solution for the case of two - dimensional lattices , replacing the traversal of clusters with a tracking of boundary loops on the medial lattice @xcite .",
    "irrespective of space dimension , a pair of interleaved breadth - first searches starting from both ends of the bond currently examined can also dramatically improve the situation @xcite .",
    "while these connectivity algorithms still exhibit power - law scaling with the size of the system , fully dynamic connectivity algorithms , where edge insertions and removals can be performed in amortized times at most ( poly)_logarithmic _ in the system size , are known in computer science @xcite . here",
    ", we compare a number of different implementations of sweeny s algorithm for simulations of the random - cluster model to each other as well as to the chayes - machta - swendsen - wang dynamics @xcite .",
    "the combination of a polylogarithmic dynamic connectivity algorithm and sweeny s single - bond approach is shown to be the more efficient way , asymptotically , to simulate the random - cluster model at criticality .",
    "the rest of the paper is organized as follows . in sec .",
    "[ sec : algorithms ] , we introduce sweeny s algorithm in more detail and describe the three different variants of connectivity checks implemented here : breadth - first search , union - and - find , and dynamic connectivities . section [ sec : results ] contains an in - depth comparison of the scaling of properties of these approaches as compared to the chayes - machta - swendsen - wang dynamics in terms of simulation as well as computer time for the case of simulations on the square lattice .",
    "finally , sec .",
    "[ sec : concl ] contains our conclusions .",
    "the random - cluster model ( rcm ) assigns weights to ( spanning ) sub - graph configurations @xmath3 , i.e. , subsets of activated edges and the complete set of vertices , of the underlying graph @xmath5 according to @xcite @xmath22 leading to the partition sum of eq .  .",
    "for integer values of the cluster weight @xmath1 , the partition function is identical @xcite to that of the @xmath1-state potts model with hamiltonian @xmath23 where @xmath24 is an edge in the graph @xmath5 , and @xmath25 . for the purposes of this study",
    ", we will restrict ourselves to graphs in two dimensions ( 2d ) , namely compact @xmath26 regions of the square lattice , applying periodic boundary conditions .",
    "for this case , the ordering transition of the potts model occurs at the coupling @xmath27 , corresponding to the critical bond weight @xmath28 in .",
    "this transition is continuous for @xmath29 and first - order for @xmath30 @xcite .",
    "starting from the results of fortuin and kasteleyn @xcite , sweeny suggested to directly sample bond configurations of the rcm according to the weight . for any sub - graph @xmath3 , the basic update operation",
    "is then given by the deletion of an occupied edge or the insertion of an unoccupied edge .",
    "according to eq .  , the corresponding transition probabilities depend on the changes @xmath31 of the number of active edges and @xmath32 of the number of connected components or clusters .",
    "while @xmath31 is trivially determined to equal @xmath33 for edge insertion and @xmath34 for edge removal , respectively , the change in cluster number depends on whether a chosen inactive edge is _ internal _ to one cluster ( @xmath35 ) or , instead , it is _ external _ and hence amalgamates two existing clusters if activated ( @xmath36 ) . likewise , removing an edge might lead to @xmath35 or @xmath37 , depending on whether an alternative path exists connecting the end points of the removed edge .",
    "the construction and implementation of data structures supporting the efficient calculation of @xmath32 constitutes the intricacy of sweeny s algorithm and the focus of the present work .",
    "importance sampling for the weight can be constructed along well - known lines , the most common choices being the heat - bath and metropolis schemes @xcite . in both cases ,",
    "a bond is randomly and uniformly selected from the graph and a `` flip '' of its occupation state from inactive to active or vice versa is proposed .",
    "the heat - bath acceptance ratio , used in the original approach of sweeny @xcite is then given by @xmath38 for metropolis - hastings , on the other hand , we have @xmath39 it is easily seen that @xmath40 depending on @xmath1 and @xmath41 , we hence expect up to twice larger acceptance rates for the metropolis variant . at criticality , @xmath42 , the minimal ratio @xmath43 is reached in the percolation limit @xmath44 . in contrast to ref .",
    "@xcite , our numerical experiments concentrate on metropolis acceptance .",
    "as , depending on the data structures used , the determination of the change @xmath32 in cluster number is the most expensive operation , it is economic to only determine @xmath32 if it is actually required for the update . in an update attempt , one draws a random number uniformly in @xmath45 ; if @xmath46 the move is accepted , otherwise it is rejected .",
    "given that @xmath47 where @xmath48 for insertion and @xmath49 for deletion , respectively , the move can be _ unconditionally accepted _",
    "conversely , for @xmath50 _ unconditional rejection _ occurs . at criticality ,",
    "@xmath42 , this results in a fraction @xmath51 of moves which can be unconditionally accepted or rejected under the metropolis dynamics .",
    "likewise , for the heat - bath rate , a fraction @xmath52 of move attempts can be decided without actually working out @xmath32 .",
    "note that , in both cases , these fractions tend to unity as @xmath53 which is a result of the cluster weight becoming independent of cluster number in the uncorrelated percolation limit .",
    "connectivity checks are hence _ never _ required there .      the main complication for an efficient implementation of the bond algorithm is to maintain the full connectivity information of the current sub - graph .",
    "consider a flip attempt on a random edge ; it can be currently in the active or inactive ( inserted or deleted ) state .",
    "for each of these cases , one needs to distinguish internal from external edges , such that independent paths connecting the two end points either exist ( internal edge ) or are absent ( external edge ) .",
    "this leads to the four cases of internal / external insertions / deletions , each of which can exhibit rather different runtime scaling behavior depending on the chosen implementation .",
    ".asymptotic run - time scaling at criticality of the elementary operations of insertion or deletion of internal or external edges , respectively , using sequential breadth - first search ( sbfs ) , interleaved bfs ( ibfs ) , union - and - find ( uf ) or the fully dynamic connectivity algorithm ( dc ) as a function of the linear system size @xmath54 .",
    "[ cols= \" < , < , < , < , < \" , ]     comparing our results for the sweeny dynamics to the swendsen - wang algorithm , we note that , apart from the slightly smaller dynamical critical exponent for the former , we also find somewhat smaller amplitudes in the @xmath55 scaling for the bond algorithm .",
    "hence for @xmath56 we find , e.g. , @xmath57 ( @xmath44 ) and @xmath58 ( @xmath59 ) for the sweeny update , while values of @xmath60 ( @xmath44 ) and @xmath61 ( @xmath59 ) are found for the swendsen - wang update .",
    "as discussed above , the relevant time scales for a comparison of the bond algorithm against other approaches depend on both , the statistical decorrelation as well as the run - time scaling of the elementary operations .",
    "we therefore analyzed average run - times for bond updates in the sweeny algorithm with the different implementations of connectivity updates discussed in sec .",
    "[ sec : connectivity ] .",
    "( color online ) average run - time @xmath62 for several values of @xmath1 and @xmath54 for the sweeny update using a dynamic connectivity ( dc ) algorithm based on splay trees .",
    "the lines correspond to least - squares fits of the model to the data.,scaledwidth=50.0% ]    for the techniques based on bfs , we studied the number of steps required to complete a connectivity check for the case of operations on internal and external edges , respectively , for the sbfs and sbfs implementations . for internal edges",
    ", this corresponds to the number of vertices touched by the bfss until a re - connecting path is found . for external edges",
    "such a path is not found and the search hence terminates after a number of steps corresponding to the mass of either the first cluster ( sbfs ) or the smaller cluster ( ibfs ) . checking the number of steps for operations on internal and external edges for sbfs and ibfs , respectively , we used power - law fits according to @xmath63 to extract estimates of the four exponents @xmath64 , @xmath65 , @xmath66 , and @xmath67 .",
    "the fit results are collected in table [ tab : exp_runtime ] . the data and corresponding fits for the case of the number of steps @xmath68 relevant for the operation on an external edge with ibfs are shown in fig .",
    "[ fig : smaller_size ] .",
    "the exponents @xmath69 follow the asymptotic values @xmath70 and @xmath71 , respectively , derived above in sec .  [ sec : bfs ] and also listed in table [ tab : exp_runtime ] for comparison .    for the total average run - time per bond operation",
    ", we asymptotically expect power - law behavior as well , @xmath72 this assumption in general describes well our data  with only minor deviations for smaller system sizes due to caching effects .",
    "for sbfs , we expect the different asymptotic scaling behavior for operations on internal and external edges , respectively , to result in an effective run - time exponent @xmath73 somewhere in between the exponents @xmath71 and @xmath70 relevant to operations on internal and external edges , respectively ( recall that internal and external edges occur in constant fractions ) .",
    "our estimates of @xmath74 listed in table [ tab : exp_runtime ] are in line with these expectations .",
    "we have no doubt , however , that the asymptotically expected @xmath75 ultimately holds for sufficiently large systems . for the interleaved case , on the other hand , all four operation types exhibit @xmath76 , and we hence find @xmath77 consistent with @xmath71 already for the system sizes considered here , cf .",
    "table [ tab : exp_runtime ] .",
    "the analysis of the run - time behavior for the union - and - find approach is more subtle as the insertion of edges is performed in constant time , whereas the deletion of edges incurs an effort proportional to @xmath78 and @xmath20 for internal and external edges , respectively , cf .",
    "table [ tab : scaling ] . as a consequence of the different scaling of individual operations , the effective run - time scaling exponent @xmath79 according to eq .",
    "is again found to be smaller than the expected limiting value @xmath70 , see the values compiled in table [ tab : exp_runtime ] .",
    "the scaling of run - times per step for our implementation of the dynamic connectivity algorithm and a representative selection of @xmath1-values is shown in fig .",
    "[ fig : runtime_sy_sy ] .",
    "we find a sub - algebraic growth and , according to the asymptotic run - time bounds derived in ref .",
    "@xcite , we fitted the functional form @xmath80 to the data .",
    "the fits resulted in @xmath81 such that we fixed @xmath82 in the following .",
    "somewhat surprisingly , our fits yield @xmath83 ; we interpret this as a result of the presence of correction terms and the amortized nature of the run - time bounds leading to the asymptotic scaling only being visible for very large system sizes .",
    "similar observations have been reported for general sets of inputs in ref .",
    "considering the ratio @xmath84 , we find that its modulus increases with @xmath1 , yielding a value of @xmath85 for @xmath86 and @xmath87 for @xmath88 .",
    "this corresponds to the increasing fraction of non - tree edges for increasing @xmath1 , resulting in an increase of traversals of the edge level hierarchy with the associated @xmath89 complexity .",
    "irrespective of that , as a consequence of the larger number of cluster - splitting operations the total run - time is found to be largest for small @xmath1 , cf .",
    "[ fig : runtime_sy_sy ] .    @lll@   & &   +   +   & &   +    we also investigated the effect of the unconditional acceptance of proposed updates for the metropolis rule as discussed in sec .",
    "[ sec : sweeny ] above .",
    "this adds another @xmath1 dependent , but system - size independent , element to the run - time scaling .",
    "such unconditional moves can save significant computational effort in case no data structures have to be updated after move acceptance .",
    "this is the case for the algorithms based on bfs which are `` stateless '' in the sense that no explicit record of connectivity is kept .",
    "unconditional insertion or removal of edges in this case does not entail any further computational effort . on the contrary , unconditional insertion or removal lead to data - structure updates for the union - and - find and dc implementations . as a consequence",
    ", we find a constant speed - up for the bfs based implementations proportional to @xmath90 $ ] . in the singular case @xmath44",
    ", bfs performs all edge updates in constant time as all insertions and deletions can be performed unconditionally such that no cluster traversals are necessary . on the contrary , no performance improvement from unconditional moves is observed for the more elaborate uf and dc implementations .",
    "we note that , for all implementations , the average run - time per bond operation depends quite strongly on @xmath1 .",
    "this is , on the one hand , due to the @xmath1 dependence of the fraction @xmath91 of external edges reaching from @xmath92 for @xmath93 down to @xmath94 for @xmath95 .",
    "for the case of the bfs implementations , an additional @xmath1 dependence is introduced through the unconditional moves as discussed above .      as discussed above in sec .",
    "[ sec : autocorrelations ] , the relevant measure for the overall efficiency of various implementations of cluster algorithms is the total run - time for the generation of a statistically independent sample according to eq .  .",
    "we compared the effective run - times of all three implementations of the bond algorithm with a reference code for the swendsen - wang dynamics .",
    "as the dynamical critical exponents @xmath96 for the sweeny update are found to be smaller than those of the swendsen - wang - chayes - machta dynamics , see refs .",
    "@xcite and table [ tab : z_ints ] , we can expect asymptotically more efficient simulations for cases where the run - time exponent @xmath97 . since any poly - logarithm is dominated by @xmath98 with @xmath99 ,",
    "this is clearly the case , asymptotically , for the dc algorithm . from the data for @xmath100 in table [ tab : z_ints ] and",
    "those for @xmath73 in table [ tab : exp_runtime ] , it is seen that for @xmath101 , this condition is not met for the implementation based on union - and - find . for the technique based on ( interleaved ) breadth - first - search ,",
    "on the other hand , such a case arises ( for integer values",
    "@xmath1 ) only for @xmath102 , where @xmath103 and @xmath104 .",
    "these observations are corroborated by the plots of the relative efficiencies shown in fig .",
    "[ fig : effective_runtimes ] . for comparison",
    ", we here show the results for the two observables @xmath105 and @xmath106 with significantly different behavior for @xmath107 . from the plots for the integer values @xmath88 , @xmath14 and @xmath108 ,",
    "it is clear that in absolute run - times ibfs is most efficient for the range of system sizes @xmath109 considered here .",
    "hence , the asymptotic advantage of the dc algorithm only shows for system sizes beyond this range .",
    "the downturn of the ratio @xmath110 for the largest system sizes and @xmath102 observed for the bfs and dc codes might be an indication of the asymptotic run - time advantage of sweeny s algorithm over swendsen - wang with these connectivity algorithms as discussed above .",
    "the results for the percolation case @xmath44 using ibfs , on the other hand , are of exceptional nature as there the cost of bond operations is completely independent of system size due to the effect of unconditional acceptance . for the case of @xmath106 ,",
    "one even finds a decrease of the relative cost of generating a statistically independent sample as this observable profits from the initial fast decorrelation or critical speeding up .    for the most relevant case @xmath111 , where sweeny s algorithm provides the only means of simulation",
    ", we can not compare to another algorithm .",
    "instead , we present in fig .",
    "[ fig : runtimes_impl_sweeny ] a comparison of run times for the sbfs , ibfs , uf and dc implementations for @xmath112 .",
    "as here @xmath77 is relatively unfavorable , we observe a clear advantage for the dc algorithm which is significantly more efficient than the other options in the full range of studied system sizes @xmath113 .",
    "uf is found to be even less efficient than sbfs here which might be considered surprising in view of the fact that all insertions are performed at constant cost and deletions have the same asymptotic run - time bounds as sbfs , see table [ tab : scaling ] .",
    "this is easily understood , however , noting that the factor of two gained for uf from the 50% of operations performed in constant time is spent again in having to traverse _ both _ clusters fully in case of external edge deletions . taking into account overheads for data - structure updates for uf , this explains the slight disadvantage of uf over sbfs seen in fig .",
    "[ fig : runtimes_impl_sweeny ] .",
    "we have shown that it is possible to implement sweeny s algorithm efficiently and in a lattice and dimensionality independent way , using a dynamic connectivity ( dc ) algorithm , in the sense that the runtime dependence on the system size is poly - logarithmic and only contributes a correction to the statistical @xmath114 contribution of the runtime to create an effectively uncorrelated sample .",
    "compared to the swendsen - wang - chayes - machta algorithm , we also find somewhat smaller dynamical critical exponents , leading to an overall asymptotically more efficient simulation of the random - cluster or potts model with sweeny s approach .",
    "in addition , the bond algorithm is the only known approach for simulations in the regime @xmath115 including , for instance , interesting @xmath116 limits such as the maximally connected spanning sub - graphs of ref .",
    "@xcite .",
    "( color online ) run - time per edge operation of simulations of the @xmath112 square - lattice rcm and the bond algorithm employing the sbfs , ibfs , uf and dc connectivity implementations , respectively .",
    ", scaledwidth=50.0% ]    we analyze in detail four implementations based on ( sequential and interleaved ) breadth - first searches , on union - and - find data structures , and on the fully dynamic connectivity algorithm suggested in ref .",
    "@xcite , respectively . for each implementation ,",
    "we derive average run - time bounds for insertions and deletions of internal and external edges , respectively , and deduce the overall asymptotic run - time behavior .",
    "it is found that interleaved breadth - first searches , although relatively unfavorable as compared to union - and - find and dynamic connectivities at first sight , perform rather well due to the lack of an underlying data structure encoding the connectivity of the clusters , in particular if connectivity queries are omitted whenever possible due to accepting moves for which the drawn random number indicates acceptance irrespective of the result of the connectivity query . the union - and - find based implementation , on the other hand , although superior in asymptotic run - time in three out of four cases of insertions or deletions of internal or external edges , shows ultimately inferior performance due to the run - time scaling for deletions of external edges that require full traversals of the involved clusters . the dynamic connectivity algorithm , while asymptotically most efficient with a poly - logarithmic scaling of run - times per operation , has rather large constants leading to somewhat weaker performance than breadth - first search for the considered lattice sizes @xmath117 and @xmath17 . for @xmath118 , on the other hand , where run - times are dominated by operations on external edges , it outperforms the other implementations already for small systems .",
    "we see significant room for further run - time improvements for the dynamic connectivity algorithm , however , for instance by optimizations of the underlying tree data structure or the implementation of additional heuristics as indicated in the comparative study @xcite .",
    "we note that due to the lack of explicit connectivity information for the breadth - first search approach it becomes more expensive than for the other techniques to perform measurements of quantities such as cluster numbers or correlation functions depending on the connectivity . as measurements are typically taken at most once per sweep , however , any cost of at most @xmath119 operations for measurements results in only @xmath120 amortized effort per bond operation .    the observed fast initial decorrelation for @xmath107 and quantities such as @xmath121 and @xmath122 depending on cluster connectivity as illustrated in figs .",
    "[ fig : z_int_overall ] , [ fig : tau_int ] and [ fig : rhos ] suggests that there is an additional dynamical mechanism at play for such observables . as argued in ref .",
    "@xcite , this is due to a larger number of operations on external edges for smaller values of @xmath1 which can lead to a large - scale change in the connectivity structure through a single bond operation .",
    "the concentration of external edges , bridges or fragmenting bonds drastically increases as @xmath1 is decreased from @xmath108 down to the tree limit @xmath123 @xcite which is also clearly expressed in a corresponding increase in the fractal dimension of `` red '' bonds @xcite .",
    "it is currently not clear , however , why this effect only leads to a change in dynamical critical behavior for @xmath107 .    while we have restricted our attention to simulations on the square lattice , all implementations discussed here are essentially independent of the underlying graph or lattice , requiring only minimal adaptations for different situations .",
    "this makes our approach significantly more general than the implementation originally suggested by sweeny @xcite which is based on tracing loops on the medial lattice in two dimensions .",
    "additionally , the latter technique in two dimensions still suffers from polynomial scaling of the run - time per edge operation @xcite , such that a poly - logarithmic implementation is asymptotically faster .    until now we have only used the dc implementation for canonical simulations but as proposed in ref .",
    "@xcite an interesting application are generalized - ensemble simulations of the random cluster model where one directly estimates the number of possible graphs @xmath124 with @xmath125 clusters and @xmath126 edges which then allows for the calculation of canonical ensemble averages as continuous functions of temperature and the parameter @xmath1 .",
    "68ifxundefined [ 1 ] ifx#1 ifnum [ 1 ] # 1firstoftwo secondoftwo ifx [ 1 ] # 1firstoftwo secondoftwo `` `` # 1''''@noop [ 0]secondoftwosanitize@url [ 0 ] ",
    "+ 12$12  & 12#1212_12%12@startlink[1]@endlink[0]@bib@innerbibempty @noop * * ,   ( ) @noop * * ,   ( ) link:\\doibase 10.1016/0031 - 8914(72)90045 - 6 [ * * , ( ) ] link:\\doibase 10.1016/0031 - 8914(72)90161 - 9 [ * * , ( ) ] link:\\doibase",
    "10.1016/0031 - 8914(72)90087 - 0 [ * * , ( ) ] link:\\doibase 10.1103/revmodphys.54.235 [ * * , ( ) ] link:\\doibase 10.1103/physrevb.29.5103 [ * * , ( ) ] link:\\doibase 10.1007/bf01025984 [ * * , ( ) ] @noop * * ,   ( ) link:\\doibase 10.1103/physrevlett.51.2175 [ * * ,   ( ) ] link:\\doibase 10.1103/physrevlett.56.1015 [ * * ,   ( ) ] @noop * * ,   ( ) link:\\doibase    10.1103/physreve.81.020102 [ * * ,   ( ) ] link:\\doibase 10.1103/physrevlett.58.86 [ * * , ( ) ] @noop * * ,   ( ) link:\\doibase 10.1103/physrevlett.62.361 [ * * , ( ) ] link:\\doibase    10.1007/s10955 - 011 - 0267-y [ * * ,   ( ) ] link:\\doibase 10.1103/physreve.66.016115 [ * * ,   ( ) ] link:\\doibase 10.1103/physreve.66.057101 [ * * ,   ( ) ] link:\\doibase 10.1103/physreve.71.016709 [ * * ,   ( ) ] link:\\doibase 10.1103/physrevlett.98.230602 [ * * ,   ( ) ] @noop _ _  ( ,  , ) @noop * * ,   ( ) link:\\doibase 10.1103/physreve.72.056132 [ * * ,   ( ) ] @noop `` , ''   ( ) ,   link:\\doibase 10.1088/1742 - 5468/2010/05/l05004 [ * * , ( ) ] @noop _ _ ,  ed .",
    "( ,  ,  ) link:\\doibase 10.1016/j.phpro.2010.01.212 [ * * ,   ( ) ] link:\\doibase 10.1145/320211.320215 [ * * ,   ( ) ] link:\\doibase 10.1145/502090.502095 [ * * ,   ( ) ] @noop _ _ ,  ed .",
    "( ,  ,  ) @noop _ _ ,  ed .",
    "( ,  ,  ) link:\\doibase 10.1088/0305 - 4470/25/22/015 [ * * ,   ( ) ] link:\\doibase 10.1088/0305 - 4470/32/35/301 [ * * ,   ( ) ] ,   link:\\doibase 10.1088/0305 - 4470/25/21/009 [ * * ,   ( ) ] link:\\doibase 10.1088/0305 - 4470/32/43/101 [ * * , ( ) ] ,   link:\\doibase 10.1088/0305 - 4470/31/5/003 [ * * , ( ) ] @noop * * ,   ( ) in  @noop _ _ ,  vol .  ,  ( ,  ,  )  p.   link:\\doibase    10.1103/physreve.86.061101 [ * * ,   ( ) ] link:\\doibase 10.1103/physrevlett.68.2692 [ * * ,   ( ) ] @noop _ _ , @noop ,   ( ) @noop * * ,   ( ) link:\\doibase 10.1145/321879.321884 [ * * ,   ( ) ] link:\\doibase    10.1103/physrevlett.99.055701 [ * * ,   ( ) ] ,   _ _ ,  @noop ,   ( ) @noop * * ,   ( ) link:\\doibase 10.1145/3828.3835 [ * * ,   ( ) ] @noop _ _  ( ,  ,  ) link:\\doibase 10.1007/bf02614369 [ * * , ( ) ] @noop _ _ ,   ed .",
    "( ,  ) link:\\doibase 10.1145/274787.274812 [ * * ,   ( ) ] link:\\doibase    10.1145/945394.945398 [ * * ,   ( ) ] in  @noop _ _ ,  ,  ( , ,  )  pp .",
    "link:\\doibase 10.1007/bf01022990 [ * * , ( ) ] link:\\doibase 10.1103/physrevlett.63.827 [ * * ,   ( ) ] @noop _ _  ( ,  ,  ) link:\\doibase 10.1016/s0010 - 4655(03)00467 - 3 [ * * ,   ( ) ] ,   link:\\doibase 10.1103/physreve.81.066701 [ * * ,   ( ) ] @noop _ _",
    "( ,  ,  ) link:\\doibase 10.1145/272991.272995 [ * * ,   ( ) ] link:\\doibase 10.1007/s10955 - 005 - 4409-y [ * * ,   ( ) ] link:\\doibase 10.1088/0305 - 4470/10/11/008 [ * * ,   ( ) ] @noop `` , ''"
  ],
  "abstract_text": [
    "<S> the simulation of spin models close to critical points of continuous phase transitions is heavily impeded by the occurrence of critical slowing down . a number of cluster algorithms , usually based on the fortuin - kasteleyn representation of the potts model , and suitable generalizations for continuous - spin models have been used to increase simulation efficiency . </S>",
    "<S> the first algorithm making use of this representation , suggested by sweeny in 1983 , has not found widespread adoption due to problems in its implementation . </S>",
    "<S> however , it has been recently shown that it is indeed more efficient in reducing critical slowing down than the more well - known algorithm due to swendsen and wang . here </S>",
    "<S> , we present an efficient implementation of sweeny s approach for the random - cluster model using recent algorithmic advances in dynamic connectivity algorithms . </S>"
  ]
}
{
  "article_text": [
    "the study of a set of autonomous mobile robots , popularly known as swarm robots or multi robot system , is an emerging research topic in last few decades .",
    "swarm of robots is a set of autonomous robots that have to organize themselves in order to execute a specific task in collaborative manner . various problems in several directions ,",
    "have been studied in the framework of swarm robots , among the others distributed computing is an important area with this swarm robots .",
    "this paper explores that direction .",
    "the traditional distributed model @xcite for multi robot system , represents the mobile entities by distinct points located in the euclidean plane .",
    "the robots are anonymous , indistinguishable , having no direct means of communication .",
    "they have no common agreement in directions , orientation and unit distance .",
    "each robot has sensing capability , by _ vision _ , which enables it to determine the position ( within its own coordinate system ) of the other robots .",
    "the robots operate in rounds by executing _",
    "look - compute - move _ cycles .",
    "all robots may or may not be active at all rounds . in a round ,",
    "when becoming active , a robot gets a snapshot of its surroundings ( look ) by its sensing capability .",
    "this snapshot is used to compute a destination point ( compute ) for this robot . finally , it moves towards this destination ( move ) .",
    "the robot either directly reaches destination or moves at - least a small distance towards the destination .",
    "the choice of active robot in each round is decided by an adversary .",
    "however , it is guaranteed that each robot will become active in finite time . all robots",
    "execute the same algorithm .",
    "the robots are oblivious , i.e. , at the beginning of each cycle , they forget their past observations and computations @xcite . depending on the activation schedule and the duration of the cycles , three models are defined . in the _ fully - synchronous _ model ,",
    "all robots are activated simultaneously . as a result ,",
    "all robots acts on same data .",
    "the _ semi - synchronous _ model is like the fully synchronous , except that the set of robots to be activated is chosen at random . as a result ,",
    "the active robots act on same data .",
    "no assumption , is made on timing of activation and duration of the cycles for _ asynchronous _ model .",
    "however , the time and durations are considered to be finite .",
    "vision and mobility enable the robots to communicate and coordinate their actions by sensing their relative positions . otherwise , the robots are silent and have no explicit message passing .",
    "these restrictions enable the robots to be deployed in extremely harsh environments where communication is not possible , i.e an underwater deployment or a military scenario where wired or wireless communications are impossible or can be obstructed or erroneous .",
    "majority of the investigations@xcite on mobile robots assume that their visibility is unobstructed or full , i.e. , if two robots @xmath0 and @xmath1 are located at @xmath2 and @xmath3 , they can see each other though other robots lie in the line segment @xmath4 at that time .",
    "very few observations on obstructed visibility ( where a and b are not mutually visible if there exist other robots on the line segment @xmath4 ) have been made in different models ; such as , ( i ) the robots in the one dimensional space @xcite ; ( ii ) the robots with visible lights @xcite and ( iii ) the unit disc robot called _ fat robots _",
    "@xcite .",
    "the first model studied the uniform spreading of robots on a line @xcite . in the second model , each agent",
    "is provided with a local externally visible _ light _ , which is used as colors @xcite .",
    "the robots implicitly communicate with each other using these colors as indicators of their states . in the third model ,",
    "the robots are not points but unit discs @xcite ) and collisions among robots are allowed .",
    "obstructed visibility have been addressed recently in @xcite and @xcite . in @xcite",
    "the authors have proposed algorithm for robots in light model . here , the robots starting from any arbitrary configuration form a circle which is itself an unobstructed configuration .",
    "the presence of a constant number of visible light(color ) bits in each robot , implicitly help the robots in communication and storing the past configuration . in @xcite ,",
    "the robots obtain a obstruction free configuration by getting as close as possible . here , the robots do not have light bits .",
    "however , the algorithm is for semi - synchronous robots .      in this paper",
    ", we propose algorithm to remove obstructed visibility by making of general configuration by the robots .",
    "the robots start from arbitrary distinct positions in the plane and reach a configuration when they all see each other .",
    "the robots are asynchronous , oblivious , having no agreement in coordinate systems .",
    "the obstructed visibility model is no doubt improves the traditional model of multi robot system by incorporating real - life like characteristic .",
    "the problem is also a preliminary step for any subsequent tasks which require complete visibility .",
    "the organization of the paper is as follows : section [ model ] , defines the assumptions of the robot model used in this paper and presents the definitions and notations used in the algorithm .",
    "section [ algo ] presents an algorithm for obtaining general position by asynchronous robots .",
    "we also furnish the correctness of our algorithm in this section . finally in section",
    "[ con ] we conclude by providing the future directions of this work .",
    "let @xmath5 be a set of @xmath6 homogeneous robots represented by points .",
    "each robot can sense ( see ) @xmath7 around itself up to an unlimited radius . however , they obstruct the visibility of other robots .",
    "the robots execute _ look - compute - move _ cycle in _ asynchronous _ manner .",
    "they are _ oblivious _ and have _ no direct communication _ power .",
    "the movement of the robots are _ non - rigid _",
    ", i.e. , a robot may stop before reaching its destination .",
    "however , a robot moves at - least a minimum distance @xmath8 towards its destination .",
    "this assumption assures that a robot will reach its destination in finite time .",
    "initially the robots are positioned in distinct locations and are stationary .",
    "now we present some notations and conventions which will be used throughout the paper .    * * position of a robot : * @xmath9 represents a location of a robot in @xmath10 at some time , i.e. , @xmath11 is a position occupied by a robot in @xmath10 at certain time . to denote a robot in @xmath10 we refer by its position @xmath11 . * * measurement of angles : * by _ an angle between two line segments _ , if otherwise not stated , we mean the angle made by them which is less than equal to @xmath12 .",
    "* @xmath13 for any robot @xmath11 , we define the vision of @xmath11 , @xmath14 , as the set of robots visible to @xmath11 ( excluding @xmath11 itself )",
    ". the robots in @xmath14 can also be in motion due to asynchronous scheduling .",
    "+ if we sort the robots in @xmath14 by angle at @xmath11 , w.r.t .",
    "@xmath11 and connect them in that order , we get a star - shaped polygon , denoted by @xmath15 .",
    "note that @xmath16 if and only if @xmath17 ( figure [ visionofarobot ] ) .",
    "* @xmath18 this is the set of line segments joining @xmath11 to all its neighbors or all robots in @xmath14 .",
    "@xmath19 ( figure [ cr(r_i ) ] ) . *",
    "@xmath20 straight line through @xmath11 and @xmath21 ( figure [ disp ] ) * * col@xmath22 : * @xmath23 denotes the set of robots for which @xmath11 creates visual obstructions .",
    "* @xmath24 when a robot @xmath11 moves to new position @xmath25 , we call @xmath26 as the angle of displacement of @xmath11 w.r.t .",
    "@xmath27 and denote it by @xmath28 ( figure [ disp ] ) . * @xmath29 set of angles @xmath30 where @xmath31 and @xmath27 are two consecutive vertices of @xmath15 ( figure [ alpha ] ) . * @xmath32 maximum of @xmath33 if maximum value of @xmath33 is less than @xmath12 otherwise the @xmath34 maximum of @xmath33 . the tie , if any , is broken arbitrarily ( figure [ alpha ] ) .",
    "* @xmath35 bisector of @xmath36 .",
    "note that @xmath37 is a ray from @xmath11 towards the angle of consideration ( figure [ alpha ] ) . * @xmath38 the direction of @xmath37 .",
    "we say that @xmath39 lies on that side of any straight line where infinite end of @xmath39 lies ( figure [ alpha ] ) .",
    "* @xmath40 we look at the intersection points of @xmath37 and @xmath41 , @xmath42 @xmath43 .",
    "the intersection point closest to @xmath11 is denoted by @xmath44 ( figure [ alpha ] ) .",
    "* @xmath45 : set of angles @xmath46 and @xmath47 , @xmath48 , where @xmath49 and @xmath50 are the two neighbors of @xmath11 on @xmath51 ( figure [ gamma ] ) . * @xmath52 minimum of @xmath53 ( figure [ gamma ] ) .",
    "* @xmath54 @xmath55 . * * _ d_(@xmath11 ) * : distance between @xmath11 and @xmath44 . *",
    "@xmath56 distance between @xmath11 and the robot nearest to it .",
    "* @xmath57 @xmath58 . *",
    "@xmath59 the point on @xmath37 , @xmath60 distance apart from @xmath11 ( figure [ c(r_i ) ] ) .",
    "* @xmath61 the circle of radius @xmath62 centered at @xmath11 . note that @xmath63 always lies on @xmath64 ( figure [ c(r_i ) ] ) . *",
    "@xmath65 any one of the tangential points of the tangents drawn to @xmath64 from @xmath27 ( figure [ c(r_i ) ] ) .",
    "we classify the robots in @xmath66 depending upon their positions with respect to @xmath67 ( the convex hull of @xmath66 ) , as below :    * * external vertex robots ( @xmath68 ) : * a set of robots lying on the vertices of @xmath67 .",
    "these robots do not obstruct the visibility of any robot in @xmath10 and hence they do not move during whole execution of the algorithm . note that , if @xmath11 lies outside of @xmath15 , then @xmath11 is an external vertex robot .",
    "* * external edge robots ( @xmath69 ) : * a set of robots lying on the edges of @xmath67 .",
    "these robots either block the visibility of external vertex robots or other robot edge robots .",
    "note that , if @xmath11 lies on an edge of @xmath15 , then @xmath11 is an external edge robot .",
    "* * internal robots ( @xmath70 ) : * a set of robots lying inside the @xmath67 .",
    "note that , if @xmath11 lies within @xmath15 , @xmath11 is an internal robot .",
    "consider initially robots in @xmath71 are not in general position . our objective is to move the robots in @xmath71 in such a way that after a finite number of movements of the robots in @xmath71 , it will be in general position . in order to do so , our approach is to move the robots which create visual obstructions to the other robots .",
    "if a robot @xmath11 lies between two other robots , say @xmath72 and @xmath73 such that @xmath11 , @xmath72 and @xmath73 are in straight line , then @xmath11 is selected for movement .",
    "the destination of @xmath11 , say @xmath74 , is computed in such a way that , there always exists a @xmath75 ( where @xmath27 does not have full visibility ) , such that when @xmath11 moves , the cardinality of the set of visible robots of @xmath27 increases . since , the number of robots are finite , the number of robots having partial visibility , is also finite .",
    "our algorithm assures that at each round at - least one robot with partial visibility will have full visibility .",
    "this implies that in finite number of rounds all robots will achieve full visibility , hence , the robots will be in general position in finite time .",
    "a collinear middle robot is selected to move from its position .",
    "a robot finds its destination for movement using algorithm @xmath76 .",
    "a robot @xmath11 , selected for moving , moves along the bisector of the minimum angle created at @xmath11 by the robots in @xmath14 .",
    "the destination is chosen in such a way that @xmath11 will not block the vision of any @xmath77 , where the vision of @xmath27 was not initially blocked by @xmath11 , throughout the paths towards its destination .",
    "each movement of @xmath11 breaks at least one initial collinearity .    1 .",
    "compute @xmath36 , @xmath78 , @xmath79 , @xmath80 , @xmath81 , + 2 .",
    "* case 1 : * @xmath82 , + @xmath83 + 3 .",
    "* case 2 : * @xmath84 , + @xmath85 4 .",
    "compute the point @xmath63 on @xmath78 , @xmath60 distance apart from @xmath11 5 .",
    "return @xmath63    [ [ proof - of - correctness - of - algorithm - computedestination ] ] * proof of correctness of algorithm computedestination ( ) * + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    correctness of the algorithm is established by following observations , lemmas .",
    "[ beta ] @xmath86 .",
    "if all the robots lie on a straight line , then @xmath87 .",
    "suppose there are at least three non - collinear robots . for three robots forming a triangle , @xmath79 is maximum when the triangle is equilateral . for all other cases ,",
    "consider the triangle formed by @xmath88 and @xmath49 where @xmath27 is any robot in @xmath89 and @xmath49 is a neighbor of @xmath11 on @xmath51 .",
    "if @xmath27 is also a neighbor of @xmath11 on @xmath90 ( figure [ lemma-1](a ) ) , then @xmath91 and @xmath92 are in @xmath93 and either @xmath94 or an angle less than it is in @xmath33 . on the other hand , if @xmath27 is not a neighbor of @xmath11 on @xmath90 ( figure [ lemma-1](b ) ) , then instead of @xmath92 , an angle less than it , is in @xmath93 . in all cases",
    ", @xmath79 is less than the minimum of the angles of the triangle formed by @xmath88 and @xmath49 .",
    "hence , @xmath86 .",
    "[ max - disp ] maximum value of @xmath28 , denoted by @xmath95 , is attained when @xmath63 coincides with one of the tangential points @xmath96 .",
    "[ theta ] for any @xmath11 , @xmath97 @xmath98 @xmath27 .",
    "let @xmath27 be a robot in @xmath14 and @xmath31 a robot closest to @xmath11 . by observation @xmath99 , maximum values of @xmath28 and @xmath100",
    "are attained at tangential points @xmath96 and @xmath101 respectively .",
    "hence , @xmath28 is less than @xmath102 for all @xmath103 . by definition , @xmath104 again , @xmath105    since @xmath106 , from @xmath107 and @xmath108 we have , @xmath109 + @xmath28 and @xmath80 are in @xmath110 ( by lemma [ beta ] ) and @xmath111 is an increasing function in @xmath112 $ ] . from @xmath113",
    "we conclude ,    @xmath114    suppose a robot @xmath115 moves according to our algorithm .",
    "we claim that it will never become collinear with any two robots @xmath27 and @xmath31 in @xmath66 where @xmath11 , @xmath27 and @xmath31 are not collinear initially .",
    "now we state arguments to prove our claim .",
    "[ right - triangle-1 ] let @xmath116 be a right - angled triangle with @xmath117 .",
    "let @xmath118 be a point on the side @xmath119 such that @xmath120 .",
    "then ,    @xmath121 .",
    "[ right - triangle-2 ] suppose @xmath11 and @xmath27 move to new positions @xmath63 and @xmath122 in at most one computation cycle .",
    "let @xmath123 be the angle between @xmath124 and @xmath125 i.e. , @xmath126 where c is the intersection point between @xmath124 and @xmath127 .",
    "then ,    @xmath128 2 max @xmath129    * * case 1 : * + suppose @xmath11 and @xmath27 move synchronously . without loss of generality ,",
    "let @xmath130 . *",
    "* * case 1.1 : * + suppose @xmath39 and @xmath131 lie in the opposite sides of @xmath124 ( figure [ lemma-3 - 1 ] ) . in view of observation @xmath99 , max@xmath132 ,",
    "the maximum value of @xmath123 , is attained when @xmath127 is a common tangent to @xmath64 and @xmath133 .",
    "let @xmath134 be the middle point of @xmath135 .",
    "if @xmath64 is strictly larger than @xmath133 , @xmath136 is closer to @xmath27 than @xmath11 .",
    "if they are equal , @xmath136 coincides with @xmath134 .",
    "consider the right - angled triangle @xmath137 . by observation @xmath138 , + @xmath139",
    "* * * case 1.2 : * + if @xmath39 and @xmath131 lie in the same side of @xmath124 ( figure [ lemma-3 - 2 ] ) , max@xmath132 is attained when @xmath127 is a tangent to @xmath64 from the point @xmath136 and @xmath136 coincides with the closest point of @xmath133 from @xmath11 . then following same argument as in case-1 , we have the proof . +",
    "* * case 2 : * + suppose @xmath11 and @xmath27 move asynchronously .",
    "suppose @xmath11 is moving and is at @xmath140 when @xmath27 takes the snapshot of its surroundings to compute the value of @xmath141 .",
    "since @xmath11 has already computed the value of @xmath60 and computation of @xmath142 values of @xmath11 and @xmath27 are independent , the proof follows from the same arguments as in case 1 . in this case",
    "the value of @xmath141 may be different from the value in case 1 .",
    "[ deviation ] suppose two robots @xmath11 and @xmath27 move to @xmath63 and @xmath122 respectively in at most one movement .",
    "then +   + @xmath143",
    ".    follows from observation @xmath138 and lemma @xmath144 ( figure [ lemma-4 ] ) .",
    "[ lemma-5 ] if @xmath88 and @xmath31 are not collinear and mutually visible to each other , then during the whole execution of the above algorithm , they never become collinear .",
    "we have the following cases ,    * * case 1 ( only one robot moves ) : * + without loss of generality , suppose @xmath145 stand still and @xmath11 moves . if @xmath39 does not intersect @xmath146 ( figure [ case1](a ) ) , then the claim is trivially true .",
    "+ suppose @xmath39 intersects @xmath146 ( figure [ case1](b ) ) .",
    "since distance traversed by @xmath11 is bounded above by @xmath147 , @xmath11 can not reach @xmath146 and @xmath88 and @xmath31 will not become collinear . +",
    "* * case 2 ( two of the robots move ) : * + without loss of generality , suppose @xmath11 and @xmath27 move while @xmath31 remains stationary .",
    "this case would be feasible only if @xmath148 .",
    "* * * case 2.1 : * + suppose @xmath11 and @xmath27 move synchronously .",
    "then by lemma @xmath149 , + @xmath150 + and @xmath151 from equation @xmath152 and @xmath153 @xmath154 the minimum value of @xmath155 for which @xmath88 and @xmath31 could become collinear is @xmath156 . in view of equation @xmath157",
    ", we conclude that @xmath88 and @xmath31 would never become collinear . * * * case 2.2 : * + suppose that @xmath11 is in motion and is at @xmath158 when @xmath27 computes the value of @xmath141 . if @xmath159 and @xmath27 lie in opposite sides of @xmath160 ( figure [ case2.2](a ) ) , + then @xmath161 which implies that @xmath27 can not reach @xmath160 when @xmath11 reaches its destination and hence the lemma .",
    "suppose @xmath159 and @xmath27 lie in same side of @xmath160 ( figure [ case2.2](b ) ) .",
    "then we have , @xmath162 lemma follows from the same arguments as used in case @xmath163 .",
    "+ consider the case : suppose @xmath27 takes the snapshot at time @xmath164 and moves to its destination at time @xmath165 . in between times",
    "@xmath164 and @xmath165 , suppose @xmath11 has made at most @xmath166 moves ( we shall prove in case 3.2 that number of movements of any robot is bounded above by @xmath166 ) .",
    "if @xmath11 moves towards @xmath27 , after @xmath166 moves , we would have @xmath167 which is less than @xmath168 .",
    "hence equation @xmath157 is satisfied in this case and we have the proof of the lemma .",
    "if @xmath11 moves away from @xmath27 , then there is nothing to prove . * * case 3 ( all three robots move ) : * * * * case 3.1 : * + suppose @xmath88 and @xmath31 move synchronously . * * * case 3.1.1 : * + suppose @xmath127 intersects @xmath124 at an angle @xmath169 ( figure [ case-3 - 1 ] ) .",
    "+ by lemma @xmath144 , @xmath170 in @xmath171 , @xmath172 + now @xmath11 , @xmath27 and @xmath31 would be collinear only if @xmath173 + from lemma @xmath174 , @xmath175 + equations @xmath176 , @xmath177 and @xmath178 imply that @xmath11 , @xmath27 and @xmath31 do not become collinear .",
    "* * * case 3.1.2 : * + suppose @xmath127 and @xmath124 are parallel i.e. , @xmath179 which implies that @xmath180 ( figure [ lemma-5 - 312 ] ) .",
    "let @xmath181 intersect @xmath124 at @xmath182 and @xmath183 . since @xmath184 and @xmath185 , + @xmath186 + @xmath60 and @xmath141 are bounded above by @xmath187 @xmath188 .",
    "hence by equation @xmath189 , @xmath11 and @xmath27 and @xmath31 do not become collinear . * * case 3.2 : * + suppose @xmath11 , @xmath27 and @xmath31 move asynchronously .",
    "the main problem in this case is the following scenario : suppose @xmath27 or @xmath31 takes the snapshot at time @xmath190 or @xmath191 respectively and starts moving to its computed destination at time @xmath192 or @xmath193 respectively .",
    "suppose the configuration has been changed in between the times due to the movements of the other robots .",
    "then the corresponding @xmath142 value of @xmath27 or @xmath31 is not consistent w.r.t . the current configuration .",
    "we have to show that this would not create any problem for our algorithm .",
    "the main idea of proof in this case is that we have to estimate the maximum amount of inclination of @xmath124 towards @xmath31 between the times @xmath27 or @xmath31 takes the snapshot of surroundings and it reaches the destination .",
    "so , in the following proofs we only consider the scenarios ( as in the case 3.1.1 . and case 3.1.2 )",
    "in which there are possibilities of maximum reduction in the @xmath194 , which depicts the inclination of @xmath124 towards @xmath31 .",
    "note that the inclination of @xmath124 towards @xmath31 is maximum when both @xmath11 and @xmath27 move synchronously .",
    "so , we only prove the case when @xmath31 holds the old value of @xmath142 .",
    "* * case 3.2.1 * + suppose @xmath31 holds the old value of @xmath142 w.r.t . to the current configuration",
    ". suppose @xmath11 and @xmath27 are at @xmath195 and @xmath196 respectively when @xmath31 takes the snapshot at time @xmath191 .",
    "suppose till @xmath193 , @xmath11 and @xmath27 move @xmath197 and @xmath198 times respectively .",
    "note that initially @xmath11 and @xmath27 can be collinear with @xmath199 robots and to remove these collinearity they have to move at most @xmath166 times if they do not create any new collinearity ( this bound is obtained by considering the degenerate case i.e. , when all the robots are collinear initially ) .",
    "+ first we prove that @xmath197 and @xmath198 are bounded above by @xmath166 .",
    "to prove this we show that @xmath11 and @xmath27 do not create any new collinearity while moving .",
    "we prove this for arbitrary robots .",
    "suppose some robot @xmath200 , while moving , creates a new collinearity with @xmath201 and @xmath202 for the first time during the execution of our algorithm ( figure [ case 3.2 ] ) . +",
    "then either one of @xmath201 and @xmath202 or both have @xmath142 values w.r.t .",
    "old configurations .",
    "as stated earlier we only prove the case in which only one robot , say @xmath202 , has old @xmath142 value .",
    "@xmath202 computes @xmath203 at the time @xmath204 i.e. , @xmath205 suppose @xmath202 does not move till time @xmath206 .",
    "the number of times @xmath200 and @xmath201 move to break the initial collinearities before time @xmath206 is upper bounded by @xmath166 .",
    "@xmath202 would become collinear with @xmath200 and @xmath201 when @xmath207 would be inclined enough towards @xmath202 so that by moving a @xmath203 amount it would reach this straight line .",
    "we try to estimate the inclination of @xmath207 towards @xmath202 ( which is depicted by the angle @xmath208 as in the case 3.1.1 . and by the displacement of @xmath207 towards @xmath202 as in the case 3.1.2 . ) after @xmath166 number of movements of @xmath200 and @xmath201 ( note that we have consider the over estimated value of the number of movements of @xmath200 and @xmath201 ) . as computed in the case 3.1.1 , after first movement",
    ", @xmath209 and @xmath210 will become at most @xmath211 . by the same repeated arguments",
    ", we can say that after @xmath212 movements @xmath213 which is strictly greater than @xmath214 for @xmath215 .",
    "this contradicts the fact that @xmath200 creates collinearity with @xmath201 and @xmath202 . for the scenario same as the case 3.1.2 .",
    ", we have , + @xmath216 + this also contradicts the fact that @xmath200 creates collinearity with @xmath201 and @xmath202 .",
    "hence , we conclude that @xmath200 would not become collinear with @xmath201 and @xmath202 .",
    "+ in the above proof , we replace @xmath200 , @xmath201 and @xmath202 by @xmath11 , @xmath27 and @xmath31 respectively to conclude that @xmath11 would not become collinear with @xmath27 and @xmath31 during the whole execution of our algorithm .",
    "[ lemma6 ] consider any two robots @xmath11 and @xmath27 .",
    "@xmath11 does not cross @xmath217 .    if @xmath37 and @xmath217 do not intersect , then there is nothing to prove .",
    "suppose @xmath37 and @xmath217 intersect at a point @xmath218 ( figure [ lemma-6 ] ) .",
    "if at least one of @xmath44 and @xmath219 is closer to @xmath11 and @xmath27 respectively than @xmath218 , then we are done .",
    "else @xmath36 and @xmath220 are angle of same triangle @xmath221 for some @xmath222 i.e , @xmath223 and @xmath224 . in @xmath221 , let @xmath37 and @xmath217 intersect @xmath225 and @xmath226 at @xmath2 and @xmath3 respectively . here",
    "@xmath227 . +   + in @xmath228 , @xmath229 in @xmath230 , @xmath231 from equation @xmath232 and @xmath233 , @xmath234 since @xmath235 , @xmath236 which implies ,    @xmath237 + < @xmath238 .",
    "hence @xmath11 can not cross @xmath217 .",
    "similarly , @xmath27 can not cross @xmath37 .",
    "[ lemma7 ]    suppose , for any robot @xmath9 , @xmath239 .",
    "then during the whole execution of the algorithm @xmath11 will not block the vision between @xmath27 and @xmath31 where @xmath240 .",
    "let @xmath241 .",
    "suppose @xmath201 be the nearest robot of @xmath11 such that @xmath31 lie on @xmath242 ( figure [ lemma-7 ] ) .",
    "if @xmath37 does not intersect @xmath243 , there is no possibility that @xmath11 will block the vision between @xmath27 and @xmath31 .",
    "let @xmath37 intersect @xmath243 .",
    "then @xmath27 is one of the immediate neighbor of @xmath201 on @xmath244 .",
    "let @xmath245 and @xmath246 be the other immediate neighbors of @xmath27 and @xmath201 respectively on @xmath244 .",
    "first we prove that @xmath11 will always lie on the same side of @xmath247 as it is initially even if @xmath11 , @xmath27 , @xmath31 and @xmath27 move . by lemma @xmath248 and the observation that the movements of @xmath11 , @xmath27 , @xmath201 are bounded by the edges and chords of the polygon formed by @xmath249 , we conclude @xmath11 never crosses the line @xmath247 . to block the vision between @xmath31 and @xmath27",
    ", @xmath11 has to move on the line segment @xmath250 .",
    "since @xmath11 and line segment @xmath225 lies on different sides of @xmath247 , @xmath11 will never block the vision between @xmath31 and @xmath27 .",
    "let @xmath251 then there is a robot @xmath202 which creates visual obstruction between @xmath11 and @xmath27 . now",
    "the movement of @xmath11 is bounded by the line @xmath252 and hence the lemma .",
    "[ lemma-8 ] if at any time @xmath164 , @xmath77 , then at @xmath253 , @xmath77 even if @xmath11 changes its position .",
    "the proof is immediate from [ lemma-5 ] and [ lemma7 ] .",
    "[ lemma-9 ] cardinality of @xmath14 is strictly increasing .",
    "lemma @xmath254 , @xmath255 and @xmath256 imply the proof .    [ lemma-10 ] there exist at least two robots @xmath257 for which @xmath258 and @xmath258 increase whenever @xmath11 changes its position .",
    "@xmath11 moves whenever @xmath11 is collinear with at least one pair of robots , ( @xmath27 , @xmath31 ) , and @xmath11 lies in between those robots . if @xmath27 and @xmath31 do not move then @xmath258 and @xmath259 increase whenever @xmath11 moves because no robot can reach @xmath225 due to the facts stated in lemma @xmath254 and @xmath255 .",
    "when either @xmath27 or @xmath31 or both @xmath11 and @xmath31 moves , one member of @xmath260 and one member of @xmath261 can see each other . hence the lemma .",
    "next we will discuss the algorithm @xmath262 , by which the robots in @xmath10 move to obtain full visibility .",
    "the robots in @xmath263 which create obstacle to other robots and the robots in @xmath69 are eligible for movement by this algorithm .",
    "the robots compute destinations using @xmath264 and move towards it .",
    "the robots keep on executing the algorithm till there exist no three collinear robots in @xmath10 .",
    "[ [ proof - of - correctness - of - algorithm - makegenaralposition ] ] * proof of correctness of algorithm makegenaralposition ( ) * + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the algorithm assures that the robot will form general position in finite number of movements .",
    "the termination of the algorithm is established by following observation and lemmas .",
    "@xmath265 is not executed by a robot @xmath266 if @xmath267 .",
    "[ finitecolphi ] @xmath268 will be @xmath123 in finite time .    in the initial configuration",
    "the number of robots in @xmath268 is upper bounded by @xmath199 . during the whole execution of our algorithm",
    "no new collinearity is created and for each iteration cardinality of @xmath268 is reduced by at least two .",
    "hence after at most @xmath166 number of iterations of the while loop in the above algorithm , @xmath268 will become null .",
    "@xmath269 will be @xmath270 in finite number of execution of the cycle .",
    "let @xmath271 .",
    "the algorithm for a robot @xmath11 terminates whenever @xmath272 reaches the value @xmath199 .",
    "hence the algorithm for all robots terminates when @xmath273 which is a finite integer . by lemma @xmath274 and",
    "@xmath275 the value of @xmath276 increases whenever any robot moves . hence after finite number of execution cycles @xmath276 reaches its maximum value @xmath277 .    from the above results",
    ", we can conclude the following theorem :    a set of asynchronous , oblivious robots ( initially not in general position ) without agreement in common chirality , can form general position in finite time .",
    "in this paper we have presented an algorithm for obtaining general position by a set of autonomous , homogeneous , oblivious , asynchronous robots having no common chirality .",
    "the algorithm assures the robots to have collision free movements .",
    "another important feature of our algorithm is that the convex hull made by the robots in initial position , remains intact both in location and size . in other words ,",
    "the robots do no go out side the convex hull formed by them . this feature can help in many subsequent pattern formations which require to maintain the location and size and of the pattern .",
    "once the robots obtain general position , the next job could be to form any pattern maintaining the general position .",
    "most of the existing pattern formation algorithms have assumed that the robots are see through .",
    "thus , designing algorithms for forming patterns by maintaining general position of the robots , may be a direct extension of this work .",
    "c. agathangelou , c. georgiou , and m. mavronicolas . a distributed algorithm for gathering many fat mobile robots in the plane . in _ proceedings of the 32nd acm symposium on principles of distributed computing ( podc ) _ , 250259 , 2013",
    "g. antonio di luna , p. flocchini , s. gan chaudhuri , n. santoro , and g. viglietta . robots with lights : overcoming obstructed visibility without colliding in _ proc .",
    "16th international symposium on stabilization , safety , and security of distributed systems ( sss14 ) _ , to appear .",
    "g. antonio di luna , p. flocchini , f. poloni , , n. santoro , and g. viglietta .",
    "the mutual visibility problem for oblivious robots . in",
    "26th canadian conference on computational geometry ( cccg14 ) _ , to appear .",
    "s. das , p. flocchini , g. prencipe , n. santoro , and m. yamashita .",
    "the power of lights : synchronizing asynchronous robots using visible bits . in _ proceedings of the 32nd international conference on distributed computing systems ( icdcs ) _",
    ", 506515 , 2012 .",
    "a.  efrima and d.  peleg .",
    "distributed models and algorithms for mobile robot systems . in _ proceedings of the 33rd international conference on current trends in theory and practice of computer science ( sofsem ) _ , 7087 , 2007 .",
    "p.  flocchini , n.  santoro , g.  viglietta , and m.  yamashita .",
    "rendezvous of two robots with constant memory . in _ proceedings of the 20th international colloquium on structural information and communication complexity ( sirocco ) _",
    ", 189200 , 2013 .",
    "g.  viglietta .",
    "rendezvous of two robots with visible bits . in _ proc .",
    "9th symp . on algorithms and experiments for sensor systems , wireless networks and distributed robotics ( algosensors )",
    "_ , 291306 , 2013 ."
  ],
  "abstract_text": [
    "<S> the traditional distributed model of autonomous , homogeneous , mobile point robots usually assumes that the robots do not create any visual obstruction for the other robots , i.e. , the robots are see through . in this paper , we consider a slightly more realistic model , by incorporating the notion of _ obstructed visibility _ </S>",
    "<S> ( i.e. , robots are not see through ) for other robots . under the new model of visibility </S>",
    "<S> , a robot may not have the full view of its surroundings . </S>",
    "<S> many of the existing algorithms demand that each robot should have the complete knowledge of the positions of other robots . </S>",
    "<S> since , vision is the only mean of their communication , it is required that the robots are in _ general position _ </S>",
    "<S> ( i.e. , no three robots are collinear ) . </S>",
    "<S> we consider _ asynchronous _ robots . </S>",
    "<S> they also do not have common _ chirality _ ( or any agreement on a global coordinate system ) . in this paper </S>",
    "<S> , we present a distributed algorithm for obtaining a general position for the robots in finite time from any arbitrary configuration . </S>",
    "<S> the algorithm also assures collision free motion for each robot . </S>",
    "<S> this algorithm may also be used as a preprocessing module for many other subsequent tasks performed by the robots . </S>"
  ]
}
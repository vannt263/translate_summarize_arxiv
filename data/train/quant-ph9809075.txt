{
  "article_text": [
    "although the ability of computer is highly progressed , there are several problems which may not be solved effectively , namely , in polynomial time . among such problems ,",
    "np problem and np complete problem are fundamental .",
    "it is known@xcite that all np complete problems are equivalent and an essential question is whether there exists an algorithm to solve a np complete problem in polynomial time .    after pioneering works of feymann@xcite and deutsch@xcite ,",
    "several important works have been done on quantum algorithms by deutsch and josa@xcite , shor@xcite , ekert and josa@xcite and many others@xcite .",
    "the computation in quantum computer is performed on a tensor product hilbert space , and its fundamental point is to use quantum coherence of states .",
    "all mathematical features of quantum computer and computation are summarized in @xcite .    in this paper",
    ", we discuss the quantum algorithm of the sat problem and point out that this problem , hence all other np problems , can be solved in polynomial time by quantum computer if the superposition of two orthogonal vectors @xmath0 and @xmath1 is physically detected .",
    "let @xmath2 be a set .",
    "then @xmath3 and its negation @xmath4 @xmath5 are called literals and the set of all such literals is denoted by + @xmath6 .",
    "the set of all subsets of @xmath7 is denoted by @xmath8 and an element @xmath9 is called a clause .",
    "we take a truth assignment to all variables @xmath10 if we can assign the truth value to at least one element of @xmath11 then @xmath12 is called satisfiable . when @xmath12 is satisfiable , the truth value @xmath13 of @xmath12 is regarded as true , otherwise , that of @xmath12 is false .",
    "take the truth values as ",
    "false@xmath15 then    @xmath16    let @xmath17 be a boolean lattice with usual join @xmath18 and meet @xmath19 and @xmath20 be the truth value of a literal @xmath21 in @xmath22 then the truth value of a clause @xmath12 is written as @xmath23 moreover the set @xmath24 of all clauses @xmath25 @xmath26 is called satisfiable iff the meet of all truth values of @xmath27 is 1 ; @xmath28 @xmath29 thus the sat problem is written as follows :    * definition 1 .",
    "* _ sat problem : given a set @xmath2 and a set @xmath30 of clauses , determine whether @xmath24 is satisfiable or not .",
    "_    that is , this problem is to ask whether there exsits a truth assignment to make @xmath24 satisfiable .",
    "it is known@xcite in usual algorithm that it is polynomial time to check the satisfiability only when a specific truth assignment is given , but we can not determine the satisfiability in polynomial time when an assignment is not specified .",
    "let 0 and 1 of the boolean lattice @xmath31 be denoted by the vectors @xmath32 and @xmath33 in the hilbert space @xmath34 , respectively .",
    "that is , the vector @xmath0 corresponds to falseness and @xmath35 does to truth .    as we explained in the previous section , an element @xmath36",
    "can be denoted by 0 or 1 , so by @xmath0 or @xmath37 in order to describe a clause @xmath12 with at most n length by a quantum state , we need the n - tuple tensor product hilbert space @xmath38 @xmath39@xmath34 .",
    "for instance , in the case of @xmath40 , given @xmath41 with an assignment @xmath42 and @xmath43 then the corresponding quantum state vector is @xmath44 so that the quantum state vector describing @xmath12 is generally written by @xmath45 @xmath46 with @xmath47 or @xmath48 ( k=1,2 ) .",
    "the quantum computation is performed by a unitary gate constructed from several fundamental gates such as not gate , controlled - not gate , + controlled - controlled not gate @xcite . once @xmath49 and + @xmath50 are given , the sat is to find the vector @xmath51 @xmath52 where @xmath20 is @xmath53or @xmath35 when @xmath54 or 1 , respectively , and @xmath55 , @xmath56    we consider the quantum algorithm for the sat problem .",
    "since we have @xmath57 variables @xmath58 and a quantum computation produces some dust bits , the assignments of the @xmath57 variables and the dusts are represented by @xmath57 qubits and @xmath59 qubits in the hilbert space @xmath39@xmath60",
    ". moreover the resulting state vector @xmath61 should be added , so that the total hilbert space is    @xmath62    let us start the quantum computation of sat  problem from an initial vector @xmath63 when @xmath64 contains n boolean variables",
    "@xmath65 we apply the discrete fourier transformation denoted by @xmath66 to the part of the boolean variables of the vector @xmath67then the resulting state vector becomes    @xmath68 where @xmath69 is the identity matrix in @xmath70 this vector can be written as    @xmath71    now , we perform the quantum computer to check the satisfiability , which will be done by a unitary operator @xmath72 properly constructed by unitary gates . then after the computation by @xmath72 , the vector @xmath73 goes to    @xmath74    where @xmath75 because @xmath24 contains @xmath76 and @xmath77 are the dust bits produced by the computation . as we will explain in an example below , the unitary operator @xmath72 is concretely constructed .",
    "the final step to check the satisfiability of @xmath24 is to apply the projection @xmath78 to the state @xmath79 mathematically equivalent , to compute the value @xmath80 if the vector @xmath81 exists or the value @xmath82 is not 0 , then we conclude that @xmath24 is satisfiable.the value of @xmath83 corresponds to that of the ramdom algorithm as we will see in an example of the next section and it may or may not be obtained in polynominal time .",
    "let us consider an operator @xmath84 given by @xmath85 and apply it to the vector @xmath79 where @xmath86 and @xmath87  and @xmath88  is a certain constant describing the phase of the vector @xmath89 the resulting vector is the superposition of two vectors with some constants @xmath90 @xmath91 such as    @xmath92 one of which is polarized with @xmath88 and another is non - polarized .",
    "the existence of the mixture of two vectors @xmath0 and @xmath93 is a starting point of quantum computation , which implies the satisfiability .",
    "let us explain the quantum computation for sat in tha case @xmath94 and @xmath95 the resulting state + @xmath96 is written as    @xmath97 in the quantum computation , it is not necessary to substitute all values of @xmath98 @xmath99 as the classical computation , we have only to use a unitary operator @xmath72 for the computation of @xmath100 this unitary operator @xmath72 is constructed as follows : let @xmath101 @xmath102and @xmath103 be not gate on @xmath34 , controlled - not gate on @xmath104 and controlled - controlled - not gate on @xmath105 , respectively , which are given by    @xmath106 then the unitary operator @xmath72 is determined by the combination of the above three unitaries as    @xmath107 where , for instance ,    @xmath108    and other @xmath109 are similarly constructed ( see the computation diagram 1 ) . in this case , we need @xmath110 dust bits ( the number of the dust bits needed in a general case is counted in the next section ) , so that @xmath72 is operated on the hilbert space @xmath111 .    starting from the initial vector @xmath112",
    "the final vector is    @xmath113    where we used the notation    @xmath114 applying the operator @xmath115 of the previous section to the vector @xmath116 we obtain    @xmath117 which is the superposition of two vectors @xmath0 and the polarized vector @xmath118 moreover when we measure the operator @xmath119 in the state @xmath120 we obtain    @xmath121 these conclude the satisfiability of @xmath24 .",
    "here we discuss the number of steps for the quantum algorithm of the sat problem .",
    "the size of input with n variables @xmath3 and their negations @xmath122 @xmath123and also @xmath124 is @xmath125 like the classical algorithm because @xmath126 the number of the elements in @xmath127 is at most @xmath57 , so that it is the polynominal order @xmath128 the number of the dust bits to compute @xmath129 is caused from that of the operations and substitutions of and and or , so that the maximum number ( complexity ) @xmath130 of the dust bits needed is the same as that of the classical case , namely , @xmath131 ( the numbers of and and or operations ) @xmath132 ( the steps to take the negation ) = ( @xmath133    the steps @xmath134 needed to obtain the vector @xmath135 is counted as follows : fisrt take @xmath48 step for the discrete fourier transform to get the entangled vector , and we need @xmath136 steps for truth assignment and substitution to @xmath57 variables . secondly to compute the logical sum in each clause and take their logical product , the complexity corresponding to the logical sum",
    ", whose gate is made from four unitaries , is @xmath137 and that corresponding to the logical product is @xmath138 thus @xmath139 @xmath140    finally to check the satisfiability of @xmath24 , we have to look at the situation of @xmath141 registered at the last position of the tensor product state such as the last position of physical registers ( e.g. , spins ) lined up .",
    "this can be easily done by applying the operator @xmath115 to @xmath79 and the resulting vector is a superposition of two vectors @xmath0 and @xmath142 we can obtain in polynominal time ( at most @xmath143 the vector @xmath144 and the value of @xmath145 for the projection @xmath146 if needed .",
    "the existence of the above superposition is a starting point of quantum computation , so that it should be physically detected being different from both @xmath0 and @xmath1 , which implies the satisfiability .",
    "thus the quantum algorithm of the sat problem is in polynominal order ."
  ],
  "abstract_text": [
    "<S> in complexity theory , there exists a famous unsolved problem whether np can be p or not . in this paper </S>",
    "<S> , we discuss this aspect in sat ( satisfiability ) problem , and it is shown that the sat can be solved in plynomial time by means of quantum algorithm . </S>"
  ]
}
{
  "article_text": [
    "hopf monads were introduced in @xcite as a generalization of hopf algebras to the context of monoidal categories with duals ( also called rigid , or autonomous categories ) , and subsequently extended in @xcite to arbitrary monoidal categories .",
    "the initial motivation was to describe the center @xmath3 of a rigid category @xmath0 in algebraic terms .",
    "it turns out that , under reasonable assumptions , @xmath3 is isomorphic as a braided category to the category of modules over a quasitriangular hopf monad @xmath4 on @xmath0 .",
    "the monadicity part of this result was proved independently by day and street @xcite .",
    "this description of the center , and the theory of the double of a hopf monad developped in @xcite , were used by turaev and virelizier to compare the two main families of tqfts for @xmath5-manifolds , namely the turaev - viro and the reshetikin - turaev tqfts @xcite .",
    "hopf monads have also been applied in @xcite and @xcite to the study of tensor categories . in particular , the action of a finite group on a tensor category , and the corresponding equivariantization , can be interpreted in terms of hopf monads .",
    "more precisely , let @xmath1 be a finite group acting on a tensor category @xmath0 , each @xmath6 acting by a tensor autoequivalence @xmath7 .",
    "then @xmath8 is a hopf monad on @xmath0 , whose category of modules is the equivariantization of @xmath1 under the group action .",
    "it should be noted , however , that group actions and equivariantizations can not be interpreted in monadic terms in general . indeed ,",
    "monads arise in the presence of an adjunction , and in general , the forgetful functor of an equivariantization does not have a left adjoint , so that there is no associated monad .    in this article",
    ", we introduce the formalism of hopf polyads in order to unify hopf monads and group actions on monoidal categories .",
    "a polyad @xmath9 is a lax functor from a small category @xmath10 ( the _ source _ of the polyad ) to the bicategory of categories .",
    "it associates to every object @xmath11 of @xmath10 a category @xmath12 and to every morphism @xmath13 of @xmath10 , a functor @xmath14 , and is equipped with products @xmath15 indexed by composable pairs @xmath16 of morphisms in @xmath10 and units @xmath17 indexed by objects @xmath11 of @xmath10 , subject to associativity and unity axioms .",
    "in particular the endofunctor @xmath18 is a monad on @xmath12 for each @xmath11 .",
    "when @xmath19 and @xmath20 are isomorphisms , we say that @xmath9 is of action type ( such a data is traditionally called a pseudofunctor ) .",
    "a monad is a special case of a polyad , obtained when @xmath10 is the final category @xmath21 . on the other hand ,",
    "if @xmath1 is a group , denoting by @xmath22 the category having one object @xmath21 , with @xmath23 , then an action - type polyad with source @xmath22 is nothing but an action of the group @xmath1 on a category @xmath24 .",
    "one defines modules over a polyad , which generalize modules over a monad .",
    "however the forgetful functor of the category of modules need not have a left adjoint - that is the main difference between polyads and monads .",
    "the lift construction plays a special role . given a polyad @xmath9 , with source @xmath10 ,",
    "its lift @xmath25 is a new polyad with source @xmath10 canonically associated with @xmath9 , which sends an object @xmath11 of @xmath10 to the category @xmath26 of @xmath18-modules .",
    "this construction can be carried out when @xmath9 is -exact , that is , the categories @xmath12 have reflexive coequalizers which are preserved by the functors @xmath27 .",
    "the polyad @xmath9 and its lift @xmath25 have the same category of modules .",
    "the lift construction generalizes the classical algebraic fact that a bimodule can be lifted to a functor between categories of modules , which still holds in the monadic setting ( theorems  [ thm - eq - fun - bimod ] and  [ thm - eq - comon - bimod ] ) .    a comonoidal polyad is a polyad for which the categories @xmath12 are monoidal , the functors @xmath27 are ( lax ) comonoidal , and the transformations @xmath28 and @xmath29 are comonoidal .",
    "given a comonoidal polyad , one may define a left and a right fusion operator @xmath30 and @xmath31 , which generalize those of a comonoidal monad .",
    "a hopf polyad is a comonoidal polyad whose fusion operators are invertible .",
    "in particular , a hopf monad is just a hopf polyad with source @xmath21 .",
    "the central result of this article is the fundamental theorem of hopf polyads ( theorem  [ thm - fond ] ) .",
    "it asserts that the lift of a -exact transitive hopf polyad is a strong comonoidal polyad of action type .",
    "the transitivity condition is a technical way of saying that the functors @xmath27 are substantial enouggh ( matter - of - factly : each endofunctor @xmath32 is conservative ) . in a sense",
    ", this theorem means that the notion of a hopf polyad is a conceptually economical way of unifying hopf monads and strong ( co)monoidal group actions and pseudofunctors .",
    "we compare hopf polyads and hopf monads , and show that , under certain exactness conditions involving sums , a comonoidal polyad @xmath9 can be ` wrapped up ' into a comonoidal monad @xmath33 having same category of modules , and under stricter conditions ( notably , that @xmath10 be a groupoid ) , @xmath33 is a hopf monad if @xmath9 is a hopf polyad . in the case where @xmath9 is a a group action ,",
    "@xmath33 is the associated hopf monad constructed in @xcite .",
    "we generalize hopf modules to hopf polyads in two ways , and give a decomposition theorem for both , derived from the analogue for hopf monads given in @xcite and improved in @xcite .    as a source of examples ,",
    "we show that hopf categories , as defined by batista , caenepeel and vercruysse in @xcite can be viewed as special cases of hopf polyads in a braided setting , via the notion of a hopf polyalgebra .",
    "lastly , returning to the initial motivation of understanding the center construction , we show that a result due to turaev and virelizier about the structure of the center of a graded fusion category can be understood as a special case of the fundamental theorem of hopf polyads , and can be generalized to locally bounded graded tensor categories ( theorem  [ thm - center - graded ] ) .",
    "this result is based on the properties of a hopf polyad @xmath34 whose source is the category @xmath22 of the group @xmath1 , with , for @xmath6 : @xmath35 whose lift is an action of @xmath1 on the relative center @xmath36 .",
    "the center @xmath3 is the equivariantization of this action .      in section  [ sect - prelims ] , we introduce notations and conventions , review standard facts about monoidal categories , monads , comonoidal functors , and outline the benefits of ` -exactness conditions ' , that is , existence and preservation of reflexive equalizers .",
    "the most important contribution of this section is the notion of bimodule functors over monads , which are in a sense the main building block of the subsequent constructions .",
    "the key point is that , just as bimodules serve to encode right exact functors between categories of modules over rings , -exact bimodule functors serve to encode -exact functors between categories of modules over -exact monads ( theorem  [ thm - eq - fun - bimod ] ) .",
    "the same holds for comonoidal -exact bimodule functors and comonoidal -exact functors between categories of modules over comonoidal -exact monads ( theorem  [ thm - eq - comon - bimod ] ) .    in section  [ sect - hopf - polyad ] ,",
    "we introduce the notions of a polyad , a comonoidal polyad and a hopf polyad .",
    "we define the lift of a polyad , and state and prove the  fundamental theorem of hopf polyads ( theorem  [ thm - fond ] ) .    in section  [ sect - fonct ] , we define the @xmath37-categories of polyads and comonoidal polyads with source @xmath10 , and the pull - back ( source change ) .",
    "we study the special case of ( transitive -exact ) hopf polyads whose source is a connected groupoid .    in section  [ sect - quasitriangular ] ,",
    "we define @xmath38-matrices for comonoidal polyads and quasitriangular comonoidal polyads .    in section  [ sect - polyads - monads ] , we compare hopf polyads and hopf monads .    in section  [ sect - hopfmodrep ] ,",
    "we generalize the notion of a hopf module to hopf polyads in two different ways , which leads to two decomposition theorems .",
    "the subsequent sections are devoted to examples .",
    "section  [ sect - hopf - cats ] compares hopf polyads and hopf categories via the notion of hopf polyalgebras .",
    "hopf categories are special cases of hopf polyalgebras , which in turn can be interpreted as an algebraic representation of so - called ` representable hopf polyads ' .",
    "section  [ sect - center ] introduces the hopf polyad @xmath34 associated with the center of a locally bounded @xmath1-graded tensor category @xmath0 , where @xmath1 is a group .",
    "the group @xmath1 operates on the relative center @xmath36 , the action being the lift of @xmath34 , and the center @xmath3 is monoidal equivalent to the equivariantization of this action .",
    "let @xmath0 be a category .",
    "we denote by @xmath39 the class of objects of @xmath0 and by @xmath40 the set of morphisms in @xmath0 from an object @xmath41 to an object @xmath42 .",
    "the identity functor of  @xmath0 is denoted by @xmath43 .",
    "we will also use the following alternate notation : if @xmath10 is a small category , @xmath44 denotes the set of objects of @xmath10 , @xmath45 the set of morphisms of @xmath10 , and @xmath46 the set of composable pairs of @xmath10 , that is , pairs @xmath47 where @xmath48 and the source of @xmath49 is the target of @xmath50 .",
    "we denote by @xmath21 the final category ( with one object and one morphism ) .",
    "if @xmath1 is a group , we denote by @xmath51 the category with one object @xmath21 whose endomorphisms are the elements of @xmath1 .",
    "if @xmath41 is a set , we denote by @xmath52 the category whose set of objects is @xmath41 , and having exactly one morphism in each hom - set ( which is equivalent to @xmath21 if @xmath53 ) .",
    "lastly , we denote by @xmath54 the category associated with the poset @xmath55 .",
    "a pair of parallel morphisms @xmath56 ^ -{f}\\ar@<-2pt>[r]_-{g } } & y}$ ] in a category @xmath0 is _ reflexive _ if @xmath49 and @xmath50 have a common section , that is , if there exists a morphism @xmath57 such that @xmath58 .",
    "a _ cofork _ in @xmath0 is a diagram @xmath59 ^ -{f}\\ar@<-2pt>[r]_-{g } } & y \\ar[r]^h & z}\\ ] ] such that @xmath60 .",
    "the cofork @xmath61 is _ reflexive _ if the pair @xmath47 is reflexive , and it is _ exact _ if @xmath62 is a coequalizer of the pair @xmath47 .",
    "a _ reflexive coequalizer _ is a coequalizer of a reflexive pair .    on the other hand",
    "the cofork @xmath61 is _ split _ if there exist morphisms @xmath63 , @xmath64 such that @xmath65 , @xmath66 and @xmath67 .",
    "such a pair @xmath68 is a _ splitting _ of @xmath61 .",
    "a split cofork is exact , and indeed universally exact , as its image under any functor is again split , and therefore exact .",
    "a split cofork is exact .",
    "this is perfectly standard , but nonetheless instructive .",
    "let @xmath61 be a cofork as above , with splitting @xmath69 .",
    "let @xmath70 be a morphism such that @xmath71 .",
    "if @xmath72 factorizes as @xmath73 , then @xmath74 , so @xmath75 is unique .",
    "now for @xmath76 , @xmath77 , which shows that @xmath62 is a coequalizer of @xmath47 .",
    "note that the image of a split cofork under any functor is again split , and therefore exact : split coforks are _ universally exact_.    an _",
    "-category _ is a category admitting coequalizers of reflexive pairs .",
    "a functor @xmath78 between -categories is _",
    "-exact _ if it preserves coequalizers of reflexive pairs .",
    "a functor @xmath79 is _ conservative _ if any morphism @xmath49 of @xmath0 such that @xmath80 is an isomorphism of @xmath81 is already an isomorphism of @xmath0 .",
    "we will use the following well - known lemma .",
    "[ lem - coforkex ] let @xmath82 be a conservative -exact functor between -categories .",
    "let @xmath61 be a reflexive cofork in @xmath0 such that @xmath83 is exact .",
    "then @xmath61 is exact .",
    "let @xmath0 be a monoidal category .",
    "given an object @xmath41 of @xmath0 , we denote by @xmath84 the endofunctor of @xmath0 defined on objects by @xmath85 and on morphisms by @xmath86 .",
    "the endofunctor @xmath87 is defined similarly .",
    "a monoidal -category is a monoidal category @xmath0 admitting coequalizers of reflexive pairs , and whose tensor product @xmath88 is -exact .",
    "note that this is equivalent to saying that for every object @xmath41 of @xmath0 , the endofunctors @xmath84 and @xmath87 are -exact .",
    "[ prop - faith ] let @xmath89 be a coalgebra in a monoidal -category .",
    "the following conditions are equivalent :    a.   the endofunctor @xmath90 is conservative ; b.   the endofunctor @xmath91 is conservative ; c.   the cofork @xmath92 ^ -{c \\otimes { \\varepsilon}}\\ar@<-2pt>[r]_-{{\\varepsilon}\\otimes c}}&{\\mathcal{c}}\\ar[r]^{{\\varepsilon}}&{\\mathbb{1}}}$ ] is exact .",
    "[ def - trans ] a coalgebra in a monoidal r - category is _ transitive _ if it satisfies the equivalent conditions of proposition  [ prop - faith ]    by reason of symmetry , it is enough to prove the equivalence of ( i ) and ( iii ) .",
    "observe first that the cofork @xmath93 is split , with splitting @xmath94 : indeed , @xmath95 , @xmath96 and @xmath97 .",
    "therefore , @xmath93 is exact .",
    "in particular , if @xmath98 is conservative , then by lemma  [ lem - coforkex ] @xmath61 is exact , so ( i ) @xmath99 ( iii ) .",
    "conversely , assume @xmath61 is exact and let @xmath100 be a morphism such that @xmath101 is an isomorphism . we have a commutative diagram : @xmath102_{c \\otimes c \\otimes f } { \\ar@<2pt>[r]^-{}\\ar@<-2pt>[r]_- { } } & c \\otimes x \\ar[d]_{c \\otimes f}\\ar[r ] & x\\ar[d]^f \\\\",
    "( { \\mathcal{k } } ) \\otimes y & c \\otimes c \\otimes y { \\ar@<2pt>[r]^-{}\\ar@<-2pt>[r]_- { } } & c \\otimes y \\ar[r ] & y } \\ ] ] whose lines are exact coforks , and since @xmath101 and @xmath103 are isomorphisms , so is @xmath49 .",
    "hence @xmath98 is conservative .",
    "thus ( iii ) @xmath99 ( i ) .",
    "let @xmath104 and @xmath105 be two monoidal categories .",
    "a _ comonoidal functor _ ( also called _ opmonoidal functor _ ) from @xmath0 to @xmath81 is a triple @xmath106 , where @xmath107 is a functor , @xmath108 is a natural transformation , and @xmath109 is a morphism in @xmath81 , such that : @xmath110 a comonoidal functor @xmath106 is _ strong _ ( resp .",
    "_ strict _ ) _ comonoidal _ if @xmath111 and @xmath112 are isomorphisms ( resp . identities ) . in that case",
    ", @xmath113 is a strong ( resp .",
    "strict ) monoidal functor .",
    "a natural transformation @xmath114 between comonoidal functors is _ comonoidal _ if it satisfies : @xmath115    notions of monoidal functor and monoidal natural transformation are dual to the notions of comonoidal functor and comonoidal natural transformation .",
    "as noted above , strong monoidal and strong comonoidal functors are essentially the same thing .",
    "let @xmath0 , @xmath81 be be monoidal categories and @xmath82 be a comonoidal functor .",
    "half - braiding relative to @xmath78 _ is a pair @xmath116 , where @xmath117 is an object of @xmath81 and @xmath118 is a natural transformation @xmath119 satisfying : @xmath120 half - braidings relative to @xmath78 form a category called the _ center of @xmath81 relative to @xmath78 _ and denoted by @xmath121 , or @xmath122 if the functor @xmath78 is clear from the context .",
    "it is monoidal , with the tensor product defined by @xmath123 and the forgetful functor @xmath124 is monoidal strict .",
    "note that for @xmath125 , @xmath121 is the center @xmath126 of @xmath81 .",
    "now assume @xmath78 is strong monoidal ( in particular , it can be viewed as a comonoidal functor )",
    ". then we have a strong monoidal functor @xmath127 , defined by @xmath128 , where @xmath129 up to the structure isomorphisms of @xmath78 .",
    "let @xmath0 be a category .",
    "the category @xmath130 of endofunctors of @xmath0 is strict monoidal , the tensor product being the composition of endofunctors , and the unit , the identity functor .",
    "monad on @xmath0 _ is an algebra in @xmath131 , that is , a triple @xmath132 , where @xmath9 is an endofunctor of @xmath0 and @xmath133 , @xmath134 are natural transformations satisfying : @xmath135    a _ @xmath9-module in @xmath0 _ ( often called a @xmath9-algebra ) is a pair @xmath136 , where @xmath137 is an object of @xmath0 and @xmath138 is an action of @xmath9 on @xmath137 , that is , a morphism @xmath139 satisfying : @xmath140    morphisms between @xmath9-modules @xmath136 and @xmath141 are morphisms @xmath142 in @xmath0 satisfying @xmath143 ; with these morphisms , @xmath9-modules form a category denoted by @xmath144 .",
    "the _ forgetful functor _",
    "@xmath145 is conservative .",
    "it has a left adjoint , namely the _ free module functor _ @xmath146 the adjunction morphisms are @xmath147 and @xmath148e , defined by @xmath149",
    ".    conversely , let @xmath150 be an adjunction , that is , a pair of functors @xmath151 , @xmath82 , with adjunction morphisms @xmath152 and @xmath153 , satisfying : @xmath154 then @xmath155 is a monad on @xmath0 , with product @xmath156 and unit @xmath20 , so that we have a new adjunction @xmath157 .",
    "the two adjunctions are related by the _ comparison functor _ @xmath158",
    "the adjunction @xmath150 is _ monadic _ if @xmath159 is an equivalence .",
    "let @xmath0 , @xmath10 be two categories .",
    "a functor @xmath151 is _ monadic _ if it has a left adjoint @xmath78 and the comparison functor of the adjunction @xmath160 is an equivalence .",
    "beck s theorem characterizes monadic functors in general .",
    "it can be restated in simple terms under -exactness conditions :    ( weak monadicity )    let @xmath0 , @xmath81 be -categories and let @xmath151 be an -exact functor .",
    "the following assertions are equivalent :    a.   @xmath161 is monadic ; b.   @xmath161 is conservative and has a left adjoint @xmath78 .    if such is the case , the monad @xmath162 is -exact .",
    "monads which are -exact are well - behaved :    let @xmath0 be a -category , and let @xmath9 be a monad on @xmath0 .",
    "the following assertions are equivalent :    a.   @xmath9 is -exact ; b.   @xmath144 is a -category and @xmath163 is -exact .",
    "let @xmath0 , @xmath81 be two categories",
    ".    given a monad @xmath132 on @xmath0 , a _",
    "left action of @xmath9 _ on a functor @xmath164 is a natural transformation @xmath165 satisfying @xmath166 a _",
    "left @xmath9-module functor with source @xmath81 _ is a functor @xmath167 endowed with a left action of @xmath9 . given two such left @xmath9-modules functors @xmath168 and @xmath169 with source @xmath81 , a natural transformation @xmath170 is _",
    "left @xmath9-linear _ if it satisfies : @xmath171 .",
    "similarly , given a monad @xmath172 on @xmath81 , a _",
    "right action of @xmath9 _ on a functor @xmath164 is a natural transformation @xmath173 satisfying @xmath174 a _",
    "right @xmath175-module functor with target @xmath0 _ is a functor @xmath167 endowed with a right action of @xmath175 . given two such right @xmath175-modules functors @xmath176 and @xmath177 with target @xmath0 , a natural transformation @xmath170 is _",
    "right @xmath9-linear _ if it satisfies : @xmath178 .",
    "lastly , given both a monad @xmath9 on @xmath0 and a monad @xmath175 on @xmath81 , a _",
    "@xmath9-@xmath175-bimodule functor _ is a functor @xmath167 endowed with a left action @xmath179 of @xmath9 and a right action @xmath180 of @xmath175 which commute , that is , which satisfy @xmath181 .",
    "we denote by @xmath182 the _ category of @xmath9-@xmath175-bimodule functors _ , whose morphisms are natural transformations which are both @xmath9-linear on the left and @xmath175-linear on the right . when @xmath183 ( resp .",
    "@xmath184 we obtain the _ category of left @xmath9-module functors with source @xmath81 _ ( resp .",
    "the _ category of right @xmath175-module functors with target @xmath0 _ ) .",
    "a @xmath9-module is nothing but a left @xmath9-module functor with source the initial category @xmath21 , in other words : @xmath185 .",
    "let @xmath9 be a monad on a category @xmath0 , let @xmath175 be a monad on a category @xmath81 , and let @xmath78 be a functor @xmath186 .",
    "then the functor @xmath187 has a canonical structure of @xmath9-@xmath175-bimodule functor .",
    "define natural transformation @xmath188 and @xmath189 , where @xmath190 and @xmath191 are the adjunction coevaluations .",
    "one verifies that @xmath180 and @xmath179 are the left and right actions of a @xmath9-@xmath175-bimodule structure on the functor @xmath192 .",
    "consider a diagram of functors @xmath193^n & { \\mathcal{c}}\\ar[r]^m & { \\mathcal{b}}}$ ] .",
    "let @xmath132 be a monad on @xmath0 , with a left action @xmath180 of @xmath9 on @xmath194 and a right action @xmath179 of @xmath9 on @xmath137 .",
    "we say that @xmath137 and @xmath194 are _ tensorable over @xmath9 _ if for every @xmath41 in @xmath81 , the parallel pair @xmath195",
    "^ -{}\\ar@<-2pt>[r]_- { } } & mn(x)}$ ] admits a coequalizer .",
    "note that this parallel pair is reflexive ( having @xmath196 as common section ) , so that tensorability is ensured whenever @xmath197 is a -category .",
    "when @xmath137 and @xmath194 are tensorable over @xmath9 , we define a functor @xmath198 ^ -{r\\,n}\\ar@<-2pt>[r]_-{m\\,l } } & mn(x ) } ) , \\end{array } \\right.\\ ] ] called the _ tensor product of @xmath137 and @xmath194 over @xmath9_.    note that if @xmath197 , @xmath0 , @xmath81 are -categories and @xmath9 , @xmath137 and @xmath194 are -exact , so is @xmath199 .",
    "the following lemma provides a key example of tensorable functors over a monad :    [ lem - exa - tensorable ] let @xmath132 be a monad on a category @xmath0 . then @xmath200 is a left @xmath9-module functor , and @xmath201 is a right @xmath9-module functor .",
    "morever , @xmath202 and @xmath163 are @xmath9-tensorable , and we have a canonical isomorphism @xmath203    the left action of @xmath9 on @xmath163 is @xmath204 , and its right action on @xmath202 is @xmath205 , where @xmath149 .",
    "let @xmath137 be a @xmath9-module , with action @xmath139 .",
    "we have a reflexive cofork in @xmath144 : @xmath206 ^ -{t \\delta}\\ar@<-2pt>[r]_-{\\mu_{m } } } & f_t u_t m \\ar[r]^\\rho & m}.\\ ] ] a common section of the parallel pair is given by @xmath207 .",
    "let us prove the exactness assertion .",
    "let @xmath194 be a @xmath9-module , with action @xmath208 , and let @xmath209 be a @xmath9-linear morphism coequalizing the parallel pair . if @xmath210 is such that @xmath211 , then @xmath212 = @xmath50 , hence the uniqueness of such a @xmath50 . now setting @xmath213 ,",
    "note first that @xmath214 , as required , and moreover @xmath50 is @xmath9-linear : @xmath215 .",
    "this shows the exactness of the above cofork .",
    "the coequalizer being unique up to unique isomorphism , we obtain a canonical isomorphism : @xmath216 .",
    "if in addition @xmath175 is a monad on @xmath81 , @xmath217 a -exact monad on @xmath197 , @xmath137 is a @xmath217-@xmath9-bimodule functor and @xmath194 , a @xmath9-@xmath175-bimodule functor , then the left action of @xmath137 and the right action of @xmath194 define a structure of @xmath217-@xmath175-bimodule functor on @xmath199 , hence a functor @xmath218    [ thm - eq - fun - bimod ] let @xmath0 , @xmath81 be -categories and let @xmath9 , @xmath175 be -exact monads on @xmath0 and @xmath81 respectively .",
    "the assignment @xmath219 induces an equivalence of categories @xmath220 where @xmath221 denotes the full subcategory of @xmath179-exact functors , and @xmath222 , the full subcategory of bimodules whose underlying functor is -exact .",
    "a quasi - inverse of @xmath223 is given by @xmath224 .",
    "in view of the above considerations , the functors @xmath223 and @xmath225 are clearly well - defined , and all we have to do is check that they are quasi - inverses .",
    "denote by @xmath19 be the product of @xmath175 and by @xmath20 its unit .",
    "let @xmath137 be a -exact @xmath9-@xmath175-bimodule functor , and let @xmath226 be the right action of @xmath175 on @xmath137 .",
    "we have @xmath227 , so @xmath228 .",
    "hence for @xmath229 an exact cofork : @xmath230 ^ -{r p}\\ar@<-2pt>[r]_-{m \\mu } } & mp x\\ar[r ] & { m^\\sharp}^\\flat x}.\\ ] ] on the other hand , the cofork : @xmath231 ^ -{r p}\\ar@<-2pt>[r]_-{m \\mu } } & mp x\\ar[r]^r & mx}\\ ] ] is split , with splitting @xmath232 , and therefore exact . by universality of the coequalizer",
    ", we have a canonical isomorphism @xmath233 .",
    "now let @xmath234 be a -exact functor .",
    "for each @xmath175-module @xmath137 , @xmath235 now by lemma  [ lem - exa - tensorable ] , we have a canonical isomorphism : @xmath236 , and by composing this with @xmath78 , which is -exact , we obtain a canonical isomorphism @xmath237 .",
    "the following lemma relates the composition of functors to the tensor product of bimodules .",
    "[ lem - comp - tens ] let @xmath197 , @xmath0 , @xmath81 be -categories and let @xmath217 , @xmath9 , @xmath175 be -exact monads on @xmath197 , @xmath0 , @xmath81 respectively .",
    "let @xmath137 be a -exact @xmath217-@xmath9-bimodule functor and let @xmath194 be a -exact @xmath9-@xmath175-bimodule functor .",
    "we have a canonical isomorphism in @xmath238 : @xmath239    let @xmath240 and @xmath241 . according to lemma  [ lem - exa - tensorable ] , we have a canonical isomorphism :",
    "@xmath242 composing this isomorphism on the left with @xmath243 ( which is -exact ) and on the right , with @xmath244 , we obtain an isomorphism @xmath245 , and we conclude by observing that @xmath246 and @xmath247 .",
    "let @xmath0 be a monoidal category .",
    "comonoidal monad _ on @xmath0 is a monad @xmath132 on @xmath0 endowed with a comonoidal structure @xmath248 such that @xmath19 and @xmath20 are comonoidal natural transformations .",
    "if @xmath9 is a comonoidal monad on @xmath249 , then @xmath144 admits a unique monoidal structure such that @xmath145 is comonoidal strict .",
    "the tensor product of @xmath144 is defined by @xmath250 and its unit object is @xmath251 .",
    "comonoidal monads are related to comonoidal adjunctions .",
    "comonoidal adjunction _ is an adjunction @xmath150 , where @xmath252 , @xmath253 are comonoidal functors between monoidal categories @xmath0 and @xmath81 , and the adjunction morphisms @xmath153 , @xmath254 are comonoidal .",
    "note that these conditions imply that @xmath161 is actually strong comonoidal .",
    "given such a comonoidal adjunction , @xmath255 is a comonoidal monad on @xmath0 , and the comparison functor @xmath256 is strong comonoidal .",
    "in particular , if the adjunction is monadic , @xmath159 is a ( strong ) monoidal equivalence .",
    "if @xmath0 is a monoidal -category and @xmath9 a -exact comonoidal monad on @xmath0 , then @xmath144 is a monoidal -category .",
    "the _ left and right fusion operators _ @xmath30 and @xmath31 of a comonoidal monad @xmath9 on a monoidal category @xmath0 are the natural transformations @xmath257 and @xmath258 for @xmath41 , @xmath42 in @xmath0 .",
    "a comonoidal monad is a _ left hopf monad _",
    "_ right hopf monad _ ) if its left ( resp .",
    "right ) fusion operator is an isomorphism .",
    "hopf monad _ if both fusion operators are isomorphisms .",
    "let @xmath9 be a comonoidal monad on a monoidal category @xmath0 , and @xmath175 be a comonoidal monad on a monoidal category @xmath81 .",
    "comonoidal @xmath9-@xmath175-bimodule functor _ is a comonoidal functor @xmath167 endowed with a @xmath9-@xmath175-bimodule functor structure such that the left action @xmath259 and the right action @xmath260 are comonoidal natural transformations .",
    "comonoidal @xmath9-@xmath175-bimodule functors form a category @xmath261 , whose morphism are bimodule morphisms which are comonoidal natural transformations .",
    "the results of section  [ sect - bimod - fun ] can be adapted in a straightforward way to comonoidal bimodule functors .",
    "notably , if @xmath262 is a comonoidal functor , then @xmath263 is a @xmath9-@xmath175-comonoidal bimodule functor .",
    "if @xmath217 is a -exact comonoidal monad on a monoidal category @xmath197 , @xmath175 a comonoidal monad on @xmath81 , @xmath137 is a comonoidal @xmath217-@xmath9-bimodule functor and @xmath194 , a comonoidal @xmath9-@xmath175-bimodule functor , then @xmath199 is a comonoidal @xmath217-@xmath175-bimodule functor , hence a functor @xmath264    [ thm - eq - comon - bimod ] let @xmath0 , @xmath81 be monoidal -categories and let @xmath9 , @xmath175 be -exact comonoidal monads on @xmath0 and @xmath81 respectively .",
    "the assignment @xmath219 induces an equivalence of categories @xmath265 where @xmath266 denotes the full subcategory of @xmath179-exact comonoidal functors , and @xmath267 , the full subcategory of comonoidal bimodules whose underlying functor is -exact .",
    "a quasi - inverse of @xmath223 is given by @xmath224 .",
    "[ lem - comon - tens ] let @xmath197 , @xmath0 , @xmath81 be monoidal -categories and let @xmath217 , @xmath9 , @xmath175 be comonoidal -exact monads on @xmath197 , @xmath0 , @xmath81 respectively .",
    "let @xmath137 be a -exact comonoidal @xmath217-@xmath9-bimodule functor , and @xmath194 be a -exact comonoidal @xmath9-@xmath175-bimodule functor .",
    "we have a canonical comonoidal isomorphism in @xmath268 : @xmath239",
    "a _ polyad _ consists in a set of data @xmath269 , where    1 .",
    "@xmath10 is a category , 2 .",
    "@xmath270 is a family of categories indexed by the objects of @xmath10 , 3 .",
    "@xmath271 is a family of functors indexed by the morphisms of @xmath10 , whith @xmath272 for @xmath273 , 4 .",
    "@xmath274 is a collection of natural transformations indexed by composable pairs of morphisms of @xmath10 , with @xmath275 , 5 .",
    "@xmath276 is a collection of natural transformations indexed by objects of @xmath10 , with @xmath277 for @xmath278 ,    subject to the following axioms :    a.   given three composable morphisms @xmath279 in @xmath10 , @xmath280 b.   given a morphism @xmath281 in @xmath10 : @xmath282    if @xmath269 is a polyad , the category @xmath10 is called",
    "the _ source _ of @xmath9 . a polyad with source @xmath10",
    "is also called a @xmath10-polyad .",
    "we denote by @xmath283 the category @xmath284 .",
    "the polyad @xmath9 is said to be _ of action type _ if the natural transformations @xmath19 and @xmath20 are isomorphisms .    a @xmath10-polyad is nothing but a lax functor from @xmath10 to the bicategory of categories .",
    "it is of action type if it is a pseudofunctor .",
    "a @xmath21-polyad @xmath9 , where @xmath21 denotes the initial category , is nothing but a monad @xmath9 on a category @xmath0 .",
    "a @xmath54-polyad , where @xmath54 denotes the category associated with the poset @xmath285 , is a bimodule functor , that is , it consists in the following data : a monad @xmath286 on a category @xmath287 , a monad @xmath288 on a category @xmath2 , and a @xmath288-@xmath286-bimodule functor @xmath137 .",
    "[ exa - act ] if @xmath1 is a group , a action - type @xmath51-polyad @xmath9 is nothing but an action of the group @xmath1 on a category @xmath0 .",
    "let @xmath269 be a polyad .",
    "a _ @xmath9-module _ consists in a pair @xmath289 as follows :",
    "1 .   @xmath290 is an object of @xmath283 , 2 .",
    "@xmath291 , where for @xmath13 in @xmath45 , @xmath292 is a morphism @xmath293 in @xmath12 ,    subject to the following axioms :    a.   given @xmath294 , @xmath295 , @xmath281 , the following diagram commutes : @xmath296^{t_a(\\rho_b ) } \\ar[d]_{{\\mu_{a , b}}_{x_k } } & t_a(x_j ) \\ar[d]^{\\rho_a}\\\\ t_{ab}(x_k ) \\ar[r]_{\\rho_{ab } } & x_i } \\ ] ] b.   given @xmath278 , @xmath297 .    given a polyad @xmath9 , @xmath9-modules form a category which we denote by @xmath298 . a morphism between @xmath9-modules @xmath289 and @xmath299 is a morphism @xmath300 in @xmath283 such that for any @xmath281 in @xmath45 , the following square commutes : @xmath301^{t_a(f_j ) } \\ar[d]_{\\rho_a } & t_a(x'_j)\\ar[d]^{\\rho'_a}\\\\ x_i \\ar[r]_{f_i } & x'_i\\ , . } \\ ] ]    note that the forgetful functor @xmath302 is conservative , but in general it does not have a left adjoint .",
    "see section  [ sect - polyads - monads ] for a discussion of this point .",
    "[ exa - constant ] let @xmath10 be a small category and @xmath303 be an arbitrary category . define a @xmath10-polyad @xmath304",
    ". then @xmath305 .",
    "a polyad of the form @xmath306 is a _ constant polyad_.    [ lem - act - inv ] let @xmath9 be an action - type polyad , and @xmath307 be a @xmath9-module . if @xmath308 is invertible , then @xmath292 is an isomorphism .    for @xmath278 , @xmath297 and",
    "since @xmath29 is an isomorphism , so is @xmath309 . for @xmath13",
    ", @xmath310 is an isomorphism , so @xmath292 has a right inverse .",
    "now by symmetry , @xmath311 has a right inverse too , as well as @xmath312 .",
    "since @xmath292 s right inverse is invertible , @xmath292 itself is invertible .",
    "[ exa - equiv ] an action of a group @xmath1 on a category @xmath303 can be viewed as an action - type @xmath51-polyad @xmath9 , and @xmath298 is the equivariantization of the category @xmath0 under the action of @xmath1 . if @xmath289 is a @xmath9-module , @xmath138 is an isomorphism .",
    "there is an alternate , ` bigger ' notion of modules over a polyad , which we call representations .",
    "let @xmath313 be a polyad .",
    "a _ representation of @xmath9 _ is a set of data @xmath314 , where :    1 .",
    "@xmath315 , with @xmath316 for @xmath13 in @xmath317 , 2 .",
    "@xmath318 , where @xmath319 is a morphism @xmath320 for @xmath321 in @xmath46 ,    with the following axioms :    1 .   for @xmath322 composable morphisms in @xmath10 ,",
    "@xmath323 2 .",
    "for @xmath13 in @xmath317 , @xmath324    denote by @xmath325 the category of representations of @xmath9 , a morphism between two representations @xmath314 and @xmath326 being a family of morphisms @xmath327 such that @xmath328 for @xmath294 .    for @xmath314 representation of @xmath9 , define an object @xmath329 of @xmath283 by @xmath330    convesely , for @xmath331 , define a representation @xmath332 of @xmath9 by @xmath333    [ thm - rep ] the assignments @xmath334 and @xmath335 define functors : @xmath336 moreover , @xmath337 a left adjoint of @xmath338 , with adjunction morphisms @xmath339 in particular , if @xmath9 is of action type and @xmath10 is a groupoid , then @xmath340 is an equivalence .    by straightforward computation .",
    "the last observation deserves an explanation .",
    "if @xmath9 is of action type , then @xmath20 is an isomorphism , hence @xmath337 quasi - inverse to @xmath338 on the right .",
    "if in addition @xmath10 is a groupoid , @xmath341 is invertible because the morphisms @xmath292 are invertible , hence @xmath337 is also quasi - inverse to @xmath338 on the left .",
    "the inverse of @xmath342 is the compositum of the morphisms : @xmath343    representations of polyads correspond with the representations of a hopf category considered in @xcite . for a monad ,",
    "that is , a @xmath21-polyad , representations and modules coincide .",
    "they differ in general , for instance if @xmath9 is the polyad of the action of a group @xmath1 on a category @xmath10 , @xmath298 is the equivariantization , whereas @xmath325 is equivalent to @xmath0 by theorem  [ thm - rep ] .",
    "however representations can be seen as a modules via the notion of pull - back , see lemma  [ lem - mod - rep ] . since the focus of the present work is on group actions , equivariantizations and generalizations thereof , we will prefer modules to representations . in section  [ sect - hopfmodrep ]",
    ", we will see that hopf modules can be generalized to the framework of polyads in two ways , either as modules endowed with a comodule structure ( hopf modules ) , or as representations endowed with a comodule structure ( hopf representations ) .",
    "the decomposition theorem for hopf modules extends to both of these notions , but the hopf representation version is more natural .",
    "a polyad @xmath344 is said to be @xmath179-exact if for each @xmath278 , @xmath12 is a -category ( _ i.e. _ admits reflexive coequalizers ) and for each @xmath281 in @xmath45 , the functor @xmath272 is -exact ( _ i.e. _ preserves reflexive coequalizers ) .",
    "let @xmath345 be a -exact polyad .",
    "for @xmath278 , @xmath346 is a r - exact monad on @xmath12 .",
    "set @xmath347 . for @xmath348 , @xmath272 is a r - exact @xmath18-@xmath349-bimodule functor , and in view of theorem  [ thm - eq - fun - bimod ] , it lifts to a r - exact functor @xmath350 . set @xmath351 .    by lemma  [ lem - comp - tens ] , for @xmath294 we have @xmath352 , so that @xmath353 induces a natural transformation @xmath354 .",
    "similarly , for @xmath278 , @xmath355 induces a natural transformation @xmath356 .",
    "let @xmath313 be a -exact polyad .",
    "then with the above notations @xmath357 is an -exact polyad .",
    "moreover , @xmath358 is the identity for @xmath278 .",
    "the polyad @xmath25 is called the _ lift of the polyad @xmath9_.    the axioms of a polyad for @xmath25 result from the axioms for @xmath9 , since the structure of @xmath25 is induced by that of @xmath9 by quotienting .",
    "moreover @xmath359 is the identity monad of @xmath360 , and in particular @xmath358 is the identity .    given a @xmath25-module @xmath289 , we define a @xmath9-module @xmath361 as follows : for @xmath278 , @xmath362 , and for @xmath13 in @xmath45 , @xmath363 is the compositum of @xmath364    if @xmath9 is an -exact polyad , the assignment @xmath365 defines an isomorphism of categories @xmath366    if @xmath367 is a @xmath9-module , define a @xmath25-module @xmath368 as follows . for @xmath369 , @xmath370 is the @xmath18-module @xmath371 . for @xmath13 in @xmath45 ,",
    "the morphism @xmath372 induces a morphism @xmath373 of @xmath18-modules @xmath374 .",
    "one verifies that the assignment @xmath375 so defined is inverse to the assignment @xmath365 .",
    "a _ comonoidal polyad _ is a polyad @xmath345 endowed with a monoidal structure on the category @xmath12 for each @xmath278 , and of a comonoidal structure on the functor @xmath27 for each morphism @xmath376 in @xmath10 , in such a way that @xmath19 and @xmath20 are comonoidal , that is , the natural transformations @xmath28 for @xmath294 and @xmath29 for @xmath278 are comonoidal .",
    "for instance , the compatibility between the product and the comonoidal structure is expressed by the commutativity of the diagram : @xmath377_{{\\mu_{a , b}}_{x \\otimes y } } \\ar[r]^{t_at^2_b(x , y ) } & t_a(tbx \\otimes t_by ) \\ar[r]^{t^2_a(t_bx , t_by ) } & t_a t_b x \\otimes t_a t_b y \\ar[d]^{{\\mu_{a , b}}_x \\otimes { \\mu_{a , b}}_y}\\\\ t_{ab}(x \\otimes y ) \\ar[rr]_{t^2_{ab}(x , y ) } & & t_{ab}x \\otimes t_{ab } y. } \\ ] ] for @xmath321 in @xmath46 and @xmath378 in @xmath379 .    a comonoidal polyad @xmath9 is said to _ preserve tensor products _",
    "_ tensor units _ ) if for each @xmath308 , the comonoidal functor @xmath27 preserves tensor products ( resp .",
    "tensor units ) .",
    "strong comonoidal polyad _ is a comonoidal polyad which preserves tensor products and tensor units .",
    "a comonoidal polyad @xmath313 is _",
    "-exact _ if it is -exact as a polyad and the categories @xmath12 are monoidal -categories",
    "( that is , their tensor products are -exact in each variable ) .",
    "if such is the case , @xmath9 is _ transitive _ if for each @xmath13 in @xmath45 , @xmath380 is a transitive coalgebra ( see definition  [ def - trans ] ) in the monoidal r - category @xmath12 .",
    "[ prop - comopo ] let @xmath9 be an -exact comonoidal polyad",
    ". then    1 .",
    "@xmath25 is an -exact comonoidal polyad ; 2 .",
    "the canonical equivalence of categories @xmath381 is a srtict monoidal equivalence .",
    "results from the basic properties of comonoidal monads and comonoidal bimodule functors , see sections  [ sect - comohomo ] and  [ sect - cobifun ] .    given a comonoidal polyad @xmath382 , the _ left ( resp .",
    "right ) fusion operator of @xmath9 _ , denoted @xmath30 ( resp @xmath31 ) is a collection of natural tranformations indexed by composable pairs @xmath294 , @xmath321 , defined as follows : @xmath383 and @xmath384 for @xmath41 , @xmath42 objects of @xmath379 and @xmath385 respectively .",
    "[ prop - fusion ] the fusion operators of a comonoidal polyad @xmath9 satisfy :    1 .",
    "for @xmath322 in @xmath10 and @xmath386 : @xmath387 @xmath388 2 .   for @xmath13 in @xmath45 , @xmath389 :",
    "@xmath390 @xmath391 3 .",
    "for @xmath13 in @xmath45 , @xmath392 : @xmath393 @xmath394 4 .   for @xmath321 in @xmath10 and @xmath395 : @xmath396 @xmath397 5 .   for @xmath321 in @xmath10 and @xmath398",
    ": @xmath399 @xmath400 6 .   for @xmath321 in @xmath10 and @xmath401 : @xmath402 @xmath403 7 .   for @xmath322 in @xmath10 and @xmath386 , @xmath404 , the _ pentagon equations _",
    ": + @xmath405 @xmath406 @xmath407 @xmath408    these formulae result from the axioms by straightforward computation .      a _ left ( resp .",
    "right ) hopf polyad _ is a comonoidal polyad whose left ( resp .",
    "right ) fusion operator is an isomorphism .",
    "hopf polyad _ is a comonoidal polyad both of whose fusion operators are invertible .",
    "a hopf monad can be viewed as a hopf polyad with source @xmath21 .",
    "an action - type comonoidal polyad which preserves tensor products is a hopf polyad ( by definition of the fusion operators ) .",
    "[ th - hopf ] if @xmath9 is an -exact left hopf ( resp .",
    "right hopf , resp .",
    "hopf ) polyad , so is its lift @xmath25 .",
    "let us prove the left - handed version .",
    "assume @xmath9 is left hopf .",
    "the left fusion operator of @xmath25 : @xmath409 is a natural transformation between -exact functors .",
    "we have the following lemma .",
    "let @xmath0 be a category , @xmath9 a monad on @xmath0 , and let @xmath410 be two functors preserving reflexive coequalizers . if @xmath411 is a natural transformation such that for any @xmath412 , @xmath413 is an isomorphism , then @xmath414 is an isomorphism .",
    "let @xmath137 be a @xmath9-module , with action @xmath415 , and let us show that @xmath416 is an isomorphism .",
    "we have an exact reflexive cofork in @xmath144 : @xmath417 ^ -{f_t\\delta}\\ar@<-2pt>[r]_-{{\\varepsilon}f_t(m ) } } & f_t(m )   \\ar[r]^\\delta & m}\\ ] ] hence a commutative diagram in @xmath81 : @xmath418_{\\alpha_{f_t t(m ) } } { \\ar@<2pt>[r]^-{af_t\\delta}\\ar@<-2pt>[r]_-{a{\\varepsilon}f_t m } } & af_t(m )   \\ar[r]^\\delta \\ar[d]^{\\alpha_{f_t(m ) } } & a(m ) \\ar[d]^{\\alpha_m } \\\\ b f_t t(m ) { \\ar@<2pt>[r]^-{bf_t\\delta}\\ar@<-2pt>[r]_-{b{\\varepsilon}f_t m } } & bf_t(m )   \\ar[r]^\\delta & b(m ) } \\ ] ] where the horizontal lines are exact .",
    "since the left and center vertical arrows are isomorphisms , so is the right one , that is , @xmath416 is an isomorphism .    using the lemma and the fact that @xmath419 is conservative , it is enough to show that @xmath420 is an isomorphism for @xmath41 in @xmath385 and @xmath42 in @xmath379 .",
    "consider the diagram : @xmath421_{\\text{epi . } } \\ar[rrr]^{h^l_{a , b}(t_j x , t_k y)}_\\thickapprox & & & t_at_jx \\otimes t_{ab } t_k y \\ar@{->>}[ddd ] \\ar[ldd]^{{\\mu_{a , j}}_x \\otimes { \\mu_{ab , k}}_{y}}\\\\ & t_a t_j(x \\otimes t_b t_k y ) \\ar[ul]^{\\thickapprox}_{\\quad t_a(h^l_{j , b}(x , t_ky ) ) } \\ar[rru]_{\\quad({\\mathrm{id}}\\otimes \\mu_{a , b})(t_a t_j)^2 } \\ar[d]_{\\mu_{a , j}(x \\otimes { \\mu_{b , k}}_y ) } & & \\\\ & t_a(x \\otimes t_b y)\\ar[r]^{h^l_{a , b}(x , y)}_{\\thickapprox } \\ar[d]_{\\thickapprox } & t_a x \\otimes t_{ab } y \\ar[rd]^{\\thickapprox}&\\\\ & u_{t_i } { \\widetilde{t}}_af_{t_j}(x \\otimes t_b y ) \\ar[ld]^{\\quad\\quad u_{t_i}{\\widetilde{t}}_a(h^l_{j , b}(x , y))}_\\thickapprox & & u_{t_i}{\\widetilde{t}}_a f_{t_j } x \\otimes u_{t_i}{\\widetilde{t}}_{ab } f_{t_k}y\\ar[d]^{\\thickapprox}\\\\ u_{t_i}{\\widetilde{t}}_a(f_{t_j}x \\otimes { \\widetilde{t}}_b f_{t_k}y ) \\ar[rrr]_{u_{t_i } \\tilde{h}_{a , b}(f_{t_j}(x ) , f_{t_k}(y ) ) } & & & u_{t_i}({\\widetilde{t}}_a f_{t_j } x \\otimes { \\widetilde{t}}_{ab } f_{t_k}y ) } \\ ] ] the outer square commutes , and one checks easily that the inner cells commute , except the bottom hexagon .",
    "by diagram chasing , one sees that the bottom hexagon commutes also , so the bottom arrow @xmath422 is an isomorphism , that is , @xmath25 is a left hopf polyad .",
    "a -exact comonoidal polyad @xmath313 is _ transitive _ if for @xmath13 in @xmath45 , @xmath423 is a transitive coalgebra in @xmath12 .",
    "[ thm - fond](fundamental theorem of hopf polyads )    if @xmath9 is a transitive -exact left or right hopf polyad , then @xmath25 is a strong comonoidal action - type polyad - in other words , a strong comonoidal pseudofunctor .",
    "we begin with the following lemma , which is a special case of the theorem ( when @xmath424 ) .",
    "[ lem - case - eta ] let @xmath313 be a left or right hopf polyad such that @xmath20 is an isomorphism .",
    "then @xmath9 preserves tensor products .",
    "if in addition @xmath9 is transitive , then @xmath9 is strong comonoidal of action type .",
    "assume for instance that @xmath9 is left hopf .",
    "applying proposition  [ prop - fusion ] , assertion ( 2 ) , we see immediately that @xmath425 is an isomorphism for @xmath308 , that is , @xmath9 preserves tensor products .",
    "in particular , the coproduct @xmath426 of the coagebra @xmath427 is an isomorphism , which implies that @xmath428 is an isomorphism .",
    "now assume @xmath9 is transitive .",
    "the functor @xmath429 is conservative , so @xmath430 is an isomorphism , that is , @xmath27 preserves tensor units .",
    "thus , @xmath27 is strong comonoidal .",
    "moreover , by proposition  [ prop - fusion ] , assertion ( 6 ) , @xmath431 is an isomorphism , which shows that @xmath9 is a polyad of action type , and we are done .",
    "now let us prove the general case .",
    "we already know that if @xmath9 is a -exact left ( resp .",
    "right ) hopf polyad , so is @xmath25 ( by proposition  [ prop - comopo ] and theorem  [ th - hopf ] ) .",
    "if in addition @xmath9 is transitive , so is @xmath25 :    [ lem - trans ] if @xmath9 is a -exact transitive left or right hopf polyad , then @xmath25 is transitive .",
    "assume @xmath9 is left hopf .",
    "let @xmath432 , and consider the following : @xmath433 ^ -{t_a(t^0_j)}\\ar@<-2pt>[r]_-{{\\mu_{a , j}}_{\\mathbb{1 } } } } \\ar[d]_{h^l({\\mathbb{1}},{\\mathbb{1 } } ) } & t_a{\\mathbb{1}}\\ar[r]^{t^0_a } \\ar[d]^{{\\mathrm{id}}_{t_a{\\mathbb{1 } } } } & { \\mathbb{1}}\\ar[d]^{{\\mathrm{id}}_{\\mathbb{1}}}\\\\ t_a{\\mathbb{1}}\\otimes t_a{\\mathbb{1}}{\\ar@<2pt>[r]^-{t_a{\\mathbb{1}}\\otimes t^0_a}\\ar@<-2pt>[r]_-{t^0_a \\otimes t_a { \\mathbb{1 } } } } & t_a{\\mathbb{1}}\\ar[r]^{t^0_a } & { \\mathbb{1}}. } \\ ] ] the bottom cofork is exact because @xmath434 is a transitive coalgebra .",
    "the diagram is an isomorphism bewteen the top and bottom coforks ( by proposition  [ prop - fusion ] , assertions  ( 5 ) and  ( 6 ) .",
    "so the top cofork is exact , which means that @xmath435 is isomorphic to @xmath436 , and therefore transitive as a coalgebra .",
    "we conclude by applying lemma  [ lem - case - eta ] to the polyad @xmath25 .    if @xmath9 is a -exact left or right hopf monad , then @xmath25 preserves tensor products .",
    "( results from the previous proof ) .",
    "let @xmath10 be a small category .",
    "we define the _ @xmath37-category of @xmath10-polyads _ @xmath437 as follows .",
    "an object of @xmath438 is a @xmath10-polyad .    given two @xmath10-polyads @xmath345 and @xmath439 , a @xmath440-morphism from @xmath9 to @xmath441 in @xmath437 consists in a pair @xmath442 as follows :    1 .",
    "@xmath443 is a family of functors @xmath444 ; 2 .",
    "@xmath445 is a family of natural transformations @xmath446 , where @xmath13 ;    with the following conditions :    1 .   for @xmath321 in @xmath46 ,",
    "@xmath447 2 .   for @xmath448 ,",
    "@xmath449    given two @xmath440-morphisms @xmath442 , @xmath450 from @xmath9 to @xmath441 , a @xmath37-morphism @xmath451 is a collection @xmath452 of natural transformations @xmath453 such that for any @xmath13 in @xmath45 , @xmath454    the various compositions are defined in the obvious way . in particular , the composition of two @xmath440-morphisms @xmath455 and @xmath456 is the @xmath440-morphism @xmath457 , where @xmath458    we define similarly the _ 2-category of comonoidal @xmath10-polyads _",
    "@xmath459 , whose objects are comonoidal @xmath10-polyads , @xmath440-morphisms are @xmath440-morphisms of @xmath10-polyads",
    "@xmath460 equipped with a comonoidal structure on the functors @xmath461 such that the natural transformations @xmath462 are comonoidal , and @xmath37-morphisms are @xmath37-morphisms of @xmath10-polyads @xmath414 such as the natural transformations @xmath463 are comonoidal .",
    "let @xmath313 be a -exact @xmath10-polyad , with lift @xmath464 .",
    "then we have two @xmath440-morphisms of @xmath10-polyads @xmath465 and @xmath466 , defined as follows : @xmath467 moreover , we have @xmath37-morphisms @xmath468 and @xmath469 , so that @xmath470 is an adjunction in the @xmath37-category @xmath437 . moreover , if @xmath9 is a -exact comonoidal @xmath10-polyad , the above construction can be made comonoidal , and produces an adjunction @xmath470 in @xmath459 .",
    "let @xmath382 be a @xmath10-polyad , and consider a functor @xmath471 .",
    "then one defines a @xmath472-polyad @xmath473 , with @xmath474 , @xmath475 for @xmath476 , @xmath477 for @xmath478 , and @xmath479 for @xmath480 .",
    "if @xmath9 is comonoidal , then @xmath481 becomes comonoidal too .",
    "this construction extends naturally to @xmath37-functors _ pull - back along @xmath49 _ :",
    "@xmath482    note that the pull - back preserves left and right hopf polyads , and it commutes with the lift : if @xmath9 is a -exact ( comonoidal ) polyad , then so is @xmath483 , and @xmath484 .    given a @xmath10-polyad @xmath9 and a functor @xmath471 , we define a functor : @xmath485 by sending a @xmath9-module @xmath289 to the @xmath481-module @xmath299 , with @xmath486 , @xmath487 .",
    "if @xmath9 is a comonoidal @xmath10-polyad , then @xmath488 is strong ( in fact , strict ) comonoidal .    in the case where @xmath49 is a inclusion of a subcategory @xmath472 in @xmath10 , then the pull - back @xmath483 will be denoted by @xmath489 .    using the notion of pull - back",
    ", we can interpret representations of a polyad as modules of a certain pull - back of the same polyad :    [ lem - mod - rep ] let @xmath10 be a category , and define a new category @xmath490 in the following way .",
    "the objects of @xmath490 are the morphisms of @xmath10 : @xmath491 .",
    "given @xmath492 , a morphism @xmath493 is a morphism @xmath376 such that @xmath494 .",
    "note that the map @xmath495 is a bijection between @xmath46 and @xmath496 .",
    "define a functor @xmath497 then , if @xmath9 is a polyad with source @xmath10 , the categories @xmath325 and @xmath498 are canonically isomorphic , and if @xmath9 is a comonoidal polyad , this isomorphism is strict ( co)monoidal .",
    "straightforward .",
    "let @xmath499 be a connected groupoid , and let @xmath9 be a left or right -exact transitive hopf @xmath499-polyad .",
    "let @xmath500 , and denote by @xmath501 the full subcategory of @xmath499 with @xmath502 as unique object .",
    "then :    1 .",
    "the restriction functor @xmath503 is a monoidal equivalence ; 2 .",
    "the group @xmath504 acts on the monoidal category @xmath505 ; 3 .",
    "@xmath298 is monoidally equivalent to the equivariantization of @xmath506 under this action .    in order to simplify the notation , set @xmath507 and @xmath508",
    "in view of proposition  [ prop - comopo ] and the previous remarks , we may replace @xmath9 with @xmath25 , and by theorem  [ thm - fond ] , we may assume that @xmath9 is of action type and strong comonoidal .",
    "in particular , for @xmath308 @xmath27 is strong comonoidal , and it is an equivalence of categories because @xmath376 is invertible .",
    "recall also that in this setting , actions are invertible ( see lemma  [ lem - act - inv ] ) .    in that case , @xmath286 is nothing but an action of the group @xmath1 on @xmath287 , and @xmath509 is the equivariantization of this action .",
    "so all that remains to be proved , is assertion  ( 1 ) .",
    "we construct a quasi - inverse to the restriction functor as follows .",
    "choose for each @xmath278 a morphism @xmath510 in @xmath45 , which is possible because @xmath499 is connected .",
    "let @xmath511 be an object of @xmath509 . here",
    "@xmath512 is an object of @xmath287 and @xmath513 , with @xmath514 .",
    "define an object @xmath289 in @xmath298 as follows . for @xmath515 ,",
    "set @xmath516 . for @xmath13 in @xmath45 , define @xmath517 to be the compositum of @xmath518 where @xmath519 .",
    "one verifies that @xmath289 is a @xmath9-module , and the assignment @xmath520 defines a quasi - inverse to the restriction functor @xmath521 .",
    "if @xmath9 is a comonoidal monad on a monoidal category @xmath0 , an @xmath38-matrix for @xmath9 is a natural transformation is ( see  @xcite ) a natural transformation @xmath522 satisfying the following axioms :    [ thm - rmatbraid ] a @xmath38-matrix for @xmath9 defines a braiding @xmath523 on the monoidal category @xmath144 as follows : @xmath524 and this assignment is a bijection between @xmath38 - -matrices for @xmath9 and braidings on @xmath144 .",
    "let @xmath313 be a comonoidal polyad .",
    "an @xmath38-matrix for @xmath9 is a family @xmath525 , where @xmath526 is a @xmath38-matrix for @xmath18 for each @xmath278 , satisfying the following axiom for each @xmath13 in @xmath45 : @xmath527    note that this set of axioms is redundant , while the last axiom implies the first axiom satisfied by @xmath526 as @xmath38-matrix ( when @xmath528 .    [ thm - polyrmatbraid ]",
    "let @xmath529 be a @xmath38-matrix on a comonoidal polyad @xmath313 , and denote by @xmath530 the braiding on @xmath531 defined by the @xmath38-matrix @xmath526 for @xmath532 .",
    "then , for every functor @xmath471 , @xmath529 defines a braiding @xmath533 on the category @xmath534 , defined as follows : @xmath535 and , given a functor @xmath536 , with the braidings so defined , the restriction functor @xmath537 is braided .",
    "this assignment defines a bijection between @xmath38 - -matrices for @xmath9 and ways of choosing a braiding on each categegory @xmath538 , @xmath471 , so that the restriction functors @xmath539 are braided for @xmath540 .",
    "we verify first that @xmath541 is a braiding on @xmath298 .",
    "we check first that , given @xmath289 and @xmath542 in @xmath298 , @xmath543 is a morphism in @xmath298 from @xmath544 to @xmath545 .",
    "this means that , for @xmath546 in @xmath45 , @xmath547 which results from the following computation : @xmath548 one shows easily that @xmath523 is a natural transformation , and it is a braiding because each @xmath530 is a braiding and the forgetful functor @xmath302 is conservative .",
    "now given a functor @xmath471 , the @xmath38-matrix @xmath529 for @xmath9 defines by restriction a @xmath38-matrix @xmath549 for @xmath550 , which defines therefore a braiding on @xmath551 .",
    "clearly if @xmath552 is a second functor , the strong comonoidal restriction functor @xmath537 induced by @xmath50 preserves braidings .",
    "the assigment @xmath553 is clearly intro , since the braidings @xmath530 , @xmath278 , determine the @xmath38 - -matrix @xmath529 .",
    "let us check that it is onto .",
    "consider a data @xmath554 , where @xmath533 is a braiding @xmath533 on @xmath555 , and the restriction functors @xmath537 ( for @xmath556 ) are braided . in particular , for @xmath278 , let @xmath557 be the functor which sends the unique object of @xmath21 to @xmath11 .",
    "we have @xmath558 , hence a braiding @xmath559 on @xmath531 , which corresponds with an @xmath38-matrix @xmath526 for @xmath18 according to theorem  [ thm - rmatbraid ] .",
    "we verify that @xmath560 is a @xmath38-matrix for @xmath9 .",
    "all we have to check is that for each @xmath13 in @xmath45 : @xmath527 now let @xmath561 be the functor @xmath562 which sends the arrow @xmath563 to @xmath376 .",
    "the category @xmath564 is braided , with braiding @xmath565 .",
    "if @xmath41 is an object of @xmath385 , define an object @xmath566 of @xmath564 by @xmath567 , which @xmath568 , @xmath569 , @xmath570 .",
    "when we express the fact that , for @xmath571 , @xmath572 is a morphism in @xmath564 , we obtain the relation we had to prove .    by construction , the @xmath38-matrix @xmath529 produces the collection of braidings @xmath573 , so we are done .",
    "see remark  [ rem - ex - centralizer ] for examples .",
    "we have noted that , if @xmath9 is a polyad , the forgetful functor @xmath574 does nt have a left adjoint in general . in this section ,",
    "we consider polyads for which such an adjoint exist , and compare them with monads .",
    "let @xmath313 be a polyad , and for @xmath575 , let @xmath576 be the number of arrows in @xmath10 whose target is @xmath11 .",
    "we say that @xmath9 is _",
    "-exact _ if for each @xmath278 , the category @xmath12 admits finite sums , and ( should @xmath576 be infinite ) sums of up to @xmath576 objects , and for @xmath577 in @xmath10 , the functor @xmath27 preserves such sums .    a _",
    "-exact comonoidal polyad _ is a comonoidal polyad @xmath313 which is -exact as a polyad , and in addition , satisfies that for each @xmath278 the tensor product of @xmath12 preserves finite sums and sums of @xmath576 objects in each variable .",
    "a _ hopf ( resp . left hopf , left right hopf ) -exact polyad _ is a comonoidal -exact polyad which is hopf ( resp .",
    "left hopf , resp .",
    "right hopf ) .",
    "if @xmath9 is -exact , set for @xmath578 @xmath579    for @xmath308 , @xmath281 , the product @xmath19 defines a morphism @xmath580    the product @xmath19 and the unit @xmath20 define also morphisms @xmath581 @xmath582    [ thm - poly - mono ] let @xmath9 be a -exact polyad . then",
    "the forgetful functor @xmath302 has a left adjoint , defined by @xmath583 and the adjunction @xmath584 is monadic , with monad @xmath585 ; in fact @xmath298 is isomorphic to the category @xmath586 of @xmath33-modules @xmath283 .",
    "if @xmath9 is a comonoidal polyad , then @xmath33 is a comonoidal monad and @xmath587 as monoidal categories .",
    "let us prove assertion ( 1 ) .",
    "one verifies easily that @xmath585 is a monad .",
    "now consider an object @xmath41 in @xmath283 .",
    "a morphism @xmath588 in @xmath283 is a family of morphisms @xmath589 , with @xmath590 , and , in view of the universal property of sums , it can be viewed also as a family @xmath591 .",
    "moreover , we have the following equivalences : @xmath592 @xmath593 as a result , @xmath179 is an action of the monad @xmath33 on @xmath41 if and only if @xmath594 is an action of the polyad @xmath9 on @xmath41 .",
    "hence an isomorphism of categories : @xmath595 in particular , the forgetful functor @xmath163 is monadic , with left adjoint @xmath596 .    now for assertion ( 2 ) .",
    "it is a general fact that the left adjoint of a strong comonoidal functor admits a unique comonoidal structure such that the adjunction is comonoidal .",
    "hence a comonoidal structure on the monad of the adjunction .",
    "one verifies easily that the comonoidal structure on @xmath33 so defined coincides with the one we decribed previously .",
    "the rest ensues .",
    "however , @xmath33 need not be a hopf monad if @xmath9 is a hopf polyad .",
    "consider the constant polyad @xmath597 of example  [ exa - constant ] . if @xmath303 is a monoidal category , then @xmath9 is in fact a hopf polyad .",
    "consider the special case @xmath598 for some field @xmath599 , and @xmath600 . in that case the monad @xmath33 on @xmath601 is given by @xmath602 .",
    "therefore @xmath603 on the other hand , @xmath604 as a result the left fusion ( and by reason of symmetry , the right fusion ) operator of @xmath33 can not be an isomorphism , that is , @xmath33 is not a hopf monad .",
    "we have however the following theorem .",
    "[ thm - hopfpolyhopfmon ] let @xmath9 be a -exact comonoidal polyad with source @xmath10 . if @xmath9 is a left ( resp .",
    "right ) hopf polyad and @xmath10 is a groupoid , then @xmath33 is a left ( resp .",
    "right ) hopf monad .",
    "let us tackle the left - handed version .",
    "let @xmath378 be objects of @xmath283 .",
    "for each @xmath278 we have a commutative square in @xmath12 : @xmath605_{\\simeq}\\ar[rrrr]^{(h^l_{x , y})_i } & & & & { { \\widehat{t}}}(x)_i\\otimes { { \\widehat{t}}}(y)_i\\ar[d]^{\\simeq } \\\\ \\coprod \\limits_{k { \\xrightarrow{b } } j { \\xrightarrow{a } } i}\\!\\!\\!\\ ! t_a(x_j   \\otimes t_b y_k ) \\ar[rrr]_{\\coprod\\limits_{k { \\xrightarrow{b } } j { \\xrightarrow{a } } i } h^l_{a , b}(x_j , y_k ) } & & & \\coprod\\limits_{k { \\xrightarrow{b } } j { \\xrightarrow{a } } i } \\!\\!\\!t_a(x_j )   \\otimes t_{ab } x_k \\ar[r]_\\iota & \\coprod\\limits_{m { \\xrightarrow{c } } i\\atop n { \\xrightarrow{d } } i}\\!\\!\\ ! t_c",
    "x_m   \\otimes t_d y_n , } \\ ] ] where @xmath606 denotes the left fusion operator of the comonoidal monad @xmath33 , and @xmath607 is induced by the map @xmath608 . if @xmath10 is a groupoid ,",
    "then @xmath609 is bijective and @xmath607 is an isomorphism . if in addition @xmath9 is left hopf , then all @xmath610 s are isomorphisms , so @xmath606 is an isomorphism .",
    "therefore , @xmath33 is left hopf .    as a result , theorems about hopf monads can sometimes be applied to -exact polyads whose source is a groupoid .",
    "we will see an example of this in section  [ sect - hopfmod ] .",
    "we have seen that hhe notion of modules over a monad can be generalized in two different ways to polyads : modules and representations .",
    "consequently , hopf modules can also be generalized in two different ways , namely hopf modules and hopf representations      we exploit the relation between hopf monads and -exact hopf polyads established in section  [ sect - polyads - monads ] to define hopf modules and formulate a decomposition theorem .",
    "let @xmath9 be a -exact comonoidal polyad .",
    "a _ ( left ) @xmath9-hopf module _ consists in the following data :    1 .   a @xmath9-module @xmath289 , 2 .   a collection @xmath611 , where @xmath612 is a left coaction of the coalgebra @xmath613 on @xmath614 ,    such that for @xmath321 in @xmath46 , the following diagram commutes : @xmath615_{\\rho_a}\\ar[r]^{t_a\\delta_{j } \\qquad }      &   t_a(\\coprod\\limits_{k { \\xrightarrow{b } } j } t_b { \\mathbb{1}}\\otimes x_j ) \\ar[r]^\\simeq      & \\ar[d]^{\\coprod\\limits_{b}(t_{ab}{\\mathbb{1}}\\otimes",
    "\\rho_b ) t^2_a ( t_b{\\mathbb{1}},x_j ) } \\coprod\\limits_{b } t_a ( t_b{\\mathbb{1}}\\otimes x_j)\\\\ & & \\coprod\\limits_{b } t_{ab}{\\mathbb{1}}\\otimes x_i\\ar[d]^{\\text{can.}}\\\\ x_i   \\ar[r]_{\\delta_{i}\\qquad }      &   \\coprod\\limits_{k { \\xrightarrow{c } } i}t_{c } { \\mathbb{1}}\\otimes   x_i \\ar[r]_\\simeq      & \\coprod\\limits_{k { \\xrightarrow{a}}i } t_{c}\\otimes x_i{\\mathbb{1}}. } \\ ] ]    a _ morphism of left @xmath9-hopf modules _ @xmath49 between two left @xmath9-hopf modules @xmath616 and @xmath617 is a morphism of @xmath9-modules @xmath618 such that for @xmath448 and @xmath281 , @xmath619 is a morphism of comodules @xmath620 .    thus , left @xmath9-hopf modules form a category @xmath621 .",
    "the _ coinvariant part _ of a @xmath9-hopf module @xmath622 is , if it exists , the object of @xmath283 defined by @xmath623 ^ -{\\delta_{i}}\\ar@<-2pt>[r]_- { { \\eta_i}_{\\mathbb{1}}\\otimes x_i } } & ( \\coprod\\limits_{j { \\xrightarrow{a}}i } t_a{\\mathbb{1}})\\otimes x_i } ) \\bigr)_{i \\in d_0}.\\ ] ] the parallel pairs involved are coreflexive ( with common retraction @xmath624 ) , in particular the coinvariant part is always defined if the categories @xmath12 have coreflexive equalizers . in that case , we dispose of a functor @xmath625    a _ weakly conservative polyad _ is a polyad @xmath9 satisfying : for each @xmath278 , a morphism @xmath626 such that @xmath627 is an isomorphism for each @xmath628 , is an isomorphism .",
    "a -exact polyad @xmath629 _ has conservative sums _",
    "if every for @xmath278 , the sum is conservative in @xmath12 ( that is , if @xmath49 , @xmath50 are morphisms in @xmath12 such that @xmath630 is an isomorphism , then @xmath49 and @xmath50 are isomorphims ) .",
    "a -exact -exact polyad is a -exact polyad @xmath629 such that for @xmath631 , @xmath12 admits equalizers of coreflexive pairs , the tensor product of @xmath12 preserves them , finite sums and sums of at most @xmath576 terms preserve them , and for @xmath13 in @xmath45 , @xmath272 preserves them .",
    "let @xmath9 be a a -exact -exact weakly conservative left hopf polyad having conservative sums and whose source is a groupoid .",
    "then the coinvariant part functor @xmath632 is an equivalence of categories .",
    "let @xmath345 be a left hopf polyad satisfying the conditions of the theorem , and let @xmath33 be the comonoidal monad associated with @xmath9 according to theorem  [ thm - poly - mono ] ; it is in fact a left hopf monad by theorem  [ thm - hopfpolyhopfmon ] .",
    "a @xmath9-hopf module @xmath616 can be viewed as a @xmath33-hopf module .",
    "indeed , the @xmath9-module @xmath289 can be viewed as a @xmath33-module according to assertion ( 1 ) of theorem  [ thm - poly - mono ] ; the data @xmath633 is a left coaction of the comonad @xmath634 on @xmath41 , and the axiom expressing the compatibility of @xmath138 and @xmath633 translates into the compatibility of the action and coaction of a left @xmath33-hopf module .",
    "thus we have an equivalence of categories between @xmath621 and the category @xmath635 of left @xmath33-hopf modules , which preserves coinvariant parts by construction .",
    "moreover , our exactness assumptions ensure that @xmath283 has coreflexive equalizers and @xmath33 preserves them .",
    "lastly , @xmath33 is conservative .",
    "indeed , let @xmath49 be a morphism in @xmath283 . if @xmath636 is an isomorphism , then for every @xmath278",
    ", @xmath637 is an isomorphism , and since sums are conservative , this implies that each @xmath638 is an isomorphism .",
    "since @xmath9 is weakly conservative , this implies that @xmath49 is an isomorphim .",
    "we may therefore apply to @xmath33 theorem  6.11 .",
    "of @xcite , and conclude that @xmath639 is equivalent to @xmath283 via the functor equivariant part , hence @xmath640 is an equivalence .",
    "we define hopf representations of a hopf polyad , and formulate a decomposition theorem .",
    "let @xmath313 be a comonoidal polyad .",
    "the category @xmath325 of representations of @xmath9 ( see section  [ sect - rep - poly ] ) is monoidal , with tensor product defined by @xmath641 and unit object @xmath642 .",
    "the forgetful functor @xmath643 is strict ( co)monoidal , and its left adjoint @xmath337 is comonoidal",
    ".    a _ left hopf representation of @xmath9 _ is a data @xmath644 , where    1 .",
    "@xmath645 , with @xmath316 for @xmath13 in @xmath317 , 2 .",
    "@xmath318 , where @xmath319 is a morphism @xmath320 for @xmath321 in @xmath46 , 3 .",
    "@xmath646 , where @xmath647 ,    with the following axioms :    a.   @xmath314 is a hopf representation of @xmath9 ( see section  [ sect - rep - poly ] ) ; b.   for @xmath308 , @xmath648 is a left comodule of the coalgebra @xmath434 ; c.   for @xmath321 in @xmath46 , the following diagram commutes : @xmath649_{t_a\\delta_b}\\ar[rr]^{t_a\\delta_b } & & w_{ab}\\ar[d]^{\\delta_{ab}}\\\\ t_a(t_b{\\mathbb{1}}\\otimes w_b)\\ar[r]_{t^2_a(t_b{\\mathbb{1}},w_b ) } & t_at_b{\\mathbb{1}}\\otimes t_aw_a \\ar[r ] _ { { \\mu_{a , b}}_{\\mathbb{1}}\\otimes\\rho_{a , b } } & t_{ab}{\\mathbb{1}}\\otimes w_{ab}. } \\ ] ]    since @xmath650 is comonoidal , @xmath651 is a coalgebra in @xmath325 , and conditions ( i ) , ( ii ) , ( iii ) mean that @xmath314 is an object of @xmath325 and @xmath633 is a left coaction of @xmath651 on @xmath314 .    left hopf representations of @xmath9 form a category @xmath652 , the morphisms between two hopf representations being representation morphisms which are at the same time comodule morphisms .",
    "if @xmath41 is an object of @xmath283 , we define a right hopf representation @xmath653 by setting : @xmath654 conversely , observe that if @xmath655 is a left hopf representation of @xmath9 , then for each @xmath278 , @xmath656 is a left hopf module of the bimonad @xmath18 .",
    "we say that @xmath644 _ has a coinvariant part _ if for each @xmath11",
    ", @xmath656 has a coinvariant part @xmath657 - that is , an equalizer of the parallel pair : @xmath658 ^ - { { \\eta_i}_{\\mathbb{1}}\\otimes w_i } \\ar@<-2pt>[r]_-{\\delta_i } } & t_i{\\mathbb{1}}\\otimes w_i}).\\ ] ] if such is the case , the object @xmath659 of @xmath283 is called the _ coinvariant part of @xmath660_. we say that @xmath9 _ preserves coinvariant parts _ if for every @xmath13 in @xmath45 , @xmath272 preserves the equalizer @xmath661 .",
    "we say that a polyad @xmath9 with source @xmath10 is _ conservative _ if for every @xmath308 , the functor @xmath27 is conservative .",
    "[ thm - str - hopfrep ] let @xmath9 be a left hopf polyad .",
    "assume that the left hopf representations of @xmath9 have coinvariant parts and @xmath9 preserves them .",
    "then the following assertions are equivalent :    a.   the functor @xmath662 is an equivalence of categories ; b.   @xmath9 is conservative ,    if these hold , the functor ` coinvariant part ' @xmath663 is quasi - inverse to @xmath653 .    note that theorem  [ thm - str - hopfrep ] is true for @xmath664 : in that case , it results immediately from theorem  6.11 . of @xcite , that is , the decomposition theorem for the left hopf modules of a right hopf monad .",
    "let us fist show ( i ) @xmath99 ( ii ) .",
    "assume that @xmath665 is an equivalence .",
    "in particular , it is conservative . on the other hand",
    ", the forgetful functor @xmath666 is conservative .",
    "let @xmath667 be a morphism of @xmath0 such that @xmath627 is an isomorphism .",
    "define a morphism @xmath668 of @xmath283 by setting @xmath669 and @xmath670 if @xmath671 .",
    "then @xmath672 is an isomorphism , and so is @xmath668 itself , which implies that @xmath673 is an isomorphism .",
    "thus @xmath27 is conservative .",
    "now let us show ( ii ) @xmath99 ( i ) .",
    "we verify that the two functors : @xmath674 and @xmath675 are inverse to one another .",
    "let @xmath41 be an object of @xmath283 .",
    "then @xmath676 , and , in view of the initial remark , the right @xmath18-hopf module @xmath677 has coinvariant part @xmath614 , hence @xmath678    let @xmath655 be a right hopf representation of @xmath9",
    ". denote by @xmath679 the equalizer morphism @xmath680 .",
    "let @xmath13 be a morphism of @xmath10 , and consider the morphism @xmath681    one verifies that @xmath445 is a morphism @xmath682 in @xmath683 .",
    "on the other hand , since @xmath9 is left hopf , the morphism @xmath684 is an isomorphism .",
    "composing its inverse with @xmath647 , we obtain a morphism @xmath685 .",
    "one verifies that @xmath686 equalizes the image by @xmath27 of the pair @xmath687 , whose equalizer is @xmath688 , and since @xmath27 preserves such equalizers , @xmath686 factors uniquely through @xmath689 , defining a morphism @xmath690 .",
    "one verifies that @xmath691 is inverse to @xmath692 , which shows @xmath693 hence the theorem .",
    "in this section , we interpret hopf categories , as defined in @xcite , as special cases of hopf polyads .",
    "let @xmath303 be a monoidal category .",
    "@xmath10-polyalgebra in @xmath303 _ is a set of data @xmath694 , where @xmath695 is a family of objects of @xmath303 indexed by @xmath45 , @xmath696 and @xmath697 are families of morphisms in @xmath303 , @xmath698 , and @xmath699 , satisfying : @xmath700    assume @xmath701 , where @xmath41 is a set ( recall that the objects of @xmath52 are the elements of @xmath41 , with exactly one morphism between any two objects ) .",
    "then @xmath10-polyalgebras over @xmath303 are nothing but @xmath303-enriched categories with set of objects @xmath41 .",
    "now assume that @xmath303 is braided , with braiding @xmath523 . in that case , the category @xmath702 of coalgebras in @xmath303 is monoidal .",
    "@xmath10-polybialgebra in @xmath303 _ is a @xmath10-polyalgebra in @xmath703 .",
    "we may view it as a set of data @xmath704 , where @xmath705 is a @xmath10-polyalgebra in @xmath303 and @xmath706 , @xmath707 are collections of morphisms such that @xmath708 is a coalgebra for each @xmath308 , and the morphisms @xmath709 and @xmath710 are coalgebra morphisms .    the _ left _ and _ right fusion operators _ of a @xmath10-polyalgebra @xmath30 and @xmath31 are families of morphisms indexed by @xmath46 defined as follows : @xmath711    a _",
    "@xmath10-hopf polyalgebra _ is a @xmath10-polybialgebra whose fusion operators are isomorphisms .    for @xmath701 ,",
    "@xmath10-polybialgebras are exactly @xmath702-enriched categories , and @xmath10-hopf polyalgebra are exactly hopf categories in the sense of batista , caenepeel , vercruysse @xcite .",
    "let @xmath303 be a monoidal category .",
    "the assignment @xmath712 defines an embedding of @xmath303 as a monoidal subcategory of @xmath713 .",
    "let us call endofunctors of the form @xmath84 _ representable endofunctors _ , and natural transformations of the form @xmath714 between such endofunctors , _",
    "representable transformations_. ( more precisely , one should rather say ` representable on the left ' , but we will always consider the left - handed case ) .    a _ representable polyad over @xmath303 _ is a polyad of the form @xmath715 where the functors @xmath716 ( @xmath308 ) and the natural transformations @xmath28 ( @xmath717 ) and",
    "@xmath29 ( @xmath369 are representable .",
    "representable polyads can be represented by polyalgebras .    given a @xmath10-polyalgebra in @xmath303 , we define a representable polyad @xmath718 over @xmath303 by @xmath719 the assignment @xmath720 maps polyalgebras bijectively to representable polyads .",
    "now assume that @xmath303 is braided , with braiding @xmath523 .    given a coagebra @xmath89 in @xmath303 ,",
    "the representable endofunctor @xmath98 admits a comonoidal structure , given by @xmath721    such comonoidal endofunctors are called _ representable comonoidal endofunctors_.    a comonoidal polyad , or a hopf polyad , of the form @xmath722 is _ representable _ if it is representable as a polyad and the @xmath27 s are representable comonoidal endofunctors .",
    "representable comonoidal polyads and hopf polyads can be represented by polybialgebras and hopf polyalgebras .",
    "[ lem - polypoly ] given a @xmath10-polyalgebra @xmath137 in @xmath303 , the data @xmath723 is a representable comonoidal polyad over @xmath303 , the comonoidal structure on @xmath724 being defined by the coalgebra structure of @xmath725 .",
    "moreover , the assignment @xmath720 maps polybialgebras bijectively to representable comonoidal polyads , and in this correspondance , hopf polyalgebras correspond 1 - 1 with representable hopf polyads .",
    "let @xmath41 be a set .",
    "a @xmath726-polybialgebra , or @xmath702-enriched category with set of objects @xmath41 , corresponds via lemma  [ lem - polypoly ] to a representable comonoidal polyad over @xmath303 , and in this dictionary , a hopf category in the sense of @xcite corresponds with a representable hopf polyad over @xmath303 .",
    "note that the notion of a hopf module over a hopf category considered in @xcite corresponds with our notion of a hopf representation of a hopf polyad .",
    "we construct a hopf polyad associated with a graded tensor category , and , by applying to it the fundamental theorem of hopf polyads , we recover a result about the center of a graded tensor category due to turaev and virelizier @xcite .",
    "let @xmath599 be a field .",
    "a _ bounded @xmath599-linear abelian category _ is a @xmath599-linear abelian category @xmath727 such that there exists a finite dimensional @xmath599-algebra @xmath728 and a @xmath599-linear equivalence of categories @xmath729 ( where @xmath730 denotes the category of finite - dimensional right @xmath599-modules ) .",
    "a _ @xmath599-tensor category _ , or just _ tensor category _",
    ", is a rigid monoidal category @xmath0 endowed with a structure of @xmath599-linear abelian category such that the tensor product is linear in each variable , @xmath731 , @xmath732-spaces are finite dimensional and all objects have finite length .      1 .   for @xmath735 ,",
    "the set @xmath736 is finite , and : @xmath737 2 .   the @xmath738 s are orthogonal idempotents , _",
    "i.e. _ for @xmath739 , @xmath740 , 3 .   for @xmath741 and @xmath742 , @xmath743 , 4 .",
    "@xmath744 ;    if @xmath0 is a @xmath1-graded tensor category , we say that an object @xmath41 of @xmath0 is _ homogeneous of degree @xmath50 _ if @xmath745 .",
    "we denote by @xmath746 the full abelian subcategory of @xmath0 of homogeneous objects of degree @xmath50 .",
    "then ( 1 ) states that any object is a finite direct sum of homogeneous objects of different degrees , ( 2 ) , that such a decomposition is essentially unique , ( 3 ) , that @xmath747 , and ( 4 ) , that @xmath436 is homogeneous of degree @xmath440 .",
    "let @xmath1 be a group and let @xmath0 be a locally bounded @xmath1-graded tensor category .",
    "for @xmath735 and @xmath6 the coend @xmath748 exists , because @xmath746 is bounded . denote by @xmath749 ( @xmath750 ) its universal dinatural transformation .",
    "the assignment @xmath751 defines an endofunctor of @xmath0 , denoted by @xmath752 .",
    "define further : @xmath753 @xmath754 where @xmath755 are objects of @xmath0 and @xmath756 elements of @xmath1 , by the formulae : @xmath757 @xmath758 where @xmath759 is the evaluation , and @xmath760 the coevaluation of the duality @xmath761 .",
    "pictorially :            1 .",
    "@xmath766 is a strong comonoidal action of @xmath1 on @xmath764 , hence @xmath1 acts on @xmath36 ; 2 .",
    "@xmath3 is equivalent to the equivariantization of @xmath36 under this action of @xmath1 as a tensor category .",
    "the fact that @xmath34 is a comonoidal polyad can be checked easily ( the proof can be adapted from that of @xcite , theorem 5.6 . ) moreover @xmath34 is -exact because @xmath0 is a tensor category and each @xmath752 is right exact ( as inductive limit of exact functors ) .",
    "now let us prove that @xmath34 is a left hopf polyad ( the right - handed version ensues by virtue of symmetry ) .",
    "we have @xmath767 @xmath768 with universal dinatural morphisms @xmath769 @xmath770 defined by : @xmath771 pictorially :                that is , @xmath775 ; and we now verify that it is the inverse of the left fusion operator : @xmath776 so that @xmath777 is left inverse to @xmath772 , and similarly : @xmath778 which shows that @xmath777 is right inverse to @xmath772 . this concludes the proof of assertion ( 1 ) .",
    "let us show assertion ( 2 ) .",
    "let @xmath41 be an object of @xmath0 .",
    "a natural transformation @xmath779 can be viewed ( by duality ) as a dinatural transformation @xmath780 , with @xmath728 in @xmath0 , or , equivalently , as a collection @xmath781 of dinatural transformations @xmath782 , with @xmath728 in @xmath746 . in turn",
    ", each dinatural transformation @xmath783 translates into a morphism @xmath784 .",
    "let @xmath785 .",
    "one verifies easily that in this correspondance , @xmath786 is a half - braiding of @xmath0 if and only if @xmath289 is a @xmath752-module , and so defines an isomorphism of monoidal categories : @xmath787 .",
    "assertion ( 3 ) boils down to theorem  [ thm - fond ] applied to @xmath34 .",
    "all we have to check is that @xmath34 is transitive .",
    "now by assumption for any @xmath6 , @xmath746 contains a non - zero object @xmath41 , and @xmath792 is non - zero , which implies that @xmath793 is non - zero , and @xmath794 is conservative because it is faithful exact and @xmath0 is abelian . as a result , @xmath766 is strong comonoidal of action type , that is , it is an action of the group @xmath1 on @xmath795 . by proposition  [ prop - comopo ] , @xmath796 , which means , in view of assertion ( 2 ) , that the equivariantization of @xmath795 under the group action of @xmath1 is nothing but @xmath3 , that is , assertion ( 4 ) holds .",
    "[ rem - ex - centralizer ] hopf polyads can also be constructed in the following way : let @xmath10 be a small category , and consider a data @xmath797 where @xmath798 is a category , @xmath799 is a functor , @xmath800 is an object of @xmath801 , such that @xmath19 and @xmath436 satisfy the expected associativity and unity condition .",
    "( a lax version involves associativity and unity constraints . )",
    "then the categories @xmath802 are monoidal , and for @xmath803 in @xmath45 , @xmath798 is a @xmath804-@xmath802 bimodule category . under suitable hypotheses ( existence of certain adjoints and coends )",
    ", one defines for each morphism @xmath803 two functors : @xmath805_l \\end{array } \\right . \\left\\ { \\begin{array}{llll }   z^r_a : & { \\mathcal{m}}_j & \\to & { \\mathcal{m}}_i\\\\    & y & \\mapsto & \\int^{a \\in { \\mathcal{m}}_a } [ a , y \\otimes a]_r \\end{array } \\right.\\ ] ] where @xmath806_l$ ] and @xmath806_r$ ] denote left and right external cohoms .",
    "hence two quasitriangular hopf polyads @xmath807 and @xmath808 , with source @xmath809 and @xmath10 respectively ."
  ],
  "abstract_text": [
    "<S> we introduce hopf polyads in order to unify hopf monads and group actions on monoidal categories . </S>",
    "<S> a polyad is a lax functor from a small category ( its source ) to the bicategory of categories , and a hopf polyad is a comonoidal polyad whose fusion operators are invertible . </S>",
    "<S> the main result states that the lift of a hopf polyad is a strong ( co)monoidal action - type polyad ( or strong monoidal pseudofunctor ) . </S>",
    "<S> the lift of a polyad is a new polyad having simpler structure but the same category of modules . </S>",
    "<S> we show that , under certain assumptions , a hopf polyad can be ` wrapped up ' into a hopf monad . </S>",
    "<S> this generalizes the fact that finite group actions on tensor categories can be seen as hopf monads . </S>",
    "<S> hopf categories in the sense of batista , caenepeel and vercruysse can be viewed as hopf polyads in a braided setting via the notion of hopf polyalgebras . as a special case of the main theorem </S>",
    "<S> , we generalize a description of the center of graded fusion category due to turaev and virelizier to tensor categories : if @xmath0 is a @xmath1-graded ( locally bounded ) tensor category , then @xmath1 acts on the relative center of @xmath0 with respect to the degree one part @xmath2 , and the equivariantization of this action is the center of @xmath0 . </S>"
  ]
}
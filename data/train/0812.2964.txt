{
  "article_text": [
    "the mcmc ( markov chain monte - carlo ) method @xcite has played an important role in study of complex systems with many degrees of freedom .",
    "for example , mcmc has been applied to various many - body problems such as proteins @xcite , spin systems @xcite , and lattice gauge theory @xcite .",
    "although the method has achieved great success , there are systems where monte - carlo sampling does not work due to local minima of energy functions . for example , in analysis of protein folding , monte - carlo random walks are trapped in narrow regions of energy space because there are so many local minima . for large proteins , it is a hard problem to obtain sufficiently large number of statistical samples because it takes very long time for a complicated conformation to escape from a local minimum in energy space .",
    "the multicanonical method @xcite may be useful for resolving the local minimum problems .",
    "it is a kind of generalized - ensemble methods .",
    "it has been applied to the above mentioned problems and worked nicely .",
    "especially its application to protein folding with the multicanonical md @xcite has been remarkable .",
    "recently , ikebe et al have succeeded in folding calculation of a 40-residue protein @xcite .",
    "kamiya et al have demonstrated flexible molecular docking between a protein and a ligand @xcite .",
    "since protein structure prediction is one of the most important subjects in life sciences , it has been expected that the multicanonical method will make a large progress in clarification of the fundamental laws of life and development of high - performance drugs .",
    "the multicanonical method is based on an artificial ensemble that gives a flat probability distribution in energy space .",
    "the advantage of the method is enhancement of rare configurations , which results in random walks in wide range of energy space . in this method ,",
    "multicanonical weights are estimated in an iterative way . to estimate a multicanonical weight",
    ", one has to generate a markov chain many times , which must be sufficiently long for accurate estimation . the number of arithmetic operations increases exponentially as the number of amino - acid residues becomes large .",
    "since actual proteins are composed of more than a hundred amino - acid residues , the number of necessary operations for folding simulation is huge .",
    "it would be a possibility to decrease the execution time using massively parallel supercomputers .    in this paper",
    ", we propose an algorithm to generate a markov chain in a parallel way . in mcmc calculations",
    ", the detailed balance is checked between the last and a newly generated configuration to determine acceptance or rejection of the new one . accepted",
    "configurations constitute a so - called markov chain .",
    "a markov chain is a one - dimensional object that is generated serially .",
    "since acceptance or rejection of a new configuration depends on the last configuration , naive algorithm for markov - chain generation such as the metropolis method is essentially serial . at a glance",
    ", it seems that the mcmc algorithm can not be parallelized . in this paper",
    ", we are going to show a method to joint multiple markov chains together to make a longer markov chain .",
    "the constituent markov chains are independently generated starting from different initial configurations .",
    "the essential point of the method is that joints between chains are processed so that the detailed balance is satisfied .",
    "based on the detailed balance , unnecessary configurations are discarded from each markov chain .",
    "the remaining markov chains are connected together to make a longer markov chain . by repeating this procedure",
    ", one can increase the length of the markov chain arbitrarily . in this algorithm",
    ", other operations such as evaluation of energy functions are not parallelized .    to demonstrate how the parallelization algorithm works",
    ", we solve the two - dimensional ising model by combining the proposed parallelization algorithm and the multicanonical method .",
    "multicanonical weights are estimated from histograms , which are obtained using the parallelization algorithm .    in sec .",
    "[ para ] , we introduce an algorithm to generate a long markov chain in a parallel way . in sec .",
    "[ multic ] , we review the multicanonical method briefly . in sec .",
    "[ app ] , we apply the parallelization algorithm to the two - dimensional ising model with the multicanonical method . in sec .",
    "[ results ] , we show numerical results . sec . [ conclusions ] is devoted to conclusions .",
    "let us consider a markov chain that is composed of @xmath0 configurations , @xmath1 we call @xmath2 a configuration , which is a set of values of multiple variables .",
    "@xmath2 are generated so that configurations distribute according to a specified probability distribution @xmath3 . in actual calculations ,",
    "the number of configurations is finite .",
    "therefore , a set of configurations only reproduces @xmath3 approximately .",
    "the associated errors vanishes in the limit @xmath4 .    in mcmc ,",
    "configurations are generated serially so that the detailed balance is satisfied .",
    "one determines acceptance or rejection of a randomly generated configuration @xmath2 by checking the detailed balance between @xmath5 and @xmath2 . at a glance , the mcmc algorithm seems to be essentially serial and is not suited to parallel computation . in order to decrease execution time using parallel computers",
    ", we propose a simple algorithm to parallelize markov - chain generation .",
    "let us consider a computer of which parallelism is @xmath6 . in our parallelization algorithm ,",
    "each computing node generates a markov - chain separately . in order to obtain a much longer markov chain having @xmath7 configurations than a markov chain",
    "having @xmath8 configurations generated by each computing node , the @xmath6 markov chains are connected satisfying the detailed balance condition as follows :    _ algorithm _    1 .",
    ": :    set the total histogram zero , @xmath9 , where    @xmath10 is energy variable .",
    "prepare initial configurations    @xmath11 randomly on @xmath12-th node    ( @xmath13 ) .",
    ":    in each node , generate a markov chain composed of    @xmath8 configurations ,    @xmath14 3 .",
    ": :    set @xmath15 .",
    ":    in the @xmath12-th node , check the detailed balance between    @xmath16 and @xmath17 ,    where @xmath16 with    @xmath18 mod @xmath6 is the last configuration    of the previous node .",
    "the index @xmath19 is increased from    @xmath20 to @xmath8 till the detailed    balance is satisfied . when there is a configuration that satisfies the    detailed balance , that configuration and the succeeding ones are    accepted . when there is no accepted configuration , set    @xmath21 .",
    "make a local histogram @xmath22 using only the    accepted configurations .",
    "calculate the total histogram ,    @xmath23 .",
    "send the values    of @xmath24 and the energy of    @xmath25 to the    @xmath26-th node .",
    "( when    @xmath15 , @xmath27 of the    previous iteration is used for checking of the detailed balance . )",
    "5 . : :    set @xmath28 .",
    "if @xmath29 , go to step 4 .",
    ": :    if the total number of the configurations contained in the total    histogram @xmath24 is smaller than the specified value    @xmath7 , adjust @xmath8    appropriately so that additional calculations are minimized , and then    go to step 2 .",
    "we are going to give some remarks on the algorithm below .",
    "the algorithm produces a markov chain of which the configuration number is @xmath7 .",
    "actually , the algorithm outputs the total histogram @xmath24 .",
    "as shown in the next section , the obtained histogram @xmath24 is used to estimate a multicanonical weight @xmath30 .",
    "the algorithm is repeated certain times till a multicanonical weight that covers a sufficiently large energy area is obtained .",
    "since the algorithm only assumes the detailed balance and does not depend on the details of probability distribution , the algorithm works in any mcmc calculations .    in each node , the last configuration generated in the previous iteration",
    "is used for generating a markov chain as an initial configuration in the next iteration including when the considered weight has been updated .",
    "this means that @xmath6 markov chains are generated independently from first to last .",
    "equilibrium depends on the current weight",
    ".    there may be no configuration that satisfies the detailed balance in step 4 . in this case , all of the configurations contained in that computing node is discarded , which results in low efficiency of markov - chain generation .",
    "one can increase acceptance rate by ordering computing nodes according to energy values of generated configurations .",
    "we will pursue this technique in the next paper .",
    "we are going to combine the algorithm introduced in the previous section with the multicanonical method .",
    "let us review the multicanonical method briefly .",
    "for the details of the multicanonical method , see @xcite .    consider a statistical system that is defined with a boltzmann weight @xmath31 where @xmath32 .",
    "hereafter , we set @xmath33 for simplicity .",
    "probability distribution is given by @xmath34 where @xmath35 is density of states .",
    "the constant @xmath36 is determined with the normalization condition@xmath37 .    in the multicanonical method , an extended weight @xmath38 is defined so",
    "that multicanonical distribution is independent of energy , @xmath39    we can obtain the multicanonical weight @xmath40 in a recursive way .",
    "we denote the @xmath41-th multicanonical weight as @xmath42 , where @xmath43 . in the initial step ,",
    "we set @xmath44 , which corresponds to high - temperature limit of the boltzmann weight @xmath45 . with the @xmath42",
    ", we generate a sufficiently long markov chain and obtain a total histogram @xmath46 .",
    "then , we generate the next weight @xmath47 using the current weight @xmath42 and the obtained histogram @xmath46 . @xmath48",
    "we expect that the weight @xmath42 approaches to the correct multicanonical weight @xmath40 if this process is repeated certain times .",
    "to obtain the multicanonical weight accurately , sufficiently large statistics are necessary for generating @xmath46 .",
    "we can decrease execution time consumed to generate sufficiently long markov chains by making use of the parallelization algorithm introduced in sec .",
    "@xcite .",
    "we can calculate statistical average at arbitrary temperature with the following reweighting formula : @xmath49 where @xmath50 represents multiple variables and @xmath51 is a configuration . if the operator @xmath52 can be represented as a function of energy @xmath10 and the multicanonical weight @xmath38 is known , one can evaluate eq .",
    "( [ reweighting ] ) without configurations . in this case",
    ", the formula ( [ reweighting ] ) reduces to @xmath53 because the density of states is inversely proportional to the weight ( @xmath54 ) and the histogram has flat distribution . in eq .",
    "( [ reweighting2 ] ) , we can evaluate @xmath55 by taking the summation for all possible energy values @xmath10 . the reduced reweighing formula ( [ reweighting2 ] )",
    "can not be used for quantities that are dependent on local variables .",
    "we are going to solve the two - dimensional ising model at finite temperature combining the parallelization algorithm ( sec . [ para ] ) and the multicanonical method ( sec .",
    "[ multic ] ) .",
    "the model is defined on two dimensional square lattices .",
    "the number of lattice sites is @xmath56 , where @xmath57 is the lattice size .",
    "we assume periodic boundary conditions .",
    "the hamiltonian of the model is defined as follows : @xmath58 where the summation is taken for all possible nearest - neighbour sites .",
    "all information of thermodynamics is contained in the partition function @xmath59 based on this , we calculate energy @xmath10 , specific heat @xmath60 , free energy @xmath61 , and entropy @xmath62 in a statistical way .",
    "@xmath63      we apply a combination of the parallelization algorithm and the multicanonical method to the two - dimensional ising model .",
    "we estimate multicanonical weights iteratively with the parallelization algorithm .",
    "we implement the codes with fortran77 .",
    "our code set is composed of the following two parts : ( i ) generation of the multicanonical weight and ( ii ) evaluation of statistical average .",
    "these are implemented as separate two codes .",
    "since almost all of the arithmetic operations are contained in the part ( i ) , only the part ( i ) is parallelized with mpi-1 , which is a library specification for message - passing proposed as a standard @xcite .",
    "the obtained multicanonical weight is used as an input to the part ( ii ) .",
    "we calculate statistical average of energy , specific heat , free energy , and entropy .",
    "since these quantities can be represented as functions of energy , we can use the reweighting formula ( [ reweighting2 ] ) in the part ( ii ) .",
    "execution time of the part ( ii ) is very short like a second on a xeon 1.50 ghz processor .",
    "we store logarithm of the weight , not the weight itself , because the absolute values of the weight may be very small . for this reason",
    ", we perform all necessary operations under logarithm to evaluate statistical quantities .",
    "each node generates a markov chain composed of @xmath8 samples using the current multicanonical weight .",
    "when all @xmath6 nodes have done markov - chain generation , the obtained chains are linked together using the detailed balance as explained before . to be concrete , an energy value of the last configuration and the total histogram @xmath24",
    "are sent to the next node for the detailed - balance checking and histogram generation .",
    "the metropolis method is used for the detailed - balance checking .",
    "if the total number of accepted configurations contained in the total histogram @xmath24 is smaller than the specified sample number @xmath7 , the chain generation process is repeated .",
    "if it is larger than @xmath7 , the next weight is calculated using eq .",
    "( [ new_weight ] ) and distributed to all the nodes .",
    "then , a new iteration process is started with the new weight .",
    "the above iteration process for weight estimation is repeated the specified @xmath64 times .",
    "with the implemented codes , we generate multicanonical weights using the parallelization algorithm and calculate statistical quantities using eq .",
    "( [ reweighting2 ] ) .",
    "table [ parameter ] is a list of parameter values used to plot fig .",
    "[ fig1 ]    [ parameter ]    .parameter values used for calculation of statistical quantities shown in fig .",
    "[ fig1 ] . [ cols=\"<,^,^\",options=\"header \" , ]     finally , in table [ scalability ] , we show scalability of the code in the case of @xmath65 and @xmath66 , which show @xmath6-dependence of execution ( e ) , operation ( o ) , and communication ( c ) time . we have represented the scalability concerning to execution time in units of the @xmath67 case .",
    "the measurements have been performed in the first iteration of weight generation .",
    "as @xmath6 increases , execution time decreases well , but there is deviation from the ideal scalability .",
    "this is because the total number of operations is not large compared to communications and a small part of the operations have not been parallelized .",
    "communication time is comparable with operation when @xmath6 is large . for better performance , serial operations and collective communications",
    "should be removed as much as possible .",
    "we could invent more sophisticated implementation of the algorithm for complete scalability .",
    "we will consider improvement of the code in the next paper .",
    "we have proposed a parallelization algorithm for markov - chain generation , which can be applied to any mcmc - based methods .",
    "we have verified the algorithm in the two - dimensional ising model combined with the multicanonical method .",
    "we have confirmed accuracy of the obtained multicanonical weights by checking agreement of energy , specific heat , free energy , and entropy with the exact results .",
    "we have also shown that multicanonical weights may have errors if the detailed balance is not used for linking short markov chains generated in parallel .",
    "one can decrease such errors if unnecessary configurations are discarded with the proposed algorithm when connecting constituent markov chains",
    ". the algorithm will be useful for highly massive parallelism equipped with future supercomputers .",
    "the authors would like to thank y.  iba and n.  kamiya for useful discussions and conversations .",
    "the numerical calculations were carried on the riken super combined cluster ( rscc ) system .",
    "some works have used the multiple - reweighting method proposed by ferrenberg and swendsen @xcite to make density of states in protein - folding simulations.@xcite it would be interesting to consider relationship between the multiple - reweighting and the current methods ."
  ],
  "abstract_text": [
    "<S> we develop a simple algorithm to parallelize generation processes of markov chains . in this algorithm , </S>",
    "<S> multiple markov chains are generated in parallel and jointed together to make a longer markov chain . </S>",
    "<S> the joints between the constituent markov chains are processed using the detailed balance . </S>",
    "<S> we apply the parallelization algorithm to multicanonical calculations of the two - dimensional ising model and demonstrate accurate estimation of multicanonical weights .    ,    , and    multicanonical , extended ensemble , mcmc , monte carlo , markov chain , ising , parallelization </S>"
  ]
}
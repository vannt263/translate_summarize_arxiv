{
  "article_text": [
    "a quantum finite automaton ( qfa ) is a model for a quantum computer with a finite memory .",
    "qfas can recognize the same languages as classical finite automata but they can be exponentially more space efficient than their classical counterparts @xcite .    to recognize an arbitrary regular language , qfas need to be able to perform general measurements after reading every input symbol , as in @xcite .",
    "if we restrict qfas to unitary evolution and one measurement at the end of computation ( which might be easier to implement experimentally ) , their power decreases considerably .",
    "namely @xcite , they can only recognize the languages recognized by permutation automata , a classical model in which the transitions between the states have to be fully reversible .",
    "similar decreases of the computational power have been observed in several other contexts .",
    "quantum error correction is possible if we have a supply of quantum bits initialized to @xmath1 at any moment of computation ( see chapter 10 of @xcite ) . yet",
    ", if the number of quantum bits is fixed and it is not allowed to re - initialize them by measurements , error correction becomes difficult @xcite .",
    "simulating a probabilistic turing machine by a quantum turing machine is trivial if we allow to measure and reinitialize qubits but quite difficult if the number of qubits is fixed and they can not be reinitialized @xcite .    thus , the availability of measurements is very important for quantum automata . what happens if the measurements are allowed but restricted ?",
    "how can we use the measurements of a restricted form to enhance the abilities of quantum automata ?",
    "can quantum effects be used to recognize languages that are not recognizable by classical automata with the same reversibility requirements ?    in this paper , we look at those questions for  measure - many \" qfa model by kondacs and watrous @xcite .",
    "this model allows intermediate measurements during the computation but these measurements have to be of a restricted type .",
    "more specifically , they can have 3 outcomes : `` accept '' , `` reject '' , `` do nt halt '' and if one gets `` accept '' or `` reject '' , the computation ends and this is the result of computation .",
    "the reason for allowing measurements of this type was that the states of a qfa then have a simple description of the form @xmath2 where @xmath3 is the probability that the qfa has accepted , @xmath4 is the probability that the qfa has rejected and @xmath5 is the remaining state if the automaton has not accepted or rejected .",
    "allowing more general measurements would make the remaining state a mixed state @xmath6 instead of a pure state @xmath5 . having a mixed state as the current state of a qfa is very reasonable physically but the mathematical apparatus for handling pure states is simpler than one for mixed states .    for this model",
    ", it is known that @xcite    * any language recognizable by a qfa with a probability @xmath7 , @xmath8 is recognizable by a reversible finite automaton ( rfa ) . *",
    "the language @xmath9 can be recognized with probability @xmath10 but can not be recognized by an rfa .",
    "thus , the quantum automata in this model have an advantage over their classical counterparts ( rfas ) with the same reversibility requirements but this advantage only allows to recognize languages with probabilities at most 7/9 , not @xmath11 with arbitrary @xmath8 .",
    "this is a quite unusual property because , in almost any other computational model , the accepting probability can be increased by repeating the computation in parallel . as we see , this is not the case for qfas .    in this paper , we develop a method for determining the maximum probability with which a qfa can recognize a given language .",
    "our method is based on the quantum counterpart of classification of states of a markov chain into ergodic and transient states @xcite .",
    "we use this classification of states to transform the problem of determining the maximum accepting probability of a qfa into a quadratic optimization problem .",
    "then , we solve this problem ( analytically in simpler cases , by computer in more difficult cases ) .",
    "compared to previous work , our new method has two advantages .",
    "first , it gives a systematic way of calculating the maximum accepting probabilities .",
    "second , solving the optimization problems usually gives the maximum probability exactly .",
    "most of previous work @xcite used approaches depending on the language and required two different methods : one for bounding the probability from below , another for bounding it from above . often , using two different approaches gave an upper and a lower bound with a gap between them ( like @xmath12 vs. @xmath7 mentioned above ) .",
    "with the new approach , we are able to close those gaps .",
    "we use our method to calculate the maximum accepting probabilities for a variety of languages ( and classes of languages ) .",
    "first , we construct a quadratic optimization problem for the maximum accepting probability by a qfa of a language that is not recognizable by an rfa .",
    "solving the problem gives the probability @xmath13 .",
    "this probability can be achieved for the language @xmath14 in the two - letter alphabet @xmath15 but no language that is no recognizable by a rfa can be recognized with a higher probability .",
    "this improves the @xmath7 result of @xcite .",
    "this result can be phrased in a more general way .",
    "namely , we can find the property of a language which makes it impossible to recognize the language by an rfa .",
    "this property can be nicely stated in the form of the minimal deterministic automaton containing a fragment of a certain form .",
    "we call such a fragment a  non - reversible construction \" .",
    "it turns out that there are many different `` non - reversible constructions '' and they have different influence on the accepting probability .",
    "the one contained in the @xmath14 language makes the language not recognizable by an rfa but the language is still recognizable by a qfa with probability @xmath0 .",
    "in contrast , some constructions analyzed in @xcite make the language not recognizable with probability @xmath16 for any @xmath8 .    in the rest of this paper , we look at different  non - reversible constructions \" and their effects on the accepting probabilities of qfas .",
    "we consider three constructions : `` two cycles in a row '' , `` @xmath17 cycles in parallel '' and a variant of the @xmath18 construction .",
    "the best probabilities with which one can recognize languages containing these constructions are @xmath19 , @xmath20 and @xmath21 , respectively .    the solution of the optimization problem for `` two cycles in a row '' gives a new qfa for the language @xmath22 that recognizes it with probability @xmath19 , improving the result of @xcite . again",
    ", using the solution of the optimization problem gives a better qfa that was previously missed because of disregarding some parameters .",
    "we define the kondacs - watrous ( `` measure - many '' ) model of qfas @xcite .    [ def1 ]",
    "a qfa is a tuple @xmath23 where @xmath24 is a finite set of states , @xmath25 is an input alphabet , @xmath26 is a transition function ( explained below ) , @xmath27 is a starting state , and @xmath28 and @xmath29 are sets of accepting and rejecting states ( @xmath30 ) .",
    "the states in @xmath31 and @xmath32 , are called _ halting states _ and the states in @xmath33 are called _ non halting states_.    * states of @xmath34 . * the state of @xmath34 can be any superposition of states in @xmath24 ( i. e. , any linear combination of them with complex coefficients ) .",
    "we use @xmath35 to denote the superposition consisting of state @xmath36 only .",
    "@xmath37 denotes the linear space consisting of all superpositions , with @xmath38-distance on this linear space .",
    "* endmarkers .",
    "* let @xmath39 and @xmath40 be symbols that do not belong to @xmath41 .",
    "we use @xmath39 and @xmath40 as the left and the right endmarker , respectively .",
    "we call @xmath42 the _ working alphabet _ of @xmath34",
    ".    * transition function . *",
    "the transition function @xmath26 is a mapping from @xmath43 to @xmath44 such that , for every @xmath45 , the function @xmath46 defined by @xmath47 is a unitary transformation ( a linear transformation on @xmath37 that preserves @xmath38 norm ) .",
    "* computation . *",
    "the computation of a qfa starts in the superposition @xmath48 .",
    "then transformations corresponding to the left endmarker @xmath39 , the letters of the input word @xmath49 and the right endmarker @xmath40 are applied .",
    "the transformation corresponding to @xmath50 consists of two steps .",
    "first , @xmath51 is applied .",
    "the new superposition @xmath52 is @xmath53 where @xmath54 is the superposition before this step .",
    "then , @xmath52 is observed with respect to @xmath55 where @xmath56 , @xmath57 , @xmath58 .",
    "it means that if the system s state before the measurement was @xmath59 then the measurement accepts @xmath60 with probability @xmath61 , rejects with probability @xmath62 and continues the computation ( applies transformations corresponding to next letters ) with probability @xmath63 with the system having the ( normalized ) state @xmath64 where @xmath65 .",
    "we regard these two transformations as reading a letter @xmath66",
    ".    * notation .",
    "* we use @xmath67 to denote the transformation consisting of @xmath68 followed by projection to @xmath69 .",
    "this is the transformation mapping @xmath54 to the non - halting part of @xmath70 .",
    "we use @xmath71 to denote the product of transformations @xmath72 , where @xmath73 is the @xmath74-th letter of the word @xmath75 .",
    "we also use @xmath76 to denote the ( unnormalized ) non - halting part of qfa s state after reading the left endmarker @xmath39 and the word @xmath77 . from the notation it follows that @xmath78 .",
    "* recognition of languages .",
    "* we will say that an automaton recognizes a language @xmath79 with probability @xmath80 @xmath81 if it accepts any word @xmath82 with probability @xmath83 and rejects any word @xmath84 with probability @xmath83 .      for classical markov chains",
    ", one can classify the states of a markov chain into _ ergodic _ sets and _ transient _ sets @xcite .",
    "if the markov chain is in an ergodic set , it never leaves it .",
    "if it is in a transient set , it leaves it with probability @xmath11 for an arbitrary @xmath8 after sufficiently many steps .",
    "a quantum counterpart of a markov chain is a quantum system to which we repeatedly apply a transformation that depends on the current state of the system but does not depend on previous states",
    ". in particular , it can be a qfa that repeatedly reads the same word @xmath49 .",
    "then , the state after reading @xmath49 @xmath85 times depends on the state after reading @xmath49 @xmath17 times but not on any of the states before that .",
    "the next lemma gives the classification of states for such qfas .",
    "[ lemmaaf ] @xcite let @xmath86 .",
    "there are subspaces @xmath87 , @xmath88 such that @xmath89 and    1 .   if @xmath90 , then @xmath91 and @xmath92 , 2 .   if @xmath93 , then @xmath94 when @xmath95 .    instead of ergodic and transient sets",
    ", we have subspaces @xmath87 and @xmath88 .",
    "the subspace @xmath87 is a counterpart of an ergodic set : if the quantum process defined by repeated reading of @xmath49 is in a state @xmath90 , it stays in @xmath87 .",
    "@xmath88 is a counterpart of a transient set : if the state is @xmath93 , @xmath88 is left ( for an accepting or rejecting state ) with probability arbitrarily close to 1 after sufficiently many @xmath49 s .    in some of proofs",
    "we also use a generalization of lemma [ lemmaaf ] to the case of two ( or more ) words @xmath49 and @xmath96 :    [ akvlemma ] @xcite let @xmath97 .",
    "there are subspaces @xmath87 , @xmath88 such that @xmath89 and    1 .   if @xmath90 , then @xmath91 and @xmath98 and @xmath99 and @xmath100 , 2 .   if @xmath93 , then for any @xmath101 , there exists @xmath102 such that @xmath103",
    ".    we also use a lemma from @xcite .",
    "[ bvlemma ] @xcite if @xmath54 and @xmath104 are two quantum states and @xmath105 then the total variational distance between probability distributions generated by the same measurement on @xmath54 and @xmath104 is at most but it can be improved to @xmath106 . ]",
    "ambainis and freivalds @xcite characterized the languages recognized by rfas as follows .",
    "@xcite [ aftheorem ] let @xmath79 be a language and @xmath34 be its minimal automaton .",
    "@xmath79 is recognizable by a rfa if and only if there is no @xmath107 such that    1 .",
    "@xmath108 , 2 .",
    "if @xmath34 starts in the state @xmath109 and reads @xmath49 , it passes to @xmath110 , 3 .   if @xmath34 starts in the state @xmath110 and reads @xmath49 , it passes to @xmath110 , and 4",
    "@xmath110 is neither `` all - accepting '' state , nor `` all - rejecting '' state ,    an rfa is a special case of a qfa that outputs the correct answer with probability 1 .",
    "thus , any language that does not contain the construction of theorem [ aftheorem ] can be recognized by a qfa that always outputs the correct answer .",
    "ambainis and freivalds @xcite also showed the reverse of this : any language @xmath79 with the minimal automaton containing the construction of theorem [ aftheorem ] can not be recognized by a qfa with probability @xmath7 .",
    "we consider the question : what is the maximum probability of correct answer than can be achieved by a qfa for a language that can not be recognized by an rfa ?",
    "the answer is :    [ t1 ] let @xmath79 be a language and @xmath34 be its minimal automaton .    1 .",
    "if @xmath34 contains the construction of theorem [ aftheorem ] , @xmath79 can not be recognized by a 1-way qfa with probability more than @xmath111 .",
    "2 .   there is a language @xmath79 with the minimal automaton @xmath34 containing the construction of theorem [ aftheorem ] that can be recognized by a qfa with probability @xmath111 .    _ proof . _",
    "we consider the following optimization problem .",
    "* optimization problem 1 . *",
    "find the maximum @xmath80 such that there is a finite dimensional vector space @xmath112 , subspaces @xmath113 , @xmath114 such that @xmath115 , vectors @xmath116 , @xmath117 such that @xmath118 and @xmath119 and probabilities @xmath120 , @xmath121 such that @xmath122 and    1 .",
    "@xmath123 , 2 .",
    "@xmath124 , 3 .",
    "@xmath125 .",
    "we sketch the relation between a qfa recognizing @xmath79 and this optimization problem .",
    "let @xmath24 be a qfa recognizing @xmath79 .",
    "let @xmath126 be the minimum probability of the correct answer for @xmath24 , over all words .",
    "we use @xmath24 to construct an instance of the optimization problem above with @xmath127 .",
    "namely , we look at @xmath24 reading an infinite ( or very long finite ) sequence of letters @xmath49 . by lemma [ lemmaaf ]",
    ", we can decompose the starting state @xmath54 into 2 parts @xmath128 and @xmath129 .",
    "define @xmath130 and @xmath131 .",
    "let @xmath120 and @xmath121 be the probabilities of getting into an accepting ( for @xmath120 ) or rejecting ( for @xmath121 ) state while reading an infinite sequence of @xmath49 s starting from the state @xmath117 .",
    "the second part of lemma [ lemmaaf ] implies that @xmath122 .",
    "since @xmath109 and @xmath110 are different states of the minimal automaton @xmath34 , there is a word @xmath96 that is accepted in one of them but not in the other . without loss of generality , we assume that @xmath96 is accepted if @xmath34 is started in @xmath109 but not if @xmath34 is started in @xmath110 . also , since @xmath110 is not an `` all - accepting '' state , there must be a word @xmath132 that is rejected if @xmath34 is started in the state @xmath110 .",
    "we choose @xmath113 and @xmath114 so that the square of the projection @xmath133 ( @xmath134 ) of a vector @xmath135 on @xmath113 ( @xmath114 ) is equal to the accepting ( rejecting ) probability of @xmath24 if we run @xmath24 on the starting state @xmath135 and input @xmath96 and the right endmarker @xmath40 .",
    "finally , we set @xmath80 equal to the @xmath136 of the set consisting of the probabilities of correct answer of @xmath24 on the words @xmath96 and @xmath137 , @xmath138 for all @xmath139 .",
    "then , condition 1 of the optimization problem , @xmath123 is true because the word @xmath96 must be accepted and the accepting probability for it is exactly the square of the projection of the starting state ( @xmath140 ) to @xmath133 .    condition 2 follows from running @xmath24 on a word @xmath137 for some large @xmath74 . by lemma [ lemmaaf ] , if @xmath141 for some @xmath17 , @xmath142 .",
    "also , @xmath116 , @xmath143 , @xmath144 , @xmath145 is an infinite sequence in a finite - dimensional space .",
    "therefore , it has a limit point and there are @xmath146 , @xmath147 such that @xmath148 we have @xmath149 since @xmath99 for @xmath90 , @xmath150 and we have @xmath151 thus , reading @xmath152 has the following effect :    1 .",
    "@xmath116 gets mapped to a state that is at most @xmath153-away ( in @xmath38 norm ) from @xmath116 , 2 .",
    "@xmath117 gets mapped to an accepting / rejecting state and most @xmath153 fraction of it stays on the non - halting states .    together",
    ", these two requirements mean that the state of @xmath24 after reading @xmath152 is at most @xmath154-away from @xmath116 .",
    "also , the probabilities of @xmath24 accepting and rejecting while reading @xmath152 differ from @xmath120 and @xmath121 by at most @xmath153 .",
    "let @xmath155 be the probability of @xmath24 rejecting @xmath137 .",
    "since reading @xmath96 in @xmath110 leads to a rejection , @xmath137 must be rejected and @xmath156 .",
    "the probability @xmath155 consists of two parts : the probability of rejection during @xmath152 and the probability of rejection during @xmath96 .",
    "the first part differs from @xmath121 by at most @xmath153 , the second part differs from @xmath157 by at most @xmath158 ( because the state of @xmath24 when starting to read @xmath96 differs from @xmath116 by at most @xmath154 and , by lemma [ bvlemma ] , the accepting probabilities differ by at most twice that ) .",
    "therefore , @xmath159 since @xmath156 , this implies @xmath160 . by appropriately choosing @xmath74",
    ", we can make this true for any @xmath8 .",
    "therefore , we have @xmath161 which is condition 2 .    condition 3 is true by considering @xmath138 .",
    "this word must be accepted with probability @xmath80 .",
    "therefore , for any @xmath74 , @xmath24 can only reject during @xmath152 with probability @xmath162 and @xmath125 .",
    "this shows that no qfa can achieve a probability of correct answer more than the solution of optimization problem 1 .",
    "it remains to solve this problem .",
    "* solving optimization problem 1 . *",
    "the key idea is to show that it is enough to consider 2-dimensional instances of the problem .    since @xmath118 , the vectors @xmath163 form a right - angled triangle",
    "this means that @xmath164 , @xmath165 where @xmath166 is the angle between @xmath116 and @xmath140 .",
    "let @xmath167 and @xmath168 be the normalized versions of @xmath116 and @xmath117 : @xmath169 , @xmath170 .",
    "then , @xmath171 and @xmath172 .",
    "consider the two - dimensional subspace spanned by @xmath173 and @xmath174 .",
    "since the accepting and the rejecting subspaces @xmath113 and @xmath114 are orthogonal , @xmath173 and @xmath174 are orthogonal .",
    "therefore , the vectors @xmath175 and @xmath176 form an orthonormal basis .",
    "we write the vectors @xmath167 , @xmath116 and @xmath140 in this basis .",
    "the vector @xmath167 is @xmath177 where @xmath178 is the angle between @xmath167 and @xmath179 .",
    "the vector @xmath171 is equal to @xmath180 .",
    "next , we look at the vector @xmath140 .",
    "we fix @xmath178 , @xmath166 and @xmath116 and try to find the @xmath117 which maximizes @xmath80 for the fixed @xmath178 , @xmath166 and @xmath116 . the only place where @xmath117 appears in the optimization problem 1",
    "is @xmath181 on the left hand side of condition 1 .",
    "therefore , we should find @xmath117 that maximizes @xmath181 .",
    "we have two cases :    1 .",
    "+ the angle between @xmath140 and @xmath179 is at least @xmath183 ( because the angle between @xmath116 and @xmath179 is @xmath178 and the angle between @xmath140 and @xmath116 is @xmath166 ) .",
    "therefore , the projection of @xmath140 to @xmath179 is at most @xmath184 .",
    "since @xmath185 is a part of the rejecting subspace @xmath114 , this means that @xmath186 .",
    "the maximum @xmath187 is achieved if we put @xmath140 in the plane spanned by @xmath179 and @xmath185 : @xmath188 . + next",
    ", we can rewrite condition 3 of the optimization problem as @xmath189 . then",
    ", conditions 1 - 3 together mean that @xmath190 to solve the optimization problem , we have to maximize ( [ eq1 ] ) subject to the conditions of the problem . from the expressions for @xmath116 and @xmath140 above",
    ", it follows that ( [ eq1 ] ) is equal to @xmath191 first , we maximize @xmath192 .",
    "the first term is increasing in @xmath121 , the second is decreasing .",
    "therefore , the maximum is achieved when both become equal which happens when @xmath193 .",
    "then , both @xmath194 and @xmath195 are @xmath196 .",
    "now , we have to maximize @xmath197 we first fix @xmath183 and try to optimize the second term .",
    "since @xmath198 ( a standard trigonometric identity ) , it is maximized when @xmath199 and @xmath200 .",
    "then , @xmath201 and ( [ eq3 ] ) becomes @xmath202 the first term is increasing in @xmath178 , the second is decreasing .",
    "the maximum is achieved when @xmath203 the left hand side of ( [ eq5 ] ) is equal to @xmath204 .",
    "therefore , if we denote @xmath205 by @xmath96 , ( [ eq5 ] ) becomes a quadratic equation in @xmath96 : @xmath206 solving this equation gives @xmath207 and @xmath208 .",
    "2 .   @xmath209 .",
    "+ we consider @xmath210 . since the minimum of two quantities is at most their average , this is at most @xmath211 since @xmath209 , we have @xmath212 and ( [ eq6 ] ) is at most @xmath213 .",
    "this is maximized by @xmath214 .",
    "then , we get @xmath215 which is less than @xmath216 which we got in the first case .",
    "this proves the first part of the theorem .",
    "* construction of a qfa . *",
    "this part is proven by taking the solution of optimization problem 1 and using it to construct a qfa for the language @xmath18 in a two - letter alphabet @xmath15 .",
    "the state @xmath109 is just the starting state of the minimal automaton , @xmath110 is the state to which it gets after reading @xmath66 , @xmath217 , @xmath96 is the empty word and @xmath218 .",
    "let @xmath178 be the solution of ( [ eq5 ] ) .",
    "then , @xmath219 , @xmath220 , @xmath221 , @xmath222 and @xmath223 .",
    "@xmath224 is the probability of correct answer for our qfa described below .",
    "the qfa @xmath34 has 5 states : @xmath225 , @xmath226 and @xmath227 .",
    "@xmath228 , @xmath229 .",
    "the initial state is @xmath230 .",
    "the transition function is @xmath231 @xmath232 @xmath233 to recognize @xmath79 , @xmath34 must accept all words of the form @xmath234 for @xmath235 and reject the empty word and any word that contains the letter @xmath236 .    1 .   the empty word .",
    "+ the only tranformation applied to the starting state is @xmath237 .",
    "therefore , the final superposition is @xmath238 the amplitude of @xmath239 in the final superposition is @xmath240 and the word is rejected with a probability @xmath241 .",
    "2 .   @xmath234 for @xmath235 .",
    "+ first , @xmath68 maps the @xmath242 component to @xmath243 the probability of accepting at this point is @xmath244 .",
    "the other component of the superposition , @xmath245 stays unchanged until @xmath237 maps it to @xmath246 the probability of accepting at this point is @xmath247 .",
    "the total probability of accepting is @xmath248 by equation ( [ eq6 ] ) , this is equal to @xmath224 .",
    "3 .   a word containing at least one @xmath236 .",
    "+ if @xmath236 is the first letter of the word , the entire superposition is mapped to rejecting states and the word is rejected with probability 1 . otherwise , the first letter is @xmath66 , it maps @xmath249 to @xmath250 .",
    "the probability of accepting at this point is @xmath251 . by equation ( [ eq6 ] ) , this is the same as @xmath252 .",
    "after that , the remaining component ( @xmath245 ) is not changed by next @xmath66s and mapped to a rejecting state by the first @xmath236 . therefore , the total probability of accepting is also @xmath252 and the correct answer ( rejection ) is given with a probability @xmath224 .",
    "we now look at fragments of the minimal automaton that imply that a language can not be recognized with probability more than @xmath80 , for some @xmath80 .",
    "we call such fragments  non - reversible constructions \" .",
    "the simplest such construction is the one of theorem [ aftheorem ] . in this section",
    ", we present 3 other ",
    "non - reversible constructions \" that imply that a language can be recognized with probability at most @xmath21 , @xmath19 and @xmath20 .",
    "this shows that different constructions are  non - reversible \" to different extent .",
    "comparing these 4 `` non - reversible '' constructions helps to understand what makes one of them harder for qfa ( i.e. , recognizable with worse probability of correct answer )      the first construction comes from the language @xmath22 considered in ambainis and freivalds @xcite .",
    "this language was the first example of a language that can be recognized by a qfa with some probability ( 0.6822 ... ) but not with another ( @xmath7 ) .",
    "we find the `` non - reversible '' construction for this language and construct the qfa with the best possible accepting probability .",
    "[ tf4 ] let @xmath79 be a language and @xmath34 its minimal automaton .    1 .",
    "if @xmath34 contains states @xmath109 , @xmath110 and @xmath253 such that , for some words @xmath49 and @xmath96 , 1",
    ".   if @xmath34 reads @xmath49 in the state @xmath109 , it passes to @xmath109 , 2 .",
    "if @xmath34 reads @xmath96 in the state @xmath109 , it passes to @xmath110 , 3 .",
    "if @xmath34 reads @xmath96 in the state @xmath110 , it passes to @xmath110 , 4 .",
    "if @xmath34 reads @xmath49 in the state @xmath110 , it passes to @xmath253 , 5 .",
    "if @xmath34 reads @xmath49 in the state @xmath253 , it passes to @xmath253 + then @xmath79 can not be recognized by a qfa with probability more than @xmath19 .",
    "the language @xmath254 ( the minimal automaton of which contains the construction above ) can be recognized by a qfa with probability @xmath19 .",
    "_ by a reduction to the following optimization problem .",
    "* optimization problem 2 . *",
    "find the maximum @xmath80 such that there is a finite - dimensional space @xmath255 , subspaces @xmath113 , @xmath114 such that @xmath256 , vectors @xmath116 , @xmath117 and @xmath257 and probabilities @xmath258 , @xmath259 , @xmath260 , @xmath261 such that    1 .",
    "@xmath262 , 2 .",
    "@xmath263 , 3 .",
    "@xmath264 , 4 .",
    "5 .   @xmath266 ; 6 .",
    "@xmath267 ; 7 .   @xmath268 ; 8 .",
    "@xmath269 ; 9 .",
    "@xmath270 .",
    "we use a theorem from @xcite .",
    "[ t13 ] let @xmath79 be a language and @xmath34 be its minimal automaton .",
    "assume that there is a word @xmath49 such that @xmath34 contains states @xmath109 , @xmath110 satisfying :    1 .",
    "@xmath108 , 2 .",
    "if @xmath34 starts in the state @xmath109 and reads @xmath49 , it passes to @xmath110 , 3 .",
    "if @xmath34 starts in the state @xmath110 and reads @xmath49 , it passes to @xmath110 , and 4 .   there is a word @xmath96 such that if m starts in @xmath110 and reads y , it passes to @xmath109 ,    then @xmath79 can not be recognized by any 1-way quantum finite automaton .",
    "let @xmath24 be a qfa recognizing @xmath79 .",
    "let @xmath271 be state where the minimal automaton @xmath34 goes if it reads @xmath96 in the state @xmath253 . in case when @xmath272 we get the forbidden construction of theorem [ t13 ] . in case when @xmath273 states @xmath110 and @xmath271 are different states of the minimal automaton @xmath34 .",
    "therefore , there is a word @xmath132 that is accepted in one of them but not in the other . without loss of generality , we assume that @xmath96 is accepted if @xmath34 is started in @xmath110 but not if @xmath34 is started in @xmath271 .",
    "we choose @xmath113 so that the square of the projection @xmath133 of a vector @xmath135 on @xmath113 is equal to the accepting probability of @xmath24 if we run @xmath24 on the starting state @xmath135 and input @xmath274 and the right endmarker @xmath40 .",
    "we use lemma [ lemmaaf ] .",
    "let @xmath275 be @xmath87 and @xmath276 be @xmath88 for word @xmath49 and let @xmath277 be @xmath278 and @xmath279 be @xmath278 for word @xmath96 .",
    "without loss of generality we can assume that @xmath109 is a starting state of @xmath34 .",
    "let @xmath280 be the starting superposition for @xmath24 .",
    "we can also assume that reading @xmath49 in this state does not decrease the norm of this superposition .",
    "we divide @xmath280 into three parts : @xmath116 , @xmath117 and @xmath257 so that @xmath281 and @xmath282 , @xmath283 and @xmath284 . due to @xmath285 is the starting superposition we have @xmath286(condition 1 ) .    since @xmath287",
    "we get that @xmath264(condition 3 ) due to @xmath284 .",
    "similarly @xmath265(condition 4 ) and @xmath263(condition 2 ) .",
    "it is easy to get that @xmath288(condition 7 ) because reading @xmath274 in the state @xmath109 leads to accepting state .",
    "let @xmath258(@xmath259 ) be the accepting(rejecting ) probability while reading an infinite sequence of letters @xmath96 in the state @xmath285 .",
    "then @xmath289(condition 5 ) due to @xmath281 and @xmath282 .",
    "let @xmath260(@xmath261 ) be the accepting(rejecting ) probability while reading an infinite sequence of letters @xmath49 in the state @xmath140 .",
    "then @xmath290(condition 6 ) due to @xmath291 and @xmath284 .",
    "we find an integer @xmath74 such that after reading @xmath292 the norm of @xmath293 is at most some fixed @xmath101 . now similarly to theorem [ t1 ] we can get condition 8 : @xmath294 .",
    "let @xmath295 , @xmath296 , @xmath297 .",
    "we find an integer @xmath298 such that after reading @xmath299 the norm of @xmath300 is at most @xmath153 . since @xmath301 then @xmath302 .",
    "therefore , @xmath303 .",
    "then @xmath304 due to previous inequalities .",
    "now similarly to theorem [ t1 ] we can get condition 9 : @xmath305 . +",
    "we have constructed our second optimization problem .",
    "we solve the problem by computer . using this solution",
    "we can easily construct corresponding quantum automaton .",
    "= 2.5 in    [ tf5 ] let @xmath306",
    "let @xmath79 be a language .",
    "if there are words @xmath307 such that its minimal automaton @xmath34 contains states @xmath308 satisfying : 1 .   if m starts in the state @xmath309 and reads @xmath310 , it passes to @xmath311 , 2 .",
    "if m starts in the state @xmath312 and reads @xmath313 , it passes to @xmath311 , 3 .   for each @xmath74 the state @xmath311 is not `` all - rejecting '' state , + then @xmath79 can not be recognized by a qfa with probability greater than @xmath314 .",
    "2 .   there is a language such that its minimal deterministic automaton contains this construction and the language can be recognized by a qfa with probability @xmath314 .    for @xmath315 ,",
    "a related construction was considered in @xcite .",
    "there is a subtle difference between the two constructions ( the one considered here for @xmath315 and the one in @xcite ) .",
    "the `` non - reversible construction '' in @xcite requires the sets of words accepted from @xmath109 and @xmath110 to be incomparable .",
    "this extra requirement makes it much harder : no qfa can recognize a language with the `` non - reversible construction '' of @xcite even with the probability @xmath16 .    _ proof .",
    "_    * impossibility result .",
    "* this is the only proof in this paper that does not use a reduction to an optimization problem .",
    "instead , we use a variant of the classification of states ( lemma [ akvlemma ] ) directly .",
    "we only consider the case when the sets of words accepted from @xmath311 and @xmath316 are not incomparable .",
    "( the other case follows from the impossibility result in @xcite . )",
    "let @xmath317 be the set of words accepted from @xmath312 .",
    "this means that for each @xmath318 we have either @xmath319 or @xmath320 . without loss of generality",
    "we can assume that @xmath321 .",
    "now we can choose @xmath17 words @xmath322 such that @xmath323 and @xmath324 .",
    "the word @xmath325 exists due to the condition _",
    "( c)_.    we use a generalization of lemma [ akvlemma ] .",
    "[ lemma2 ] let @xmath326 .",
    "there are subspaces @xmath87 , @xmath88 such that @xmath89 and    1 .   if @xmath90 , then @xmath327 @xmath328 @xmath329 and @xmath330 @xmath328 @xmath331 2 .   if @xmath93 , then for any @xmath101 , there exists a word @xmath332 such that @xmath103 .",
    "the proof is similar to lemma [ akvlemma ] .",
    "let @xmath79 be a language such that its minimal automaton @xmath34 contains the  non reversible construction  from theorem [ tf5 ] and @xmath333 be a qfa .",
    "let @xmath80 be the accepting probability of @xmath333 .",
    "we show that @xmath334 .",
    "let @xmath75 be a word such that after reading it @xmath34 is in the state @xmath309 .",
    "let @xmath335 , @xmath336 , @xmath337 .",
    "we find a word @xmath338 such that after reading @xmath339 the norm of @xmath340 is at most some fixed @xmath8 .",
    "( such word exists due to lemma [ lemma2 ] . )",
    "we also find words @xmath341 such that @xmath342 , @xmath145 , @xmath343 .    because of unitarity of @xmath344 , @xmath145 , @xmath345 on @xmath87 ( part ( i ) of lemma [ lemma2 ] ) , there exist integers @xmath346 such that @xmath347 , @xmath328 @xmath348 .",
    "let @xmath349 be the probability of @xmath333 accepting while reading @xmath350 .",
    "let @xmath351 be the probabilities of accepting while reading @xmath352 with a starting state @xmath76 and and @xmath353 be the probabilities of accepting while reading @xmath354 with a starting state @xmath355 .",
    "let us consider @xmath356 words : + @xmath357 + @xmath358 + @xmath359 + @xmath360 + @xmath328 + @xmath361 + @xmath362 + @xmath363    @xmath333 accepts @xmath364 with probability at least @xmath365 and at most @xmath366 .",
    "* proof . *",
    "the probability of accepting while reading @xmath350 is @xmath349 .",
    "after that , @xmath333 is in the state @xmath76 and reading @xmath367 in this state causes it to accept with probability @xmath120 .",
    "the remaining state is @xmath368 .",
    "if it was @xmath355 , the probability of accepting while reading the rest of the word ( @xmath369 ) would be exactly @xmath370 .",
    "it is not quite @xmath355 but it is close to @xmath355 .",
    "namely , we have @xmath371 by lemma [ bvlemma ] , this means that the probability of accepting during @xmath369 is between @xmath372 and @xmath373 .",
    "this lemma implies that @xmath374 because of @xmath375 .",
    "similarly , @xmath376 because of @xmath377 . finally , we have @xmath356 inequalities : + @xmath378 + @xmath379 + @xmath380 + @xmath381 + @xmath328 + @xmath382 + @xmath383 + @xmath384 + by adding up these inequalities we get @xmath385 .",
    "we can notice that @xmath386 .",
    "( this is due to the facts that @xmath387 , @xmath388 and @xmath389 . ) hence , @xmath390 . since",
    "such @xmath356 words can be constructed for arbitrarily small @xmath153 , this means that @xmath333 does not recognize @xmath79 with probability greater than @xmath314 .",
    "* constructing a quantum automaton . *    we consider a language @xmath391 in the alphabet @xmath392 such that its minimal automaton has accepting states @xmath308 and rejecting state @xmath226 and the transition function @xmath393 is defined as follows :    @xmath394 , @xmath395 , @xmath396 , @xmath397 , @xmath398 , @xmath399 , @xmath400 .",
    "it can be checked that this automaton contains the  non reversible construction  from theorem 4 .",
    "hence , this language can not be recognized by a qfa with probability greater than @xmath314 .",
    "next , we construct a qfa @xmath333 that accepts this language with such probability .",
    "the automaton has @xmath401 states : @xmath402 , @xmath403 , @xmath404 @xmath405 .",
    "@xmath406 , @xmath407 .",
    "the initial state is @xmath408 the transition function is @xmath409 @xmath410 @xmath411    1 .   the empty word .",
    "+ the only tranformation applied to the starting state is @xmath237 .",
    "therefore , the final superposition is @xmath412 and the word is accepted with probability 1 . 2 .",
    "the word starts with @xmath413 . + reading @xmath413 maps @xmath414 to @xmath415 .",
    "therefore , this word is accepted with probability at least @xmath416 .",
    "word is in form @xmath417 .",
    "the superposition after reading @xmath418 is @xmath419 at this moment @xmath333 accepts with probability @xmath420 and rejects with probability @xmath421 .",
    "the computation continues in the superposition @xmath422 clearly , that reading of all remaining letters does not change this superposition . since @xmath423 maps each @xmath424 to an accepting state then @xmath333 rejects this word with probability at most @xmath425 4 .",
    "word @xmath49 starts with @xmath426 . before reading @xmath427",
    "the superposition is @xmath422 + _ case 1 .",
    "_ @xmath428 .",
    "@xmath429 + since @xmath428 then reading @xmath427 maps at least @xmath430 states of @xmath431 to rejecting states .",
    "this means that @xmath333 rejects with probability at least @xmath432 + _ case 2 .",
    "_ @xmath433 .",
    "@xmath434 since @xmath433 then reading @xmath427 maps at least @xmath435 states of @xmath431 to accepting states .",
    "this means that @xmath333 accepts with probability at least @xmath436      [ tf2 ] let @xmath79 be a language .    1 .   if there are words @xmath49 ,",
    "@xmath325 , @xmath437 such that its minimal automaton @xmath34 contains states @xmath109 and @xmath110 satisfying : 1 .   if m starts in the state @xmath109 and reads @xmath49 , it passes to @xmath110 , 2 .",
    "if m starts in the state @xmath110 and reads @xmath49 , it passes to @xmath110 , 3 .",
    "if m starts in the state @xmath109 and reads @xmath325 , it passes to an accepting state , 4 .   if m starts in the state @xmath109 and reads @xmath437 , it passes to a rejecting state , 5 .   if m starts in the state @xmath110 and reads @xmath325 , it passes to a rejecting state , 6 .",
    "if m starts in the state @xmath110 and reads @xmath437 , it passes to an accepting state .",
    "+ then @xmath79 can not be recognized by a qfa with probability greater than @xmath438 .",
    "2 .   there is a language @xmath79 with the minimum automaton containing this construction that can be recognized with probability @xmath438 .",
    "_    * impossibility result .",
    "*    the construction of optimization problem is similar to the construction of optimization problem 1 .",
    "for this reason , we omit it and just give the optimization problem and show how to solve it .",
    "* optimization problem 3 .",
    "* find the maximum @xmath80 such that there is a finite dimensional vector space @xmath112 , subspaces @xmath113 , @xmath114 ( unlike in previous optimization problems , @xmath113 and @xmath114 do not have to be orthogonal ) and vectors @xmath116 , @xmath117 such that @xmath118 and @xmath439 and probabilities @xmath120 , @xmath121 such that @xmath122 and    1 .",
    "@xmath123 , 2 .",
    "@xmath440 , 3 .",
    "@xmath441 , 4 .",
    "@xmath442 .",
    "* solving optimization problem 3 . *    without loss of generality we can assume that @xmath443 .",
    "then these four inequalities can be replaced with only three inequalities    1 .",
    "@xmath123 , 2 .",
    "@xmath441 , 3 .",
    "@xmath444 .    clearly that @xmath80 is maximized by @xmath445 .",
    "therefore , we have    1 .",
    "@xmath123 , 2 .",
    "@xmath446 .",
    "next we show that it is enough to consider only instances of small dimension .",
    "we denote @xmath447 as @xmath448 .",
    "first , we restrict @xmath113 to the subspace @xmath449 generated by projections of @xmath116 and @xmath117 to @xmath113 .",
    "this subspace is at most 2-dimensional .",
    "similarly , we restrict @xmath448 to the subspace @xmath450 generated by projections of @xmath116 and @xmath117 to @xmath448 .",
    "the lengths of all projections are still the same .",
    "we fix an orthonormal basis for @xmath112 so that @xmath451 and @xmath452 are both parallel to some basis vectors .",
    "then , @xmath453 and @xmath454 where the first two coordinates correspond to basis vectors of @xmath449 and the last two coordinates correspond to basis vectors of @xmath450 .",
    "we can assume that @xmath455 and @xmath456 are both non - negative .",
    "( otherwise , just invert the direction of one of basis vectors . )",
    "let @xmath457 .",
    "then , there is @xmath458 $ ] such that @xmath459 , @xmath460 .",
    "let @xmath461 .",
    "then , @xmath462 , @xmath463 because @xmath464 due to @xmath118 .",
    "if @xmath465 , we can change @xmath466 and @xmath467 to @xmath468 and @xmath469 where @xmath470 and this only increases @xmath471 .",
    "hence , we can assume that @xmath472 .",
    "we denote @xmath473 .",
    "then , @xmath474 , @xmath475 .",
    "let @xmath476 .",
    "then , @xmath477 and @xmath478 for some @xmath479 $ ] and @xmath480 .",
    "this gives    1 .",
    "@xmath481 , 2 .",
    "@xmath482 .    then after some calculations we get    1 .",
    "@xmath483 , 2 .",
    "@xmath484 .",
    "if we fix @xmath485 and vary @xmath166 , then @xmath486 ( and , hence , @xmath487 ) is maximized by @xmath488 .",
    "this means that we can assume @xmath488 and we have    1 .",
    "@xmath489 , 2 .",
    "@xmath490 .",
    "if we consider @xmath491 then @xmath492 .",
    "this means that we are only interested in @xmath493 .",
    "let @xmath494 and @xmath495 .",
    "if we fix @xmath178 and vary @xmath496 , then @xmath497 and @xmath498 are linear functions in @xmath496 and @xmath499 .",
    "we consider two cases .",
    "+   + _ case 1 .",
    "_ @xmath500 .",
    "( this gives @xmath501 for each @xmath496 .",
    "therefore , in this case we only need to maximize the function @xmath498 . )",
    "+ this means that @xmath502 @xmath503 @xmath504 @xmath505 @xmath506 @xmath507 @xmath508 so that @xmath493 , we have @xmath509 this means that @xmath510 $ ] .    since @xmath511 , @xmath498 is maximized by @xmath512 and @xmath513 .",
    "this gives @xmath80 equal to @xmath514 .",
    "+ _ case 2 .",
    "_ @xmath515 .",
    "( this is equivalent to @xmath516 $ ] . )",
    "+ this means that @xmath80 is maximized by @xmath517 .",
    "therefore ,    1 .",
    "@xmath518 , 2 .",
    "@xmath519 .",
    "let @xmath96 be @xmath520 .",
    "then @xmath521 $ ] and @xmath522 . therefore ,    1 .",
    "@xmath523 , 2 .",
    "@xmath524 .",
    "now we express @xmath80 using only @xmath96 .",
    "we get @xmath525 .",
    "finally , if we vary @xmath96 through the interval @xmath526 $ ] , then @xmath80 is maximized by @xmath527 .",
    "this gives @xmath80 equal to @xmath514 .",
    "* construction of a qfa . *",
    "we consider the two letter alphabet @xmath528 .",
    "the language @xmath79 is the union of the empty word and @xmath529 . clearly that the minimal deterministic automaton of @xmath79 contains the  non reversible construction  from theorem 5 ( just take @xmath66 as @xmath49 , the empty word as @xmath325 and @xmath236 as @xmath437 ) .",
    "next , we describe a qfa @xmath34 accepting this language .",
    "let @xmath178 be the solution of @xmath530 in the interval @xmath531 $ ] .",
    "it can be checked that @xmath532 , @xmath533 , @xmath534 , @xmath535 .",
    "the automaton has 4 states : @xmath225 and @xmath536 .",
    "@xmath228 , @xmath537 .",
    "the initial state is @xmath538 .",
    "the transition function is    @xmath539 @xmath540 @xmath541 @xmath542    1 .",
    "the empty word .",
    "+ the only tranformation applied to the starting state is @xmath237 .",
    "therefore , the final superposition is @xmath543 and the word is accepted with probability @xmath532 .",
    "2 .   @xmath544 .",
    "+ after reading @xmath236 the superposition is @xmath545 and word is rejected with probability @xmath532 .",
    "3 .   @xmath18 .",
    "+ after reading the first @xmath66 the superposition becomes @xmath546 at this moment @xmath34 accepts with probability @xmath547 and rejects with probability @xmath548 .",
    "the computation continues in the superposition @xmath549 it is easy to see that reading all of remaining letters does not change this superposition .",
    "+ therefore , the final superposition ( after reading @xmath40 ) is @xmath550 this means that @xmath34 rejects with probability @xmath551 .",
    "4 .   @xmath529 .",
    "+ before reading the first @xmath236 the superposition is @xmath552 and reading this @xmath236 changes this superposition to @xmath553 this means that @xmath34 accepts with probability @xmath554",
    "quantum finite automata ( qfa ) can recognize all regular languages if arbitrary intermediate measurements are allowed . if they are restricted to be unitary , the computational power drops dramatically , to languages recognizable by permutation automata @xcite . in this paper",
    ", we studied an intermediate case in which measurements are allowed but restricted to `` accept - reject - continue '' form ( as in @xcite ) .",
    "quantum automata of this type can recognize several languages not recognizable by the corresponding classical model ( reversible finite automata ) . in all of those cases ,",
    "those languages can not be recognized with probability 1 or @xmath11 , but can be recognized with some fixed probability @xmath555 .",
    "this is an unusual feature of this model because , in most other computational models a probability of correct answer @xmath555 can be easily amplified to @xmath11 for arbitrary @xmath8 .    in this paper",
    ", we study maximal probabilities of correct answer achievable for several languages .",
    "those probabilities are related to  forbidden constructions \" in the minimal automaton .",
    "forbidden construction \" being present in the minimal automaton implies that the language can not be recognized with a probability higher than a certain @xmath555 .",
    "the basic construction is  one cycle \" in figure [ f1 ] .",
    "composing it with itself sequentially ( figure [ f4 ] ) or in parallel ( figure [ f5 ] ) gives  forbidden constructions \" with a smaller probability @xmath80 .",
    "the achievable probability also depends on whether the sets of words accepted from the different states of the construction are subsets of one another ( as in figure [ f1 ] ) or incomparable ( as in figure [ f2 ] ) .",
    "the constructions with incomparable sets usually imply smaller probabilities @xmath80 .",
    "the accepting probabilities @xmath80 quantify the degree of non - reversibility present in the  forbidden construction \" .",
    "lower probability @xmath80 means that the language is more difficult for qfa and thus , the  construction \" has higher degree of non - reversibility . in our paper",
    ", we gave a method for calculating this probability and used it to calculate the probabilities @xmath80 for several  constructions \" .",
    "the method should apply to a wide class of constructions but solving the optimization problems can become difficult if the construction contains more states ( as for language @xmath556 studied in @xcite ) . in this case",
    ", it would be good to have methods for calculating the accepting probabilities approximately .",
    "a more general problem suggested by this work is : how do we quantify non - reversibility ? accepting probabilities of qfas provide one way of comparing the degree of non - reversibility in different `` constructions '' .",
    "what are the other ways of quantifying it ? and what are the other settings in which similar questions can be studied ?",
    "john watrous .",
    "space - bounded quantum complexity .",
    "_ journal of computer and system sciences _ , 59:281 - 326 , 1999 .",
    "( preliminary version in proceedings of complexity98 , under the title `` relationships between quantum and classical space - bounded complexity classes '' . )"
  ],
  "abstract_text": [
    "<S> one of the properties of the kondacs - watrous model of quantum finite automata ( qfa ) is that the probability of the correct answer for a qfa can not be amplified arbitrarily . in this paper </S>",
    "<S> , we determine the maximum probabilities achieved by qfas for several languages . </S>",
    "<S> in particular , we show that any language that is not recognized by an rfa ( reversible finite automaton ) can be recognized by a qfa with probability at most @xmath0 .    quantum computation , finite automata , quantum measurement . </S>"
  ]
}
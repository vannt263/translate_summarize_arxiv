{
  "article_text": [
    "this paper is an extended version of study @xcite , and contains additional detailed experimental results .",
    "dynamic ( or _ online _ ) vehicle routing problems ( d - vrps ) arise when information about demands is incomplete , _",
    "e.g. _ , whenever a customer is able to submit a request during the online execution of a solution .",
    "d - vrp instances usually indicate the deterministic requests , _",
    "i.e. _ , those that are known before the online process if any .",
    "whenever some additional ( stochastic ) knowledge about unknown requests is available , the problem is said to be _",
    "we focus on the _ dynamic _ and _ stochastic _ vrp with _ time windows _ ( ds - vrptw ) .",
    "these problems arise in many practical situations , as door - to - door or door - to - hospital transportation of elderly or disabled persons . in many countries ,",
    "authorities try to set up dial - a - ride services , but escalating operating costs and the complexity of satisfying all customer demands become rapidly unmanageable for solution methods based on human choices @xcite . however , such complex dynamic problems need reliable and efficient algorithms that should first be assessed on reference problems , such as the ds - vrptw .    in this paper , we present _ a new heuristic method for solving the ds - vrptw _ , based on a stochastic programming modeling . by definition ,",
    "our approach enables a _ higher level of anticipation _ than heuristic state - of - the - art methods .",
    "the resulting new online decision rule , called global stochastic assessment ( gsa ) , comes with a theoretical analysis that clearly defines the nature of the method .",
    "we propose a _ new waiting strategy _ together with a heuristic algorithm that embeds gsa .",
    "we compare gsa with the state - of - the - art method msa from @xcite , and provide a _ comprehensive experimental study _ that highlights the contributions of existing and new waiting and relocation strategies .",
    "this paper is organized as follows .",
    "section [ sec : problem_desc ] describes the problem .",
    "section [ sec : related_work ] presents the state - of - the - art method we compare to and briefly discuss related works .",
    "gsa is then presented in section [ sec : gsa ] .",
    "section [ sec : solving - dsvrptw ] describes an implementation that embeds gsa , based on heuristic local search .",
    "finally , section [ sec : experimentations ] resumes the experimental results .",
    "a conclusion follows in section [ sec : conclusions ] .",
    "[ [ notations . ] ] notations . + + + + + + + + + +    we note @xmath0 $ ] the set of all integer values @xmath1 such that @xmath2 . a sequence @xmath3 ( with @xmath4 )",
    "is noted @xmath5 , and the concatenation of two sequences @xmath6 and @xmath7 ( with @xmath8 ) is noted @xmath9 .",
    "random variables are noted @xmath10 and their realizations are noted @xmath11 .",
    "we note @xmath12 the fact that @xmath11 is a realization of @xmath10 , and @xmath13 the probability that the random variable @xmath10 is realized to @xmath11 .",
    "finally , we note @xmath14 $ ] the expected value of @xmath15 which is defined by @xmath14 = \\sum_{\\xi\\in \\boldsymbol\\xi } p(\\boldsymbol\\xi=\\xi)\\cdot f(\\xi)$ ] .",
    "we consider a discrete time horizon @xmath16 $ ] such that each online event or decision occurs at a discrete time @xmath17 $ ] , whereas each offline event or decision occurs at time @xmath18 .",
    "the ds - vrptw is defined on a complete and directed graph @xmath19 .",
    "the set of vertices @xmath20 $ ] is composed of a depot ( vertex @xmath21 ) and @xmath22 customer regions ( vertices @xmath23 to @xmath22 ) .",
    "to each arc @xmath24 is associated a travel time @xmath25 , that is the time needed by a vehicle to travel from @xmath1 to @xmath26 , with @xmath27 in general . to each customer region",
    "@xmath28 $ ] is associated a load @xmath29 , a service duration @xmath30 $ ] and a time window @xmath31 $ ] with @xmath32 $ ] and @xmath33 .",
    "the set of all customer requests is @xmath34\\times[0,h]$ ] . for each request @xmath35",
    ", @xmath36 is the time when the request is revealed . when @xmath18 , the request is known before the online execution and it is said to be _",
    "deterministic_. when @xmath37 , the request is revealed during the online execution at time @xmath36 and it is said to be _ online _ ( or dynamic )",
    ". there may be several requests for a same vertex @xmath1 which are revealed at different times . during the online execution",
    ", we only know a subset of the requests of @xmath38 ( _ i.e. _ , those which have already been revealed ) . however , for each time @xmath17 $ ] , we are provided a probability vector @xmath39 such that , for each vertex @xmath40 $ ] , @xmath41 $ ] is the probability that a request is revealed for @xmath1 at time @xmath36 .        at the end of the time horizon , a solution is a subset of requests @xmath44 together with @xmath42 routes ( one for each vehicle ) .",
    "requests in @xmath45 are said to be _ accepted _ , whereas requests in @xmath46 are said to be _",
    "rejected_. the routes must satisfy the constraints of the classical vrptw restricted to the subset @xmath45 of accepted requests , _",
    "i.e. _ , each route must start at the depot at a time @xmath47 and end at the depot at a time @xmath48 , and for each accepted request @xmath49 , there must be exactly one route that arrives at vertex @xmath1 at a time @xmath50 $ ] with a current load @xmath51 and leaves vertex @xmath1 at a time @xmath52 .",
    "the goal is to minimize the number of rejected requests .",
    "as not all requests are known at time 0 , the solution can not be computed offline , and it is computed during the online execution .",
    "more precisely , at each time @xmath17 $ ] , an action @xmath53 is computed .",
    "each action @xmath53 is composed of two parts : first , for each request @xmath35 revealed at time @xmath36 , the action @xmath53 must either accept the request or reject it ; second , for each vehicle , the action @xmath53 must give operational decisions for this vehicle at time @xmath36 ( _ i.e. _ , service a request , travel towards a vertex , or wait at its current position ) . before the online execution ( at time 0 ) , some decisions are computed offline .",
    "therefore , we also have to compute a first action @xmath54 .",
    "a solution is a sequence of actions @xmath55 which covers the whole time horizon .",
    "this sequence must satisfy vrptw constraints , _",
    "i.e. _ , the actions of @xmath55 must define @xmath42 routes such that each request accepted in @xmath55 is served once by one of these routes within the time window associated with the served vertex and without violating capacity constraints .",
    "we define the objective function @xmath56 such that @xmath57 is @xmath58 if @xmath59 does not satisfy vrptw constraints , and @xmath57 is the number of requests rejected in @xmath59 otherwise .",
    "hence , a solution is a sequence @xmath55 such that @xmath60 is minimal at the end of the horizon .",
    "there are different notations used for formulating stochastic programs ; we mainly use those from [ 8 ] .",
    "for each time @xmath17 $ ] , we have a vector of random variables @xmath61 such that , for each vertex @xmath62 $ ] , @xmath63 $ ] is realized to @xmath23 if a request for @xmath1 is revealed at time @xmath36 , and to @xmath21 otherwise .",
    "the probability distribution of @xmath61 is defined by @xmath39 , _",
    "i.e. _ , @xmath64=1 ) = p^t[i]$ ] and @xmath64=0 ) = 1-p^t[i]$ ] .",
    "we note @xmath65 the random matrix composed of the random vectors @xmath66 to @xmath61 .",
    "a realization @xmath67 is called a _",
    "scenario_. at each time @xmath17 $ ] , the action @xmath53 must contain one accept or reject for each request which is revealed in @xmath68 .",
    "therefore , we note @xmath69 the set of all actions that contain an accept or a reject for each vertex @xmath40 $ ] such that @xmath70 = 1 $ ] .",
    "of course , these actions also contain other decisions related to the @xmath42 vehicles .",
    "we also note @xmath71 the sequence of sets @xmath72 where @xmath73 .    hence , at each time @xmath36 , given the sequence @xmath74 of past actions , the best action @xmath53 is obtained by solving the multistage stochastic problem defined by eq .",
    "( [ eq : multistage ] ) : @xmath75\\cdots\\right]\\right]\\label{eq : multistage}\\ ] ] note that this multistage stochastic problem is different from the two - stage stochastic problem defined by eq .",
    "( [ eq : twostage ] ) : @xmath76 \\label{eq : twostage}\\ ] ] indeed , eq . ( [ eq : multistage ] ) enforces _ nonanticipativity constraints _ so that , at each time @xmath77 , we consider the action @xmath78 which minimizes the expectation with respect to @xmath79 only , without considering the possible realizations of @xmath80 .",
    "( [ eq : twostage ] ) does not enforce these constraints and considers the best sequence @xmath81 for each realization @xmath82 .",
    "therefore , eq . ( [ eq : multistage ] ) may lead to a larger expectation of @xmath56 than eq .",
    "( [ eq : twostage ] ) , as it is more constrained . however , the expectation computed in eq .",
    "( [ eq : multistage ] ) leads to better decisions in our context where some requests are not revealed at time @xmath36 .",
    "this is illustrated in fig .",
    "[ fig : nonanticipativity_example ] .    2 , if an arrow @xmath83 is displayed then @xmath84 ; otherwise @xmath85 . to simplify , we consider only 2 equiprobable scenarios ( displayed on the right ) .",
    "these scenarios have the same prefix ( at times @xmath86 and @xmath87 no request is revealed ) but reveal different requests at time @xmath88 . when using eq .",
    "( 1 ) at time @xmath89 , we choose to travel to @xmath90 as the expected cost with nonanticipativity constraints is 1 : at time @xmath88 , only one scenario will remain and if this scenario is @xmath91 ( resp .",
    "@xmath92 ) , request @xmath93 ( resp .",
    "@xmath94 ) will be rejected . when using eq .",
    "( 2 ) , we choose to travel to @xmath95 as the expected cost without nonanticipativity constraints is 0 ( for each possible scenario , there exists a sequence of actions which serves all requests : travel to @xmath96 , @xmath97 , and @xmath98 for @xmath91 and travel to @xmath99 , @xmath100 , and @xmath1 for @xmath92 ) .",
    "however , if we travel to @xmath95 , at time 3 we will have to choose between traveling to @xmath96 or @xmath99 and at this time the expected cost of both actions will be @xmath101 : if we travel to @xmath96 ( resp .",
    "@xmath99 ) , the cost with scenario @xmath91 is 0 ( resp .",
    "3 ) and the cost with scenario @xmath92 is 3 ( resp . 0 ) . in this example",
    ", the nonanticipativity contraints of multistage problem ( [ eq : multistage ] ) thus leads to a better action than the two - stage relaxation ( [ eq : twostage ] ) .",
    "[ fig : nonanticipativity_example],title=\"fig : \" ]"
  ],
  "abstract_text": [
    "<S> we consider a dynamic vehicle routing problem with time windows and stochastic customers ( ds - vrptw ) , such that customers may request for services as vehicles have already started their tours . to solve this problem , </S>",
    "<S> the goal is to provide a decision rule for choosing , at each time step , the next action to perform in light of known requests and probabilistic knowledge on requests likelihood . </S>",
    "<S> we introduce a new decision rule , called global stochastic assessment ( gsa ) rule for the ds - vrptw , and we compare it with existing decision rules , such as msa . in particular , we show that gsa fully integrates nonanticipativity constraints so that it leads to better decisions in our stochastic context . </S>",
    "<S> we describe a new heuristic approach for efficiently approximating our gsa rule . </S>",
    "<S> we introduce a new waiting strategy . </S>",
    "<S> experiments on dynamic and stochastic benchmarks , which include instances of different degrees of dynamism , show that not only our approach is competitive with state - of - the - art methods , but also enables to compute meaningful offline solutions to fully dynamic problems where absolutely no a priori customer request is provided .    </S>",
    "<S> = 1 </S>"
  ]
}
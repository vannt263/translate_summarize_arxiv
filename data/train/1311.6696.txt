{
  "article_text": [
    "in the last years , tensor network states ( tns ) have revealed as a very promising choice for the numerical simulation of strongly correlated quantum many - body systems .",
    "a sustained effort has led to significant conceptual and technical advancement of these methods , e.g.  @xcite-@xcite .    in the case of one - dimensional systems , matrix product states ( mps ) are the variational class of tns underlying the density matrix renormalization group ( dmrg ) @xcite .",
    "insight gained from quantum information theory has allowed the understanding of dmrg s enormous success at approximating ground states of spin chains , and the extension of the technique to dynamical problems @xcite-@xcite and lattices of more complex geometry @xcite-@xcite .",
    "projected entangled pair states ( peps ) @xcite constitute a family of tns that naturally generalizes mps to spatial dimensions larger than one and arbitrary lattice geometry . as mps ,",
    "peps incorporate the area law by construction , what makes them a very promising variational ansatz for strongly correlated systems which might not be tractable by other means , e.g.  frustrated or fermionic states where quantum monte carlo methods suffer from the sign problem .",
    "although originally defined for spin systems , peps have been subsequently formulated for fermions @xcite-@xcite , and their potential in the numerical simulation of fermionic phases has been demonstrated @xcite-@xcite .",
    "but in contrast to mps , even local expectation values can not be computed exactly in the case of peps .",
    "this is because the exact evaluation of the tn that represents the observables has an exponential cost in the system size .",
    "the same difficulty affects the contraction of the tn that surrounds a given tensor , the so - called _ environment _ , required for the local update operations in the course of optimization algorithms .",
    "it is nevertheless possible to perform an approximate tn contraction with controlled error , albeit involving a much higher computational cost than in the case of mps .",
    "this limits the feasible peps simulations to relatively small tensor dimensions .    lately , several algorithmic proposals have come out @xcite that make larger tensors accessible by using new approximations in the peps contraction .",
    "although these approaches allow the manipulation of a larger set of peps , their assumptions have an impact on the accuracy of the ground state approximation , and this accuracy is not always directly related to the maximum bond dimension the algorithm can accommodate .",
    "it is nevertheless possible to analyze the various approximations from the unifying point of view of how they treat the environment contraction , which in turn has a physical meaning .",
    "this allows us to understand how a given strategy may attain only a limited precision approximation to the ground state , even when its computational cost allows for large bond dimensions .",
    "contraction strategies proposed in the literature include the original peps method @xcite , the simple update @xcite and the single - layer @xcite algorithm . in this work",
    "we investigate these algorithms from the unifying perspective introduced above , and present a new contraction scheme that naturally interpolates between the cheapest and most imprecise method and the most expensive and precise one .",
    "we illustrate our findings with finite - size peps with open boundary conditions .",
    "a finite peps , in which each tensor contributes independent variational parameters , is less biased than its infinite counterpart ipeps , in which a unit cell of variational tensors is replicated infinitely often and the form of that unit cell can have an effect on the observed order .",
    "however , all our results apply also to ipeps , and , as we will argue , provide the basis for a new promising approach in that context .",
    "this article is structured as follows . in section [ sec : peps ] we briefly introduce the basic peps concepts and original algorithms .",
    "section [ sec : su ] reviews the simple update method introduced in @xcite , and analyzes its performance with finite peps .",
    "we find that the resulting ground state energies can be less accurate than those of the original algorithm when the environment form assumed in the method is far from the true one .",
    "the single - layer algorithm proposed in @xcite can be seen as a first , conceptual generalization of the simple update , and we investigate it in section [ sec : sl ] .",
    "we show that the error introduced by this method exhibits a strong system size dependence , in contrast to the original algorithm . with the gained insight , in section [ sec : cu ]",
    "we formulate and investigate a new strategy for the environment approximation based on the idea of clusters , that is applicable to both the tensor update and the computation of expectation values .",
    "furthermore , we discuss how this cluster strategy is also beneficial to the parallelization of peps as well as to the infinite case , i.e.  ipeps .",
    "finally in section [ sec : conclusions ] we briefly summarize our results .",
    "( a ) a @xmath0 peps @xmath1 on a square lattice .",
    "( b ) a tensor from the interior with four virtual indices @xmath2 to @xmath3 . the function @xmath4 performs the contraction of the tensor network by summing over connected virtual indices .",
    ", scaledwidth=63.0% ]    we consider a system of @xmath5 quantum particles with hilbert spaces of dimensions @xmath6 , for @xmath7 , spanned by individual bases @xmath8 , with @xmath9 .",
    "projected entangled pair states ( peps ) @xcite are states for which the coefficients in the product basis are given by the contraction of a tensor network , @xmath10 with one tensor @xmath11 per physical site .",
    "the tensors @xmath11 are arranged in a certain lattice geometry and connected to neighboring sites by shared indices , such that the coordination number , @xmath12 , of a certain lattice site coincides with the number of connecting indices .",
    "the latter are called virtual , and apart from them , each tensor @xmath11 possesses one physical index @xmath13 , standing for the physical degree of freedom of the quantum particle on lattice site @xmath14 .",
    "the function @xmath4 represents the contraction of all virtual indices .",
    "each of them ranges up to the parameter @xmath15 which is named bond dimension .",
    "@xmath15 determines the number of variational parameters of each tensor , namely @xmath16 .",
    "the bond dimension sets an upper bound to the entanglement entropy of the state , in fulfillment of the area law .",
    "in particular , if we consider a subsystem delimited by a regular shape of side length @xmath17 , the entropy of its reduced density matrix , @xmath18 , is upper - bounded by @xmath19 , where @xmath20 denotes the system s dimensionality . throughout this work ,",
    "we consider peps on two - dimensional square lattices of size @xmath21 with side length @xmath22 and open boundary conditions .",
    "an example is shown in figure [ fig : peps ] .",
    "for general peps , the computation of an expectation value or even the norm is known to be hard @xcite , like the evaluation of a two - dimensional classical partition function @xcite .",
    "hence only an approximate contraction is possible for already moderate lattice sizes .",
    "the originally proposed algorithm @xcite approximates the two - dimensional tn of an expectation value @xmath23 or the norm @xmath24 by means of a succession of one - dimensional mps contractions , as sketched in figure [ fig : sandwich ] ( a ) for the norm . in the following we refer to this original method by the term _",
    "sandwich contraction_. the procedure starts by identifying two opposite sides of the tn , e.g.  the upper- and bottommost rows , with mps , and each of the intermediate rows with a matrix product operator ( mpo ) @xcite . beginning from one of the edges , the contraction of the last row with the immediately neighboring one is then a mps - mpo product , which can be optimally approximated by a mps of fixed bond dimension , @xmath25 . by repeating the procedure from both opposite sides , successive mps - mpo approximations",
    "lead to a representation of both halves of the tn by mps .",
    "finally the row in the center is contracted between both mps to give the approximate expectation value or norm .",
    "sandwich contraction of the norm @xmath24 .",
    "( a ) the tn corresponding to @xmath24 results from figure [ fig : peps ] ( a ) as ket and as bra and contraction over the physical indices ( left ) .",
    "the hard computation of this two - dimensional peps sandwich is approximated by an efficiently contractible one - dimensional mps expectation value ( right ) .",
    "( b ) this is done by successively approximating the action of a bulk row of the sandwich , of bond dimension @xmath15 , on a boundary mpo , of bond dimension @xmath25 , ( left ) by a new boundary mpo ( right ) .",
    "the latter can be determined with computational cost @xmath26 .",
    ", scaledwidth=63.0% ]    at each point of this procedure , the obtained mps approximates the boundary between the contracted part of the network and the rest .",
    "this mps can be interpreted as an operator that maps the virtual indices of the ket boundary to the bra and thus we will refer to it as the _ boundary mpo _ , shown in figure [ fig : sandwich ] ( b ) .",
    "the approximate contraction of the norm has the leading cost @xmath26 , and thus both cost and error are determined solely by the bond dimension @xmath25 of the boundary mpo .",
    "although in principle @xmath25 could scale exponentially with the number of rows , in practice it typically scales as @xmath27 independent of the system size , such that the original sandwich contraction has the total computational cost @xmath28 .",
    "for certain problems , this observed mild scaling can be given a more rigorous ground .",
    "indeed , the boundary mpo can be interpreted as the thermal state of a hamiltonian defined on the virtual degrees of freedom of the boundary .",
    "this boundary hamiltonian is obtained by identifying its excitation spectrum with the entanglement spectrum of the state @xcite .",
    "such a construction is very natural in the framework of peps and establishes a holographic principle @xcite .",
    "while peps are expected to represent the low energy sector of local hamiltonians well , it has not been proven when expectation values can be computed efficiently with them . however ,",
    "if the boundary hamiltonian is local , as evidence suggests for gapped models @xcite , the corresponding thermal state will be efficiently approximated by a mpo @xcite .    in the following ,",
    "we obtain the peps approximation to the ground state of a certain hamiltonian by means of imaginary time evolution .",
    "it is based on the idea that @xmath29 converges to the ground state of @xmath30 exponentially fast with @xmath31 , as long as the ground state is not degenerate and has non - vanishing overlap with the initial state , @xmath32 . in the context of tns @xcite",
    ", the initial state is chosen within the appropriate tns family , and a suzuki - trotter decomposition of the evolution operator @xmath33 is applied to local hamiltonians , such that each step of the evolution , @xmath34 , is approximated by a product of local _",
    "trotter gates_. the resulting state after each gate or set of gates , is again approximated by an adequate tns .",
    "in particular , the action of a certain operator @xmath35 on a peps @xmath36 can be approximated by a new peps @xmath37 by minimizing the cost function @xmath38 .",
    "we perform this minimization for each gate via an alternating least squares ( als ) scheme , optimizing one tensor at a time while the others are fixed , and sweeping only over the tensors on which the trotter gate acts .",
    "the optimal tensor at position @xmath14 is the solution of a system of linear equations @xmath39 , where the norm matrix @xmath40 is defined from the tensor network @xmath24 by leaving out the tensor @xmath11 in the ket and @xmath41 in the bra , and the vector @xmath42 results from the tensor network @xmath43 by removing @xmath41 from the bra .",
    "the environment of a tensor at site @xmath14 is the open tn that results when this tensor and its adjoint are removed from the norm of the state .",
    "contracting the environment is necessary to evaluate @xmath40 and @xmath44 , which determine the local equation for @xmath11 .",
    "such contraction can only be carried out approximately , and the approximation strategy is decisive both for the accuracy and for the computational cost of the algorithm .",
    "operations . ]",
    "because we process the trotter gates one after another and modify only the tensors on which the gate directly acts , in the following we focus on the contraction of the norm tn around a trotter gate .",
    "the importance of the environment approximation has been recognized also in other works , e.g.  @xcite , or in the different context of tensor renormalization group algorithms @xcite where a more precise environment representation lead to significant improvements @xcite .",
    "( a ) a @xmath0 peps @xmath45 of the simple update ( su ) form , composed of @xmath46 tensors and @xmath47 matrices .",
    "( b ) assuming nearest - neighbor trotter gates , the 6 @xmath47 matrices surrounding a tensor pair @xmath48 and @xmath49 are sufficient for the update of this pair and its @xmath50 .",
    ", scaledwidth=81.5% ]    the simple update method ( su ) @xcite directly generalizes the one - dimensional tebd @xcite and proposes for the peps tensors the decomposition @xmath51 formally analogous to the canonical form for mps @xcite , where the @xmath52 are tensors with the same dimensions as the original @xmath11 , and the @xmath53 are @xmath54 diagonal and positive matrices , see figure [ fig : su ] .",
    "although in the case of peps , the @xmath47 matrices do not have the clear meaning of their one - dimensional counterparts , the su has proven a successful strategy in the context of ipeps , starting with @xcite .",
    "this success can be attributed , on the one hand , to the low computational cost of the tensor update , which is why large values of @xmath15 can be reached easily . indeed , the su rule requires only the @xmath47 matrices that are closest to a tensor pair and as a consequence has the computational cost @xmath55 . on the other hand ,",
    "all parts of the algorithm are well - conditioned .",
    "these positive aspects arise at the expense of an oversimplified representation of the environment as separable and local , that , in general , can only be a rough approximation of the true environment .    in order to illustrate its performance , we employ the su to find ground states of the quantum ising hamiltonian with transverse field @xmath56 and of the heisenberg model @xmath57 where @xmath58 denotes pairs of neighboring sites @xmath14 and @xmath59 . in the context of finite peps considered here , to the best of our knowledge , the su had not been yet used .",
    "we determine the ground state of a particular problem by evolving an initial state long enough in imaginary time and successively decreasing the time step @xmath60 until convergence .",
    "relative energy error @xmath61 of the su , @xmath62 , with regard to the exact ground state energy , @xmath63 .",
    "we consider the ising model ( thin lines ) on a @xmath0 lattice with @xmath64 ( solid ) , @xmath65 ( dotted ) , @xmath66 ( dash - dotted ) , @xmath67 ( dashed ) , and the heisenberg model ( thick lines ) on a @xmath0 ( dashed ) and @xmath68 ( solid ) lattice . , scaledwidth=63.0% ]    figure [ fig : desu ] compares su results to exact ground state energies .",
    "the scheme performs remarkably well for the ising model at @xmath64 , @xmath66 , and @xmath67 , where the relative energy error is below @xmath69 already with @xmath70 .",
    "but at @xmath71 and for the heisenberg hamiltonian , we observe that the energy does not improve significantly beyond a certain value of the bond dimension , and remains far from the exact value .",
    "we identify this as a limitation , not of the ansatz , but of the update procedure , since the original peps algorithm @xcite achieves for the heisenberg model on a @xmath0 lattice with @xmath70 already lower energy than any of the su values from the figure , and with @xmath72 it attains an energy per site @xmath73 already very close to the exact value @xmath74 .",
    "although we observed that the su result can depend on the initial state , in particular for the larger bond dimensions , separately , each run starting from a product state in which the tensors zeroes were replaced by random numbers from the interval @xmath75 $ ] . in this setting we observed that the su can lead to a final @xmath76 energy above the @xmath77 value . ]",
    "this dependence appeared not so strongly when we increased the bond dimension successively during imaginary time evolution .",
    "the single - layer ( sl ) algorithm for the computation of the norm @xmath24 was presented in @xcite .",
    "this method takes into account the bra - ket structure of the sandwich , and maintains it and hence the positive character of the environment while the contraction of the network progresses from one edge . to achieve this structure , the approximate contraction proceeds by successive mpo - mps operations , like the original algorithm , but",
    "this time performed on a single layer of the sandwich tn .",
    "then the boundary , i.e.  the already contracted part of the network , is always approximated by a purification mpo @xcite , namely the result of tracing out a part of the physical indices at every site of a mps .",
    "this mps is assumed to have some maximum bond dimension , @xmath78 , and physical dimension @xmath79 , where @xmath80 is the dimension of the traced out degrees of freedom , what we call _ purification bond_. in this way , the local and separable environment defined by the @xmath47 matrices in the su is generalized by means of purification mps that can better capture non - local and non - separable boundary correlations .",
    "moreover , the boundary purification mpo is always a positive operator , and it allows to devise a stable tensor update procedure for imaginary time evolution @xcite .     sl contraction of the norm @xmath24 . as explained in the text , the approximation of figure [ fig : sandwich ] is achieved by means of operations in the ket alone . ,",
    "scaledwidth=81.5% ]    the sl operations take place in the two steps shown in figure [ fig : sl ] .",
    "first , the ket part of a peps row is applied as a mpo to the mps of the boundary purification .",
    "the result is truncated to a mps with bond dimension @xmath78 and increased purification bond , @xmath81 .",
    "then the purification bond is reduced from @xmath81 to @xmath80 , by imposing the canonical form @xcite and projecting the reduced density matrix of each site onto the space spanned by its @xmath80 largest eigenvectors .",
    "the computational cost of the first step , which proceeds via the standard als scheme , scales as @xmath82 , while the leading cost of the second step is @xmath83 , negligible only when @xmath80 is small .",
    "because the purification bond satisfies @xmath84 , the maximum cost can at most grow as @xmath85 when @xmath80 takes on its largest possible value . in @xcite",
    "it was proposed to set @xmath86 , in which case the number of operations scales only like @xmath87 , and a clear computational gain compared to the original contraction can be expected .    in order to analyze the performance of the sl procedure , we study the accuracy of the norm contraction , @xmath88 , as a function of the truncation parameters , @xmath78 and @xmath80 , for a set of different peps , and compare the results to those of the original algorithm . in particular , we consider @xmath89 peps ground state approximations from the su for the ising model ( [ eq : isingh ] ) with transverse fields @xmath64 ,",
    "@xmath65 , @xmath66 , and @xmath67 , on lattices with side lengths @xmath90 and @xmath91 . in all cases ,",
    "the exact norm was estimated by means of the sandwich contraction with bond dimension @xmath92 , large enough to make the error negligible .",
    "in the case of the original algorithm , the relative error always decreases exponentially with the bond dimension of the general boundary mpo , @xmath25 .",
    "moreover , for a fixed bond dimension of the peps , @xmath15 , this error shows no system size dependence . in the sl algorithm , for fixed purification bond @xmath80",
    ", the contraction error converges quickly as function of @xmath78 to a final value that is entirely determined by @xmath80 .",
    "even when that purification bond dimension takes on its maximum value , @xmath93 , this error lies many orders of magnitude above the one from the sandwich contraction with the same @xmath94 .",
    "it is worth noticing that for large @xmath95 the computational cost of the original method is actually lower than the one of the sl algorithm with maximum @xmath93 .",
    "the differences between the original and the sl contraction become even more apparent when the lattice size is increased to @xmath96 , because the sl algorithm depends strongly on the system size as can be gathered from fig .",
    "[ fig : dnsl ] . in that case , given @xmath93 and @xmath97 , the norm error grows from @xmath98 in the @xmath99 to @xmath100 in the @xmath101 lattice , in marked contrast to @xmath102 in the sandwich contraction with @xmath103 obtained for both lattice sizes .",
    "and we observe a similar scaling for peps with larger bond dimensions .",
    "for instance , the sl value to @xmath72 , @xmath104 , and @xmath97 grows from @xmath105 in the @xmath99 to @xmath106 in the @xmath101 lattice , which has to be compared to @xmath107 in the sandwich contraction with @xmath103 achieved for both lattice sizes .",
    "relative norm error @xmath108 in the sl contraction of a @xmath109 su ground state approximation of the ising model with @xmath110 on a @xmath99 ( inset ) and @xmath101 ( main ) lattice .",
    "we consider @xmath111 ( dotted ) , @xmath112 ( dash - dotted ) , @xmath104 ( dashed ) , and the maximum possible @xmath93 ( solid ) .",
    "we defined @xmath113 where the reference value @xmath114 was computed with the sandwich contraction using @xmath92 .",
    ", scaledwidth=63.0% ]    from this analysis we conclude that the choice @xmath115 , which ensures the advantageous computational cost @xmath87 , is in general too restrictive in order to get a comparable precision to that of the original algorithm . moreover , because the required values of the parameters @xmath80 and @xmath78 for a certain contraction precision depend strongly on the system size , one can not make a general statement about the cost scaling of the sl algorithm .",
    "this is different from the situation in the original algorithm , where the parameter @xmath25 controlling the cost can typically be chosen as @xmath27 with a prefactor that seems not to depend on the system size but only on the state .",
    "the environment approximation in the sl scheme , despite being positive , does not correspond to the most general boundary purification , a fact that provides some insight into the limitations of the method .",
    "the purification of a mixed state is only defined up to an isometry on the traced - out degrees of freedom .",
    "but the optimization in the sl algorithm does merely allow for local isometries , i.e.  for tensor products of isometries each acting on a single site of the boundary only .",
    "it is possible to devise an als algorithm that searches the optimal general boundary purification , at the expense of a cost function for each site which is no longer quadratic but quartic in the local tensor variables .",
    "the minimum of such a cost function is no longer the solution of linear but of nonlinear equations , which are numerically much more demanding than the simple qr decomposition that gives the optimal general boundary mpo in the original algorithm .",
    "therefore such a strategy may result in an undesirable slowing down of the algorithm .",
    "notice also that , while a given purification can always be written efficiently as a positive mpo , namely via contraction of the tensors at each site over their purification bond , the reverse statement is not true , since there exist positive mpo that can not be written efficiently as purifications @xcite .",
    "we conclude that , for the problems considered here , it is more advisable to work with a general boundary mpo upon which positivity is not explicitly imposed , is chosen too small , the negative eigenvalues of the environment can lead to instabilities in the tensor update , when @xmath25 is large enough , the tensor update is stable and then more accurate . ] and based on it formulate contraction algorithms where cost and precision grow simultaneously , as we shall do in the following section .",
    "the most precise environment approximation is achieved by the original algorithm , in the form of a mpo with sufficiently large bond dimension @xmath25 . on the opposite extreme of the spectrum",
    ", the lowest computational cost corresponds to the su , where the environment is represented by a tensor product of matrices each acting on a single virtual bond only . here",
    ", we aim at a contraction scheme that allows to systematically tune the environment precision together with the cost and that interpolates between the su and the original algorithm .",
    "this goal is achieved with the help of _",
    "clusters_. in a state with short - range correlations , we expect that the major contribution to the environment of a given tensor comes from the closest sites .",
    "if such sites are not correlated with further ones , or among themselves , the environment will actually be a product , similar to the su approximation .",
    "correlations in the state cause the environment to be non - separable in general , and to incorporate relevant contributions from faraway sites .",
    "hence , by progressively taking into account the contribution of sites at longer distances , we would improve the environment description .",
    "in our peps algorithm , we are interested in the environment of a row ( respectively column ) , which is required for the update of all the tensors in it .",
    "we therefore define a _ cluster _ of size @xmath116 around a certain row as all the surrounding rows which are separated from it by a distance smaller or equal to @xmath116 , and similarly for columns .",
    "the environment contribution from sites outside the cluster can be roughly approximated by a product in the spirit of the su , while the contribution from sites inside the cluster is taken into account with more precision , as in the original algorithm .",
    "this defines a new contraction scheme that we call cluster update in analogy to @xcite , and that we abbreviate as cu@xmath117 for cluster size @xmath116 .",
    "the limiting cases of this strategy are @xmath118 , when the environment reverts to the one of the original algorithm , and @xmath119 , which is closely related to the su .      separable environment with @xmath121.,scaledwidth=63.0% ]",
    "the particular case @xmath119 ( cu@xmath122 ) leads to the environment approximation of a certain row , or column , as a product mpo , illustrated in figure [ fig : sepenv1 ]",
    ". this can be found by optimizing the boundary mpo with @xmath121 , where the standard mpo - mps als scheme can now yield a positive mpo .",
    "indeed , if each of the local tensors of the mpo is positive , this positivity is maintained during the update procedure , since for each local optimization the norm matrix in @xmath39 is proportional to the identity , and the tn to @xmath44 is positive , as explained in figure [ fig : sepenv2 ] .",
    "starting the als sweeping from an initial positive mpo , which can be trivially constructed from positive local tensors ( e.g.  of the form @xmath123 with random @xmath124 ) , ensures then a positive environment .",
    "moreover , all contractions can be performed with @xmath125 operations , so that the computation of the optimal separable environment does not exceed the leading cost of the su .",
    "tensor contractions during the als sweeping in the computation of the environment for cu@xmath122 . for each local update ,",
    "the norm matrix ( left ) is the identity times a positive constant , such that the solution is simply proportional to @xmath44 ( right ) , which is given by a positive tn if each of the local tensors is positive .",
    ", scaledwidth=63.0% ]    imaginary time evolution based on a positive separable boundary mpo leads to an algorithm which is very similar to the su .",
    "both schemes are characterized by the same computational cost operations . ] and make use of a separable environment , but the cu@xmath122 method proposed here optimizes the approximate boundary over all possible separable mpo , and hence can be interpreted as a generalized simple update .    in order to elucidate the connection between both algorithms , we study how imaginary time evolution with cu@xmath122 changes peps ground state approximations from the su for the ising model ( [ eq : isingh ] ) with various magnetic fields . in our quantitative comparison",
    "we consider a specific virtual bond between two neighboring sites in the center of the lattice , and focus on the corresponding @xmath47 matrix generated by the su after convergence , @xmath126 .",
    "the diagonal of that matrix can directly be compared to the converged singular values emerging in the cu@xmath122 every time a gate is applied to this particular pair of sites , @xmath127 .",
    "as shown in table [ tab : gsu ] for a @xmath99 peps with @xmath109 , the relative difference between the entries of these two @xmath47 matrices is below @xmath128 .",
    "we can analyze the similarities between both algorithms in more detail by looking at the role of the @xmath47 matrices in the environment for the update operations . in the su ,",
    "the entries in @xmath126 are determined after applying one gate to the relevant pair of tensors , but ( in the here considered case of nearest neighbor interactions ) they are not affected by gates which involve only one member of the pair . for the latter tensor updates , the @xmath126 matrix enters the environment unchanged , even after the @xmath46 tensors of the pair have been modified .",
    "in contrast , in the cu , the environment for a given update operation depends on the surrounding tensors , and changes every time they are updated . in the case of cu@xmath122 , a similar role to that of @xmath126 is played by the eigenvalues of the local tensor in the boundary mpo at the site corresponding to this particular virtual bond , @xmath129 . for nearest neighbor interactions and the bond we are considering",
    ", there are six trotter gates in each time step ( see the figure in table [ tab : gsu ] ) that involve only one of the tensors of the pair .",
    "the @xmath129 entries change only slightly , @xmath128 , for each such tensor update , as can be appreciated in table [ tab : gsu ] .",
    "and their difference to the corresponding @xmath126 is of the same order .",
    "additionally , we computed the separable boundary mpo for the su peps and compared the eigenvalues of the local tensors to the corresponding @xmath130 , to find a similar agreement .",
    "we observed the same behavior in larger lattices , with larger bond dimensions , as well as on different virtual bonds .",
    "@lllll & @xmath64 & @xmath71 & @xmath110 & @xmath131 + @xmath132 & 0.006007 & 0.026032 & 0.078572 & 0.071486 + @xmath133 & 0.006022 & 0.026252 & 0.078953 & 0.071210 + @xmath134 & 0.006008 & 0.026049 & 0.078399 & 0.071216 + @xmath135 & 0.006008 & 0.026048 & 0.078421 & 0.071216 + @xmath136 & 0.005784 & 0.025236 & 0.077678 & 0.071391 + @xmath137 & 0.005784 & 0.025237 & 0.077828 & 0.071391 + @xmath138 & 0.005567 & 0.024434 & 0.076890 & 0.071566 + @xmath139 & 0.005567 & 0.024434 & 0.077094 & 0.071566 +        our observations provide an explanation for the functioning of the su : because the latter scheme applies the same @xmath126 matrix to the tensor updates of all four sets of trotter gates , this @xmath126 can be seen as a mean value for the six @xmath130 from the optimal positive separable environment , and the su indeed converges it to that mean value .",
    "the cu with @xmath119 always uses the best separable environment in each tensor update , and therefore depends less on the initial state and can produce energies slightly below the ones from the su .",
    "however , the final energies of both methods are very close to each other ( compare figures [ fig : desu ] and [ fig : del4l10 ] ) .",
    "although the su is an algorithm completely formulated in the sl , our study in the double layer picture provided crucial insight into it , thus reinforcing the idea that the boundary should be described as a general mpo .      by considering clusters of size @xmath140 we can systematically take into account more of the correlations in the environment approximation . outside the cluster , the environment",
    "is represented by a separable mpo and determined as in the cu@xmath122 described above .",
    "then the cluster tensors are contracted row by row with this boundary , as in the original algorithm , to produce a new boundary mpo with larger bond dimension .",
    "the approximation is controlled by the cluster size and the bond dimension @xmath25 used in the contractions within the cluster .     environment for the cu@xmath141 of a middle row .",
    "( a ) outside the cluster , the approximate contraction of the sandwich is performed via a positive separable boundary mpo .",
    "( b ) the contraction continues inside the cluster via a general boundary mpo with bond dimension @xmath25 .",
    ", scaledwidth=63.0% ]    figure [ fig : c1 ] shows the smallest non trivial cluster , for cu@xmath141 , in which only the two rows adjacent to the one to be updated enter the cluster contraction . in this case , the optimal boundary mpo with bond dimension @xmath25 for the update of a row is computed from the action of a bulk row on a separable boundary mpo with @xmath142 operations .",
    "this is the dominant cost in the environment approximation of cu@xmath141 , given the fact that the separable mpo outside the cluster is obtained with only @xmath125 operations .",
    "hence , the environment approximation for clusters of size @xmath143 is computationally cheaper than the full contraction with cost @xmath26 .    to examine the usefulness of this cluster strategy",
    ", we compare its performance to that of the su via their ground state accuracies for the heisenberg model ( [ eq : heisenbergh ] ) . starting from converged su peps , we ran the cu imaginary time evolution with several cluster sizes for various bond dimensions @xmath15 and @xmath25 on @xmath0 and @xmath68 lattices .",
    "figure [ fig : del4l10 ] contains our cluster results for @xmath119 , @xmath144 , and @xmath145 , as function of @xmath15 , such that they can be compared directly to the su results of figure [ fig : desu ] .",
    "the convergence of the cu with cluster size @xmath116 as well as with bond dimension @xmath25 can be gathered from figure [ fig : decul10 ] for @xmath68 peps with @xmath109 and @xmath146 .",
    "we refer to the cu with maximum cluster size @xmath118 as _ full update _ ( fu ) , a notion taken from ipeps ( see e.g.  @xcite ) .",
    "the fu is not identical to the original peps algorithm @xcite , because in the cu the action of single trotter gates is approximated sequentially , such that for each gate the only tensors updated are those on which the gate directly acts .",
    "thanks to this procedure , the fu requires just the approximate contraction of the norm sandwich , and is therefore computationally less demanding than the original algorithm , in which , additionally , the peps sandwich with a full set of trotter gates acting on all the state has to be contracted",
    ".     relative energy error @xmath147 as in figure [ fig : desu ] for a @xmath0 ( a ) and @xmath68 ( b ) heisenberg model .",
    "we consider the cu@xmath122 ( dotted ) , the cu@xmath141 with @xmath148 ( dash - dotted ) , and the fu with @xmath148 ( dashed ) , @xmath149 ( solid ) , and @xmath150 ( cross ) .",
    ", title=\"fig:\",scaledwidth=63.0% ]   relative energy error @xmath147 as in figure [ fig : desu ] for a @xmath0 ( a ) and @xmath68 ( b ) heisenberg model .",
    "we consider the cu@xmath122 ( dotted ) , the cu@xmath141 with @xmath148 ( dash - dotted ) , and the fu with @xmath148 ( dashed ) , @xmath149 ( solid ) , and @xmath150 ( cross ) .",
    ", title=\"fig:\",scaledwidth=63.0% ]     relative energy error @xmath147 as in figure [ fig : desu ] for a @xmath68 heisenberg model , obtained with various fixed values of the bond dimension @xmath25 of the boundary mpo .",
    "we propagated @xmath109 ( upper thin lines ) and @xmath72 ( lower thick lines ) peps with the cu with cluster size @xmath143 ( dotted ) , @xmath151 ( dash - dotted ) , @xmath152 ( dashed ) , and with the fu ( solid ) .",
    ", scaledwidth=63.0% ]    we find that the cu@xmath122 produces very similar energies as the su , with slight improvement for small systems or for large bond dimensions .",
    "the difference between both methods is most apparent in case of the smaller @xmath0 lattice where the cu@xmath122 gives lower energies for bond dimensions @xmath153 .",
    "this can be understood taking into account that the effect of the system boundary , better captured by the environment approximation in cu@xmath122 , is more important for smaller systems .",
    "we observe then that the cu@xmath141 improves the su energies considerably .",
    "finally , the fu reduces the energy further significantly when @xmath153 , and its effect appears more pronounced with increasing bond dimension @xmath15 . for @xmath109 and @xmath152 , the fu improves upon the cu@xmath141 only in case of the smaller @xmath0 system .",
    "notice that the tables [ tab : esu]-[tab : ecul10d4 ] contain the precise energy values that were used in this analysis .    from the arguments above it is apparent that a better representation of the environment is crucial for an improved peps approximation of the true ground state .",
    "we also infer that larger bond dimensions @xmath15 require more precise environment representations in the tensor update . within the cu",
    ", this improvement can be achieved systematically by gradually increasing , firstly , the cluster size @xmath116 and , secondly , for each fixed @xmath116 , the boundary bond dimension @xmath25 .",
    "indeed , we can see in figure [ fig : decul10 ] for each fixed cluster size that with growing @xmath25 the energy decreases consistently , as the precision of the environment representation in the tensor update increases .",
    "the energy converges at a certain value @xmath154 that depends both on the bond dimension @xmath15 of the considered peps and on the cluster size .",
    "while for @xmath109 the lowest energy is already attained with cu@xmath141 , for @xmath72 the energy improves when larger clusters are used and the fu value is obtained with cu@xmath155 .",
    "this behavior agrees with our previous observation that larger bond dimensions benefit more from accurate environment representations .",
    "we can gain further insight into this feature by looking at the convergence of a boundary mpo as function of @xmath25 for different cluster sizes . in figure",
    "[ fig : fid ] the environment mpo for the leftmost column , computed with different cluster sizes , is compared to the full contraction of the @xmath145 right columns with large enough @xmath25 , for peps with bond dimensions @xmath109 and @xmath146 on a @xmath156 lattice .",
    "we find that for each cluster size @xmath116 there exists a maximum value of @xmath25 beyond which the distance to the reference boundary mpo does not decrease anymore , and that this value is smaller than the largest possible @xmath157 . considering a sufficiently large fixed @xmath25 ,",
    "the distance drops exponentially with increasing cluster size until the value of the full contraction is reached . beyond this , larger clusters have no effect .",
    "finally , we can directly see that , in order to have the same distance , the @xmath72 peps requires larger clusters and larger boundary bond dimensions than the @xmath109 peps , which explains why it responds stronger to a better environment representation .",
    "distance to the exact boundary mpo , @xmath158 with @xmath159 , for the left - most column boundary mpo @xmath160 of a @xmath109 ( inset ) and @xmath72 ( main ) su heisenberg peps on a @xmath156 lattice .",
    "we compare the cluster contraction based on clusters of size @xmath143 ( dotted ) , @xmath151 ( dash - double - dotted ) , @xmath152 ( dash - dotted ) , and @xmath146 ( dashed ) , to the full contraction ( solid ) .",
    "the reference boundary mpo @xmath161 comes from the full contraction with @xmath92 , and we adopt the normalization @xmath162 . ,",
    "scaledwidth=63.0% ]      although we introduced clusters in the specific context of environment approximations for the tensor update , figure [ fig : fid ] suggests that , in fact , the reduced density matrix of any part of a peps can be accurately approximated by a cluster around that part , with a precision determined by the cluster size .",
    "therefore the cluster strategy could also be applied to the evaluation of ( local ) expectation values , without the need for an accurate contraction of the full tn . to validate this idea , we computed the energy of peps with @xmath109 and @xmath146 on a @xmath156 lattice using clusters of different sizes around the local terms of the hamiltonian , shown in figure [ fig : cexp ] .",
    "we observe , analogously to figure [ fig : fid ] , that for each cluster size the energy error converges for a certain value of @xmath25 , and that the larger bond dimensions require larger clusters and larger values of @xmath25 .",
    "most remarkably , we find again that for large enough fixed @xmath25 the error drops exponentially with the cluster size .     relative energy error @xmath163 of the @xmath109 ( inset ) and @xmath72 ( main ) peps from figure [ fig : fid ] , for the same setting .",
    "the reference value @xmath164 comes from the full contraction with @xmath92 , and the clusters are formed around the individual terms of the hamiltonian independently of each other .",
    ", scaledwidth=63.0% ]      in the context of finite peps , considered in this study , the computational cost of the environment approximation for cu@xmath117 is lower than that for the full contraction only when @xmath119 ( @xmath125 ) and when @xmath165 ( @xmath142 ) . indeed , if the boundary mpo has bond dimension @xmath166 , contracting it with a peps row and approximating the result by a new boundary with bond dimension @xmath167 needs @xmath168 operations .",
    "if @xmath169 , we recover the scaling of the full contraction , so that the cu only results in a cheaper scheme if the environment bond dimensions @xmath170 decrease as we increase the distance @xmath171 to the row ( or column ) to be updated .",
    "moreover , after every update of a row , the complete cluster surrounding the next row has to be contracted , without being able to reuse the previously obtained cluster boundary mpo .",
    "this situation is different from the fu , where , when moving to the update of a new row , only one new boundary mpo has to be determined , as the previously computed and properly stored boundaries can be reused . in the cu , the only boundary mpo that can be reused are the previously obtained separable ones , and @xmath172 new mpo have to be computed for the update of the next row . of those ,",
    "one is separable and thus determined with computational cost @xmath125 , and two require @xmath142 operations , which we can neglect , such that @xmath173 new boundary mpo have to be found with cost @xmath174 . on the other hand , the cu takes up less memory than the fu .",
    "the separable boundary mpo do not have to be written to hard disk but can be stored in main memory since they take up much less memory than mpo with bond dimensions @xmath175 , and then the cluster boundary mpo are computed on the fly .",
    "although the cu@xmath117 with cluster sizes @xmath176 does not reduce the computational cost of a sequential algorithm , in which one tensor is updated after another , it can reduce the cost of a parallel algorithm , in which different rows or columns are updated simultaneously on different processors . assuming that the time for the optimization of a boundary mpo ( for a middle row ) is @xmath177 on average , and that the update of all the tensors in a row or column is achieved in the time @xmath178 , then the sequential fu requires @xmath179 for one set of trotter gates .",
    "in contrast , each row or column update with the cu@xmath117 for @xmath140 necessitates the computation of only @xmath180 boundary mpo and thus has the cost @xmath181 .",
    "we conclude that a parallel cu algorithm can attain a @xmath182 speed - up .",
    "since @xmath116 does not depend on the system size , @xmath22 , but only on the bond dimension , @xmath15 , it can be chosen much smaller than @xmath22 , such that this speed - up factor may be large .",
    "this estimation neglects all computations with sub - leading costs @xmath125 and @xmath142 and the communication between the parallel processors .",
    "although the latter will have an impact on the final performance of the algorithm , we expect the speed - up to be still significant , given the fact that just the small individual tensors of separable boundary mpo have to be exchanged between different processors after each set of trotter gates .",
    "the success of this parallelization strategy relies heavily on the simultaneous update of tensors in different rows . as described in section [ sec : peps ] , each tensor update is based on solving a system of linear equations that arises from the minimization of a cost function for the whole peps by utilizing an als scheme . in this scheme",
    "one sweeps over the tensors and for each one minimizes the cost function under the assumption that all the others are fixed .",
    "this guarantees a non - increasing cost function only when the tensors are updated sequentially .",
    "an important question is then whether the convergence of the energy in imaginary time is as fast with the independent updates as with the sequential ones .",
    "that this is indeed the case can be gathered from figure [ fig : pcu ] .",
    "the plot demonstrates an impressive agreement , which can be attributed to a minor modification of the tensor when the action of a time evolution gate is approximated in a sequential update .",
    "we conclude that imaginary time evolution with the cu constitutes a natural basis for a parallel ground state search algorithm based on peps . a similar agreement as in figure [ fig : pcu ] can not be expected in direct energy minimization , where a tensor is changed significantly during an update .",
    "is minimized directly by sweeping over the tensors with an als scheme .",
    "this algorithm converges typically within much fewer sweeps over the peps than imaginary time evolution , when all sweeps for all time steps are taken into account , and therefore modifies a tensor considerably in an update . ]",
    "energy per site @xmath183 of the heisenberg model on a @xmath68 lattice during imaginary time evolution of a @xmath72 peps via the cu with parallel ( lines ) and sequential ( symbols ) tensor updates .",
    "the boundary mpo have fixed bond dimension @xmath121 ( top red lines and symbols ) , @xmath184 ( middle green lines and symbols ) , and @xmath185 ( bottom blue lines and symbols ) , and we further distinguish cluster size @xmath144 ( dashed lines and circles ) and @xmath151 ( solid lines and crosses ) .",
    "the state propagates @xmath186 time steps with @xmath187 and then @xmath188 time steps with @xmath189 .",
    ", scaledwidth=63.0% ]    although we carried out our analysis in the framework of finite peps , it is clear that the cu@xmath117 can also be applied to ipeps , to replace the costly computation of the environment via the dominant boundary eigenvector with @xmath190 @xcite , fixpoint corner transfer matrices @xcite , or second renormalized environment @xcite .",
    "a cu procedure would only require the search for the dominant boundary eigenvector with @xmath121 , which needs @xmath125 operations , followed by a cluster contraction as in the finite case .",
    "then , the cost and precision of both tensor update and expectation value computation would be determined by the cluster size and the bond dimension @xmath25 employed in the contraction of the cluster .",
    "furthermore , it is always possible to evaluate clusters by means of monte carlo sampling @xcite .",
    "this method requires only the contraction of the peps coefficients , computationally less costly than the contraction of the peps sandwich , for different sampled values of the physical indices @xmath191 , depicted in figure [ fig : peps ] . while a full infinite peps can not be sampled , since this would necessitate determining infinitely many classical spin values , clusters open the door to variational monte carlo in the realm of ipeps .",
    "for the sampling of an observable as well as of an energy gradient , a cluster would be formed around the considered tensors and then only the physical indices of that cluster would have to be sampled .",
    "larger clusters necessitate longer sampling times such that the error of a finite cluster could be adjusted together with the monte carlo error according to the available computational resources .",
    "in this article , we have analyzed the environment representation in previous proposals , namely the simple update and the single - layer algorithm .",
    "we have shown how the different approximations applied to the environment explain the limitations of each method in the achievable ground state accuracy , an issue that we have studied quantitatively in the context of finite peps .",
    "based on this deeper understanding , we have formulated a new proposal , the cluster strategy , that allows a systematic increase of the environment precision from the simplest possible representation , in the su , to the most accurate full contraction , in the fu .    in its simplest form",
    ", cu@xmath122 provides an explanation for the simple update in terms of a separable boundary approximation , and constitutes a slightly improved version of the latter for the models analyzed here , characterized by the same computational cost .",
    "the first non trivial cluster update , cu@xmath141 , produces significantly better ground state energies than the su , and has a lower computational cost than the fu . in general",
    ", cu@xmath117 interpolates naturally between the su and the fu .",
    "we have shown that increasing the cluster size improves the precision of the environment approximation exponentially .",
    "this improvement applies directly to the computation of local observables , which can always be accelerated with the help of clusters .    our analysis of the computational costs of the cu revealed that in the sequential update of finite peps any cluster size @xmath176 exceeds the cost of the fu , which can reuse intermediate calculations more efficiently .",
    "however , the cu@xmath117 forms the basis of a very promising parallel peps algorithm , with a prospective large gain in computational time also for larger clusters .",
    "although our numerical studies have all been carried out in the framework of finite peps , we have also argued how the cu@xmath117 is straightforwardly useful for the infinite ipeps ansatz .    in summary",
    ", we have shown that the environment approximation is a key ingredient to the precision of any peps contraction , whether we are interested in the norm , or in some expectation value .",
    "the cu@xmath117 provides the means to control this approximation accuracy and can be used in any contraction .",
    "it is then reasonable to think of its potential applicability to other peps algorithms .",
    "ml is grateful for discussions with b bauer , p corboz , g de las cuevas , s iblisdir , v murg , r ors , i piorn , m rizzi , and l wang .",
    "this work was partially funded by eu through siqs grant ( fp7 600645 ) and dfg ( cluster of excellence nim ) .",
    "we also thank the pedro pascual benasque center for science ( ccbpp ) , where part of this project was carried out .    [ [ section ] ]    here , we list explicitly a selection of precise values , as they are used in the main text .    regarding the reference energies , for @xmath192 the exact energy values come from exact diagonalization .",
    "the exact heisenberg ground state energy per site on a @xmath0 lattice reads @xmath193 . for @xmath194",
    ", we computed the exact values with the quantum monte carlo loop algorithm from alps @xcite-@xcite , and we use the result for temperature @xmath195 , where we have checked consistency with @xmath196 and @xmath197 .",
    "that energy per site for a @xmath68 system reads @xmath198 .",
    "lll @xmath15 & @xmath0 & @xmath68 + 2 & -0.54404(1 ) & -0.61281(1 ) + 3 & -0.55396(2 ) & -0.61846(2 ) + 4 & -0.56281(1 ) & -0.62382(1 ) + 5 & -0.56628(2 ) & -0.62520(2 ) + 6 & -0.56684(3 ) & -0.62541(2 ) + 7 & -0.56696(2 ) & -0.62537(2 ) + 8 & -0.56715(3 ) & -0.62538(2 ) +    lll @xmath15 & @xmath0 & @xmath68 + 2 & -0.54404(3 ) & -0.61280(2 ) + 3 & -0.55397(2 ) & -0.61846(2 ) + 4 & -0.56287(5 ) & -0.62382(2 ) + 5 & -0.56637(2 ) & -0.62521(2 ) + 6 & -0.56694(2 ) & -0.62541(2 ) + 7 & -0.56706(3 ) & +    lll @xmath15 & @xmath0 & @xmath68 + 2 & -0.54458(2 ) & -0.61310(2 ) + 3 & -0.5605(3 ) & -0.62007(1 ) + 4 & -0.56999(3 ) & -0.62583(2 ) + 5 & -0.57238(7 ) & -0.62667(2 ) + 6 & -0.57153(7 ) & -0.6264(2 ) + 7 & -0.57194(1 ) & +    llll @xmath15 & @xmath25 & @xmath0 & @xmath68 + 2 & 4 & -0.54458(2 ) & -0.61310(2 ) + & 8 & -0.54458(2 ) & -0.61310(2 ) + 3 & 9 & -0.56101(2 ) & -0.62002(2 ) + & 18 & -0.5612(1 ) & -0.62000(2 ) + 4 & 16 & -0.5738(3 ) & -0.62636(3 ) + & 32 & -0.5739(2 ) & -0.62637(2 ) + 5 & 25 & -0.57408(1 ) & -0.62732(4 ) + & 50 & -0.57410(3 ) & -0.62739(1 ) + 6 & 36 & -0.57418(2 ) & -0.62751(2 ) + & 72 & -0.57419(1 ) & -0.62770(7 ) + 7 & 49 & -0.57408(1 ) & + & 98 & -0.57419(1 ) & + & 130 & -0.57426(1 ) & +    lll @xmath25 & cu@xmath141 & fu + 1 & -0.61280(2 ) & -0.61280(2 ) + 2 & -0.61290(2 ) & -0.61289(1 ) + 3 & -0.61307(2 ) & -0.61307(1 ) + 4 & -0.61310(2 ) & -0.61310(2 ) + 100 & & -0.61310(2 ) +    llllll @xmath25 & cu@xmath141 & cu@xmath199 & cu@xmath200 & cu@xmath155 & fu + 1 & -0.62382(2 ) & -0.62382(2 ) & -0.62382(2 ) & -0.62382(2 ) & -0.62382(2 ) + 2 & -0.62481(1 ) & -0.62501(1 ) & -0.62506(5 ) & -0.62504(1 ) & -0.62508(4 ) + 4 & -0.62513(3 ) & -0.62583(4 ) & -0.62600(1 ) & -0.62607(2 ) & -0.62602(1 ) + 12 & -0.62583(2 ) & -0.62623(2 ) & -0.62631(2 ) & -0.62634(3 ) & -0.62635(2 ) + 16 & -0.62583(2 ) & -0.62623(2 ) & -0.62632(3 ) & -0.62635(3 ) & -0.62636(3 ) + 20 & & -0.62624(2 ) & -0.62632(2 ) & -0.62635(2 ) & -0.62636(2 ) + 32 & & & & & -0.62637(3 ) +    [ [ section-1 ] ]    we used the following setup for time evolution and energy computation , if not explicitly stated otherwise .",
    "we initialize imaginary time evolution with a separable @xmath109 peps in which the zeroes are replaced by noise as uniformly distributed random numbers from @xmath75 $ ] .",
    "this state is evolved for @xmath201 steps with @xmath202 , followed by @xmath203 steps with @xmath204 , and so on , what we abbreviate to the short notation @xmath205 for fixed bond dimension @xmath15 . in order to specify a successively growing value of @xmath15",
    ", we introduce the recursive notation @xmath206 .",
    "it defines the next peps for the propagation with bond dimension @xmath207 as the final state of the previous evolution with bond dimension @xmath208 and time step @xmath209 with a by @xmath144 incremented bond dimension . in the case of the cluster and full update ,",
    "the additional parameter @xmath25 is typically chosen as @xmath121 , @xmath151 , and , related to @xmath15 , as @xmath210 , @xmath211 , and so on .",
    "the final peps obtained with a certain value of @xmath25 is always the initial state for increased @xmath15 with that @xmath25 .    regarding the energy computation ,",
    "all energies are evaluated with @xmath92 for the final peps corresponding to the smallest time step .",
    "we define the energy error as the difference between the energy of this final state and the energy of an intermediate state .",
    "the latter is either the peps obtained after half of the evolution or the final peps corresponding to the immediately larger time step , depending on wether or not the propagation was also performed with this larger time step .",
    "+ * figure [ fig : desu ] * : + we propagate the initial @xmath109 peps @xmath186 time steps with @xmath212 , then @xmath188 time steps with @xmath213 , then @xmath214 time steps with @xmath215 , and then according to the configuration @xmath216 . + * figure [ fig : dnsl ] * : + we propagate the initial @xmath109 peps each time @xmath217 steps first with @xmath212 , then with @xmath213 , then with @xmath215 , then @xmath218 steps with @xmath219 , and finally @xmath220 steps with @xmath221 .",
    "the @xmath70 and @xmath146 results , used in the analysis , were obtained by evolving the final @xmath109 peps from @xmath219 further according to the configuration @xmath222 .",
    "+ * table [ tab : gsu ] * : + we apply the su to a @xmath99 ising model with different magnetic fields @xmath223 , and propagate the initial @xmath109 peps @xmath217 time evolution steps with @xmath212 and then @xmath217 steps with @xmath213 . the resulting peps",
    "is further evolved with the cu@xmath122 for @xmath217 time steps with @xmath187 .",
    "all shown numbers are converged to machine precision .",
    "* figure [ fig : del4l10 ] * ( a ) ( @xmath224 ) : + the initial state of the imaginary time evolution is the converged @xmath109 su ground state approximation to time step @xmath187 .",
    "we propagate this state @xmath186 time steps with @xmath213 , then @xmath188 time steps with @xmath215 , and then according to the configuration @xmath225 up to bond dimension @xmath226 .",
    "then , we continue with @xmath227 . in the case of the fu with @xmath77 and @xmath150 ,",
    "the state propagates @xmath228 time steps with @xmath187 . +",
    "* figure [ fig : del4l10 ] * ( b ) ( @xmath229 ) : + the initial state of the imaginary time evolution is the converged @xmath109 su ground state approximation to time step @xmath187 .",
    "we propagate this state @xmath186 time steps with @xmath213 , then @xmath188 time steps with @xmath215 , and then according to the configuration @xmath225 . in the cases of the cu@xmath122 and the cu@xmath141",
    "we use this time evolution configuration up to @xmath226 , and for @xmath230 propagate the states @xmath231 time steps with @xmath187 and then @xmath231 time steps with @xmath189 . in the case of the fu we use this configuration up to @xmath72 , and for @xmath226 evolve the states @xmath231 time steps with @xmath187 and then @xmath186 time steps with @xmath189 , and for @xmath230 we propagate the states @xmath231 time steps with @xmath187 . +",
    "* figure [ fig : decul10 ] * : + the initial state of the imaginary time evolution is the converged su ground state approximation to time step @xmath187 with the considered bond dimension . in the case of @xmath109 , we propagate this state @xmath186 time steps with @xmath213 , then @xmath188 time steps with @xmath215 . in the case of @xmath72 , for cu@xmath141 we use @xmath232 , for cu@xmath199 @xmath233 , and for cu@xmath200 , cu@xmath155 , and fu we use @xmath234 ."
  ],
  "abstract_text": [
    "<S> the approximate contraction of a projected entangled pair states ( peps ) tensor network is a fundamental ingredient of any peps algorithm , required for the optimization of the tensors in ground state search or time evolution , as well as for the evaluation of expectation values . </S>",
    "<S> an exact contraction is in general impossible , and the choice of the approximating procedure determines the efficiency and accuracy of the algorithm . </S>",
    "<S> we analyze different previous proposals for this approximation , and show that they can be understood via the form of their environment , i.e.  the operator that results from contracting part of the network . </S>",
    "<S> this provides physical insight into the limitation of various approaches , and allows us to introduce a new strategy , based on the idea of clusters , that unifies previous methods . </S>",
    "<S> the resulting contraction algorithm interpolates naturally between the cheapest and most imprecise and the most costly and most precise method . </S>",
    "<S> we benchmark the different algorithms with finite peps , and show how the cluster strategy can be used for both the tensor optimization and the calculation of expectation values . </S>",
    "<S> additionally , we discuss its applicability to the parallelization of peps and to infinite systems ( ipeps ) . </S>"
  ]
}
{
  "article_text": [
    "multimodal function refers to the function which has more than one extreme point . to find all extreme points",
    "is called extremum problem , which is a well known difficult issue in optimization fields .",
    "many practical engineering problems can be converted as this problem , such as the detection of multiple objects in military field .",
    "therefore , solving the extremum problem is a useful study topic . to solve the extremum problem ,",
    "many methods of optimization are applied , such as genetic algorithm ( ga ) @xcite , simulated annealing ( sa ) @xcite , particle swarm optimization algorithm ( pso ) @xcite , immune algorithm ( ia ) @xcite , and so on . however , currently there is rare report that applying ant colony optimization ( aco ) to solve the extremum problem .",
    "the motivation of this paper is to apply aco to search all extreme points of function .",
    "ant colony optimization ( aco ) was first proposed by dorigo ( 1991 ) @xcite .",
    "the inspiring source of aco is the foraging behavior of real ants . when ants search for food",
    ", they initially explore the area surrounding their nest in a random manner .",
    "as soon as an ant finds a food source , it remembers the route passed by and carries some food back to the nest . during the return trip , the ant deposits pheromone on the ground .",
    "the deposited pheromone , guides other ants to the food source . and the feature has been shown , indirect communication among ants via pheromone trails enables them to find the shortest routes between their nest and food sources .",
    "aco imitates this feature and it becomes an effective algorithm for the optimization problems @xcite .",
    "it has been successfully applied to many combinatorial optimization problems @xcite , such as traveling salesman problem ( tsp ) @xcite , quadratic assignment problem(qap ) @xcite , job - shop scheduling problem(jsp ) @xcite , vehicle routing problem(vrp ) @xcite , data mining(dm ) @xcite and so on .",
    "the application of aco pushes the study of aco theory , and its two main study topics are the analysis of convergence and runtime .",
    "m. birattari proves the invariance of aco and introduced three new aco algorithms @xcite .",
    "convergence is one of focus study of aco .",
    "walter j. gutjahr studied the convergence of aco firstly in 2000 @xcite .",
    "t. st@xmath1ezle and m. dorigo proved the existence of the aco convergence under two conditions , one is to only update the pheromone of the shortest route generated at each iteration step , the other is that the pheromone on all routes has lower bound @xcite .",
    "pang and et.al . found a potential new view point to study aco convergence under general condition , that is entropy convergence in 2009 @xcite . in ref.pangacoentropy ,",
    "the following conclusion is get : aco may not converges to the optimal solution in practice , but its entropy is convergent .",
    "the other study focus of aco is time complexity .",
    "aco has runtime @xmath2 ) , where @xmath3 , @xmath4 and @xmath5 refers to the number of iteration steps , ants , cities and @xmath6 $ ] in general .",
    "to reduce runtime , cutting down parameter @xmath7 and @xmath5 is the main way possibly . in 2008 , walter j. gutjahr presented some theoretical results about aco runtime @xcite .",
    "since runtime is proportional to the square of @xmath5 , parameter @xmath5 is the key factor of runtime . through cutting down @xmath5 to reduce runtime",
    "is a choice . and pang and et al .",
    "do the following attempt @xcite .",
    "firstly , cluster all cities into some classes ( group ) and let aco act on these small classes respectively to get some local tsp routes . and then joint these local route to form the whole tsp route",
    ". if class is compact , the length of local route got at every iteration step will change continually possibly , where compactness refers to all data cluster in a small region tightly . and",
    "this property result in the conclusion : the convergence criterion @xmath8 is the marker of aco convergence , where @xmath9 is the length of local route at @xmath10 iteration step . thus , minimum iteration number @xmath7 can be estimated by the marker approximately .    the study of aco theory speeds up its application again .",
    "aco not only can be applied to solve discrete optimization problems , but also to continuous ones .",
    "the first method for continuous - space optimization problems , called continuous aco ( caco ) , was proposed by bilchev and parmee ( 1995)@xcite , and later it was used by some others @xcite . in general , the application of aco to continuous optimization problems need to transform a continuous search space to a discrete one .",
    "other methods include that , in 2002 , continuous interacting ant colony ( ciac ) was proposed by dreo and siarry @xcite , and in 2003 , an adaptive ant colony system algorithm for continuous - space optimization problems was proposed by li yan - jun @xcite , and so on .",
    "traveling salesman problem ( tsp ) is a famous combinatorial problem , it can be stated very simply :    a salesman visit @xmath5 cities cyclically provided that he visits each city just once . in",
    "what order should he visit them to minimis the distance traveled ?",
    "the typical application of aco is to solve tsp , and its basic idea is stated as below :    when an ant passes through an edge , it releases pheromone on this edge .",
    "the shorter the edge is , the bigger the amount of pheromone is . and",
    "the pheromone induces other ants to passes through this edge . at last , all ants select a unique route , and this route is shortest possibly .",
    "the framework of aco is introduced as below :    * step1 ( initialization ) * : posit @xmath11 ants at different @xmath11 cities randomly ; pre - assign maximum iteration number @xmath12 ; let @xmath13 , where @xmath7 denotes the @xmath14 iteration step ; initialize amount of pheromone of every edge .    * step2 * while(@xmath15 )    \\ {    * step2.1 : * every ant selects its next city according to the transition probability .",
    "the transition probability from the @xmath16 city to the @xmath17 city for the @xmath18 ant is defined as eq.[aco probability ] .",
    "@xmath19    , where @xmath20 denotes the set of cities that can be accessed by the @xmath21 ant ; @xmath22 is the pheromone value of the edge @xmath23 ; @xmath24 is local heuristic function defined as    @xmath25    , where @xmath26  is the distance between the @xmath16  city and the @xmath17city ; the parameters @xmath27 and @xmath28 determine the relative influence of the trail strength and the heuristic information respectively .",
    "* step2.2 : * after all * *  * * ants finish their travels , all pheromone values are updated according to eq.[aco update ] .",
    "@xmath29    @xmath30    @xmath31 , where @xmath32  is the length of the route passed by the @xmath18  ant during the @xmath14  iteration ; @xmath33 is the persistence percentage of the trail ( thus , @xmath34  corresponds to the evaporation ) ; @xmath35 denotes constant quantity of pheromone .",
    "* step2.3 : * increase iteration step : @xmath36    }    * step3 : * end procedure and select the shortest route as output from the routes traveled by the ants .",
    "assume that the function is @xmath37 , @xmath38 is real number and it belongs to a closed interval @xmath39 $ ] .",
    "the task of this paper is to extract all extreme points that the corresponding value is minimal locally .",
    "the basic idea of this paper is stated roughly as below :    divide interval @xmath39 $ ] into many tiny intervals with equal size .",
    "suppose these small interval are @xmath40 and the center of interval @xmath41 is denoted by @xmath42 .",
    "suppose the neighbor interval of interval @xmath41  is @xmath43 ( or @xmath44 ) . and an ant is put at the center of each small interval .",
    "if @xmath45 , the ant at interval @xmath41 will move to interval @xmath43  possibly , just liking there is an virtual edge between @xmath41 and @xmath43 . and assume the virtual edge is @xmath46 .",
    "the weight ( virtual distance ) of edge @xmath47is proportional to @xmath48 . that is , the bigger @xmath49 is , the more possibly the ant moves to @xmath43 from @xmath50 . when the ant moves to @xmath43 , it releases pheromone at @xmath43 , and the pheromone is proportional to value @xmath48 .",
    "the pheromone depositing on @xmath43 will attract other ants move to it .",
    "after some iteration steps , some intervals contain many ants while other ones contain no ant .",
    "the intervals containing ants include extreme points possibly , while other ones include no extreme point possibly . and then keep the intervals which contain ants , and divide them into much more small intervals , repeat the same procedure again until the size of intervals is sufficient small . at last",
    "all ants will stay around extreme points .",
    "the centers of these sufficient small intervals are the approximations of extreme points .    from above discussion",
    ", it can be seen that the realization of the basic idea consists of four parts : partition of interval @xmath39 $ ] and initialization , rule of ant moving , rule of pheromone updating , and keeping the intervals containing ants .",
    "the contents of the four parts are stated as below .",
    "suppose interval @xmath39 $ ] is partitioned into @xmath51  small intervals with equal size , which are denoted by @xmath40 , where @xmath51 is a pre - assigned number .",
    "then each interval has size    @xmath52    @xmath53\\ ] ]    the @xmath16  interval @xmath41  has center @xmath42 .",
    "@xmath54    suppose @xmath7 denotes the @xmath14 iteration step of aco and it is initialized as zero ( i.e. , @xmath13 ) .",
    "put @xmath51 ants at the centers of the @xmath51  intervals , and each interval has only one ant .",
    "suppose these ants are denoted by @xmath55 respectively , and ant @xmath56 is associated with the @xmath16  interval @xmath41 .",
    "each ant will release an initial pheromone at its associated interval @xmath41 ( i.e. , @xmath57 , @xmath58 is a constant number ) .",
    "in addition , set the increment of the pheromone of each interval to zero ( i.e. , @xmath59 )    figure 1 shows a diagram of initialization .",
    "let @xmath60 be a set of neighboring intervals of @xmath41 .",
    "take one - dimensional function for example    @xmath61    as it is discussed in section @xmath62 , the ant staying at interval @xmath41 will move to neighbor interval denoted by @xmath63 , just like there is a virtual edge @xmath64 .",
    "the weight of the virtual edge is @xmath65 .",
    "then the heuristic factor is    @xmath66    suppose interval @xmath41 contains ant @xmath67 . if @xmath68 , ant @xmath69 is allowed to move to neighbor interval @xmath63 . otherwise , it is forbidden to move .",
    "suppose all intervals allowed to be accessed by ant @xmath70  is marked as @xmath20 .",
    "the transition probability of ant @xmath70  is defined as    @xmath71    in eq.[function probability ] , @xmath27 is the relative influence of the trail strength ; @xmath28  is the heuristic information ; @xmath72 is the pheromone of interval @xmath63 .",
    "suppose @xmath67 ant is staying at interval @xmath41 and it will move to neighbor interval @xmath63 .",
    "after it moves to @xmath63 , releases pheromone at @xmath73 .",
    "the pheromone amount is denoted by @xmath74    @xmath75    , where @xmath76 is a positive constant .",
    "the bigger @xmath77 is , the higher the amount of released pheromone is , the more possibly that other ants will be attracted to interval @xmath63 .",
    "not only ant @xmath67 arrives @xmath63 and releases pheromone , but also other ants which move to interval @xmath63 and release pheromone too .",
    "suppose there are @xmath78 ants will move to interval @xmath63 during the @xmath14 iteration step , which are denoted by @xmath79 .",
    "the sum of released pheromone by @xmath79 is @xmath80 .",
    "then    @xmath81    when all ants @xmath79  move to @xmath63 , the amount of pheromone @xmath82 is changed as eq.[function update ] .",
    "@xmath83    , where @xmath33 is the evaporation percentage of the trail ( thus , @xmath34corresponds to persistence ) .",
    "the intervals that have smaller function values depositing much more pheromone , and it will attract ants more powerfully .",
    "after several iterations , the distribution of ants has the feature that all ants stay at the intervals that have smaller function values and other intervals contain no ants .",
    "that is , extreme points are included in the intervals containing ants . and then keep the intervals having ant and delete other intervals to update search range .",
    "thus , the updated search range became smaller .",
    "dividing the updated search range into smaller intervals will result in much smaller search range at next iteration step .",
    "when intervals becoming sufficient small , all ants will stay around extreme points , the centers of the intervals are their approximations .",
    "figure 2 shows the distribution feature of ants .",
    "in addition , as it is well known , aco runs slow , which is the bottleneck of application . and it evades this bottleneck that keeping only the intervals having ants to cut down search range .      *",
    "step1 ( initialization ) : * divide domain @xmath39 $ ] into many small intervals and put an ant in each interval ; do other initialization .",
    "the detail is shown at section @xmath84 .",
    "suppose @xmath85 is the length of interval and @xmath86 is a stop threshold .",
    "* step2 * while ( @xmath87 )    \\ {    * step2.1 : * all ants move to new intervals according the rule shown at section @xmath88    * step2.2 : * update pheromone according the rule shown at section @xmath89    * step2.3 : * update search range according to section @xmath90 and divide it into smaller intervals ( suppose the number of these intervals is @xmath91 ) .",
    "calculate the size of interval and set it to @xmath85 .    }    * step3 * extract all intervals that contain ants , the centers of the intervals are the approximations of extreme points .    if argument @xmath38 is multi - dimensional vector , divide the range of every component of vector into smaller intervals , the combination of these intervals forms many small lattices . and then put an ant in each lattice , apply the above method , all extreme points can be extracted .      to understand above method easily ,",
    "an simple example is stated as below :    assume that the domain of 1-dimensional function is divided into 3 intervals @xmath92 , @xmath93 , @xmath94 , which associated center is @xmath95 , @xmath96 and @xmath97 respectively .",
    "initially ant @xmath98 , @xmath99 , and @xmath100 is put at @xmath101 , @xmath96 and @xmath102 respectively .",
    "check the first ant : if @xmath103 , ant @xmath98 moves to interval @xmath104 . otherwise , do nothing .",
    "check the 2nd ant : if their is unique interval ( e.g. @xmath94 ) such that @xmath105 , ant @xmath99 moves to interval @xmath94 .",
    "if @xmath106 is smaller than both @xmath107 and @xmath108 , do nothing . if @xmath106 is bigger than both @xmath107 and @xmath108 , it is uncertain that ant @xmath99 moves to @xmath92 or @xmath94 . and ant @xmath99 will select its visiting interval randomly according to its transition probability defined at eq.function probability .",
    "check the 3rd ant using same way .",
    "after all ants are checked , update their associated interval ( position ) and interval pheromone .",
    "repeat above processing until all ants can not move .",
    "then keep the intervals which contains ants , and delete other blank intervals . and divided the intervals containing ants into smaller interval , repeat above process until the size of interval is sufficient small .",
    "and then all interval centers are the approximations of extreme points .",
    "in this section , several functions will be tested .",
    "the parameters are listed as below :    @xmath109 , @xmath110 , @xmath111 , @xmath112 , @xmath113 , @xmath114    two performances are considered , which are error ( ratio of inaccuracy ) @xmath115and runtime .",
    "error @xmath115 is defined as    @xmath116    , where @xmath117 denotes the true extreme point on theory and @xmath118 is its approximation calculated by the method presented in this paper .",
    "in addition , the hardware condition is : notebook pc dell d520 , cpu 1.66 ghz .",
    "@xmath119 $ ]    in the experiment , additional parameter is @xmath120 and @xmath121 .",
    "table 1 and fig.[figinstance1 ] show all extreme points ( local maximal points ) of @xmath122 .",
    "only 0.7106 seconds is cost .",
    "other functions are tested , their errors are less than @xmath0 except the boundary . and runtime is less than 1 second ( see appendix i ) .",
    "@xmath123 $ ]    instance 2 is a typical test function , which include many extreme points and any small change of argument @xmath38 will result in big change . in addition , the theoretical calculation of extreme points of instance 2 is difficult .",
    "the additional parameters are @xmath124 and @xmath121 .",
    "fig.[figinstance2 ] shows all the calculated extreme points , and the real numbers are listed at appendix ( see appendix ii ) .",
    "@xmath125 ,  @xmath126 $ ]    the interval @xmath127\\otimes \\lbrack -1,1]$ ] is divided into @xmath128 intervals initially . and at next iteration steps",
    ", search domain is divided into @xmath129 small intervals .",
    "36 extreme points are got and shown at fig.[figinstance3 ] , and the digital solutions are listed at appendix ( see appendix iii )    instance 3 is a 2-dimensional function and 3203.2968 seconds is cost . and it is slower than 1-dimensional function instance 1 and instance 2 . to improve running speed is the next work .",
    "many functions are tested by the authors , and some experiments results are listed at appendix .",
    "these tests demonstrate that solution error is less than @xmath0 except the special case that extreme point is at the border of the domain .",
    "in addition , these testes also demonstrate that the method is very fast for 1-dimensional function .     &",
    "theory value & calculated value & error ( % ) + & @xmath130 & @xmath131 & @xmath132 + & @xmath133 & @xmath134 & 2.1e-06 + & @xmath135 & @xmath136 & 1.3e-06 + & @xmath137 & @xmath138 & 1.0e-07 + & @xmath139 & @xmath140 & 2.0e-07 + & @xmath141 & @xmath142 & 5.0e-07 + & @xmath143 & @xmath144 & 0.0145 +   +    notice : from the table 1 , we can see that the border point has big error because the value calculated is the center  of the interval , not boundary . to evade this drawback",
    ", the function value at boundary can be calculated directly .",
    "to find all extreme points of multimodal functions is called extremum problem , which is a well known difficult issue in optimization fields . it is reported rarely that applying ant colony optimization(aco ) to solve the problem . and",
    "the motivation of this paper is to explore aco application method to solve it . in this paper ,",
    "the following method is presented :    divide the domain of function into many intervals and put an ant in each interval .",
    "and then design rule such that every ant moves to the interval containing extreme point near by .",
    "at last all ants stay around extreme points .    the method presented in this paper",
    "has following three advantages :    \\1 .",
    "solution accuracy is high .",
    "experiment shows that solution error is less than @xmath0 .",
    "solution calculated is stable ( robust ) .",
    "ant only indicates the interval containing extreme point , not the accurate position of extreme point .",
    "it is easy for ant to find a interval although finding a special point in interval is difficult .",
    "the method is fast for 1-dimensional function .",
    "aco is slow . but some feature is found to speed aco ( see section 2.5 )    the authors appreciate the discussion from the members of gene computation group , j. gang , x. li , c .- b .",
    "wang , w. hu , s .-",
    "wang , q. yang , j .- l .",
    "zhou , p. shuai , l .- j .",
    "the authors appreciate the help from prof .",
    "j. zhang , z .-",
    "lin pu , x .-",
    "wang , j. zhou , and q. li .",
    "99 min - qiang li , ji - song kou , coordinate multi - population genetic algorithms for multimodal function optimization ,  acta automatica sinica , 2002,28(04):497 - 504 .",
    "qing - yun tao , hui - yun quan , the simulated annealing algorithm for multi - modal function problem ,  computer engineering and applications , 2006,(14):63 - 64,92 .",
    "li li , hong - qi li , shao - long xie , effective optimization algorithm for multimodal functions ,  application research of computers , 2008,25(10):4792 , 5792,6792 .",
    "jiang wu , han - ying hu , ying wu , application - oriented fast optimizer for multi - peak searchin ,  application research of computers 2008,25(12):3617 - 3620 .",
    "rui - ying zhou , jun - hua gu , na - na li , qing tan , new algorithm for multimodal function optimization based on immune algorithm and hopfield neural network ,  computer applications , 2007,27(7):1751 - 1753,1756 .",
    "m. dorigo , v. maniezzo , and a. colorni , positive feedback as a search strategy .",
    "technical report 91 - 016 , dipartimento di elettronica , politecnico di milano , milan , italy , 1991 .",
    "a. colorni , m. dorigo , and v. maniezzo , distributed optimization by ant colonies ,  in f. j.varela and p. bourgine , editors , towards a practice of autonomous systems : proceedings of the first european conference on artificial life , pages 134 - 142 . mit press , cambridge , ma,1992 .",
    "m. dorigo , optimization learning and natural algorithms ,  phd thesis , dipartimento di elettronica , politecnico di milano , milan , italy , 1992 .",
    "m. dorigo , v. maniezzo , and a. colorni , the ant system : optimization by a colony of cooperating agents ,  ieee transactions on systems , man , and , cybernetics part b : cybernetics .",
    "26(1 ) : 29 - 41.1996 .",
    "ball , t.l .",
    "magnanti , c.l .",
    "monma , and g.l .",
    "nemhauser , handbooks in operations research and management science , 7 : network models , north holland , 1995 .",
    "ball , t.l .",
    "magnanti , c.l .",
    "monma , and g.l .",
    "nemhauser , handbooks in operations research and management science , 8 : network routing , north holland , 1995 .",
    "k. doerner , walter j. gutjahr , r.f .",
    "hartl , c. strauss , c. stummer , pareto ant colony optimization with ip preprocessing in multiobjective project portfolio selection ,  european journal of operational research 171 , pp .",
    "830 - 841 , 2006 .",
    "m. dorigo and l. m. gambardella , ant colony system : a cooperative learning approach to the traveling salesman problem ,  ieee transactions on evolutionary computation , 1(1):53 - 66 , 1997 .",
    "m. manfrin , m. birattari , t. sttzle , and m. dorigo , parallel ant colony optimization for the traveling salesman problem ,  in m. dorigo , l. m. gambardella , m. birattari , a. martinoli , r. poli , and t. sttzle ( eds . ) ant colony optimization and swarm intelligence , 5th international workshop , ants 2006 , lncs 4150 pp .",
    "224 - 234 .",
    "springer , berlin , germany .",
    "conference held in brussels , belgium .",
    "september 4 - 7 , 2006 .",
    "l. m. gambardella , d. taillard , and m. dorigo , ant colonies for the quadratic assignment problem ,  journal of the operational research society , 50(2):167 - 176 , 1999 .",
    "l. m. gambardella and m. dorigo , ant - q : a reinforcement learning approach to the traveling salesman problem ,  in a. prieditis and s. russell , editors , machine learning : proceedings of the twelfth international conference on machine learning , pages 252 - 260 .",
    "morgan kaufmann publishers , san francisco , ca , 1995 .",
    "b. bullnheimer , r. f. hartl , and c. strauss ,  applying the ant system to the vehicle routing problem ,  in i. h. osman , s. vo , s. martello and c. roucairol , editors , meta - heuristics : advances and trends in local search paradigms for optimization , pages 109 - 120 .",
    "kluweracademics , 1998 .",
    "forsyth and a. wren , an ant systemfor bus driver scheduling ,  technical report 97.25 , university of leeds , school of computer studies , july 1997 . presented at the 7th international workshop on computer - aided scheduling of public transport , boston , july 1997 .",
    "rafael s. parpinelli , heitor s. lopes , data mining with an ant colony optimization algorithm , ieee transactions on evolutionary computation , vol .",
    "321 - 332 , 2002 .",
    "m. birattari , p. pellegrini , and m. dorigo , on the invariance of ant colony optimization ,  ieee transactions on evolutionary computation , vol .",
    "732 - 742 , 2007 .",
    "w. j. gutijahr , a graph - based ant system and its convergence ,  future generation computer systems 16 , 873 - 888 , 2000 .",
    "t. st@xmath145ezle and m. dorigo . a short convergence proof for a class of aco algorithms .",
    "ieee transactions on evolutionary computation , 6(4):358 - 365 , 2002 .    chao - yang pang , chong - bao wang and ben - qiong hu , experiment study of entropy convergence of ant colony optimization ,  arxiv:0905.1751v4 [ cs.ne ] 25 oct 2009 .",
    "[ on line ] http://arxiv.org/abs/0905.1751    walter j. gutjahr and giovanni sebastiani , runtime analysis of ant colony optimization with best - so - far reinforcement ,  methodology and computing in applied probability 10 , pp .",
    "409 - 433 , 2008 .",
    "walter j. gutjahr , first steps to the runtime complexity analysis of ant colony optimization ,  computers and operations research 35 ( no .",
    "9 ) , pp . 2711 - 2727 , 2008 .",
    "chao - yang pang , wei hu , xia li , and ben - qiong hu , applying local clustering method to improve the running speed of ant colony optimization ,  arxiv:0907.1012v2 [ cs.ne ] 7 jul 2009 .",
    "[ on line ] http://arxiv.org/abs/0907.1012    chao - yang pang , wei hu , xia li , and ben - qiong hu , applying local clustering method to improve the running speed of ant colony optimization ,  [ on line]http://arxiv.org / pdf/0907.1012    chao - yang pang , chong - bao wang and ben - qiong hu , experiment study of entropy convergence of ant colony optimization , on line ] http:// arxiv.org/pdf/0905.1751    g. a. bilchev , i. c. parmee , the ant colony metaphor for searching continuous spaces , lecture notes in computer science , 993:2539 , 1995 .    m. r. jalali , a. afshar and m. a. mario , multi - colony ant algorithm for continuous multi - reservoir operation optimization problem ,  water resour manage 21:14291447,2007 .",
    "wodrich m , bilche g , cooperative distributed search : the ant s way ,  control cybern ( 3):413446,1997 .",
    "mathur m , karale sb , priye s , jyaraman vk , kulkarni bd , ant colony approach to continuous function optimization ,  ind eng chem res 39:38143822 , 2000 .",
    "m. r. jalali , a. afshar , semi - continuous aco algorithms ( technical report),hydroinformatics center , civil engineering department , iran university of science and technology , tehran , iran,2005b .",
    "j. dreo , p .-",
    "siarry , a new ant colony algorithm using the hierarchical concept aimed at optimization of multiminima continuous functions ,  in : m. dorigo , gd .",
    "caro , m. sampels ( eds ) proceedings of the 3rd international workshop on ant algorithms ( ants 2002 ) , vol 2463 of lncs .",
    "springer , berlin heidelbergnew york , pp 216221,2002 .",
    "y -j li , t -j wu , an adaptive ant colony algorithm for continuous - space optimization problems , journal of zhejiang university science,2003,4(1):4046 .",
    "& & & + & theory value & calculated value & error ( % ) + & @xmath130 & @xmath131 & @xmath132 + & @xmath150 & @xmath151 & 5.12e-004 + & @xmath152 & @xmath153 & 1.91e-009 + & @xmath154 & @xmath155 & 1.20e-008 +   +   +   +   +           & & & + & theory value & calculated value & error ( % ) + & @xmath130 & @xmath131 & @xmath132 + & @xmath159 & @xmath160 & 5.39e-004 + & @xmath161 & @xmath162 & 7.97e-008 + & @xmath163 & @xmath164 & 16.98e-008 + & @xmath165 & @xmath166 & 9.82e-009 + & @xmath167 & @xmath168 & 6.55e-008 + & @xmath169 & @xmath170 & 1.17e-011 + & @xmath171 & @xmath172 & 1.27e-008 +   +   +   +   +            + & calculated value & extreme & calculated value & extreme & calculated value + & @xmath175 & points & @xmath175 & points & @xmath175 + & @xmath176 & 12 & @xmath177 & 23 & @xmath178 + & @xmath179 & 13 & @xmath180 & 24 & @xmath181 + & @xmath182 & 14 & @xmath183 & 25 & @xmath184 + & @xmath185 & 15 & @xmath186 & 26 & @xmath187 + & @xmath188 & 16 & @xmath189 & 27 & @xmath190 + & @xmath191 & 17 & @xmath192 & 28 & @xmath193 + & @xmath194 & 18 & @xmath195 & 29 & @xmath196 + & @xmath197 & 19 & @xmath198 & 30 & @xmath199 + & @xmath200 & 20 & @xmath201 & 31 & @xmath202 + & @xmath203 & 21 & @xmath204 & 32 & @xmath205 + & @xmath206 & 22 & @xmath207 & & +   +           & & & & + & calculated value & extreme & calculated value & extreme & calculated value + & @xmath210 & points & @xmath210 & points & @xmath211 + & @xmath212 & 13 & @xmath213 & 25 & @xmath214 + & @xmath215 & 14 & @xmath216 & 26 & @xmath217 + & @xmath218 & 15 & @xmath219 & 27 & @xmath220 + & @xmath221 & 16 & @xmath222 & 28 & @xmath223 + & @xmath224 & 17 & @xmath225 & 29 & @xmath226 + & @xmath227 & 18 & @xmath228 & 30 & @xmath229 + & @xmath230 & 19 & @xmath231 & 31 & @xmath232 + & @xmath233 & 20 & @xmath234 & 32 & @xmath235 + & @xmath236 & 21 & @xmath237 & 33 & @xmath238 + & @xmath239 & 22 & @xmath240 & 34 & @xmath241 + & @xmath242 & 23 & @xmath243 & 35 & @xmath244 + & @xmath245 & 24 & @xmath246 & 36 & @xmath247 +   +"
  ],
  "abstract_text": [
    "<S> to find all extreme points of multimodal functions is called extremum problem , which is a well known difficult issue in optimization fields . applying ant colony optimization ( aco ) to solve this problem is rarely reported . </S>",
    "<S> the method of applying aco to solve extremum problem is explored in this paper . </S>",
    "<S> experiment shows that the solution error of the method presented in this paper is less than @xmath0 . </S>"
  ]
}
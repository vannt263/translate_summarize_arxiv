{
  "article_text": [
    "since it has been introduced to recognize chordal graphs in @xcite , _ lexicographic breadth first search _ ( lexbfs ) has been used to come up with elegant and efficient algorithms on various graph classes .",
    "often , these algorithms are  multi - sweep \" algorithms .",
    "that is , they compute a number of lexbfs orderings - sweeps - @xmath9 , where @xmath1 is used to break ties for @xmath2 .",
    "we write lexbfs@xmath4 .",
    "for instance , @xcite gave a linear time multi - sweep algorithm to recognize proper interval graphs .",
    "a few years later , @xcite gave the first lexbfs based certifying recognition algorithm for both interval and permutation graphs .",
    "in 2009 , it was conjectured that cocomparability graphs , a large graph family that includes permutation and interval graphs , can too be recognized using a multi - sweep lexbfs algorithm @xcite .",
    "it was not until recently that such an algorithm was proposed in @xcite , where the authors conjectured that for cocomparability graphs , a series of lexbfs@xmath3 sweeps must converge .",
    "we formulate this as the 2-cycle lexbfs@xmath3 conjecture , which states that for certain graph families , a series of lexbfs@xmath3 always reaches an order @xmath5 such that lexbfs@xmath10 and lexbfs@xmath11 . in this paper",
    "we study * the 2-cycle lexbfs@xmath3 conjecture * , and prove that it is true for proper interval , interval , cobipartite , domino - free cocomparability graphs , as well as for trees .",
    "we conjecture that the size of the cycle for a graph class is related to the asteroidal number , as defined by gallai in his seminal work on comparability graphs @xcite .    as one of the many consequences of this result ,",
    "we obtain the simplest algorithm to compute a transitive orientation of a graph @xmath12 when @xmath12 belongs to certain families , where it suffices to compute a series of lexbfs@xmath3 orders , and use a simple halting test - see algorithm [ transitive ] .",
    "in addition to this algorithmic consequence , our main result can be seen as a fixed point theorem for a graph search ( namely lexbfs@xmath3 ) acting on a graph , the first non trivial result of this kind .",
    "furthermore , the 2-cycle property reinforces our intuition behind this linear structure exhibited by a number of graph families , which has led to many efficient and simple algorithms for problems ranging from graph recognition to domination , and colouring to name a few .",
    "this paper is organized as follows : in section [ prelim ] , we give the necessary definitions and background on lexbfs and the graph classes we are studying . in section [ classes ] , we prove the 2-cycle conjecture for proper interval , interval , cobipartite , and domino - free cocomparability graphs , as well as trees .",
    "although proper interval graphs are a strict subfamily of interval graphs , and cobipartite a strict subfamily of domino - free cocomparability graphs , we give separate proofs for each graph class since each proof displays structure properties not seen in the parent families .",
    "we also get better bounds on the convergence of the algorithm .",
    "we conclude in section [ conclusion ] with future directions , and a natural generalization of the 2-cycle conjecture .",
    "this paper follows standard graph notations , see for instance @xcite .",
    "let @xmath13 denote a graph on @xmath14 vertices and @xmath15 edges .",
    "all the graphs considered are simple ( no loops or multiple edges ) , finite and undirected . given a pair of adjacent vertices @xmath16 and @xmath17 , we write @xmath18 to denote the edge in @xmath19 whose endpoints are @xmath16 and @xmath17 .",
    "we denote by @xmath20 the open neighbourhood of vertex @xmath17 , and @xmath21 = n(v ) \\cup \\{v\\}$ ] the closed the neighbourhood of @xmath17 .",
    "we write @xmath22 $ ] to denote the induced subgraph @xmath23 of @xmath13 on the subset of vertices @xmath24 , where for every pair @xmath25 if and only if @xmath26 . the complement of a graph @xmath27 is the graph @xmath28 where @xmath29 if and only @xmath30 .",
    "a _ private neighbour _ of a vertex @xmath16 with respect to a vertex @xmath17 is a third vertex @xmath31 that is adjacent to @xmath16 but not @xmath17 : @xmath32 .",
    "a set @xmath33 is independent if for all @xmath34 , and @xmath35 is a clique if for all @xmath36 .",
    "a triple of independent vertices @xmath37 forms an _ asteroidal triple _ ( at ) if every pair of the triple remains connected when the third vertex and its closed neighbourhood are removed from the graph . in general",
    ", a set @xmath38 of @xmath12 forms an _ asteroidal set _ if for each vertex @xmath39 , the set @xmath40 is contained in one connected component of @xmath41 $ ] .",
    "the maximum cardinality of an asteroidal set of @xmath12 , denoted @xmath42 , is called the _ asteroidal number _ of @xmath12 .",
    "domino _ is the induced graph @xmath43 .",
    "given a pair of vertices @xmath16 and @xmath17 , the distance between @xmath16 and @xmath17 , denoted @xmath44 , is the length of a shortest @xmath45 path . a _ diametral _ path of a graph is a shortest @xmath46 path where @xmath47 and @xmath48 are at the maximum distance among all pairs of vertices .    given a graph @xmath27 , an ordering @xmath5 of @xmath12 is a bijection @xmath49 .",
    "for a given vertex @xmath50 , @xmath51 refers to the position of @xmath47 in @xmath5 . for a pair @xmath52 of vertices",
    "we write @xmath53 if and only if @xmath54 ; we also say that @xmath16 ( resp .",
    "@xmath17 ) _ is to the left of _ ( resp . _",
    "right of _ ) @xmath17 ( resp .",
    "@xmath16 ) .",
    "we write @xmath55 to denote a sequence of orderings @xmath56 .",
    "given such a sequence , and an edge @xmath57 , we write @xmath58 if @xmath59 , and @xmath60 if @xmath58 and @xmath61 .    given an ordering @xmath62 of @xmath12",
    ", we write @xmath63 to denote the _ dual _ ( also called _",
    "reverse _ ) ordering of @xmath5 ; that is @xmath64 . for an ordering @xmath62 , the interval @xmath65",
    "$ ] denotes the ordering of @xmath5 restricted to the vertices @xmath66 as numbered by @xmath5 .",
    "similarly , if @xmath33 , and @xmath5 an ordering of @xmath67 , we write @xmath68 $ ] to denote the ordering of @xmath5 restricted to the vertices of @xmath35 .",
    "lexbfs is a graph search variant of bfs that assigns lexicographic labels to vertices and breaks ties between them by choosing vertices with lexicographically highest labels .",
    "the labels are words over the alphabet @xmath69 . by convention",
    "@xmath70 denotes the empty word .",
    "we illustrate lexbfs , given in algorithm [ lexbfsalg ] , on the graph in figure [ fig1 ] ; the table shows how the labels are assigned to the vertices .",
    "the operation _",
    "_ in algorithm [ lexbfsalg ] , puts the letter @xmath72 at the end of the word .",
    "the ordering produced by algorithm [ lexbfsalg ] on the graph of figure [ fig1 ] is @xmath73 .",
    "a graph @xmath27 and a start vertex @xmath74 an ordering @xmath5 of @xmath67 assign the label @xmath70 to all vertices , and @xmath75 pick an unnumbered vertex @xmath17 with lexicographically largest label @xmath76 append@xmath71 to @xmath77    \\(a ) at ( -1 , 2.6 ) ; ( b ) at ( -1 , 1.3 ) ; ( c ) at ( 0,2.6 ) ; ( d ) at ( 1 , 1.3 ) ; ( e ) at ( -1 , 0 ) ; ( f ) at ( 1 , 0 ) ; /in a / b , a / c , b / c , b / d , b / e , c / d , d / f , e / f ( )  ( ) ;    [ cols=\"<,<,<,<,<\",options=\"header \" , ]     it is easy to see in the algorithm that as soon as an unvisited vertex @xmath17 gets an advantage in its label with respect to another unvisited vertex @xmath16 , vertex @xmath17 keeps its advantage until it is visited .",
    "we formalize this idea in proposition [ labelorder ] below :    [ labelorder ] if at iteration @xmath78 of lexbfs , two unvisited vertices @xmath16 and @xmath17 satisfy @xmath79 , then lexbfs will visit @xmath17 before @xmath16 , i.e. @xmath80 .",
    "in particular , lexbfs orderings can be characterized by the _ lexbfs 4 point condition _ :    @xcite[lbfscond][lexbfs 4pc ] let @xmath13 be an arbitrary graph .",
    "an ordering @xmath5 is a lexbfs ordering of @xmath12 if and only if for every triple @xmath81 , if @xmath82 , then there exists a vertex @xmath83 such that @xmath84 and @xmath85 .",
    "we call the triple @xmath86 as described in theorem [ lbfscond ] above a _ bad lexbfs triple _ , and vertex @xmath83 a _ private neighbour _ of @xmath87 with respect to @xmath88 .    given a graph @xmath12 and an ordering @xmath5 of @xmath12 , we denote by @xmath89 , a lexbfs ordering of @xmath12 that breaks additional ties by using the",
    " @xmath3 rule \" : a tie breaking rule that chooses the right most vertex in @xmath5 when a tie occurs .",
    "we write lexbfs@xmath90 when @xmath12 is clear in the context .",
    "consider the graph in figure [ fig1 ] , using @xmath5 the lexbfs ordering computed earlier , we get @xmath91 .",
    "a multi - sweep algorithm is an algorithm that computes a number of orderings where each ordering @xmath92 uses the previous ordering @xmath93 to break ties in a specific manner , often in a @xmath3 manner .",
    "the next section shows how lexbfs when combined with specific graph structure helps expose nice algorithmic properties .",
    "a graph @xmath27 is an _ interval _",
    "graph if @xmath12 can be represented as the intersection of intervals on the real line ; that is , every vertex @xmath94 is represented by a corresponding interval @xmath95 , and two vertices @xmath52 are adjacent if and only their corresponding intervals @xmath96 and @xmath95 overlap .",
    "if no interval is properly contained in another interval , we say that @xmath12 is a _ proper interval _ graph .    a classical result of lekkerkerker and boland @xcite states that interval graphs are precisely the intersection of at - free graphs and chordal graphs , where the former are the class of graphs that do not contain asteroidal triples ( @xmath97 ) , and the latter are the class of graphs where the largest cycle is a triangle .",
    "in fact , lexbfs was introduced in @xcite to recognize chordal graphs .",
    "later , golumbic and monma @xcite strenghtened this characterization by showing that interval graphs are precisely the intersection of chordal and cocomparability graphs .",
    "this is a stronger characterization since golumbic and monma showed that cocomparability graphs are strictly contained in at - free graphs .",
    "a _ cocomparability graph _ is a graph whose complement is a comparability graph .",
    "an undirected graph is a _ comparability graph _ if the graph admits a transitive orientation of its edge set , i.e. if the edges @xmath98 are oriented @xmath99 then the edge @xmath100 must be oriented @xmath101 .",
    "both comparability and cocomparability graphs are well studied classes of graphs , see for instance @xcite . in this paper , we focus on the class of cocomparability graphs and some of its subfamilies .",
    "cocomparability graphs are a large graph family that includes trapezoid , permutation , and interval graphs to name a few well studied classes .",
    "it is indeed well known that @xmath102 another graph class we will cover is _ cobipartite _ graphs .",
    "these are graphs whose complement is a bipartite graph .",
    "a graph @xmath27 is _ bipartite _ if its vertex set can be partitioned into two independent sets @xmath103 and all the edges of @xmath12 are of the form @xmath104 .",
    "the vertex set of a cobipartite graph can therefore be partitioned into two cliques @xmath105 and @xmath106 .",
    "it is easy to see that the largest independent set of a cobipartite graph is of size at most 2 .",
    "cobipartite graphs are too a subfamily of cocomparability graphs .",
    "a classical way to characterize graph families is by means of _ vertex orderings characterizations _ , or voc .",
    "a voc is a total ordering of the vertices with specific properties . if a graph family @xmath107 has a voc , then a graph @xmath108 if and only if there is an ordering of the vertices of @xmath12 that satisfies said voc .",
    "the existence of a voc for a graph family often helps come up with efficient algorithms , see for instance @xcite for various examples . in @xcite ,",
    "kratsch and stewart showed that a graph is a cocomparability graph if and only if @xmath12 admits a total ordering known as a _",
    "cocomparability _ ordering .",
    "an ordering @xmath5 of @xmath27 is a _ cocomparability ordering _ if for every triple @xmath81 , the edge @xmath109 implies either @xmath110 or both .",
    "notice that a cocomparability ordering is precisely a transitive orientation in the complement .",
    "similarly , interval graphs are characterized by _",
    "interval orders _ , or i - orders .",
    "a graph @xmath27 is an interval graph if and only if there is an ordering @xmath5 of @xmath67 where for every triple @xmath81 , if @xmath109 , then @xmath57 .",
    "proper interval graphs are too characterized by _ proper interval orders _ , or pi - orders , where @xmath111 is a proper interval graph if and only if there is an ordering @xmath5 of @xmath67 where for every triple @xmath81 , if @xmath109 then both @xmath112 .",
    "it is clear from these vertex ordering characterizations that every pi - order is an i - order , and every i - order is a cocomparability order .    combining these vocs with lexbfs properties",
    "has led to a number of structural results on these graph families . since cocomparability graph",
    "encapsulate all these families , we will focus on lexbfs properties of cocomparability graphs .    in @xcite , corneil et al .",
    "showed that lexbfs@xmath3 sweeps preserve cocomparability orderings , meaning the following :    @xcite[maintaincocomp ] let @xmath13 be a cocomparability graph and @xmath5 a cocomparability ordering of @xmath12 .",
    "the ordering @xmath113 is a cocomparability ordering of @xmath12 .",
    "we call the ordering @xmath114 as defined above a lexbfs cocomparability ordering . combining theorems [ lbfscond ] and [ maintaincocomp ] , it is easy to show the following , simple but powerful , property of combining lexbfs and cocomparability orderings :    _ property _ : [ c4cocomp][the lexbfs @xmath115 property ] .",
    "let @xmath27 be a cocomparability graph and @xmath5 a lexbfs cocomparability order of @xmath67 .",
    "if @xmath5 has a bad lexbfs triple @xmath81 , then first , @xmath116 otherwise we contradict @xmath5 being a cocomparability ordering .",
    "furthermore , using the lexbfs 4pc , there exists vertex @xmath83 , private neighbour of @xmath87 with respect to @xmath88 , such that @xmath117 and the edge @xmath118 is forced , otherwise we contradict once again @xmath5 being a cocomparability ordering .",
    "therefore a bad lexbfs triple in a cocomparability ordering always produces an induced @xmath119 .    we refer to this property as the lexbfs @xmath115 property of cocomparability graphs .",
    "when choosing vertex @xmath83 as described above , we always choose it as the _ left most private neighbour _ of @xmath87 with respect to @xmath88 .",
    "we write @xmath120 and read @xmath83 is the left most private neighbour of @xmath87 with respect to @xmath88 in @xmath5 .",
    "this is to say that prior to visiting vertex @xmath83 in @xmath5 , vertices @xmath87 and @xmath88 were tied and @xmath121 . by proposition [ labelorder ] ,",
    "vertex @xmath83 caused @xmath122 .",
    "recently , dusart and habib showed that a cocomparability ordering can be obtained from a series of lexbfs@xmath3 sweeps @xcite .",
    "in particular , they gave an algorithm , _ repeated lexbfs@xmath3 _ that computes @xmath123 consecutive lexbfs@xmath3 orderings on @xmath12 and check if @xmath124 is a cocomparability ordeirng or not .",
    "they proved the following :    @xcite[insidecocomp ] @xmath13 is a cocomparability graph if and only if the repeated lexbfs@xmath3 algorithm computes a cocomparability ordering in at most @xmath123 lexbfs@xmath3 sweeps .    using theorems [ insidecocomp ] and [ maintaincocomp ] , it is easy to see that if @xmath12 is a cocomparability graph , applying an infinite series of consecutive lexbfs@xmath3 sweeps will infinitely loop in a _ finite _ cycle of cocomparability orderings .",
    "it is thus natural to ask whether we can determine the size of this cycle .",
    "we formulate this conjecture as the * 2-cycle lexbfs conjecture * :    @xcite if @xmath13 is a cocomparability graph , then the lexbfs cycle is always of size 2 .",
    "an intuition as to why this could be true comes from the following easy but important lemma about lexbfs on cocomparability graphs , known as the _ flipping lemma_. this lemma is a key tool for proving theorem [ maintaincocomp ] and is implicitly proven in @xcite .",
    "[ flippinglemma ] let @xmath125 be a cocomparability graph , @xmath5 a cocomparability ordering of @xmath12 and @xmath113 . for every pair @xmath45",
    "such that @xmath30 , @xmath126 .",
    "this means that when applied on a cocomparability ordering , lexbfs will reverse all the non edges .",
    "therefore , in a sequence @xmath127 , with @xmath128 being a cocomparability ordering , all pairs of non adjacent vertices are exactly in the same order in @xmath1 and @xmath129 .",
    "a direct consequence of the flipping lemma is the following corollary :    [ evenlength ] for a cocomparability graph @xmath12 , the final cycle of a series of lexbfs@xmath3 sweeps is necessarily of even length @xmath130 .",
    "if @xmath12 contains a pair of nonadjacent vertices , then the claim is a trivial consequence of the flipping lemma .",
    "otherwise @xmath12 is a complete graph and @xmath131 is the cycle of length 2 .",
    "if for some ordering , this is also true for the edges of @xmath12 , then this implies a stronger claim than the 2-cycle conjecture ; namely that the orderings @xmath132 satisfy @xmath133 .",
    "this stronger claim does not hold for cocomparability graphs .",
    "in fact , it does not hold for interval graphs either as shown by the example of figure [ nonproper ] .",
    "\\(a ) at ( 0 , -0.5 ) ; ( b ) at ( -1 , -0.5 ) ; ( c ) at ( 0 , 0.3 ) ; ( d ) at ( 1 , -0.5 ) ; /in a / c , b / a , a / d ( )  ( ) ;    @xmath134    if the 2-cycle lexbfs conjecture is true , then the following simple algorithm will always return cocomparability orderings that cycle , and thus a transitive orientation of a comparability graph .",
    "a cocomparability graph @xmath27 an ordering @xmath1 of @xmath12 whose lexbfs@xmath135 is @xmath93 @xmath136 lexbfs@xmath137 , @xmath138 lexbfs@xmath139 , @xmath140 lexbfs@xmath141 @xmath142 @xmath143 @xmath144 lexbfs@xmath3(@xmath93 ) @xmath1    running algorithm [ transitive ] on the graph in figure [ fig1 ] halts at @xmath145 , as shown below : @xmath146 notice that @xmath147 and @xmath148 are cocomparability orderings .",
    "a simple consequence of theorems [ maintaincocomp ] and [ insidecocomp ] is :    let @xmath13 be a cocomparability graph .",
    "if algorithm [ transitive ] ends when applied on @xmath12 , then the last two computed lexbfs@xmath3 ordering are cocomparability orderings .",
    "we now prove the 2-cycle conjecture for a number of graph families .",
    "the proofs rely often on studying edges that do not flip in consecutive orderings .",
    "we use the following observation heavily throughout the proofs .",
    "_ observation _ : consider a sequence @xmath149 of lexbfs@xmath3 sweeps on a cocomparability graph @xmath12 .",
    "if there exists an edge @xmath57 and two consecutive orders @xmath150 such that @xmath151 then vertex @xmath152 must have a private neighbour @xmath88 with respect to @xmath87 that _ pulled _",
    "@xmath152 before @xmath87 in @xmath2 , and overruled the @xmath3 rule .",
    "if such a scenario occurs , we always choose @xmath88 as the left most such private neighbour of @xmath152 with respect to @xmath87 in @xmath153 , and again write @xmath154 .",
    "we begin by proving a stronger version of the 2-cycle conjecture for proper interval graphs . in particular , we show that any two orderings that characterize the cycle must be duals . to this end , the following claim is crucial , which shows that on proper interval graphs , the flipping lemma holds for edges as well .",
    "[ flipedge ] let @xmath13 be a proper interval graph and @xmath5 a pi - order of @xmath12 .",
    "let @xmath113 .",
    "for every edge @xmath26 , @xmath53 iff @xmath155 .",
    "suppose not .",
    "let @xmath156 be pair of vertices such that @xmath157 and @xmath158 .",
    "since the pair maintained the same order on consecutive sweeps , the @xmath3 rule was not used to break ties between @xmath47 and @xmath48 , and thus there must exist a private neighbour @xmath159 of @xmath47 with respect to @xmath48 , such that @xmath160 and @xmath161 . using the flipping lemma",
    ", this implies @xmath162 with @xmath163 and @xmath164 , which contradicts @xmath5 being a pi - order .    [ properinterval ]",
    "let @xmath12 be a proper interval graph and @xmath5 a pi - order of @xmath12 , then lexbfs@xmath165 .",
    "let @xmath12 be a proper interval graph and @xmath5 a pi - order of @xmath12 .",
    "consider the ordering @xmath113 .",
    "using the flipping lemma on edges and non - edges on @xmath5 , it follows that both the edges and non edges of @xmath12 are flipped in @xmath114 .",
    "thus @xmath166 .    therefore , using theorem [ properinterval ] and theorem [ 3sweep ] below , we get corollary [ concludepi ]    @xcite [ 3sweep ] a graph @xmath12 is a proper interval graphs if and only if the third lexbfs@xmath3 sweep on @xmath12 is a pi - order",
    ".    [ concludepi ] if @xmath12 is a proper interval graph , algorithm [ transitive ] stops at @xmath167 .    by theorem",
    "[ 3sweep ] , we know that @xmath147 is a pi - order . using theorem [ properinterval ] , we conclude that algorithm [ transitive ] applied on a pi - order computes @xmath168 and @xmath169 .",
    "recall that every i - order is a cocomparability order , but the converse is not true . we next show that if @xmath12 is an interval graph , a 2-cycle is reached as soon as we have a cocomparability order of @xmath12 , that is not necessarily an i - order . in particular , if @xmath1 is a cocomparability order of @xmath12 , then @xmath170 .",
    "[ intervalstrongthm ] let @xmath12 be an interval graph , @xmath171 an arbitrary cocomparability order of @xmath12 and @xmath172 a sequence of lexbfs@xmath3 orderings where @xmath173",
    ". then @xmath174 .",
    "consider the following orderings : @xmath175    suppose , for sake of contradiction , that @xmath176 .",
    "let @xmath177 denote the index of the first ( left most ) vertex where @xmath128 and @xmath147 differ .",
    "in particular , let @xmath152 ( resp .",
    "@xmath87 ) denote the @xmath178 vertex of @xmath179 ( resp .",
    "@xmath180 ) .",
    "let @xmath35 denote the set of vertices preceeding @xmath152 in @xmath179 and @xmath87 in @xmath180 .",
    "since the ordering of the vertices of @xmath35 is the same in both @xmath179 and @xmath180 , and @xmath181 were chosen in different lexbfs orderings , it follows that @xmath182 in both @xmath128 and @xmath147 when both @xmath152 and @xmath87 were being chosen .",
    "therefore @xmath183 .",
    "so if @xmath152 were chosen before @xmath87 in @xmath128 then the @xmath3 rule must have been used to break ties between @xmath182 .",
    "this implies @xmath184 , similarly @xmath185 .",
    "the ordering of the pair @xmath181 is thus as follows : @xmath186 using the flipping lemma , it is easy to see that @xmath57 . since @xmath187",
    ", choose vertex @xmath88 as @xmath188",
    ". therefore @xmath189 and @xmath190 .    since @xmath171 is a cocomparability order , by theorem [ maintaincocomp ] , @xmath191 are cocomparability orderings . using the flipping lemma on the non - edge @xmath192",
    ", we have @xmath193 implies @xmath194 . therefore in @xmath171 , @xmath195 and @xmath190 . using the lexbfs 4pc ( theorem [ lbfscond ] ) ,",
    "there exists a vertex @xmath83 in @xmath171 such that @xmath196 and @xmath197 . by the lexbfs @xmath115 cocomparability property ( property [ c4cocomp ] ) ,",
    "@xmath198 and the quadruple @xmath199 forms a @xmath115 in @xmath12 , thereby contradicting @xmath12 being a chordal , and thus interval , graph .",
    "[ 2cycleinterval ] the 2-cycle conjecture holds for interval graphs .",
    "let @xmath12 be an interval graph .",
    "consider a sequence of orderings @xmath172 computed via a series of consecutive lexbfs@xmath3 on @xmath12 . by theorem [ insidecocomp ] ,",
    "there is a @xmath200 for which @xmath201 is a cocomparability order .",
    "the claim now follows from theorem [ intervalstrongthm ] .",
    "let @xmath202 be a cobipartite graph , where both @xmath105 and @xmath106 are cliques .",
    "notice that any ordering @xmath5 on @xmath67 obtained by first placing all the vertices of @xmath105 in any order followed by the vertices of @xmath106 in any order is a cocomparability ordering .",
    "in particular , such an ordering is precisely how any lexbfs cocomparability ordering of @xmath12 is constructed , as shown by lemma [ 2cliques ] below .",
    "we first show the following easy observation .",
    "[ adjcob ] let @xmath12 be a cobipartite graph , and let @xmath5 be a lexbfs cocomparability ordering of @xmath12 . in any triple of the form @xmath81 , either @xmath57 or @xmath116 .",
    "suppose otherwise , then if @xmath109 , we contradict @xmath5 being a cocomparability ordering , and if @xmath203 the the triple @xmath204 forms a stable set of size 3 , which is impossible since @xmath12 is cobipartite .",
    "[ 2cliques ] let @xmath12 be a cobipartite graph , and let @xmath205 be a lexbfs cocomparability ordering of @xmath12",
    ". there exists @xmath206 $ ] such that @xmath207 and @xmath208 are both cliques .",
    "let @xmath78 be the largest index in @xmath5 such that @xmath207 is a clique .",
    "suppose @xmath209 is not a clique , and consider a pair of vertices @xmath210 where @xmath211 and @xmath212 . by the choice of @xmath78 , vertex @xmath213 is not universal to @xmath207 . since @xmath5 is a lexbfs ordering , vertex @xmath214 is also not universal to @xmath207 for otherwise @xmath215 would be lexicographically greater than @xmath216 implying @xmath217 .",
    "unless @xmath218 , in which case it is obviously true .",
    "let @xmath219 be a vertex not adjacent to @xmath214 .",
    "we thus have @xmath220 and both @xmath221 . a contradiction to claim [ adjcob ] above .",
    "since cobipartite graphs are cocomparability graphs , by theorem [ insidecocomp ] , after a certain number @xmath222 iterations , algorithm _ repeated lexbfs@xmath3 _ @xcite yields a cocomparability ordering @xmath223 . by lemma [ 2cliques ] , this ordering consists of the vertices of one clique @xmath105 followed by another clique @xmath106 .",
    "assume @xmath224 is the ordering of @xmath223 ( the reason why the indices of @xmath106 are reversed will be clear soon ) . consider a @xmath225 matrix @xmath226 defined as follows :    @xmath227= \\begin{cases } & \\mbox{$1 $ if $ a_i b_j \\in e$}\\\\ & \\mbox{$0 $ otherwise } \\end{cases}\\ ] ]    the easy but crucial property that follows from the definition of lexbfs is the following : the columns of this matrix @xmath226 are sorted lexicographically in increasing order ( for any vectors of the same length @xmath228 and @xmath229 , lexicographic order is defined by @xmath230 if the least integer @xmath177 for which @xmath231 satisfies @xmath232 ) .",
    "consider @xmath233 , and notice that @xmath234 begins with the vertices of @xmath106 in the ordering @xmath235 followed by the vertices of @xmath105 which are sorted exactly by sorting the corresponding rows of @xmath226 lexicographically in increasing order ( the first vertex to appear after @xmath236 being the maximal row , that is the one we put at the bottom of the matrix ) .",
    "but then to obtain @xmath237 we just need to sort the columns lexicographically , and so on .",
    "therefore to prove the 2-cycle conjecture for cobipartite graphs , it suffices to show that this process must converge to a fixed point : that is , after some number of steps , we get a matrix such that both rows and columns are sorted lexicographically , which implies we have reached a @xmath238 cycle .",
    "this is guaranteed by the following lemma ( which we state for @xmath239 matrices , but is in fact true for any integer valued matrix ) :    [ matriceslem ] let @xmath240 be a matrix with @xmath241 entries . define a sequence of matrices @xmath242 as follows :    * @xmath243 * if @xmath78 is even , @xmath244 is obtained by sorting the rows of @xmath245 in increasing lexicographical order . *",
    "if @xmath78 is odd , @xmath244 is obtained by sorting the columns of @xmath245 in increasing lexicographical order .",
    "then there exists an @xmath123 such that @xmath246 .    for every @xmath123",
    ", we define a vector @xmath247 obtained by reading the entries of the matrix @xmath248 from left to right and top to bottom .",
    "we will prove that @xmath247 is never greater that @xmath249 with respect to lexicographical orderings .",
    "assume the first index for which @xmath247 and @xmath249 differ corresponds to the entry with coordinates @xmath250 in both matrices , and that it is equal to @xmath251 in @xmath249 and @xmath252 in @xmath253 .",
    "for a matrix @xmath240 , let @xmath254 denote the sub - matrix of @xmath240 induced by the first @xmath78 rows and @xmath255 columns .",
    "this implies , in particular , that the sub - matrices obtained from @xmath256 and @xmath257 are identical except for the entry @xmath258 $ ] .",
    "we consider the case when @xmath123 is even , the case of @xmath123 being odd being analogous . if @xmath123 is even , then @xmath257 was obtained from @xmath256 by sorting its rows in increasing lexicographical order .",
    "let @xmath228 be the last @xmath259 row of @xmath257 .",
    "then each row of @xmath240 which is lexicographically smaller than @xmath228 in the first @xmath255 coordinates are present in @xmath257 . however , the number of such rows in @xmath256 is one more than in @xmath257 ( the last row also being lexicographically smaller than @xmath228 ) , which is a contradiction .",
    "we conclude with the following corollary :    the 2-cycle conjecture is true for cobipartite graphs , and this loop is reached in less than @xmath260 lexbfs@xmath3 sweeps .      for this section ,",
    "it is handy to recall theorem [ maintaincocomp ] , which states if @xmath5 is a cocomparability ordering then lexbfs@xmath90 remains a cocomparability ordering .",
    "therefore all the orderings we are dealing with in this section are lexbfs cocomparability orderings .",
    "domino - free cocomparability graphs have a lexbfs@xmath3 2-cycle .",
    "suppose not , and let @xmath27 be a domino - free cocomparability graph .",
    "by corollary [ evenlength ] , @xmath12 must have a loop of even size .",
    "let @xmath9 be a lexbfs@xmath3 cycle with even @xmath261 .",
    "we know that such a cycle must exist since the number of lexbfs orderings of @xmath12 is finite . for two consecutive orderings of the same parity @xmath262\\mod k\\end{aligned}\\ ] ]",
    "let @xmath263 denote the index of the first ( left most ) vertex that is different in @xmath264 : @xmath265 } \\text { such that } u_j \\neq v_j \\text { , and for all } p < j : u_p = v_p\\end{aligned}\\ ] ]    using the cycle @xmath266 and @xmath267}$ ] , we  shift \" the start of the cycle to @xmath268 where @xmath269 is chosen as the @xmath1 with minimum @xmath263 .",
    "if there is a tie , we pick a random ordering @xmath1 of minimum @xmath263 to be the start of the cycle .",
    "@xmath270 , i \\neq j\\end{aligned}\\ ] ]    let @xmath271 be the first ( left most ) difference between @xmath272 . for @xmath273 , @xmath274 , and @xmath275 , we have @xmath276 and @xmath277 .",
    "thus @xmath278 and @xmath279    let @xmath280 , then @xmath281 = \\pi_3[s]$ ] .",
    "since @xmath152 was chosen in @xmath269 and @xmath87 in @xmath282 after the same initial ordering @xmath35 on both sweeps , it follows that at the time @xmath152 ( resp .",
    "@xmath87 ) was chosen in @xmath269 ( resp .",
    "@xmath282 ) , @xmath87 ( resp .",
    "@xmath152 ) had the same label , and thus @xmath182 at iteration @xmath255 in both @xmath272 .",
    "in particular @xmath283 .",
    "therefore when @xmath152 was chosen in @xmath269 , the @xmath3 rule was applied to break ties between @xmath152 and @xmath87 and so @xmath284 .",
    "similarly , we must have @xmath185 .",
    "we thus have @xmath285    since @xmath286 , choose vertex @xmath88 as @xmath287 . using the flipping lemma on @xmath87 and @xmath88 , we place vertex @xmath88 in the remaining orderings as follows @xmath288 this gives rise to a bad lexbfs triple in @xmath289 where @xmath290 and @xmath291 . by the lexbfs 4pc ( theorem [ lbfscond ] ) and the @xmath115 property ( property [ c4cocomp ] ) ,",
    "choose vertex @xmath83 as @xmath292 , @xmath198 .",
    "we again use the flipping lemma on @xmath293 to place @xmath83 in the remaining orderings @xmath294 in @xmath295 , the flipping lemma places @xmath296 , and by the choice of @xmath88 as @xmath297 , it follows that no private neighbour of @xmath87 with respect to @xmath152 could be placed before @xmath88 in @xmath295 .",
    "therefore we can conclude that @xmath298 .    it remains to place @xmath83 in @xmath269 and @xmath88 in @xmath282 .",
    "we start with vertex @xmath83 in @xmath269 . we know that @xmath299 .",
    "this gives rise to three cases : either * ( i ) * @xmath300 , or * ( ii ) * @xmath301 , or * ( iii ) * @xmath302 .    * ( i ) .",
    "* if @xmath303 then @xmath304 , so choose vertex @xmath305 as @xmath306 .",
    "this means @xmath307 , and since @xmath308 and @xmath309 , it follows that @xmath310 for otherwise if @xmath311 , @xmath309 contradicts @xmath295 being a cocomparability ordering .",
    "furthermore , by the choice of vertex @xmath88 as @xmath297 , and the facts that @xmath312 and @xmath310 , it follows that @xmath313 , otherwise @xmath305 would be a private neighbour of @xmath87 with respect to @xmath152 that is to the left of @xmath88 in @xmath295 . using the flipping lemma , we place vertex @xmath305 in the remaining orderings , and in particular , placing vertex @xmath305 in @xmath289 gives rise to a bad lexbfs triple @xmath314 . by the lexbfs 4pc , there must exist a vertex @xmath315 chosen as @xmath316 and @xmath317 . using the same argument above",
    ", one can show that @xmath318 and @xmath319 implies @xmath320 , and given the choice of @xmath83 in @xmath269 and @xmath320 , then @xmath321 .",
    "we therefore have the following induced domino @xmath322 . a contradiction to @xmath12 being domino - free .    *",
    "( ii ) . * if @xmath301 , then @xmath323 forms a bad lexbfs triple , and thus by theorem [ lbfscond ] , choose vertex @xmath324 as @xmath325 , therefore @xmath313 . by the @xmath115 property ( property [ c4cocomp ] ) ,",
    "since @xmath326 , it follows @xmath327 .",
    "but then @xmath328 implies @xmath329 when @xmath181 were chosen . a contradiction to @xmath283 .    *",
    "* we thus must have @xmath302 , in which case we still have a bad lexbfs triple given by @xmath330 in @xmath269 .",
    "choose vertex @xmath326 as @xmath331 . by property [ c4cocomp ] , @xmath311 , and since @xmath326 , it follows @xmath327 , and thus @xmath332 since @xmath333 . since @xmath281 = \\pi_3[s]$ ]",
    ", it follows that @xmath305 appears in @xmath282 in @xmath35 , and thus @xmath305 is the lmpn@xmath334 as well",
    ". therefore @xmath335 .",
    "the orderings look as follows : @xmath336 consider the ordering of the edge @xmath337 in @xmath338 .",
    "if @xmath339 , we use the same argument above to exhibit a domino as follows : if @xmath339 , then @xmath340 , so choose a vertex @xmath341 .",
    "therefore @xmath342 , and since @xmath319 and @xmath343 , it follows that @xmath344 as well otherwise we contradict @xmath289 being a cocomparability ordering .",
    "moreover , given the choice of vertex @xmath83 in @xmath289 as the lmpn@xmath345 and the fact that @xmath346 , it follows that @xmath347 as well .",
    "we then use the flipping lemma to place vertex @xmath348 in @xmath295 .",
    "this gives rise to a bad lexbfs triple @xmath349 in @xmath295 .",
    "choose vertex @xmath350 as @xmath351 .",
    "again , one can show that @xmath352 , and thus the @xmath115s @xmath353 are induced , therefore giving a domino ; a contradiction to @xmath12 being domino - free .",
    "therefore when placing the edge @xmath337 in @xmath338 , we must have @xmath354 .",
    "consider the first ( left most ) difference between @xmath338 and @xmath269 .",
    "let @xmath355 be the set of initial vertices that is the same in @xmath338 and @xmath269 . by the choice of @xmath269 as the start of the cycle @xmath268 , and in particular as the ordering with minimum diff@xmath356",
    ", we know that @xmath357 . since @xmath35 and @xmath355 are both initial orders of @xmath269 , it follows that @xmath358 , and the ordering of the vertices in @xmath35 is the same in @xmath355 in @xmath269 ; @xmath281 \\subseteq \\pi_1[s']$ ] .",
    "in particular vertex @xmath305 as constructed above appears in @xmath355 as the left most private neighbour of @xmath83 with respect to @xmath88 in @xmath269 , and thus in @xmath338 too vertex @xmath305 is lmpn@xmath359 .",
    "therefore @xmath360 , a contradiction to @xmath354 .",
    "notice that in all cases , we never assumed that @xmath361 .",
    "the existence of an element in @xmath35 was always forced by bad lexbfs triples .",
    "if @xmath35 was empty , then case * ( i ) * would still produce a domino , and cases * ( ii ) , ( iii ) * would not be possible since @xmath327 was forced by lexbfs .    to conclude ,",
    "if @xmath12 is a domino - free cocomparability graph , then it can not have a cycle of size @xmath261 , and thus must have a 2-cycle .",
    "the first thing to notice is that trees are not at - free graphs , and therefore not cocomparability graphs .",
    "consider for instance a claw where every edge is subdivided , this graph is a tree but contains an asteroidal triple .",
    "since trees are acyclic , it is easy to see that lexbfs and bfs orderings are equivalent on trees since no vertex gets assigned a label of size @xmath362 , and thus the interaction between private neighbours and cycles does not play a role for trees as it does for cocomparability graphs . in order to prove the conjecture for trees , we use the following old result of jordan from 1869 about diametral properties of bfs on trees .",
    "@xcite [ diamtree ] let @xmath363 be a tree , @xmath128 a bfs order of @xmath364 ending at vertex @xmath47 , and @xmath365 ending at vertex @xmath48 .",
    "the unique path from @xmath47 to @xmath48 in @xmath364 is a diametral path .",
    "similar to proper interval graphs , we show that trees reach a cycle relatively quickly , in particular an infinite sequence @xmath366 of bfs@xmath3 orderings will alternate between two orderings @xmath367 and @xmath147 .",
    "[ bfst ] let @xmath363 be a tree and @xmath368 be a sequence of consecutive bfs@xmath3 ordering of @xmath364 , then @xmath369 .",
    "let @xmath364 be a tree of diameter @xmath177 .",
    "by lemma [ diamtree ] the first and last vertices of @xmath367 can be labeled as @xmath370 and @xmath371 where @xmath372 is a diametral path .    for each vertex @xmath48 of @xmath364 , define @xmath373 if @xmath374 is the closest vertex of @xmath375 to @xmath48",
    ". in any bfs @xmath5 of @xmath364 starting with @xmath370 , vertices are partitioned into @xmath376 sets @xmath377 , where @xmath378 $ ] .",
    "it is easy to see that the vertices of every partition set @xmath379 appear consecutively in @xmath5 .",
    "we refine this ordering as follows : inside each partition set @xmath379 , order the vertices by increasing @xmath315-value .",
    "if @xmath380 and @xmath381 then @xmath53 , and if @xmath382 , we order @xmath52 arbitrarily .    consider a vertex @xmath374 and let @xmath383 be neighbours of @xmath374 not on @xmath375 , i.e. , @xmath384 ( with adjustment of indices when @xmath385 or @xmath386 ) .    in a bfs",
    "ordering , once @xmath374 is numbered then all the vertices in @xmath383 are labeled @xmath387 , and will receive no other label . furthermore , numbering one of these vertices in @xmath383 will have no effect on the label of any vertex whose label starts with @xmath388 .",
    "therefore , only a tie breaking rule can order vertices of @xmath383 in @xmath5 .",
    "let @xmath389 be the set of vertices at distance 2 from @xmath374 , and whose paths to @xmath374 go through vertices of @xmath383 .",
    "these vertices are partitioned in @xmath5 into consecutive groups based on the vertex connecting them to @xmath374 . inside each such group",
    ", again only a tie breaking rule can be used to order them .    in general , we define subsets of @xmath390 in a similar manner where a tie breaking rule is the only way to order vertices in @xmath390 .",
    "notice that if the tie breaking rule is the @xmath3 rule , then the ordering inside each @xmath391 is the reverse ( dual ) of the previous ordering .    with this observation in mind , our goal is to show that @xmath392 . to this end we first show that @xmath148 also starts with @xmath370 . that is to say that @xmath147 , which starts with @xmath371 , ends with @xmath370 . applying the previous discussion on @xmath147 , with @xmath367 fed to the @xmath3 rule",
    ", we observe that for the set of vertices at distance @xmath78 from @xmath371 , @xmath393 is the last vertex to be numbered . in particular , since @xmath177 is the diameter of @xmath364 , @xmath370 is the last vertex of @xmath147 and thus the first vertex of @xmath148 . hence the orders coincide unless , possibly , in places where a tie breaking rule is applied , but when induced on such sets @xmath367 and @xmath148 are both duals of @xmath147 , therefore they are identical .",
    "in this paper , we prove the existence of a fixed point , 2-cycle lexbfs , for a number of graph families including interval , cobipartite , domino - free cocomparability graphs and trees .",
    "we believe the 2-cycle conjecture holds for arbitrary cocomparability graphs .",
    "one good way towards proving the 2-cycle conjecture is to start by proving that _ @xmath177-ladder_-free cocomparability graphs have a 2-cycle for fixed values @xmath177 .",
    "we define a * @xmath177-ladder * to be an induced graph of @xmath177 _ chained _ @xmath115 .",
    "more precisely , a ladder is a graph @xmath394 where @xmath395 and @xmath396\\}$ ] , as illustrated in figure [ ladder ] below .",
    "notice that interval graphs are equivalent to @xmath252-ladder - free cocomparability graphs , and domino - free graphs are precisely @xmath238-ladder - free cocomparability graphs .",
    "therefore @xmath177-ladder - free cocomparability graphs are a good candidate towards proving a fixed point 2-cycle lexbfs for cocomparability graphs .",
    "we also raise the question of whether the 2-cycle conjecture holds for at - free graphs as well . using a result of @xcite on at - free graphs which shows that for any at - free graph with sufficiently large diameter , there exists two disjoint sets of vertices @xmath228 and @xmath229 such that a series of lexbfs@xmath3 sweeps goes back and from between @xmath228 and @xmath229 , i.e.",
    ", it starts from @xmath398 , ends at @xmath399 and vice versa , we get the following proposition :        moreover , if we denote by lexbfs@xmath401 the maximal length of the loop resulting from algorithm _ repeated lexbfs@xmath3 _ applied to @xmath12 , then a natural extension of the 2-cycle conjecture , also raised in @xcite , is :      below is an example of a chordal graph that has an asteroidal triple , and a cycle of size 3 , but if we remove the at @xmath403 , the remaining graph still has an at @xmath404 and the cycle size drops to 2 .",
    "\\(f ) at ( 0.5 , 1.5 ) ; ( y ) at ( 2 , 1.5 ) ; ( x ) at ( -1.5 - 0.25 , 0.5 ) ; ( a ) at ( -0.5 + 0.25 , 0.5 ) ; ( e ) at ( 0.5 + 0.75 , 0.5 ) ; ( b ) at ( -1 , -0.5 ) ; ( c ) at ( 0 + 0.5 , -0.5 ) ; ( d ) at ( 2 , -0.5 ) ; ( z ) at ( 1.25 , -1.5 ) ; /in f / y , f / a , f / e , y / e , a / e , a / x , a / b , a / c , e / c , x / b , b / c , c / d , e / d , c / d , c / z , d / z ( )  ( ) ;      _ a word on runtime for arbitrary cocomparability graphs _ : although the conjecture is still open for cocomparability graphs , experimentally one can show that the convergence happens relatively quickly , but not always as shown by a graph family @xmath406 we present below .",
    "the graph family , experimentally , takes @xmath407 lexbfs@xmath3 sweeps before converging .",
    "we describe an example in the family in terms of its complement , as it is easier to picture the graph , and the lexbfs traversals of the complement are easier to parse .",
    "let @xmath408 be a _ comparability _ graph on @xmath409 vertices , where both @xmath105 and @xmath106 are chains , i.e. @xmath410 , and the only edges in @xmath19 are of the form @xmath411 \\ }",
    "\\cup \\{(xy ) , ( yb_1)\\ } \\cup \\{(b_jb_{j+1 } ) : j \\in [ n-1]\\}$ ] .",
    "the initial comparability ordering is constructed by collecting the odd indexed vertices first , then the even indexed ones as follows :    * initially we start @xmath114 with @xmath412 . * in general ,",
    "if the last element in @xmath114 is @xmath413 and @xmath78 is odd , while @xmath78 is in a valid range , append @xmath414 to @xmath114 and repeat . *",
    "if @xmath123 is even , append @xmath415 to @xmath114 , otherwise append @xmath416 to @xmath114 . *",
    "again while @xmath78 is in a valid range , we append the even indexed vertices @xmath417 to @xmath114 . *",
    "append @xmath48 to @xmath114 .",
    "the ordering @xmath114 as constructed is a transitive orientation of the graph , and thus is a cocomparability ordering in the complement .",
    "we perform a series of lexbfs@xmath3 sweeps where @xmath418 lexbfs@xmath419 in the complement , i.e. the cocomparability graph",
    ".    every subsequent @xmath3 sweep will proceed to  gather \" the elements of @xmath105 close to each other , resulting in an ordering that once it moves to chain @xmath105 remains in @xmath105 until all its elements have been visited . an intuitive way to see why this must happen is to notice in the complement , the vertices of @xmath105 are universal to @xmath106 and thus must have a strong pull .",
    "experimentally , this 2-chain graph family takes @xmath407 lexbfs@xmath3 sweeps before converging .",
    "figure [ g6 ] below is an example for @xmath420 .",
    "_ other graph searches : _ one could raise a similar cycle question for different graph searches ; in particular , _ lexicographic depth search _ ( lexdfs ) .",
    "lexdfs is a graph search that extends dfs is a similar way to how lexbfs extends bfs - see algorithm [ lexdfsalg ] below .",
    "a graph @xmath27 and a start vertex @xmath74 an ordering @xmath5 of @xmath67 assign the label @xmath70 to all vertices , and @xmath422 pick an unnumbered vertex @xmath17 with lexicographically largest label @xmath76 prepend @xmath78 to @xmath77    lexdfs was introduced in @xcite , and has since led to a number of linear time algorithms on cocomparability graphs , including maximum independent set and hamilton path @xcite . in fact , these recent results have shown just how powerful combining lexdfs and cocomparability orderings is .",
    "it is therefore natural to ask whether a sequence of lexdfs orderings on cocomparability graphs reaches a cycle with nice properties .",
    "unfortunately , this is not the case as shown by the example below , where @xmath12 is a cocomparability graph as witnessed by the following cocomparability ordering @xmath423 , however doing a sequence of lexdfs@xmath3 on @xmath12 cycles before we reach a cocomparability ordering , and the cycle has size four .",
    "we conclude by raising the natural question of whether the two orderings , witnessing the 2-cycle , can be used to come up with solutions and algorithms for other graph problems .",
    "multi - sweep algorithms have led to a number of elegant , often easy to implement , and efficient algorithms for various graph classes .",
    "often , the structure collected from the many sweeps helps expose the useful properties of the graph class ; this structure is now captured with these fixed point results .",
    "+ * aknowledgements : * the authors wish to thank jrmie dusart and derek corneil for helpful discussions on this subject .",
    "dieter kratsch and ross m. mcconnell and kurt mehlhorn and jeremy p. spinrad : certifying algorithms for recognizing interval graphs and permutation graphs .",
    "proceedings of the fourteenth annual acm - siam symposium on discrete algorithms , 158167 ( 2003 )        michel habib and ross m. mcconnell and christophe paul and laurent viennot : lex - bfs and partition refinement , with applications to transitive orientation , interval graph recognition and consecutive ones testing .",
    "234 , 5984 ( 2000 )                          dragan , feodor f and nicolai , falk and brandstdt , andreas : lexbfs - orderings and powers of graphs .",
    "proceedings of the international workshop on graph - theoretic concepts in computer science , 166180 ( 1996 )"
  ],
  "abstract_text": [
    "<S> graph searching , a mechanism to traverse a graph in a specific manner , is a powerful tool that has led to a number of elegant algorithms . </S>",
    "<S> this paper focuses on lexicographic breadth first search ( lexbfs ) ( a variant of bfs ) introduced in @xcite to recognize chordal graphs . </S>",
    "<S> since then , there has been a number of elegant lexbfs based , often _ </S>",
    "<S> multi - sweep _ , algorithms . </S>",
    "<S> these are algorithms that compute a sequence of lexbfs orderings @xmath0 , and use @xmath1 to break ties when computing @xmath2 . </S>",
    "<S> the tie - breaking rule is often referred to as a @xmath3 rule , and the graph search as lexbfs@xmath3 . </S>",
    "<S> we write lexbfs@xmath4 .    in this paper , we prove that lexbfs converges for a number of graph families , including interval graphs , cobipartite graphs , trees , and domino - free cocomparability graphs . </S>",
    "<S> in particular , we prove a fixed point theorem for lexbfs that shows the existence of two orderings @xmath5 and @xmath6 where lexbfs@xmath7 and lexbfs@xmath8 . a consequence of this result , in particular , is the simplest algorithm to compute a transitive orientation for these graph classes , as well as providing a unified view of the linear structure seen on various graph families . </S>",
    "<S> in addition to this algorithmic consequence , we provide fixed point theorems for proper interval , interval , cobipartite , and domino - free cocomparability graphs , as well as trees . </S>",
    "<S> these are the first non - trivial results of this kind . </S>"
  ]
}
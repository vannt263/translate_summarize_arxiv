{
  "article_text": [
    "in a famous paper  @xcite , razborov and rudich introduced the concept of a _ natural combinatorial property _ of a boolean function .",
    "they showed on the one hand that almost all lower bounds in circuit complexity theory proved up to that time ( specifically , all non - relativizing , non - monotone , superlinear lower bounds ) had employed natural properties , and on the other hand that natural properties can not be used to separate @xmath0 from @xmath1 unless @xmath5-hard pseudorandom number generators do not exist .",
    "their result is widely regarded as a serious barrier to proving strong circuit lower bounds .    in more detail ,",
    "if @xmath6 and @xmath7 are complexity classes , then razborov and rudich say that a property of boolean function on @xmath8 variables is _",
    "@xmath6-natural of density  @xmath9 and useful against  @xmath7 _ if ( roughly speaking ) the property is @xmath6-computable ( from the truth table of a given boolean function ) , if it holds for @xmath10 boolean functions , and if it contains no @xmath7-computable boolean functions .",
    "they showed that if @xmath11 and @xmath12 , then no such properties exist unless @xmath5-hard pseudorandom number generators do not exist .",
    "informally , if a property is _ constructive _",
    "( @xmath6 is sufficiently weak ) and _ large _",
    "( @xmath9 is sufficiently large ) , then it is not likely to be useful for proving strong circuit lower bounds .",
    "it follows that if we believe in hard pseudorandom number generators but still wish to prove circuit lower bounds , then we are led to ask just _ how _ non - constructive and/or small a property needs to be in order to circumvent the so - called `` naturalization barrier . ''",
    "rudich  @xcite has shown that if we allow ourselves to assume a stronger pseudorandomness hypothesis , then the naturalization barrier remains intact even if constructivity is weakened to @xmath13-constructivity .",
    "on the other hand , as pointed out by a referee of the focs 2008 extended abstract of this paper , for any fixed  @xmath14 there are properties computable in time @xmath15 that are useful against circuits of size @xmath16 ( simply use brute - force search ) .    in this paper",
    "we investigate the weakening of the largeness condition .",
    "the main result is that under the same @xmath5-hard pseudorandomness assumption of the original razborov  rudich paper , we can explicitly exhibit a nearly - linear - natural property that separates @xmath1 from @xmath2 and whose density is @xmath3 where @xmath4 is a quasi - polynomial function ( whose degree depends on @xmath17 and on the size of the pseudorandom number generator ) .",
    "of course , the pseudorandomness hypothesis trivially implies the existence of constructive properties that separate @xmath1 from @xmath2 ; for example , simply take an explicit family of @xmath1-complete boolean functions .",
    "however , this latter family has density @xmath18 for some function @xmath19 that grows exponentially ; this is far smaller than  @xmath3 .",
    "the main idea of our proof is to exploit the _ self - defeating nature _ of natural proofs .",
    "assume that natural , useful properties do not exist ( for example , by assuming that @xmath5-hard pseudorandom number generators exist and invoking razborov ",
    "this means that every attempt to find a natural property that discriminates nonconstructive functions from constructive ones fails .",
    "the key observation is that _ a natural property is itself just a constructive function _ ( a constructive function of a truth table , that is , but a truth table is just an arbitrary binary string ) .",
    "therefore we have identified a feature that every constructive function has : it is no good at discriminating nonconstructive functions from constructive ones .",
    "so if we consider the property of _ discrimination _ , i.e. , the ability to distinguish nonconstructive functions from constructive ones , then _",
    "discrimination is a useful property .",
    "_ on the other hand , it is easy to prove unconditionally that discrimination is almost large , and that discrimination is constructive .",
    ", whether @xmath20 is a discriminating function .",
    "] moreover , one can explicitly describe an @xmath1 function that is discriminating , so discrimination separates @xmath1 from @xmath2 .",
    "this is our main result .",
    "the key point is that it is the very assumption that natural , useful properties do not exist that yields a useful property .",
    "one can ask whether the above line of reasoning can be used to prove an _ unconditional _ result , just as avi wigderson adapted razborov and rudich s argument to prove unconditionally that there is no natural proof that the discrete logarithm problem is hard . indeed , this is possible , as we show below .",
    "it turns out , however , that this unconditional result can be proved using a direct counting argument .",
    "we hope that these results will give some insight into how to bypass the naturalization barrier .",
    "if @xmath5-hard pseudorandom number generators do not exist , then of course the naturalization barrier evaporates . on the other hand , if such generators _ do _ exist , then our results show that there exists at least one property ( namely , discrimination ) that separates @xmath1 from @xmath2 and that is both constructive and  as we shall see shortly  only a minor alteration of a random property .",
    "we write @xmath21 for the positive integers , and our logarithms are always base  @xmath22 . all gates in our boolean circuits",
    "are assumed to have just two inputs .",
    "we use the notation @xmath23 to denote a sequence @xmath24 , and whenever we refer to a sequence @xmath25 of boolean functions , we always understand that @xmath26 is a function of  @xmath8 variables . given a function @xmath27 , we write @xmath28 to denote the complexity class comprising all sequences @xmath25 of boolean functions for which there exists a constant  @xmath29 such that the minimum circuit size of  @xmath26 is at most @xmath30 for all sufficiently large  @xmath8",
    ". the following definition will also be convenient .    given two functions @xmath31 and @xmath27 , we say that _ @xmath32 outstrips  @xmath33 _ if for every constant @xmath34 there exists @xmath35 such that @xmath36 for all @xmath37 .",
    "that is , @xmath32 eventually grows _ strictly _ faster than any constant times  @xmath33 .",
    "now let us review some fundamental concepts from  @xcite .",
    "a _ boolean function property _ ( or just _ property _ for short ) is a sequence @xmath38 where each @xmath39 is a set of boolean functions on @xmath8 variables .",
    "if @xmath6 is a complexity class and @xmath40 is a sequence of positive real numbers , then a property @xmath41 is _",
    "@xmath6-natural with density  @xmath9 _ if    1 .",
    "( largeness ) @xmath42 for all sufficiently large  @xmath8 ; and 2 .",
    "( constructivity ) the problem of determining whether @xmath43 , given as input the full truth table of a boolean function @xmath26 on @xmath8 variables , is computable in  @xmath6 .",
    "note that our definition of _ natural _ differs slightly from that of razborov and rudich ; for them , a natural property is one which _ contains _ a large and constructive property .",
    "this difference will do no harm , because our results assert the _ existence _ of certain natural properties in our sense , and a property that is natural in our sense is also natural in razborov and rudich s sense .    later on we will be particularly interested in the case of _ nearly - linear - natural _ properties , which we define to mean @xmath44 for some constant  @xmath29 . here",
    "we have used an uppercase  @xmath45 to emphasize that `` nearly linear '' means nearly linear in  @xmath46 , the size of the truth table of  @xmath26 .",
    "next we recall the definition of a _ useful _ property .",
    "if @xmath7 is a complexity class , then a property @xmath41 is _ useful against @xmath7 _ if for every sequence @xmath25 of boolean functions satisfying @xmath43 for infinitely many  @xmath8 , @xmath47 .    for our purposes",
    "we also need a slightly weaker notion , which we shall call _ quasi - usefulness_.    if @xmath7 is a complexity class , then a property @xmath41 is _ quasi - useful against @xmath7 _ if for every sequence @xmath25 of boolean functions satisfying @xmath43 for all sufficiently large  @xmath8 , @xmath47 .",
    "the difference between usefulness and quasi - usefulness is that there may be infinitely many  @xmath8 for which a quasi - useful property is easy to compute , whereas this can not happen for a useful property .",
    "however , a quasi - useful property retains the important characteristic of not containing any @xmath7-computable sequence of boolean functions .",
    "so for the purpose of separating @xmath7 from a higher complexity class , quasi - usefulness suffices .",
    "note that the only reason we introduce quasi - usefulness is to handle the slightly annoying technicality that the length of a truth table is not an arbitrary integer but is always a power of two . an alternative way around this technicality might be to pad out strings whose lengths are not powers of two .",
    "fix @xmath48 .",
    "a family of functions @xmath49 is a _",
    "@xmath5-hard pseudorandom number generator _",
    "if for every circuit  @xmath50 with fewer than @xmath5 gates , @xmath51 -     \\mathrm{prob}[c(\\mathbf{y } ) = 1 ] \\right| < 1/2^{n^\\epsilon}.\\ ] ] here @xmath52 is chosen at random from @xmath53 and @xmath54 is chosen at random from @xmath55 .",
    "we are now ready for razborov and rudich s fundamental result .",
    "we need a slightly stronger version of the theorem than the one that appears in their paper .",
    "[ thm : rr ] fix @xmath56 , @xmath57 , and @xmath58 .",
    "assume that there exists a @xmath59-hard pseudorandom number generator  @xmath60 in @xmath61 .",
    "then for any @xmath62 , there is no @xmath2-natural property with density greater than  @xmath63 that is useful against @xmath64 .    only minor changes to razborov and rudich s argument are needed , but for completeness we give a full proof .",
    "choose any @xmath65 .",
    "we use our pseudorandom _ number _ generator  @xmath66 to construct a pseudorandom _ function _ generator  @xmath20 . for every @xmath67 ,",
    "let @xmath68 be the first and last @xmath14 bits of @xmath60 respectively .",
    "for the rest of the proof , we will write @xmath8 for @xmath69 . for any @xmath14-bit string",
    "@xmath70 , let @xmath71 be the boolean function that sends @xmath72 to the first bit of @xmath73 we claim that the family of functions @xmath74 is in @xmath64 .",
    "this is because @xmath60 is in @xmath75 , and it is straightforward to build a circuit for @xmath71 using @xmath8 copies of  @xmath60 ( with the @xmath76th bit of the input dictating which half of the @xmath76th copy of @xmath60 to use ) .",
    "now assume towards a contradiction that there exists a @xmath2-natural property @xmath41 with density at least  @xmath63 that is useful against @xmath64 .",
    "then for all sufficiently large  @xmath14 , none of the functions @xmath71 are in  @xmath39 .",
    "therefore if @xmath77 denotes a randomly chosen boolean function on @xmath8 variables and @xmath52 denotes a randomly chosen @xmath14-bit string , then @xmath78 -     \\mathrm{prob}[c_n(\\mathbf{f}_n ) = 1 ] \\right| \\ge 2^{-n^d}.\\ ] ]    equation  ( [ eq : randtest ] ) gives us a statistical test for @xmath79 , which we now convert into a statistical test for  @xmath60 .",
    "let @xmath80 be a binary tree of height  @xmath8 , having @xmath81 internal nodes and @xmath82 leaves .",
    "construct a labeling @xmath83 of the nodes of  @xmath80 by labeling the leaves with ( distinct ) @xmath8-bit binary strings and labeling the internal nodes with ( distinct ) numbers @xmath84 to  @xmath81 in such a way that if @xmath85 and  @xmath86 are internal nodes and @xmath85 is a child of  @xmath86 , then @xmath87 .",
    "if @xmath88 is a leaf of  @xmath80 , then let @xmath89 denote the @xmath90th bit of  @xmath91 . for @xmath92 ,",
    "let @xmath93 be the subforest of  @xmath80 induced by the set of internal nodes  @xmath86 with @xmath94 , together with all the leaves .",
    "if @xmath88 is a leaf of  @xmath80 , then let @xmath95 be the root of the subtree of  @xmath93 containing  @xmath88 , and let @xmath96 be the distance between @xmath95 and  @xmath88 ( so for example @xmath97 if @xmath98 )",
    ".    now define independent random variables @xmath99 , one for each node @xmath86 of  @xmath80 , and each chosen uniformly from @xmath100 .",
    "define a random collection @xmath101 by letting @xmath102 ( for a leaf  @xmath88 of",
    "@xmath80 ) be the first bit of @xmath103 then @xmath104 is @xmath77 and @xmath105 is @xmath79 , so equation  ( [ eq : randtest ] ) implies that for some  @xmath76 , @xmath106 -     \\mathrm{prob}[c_n(\\mathbf{f}_{i , n } ) = 1 ] \\right|    \\ge 2^{-n^d}\\!/2^n \\ge 2^{-2n^d},\\ ] ] since @xmath107 .",
    "there must exist some assignment of the values of the @xmath99 for all roots  @xmath86 of subtrees of @xmath93 except the root @xmath85 with @xmath108 , such that equation  ( [ eq : bias ] ) still holds when conditioned on this assignment . by fixing such an assignment",
    ", we obtain a statistical test that distinguishes between @xmath109 and @xmath110 , where @xmath111 and @xmath112 are the children of  @xmath85 , and that can be computed by circuits of size @xmath113 ( because @xmath114 ) .",
    "but this contradicts the @xmath59-hardness of  @xmath60 , because for all sufficiently large  @xmath14 , @xmath115 is larger than @xmath116 and also larger than any constant times  @xmath8 .",
    "finally , we need some estimates for the size of @xmath117 , the number of boolean functions of @xmath8 variables that can be computed by boolean circuits with at most @xmath118  gates .",
    "the upper bound is due essentially to shannon , though the version we quote here is lemma  2.1 in  @xcite .    [ prop : shannon ] for all @xmath119 and @xmath120 , @xmath121 .    for the proof of theorem  [ thm : counting ]",
    ", we will also need a lower bound on @xmath122 .",
    "this result is somewhat technical and is not needed for the proofs of theorem  [ thm : main ] or theorem  [ thm : nonunif ] , so the reader can skip to section  [ sec : main ] now without loss of continuity , returning to the lemmas below when needed .",
    "we need a couple of facts about binomial coefficients .",
    "these facts are well known to experts , but for completeness we give the proofs .",
    "the first fact is an elementary large - deviation result .",
    "[ lem : largedev ] if @xmath123 , then there is a constant @xmath124 ( depending on @xmath17 but not on @xmath45 or  @xmath14 ) such that @xmath125    let @xmath126 denote the sum on the left - hand side of  ( [ eq : largedev ] ) .",
    "the ratio between consecutive terms in  @xmath126 is @xmath127 , and since @xmath128 , it follows that @xmath129 the right - hand side of  ( [ eq : estimate ] ) is bounded by some constant strictly less than one .",
    "therefore @xmath126 is bounded by a convergent geometric series , and this proves the lemma .    [ lem : lognchoosek ] assume that @xmath130 . if @xmath131 , then @xmath132 .    as the proof below makes clear , lemma  [ lem : lognchoosek ]",
    "remains true if we replace `` @xmath133 '' by `` @xmath134 , '' provided we replace `` @xmath135 '' by a suitable constant times  @xmath45 and require that @xmath45 be sufficiently large .",
    "we do not need this extra generality , so we have stated lemma  [ lem : lognchoosek ] with specific constants to make it easier to read .",
    "if @xmath136 then the result is trivial , so assume that @xmath137 .",
    "let @xmath138 be the entropy function .",
    "the basic reason why the lemma is true is that @xmath139 .",
    "more precisely , by stirling s approximation , @xmath140 so if @xmath131 , then @xmath141 the expression @xmath142 is minimized when @xmath143 , and by elementary calculus we find that @xmath144 is minimized when @xmath145 ( remember that in this paper , our logarithms are base  2 ) . therefore , provided @xmath146 , @xmath147 it follows that if @xmath146 , @xmath148 as desired .",
    "if @xmath149 , then the lemma can be checked by direct computation .",
    "now we are ready to prove a lower bound on  @xmath122 .",
    "[ prop : psibound ] let @xmath150 be a function such that @xmath151 and such that @xmath152 outstrips @xmath153 .",
    "then for any fixed  @xmath154 , @xmath155 for all sufficiently large  @xmath8 .",
    "let @xmath156 .",
    "we are trying to find a lower bound on how many more boolean functions we can compute with @xmath152 gates than we can compute with only @xmath157 gates .",
    "our main observation is that by using @xmath158 extra gates , we can change any single entry of the truth table of any given boolean circuit : simply use the @xmath158 gates to test if the input equals a specific @xmath8-bit value , and flip the output of the circuit if it does .    if @xmath159 denotes the set of truth tables of functions computable with at most @xmath157 gates",
    ", then our main observation implies that if we are allowed up to @xmath160 gates , then at minimum we can also compute all the functions on the _ boundary _ @xmath161 of  @xmath159 , i.e. , the truth tables whose hamming distance from  @xmath159 is  @xmath84 .",
    "we know very little about the structure of  @xmath159 , but we do have an estimate of its volume , so we can obtain a lower bound on the size of its boundary by appealing to a discrete isoperimetric inequality . in particular , it follows from standard results , but this can be converted into an inequality for @xmath161 as follows .",
    "in the notation of bezrukov s paper , we may assume that @xmath159 is an optimal set  @xmath162 for some  @xmath163 .",
    "then the radius-@xmath164 hamming ball @xmath165 , so if we let @xmath166 , it follows that as long as @xmath167 , @xmath168 on the other hand , @xmath169 so @xmath170 . ]",
    "that if we choose @xmath14 so that @xmath171 then @xmath172 . we claim that there is some constant  @xmath29 such that @xmath173 for all large  @xmath8 . to see this , note that since @xmath174 , proposition  [ prop : shannon ] implies that for large  @xmath8 , @xmath175 but ( [ eq : b ] ) yields the lower bound @xmath176 , so by lemma  [ lem : lognchoosek ] , @xmath132",
    "this fact , together with the upper bound on  @xmath177 given by  ( [ eq : b ] ) , implies ( by lemma  [ lem : largedev ] ) that @xmath177 is bounded by a constant times @xmath178 . since @xmath172",
    ", our claim is proved .",
    "so when an additional @xmath158 gates are allowed , the number of computable functions is multiplied by at least some constant factor  @xmath179 .",
    "now in fact we have @xmath157 additional gates at our disposal , and @xmath157 outstrips @xmath153 , so the multiplicative factor is greater than @xmath180 for any constant  @xmath29 , and this eventually grows faster than @xmath181 for any fixed  @xmath154 .",
    "[ thm : main ] assume that , for some @xmath48 , there exists a @xmath5-hard pseudorandom number generator  @xmath66 in @xmath2 .",
    "then there exists a quasi - polynomial function  @xmath4 and a nearly - linear - natural property of density  @xmath182 separating @xmath1 from @xmath2 .",
    "in fact , as will be apparent from the proof , the property we exhibit contains functions that are probably not @xmath1-hard , so our separation is actually stronger than @xmath183 .",
    "the main tool in our proof of theorem [ thm : main ] is the following concept .",
    "given @xmath31 , we define a boolean function @xmath20 on @xmath8 variables to be _ @xmath32-discriminating _ if either of the following two conditions holds :    1 .",
    "@xmath8 is not a power of  @xmath22 .",
    "2 .   @xmath184 for some @xmath163 and 1 .",
    "@xmath185 for at least @xmath186 values of ( the @xmath8-digit binary string )  @xmath70 , and 2 .",
    "@xmath187 if @xmath70 is the truth table of a boolean function on @xmath163 variables that is computable by a boolean circuit with at most @xmath188 gates .",
    "if we let @xmath189 be the set of all @xmath32-discriminating boolean functions on @xmath8 variables , then @xmath190 is a boolean function property that we shall call _ @xmath32-discrimination .",
    "_    the following easy lemma shows that @xmath32-discrimination is constructive , and gives a lower bound on its density .",
    "[ lem : discrim ] let @xmath191 be a time - constructible function satisfying @xmath192 for all  @xmath163 .",
    "then @xmath32-discrimination is a nearly - linear - natural property with density  @xmath193 .",
    "let @xmath8 denote the number of variables of our boolean functions .",
    "if @xmath8 is not a power of  @xmath22 then the lemma is trivial , so assume that @xmath184 .",
    "first we note that , since @xmath192 , it is easy to deduce from proposition  [ prop : shannon ] that the number of boolean circuits with @xmath163 inputs and at most @xmath188 gates is much less than @xmath194",
    ".    let us check constructivity . to verify that a given truth table is the truth table of a @xmath32-discriminating function",
    ", we must check that the fraction of entries equal to  @xmath84 is at least @xmath195 , and we must also check that the entries indexed by truth tables of functions computable by circuits with at most @xmath188 gates are  @xmath196 . let @xmath46 be the size of the truth table . counting  @xmath84",
    "s clearly takes time that is nearly linear in  @xmath45 , but to check the forced  @xmath196 s we must first compute @xmath188 , then run through each possible boolean circuit in turn , computing its @xmath8 truth table values , and checking that the corresponding entry of the given truth table is  @xmath196 . since @xmath32 is time - constructible , computing @xmath188 takes time @xmath197 , so evaluating @xmath32 at @xmath198 takes time at most polylogarithmic in  @xmath45 .",
    "enumerating all the circuits is a straightforward process , and the total number of circuits to be enumerated is at most  @xmath45 , so the entire computation takes time at most @xmath45 multiplied by some factors that are polylogarithmic in  @xmath45 .",
    "it remains to estimate the density .",
    "if we were to ignore condition 2(a ) in the definition of a @xmath32-discriminating function , then we would simply be counting functions that must be  @xmath196 in certain positions and are unrestricted otherwise , so the total number of functions on @xmath8 variables would be precisely @xmath199 . from this we can get a lower bound for the true number of @xmath32-discriminating functions by subtracting off the total number of boolean functions on @xmath8 variables whose truth tables have at most @xmath186 entries equal to  @xmath84 .",
    "this latter quantity is @xmath200 by lemma  [ lem : largedev ] , @xmath201 where the second equality is a routine application of stirling s approximation .",
    "it follows that for some constant  @xmath29 , the number of @xmath32-discriminating functions is at least @xmath202 again , @xmath203 is vanishingly small compared to @xmath194 , so the density is indeed eventually lower - bounded by a constant times @xmath204 .",
    "we are now ready for the proof of our main result .    by hypothesis ,",
    "there exists @xmath205 such that the pseudorandom number generator  @xmath60 is in @xmath206 .",
    "choose some number @xmath207 , and let @xmath32 be the function @xmath208 .",
    "then we claim that the desired property is simply @xmath32-discrimination .    by lemma  [ lem : discrim ] we know that @xmath32-discrimination is nearly - linear - natural with density @xmath193 .",
    "since @xmath32 is a polynomial function , proposition  [ prop : shannon ] implies that this density is indeed @xmath182 for some quasi - polynomial  @xmath4 .",
    "we next show that @xmath32-discrimination is quasi - useful against @xmath2 .",
    "given @xmath209 , define the property @xmath210 by letting a function with truth table  @xmath70 be in @xmath211 if and only if @xmath212 . since @xmath20 is a @xmath32-discriminating function , it follows that @xmath210 is useful against @xmath213 and that @xmath210 has density @xmath214 .",
    "invoking theorem  [ thm : rr ] with @xmath215 , we see that @xmath210 can not be @xmath2-constructive . in other words , @xmath216 , which means that @xmath32-discrimination is indeed quasi - useful against @xmath2 .",
    "finally , let @xmath25 be the sequence of @xmath32-discriminating functions that are  @xmath196 only when forced to be by condition 2(b ) and that are  @xmath84 otherwise .",
    "then @xmath25 is in @xmath1 , in the sense that the language @xmath217 defined by @xmath218 is in @xmath1 .",
    "is in co-@xmath1 , but since we could have chosen to interchange the roles of @xmath196 and  @xmath84 in the definition of @xmath32-discrimination , this distinction is of no importance . ]",
    "the reason is that , for @xmath8 a power of  @xmath22 , a boolean circuit with truth table  @xmath70 is a certificate for membership in  @xmath217 , and such a circuit has size @xmath219 , which is polynomial ( even polylogarithmic ) in  @xmath8 , the size of  @xmath70 .",
    "this completes the proof .",
    "note that as we remarked earlier , @xmath25 is almost certainly not @xmath1-complete , so that we have actually separated @xmath2 from a subclass of  @xmath1 .",
    "as we remarked in the introduction , the idea behind the proof of theorem  [ thm : main ] can be adapted to prove a non - uniform version of the result that has no unproven hypotheses .",
    "now , it turns out that this unconditional result can also be proven by a counting argument that does not use any self - reference .",
    "since the two arguments are very different in flavor , we present both of them below .    first we need a non - uniform version of lemma  [ lem : discrim ] .",
    "[ lem : nonunif ] let @xmath191 be a function satisfying @xmath192 for all  @xmath163 . then @xmath32-discrimination is a non - uniformly linear - natural property with density  @xmath193 .",
    "when we say `` non - uniformly linear - natural property , ''",
    "we of course mean that membership can be decided by circuits whose size is linear in the size of the truth table .",
    "the proof is the same as the proof of lemma  [ lem : discrim ] except when it comes to @xmath6-constructivity .",
    "let @xmath184 denote the number of variables of our boolean functions . as we said before , to verify that a given truth table is the truth table of a @xmath32-discriminating function , we must check that the fraction of entries equal to  @xmath84 is at least @xmath195 , and we must also check that the entries indexed by truth tables of functions computable by circuits with at most @xmath188 gates are  @xmath196 . let @xmath46 be the size of the truth table .",
    "we can count the number of  @xmath84 s using @xmath220 gates , for example by using carry - save addition  @xcite . also",
    ", for each @xmath8 , the set of truth table entries that must be  @xmath196 is fixed , so this condition can be checked using a number of gates that is proportional to the number of forced  @xmath196 s ( even if @xmath32 is not time - constructible ) ; this number is certainly @xmath220 .",
    "[ thm : nonunif ] let @xmath221 be functions such that @xmath32 outstrips @xmath33 and such that @xmath222 for all  @xmath163 .",
    "let @xmath223 and let @xmath224 .",
    "then there exists a @xmath6-natural property  @xmath41 with density @xmath193 that is quasi - useful against @xmath7 .",
    "we argue by contradiction .",
    "assume , as a reductio hypothesis , that there is no @xmath6-natural property  @xmath210 with density @xmath225 that is quasi - useful against @xmath7 .",
    "then we claim that @xmath32-discrimination is quasi - useful against  @xmath7 .    to see this , pick an arbitrary sequence of functions @xmath226 .",
    "define a property @xmath210 by letting a function of @xmath163 variables with truth table  @xmath70 be in  @xmath211 if and only if @xmath227 .",
    "then by condition  2(a ) in the definition of a @xmath32-discriminating function , @xmath210 has density @xmath214 . by assumption , @xmath228 , and it is easy to see that there are more than @xmath163 distinct boolean functions computable with @xmath229 gates and @xmath229 inputs , so the density of  @xmath210 is @xmath225 . by condition  2(b ) , if @xmath230 is any sequence of boolean functions , then the minimum circuit size of  @xmath231 exceeds  @xmath188 , and hence @xmath232 since @xmath32 outstrips  @xmath33 .",
    "in other words , @xmath210 is quasi - useful ( in fact , useful ) against  @xmath7 .",
    "therefore , by our reductio hypothesis , membership in @xmath210 is not @xmath6-computable .",
    "it follows that @xmath233 , and a fortiori @xmath234 .",
    "therefore @xmath25 is quasi - useful against  @xmath7 , as claimed .",
    "but since @xmath235 , lemma  [ lem : nonunif ] tells us that @xmath236 is @xmath6-natural with density @xmath193 .",
    "combined with the quasi - usefulness against  @xmath7 that we just proved , this fact contradicts our reductio hypothesis , so the theorem is proved .",
    "observe that a curious feature of the above proof is that it is highly ineffective .",
    "the natural property whose existence is asserted is not explicitly exhibited , nor can an explicit example be extracted from the proof , which is intrinsically a proof by contradiction .",
    "note also that a @xmath237-natural property is not necessarily `` constructive '' in the intuitive sense even if @xmath32 is polynomial , because @xmath237 is a _ non - uniform _ complexity class .",
    "nevertheless , we feel that theorem  [ thm : nonunif ] remains of some interest because it is an unconditional result .",
    "next we present the promised counting argument , which in fact yields a stronger result than theorem  [ thm : nonunif ] .",
    "[ thm : counting ] let @xmath221 be functions such that @xmath238 , @xmath32 outstrips @xmath33 , and @xmath151 for all  @xmath8 .",
    "let @xmath224 .",
    "then there exists a non - uniformly linear - natural property with density at least @xmath239 that is useful against  @xmath7 .",
    "let us first give a somewhat informal proof that conveys the essential idea .",
    "let @xmath240 .    as usual , think of boolean functions on @xmath8 variables as represented by their truth tables .",
    "let @xmath241 be the set of boolean functions on @xmath8 variables computable by circuits of size  @xmath157 .",
    "for each @xmath242 , imagine a hamming ball of volume @xmath243 centered at  @xmath118 ( by a _ hamming ball centered at  @xmath118 _ we mean the set of all boolean functions within a certain hamming distance from  @xmath118 ) .",
    "there are @xmath244 such balls , so the total volume of these balls is less than @xmath245 .",
    "therefore there must exist a function  @xmath26 outside all of these balls .",
    "it follows that there is a hamming ball  @xmath246 of volume @xmath243 around  @xmath26 that is disjoint from  @xmath241 .",
    "then since @xmath32 outstrips @xmath33 , @xmath247 is a property that is useful against  @xmath7 .",
    "its density is @xmath239 .",
    "moreover , testing for membership in @xmath246 amounts to computing hamming distance from  @xmath26 , which can be done with circuits of linear size .",
    "this completes the informal proof .",
    "the only point that is not entirely rigorous is the assumption that there exists a hamming ball whose volume is exactly @xmath243 ; this may not be true because the volume of a hamming ball is necessarily a sum of consecutive binomial coefficients . for a rigorous argument",
    ", we choose our hamming balls to have radius  @xmath248 , where @xmath248 is chosen so that @xmath249 where we have abbreviated @xmath250 to @xmath251 to ease notation .",
    "then the property of being in  @xmath246 certainly has density at least @xmath252 , so all that needs to be checked is that @xmath253 such hamming balls have total volume strictly less than  @xmath245 , i.e. , that @xmath254 to prove this , observe that we just need to show that the ratio @xmath255 is bounded by a polynomial function of  @xmath8 , because then ( [ eq : totalvolume ] ) will follow from ( [ eq : hamming ] ) and proposition  [ prop : psibound ] .",
    "now @xmath256 so we are reduced to showing that @xmath257 is bounded by a polynomial function of  @xmath8 . to prove this , remember that by assumption @xmath258 , so proposition  [ prop : shannon ] implies that @xmath259 .",
    "taking logarithms and dividing by  @xmath45 , we deduce that @xmath260 the @xmath261 term in this expression dominates , so for large  @xmath8 , @xmath262 on the other hand , from  ( [ eq : hamming ] ) we have @xmath263 taking logarithms , we get @xmath264 , which combined with ( [ eq : largen ] ) implies that for large  @xmath8 , @xmath265 we are now done , because @xmath266 and @xmath257 are within a constant factor of each other .",
    "after my talk at focs 2008 , salil vadhan showed me a different way to prove the main result of this paper , assuming only that sat is hard ( and therefore , of course , separating @xmath2 from @xmath1 but not from a subclass of  @xmath1 ) . with his kind permission ,",
    "i include his argument here .",
    "assume that sat is not computable by circuits of size @xmath5 .",
    "let @xmath32 be a function such that @xmath152 outstrips @xmath267 . and let @xmath268 .",
    "then there exists a sublinear - natural property of density  @xmath3 that separates @xmath1 from @xmath2 .    to ease notation , let @xmath269 .",
    "fix some way of encoding sat instances as binary strings .",
    "let @xmath39 comprise all boolean functions  @xmath20 of @xmath8 variables with the following property .",
    "if the last @xmath270 bits of  @xmath70 are all zero , then @xmath71 is @xmath84 or  @xmath196 according to whether or not the first @xmath163 bits of  @xmath70 encode a satisfiable instance of sat .",
    "( if any of the last @xmath270 bits of  @xmath70 are nonzero , then @xmath71 can be anything . )",
    "then @xmath39 has density @xmath271 . by our assumption on the hardness of sat , functions in @xmath39",
    "can not be computed by circuits of size @xmath272 .",
    "since @xmath273 grows faster than @xmath274 for any fixed  @xmath154 , this shows that @xmath41 is useful against @xmath2 .",
    "checking membership in  @xmath39 can be done in time @xmath275 , which is certainly sublinear in  @xmath82 .",
    "it is natural to ask if our results give any new hope for proving strong circuit lower bounds .",
    "it is probably difficult to prove unconditionally that , say , @xmath276-discrimination is useful against a strong complexity class  @xmath7 , not only because that would separate @xmath1 from  @xmath7 , but also because @xmath32-discrimination is closely related to the circuit minimization problem , whose complexity is known to be difficult to get a handle on ; see  @xcite .",
    "however , even as a _ potential _",
    "candidate for an almost - natural proof of @xmath183 , @xmath32-discrimination has an illuminating feature .",
    "namely , the only thing that prevents a @xmath32-discriminating function from looking like a random function is the presence of certain forced  @xmath196 s in the truth table .",
    "moreover , the proportion of forced  @xmath196 s goes to zero fairly rapidly as @xmath8 goes to infinity .",
    "this illustrates the fact that largeness can be destroyed by imposing what seems intuitively to be a relatively small amount of `` structure '' on a random function .",
    "therefore , the intuition that there is some constructive property of random functions that suffices to prove strong circuit lower bounds is not completely destroyed by the razborov ",
    "rudich results ; a minor alteration of a random property may still work .",
    "it is also worth noting that existing circuit lower bound proofs might still be mined for ideas to break the naturalization barrier .",
    "some linear lower bounds , such as those of blum  @xcite and lachish and raz  @xcite , do not relativize and are not known to naturalize .",
    "even proofs that are known to naturalize are not necessarily devoid of useful ideas .",
    "for example , in the course of analyzing a proof by smolensky , razborov and rudich identify three properties @xmath277 that are implicit in the proof , and show that @xmath278 , and a  fortiori  @xmath279 , are natural .",
    "however , @xmath280 is constructive but not known to be large , so it is conceivable ( though admittedly unlikely ) that @xmath280 is only _ almost _ large and is actually useful .",
    "of course , one would still need to identify and use some feature of  @xmath280 that is not shared by  @xmath278 in order to prove a stronger circuit lower bound than smolensky s , but the point is that the usefulness of  @xmath280 is not _ automatically _ ruled out by the fact that smolensky s argument naturalizes . in theory , it could still be fruitful to study  @xmath280 .    finally , recall that as evidence that largeness is hard to circumvent , razborov and rudich showed that any formal complexity measure automatically yields a large property .",
    "knowing that almost - natural proofs exist , we could perhaps try to come up with something that is almost , but not quite , a formal complexity measure .",
    "unfortunately , as of now , this tempting idea remains purely speculative .",
    "i would like to thank bob beals , steve boyack , sandy kutin , and avi wigderson for helpful discussions and encouragement .",
    "eric s. allender , cracks in the defenses : scouting out approaches on circuit lower bounds , in _ computer science  theory and applications : third international computer science symposium in russia , csr 2008 , moscow , russia , june 2008 , proceedings _ , lecture notes in computer science 5010 , ed .",
    "edward a. hirsch et al . ,",
    "springer , 2008 , pp .",
    "310 .",
    "michael s. paterson , nicholas pippenger , and uri zwick , optimal carry save networks , in _",
    "boolean function complexity ( durham , 1990 ) _ , london math .",
    "lecture note ser . , * 169 * , cambridge university press , 1992 , pp .",
    "174201 .",
    "steven rudich , super - bits , demi - bits , and @xmath13-natural proofs , in _ randomization and approximation techniques in computer science , _ lecture notes in computer science , * 1269 * , springer , 1997 , pp ."
  ],
  "abstract_text": [
    "<S> razborov and rudich have shown that so - called _ natural proofs _ are not useful for separating @xmath0 from  @xmath1 unless hard pseudorandom number generators do not exist . </S>",
    "<S> this famous result is widely regarded as a serious barrier to proving strong lower bounds in circuit complexity theory .    by definition , </S>",
    "<S> a natural combinatorial property satisfies two conditions , _ constructivity _ and _ </S>",
    "<S> largeness_. our main result is that if the largeness condition is weakened slightly , then not only does the razborov  </S>",
    "<S> rudich proof break down , but such `` almost - natural '' ( and useful ) properties provably exist . </S>",
    "<S> specifically , under the same pseudorandomness assumption that razborov and rudich make , a simple , explicit property that we call _ discrimination _ suffices to separate @xmath2 from  @xmath1 ; discrimination is nearly linear - time computable and almost large , having density @xmath3 where @xmath4 is a quasi - polynomial function . </S>",
    "<S> ( this is a slightly stronger result than the one announced in the focs 2008 extended abstract of this paper . ) for those who hope to separate @xmath0 from  @xmath1 using random function properties in some sense , discrimination is interesting , because it is constructive , yet may be thought of as a minor alteration of a property of a random function .    </S>",
    "<S> the proof relies heavily on the self - defeating character of natural proofs . </S>",
    "<S> our proof technique also yields an _ unconditional _ result , namely that there exist almost - large and useful properties that are constructive , if we are allowed to call _ non - uniform _ low - complexity classes `` constructive . '' </S>",
    "<S> we note , though , that this unconditional result can also be proved by a more conventional counting argument .    </S>",
    "<S> finally , we give an alternative proof ( communicated to us by salil vadhan at focs 2008 ) of one of our theorems , and we make some speculative remarks on the future prospects for proving strong circuit lower bounds .    </S>",
    "<S> circuit lower bound , natural proof </S>"
  ]
}
{
  "article_text": [
    "nash implementation is the cornerstone of the mechanism design theory .",
    "the maskin s theorem provides an almost complete characterization of social choice rules ( scrs ) that are nash implementable @xcite .",
    "because an scr is specified by a designer , a desired outcome from the designer s perspective may not be desirable for the agents .",
    "however , when the number of agents are at least three , the designer can always implement an scr which satisfies monotonicity and no - veto in nash equilibrium even if all agents dislike it ( see table 1 in section 3.1 ) .    with the development of network economics ,",
    "it is not unusual that the designer receives messages from agents through some communication channel ( e.g. , internet ) . for these cases",
    ", we will propose a self - enforcing agreement by which agents can fight a bad scr when they face the maskin s mechanism , even if the scr satisfies monotonicity and no - veto .",
    "put differently , the maskin s sufficiency theorem will be amended for such cases .",
    "the rest of the paper is organized as follows : section 2 recalls preliminaries of the mechanism design theory @xcite ; section 3 is the main part of this paper , where we will propose an agreement using complex numbers to amend the sufficiency part of the maskin s theorem .",
    "section 4 draws conclusions .",
    "let @xmath0 be a finite set of _ agents _ with @xmath1 , @xmath2 be a finite set of social _",
    "outcomes_. let @xmath3 be the finite set of agent @xmath4 s types , and the _ private information _ possessed by agent @xmath4 is denoted as @xmath5 .",
    "we refer to a profile of types @xmath6 as a _",
    "state_. let @xmath7 be the set of states . at state @xmath8 , each agent @xmath9",
    "is assumed to have a complete and transitive _ preference relation _",
    "@xmath10 over the set @xmath11 .",
    "we denote by @xmath12 the profile of preferences in state @xmath13 , and denote by @xmath14 the strict preference part of @xmath10 .",
    "fix a state @xmath13 , we refer to the collection @xmath15 as an _ environment_. let @xmath16 be the class of possible environments .",
    "a _ social choice rule _",
    "( scr ) @xmath17 is a mapping @xmath18 .",
    "@xmath19 describes a message or strategy set @xmath20 for agent @xmath4 , and an outcome function @xmath21 .",
    "@xmath20 is unlimited except that if a mechanism is direct , @xmath22 .",
    "an scr @xmath17 satisfies _ no - veto _ if , whenever @xmath23 for all @xmath24 and for all agents @xmath4 but perhaps one @xmath25 , then @xmath26 .",
    "an scr @xmath17 is _ monotonic _ if for every pair of environments @xmath27 and @xmath28 , and for every @xmath26 , whenever @xmath23 implies that @xmath29 , there holds @xmath30 .",
    "we assume that there is _ complete information _ among the agents ,",
    "i.e. , the true state @xmath13 is common knowledge among them . given a mechanism @xmath19 played in state @xmath13 , a _",
    "nash equilibrium _ of @xmath31 in state @xmath13 is a strategy profile @xmath32 such that : @xmath33 .",
    "let @xmath34 denote the set of nash equilibria of the game induced by @xmath31 in state @xmath13 , and @xmath35 denote the corresponding set of nash equilibrium outcomes .",
    "an scr @xmath17 is _ nash implementable _ if there exists a mechanism @xmath19 such that for every @xmath36 , @xmath37 .",
    "maskin @xcite provided an almost complete characterization of scrs that were nash implementable .",
    "the main results of ref .",
    "@xcite are two theorems : 1 ) ( _ necessity _ ) if an scr is nash implementable , then it is monotonic . 2 ) ( _ sufficiency _ ) let @xmath38 , if an scr is monotonic and satisfies no - veto , then it is nash implementable . in order to facilitate the following investigation",
    ", we briefly recall the maskin s mechanism published in ref . @xcite",
    "as follows :    consider the following mechanism @xmath19 , where agent @xmath4 s message set is @xmath39 , where @xmath40 is the set of non - negative integers .",
    "a typical message sent by agent @xmath4 is described as @xmath41 .",
    "the outcome function @xmath42 is defined in the following three rules : ( 1 ) if for every agent @xmath9 , @xmath43 and @xmath44 , then @xmath45 .",
    "( 2 ) if @xmath46 agents @xmath47 send @xmath43 and @xmath44 , but agent @xmath25 sends @xmath48 , then @xmath45 if @xmath49 , and @xmath50 otherwise .",
    "( 3 ) in all other cases , @xmath51 , where @xmath52 is the outcome chosen by the agent with the lowest index among those who announce the highest integer .",
    "this section is the main part of this paper . in the beginning",
    ", we will show a bad scr which satisfies monotonicity and no - veto .",
    "it is nash implementable although all agents dislike it .",
    "then , we will define some matrices and propose an agreement with complex numbers , by which the agents can amend the maskin s sufficiency theorem .      _ table 1 : a bad scr that is monotonic and satisfies no - veto . _ +    [ cols=\"^,^,^,^,^,^ \" , ]     let @xmath53 , @xmath54 , @xmath55 . in each state @xmath8 ,",
    "the preference relations @xmath56 over the outcome set @xmath11 and the corresponding scr @xmath17 are given in table 1 .",
    "the scr @xmath17 is bad from the viewpoint of the agents because in state @xmath57 , all agents unanimously prefer a pareto - efficient outcome @xmath58 : for each agent @xmath4 , @xmath59 .",
    "it seems that in state @xmath57 , @xmath60 should be a unanimous @xmath61 for each agent @xmath4 . as a result",
    ", @xmath62 may be generated by rule 1 .",
    "however , @xmath63 has an incentive to unilaterally deviate from @xmath60 to @xmath64 , since @xmath65 , @xmath66 ; @xmath67 also has an incentive to unilaterally deviate from @xmath60 to @xmath68 , since @xmath69 , @xmath70 .",
    "note that either @xmath63 or @xmath67 can certainly obtain her expected outcome only if just one of them deviates from @xmath60 ( if this case happened , rule 2 would be triggered ) .",
    "but this condition is unreasonable , because all agents are rational , nobody is willing to give up and let the others benefit .",
    "therefore , both @xmath63 and @xmath67 will deviate from @xmath60 . as a result ,",
    "rule 3 will be triggered .",
    "since @xmath63 and @xmath67 both have a chance to win the integer game , the winner is uncertain .",
    "consequently , the final outcome is uncertain between @xmath71 and @xmath72 .    to sum up ,",
    "although every agent prefers @xmath62 to @xmath73 in state @xmath57 , @xmath62 can not be yielded in nash equilibrium .",
    "indeed , the maskin s mechanism makes the pareto - inefficient outcome @xmath73 be implemented in nash equilibrium in state @xmath74 .",
    "_ can the agents find a way to let the pareto - inefficient outcome @xmath73 not be nash implemented in state @xmath57 when they face the maskin s mechanism ?",
    "_ interestingly , we will show that the answer may be `` yes '' .",
    "to do so , a new weapon - the complex number - will be used .",
    "although it has been well - known for hundreds of years , it has never been used in the theory of mechanism design . in what follows ,",
    "first we will define some matrices , then we will propose an agreement to break through the maskin s sufficiency theorem .      *",
    "definition 1 * : let @xmath75 be two @xmath76 matrices .",
    "@xmath77 are defined as two basic vectors : @xmath78 hence , @xmath79 , @xmath80 ; @xmath81 , @xmath82 .",
    "* definition 2 * : for @xmath83 agents , let each agent @xmath9 possess a basic vector .",
    "a vector is defined as the tensor product of @xmath84 basic vectors : @xmath85 the vector @xmath86 contains @xmath84 basic vectors @xmath87 and @xmath88 elements .",
    "@xmath86 is also denoted as @xmath89 .",
    "similarly , @xmath90 obviously , there are @xmath88 possible vectors @xmath91 @xmath92 .",
    "* definition 3 * : @xmath93 , _ i.e. _ , @xmath94 where the symbol @xmath4 denotes an imaginary number , and @xmath95 is the conjugate transpose of @xmath96 . in what follows",
    ", we will not explicitly claim whether @xmath4 is an imaginary number or an index .",
    "it is easy for the reader to know its exact meaning from the context .    *",
    "definition 4 * : @xmath97 * definition 5 * : for @xmath98 $ ] , @xmath99 $ ] , @xmath100 @xmath101,\\phi\\in[0,\\pi/2]\\}$ ] .",
    "hence , @xmath102 , @xmath103 .",
    "let @xmath104 .",
    "* definition 6 * : for @xmath105 , @xmath106 $ ] , @xmath107 $ ] , let @xmath108 , @xmath109\\overrightarrow{\\psi}_{1}.\\ ] ] the dimension of @xmath110 is @xmath111 .",
    "since only two elements in @xmath112 are non - zero , it is not necessary to calculate the whole @xmath113 matrix to yield @xmath114 .",
    "indeed , we only need to calculate the leftmost and rightmost column of @xmath115 $ ] to derive @xmath114 .    * definition 7 * : @xmath116 .",
    "suppose @xmath117^{t}$ ] , let latexmath:[$\\delta=[|\\eta_{1}|^{2 } , \\cdots ,    @xmath96 , @xmath119 ( @xmath120 ) and @xmath95 are all unitary matrices .",
    "hence , @xmath121 .",
    "thus , @xmath122 can be viewed as a probability distribution , each element of which represents the probability that we randomly choose a vector from the set of all @xmath88 possible vectors @xmath91 @xmath92 .",
    "* definition 8 * : condition @xmath123 contains five parts .",
    "the first three parts are defined as follows : + @xmath124 : given an scr @xmath17 , there exist two states @xmath125 , @xmath126 , @xmath127 such that @xmath128 ( for each @xmath9 , @xmath129 , @xmath130 ) with strict relation for some agent ; and the number of agents that encounter a preference change around @xmath131 in going from state @xmath125 to @xmath132 is at least two .",
    "denote by @xmath133 the number of these agents . without loss of generality ,",
    "let these @xmath133 agents be the last @xmath133 agents among @xmath84 agents , _",
    "i.e. _ , agent @xmath134 .",
    "+ @xmath135 : consider the state @xmath132 specified in condition @xmath124 , if there exists another @xmath136 , @xmath137 that satisfies @xmath124 , then @xmath138 ( for each @xmath9 , @xmath129 , @xmath139 ) with strict relation for some agent .",
    "+ @xmath140 : consider the outcome @xmath131 specified in condition @xmath124 , for any state @xmath141 , @xmath131 is top ranked for each agent @xmath4 among the first @xmath142 agents .",
    "as we have seen , the maskin s mechanism is an abstract mechanism .",
    "people seldom consider how the designer actually receives messages from agents . roughly speaking",
    ", there are two manners : direct and indirect manner . in the former manner ,",
    "the agents report their messages to the designer directly ( e.g. , orally , by hand , etc ) ; in the latter manner , the agents report messages to the designer through some channels ( e.g. , internet etc ) . in",
    "what follows , we assume the agents communicate with the designer through some channel .    * definition 9 * : suppose conditions @xmath124 , @xmath135 and @xmath140 are satisfied , and the designer uses the maskin s mechanism .",
    "an agreement _ complexmessage _ is constructed by the agents ( see fig .",
    "it is constructed after the designer claims the outcome function @xmath42 , and before agents send messages @xmath143 to the designer .",
    "the algorithm _ messagecomputing _ is given in definition 10 .",
    "* definition 10 * : the algorithm _ messagecomputing _ is defined as follows : + * input * : @xmath144\\times [ 0,\\pi]\\times a\\times \\mathcal { t } \\times \\mathbb{z}_{+}$ ] , @xmath145 . +",
    "* output * : @xmath146 , @xmath145 .",
    "+ 1 : reading @xmath147 from each agent @xmath9 ( see fig .",
    "+ 2 : computing the leftmost and rightmost columns of @xmath110 ( see fig .",
    "+ 3 : computing @xmath148\\overrightarrow{\\psi}_{1}$ ] , @xmath149 , and the probability distribution @xmath122 ( see fig .",
    "+ 4 : randomly choosing a vector from the set of all @xmath88 possible vectors @xmath91 @xmath92 according to the probability distribution @xmath122 .",
    "+ 5 : for each agent @xmath9 , let @xmath150 ( or @xmath41 ) if the @xmath4-th part of the chosen vector is @xmath87 ( or @xmath151 ) ( see fig .",
    "2(d ) ) . + 6 : sending @xmath143 to the designer through channels @xmath152 .",
    "initially , in _ complexmessage _ all agents transfer their channels to the computer .",
    "after then , each agent @xmath153 can leave his channel to the computer , or take back his channel and communicate with the designer directly : + 1 ) whenever any agent takes back his channel , every other agent will detect this deviation and take back their channels too , henceforth all agents will communicate with the designer directly .",
    "+ 2 ) when all agents leave their channels to the computer , the algorithm _ messagecomputing _ works , i.e. , calculates @xmath154 and sends it to the designer .",
    "+ put differently , after _ complexmessage _ is constructed , each agent @xmath153 independently faces two options : + @xmath155 @xmath156 : leave his channel to the computer , and submit @xmath157 to the algorithm _ messagecomputing_. + @xmath155 @xmath158 : take back his channel , and submit @xmath159 to the designer directly .    * remark 1 : * although the time and space complexity of _ messagecomputing _ are exponential , _",
    "i.e. _ , @xmath160 , it works well when the number of agents is not large . for example , the runtime of _ messagecomputing _ is about 0.5s for 15 agents , and about 12s for 20 agents",
    "( matlab 7.1 , cpu : intel ( r ) 2ghz , ram : 3 gb ) .",
    "* remark 2 : * the problem of nash implementation requires complete information among all agents . in the last paragraph of page 392 @xcite ,",
    "serrano wrote : `` _ _",
    "we assume that there is complete information among the agents ... this assumption is especially justified when the implementation problem concerns a small number of agents that hold good information about one another _ _ '' .",
    "hence , the fact that _ messagecomputing _ is suitable for small - scale cases ( _ e.g. _ , less than 20 agents ) is acceptable for nash implementation .",
    "* definition 11 * : consider the state @xmath132 specified in condition @xmath124 .",
    "suppose @xmath124 and @xmath135 are satisfied , and @xmath161 is computed by _",
    "messagecomputing_. @xmath162 , @xmath163 , @xmath164 and @xmath165 are defined as the payoffs to the @xmath84-th agent in state @xmath132 when the chosen vector in step 4 of _ messagecomputing _ is @xmath166 , @xmath167 , @xmath168 or @xmath169 respectively .",
    "note : when an agent faces a certain outcome , his payoff is the utility that he exactly obtains ; when an agent faces an uncertain outcome among a set of outcomes , his payoff is the ex - ante utility before the final outcome is realized .",
    "it should be emphasized that the word `` uncertain '' is different from `` random '' : the latter means there is a certain probability distribution , whereas the former means the outcome is totally unknown before it is realized .    * definition 12 * : suppose conditions @xmath124 and @xmath135 are satisfied .",
    "when the true state is @xmath132 , consider each message @xmath170 , where @xmath171 is top - ranked for each agent @xmath4 .",
    "the rest parts of condition @xmath123 are defined as : + @xmath172 : @xmath173 .",
    "+ @xmath174 : @xmath175 .",
    "+      * proposition 1 * : for @xmath83 , suppose the agents communicate with the designer through channels . consider an scr @xmath17 that satisfies monotonicity and no - veto .",
    "suppose the designer uses the maskin s mechanism @xmath31 and condition @xmath123 is satisfied , then in state @xmath132 the agents can sign a self - enforcing agreement to make the pareto - inefficient outcome @xmath176 not be yielded in nash equilibrium .",
    "* proof * : since @xmath124 and @xmath135 are satisfied , then there exist two states @xmath125 , @xmath126 , @xmath127 such that @xmath128 ( for each @xmath9 , @xmath129 , @xmath130 ) with strict relation for some agent ; and the number of agents that encounter a preference change around @xmath131 in going from state @xmath125 to @xmath132 is at least two .",
    "suppose the true state is @xmath132 .",
    "let us check whether the agents can make the pareto - inefficient outcome @xmath177 not be implemented in nash equilibrium by constructing _",
    "complexmessage_.    firstly , note that after the agents construct _ complexmessage _ , the designer can not discriminate whether a received message @xmath61 is reported directly from agent @xmath4 or sent by _",
    "messagecomputing_. put differently , the timing steps of the designer are not changed : + time 1 : the designer claims the outcome function @xmath42 to all agents ; + time 2 : the designer receives @xmath143 ; + time 3 : the designer computes the outcome @xmath178 .",
    "secondly , from the viewpoints of agents , the situation is changed .",
    "after constructing _ complexmessage _ , there are two possible cases : + 1 ) suppose every agent @xmath4 chooses @xmath179 , then the algorithm _ messagecomputing _ works .",
    "consider the strategy profile chosen by the agents : each agent @xmath180 submits @xmath181 ; each agent @xmath182 submits @xmath183 .",
    "since condition @xmath123 is satisfied , according to lemma 1 ( see appendix ) , this strategy profile is a nash equilibrium of @xmath31 in state @xmath132 . as a result , in step 4 of _ messagecomputing _ , the chosen vector will be @xmath184 ; in step 5 of _ messagecomputing _ ,",
    "@xmath150 for each @xmath9 . in the end ,",
    "each agent @xmath4 s payoff is @xmath162 .",
    "+ 2 ) suppose some agent @xmath9 chooses @xmath186 , i.e. , take back his channel and report @xmath61 to the designer directly .",
    "then all of the rest agents will take back their channels and report messages to the designer directly .",
    "each agent @xmath4 s payoff is @xmath165 .    since condition @xmath172 is satisfied ,",
    "it is not profitable for any agent @xmath4 to unilaterally take back his channel .",
    "according to telser @xcite , _ complexmessage _ is a self - enforcing agreement among the agents . put differently , although the agents collaborate to construct _ complexmessage _ between time 1 and 2 , they do not require a third - party to enforce _",
    "complexmessage_.    to sum up , in state @xmath132 , the agents can sign a self - enforcing agreement _ complexmessage _ to make the pareto - inefficient outcome @xmath177 not be implemented in nash equilibrium . @xmath187",
    "in this paper , we propose a self - enforcing agreement to help agents avoid the pareto - inefficient outcome when they face a bad social choice rule .",
    "when the designer uses the maskin s mechanism and receives messages from the agents through some communication channels ( e.g. , internet ) , the designer can not restrict the agents from signing such agreement .",
    "it should be noted that the introduction of complex numbers plays an important role in this paper . to the best of our knowledge",
    ", there is no similar work before . since the maskin s mechanism has been widely applied to many disciplines , there are many works to do in the future to generalize the self - enforcing agreement further",
    ".    99 e. maskin , nash equilibrium and welfare optimality , _ rev .",
    "* 66 * ( 1999 ) 23 - 38 .",
    "r. serrano , the theory of implementation of social choice rules , _ siam review _ * 46 * ( 2004 ) 377 - 414 .",
    "telser , a theory of self - enforcing agreements . _ journal of business _ * 53 * ( 1980 ) 27 - 44 .",
    "flitney and l.c.l .",
    "hollenberg , nash equilibria in quantum games with generalized two - parameter strategies , _ phys .",
    "a _ * 363 * ( 2007 ) 381 - 388 .",
    "* lemma 1 * : suppose the algorithm _ messagecomputing _ works .",
    "if condition @xmath123 is satisfied , consider the following strategy : + 1 ) each agent @xmath180 submits @xmath181 ; + 2 ) each agent @xmath188 submits @xmath189 ; + then the optimal value of @xmath190 for the @xmath84-th agent is @xmath191 .    * proof * : since condition @xmath124 is satisfied , then @xmath192",
    ". let @xmath193 @xmath194 here we only explicitly list the up - left and bottom - right entries because only these two entries are useful in the following discussions .",
    "the other entries in diagonal are simply represented as symbol @xmath195 .",
    "note that @xmath196 thus , @xmath197 suppose the @xmath84-th agent chooses arbitrary parameters @xmath198 in his strategy @xmath199 , let @xmath200 then , @xmath201}\\cos(\\theta/2 ) & *    &    &    &    &     & \\\\",
    "ie^{i\\frac{(l-1)\\pi}{l}}\\sin(\\theta/2 ) & *    &    &    &    &     & \\\\     &   & *   & *   &    &     & \\\\     &   & *   & *   &    &     & \\\\     &   &     &     & \\cdots &     & \\\\     &   &     &     & & * & ie^{-i\\frac{(l-1)\\pi}{l}}\\sin(\\theta/2 ) \\\\     &   &     &     & & * & e^{-i[\\frac{(l-1)\\pi}{l}+\\phi]}\\cos(\\theta/2 ) \\end{bmatrix}_{2^{n}\\times 2^{n}}.\\end{aligned}\\ ] ] recall that @xmath202 thus , @xmath203\\overrightarrow{\\psi}_{1}=\\frac{1}{\\sqrt{2}}\\begin{bmatrix }    e^{i[\\frac{(l-1)\\pi}{l}+\\phi]}\\cos(\\theta/2)\\\\    ie^{i\\frac{(l-1)\\pi}{l}}\\sin(\\theta/2)\\\\    0\\\\    \\cdots\\\\    0\\\\    -e^{-i\\frac{(l-1)\\pi}{l}}\\sin(\\theta/2)\\\\    ie^{-i[\\frac{(l-1)\\pi}{l}+\\phi]}\\cos(\\theta/2 ) \\end{bmatrix}_{2^{n}\\times 1},\\end{aligned}\\ ] ] @xmath204}\\cos(\\theta/2 ) + e^{-i[\\frac{(l-1)\\pi}{l}+\\phi]}\\cos(\\theta/2)\\\\    ie^{i\\frac{(l-1)\\pi}{l}}\\sin(\\theta/2 ) + ie^{-i\\frac{(l-1)\\pi}{l}}\\sin(\\theta/2)\\\\    0\\\\    \\cdots\\\\    0\\\\    e^{i\\frac{(l-1)\\pi}{l}}\\sin(\\theta/2)-e^{-i\\frac{(l-1)\\pi}{l}}\\sin(\\theta/2)\\\\    -ie^{i[\\frac{(l-1)\\pi}{l}+\\phi]}\\cos(\\theta/2 ) + ie^{-i[\\frac{(l-1)\\pi}{l}+\\phi]}\\cos(\\theta/2 ) \\end{bmatrix}_{2^{n}\\times 1}\\\\ & = \\quad\\begin{bmatrix }    \\cos(\\theta/2)\\cos(\\frac{l-1}{l}\\pi+\\phi)\\\\    i\\sin(\\theta/2)\\cos\\frac{l-1}{l}\\pi\\\\    0\\\\    \\cdots\\\\    0\\\\    i\\sin(\\theta/2)\\sin\\frac{l-1}{l}\\pi \\\\",
    "\\cos(\\theta/2)\\sin(\\frac{l-1}{l}\\pi+\\phi ) \\end{bmatrix}_{2^{n}\\times 1}.\\end{aligned}\\ ] ] the probability distribution @xmath122 is computed from @xmath205 : @xmath206 obviously , @xmath207 consider the payoff to the @xmath84-th agent , @xmath208 since @xmath172 is satisfied , _ i.e. _ , @xmath209 , then the @xmath84-th agent chooses @xmath210 to minimize @xmath211 . as a result , @xmath212 .    since @xmath174 is satisfied , _ i.e. _ , @xmath213",
    ", then the @xmath84-th agent prefers @xmath214 , which leads @xmath215 to its maximum @xmath162 .",
    "therefore , the optimal value of @xmath190 for the @xmath84-th agent is @xmath191.@xmath216"
  ],
  "abstract_text": [
    "<S> the maskin s theorem is a fundamental work in the theory of mechanism design . in this paper </S>",
    "<S> , we will propose a self - enforcing agreement by which agents can fight a bad social choice rule which satisfies monotonicity and no - veto if an additional condition is satisfied . </S>",
    "<S> the agreement is based on complex numbers and is justified if the designer receives messages from the agents through some communication channels ( e.g. , internet ) . under the assumption of complete information among agents , the designer can not prevent the agents from signing such agreement . thereby , the maskin s sufficiency theorem is amended .    </S>",
    "<S> mechanism design ; nash implementation . </S>"
  ]
}
{
  "article_text": [
    "symplectic algorithms@xcite for solving classical dynamical problems exactly conserve all poincar@xmath3 invariants . for periodic orbits ,",
    "the errors in energy conservation are bounded and periodic .",
    "this is in sharp contrast to runge - kutta type algorithms , whose energy error increases linearly with integration time , even for periodic orbits@xcite . thus , symplectic algorithms are ideal for long time integration of equations of motion in problems of astrophysical interest@xcite . for long time integrations ,",
    "higher order algorithms are desirable because they permit the use of larger time steps .",
    "symplectic algorithms are also advantageous in that higher order algorithms can be systematically generated from any low , even order algorithm@xcite . in this work",
    ", we will show that higher order algorithms generated by a fourth order force gradient symplectic algorithm@xcite , have energy errors that are several orders of magnitude smaller than existing symplectic algorithms of the same order . for completeness",
    ", we will briefly summarize the operator derivation of symplectic algorithms and their higher order construction in section ii . while the materials in this section are not new , we believe that we have restated creutz and gockachs@xcite triplet construction of higher order algorithms in its most transparent setting . in sections iii and",
    "iv we recall force gradient algorithms and discuss two distinct ways of gauging the errors of an algorithm when solving the kepler problem .",
    "we present our results and conclusions in sections v and vi .",
    "after a tortuous start@xcite , symplectic algorithms can be derived most simply on the basis of operator decomposition or factorization . for any dynamical variable @xmath4",
    ", its time evolution is given by the poisson bracket , @xmath5 if the hamiltonian is of the form , @xmath6 the evolution equation ( [ peq ] ) can be written as an operator equation @xmath7 with formal solution @xmath8 where @xmath9 and @xmath10 are first order differential operators defined by @xmath11 their exponentiations , @xmath12 and @xmath13 , are displacement operators which displace @xmath14 and @xmath15 forward in time via @xmath16 thus , if @xmath17 can be factorized into products of the displacement operators @xmath12 and @xmath13 , each such factorization gives rise to an algorithm for evolving the system forward in time .",
    "for example , the second order factorization @xmath18 , \\label{tb}\\ ] ] corresponds to the second order algorithm @xmath19 where @xmath20 , @xmath21 and @xmath22 , @xmath23 are the initial and final states of the algorithm respectively .",
    "this second order symplectic algorithm only requires one evaluation of the force .",
    "the bilaterally symmetric form of @xmath24 automatically guarantees that it is _ time - reversible _ , @xmath25 and implies that @xmath26 can only be an odd function of @xmath27 , as indicated in ( [ tb ] ) .",
    "the explicit form of the operator @xmath28 is not needed for our present discussion .",
    "consider now the the symmetric triple product @xmath29 . \\label{tripd}\\ ] ] this algorithm evolves the system forward for time @xmath30 , backward for time @xmath31 and forward again for time @xmath30 .",
    "since it is manifestly time - reversible , its error terms must be odd powers of @xmath30 only .",
    "morever , its leading first and third order terms can only be the sum of the first and third order terms of each constituent algorithm as indicated .",
    "this is because non - additive terms must come from commutators of operators and the lowest order non - vanishing commutator has to have two first order terms and one third order term , which is fifth order .",
    "the form of ( [ tripd ] ) naturally suggests that the third order error term can be made to vanish by choosing @xmath32 thus if we now rescale @xmath30 back to the standard step size by setting @xmath33 , the resulting triplet product would be correct to 4th order , @xmath34 .",
    "\\label{tren}\\ ] ] expanding out the @xmath35 s gives the explicit form : @xmath36 where , by inspection @xmath37 this fourth order symplectic algorithm was apparently obtained by e. forest in 1987 .",
    "however , its original derivation was very complicated and was not published with ruth@xcite until 1990 . during this period many groups , including campostrini and rossi@xcite in 1990 , candy and rozmous@xcite in 1991 , independently published the same algorithm .",
    "our discussion followed the earliest published derivation of this algorithm by creutz and gocksch@xcite in 1989 .",
    "after they were informed of this algorithm by campostrini , they provided the triplet construction and generalized it to higher order .",
    "the triplet construction was also independently published by suzuki@xcite and yoshida@xcite in 1990 .",
    "higher order algorithms can be obtained by repeating this construction . starting with any @xmath38th order symmetric algorithm , @xmath39 , \\label{ford}\\ ] ] the triplet product @xmath40 , \\label{tpdford}\\ ] ]",
    "will be of order @xmath41 if we choose @xmath42 and renormalize @xmath43 as before .",
    "the method of operator factorization can be applied to many different classes of evolution equations . however ,",
    "the triplet concatenations with a negative time step are a special construction with more limited applicability . for example",
    ", one can not use it to derive similar diffusion monte carlo or finite temperature path integral algorithms , because one can not simulate diffusion backward in time nor sample configurations with negative temperatures .",
    "the triplet construction is a special example of suzukis@xcite general proof that , beyond second order , it is impossible to factorize @xmath17 only into products of @xmath44 s and @xmath45 s without introducing negative time steps .",
    "for symplectic algorithms this means that one can never develop a purely positive time step fourth order algorithm by evaluating only the force . for many years",
    "the forest - ruth ( fr ) algorithm was the only known fourth order symplectic algorithm .",
    "recently , a deeper understanding of the operator factorization process has yielded three new symplectic algorithms@xcite all with purely positive time steps .",
    "these new algorithms circumvented suzuki s no - go theorem by evaluating the force and its gradient .",
    "this corresponds to factorizing @xmath46 in terms of operators @xmath9 , @xmath10 , and the commutator @xmath47 $ ] .",
    "the latter corresponds to @xmath48=2f_j { { \\partial   f_i}\\over{\\partial q_j } }                  { { \\partial   } \\over{\\partial p_i } } =                  \\nabla_i|{\\bf f}|^2                  { { \\partial   } \\over{\\partial p_i } } , \\ ] ] which is the gradient of the squared magnitude of the force .",
    "of the three algorithms derived by chin@xcite , algorithm c is particularly outstanding and corresponds to the factorization @xmath49 where @xmath50 .",
    "\\label{ruthv4}\\ ] ] the algorithm itself can be read off directly as @xmath51\\\\ \\label{algc } { \\bf q}_3&&={\\bf q}_2+{1\\over 3}\\epsilon { \\bf p}_2\\nonumber\\\\ { \\bf p}_3&&={\\bf",
    "p}_2+{3\\over 8}\\epsilon { \\bf f}({\\bf q}_3)\\nonumber\\\\ { \\bf q}_4&&={\\bf",
    "q}_3+{1\\over 6}\\epsilon { \\bf p}_3.\\nonumber\\end{aligned}\\ ] ]    in @xcite it was shown that the maximum energy error for this algorithm , when used to solve kepler s problem , is smaller than that of the fr algorithm by a factor of 80 . at the moment",
    "there is no general method for constructing higher order algorithms with only positive time steps .",
    "it is not even known whether a positive time step 6th order algorithm exists .",
    "thus , beyond 4th order the triplet contruction is still the only systematic way of generating higher order algorithms . in this work",
    "we show that intrinsic error functions associated with higher order algorithms generated from chin s algorithm c are far smaller than those generated from the fr algorithm .",
    "we gauge the numerical effectiveness of each algorithm by solving the two dimensional kepler problem @xmath52 with initial conditions @xmath53 and @xmath54 . the resulting highly eccentric ( e=0.9 )",
    "orbit provides a non - trivial testing ground for trajectory integration .",
    "a symmetric @xmath38th order symplectic algorithm evolves this system forward in time with hamiltonian @xmath55 which deviates from the exact hamiltonian @xmath56 by an error term @xmath57 as indicated . to gauge the intrinsic merit of each algorithm we compare their step - size independent error coefficient @xmath58",
    "this can be extracted numerically as follows .",
    "let s start the system with total energy @xmath59 .",
    "since the hamiltonian ( [ hal ] ) is conserved by the algorithm , we have @xmath60 denoting @xmath61 and @xmath62 , we therefore have @xmath63.\\ ] ]    energy conservation does not directly measure how well the orbit is determined . when the time step is not too small , a very noticeable error is that the orbit precesses .",
    "one can , but it is tedious , directly monitor this orbital precession@xcite .",
    "it is more expedient to follow the rotation of the laplace - runge - lenz ( lrl ) vector : @xmath64 when the orbit is exact the lrl vector is constant , pointing along the semi - major axis of the orbit .",
    "when the orbit precesses the lrl vector rotates correspondingly .    for an @xmath38th order algorithm , @xmath65",
    "thus , the rate of change of each component of the lrl vector is of order @xmath66 .",
    "the components themselves , which are time integrals of the above modulo a constant term , must also be of order @xmath66 .",
    "let the lrl vector initially be of length @xmath67 and lie along the x - axis , then we have @xmath68 since the square of the lrl vector is related to the energy by @xmath69 the longitudinal deviation coefficient @xmath70 is related to the energy error coefficient by @xmath71 which gives no new information .",
    "the perpendicular deviation coefficient @xmath72 is best measured in terms of the rotation angle : @xmath73= \\epsilon^n\\biggl[{{a_{ny}(t)}\\over{a_0}}\\biggr]+\\cdots\\ ] ] to compare algorithms we again extract and compare their rotation error coefficient function @xmath74 via @xmath75 since this rotational angle is related to some integral of the energy error function , it is a better measure of the overall error of the algorithm .",
    "by use of the triplet construction , we generated 6th , 8th , 10th , and 12th order algorithms from both the forest - ruth and chin s c algorithm .",
    "we computed the fractional energy deviation , which is just the negative of the energy error coefficient normalized by the initial energy , @xmath76=-{{h_n(t)}\\over{e_0}}.\\ ] ] smaller and smaller time steps @xmath27 are used until the extracted coefficient function is stablized independent of the time step size .",
    "this typically occurs in the neighborhood of @xmath77 , where p is the period of the orbit .",
    "fig.[fone ] compares the ( negative ) normalized error coefficient functions for the 4th order runge - kutta , forest - ruth and chin s c algorithms over one period of the orbit .",
    "the error function for the two symplectic algorithms are substantial only near mid period when the particle is at its closest approach to the attractive center . for symplectic algorithms energy",
    "is conserved over one period , or its non - conservation is periodic .",
    "its average energy error is bounded and constant as a function of time . in contrast",
    ", the 4th order runge - kutta energy error function is an irreversible , step - like function over one period .",
    "each successive period will increase the error by the same amount resulting in a linearly rising , staircase - like error function in time . as noted earlier ,",
    "the maximum error in chin s algorithm c is smaller than that of the fr algorithm by a factor of 80 .",
    "however , this error height comparison at one point is not meaningful .",
    "it is better to compare the energy error averaged over one period .",
    "this would require the integral of the energy error function .",
    "on this basis algorithm c will be better still .",
    "while the energy error integral can be done , the same goal can be achieved by monitoring the rotation of the lrl vector .",
    "fig.[ftwo ] shows the corresponding error coefficient functions of the rotational angle of the lrl vector . after each period",
    ", the algorithms rotate the lrl vector by a definite amount .",
    "the error coefficient provides an intrinsic , step - size independent way of comparing this rotation . in fig.[ftwo ]",
    "the rotated angle produced by algorithm c is too small to be visible when plotted on the same scale as the other algorithms .",
    "the insert gives an enlargement of the details .",
    "the rotational angle of the lrl vector appears to be related to some integral of energy error function .",
    "although we have not been able to demonstrate this analytically , numerical integration of the energy error function does give a function similiar in shape to the angle coefficient function , having the same numbers of maxima and minima .",
    "for the runge - kutta , forest - ruth and chin s c 4th order algorithms , the magnitudes of this rotation cofficient after one period are 2.666 , 10.860 , and 0.004 respectively . on this basis ,",
    "algorithm c is better than fr by a factor of @xmath78 .",
    "when the orbit is integrated over many periods the rotational angle from symplectic algorithms increases linearly in a staircase - like manner with time .",
    "in contrast , the rotational angle of the runge - kutta algorithm shows a quadratic increase over long times , such as a few thousand periods .",
    "this result is easy to understand if the rotational angle is related to some integral of the energy error .",
    "this quadratic increase in the rotation angle of the lrl vector clearly mirrors the quadratic increase in phase error of the runge - kutta algorithm , as discussed by gladman , duncan and candy@xcite .",
    "fig.[fthree ] and fig.[ffour ] show the results when both the forest - ruth and chin s c algorithms are iterated to 6th order by the triplet product construction .",
    "inserts in both detail algorithm c s intricate structure . as an added comparison we also included results for yoshidas@xcite 6th order algorithm a , which is a product of 7 second order algorithms ( [ altbs ] ) , some with negative time steps . for yoshida s",
    "algorithm , forest - ruth and chin s c algorithm in 6th order , the magnitudes of the rotation cofficients after one period are 11.44 , 335.1 , and 0.1156 respectively . yoshida s algorithm is a factor of 30 better than fr , but algorithm c is a factor of 3000 better .",
    "note that if the energy error function is related to the differential of the the angle error function , the zeros of the former would correspond to the extrema of the latter .",
    "the four zero crossings of algorithm c s energy error function are clearly reflected in the two maxima and two minima of the corresponding angle error function .",
    "fig.[ffive ] and fig.[fsix ] give results for the 8th order iterated algorithms based on the forest - ruth and chin s c algorithm .",
    "the magnitudes of the angle error coefficients are @xmath79 and 0.4532 respectively , giving a ratio of approximately @xmath80 .",
    "algorithm c retains its characteristic shape in both the energy and the angle error function .",
    "fig.[fseven ] and fig.[feight ] give the corresponding results for the iterated 10th order algorithms . here",
    "the intricate structure in the c algorithm is beginning to be washed out . at this high order ,",
    "quadruple numeric precision is necessary to extract these coefficient functions smoothly .",
    "the magnitudes of the angle error coefficients are now @xmath81 and @xmath82 respectively , giving a ratio of @xmath83 .",
    "fig.[fnine ] and fig.[ften ] give similar results for the 12th order algorithms . at this point",
    "all structures in the c algorithm are gone .",
    "the magnitudes of the angle error coefficients are now @xmath84 and @xmath85 respectively , giving a ratio of @xmath86 .",
    "the iteration of algorithms a and b of chin@xcite also produced results that are better than fr based algorithms .",
    "however , we do not detail their results here because they are at least one or two orders of magnitude inferior to algorithm c.",
    "in this work we have shown that higher order force gradient symplectic algorithms appear to be superior to non - gradient symplectic alogorithms as measured by eneregy conservation and the rotation of the lrl vector .",
    "while it has been shown earlier that 4th order force gradient algorithms have smaller energy error coefficients@xcite , it was not known that this advantage would mulitply dramatically when algorithms are iterated to higher orders .",
    "the conclusion that one should draw may not be that force gradient algorithms are better , but that higher order non - gradient algorithms are far from optimal .",
    "secondly , we suggested that the rotation of the lrl vector gives an intergrated measure of an algorithm s merit when tested on the kepler problem .",
    "the high accuracy of this class of algorithms seemed ideal for long time integration of few - body problems , such as that of the solar system@xcite .",
    "for such few - body problems , the evaluation of the force gradient is not excessively difficult",
    ". it would be useful to examine the merit of this class of algorithms in more physical applications .",
    "the distinct advantage uncovered in this work , that it is better to iterate a 4th order algorithm with all positive time steps , gives further impetus to search for an all positive time step 6th order symplectic algorithm ."
  ],
  "abstract_text": [
    "<S> we show that a recently discovered fourth order symplectic algorithm , which requires one evaluation of force gradient in addition to three evaluations of the force , when iterated to higher order , yielded algorithms that are far superior to similarly iterated higher order algorithms based on the standard forest - ruth algorithm . </S>",
    "<S> we gauge the accuracy of each algorithm by comparing the step - size independent error functions associated with energy conservation and the rotation of the laplace - runge - lenz vector when solving a highly eccentric kepler problem . for orders 6 , 8 , 10 and 12 , </S>",
    "<S> the new algorithms are approximately a factor of @xmath0 , @xmath1 , @xmath1 and @xmath2 better . </S>"
  ]
}
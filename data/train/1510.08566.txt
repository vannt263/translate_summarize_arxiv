{
  "article_text": [
    "being a continuation of @xcite , this article fully relies on the terminology and notation introduced in its predecessor , with which  or , at least , with the first two sections of which  the reader is assumed to be already familiar . just like @xcite",
    ", this article further relies on @xcite , and familiarity with that self - contained , tutorial - style paper ( with proofs omitted ) is another prerequisite for reading the present piece of writing .    the sole purpose if the present article is to prove the soundness of the system @xmath7 introduced in @xcite .",
    "specifically , the goal is to prove clause 3 of theorem 2.6 of @xcite , which , slightly paraphrased , readsif a theory @xmath8 is regular , then there is an effective procedure that takes an arbitrary extended @xmath9-proof of an arbitrary sentence @xmath10 and constructs an @xmath11 tricomplexity solution for @xmathour soundness proof is written so that it can be read independently of the completeness proof given in @xcite .",
    "let us get started right now .",
    "assuming that a theory @xmath8 is regular , the above - displayed statement can be verified by induction on the number of steps in an extended @xmath12-proof of @xmath10 .",
    "the basis of this induction is a rather straightforward observation that all axioms have @xmath11 tricomplexity solutions .",
    "namely , in the case of peano axioms such a `` solution '' is simply a machine that does nothing .",
    "all axioms from @xmath13 have @xmath11 tricomplexity solutions by condition 1 of definition 2.5 of @xcite ; furthermore , according to the same condition , such solutions can be effectively obtained even when @xmath13 is infinite .",
    "finally , the successor , log and bit axioms can be easily seen to have linear amplitude , logarithmic space and polynomial ( in fact , linear ) time solutions and , in view of conditions 2 and 3 of definition 2.2 of @xcite , such solutions are automatically also @xmath11 tricomplexity solutions . as for the inductive step , it will be taken care of by the later - proven theorems [ fe ] , [ feb9ee ] and [ feb9eei ] , according to which the rules of logical consequence , @xmath14-comprehension and @xmath14-induction preserve  in a constructive sense  the property of having an @xmath11 tricomplexity solution .",
    "as we remember from @xcite , col understands algorithmic strategies as interactive turing machines called hpms ( hard - play machines).[xhpm ]    [ fe ] consider any regular boundclass triple @xmath14 .",
    "there is an ( @xmath14-independent ) effective procedure and [ feb9eei ] , as one can easily guess , @xmath14-independence of a procedure means that the procedure is the same regardless of what particular value @xmath14 assumes . ] that takes an arbitrary @xmath15-proof  @xmath16 of an arbitrary @xmath17-sequent _",
    "@xmath19 _ , arbitrary hpms @xmath20 and constructs an hpm @xmath21 such that , if @xmath20 are @xmath14 tricomplexity solutions of @xmath18 , respectively , then @xmath21 is an @xmath14 tricomplexity solution of @xmath22 .",
    "such an effective procedure is nothing but the one whose existence is stated in theorem 11.1 of @xcite .",
    "consider an arbitrary @xmath15-proof @xmath16 of an arbitrary @xmath17-sequent @xmath23 , and arbitrary hpms @xmath20 .",
    "let @xmath21[xmm1 ] be the hpm constructed for / from these parameters by the above procedure .",
    "assume @xmath11 is a regular boundclass triple , and @xmath20 are @xmath11 tricomplexity solutions of @xmath24 , respectively .",
    "all three components of @xmath11 are linearly closed by condition 3 of definition 2.2 of @xcite and , being boundclasses , they are also closed under syntactic variation .",
    "this means that , for some common triple @xmath25 of unary bounds , all @xmath26 machines run in tricomplexity @xmath27 .",
    "that is , we have :    1 .   for each @xmath28",
    ", @xmath29 is an @xmath30 amplitude , @xmath31 space and @xmath32 time solution of @xmath33 .    in view of conditions 2 and 5 of definition 2.2 of @xcite",
    ", we may further assume that :    1 .",
    "for any @xmath34 , @xmath35 .",
    "2 .   for any @xmath34 , @xmath36 .",
    "3 .   for any @xmath34 ,",
    "@xmath37 and @xmath38 .",
    "now , remembering that @xmath33 stands for @xmath39 , our condition ( i ) is the same as condition ( i ) of theorem 11.1 of @xcite with @xmath40 in the role of @xmath41 .",
    "next , taking into account that @xmath42 is the only constant that may appear in the @xmath17-sequent @xmath43 and hence the native magnitude of the latter is @xmath42 , our condition ( ii ) is the same as condition ( ii ) of theorem 11.1 of @xcite .",
    "finally , our conditions ( iii ) and ( iv ) are the same as conditions ( iii ) and ( iv ) of theorem 11.1 of @xcite .",
    "then , according to that theorem , there are numbers @xmath44 and @xmath45 such that @xmath21 is an @xmath46 amplitude , @xmath47 space and @xmath48 time solution of @xmath22 .",
    "but , by condition 2 ( if @xmath49 ) or 4 ( if @xmath50 ) of definition 2.2 of @xcite , we have @xmath51 , meaning that @xmath21 runs in amplitude @xmath52 . the fact @xmath51 , again by condition 4 of definition 2.2 of @xcite , further implies that @xmath53 and @xmath54 . the fact @xmath54 , in turn , by condition 3 of definition 2.2 of @xcite , further implies that @xmath55 .",
    "now , by remark 2.4 of @xcite , the facts @xmath56 and @xmath57 , together with the earlier observation that @xmath21 runs in @xmath47 space and @xmath48 time , imply that @xmath21 runs in space @xmath58 and time @xmath59 . to summarize",
    ", @xmath21 runs in tricomplexity @xmath11 , as desired .",
    "[ feb9ee ] consider any regular boundclass triple @xmath14 .",
    "there is an ( @xmath14-independent ) effective procedure that takes an arbitrary application - comprehension , it is fully determined by the comprehension formula and the comprehension bound .",
    "] of @xmath14-comprehension , an arbitrary hpm @xmath60 and constructs an hpm @xmath21 such that , if @xmath60 is an @xmath14 tricomplexity solution of the premise , then @xmath21 is an @xmath14 tricomplexity solution of the conclusion .",
    "the rest of this section is devoted to a proof of the above theorem .",
    "consider a regular boundclass triple @xmath14 .",
    "further consider an hpm @xmath60 , and an application @xmath61 of @xmath14-comprehension .",
    "let @xmath62 be a list of all free variables of @xmath63 other than @xmath64 , and let us correspondingly rewrite ( [ r3 ] ) as @xmath65 by condition 1 of definition 2.2 of @xcite , from the bound @xmath66 we can effectively extract an @xmath14 tricomplexity solution of @xmath67 .",
    "fix such a solution / algorithm and call it algo .",
    "assume @xmath60 is an @xmath68 tricomplexity solution of the premise of ( [ r33 ] ) .",
    "we want to construct an @xmath69 tricomplexity solution @xmath21[xmm2 ] for the conclusion of ( [ r33 ] ) .",
    "it should be noted that , while our claim of @xmath21 s being an @xmath69 tricomplexity solution of the conclusion of ( [ r33 ] ) relies on the assumption that we have just made regarding @xmath60 , our _ construction _ of @xmath21 itself does not depend on that assumption .",
    "it should also be noted that we construct @xmath21 as a single - work - tape machine .",
    "this is how @xmath21 works . at the beginning",
    ", it puts the symbol @xmath70 into its buffer .",
    "then it waits till environment specifies constants @xmath71 and @xmath72 for the free variables @xmath73 and @xmath74 of the conclusion of ( [ r33 ] ) . if environment never does so , then @xmath21 is an automatic winner .",
    "otherwise , the game is brought down to @xmath75 .",
    "now , using algo , @xmath21 computes and remembers the value @xmath76 of @xmath77 .",
    "condition 5 of definition 2.2 of @xcite guarantees that @xmath76 can be remembered with @xmath58 space .",
    "thus , recalling that algo runs in @xmath14 tricomplexity , the steps taken by @xmath21 so far do not take us beyond @xmath14 and hence , in view of remark 2.4 of @xcite , can be ignored in our asymptotic analysis when arguing that @xmath21 runs in @xmath14 tricomplexity .",
    "after these initial steps , @xmath21 starts acting according to the following procedure :    * procedure * :    _ step 1_. if @xmath78 , enter a move state and retire . otherwise , if @xmath79 , simulate the play of the premise of ( [ r33 ] ) by @xmath60 in the scenario where , at the very beginning of the play , @xmath60 s adversary chose the same constants @xmath72 for the variables @xmath74 as environment did in the real play of the conclusion and , additionally , chose @xmath80 for @xmath64 , where @xmath81 . if ( when ) the simulation shows that , at some point , @xmath60 chose the @xmath82-disjunct @xmath83 , decrement the value of @xmath76 by @xmath84 and repeat the present step . and if ( when ) the simulation shows that , at some point , @xmath60 chose the @xmath82-disjunct @xmath85 , decrement the value of @xmath76 by @xmath84 , put the bit @xmath84 into the buffer , and go to step 2 .",
    "_ step 2_. if @xmath78 , enter a move state and retire . otherwise , if @xmath79 , simulate the play of the premise of ( [ r33 ] ) by @xmath60 in the scenario where , at the very beginning of the play , @xmath60 s adversary chose the same constants @xmath72 for the variables @xmath74 as environment did in the real play of the conclusion and , additionally , chose @xmath80 for @xmath64 , where @xmath81 . if ( when ) the simulation shows that , at some point , @xmath60 chose the @xmath82-disjunct @xmath83 ( resp .",
    "@xmath85 ) , decrement the value of @xmath76 by @xmath84 , put the bit @xmath42 ( resp .",
    "@xmath84 ) into the buffer , and repeat the present step .",
    "it is not hard to see that , what @xmath21 did while following the above routine was that it constructed , in its buffer , the constant @xmath86 with @xmath87 , and then made @xmath88 as its only move in the play .",
    "this means that @xmath21 is a solution of the conclusion of ( [ r33 ] ) , as desired . and",
    ", of course , our construction of @xmath21 is effective .",
    "it thus remains to see that @xmath21 runs in @xmath89 tricomplexity . in what follows ,",
    "we implicitly rely on remark 2.4 of @xcite , the monotonicity of bounds and the obvious fact that the background of any cycle of the simulated @xmath60 does not exceed the background of ( the cycles of ) @xmath21 throughout its work within .",
    "the latter is the case because all moves that reside on @xmath60 s imaginary run tape  namely , the moves ( containing ) @xmath72  also reside on @xmath21 s run tape .",
    "since @xmath88 is the only move that @xmath21 makes , our earlier observation @xmath90 immediately implies that @xmath21 runs in amplitude @xmath91 , as desired .",
    "next , observe that the space that @xmath21 consumes while performing  is just the space needed to remember the value of the variable @xmath76 , plus the space needed to simulate @xmath60 .",
    "the value of @xmath76 never exceeds @xmath77 , remembering which , as we have already observed , does not take us beyond the target @xmath58 . in order to simulate @xmath60 , on its work tape @xmath21 does not need to keep track of @xmath60 s run tape , because information on that content is available on @xmath21 s own run tape .",
    "so , @xmath21 ( essentially ) only needs to keep track of @xmath60 s work - tape contents . by our assumption",
    ", @xmath60 runs in space @xmath31 .",
    "therefore , keeping track of its work - tape contents takes @xmath92 space , which is again within @xmath58 . to summarize , @xmath21 runs in space @xmath58 , as desired .",
    "finally , taking into account that @xmath60 runs in time @xmath32 and space @xmath31 , it is clear that the time needed for any given iteration of either step of  is @xmath93 .",
    "this is so because simulating each step of @xmath60 takes @xmath92 time , and there are @xmath94 steps to simulate .",
    "altogether , there are @xmath95 iterations of either step 1 or step 2 of .",
    "so , @xmath21 runs in time @xmath96 .",
    "then , in view of the fact that both @xmath97 and @xmath98 ( condition 5 of definition 2.2 of @xcite ) , we find that @xmath21 runs in time @xmath99 for some @xmath100 .",
    "but @xmath59 is polynomially closed ( condition 3 of definition 2.2 of @xcite ) , thus containing @xmath101 .",
    "so , @xmath21 runs in time @xmath59 , as desired .",
    "in this section we establish certain terminology and facts necessary for our subsequent proof of the soundness of the induction rule .",
    "a * numeric ( lab)move*[xnm ] means a ( lab)move ending in @xmath102 for some constant @xmath103 .",
    "we shall refer to such a @xmath103 as the * numer*[xnmr ] of the ( lab)move . to make the `` numer '' function total , we stipulate that the numer of a non - numeric move is @xmath42 ( is the empty string @xmath104 , that is ) .    consider a bounded formula @xmath22 .",
    "let @xmath26 be the number of occurrences of choice quantifiers in @xmath22 , and @xmath105 be the bounds used in those occurrences .",
    "let @xmath106 be the unarification ( cf .",
    "@xcite , section 12 ) of @xmath107 . here and elsewhere , as expected , @xmath108[xmax ] stands for the greatest of the numbers @xmath109 , and is understood as @xmath42 if @xmath110 .",
    "finally , let @xmath111 be the function defined by @xmath112 . here , as in section [ sfe ]",
    ", @xmath113 denotes the @xmath26-fold composition of @xmath114 with itself , i.e. , @xmath115 , with `` @xmath114 '' repeated @xmath116 times",
    ". then we call the functions @xmath114 and @xmath111 the * subaggregate bound*[xsubggf ] and the * superaggregate bound*[xab ] of @xmath22 , respectively . as an aside , for our purposes",
    ", a `` much smaller '' function could have been taken in the role of superaggregate bound , but why try to economize .",
    "[ lagg ] assume @xmath14 is a regular boundclass triple , @xmath22 is an @xmath58-bounded formula , and @xmath111 is the superaggregate bound of @xmath22",
    ". then @xmath117 .",
    "assume the conditions of the lemma .",
    "further let @xmath26 , @xmath105 , @xmath114 be as in the paragraph preceding lemma [ lagg ] . take a note of the fact that @xmath118 .",
    "if all tuples @xmath119 are empty , then ( @xmath114 and hence ) @xmath111 is a constant function and , by the linear closure of @xmath58 ,  @xmath117 .",
    "suppose now at least one of the tuples @xmath119 is nonempty .",
    "pick one variable @xmath120 among @xmath119 , and consider the pterm @xmath121 obtained from @xmath122 as a result of replacing all variables @xmath119 by @xmath120 . since @xmath58 is closed under syntactic variation as well as under @xmath123 , we have @xmath124 .",
    "but obviously @xmath125 .",
    "thus , @xmath126 . in view of condition 4 of definition 2.2 of @xcite , @xmath127 can be seen to imply @xmath128 , @xmath129 ,  .",
    "consequently , by the closure of @xmath58 under @xmath123 , @xmath130 . but @xmath131 .",
    "thus , @xmath117 .",
    "recall from @xcite that a * provident*[xprovid ] computation branch of a given hpm @xmath21 is one containing infinitely many configurations with empty buffer contents ( intuitively meaning that @xmath21 has actually made all moves that it has ever started to construct in its buffer ) .",
    "then , given a constant game @xmath132 , @xmath21 is said to play @xmath132 * providently * iff every computation branch of @xmath21 that spells a @xmath133-legal run of @xmath132 is provident .",
    "and @xmath21 is a * provident solution * of @xmath132 iff @xmath21 is a solution of @xmath132 and plays it providently .",
    "let @xmath134 be a bounded formula with all free variables displayed , @xmath111 be the superaggregate bound of @xmath135 , and @xmath136 be an @xmath26-tuple of constants .",
    "we say that a move @xmath137 is a * prudent * move[xprm ] of @xmath138 iff the size of the numer of @xmath137 does not exceed @xmath139 .",
    "the * @xmath138-prudentization*[xpz ] of @xmath137 is defined as the following move @xmath140 . if @xmath137 is a prudent move of @xmath138 ,",
    "then @xmath141 .",
    "suppose now @xmath137 is not a prudent move of @xmath138 , meaning that @xmath137 is a numeric move @xmath142 with an `` oversized '' numer @xmath103 .",
    "in this case we stipulate that @xmath143 , where @xmath144 ( as a bitstring ) is the longest initial segment of @xmath103 such that @xmath145 is a prudent move of @xmath138 .",
    "further consider any run @xmath146 and either player @xmath147 .",
    "we say that @xmath146 is a * @xmath148-prudent run*[xprrun ] of @xmath138 iff all @xmath148-labeled moves of @xmath146 are prudent moves of @xmath138 .",
    "when we simply say `` prudent '' without indicating a player , it means both @xmath149-prudent and @xmath133-prudent .",
    "further consider any machine @xmath21 . by saying that @xmath21 * plays @xmath138 prudently*,[xprpl ]",
    "we shall mean that , whenever @xmath150 is a @xmath133-legal run of @xmath151 generated by @xmath21 , @xmath146 is a @xmath149-prudent run of @xmath138 . on the other hand , when we say that @xmath21 * plays @xmath135 prudently * , we mean that , for any @xmath26-tuple @xmath152 of constants , @xmath21 plays @xmath138 prudently .",
    "a * prudent solution*[xprsol ] of @xmath135 means an hpm that wins @xmath135  wins @xmath151 , that is  and plays @xmath135 prudently .",
    "[ reason ] there is an effective procedure that takes an arbitrary bounded formula @xmath135 , an arbitrary hpm @xmath60 and constructs an hpm @xmath153 such that , for any regular boundclass triple @xmath14 , if @xmath135 is @xmath58-bounded and @xmath60 is an @xmath14 tricomplexity solution of @xmath135 , then @xmath153 is a provident and prudent @xmath14 tricomplexity solution of @xmath135 .",
    "@xmath153 is a machine that waits till @xmath151 is brought down to @xmath138 for some constants @xmath152 and then , through simulating and mimicking @xmath60 within the specified complexity constraints , plays @xmath138 just as @xmath60 would play it , with essentially the only difference that each ( legal ) move @xmath137 made by @xmath60 is made by @xmath153 in the prudentized form @xmath140 .",
    "this does not decrease the chances of @xmath154 ( compared with those of @xmath60 ) to win : imprudent moves are at best inconsequential and at worst disadvantageous ( resulting in a loss of the corresponding subgame ) for a player , so , if the machine wins the game while it makes the imprudent move @xmath137 , it would just as well ( and `` even more so '' ) win the game if it had made the prudent move @xmath140 instead .",
    "this is how prudence is achieved . as for providence",
    ", @xmath153 achieves it by never putting anything into its buffer unless it has already decided to make a move , after seeing that the simulated @xmath60 has moved .",
    "of course , the above strategy may yield some discrepancies between the contents of @xmath153 s run tape and @xmath60 s imaginary run tape : it is possible that the latter is showing a ( @xmath149-labeled ) move @xmath137 while the former is showing only a properly smaller part ( prudentization ) @xmath140 of @xmath137 . to neutralize this problem , every time the simulated @xmath60 is trying to read some symbol @xmath103 of @xmath137 on its run tape",
    ", @xmath153 finds @xmath103 through resimulating the corresponding portion of the work of @xmath60 .",
    "this , of course , results in @xmath153 s being slower than @xmath60 ; yet , due to @xmath14 s being regular , things can be arranged so that the running time of @xmath153 still remains within the admissible limits .    a detailed proof of lemma [ reason ] , which materializes the above idea , is given in appendix [ sap1 ] . it can be omitted rather safely by a reader so inclined .",
    "the same applies to the forthcoming lemma [ vasa ] , whose proof idea is presented in this section and whose relatively detailed proof is given in appendix [ sap2 ] .    when @xmath146 is a run , we let @xmath155 denote the result of deleting in @xmath146 all @xmath133-labeled ( resp .",
    "@xmath149-labeled ) moves .    for a constant game @xmath156 and",
    "run @xmath146 , we say that @xmath146 is a * @xmath149-quasilegal*[xqr ] ( resp . *",
    "@xmath133-quasilegal * ) run of @xmath156 iff there is a legal run @xmath157 of @xmath156 such that @xmath158 ( resp .",
    "@xmath159 ) .",
    "if we say `` * quasilegal*''[xqwsda ] without the prefix `` @xmath149- '' or `` @xmath133- '' , it is to be understood as `` both @xmath149-quasilegal and @xmath133-quasilegal '' .",
    "we say that an hpm @xmath21 * plays @xmath156 quasilegally*[xqp ] iff every run generated by @xmath21 is a @xmath149-quasilegal run of @xmath156 .",
    "a * quasilegal solution*[xqs ] of @xmath156 is a solution of @xmath156 that plays @xmath156 quasilegally .",
    "our definitions of `` @xmath21 plays ",
    "providently '' and `` @xmath21 plays ",
    "prudently '' , just like our earlier @xcite definitions of running within given complexity bounds , only look at ( computation branches that spell ) @xmath133-legal runs of a given game . below we define stronger  `` unconditional ''  versions of such concepts , where the adversary s having made an illegal move is no longer an excuse for the player to stop acting in the expected manner .",
    "namely :    we say that an hpm @xmath21 plays * unconditionally providently*,[xupp ] or that @xmath21 is * unconditionally provident * , iff all computation branches of @xmath21 are provident ( note that the game that is being played is no longer relevant ) .",
    "consider an hpm @xmath21 , a bounded formula @xmath160 with all free variables displayed , and an @xmath26-tuple @xmath136 of constants .",
    "we say that @xmath21 * plays @xmath138 unconditionally prudently*[xup ] iff , whenever @xmath150 is a run ( whether it be @xmath133-legal or not ) generated by @xmath21 , @xmath146 is a @xmath149-prudent run of @xmath138 .",
    "next , when we say that @xmath21 * plays @xmath135 unconditionally prudently * , we mean that , for any @xmath26-tuple @xmath152 of constants , @xmath21 plays @xmath138 unconditionally prudently .",
    "the following definition of the unconditional versions of our complexity concepts is obtained from definition 5.2 of @xcite by simply dropping the condition `` @xmath133-legal '' on the plays considered , and also removing any mention of a game @xmath156 that is being played because the latter is no longer relevant .",
    "[ deftcsunc ] let @xmath21 be an hpm , and @xmath161 a unary arithmetical function ( if @xmath161 is not unary , then it should be replaced by its unarification according to convention 12.2 of @xcite ) .",
    "we say that :    1 .   *",
    "@xmath21 runs ( plays ) in unconditional amplitude[x0amplitude ] @xmath161 * iff , in every computation branch of @xmath21 , whenever @xmath21 makes a move @xmath137 , the magnitude of @xmath137 does not exceed @xmath162 , where @xmath163 is the background of @xmath137 ; 2 .",
    "* @xmath21 runs ( plays ) in unconditional space @xmath161 * iff , in every computation branch of @xmath21 , the spacecost of any given clock cycle @xmath76 does not exceed @xmath162 , where @xmath163 is the background of @xmath76 ; 3 .",
    "* @xmath21 runs ( plays ) in unconditional time @xmath161 * iff , in every computation branch of @xmath21 , whenever @xmath21 makes a move @xmath137 , the timecost of @xmath137 does not exceed @xmath162 , where @xmath163 is the background of @xmath137 .",
    "the above definition and the related concepts naturally  in the same way as in the old , `` conditional '' cases  extend from bounds ( as functions ) to boundclasses , as well as bound triples or boundclass triples .",
    "for instance , where @xmath164 is a boundclass , we say that @xmath21 runs ( plays ) in * unconditional time @xmath164 * iff it runs in unconditional time @xmath161 for some @xmath165 ; where @xmath14 is a boundclass triple , we say that @xmath21 runs ( plays ) in * unconditional tricomplexity @xmath14 * iff it runs in unconditional amplitude @xmath166 , unconditional space @xmath58 and unconditional time @xmath59 ; etc .",
    "[ vasa ] there is an effective procedure that takes an arbitrary bounded formula @xmath135 , an arbitrary hpm @xmath153 and constructs an hpm @xmath21 such that , as long as @xmath153 is a provident solution of @xmath135 , the following conditions are satisfied :    1 .",
    "@xmath21 is a quasilegal and unconditionally provident solution of @xmath135 .",
    "if @xmath153 plays @xmath135 prudently , then @xmath21 plays @xmath135 unconditionally prudently .",
    "3 .   for any arithmetical functions @xmath167",
    ", if @xmath153 plays @xmath135 in tricomplexity @xmath27 , then @xmath21 plays in unconditional tricomplexity @xmath27 .",
    "[ 0id2 ] in our preliminary attempt of constructing @xmath21 , we let it be a machine that works exactly like @xmath153 , except that @xmath21 retires as soon as it detects that the play has gone illegal . this way , unlike @xmath153",
    ", @xmath21 is precluded from using environment s illegal actions as an excuse for some undesirable behavior of its own , such as making inherently illegal or oversized moves , or using excessive resources .",
    "that is , while @xmath153 `` behaves well '' only on the condition of environment playing legally , @xmath21 is guaranteed to `` behave well '' unconditionally , because in legal cases @xmath21 s behavior coincides with that of @xmath153 , and in illegal cases @xmath21 simply does not `` behave '' at all . an unretired or not - yet - retired @xmath21 consumes exactly the same amount of time and space as @xmath153 does , because keeping track of whether the play has gone illegal only requires maintaining a certain bounded amount of information , which can be done through state ( rather than work - tape ) memory and hence done without any time or space overhead whatsoever .",
    "the only problem with the above solution is that @xmath21 s buffer may not necessarily be empty at the time we want it to retire , and if so , then @xmath21 is not unconditionally provident .",
    "this minor complication is neutralized by letting @xmath21 , before retiring , extend ( if necessary ) the buffer content to a shortest possible move adding which to the already generated run does not destroy its @xmath149-quasilegality , and then empty the buffer by making such a move in the play .    in",
    "what follows , we will be using the word `` * reasonable*''[xreas ] ( `` * reasonably * '' ) as an abbreviation of `` quasilegal(ly ) and unconditionally prudent(ly ) '' .",
    "`` * unreasonable * '' ( `` * unreasonably * '' ) , as expected , means `` not reasonable '' ( `` not reasonably '' )",
    ". we can now strengthen lemma [ reason ] as follows :    [ mr22 ] there is an effective procedure that takes an arbitrary bounded formula @xmath135 , an arbitrary hpm @xmath60 and constructs an hpm @xmath21 such that , for any regular boundclass triple @xmath14 , if @xmath135 is @xmath58-bounded and @xmath60 is an @xmath14 tricomplexity solution of @xmath135 , then @xmath21 is a reasonable , unconditionally provident and unconditionally @xmath14 tricomplexity solution of @xmath135 .    immediately from lemmas [ reason ] and [ vasa ] .",
    "[ feb9eei ] consider any regular boundclass triple @xmath14 .",
    "there is an ( @xmath14-independent ) effective procedure that takes an arbitrary application of @xmath14-induction , arbitrary hpms @xmath168 and constructs an hpm @xmath21 such that , if @xmath60 and @xmath169 are @xmath14 tricomplexity solutions of the two premises , then @xmath21 is an @xmath14 tricomplexity solution of the conclusion .",
    "the rest of this long section is devoted to a proof of the above theorem .",
    "it should be noted that some ideas used in our proof are borrowed from @xcite .",
    "consider any regular boundclass triple @xmath14 and any application @xmath170 of @xmath171-induction .",
    "assume @xmath172  fix this number @xmath173[xvaq ]  are exactly the free variables of @xmath174 other than @xmath34 listed in the lexicographic order , and let us correspondingly rewrite ( [ r2 ] ) as @xmath175 further , assume that @xmath60 and @xmath169 are @xmath89 tricomplexity solutions of the left and the right premise of ( [ r22 ] ) , respectively . in view of lemma [ mr22 ] , we may and will assume that @xmath60 and @xmath169 are reasonable , unconditionally provident and unconditionally @xmath89 tricomplexity solutions of the corresponding premises . in view of the closure of all three components of @xmath14 under syntactic variation , in combination with the other relevant closure conditions from definition 2.2 of @xcite ,",
    "there is one common triple @xmath176 of unary bounds such that both @xmath60 and @xmath169 run in unconditional @xmath27 tricomplexity .",
    "fix these @xmath167 for the rest of this section .",
    "we want to construct an @xmath11 tricomplexity solution @xmath21[xmm3 ] of the conclusion of ( [ r22 ] ) .",
    "it is important to point out that , as in the case of comprehension , our construction of @xmath21 does not rely on the assumptions on @xmath60 and @xmath169 that we have just made . also , the pathological case of @xmath177 having no free occurrences of @xmath34 is trivial and , for the sake of simplicity , we exclude it from our considerations .",
    "@xmath21 will be designed as a machine with a single work tape .    as usual in such cases ,",
    "we adopt the clean environment assumption ( cf . section 8 of @xcite ) , according to which @xmath21 s adversary never makes illegal moves of the game under consideration .    at the beginning",
    ", our @xmath21 waits for environment to choose constants for all free variables of the conclusion of ( [ r22 ] ) .",
    "we rule out the possibility that the adversary never does so , because then @xmath21 is an automatic winner trivially running in zero amplitude , zero space and zero time unless it deliberately tries not to . for the rest of this section ,",
    "assume @xmath178 is the constant chosen for the variable @xmath34 , @xmath179 are the constants chosen for @xmath74 , and @xmath180 are the constants chosen for @xmath73 . since the case of @xmath181 is straightforward and not worth paying separate attention , for further simplicity considerations we will assume for the rest of this section that @xmath182 . from now on , we shall write @xmath183[xfp ] as an abbreviation of @xmath184 .",
    "the above event of environment s initial choice of constants brings the conclusion of ( [ r22 ] ) down to @xmath185 , i.e. , to @xmath186 .",
    "@xmath21 computes @xmath187 and compares it with @xmath188 . by condition 1 of definition 2.2 of @xcite , this can be done in space @xmath58 and time @xmath59 .",
    "if @xmath189 is false , @xmath21 retires , obviously being the winner and satisfying the expected complexity conditions . for the rest of this section , we rule out this straightforward case and , in the scenarios that we consider ,",
    "assume that @xmath189 is true.[212014 ]    we shall write @xmath190[xhnill1 ] as an abbreviation of the phrase `` @xmath191 in the scenario where the adversary , at the beginning of the play , has chosen the constants @xmath152 for the variables @xmath74 '' .",
    "so , for instance , when saying that @xmath192 moves on cycle @xmath193 , it is to be understood as that , in the above scenario , @xmath191 moves on cycle @xmath193 .",
    "as we see , strictly speaking , @xmath192 is not a separate `` machine '' but rather it is just @xmath191 in a certain partially fixed scenario . yet , for convenience and with some abuse of language , in the sequel we may terminologically and even conceptually treat @xmath192 as if it was a machine in its own right  namely , the machine that works just like @xmath191 does in the scenario where the adversary , at the beginning of the play , has chosen the constants @xmath152 for the variables @xmath74 .",
    "similarly , for any @xmath194 , we will write @xmath195[xhnill2 ] for the `` machine '' that works just like @xmath196 does in the scenario where the adversary , at the beginning of the play , has chosen the constants @xmath152 for the variables @xmath74 and the constant @xmath197 for the variable @xmath34 .",
    "so , @xmath190 ( thought of as a machine ) wins the constant game @xmath198 and , for each @xmath194 , @xmath195 wins the constant game @xmath199 .    in the same style as the notation @xmath200",
    "is used , we write @xmath201[xmk ] for the `` machine '' that works just like @xmath202 does after the above event of environment s having chosen @xmath188 , @xmath152 and @xmath180 for @xmath34 , @xmath74 and @xmath73 , respectively .",
    "so , in order to complete our description of @xmath21 , it will suffice to simply define @xmath201 and say that , after environment has chosen constants for all free variables of the conclusion of ( [ r22 ] ) , @xmath21 continues playing like ( `` turns itself into '' ) @xmath201 .",
    "correspondingly , in showing that @xmath21 wins @xmath203 , it will be sufficient to show that @xmath201 wins @xmath186 .",
    "[ apology ] it should be noted that our treating of @xmath204 and @xmath201 as `` machines '' may occasionally generate some ambiguity or terminological inconsistencies , for which the author wants to apologize in advance . for instance ,",
    "when talking about the content of @xmath192 s run tape or the run spelled by a given computation branch of @xmath192 , @xmath191 s adversary s initial moves @xmath205 may or may not be meant to be included . such ambiguities or inconsistencies , however , can usually be easily resolved based on the context .    in the informal description",
    "below , we use the term `` * synchronizing*''[xsync ] to mean applying copycat between two ( sub)games of the form @xmath156 and @xmath206 .",
    "this means mimicking one player s moves in @xmath156 as the other player s moves in @xmath206 , and vice versa .",
    "the effect achieved this way is that the games to which @xmath156 and @xmath206 eventually evolve ( the final positions hit by them , that is ) will be of the form @xmath207 and @xmath208  that is , one will remain the negation of the other , so that one will be won by a given player iff the other is lost by the same player .",
    "the idea underlying the work of @xmath201 can be summarized by saying that what @xmath201 does is a synchronization between @xmath209 games , real or imaginary ( simulated ) .",
    "namely :    * it synchronizes the imaginary play of @xmath198 by @xmath190 with the antecedent of the imaginary play of @xmath210 by @xmath211 . * for each @xmath26 with @xmath212 , it synchronizes the consequent of the imaginary play of @xmath213 by @xmath195 with the antecedent of the imaginary play of @xmath214 by @xmath215 .",
    "* it ( essentially ) synchronizes the consequent of the imaginary play of @xmath216 by @xmath217 with the real play in the consequent of @xmath186 .",
    "therefore , since @xmath190 wins @xmath198 and each @xmath195 with @xmath218 wins @xmath213 , @xmath201 wins @xmath186 and thus @xmath21 wins ( the @xmath219-closure of ) @xmath220 , as desired .",
    "if space complexity was of no concern , a synchronization in the above - outlined style could be achieved by simulating all imaginary plays in parallel .",
    "our general case does not allow us doing so though , and synchronization should be conducted in a very careful way .",
    "namely , a parallel simulation of all plays is not possible , because there are up to @xmath221 simulations to perform , and there is no guarantee that this does not take us beyond the @xmath58 space limits .",
    "so , instead , simulations should be performed is some sequential rather than parallel manner , with subsequent simulations recycling the space used by the previous ones , and with the overall procedure keeping forgetting the results of most previous simulations and recomputing the same information over and over many times .",
    "we postpone our description of how @xmath201 exactly works to section [ sn ] , after having elaborated all necessary preliminaries in sections [ sagree]-[saggr ] .",
    "[ not1 ]    _ we agree that throughout the rest of section [ ssind ] : _    1 .",
    "@xmath222[xl ] denotes the length @xmath223 of the greatest constant @xmath144 among @xmath224 .",
    "2 .   @xmath225 ( resp .",
    "@xmath226 ) is the maximum number of @xmath149-labeled ( resp .",
    "@xmath133-labeled ) moves in any legal run of @xmath198,[xe ] and @xmath227 .",
    "@xmath111[xagrba ] is the superaggregate bound of @xmath177 .",
    "4 .   @xmath228[xlla ] abbreviates @xmath229 where @xmath173 , as we remember , is the number of variables in @xmath74 , and : * @xmath230[xrqa ] is the maximum number of states of the two machines @xmath191 and @xmath196 ; * @xmath231[xgqa ] is the maximum number of work tapes of the two machines @xmath191 and @xmath196 ; * @xmath232[xqqa ] is the maximum number of symbols that may ever appear on any of the tapes of the two machines @xmath191 and @xmath196 ; * @xmath233[xhqa ] is the length of the longest string @xmath234 containing no @xmath70 such that @xmath234 is a prefix of some move of some legal run of @xmath198 .    in the sequel",
    ", we may say about a machine or its adversary that it plays so and so ( reasonably , prudently , etc . ) without mentioning the context - setting game that is played .",
    "as expected , it will be understood that , in such cases , the game is : @xmath203 if the machine is @xmath21 ; @xmath235 if the machine is @xmath60 ; @xmath236 if the machine is @xmath169 ; @xmath198 if the machine is @xmath192 ; @xmath199 if the machine is @xmath200 with @xmath218 ; and @xmath186 if the machine is @xmath201 .",
    "below , @xmath237 denotes the sequence of @xmath173 @xmath133-labeled moves signifying the choice of the constants @xmath152 for the free variables @xmath74 of @xmath238  that is , @xmath239 . and",
    "@xmath240 , for @xmath241 , denotes the sequence of @xmath242 @xmath133-labeled moves signifying the choice of the constants @xmath243 and @xmath152 for the free variables @xmath34 and @xmath74 of @xmath244 , respectively .",
    "whenever we say that @xmath200 s * adversary plays quasilegally*,[xgh ] we shall mean that we are only considering the runs @xmath146 generated by @xmath200 ( i.e. , runs @xmath245 generated by @xmath60 and runs @xmath246 generated by @xmath169 ) such that @xmath146 is a @xmath133-quasilegal run of @xmath198 ( if @xmath110 ) or @xmath199 ( if @xmath194 ) . similarly for the adversary s playing * unconditionally prudently * or * reasonably*. by the * symbolwise length*[xsyl ] of a position @xmath247 we shall mean the number of cells that @xmath247 takes when spelled on the run tape .",
    "similarly for labmoves .",
    "[ m29aaa ] for any @xmath248 , at any time in any play by @xmath200 , as long as @xmath200 s adversary plays reasonably , the symbolwise length of the position spelled on the run tape of @xmath200 does not exceed @xmath249 .",
    "any position spelled on the run tape of @xmath200 looks like @xmath246 .",
    "the symbolwise length of the @xmath240 part is at most @xmath250 , with @xmath242 being the ( maximum ) number of labmoves in @xmath240 and @xmath251 being the maximum symbolwise length of each labmove , including the prefix @xmath252 . by our assumption , @xmath200 ( if @xmath194 ) or @xmath169 ( if @xmath110 ) , to be more precise .",
    "] plays reasonably .",
    "the present lemma additionally assumes that so does @xmath200 s adversary .",
    "if so , it is obvious that the symbolwise length of no labmove in the @xmath146 part can exceed @xmath253 ; and there are at most @xmath254 such labmoves .",
    "the symbolwise length of the @xmath146 part is thus at most @xmath255 .",
    "the following lemma states that the @xmath200 s move soon enough or never , with @xmath256 acting as a `` statute of limitations '' function :    [ m29a ] consider any machine @xmath257 , and any cycle ( step , time ) @xmath76 of any play by @xmath200 .",
    "assume that @xmath258 is the spacecost of cycle @xmath259 .",
    "further assume that the adversary of @xmath200 plays reasonably , and it does not move at any time @xmath86 with @xmath260",
    ". then @xmath200 does not move at any time @xmath86 with @xmath261 .",
    "assume the conditions of the lemma and , remembering that ( not only @xmath200 s adversary but also ) @xmath200 plays reasonably , answer the following question : how many different configurations of @xmath200  ignoring the buffer content component  are there that may emerge in the play between ( including ) steps @xmath76 and @xmath259 ?",
    "we claim that this quantity can not exceed @xmath262 .",
    "indeed , there are at most @xmath230 possibilities for the state component of such a configuration .",
    "these possibilities are accounted for by the 1st of the five factors of @xmath262 .",
    "next , clearly there are at most @xmath263 possibilities for the locations of the work - tape heads , which is accounted for by the 2nd factor of @xmath262 .",
    "next , in view of lemma [ m29aaa ] , there are at most @xmath264 possible locations of the run - tape head , and this number is accounted for by the 3rd factor of @xmath262 .",
    "next , there are at most @xmath265 possibilities for the contents of the @xmath231 work tapes , and this number is accounted for by the 4th factor of @xmath262 .",
    "finally , the run - tape content can change ( be extended ) at most @xmath254 times , and this number is accounted for by the 5th factor of @xmath262 .",
    "thus , there are at most @xmath262 possible configurations ( ignoring the buffer content component ) , as promised .",
    "if so , some configuration repeats itself between steps @xmath76 and @xmath259 , meaning that @xmath200 is in a loop which will be repeated again and again forever . within that loop",
    "@xmath200 makes no moves , for otherwise the run - tape - content component of the configurations would keep changing ( expanding ) .",
    "we define an * organ*[xorgan ] to be a pair @xmath266 , where @xmath267 , called the * payload*[xpayload ] of @xmath268 , is a ( possibly empty ) finite sequence of moves , and @xmath269 , called the * scale*[xscale ] of @xmath268 , is a positive integer .    a * signed organ*[xsuperorgan ] @xmath270 is @xmath271 or @xmath272 , where @xmath268 is an organ . in the first case",
    "we say that @xmath270 is * negative*,[xneggg ] and in the second case we say that it is * positive*.[xpostv ] the * payload * and the * scale * of such an @xmath270 mean those of @xmath268 .",
    "a * body*[xbody ] is a tuple @xmath273 of organs .",
    "the number @xmath274 is said to be the * size*[xsize ] of such a body @xmath275 .    a * @xmath276-appropriate triple*[xsat ]",
    "is @xmath277 , where @xmath248 , @xmath275 is a nonempty body , and @xmath156 is a body required to be empty if @xmath110 .",
    "our @xmath201 simulates the work of the machines @xmath204 through running the procedure @xmath276[xsim1 ] defined below .",
    "this procedure takes a @xmath276-appropriate triple @xmath277 as an argument , and returns a pair @xmath278 , where @xmath270 is a signed organ and @xmath258 is a natural number .",
    "we indicate this relationship by writing @xmath279 .",
    "we usually understand @xmath280 as the two - argument procedure  and/or the corresponding function  resulting from fixing the third argument of @xmath276 to @xmath26 .",
    "similarly for the later - defined @xmath281 , @xmath282 , @xmath283 .    we first take a brief informal look at @xmath284 with @xmath218 ( @xmath285 needs to be considered separately ) .",
    "assume @xmath286 and @xmath287 .",
    "the argument @xmath288 determines the scenario of the work of @xmath200 that needs to be simulated . in this scenario , the moves made by @xmath200 s adversary in the antecedent ( resp .",
    "consequent ) of @xmath199 come from @xmath289 ( resp .",
    "@xmath290 ) .",
    "the simulation starts by `` _ fetching _ '' the organ @xmath291 from @xmath275 and tracing the first @xmath292 steps of @xmath200 in the scenario where , at the very beginning of the play , i.e. , on clock cycle @xmath42 , the adversary made the moves @xmath293 in the consequent of @xmath199 , all at once . which organ is fetched next depends on how things have evolved so far , namely , on whether within the above @xmath292 steps @xmath200 has responded by a nonempty or empty sequence @xmath294 of moves in the consequent of @xmath199 . if @xmath295 , then the next organ to be fetched will be the first not - yet - fetched organ of @xmath275 , i.e. , @xmath296 ; and if @xmath297 , then the next organ to be fetched will be the first not - yet - fetched organ of @xmath156 , i.e. , @xmath298 .",
    "after fetching such an organ @xmath299 , the simulation of @xmath200 rolls back to the point @xmath300 at which @xmath200 made its last move ( if there are no such moves , then @xmath301 ) , and continues from there for additional @xmath302 steps in the scenario where , at the very beginning of the episode , i.e. , at step @xmath300 , @xmath200 s imaginary adversary responded by the moves @xmath303 , all at once , in the corresponding component ( consequent if @xmath295 and antecedent if @xmath297 ) of @xmath199 . as in the preceding case ,",
    "what to fetch next  the leftmost not - yet - fetched organ of @xmath275 or that of @xmath156  depends on whether within the above @xmath302 steps ( i.e. , steps @xmath300 through @xmath304 ) @xmath200 responds by a nonempty or an empty sequence of moves in the consequent of @xmath199 . and similarly for the subsequent steps : whenever @xmath200 responds to the last series @xmath305 ( resp .",
    "@xmath306 ) of the imaginary adversary s moves with a nonempty sequence @xmath294 of moves in the consequent of @xmath199 within @xmath307 ( resp .",
    "@xmath308 ) steps , the next organ @xmath309 to be fetched will be the first not - yet - fetched organ of @xmath275 ; otherwise such a @xmath309 will be the first not - yet - fetched organ of @xmath156 . in either case ,",
    "the simulation of @xmath200 rolls back to the point @xmath300 at which @xmath200 made its last move , and continues from there for additional @xmath302 steps in the scenario where , at step @xmath300 , @xmath200 s imaginary adversary responded by the moves @xmath303 in the corresponding component ( consequent if @xmath310 and antecedent if @xmath311 ) of the game .",
    "the overall procedure ends when it tries to fetch the next not - yet - fetched organ of @xmath156 ( resp .",
    "@xmath275 ) but finds that there are no such organs remaining .",
    "then the @xmath270 part of the output @xmath278 of @xmath312 is stipulated to be @xmath313 ( resp .",
    "@xmath314 ) , where @xmath315 is the sequence of moves made by @xmath200 in the antecedent ( resp . consequent ) of @xmath199 since the last organ of @xmath156 ( resp .",
    "@xmath275 ) was fetched , and @xmath302 is the scale of that organ . as for the @xmath258 part of the output @xmath278 ,",
    "in either case it is simply the maximum number of non - blank cells on any ( any _ one _ ) work tape of @xmath200 at the end of the simulated episode .",
    "the case of @xmath316 is similar but simpler .",
    "in fact , @xmath317 is a special case of @xmath312 if we think of @xmath198 as the implication @xmath318 with the dummy antecedent @xmath319 .    in order to be able to define @xmath285 or @xmath284 ( @xmath320 ) more formally ,",
    "we need a couple of notational conventions .",
    "when @xmath321 is a sequence of moves , @xmath322 is a string over the keyboard alphabet ( such as , say , `` @xmath323 '' , `` @xmath324 '' or the empty string ) and @xmath148 is one of the players @xmath149 or @xmath133 , we shall write @xmath325[xder ] for the run @xmath326",
    ".    next , when @xmath327 is a configuration of @xmath200 ( @xmath328 ) and @xmath329 is a finite sequence of labmoves , we shall write @xmath330[xopl ] to denote the configuration that results from @xmath327 by appending @xmath329 to the ( description of the ) run - tape content component of @xmath327 .    in precise terms",
    ", this is how the * procedure @xmath316 * works .",
    "it creates two integer - holding variables @xmath103 and @xmath258 , with @xmath103 initialized to @xmath84 and @xmath258 to @xmath42 .",
    "it further creates a variable @xmath294 to hold move sequences , initialized to the empty sequence @xmath331 .",
    "it further creates a configuration - holding variable @xmath327 , initialized to the start configuration of @xmath192 where the run tape is empty ( and , of course , so are the work tapes and the buffer ) .",
    "finally , it creates two signed - organ - holding variables @xmath270 and @xmath332 , with @xmath270 having no initial value and @xmath332 initialized to @xmath272 , where @xmath268 is the first organ of @xmath275 ( remember that @xmath275 is required to be nonempty ) .",
    "may seem redundant at this point , as @xmath316 ( and likewise @xmath312 with @xmath194 ) could be defined in a simpler way without it .",
    "the reason why we want to have @xmath270 will become clear in section [ stf ] .",
    "similarly , in the present case we could have done without the variable @xmath332 as well  it merely serves the purpose of `` synchronizing '' the cases of @xmath110 and @xmath194 . ] after this initialization step , the procedure goes into the following loop @xmath333 .",
    "each iteration of the latter simulates a certain number of steps of @xmath334 starting from a certain configuration ( namely , the then - current value of @xmath327 ) in the scenario where @xmath192 s imaginary adversary makes no moves other than those already present in configuration @xmath327 ( i.e. , already made by the time @xmath327 was reached ) .",
    "* procedure @xmath333 * : let @xmath335 be the value of @xmath332 ( @xmath332 never takes negative values when @xmath110 ) . change the value of @xmath327 to @xmath336 .",
    "then simulate / trace @xmath269 steps of @xmath192 starting from configuration @xmath327 . while performing this simulation , keep track of the maximum number of non - blank cells on any ( any one ) of the work tapes of @xmath192 , and increment @xmath258 to that number every time the latter exceeds @xmath258 .",
    "also , every time @xmath192 makes a move @xmath337 , update @xmath294 by adding @xmath337 at the end of it , and , additionally , update @xmath327 to the configuration in which such a move @xmath337 was made . once the simulation of @xmath269 steps is complete , do the following .",
    "if @xmath294 is empty , set the value of @xmath270 to @xmath338 and return @xmath278 .",
    "suppose now @xmath294 is nonempty . in this case",
    "set the value of @xmath270 to @xmath339 .",
    "then , if @xmath103 equals the size of @xmath275 , return @xmath278 .",
    "otherwise , increment @xmath103 to @xmath340 , set @xmath332 to the @xmath103th organ of @xmath275 prefixed with `` @xmath123 '' , and repeat @xmath333 .",
    "next , this is how the * procedure @xmath312*[xsim ] exactly works when @xmath194 .",
    "it creates three integer - holding variables @xmath341 , with @xmath103 initialized to @xmath84 and @xmath342 to @xmath42 .",
    "keeps track of how many organs of @xmath275 have been fetched so far , and @xmath144 does the same for @xmath156 . ] it further creates two move - sequence - holding variables @xmath343 and @xmath294 , both initialized to the empty sequence @xmath331 .",
    "it further creates a configuration - holding variable @xmath327 , initialized to the start configuration of @xmath200 where the run tape is empty .",
    "finally , it creates two signed - organ - holding variables @xmath270 and @xmath332 , with @xmath270 having no initial value and @xmath332 initialized to @xmath272 , where @xmath268 is the first organ of @xmath275 .",
    "after this initialization step , the procedure goes into the following loop @xmath344 .",
    "as before , each iteration of the latter simulates a certain number of steps of @xmath345 starting from a certain configuration ( namely , @xmath327 ) in the scenario where the imaginary adversary makes no new moves .",
    "* procedure @xmath344 * : let @xmath335 ( resp .",
    "@xmath346 ) be the value of @xmath332 .",
    "change the value of @xmath327 to @xmath347 ( resp .",
    "@xmath348 ) . then simulate / trace @xmath269 steps of @xmath200 starting from configuration @xmath327 . while performing this simulation , keep track of the maximum number of non - blank cells on any of the work tapes of @xmath200 , and increment @xmath258 to that number every time the latter exceeds @xmath258 .",
    "also , every time @xmath200 makes a move @xmath337 in the antecedent ( resp .",
    "consequent ) of the game , update @xmath343 ( resp .",
    "@xmath294 ) by adding @xmath337 at the end of it , and , additionally , update @xmath327 to the configuration in which such a move @xmath337 was made .",
    "once the simulation of @xmath269 steps is complete , do the following .    * if @xmath294 is nonempty , set the value of @xmath270 to @xmath339 .",
    "then , if @xmath103 equals the size of @xmath275 , return @xmath278 ; otherwise , increment @xmath103 to @xmath340 , set @xmath332 to the @xmath103th organ of @xmath275 prefixed with `` @xmath123 '' , reset @xmath294 to @xmath331 , and repeat @xmath344 . *",
    "if @xmath294 is empty , set the value of @xmath270 to @xmath349 .",
    "then , if @xmath144 equals the size of @xmath156 , return @xmath278 .",
    "otherwise , increment @xmath144 to @xmath350 , set @xmath332 to the @xmath144th organ of @xmath156 prefixed with `` @xmath351 '' , reset @xmath343 to @xmath331 , and repeat @xmath344 .    for a @xmath276-appropriate triple @xmath277 , we shall write @xmath352 to refer to the signed organ @xmath270 such that @xmath353 for some ( whatever ) @xmath258 .    later , we may write @xmath354 to refer to either the _ procedure _ @xmath280 applied to arguments @xmath156 and @xmath275 , or to the _ output _ @xmath278 of that procedure on the same arguments",
    ". it will be usually clear from the context which of these two is meant . the same applies to @xmath355 which , seen as a procedure , runs exactly like @xmath312 , and only differs from the latter in that it just outputs @xmath270 rather than @xmath278 .",
    "consider any two bodies @xmath356 and @xmath357 .",
    "we say that @xmath358 is an * extension*[xbe ] of @xmath275 , and that @xmath275 is a * restriction*[xbr ] of @xmath358 , iff @xmath359 and @xmath360 .",
    "as expected , `` * proper extension * '' means `` extension but not restriction '' .",
    "similarly for `` * proper restriction * '' .    [ golemma ] consider any @xmath276-appropriate triple @xmath277 .    1 .",
    "if @xmath355 is negative , then , for every extension @xmath358 of @xmath275 , @xmath361 .",
    "2 .   if @xmath355 is positive and @xmath362 , then , for every extension @xmath207 of @xmath156 , @xmath363 .",
    "3 .   whenever @xmath355 is positive , the size of @xmath275 does not exceed @xmath225 .",
    "clauses 1 - 2 can be verified through a straightforward analysis of the work of @xmath284 . for clause 3 ,",
    "assume @xmath364 , and let @xmath274 be the size of @xmath275 .",
    "observe that , in the process of computing @xmath312 , the payloads of all positive values that the variable @xmath270 ever takes , including its last value @xmath335 , are nonempty .",
    "all such payloads consist of moves made by @xmath200 in the consequent of @xmath199 . from the work of @xmath284",
    "we can see that altogether there are @xmath274 positive values taken by @xmath270 .",
    "now , remembering our assumption that @xmath200 plays quasilegally , implying that it does not make more than @xmath225 moves in the consequent of @xmath199 , it is clear that @xmath274 can not exceed @xmath225 .    by a * saturated*[xsaturated ]",
    "triple we shall mean a @xmath276-appropriate triple @xmath277 such that :    1 .",
    "if @xmath355 is negative , then , for every nonempty proper restriction @xmath358 of @xmath275 , @xmath365 is positive .",
    "if @xmath355 is positive , then , for every proper restriction @xmath207 of @xmath156 , @xmath366 is negative .    for a body @xmath273 , we will write @xmath367[xbodd ] ( resp",
    ". @xmath368 ) to denote the body @xmath369 ( resp .",
    "@xmath370 ) obtained from @xmath275 by deleting each @xmath371 with an even ( resp .",
    "odd ) @xmath116 .",
    "[ ap20a ] consider a saturated triple @xmath277 .",
    "let @xmath372 and @xmath373 .",
    "further let @xmath374 be the ( sequence of the ) negative values that the variable @xmath270 of the procedure @xmath284 goes through when computing @xmath354 , and let @xmath375 be the ( sequence of the ) positive values that @xmath270 goes through .",
    "observe that @xmath376 and @xmath377 .    1 .",
    "we define @xmath378[xslar ] as the body @xmath379  that is , the ( unique ) body @xmath380 such that @xmath381 and @xmath382 .",
    "2 .   we define @xmath383[xsrar ] as the body @xmath384  that is , the ( unique ) body @xmath380 such that @xmath385 and @xmath386 .",
    "let @xmath387 be a body .",
    "we define @xmath388 as the run @xmath389 obtained from @xmath390 by replacing each @xmath306 ( @xmath391 ) with @xmath392 if @xmath116 is odd , and with @xmath393 if @xmath116 is even .    some more notation and terminology .",
    "when @xmath146 and @xmath157 are runs , we write @xmath394[xx85 ] to mean that @xmath146 is a ( not necessarily proper ) initial segment of @xmath157 .",
    "next , as always in col , @xmath395[xnki ] means the result of changing in @xmath146 each label @xmath149 to @xmath133 and vice versa .",
    "@xmath396[xgnol ] means the result of deleting from @xmath146 all moves ( together with their labels , of course ) except those of the form @xmath397 , and then further deleting the prefix `` @xmath323 '' in the remaining moves . similarly for @xmath398 . intuitively , when @xmath146 is a play of a parallel disjunction @xmath399 or conjunction @xmath400 of games , @xmath396 ( resp .",
    "@xmath398 ) is the play that has taken place  according to the scenario of @xmath146  in the @xmath401 ( resp .",
    "@xmath402 ) component .",
    "[ ap20b ] consider any saturated @xmath276-appropriate triple @xmath277 .",
    "let @xmath403 , where @xmath404 .    1 .   the case of @xmath110 ( and hence @xmath405 ) : 1 .",
    "there is a run @xmath406 generated by @xmath192 such that @xmath407 .",
    "2 .   furthermore , if @xmath408 is a reasonable run of @xmath198 and @xmath409 , then , for such an @xmath406 , we simply have @xmath410 .",
    "the case of @xmath218 : 1 .",
    "there is a run @xmath406 generated by @xmath200 such that @xmath411 and @xmath412 .",
    "2 .   furthermore",
    ", if @xmath413 is negative , @xmath414 is a reasonable run of @xmath415 , @xmath416 is a reasonable run of @xmath417 and @xmath409 , then , for such an @xmath406 , we simply have @xmath418 and @xmath419",
    ".    assume the conditions of the lemma .",
    "let @xmath286 and @xmath287 .",
    "further let @xmath420 ,  , @xmath421 be the negative values that the variable @xmath270 of the procedure @xmath284 goes through when computing @xmath354 , and let @xmath422 ,  , @xmath423 be the positive values that @xmath270 goes through .    1 .",
    "assume @xmath110 , and thus @xmath405 , i.e. , @xmath424 .",
    "analyzing the definitions of @xmath285 and @xmath425 and taking into account that @xmath426 is saturated , we see that , what the procedure @xmath427 does is that it simulates the first @xmath193 steps of a certain computation branch @xmath380 of @xmath192 for a certain @xmath193 with @xmath428 , and the position spelled on @xmath192 s imaginary run tape by the end of this episode ( without counting the initial moves @xmath429  see remark [ apology ] ) is nothing but @xmath430 .",
    "let @xmath406 be the run spelled by @xmath380 .",
    "then @xmath406 satisfies the promise of clause 1(a ) of the lemma . for clause 1(b ) , additionally assume that @xmath430 is a reasonable run of @xmath198 and @xmath409 .",
    "we may assume that , in the above branch @xmath380 , @xmath192 s adversary makes no moves after ( beginning from ) time @xmath431 .",
    "then , by lemma [ m29a ] , @xmath192 makes no moves after ( beginning from ) time @xmath193 .",
    "thus , the run @xmath406 contains no labmoves in addition to those that are in @xmath432 , meaning that @xmath433 , as desired .",
    "2 .   assume @xmath218 .",
    "again , taking into account that @xmath277 is saturated , we can see that , what the procedure @xmath434 does is that it simulates the first @xmath193 steps of a certain computation branch @xmath380 of @xmath200 for a certain number @xmath193 with @xmath435 . note that here @xmath436 is either @xmath437 or @xmath438 .",
    "let @xmath247 be the position spelled on @xmath200 s imaginary run tape by the end of this episode .",
    "it is not hard to see that @xmath439 .",
    "further , if @xmath413 is negative , then we also have @xmath440 .",
    "otherwise , if @xmath413 is positive , @xmath441 is a ( not necessarily proper ) extension of @xmath442 through some @xmath149-labeled moves .",
    "let @xmath406 be the run spelled by @xmath380 .",
    "then , in view of the observations that we have just made , @xmath406 satisfies the promise of clause 2(a ) of the lemma .",
    "+ for clause 2(b ) , additionally assume that @xmath413 is negative , @xmath414 is a reasonable run of @xmath415 , @xmath443 is a reasonable run of @xmath417 , and @xmath409 . as observed in the preceding paragraph , on our present assumption of @xmath413 s",
    "being negative , we have @xmath440 and @xmath439 .",
    "we may assume that , in the above branch @xmath380 , @xmath200 s adversary makes no moves after ( beginning from ) time @xmath431 .",
    "then , by lemma [ m29a ] , @xmath200 makes no moves after ( beginning from ) time @xmath193 .",
    "thus , the run @xmath406 contains no labmoves in addition to those that are ( after removing the prefixes `` @xmath323 '' and `` @xmath324 '' ) in @xmath444 and @xmath414 , meaning that @xmath445 and @xmath418 , as desired .      by an * entry*[xentry ]",
    "we shall mean a pair @xmath446 $ ] , where @xmath26 , called the * index*[xindex ] of @xmath447 , is an element of @xmath448 , and @xmath275 , called the * body of @xmath447*,[xbodyof ] is a body .",
    "the * size * of an entry @xmath447 should be understood as the size of its body . by saying that an entry is * @xmath26-indexed",
    "* we shall mean that @xmath26 is the index of that entry .",
    "an * aggregation * is a nonempty finite sequence @xmath449 of entries such that :    1 .",
    "the last entry of @xmath449 is @xmath188-indexed , and its body is odd - size .",
    "we call it the * master entry*[xheadentry ] of @xmath449 , and call all other entries ( if there are any ) * common entries*.[xtailentry ] 2",
    ".   the indices of the entries of @xmath449 are strictly increasing .",
    "that is , the index of any given entry is strictly smaller than the index of any entries to the right of it .",
    "each even - size entry ( if there are such entries ) is to the left of each odd - size entry .",
    "4 .   the sizes of the even - size entries are strictly decreasing .",
    "that is , the size of any even - size entry is strictly smaller than the size of any ( even - size ) entry to the left of it .",
    "5 .   the sizes of the odd - size common entries are strictly increasing .",
    "that is , the size of any odd - size common entry is strictly smaller than the size of any ( odd - size ) common entry to the right of it .",
    "there are no entries of size @xmath42 .",
    "the * central triple*[xcentral ] of an aggregation @xmath449 is @xmath450 , where :    1 .",
    "@xmath26 is the index of the leftmost odd - size entry of @xmath449 .",
    "@xmath332 is the body of the above @xmath26-indexed entry of @xmath449 .",
    "if @xmath449 does not have an entry whose index is @xmath243 , . ]",
    "then @xmath451 is the empty body @xmath452 . otherwise , @xmath451 is the body of the @xmath453-indexed entry of @xmath449 .",
    "consider any aggregation @xmath449 .",
    "the * master body * of @xmath449 is the body of the master entry of @xmath447 ; the * master organ*[xmaster ] of @xmath449 is the last organ of the master body of @xmath449 ; and the * master payload * ( resp .",
    "* master scale * ) of @xmath449 is the payload ( resp .",
    "scale ) of the master organ of @xmath449 .",
    "we are now ready to finalize our description of the work of @xmath201 .",
    "this is a machine that creates an aggregation - holding variable @xmath449 and an integer - holding variable @xmath454 , with @xmath449 initialized to the aggregation @xmath455 \\rangle}$ ] , the master payload is empty and the master scale is @xmath84 . ] and @xmath454 initialized to @xmath42 .",
    "after this initialization step , @xmath201 goes into the below - described loop .",
    "as already noted , our description of @xmath21 and hence of  and our subsequent analysis of its work relies on the clean environment assumption .",
    "* terminology * : in our description of , whenever we say , [ xrepeat ] it is to be understood as repeating ( going to )  without changing the values of @xmath454 and @xmath449.[xeu ] on the other hand , whenever we say , [ xrestart ] it is to be understood as resetting @xmath454 to @xmath42 , modifying @xmath449 by deleting all common entries in it ( but leaving the master entry unchanged ) , and then repeating . finally , when we say `` _ environment has made a new move _ '' , we mean that the run tape of @xmath201 contains a @xmath456th @xmath133-labeled move ( which we refer to as `` _ the new move _ '' ) , where @xmath457 is the total number of moves in ( all moves in the payloads of the organs of ) @xmath367 , where @xmath275 is the master body of @xmath449 .",
    "* procedure * .[xmain ] let @xmath450 be the central triple of @xmath449 .",
    "start running the procedure @xmath284 on @xmath458 while , in parallel , at some constant rate , polling the run tape to see if environment has made a new move .",
    "steps of performing @xmath284 ; such a call  which , itself , may take more than a constant amount of time  interrupts @xmath284 , saves its state , checks the run tape to see if a new move is made and , if not , returns control back to the caller . ] then act depending on which of the following two cases is `` the case '' :    case 1 : :    before @xmath284 terminates , one of the calls    of the polling routine detects a new move @xmath459    ( i.e. , the move @xmath460 in the consequent of    @xmath186 )    by environment . let @xmath461 be the    @xmath462-prudentization of @xmath460 .",
    "modify    @xmath449 by adding @xmath461 to its master    payload , and resetting the master scale to @xmath84 . then .",
    "case 2 : :    @xmath284 terminates without any of the calls    of the polling routine meanwhile detecting a new move by environment .",
    "let @xmath278 be the value computed / returned by    @xmath463 .",
    "update @xmath454 to @xmath464 .",
    "then act depending    on whether @xmath270 is positive or negative .",
    "subcase 2.1 : :    @xmath270 is positive , namely ,    @xmath465 .",
    "let @xmath275 be the body of    the @xmath26-indexed entry of @xmath449 .",
    "act    depending on whether @xmath466 or not .",
    "subsubcase 2.1.1 : :    @xmath466 .",
    "update @xmath449 by adding    @xmath467 as a new organ to @xmath275 .",
    "further modify @xmath449 by deleting all    @xmath468-indexed entries whose size does not exceed that of    the @xmath26-indexed entry , if such entries exist . then .",
    "subsubcase 2.1.2 : :    @xmath469 .",
    "update @xmath449 by adding    @xmath467 and    @xmath470 as two new organs to    @xmath275 . then make the moves @xmath471 in the    consequent of ( the real play of )    @xmath472 .    finally , .",
    "subcase 2.2 : :    @xmath270 is negative , namely ,    @xmath473 .",
    "act depending on whether    @xmath474 or not .",
    "subsubcase 2.2.1 : :    @xmath474 . then , if @xmath449 has an    @xmath453-indexed entry @xmath447 , modify    @xmath449 by adding @xmath467 as a    new organ to the body of @xmath447 ; otherwise modify    @xmath449 by inserting into it the entry    @xmath475 $ ] immediately on the left of    the @xmath26-indexed entry . in either case , further modify    @xmath449 by deleting all @xmath476-indexed    common entries whose size does not exceed that of the    @xmath453-indexed entry , if such entries exist .",
    "after that .",
    "subsubcase 2.2.2 : :    @xmath110 .",
    "let @xmath436 be the master scale of    @xmath449 .",
    "act depending on whether    @xmath477 or not .",
    ", remember clause 4 of notation [ not1 ] . ] subsubsubcase 2.2.2.1 : :    @xmath478",
    ". then modify    @xmath449 by doubling its master scale @xmath436 ,    and .",
    "subsubsubcase 2.2.2.2 : :    @xmath479 .",
    "keep polling the run    tape of @xmath201 to see if environment has made a    new move @xmath459 . if and when such a move is detected ,    modify @xmath449 by adding the    @xmath462-prudentization @xmath461 of    @xmath460 to the master payload of @xmath449 ,    and resetting the master scale to @xmath84 . then .      in this subsection",
    "we want to verify that @xmath201 indeed wins @xmath186 and hence @xmath202 wins @xmath220 . for this purpose , when analyzing the work and behavior of @xmath201 , we will implicitly have some arbitrary but fixed computation branch ( `` play '' ) of @xmath201 in mind .",
    "so , for instance , when we say `` the @xmath116th iteration of '' , it should be understood in the context of that branch .",
    "[ not3 ] _ in what follows , @xmath480[xiii ] will stand for the set of positive integers @xmath116 such that @xmath481 is iterated at least @xmath116 times . also , for each @xmath482 , @xmath483[xnot3 ] will stand for the value of the aggregation / variable @xmath449 at the beginning of the @xmath116th iteration of @xmath481 .",
    "_    [ bei ] for any @xmath482 and any entry @xmath447 of @xmath484 , the size of @xmath447 does not exceed @xmath485 .",
    "for a contradiction , assume @xmath482 , and @xmath484 has an entry of size greater than @xmath485 .",
    "let @xmath26 be the index of such an entry .",
    "first , consider the case @xmath466 .",
    "let @xmath486 be the smallest number in @xmath480 such that @xmath487 has a @xmath488-size , @xmath26-indexed entry @xmath489 $ ]  it is not hard to see that such a @xmath80 exists , and @xmath490 because @xmath491 has no common entries .",
    "the only way the above entry could have emerged in @xmath487 is that @xmath492 contained the entry @xmath493 $ ] , and its body `` grew '' into @xmath494 on the transition from @xmath492 to @xmath487 according to the prescriptions of subsubcase 2.1.1 of the description of .",
    "this in turn means that the central triple of @xmath492 was @xmath495 for a certain body @xmath156 , and @xmath496 .",
    "this , however , is impossible by clause 3 of lemma [ golemma ] , because the size of @xmath497 is @xmath498 , exceeding @xmath225 .",
    "the case @xmath469 is similar , only with `` @xmath188 '' instead of `` @xmath26 '' , and `` @xmath499 '' instead of `` @xmath500 '' .",
    "[ beijing ] there is a bound @xmath501 such that the cardinality of @xmath480 does not exceed @xmath502 .    in this proof",
    "we will be using @xmath45 as an abbreviation of @xmath503 .",
    "whenever we say `` @xmath449 always ( never , etc . )",
    "so and so '' , it is to be understood as that , throughout the work of , the value of the variable @xmath449 always ( never , etc . )",
    "so and so .",
    "similarly for @xmath454 .",
    "`` case '' , `` subcase '' , etc .",
    "mean those of the description of .    according to lemma [ bei ]",
    ", we have : @xmath504    our next claim is the following : @xmath505 indeed , let @xmath506 be the master body of @xmath449 at a given stage of the work of , and consider any organ @xmath507 ( @xmath508 ) of this body . from an analysis of the work of  we can see that , if @xmath116 is odd , then @xmath267 are moves made by environment within the @xmath462 component in the real play .",
    "therefore , in view of the clean environment assumption , the number of such moves is at most @xmath226 .",
    "if @xmath116 is even , then @xmath267 are moves made by @xmath509 in a certain play simulated through @xmath510 . as in the preceding case",
    ", the number of such moves can not exceed @xmath225 because , as we have agreed , @xmath509 plays quasilegally .",
    "taking into account that each @xmath200 ( @xmath60 and @xmath169 , that is ) plays unconditionally prudently and that environment s moves in @xmath462 are also prudentized when copied by  according to the prescriptions of case 1 or subsubsubcase 2.2.2.2 ( and that every move that emerges in @xmath449 originates either from environment or from one of @xmath511 ) , one can see that the run tape of any simulated machine does not contain moves whose magnitude is greater than @xmath512 where , as we remember , @xmath111 is the superaggregate bound of @xmath177 . since the @xmath200s ( @xmath60 and @xmath169 , to be more precise ) play in unconditional space @xmath31 , we then find that the value of the variable @xmath454 of   never exceeds @xmath513 .",
    "thus , the maximum value of @xmath514 is bounded by @xmath515 .",
    "the master scale @xmath436 of @xmath449 increases  namely , doubles  only according to the prescriptions of subsubsubcase 2.2.2.1 , and such an increase happens only when @xmath436 is smaller than @xmath514 .",
    "for this reason , we have : @xmath516    let @xmath114 be the unarification of the bound @xmath517 from ( [ r22 ] ) .",
    "note that , since @xmath189 , we have @xmath518 .",
    "let @xmath519 be the unary function defined by @xmath520 and let @xmath521 be an abbreviation of @xmath522 .    with each element @xmath116 of @xmath480",
    "we now associate an integer @xmath523 defined as follows :    @xmath524 where :    * @xmath525 .",
    "take a note of the fact that @xmath526 .",
    "* for each even @xmath527 : if @xmath484 contains a common entry of size @xmath80 , then @xmath528 is @xmath529 , where @xmath26 is the index of that entry ; otherwise @xmath530 .",
    "thus , @xmath528 can not exceed @xmath188 and , since @xmath518 , from ( [ ka ] ) we can see that @xmath531 .",
    "* for each odd @xmath527 : if @xmath484 contains a common entry of size @xmath80 , then @xmath528 is @xmath532 , where @xmath26 is the index of that entry ; otherwise @xmath530 .",
    "again , we have @xmath531 .",
    "* @xmath533 is @xmath534 , where @xmath436 is the master scale of @xmath484 . in view of ( [ park3 ] )",
    ", we find @xmath535 .",
    "* @xmath536 is the number of moves in the master payload of @xmath484 . from ( [ park2 ] )",
    ", we see that @xmath537 .",
    "* @xmath538 is the size of the master body of @xmath484 .",
    "the fact ( [ park1 ] ) guarantees that @xmath539 .",
    "as we have observed in each case above , all of the factors @xmath540 from @xmath523 are smaller than @xmath521 .",
    "this allows us to think of @xmath523 as a @xmath521-ary numeral of length @xmath541 , with the least significant digit being @xmath542 and the most significant digit being @xmath538 .    with some analysis of the work of , which we here leave to the reader",
    ", one can see that    @xmath543    but , by our observation @xmath544 , no rank can exceed the ( generously taken ) number @xmath545 i.e. , the number @xmath546 , where @xmath547 is the unary function @xmath548 thus : @xmath549 by the conditions of @xmath11-induction , @xmath177 is @xmath58-bounded .",
    "hence , by lemma [ lagg ] , @xmath550 .",
    "this , by condition 4 of definition 2.2 of @xcite , implies @xmath551 .",
    "the two facts @xmath550 and @xmath551 , by condition 5 of definition 2.2 of @xcite , further yield @xmath552 and @xmath553 . looking back at our definition of @xmath256 in notation [ not1](4 )",
    ", we see that @xmath554 .",
    "this , together with @xmath552 and @xmath553 , by the linear closure of @xmath59 , implies latexmath:[\\[\\label{sevv1 }    since @xmath114 is the unarification of @xmath517 , we obviously have @xmath556 .",
    "this , together with ( [ sevv1 ] ) , ( [ ka ] ) and the fact of @xmath59 s being linearly closed , implies that @xmath557 .",
    "the latter , in turn , in view of @xmath59 s being polynomially closed , implies that @xmath558 .",
    "so , there is a bound @xmath559 in @xmath59 with @xmath560 and hence @xmath561 . in view of ( [ iin ] )",
    ", no rank can thus ever exceed @xmath502 .",
    "but , by ( [ ff2 ] ) , different elements of @xmath480 have different ranks .",
    "hence , the cardinality of @xmath480 does not exceed @xmath502 either , as desired .    for a number @xmath562",
    ", we define the set @xmath563[xih ] by @xmath564    we say that a given iteration of  is * restarting*[xring ] ( resp . *",
    "repeating * ) iff it terminates and calls the next iteration through  ( resp . ) .",
    "the repeating iterations are exactly those that proceed according to subcase 2.1 or subsubcase 2.2.1 of ; and the restarting iterations are those that proceed according to case 1 or subsubsubcase 2.2.2.1 , as well as the terminating iterations that proceed according to subsubsubcase 2.2.2.2 .",
    "next , we say that a given iteration of  is * locking*[xlocking ] iff it proceeds according to subsubcase 2.1.2 of .",
    "consider any @xmath562 and any @xmath565 .",
    "we say that the @xmath116th iteration of   is * @xmath563-transient*[xtransient ] iff there is a @xmath566 such that the following three conditions are satisfied :    * @xmath567 . * the @xmath80th iteration of  restarting .",
    "* there is no @xmath568 with @xmath569 such that the @xmath568th iteration of  is locking .    for a number @xmath562",
    ", we define @xmath570    we say that two bodies are * consistent*[xconsis ] with each other iff one is an extension of the other .",
    "this , of course , includes the case of their being simply equal .",
    "[ jinan ] consider any @xmath248 , @xmath562 and @xmath571 .",
    "suppose @xmath484 has an entry @xmath572 $ ] , and @xmath487 has an entry @xmath573 $ ]",
    ". then @xmath574 and @xmath575 are consistent with each other .",
    "assume the conditions of the lemma .",
    "the case @xmath576 is trivial , so we shall assume that @xmath577 .    first , consider the case @xmath469 .",
    "we thus want to show that the master bodies of @xmath484 and @xmath487 are consistent with each other .",
    "notice that only those iterations of  affect the master body of ( the evolving ) @xmath449 that are either restarting or locking .",
    "so , if no iteration between @xmath116 and @xmath80 is either restarting or locking , then the master entry of @xmath487 is the same as that of @xmath484 , and we are done .",
    "now suppose there is an @xmath568 with @xmath578 such that the @xmath568th iteration is restarting or locking .",
    "we may assume that @xmath568 is the smallest such number .",
    "then the @xmath568th iteration can not be restarting , because this would make the @xmath116th iteration @xmath563-transient .",
    "thus , the @xmath568th iteration is locking .",
    "such an iteration `` locks '' the master body of @xmath484 , in the sense that no later iterations can destroy what is already there  such iterations will only extend the master body .",
    "so , the master body of @xmath487 is an extension of that of @xmath484 , implying that , as desired , the two bodies are consistent with each other .",
    "now , for the rest of this proof , assume @xmath466 .",
    "note that @xmath579 , because @xmath491 has no common ( @xmath26-indexed ) entries .",
    "further note that the @xmath580th and @xmath581th iterations are not restarting ones , because  erases all common entries .",
    "hence , obviously , both @xmath582 and @xmath583 are in @xmath584 .",
    "the case of either @xmath574 or @xmath575 being empty is trivial , because the empty body is consistent with every body .",
    "thus , we shall assume that @xmath585 for some @xmath586 .",
    "in what follows , we will be using @xmath587 and @xmath588 as abbreviations of `` @xmath298 ,  , @xmath589 '' and `` @xmath291 ,  , @xmath590 '' , respectively . thus , @xmath591 and @xmath592 .",
    "we prove the lemma by complete induction on @xmath593 .",
    "assume the aggregation @xmath594 contains the entry @xmath572 $ ] .",
    "since @xmath595 and ( as we established just a while ago ) @xmath596 , the induction hypothesis applies , according to which @xmath574 is consistent with @xmath575 , as desired .",
    "the case of @xmath492 containing the entry @xmath573 $ ] is similar .",
    "now , for the rest of the present proof , we assume that @xmath597 $ , and   $ \\vec{e}_{j-1}$ does not have the entry $ [ n , b_j]$.}\\ ] ] assume @xmath598",
    ". then @xmath599 . in view of this fact and ( [ hunqian ] ) , it is easy to see that @xmath492 contains an @xmath26-indexed entry whose body is @xmath600 . by the induction hypothesis ,",
    "@xmath601 is consistent with @xmath600 , meaning ( as @xmath602 ) that the latter is an extension of the former .",
    "hence , @xmath601 is just as well consistent with @xmath603 , as desired .",
    "the case of @xmath604 will be handled in a similar way .",
    "now , for the rest of this proof , we further assume that @xmath605 .",
    "we claim that @xmath606 indeed , the case of @xmath607 is trivial .",
    "otherwise , if @xmath608 , in view of ( [ hunqian ] ) , obviously @xmath594 contains the entry @xmath609 $ ] and @xmath492 contains the entry @xmath610 $ ] . hence , by the induction hypothesis , the two bodies @xmath611 and @xmath600 are consistent , which , as @xmath605 , simply means that they are identical .",
    "( [ hun ] ) is thus verified . in view of ( [ hun ] ) ,",
    "all that now remains to show is that @xmath612 .",
    "assume @xmath144 is odd . analyzing the work of @xmath481 and keeping ( [ hunqian ] ) in mind ,",
    "we see that the @xmath580th iteration of  proceeds according to subsubcase 2.1.1 , where the central triple of @xmath594 is @xmath613 for a certain even - size body @xmath380 , and @xmath614 . similarly , the @xmath581th iteration of  proceeds according to subsubcase 2.1.1 , where the central triple of @xmath492 is @xmath615  which , by ( [ hun ] ) , is the same as @xmath616  for a certain even - size body @xmath617 , and @xmath618 . here , if one of the bodies @xmath619 is empty , the two bodies are consistent with each other .",
    "otherwise obviously @xmath474 , @xmath594 contains the entry @xmath620 $ ] , and @xmath492 contains the entry @xmath621 $ ] .",
    "then , by the induction hypothesis , again , @xmath380 is consistent with @xmath617 .",
    "thus , in either case , @xmath380 and @xmath617 are consistent .",
    "then clause 2 of lemma [ golemma ] implies that @xmath622 .",
    "consequently , @xmath612 , as desired .",
    "the case of @xmath144 being even is rather similar . in this case , the @xmath580th iteration of  deals with subsubcase 2.2.1 , where the central triple of @xmath594 is @xmath623 for a certain odd - size body @xmath380 , with @xmath624 .",
    "and the @xmath581th iteration of  also deals with subsubcase 2.2.1 , where the central triple of @xmath492 is @xmath625 for a certain odd - size body @xmath617 , with @xmath626 .",
    "so , @xmath594 contains the entry @xmath627 $ ] and @xmath492 contains the entry @xmath628 $ ] .",
    "therefore , by the induction hypothesis , @xmath380 and @xmath617 are again consistent .",
    "then clause 1 of lemma [ golemma ] implies that @xmath629 , meaning that , as desired , @xmath612 .",
    "consider any @xmath248 and @xmath562 .",
    "we define @xmath630 as the smallest - size body such that , for every @xmath631 , whenever @xmath484 has an @xmath26-indexed entry , @xmath632 is a ( not necessarily proper ) extension of that entry s body . in view of lemma [ jinan ] ,",
    "such a @xmath632 always exists .",
    "we further define the bodies @xmath633 and @xmath634 as follows .",
    "let @xmath635 .",
    "we agree that below and later , where @xmath193 is @xmath42 or a negative integer , the denotation of an expression like @xmath636 should be understood as the empty tuple @xmath452 .",
    "then : @xmath637    @xmath638    assume @xmath562 , @xmath248 , and @xmath639 is a nonempty , not necessarily proper , restriction of the body @xmath632 .",
    "by the * @xmath640-birthtime*[xbirth ] of @xmath639 we shall mean the smallest number @xmath641 such that , for some ( not necessarily proper ) extension @xmath275 of @xmath639 , @xmath484 has the entry @xmath642 $ ] .",
    "we extend this concept to the case @xmath643 by stipulating that the @xmath640-birthtime of the empty body @xmath452 is always @xmath42 . in informal discourses",
    "we may say `` @xmath644 was * @xmath640-born*[xbrno ] at time @xmath116 '' to mean that @xmath116 is the @xmath640-birthtime of @xmath644 .",
    "when @xmath161 and @xmath26 are fixed or clear from the context , we may omit a reference to @xmath640 and simply say `` birthtime '' or `` born '' .",
    "[ wuhano ] consider any @xmath562 and @xmath241 .",
    "let @xmath645 and @xmath646 , where @xmath647 .",
    "further let @xmath648 be the @xmath649-birthtime of @xmath639 and @xmath650 be the @xmath640-birthtime of @xmath651 .    1 .",
    "if @xmath652 , then we have : @xmath653 2 .",
    "if @xmath654 , then we have : @xmath655    assume the conditions of the lemma .",
    "take a note of the fact that @xmath656 .    1 .",
    "assume @xmath652 .",
    "note that , by the definition of @xmath633 ,  @xmath457 is even .",
    "+ since ( @xmath647 and ) @xmath457 is even , at time @xmath650 the body @xmath651 obviously must have been `` born ''  i.e. , the transition from the @xmath657th iteration to the @xmath650th iteration must have happened  according to the scenario of subcase 2.1 of .",
    "namely , in that scenario , the central triple of @xmath658 was @xmath659 for a certain even - size body @xmath380 , and @xmath660 .",
    "since the @xmath657th iteration of  was not a restarting one , @xmath661 is in @xmath662 just like @xmath650 is .",
    "therefore , by the definition ( [ eqdef ] ) of @xmath663 ,  @xmath663 is an extension of @xmath380 .",
    "now , ( [ aba0 ] ) holds by clause 2 of lemma [ golemma ] .",
    "+ to verify claim ( [ aba1 ] ) , deny it for a contradiction .",
    "that is , assume there is a proper restriction @xmath617 of @xmath664 such that @xmath665 is positive .",
    "since @xmath664 has a proper restriction , the size of @xmath663 is at least @xmath666 , and therefore , by the definition of @xmath667 ,  @xmath269 is an odd positive integer .",
    "since @xmath617 is a proper restriction of @xmath664 , it is also a ( not necessarily proper ) restriction of @xmath668 .",
    "furthermore , since @xmath269 is odd , @xmath669 . consequently , @xmath670 for some @xmath302 strictly smaller than @xmath269 .",
    "we may assume that @xmath302 is even , for otherwise @xmath671 and we could have taken @xmath672 instead of @xmath302 .",
    "thus , for the nonnegative even integer @xmath302 with @xmath673 , @xmath674 let @xmath80 be the @xmath649-birthtime of @xmath675 .",
    "note that @xmath676 , and hence @xmath677 .",
    "since @xmath678 is odd , @xmath675 must have been born according to the scenario of subsubcase 2.2.1 of .",
    "namely , in that scenario , ( @xmath679 and ) @xmath680 , the central triple of @xmath492 is @xmath681 for some odd - size body @xmath156 , and @xmath682 . by definition ( [ eqdef ] ) , the body @xmath632 is an extension of @xmath156 .",
    "but , since @xmath683 , @xmath651 was not yet @xmath640-born at time @xmath80 .",
    "we must have @xmath684 for some @xmath685 . therefore , by clause 1 of lemma [ golemma ] , @xmath686 the above , however , contradicts ( [ 555 ] ) . claim ( [ aba1 ] ) is thus proven .",
    "+ to justify ( [ aba3 ] ) , assume @xmath687 .",
    "we want to show that @xmath688 . with ( [ aba0 ] ) and the evenness of @xmath457 in mind",
    ", we can see directly from the definition of @xmath283 that @xmath689 , and that @xmath690 .",
    "@xmath457 s being even further implies that @xmath691 .",
    "so , @xmath692 .",
    "it remains to show that we have @xmath693 as well , i.e. , @xmath694 .",
    "consider any even @xmath695 .",
    "let @xmath80 be the @xmath640-birthtime of @xmath696 .",
    "obviously this body must have been born according to the scenario of subcase 2.1 of  in which @xmath697 , @xmath492 has the entry @xmath698 $ ] and , with @xmath699 being the central triple of @xmath492 for some even - size body @xmath380 , we have @xmath700 . by definition ( [ eqdef ] ) , @xmath701 is an extension of @xmath702 .",
    "so , by clause 2 of lemma [ golemma ] , @xmath703 but how does the computation of ( [ 29aq ] ) differ from the computation of ( [ aba0 ] ) ?",
    "the two computations proceed in exactly the same ways , with the variable @xmath270 of @xmath281 going through exactly the same values in both cases , with the only difference that , while the computation of ( [ 29aq ] ) stops after @xmath270 takes its @xmath704th positive value @xmath705 and returns that value as @xmath706 , the computation of ( [ aba0 ] ) continues further ( if @xmath707 ) until the value of @xmath270 becomes @xmath708 .",
    "as we see , we indeed have @xmath709 as desired . claim ( [ aba3 ] ) is now verified .",
    "+ claim ( [ aba2 ] ) can be verified in a rather similar way .",
    "assume @xmath710 we want to show that @xmath711 . by the definition of @xmath282 ,",
    "@xmath712 . it remains to show that we also have @xmath713 .",
    "notice that @xmath714 , and that ( @xmath715 and ) @xmath716 .",
    "so , what we want to show is @xmath717 .",
    "consider any odd @xmath718 .",
    "let @xmath80 be the @xmath649-birthtime of @xmath719 .",
    "note that @xmath676 and hence @xmath677 .",
    "the birth of @xmath719 should have occurred according to subsubcase 2.2.1 of , in a situation where @xmath720 , the central triple of @xmath492 is @xmath721 for some odd - size body @xmath380 , and @xmath722 .",
    "but @xmath723 is an extension of @xmath380 because so is @xmath724 .",
    "in fact , it is a proper extension , because @xmath651 was not yet @xmath640-born at time @xmath80 .",
    "so , @xmath725 is a ( not necessarily proper ) extension of @xmath726 .",
    "hence , by clause 1 of lemma [ golemma ] , @xmath727 but how does the computation of ( [ 29z ] ) differ from the computation of ( [ aba0 ] ) ?",
    "the two computations proceed in exactly the same ways , with the variable @xmath270 of @xmath281 going through exactly the same values in both cases , with the only difference that , while the computation of ( [ 29z ] ) stops after @xmath270 takes its @xmath728th negative value @xmath729 and returns that value as @xmath730 , the computation of ( [ aba0 ] ) continues further until the value of @xmath270 becomes @xmath731 . as we see",
    ", we indeed have @xmath732 as desired .",
    "this completes our proof of clause 1 of the lemma .",
    "2 .   assume @xmath654 .",
    "note that @xmath269 is odd , @xmath457 is even and @xmath733 .",
    "+ the way @xmath639 was born is that the central triple of @xmath734 had the form @xmath735 for a certain odd - size body @xmath380 , and @xmath736 .",
    "but @xmath632 is an extension of @xmath380 .",
    "therefore ( [ caca0 ] ) holds by lemma [ golemma ] .",
    "+ to verify ( [ caca1 ] ) , deny it for a contradiction : assume there is a proper restriction @xmath617 of @xmath737 such that @xmath738 is negative .",
    "@xmath617 s being a proper restriction of @xmath737 implies that @xmath739 for some odd @xmath302  fix it  strictly smaller than @xmath457 .",
    "thus , @xmath740 let @xmath80 be the birthtime of @xmath741 . note that @xmath742 , and hence @xmath743 .",
    "@xmath741 s birth must have happened in a situation where @xmath720 , the central triple of @xmath492 happens to be @xmath744 for some even - size body @xmath156 , and @xmath745 .",
    "@xmath663 is an extension of @xmath156 .",
    "but since @xmath746 , @xmath639 was not yet born at time @xmath80 .",
    "so , @xmath747 for some @xmath748 .",
    "therefore , by lemma [ golemma ] , @xmath749 the above , however , contradicts ( [ 555a ] ) .",
    "claim ( [ caca1 ] ) is thus proven .",
    "+ for ( [ caca3 ] ) , assume @xmath750 .",
    "we want to show @xmath751 . directly from the definition of @xmath283 ,   @xmath752 .",
    "it remains to show that @xmath753 .",
    "note that @xmath754 , and that ( @xmath755 and ) @xmath756 .",
    "so , what we want to show is @xmath757 . for this purpose , consider any even @xmath695 .",
    "let @xmath80 be the @xmath640-birthtime of @xmath696 .",
    "obviously @xmath696 must have been born according to the scenario of subcase 2.1 of  in which @xmath697 , @xmath492 has the entry @xmath698 $ ] and , with @xmath699 being the central triple of @xmath492 for some even - size body @xmath380 , @xmath700 . by definition ( [ eqdef ] ) , @xmath701 is an extension of @xmath702 .",
    "therefore , by lemma [ golemma ] , @xmath758 .",
    "however , @xmath759 ; further , since @xmath269 is odd , @xmath669 , and hence @xmath760 .",
    "thus we have : @xmath761 comparing the computations of ( [ caca0 ] ) and ( [ 29aqqq ] ) , we see that the two computations proceed in exactly the same ways , with the only difference that , while the computation of ( [ 29aqqq ] ) stops after variable @xmath270 of @xmath281 takes its @xmath704th positive value @xmath705 and returns that value as @xmath706 , the computation of ( [ caca0 ] ) continues further until the value of @xmath270 becomes @xmath762",
    ". as we see , we indeed have @xmath709 as desired . claim ( [ caca3 ] ) is verified .",
    "+ for ( [ caca2 ] ) , assume @xmath763 .",
    "we want to show that @xmath764 . with ( [ caca0 ] ) and the oddness of @xmath269 in mind",
    ", we see from the definition of @xmath282 that @xmath765 , and that @xmath766 .",
    "the fact that @xmath269 is odd additionally implies @xmath767 .",
    "consequently , @xmath768 .",
    "so , it remains to show that we also have @xmath769 , i.e. , @xmath770 .",
    "consider any odd @xmath718 .",
    "let @xmath80 be the @xmath649-birthtime of @xmath719 .",
    "note that @xmath676 .",
    "the birth of @xmath719 should have occurred according to subsubcase 2.2.1 of , in a situation where @xmath720 , the central triple of @xmath492 is @xmath721 for some odd - size body @xmath380 , and @xmath722 .",
    "but @xmath724 is an extension of @xmath380 .",
    "hence , by lemma [ golemma ] , @xmath771 compare the computations of ( [ 2229a ] ) and ( [ caca0 ] ) .",
    "the two computations proceed in exactly the same ways , with the only difference that , while the computation of ( [ 2229a ] ) stops after @xmath270 takes its @xmath728th negative value @xmath729 and returns that value as @xmath730 , the computation of ( [ caca0 ] ) continues further ( if @xmath772 ) until the value of @xmath270 becomes @xmath762 .",
    "thus @xmath732 , as desired .",
    "we agree for the rest of section [ ssind ] that @xmath773 is the greatest element of @xmath480 .",
    "the existence of such an element is guaranteed by lemma [ beijing ] .",
    "[ a21 ] the following statements are true ( with @xmath774 as above ) :    1 .   for every @xmath248 , the size of @xmath775 is odd .",
    "2 .   for every @xmath241 ,",
    "the @xmath776-birthtime of @xmath777 is greater than the @xmath778-birthtime of @xmath779 .",
    "3 .   for every @xmath248",
    ", the scale of the last organ of @xmath779 is the same as the master scale of @xmath780 .    1 .",
    "assume @xmath248 , @xmath781 , and @xmath650 is the @xmath778-birthtime of @xmath775 .",
    "if @xmath194 , further assume that @xmath782 , and @xmath648 is the @xmath776-birthtime of @xmath777 .",
    "+ we first verify that @xmath783 indeed , assume @xmath110 .",
    "consider the last , i.e. , @xmath774th , iteration of @xmath481 .",
    "this must be an iteration that proceeds according to subsubsubcase 2.2.2.2 , because all other sorts of iterations always either  or .",
    "namely , the central triple of @xmath784 is @xmath426 for some odd - size body @xmath275 , and @xmath785 is negative .",
    "of course the @xmath774th iteration is not @xmath774-transient , so @xmath786 . by definition ( [ eqdef ] ) , @xmath787 is an extension of @xmath275 .",
    "so , @xmath788 for some odd @xmath144 with @xmath789 .",
    "suppose @xmath790 .",
    "let @xmath116 be the @xmath791-birthtime of @xmath792 .",
    "obviously the birth of @xmath792 must have occurred according to the scenario of subcase 2.1 of  in which @xmath793 , @xmath594 contains the entry @xmath794 $ ] , i.e. , @xmath795 $ ] , and @xmath796 .",
    "this , however , contradicts with our earlier observation that @xmath785 is negative . from this contradiction",
    "we conclude that @xmath797 .",
    "if so , ( [ hhh ] ) holds , because , as already noted , @xmath144 is odd .",
    "+ we next verify that @xmath798 our proof of ( [ hhhh ] ) is , in fact , by induction on @xmath194 .",
    "assume @xmath241 . by ( [ hhh ] )",
    "if @xmath799 ( i.e. , if we are dealing with the basis of induction ) , and by the induction hypothesis if @xmath800 ( i.e. , if we are dealing with the inductive step ) , we have : @xmath801 obviously , ( [ jjj ] ) implies that @xmath802 was born according to the scenario of subsubcase 2.2.1 of  in which @xmath803 , the central triple of @xmath734 is @xmath804 for a certain odd - size body @xmath380 , and @xmath805 by definition ( [ eqdef ] ) , @xmath779 is an extension of @xmath380 .",
    "hence , by clause 1 of lemma [ golemma ] , @xmath806 + for a contradiction suppose ( [ hhhh ] ) is false , i.e. , assume @xmath457 is even .",
    "then @xmath807 , because @xmath808 is an extension of the odd - size @xmath380 . remember that @xmath650 is the @xmath778-birthtime of @xmath651 .",
    "since @xmath457 is even , @xmath651 must have been born according to the scenario of subcase 2.1 of   in which @xmath809 , @xmath658 contains the entry @xmath810 $ ] and , with @xmath811 being the central triple of @xmath658 for some even - size restriction @xmath617 of @xmath802 , @xmath812 but since  by ( [ jjj ] )  @xmath269 is odd , @xmath813 is an extension of @xmath617 .",
    "hence , by clause 2 of lemma [ golemma ] , @xmath814 which , as @xmath457 is even and hence @xmath815 , is the same as to say that @xmath816 comparing ( [ chenghai ] ) with ( [ jj15 ] ) , we see a desired contradiction .",
    "this completes our proof of ( [ hhhh ] ) and hence of clause 1 of the lemma , because the latter is nothing but ( [ hhh ] ) and ( [ hhhh ] ) put together .",
    "2 .   assume @xmath241 , @xmath782 , @xmath648 is the @xmath776-birthtime of @xmath777 , @xmath781 , and @xmath650 is the @xmath778-birthtime of @xmath775 . for a contradiction , further assume @xmath817 . from the already verified clause 1 of the present lemma , we know that both @xmath269 and @xmath457 are odd .",
    "the oddness of @xmath269 implies that , at time @xmath648 , @xmath639 was born according to the scenario of subsubcase 2.2.1 of  in which @xmath818 , the central triple of @xmath734 is @xmath804 for some odd - size body @xmath380 , and @xmath819 . by definition ( [ eqdef ] )",
    ", @xmath723 is an extension of @xmath380 .",
    "further , since @xmath457 is odd and the body @xmath723 was not yet born at time @xmath820 , we have @xmath821 , with @xmath822 being an extension of @xmath380 .",
    "then , by clause 1 of lemma [ golemma ] , @xmath823 let @xmath80 be the @xmath778-birthtime of @xmath824 .",
    "the birth of @xmath824 should have occurred according to the scenario subcase 2.1 of  in which @xmath825 , the central triple of @xmath492 is @xmath826 for some even - size body @xmath617 , and @xmath827 by definition ( [ eqdef ] ) , @xmath639 is an extension of @xmath617 .",
    "so , by clause 2 of lemma [ golemma ] , @xmath828 .",
    "but , since @xmath269 is odd , we have @xmath829 thus , @xmath830 the above is in contradiction with ( [ 30a ] ) .",
    "we start with the following claim : + [ cl:1]consider any @xmath248 .",
    "assume @xmath831 , and @xmath193 is an even number with @xmath832 .",
    "then the scale of @xmath833 is the same as that of @xmath834 .",
    "+ to verify this claim , assume its conditions .",
    "we proceed by induction on @xmath835 .",
    "+ for the basis of induction , consider the case of @xmath110 .",
    "let @xmath116 be the @xmath791-birthtime of @xmath836 .",
    "obviously the @xmath580th iteration of  follows the scenario of subcase 2.1 where @xmath837 , the central triple of @xmath594 is @xmath838 , and @xmath839 looking back at the description of the procedure @xmath840 , we see that , in computing ( [ qq1 ] ) , the procedure simply lets the scale of the output @xmath841 be a copy of the scale of the `` last - fetched '' organ @xmath834 .",
    "+ for the inductive step , assume @xmath194 .",
    "let @xmath842 . from clause 1 of the present lemma",
    "we know that both @xmath269 and @xmath843 are odd .",
    "note that , for this reason , @xmath844 and @xmath845 .",
    "let @xmath648 be the @xmath776-birthtime of @xmath846 , and @xmath650 be the @xmath778-birthtime of @xmath847 .",
    "clause 2 of the present lemma implies that @xmath654 .",
    "hence the statements ( [ caca0])-([caca2 ] ) of lemma [ wuhano ] , with @xmath774 in the role of @xmath161 , are true .",
    "let us again remember the work of @xmath848 and imagine the computation of ( [ caca0 ] ) ( with @xmath849 ) . with some thought and with ( [ caca0])-([caca2 ] ) in mind",
    ", we can see the following scenario . at some point  by the end of one of the iterations of @xmath344 , to be more specific  the variable @xmath332 of @xmath281 takes the value @xmath850 .",
    "let @xmath851 be the scale of @xmath834 . by the end of the next iteration of @xmath344 , the variable @xmath270 of @xmath281",
    "becomes either @xmath841 , or @xmath852 for some even @xmath853 , with the scale of @xmath270 in either case being the same as the scale @xmath851 of the latest ( by that time ) value of @xmath332 .",
    "thus , if @xmath270 becomes @xmath841 , the scale of @xmath833 is the same as that of @xmath834 , and we are done . if @xmath270 becomes @xmath852 , then , immediately after that ( on the same iteration of @xmath344 ) , @xmath332 takes the value @xmath854 . by the induction hypothesis",
    ", the scale of @xmath855 is the same as the scale @xmath851 of @xmath856 . on the iterations of @xmath344 that follow",
    ", @xmath270 and @xmath332 may take several ( possibly zero ) consecutive values from the series @xmath857 and @xmath858 , respectively , and the scales of all these values will remain to be @xmath851 for the same reasons as above . sooner or later , after this series of negative values , @xmath270 becomes @xmath841 .",
    "the scale of this signed organ , as before , will be the same as the scale @xmath851 of the latest value of @xmath332 .",
    "the scale of @xmath833 is thus the same as that of @xmath834 , which ends our proof of claim [ cl:1 ] .",
    "+ now , we prove clause 3 of the lemma by induction on @xmath532 .",
    "let @xmath859 be the master scale of @xmath780 .",
    "the basis case of @xmath860 , i.e. , @xmath469 , is straightforward .",
    "next , consider any @xmath241 . by the induction hypothesis ,",
    "the scale of the last organ of @xmath779 is @xmath859 .",
    "let , as in the inductive step of the above proof of claim [ cl:1 ] , @xmath842 and @xmath831 .",
    "arguing as in that proof  with @xmath843 in the role of @xmath861 , @xmath859 in the role of @xmath851 and relying on claim [ cl:1 ] itself where the proof of the inductive step of the proof of claim [ cl:1 ] relied on its induction hypothesis  we find that , in the process of computing ( [ caca0 ] ) ( with @xmath849 ) , at some point , the variable @xmath332 of the procedure @xmath862 takes the value @xmath863 ( its last positive value ) and that , beginning from that point , the scale @xmath859 will be inherited by all subsequent negative values that the variables @xmath270 and @xmath332 assume , which ( in the present case ) include the final value @xmath762 assumed by @xmath270 .",
    "thus , as desired , the scale of the last organ @xmath864 of @xmath777 is the same as the master scale @xmath859 of @xmath780 .",
    "[ wuhanu ] consider an arbitrary member @xmath161 of @xmath480 .    1 .   1 .",
    "there is a run @xmath865 generated by @xmath192 such that @xmath866 .",
    "2 .   furthermore",
    ", if @xmath161 is the greatest element of @xmath480 and @xmath867 is a reasonable run of @xmath198 , then , for such a @xmath865 , we simply have @xmath868 .",
    "2 .   consider any @xmath241 .",
    "1 .   there is a run @xmath869 generated by @xmath200 such that @xmath870 and @xmath871 .",
    "2 .   furthermore",
    ", if @xmath161 is the greatest element of @xmath480 , @xmath872 is a reasonable run of @xmath873 and @xmath874 is a reasonable run of @xmath417 , then , for such a @xmath869 , we simply have @xmath875 and @xmath876 .",
    "fix an arbitrary @xmath562 .    1 .",
    "let @xmath877 .",
    "+ if @xmath878 , then the position @xmath867 is empty , and is thus an initial segment of any run .",
    "so , an arbitrarily selected run @xmath879 generated by @xmath192  such as , for instance , the run in which environment made no moves at all  satisfies subclause ( a ) . as for subclause",
    "( b ) , it is trivially satisfied because , by clause 1 of lemma [ a21 ] , @xmath161 is not the greatest element of @xmath480 , for otherwise @xmath193 would have to be odd .",
    "+ now , for the rest of our proof of clause 1 , assume @xmath880 .",
    "this automatically makes @xmath881 a @xmath276-appropriate triple .",
    "we first claim that @xmath882 for a contradiction suppose ( [ z27a ] ) if false , and assume that , for some nonempty proper restriction @xmath380 of @xmath883 , @xmath884 is negative .",
    "obviously @xmath885 for some odd @xmath274 with @xmath886 .",
    "fix such an @xmath274 .",
    "thus , @xmath887 let @xmath116 be the @xmath888-birthtime of @xmath889 .",
    "this means that @xmath890 , the @xmath580th iteration of  proceeds according to subcase 2.1 , @xmath594 contains the entry @xmath891 $ ] and , with @xmath892 being the central triple of @xmath594 , we have @xmath893 . this , however , contradicts ( [ 27aaa ] ) . claim ( [ z27a ] ) is thus verified .",
    "+ now we observe that @xmath894 indeed , if @xmath895 is positive , then ( [ 27a ] ) automatically holds because the empty body @xmath452 has no proper restrictions ; and if @xmath895 is negative , then ( [ 27a ] ) is an immediate consequence of ( [ z27a ] ) .",
    "+ our next claim is that @xmath896 to justify this claim , assume @xmath897 . from the definition of @xmath425 , we have @xmath898 .",
    "so , we only need to show that @xmath899 is an extension of @xmath900 , i.e. , of @xmath901 . but indeed , consider any even @xmath902 .",
    "let @xmath116 be the @xmath888-birthtime of @xmath903 .",
    "this means that @xmath904 , the @xmath580th iteration of  proceeds according to the scenario of subcase 2.1 where @xmath594 has the entry @xmath905 $ ] and , with @xmath906 being the central triple of @xmath594 , @xmath907 . but how does the computation of @xmath908 differ from the computation of @xmath909 ( from which the value @xmath910 of @xmath911 is extracted )",
    "? both computations proceed in exactly the same way , with the variable @xmath270 of @xmath840 going through exactly the same values , with the only difference that , while the computation of @xmath908 stops after @xmath270 takes its @xmath704th value @xmath912 and returns that value as @xmath913 , the computation of @xmath909 continues further until that value becomes @xmath914 ( if the output is positive ) or @xmath915 for some @xmath274 ( if the output is negative ) .",
    "thus @xmath916 , which completes our proof of claim ( [ 27b ] ) .",
    "+ since , by ( [ 27a ] ) , the triple @xmath881 is saturated , clause 1(a ) of lemma [ ap20b ] guarantees that there is a run @xmath406  let us rename it into @xmath865  generated by @xmath192 such that @xmath917 .",
    "this , by ( [ 27b ] ) , implies that @xmath866 , as promised in clause 1(a ) of the present lemma .",
    "+ for clause 1(b ) of the present lemma , let us additionally assume that @xmath161 is the greatest element of @xmath480 and @xmath867 is a reasonable run of @xmath198 . note that the last , @xmath161th iteration of  deals with subsubsubcase 2.2.2.2 , for any other case causes a next iteration to occur .",
    "let @xmath426 be the central triple of @xmath918 .",
    "so , @xmath919 for some numbers",
    "@xmath920 . fix these numbers . by definition ( [ eqdef ] ) , @xmath275 is a restriction of @xmath921 . and",
    ", by clause 1 of lemma [ a21 ] , the size of @xmath921 is odd .",
    "consequently , @xmath275 is not a proper restriction of @xmath921 , because otherwise @xmath367 would be a proper restriction of @xmath883 , making the statements ( [ z27a ] ) and ( [ iuy ] ) contradictory .",
    "we thus find that @xmath922 , which allows us to re - write ( [ iuy ] ) as @xmath923 in view of @xmath895 s being negative , one can see immediately from the definition of @xmath425 that the size of @xmath924 does not exceed the size of @xmath921 .",
    "this , in combination with ( [ 27b ] ) , means that @xmath925 + imagine the work of @xmath926 when computing ( [ iiuy ] ) . taking ( [ 27a ] ) into account",
    ", we can see that @xmath436 is just a copy of the scale of the last organ of @xmath883 and hence , by clause 1 of lemma [ a21 ] , of the last organ of @xmath927 .",
    "consequently , by clause 3 of lemma [ a21 ] , @xmath436 is the master scale of @xmath918 .",
    "then , since the @xmath161th iteration of  proceeds according to subsubsubcase 2.2.2.2 , we have @xmath928 , where @xmath929 is the value that the variable @xmath454 of  assumes on the @xmath161th iteration as a result of updating the old value to @xmath464 .",
    "we thus have @xmath930 . and",
    "the function @xmath256 is , of course , monotone .",
    "consequently , from the fact @xmath928 , we find that @xmath409 .",
    "but then , by ( [ fgh ] ) and clause 1(b ) of lemma [ ap20b ] , there is a run @xmath406 generated by @xmath192  let us rename it into @xmath879  such that @xmath931 . done .",
    "2 .   fix any @xmath241 , and assume @xmath932 + for clause 2(a ) , we want to show the existence of a run @xmath869 generated by @xmath200 such that @xmath933 + it is not hard to see that , if @xmath457 is @xmath42 , then so is @xmath269 , because there is no way for @xmath934 to be ever @xmath649-born .",
    "then the runs @xmath935 and @xmath936 are empty and , therefore , any run @xmath869 generated by @xmath200 satisfies ( [ cx1 ] ) .",
    "now , for the rest of this proof , assume @xmath457 is non - zero , which , in view of @xmath457 s being even , means that @xmath807 . in what follows",
    ", we use @xmath648 to denote the @xmath649-birthtime of @xmath802 and @xmath650 to denote the @xmath640-birthtime of @xmath723 .",
    "we claim that @xmath937 indeed , it is easy to see that two bodies have identical birthtimes only if they are both empty ( and hence their birthtimes are both @xmath42 ) .",
    "however , as we have already agreed , @xmath723 is nonempty . in view of ( [ 14aa ] ) , it is now sufficient to consider the two cases @xmath652 and @xmath654 .",
    "+ _ case of @xmath652 _ : in this case , according to clause 1 of lemma [ wuhano ] , the triple @xmath938 is saturated , and we have : @xmath939 therefore , by clause 2(a ) of lemma [ ap20b ] , there is a run @xmath406  let us rename it into @xmath940  generated by @xmath200 such that @xmath941 and @xmath942 .",
    "of course , @xmath942 implies @xmath943 .",
    "so , ( [ cx1 ] ) holds , which takes care of clause 2(a ) of the present lemma .",
    "as for clause 2(b ) , it is satisfied vacuously because @xmath161 is not the greatest element of @xmath480 . to see why @xmath161 is not the greatest element of @xmath480 , assume the opposite .",
    "let @xmath944 be the @xmath649-birthtime of @xmath945 and @xmath946 be the @xmath640-birthtime of @xmath947 .",
    "by clause 1 of lemma [ a21 ] , @xmath269 is odd , implying that @xmath948 and hence @xmath949 .",
    "next , the fact @xmath950 obviously implies that @xmath951 .",
    "so , the condition @xmath652 of the present case implies @xmath952 .",
    "but this is in contradiction with clause 2 of lemma [ a21 ] .",
    "+ _ case of @xmath654 _ : in this case , according to clause 2 of lemma [ wuhano ] , we have : @xmath953 from ( [ tod2])-([tod4 ] ) , by clause 2(a ) of lemma [ ap20b ] with @xmath954 in the role of @xmath156 and @xmath955 in the role of @xmath275 , there is a run @xmath406  let us rename it into @xmath940  generated by @xmath200 such that @xmath956 and @xmath943 . but",
    "@xmath956 implies @xmath941 .",
    "so , ( [ cx1 ] ) holds , which takes care of clause 2(a ) of the present lemma .",
    "+ for clause 2(b ) , let us assume moreover that @xmath161 is the greatest element of @xmath480 , @xmath957 is a reasonable run of @xmath873 , and @xmath958 is a reasonable run of @xmath417 . by clause 1 of lemma [ a21 ] ,",
    "@xmath959 is odd , implying that @xmath960 .",
    "so , ( [ tod1])-([tod4 ] ) can be re - written as @xmath961 let @xmath962 . in view of ( [ todd1 ] )",
    ", there is a number @xmath258 ( fix it ) such that @xmath963 + as observed earlier when verifying clause 2(b ) of the lemma in the case of @xmath652 , we have @xmath960 , meaning that @xmath648 is the @xmath649-birthtime of @xmath964 . in addition , let @xmath965 be the @xmath966-birthtime of @xmath967 . by clause 2 of lemma [ a21 ] , @xmath968 .",
    "this means that , for any @xmath969 , the @xmath80th iteration of  is not locking , because a locking iteration always gives birth to a new , `` bigger '' master body . but",
    "the absence of locking iterations between @xmath648 and @xmath161 implies the following , because otherwise @xmath648 would be @xmath161-transient : @xmath970 + since @xmath161 is the greatest element of @xmath480 , according to clause 3 of lemma [ a21 ] , @xmath436 is the master scale of @xmath971 .",
    "also , as observed earlier in the proof of clause 1(b ) , the @xmath161th iteration of  deals with subsubsubcase 2.2.2.2 , implying that @xmath928 , where @xmath929 is the final value of the variable @xmath454 of  ( assumed on the @xmath161th iteration ) . but note that @xmath972  the value of @xmath454 assumed on the @xmath648th iteration of   does not exceed @xmath929 .",
    "that is because only restarting iterations of  can decrease the value of @xmath454 , but , by ( [ fgy ] ) , there are no such iterations between @xmath648 and @xmath161 . also , it is clear that , on the @xmath648th iteration , @xmath945 was born according to the scenario of subsubcase 2.2.1 due to ( [ toddd ] ) , implying that @xmath973 , because , at the beginning of that iteration , the variable @xmath454 was updated to @xmath974 .",
    "thus , @xmath975 and hence , due to the monotonicity of @xmath256 and the earlier - established fact @xmath928 , we have @xmath976 from ( [ todd2 ] ) , ( [ toddd ] ) , ( [ todd3 ] ) , ( [ todd4 ] ) and ( [ tod0 ] ) , using clause 2(b ) of lemma [ ap20b ] , with @xmath977 in the role of @xmath156 and @xmath955 in the role of @xmath275 , there is a run @xmath406  let us rename it into @xmath940  such that @xmath978 and @xmath979 , as desired .",
    "[ shan ] for every @xmath248 and every @xmath562 , @xmath980 is a reasonable run of @xmath415 .",
    "fix an @xmath248 and an @xmath562 .",
    "below , whenever we say that a player @xmath148 has made  or is responsible for making  a given run unreasonable , it is to be ( or , at least , can be ) understood as that the last move of the shortest unreasonable initial segment of the run is @xmath148-labeled .",
    "first , consider the case @xmath110 .",
    "for a contradiction , assume @xmath867 is not a reasonable run of @xmath198 . by clause 1(a ) of lemma [ wuhanu ] , @xmath867 is an initial segment of a certain run @xmath865 generated by @xmath192 .",
    "therefore , in view of our assumption that @xmath192 plays @xmath198 reasonably , the only way @xmath867 could be unreasonable is if @xmath133 ( @xmath192 s adversary ) made it so .",
    "but , according to clause 2(a ) of lemma [ wuhanu ] , a certain extension @xmath981 of @xmath982 is a run generated by @xmath211 ( with @xmath211 playing as @xmath149 ) in the component @xmath983 of @xmath984 .",
    "therefore , as  by our assumption  @xmath985 plays reasonably , @xmath986 can not be responsible for making @xmath982 unreasonable",
    ". then @xmath149 can not be responsible for @xmath987 s being unreasonable either , because @xmath987 differs from @xmath982 only in that the former perhaps has some additional @xmath133-labeled moves at the end .",
    "contradiction .",
    "next , consider the case @xmath988 .",
    "it is rather similar to the preceding one . for a contradiction ,",
    "assume @xmath980 is not a reasonable run of @xmath415 . by clause 2(a ) of lemma [ wuhanu ] , there is a run @xmath940 generated by @xmath200 such that @xmath989 is an initial segment of @xmath990 . @xmath980 only differs from @xmath989 in that the former perhaps has some additional @xmath133-labeled moves at the end .",
    "for this reason , as @xmath200 plays @xmath199 reasonably , the only way @xmath980 could be unreasonable is if @xmath133 ( @xmath200 s adversary ) made it so .",
    "then @xmath991 is an unreasonable run of @xmath992 , with player @xmath149 being responsible for making it so .",
    "but , ( again ) according to clause 2(a ) of lemma [ wuhanu ] , a certain extension @xmath993 of @xmath994 is a run generated by @xmath995 in the component @xmath992 of @xmath996 .",
    "as @xmath997 plays this game reasonably , it can not be responsible for making @xmath994 an unreasonable run of @xmath992",
    ". then @xmath149 can not be responsible for making @xmath991 unreasonable either , because @xmath991 only differs from @xmath994 in that the former perhaps has some additional @xmath133-labeled moves at the end .",
    "contradiction .    finally , consider the case @xmath469 .",
    "just as in the preceding cases , @xmath509 can not be responsible for making @xmath998 an unreasonable run of @xmath462 .",
    "looking at case 1 , subsubcase 2.1.2 and subsubsubcase 2.2.2.2 of the description of @xmath481 , it is clear that @xmath509 s imaginary adversary does not make @xmath998 unreasonable either .",
    "this is so because , in @xmath462 , @xmath481 lets @xmath509 s adversary mimic @xmath201 s real environment s play .",
    "the latter , by the clean environment assumption , plays ( legally and hence ) quasilegally . and",
    "even if it does not play prudently , @xmath481 prudentizes @xmath201 s environment s moves before copying and adding them to @xmath998 as @xmath509 s imaginary adversary s moves .",
    "recall that @xmath774 is the greatest element of @xmath480 .",
    "[ shantou ] for every @xmath248 , @xmath999 is a @xmath149-won run of @xmath415 .",
    "induction on @xmath26 .",
    "according to clause 1(b ) of lemma [ wuhanu ] , in conjunction with lemma [ shan ] , @xmath1000 is a run generated by @xmath192 .",
    "so , since @xmath192 wins @xmath198 , @xmath1000 is a @xmath149-won run of @xmath198 .",
    "next , consider any @xmath26 with @xmath1001 . according to clause 2(b ) of lemma [ wuhanu ] , in conjunction with lemma [ shan ] ,",
    "there is a run @xmath1002 generated by @xmath200 such that @xmath1003 and @xmath1004 .",
    "note that , since @xmath200 plays quasilegally , every move of @xmath1002 has one of the two prefixes `` @xmath323 '' or `` @xmath324 '' .",
    "but we know that @xmath200 wins @xmath1005 .",
    "so , @xmath1002 has to be a @xmath149-won run of @xmath1005 , meaning that either @xmath1006 , i.e. @xmath1007 , is a @xmath149-won run of @xmath1008 , or @xmath1009 , i.e. @xmath999 , is a @xmath149-won run of @xmath415 .",
    "but , by the induction hypothesis , @xmath1010 is a @xmath149-won run of @xmath417 .",
    "this obviously means that @xmath1007 is a @xmath133-won ( and thus not @xmath149-won ) run of @xmath1008 .",
    "therefore , @xmath999 is a @xmath149-won run of @xmath415 .    according to lemma [ shantou ] ,",
    "@xmath1011 is a @xmath149-won run of @xmath462 .",
    "therefore , by the known property of static games and delays ( see the end of section 3 of @xcite ) we have : @xmath1012 let @xmath329 be the run generated by @xmath201 that took place in the real play of @xmath186 .",
    "how does @xmath1013 relate to @xmath1011 ?",
    "as promised earlier , the real play in the consequent of @xmath186  that is , the run @xmath1013  would be `` essentially synchronized '' with the play @xmath1011 by @xmath509 in the consequent of @xmath1014 , meaning that @xmath1013 is `` essentially the same '' as @xmath1011 .",
    "the qualification `` essentially '' implies that the two runs , while being similar , may not necessarily be strictly identical .",
    "one reason why @xmath1011 may differ from @xmath1013 is that , as seen from case 1 and subsubsubcase 2.2.2.2 of the description of @xmath481 , if @xmath1013 contains a ( legal but ) imprudent ( with respect to @xmath462 ) move by @xmath133 , then such a move appears in @xmath1011 in the prudentized form .",
    "namely , if @xmath509 s adversary chose some `` oversized '' constant @xmath144 for @xmath120 in a subcomponent @xmath1015 of @xmath462 , then the same move will appear in @xmath1011 as if @xmath1016 was chosen instead of @xmath144 , where @xmath1016 is a certain `` small '' constant .",
    "note , however , that having made the above imprudent choice makes @xmath133 lose in the @xmath1015 component .",
    "so , prudentizing @xmath133 s imprudent moves can only increase rather than decrease @xmath133 s chances to win the overall game . that is ,",
    "if @xmath149 ( i.e. , @xmath201 ) wins the game even after such moderation of the adversary s imprudent moves , it would also win ( `` even more so '' ) without moderation .",
    "for this reason , we can and will safely assume that @xmath201 s environment plays not only legally , but also prudently .",
    "but even if @xmath201 s adversary has played @xmath1013 prudently , there is another reason that could make @xmath1011 `` somewhat '' different from @xmath1013 .",
    "namely , with some thought , one can see that @xmath1013 may be a proper @xmath149-delay of ( rather than equal to ) @xmath1011 .",
    "luckily , however , by ( [ trr ] ) , @xmath1013 is still a @xmath149-won run of @xmath462 .",
    "thus , as desired , @xmath201 wins @xmath186 , and hence @xmath21 wins the conclusion of ( [ r22 ] ) .",
    "@xmath21 plays @xmath1017 prudently , and the latter is an @xmath58-bounded formula . by condition 5 of definition 2.2 of @xcite , @xmath1018 .",
    "this , of course , implies that @xmath21 runs in amplitude @xmath52 , as desired .      as we agreed earlier",
    ", @xmath1019 is a common tricomplexity in which the machines @xmath60 and @xmath169  and hence the @xmath200s  run .",
    "all three bounds are unary .",
    "remember from section [ sagree ] that @xmath222 is the size of the greatest of the constants chosen by @xmath202 s environment for the free variables of @xmath220 .",
    "this , of course , means that the background of any clock cycle of @xmath201 in any scenario of its work is at least @xmath222 . for this reason and with remark 2.4 of @xcite in mind , in order to show that @xmath202 runs in space @xmath58 , it is sufficient to show that the spacecost of any clock cycle of @xmath201 is bounded by @xmath1020 for some @xmath1021 . in",
    "what follows , we shall write @xmath1022 as an abbreviation of the phrase `` @xmath1020 for some @xmath1021 '' . similarly for @xmath1023 .    in asymptotic terms , the space consumed by @xmath201  namely , by any given @xmath161th ( @xmath562 ) iteration of @xmath481",
    " is the sum of the following two quantities : @xmath1024 here we did not mention the space needed to hold the value of the variable @xmath454 , and to update it to its next value .",
    "that is because , as it is easy to see , the space taken by @xmath454 or its updates does not exceed the maximum possible value of the quantity ( [ spc2 ] ) ( in fact , the logarithm of the latter ) .",
    "so , this component of @xmath201 s space consumption , being superseded by another component , can be safely ignored in an asymptotic analysis .",
    "consider any @xmath1025 .    in verifying that ( [ spc1 ] )",
    "is bounded by @xmath1022 , we observe that , by conditions ( iv ) and ( v ) of section [ saggr ] , an aggregation can not contain two same - size entries .",
    "next , by lemma [ bei ] , the size of an entry never exceeds @xmath1026 .",
    "thus , the number of entries in @xmath918 is bounded by the constant @xmath1026 . for this reason ,",
    "it is sufficient for us to just show that any given entry @xmath1027 $ ] of @xmath918 can be held with @xmath1022 space .",
    "this is done in the following two paragraphs .",
    "the component @xmath26 of an entry @xmath1027 $ ] never exceeds @xmath188 .",
    "as observed in the proof of lemma [ beijing ] , we have @xmath518 , where @xmath106 is the unarification of @xmath44 .",
    "as further observed near the end of the same proof , @xmath1028 .",
    "this , by condition 5 of definition 2.2 of @xcite , implies that @xmath1029 .",
    "so , @xmath1030 , which asymptotically is the amount of space needed to hold @xmath26 , is bounded by @xmath1022 .",
    "as for the component @xmath380 of an entry @xmath1027 $ ] , it is a restriction of ( and hence not `` bigger '' than ) @xmath632 , so let us talk about @xmath632 instead .",
    "let @xmath1031 .",
    "by lemma [ shan ] , @xmath980 is a reasonable run of @xmath415 .",
    "consequently , the overall number of moves in it can not exceed the constant bound @xmath1032 . remembering the work of @xmath281 , we see that only negative values of this procedure s output may have empty payloads . with this fact in mind , a look back at the work of   its subcase 2.1 in particular  easily reveals that , for each even @xmath1033 , @xmath306 is nonempty .",
    "therefore @xmath1034 . that is ,",
    "the number of organs in @xmath632 is bounded by a constant .",
    "so , asymptotically , @xmath632 does not take more space than any organ @xmath1035 of it , which allows us now to just focus on @xmath1035 .",
    "due to @xmath980 s being reasonable , there is only a constant ( @xmath1036 ) number of moves in the payload @xmath306 of @xmath1035 , and the size of no such move exceeds @xmath1037 , where @xmath111 , as we remember , is the superaggregate bound of the formula @xmath177 and hence , by lemma [ lagg ] , @xmath1038 .",
    "thus , @xmath1022 space is sufficient to record @xmath306 .",
    "it now remains to show that the same holds for @xmath1039 .",
    "an analysis of   reveals that , during its work , the only case when a new scale ( as opposed to an old , inherited scale ) greater than @xmath84 of whatever organ of whatever entry is ever created is subsubsubcase 2.2.2.1 , and when such a creation takes place , the new scale is smaller than @xmath1040 .",
    "as observed earlier in this proof when we agreed to ignore @xmath454 , the value of @xmath454 is bounded by @xmath1041 for some @xmath1042 .",
    "so , @xmath1043 and thus @xmath1044 . in view of our earlier observation ( [ 2244 ] ) ,",
    "this fact , in conjunction with @xmath1046 and condition 2 of definition 2.2 of @xcite , implies that @xmath1047 , which asymptotically is the amount of memory needed to hold @xmath1039 , does not exceed @xmath1022 .",
    "now about the quantity ( [ spc2 ] ) .",
    "let us only consider the case @xmath474 , with the case @xmath110 being similar but simpler .",
    "updating @xmath918 to @xmath1048 happens through running @xmath1049 , where @xmath277 is the central triple of @xmath918 .",
    "so , we just need to show that the space consumed by @xmath1049 is bounded by @xmath1022 .",
    "this quantity , with asymptotically irrelevant technicalities suppressed , is the sum of ( i ) the space needed for simulating @xmath200 , and ( ii ) the space needed for maintaining ( the contents of ) the variables @xmath1050 of @xmath284 , as well as the space needed to keep track of how many steps of @xmath200 have been simulated so far within the present iteration of @xmath344 .",
    "( i ) : there are two groups of moves on the simulated @xmath200 s run tape . the first group , that we here shall refer to as the * early moves*,[xem ] comprises the @xmath133-labeled moves signifying the initial choices of the constants @xmath243 and @xmath152 for the free variables @xmath34 and @xmath74 of @xmath1051 .",
    "all other moves constitute the second group , which we shall refer to as the * late moves*.[xlm ] the information that @xmath201 needs to keep track of ( and whose size is asymptotically relevant ) in order to simulate @xmath200 consists of the contents ( here also including the scanning head locations ) of @xmath200 s run and work tapes , and the content of @xmath200 s buffer . since @xmath277 is the central triple of @xmath918",
    ", @xmath156 is a restriction of @xmath663 and @xmath275 is a restriction of @xmath632 .",
    "this , in view of lemma [ shan ] and in view of @xmath200 s playing reasonably , obviously implies that the run spelled by the simulated @xmath200 s run tape is reasonable . as a result",
    ", there is only a constant number of late moves , and the magnitude of each such move is obviously bounded by @xmath512 . in view of lemma [ lagg ] , this means that the combined size of all late moves is bounded by @xmath1022 .",
    "since @xmath200 is unconditionally provident , everything written in its buffer will sooner or later mature into a late move , so , whatever we said about the sizes of the late moves , also applies to the maximum possible size of @xmath200 s buffer content . as for the early moves ,",
    "they reside on @xmath201 s own run tape , and hence @xmath201 does not need to utilize any of its work - tape space to keep track of them .",
    "thus , keeping track of the contents of @xmath200 s imaginary run tape and buffer does not take @xmath201 beyond the target @xmath1022 space limits .",
    "it remains to see that the same holds for the contents of @xmath200 s work tapes .",
    "but indeed , the magnitude of no ( early or late ) move on @xmath200 s imaginary run tape exceeds @xmath1052 and hence ( as @xmath52 is linearly closed and @xmath1053 ) @xmath1054 for some @xmath1055 .",
    "but then , since @xmath200 runs in unconditional space @xmath1056 , it consumes at most @xmath1057 space of its work tapes .",
    "@xmath201 can keep track of the contents of those tapes with asymptotically the same amount @xmath1057 of its own work - tape space . and",
    "the latter , by condition 4 of definition 2.2 of @xcite , does not exceed @xmath1022 .",
    "( ii ) : the sizes of the variables @xmath144 and @xmath103 of @xmath276 are bounded by a constant ( namely , @xmath1058 ) . as for the sizes of the remaining variables @xmath1059 , as well as the space needed to keep track of how many steps of @xmath200 have been simulated so far within the present iteration of @xmath344 , can be easily seen to be superseded by ( [ spc1 ] ) or ( i ) .",
    "we agree that , for an @xmath562 ,  @xmath1060[xdea ] denotes the set of all numbers @xmath1061 satisfying the condition that there is no @xmath80 with @xmath567 such that the @xmath80th iteration of  proceeds according to the scenario of case 1 or subsubsubcase 2.2.2.2 .",
    "next , @xmath1062[xdea7 ] denotes the set of all numbers @xmath1063 ( additionally ) satisfying the condition that there is no @xmath80 with @xmath567 such that the @xmath80th iteration of  proceeds according to the scenario of subsubsubcase 2.2.2.1 .",
    "finally , @xmath1064[xdea8 ] denotes the set of all numbers @xmath1065 ( additionally ) satisfying the condition that there is no @xmath80 with @xmath567 such that the @xmath80th iteration of  proceeds according to the scenario of subsubsubcase 2.1.2 .",
    "[ 29a ] consider any @xmath1025 such that the @xmath161th iteration of  is locking .",
    "then the master scale of @xmath918 is bounded by @xmath1023 .    throughout this proof",
    ", @xmath1066 will be an abbreviation of the constant @xmath498 .",
    "consider any @xmath1025 such that the @xmath161th iteration of  is locking .",
    "let @xmath859 be the master scale of @xmath918 .",
    "we claim that @xmath859 is smaller than @xmath1067 and hence , by lemma [ lagg ] and conditions 2 , 3 and 4 of definition 2.2 of @xcite , @xmath859 is bounded by @xmath1023 . indeed , for a contradiction , assume @xmath1068 .",
    "we ( may ) additionally assume that @xmath1069 .",
    "let @xmath1070 be the smallest element of @xmath1062 .",
    "so , there are no restarting iterations between @xmath1070 ( including ) and @xmath161 ( not including ) . but only restarting iterations of  modify the master scale of @xmath449 .",
    "thus , the master scale of @xmath1071 is the same @xmath859 as that of @xmath918 .",
    "since @xmath1072 and @xmath1070 is the smallest element of @xmath1073 , the @xmath1074th iteration of  ( exists and ) is restarting .",
    "besides , that iteration does not proceed by the scenario of case 1 or subsubsubcase 2.2.2.2 of , because in either case the master scale of the resulting aggregation @xmath1071 would be reset to @xmath84 . hence , the @xmath1074th iteration of  proceeds according to the scenario of ( the master - scale - doubling ) subsubsubcase 2.2.2.1 .",
    "this means that the master scale of @xmath1075 is @xmath1076 .",
    "let @xmath1077 be the smallest element of @xmath1078 .",
    "reasoning as above but this time with @xmath1077 and @xmath1079 instead of @xmath1070 and @xmath161 , respectively , we find that the master scale of @xmath1080 is @xmath1076 and the master scale of @xmath1081 is @xmath1082 . continuing this pattern ,",
    "we further define @xmath1083 in the same style as we defined @xmath1084 and find that the master scales of @xmath1085 , @xmath1086 , @xmath1087 , @xmath1088 , ",
    ", @xmath1089 , @xmath1090 are @xmath1082 , @xmath1091 , @xmath1091 , @xmath1092 ,  , @xmath1093 , @xmath1094 , respectively .",
    "each iteration of  that proceeds according to subsubcase 2.1.2 results in @xmath201 making a move in the real play of @xmath1095 . since @xmath201 plays ( quasi)legally , altogether it makes fewer than @xmath1066 moves .",
    "this means that , altogether , there are fewer than @xmath1066 iterations of  that proceed according to subsubcase 2.1.2 . besides , one of such iterations is the @xmath161th iteration .",
    "therefore there is at least one @xmath116 with @xmath1096 such that @xmath1097 and hence @xmath1098 .",
    "pick the smallest such @xmath116 ( fix it ! ) , and let us rename @xmath1099 into @xmath76 and @xmath1100 into @xmath144 .",
    "further , let @xmath86 be the smallest element of @xmath1101 such that @xmath1102 and the @xmath86th iteration of  is locking .",
    "it is not hard to see that such a @xmath86 exists .",
    "namely , @xmath1103 if @xmath1104 and @xmath1105 if @xmath1106 .    in what follows",
    ", we shall say that two organs @xmath1107 and @xmath1108 are * essentially the same*[xestsm ] iff @xmath1109 and either @xmath1110 or @xmath1111 , where @xmath116 is as above .",
    "this extends to all pairs @xmath1112 of organ - containing objects / structures ( such as signed organs , bodies , aggregations , etc . ) by stipulating that @xmath10 and @xmath1113 are essentially the same iff they only differ from each other in that where @xmath10 has an organ @xmath1114 , @xmath1113 may have an essentially the same organ @xmath1115 instead .",
    "for instance , two signed organs are essentially the same iff they are both in @xmath1116 or both in @xmath1117 for some essentially the same organs @xmath1114 and @xmath1115 ; two bodies @xmath1118 and @xmath1119 are essentially the same iff @xmath1120 and , for each @xmath1121 , the organs @xmath1122 and @xmath1123 are essentially the same ; etc .",
    "[ cl:2 ] for any @xmath1124 , the aggregations @xmath1125 and @xmath1126 are essentially the same",
    ".    this claim can be proven by induction on @xmath80 .",
    "we give an outline of such a proof , leaving more elaborate details to the reader .",
    "for the basis of induction , we want to show that the aggregations @xmath1127 and @xmath1128 are essentially the same . to see that this is so , observe that the master entry is the only entry of both aggregations . also , the only iteration of  between @xmath144 ( including ) and @xmath76 that modifies the master entry of @xmath449 is the @xmath1129th iteration , which proceeds according to subsubsubcase 2.2.2.1 and the only change that it makes in the master body of @xmath449 is that it doubles @xmath449 s master scale @xmath1130 , turning it into @xmath1131 .    for the inductive step , consider any @xmath1132 and make the following observations .",
    "updating @xmath1126 to @xmath1133 happens through running @xmath281 rather than @xmath281 , but this is only relevant to the value of the variable @xmath454 of .",
    "the latter may only become relevant to the way the variable @xmath449 is updated when a given iteration of  proceeds according to subsubcase 2.2.2 . however , no iterations between ( including ) @xmath76 and @xmath86 proceed according to that subsubcase .",
    "so , it is safe to talk about @xmath281 instead of @xmath280 here . ] ( for a certain @xmath26 ) on certain arguments @xmath1134 .",
    "the same is the case with updating @xmath1125 to @xmath1135 , where , by the induction hypothesis , the arguments @xmath207 and @xmath358 on which @xmath200 is run are essentially the same as @xmath156 and @xmath275 , respectively .",
    "so , the only difference between the two computations @xmath355 and @xmath1136 is that , occasionally , one traces @xmath1131 steps of @xmath200 s work beginning from a certain configuration @xmath327 while the other only traces @xmath1130 steps in otherwise virtually the same scenario .",
    "this guarantees that the outcomes of the two computations  and hence the ways @xmath1126 and @xmath1125 are updated to their next values  are essentially the same .",
    "the point is that , since @xmath200 runs in time @xmath32 and since  as observed near the end of the preceding subsection  the magnitude of no move on the simulated @xmath200 s run tape exceeds @xmath1052 , all moves that @xmath200 makes within @xmath1137 steps are in fact made within the first @xmath1138 steps of the simulated interval , so the computations of @xmath355 and @xmath1136 proceed in `` essentially the same '' ways , yielding essentially the same outcomes .",
    "taking @xmath1139 , claim [ cl:2 ] tells us that the master body of @xmath1140  i.e. , of @xmath1141  and the master body of @xmath1142 are essentially the same .",
    "this is however a contradiction , because the size of the former , as a result of the @xmath86th iterations being locking , is greater than the size of the master body of any earlier aggregations @xmath1143 .",
    "[ 29b ] consider any @xmath1025 such that the @xmath161th iteration of  is locking .",
    "assume @xmath1144 , and @xmath277 is the central triple of @xmath1145 .",
    "then the scales of all organs of @xmath156 and @xmath275 are bounded by @xmath1023 .",
    "assume @xmath161 is an element of @xmath480 such that the @xmath161th iteration of  is locking .",
    "let @xmath380 be the master body of @xmath918 .",
    "it is not hard to see ( by induction on @xmath1146 , where @xmath1147 is the smallest element of @xmath1060 ) that , for any @xmath1144 , the scale of any organ of the body of any entry of @xmath1145 is either the same as the scale of one of the organs of @xmath380 , or one half , or one quarter , or  of such a scale .",
    "thus , the scales of the organs of @xmath380 ( at least , the greatest of such scales ) are not smaller that the scales of the organs of the entries of @xmath1145 , including the scales of the organs of @xmath156 and @xmath275 . for this reason , it is sufficient to prove that the scales of all organs of @xmath380 are bounded by @xmath1023 .",
    "let @xmath1148 , and let @xmath1149 be the corresponding scales .",
    "note that , since the @xmath161th iteration of  is locking , we have @xmath1150 and , consequently , @xmath380 is a restriction of @xmath1151 .",
    "therefore , according to claim [ cl:1 ] from the proof of lemma [ a21 ] , we have @xmath1152 , @xmath1153 ,  , @xmath1154 .",
    "so , it is sufficient to consider @xmath1039 where @xmath116 is an odd member of @xmath1155 .",
    "the case of @xmath1156 is immediately taken care of by lemma [ 29a ] .",
    "now consider any odd member @xmath116 of @xmath1157 .",
    "let @xmath80 be the @xmath966-birthtime of @xmath1158 .",
    "thus , the @xmath581th iteration of   is locking .",
    "but note that @xmath1039 is the master scale of @xmath492 .",
    "then , according to lemma [ 29a ] , @xmath1039 is bounded by @xmath1023 .",
    "now we are ready to argue that @xmath202 runs in target time .",
    "we already know from lemma [ beijing ] that , for a certain bound @xmath1159 ,  is iterated only @xmath502 times . in view of @xmath1160 s being at least polynomial as well as polynomially",
    "closed , it remains to see that each relevant iteration takes a polynomial ( in @xmath222 ) amount of time .",
    "here `` relevant '' means an iteration that is followed ( either within the same iteration or in some later iteration ) by an @xmath201-made move without meanwhile being interrupted by environment s moves . in other words",
    ", this is an @xmath568th iteration with @xmath1144 for some @xmath1025 such that the @xmath161th iteration of  is locking .",
    "consider any such @xmath568 .",
    "there are two asymptotically relevant sources / causes of the time consumption of the @xmath568th ( as well as any other ) iteration of : running @xmath1049 , where @xmath277 is the central triple of @xmath1145 , and periodically polling @xmath201 s run tape to see if environment has made any new moves .",
    "running @xmath1049 requires simulating the corresponding machine @xmath200 in the scenario determined by @xmath1161 and @xmath367 . with asymptotically irrelevant or superseded details",
    "suppressed , simulating a single step of @xmath200 requires going , a constant number of times , through @xmath201 s work and run tapes to collect the information necessary for updating @xmath200 s `` current '' configuration to the next one , and to actually make such an update .",
    "as we already know from section [ sls ] , the size of ( the non - blank , to - be - scanned portion of ) @xmath201 s work tape",
    "is bounded by @xmath58 . and",
    "the size of @xmath201 s run tape is @xmath1162 ( the early moves ) plus @xmath1163 ( the late moves ) .",
    "everything together , in view of the linear closure of @xmath59 ( condition 3 of definition 2.2 of @xcite ) and the facts @xmath1046 ( lemma [ lagg ] ) and @xmath1164 ( condition 5 of definition 2.2 of @xcite ) , is well within the target @xmath1023 .",
    "the amount of steps of @xmath200 to be simulated when running @xmath1049 is obviously at most a constant times the greatest of the scales of the organs of @xmath156 and @xmath275 , which , in view of lemma [ 29b ] , is @xmath1023 .",
    "thus , the time @xmath5 needed for running @xmath1049 is the product of the two @xmath1023 quantities established in the preceding two paragraphs . by the polynomial closure of @xmath59 ,",
    "such a product remains @xmath1023 .",
    "how much time is added to this by the polling routine ? obviously the latter is repeated at most @xmath5 times .",
    "any given repetition does not require more time than it takes to go from one end of the run tape of @xmath201 to the other end . and this quantity , as we found just a while ago , is @xmath1023 .",
    "thus , the @xmath568th iteration of  takes @xmath1165 time , which , by @xmath59 s being polynomially closed , remains @xmath1023 as promised .",
    "in writing this paper and its predecessor , the author has tried to keep balance between generality and simplicity , often sacrificing the former for the sake of the latter . among the ways that the present results could be strengthened",
    "is relaxing the concept of a regular theory @xmath1166 .",
    "specifically , the condition of @xmath52 s being linearly closed can be removed as long as definition 2.2 of @xcite is correspondingly refined / readjusted .",
    "this condition , in fact , amounts to adopting an asymptotic view of amplitude complexity , which significantly simplifies the completeness proofs , allowing us to avoid numerous annoying exceptions and details one would need to otherwise deal with . as noted in @xcite , however , unlike time and space complexities",
    ", we may not always be willing to  and it is almost never really necessary to  settle for merely asymptotic analysis when it comes to amplitude complexity . a non - asymptotic approach to amplitude complexity",
    "would make it possible to consider much finer amplitude complexities , such as `` strictly @xmath163 '' ( `` non - size - increasing '' , as studied in @xcite ) , `` @xmath163 plus a constant '' , etc .",
    "lemma [ vasa ] statesthere is an effective procedure that takes an arbitrary bounded formula @xmath135 , an arbitrary hpm @xmath153 and constructs an hpm @xmath21 such that , as long as @xmath153 is a provident solution of @xmath135 , the following conditions are satisfied : _    1 .",
    "@xmath21 is a quasilegal and unconditionally provident solution of @xmath135 .",
    "if @xmath153 plays @xmath135 prudently , then @xmath21 plays @xmath135 unconditionally prudently .",
    "3 .   for any arithmetical functions @xmath167",
    ", if @xmath153 plays @xmath135 in tricomplexity @xmath27 , then @xmath21 plays in unconditional tricomplexity @xmath27 . _",
consider an arbitrary hpm @xmath153 and an arbitrary bounded formula @xmath135 with all free variables displayed .",
    "we want to ( show how to ) construct an hpm @xmath21[xmm4 ]  with the same number of work tapes as @xmath153 satisfying the above conditions 1 - 3 . from our construction of @xmath21",
    "it will be immediately clear that @xmath21 is built effectively from @xmath135 and @xmath153 .",
    "as usual , we may not always be very careful about the distinction between @xmath135 and @xmath151 , but which of these two is really meant can always easily be seen from the context .",
    "we agree on the following terminology .",
    "a * semiposition*[xsemiposition ] is a string @xmath270 of the form @xmath1167 , where each @xmath1168 is a label @xmath149 or @xmath133 , each @xmath1169 is a string over the keyboard alphabet , and @xmath1170 ( remember that @xmath104 stands for the empty string ) .",
    "when @xmath322 is @xmath1171 , we say that @xmath270 is * complete*;[xcsmp ] otherwise @xmath270 is * incomplete*. we say that a semiposition @xmath1172 is a * completion*[xcdfd ] of @xmath270 iff ( 1 ) either @xmath270 is complete and @xmath1173 , or ( 2 ) @xmath270 is incomplete and @xmath1174 for some ( possibly empty ) string @xmath234 over the keyboard alphabet .",
    "when @xmath270 is complete  namely , is @xmath1175  then the * position spelled by @xmath270 * , as expected , is the position @xmath1176 .",
    "we say that a semiposition @xmath270 is * legitimate*[xdswe ] ( resp .",
    "* quasilegitimate*[xdswepp ] ) iff there is a completion @xmath1172 of @xmath270 such that the position spelled by @xmath1172 is a legal ( resp .",
    "quasilegal ) position of @xmath151 .",
    "the * compression*[xcdcfgf ] of a legitimate or quasilegitimate semiposition @xmath270 is the expression @xmath1177 resulting from @xmath270 through replacing the numer of every numeric move by the symbol @xmath1178 .",
    "note that , while generally there are infinitely many possible legitimate or quasilegitimate semipositions , the number of their compressions is finite .",
    "the reason is that an infinite variety of legal runs of @xmath151 exists only due to numer variations within numeric moves ; in compressions , however , all numers degenerate into @xmath1178 .    in the context of a given step @xmath116 of a given computation branch of a given hpm",
    ", by the * so - far - seen semiposition*[xsofar ] we shall mean the semiposition @xmath327 written at time @xmath116 on the initial section of the run tape that has ever been visited ( at steps @xmath1179 ) by the run - tape scanning head , except that the last symbol of @xmath327 should be @xmath1171 if the corresponding cell contained a @xmath1171 at the time when it was last seen by the scanning head , even if the content of that cell changed ( namely , became @xmath149 or @xmath133 ) later .",
    "intuitively , such a @xmath327 is exactly what the machine knows at time @xmath116 about its run - tape content based on what it has seen there so far .",
    "next , let @xmath1180 be the semiposition @xmath1181 , where @xmath1182 are the moves made by the machine so far ( at steps @xmath1179 ) . and",
    "let @xmath1183 be the string residing in the buffer at time @xmath116 . then by the * so - far - authored semiposition*[xsofarau ]",
    "we shall mean the ( complete ) semiposition @xmath1184 if @xmath1183 is empty , and the ( incomplete ) semiposition @xmath1185 if @xmath1183 is nonempty .",
    "the * windup*[xwindup ] of a quasilegitimate yet incomplete semiposition @xmath1186 of the form @xmath1187 is the lexicographically smallest string @xmath322 such that @xmath1188 is a @xmath149-quasilegal position of @xmath151 .",
    "note that there is only a constant number of strings that are windups of some incomplete quasilegitimate semipositions .",
    "also note that knowing the compression @xmath1189 of an ( incomplete quasilegitimate ) semiposition @xmath1186 is sufficient to determine @xmath1186 s windup .",
    "we let @xmath21 keep partial track of the so - far - authored quasilegitimate semiposition @xmath1186 through remembering its compression @xmath1189 .",
    "similarly , @xmath21 keeps track of the so - far - seen legitimate semiposition @xmath327 through remembering its compression @xmath1190 ; besides , one of the symbols of @xmath1190 is marked to indicate ( keep track of ) the current location of @xmath21 s run - tape scanning head .",
    "other than @xmath1178 indicates that the head is looking at the corresponding symbol of @xmath327 , and a marked @xmath1178 indicates that the head is looking at one of the bits of the corresponding numer . ] with appropriately arranged details that are not worth discussing here , it is possible for @xmath21 , this way , to be able to immediately detect if and when @xmath327 becomes illegitimate .",
    "if and when this happens , we let @xmath21 retire ; besides , if @xmath1186 is quasilegitimate yet incomplete at the time of this event , then @xmath21 puts @xmath1186 s windup into the buffer and , simultaneously , enters a move state before retiring .",
    "we shall refer to a move made this way as a * retirement move*.[xretmo ] maintaining the above @xmath1190 ( together with its mark ) and @xmath1189 only requires a constant amount of memory , so this can be fully done through @xmath21 s state rather than tape memory .",
    "this means that , as long as @xmath327 remains legitimate , @xmath21 can follow the work of @xmath153 step - by - step without having any time or space overhead , and act ( reposition heads , put things into the buffer , move , etc . )",
    "exactly like @xmath153 , with the only difference between the two machines being that @xmath21 has a greater number of states than @xmath153 does , with any given state of @xmath153 being imitated by one of many `` counterpart '' states of @xmath21 , depending on the present values of @xmath1189 and the marked @xmath1190 that each such state `` remembers '' ( e.g. , is labeled with ) .    for the rest of this appendix , assume @xmath153 is a provident solution of @xmath135 .",
    "fix an arbitrary computation branch @xmath275 of @xmath21 , and let @xmath1191 be the run spelled by @xmath275 . from now on ,",
    "whenever a context requires a reference to a computation branch but such a reference is missing , it should be understood as that we are talking about @xmath275 . for simplicity",
    ", we shall assume that , in @xmath275 , environment made ( legal ) initial moves that brought @xmath151 down to @xmath138 for some constants @xmath152 .",
    "fix these @xmath152 .",
    "the case of @xmath275 violating this assumption is not worth our attention for the reason of being trivial or , at least , much simpler than the present case .",
    "we also fix arbitrary arithmetical functions @xmath167 .",
    "we may assume that all three functions are unary , or else replace them with their unarifications .",
    "since the parameters @xmath275 , @xmath1192 , @xmath152 , @xmath30 , @xmath31 , @xmath32 are arbitrary , it is sufficient for us to focus on them and just show that the three conditions of the lemma are satisfied in the context of these particular parameters .",
    "for instance , to show that @xmath21 plays @xmath151 quasilegally , it is sufficient to show that @xmath1191 is a @xmath149-quasilegal run of @xmath151 .",
    "we extend the notation @xmath1191[xgamm ] from @xmath275 to any computation branch @xmath380 of either @xmath21 or @xmath153 , stipulating that @xmath1193 is the run spelled by @xmath380 .",
    "we further agree that , for any @xmath1194 , @xmath1195 stands for the position spelled on the run tape of the corresponding machine at step @xmath116 of branch @xmath380 , and @xmath1196[xellc ] stands for the background of that step .",
    "we also agree that @xmath1197[xdublie ] denotes the so - far - seen semiposition at step @xmath116 of branch @xmath380 , and @xmath1198[xvublie ] denotes the so - far - authored semiposition at step @xmath116 of @xmath380 . finally , since @xmath151 and @xmath138 are the only formulas / games we deal with in this appendix , without risk of ambiguity we will often omit references to them when saying `` legal '' , `` quasilegal '' , `` prudent '' etc .",
    "consider any @xmath116 such that @xmath1199 is legitimate .",
    "the legitimacy of @xmath1199 means it has a completion @xmath1200 such that the position @xmath1201 spelled by @xmath454 is legal .",
    "let @xmath188 be the number of @xmath133-labeled moves in @xmath1202 . and",
    "let @xmath380 be the computation branch of @xmath21 in which environment acts exactly as it does in @xmath275 , with only the following two differences : ( 1 ) environment stops making any moves after it makes its @xmath188th move ( meaning that , if @xmath1203 , environment simply never moves ) ; ( 2 ) if @xmath1204 , environment s @xmath188th move ( i.e. , the @xmath26th move of the play ) is @xmath1205 .",
    "of course , @xmath380 spells a legal run .",
    "for this reason , in this branch @xmath21 behaves just like @xmath153 in the branch @xmath617 where the environment makes exactly the same moves , in exactly the same order and at exactly the same times , as in @xmath380 .",
    "we call such a @xmath617 the * @xmath1199-induced branch of @xmath153*.[xwiin ] the following two lemmas are simple observations , hardly requiring any proofs :      1 .   in @xmath617 , @xmath153 s environment makes no moves at any step @xmath568 with @xmath1209 .",
    "2 .   @xmath1210 is a legal run of @xmath151 .",
    "the initial segment of @xmath1192 that brings @xmath151 down to @xmath138 is also an initial segment of @xmath1210 .",
    "4 .   @xmath1211 , and hence also @xmath1212 .",
    "5 .   for any @xmath1213 , @xmath1214 .",
    "( [ po1 ] ) : :    from the description of @xmath21 we can see that , if    @xmath1191 is @xmath133-legal and    thus the so - far - seen semiposition always remains legitimate ,    @xmath21 interacts with its environment exactly like    @xmath153 interacts with its environment in the    corresponding scenario s environment makes exactly the same    moves at exactly the same times and in exactly the same order as in    @xmath275 . ] and , since @xmath153 is a solution of    @xmath151 ,    @xmath1191 is @xmath149-won . and if    @xmath1191 is @xmath133-illegal ,    then @xmath1191 is automatically    @xmath149-won .",
    "( [ po2 ] ) : :    for a contradiction , suppose @xmath1191 is not    @xmath149-quasilegal .",
    "let @xmath116 be the smallest    number such that the position @xmath1218 is not    @xmath149-quasilegal .",
    "let @xmath1219 be the    ( `` offending '' ) move that @xmath21 made at step    @xmath116 of @xmath275 .",
    "+    assume @xmath1220 is legitimate .",
    "let @xmath617 be the    @xmath1220-induced branch of @xmath153 .    according to clause 4 of lemma [ wha ] ,    @xmath1221 .",
    "so ,    @xmath1222 is not @xmath149-quasilegal ,    and then the same holds for the extension    @xmath1210 of @xmath1222 .",
    "of    course , @xmath1210 s not being    @xmath149-quasilegal implies that it is simply illegal .",
    "but    this contradicts clause 2 of lemma [ wha ] , according to which    @xmath1210 is legal .",
    "+    now assume @xmath1220 is not legitimate .",
    "note that    @xmath1223 , because , at the initial step @xmath42 ,    @xmath21 would not be able to see an illegitimate    semiposition ( at best , @xmath21 would only see the    label @xmath133 in the leftmost cell , nothing else ) .    further note that the semiposition @xmath1224 is    legitimate , because otherwise @xmath21 would have    retired right after seeing it and thus would not have moved at step    @xmath116 .",
    "as soon as @xmath21 sees the    illegitimate @xmath1220 , it retires .",
    "thus , the move    @xmath1219 made at step @xmath116 is a retirement move .",
    "looking back at the conditions under which @xmath21    makes a retirement move , we see that the so - far - authored semiposition    @xmath1225 should be complete and quasilegitimate .",
    "let    @xmath1226 be the position spelled by    @xmath1225 .",
    "so , @xmath1226 is    @xmath149-quasilegal . but note that    @xmath1227 , and thus we    are facing a contradiction because , as we remember ,    @xmath1228 is not @xmath149-quasilegal .",
    "( [ po3 ] ) : :    as already noted in the proof of ( [ po1 ] ) , if the run    @xmath1191 is @xmath133-legal ,    @xmath21 and its environment behave exactly like    @xmath153 and its environment in the corresponding    scenario . then , since @xmath153 plays providently ,    @xmath275 is a provident branch .",
    "suppose now    @xmath1191 is @xmath133-illegal .",
    "+    first , assume the so - far - seen semiposition in @xmath275 becomes    illegitimate at some step @xmath116 .",
    "note that    ( @xmath1229 and ) @xmath1230 is legitimate .",
    "let    @xmath617 be the @xmath1230-induced branch of    @xmath153 . by clauses 2 and 4 of lemma [ wha ] ,",
    "@xmath1231 is @xmath133-legal and    @xmath1232 . the semiposition    @xmath1233 must be quasilegitimate because otherwise , as    can be seen with a little thought , ( the provident )    @xmath153 will have to make an illegal move in branch    @xmath617 at some point .",
    "but , in branch @xmath275 ,    @xmath21 retires immediately after seeing the    non - legitimate @xmath1234 .",
    "the only possibility for the buffer    content of @xmath21 to remain nonempty after    retirement would be if @xmath1225 was not    quasilegitimate .",
    "however , as just observed , this is not the case .",
    "+    now assume the so - far - seen semiposition in @xmath275 never    becomes illegitimate .",
    "let @xmath116 be the    @xmath327-stabilization point ( which exists according to lemma    [ whaha ] ) . and",
    "let @xmath617 be the    @xmath1199-induced branch of @xmath153 .",
    "it    is not hard to see that , throughout the entire play ,    @xmath21 behaves  makes moves , puts strings into the    buffer , repositions scanning heads  the same way in @xmath275    as @xmath153 behaves in @xmath617 . from clause 2    of lemma [ wha ] , we also know that @xmath617 spells a    @xmath133-legal run and hence , due to    @xmath153 s playing providently , @xmath617    contains infinitely many steps with empty buffer contents .",
    "then so    does @xmath275 .",
    "that is , @xmath275 is provident .",
    "assume @xmath153 is a prudent solution of @xmath135 .",
    "we want to show that the run @xmath1191 is @xmath149-prudent . for a contradiction , deny this .",
    "let @xmath116 be the smallest number such that @xmath1218 is not @xmath149-prudent .",
    "note that @xmath1229 .",
    "it is obvious that a move is made in @xmath275 at step @xmath116 .",
    "let us call that move @xmath1219 .",
    "assume @xmath1230 is legitimate .",
    "let @xmath617 be the @xmath1230-induced branch of @xmath153 .",
    "clauses 3 and 4 of lemma [ wha ] imply that @xmath1222 is not @xmath149-prudent , and then the same holds for the extension @xmath1210 of @xmath1222 . at the same time , by clause 2 of the same lemma , @xmath1210 is legal .",
    "this is a contradiction , because @xmath153 is a prudent solution of @xmath135 and , as such , it could not have generated a ( @xmath133-)legal run ( @xmath1210 ) that is not @xmath149-prudent .",
    "now assume @xmath1230 is not legitimate .",
    "then , just as in the last paragraph of our proof of ( [ po2 ] ) , @xmath1223 , @xmath1235 is legitimate , and @xmath1219 is a retirement move .",
    "let @xmath617 be the @xmath1235-induced branch of @xmath153 . analyzing the conditions under which @xmath21 makes a retirement move",
    ", we see that @xmath1219 ( rather than some proper prefix of it ) was the content of @xmath21 s buffer at step @xmath582 of @xmath275 .",
    "then , by clause 4 of lemma [ wha ] , the same is the case for @xmath153 s buffer in branch @xmath617 .",
    "but , since @xmath153 plays providently and ( by clause 2 of lemma [ wha ] ) @xmath1231 is legal , in @xmath617 , sooner or later @xmath153 will have to make a move @xmath1236 such that @xmath1219 is a prefix of @xmath1236 .",
    "obviously such a move @xmath1236 ,",
    "if legal , will inherit the imprudence of @xmath1219 .",
    "this , together with clause 2 of lemma [ wha ] , contradicts our assumption that @xmath153 is a prudent solution of @xmath135 .",
    "first , suppose @xmath1230 is legitimate .",
    "let @xmath617 be the @xmath1230-induced branch of @xmath153 .",
    "in view of clause 4 of lemma [ wha ] , in @xmath617 , @xmath153 makes the same move @xmath1219 at the same time @xmath116 . since @xmath153 plays in amplitude @xmath30 and since",
    ", by clause 2 of lemma [ wha ] , the run @xmath1210 is legal , we have @xmath1239 .",
    "the desired @xmath1238 follows from here by clause 5 of lemma [ wha ] .",
    "now suppose @xmath1230 is not legitimate .",
    "then , as in the last paragraph of our proof of ( [ po2 ] ) @xmath1223 , @xmath1235 is legitimate , and @xmath1219 is a retirement move .",
    "let @xmath617 be the @xmath1235-induced branch of @xmath153 . and",
    "let @xmath234 be the content of @xmath21 s buffer at step @xmath582 of @xmath275 . by clause 4 of lemma [ wha ]",
    ", the same @xmath234 is in the buffer of @xmath153 at step @xmath582 of @xmath617 . at some step @xmath1240 of @xmath617 ,",
    "the provident @xmath153 should make a move @xmath1241 such that @xmath234 is a prefix of @xmath1241 .",
    "let @xmath1242 be the magnitude of that move .",
    "since the run spelled by @xmath617 is legal ( clause 2 of lemma [ wha ] ) and @xmath153 plays in amplitude @xmath30 , we have @xmath1243 .",
    "but , in view of clause 1 of lemma [ wha ] , @xmath1244 . thus , @xmath1245 .",
    "this , in view of clause 5 of lemma [ wha ] , implies @xmath1246 . from the way we measure magnitudes and from the way the windup operation is defined , it is clear that @xmath1247 .",
    "consequently , @xmath1238 .",
    "_ space _ : let @xmath116 be the @xmath327-stabilization point , and let @xmath617 be the @xmath1199-induced branch of @xmath153 .",
    "if @xmath1199 is legitimate , then , as observed in the last paragraph of our proof of ( [ po3 ] ) , @xmath21 s behavior throughout @xmath275 is indistinguishable from that of @xmath153 in @xmath617 ; this , in view of clause 5 of lemma [ wha ] , means that @xmath275 , just like @xmath617 , does not violate the @xmath31 space limits .",
    "now suppose @xmath1199 is not legitimate .",
    "whatever we said above still applies to the behavior of @xmath21 up to ( including ) step @xmath582 .",
    "after that it makes a transition to step @xmath116 and retires without consuming any additional space .",
    "so , the space consumption again remains within the limits of @xmath31 .",
    "_ time _ : again , let @xmath116 be the stabilization point , and let @xmath617 be the @xmath1199-induced branch of @xmath153",
    ". if @xmath1199 is legitimate , then , for the same reasons as in the case of space , @xmath275 does not violate the @xmath32 time limits .",
    "now suppose @xmath1199 is not legitimate .",
    "whatever we said in the preceding sentence still applies to the behavior of @xmath21 in @xmath275 up to ( including ) step @xmath582 .",
    "then @xmath21 makes a transition to step @xmath116 and retires .",
    "if no move is made upon this transition , all is fine . and",
    "if a move is made , then , in view of the relevant clauses of lemma [ wha ] , it can be seen that the timecost of that move does not exceed the timecost of the move that the provident @xmath153 would have to make in @xmath617 sooner or later after time @xmath582 .",
    "so , the time bound @xmath32 is not violatedthere is an effective procedure that takes an arbitrary bounded formula @xmath135 , an arbitrary hpm @xmath60 and constructs an hpm @xmath169 such that , for any regular boundclass triple @xmath14 , if @xmath135 is @xmath58-bounded and @xmath60 is an @xmath14 tricomplexity solution of @xmath135 , then @xmath169 is a provident and prudent @xmath14 tricomplexity solution of @xmathpick and fix an hpm @xmath60 and a bounded formula @xmath1248 with all free variables displayed .",
    "the case of @xmath135 being elementary is trivial , so we assume that @xmath135 contains at least one choice operator .",
    "fix @xmath1249[xetr ] as the maximum number of labmoves in any legal run of @xmath1250 .",
    "further fix @xmath1251[xgtrft ] as the superaggregate bound of @xmath1252 .",
    "assume @xmath69 is a regular boundclass triple such that the formula @xmath135 is @xmath58-bounded and @xmath60 is an @xmath11 tricomplexity solution of @xmath135 .",
    "note that , by lemma [ lagg ] , @xmath1253 .",
    "it is important to point out that our construction of @xmath169 below does not depend on @xmath14 or any assumptions on it .    in view of lemma 10.1 of @xcite and with remark 2.4 of @xcite in mind , we may and will assume that @xmath60 plays @xmath1252 providently .",
    "then lemma [ vasa ] ( whose proof does not rely on the present lemma ) allows us to further assume that @xmath60 is a quasilegal , unconditionally provident and unconditionally @xmath14 tricomplexity solution of @xmath1252 .",
    "the technique that we employ below is very similar to the one used in section 11 of @xcite .",
    "our goal is to construct a machine  @xmath196[xkk ] such that @xmath169 is a provident and prudent @xmath171-tricomplexity solution of @xmath135 . from our construction",
    "it will be immediately clear that the construction is effective as required .    in both our description of the work of @xmath169 and our subsequent analysis of it , we shall rely  usually only implicitly  on the clean environment assumption .",
    "making this assumption is safe because the desired properties of @xmath169 are ( 1 ) being a solution of @xmath135 , ( 2 ) playing @xmath135 providently , ( 3 ) playing @xmath135 prudently and ( 4 ) playing @xmath135 in @xmath14 tricomplexity .",
    "the definitions of all four of these properties , unlike , for instance , the definitions of the _ unconditional _ versions of the last three ( cf .",
    "section [ sq ] ) , only look at the @xmath133-legal plays of @xmath1250 by @xmath169 .",
    "this means that it virtually does not matter what happens if @xmath169 s adversary starts playing illegally .",
    "we design @xmath169 as a single - work - tape hpm.[xghjy ] at the beginning of the play , as usual , it waits  without consuming any space  till environment chooses constants @xmath152 for all @xmath1258 free variables @xmath1259 of @xmath1252 .",
    "if this never happens , @xmath169 is an automatic winner trivially complying with the providence , prudence and @xmath14 tricomplexity conditions .",
    "having said that , for the rest of this construction and our subsequent analysis of it , we shall assume that , in the scenario that we are considering , environment indeed chose the constants @xmath152 ( fix them ! ) for @xmath1259 during an initial episode of the play .",
    "let us agree that a * quasilegal move*[xqlm ] ( of @xmath138 ) means a move that may appear , with either label , in some quasilegal run of @xmath138 . and",
    "the * truncation*[xtrun ] of a move @xmath137 is the @xmath138-prudentization of the longest prefix @xmath140 of @xmath137 such that @xmath140 is also a prefix of some quasilegal move note that , in view of our earlier assumption that @xmath1252 is not elementary , every move has a ( possibly empty ) truncation .",
    "once all constants @xmath152 are chosen by environment , @xmath196 computes the value of @xmath1260 and remembers it for possible use in the future .",
    "it is not hard to see that , in view of the basic closure properties of boundclasses and the relevant conditions of definition 2.2 of @xcite , @xmath1260 can be computed and recorded in space @xmath1261 and time @xmath1262 . for this reason , when trying to show that @xmath169 runs in tricomplexity @xmath14 , the present episode of computing and remembering @xmath1260 can ( and will ) be safely ignored .    upon the completion of the above step , @xmath196 starts simulating @xmath60 in the scenario where , at the very beginning of the play  on cycle @xmath42 , that is  the imaginary adversary of the latter chose the same constants @xmath152 for the free variables of @xmath1252 as ( @xmath169 s real ) environment did .",
    "a simulation would generally require maintaining and continuously updating configurations of @xmath60 . however , the challenge is that @xmath196 can not afford to fully represent such configurations on its work tape .",
    "for instance , if all bounds in @xmath58 are sublinear , representing the run tape content of @xmath60 would require more than @xmath58 space . similarly , the size of the content of the buffer of @xmath60 could occasionally go beyond the @xmath58 bound . for the above reasons , when dealing with a @xmath80th computation step of the simulated @xmath60 , we let @xmath196 , on its work tape , only keep representations of the other ( and some additional , previously redundant ) components of the corresponding configuration of @xmath191 .",
    "namely , with `` current '' below referring to an arbitrary given @xmath80th computation step of @xmath60 , on its work tape @xmath196 maintains the following pieces of information , as well as the earlier computed @xmath1260",
    ". whenever possible , we prefer not to mention explicitly these or similar , asymptotically irrelevant / superseded , pieces of information or events . ]",
    " call them together the * sketch*[xsketch ] of the @xmath80th configuration ( computation step ) of @xmath191 :    1st component : :    the current state of @xmath191 .",
    "2nd component : :    the current contents of the work tapes of @xmath191 .",
    "3rd component : :    the current locations of the work - tape heads of    @xmath191 .",
    "4th component : :    the current location of the run - tape head of    @xmath191 .",
    "5th component : :    the number of moves that @xmath191 has made so far    ( at steps @xmath1263 ) in the play .",
    "6th component : :    the current number of symbols in the buffer of    @xmath191 .",
    "7th component : :    the ( possibly empty ) string @xmath137 that has been added    to the buffer of @xmath60 when it made a transition to    the @xmath80th step from the preceding , @xmath581th ,    step ; here we stipulate that , if @xmath1264 , i.e. , if there is    no preceding step , then such a string @xmath137 is empty . 8th component : :    the truncation @xmath140 of the move @xmath137    currently written in the buffer .        _",
    "1st component _ : :    recording this component , of course , takes a constant and hence    @xmath1254 amount of space . _",
    "2nd component _ : :    since @xmath60 runs in unconditional space    @xmath58 , this component can be    represented with @xmath1254 space . _ 3rd component _ : :    the amount of space needed for recording this component obviously does    not exceed the preceding amount  in fact , it is logarithmic in    @xmath1254 . _",
    "4th component _ : :    by our definition of hpms from @xcite , the run - tape head can never go    beyond the leftmost blank cell .",
    "so , how many non - blank cells may be on    the imaginary run tape of @xmath60 ?",
    "since    @xmath60 plays in unconditional amplitude    @xmath52 , and since it plays    @xmath1252 quasilegally and hence makes at most    @xmath1249 moves , the @xmath149-labeled    moves residing on @xmath60 s run tape only take    @xmath1257 space .",
    "next , as we    are going to see later , all @xmath133-labeled moves    residing on @xmath60 s run tape are copies ( made by    @xmath169 ) of @xmath133-labeled moves    residing on @xmath169 s run tape , by the clean    environment assumption meaning that their quantity is bounded by    @xmath1249 , and also implying that those moves are    quasilegal , due to which ( not only their magnitudes but also ) their    sizes do not exceed @xmath1265 . for this reason ,",
    "the    @xmath1266-labeled moves of @xmath60 s run    tape , just like the @xmath149-labeled moves , only take    @xmath1257 of total space .    thus , there are at most    @xmath1257 different possible    locations of @xmath60 s run - tape head . representing",
    "any of such locations takes    @xmath1267 and hence  by    clause 5 of definition 2.2 of @xcite     @xmath1254 space .",
    "_ 5th component _ : :    since @xmath60 plays @xmath1252 quasilegally , the    number of moves that @xmath191 has made so far can    never exceed @xmath1249 , so holding the 5th component    in memory only takes a constant amount of space .",
    "_ 6th component _ : :    let @xmath859 be the number of symbols currently in    @xmath60 s buffer .",
    "assume @xmath1268 , for    otherwise holding it takes no space .",
    "consider the scenario where    @xmath60 s adversary does not make any moves beginning    from the current point .",
    "since @xmath60 is    unconditionally provident , sooner or later it should make a move    @xmath137 that is an extension of the move currently in the    buffer , so the number of symbols in @xmath137 is at least    @xmath859 .",
    "but , since @xmath60 plays    @xmath1252 quasilegally and runs in unconditional    @xmath52 amplitude , the number of    symbols in @xmath137 can not exceed    @xmath1257 .",
    "that is ,    @xmath859 does not exceed    @xmath1257 . holding such an    @xmath859",
    "therefore requires at most    @xmath1267 space , and hence     again by clause 5 of definition 2.2 of @xcite     @xmath58 space . _",
    "7th component _ : :    recording this component , of course , only takes a constant amount of    space .",
    "_ 8th component _ : :    with a moment s thought and with lemma [ lagg ] in mind , it can be seen    that , since @xmath140 is a truncation , the number of    symbols in it does not exceed @xmath1269 .    unfortunately , the sketch of a given computation step @xmath80 of @xmath191 alone is not sufficient to fully trace the subsequent steps of @xmath191 and thus successfully conduct simulation .",
    "the reason is that , in order to compute ( the sketch of ) the @xmath1270th step of @xmath191 , one needs to know the content of the cell scanned by the run - tape head of @xmath191 .",
    "however , sketches do not keep track of what is on @xmath60 s run tape , and that information  unless residing on the run tape of @xmath196 itself by good luck  is generally forgotten .",
    "we handle this difficulty by letting the simulation routine recompute the missing information every time such information is needed .",
    "this is done through recursive calls to the routine itself . properly materializing this general idea",
    "requires quite some care though . among the crucial conditions for our recursive procedure to work within the required space limits",
    "is to make sure that the depth of the recursion stack never exceeds a certain constant bound .    to achieve the above goal",
    ", we let @xmath196 , in addition to the sketches for the simulated steps of @xmath60 , maintain what we call the * global history*.[xglhis ] the latter is a list of all moves made by @xmath60 and its adversary throughout the imaginary play of @xmath1252 `` so far '' .",
    "more precisely , this is not a list of moves themselves , but rather entries with certain partial information on those moves .",
    "namely , the entry for each move @xmath137 does not indicate the actual content of @xmath137 ( which could require more than @xmath58 space ) , but rather only the label of @xmath137 ( @xmath149 or @xmath133 , depending on whether @xmath137 was made by @xmath60 or its adversary ) and the size of @xmath137 , i.e. , the number of symbols in @xmath137 .",
    "recording this information only takes @xmath1267 and hence @xmath1254 space .",
    "further , according to the forthcoming observation ( [ gfjs ] ) , the number of entries in the global history never exceeds @xmath1271 ( in fact @xmath1249 , but why bother ) . since @xmath1249 is a constant",
    ", we find that @xmath196 only consumes an @xmath1254 amount of space for maintaining the overall global history . while a move @xmath137 is not the same as the entry for it in the global history , in the sequel we may terminologically identify these two .",
    "what do we need the global history for ? as noted earlier , during its work , @xmath196 will often have to resimulate some already simulated portions of the work of @xmath191 . to make such a resimulation possible ,",
    "it is necessary to have information on the times at which the adversary of @xmath191 has made its moves in the overall scenario that we are considering and re - constructing .",
    "recording the actual move _ times _ as they were detected during the initial simulation , however , could take us beyond our target space limits .",
    "after all , think of a situation where @xmath60 waits `` very long '' before its environment makes a move .",
    "so , instead , we only keep track  via the global history  of the _ order _ of moves .",
    "then we neutralize the problem of not remembering the `` actual '' times of @xmath191 s adversary s moves by simply assuming that @xmath191 s adversary always makes its moves instantaneously in response to @xmath191 s moves .",
    "the point is that , if @xmath191 wins @xmath1252 , it does so in all scenarios , including the above scenario of instantaneously responding adversary .",
    "it is important to note that , as will be immediately seen from our description of the work of @xmath196 , the moves recorded in the global history at any step of the work of @xmath196 are the same as the moves on the run tape of @xmath191 . and the latter , in turn , are copies of moves on the run tape of @xmath169 , with the only difference that , on @xmath169 s run tape , the @xmath149-labeled moves appear in truncated forms .",
    "the orders of moves in the global history and on the run tape of @xmath60 are exactly the same . as for the run spelled on the run tape of @xmath169 ,",
    "even if truncation did not really modify @xmath60 s moves , it may not necessarily be the same as the run spelled on the run tape of @xmath60 .",
    "instead , the former is only guaranteed to be a @xmath149-delay of the latter ( see section 3 of @xcite ) .",
    "however , this kind of a difference , just like having the @xmath149-labeled moves truncated , for our purposes ( for @xmath169 s chances to win ) is just as good as  or `` even better than ''  if the two runs were exactly the same .        in the context of a given global history @xmath1272 , this procedure takes the sketch @xmath1273 of a given computation step @xmath80 of @xmath60 , and returns the sketch @xmath1274 of the next computation step @xmath1275 of @xmath60 .",
    "let @xmath859 be the 5th component of @xmath1273 .",
    "the number @xmath859 tells us how many moves @xmath191 had made by time @xmath80 . in most cases ,",
    "update sketch  will be used while re - constructing some past episode of @xmath191 s work .",
    "it is then possible that the global history contains an @xmath1276th move by @xmath191 ( i.e. , with label @xmath149 ) .",
    "if so , then such a move , as well as all subsequent moves of @xmath1272 , are `` future moves '' from the perspective of the @xmath80th step of @xmath191 that update sketch  is currently dealing with .",
    "this means that , when `` imagining '' the situation at the @xmath80th step of @xmath191 , those moves should be discarded .",
    "so , let @xmath1277 be the result of deleting from @xmath1272 the @xmath1276th @xmath149-labeled move and all subsequent , whatever - labeled moves ( if there are no such moves , then simply @xmath1278 ) .",
    "thus , @xmath1277 is exactly a record of the moves that @xmath60 would see  in the same order as they appear in @xmath1277  on its run tape at step @xmath80 .",
    "the information contained in @xmath1273 is `` almost '' sufficient for update sketch  to calculate the sought value of @xmath1274 . the only missing piece of information is the symbol @xmath274 scanned by the run - tape head of @xmath191 on step @xmath80 .",
    "update sketch  thus needs , first of all , to figure out what that symbol @xmath274 is . to do this",
    ", update sketch  computes the sum @xmath269 of the sizes of all moves ( including their labels ) of @xmath1277 .",
    "next , let @xmath457 ( found in the 4th component of @xmath1273 ) be the number indicating the location of the run - tape head of @xmath191 on step @xmath80 .",
    "note that , in the scenario that update sketch   is dealing with , the length of the `` active '' content of @xmath191 s run tape is @xmath269 , with cell @xmath1279 and all subsequent cells being blank .",
    "so , update sketch  compares @xmath457 with @xmath269 .",
    "if @xmath1280 , it concludes that @xmath274 is .",
    "otherwise , if @xmath1281 , @xmath274 should be one of the symbols of one of the moves @xmath137 recorded in @xmath1277 . from @xmath1272 , using some easy logarithmic - space arithmetic , update sketch  figures out the author / label @xmath148 of @xmath137 , and also finds two integers @xmath188 and @xmath26 . here",
    "@xmath188 is the number of moves made by @xmath148 before it made the move @xmath137 .",
    "and @xmath26 is the number such that the sought symbol @xmath274 is the @xmath26th symbol of @xmath137 . if @xmath1282 , using @xmath188 and @xmath26 , update sketch  finds the sought symbol @xmath274 on the run tape of @xmath196",
    "otherwise , if @xmath1283 , update sketch  calls the below - described procedure fetch symbol  on @xmath1284 .",
    "as will be seen later , fetch symbol   then returns the sought symbol @xmath274 .",
    "thus , in any case , update sketch  now knows the symbol @xmath274 read by the run - tape head of @xmath191 on step @xmath80 .    keeping the above @xmath274 as well as the earlier computed value @xmath1260 in mind , . ]",
    "update sketch  now additionally consults @xmath1273 and finds ( all 8 components of ) the sought sketch @xmath1274 using certain rather obvious logarithmic space calculations , details of which we omit .      in the context of a given global history @xmath1272 , this procedure takes two numbers @xmath1285 , where @xmath188 is smaller than the number of @xmath149-labeled moves in @xmath1272 , and @xmath26 is a positive integer not exceeding the length of the @xmath1286th @xmath149-labeled move there .",
    "the goal of fetch symbol  is to return , through rerunning @xmath191 , the @xmath26th symbol of the @xmath1286th @xmath149-labeled move of @xmath1272 .    to achieve the above goal ,",
    "fetch symbol  creates a sketch - holding variable @xmath1287 , and sets the initial value of @xmath1287 to the * initial sketch*.[xinsk ] by the latter we mean the sketch of the initial configuration of @xmath191 , i.e. , the configuration where @xmath191 is in its start state , the buffer and the work tapes are empty , and all scanning heads are looking at the leftmost cells of their tapes .      1 .",
    "perform update sketch  on @xmath1287 .",
    "let @xmath1288 be the resulting sketch , and let @xmath1289 be the 7th component of @xmath1288 .",
    "below , as always , @xmath1290 means the length of ( number of symbols in ) @xmath1289 .",
    "2 .   let @xmath144 and @xmath103 be the 5th and 6th components of @xmath1287 , respectively . if @xmath1291 and @xmath1292 , then return the @xmath1293th symbol of @xmath1289 . otherwise , update the value of @xmath1287 to @xmath1288 , and go back to step 1 .",
    "stage @xmath84 : :    create a variable @xmath1287 and initialize its value to    the initial sketch of @xmath60 .",
    "proceed to stage    @xmath666 .",
    "stage @xmath666 : :    check out @xmath169 s run tape to see if environment    has made a new move ( this can be done , say , by counting the    @xmath133-labeled moves on the run tape , and comparing    their number with the number of @xmath133-labeled moves    recorded in the global history ) .",
    "if yes , update    @xmath1272 by adding to it a record for that move , and    repeat make history . if not , go to stage @xmath1294 .",
    "stage @xmath1294 : :       +    1 .",
    "perform update sketch  on @xmath1287 .",
    "let    @xmath1295 be the resulting sketch .    2 .",
    "if @xmath60 did not make a * globally new *    move[xgnm ] on its transition from @xmath1287 to    @xmath1295 , . ] change the value of the variable    @xmath1287 to @xmath1295 , and go back to    stage @xmath666 . here and later in similar contexts , by a    `` globally new '' move we mean a move not recorded in the global    history @xmath1272 . figuring out whether    @xmath60 made a globally new move is easy .",
    "technically , @xmath60 made a globally new move if and    only if , firstly , it _ did _ make a move , i.e. , the 1st component of    @xmath1295 is a move state ; and secondly , such a move is    not recorded in @xmath1272 , meaning that the 5th    component of @xmath1295 exceeds the total number of    @xmath149-labeled moves recorded in    @xmath1272 .",
    "suppose now @xmath60 made a globally new move    @xmath137 .",
    "let @xmath140 be the 8th component    of @xmath1287 .",
    "thus , @xmath140 is the    truncation of @xmath137 .",
    "copy @xmath140 to the    buffer ( of @xmath196 ) symbol by symbol , after which    go to a move state .",
    "this results in @xmath196 making    the move @xmath140 in the real play .",
    "now update the global    history @xmath1272 by adding to it a record for the move    @xmath137 , and repeat make history .",
    "we continue our description of the overall work @xmath196 , started on page but interrupted shortly thereafter . as we remember , at the very beginning of the play , @xmath196 waited till environment specified the @xmath1258 constants @xmath1296 for all free variables of @xmath1252 .",
    "what @xmath196 does after that is that it creates the variable @xmath1272 , initializes its value to record the sequence @xmath1297 , and then switches to running make history  forever .",
    "this completes our description of @xmath169 .        at the beginning of its work",
    ", @xmath196 waits till environment specifies a value for @xmath34 .",
    "let us say @xmath1300 is that value .",
    "after calculating @xmath1301 , which in the present case is @xmath1302 , @xmath196 creates the variable @xmath1272 and sets its value to contain a record for the ( single ) labmove @xmath1303 .",
    "the rest of the work of @xmath196 just consists in running make history .",
    "so , in what follows , we can use `` @xmath196 '' and `` make history '' as synonyms .    during its initialization stage @xmath84 ,",
    "make history  creates the variable @xmath1287 and sets its value to the initial sketch of @xmath191 .",
    "the result of this step reflects the start situation , where `` nothing has yet happened '' in the mixture of the real play of @xmath1252 by @xmath196 and the simulated play of @xmath1252 by @xmath60 , except for environment s initial move @xmath1304 .",
    "now make history  starts performing , over and over , stages @xmath666 and @xmath1294 .",
    "the work in those two stages can be characterized as `` global simulation '' .",
    "this is a routine that keeps updating , one step at a time , the sketch @xmath1287 ( stage @xmath1294 ) to the sketch of the `` next configurations '' of @xmath60 in the scenario where the imaginary adversary of @xmath60 has made the move @xmath1304 at the very beginning of the play ; every time the simulated @xmath60 is trying to read some symbol of this move , @xmath196 finds that symbol on its own run tape and feeds it back to the simulation .",
    "simultaneously , make history  keeps checking ( stage @xmath666 ) the run tape of @xmath196 to see if environment has made a new move .",
    "this will continue until either environment or the simulated @xmath60 is detected to make a new move . in our example , let us imagine that environment makes the move @xmath1305 , signifying choosing the constant @xmath1306 for @xmath64 in @xmath1252 .",
    "what happens in this case ?",
    "make history  simply restarts the global simulation by resetting the sketch @xmath1287 to the initial sketch of @xmath191 . the earlier - described `` stage @xmath666 and stage @xmath1294 over and over '' routine will be repeated , with the only difference that the global history @xmath1272 is now showing the presence of both @xmath1307 and @xmath1308 .",
    "this means that the simulation of @xmath60 will now proceed in the scenario where , at the very beginning of the play , @xmath60 s adversary had made the two moves @xmath1309 and @xmath1310 .",
    "so , every time the simulated @xmath60 tries to read one of the symbols of either move on its imaginary run tape , make history @xmath196 , that is  looks that symbol up on its own run tape . by switching to this new scenario ,",
    "make history , in fact , deems the previous scenario invalid , and simply forgets about it .",
    "this routine will continue until either environment or @xmath60 , again , is detected to make a move .",
    "let us say it is now @xmath60 , which makes the imprudent move @xmath1311 , signifying choosing the `` oversized '' ( of size @xmath1312 ) constant @xmath1313 for @xmath120 in @xmath1314",
    ". in this event , make history   @xmath196 , that is  assembles the truncation @xmath1315 of @xmath1311 in its buffer copying it from the 8th component of @xmath1287 , and then makes the move @xmath1315 in the real play . after that , as always when a new ( lab)move is detected , the global simulation restarts .",
    "now the global history @xmath1272 is showing records for the sequence @xmath1316 of three moves . in the present ,",
    "3rd attempt of global simulation , just like in the 2nd attempt , @xmath60 is resimulated in the scenario where , at the beginning of the play , its adversary had made the moves @xmath1309 and @xmath1310 .",
    "the only difference between the present attempt of global simulation and the previous one is that , once @xmath60 is detected to make the expected move @xmath1311 , nothing special happens .",
    "namely , the global history is not updated ( as @xmath1311 is already recorded there ) ; the move @xmath1315 is not made in the real play ( as it already has been made ) ; and the global simulation continues in the ordinary fashion rather than restarts .",
    "the present attempt of global simulation , again , will be interrupted if and when either environment or the simulated @xmath60 is detected to make a globally new move , i.e. , a move not recorded in the global history .",
    "let us say it is again environment , which makes the move @xmath1317 , signifying choosing the constant @xmath84 for @xmath258 in @xmath1252 .",
    "as always , a record for the new move is added to @xmath1272 , and the global simulation restarts .",
    "the resimulation of @xmath60 will start in the scenario where , at the beginning of the play , its adversary had made the moves @xmath1309 and @xmath1310 .",
    "we already know that , in this scenario , sooner or later , @xmath60 will make its previously detected move @xmath1311 .",
    "once this event is detected , @xmath191 s simulation continues for the scenario where its adversary responded by the move @xmath1317 _ immediately _",
    "after @xmath60 made the move @xmath1311 .",
    "imagine that the final globally new move detected is one by @xmath60 , and such a move is @xmath1318 , signifying choosing the constant @xmath42 for @xmath436 in @xmath1252 .",
    "make history  copies this move in the truncated form  which remains the same @xmath1318 because this move is quasilegal and prudent  in the real play .",
    "then , as always , @xmath1272 is correspondingly updated , and the global simulation is restarted with that updated @xmath1272 .",
    "the last attempt of global simulation ( the one that never got discarded / reconsidered ) corresponds to the `` ultimate '' scenario that determined @xmath196 s real play .",
    "namely , in our present example , the `` ultimate '' scenario in which @xmath191 was simulated is that , at the very beginning of the play , @xmath191 s adversary had made the moves @xmath1309 and @xmath1310 , to which @xmath191 later responded with @xmath1311 , to which @xmath191 s adversary immediately responded with @xmath1317 , to which , some time later , @xmath60 responded with @xmath1318 , and no moves were made ever after . while the imaginary run generated by @xmath60 in this scenario is @xmath1319 the real run generated by @xmath196 is @xmath1320 with ( [ amind2 ] ) being nothing but the result of replacing in ( [ amind1 ] ) all @xmath149-labeled moves by their truncations . since it is our assumption that @xmath60 wins @xmath1252 , ( [ amind1 ] ) is a @xmath149-won run of @xmath1252 .",
    "but then so is ( [ amind2 ] ) because , as noted earlier , truncating a given player s moves can ( increase but ) never decrease that player s chances to win .",
    "why do we need to restart the global simulation every time a globally new move is detected ?",
    "the reason is that otherwise we generally would not be able to rely on calls of fetch symbol  for obtaining required symbols .",
    "going back to our example , imagine we did not restart the global simulation ( make history ) after the moves @xmath1309 and @xmath1305 were made by environment . perhaps ( but not necessarily ) , as before , @xmath60 would still make its move @xmath1311 sometime after @xmath1305 .",
    "fine so far .",
    "but the trouble starts when , after that event , @xmath191 tries to read some symbol of @xmath1311 from its imaginary run tape . a way to provide such",
    "a symbol is to invoke fetch symbol , which will resimulate @xmath60 to find that symbol .",
    "however , in order to properly resimulate @xmath60 up to the moment when it made the move @xmath1311 ( or , at least , put the sought symbol of the latter into its buffer ) , we need to know when ( on which computation steps of @xmath60 ) , exactly , the labmoves @xmath1307 and @xmath1321 emerged on @xmath60 s run tape . unfortunately , we do not remember this piece of information , because , as noted earlier , remembering the exact times ( as opposed to merely remembering the order ) of moves may require more space than we possess .",
    "so , instead , we assume that the moves @xmath1309 and @xmath1322 were made right at the beginning of @xmath60 s play .",
    "this assumption , however , disagrees with the scenario of the original simulation , where @xmath1309 was perhaps only made at step @xmath1323 , and @xmath1322 perhaps at step @xmath1324 .",
    "therefore , there is no guarantee that @xmath60 will still generate the same move @xmath1311 in response to those two moves . restarting the global simulation",
    " as we did  right after @xmath1309 was made , and then restarting it again after @xmath1322 was detected , neutralizes this problem .",
    "if @xmath60 made its move @xmath1311 after @xmath1322 in this new scenario ( the scenario where its imaginary adversary always acted instantaneously ) , then every later resimulation , no matter how many times make history  is restarted , will again take us to the same move @xmath1311 made after @xmath1322 , because the global history , which `` guides '' resimulations , will always be showing the first three labmoves in the order @xmath1325 . to see this , note that all updates of the global history only add some moves to it , and otherwise do not affect the already recorded moves or their order .",
    "we also want to understand one remaining issue .",
    "as we should have noticed , fetch symbol  always calls update sketch , and the latter , in turn , may again call fetch symbol .",
    "where is a guarantee that infinitely many or `` too many '' nested calls will not occur ?",
    "let us again appeal to our present example , and imagine we ( update sketch , that is ) are currently simulating a step of @xmath60 sometime after it already has made the move @xmath1318 . whenever @xmath60 tries to read a symbol of @xmath1326 , fetch symbol  is called to resimulate @xmath191 and find that symbol . while resimulating @xmath191 , however , we may find that , at some point , its run - tape head is trying to read a symbol of the earlier labmove @xmath1327 . to get that symbol ,",
    "fetch symbol  will be again called to resimulate @xmath60 and find that symbol .",
    "can this process of mutual calls go on forever ? not really .",
    "notice that , when fetch symbol  is called to find the sought symbol of @xmath1327 , fetch symbol , guided by the global history , will resimulate @xmath60 only up to the moment when it made the move @xmath1311 . but",
    "during that episode of @xmath60 s work , the labmove @xmath1326 was not yet on its run tape .",
    "so , fetch symbol  will not have to be called further .",
    "generally , as we are going to see in section [ sdfs ] , there can be at most a constant number of nested invocations of fetch symbol  or update sketch .",
    "as seen from the description of make history , the @xmath133-labeled moves recorded in @xmath1272 are the moves made by ( @xmath169 s real ) environment .",
    "since the latter is assumed to play legally , the number of @xmath133-labeled moves in @xmath1272 can not exceed @xmath1249 .",
    "similarly , the @xmath149-labeled moves of @xmath1272 are the moves made by @xmath60 in a certain play . therefore ,",
    "as @xmath60 is a quasilegal solution of @xmath1250 , the number of such moves can not exceed @xmath1249 , either .",
    "thus , with `` never '' below meaning `` at no stage of the work of @xmath169 '' , we have : @xmath1328 since every iteration of make history  increases the number of labmoves in @xmath1272 , an immediate corollary of ( [ gfjs ] ) is that @xmath1329    since make history   is restarted only finitely many times , the last iteration of it never terminates .",
    "let @xmath146 be the sequence of labmoves recorded in the final value of @xmath1272 ( i.e. , the value of @xmath1272 throughout the last iteration of make history ) .",
    "this is the run generated by the simulated @xmath60 in what we referred to as the `` ultimate scenario '' in the preceding subsection ( scenario = computation branch ) .",
    "next , let @xmath157 be the run generated by @xmath169 in the real play that we are considering . since @xmath60 is a solution of @xmath1250",
    ", @xmath146 is a @xmath149-won run of @xmath1250 .",
    "we want to verify that then @xmath157 is also a @xmath149-won run of @xmath1250 , meaning that @xmath169 , too , is a solution of @xmath1250 .    how do @xmath146 and @xmath157 differ from each other ? as noted at the end of section [ sgst ] , an analysis of the work of @xmath169 , details of which are left to the reader , reveals that there are only two differences .",
    "the first difference is that the @xmath149-labeled moves of @xmath146 appear in @xmath157 in truncated forms .",
    "this is so because , whenever @xmath169 makes a move ( according to the prescriptions of stage 3(c ) of make history ) , it copies that move from the 8th component of the sketch of the step of @xmath60 on which the latter made a move @xmath137 ; but the 8th component of a sketch always holds the truncation of the move residing in @xmath60 s buffer ; thus , the move @xmath140 made by @xmath169 in the real play / run @xmath157 is the truncation of the move @xmath137 made by @xmath60 in the imaginary play / run @xmath146 .",
    "the second difference between @xmath146 and @xmath157 is that , even if we ignore the first difference  that is , even if we consider @xmath1202 instead of @xmath146  the run is still not guaranteed to be exactly the same as @xmath157 ; rather , we only know that the latter is a @xmath149-delay of the former .",
    "the reason for this discrepancy is that , while performing make history , @xmath169 may notice a move @xmath1330 by environment with some delay , only after it has first noticed a move @xmath1241 by @xmath60 and made the truncation @xmath1331 of @xmath1241 as a move in the real play ; if this happens , @xmath1332 will appear before @xmath1333 in @xmath146 but after @xmath1333 in @xmath157 .",
    "but the game @xmath1250 is static , as are all games studied in col . and , by the very definition of static games ( cf .",
    "section 3 of @xcite ) , @xmath157 s being a @xmath149-delay of @xmath1202 implies that , if @xmath1202 is a @xmath149-won run of @xmath1250 , then so is @xmath157 .",
    "this means that , in order to achieve our goal of proving that @xmath157 is a @xmath149-won run of @xmath1250 , it is sufficient to simply show that @xmath1202 is a @xmath149-won of @xmath1250 .",
    "this is what the rest of this subsection is devoted to , for the exception of the last paragraph of it .",
    "we may and will assume that different occurrences of quantifiers in @xmath1250 bind different variables .",
    "this is a legitimate assumption , because , if it is false , we can rename variables in @xmath1250 so as to make it true , with the new sentence , as a game , being virtually the same as the old sentence .    by a * unit*[xcwo ]",
    "we shall mean a subformula @xmath454 of @xmath1252 of the form @xmath1334 ( a * @xmath219-unit * ) or @xmath1335 ( a * @xmath1336-unit * ) . here",
    "@xmath302 is said to be the * master variable*[xmstvarb ] of @xmath454 , and @xmath1337 is said to be the * master condition*[xbptrg ] of @xmath454 .",
    "`` subunit '' and `` superunit '' , applied to units , mean the same as `` subformula '' and `` superformula '' .",
    "the * depth * of a unit[xdpthu ] @xmath454 is the number of its superunits ( including @xmath454 itself ) .",
    "a unit @xmath454 is * resolved*[xrsutt ] iff @xmath146 contains a move signifying choosing a constant for @xmath454 s master variable . for instance , if @xmath1252 is @xmath1338 and @xmath146 is @xmath1339 , then the units @xmath1340 and @xmath1341 are resolved while @xmath1342 is not .",
    "when @xmath300 is a free variable of @xmath1252 or the master variable of some resolved unit , then the * resolvent*[xrslf ] of @xmath300 is the constant chosen for @xmath300 in ( according to ) @xmath146 .",
    "for instance , if @xmath1252 and @xmath146 are as above , @xmath1343 is the resolvent of @xmath64 , @xmath1344 is the resolvent of @xmath120 and @xmath1345 is the resolvent of @xmath193 .",
    "a unit @xmath454 is * well - resolved*[xuwrte ] iff @xmath454 is resolved and the result of replacing all free variables by their resolvents in @xmath454 s master condition is true .",
    "a unit is * ill - resolved * iff it is resolved but not well - resolved.[xillres ] a * critical * [ xcrun ] unit is an ill - resolved unit all of whose proper superunits are well - resolved .",
    "let @xmath114 be the subaggregate bound of @xmath1252 . for @xmath1346",
    ", we define @xmath1347 note that the superaggregate bound @xmath1251 of @xmath1252 is nothing but @xmath1348 , where @xmath1349 is the total number of all units . for this reason , taking into account that the depth of no unit can exceed @xmath1349 , we have : @xmath1350    [ clai2 ] consider an arbitrary resolved unit @xmath454 .",
    "let @xmath116 be its depth , and @xmath144 be the resolvent of its master variable .",
    "if all superunits of @xmath454 ( including @xmath454 itself ) are well - resolved , then @xmath1351 .",
    "induction on @xmath116 .",
    "assume the conditions of the lemma .",
    "let @xmath300 be the master variable of @xmath454 , and let @xmath1352 be the master condition of @xmath454 , with all free variables displayed , where @xmath1353 are from among the free variables of @xmath1252 , and @xmath1354 are from among the master variables of the proper superunits of @xmath454 .",
    "let @xmath1355 be the resolvents of @xmath1356 , respectively .",
    "below we shall use @xmath76 , @xmath86 and @xmath568 as abbreviations of @xmath1357 , @xmath1358 and @xmath1359 , respectively .",
    "let @xmath1360 be the unarification of @xmath44 .",
    "@xmath454 s being well - resolved means that @xmath223 does not exceed @xmath1361 .",
    "hence , by the monotonicity of @xmath44 , we have @xmath1362 .",
    "but , of course , @xmath1363 ( recall that @xmath114 is the subaggregate bound of @xmath1252 ) .",
    "thus , @xmath1364 .",
    "this means that , in order to verify our target @xmath1365 , it is sufficient to show that both @xmath1366 and @xmath1367 .      as for @xmath1367 , first assume @xmath1104",
    ". then @xmath1370 and hence @xmath1371 ; also , @xmath1372 is @xmath114 .",
    "thus , we want to show that @xmath1373 . but this is immediate from the monotonicity of @xmath114 .",
    "now assume @xmath793 . by the induction hypothesis , @xmath1374 .",
    "so , @xmath1375 .",
    "but , of course , @xmath1376 . thus , @xmath1367 .",
    "we are now in the position to see that @xmath1202 inherits @xmath146 s being a @xmath149-won run of @xmath1250 .",
    "let @xmath1377 be all the critical @xmath219-units , and let @xmath1378 be the resolvents of @xmath1379 , respectively .",
    "similarly , let @xmath1380 be all the critical @xmath1336-units , and let @xmath1381 be the resolvents of @xmath1382 , respectively .",
    "it is not hard to see that , following the notational conventions of section 5.3 of @xcite and section 7 of @xcite , the paraformula @xmath1383 can be written as @xmath1384\\end{array}\\ ] ] for some @xmath10 , @xmath1385 . with some additional analysis of the situation and with ( [ jsd ] ) and lemma [ clai2 ] in mind",
    ", one can see that the paraformula @xmath1386 can then be written as @xmath1387\\end{array}\\ ] ] for some @xmath1388 , @xmath1389 , @xmath1390 ( and with all other parameters the same as in ( [ sa1 ] ) ) .    by the definition of the prefixation operation ( definition 2.2 of @xcite ) , the fact that @xmath146 is a @xmath149-won run of @xmath1250  written as @xmath1391  implies ( in fact , means the same as ) that the empty run @xmath331 is a @xmath149-won run of @xmath1392 , which , since @xmath1393 , can be written as @xmath1394   = { \\top}. \\end{array}\\ ] ] consider any @xmath1395 . since the unit @xmath1396 is critical and",
    "hence ill - resolved , @xmath1397 exceeds @xmath1398 . hence @xmath1399 .",
    "this clearly allows us to rewrite ( [ ioloi ] ) as @xmath1400   = { \\top}.\\ ] ] the monotonicity of the operators @xmath1401 of @xmath10 , just as in classical logic , allows us to replace the @xmath133s by whatever games in the above equation , so the latter can be further rewritten as @xmath1402   = { \\top}.\\end{array}\\ ] ] next , for similar reasons , for every @xmath1403 we have @xmath1404 and hence @xmath1405 , which allows us to rewrite ( [ poil ] ) as @xmath1406   = { \\top}. \\end{array}\\ ] ] however , the @xmath1407 $ ] part of ( [ po ] ) is identical to ( [ sa2 ] ) , which , in turn , is nothing but @xmath1408 . if so , the target @xmath1409 is an immediate consequence of ( [ po ] ) .",
    "thus , @xmath169 is a solution of @xmath1252 , as desired . as such",
    ", it is both provident and prudent .",
    "@xmath169 is provident because , as a simple examination shows , it only puts something into its buffer while acting according to clause 3(c ) of the description of make history ; however , at the end of the same clause , we see a prescription for @xmath169 to move , and thus empty the buffer . as for prudence , it is automatically achieved because @xmath169 only makes truncated moves , and such moves are always prudent .",
    "since @xmath169 merely mimics  perhaps in the truncated form and perhaps with some delay  @xmath60 s moves , it is obvious that the amplitude complexity of the former does not exceed that of the latter .",
    "in fact , @xmath169 s running in the target amplitude is also guaranteed by the facts that @xmath1018 ( clause 5 of definition 2.2 of @xcite ) , @xmath1252 is @xmath58-bounded and @xmath196 plays @xmath1252 prudently .",
    "let @xmath1272 be a global history , and @xmath859 a natural number .",
    "we define the * @xmath1272-index*[xhindx ] of @xmath859 as the number of moves in @xmath1277 , where @xmath1277 is the result of deleting from @xmath1272 the @xmath1276th @xmath149-labeled move and all subsequent whatever - labeled moves ; if here @xmath1272 does not contain more than @xmath859 @xmath149-labeled moves , then @xmath1277 is simply @xmath1272 .",
    "next , where @xmath1287 is a sketch , we define the * @xmath1272-index * of @xmath1287 as the @xmath1272-index of @xmath859 , where @xmath859 is the value of the 5th component of @xmath1287 .",
    "we extend the concept of @xmath1272-index to particular runs / iterations of update sketch  and fetch symbol  in the process of performing make history .",
    "namely , update sketch  is always run on a sketch @xmath1287 , and we define the * @xmath1272-index * of that run of update sketch  to be the @xmath1272-index of @xmath1287 .",
    "similarly , fetch symbol  is always called on a pair @xmath1284 for some numbers @xmath188 and @xmath26 , and we define the * @xmath1272-index * of such a call / run of update sketch  as the @xmath1272-index of @xmath188 ( @xmath26 is thus irrelevant here ) . if @xmath1272 is fixed or clear from the context , we may omit `` @xmath1272- '' and simply say `` * index * '' .      1",
    ".   the index of any run of update sketch   does not exceed @xmath1271 .",
    "whenever a given run of update sketch  calls fetch symbol , the index of the callee is strictly smaller than that of the caller .",
    "3 .   whenever a given run of fetch symbol  calls update sketch",
    ", the index of the callee does not exceed that of the caller .",
    "clause 1 is immediate from the obvious fact that an index can never exceed the number of moves in the global history , and the latter , according to ( [ gfjs ] ) , is bounded by @xmath1271 .",
    "clauses 2 and 3 can be verified through a rather straightforward ( albeit perhaps somewhat long ) analysis of the two procedures update sketch  and fetch symbol ; details of such an analysis are left to the reader .",
    "we are now ready to examine the space complexity of @xmath196 .",
    "the space consumption of @xmath196 comes from the need to simultaneously maintain the global history and various sketches . as observed earlier , maintaining the global history consumes @xmath58 space , and , by lemma [ lsk ] , each sketch also consumes @xmath58 space . at",
    "any given time , the global history is kept in memory in a single copy .",
    "so , to show that the overall space consumption is @xmath58 , we need to show that , at any given time , the number of sketches simultaneously kept in the memory of @xmath196 does not exceed a certain constant . but",
    "this is indeed so .",
    "looking back at the work of make history , we see that , at any time , its top level maintains a single sketch .",
    "it also keeps going through this sketch and updating it through update sketch , one step at a time .",
    "since updates are done sequentially , space used for them can be recycled , so space consumptions for updating different sketches ( this includes not only the top - level sketch of make history , but also many additional sketches that will emerge during calls to fetch symbol  when updating each individual sketch ) do not add together unless those sketches happen to be on a same branch of nested recursive calls that update sketch  and fetch symbol  make to each other . in view of lemma [ mmm ] , however , the depth of recursion ( the height of the recursion stack at any time ) is bounded , because the index of update sketch  in the topmost level of recursion does not exceed @xmath1271 , and every pair of successor levels of recursion strictly decreases the index of the corresponding call of update sketch .      as we observed in ( [ opop ] ) , during the entire work of @xmath196 ,",
    "make history  is iterated at most @xmath1271 times .",
    "the last iteration runs forever , but @xmath196 is not billed for that time because it makes no moves during that period .",
    "likewise , @xmath1410 will not be billed for the time spent on an iteration of make history  that was terminated at stage 2 , because a move by environment resets @xmath169 s time counter to @xmath42 .",
    "call the remaining sorts of iterations of make history   namely , the iterations that terminate according to the scenario of case ( c ) of stage 3  * time - billable*.[xtmbl ] so , it is sufficient for us to understand how much time a single time - billable iteration of make history  takes .",
    "pick any such iteration and fix it throughout the context of the rest of this section , including the forthcoming lemma [ mmmm ] .",
    "we will use @xmath163 to denote the background of the last clock cycle of that iteration .",
    "we verify this lemma by induction on the index @xmath1411 of the corresponding call / run of update sketch  or fetch symbol .",
    "assume @xmath1194 is the index of a given run of update sketch .",
    "looking back at our description of update sketch , we see that this routine makes at most one call of fetch symbol .",
    "first , assume no such call is made .",
    "due to @xmath169 s playing prudently , @xmath1412 is the maximum magnitude of any move that may appear on @xmath169 s run tape at any given time of the iteration .",
    "we also know from lemma [ lagg ] that @xmath1413 .",
    "so , @xmath196 s run - tape size ( by which , as usual , we mean the size of the non - blank segment of the tape ) is @xmath1414 and hence , by the relevant clauses of definition 2.2 of @xcite , is @xmath1256 .",
    "we also know that the sketch and the global history are both of size @xmath1254 and hence @xmath1256 . keeping these facts in mind , with some analysis",
    "it is obvious that , in this case , update sketch   spends @xmath1256 time .",
    "now assume update sketch  _ does _ call fetch symbol . by clause 2 of lemma [ mmm ] , the index @xmath80 of such a call is less than @xmath116 .",
    "hence , by the induction hypothesis , the time taken by the latter is @xmath1256 .",
    "in addition to this , update sketch  only spends the same amount @xmath1256 of time as in the preceding case to complete its work .",
    "thus , in either case , the time consumption of update sketch  is @xmath1256 .",
    "now consider a run of fetch symbol , and let @xmath1194 be its index . by clause 3 of lemma [ mmm ] ,",
    "the index of any call of update sketch  that the given run of fetch symbol   makes is at most @xmath116 . by the induction hypothesis ,",
    "each such call of update sketch  consumes at most @xmath1256 time . processing any such call ( doing additional work related to it ) , in turn",
    ", obviously takes at most @xmath1256 time .",
    "so , each call of update sketch  costs our run of fetch symbol  at most @xmath1256 time .",
    "how many such calls of update sketch  will fetch symbol  make ?",
    "since @xmath60 runs in time @xmath59 , with a little thought one can see that the number of calls of update sketch  is at most @xmath1256 .",
    "so , the overall time cost of the run of fetch symbol  is @xmath1415 , which , in view of the closure of @xmath59 under @xmath1416 , remains @xmath1256 .",
    "stage 2 checks out the run tape , which may require moving the run - tape head of @xmath196 from one end of the ( non - blank segment of the ) run tape to the other end .",
    "additionally , the global history needs to be updated , but this can be done even faster .",
    "so , this stage obviously takes as much time as the size of @xmath169 s run tape , which , as observed in the proof of lemma [ mmmm ] , is @xmath1256 .",
    "stage 3 starts with performing update sketch  ( substage 1 ) , and this , by lemma [ mmmm ] , takes @xmath1256 time . with a little thought , the time taken by substages ( b ) and ( c ) of stage 3 can be seen to be at most quadratic in the size of @xmath169 s run tape .",
    "we know that the latter is @xmath1254 .",
    "hence so is @xmath1417 , because @xmath59 is closed under @xmath1416 .",
    "to summarize , none of the @xmath1294 stages of make history  takes more than @xmath1256 time .",
    "stage 1 is repeated only once , and the remaining two stages are repeated at most @xmath1256 times as can be seen with a little thought , keeping in mind that the iteration of make history  that we are dealing with is a time - billable one .",
    "if so , due to @xmath59 s closure under @xmath1416 , the overall time consumption is @xmath1256 , which obviously implies that @xmath169 plays @xmath1250 in time @xmath59 , as desired ."
  ],
  "abstract_text": [
    "<S> _ clarithmetics _ are number theories based on _ computability logic_. formulas of these theories represent interactive computational problems , and their `` truth '' is understood as existence of an algorithmic solution . </S>",
    "<S> various complexity constraints on such solutions induce various versions of clarithmetic . </S>",
    "<S> the present paper introduces a parameterized / schematic version @xmath0 . by tuning the three parameters @xmath1 in an essentially mechanical manner , </S>",
    "<S> one automatically obtains sound and complete theories with respect to a wide range of target _ tricomplexity _ classes , i.e. , combinations of time ( set by @xmath2 ) , space ( set by @xmath3 ) and so called amplitude ( set by @xmath4 ) complexities . </S>",
    "<S> sound in the sense that every theorem @xmath5 of the system represents an interactive number - theoretic computational problem with a solution from the given tricomplexity class and , furthermore , such a solution can be automatically extracted from a proof of @xmath5 . and complete in the sense that every interactive number - theoretic problem with a solution from the given tricomplexity class is represented by some theorem of the system . </S>",
    "<S> furthermore , through tuning the 4th parameter @xmath6 , at the cost of sacrificing recursive axiomatizability but not simplicity or elegance , the above _ extensional completeness _ can be strengthened to _ intensional completeness _ , according to which every formula representing a problem with a solution from the given tricomplexity class is a theorem of the system . </S>",
    "<S> this article is published in two parts . </S>",
    "<S> the previous part i has introduced the system and proved its completeness , while the present part ii is devoted to proving soundness . </S>"
  ]
}
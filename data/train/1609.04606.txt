{
  "article_text": [
    "an _ ( overlapping ) clustered graph _ @xmath0 consists of an undirected graph @xmath1 and a set @xmath2 of _ clusters _ ,",
    "i.e. , of subsets of the vertex set @xmath3 .",
    "a vertex may be contained in several clusters .",
    "moreover , clusters may overlap , i.e. , there might be @xmath4 with @xmath5 , @xmath6 , and @xmath7 .",
    "didimo et al .",
    "@xcite defined planarity for overlapping clustered graphs geometrically : an overlapping clustered graph @xmath0 is clustered planar if the vertices can be represented by distinct points , each edge @xmath8 by a curve @xmath9 , and each cluster @xmath10 by a simple closed region @xmath11 in the plane such that for @xmath12 we have that ( i ) @xmath13 , @xmath14 , ( ii ) @xmath15 if @xmath16 , and ( iii ) every connected region of @xmath17 contains a vertex .",
    "e.g. , the clustered graph in fig .",
    "[ fig : ex1 ] is clustered planar while the clustered graph in fig .",
    "[ fig : ex2 ] is not .",
    "clustered planarity is np - complete in general as shown in  @xcite , where the case with @xmath18 is examined . in @xcite , it was posed as an open question whether clustered planarity is polynomial - time solvable for overlapping clustered graphs if each cluster induces a connected subgraph .",
    "we will answer this question in the affirmative .",
    "[ fig : ex1 ]    [ fig : ex2 ]    if the clustering is hierarchical , i.e. , if any two clusters in @xmath2 are either disjoint or one is contained in the other then clustered planarity is the classical problem of c - planarity as considered in  @xcite .",
    "one of the most important open problems in the field of graph drawing is the complexity of c - planarity of hierarchically clustered graphs .",
    "an overview on the classical c - planarity problem can be found in  @xcite .",
    "dahlhaus  @xcite and later cortese et al .",
    "@xcite showed , that c - planarity of hierarchically clustered graphs can be solved in linear time if each cluster induces a connected subgraph .",
    "their approaches make use of the decomposition of the graph into 3-connected components as represented by bc- and spqr - trees .",
    "angelini et al .",
    "@xcite defined drawings with region - region crossings of hierarchically clustered graphs .",
    "these are essentially representations by points and regions such that all conditions of clustered planarity are fulfilled except for condition ( iii ) when @xmath19 and @xmath20 are both clusters .",
    "e.g. , fig .",
    "[ fig : ex2 ] shows a drawing of a clustered graph with one region - region crossing .",
    "observe that the intersection of the two regions does not contain a vertex as required by the definition of clustered planarity .",
    "angelini et al .",
    "@xcite showed how to use spqr - trees to test in polynomial time whether any hierarchically clustered graph with an underlying 2-connected graph has a drawing with region - region crossings .    if @xmath18 then clustered planarity is closely related to the np - complete problem of hypergraph ( vertex ) planarity as defined in  @xcite : given a set @xmath2 of subsets of a set @xmath3 , is there a planar support , i.e. , a planar graph @xmath21 such that each set in @xmath2 induces a connected subgraph of @xmath1 .",
    "various subclasses of planar supports that directly imply clustered planarity    such as trees , cacti , and outerplanar supports    were considered  @xcite .",
    "hypergraph planarity remains np - complete even if @xmath2 is the union of two partitions  @xcite .",
    "the proof in @xcite even shows that clustered planarity remains np - complete if the underlying graph @xmath1 is 2-connected , @xmath2 is the union of two partitions , each cluster contains at most two connected components , and the complement of any cluster at most three connected components .",
    "* contribution : * in sect .",
    "[ sec : co - connected ] we focus on the union of two partitions .",
    "we further require that for each cluster , both the cluster itself and its complement are connected .",
    "different from hierarchical clusterings , this connectivity property does not automatically imply clustered planarity in the overlapping case . yet , for the union of two partitions , we can give a characterization that yields a linear - time testing algorithm .",
    "finally , in sect .",
    "[ sec : c - connected - spqr ] and [ sec : c - connected - bc ] , we show how to use bc - trees , spqr - trees and the consecutive - ones property to obtain an algorithm for testing clustered planarity of possibly overlapping but connected clusters .",
    "the run time of the algorithm is polynomial in @xmath22 and @xmath23 .",
    "for a subset @xmath24 of the vertices of an undirected graph @xmath21 , we denote by @xmath25 $ ] the subgraph of @xmath1 induced by @xmath26 , i.e.  the graph with vertex set @xmath26 and edge set @xmath27 .",
    "a @xmath26-path ( @xmath26-cycle ) is a path ( simple cycle ) in @xmath25 $ ] .",
    "a _ partition _ of @xmath3 is a set @xmath28 of subsets of @xmath3 such that each vertex in @xmath3 is contained in exactly one set in @xmath28 . for two partitions @xmath29 and @xmath30 of @xmath3 , we define the _ intersection partition _ @xmath31 . the _ connected intersection partition _ of @xmath32 and @xmath33 is the partition induced by the connected components of @xmath25 , c \\in \\mathcal p_i$ ]",
    ".    a _ consecutive - ones ordering _ of a binary matrix is a permutation of its columns such that in each row all of the 1s are consecutive , i.e. such that each row is of the form @xmath34 .",
    "a binary matrix has the _ consecutive - ones property _ if and only if it has a consecutive - ones ordering . it can be tested in linear time whether a binary matrix has",
    "the consecutive - ones property and a consecutive - ones ordering can be found in linear time if it exists  @xcite .",
    "let @xmath0 be an overlapping clustered graph .",
    "let @xmath35 be the total size of all clusters .",
    "the clustered graph @xmath36 is _ c - connected _",
    "if @xmath25 $ ] is connected for all @xmath37 and _ c - co - connected _ if both , @xmath25 $ ] and @xmath38 $ ] , are connected for all @xmath39 .    if @xmath36 is c - connected then a _ c - planar embedding _ of @xmath1 for @xmath2 is a planar embedding of @xmath1 such that @xmath40 is in the outer face of @xmath25 $ ] for all @xmath37 .",
    "a graph @xmath41 is a _ c - planar support _ of a clustered graph @xmath0 if @xmath42 , @xmath43 is c - connected and there is a c - planar embedding of @xmath44 for @xmath2 .",
    "a clustered graph is _ c - planar _ if and only if it has a c - planar support .",
    "it was shown that a c - connected clustered graph  @xcite or a hierarchically clustered graph  @xcite , respectively , is clustered planar in the sense of @xcite if and only if it has a c - planar support .",
    "a vertex @xmath45 is a _ cut vertex _ of a connected graph @xmath1 if the graph that results from @xmath1 by deleting @xmath45 and its incident edges is not connected .",
    "a connected graph is _",
    "2-connected _ if it contains more than two vertices but no cut vertices .",
    "the _ blocks _ of a connected graph are the maximal 2-connected subgraphs and the subgraphs induced by bridges .",
    "the vertices of the _ block  cut tree ( bc - tree ) _ of a graph @xmath1 are the blocks and the cut vertices of @xmath1 .",
    "there is an edge in the block  cut tree between a block @xmath46 and a cut vertex @xmath45 if @xmath45 is contained in @xmath46 .",
    "two vertices @xmath45 and @xmath47 are a _",
    "separation pair _ of a 2-connected graph @xmath1 if the graph that results from @xmath1 by deleting @xmath45 and @xmath47 and their incident edges is not connected .",
    "a graph is _",
    "3-connected _ if it contains more than three vertices but no separation pair . an _",
    "spqr - tree _",
    "@xcite is a labeled tree that represents the decomposition of a 2-connected graph into 3-connected components .",
    "each node @xmath48 of an spqr - tree is labeled with a multi - graph skel@xmath49  called the _ skeleton _ of @xmath48 .",
    "there are four different types of labels with the skeletons : _ s - nodes _ for simple cycles , _ p - nodes _ for three or more parallel edges , _ r - nodes _ for a simple 3-connected graph , and _ q - nodes _ for two parallel edges .",
    "the q - nodes are the leaves of an spqr - tree .",
    "no two s - nodes , nor two p - nodes are adjacent in an spqr - tree . for each node @xmath48 of an spqr - tree",
    "there is a one - to - one correspondence of the edges of skel@xmath49 and the edges incident to @xmath48 ( except for the q - nodes where one of the two edges of the skeleton corresponds to the only incident edge of the q - node ) .",
    "the edge of skel@xmath49 corresponding to the edge @xmath50 of the spqr - tree is denoted by @xmath51 .",
    "we consider the edges of the skeletons oriented . for simplicity , we assume that the edges of the skeleton of an s - node are oriented as a directed cycle and the edges of the skeleton of a p - node are all oriented in parallel .",
    "we consider the spqr - tree @xmath52 rooted at a q - node @xmath53 .",
    "let @xmath48 be a node of @xmath52 .",
    "the _ root edge _ of skel@xmath49 is the edge that corresponds to the parent edge of @xmath48 .",
    "the _ poles _ of skel@xmath49 ( or node @xmath48 , respectively ) are the end vertices of the root edge .",
    "let skel@xmath54 be the skeleton of @xmath48 without the root edge .",
    "each node @xmath48 of the rooted spqr - tree represents a ( multi-)graph @xmath55 : the q - nodes ( excluding the root ) represent a graph with two vertices connected by an edge and additionally by the root edge .",
    "let @xmath48 be a non - leaf node of an spqr - tree and let @xmath56 be the children of @xmath48 . for @xmath57 , remove the edge associated with @xmath58 from both skel@xmath49 and @xmath59 .",
    "insert the remaining parts of @xmath59 into skel@xmath49 identifying the poles of @xmath59 with its counter parts in skel@xmath49 .",
    "the _ poles _ of @xmath55 are the poles of @xmath48 .",
    "let @xmath60 be @xmath61 without the root edge of skel@xmath49 .",
    "the edges of @xmath62 correspond to the q - nodes of the spqr - tree .",
    "every 2-connected graph is represented by a unique spqr - tree ( up to the choice of the root ) and the spqr - tree of a 2-connected graph can be constructed in linear time  @xcite .",
    "in this section we show that c - planarity of a c - co - connected clustered graph can be tested in linear time if the set of clusters is the union of two partitions .",
    "observe that in contrast to the hierarchical case  @xcite , there are c - co - connected clustered graphs with an underlying planar graph that are not c - planar .",
    "e.g. , the graph @xmath21 in fig .",
    "[ fig : co - connected_not_c - planar ] is 3-connected and , thus , has a unique embedding up to the choice of the outer face .",
    "no matter which face we choose as the outer face , there is always at least one cluster @xmath26 among the four clusters in @xmath63 such that @xmath25 $ ] contains a simple cycle enclosing a vertex in @xmath64 .",
    "the key for the algorithm is the following characterization .",
    "[ theo:2partitions ] let @xmath21 be a graph and let @xmath33 and @xmath32 be two partitions of @xmath3 such that the clustered graph @xmath65 is c - co - connected .",
    "let @xmath66 be the connected intersection partition of @xmath33 and @xmath67 . then @xmath68 is c - planar if and only if @xmath69 is c - planar .",
    "we first show that _ if @xmath70 is c - connected and c - planar then @xmath71 is c - planar _ : consider a c - planar embedding of @xmath1 for @xmath72 .",
    "let @xmath73 , @xmath74 , and @xmath75 with @xmath76 .",
    "assume there is a vertex @xmath45 in an inner face of @xmath25 $ ] .",
    "observe that by c - planarity of @xmath77 , all vertices in the inner faces of @xmath25 $ ] are in @xmath78 .",
    "since @xmath79 $ ] and @xmath80 $ ] are connected there must be a path from @xmath45 to @xmath26 that contains only vertices in one inner face of @xmath25 $ ] and thus in @xmath78 .",
    "therefore , @xmath45 and @xmath26 are in the same connected component of @xmath81 $ ] and hence @xmath82 .",
    "we now show that _ if @xmath70 is c - co - connected and @xmath71 is c - planar then @xmath83 is c - planar _ : let @xmath84 ( squared blue vertices in the drawing ) .",
    "c - co - connected implies that @xmath64 is contained in one face @xmath85 of @xmath25 $ ] ( shaded area in the drawing ) .",
    "we call @xmath26 _ bad _ if @xmath64 is contained in an inner face of @xmath25 $ ] . among all planar embeddings of @xmath1 that are c - planar for @xmath86 choose one that minimizes the number of bad clusters",
    ". assume there is a bad @xmath87 .",
    "we assume without loss of generality that @xmath88 .",
    "we show that this would yield a contradiction to the choice of the embedding .",
    "if @xmath26 is the union of some clusters in @xmath33 , choose a face @xmath89 of @xmath1 inside @xmath85 incident to a vertex of @xmath26 as the outer face , decreasing the number of bad clusters .",
    "otherwise , let @xmath90 intersect @xmath26 and @xmath91 .",
    "since @xmath92 $ ] is connected , @xmath93 is not empty .",
    "there must even be an edge @xmath94 that is in the outer face of @xmath92 $ ] : otherwise @xmath95 $ ] would enclose @xmath96 , i.e. , there is a cycle @xmath97 in @xmath98 $ ] with a vertex in @xmath96 in its inside .",
    "thus @xmath85 is contained in the region bounded by @xmath97 .",
    "however , @xmath97 is contained in a connected component of @xmath99 .",
    "this contradicts the fact that @xmath69 is c - planar .",
    "let now @xmath89 be a face of @xmath1 incident to @xmath100 in the outer face of @xmath92 $ ] .",
    "now @xmath89 is incident to a vertex of the outer face of both a graph induced by a cluster in @xmath33 and a graph induced by cluster in @xmath32 .",
    "thus , @xmath89 is not contained in any cluster .",
    "choosing @xmath89 as the outer face decreases the number of bad clusters .",
    "this contradicts that we have chosen a planar embedding minimizing the number of bad clusters .    since c - planarity for c - connected hierarchically",
    "clustered graphs can be tested in linear time  @xcite , it remains to show that @xmath86 can be constructed in linear time .",
    "since connected components can be computed in linear time it suffices to show that the intersection partition @xmath101 of two partitions @xmath29 and @xmath30 of @xmath3 can be computed in linear time .",
    "we introduce the following data structure : for @xmath102 , we use a vertex array with @xmath103=i$ ] for @xmath104 .",
    "we also initialize an array @xmath105 $ ] of stacks , where @xmath106 $ ] will contain the vertices of @xmath107 , @xmath108 in the order in which they appear in @xmath109 .",
    "we fill the stacks as follows : for @xmath110 and @xmath111 , we push @xmath45 to @xmath112 $ ] .",
    "now , the sets in @xmath101 can be obtained by going through the stacks and opening a new set whenever @xmath113 $ ] changes .",
    "this concludes the proof of the following theorem :    it can be tested in linear time whether a c - co - connected clustered graph is c - planar if the set of clusters is the union of two partitions of the vertex set .",
    "observe that if @xmath70 is only c - connected then @xmath114 does not have to be c - planar even if @xmath115 , @xmath116 , and @xmath117 are .",
    "[ fig : non_c_planar ]     +    [ fig : proof_non_c_planarb ]    [ fig : proof_non_c_planari ]    [ fig : proof_non_c_planarr ]    e.g. , let @xmath1 be the graph in fig .",
    "[ fig : non_c_planar ] , let @xmath33 and @xmath32 , respectively , be the partition of the vertex set enclosed by the red dotted and blue dashed curves , respectively .",
    "let @xmath86 be the connected intersection partition of @xmath33 and @xmath32 .",
    "the embedding in fig .",
    "[ fig : non_c_planar ] is c - planar for @xmath32 and @xmath66    see also fig .  [",
    "fig : proof_non_c_planarb]+[fig : proof_non_c_planari ] .",
    "[ fig : proof_non_c_planarr ] shows an embedding that is c - planar for @xmath33 .",
    "however , @xmath118 is not c - planar : assume that there would be an embedding that is c - planar for @xmath70 .",
    "we use the vertex labeling indicated in fig  [ fig : proof_non_c_planar ] . due to cluster @xmath119",
    "the interior of the cycle @xmath120 must be empty .",
    "thus , vertex 5 must be drawn outside @xmath121 . due to the cluster @xmath122 , vertex 2 and 6",
    "must not be enclosed by the triangle @xmath123 .",
    "it follows that the edges connecting 5 to @xmath121 must be drawn such that @xmath124 does not enclose @xmath121 and that 6 is outside @xmath124 . due to the edge @xmath125 ,",
    "vertex 7 is not enclosed by @xmath124 either .",
    "thus , except for the edge @xmath126 , the embedding is as indicated in fig .",
    "[ fig : proof_non_c_planarr ] .",
    "but no matter how we would add @xmath100 in a planar embedding , we would either create a cycle in @xmath25 $ ] enclosing vertex 2 or vertex 6 .",
    "we now describe a polynomial - time method for testing c - planarity for a planar 2-connected graph @xmath1 and a set of c - connected clusters @xmath127 .",
    "the method described in this section has some similarities with the algorithm described by angelini et al .",
    "@xcite for deciding whether a hierarchically clustered graph has a drawing with region - region crossings .",
    "the method we give here can , however , be also applied in sect .",
    "[ sec : c - connected - bc ] to the case where the underlying graph is not 2-connected .",
    "let @xmath52 be the spqr - tree of @xmath1 rooted at a @xmath128-node @xmath53 representing the edge @xmath100 of @xmath1 .",
    "the embeddings of @xmath52 represent the embeddings of @xmath1 with @xmath100 on the outer face .",
    "they in turn induce embeddings of the skeletons of all nodes of @xmath52 with their root edges on the outer face .",
    "apart from the choice of the root , i.e. , the choice of the outer face , the degrees of freedom we have are the order of the parallel components of the graph at the p - nodes , and in which way the r - nodes are flipped .    in the following",
    "let @xmath39 be a cluster such that @xmath25 $ ] is connected and let @xmath129 be a subset of vertices that we want to be incident to the outer face of @xmath25 $ ] ( we ll need @xmath130 in sect .",
    "[ sec : c - connected - bc ] ) .",
    "we label each node @xmath48 in @xmath52 and its corresponding edge in the skeleton of its predecessor node to capture , which parts of skel@xmath49 are contained in @xmath26 .",
    "let @xmath131 and @xmath132 be the poles of @xmath55 .",
    "the node @xmath48 is an _ inside _ node for @xmath26 , if @xmath55 is completely contained in @xmath26 and at most the poles @xmath131 and @xmath132 of @xmath55 are in @xmath130 .",
    "it is _ inappropriate _ if @xmath133 has no embedding with the poles on the outer face that is c - planar for @xmath134 and is such that @xmath130 is on the outer face of @xmath135 $ ] .",
    "node @xmath48 is an _ outside _ node , if it is not inappropriate and @xmath136 contains no @xmath26-path between its poles .",
    "@xmath48 is _ border _ if @xmath48 is neither inside nor outside and @xmath133 has an embedding with the poles on the outer face that is c - planar for @xmath134 and such that exactly one of the outer @xmath131-@xmath132-paths contains one or more vertices not in @xmath137 . in all other cases",
    "@xmath48 is _ double - border_. see fig .",
    "[ fig : example_labeling ] for an example with @xmath138 .",
    "traversing the spqr - tree , we can compute for all nodes whether they are inside , outside , border , double - border , or inappropriate for a given cluster @xmath26 .",
    "let node @xmath48 be neither inside nor outside .",
    "if @xmath48 has an inappropriate child then @xmath48 is also inappropriate . in the following , we assume that @xmath48 has no inappropriate children . if @xmath48 is a _",
    "p - node _ it is _ border _ if it has no double - border node and at most one border node among its children .",
    "double - border _ if it either has no double - border node and exactly two border nodes or exactly one double - border node and neither inside nor border nodes among its children .",
    "otherwise it is _",
    "inappropriate_. if @xmath48 is an _",
    "s - node _ , it is _",
    "double - border _ if it has at least one double - border node as child and _ border _ otherwise .",
    "if @xmath48 is an _",
    "r - node _ consider skel@xmath54 embedded with the poles @xmath131 and @xmath132 on the outer face .",
    "@xmath48 is _ inappropriate _ if there is a simple cycle in skel@xmath54 that does not contain outside edges but ( a ) contains double - border edges or ( b ) encloses vertices in @xmath130 or non - inside edges .",
    "otherwise , it is _",
    "double - border _ if both @xmath131-@xmath132-paths on the outer face contain vertices in @xmath139 or non - inside edges . in the remaining cases @xmath48 is",
    "border_. finally , if @xmath140 is the root , let @xmath100 be the edge of @xmath1 represented by @xmath53 .",
    "if @xmath100 does not have both end vertices in @xmath26 then @xmath53 has the same label as its unique child @xmath141 .",
    "otherwise @xmath53 is _ border _ if @xmath141 is outer or border and _ inappropriate _ otherwise .",
    "[ fig : example_labeling_graph ]    [ fig : example_labeling_tree ]    an _ external path _ of a node @xmath48 is a path in @xmath1 between the poles of @xmath55 that does not contain any other vertices of @xmath55 .",
    "we label the root edge of skel@xmath49 _ inside _ for @xmath26 if @xmath48 has an external @xmath26-path and _ outside _ otherwise .",
    "we say that an external path @xmath142 of node @xmath48 is _ to the right ( left ) of _ @xmath48 with respect to the ordered pair @xmath143 of its poles if the cycle that is induced by @xmath142 in the graph that results from @xmath1 by contracting @xmath55 is oriented ( counter- ) clockwise assuming that @xmath142 was oriented from @xmath132 to @xmath131 .",
    "two external paths of @xmath48 are on the _ same side _ of @xmath48 if they are both to the right or both to the left of @xmath48 with respect to an arbitrary ordering of the poles of @xmath48 . otherwise , they are on _ different sides_.    [ lemma : char ] let @xmath21 be a 2-connected graph , let @xmath144 be a cluster inducing a connected subgraph of @xmath1 , let @xmath145 , let @xmath52 the spqr - tree of @xmath1 , and let @xmath53 be a q - node of @xmath52 representing the edge @xmath100 of @xmath1 . a planar embedding of @xmath1 with @xmath100 on the outer face is c - planar for @xmath134 with @xmath130 incident to the outer face of @xmath25 $ ] , if and only if the following conditions are fulfilled for any non - inside node @xmath48 of its spqr - tree @xmath52 .    1 .",
    "all external @xmath26-paths of @xmath48 are embedded on the same side of @xmath55    which we reflect by the embedding of the root edge of skel@xmath49 .",
    "2 .   skel@xmath49 contains no simple cycle of non - outside edges that encloses a non - inside edge or a vertex in @xmath130 .",
    "clearly , both conditions must be fulfilled for a c - planar embedding with @xmath130 on the outer face of the cluster .",
    "so assume now that both conditions are fulfilled .",
    "let @xmath146 , let @xmath147 be an edge incident to @xmath45 , and let @xmath148 be the q - node representing @xmath149 .",
    "assume that @xmath1 contains a @xmath26-cycle @xmath150 enclosing @xmath45 . by condition",
    "1 , there is no node @xmath48 on the @xmath148-@xmath53-path such that @xmath150 can be decomposed into two external @xmath26-paths of @xmath48 .",
    "so , let @xmath48 be the first node on the @xmath148-@xmath53-path such that @xmath150 is contained in @xmath136 or can be composed by a path in @xmath136 and an external @xmath26-path of @xmath48 .",
    "observe that @xmath150 induces a cycle @xmath97 in skel@xmath49 that contains only non - outside edges .",
    "let @xmath141 be the child of @xmath48 on the @xmath148-@xmath48-path . by the choice of @xmath48 it follows that @xmath97 does not contain the edge @xmath51 of skel@xmath49 .",
    "hence @xmath97 encloses the edge @xmath51 .",
    "however , @xmath51 was either not inside or @xmath151 is an end vertex of @xmath51 not in @xmath97    contradicting condition  2 .    in the following ,",
    "we construct a set of binary matrices from an initial embedding of  @xmath52 that have the consecutive - ones property , if and only if there is a c - planar embedding for @xmath2 with the fixed root edge on the outer face .",
    "the total size of the matrices will be in @xmath152 .",
    "for each possible root @xmath53 of @xmath52 that is not inappropriate for any @xmath153 , we start with a fixed embedding of @xmath52    including fixed flips of the r - nodes    and perform the following steps :      we split @xmath52 at each r - node , removing the edges from the r - node to its children from @xmath52 .",
    "let @xmath154 be the subtree containing @xmath53 .",
    "for each former non - leaf child @xmath155 of an r - node @xmath48 we attach a new q - node @xmath156 to @xmath155 .",
    "we root the subtree containing @xmath155 at @xmath156 and denote it by @xmath157 .",
    "we label @xmath156 inside for a cluster @xmath26 , if @xmath155 had an external @xmath26-path and outside otherwise . in the parent tree ,",
    "we replace the r - node @xmath48 by a special p - node @xmath148 with the same label and three q - nodes @xmath158 , @xmath159 , @xmath160 in this order as children .",
    "if the r - node @xmath48 was labeled border for a cluster @xmath26 , we label @xmath159 and exactly one among @xmath158 and @xmath160 as inside and the other as outside .",
    "more precisely , we label @xmath158 as outside if and only if the left outer path of skel@xmath54 between its poles contains non - inside edges or vertices from @xmath130 . if the r - node @xmath48 was labeled double - border , we label @xmath158 and @xmath160 as border and @xmath159 as inside . if the r - node was labeled inside or outside , we label all three children as inside or outside , respectively .",
    "we thus end up with a forest containing only s , p , and q - nodes .      for each root @xmath156 of one of the subtrees ,",
    "we create a new binary matrix @xmath161 .",
    "a node in @xmath157 is a _",
    "lowest - p - child _",
    ", if it is the child of a p - node and has no other p - nodes in its subtree .",
    "the embedding of @xmath157 induces an ordering of the lowest - p - children from left to right .",
    "we initialize @xmath161 with a column for each lowest - p - child in accordance with the ordering . for a node @xmath48 of @xmath157",
    ", we use @xmath162 to refer to the set of its _ corresponding columns _ in @xmath161 , i.e. the columns of the lowest - p - children in @xmath48 s subtree .",
    "for @xmath163 we create one additional _",
    "external column _ @xmath164 . for @xmath165 ,",
    "we create two additional _ external columns _",
    ", enclosing the rest of the matrix .",
    "for each cluster @xmath26 , one of the two external columns will represent the side of possible external @xmath26-paths of the child of @xmath156 and will be denoted by @xmath166 .",
    "we then create a row for each non - leaf node @xmath48 , adding 1s in the columns in @xmath162 and 0s in all other columns .",
    "this ensures that in every permutation of the columns of @xmath161 for which the 1s are consecutive in all rows , the columns of the lowest - p - children of each node remain adjacent , allowing a reconstruction of an embedding of @xmath157 from the ordering of the columns in @xmath161 .",
    "see fig .",
    "[ fig : matrix_init ] . if @xmath167 we add two rows having all 1s except for one 0 in the first or last external column , respectively .",
    "[ fig : labels_graph ]    [ fig : labels_tree ]     +    [ fig : labels_matrix ]    in order to fill the matrix @xmath161 , we traverse the tree @xmath157 with a post - order dfs . for each cluster @xmath39 and each examined node",
    "we add up to three rows to @xmath161 .",
    "we define for each node @xmath48 and each cluster @xmath26 a set @xmath168 of _ relevant rows_. for each lowest p - child @xmath48 , we set @xmath169 . the block @xmath170 is the submatrix of @xmath161 with entries in rows @xmath168 and columns @xmath162 .",
    "when we create rows in @xmath161 , the default entries are 0 and we explicitly mention when we set the entries to 1 .      for a p - node @xmath48 with children",
    "@xmath171 we initialize @xmath168 as @xmath172 . due to c - planarity",
    ", the children of @xmath48 must be permuted such that all inside children are consecutive pre- and succeeded by at most one border child and arbitrary many outside children . hence ,",
    "if @xmath48 is neither outside nor double - border , we add up to 3 constraint - rows @xmath173 , @xmath174 , and @xmath175 to @xmath168 . if @xmath48 has inside children , we add @xmath176 with 1s in all columns in @xmath177 where @xmath178 is an inside child of @xmath48 .",
    "this ensures that all inside children are placed in consecutive order .",
    "if @xmath48 has a child @xmath141 that is a border node , we add @xmath179 with 1s in all columns in @xmath180 and again with 1s in all columns in @xmath177 where @xmath178 is an inside child of @xmath48 .",
    "we do the same for a potential second border node in a third row @xmath181 .",
    "this ensures , that the border children are placed next to the inside children , with at most one border child on each side .",
    "finally , let @xmath141 be a child of @xmath48 let @xmath182 and let @xmath183 .",
    "then we set the entry in row @xmath184 and column @xmath185 to 1 , if one or more of the rows in @xmath186 contain a 1 in the same column .",
    "see fig .",
    "[ fig : p - matrix ] .",
    "[ fig : p - matrix ]    [ fig : s - matrix ]      if an s - node @xmath48 with children @xmath171 is outside then @xmath169 , otherwise @xmath187 .",
    "assume now that @xmath48 is not outside and has an external @xmath26-path .",
    "observe that in this case @xmath48 can not be double - border .",
    "otherwise @xmath53 would be inappropriate for @xmath26 .",
    "if @xmath48 has two or more p - nodes as children , we have to make sure that the 1s in each p - node and the 1s in the external path can be made consecutive via additional 1s .",
    "more precisely , let @xmath188 be the children of @xmath48 that are p - nodes .",
    "the upper half for a cluster @xmath26 are all entries in rows @xmath189 , @xmath57 and columns @xmath177 , @xmath190 while the lower half are all entries in columns @xmath177 , @xmath57 and rows @xmath189 , @xmath191 .",
    "we fill both , the upper and the lower half with 1s if @xmath48 is inside and we fill either the upper or the lower half with 1s if @xmath48 is border .",
    "see fig .",
    "[ fig : s - matrix ] .    recall that if @xmath48 is not inside then the external @xmath26-paths must all be on the same side of @xmath55 in a c - planar drawing of @xmath1 . however , external @xmath192- and @xmath193-paths could be on different sides for distinct clusters @xmath192 and @xmath193 .",
    "hence , we can not just always fill the upper half with 1s . to this end",
    ", we will define same and different constraints that only depend on the structure of the clustered graph .",
    "a same ( different ) constraint indicates that if there is a c - planar embedding then the external paths must be on the same ( different ) side .",
    "we call a cluster @xmath26 _ critical _ for @xmath48 if @xmath48 is border with respect to @xmath26 and has an external @xmath26-path .",
    "let @xmath192 and @xmath193 be two clusters that are critical for @xmath48 .",
    "if @xmath48 has an external @xmath192-path that is also an external @xmath193-path then there is a _",
    "same constraint _ between @xmath192 and @xmath193 .",
    "otherwise , there is a _ different constraint _ between @xmath192 and @xmath193 : assume that there would be an external @xmath192-path @xmath194 and an external @xmath193-path @xmath195 of @xmath48 that are on the same side of @xmath55 in a c - planar embedding of @xmath1 . since @xmath48 is border , there is a @xmath196-path @xmath197 , @xmath198 in @xmath133 .",
    "consider the cycles @xmath199 , @xmath198 composed by @xmath197 and @xmath200 . by c - planarity",
    ", each portion of @xmath194 that is inside @xmath201 must be in @xmath202 $ ] and vice versa .",
    "since @xmath194 and @xmath195 are on the same side of @xmath55 , there is an external path of @xmath48 that contains only edges of @xmath194 inside @xmath201 , edges of @xmath195 inside @xmath203 and common edges of @xmath194 and @xmath195 , i.e. , only edges in @xmath204 $ ] .",
    "fix now an arbitrary cluster @xmath26 that is critical for @xmath48 and assign @xmath26 the upper half .",
    "assign to any other cluster @xmath205 that is critical for @xmath48 the upper half if there is a same constraint between @xmath26 and @xmath205 and the lower half otherwise .",
    "if @xmath206 let @xmath48 be the unique child of @xmath53 and let @xmath100 be the edge represented by the q - node @xmath53 .",
    "then the external column is @xmath207 for each row in @xmath168 if the cluster @xmath26 contains both end vertices of  @xmath100 .    if @xmath165 then the unique child @xmath155 of @xmath156 was the child of an r - node @xmath48 .",
    "consider a fixed embedding of skel@xmath54 with its poles @xmath131 and @xmath132 on the external face .",
    "let @xmath26 be a cluster for which @xmath155 is a border node and has an external @xmath26-path .",
    "we have to make sure that the parts of @xmath208 that are not in @xmath209 are embedded such that they are not enclosed by a @xmath26-cycle in @xmath1 that is composed by an external @xmath26-path of @xmath155 and a @xmath26-path in @xmath210 between its poles @xmath211 and @xmath212 .",
    "consider first that skel@xmath54 contains a cycle @xmath97 containing @xmath213 and consisting only of non - outside edges . if @xmath97 is ( counter-)clockwise oriented when traversing @xmath213 from @xmath211 to @xmath212 , then we set @xmath166 to be the ( left ) right external column .",
    "otherwise all external @xmath26-paths of @xmath155 must contain an external @xmath26-path of @xmath48 .",
    "thus , @xmath48 is not double - border .",
    "moreover , the set of vertices of skel@xmath54 that can be reached from @xmath131 using only non - outside edges and not @xmath213 induces an @xmath131-@xmath132-cut of skel@xmath54 that contains @xmath213 and no other non - outside edges .",
    "it follows that @xmath213 is on the left ( right ) outer @xmath131-@xmath132-path and all external @xmath26-paths @xmath48 are to the left ( right ) of @xmath48 with respect to @xmath143 in any c - planar embedding .",
    "hence , if @xmath100 is on the left ( right ) outer @xmath131-@xmath132-path then we set @xmath166 to be the left ( right ) external column . in both cases we set the entry in column @xmath166 to 1 for each row in  @xmath214 .",
    "clearly the number of columns is linear in the number of q - nodes and r - nodes and thus linear in @xmath22 for planar graphs . for a cluster @xmath26 and a p - node @xmath48",
    ", we enter up to three rows but at most if both poles are in @xmath26 .",
    "observe that at least one of the poles of a p - node @xmath48 is not a pole of another p - node @xmath148 on the path from @xmath48 to the root .",
    "hence , the number of rows is bounded by @xmath215 .",
    "applying the next theorem with @xmath216 yields a characterization of c - connected overlapping clustered graphs with underlying 2-connected graphs .",
    "[ thm:2-connected ] a c - connected overlapping clustered graph @xmath217 with an underlying planar 2-connected graph @xmath1 and sets @xmath218 , @xmath10 has a c - planar embedding in which @xmath130 is incident to the outer face of @xmath25 $ ] for any @xmath219 if and only if the root of the spqr - tree of @xmath1 can be chosen such that it is not inappropriate for @xmath10 and all matrices @xmath161 fulfill the consecutive - ones property .",
    "let @xmath217 be an overlapping clustered graph .",
    "let the spqr - tree @xmath52 of @xmath1 be rooted at the q - node @xmath53 , and let @xmath100 be the edge represented by @xmath53 .",
    "* assume first that the columns of all matrices @xmath161 are permuted such that in each row the 1s are consecutive .",
    "* we may assume without loss of generality that the external columns were not permuted .",
    "starting from @xmath220 , we traverse @xmath52 and do the following at a non - leaf node @xmath48 .",
    "if @xmath48 is a p - node , we permute the children @xmath56 of @xmath48 according to the ordering of @xmath221 in the permuted matrix @xmath161 .    if @xmath48 is an r - node , we fixed an embedding of @xmath55 and replaced @xmath48 with a p - node and three incident q - nodes @xmath158 , @xmath159 , @xmath160 in this order .",
    "if @xmath48 was labeled inside or outside for all clusters then we maintain the fixed flip of @xmath55 .",
    "otherwise the labeling was such that @xmath222 will remain between @xmath223 and @xmath224 .",
    "we maintain the fixed embedding of @xmath55 if @xmath223 remains before @xmath224 after the permutation and flip @xmath55 otherwise .",
    "if we flip @xmath55 , we also reverse all matrices for all non - leaf nodes in the subtree rooted at @xmath48 that are children of an r - node .",
    "finally , we embed @xmath100 to the right of @xmath225 if the external column of @xmath163 is on the right hand side of @xmath163 and to the left otherwise .",
    "we show that this yields a c - planar embedding for @xmath2 : let @xmath10 and let @xmath158 be a non - inside node of @xmath52 .",
    "we show by induction on the length of the @xmath158-@xmath53-path that all external @xmath26-paths of @xmath158 are on the same side and that no non - inside edge and no vertex in @xmath226 is enclosed by a simple cycle of non - outside edges in skel@xmath227    provided that the root edge of skel@xmath49 is embedded on the same side as the external @xmath26-paths of @xmath158 .",
    "[ fig : casea ]    [ fig : caseb ]    [ fig : casec ]    first observe that if @xmath158 is an r - node then skel@xmath228 does not contain a simple cycle of non - outside edges that encloses a non - inside edge , otherwise @xmath158 would be inappropriate . let @xmath229 be a non - inside edge of skel@xmath227 or let @xmath230 be a vertex of skel@xmath227 other than the poles and let @xmath229 be an edge of skel@xmath227 incident to @xmath231 .",
    "let @xmath232 be the child of @xmath158 corresponding to @xmath229 .",
    "let @xmath194 and @xmath195 be two paths in @xmath25 $ ] with one of the following properties ( see fig .  [",
    "fig : threecases ] for an illustration ) : ( a ) @xmath158 is a p - node and there are two children @xmath233 of @xmath158 such that @xmath234 , @xmath235 is a path in @xmath236 between its poles , or ( b ) @xmath194 is a path in @xmath237 between its poles that intersects @xmath238 at most in its poles and @xmath195 is an external @xmath26-path of @xmath158 , or ( c ) @xmath194 and @xmath195 are both external @xmath26-paths of @xmath158 .",
    "we have to prove that the cycle composed by @xmath194 and @xmath195 does not enclose @xmath238 .",
    "let @xmath239 be the @xmath158-@xmath53-path .",
    "let @xmath240 . if @xmath234 in @xmath241 let @xmath242 .",
    "otherwise let @xmath243 be minimum such that @xmath244 is an r - node or @xmath245 contains @xmath234 .",
    "we may assume that @xmath246 .",
    "if @xmath244 is an r - node , we actually redefine @xmath244 to be the root @xmath156 of the tree containing @xmath247 : we replace @xmath234 by the respective path in @xmath248 through the root edge @xmath249 of skel@xmath250 . if @xmath158 was an r - node we redefine @xmath158 to be the special p - node with which we replaced the r - node and we redefine @xmath232 to be one of the artificial non - inside q - nodes we appended to @xmath158 .    observe that @xmath244 is either @xmath156 or a p - node and @xmath234 is composed by two @xmath26-paths @xmath251 and @xmath252 connecting the poles of @xmath253 with the poles of @xmath254 and a middle @xmath26-path @xmath255 .",
    "@xmath251 and @xmath252 are empty if @xmath242 . @xmath255",
    "consists of the edge @xmath249 if @xmath256 .",
    "if @xmath244 is a p - node then it has a non - outside child @xmath257 such that @xmath258 is a path in @xmath236 between its poles .",
    "we distinguish some cases .",
    "( 1 ) if @xmath259 or if @xmath260 and @xmath261 then @xmath194 and @xmath195 are trivially on the same side of @xmath253 . ( 2 ) assume that @xmath260 and @xmath262 .",
    "since the 1s are consecutive in the rows inserted for @xmath244 the two non - outside children @xmath263 and @xmath264 must be on the same side of the non - inside child @xmath247 .",
    "( 3 ) otherwise , observe that the @xmath26-paths @xmath265 and @xmath266 connecting the poles of @xmath55 with the poles of @xmath267 must contain the poles of @xmath268 , @xmath269 .",
    "this implies especially that for each @xmath270 the graphs @xmath271 contain a @xmath26-path connecting their poles : such a @xmath26-path can be composed by @xmath272 and portions of @xmath265 and @xmath266 .",
    "hence , @xmath273 , @xmath270 is not outside .",
    "further a subpath of @xmath195 is an external @xmath26-path of @xmath274 .",
    "hence , @xmath274 can not be double - border , since otherwise the root would be inappropriate for  @xmath26 .",
    "[ fig : treeiiic ]    [ fig : subgraphiiic ]    since @xmath275 is non - inside and @xmath276 is border or inside there is a row @xmath277 inserted for @xmath274 that contains only 0s in @xmath278 and only 1s in @xmath279 .",
    "further , when we handled @xmath280 , we added 1s in the row @xmath277 and the external column ( if @xmath281 ) or the columns @xmath282 ( otherwise ) .",
    "hence , since the 1s must be consecutive in @xmath277 , it follows that @xmath278 can not be between @xmath279 and the external column @xmath166 or @xmath282 , respectively .",
    "hence , @xmath194 and @xmath195 must be on the same side of @xmath238 .",
    "now , if @xmath283 we are done . otherwise let @xmath48 be the parent r - node of @xmath284 in @xmath52 .",
    "by induction , we already know that all external @xmath26-paths of @xmath48 are on the same side and that @xmath285 is not enclosed by a simple cycle of non - outside edges in skel@xmath49 . hence , the external @xmath26-paths of @xmath284 are all on the same side and by construction this is represented by the external column @xmath166 .",
    "* assume now that a c - planar embedding with @xmath100 on the outer face is given in which @xmath130 is on the outer face of @xmath25 $ ] for every cluster @xmath26 .",
    "* this yields a permutation of the children of the @xmath286-nodes of @xmath52 and flips of the r - nodes .",
    "permute the columns of the matrices accordingly .",
    "let @xmath156 be the root of a split off tree @xmath157 and let @xmath155 be the only child of @xmath156 in @xmath157 .",
    "the external columns of @xmath161 are exchanged if on the @xmath155-@xmath53-path there are an odd number of r - nodes that are flipped .",
    "recall that we have inserted up to three rows for each p - node and each cluster and no other rows into the matrices .",
    "let @xmath48 be a p - node in a subtree @xmath157 and let @xmath26 be a cluster such that we have created a row @xmath277 for @xmath48 and @xmath26 in @xmath161",
    ". then @xmath48 has no double - border child . due to c - planarity and the condition on all @xmath130 ,",
    "the children of @xmath48 must be permuted such that all inside children are consecutive pre- and succeeded by at most one border child and arbitrary many outside children .",
    "it follows that the 1s in columns @xmath162 must be consecutive .",
    "let @xmath287 be the path from @xmath48 to the root of @xmath157 , and let @xmath288 be maximum such that @xmath56 are not outside . if @xmath158 was not a special @xmath286-node substituting an r - node then @xmath178 is a p - node if @xmath184 is odd and an @xmath289-node if @xmath184 is even .",
    "( otherwise it might be vice versa , but the situation is similar ) @xmath273 is a p - node if @xmath290 .",
    "also observe that @xmath291 , @xmath292 and that for each @xmath293 the columns in @xmath177 are consecutive in the permuted matrix . if @xmath294 , we ve set @xmath295 .",
    "hence , the entries in row @xmath277 are 0 in all columns in @xmath296 .",
    "we consider first a p - node @xmath178 , @xmath297 odd . since @xmath298 is not outside it follows that no child of @xmath178 other than @xmath298 can be double - border .",
    "hence , for each non - outside child @xmath299 of @xmath178 there are 1s in row @xmath277 and all columns in @xmath180 .",
    "observe that due to c - planarity the non - outside children of @xmath178 are consecutive .",
    "moreover , if there are both , non - outside children of @xmath178 to the right and the left of @xmath298 then @xmath298 is inside and , thus , all columns in @xmath223 as well as @xmath300 have entry 1 in row @xmath277 for all @xmath301 odd .",
    "if @xmath302 , let @xmath303 and assume that the external @xmath26-paths of @xmath304 are all to the right ( left ) of @xmath304 , i.e. , the column @xmath166 is the right ( left ) external column .",
    "if @xmath290 , let @xmath305 be maximum such that @xmath306 is a p - node and has a non - outside child other than @xmath307 ( if no such p - node exists then all entries in row @xmath277 other than in the columns @xmath162 are zero and thus all 1s are consecutive . ) assume that @xmath306 has a non - outside child @xmath141 to the right ( left ) of @xmath307 .",
    "assume now that there is a @xmath308 odd such that the p - node @xmath309 has a child @xmath310 to the right ( left ) of @xmath311 .",
    "i.e. , the columns @xmath312 are between the columns @xmath162 and @xmath180 .",
    "if @xmath310 were not inside then @xmath313 would contain a vertex in @xmath314 that would be enclosed by a @xmath26-cycle composed by the following four paths : ( 1 ) a @xmath26-path in @xmath315 between its poles , ( 2 + 3 ) two @xmath26-paths connecting the poles of @xmath316 with the poles of @xmath317 , and ( 4 ) either an external @xmath26-path of @xmath304 , if @xmath318 or a @xmath26-path in @xmath319 between its poles , if @xmath306 is a p - node .",
    "hence , the entries in @xmath312 are all 1 .",
    "consider now an s - node @xmath178 , @xmath320 even that has an external @xmath26-path . by the choice of @xmath321",
    ", @xmath178 is not outside . since the root is not inappropriate",
    ", @xmath178 is not double - border .",
    "thus , we ve set the entries in row @xmath277 and columns @xmath322 to 1 if @xmath178 is inside .",
    "otherwise , we set the entries in @xmath323 that are to one side of @xmath324 to 1 .",
    "observe that an @xmath289-node @xmath178 has an external path if and only if @xmath325 or @xmath326 .",
    "hence , row @xmath277 looks as follows .",
    "assume without loss of generality that @xmath327 contains a 1 to the right of @xmath328 .",
    "then the entries in @xmath162 are ordered such that all 0s ( if any ) are to the left and all 1s are to the right . moreover ,",
    "if @xmath48 is inside let @xmath329 be maximal such that @xmath330 is inside . then all entries in columns @xmath331 are 1 .",
    "otherwise let @xmath332 .",
    "for @xmath333 odd all entries in @xmath323 that are on the right side of @xmath324 are 1 . for @xmath334",
    "even , all entries in @xmath323 on one side of @xmath324 are 1    however , for some @xmath184 that could be the right - hand side and for others the left - hand side .",
    "finally , the entries in @xmath335 to the right of @xmath328 are ordered such that the 1s are to the left and the 0s ( if any ) are to the right .",
    "see fig .",
    "[ fig : cons_ones ] .",
    "possible ordering of the 0s and 1s in a row inserted for a p - node @xmath158 according to a c - planar embedding.,title=\"fig : \" ]    hence , the 1s in row @xmath277 are consecutive up to maybe the wrong choice of the side for the 1s inserted for border s - nodes .",
    "observe , however , on one hand that we could remove now the 1s from the wrong side and insert them on the right side and would thus obtain the 1s consecutive .",
    "we could obtain that for one cluster also by permuting the columns for the children of the s - node accordingly . on the other hand the assignment to sides",
    "was forced by the same and different constraints    up to the choice for one cluster .",
    "hence , if we do the permuting that works for one cluster it ll create the feasible assignment we d obtain if we d assign the sides now that we knew were the external paths are embedded .",
    "let @xmath217 be a c - connected overlapping clustered graph with underlying planar graph @xmath1 .",
    "we show how to extend the method from the last section to work for an arbitrary planar graph @xmath1 .",
    "if @xmath1 is not connected , we can test each connected component separately , since the c - connectivity limits each cluster to a single component .",
    "it remains the case , where @xmath1 is connected but not 2-connected and can thus be represented by a bc - tree .",
    "we consider the bc - tree of @xmath1 rooted at a block @xmath336 ( meaning that @xmath336 should contain an edge incident to the outer face of @xmath1 in a planar drawing ) .",
    "let @xmath46 be a block of @xmath1 . if @xmath337 then the _ parent cut vertex",
    "_ of @xmath46 is the cut vertex of @xmath46 on the path from @xmath46 to @xmath336 .",
    "@xmath46 is a _ child block _ of its parent cut vertex .",
    "all other cut vertices of @xmath46 are called _ child cut vertices _ of @xmath46 .",
    "all cut vertices of @xmath336 are _ child cut vertices _ of @xmath336 .",
    "consider the spqr - tree @xmath52 of @xmath46 .",
    "if @xmath338 , any root of @xmath52 is _",
    "suitable_. otherwise the parent cut vertex of @xmath46 must be on the outer face of @xmath46 .",
    "thus , a root of the spqr - tree @xmath52 is _ suitable _ if it corresponds to an edge incident to the parent cut vertex of @xmath46 .",
    "see fig .",
    "[ fig : bc - tree ] .",
    "let @xmath339 be the child blocks of @xmath45 and let @xmath340 , @xmath57 be the set of vertices in the connected components of @xmath341 containing @xmath342 .",
    "we call a cluster @xmath26 _ relevant _ for a child block @xmath342 , if @xmath82 and @xmath343 .",
    "let @xmath130 be the set of child cut vertices @xmath45 of @xmath46 such that @xmath26 is relevant for a child block of @xmath45 .",
    "use the algorithm for 2-connected graphs , restricting the roots for the spqr - trees to be suitable , to test whether there is some c - planar embedding for each block @xmath46 with the parent cut vertex on the outer face of @xmath46 and @xmath130 on the outer face of @xmath344 $ ] . for each child cut vertex @xmath45 of a block @xmath46 and for each child block @xmath342 of @xmath45 , test whether there is a free face , i.e. , a face @xmath85 of @xmath46 incident to @xmath45 such that the boundary of @xmath85 contains a vertex not in @xmath26 for any cluster @xmath26 that is relevant for @xmath342 .",
    "if so , the c - planar embeddings of the blocks can be combined into a c - planar embedding of the whole graph . in the following ,",
    "we show that otherwise there is no c - planar drawing for the whole graph with the given choices of the root of the bc - tree and the roots of the spqr - trees .    given a c - planar embedding ,",
    "a face @xmath85 is _ free _ with respect to a subset @xmath345 of clusters if @xmath85 is not enclosed by a @xmath26-cycle for any @xmath346 .",
    "otherwise , @xmath85 is _ covered _ by @xmath347 . in the following we use @xmath26 instead of @xmath134 if the context is clear .",
    "a vertex @xmath45 is _ free _ with respect to a subset @xmath348 of clusters if one of its incident faces is free with respect to @xmath347 and _ covered _ by @xmath347 otherwise .",
    "we call a cut vertex @xmath45 _ free _ for a child block @xmath342 , if @xmath45 is free with respect to the set of clusters that are relevant for @xmath342 .    given a vertex @xmath45 in a block @xmath46 ,",
    "we call two incident edges @xmath349 and @xmath350 of @xmath45 _ equivalent _ with respect to a set @xmath347 of clusters , if they are in the same block of @xmath351 $ ] , i.e. if there is a simple cycle in @xmath46 that is a @xmath26-cycle for any @xmath346 and contains both , @xmath349 and @xmath350 . a _ @xmath352-equivalence class _ around @xmath45 is a maximal set of edges incident to @xmath45 that are pairwise equivalent with respect to @xmath352 .",
    "[ lemma : free_vertex_one ] let @xmath45 be a vertex of a block @xmath46 and let @xmath353 .",
    "then a @xmath352-equivalence class around @xmath45 is a consecutive set in the cyclic order around @xmath45 in any c - planar embedding of  @xmath46 .",
    "let @xmath347 be a set of clusters , @xmath45 a vertex in block @xmath46 and let @xmath354 , @xmath198 be two edges incident to @xmath45 that are contained in a simple cycle @xmath97 in @xmath351 $ ] .",
    "see fig .",
    "[ fig : lemma5 ]",
    ". then all vertices that are enclosed by @xmath97 are in @xmath355 .",
    "let @xmath356 be an edge enclosed by @xmath97 .",
    "let @xmath357 .",
    "since @xmath46 is 2-connected , there must be a @xmath358-@xmath359 path @xmath200 in @xmath46 not containing @xmath45 .",
    "let @xmath360 be the first vertex of @xmath200 on @xmath97 .",
    "let @xmath361 be the cycle formed by the @xmath358-@xmath360-subpath of @xmath200 , the @xmath360-@xmath45-subpath of @xmath97 containing @xmath362 and the edge @xmath149 .",
    "then @xmath361 is a simple cycle in @xmath351 $ ] containing @xmath149 and @xmath362 .",
    "let @xmath45 be a vertex that is free with respect to any @xmath363 . given a c - planar embedding of a block , a _",
    "@xmath347-interval _ around a vertex @xmath45 is a maximal sequence of consecutive edges around  @xmath45 that are ( a ) equivalent with respect to @xmath352 and such that ( b ) the face between any two consecutive edges is covered by @xmath26 for all @xmath346 .",
    "note that there is a one - to - one correspondence between the @xmath364-equivalence classes and the @xmath347-intervals around @xmath45 : the condition that @xmath45 is free with respect to any cluster in @xmath347 guarantees that the @xmath347-intervals have a well defined start and end point .",
    "also note that there might be several distinct @xmath347-intervals around  @xmath45    even if @xmath347 contains only one cluster .",
    "[ lemma : free_vertex ]",
    "let @xmath46 be a block , @xmath45 a vertex in @xmath46 , and @xmath365 .",
    "if there is a c - planar embedding of @xmath46 , in which @xmath45 is free with respect to @xmath347 , then @xmath45 is free with respect to @xmath347 in any c - planar embedding of @xmath46 in which @xmath45 is free with respect to @xmath26 for all @xmath366 .",
    "assume that there is a c - planar embedding of @xmath46 in which @xmath45 is free with respect to @xmath26 for all @xmath346 but @xmath45 is not free with respect to @xmath352 .",
    "consider the cyclic order @xmath367 of the edges around @xmath45 .",
    "since @xmath45 is not covered by any @xmath346 , the @xmath26-intervals around @xmath45 are well defined . among all @xmath26-intervals for all @xmath346 , let @xmath368 be a minimal set of intervals such that all faces around @xmath45 are covered by at least one interval in @xmath368 .",
    "let @xmath369 be the intervals in @xmath368 in cyclic order around @xmath45 .",
    "see fig .",
    "[ fig : lemma6 ] .",
    "we assume that @xmath370 , @xmath371 for @xmath372 , and @xmath373 . for simplicity , we set @xmath374 .",
    "let @xmath375 be such that @xmath376 is a @xmath196-interval .",
    "since all faces around @xmath45 are covered , it holds that @xmath377 .",
    "@xmath378 is a @xmath379-interval ( let @xmath380 .",
    "the face @xmath85 between @xmath381 and @xmath382 is covered by both , @xmath196 and @xmath383 .",
    "hence the boundary of @xmath85 is a both a @xmath196- and a @xmath383-cycle ) .",
    "thus @xmath384 is consecutive in any c - planar embedding .",
    "hence , in any c - planar embedding , the ordering of edges around @xmath45 is as follows +             + @xmath387 + and thus , a sequence of overlapping @xmath26-intervals for some @xmath388 .",
    "hence , for any face @xmath85 incident to @xmath45 there is at least one @xmath389 such that @xmath85 is covered by @xmath26",
    ". therefore @xmath45 can not be free with respect to @xmath352 in any c - planar embedding .",
    "we now apply lemma  [ lemma : free_vertex ] to any child cut vertex @xmath45 of any block @xmath46 and to the set @xmath352 of relevant clusters of any child block of @xmath45 to obtain our main result .",
    "observe that the particular choice of @xmath130 in the following theorem guarantees that the child cut vertices are free with respect to any relevant cluster .",
    "a c - connected overlapping clustered graph @xmath36 is c - planar , if and only if @xmath1 is planar and for each connected component of @xmath1 , there is a root block of its bc - tree for which there exist suitable root nodes of the spqr - tree of each block that are not inappropriate for any @xmath390 with @xmath391 such that    1 .",
    "all binary matrices fulfill the consecutive - ones property and 2 .   given an arbitrary consecutive - ones ordering of the binary matrices each cut vertex is free for each of its child blocks in the corresponding embedding .",
    "assume the two conditions hold .",
    "we embed the blocks as in the proof of theorem  [ thm:2-connected ] and combine the embeddings of the blocks as follows .",
    "let @xmath46 be a block , let @xmath45 be a child cut vertex of @xmath46 and let @xmath342 be a child block of @xmath45 .",
    "we place @xmath342 into a face of @xmath46 incident to @xmath45 that is free with respect to the set of @xmath342 s relevant clusters .",
    "this yields a c - planar embedding of @xmath1 :    otherwise there must be a cluster @xmath26 and a vertex @xmath392 such that @xmath47 is enclosed by a @xmath26-cycle @xmath97 .",
    "let @xmath97 be in block @xmath46 .",
    "the first condition requires , that the embedding of @xmath46 is c - planar ( see theorem  [ thm:2-connected ] ) .",
    "hence , @xmath47 can not be a vertex of @xmath46 .",
    "let @xmath358 be the parent cut vertex of @xmath46 and let @xmath393 be the union of the sets of vertices in the connected components of @xmath394 not containing @xmath46 .",
    "by the choice of the root of the bc - tree , @xmath393 must be drawn in the outer face of @xmath46 .",
    "hence @xmath395 .",
    "finally , let @xmath45 be a child cut vertex of @xmath46 , let @xmath342 be a child block of @xmath45 , let @xmath340 be the set of vertices in the connected components of @xmath341 containing @xmath342 , and assume that @xmath396",
    ". then @xmath45 must be enclosed by @xmath97 and thus , by c - planarity of @xmath46 , @xmath82 .",
    "since @xmath397 it follows that @xmath26 is relevant for @xmath342 . since we embedded @xmath342 into a face of @xmath46 that was free with respect to @xmath342 s relevant clusters , it follows that @xmath47 can not be enclosed by the @xmath26-cycle @xmath97 .    for the other direction assume now that there is a c - planar embedding @xmath398 . without loss of generality",
    ", we assume that @xmath1 is connected . let the root @xmath336 of the bc - tree be a block with an edge that is incident to the outer face of @xmath1 .",
    "root each spqr - tree at an edge incident to the outer face of the respective block and incident to the parent cut vertex .    in a c - planar drawing , a child cut vertex @xmath45 of a block @xmath46",
    "is placed on the outer face of @xmath344 $ ] for any relevant cluster @xmath26 of any of @xmath45 s child blocks .",
    "thus , theorem  [ thm:2-connected ] implies that the roots are not inappropriate and condition  1 is fulfilled .",
    "obviously any block must be inserted into a face that is free with respect to its relevant clusters in any c - planar embedding of @xmath1 .",
    "consider now a block @xmath46 and an embedding @xmath399 of @xmath46 corresponding to an arbitrary consecutive - ones ordering of the binary matrices .",
    "let @xmath45 be a child cut vertex of @xmath46 and let @xmath342 be a child block of @xmath45 .",
    "let @xmath352 be the set of relevant clusters for @xmath342 .",
    "the labeling guarantees that @xmath45 is on the outer face of @xmath344 $ ] for any @xmath388 .",
    "thus , @xmath399 is a c - planar embedding of @xmath46 in which @xmath45 is free with respect to each @xmath388 .",
    "we further know that @xmath398 induces a c - planar embedding of @xmath46 in which @xmath45 is free with respect to @xmath352 .",
    "hence , lemma  [ lemma : free_vertex ] implies that @xmath45 is free with respect to @xmath352 in @xmath399 .",
    "u.  brandes , s.  cornelsen , b.  pampel , and a.  sallaberry .",
    "blocks of hypergraphs applied to hypergraphs and outerplanarity . in c.  iliopoulos and w.  smyth , editors , _ iwoca  2010 _ , lncs vol . 6460 , pp .",
    "springer , 2011 .",
    "e.  dahlhaus . a linear time algorithm to recognize clustered planar graphs and its parallelization . in c.  l. lucchesi and a.  v. moura , editors , _",
    "latin  1998 _ , lncs vol . 1380 , pp .",
    "springer , 1998 ."
  ],
  "abstract_text": [
    "<S> we show that clustered planarity with overlapping clusters as introduced by didimo et al .  </S>",
    "<S> @xcite can be solved in polynomial time if each cluster induces a connected subgraph . </S>",
    "<S> it can be solved in linear time if the set of clusters is the union of two partitions of the vertex set such that , for each cluster , both the cluster and its complement , induce connected subgraphs . clustered planarity with overlapping clusters is np - complete , even if restricted to instances where the underlying graph is 2-connected , the set of clusters is the union of two partitions and each cluster contains at most two connected components while their complements contain at most three connected components  @xcite . </S>"
  ]
}
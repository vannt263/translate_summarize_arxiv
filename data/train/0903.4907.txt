{
  "article_text": [
    "the following proposition can be verified easily :    [ extension]any independent set of vertices of the graph @xmath1 can be extended to a member of @xmath25 .",
    "[ vertexextension]for any @xmath41 there is @xmath42 such that @xmath43 .",
    "@xmath44 is an independent set .",
    "apply proposition [ extension ] .",
    "[ gallaiinequality]for any graph @xmath1",
    "@xmath45    choose a vertex @xmath41 with @xmath46 .",
    "due to proposition [ vertexextension ] there is @xmath42 containing @xmath47 .",
    "note that the neighbours of @xmath47 do not belong to @xmath48 , thus @xmath49 or , @xmath45    [ degreebound ] for any graph @xmath1 with @xmath50 we have : @xmath51    choose @xmath52 with @xmath53 . due to corollary [ gallaiinequality ] @xmath54 .",
    "clearly , @xmath55    [ recognizingcharacter]a set @xmath56 is recognizing for @xmath57 if and only if each vertex @xmath58 has a neighbour in @xmath59 .    necessity . if there were a vertex @xmath60 without a neighbour from @xmath59 , then due to proposition [ extension ] we would find @xmath61 such that @xmath62 .",
    "note that @xmath63 since @xmath64 .",
    "taking into account that @xmath56 and @xmath65 , we deduce that the set @xmath59 is not recognizing for @xmath66 .    sufficiency .",
    "suppose that the set @xmath59 is not recognizing for @xmath66 .",
    "then there is @xmath61 , @xmath63 such that @xmath65 . since @xmath63 there is @xmath67 .",
    "note that the vertex @xmath6 has no neighbour from the set @xmath59 . contradiction .",
    "[ specificvertex]if @xmath57 and there is a vertex @xmath58 that has only one neighbour @xmath68 in the set @xmath66 , then all recognizing sets of @xmath66 contain the vertex @xmath68 .",
    "[ srtuctproperties ] let @xmath24 be a connected graph such that for each @xmath57 we have @xmath69.then :    1",
    ".   for each @xmath57 and its smallest recognizing set @xmath70 , the vertex from @xmath71 is adjacent to all vertices outside @xmath66 ; 2 .",
    "@xmath72 3 .",
    "if @xmath73 , @xmath74 lies in exactly one @xmath75 and for @xmath76 @xmath77 , then any vertices @xmath78 with @xmath79 induce a maximum clique of @xmath1 , and vice versa , any maximum clique of @xmath1 can be obtained in this way ; 4 .",
    "@xmath80 .",
    "\\(a ) directly follows from lemma [ recognizingcharacter ] .",
    "( b)choose @xmath81 with @xmath82 .",
    "according to ( a ) there is @xmath83 that is adjacent to all vertices from @xmath84 .",
    "note that @xmath85 thus @xmath86 corollary [ gallaiinequality ] implies that @xmath87    ( c)let @xmath88 and @xmath89 ( @xmath90 ) , and consider the vertices @xmath91 and @xmath92 .",
    "clearly , @xmath93 and @xmath94 , hence due to ( a ) @xmath95 , thus any vertices @xmath78 with @xmath96 induce a clique of @xmath1 , and particularly , the size of the maximum clique of @xmath1 is at least @xmath97 .",
    "this implies that to complete the proof of ( c ) we only need to show that for any maximum clique @xmath98 of the graph @xmath1 there are @xmath78 with @xmath96 such that @xmath99 .",
    "let @xmath98 be a maximum clique of the graph @xmath1 , and let @xmath57 . clearly , @xmath100 .",
    "let us show that @xmath101 . if @xmath102 then due to ( a ) there is @xmath103 such that @xmath47 is adjacent to all vertices of @xmath98 , thus the set @xmath104 forms a larger clique contradicting the choice of @xmath98 .    thus @xmath101 .",
    "suppose that @xmath105 .",
    "let us show that @xmath106 .",
    "suppose not .",
    "then there is @xmath107 such that @xmath108 .",
    "clearly , @xmath109 .",
    "( a ) implies that the vertices @xmath110 and @xmath111 are adjacent to all vertices lying outside @xmath66 and @xmath112 , respectively . since @xmath113",
    ", we imply that @xmath68 and @xmath114 do not belong to the clique @xmath98 .",
    "it is also clear that @xmath115 and @xmath116 .",
    "now , it is not hard to see that the set @xmath117 induces a clique that is larger than @xmath98 contradicting the choice of @xmath98 .",
    "thus @xmath106 and the proof of ( c ) is completed .",
    "( d)suppose that @xmath118 , and consider the vertices @xmath119 with @xmath120 .",
    "let @xmath121 , @xmath122 be the shortest path connecting the vertices @xmath68 and @xmath6 .",
    "note that @xmath123 , thus due to proposition [ extension ] , there is @xmath124 with @xmath125 .",
    "( a ) implies that there is a vertex @xmath126 such that @xmath127 and @xmath128 which contradicts the choice of the path @xmath121 as the shortest path connecting the vertices @xmath68 and @xmath6 .",
    "the proof of the lemma [ srtuctproperties ] is completed .",
    "[ mainbound ] if @xmath24 is a connected graph with @xmath129 that is not isomorphic to @xmath130 then @xmath131    suppose that there is @xmath57 with @xmath132 .",
    "since @xmath1 is connected and @xmath129 , we have @xmath133 note that the final inequality is true because it is equivalent to @xmath134 , or @xmath135 , which in its turn follows from @xmath136 or @xmath137    thus , without loss of generality , we may assume that for each @xmath124 we have @xmath69 . note that if we could prove that in such graphs @xmath138 then , due to lemma [ degreebound ] , we would have @xmath139 and the proof of the theorem will be completed . thus , to complete the proof",
    ", it suffices to show that if @xmath1 is a graph satisfying the conditions of the theorem [ mainbound ] and for each @xmath57 we have @xmath69 , then the inequality ( [ maininequality ] ) holds .",
    "let @xmath73 , and suppose @xmath98 is a maximum clique of @xmath1 with @xmath140 , @xmath141 ( ( c ) of lemma [ srtuctproperties ] ) .",
    "set : @xmath142 .",
    "let us show that each @xmath143 has a neighbour in @xmath98 . since @xmath1 is connected and @xmath129 , there is @xmath144 such that @xmath145 . due to proposition [ vertexextension ] , there is @xmath146 containing the vertex @xmath147 . due to",
    "( a ) and ( c ) of lemma [ srtuctproperties ] there is @xmath148 such that @xmath149 is adjacent to all vertices lying outside @xmath150 , and particularly , to @xmath47 .",
    "then , let us show that , without loss of generality , we may assume that @xmath151 .",
    "suppose that @xmath152 .",
    "( c ) of lemma [ srtuctproperties ] implies that @xmath1 does not contain a triangle .",
    "we claim that @xmath1 is bipartite .",
    "suppose not , and let @xmath153 be the shortest odd cycle of the graph @xmath1 , with @xmath154 , @xmath155 and @xmath156 . since @xmath153 is the shortest odd cycle , we have @xmath157 . due to proposition [ extension ] , there is @xmath158 containing the vertices @xmath159 and @xmath160 .",
    "( a ) of lemma [ srtuctproperties ] implies that there is @xmath161 that is adjacent to all vertices lying outside @xmath162 . since @xmath163 and @xmath164",
    ", we have @xmath165 and @xmath166 .",
    "this is a contradiction since the vertices @xmath167 induce a triangle .",
    "thus @xmath1 is a bipartite graph , and let @xmath168 be the bipartition of @xmath1 , where @xmath169 , @xmath170 .",
    "it is clear that @xmath171 and @xmath172 . since",
    ", by assumption @xmath152 , we have @xmath173 . this , and proposition [ extension ] imply that for each @xmath174 and @xmath175 we have @xmath176 .",
    "thus the graph @xmath1 is isomorphic to the complete bipartite graph @xmath20 for some @xmath177 with @xmath178 .    now",
    "if @xmath179 then @xmath180 , @xmath181 , and therefore @xmath182 thus , we can assume that @xmath183 . on the other hand ,",
    "if @xmath184 then @xmath185 , @xmath181 , and therefore @xmath186 thus , we can assume that @xmath187 .",
    "since by assumption @xmath1 is not isomorphic to @xmath130 then @xmath1 is either @xmath188 or @xmath189 or @xmath190 .",
    "it is a matter of direct verification that these three graphs satisfy the inequality ( [ maininequality ] ) .",
    "thus , we may assume that @xmath151 .",
    "we will consider four cases .",
    "case 1 : @xmath191 is an independent set .    proposition [ extension ] and lemma [ srtuctproperties ] imply that there is @xmath192 such that @xmath193 .",
    "note that all neighbours of @xmath194 belong to @xmath98 and @xmath195 .",
    "taking into account that all vertices of @xmath191 are adjacent to a vertex from @xmath98 , we deduce @xmath196 and therefore @xmath197    case 2 : @xmath198 $ ] contains at least two independent edges .",
    "suppose that @xmath199 , @xmath200 , @xmath201 and @xmath202 .",
    "choose a vertex @xmath203 .",
    "proposition [ vertexextension ] and ( c ) of lemma [ srtuctproperties ] imply that there is @xmath204 with @xmath205 , therefore @xmath206 or @xmath207,for @xmath208 .",
    "this implies @xmath209 and taking into account that @xmath151 , we deduce @xmath210    case 3 : the maximum number of independent edges in @xmath198 $ ] is one , and @xmath198 $ ] contains a triangle .",
    "suppose that @xmath211 and @xmath212 .",
    "define @xmath213 as the sets of neighbours of @xmath214 in @xmath98 , respectively .",
    "since for each @xmath203 there is @xmath204 with @xmath205 , we imply @xmath215 and therefore @xmath216 note that @xmath217 hence , taking into account that @xmath151 , we deduce @xmath218    clearly , @xmath219 and therefore @xmath220    case 4 : the maximum number of independent edges in @xmath198 $ ] is one , and @xmath198 $ ] contains no triangle .    in this case , there is @xmath143 that is incident to all edges of @xmath198 $ ] .",
    "suppose that @xmath221 , @xmath222 , and the vertex @xmath47 is adjacent to all @xmath223 s and is not adjacent to either of @xmath224 s .",
    "define the sets @xmath225 as the neighbours of the vertices @xmath226 in the clique @xmath98 , respectively .",
    "since for each @xmath203 there is @xmath204 with @xmath227 , we imply @xmath228 moreover , since the clique @xmath98 is maximum , we have : @xmath229    if there is @xmath230 such that @xmath231 , then @xmath232 taking into account that @xmath233 we get @xmath234    thus , without loss of generality , we may assume that for each @xmath235 we have @xmath236 . consider an arbitrary edge @xmath237 , @xmath238 . since for each @xmath239 @xmath240 or @xmath241 ( ( c ) of lemma [ srtuctproperties ] ) , we deduce @xmath242 now , if @xmath243 then @xmath244 and therefore @xmath245    thus , we may also assume that @xmath246 , which immidiately implies that for each @xmath203 we have @xmath247 .",
    "now , note that the sets @xmath248 and @xmath249 are independent , hence due to proposition [ extension ] and ( a ) of lemma [ srtuctproperties ] there are @xmath250 and @xmath251 such that @xmath252 and @xmath253 .",
    "clearly , @xmath254 .",
    "( a ) of lemma [ srtuctproperties ] implies that @xmath255 hence @xmath256 , and @xmath257 .",
    "taking into account that for each @xmath192 @xmath258 or @xmath259 ( ( c ) of lemma [ srtuctproperties ] ) , we deduce @xmath260 .",
    "hence @xmath261 taking into account that @xmath262 we deduce @xmath263 the proof of the theorem [ mainbound ] is completed .",
    "there is an infinite sequence of graphs attaining the bound of the theorem [ mainbound ] . for a positive integer @xmath17 consider the graph @xmath1 from figure [ examplebound ] .",
    "note that @xmath264 and @xmath265 .",
    ", title=\"fig : \" ] +    [ allrationals ] for any @xmath266 with @xmath267 there is a connected bipartite graph @xmath1 such that @xmath268 .    for any @xmath266 with @xmath267 consider the connected bipartite graph @xmath1 from the figure [ mncomplexity ] .     with @xmath268,title=\"fig : \" ] +    define : @xmath269 let us show that @xmath268 .",
    "choose any @xmath57 .",
    "we will consider two cases :    case 1 : @xmath270 .    clearly , for each @xmath271 and for each @xmath272 , therefore @xmath273 .",
    "lemma [ recognizingcharacter ] implies that @xmath274 , thus @xmath275    case 2 : @xmath276 .",
    "it is clear that @xmath277 @xmath278 ( [ intersectionxy])-([intersections ] ) imply that @xmath279 .",
    "now , note that if there is @xmath280 , then @xmath281 with respect to @xmath223 and @xmath66 satisfies the conditions of the corollary [ specificvertex ] , thus @xmath282 .",
    "similarly , if there is @xmath283 then @xmath223 with respect to @xmath281 and @xmath66 satisfies the conditions of the corollary [ specificvertex ] ( @xmath276 ) , thus @xmath284 .    on the other hand ,",
    "if @xmath285 then due to ( [ intersectiont ] ) @xmath286 , hence lemma [ recognizingcharacter ] implies that there is @xmath287 such that @xmath288 .",
    "similarly , if @xmath289 then there is @xmath290 such that @xmath291 .",
    "this implies that there is @xmath287 such that @xmath292 or @xmath293 .",
    "now , it is not hard to see that either @xmath294 or @xmath295 is recognizing for @xmath66 , hence @xmath296 or @xmath297 , and therefore @xmath298 ) , we have @xmath299 .",
    "thus : @xmath300    the considered two cases imply @xmath301 the proof of the theorem [ allrationals ] is completed .",
    "the aim of this section is the investigation of some problems that are related to the algorithmic computation of the complexity of graphs .",
    "we start with a problem that is related to finding a recognizing set for a given maximal independent set . + * problem 1 : *    * condition : * given a graph @xmath1 , @xmath302 and a positive integer @xmath303 .",
    "* question : * is there a recognizing set @xmath304 for @xmath66 with @xmath305 ?    the * problem 1 * is @xmath306-complete already for bipartite graphs .",
    "lemma [ recognizingcharacter ] implies that the * problem 1 * belongs to the class @xmath306 . to show the completeness of the problem",
    ", we will reduce the classical * set cover * problem to our problem restricted to bipartite graphs . recall that the * set cover * is formulated as follows ( @xcite ) : + * problem : set cover *    * condition : * given a set @xmath307 , a family @xmath308 of subsets of the set @xmath309 with @xmath310 , and a positive integer @xmath311 .",
    "* question : * are there @xmath312 with @xmath313 ?",
    "+ for an instance @xmath314 of * set cover * consider the graph @xmath315 , where @xmath316 note that @xmath317 is bipartite .",
    "consider the set @xmath318 . since @xmath310",
    ", we have @xmath319 .",
    "it can be easily verified that the set @xmath66 has a recognizing subset comprised of @xmath97 elements if and only if there are @xmath312 with @xmath320 .",
    "the proof of the theorem is completed .",
    "now , we are turning to the investigation of the computation of @xmath39-the complexity of a graph @xmath1 .",
    "consider the following + * problem 2 : *    * condition : * given a graph @xmath1 and positive integers @xmath321 with @xmath322 .",
    "* question : * does the inequality @xmath323 hold ?    the * problem 2 * is @xmath306-hard already for bipartite graphs .",
    "consider the problem + * problem : minimum set cover *    * condition : * given a set @xmath307 , a family @xmath308 of subsets of the set @xmath309 with @xmath310 and a positive integer @xmath311 .",
    "* question : * does the size of minimum cover of @xmath309 , that is , the minimum number @xmath324 for which there are @xmath325 with @xmath326 satisfy the condition @xmath327 ? + the @xmath306-completeness of * set cover * implies that * minimum set cover * is @xmath306-hard , thus to complete the proof of the theorem , it suffices to reduce the * minimum set cover * to * problem 2 * restricted to bipartite graphs .",
    "given an instance @xmath314 of * minimum set cover * consider the graph @xmath315 , where @xmath328 note that @xmath317 is bipartite .",
    "let us show that @xmath329 where @xmath324 denotes the size of minimum cover of @xmath309 .",
    "choose any @xmath319 .",
    "we will consider two cases :    case 1 : @xmath318 .",
    "lemma [ recognizingcharacter ] and the definition of @xmath317 imply that @xmath330 , therefore @xmath331    case 2 : @xmath332 .",
    "suppose that @xmath333 .",
    "since @xmath332 , we imply that @xmath334 .",
    "assume that there are @xmath335 elements of @xmath309 that do not belong to either of @xmath336 s .",
    "note that all @xmath337 copies of these @xmath338 elements belong to @xmath66 , and @xmath339 on the other hand , if we consider the set @xmath304 , where @xmath340 then , according to lemma [ recognizingcharacter ] this would be a recognizing set for @xmath66 , therefore @xmath341    the considered two cases imply @xmath342 .",
    "now , it is not hard to verify that in the instance @xmath314 of * minimum set cover * @xmath327 , if and only if @xmath343 . the proof of the theorem is completed .",
    "in this section we study the complexity of trees .    [ vertextypes]in a tree @xmath344 a vertex @xmath345 is    1 .",
    "@xmath346-vertex , if there is @xmath347 with @xmath348 and @xmath349 ; 2 .",
    "@xmath350-vertex , if it is adjacent to an @xmath346-vertex , whose all neighbours that differ from @xmath351 , are @xmath346-vertices ; 3 .",
    "@xmath352-vertex , if it is adjacent to a @xmath350-vertex ; 4 .",
    "@xmath350-vertex , if it is adjacent to an @xmath346-vertex , whose all neighbours that differ from @xmath351 , are @xmath346 or @xmath352-vertices ; 5 .",
    "@xmath353-vertex , if all its neighbours are @xmath346 or @xmath352-vertices ;    by definition , a vertex of a tree can satisfy more than one of conditions of definition [ vertextypes ] , and thus be of more than one type .",
    "[ defexplanation ] the definition has a recursive structure , and in ( c)- the definition of a @xmath352-vertex - a @xmath350-vertex is understood as one which is defined by ( b ) or ( d ) . for the sake of clear explanation and proving the next lemma",
    ", we will imagine that the definition is just a labeling algorithm , which , for its input gets a tree , during the initialization labels all @xmath346-vertices according to ( a ) of definition [ vertextypes ] , then at the first step labels all @xmath350-vertices and their neighbour @xmath352-vertices according to ( b ) and ( c ) of definition [ vertextypes ] , respectively .",
    "next , if at the @xmath354 step , the labeling is done , then in @xmath355 step it labels all @xmath350-vertices and their neighbour @xmath352-vertices according to ( d ) and ( c ) of definition [ vertextypes ] , respectively .",
    "the process continues until no new vertex receives a label . finally , in the last step , the algorithm labels all @xmath353-vertices according to ( e ) of definition [ vertextypes ] and presents the labeling of the input tree as the output .    by definition ,",
    "every @xmath350-vertex of a tree is a @xmath353-vertex , therefore it is natural to introduce the following    a @xmath353-vertex is called pure , if it is not a @xmath350-vertex .",
    "the following lemma explains the essence of definition [ vertextypes ] .",
    "[ essencedef]let @xmath344 be a tree , and suppose that @xmath356 and @xmath357 . then :    1 .",
    "all @xmath346-vertices do not belong to @xmath66 ; 2 .",
    "all @xmath350-vertices belong to @xmath66 ; 3 .",
    "all @xmath352-vertices do not belong to @xmath66 ; 4 .",
    "all @xmath353-vertices belong to @xmath66 ;    ( 1)suppose that @xmath351 is an @xmath346-vertex",
    ". then , due to ( a ) of definition [ vertextypes ] , there is @xmath347 with @xmath348 and @xmath349 .",
    "if @xmath358 , then the only neighbour of @xmath359 , which is also a neighbour of @xmath351 , does not lie in @xmath66 , hence @xmath360 as @xmath356",
    ". now , observe that @xmath361 is a recognizing set for @xmath66 , since it trivially satisfies the condition of the lemma [ recognizingcharacter ] .",
    "this implies that @xmath362 which is a contradiction .",
    "( 2),(3 ) we will give a simultaneous proof of ( 2 ) and ( 3 ) by induction on @xmath303 , where @xmath303 is the current step of the labeling algorithm ( remark [ defexplanation ] ) .",
    "so , assume that @xmath363 , @xmath351 is a @xmath350-vertex and it `` became '' such a one due to ( b ) of definition [ vertextypes ] .",
    "let us show that @xmath358 .    according to ( b ) of definition [ vertextypes ]",
    ", there is an @xmath346-vertex @xmath359 , whose all neighbours except @xmath351 , are @xmath346-vertices . due to ( 1 ) of lemma [ essencedef ] , neither @xmath359 nor its @xmath346-neighbours that differ from @xmath351 , do not belong to @xmath66 .",
    "since @xmath356 , we deduce @xmath358 .",
    "this immidiately implies that all @xmath352-vertices that are adjacent to a @xmath350-vertex that was labeled in the first step , do not belong to @xmath66 .",
    "now , assume that ( 2 ) and ( 3 ) are true for vertices which receive their labels in the steps up to @xmath303 .",
    "consider a @xmath350-vertex @xmath351 which gets its label according to ( d ) of definition [ vertextypes ] in the @xmath355 step of the labeling algorithm .",
    "let us show that @xmath358 .    according to ( d ) of definition [ vertextypes ]",
    ", there is an @xmath346-vertex @xmath359 , whose all neighbours except @xmath351 , are @xmath346 or @xmath352-vertices , which have received their labels earlier than the @xmath355 step . due to the induction hypothesis and ( 1 ) of lemma [ essencedef",
    "] , neither @xmath359 nor its @xmath346 or @xmath352-neighbours that differ from @xmath351 , belong to @xmath66 . since @xmath364 , we deduce @xmath358 .",
    "this implies that all @xmath352-vertices that are adjacent to a @xmath350-vertex that was labeled in the @xmath355 step , do not belong to @xmath66 .",
    "( 4)if @xmath351 is a @xmath353-vertex , then due to ( e ) of definition [ vertextypes ] , and ( 1 ) and ( 3 ) of lemma [ essencedef ] , all the neighbours of @xmath351 do not belong to @xmath66 , hence @xmath358 as @xmath364 .",
    "the proof of the lemma [ essencedef ] is completed .",
    "the proved lemma immidiately implies the following necessary condition for a tree @xmath344 to have complexity one .",
    "[ treesnecessarycondition]if @xmath344 is a tree with @xmath365 , then :    1 .",
    "there is no @xmath346 or @xmath352-vertex , which is also a @xmath350 or a @xmath353-vertex ; 2 .",
    "each @xmath353-vertex @xmath351 is adjacent to an @xmath346 or a @xmath352-vertex , whose all neighbours except @xmath351 are neither a @xmath350 nor a @xmath353-vertex .",
    "\\(a ) is clear .",
    "( b)on the opposite assumption , consider a @xmath353-vertex @xmath351 , whose all neighbours are @xmath346 or @xmath352-vertices ( ( e ) of definition [ vertextypes ] ) , and whose every neighbour is adjacent to a @xmath350 or a @xmath353-vertex that is different from @xmath351 .",
    "due to lemma [ essencedef ] , the vertex @xmath351 and these @xmath350 or @xmath353-vertices lying on a distance two from @xmath351 belong to any @xmath356 with @xmath357 .",
    "now , note that @xmath366 is a recognizing set for @xmath66 , since it trivially satisfies the condition of the lemma [ recognizingcharacter ] .",
    "this implies that @xmath362 which is a contradiction .",
    "[ treessuff]if a tree @xmath344 contains neither a @xmath350 nor a pure @xmath353-vertex , then for each @xmath367 with @xmath368 there is @xmath356 with @xmath357 and @xmath369 .",
    "unfortunately , the proof of existence of such @xmath356 is not easy .",
    "this is the main reason that we will give an algorithmic construction of such @xmath356 .",
    "given @xmath367 with @xmath368 , we will assume that @xmath344 is represented as a tree rooted at @xmath68 .",
    "+ step 0 : @xmath370 consider the sets @xmath371 of vertices lying at a distance three from @xmath68 , where it is assumed that the vertices of @xmath372 are adjacent to the same vertex .",
    "let @xmath373 be a list comprised of the sets @xmath371 .",
    "note that since @xmath344 does not contain a @xmath350-vertex , we have that all of @xmath371 contain a non-@xmath346 vertex .",
    "+ step 1 : while @xmath374    remove the first element @xmath375 of @xmath373 .",
    "define @xmath376    @xmath377 + case 1 : @xmath378    @xmath379    add all children of vertices from @xmath380 ( which are @xmath346 -vertices , by definition ) to the set @xmath381 .",
    "note that , by definition of @xmath380 , for each @xmath382 the set @xmath383 , which is the set of children of @xmath194 , contains a non-@xmath346 vertex .",
    "moreover , for each @xmath384 if we consider the sets @xmath385 of vertices lying at a distance three from @xmath149 ( the vertices of @xmath386 are adjacent to the same vertex ) , then since @xmath344 contains no @xmath353-vertex , each of these sets contains a non-@xmath346 vertex .",
    "add all @xmath387 to @xmath373 ; + case 2 : @xmath388    take any @xmath389    @xmath390 add the parent @xmath47 of @xmath194 to the set @xmath381 .",
    "note that @xmath388 implies that for each @xmath391 the set @xmath383 of children of @xmath147 contains a non-@xmath346 vertex . on the other hand , since @xmath344 contains no @xmath350-vertex , then for each @xmath392 the set @xmath393 of children of @xmath149 contains a non-@xmath346 vertex .",
    "add all @xmath394 to @xmath373 ;    consider the sets @xmath395 of vertices lying at a distance three from @xmath194 , where it is assumed that @xmath395 is the set of children of @xmath396 .",
    "+ case 2.1 : @xmath395 contains a non-@xmath346 vertex ;    add @xmath395 to @xmath373 ; + case 2.2 : all vertices of @xmath395 are @xmath346-vertices ;    @xmath397 @xmath398    consider the sets @xmath399 of vertices lying at a distance three from @xmath149 , where we assume that @xmath400 coincides with the set of children of a vertex @xmath401 . since @xmath344 contains no @xmath353-vertex ,",
    "then each @xmath400 contains a non-@xmath346 vertex .",
    "add @xmath399 to @xmath373 ;    the description of the algorithm is completed .",
    "+ let us note that if the algorithm can not choose the set @xmath309 then the last vertex from which it is impossible to choose a vertex lying on a distance three , is either a pendant vertex , which has a specific vertex in the set @xmath381 , or is a vertex that is adjacent to a pendant vertex , and this pendant vertex will be the specific vertex for it .",
    "it can be easily seen that the algorithm constructs a maximal independent set @xmath66 of @xmath344 containing the vertex @xmath68 .",
    "the construction of the set @xmath381 implies that each vertex @xmath402 has a specific neighbour in @xmath381 , that is , a neighbour , which is not adjacent to any other vertex of @xmath66 .",
    "this and corollary [ specificvertex ] imply that the complexity of @xmath66 is one .",
    "the proof of the theorem [ treessuff ] is completed .",
    "the theorem [ treessuff ] presents merely a sufficient condition .",
    "the trees from figure [ exampletreesgamma ] contain a pure @xmath353-vertex , do not contain a @xmath350 vertex , and nevertheless , the first of them has a complexity that is less than one , while the second one is of complexity one . on the other hand ,",
    "the graphs from figure [ exampletreesbetta ] contain a @xmath350-vertex , do not contain a pure @xmath353 vertex , and nevertheless , the first of them has a complexity that is less than one , while the second one is of complexity one .",
    "-vertices , without @xmath350-vertices , title=\"fig : \" ] +    -vertices , without pure @xmath353-vertices , title=\"fig : \" ] +",
    "below we investigate the complexity in the class of line graphs .",
    "this class is interesting not only for its own sake , but also for its connection with another clutter related to graphs .",
    "taking into account , that the clutter @xmath403 of a line graph @xmath1 coincides with the clutter of maximal matchings of some graph , in this sections we will directly work with the latter clutter without remembering that it was originated from a line graph .    in this section the word `` complexity '' should be understood as the complexity of the clutter of maximal matchings of a graph .",
    "[ basiclemma ] for every maximal matching @xmath404    1 .",
    "the vertices of @xmath405 can only be connected to the vertices of @xmath406 .",
    "each edge in @xmath407 has at least one endpoint connected to a vertex not in @xmath406 .",
    "let @xmath408 be an edge in @xmath409 .",
    "let us first prove that both @xmath68 and @xmath6 are not connected to vertices , which are not covered by @xmath404 .",
    "if this is not true , then without loss of generality we may assume that @xmath410 , such that @xmath411 .",
    "@xmath412 is a maximal matching containing @xmath407 .",
    "this contradicts the definition of @xmath407 .",
    "we have proven that the vertices of @xmath405 can only be connected to the vertices of @xmath413 .",
    "now , if there are there are vertices @xmath414 , such that @xmath415 and @xmath416 , then there is a maximal matching that contains @xmath417 . that maximal matching is different from @xmath404 and contains @xmath407",
    "this is a contradiction proving point 1 .",
    "if the statement of point 2 does not take place for an edge @xmath30 , then every maximal matching , which contains @xmath418 also contains @xmath407 .",
    "thus @xmath404 is the only maximal matching , which contains @xmath418 , and consequently @xmath407 is not a minimum subset of @xmath404 with this property .",
    "the contradiction proves point 2 .",
    "[ minimumlemma ] suppose @xmath404 is a minimum maximal matching in @xmath1 and @xmath419 .",
    "the endpoints of @xmath30 can not be connected to endpoints of different edges of @xmath409 .",
    "let @xmath420 be an edge in @xmath407 .",
    "if there are edges @xmath421 and @xmath422 from @xmath409 , such that @xmath68 is connected to @xmath423 and @xmath6 is connected to @xmath424 , then @xmath404 is not a minimum maximal matching since the cardinality of @xmath425 is less than that of @xmath404 .    also , recall the following result @xcite :    [ lovex]if @xmath1 is a connected graph , whose every maximal matching is a perfect matching , then @xmath1 is either @xmath426 or @xmath427 .      note that the complexity of disconnected graphs does not have a lower bound better than zero .",
    "for instance , the graph that consists of a single matching , has a complexity of @xmath428 .",
    "moreover , it can be shown that for every rational number @xmath429 , @xmath430 there exists a graph with complexity @xmath429 .",
    "to construct one just consider the graph @xmath431 from figure [ mncomplexitytrees ] , where we assume that @xmath432 .",
    ", title=\"fig : \" ] +    the following theorem proves the existence of a lower bound for the complexities of connected graphs .",
    "before we move on , let us note that the bound given in the theorem below , is significantly better than the one that theorem [ mainbound ] provides .    for every connected graph @xmath1 with @xmath433 @xmath434 .",
    "let @xmath404 be a minimum maximal matching of @xmath1 .",
    "if @xmath435 then @xmath436 and @xmath437    if @xmath438 , then there are two cases :    * @xmath439 is even .",
    "since @xmath404 is a minimum maximal matching , every maximal matching of @xmath1 is a perfect matching . due to lemma [ lovex ]",
    ", @xmath1 is isomorphic to either @xmath426 or @xmath427(@xmath440 ) . for these graphs @xmath441 * @xmath439 is odd .",
    "if @xmath442 then @xmath443 assume @xmath444 .",
    "lemma 2 implies that either @xmath445(@xmath446 ) or all the vertices of @xmath405 are connected to only one of the endpoints of @xmath420 . without loss of generality",
    "we may assume that they are connected to @xmath68 .",
    "+ if @xmath446 , there are only a few graphs for which it is possible to have @xmath445 and @xmath447 .",
    "all these graphs can be easily checked to have a complexity of @xmath448 .",
    "+ assume @xmath449 .",
    "let @xmath194 be the vertex , which is not covered by @xmath404 .",
    "if @xmath194 is connected to @xmath6 then due to 1 of lemma [ basiclemma ] @xmath450 , since all the edges of @xmath451 are connected to @xmath68 . as a result , according to ( [ s3equ ] ) , @xmath452 + if @xmath194 is connected to @xmath68 , take an edge @xmath453 such that @xmath454 .",
    "@xmath455 is a maximal matching with a smaller cardinality than @xmath404 .",
    "thus @xmath404 is not minimum and this case is impossible .    the proof is now completed .",
    "figure [ mncomplexitytrees ] with @xmath456 illustrates that the bound achieved in the previous theorem is tight .",
    "the depicted graph contains @xmath457 vertices and has a complexity of @xmath458 , therefore @xmath459      for regular graphs , it is possible to find lower bounds for their complexity that do not depend on the number of edges in those graphs .",
    "[ 1/2theorem ] for an r - regular graph @xmath1 with @xmath460 @xmath461 .",
    "let @xmath404 be a maximal matching .",
    "let @xmath462 be the set of edges that connect @xmath406 with @xmath405 , @xmath463 be the set of edges that connect @xmath406 with @xmath464 , and @xmath465 be the set of edges in the spanning subgraph of @xmath406 , not including the edges from @xmath407 .",
    "+ according to point 1 of lemma [ basiclemma ] , all the vertices of @xmath405 are only connected to the vertices of @xmath406 .",
    "therefore , @xmath466 since @xmath467 , we have @xmath468 @xmath469 .    if @xmath1 is a regular graph and @xmath470 then for every maximal matching @xmath404 , @xmath471 .",
    "[ perfcor ] if @xmath1 is a regular graph and @xmath470 then every maximal matching is a perfect matching .    since @xmath471",
    ", we have that @xmath472 .",
    "now suppose there is vertex @xmath6 , which is not covered by @xmath404 .",
    "as @xmath404 is maximal , it covers all the neighbors of @xmath6 . due to 1 of lemma [ basiclemma ] , these neighbors can not belong to @xmath405 ; consequently , they belong to @xmath406 .",
    "this contradicts with @xmath463 being empty .",
    "the complexity of a regular graph @xmath1 equals @xmath473 if and only if @xmath1 is @xmath474 or @xmath475 .",
    "it is not hard to see that @xmath476 .",
    "this said , the corollary follows from lemma [ lovex ] and corollary [ perfcor ] .",
    "the following theorem shows that there exist better limits for the complexities of regular graphs if we do not consider graphs of small regularity .    for an r - regular graph @xmath1",
    ", we have    1 .   if @xmath477 then @xmath478 ; 2 .   if @xmath479 then @xmath480 .",
    "\\(a ) due to lemma 2 , for each @xmath481 there are two options :    * @xmath68 and @xmath6 can be connected to the endpoints of only one edge from @xmath409 .",
    "* @xmath68 is not connected to any vertex covered by @xmath409 and @xmath6 may be connected to any number of endpoints of edges from @xmath409 .    therefore , the edges of @xmath407 are divided into two categories .",
    "let @xmath309 denote the set of edges of the first category , and @xmath375 the set of the edges of the second category .",
    "if an edge from @xmath407 falls in both categories , we will consider it to be in category @xmath309 and not @xmath375 .",
    "retaining the notations of the proof of theorem [ 1/2theorem ] , we have @xmath482 .",
    "the endpoints of each edge in category @xmath309 are the endpoints of at most 4 edges from @xmath483 .",
    "the endpoints of each edge in category @xmath375 are the endpoints of at most @xmath484 edges of @xmath462 .",
    "this implies : @xmath485    we got that @xmath486 , hence , @xmath487 .",
    "( b)we will assume that @xmath1 is connected , because the case of disconnected graphs easily follows from the case of connected graphs .",
    "choose any minimum maximal matching @xmath404 of @xmath1 .",
    "note that ( 2 ) of lemma [ basiclemma ] implies that if @xmath488 then @xmath489 or @xmath490 .",
    "moreover , @xmath491 , and    @xmath492    the endpoints of each edge in category @xmath309 are the endpoints of at most 4 edges from @xmath462 , while the endpoints of each edge in category @xmath375 are the endpoints of at most @xmath493 edges of @xmath462 .",
    "this implies : @xmath494 or @xmath495 and therefore @xmath496    now , we claim that @xmath497 .",
    "if @xmath498 then @xmath499    and therefore @xmath500 .",
    "this implies that for each @xmath501 there is exactly one @xmath502 such that @xmath503 the uniqueness of @xmath504 follows from lemma [ minimumlemma ] .",
    "note that this correspondence is one - to - one since @xmath1 is 4-regular and a @xmath409 edge can not be connected to two different @xmath309 edges . thus , @xmath505 and @xmath506 contradicting ( [ eq35 ] ) .    the proof is now completed .",
    "note that this bound is reachable , since @xmath507 is an 5-regular graph whose complexity is @xmath508 .",
    "our interest toward the complexity and particularly , the complexity of regular graphs was motivated by the following    if @xmath1 is a connected regular graph with @xmath509 , then @xmath1 is either isomorphic to @xmath510 or there is @xmath511 such that @xmath1 is isomorphic either to @xmath427 or to @xmath426 , where @xmath510 is the cycle of length seven .",
    "in some sense , our conjecture states that all regular structures are `` hard '' except some `` uninteresting '' cases .",
    "the paper was completed while the second author was a post - doctoral fellow at concordia university and he would like to thank the staff of the department of engineering and computer science and , particularly , professor hovhannes harutyunyan for hospitality .    99    j. c. claussen , offdiagonal complexity : a computationally quick complexity measure for graphs and networks , physica a 375 ( 2007 ) pp .",
    "365373 .",
    "g. cornuejols , combinatorial optimization : packing and covering , siam , ( january , 2001 ) .",
    "m. r. garey , d. s. johnson , computers and intractability : a guide to the theory of @xmath306-completeness , freeman , 1979 .",
    "s. jukna , on graph complexity , eccc report , no . 5 , 2004    l. lovasz , m.d .",
    "plummer , matching theory , ann .",
    "discrete math . 29",
    "( 1986 ) .",
    "d. p. sumner , randomly matchable graphs , j. graph theory 3 , 1979 , pp .",
    "183 - 186 .",
    "d. b. west , introduction to graph theory , prentice - hall , englewood cliffs , 1996 .",
    "when the paper was completed , we realized that the statement of theorem [ mainbound ] can be generalized to arbitrary clutters .",
    "the aim of this short section to prove the following      again , we can assume that for each @xmath516 @xmath517 .",
    "consider the graph @xmath518 , where @xmath519 and @xmath520 consider the vertices @xmath521 with @xmath522 .",
    "note that by definition of @xmath518 , these vertices induce a maximum clique of @xmath518 .",
    "moreover , since @xmath523 , we imply that each vertex lying outside @xmath98 , is adjacent to some vertex of @xmath98 . as",
    ", @xmath303 does not divide @xmath17 , there is @xmath524 that is adjacent to at least @xmath525 vertices lying outside @xmath98 .",
    "clearly , for this vertex @xmath526 we have : @xmath527 lemma [ gallaiinequality ] implies that there is @xmath528 with @xmath529 it can be easily seen that since @xmath524 then @xmath530 , thus @xmath531      as the following example shows , the condition that @xmath303 does not divide @xmath17 is important .",
    "let @xmath535 , @xmath536 .",
    "consider a graph @xmath1 obtained from a @xmath303-clique @xmath98 , and an independent set @xmath537 ( @xmath538 ) with @xmath539 , by joining every vertex of the clique to @xmath540 vertices of @xmath537 .",
    "now , consider the clutter @xmath541 .",
    "note that @xmath21 satisfies all conditions of theorem [ mainboundclutter ] besides that @xmath303 divides @xmath17 .",
    "now , it is not hard to see that @xmath542"
  ],
  "abstract_text": [
    "<S> the complexity of an edge of a clutter is the ratio of the size of its minimum subset , that is present only in this given edge , to the size of the edge . </S>",
    "<S> the complexity of a clutter is the maximum of the complexities of its edges . </S>",
    "<S> we study the complexity of clutters arising from independent sets and matchings of graphs .    </S>",
    "<S> @xmath0    the graphs considered in this paper are finite , undirected and do not contain multiple edges or loops . for a graph @xmath1 let @xmath2 and @xmath3 denote the sets of vertices and edges of @xmath1 , respectively . for a vertex @xmath4 </S>",
    "<S> let @xmath5 denote the degree of @xmath6 , and let @xmath7 be the maximum degree of a vertex of @xmath1 . if @xmath8 then let @xmath9 be the set of vertices of @xmath1 which are incident to an edge from @xmath10 . for @xmath11 let @xmath12 $ ] denote the subgraph of @xmath1 induced by the set @xmath13 .    </S>",
    "<S> if @xmath14 are vertices of a graph @xmath1 , then let @xmath15 denote the distance between the two vertices , and let @xmath16 denote the diameter of @xmath1 .    </S>",
    "<S> for a positive integer @xmath17 let @xmath18 denote the complete graph on @xmath17 vertices . </S>",
    "<S> if @xmath19 and @xmath17 are positive integers then assume @xmath20 to be the complete bipartite graph one side of which has @xmath19 vertices and the other side @xmath17 vertices .    </S>",
    "<S> we also consider clutters . </S>",
    "<S> a clutter @xmath21 , is a pair @xmath22 , where @xmath23 is a finite set and @xmath10 is a family of subsets of @xmath23 none of which is a subset of another . </S>",
    "<S> following @xcite , the elements of @xmath23 will be called vertices of @xmath21 , while the elements of @xmath10-edges of @xmath21 .    </S>",
    "<S> if for a graph @xmath24 we denote the set of all maximal independent sets of the graph @xmath1 by @xmath25 , then @xmath26 is a clutter . in our paper </S>",
    "<S> we identify the set @xmath25 and the clutter @xmath26 , and use the same notation @xmath25 for both of them .    </S>",
    "<S> if @xmath27 is a clutter and @xmath28 then a set @xmath29 is called recognizing for @xmath30 if for any @xmath31 with @xmath32 we have @xmath33 . in the paper , </S>",
    "<S> when we deal with an edge @xmath28 , we denote by @xmath34 one of the smallest recognizing sets for @xmath30 . </S>",
    "<S> now , for any @xmath28 set : @xmath35 and define @xmath36 , the complexity of the clutter @xmath21 , as : @xmath37    note that for every clutter @xmath21 @xmath38 .    </S>",
    "<S> there are many clutters associated to graphs , nevertheless , in the paper , we define @xmath39-the complexity of a graph @xmath1 , as @xmath40 .    </S>",
    "<S> though the concept of this kind of complexity of a graph is new in graph theory ( see @xcite for another approach ) , it can be easily seen that it stems from the well - known `` continuation '' problems , that is problems , where we are given some initial properties of large objects and asked for the construction of such objects if they exist . </S>",
    "<S> a typical example of a problem of this kind may be the finding of a proper edge - coloring of a graph in which a fixed edge ( or edges ) has a prescribed color .    </S>",
    "<S> though mentioned problems ask for the construction of objects with these properties , in this paper we are interested in `` measuring '' the ability of an object to be built from its parts , and as a measure we take the ratio of the size of `` minimum information '' that suffices for identifying the object to the size of the object .    a good way to think about this is to imagine that we are working in some universe , and we need to identify an object from large set of objects that belong to the universe , which in our case is a clutter . of course </S>",
    "<S> , in general , we do not need to have the whole object until we claim that we have identified the object , since it suffice to have only its smallest recognizing subset . </S>",
    "<S> the complexity of an object shows the relative information that one needs for the identification , and the complexity of the universe is just the maximum complexity of an object from the universe . in our terminology , the universe which contains an object that requires itself for its identification is considered to be hard or just unrecognizable .    </S>",
    "<S> terms and concepts that we do not define can be found in @xcite . </S>"
  ]
}
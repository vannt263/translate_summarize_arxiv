{
  "article_text": [
    "for scalability , performance or for fault - tolerance concerns in distributed storage systems , the pieces of data are spread among many distributed nodes .",
    "most famous distributed data stores include google file system ( gfs )  @xcite , hadoop distributed file system ( hdfs )  @xcite , cassandra  @xcite , dynamo  @xcite , bigtable  @xcite , past  @xcite or dhash  @xcite .    distributed data storage permits to enhance access performance by spreading the load among many nodes and by placing conveniently pieces of data .",
    "it can also improve fault tolerance by maintaining multiple copies of each piece of data .",
    "however , while implementing a distributed data store , many problems have to be tackled .",
    "for instance , it is necessary to efficiently locate a given piece of data : to balance the storage load evenly among nodes , to maintain consistency and the fault - tolerance level .",
    "while consistency and fault - tolerance in replicated data stores are widely studied , the storage load balance received little attention despite its importance .",
    "the distribution of the storage load among the storing nodes is a critical issue . on a daily basis ,",
    "new pieces of data have to be stored and while a failure occurs , maintenance mechanisms are supposed to create and store new copies to replace the lost ones .",
    "a key feature of these systems is that the storage infrastructure itself is dynamic : nodes may crash and new nodes may be added .",
    "if the placement policy used does not balance the storage load evenly among nodes , the imbalance will become harmful .",
    "the overloaded nodes may have to serve many more requests than the other nodes , and in case of failure , the recovery procedure will take more time , increasing the probability to lose data .    to circumvent this issue ,",
    "most systems rely on data redistribution .",
    "they use a hash function in the case of distributed hash tables ( dhts )  @xcite .",
    "however , as shown in previous studies , these systems imply many data movements and may lose data under churn  @xcite .",
    "rodrigues and blake have shown that classical dhts storing large amounts are usable only if the node lifetime is of the order of several days  @xcite .    in this paper",
    "we study data placement policies avoiding data redistribution : once a piece of data is assigned to a node , it will remain on it until the node crashes .",
    "we focus specifically on the evaluation of the impact of several placement strategies on the storage load balance on a long term . to the best of our knowledge , there are few papers devoted to the analysis of the evolution of the storage load of the nodes of a dht system on such a long term period .",
    "our investigation has been done in two complementary steps .    1 .",
    "a simulation environment of a real system based on peersim  @xcite is used to emulate several years of evolution of this system for three placement policies which are defined below : random , least loaded and power of choice .",
    "see figures  [ fig : load_evol_199 ] and  [ fig : load_distrib ] .",
    "simplified mathematical models are presented to analyze the random and power of choice policies .",
    "it should be stressed that a number of aspects are not taken into account in the mathematical models : delays to copy files , network congestion due to duplication or losses of files ,  see section  [ secmath ] for more details .",
    "nevertheless they appear to explain some of the surprising results concerning the load of the nodes obtained through simulations .",
    "+ the least loaded policy is without a surprise , for this policy , the load of the nodes is almost constant , it varies within some small set of values .",
    "we show that for a large network , if @xmath0 is the average load per node and @xmath3 , [ resp .",
    "@xmath4 is the load of a node at equilibrium for the random policy [ resp .",
    "power of choice policy ] then , for @xmath5 , @xmath6 see theorems  [ th1 ] and  [ thpow ] below .",
    "the striking feature is that , for the power of choice policy , the load of a node has a _ finite support _ @xmath7 $ ] for a large average load per node @xmath0 .",
    "this is an important and desirable property for the design of such systems , to dimension the storage of the nodes in particular .",
    "note that this is not the case for the random policy .",
    "our simulations of a real system exhibit this surprising phenomenon , even for moderately large loads , see figure  [ fig : load_distrib ] .",
    "another interesting and intriguing feature is the fact that , in the limit , the distribution of the load of a node is uniform on @xmath7 $ ] .",
    "+ it should be noted that , usually , power of choice policies used in computer science and communication networks are associated with @xmath8 loads instead of @xmath9 loads , see mitzenmacher  @xcite ; or with double exponential decay for the tail distribution of the load at equilibrium , instead of an exponential decay , see vvedenskaya et al .",
    "@xcite . here",
    "the phenomenon is that the number of files stored at a node is bounded in the limit , i.e. it has a finite support , instead of an exponential decay for the tail distribution of this variable .",
    "a mathematical model is presented to explain these phenomena .",
    "the analysis of these systems turns out to be quite complicated mainly because of the large dimensionality of the state spaces involved .",
    "our study relies on probabilistic methods to analyze the asymptotic behavior of an arbitrary node of the network when the total number of nodes gets large .",
    "an additional ingredient is the use of stochastic calculus with marked poisson point processes to establish some of our results .",
    "the paper is organized as follows .",
    "the main placement policies are introduced in section  [ secdef ] .",
    "section  [ secsim ] describes the simulation model and presents the results obtained with the simulator . concerning mathematical models ,",
    "the random policy is analyzed in section  [ secrand ] and power of choice policy in section  [ secpc ] .",
    "all ( quite ) technical details of the proofs of the results for the random policy are included .",
    "this is not the case for the power of choice policy , for sake of simplicity and due to the much more complex framework of general mean - field results , convergence results of the sample paths ( proposition  [ thp ] ) and of the invariant distributions ( proposition  [ convinvpow ] ) are stated without proof .",
    "a reference is provided .",
    "the complete proofs of the important convergence results   are provided .",
    "to each data block is associated a _ root node _ , a node having a copy of the block in charge of its duplication if necessary . during the recovery process to replace a lost copy , the root node has to choose a new storage node within a dedicated set of nodes , _ the selection range _ of the node .",
    "any node of this subset that does not already store a copy of the same data block may be chosen .",
    "the mechanism in charge of the failure of the root nodes is beyond the scope of this paper and the selection range is assumed to be the set of all nodes .",
    "three policies of placement are defined below when the copy of a data block has to be done on another node .      for this algorithm",
    "the root node selects the least loaded node not already storing a copy of the same data block .",
    "this strategy clearly aims at reducing the variation of storage loads among nodes .",
    "as it has been seen in earlier studies , this policy has a bad impact on the system reliability , see  @xcite .",
    "indeed , a node having a small storage load will be chosen by all its neighbors in the ring .",
    "furthermore , this policy implies for a root node to monitor the load of all nodes , which may be costly .",
    "it is nevertheless in terms of placement an optimal policy .",
    "it is used in this paper as a reference for comparison with the other policies .",
    "the root node chooses uniformly at random a new storage node not already hosting a copy of the same data block .      for this algorithm",
    ", the root node chooses , uniformly at random , two nodes not storing a copy of the data block .",
    "it selects the least loaded among the two .",
    "it is inspired by algorithms studied by mitzenmacher and others in the context of static allocation schemes of balls into bins in computer science , see  @xcite for a survey . in queueing theory ,",
    "a similar algorithm has been investigated by the seminal work of vvedenskaya et al .",
    "@xcite in 1996 .",
    "there is a huge literature on these algorithms in this context .",
    "our framework is quite different , the placement is dynamic , data blocks have to move because of crashes , and the number of requests is constant in the system contrary to the queueing models .",
    "the idea is nevertheless the same : reducing the load by just checking some finite subset of nodes instead of all of them .",
    "in fact the common version of this algorithm consists in taking @xmath10 nodes at random and choosing the least loaded node , this is the power of @xmath10 choices algorithm . for simplicity ,",
    "we have chosen to refer to the algorithm as `` power of choice '' instead of the more accurate `` power of two choices '' .",
    "our simulator is based on peersim  @xcite , see also  @xcite .",
    "it simulates a real distributed storage system .",
    "every node , every piece of data , and every transfer is represented .",
    "each piece of data is replicated and each copy is assigned to a different storage node .    [ [ system - model ] ] system model + + + + + + + + + + + +    we have simulated @xmath11 nodes , storing @xmath12 data blocks with a fixed size @xmath13 and replicated @xmath14 times .",
    "the nodes and the data blocks are assigned unique identifiers ( @xmath15 ) .",
    "the nodes are organized according to their identifiers , forming a virtual ring , as it is usual in distributed hash tables ( dhts )  @xcite . to each data block",
    "is associated a _",
    "root node _ ,",
    "a node having a copy of the block in charge of its duplication if necessary .",
    "see below .",
    "[ [ failure - model ] ]   failure model + + + + + + + + + + + + + +    failures in the systems are assumed to occur according to a poisson process with a fixed mean of seven days .",
    "the failures are crashes : a node acts correctly until it fails . after a crash it stops and never comes back again ( fail - stop model ) .",
    "all the copies stored become unavailable at that time . to maintain the number of nodes constant equal to @xmath11",
    ", each time a node fails , an empty node with a new @xmath15 joins the system in a random position in the ring of nodes .",
    "the poisson assumption to represent the successive failures of servers may not be completely accurate but given the large number of nodes and that the failures occur independently , the poissonnian nature of the number of failures in a given time interval can be seen as a consequence of the law of small numbers .",
    "see pinheiro et al .",
    "the assumption that the number of nodes is constant is done for convenience so that the average load per node remains constant , this is not the case in practice but the fluctuations are nevertheless not really significant . see  @xcite .",
    "[ [ simulation - parameters ] ] simulation parameters + + + + + + + + + + + + + + + + + + + + +    in the simulations , based on peersim , the parameters have been fixed as follows :    * the number of nodes @xmath16 , * the number of data blocks @xmath17 , * the block size @xmath18 mb , * the replication degree of data blocks @xmath19 , * the mean time between failures ( mtbf ) is @xmath20 days .",
    "the network latency is fixed to @xmath21 and the bandwidth is @xmath22mbps .    at the beginning of each simulation , the @xmath12 blocks and their copies",
    "are placed using the corresponding policy and the system is simulated for a period of @xmath23 years .",
    "we have studied the storage load distribution and its time evolution . with these parameters ,",
    "the average load is @xmath24 blocks per node .",
    "the optimal placement from the point of view of load balancing would consist of having @xmath25 blocks at every node .",
    "we will investigate the deviation from this scenario for the three policies .",
    "[ [ network - simulation ] ] network simulation + + + + + + + + + + + + + + + + + +    the impact of policies on bandwidth management has been carefully monitored . in case of failure",
    ", many data blocks have to be transferred among a subset of nodes to repair the system .",
    "taking into account bandwidth limitation and network contention is crucial since a delayed recovery may lead to the loss of additional blocks because of additional crashes in the meantime .",
    "[ [ recovery - mechanism ] ] recovery mechanism + + + + + + + + + + + + + + + + + +    concerning the data blocks it is root for , a node is responsible :    * to regularly check the presence of all copies ; * in case of failure of a node having a copy of a data block , it has to select a node .",
    "this node has to transfer the data block from one of the remaining copies in the system .",
    "note that in case of failure of a node , lost data blocks will involve , in general , different root nodes .",
    "each root node is only responsible for the recovery of the data blocks it is root for .",
    "the mechanism in charge of the failure of root nodes ( each node is both root for many data blocks and stores copies for many data blocks ) is beyond the scope of this paper , see , for example , the work on relaxdht  @xcite .",
    "what is important here is that , each time a node fails it is eventually detected , and for each data block it stores , a new node is chosen to store a new copy replacing the lost one .",
    "figure  [ fig : load_evol_199 ] shows the evolution of the average load of a node with respect to the duration of its lifetime within the network .",
    "one can conclude that :    * for the _ least loaded _",
    "strategy , the load remains almost constant and equal to the optimal value @xmath25 . by systematically choosing the least loaded node to store a data block copy",
    ", the storage load tends to be constant among nodes . +",
    "as observed in simulations , this policy has however two main drawbacks .",
    "first , it requires that nodes maintain an up - to - date knowledge of the load of all the nodes .",
    "second , it is more likely to generate network contention for the following reason : if one of the nodes is really underloaded , it will receive most of the transfer requests of its neighborhood .",
    "see  @xcite . * for the _ random _ strategy , the load increases linearly until the failure of the node.this is an undesired feature since it implies that the failure of `` old '' nodes will imply in this case a lot of transfers to recover the large number of lost blocks .",
    "* the growth of the _ power of choice _ policy is slow as it can be seen from the figure .",
    "it should be noted that , contrary to the least loaded policy , the required information to allocate data blocks is limited .",
    "indeed , its cost is only of a communication with each of the two nodes chosen .",
    "furthermore , the random choice of nodes for the allocation of copies of files has the advantage of spreading the load from the point of view of network contention .",
    "the distribution function of the storage loads after two simulated years is presented in figure  [ fig : load_distrib ] . for clarity",
    ", the figure has been truncated .",
    "each point of each policy has been obtained with @xmath26 runs . at the beginning",
    ", the data block copies are placed using the corresponding strategy .",
    "after two years of failures and reparations , one gets that :    * the _ random _ strategy presents a highly non - uniform distribution profile , note that more @xmath27 of the nodes have a loaded greater than @xmath28 .",
    "this is consistent with our previous remark on the fact that old nodes are overloaded .",
    "* for the _ least loaded _",
    "strategy , as expected , the load is highly concentrated around @xmath25 . *",
    "the striking feature concerning the _ power of choice _ policy is that the load of a node seems to a uniform distribution between @xmath2 and @xmath29 .",
    "in particular almost all nodes have a load bounded by @xmath29 which is absolutely remarkable .",
    "table  [ tab : maxload ] gives the maximum loads that have been observed for each strategy over @xmath30 samples : starting from day @xmath31 , the maximal load has been measured and recorded every day , this for the @xmath26 runs .",
    "we can see that the mean maximum load of the random strategy is already high ( more than five times the average ) , and furthermore , the load varies a lot , the maximum measured load being @xmath32 data blocks .",
    "this implies that , with the random strategy , the storage device for each node has to be over - sized , recall that the average load is @xmath25 data blocks .",
    ".statistics of maximal loads [ cols=\"<,^,^,^\",options=\"header \" , ]     as a conclusion , the simulations show that , with a limited cost in terms of complexity , the power of choice policy has remarkable properties .",
    "the load of each node is bounded by @xmath29 .",
    "it may be remarked that each possible load between @xmath2 and @xmath29 is represented by the same amount of nodes on average .",
    "figure  [ fig : load_distrib ] shows that there is approximately the same number of nodes having @xmath2 data blocks , than nodes having @xmath25 data block or nodes having @xmath29 data blocks .",
    "note that this is a stationary state .",
    "additionally , the variation is low , we can observe in table  [ tab : maxload ] that upon the @xmath30 samples , the most loaded node was never above 328 . from a practical point of view , it means that a slightly oversized storage device at each node ( a bit more than twice the average ) is enough to guarantee the durability of the system .    in the following sections we investigate simplified mathematical models of two placement policies : random and power of choice .",
    "the goal is to explain these striking qualitative properties of these policies .",
    "the main goal of the paper is to investigate the performance of duplication algorithms in terms of the overhead for the loads of the nodes of the network .",
    "for simplicity we will assume that the replication rate is @xmath23 , each data block has at most two copies . without loss of generality , we will assume that the breakdown of each server occurs according to a poisson process with rate @xmath33 .",
    "after a breakdown , a server restarts empty ( in fact a new server replaces it ) .",
    "a complete markovian description of such a system is quite complex . indeed ,",
    "if there are @xmath11 servers and @xmath12 initial data blocks , for @xmath34 , the locations of the @xmath35th data block are either the index of two distinct servers if there are two copies , or the index of one server if only one copy is present , or @xmath2 if the data block has been lost for good .",
    "a simple calculation shows that the size of the state space of the markov process is at least of the order of @xmath36 which is huge if it is remembered that @xmath12 is of the order of @xmath11 .",
    "for this reason , we shall simplify the mathematical model .",
    "[ [ assumption - on - duplication - rate ] ] assumption on duplication rate + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in order to focus specifically on the efficiency of the replacement strategy from the point of view of the distribution of the load of an arbitrary node , we will study the system with the assumption that it does not lose files .",
    "we will only track the location of the node of each copy of a data block with a simplifying assumption : just before a node fails , all the copies it contains are allocated to the other nodes with respect to the algorithm of placement investigated . in this way",
    ", every data block has always two copies in the system .",
    "note that this system is like the original one by assuming that the time to make a new copy is null .",
    "once a server has failed , a copy of each of the data blocks it contains is produced immediately with the remaining copy in the network . with this model ,",
    "a copy could be made on the same node as the other copy , but this occurs with probability @xmath37 , it can be shown that this has a negligible effect at the level of the network , in the same way as in proposition  [ techprop ] below .",
    "this approximation is intuitively reasonable to describe the original evolution of the system when few data blocks are lost . as we will see , qualitatively , its behavior is close to the observed simulations of the real system , few files were lost after two years .",
    "now @xmath38 denotes the total number of copies of files , it is assumed that , for some @xmath39 , @xmath40 @xmath0 is therefore the average load per server . with these assumptions ,",
    "the replication factor does not play a role , it is as if there were @xmath41 distinct files and once a node breaks down , any file present on this nodes is immediately copied to another node according to the policy used .",
    "if the initial state of the system is @xmath42 , where the @xmath35th is the number of files at node @xmath35 initially , throughout the paper , it is assumed that that the distribution of the variables @xmath42 are invariant by any permutation of indices , i.e. it is an exchangeable vector , and that @xmath43 note that this condition is satisfied if we start with an optimal exchangeable allocation , i.e. for which , for all @xmath44 , @xmath45 where , for @xmath46 , @xmath47 and @xmath48 .      for @xmath49 ,",
    "we denote by @xmath50 the marked poisson point process defined as follows :    * @xmath51 is a poisson process on @xmath52 with rate @xmath33 ; * @xmath53 is an i.i.d .",
    "sequence of uniform random variables on the subset @xmath54 .    for @xmath49 and @xmath55",
    ", @xmath56 is the instant of the @xmath57th breakdown of server @xmath35 . for @xmath58",
    ", @xmath59 is the server where the @xmath60th copy present on node @xmath35 is allocated after this breakdown . the random variables @xmath61 , @xmath62 are assumed to be independent .",
    "concerning marked poisson point processes , see kingman  @xcite for example .",
    "one will use an integral representation for these processes , if @xmath63 and @xmath64 , @xmath65    [ [ equations - of - evolution ] ] equations of evolution + + + + + + + + + + + + + + + + + + + + + +    for @xmath44 and @xmath66 , @xmath67 is the number of copies on server @xmath35 at time @xmath68 .",
    "the dynamics of the random allocation algorithm is represented by the following stochastic differential equation , for @xmath69 , @xmath70 where @xmath71 is the function @xmath72 the first term of the right hand side of relation   corresponds to a breakdown of node  @xmath35 , all files are removed from the node .",
    "the second concerns the files added to node @xmath35 when other servers break down and send copies to node @xmath35 .",
    "note that the @xmath35th term of the sum is always @xmath2 .    denote @xmath73 then clearly @xmath74 is a markov process .",
    "note that , because of the symmetry of the initial state and of the dynamics of the system , the variables @xmath67 have the same distribution and since the sum of these variables is @xmath41 , one has in particular @xmath75 for all @xmath76 , @xmath69 and @xmath77 .",
    "the integrand in the second term of the right hand side of equation   has a binomial distribution with parameter @xmath78 and @xmath37 and the sum of these terms is @xmath79 which is converging to @xmath0 .",
    "hence , this suggests , via an extension of the law of small numbers , that this second term could be a poisson process with rate @xmath0 .",
    "the process @xmath80 should be in the limit , a jump process with a poissonnian input and return to @xmath2 at rate @xmath33 .",
    "this is what we are going to prove now .    by integrating equation",
    "one gets the relation @xmath81 where @xmath82 is the martingale @xmath83\\\\ + \\sum_{m=2}^n \\bigintsss_0^t \\left[z_1\\left(l_m^n(s{-}),\\overline{u}\\right ) \\overline{{{\\mathcal}n}}_{m}({\\mathop{}\\mathopen{}\\mathrm{d}}s,{\\mathop{}\\mathopen{}\\mathrm{d}}\\overline{u}){-}\\frac { l_m^n(s)}{n{-}1}{\\mathop{}\\mathopen{}\\mathrm{d}}s\\right].\\end{gathered}\\ ] ]    the following proposition shows that the process @xmath80 does not have jumps of size @xmath84 on a finite time interval with high probability .",
    "[ q = l ] for @xmath85 then @xmath86 } { \\mathop{}\\mathopen{}\\mathrm{d}}l_1^n(t)\\geq 2 \\right)=0.\\ ] ]    for @xmath87 , from equation   in the appendix , one obtains that there exists some constant @xmath88 such that @xmath89 holds for all @xmath90 , if @xmath91 on the event @xmath92 the probability that a failure of some node will send more than @xmath23 new copies on node @xmath33 is upper bounded by @xmath93 . since the total number of failures on the time interval @xmath94 $ ] affecting node @xmath33 has a poisson distribution with parameter @xmath95",
    ", one obtains that the probability that @xmath80 has a jump of size at least @xmath23 on @xmath94 $ ] is bounded by @xmath96 hence goes to @xmath2 as @xmath11 gets large .",
    "the proposition is proved .",
    "[ [ convergence - to - a - simple - jump - process ] ] convergence to a simple jump process + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    define @xmath97= \\int_0^t \\sum_{m=2}^n z_i\\left(l_m^n(s{-}),\\overline{u}\\right ) \\overline{{{\\mathcal}n}}_{m}({\\mathop{}\\mathopen{}\\mathrm{d}}s,{\\mathop{}\\mathopen{}\\mathrm{d}}\\overline{u}),\\ ] ] this is a counting process with jumps of size @xmath33 .",
    "define @xmath98 then @xmath99 is the compensator of @xmath100)$ ] in the sense that it is a previsible process and that @xmath100{-}c_p^n(t))$ ] is a martingale .",
    "the proof is analogous to the proof of proposition  [ propinc ] in the appendix .",
    "[ poiscomp ] if the initial distribution of @xmath101 satisfies condition   then , for the convergence in distribution of processes , @xmath102    we first prove that the sequence @xmath99 is tight for the convergence in distribution with the topology of the uniform norm . by using that the sum of the @xmath103 s equals @xmath41 , for @xmath104 ,    @xmath105",
    "hence for any @xmath106 and @xmath107 , there exists some @xmath108 such that , for all @xmath109 , @xmath110 the sequence @xmath99 satisfies the criterion of the modulus of continuity , see theorem 7.2 page  81 of billingsley  @xcite .",
    "the property of tightness has been proved .",
    "furthermore any limiting point corresponds to a continuous process .    the symmetry of the variables @xmath111 and the fact that their sum is @xmath41 give that @xmath112 hence , the sequence @xmath113 is converging to @xmath114 .    by using again the same arguments , one has @xmath115 ^ 2 } \\!\\!\\!\\left[\\frac{1}{n{-}1}\\!\\!\\sum_{{1{\\leq } m{\\leq}n}}\\!\\!\\!\\!\\!l_m^n(s)\\right]\\!\\!\\!\\left[\\frac{1}{n{-}1}\\!\\!\\!\\sum_{{1{\\leq } m{\\leq}n}}\\!\\!\\!\\!\\!l_m^n(s')\\right]\\!\\!{\\mathop{}\\mathopen{}\\mathrm{d}}s { \\mathop{}\\mathopen{}\\mathrm{d}}s'\\!\\!\\right)\\notag \\\\ & -2 { \\ensuremath{\\mathbb{e}}}\\left(\\int_{[0,t]^2 } \\frac{l_1(s)}{n{-}1}\\left[\\frac{1}{n{-}1}\\sum_{{1{\\leq } m{\\leq}n}}l_m^n(s')\\right]\\,{\\mathop{}\\mathopen{}\\mathrm{d}}s{\\mathop{}\\mathopen{}\\mathrm{d}}s'\\right)+{\\ensuremath{\\mathbb{e}}}\\left(\\int_0^t \\frac{l_1(s)}{n{-}1}\\,{\\mathop{}\\mathopen{}\\mathrm{d}}s \\right)^2\\notag\\\\ & { = } \\!\\left(\\!\\frac{f_n}{n{-}1}t\\!\\right)^2\\!\\!\\!\\!{-}2f_nt\\int_0^t\\frac{{\\ensuremath{\\mathbb{e}}}(l_1^n(s))}{(n{-}1)^2}\\,{\\mathop{}\\mathopen{}\\mathrm{d}}s + { \\ensuremath{\\mathbb{e}}}\\left(\\int_0^t \\frac{l_1(s)}{n{-}1}\\,{\\mathop{}\\mathopen{}\\mathrm{d}}s \\right)^2.\\label{eqc2}\\end{aligned}\\ ] ] with lemma  [ techprop ] in appendix , one obtains therefore that the second moment of @xmath116 is converging to @xmath117 , hence @xmath118 one concludes that finite marginals of the process @xmath99 converge to the corresponding marginals of @xmath119 .",
    "consequently , @xmath119 is the only limiting point of @xmath99 for the convergence in distribution .",
    "the tightness property gives therefore the desired convergence .",
    "the proposition is proved .",
    "[ prop1 ] if the initial distribution of @xmath101 satisfies condition   and converges to some distribution @xmath120 , then , for the convergence in distribution , @xmath121 where @xmath122 is a jump process on @xmath123 with initial distribution @xmath120 whose @xmath124-matrix @xmath125 is given by , for @xmath126 , @xmath127 and @xmath128 .    by using proposition  [ q = l ] , proposition  [ poiscomp ] and theorem  5.1 of  @xcite ,",
    "one concludes that the sequence of point processes @xmath100)$ ] is converging in distribution to a poisson process @xmath129 with rate @xmath0 .",
    "recall that @xmath130 , from sde  , one has @xmath131 thus , for @xmath132 , @xmath133 \\text { if } t_n^1\\leq t < t_{n+1}^1.\\ ] ] the convergence we have obtained shows that @xmath80 is converging in distribution to @xmath134 where @xmath135 \\text { if } t_n^1\\leq t < t_{n+1}^1.\\ ] ] this is the desired result .    this result explains the phenomenon observed in the simulations , figure  [ fig : load_evol_199 ] , if a node has been alive for @xmath68 units of time , asymptotically it has received a poissonnian number of files with rate @xmath114 , hence its average is growing linearly with @xmath68 .",
    "[ convprop ] the equilibrium distribution of @xmath80 is converging in distribution to @xmath136 , a geometrically distributed random variable with parameter @xmath137 .",
    "denote by @xmath138 the invariant distribution of the process @xmath80 . by symmetry , we know that @xmath139 hence the sequence of probability distributions @xmath140 is tight .",
    "let @xmath141 be some limiting point of this sequence for some subsequence @xmath142 . if @xmath143 is some function on @xmath123 with finite support , then the cycle formula for the invariant distribution of the ergodic markov process @xmath74 gives the relation @xmath144 where @xmath145 is the distribution of @xmath146 at the instants of jumps of breakdowns of node  @xmath33 .",
    "in particular , @xmath147    by proposition  [ lemw2 ] in appendix , theorem  [ prop1 ] is also true when the initial distribution is @xmath145 hence , for the convergence in distribution , @xmath148 when the process @xmath149 has initial point @xmath2 .",
    "consequently , by lebesgue s theorem , @xmath150 the last term of this equation is precisely the invariant distribution of @xmath149 , again with the cycle formula for ergodic markov processes .",
    "the probability @xmath141 is necessarily the invariant distribution of @xmath122 , hence the sequence @xmath140 is converging to @xmath141 .",
    "it is easily checked that @xmath141 is a geometric distribution with parameter @xmath137 .    by using the fact that @xmath151 it is then easy to get the following result .",
    "[ th1 ] the convergence in distribution @xmath152 holds , where @xmath153 is an exponential random variable with parameter  @xmath33 .    in particular the probability that , at equilibrium , the load of a given node is more than twice the average load is @xmath154 which is consistent with the simulations , see figure  [ fig : load_distrib ] .",
    "similarly as before , for @xmath49 , @xmath155 denotes the marked poisson point process defined as follows :    * @xmath51 is a poisson process on @xmath52 with rate @xmath33 ; * @xmath156 where @xmath157 is an i.i.d . sequence with common distribution @xmath158 is uniform on the set of pairs of distinct elements of @xmath54 .",
    "finally , @xmath159 is i.i.d .",
    "bernoulli sequence of random variables with parameter @xmath160 .",
    "the set of marks @xmath161 is defined as @xmath162 for @xmath163 and @xmath164 , @xmath56 is the instant of the @xmath57th breakdown of server @xmath35 . for @xmath58 , @xmath165 and @xmath166",
    "are the servers where the @xmath60th copy present on node @xmath35 may be allocated after this breakdown , depending on their respective loads of course .",
    "if the two loads are equal , the bernoulli random variable @xmath167 is then used .",
    "[ [ equations - of - evolution-1 ] ] equations of evolution + + + + + + + + + + + + + + + + + + + + + +    for @xmath44 and @xmath66 , @xmath168 is the number of copies on server  @xmath35 at time @xmath68 for this policy and @xmath169 .",
    "the dynamics of the power of choice algorithm is represented by the following stochastic differential equation , for @xmath69 , @xmath170 where @xmath171 is the function , for @xmath172 and @xmath173 , @xmath174 as it can be seen , when node @xmath175 breaks down while the network is in state @xmath176 , @xmath177 is the number of copies sent to node @xmath35 by the power of choice policy if @xmath178 is the corresponding mark associated to this instant .",
    "contrary to the random policy , the allocation depends on the state @xmath179 , for this reason it is convenient to introduce the empirical distribution @xmath180 as follows , if @xmath143 is some real - valued function on @xmath123 , @xmath181 if @xmath182 , @xmath183\\right\\rangle}$ ] denotes @xmath180 applied to the indication function of @xmath184 $ ] . in the same way as in the proof of proposition",
    "[ q = l ] , it can be proved that , with high probability and uniformly on any finite time interval , @xmath185 is the unique value of positive jumps of all processes . by using equation   and the definition of @xmath180",
    ", one gets that , for a finite support function @xmath143 , with high probability , @xmath186    \\sum_{m } q_m^n(t ) \\frac{1}{(n{-}1)(n{-}2)}\\times \\\\   & \\hspace{15mm}\\bigg [ \\sum_{\\substack{j\\not = j'\\\\j , j'\\not = m}}{\\ensuremath{\\mathbbm{1}_{\\{q_j^n(t)\\geq \\ell\\}}}}{\\ensuremath{\\mathbbm{1}_{\\{q_{j'}^n(t)\\geq \\ell\\}}}}-\\sum_{\\substack{j\\not = j'\\\\j , j'\\not = m}}{\\ensuremath{\\mathbbm{1}_{\\{q_j^n(t)\\geq \\ell+1\\}}}}{\\ensuremath{\\mathbbm{1}_{\\{q_{j'}^n(t)\\geq \\ell+1\\}}}}\\bigg]\\,{\\mathop{}\\mathopen{}\\mathrm{d}}t,\\end{aligned}\\ ] ] where @xmath187 is a martingale .",
    "note that the terms inside the brackets in the last equation is simply the number of pairs of nodes whose state is greater than @xmath176 and the state of at least one of them is @xmath176 . by integrating ,",
    "this gives the relation @xmath188 with @xmath189}{\\lambda^n(s)(\\{\\ell\\ } ) } .\\ ] ]    [ thp ]     1 .",
    "the distribution of @xmath190 is converging in distribution to @xmath191 , a non - homogeneous markov process whose @xmath124-matrix @xmath192 is given by , for @xmath193 , @xmath194 and @xmath195 2 .",
    "for the convergence in distribution , if @xmath143 has finite support , @xmath196\\right).\\ ] ]    the proof which is quite technical is omitted to concentrate on the asymptotic behaviour of the invariant distribution .",
    "it can be found in  @xcite .",
    "it is based on the proof of the convergence of the process @xmath197 by using equation  .",
    "it is similar in fact to the proof of an analogous result in the context of queuing systems , see graham  @xcite for example .",
    "the last reference contains also the existence and uniqueness result of such a non - homogeneous markov process .",
    "[ [ the - invariant - distribution ] ] the invariant distribution + + + + + + + + + + + + + + + + + + + + + + + + + +    in this part , we study the asymptotic behavior of the invariant distribution of the load of a node at equilibrium .",
    "[ pibeta ] the process @xmath191 of proposition  [ thp ] has a unique invariant distribution @xmath198 on @xmath123 , which can be defined by induction as @xmath199 with @xmath200 .    it should be noted that , due to the non - homogeneity of the markov process , the uniqueness property is not clear in principle .",
    "let @xmath141 an invariant probability of the process .",
    "if we start from this initial distribution , obviously the coefficients of the @xmath124-matrix do not depend of time , the invariant equations can be written as @xmath201 define , for @xmath202 , @xmath203 , then @xmath204 in particular @xmath205 , hence by definition of the @xmath124-matrix @xmath206 hence , necessarily @xmath207 with initial value @xmath208 .",
    "it is easily seen that the sequence @xmath209 is converging to @xmath2 so that @xmath141 is indeed a probability distribution on @xmath123 .",
    "the proposition is proved .",
    "[ convinvpow ] the invariant distribution of @xmath190 is converging to the unique invariant distribution of @xmath191 .",
    "the proof is omitted , we refer to  @xcite .",
    "it shows that it is enough to analyze the invariant distribution @xmath210 of the limiting process we have just obtained .",
    "we can now state the main result of this section which explains the phenomenon observed in the simulations , see figure  [ fig : load_distrib ] .",
    "[ thpow ] if @xmath211 is a random variable with distribution @xmath210 , then , for the convergence in distribution , @xmath212 where @xmath213 is a uniformly distributed random variable on @xmath214 $ ] .    in the proof of proposition  [ pibeta ] , we have seen that , by equation  , for @xmath215 , @xmath216 by summing these equations , one obtains @xmath217 where @xmath218 . hence , as expected , @xmath219 , and therefore @xmath220 by multiplying equation   by @xmath221 and by summing up , one gets @xmath222 the right hand side of this relation is bounded by @xmath223 hence , by using fubini s theorem on the left hand side , @xmath224 so that @xmath225 holds .",
    "in particular the family of random variables @xmath226 is tight when @xmath0 goes to infinity .",
    "let @xmath227 be one of its limiting points , @xmath228 the uniform integrability property of @xmath229 , consequence of the boundedness of the second moments , gives that @xmath227 satisfies necessarily the relation @xmath230 the function @xmath231 is thus differentiable and satisfies the differential equation @xmath232 for @xmath233 , so that @xmath234 when @xmath235 .",
    "one obtains the solution @xmath236 with @xmath237 , @xmath227 is a uniformly distributed random variable on the interval @xmath214 $ ] .",
    "the family of random variables @xmath229 has therefore a unique limiting point when @xmath0 goes to infinity .",
    "one deduces the convergence in distribution .",
    "the theorem is proved .",
    "our investigations through simulations and mathematical models have shown that    * a simple , random placement strategy may lead to heavily unbalanced situations ; * classical load balancing techniques , like choosing the least loaded nodes are optimal from the point of view of placement .",
    "they have the drawback of requiring a detailed information on the state of the network , hence a significant cost in terms of complexity and bandwidth . *",
    "the _ power of two random choices _",
    "policy has the advantage of having good performance with a limited cost in terms of storage space and of complexity .",
    "10    p.  billingsley . .",
    "wiley series in probability and statistics : probability and statistics .",
    "john wiley & sons inc .",
    ", new york , second edition , 1999 . a wiley - interscience publication .",
    "d.  borthakur . architecture guide . , 2008 .",
    "f.  chang , j.  dean , s.  ghemawat , w.  c. hsieh , d.  a. wallach , m.  burrows , t.  chandra , a.  fikes , and r.  e. gruber .",
    "bigtable : a distributed storage system for structured data . in _ proceedings of the 7th usenix symposium on operating systems design and implementation - volume 7 _ , osdi06 , pages 1515 , berkeley , ca , usa , 2006 .",
    "usenix association .",
    "f.  dabek , j.  li , e.  sit , j.  robertson , f.  f. kaashoek , and r.  morris . designing a dht for low latency and high throughput . in _",
    "the 1st symposium on networked systems design and implementation _ , san francisco , ca , usa , march 2004 .",
    "g.  decandia , d.  hastorun , m.  jampani , g.  kakulapati , a.  lakshman , a.  pilchin , s.  sivasubramanian , p.  vosshall , and w.  vogels .",
    "dynamo : amazon s highly available key - value store . in _ proceedings of twenty - first acm sigops symposium on operating systems principles _ , sosp07 , pages 205220 , new york , ny , usa , 2007 .",
    "s.  n. ethier and t.  g. kurtz . .",
    "john wiley & sons inc .",
    ", new york , 1986 .",
    "s.  ghemawat , h.  gobioff , and s .- t .",
    "leung . the google file system . in _",
    "the 9th symposium on operating systems principles _ , pages 2943 , new york , ny , usa , october 2003 .    c.  graham .",
    "chaoticity on path space for a queueing network with selection of the shortest queue among several .",
    ", 37(1):198211 , 2000 .",
    "m.  jelasity , a.  montresor , g.  p. jesi , and s.  voulgaris .",
    "the peersim simulator .",
    "y.  kasahara and s.  watanabe .",
    "limit theorems for point processes and their functionals . , 38(3):543574 , 1986 .",
    "j.  f.  c. kingman . .",
    "oxford studies in probability , 1993 .",
    "a.  lakshman and p.  malik .",
    "cassandra : a decentralized structured storage system .",
    ", 44(2):3540 , apr .",
    "s.  legtchenko , s.  monnet , p.  sens , and g.  muller .",
    "relaxdht : a churn - resilient replication strategy for peer - to - peer distributed hash - tables . , 7(2):28:128:18 , july 2012 .",
    "m.  mitzenmacher , a.  w. richa , and r.  sitaraman .",
    "the power of two random choices : a survey of techniques and results . in _ in handbook of randomized computing _ , pages 255312 , 2000 .",
    "a.  montresor and m.  jelasity . : a scalable p2p simulator . in _ proc . of the 9th int .",
    "conference on peer - to - peer ( p2p09 ) _ , pages 99100 , seattle , wa , sept .",
    "e.  pinheiro , w .- d .",
    "weber , and l.  a. barroso .",
    "failure trends in a large disk drive population . in _",
    "5th usenix conference on file and storage technologies ( fast07 ) _ , pages 1729 , 2007 .",
    "http://research.google.com/archive/disk_failures.pdf .",
    "p.  robert and w.  sun .",
    "an asymptotic analysis of replacement policies .",
    "preprint , 2017 .",
    "r.  rodrigues and c.  blake .",
    "when multi - hop peer - to - peer lookup matters . in _",
    "iptps04 : proceedings of the 3rd international workshop on peer - to - peer systems _ , pages 112122 , san diego , ca , usa , february 2004 .    l.  c.  g. rogers and d.  williams . .",
    "john wiley & sons ltd .",
    ", chichester , second edition , 1994 .",
    "l.  c.  g. rogers and d.  williams . .",
    "cambridge mathematical library .",
    "cambridge university press , cambridge , 2000 .",
    "reprint of the second ( 1994 ) edition .",
    "a.  i.  t. rowstron and p.  druschel .",
    "storage management and caching in past , a large - scale , persistent peer - to - peer storage utility . in _",
    "the 8th acm symposium on operating systems principles _ , pages 188201 , december 2001 .",
    "v.  simon , s.  monnet , m.  feuillet , p.  robert , and p.  sens . .",
    "in _ the 14th ieee international symposium on network computing and applications ( ieee nca15 ) _ , page  226229 , cambridge , united states , sept . 2015 .    n.  d. vvedenskaya , r.  l. dobrushin , and f.  i. karpelevich . a queueing system with a choice of the shorter of two queues  an asymptotic approach . ,",
    "32(1):2034 , 1996 .",
    "the technical results of this section concern the random allocation scheme .",
    "the notations of the corresponding section are used .",
    "the proof is not difficult , it is included for the sake of completeness for readers not familiar with the properties of martingales associated to marked poisson point processes . the previsible increasing process of the martingale @xmath239\\right ) \\text { is }   \\left(\\int_0^t l_1^n(s)^2\\,{\\mathop{}\\mathopen{}\\mathrm{d}}s\\right),\\ ] ] see theorem  ( 28.1 ) page  50 of  @xcite . by independence of the poisson processes ,",
    "it is enough to calculate the previsible increasing process of the martingale @xmath240\\notag \\\\ &",
    "= \\sum_{t^m_n\\leq t } \\sum_{p=1}^{l_m^n(t_n^m{- } ) } { \\ensuremath{\\mathbbm{1}_{\\{u_p^{m , n}=1\\}}}}-\\int_0^t \\frac { l_m^n(s)}{n{-}1}{\\mathop{}\\mathopen{}\\mathrm{d}}s,\\label{eql}\\end{aligned}\\ ] ] for @xmath241 .",
    "it is sufficient in fact to show that the second moment of this martingale is such that @xmath242{\\mathop{}\\mathopen{}\\mathrm{d}}s,\\ ] ] the property of independent increments of poisson processes will then give the martingale property of @xmath243 minus this term . by integrating with respect to the values of @xmath244",
    ", one has @xmath245 which gives the relation @xmath246    in the same way , by integrating with respect to the values of @xmath244 , with the notation @xmath247 , @xmath248 by using the last two relations one gets @xmath249\\right)^2\\right ) \\\\   + \\frac{n{-}2}{(n{-}1)^2}{\\ensuremath{\\mathbb{e}}}\\left(\\int_0^t l_m^n(s{-})\\,{{\\mathcal}n}_m({\\mathop{}\\mathopen{}\\mathrm{d}}s)\\right).\\end{gathered}\\ ] ] since the martingale @xmath250{-}t)$ ] associated to a poisson process with rate @xmath33 has the increasing previsible process @xmath251 , one gets @xmath252 the proposition is proved .      with relation  , by writing the sde satisfied by @xmath256 , @xmath257 \\overline{{{\\mathcal}n}}_{m}({\\mathop{}\\mathopen{}\\mathrm{d}}s,{\\mathop{}\\mathopen{}\\mathrm{d}}\\overline{u } )    \\end{gathered}\\ ] ] by taking the expectation , one obtains @xmath258 by using the fact that the @xmath78 s have the same distribution and their sum is @xmath41 , if @xmath259 equation   gives that , for @xmath260 , @xmath261 if @xmath262 such that @xmath263 for all @xmath11 , then , by gronwall s inequality , see ethier and kurtz  @xcite  p.498 , @xmath264 relation   is proved .",
    "denote by @xmath265 then , by equation  , for @xmath266 , @xmath267 with the help of doob s inequality , see theorem  ( 52.6 ) of rogers and williams  @xcite , one gets @xmath268 and this last quantity is bounded with respect to @xmath76 by relations   and  .",
    "hence , by using the previous inequality , one can find a constant @xmath269 such that , for any @xmath270 and @xmath266 , @xmath271 one concludes again with gronwall s inequality .",
    "the lemma is proved .",
    "the proof is similar to the proof of lemma  [ techprop ] .",
    "one has to introduce the functions @xmath278 by using an integral equation for @xmath256 and @xmath256 and the symmetry properties of the vector @xmath279 , one obtains the relations @xmath280 for convenient positive constants @xmath281 , @xmath282 , @xmath283 , @xmath284 , @xmath23 independent of @xmath11 .",
    "one uses gronwall s inequality for the first relation to get an upper bound on @xmath285 , @xmath286 and gronwall s inequality is again used after plugging this relation in the second inequality .",
    "[ lemw2 ] if @xmath145 is the invariant distribution of the state of the network at the instants of failures of node @xmath33 , then , with the notations of section  [ secmath ] , for the convergence in distribution , @xmath287 if the initial distribution of @xmath74 is @xmath145 .",
    "let @xmath288 be the invariant distribution of the process @xmath80 at the instants of failures on nodes , not only of node @xmath33 .",
    "the sequence of states of the corresponding markov chain is denoted as @xmath289 where @xmath290 , @xmath291 is the state of the nodes at the instant of the @xmath57th failure , i.e. the state of network reordered but with the failed node is excluded . if @xmath292 by invariance one has @xmath293 after some trite calculations , one obtains @xmath294 hence @xmath295 the same property will hold when one considers only the instants of failures of node @xmath33 since , recall that @xmath296 is the first of these instants , @xmath297 by proceeding as in the proof of lemma  [ techprop ] , but by stopping at time @xmath296 instead of a fixed time @xmath68 , one obtains that @xmath298 lemma  [ lemw ] implies therefore that @xmath299 one can now proceed as in the proof of proposition  [ poiscomp ] by noting that the crucial argument is the fact that the two last terms of the right hand side of equation   vanish when @xmath11 gets large ."
  ],
  "abstract_text": [
    "<S> distributed storage systems such as hadoop file system or google file system ( gfs ) ensure data availability and durability using replication . </S>",
    "<S> persistence is achieved by replicating the same data block on several nodes , and ensuring that a minimum number of copies are available on the system at any time . </S>",
    "<S> whenever the contents of a node are lost , for instance due to a hard disk crash , the system regenerates the data blocks stored before the failure by transferring them from the remaining replicas . </S>",
    "<S> this paper is focused on the analysis of the efficiency of replication mechanism that determines the location of the copies of a given file at some server . </S>",
    "<S> the variability of the loads of the nodes of the network is investigated for several policies . </S>",
    "<S> three replication mechanisms are tested against simulations in the context of a real implementation of a such a system : random , least loaded and power of choice .    </S>",
    "<S> the simulations show that some of these policies may lead to quite unbalanced situations : if @xmath0 is the average number of copies per node it turns out that , at equilibrium , the load of the nodes may exhibit a high variability . </S>",
    "<S> it is shown in this paper that a simple variant of a power of choice type algorithm has a striking effect on the loads of the nodes : at equilibrium , the load of a node has a bounded support , almost all nodes have a load less than @xmath1 . </S>",
    "<S> furthermore , the load of a given node has in fact a uniform distribution between @xmath2 and @xmath1 . </S>",
    "<S> in particular the load of a random node of the network for this algorithm is bounded by @xmath1 which is an interesting property for the design of the storage space of these systems .    </S>",
    "<S> mathematical models are introduced and investigated to explain this unusual , quite surprising , phenomenon . </S>",
    "<S> the analysis of these systems turns out to be quite complicated mainly because of the large dimensionality of the state spaces involved . </S>",
    "<S> our study relies on probabilistic methods , mean - field analysis , to analyze the asymptotic behavior of an arbitrary node of the network when the total number of nodes gets large . </S>",
    "<S> an additional ingredient is the use of stochastic calculus with marked poisson point processes to establish some of our results . </S>"
  ]
}
{
  "article_text": [
    "the applications of mechanics and flow in porous media are wide ranging , as are the challenges involved in simulating some of these problems in nonlinear multiscale contexts .",
    "this is particularly true in geomechanical modeling where relevant phenomena may be highly nonlinear , for example in the setting of enhanced production and environmental safety concerns due to overburden subsidence and compaction @xcite .",
    "another of the central challenges is the multiscale nature of the media considered in geomechanics problems .",
    "heterogeneity of rock properties should be accurately accounted in the geomechanical model , and this requires a computationally costly a high resolution solve . moreover , due to the multi - physics nature of the problems , they may involve highly nonlinear relations .",
    "this then makes the further requirement of many iterations in a newton or picard linearization .",
    "thus , we propose a multiscale method to attempt overcome some of these challenges .",
    "the central idea is to linearize in a picard iteration , and treat the nonlinearities as a parametric value as utilized in @xcite and references therein . as noted in @xcite , the basic mathematical structure of the poroelasticity models",
    "are usually coupled equations for pressure and displacements known as biot type models @xcite .",
    "the pressure equations are a parabolic equation coupled to a time derivative of volumetric strain . while the mechanics equations are are given by quasi - static elasticity equations and",
    "is coupled by gradients of pressure . in this work",
    "however , we focus on the possible nonlinear couplings of the biot model .",
    "there are a myriad of physical and modeling reasons to add nonlinearity to the biot equations , however , we will primarily focus when the permeability field and elasticity tensors depend nonlinearly on pressure and displacements and their gradients .",
    "this is due primarily to us wanting to focus on the nonlinearities effects on our gmsfem , as nonlinearities in lower order derivative will not interfere with the construction of the local multiscale basis functions .",
    "nonlinear poroelastic models of this type have been explored in the literature to incorporate higher order physics considerations .",
    "for example , when the viscosity of the fluid heavily depends on the fluid pressure we may obtain relations of permeability of the form @xmath0 here @xmath1 is the absolute permeability , and @xmath2 is the pressure and spatially dependent viscosity .",
    "this can occur when their are very high pressure gradients @xcite . in the setting of complex geomechanical interactions @xcite used a relationship between permeability and volumetric strain of the form @xmath3 where @xmath4 are determined constants and",
    "@xmath5 is the volumetric strain .",
    "further in @xcite , the porosity @xmath6 also depends linearly on @xmath7 however , this is multiplied throughout generating a nonlinearity . in the context of fractured reservoirs ,",
    "permeability is often computed via the so called `` cubic - law '' through channels and this may be coupled in orientation and magnitude via the displacements in a nonlinear way @xcite . with this gmsfem",
    ", we propose a method to efficiently compute solutions to these nonlinear poroelasticity problems with the heterogeneous multiscale properties .",
    "as noted in the prequel @xcite , there are many very effective multiscale frameworks that have been developed in recent years .",
    "there are rigorous approaches based on homogenization of partial differential equations @xcite .",
    "however , these approaches may have limited computational use . examples of computational approaches include the heterogeneous multiscale method ( hmm ) @xcite , approaches based on the variational multiscale method ( see @xcite ) , where coarse - grid quasi - interpolation operators are used to build an orthogonal splitting into a multiscale space and a fine - scale space @xcite . in this paper",
    ", we will use the generalized multiscale finite element method and its extension to nonlinear poroelasticity problems in the framework of @xcite . specifically , to handle multiscale nonlinear problems , we combine ideas of model reduction , whereby the nonlinearity is replaced locally by a parameter space and offline and online spaces are generated . for a broad presentation of these methods",
    "we refer the reader to @xcite .",
    "the paper is organized similarly to @xcite , as follows . in section 2",
    "we provide the mathematical background of the nonlinear poroelasticity problem .",
    "we will introduce the biot type model and highlight where the heterogeneities primarily occur .",
    "we again note that the nonlinearities in our model are in the permeability and elasticity tensor as these are second order derivative terms . in section 3 , to outline the difficulties in full direct numerical simulation we introduce the fine - scale discretizations using coupled time - stepping schemes and a picard iteration technique for linearization . in section 4 , we present our nonlinear gmsfem algorithm and outline its construction procedure .",
    "finally , numerical implementations are presented in section 5 .",
    "using the gmsfem , we compare the multiscale solution to fine - scale solutions and give error estimates .",
    "we will present two different examples with permeability being linear and nonlinear with respect to pressure .",
    "additionally , we will implement and discuss different snapshot spaces and coarse - grids choices , and its relation to enrichment and the error .",
    "we denote our computational domain @xmath8 to be a bounded lipschitz region .",
    "we consider a general nonlinear poroelastic system where we wish to find a pressure @xmath9 and displacements @xmath10 satisfying    [ eq : main ] @xmath11    with initial condition for pressure @xmath12 we write the boundary of the domain into four sections @xmath13 .",
    "we suppose the following boundary conditions on each portion @xmath14 and @xmath15 here the symmetric strain is written as @xmath16 and we write @xmath17 to mean the double contraction of a @xmath18-tensor with a @xmath19-tensor . as in the linear case ,",
    "the primary sources of the heterogeneities in the physical properties arise from @xmath20 , the elastic tensor , and @xmath21 , the permeability . in this setting , we suppose these heterogenous parameters can depend in @xmath9 and @xmath10 and their gradients in complicated nonlinear ways .",
    "further , we will denote @xmath22 to be the biot modulus , @xmath23 is the fluid viscosity , and @xmath24 is the biot - willis fluid - solid coupling coefficient . here , @xmath25 is a source term representing injection or production processes and @xmath26 is the unit normal to the boundary .",
    "body forces , such as gravity , are neglected .",
    "* remark * : note that one could also add nonlinearities in the coefficients @xmath24 and @xmath22 , however , these correspond to lower order terms with respect to derivatives . therefore , these will not contribute to the local problems in the gmsfem .",
    "hence , we will consider them to be constant throughout .",
    "we recall the setting when these relations become linear . in the case of a linear elastic stress - strain constitutive",
    "relation we have that the stress tensor and symmetric strain gradient may be expressed as @xmath27 where @xmath28 , @xmath29 are lame coefficients , @xmath30 is the identity tensor .",
    "note here this @xmath28 is not to be confused with what is often used as a parameter .",
    "above we have absorbed into the nonlinear permeability coefficient the fluid viscosity @xmath23 , and in the case of linear permeability , we have @xmath31 @xmath1 being absolute permeability .",
    "the nonlinear poroelasticity problem , can be written in operator matrix form : @xmath32 where @xmath33 and @xmath34 and @xmath35 are gradient and divergence operators and @xmath36 .",
    "we will now present fine - scale approximation and nonlinear solution methods for the above system . we will motivate the need for a multiscale method due to the nonlinearity and the heterogeneity of the poroelasticty problem . to approximate the solution to on fine - scale grid",
    "we will utilize a standard finite element method .",
    "the corresponding nonlinear variational form of the continuous problem written as @xmath37 for @xmath38 , @xmath39 where @xmath40^d :   v ( x ) = u_1 ,   x \\in \\gamma_2   \\ } ,   \\quad q   = \\ {   q \\in h^1(\\omega ) :   q(x ) = p_1 ,   x \\in \\gamma_4 \\},\\ ] ] and the test spaces with homogeneous boundary conditions are given by @xmath41^d :   v(x ) = 0 ,   x \\in \\gamma_2   \\ } ,   \\quad \\hat{q } = \\ { q \\in h^1(\\omega ) : q(x ) = 0 ,   x \\in \\gamma_4 \\}.\\ ] ] we define the following nonlinear forms    [ nonlinearforms ] @xmath42    and bilinear and linear forms @xmath43 and @xmath44 here @xmath45 under the integrand denotes the standard inner product . in section [ numerics ] , we will discretize the spaces using a fine - scale standard fem and denote them @xmath46 and @xmath47 , @xmath48 being the fine - grid size .",
    "the fem using these spaces will serve as a reference solution for our gmsfem outlined in section [ gmsfem ] .",
    "* nonlinear solve : * we will first consider the time discretizations of the above system , then will discuss resolving the nonlinearity .",
    "this discretization leads to several possible couplings between time - steps and the two equations of linear poroelasticity @xcite .",
    "however in the nonlinear case we will only consider the fully coupled scheme .",
    "we proceed by introducing for the nonlinear fully coupled time derivative operators and then the picard iteration for the linearization of the nonlinear operators .",
    "the standard fully implicit finite - difference scheme , or coupled scheme , can be used for the time - discretization and is given by    [ coupled ] @xmath49    with @xmath50 , @xmath51 , where @xmath52 , @xmath53 , @xmath54 and @xmath55 .",
    "we will now consider nonlinear solve in space after time discretization by the fully coupled scheme .",
    "one could rewrite as a nonlinear system each time step and use a newton solver , however , for our gmsfem we prefer to use a linearization based on picard iteration .",
    "indeed , we may linearize given @xmath56 from a previous iteration step we write @xmath57 where @xmath58 .",
    "we choose this notation in part to emphasize this may be viewed as a parameter in offline phase of the gmsfem .    fixing the time - step at @xmath59 , and taking @xmath60 , as data from the previous iteration . for @xmath61",
    ", we wish to find @xmath62 such that    [ coupled.linear ] @xmath63    once the desired convergence criteria is reached , we can set the terminal @xmath64 as previous time data .",
    "we then return to the algorithm time - stepping and continue the iterative linearization until the terminal time .",
    "note that this process can also be used in an appropriate nonlinear generalization to a fixed stress splitting @xcite .",
    "we will present the offline and online multiscale basis construction in the fluid or pressure solve then its construction in the mechanics or displacement calculation step in this nonlinearly coupled formulation . similar to the presentation outlined in @xcite , however , we will focus on the effects of the nonlinearities on the method . observing the linearized formulation",
    ", we see that we may consider the nonlinearity as parametric values we are able to successful design a gmsfem for this nonlinear problem . in this way",
    ", we are able to construct an online - offline multiscale basis with respect to this nonlinearity .",
    "we now outline the general procedure of the gmsfem algorithm .",
    "we begin briefly with some standard notation .",
    "the overall fine - scale model equations will be solved on a fine - grid using spaces @xmath46 and @xmath47 , and will be used for our reference solutions .",
    "we now introduce the coarse grid .",
    "let @xmath65 be a standard conforming partition of the computational domain @xmath66 into finite elements . the fine - grid ,",
    "@xmath67 can be taken as a refinement of the coarse - grid .",
    "we refer to this partition as the coarse - grid and assume that each coarse element is partitioned into a connected union of fine grid blocks .",
    "we use @xmath68 , where @xmath69 is the number of coarse nodes , to denote the vertices of the coarse mesh @xmath65 , and define the neighborhood of the node @xmath70 by @xmath71    see figure  [ schematic ] for an illustration of neighborhoods and elements subordinated to the coarse discretization .",
    "we emphasize that the use of @xmath72 is to denote a coarse neighborhood , and we use @xmath73 to denote a coarse element throughout the paper .",
    "for global coupling we use the linearized continuous galerkin ( cg ) formulation to find @xmath74 such that    [ cg_coupling ] @xmath63    where @xmath75 and @xmath76 denote the online spaces .",
    "the online spaces are spanned by multiscale basis functions @xmath77 and @xmath78 for @xmath79 time step and @xmath80-th iteration , each of which is supported in @xmath72 @xmath81 the indexes @xmath82 represent the numbering of these multiscale basis functions for pressure and displacements , respectively . here",
    "the parameter @xmath28 represents the nonlinear dependence as in .",
    "recall that we may take @xmath58 , from the previous time - step and will treat these variables as parametric values on each coarse patch .",
    "however , for simplicity we will suppose that the dependence is only on @xmath83 of this nonlinearity .",
    "* remark * : note , the derivative dependent problems , with nonlinear couplings of @xmath84 , may be handled .",
    "however , due to the oscillation in these quantities , these terms may not be well approximated by constants on the coarse - grid level .",
    "thus , we would need to have a more enriched parameter space than is utilized here .",
    "we now discuss further how we handle the parametrized nonlinearities .",
    "we assume that @xmath10 and @xmath9 are bounded above and below , i.e. @xmath85 $ ] and @xmath86 $ ] , where @xmath87 and @xmath88 are pre - defined constants .",
    "these may be guessed initially based on initial data or a - priori estimates .",
    "the intervals @xmath89 $ ] and @xmath90 $ ] are divided into @xmath69 equal regions : @xmath91 and @xmath92 clearly , if necessary these domains can be partitioned in different number of regions , but for simplicity we suppose they are equal in number . for the parameter @xmath93",
    "we take average values of @xmath94 and @xmath95 in each coarse region @xmath72 . for average of a function",
    "we will use the notation @xmath96 more specifically , we use @xmath93 to represent the dependence of the solution on @xmath97 .",
    "the multiscale basis functions will be computed for a selected number of the parameter values @xmath93 , @xmath98 at the offline stage and we will compute multiscale basis functions for each new value of @xmath97 for each @xmath72 at the online stage .    boadly speaking , the gmsfem algorithm consist of several steps :    * * offline computations : * 1 .",
    "generate the coarse - grid , @xmath65 .",
    "2 .   construct the snapshot space , used to compute an offline space , by solving many local problems on the fine - grid .",
    "3 .   construct a small dimensional offline space by performing dimension reduction in the space of local snapshots . * * online computations : * 1 .   in each time step and nonlinear iteration for current value of @xmath93 in each @xmath72 , we compute multiscale basis functions and construct online space by performing dimension reduction in the offline space .",
    "2 .   use small dimensional online space to find the solution of a coarse - grid problem for any force term and/or boundary condition .",
    "we construct multisclate basis functions for pressure and displacements separately .",
    "we begin by considering the pressure solve , then , the displacement solve .      in the offline computation",
    ", we first construct a snapshot space @xmath99 .",
    "construction of the snapshot space involves solving the local problem for various choices of input parameters and various boundary conditions .",
    "these local spatial fields are used then used construct the offline space and the space consists of fields defined on a fine grid .",
    "there are a few options available when constructing the snapshot space and we will proceed with the two most natural ways .    *",
    "snapshot space 1 : * first , we propose a snapshot space generated by harmonic extensions of @xmath100 . for simplicity",
    ", we will omit the index @xmath101 when there is no ambiguity .",
    "we thus define @xmath102 such that @xmath103 here @xmath104 are defined by @xmath105 , where @xmath106 denotes the fine - grid boundary node on @xmath107 .",
    "this is done for each fixed parameter @xmath108 @xmath109    * snapshot space 2 : * alternatively , we may use local fine - scale space basis functions within a coarse region and construct local snapshots by solving the following eigenvalue problem with natural boundary conditions @xmath110 where @xmath111 @xmath112 are the standard fine - scale basis functions , and for each fixed parameter values @xmath93",
    ", @xmath113 .",
    "let @xmath114 be the number of functions in the snapshot space in the region @xmath115 , and define @xmath116 for each coarse subdomain @xmath115 .",
    "we reorder the snapshot functions using a single index to create the matrix @xmath117,\\ ] ] where @xmath118 denotes the total number of functions to keep in the snapshot construction .    to construct the offline space @xmath119",
    ", we perform a dimension reduction of the space of snapshots by using an auxiliary spectral decomposition .",
    "more precisely , we solve the eigenvalue problem in the space of snapshots : @xmath120 where @xmath121 here @xmath122 is independent of @xmath93 and @xmath123 are prescribed non - negative weights .",
    "the main objective is to use the offline space to accurately construct a set of multiscale basis functions for each @xmath93 in the online stage . at the offline stage",
    "the bilinear forms are chosen to be parameter - independent , such that there is no need to reconstruct the offline space for each @xmath93 .",
    "we then choose the smallest @xmath124 eigenvalues from eq .   and form the corresponding eigenvectors in the space of snapshots by setting @xmath125 , for @xmath126 , where @xmath127 are the coordinates of the vector @xmath128 .",
    "we denote the span of this reduced space as @xmath129 .    at the online stage , for a given parameter value @xmath28 ,",
    "multiscale basis functions are computed based on each local coarse region @xmath72 .",
    "the associated online space @xmath130 is the small dimensional subspace of the offline space .",
    "in particular , we seek a subspace of the offline space that can approximate any element of the offline space in an appropriate sense . in the the online stage",
    "the bilinear forms are chosen to be parameter - dependent and we use following eigenvalue problem @xmath131 where @xmath132 here @xmath133 and @xmath22 are the fine scale matrices corresponding to the stiffness and mass matrices for given @xmath28 and @xmath134.\\ ] ]    finally , we multiply the partition of unity functions @xmath135 by the eigenfunctions in the online space @xmath136 to construct the resulting basis functions @xmath137 where @xmath138 , @xmath139 is the standard linear partition of unity functions and the @xmath140 denotes the number of online eigenvectors that are chosen for each coarse node @xmath101 .",
    "we note that the construction in eq .",
    "yields continuous basis functions due to the multiplication of offline eigenvectors with the initial ( continuous ) partition of unity .",
    "next , we define the online space as @xmath141 using a single index notation , we may write @xmath142 , where @xmath143 denotes the total number of basis functions in the spaces @xmath144 and @xmath145 is number of coarse mesh nodes .",
    "denote the matrix @xmath146^t,\\ ] ] where @xmath147 are used to denote the nodal values of each basis function defined on the fine grid .",
    "for construction of multiscale basis functions for displacements we use similar algorithm that we used for pressure .",
    "we first construct a snapshot space @xmath148 for each parameter @xmath93 .",
    "again , as with pressure we give two possible snapshot space choices .",
    "* snapshot space 1 : * as our first possible snapshot space we propose the harmonic extension using @xmath149 .",
    "we define @xmath150 as the solution to @xmath151 again , @xmath105 , and for each fixed parameter values @xmath93 , @xmath113 .",
    "* snapshot space 2 : * we could also use the method based on solving an eigenvalue problem with natural boundary conditions given by @xmath152 where @xmath153 and , in the case of linear elasticity @xmath154 . in a more complicated relation @xmath155",
    "is related to the lower order operators @xcite .",
    "again , @xmath156 are the standard fine - scale basis functions , and his is done for each fixed parameter values @xmath93 , @xmath113 .",
    "define @xmath157 for each coarse subdomain @xmath115 .",
    "we denote the corresponding matrix of snapshot functions , again with similar notation , to be @xmath158.\\ ] ] where @xmath159 denotes the total number of functions to keep in the snapshot construction .",
    "again , we perform a dimension reduction of the space of snapshots by using an auxiliary spectral decomposition .",
    "we solve the parameter - independent eigenvalue problem in the space of snapshots @xmath160 where @xmath161 where @xmath162 and @xmath69 denote fine scale matrices @xmath163 here , @xmath156 are fine - scale basis functions .",
    "further , we have @xmath164 is independent of @xmath93 and @xmath123 are prescribed non - negative weights .",
    "recall , the main objective is to use the offline space to accurately construct a set of multiscale basis functions for each @xmath93 in the online stage . as before for the fluids flow module , at the offline stage of the mechanics the bilinear forms are chosen to be parameter - independent , such that there is no need to reconstruct the offline space for each @xmath93 .",
    "we then choose the smallest @xmath165 eigenvalues from eq .   and form the corresponding eigenvectors in the space of snapshots by setting @xmath166 , for @xmath167 , where @xmath168 are the coordinates of the vector @xmath169 .",
    "we denote the span of this reduced space as @xmath170 and denote @xmath171.\\ ] ]    at the online stage , we use following parameter - dependent eigenvalue problem @xmath172 where @xmath173    finally , we multiply the linear partition of unity functions @xmath174 by the eigenfunctions in the online space @xmath175 to construct the resulting basis functions @xmath176 where @xmath177 and @xmath178 denotes the number of online eigenvectors that are chosen for each coarse node @xmath101 .",
    "next , we define the online space as @xmath179 using a single index notation , we may write @xmath180 , where @xmath181 denotes the total number of basis functions in the space @xmath182 .    and after construction @xmath76 we denote the matrix @xmath183^t,\\ ] ] where @xmath156 are used to denote the nodal values of each basis function defined on the fine grid .      now that we have constructed the online spaces for both the fluid and mechanics we now can use this parametrized basis at the global level",
    ". indeed , for global coupling we use system of equations to find @xmath74 , where @xmath184 using the matrices @xmath146^t , \\quad \\text{and } \\quad   r_u = \\left [ \\varphi_1 , \\ldots , \\varphi_{n^u_c } \\right]^t,\\ ] ] we may write matrix analogue for the variational for that will be used for calculation of multiscale solution @xmath185 writing in matrix form , using the notation in , in the online basis we have @xmath186 we also note that matrices @xmath187 and @xmath188 may be analogously used in order to project coarse - scale solutions onto the fine - grid @xmath189",
    "in this section , we present numerical examples to demonstrate the performance of the gmsfem for computing the solution of the nonlinear poroelasticity problem in heterogenous domains and complex nonlinear dependence on permeability and elastic properties .",
    "we use fully coupled scheme for approximation by time with picard iteration to linearize the nonlinearity .",
    "we will implement a single complicated geometry with contrasting parameter values . indeed , as noted before",
    ", there are many possible nonlinear relations , but here we take a an exponential pressure relationship with the permeability .",
    "we present the errors with varying number of multiscale basis functions and over time for linear and nonlinear case with parameters .",
    "we proceed as in @xcite , and we take the computational domain @xmath66 as a unit square @xmath190 ^ 2 $ ] , and set the source term @xmath191 in .",
    "we utilize heterogeneous coefficients that have different values in two subdomains .",
    "we denote each region as subdomain 1 and 2 , @xmath192 , respectively .",
    "we use following coefficients : for the biot modulus we take @xmath193 in each respective numbered subdomain @xmath194 . for permeability",
    "we take a linear @xmath73 and nonlinear relation @xmath195 . more specifically , for the linear regime we have @xmath196 for nonlinear case we use a permeability that depends on pressure @xmath9 @xmath197 for fluid - solid coupling constant we have @xmath198 . for the elastic properties we use following coefficients : elastic modulus is given by @xmath199 in each respective subdomain @xmath194 , the poisson s ratio is @xmath200 , and these can be related to the parameters @xmath201 and @xmath202 , for @xmath203 via the relation @xmath204 in each subdomain .",
    "the subdomains for coefficients shown in figure [ fig : koeff ] , where the background media in red is the subdomain 1 , @xmath205 and isolated particles and strips in blue are the subdomain 2 , @xmath206        as we have chosen @xmath207 we must use boundary conditions to force flow and mechanics . in these tests , as in @xcite , we use following boundary conditions : @xmath208 and @xmath209 and finally , @xmath210 here @xmath211 and @xmath212 are left and right boundaries , @xmath213 and @xmath214 are top and bottom boundaries respectively .",
    "we set @xmath215 and @xmath216 to drive the flow , and thus , the mechanics .        in figure",
    "[ fig : domain ] we show the two coarse grids and fine grid .",
    "the first coarse grid consists of 36 nodes and 50 triangle cells , the second coarse grid contains 121 nodes and 200 triangle cells , and the fine mesh consists of 3721 nodes and 7200 triangle cells .",
    "the number of time steps is @xmath217 and the maximal time being set at @xmath218 . as an initial condition for pressure we use @xmath219 . for the nonlinear solve we use picard iteration for linearization and",
    "terminate the iterative loop when @xmath220 , @xmath221 .    the reference solution computed by using a standard fem ( linear basis functions for pressure and displacements ) on the fine grid , picard type linearization , and using a fully coupled time - splitting scheme .",
    "the pressure and the displacement fields on the fine - grid are presented on the left column of figure [ fig : p ] and figure [ fig : u ] .     and @xmath222 ( from top to bottom ) for nonlinear case .",
    "the dimension of the fine - scale solution is 11163 and the dimension of the coarse space is 864 . ]     and @xmath223 for nonlinear case .",
    "the dimension of the fine - scale solution is 11163 and the dimension of the coarse space is 864 . ]",
    "the errors will be measured in relative weighted @xmath224 and relative weighted @xmath225 norm for pressure @xmath226 and for displacements , due to the linearity in our elasticity in this example , we have @xmath227 here @xmath228 and @xmath229 are fine - scale and coarse - scale using gmsfem solutions , respectively for pressure and displacements .    in our examples ,",
    "the nonlinearity resides in the pressure solves .",
    "therefore , we will use the nonlinear parameter dependence approach in section [ pressuresolve ] . for our elasticity basis construction",
    ", we may remain in the linear algorithmic approach to construct the online basis .",
    "in general , for simulation using gmsfem we first generate a snapshot space using first choice ( , snapshot space 1 ) or second choice ( , snapshot space 2 ) , then we use a spectral decomposition to obtain the offline space , and similarly to obtain the online space . for each time step and nonlinear picard iteration",
    "we update the online space for pressure and solve the equation utilizing the previously computed solution @xmath230 . for construction the snapshot space 2 we choose a specified number of eigenfunctions @xmath231 for all @xmath72 .",
    "we select the range of solutions @xmath232 and @xmath233 and divide the domain @xmath234 $ ] into @xmath69 equally spaced subdomains to obtain @xmath235 discrete points @xmath236 .",
    "for simulation we use @xmath237 .",
    "recall , we will use a few multiscale basis functions per each coarse node @xmath238 , and these number of coarse basis defines the problem size ( dimension of online spaces , @xmath75 and @xmath76 ) .",
    "we suppose that in each patch @xmath238 we take the same number of multiscale basis functions for pressure , @xmath239 , for all @xmath238 . similarly for displacements",
    "we take @xmath240 , for all @xmath238 . varying the basis functions in both pressure and displacement multiscale spaces we record the errors at the final time .",
    "we note that the size of online space and the associated solution accuracy will depend on the number of eigenvectors ( @xmath241 and @xmath242 ) that we keep in the online space construction .    we begin first with the purely linear case with @xmath73 given by . in tables",
    "[ tab : c1 - 5-lin ] and [ tab : c1 - 10-lin ] , we present the relative weighted @xmath224 and @xmath225 errors for linear case of the coefficients in geometry figure [ fig : koeff ] using the fully coupled time scheme on two coarse grids . in table [ tab : c1 - 5-lin ] we have a coarse - grid of 36 nodes and in table [ tab : c1 - 10-lin ] we have a refined coarse grid with 121 nodes .",
    "we compare these to a fine - scale solution space with dimension 11163 . in these tables ,",
    "@xmath243 and @xmath244 are number of multiscale basis functions for each neighborhoods , the second column show the dimension of the online space , the next two columns present the relative weighted @xmath224 and @xmath225 errors for pressure and last two columns show the relative weighted @xmath224 and @xmath225 errors for displacements .",
    "we note that as the dimension of the online space increases , because we keep more eigenfunctions @xmath243 , @xmath244 in the space construction .",
    "we note for the less refined coarse - grid with 36 nodes the relative weighted @xmath224 errors decrease from 36.5% to 0.07% for pressure and from 24.3% to 0.5% for displacements and relative weighted @xmath225 errors decrease from 99.0% to 2.7% for pressure and from 37.7% to 3.4% for displacements .",
    "we note for the refined coarse - grid with 121 nodes the relative weighted @xmath224 errors decrease from 14.1% to 0.01% for pressure and from 26.9% to 0.1% for displacements and relative weighted @xmath225 errors decrease from 82.0% to 1.6% for pressure and from 36.1% to 2.5% for displacements .",
    "we note that in this example , refining the coarse - grid is not as advantageous to more local basis functions per grid - block .",
    "indeed , with the less refined coarse - grid of 36 nodes and @xmath245 gives a very good percentage error for a space of dimension 1296 when compared to the more refined coarse - grid of 121 nodes and less eigenvectors @xmath246 with space of dimension 1452 .",
    "@xmath247 & dim(@xmath248 ) & @xmath224 & @xmath225 & @xmath224 & @xmath225 +   + 2 & 360 & 0.365 & 0.990 & 0.243 & 0.377 + 4 & 432 & 0.057 & 0.435 & 0.238 & 0.370 +   + 2 & 648 & 0.365 & 0.990 & 0.108 & 0.207 + 4 & 720 & 0.057 & 0.435 & 0.045 & 0.077 + 8 & 864 & 0.001 & 0.059 & 0.017 & 0.072 +   + 2 & 936 & 0.365 & 0.990 & 0.111 & 0.199 + 4 & 1008 & 0.057 & 0.435 & 0.042 & 0.045 + 8 & 1152 & 0.001 & 0.059 & 0.007 & 0.034 + 12 & 1296 & 0.0007 & 0.027 & 0.005 & 0.034 +     @xmath247 & dim(@xmath248 ) & @xmath224 & @xmath225 & @xmath224 & @xmath225 +   + 2 & 1210 & 0.141 & 0.827 & 0.269 & 0.361 + 4 & 1452 & 0.007 & 0.132 & 0.240 & 0.352 +   + 2 & 2178 & 0.141 & 0.827 & 0.069 & 0.095 + 4 & 2420 & 0.007 & 0.132 & 0.024 & 0.063 + 8 & 1904 & 0.001 & 0.042 & 0.015 & 0.062 +   + 2 & 3148 & 0.141 & 0.827 & 0.059 & 0.076 + 4 & 3388 & 0.007 & 0.132 & 0.011 & 0.027 + 8 & 3872 & 0.001 & 0.042 & 0.003 & 0.025 + 12 & 4356 & 0.0001 & 0.016 &",
    "0.001 & 0.025 +    in a similar setting , we consider the nonlinear case of the coefficient with @xmath195 given by . here",
    "we will explore the different snapshot spaces available for us in the nonlinear algorithm .",
    "again as in the linear case we use two coarse - grids and implement this with a fully coupled time scheme and use picard iterations for the nonlinearity .",
    "we present the results in table [ tab : c1 - 1 ] for snapshot space 1 , the errors are very similar in magnitude when compared to the corresponding linear case . in the left side of table [",
    "tab : c1 - 1 ] we present the errors for 36 nodes in the coarse - grid .",
    "the relative weighted @xmath224 errors decrease from 8.1% to 0.09% for pressure and from 30.4% to 0.5% for displacements and relative weighted @xmath225 errors decrease from 60.9% to 4.7% for pressure and from 38.0% to 3.4% for displacements .",
    "in the right side of table [ tab : c1 - 1 ] we present the errors for 121 nodes in the coarse - grid .",
    "the relative weighted @xmath224 errors decrease from 4.8% to 0.02% for pressure and from 26.4% to 0.1% for displacements and relative weighted @xmath225 errors decrease from 45.9% to 2.7% for pressure and from 35.7% to 2.5% for displacements . for snapshot space 2",
    "we do precisely the same experiment with two coarse - grids .",
    "we present the errors in table [ tab : c1 - 2 ] and again see that the errors are also decrease and have roughly the same behavior . in general , we see that the two snapshot choices in this example do not differ greatly and no clear choice arises . in some cases the snapshot space 1 appears to fair better ,",
    "however , this is not always true .",
    "finally , we note that , for solution of nonlinear problem in each time step , the picard iteration converges after about 3 steps .    to show the stability of the multiscale spaces over time we include time plots .",
    "we include plots over time of the error with respect to number of basis functions used .",
    "to get an idea of the behavior we only present the results for snapshot space 1 for two coarse grids . in figure",
    "[ fig : err-5 - 1 ] and [ fig : err-10 - 1 ] we show errors over time for @xmath249 respectively .",
    "we observe that errors decrease as we increase the dimension of the offline space as expected and the basis appears to be robust with respect to longer times .",
    "@xmath247 & @xmath224 & @xmath225 & @xmath224 & @xmath225 +   + 2 & 0.081 & 0.609 & 0.304 & 0.380 + 4 & 0.019 & 0.242 & 0.254 & 0.371 +   + 2 & 0.082 & 0.607 & 0.091 & 0.104 + 4 & 0.021 & 0.241 & 0.023 & 0.074 + 8 & 0.001 & 0.087 & 0.016 & 0.072 +   + 2 & 0.082 & 0.607 & 0.085 & 0.077 + 4 & 0.021 & 0.241 & 0.013 & 0.037 + 8 & 0.001 & 0.087 & 0.007 & 0.034 + 12 & 0.0009 & 0.047 & 0.005 & 0.034 +    @xmath250     @xmath247 & @xmath224 & @xmath225 & @xmath224 & @xmath225 +   + 2 & 0.048 & 0.459 & 0.264 & 0.357 + 4 & 0.008 & 0.132 & 0.235 & 0.351 +   + 2 & 0.048 & 0.457 & 0.063 & 0.079 + 4 & 0.006 & 0.130 & 0.022 & 0.063 + 8 & 0.001 & 0.053 & 0.015 & 0.062 +   + 2 & 0.048 & 0.457 & 0.052 & 0.051 + 4 & 0.006 & 0.130 & 0.009 & 0.026 + 8 & 0.001 &",
    "0.053 & 0.002 & 0.025 + 12 & 0.0002 & 0.027 & 0.001 & 0.025 +     are on the top and @xmath225 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for nonlinear problem on coarse mesh with 36 nodes.,title=\"fig : \" ]   are on the top and @xmath225 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for nonlinear problem on coarse mesh with 36 nodes.,title=\"fig : \" ] +   are on the top and @xmath225 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for nonlinear problem on coarse mesh with 36 nodes.,title=\"fig : \" ]   are on the top and @xmath225 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for nonlinear problem on coarse mesh with 36 nodes.,title=\"fig : \" ]     are on the top and @xmath225 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for nonlinear problem on coarse mesh with 121 nodes.,title=\"fig : \" ]   are on the top and @xmath225 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for nonlinear problem on coarse mesh with 121 nodes.,title=\"fig : \" ] +   are on the top and @xmath225 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for nonlinear problem on coarse mesh with 121 nodes.,title=\"fig : \" ]   are on the top and @xmath225 are on the bottom .",
    "errors for pressure are on the left and displacements are on the right for nonlinear problem on coarse mesh with 121 nodes.,title=\"fig : \" ]     @xmath247 & @xmath224 & @xmath225 & @xmath224 & @xmath225 +   + 2 & 0.063 & 0.551 & 0.302 & 0.380 + 4 & 0.015 & 0.256 & 0.267 & 0.372 +   + 2 & 0.064 & 0.549 & 0.088 & 0.101 + 4 & 0.013 & 0.255 & 0.036 & 0.078 + 8 & 0.010 & 0.112 & 0.024 & 0.074 +   + 2 & 0.064 & 0.549 & 0.082 & 0.072 + 4 & 0.013 & 0.255 & 0.028 & 0.040 + 8 & 0.010 & 0.112 & 0.016 & 0.036 + 12 & 0.006 & 0.080 & 0.010 &",
    "0.035 +    @xmath250     @xmath247 & @xmath224 & @xmath225 & @xmath224 & @xmath225 +   + 2 & 0.042 & 0.426 & 0.258 & 0.355 + 4 & 0.008 & 0.145 & 0.235 & 0.351 +   + 2 & 0.042 & 0.424 & 0.057 & 0.075 + 4 & 0.006 & 0.143 & 0.023 & 0.063 + 8 & 0.001 & 0.078 & 0.015 & 0.062 +   + 2 & 0.042 & 0.424 & 0.045 & 0.046 + 4 & 0.006 & 0.143 & 0.010 & 0.026 + 8 & 0.001 & 0.078 & 0.002 & 0.025 + 12 & 0.0001 & 0.039 & 0.001 & 0.025 +",
    "modeling and simulation of a nonlinear poroelastic media is challenging due the heterogeneities and the nonlinear dependence on the coefficients .",
    "thus , in this paper we developed a generalized multiscale finite element method for a nonlinear poroelastic media .",
    "we gave a general nonlinear poroelasticity model in the framework of the biot equations , where we had possibly complex nonlinear dependence on permeability fields and elasticity tensors .",
    "as the nonlinear gmsfems treat nonlinearities as a parameter , we linearize the equations in a time - staggered picard iteration formulation .",
    "we then outlined the construction of the multiscale spaces offline and online spaces .",
    "the algorithm is then implemented on a single geometry with two different cases of permeability fields .",
    "the first being the standard linear case and a second nonlinear relation depending on pressure where a parameter spaces are considered with offline and online spaces .",
    "we presented the errors relative to the fine scale solution with varying multiscale basis functions and coarse - grid refinements .",
    "finally , we showed the robustness of the modes for longer time simulations ."
  ],
  "abstract_text": [
    "<S> in this paper , we consider the numerical solution of some nonlinear poroelasticity problems that are of biot type and develop a general algorithm for solving nonlinear coupled systems . </S>",
    "<S> we discuss the difficulties associated with flow and mechanics in heterogenous media with nonlinear coupling . </S>",
    "<S> the central issue being how to handle the nonlinearities and the multiscale scale nature of the media . to compute an efficient numerical solution </S>",
    "<S> we develop and implement a generalized multiscale finite element method ( gmsfem ) that solves nonlinear problems on a coarse grid by constructing local multiscale basis functions and treating part of the nonlinearity locally as a parametric value . </S>",
    "<S> after linearization with a picard iteration , the procedure begins with construction of multiscale bases for both displacement and pressure in each coarse block by treating the staggered nonlinearity as a parametric value . using a snapshot space and local spectral problems , we construct an offline basis of reduced dimension . from here </S>",
    "<S> an online , parametric dependent , space is constructed . </S>",
    "<S> finally , after multiplying by a multiscale partitions of unity , the multiscale basis is constructed and the coarse grid problem then can be solved for arbitrary forcing and boundary conditions . </S>",
    "<S> we implement this algorithm on a geometry with a linear and nonlinear pressure dependent permeability field and compute error between the multiscale solution with the fine - scale solutions . </S>"
  ]
}
{
  "article_text": [
    "* probabilistic automata . *",
    "the class of probabilistic automata for finite words was introduced in the seminal work of rabin  @xcite as an extension of classical finite automata .",
    "probabilistic automata on finite words have been extensively studied ( see the book  @xcite on probabilistic automata and the survey of  @xcite ) .",
    "probabilistic automata on infinite words have been studied recently in the context of verification and analysis of reactive systems  @xcite .",
    "we consider probabilistic automata on infinite words with acceptance defined by safety , reachability , bchi , cobchi , and parity conditions , as they can express all commonly used specifications ( like safety , liveness , fairness ) of verification .",
    "* qualitative decision problems . *",
    "we consider three _ qualitative _ decision problems for probabilistic automata on infinite words  @xcite : given a probabilistic automaton with an acceptance condition , ( i )  the _ positive _ decision problem asks whether there is a word that is accepted with positive probability ( probability @xmath2 ) ; ( ii )  the _ almost _ decision problem asks whether there is a word that is accepted almost - surely ( with probability  1 ) ; and ( iii )  the _ limit _ decision problem asks whether for every @xmath0 there is a word that is accepted with probability at least @xmath1 .",
    "the qualitative decision problems for probabilistic automata are the generalization of the emptiness and universality problems for deterministic automata",
    ".    * decidability and undecidability results . *",
    "the decision problems for probabilistic automata on finite words have been extensively studied  @xcite , and the main results establish the undecidability of the quantitative version of the decision problems ( where the thresholds are a rational @xmath3 , rather than @xmath4 and @xmath5 ) .",
    "the undecidability results for the qualitative decision problems for probabilistic automata on infinite words are quite recent .",
    "the results of  @xcite show that the positive ( resp .",
    "almost ) decision problem is undecidable for probabilistic automata with bchi ( resp .",
    "cobchi ) acceptance condition , and as a corollary both the positive and almost decision problems are undecidable for parity acceptance conditions ( as both bchi and cobchi conditions are special cases of parity conditions ) . the results of  @xcite also show that the positive ( resp .",
    "almost ) decision problem is decidable for probabilistic automata with cobchi ( resp .",
    "bchi ) acceptance condition , and these results have been extended to the more general case of stochastic games with imperfect information in  @xcite and  @xcite .",
    "the positive and almost problems are decidable for safety and reachability conditions , and also for probabilistic automata over finite words .",
    "for all the decidable almost and positive problems for probabilistic automata pspace - complete bounds were established in  @xcite .",
    "it was shown in  @xcite that the limit decision problem is undecidable even for probabilistic finite automata , and the proof can be easily adapted to show that the limit decision problem is undecidable for reachability , bchi , cobchi and parity conditions ( see  @xcite for details ) .",
    "* decidable subclasses . *",
    "the root cause of the undecidability results is that for arbitrary probabilistic automata and arbitrary input words the resulting probabilistic process is complicated . as a consequence",
    "several researchers have focused on identifying subclasses of probabilistic automata where the qualitative decision problems are decidable .",
    "the work of  @xcite presents a subclass of probabilistic automata , namely hierarchical probabilistic automata ( hpa ) , and show that the positive and almost problems are decidable for bchi and cobchi conditions on hpas .",
    "the work of  @xcite presents a subclass of probabilistic automata , namely @xmath6-acyclic automata , and show that the limit reachability problem is decidable for this class of automata over finite words .",
    "the two subclasses hpa and @xmath6-acyclic automata are incomparable in expressive power .    * our contributions . * in this work we unify and generalize several decidability results for probabilistic automata over infinite words , and identify a robust subclass of probabilistic automata for which all the qualitative decision problems are decidable for parity acceptance conditions . for the first time",
    ", we study the problem of restricting the structure of input words , as compared to the probabilistic automata , and show that if the input words are restricted to _",
    "lasso shape _ words , then the positive and almost problems are decidable for all probabilistic automata with parity acceptance conditions .",
    "the details of our contributions are as follows .",
    "we first present a very general result that would be the basic foundation of the decidability results .",
    "we introduce a notion of _ simple _ probabilistic process : the non - homogeneous markov chain induced on the state space of a probabilistic automaton by an infinite word is simple if the tail @xmath7-field of the process has a particular structure .",
    "the structure of the tail @xmath7-field is derived from blackwell - freedman - cohn - sonin _ decomposition - separation theorem _",
    "@xcite on finite non - homogeneous markov chains which generalizes the classical results on homogeneous markov chains .",
    "we then show that if we restrict the input words of a probabilistic automaton to those which induce simple processes , then the positive and almost decision problems are decidable for parity conditions .",
    "we establish that these problems are pspace - complete .",
    "we study for the first time the effect of restricting the structure of input words for probabilistic automata , rather than restricting the structure of probabilistic automata .",
    "we show that for all ultimately periodic ( regular or lasso shape ) words and for all probabilistic automata , the probabilistic process induced is a simple one . hence as a corollary of our first result",
    ", we obtain that if we restrict to lasso shape words , then the positive and almost decision problems are decidable ( pspace - complete ) for all probabilistic automata with parity conditions .",
    "however , the limit decision problem for the reachability condition is still undecidable for lasso shape words , as well as for the bchi and cobchi conditions .",
    "we then introduce the class of _ simple probabilistic automata _",
    "( for short simple automata ) : a probabilistic automaton is simple if every input infinite words induce simple processes on its state space .",
    "this semantic definition of simple automata uses the decomposition - separation theorem .",
    "we present a _",
    "structural ( or syntactic ) _ subclass of the class of simple automata , called _ structurally simple automata _",
    ", which relies on the structure of the _ support graph _ of the automata ( the support graph is obtained via subset constructions of the automata ) .",
    "we show that the class of structurally simple automata generalizes both the models of hpa and @xmath6-acyclic automata .",
    "since hpa generalizes deterministic automata , it follows that structurally simple automata with parity conditions strictly generalizes @xmath8-regular languages .",
    "we show that for structurally simple automata with parity conditions , the positive and almost problems are pspace - complete , and the limit problem can be decided in expspace .",
    "thus our results both unify and generalize two different results for decidability of subclasses of probabilistic automata .",
    "moreover , we show that structurally simple automata are _ robust _ , i.e. , closed under union and intersection .",
    "thus we are able to identify a robust subclass of probabilistic automata for which all the qualitative decision problems are decidable for parity conditions . from our structural characterization",
    "it also follows that given a probabilistic automaton , it can be decided in expspace whether the automaton is structurally simple .    in this paper",
    "we use deep results from probability theory to establish general results about the decidability of problems on probabilistic automata .",
    "we present a sufficient structural condition to ensure semantic notions ( of an induced probabilistic process being simple ) coming from probability theory in the context of probabilistic automata .",
    "the proofs omitted due to lack of space are given in appendix .",
    "* distributions . * given a finite set @xmath9 , we denote by @xmath10 the set of probability distributions on @xmath9 . given @xmath11 ,",
    "we denote by @xmath12 the support of @xmath13 , i.e. @xmath14 .    * words and prefixes .",
    "* let @xmath15 be a finite _ alphabet _ of letters .",
    "@xmath16 is a finite or infinite sequence of letters from @xmath15 , i.e. , @xmath17 or @xmath18 .",
    "given a word @xmath19 and @xmath20 , we define @xmath21 , and we denote by @xmath22=a_1, ... ,a_i$ ] the prefix of length @xmath23 of @xmath16 . given @xmath24 , we denote by @xmath25=a_i, ... ,a_j$ ] the subword of @xmath16 from index @xmath23 to @xmath26 .",
    "an infinite word @xmath27 is a _ lasso shape word _ if there exist two finite words @xmath28 and @xmath29 in @xmath30 such that @xmath31 .",
    "a _ finite probabilistic table _ ( fpt ) is a tuple @xmath32 where @xmath9 is a finite set of states , @xmath15 is a finite alphabet , @xmath13 is an initial distribution on @xmath9 , and the @xmath33 , for @xmath34 , are markov matrices of size @xmath35 , i.e. , for all @xmath36 we have @xmath37 and for all @xmath38 we have @xmath39 .",
    "* distribution generated by words . * for a letter @xmath40 , let @xmath41 denote the transition probability from @xmath42 to @xmath43 given the input letter @xmath44 . given @xmath45 , @xmath46 and @xmath47 , let @xmath48 be the probability , starting from a state sampled accordingly to @xmath49 and reading the input word @xmath50 , to go to state @xmath42 .",
    "formally , given @xmath51 , let @xmath52",
    ". then @xmath53 .",
    "we often write @xmath54 instead of @xmath55 , for simplicity : @xmath54 is the set of states reachable with positive probability when starting from distribution @xmath49 and reading @xmath50 . as well , given @xmath56 , we write @xmath57 for the the set of states reachable with positive probability when starting from a state in @xmath58 sampled uniformly at random , and reading @xmath50 .    * homogeneous and non - homogeneous markov chains . * a markov chain is a sequence of random variables @xmath59 , taking values in a ( finite ) set @xmath9 , with the markov property : @xmath60 . given @xmath61 , the matrix @xmath62 of size @xmath35 such that for all @xmath63 we have @xmath64 is the _ transition matrix at time @xmath65 _ of the chain .",
    "the markov chain is _ homogeneous _ if @xmath62 does not depend on @xmath65 . in the general case ,",
    "we call the chain _ non - homogeneous_.    * induced markov chains . *",
    "given a fpt with state space @xmath9 , given @xmath66 and @xmath67 such that @xmath68 , we define the markov chain @xmath69 induced by @xmath70 as follows : the initial distribution , i.e. the distribution of @xmath71 , is uniform on @xmath72 ; given @xmath20 , @xmath73 is distributed according to @xmath74 . intuitively , @xmath69 is the markov chain induced on the fpt when reading the word @xmath75 .",
    "* probability space and @xmath7-field . * a word @xmath27 induces a probability space @xmath76 : @xmath77 is the set of _ runs _ , @xmath78 is the @xmath7-field generated by cones of the type @xmath79=\\rho\\rbrace$ ] where @xmath80 , and @xmath81 is the associated probability distribution on @xmath82 .",
    "see @xcite for the standard results on this topic .",
    "we write @xmath83 for the _ non - homogeneous _ markov chain induced on @xmath9 by @xmath16 , and given @xmath61 let @xmath84 be the distribution of @xmath85 on @xmath9 : @xmath86\\ ] ] the @xmath7-field @xmath78 is also the smallest @xmath7-field on @xmath82 with respect to which all the @xmath87 , are measurable . for all @xmath61 ,",
    "let @xmath88 be the smallest @xmath7-field on @xmath82 with respect to which all the @xmath89 , are measurable .",
    "we define @xmath90 , called the _ tail @xmath7-field of @xmath91_. intuitively , an event @xmath92 is in @xmath93 if changing a finite number of states of a run @xmath94 does not affect the occurrence of the run @xmath94 in @xmath92 .",
    "* atomic events . * given a probability space @xmath95 and @xmath96 , we say that @xmath92 is _ @xmath78-atomic _ if @xmath97 , and for all @xmath98 such that @xmath99 we have either @xmath100 or @xmath101 .",
    "in this paper we will use atomic events in relation to the tail @xmath7-field of markov chains .    * acceptance conditions . *",
    "given a fpt , let @xmath102 be a set of accepting ( or target ) states . given a run @xmath94 , we denote by @xmath103 the set of states that appear infinitely often in @xmath94 .",
    "we consider the following acceptance conditions .",
    "_ safety condition .",
    "_ the safety condition @xmath104 defines the set of paths that only visit states in @xmath105 ; i.e. , @xmath106 .",
    "_ reachability condition .",
    "_ the reachability condition @xmath107 defines the set of paths that visit states in @xmath105 at least once ; i.e. , @xmath108 .",
    "_ bchi condition . _ the bchi condition @xmath109 defines the set of paths that visit states in @xmath105 infinitely often ; i.e. , @xmath110 .",
    "_ cobchi condition .",
    "_ the cobchi condition @xmath111 defines the set of paths that visit states outside @xmath105 finitely often ; i.e. , @xmath112 .    _ parity condition .",
    "_ the parity condition consists of a priority function @xmath113 and defines the set of paths such that the minimum priority visited infinitely often is even , i.e. , @xmath114 .",
    "bchi and cobchi conditions are special cases of parity conditions with two priorities ( priority set @xmath115 for bchi and @xmath116 for cobchi )",
    ".    * probabilistic automata . * a _ probabilistic automaton _",
    "( pa ) is a tuple @xmath117 where @xmath118 is a fpt and @xmath119 is an acceptance condition",
    ".    * decision problems . *",
    "let @xmath120 be a pa with acceptance condition @xmath121 .",
    "we consider the following decision problems .    _",
    "almost problem : _ whether there exists @xmath27 such that @xmath122 ?    _ positive problem : _ whether there exists @xmath27 such that @xmath123 ?    _ limit problem : _ whether for all @xmath0 , there exists @xmath27 such that @xmath124 ?",
    "proposition [ p - summ known ] summarizes the known results from  @xcite .",
    "[ p - summ known ] given a pa with an acceptance condition @xmath119 , the following assertions hold :    the almost problem is decidable ( pspace - complete ) for @xmath125 safety , reachability , bchi , and undecidable for @xmath125 co - bchi and parity .    the positive problem is decidable ( pspace - complete ) for @xmath125 safety , reachability , co - bchi , and undecidable for @xmath125 bchi and parity .",
    "the limit problem is decidable ( pspace - complete ) for @xmath125 safety , and undecidable for @xmath125 reachability , bchi , co - bchi , and parity .",
    "in this section we first recall the decomposition - separation theorem , then use it to decompose the tail @xmath7-field of stochastic processes into atomic events .",
    "we then introduce the notion of simple processes , which are stochastic processes where the atomic events obtained using the decomposition - separation theorem are _ non - communicating_.      the structure of the tail @xmath7-field of a general non - homogeneous markov chain has been deeply studied by mathematicians .",
    "blackwell and freedman , in @xcite , presented a generalization of the classical _ decomposition theorem _ for homogeneous markov chains , in the context of non - homogeneous markov chains with finite state spaces .",
    "the work of blackwell and freedman has been deepened by cohn @xcite and sonin @xcite , who gave a more complete picture .",
    "we present the results of @xcite in the framework of _ jet decompositions _ presented in @xcite .    * jets and partition into jets . *",
    "a _ jet _ is a sequence @xmath126 , where each @xmath127 .",
    "a tuple of jets @xmath128 is called a _ partition of @xmath129 into jets _ if for every @xmath61 , we have that @xmath130 is a partition of @xmath9 . the _ decomposition - separation theorem _ , in short _ ds - theorem _ , proved by cohn  @xcite and sonin  @xcite using results of @xcite , is given in theorem  [ t - decomp ] .",
    "we first define the notion of _ mixing _ property of jets .",
    "* mixing property of jets . * given a fpt @xmath120 , a jet @xmath131 is _ mixing _ for a word @xmath16 if : given @xmath132 the process induced on @xmath9 by @xmath16 , given @xmath63 , and a sequence of states @xmath133 such that for all @xmath134 we have @xmath135 , given @xmath136 , if @xmath137>0 $ ] and @xmath138>0 $ ] , then we have : @xmath139}{\\mathbb{p}^w[x^w_n = q_n\\ |\\ x^w_n\\in j^k_n\\wedge x^w_m = q']}=1\\ ] ]    intuitively , a jet is mixing if the probability distribution of a state of the process , conditioned to the fact that this state belongs to the jet , is ultimately independent of the initial state .",
    "this extends the notion of mixing process on homogeneous ergodic markov chains , on which the distribution of a state of the process after a number of steps is close to the stationary distribution , irrespective of the initial state .",
    "[ t - decomp ] given a fpt @xmath140 , for all @xmath27 there exists @xmath141 and a partition @xmath128 of @xmath129 into jets such that :    with probability one , after a finite number of steps , a run @xmath142 enters into one of the jets @xmath143 , @xmath144 and stays there forever .    for all @xmath145",
    "the jet @xmath143 is mixing .",
    "theorem  [ t - decomp ] holds even if @xmath15 is infinite : it is valid for any non - homogeneous markov chain on a finite state space . in this paper",
    "we will focus on finite alphabets only .",
    "* remark . *",
    "we note that for all @xmath146 , either @xmath147 or there exists @xmath148 such that for @xmath65 large enough @xmath149 . indeed , if @xmath150 but there exists a subsequence of @xmath151 which goes to zero , then a non zero probability of runs enter @xmath152 and leave it afterward infinitely often , which contradicts the first point of theorem  [ t - decomp ] .",
    "thus , we can always assume that there exists @xmath153 such that for all @xmath154 , for @xmath65 large enough , we have @xmath155 .",
    "if this is not the case , we just merge the jets @xmath156 such that @xmath147 with @xmath157 , which does not invalidate the properties of the jet decomposition stated by theorem [ t - decomp ] .    for the following of the section , we fix @xmath27 and a partition @xmath158 of @xmath129 as in the ds theorem .",
    "given @xmath154 and @xmath61 , let : @xmath159 we now present a result directly from our formulation of the ds theorem ( the result can also be proved using more general results of @xcite ) .",
    "[ p - tau atomics ] for all @xmath154 , the following assertions hold : ( 1 )  @xmath160 , i.e. , @xmath161 is a tail @xmath7-field event ; ( 2 )  @xmath162 is @xmath93-atomic ; i.e. , @xmath161 is an atomic tail event ; and ( 3 )  @xmath163 .",
    "the fact that the @xmath164 are atomic sets of @xmath93 means that all the runs which belong to the same @xmath164 will satisfy the same _ tail _ properties .",
    "intuitively , a tail does not depend on finite prefixes .",
    "several important classes of properties are tail properties , as presented in @xcite : in particular any parity condition is a tail property .",
    "let @xmath165 be a process induced on @xmath9 by a word @xmath27 , and let @xmath166 be its probability distribution on @xmath9 at time @xmath65 .",
    "we say that @xmath167 is _ simple _ if there exist @xmath153 and two sequences @xmath168 and @xmath169 of subsets of @xmath9 such that :    @xmath170 , @xmath171 is a partition of @xmath9    @xmath172    @xmath173    the second point of the following proposition shows that the tail @xmath7-field of a simple process can be decomposed as a set of `` non - communicating '' jets . intuitively , a jet is non - communicating if there exists a bound @xmath174 such that after time @xmath175 , if a run belongs to the jet , it will stay in it for ever with probability one .",
    "the following proposition is a reformulation of the notion of simple process in the framework of jets decomposition .",
    "[ p - separation simple jets ] let @xmath27 , and suppose that the process @xmath167 induced on @xmath9 is simple .",
    "then there exists a decomposition of @xmath129 into jets , @xmath158 , and @xmath174 , which satisfy the following properties :    for all @xmath176 , all @xmath154 and all @xmath177 , we have @xmath178 .    for all @xmath154 and all @xmath179",
    "we have @xmath180 .",
    "@xmath181 .",
    "each jet @xmath182 is mixing .",
    "in this section we will present decidable algorithms ( with optimal complexity ) for the decision problems with the restriction of simple processes , and for lasso shape words .",
    "we first define the _ simple decision problems _ that impose the simple process restriction . given an acceptance condition @xmath119 , we consider the following problems :    1 .",
    "_ simple almost ( resp .",
    "positive ) problems : _ does there exist @xmath27 such that @xmath183 is simple and @xmath122 ( resp .",
    "@xmath123 ) ? 2 .",
    "_ simple limit problem : _ for all @xmath0 , is there @xmath27 such that @xmath183 is simple and @xmath124 ?",
    "proposition  [ prop : dec - undec - simple ] shows that the decidability and undecidability results of proposition [ p - summ known ] concerning the positive , almost , and limit safety and reachability problems still hold when we consider their `` simple process '' version . propositions [ p - dec simple almost ] and [ p - dec simple positive ] are more interesting as they show that the almost and positive parity problem become decidable when restricted to simple processes .",
    "finally , proposition [ p - undec limit buchi ] shows that the  limit ",
    "decision problems remain undecidable even when restricted to simple processes .",
    "[ prop : dec - undec - simple ] the simple almost ( resp .",
    "positive ) safety and reachability problems are pspace - complete , as well as the simple limit safety problem .",
    "the simple limit reachability problem is undecidable .",
    "[ p - dec simple almost ] the simple almost parity problem is pspace - complete    _ ( sketch ) . _",
    "the proof relies on the following equivalent formulation .    *",
    "equivalent formulation .",
    "* in the following , @xmath184 is a parity function on @xmath9 , and @xmath185 .",
    "we prove that : * ( 1 ) * there exists @xmath27 such that the induced process is simple and @xmath122 if and only if * ( 2 ) * there exists @xmath66 and @xmath186 such that @xmath187 , @xmath188 , and the runs on the markov chain induced by @xmath189 satisfy @xmath119 with probability one .",
    "we show in the appendix that the properties can be verified in pspace and also present a pspace lower bound .",
    "we show the equivalence * * ( 2)**@xmath190*(1)*. the way * * ( 2)**@xmath191*(1 ) * is direct , since we will show in section [ s - simple - words ] that the process induced by a lasso shape word on any automaton is always simple .",
    "we prove that * * ( 1)**@xmath191*(2)*. let @xmath192 be such that the induced process is simple and @xmath122 . using proposition [ p - separation simple jets ] ,",
    "let @xmath193 be the decomposition of @xmath129 into jets and let @xmath194 be such that :    @xmath195 , @xmath196 , @xmath197 : @xmath178 .",
    "@xmath196 , for all @xmath198 , we have @xmath180",
    ".    @xmath181    each jet @xmath182 is mixing .    without loss on generality ,",
    "since @xmath9 is finite , taking @xmath199 large enough , we can assume that the vector of sets of states @xmath200 appears infinitely often in the sequence @xmath201 .",
    "as well , without loss on generality , we can assume that for all @xmath202 and all @xmath154 , all the states in @xmath152 appear infinitely often among the sets @xmath203 , for @xmath204 .",
    "let @xmath154 . given @xmath46 ,",
    "let @xmath205 clearly , for all @xmath46 , @xmath206 .",
    "since @xmath9 is finite , there exists @xmath207 such that @xmath208 . by proposition [ p - tau atomics ]",
    ", @xmath162 is atomic , hence @xmath209 . since the runs of the process satisfy the parity condition with probability one",
    ", @xmath210 must be even .",
    "moreover , for all @xmath202 and all @xmath177 , we must have @xmath211 .",
    "indeed , such a @xmath42 appears an infinite number of times in the sequence @xmath152 , by hypothesis , and always with probability at least @xmath212 . since @xmath209",
    ", there exists @xmath213 such that for all @xmath214 , there exists @xmath215 such that @xmath216)(q_i)>0 $ ] .",
    "we define @xmath217 , and @xmath218 such that @xmath219 taking @xmath220 $ ] and @xmath221 $ ] completes the proof . indeed , when starting from the initial distribution , after reading @xmath28 , we arrive by construction in one of the sets @xmath222 , with @xmath223 . starting from this state @xmath42 ,",
    "if the word @xmath29 is taken as input , we go to set @xmath224 with probability one , visit @xmath225 with positive probability , and do not visit any state with probability smaller that @xmath210 .",
    "this implies that when starting from @xmath42 and reading @xmath226 , we visit @xmath225 with probability one , hence the result .",
    "[ p - dec simple positive ] the simple positive parity problem is pspace - complete .",
    "a corollary of the proofs of propositions [ p - dec simple almost ] and [ p - dec simple positive ] is that if the simple almost ( resp .",
    "positive ) parity problem is satisfied by a word , then it is in fact satisfied also by a lasso shape word .",
    "[ p - undec limit buchi ] the simple limit bchi and cobchi problems are undecidable .    from the propositions of this section we obtain the following theorem . in the theorem below the pspace - completeness of the limit safety problem",
    "follows as for safety conditions the limit and almost problem coincides .",
    "the simple almost and positive problems are pspace - complete for parity conditions .",
    "the simple limit problem is pspace - complete for safety conditions , and the simple limit problem is undecidable for reachability , bchi , cobchi and parity conditions .      in this sub - section",
    "we consider the decision problems where , instead of restricting the probabilistic automata , we restrict the set of input words to lasso shape words .",
    "first , the processes induced by such words are simple :    [ p - ls - ind - simple ] let @xmath120 be a pa , let @xmath16 be a lasso shape word , and let @xmath11 .",
    "then the process induced by @xmath16 and @xmath13 on @xmath9 is simple .",
    "let @xmath227 be a finite state machine .",
    "then for any @xmath27 generated by @xmath227 , the process induced by @xmath16 and @xmath13 on @xmath9 is simple .    the results of this section along with the results of the previous sub - section",
    "give us the following theorem .",
    "[ thrm : lasso ] given a probabilistic automaton with parity acceptance condition , the question whether there is lasso shape word that is accepted with probability  1 ( or positive probability ) is pspace - complete .",
    "in this section we introduce the class of structurally simple automata , which is a structurally defined subclass of probabilistic automata on which every words induce a simple process .",
    "we show that the problems associated to this class of automata are decidable ( the almost and positive problems are pspace - complete and limit problem is in expspace ) .",
    "we then show that this subclass of simple automata is closed under union and intersection , and finally show that structurally simple automata strictly generalizes hpa and @xmath6-acyclic automata .",
    "a probabilistic automaton is _ simple _ if for all @xmath228 , the process @xmath167 induced on its state space by @xmath16 is simple .    in @xcite , given @xmath229 and @xmath34 , the authors define the set @xmath230 as the support of @xmath231 , and in the case where @xmath232 , the set @xmath233 as the set of states which are recurrent for the homogeneous markov chain induced on @xmath234 by the transition matrix @xmath33 .",
    "next , they define the _ support graph _ @xmath235 of the automaton @xmath120 as the graph whose nodes are the subsets of @xmath9 , and such that , given @xmath236 , the couple @xmath237 is an edge in @xmath235 if there exists @xmath34 such that @xmath238 or @xmath232 and @xmath239 .",
    "they present the class of @xmath6-acyclic automata as the class of probabilistic automata whose support graph is acyclic .",
    "[ d - acyclic pa ] a probabilistic automaton @xmath120 is @xmath6-acyclic if @xmath235 is acyclic .",
    "we now present a natural generalization of this approach . given @xmath229 and a finite word @xmath47 , let @xmath240 . if @xmath241 , we define @xmath242 as the set of states which are recurrent for the homogeneous markov chain induced on @xmath234 by @xmath50 ( i.e. by the transition matrix @xmath243 ) .",
    "@xmath244    2    1 .",
    "consider the following probabilistic automaton @xmath120 , with state space @xmath245 .",
    "we have @xmath246 , and @xmath247 .",
    "however , @xmath248 .    given a probabilistic automaton @xmath120 , an _ execution tree _ is given by an initial distribution @xmath11 , or a set of states @xmath249 , and a finite or infinite word @xmath50 .",
    "we use the term execution tree informally for the set of execution runs on @xmath120 which can be probabilistically generated when the system is initiated in one of the states of @xmath12 ( or @xmath250 ) , and when the word @xmath50 is taken as input .",
    "@xmath6-reduction _ is a tuple @xmath251 where @xmath252 and @xmath47 are such that : ( i )  @xmath253 , ( ii )  @xmath254 , ( iii )  @xmath255 , ( iv )  @xmath256 , and ( v )  @xmath257 .    for simplicity",
    ", we may use the term @xmath6-reduction for a couple @xmath258 where @xmath249 and @xmath47 are such that @xmath259 and @xmath260 .",
    "an execution tree @xmath261 is said to be _ chain recurrent _ for a probabilistic automaton @xmath120 if it does not contain a @xmath6-reduction .",
    "that is , for all @xmath186 such that @xmath262 is a prefix of @xmath50 , @xmath263 is not a @xmath6-reduction .",
    "we write @xmath264 for the set of @xmath47 such that @xmath261 is a chain recurrent execution tree for @xmath120 .",
    "the following _ key lemma _ shows that for any probabilistic automaton @xmath120 there exists a constant @xmath265 such that the probability to reach any state on a chain recurrent execution tree is either @xmath4 or greater than @xmath266 .",
    "given a probabilistic automaton @xmath120 , let @xmath267 be the smallest non zero probability which appears among the @xmath268 , where @xmath63 and @xmath34 .",
    "[ l - borne mots rec ] let @xmath120 be a probabilistic automaton . for all @xmath46 ,",
    "all @xmath269 and all @xmath270 we have @xmath271 where @xmath272 .",
    "an automaton @xmath120 is _ structurally simple _ if for all @xmath47 and @xmath273 , if @xmath274 is minimal among the @xmath275 such that @xmath276 , we have that @xmath277 is chain recurrent .",
    "here @xmath278 intuitively denotes an iterated @xmath6-reachability with the word @xmath50 ( details in section [ s - ext - supp ] of the appendix ) .",
    "we now prove that all the structurally simple automata are simple .",
    "we show that on a structurally simple automaton , given @xmath27 , the associated execution tree can be decomposed as a sequence of a bounded number of chain recurrent execution trees . the key lemma [ l - borne mots rec ]",
    "is then used to bound the probabilities which appear .",
    "[ l - ult pos impl simple ] let @xmath279 be the process generated by a word @xmath280 on a probabilistic automaton .",
    "given @xmath281 recall that @xmath282=a_1, ... ,a_n$ ] .",
    "suppose that there exists @xmath283 and @xmath284 such that for all @xmath176 and all @xmath285))$ ] we have @xmath286)(q)>\\gamma$ ] .",
    "then the process is simple .",
    "we introduce the notion of _ sequence of recurrent execution trees _ in order to represent a process which may not be chain recurrent , but which can be decomposed as a sequence of a finite number of chain recurrent execution trees .",
    "the _ length _ of the sequence measures the number of steps which do not belong to a chain recurrent subsequence , and will be useful to bound the probabilities which appear .",
    "lemma  [ l - exec trees impl simple ] uses the key lemma [ l - borne mots rec ] .",
    "a _ sequence of recurrent execution trees _ is a finite sequence @xmath287 such that :    @xmath288 , and for @xmath289 $ ] we have @xmath290    for all @xmath291 $ ] we have @xmath292    all the execution trees @xmath293 are chain recurrent    the _ length _ of the sequence is defined as @xmath294 .",
    "given an execution tree @xmath295 , a subsequence of recurrent execution trees of @xmath295 is a sequence of recurrent execution trees @xmath287 such that @xmath296 and @xmath297 .",
    "[ l - exec trees impl simple ] let @xmath120 be a probabilistic automaton .",
    "suppose that there exists @xmath298 such that for all execution trees @xmath261 , there exists a subsequence of recurrent execution trees of length at most @xmath299 .",
    "then @xmath120 is simple .",
    "[ l - s simple impl exec trees ] suppose that @xmath120 is structurally simple .",
    "then for all execution trees @xmath295 , there exists a subsequence of recurrent execution trees of length at most @xmath300 .",
    "the following follows from lemma [ l - exec trees impl simple ] and [ l - s simple impl exec trees ] .    [ t - struct smple is simple ] all structurally simple automata are simple .      for the following of this sub - section ,",
    "@xmath120 is a structurally simple automaton with state space @xmath9 and initial distribution @xmath13 .",
    "we consider the complexity of the decision problems related to infinite words on structurlly simple pas .",
    "the upper bound on the complexity in theorem  [ p : decib_pb_on_simple ] follows from the results of section [ s - decidable pb ] , since the process induced on a simple pa by a word @xmath301 is always simple .",
    "the lower bound follows from the fact that the pa used for the lower bound of section [ s - decidable pb ] is structurally simple .",
    "[ p : decib_pb_on_simple ] the almost and positive problems are pspace - complete for parity conditions on structurally simple pas .    in proposition 6 of @xcite ,",
    "the authors show that if @xmath302 is reachable from a state @xmath303 in the support graph of @xmath120 , then it is limit reachable from @xmath303 in @xmath120 .",
    "a generalization of this result to the extended support graph gives half of proposition [ p - simple - equiv - reach ] ( details with complete proof in appendix ) .",
    "theorem [ t - limit - reach - pspace ] follows from proposition [ p - simple - equiv - reach ] and lemma [ l - algo - expaspace ] ( details in appendix [ s - ext - supp ] for the definition of the extended support graph ) .",
    "theorem  [ prop : simple - dec ] shows that the limit parity problem is also decidable for simple automata .",
    "[ p - simple - equiv - reach ] let @xmath120 be a structurally simple automaton , and let @xmath302 .",
    "then * ( 1 ) * @xmath105 is reachable from @xmath12 in the extended support graph of @xmath120 iff * ( 2 ) * it is limit reachable from @xmath13 in @xmath120 .",
    "[ t - limit - reach - pspace ] the limit problem is in expspace for reachability conditions on structurally simple pas .    [ prop : simple - dec ] the limit problem is in expspace for parity conditions on structurally simple pas .",
    "the following theorem establishes the decidability of the problem that given a probabilistic automaton whether the automaton is structurally simple .",
    "[ t - decid - ssimple ] we can decide in expspace whether a given probabilistic automaton is structurally simple or not .",
    "given @xmath304 and @xmath305 two structurally simple automata on the same alphabet @xmath15 , the construction of the cartesian product automaton @xmath306 is standard .",
    "we detail this construction in appendix , along with the proof of the following proposition .",
    "[ p - product simple ] let @xmath307 and @xmath308 be two structurally simple automata .",
    "then @xmath309 is structurally simple .",
    "we prove that the classes of languages recognized by structurally simple automata under various semantics ( positive parity , almost parity ) are robust .",
    "this property relies on the fact that one can construct the intersection or the union of two parity ( non - probabilistic ) automata using only product constructions and change in the semantics ( going from parity to streett or rabin , and back to parity ; see  @xcite for details of rabin and streett conditions and the translations ) . by proposition [ p - product simple ] ,",
    "such transformations keep the automata simple .",
    "[ t - class - robust ] the class of languages recognized by structurally simple automata under positive ( resp . almost ) semantics and parity condition is closed under union and intersection .      in this section",
    "we show that both @xmath6-acyclic automata ( recall definition [ d - acyclic pa ] ) and hierarchical probabilistic automata are strict subclasses of simple automata .",
    "[ p - extends_acycl ] the class of structurally simple automata strictly subsumes the class of @xmath6-acyclic automata .    another restriction of probabilistic automata which has been considered is the model of _ hierarchical pas _ , presented first in @xcite .",
    "intuitively , a hierarchical pa is a probabilistic automaton on which a _ rank function _ must increase on every runs .",
    "this condition imposes that the induced processes are ultimately deterministic with probability one .",
    "given @xmath310 , a pa @xmath311 over an alphabet @xmath15 is said to be a _",
    "@xmath312-level hierarchical pa _ ( @xmath312-hpa ) if there is a function @xmath313 such that the following holds :    given @xmath314 , let @xmath315 .",
    "for every @xmath46 and @xmath34 , if @xmath316 then @xmath317 and @xmath318 .",
    "[ p - extends_hierch ] the class of structurally simple automata strictly subsumes the class of hierarchical pas .",
    "it follows that our decidability results for structurally simple pas both unifies and generalizes the decidability results previously known for @xmath6-acyclic ( for limit reachability ) and hierarchical pa ( for almost and positive bchi ) .",
    "in this work we have used a very general result from stochastic processes , namely the decomposition - separation theorem , to identify simple structure of tail @xmath7-fields , and used them to define simple processes on probabilistic automata .",
    "we showed that under the restriction of simple processes the almost and positive decision problems are decidable for all parity conditions .",
    "we then characterized structurally a subclass of the class of simple automata on which every process is simple .",
    "we showed that this class is decidable , robust , and that it generalizes the previous known subclasses of probabilistic automata for which the decision problems were decidable .",
    "our techniques also show that for lasso shape words the almost and positive decision problems are decidable for all probabilistic automata .",
    "we believe that our techniques will be useful in future research for other decidability results related to probabilistic automata and more general probabilistic models ( such as partially observable markov decision processes and partial - observation stochastic games ) .",
    "10    c.  baier , n.  bertrand , and m.  grer . .",
    "in _ fossacs _ , pages 287301 .",
    "springer , 2008 .    c.  baier and m.  groer . .",
    "in _ lics _ , pages 137146 , 2005 .",
    "n.  bertrand , b.  genest , and h.  gimbert . .",
    "in _ lics _ , pages 319328 , 2009 .",
    "d.  blackwell and d.  freedman . .",
    ", 35(3):12911295 , 1964 .",
    "r.  g. bukharaev .",
    "probabilistic automata .",
    ", 13:359386 , 1980 .",
    "r.  chadha , a.  sistla , and m.  viswanathan . .",
    "in _ concur _ , pages 229243 .",
    "springer , 2009 .",
    "r.  chadha , a.p .",
    "sistla , , and m.  viswanathan . on the expressiveness and complexity of randomization in finite state monitors .",
    ", 56:144 , 2009 .",
    "k  chatterjee and thomas  a. henzinger . . , 2010",
    "h.  cohn . .",
    ", 12(2):209233 , 1989 .",
    "m.  de  rougemont and m.  tracol . .",
    "in _ lics _ , pages 299308 , 2009 .",
    "h.  gimbert and y.  oualhadj . . ,",
    "pages 527538 , 2010 .",
    "v.  gripon and o.  serre . .",
    "in _ icalp _ , pages 200211 , 2009 .",
    "kemeny , j.l .",
    "snell , and a.w .",
    "springer , 1976 .",
    "d.  kozen . .",
    "in _ focs _ , pages 254266 , 1977 .",
    "a.  paz . .",
    "academic press , inc .",
    "orlando , fl , usa , 1971 .",
    "probabilistic automata .",
    ", 6:230245 , 1963 .",
    "i.  sonin . .",
    ", 30:337346 , 1996 .",
    "w.  thomas .",
    "languages , automata , and logic . in g.",
    "rozenberg and a.  salomaa , editors , _ handbook of formal languages _ ,",
    "volume 3 , beyond words , chapter  7 , pages 389455 .",
    "springer , 1997 .",
    "in _ focs _ , pages 327338 , 1985 .",
    "* details of proposition [ p - tau atomics ] . *    _ _ ( of proposition  [ p - tau atomics]).__we present the proof of all three parts below .",
    "* assertion  1 .",
    "* let @xmath154 .",
    "we prove that @xmath164 belongs to @xmath93 .",
    "we first note that for all @xmath319 and @xmath320 , by definition of @xmath321 , we have @xmath322 .",
    "next , we note that @xmath323 is an increasing sequence of sets of runs , and that the first point of theorem [ t - decomp ] implies @xmath324 . for all @xmath319 , we have @xmath325 is a @xmath7-field , hence the limit of an increasing sequences of sets in @xmath325 also belong to @xmath325 .",
    "we get that for all @xmath319 , we have @xmath326 , hence the result .",
    "* assertion  2 .",
    "* we prove that @xmath164 is atomic by using proposition 2.1 . of @xcite , which states the following result :    for any set @xmath92 in @xmath93 , there exists a sequence @xmath327 of subsets of @xmath9 such that , @xmath81-almost surely , we have @xmath328 .    here , `` @xmath328 almost surely '' means that the @xmath81-measure of the set of states on which the characteristic functions of the sets @xmath329 and @xmath92 goes to zero as @xmath65 goes to infinity . for sake of completeness , we prove this fact using the martingale convergence theorem , as in @xcite ( see for instance @xcite for a presentation of the martingale convergence theorem and the levy s law ) .",
    "given @xmath61 , let @xmath330 be the @xmath7-field generated by @xmath331 .",
    "since @xmath92 belongs to @xmath332 , the levy s law implies that , @xmath333 almost surely , @xmath334 , where @xmath335 is the characteristic function of @xmath92 . since @xmath336 is markovian , we know that for all @xmath65 we have @xmath337 .",
    "let @xmath3 , and given @xmath61 let @xmath338 .",
    "then , @xmath333 almost surely , we have @xmath339 , which proves the preliminary result .    now , let @xmath340 . by hypothesis , @xmath341>0 $ ] .",
    "suppose by contradiction that",
    "@xmath342 < \\mathbb{p}^{w}(\\tau^i_\\infty)$ ] .",
    "let @xmath343 .",
    "we have @xmath344 , hence there exist @xmath345 two sequences of sets such that @xmath346 almost surely and @xmath347 almost surely .",
    "let @xmath175 be large enough , and let @xmath348 be such that : @xmath349>1-\\frac{1}{4\\cdot|q|^2};\\ ] ] and @xmath350>1-\\frac{1}{4\\cdot|q|^2}.\\ ] ] we prove that this contradicts the second point of theorem [ t - decomp ] : first , by the pigeon hole principle , there exists a sequence @xmath351 of states in @xmath352 such that @xmath353>\\dfrac{1}{2\\cdot|q|}.\\ ] ] moreover , by the second point of theorem [ t - decomp ] we know that @xmath354}{\\mathbb{p}[x^w_n = q_n\\ |\\ x^w_n\\in j^k_n\\wedge x^w_m = q']}=1\\ ] ] thus , for @xmath65 large enough , @xmath355>\\dfrac{1}{4\\cdot|q|}$ ] .",
    "hence , for @xmath65 large enough , @xmath356>\\dfrac{1}{4\\cdot|q|^2}$ ] .",
    "this is a contradiction .    * assertion  3 .",
    "* the fact that , @xmath163 , is a consequence of the first point of theorem [ t - decomp ] : with probability one , after a finite number of steps , a run belongs to one of the @xmath156 and never leaves it .    * details of proposition [ p - separation simple jets ] .",
    "* we prove proposition [ p - separation simple jets ] .",
    "let @xmath357 be a decomposition of @xmath129 into jets , as in theorem [ t - decomp ] .",
    "let @xmath153 be the threshold given by the definition of a simple process , for the process @xmath167 .",
    "for all @xmath154 and @xmath61 , let @xmath358 for all @xmath61 , let @xmath359 , and let @xmath360 for @xmath154 .",
    "we claim that the decomposition of @xmath129 into jets @xmath361 satisfies the conditions of the proposition .    the first point of the proposition follows from the definition of the @xmath362 .",
    "the third point follows from the fact that the process is simple : the probability of the set of states whose measure is less than @xmath212 goes to zero .",
    "we prove now the second point .",
    "suppose that there exists no @xmath174 such that the property is satisfied for the jet decomposition @xmath58 .",
    "then , there exists @xmath154 such that for all @xmath174 , there exist @xmath179 such that @xmath363 .",
    "we write @xmath364 . since @xmath9 is finite , there",
    "exist @xmath365 in @xmath366 and @xmath63 such that for an infinite number of @xmath61 we have @xmath367 , and @xmath368 .",
    "since for @xmath65 large enough we have @xmath369 for all @xmath370 , this implies that the probability of the set of runs which move from jet @xmath156 to jet @xmath371 infinitely often is at least @xmath372 , where @xmath373 is the least non zero probability which appears among the transition probabilities given by the @xmath33 , for @xmath34 .",
    "this implies that the probability of the set of runs which stay inside one of the @xmath182 for ever after a finite number of steps can not be equal to one .",
    "this contradicts the definition of the decomposition @xmath357 .    for the fourth point ,",
    "the fact that the jets are mixing follows directly from the theorem [ t - decomp ] , and the fact that a run does not leave @xmath374 once it has entered it after time @xmath175 .      * details of proposition [ prop : dec - undec - simple ] . * we prove proposition [ prop : dec - undec - simple ] .    by @xcite and @xcite , the almost ( resp .",
    "positive ) safety and reachability problems are decidable for the general class of probabilistic automata , as well as the limit safety problem .",
    "the results of @xcite and @xcite show that if one of the problems is satisfiable , it is satisfiable by a lasso shape word , and hence the simple version of the problem is satisfiable ( by the results of our section [ s - simple - words ] ) . as a consequence , we can use this result to get the decidability of the problems when we restrict to simple processes .",
    "the pspace - completeness follows from the results of @xcite .",
    "the undecidability of the limit reachability problem comes from the results of @xcite and @xcite , which show that it is undecidable for the general class of probabilistic automata , and from the following fact : given a pa with state space @xmath9 , accepting states @xmath302 and @xmath3750;1[$ ] , if there exists @xmath27 such that @xmath376>1-\\epsilon$ ] , then there exists @xmath377 such that @xmath378>1 - 2\\cdot\\epsilon$ ] and the process induced by @xmath379 is simple . for this",
    "we just have to consider any lasso shape word @xmath31 whose prefix word @xmath28 satisfies the @xmath380 reachability condition . in section [ s - simple - words ] , we see that the process induced by a lasso - shape word on an automaton is always simple , which concludes the proof .    * details of proposition [ p - dec simple almost ] .",
    "*    the proof is in three parts : first we present an equivalent formulation of the problem .",
    "then we show that the equivalent formulation gives a problem which we can solve in pspace .",
    "finally we give the pspace lower bound .",
    "* equivalent formulation .",
    "* in the following , @xmath184 is a parity function on @xmath9 , and @xmath185 .",
    "we prove that : * ( 1 ) * there exists @xmath27 such that the induced process is simple and @xmath122 if and only if * ( 2 ) * there exists @xmath66 and @xmath186 such that @xmath187 , @xmath188 , and the runs on the markov chain induced by @xmath189 satisfy @xmath119 with probability one .",
    "we then show that the properties can be verified in pspace and also present a pspace lower bound .",
    "we show the equivalence * * ( 2)**@xmath190*(1)*. the way * * ( 2)**@xmath191*(1 ) * is direct , since we will show in section [ s - simple - words ] that the process induced by a lasso shape word on any automaton is always simple .",
    "we prove that * * ( 1)**@xmath191*(2)*. let @xmath192 be such that the induced process is simple and @xmath122 .",
    "using proposition [ p - separation simple jets ] , let @xmath193 be the decomposition of @xmath129 into jets and let @xmath194 be such that :    @xmath195 , @xmath196 , @xmath197 : @xmath178 .",
    "@xmath196 , for all @xmath198 , we have @xmath180",
    ".    @xmath181    each jet @xmath182 is mixing .    without loss on generality ,",
    "since @xmath9 is finite , taking @xmath199 large enough , we can assume that the vector of sets of states @xmath200 appears infinitely often in the sequence @xmath201 .",
    "as well , without loss on generality , we can assume that for all @xmath202 and all @xmath154 , all the states in @xmath152 appear infinitely often among the sets @xmath203 , for @xmath204 .",
    "let @xmath154 .",
    "given @xmath46 , let @xmath205 clearly , for all @xmath46 , @xmath206 .",
    "since @xmath9 is finite , there exists @xmath207 such that @xmath208 . by proposition [ p - tau atomics ]",
    ", @xmath162 is atomic , hence @xmath209 . since the runs of the process satisfy the parity condition with probability one",
    ", @xmath210 must be even .",
    "moreover , for all @xmath202 and all @xmath177 , we must have @xmath211 .",
    "indeed , such a @xmath42 appears an infinite number of times in the sequence @xmath152 , by hypothesis , and always with probability at least @xmath212 .",
    "since @xmath209 , there exists @xmath213 such that for all @xmath214 , there exists @xmath215 such that @xmath216)(q_i)>0 $ ] .",
    "we define @xmath217 , and @xmath218 such that @xmath219 taking @xmath220 $ ] and @xmath221 $ ] completes the proof .",
    "indeed , when starting from the initial distribution , after reading @xmath28 , we arrive by construction in one of the sets @xmath222 , with @xmath223 . starting from this state @xmath42 , if the word @xmath29 is taken as input , we go to set @xmath224 with probability one , visit @xmath225 with positive probability , and do not visit any state with probability smaller that @xmath210 .",
    "this implies that when starting from @xmath42 and reading @xmath226 , we visit @xmath225 with probability one , hence the result .",
    "now , we argue the pspace upper and lower bounds .",
    "* pspace upper bound .",
    "* first , we show that we can verify the second property in npspace , hence in pspace .",
    "the proof is in two steps . in a first step ,",
    "we show that we can decide in npspace whether , given @xmath66 , there exists @xmath381 such that @xmath187 . for this notice that , given @xmath66 , if there exists @xmath381 such that @xmath187 , then there exists @xmath382 such that @xmath383 and @xmath384 .",
    "thus , we can restrict the search to words @xmath28 of length at most @xmath385 . by guessing the letters @xmath386 of @xmath28 one by one , and by keeping in memory the set",
    "@xmath387 at each step , we can check at each step whether @xmath388 , and thus we can decide whether there exists such a @xmath28 in npspace .    in a second step , we show that , given @xmath66 , we can decide in npspace whether there exists @xmath389 such that the runs on the periodic non - homogeneous markov chain induced by @xmath189 satisfy @xmath119 with probability one . for this , we refine the previous argument .",
    "notice that this is equivalent to find @xmath390 and @xmath252 such that :    @xmath29 has length at most @xmath300    @xmath188    @xmath391 partition @xmath72    @xmath250 is the set of recurrent states for the homogeneous markov chain induced by @xmath29 on @xmath72    @xmath392 is the set of transient states for the homogeneous markov chain induced by @xmath29 on @xmath72    for all @xmath393 , for all the finite runs @xmath394 generated with positive probability when initiated on @xmath42 and when reading @xmath29 , the minimal value of the @xmath395 is even .",
    "this can be checked in npspace .",
    "indeed , we can guess @xmath391 , and the letters of @xmath29 one by one , and at each step keep in memory the following sets :    the set of states visited at time @xmath23 , i.e. @xmath396    for all @xmath397 and all @xmath398 , the minimal @xmath399 value of the paths visited between @xmath42 and @xmath43 .",
    "notice that this set has size at most @xmath35 .    for all @xmath400 and all @xmath401 , a boolean value @xmath402 which is equal to one",
    "if there exists a path between @xmath42 and @xmath43 between the first step and step @xmath23 , and which is null if not .    at the end , we just have to check that @xmath403 , that the minimal @xmath399-values of all the paths issued from @xmath250 is even , that the set of states in @xmath250 are recurrent for the chain , and that the states in @xmath392 are transient .",
    "this can be done easily since we can recover the graph of the markov chain on @xmath72 from the values given by @xmath404 .",
    "* pspace lower bound . *",
    "we prove now that the simple almost bchi problem is pspace - hard .",
    "for this , we reduce the problem of checking the emptiness of a finite intersection of regular languages , which is known to be pspace complete by @xcite , to the _ simple almost bchi problem _ , which is a particular case of the simple almost parity problem .",
    "the size of the input of problem [ p - inter reg lang ] is the sum of the number of states of the automata .",
    "[ p - inter reg lang]@xmath244 + input : @xmath405 a family of regular deterministic automata ( on finite words ) on the same finite alphabet @xmath15 .",
    "+ question : do we have @xmath406 ?    let @xmath405 be a family of regular automata on the same finite alphabet @xmath15 , with respective state spaces @xmath407 and transition functions @xmath408 ( where @xmath409 if there exist a transition from @xmath410 to @xmath411 with label @xmath34 in @xmath412 ) .",
    "we build a probabilistic automaton @xmath413 such that the simple almost @xmath109 problem is satisfied on @xmath120 iff @xmath414 .",
    "let @xmath415 be a new letter , not in @xmath15 , and let @xmath416 .",
    "@xmath9 is the union of the state spaces of the @xmath412 , plus two extra states @xmath410 and @xmath417 .",
    "that is @xmath418 , where the @xmath419 are disjoint copies of the @xmath407 .",
    "the state @xmath417 is a sink : for all @xmath420 , @xmath421 .    if @xmath422 is the copy of a non accepting state @xmath423 of @xmath412 , we allow in @xmath120 the same transitions from @xmath422 as in @xmath412 for @xmath423 : if @xmath34 , let @xmath424 iff @xmath425 is the copy of a state @xmath426 such that @xmath427",
    ". moreover we add a transition from @xmath423 with label @xmath415 : @xmath428 .",
    "if @xmath422 is the copy of an accepting state @xmath423 of @xmath429 $ ] , the transitions from @xmath422 in @xmath120 are the same as in @xmath412 , plus an extra transition @xmath430 .    from state @xmath410 in @xmath120 , with uniform probability on",
    "@xmath431 $ ] , when reading @xmath415 , the system goes to one of the copies of an initial state of the @xmath412 s .    for the transitions which have not been precised , for instance",
    "if @xmath34 is read in state @xmath410 , the system goes with probability one to the sink @xmath417 .",
    "the initial distribution @xmath13 is the dirac distribution on @xmath410 .",
    "@xmath432    given @xmath433 , the input word @xmath434 satisfies clearly the simple almost @xmath109 problem since a run visits @xmath410 after each occurrence of @xmath435 ( the generated process is simple since we see in section [ s - simple - words ] that any process generated on a probabilistic automaton by a lasso shape word is simple ) .",
    "conversely , suppose that there exists @xmath436 such that the induced process is simple and satisfies almost surely the @xmath109 condition .    since the only transition from @xmath410 which does not goes to the sink has label @xmath415 , the word @xmath50 must start with letter @xmath415 .",
    "since with probability one the runs induced by @xmath50 visit infinitely often @xmath410 , the letter @xmath415 must appear infinitely often in @xmath50 .",
    "let @xmath437 where @xmath438 is non empty and does not contain the letter @xmath415 . after reading @xmath439 ,",
    "since the process can not be in the sink @xmath417 with positive probability , it has to be on @xmath410 with probability one .",
    "this implies that @xmath440 , hence @xmath414 .",
    "this concludes the proof of the pspace completeness of our problem .",
    "we give an example of the last reduction .",
    "consider the following regular automata @xmath307 and @xmath308 , and the associated probabilistic automaton @xmath120 .",
    "( 50,30)(20,0 ) ( a)(55,0)@xmath5 ( b)(30,0)@xmath441 ( a)@xmath44 ( a , b)@xmath442 ( b)@xmath442 ( b , a)@xmath44    ( c)(25,20)@xmath443 ( d)(45,20)@xmath444 ( e)(65,20)@xmath445 ( c)@xmath442 ( c , d)@xmath44 ( d)@xmath44 ( d , e)@xmath442 ( e)@xmath446    ( 140,50)(20,-10 )    ( a)(60,0)@xmath5 ( b)(30,0)@xmath441 ( a)@xmath44 ( a , b)@xmath442 ( b)@xmath442 ( b , a)@xmath44    ( c)(30,30)@xmath443 ( d)(60,30)@xmath444 ( e)(80,30)@xmath445 ( c)@xmath442 ( c , d)@xmath44 ( d)@xmath44 ( d , e)@xmath442 ( e)@xmath446    ( i)(30,15)@xmath410 ( f)(80,15)@xmath417    ( i , b)@xmath447 ( i , c)@xmath447 ( a , i)@xmath415 ( d , i)@xmath415    ( b , f)@xmath415 ( c , f)@xmath415 ( e , f)@xmath415    ( f)@xmath448    for instance , the word @xmath449 belongs to @xmath450 . we get that on @xmath120 , the word @xmath451 satisfies the simple almost @xmath452 problem .",
    "this completes the details of the pspace upper and lower bound .    * details of proposition [ p - dec simple positive ] .",
    "* we prove that the simple positive parity problem is pspace - complete .    as for the proof of proposition [ p - dec simple almost ] ,",
    "the proof is in three parts : first we present an equivalent formulation of the problem .",
    "then we show that the equivalent formulation gives a problem which we can solve in pspace .",
    "finally we give the pspace lower bound .",
    "we present only the first part of the proof in details , since the second and third parts are analogous to the proof of proposition [ p - dec simple almost ] .    as before , let @xmath185 where @xmath184 is a parity function .",
    "we follow a method analogous to the one for the simple almost parity problem : we prove that : * ( 1 ) * there exists @xmath27 such that the induced process is simple and @xmath123 iff * ( 2 ) * there exists @xmath66 and @xmath186 such that @xmath453 , and @xmath188 , and the runs on the markov chain induced by @xmath189 satisfy @xmath119 with probability one . that is , we reach @xmath72 with positive probability , and once we read @xmath29 from a state in @xmath72 we satisfy the condition almost surely .    the way * * ( 2)**@xmath191*(1 ) * of the equivalence is direct .",
    "we prove that conversely , * * ( 1)**@xmath191*(2)*. suppose now that there exists such a @xmath192 .",
    "the induced processed is simple , so let @xmath193 be as given by proposition [ p - separation simple jets ] .",
    "as before , without loss on generality , since @xmath9 is finite , we can also assume that the vector of sets @xmath454 appears infinitely often in the sequence @xmath455 .",
    "moreover , we also assume that for all @xmath202 , for all @xmath456 , all the states in @xmath457 appears in a infinite number of the sets @xmath458 .",
    "let @xmath154 .",
    "as before , an ultimate property is either satisfied or unsatisfied with probability one by the runs @xmath142 such that @xmath459 . thus , we can define @xmath207 as the state with minimal value for @xmath399 among the states which are visited infinitely by runs in @xmath161 with probability one .",
    "since the runs of the process satisfy the parity condition with positive probability , there exists @xmath154 such that @xmath210 is even .",
    "moreover , for all @xmath202 and all @xmath460 , as in the previous case , we must have @xmath211 .",
    "finally , there exists @xmath213 such that for all @xmath214 , there exists @xmath215 such that @xmath461)(q_i)>0 $ ] .",
    "we define @xmath462 such that @xmath463 taking @xmath464 $ ] and @xmath465 $ ] concludes the proof .",
    "the pspace upper and lower bound proofs are analogous to the proof of proposition [ p - dec simple almost ] .    * details of proposition [ p - undec limit buchi ] .",
    "* we prove that the simple limit bchi and cobchi problems are undecidable .",
    "this is a direct consequence of the fact that the simple limit reachability problem is undecidable .",
    "the reduction from an instance of the simple limit reachability problem is direct : we only delete all outgoing transitions from the accepting states in @xmath105 , and transform them into self loops for all label @xmath34 .",
    "we get a probabilistic automaton on which the simple limit bchi and cobchi problems are satisfied iff the simple limit reachability problem is satisfied .    * details of proposition [ p - ls - ind - simple ] .",
    "* we prove proposition [ p - ls - ind - simple ] .",
    "we just have to show that for any @xmath11 and @xmath47 , the process induced by @xmath75 and @xmath13 on @xmath9 is simple .",
    "let @xmath69 be the non - homogeneous markov chain induced on @xmath9 by @xmath13 and @xmath75 .",
    "then for all @xmath466 , the chain @xmath467 is homogeneous .",
    "the result follows from the classical decomposition theorem of the state space of an homogeneous markov chain into periodic components of recursive classes , and transient states .    * details of theorem [ thrm : lasso ] . * we prove theorem [ thrm : lasso ] .    by the results of section [ s - decidable pb ] , if the _",
    "simple _ almost or positive parity problem is satisfied , then it is satisfied by a lasso shape word . along with proposition [ p - ls - ind - simple ] , this implies that the simple almost ( resp .",
    "positive ) parity problem is equivalent to the question whether there is lasso shape word that is accepted with probability  1 ( resp . with positive probability ) . since the simple almost parity problem and the positive parity problem are both pspace - complete , the theorem follows .        * details of lemma [ l - borne mots rec ] .",
    "* we prove the key lemma [ l - borne mots rec ] .",
    "given @xmath468 and @xmath47 , let    @xmath469    the following remark will be useful : given @xmath51 , given @xmath468 and @xmath470 , let @xmath471 .",
    "then we have :    for all @xmath470 , @xmath472    for all @xmath473 , if @xmath474 , then @xmath475    given @xmath473 , let @xmath476 be the number of integers @xmath477 $ ] such that @xmath478 .",
    "then , for all @xmath473 , @xmath479    the only non trivial point is the last one .",
    "it follows from the fact that for all @xmath47 and @xmath63 , if @xmath480 , then by definition of @xmath373 we have @xmath481 .    by contradiction , suppose that there exists @xmath269 and @xmath468 such that @xmath482 and    @xmath483    we show that then we can write @xmath484 where @xmath485 are such that @xmath486 can be partitioned into two subsets @xmath250 and @xmath392 such that @xmath487 is a @xmath6-reduction .",
    "this contradicts the definition of @xmath488 .",
    "let @xmath489 . given @xmath490 , let :    @xmath491    @xmath492    using the third point of the previous remark , since @xmath493",
    ", there exists a least @xmath312 integers @xmath23 in @xmath494 such that @xmath495 , where @xmath312 satisfies @xmath496 .",
    "thus , @xmath497 . let @xmath498 be the @xmath300 largest integers in @xmath499 such that @xmath495 .    by a simple cardinality argument , there exist @xmath500 in @xmath501 such that @xmath502 and @xmath503",
    "let @xmath504 , @xmath505 and @xmath506 .",
    "then we are in the following situation : + @xmath244 + that is , @xmath486 can be partitionned into two subsets @xmath507 and @xmath508 such that @xmath509 , @xmath510 , and @xmath511 .",
    "this implies that there exists @xmath512 such that @xmath513 is a @xmath6-reduction .",
    "since @xmath250 , @xmath514 is a partition of @xmath486 , we get that the execution tree @xmath515 contains a @xmath6-reduction .",
    "this is a contradiction since @xmath269 .      in this sub - section ,",
    "we introduce the necessary preliminary concepts before the formal definition of _ structurally simple probabilistic automata_. these concepts can be listed as :    * a notion of _ linked graphs _ , and how to associate a _ linked graph _ to a word and an automaton .",
    "this is a technical way to represent transitions induced on a probabilistic automaton by an input word . *",
    "a notion of @xmath278 reachability , which generalizes the notion of @xmath6-reachability of @xcite . *",
    "a notion of _ extended support graph _ of a probabilistic automaton , which generalizes the notion of _ support graph _ of @xcite .",
    "we start with the notion of _ linked graphs_. an example is given after the two following definitions to give more intuition . in the following of the sub - section , we call bipartite graph on @xmath9 a subset of @xmath516 .    given @xmath281 ,",
    "a _ linked graph _ of length @xmath65 on @xmath9 is a sequence @xmath517 of @xmath65 bipartite graphs : for all @xmath518 , the bipartite @xmath519 is a set of couples of states of @xmath9 , i.e. @xmath520 , such that for all @xmath521 we have @xmath522 , where : @xmath523 the set @xmath524 is called the _ origin _ of @xmath525 , and the set @xmath526 is called the _ destination _ of @xmath525 .    given a linked graph @xmath517 , the _ compaction _ of @xmath525 , written @xmath527 , is the graph @xmath528 where @xmath529 and @xmath530 , and such that for all @xmath531 we have @xmath532 if @xmath533 , and there exists a sequence of edges @xmath534 such that @xmath535 and @xmath536 .",
    "given an edge - oriented graph @xmath537 , a _ terminal component _ is a set of states @xmath538 such that given any @xmath539 , there exists a path between @xmath410 and @xmath411 in @xmath250 .",
    "if @xmath540 , we define @xmath541 as the set of @xmath542 which belong to a terminal component of @xmath527 .",
    "given @xmath543 , we define @xmath544 as the set of @xmath545 which are reachable from @xmath410 in @xmath527 .",
    "let @xmath281 , let @xmath120 be a probabilistic automaton , and let @xmath546 .",
    "given @xmath249 , we define inductively the linked graph @xmath547 induced by @xmath50 and @xmath250 on @xmath120 as follows :    * @xmath548 . * for all @xmath549 , @xmath550 .",
    "[ e - graph - lg ] consider the following automaton :    let @xmath551 .",
    "the state space of @xmath120 is @xmath552 , and the linked graph @xmath553 can be represented as :    using a compact representation which avoids repetitions between @xmath554 and @xmath555 , we describe the previous linked graph as :    we have @xmath556 , and @xmath527 is the graph :    in this case , we have @xmath557 , and for all @xmath558 we have @xmath559",
    ".    a _ border _ of a linked graph @xmath525 of length @xmath65 is a couple of integers @xmath560 where @xmath561 and @xmath562 .",
    "let @xmath563 be a linked graph on @xmath9 , and let @xmath560 be a border on @xmath525 .",
    "we define @xmath564 , the linked graph induced by the action of @xmath442 on @xmath525 , as follows :    * for all @xmath565 we let @xmath566 * we define @xmath567 inductively .",
    "first , let @xmath568 . by hypothesis , we have @xmath569 . * * given @xmath531 , let @xmath570 if @xmath571 and @xmath572 .",
    "* * suppose that we have defined @xmath573 until @xmath574 .",
    "then we define @xmath575 .",
    "intuitively , the action of a border @xmath560 on a linked graph corresponds to a @xmath6-transition : we keep only the states of @xmath576 which are recurrent for the sub - linked graph placed between @xmath577 and @xmath578 , and their successors .",
    "consider the same automaton as in example [ e - graph - lg ] .",
    "as before , let @xmath551 and let @xmath579 .",
    "then @xmath580 is a border on @xmath525 since @xmath581 .",
    "then the graph @xmath582 is the following graph :    let @xmath563 be a linked graph on @xmath9 .",
    "we call _ chain of borders _ a sequence @xmath583 of borders such that for all @xmath584 we have that @xmath585 is a border of @xmath586 .",
    "we define @xmath587 , the action of the sequence of borders @xmath392 on @xmath525 , as the linked graph @xmath588 .",
    "intuitively , the action of a chain of borders on a linked graph corresponds to a finite sequence of imbricated @xmath6-transitions .    in the following definition",
    "we consider graphs whose nodes are subsets of @xmath9 , and whose edges are labeled by bipartite graphs @xmath589 . given @xmath590 and @xmath589 , we write @xmath591 for an edge labeled by the graph @xmath592 between the vertice @xmath593 and @xmath594 . given @xmath589 , we define : @xmath595    a _ complete linked graph _ on @xmath9 is a graph @xmath537 where @xmath596 and the edges of @xmath597 are labeled by bipartite graphs on @xmath9 such that for all edge @xmath598 , we have @xmath599 and @xmath600 .    a path @xmath601 on a complete linked graph naturally induces a linked graph @xmath602 .    let @xmath590 .",
    "then :    * given @xmath47 , we say that @xmath594 is @xmath278-reachable from @xmath593 , written @xmath276 , if there exists a chain of borders @xmath392 on @xmath603 such that @xmath604 . *",
    "we say that @xmath594 is @xmath6-reachable from @xmath593 , written @xmath605 , if there exists @xmath47 such that @xmath276 .",
    "let @xmath590 and @xmath606 . then :    * given @xmath47 , we say that @xmath594 is @xmath607-reachable from @xmath593 , written @xmath608 , if there exists a chain of borders @xmath392 on @xmath603 and @xmath609 such that given @xmath610 , we have @xmath611 and @xmath612 . * we say that @xmath594 is @xmath613-reachable from @xmath593 , written @xmath614 , if there exists @xmath47 such that @xmath608 .",
    "[ e - simple - autom]@xmath244    2    1 .   consider the following probabilistic automaton : + 2 .",
    "let @xmath615 .",
    "let @xmath616 , let @xmath617 , @xmath618 , and @xmath619 .",
    "then @xmath620 is a chain of borders for @xmath525 , and moreover we have @xmath621 . thus @xmath622 is @xmath6-reachable from @xmath623 .",
    "notice however that @xmath624 is not reachable from @xmath623 in the support graph of @xmath120 .",
    "+ indeed , we have + @xmath625 + @xmath626 + @xmath627 + @xmath628 + now , if @xmath617 , @xmath618 , and @xmath619 .",
    "then @xmath620 is a chain of borders for @xmath525 , and moreover we have : + @xmath629 + @xmath630 + @xmath631 + @xmath632 + next + @xmath633 + @xmath630 + @xmath634 + @xmath635 + and finally + @xmath636 + @xmath637 + @xmath638 + @xmath639 + thus , @xmath621 , and @xmath622 is @xmath6-reachable from @xmath623 .",
    "notice however that @xmath624 is not reachable from @xmath623 in the support graph of @xmath120 .",
    "let @xmath120 be a probabilistic automaton .",
    "we define @xmath640 , the _ extended support graph of @xmath120 _ , such that given @xmath590 and @xmath589 , we have @xmath641 if @xmath614 .",
    "clearly @xmath642 is a complete linked graph .",
    "[ t - constr - ext - supp - graph ] we can construct @xmath642 in expspace .    we present the following algorithm to compute a graph @xmath643 in expspace , and the following proposition shows that @xmath644 .",
    "first , we need a preliminary lemma , which can be proved using a simple counting argument .",
    "[ l - reduction ] let @xmath597 be a complete linked graph .",
    "let @xmath249 , let @xmath606 , and let @xmath645 be a path on @xmath597 such that @xmath646 .",
    "suppose that there exists a border @xmath442 of @xmath647 and @xmath648 such that given @xmath649 , we have @xmath611 .",
    "then there exists a path @xmath650 on @xmath597 of length at most @xmath385 , where @xmath651 , and a border @xmath442 of @xmath652 and @xmath653 such that given @xmath654 , we have @xmath655 .    [ a - comp_sg ]",
    "let @xmath120 be a probabilistic automaton .",
    "* let @xmath656 be the transitions labeled graph such that given @xmath252 and @xmath589 we have @xmath657 if there exists @xmath47 such that @xmath658 and @xmath659 .",
    "* given @xmath660 , let @xmath661 be the graph with transitions labeled by bipartite graphs such that given @xmath252 and @xmath589 we have @xmath662 either if @xmath663 , or if there exists a path @xmath664 in @xmath665 ( hence also a linked graph ) , and a border @xmath442 of @xmath666 , such that @xmath667 , and if @xmath668 there exists @xmath648 such that @xmath669 , and @xmath611 . using lemma [ l - reduction ] , we can decide this fact in expspace .",
    "the graphs @xmath670 all have vertice in @xmath671 , and their edges are labeled by bipartite graphs . moreover , the sequence of the @xmath519 is increasing ( for the inclusion relation ) . the maximum number of different bipartite graphs between the subsets of @xmath9 is bounden by @xmath672 . as a consequence",
    ", the sequence of the @xmath519 must stabilize after some @xmath673 , and we can build @xmath643 in expspace .",
    "[ l - algo - expaspace ] let @xmath674 be given by the algorithm [ a - comp_sg ] .",
    "then we have @xmath644    first , we prove by induction that for all @xmath675 , all @xmath252 and @xmath589 , if @xmath676 is an edge of @xmath519 , then @xmath676 is also an edge of @xmath642 .",
    "the case @xmath677 is trivial .",
    "let @xmath660 , let @xmath252 and @xmath589 , and suppose that @xmath676 is an edge of @xmath519 .",
    "if @xmath676 is an edge of @xmath665 we are done by induction hypothesis .",
    "if not , then there exists a path @xmath664 in @xmath665 and a border @xmath442 of @xmath666 such that @xmath667 , and if @xmath668 there exists @xmath648 such that @xmath669 , and @xmath611 .",
    "now , by induction hypothesis , @xmath666 is also a path in @xmath642 , and by definition of @xmath642 , the linked graph @xmath678 is also in @xmath642 , which implies that @xmath676 is an edge of @xmath642 .",
    "conversely , suppose that @xmath591 is an edge of @xmath642 .",
    "let @xmath47 , @xmath609 and let @xmath392 be the chain of borders on @xmath679 such that @xmath680 and if @xmath681 we have @xmath611 .",
    "then we can execute the border action on the set of graphs @xmath682 where @xmath312 is the number of borders in @xmath392 , to get the edge @xmath591 in @xmath683 .",
    "this proves the result .",
    "* details of lemma [ l - ult pos impl simple ] .",
    "* we prove lemma [ l - ult pos impl simple ] .    for all @xmath61 ,",
    "we let @xmath684))$ ] and @xmath685 . by hypothesis , for all all @xmath176 and all @xmath686 , we have @xmath687)(q)>\\gamma$ ] . moreover , for all @xmath65 and all @xmath688 we have @xmath689 .",
    "this shows that the process is simple .",
    "let @xmath436 , and let @xmath690 be the process induced on @xmath9 by @xmath50 .",
    "by hypothesis , let @xmath691 be a sub - sequence of recurrent execution trees of @xmath261 of length at most @xmath299 .",
    "that is , we have @xmath692 . by definition , for all",
    "@xmath693 we have @xmath694 and @xmath695 , and @xmath288 .",
    "for all @xmath696 , let @xmath697 .",
    "we are in the following situation : @xmath698 we know that :        we show that the process @xmath690 satisfies the hypothesis of lemma [ l - ult pos impl simple ] . as before ,",
    "let @xmath272 be the minimal non zero probability which appears among the values @xmath268 when @xmath63 and @xmath34 .",
    "let @xmath701 .",
    "by lemma [ l - borne mots rec ] , for all @xmath46 , all @xmath702 and all @xmath703 , we have @xmath704 .",
    "we claim that for all @xmath696 and all @xmath705 , we have @xmath706 .",
    "we prove this result by induction on @xmath23 :      suppose the proposition true until @xmath699 .",
    "let @xmath709 .",
    "then there exists @xmath710 such that @xmath711 .",
    "let @xmath712 be such that @xmath713 , and @xmath714 . by the use of lemma [ l - borne mots rec ] on the chain recurrent execution tree @xmath293",
    ", we know that @xmath715 . by definition of @xmath373 and @xmath299 , we have that @xmath716 , hence @xmath717 .",
    "we have @xmath718 .",
    "since by induction hypothesis we have that @xmath719 , we get that @xmath720 , hence the result .",
    "now , let @xmath721 , and let @xmath176 .",
    "since @xmath700 is chain recurrent , we can apply the same method for the chain recurrent execution tree @xmath722 .",
    "as a conclusion , we see that the process @xmath690 satisfies the hypothesis of lemma [ l - ult pos impl simple ] with the parameters @xmath721 and @xmath723 .",
    "this proves the result .",
    "@xmath28 is the longest prefix of @xmath16 such that there exists @xmath733 such that @xmath734 and @xmath735 , and @xmath736 is minimal among the set of @xmath733 such that @xmath734 and @xmath735 ( minimal for the inclusion .",
    "if there exists several possibilities for @xmath736 we just pick one of them ) .",
    "if the set of valid words is not bounded , then we let @xmath737 and the construction stops .",
    "if there exists no @xmath28 prefix of @xmath16 such that there exists @xmath733 such that @xmath734 and @xmath735 , then we let @xmath738 be the empty word and we continue the construction .",
    "let @xmath744 be the letter which follows @xmath745 in @xmath16 . by construction ,",
    "@xmath746 is not chain recurrent , hence we can decompose @xmath747 as @xmath748 and find @xmath749 a partition of @xmath750 such that @xmath751 is a @xmath6-reduction and @xmath752 .",
    "we let @xmath753 .",
    "remark that @xmath754 .",
    "since @xmath755 , this implies that @xmath756 . by definition of @xmath736 , we have @xmath757 .",
    "@xmath761 is the longest prefix of @xmath762 such that there exists @xmath763 such that @xmath764 and @xmath765 , and @xmath766 is minimal among the set of @xmath763 such that @xmath764 and @xmath765 ( minimal for the inclusion .",
    "if there exists several possibilities for @xmath766 we just pick one of them ) .",
    "if the set of available words is not bounded , then we let @xmath767 and the construction stops .",
    "if there exists no @xmath761 prefix of @xmath762 such that there exists @xmath763 such that @xmath768 and @xmath765 , then we let @xmath769 be the empty word and we continue the construction .",
    "let @xmath775 be the letter which follows @xmath776 in @xmath16 . by construction",
    ", @xmath777 is not chain recurrent , hence we can decompose @xmath778 as @xmath779 and find @xmath780 a partition of @xmath781 such that @xmath782 is a @xmath6-reduction and @xmath783 .",
    "we let @xmath784 .",
    "remark that @xmath785 .",
    "since by induction we have @xmath786 and since by hypothesis @xmath787 , this implies that @xmath788 . by definition of @xmath766",
    ", we have @xmath789 , and by induction we have @xmath790 for all @xmath791 .",
    "since there exists at most @xmath385 different subsets @xmath793 of @xmath9 , the construction stops after at most @xmath385 steps .",
    "we get a sequence : @xmath794 where @xmath795",
    ". moreover , we now by construction that @xmath767 , since by hypothesis the set of prefixes @xmath761 of @xmath762 such that there exists @xmath796 such that @xmath787 and @xmath797 is not bounded .",
    "we can use the fact that @xmath120 is structurally simple iteratively to show that this imply that there exists @xmath798 such that @xmath799 is chain recurrent . indeed , since @xmath120 is structurally simple , to any finite length prefix @xmath800 of @xmath762 such that there exists @xmath796 such that @xmath801 and @xmath797 , we can associate @xmath802 such that @xmath803 is chain recurrent . taking @xmath798 which appears infinitely often among the @xmath804 concludes the point .    for all @xmath23 , @xmath805 is such that we can find @xmath806 such that @xmath807 is chain recurrent . since for all",
    "@xmath23 we have that @xmath808 is chain recurrent by construction , we get a sub - sequence of recurrent execution trees of @xmath295 of length at most @xmath385 ( only the sub - sequences which correspond to arrows @xmath809 may not contain a chain recurrent sub - sequence ) .",
    "let @xmath120 be a pa , let @xmath47 , let @xmath273 , and let @xmath642 be the extended support graph of @xmath120 .",
    "suppose @xmath276 .",
    "let @xmath810 be a chain of borders and @xmath609 be such that given @xmath811 we have @xmath812 .",
    "given @xmath813 , let @xmath814 .",
    "by induction we can show that for all @xmath813 and all @xmath609 we have that @xmath815 is limit reachable from @xmath593 .",
    "we now show that * * ( 2)**@xmath191*(1)*. suppose that @xmath105 is limit reachable from @xmath13 in @xmath120 . first , if there exists @xmath47 such that @xmath816 , then by definition @xmath105 is reachable from @xmath12 in @xmath642 .",
    "suppose now that @xmath105 is limit reachable from @xmath13 in @xmath120 , but that for all @xmath47 we have @xmath817 .",
    "we define the following probabilistic automaton @xmath818 with state space @xmath819 , alphabet @xmath820 and transition function as follows :                we show that the automaton @xmath818 is not simple .",
    "since @xmath105 is limit reachable from @xmath13 , we can let @xmath827 be a sequence of finite words such that for all @xmath61 we have @xmath828 .",
    "we define @xmath27 as : @xmath829 we claim that the process induced on the state space @xmath819 of @xmath818 by @xmath16 is not simple .",
    "first , notice that at any time , if the current distribution of the process is @xmath830 and the letter @xmath823 is taken as input , then the probability to be in a state @xmath46 at the next step is equal to @xmath831 . as a consequence , the automaton @xmath120 is not structurally simple .    given @xmath310 , let @xmath832 be the distribution on @xmath819 that we get after having read @xmath833 . by the choice of the @xmath834 , for all @xmath312 we have @xmath835 .",
    "by hypothesis , there exists @xmath63 such that @xmath836 and such that for an infinite number of @xmath61 we have @xmath837 and @xmath838 .",
    "let @xmath839 .",
    "we have found a couple @xmath63 such that :        such a couple @xmath843 invalidates the proposition [ p - separation simple jets ] which holds for simple process . indeed , by proposition [ p - separation simple jets ] ,",
    "if infinitely often we have @xmath844 , then there exists @xmath174 and @xmath845 such that for all @xmath179 , if @xmath846 and @xmath847 , then @xmath848 .",
    "thus , @xmath818 is not simple .    by definition",
    ", this implies that there exist @xmath273 , @xmath849 and @xmath47 such that @xmath276 and @xmath594 is minimal , and @xmath850 is not chain recurrent .",
    "since the automaton @xmath120 is supposed to be structurally simple , @xmath50 must contain the letter @xmath823 .",
    "since @xmath850 is not chain recurrent , @xmath851 , and in fact , since @xmath594 is minimal , we must have that @xmath852 .",
    "let @xmath810 be the chain of borders such that @xmath853 , let @xmath854 , and for all @xmath648 let @xmath855 .",
    "let @xmath856 , and for all @xmath648 we write @xmath857 .",
    "let @xmath858 , and let @xmath859 be the largest integer in @xmath860 such that @xmath861 .",
    "then we have @xmath862 . as a consequence ,",
    "@xmath105 is reachable from @xmath863 in @xmath642 .",
    "we get that in he new automaton , @xmath864 , and more precisely that there exists a word @xmath47 which contains the letter @xmath823 and which is such that @xmath865 .",
    "this implies that @xmath105 is reachable from @xmath863 in @xmath642 .",
    "we can prove the following , using the same kind of arguments as in the previous proofs : a structurally simple pa @xmath120 satisfies the qualitative limit parity problem iff there exists a set of states @xmath249 such that :                let @xmath47 and @xmath392 be a chain of reduction such that given @xmath811 there exists @xmath648 such that @xmath612 . then by applying the same chain of border on @xmath871 we get , if @xmath872 , that @xmath873 .",
    "let @xmath120 be a probabilistic automaton .",
    "we say that a subset @xmath593 of @xmath9 is _ minimal _ if there exists no @xmath874 such that @xmath605 .",
    "given @xmath273 minimal , let @xmath875 we claim that the following properties are equivalent :        we prove the claim .",
    "suppose first @xmath878 , and let @xmath273 be minimal , and suppose that there exists @xmath47 such that @xmath879 .",
    "then there would exist @xmath880 such that @xmath881 .",
    "we get that @xmath882 since @xmath593 is minimal , by definition of a structurally simple automaton , we get that @xmath883 is chain recurrent . as a consequence",
    ", we should have @xmath884 chain recurrent , which is a contradiction .",
    "hence @xmath878 implies @xmath885 .",
    "conversely , suppose @xmath885 , and let @xmath47 , @xmath273 , and @xmath274 be minimal among the @xmath275 such that @xmath276 .",
    "suppose that @xmath277 is not chain recurrent .",
    "by lemma [ l - sous - reach ] , and since @xmath594 is minimal , there exists @xmath47 such that @xmath886 .",
    "thus , if @xmath277 is not chain recurrent we get @xmath887 .",
    "this contradicts @xmath885 .",
    "hence we get that @xmath885 implies @xmath878 .                    for this",
    "we just have to remark that given @xmath47 , given @xmath899 , if we let @xmath900 and @xmath901 , then we get @xmath902 .",
    "moreover , if @xmath259 , then we have that @xmath903 .",
    "this implies that the structural simplicity condition is satisfied on @xmath306 iff it is satisfied both on @xmath307 and @xmath308 .",
    "first , remark that the stability of the class of languages recognized by structurally simple parity automata under the positive semantics is trivial : we just consider a `` union automaton '' whose structure is the union of the structures of the two given automata , and whose initial distribution is a mix of the two given automata initial distributions .",
    "we consider now the stability of this class of language under the intersection operator .",
    "let @xmath120 be a structurally simple parity automaton . by defining a relevant set of accepting sets",
    ", we can transform its accepting condition to transform it to a positive street pa which recognizes the same language . since we do not change the structure of the automaton nor its transition function , the new automaton is still structurally simple .",
    "now , given two street pa with the positive semantics , using a classical product construction , we can construct a street pa which , under the positive semantics , accept a language which is the intersection of the languages of the two street automata . by proposition [ p - product simple ] , this street pa is still structurally simple . finally , using a construction a la safra",
    ", we can construct a parity pa which , under the positive semantics , recognizes the same language as the last street pa .",
    "we can show that the construction a la safra keeps the automaton structurally simple , since it can be seen as a product construction which does not add any probabilistic transition .",
    "we get the stability of the languages of positive parity pa under union and intersection .",
    "remark next that pas with positive parity semantics and pas with almost parity semantics are dual of each others : given a pa @xmath120 with positive parity semantics , by inverting the parity condition ( taking a new parity function @xmath904 ) , we get a new pa @xmath905 whose language is the complementary of @xmath906 : @xmath907 . as a consequence , if the class of languages recognized by positive parity pas is stable under intersection and complementation , so is the class of languages recognized by almost parity pas .",
    "by contraposition , let @xmath120 be an automaton which is not structurally simple .",
    "let @xmath273 , @xmath47 , and @xmath275 minimal such that @xmath276 , and such that @xmath277 is not chain recurrent .",
    "let @xmath908 .",
    "we have @xmath909 .",
    "let @xmath910 be a decomposition such that @xmath911 is a @xmath6-reduction .",
    "then we have that @xmath912 is also a @xmath6-reduction . as a consequence",
    ", we can build a cycle in the support graph of @xmath120 , and thus @xmath120 is not @xmath6-acyclic .",
    "notice that every deterministic automaton is structurally simple .",
    "this implies that some structurally simple automata ( for instance deterministic automata whose support graph contains a cycle ) are not @xmath6-acyclic .",
    "let @xmath120 be a @xmath312-hierarchical automata .",
    "let @xmath913 be an elementary cycle in the support graph of @xmath120 , i.e. a cycle which does not contain any sub - cycle .",
    "let @xmath914 , let @xmath915 , and let @xmath916 .",
    "then there exists @xmath47 such that @xmath480 , and there exists @xmath880 such that @xmath917 .",
    "this implies that @xmath918 .",
    "this implies that there is not probabilistic transition in the cycle . as a consequence ,",
    "@xmath593 can not contain a @xmath6-reduction .",
    "this proves that @xmath120 is structurally simple .",
    "the automaton of example [ e - simple - autom ] is structurally simple , but not hierarchical , which completes the proof ."
  ],
  "abstract_text": [
    "<S> we consider probabilistic automata on infinite words with acceptance defined by parity conditions . </S>",
    "<S> we consider three qualitative decision problems : ( i )  the _ positive _ decision problem asks whether there is a word that is accepted with positive probability ; ( ii )  the _ almost _ decision problem asks whether there is a word that is accepted with probability  1 ; and ( iii )  the _ limit _ decision problem asks whether for every @xmath0 there is a word that is accepted with probability at least @xmath1 . </S>",
    "<S> we unify and generalize several decidability results for probabilistic automata over infinite words , and identify a _ robust _ ( closed under union and intersection ) subclass of probabilistic automata for which all the qualitative decision problems are decidable for parity conditions . </S>",
    "<S> we also show that if the input words are restricted to lasso shape ( regular ) words , then the positive and almost problems are decidable for all probabilistic automata with parity conditions . for most decidable problems we show an optimal pspace - complete complexity bound .    </S>",
    "<S> _ keywords : _ probabilistic automata ; parity conditions ; positive , almost and limit decision problems . </S>"
  ]
}
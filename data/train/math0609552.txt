{
  "article_text": [
    "if @xmath8 is a basis of a free group @xmath1 , we often write @xmath20 and we represent the elements of @xmath1 as reduced words over the alphabet @xmath8 . more precisely , we consider the set of all words on the symmetrized alphabet @xmath21 , where @xmath22 is a set that is disjoint from @xmath8 , equipped with an explicit bijection with @xmath8 , namely @xmath23 .",
    "it is customary to extend the mapping @xmath24 to all words @xmath25 by letting @xmath26 for each @xmath27 , @xmath28 ( where 1 denotes the empty word ) and @xmath29 for all @xmath30 .",
    "a word in @xmath31 is _ reduced _ if it contains no factor of the form @xmath32 or @xmath33 with @xmath27 , and it is well known that @xmath1 can be identified with the set of reduced words over @xmath8 .",
    "we denote by @xmath34 the map that assigns to each word @xmath35 the corresponding reduced word @xmath36 , obtained by iteratively deleting all factors of the form @xmath32 or @xmath33 ( @xmath27 ) .",
    "we describe the main tool for the representation of subgroups of free groups in terms of automata ( see @xcite ) .",
    "readers less familiar with this terminology may think of automata as edge - labeled directed graphs .",
    "an _ automaton _ on alphabet @xmath8 is a triple of the form @xmath37 where @xmath38 is a finite set called the _ state _ set , @xmath39 is the _ initial state _ , and @xmath40 is the set of _ edges _ , or _ transitions_. a transition @xmath41 is said to be from state @xmath42 , to state @xmath43 , with label @xmath44",
    ". the _ label of a path _ in @xmath45 ( a finite sequence of consecutive transitions ) is the sequence of the labels of its transitions , a word on alphabet @xmath8 , that is , an element of the free monoid @xmath46 .",
    "we write @xmath47 if there is a path from state @xmath42 to state @xmath43 with label @xmath35 .",
    "the language accepted by @xmath45 is the set @xmath48 of all words in @xmath46 which label a path in @xmath45 from @xmath49 to @xmath49 .",
    "this definition of automata leads naturally to the definition of a _",
    "@xmath50 from an automaton @xmath51 to an automaton @xmath52 ( over the same alphabet @xmath8 ) : @xmath50 is a mapping from @xmath38 to @xmath53 such that @xmath54 , and such that whenever @xmath55 , we also have @xmath56 . the homomorphism @xmath50 is an _ isomorphism _ if it is a bijection and if @xmath57 is also a homomorphism .",
    "the automaton @xmath45 is called _ deterministic _ if no two distinct edges with the same initial state bear the same label , that is , @xmath58 the automaton is called _ trim _ if every state @xmath59 lies in some path from @xmath49 to @xmath49 .    in the sequel , we consider automata where the alphabet is symmetrized , that is , the alphabet is of the form @xmath21 .",
    "we say that @xmath45 is _ dual _ if for each @xmath27 , there is an @xmath44-labeled edge from state @xmath42 to state @xmath43 if and only if there is an @xmath60-labeled edge from @xmath43 to @xmath42 , @xmath61 let us immediately record the following fact .",
    "[ fact 11 ] let @xmath45 be a deterministic dual automaton .",
    "if a word @xmath35 labels a path in @xmath45 from state @xmath42 to state @xmath43 , then so does the corresponding reduced word @xmath62 .",
    "moreover @xmath48 is a submonoid of @xmath63 and @xmath64 is a subgroup of @xmath65 .",
    "now let @xmath51 be a trim dual automaton and let @xmath66 be states of @xmath45 .",
    "if @xmath67 is a non - empty word , the expansion of @xmath45 by @xmath68 is the automaton obtained from @xmath45 by adding @xmath69 vertices @xmath70 and @xmath71 edges @xmath72 and @xmath73 note that this automaton is still trim and dual .",
    "moreover , if @xmath74 , then we observe the following .    [ h(a ) ]",
    "let @xmath51 be a trim dual automaton , let @xmath75 and let @xmath76 be a non - empty word . if @xmath77 is the expansion of @xmath45 by @xmath78 , then @xmath79 is the subgroup generated by @xmath0 and @xmath80 , that is , @xmath81 .",
    "let @xmath82 be the dual automaton consisting of the state @xmath49 and the states and edges added to @xmath45 in the expansion .",
    "it is immediate that @xmath83 is the subgroup of @xmath65 generated by @xmath80 .",
    "if @xmath84 , we can factor a path @xmath85 according to the successive visits of state @xmath49 .",
    "the resulting factorization of @xmath35 makes it clear that @xmath35 is a product of elements of @xmath48 and @xmath86 .",
    "thus , @xmath87 is the submonoid generated by @xmath88 , and @xmath79 is the subgroup generated by @xmath64 and @xmath80 .",
    "this concludes the proof .",
    "the automaton @xmath45 is called _ inverse _ if it is deterministic , trim and dual .",
    "it is _ reduced _ if every state @xmath59 lies in some path from @xmath49 to @xmath49 , labeled by a ( possibly empty ) reduced word .",
    "we note the following result , a cousin of ( * ? ? ?",
    "* thm 1.16 ) .",
    "[ prop unique ] if @xmath45 and @xmath77 are reduced inverse automata such that @xmath89 , then @xmath45 and @xmath77 are isomorphic .",
    "let @xmath51 and @xmath90 be reduced inverse automata such that @xmath89 .",
    "we construct an isomorphism @xmath50 between @xmath45 and @xmath77 as follows .",
    "we first let @xmath91 .",
    "let @xmath59 . since @xmath45 is reduced , there exist reduced words @xmath35 and @xmath92 such that the word @xmath93 is reduced , @xmath94 and @xmath95 .",
    "then @xmath96 , so @xmath97 , and hence @xmath98 by fact  [ fact 11 ] . thus @xmath93 labels a path in @xmath77 from @xmath99 to @xmath99 , and we let @xmath100 be the unique state in @xmath101 such that @xmath102 .",
    "we first verify that @xmath50 is well defined .",
    "suppose that @xmath93 and @xmath103 are reduced words such that @xmath104 and @xmath105 in @xmath45 .",
    "we want to show that if @xmath106 and @xmath107 in @xmath77 , then @xmath108 . we note that @xmath109 labels a path from @xmath49 to @xmath49 in @xmath45 .",
    "if @xmath109 is a reduced word , then by the same reasoning as above , @xmath109 labels a path in @xmath77 from @xmath99 to @xmath99 , say , @xmath110 and the deterministic property of @xmath77 implies that @xmath111 .    if @xmath109 is not reduced , and @xmath44 is the first letter of @xmath92 , then the last letter of @xmath112 is @xmath60 while the last letter of @xmath35 is not @xmath60 .",
    "therefore @xmath113 is reduced , @xmath114 and again , there is a path in @xmath77 of the form @xmath115 . by determinism",
    ", it follows that @xmath116 .",
    "this shows that @xmath50 is well defined . a dual construction yields a well - defined mapping @xmath117 from @xmath101 to @xmath38 such that , whenever @xmath118 in @xmath77 and @xmath93 is a reduced word , then @xmath119 in @xmath45 .",
    "using the determinism of @xmath45 and @xmath77 , it is now immediate that @xmath120 is the identity on @xmath38 and @xmath121 is the identity on @xmath101 .",
    "there remains to verify that @xmath50 and @xmath57 are homomorphisms .",
    "the case of @xmath57 is dual of that of @xmath50 and we treat only the latter .",
    "that is , we want to show that if @xmath122 is a transition in @xmath45 , then @xmath123 is a transition in @xmath77 .",
    "let @xmath93 and @xmath103 be reduced words such that @xmath124 and @xmath125 . in particular , we have @xmath126 and @xmath127 in @xmath77 .",
    "( 60,38)(0,-34 )    ( n0)(0.0,-15.0)@xmath128    ( n3)(30.0,0.0)@xmath43    ( n4)(30.0,-30.0)@xmath129    ( n5)(60.0,-15.0)@xmath128    ( n0,n3)@xmath35    ( n3,n5)@xmath92    ( n3,n4)@xmath44    ( n0,n4)@xmath112    ( n4,n5)@xmath130    if @xmath131 is reduced , then in @xmath77 , there is a path from @xmath99 to @xmath99 labeled @xmath131 , and by determinism , there is a transition @xmath123 .",
    "if @xmath131 is not reduced , then either @xmath132 is not reduced or @xmath133 is not reduced . if @xmath132 is not reduced , then @xmath134 and by determinism , @xmath135 . as in the first part of the proof , it follows that at least one of @xmath136 and @xmath137 is reduced , so @xmath138 in @xmath77 and hence there is a transition @xmath123 .",
    "the case where @xmath133 is not reduced is handled symmetrically , and this concludes the proof .",
    "let @xmath0 be a subgroup of @xmath65 .",
    "say that an automaton @xmath45 _ on alphabet @xmath8 represents @xmath0 _ if @xmath45 is reduced and inverse and if @xmath139 .",
    "proposition  [ prop unique ] shows that there exists at most one such automaton , and we denote it by @xmath140 if it exists .",
    "we now discuss the existence and the construction of @xmath140 when @xmath0 is finitely generated .",
    "( as it turns out , @xmath140 always exists , but our interest in this paper is restricted to the finite rank case . )    let @xmath45 be an automaton and let @xmath141 be distinct states of @xmath45 .",
    "the automaton obtained from @xmath45 by identifying states @xmath42 and @xmath43 is constructed as follows : its state set is @xmath142 , where @xmath17 is a new state ; its initial state is @xmath49 ( or @xmath17 if @xmath42 or @xmath43 is equal to @xmath49 ) ; and its set of transitions is obtained from @xmath143 by replacing everywhere @xmath42 and @xmath43 by @xmath17 . if @xmath45 is trim or dual , then so is the automaton obtained from @xmath45 by identifying a pair of states .",
    "now let @xmath45 be a dual automaton .",
    "if @xmath45 is not deterministic , there exist transitions @xmath144 and @xmath145 with @xmath146 and @xmath147 . identifying @xmath42 and @xmath43 yields a new dual automaton @xmath77 , and",
    "we say that @xmath77 is obtained from @xmath45 by an _ elementary reduction of type 1_.    [ reduction1 ] let @xmath45 be a dual automaton and let @xmath77 be obtained from @xmath45 by an elementary reduction of type 1 .",
    "then @xmath148 .",
    "it is easily seen that @xmath149 . for the converse ,",
    "we use the notation given above : in @xmath77 , the states @xmath42 and @xmath43 of @xmath45 are replaced with a new state @xmath17 .",
    "let @xmath84 .",
    "then there exists a path labeled @xmath35 from the initial state of @xmath77 ( say , @xmath49 ) to itself .",
    "if that path does not visit state @xmath17 , then @xmath35 also labels a path from @xmath49 to itself in @xmath45 and hence @xmath150 .",
    "if that path does visit state @xmath17 , we consider the factorization of @xmath35 given by the passage of that path through @xmath17 : we have @xmath151 , @xmath152 and @xmath153 it follows that in @xmath45 , @xmath154-labelled paths exist , with end states @xmath42 or @xmath43 ( or @xmath49 ) .",
    "then one of @xmath155 and @xmath156 labels a path in @xmath45 from @xmath49 to @xmath43 .",
    "similarly , one of @xmath157 and @xmath158 labels a path from @xmath43 to @xmath49 ( making due allowance if @xmath42 or @xmath43 is equal to @xmath49 ) . and for each @xmath159 , one of @xmath154 , @xmath160 , @xmath161 and @xmath162 labels a path in @xmath45 from @xmath43 to @xmath43 .",
    "therefore , there exists a path in @xmath45 of the form @xmath163 such that @xmath164 , which concludes the proof .",
    "now assume that @xmath45 is a deterministic dual automaton .",
    "[ reduction11 ] let @xmath45 be an inverse automaton .",
    "then @xmath45 is non - reduced if and only if there exist states @xmath165 and @xmath42 , and a letter @xmath147 such that the only transitions of @xmath45 involving @xmath43 are @xmath41 and @xmath166 .    in graph - theoretic terms",
    ", this means that @xmath45 is reduced if and only if no vertex of @xmath45 has degree one ( more precisely : no vertex is adjacent to a single @xmath8-labeled edge ) , except possibly @xmath49 .    by definition",
    ", @xmath45 is not reduced if and only if there exists a state @xmath43 that does not lie on any path from @xmath49 to itself , labeled by a reduced word .",
    "we first observe that the state @xmath43 can not be equal to @xmath49 since the empty word is reduced , and labels a path from @xmath49 to itself .",
    "suppose now that there exist reduced words @xmath167 with distinct last letters , labeling paths from @xmath49 to @xmath43 : then @xmath168 is a reduced word , labeling a path from @xmath49 to itself and visiting @xmath43 .",
    "on the other hand , if every reduced word labeling a path from @xmath49 to @xmath43 ends with , say , letter @xmath169 , then every path from @xmath49 to itself visiting @xmath43 has a non - reduced label .",
    "thus @xmath45 is not reduced if and only if there exists a state @xmath165 and every reduced word labeling a path from @xmath49 to @xmath43 ends with the same letter . by determinism , this is equivalent to the existence of another state @xmath42 such that the transitions involving @xmath43 are @xmath41 and @xmath166 .",
    "let @xmath45 be inverse and not reduced , and let @xmath170 be as in fact  [ reduction11 ] . if @xmath77 is obtained from @xmath45 by omitting state @xmath43 and the transitions involving it , we observe that @xmath77 is again an inverse automaton , and we say that @xmath77 is obtained from @xmath45 by an _ elementary reduction of type 2_.    [ reduction2 ] let @xmath45 be an inverse automaton and let @xmath77 be obtained from @xmath45 by an elementary reduction of type 2",
    ". then @xmath89 .",
    "let @xmath44 be a letter and let @xmath171 be states of @xmath45 as in fact  [ reduction11 ] , and let us assume that @xmath77 is obtained from @xmath45 by omitting state @xmath43 and the transitions involving it .",
    "it is easily seen that @xmath172 .",
    "conversely , let @xmath173 .",
    "by fact  [ fact 11 ] , @xmath174 .",
    "now fact  [ reduction11 ] shows that the path @xmath175 in @xmath45 can not visit state @xmath43 , since @xmath62 is a reduced word .",
    "it follows that this path is also a path in @xmath77 , @xmath176 and hence @xmath177 .",
    "let @xmath45 be a trim , dual automaton , and let @xmath77 be an automaton obtained by iteratively performing elementary reductions , first of type 1 until the automaton is inverse , and then of type 2 until none is possible . then @xmath77 is a reduced inverse automaton , we write @xmath178 and we say that @xmath77 is obtained from @xmath45 by reduction .",
    "moreover , facts  [ reduction1 ] and [ reduction2 ] show that @xmath89 .",
    "this leads directly to the well - known algorithm to construct a reduced inverse automaton representing a given finitely generated subgroup @xmath0 .",
    "let @xmath179 be generators of @xmath0 , and let us consider the automaton obtained from the trivial automaton ( one vertex @xmath49 , no transitions ) by performing successively expansions by @xmath180 ( @xmath181 ) and then reducing the automaton .",
    "it follows from propositions  [ h(a ) ] and  [ prop unique ] that the resulting automaton is @xmath140 .",
    "note that it does not matter which set of generators of @xmath0 was used , nor in which order the elementary reductions were performed .",
    "this construction of @xmath140 is well known , and can be described in many different ways , notably in terms of immersions over the bouquet of circles ( stallings @xcite ) or of closed inverse submonoids of a free inverse monoid ( margolis and meakin @xcite ) .",
    "[ end of sec 12 ] there is a well - known converse to the above construction : if @xmath45 is a reduced inverse automaton and @xmath182 , then @xmath0 has finite rank and a basis for @xmath0 can be computed as follows ( see stallings @xcite ) .",
    "given a spanning tree @xmath183 of the ( graph underlying the ) automaton @xmath45 , for each state @xmath42 , let @xmath184 be the reduced word labeling a path from @xmath49 to @xmath42 inside the tree @xmath183 .",
    "for each transition @xmath185 , let @xmath186 : then a basis of @xmath0 consists of the elements @xmath187 , where @xmath188 runs over the transitions @xmath189 not in @xmath183 and such that @xmath27 .",
    "we note that , given a finite set @xmath179 of elements of @xmath65 with total length @xmath190 , one can construct @xmath140 in time at most @xmath12 and @xmath140 has @xmath191 states .",
    "moreover , finding a basis of @xmath0 can be done in time at most @xmath192 ( @xmath193 according to touikan s announcement  @xcite ) , and the rank of @xmath0 is equal to @xmath194 , where @xmath188 is the number of edges in @xmath140 .",
    "it is well known that one can decide , given a subgroup @xmath0 of a finite rank free group @xmath1 , whether @xmath0 is a free factor of @xmath1 .",
    "we briefly describe here the main known algorithms and discuss their complexity .",
    "let @xmath0 be a finitely generated subgroup of a free group @xmath1 of rank @xmath4 , with basis @xmath8 .",
    "let @xmath179 be a generating set of @xmath0 . by the results summarized in fact  [ end of sec 12 ] , up to a quadratic time computation",
    ", we may assume that @xmath179 is a basis of @xmath0 .",
    "let @xmath195 be the total length of the tuple @xmath196 , and let @xmath197 be the rank difference between @xmath1 and @xmath0  which we assume to be positive , since @xmath0 can be a proper free factor of @xmath1 only if @xmath198 .",
    "federer and jnsson ( see ( * ? ? ?",
    "i.2.26 ) ) gave the following observation and decision procedure : @xmath0 is a free factor of @xmath1 if and only if there exist @xmath199 words @xmath200 , each of length at most @xmath201 , such that @xmath202 generate the whole of @xmath1 .",
    "the resulting algorithm requires testing every suitable @xmath199-tuple of reduced words on alphabet @xmath8 .",
    "each of these tests ( does a certain @xmath4-tuple of words generate @xmath1 ? ) takes time polynomial in the total length of the @xmath4-tuple , and hence in @xmath203 .",
    "however , the number of tests is @xmath204 , which is exponential in @xmath11 and @xmath199 .",
    "this approach leads to the following .",
    "deciding whether @xmath205 is in @xmath206 , with respect to @xmath203 .    to verify that @xmath205 , we need to guess @xmath199 words of length at most @xmath11 , and verify that together with @xmath0 , they generate @xmath1 , which can be done in @xmath207 .",
    "another approach is based on the use of whitehead automorphisms .",
    "we refer the readers to ( * ? ? ?",
    "i.4 ) for the definition of these automorphisms , it suffices to note here that the set @xmath208 of whitehead automorphisms of @xmath1 which do not preserve length , has exponential cardinality ( in terms of @xmath4 ) . a result of whitehead (",
    "i.4.24 ) shows the following : if there exists an automorphism @xmath50 of @xmath1 such that the total length of @xmath209 is strictly less than @xmath11 , then there exists such an automorphism in @xmath208 .",
    "in particular , an algorithm to compute the minimum total length of an automorphic image of the tuple @xmath196 consists in repeatedly applying the following step : try every automorphism @xmath210 until the total length of @xmath211 is strictly less than the total length of @xmath196 ; if such a @xmath117 exists , replace @xmath196 by @xmath211 ; otherwise , stop and output the total length of @xmath196 .",
    "this applies to the decision of the free factor relation since @xmath212 if and only if there exists an automorphism @xmath50 mapping a basis of @xmath0 to a subset of @xmath8 .",
    "thus an algorithm consists in first computing a basis of @xmath0 , and assuming that @xmath179 is a basis , verifying whether the minimum total length of @xmath209 when @xmath50 runs over the automorphisms of @xmath1 , is exactly @xmath17 .",
    "this algorithm may require @xmath213 steps , each of which consists in computing the image of a tuple of length at most @xmath11 under an automorphism , and hence has complexity @xmath214 .",
    "thus the time complexity of this algorithm is @xmath215 , which is quadratic in @xmath11 and exponential in @xmath4 .",
    "a variant of this algorithm was established by gersten @xcite , who showed that a similar method applies to find the minimum size ( number of vertices ) of @xmath216 , when @xmath50 runs over the automorphisms of @xmath65 .",
    "it is clear that @xmath0 is a free factor of @xmath65 if and only if there exists an automorphism @xmath50 such that @xmath216 has a single vertex .",
    "the time complexity is computed as above , where the number of vertices of @xmath140 is substituted for the total length of a basis for @xmath0 . as noted earlier , this number of vertices is usually substantially smaller than the total length of a basis , but the two values are linearly dependent , so the order of magnitude of the time complexity is not modified , notably the exponential dependence in @xmath4 .",
    "the discussion of whitehead s algorithm above concerns only the so - called _ easy part _ of the algorithm ( see for instance kapovich , miasnikov and shpilrain @xcite ) .",
    "results by miasnikov and shpilrain @xcite , khan @xcite , and most recently by donghi lee @xcite on the possible polynomial complexity of the _ hard part _ of the algorithm also consider the rank of the ambient free group as a constant , and do not question the actual exponential dependence in that parameter .",
    "let @xmath45 be a reduced inverse automaton .",
    "let @xmath77 be obtained from @xmath45 by performing an expansion , say by @xmath68 , and then reducing the resulting automaton .",
    "in this situation , we write @xmath217 , or simply @xmath218 .",
    "we distinguish two special cases .",
    "@xmath219 if the reduction following the expansion does not involve identifying or omitting states of @xmath45 , or equivalently if @xmath45 embeds in @xmath77 , we say that @xmath77 is obtained from @xmath45 by a _ reduced expansion _",
    "and we write @xmath220 or @xmath221 .",
    "@xmath219 if the states @xmath42 and @xmath43 are equal to the distinguished state @xmath49 of @xmath45 , we say that @xmath77 is obtained from @xmath45 by an _",
    "e - step _ and we write @xmath222 , or simply @xmath223 .    finally , let @xmath77 be obtained from @xmath45 by identifying two distinct vertices @xmath42 and @xmath43 , and then reducing the resulting automaton .",
    "then we say that @xmath77 is obtained from @xmath45 by an _",
    "i - step _ and we write @xmath224 , or simply @xmath225 .    note that if @xmath226 , @xmath221 , @xmath223 or @xmath227 , then @xmath77 is a reduced inverse automaton .",
    "we first record a few facts .    [ fact1 ] let @xmath35 be a reduced word labeling a path in @xmath45 from a state @xmath42 to a state @xmath228 , and from a state @xmath43 to a state @xmath129 , @xmath229 by definition of the reduction of dual automata , the identification of @xmath42 and @xmath43 implies that of @xmath228 and @xmath129 , and the converse holds as well .",
    "thus @xmath224 if and only if @xmath230 .",
    "let us now examine in detail the effect of an operation of the form @xmath231 .",
    "[ fact2 ] let @xmath141 be states of @xmath45 and let @xmath76 be a non - empty reduced word .",
    "let @xmath35 be the longest prefix of @xmath76 that can be read in @xmath45 from state @xmath42 , and let @xmath92 be the longest suffix of @xmath76 that can be read in @xmath45 to state @xmath43 ( that is , @xmath232 is the longest prefix of @xmath233 that can be read in @xmath45 from state @xmath43 ) .",
    "we distinguish two cases :    * if @xmath234 , then @xmath235 for some non - empty reduced word @xmath236 . if we let @xmath228 ( resp .",
    "@xmath129 ) be the end ( resp .",
    "start ) state of the path labeled @xmath35 ( resp .",
    "@xmath92 ) and starting in @xmath42 ( resp .",
    "ending in @xmath43 ) , @xmath237 then the reduction process on the result of the expansion of @xmath45 by @xmath68 identifies the @xmath238 first edges and the @xmath239 last edges of the added path with existing edges of @xmath45 , so that @xmath217 if and only if @xmath240 and the latter is a reduced expansion . *",
    "if @xmath241 , then there exist words @xmath242 , possibly empty , such that @xmath243 , @xmath244 and @xmath245 .",
    "let @xmath246 be the states of @xmath45 defined by the following paths @xmath247 then @xmath217 if and only if @xmath248 , if and only if @xmath249 .",
    "we derive from fact  [ fact2 ] the following statement .",
    "[ l04 ] let @xmath45 and @xmath77 be inverse automata .",
    "if @xmath250 , then @xmath225 or @xmath251 for some states @xmath42 and @xmath43 and a reduced word @xmath35 such that @xmath252 .",
    "the following converse statements are derived from facts  [ fact1 ] and  [ fact2 ] .",
    "[ h istep ] let @xmath45 be a reduced inverse automaton , let @xmath75 , let @xmath35 and @xmath92 be reduced words labeling paths @xmath253 in @xmath45 , and suppose that @xmath254",
    ". then @xmath255 and @xmath256",
    ".    in particular , @xmath257 . if @xmath258 , then @xmath259 and if @xmath260 is a basis of @xmath0 , then @xmath261 is a basis of @xmath79 .",
    "let @xmath262 be the expansion of @xmath45 by @xmath263 .",
    "the analysis in fact  [ fact2 ] ( 2 ) shows that a step in the reduction of @xmath262 is provided by the automaton obtained in identifying @xmath42 and @xmath43 . by proposition  [ h(a ) ] we have @xmath264 ( hence the rank inequality ) , and the uniqueness statement in proposition  [ prop unique ] then shows that @xmath265 .",
    "let us now assume that @xmath258 , and that @xmath260 is a basis of @xmath0 .",
    "then @xmath266 is a generating set of @xmath79 with cardinality equal to the rank of @xmath79 , so @xmath266 is a basis of that subgroup by ( * ? ? ?",
    "i.3.5 ) .",
    "[ h restep ] let @xmath45 and @xmath77 be reduced inverse automata , let @xmath76 be a reduced word such that @xmath220 , let @xmath75 , and let @xmath35 and @xmath92 be reduced words labeling paths @xmath267 in @xmath45 . then @xmath268 and @xmath269 .",
    "moreover , @xmath259 , @xmath270 and if @xmath260 is a basis of @xmath0 , then @xmath271 is a basis of @xmath79 .",
    "since the expansion of @xmath45 by @xmath68 is a reduced expansion , the word @xmath272 is reduced and the expansion by @xmath273 falls in the situation described in fact  [ fact2 ]  ( 1 ) . together with proposition  [ h(a ) ] , it follows that @xmath274 , which concludes the verification that of the first part of the proposition .    the free factor and the rank statements follow from the statement on a basis for @xmath79 , which is a direct consequence of the definition of a reduced expansion and of the discussion on bases and spanning trees in fact  [ end of sec 12 ] .",
    "we now introduce a measure of the _ cost _ of a reduced expansion or an i - step @xmath275 , written @xmath276 : if @xmath275 is an i - step , then @xmath277 ; if @xmath275 is a reduced expansion , @xmath278 , its cost is the length of @xmath76 , @xmath279 .",
    "we extend this notion of cost to finite sequences of i - steps and reduced expansions : if @xmath280 is such a sequence , we let @xmath281 finally , we introduce an order relation on the set of finite sequences of non - negative integers .",
    "let @xmath282 and @xmath283 be such sequences .",
    "we say that @xmath284 if    * @xmath285 , * @xmath286 and @xmath287 , * @xmath286 , @xmath288 and @xmath289 precedes @xmath290 in the lexicographic order .",
    "it is routine to check that @xmath291 is a well - order on the set of finite sequences of non - negative integers , which is stable under the concatenation of sequences .",
    "we write @xmath292 if @xmath293 and @xmath294 .",
    "[ l06 ] let @xmath45 , @xmath262 and @xmath77 be inverse automata such that @xmath262 is obtained from @xmath45 by a reduced expansion @xmath295 and @xmath77 is obtained from @xmath262 by an i - step @xmath296 , @xmath297 then there exist a sequence of reduced expansions or i - steps @xmath298 of length 1 or 2 such that @xmath77 is obtained from @xmath45 by applying the steps in @xmath298 and @xmath299 .",
    "suppose that @xmath300 with @xmath301 .",
    "the cost of this sequence of transformations is @xmath302 .",
    "let @xmath38 be the state set of @xmath45 and let @xmath35 and @xmath92 be reduced paths , @xmath303 then @xmath272 is a reduced word and @xmath304 by proposition  [ h restep ] .",
    "we distinguish three cases , depending whether or not @xmath4 and @xmath305 lie in @xmath38 .",
    "[ [ case-1-both - r - and - s - are - in - q . ] ] case 1 : both @xmath4 and @xmath305 are in @xmath38 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    let @xmath306 and @xmath307 be reduced words labeling paths in @xmath45 @xmath308 . then the same words label similar paths in @xmath262 and it follows from proposition  [ h istep ] that @xmath309    let also @xmath310 and @xmath311 be determined by @xmath312",
    ". then @xmath313 is also equal to @xmath314 , so that @xmath315 by proposition  [ prop unique ] .",
    "note that the words @xmath35 and @xmath92 label paths from and into state @xmath49 in @xmath310 as well .",
    "it follows from proposition  [ l04 ] that , if @xmath316 , then @xmath77 can be obtained from @xmath310 by an i - step or by a reduced expansion of the form @xmath317 with @xmath318 .",
    "thus @xmath77 is obtained from @xmath45 either by a sequence of 1 or 2 transformations , of cost @xmath319 or @xmath320 with @xmath321 .",
    "this is @xmath322-less than @xmath302 , as expected .",
    "[ [ case-2-exactly - one - of - r - and - s - is - in - q . ] ] case 2 : exactly one of @xmath4 and @xmath305 is in @xmath38 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    without loss of generality , we may assume that @xmath323 and @xmath324 .",
    "let @xmath325 be a reduced word labeling a path from @xmath49 to @xmath4 in @xmath45 , and hence also in @xmath262 .",
    "let @xmath326 be the unique reduced word labeling a path from @xmath42 to @xmath305 in @xmath262 , using only edges that were not in @xmath45 . by assumption",
    ", @xmath326 is a proper , non - empty prefix of @xmath76 .",
    "moreover , by propositions  [ h(a ) ] and  [ h istep ] , @xmath327    let @xmath328 be the longest common suffix of @xmath326 and @xmath325 , so that @xmath329 , @xmath330 , @xmath331 is reduced and we have the following paths in @xmath262 , @xmath332 fact  [ fact1 ] shows that @xmath333 , so we may assume that @xmath334 , @xmath335 and @xmath336 . there is a possibility that the word @xmath326 is now empty ( if @xmath328 was in fact equal to @xmath326 ) , but in that case , we are returned to the situation of case 1 , with @xmath337 .",
    "thus we may still assume that @xmath338 .",
    "in particular , the word @xmath339 is reduced .",
    "then let @xmath310 and @xmath311 be defined by @xmath340 .",
    "again @xmath341 , so @xmath315 by proposition  [ prop unique ] .",
    "proposition  [ l04 ] states that each e - step can be replaced by an i - step or by a reduced expansion of cost bounded above by the cost of the e - step . going back to fact  [ fact2 ]",
    ", we see that the e - step @xmath342 can be replaced by a transformation of cost @xmath343 since both @xmath35 and @xmath325 can be read from state @xmath49 in @xmath45 ( in fact , of cost exactly @xmath344 by definition of @xmath326 ) . as for the e - step @xmath345",
    ", it can be replaced by a transformation of cost @xmath346 since @xmath347 ( a prefix of @xmath348 ) and @xmath92 can be read to state @xmath49 in @xmath310 .",
    "now , it suffices to verify that @xmath349 , which is easily done if we observe that @xmath350 and @xmath351 .",
    "[ [ case-3-neither - r - nor - s - is - in - q . ] ] case 3 : neither @xmath4 nor @xmath305 is in @xmath38 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    without loss of generality , we may assume that @xmath4 occurs before @xmath305 along the @xmath76-labeled path from @xmath42 to @xmath43 .",
    "thus , the word @xmath76 factors as @xmath352 and the path in @xmath262 made of edges added to @xmath45 factors as @xmath353 since @xmath301 and these vertices are not in @xmath38 , each of the three factors @xmath354 is non - empty .",
    "moreover , @xmath355    let @xmath328 be the longest common suffix of @xmath356 and @xmath357 , so that @xmath358 , @xmath359 , @xmath360 is reduced and we have the following paths in @xmath262 , @xmath361 proposition  [ fact1 ] shows that @xmath333 , so we may assume that @xmath334 , @xmath362 and @xmath363 .",
    "there is a possibility that the words @xmath356 or @xmath364 be now empty ( if @xmath328 was in fact equal to @xmath356 or @xmath364 ) , but in that case , we are returned to the situation of cases 1 or 2 , with @xmath365 or @xmath366 .",
    "thus we may still assume that @xmath367 and @xmath368 .",
    "in particular , the word @xmath369 is reduced .",
    "then let @xmath310 and @xmath311 be defined by @xmath370 .",
    "then @xmath371 , so @xmath315 by proposition  [ prop unique ] .    as in case 2 , we use fact  [ fact2 ] to verify that the e - step @xmath372 can be replaced by a reduced expansion of cost @xmath373 since @xmath35 and @xmath92 are the maximal prefix and suffix of @xmath369 that can be read from and to state @xmath49 in @xmath45 . as for the e - step @xmath345",
    ", it can be replaced by a reduced expansion of cost @xmath374 since @xmath375 and @xmath376 are the maximal prefix and suffix of @xmath272 that can be read from and to state @xmath49 in @xmath310 .",
    "now , it suffices to verify that @xmath349 , which is easily done if we observe that @xmath377 and @xmath351 .",
    "[ charact ff ] let @xmath378 be finitely generated subgroups of @xmath20 and assume that @xmath379 . then @xmath0 is a free factor of @xmath19 if and only if the inverse automaton @xmath140 can be transformed in @xmath380 by a sequence of @xmath381 i - steps followed by @xmath382 reduced expansions .",
    "we first observe that @xmath0 is a free factor of @xmath19 if and only if there exist @xmath199 elements @xmath383 of @xmath65 such that @xmath384 .",
    "this follows from the fact that an @xmath4-element generating set in a rank @xmath4 free group , is a basis ( * ? ? ?",
    "i.3.5 ) .",
    "since @xmath291 is a well - order on the set of finite sequences of non - negative integers , we may consider a sequence @xmath385 of @xmath199 i - steps and reduced expansions leading from @xmath140 to @xmath380 , which is @xmath291-minimal .",
    "proposition  [ l06 ] , together with the stability of @xmath291 under concatenation , then shows that the i - steps in @xmath385 come before the reduced expansions .",
    "thus , @xmath205 if and only if @xmath140 yields @xmath380 by a sequence of @xmath386 i - steps followed by @xmath382 reduced expansions .",
    "it follows from the discussion on bases and spanning trees in fact  [ end of sec 12 ] that if @xmath140 embeds in @xmath380 , then @xmath0 is a free factor of @xmath19 .",
    "not every free factor of @xmath19 occurs that way , and those that do are called the _ graphical free factors of @xmath19 _ ( _ with respect to @xmath8 _ ) .",
    "it is easily verified that @xmath0 is a graphical free factor of @xmath19 if and only if @xmath140 yields @xmath380 by a sequence of reduced expansions .    [ coroll hffk ] let @xmath378 be finitely generated subgroups of @xmath20 and assume that @xmath379 . then @xmath0 is a free factor of @xmath19 if and only if the inverse automaton @xmath140 can be transformed by a sequence of @xmath381 i - steps into some @xmath387 such that @xmath388 and @xmath389 is a graphical free factor of @xmath19 with respect to @xmath8 .",
    "let us first assume that @xmath205 . by theorem  [ charact ff ] , for some @xmath381",
    ", @xmath140 can be taken to some @xmath387 by a sequence of @xmath386 i - steps , and @xmath387 can be taken to @xmath380 by a sequence of @xmath382 re - steps . since @xmath390 and an i - step or an re - step can increment the rank by at most one ( propositions  [ h istep ] and  [ h restep ] ) , @xmath389 must have rank exactly @xmath391 .",
    "conversely , suppose that a sequence of @xmath392 i - steps takes @xmath140 to @xmath387 in such a way that @xmath393 and @xmath387 embeds in @xmath380 . by propositions  [ h istep ] and  [ h restep ] again , we have @xmath394 , and hence @xmath205 .    [ rank incrementing ] we observe the following by - product of the proof of corollary  [ coroll hffk ] : if @xmath140 can be transformed into @xmath387 by a sequence of @xmath386 i - steps such that @xmath395 , then for every i - step @xmath396 occurring in that sequence , we have @xmath397 .",
    "we say that such an i - step is _ rank - incrementing_.      [ coroll hfff ] let @xmath0 be a finitely generated subgroup of @xmath20 , let @xmath399 be the set of letters in @xmath8 that occur in @xmath140 and let @xmath400 .",
    "then @xmath0 is a free factor of @xmath1 if and only if @xmath401 and @xmath140 can be transformed into a one - vertex automaton by a sequence of @xmath199 i - steps .    by corollary  [ coroll hffk ]",
    ", @xmath0 is a free factor of @xmath65 if and only if @xmath140 yields a one - vertex automaton @xmath77 by a sequence of @xmath402 i - steps , in such a way that @xmath79 has rank @xmath403 .",
    "now the set of letters occurring in such an automaton @xmath77 must be exactly @xmath399 , so @xmath404 and @xmath405 .",
    "we first consider the problem of deciding whether a given finitely generated subgroup @xmath0 of @xmath20 is a free factor of @xmath1 . with the notation of corollary  [ coroll hfff ] and remark  [ rank incrementing ] , the algorithm to decide whether @xmath6 consists of the following . we need to explore the sequences of rank - incrementing i - steps , starting from @xmath140 and of length @xmath406 .",
    "then @xmath6 if and only if one of the automata occurring at the end of one of these sequences has a single vertex .",
    "note that no automaton obtained after less than @xmath199 i - steps could be a single - vertex automaton .",
    "these automata can be viewed as nodes of a tree , rooted at @xmath140 , in which the children of a node are the automata produced by a rank - incrementing i - step .",
    "let @xmath17 be the number of states of @xmath140 .",
    "then every automaton occurring along this tree has at most @xmath17 states .    if @xmath45 is such an automaton , then @xmath45 has at most @xmath407 pairs of distinct vertices , and hence at most @xmath407 children , each of which has at most @xmath69 states .",
    "the computation of the children of @xmath45 is done by computing all the ( at most @xmath407 ) possible i - steps , computing the ranks of the corresponding subgroups and retaining only those of rank @xmath408 .",
    "it follows from fact  [ end of sec 12 ] that the cost of the computation of the children of @xmath45 is @xmath409",
    ".    moreover , there are at most @xmath410 nodes of the tree at depth at most @xmath411 , and the computation of these nodes and their children requires time @xmath412 . for each of the @xmath413 automata at depth @xmath199 ,",
    "the verification whether the automaton has a single node takes constant time , so the total cost of the algorithm is @xmath412 .    finally , if @xmath0 is given by a finite set of generators , of total length @xmath11 , we recall that computing @xmath414 takes time @xmath12 and that @xmath414 has at most @xmath11 states and @xmath11 edges .",
    "this discussion justifies the following statement .",
    "[ thm35 ] let @xmath8 be a fixed alphabet .",
    "then there is an algorithm which , given reduced words @xmath179 in @xmath65 with total length @xmath11 , decides whether the subgroup @xmath0 generated by the @xmath415 is a free factor of @xmath65 in time @xmath416 , where @xmath417 and @xmath399 is the set of letters in @xmath8 that occur in the @xmath415 .    the tree exploration described above can be speeded up by the following observation . if the automaton @xmath45 occurs in a sequence of rank - incrementing i - steps from @xmath140 to the one - vertex automaton @xmath418 ( a _ winning sequence _ ) , then @xmath419 , which implies that @xmath64 is a free factor of every subgroup of @xmath420 containing it .",
    "it follows that , if some i - step @xmath396 does not increment the rank , then @xmath45 does not occur in a winning sequence , that is , we may ignore the subtree below @xmath45 .",
    "the above discussion of complexity depends on a _ uniform cost assumption _",
    ", by which we assume that the elementary operations on @xmath8 ( reading or writing a letter , comparing two letters ) require unit time .",
    "in other words , we have been assuming that @xmath8 is fixed , and not part of the input .",
    "we will shortly consider the problem of deciding whether @xmath18 where both @xmath0 and @xmath19 are part of the input , and for the purpose of that discussion , we reconsider the algorithm and the complexity established above under the _ bit cost assumption _ : we let @xmath4 be the cardinality of @xmath8 , and we consider that each letter is identified by a bit string of length at most @xmath422 , so that the elementary operations on @xmath8 require @xmath423 units of time .",
    "let @xmath424 be the complexity of reducing a dual automaton on @xmath425 with at most @xmath11 vertices and @xmath11 edges .",
    "the computation of the automaton obtained by an i - step from an @xmath11-vertex automaton takes time at most @xmath424 . to compute the tree of rank - incrementing i - steps rooted at @xmath414",
    ", we need to compute the at most @xmath12 children of at most @xmath426 nodes , which requires time @xmath427 .",
    "finally , deciding whether an automaton has a single vertex takes constant time , so the total complexity of the algorithm is @xmath427 .",
    "we now give an upper bound of @xmath424 .",
    "let @xmath45 be an @xmath8-automaton with at most @xmath11 states and @xmath11 edges .",
    "the identifiers of states require space @xmath428 and the identifiers of letters require space @xmath423 .",
    "moreover , we assume that the set of states and the set @xmath425 are linearly ordered , and equipped with a constant time function .",
    "the automaton can be viewed as the lexicographically ordered list of all triples @xmath429 such that either @xmath27 and there is an @xmath44-labeled edge from state @xmath35 to state @xmath92 , or @xmath430 and there is a @xmath431-labeled edge from state @xmath92 to state @xmath35 .",
    "each entry of this list requires space @xmath432 , and the list contains at most @xmath11 entries .",
    "in particular , a complete scan of the list takes time @xmath433 .",
    "the reduction of @xmath45 consists in performing elementary reductions of type 1 as long as it is possible , and then elementary reductions of type 2 . to find out whether a type 1 reduction is possible",
    ", one needs to scan the list to find two ( consecutive ) cells of the form @xmath429 and @xmath434 , requiring @xmath433 . performing the identification consists in reading through the list , replacing every occurrence of @xmath130 by @xmath92 , and reordering the list : this takes time @xmath433 . to find out",
    "whether an elementary reduction of type 2 is possible , one scans the list to find a vertex @xmath35 such that there is a unique triple of the form @xmath429 in the list : again , this takes time @xmath433 . finally , performing the reduction consists simply in deleting the entries @xmath429 and @xmath435 in the list .",
    "[ thm - generalized35 ] there is an algorithm which , given an alphabet @xmath8 of size @xmath4 and reduced words @xmath437 with total length @xmath11 , decides whether the subgroup @xmath0 generated by the @xmath415 is a free factor of @xmath65 in time @xmath438 , where @xmath417 and @xmath399 is the set of letters in @xmath8 that occur in the @xmath415 .",
    "we now suppose that @xmath0 and @xmath19 are subgroups of @xmath65 , given by sets of generators with total length @xmath11 , and we consider the problem of deciding whether @xmath205 .",
    "the algorithm is the following : we first compute @xmath380 and we verify whether each generator of @xmath0 can be read as a loop at @xmath128 , the designated vertex of @xmath439 . if not , then @xmath0 is not contained in @xmath19 , and can not be a free factor .",
    "we now assume that @xmath440 and we compute a spanning tree @xmath183 of the graph @xmath380 .",
    "this spanning tree determines a basis @xmath7 of @xmath19 , indexed by the edges of @xmath380 that are not in @xmath183 ( see fact  [ end of sec 12 ] ) , and we express the given generators of @xmath0 in terms of this basis : it suffices to read the generators of @xmath0 as loops at the designated vertex in @xmath380 , and to record the sequence of edges traversed and not in @xmath183 . in particular , each generator of @xmath0 is expressed as a reduced word in @xmath441 , that is no longer than its expression as a reduced word in @xmath31 .",
    "we then use this expression of the generators of @xmath0 to construct @xmath442 , and the algorithm in section  [ sec algorithm ] to decide whether @xmath0 is a free factor of the ambient free group , namely @xmath19 .",
    "let us now discuss the complexity of this algorithm , assuming that @xmath0 and @xmath19 are given by tuples of generators of total length @xmath11 and that @xmath1 has rank @xmath4 .",
    "as discussed in the previous section , computing @xmath439 takes time @xmath443 .",
    "running a word @xmath444 in the automaton @xmath439 requires reading sequentially each letter of @xmath76 ( time @xmath423 ) and looking for the corresponding transition in the table representing the automaton ( time @xmath445 ) .",
    "if @xmath76 has length @xmath446 , this takes time @xmath447 . in order to decide whether @xmath0 is contained in @xmath19 , this",
    "must be done for every generator of @xmath0 , and since the total length of these generators is at most @xmath11 , this requires time @xmath443 .    assuming that @xmath0 is indeed contained in @xmath19 , the next step is to construct a spanning tree @xmath183 of @xmath414 , for instance by marking certain edges in the list representing @xmath439 .",
    "again , this can be done in time @xmath443 .",
    "the positively labeled edges of @xmath439 not in @xmath183 are in bijection with a basis @xmath7 of @xmath19 .",
    "in particular , the rank of @xmath19 is at most @xmath11 , an upper bound of the number of edges in @xmath439 .",
    "the elements of @xmath7 , seen as words in @xmath65 , consist of the label of a path in @xmath183 , followed by the label of an edge not in @xmath183 , followed by the label of a path in @xmath183 . in particular , their length is at most twice the number of vertices of @xmath439 plus one , that is @xmath214 .",
    "but we do not need to compute these words : it suffices to number ( from @xmath448 to @xmath449 ) the positively labeled edges not in @xmath183 .",
    "then , for each generator @xmath328 of @xmath0 , reading @xmath328 in @xmath439 from state @xmath128 and keeping track of the ( identifier of the ) edges traversed that are not in @xmath183 , provides an expression of @xmath328 in @xmath7 .",
    "moreover , the total length of the expression of the generators of @xmath0 in this basis of @xmath19 is at most @xmath11 .      given tuples of generators for subgroups @xmath0 and @xmath19 of @xmath65 , with total length @xmath11 , one can decide whether the subgroup @xmath0 is a free factor of @xmath19 in time @xmath450 , where @xmath451 .",
    "[ alternative algo h leff k ] corollary  [ coroll hffk ] suggests an alternative algorithm to decide whether @xmath205 : one may explore the sequences of rank - incrementing i - steps of length at most @xmath452 , starting from @xmath140 and producing only representations of subgroups contained in @xmath19 .",
    "each @xmath387 occurring in such a sequence must be checked to verify whether it can be embedded in @xmath380 : if it can , then @xmath205 , and if it can not , then the automata produced by a rank - incrementing i - step from it must be computed and checked in their turn .      by definition of a free factor",
    "( see the introduction ) , @xmath205 if there exists a basis @xmath260 of @xmath0 and a disjoint set @xmath453 such that @xmath454 is a basis of @xmath19 . in that case , the subgroup generated by @xmath455 is called a _ complement of @xmath0 in @xmath19_. it is easy to see that this complement is not uniquely defined .",
    "if @xmath0 is indeed a free factor of the free group @xmath1 , the algorithm described in section  [ sec algorithm ] also provides a sequence of rank - incrementing i - steps taking @xmath140 to @xmath418 , where @xmath399 is the set of letters of @xmath8 that occur in the generators of @xmath0 .",
    "repeated applications of proposition  [ h istep ] then yield a basis of @xmath420 containing a basis of @xmath0 , and hence a complement of @xmath0 in @xmath420 .",
    "we can be a little more precise .",
    "if @xmath45 is a reduced inverse automaton , let @xmath456 , the _ @xmath49-diameter _ of @xmath45 , be the longest shortest path in @xmath45 from @xmath49 to a state , that is @xmath457 then proposition  [ h istep ] shows that if @xmath225 and @xmath458 , then a complement of @xmath64 is generated by a word of length at most @xmath459 .",
    "it is interesting to observe that this is a graphical analogue  and a minor improvement  of federer and jnsson s result ( see ( * ? ? ?",
    "i.2.26 ) ) mentioned in section  [ whitehead ] .",
    "indeed , if @xmath461 are a set of generators of @xmath0 , then every edge of @xmath140 is on a loop at @xmath49 labeled by some @xmath415 , and hence @xmath462 .",
    "let us now consider the problem of constructing a basis of a complement of @xmath0 in @xmath19 , where @xmath0 and @xmath19 are given finitely generated subgroups of @xmath65 and @xmath205 .",
    "the algorithm described in remark  [ alternative algo h leff k ] ( based on corollary  [ coroll hffk ] ) shows that one can construct effectively a graphical free factor @xmath389 of @xmath19 such that @xmath463 . as above , in view of proposition  [ h istep ] , the same algorithm can produce a basis of a complement of @xmath0 in @xmath389 consisting of words of length at most @xmath464 .",
    "there remains to construct a basis for a complement of @xmath389 in @xmath19 .    in view of fact",
    "[ end of sec 12 ] ( and using the notation therein ) , one can find a ( basis of a ) complement of @xmath389 in @xmath19 by considering a spanning tree of @xmath387 , extending it to a spanning tree @xmath183 of @xmath380 , and considering the elements @xmath187 associated with edges of @xmath380 that are neither in @xmath387 nor in @xmath183 .",
    "in particular , the words @xmath187 have length at most @xmath465 .",
    "thus we have the following statement .",
    "let @xmath378 be finitely generated subgroups of @xmath65 . if @xmath466 , then one can construct effectively a basis for a complement of @xmath0 in @xmath19 , consisting of words of length at most @xmath467 .",
    "the structure of automorphic conjugacy in the free group of rank two . in : _",
    "proc . special session on interactions between logic , group theory and computer science _ , contemp .",
    "mathematics * 349 * ( 2004 ) .",
    "sidelnikov , m.a .",
    "cherepnev , v.y .",
    "systems of open distribution of keys on the basis of non - commutative semigroups , _ ross .",
    "nauk dokl .",
    "_ * 332 - 5 * ( 1993 ) .",
    "english translation : _ russian acad .",
    "_ * 48 - 2 * ( 1994 ) 383 - 386 ."
  ],
  "abstract_text": [
    "<S> we revisit the problem of deciding whether a finitely generated subgroup @xmath0 is a free factor of a given free group @xmath1 . </S>",
    "<S> known algorithms solve this problem in time polynomial in the sum of the lengths of the generators of @xmath0 and exponential in the rank of @xmath1 . </S>",
    "<S> we show that the latter dependency can be made exponential in the rank difference @xmath2 , which often makes a significant change .        </S>",
    "<S> nous revenons sur la question de dcider si un sous - groupe finiment engendr @xmath0 est facteur libre dun groupe libre donn @xmath1 . on trouve dans la littrature des algorithmes qui rsolvent ce problme en temps polynomial en la somme des longueurs des gnrateurs de @xmath0 , et exponentiel en le rang de @xmath1 . </S>",
    "<S> nous montrons que lon peut remplacer la dpendance exponentielle en @xmath3 par une dpendance exponentielle en la diffrence @xmath2 , ce qui change souvent les choses de faon considrable .    the combinatorial aspects of group theory have attracted the attention of theoretical computer scientists for a long time , and for a variety of reasons . </S>",
    "<S> there is no need to recall the importance of the concept of monoid ( e.g. free , finite ) in the theory of automata since the foundational results of schtzenberger and eilenberg ( see the books @xcite ) , and groups form a special case of monoids that sometimes play an important role in purely language- and monoid - theoretic questions ( e.g. the type ii conjecture , see @xcite for a survey ) . </S>",
    "<S> algorithmic questions ( the word problem , the conjugacy problem , . ) have been very influential in group theory throughout the 20th century , starting from the work of dehn , and specialists of combinatorics on words find a particular interest in the challenges posed by the analogous combinatorics of the free group . </S>",
    "<S> recent work on important non - commutative groups like the thompson group and the so - called automata groups strongly relies on the formalism of finite state automata ( see @xcite for recent examples ) . </S>",
    "<S> it is already a classical result that these automata - theoretic and combinatorial points of view converge in the ( admittedly simpler ) study of the subgroups of free groups , this is central in the algorithmic problem tackled here and is discussed in detail in the first part of this paper .    </S>",
    "<S> let us also mention another reason for the recent multiplication of research projects on the boundary between computer science and combinatorial group theory . </S>",
    "<S> public - key cryptography relies heavily on group theory : sometimes finite groups such as the groups of units in modular arithmetic , or the groups of rational points on elliptic curves over finite fields , sometimes infinite non - commutative groups like the braid groups ( see for instance @xcite and many others ) . at any rate , </S>",
    "<S> the design of more robust cryptographic schemes and the attack of such schemes rely on a deeper understanding of the combinatorial and algorithmic properties of non - commutative groups .    </S>",
    "<S> as mentioned above , the combinatorial and algorithmic problems concerning free groups are of special interest . </S>",
    "<S> free groups are archetypal groups , whose structure is far from being totally elucidated , and the efficient solution of standard problems in their context can shed some light on the possible solution of the same problems in more complex groups </S>",
    "<S> . moreover , the solution of algorithmic problems in free groups may be more attainable since we can use the resources of combinatorics on words and automata theory .    </S>",
    "<S> we now present the specific algorithmic problem addressed in this paper . for the classical facts about free groups recorded below without a reference , we refer the reader to the book by lyndon and schupp @xcite . </S>",
    "<S> it is well - known that the minimal sets of generators , or _ bases _ , of a free group @xmath1 all have the same cardinality , called the _ rank _ of @xmath1 </S>",
    "<S> . moreover , if @xmath1 has finite rank @xmath4 , every @xmath4-element generating set of @xmath1 is a basis , see ( * ? ? ? </S>",
    "<S> * prop . </S>",
    "<S> i.3.5 ) . in this paper </S>",
    "<S> , we consider only finite rank free groups .    </S>",
    "<S> let @xmath0 be a subgroup of a free group @xmath1 , written @xmath5 . </S>",
    "<S> then @xmath0 itself is a free group whose rank may be greater than the rank of @xmath1 . </S>",
    "<S> we say that @xmath0 is a _ free factor _ of @xmath1 , written @xmath6 , if there exist bases @xmath7 of @xmath0 and @xmath8 of @xmath1 such that @xmath9 ( free factors can be defined in all groups by a universal property , but the operational definition given here is sufficient for the purpose of this study ) . </S>",
    "<S> it is well known that one can decide whether a given finite rank subgroup @xmath5 is a free factor of @xmath1 , but the known algorithms have a rather high time complexity . </S>",
    "<S> more precisely , the best of these algorithms require time that is polynomial in the size of @xmath0 and exponential in the rank of @xmath1 , see section  [ whitehead ] below for the details . here , the size of @xmath0 is taken to be the sum of the lengths of a finite set of generators of @xmath0 in @xmath1 .    </S>",
    "<S> we propose a new algorithm to decide whether a given finitely generated subgroup @xmath0 is a free factor of the free group @xmath1 , which is polynomial in the size of @xmath0 and exponential in the rank difference between @xmath1 and @xmath0 . in many instances , this represents a substantial advantage over exponential dependency in the rank of @xmath1 .    </S>",
    "<S> our algorithm relies essentially on a careful analysis of the construction of the _ graph representation _ of @xmath0 . </S>",
    "<S> more precisely , once a basis @xmath8 of the ambient free group @xmath1 is fixed , there is a natural and elegant representation of the finitely generated subgroups of @xmath1 by @xmath8-labeled graphs ( or inverse automata ) . </S>",
    "<S> this construction  a graphical representation of ideas that go back to the early part of the twentieth century ( * ? ? ? * chap . </S>",
    "<S> 11 )  was made explicit by serre @xcite and stallings @xcite . </S>",
    "<S> it has been used to great profit by many authors since the late 1970s , see @xcite for recent examples . given a finite set of generators of @xmath0 ( </S>",
    "<S> as reduced words over the alphabet @xmath10 ) , the graph representation of @xmath0 can be effectively constructed ( see @xcite , @xcite , ) . </S>",
    "<S> the number of vertices and edges of this graph is bounded above by @xmath11 , the sum of the lengths of a set of generators of @xmath0 , and the whole representation can be computed in time at most @xmath12 ( in fact , in time @xmath13 according to a recent announcement , @xmath14 is the least integer @xmath15 such that the @xmath15-th iterate of the @xmath16 function of @xmath17 is at most 1 . </S>",
    "<S> the growth of @xmath14 is so slow that it can be considered a constant for all practical purposes  ] by touikan  @xcite ) . </S>",
    "<S> we discuss this representation in more detail in section  [ representation ] below , and we show in sections  [ careful ] and [ sec deciding ] how to use it to decide more efficiently the free factor relation .    </S>",
    "<S> it is interesting to note that our algorithm is the first to be expressed entirely in terms of the graph representation of @xmath0 . </S>",
    "<S> let us also emphasize that we do not claim that our algorithm is optimal . </S>",
    "<S> it is an open question whether one can decide the free factor relation @xmath18 in time polynomial both in the size of @xmath0 and in the size , or the rank of @xmath19 . </S>"
  ]
}
{
  "article_text": [
    "explicit strong stability preserving ( ssp ) runge  kutta methods were developed for the time evolution of hyperbolic conservation laws @xmath0 , with discontinuous solutions @xcite .",
    "these works studied total variation diminishing ( tvd ) spatial discretizations that can handle discontinuities .",
    "the spatial discretizations used to approximate @xmath1 were carefully designed so that when the resulting system of odes @xmath2 ( where @xmath3 is a vector of approximations to @xmath4 , @xmath5 ) is evolved in time using the _ forward euler method _ , the solution at time @xmath6 satisfies a strong stability property of the form @xmath7 under a step size restriction @xmath8 the term @xmath9 can represent , as it did in @xcite the total variation semi - norm , or indeed any other semi - norm , norm , or convex functional , as determined by the design of the spatial discretization .",
    "these spatial discretizations satisfy the strong stability property @xmath10 _ when coupled with the forward euler time discretization _ , but in practice a higher order time integrator , that will still satisfy this property , is desired . to accomplish this",
    ", we attempt to re - write a higher order time discretization as a convex combination of forward euler steps , so that any convex functional property that is satisfied by the forward euler method will still be satisfied by the higher order time discretization .",
    "an @xmath11-stage explicit runge  kutta method can be written in the form @xcite , @xmath12 if all the coefficients @xmath13 and @xmath14 are non - negative , and a given @xmath13 is zero only if its corresponding @xmath14 is zero , then each stage can be rearranged into a convex combination of forward euler steps @xmath15 where if any of the @xmath16 s are equal to zero , the corresponding ratio is considered infinite .",
    "the last inequality above follows from the strong stability conditions and @xmath17 and the consistency condition @xmath18 . from this",
    "we can conclude that whenever the explicit runge  kutta method can be decomposed into convex combinations of forward euler steps , then any convex functional property satisfied by forward euler will be _ preserved _ by the higher - order time discretizations , perhaps under a different time - step restriction @xmath19 @xcite .",
    "thus , this type of decomposition where @xmath20 is clearly a sufficient condition for strong stability preservation .",
    "it has also been shown @xcite that this convex combination condition is necessary for strong stability preservation .",
    "if a method does not have a convex combination decomposition into forward euler steps we can find some ode with some initial condition such that the forward euler condition is satisfied but the method does not satisfy the strong stability condition for any positive time - step @xcite .",
    "methods that can be decomposed like this with with @xmath21 are called strong stability preserving ( ssp ) , and the coefficient @xmath22 is known as the _ ssp coefficient _ of the method .",
    "ssp methods guarantee the strong stability of the numerical solution for any ode and any convex functional provided only that the forward euler condition is satisfied under a time step .",
    "this is a very strong requirement that leads to severe restrictions on the allowable order of ssp methods , and on the size of the allowable time step @xmath23 we seek high order ssp runge  kutta methods with the largest allowable time - step .",
    "the forward - euler time step @xmath24 is a property of the spatial discretization method only , and so our aim in searching for time - stepping methods that preserve the strong stability property is to maximize the _ ssp coefficient _",
    "@xmath22 of the method .",
    "a more relevant quantity may be the total cost of the time evolution , which in our case translates into the allowable time step relative to the number of function evaluations at each time - step ( typically the number of stages of a method ) .",
    "for this purpose we define the _ effective ssp coefficient _ @xmath25 where @xmath11 is the number of stages .",
    "this value allows us to compare the efficiency of explicit methods of a given order .",
    "it has been shown @xcite that all explicit @xmath11-stage runge  kutta methods have an ssp bound @xmath26 , and therefore @xmath27 , but this upper bound is not always attained .",
    "in @xcite it was shown that explicit ssp runge  kutta methods can not exist for order @xmath28 however , in the special case where we consider only linear autonomous problems , explicit ssp runge  kutta methods exist for any _ linear _ order @xmath29 @xcite .",
    "the linear and nonlinear order conditions are equivalent up to and including order @xmath30 , so in this work we consider explicit ssp runge  kutta methods that have nonlinear order @xmath31 and @xmath32 , and have higher linear orders @xmath33 . in section [ sec : background ]",
    "we review the ssp properties of explicit runge  kutta methods and discuss the linear and nonlinear order conditions . using these order conditions and",
    "optimization problem described in @xcite , in section [ sec : optimization ] we describe the optimization code in matlab ( based on @xcite ) used to find explicit runge  kutta methods that have @xmath34 with optimal ssp coefficient . in section",
    "[ sec : optimal ] we list some of the new methods and their effective ssp coefficients , and in section [ sec : test ] we demonstrate the performance of these methods on a selection of test problems .",
    "strong stability preserving methods were first developed by shu @xcite for use with total variation diminishing spatial discretizations . in these works , the authors presented second and third order methods that have @xmath35 .",
    "the explicit ssp runge  kutta method of order @xmath36 @xmath37 and the @xmath38 method @xmath39 these methods were proven optimal in @xcite .",
    "it was shown in @xcite that no four stage fourth order explicit runge  kutta methods exist with positive ssp coefficient . by considering methods with @xmath40 , fourth order methods with order @xmath32",
    "have been found .",
    "notable among these is the @xmath41 method with @xmath42 ( @xmath43 ) in @xcite @xmath44 and the @xmath45 method with @xmath46 ( @xmath47 ) in @xcite @xmath48 it was shown @xcite that no methods of order @xmath49 with positive ssp coefficients can exist .",
    "this restrictive order barriers on explicit ssp runge  kutta methods stem in part from the nonlinearity of the odes . for order of accuracy on linear autonomous ode systems , explicit ssp runge ",
    "kutta methods need only satisfy a smaller set of order conditions .",
    "if we require only that the method have high linear order ( @xmath29 ) , then the order barrier is broken and explicit runge  kutta methods with positive ssp coefficients exist for arbitrarily high linear orders .",
    "optimally contractive explicit runge  kutta methods were studied by kraaijevanger in @xcite , where he gives optimal _ linear _ methods for many values of @xmath11 and @xmath50 , including @xmath51 , and @xmath52 for any @xmath11 .",
    "these methods are interesting because their ssp coefficients serve as upper bounds for nonlinear methods , but they may also be useful in their own right .",
    "although ssp methods were first developed for nonlinear problems , the strong stability preserving property can be useful for linear problems such as maxwell s equations and linear elasticity .",
    "first and second methods that have @xmath11 stages have been shown to attain the theoretical bound @xmath53 .",
    "methods of order @xmath29 with @xmath54 and @xmath55 also exist with @xmath53 .",
    "these methods can be found in @xcite , and are given here in their canonical shu - osher form : the family of @xmath11-stage , linear order @xmath56 methods has @xmath57 and @xmath58 : @xmath59 where the coefficients @xmath60 of the final stage of the @xmath11-stage method are given iteratively by @xmath61 starting from the coefficients of the @xmath62-stage , first order method @xmath63 and @xmath64 .",
    "the family of @xmath11-stage , linear order @xmath65 methods has @xmath35 and @xmath66 : @xmath67 here the coefficients @xmath60 of the final stage of the @xmath11-stage method are given iteratively by @xmath68 starting from the coefficient of the forward euler method @xmath69 .    however , all these methods with high linear order @xmath29 have low nonlinear order @xmath30 .",
    "the idea that we pursue in this paper is the construction of explicit ssp runge  kutta methods that have a high linear order @xmath70 while retaining the highest possible nonlinear order @xmath32 .",
    "we also consider methods with @xmath31 and @xmath71 for comparison .",
    "the idea behind these methods is that they would be the best possible methods ( in terms of ssp coefficient and order ) for linear problems , without compromising order when applied to nonlinear problems .",
    "the shu - osher form of an explicit runge  kutta method , given in , is most convenient for observing the ssp coefficient .",
    "however , this form is not unique , and not the most efficient form to use for the optimization procedure @xcite .",
    "the butcher form of the explicit method given by @xmath72 ( where the coefficients @xmath73 are place into the matrix @xmath74 and @xmath75 into the row vector @xmath76 ) is unique , so rather than perform a search for the optimal convex combination of the shu - osher form , we define the optimization problem in terms of the butcher coefficients . the conversion from the shu - osher form to butcher form , and from an optimal butcher form to the canonical shu - osher form is discussed in @xcite .    we follow the approach developed by david ketcheson and successfully used in @xcite : we search for coefficients @xmath74 and @xmath76 that maximize the value @xmath77 subject to constraints : @xmath78 where @xmath79 are the order conditions . after this optimization",
    "we have the coefficients @xmath74 and @xmath76 and an optimal value @xmath80 that define the method .",
    "the order conditions @xmath81 appear as the equality constraints on the optimization problem . in this work",
    ", we consider methods that have @xmath31 and @xmath32 but have higher linear order @xmath70 . in this subsection",
    ", we list these order conditions .    *",
    "linear order conditions : * given a runge  kutta method written in the butcher form with coefficients @xmath74 and @xmath76 ( and @xmath82 where @xmath83 is a vector of ones ) , the order conditions that guarantee @xmath29 order accuracy for a linear problem can be simply expressed as @xmath84    * nonlinear order conditions : * if we want a method to demonstrate the correct order of accuracy for nonlinear problems , the first and second order conditions are the same as above : @xmath85 a method that satisfies these conditions will be second order for both linear and nonlinear problems .",
    "two additional conditions are required for third order accuracy : @xmath86 note that when the first of these conditions is satisfied , the second condition is equivalent to @xmath87 , which is the linear third order condition .",
    "four more conditions are required for the method to be fourth order for a nonlinear problem @xmath88 note that the first three conditions together imply the fourth order linear order condition @xmath89    in this work we consider the nonlinear order conditions only up to @xmath32 because it is known that there are no explicit ssp runge  kutta methods greater than fourth order , but we consider higher order linear order conditions @xmath70 .",
    "using david ketcheson s matlab optimization code @xcite with our modified order conditions ( described in section [ orderconditions ] ) we produce the optimal linear / nonlinear ( lnl ) methods in this section .",
    "this    r0.625    code formulates the optimization problem in section [ sec : optimization ] in matlab and uses fmincon to find the coefficients @xmath74 and @xmath76 that yield the largest possible @xmath22 .",
    "we set the tolerances on fmincon to @xmath90 .",
    "we used this code to generate methods with @xmath91 and @xmath92 .",
    "we compare these methods with @xmath30 `` linear '' methods that we generated and matched to known optimal methods .",
    "our primary interest is the size of the ssp coefficient for each method .",
    "we denote the ssp coefficient for a method with @xmath11 stages , linear order @xmath29 and nonlinear order @xmath93 method @xmath94 .",
    "the ssp coefficients for the @xmath31 methods with a given number of stages and linear order are the same as for the corresponding linear methods , ( i.e. @xmath95 ) .",
    "this indicates that , for these values of @xmath11 and @xmath29 the additional condition @xmath96 needed for nonlinear third order does not pose additional constraints on the strong stability properties of the method .",
    "table [ tab : p2p3 ] shows the ssp coefficients of the @xmath30 and @xmath31 methods with @xmath97 .",
    "the coefficients for @xmath98 are known to be optimal because they match the linear threshold in kraiijevanger s",
    "paper @xcite .",
    "r0.67    table [ tab : p4 ] shows the ssp coefficients of the @xmath32 methods for @xmath97 .",
    "in bold are the coefficients that match those of the @xmath30 methods .",
    "in general , as we increase the number of stages the ssp coefficients for the @xmath32 methods approach those of the @xmath30 methods , as shown in figure [ fig : p2p4a ] .",
    "the tables clearly show that the size of the ssp coefficient depends on the relationship between @xmath29 and @xmath11 , so it is illuminating to look at the methods along the diagonals of these tables . clearly , for @xmath54 methods we have an optimal value of @xmath35 and @xmath66 .",
    "the @xmath30 and @xmath31 methods all attain this optimal value , but for @xmath32 we have @xmath99 and @xmath100 . however , once we get to a high enough number of stages , all the methods with @xmath32 and @xmath101 that have @xmath35 and @xmath66 .",
    "figure [ fig : p2p4b ] shows that for the linear methods ( @xmath30 ) the ssp coefficient is fixed for @xmath102 ( blue dotted line ) , @xmath103 ( red dotted line ) , @xmath104 ( green dotted line ) , @xmath105 ( black dotted line ) , and @xmath106 ( cyan dotted line ) , and that the ssp coefficient of the corresponding @xmath32 methods ( solid lines ) approach these as the number of stages increases .",
    "( dotted line ) and @xmath32 ( solid line ) for @xmath102 ( blue ) , @xmath103 ( red ) , @xmath104 ( green ) , @xmath105 ( black ) , and @xmath106 ( cyan ) .",
    "the ssp coefficient of the @xmath32 methods ( solid lines ) approach those of the corresponding @xmath30 method as the number of stages increases , scaledwidth=113.0% ]     ( dotted line ) and @xmath32 ( solid line ) for @xmath102 ( blue ) , @xmath103 ( red ) , @xmath104 ( green ) , @xmath105 ( black ) , and @xmath106 ( cyan ) .",
    "the ssp coefficient of the @xmath32 methods ( solid lines ) approach those of the corresponding @xmath30 method as the number of stages increases , scaledwidth=113.0% ]    it is interesting to note that the linear stability regions of the @xmath30 , @xmath31 methods are generally identical .",
    "the @xmath32 methods have stability regions that are virtually identical to those of the linear methods when the ssp coefficient is identical .",
    "in addition , methods with @xmath54 and @xmath32 all have the same stability regions as the corresponding linear methods , which is not surprising as the stability polynomial of @xmath54 is unique . for the rest of the methods",
    ", we observe that for a given number of stages @xmath11 , as the linear order @xmath29 increases the linear stability regions of the @xmath32 methods look closer to those of the linear methods .",
    "a nice illustration of this is the family of @xmath107 methods , shown in figure [ fig : linstab2 ] .",
    "it is known in the literature that some methods with nonlinear orders @xmath31 and @xmath32 achieve the linear threshold value .",
    "a nice example of this is ketcheson s ssp runge ",
    "kutta method of @xmath108 , @xmath109 , which achieves the threshold value @xmath110 .",
    "this suggests that the linear order conditions are very significant to the value of the ssp coefficient .",
    "indeed , we see this relationship in tables [ tab : p2p3 ] and [ tab : p4 ] , as we move right from column to column we see a significant drop in ssp coefficient . for each application",
    ", one must decide if a higher linear order is valuable , as we pay a price for requiring additional @xmath29 .",
    "however , once one has decided that the cost of a higher linear order is useful , there is no penalty in terms of ssp coefficient for requiring a higher nonlinear order @xmath31 and , in most cases , little reason not to use @xmath32 .",
    "our results show that if one wishes to use a method with high linear order @xmath70 , then requiring @xmath31 or even @xmath32 rather than the standard @xmath30 is not usually associated with significant restriction on the ssp coefficient .",
    "this can be beneficial in cases where the solution has linear and nonlinear components that need to be accurately captured simultaneously , or in different regions , or at different time - levels , so that the use of an ssp method that has optimal nonlinear order and higher linear order would be best suited for all components of the solution .     for linear ( blue )",
    ", @xmath31 ( red ) and @xmath32 ( green ) methods .",
    "the @xmath32 methods approach the @xmath31 and @xmath30 methods as @xmath29 increases.,title=\"fig : \" ]   for linear ( blue ) , @xmath31 ( red ) and @xmath32 ( green ) methods .",
    "the @xmath32 methods approach the @xmath31 and @xmath30 methods as @xmath29 increases.,title=\"fig : \" ] +   for linear ( blue ) , @xmath31 ( red ) and @xmath32 ( green ) methods .",
    "the @xmath32 methods approach the @xmath31 and @xmath30 methods as @xmath29 increases.,title=\"fig : \" ]   for linear ( blue ) , @xmath31 ( red ) and @xmath32 ( green ) methods .",
    "the @xmath32 methods approach the @xmath31 and @xmath30 methods as @xmath29 increases.,title=\"fig : \" ] +",
    "in this section , the optimized lnl methods described in section [ sec : optimal ] are tested for convergence and ssp properties .",
    "first , we test these methods for convergence on both odes and pdes to confirm that the new methods exhibit the desired linear and nonlinear orders .",
    "next , we study the behavior of these methods in conjunction with a higher order weno spatial discretizations , and show that although the weno method is nonlinear , when applied to a linear smooth problem the higher order linear order @xmath29 is beneficial .",
    "on the other hand , for nonlinear problems , both with shocks and without , the higher order nonlinear order @xmath32 is advantageous . finally , the lnl methods are tested on linear and nonlinear problems with spatial discretizations that are provably total variation diminishing ( tvd ) and positivity preserving .",
    "we show that for the linear case , the observed time - step for the time stepping method to preserve the tvd property is well - predicted by the theoretical ssp coefficient , while for positivity and for the nonlinear problem the theoretical time - step serves as a lower bound .",
    "* example 1 : nonlinear ode convergence study . *",
    "the van der pol problem is a nonlinear system of odes : @xmath111 we use @xmath112 and initial conditions @xmath113 .",
    "this was run using @xmath114 ( 9,6,2 ) , ( 9,6,3 ) , ( 9,6,4 ) , ( 10,9,2 ) , ( 10,9,3 ) , and ( 10,9,4 ) lnl runge  kutta methods to final time @xmath115 , with @xmath116 where @xmath117 .",
    "the exact solution ( for error calculation ) was calculated by matlab s ode45 routine with tolerances set to abstol=@xmath90 and reltol=@xmath118 . in figure",
    "[ fig : vdpconv ] we show that the @xmath119 of the errors in the first component vs. the @xmath119 of the number of points .",
    "the slopes of these lines ( i.e the orders ) are calculated by matlab s polyfit function . as expected",
    ", the rate of convergence follows the nonlinear order of the method .",
    "in fact , we observe that a higher linear order is of no benefit at all for this example .",
    "* example 2 : pde convergence study .",
    "* in this study we solve the linear advection equation with sine wave initial conditions and periodic boundaries @xmath120   \\\\",
    "\\nonumber u(0,x ) & = & \\sin(4\\pi x ) \\ ; \\ ; \\ ; \\ ; u(t,0)=u(t,1 )   \\nonumber\\end{aligned}\\ ] ] the fourier spectral method was used to discretize in space using @xmath121 points . the exact solution to this problem",
    "is a sine wave with period @xmath122 that travels in time , so the fourier spectral method gives us an exact solution in space @xcite once we have two points per wavelength , allowing us to isolate the effect of the time discretization on the error .",
    "we run this problem for five methods with orders @xmath123 , @xmath124 .",
    "our final time is @xmath125 , and the time step @xmath126 , where @xmath127 .",
    "errors are computed at the final time by comparison to the exact solution .",
    "figure [ fig : spectral ] shows the @xmath119 of the @xmath128 norm of the errors vs. @xmath119 of the number of points .",
    "the slopes of these lines ( i.e the orders ) are calculated by matlab s polyfit function , and demonstrate that the methods achieved the expected linear convergence rates .",
    ", on the right @xmath32 . in both cases , the linear order dominates.,title=\"fig : \" ] , on the right @xmath32 . in both cases , the linear order dominates.,title=\"fig : \" ]    * example 3 : linear advection with weno * we repeat the example above , this time using the 15th order ( @xmath129 ) weno method to discretize in space with @xmath127 for @xmath130 .",
    "the weno method is a nonlinear method , so that even if the pde is linear , the resulting system of odes is not .",
    "however , we can decompose the weno method into a linear part and a nonlinear correction term that suppresses oscillations . in theory ,",
    "when the equation is linear and solution is smooth , the weno method is close to linear .",
    "we test this problem with selected lnl runge ",
    "kutta time discretizations of linear order @xmath131 and @xmath132 , and with the shu - osher ssp runge  kutta ( 3,3 ) and ketcheson s ssp runge  kutta ( 10,4 ) . as above",
    ", our final time is @xmath125 , and the time step @xmath126 , where @xmath127 .",
    "errors are computed at the final time by comparison to the exact solution .",
    "figure [ fig : linweno ] shows the @xmath119 of the @xmath128 norm of the errors vs. @xmath119 of the number of points , and the slopes of these lines ( i.e the orders ) as calculated by matlab s polyfit function .",
    "we observe that the linear order dominates for this problem , which indicates that in regions where the problem is primarily linear and the solution smooth , the new lnl methods with higher linear orders could be of benefit .",
    "* example 4 : burgers equation with weno .",
    "* in the previous example we demonstrated the advantages of using a time - stepping method with higher @xmath29 with weno in the case of a linear , smooth problem . in this example",
    ", we show how a higher nonlinear order @xmath50 is beneficial when dealing with a nonlinear equation with possibly discontinuous solution .",
    "consider burgers equation with symmetric sine wave initial conditions and periodic boundaries .",
    "@xmath133   \\\\",
    "\\nonumber u(0,x ) & = & \\sin(2\\pi x ) \\ ; \\ ; \\ ; \\ ; u(t,0)=u(t,1 ) .",
    "\\nonumber\\end{aligned}\\ ] ] this problem develops a standing shock .",
    "we use a 15th order weno scheme with @xmath134 points in space , and test the lnl time - stepping methods of linear order @xmath135 and nonlinear order @xmath136 .",
    "we use a time - step @xmath137 where @xmath138 .    in figure [",
    "fig : burgersweno ] we show the absolute values of the pointwise errors at spatial location @xmath139 for @xmath140 ( top ) and for @xmath141 ( bottom ) .",
    "these errors are shown before the shock forms ( at time @xmath142 , solid line ) and after the shock forms ( at time @xmath143 , dotted line ) .",
    "observe that for smaller number of spatial points the errors decays very fast , however once we reach a spatial refinement that is small enough we see that the methods with higher @xmath50 have significantly smaller errors . if we consider only @xmath144 points , we see the nonlinear order generally dominating : the linear methods feature second order convergence both pre- and post - shock , while the @xmath32 methods are fourth order pre - shock , but jump to twelfth order post - shock ( probably capturing the high order weno behavior )",
    ". taken together with the problem in example 3 , this suggests that using a method with high linear and high nonlinear order may be beneficial in examples that have smooth and linear regions and non - smooth nonlinear regions .    , before ( solid lines ) and after ( dotted line ) the shock .",
    "the top figures show the @xmath119 of the errors vs. the number of points @xmath134 .",
    "the bottom plots show the @xmath119 of the errors vs. @xmath141 for @xmath144 .",
    "the time stepping methods use are @xmath145 and @xmath146 with nonlinear orders @xmath30 ( red ) and @xmath32 ( blue ) .",
    "clearly , methods with higher nonlinear order in time give smaller errors.,title=\"fig : \" ] , before ( solid lines ) and after ( dotted line ) the shock .",
    "the top figures show the @xmath119 of the errors vs. the number of points @xmath134 .",
    "the bottom plots show the @xmath119 of the errors vs. @xmath141 for @xmath144 .",
    "the time stepping methods use are @xmath145 and @xmath146 with nonlinear orders @xmath30 ( red ) and @xmath32 ( blue )",
    ". clearly , methods with higher nonlinear order in time give smaller errors.,title=\"fig : \" ] + , before ( solid lines ) and after ( dotted line ) the shock .",
    "the top figures show the @xmath119 of the errors vs. the number of points @xmath134 .",
    "the bottom plots show the @xmath119 of the errors vs. @xmath141 for @xmath144 . the time stepping methods use",
    "are @xmath145 and @xmath146 with nonlinear orders @xmath30 ( red ) and @xmath32 ( blue ) .",
    "clearly , methods with higher nonlinear order in time give smaller errors.,title=\"fig : \" ] , before ( solid lines ) and after ( dotted line ) the shock .",
    "the top figures show the @xmath119 of the errors vs. the number of points @xmath134 .",
    "the bottom plots show the @xmath119 of the errors vs. @xmath141 for @xmath144 .",
    "the time stepping methods use are @xmath145 and @xmath146 with nonlinear orders @xmath30 ( red ) and @xmath32 ( blue ) .",
    "clearly , methods with higher nonlinear order in time give smaller errors.,title=\"fig : \" ]    * example 5 : positivity and tvd time - step for a linear advection equation with first order finite difference in space .",
    "* consider the linear advection equation with a step function initial condition : @xmath147 on the domain @xmath148 $ ] with periodic boundary conditions .",
    "we used a first - order forward difference to semi - discretized this problem on a grid with @xmath149 points and evolved it to a final time of @xmath150 . for this problem",
    "it is known that euler s method is tvd and positive for step sizes up to @xmath151 .",
    "we computed the numerical solution using all the @xmath30 and @xmath32 ssp lnl runge  kutta methods described in section [ sec : optimal ] and , for each one , found the largest @xmath152 for which tvd and positivity are preserved . in figure",
    "[ fig : linadvfd ] we plot these values ( blue for tvd , green for positivity ) compared to the time - step guaranteed by the theory , @xmath153 ( in red ) .",
    "we observe that the theoretical value is an excellent predictor of the observed tvd time - step ; in fact , the blue line is frequently indistinguishable from the red line .",
    "the positivity preserving time - step is slightly larger , but follows a similar line .",
    "* example 6 : tvd and positivity for buckley - leverett with centered scheme and koren limiter .",
    "* we solve the buckley - leverett equation , a nonlinear pde used to model two - phase flow through porous media : @xmath154 on @xmath155 $ ] , with periodic boundary conditions .",
    "we take @xmath156 and initial condition @xmath157 the problem is semi - discretized using a second order conservative scheme with a koren limiter as in @xcite with @xmath158 , and run to @xmath159 . for this problem",
    "euler s method is tvd for @xmath160 .",
    "we computed the numerical solution using all the @xmath136 ssp lnl runge  kutta methods described in section [ sec : optimal ] and , as above found the largest @xmath152 for which tvd and positivity are preserved . in figure",
    "[ fig : bltvd ] we plot these values ( blue for tvd , green for positivity ) compared to the time - step guaranteed by the theory , @xmath153 ( in red )",
    ". the observed tvd and positivity time - step are typically significantly larger than the theoretical value .",
    "as before , the positivity preserving time - step is larger than the tvd time - step .",
    "using the optimization procedure described in @xcite , we find ssp - optimized explicit runge  kutta methods that have nonlinear order of @xmath31 and @xmath32 and a higher @xmath161 order of convergence on linear autonomous problems .",
    "the order barrier of @xmath162 for explicit ssp runge  kutta methods indicates the critical importance of the nonlinear order on the ssp property .",
    "nevertheless , we find that the _ size _ of the ssp coefficient is typically more constrained by the linear order conditions . as the number of stages increases , the ssp coefficient becomes primarily a function of the relationship between the number of stages and the linear order of the method , and not the nonlinear order .",
    "this means that in many cases , we can obtain methods of nonlinear order @xmath32 and linear order @xmath161 that have the same ssp coefficient as methods with nonlinear order @xmath30 and linear order @xmath161 .",
    "we verified the linear and nonlinear orders of convergence of the new methods on a variety of test cases .",
    "we also showed the behavior of these new lnl time - stepping methods coupled with the weno method for both linear and nonlinear problems , which suggests that these lnl methods may be useful for problems that have regions that are dominated by linear , smooth solutions and other regions where the solution is discontinuous or dominated by nonlinear behavior .",
    "finally , we studied the total variation diminishing and positivity preserving properties of these lnl methods on linear and nonlinear problems , and showed that for the linear problems , the theoretical ssp time - step is a very accurate predictor of the observed behavior , while serving only as a lower bound in the nonlinear case .",
    "we conclude that where methods with high linear order are desirable , it is usually advantageous to pick those methods that also have higher nonlinear order ( @xmath163 ) .    * acknowledgment .",
    "* the authors wish to thank prof .",
    "bram van leer for the motivation for studying this problem , and prof .",
    "david ketcheson for many helpful discussions .",
    "this publication is based on work supported by afosr grant fa-9550 - 12 - 1 - 0224 and kaust grant fic/2010/05 ."
  ],
  "abstract_text": [
    "<S> high order spatial discretizations with monotonicity properties are often desirable for the solution of hyperbolic pdes . </S>",
    "<S> these methods can advantageously be coupled with high order strong stability preserving time discretizations . </S>",
    "<S> the search for high order strong stability time - stepping methods with large allowable strong stability coefficient has been an active area of research over the last two decades . </S>",
    "<S> this research has shown that explicit ssp runge  kutta methods exist only up to fourth order . however , </S>",
    "<S> if we restrict ourselves to solving only linear autonomous problems , the order conditions simplify and this order barrier is lifted : explicit ssp runge  kutta methods of any _ linear order _ exist . </S>",
    "<S> these methods reduce to second order when applied to nonlinear problems . in the current work we aim to find explicit ssp runge  kutta methods with large allowable time - step , that feature high linear order and simultaneously have the optimal fourth order nonlinear order . </S>",
    "<S> these methods have strong stability coefficients that approach those of the linear methods as the number of stages and the linear order is increased . </S>",
    "<S> this work shows that when a high linear order method is desired , it may be still be worthwhile to use methods with higher nonlinear order . </S>"
  ]
}
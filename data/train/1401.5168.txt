{
  "article_text": [
    "storage schemes for data storage have been studied for a long period since they can keep data reliable over unreliable nodes .",
    "all kinds of strategies are proposed for data storage , such as replication @xcite , erasure cods @xcite , and regenerating codes @xcite , etc . among them , regenerating codes recently proposed by dimakis _",
    "@xcite are more effective in terms of repair bandwidth . motivating by network coding @xcite , they used an information flow graph to express regenerating codes , and identified a tradeoff curve between the storage capacity per node and the repair bandwidth for a failed node .",
    "this tradeoff curve has two extremal points which correspond to the minimum storage regenerating ( msr ) codes @xcite , @xcite , and the minimum bandwidth regenerating ( mbr ) codes @xcite , respectively .",
    "however , lots of distributed storage schemes do not consider network structures among storage nodes .",
    "actually , in many applications , storage nodes have certain topological relationships , such as the hierarchical network structure @xcite , the multi - hop network structure @xcite and so on .",
    "li _ et al . _",
    "@xcite studied repair - time in tree - structure networks which have links with different capacities . in @xcite ,",
    "gerami _ et al .",
    "_ studied repair - cost in multi - hop networks and formulated the minimum - cost as a linear programming problem for linear costs .",
    "inspired by these works , in this paper , we focus on distributed storage problems over a class of simple but important networks , i. e. , unidirectional ring networks , which usually exist as parts of some complex networks . in these unidirectional ring networks ,",
    "each user connects one and only one storage node to download data . for each user ,",
    "its reconstructing bandwidth is the total number of all transmitted symbols to recover original data . by cut - set bound analysis of information flow graph for each user requiring total original data in this system",
    ", we obtain a lower bound on the reconstructing bandwidth and further indicate its tightness for arbitrary parameters .",
    "thus , we define optimal reconstructing distributed storage schemes ( ordsses ) , if the reconstructing bandwidth for every user achieves the lower bound with equality .",
    "furthermore , we study the repair problem in ordsses and also deduce a tight lower bound on the repair bandwidth for repairing each failed storage node , which is the total number of all transmitted symbols to repair this failed storage node . in particular",
    ", we show that every ordss can satisfy the lower bound with equality . at last , we present two constructions of ordsses , called mds construction and ed construction , respectively . both of them can be applied for arbitrary parameters , but ed construction has many advantages than mds construction , such as finite field size and computational complexity .",
    "the remainder of the paper is organized as follows . in section",
    "[ m - example ] , a motivating example is given to illustrate our research problems .",
    "the basic mathematical model of research problems and tight lower bounds on the reconstructing and repair bandwidths are deduced in section [ bm - sbound ] . in section [ cons ] , we design an efficient constructing approach of ordsses for arbitrary parameters @xmath0 . finally , section [ conc ] concludes this paper . because the limit of the space , some proofs of our conclusions are ignored in this paper . for more details ,",
    "please refer to the extended reversion @xcite .",
    "in this section , we first discuss an example to show our research problems .",
    "this shows that it is meaningful and interesting to study the distributed storage problems over unidirectional ring networks .    , @xmath1 , @xmath2.,width=181,height=117 ]    fig .",
    "[ fig_cn ] depicts a unidirectional ring network with @xmath3 storage nodes , denoted by @xmath4 , the data exchanges between the storage nodes have to accord to the direction of the ring network .",
    "each storage node has storage capacity @xmath1 .",
    "let the row vector of original data be @xmath5\\in\\mathbb{f}^5_5 $ ] , that is , the size @xmath6 of original data is 5 .",
    "all five storage nodes distributed store total original data @xmath7 .",
    "each user connects one and only one storage node in order to download total original data . without loss of generality ,",
    "let user node @xmath8 connect storage node @xmath9 , @xmath10 .",
    "[ fig_cn ] also gives a distributed storage scheme , in which every user can download the original data .",
    "for instance , @xmath11 stores @xmath12 and @xmath13 , @xmath14 stores @xmath15 and @xmath16 . for this scheme ,",
    "[ fig_rc ] describes an optimal reconstructing process which minimizes the reconstructing bandwidth for every user",
    ".     obtains the original data with bandwidth 9 , while each of @xmath17 with bandwidth 10.,width=306,height=158 ]    based on this reconstructing process , we know that the minimum reconstructing bandwidth on average of this scheme is @xmath18 .",
    "naturally , we propose a series of problems as follows : does there exist distributed storage schemes with the minor reconstructing bandwidth ?",
    "what is the minimum of the reconstructing bandwidth ?",
    "how to efficiently construct distributed storage schemes achieving the minimum reconstructing bandwidth ?",
    ".,width=181,height=120 ]    in fact , the above distributed storage scheme is not optimal , there exists a better storage scheme as described in fig .",
    "[ fig_mrc ] , where each user consumes reconstructing bandwidth 9 to download the original data .",
    "[ fig_mrp ] characterizes its reconstructing process .",
    "thus , the average minimum reconstructing bandwidth of this new scheme is 9 .",
    "actually , in this example , 9 is the minimum reconstructing bandwidth for any user .",
    "further , if some storage node fails , several interesting and meaningful problems should be considered . for instances , can this failed node be repaired ? what is the minimum repair bandwidth ? how to repair it efficiently ?",
    "[ fig_mrpair ] characterizes the optimal repair process with the minimum bandwidth 5 for each storage node in the new storage scheme as depicted in fig .",
    "[ fig_mrc ] .",
    "in this section , we will describe the basic model of our research problems over unidirectional ring networks .",
    "the lower bounds on the reconstructing and repair bandwidths are also proposed .",
    "let @xmath19 be a unidirectional ring network consisting of @xmath20 storage nodes , denoted by @xmath21 , and each one has a capacity to store @xmath22 symbols .",
    "these @xmath20 storage nodes form a directed ring and data is only transmitted according to the given direction .",
    "let @xmath23 $ ] be the row vector of original data with size @xmath6 , each coordinate represents an information symbol taking values in a finite field @xmath24 with @xmath25 elements , where @xmath25 is a power of some prime .",
    "the data @xmath7 is distributed to all storage nodes in order to store @xmath7 . here",
    ", we just consider linear storage , that is , every stored symbol and every transmitted symbol are linear combinations of the information symbols , still being an element in @xmath24 .    for any storage node @xmath9",
    ", define an @xmath26 node generator matrix @xmath27",
    ". then all the @xmath22 coordinates of the product @xmath28 are stored in @xmath9 , each of which is called a node symbol . and each node symbol corresponds to a column vector of @xmath27 , called node vector .",
    "further , each transmitted symbol is a linear combination of some node symbols , and clearly , it also corresponds to a vector , called a transmitted vector , which is the linear combination of those corresponding node vectors , too .",
    "concatenating all node generator matrices according to the order of storage nodes , we obtain an @xmath29 matrix @xmath30 $ ] , which is called a generator matrix of this distributed storage scheme .",
    "each user connects one and only one storage node to download data . note that , in order to ensure all users to reconstruct the original data completely in this ring network , the generator matrix has to be full row - rank .",
    "we apply information flow graph to analyze the following reconstructing bandwidth , which is a particular graphical representation of distributed storage schemes .",
    "@xmath31 : an information flow graph @xmath19 consists of three types of nodes : a single source node @xmath32 ( the source of original data ) , @xmath20 storage nodes and some user nodes .",
    "the source node @xmath32 connects to @xmath20 storage nodes with directed edges with capacity @xmath22 . after the source node @xmath32 distributes node symbols , it becomes inactive .",
    "all storage nodes form a directed ring through edges with capacity @xmath6 .",
    "the edges connecting user nodes and their corresponding storage nodes also have capacity @xmath6 .",
    "when some storage node @xmath9 fails , @xmath33 , a new substituted node @xmath34 arises to replace it and establishes connections from the node @xmath35 , to the node @xmath36 and the users . due to the symmetry",
    ", we just take one user connecting to the same storage node into account .",
    "[ inf - graph ] indicates the details of the information flow graph @xmath19 .    , where circular nodes and rectangular nodes represent the storage nodes and the user nodes , respectively .",
    "when the storage node @xmath11 fails , a new node @xmath37 arises and establishes connections from the node @xmath14 , to the node @xmath38 and the user node @xmath39.,width=245,height=151 ]    in the following , we introduce some concepts in graph theory which are used in the paper .",
    "a cut in the graph @xmath19 between the source node @xmath32 and a fixed user @xmath40 is a subset of edges whose removal disconnects @xmath32 from @xmath40 .",
    "the minimum cut between @xmath32 and @xmath40 is a cut between them in which the total sum of the edge capacities achieves the smallest .      for unidirectional ring networks ,",
    "there are three important parameters : @xmath20 , the number of storage nodes ; @xmath22 , the storage capacity per storage node ; and @xmath6 , the size of original data .",
    "[ thm - rec - bound ] for any storage scheme of a unidirectional ring network with parameters @xmath0 , the reconstructing bandwidth to recover the original data for each user is lower bounded by @xmath41 , where @xmath42 .",
    "moreover , there exists a storage scheme such that all users can reconstruct original data with reconstructing bandwidth achieving this lower bound with equality .    before the proof of theorem [ thm - rec - bound ] , we need the following two lemmas firstly .",
    "[ lemma - min - cut ] ( * ? ? ?",
    "* lemma 1 ) no user @xmath40 can reconstruct the original data if the minimum cut capacity in a directed acyclic graph between the source node @xmath32 and @xmath40 is smaller than the original data size @xmath6 .",
    "[ lemma - iff ] for a storage scheme over a unidirectional ring network with parameters @xmath0 , all users can recover the original data with the same reconstructing bandwidth @xmath41 , where @xmath42 , if and only if the following two conditions are satisfied :    \\(i ) all @xmath43 node vectors of arbitrary @xmath44 adjacent storage nodes are linearly independent ;    \\(ii ) arbitrary @xmath45 adjacent storage nodes contain @xmath6 linearly independent node vectors .",
    "because of the symmetry of this network , it suffices to consider the reconstructing bandwidth for any one user . without loss of generality ,",
    "we take the user @xmath39 into account , which is connected from the storage node @xmath11 as depicted in fig .",
    "[ inf - graph ] .",
    "clearly , when @xmath39 is under consideration , it is not necessary to transmit data from @xmath11 to @xmath38 .",
    "so we can omit the edge from @xmath11 to @xmath38 and only consider the degenerated acyclic graph @xmath46 of the cyclic graph @xmath19 as depicted in the following fig .",
    "[ fig_ag ] .",
    ".,width=245,height=158 ]    in the acyclic graph @xmath46 , let @xmath47 be the amount of transmitted vectors from @xmath9 to @xmath36 , where @xmath48 , and @xmath49 represents the user node @xmath39 in order to keep consistency of notation .",
    "thus , the total reconstructing bandwidth for @xmath39 is @xmath50 .",
    "next , we will propose an lower bound by cut - set bound analysis method .    by lemma [ lemma - min - cut ]",
    ", the minimum cut capacity between @xmath32 and @xmath39 should not be less than @xmath6 , which implies that we just need to analyze those potential minimum cuts between @xmath32 and @xmath39 . in the following ,",
    "we list all possibilities :    @xmath51    actually , we have @xmath52 as @xmath42 , which implies the last @xmath53 inequalities are useless . hence",
    ", the above inequalities imply the lower bound below : @xmath54\\\\ & = km-\\frac{(k-1)k\\alpha}{2}.\\end{aligned}\\ ] ]    next , we consider the tightness of this bound .",
    "let @xmath55 be a generator matrix of an @xmath56 $ ] mds code , and we regard it as the generator matrix for our storage scheme .",
    "then we partition all @xmath57 column vectors into @xmath20 parts , each of which contains @xmath22 column vectors constituting node generator matrix for a storage node .",
    "it is easy to check that this storage scheme satisfies the two conditions in lemma [ lemma - iff ] .",
    "thus , all users can reconstruct the original data with bandwidth @xmath41 , which implies that the proposed lower bound is achievable for all users .",
    "this completes the proof .",
    "if a distributed storage scheme achieves the lower bound in theorem [ thm - rec - bound ] with equality for all users , we say it an optimal reconstructing distributed storage scheme ( ordss ) .",
    "actually , any @xmath58 $ ] mds code can constitute an ordss .",
    "particularly , by the definition of ordss , the two conditions in lemma [ lemma - iff ] are actually sufficient and necessary for an ordss .    in an ordss ,",
    "when a storage node fails , a new node arises to replace it .",
    "next , we will focus on the repair bandwidth in order to repair this failed storage node in any ordss .",
    "[ thm - repair ] for any ordss over a unidirectional ring network with parameters @xmath0 , the repair bandwidth for any failed storage node is lower bounded by @xmath6 .",
    "the sketch of the proof is presented below , for more details , please refer to the extended version @xcite .",
    "different from the proof in theorem [ thm - rec - bound ] , we mainly apply linear algebra as analysis technique in this proof .",
    "we only take the repair of the storage node @xmath11 into account as the symmetry of the network .",
    "let @xmath59 , where @xmath60 and @xmath61 .",
    "let @xmath62 be the number of transmitted vectors from @xmath9 to @xmath36 for repairing @xmath11 , @xmath63 .",
    "by lemma [ lemma - iff ] and the linear relationship of node vectors in storage nodes , we can deduce that @xmath64 for @xmath65 and @xmath66 .",
    "therefore , the storage nodes @xmath67 have to provide at least @xmath68 vectors to repair @xmath11 .",
    "thus , @xmath6 is a lower bound on the repair bandwidth .",
    "for the above lower bound on the repair bandwidth , wether there exist an ordss to achieve it for all storage nodes .",
    "the following theorem answers this question .",
    "[ thm - ordss - repair ] for any ordss over a unidirectional ring network with parameters @xmath0 , any storage node can be repaired successfully with repair bandwidth @xmath6 .",
    "according to theorem [ thm - ordss - repair ] , any ordss can achieve the lower bound on the repair bandwidth with equality in theorem [ thm - repair ] .",
    "thus , it is sufficient to construct ordsses , and in the following , we use the concept of euclidean division to present an efficient construction of ordsses .",
    "for any two finite positive integers @xmath69 and @xmath70 with @xmath71 , by euclidean division , we have the following equalities for some integer @xmath45 : @xmath72 note that @xmath73 .",
    "[ def3 ] define an @xmath74 matrix @xmath55 as follows :    @xmath75,\\ ] ]    where @xmath76 represents @xmath77 identity matrix and the number of @xmath76 is @xmath78 , @xmath79 . this matrix @xmath55 is called ed - matrix .",
    "[ def - weakly mds property ] for an @xmath80 matrix , it is said to satisfy weakly mds property , if its arbitrary cyclic adjacent @xmath6 columns ( or , @xmath69 rows ) are linearly independent when @xmath81 ( or , @xmath82 ) . here , `` cyclic adjacent '' means that the last column ( resp .",
    "row ) of this matrix is regarded to be adjacent with the first column ( resp .",
    "[ thm - mds ] ed - matrices satisfy the weakly mds property .    in the following , we present an efficient construction of ordsses . for a unidirectional ring network with arbitrary parameters",
    "@xmath0 , we select an @xmath83 ed - matrix @xmath55 as the generator matrix of the distributed storage scheme .",
    "similarly , @xmath7 is the @xmath6-dimensional row vector of original data . then assign the @xmath57 coordinates of the product @xmath84 ( equivalently , the @xmath57 column vectors of @xmath55 ) to @xmath20 storage nodes as following approach : assign the first @xmath22 coordinates to the storage node @xmath11",
    ", the second @xmath22 coordinates to the storage node @xmath14 , so far and so forth , the last @xmath22 coordinates , i.e. , the @xmath20th @xmath22 coordinates , to the storage node @xmath38 .    by theorem [ thm - mds ] , we know that arbitrary @xmath6 cyclic adjacent columns of ed - matrix @xmath55 are linearly independent ,",
    "that is , one can obtain the original data from arbitrary @xmath6 cyclic adjacent coordinates of @xmath84 .",
    "thus , the above assignment shows that the node vectors in arbitrary @xmath44 adjacent storage nodes are linearly independent and arbitrary @xmath45 adjacent storage nodes contain @xmath6 linearly independent vectors .",
    "together with lemma [ lemma - iff ] , this storage scheme is an ordss .",
    "therefore , all users can recover the original data with the minimum reconstructing bandwidth @xmath41 .",
    "in addition , theorem [ thm - ordss - repair ] shows that any storage node can be repaired with bandwidth @xmath6 if it fails .",
    "[ ex_3 ] for a unidirectional ring network with parameters @xmath85 , let @xmath86\\in \\mathbb{f}^5_2 $ ] be the row vector of original data .",
    "we construct an ed - matrix @xmath55 of size @xmath87 as follows :    @xmath88.\\ ] ] subsequently , we calculate @xmath89.\\ ] ] then , we assign @xmath90 to the node @xmath11 , @xmath91 to the node @xmath14 , @xmath92 to the node @xmath93 and @xmath94 , @xmath95 to the node @xmath96 . clearly , any user can reconstruct the original data @xmath7 with reconstructing bandwidth 9 . and",
    "if any storage node fails , it can be repaired with repair bandwidth 5 .",
    "for instance , if the node @xmath14 fails , @xmath11 transmits @xmath12 to @xmath96 , then @xmath96 transmits @xmath97 to @xmath93 , @xmath93 can solve @xmath91 and transmits them to the new substituted node @xmath98 .",
    "so @xmath14 is repaired exactly with repair bandwidth 5 .",
    "[ ed - construction ] depicts the repair process in details for this storage scheme .",
    "we call the construction of ordsses in the proof of theorem [ thm - rec - bound ] the mds construction , and the above construction using an ed - matrix the ed construction .",
    "now , we compare the two constructions . mds construction applies a generator matrix @xmath55 of an @xmath58 $ ] mds code , whose arbitrary @xmath6 columns are linearly independent .",
    "this property , called mds property , is too strong for constructing ordsses . and the authors in @xcite have shown that the size of finite field @xmath24 is no less than @xmath99 for the existence of an @xmath100 $ ] mds code with @xmath101 .",
    "for mds construction , when the values of parameters @xmath0 are large , the field size will become too large to be applied in practice , while ed construction always uses the smallest finite field @xmath102 .",
    "this is because that the weekly mds property is sufficient for constructing ordsses .",
    "for example , when @xmath103 , the field size for a @xmath104 $ ] mds construction is at least @xmath105 , which is much larger than the field size 2 for ed construction .",
    "it is well - known that the cost of arithmetic in a small field is smaller than that in a bigger one .",
    "thus , the smaller field size will reduce the computational complexity of the storage scheme and save much time evidently .",
    "therefore , ed construction is much better than mds construction .",
    "in this paper , we discuss distributed storage problems over unidirectional ring networks and propose two tight lower bounds on the reconstructing and repair bandwidths .",
    "in addition , we present two constructions for ordsses , and both can be used for arbitrary parameters . in practical applications , the networks of bidirectional ring topology , in which adjacent nodes can exchange information each other , are more useful .",
    "the same research problems in that case are also meaningful and still keep open .",
    "this research is supported by national key basic research problem of china ( 973 program grant no .",
    "2013cb834204 ) , the national natural science foundation of china ( nos . 61301137 , 61171082 ) and fundamental research funds for central universities of china ( no . 65121007 ) .",
    "k. v. rashmi , n. b. shah , and p. v. kumar , `` optimal exact regenerating codes for distributed storage at the msr and mbr points via a product - matrix construction , '' _ ieee trans .",
    "inf . theory _ ,",
    "8 , pp . 5227 - 5239 , aug .",
    "2011 .",
    "z. kong , s. a. aly , and e. soljanin , `` decentralized coding algorithms for distributed storage in wireless sensor networks , '' _ ieee j. on selected areas in communications _ ,",
    "vol , 28 , pp .",
    "261 - 268 , feb . 2010"
  ],
  "abstract_text": [
    "<S> in this paper , we study distributed storage problems over unidirectional ring networks . a lower bound on the reconstructing bandwidth to recover total original data for each user is proposed , and it is achievable for arbitrary parameters . </S>",
    "<S> if a distributed storage scheme can achieve this lower bound with equality for each user , we say it an optimal reconstructing distributed storage scheme ( ordss ) . </S>",
    "<S> furthermore , the repair problem for a failed storage node in ordsses is under consideration and a tight lower bound on the repair bandwidth for each storage node is obtained . </S>",
    "<S> particularly , we indicate the fact that for any ordss , every storage node can be repaired with repair bandwidth achieving the lower bound with equality . in addition </S>",
    "<S> , we present an efficient approach to construct ordsses for arbitrary parameters by using the concept of euclidean division . finally , we take an example to characterize the above approach .    : </S>",
    "<S> distributed storage over unidirectional ring networks </S>"
  ]
}
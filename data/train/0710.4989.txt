{
  "article_text": [
    "the decoy state method is a technique used in quantum key distribution ( qkd ) for determining the possible range of the yield @xmath2 and the error rate @xmath3 , by a statistical test using several different light intensities @xcite . here",
    "the yield @xmath0 is the probability that an @xmath1-photon state emitted by alice is detected in bob s apparatus , and @xmath4 the error rate caused solely by the @xmath1-photon states . in this method ,",
    "alice first chooses the average photon number of each of her coherent light pulses randomly out of @xmath5 , and bob records every detection events .",
    "after quantum communications are completed , alice reveals the average photon number of each pulse over an authenticated public channel . then referring to these data",
    ", bob calculates the detection rates corresponding to each @xmath6 , and estimates a lower bound or the minimum of @xmath2 that is consistent with them .",
    "similarly , he can also estimate an upper bound or the maximum of @xmath3 .",
    "these values are then used to calculate the key generation rate @xmath7 by plugging them into well - known formulae , e.g. , @xmath8 $ ] for the bb84 protocol @xcite . here",
    "@xmath9 is the overall detection rate in bob s detector , and @xmath10 , @xmath11 are the contributions to it from the pulses containing zero and one photon respectively .",
    "@xmath12 is the overall error rate , and @xmath13 the binary entropy function @xmath14 , hence @xmath15 corresponds to the length of a syndrome consumed to correct bit errors .",
    "the factor @xmath16 is inserted to take into account the information rate of practical error correcting codes which is usually below the shannon limit .",
    "lower bounds on @xmath2 with a finite number of decoy intensities have been discussed in many papers ( see , e.g. , @xcite and references therein ) , and the best and the most general one is due to hayashi @xcite .",
    "adding to these results , in this paper we present an improved upper and lower bounds @xmath17 , @xmath18 for the asymptotic yield @xmath0 .",
    "in particular if all the light intensities @xmath6 are less than or equal to one , @xmath17 , @xmath18 are not only a lower or an upper bound , but in fact are the exact minimum or the maximum .",
    "the main difference between preceding approaches and ours is as follows .",
    "the original decoy problem is an optimization problem involving an infinite number of variables @xmath0 . in order to reduce the number of variables to finite",
    ", wang devised a decomposition of a phase - randomized coherent state @xcite , which was later generalized to the case of an arbitrary number of decoy light intensities by hayashi @xcite ; what they did was to decompose the state @xmath19 sent by alice as a sum @xmath20 of mixed states @xmath21 .",
    "then by regarding @xmath22 as independent variables and using a linear - programming - like approach @xcite , hayashi presented a general algorithm for obtaining the minimum of @xmath2 , which is linear in @xmath22 . at first this method",
    "may seem general enough and capable of giving the exact minimum of @xmath0 .",
    "so what needs to be improved further ?",
    "the answer is that @xmath22 can not be considered as independent in reality since @xmath21 are not completely distinguishable to each other .",
    "thus by regarding that way they give eve more power than she actually has , and there is no guarantee that the obtained minimum is also that of the original problem involving an infinite number of @xmath0 .",
    "in contrast , in this paper we present a method for finding the minimum of @xmath2 without reducing the variable concerned , i.e. , we treat all @xmath0 s independently as in the original decoy method problem . the key observation here is that when regarding variables @xmath0 as an infinite - dimensional vector @xmath23 , the difference eve can make to @xmath23 without being noticed by alice or bob can be expanded by a set of basis vectors @xmath24 , each of which is written in a simple form with the schur polynomials .",
    "what is remarkable about our result is that the configuration of @xmath0 leading to the smallest @xmath2 varies depending on whether the number @xmath25 of decoy light intensities ( including the signal ) is even or odd .",
    "the analysis is especially simple for @xmath25 even and @xmath26 ; because of the positivity of the schur polynomials , it is readily seen that @xmath2 is minimized when @xmath27 for @xmath28 and that the problem is automatically reduced to that involving only a finite number of variables ; @xmath29 . thus by simply inverting a matrix , the minimum of @xmath2 is expressed in an explicit and simple form . on the other hand for @xmath25 odd , the analysis turns out to be somewhat more complicated , however , we can still specify the configuration that corresponds to the smallest @xmath2 and write down an explicit algorithm for finding it out within a finite number of steps .",
    "the paper is organized as follows . in section [ sec : main_result ] we define our problem of the decoy state method and present our main result .",
    "section [ sec : m_even ] analyzes configuration @xmath17 which is in particular useful in determining the minimum of @xmath2 when an even number @xmath25 of decoy light intensities are used .",
    "subsequently in section [ sec : m_odd ] we discuss the properties of @xmath18 which is useful for @xmath25 odd .",
    "finally we conclude in section [ sec : conclusion ] .",
    "throughout the paper , for the sake of simplicity , we consider the case where @xmath30 is already known precisely by using vacuum decoy states , and we discuss the minimum and maximum of @xmath2 under the condition that @xmath31 is satisfied for @xmath32 .",
    "note , however , our analysis in the subsequent sections is equally valid even without vacuum decoy states .",
    "@xmath33 appearing in ( [ eq : constraint_q_positive ] ) denotes the contribution from non - zero photon number state to the detection rate in bob s detector , i.e. , @xmath34 .",
    "being a probability , each @xmath0 is of course constrained as @xmath35 the explicit form of the detection rate @xmath36 depends on the physical model that one employs for describing the quantum channel . in this paper",
    ", we assume that in the absence of eve , the yield takes the value @xmath37 with @xmath38 and that each parameters are conditioned as @xmath39 here @xmath40 is the channel transmission rate including the quantum efficiency of bob s detector , and @xmath41 is roughly the dark count rate @xmath42 .",
    "note that for practical qkd systems , ( [ eq : parameter_domain ] ) is not really a restriction ; @xmath40 is already around 0.1 at 0 km due to the detector efficiency . on the other hand for sufficiently small @xmath40",
    ", we have @xmath43 . thus with the signal light intensity ( say @xmath44 ) normally being around 0.5 or less",
    ", @xmath45 is automatically satisfied .    according to lo et al .",
    "@xcite and hayashi @xcite , these are @xmath46 , @xmath47 , from which we have @xmath48 whereas in some other references ( e.g. , @xcite ) , slightly different models such as @xmath49 and @xmath47 are used .",
    ", since @xmath0 exceeds one for large enough @xmath1 . hence in a strict sense , one needs to introduce a cut off @xmath50 such that @xmath0 may be neglected for @xmath51 , or use different definitions such as the latter . ]",
    "the decoy state method is similarly effective in lower bounding the error rate @xmath3 from pulses containing a single photon ; by recording the overall error rate @xmath52 for each decoy light intensity @xmath6 and using the relation @xmath53 with @xmath54 , one can determine the range of @xmath55 .",
    "this case can also be treated with ( [ eq : error_model ] ) by redefining parameters @xmath56 , @xmath41 .",
    "for instance in @xcite , the value on the left hand side of eq .",
    "( [ eq : constraint_e ] ) takes the form @xmath57 which corresponds to @xmath58 , @xmath59 .",
    "a slightly different error models are also used , e.g. , in @xcite . in what follows",
    "we do not distinguish between all these cases , whether of yields or of error rates , and analyze them on an equal footing as an optimization problem regarding eq .",
    "( [ eq : error_model ] ) with given values of @xmath56 , @xmath41 satisfying ( [ eq : parameter_domain ] ) .      under these settings ,",
    "we present upper and lower bounds on @xmath0 in terms of quantities @xmath17 and @xmath18 ; for any @xmath25 and @xmath60 , @xmath61 where @xmath17 are expressed in a simple form ( see eq .",
    "( [ eq : y_bar_expicit_form ] ) ) .",
    "for instance , @xmath62 takes the form @xmath63 on the other hand @xmath18 can not be written in a simple form as @xmath17 , however , as we shall demonstrate in section [ sec : m_odd ] , they can always be obtained by a numerical calculation within a finite number of steps .",
    "in addition , it can be shown that at least when @xmath26 , eve can actually attain @xmath64 and @xmath65 in ( [ eq : statement_even ] ) and ( [ eq : statement_odd ] )",
    ". hence they are not only a lower ( resp .",
    "upper ) bound , but in fact are the minimum ( resp .",
    "maximum ) of @xmath2 .    in order to demonstrate",
    "how effective our approach is , take a typical set of experimental parameters , e.g. , @xmath46 , @xmath66 , @xmath67 , @xmath68 , and @xmath69 .",
    "it turns out that @xmath70 , where the yield in the absense of eve is @xmath71 .",
    "hence by using only four decoy light intensities including vacuum , we can determine @xmath2 within accuracy of less than one percent .",
    "first in this section , we discuss the property of @xmath17 as lower or upper bounds as stated in sec .",
    "[ sec : main_result ] .",
    "this is in particular useful in determining the minimum of @xmath2 when there are an even number of constraints , that is , for @xmath25 even .",
    "for @xmath72 hwang @xcite pointed out that eve s best attack strategy is to set @xmath27 for all @xmath73 , and hence the problem is reduced to solving an linear equation of @xmath2 , @xmath74 . here",
    "we shall show that this can in fact be generalized to any even value of @xmath25 , i.e. , in order to obtain the minimum @xmath2 , it suffices to set @xmath27 for all @xmath28 and calculate @xmath2 compatible with @xmath75 by inverting the vandermonde matrix . for the rest of the paper",
    ", we denote the solution @xmath0 to eq .",
    "( [ eq : m_constraints ] ) as @xmath17 . for @xmath28",
    ", we set @xmath76 formally for later convenience .",
    "[ th : m_even ]     * for @xmath25 even , @xmath62 is a lower bound of @xmath2 which is consistent with eq .",
    "( [ eq : constraint_q_positive ] ) . *",
    "more generally , for any @xmath25 and any @xmath77 , @xmath17 is a lower ( resp .",
    "upper ) bound of @xmath0 if @xmath78 is an odd ( resp .",
    "even ) number . *",
    "if @xmath79 , we have @xmath80 for all @xmath1 .",
    "that is , eve can actually achieve @xmath64 .",
    "hence @xmath17 is not only a lower ( resp .",
    "upper ) bound , but is also the minimum ( resp .",
    "maximum ) of @xmath0 for @xmath78 odd ( resp . even ) .    the proof will be given in section [ sec : proof_th_1 ] . using cramer s rule , the solution @xmath17 to eq .",
    "( [ eq : m_constraints ] ) can be expressed explicitly as @xmath81 @xmath82 with @xmath83 being the vandermonde determinant @xmath84 in particular , @xmath62 takes the form of eq .",
    "( [ eq : y_1_explicit_form ] ) .      as a preliminary to the proof of theorem [",
    "th : m_even ] , we define the schur polynomials @xmath85 ( see , e.g. , ref .",
    "@xcite ) and difference vectors @xmath86 .",
    "[ def : schur_polynomial ] choose an integer partition @xmath87 satisfying @xmath88 , and @xmath89 . for @xmath90 , set @xmath91 formally .",
    "the schur polynomial @xmath85 in variables @xmath5 is defined as @xmath92 where @xmath83 is the vandermonde determinant defined in eq .",
    "( [ eq : def_vandermonde ] ) .",
    "for example , if the partition @xmath93 is empty , i.e. , @xmath94 , both the numerator and the denominator equal @xmath83 and we have @xmath95 . for @xmath96 with @xmath97 repeating @xmath25 times @xmath98 . in what follows ,",
    "we denote integer partitions with greek letters @xmath99 with the only exception of @xmath100 that is used for average photon numbers .    now using @xmath85 thus defined , we consider difference vectors @xmath101 to @xmath102 which preserve the constraint ( [ eq : constraint_q_positive ] ) . in other words",
    "@xmath103 are those vectors satisfying @xmath104 for all @xmath105 . hence if @xmath23 is a solution to ( [ eq : constraint_q_positive ] ) , @xmath106 is also a solution when disregarding the constraints @xmath107 .",
    "the set of vectors @xmath108 clearly forms a subspace of the vector space @xmath109 consisting of all vectors .",
    "consists of @xmath110 satisfying @xmath111 . ] for our present purposes , it is convenient to choose the following non - orthogonal basis for @xmath112 .",
    "[ def : delta_y ] we define a set of vectors @xmath113 labeled by @xmath114 as @xmath115 where @xmath116 denotes an integer partition @xmath117 with @xmath97 s repeating @xmath118 times .",
    "[ lm : w_completeness ] vectors @xmath24 form a linear basis of @xmath112 .",
    "that is , @xmath24 are solutions to eq .",
    "( [ eq : def_delta ] ) , and conversely , any solution to eq .",
    "( [ eq : def_delta ] ) can be uniquely expressed as a superposition of @xmath24 as @xmath119    the proof is given in appendix [ app : proof_lemma_1 ] . with the help of this lemma , we see that given any solution @xmath102 to eq .",
    "( [ eq : constraint_q_positive ] ) , @xmath120 is written uniquely as a superposition of @xmath24 as @xmath121 we will use this relation repeatedly in the following sections .      in this subsection",
    "we will prove theorem 1 , but before going into details , let us give an intuitive explanation .",
    "eve s goal is to minimize @xmath2 while keeping the measured value of @xmath33 intact so that her attack will not be noticed by alice and bob .",
    "hence the difference",
    "@xmath103 she makes to the yield @xmath23 must satisfy ( [ eq : def_delta ] ) , and as we have seen in lemma [ lm : w_completeness ] , it can always be considered as a sum of the basis vector @xmath24 .",
    "now note that the schur polynomial @xmath122 being always positive in eq .",
    "( [ eq : def_w ] ) , the element of @xmath86 alternates its signs with as @xmath1 increases as @xmath123 and @xmath124 .",
    "in pariticular if @xmath25 is even , both @xmath125 and @xmath126 are positive for any @xmath124 ( see fig . [ fig : one ] ) .",
    "thus we see that minimizing @xmath0 for @xmath28 , or equivalently , taking @xmath127 will always decrease @xmath2 . as a result ,",
    "the best configuration for eve turns out to be the one with @xmath27 for all @xmath28 , i.e. , @xmath17 .     for @xmath25 even .",
    "the element changes signs as @xmath1 increases from @xmath97 to @xmath25 and then to @xmath124.,width=377 ]    [ le : minimum ] for @xmath25 even , @xmath62 is a lower bound on @xmath2 of eq .",
    "( [ eq : constraint_q_positive ] ) . more generally , for any @xmath77 , if @xmath78 is odd ( resp . even ) , @xmath17 is a lower ( resp .",
    "upper ) bound on @xmath0 .",
    "_ proof : _ since the proof is essentially the same for all cases , we consider here only the case of @xmath128 and @xmath25 being even . during the proof",
    ", we suppress the constraint @xmath129 for @xmath123 and let them take an arbitrary value .",
    "for @xmath28 we still require @xmath130 .",
    "then in fact @xmath62 is the minimum of @xmath2 under these requirements , and is also a lower bound under the full constraint ( [ eq : complete_boundary_condition ] ) .",
    "this can be seen by looking at the @xmath128 element of eq .",
    "( [ eq : difference_expanded ] ) ; given an arbitrary solution @xmath102 to eq .",
    "( [ eq : constraint_q_positive ] ) , the difference of its first element with @xmath131 s takes the form @xmath132 obviously this is always greater than or equal to zero because @xmath133 and @xmath134 for @xmath25 even .",
    "hence @xmath62 is the minimum of @xmath2 under the requirements that we introduced at the beginning .",
    "this completes the proof .    from this proof",
    "we see that if all of @xmath135 satisfy @xmath136 for a particular choice of @xmath56 and @xmath41 , they are indeed the true minima ( resp . maxima ) under the full constraints ( [ eq : complete_boundary_condition ] ) .",
    "one can always verify this by numerical calculations , and doing so may be useful in practice .",
    "however , we can in fact verify it analytically for a sufficiently wide range of parameters .",
    "[ lm : boundary ] for @xmath137 , we have @xmath136 for all @xmath1 .    _",
    "proof : _ substituting @xmath37 in eq .",
    "( [ eq : difference_expanded ] ) and using eq .",
    "( [ eq : def_w ] ) , we obtain @xmath138 for @xmath77 . according to the positivity of @xmath139 and the schur polynomials @xmath85",
    ", we have @xmath140 . from this",
    "it is immediate that @xmath130 for @xmath78 even , and @xmath141 for @xmath78 odd .",
    "no that so far we did not use the condition @xmath26 .    on the contrary",
    ", in order to see @xmath141 for @xmath78 even and @xmath130 for @xmath78 odd , we need to bound @xmath142 from above using @xmath26 . by inequality ( [ eq : s_lambda_bound ] ) and @xmath143 , @xmath144 thus for @xmath26 , @xmath145 for all @xmath25 and @xmath77 . on the contrary , inequality ( [ eq : i_n_upperbound_origin ] ) for @xmath72 and @xmath128 in particular yields @xmath146 therefore , combining ( [ eq : i_n_upperbound_1 ] ) and ( [ eq : i_n_upperbound_m2n1 ] ) we obtain for @xmath78 odd , @xmath147    now by using ( [ eq : i_n_upperbound_1 ] ) for @xmath78 even , or @xmath148 , we have @xmath149 the second inequality follows from @xmath143 and thus @xmath150 .",
    "then using condition ( [ eq : parameter_domain ] ) we see @xmath151 for all even @xmath77 .",
    "similarly for @xmath78 odd , or @xmath152 , by using ( [ eq : i_n_upperbound_m_minus_n_odd ] ) we find @xmath153 in the second inequality , we used the fact that @xmath154 is monotinically decreasing in @xmath1 . since @xmath155 for @xmath156 , we have finally @xmath157 for @xmath78 odd .",
    "this completes the proof .",
    "for @xmath25 odd as well , by using a similar argument as used in the previous section , the configuration @xmath0 giving the minimum value of @xmath2 can be determined if @xmath137 . in what follows",
    "we denote this configuration as @xmath158 .",
    "@xmath159 includes a set of variables @xmath160 that can be specified ( as far as we know ) only by numerical calculations , and can not be written in a simple form as eq .",
    "( [ eq : y_1_explicit_form ] ) . still ,",
    "as shown below , it can always be determined within a finite number of steps .",
    "in this subsection we define what the configuration @xmath159 looks like in two steps ; first we give a configuration @xmath161 involving parameters @xmath162 , @xmath163 and then define @xmath159 as its special case .",
    "[ def : define_small_z ] for a given set of an integer @xmath164 and a real number @xmath165 , @xmath166 is configuration of the yield @xmath23 , and is a solution to eq .",
    "( [ eq : constraint_q_positive ] ) satisfying the following conditions ( see fig .",
    "[ fig : two ] ) .",
    "* @xmath167 for @xmath168 and @xmath169 for @xmath170 .",
    "* @xmath171 .",
    "* constraint ( [ eq : complete_boundary_condition ] ) is relaxed for @xmath172 .",
    "that is , @xmath173 can take an arbitrary value .",
    "let us supplement this definition . as we have seen in eq .",
    "( [ eq : difference_expanded ] ) , once @xmath174 are all fixed , @xmath175 are uniquely determined as @xmath176 the third item of definition [ def : define_small_z ] means that we do not care whether the value thus obtained satisfy @xmath177 or not . using this @xmath178",
    ", we now define @xmath159 .",
    "[ def : define_large_z ] configuration @xmath159 is @xmath178 with the smallest @xmath162 and the largest @xmath163 satisfying @xmath179 . in what follows",
    "we denote such @xmath160 as @xmath180 , and thus @xmath181 .    in order for this definition to make sense ,",
    "we need to guarantee the existence and the uniqueness of @xmath182 for an arbitrary choice of @xmath56 and @xmath41 . to see this ,",
    "it is convenient to order the pairs @xmath160 such that @xmath183 if either ( i ) @xmath184 or ( ii ) @xmath185 and @xmath186 . in terms of this ordering",
    ", @xmath182 just corresponds to the smallest @xmath160 satisfying @xmath179 . by definition , pairs @xmath160",
    "are bounded from below by @xmath187 , and as one can see from ( [ eq : z_m_expanded ] ) , @xmath188 is monotonically increasing with respect to @xmath160 .",
    "hence @xmath182 can obviously be determined uniquely .",
    "we can also show that @xmath162 is finite . indeed if @xmath189 for any finite @xmath162 , we would have @xmath190 . however , this would never happen as we have seen in the first paragraph of the proof of lemma [ lm : boundary ] .     achieving the minimum @xmath191 for @xmath25 odd .",
    "it is a solution to eq .",
    "( [ eq : constraint_q_positive ] ) , such that ( a ) @xmath192 ( b ) there exists a value @xmath193 ; and @xmath194 for @xmath195 , @xmath196 for @xmath28 , and @xmath197 are satisfied .",
    "( c ) the constraints @xmath129 are suppressed for @xmath198 and they can take an arbitrary value . , width=377 ]    with this @xmath159 the following theorem holds .",
    "[ th : m_odd ]     * for @xmath25 odd , @xmath199 is a lower bound of @xmath2 which is consistent with eq .",
    "( [ eq : constraint_q_positive ] ) . *",
    "more generally , for any @xmath200 and @xmath77 , @xmath18 is a lower ( resp .",
    "upper ) bound of @xmath0 if @xmath78 is even ( resp .",
    "if @xmath79 , we have @xmath201 for all @xmath1 .",
    "that is , eve can actually achieve @xmath65 . hence @xmath18 is not only a lower ( resp .",
    "upper ) bound , but is also the minimum ( resp .",
    "maximum ) of @xmath0 for @xmath78 even ( resp .",
    "odd ) .    the proof will be given in section [ sec : proof_th_odd ] .",
    "next in order to demonstrate that @xmath199 can be actually obtained within finite steps , we present an algorithm for calculating it . first note that for given @xmath162 and @xmath163 , by plugging @xmath178 in eq .",
    "( [ eq : constraint_q_positive ] ) we obtain @xmath202 with @xmath203 then by using cramer s rule as in eq .",
    "( [ eq : y_bar_expicit_form ] ) , @xmath204 for @xmath205 is given as @xmath206 with @xmath207 defined in ( [ eq : def_d ] ) .",
    "now that we have got rid of all inifinite series , @xmath159 can be obtained numerically as follows .",
    "* algorithm *    1 .",
    "calculate @xmath208 using eq .",
    "( [ eq : z_n ] ) .",
    "if @xmath209 , let @xmath210 , @xmath211 and go to step [ it : obtain_z_1 ] .",
    "2 .   let @xmath212 .",
    "[ it : repeat ] if @xmath189 , let @xmath213 and go to step [ it : repeat ] .",
    "otherwise let @xmath214 and find the root @xmath215 of @xmath216 .",
    "[ it : obtain_z_1 ] calculate @xmath217 and stop .",
    "note that we need @xmath208 and @xmath218 in steps 1 and 3 only in order to check their plus or minus sign .",
    "hence when actually running the algorithm , one may omit the division by @xmath207 appearing in eq .",
    "( [ eq : z_n ] ) by ordering @xmath6 , for example , as @xmath219 .",
    "this algorithm stops within finite steps , since @xmath162 is finite as shown in the previous subsection .",
    "moreover , when @xmath26 , @xmath220 is bounded from above as @xmath221 , as shown in appendix [ seq : upper_bound_l_0 ] .",
    "hence , e.g. for @xmath68 , @xmath222 and @xmath46 , we have @xmath223 .      in this subsection",
    "we prove theorem [ th : m_odd ] . as in the previous section ,",
    "we first show that @xmath18 are a lower or upper bound , and after that we demonstrate that @xmath18 satisfy constraint ( [ eq : complete_boundary_condition ] ) if @xmath26 .",
    "[ le : lower_bound_z ] for @xmath25 odd , @xmath199 is a lower bound on @xmath2 .",
    "more generally for any @xmath25 and any @xmath77 , if @xmath78 is even ( resp .",
    "odd ) , @xmath18 is a lower ( resp .",
    "upper ) bound on @xmath0 .",
    "_ proof : _ since the proof is essentially the same for all cases , we here consider only the case of @xmath128 and @xmath25 odd . during the proof",
    "we suppress constraint ( [ eq : complete_boundary_condition ] ) for @xmath172 and let @xmath224 take an arbitrary value . for @xmath225",
    "we still assume @xmath226 . again , by showing that @xmath199 is the minimum of @xmath2 with these requirements , we prove that it is a lower bound under the complete set of constraints ( [ eq : complete_boundary_condition ] ) . as in the proof of lemma [ le : minimum ] , the difference between any solution @xmath227 and @xmath159 can be expanded as in eq .",
    "( [ eq : difference_expanded ] ) . thus the constraint @xmath228 yields @xmath229 which can be rewritten by using eq .",
    "( [ eq : def_w ] ) as @xmath230 similarly , @xmath2 is expressed in terms of @xmath231 as @xmath232 now eve s task is to minimize eq .",
    "( [ eq : y_1_expanded_m_odd ] ) by adjusting @xmath233 while maintaining inequality ( [ eq : cond_y_m_m_odd ] ) .",
    "note that both the relations are linear in @xmath233 , and thus the best configuration that minimizes @xmath2 will be determined by their coefficients , @xmath234 and @xmath235 .",
    "in fact , as we will show in appendix [ app : proof_monotonically_increasing ] , the ratio of these two coefficients @xmath236 increases monotonically with respect to @xmath124 .",
    "hence the minimum value is achieved by maximizing as many @xmath237 s as possible with larger @xmath124 s in such a way that is consistent with eq .",
    "( [ eq : cond_y_m_m_odd ] ) .",
    "if the equality can be achieved in ( [ eq : cond_y_m_m_odd ] ) for some configuration of @xmath231 , this amounts to finding @xmath238 such that @xmath239 for @xmath240 , @xmath241 for @xmath242 , and @xmath243 for @xmath244 , and also @xmath245 is satisfied . on the contrary",
    "if the equality does not hold for any configuration , @xmath2 is minimized when @xmath246 for all @xmath28 .",
    "both these cases corresponds to @xmath159 of definition [ def : define_large_z ] .",
    "hence @xmath159 thus obtained indeed gives the minimum of @xmath2 under our temporal constraints on @xmath0 .",
    "[ lm : boundary_z ] if @xmath137 , then @xmath201 is satisfied for all @xmath77 .    _",
    "proof : _ recall @xmath136 when @xmath26 from lemma [ lm : boundary ] . substituting @xmath65 in ( [ eq : difference_expanded ] ) , we find for @xmath77 , @xmath247 now since the schur polynomial @xmath248 and @xmath249 for @xmath114 being positive , it is clear that @xmath250 for @xmath78 even , and @xmath251 for @xmath78 odd .    on the other hand , in order to show @xmath251 for @xmath78 even and @xmath252 for @xmath78 odd , suppose we had @xmath253 constraints , say , of @xmath254 from the beginning , and consider the corresponding @xmath131 and @xmath24 , which we will denote in what follows as @xmath255 and @xmath256 .",
    "lemma [ lm : boundary ] holds in this case as well and we have @xmath257 . by definition ,",
    "@xmath255 , as well as @xmath159 , are a solution to eq .",
    "( [ eq : constraint_q_positive ] ) for @xmath258 .",
    "hence we can apply the same argument as in the previous paragraph , using @xmath256 and @xmath255 this time , and express @xmath18 for @xmath259 as @xmath260 again due to the positivity of the schur polynomials and @xmath249 , this shows @xmath251 for @xmath78 even , and @xmath252 for @xmath78 odd .",
    "this completes the proof .",
    "in this paper , we presented an improved upper and lower bounds @xmath17 , @xmath18 for the asymptotic yield @xmath0 for the decoy state method using a finite number @xmath25 of decoy light intensities .",
    "in particular if all the light intensities @xmath6 are less than or equal to one , @xmath17 , @xmath18 are not only a lower or upper bound , but in fact are the exact minimum or maximum .    moreover , these @xmath17 and @xmath18 can always be obtained by simple numerical calculation by using eq .",
    "( [ eq : y_1_explicit_form ] ) , ( [ eq : y_bar_expicit_form ] ) and by using the algorithm given in sec .",
    "[ sec : algorithm_z_n ] .       * acknowledgment *    this work was supported by the project  research and development on quantum cryptography of the national institute of information and communications technology , as part of ministry of internal affairs and communications of japan s program  r&d on quantum communication technology . \"",
    "the schur polynomial @xmath85 given in definition [ def : schur_polynomial ] can also be expressed as a sum of monomials as @xmath261 where @xmath262 denotes a semistandard young tableaux on a young diagram @xmath93 , on which number @xmath263 appears @xmath264 times ( see , e.g. , @xcite ) .",
    "semistandard tableaux are those having entries which are strictly increasing vertically and weakly increasing horizontally . for example , @xmath265 is semistandard whereas @xmath266 is not .",
    "the monomial corresponding to the former tableau is @xmath267 . for @xmath68 and @xmath268",
    ", there are eight semistandard tableaux , @xmath269 , and the schur polynomial reads @xmath270 which equals the one obtained from definition [ def : schur_polynomial ] .    if @xmath271 , the polynomials @xmath85 are always positive since the coefficient of each monomial is positive in eq .",
    "( [ eq : schur_poly_expanded ] ) . in this case",
    "there is a simple upper bound @xmath272 with @xmath273 and @xmath274 . from this and using the formula @xmath275 ( see ,",
    "e.g. , @xcite ) we find @xmath276",
    "for @xmath114 , define @xmath277 as follows .",
    "for @xmath123 , let @xmath278 and for @xmath279 , let @xmath280 be @xmath281 all other elements of @xmath282 are zero .",
    "then it is easy to see that for @xmath32 , @xmath283 @xmath24 in definition [ def : delta_y ] is expressed as @xmath284 and thus we have shown that @xmath24 is indeed the solution .",
    "next we prove that expansions in @xmath24 are possible . for a given @xmath103 , define @xmath285 and consider @xmath286 . with @xmath103 and @xmath287 both being a solution to eq .",
    "( [ eq : def_delta ] ) , @xmath288 is also a solution .",
    "then note that by definition @xmath289 for all @xmath28 , and thus @xmath290 satisfy @xmath291 from this it follows @xmath289 for @xmath77 as well , due to the invertibility of the matrix on the left hand side .",
    "hence we have shown @xmath292 and that any @xmath103 can be expanded with @xmath24 .    in order to prove the uniqueness of the coefficients of @xmath24 , it suffices to show the linear independence of @xmath24 .",
    "this is obvious from the fact that for any @xmath28 , there is only one @xmath24 with a nonzero value in the @xmath1-th element , i.e. , @xmath293 .",
    "_ proof : _ in this proof the variables of the schur polynomials are always @xmath5 , and we will omit them for the sake of brevity . it is immediate from definition [ def : schur_polynomial ] that @xmath294 can be rewritten as @xmath295 and by using this we obtain @xmath296 multiplication of two schur polynomials @xmath85 and @xmath297 is especially simple when the partition @xmath298 ( or equivalently @xmath93 ) consists of a single number @xmath299 .",
    "that is , @xmath300 where the sum is over all partitions @xmath19 that are obtained from @xmath93 by adding @xmath118 boxes , with no two in the same raw ( see , e.g. , section 2.2 of ref .",
    "hence for @xmath301 we have @xmath302 and from this it follows that the numerator of eq .",
    "( [ eq : k_m_difference ] ) is positive ; @xmath303 . hence eq .",
    "( [ eq : k_m_difference ] ) is also always positive , meaning that @xmath294 is monotonically increasing .",
    "for @xmath26 , @xmath220 can be bounded from above as follows .",
    "if equality can not hold in ( [ eq : cond_y_m_m_odd ] ) for any configuration of @xmath23 , we have @xmath210 ( cf .",
    "the argument below eq .",
    "( [ eq : k_m_defined ] ) ) . on the contrary , if @xmath304 for some @xmath182 , we have from eq .",
    "( [ eq : z_m_expanded ] ) @xmath305 next using the upper bound of ( [ eq : s_lambda_bound ] ) and applying a similar argument as in ( [ eq : i_n_upperbound_origin ] ) , we find @xmath306 as can be seen from ( [ eq : y_n_extended ] ) @xmath307 is bounded from below as @xmath308 , and @xmath220 is upper bounded as @xmath309    99 w. -y .",
    "hwang , phys .",
    "91 , 057901 ( 2003 ) .",
    "wang , phys .",
    "lett . , 94 , 230503 ( 2005 ) .",
    "lo , x. ma , and k. chen , phys .",
    "94 , 230504 ( 2005 ) .",
    "h. inamori et al . , euro .",
    "j. d 41 , 599 ( 2007 ) ; d. gottesman et al .",
    "comput . 5 , 325 ( 2004 ) ; r. renner et al .",
    "a 72 , 012332 ( 2005 ) ; m. hayashi , phys .",
    "a 76 , 012329 ( 2007 ) ; m. koashi , arxiv : quant - ph/0609180v1 ( 2006 ) .",
    "wang , phys .",
    "a 72 , 012322 ( 2005 ) .",
    "x. ma et al . , phys .",
    "a72 , 012326 ( 2005 ) .",
    "m. hayashi , new j. phys , 9 , 284 ( 2007 ) .",
    "see , e.g. , e. kreyszig , _ advanced engineering mathematics , eighth edition _ , ( john wiley & sons , inc . , 1999 ) .",
    "w. fulton and j. harris , _ representation theory _ ,",
    "( springer verlag , 1991 ) .",
    "w. fulton , _ young tableaux _ , ( cambridge univ .",
    "press , 1997 ) ."
  ],
  "abstract_text": [
    "<S> in this paper , for the decoy state method using a finite number of decoy light intensities , we present an improved upper and lower bounds for the asymptotic yield @xmath0 for @xmath1-photon states . in particular </S>",
    "<S> if all the light intensities are less than or equal to one , they are not only a lower or upper bound , but in fact are the exact minimum or maximum . </S>"
  ]
}
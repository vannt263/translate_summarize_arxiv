{
  "article_text": [
    "in @xcite cardelli introduced a family of process calculi , called _ brane calculi _ , endowed with dynamically nested membranes , focussing on the interactions that happen _ on _ membranes rather than inside them .",
    "brane calculi offer a suitable and formal setting for investigating the behaviour of the specified systems , in order to establish the biological properties of interest .",
    "nevertheless , since the behaviour of a system is usually given in terms of its transition system , whose size can be huge , especially when modelling complex biological systems , its exploration can be computationally hard .",
    "one possible solution consists in resorting to static techniques to extract information on the dynamic behaviour and to check the related dynamic properties , without actually running the corresponding program .",
    "the price is a loss in precision , because these techniques can only provide approximations of the behaviour .",
    "however , we can exploit static results to perform a sort of preliminary and not too much expensive screening of _ in silico _ experiments . in the tradition @xcite of applying static techniques to process calculi used in modelling biological phenomena",
    ", we present here a contextual and less approximate extension of the control flow analysis for brane calculi introduced in @xcite .",
    "control flow analysis ( cfa ) is a static technique , based on flow logic @xcite , that provides a variety of automatic and decidable methods and tools for analysing properties of computing systems .",
    "one of the advantages of the cfa is that the obtained information on the behaviour are quite general . as a consequence ,",
    "a single analysis can suffice for verifying a variety of properties : different inspections of the cfa results permit to check different properties , with no need of re - analysing it several times .",
    "only the values of interest tracked for testing change accordingly and the definitions of the static counterparts of the dynamic properties must be provided .",
    "control flow analysis provides indeed a _",
    "safe over - approximation _ of the _ exact _ behaviour of a system , in terms of the possible reachable configurations .",
    "that is , at least all the valid behaviours are captured .",
    "more precisely , all those events that the analysis does not consider as possible will _ never _ occur . on the other hand ,",
    "the set of events deemed as possible may , or may not , occur in the actual dynamic evolution of the system . to this end",
    "we have improved the precision of the cfa in @xcite , by adding information on the context ( along the lines of @xcite ) and introducing causality information on the membranes .",
    "also , this extra - information allows us to refine the static checking of properties related to the spatial structure of membranes .",
    "furthermore , we focus on causality , since we believe it plays a key role in the understanding of the behaviour of biological systems , in our case specified in a process algebra like the brane one . in order to investigate the possibilities of our cfa to capture some kinds of causal dependencies arising in the mbd version of brane calculi",
    ", we follow @xcite and its classification , by applying the analysis to the same key examples .",
    "we observe that the analysis is able to capture some of these dependencies .",
    "this is a small improvement in the direction of giving some causal structure to the usually flat cfa results .",
    "the gain in precision is paid in terms of complexity : the presented analysis is rather expensive from a computational point of view .",
    "the paper gets in the research stream dedicated to the application of static techniques and , in particular , control flow analysis to bio - inspired process calculi e.g. ,  @xcite .",
    "similar to ours are the works devoted to the analysis of bioambients @xcite .",
    "in particular , @xcite , where the authors introduce a contextual cfa and @xcite where a pathway analysis is exploited for investigating causal properties .",
    "bioambients are analysed using instead abstract interpretation in @xcite .",
    "the analysis presented in @xcite records information on the number of occurrences of objects and therefore is able to capture quantitative and causal aspects , necessary to reason on the temporal and spatial structure of processes . in @xcite , in a different context , the behaviour of processes is safely approximated and the properties of a fragment of computation tree logic is preserved .",
    "this makes it possible to address temporal properties and therefore some kinds of causality .",
    "finally , @xcite presents a static analysis that computes an abstract transition systems for bioambients processes , able to validate temporal properties .",
    "our choice of the brane calculi depends on the fact they have resulted to be particularly useful for modelling and reasoning about a large class of biological systems , such as the one of the eukaryotic cells that , differently from the prokaryotes , possess a set of internal membranes . among the first formalisms used to investigate biological membranes there are the p systems @xcite , introduced by pun , which formalise distributed parallel computations biologically - inspired : a biological system is seen as a complex hierarchical structure of nested membranes inspired by the structure of living cells . finally , besides brane , there are other calculi of interest for our approach , that have been specifically defined for modelling biological structures such as compartments and membranes , e.g. ,  an extension @xcite of @xmath0-calculus @xcite , beta binders @xcite and the calculus of looping sequences @xcite .",
    "the rest of the paper is organised as follows . in section [ brane ] ,",
    "we present the mbd version of brane calculi .",
    "we introduce the control flow analysis in section [ cfa ] . in section [ spatial ] , we exploit our analysis to check some properties related to the hierarchical structure of brane processes . in section [ causal ] , we discuss on which kind of causal information our cfa can capture . in section [ viral ] , the static treatment of brane pep action is added and the whole analysis is applied to a model of infective cycle of the semliki forest virus . section [ concl ] presents some concluding remarks .",
    "proofs of theorems and lemmata presented throughout the paper are collected in appendix [ app - proof ] .",
    "the brane calculi  @xcite are a family of calculi defined to describe the interaction amongst membraned component .",
    "specifically , the membrane interactions are explicitly described by means of a set of membrane - based interaction capabilities .",
    "a system consists of nested membranes , as described by the following syntax , where @xmath1 is taken from a countable set @xmath2 of names . @xmath3 the basic structure of a system consists of ( sub-)system composition , represented by the monoidal operator @xmath4 ( associative , commutative and with @xmath5 as neutral element ) .",
    "replication @xmath6 is used to represent the composition of an unbounded number of systems or membrane processes .",
    "@xmath7 is a _ membrane _ with content @xmath8 and interaction capabilities represented by the process @xmath9 .",
    "note that , following @xcite , we annotate membranes with a unique label @xmath10 so as to distinguish the different syntactic occurrences of a membrane .",
    "note that these labels have no semantic meaning , but they are useful for our cfa .",
    "we refer to @xmath11 as the identity of the membrane @xmath12 , where @xmath13 is the finite set of membrane identities .",
    "we assume that each considered system is contained in an ideal outermost membrane , identified by a distinguished element @xmath14 .    membranes exhibit interaction capabilities , like the mbd set of actions that model membrane fusion and splitting .",
    "the former is modelled by the _ mating _ operation , the latter can be rendered both by _ budding _ , that consists in splitting off exactly one internal membrane , and _ dripping _ , that consists in splitting off one empty membrane . for the sake of simplicity , we focus here on the fragment of the calculus without communication primitives and molecular complexes , and with only the mbd actions .",
    "the treatment of the alternative set of pep actions is analogous and it is postponed to section [ causal ] , where it is briefly introduced .",
    "membrane processes @xmath9 consist of the empty process @xmath15 , the parallel composition of two processes , represented by the monoidal @xmath16 operator with @xmath15 as neutral element , the replication of a process and of the process that executes an interaction _ action _ @xmath17 and then behaves as another process @xmath9 .",
    "actions for mating ( @xmath18 ) and budding ( @xmath19 ) have the corresponding co - actions ( @xmath20 , @xmath21 resp . ) to synchronise with . here",
    "@xmath1 , which identifies a pair of complementary action and co - action that can interact , is taken from a countable set @xmath2 of names .",
    "the actions @xmath22 and @xmath23 are equipped with a process @xmath24 associated to the membrane that will be created when performing budding and dripping actions .",
    "the semantics of the calculi is given in terms of a transition system defined up to a structural congruence and reduction rules . the standard _ structural congruence _",
    "@xmath25 on systems @xmath26 and membranes @xmath27 is the least congruence satisfying the clauses in table  [ structcong ] .",
    "@xmath28    reduction rules complete the definition of the interleaving semantics .",
    "they consist of the basic reaction rules , valid for all brane calculi ( upper part of table  [ opsem ] ) and by the reaction axioms for the mbd version ( lower part of table  [ opsem ] ) .",
    "we use the symbol @xmath29 for the reflexive and transitive closure of the transition relation @xmath30 .",
    "@xmath31 \\hline \\begin{array}{ll } \\\\[.3 ex ] ( mate ) & \\textcolor{blue}{mate_n}.\\sigma | \\sigma_0 \\langle p \\rangle^{\\mu_{p } } \\circ \\textcolor{blue}{mate_n^{\\bot}}.\\tau | \\tau_0 \\langle q \\rangle^{\\mu_q } \\rightarrow \\sigma | \\sigma_0 |\\tau | \\tau_0 \\langle p",
    "\\circ q \\rangle^{\\mu_{pq } } \\\\ & \\mbox { where } \\mu_{pq } = { \\bf mi_{mate}}(mate_n,\\mu_p , mate^{\\bot}_n,\\mu_q,\\mu_{gp},\\mu_p,\\mu ) ,   \\\\",
    "& \\mbox { $ \\mu$ identifies the closest membrane surrounding $ \\mu_p$ and $ \\mu_q$ in the context $ \\mu_{gp}\\mu_p$}\\\\ ( bud ) & \\textcolor{blue}{bud_n^{\\bot}(\\rho)}.\\tau | \\tau_0 \\langle   \\textcolor{blue}{bud_n}.\\sigma | \\sigma_0 \\langle p",
    "\\rangle^{\\mu_p } \\circ q \\rangle^{\\mu_q }   \\rightarrow \\rho   \\langle \\sigma | \\sigma_0 \\langle p \\rangle^{\\mu_p } \\rangle^{\\mu_{r } } \\circ \\tau | \\tau_0\\langle q \\rangle^{\\mu_q }   \\\\ & \\mbox { where } \\mu_{r } = { \\bf mi_{bud}}(bud_n,\\mu_p , bud^{\\bot}_n,\\mu_q,\\mu_{gp},\\mu_p,\\mu ) , \\\\ & \\mbox{$\\mu$ identifies the closest membrane surrounding $ \\mu_q$ in the context $ \\mu_{gp}\\mu_p$ } \\\\ ( drip ) & \\textcolor{blue}{drip(\\rho)}.\\sigma | \\sigma_0 \\langle p \\rangle^{\\mu_p } \\rightarrow \\rho \\langle   \\rangle^{\\mu_{r } }   \\circ   \\sigma | \\sigma_0 \\langle p\\rangle^{\\mu_p }   \\\\ & \\mbox { where } \\mu_{r } = { \\bf mi_{drip}}(drip(\\rho),\\mu_p,\\mu_{gp},\\mu_p,\\mu ) , \\\\ & \\mbox{$\\mu$ identifies the closest membrane surrounding $ \\mu_p$ in the context $ \\mu_{gp}\\mu_p$ } \\\\[1ex ] \\end{array } \\\\",
    "\\hline \\end{array}\\ ] ]    they are quite self - explanatory and we make only a few observations about the labels treatment .",
    "given a system , the set of its membrane identities is finite . indeed",
    ", the structural congruence rule imposes that @xmath32 , i.e.  no new identity label @xmath10 is introduced by recursive calls .",
    "a distinguished membrane identity is needed each time a new membrane is generated as a consequence of a performed action , e.g. the new membrane obtained by the fusion of two membranes after a mate synchronisation . to determine such labels we exploit the functions @xmath33 , @xmath34 , and @xmath35 that return fresh and distinct membrane identities , depending on the actions and on their syntactic contexts  @xcite .",
    "recall that the number of needed membrane identities is finite , as finite are the possible combinations of actions and contexts .",
    "therefore , we choose these functions in such a way that , given an action and the identities of the membranes on which the action ( and the corresponding co - action , if any ) reside , the function includes the membrane identity needed to identify the membrane obtained by firing that action .",
    "we present an extension of the control flow analysis ( cfa ) , introduced in @xcite for analysing system specified in brane calculi .",
    "the analysis over - approximates all the possible behaviour of a top - level system @xmath36 . in particular",
    ", the analysis keeps track of the possible contents of each membrane , thus taking care of the possible modifications of the containment hierarchy due to the dynamics .",
    "the new analysis , following @xcite , incorporates context in the style of 2cfa , thus increasing the precision of the approximations w.r.t .",
    "furthermore , the analysis exploits some causality information to further reduce the degree of approximation . a localised approximation of the contents of a membrane or _ estimate _",
    "@xmath37 is defined as follows : @xmath38 here , @xmath39 ( that is @xmath40 ) means that the membrane identified by @xmath10 may surround the membrane identified by @xmath41 , whenever @xmath10 is surrounded by @xmath42 and @xmath42 is surrounded by @xmath43 .",
    "the outermost membranes @xmath44 represent what is called the _ context _ and that amounts to @xmath45 when the analysed membrane is at top - level .",
    "moreover , @xmath46 means that the action @xmath17 may reside on and affect the membrane identified by @xmath10 , in the context @xmath44 .",
    "furthermore , the analysis collects two types of some causality information :    * an approximation of the possible causal circumstances in which a membrane can arise : @xmath47 here @xmath48 means that the membrane @xmath49 can be _ causally derived _ by the firing of the action @xmath50 in @xmath51 and the coaction @xmath52 in @xmath53 , in the context @xmath54 .",
    "similarly , @xmath55 for an action @xmath50 like @xmath56 , without a co - action . *",
    "an approximation of the possible membrane incompatibilities : @xmath57 here , @xmath58 means that the membrane @xmath10 in the context @xmath44 can not interact with the membrane @xmath10 in the context @xmath59 , because the second membrane is obtained from the first and the first one is dissolved .",
    "note that @xmath60 and @xmath61 are two strict order relations , thus only transitivity property holds . to validate the correctness of a proposed estimate @xmath37 , we state a set of clauses operating upon judgements like @xmath62 .",
    "this judgement expresses that when the subprocess @xmath8 of @xmath36 is enclosed within a membrane identified by @xmath11 , in the context @xmath63 , then @xmath37 correctly captures the behaviour of @xmath8 , i.e.  the estimate is valid also for all the states @xmath64 passed through a computation of @xmath8 .",
    "the analysis is specified in two phases .",
    "first , it checks that @xmath37 describes the initial process .",
    "this is done in the upper part of table  [ analysis ] , where the clauses amount to a syntax - driven structural traversal of process specification .",
    "the clauses rely on the auxiliary function @xmath65 that collects all the actions in a membrane process @xmath9 and that is reported at the beginning of table  [ analysis ] .",
    "note that the actions collected by @xmath65 , e.g. , in @xmath66 are equal to the ones in @xmath67 , witnessing the fact that here the analysis introduces some imprecision and approximation .",
    "he clause for membrane system @xmath68 checks that whenever a membrane @xmath69 is introduced inside a membrane @xmath10 , in the context @xmath70 the relative hierarchy position must be reflected in @xmath37 , i.e.  @xmath71 .",
    "furthermore , the actions in @xmath9 that affect the membrane @xmath41 and that are collected in @xmath72 , are recorded in @xmath73 . finally ,",
    "when inspecting the content @xmath8 , the fact that the enclosing membrane is @xmath41 in the context @xmath74 is recorded , as reflected by the judgement @xmath75 . the rule for @xmath5 does not restrict the analysis result , while the rules for parallel composition @xmath4 , and replication @xmath6 ensure that the analysis also holds for the immediate sub - systems , by ensuring their traversal . in particular , note that the analysis of @xmath76 is equal to the one of @xmath8 .",
    "this is another source of imprecision .",
    "+   +    secondly , the analysis checks that @xmath37 also takes into account the dynamics of the process under consideration ; in particular , the dynamics of the containment hierarchy of membranes .",
    "this is expressed by the closure conditions in the lower part of table [ analysis ] that mimic the semantics , by modelling , without exceeding the precision boundaries of the analysis , the semantic preconditions and the consequences of the possible actions .",
    "more precisely , each precondition checks whether a pair of complementary actions could possibly enable the firing of a transition according to @xmath37 .",
    "the conclusion imposes the additional requirements on @xmath37 that are necessary to give a valid prediction of the analysed action .",
    "consider e.g. , the clause for @xmath77 ( the other clauses are similar ) .",
    "if ( i ) there exists an occurrence of a mate action : @xmath78 ; ( ii ) there exists an occurrence of the corresponding co - mate action : @xmath79 ; ( iii ) the corresponding membranes are siblings : @xmath80 , ( iv ) the redexes are not incompatible , i.e.  the corresponding membranes can interact : @xmath81 then the conclusion of the clause expresses the effects of performing the transition @xmath77 . in this case",
    ", we have that @xmath37 must reflect that ( i ) there may exist a membrane @xmath82 inside @xmath10 , in the context @xmath44 , at the same nesting level of the membranes @xmath83 and @xmath84 ; and ( ii ) the contents of @xmath83 and of @xmath84 , their children and their grandchildren , may also be included in @xmath82 .",
    "note that the contribution changes depending on whether we consider @xmath83 ( @xmath84 , resp . ) , their children or their grandchildren . with the inclusion @xmath85 we mean that for each @xmath41 in the context @xmath86 , all the elements in @xmath87 are included in @xmath88 .",
    "similarly , with @xmath89 we mean that for each @xmath90 in the context @xmath91 , and in turn for each @xmath41 in the context @xmath86 , all the elements in @xmath92 belong to @xmath93 .",
    "we use a similar notation for the relation @xmath61 .",
    "( iii ) the membrane @xmath82 is the result of the transition @xmath77 , performed by the two membranes @xmath83 and @xmath84 , in the context @xmath94 , as witnessed by the corresponding entry in the component @xmath60 ; ( iv ) the new membrane @xmath82 is @xmath95 with the @xmath83 and @xmath84 , because @xmath82 , derived by the transition @xmath77 , follows both @xmath83 and @xmath84 .",
    "note the similar incompatibility between the membrane @xmath51 in the context @xmath96 before the @xmath97 transition and the derived one @xmath51 in the context @xmath98 .",
    "the above requirements correspond to the application of the semantic rule @xmath77 that would result in the fusion of the two membranes .",
    "note that , since the new membrane @xmath82 inherits the prefix actions that affected the membranes @xmath83 and @xmath84 , it inherits also @xmath18 and @xmath99 ( we write in red this kind of _ imprecise _ inclusions ) .",
    "this is due to over - approximation , even though it is harmless : the two prefix actions can not be further used to predict a communication because they both occur in @xmath100 .",
    "still , the presence of both @xmath78 and @xmath101 could lead to predict another interaction that is impossible at run time .",
    "thanks to @xmath61 , we can safely exclude it , thus gaining precision .",
    "this gain is obtained in general : @xmath61 collects indeed pairs of capabilities that could be syntactically compatible with an interaction , but that can not really interact , because they dynamically occur in membranes that are not simultaneously present .",
    "the gain in precision is paid in terms of complexity : the presented analysis is rather expensive from a computational point of view , due to the introduction of contexts and to the possibly high number of different membrane names .",
    "both these features may lead to an explosion of the possible reachable configurations .    to illustrate how our cfa work we use two simple examples .",
    "the emphasis is on the process algebraic structures and not on their biological expressiveness .",
    "we first report an application of it to a simple process @xmath8 , illustrated in @xcite ( and in turn taken from @xcite ) .",
    "we consider @xmath8 and the following possible computations , where @xmath102 and @xmath103 are not specified as they are not relevant here .",
    "@xmath104    @xmath105        the main entries of the analysis are reported in table [ ex ] , where @xmath45 identifies the ideal outermost context in which the system top - level membranes are .",
    "we write in red the entries due to approximations , but not reflecting the dynamics .",
    "furthermore , we pair the inclusions of actions and of the corresponding co - actions , in order to emphasise which are the pairs of prefixes that lead to the prediction of a possible communication .",
    "it is easy to check that @xmath37 is a valid estimate by following the two stage procedure explained above .    to understand in which way",
    "the @xmath61 component refines the analysis , note that since the analysis entries include @xmath106 and @xmath107 , without the check on the @xmath61 component , we can predict a transition between the two membranes @xmath82 and @xmath83 .",
    "this transition is not possible instead , because @xmath82 is causally derived by @xmath83 .",
    "note that although the cfa offers in general an over - approximation of the possible dynamic behaviour , in this example the result is rather precise . the transition @xmath18 is predicted as possible , since its precondition requirements are satisfied .",
    "indeed , we have that @xmath108 @xmath109 , and @xmath51 and @xmath53 are sibling and @xmath110 membranes .",
    "also the transition on @xmath111 is initially possible and this result is actually predicted by the analysis , since @xmath112 and @xmath113 , with @xmath114 , i.e. @xmath8 is the father of @xmath115 .",
    "instead , we can observe that the transition on @xmath116 can not be performed in the initial system . indeed , @xmath116 resides on the membrane @xmath117 in the context @xmath118 , while the coaction @xmath119 resides on @xmath53 that is not the father of @xmath117 .",
    "the transition on @xmath116 can be performed instead in the membrane @xmath117 in the context @xmath120 , that is the membrane introduced by the previous @xmath18 transition .",
    "we now apply our cfa to another process @xmath8 , taken from @xcite .",
    "we consider @xmath8 and the following possible computations .",
    "@xmath121    @xmath122    @xmath123        the main entries of the analysis are reported in table [ ex2 ] , where we do not include the entries due to approximations , but not reflecting the dynamics .",
    "as before , we pair the inclusions of actions and of the corresponding co - actions , in order to emphasise which are the pairs of prefixes that lead to the prediction of a possible communication .",
    "this motivates some redundancies in the entries .",
    "also in this example , the cfa result is rather precise .",
    "[ [ semantic - correctness ] ] * semantic correctness * + + + + + + + + + + + + + + + + + + + + + +    our analysis is semantically correct with respect to the given semantics , i.e.  a valid estimate enjoys the following subject reduction property with respect to the semantics .    * ( subject reduction)*[sbj - red ] + if @xmath124 and @xmath62 then also @xmath125 .",
    "this result depends on the fact that analysis is invariant under the structural congruence , as stated below .    *",
    "( invariance of structural congruence)*[congr ] if @xmath126 and we have that @xmath62 then also @xmath125 .",
    "moreover , it is possible to prove that there always exists a least estimate ( see @xcite for a similar statement and proof ) .",
    "control flow analysis provides indeed a _",
    "safe over - approximation _ of the _ exact _ behaviour of a system , that is , at least all the valid behaviours are captured .",
    "more precisely , all those events that the analysis does not consider as possible will _ never _ occur . on the other hand ,",
    "the set of events deemed as possible may , or may not , occur in the actual dynamic evolution of the system .",
    "the 2cfa gains precision w.r.t  the 0cfa presented in @xcite and the incompatibility relation @xmath61 increases this gain . in the next section , we will discuss on the contribution of the component @xmath60 .",
    "we can exploit our analysis to check _ spatial structure _ properties , of the membranes included in the system under consideration .",
    "in particular , because of over - approximation , we can ask negative questions like whether : ( i ) a certain interaction capability @xmath127 _ never affects _ the membrane labelled @xmath10 , i.e.  it never occurs in the membrane process of the membrane labelled @xmath10 ; ( ii ) the membrane labelled @xmath10 _ never ends up _ in the membrane labelled @xmath128 .",
    "suppose we have all the possible labels @xmath10 of the possible membranes arising at run time .",
    "then we can precisely define the above informally introduced properties .",
    "we first give the definition of the dynamic property , then the corresponding static property and , finally , we show that the static property implies the dynamic one . for each static property",
    ", we check for a particular content in the component @xmath37 .    given",
    "a process @xmath8 including a membrane labelled @xmath10 , we say that the capability @xmath127 _ never affects _ the membrane labelled @xmath10 if there not exists a derivative @xmath64 such that @xmath129 , in which the capability @xmath127 can affect the membrane labelled @xmath10 .    given",
    "a process @xmath8 including a membrane labelled @xmath10 , we say that the capability @xmath127 _ never appears on _ the membrane labelled @xmath10 if and only if there exists an estimate @xmath130 such that : @xmath131 for each possible context @xmath44 .    given a process @xmath8 including a membrane labelled @xmath10 , then if @xmath127 never appears on the membrane labelled @xmath10 , then the capability @xmath127 never affects the membrane labelled @xmath10 .",
    "given a process @xmath8 including a membrane labelled @xmath10 and a membrane labelled @xmath128 , we say that the membrane @xmath128 _ never ends up inside _ the membrane labelled @xmath10 if there not exists a derivative @xmath64 such that @xmath129 , in which @xmath128 occurs inside the membrane @xmath10 .",
    "given a process @xmath8 including a membrane labelled @xmath10 , we say that @xmath128 _ never appears inside _ the membrane labelled @xmath10 if and only if there exists an estimate @xmath130 such that : @xmath132 for each possible context @xmath44 .    given a process @xmath8 including a membrane labelled @xmath10 and a membrane labelled @xmath128",
    ", then if @xmath128 never appears inside the membrane labelled @xmath10 , then the membrane @xmath128 never ends up inside the membrane labelled @xmath10 .    back to our first running example ,",
    "we can prove , for instance , that the capability @xmath133 never affects the membrane labelled @xmath51 .",
    "this can be checked by looking in the cfa entries , for the content of @xmath134 , that indeed does not include @xmath133 .",
    "intuitively , this explains the fact that the @xmath116 synchronisation is not syntactically possible in the context @xmath51 , whose sub - membrane @xmath135 is affected by @xmath116 .    in our second running example , we can prove instead , for instance , that the membrane @xmath136 never ends up inside the membrane labelled @xmath83 , where @xmath137 .",
    "indeed , by inspecting the cfa results , we have that @xmath138 .",
    "intuitively , this corresponds to the fact that the @xmath139 synchronisation is not syntactically possible in the context @xmath51 , because @xmath135 and @xmath140 are not siblings , while it is in the context @xmath82 .",
    "similarly , we can mix ingredients and introduce new properties , e.g.  one can ask whether two membranes labelled @xmath128 and @xmath141 , _ never end up ( occur ) together _ in the same membrane @xmath10 . on the static side , this amounts to checking whether there exists an estimate @xmath130 such that : for all possible context @xmath44 , @xmath142 or @xmath143 . note that a single analysis can suffice for verifying all the above properties : only the values of interest tracked for testing change .",
    "understanding the causal relationships between the actions performed by a process is a relevant issue for all process algebras used in systems biology .",
    "although our cfa approximates the possible reachable configurations , we are able to extract some information on the causal relations among these configurations . to investigate these possibilities of our cfa",
    ", we follow @xcite where different kinds of causal dependencies are described and classified , by applying our analysis to the same key examples .",
    "the first kinds are called _ structural causality _ and _ synchronisation causality _ and are typical of all process algebras .",
    "structural causality arises from the prefix structure of terms , as in    @xmath144    where the action on @xmath23 depends on the one on @xmath145 , since the second action is not reachable until the first has fired .",
    "synchronisation causality arises when an action depends on a previous synchronisation as in :    @xmath146    where , the mate action is possible only when both @xmath147 and @xmath148 have been performed , and the following @xmath149 and @xmath150 depend on the previous mate synchronisation .",
    "our cfa is not able to capture these kinds of dependencies , because of the @xmath151 function definition , according to which @xmath152 . in other words ,",
    "the cfa disperses the order between prefixes .    according to @xcite , when an action is performed on a membrane it impacts only on its continuation and not on the whole process on the membrane , e.g. , in :    @xmath153    @xmath154    the drip operation",
    "can be considered causally independent form the mate operation , because it can be executed regardless of the fact that the mate interaction has been performed .",
    "our analysis reflects this , because we have @xmath155 and also that @xmath156 .",
    "when considering mbd actions and , in particular , the mate action , we have to do with another kind of causality called _ environmental _ in @xcite , due to the fact that the interaction possibilities of the child membranes are increased by the mate synchronisation .",
    "examples of this kind of causality can be observed in our running examples . in the first , for instance , the @xmath116 depends on the @xmath18 , as reflected by the cfa entries : @xmath157 , where @xmath158 .    in the second , we can observe that the synchronisation on @xmath139 can not be performed before a synchronisation on @xmath18 , as captured by the following cfa entries : @xmath159 , and @xmath160 @xmath161 , where @xmath162 belongs to @xmath163 .",
    "finally , in @xcite , a casual dependency generated by bud ( and drip ) is discussed on the following example :    @xmath164    the bud action generates a new membrane and the corresponding actions are caused by the new membrane , as captured by the cfa entries : @xmath165 and @xmath166 .",
    "these considerations encourage us to further investigate and to formalise the static contribution of the cfa in establishing causal relationships .",
    "we illustrate our approach by applying it to the abstract description of the infection cycle of the semliki forest virus , shown in figure  [ virus ] , as specified in @xcite .",
    "the semliki forest virus is one of the so - called `` enveloped viruses '' .",
    "we focus just on the first stage of the cycle and we report the analysis as given in  @xcite .",
    "the virus , specified in table  [ virus - evol ] , consists of a capsid containing the viral rna ( the nucleocapsid ) .",
    "the nucleocapsid is surrounded by a membrane , similar to the cellular one , but enriched with a special protein .",
    "the virus is brought into the cell by phagocytosis , thus wrapped by an additional membrane layer .",
    "an endosome compartment is merged with the wrapped - up virus . at this point",
    ", the virus uses its special membrane protein to trigger the exocytosis process that leads the naked nucleocapsid into the cytosol , ready to damage it . by summarising ,",
    "if the @xmath167 gets close to a @xmath168 , then it evolves into an infected cell .",
    "the complete evolution of the viral infection is reported in table  [ virus - evol ] , while the main analysis entries are in table  [ virus - cfa ] .",
    "the specification includes the pep version of brane calculus , whose syntax and reduction semantics is reported in table  [ opsem2 ] .",
    "this further set of pep actions ( @xmath169 ) are inspired by endocytosis and exocytosis processes .",
    "the first indicates the process of incorporating external material into a cell , by engulfing it with the cell membrane , while the second one indicates the reverse process .",
    "endocytosis is rendered by two more basic operations : _ phagocytosis _ ( denoted by @xmath170 ) , that consists in engulfing just one external membrane , and _ pinocytosis _",
    "( denoted by @xmath171 ) , consists in engulfing zero external membranes ; _ exocytosis _ is instead denoted by @xmath172 .",
    "the cfa for the calculus can be straightforwardly extended to deal with the phago / exo / pino ( pep ) actions , as shown in table  [ analysis2 ] .",
    "@xmath173 \\hline \\hline \\end{array}\\ ] ]        roughly , the analysis results allow us to predict the effects of the infection .",
    "indeed , the inclusion @xmath174 reflects the fact that , at the end of the shown computation , @xmath175 is inside @xmath176 together with @xmath177 that is equivalent to @xmath178 , apart from the label @xmath179 that decorates the enclosed membrane @xmath180 .",
    "furthermore , we can check our properties in this systems .",
    "as far as the spatial structure properties , we can prove here , e.g. , that ( i ) the capability @xmath181 never affects the membrane labelled @xmath182 ( as @xmath183 ) ; and that ( ii ) the membrane @xmath184 never ends up inside the membrane labelled @xmath185 ( as @xmath186 ) .",
    "furthermore , we can observe that the cfa captures the dependency of the synchronisation on @xmath187 on the synchronisation on @xmath170 , since we have that @xmath188 , and @xmath182 is such that we have that @xmath189 .",
    "we have presented a refinement of the cfa for the brane calculi @xcite , based on contextual and causal information .",
    "the cfa provides us with a verification framework for properties of biological systems modelled in brane , such as properties on the spatial structure of processes , in terms of membrane hierarchy .",
    "we plan to formalise new properties like the ones introduced here .",
    "we have found that the cfa is able to capture some kinds of causal dependencies @xcite arising in the mbd version of brane calculi . as future work",
    ", we would like to investigate thoroughly and formally the static contribution of the cfa in establishing causal relationships between the brane interactions .",
    "* acknowledgments . *",
    "we wish to thank francesca levi for our discussion on a draft of our paper and our anonymous referees for their useful comments .",
    "1    b.  alberts , d.  bray , j.  lewis , m.  raff , k.  roberts , and j.d .  watson .",
    "`` molecular biology of the cell '' .",
    "third edition , garland .",
    "r.  barbuti , g.  caravagna , a.  maggiolo - schettini , p.  milazzo , and g.  pardini . .",
    "in _ proc .  of sfm08 _ , lncs 5016 ( 2008 ) , 387423 .    c.  bodei . _ a control",
    "flow analysis for beta - binders with and without static compartments_. theoretical computer science 410(33 - 34 ) : 3110 - 3127 , 2009 , elsevier .    c.  bodei , a.  bracciali , and d.  chiarugi .",
    "_ control flow analysis for brane calculi_. in proc . of mecbic08",
    ", entcs 227 , pp .",
    "59 - 75 , 2009 .",
    "n.  busi .",
    "_ towards a causal semantics for brane calculi_. in _ what is it about government that americans dislike _ , 19451965 , university press , 2007 .",
    "l.  cardelli . .",
    "in _ proc .  of computational methods in systems biology ( cmsb04 ) _ , lncs 3082 , 257280 , 2005 .",
    "r.  gori and f.  levi .",
    "a new occurrence counting analysis for bioambients .",
    ", lncs 3780:381 - 400 , 2005 .",
    "r.  gori and f.  levi .",
    "an analysis for proving temporal properties of biological systems .",
    ", lncs 4279:234252 , 2006 .",
    "r.  gori and f.  levi .",
    "comput.(8 ) : 869 - 921 , 2010 .",
    "v.  danos and c. laneve . .",
    "in _ proc .  of cmsb03 _ , lncs 2602 ( 2003 ) , 3446 , springer .    c. laneve and f. tarissan .",
    ", in entcs 171 ( 2 ) , pp . 139 - 154 , 2007 .",
    "h.  r. nielson and f.  nielson .",
    "flow logic : a multi - paradigmatic approach to static analysis . in _ the essence of computation _ ,",
    "lncs 2566 , pp .",
    "springer , 2002 .",
    "f.  nielson , h.  riis nielson , c.  priami , and d.  schuch da rosa . .",
    "entcs 180(3 ) , 6579 , 2007 , elsevier .",
    "g.  paun . .",
    ", 11(1 ) ( 2000 ) .",
    "h.  pilegaard , f.  nielson , h.  riis nielson . .",
    "in _ proc .  of emerging aspects of abstract interpretation06 _ , 2006",
    "h.  pilegaard , f.  nielson , h.  riis nielson . .",
    "in _ the journal of logic and algebraic programming _ , 2008 .",
    "c.  priami and p.  quaglia . . in _ proc",
    "of cmsb04 _ , lncs 3082 ( 2005 ) .",
    "a.  regev , e.m .",
    "panina , w.  silverman , l.  cardelli , and e.y .",
    "bioambients : an abstraction for biological compartments .",
    "_ theoretical computer science _",
    "325(1 ) : 141 - 167 .",
    "2004 , elsevier .",
    "this appendix restates the lemmata and theorems presented earlier in the paper and gives the proofs of their correctness . to establish the semantic correctness ,",
    "the following auxiliary results are needed .      by structural induction on @xmath8 .",
    "we show just one case . + * case * @xmath193 .",
    "we have that is equivalent to @xmath194 .",
    "now , @xmath195 and @xmath191 and @xmath196 imply @xmath197 and @xmath198 .",
    "therefore , by induction hypothesis , we have that @xmath192 .",
    "the proof amounts to a straightforward inspection of each of the clauses defining the structural congruence clauses relative to membranes .",
    "we only show two cases , the others are similar . + * case * @xmath201 .",
    "we have that @xmath202 . + * case * @xmath203 .",
    "we have that @xmath204 .",
    "now , since @xmath199 , we have that @xmath205 and therefore @xmath206 , from which the required @xmath207 .",
    "the proof amounts to a straightforward inspection of each of the clauses defining the structural congruence clauses .",
    "we only show two cases , the others are similar . + * case * @xmath208 .",
    "we have that @xmath209 is equivalent to @xmath210 , that is equivalent to @xmath211 and therefore to @xmath212 . + * case * @xmath213 .",
    "we have that @xmath214 is equivalent to @xmath215 . by proposition  [ afuncta ] , @xmath216 , and by induction hypothesis , we have that @xmath217 . as a consequence , we can conclude that @xmath218 .",
    "the proof is by induction on @xmath124 .",
    "the proofs for the rules @xmath219 and @xmath220 are straightforward , using the induction hypothesis and the clauses in table  [ analysis ] .",
    "the proof for the @xmath221 uses instead the induction hypothesis and lemma 4.1 .",
    "the proofs for the basic actions in the lower part of table  [ opsem ] are straightforward , using the clauses in table  [ analysis ] . + * case * ( par ) .",
    "let @xmath8 be @xmath222 and @xmath64 be @xmath223 , with @xmath224 .",
    "we have to prove that @xmath225 .",
    "now @xmath226 is equivalent to @xmath227 .",
    "by induction hypothesis , we have that @xmath228 , and from @xmath229 we obtain the required @xmath225 . + * case * ( brane ) .",
    "let @xmath8 be @xmath230 and @xmath64 be @xmath231 .",
    "we have to prove that @xmath232 .",
    "now @xmath62 is equivalent to have that @xmath233 . by induction hypothesis",
    ", we have that @xmath234 .",
    "we can therefore conclude that @xmath125 . + * case * ( struct ) .",
    "let @xmath235 , with @xmath236 such that @xmath237 . by lemma  [ acongr ]",
    ", we have that @xmath238 , by induction hypothesis @xmath239 and , again by lemma  [ acongr ] , @xmath125 . + * case * ( mate ) .",
    "let @xmath8 be @xmath240 and @xmath64 be @xmath241 . then , @xmath62 amounts to @xmath242 and @xmath243 and , in turn , to @xmath244 , @xmath245 , @xmath246 , and @xmath247 and @xmath248 . note that , @xmath249 does not belong to @xmath250 . because of the closure conditions , from the above , we have , amongst the several implied conditions , that @xmath251 such that @xmath252 . from @xmath253 for @xmath254 , we have that @xmath255 and @xmath256 and , by proposition  [ afatto ] , we have that @xmath257 and @xmath258 , and hence the required @xmath259 . + * case * ( bud ) .",
    "@xmath260 let @xmath8 be @xmath261 and @xmath64 be the process @xmath262 .",
    "now , @xmath62 is equivalent to @xmath263 , @xmath264 , and , moreover , @xmath265 and @xmath248 , from which we have that @xmath266 , @xmath267 , and @xmath268 .",
    "because of the closure conditions , from above , we have that @xmath269 such that @xmath270 , @xmath271 , @xmath272 , and ( @xmath273 and @xmath274 ( cond 2 ) ) .",
    "we have that @xmath125 is equivalent to have that @xmath275 ( 1 ) and that @xmath276 ( 2 ) . for ( 1 ) , we have to prove that @xmath270 , @xmath271 and @xmath277 , that is equivalent to @xmath272 , @xmath278 and @xmath279 . from the hypotheses , we have that @xmath272 . since @xmath280 and ( cond 2 ) we have @xmath281 . from @xmath268 , because of ( cond 2 ) and proposition  [ afatto ] , we have that @xmath282 . for ( 2 ) , we have to prove that @xmath283 , @xmath284 and @xmath248 . all these conditions are satisfied ( see above ) . therefore",
    ", we obtain the required @xmath125 . + * case * ( drip ) .",
    "let @xmath8 be @xmath285 and @xmath64 be @xmath286 .",
    "we have that @xmath62 is equivalent to @xmath287 , @xmath288 , and @xmath247 . because of the closure conditions , from the above , @xmath289 such that @xmath290 , @xmath271 .",
    "we have that @xmath125 is equivalent to both @xmath291 and @xmath292 .",
    "the first condition is verified , because @xmath290 and @xmath271 . the second amounts to @xmath287 and @xmath293 and it is satisfied as well .",
    "we therefore obtain the required @xmath125 .",
    "* theorem 5.2 * _ given a process @xmath8 including a membrane labelled @xmath10 , then if @xmath127 never appears on the membrane labelled @xmath10 , then the capability @xmath127 never affects the membrane labelled @xmath10_.    first of all , we observe that if @xmath127 affects @xmath10 in @xmath8 , then we have a contradiction , since it implies that @xmath131 for some context @xmath44 .",
    "we now show that there exist no @xmath64 , @xmath294 such that @xmath295 such that @xmath127 does not affect @xmath10 in @xmath64 , while it does in @xmath294 .",
    "the only case in which this can happen is when a @xmath97 or a @xmath296 is performed with parameter @xmath24 including @xmath127 .",
    "indeed , the firing of such an action lets arise a new membrane affected by the corresponding parameter .",
    "we focus on the second one .",
    "suppose we have in @xmath64 a sub - process @xmath297 and that @xmath127 occurs in @xmath24 .",
    "this amounts to have that @xmath127 can affect @xmath10 in @xmath294 . by theorem  [ sbj - red ]",
    ", we have that @xmath130 is an estimate also for @xmath64 .",
    "nevertheless this implies that @xmath298 , thus leading to a contradiction ."
  ],
  "abstract_text": [
    "<S> we improve the precision of a previous control flow analysis for brane calculi @xcite , by adding information on the context and introducing causality information on the membranes . </S>",
    "<S> this allows us to prove some biological properties on the behaviour of systems specified in brane calculi . </S>"
  ]
}
{
  "article_text": [
    "imagine touching a scorching hot needle to a single point on a surface . over time heat spreads out over the rest of the domain and can be described by a function @xmath0 called the _ heat kernel _ , which measures the heat transferred from a source @xmath1 to a destination @xmath2 after time @xmath3 .",
    "a well - known relationship between heat and distance is varadhan s formula  , which says that the geodesic distance @xmath4 between any pair of points @xmath5 on a riemannian manifold can be recovered via a simple pointwise transformation of the heat kernel : @xmath6 the intuition behind this behavior stems from the fact that heat diffusion can be modeled as a large collection of hot particles taking random walks starting at @xmath1 : any particle that reaches a distant point @xmath2 after a small time @xmath3 has had little time to deviate from the shortest possible path . to date , however , this relationship has not been exploited by numerical algorithms that compute geodesic distance .",
    "why has varadhan s formula been overlooked in this context ?",
    "the main reason , perhaps , is that it requires a precise numerical reconstruction of the heat kernel , which is difficult to obtain for small values of @xmath3  applying the formula to a mere approximation of @xmath7 does not yield the correct result , as illustrated in figures  [ fig : motivation ] and [ fig : logvsheat ] . the main idea behind",
    "the heat method is to circumvent this issue by working with a broader class of inputs , namely any function whose gradient is parallel to geodesics .",
    "we can then separate the computation of distance into two separate stages : first compute the gradient of the distance field , then recover the distance itself .",
    "relative to existing algorithms , the heat method offers two major advantages .",
    "first , it can be applied to virtually any type of geometric discretization , including regular and irregular grids , polygonal meshes , and even unstructured point clouds .",
    "second , it involves only the solution of sparse linear systems , which can be prefactored once and rapidly re - solved many times .",
    "this feature makes the heat method particularly valuable for applications such as shape matching , path planning , and level set - based simulation ( , free - surface fluid flows ) , which require repeated distance queries on a fixed geometric domain .",
    "moreover , because linear elliptic equations are widespread in scientific computing , the heat method can immediately take advantage of new developments in numerical linear algebra and parallelization .",
    "the prevailing approach to distance computation is to solve the _ eikonal equation _ @xmath8 over some subset @xmath9 of the domain .",
    "this formulation is _ nonlinear _ and _ hyperbolic _ , making it difficult to solve directly .",
    "typically one applies an iterative relaxation scheme such as gauss - seidel  special update orders are known as _ fast marching _ and _ fast sweeping _ , which are some of the most popular algorithms for distance computation on regular grids  @xcite and triangulated surfaces  @xcite .",
    "these algorithms can also be used on implicit surfaces  @xcite , point clouds  @xcite , and polygon soup  @xcite , but only indirectly : distance is computed on a simplicial mesh or regular grid that approximates the original domain .",
    "implementation of fast marching on simplicial grids is challenging due to the need for nonobtuse triangulations ( which are notoriously difficult to obtain ) or else a complex unfolding procedure to preserve monotonicity of the solution ; moreover these issues are not well - studied in dimensions greater than two .",
    "fast marching and fast sweeping have asymptotic complexity of @xmath10 and @xmath11 , respectively , but sweeping is often slower due to the large number of sweeps required to obtain accurate results  @xcite .",
    "the main drawback of these methods is that they do not reuse information : the distance to different subsets @xmath9 must be computed entirely from scratch each time .",
    "also note that both sweeping and marching present challenges for parallelization : priority queues are inherently serial , and irregular meshes lack a natural sweeping order .",
    "weber   address this issue by decomposing surfaces into regular grids , but this decomposition resamples the surface and requires a low - distortion parameterization that may be difficult to obtain ( note that the heat method would also benefit from such a decomposition ) .    in a different development , mitchell   give an @xmath12 algorithm for computing the exact polyhedral distance from a single source to all other vertices of a triangulated surface .",
    "surazhsky   demonstrate that this algorithm tends to run in sub - quadratic time in practice , and present an approximate @xmath10 version of the algorithm with guaranteed error bounds ; bommes and kobbelt   extend the algorithm to polygonal sources .",
    "similar to fast marching , these algorithms propagate distance information in wavefront order using a priority queue , again making them difficult to parallelize . more importantly , the amortized cost of these algorithms ( over many different source subsets @xmath9 ) is substantially greater than for the heat method since they do not reuse information from one subset to the next .",
    "finally , although @xcite greatly simplifies the original formulation , these algorithms remain challenging to implement and do not immediately generalize to domains other than triangle meshes .     of a given domain .",
    "gray curves indicate isolines of the distance function . ]",
    "closest to our approach is the recent method of rangarajan and gurumoorthy  , who do not appear to be aware of varadahn s formula ",
    "they instead derive an analogous relationship @xmath13 between the distance function and solutions @xmath14 to the time - independent schrdinger equation .",
    "we emphasize , however , that this derivation applies only in @xmath15 where @xmath14 takes a special form  in this case it may be just as easy to analytically invert the euclidean heat kernel @xmath16 . moreover , they compute solutions using the fast fourier transform , which limits computation to regular grids . to obtain accurate results",
    "their method requires either the use of arbitrary - precision arithmetic or a combination of multiple solutions for various values of @xmath17 ; no general guidance is provided for determining appropriate values of @xmath17 .",
    "finally , there is a large literature on _ smooth distances _",
    "@xcite , which are valuable in contexts where differentiability is required .",
    "however , existing smooth distances may not be appropriate in contexts where the _ geometry _ of the original domain is important , since they do not attempt to approximate the original metric and therefore substantially violate the unit - speed nature of geodesics ( figure  [ fig : biharmonic ] ) .",
    "interestingly enough , these distances also have an interpretation in terms of simple discretizations of heat flow  see section  [ sec : smoothed ] for further discussion .",
    "is achieved by simply placing heat along the boundary curve .",
    "note good recovery of the _ cut locus _",
    ", , points with more than one closest point on the boundary.[fig : boundary ] ]",
    "our method can be described purely in terms of operations on smooth manifolds ; we explore spatial and temporal discretization in sections  [ sec : temporal ] and [ sec : spatial ] , respectively .",
    "let @xmath18 be the negative - semidefinite laplace ",
    "beltrami operator acting on ( weakly ) differentiable real - valued functions over a riemannian manifold @xmath19 .",
    "the heat method consists of three basic steps :    a.   integrate the heat flow @xmath20 for some fixed time @xmath3 .",
    "b.   evaluate the vector field @xmath21 .",
    "c.   solve the poisson equation @xmath22 .",
    "[ alg : heatmethod ]     is allowed to diffuse for a brief period of time _",
    "( left)_. ( ii ) the temperature gradient @xmath23 _ ( center left ) _ is normalized and negated to get a unit vector field @xmath24 _ ( center right ) _ pointing along geodesics .",
    "( iii ) a function  @xmath4 whose gradient follows @xmath24 recovers the final distance _ ( right)_. ]",
    "the function @xmath4 approximates geodesic distance , approaching the true distance as @xmath3 goes to zero ( eq .",
    "( [ eq : varadhan ] ) ) .",
    "note that the solution to step iii is unique only up to an additive constant  final values simply need to be shifted such that the smallest distance is zero .",
    "initial conditions @xmath25 ( , a dirac delta ) recover the distance to a single source point @xmath26 as in figure  [ fig : bunny ] , but in general we can compute the distance to any piecewise submanifold @xmath9 by setting @xmath27 to a generalized dirac  @xcite over @xmath9 ( see figures  [ fig : curve ] and [ fig : boundary ] ) .    the heat method can be motivated as follows .",
    "consider an approximation @xmath28 of heat flow for a fixed time @xmath3 .",
    "unless @xmath28 exhibits _ precisely _ the right rate of decay , varadhan s transformation @xmath29 will yield a poor approximation of the true geodesic distance @xmath4 because it is highly sensitive to errors in magnitude ( see figures  [ fig : motivation ] and [ fig : logvsheat ] ) .",
    "the heat method asks for something different : it asks only that the gradient @xmath30 points in the right direction , , parallel to @xmath31 .",
    "magnitude can safely be ignored since we know ( from the eikonal equation ) that the gradient of the true distance function has unit length .",
    "we therefore compute the normalized gradient field @xmath32 and find the closest scalar potential @xmath4 by minimizing @xmath33 , or equivalently , by solving the corresponding euler - lagrange equations @xmath22  @xcite .",
    "the overall procedure is depicted in figure  [ fig : algorithm ] .",
    ", simply applying varadhan s formula does not provide an accurate approximation of geodesic distance _",
    "( top left ) _ ; for large values of @xmath3 spacing becomes even more uneven _",
    "( bottom left)_. normalizing the gradient results in a more accurate solution , as indicated by evenly spaced isolines _",
    "( top right ) _ , and is also valuable when constructing a smoothed distance function _ ( bottom right)_. ]",
    "we discretize the heat equation from step i of algorithm  [ alg : heatmethod ] in time using a single backward euler step for some fixed time @xmath3 . in practice , this means we simply solve the linear equation @xmath34 over the entire domain @xmath35 , where @xmath36 is the identity ( here we still consider a smooth manifold ; spatial discretization is discussed in section  [ sec : spatial ] ) .",
    "note that backward euler provides a maximum principle , preventing spurious oscillations in the solution  @xcite .",
    "we can get a better understanding of solutions to eq .",
    "( [ eq : ie - step-1 ] ) by considering the elliptic boundary value problem @xmath37 which for a point source yields a solution @xmath38 equal to @xmath28 up to a multiplicative constant . as established by varadhan in his proof of eq .",
    "( [ eq : varadhan ] ) , @xmath38 also has a close relationship with distance , namely @xmath39 this relationship ensures the validity of steps ii and iii since the transformation applied to @xmath38 preserves the direction of the gradient .      in principle",
    "the heat method can be applied to any domain with a discrete gradient ( @xmath40 ) , divergence ( @xmath41 ) and laplace operator ( @xmath18 ) . here",
    "we investigate several possible discretizations .",
    "let @xmath42 specify a piecewise linear function on a triangulated surface .",
    "a standard discretization of the laplacian at a vertex @xmath43 is given by @xmath44    where @xmath45 is one third the area of all triangles incident on vertex @xmath43 , the sum is taken over all neighboring vertices @xmath46 , and @xmath47 are the angles opposing the corresponding edge  @xcite .",
    "we can express this operation via a matrix @xmath48 , where @xmath49 is a diagonal matrix containing the vertex areas and @xmath50 is the _ cotan operator _ representing the remaining sum .",
    "heat flow can then be computed by solving the symmetric positive - definite system    @xmath51    where @xmath27 is a kronecker delta over @xmath9 ( , one for source vertices ; zero otherwise ) .",
    "the gradient in a given triangle can be expressed succinctly as    @xmath52    where @xmath53 is the area of the face , @xmath54 is its unit normal , @xmath55 is the @xmath43th edge vector ( oriented counter - clockwise ) , and @xmath56 is the value of @xmath57 at the opposing vertex .",
    "the integrated divergence associated with vertex @xmath43 can be written as    @xmath58 where the sum is taken over incident triangles @xmath46 each with a vector  @xmath59 , @xmath60 and @xmath61 are the two edge vectors of triangle @xmath46 containing @xmath43 , and @xmath62 are the opposing angles .",
    "if we let @xmath63 be the vector of ( integrated ) divergences of the normalized vector field @xmath24 , then the final distance function is computed by solving the symmetric poisson problem @xmath64 conveniently , this discretization easily generalizes to higher dimensions ( , tetrahedral meshes ) using well - established discrete operators ; see for instance  @xcite .          for a mesh with ( not necessarily planar )",
    "polygonal faces , we use the polygonal laplacian defined by alexa and wardetzky  .",
    "the only difference in this setting is that the gradient of the heat kernel is expressed as a discrete 1-form associated with half edges , hence we can not directly evaluate the magnitude of the gradient @xmath65 needed for the normalization step ( algorithm  [ alg : heatmethod ] , step ii ) . to resolve this issue",
    "we assume that @xmath23 is constant over each face , implying that @xmath66 where @xmath67 is the vector of heat values in face @xmath68 , @xmath53 is the magnitude of the area vector , and @xmath69 is the local ( weak ) laplacian .",
    "we can therefore approximate the magnitude of the gradient as @xmath70 which is used to normalize the 1-form values in the corresponding face .",
    "the integrated divergence is given by @xmath71 where @xmath72 is the normalized gradient , @xmath73 is the coboundary operator and @xmath35 is the mass matrix for 1-forms ( see @xcite for details ) .",
    "these operators are applied in steps i - iii as usual .",
    "figure  [ fig : hippo ] demonstrates distance computed on an irregular polygonal mesh .          for a discrete collection of point samples @xmath74 of @xmath35 with no connectivity information",
    ", we solve the heat equation ( step i ) using the symmetric _ point cloud _ laplacian recently introduced by liu et al .",
    ", which extends previous work of belkin et al .  . in this formulation ,",
    "the laplacian is represented by @xmath75 , where @xmath76 is a diagonal matrix of approximate voronoi areas associated with each point , and @xmath77 is a symmetric positive semidefinite matrix ( see  @xcite , section 3.4 , for details ) .    to compute the vector field @xmath21 ( step ii )",
    ", we represent the function @xmath78 as a height function over approximate tangent planes @xmath79 at each point @xmath80 and evaluate the gradient of a weighted least squares ( wls ) approximation of @xmath57  @xcite .",
    "to compute tangent planes , we use a moving least squares ( mls ) approximation for simplicity  although other choices might be desirable ( see liu ) .",
    "the wls approximation of @xmath23 also provides a linear mapping @xmath81 , taking any scalar function @xmath57 to its gradient . to find the best - fit scalar potential @xmath4 ( step iii ) , we solve the linear , positive - semidefinite poisson equation @xmath82 .",
    "the distance resulting from this approach is depicted in figure  [ fig : pointcloud ] .",
    "other discretizations are certainly possible ( see for instance  @xcite ) ; we picked one that was simple to implement in any dimension .",
    "note that the computational cost of the heat method depends primarily on the _ intrinsic _ dimension  @xmath83 of @xmath35 , whereas methods based on fast marching require a grid of the same dimension @xmath84 as the ambient space  @xcite  this distinction is especially important in contexts like machine learning where @xmath84 may be significantly larger than @xmath83 .",
    "the accuracy of the heat method relies in part on the choice of time step @xmath3 . in the smooth setting , eq .",
    "( [ eq : conv - varadhan-2 ] ) suggests that smaller values of @xmath3 yield better approximations of geodesic distance . in the discrete",
    "setting we instead discover a rather remarkable fact , namely that the limit solution to eq .",
    "( [ eq : bvp - ie ] ) is purely a function of the _ combinatorial _ distance , independent of how we discretize the laplacian ( see appendix  [ app : graphvaradhan ] ) .",
    "the main implication of this fact is that  _ on a fixed mesh _  decreasing the value of @xmath3",
    "does not necessarily improve accuracy , even in exact arithmetic .",
    "( note , of course , that we can always improve accuracy by refining the mesh and decreasing @xmath3 accordingly . ) moreover , increasing the value of @xmath3 past a certain point produces a smoothed approximation of geodesic distance ( section  [ sec : smoothed ] ) .",
    "we therefore seek an optimal time step @xmath85 that is neither too large nor too small .    determining a provably optimal expression for @xmath85 is difficult due to the great complexity of analysis involving the cut locus  @xcite .",
    "we instead use a simple estimate that works remarkably well in practice , namely @xmath86 where @xmath87 is the mean spacing between adjacent nodes and @xmath88 is a constant .",
    "this estimate is motivated by the fact that @xmath89 is invariant with respect to scale and refinement ; experiments on a regular grid ( figure  [ fig : smallt ] ) suggest that @xmath90 is the smallest parameter value that recovers the @xmath91 distance , and indeed this value yields near - optimal accuracy for a wide variety of irregularly triangulated surfaces , as demonstrated in figure  [ fig : optimalt ] . in this paper the time step @xmath92 is therefore used uniformly throughout all tests and examples , except where we explicitly seek a smoothed approximation of distance , as in section  [ sec : smoothed ] .      , we obtain smoothed approximations of geodesic distance _ ( right)_. ]        geodesic distance fails to be smooth at points in the _ cut locus _ , , points at which there is no unique shortest path to the source  these points appear as sharp cusps in the level lines of the distance function .",
    "non - smoothness can result in numerical difficulty for applications which need to take derivatives of the distance function @xmath4 ( , level set methods ) , or may simply be undesirable aesthetically .",
    "several distances have been designed with smoothness in mind , including diffusion distance  @xcite , commute - time distance  @xcite , and biharmonic distance  @xcite ( see the last reference for a more detailed discussion ) .",
    "these distances satisfy a number of important properties ( smoothness , isometry - invariance , ) , but are poor approximations of true geodesic distance , as indicated by uneven spacing of isolines ( see figure  [ fig : biharmonic ] , middle ) .",
    "they can also be expensive to evaluate , requiring either a large number of laplacian eigenvectors ( @xmath93 in practice ) or the solution to a linear system at each vertex .",
    "in contrast , one can rapidly construct smoothed versions of geodesic distance by simply applying the heat method for large values of @xmath3 ( figure  [ fig : smoothing ] ) .",
    "the computational cost remains the same , and isolines are evenly spaced for any value of @xmath3 due to normalization ( step ii ) .",
    "note that the resulting smooth distance function is isometrically ( but not conformally ) invariant since it depends only on the intrinsic laplace ",
    "beltrami operator .",
    "interestingly enough , existing smooth distance functions can also be understood in terms of time - discrete heat flow .",
    "in particular , the commute - time distance @xmath94 and biharmonic distance @xmath95 can be expressed in terms of the harmonic and biharmonic green s functions @xmath96 and @xmath97 : @xmath98 on a manifold of constant sectional curvature the sum @xmath99 is constant , hence the commute - time and biharmonic distances are essentially a scalar multiple of the harmonic and biharmonic green s functions ( respectively ) , which can be expressed via one- and two - step backward euler approximations of heat flow : @xmath100 ( here @xmath101 denotes the pseudoinverse . ) note that for finite @xmath3 the identity operator acts as a regularizer , preventing a logarithmic singularity . for spaces with variable curvature , the green s functions provide only an approximation of the corresponding distance functions .",
    "if one is interested in the exact distance , either vanishing neumann or dirichlet conditions suffice since this choice does not affect the behavior of the smooth limit solution ( see @xcite , corollary 2 and @xcite , theorem 1.1 , respectively ) .",
    "boundary conditions do however alter the behavior of our smoothed geodesic distance ( , large @xmath3 )  figure  [ fig : bcs ] illustrates this behavior . although there is no well - defined `` correct '' behavior for the smoothed solution , we advocate the use of _ averaged _ boundary conditions obtained as the mean of the neumann solution @xmath102 and the dirichlet solution @xmath103 , , @xmath104  these conditions tend to produce isolines that are not substantially influenced by the shape of the boundary .",
    "the intuition behind this behavior is again based on interpreting heat diffusion in terms of random walks : zero dirichlet conditions absorb heat , causing walkers to `` fall off '' the edge of the domain .",
    "neumann conditions prevent heat from flowing out of the domain , effectively `` reflecting '' random walkers .",
    "averaged boundary conditions mimic the behavior of a domain without boundary : the number of walkers leaving equals the number of walkers returning .",
    "figure  [ fig : maze ] shows how boundary conditions affect the behavior of geodesics in a path - planning scenario .        .",
    "_ top - left : _",
    "neumann conditions encourage boundary adhesion . _",
    "top - right : _ dirichlet conditions encourage avoidance . _",
    "bottom - left : _ small values of @xmath3 yield standard straight - line geodesics .",
    "_ bottom - right : _ large values of @xmath3 yield more natural trajectories .",
    "[ tab : zoo ]      a key advantage of the heat method is that the linear systems in steps ( i ) and ( iii ) can be prefactored .",
    "our implementation uses sparse cholesky factorization  @xcite , which for poisson - type problems has guaranteed sub - quadratic complexity but in practice scales even better  @xcite ; moreover there is strong evidence to suggest that sparse systems arising from elliptic pdes can be solved in very close to linear time  @xcite .",
    "independent of these issues , the amortized cost for problems with a large number of right - hand sides is roughly linear , since back substitution can be applied in essentially linear time .",
    "see inset for a breakdown of relative costs in our implementation .    in terms of absolute performance ,",
    "a number of factors affect the run time of the heat method including the spatial discretization , choice of discrete laplacian , geometric data structures , and so forth . as a typical example , we compared our simplicial implementation ( section  [ sec : simplicial ] ) to the first - order fast marching method of kimmel & sethian   and the exact algorithm of mitchell   as described by surazhsky  .",
    "in particular we used the state - of - the - art fast marching implementation of peyr and cohen   and the exact implementation of kirsanov  @xcite .",
    "the heat method was implemented in ansi c using a simple vertex - face adjacency list .",
    "all timings were taken on a 2.4 ghz intel core 2 duo machine using a single core ",
    "table  [ tab : zoo ] gives timing information .",
    "note that even for a single distance computation the heat method outperforms fast marching ; more importantly , updating distance via the heat method for new subsets @xmath9 is consistently an order of magnitude faster ( or more ) than both fast marching and the exact algorithm .       for a more detailed comparison . ]",
    "we examined errors in the heat method , fast marching  @xcite , and the exact polyhedral distance  @xcite , relative to mean edge length @xmath87 for a variety of triangulated surfaces .",
    "figures  [ fig : sphere_convergence ] and [ fig : torus_convergence ] illustrate the rate of convergence on simple geometries where the smooth geodesic distance can be easily obtained .",
    "both fast marching and the heat method appear to exhibit linear convergence ; it is also interesting to note that the exact _ polyhedral _ distance provides only quadratic convergence . keeping this fact in mind ,",
    "table  [ tab : zoo ] uses the polyhedral distance as a baseline for comparison on more complicated geometries  here max is the maximum error as a percentage of mesh diameter and min is the mean relative error at each vertex ( a convention introduced in  @xcite ) .",
    "note that fast marching tends to achieve a smaller maximum error , whereas the heat method does better on average .",
    "figure  [ fig : compare ] gives a visual comparison of accuracy ; the only notable discrepancy is a slight smoothing at sharp cusps ; figure  [ fig : hiragana_a ] indicates that this phenomenon does not interfere with the extraction of the cut locus  here we simply threshold the magnitude of @xmath105 .",
    "figure  [ fig : metric_convergence ] plots the maximum violation of metric properties  both the heat method and fast marching exhibit small approximation errors that vanish under refinement . even for the smoothed distance ( @xmath106 ) the triangle inequality is violated only for highly degenerate geodesic triangles , , all three vertices on a common geodesic .",
    "( in contrast , smoothed distances discussed in section  [ sec : related ] satisfy metric properties exactly , but can not be used to obtain the true geometric distance . )",
    "overall , the heat method exhibits errors of the same magnitude and rate of convergence as fast marching ( at lower computational cost ) and is likely suitable for any application where fast marching is presently used .",
    "the accuracy of the heat method might be further improved by considering alternative spatial discretizations ( see for instance  @xcite ) , though again one should note that even the exact polyhedral distance yields only an @xmath107 approximation . in the case of the fast marching method ,",
    "accuracy is determined by the choice of _ update rule_. a number of highly accurate update rules have been developed in the case of regular grids ( , hj weno  @xcite ) , but fewer options are available on irregular domains such as triangle meshes , the predominant choice being the first - order update rule of kimmel and sethian  .",
    "finally , the approximate algorithm of surazhsky  provides an interesting comparison since it is on par with fast marching in terms of performance and produces more accurate results ( see @xcite , table 1 ) .",
    "similar to fast marching , however , it does not take advantage of precomputation and therefore exhibits a significantly higher amortized cost than the heat method ; it is also limited to triangle meshes .    ]",
    "two factors contribute to the robustness of the heat method , namely ( 1 ) the use of an unconditionally stable implicit time - integration scheme and ( 2 ) formulation in terms of purely elliptic pdes .",
    "figure  [ fig : robustness ] verifies that the heat method continues to work well even on meshes that are poorly discretized or corrupted by a large amount of noise ( here modeled as uniform gaussian noise applied to the vertex coordinates ) . in this case",
    "we use a moderately large value of @xmath3 to investigate the behavior of our smoothed distance ; similar behavior is observed for small @xmath3 values .",
    "figure  [ fig : femme ] illustrates the robustness of the method on a surface with many small holes as well as long sliver triangles .    ) appears similar on meshes of different resolution .",
    "_ right : _ even for meshes with severe noise _",
    "( top ) _ we recover a good approximation of the distance function on the original surface _ ( bottom , visualized on noise - free mesh)_. ]    ]",
    "the heat method is a simple , general method that can be easily incorporated into a broad class of algorithms .",
    "however , a great deal remains to be explored , including an investigation of alternative discretizations .",
    "further improvements on the optimal @xmath3 value also provide an interesting avenue for future work , though typically the existing estimate already outperforms fast marching in terms of mean error ( table  [ tab : zoo ] ) .",
    "another obvious question is whether a similar transformation can be applied to a larger class of hamilton - jacobi equations . finally , _ weighted _",
    "distance computation might be achieved by simply rescaling the source data .",
    "\\2011 . discrete laplacians on general",
    "polygonal meshes .",
    "_ 30 , _  4 , 102:1102:10 .    ,",
    "sun , j. , and wang , y. 2009a .",
    "constructing laplace operator from point clouds in @xmath108 . in _",
    "acm - siam symp .  disc .",
    "alg . _    , sun , j. , and wang , y. 2009b . discrete laplace operator for meshed surfaces . in _",
    "acm - siam symp .  disc .",
    "10311040 .    \\2007 .",
    "accurate computation of geodesic distance fields for polygonal curves on triangle meshes . in _ proc .",
    "workshop on vision , modeling , and visualization ( vmv)_. 151160 .    ,",
    "bommes , d. , and kobbelt , l. 2005 .",
    "efficient linear system solvers for mesh processing . in _",
    "i m a conference on the mathematics of surfaces_. springer , 6283 .",
    "\\2011 . walking on broken mesh : defect - tolerant geodesic distances and parameterizations .",
    "_ 30 , _  2 , 623632 .    ,",
    "davis , t.  a. , hager , w.  w. , and rajamanickam , s. 2008 .",
    "algorithm 887 : cholmod , supernodal sparse cholesky factorization and update / downdate .",
    "_ 35 _ , 22:122:14 .",
    "diffusion maps .",
    "_ 21 _ , 530 .    ,",
    "kanso , e. , and tong , y. 2008 .",
    "differential forms for computational modeling ] . in _",
    "discrete differential geometry_. oberwolfach seminars , vol .",
    "birkhuser verlag , 287324 .",
    ", pirotte , a. , renders , j .-",
    "m . , and saerens , m. 2007 . random - walk computation of similarities between nodes of a graph with application to collaborative recommendation .",
    "_ 19 , _  3 ( march ) , 355369 .    \\2011 . on approximation of the laplace - beltrami operator and the willmore energy of surfaces .",
    "_ 30 , _  5 , 15131520 .",
    "the eikonal equation : numerical efficiency vs. algorithmic complexity on quadrilateral grids . in _ proc .",
    "algoritmy_. 2231 .",
    "\\1997 . weighted eno schemes for hamilton - jacobi equations .",
    "_ 21 _ , 21262143",
    ".    \\1998 .",
    "fast marching methods on triangulated domains .  _ 95",
    "_ , 83418435 .    , rustamov , r.  m. , and funkhouser , t.  a. 2010 .",
    "biharmonic distance .",
    "_ 29 _ , 27:127:11 .    ,",
    "prabhakaran , b. , and guo , x. 2012 .",
    "point - based manifold harmonics .  _",
    "18_.    , safa , i. , and wang , y. 2009 .",
    "approximating gradients for meshes and point clouds via diffusion metric .",
    "_ 28 , _  5 , 14971508 .",
    "the solution of partial differential equations by means of electrical networks .",
    "thesis , caltech .",
    ". fast computation of weighted distance functions and geodesics on implicit hyper - surfaces .",
    "_ 173 _ , 730764",
    ".    \\2005 .",
    "distance functions and geodesics on submanifolds of @xmath109 and point clouds .",
    "_ 65 , _  4 .    ,",
    "mount , d. , and papadimitriou , c. 1987 . the discrete geodesic problem .  _",
    "16 , _  4 , 647668 .",
    "an as - short - as - possible intro . to the mls method for scattered data approximation and interpolation .",
    "tech . rep .",
    "analysis of the cut locus via the heat kernel .",
    "_ 9 _ , 337349 .",
    "kernel asymptotics and the distance function in lipschitz riemannian manifolds ] .",
    "_ 179 , _  1 , 79103 .",
    "springer , chapter geodesic computations for fast and accurate surface remeshing and parameterization , 157171 .",
    "\\2011 . a fast eikonal equation solver using the schrdinger wave equation",
    "rep-2011 - 512 , cise , university of florida .",
    "january .",
    "\\2012 . a fast direct solver for elliptic problems on general meshes in 2d .",
    "_ 231 , _  4 .",
    "lecture notes in mathematics .",
    "springer .",
    "cambridge university press .",
    "nearly - linear time algorithms for graph partitioning , graph sparsification , and solving linear systems . in _ proc .",
    "acm  symp .",
    "theory  comp .",
    "_ stoc 04 .",
    "acm , 8190 .    ,",
    "surazhsky , t. , kirsanov , d. , gortler , s.  j. , and hoppe , h. 2005 .",
    "fast exact and approximate geodesics on meshes .",
    "_ 24 _ , 553560 .    \\1967 . on the behavior of the fundamental solution of the heat equation with variable coefficients .",
    "_ 20 , _  2 , 431455 .",
    "methods of geometric measure theory in stochastic geometry . ph.d .",
    "thesis , universit degli studi di milano .",
    "kernel comparison on alexandrov spaces with curvature bounded below ] .  _",
    "21 , _  2 .    ,",
    "khaliq , a. , siddique , m. , and yousuf , m. 2005 .",
    "moothing with positivity - preserving pad schemes for parabolic problems with nonsmooth data .  _",
    "21_.    , devir , y.  s. , bronstein , a.  m. , bronstein , m.  m. , and kimmel , r. 2008 .",
    "parallel algorithms for approximation of distance maps on parametric surfaces .",
    "_ 27 , _  4 .",
    "let @xmath110 be the graph induced by the sparsity pattern of any real symmetric matrix @xmath111 , and consider the linear system @xmath112 where @xmath113 is the identity , @xmath114 is a kronecker delta at a source vertex @xmath115 , and @xmath116 is a real parameter . then generically @xmath117 where @xmath118 is the * graph distance * ( , number of edges ) between each vertex @xmath119 and the source vertex @xmath57 .",
    "[ lem : smallt ]    let @xmath120 be the operator norm of @xmath111 .",
    "then for @xmath121 the matrix @xmath122 has an inverse and the solution @xmath28 is given by the convergent neumann series @xmath123 let @xmath119 be a vertex @xmath83 edges away from @xmath57 , and consider the ratio @xmath124 where @xmath125 is the first nonzero term in the sum and @xmath126 is the sum of all remaining terms . noting that @xmath127 we get @xmath128 where the constant @xmath129 does not depend on @xmath3 .",
    "we therefore have @xmath130 , , only the first term @xmath131 is signifcant as @xmath3 goes to zero . but @xmath132 is dominated by the first term as @xmath3 goes to zero , hence @xmath133 approaches the number of edges @xmath83 .",
    "computed in exact arithmetic on a regular grid with unit spacing ( @xmath134 ) . as predicted by lemma  [ lem : smallt ]",
    ", the solution approaches the combinatorial distance as @xmath3 goes to zero.[fig : smallt ] ]     convergence of distance functions on the unit sphere with respect to mean edge length . as a baseline for comparison",
    ", we use the exact distance function @xmath135 .",
    "linear and quadratic convergence are plotted as dashed lines for reference ; note that even the exact polyhedral distance converges only quadratically.[fig : sphere_convergence ] ]        , where @xmath86 .",
    "each curve corresponds to a data set from table  [ tab : zoo ] . notice that in most examples @xmath90 ( dashed line ) is close to the optimal parameter value ( blue dots ) and yields mean error below @xmath137.[fig : optimalt ] ]"
  ],
  "abstract_text": [
    "<S> we introduce the _ heat method _ for computing the shortest geodesic distance to a specified subset ( , point or curve ) of a given domain . </S>",
    "<S> the heat method is robust , efficient , and simple to implement since it is based on solving a pair of standard linear elliptic problems . </S>",
    "<S> the method represents a significant breakthrough in the practical computation of distance on a wide variety of geometric domains , since the resulting linear systems can be prefactored once and subsequently solved in near - linear time . in practice </S>",
    "<S> , distance can be updated via the heat method an order of magnitude faster than with state - of - the - art methods while maintaining a comparable level of accuracy . </S>",
    "<S> we provide numerical evidence that the method converges to the exact geodesic distance in the limit of refinement ; we also explore smoothed approximations of distance suitable for applications where more regularity is required .    </S>",
    "<S> [ geometric algorithms , languages , and systems ] </S>"
  ]
}
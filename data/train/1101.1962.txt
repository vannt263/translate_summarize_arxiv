{
  "article_text": [
    "self - correcting quantum memory is an interesting subject not only because of its application for quantum information processing technology , but also because of its implication for quantum many - body physics ; it shows a topological order at finite temperature .",
    "it is known that in 4d a self - correcting quantum memory is possible : toric code @xcite , which is a css stabilizer code .",
    "there are classes of models in 2d that are not self - correcting @xcite including those based on local stabilizer codes .",
    "it is thus a natural question whether a self - correcting quantum memory is possible in 3d , at least in the class of models based on stabilizer codes .",
    "a string - like logical operator plays an important role in the thermal instability ; its existence is crucial in the no - go theorems @xcite for self - correcting quantum memory in 2d based on local stabilizer codes , and more generally , on local commuting projector codes . the string - like logical operator arises easily under the interaction with thermal bath , and hence , adversely affect encoded information .",
    "known models in 3d _",
    "e.g. _ , toric code  @xcite , chamon model  @xcite , topological color code @xcite and kim model @xcite , do have string - like logical operators .",
    "bacon subsystem code in 3d @xcite which does not have string - like bare logical operator , might be self - correcting , but it is not yet affirmative since its hamiltonian is hard to solve .",
    "there is an issue of defining string - like logical operator . since",
    "a lattice is a discrete space , it is generally not possible to define the dimension of a subset of the lattice .",
    "an observation is that a string is a union of segments , each of which has two end points .",
    "thus we define logical string segments as a finite object that has two anchors at the end with its middle part commuting with stabilizer generators .",
    "a string logical operator is then a logical operator that contains arbitrarily long logical string segments .",
    "the main result of this paper is that there exist local css stabilizer codes in 3d that are free of string logical operators .",
    "we give the complete classification of codes ( _ cubic codes _ ) under our consideration in sec .",
    "[ section : list_cubic_codes ] .",
    "we explain how we classify them in sec .",
    "[ section : comm_rel_corner_operators ] . in sec .",
    "[ section : macroscopic_code_distance ] , we prove that the code distance is at least linear in system size .",
    "[ section : logical_string_segments ] is the central section where we define a logical string segment and prove that four of our codes are free of string logical operators .",
    "we report exact empirical formulae of the number of logical qubits of our codes in sec .",
    "[ section : k_vs_l ] . finally , we discuss thermal stability of our codes and related issues in sec .",
    "[ section : thermal_stability ] . sec .",
    "[ section : discussion ] contains our concluding remarks .",
    "let us review the formalism of stabilizer codes .",
    "let @xmath0 be the group of pauli operators acting on @xmath1 qubits .",
    "an abelian subgroup @xmath2 of @xmath0 is called the _ stabilizer group _ if @xmath3 .",
    "the stabilizer group @xmath2 defines a subspace of @xmath1-qubit hilbert space by @xmath4 which is the code space .",
    "@xmath5 is nonzero because @xmath6 .",
    "a css code is defined by a stabilizer group , each element of which can be written as a product of @xmath7- and @xmath8- type stabilizer elements .",
    "the pauli group has a nice property that any pair of elements is either commuting or anti - commuting , and that every element squares to identity .",
    "if we abelianize the pauli group @xmath0 by ignoring all phase factors  @xcite , we obtain @xmath9-dimensional vector space over the binary field equipped with a symplectic bilinear form @xmath10 ; @xmath11 if @xmath12 and @xmath13 anti - commute , and @xmath14 if they commute . the product of two pauli operators is expressed by the addition of the two corresponding vectors .",
    "the identity operator is the zero vector .    in this respect ,",
    "the stabilizer group is characterized as an isotropic subgroup .",
    "note that the condition that @xmath6 should be checked separately .",
    "we abuse the notation and use the same symbol @xmath2 to denote the vector space corresponding to the group .",
    "the orthogonal complement @xmath15 of @xmath2 with respect to the symplectic form is the space of logical operators .",
    "the set of nontrivial logical operators modulo stabilizer group is the quotient space @xmath16 .",
    "a stabilizer code is ( geometrically-)_local _ if its stabilizer group is generated by ( geometrically-)local pauli operators .",
    "a translation - invariant local stabilizer code can be defined on the infinite lattice . in this case",
    ", we define the stabilizer group as a group of all _ finite _ products of local generators .",
    "a logical operator is a pauli operator possibly with infinite support that commutes with every generator .",
    "since each generator is local , the commutation relation between the generator and an arbitrary pauli operator is well - defined .",
    "we seek for a simple local stabilizer code that is translation - invariant , encodes at least one logical qubit , has large code distance , and does not have any string logical operator .",
    "( formal definition of string logical operator will be given in sec .",
    "[ section : logical_string_segments ] . ) to start with , consider a local stabilizer code on a @xmath17-dimensional simple cubic lattice @xmath18 with one qubit at each site . a general stabilizer generator may act on a bounded number of qubits in an arbitrary way .",
    "however , if we coarse - grain the lattice , or equivalently , put @xmath19 qubits at each site of the lattice , we can say without loss of generality that a generator acts on the qubits on @xmath20 sites of a unit hypercube .",
    "we focus on stabilizer codes with only two types of generators for simplicity .",
    "since each generator can be described by a @xmath21-component binary vector , there are a finite yet large number of conceivable generators .",
    "we will demand a certain structure of generators in order to reduce the number of candidates .",
    "we will further impose conditions such that the code does not contain any nontrivial logical operator on a `` straight line '' , which will be necessary for the codes to be without string logical operator .",
    "the structure of the generators is restricted in the following way : for css codes , there are two types of generators corresponding to @xmath8- and @xmath7-type .",
    "we denote by @xmath22 a corner of the cube of generator type @xmath23 , and by @xmath24 the body - opposite corner as depicted in fig .",
    "[ fig : general_generator ] . for non - css codes",
    ", the generators should satisfy @xmath25 .",
    "the number @xmath26 of qubits per site should be bounded by the number of types of generators . for a local stabilizer code in any finite lattice , with open or periodic boundary conditions , there is a tradeoff in 3d @xcite @xmath27 between @xmath28 , the number of logical qubits , and @xmath29 , the code distance , where @xmath30 is the linear size of the lattice .",
    "if there are @xmath31 types of generators , the number of independent stabilizers is at most @xmath32 , and @xmath33 .",
    "the code distance is then a constant independent of @xmath30 . in order to achieve macroscopic code distance ,",
    "it is mandatory that @xmath34 .",
    "a string operator may wrap around a finite periodic lattice many times that it looks like a surface .",
    "but this is a property of boundary ; as long as thermal stability is concerned , we ignore the boundary effects and consider stabilizer codes in the infinite lattice @xmath35 . if a single site operator @xmath36 , _",
    "i.e. _ , two qubit operator , is logical , we want it to be an element of the stabilizer group @xmath2 . since the stabilizer group does not explicitly include a single site operator , it is not easy to formulate the condition @xmath37 . for simplicity , we require that @xmath36 is the identity up to phase . for a single site operator @xmath36 ,",
    "we denote by @xmath38_p$ ] the pauli operator repeated along the line parallel to @xmath39 passing @xmath40 , _",
    "i.e. _ , @xmath41_p = \\cdots \\otimes e \\otimes e \\otimes \\cdots,\\ ] ] whose _ support _ , the set of _ sites _ on which a pauli operator acts nontrivially , is the line , @xmath42_p ) = \\ { p +",
    "v \\in \\lambda ~|~ n \\in \\mathbb{z } \\ } .\\ ] ] we say @xmath38 $ ] has _ period one _ if @xmath43 .",
    "( @xmath44 . )",
    "we demand that any logical operator of period one be the identity up to phase .",
    "this condition is not sufficient for the code to be free of string logical operators , but is necessary .",
    "we will see that a nontrivial logical operator of period one is a string logical operator in our formal definition of strings in sec .",
    "[ section : logical_string_segments ] .    imposing the constraints above may result in a trivial code in a finite lattice for which the number of encoded qubits is zero ( @xmath45 ) .",
    "to avoid such a case , we restrict the generators such that the product of all corner operators to be the identity operator up to phase .",
    "this condition is automatically satisfied by non - css codes under consideration . for css codes",
    ", this becomes a nontrivial algebraic constraint on the corner operators .",
    "there are equivalence relations on the set of codes .",
    "if two stabilizer codes are related by a symmetry transformation of the unit cube , they are essentially the same .",
    "if one can be transformed into the other by a basis change on each site , we also regard them as the same codes .",
    "renaming of stabilizer generators obviously gives equivalent codes .",
    "up to these equivalences , we report that there are 1 non - css and 17 css _ cubic codes _ listed in table  [ tb : list_codes ]",
    ". the conditions of the cubic codes are summarized below .",
    "condition 1 : :    there are one or two qubits per site in the infinite simple cubic    lattice @xmath46 .",
    "condition 2 : :    the stabilizer group @xmath2 is    translation - invariant and is generated by two types of operators    acting on eight corners of a cube . for non - css code , the two are    related by spatial inversion , _",
    "i.e. _ ,    @xmath47 .",
    "see fig .  [",
    "fig : general_generator ] .",
    "the product of all corner operators of a css code is the identity .",
    "condition 3 : :    if @xmath48 is a single site operator ,    then @xmath36 is the identity up to phase .",
    "condition 4 : :    if @xmath49 has period one in    @xmath50-metric , _",
    "i.e. _ ,    @xmath51 is along one of 3 coordinate axes , 6    face - diagonals , or 4 body - diagonals , then @xmath52 is the    identity up to phase .    in the next section , we will study the conditions systematically .",
    ".complete list of cubic codes .",
    "the corners of the unit cube are labeled as in fig.[fig : general_generator ] .",
    "the second generator of non - css code 0 is given by the spatial inversion about body - center .",
    "the rest are all css codes , for which @xmath7-type generator is uniquely determined by eq .  .",
    "the codes marked with @xmath53 do _ not _ have string logical operators , while those with @xmath54 do .",
    "see theorem  [ thm : code1234are_free_of_strings ] and appendix  [ section : codes_w_string_logical_operators ] [ cols=\"^,^,^,^,^,^,^,^,^ \" , ]",
    "we remark that there is a three - fold symmetry for the generators of code 0 .",
    "[ fig : generator_code_01234 ] ) if we rotate @xmath55 by @xmath56 about @xmath57-axis , and then apply the transformation @xmath58 , we see that @xmath55 is invariant .",
    "this is in fact expected from the commutation relation @xmath59 of corner operators of @xmath55 ; we calculated @xmath55 from @xmath59 .",
    "the trasformation is symplectic .",
    "if we order the basis for @xmath60 as @xmath61 , the transformation is @xmath62 , where @xmath63 is the rotation about @xmath57-axis and @xmath64 one directly checks that @xmath65 preserves the symplectic form of the abelianized @xmath60 @xmath66 _ i.e. _ , @xmath67 .",
    "this is an example of lemma  [ lem : unique_realization_of_commutation_relation ] .",
    "a direct consequence of the three - fold symmetry is that logical operators always appear as a triple .",
    "we show @xmath28 , the number of encoded qubits of code 0 defined on the periodic finite lattice @xmath68 , satisfies @xmath69 . to this end",
    ", we present an algebraic relation of stabilizer generators in the infinite lattice that can be embedded into a periodic lattice of arbitrary linear size .",
    "an algebraic relation of stabilizer generators is a distribution of generators whose product is the identity .",
    "( formally , the space of algebraic relations is the kernel of the linear map @xmath70 where @xmath71 is the dual lattice to @xmath35 , @xmath72 is the abelian group of _ labels _ of stabilizer generators , and @xmath60 is the abelianized pauli group on a single site .",
    "@xmath72 is isomorphic to @xmath73 for our cubic codes because there are two types of generators .",
    "this map is meaningful for translation - invariant stabilizer codes . )",
    "note that the set of the locations of generators in an algebraic relation need not be finite ; the product is well - defined if the number of generators acting on each site is finite , _",
    "i.e. _ , locally finite .",
    "for some relations the set of the locations of generators form a sublattice , which we call _ relation lattice _ , and can be described by a unit cell and basis vectors . indeed , the relations that gives the lower bound @xmath69 forms sublattices .    the relation we consider first has its own lattice structure @xmath74 with a basis @xmath75 , the unit cell of which consists of @xmath55 and @xmath76 such that @xmath76 is at @xmath77 relative to @xmath55 . in other words , fig .",
    "[ fig : relation_lattice_code_0 ] is repeated according to @xmath78 .",
    "since the two basis vectors have period @xmath30 in the finite lattice of linear size @xmath30 , one can embed this relation into any finite periodic lattice , and there are @xmath30 linearly independent such embeddings via translations along @xmath79 .",
    "therefore , we have at least @xmath30 independent algebraic relations of stabilizer generators for a @xmath80 lattice .",
    "this proves that @xmath81 .",
    "note that this relation lattice is invariant under the three - fold symmetry of code 0 .",
    "if we consider the embeddings into finite periodic lattice with arbitrary three linear sizes @xmath82 , we see that @xmath83 .    .",
    "the boxes displays the configuration of @xmath55 s in the relation .",
    "@xmath76 lies on the top of @xmath55 .",
    "the line designated by the arrow is acted on trivially by four unit cells around it , as one can directly check using the pauli operator diagrams.,scaledwidth=40.0% ]    another relation lattice @xmath84 has basis @xmath85 with unit cell such that @xmath76 is at @xmath57 relative to @xmath55 .",
    "@xmath84 is embedded into any finite lattice of even linear size .",
    "there are 8 independent relations whose underlying lattice structure is @xmath84 .",
    "however , @xmath74 and @xmath84 are not all independent .",
    "it is not hard to see @xmath84 gives 6 more algebraic relations .",
    "this proves the lower bound @xmath86 .",
    "it should be pointed out that @xmath6 is not automatically guaranteed since code 0 is non - css .",
    "however , the problem is resolved if one choose appropriate sign for each dependent generator .",
    "one can check directly that relations @xmath74 and @xmath84 does not generate @xmath87 .    in order to prove an upper bound on @xmath28 ,",
    "suppose @xmath88 does not divide @xmath30",
    ". then we can show that @xmath89 .",
    "the proof is very similar to that of code 1 .",
    "let @xmath65 be the set of generators lying outside a straight tunnel @xmath90 of length @xmath30 parallel to @xmath91-axis , whose cross - section is @xmath92 rectangle enclosed by 6 sites , _",
    "i.e. _ , the tunnel is @xmath93 .",
    "there are @xmath94 generators in @xmath65 .",
    "we show @xmath65 is an independent set of generators .",
    "suppose a linear combination @xmath95 of generators in @xmath65 is the identity operator .",
    "we show @xmath95 is the zero combination .",
    "choose the origin of the coordinate system such that the sites enclosing the cross - sectional rectangle are described by @xmath96 .",
    "let @xmath52 be the set of sites on the straight line given by @xmath97 .",
    "since @xmath95 is the identity , @xmath52 is acted on by the identity .",
    "every unit edge @xmath98 in @xmath52 connecting @xmath99 and @xmath100 is a linear combination of @xmath101 which is canceled by the neighboring edges . since the left - hand side operators of eq .",
    "are independent , we can unambiguously determine @xmath102 given @xmath98 , _",
    "e.g. _ , if @xmath103 , then @xmath104 .",
    "the right - hand side operators of @xmath98 s form an inference chain @xmath105 . note that this inference chain exhausts all the combination of operators on the right - hand side of eq .. therefore , @xmath106 is eventually periodic with period 7 , or is eventually @xmath107 .",
    "if @xmath108 , we must have @xmath109 for all @xmath23 .",
    "we showed that the coefficients of the operators touching @xmath52 in @xmath95 are all zero .",
    "we can repeat the argument to infer that @xmath95 does not involve stabilizer generators lying in between @xmath110 .",
    "consider the set of sites on the line @xmath111 given by @xmath112 .",
    "a unit edge @xmath113 in @xmath111 connecting @xmath114 and @xmath115 is a linear combination of @xmath116 the inference chain is @xmath117 , which is again of eventual period 7 .",
    "therefore , @xmath95 is a zero combination .",
    "the direction of the tunnel @xmath90 can be along any coordinate axis , as is implied by three - fold symmetry .    in a general case where @xmath88 may divide @xmath30 , we consider three tunnels @xmath118 intersecting at one @xmath119 box @xmath120 .",
    "it is easy to see that stabilizer generators ( @xmath65 ) lying outside @xmath121 are independent ; there are @xmath122 independent generators .",
    "we can add to @xmath65 more independent generators .",
    "let the box @xmath120 be given by @xmath123 .",
    "consider a long contractible tube @xmath124 given by @xmath125 .",
    "then @xmath126 , the union of @xmath65 and the set of stabilizer generators lying in the tube @xmath124 , is a set of independent generators . since @xmath124 contains @xmath127 generators , @xmath128 , which proves the upper bound @xmath129 .      there",
    "exist string logical operators for code 0 . by three - fold symmetry , these string logical operators form a triple . using the notation in table  [ tb : string_logical_operators ]",
    ", they are @xmath130_{p+\\hat{z } } xi[1,0,-1]_{p } zz[1,0,-1]_{p-\\hat{z } } , \\\\",
    "\\theta^x_{p } =    & zx[-1,1,0]_{p+\\hat{x } } xi[-1,1,0]_{p } zx[-1,1,0]_{p-\\hat{x } } , \\\\",
    "\\theta^y_{p } =    & zy[0,-1,1]_{p+\\hat{y } } xi[0,-1,1]_{p } zy[0,-1,1]_{p-\\hat{y } } , \\end{aligned}\\ ] ] where @xmath131 are directional unit vectors .",
    "we call them _ basic string logical operators _ for code 0 , or basic strings for short . applying the techniques of deforming logical string segments",
    ", one can show that any logical string segment is a union of ` flat ' logical string segment and some contiguous part of basic strings .",
    "numerical result suggests that any long flat logical string segment @xmath132 is trivial ; it is trivial if the length of @xmath132 is greater than @xmath133 , where @xmath134 is the width of @xmath132 , for @xmath135 .",
    "therefore , it is legitimate to conjecture that any long logical string segment is some product of basic strings . if this is true , we can consider a subsystem code by _ gauging out _ the logical qubits that are affected by basic strings .",
    "interestingly , we can show that there are at least one logical qubit left in the resulting subsystem code in any finite periodic lattice @xmath68 . to see this , it is enough to calculate the commutation relation of independent basic strings ( up to the stabilizer group ) . after gram - schmidt procedure with respect to commutation",
    "symplectic form applied to independent set of basic strings , suppose we get @xmath136-dimensional hyperbolic space , and @xmath137-dimensional isotropic space .",
    "then the number of gauge qubits is @xmath138 .",
    "it is not hard to see that @xmath139 is in the stabilizer group @xmath140 of code 0 in @xmath68 ; it is equal to the product of @xmath141 inside the triangle formed by three basic strings .",
    "also , @xmath142 for any @xmath143 such that @xmath144 .",
    "therefore the maximally independent set of basic strings up to @xmath140 is contained in @xmath145 _ i.e. _ , @xmath146 .",
    "if @xmath30 is odd , @xmath147 } \\in \\mathcal{s}_0 , \\\\",
    "\\prod_i \\theta^x_{(0,0,i ) } \\equiv \\sigma_{xi}^{[001 ] } \\in \\mathcal{s}_0 , \\end{aligned}\\ ] ] where @xmath148 means equality up to @xmath140 .",
    "hence @xmath149 for odd @xmath30 .",
    "note that @xmath150 and @xmath151 always commute , and so do @xmath152 and @xmath153 .",
    "two basic strings @xmath152 and @xmath154 anti - commute if and only if they meet at one site .",
    "we can write the commutation relation matrix of @xmath155 ( over the binary field ) as @xmath156 where @xmath157,[j+2 ] } + \\delta_{[i],[j-2]},\\ ] ] @xmath158,[j \\pm 2]$ ] are the equivalence classes of integers modulo l , and @xmath159 is the kronecker delta . note that @xmath160 . each row of @xmath161 is a translation of another , and containes exactly two 1 s separated by 4 ( @xmath162 ) .    if @xmath30 is odd , then @xmath30 and 4 are relatively prime , and we see that @xmath163 .",
    "since @xmath149 , @xmath164 and the number of gauge qubits is @xmath165 .",
    "if @xmath30 is even , we need to distinguish two cases .",
    "when @xmath166 , only @xmath167 rows are independent .",
    "it is verified easily if one cyclically rotate the rows of @xmath161 such that @xmath168 .",
    "when @xmath169 , there is a row that contains two 1 s that are 2 columns apart , and hence @xmath170 rows become independent . in short , @xmath171 , and therefore @xmath172 . since @xmath173",
    ", we conclude that there are at least 1 qubit left after gauging out the basic strings .",
    "we apply our construction of non - css cubic codes to 2d square lattice .",
    "we argue that the 2d toric code is the unique stabilizer code under the construction .",
    "a square stabilizer generator @xmath174 has 4 corner operators .",
    "@xmath59 is a @xmath175 matrix . imposing the condition that @xmath174 s define a stabilizer code",
    ", we get the general form : @xmath176 where @xmath177 . in order to ensure",
    "a single site operator is the identity , we require that @xmath178 . if @xmath179 , @xmath180 . if @xmath181 , then @xmath182 and the realization of @xmath59 is @xmath183\\ar@{-}[dd ] &            & z\\ar@{-}[dd]\\\\                           & s = s^\\text{inv } &               \\\\",
    "z \\ar@{-}[rr ]           &            & x              } \\ ] ]    this is the generator for @xmath184-rotated 2d toric code . if @xmath185 , then @xmath186 and a realization of @xmath59 is @xmath187\\ar@{-}[dd ] &    & zi\\ar@{-}[dd ] & & ix\\ar@{-}[rr]\\ar@{-}[dd ] &    & iz\\ar@{-}[dd]\\\\                            & s &               & &                          & s^\\text{inv } & \\\\    iz \\ar@{-}[rr ]           &    & ix            & & zi \\ar@{-}[rr ]           &    & xi   } \\ ] ] if @xmath188 , we get the same realization of @xmath59 that is @xmath189-rotated .",
    "note that first qubits in the odd numbered rows interact only with second qubits in the even numbered rows , and vice versa .",
    "thus , the code is equal to the non - interacting two copies of 2d toric code .",
    "if the periodic lattice has odd linear size , it is a doubly - folded toric code .",
    "we describe our algorithm calculating @xmath28 .",
    "as we have seen from proofs of the upper bounds for @xmath28 ( table  [ tb : lower_upper_bound_k ] ) , we need to know the number of independent stabilizer generators in a given finite periodic lattice .",
    "since there are two qubits per site , a pauli operator on @xmath190 is expressed as a @xmath191-component binary vector .",
    "given that the pauli operator is @xmath8- or @xmath7-type , the number of components is divided by two . since there are @xmath192 stabilizer generators , we need to calculate the rank of @xmath193 binary matrix @xmath194 . the gauss elimination is an efficient algorithm , but the matrix is quite large",
    ". a naive sparse matrix method would not be of much help because @xmath194 may get a large number of non - zero components as gauss elimination algorithm proceeds .",
    "the proof of the upper bound gives a natural order of the sites and generators such that a large sparse submatrix of @xmath194 is in a row echelon form ; order the sites and generators such that the independence of generators used in the proof of the upper bound is evident from the form of @xmath194 . in this way",
    ", we can represent @xmath194 using memory size @xmath195 .",
    "it is also advantageous in view of time complexity .",
    "note that since the field is binary , there is no multiplication .",
    "the naive gauss elimination would require @xmath196 additions , while the better representation of @xmath194 needs only @xmath197 additions .",
    "stefano chesi , daniel loss , sergey bravyi , and barbara  m. terhal .",
    "thermodynamic stability criteria for a quantum memory based on stabilizer and subsystem codes . , 12,:025013 , 2009 .",
    "http://arxiv.org/abs/0907.2807 [ ] ."
  ],
  "abstract_text": [
    "<S> we suggest concrete models for self - correcting quantum memory by reporting examples of local stabilizer codes in 3d that have no string logical operators . </S>",
    "<S> previously known local stabilizer codes in 3d all have string - like logical operators , which make the codes non - self - correcting . </S>",
    "<S> we introduce a notion of `` logical string segments '' to avoid difficulties in defining one dimensional objects in discrete lattices . </S>",
    "<S> we prove that every string - like logical operator of our code can be deformed to a disjoint union of short segments , each of which is in the stabilizer group . </S>",
    "<S> the code has surface - like logical operators whose partial implementation has unsatisfied stabilizers along its boundary . </S>"
  ]
}
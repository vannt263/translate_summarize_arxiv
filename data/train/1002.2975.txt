{
  "article_text": [
    "network representation has become an increasingly widespread methodology of analysis to gain insight into the behavior of complex systems , ranging from gene regulatory networks to human infrastructures such as the internet , power - grids and airline transportation , through metabolism , epidemics and social sciences  @xcite .",
    "these studies are primarily data driven , where connectivity information is collected , and the structural properties of the resulting graphs are analyzed for modeling purposes .",
    "however , rather frequently , full connectivity data is unavailable , and the modeling has to resort to considerations on the _ class of graphs _ that obeys the available structural data . a rather typical situation is when the only information available about the network is the degree sequence of its nodes @xmath1 .",
    "for example , in epidemiology studies of sexually transmitted diseases  @xcite , anonymous surveys may only collect the _ number _ of sexual partners of a person in a given period of time , not their identity .",
    "epidemiologists are then faced with constructing a _ typical _ contact graph having the observed degree sequence , on which disease spread scenarios can be tested .",
    "another reason for studying classes or _",
    "ensembles _ of graphs obeying constraints comes from the fact that the network structure of many large - scale real - world systems is not the result of a global design , but of complex dynamical processes with many stochastic elements .",
    "accordingly , a statistical mechanics approach  @xcite can be employed to characterize the collective properties of the system emerging from its node level ( microscopic ) properties . in this approach ,",
    "statistical ensembles of graphs are defined  @xcite , representing `` connectivity microstates '' from which macroscopic system level properties are inferred via averaging .",
    "here we focus on the degree as a node characteristic , which could represent , for example , the number of friends of a person , the valence of an atom in a chemical compound , the number of clients of a router , etc .    in spite of its practical importance , finding a method to construct degree - based graphs in a way that allows the corresponding graph ensemble to be properly sampled has been a long - standing open problem in the network modeling community ( references using various approaches are given below ) . here",
    "we present a solution to this problem , using a biased sampling approach .",
    "we consider degree - based graph ensembles on two levels : 1 ) sequence - level , where a specific sequence of degrees is given , and 2 ) distribution level , where the sequences are themselves drawn from a given degree distribution @xmath2 . in the remainder we will focus on the fundamental case of labeled , undirected simple graphs . in a simple graph any link connects a single pair of distinct nodes and self loops and multiple links between the same pair of nodes are not allowed .",
    "without loss of generality , consider a sequence of @xmath0 positive integers @xmath3 , arranged in non - increasing order : @xmath4 .",
    "if there is at least one simple graph @xmath5 with degree sequence @xmath6 , the sequence @xmath6 is called a _ graphical sequence _ and we say that @xmath5 _ realizes _ @xmath6 . note that not every sequence of positive integers can be realized by simple graphs .",
    "for example , there is no simple graph with degree sequence @xmath7 or @xmath8 , while the sequence @xmath9 can obviously be realized by a simple graph . in general ,",
    "if a sequence is graphical , then there can be several graphs having the same degree sequence .",
    "also note that given a graphical sequence , the careless or random placing of links between the nodes may not result in a simple graph .    recently , a direct , swap - free method to systematically construct all the simple graphs realizing a given graphical sequence @xmath6 was presented  @xcite .",
    "however , in general ( for exceptions see ref .  ) , the number of elements of the set @xmath10 of all graphs that realize sequence @xmath6 , increases very quickly with @xmath0 : a simple upper bound is provided by the number of all graphs with sequence @xmath6 , allowing for multiple links and loops : @xmath11 .",
    "thus , typically , systematically constructing all graphs with a given sequence @xmath6 is practical only for short sequences , such as when determining the structural isomers of alkanes  @xcite . for larger sequences , and",
    "in particular for modeling real - world complex networks , it becomes necessary to sample @xmath10 .",
    "accordingly , several variants based on the markov chain monte carlo ( mcmc ) method were developed .",
    "they use link - swaps  @xcite ( `` switches '' ) to produce pseudo - random samples from @xmath10 .",
    "unfortunately , most of them are based on heuristics , and apart from some special sequences , little has been rigorously shown about the methods mixing time , and accordingly they are ill - controlled .",
    "the literature on such mcmc methods is simply too extensive to be reviewed here , instead , we refer the interested reader to refs   and the references therein . finally , we recall the main swap - free method producing uniform random samples from @xmath10 , namely the configuration model ( cm )  @xcite .",
    "this method picks a pair of nodes uniformly at random and connects them , until a rejection occurs due to a double link or a self - loop , in which case it restarts from the very beginning .",
    "for this reason , the cm can become very slow , as shown in the discussion section .",
    "the cm has inspired approximation methods as well  @xcite and methods that construct random graphs with given _ expected _ degrees  @xcite .    here , by developing new results from the theorems in ref .",
    ", we present an efficient algorithm that solves this fundamental graph sampling problem , and it is exact in the sense that it is not based on any heuristics . given a graphical sequence , the algorithm always finishes with a simple graph realization in polynomial time , and it is rejection free . while the samples obtained are not uniformly generated , the algorithm also provides the exact weight for each sample , which can then be used to produce averages of arbitrary graph observables measured uniformly , or following any given distribution over @xmath10 .",
    "before introducing the algorithm , we state some results that will be useful later on .",
    "we begin with the erds - gallai ( eg ) theorem  @xcite , which is a fundamental result that allows us to determine whether a given sequence of non - negative integers , called `` degree sequence '' hereafter , is graphical .",
    "[ eg ] a non - increasing degree sequence @xmath12 is graphical if and only if their sum is even and , for all @xmath13 : @xmath14    a necessary and sufficient condition for the graphicality of a degree sequence , which is constrained from having links between some node and a  forbidden set \" of other nodes is given by the star - constrained graphicality theorem  @xcite . in this case",
    "the forbidden links are all incident on one node and thus form a `` star '' . to state the theorem",
    ", we first define the `` leftmost adjacency set '' of a node @xmath15 with degree @xmath16 in a degree sequence @xmath17 as the set consisting of the @xmath16 nodes with the largest degrees that are _ not in _ the forbidden set .",
    "if @xmath17 is non - increasing , then the nodes in the leftmost adjacency set are the first @xmath16 nodes in the sequence that are not in the forbidden set .",
    "the forbidden set could represent nodes that are either already connected to @xmath15 , and thus subsequent connections to them are forbidden , or just imposed arbitrarily . using this definition ,",
    "the theorem is :    [ th6 ] let @xmath12 be a non - increasing graphical degree sequence",
    ". assume there is a set of forbidden links incident on a node @xmath15 .",
    "then a simple graph avoiding the forbidden links can be constructed if and only if a simple graph can be constructed where @xmath15 is connected to all the nodes in its leftmost adjacency set .",
    "a direct consequence  @xcite of theorem  [ th6 ] for the case of an empty forbidden set is the well - known havel - hakimi result  @xcite , which in turn implies :    [ firsthappy ] let @xmath12 be a non - increasing unconstrained graphical degree sequence .",
    "then , given any node @xmath15 , there is a realization of @xmath17 that includes a link between the first node and @xmath15 .",
    "another result we exploit here is lemma 3 of ref .  , extended to star - constrained sequences :    [ l3kim ] let @xmath6 be a graphical sequence , possibly with a star constraint incident on node @xmath15 .",
    "let @xmath18 and @xmath19 be distinct nodes not in the forbidden set and different from @xmath15 , such that @xmath20 .",
    "then @xmath21 is also a graphical sequence with the same star constraint .",
    "let @xmath22 denote the set of nodes forbidden to connect to node @xmath15 . since @xmath6 is star - constrained graphical",
    "there is a simple graph @xmath5 realizing the sequence with no connections between @xmath15 and @xmath22 . since @xmath20 , there is a node @xmath23 to which @xmath18 is connected but @xmath19 is not .",
    "note that @xmath23 could be in @xmath24 .",
    "now cut the edge @xmath25 of @xmath5 creating a stub at @xmath23 and another at @xmath18 .",
    "remove the stub at @xmath18 so that its degree becomes @xmath26 , and add a stub at @xmath19 so that its degree becoming @xmath27 .",
    "since there are no connections in @xmath5 between @xmath23 and @xmath19 , connect the two stubs at these nodes creating a simple graph @xmath28 thus realizing @xmath29 .",
    "clearly there are still no connections between @xmath15 and @xmath22 in @xmath28 , and thus @xmath29 is also star - constrained graphical .    finally , using lemma  [ l3kim ] and theorem  [ th6 ] , we prove :    [ fmt ] let @xmath17 be a degree sequence , possibly with a star - constraint incident on node @xmath15 , and let @xmath30 and @xmath31 be two nodes with degrees such that @xmath32 that are not constrained from linking to node @xmath15 .",
    "if the residual degree sequence @xmath33 obtained from @xmath17 by reducing the degrees at @xmath15 and @xmath30 by unity is not graphical , then the degree sequence @xmath34 obtained from @xmath17 by reducing the degrees at @xmath15 and @xmath31 by unity is also not graphical .    by definition ,",
    "@xmath35 for @xmath36 and @xmath37 , @xmath38 ; @xmath39 for @xmath40 and @xmath41 , @xmath42 .",
    "we consider @xmath43 , however , the proof is not affected by this assumption . by assumption , @xmath29 is not graphical . using proof by contradiction ,",
    "assume that @xmath44 is graphical .",
    "clearly , @xmath45 , and thus we can apply lemma [ l3kim ] on this sequence . as a result ,",
    "the sequence @xmath46 , that is exactly @xmath29 is graphical , a contradiction .",
    "note that if a sequence is non - graphical , then it is not star - constrained graphical either , and thus theorem  [ fmt ] is in its strongest form .",
    "the sampling algorithm described below is ergodic in the sense that every possible simple graph with the given finite degree sequence is generated with non - zero probability .",
    "however , it does not generate the samples with uniform probability ; the sampling is biased .",
    "nevertheless , the algorithm can be used to compute network observables that are unbiased , by appropriately weighing the averages measured from the samples .",
    "according to a well known principle of biased sampling  @xcite , if the relative probability of generating a particular sample @xmath47 is @xmath48 , then an unbiased estimator for an observable @xmath49 measured from a set of @xmath50 randomly generated samples @xmath51 is the weighted average @xmath52 where the weights are @xmath53 , and the denominator is a normalization factor .",
    "the key to this method is to find the appropriate weight @xmath54 to associate with each sample .",
    "note that in addition to uniform sampling , it is in fact possible to sample with any arbitrary distribution by choosing an appropriate set of sample weights .",
    "let @xmath6 be a non - increasing graphical sequence .",
    "we wish to sample the set @xmath10 of graphs that realize this sequence .",
    "the graphs can be systematically constructed by forming all the links involving each node .",
    "to do so , begin by choosing the first node in the sequence as the `` hub '' node and then build the set of the `` allowed nodes '' @xmath55 that can be connected to it .",
    "@xmath56 contains all the nodes that can be connected to the hub such that if a link is placed between the hub and a node from @xmath56 , then a simple graph can still be constructed , thus preserving graphicality .",
    "choose uniformly at random a node @xmath57 , and place a link between @xmath58 and the hub .",
    "if @xmath58 still has `` stubs '' , i.e.  remaining links to be placed , then add it to the set of `` forbidden nodes '' @xmath59 that contains all the nodes which ca nt be linked anymore to the hub node and which initially contains only the hub ; otherwise , if @xmath58 has no more stubs to connect , then remove it from further consideration .",
    "repeat the construction of @xmath56 and link the hub with one of its randomly chosen elements until the stubs of the hub are exhausted .",
    "then remove the hub from further consideration , and repeat the whole procedure until all the links are made and the sample construction is complete .",
    "each time the procedure is repeated , the degree sequence @xmath17 considered is the `` residual degree sequence '' , that is the original degree sequence reduced by the links that have previously been made , and with any zero residual degree node removed from the sequence .",
    "then , choose a new hub , empty the set of forbidden nodes @xmath59 and add the new hub to it .",
    "it is convenient , but not necessary , to choose the new hub to be a node with maximum degree in the residual degree sequence .",
    "the sample weights needed to obtain unbiased estimates using eq .  [ two ] are the inverse relative probabilities of generating the particular samples .",
    "if in the course of the construction of the sample @xmath23 different nodes @xmath60 are chosen as the hub and they have @xmath61 residual degrees when they are chosen , then this sample weight can be computed by first taking the product of the sizes @xmath62 of the allowed sets @xmath56 constructed , then dividing this quantity by a combinatorial factor which is the product of the factorials of the residual degrees of each hub : @xmath63 the weight accounts for the fact that at each step the hub node has @xmath62 nodes it can be linked to , which is the size of the allowed set at that point , and that the number of equivalent ways to connect the residual stubs of a new hub is @xmath64 .",
    "note that it is always true that @xmath65 , with @xmath66 occurring for sequences for which there is only one possible graph .",
    "the most difficult step in the sampling algorithm is to construct the set of allowed nodes @xmath56 . in order to do so first note",
    "that theorem  [ fmt ] implies that if a non - forbidden node , that is a node not in @xmath67 , can be added to @xmath68 , then all non - forbidden nodes with equal or higher degree can also be added to @xmath68 .",
    "conversely , if it is determined that a non - forbidden node can not be added to @xmath68 , then all nodes with equal or smaller degree also can not be added to @xmath68 . therefore , referring to the degrees of nodes that can not be added to @xmath56 as `` fail - degrees '' , the key to efficiently construct @xmath68 is to determine the maximum fail - degree , if fail - degrees exist .    the first time @xmath56 is constructed for a new hub , according to corollary  [ firsthappy ] , there is no fail - degree and @xmath56 consists of all the other nodes .",
    "however , constructing @xmath56 becomes more difficult once links have been placed from the hub to other nodes . in this case , to find the maximum fail - degree note that at any step during the construction of a sample the residual sequence being used is graphical .",
    "then , since according to theorem  [ th6 ] any connection to the leftmost adjacency set of the hub preserves graphicality , it follows from theorem  [ fmt ] that any fail - degree has to be strictly less than the degree of any node in the leftmost adjacency set of the hub .",
    "if there are non - forbidden nodes in the residual degree sequence that have degree less than any in its leftmost adjacency set , then the maximum fail - degree can be found with a procedure that exploits theorem  [ th6 ] .",
    "in particular , if the hub is connected to a node with a fail - degree , then , by theorem  [ th6 ] , even if all the remaining links from the hub were connected to the remaining nodes in the leftmost adjacency set , the residual sequence will not be graphical .",
    "our method to find fail - degrees , given below , is based on this argument .",
    "begin by constructing a new residual sequence @xmath69 by temporarily assuming that links exist between the hub and all the nodes in its leftmost adjacency set _ except for the last one _ , which has the lowest degree in the set .",
    "the nodes temporarily linked to the hub should also be temporarily added to the set of forbidden nodes @xmath59 .",
    "the nodes in @xmath70 should be ordered so that it is non - increasing , that forbidden nodes appear before non - forbidden nodes of the same degree , and that the hub , which now has residual degree 1 , is last .    at this point , in principle one could find the maximum fail degree by systematically connecting the last link of the hub with non - forbidden nodes of decreasing degree , and testing each time for graphicality using theorem  [ eg ] .",
    "if it is not graphical then the degree of the last node connected to the hub is a fail - degree , and the node with the largest degree for which this is true will have the maximum fail - degree .",
    "however , this procedure is inefficient because each time a new node is linked with the hub the residual sequence changes and every new sequence must be tested for graphicality .",
    "a more efficient procedure to find the maximum fail - degree instead involves only testing the sequence @xmath70 . to see how this can be done ,",
    "note that @xmath70 is a graphical sequence , by theorem  [ th6 ] .",
    "thus , by theorem  [ eg ] , for all relevant values of @xmath19 , the left hand side of inequality  [ egeq ] , @xmath71 , and the right hand side of it , @xmath72 , satisfy @xmath73 .",
    "furthermore , for the purposes of finding fail - degrees it is sufficient to consider linking the final stub of the hub with only the last non - forbidden node of a given degree , if any exists .",
    "after any such link is made , the resulting degree - sequence @xmath74 will be non - increasing , and thus theorem 1 can be applied to test it for graphicality . therefore , if the degree of the node connected with the last stub of the hub is a fail - degree , then inequality  [ egeq ] for @xmath75 must fail for some @xmath19 . for each @xmath19 ,",
    "the possible differences in @xmath71 and @xmath72 between @xmath70 and @xmath75 are as follows .",
    "@xmath72 is always reduced by 1 because the residual degree of the hub is reduced from 1 to 0 .",
    "@xmath72 may be reduced by an another factor of 1 if the last node connected to the hub , having index @xmath76 and degree @xmath77 , is such that @xmath78 and @xmath79 .",
    "@xmath71 is reduced by 1 if @xmath80 , otherwise it is unchanged .    considering these conditions that can cause inequality  [ egeq ] to fail for @xmath75 , the set of allowed nodes @xmath56 can be constructed with the following algorithm that requires only testing @xmath70 . starting with @xmath81 ,",
    "compute the values of @xmath71 and @xmath72 for @xmath70 .",
    "there are three possible cases : ( 1 ) @xmath82 , ( 2 ) @xmath83 , and ( 3 ) @xmath84 . in case",
    "( 1 ) fail - degrees occur whenever @xmath71 is unchanged by making the final link to the hub .",
    "thus , the degree of the first non - forbidden node whose index is greater than @xmath19 is the largest fail - degree found with this value of @xmath19 . in case ( 2 ) fail - degrees occur whenever @xmath71 is unchanged and @xmath72 is reduced by 2 by making the final link to the hub .",
    "thus , the degree of the first non - forbidden node whose index is greater than @xmath19 and whose degree is less than @xmath85 is the largest fail - degree found with this value of @xmath19 . in case",
    "( 3 ) no fail - degree can be found with this value of @xmath19 .",
    "repeat this process sequentially increasing @xmath19 , until all the relevant @xmath19 values have been considered , then retain the maximum fail - degree .",
    "it can be shown that the algorithm can be stopped either after a case ( 1 ) occurs , or after @xmath86 where @xmath87 is the lowest index of any node in @xmath70 with degree @xmath88 .",
    "once the maximum fail - degree is found , remove the nodes that were temporarily added to @xmath59 and construct @xmath56 by including all non - forbidden nodes of @xmath6 with a higher degree .",
    "if no fail - degree is ever found , then all non - forbidden nodes of @xmath17 are included in @xmath56 .",
    "@xmath56 will always include the leftmost adjacency set of the hub and any non - forbidden nodes of equal degree .",
    "note that after a link is placed in the sample construction process , the residual degree sequence @xmath17 changes , and therefore , @xmath56 has to be determined every time .      finally , @xmath71 and @xmath72 should be calculated efficiently .",
    "calculating the sums that comprise them for each new value of @xmath19 can be computationally intensive , especially for long sequences . even computing them only for as many distinct terms as there are in the sequence , as suggested in ref .",
    ", can still become slow if the degree distribution is not quickly decreasing .",
    "instead , it is much more efficient to use recurrence relations to calculate them .",
    "a recurrence relation for @xmath71 is simply @xmath89 with @xmath90 .",
    "for non - increasing degree sequences , define the `` crossing - index '' @xmath91 for each @xmath19 as the index of first node that has degree less than @xmath92 , that is for which @xmath93 for all @xmath94 .",
    "if no such index exists , such as for @xmath81 since the minimum degree of any node in the sequence is 1 , then set @xmath95 .",
    "then , a recurrence relation for @xmath72 is @xmath96 where @xmath97 is a discrete equivalent of the heaviside function , defined to be 1 on positive integers and 0 otherwise , and @xmath98 . or , since the crossing - index can not increase with @xmath19 , that is @xmath99 for all @xmath19 , a value @xmath100 will exist for which @xmath101 for all @xmath102 , and so eq .  [ recm1 ] can be written @xmath103 thus , there is no need to find @xmath91 for @xmath104 .    using eqs .",
    "[ recs ] and  [ recm ] , the mechanism of the calculation of @xmath71 and @xmath72 at sequential values of @xmath19 is shifted from a slow repeated calculation of sums of many terms to the much less computationally intensive task of calculating the recurrence relations . in order to perform the test efficiently ,",
    "a table of the values of crossing - index @xmath91 for each relevant @xmath19 can be created as @xmath33 is constructed .",
    "probability distribution @xmath105 of the logarithm of weights for an ensemble of power - law sequences with @xmath106 and @xmath107 .",
    "the ensemble contained @xmath108 graphical sequences , and for each sequence @xmath109 graph samples were produced .",
    "thus , the total number of samples produced was @xmath110 .",
    "the simulation data is given by the solid black line and a gaussian fit of the data is shown by the dashed red line that nearly obscures the black line.,scaledwidth=40.0% ]    it should be noted that the usefulness of this method for calculating @xmath71 and @xmath72 is broader than its use for calculating fail - degrees in our sampling algorithm . in particular , it can be used in an erds - gallai test to efficiently determine whether a degree - sequence is graphical .",
    "as previously stated , the weight @xmath111 associated with a particular sample , given by eq .",
    "[ weight ] , is the product of the sizes @xmath62 of all the sets of allowed nodes that have been built for each hub node @xmath15 divided by the product of the factorials of the initial residual degrees of each hub node .",
    "the logarithm of this weight is @xmath112\\ : .",
    "\\label{lw}\\ ] ] generally , degree sequences with @xmath113 admit many graphical realizations . when this is true , each of the @xmath23 terms in square brackets in eq .",
    "[ lw ] are effectively random and independent , and , by virtue of the central limit theorem , their sum will be normally distributed .",
    "that is , the weight @xmath111 of graph samples generated from a given degree sequence with large @xmath0 is typically log - normally distributed .",
    "however , degree sequences with @xmath114 that have only a small number of realizations do exist , and @xmath111 is not expected to be log - normally distributed for those sequences .",
    "mean @xmath23 and standard deviation @xmath115 of the distributions of the logarithm of the weights vs.  number of nodes @xmath0 of samples from an ensemble of power - law sequences with @xmath107 .",
    "the black circles correspond to @xmath23 , the red squares correspond to @xmath115 .",
    "the error bars are smaller than the symbols .",
    "the solid black line and the dashed red line show the outcomes of fits on the data .",
    "the linearity of the data on a logarithmic scale indicates that the @xmath23 and @xmath115 follow power - law scaling relations with @xmath0 : @xmath116 and @xmath117 .",
    "the slopes of the fit lines are an estimate of the value of the exponents : @xmath118 and @xmath119.,scaledwidth=40.0% ]    furthermore , one can consider not just samples of a particular graphical sequence , but of an ensemble of sequences . by a similar argument to that given above for individual sequences , the weight @xmath111 of graph samples generated from an ensemble of sequences will also typically be log - normally distributed in the limit of large @xmath0 . for example , consider an ensemble of sequences of randomly chosen power - law distributed degrees , that is , sequences of random integers chosen from a probability distribution @xmath120 .",
    "hereafter , we refer to such sequences as `` power - law sequences . ''",
    "figure  [ lognorm ] shows the probability distribution of the logarithm of weights for realizations of power - law sequences with exponent @xmath107 and @xmath106 .",
    "note that this distribution is well approximated by a gaussian fit .",
    "we have also studied the behavior of the mean and the standard deviation of the probability distribution of the logarithm of the weights of such power - law sequences as a function of @xmath0 . as shown in fig .",
    "[ paramfit ] , they scale as a power - law .",
    "we have found qualitatively similar results , including power - law scaling of the growth of the mean and variance of the distribution of @xmath121 , for binomially distributed degree sequences that correspond to those of erds - renyi random graphs with node connection probability @xmath105 such that @xmath122 , and for uniformly distributed degree sequences , that is power - law sequences with @xmath123 , with an upper limit , or cutoff , of @xmath124 for the degree of a node .",
    "however , for uniformly distributed degree sequences without an imposed upper limit on node degrees , we find that the sample weights are not log - normally distributed .",
    "in this section we discuss the algorithm s computational complexity .",
    "we first provide an upper bound on the worst case complexity , given a degree sequence @xmath6 . then , using extreme value arguments , we conservatively estimate the average case complexity for degree sequences of random integers chosen from a distribution @xmath125 . the latter is useful for realistically estimating the computational costs for sampling graphs from ensembles of long sequences .    to determine an upper bound on the worst case complexity for constructing a sample from a given degree sequence @xmath6 , recall that the algorithm connects all the stubs of the current hub node before it moves on to the hub node of the new residual sequence . for",
    "every stub from the hub one must construct the allowed set @xmath68 . the algorithm for constructing @xmath68 , which includes constructing @xmath29 , performing the @xmath71 vs @xmath72 comparisons , and determining the maximum fail - degree ,",
    "can be completed in @xmath126 $ ] steps , where @xmath127 is the maximum possible number of nodes in the residual sequence after eliminating @xmath18 hubs from the process .",
    "therefore , an upper bound on the worst case complexity @xmath128 of the algorithm given a sequence @xmath6 is : @xmath129 where the sum involves at most @xmath130 terms .",
    "equivalently , @xmath131 , with @xmath132 being the number of links in the graph . for simple graphs ,",
    "the maximum possible number of links is @xmath133 , and the minimum possible number is @xmath130 . if @xmath134 , then @xmath135 , and if @xmath136 , then @xmath137 , which is an upper bound , independent of the sequence .",
    "the estimated computational complexity of the algorithm for power - law sequences .",
    "the leading order of the computational complexity of the algorithm as a power of @xmath0 , where @xmath0 is the number of nodes , is plotted as a function of the degree distribution power - law exponent @xmath138 .",
    "the black circles correspond to ensembles of sequences without cutoff , while the red squares correspond to ensembles of sequences with structural cutoff in the maximum degree of @xmath139 .",
    "the fits that yielded the data points were carried out considering sequences ranging in size from @xmath106 to @xmath140.,scaledwidth=40.0% ]    from eq .",
    "[ cw ] , the expected complexity for the algorithm to construct a sample for a degree sequence of random integers chosen from a distribution @xmath125 , normalized to unity , can be conservatively estimated as @xmath141 here @xmath142 is the expectation value for the degree of the node with index @xmath18 , which is the largest degree for which the expected number of nodes with equal or larger degree is at least @xmath143 .",
    "that is , @xmath144 notice that the sum in the above equation runs to the maximum allowed degree in the network @xmath145 , which is nominally @xmath146 , but a different value can be imposed .",
    "for example , in the case of power - law sequences , the so - called structural cutoff of @xmath147 is necessary if degree correlations are to be avoided  @xcite .",
    "however , such a cutoff needs to be imposed only for @xmath148 , because the expected maximum degree @xmath149 in a power - law network grows like @xmath150 .",
    "thus , for @xmath151 , @xmath152 grows no faster than @xmath124 and no degree correlations exist for large @xmath0  @xcite .    given a particular form of distribution @xmath125 , eq .",
    "[ compl ] can be computed for different values of @xmath0 .",
    "subsequent fits of the results to a power - law function allow the order of the complexity of the algorithm to be estimated .",
    "figure  [ plfits ] shows the results of such calculations for power - law sequences with and without the structural cutoff of @xmath139 as a function of exponent @xmath138 .",
    "note that , in the absence of cutoff , the results indicate that the order of the complexity goes to a value of 3 for @xmath153 , that is , in the limit of a uniform degree distribution .",
    "however , if the structural cutoff is imposed the order of the complexity is only @xmath154 in this limit .",
    "both these results are easily verified analytically .",
    "we have tested the estimates shown in fig .",
    "[ plfits ] with our implementation of the sampling algorithm for power - law sequences with and without the structural cutoff for certain values of @xmath138 , including 0 , 2 , and 3 .",
    "this was done by measuring the actual execution times for generating samples for different @xmath0 and fitting the results to a power - law function . in every case , the actual order of the complexity of our implementation of the sampling algorithm was equal to or slightly less than its estimated value shown in fig .",
    "[ plfits ] .",
    "we have solved the long standing problem of how to efficiently and accurately sample the possible graphs of any graphical degree sequence , and of any ensemble of degree sequences .",
    "the algorithm we present for this purpose is ergodic and is guaranteed to produce an independent sample in , at most , @xmath155 steps .",
    "although the algorithm generates samples non - uniformly , and , thus , it is biased , the relative probability of generating each sample can be calculated explicitly permitting unbiased measurements to be made . furthermore , because the sample weights are known explicitly , the algorithm makes it possible to sample with any arbitrary distribution by appropriate re - weighting .",
    "it is important to note that the sampling algorithm is guaranteed to successfully and systematically proceed in constructing a graph .",
    "this behavior contrasts with that of other algorithms , such as the configuration model ( cm ) , which can run into dead ends that require back - tracking or restarting , leading to considerable losses of time and potentially introducing an uncontrollable bias into the results .",
    "while there are classes of sequences for which it is perhaps preferable to use the cm instead of our algorithm , in other cases its performance relative to ours can be remarkably poor .",
    "for example , a configuration model code failed to produce even a single sample of a uniformly distributed graphical sequence , @xmath156 , with @xmath106 , after running for more than 24 hours , while our algorithm produced @xmath157 samples of the very same sequence in 30 seconds .",
    "furthermore , each sample generated by our algorithm is independent .",
    "this behavior contrasts with that of algorithms based on mcmc methods .",
    "because our algorithm works for any graphical sequence and for any ensemble of random sequences , it allows arbitrary classes of graphs to be studied .",
    "one of the features of our algorithm that makes it efficient is a method of calculating the left and right sides of the inequality in the erds - gallai theorem using recursion relations . testing a sequence for graphicality",
    "can thus be accomplished without requiring repeated computations of long sums , and the method is efficient even when the sequence is nearly non - degenerate .",
    "the usefulness of this method is not limited to the algorithm presented for graph sampling , but can be used anytime a fast test of the graphicality of a sequence of integers is needed .",
    "there are now over 6000 publications focusing on complex networks . in many of these publications various processes , such as network growth , flow on networks , epidemics , etc .",
    ", are studied on toy network models used as `` graph representatives '' simply because they have become customary to study processes on .",
    "these include the erds - rnyi random graph model , the barabsi - albert preferential attachment model , the watts - strogatz small - world network model , random geometric graphs , etc . however , these toy models are based on specific processes that constrain their structure beyond their degree - distribution , which in turn might not actually correspond to the processes that have led to the structure of the networks investigated with them , thus potentially introducing dangerous biases in the conclusions of these studies .",
    "the algorithm presented here provides a way to study classes of simple graphs constrained solely by their degree sequence , and nothing else .",
    "however , additional constraints , such as connectedness , or any functional of the adjacency matrix of the graph being constructed , can in principle be added to the algorithm to further restrict the graph class built .",
    "cidg and keb are supported by the nsf through grant dmr-0908286 and by the norman hackerman advanced research program through grant 95921 .",
    "hk and zt are supported in part by the nsf bcs-0826958 and by dtra through hdtra 201473 - 35045 .",
    "the authors gratefully acknowledge y.  sun , b.  danila , m.  m.  ercsey  ravasz , i.  mikls , e.  p.  erds and l.  a.  szkely for fruitful comments , discussions and support ."
  ],
  "abstract_text": [
    "<S> uniform sampling from graphical realizations of a given degree sequence is a fundamental component in simulation - based measurements of network observables , with applications ranging from epidemics , through social networks to internet modeling . </S>",
    "<S> existing graph sampling methods are either link - swap based ( markov - chain monte carlo algorithms ) or stub - matching based ( the configuration model ) </S>",
    "<S> . both types are ill - controlled , with typically unknown mixing times for link - swap methods and uncontrolled rejections for the configuration model . here </S>",
    "<S> we propose an efficient , polynomial time algorithm that generates statistically independent graph samples with a given , arbitrary , degree sequence . </S>",
    "<S> the algorithm provides a weight associated with each sample , allowing the observable to be measured either uniformly over the graph ensemble , or , alternatively , with a desired distribution . unlike other algorithms </S>",
    "<S> , this method always produces a sample , without back - tracking or rejections . using a central limit theorem - based reasoning , we argue , that for large @xmath0 , and for degree sequences admitting many realizations , the sample weights are expected to have a lognormal distribution . as examples </S>",
    "<S> , we apply our algorithm to generate networks with degree sequences drawn from power - law distributions and from binomial distributions . </S>"
  ]
}
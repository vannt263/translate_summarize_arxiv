{
  "article_text": [
    "modular self - reconfigurable ( or metamorphic ) robots  @xcite consist of many simple identical modules , that can attach and detach from one another to change their overall topology .",
    "these systems can dynamically adapt their shape to suit the needs of the task at hand , e.g. , for manipulation , locomotion , and adaptive structures responding to environmental stresses .    from a planning and control viewpoint ,",
    "metamorphic robots pose several interesting research challenges .",
    "self - reconfiguration , or how to change shape automatically , is a new and so far little studied problem for robots .",
    "decentralized control is a useful approach to this problem especially when the robot has a the large number of modules , each of which is a self - contained unit with its own processing , sensing and actuation . with the tight physical interactions due to contact between neighboring modules and constraints arising from actuator geometry and power limitations , modular metamorphic robots pose an interesting challenge for multiagent control .",
    "they thus require a more physically grounded approach than many studies of artificial life  @xcite which tend to concentrate on how complex natural organisms achieve sophisticated crowd behaviors or deal with abstract agents that currently can not be physically constructed  @xcite . alternatively , biological and chemical techniques for distributed construction of shapes  @xcite provide examples of local behaviors producing complex shapes , but are not yet capable of producing general programmable robotic systems .",
    "one approach to reconfiguration uses a precise specification of the desired locations of all the modules , and then solves the combinatorial search required to identify motions for the modules according to some criterion , such as minimizing the number of moves or power consumption .",
    "such searches are generally intractable for robots consisting of many modules , but can be addressed approximately using heuristics  @xcite .",
    "unfortunately , in many practical applications , defining an exact target shape may not be suitable or even possible .",
    "this may arise when some modules fail or the nature of the environment or task is uncertain , for example , when grasping an object of unknown size or shape .",
    "instead , we use multiagent control to achieve suitable reconfiguration as a side - effect of creating a structure with the _ properties _ ( structural , morphological , etc ) required for the task .",
    "when the properties can be expressed largely in terms of the local environment for each module , agent - based control often achieves a suitable shape without any need to precisely specify the exact position of each module .",
    "moreover , an agent - based architecture is well - suited to decomposing control problems based on the different physical phenomena dominant at different scales , especially for metamorphic robots with a large number of tiny modules .",
    "for example , micromachined robots  @xcite are dominated by friction and other surface forces rather than gravity .",
    "even smaller structures  @xcite are subject to randomly fluctuating forces , i.e. , brownian motion .",
    "in contrast to larger robots , these tiny machines readily move objects many times their own weight and have comparatively high speeds and strengths  @xcite .",
    "biology has numerous examples of different structures appropriate for different scales  @xcite . in such cases",
    ", different types of agents could be responsible for behaviors of individual modules , small groups of modules and so on , forming a hierarchical or multihierarchical correspondence between physical structures of the robot and its environment , the levels of specification for the desired task and the controlling software  @xcite .",
    "a related line of work applies multiagent control to teams of robots cooperating to achieve a common task  @xcite .",
    "these methods usually apply to independently mobile robots that are not physically connected and have little or no physical contact . in most current modular robot systems",
    "the modules remain attached to one another forming a single connected whole  @xcite , and giving rise to a number of tight physical motion constraints that do not apply to teams of independent robots . on the other hand",
    ", the physical contact between modules allows modules to locate their neighbors without complex sensory processing as would be required , for example , to visually identify a physically disconnected member of a team .",
    "hence the techniques for coordinating teams are not directly applicable to modular robot controls . furthermore",
    ", more traditional self - reconfiguration algorithms require an a - priori exact description of a target shape for the given task , which may not be suitable when the robot operates in uncertain environments .",
    "specifically , we explore the use of _ simple _ , purely _ local _ rules to produce control algorithms for accomplishing tasks such as dynamic adaptation under changing external conditions ( e.g. , added weight ) and grasping objects .",
    "we will use the term _ behaviors _ for the specific control algorithms .",
    "the assumptions we make are as follows :    * modules have limited computational capabilities , consisting of a limited memory and a simple finite - state machine ( fsm ) .",
    "state transitions are driven by the states , the relative positions of a module and its neighbors , and some external sensor information .",
    "the state transitions can update the memory of a module and its neighbors . *",
    "communication is limited to immediate neighbors , and a limited number of bits are exchanged at each step .",
    "we specifically did not allow modules to broadcast messages globally , because the power required would likely not scale well if the size of modules shrinks .",
    "morover , fully utilizing broadcasts would require more complex knowledge and processing on the part of the modules .",
    "the remainder of this paper presents the design and evaluation of control algorithms for metamorphic systems that coordinate their actions locally to achieve emergent , global behaviors .",
    "the next section describes the robot platform used in our work and general control primitives .",
    "the following two sections present the results of our algorithms applied to specific tasks and provide an analysis of the behavior .",
    "this section describes the modular robot used in our work , its simulator and the control primitives combined to create the behaviors described below .",
    "several modular metamorphic robot designs have been proposed  @xcite . for our study , we focus on one such design : proteo  @xcite , which is a modular self - reconfigurable , or metamorphic , robot being developed at xerox parc . in the current design , modules are rhombic dodecahedra ( polygons with twelve identical faces , each of which is a rhombus ) .",
    "modules attach to one another along their faces forming general three dimensional solids . to achieve a change of shape modules on the outer surface roll over the substrate of other modules to new positions .",
    "this type of reconfiguration has been called `` substrate reconfiguration '' , in contrast with other existing reconfiguration classes  @xcite .",
    "the rhombic dodecahedron can be thought of as the 3d analog of the hexagon and has several useful properties .",
    "notably , these polyhedra result in maximium internal volume for a given surface area  @xcite , meaning more room for packing electronic and mechanical components . also , all module - on - module rotations are always 120 degrees , unlike the cube which requires 180 degree rotations in certain cases .",
    "a main disadvantage is that twelve faces per module need to be actuated , increasing the complexity and expense of the hardware . for a target module size in the centimeter scale",
    ", current actuator technologies result in large weight to power ratios and high cost per module",
    ". a manually actuated version of proteo has been built and is shown in figure  [ proteo ] .",
    "modules connect along their faces , as illustrated in figure  [ proteo2 ] .",
    "in addition to actuators , the modules can communicate directly with their neighbors . depending on the application",
    ", they can also include various sensor elements , e.g. , to detect forces imposed by the environment or the weight of other modules .",
    "for the experiments reported below , we used a simulation of the proteo robot platform .",
    "this simulation includes the physical motion constraints on the modules , allowing them to rotate onto neighboring modules only when that motion is not obstructed by other modules .",
    "this simulation has the modules operating asynchronously .",
    "specifically , every module is given a chance to execute its behavior exactly once each time cycle .",
    "the behavior executions for the modules are ordered in a different , random way for each time cycle .",
    "when the behavior code is executed each module describes what movement ( if any ) it wants to perform at the end of the cycle .",
    "after all the behavior code is executed , the simulator attempts to perform the requested movement for each module in turn , subject to geometrical constraints .",
    "this means that a module might be denied the movement it has requested .",
    "the control programs in the modules are not directly notified of the outcome of their movement requests ( by means of an exception , for example ) .",
    "while this capability could certainly be added to the system , we found it is not necessary for applying our coordination techniques to the tasks described below .",
    "this lack of notification means modules can become `` stuck '' and attempt the same movement in vain for several time cycles .",
    "however , the overall behavior is still achieved because at the same time other modules are able to complete their moves , and can eventually remove the obstacle preventing motion .",
    "alternatively , the motion of these other modules can sufficiently change the structure that the stuck module decides on another motion .",
    "another programming issue was how a module should sample randomly from the available moves .",
    "when a completely random move is desired , the module simply picks with equal probability from the available moves to neighboring positions .",
    "when a directed random move is needed , a different method is used , which picks only from the available moves that go in a direction that has a positive dot product with a specified general direction in space .",
    "the latter approach is used when there is some bias direction inherent to the specific application ( e.g. the direction of the `` ball '' in the grasping behavior described in section  [ grasp ] ) .",
    "while such biased choices do not necessarily result in the most direct motion toward the goal , the randomness reduces the likelihood of becoming stuck and increases robustness in case of failed modules . from a global planning perspective",
    ", this randomness can be viewed as a simple search procedure that avoids the potentially intractable combinatorial search of finding an optimal set of motions for all the modules .",
    "the simulation does not model all the details of the hardware .",
    "for example , it does not include limits on power consumption or actuator strength that could be significant in actual hardware implementations .",
    "the simulator also assumes the modules operate correctly and have accurate local sensory information , e.g. , concerning contact with neighbors or other objects or mechanical stress .",
    "the results of the simulation are illustrated using the schematic representation of the modules included in figures  [ proteo ] and [ proteo2 ] .",
    "while the proteo system illustrates the issues facing modular robotics and provides a useful testbed , our methods are not tied to any specific design , but instead are applicable to metamorphic robots in general .",
    "specifically , the agents make use of a few primitive constructs that are combined to form a control program for each module . these primitives allow simple communication and coordination among the modules , and",
    "could be implemented by a variety of modular robots .",
    "our approach uses the following primitives :    * growth * is the process that creates structures .",
    "it is important to provide a mechanism for focusing the movement of modules to specific spots . otherwise ,",
    "if the movement is too random , it could take a long time before any reasonably good structure is grown .    * seeds * are the main agents that cause growth .",
    "a seed is a module that attracts other modules in order to further grow the structure .",
    "as more modules are attracted to a seed , they can in turn become seeds themselves , and thus propagate the growth process .",
    "* scents * are the means of global communication among modules .",
    "scents are propagated through the system in a distributed breadth - first fashion as follows .",
    "each module keeps track of the scent strength at its location with a value in its memory .",
    "those modules that emit the scent set their own value to zero .",
    "other modules examine the scent values of their neighbors at each time step , and then set their own scent value to one more than the minimum value among their neighbors .",
    "thus , smaller values indicate a stronger scent , and a scent gradient is created throughout the structure .",
    "scent values are an approximation of the minimum distance to a scent - emitting module in the system at any given time .",
    "the approximation arises because scents are broadcast via neighbors and thus can take many steps to propagate throughout the entire system , and during this time modules can move . nevertheless , as discussed further in section  [ stability ]",
    ", the scents generally propagate much faster than substantial rearrangements of the modules so this approximation worked quite well .",
    "we typically use either one or two different scents in our experiments .",
    "seeds emit a scent to attract modules , and modules that are searching for seeds move along the surface gradient of the scent to find them .",
    "the * mode * of a module is its present fsm state .",
    "for instance , seeds are usually denoted by the seed mode , modules that search for seeds are in the search mode , modules that are part of the finished structure are in the final mode , and modules that cause branching are in node mode .",
    "the mode in turn will determine the rules of behavior of a module .",
    "a final component of our control method is the use of random motions when different choices appear equally useful .",
    "this allows modules to continue performing even when the scent gradients do not completely specify the best direction . because such random motions are less efficient than following gradients , our algorithms arrange for relatively few states to search before useful gradient information is found .",
    "a simple example is shown in figure  [ search ] .",
    "a single seed module , with scent @xmath0 , is connected to a chain of modules in search mode with successively larger scent values . in this configuration ,",
    "only the search module at the end of the chain is free to move . its neighbor s smaller scent value ( i.e. , @xmath1 ) indicates that the module at the end of the chain can find a position with even smaller scent value by rolling over the faces of its neighbor .",
    "one possible sequence of steps following from this initial configuration is shown in figure  [ search steps ] . for simplicity , this figure shows the remaining modules remaining stationary .",
    "in this example , the moving module goes directly toward the seed .",
    "however , the gradient does not specify precisely which other face is best .",
    "instead , the free module moves randomly over the available faces of its neighbor until it encounters the module with @xmath2 .",
    "at this point , the moving module updates its scent value to @xmath1 and then continues its search for the seed by moving over the faces of the @xmath2 module . because there are only a few faces to explore before new gradient information is found , this use of random search is likely to complete after only a few moves .",
    "this section presents experiments on proteo with some environmental sensing and using our agent - based control algorithms within each module .",
    "the experiments were restricted to no more than a few hundred modules to keep simulation times reasonable ( i.e. , at most several hours ) .",
    "a chain is often the preferred locomotion configuration of modular robots for moving over steps , snaking into holes or squeezing through narrow passages .",
    "we describe a simple local algorithm that , starting from an arbitrary connected configuration , creates a single , one - module - thick chain .",
    "initially , all modules are in the sleep mode .",
    "the other possible modes are : search , final , and seed .",
    "a module is arbitrarily picked to serve as the initial seed to start the chain .",
    "this initial seed can be determined centrally , or each module in sleep mode can be given a small probability to become a seed at each step .",
    "this module will pick a direction of growth and emit a scent to start attracting other modules toward it .",
    "when a module moves next to the seed module and is connected to it in the chosen direction , the chain grows by one module and that new module then becomes the new seed that will further grow the chain .",
    "the control rules for each module are :    * if in sleep mode , if a scent is detected , go to search mode . * if in search mode , propagate scent and move along scent gradient . * if in seed mode , emit scent , and if a module has appeared in the direction of growth , set that module to seed mode , and go to final mode . * if in final mode",
    ", propagate scent .    these rules amount to a simple finite - state machine for each module , shown in figure  [ chain flowchart ] .",
    "an example configuration of a group of modules following these rules is given in figure  [ chain ] .",
    "as the algorithm continues , the modules form a single chain .      a variety of applications for modular robots can benefit from a branching structure with `` limbs '' at several levels . in such a hierarchical structure , each level has varying degrees of precision , range of motion and strength .",
    "for example , one level of branching gives a structure that can be used as an artificial hand or as a `` spider '' for locomotion . adding extra levels of branching results in `` fingers '' or `` toes '' with lower strength and range of motion but higher level of precision .",
    "human limbs exhibit only two levels of branching , but a robot could grow as many levels as needed to achieve increasingly complex manipulation and locomotion tasks  @xcite .",
    "the algorithm is as follows .",
    "all modules are initially in the sleep mode .",
    "growth is initiated when a module randomly decides to switch to the node mode . in this mode",
    "it attracts other modules ( emits a scent ) and randomly chooses which ones will become seeds .",
    "when it has spawned a certain number of seeds , the node becomes inactive .",
    "this experiment uses two scents : a `` regular '' scent is used to grow the structure ( as in the chain example ) , and a second `` node '' scent is used by modules to determine how far the nearest node is .",
    "if this distance is too big , a module can decide to become a node .",
    "the rules are :    * if in sleep mode , if regular scent is detected , go to search mode . * if in search mode , propagate both scents and move along the regular scent gradient . * if in seed mode , propagate the node scent , and emit a regular scent ; if there is a neighboring module in the direction of growth of the branch , set that module to be a seed , and go to final mode . * if in final mode",
    ", propagate both scents ; if the node scent is weak ( i.e. , has a value greater than some threshold @xmath3 ) , go to node mode . *",
    "if in node mode , emit both scents , spawn seeds in random directions , until a certain count is reached @xmath4 , then go to inode mode . * if in inode mode , emit a node scent and propagate the regular scent .",
    "an example structure resulting from these rules is shown in figure  [ branching ] .",
    "the threshold @xmath3 determines the distance between nodes , i.e. , how far modules continue building one branch before starting new branches .",
    "the count @xmath4 determines the branching ratio throughout the structure .",
    "one important task for reconfigurable robots is to adjust themselves in response to environmental forces .",
    "for instance , a collection of such robots supporting a weight on a set of `` legs '' should be able to change the location and density of the legs when the weight shifts . as a simple example of this task",
    ", we examined the formation of legs to support a flat structure with an additional imposed force whose location could change over time . for simplicity , we neglect the weights of the modules themselves , i.e. , we assume their weights are small compared to the weight of the additional objects they are supporting on top of the flat structure or `` table '' .    for this behavior , we form some of the modules into a `` board '' ( the top of the table ) which supports the additional weight .",
    "these modules , which never move , are of two types . the first , always in fixed mode , only transmit scent .",
    "the second type are `` root '' modules which are uniformly spaced over the board and can communicate with each other , e.g. , through signals sent locally through the fixed modules . we assume these signals propagate much faster than the physical movements of the modules .",
    "the roots are grouped into regions on the board ( in the experiments reported here , we use two regions : the two halves of the board ) .",
    "we assume modules are equipped with a force sensor that allows them to measure the weight they are supporting .",
    "furthermore , we assume the modules can either determine the direction gravity acts or this direction toward the ground is prespecified when creating the roots in the board .",
    "roots within a region monitor the total weight supported in that region by communicating their sensor readings .",
    "the root modules on the board can be in one of three modes : root , iroot or aroot . initially the root modules are in iroot mode , which monitor the weight they are supporting and may start growing a leg .",
    "aroot mode emits a scent to attract other modules to start growing a leg , in much the same way as growing a single chain . once the leg starts growing , the root shifts to root mode , where it remains until the weight it supports drops below a specified threshold in which case it probabilistically causes its leg to disband .",
    "thus the root modules grow or disband legs probabilistically according to how much weight is experienced in their part of the table .",
    "we refer to root modules in root or aroot mode as `` active '' roots .",
    "the fixed and root modules are set at the beginning and do nt change throughout the experiment .",
    "all other modules are initially in sleep mode .",
    "the structure first grows legs , then disbands some of them and creates new ones according to shifts in weight ( controlled interactively by the user of the simulator ) .",
    "the rules for this behavior for the root modules are :    * if in iroot mode , if average weight per active root in its region is above a certain threshold @xmath5 , with a small probability @xmath6 : go to aroot mode . * if in aroot mode , emit scent . *",
    "if in root mode , if average weight per active root in its region is below a certain threshold @xmath7 , with a small probability @xmath8 : set all final and seed neighbors to disband mode , go to iroot mode .",
    "although similar adaptive behaviors can occur with a range of values for the thresholds , one important issue is to prevent the disbanding of a single leg supporting a minimal weight in a region . in our experiments ,",
    "this minimal value is one unit of weight , so we should have @xmath9 .",
    "the rules for the remaining modules are :    * if in sleep mode , if a scent is detected , go to search mode . * if in search mode , propagate scent and move along its gradient ; if there is a neighboring seed or aroot module and location is towards the ground with respect to this neighbor * * if this neighbor is a seed , set it to final mode , otherwise set it to root mode * * go to seed mode * if in seed mode , if touching the ground , go to final mode . * if in fixed or final mode , transmit scent . *",
    "if in disband mode , set all final and seed neighbors to disband mode , go to search mode .",
    "figure  [ weight shift ] illustrates how , once created , a supporting structure can adapt in response to changes in external forces .",
    "the behavior dynamically adapts the location and number of its legs to accommodate changes in the supported weight . in this example , we suppose weight @xmath10 is applied to the first half of the table and @xmath11 applied to the second half , with an arbitrary choice of units giving @xmath12 . in each half of the table , active roots communicate their sensory information to determine how much of this weight is supported by those in their half of the table .",
    "the result is the average weight supported by each active root in each half of the table , i.e. , @xmath13 for the first half ( where @xmath14 is the number of active roots in the first half ) , and similarly for @xmath15 as the average weight supported per active root on the second half .",
    "the probabilistic growing and disbanding of legs avoids possible oscillations in root behavior : if deterministic , when the weight shifts , many roots could decide to grow legs , then disband them on the next step , thus oscillating between the two without doing anything useful .",
    "such oscillations are common for systems with synchronous updates  @xcite : randomization is a simple technique to prevent spurious synchronization of agent activity .    after a root @xmath16 decides to grow a leg , some time is required for the modules to move to that root and produce the leg . however , because a root s decision to grow a leg is based on the weight in its region averaged over the active roots , once root @xmath16 starts the process of growing a leg by emitting scent , the average weight per active root drops immediately and proportionately with the number of supporting modules .",
    "this change , rapidly communicated among the roots , gives feedback to other roots in the region and prevents other legs from growing nearby unnecessarily . in practice",
    ", this implies that the weight must be shifted slowly : the system will not be able to respond quickly to sudden changes .",
    "an indication of how fast the modules react to external conditions is the number of steps after a weight shift until a new stable configuration is achieved . in the examples shown here ,",
    "this time is on the order of 200 cycles .",
    "this includes the time needed to disband some legs and construct some new ones . although the modules know about the shifted weight immediately , some time is needed until some roots decide to disband their legs , and some inactive roots decide to grow legs .",
    "these decisions are probabilistic : each root decides to change its state ( go from active to inactive or vice versa ) with a probability we chose to be on the order of @xmath17 where @xmath18 is the total number of roots in the structure .",
    "thus it is unlikely that many roots will decide to switch state at the same time step , thereby avoiding unstable or oscillating system behavior .",
    "we depend on the rough assumption that decisions to disband or grow legs have immediate effect on the strain felt by the modules in the system .",
    "this assumption is questionable for real - world applications , especially with larger structures .",
    "however , it provides a good starting point . in real - world applications",
    "the trade - off will be between fast response with a risk of oscillating behavior and a slow , but stable response to external conditions .",
    "the previous example showed how simple agent - based control allows the robot to respond to changes in environmental stress . in practice",
    ", such robots will be used to perform a globally specified task , leading to the question of how high - level , imprecise specifications can be combined with low - level behaviors .    as an example of such a task , we examined the behaviors required for proteo to reach out and grasp an object of unknown shape and size and with only roughly specified location by `` growing '' around it . in this behavior",
    "the only modules that do substantial work are the modules in search mode .",
    "initially all modules are in sleep mode , except for eight modules that are set to seed mode ( to create eight branches to grow toward the object ) .",
    "two types of seeds are used : seed modules , and touchseed modules .",
    "initially growth is caused by seed modules , but once the object is reached , seeds transfer to the touchseed state .",
    "the two types of seeds allow modules in search mode to know whether to grow in the direction of the object ( to reach it ) or to grow the structure around the object ( to grasp it ) .",
    "the system is initially given the approximate direction the object is in , however , it has no knowledge of the exact direction of the object , how far it is , or what shape and size it has .",
    "the modules are assumed to have contact sensors to detect when the object has been reached .",
    "the rules are simple :    * if in sleep mode , if scent is detected , go to search mode . * if in search mode , propagate scent , and move along the scent gradient ; if a seed has been found : if touching the object , then set seed to touch mode , and go to touchseed mode ; otherwise , if not touching the object , and seed is in seed mode , find a spot next to the seed in the direction of the object , set seed to final mode , and go to seed mode ; otherwise , make a random move . * if in touchseed or seed mode , emit scent . * if in touch or final mode , propagate scent .",
    "this example incorporates a global goal , specified by the general direction of the object , with local adjustments by the agents to the actual object surface .",
    "it thus illustrates an important decomposition of the control task into global specification in terms of general parameters combined with low - level control based on the actual environment of the modules .",
    "this decomposition considerably simplifies the overall motion planning since the global specification need not have access to all the details of the environment , knowledge of which modules might have failed , etc .    these two examples could be combined : including stress sensors could also allow the modules to adjust for the object weight if it is to be picked up rather than just grasped .",
    "local control has the danger of getting trapped in locally `` comfortable '' configurations that are not globally suitable .",
    "our agent approach provides good solutions to this problem both for individual modules and the system as a whole .",
    "a module searches for a seed by moving along a gradient of least - descent . in proteo",
    ", modules can only move by `` rolling '' over the outside surface of the structure , while scents can propagate through the inside of the structure .",
    "usually this is not a problem : all modules searching for seeds are constantly moving preventing any fixed local extremum .",
    "however , a problem may arise when some modules remain fixed .",
    "modules searching for seeds may not be able to follow the internal scent and get through to seeds on the other side because fixed modules effectively block the way .",
    "there are two possible solutions : one is to alter the design to allow modules to pass through other modules ( by squeezing through ) , and the other is to use only a _ surface scent _ , which the modules can follow easily .    at a higher level , the whole system is performing a search for a configuration that suits a given criteria .",
    "if the reconfiguration rules are not set up carefully , however , the system may never converge to a suitable state .",
    "for instance , if for each module we only specify preferred immediate neighbor configurations , the most likely result is that surface modules will settle quickly and comfortably , preventing modules on the inside of the structure from moving .",
    "thus , something must guide the overall reconfiguration .",
    "we use the concepts of _ growth _ and _ seeds _ to drive the reconfiguration of the whole system in a focused way .",
    "we found the structures grown are generally stable . during growth",
    ", stability depends mostly on the ratio of scent propagation speed to module speed .",
    "since modules generally move slower than they can transmit scent , the response to scents does not introduce oscillating behavior  @xcite or irregular growth , and the intermediate configurations are well - balanced at all times .",
    "we have presented an agent - based approach to self - reconfiguration for modular robots that results in the creation of `` emergent '' structures with the desired functionality .",
    "we use purely local , simple rules and limited sensing . to `` grow '' stable structures ,",
    "modules are guided by local attractors ( seeds ) and global gradients ( scents ) toward good configurations .",
    "different structures result by varying the number and combination of seeds and scents in the algorithm .",
    "because the method has a strong random component , the specific shape of the resulting structures is non - deterministic .",
    "however , the resulting structure has the desired functionality .",
    "this is particularly well - suited to tasks with a strong element of uncertainty in the precise nature of the task or in the environment , in contrast to other reconfiguration algorithms .",
    "we examined two tasks for which the reconfigurable nature of the robots is well suited : adjusting structures to environmental stresses and grasping an object whose detailed shape is not known .",
    "the global behavior of the algorithms we developed for these tasks was determined through simulations of the proteo robot .",
    "the control primitives can easily be scaled up to a larger number of modules , and down in the size of individual modules , and are general enough to fit most modular robot designs .",
    "this approach could be used in conjunction with other self - reconfiguration or control methods , as part of an overall hierarchical control scheme to handle increasingly complex tasks . lately , an important research effort is applying genetic algorithms to the control of autonomous systems  @xcite or fpga programming  @xcite .",
    "the techniques described in this paper are amenable to evolutionary approaches , and could benefit from these results . specifically , a population of agent programs combining the control primitives in different ways could be tested against variations in the desired task to evolve better behaviors according to various performance metrics  @xcite . in the context of the primitives presented here , genetic techniques could identify methods to modulate the various parameters in our methods , e.g. , the probabilty to form a seed for new growth .",
    "finally , improvements in hardware design to augment current module capabilities could greatly aid reconfiguration .",
    "scaling down the size of individual modules using micromachines ( mems )  @xcite or molecular assemblies could benefit actuation .",
    "for instance , protein motors can carry weights orders of magnitude larger than their own , at speeds that are impressive given their size  @xcite .",
    "this means a module could carry several others around as it moves , something current proteo modules can not do .",
    "in addition , designs that allow individual modules to change their shape and size could also enhance overall performance .",
    "these improvements , however , would require truly interdisciplinary expertise in biology , materials , and electronics and remain , for the most part , a formidable challenge .",
    "nevertheless , as such robotic systems are developed , multiagent control approaches are likely to help them achieve robust behaviors .            forrest  h. bennett iii and eleanor  g. rieffel . design of decentralized controllers for self - reconfigurable modular robots using genetic programming . in _ proc . of the 2nd nasa / dod workshop on evolvable hardware _ , july 2000 .",
    "arancha casal and mark yim .",
    "self - reconfiguration planning for a class of modular robots . in _",
    "spie symposium on intelligent systems and advanced manufacturing : sensor fusion and decentralized control in robotic systems _ , pages 246257 , 1999 .",
    "j.  r. rush , a.  p. fraser , and d.  p. barnes . evolving cooperation in autonomous robotic systems . in _ proceedings of the ieee international conference on control",
    "_ , london , march 21 - 24 1994 .",
    "institute of electrical engineers ."
  ],
  "abstract_text": [
    "<S> we demonstrate how multiagent systems provide useful control techniques for modular self - reconfigurable ( metamorphic ) robots . </S>",
    "<S> such robots consist of many modules that can move relative to each other , thereby changing the overall shape of the robot to suit different tasks . </S>",
    "<S> multiagent control is particularly well - suited for tasks involving uncertain and changing environments . </S>",
    "<S> we illustrate this approach through simulation experiments of proteo , a metamorphic robot system currently under development . </S>"
  ]
}
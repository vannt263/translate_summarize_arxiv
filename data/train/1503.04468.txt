{
  "article_text": [
    "network design problems are among the most interesting models in combinatorial optimization . in the last years",
    "researchers have devoted a lot of attention to a particular member within this family , namely the hub location problem , that combines network design and location aspects of supply chain models , see the surveys @xcite .",
    "the main advantage of using hubs in distribution problems is that they allow to consolidate shipments in order to reduce transportation costs by applying economies of scale ; which are naturally incorporated to the models through discount factors .",
    "hub location problems have been studied from different perspectives giving rise to a number of papers considering different criteria to be optimized : the minimization of the overall transportation cost ( sum ) ( see @xcite ) , the minimization of the largest transportation cost or the coverage cost ( @xcite ) , et cetera .    apart from the choice of the optimization criterion , another crucial aspect in the literature on hub location , and in general on any location problem , is the assumption of capacity constraints .",
    "one can recognize that although this assumption implies more realistic models , the difficulty to solve them also increases in orders of magnitude with respect to their uncapacitated counterpart .",
    "in many cases new formulations are needed and a more specialized analysis is often required to solve even smaller sizes than those previously addressed for the uncapacitated versions of the problems .",
    "for this reason , capacitated versions of hub location problems have attracted the interest of locators in the last years , see @xcite . in the same line ,",
    "we also mention some other references related with congestion at hubs , as congestion acts as a limit on capacity , see @xcite .    an interesting version of hub location model is the capacitated hub location problem with single allocation ( csa - hlp ) , see @xcite . in this context",
    ", single allocation means that incoming and outgoing flow of each site must be shipped via the same hub .",
    "in contrast to single allocation models , where binary variables are required in the allocation phase , multiple allocation allows different delivery patterns which in turns implies the use of continuous variables simplifying the problems .",
    "the csa - hlp model incorporates capacity constraints on the incoming flow at the hubs coming from origin sites or even simpler , on the number of non - hub nodes assigned to each hub .",
    "the inclusion of capacity constraints make these models challenging from a theoretical point of view . regarding its applicability we cite one example described in ernst at al .",
    "@xcite based on a postal delivery application , where a set of @xmath0 postal districts ( corresponding to postcode districts represented by nodes ) exchange daily mail .",
    "the mail between all the pairs of nodes must be routed via one or at most two mail consolidation centers ( hubs ) . in order to meet time constraints ,",
    "only a limited amount of mail could be sorted at each sorting center ( mail is just sorted once , when it arrives to the first hub from origin sites ) . hence , there are capacity restrictions on the incoming mail that must be sorted .",
    "the problem requires to choose the number and location of hubs , as well as to determine the distribution pattern of the mail .",
    "the csa - hlp has received less attention in the literature than its uncapacitated counterpart .",
    "campbell @xcite presented the first integer mathematical programming formulation for the capacitated hub location problem .",
    "this formulation was strenghthened by skorin - kapov et al .",
    "ernst and krishnamoorthy @xcite , proposed a new model involving three - index continuous variables and developed a solution approach based on simulated annealing where the bounds obtained are embedded in a branch - and - bound procedure devised for solving the problem optimally .",
    "recently , correia et al . @xcite",
    "have shown that this formulation may be incomplete and an additional set of inequalities is proposed to assure the validity of the model in all situations .",
    "a new formulation using only two indices variables was proposed by labb et al .",
    "@xcite , where a polyhedral analysis and new valid inequalities were addressed .",
    "although this formulation has only a quadratic number of variables , it has an exponential number of constraints , and to solve it the authors developed a branch - and - cut algorithm based on their polyhedral analysis .",
    "contreras et al .",
    "@xcite presented for the same problem a lagrangean relaxation enhanced with reduction tests that allows the computation of tight upper and lower bounds for a large set of instances .    in two recent papers , @xcite , a new model of hub location , namely the single allocation ordered median hub location problem ( sa - omhlp ) , has been introduced and analyzed .",
    "this problem can be seen as a powerful tool from a modeling point of view since it allows a common framework to represent many of the previously considered criteria in the literature of hub location .",
    "moreover , this approach is a natural way to represent the differentiation of the roles played by the different parties ( origins , hubs and destinations ) in logistics networks @xcite .",
    "this model does not assume , in advance , any particular structure on the network ( @xcite ) . instead of that this structure",
    "is derived from the choice of the parameters defining the objective function .",
    "apart from the above mentioned characteristics , ordered median objectives are also useful to obtain robust solutions in hub problems by applying @xmath1-centrum , trimmed - mean or anti - trimmed - mean criteria .",
    "it is worth mentioning that although it is called single allocation , its meaning slightly differs from the classical interpretation in hub location where each site is allocated to just one hub and all the incoming and outgoing flow to - from this site is shipped via the same link ( the one joining this site and its allocated hub ) . in this model",
    ", single allocation means that all the outgoing flow is delivered through the same hub , but the incoming flow can come from different hubs .",
    "actually , this is a mixed model and basically the same situation described above , about postal deliveries , naturally fits in this framework assuming that letters from the same origin should be sorted , with respect to their destinations , in the same place and from there they are delivered via their cheapest routes .",
    "observe that in this scheme it is also natural that incoming flow in a final destination comes from different hubs .",
    "the sa - omhlp distinguishes among segmented origin - destination deliveries giving different scaling factors to the origin - hub , hub - hub and hub - destination links .",
    "the cost of each origin - first hub link is scaled by a factor that depends on the position of this cost in the ordered sequence of costs from each origin to its corresponding first hub @xcite . moreover ,",
    "the overall interhub cost and hub - destination cost are multiplied by other economy of scale factors .",
    "the goal is to minimize the overall shipping cost under the above weighting scheme .",
    "the reader may note that the first type of scaling factors mentioned above adds a `` sorting '' problem to the underlying hub location model , making its formulation and solution much more challenging .",
    "this model and two different formulations were introduced in @xcite while a specialized b&b&cut algorithm was developed in @xcite .",
    "none of those formulations could handle capacities since the computation burden of the problems were highly demanding .",
    "thus , the sa - omhlp with capacity constraints , i.e. capacitated single allocation ordered median hub location problem ( csa - omhlp ) is currently an open line of research for further analysis .    in this paper",
    ", we analyze in depth the csa - omhlp trying to obtain a better knowledge and alternative ways to solve it .",
    "thus , the contributions of this paper are threefold .",
    "first , it combines for the first time three challenging elements in location analysis : hub facilities , capacities and ordered median objectives ; proposing a promising ip formulation which remarkably reduces the number of decision variables .",
    "second , this paper strengthens that formulation with variable fixing and some families of valid inequalities that have not been considered before . finally , despite the difficulty of considering simultaneously capacitated models , hubs and ordering , the techniques proposed in this paper allow to solve instances of similar sizes to those already considered in the literature for simpler models ( uncapacitated and multiple allocation @xcite ) .",
    "the paper is organized as follows : in section [ sec : model ] we will provide , first , a mip formulation for the capacitated version of the problem extending the one in @xcite and then another formulation in the spirit of @xcite where the number of variables has been considerably reduced with respect to the previous one .",
    "section [ sec : strenform ] strengthens the latter formulations with variable fixing and several new families of valid inequalities . in section",
    "[ sec : results ] , the effectiveness of the proposed methodology is shown with an extensive computational experience comparing the performance of the two formulations and the strengthening proposed along the paper .",
    "finally , the paper ends with some conclusions .",
    "the goal of this paper is to analyze the csa - omhlp . for this reason ,",
    "we elaborate from the most promising formulations of the non - capacitated version of that problem , namely the so called radius ( covering ) formulations , see @xcite . in order",
    "to be self - contained and for the sake of readability , we include next a concise description of these formulations in their application to the capacitated problem .",
    "let @xmath2 be a set of @xmath0 client sites , where each site is collecting or gathering some commodity that must be sent to the remaining ones .",
    "it is assumed , without loss of generality , that the set of candidate sites for establishing hubs is also a. let @xmath3 be the amount of commodity to be supplied from the @xmath4-th to the @xmath5-th site for all @xmath6 , and let @xmath7 be the total amount of commodity to be sent from the @xmath4-th site .",
    "let @xmath8 denote the unit cost of sending commodity from site @xmath4 to site @xmath5 ( not necessarily satisfying the triangular inequality ) .",
    "it is assumed free self - service , i.e. , @xmath9 , @xmath10 .",
    "let @xmath11 be the number of hubs to be located and let @xmath12 be the capacity of a hub located at site @xmath4 , with @xmath13 .",
    "a solution for the problem is a set of sites @xmath14 with @xmath15 and enough capacity to cover the flow coming from the sites ; plus a set of links connecting pairs ( flow patterns ) of sites @xmath4 , @xmath5 for all @xmath6 .",
    "moreover , it is assumed that the flow pattern between each pair of sites traverses at least one and no more than two hubs from @xmath16 .    as it was mentioned in section [ sec : intro ] , the main advantage of using hubs is to reduce costs by applying economies of scale to consolidated flows in some part of the network . in this model",
    "the transportation cost is decoupled into the three differentiated possible links : origin site - first hub , hub - to - hub , and hubs - final destination .",
    "these transportation costs are scaled in a different way .",
    "the model weights origin site - first hub transportation costs by using parameters @xmath17 , with @xmath18 , depending on their ordered rank values .",
    "this is , let @xmath19 be the cost of the overall flow sent from the origin site @xmath4 if it were delivered via the first hub @xmath1 , i.e. @xmath20 next , if @xmath19 were ranked in the @xmath21-th position among all these costs , then this term would be scaled by @xmath22 in the objective function . for the two remaining links there is a compensation factor @xmath23 for the deliveries between hubs , and another one @xmath24 , @xmath25 , for the deliveries between hubs and final destination sites .",
    "these parameters may imply that , even in the case where the costs satisfy the triangle inequality , using a second hub results in a cheaper connection than going directly from the first hub to the final destination .",
    "actually , it represents the application of the economy of scale by the consolidation of flow in the hubs .    in",
    "the following we present a first valid formulation of the csa - omhlp , based on covering variables ( the reader is referred to @xcite for further details ) . sorting the different delivery costs values @xmath26 for @xmath27 , in increasing order",
    ", we get the ordered cost sequence : @xmath28 where @xmath29 is the number of different elements of the above cost sequence . for convenience we consider @xmath30 .    for @xmath31 and @xmath32 , we define the following set of covering variables , @xmath33                    0 , & \\mbox{otherwise . }",
    "\\end{array } \\right.\\ ] ] clearly , the @xmath21-th smallest allocation cost is equal to @xmath34 if and only if @xmath35 and @xmath36 .",
    "+ in addition , this formulation uses two more sets of variables : @xmath37 with @xmath38 since we assume that any origin is allocated to itself if it is a hub , the above definition implies that site @xmath1 is opened as a hub if the corresponding variable @xmath39 takes the value 1 .",
    "the formulation of the model is : @xmath40    the objective function accounts for the weighted sum of the three components of the shipping cost , namely origin - first hub , hub - hub and hub - destination .",
    "the origin - hub costs are accounted after assigning the lambda parameters , i.e. @xmath41 in addition , the second and third blocks of delivery costs , i.e. the hub - hub and hub - destination cost , scaled with the @xmath42 and @xmath43 parameters respectively , can be stated as : @xmath44    the constraints of the model are described in @xcite with the only exception of ( [ uuvc9 ] ) , that is the capacity constraint on the hubs , in spite of that and for the sake of completeness we include below a brief description of them . constraints ( [ ccov1 ] ) ensure that the flow from the origin site @xmath4 is associated with a unique first hub",
    ". constraints ( [ ccov2 ] ) ensure that any origin only can be allocated to an open hub . constraint ( [ ccov10 ] ) fixes the number of hubs to be located . constraints ( [ ccov5 ] ) are flow conservation constraints , such that the flow that enters any hub @xmath1 with final destination @xmath5 is the same that the flow that leaves hub @xmath1 with destination @xmath5",
    ". constraints ( [ ccov4 ] ) ensure that if the final destination site is a hub , then the flow goes at most through one additional hub .",
    "these constraints are redundant whenever the cost structure satisfies the triangular inequality , however they are useful in reducing solution times ( see @xcite ) . constraints ( [ ccov6 ] ) and ( [ ccov7 ] ) establish again that the intermediate nodes in any origin - destination path should be open hubs .",
    "constraints establish the capacity constraints of the hubs . observe that this family of constraints make redundant the family ( [ ccov2 ] ) , but we have kept it because it reduces the computational times .",
    "constraints link sorting and covering variables .",
    "they state that the number of allocations with a cost at least @xmath34 must be equal to the number of sites that support shipping costs to the first hub greater than or equal to @xmath34 .",
    "finally , constraints are a group of sorting conditions on the variables @xmath45",
    ".    the reader may note that this formulation is a natural extension for the capacitated version of the radius formulation already considered for the uncapacitated ordered median hub location problem in @xcite .",
    "however , although this formulation is enough to specify the csa - omhlp , we have found that for solving medium sized problems it produces very large mip models , which are difficult to solve with standard mip solvers ( cplex , xpress ; gurobi ... ) .",
    "therefore , some alternatives should be investigated .",
    "one way to improve the performance of the above formulation is to take advantage of some features of that model to reduce the number of variables . in this case",
    ", one can succeed reducing the number of @xmath46 variables .",
    "the logic of the above formulation can be further strengthen for important particular cases of the discrete ordered median hub location problem .",
    "in the following , we show a reformulation that is based on taking advantage of sequences of repetitions in the @xmath47-vector .",
    "( see @xcite for similar reformulations applied to other location problems . )",
    "one can realize that for @xmath47-vectors with sequences of repetitions i.e .",
    "the center , @xmath1-centrum , trimmed means or median among others , many variables used in formulation @xmath48 are not necessary ( since they are multiplied by zero in the objective function ) , and some others can be glued together ( since they have the same coefficient in the objective function ) .",
    "moreover , under the assumption of the free self - service , and that any origin is allocated to itself if it is a hub , we conclude that the @xmath49 smallest transportation costs from the origin to the first hubs are @xmath50 , i.e. the first @xmath49 components of the @xmath47-vector are multiplied by 0 .",
    "therefore , in order to simplify the problem one can disregard the @xmath49 first components of the @xmath47-vector .",
    "let @xmath51 .    in order to give a formulation for the csa - omhlp taking advantage of these facts , we need to introduce some additional notation .",
    "let @xmath52 be the number of blocks of consecutive equal non - null elements in @xmath53 and define the vectors :    1 .",
    "@xmath54 , being @xmath55 , @xmath56 the value of the elements in the @xmath21-th block of repeated elements in @xmath53 .",
    "@xmath57 , being @xmath58 with @xmath56 , the number of zero entries between the @xmath59-th and @xmath21-th blocks of positive elements in @xmath53 and @xmath60 the number of zeros , if any , after the @xmath52-th block of non - null elements in @xmath53 . for notation purposes we define @xmath61 .",
    "3 .   @xmath62 , being @xmath63 , @xmath56 the number of elements in the @xmath21-th block of non - null elements in @xmath53 . for the sake of compactness , let @xmath64 .    next , let denote @xmath65 , @xmath66 and recall that @xmath67 .",
    "moreover , for all @xmath56 and @xmath68 , let us define the following set of decision variables : @xmath69    with the above notation the formulation of csa - omhlp is : @xmath70 , \\quad \\forall   i=1\\ldots , i,\\quad h=1,\\ldots , g \\\\ \\label{uvc24 } & & x_{jk } \\in \\{0,1\\ } ,   s_{k \\ell m } \\ge 0 , \\quad \\forall j , k , \\ell , m\\in a.\\end{aligned}\\ ] ]    the objective function is a reformulation of substituting the @xmath71 variables by the new @xmath46 , @xmath72 variables and the vector @xmath73 , taking advantage of the @xmath47 vector properties .",
    "constraints ensure that the number of sites that support a shipping cost to the first hub greater than or equal to @xmath34 is either equal to the number of allocations with a cost at least @xmath34 whenever @xmath74 or less than or equal to @xmath60 otherwise .",
    "constraints are sorting constraints on the variables @xmath46 similar to constraints , and constraints - provide upper and lower bounds on the variables @xmath72 depending on the values of variables @xmath46 .",
    "the main difference between @xmath48 and @xmath75 is that all @xmath45 variables associated with blocks of zero @xmath47-values are removed , and those associated with each block of non - null @xmath47 values are replaced by @xmath76 variables .",
    "therefore , overall we reduce the number of variables by @xmath77 .    note that in formulation @xmath48 , the family of constraints that links covering variables ( variables @xmath71 ) and the allocation variables ( variables @xmath78 ) , i.e. , is given with equalities .",
    "this fact implies that the actual dimension of the feasible region in the space of @xmath71 and @xmath78 variables is smaller than the one that we were currently working on .",
    "this is exploited in the new formulation .",
    "indeed , we reduce the number of variables used in the sorting phase replacing @xmath71 by @xmath46 and @xmath72 . therefore , the dimension of the feasible region in the space of @xmath46 , @xmath72 , @xmath78 variables has smaller dimension .",
    "in addition , the constraints that link sorting and design variables , namely , are given as inequalities .",
    "this new representation , although valid for the problem , induces some loss of information in that it does not allow us to take full control of the exact number of allocations at some specific cost .",
    "this does not affect the resolution process but influences the derivation of valid inequalities .    finally , for those cases where @xmath79 we observe that @xmath80 .",
    "this set of constraints whenever valid , was added to reinforce the formulation .",
    "[ primerejemplo ] to illustrate how the @xmath75 versus @xmath48 formulations work , we consider the following data .",
    "let @xmath81 be a set of sites and assume that we are interested in locating @xmath82 hubs .",
    "let the cost and flow matrices be as follows :    @xmath83    therefore , @xmath84 , the sorted vector of @xmath85 , is in our case + @xmath86.$ ] hence , @xmath87 . let @xmath88 , @xmath89 , @xmath90 , and the capacity constraints vector @xmath91 .",
    "the optimal solution opens hubs @xmath92 and @xmath93 .",
    "the allocation of origin sites to first hub is given by the following values of the variables @xmath78 ( see figure [ fig : ex1.1 ] ) : @xmath94 analogously , the allocation of first hubs to final destinations are given by the values of the non null variables @xmath95 .",
    "thus , the flows considering as first hubs @xmath92 and @xmath93 are ( see figure [ fig : ex1.1 ] for a graphical representation of the delivery paths ) : @xmath96 @xmath97    ( 0,2.5)(8.,5 ) ( -2,2)2b(0 , 0.75)@xmath98 ( -2,7)1b(0 , .75)@xmath99 ( 4,7)5b(0 , .75)@xmath100 ( 4,2)3b(0 , .75)@xmath101 ( 9,2)2(0 , 0.75)@xmath98 ( 9,7)1(0 , .75)@xmath99 ( 15,7)5(0 , .75)@xmath100 ( 15,2)3(0 , .75)@xmath101 ( 1,3)4b(0 , .75)@xmath92 ( 12,3)4(0 , .75)@xmath92 ( 1,6)6b(0 , .75)@xmath93 ( 12,6)6(0 , .75)@xmath93    ( 11.75,3.6)(11.75,5.4)(11.75,5.4)(9.4,6.5 ) ( 12.25,3.6)(12.25,5.4)(12.25,5.4)(14.6,6.5 ) ( 11.5,5.4)(11.5,3.5)(11.5,3.5)(9.45,2.5 )    moreover , the covering variables @xmath45 are given below . due to their structure , we only report for each @xmath21 the last one and first zero occurrences since they characterize the remaining values .",
    "@xmath102    the first two assignments are done at a cost @xmath103 , corresponding to the two hubs ( @xmath82 ) .",
    "the next assignment has been done at a cost @xmath104 , since @xmath105 and @xmath106 , and so on .",
    "the rest of assignments costs are then @xmath107 , @xmath108 and @xmath109 .",
    "hence , the overall cost of this solution is @xmath110 in addition , to illustrate how the formulation @xmath75 is related with @xmath48 , we also include the solution of the covering variables @xmath111 and @xmath112 : @xmath113    @xmath114 =    c    lrl & &     + (    c 0 + 1 + 0 + 0 + 1 + 1    )    c    lrl & &     +    ll }    rl _ _ & + _ _    .",
    "& p + }    rl & +    . & _ 1 + }    rl & +    . &",
    "_ 1 }    r v_1    .",
    "c    lrl & &     +    ll & + & + & + & + u_1 & + & +    @xmath115    note that we have only one block of repeated non - null elements of the @xmath53-vector , so @xmath116 .",
    "( see the right part of figure [ t : ejemplo ] . )",
    "the number of zero entries between two blocks is @xmath117 , and the number of elements in the @xmath99-st block of non - null elements is @xmath118 .",
    "furthermore , @xmath119 is the repeated value in the @xmath99-st block .",
    "@xmath115    c    p.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5 cm & @xmath120 & @xmath121 & @xmath122 & @xmath123 & @xmath124&@xmath125&@xmath126&@xmath127&@xmath128&@xmath129&@xmath130&@xmath131&@xmath132 & @xmath123 & @xmath133&@xmath134     + u_1,h= (    p.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.3 cm @xmath99 & @xmath99&@xmath99 &  & @xmath99&@xmath99&@xmath99&@xmath99&@xmath99&@xmath99&@xmath99&@xmath99&@xmath50 &  & @xmath50&@xmath50    ) + v_1,h= (    p.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.5cmp.3 cm @xmath98 & @xmath98&@xmath98 &  & @xmath98&@xmath99&@xmath99&@xmath99&@xmath50&@xmath50&@xmath50&@xmath50&@xmath50 &  & @xmath50&@xmath50    ) +    @xmath115 the variable @xmath135 points out to the row @xmath136 of the original variable @xmath137 . whereas the variable @xmath138 accounts for the number of assignments between the positions @xmath139 and @xmath140 of @xmath137 that are at least @xmath34 .",
    "( see figure [ t : ejemplo ] . )    from @xmath137 , we know that the @xmath100-th assignment cost is @xmath141 and the @xmath93-th assignment cost is @xmath142 .",
    "for this reason @xmath138 is equal to @xmath98 up to column @xmath143 , this is the number of assignment costs greater than @xmath141 .",
    "being this number equal to 1 from @xmath144 to @xmath145 , and zero for the remaining columns .    applying this formulation ,",
    "the overall reduction in the number of variables is @xmath146 .",
    "the rest of variables @xmath78 and @xmath95 remain the same , and again the overall cost of this solution is @xmath147",
    "[ ssec : vf ] next , we describe some preprocessing procedures that we have applied to reduce further the size of formulation @xmath75 . we present a number of variable fixing possibilities for the set of variables @xmath46 and @xmath72 which are useful in the overall solution process .",
    "the variable fixing procedures developed in this section are based on ideas used in @xcite and taking advantage of the capacity constraints .",
    "indeed , we are adding the reinforced effective capacity constraints , as well as some surrogated version of constraints since in this aggregated form they give better running times .",
    "the preprocessing phase developed in this paper also provides new upper and lower bounds on the @xmath72 variables .",
    "the percentage of variable reduction obtained by these procedures can be found in tables [ tabla1 ] and [ tabla2 ] ( column named as fixed ) .    before describing these procedures for fixing variables ,",
    "the following simple arguments allows us to fix some variables :    1 .",
    "first , @xmath9 @xmath10 , i.e. , @xmath148 .",
    "moreover , every origin where it has been located a hub will be allocated to itself as a first hub .",
    "second , @xmath149 if and only if @xmath150 , i.e. , any non - hub origin is allocated to a first hub at a cost of at least @xmath151 .",
    "therefore , since in this formulation the first @xmath49-allocations are considered only implicitly , we can fix @xmath152 , @xmath153 as well as @xmath154 , @xmath155 , @xmath156      due to the definition of the variables in formulation @xmath75 , one can expect that @xmath157 whenever @xmath21 is large and @xmath158 is small to medium size because this would mean that the @xmath159-th sorted allocation cost would not have been done at cost less than @xmath34 .",
    "the reader should observe that an analogous strategy applies to the variables @xmath72 since their interpretation is similar , but in this case the values of @xmath160 would be fixed to @xmath63 . for the cases where it is not possible to fix the corresponding @xmath72-variable , it could be still possible to establish some lower bounds as we will see later .    next , to fix variables @xmath161 and @xmath160 for @xmath56 , @xmath162",
    ", we deal with an auxiliary problem that maximizes the number of variables that may assume zero values , satisfying @xmath163 and the capacity constraints . for any @xmath162 and @xmath27 such that @xmath164 let @xmath165 to avoid possible misunderstanding in the cases where variables @xmath166 are not defined , i.e. when @xmath167 , we can assume that @xmath168 .    for a given @xmath158",
    ", we introduce the _ effective capacity _ of a hub @xmath1 at a cost at most @xmath169 as , @xmath170 indeed , the capacity of a hub @xmath1 is always lower than or equal to @xmath171 . in addition , if we restrict ourselves to the nodes served at a cost of at most @xmath169 , then the actual capacity to cover this set should be lower than @xmath172 , and this gives us the expression of @xmath173 .",
    "the optimal value @xmath174 of the following problem fixes the maximal number of allocations that may be feasible at a cost of at most @xmath169 .",
    "@xmath175    then , depending on the value @xmath174 we can fix some variables to their upper bounds .",
    "let us denote by @xmath176 the index such that @xmath177 @xmath178      following similar argument to the previous subsection , one can expect that many variables @xmath46 and @xmath72 in the top - right hand corner of the matrices of variables @xmath46 and @xmath72 , respectively , will take value 0 in the optimal solution .",
    "indeed , @xmath179 means that the @xmath159-th sorted allocation cost is less than @xmath34 which is very likely to be true if @xmath158 is sufficiently large and @xmath21 is small .",
    "note that an analogous strategy , applies to the variables @xmath72 since their interpretation is similar .",
    "for the cases where it is not possible to fix the corresponding @xmath72-variable it could be still possible to establish some upper bounds .",
    "for any @xmath180 , @xmath27 such that @xmath181 let define variables @xmath166 as . to avoid possible misunderstanding in the cases where variables @xmath182 are not defined , i.e. when @xmath183 , we can assume that @xmath184 . using these variables ,",
    "the formulation of the problem that maximizes the number of non - fixed allocations at a cost at most @xmath169 is : @xmath185    note that the value @xmath186 implies that there are no feasible solutions of the original problem with less than @xmath187 allocations fixed at a cost at most @xmath188 .",
    "let @xmath189 be the index such that @xmath190 thus , in any feasible solution of the problem we have that : @xmath191 note that whenever @xmath192 then there is nothing to fix and therefore no variables are set to zero in column @xmath158 .",
    "in order to strengthen formulation @xmath75 we have studied several families of valid inequalities .",
    "in fact , taking advantage of previous experience on the non - capacitated version of the problem we have borrowed a first family of valid inequalities that are very simple and that have proven to be effective in different ordered median problems with covering variables @xcite .",
    "this family is @xmath193 since , these families are straightforward consequence of the definition of variables @xmath46 and @xmath72 they have been included in the original formulation .    in the following ,",
    "we describe several alternative families of valid inequalities : three sets of inequalities , , - , and - , based on the combination of ordering and capacity requirements and two more sets , and - , that do not use capacities .",
    "we can add to this model several families of valid inequalities based on capacity issues that help in solving the problem by reducing the gap of the linear relaxation and the cpu time to explore the branch and bound search tree .",
    "observe that the capacity of the set of hubs that may be used to assign origins in @xmath194 at a cost at most @xmath169 , is given by @xmath195 where @xmath196 is the effective capacity at a cost at most @xmath169 , defined by . recall that , although the capacity of a hub @xmath1 is always lower than or equal to @xmath171 , when we restrict to the nodes served at a cost of at most @xmath169 , then the actual capacity to cover this set should be lower than @xmath197 . making use of the above observation , we can add the following family of constrains as valid inequalities @xmath198 which enforces that all the flow sent from origin - hubs at a cost at most @xmath169 can not exceed the effective capacity at that cost .",
    "observe that in the case where @xmath197 takes the value @xmath171 ( 11 ) dominates , but in the case where @xmath199 , becomes @xmath200 .",
    "observe that this last valid inequality is an alternative surrogation , with capacity coefficients , of constraints @xmath201 that although valid do not appear in the model because of its large cardinality .",
    "this new form of aggregation has provided good results in the computational experiments .",
    "this section introduces another family of valid inequalities based on capacity issues that help in solving the problem . in order to present these new valid inequalities based on capacity requirements we introduce some new notation .",
    "assume without loss of generality that @xmath202 for @xmath203 and let @xmath204 and @xmath205 for @xmath206 be a given set of origin sites .    in case that the effective capacity at a cost at most @xmath169 is not sufficient to cover the demand of @xmath207 ,",
    "i.e. @xmath208 is less than @xmath209 , then at most @xmath210 origins of @xmath207 can be allocated at a cost lower than or equal to @xmath169 .",
    "this argument can be applied for each @xmath158 to the corresponding @xmath169 value .",
    "moreover , we have chosen this particular structure of @xmath207 consisting of the @xmath1 origins ( nodes ) with the @xmath1-smallest flows , because given a fixed amount of flow , the maximal cardinality set of origins , such that the overall flow originated in this set is lower than or equal to this amount , is provided by a set @xmath207 for some @xmath206 . therefore , since we are dealing with the worst cases , it allows us to fix some variables @xmath46 and @xmath72 through the following valid inequalities . for each @xmath211",
    "we obtain the following :    * if @xmath212 , for some @xmath213 , namely if the index of the last element , @xmath1 , that defines @xmath207 lies in the @xmath21-th block of null elements in the @xmath214 vector , then @xmath215 observe that the above inequality amounts to a disjunctive condition : either the effective capacity at a cost at most @xmath169 is enough to cover the demand of the @xmath1 smallest flows from origin sites or the @xmath21-th sorted cost allocation must be assigned at a cost at least @xmath216 . * if @xmath217 , and namely if the index of the last element , @xmath1 , that defines @xmath207 lies in the @xmath21-th block of non - null elements , then @xmath218 in this case , the inequality is similar to the previous one but written in terms of the variables @xmath72 that allow to control the capacity whenever @xmath1 falls within a block of non - null elements in the @xmath214 vector .",
    "recall that if @xmath219 , variables @xmath161 and @xmath160 have been already fixed by the preprocessing phase 1 , and for the above inequality to be effective @xmath220 , or equivalently , @xmath221 .    based on the same arguments we can add a larger family of valid inequalities built on arbitrary sets of origin sites .",
    "let @xmath222 be a set of origin sites , and suppose that @xmath223 satisfies @xmath224 ,    * if @xmath212 , for some @xmath213 , and @xmath220 then @xmath225 * if @xmath217 , and @xmath220 then @xmath226    now , assuming a more general case and for an improvement of the above inequalities ( [ in : dv3_1 ] ) and ( [ in : dv3_2 ] ) , for a given @xmath227 , and @xmath220 , @xmath228 , let @xmath229 @xmath230 is the minimum allocation cost to @xmath95 as an open hub . in other words ,",
    "no allocation to hub @xmath95 is possible at a cost less than @xmath230 , except in case @xmath95 were a hub itself .",
    "we shall call this value the _ empty radius of @xmath95_.    define @xmath231 to be the index of the sorted sequence of elements @xmath232 such that there are exactly @xmath1 elements @xmath232 with @xmath233 and @xmath234 , namely @xmath231 , is the index such that @xmath235 then it holds that ,    * if @xmath212 , for some @xmath213 , and @xmath220 @xmath236 the above inequality is also a disjunctive condition that `` reinforces '' the family of valid inequalities ( [ in : dv3_1 ] ) .",
    "it states that if the effective capacity at a cost at most @xmath169 is not enough to cover the flow sent from origin sites that are not hubs and that can be allocated at some costs less than or equal to @xmath169 then some of the origin sites with allocation costs less than @xmath169 must be assigned at a cost at least @xmath188 .",
    "we observe that the use of @xmath46 variables in the left - hand side of the inequality is due to the fact that @xmath1 falls within a block of null elements in the @xmath214 vector .",
    "a similar inequality also holds when @xmath1 falls within a block of non - null elements as shown below .",
    "* if @xmath237 , and @xmath220 then @xmath238 this inequality is similar to the previous one whenever the index @xmath1 falls within a block of non - null elements in the @xmath214 vector .",
    "finally , as the index @xmath231 should be greater than or equal to @xmath1 , we can split the above equations , ( [ in : dv3b_1 ] ) and ( [ in : dv3b_2 ] ) , into @xmath239 equivalent inequalities .",
    "this is , for any @xmath240 , define @xmath241 to be the index of the sorted sequence of elements @xmath232 such that @xmath242 then it holds that ,    * if @xmath243 , for some @xmath213 , and @xmath220 @xmath244 * if @xmath217 and @xmath220 , then @xmath245    observe that if @xmath246 then @xmath247 .",
    "thus , the families of valid inequalities and include as particular instances the families and .",
    "the third family of valid inequalities , directly borrowed from @xcite , state disjunctive implications on the origin - first hub allocation costs .",
    "they ensure that either origin site @xmath4 is allocated to a first hub at a cost of at least @xmath34 or there is an open hub @xmath1 such that @xmath248 .",
    "this argument can be formulated through the following family of valid inequalities : @xmath249      using the definition of the variables @xmath46 and @xmath72 , we establish a lower and an upper bound of the number of feasible allocations at a cost @xmath250 .",
    "observe that using the family of constraints for the original formulation , the exact number of allocations done at a cost @xmath250 is given by @xmath251 .",
    "however , since in formulation @xmath75 the number of variables has been considerably reduced , some information is lost . in particular",
    ", we can not keep under control with this new formulation the exact number of allocations at a cost @xmath250 .",
    "indeed , the counterpart to equalities in formulation @xmath75 is the family of constraints . therefore , we are only able to give a lower and upper bound of this number of allocations .",
    "these lower and upper bounds are formulated , respectively , by the following two families of constraints : @xmath252    the first sum in the right hand side of both families gives the exact number of allocations at cost @xmath250 in the positions corresponding to non - null blocks of the vector @xmath47 .",
    "however , the second sum in the right hand side of constraints provides a lower bound of the number of allocations at cost @xmath250 in the positions corresponding to the null blocks . in the same way ,",
    "the @xmath98nd to the @xmath92-th sums in provide an upper bound on the number of these allocations .",
    "[ sec : bb_results ]    the formulations given to the csa - omhlp with the corresponding strengthening and preproccesing phases , described in this paper , were implemented in the commercial solver xpress i ve 1.23.02.64 running on a intel(r ) core(tm ) i5 - 3450 cpu @3.10ghz 6 gb ram .",
    "the cut generation option of xpress was disabled in order to compare the relative performance of the formulations cleanly .",
    "for this purpose we use the ap data set publicly available at http://www.cmis.csiro.au/or /hublocation ( see @xcite ) . as in previous papers on the field related to the uncapacitated version of this problem , we tested the formulations on a testbed of five instances for each combination of costs matrices varying : ( i ) @xmath0 in @xmath253 ( ii ) three different values of @xmath49 depending on the case and ( iii ) @xmath89 , @xmath254 and six different @xmath47-vectors .",
    "these @xmath47-vectors are the well - known median @xmath255 , anti-@xmath256-trimmed - mean @xmath257 , @xmath256-trimmed - mean @xmath258 , with @xmath259 , center @xmath260 , and @xmath1-centrum @xmath261 with @xmath262 . as well as a @xmath263-blocks @xmath47-vector ( three alternate @xmath264-blocks of lambda weights , i.e. @xmath265 ) .",
    "therefore , for the each combination of @xmath0 , @xmath49 and @xmath47 we have tested five instances .",
    "this is , a total number of @xmath266 problems have been used to test the performance of the proposed models .",
    "the capacities were randomly generated in @xmath267 $ ] .",
    "this generation procedure does not ensure in all cases feasible instances , as capacity constraints can be very tight for problems with a low number of hubs ( @xmath268 ) .",
    "overall , in our experiments we got , initially 10 infeasible instances out of 75 ( 13.3% ) .",
    "these instances were replaced by new feasible ones ( generated with the same capacity structure ) .",
    "hence , the reader may observe that the generation procedure gives tight capacity constraints .",
    "first of all , and for the sake of readability , we present in figure [ fig1 ] a summary of our computational results . a full description of those results is also included in tables [ tabla1]-[tabla6 ] .",
    "figure [ fig1 ] shows average results for each one of the considered problem types ( different @xmath47-vectors ) .",
    "the left chart refers to average cpu times and the right chart to the number of explored nodes of the b&b tree .",
    "both charts contain the same number of blocks standing for the different types of @xmath47-vectors plus and additional block ( total avg . ) for the consolidated average of all @xmath47-vectors .",
    "each block compares the behavior of the different formulations ( @xmath48,@xmath75 ) and their strengthening ( variable fixing and valid inequalities ) .",
    "the heading explains the meaning of bars within each block : @xmath48 and @xmath75 stand for the corresponding formulations ; @xmath75+p@xmath269 when the two preprocesses @xmath270 and @xmath271 are applied ; and @xmath75+p@xmath269+vi when the valid inequalities are added as well , denoted with their corresponding references .",
    "analyzing this figure we observe the improvement obtained with @xmath75 and its strengthening as compared with @xmath48 or even @xmath75 alone . actually , the overall reduction in running time with respect to the initial formulation is above @xmath272 .",
    "next , focusing in the best model , namely @xmath273vi,- , we observe that the most time consuming problem is the one with @xmath47-vector given by @xmath263-blocks with a significant difference with respect to the remaining @xmath47-vectors . the second most time consuming problem corresponds with the antitrimmean",
    "similar conclusions , regarding the number of nodes , are obtained looking at the right chart of figure [ fig1 ] .",
    "it is worth mentioning that although the formulation @xmath48 provides the worst computational times , it is the one that reports the lowest number of nodes in the b&b tree . this fact is explained because @xmath274 has a larger number of variables than @xmath75 which results in more difficult lp relaxations in each node of the b&b tree .     in spite of that figure [ fig1 ] shows the general overview of our computational results , we also include in the following a more detailed analysis based on tables [ tabla1]@xmath275[tabla6 ] .",
    "tables [ tabla1 ] and [ tabla2 ] report the results of the formulations and different preprocessing phases developed in this paper for the csa - omhlp .",
    "the first column of these tables describes the different @xmath47-vectors in the study , the second and third columns report the size of the instances and the number of hubs to be located , respectively .",
    "the following three columns correspond to some of the computational results obtained by solving the csa - omhlp with @xmath48 formulation .",
    "the next three columns correspond to formulation @xmath75 , and the rest of the columns to the latter formulation plus the two preprocessing procedures , i.e @xmath75+p@xmath276+p@xmath277 . columns _ rgap _ , _ nodes _ and _ time _",
    "stand for the averages of : the gap in the root node , number of nodes in the b&b tree and the cpu time in seconds ; the time was limited to two hours of cpu . to obtain a general idea of the comparisons among these averaged values , for the results in the column _ time _ and for different formulations and/or valid inequalities applied",
    ", we have accounted the value 7200 seconds for those instances that exceed the time limit .",
    "a superindex in their corresponding averaged time value states the number of instances exceeding the cpu time limit ; in the same way , the values used to computed the average of the column _ nodes _ have been the number of nodes of the b&b tree when the cpu time limit was reached .",
    "the column _ fixed _ gives the percentage of variables that have been fixed after the preprocessing phases 1 and 2 .",
    "column _ cuts _ provides the number of the lower and upper bounds over the variables @xmath72 added to the model , after running the corresponding preprocessing phases .",
    "finally , _ t. prep .",
    "_ reports the cpu time in seconds of the corresponding preprocessing phases and column _ t. total _ reports the overall cpu time in seconds to solve the problem including the corresponding preprocessing phase .",
    "the rows _ average _ provide the averaged results among all the tested instances for each problem and _ total _ with respect to the overall set of instances .",
    "tables [ tabla1 ] and [ tabla2 ] show , as a general trend , that the cpu time increases similarly , for all choices of the @xmath47-vector , with the size of the instances .",
    "we can see that 69 instances required more than two hours to be solved using formulation @xmath48 , however the remaining two analyzed ways to solve this problem were able to solve all the instances within the cpu time limit , except in a few cases for the antitrimmean and @xmath263-blocks problem types .",
    "regarding the running times for the different types of problems , we can see that anti - trimmean and blocks have been the problems that need more time to be solved . in any case",
    ", we observed that there is a considerable reduction of the running times from the original formulation to the improved formulation , and after applying the preprocessing phases . from tables",
    "[ tabla1 ] and [ tabla2 ] , one can remark that , formulation @xmath75 with preprocessing phases 1 and 2 provides better results , with a reduction of around a 86% of the time with respect to formulation @xmath48 ( taking into account that the latter formulation was not able to solve all the studied instances before the time limit was exceeded ) .",
    "moreover , the reduction of the running times with respect to formulation @xmath75 ( without preprocessing phases ) is around 32 % .    as for the comparison between rgap s",
    ", we observe that the average gap of the linear relaxation after preprocessing reduces around 32% from the original formulation ( formulation @xmath48 ) to formulation @xmath75 with preprocessing phases 1 and 2 . in any case , it is also worth noting that the gap from the original formulation to the improved formulation ( without any preprocessing phase ) is reduced around 9% , what implies that even though this improved formulation uses much less number of variables , it provides a better rgap .",
    "tables [ table3 ] and [ table4 ] present several improvements to formulation @xmath75 with preprocessing phases 1 and 2 . in particular , the second , third and fourth blocks of columns summarize the results when the combination of valid inequalities ( [ in : dv3_3])-([in : dv3_2 ] ) ; ( [ in : dv3_3]),([in : dv3b_1])-([in : dv3b_2 ] ) and ( [ in : dv3_3]),([in : dv3c_1])-([in : dv3c_2 ] ) are added to this formulation , respectively . in general , we can see that the latter combination provides the best results .",
    "in particular , there is an improvement of 7 % of the running times with respect to formulation @xmath75 with preprocessing phases 1 and 2 .",
    "moreover , with respect to the number of nodes the improvement is around 15% , but the rgap is similar for all the analyzed reinforcements .    since the best behavior observed",
    "was obtained with reinforcement given by ( [ in : dv3_3 ] ) , ( [ in : dv3c_1])-([in : dv3c_2 ] ) , in the rest of our tests we have used this configuration to make further strengthening .",
    "tables [ table5 ] and [ table6 ] present several improvements to the formulation @xmath75 with preprocessing phases 1 and 2 and valid inequalities ( [ in : dv3_3 ] ) , ( [ in : dv3c_1])-([in : dv3c_2 ] ) . in particular , the second , third and fourth blocks of columns report the results after including the family of valid inequalities ( [ in : cortepacking1 ] ) , ( [ in : cortepacking1])-([const1 ] ) and ( [ in : cortepacking1])-([const3 ] ) , respectively .",
    "these tables show that the best results are obtained when all valid inequalities , ( [ in : cortepacking1])-([const3 ] ) , are added to the current configuration ; with an improvement of 18% in the running time , 28% in the number of nodes and 12 % in the rgap .",
    "the overall conclusion of our experiment is that in order to solve csa - omhlp the best combination of formulation and strengthening is to use @xmath273([in : dv3_3])@xmath278([in : dv3c_1])@xmath278([in : dv3c_2])@xmath278([in : cortepacking1])@xmath278([const3 ] ) .",
    "this configuration allows to solve medium size instances within 10 minutes of cpu time .",
    "this paper can be considered as an initial attempt to address the capacitated single - allocation ordered hub location problem .",
    "the formulations , strengthening and preprocessing phases developed in this paper provide a promising approach to solve the above mentioned problem although so far only medium size problems are reasonably well - solved .",
    "thus , this work opens interesting possibilities to study - and - develop ad - hoc solution procedures that allow us to consider larger size instances of this problem .",
    "moreover , it also points out the possibility of developing heuristics approaches that will give good solutions in competitive running times .",
    "all in all , this paper shows the usefulness of using covering formulations and their corresponding strengthening for solving capacitated versions of ordered hub location problems .",
    "this research has been partially supported by spanish ministry of education and science / feder grants numbers mtm2010 - 19576-c02-(01 - 02 ) , mtm2013 - 46962-c02-(01 - 02 ) , junta de andaluca grant number fqm 05849 and fundacin sneca , grant number 08716/pi/08 .",
    "p.z . tan and b.y . kara . a hub covering model for cargo delivery systems . 49(1):28 - 39 , 2007",
    ". b. wagner .",
    "model formulations for hub covering problems . _ journal of the operational research society , _ 59(7):932 - 938 , 2008 ."
  ],
  "abstract_text": [
    "<S> the single allocation ordered median hub location problem is a recent hub model introduced in @xcite that provides a unifying analysis of a wide class of hub location models . in this paper </S>",
    "<S> , we deal with the capacitated version of this problem , presenting two formulations as well as some preprocessing phases for fixing variables . </S>",
    "<S> in addition , a strengthening of one of these formulations is also studied through the use of some families of valid inequalities . </S>",
    "<S> a battery of test problems with data taken from the ap library are solved where it is shown that the running times have been significantly reduced with the improvements presented in the paper . </S>"
  ]
}
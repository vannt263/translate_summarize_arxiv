{
  "article_text": [
    "keyword spotting ( kws ) is a speech task which requires detecting a specific word in an audio signal , commonly for use as the  wake word \" of a large - vocabulary ( lv ) speech recognizer .",
    "voice activity detection ( vad ) requires detecting human speech in the signal , often for the purpose of endpointing in a large vocabulary speech recognition system .",
    "both tasks are challenging due to computational constraints and noisy environments .",
    "to limit computational cost , vad models have often leaned on hand - engineered features , requiring training separately from kws models .",
    "we propose instead a single end - to - end neural network architecture for both kws and vad .",
    "we develop novel inference algorithms which allow us to run kws and vad tasks without retraining .",
    "our model outperforms both baselines , is trained only on unaligned character - level transcripts , and requires maintaining only a single architecture for training and deployment .",
    "the model is based on work in end - to - end speech recognition which uses the connectionist temporal classification loss function coupled with deep recurrent neural networks @xcite . in this work we develop the model and inference procedure for the kws and vad tasks .",
    "a thorough treatment of the benefits of this model for lvcsr is given in @xcite .",
    "a character - level ctc architecture was also recently adopted for keyword spotting @xcite , where it outperformed a dnn - hmm baseline , while a word - level ctc architecture was used for keyword spotting in @xcite .",
    "traditional vad architectures trade off accuracy for low computational cost , as they have historically been developed for very low - resource environments .",
    "some simple and efficient techniques include a threshold on the energy of the audio signal , a threshold on the number of zero - crossings @xcite or combinations of these features , however , these methods are typically not robust to non - stationary environments .",
    "we note that modern lv speech environments afford more computational resources than before , and the use of larger neural models is feasible , especially for lv asr endpointing .",
    "neural architectures have been proposed for vad , notably the rnn architecture in @xcite , however that approach relied on frame - aligned labels .",
    "for a general keyword spotter , we model @xmath0 , where @xmath1 is a keyword and @xmath2 is a window of speech . for vad",
    "we use the same distribution and simply set @xmath1 to the empty string .",
    "we use the connectionist temporal classification @xcite ( ctc ) objective function to train an rnn on a corpus of utterance and transcription pairs .",
    "the ctc objective gives us the probability of any label string for a given utterance .",
    "we do not need an alignment as ctc efficiently computes the score over all possible alignments .",
    "the objective function for an utterance @xmath2 and corresponding transcription @xmath3 is given by [ alg : ctc ] @xmath4 the @xmath5 function computes the set of possible alignments of the transcription @xmath3 over the @xmath6 time - steps of the utterance under the ctc operator .",
    "the ctc operator allows for repetitions of any character and insertions of the blank character , @xmath7 , which signifies no output at a given time - step .    for the on - line kws task we must determine with low latency",
    "if the keyword has been said . in order to use this model for kws ,",
    "we score a moving window of the audio stream @xmath2 so that we can find the keyword soon after it occurs .",
    "the score is computed as @xmath8 where @xmath1 is any keyword and @xmath9 is a window of speech @xmath10 frames long .",
    "for the vad task we first compute the probability of no speech by setting @xmath1 to the empty string . from this",
    "we can find the probability of speech by taking one minus the probability of no speech .",
    "the network accepts as input a spectrogram computed from the raw waveform sampled at 8khz .",
    "the first layer is a 2-dimensional convolution with a stride of three @xcite . for the next three layers of the network we use gated recurrent rnn layers @xcite@xcite .",
    "the last layer is a single affine transformation followed by a softmax .",
    "the network outputs directly to characters in the alphabet including the blank and space characters .",
    "@xmath11 @xmath12 size(@xmath13 ) @xmath6 @xmath12 numberofcolumns(@xmath14 ) @xmath15 zeros(s , t ) @xmath16 @xmath17 @xmath18 @xmath19 @xmath20    @xmath21 @xmath22 @xmath23 @xmath24",
    "the optimal window size for kws detection varies per utterance based on speech rate , noise and adjacent utterances . to alleviate the sensitivity of the algorithm to the window size parameter we propose a modification to the ctc scoring algorithm presented above . for a given keyword @xmath1 instead of scoring @xmath1 itself under the model we instead score the regular expression [ ^@xmath25*@xmath1[^@xmath26 * , where @xmath27 and @xmath28 are the first and last characters of @xmath1 , respectively",
    "this is described in algorithm [ alg : scorekeyword ] .",
    "computing the vad score reduces to summing the log probabilities of the blank character over the window of speech frames : @xmath29",
    "the model parameters are optimized with stochastic gradient descent for 50 epochs and a minibatch size of 256 .",
    "we sort examples so that the minibatch consists of utterances of similar length for computational efficiency .",
    "the learning rate and momentum parameters are chosen to optimize speed of convergence .",
    "we anneal the learning rate by a factor of 0.9 every 5000 iterations .",
    "the architecture of the network is as described in section [ section : architecture ] .",
    "the filters for the convolution layer are 11 by 32 over the time and frequency dimensions respectively .",
    "we use 32 filters in all models .      the data used to train the model consists of two datasets .",
    "the first dataset is a corpus of 526k transcribed utterances collected on android phones via an assistant - like application .",
    "the second corpus consists of 1544 spoken examples of the keyword , in this case , `` olivia '' .",
    "the model is trained on both data - sets simultaneously .",
    "we do not need to pre - train on the large corpus prior to fine - tuning .",
    "we also use a collection of about a hundred hours of noise and music downloaded from the web to generate synthetic noisy examples of the keyword and empty noise clips . when training with the noisy data we replicate each keyword 10 times , each time with a random noise clip .",
    "we also use a corpus of 57k randomly sampled noise clips with a blank label as filler .",
    "the kws model is evaluated on a test set of 550 positive examples ( e.g. containing the keyword  olivia  ) and 5000 negative examples held - out from the large speech corpus described above . during inference",
    "we evaluate the utterance with algorithm [ alg : scorekeyword ] every 100 milliseconds over a window of 800 milliseconds in order to detect the presence of the keyword .",
    "we classify an example as positive if the score found from the output of algorithm [ alg : scorekeyword ] over the utterance is ever above a preset threshold .",
    "we evaluate the same models on the vad task .",
    "the positive examples are the same 5000 examples of speech used as the negative examples for the kws task .",
    "we collected about 10 hours of non - speech audio from a variety of noise backgrounds .",
    "we sample 5000 random clips from the 10 hours of noise to construct the negative samples .",
    "our kws baseline is a dnn keyword spotter from kitt.ai .",
    "our vad baseline is the webrtc vad codec with frame size 30ms .",
    "our model of 3 layers of size 256 outperforms both baselines . for a fixed false positive rate of 5%",
    "our model achieves a 98.1% true positive rate on keyword spotting , in comparison to the baseline 96.2% . for the vad task , for the same false positive rate ,",
    "our model achieves 99.8% true positive rate vs. 44.6% for the baseline .",
    "this large delta may be due to the substantial difference in representational power of a large - parameter neural model vs. the small - parameter gmm baseline , as well as differences in the type and volume of training data .",
    "figures [ fig : layers ] and [ fig : sizes ] show that our model consistently improves at detecting the keyword as we increase the number of layers and the size of the model . increasing the model depth and size",
    "also improves vad performance ; however , when the layers are larger than 128 units or there are more than 2 layers , vad performance saturates .",
    "most of the large vad models achieve near 99.9% true positive rate or higher at a fixed false positive rate of 5.0% .",
    "0.49     0.49     0.49     0.49     in figure [ fig : data ] we see that adding noise to the keywords during training results in substantial improvements . at a false positive rate of 5% the model with noise has a true positive rate of 98.9% compared to 94.3% for the model without noise .",
    "further using the random noise data on its own does not help much ; in fact the results are slightly worse . on the vad task",
    "we also notice an improvement in the roc curve as we add noise .",
    "our production model with 3 layers of 256 hidden units has @xmath301.5 m trainable parameters , comparable to other neural network - based kws approaches @xcite , and has been deployed to a modern smartphone .",
    "0.49     0.49",
    "we have described a single neural network architecture which can be used for both keyword spotting and voice activity detection without retraining .",
    "the model is simple to train and does not require an alignment or frame - wise labels , in contrast to prior vad models .",
    "we propose inference algorithms for kws and vad modified from the basic ctc scoring algorithm which allow the model to perform both tasks . while our model is efficient , applying neural compression techniques might further increase performance and represents an interesting area for future work ."
  ],
  "abstract_text": [
    "<S> we propose a single neural network architecture for two tasks : on - line keyword spotting and voice activity detection . </S>",
    "<S> we develop novel inference algorithms for an end - to - end recurrent neural network trained with the connectionist temporal classification loss function which allow our model to achieve high accuracy on both keyword spotting and voice activity detection without retraining . </S>",
    "<S> in contrast to prior voice activity detection models , our architecture does not require aligned training data and uses the same parameters as the keyword spotting model . </S>",
    "<S> this allows us to deploy a high quality voice activity detector with no additional memory or maintenance requirements . </S>"
  ]
}
{
  "article_text": [
    "in this paper , we deal with avoider - enforcer positional games . for a hypergraph @xmath7 , the game @xmath8 is played by two players , avoider and enforcer .",
    "they alternately claim previously unclaimed vertices of @xmath9 .",
    "avoider starts , and the game ends when all vertices have been claimed .",
    "enforcer wins if avoider has claimed all vertices of some hyperedge of @xmath9 .",
    "otherwise avoider wins .",
    "we refer to the vertices of @xmath10 as the board , and the hyperedges of @xmath10 as the losing sets .",
    "the recent book  @xcite by beck offers a good overview of the topic of positional games . here ,",
    "we study games which are played on the edges of the complete graph on @xmath0 vertices , that is , the board of @xmath8 is always @xmath11 .",
    "if we assume that both players play optimally , then each game @xmath9 is either an avoider s win or an enforcer s win .",
    "a significant part of the previous work done in combinatorial game theory ( see , e.g. ,  @xcite ) is devoted to the question : which one of the two players wins a particular game ? here , we go one step further and address a different issue  our hope is to determine not only the winner of a game , but also _ how fast _ is he able to win .    for a game @xmath10 , let @xmath12 be the smallest integer @xmath13",
    "such that enforcer has a strategy to win the game @xmath8 in at most @xmath13 moves .",
    "we say that @xmath14 , if the game is an avoider s win .",
    "for an avoider - enforcer game , this type of question was first raised only recently , by hefetz et al .  in  @xcite , and it was also addressed in  @xcite . on the other hand , an analogue question for maker - breaker games ,",
    "the more studied avoider - enforcer games counterpart , has been a topic for some time .",
    "we mention here the work of beck  @xcite and peke  @xcite , who looked at how fast maker can win the clique game .",
    "chvtal and erds  @xcite , and later hefetz et al .",
    "@xcite , studied the fast winning in maker - breaker hamiltonicity game .",
    "we would like to emphasize that , generally speaking , results on fast winning in positional games have an impact on the whole field , as those results can later be used in analysis of other positional games .",
    "namely , it often happens that an optimal strategy of a player consists of several stages , and in each of them the player wants to complete a task .",
    "in that situation , a particular task should not only be performed , but performed fast , i.e. , in significantly less moves than the total number of moves at player s disposal .",
    "all in all , the theory behind avoider - enforcer games is less developed than the one behind maker - breaker games .",
    "however , when it comes to determining how fast can enforcer win the game , a somewhat unexpected help comes from extremal graph theory .    the _ extremal number _",
    "( or turn number ) of a hypergraph @xmath10 is defined by @xmath15 . as it was shown in  @xcite ,",
    "if the set of hyperedges of @xmath10 is a monotone increasing family of sets , we have @xmath16 note that for every game @xmath10 , we can make the set of hyperedges an increasing family by adding all the supersets of the hyperedges to the set of hyperedges .",
    "this process changes neither the outcome nor the nature of the game .",
    "therefore , as soon as we know the extremal number for the game hypergraph , from ( [ e : ob ] ) we get the length of the game squeezed between two values which are roughly a factor of two from each other .    in  @xcite and  @xcite ,",
    "the possibilities of enforcer s fast win for several well - studied positional graph games were analyzed . as it was shown in  @xcite",
    ", avoider can keep his graph planar for as many as @xmath17 moves , which is just a constant away from the upper bound derived from  ( [ e : ob ] ) .",
    "two other basic positional games are looked at in  @xcite . in the first one",
    ", avoider wants to keep his graph bipartite for as long as possible , where in the second one his goal is to avoid creating a spanning graph .",
    "the duration of both games is determined quite precisely in both the first and the second order terms .",
    "it turns out that , in both cases , the values are not additive constant away from either of the bounds in  ( [ e : ob ] ) .      in the present paper",
    ", we analyze the duration of the avoider - enforcer game for three basic positional games . as we saw in the non - planarity game , in contrast to several other games that were analyzed",
    ", avoider can keep his graph planar for quite a long time , just constant away from the upper bound in  ( [ e : ob ] ) .",
    "we were curious as to what are the reasons behind this , analyzing a fairly similar game ",
    "the game in which avoider wants to keep his graph outerplanar for as long as possible .",
    "formally , let @xmath18 be the hypergraph whose hyperedges are the edge - sets of all non - outerplanar graphs on @xmath0 vertices .",
    "the relation  ( [ e : ob ] ) shows that @xmath19 , which leaves @xmath20 possible values for @xmath21 .",
    "we manage to narrow down the choice to just five values .",
    "[ th : op ]",
    "@xmath22    we see that , similarly to the non - planarity game , the duration of the game is just an additive constant away from the upper bound obtained from  ( [ e : ob ] ) .",
    "the common feature of the non - outerplanarity game and the non - planarity game is that in both cases avoider loses as soon as his graph contains a certain forbidden minor .",
    "indeed , for outerplanarity these forbidden minors are @xmath23 and @xmath24 , and for planarity the forbidden minors are @xmath25 and @xmath26 .",
    "we were curious to analyze further the games of this kind .",
    "hence , we turned our attention to a game where avoider s goal is to avoid a single forbidden minor in his graph .",
    "the forbidden minor is the diamond , that is , @xmath23 with one edge missing .",
    "we note that @xcite deals with a similar game , where avoider s goal is to avoid claiming a fixed minor",
    ". however , the game analyzed there is biased , and the main interest is just the final outcome .",
    "formally , let @xmath27 be the hypergraph whose hyperedges are the edge - sets of all graphs on @xmath0 vertices which contain a diamond minor .",
    "as the number of edges in a diamond - free graph is at most @xmath4 , from  ( [ e : ob ] ) we get @xmath28 . in the following theorem , we reduce this interval to three integers , again an additive constant away from the upper bound .    [",
    "th : df ] @xmath29    we note that diamond - free graphs are also called cactus graphs , and it can be shown that they are outerplanar .    a graph @xmath30 is called @xmath1-degenerate , if every subgraph of @xmath30 has a vertex of degree at most @xmath1 .",
    "the degeneracy of a graph is the minimal @xmath1 such that the graph is @xmath1-degenerate .",
    "low degeneracy is a common property of planar and outerplanar graphs ; their degeneracy is at most 5 and 2 , respectively .",
    "it is known that graph degeneracy plays a key role in several other positional games on graphs , see , e.g. ,  @xcite .    here , our aim is to study a game in which avoider s goal is to keep his graph @xmath1-degenerate , for an integer @xmath1 . in a way",
    ", it brings all the mentioned games together , as its family of forbidden graphs , for some values of @xmath1 , contains the aforementioned families of forbidden graphs .",
    "formally , let @xmath31 be the hypergraph whose hyperedges are the edge - sets of all graphs on @xmath0 vertices which are not @xmath1-degenerate .",
    "a @xmath1-degenerate graph with @xmath0 vertices can have at most @xmath32 edges , and we show that avoider loses only when he has claimed more than @xmath6 edges , assuming that @xmath0 is large enough compared to @xmath1 .",
    "[ th : kd ] if @xmath33 , then @xmath34 .",
    "our graph - theoretic notation is standard and follows that of  @xcite .",
    "a matching @xmath35 of a graph @xmath30 is called _ near - perfect _ if there are at most two @xmath35-unsaturated vertices in @xmath30 .",
    "if @xmath36 is a graph , we say that a graph @xmath30 is @xmath36-free , if @xmath30 contains no @xmath36-minor .",
    "throughout the paper , @xmath37 stands for the natural logarithm .",
    "occasionally , we may work with dynamic sets and notations .",
    "for instance , @xmath38 denotes the set of edges claimed by avoider . at the start of a game , it is the empty set .",
    "if avoider claims the edge @xmath39 in his @xmath40-th move , then we change @xmath38 to be @xmath41 .",
    "_ proof of theorem  [ th : op ] .",
    "_ assume that enforcer claims an edge @xmath42 in his first move .",
    "if at any time avoider claims an edge incident to @xmath42 , say @xmath43 , then enforcer claims the edge @xmath44 in the next move .",
    "this simple pairing strategy enables enforcer to prevent avoider from claiming any triangle on the edge @xmath42 .",
    "therefore , avoider is unable to claim a maximal outerplanar graph and loses after at most @xmath45 moves .",
    "next , we show a strategy for avoider to keep his graph @xmath38 outerplanar for @xmath2 moves . in his first two moves ,",
    "avoider claims two edges of a triangle .",
    "we denote the third edge of this triangle by @xmath46 .",
    "note that @xmath47 is a maximal outerplanar graph on three vertices . for most of the game ,",
    "avoider maintains the graph @xmath38 to consists of a graph one edge short of a maximal outerplanar graph , and some isolated vertices .",
    "he achieves that by attaching an isolated vertex to the current outerplanar graph in every pair of consecutive moves .    throughout the game",
    ", we denote the outer face of @xmath48 by @xmath49 .",
    "an isolated vertex @xmath50 in avoider s graph will be called _ bad _ , if for every three consecutive vertices @xmath51 on @xmath49 at least one of the edges @xmath52 , @xmath53 , @xmath54 is claimed by enforcer .",
    "any other isolated vertex of @xmath38 is called _",
    "good_. a good vertex can be attached to the current outerplanar graph @xmath38 in two avoider s moves .",
    "namely , if @xmath51 are consecutive vertices on @xmath49 and none of the edges @xmath52 , @xmath53 , @xmath54 are claimed , then avoider can first claim @xmath53 , and then one of the edges @xmath52 , @xmath54 in the following move , see figure  [ f : ext ] .",
    "we observe that the number of bad vertices can never exceed five . indeed ,",
    "if there were six bad vertices at some point of the game , then there would be at least @xmath55 enforcer s edges . that is more than the total number of edges played by enforcer until that point .",
    "let @xmath1 be the order of the current outerplanar graph @xmath38 . while @xmath56 , avoider always attaches a good vertex of the highest enforcer s degree .",
    "the setup behind this process is similar to the one in the so - called box game .",
    "let @xmath46 , @xmath57 and @xmath58 be positive integers . in the box game , in each of the moves , the first player claims one element of the board , and the second player claims @xmath46 elements of the board .",
    "the goal of the first player is to claim one of @xmath58 disjoint winning sets of size @xmath57 , and his opponent wants to prevent him from doing that .",
    "we will make use of the following result .    [ box ]",
    "the first player can win the box game when @xmath59 .",
    "avoider s strategy in our game keeps enforcer s maximum degree over all good vertices minimal . theorem  [ box ] with @xmath60 guarantees that this degree can never exceed @xmath61 .",
    "suppose that @xmath62 and there are five bad vertices , @xmath63 .",
    "we show how avoider can reduce the number of bad vertices to four in the two moves that follow .",
    "as we have already seen , a bad vertex @xmath50 is adjacent in enforcer s graph to at least one of every three consecutive vertices on @xmath49 .",
    "these vertices of @xmath49 subdivide the edge set of @xmath49 into paths of length at most three , and we will refer to these as _",
    "blocks_. for every @xmath64 and every edge @xmath39 on @xmath49 , we define @xmath65 as the set of edges in the block to which @xmath39 belongs , in the mentioned subdivision by @xmath66 . as we have seen , @xmath67 is always either 1 , 2 or 3 .    the number of edges claimed by enforcer between @xmath66 and @xmath68 is exactly @xmath69 , for @xmath64 .",
    "the total number of edges claimed by enforcer is not less than @xmath70 on the other hand , we know that enforcer played at most @xmath71 moves in total , that is the number of edges in a @xmath1-degenerate graph , and hence , @xmath72 therefore , there exists an edge @xmath73 such that @xmath74 .",
    "this can only happen if at least four of @xmath67 , @xmath75 , say the first four , are equal to 3 .",
    "therefore , there has to be an edge @xmath76 on @xmath49 incident to @xmath39 such that @xmath77 belong to two of the blocks @xmath65 , @xmath75 , say , @xmath78 and @xmath79 .",
    "by @xmath80 we denote the three consecutive vertices on @xmath49 with @xmath81 , @xmath82 .",
    "since @xmath83 , there still exists an isolated vertex @xmath84 in enforcer s graph . in the following move",
    ", avoider claims the edge @xmath85 .",
    "if enforcer does not claim @xmath86 in his response , avoider claims it immediately .",
    "the vertex @xmath84 is also on @xmath49 now , and four blocks @xmath65 , @xmath87 , are extended to size four in this way .",
    "only two of them can be subdivided by the last two enforcer s moves . hence , some @xmath66 is not bad any more .",
    "on the other hand , if enforcer claims @xmath86 in his response , then avoider claims @xmath88 , and similarly as before , blocks @xmath78 and @xmath79 are extended to size four",
    ". enforcer can subdivide at most one of them in his following move , and the bad vertex corresponding to the other block is not bad any more .",
    "therefore , after this process there are at most four bad vertices .",
    "as long as @xmath89 , avoider keeps attaching good vertices with highest enforcer s degree to @xmath47 . since enforcer s",
    "maximum degree over all good vertices is at most @xmath61 , no other vertex can ever become bad . finally , when there are only bad vertices left , they are isolated in avoider s graph",
    ". therefore , avoider can play at least four more moves without creating a non - outerplanar graph , and the total number of avoider s moves is at least @xmath90 .",
    "@xmath91 +      if @xmath30 is a diamond - free graph on @xmath0 vertices , then the number of edges in @xmath30 is at most @xmath4 .",
    "we show that avoider can survive in the game for nearly that many moves . in figure",
    "[ f : diam ] we see the diamond graph , and an example of a diamond - free graph maximizing the number of edges .",
    "_ proof of theorem  [ th : df ] . _",
    "the upper bound follows from the simple pairing argument at the beginning of the proof of theorem  [ th : op ] .",
    "for the lower bound , we give an explicit strategy for avoider that enables him to play for @xmath5 moves . before performing a detailed analysis ,",
    "let us first sketch avoider s strategy .",
    "the game is divided into two phases . in the first phase ,",
    "avoider fixes two arbitrary vertices @xmath92 and @xmath93 and connects them in his first move .",
    "then , by using a pairing strategy , he creates a spanning tree , consisting of two stars centered at @xmath92 and @xmath93 , and the edge @xmath94 . while doing that , avoider pays attention to certain edge densities in enforcer s graph , preparing the ground for the second phase .",
    "in the second phase , avoider claims a large matching on the leaves of each of the stars . in this way",
    ", he forms a bunch of edge - disjoint triangles along with a bridge and possibly some hanging edges , that is , a diamond - free graph .",
    "next , we describe the first phase in detail .",
    "let @xmath92 and @xmath93 be two vertices , fixed before the game starts .",
    "avoider creates two disjoint stars centered in @xmath92 and @xmath93 . throughout this phase",
    ", we denote the set of vertices adjacent to @xmath95 in avoider s graph by @xmath96 , for @xmath97 .",
    "the set of vertices that are isolated in avoider s graph is denoted by @xmath98 .",
    "we list the rules for avoider s strategy during the first phase .",
    "in the first move , he claims the edge @xmath94 . the rest of the rules follow .",
    "one possible arrangement of edges played is shown in figure  [ f : setup ] .",
    "* whenever enforcer claims an edge @xmath99 , for some @xmath100 , avoider responds by claiming the edge @xmath101 , * if enforcer claims an edge @xmath42 , where @xmath102 , for some @xmath100 , and @xmath103 , then avoider responds with @xmath104 , * if enforcer claims an edge @xmath42 , where @xmath105 , for some @xmath100 , then avoider responds with @xmath106 , for arbitrary @xmath107 , * if enforcer claims an edge @xmath42 , with @xmath108 , then avoider responds by claiming @xmath109 , where @xmath40 is arbitrary , * if enforcer claims an edge between @xmath110 and @xmath111 , then avoider responds by claiming @xmath109 , where @xmath84 is any vertex from @xmath98 , and @xmath40 is arbitrary .",
    "the first phase ends as soon as avoider plays a move after which @xmath112 holds .",
    "let @xmath113 denote the set of edges in enforcer s graph , induced by @xmath114 .",
    "we define the following density measure , @xmath115 we prove that throughout the first phase , after each of his moves , avoider keeps both @xmath116 and @xmath117 to be at most 1 . indeed , the densities from ( [ e : dens ] )",
    "are certainly less than 1 after the very first move of avoider .",
    "next , let us look at a move of enforcer , and the corresponding move of avoider .",
    "checking through all of the rules in avoider s strategy we see that the densities either remain unchanged , or 1 is added to both the numerator and the denominator in ( [ e : dens ] ) .",
    "hence , neither of the densities can exceed 1 .",
    "we proceed to the second phase , in which enforcer plays the first move .",
    "as we have already mentioned , avoider s goal is to build a large matching on both @xmath110 and @xmath111 . throughout this phase ,",
    "as soon as avoider claims an edge @xmath118 , for some @xmath100 , we remove both @xmath119 and @xmath120 from @xmath96 .",
    "the set of rules for avoider s strategy in this phase can now be described .",
    "* if enforcer claims an edge in @xmath96 , for some @xmath100 , avoider responds by claiming an edge also in @xmath96 . otherwise , avoider claims an edge in any of the sets @xmath96 , @xmath100 .",
    "* whenever avoider wants to respond by playing in @xmath96 , @xmath100 , we distinguish two cases : 1 .",
    "if there is an unclaimed edge in @xmath96 that is adjacent to a vertex @xmath46 with maximum enforcer s degree in @xmath96 , avoider claims it .",
    "2 .   if there is no unclaimed edge in @xmath96 that is adjacent to the vertex @xmath46 with maximum enforcer s degree in @xmath96 , avoider removes @xmath46 from @xmath96 , and then claims an edge following again this set of rules .    following these rules",
    "avoider keeps @xmath121 , where @xmath98 in ( [ e : dens ] ) is now the empty set , for @xmath97 . if the above condition in 2 . is satisfied , knowing that @xmath121 , the new set @xmath96 induces at most one enforcer edge , @xmath39 say .",
    "avoider s reply is an edge incident to @xmath39 , and therefore enforcer s graph @xmath122 becomes empty on @xmath96 , and remains empty after every of the following moves of avoider during phase two .",
    "that is , case 2 .",
    "above can happen at most once for each @xmath96 , and whenever it happens avoider can reach a near - perfect matching in that @xmath96 .    if case 2 . does not occur for @xmath96 , @xmath100 , avoider can follow the algorithm until @xmath123 . if @xmath124 , then avoider has reached a near - perfect matching .",
    "the only case when avoider is possibly stuck is @xmath125 , if after enforcer s move , @xmath96 spans a triangle of enforcer s edges .",
    "we conclude that the total number of vertices in @xmath126 that are unsaturated by the two matchings is at most six .",
    "as we have already mentioned , phase two is finished , when the matchings of avoider can not be further extended . by simply counting the edges played ,",
    "the lower bound from the theorem readily follows .",
    "@xmath91 +      before we prove the theorem , notice an alternative way of defining degeneracy : a graph @xmath30 is @xmath1-degenerate if and only if there is a total ordering of @xmath127 such that any vertex has at most @xmath1 preceding neighbors in that ordering .",
    "_ proof of theorem  [ th : kd ] .",
    "_ we exhibit a strategy for avoider to claim the edges of a maximal @xmath1-degenerate graph on @xmath0 vertices in his first @xmath6 moves .",
    "we split the game into two phases .    in the first phase",
    ", avoider wants to create a maximal @xmath1-degenerate graph on significantly less than @xmath0 vertices . in the second phase",
    ", he gradually attaches all the remaining vertices to that graph .",
    "let us now describe both phases in detail . the first phase is subdivided into @xmath1 subphases . in the beginning of the first subphase , avoider picks a vertex @xmath119 , and he repeatedly claims edges adjacent to @xmath119 until he has claimed @xmath128 edges . by @xmath129",
    "we denote the set of vertices adjacent to @xmath119 in avoider s graph at this point . for @xmath130 , in the beginning of the @xmath40-th subphase",
    ", avoider chooses the vertex @xmath131 of minimal degree in enforcer s graph induced on @xmath132 , and connects @xmath133 to some @xmath134 vertices of @xmath132 .",
    "we denote the set of those vertices by @xmath135 .",
    "it remains to show that this can be done , i.e. , before the @xmath40-th subphase there are at least @xmath136 vertices in @xmath132 such that edges between them and @xmath133 are not claimed .",
    "this can be seen as follows .",
    "the total number of moves played in the first @xmath137 subphases is @xmath138 , and the minimum degree in the enforcer s graph taken over all vertices in @xmath132 is not greater than @xmath139 , implying our claim .    after the end of the first phase , avoider s graph induced on the set @xmath140 is a maximal @xmath1-degenerate graph . during the second phase",
    ", the vertices from @xmath141 will be gradually attached to that graph using a pairing strategy .",
    "note that avoider has claimed some edges between @xmath98 and @xmath142 already in the first phase .    for every vertex @xmath143 ,",
    "avoider s first hope is to claim @xmath1 edges between @xmath144 and @xmath98 , including the edges played in the first phase . to check",
    "if that can be done using a pairing strategy , to each @xmath144 we assign the following number ,    @xmath145    here , @xmath146 and @xmath147 stand for the numbers of edges between @xmath144 and @xmath98 claimed by avoider and enforcer , respectively . by @xmath148",
    "we denote all vertices in @xmath141 with @xmath149 , and let @xmath150 . since the total number of edges claimed in the first phase is less than @xmath151 , we know that @xmath152 .",
    "now , for every vertex @xmath153 , avoider will use a simple pairing strategy to claim @xmath1 edges between @xmath50 and @xmath98 , also counting the edges he has already claimed in the first phase . to do that",
    ", he considers @xmath154 unclaimed edges between @xmath50 and @xmath98 , and pairs them up arbitrarily .    for every vertex @xmath155",
    ", avoider aims at connecting it to a larger set , @xmath156 .",
    "he will again use a simple pairing strategy to claim @xmath1 edges between @xmath50 and @xmath156 . to do that",
    ", he considers @xmath154 unclaimed edges and pairs them up arbitrarily .",
    "avoider s strategy for the second phase is the following . whenever enforcer claims one of the paired edges , avoider immediately responds by claiming the other one .",
    "if enforcer claims an edge that does not belong to a pair , then avoider claims an edge in an arbitrary pair , and removes that pair for the rest of the game .",
    "as long as avoider proceeds like this , he will not lose .",
    "indeed , looking at the alternative definition of @xmath1-degeneracy presented in the beginning of this section , we see that any total ordering @xmath157 in which @xmath158 verifies that avoider s graph is @xmath1-degenerate .",
    "when all the pairs are removed he has already claimed a maximal @xmath1-degenerate graph on @xmath0 vertices .",
    "looking at the avoider - enforcer diamond - free game , and the games of non - planarity and non - outerplanarity , we could observe a pattern regarding how long the game lasts .",
    "namely , the number of moves avoider can survive in those games are all just an additive constant away from the upper bound in ( [ e : ob ] ) .",
    "we are curious whether this pattern extends to a larger class of forbidden graphs .      even though our main goal was to prove theorem  [ th : kd ] for constant values of @xmath1 , it turned out that our proof readily holds for all @xmath162 .",
    "we did not make particular efforts to analyze the same problem for larger values of @xmath1 .",
    "still , we think that it would be interesting to find out for how large @xmath1 , in terms of @xmath0 , the statement of theorem  [ th : kd ] still holds ."
  ],
  "abstract_text": [
    "<S> we analyze the duration of the unbiased avoider - enforcer game for three basic positional games . </S>",
    "<S> all the games are played on the edges of the complete graph on @xmath0 vertices , and avoider s goal is to keep his graph outerplanar , diamond - free and @xmath1-degenerate , respectively . </S>",
    "<S> it is clear that all three games are enforcer s wins , and our main interest lies in determining the largest number of moves avoider can play before losing .    </S>",
    "<S> extremal graph theory offers a general upper bound for the number of avoider s moves . as it turns out , for all three games we manage to obtain a lower bound that is just an additive constant away from that upper bound . </S>",
    "<S> in particular , we exhibit a strategy for avoider to keep his graph outerplanar for at least @xmath2 moves , being just @xmath3 short of the maximum possible . </S>",
    "<S> a diamond - free graph can have at most @xmath4 edges , and we prove that avoider can play for at least @xmath5 moves . finally , if @xmath1 is small compared to @xmath0 , we show that avoider can keep his graph @xmath1-degenerate for as many as @xmath6 moves , where @xmath6 is the maximum number of edges a @xmath1-degenerate graph can have . </S>"
  ]
}
{
  "article_text": [
    "the _ complexity _ of a natural number @xmath1 is the least number of @xmath10 s needed to write it using any combination of addition and multiplication , with the order of the operations specified using parentheses grouped in any legal nesting .",
    "for instance , @xmath11 has a complexity of @xmath12 , since it can be written using @xmath12 ones as @xmath13 but not with any fewer than @xmath12 .",
    "this notion was implicitly introduced in 1953 by kurt mahler and jan popken @xcite ; they actually considered an inverse function , the size of the largest number representable using @xmath14 copies of the number @xmath10 .",
    "( more generally , they considered the same question for representations using @xmath14 copies of a positive real number @xmath15 . )",
    "integer complexity was explicitly studied by john selfridge , and was later popularized by richard guy @xcite . following j. arias",
    "de reyna @xcite we will denote the complexity of @xmath1 by @xmath0 .",
    "integer complexity is approximately logarithmic ; it satisfies the bounds @xmath16 the lower bound can be deduced from the result of mahler and popken , and was explicitly proved by john selfridge @xcite .",
    "it is attained with equality for @xmath17 for all @xmath18 .",
    "the upper bound can be obtained by writing @xmath1 in binary and finding a representation using horner s algorithm .",
    "it is not sharp , and the constant @xmath19 can be improved for large @xmath1 @xcite .",
    "based on the above , this author and zelinsky defined the _ defect _ of @xmath1 :    the _ defect _ of @xmath1 , denoted @xmath20 is defined by @xmath21    the defect has proven to be a useful tool in the study of integer complexity . for instance , one outstanding question regarding integer complexity , raised by guy @xcite , is that of the complexity of @xmath22-smooth numbers ; is @xmath23 always equal to @xmath24 , whenever @xmath1 and @xmath14 are not both zero ?",
    "this author and zelinsky used the study of the defect to show in @xcite that this holds true whenever @xmath25 .",
    "this was accomplished by means of a method for , given a real number @xmath26 , determining restrictions on what natural numbers @xmath1 could have @xmath27 .",
    "they defined :    for a real number @xmath28 , the set @xmath29 is the set of all natural numbers with defect less than @xmath26 .",
    "the method worked by first choosing a `` step size '' @xmath30 , and then recursively building up coverings for the sets @xmath31 ; obviously , any @xmath29 can be reached this way . using this method",
    ", one can show :    [ oldmainthmfront ] for any real @xmath32 , there exists a finite set @xmath33 of multilinear polynomials such that for any natural number @xmath1 satisfying @xmath27 , there is some @xmath34 and some nonnegative integers @xmath35 such that @xmath36 .",
    "in other words , given @xmath26 one can find @xmath33 such that @xmath37    it actually proved more : in particular , the polynomials in theorem  [ oldmainthmfront ] are not arbitrary multilinear polynomials , but are of a specific form , for which @xcite introduced the term _ low - defect polynomials_. in particular , low - defect polynomials are in fact _ read - once polynomials _ , as considered in @xcite for instance .",
    "see sections  [ review ] and [ structure ] for more on these polynomials .",
    "this sort of theorem is more powerful than it may appear ; for instance , one can use it to show that the defect has unusual order - theoretic properties @xcite :    ( defect well - ordering theorem ) [ wothm ] the set @xmath38 , considered as a subset of the real numbers , is well - ordered and has order type @xmath39 .",
    "but while this theorem gave a way of representing a covering of @xmath29 , this covering could include extraneous numbers not actually in @xmath29 . in this paper",
    "we remedy this deficiency , and show that the sets @xmath29 themselves can be described by low - defect polynomials , rather than low - defect polynomials merely describing a covering for each @xmath29 .    in order to establish this result",
    ", we introduce a way of `` truncating '' a low - defect polynomial @xmath40 to a given defect @xmath26 , though this replaces one polynomial @xmath40 by a finite set of low - defect polynomials @xmath41 .",
    "if we truncate every polynomial in the set @xmath33 to the defect @xmath26 , we obtain a set @xmath42 of low - defect polynomials so that for any natural number @xmath1 , @xmath27 if and only if @xmath36 for some @xmath43 and some @xmath35 .",
    "so as stated above we are no longer merely covering the set @xmath44 , but representing it exactly .",
    "our main result is as follows .",
    "[ mainthmfront ] for any real @xmath32 , there exists a finite set @xmath42 of multilinear polynomials such that a natural number @xmath1 satisfies @xmath27 if and only if there is some @xmath45 and some nonnegative integers @xmath35 such that @xmath36 .",
    "in other words , given @xmath26 one can find @xmath42 such that @xmath46    this theorem is a special case of a stronger result ; see theorem  [ mainthm ] .",
    "note that it is possible that , for a given @xmath26 , there will be more than one set @xmath42 satisfying the conclusions of theorem  [ mainthmfront ] .",
    "in particular , it s not clear if the @xmath42 generated by the methods of this paper will be minimal in size .",
    "we ask :    for a given @xmath26 , what is the smallest size @xmath47 of a set @xmath42 as above ?",
    "we can also ask what can be said about the function @xmath47 as @xmath26 varies .",
    "it is not monotonic in @xmath26 ; for instance , let us consider what happens as @xmath26 approaches @xmath10 from below .",
    "we use the classification of numbers of defect less than @xmath10 from @xcite . for any @xmath48",
    ", there s a finite set of numbers @xmath49 such that any @xmath1 with @xmath50 can be written as @xmath51 for some @xmath14 . or in other words , @xmath42 necessarily consists of a finite set of constants .",
    "as @xmath26 approaches @xmath10 from below , the required number of these constants approaches infinity , i.e. , @xmath52 .",
    "however , @xmath53 is certainly finite , since all but finitely many of the constants in the @xmath33 for @xmath48 can be grouped together into a single infinite family , @xmath22-represented by the single low - defect polynomial @xmath54 .",
    "the @xmath47 was only required to balloon to infinity as @xmath26 approached @xmath10 from below as for @xmath48 , @xmath33 could not contain this short summary , needing to list each possibility separately .",
    "this lack of monotonicity poses an obstacle for attempts to answer this question simply .",
    "however , one could still possibly obtain a simpler ( and potentially monotonic ) answer if one were to restrict the domain of @xmath26 ; for instance , if one required @xmath26 to be integral .",
    "the main new idea of this paper is the truncation procedure .",
    "we illustrate the truncation procedure by example , demonstrating it . for the more general version , see section  [ sectrunc ] .",
    "if we want to describe the set @xmath29 , we can first use theorem  [ oldmainthmfront ] to obtain a description of a covering set @xmath55 for @xmath29 .",
    "this is the `` building - up '' step .",
    "then we apply the truncation procedure to each element of @xmath55 ; this is the``filtering - down '' step . as an example",
    ", we will consider truncating the polynomial @xmath56 to the defect value @xmath57 .",
    "observe that for any @xmath58 and @xmath59 , one has @xmath60 as illustrated by figure  [ thefig ] .",
    "let us take this as the `` supposed complexity '' of this number .",
    "then the `` supposed defect '' , obtained by subtracting @xmath61 from the `` supposed complexity '' , is equal to @xmath62    now , in reality the actual defect may be less than the `` supposed defect '' ; but we will ignore this for now and just work with the `` supposed defect '' , which we know how to compute . as it will turn out , using",
    "the `` supposed defect '' will still yield the correct result , and we do not need to determine the actual defect ; see remark ( 2 ) below .",
    "[ thefig ]    ( .@xmath63 .",
    "( .@xmath64 .",
    "( .@xmath63 .",
    "( .@xmath64 .",
    "( .@xmath63 .",
    "( .@xmath64 .",
    "` @xmath10 ' ` @xmath10 ' ) ` @xmath65 ' ) ` @xmath10 ' ) ` @xmath66 ' ) ` @xmath10 ' ) ` @xmath67 ' )    so if we were to truncate @xmath40 to a defect of @xmath22 , there would be nothing to do ; the defect of any numbers coming from @xmath40 would already be less than @xmath22 , since they would be at most @xmath68 .",
    "but here we are truncating to @xmath69 , and @xmath40 can indeed yield defects greater than @xmath69 ( for instance , choose @xmath70 , yielding a defect of approximately @xmath71 ) , so it will not be as simple as that .    in the above expression for the `` supposed defect ''",
    ", @xmath72 has a larger effect on the numerical value than @xmath73 does .",
    "we will determine possible values for @xmath72 .",
    "it can easily be checked that for @xmath74 , all the defects produced this way fall below @xmath69 ; for @xmath75 , some are above and some are below ; and for @xmath76 , all of them are above @xmath69 .",
    "so we will exclude @xmath76 from consideration , and mark down the possible values of @xmath72 as being @xmath77 , and @xmath78 ; then we will substitute these in to @xmath40 ( noting that @xmath79 ) to yield new polynomials : @xmath80 , @xmath81 , and @xmath82 .",
    "( we ignore @xmath59 since it has no effect on the `` supposed defect '' . )",
    "we now apply the procedure recursively , truncating each of our new polynomials to @xmath69 .",
    "as noted above , @xmath80 and @xmath81 only produce defects less than @xmath69 , so we do not need to do anything further to truncate them . for @xmath82 , or @xmath83 , we observe that @xmath84 and @xmath85 yield a supposed defect below @xmath69 , while @xmath86 yields supposed defects above @xmath69 .",
    "so once again , we substitute in @xmath87 and @xmath88 to @xmath83 to yield the constant polynomials @xmath89 and @xmath90 , along with our polynomials @xmath80 and @xmath81 from earlier . at this point",
    "we have reached polynomials of degree @xmath91 , so our final set of polynomials is @xmath92 .",
    "if instead the polynomials had more variables , we would have to continue this recursion further .",
    "* remarks .",
    "* ( 1 ) the general version is more complicated , because in general there is not necessarily a linear order on which variables have the most effect on the defect .",
    "nonetheless , the general idea of fixing values for variables , progressing from variables of largest effect to variables of smallest effect , is retained .",
    "\\(2 ) truncating a polynomial @xmath40 to a defect @xmath4 replaces it with a finite set of polynomials that only produce numbers of defect less than @xmath4 .",
    "this leaves the question of why applying this procedure to an appropriate set of polynomials should yield all numbers with defect less than the chosen cutoff , rather than only some of them .",
    "this is where a stronger version of theorem  [ oldmainthmfront ]  theorem  [ oldmainthm ] below , taken from @xcite  is needed .",
    "this theorem ensures that , for any given @xmath4 , not only is there a finite set @xmath93 of polynomials which represent all numbers with defect less than @xmath4 by substituting in powers of @xmath22 ; but in fact that it represents all such numbers `` with the correct complexity '' .",
    "hence , if we truncate all of them to a defect of @xmath4 , those with defect at least @xmath4 will be filtered out simply by the nature of the procedure ; and those with defect less than @xmath4 will be kept , since each will be represented `` with the correct complexity '' by some polynomial , and thus kept when that particular polynomial is truncated . see sections  [ review ] and [ sectrunc ] for more detail",
    "it is worth discussing here some work analogous to this paper in the study of addition chains .",
    "an _ addition chain _ for @xmath1 is defined to be a sequence @xmath94 such that @xmath95 , @xmath96 , and , for any @xmath97 , there exist @xmath98 such that @xmath99 ; the number @xmath4 is called the length of the addition chain .",
    "the shortest length among addition chains for @xmath1 , called the _ addition chain length _ of @xmath1 , is denoted @xmath100 .",
    "addition chains were introduced in 1894 by h.  dellac @xcite and reintroduced in 1937 by a.  scholz @xcite ; extensive surveys on the topic can be found in knuth ( * ? ? ?",
    "* section 4.6.3 ) and subbarao @xcite .",
    "the notion of addition chain length has obvious similarities to that of integer complexity ; each is a measure of the resources required to build up the number @xmath1 starting from @xmath10 .",
    "both allow the use of addition , but integer complexity supplements this by allowing the use of multiplication , while addition chain length supplements this by allowing the reuse of any number at no additional cost once it has been constructed .",
    "furthermore , both measures are approximately logarithmic ; the function @xmath100 satisfies @xmath101",
    "a difference worth noting is that @xmath100 is actually known to be asymptotic to @xmath102 , as was proved by brauer@xcite , but the function @xmath0 is not known to be asymptotic to @xmath103 ; the value of the quantity @xmath104 remains unknown . as mentioned above , guy @xcite has asked whether @xmath105 for @xmath106 ; if true , it would make this quantity at least @xmath107 .",
    "j.  iraids et .",
    "@xcite have checked that this is true for @xmath108 .",
    "another difference worth noting is that unlike integer complexity , there is no known way to compute addition chain length via dynamic programming . specifically , to compute integer complexity this way",
    ", one may use the fact that for any @xmath109 ,    @xmath110    by contrast , addition chain length seems to be harder to compute .",
    "suppose we have a shortest addition chain @xmath111 for @xmath1 ; one might hope that @xmath112 is a shortest addition chain for @xmath113 , but this need not be the case .",
    "an example is provided by the addition chain @xmath114 ; this is a shortest addition chain for @xmath115 , but @xmath116 is not a shortest addition chain for @xmath117 , as @xmath118 is shorter .",
    "moreover , there is no way to assign to each natural number @xmath1 a shortest addition chain @xmath119 for @xmath1 such that @xmath112 is the addition chain assigned to @xmath113 @xcite .",
    "this can be an obstacle both to computing addition chain length and proving statements about addition chains .",
    "nevertheless , there are important similarities between integer complexity and addition chains . as mentioned above",
    ", the set of all integer complexity defects is a well - ordered subset of the real numbers , with order type @xmath39 .",
    "we might also define the notion of _ addition chain defect _ ,",
    "defined by @xmath120 for as shown @xcite by this author , theorem  [ wothm ] has an analogue for addition chains :    the set @xmath121 , considered as a subset of the real numbers , is well - ordered and has order type @xmath39 .",
    "theorem  [ mainthmfront ] seems to have a partial analogue for addition chains in the work of a.  flammenkamp @xcite .",
    "as mentioned above , this author introduced the addition chain defect @xmath122 , but a closely related quantity , the number of _ small steps _ of @xmath1 , was introduced by knuth @xcite .",
    "the number of small steps of @xmath1 is defined by @xmath123 clearly , this is related to @xmath122 by @xmath124 .    in 1991 , a.  flammenkamp @xcite determined a method for producing descriptions of all numbers @xmath1 with @xmath125 for a given integer @xmath14 , and produced such descriptions for @xmath126 .",
    "note that for @xmath14 an integer , @xmath125 if and only if @xmath127 , so this is the same as determining all @xmath1 with @xmath127 , restricted to the case where @xmath14 is an integer .",
    "part of what flammenkamp proved may be summarized as the following :    for any integer @xmath128 , there exists a finite set @xmath129 of polynomials ( in any number of variables , with nonnegative integer coefficients ) such that for any @xmath1 , one has @xmath125 if and only if one can write @xmath130 for some @xmath131 and some integers @xmath132 .",
    "note that this only allows integer @xmath14 , as opposed to theorem  [ mainthmfront ] , which allows arbitrary real @xmath26 .",
    "also , the polynomials used in flammenkamp s method are more complicated than those produced by theorem  [ mainthmfront ] ; for instance , they can not always be taken to be multilinear .",
    "in this section we review the results of @xcite and @xcite regarding the defect @xmath20 , the stable complexity @xmath133 and stable defect @xmath134 described below , and low - defect polynomials .",
    "first , some basic facts about the defect :    [ oldprops ] we have :    1 .   for all @xmath1 , @xmath135 .",
    "2 .   for @xmath128 , @xmath136 , with equality",
    "if and only if @xmath137 . the difference @xmath138 is a nonnegative integer .",
    "a number @xmath1 is stable if and only if for any @xmath128 , @xmath139 .",
    "if the difference @xmath140 is rational , then @xmath141 for some integer @xmath14 ( and so @xmath142 ) . 5 .   given any @xmath1 , there exists @xmath14 such that @xmath143 is stable .",
    "6 .   for a given defect @xmath144 , the set @xmath145 has either the form @xmath146 for some @xmath1 and @xmath147 , or the form @xmath148 for some @xmath1 .",
    "this latter occurs if and only if @xmath144 is the smallest defect among @xmath149 for @xmath150 . 7 .   if @xmath151 , then @xmath152 . 8 .",
    "@xmath153 , and for @xmath106 , @xmath154 .",
    "no other integers occur as @xmath20 for any @xmath1",
    "if @xmath151 and @xmath1 is stable , then so is @xmath49",
    ".    parts ( 1 ) through ( 8) , excepting part ( 3 ) , are just theorem  2.1 from @xcite .",
    "part ( 3 ) is proposition  12 from @xcite , and part ( 9 ) is proposition  3.1 from @xcite .    also ,",
    "although it will not be a focus of this paper , we will sometimes want to consider the set of all defects :    we define the _ defect set _",
    "@xmath155 to be @xmath156 , the set of all defects .",
    "the paper @xcite also defined the notion of a _ stable defect _ :    we define a _ stable defect _ to be the defect of a stable number .",
    "because of part ( 9 ) of theorem  [ oldprops ] , this definition makes sense ; a stable defect @xmath144 is not just one that is the defect of some stable number , but one for which any @xmath1 with @xmath157 is stable .",
    "stable defects can also be characterized by the following proposition from @xcite :    [ modz1 ] a defect @xmath144 is stable if and only if it is the smallest @xmath158 such that @xmath159 .",
    "we can also define the _ stable defect _ of a given number , which we denote @xmath134 .    for a positive integer @xmath1 , define the _ stable defect _ of @xmath1 , denoted @xmath134 , to be @xmath149 for any @xmath14 such that @xmath143 is stable .",
    "( this is well - defined as if @xmath143 and @xmath160 are stable , then @xmath161 implies @xmath162 , and so does @xmath163 . )",
    "note that the statement `` @xmath144 is a stable defect '' , which earlier we were thinking of as `` @xmath164 for some stable @xmath1 '' , can also be read as the equivalent statement `` @xmath165 for some @xmath1 '' .",
    "we then have the following facts relating the notions of @xmath0 , @xmath20 , @xmath133 , and @xmath134 :    [ stoldprops ] we have :    1 .",
    "@xmath166 2 .",
    "@xmath134 is the smallest @xmath167 such that @xmath168 .",
    "3 .   @xmath169 4 .",
    "@xmath170 5 .",
    "@xmath171 , with equality if and only if @xmath1 is stable",
    "@xmath172 , with equality if and only if @xmath1 is stable .",
    "these are just propositions  3.5 , 3.7 , and 3.8 from @xcite .",
    "as has been mentioned in section  [ intro ] , we are going to represent the set @xmath44 by substituting in powers of @xmath22 into certain multilinear polynomials we call _ low - defect polynomials_. we will associate with each one a `` base complexity '' to from a _ low - defect pair_. in this section we will review the basic properties of these polynomials .",
    "first , their definition :    [ polydef ] we define the set @xmath173 of _ low - defect pairs _ as the smallest subset of @xmath174\\times { { \\mathbb n}}$ ] such that :    1 .   for any constant polynomial @xmath175 $ ] and any @xmath176",
    ", we have @xmath177 .",
    "2 .   given @xmath178 and @xmath179 in @xmath173 , we have @xmath180 , where , if @xmath181 is in @xmath182 variables and @xmath183 is in @xmath184 variables , @xmath185 3 .",
    "given @xmath186 , @xmath187 , and @xmath188 , we have @xmath189 where @xmath190 is as above .    the polynomials obtained this way will be referred to as _ low - defect polynomials_. if @xmath191 is a low - defect pair , @xmath192 will be called its _ base complexity_.",
    "if @xmath40 is a low - defect polynomial , we will define its _ absolute base complexity _ , denoted @xmath193 , to be the smallest @xmath192 such that @xmath191 is a low - defect pair .",
    "we will also associate to a low - defect polynomial @xmath40 the _ augmented low - defect polynomial _ @xmath194    note that the degree of a low - defect polynomial is also equal to the number of variables it uses ; see proposition  [ polystruct ]",
    ". we will often refer to the `` degree '' of a low - defect pair @xmath191 ; this refers to the degree of @xmath40 .",
    "also note that augmented low - defect polynomials are never low - defect polynomials ; as we will see in a moment ( proposition  [ polystruct ] ) , low - defect polynomials always have nonzero constant term , whereas augmented low - defect polynomials always have zero constant term .",
    "we can also observe , as mentioned above , that low - defect polynomials are in fact read - once polynomials .",
    "note that we do not really care about what variables a low - defect polynomial ( or pair ) is in  if we permute the variables of a low - defect polynomial or replace them with others , we will still regard the result as a low - defect polynomial .",
    "from this perspective , the meaning of @xmath195 could be simply regarded as `` relabel the variables of @xmath40 and @xmath196 so that they do not share any , then multiply @xmath40 and @xmath196 '' .",
    "helpfully , the @xmath190 operator is associative not only with this more abstract way of thinking about it , but also in the concrete way it was defined above .    in @xcite",
    "were proved the following propositions about low - defect pairs :    [ polystruct ] suppose @xmath40 is a low - defect polynomial of degree @xmath4 .",
    "then @xmath40 is a polynomial in the variables @xmath197 , and it is a multilinear polynomial , i.e. , it has degree @xmath10 in each of its variables .",
    "the coefficients are non - negative integers .",
    "the constant term is nonzero , and so is the coefficient of @xmath198 , which we will call the _ leading coefficient _ of @xmath40 .",
    "[ basicub ] if @xmath191 is a low - defect pair of degree @xmath4 , then @xmath199 and @xmath200    this is a combination of proposition  4.5 and corollary  4.12 from @xcite .    because of this",
    ", it makes sense to define :    given a low - defect pair @xmath191 ( say of degree @xmath4 ) and a number @xmath201 , we will say that @xmath191 _ efficiently @xmath22-represents _ @xmath201 if there exist nonnegative integers @xmath202 such that @xmath203 we will say @xmath204 efficiently @xmath22-represents @xmath201 if there exist @xmath205 such that @xmath206 more generally , we will also say @xmath40 @xmath22-represents @xmath201 if there exist nonnegative integers @xmath202 such that @xmath207 . and similarly with @xmath208",
    ".    note that if @xmath191 ( or @xmath204 ) efficiently @xmath22-represents some @xmath201 , then @xmath209 ( respectively , @xmath210 efficiently @xmath22-represents @xmath201 , which means that in order for @xmath191 ( or @xmath204 to @xmath22-represent anything efficiently at all , we must have @xmath211 .",
    "however it is still worth using low - defect pairs rather than just low - defect polynomials since we may not always know @xmath193 . in our applications here , where we want to compute things , taking the time to compute @xmath193 , rather than just making do with an upper bound , may not be desirable .",
    "for this reason it makes sense to use `` @xmath40 efficiently @xmath22-represents @xmath201 '' to mean `` some @xmath191 efficiently @xmath22-represents @xmath201 '' or equivalently `` @xmath209 efficiently @xmath22-reperesents @xmath201 '' . similarly with @xmath208 .    in keeping with the name , numbers @xmath22-represented by low - defect polynomials , or their augmented versions , have bounded defect .",
    "let us make some definitions first :    given a low - defect pair @xmath191 , we define @xmath212 , the defect of @xmath191 , to be @xmath213 , where @xmath214 is the leading coefficient of @xmath40 .",
    "when we are not concerned with keeping track of base complexities , we will use @xmath215 to mean @xmath216 .    given a low - defect pair @xmath191 of degree @xmath4",
    ", we define @xmath217    then we have :    [ dftbd ] let @xmath191 be a low - defect pair of degree @xmath4 , and let @xmath205 be nonnegative integers .    1 .",
    "we have @xmath218 and the difference is an integer .",
    "we have @xmath219 and if @xmath220 , this inequality is strict .",
    "this is a combination of proposition  4.9 and corollary  4.14 from @xcite .",
    "in fact , not only is @xmath212 an upper bound on the values of @xmath221 , it is the least upper bound :    [ supdfts ] let @xmath191 be a low - defect pair , say of degree @xmath4 . then @xmath221 is a strictly increasing function in each variable , and @xmath222    we can define @xmath196 , the reverse polynomial of @xmath40 : @xmath223",
    "so @xmath196 is a multilinear polynomial in @xmath224 , with the coefficient of @xmath225 in @xmath196 being the coefficient of @xmath226 in @xmath40 . by proposition  [ polystruct ]",
    ", @xmath40 has nonnegative coefficients , so so does @xmath196 ; since the constant term of @xmath40 does not vanish , the @xmath198 term of @xmath196 does not vanish . hence @xmath196 is strictly increasing in each variable .    then",
    "@xmath227 which is strictly increasing in each variable , as claimed .",
    "furthermore , if @xmath214 is the leading coefficient of @xmath40 , then it is also the constant term of @xmath196 , and so @xmath228 thus @xmath229    with this , we have the basic properties of low - defect polynomials .",
    "now we will briefly discuss the `` building - up '' method from @xcite and @xcite that restricts what numbers may lie in @xmath44 .",
    "the new `` filtering - down '' half , truncation , will have to wait for section  [ sectrunc ] .",
    "first , we will need the idea of a _ leader _",
    ":    a natural number @xmath1 is called a _ leader _ if it is the smallest number with a given defect . by part ( 6 ) of theorem  [ oldprops ] , this is equivalent to saying that either @xmath230 , or , if @xmath231 , then @xmath232 , i.e. , @xmath233 .",
    "let us also define :    for any real @xmath234 , define the set of _ @xmath4-defect numbers _",
    "@xmath44 to be @xmath235 define the set of _",
    "@xmath4-defect leaders _",
    "@xmath236 to be @xmath237    these sets are related by the following proposition from @xcite :    [ arbr ] for every @xmath238 , there exists a unique @xmath239 and @xmath128 such that @xmath240 and @xmath151 ; then @xmath241 .",
    "because of this , we can focus on describing @xmath236 , and derive @xmath44 from it .",
    "the paper @xcite showed how to inductively build up coverings of the sets @xmath236 .",
    "it provided the base case @xcite in the form of the following theorem :    [ finite ] for every @xmath144 with @xmath242 , the set of leaders @xmath243 is a finite set .",
    "it then showed how to inductively build up coverings for the sets @xmath243 , @xmath244 , @xmath245 , again subject to the restriction that @xmath246 . by applying this with @xmath144 arbitrarily close to @xmath10",
    ", the paper @xcite obtained the following result :    [ oldmainthm ] for any real @xmath247 , there exists a finite covering set @xmath93 for @xmath236 .",
    "furthermore , we can choose @xmath93 such that each @xmath248 has degree at most @xmath249 .    in this paper , we will actually not need the bound on the degree of the polynomials ; the truncation operation will always output low - defect pairs with appropriately bounded degree , regardless of the degrees of the inputs .",
    "this allows the possibility of building up a covering @xmath93 by a different method , rather than the particular method of @xcite .",
    "this includes the possibility of using the same method , but with a smaller step size @xmath144 .",
    "in this section we will go further into the structure of low - defect polynomials . in order to do this",
    ", we will investigate the expressions that give rise to them .",
    "that is to say , if we have a low - defect polynomial @xmath40 , it was constructed according to rules ( 1)(3 ) in definition  [ polydef ] ; each of these rules though gives a way not just of building up a polynomial , but an expression .",
    "for instance , we can build up the polynomial @xmath250 by using rule ( 1 ) to make @xmath78 , then using rule ( 3 ) to make @xmath251 , then using rule ( 2 ) to make @xmath252 .",
    "the polynomial @xmath250 itself does not remember its history , of course ; but perhaps we want to remember its history  in which we do not want to consider the _ polynomial _ @xmath250 , but rather the _ expression _",
    "@xmath253 , which is different from the expression @xmath250 , which has a different history .    strictly speaking , it is possible to prove many of the theorems about low - defect polynomials in this and the next section purely by structural induction , using just the rules ( 1)(3 ) in definition  [ polydef ] .",
    "but introducing low - defect expressions is more enlightening ; it makes it clear why , for instance , the nesting ordering ( see definition  [ defnest ] ) takes the form of a forest .",
    "so , with that , we define :    a _ low defect expression _ is defined to be a an expression in positive integer constants , @xmath64 , @xmath254 , and some number of variables , constructed according to the following rules :    1 .",
    "any positive integer constant by itself forms a low - defect expression .",
    "2 .   given two low - defect expressions using disjoint sets of variables , their product is a low - defect expression .",
    "if @xmath255 and @xmath256 are low - defect expressions , we will use @xmath257 to denote the low - defect expression obtained by first relabeling their variables to disjoint and then multiplying them .",
    "3 .   given a low - defect expression @xmath258 , a positive integer constant @xmath259 , and a variable @xmath15 not used in @xmath258 , the expression @xmath260 is a low - defect expression .",
    "( we can write @xmath261 if we do not know in advance that @xmath15 is not used in @xmath258 . )    and , naturally , we also define :    we define an _ augmented low - defect expression _ to be an expression of the form @xmath262 , where @xmath258 is a low - defect expression and @xmath15 is a variable not appearing in @xmath258 .",
    "if @xmath258 is a low - defect expression , we also denote the augmented low - defect expression @xmath263 by @xmath264 .",
    "it is clear from the definitions that evaluating a low - defect expression yields a low - defect polynomial , and that evaluating an augmented low - defect expression yields an augmented low - defect polynomial .",
    "note also that low - defect expressions are read - once expressions , so , as mentioned earlier , low - defect polynomials are read - once polynomials .",
    "we can helpfully represent a low - defect expression by a rooted tree , with the vertices and edges both labeled by positive integers .",
    "note , some information is lost in this representation  but , as it happens , nothing we will care about ; it turns out that while knowing some of the history of a low defect polynomial is helpful , knowing the full expression it originated from is more than is necessary .",
    "the tree representation is frequently more convenient to work with than an expression , as it does away with such problems as , for instance , @xmath117 and @xmath265 being separate expressions .",
    "in addition , trees can be treated more easily combinatorially ; in a sequel paper@xcite , we will take advantage of this to estimate how many elements of @xmath44 lie below a given bound @xmath15 .",
    "so we define :    given a low - defect expression @xmath258 , we define a corresponding _ low - defect tree _",
    "@xmath266 , which is a rooted tree where both edges and vertices are labeled with positive integers .",
    "we build this tree as follows :    1 .",
    "if @xmath258 is a constant @xmath1 , @xmath266 consists of a single vertex labeled with @xmath1 .",
    "2 .   if @xmath267 , with @xmath268 the tree for @xmath269 , @xmath266 consists of @xmath268 with a new root attached to the root of @xmath268 .",
    "the new root is labeled with a @xmath10 , and the new edge is labeled with @xmath259 .",
    "3 .   if @xmath270 , with @xmath271 and @xmath272 the trees for @xmath255 and @xmath256 respectively , we construct @xmath258 by `` merging '' the roots of @xmath255 and @xmath256  that is to say , we remove the roots of @xmath255 and @xmath256 and add a new root , with edges to all the vertices adjacent to either of the old roots ; the new edge labels are equal to the old edge labels .",
    "the label of the new root is equal to the product of the labels of the old roots .",
    "see figure  [ treeexamp ] for an example illustrating this construction .",
    "child node[circle , draw ] @xmath10 child node[circle , draw ] @xmath273 child node[circle , draw ] @xmath22 edge from parent node[left ] @xmath10 edge from parent node[left ] @xmath274 child node[circle , draw ] @xmath78 edge from parent node[right]@xmath10 edge from parent node[right]@xmath10 ;    we can use these trees to define a notion of equivalence for expressions :    two low - defect expressions are said to be equivalent if their corresponding trees are isomorphic .",
    "( here isomorphism must preserve both the root and all labels . )    furthermore , every such tree occurs in this way :    [ treeexist ] every rooted tree , with vertices and edges labeled by positive integers , occurs ( up to isomorphism ) as the tree for some low - defect expression .",
    "call the tree @xmath266 .",
    "we prove this by induction on the number of vertices .",
    "if @xmath266 has only one vertex , the root , labeled @xmath1 , it occurs as the tree for the low - defect expression @xmath1 .",
    "otherwise , the tree has more than one vertex , i.e. , the root has at least one child .",
    "if the root has only one child , let @xmath268 be the tree obtained by deleting the root of @xmath266 , and let @xmath269 be a low - defect expression that yields it .",
    "if the root is labeled @xmath1 and the unique edge off of it is labeled @xmath259 , and @xmath15 is a variable not appearing in @xmath269 , then the expression @xmath275 is a low - defect expression that yields @xmath266 .",
    "( if @xmath276 , we may omit the multiplication by @xmath1 . )    finally , the root could have more than one child ; call its children @xmath277 , and call its label @xmath1 . then for @xmath278 ,",
    "let @xmath279 be the tree obtained by removing all vertices except the root and the descendants of @xmath280 , and relabeling the root to have a label of @xmath10 .",
    "then for each @xmath281 we can pick a low - defect expression @xmath282 that yields @xmath279 ; then the expression @xmath283 is a low - defect expression that yields @xmath266 .",
    "( again , if @xmath276 , we may omit the multiplication by @xmath1 . )",
    "because of proposition  [ treeexist ] , we can use the term `` low - defect tree '' to simply refer to a rooted tree with vertices and edges labeled by positive integers .",
    "also , among the various expressions in an equivalence class ( i.e. , that yield the same tree ) , the one constructed by proposition  [ treeexist ] is one we d like to pick out :    given a low - defect tree @xmath266 , a low - defect expression for it generated by the method of proposition  [ treeexist ] ( with multiplications by @xmath10 omitted ) will be called a _ reduced _ low - defect expression for @xmath266 .    as mentioned above , passing from an expression @xmath258 to",
    "its tree @xmath266 loses a little bit of information , but not very much .",
    "we can , in fact , completely characterize when two expressions will yield the same tree :    [ tediousness ] two low - defect expressions @xmath258 and @xmath269 are equivalent if and only if one can get from @xmath258 to the @xmath269 by applying the following transformations to subexpressions :    1 .   for low - defect expressions @xmath255 and @xmath256 ,",
    "one may replace @xmath284 by @xmath285 .",
    "2 .   for low - defect expressions",
    "@xmath255 , @xmath256 , and @xmath286 , one may replace @xmath287 by @xmath288 , and vice versa .",
    "3 .   for integer constants @xmath1 and @xmath49 , one may replace @xmath289 by the constant @xmath290 ; and for an integer constant @xmath14 with @xmath291 , one may replace @xmath14 by @xmath292 .",
    "this latter rule may only be applied if @xmath14 does not appear as an addend in a larger expression .",
    "4 .   for a low - defect expression @xmath255 ,",
    "one may replace @xmath293 by @xmath255 , and vice versa .",
    "one may rename all the variables in @xmath258 , so long as distinct variables remain distinct .",
    "( this transformation can only be applied to @xmath258 as a whole , not subexpressions . )",
    "it s clear that all these moves do not change the tree .",
    "the problem is proving that all equivalences come about this way .",
    "suppose @xmath266 is the tree for @xmath258 , @xmath268 is the tree for @xmath269 , and @xmath294 is an isomorphism .",
    "we induct on the number of vertices of @xmath266 , the label of the root , and the structure of @xmath258 and @xmath269 .",
    "first we consider the case where either @xmath258 or @xmath269 is a product . in this case",
    ", we decompose @xmath258 and @xmath269 until we have written each as a product of low - defect expressions which themselves are not products .",
    "each of these factors can either be written as @xmath295 for some low - defect expression @xmath296 , some @xmath15 not appearing in @xmath296 , and some @xmath259 ; or as a natural number constant .",
    "say @xmath297 and @xmath298 , where the @xmath282 and @xmath299 have the former form and the @xmath300 are constants .",
    "( due to rules ( 1 ) and ( 2 ) , we do not need to worry about parenthesization or the order of the factors . )",
    "note that by assumption , @xmath301 , and at least one of them is at least @xmath78 .",
    "let @xmath279 denote the tree of @xmath282 and @xmath302 denote the tree of @xmath299 .",
    "then we can conclude that the root of @xmath266 has @xmath4 children , and that @xmath279 can be formed from @xmath266 by removing , along with all their descendants , all the children of the root except child @xmath281 , and changing the label of the root to @xmath10 . similarly with @xmath302 and the @xmath303 children of its root .",
    "similarly , if we let @xmath201 denote the product of the @xmath300 , and @xmath304 the product of the @xmath305 , we see that @xmath201 is the label of the root of @xmath266 , and @xmath304 the label of the root of @xmath268 . since @xmath266 and @xmath268 are isomorphic , then , we have @xmath306 , @xmath307 , and @xmath308 maps the children of the root of @xmath266 to the children of the root of @xmath268 .",
    "this allows us to construct isomorphisms @xmath309 , where @xmath310 is a fixed permutation in the group @xmath311 . by the inductive hypothesis ,",
    "then , each @xmath282 can be turned into @xmath312 by use of moves of type ( 1)-(5 ) ; we can then use rules ( 1 ) and ( 2 ) to put these back in the original order .",
    "( note that rule ( 5 ) should be applied all at once , at the end , so as to ensure that no two distinct variables are ever turned into the same variable . )",
    "meanwhile , the product @xmath313 may be turned into the product @xmath201 by moves of type ( 3 ) and ( 4 ) ( type ( 4 ) is necessary if @xmath314 ; note that in this case we can not have @xmath315 ) .",
    "but @xmath306 , which can be turned back into the product @xmath316 by moves of type ( 3 ) and ( 4 ) as well .",
    "this concludes the case where either @xmath258 or @xmath269 is a product .    in the case where neither @xmath258 nor @xmath269 is a product",
    ", @xmath258 can either be an integer constant @xmath1 , or it can be of the form @xmath295 , where @xmath296 is a low - defect expression , @xmath15 is a variable not appearing in @xmath296 , and @xmath259 is an integer constant . in the former case , @xmath266 has no non - root vertices , so neither does @xmath268 ; since we assumed @xmath269 is not a product , this means it too is an integer constant @xmath317 .",
    "however , @xmath1 is the label of the unique vertex of @xmath266 , and @xmath317 that of @xmath268 , and since @xmath318 , this implies @xmath319 .",
    "thus @xmath258 and @xmath269 are simply equal , and no moves need be applied .",
    "finally , we have the case where @xmath320 as above . in this case",
    ", we must also be able to similarly write @xmath321 , as if @xmath269 were a constant , @xmath258 would be as well by the above argument .",
    "let @xmath322 and @xmath323 denote the trees of @xmath296 and @xmath324 , respectively .",
    "then @xmath266 consists of @xmath322 together with a new root adjoined with a label of @xmath10 , with the unique edge off of it labeled @xmath259 ; and the relation between @xmath268 , @xmath323 , and @xmath325 is the same .",
    "then since @xmath326 , we conclude that @xmath327 and @xmath328 . by the inductive hypothesis ,",
    "then , @xmath322 may be transformed into @xmath323 by moves of type ( 1)-(5 ) ; this transforms @xmath266 from @xmath295 to @xmath329 , where @xmath330 is some variable not appearing in @xmath324 .",
    "( since when applying rule ( 5 ) , one may have to rename @xmath15 if one changes one of the variables of @xmath296 to @xmath15 . )",
    "one may then apply rule ( 5 ) again to replace @xmath330 by @xmath331 , completing the transformation into @xmath269 .",
    "this proves the proposition .",
    "this tells us also :    [ ttof ] if @xmath255 and @xmath256 are equivalent low - defect expressions that both yield the tree @xmath266 , they also yield the same low - defect polynomial @xmath40 , up to renaming of the variables . that is to say , up to renaming of the variables",
    ", it is possible to determine @xmath40 from @xmath266 .    with the exception of renaming the variables , all of the moves allowed in proposition  [ tediousness ] consist of replacing subexpressions with other subexpressions that evaluate to the same thing .",
    "this proves the claim .",
    "note that inequivalent expressions ( distinct trees ) can also give rise to the same polynomial ; for instance , @xmath253 and @xmath250 are inequivalent expressions both yielding the polynomial @xmath250 ( see figure  [ inequiv ] ) .",
    "however we will see in section  [ subsecorder ] that from the polynomial @xmath40 we can recover at least the `` shape '' of @xmath266 , i.e. , the isomorphism class of the rooted but unlabeled tree underlying @xmath266 .",
    "child node[circle , draw]@xmath78 edge from parent node[left ] @xmath10 ;    child node[circle , draw]@xmath117 edge from parent node[left ] @xmath78 ;    now , the non - root vertices of the tree correspond to the variables of the original expression :    let @xmath258 be a low - defect expression and @xmath266 the corresponding tree .",
    "we recursively define a bijection between the variables of @xmath258 and the non - root vertices of @xmath266 as follows :    1 .",
    "if @xmath258 is an integer constant @xmath1 , then it has no variables , and @xmath266 has no non - root vertices , and the bijection is the trivial one .",
    "if @xmath267 , with @xmath268 the tree for @xmath269 , then we use the correspondence between variables of @xmath269 and the non - root vertices of @xmath268 to associate variables of @xmath269 with vertices of @xmath332 ; and we assign the root of @xmath268 to correspond to the variable @xmath15 .",
    "if @xmath270 , with @xmath271 and @xmath272 the trees for @xmath255 and @xmath256 respectively , then we use the correspondence between variables of @xmath255 and non - root vertices of @xmath271 to associate variables of @xmath255 with vertices of @xmath333 ; and we do similarly with @xmath256 and @xmath272",
    ".    see figure  [ bijexamp ] for an illustration of this bijection .",
    "child node[circle , draw ] @xmath334 child node[circle , draw ] @xmath335 child node[circle , draw ] @xmath336 edge from parent node[left ] @xmath10 edge from parent node[left ] @xmath274 child node[circle , draw ] @xmath337 edge from parent node[right]@xmath10 edge from parent node[right]@xmath10 ;    equivalently , each variable can be thought of as corresponding to an edge rather than to a non - root vertex ; if the variable @xmath15 corresponds to the vertex @xmath338 , we can instead think of it as corresponding to the edge between @xmath338 and the parent of @xmath338 .",
    "if we think of variables as corresponding to vertices , however , then we can imagine the root as corresponding to the extra variable in the augmented low - defect expression @xmath264 , although this analogy is not perfect .",
    "this bijection , placing the variables of @xmath258 on the tree , shows us that the variables of a low - defect expression do not all play the same role . in section  [ sectrunc ]",
    ", we will make extensive use of the variables corresponding to leaves .",
    "see also remark  [ maxlrem ] regarding the variables corresponding to the children of the root . in the following subsection",
    ", we will begin to lay out the details of how this works .      given a low - defect expression",
    ", we will define a partial order , the nesting order , on its set of variables .",
    "first , let us make the following observation :    let @xmath258 be a low - defect expression .",
    "each variable of @xmath258 appears exactly once in @xmath258 , and there is a smallest low - defect subexpression of @xmath258 that contains it .    by definition , a variable of @xmath258 appears in @xmath258 .",
    "a variable of @xmath258 can not appear twice in @xmath258 , as no rule of constructing low - defect expressions allows this ; rule ( 2 ) only allows multiplying two low - defect expressions if their variables are disjoint , and rule ( 3 ) can only introduce a new variable different from the ones already in @xmath258 .    for the second part ,",
    "observe that rule ( 3 ) is the only rule that introduces new variables ; so say @xmath15 is some variable of @xmath258 , it must have been introduced via rule ( 3 ) .",
    "this means that it occurs in a subexpression of @xmath258 of the form @xmath339 , where @xmath269 is a low - defect expression and @xmath259 is a positive integer constant . since @xmath15 itself is not a low - defect expression , and neither is @xmath340 , the next - smallest subexpression containing @xmath15 , i.e. , @xmath341 , is the smallest low - defect subexpression of @xmath258 that contains @xmath15 .    because of this",
    ", it makes sense to define :    [ defnest ] let @xmath258 be a low - defect expression .",
    "let @xmath15 and @xmath330 be variables appearing in @xmath258 .",
    "we say that @xmath342 under the nesting ordering for @xmath258 if @xmath15 appears in the smallest low - defect subexpression of @xmath258 that contains @xmath330 .",
    "this is , in fact , a partial order :    the nesting ordering for a low - defect expression @xmath258 is a partial order .",
    "we have @xmath343 as @xmath15 appears in any expression containing @xmath15 .",
    "if @xmath342 and @xmath344 , then the smallest low - defect expression containing @xmath345 also contains @xmath330 , and hence contains the smallest low - defect expression containing @xmath330 , and hence contains @xmath15 . and",
    "if @xmath342 and @xmath346 , then the smallest low - defect expression containing each is contained in the other , i.e. , the smallest low - defect expression containing @xmath15 is the smallest low - defect expression containing @xmath330 . since the former has the form @xmath347 , and the latter has the form @xmath348 , we must have @xmath349 .",
    "in fact , it s not just any partial order ",
    "it s a partial order that we ve already sort of seen ; it s the partial order coming from the bijection between variables of a low - defect expression @xmath258 and non - root vertices of its tree @xmath266 .",
    "[ treeorder ] let @xmath258 be a low - defect expression , and let @xmath266 be the corresponding tree .",
    "then @xmath342 under the nesting ordering if and only if the vertex in @xmath266 corresponding to @xmath15 is a descendant of the vertex in @xmath266 corresponding to @xmath330 .",
    "we prove this by structural induction on @xmath258 . if @xmath258 is an integer constant , then there are no variables and the statement is trivial .    in the case where @xmath350 , say @xmath268 is the tree corresponding to @xmath269 .",
    "suppose @xmath351 and @xmath352 are variables of @xmath258 . if @xmath351 and @xmath352 are both variables of @xmath269 , then by the inductive hypothesis , @xmath353 in the nesting ordering in @xmath269 if and only if the vertex corresponding to @xmath351 in @xmath268 is a descendant of that corresponding to @xmath352 .",
    "however , it is clear that @xmath353 in the nesting ordering of @xmath269 if and only if @xmath353 in the nesting ordering of @xmath258 , since the smallest low - defect subexpression of @xmath269 containing @xmath352 is necessarily also the smallest low - defect subexpression of @xmath258 containing @xmath352 ; and similarly with the corresponding vertices .",
    "hence the proposition is proved in this case .",
    "otherwise , we must have that one of the variables is @xmath15 itself ; say the variables are @xmath15 and @xmath331 .",
    "but in that case we automatically have that @xmath354 , and the vertex for @xmath331 is a descendant of that of @xmath15 .",
    "this leaves the case where @xmath270 ; say @xmath271 and @xmath272 are the trees corresponding to @xmath255 and @xmath256 . if @xmath351 and @xmath352 are both variables of @xmath255 , then by the inductive hypothesis , @xmath353 in the nesting ordering in @xmath255 if and only if the vertex corresponding to @xmath351 in @xmath271 is a descendant of that corresponding to @xmath352 ; but as above , it does not matter if we consider this in @xmath255 and @xmath271 or @xmath258 and @xmath266 .",
    "similarly the statement holds if @xmath351 and @xmath352 are both variables of @xmath256 .",
    "finally , if @xmath351 is a variable of @xmath255 and @xmath352 is a variable of @xmath256 , then @xmath351 and @xmath352 are incomparable in the nesting ordering , as the smallest low - defect subexpression containing @xmath351 is contained in @xmath255 and hence does not contain @xmath352 , and vice versa ; and , correspondingly , the corresponding vertices are incomparable in @xmath266 .",
    "now , we ve already seen ( corollary  [ ttof ] ) that it is possible to determine the low - defect polynomial @xmath40 for a low - defect expression @xmath258 from its tree @xmath266 .",
    "in fact , not only is it possible to do so , but we can write down an explicit description of the terms of @xmath40 in terms of @xmath266 . specifically :    [ ttofformula ] let @xmath266 be a low - defect tree ( say with root @xmath355 ) and @xmath40 the corresponding low - defect polynomials after assigning variables to the non - root vertices of @xmath266 ; let @xmath356 denote the variable corresponding to the vertex @xmath338 .",
    "then for a subset @xmath5 of @xmath357 , the monomial @xmath358 appears in @xmath40 in and only if the subgraph induced by @xmath359 is a subtree of @xmath266 .",
    "furthermore , its coefficient is given by @xmath360 the constant term corresponds to the subtree @xmath361 , and the leading term is the term corresponding to all of @xmath266 .",
    "let @xmath258 be a low - defect expression giving rise to @xmath266 ; we use structual induction on @xmath258 . if @xmath258 is an integer constant @xmath1 , then @xmath266 consists of just a root labeled with @xmath1 .",
    "so the only rooted subtree of @xmath266 is @xmath266 itself , containing no non - root vertices ; and , correspondingly , @xmath40 has a unique term , containing no variables , and with coefficient @xmath1 , which matches the formula given .",
    "if @xmath350 , say @xmath268 and @xmath362 are the tree and the polynomial arising from @xmath269 .",
    "let @xmath363 be the vertex of @xmath266 corresponding to @xmath15 , which is also the root of @xmath268 .",
    "then a rooted subtree of @xmath266 consists of either just @xmath355 , or @xmath355 together with a rooted subtree of @xmath268 .",
    "correspondingly , since @xmath364 , a term of @xmath40 is either @xmath15 times a term of @xmath40 , or just @xmath259 .",
    "the subtree @xmath361 contains no non - root vertices and so corresponds to @xmath259 ; since the root is labeled with a @xmath10 and the sole edge out of it is labeled with a @xmath259 , the formula for the coefficient is correct .",
    "any other rooted subtree @xmath365 consists of @xmath355 together with a rooted subtree @xmath366 or @xmath268 ; @xmath366 corresponds to some term @xmath367 of @xmath362 .",
    "then we have a term @xmath368 in @xmath40 , which corresponds to @xmath365 , since the old root of @xmath268 is also the vertex @xmath363 .",
    "furthermore , the coefficient matches that given by the formula , changing @xmath366 to @xmath365 just means adding in the vertex @xmath355 and the edge @xmath369 ; however , @xmath355 has a label of @xmath10 , not changing the product , and the label of the edge @xmath369 is irrelevant as both vertices are in @xmath365 .",
    "( moreover , no edges drop out of the product , as the only new vertex is @xmath355 , and its only edge is @xmath369 . ) and since every term of @xmath40 is either @xmath259 or of the form @xmath368 for some term @xmath367 of @xmath362 , every term arises in this way .",
    "this leaves the case where @xmath370 ; say each @xmath282 gives rise to a trees @xmath279 and a polynomial @xmath371 , and let @xmath280 denote the root of @xmath279 .",
    "then a rooted subtree of @xmath266 consists of @xmath361 together with subsets @xmath372 and @xmath373 such @xmath374 is a rooted subtree of @xmath279 .",
    "correspondingly , @xmath375 , so each term of @xmath40 is the product of a term of @xmath181 and a term of @xmath183 ; since @xmath181 and @xmath183 have no variables in common , terms @xmath376 are determined uniquely by the pair @xmath377 , which by the inductive hypothesis are in bijection with sets @xmath378 as described above .",
    "it remains to check that the coefficients match .",
    "say @xmath379 and @xmath380 are subsets as described above , with each @xmath381 corresponding to a term @xmath382 of @xmath371 , so that the subtree @xmath383 corresponds to the term @xmath376 .",
    "then the product of the labels of vertices in @xmath384 is the product of the labels of vertices in @xmath385 times @xmath386 , the latter of which is equal to @xmath387 , so this is the same as the product of the labels of vertices in @xmath388 times the product of the labels of vertices in @xmath389 .",
    "meanwhile , the product over the edges is also the product of both the previous ones , as the only edges that could change are those that connected @xmath379 to @xmath390 or @xmath380 to @xmath391 , all of which were previously not in the product due to having both vertices in one of the @xmath392 ; but these now connect @xmath379 and @xmath380 to @xmath355 , with both vertices in @xmath383 , so they still are not in the product .",
    "finally , the leading term corresponds to all of @xmath266 as it contains all the variables , and the constant term corresponds to @xmath361 as it contains none of the variables .",
    "this yields the following corollary , which will be useful in section  [ sectrunc ] :    [ excludedminl ] let @xmath258 be a low - defect expression and @xmath40 the corresponding low - defect polynomial .",
    "any term of @xmath40 other than the leading term must exclude at least one minimal variable .",
    "consider the low - defect tree corresponding to @xmath258 .",
    "any subtree other than the whole tree must exclude at least one leaf , i.e. , the corresponding term of @xmath40 must exclude at least one minimal variable .",
    "it also , in particular , tells us the leading coefficient of @xmath40 in terms of the @xmath266 , which we will use in section  [ bdsec ] :    [ leadcoefftree ] let @xmath266 be a low - defect tree , and @xmath40 be the corresponding low - defect polynomial .",
    "then the leading coefficient of @xmath40 is the product of the vertex labels of @xmath266 .",
    "the leading term corresponds to the subtree consisting of all of @xmath266 .",
    "this includes all the vertices ; and no edge has exactly one vertex in it , as all edges have both vertices in it .",
    "now , as we ve already noted above , we can not go backwards from @xmath40 to determine @xmath266 ; the map from trees to polynomials is not one - to - one .",
    "however , we can go part of the way back  we can determine the `` shape '' of @xmath266 , that is to say , the isomorphism class of the rooted but unlabeled tree underlying @xmath266 ; it is only the labels we can not determine with certainty .    to do this , for a low - defect polynomial @xmath40 , consider the set of monomials that appear in @xmath40 , without their associated coefficients ; ignoring the nesting ordering for a moment",
    ", these monomials can be partially ordered by divisibility .",
    "but we can , in fact , recover the nesting ordering ( and thus the shape of @xmath266 , without labels ) from this partial ordering .",
    "first , a definition :    let @xmath258 be a low - defect expression yielding a low - defect tree @xmath266 and a low - defect polynomial @xmath40 ; let @xmath15 be a variable in @xmath258 and @xmath363 the corresponding vertex in @xmath266 .",
    "we define the _ key _ of @xmath15 in @xmath258 to be the term of @xmath40 corresponding to the subtree consisting of all ancestors of @xmath363 .",
    "we define the _ anti - key _ of @xmath15 in @xmath258 to be the term of @xmath40 corresponding to the subtree consisting of all non - descendants of @xmath363 .",
    "so the key of @xmath15 is the smallest term of @xmath40 containing @xmath15 ( under divisibility ignoring coefficients ) , and the anti - key of @xmath15 is the largest term not containing @xmath15 .",
    "both these operations , key and anti - key , are order - reversing :    [ recoverorder ] let @xmath258 be a low - defect expression , and let @xmath15 and @xmath330 be variables appearing in @xmath258 .",
    "then @xmath342 under the nesting ordering if and only if the key of @xmath330 divides the key of @xmath15 ( ignoring coefficients ) , which also occurs if and only if the anti - key of @xmath330 divides the anti - key of @xmath15 .",
    "let @xmath266 be the low - defect tree determined by @xmath258 , and let @xmath363 and @xmath393 be the vertices corresponding to @xmath15 and @xmath330 . by proposition  [ treeorder ] ,",
    "@xmath342 if and only if , @xmath363 is a descendant of @xmath393 .",
    "but if @xmath363 is a descendant of @xmath393 , then every ancestor of @xmath393 is an ancestor of @xmath363 , and so ( ignoring coefficients ) , the key of @xmath330 divides the key of @xmath15 .",
    "conversely , if the key of @xmath330 divides the key of @xmath15 , then @xmath330 divides the key of @xmath15 , and so @xmath393 is an ancestor of @xmath363 .",
    "similarly , if @xmath363 is a descendant of @xmath393 , then every non - descendant of @xmath393 is a non - descendant of @xmath363 , and so the anti - key of @xmath330 divides the anti - key of @xmath15 ( ignoring coefficients ) .",
    "convesely , if the anti - key of @xmath330 divides the anti - key of @xmath15 , then every non - descendant of @xmath393 is a non - descendant of @xmath363 , i.e. , every descendant of @xmath363 is a descendant of @xmath393 , i.e. , @xmath363 is a descendant of @xmath393 and so @xmath342 .",
    "thus , from @xmath40 alone , the nesting ordering on the variables can be recovered ; for as we saw above , it is possible from @xmath40 alone to determine the key and the anti - key of some variable in @xmath40 ( so we can speak simply of `` the key of @xmath15 in @xmath40 '' , or `` the anti - key of @xmath15 in @xmath40 '' ) . but",
    "by proposition  [ recoverorder ] , if @xmath15 and @xmath330 are variables in @xmath40 , and we know their keys or anti - keys , we can determine whether or not @xmath342 , without needing to know the tree or expression that @xmath40 came from ; it does not depend on those things .",
    "thus it makes sense to simply talk about the nesting ordering on the variables of @xmath40 .",
    "furthermore this means we can also recover the shape of @xmath266 from @xmath40 alone ; the vertex corresponding to @xmath15 is a child of the vertex corresponding to @xmath330 if and only if @xmath342 and there are no other variables inbetween , and the vertex corresponding to @xmath15 is a child of the root if and only if @xmath15 is maximal in the nesting ordering .    indeed , we can , given @xmath40 , determine all trees @xmath266 that yield it . by above",
    ", we know the shape , and which variables correspond to which vertices , and proposition  [ ttofformula ] constrains the vertex and edge labels  indeed , it not only constrains them , it bounds them ( as every label divides at least one coefficient of @xmath40 ) , making it possible to determine all @xmath266 that yield @xmath40 ( and thus to determine @xmath193 via brute - force search .",
    "( one can also use this procedure to determine if @xmath40 is a low - defect polynomial at all , if one does not already know . ) but this is rather more involved than what is needed to compute the complexity of a low - defect expression or tree !    [ maxlrem ] it is the minimal variables of @xmath40 will turn out to be quite important in section  [ sectrunc ] , but it s worth noting that the maximal variables have a use too  in @xcite , the proposition was proved ( lemma  4.3 ) that if @xmath40 is a low - defect polynomial of degree at least @xmath10 , there exists a variable @xmath15 , low - defect polynomials @xmath196 and @xmath394 , and a positive integer @xmath259 such that @xmath395 . with this framework  if we allow for the use of commutativity and associativity  we can easily see that these @xmath15 are precisely the maximal variables of @xmath40 .      in this section , we will discuss the notion of the complexity of a low - defect expression , tree , or polynomial , and use this to prove a lower bound on the complexity of a low - defect polynomial ( corollary  [ polycpxbd ] ) .",
    "this lower bound is what allows us to show that truncation will keep the degrees of our polynomials low despite our use of small step sizes ( see discussion in section  [ buildsec ] ) .",
    "a low - defect expression has an associated base complexity :    we define the complexity of a low - defect expression @xmath258 , denoted @xmath396 , as follows :    1 .",
    "if @xmath258 is a positive integer constant @xmath1 , we define @xmath397 .",
    "if @xmath258 is of the form @xmath398 , where @xmath255 and @xmath256 are low - defect expressions , we define @xmath399 .",
    "if @xmath258 is of the form @xmath400 , where @xmath269 is a low - defect expression , @xmath15 is a variable , and @xmath259 is a positive integer constant , we define @xmath401 .    in section  [ review ]",
    "we defined @xmath193 , for a low - defect polynomial @xmath40 , to be the smallest @xmath192 such that @xmath191 is a low - defect pair . above",
    ", we also defined the notion of @xmath396 for @xmath258 a low - defect expression .",
    "these are compatible as follows :    let @xmath40 be a low - defect polynomial . then @xmath193 is the smallest value of @xmath396 among low - defect expressions @xmath258 that evaluate to @xmath40 .",
    "the rules for building up a low - defect pair @xmath191 are exactly the same as the rules for building a low - defect expression @xmath258 , and what these rules do to the base complexity @xmath192 is exactly the same as what they do to the complexity @xmath396 ( except that they allow for increasing @xmath192 further ) .",
    "so each low - defect pair @xmath191 comes from some low - defect expression @xmath258 yielding @xmath40 with @xmath402 , and any low - defect expression @xmath258 yielding @xmath40 yields a low - defect pair @xmath403 .",
    "so the lowest possible value of @xmath192 and of @xmath396 are the same .    indeed ,",
    "though we will not use this formalism here , it may make sense to consider `` low - defect expression pairs '' , pairs @xmath404 where @xmath258 is a low - defect expression and @xmath405 .",
    "after all , the definition of @xmath396 assumes one knows the complexities of the integer constants appearing in @xmath396 , but one may not know these exactly , but only have an upper bound on them . for instance , one might not be using low - defect expressions as we defined them here , but rather ones where , instead of integer constants , one has representations of integers in terms of @xmath10 , @xmath64 , and @xmath254 .",
    "that is to say , perhaps one is not using expressions such as @xmath253 , but rather such as @xmath406 . in this example , the expressions used for the integer constants were most - efficient , but this may not be the case in general . in this case , it would make sense to consider the complexity of the expression to be simply the number of @xmath10 s used , which would be an upper bound on the complexity of the low - defect expression it yields .",
    "this sort of only having an upper bound is , after all , the reason we consider pairs @xmath191 , and it may make sense in other contexts to do with expressions as we do here with polynomials .    since we like to encode low - defect expressions as trees , it makes sense to define the complexity of these :    the complexity of a low - defect tree , @xmath407 , is defined to be the smallest @xmath396 among all low - defect expressions yielding @xmath266 .    note that it follows from this definition",
    "that for a low - defect polynomial @xmath40 , @xmath193 can be equivalently characterized as the smallest @xmath407 among all trees @xmath266 yielding @xmath40 .",
    "again , it may make sense in other contexts to consider pairs @xmath408 with @xmath409 , for the same reasons discussed above .",
    "if , however , we do know the complexity of arbitrary natural numbers , then the complexities of expressions and of trees can be computed as follows :    [ exprcpxbd ] we have :    1 .",
    "let @xmath258 be a low - defect expression .",
    "then @xmath396 is equal to the sum of the complexities of all the integer constants occurring in @xmath258 .",
    "2 .   let @xmath266 be a low - defect tree .",
    "then @xmath410 where @xmath411 denotes the label of the given vertex or edge .",
    "the first statement is a straightforward structural induction .",
    "if @xmath258 is a constant , its complexity is the complexity of that constant . if @xmath412 , its complexity is @xmath413 , which by the inductive hypothesis is the sum of the complexities of all the constants used in either . and if @xmath350 , its complexity is @xmath414 , which by the inductive hypothesis is the sum of the complexities of the constants used in @xmath269 plus that of the new constant introduced .    for the second statement , consider a reduced low - defect expression @xmath258 giving rise to @xmath266 .",
    "then the edge and vertex labels correspond exactly to the constants used in @xmath258 , with the exception of labels of @xmath10 on non - leaf vertices . as @xmath415",
    ", this shows that the formula above is an upper bound on @xmath407 . for the lower bound , note that by proposition  [ tediousness ] , any other low - defect expression for @xmath266 can be obtained by @xmath258 by the listed moves .",
    "moves of the form ( 1 ) , ( 2 ) , and ( 5 ) do not alter the complexity of an expression at all .",
    "this leaves moves of type ( 3 ) and ( 4 ) .",
    "suppose ( 3 ) or ( 4 ) is going to be applied to a subexpression @xmath269 ; consider @xmath269 as a product ( possibly of one thing ) and consider the largest product @xmath416 containing the factors of @xmath269 as factors .",
    "that is to say , let @xmath416 be the largest subexpression of the form @xmath417 ( where due to ( 1 ) and ( 2 ) , we do not need to worry about parenthesization or order ) where the @xmath282 can not be written as products , and the factors of @xmath269 are among the @xmath282 .",
    "since ( 3 ) and ( 4 ) , applied to factors of @xmath416 , only alter things within @xmath416 , and do not alter the internals of any @xmath282 which can be written as a sum , we see that the least complexity is obtained by minimizing the complexity of each individual product @xmath416 . but this is clearly done by multiplying together all constants and eliminating @xmath10 s where possible .",
    "this leaves us with an expression which is the same as @xmath258 up to moves of the form ( 1 ) , ( 2 ) , and ( 5 ) .",
    "hence @xmath258 has the lowest complexity among expressions for @xmath266 , and so @xmath418 , which as noted , is given by the formula .    with this",
    ", we now obtain our lower bound :    [ polycpxbd ] let @xmath191 be a low - defect pair of degree @xmath14 , and suppose that @xmath214 is the leading coefficient of @xmath40",
    ". then @xmath419 .",
    "equivalently , if @xmath40 is a low - defect polynomial of degree @xmath14 with leading coefficient @xmath214 , then @xmath420 .",
    "let @xmath266 be a low - defect tree giving rise to @xmath40 with @xmath409 .",
    "then @xmath421 that is , applying corollary  [ leadcoefftree ] , it is at least the number of edges plus @xmath422 . since the number of edges is one less than the number of vertices , the number of edges is @xmath14 .",
    "so @xmath423 .",
    "the second statement then follows as @xmath193 is by definition the smallest @xmath192 among low - defect pairs @xmath191 .",
    "in particular , the degree of a polynomial is bounded by its defect :    [ polydftbd ] let @xmath191 be a low - defect pair of degree @xmath14 , and suppose that @xmath214 is the leading coefficient of @xmath40 . then @xmath424 .",
    "equivalently , @xmath425 .    by definition ,",
    "so @xmath427 and @xmath428 .",
    "the second statement then follows as @xmath215 is just the smallest value of @xmath212 among low - defect pairs @xmath191 .",
    "now , finally , we can describe the operation of truncating a low - defect polynomial ( or expression , or tree ) to a given defect ",
    "the `` filtering - down '' half of our method .",
    "the results here will be phrased in terms of low - defect pairs , but the analogues for low - defect expressions are clear .",
    "first we just describe truncating a low - defect polynomial in general :    [ dirtrunc ] let @xmath191 be a low - defect pair , say of degree @xmath4 , and suppose @xmath429 is a variable of @xmath40 which is minimal with respect to the nesting ordering .",
    "let @xmath430 be an integer , and define @xmath431 then :    1 .",
    "the polynomial @xmath196 is a low - defect polynomial , and @xmath432 is a low - defect pair .",
    "if @xmath214 is the leading coefficient of @xmath40 , then the leading coefficient of @xmath196 is strictly greater than @xmath433 , and so @xmath434 .",
    "the nesting order on the variables of @xmath196 is the restriction of the nesting order on the variables of @xmath40 to @xmath435 .",
    "4 .   for any @xmath436 , we have @xmath437    let @xmath258 be a low - defect expression of complexity at most @xmath192 giving rise to @xmath40",
    "; we apply structural induction to prove parts ( 1 ) , ( 2 ) , and ( 3 ) .",
    "note that @xmath258 can not be an integer constant as then it would have no variables .",
    "if @xmath350 , there are two cases ; either @xmath269 has degree @xmath91 , or it has positive degree . in the former case , @xmath15 is the unique minimal variable , so @xmath438 ; say @xmath269 evaluates to the constant @xmath1 and has complexity at most @xmath439 .",
    "then @xmath196 is equal to the constant @xmath440 , which can be given by a low - defect expression .",
    "furthermore , the complexity of this low - defect expression is at most @xmath441 , so @xmath432 is a low - defect pair . and whereas the leading coefficient of @xmath40 was @xmath1 , the leading coefficient of @xmath196 is @xmath442 . finally , @xmath196 has no variables , so part ( 3 ) is trivially true .    otherwise , if @xmath269 has positive degree , then @xmath15 is not minimal , and the minimal variables in @xmath258 are precisely the minimal variables in @xmath269 .",
    "assume without loss of generality that @xmath443 .",
    "say @xmath269 has complexity at most @xmath439 .",
    "let @xmath362 be the polynomial coming from @xmath269 , and @xmath444 then by the inductive hypothesis , @xmath445 is a low - defect polynomial , coming from some low - defect expression @xmath446 with complexity at most @xmath447 .",
    "so @xmath196 is a low - defect polynomial as it comes from the low - defect expression @xmath448 , which has complexity at most @xmath449 and if @xmath214 is the leading coefficient of @xmath40 , then it is also the leading coefficient of @xmath362 , and so by the inductive hypothesis the leading coefficient of @xmath445 is greater than @xmath433 , but the leading coefficient of @xmath196 is the same as that of @xmath445 .",
    "finally , by the inductive hypothesis , the nesting order on the variables of @xmath445 is the restriction of the nesting order of the variables of @xmath362 , and the nesting order on the variables of @xmath196 is the same as that on the variables of @xmath445 , but with @xmath450 added as a new maximum element ; since the same relation holds between the nesting order for @xmath40 and the nesting order for @xmath362 , part ( 3 ) is true in this case .",
    "this leaves the case where @xmath370 . in this case , a minimal variable of @xmath258 is either a minimal variable of @xmath255 or a minimal variable of @xmath256 .",
    "suppose without loss of generality that @xmath451 and @xmath452 .",
    "say @xmath255 and @xmath256 give rise to polynomials @xmath362 and @xmath394 , and @xmath255 has complexity at most @xmath453 . then if we define @xmath454 by the inductive hypothesis , @xmath445 is a low - defect polynomial , coming from some low - defect expression @xmath269 with complexity at most @xmath447 .",
    "so @xmath196 is a low - defect polynomial as it comes from the low - defect expression @xmath455 , which has complexity at most @xmath456 . and",
    "if @xmath457 is the leading coefficient of @xmath362 and @xmath458 is the leading coefficient of @xmath394 , then the leading coefficient of @xmath459 is @xmath460 , while by the inductive hypothesis , the leading coefficient of @xmath196 is strictly greater than @xmath461 , and so the leading coefficient of @xmath462 is strictly greater than @xmath463 .",
    "finally , the nesting order on the variables of @xmath196 is just the disjoint union of the nesting order on the variables of @xmath445 and the nesting order on the variables of @xmath394 , and the same relation holds between the nesting order for @xmath40 and the nesting order for @xmath362 . by the inductive hypothesis ,",
    "the nesting order for @xmath445 is just the restriction of that for @xmath362 , so the same relation holds between @xmath196 and @xmath40 .    to prove the second statement in part",
    "( 2 ) , we note that if @xmath214 is the leading coefficient of @xmath40 and @xmath464 is the leading coefficient of @xmath196 , since @xmath465 , @xmath466    finally , part ( 4 ) follows as @xmath467    let @xmath191 be a low - defect pair , and let @xmath468 be obtained from it as in proposition  [ dirtrunc ] ; we will call @xmath468 a _ direct truncation _ of @xmath40 , and @xmath196 an direct truncation of @xmath40 .    furthermore , we will define @xmath468 to be a _ truncation _ of @xmath191 if there are low - defect pairs @xmath469 with @xmath470 a direct truncation of @xmath471 . similarly in this case we say @xmath196 is a truncation of @xmath40 .",
    "immediately we get :    [ truncind ] say @xmath191 is a low defect pair and @xmath468 is a truncation of it .",
    "then :    1 .   @xmath472 .",
    "the nesting order on the variables of @xmath196 is the restriction of the nesting order on the variables of @xmath40 .",
    "this follows immediately from iterating parts ( 2 ) and ( 3 ) of proposition  [ dirtrunc ] .",
    "so , when we truncate @xmath40 , we are substituting powers of @xmath22 into some of the variables , and leaving the other variables free .",
    "say @xmath40 has degree @xmath4 , and consider the function @xmath473 from @xmath474 to @xmath475 ; when we truncate @xmath40 , we are fixing the values of some of the @xmath476 . in a sense",
    ", we are restricting @xmath40 to a subset of @xmath474 fo the form @xmath477 , where each @xmath478 is either a single point or all of @xmath479 .",
    "as such we will want a way of talking about such sets ; we will represent them by elements of @xmath480 , where here @xmath481 is just an abstract symbol which is distinct from any whole number ; it represents `` this position can be any number '' , or the set @xmath479 , where putting in an actual number @xmath1 would represent `` this position must be @xmath1 '' , or the set @xmath482 .",
    "let us formally define our way of getting a set from such an object , how we can substitute these objects into low - defect polynomials :    given @xmath483 , we define @xmath484 to be the set @xmath485    furthermore , given @xmath486 $ ] , we define the @xmath22-substitution of @xmath487 into @xmath40 to be the polynomial obtained by substituting @xmath488 for @xmath429 whenever @xmath489 . if @xmath191 is a low - defect pair , we define the @xmath22-substitution of @xmath487 to be @xmath468 where @xmath196 is the @xmath22-substitution of @xmath487 into @xmath40 , and @xmath490 .    be warned that in general , @xmath22-substituting into a low - defect pair may not yield a low - defect pair , if one substitutes into the wrong variables .",
    "for instance , if @xmath491 , then @xmath22-substituting in @xmath492 yields @xmath493 , which is not a low - defect pair . and",
    "if @xmath494 , and one @xmath22-substitutes in @xmath495 , then one obtains @xmath496 , the first element of which is not a low - defect polynomial at all .    however , in what follows , we will only be using this notion in cases where it does , in fact , turn out to be a low - defect pair .",
    "specifically , in the following cases :    let @xmath191 be a low - defect pair , and let @xmath497 be such that the set of @xmath281 for which @xmath489 corresponds to a downward - closed subset of the variables of @xmath40 .",
    "let @xmath468 denote the @xmath22-substitution of @xmath487 into @xmath191 .",
    "then :    1 .",
    "the pair @xmath468 is a truncation of @xmath191 ( and hence a low - defect pair ) .",
    "2 .   let @xmath498 be the number of @xmath281 such that @xmath499 , and let @xmath500 be the map from @xmath501 to @xmath474 given by inserting the arguments @xmath502 into the coordinates of @xmath487 where @xmath499",
    ". then @xmath503 .",
    "furthermore , all truncations of @xmath191 arise in this way .",
    "we first prove part ( 1 ) .",
    "let @xmath504 be the indices for which @xmath489 , enumerated in an order such that if @xmath505 then @xmath506 .",
    "let @xmath507 .",
    "now , for @xmath508 , given @xmath509 , we will take @xmath510 to be the direct truncation of @xmath509 where @xmath511 is substituted into @xmath512 . of course",
    ", in order for this to be a direct truncation , @xmath512 must be minimal in @xmath513 .",
    "but this follows due to the order we have enumerated the elements ; by assumption , each @xmath512 is minimal in @xmath514 , and since @xmath515 is downwardly closed in @xmath516 , we have that @xmath514 is downwardly closed in @xmath517 , and so @xmath512 is minimal in @xmath517 .",
    "and by proposition  [ truncind ] , this last set is precisely the set of variables of @xmath518 , with the same nesting order .",
    "thus this is indeed a truncation .",
    "part ( 2 ) follows by simply iterating part ( 4 ) of proposition  [ dirtrunc ] in the above .",
    "finally , we can see that every truncation arises in this way by inducting on the number of steps in the truncation .",
    "if there are no steps , then this is true with @xmath519 .",
    "otherwise , say that @xmath520 is an @xmath26-step truncation of @xmath191 and that @xmath521 is a direct truncation of it ; we assume by induction that @xmath520 is the @xmath22-substitution into @xmath191 of some tuple @xmath497 .",
    "then @xmath521 is the @xmath22-substitution into @xmath520 of some tuple @xmath522 ( here @xmath523 .",
    "this makes it the @xmath22-substitution into @xmath191 of some tuple @xmath524 , where @xmath525 when @xmath489 , and @xmath526 for one particular @xmath281 with @xmath499 .",
    "so , in fact , we ll only be using @xmath22-substitution in cases where it yields a truncation ; or , really , we ll just be using it as another way of thinking about truncation .",
    "having discussed truncation in general , we can now discuss how to truncate a low - defect polynomial to a given defect .",
    "earlier , in proposition  [ supdfts ] , we showed that for a low - defect pair @xmath191 , the number @xmath212 is the least upper bound of the values of @xmath221 .",
    "now we show that something stronger is true :    [ minlimit ] let @xmath191 be a low - defect pair of degree @xmath4 .",
    "say @xmath512 , for @xmath527 , are the minimal variables of @xmath40 .",
    "then @xmath528 ( where the other @xmath476 remain fixed ) .",
    "consider once again @xmath196 , the reverse polynomial of @xmath40 : @xmath223 so @xmath196 is a multilinear polynomial in @xmath224 , with the coefficient of @xmath225 in @xmath196 being the coefficient of @xmath226 in @xmath40 .",
    "let @xmath214 denote the leading coefficient of @xmath40 , which is also the constant term of @xmath196 .",
    "by corollary  [ excludedminl ] , every non - leading term of @xmath40 excludes some minimal variable .",
    "hence every non - constant term of @xmath196 includes some minimal variable .",
    "so if we once again write @xmath529 we see that as the minimal variables approach infinity , then each non - constant term of @xmath530 approaches @xmath91 , and so @xmath530 approaches @xmath214 .",
    "so once again we have    @xmath531    one can obtain numerical versions of this proposition , but we do not bother to state them here .",
    "we can restate this proposition as follows :    [ dirtrunc2 ] let @xmath191 be a low - defect pair , say of degree @xmath532 , let @xmath533 be a real number .",
    "then there exists a number @xmath534",
    "such that , whenever @xmath535 , then @xmath536 for some @xmath281 such that @xmath429 is minimal in the nesting ordering for @xmath40 .    by proposition  [ minlimit ] ,",
    "since @xmath537 , we can choose some @xmath534 such that @xmath538 , where @xmath539 if @xmath429 is minimal in the nesting ordering and @xmath540 otherwise . then if for some @xmath541 we have @xmath542 , then since @xmath221 is increasing in all variables , there is some @xmath281 such that @xmath543 .    with this",
    ", we can now finally describe truncating a low - defect pair to a specified defect :    [ thmtrunc ] let @xmath191 be a low - defect pair , say of degree @xmath4 , let @xmath32 be a real number , and let @xmath544",
    ". then there exists a finite set @xmath545 such that :    1 .",
    "we have @xmath546 .",
    "2 .   for each @xmath547 in @xmath266 , the set of @xmath281 for which @xmath489 corresponds to a subset of the variables of @xmath40 which is downward closed ( under the nesting ordering ) ; hence if @xmath468 denotes the @xmath22-substitution of @xmath547 into @xmath191 , then @xmath468 is a truncation of @xmath191 . furthermore , we have @xmath548 , and hence @xmath549 ; and if @xmath196 has degree @xmath91 , the former inequality is strict .",
    "we prove the statement by induction on @xmath4 .",
    "suppose @xmath315 , that is to say , @xmath40 is a constant @xmath1 . if @xmath550 , then we may take @xmath551 , where here @xmath552 indicates the unique element of @xmath553 . for @xmath554 , and @xmath555",
    "as well , for @xmath556 .",
    "so the first condition is satisfied . for the second condition ,",
    "the set of indices used is the empty set , we have @xmath557 ( hence @xmath468 is trivially a truncation ) , and so @xmath558 .    otherwise , if @xmath559 , we take @xmath560 , so @xmath561 . since , as was noted above , @xmath562 , we have @xmath563 , and hence @xmath564 ; thus the first condition is satisfied .",
    "the second condition is satisfied trivially .",
    "now suppose that @xmath532 . once again , we have two cases . if @xmath565 , then we may take @xmath566 . by proposition  [ dftbd ] , for any @xmath567",
    ", we have @xmath568 , i.e. @xmath569 , satisfying the first condition . for the second condition",
    ", we once again have that the set of indices used is the null set , so @xmath557 , and so is trivially a truncation , and @xmath570 .",
    "this leaves the case where @xmath532 and @xmath537 . in this case",
    ", we may apply corollary  [ dirtrunc2 ] , and choose a @xmath534 such that whenever @xmath535 , then @xmath571 for some @xmath281 which is minimal in the nesting ordering .",
    "that is to say , if we define @xmath572 then @xmath573 , and for each @xmath574 , the @xmath22-substitution of @xmath547 into @xmath191 is a direct truncation of @xmath191 .",
    "however , we still do not necessarily have that @xmath548 , nor do we necessarily have equality in the first condition .",
    "this is where we apply the inductive hypothesis .    for each @xmath575 ,",
    "let @xmath576 be the @xmath22-substitution of @xmath547 into @xmath191 ; this is a direct truncation of @xmath191 .",
    "apply the inductive hypothesis to each @xmath577 to obtain @xmath578 .",
    "we can then pull this back to @xmath579 ; since @xmath580 for some position @xmath281 and some number @xmath476 , we can pull back @xmath581 ( where here we may have @xmath582 ) to @xmath583 .",
    "finally we can take @xmath584 .",
    "it remains to show that @xmath266 has the desired properties .",
    "say we have an element of @xmath266 ; it is an element of some @xmath585 , i.e. , with the notation above , it has the form @xmath586 for some @xmath587 .",
    "say @xmath580 .",
    "the indices used in @xmath588 correspond to some downward closed subset of the variables of @xmath576 , i.e.  to a downward closed subset of @xmath435 . since @xmath429 is minimal in @xmath516 , adding it in again results in a downward closed set .",
    "now we check that @xmath589 .",
    "say @xmath535 ; then there is some @xmath281 with @xmath429 minimal and @xmath536 .",
    "let @xmath547 be the corresponding element of @xmath590 and @xmath577 as above . then by proposition  [ dirtrunc ] , @xmath591 , and so @xmath592 , and so @xmath593 , as needed .",
    "suppose now that we take an element of @xmath266 ; write it as @xmath594 for some @xmath547 and some @xmath587 , using the notation above .",
    "then @xmath595 can also be obtained by @xmath22-susbtituting @xmath588 into @xmath577 ; hence by the inductive hypothesis , @xmath596 , and this is strict if @xmath597 .",
    "this then proves as well that @xmath598 ; say @xmath599 , write @xmath600 , and let @xmath601 be the indices for which @xmath602 . then for @xmath603 , we may write @xmath604 , and this latter is less than @xmath26 , since it is at most @xmath605 , and strictly less than it if @xmath606 .",
    "this proves the theorem .    and",
    "if we can truncate one low - defect polynomial to a given defect , we can truncate many low - defect polynomials to that same defect . here , at last ,",
    "is the result of taking the `` building - up '' theorem  [ oldmainthm ] , and applying our new `` filtering - down '' step :    [ mainthm ] for any real @xmath32 , there exists a finite set @xmath33 of low - defect pairs satisfying the following conditions :    1 .   for any @xmath607",
    ", there is some low - defect pair in @xmath33 that efficiently @xmath22-represents @xmath1 .",
    "each pair @xmath608 satisfies @xmath609 , and hence @xmath610 ; and if @xmath40 has degree @xmath91 , the former inequality is strict .",
    "by theorem  [ oldmainthm ] , there exists a finite set @xmath42 of low - defect pairs such that for any @xmath611 , there is some low - defect pair in @xmath42 that efficiently @xmath22-represents @xmath26 .",
    "( indeed , by theorem  [ oldmainthm ] , we may even choose @xmath42 to only consist of polynomials of degree at most @xmath612 , but this is not needed . )    now for each @xmath613 , take @xmath614 as provided by theorem  [ thmtrunc ] ; define @xmath615 to be the set @xmath616 this is a set of low - defect pairs by condition ( 2 ) of theorem  [ thmtrunc ] .",
    "we can then define @xmath33 to be the union of the @xmath615 .",
    "we see immediately that @xmath55 satisfies condition ( 2 ) of the theorem , as this follows from condition ( 2 ) of theorem  [ thmtrunc ] .    to verify condition ( 1 ) , say @xmath607 .",
    "then there is some @xmath617 that efficiently @xmath22-represents @xmath1 ; say @xmath618 with @xmath619 , so @xmath620 .",
    "then @xmath621 for some @xmath622 .",
    "say @xmath623 , and let @xmath624 be the indices for which @xmath499 .",
    "then if we let @xmath468 be the @xmath22-substitution of @xmath547 into @xmath191 , then @xmath625 , and @xmath626 , so @xmath1 is efficiently @xmath22-represented by @xmath627 .",
    "note that although such a covering of @xmath236 can not produce extraneous numbers in the sense of @xmath22-representing numbers whose defects are too high , it can still @xmath22-represent numbers that are not leaders .",
    "we then obtain theorem  [ mainthmfront ] as a corollary :    given @xmath26 , we may consider a set @xmath33 of low - defect pairs as described in theorem  [ mainthm ] .",
    "we may then define @xmath42 to be the set of low - defect polynomials used in these pairs .",
    "then if @xmath27 , @xmath1 is @xmath22-represented by @xmath208 for some @xmath628 .",
    "conversely , if @xmath1 is @xmath22-represented by @xmath208 for some @xmath628 , then either @xmath629 , in which case @xmath630 , or @xmath631 , in which case @xmath632 .",
    "the author is grateful to j.  arias de reyna and e.  h.  brooks for helpful discussion .",
    "he thanks his advisor j.  c.  lagarias for help with editing and further discussion .",
    "work of the author was supported by nsf grants dms-0943832 and dms-1101373 .",
    "it s worth noting that the theorems above about @xmath44 and @xmath236 , and how to build up coverings for them , etc . ,",
    "are formulated in terms of @xmath44 and @xmath236 , which are defined by the strict inequality @xmath6 . in many contexts , however , it is more natural to consider the nonstrict inequality @xmath633 .",
    "so let us define :          one can then write down theorems about @xmath634 and @xmath636 similar to those above and in @xcite and @xcite about @xmath44 and @xmath236 .",
    "we will state them here without proof , as the proofs are the same except for the strictnesses of some of the inequalities .        1 .   for @xmath88 ,",
    "there is either a good factorization @xmath643 where @xmath644 , or a good factorization @xmath645 with @xmath646 ; + for @xmath647 , there is a good factorization @xmath648 where @xmath649 , @xmath650 with @xmath651 and @xmath652 .",
    "2 .   @xmath653 with @xmath654 , @xmath655 , @xmath656 a solid number and @xmath657 3 .",
    "there is a good factorization @xmath658 with @xmath659 , @xmath660 being a most - efficient representation , and @xmath214 and @xmath464 satisfying the conditions in the case ( 2 ) above .",
    "@xmath661 , where @xmath662 is as defined in @xcite ( and thus in particular either @xmath276 or @xmath663 . ) 5 .",
    "there is a good factorization @xmath664 with @xmath665 and @xmath659 .          1",
    ".   we have @xmath546 .",
    "2 .   for each @xmath547 in @xmath266 , the set of @xmath281 for which @xmath489 corresponds to a subset of the variables of @xmath40 which is downward closed ( under the nesting ordering ) ; hence if @xmath468 denotes the @xmath22-substitution of @xmath547 into @xmath191 , then @xmath468 is a truncation of @xmath191 .",
    "furthermore , we have @xmath548 , and hence @xmath549 .",
    "99 h.  altman , integer complexity and well - ordering , _ michigan mathematical journal _ * 64 * ( 2015 ) , no .  3 , 509538 . h.  altman , internal structure of addition chains : well - ordering , arxiv:1409.1627 , 2014 h.  altman , refined estimates for counting numbers of low defect , in preparation .",
    "h.  altman and j.  zelinsky , numbers with integer complexity close to the lower bound , _ integers _ * 12 * ( 2012 ) , no .",
    "6 , 10931125 . j.  arias de reyna , complejidad de los nmeros naturales , _ gac .  r.  soc .  mat .",
    "* 3 * ( 2000 ) , 230250 .",
    "a.  brauer , on addition chains , _ bull .",
    "_ , * 45 * ( 1939 ) , 736739 .",
    "h.  dellac , _ intermd .",
    "_ * 1 * ( 1894 ) , 162164 .",
    "a.  flammenkamp , drei beitrge zur diskreten mathematik : additionsketten , no - three - in - line - problem , sociable numbers , diplomarbeit in mathematics ( bielefield university , 1991 ) , pp .",
    "r.  k.  guy , some suspiciously simple sequences , _ amer .  math .",
    "monthly _ , * 93 * ( 1986 ) , 186190 ; and see * 94 * ( 1987 ) , 965 & * 96 * ( 1989 ) , 905 . r.  k.  guy , _ unsolved problems in number theory _ , third edition , springer - verlag , new york , 2004 , pp",
    ".  399400 .",
    "j.  iraids , k.  balodis , j.  ernenoks , m.  opmanis , r.  opmanis , k.  podnieks .",
    "integer complexity : experimental and analytical results , arxiv:1203.6462 , 2012 d.  e.  knuth , _ the art of computer programming _ , vol .  2 , third edition , addison - wesley , reading , massachusetts , pp .",
    "461485 k.  mahler and j.  popken , on a maximum problem in arithmetic ( dutch ) , _ nieuw arch .",
    "wiskunde _ , ( 3 ) * 1 * ( 1953 ) , 115 ; _ mr _ * 14 * , 852e .",
    "a.  scholz , aufgabe 253 , jahresbericht der deutschen mathematikervereinigung , vol .",
    "47 , teil ii , b.  g.  teubner , leipzig and berlin , 1937 , pp .",
    "m.  v.  subbarao , addition chains  some results and problems , _ number theory and applications _ , editor r.  a.  mollin , nato advanced science series : series c , v. 265 , kluwer academic publisher group , 1989 , pp .",
    "i.  volkovich , characterizing arithmetic read - once formulae , arxiv:1408.1995 , 2014 j.  zelinsky , an upper bound on integer complexity , in preparation"
  ],
  "abstract_text": [
    "<S> define @xmath0 to be the _ complexity _ of @xmath1 , the smallest number of ones needed to write @xmath1 using an arbitrary combination of addition and multiplication . </S>",
    "<S> john selfridge showed that @xmath2 for all @xmath1 . </S>",
    "<S> based on this , this author and zelinsky defined @xcite the `` defect '' of @xmath1 , @xmath3 , and this author showed that the set of all defects is a well - ordered subset of the real numbers @xcite . </S>",
    "<S> this was accomplished by showing that for a fixed real number @xmath4 , there is a finite set @xmath5 of polynomials called `` low - defect polynomials '' such that for any @xmath1 with @xmath6 , @xmath1 has the form @xmath7 for some @xmath8 . </S>",
    "<S> however , using the polynomials produced by this method , many extraneous @xmath1 with @xmath9 would also be represented . in this paper </S>",
    "<S> we show how to remedy this and modify @xmath5 so as to represent precisely the @xmath1 with @xmath6 and remove anything extraneous . </S>",
    "<S> since the same polynomial can represent both @xmath1 with @xmath6 and @xmath1 with @xmath9 , this is not a matter of simply excising the appropriate polynomials , but requires `` truncating '' the polynomials to form new ones . </S>"
  ]
}
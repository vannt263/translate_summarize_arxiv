{
  "article_text": [
    "let @xmath0 be a graph . a _ rectilinear drawing _ @xmath1 is an injective mapping of the vertices of @xmath2 to a set of points in the plane in general position ( i.e. no three points are collinear ) , and a mapping of the edges of @xmath2 to straight line segments between the corresponding points .",
    "an intersection of an edge of @xmath1 with a straight line generated by a different pair of points of @xmath1 is interpreted as an _ orchard crossing _ ( following the orchard relation introduced in @xcite ) .",
    "if @xmath3 counts these orchard crossings for an edge @xmath4 , then the number @xmath5 of orchard crossings of @xmath1 is : @xmath6 note that the sum is taken only over the edges of the graph , whence @xmath3 counts _ all _ the lines generated by pairs of points .",
    "the _ orchard crossing number _ of @xmath2 , @xmath7 , is the minimum over all rectilinear drawings @xmath1 of @xmath2 : @xmath8    note that the _ maximum orchard crossing number _ of @xmath2 ( denoted by @xmath9 and defined as the maximal number of crossings over all drawings of @xmath2 ) is also interesting due to proposition 2.7 in @xcite which states that @xmath10 and the _ rectilinear crossing number _ @xmath11 ( see @xcite ) of the complete graph @xmath12 are attained by the same realization @xmath13 . in general , the determination of @xmath9 might be easier than the determination of @xmath14 .",
    "furthermore , the concept of the orchard crossing number can be considered in higher dimensions too ( see @xcite ) . in @xcite , we have computed the orchard crossing number for some families of graphs .    in this paper",
    ", we deal with the orchard crossing number of some families of graphs which are based on cycles .",
    "these include disjoint cycles , cycles which share a vertex and cycles which share an edge .",
    "note that in the context of the rectilinear crossing number , all of these families have no crossings , since all of these graphs are planar .",
    "therefore , the orchard crossing number succeeds to differentiate between these graphs .",
    "mainly , we have the following results :     +    1 .",
    "let @xmath2 be the graph consisting of a disjoint union of @xmath15 cycles of order @xmath16 .",
    "then : @xmath17 2 .   let @xmath18 be the family of graphs which share the property that they consist of a closed chain of @xmath15 cycles of order @xmath16 , each attached to the adjacent cycle by a vertex .",
    "then : @xmath19 3 .   let @xmath18 be the family of graphs which share the property that they consist of an open chain of @xmath15 cycles of order @xmath16 , each attached to the adjacent cycle by a vertex . then : @xmath20 4 .",
    "let @xmath2 be the graph consisting of @xmath15 cycles of order @xmath21 all attached at a common vertex .",
    "then : @xmath22 5 .",
    "let @xmath23 be the @xmath16-prism graph ( see its definition in section [ prism ] ) . then for even @xmath24",
    ", we have : @xmath25 for odd @xmath24 , we have : @xmath26 6 .",
    "let @xmath27 be the @xmath16-ladder graph ( see its definition in section [ ladder ] ) .",
    "then for odd @xmath28 , we have : @xmath29 for even @xmath28 , we have : @xmath30    the paper is organized as follows . in section [ sec_obs ] , we state some important observations . in section [ disjoint_sec ]",
    ", we deal with the graph consisting of a disjoint union of @xmath15 cycles of order @xmath16 . in section [ chain_sec ] , we deal with the family of graphs consisting of a chain of @xmath15 cycles of order @xmath16 with adjacent cycles attached to each other at one vertex . in section [ common_sec ]",
    ", we deal with a graph consisting of @xmath15 cycles of order @xmath21 all attached at a common vertex .",
    "section [ prism ] deals with the @xmath16-prism graph and section [ ladder ] deals with the @xmath16-ladder graph .",
    "the following observations are very easy , but will be used numerous times throughout the paper ( see examples in figure [ pt_and_cycle ] ) .",
    "[ obs ]    1 .",
    "a point inside a cycle of order @xmath16 contributes at least @xmath16 orchard crossings , and this minimum is attained in the case that the cycle is in convex position .",
    "a point outside a cycle of order @xmath16 contributes at least @xmath31 orchard crossings , and this minimum is attained in the case that the cycle is in convex position .",
    "in this section , we compute the orchard crossing number of the graph consisting of a disjoint union of @xmath15 cycles of order @xmath16 .",
    "let @xmath2 be the graph consisting of a disjoint union of @xmath15 cycles of order @xmath16 . then : @xmath32 which is attained on the realization placing all the @xmath33 points in convex position with the points representing each cycle adjacent to each other around the convex hull ( see figure [ union_cn ] for an example for @xmath34 ) .",
    "it is easy to see that the above - mentioned realization has indeed @xmath35 orchard crossings , since each of the @xmath15 internal chords has @xmath36 orchard crossings ( following the fact that there are @xmath31 points on one of its sides and @xmath37 points on its other side ) .",
    "hence : @xmath38 .",
    "on the other hand , based on observation [ obs ] , any point separated from a cycle contributes at least @xmath31 orchard crossings ( since any point inside the cycle contributes at least @xmath16 crossings , and any point outside the cycle contributes at least @xmath31 crossings ) . for each of the @xmath15 cycles",
    ", we have @xmath37 such points , so we have at least @xmath35 _ distinct _ orchard crossings ( they are distinct , because the edges of the cycles are disjoint , and the orchard crossings are located on the edges of the cycles ) .",
    "therefore , @xmath39 , and we are done .",
    "the same proof will work also for a disjoint union of cycles of different orders .",
    "the formula for the orchard crossing number will be changed accordingly .",
    "in this section , we compute the minimal value of the orchard crossing number over the family of graphs consisting of closed and open chains of @xmath15 cycles of order @xmath16 with adjacent cycles attached to each other at one vertex ( see figures [ closed_chain_fig ] and [ open_chain_fig ] for examples for the minimal values for a closed chain and an open chain , respectively ) .",
    "the reason that this is indeed a _",
    "family _ of graphs is due to the fact that the varied distance between the two points of each cycle which are shared with adjacent cycles determines different graphs .",
    "[ closed_chain ] let @xmath18 be the family of graphs which share the property that they consist of a closed chain of @xmath15 cycles of order @xmath16 , each attached to the adjacent cycle by a vertex . then : @xmath19 this minimum is attained by the graph in which the two points of each cycle which are shared with another cycle are adjacent to each other .",
    "the realization of this graph which yields this minimum places all the @xmath40 points in convex position with the points representing each cycle adjacent to each other around the convex hull ( see figure [ closed_chain_fig ] for an example for @xmath34 ) .",
    "it is easy to see that the above - mentioned realization has indeed @xmath41 orchard crossings , since each of the @xmath15 internal chord has @xmath42 orchard crossings ( following the fact that there are @xmath31 points on one of its sides and @xmath43 points on its other side ) .",
    "hence : @xmath44    on the other hand , based on observation [ obs ] , given any graph @xmath45 , any point separated from a cycle contributes at least @xmath31 orchard crossings . for each of the @xmath15 cycles",
    ", we have @xmath46 such points , so we have at least @xmath47 distinct orchard crossings ( since again the _ edges _ of the cycles are disjoint ) . therefore : @xmath48 and we have equality .",
    "the situation for an open chain is almost the same , so we only formulate the result :    [ open_chain ] let @xmath18 be the family of graphs which share the property that they consist of an open chain of @xmath15 cycles of order @xmath16 , each attached to the adjacent cycle by a vertex . then : @xmath49 this minimum is attained by the graph in which the two points of each cycle which are shared with another cycle are adjacent to each other .",
    "the realization of this graph which yields this minimum places all the @xmath50 points in convex position with the points representing each cycle adjacent to each other around the convex hull ( see figure [ open_chain_fig ] for an example for @xmath34 ) .",
    "in this section , we compute the orchard crossing number for some subcases of the family of graphs consisting of @xmath15 cycles sharing a common vertex .      here",
    ", we treat the case of a graph consisting of @xmath15 cycles of order @xmath21 , all attached at a common vertex :    let @xmath2 be the graph consisting of @xmath15 cycles of order @xmath21 all attached at a common vertex . then : @xmath51 where @xmath52 is the complete bipartite graph on two sets , one of @xmath53 vertices and one of @xmath54 vertex .",
    "this number is attained by the realization placing the common point in the center of a circle , the other @xmath55 points on that circle , and the non - common points of each @xmath21-cycle adjacent to each other .",
    "moreover , there is exactly one cycle of order @xmath21 which lies in the area bounded by the two lines generated by the central point and the two other points of each cycle ( see figure [ x_c3_point ] for an example for @xmath56 ) .",
    "note that the graph @xmath52 is a subgraph of @xmath2 on the _ same set _ of vertices .",
    "therefore : @xmath57 on the other hand , the realization of @xmath2 presented in the formulation of the proposition has no additional orchard crossings than those of @xmath52 ( this is due to the additional requirement on the manner of the placement of the points on the circle ) .",
    "therefore , we have : @xmath58 thus , we have an equality .",
    "now , substituting @xmath53 for @xmath16 in the orchard crossing number for the graph @xmath59 , @xmath60{fg1}),}\\ ] ] yields the claimed result .",
    "the argument of the proof _ will not work _ in the case of a graph @xmath2 consisting of @xmath15 cycles of order @xmath16 attached at a common vertex for @xmath61 .",
    "this is because for @xmath61 , the graph @xmath62 is no longer a subgraph of @xmath2 .",
    "the case of a graph @xmath2 consisting of two cycles of order @xmath16 which share a common vertex is actually a subcase of an open chain of length @xmath63 .",
    "thus , substituting @xmath63 for @xmath15 in proposition [ open_chain ] yields that : @xmath64    the case of a graph @xmath2 consisting of three cycles of order @xmath16 which share a common vertex is treated in the following proposition .",
    "its proof is similar to the proof of proposition [ closed_chain ] .",
    "let @xmath2 be the graph consisting of three cycles of order @xmath16 , all attached at a common vertex . then",
    ": @xmath65 this number is attained by the realization placing the common point in the center of a circle , the other @xmath66 points on that circle , and the non - common points of each @xmath16-cycle adjacent to each other .",
    "moreover ( as in the previous proposition ) , there is exactly one cycle of order @xmath16 which lies in the area bounded by two lines generated by the central point and the two points adjacent to the center in the same cycle ( see figure [ 3_c4_point ] for an example for @xmath67 ) .",
    "the _ @xmath16-prism graph _ , denoted by @xmath23 , is a graph consisting of @xmath55 vertices and @xmath68 edges organized as two cycles of order @xmath16 , with the corresponding vertices of the cycles connected by edges ( see figure [ 5_prism_graph ] for an example for @xmath69 ) .    in this section",
    ", we deal with the orchard crossing number of the @xmath16-prism .",
    "we start by constructing drawings for the upper bound .",
    "then , we supply two lower bounds .",
    "@xmath70 for even @xmath24 , we have : @xmath71 for odd @xmath24 , we have : @xmath72    for the @xmath21-prism @xmath73 and the @xmath74-prism @xmath75 , the upper bounds are attained by the drawings presented in figure [ realize_3_4_prism ] .    for @xmath24 ,",
    "the upper bound for the orchard crossing number of the @xmath16-prism graph is attained by the following construction .",
    "draw a regular @xmath55-gon .",
    "starting from any point , color the vertices white and black ( corresponding to the two cycles of order @xmath16 ) as follows : two whites , two blacks , two whites , two blacks , etc . for the case of odd @xmath16 , the last two vertices will be one white and one black .",
    "now connect the white ( resp .",
    "black ) vertices around the @xmath55-gon so that each white ( resp .",
    "black ) vertex is connected to its closest clockwise white ( resp .",
    "black ) neighbor . for even @xmath16",
    ", we complete the graph by filling in the remaining edges around the @xmath55-gon . for odd @xmath16 , in completing the graph we do not draw the edge between the single white vertex and the single black vertex ( see figure [ realize_prism ] for both cases ) .    in these drawings ,",
    "all edges on the @xmath55-gon have no orchard crossings at all ( since there are no points inside the convex hull ) . in the case of even @xmath16",
    ", we have @xmath16 additional edges , each contributing @xmath76 orchard crossings , yielding the claimed upper bound of @xmath77 . for the case of odd @xmath16",
    ", we have @xmath78 additional edges , each contributing @xmath76 orchard crossings and two edges , each contributing @xmath79 orchard crossings .",
    "this yields @xmath80 orchard crossings , which is equal to the claimed upper bound .",
    "now , we move to the lower bounds :    @xmath81    we show that the orchard crossing number is larger than ( or equal to ) both numbers appearing in the formulation of the result .",
    "we start with the bound @xmath82 . for each of the @xmath16 cycles of order @xmath74 , each of the @xmath83 points separate from it contributes two orchard crossings ( by observation [ obs ] ) on the edges of these cycles . for each of the two cycles of order @xmath16 , each of the @xmath16 points",
    "separate from it contributes @xmath31 orchard crossings on the edges of these cycles ( again , by observation [ obs ] ) .",
    "this gives a total of @xmath84 orchard crossings .",
    "however , in these cycles , each edge of the graph is counted exactly twice .",
    "the reason for this is as follows : the edges shared by two cycles of order @xmath74 are counted twice , once for each of these cycles .",
    "these edges are not in the cycles of order @xmath16 . on the other hand ,",
    "the edges in the cycles of order @xmath16 are the edges not shared by two cycles of order @xmath74 , but are only on one cycle of order @xmath74 .",
    "thus , we have to divide @xmath85 by @xmath63 and we get the required lower bound .    now , we pass to the second bound @xmath86 .",
    "the @xmath16-prism @xmath23 contains @xmath16 cycles of order @xmath74 . as each cycle has @xmath83 vertices separated from the cycle , we know by observation [ obs ] that each of these cycles determines @xmath76 orchard crossings on the edges of that cycle . however , there are @xmath16 edges which are counted in two cycles",
    ". therefore , we must subtract the number of orchard crossings on these edges which will be overcounted .    to do this , we consider two cycles of order @xmath74 which share a common edge .",
    "for each of these cycles , we count crossings determined by pairs of points , one of which is in the cycle and the other of which is not in the cycle . the only pairs which will be counted in both cycles and will therefore be overcounted in our count of orchard crossings are those with the following property : both points are not on the shared edge , and one point is in each of the two cycles of order @xmath74 ( see figure [ 2_attached_c4 ] ) .",
    "since each cycle has two points not on the shared edge , we have @xmath74 such pairs and therefore @xmath74 possible overcounted orchard crossings for each of the @xmath16 shared edges in the graph .",
    "thus , we have a lower bound of @xmath87 as claimed .",
    "note that for @xmath88 , @xmath89 and for @xmath90 , @xmath91 .",
    "moreover , observe that in the realizations which yield the upper bound ( see figure [ realize_prism ] ) , there are no overcounts at all ( since the shared edges between two adjacent cycles of order @xmath74 are placed on the convex hull , and hence have no crossings on them ) .",
    "it is worth mentioning that _ asymptotically _ , the lower bound and the upper bound are the same .",
    "the _ @xmath16-ladder graph _ , denoted by @xmath27 , is a graph consisting of @xmath55 vertices and @xmath92 edges organized as a ladder , i.e. we have a sequence of @xmath78 cycles of order @xmath74 where any two consecutive cycles share an edge ( see figure [ 5_ladder_graph ] for an example for @xmath69 ) .",
    "note that the @xmath16-ladder graph has two edges less than the @xmath16-prism graph .",
    "consider one cycle of order @xmath74 .",
    "it has two points outside of it . by observation [ obs ] , each of these two points generates at least two orchard crossings on the edges of the cycle .",
    "therefore , we have at least @xmath74 orchard crossings .",
    "this bound is realized by the relevant drawing in figure [ realize_l3_l4_l5 ] .",
    "consider two disjoint cycles of order @xmath74 .",
    "each has @xmath74 points outside of it . by observation [ obs",
    "] , each of these @xmath74 points generates at least two orchard crossings on the edges of the cycle . therefore , we have at least @xmath95 orchard crossings .",
    "this bound is realized by the relevant drawing in figure [ realize_l3_l4_l5 ] .",
    "the drawing for the upper bound for the orchard crossing number of the @xmath16-ladder for @xmath28 is very similar to that of the @xmath16-prism ( see section [ prism ] ) .",
    "the difference between these graphs is that the @xmath16-ladder does not contain any cycles of order @xmath16 .",
    "thus , for the drawing of the @xmath16-ladder , we follow the drawing of the @xmath16-prism , but we do not connect the final edge of the white ( resp .",
    "black ) cycle . for",
    "the case of even @xmath16 , the edges which are omitted must be in the same cycle of order @xmath74 in @xmath23 .",
    "for the case of odd @xmath16 , the edges which are omitted are the edges connecting two white ( resp .",
    "black ) points which have a single black ( resp .",
    "white ) point in between them ( see figure [ realize_ladder ] for both cases ) .    to count the orchard crossings in this drawing",
    ", we again notice that all edges around the @xmath55-gon have no orchard crossings . for both even and odd @xmath16",
    ", we have @xmath78 edges which have @xmath76 orchard crossings each .",
    "this yields an upper bound of @xmath101 orchard crossings as claimed .",
    "the method of attaining lower bounds is similar to the case of the @xmath16-prism .",
    "we start with the first bound .",
    "we find a set of cycles which counts each edge of the graph twice .",
    "we determine the number of orchard crossings which must exist on the edges of these cycles , and we divide by @xmath63 to get a lower bound for @xmath106 .",
    "we first consider the case of even @xmath16 .",
    "we start with two cycles of order @xmath107 ( see figure [ overlap_cn ] ) : one cycle contains the top rung of the ladder ( the _ upper _ cycle ) and the other cycle contains the bottom rung of the ladder ( the _ lower _ cycle ) .",
    "we also consider @xmath31 of the @xmath78 cycles of order @xmath74 contained in the graph .",
    "we choose these cycles so that we exclude the only @xmath74-cycle which contains _ both _ an edge of the upper cycle and an edge of the lower cycle .",
    "this set of cycles counts each edge of the graph twice .",
    "we now count the necessary orchard crossings on these edges . by observation [ obs ] , for each cycle of order @xmath107 , we have at least@xmath108 orchard crossings and for each cycle of order @xmath74 , we have at least @xmath76 orchard crossings .",
    "this gives us a total of @xmath109 = 3n^2 - 10n+8\\ ] ] orchard crossings as claimed .",
    "we consider the case of odd @xmath16 : we start with one cycle of order @xmath110 and one cycle of order @xmath111 .",
    "the cycle of order @xmath110 contains the top rung of the ladder and the cycle of order @xmath111 contains the bottom rung of the ladder .",
    "we also consider @xmath31 of the @xmath78 cycles of order @xmath74 contained in the graph .",
    "we choose these cycles so that we exclude the only @xmath74-cycle which contains _ both _ an edge of the upper cycle and an edge of the lower cycle .",
    "this set of cycles counts each edge of the graph twice .",
    "we now count the necessary orchard crossings on these edges . by observation [ obs ] , for the cycle of order @xmath110 we have at least@xmath112 orchard crossings , for the cycle of order @xmath111 we have at least @xmath113 orchard crossings , and for each cycle of order @xmath74 we have at least @xmath76 orchard crossings .",
    "this gives us a total of @xmath114 = 3n^2 - 10n+7\\ ] ] orchard crossings as claimed .",
    "now we move to the second bound @xmath115 .",
    "the @xmath16-ladder @xmath27 contains @xmath78 cycles of order @xmath74 . as each cycle has @xmath83 points separated from the cycle , we know by observation [ obs ] that each of these cycles determines @xmath76 orchard crossings on the edges of the cycle",
    "however , there are @xmath31 edges which are counted in two adjacent cycles .",
    "we therefore must subtract the number of orchard crossings which may be overcounted .",
    "as in the case of the @xmath16-prism @xmath23 , we have @xmath74 possible overcounted orchard crossings for each of the @xmath31 shared edges in the graph .",
    "thus , we have a lower bound of @xmath116 as claimed",
    ".      1 .   note that for @xmath117 , @xmath118 and for @xmath119 , @xmath120 .",
    "2 .   as before , observe that in the realizations which yield the upper bound ( see figure [ realize_ladder ] ) , there are no overcounts at all ( since the shared edges between two adjacent cycles of order @xmath74 are placed on the convex hull , and hence have no crossings on them ) .",
    "it is worth mentioning that as in the case of the prism graph , the lower bound and the upper bound are _ asymptotically _ the same .",
    "99 o. aichholzer , f. aurenhammer and h. krasser , _ on the crossing number of complete graphs _ , in : proc .",
    "acm symp . computational geometry , 1924 , barcelona , spain , 2002 .",
    "m. alpert , e. feder and h. harborth , _ the maximum of the maximum rectilinear crossing numbers of @xmath121-regular graphs of order @xmath16 _ , electron .",
    "j. combin .",
    "* 16*(1 ) ( 2009 ) , research paper 54 , 16 pp .",
    "r. bacher , _ le cocycle du verger _ , c. r. acad .",
    "paris , ser .",
    "i , * 338*(3 ) ( 2004 ) , 187190 .",
    "r. bacher and d. garber , _ the orchard relation of planar configurations of points i _ , geombinatorics * 15*(2 ) ( 2005 ) , 5468 .",
    "e. feder and d. garber , _ the orchard crossing number of an abstract graph _ , proceedings of the 40th southeastern international conference on combinatorics , graph theory and computing , cong .",
    "* 197 * ( 2009 ) , 319 .",
    "e. feder and d. garber , _ on the orchard crossing number of the complete bipartite graphs @xmath122 _ , submitted .",
    "s. felsner , _ geometric graphs and arrangements _ , advanced lectures in mathematics .",
    "vieweg & sohn , wiesbaden , 2004 .",
    "j. pach and g. tth , _ thirteen problems on crossing numbers _ , geombinatorics * 9 * ( 2000 ) , 194207 ."
  ],
  "abstract_text": [
    "<S> this paper deals with the orchard crossing number of some families of graphs which are based on cycles . </S>",
    "<S> these include disjoint cycles , cycles which share a vertex and cycles which share an edge . specifically , we focus on the prism and ladder graphs . </S>"
  ]
}
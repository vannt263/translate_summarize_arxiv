{
  "article_text": [
    "detecting relevant patterns in real networks , a fundamental problem for many research fields @xcite , relies upon the possibility to distinguish the properties explained by the presence of simple constraints from more complex and nontrivial structural features . for this reason ,",
    "statistical ensembles of graphs with specified constraints , and otherwise completely random , have been introduced and systematically used as a reference to identify non - random patterns in a real network @xcite .",
    "such ensembles serve also as powerful models to study dynamical processes on networks displaying only a set of desired properties , and allow to highlight the dynamical effect of each property separately .",
    "the simplest and most important ensembles specify only local constraints . for unweighted networks ,",
    "this amounts to specify the degree @xmath0 ( number of incident edges ) of each vertex ( @xmath1 where @xmath2 is the total number of vertices ) , and results in the so - called configuration model @xcite . in the weighted case ,",
    "the corresponding constraint is obtained by fixing the strength @xmath3 ( sum of incident edge weights ) of each vertex @xcite .",
    "more in general , one could enforce different or additional properties @xcite .",
    "unfortunately , as we discuss in detail in what follows , it turns out that even in the simplest case with local constraints , the correct generation of random ensembles corresponding to a particular real world network is problematic .",
    "both analytical and computational approaches proposed so far have severe limitations .",
    "motivated by this , here we propose a new maximum - entropy method that is entirely analytical and does not require the generation of randomized variants of a real network .",
    "our method provides the exact probabilities of occurrence of random graphs with the same ( average ) constraints as the real network , from which the expectation values and standard deviations ( and in principle the higher moments ) of any topological quantity of interest can be calculated mathematically , either exactly or using proper approximations . due to its analytical character ,",
    "our method is extremely faster than all the available alternatives .",
    "moreover , it can be applied to undirected , directed , binary and weighted networks in a unified way .",
    "we will illustrate the power of our approach on several real - world networks of different nature and type , by studying a range of topological properties of interest .",
    "we first briefly review the existing problems in the case of binary unweighted networks , which is the most frequently explored situation . a binary unweighted graph with @xmath2 vertices is completely specified by a @xmath4 adjacency matrix @xmath5 with entries @xmath6 if the vertices @xmath7 and @xmath8 are connected , and @xmath9 otherwise . generally , one is interested in comparing the observed topological properties of a particular real - world network @xmath10 against the average properties of a randomized family of networks with the same degree sequence @xmath11 , where @xmath12 is the degree ( number of connections ) of vertex @xmath7 in the network @xmath10 .",
    "the ensemble of binary undirected networks with specified degree sequence is known as the _ configuration model _ ( cm ) @xcite and is currently treated in two very different ways : computationally , by explicitly generating many random networks with the desired degree sequence and averaging the quantities of interest across the randomized networks @xcite , or analytically , by using approximations that allow to directly estimate the average of topological properties as a function of the enforced degree sequence , without actually measuring them on any network @xcite .",
    "currently , both approaches suffer from severe limitations .",
    "a ` bottom - up ' computational approach consists in assigning each vertex @xmath7 a number of ` edge stubs ' equal to its observed degree @xmath13 , and randomly matching pairs of stubs ( avoiding self - loops and multiple links ) until all degrees reach their desired values ( _ edge stub reconnection _ ) .",
    "however , this procedure is known to get stuck in configurations where vertices requiring additional connections have no more eligible partners @xcite . as a consequence",
    ", one must implement a ` top - down ' computational approach where the entire real network @xmath10 is taken as the initial configuration , and a family of randomized variants is generated by iteratively applying a _ local rewiring algorithm _ ( lra ) where two edges @xmath14 and @xmath15 are randomly selected and replaced by the two edges @xmath16 and @xmath17 , if the latter are both not already present @xcite ( see fig.[fig_lra ] for an illustration ) .    ]",
    "this generates a _",
    "ensemble ( see the appendix for a detailed discussion ) where all randomized networks have exactly the same degree sequence as the original network , and are sampled with equal probability .",
    "this method has been applied to various networks , including the internet @xcite , cellular networks @xcite and food webs @xcite , in order to detect higher - order patterns ( such as clustering and motifs ) not merely due to local constraints . however , this approach is time - consuming since many ( a number @xmath18 much larger than the observed number of links @xmath19 @xcite , even if not rigorously specified ) iterations of the lra are required to obtain a _ single _ randomized network , and the entire process must be repeated several times to produce a large number @xmath20 ( again unspecified ) of randomized networks , on each of which any topological property @xmath21 of interest must be measured explicitly and averaged at the end to obtain an estimate for @xmath22 .",
    "the computational time required to obtain @xmath22 is therefore of the order @xmath23 , where @xmath24 is the average time required to perform a single successful rewiring step and @xmath25 is that required to compute @xmath21 on a single network in the randomized set .",
    "moreover , even if the sufficient statistics of the problem is the degree sequence @xmath26 alone , the above approach requires the entire original network @xmath10 ( or any other network with the same degree sequence , which is however difficult to obtain from scratch due to the problems discussed above ) as the starting configuration , thus making use of much more information than required in principle .",
    "by contrast , analytical approaches seek to provide theoretical expressions to directly obtain the ensemble averages of topological properties , without generating the ensemble computationally .",
    "two main approaches exist .",
    "one makes use of generating functions for the relevant probability distributions . in the case we are discussing here ,",
    "the key quantity is the generating function @xmath27 of the degree distribution @xcite .",
    "unfortunately , this method assumes that the network is infinite and locally tree - like ( even if in some cases this approximation turns out to perform unexpectedly well even beyond its formal range of applicability @xcite ) , and is thus inappropriate if the size of the network is small and if the input degree distribution can only be realized by dense and/or clustered networks . in this approach ,",
    "clustered or dense networks can only be generated by imposing additional constraints besides the degree sequence , such as the number of triangles attached to vertices @xcite , thus leading to a different ensemble which is not the one we are seeking to characterize .",
    "a different approach looks for an analytical expression for the probability @xmath28 that the vertices @xmath7 and @xmath8 are connected in the randomized ensemble @xcite . due to its probabilistic nature",
    ", this approach generates a _",
    "( grand)canonical _ ensemble where even graphs violating the constraint are present and assigned different probabilities .",
    "in such a case , the constraints are realized on average , i.e. the expectation value @xmath22 of any specified property @xmath21 is fixed exactly ( see appendix ) .",
    "while this approach is indeed very fast in providing averages of the desired properties , it has been shown @xcite that it makes use of a highly approximate expression for @xmath28 , valid only when the original network is sparse and/or the degree distribution is not too broad .",
    "this expression is @xmath29 where @xmath30 is the total number of links . while the expected degree @xmath31 generated by the above formula coincides with the desired degree @xmath13 , the probability @xmath28 may exceed @xmath32 for pairs of highly connected nodes such that @xmath33 . in general , only if the degree sequence is such that @xmath34 then using eq.([eq_cl ] ) on the real network @xmath10 will not lead to the above problem .",
    "while the above condition is typically obeyed by networks with narrow degree distribution such as the erds - rnyi random graph , it is generally violated by scale - free networks displaying a power - law degree distribution @xmath35 , and this violation becomes stronger and stronger as the density of the network increases .",
    "in particular , it is possible to show that in order to ensure eq.([eq_condition ] ) the maximum degree @xmath36 in the network should not exceed the so - called _ structural cut - off _",
    "@xmath37 @xcite .",
    "this is particularly evident for dense networks where the average degree @xmath38 remains constant as @xmath2 increases , so that eq.([eq_condition ] ) remains valid only if @xmath39 .",
    "by contrast , extreme value theory shows that in networks with degree distribution @xmath35 the maximum degree scales as @xmath40 , so that if @xmath41 ( as observed in most real - world scale - free networks ) then @xmath42 which exceeds @xmath43 . the meaning of @xmath28 being larger than @xmath32 for some pairs of vertices in eq.([eq_cl ] ) is that , in order to actually realize the degree sequence of the real network @xmath10 , one must let @xmath7 and @xmath8 be connected by more than one undirected edge .",
    "also , since the desired equality @xmath44 is only ensured if one lets the sum in @xmath45 run over all vertices _ including @xmath7 itself _ , one must allow the presence of self - loops in the randomized networks .",
    "thus , even if this is not evident at a first glance , the ensemble generated by eq.([eq_cl ] ) does not only contain binary and loop - less undirected graphs and is thus not a proper null model for an empirical binary loop - less network @xmath10 with degree sequence @xmath26 violating eq.([eq_condition ] ) , as is typically the case for real - world networks with broad degree distributions .",
    "an elegant proof that the correct ensemble probability @xmath28 for loop - less graphs with no multiple connections differs from eq.([eq_cl ] ) has been proposed @xcite and re - derived within the framework of maximum - entropy graph ensembles @xcite .",
    "we shall exploit this result to obtain an exact method later on .",
    "we will also show that in real networks the deviation is stronger than expected , and affects sparse networks as well .",
    "an independent proof of the inadequacy of eq.([eq_cl ] ) is that it does not generate the graph @xmath10 with maximum likelihood @xcite .",
    "this can be confirmed by treating @xmath19 as a free parameter and look for its value @xmath46 that maximizes the probability to obtain @xmath10 .",
    "one finds that @xmath47 , which implies that under the maximum likelihood choice @xmath48 and @xmath49 , violating the desired constraint on the degree sequence and the implied one on the number of links @xcite .",
    "this shows that the functional form of @xmath28 in eq.([eq_cl ] ) is intrinsically problematic and does not give highest likelihood to @xmath10 and to all other graphs with the same degree sequence as @xmath10 .",
    "therefore , while the available analytical methods are useful to characterise artificially generated networks with special properties , they can not be used to correctly randomise any real - world network which is either small , clustered , or dense .",
    "unfortunately , the above limitations are generally ignored , and eq.([eq_cl ] ) is frequently used beyond its limits of applicability to estimate connection probabilities .",
    "moreover , as we note later on , it is also used as a key ingredient in order to define important structural properties which implicitly rely on a comparison against the cm .",
    "analogous problems exist in the analysis of directed and/or weighted networks .",
    "we will consider each of these cases separately in what follows .",
    "the above discussion highlights that no method developed so far succeeds in obtaining randomized properties of a particular real - world network such that two requests are met simultaneously : _",
    "i ) _ the method is general and works for any network , even if displaying small size , high link density , and large clustering ; _ ii ) _ expected values across the ensemble can be computed analytically , without sampling the configuration space explicitly . the need to resort to the lra as the only statistically correct method available , which however requires the artificial generation of many randomized networks , makes the general problem very complicated and all its applications time consuming .    in this paper",
    "we propose a solution to this long - standing problem .",
    "we develop an approach that combines exact expressions for the occurrence probabilities of graphs in maximum - entropy ensembles with given constraints @xcite with more recent results about the application of the maximum likelihood principle to graph ensembles @xcite . in the appendix",
    "we describe our method in great detail .",
    "we start with a general discussion which is formally valid for any constraint , and then consider explicitly the application to real networks where a set of local constraints is enforced .",
    "we consider the cases of binary , weighted , directed and undirected networks separately .",
    "we show that in all these cases the enforcement of local constraints always leads to exact probabilities that can be easily obtained analytically .",
    "then we also consider an extension to non - local constraints which can still be dealt with analytically .",
    "finally , we compare our ( grand)canonical method with the corresponding microcanonical ensemble generated computationally as in the lra .",
    "as we show , in all the cases of interest a choice of constraints leads to a specific set of coupled nonlinear equations to be solved . in such equations , the observed values of the enforced topological properties ( e.g. the degree sequence )",
    "determine the values of an equal number of ` hidden ' parameters in such a way that the real network , or any other network with the same constraints as the real one , is generated with maximum likelihood .",
    "since only the enforced constraints enter the equations , our method only requires the knowledge of the sufficient statistics of the problem and not of the whole topology , restoring a desirable feature of randomization algorithms . solving the maximum - likelihood equations only takes a computational time @xmath50 which is negligible if compared to the time required to measure any nontrivial topological property , and entirely replaces the artificial generation of many randomized variants of the original network .",
    "once the parameters solving the equations are found , they can be directly used to obtain the expectation value @xmath22 and standard deviation @xmath51 $ ] of any topological property @xmath21 of interest analytically . when useful , this also allows to obtain a @xmath52-score representing the number of standard deviations by which the randomized value @xmath22 differs form the observed value @xmath53 . the possibility to obtain the standard deviations and/or @xmath52-scores is very important , because it allows to assess which topological properties @xmath21 are consistent with their randomized value @xmath22 within a statistical error , and which deviate significantly from the null expectation . in the former case",
    ", one can conclude that the enforced constraints completely explain the higher - order property @xmath21 . in the latter case",
    ", the observed property can not be traced back to the constraints , and therefore requires additional explanations or generating mechanisms besides those required in order to explain the constraints themselves ( it should be noted , however , that @xmath52-scores can be unambiguously interpreted only if the property @xmath21 is normally distributed , and this is generally not the case ; nonetheless they still carry information about the discrepancy between observations and the null model ) .",
    "importantly , the time required to compute the expectation value @xmath22 of a given property @xmath21 analytically ( formally corresponding to an average over a huge number of randomized configurations ) is the same as the time @xmath25 required to compute the same property on the single original network .",
    "therefore our method takes only a total time @xmath54 to obtain @xmath22 exactly , which is incredibly shorter than the aforementioned time @xmath23 required by the lra to obtain @xmath22 approximately .",
    "importantly , @xmath50 is independent of the complexity of the topological property @xmath21 to measure , which means that for complicated properties @xmath55 . therefore for any topological property @xmath21 which can be measured in a large but still reasonable time @xmath56 on the real network , the computation of its expectation value @xmath22 will require the same time @xmath56 .",
    "if the time required in order to obtain @xmath22 is too large , it is because the time required to measure @xmath21 is too large as well . in other words ,",
    "the property @xmath21 is too complicated to be computed on the real network itself .",
    "in such a case , the problem is not due to the method , but to a demanding choice of @xmath21 for that particular network .",
    "note that we are assuming that the topological properties of the real network are computed using the full adjacency matrix .",
    "this is the worst - case scenario , since in many cases ( especially for sparse networks ) it is enough to use reduced information such as the list of existing links .",
    "for instance , the time to measure the clustering coefficient can be significantly shorter , using optimized algorithms , on a sparse network than on a generic network of the same size ( an in this case it will also be shorter than the time required to compute its randomized value across our ensemble ) . however , our interest is precisely to focus on the ( worst ) general case ( e.g. dense and very dense networks ) , because it is in this case that other approaches fail ( such as eq .",
    "[ eq_cl ] ) , or become extremely time consuming ( such as the lra , which takes longer for denser graphs ) .",
    "we now show the application of our method to real networks of various type , by considering several topological properties and their randomized counterparts .",
    "we start with the simplest case of binary undirected networks .",
    "one of the most important topological properties of a binary network is the correlation between the degrees of adjacent nodes , which has been shown to dramatically affect various structural and dynamical features @xcite .",
    "these correlations can be measured by the average nearest neighbour degree ( annd ) , which on the real network @xmath10 is defined as @xmath57 while the degree is a first - order property which only depends on the number of links ( topological paths of length one ) entering a vertex , the annd is a second - order property contributed by paths of length @xmath58 ( i.e. the terms @xmath59 ) .",
    "similarly , a third - order ( i.e. involving paths of length 3 ) property is the clustering coefficient @xmath60 , which represents the fraction of pairs of neighbours of vertex @xmath7 which are mutually connected : @xmath61     one standard deviation ) obtained using our method .",
    "the green curves are the flat expectations under the erds - rnyi random graph model , and highlight the average level of correlation in the random case .",
    "the panels report @xmath62 versus @xmath0 ( left ) and @xmath60 versus @xmath0 ( right ) for : a ) and b ) the network of the largest us airports ( @xmath63 ) @xcite , c ) and d ) the synaptic network of _ caenorhabditis elegans _ ( @xmath64 ) @xcite , e ) and f ) the protein - protein interaction network of _ helicobacter pylori _",
    "( @xmath65 ) @xcite , g ) and h ) the network of liquidity reserves exchanges between italian banks in 1999 @xcite ( @xmath66 ) , i ) the internet at the as level ( @xmath67 ) @xcite and j ) the protein - protein interaction network of _ saccharomices cerevisiae _ ( @xmath68 ) @xcite .",
    "the last two networks are randomized using only our method , as the local rewiring algorithm would require much more time given the large number of edges .",
    "[ fig_undirected ] ]    as we mentioned , it is always important to assess whether in a particular real network higher - order properties arise merely as a consequence of low - level constraints or whether they signal additional structural patterns .",
    "in particular , comparing the real network @xmath10 with the cm ( which provides an ensemble of random networks having , on average , the same degree sequence @xmath26 as @xmath10 ) allows to assess whether longer topological paths and the structural properties involving them are simply a random concatenation of the individual links enforced by the degree sequence , or whether they are irreducible to first - order constraints .",
    "as we discuss in detail in the appendix , our method can solve this problem by making use of an auxiliary @xmath2-dimensional vector @xmath69 of parameters .",
    "in particular , one must look for the particular values @xmath70 that solve the following set of @xmath2 coupled nonlinear equations : @xmath71 where @xmath13 is the observed degree of vertex @xmath7 in the real network @xmath10 .",
    "once the parameter values are found , they allow to obtain analytically the expectation value @xmath72 of any topological property @xmath21 across the desired ensemble",
    ". this simply amounts to replace the adjacency matrix entry @xmath73 appearing in the definition of @xmath53 with its expectation value @xmath74 which represents the correct expression that should be used in place of eq.([eq_cl ] ) .",
    "similarly , it is possible to obtain the standard deviation @xmath75 $ ] analytically in terms of @xmath70 ( see appendix ) .",
    "in fig.[fig_undirected ] we show an application of our method on the network of the 500 largest us airports @xcite , a synaptic network @xcite , two protein interaction networks @xcite , an interbank network @xcite and the internet at the autonomous systems level @xcite .",
    "these are among the most studied networks of this type .",
    "we compare the correlation structure of the original networks , as measured by the dependence of @xmath76 and @xmath77 on @xmath13 , with the expected values @xmath78 and @xmath79 obtained analytically using our method .",
    "note that we are averaging the values of @xmath76 and @xmath77 over all vertices with the same degree : this makes our comparison with the values @xmath78 and @xmath79 consistent , since both real and randomized quantities can be plotted using the same values @xmath80 on the abscissa ( we use the same strategy in what follows ) .",
    "we also highlight the region within one standard deviation around the average by plotting the curves @xmath81 $ ] and @xmath82 $ ] . for the sake of comparison",
    ", we also report the average values obtained sampling the microcanonical ensemble with the standard local rewiring algorithm @xcite , and the expected values over the ensemble of random graphs with the same number of links ( _ random graph model _",
    ", rg ) as we mentioned , the microcanonical method requires the generation of many randomized variants , many rewirings per variant , and the measurement of @xmath62 and @xmath60 on each variant separately , plus a final averaging .",
    "by contrast , our method only requires the preliminary estimation of the @xmath83 .",
    "then the calculation of @xmath84 and @xmath85 takes exactly the same time as that of the empirical values .",
    "as can be seen , the two approaches yield very similar results ( in the appendix we provide a detailed comparison of the two methods ) .",
    "for the two largest networks ( the protein interactions in _",
    "s. cerevisiae _ and the internet ) , we only report the expectations obtained using our method , as the microcanonical approach would require too much computing time .",
    "the above results allow to interpret the effect of the degree sequence on higher - order properties .",
    "firstly , the trends displayed by the cm are not flat as those expected in the random graph case .",
    "this confirms that residual structural correlations , simply due to the enforced constraint , are still present after the rewiring has taken place .",
    "the presence of these correlations does not require any additional explanation besides the existence of the constraints themselves .",
    "this is very different from the picture one would get by using the ( wrong ) expectation of eq.([eq_cl ] ) which would yield flat trends as well , naively suggesting that correlations can never be traced back to the degree sequence alone .",
    "secondly , while the trends observed in all the networks considered are always decreasing , they unveil different correlation patterns when compared to the randomized trends .",
    "the real interbank data are almost indistinguishable from the randomized curves , meaning that structural constraints can fully explain the observed behaviour of higher - order network properties . instead ,",
    "in the airport network the randomized curves lie below the real data ( except for an opposite trend of @xmath84 for low degrees ) .",
    "this means that the real network is more correlated than the baseline randomized expectation , and indicates that additional mechanisms producing positive correlations must be present on top of structural effects .",
    "by contrast , in the _ h. pylori _",
    "s protein network the expected curves lie above the real data , suggesting the presence of mechanisms producing negative correlations .",
    "the same is true for the correlation structure of the internet , confirming previous results @xcite , while _ s. cerevisiae _",
    "s protein network is completely different from its randomized variants .",
    "therefore seemingly similar trends can actually reveal very different types of structural organization .",
    "this means that measuring the topological properties alone is uninformative , and makes the comparison between real data and randomized ensembles essential .",
    "thus the possibility to analytically and quickly characterize the latter , which was previously unavailable , is a remarkable advantage of our approach .",
    "we now consider binary directed networks , which are specified by an asymmetric adjacency matrix @xmath5 .",
    "the local constraints are now represented by the joint sequence of out - degrees and in - degrees @xmath86 .",
    "given a particular real network @xmath10 and a measured topological property @xmath53 , our method allows to analytically obtain the expectation value @xmath72 and standard deviation @xmath75 $ ] across the ensemble of binary directed graphs with , on average , the same directed degree sequences @xmath87 and @xmath88 as @xmath10 ( _ directed configuration model _ , dcm ) .",
    "as shown in the appendix , in this case our method makes use of two @xmath2-dimensional vectors @xmath89 , @xmath90 of auxiliary variables , and requires that these parameters are set to the particular values @xmath70 , @xmath91 that solve the following set of @xmath92 coupled nonlinear equations : @xmath93 the quantities @xmath70 , @xmath91 allow to obtain @xmath72 and @xmath75 $ ] analytically and quickly , outperforming the directed version of the lra . and @xmath15",
    "are randomly selected and replaced with the directed edges @xmath16 and @xmath17 , if the latter are not already present . ]",
    "note that , as in the undirected case , the method only makes use of the sufficient statistics of the problem .",
    "one standard deviation ) .",
    "the green curves are the flat expectations under the directed version of the erds - rnyi random graph model .",
    "the panels report @xmath94 versus @xmath95 ( left ) and @xmath96 versus @xmath97 ( right ) for : a ) and b ) the directed neural network of _ caenorhabditis elegans _ ( @xmath64 )",
    "@xcite , c ) and d ) the metabolic network of _ escherichia coli _ ( @xmath98 ) @xcite , e ) and f ) the _ little rock lake _ food web ( @xmath99 ) @xcite . for the _ c. elegans _ network , we also show the microcanonical standard deviations obtained using the lra ( black dotted curves ) , which are indistinguishable from the grandcanonical ones .",
    "[ fig_directed1 ] ]    we apply our method to various directed networks , by studying the second - order topological properties measured by the outward annd and the inward annd , which are defined as two natural generalizations of eq.([eq_knn ] ) : @xmath100 in fig.[fig_directed1 ] we plot the observed values @xmath101 versus @xmath102 and @xmath103 versus @xmath104 , as well as the expectations @xmath105 $ ] and @xmath106 $ ] obtained using our model ( see appendix ) , for three real directed networks : the neural network of _ c. elegans _",
    "@xcite ( now in its directed version ) , the metabolic network of _",
    "@xcite , and the _ little rock lake _ food web @xcite . as before",
    ", we also show the microcanonical average obtained using the lra and the expectation under the _ directed random graph model _ ( drg ) with the same number of links .",
    "again , we find a very good agreement between the two approaches , confirming that our method yields the correct prediction in incredibly shorter time ( see appendix for a discussion about the convergence time of the lra to our exact results ) .",
    "for the _ c. elegans _ network ( fig .",
    "[ fig_directed1]a - b ) , we also show the microcanonical standard deviations , which turn out to be indistinguishable from the grandcanonical ones .",
    "we also confirm that while some networks ( _ c . elegans _ and _ e. coli _ ) are almost consistent with the null model , others ( _ little rock _ ) deviate significantly .    however , the most interesting point for the present analysis is that , while for the undirected networks considered above all randomized trends were decreasing , in this case we find that the three randomized trends behave in totally different ways . in the neural network , both @xmath107 and @xmath108",
    "are approximately constant .",
    "this means that the baseline behavior for both quantities is flat and uncorrelated ( as in the directed random graph , but at a different level ) .",
    "by contrast , in the metabolic network the expected curves are decreasing , and thus the ensemble of randomized networks is disassortative as for the undirected graphs considered above .",
    "finally , in the food web the constraints enforce unusual positive correlations , and the randomized ensemble is even assortative .",
    "interestingly , while it is expected that random networks with specified degrees display a disassortative behavior @xcite , the assortative trend is totally surprising .",
    "this is because our method extracts the hidden variables directly from the specific real world network , rather than drawing them from ad hoc distributions .",
    "the resulting values can be distributed in a very complicated fashion , invalidating the results obtained under other hypotheses . to further highlight this important point , we selected three more food webs characterized by a particularly small size ( see fig.[fig_foodwebs ] ) .",
    "small networks can not be described by approximating the mass probability function of their topological properties ( such as the degree ) with a continuous probability density .     one standard deviation ) under the directed configuration model obtained using our method .",
    "the green curves are the flat expectations under the directed version of the erds - rnyi random graph model .",
    "the panels report @xmath94 versus @xmath95 ( left ) and @xmath96 versus @xmath97 ( right ) for : a ) and b ) the narragansett bay web ( @xmath109 ) @xcite , c ) and d ) the mondego estuary web ( @xmath110 ) @xcite , e ) and f ) the st .",
    "marks river web ( @xmath111 ) @xcite . for the latter , in g ) and",
    "h ) we also compare the empirical data with the expectations under the reciprocal configuration model , where also the number of reciprocated links of each vertex is specified.[fig_foodwebs ] ]    therefore in this case the difference between the expectations obtained by drawing the @xmath89 and @xmath90 values from analytically tractable continuous distributions and those obtained by solving eqs.([eq_koutin ] ) using the empirical degrees is particularly evident . as we show in fig.[fig_foodwebs ] ( where for simplicity we omit the comparison with the lra ) , we confirm that the ( directed ) cm can display not only flat or decreasing trends , but also increasing ones .",
    "importantly , in this case all three webs do not deviate dramatically from the null model .",
    "this means that while one would be tempted to interpret the three observed trends as signatures of different patterns ( zero , negative and positive correlation ) , actually in all three cases the observed behavior can be roughly replicated by the same mechanism and almost entirely traced back to the degree sequence only .",
    "this unexpected result highlights once again that the measured values of any topological property are _ per se _ entirely uninformative , and can only be interpreted in relation to a null model .",
    "so far , in our analysis of directed networks we have considered second - order topological properties . in principle , third - order properties can be studied by introducing directed generalizations of the clustering coefficient @xcite .",
    "however , there is a proliferation of possible third - order patterns due to the directionality of links .",
    "for this reason , a more complete analysis consists in counting ( across the entire network ) all the possible directed _ motifs _",
    "@xcite involving three vertices , and comparing the empirical abundances with the expected ones under the null model .",
    "as we show in a moment , our method lends itself admirably in such a case . before presenting our results , we note however that directionality makes the possible specifications of the null model proliferate as well . in particular , besides the dcm considered above , a more refined way to randomize directed networks includes the possibility to enforce additional constraints on the reciprocity structure @xcite . in other words , it is possible ( and important in many applications @xcite ) to preserve not only the total numbers @xmath95 and @xmath97 of incoming and outgoing links of each vertex , but also the number @xmath112 of reciprocated links ( pairs of links in both directions ) @xcite .",
    "this specification is equivalent to enforce , for each vertex @xmath7 , the three quantities @xcite @xmath113 ( number of non - reciprocated outgoing links ) , @xmath114 ( number of non - reciprocated incoming links ) and @xmath115 ( number of reciprocated links ) , where @xmath116 , @xmath117 and @xmath118 .    given a real directed network @xmath10 , we denote the null model with specified joint reciprocal degree sequences @xmath119 as the _ reciprocal configuration model _ ( rcm ) .",
    "this is an example of model with nonlocal ( second - order ) constraints which can still be treated analytically using our method . as we show in the appendix , in this case one must solve the following @xmath120 coupled equations : @xmath121 the expectation value of any topological property , as well as its standard deviation",
    ", can now be calculated analytically in terms of the three @xmath2-dimensional vectors @xmath70 , @xmath91 , @xmath122 .",
    "for instance , in fig.[fig_foodwebs]g - h we repeat the analysis of the directed annd of the st .",
    "marks river food web , now comparing the observed trend against the rcm . in this case",
    ", we find no significant difference with respect to the dcm considered above ( fig.[fig_foodwebs]e - f ) .",
    "however , as we now show , the analysis of motifs reveals a dramatic difference between the predictions of the two null models .",
    "if @xmath123 denotes the number of occurrences of a particular motif @xmath124 , our method allows to calculate the expected number @xmath125 and standard deviation @xmath126 $ ] exactly ( see appendix ) , and thus to obtain the @xmath52-score @xmath127\\equiv\\frac{n_m(\\mathbf{a}^*)-\\langle n_m\\rangle^*}{\\sigma^*[n_m]}\\ ] ] analytically .",
    "this can be done for both the dcm and the rcm .",
    "the value of @xmath128 $ ] indicates by how many standard deviations the observed and expected numbers of occurrences of motif @xmath124 differ .",
    "large values of @xmath128 $ ] indicate motifs that are either over- or under - represented under the particular null model considered , and that are therefore not explained by the lower - order constraints enforced . in fig.[fig_motifs ] we show the @xmath52-scores for all the possible 13 non - isomorphic connected motifs with three vertices in 8 real food webs , for both null models .",
    "we also show the two lines @xmath129 to highlight the region within 2 standard deviations from the model s expectations .",
    "this analysis is similar to that of ref.@xcite , but is made much simpler by our method which does not require to randomize the webs through a computational algorithm preserving the ( reciprocal ) degree sequences .",
    "the food webs considered here are from different ecosystems ( lagoons , marshes , lakes , bays , estuaries , grasses ) , with a prevalence of aquatic habitats .",
    "the presence of ( intrinsically directed ) predator - prey relationships implies that reciprocity is a very important quantity in food webs @xcite .",
    "thus the rcm should fluctuate less than the dcm .",
    "indeed , this is confirmed by our analysis .",
    "the @xmath52-scores for the motifs @xmath130 are significantly reduced from the dcm to the rcm . also , while the motifs @xmath131 display large values of @xmath52 with opposite signs across different webs under the dcm , the signs of all statistically surprising motifs ( i.e. when @xmath132 ) become consistent with each other under the rcm ( except for @xmath133 ) .",
    "- chesapeake bay , @xmath134 - little rock lake , @xmath135 - maspalomas lagoon , @xmath136 - florida bay , @xmath137 - st marks seagrass , @xmath138 - everglades marshes , @xmath139 - grassland , @xmath140 - ythan estuary .",
    "+ application of our method to the analysis of directed _ motifs _ involving three vertices in 8 real food webs .",
    "top panel : @xmath52-scores obtained enforcing only the in - degree and out - degree sequences ( directed configuration model ) .",
    "bottom panel : @xmath52-scores obtained enforcing also the reciprocal degree sequence ( reciprocal configuration model ) .",
    "[ fig_motifs ] ]    as a consequence , under the rcm all networks display a very similar pattern , and the most striking features of real webs become the over - representation of motifs @xmath141 ( plus @xmath142 for the little rock lake web ) and the under - representation of motifs @xmath143 ( plus @xmath144 for little rock lake ) .",
    "in particular , the under - representation of motif @xmath145 ( the 3-loop ) is the most common pattern across all webs , and becomes stronger as the reciprocity of the web increases .",
    "also note that in a network with no reciprocated links , the number of motifs with at least a pair of reciprocated links is zero . under the rcm ,",
    "the expected number of these motifs remains zero .",
    "by contrast , their expected number under the dcm is always positive .",
    "thus we confirm that the upgrade to the rcm is necessary , as its stricter constraints allow to analyze 3-vertices motifs once 2-vertices motifs ( i.e. all possible dyadic patterns ) are correctly accounted for .",
    "the possibility to treat the rcm analytically using our method is therefore an important step forward .",
    "remarkably , our method works equally well for weighted graphs ( where the binary adjacency matrix @xmath5 is replaced by a non - negative weight matrix @xmath146 ) , thanks to recent analytical results that allow to characterize maximally random weighted networks with specified properties in a way that is completely analogous to their binary counterparts @xcite . in a particular weighted network @xmath147 ,",
    "the local constraints are the strength sequence @xmath148 ( undirected case ) or the joint out - strength and in - strength sequence @xmath149 ( directed case )",
    ". we will only consider undirected weighted networks .",
    "the extension to the directed case is straightforward .",
    "the family of randomized weighted graphs with the same strength sequence as a real weighted network is sometimes denoted as the _ weighted configuration model _ ( wcm ) @xcite .",
    "the available microcanonical algorithms regard each link weight as an integer multiple @xmath150 of a fundamental unit of weight , transform each edge of weight @xmath150 into @xmath150 edges of unit weight , and rewire the latter as in the unweighted case , now ensuring that the strength ( total number of incoming edges of unit weight ) of each vertex is preserved .",
    "this means replacing a list of @xmath151 weighted links , summing up to a total weight @xmath152 , with @xmath153 unweighed links .",
    "as real networks have broadly distributed weights summing up to a large @xmath154 , this procedure becomes very time consuming as incredibly many rewiring steps per randomized variant must be performed .",
    "as for the binary case , an alternative procedure makes use of a naive theoretical expectation @xcite for the expected weight of a link in the wcm , in analogy with eq.([eq_cl ] ) :    @xmath155    however , the above expression has been shown to have as many limitations as its binary counterpart , and to be incorrect @xcite .    by contrast , as we show in the appendix , our method allows to treat the wcm analytically as in the unweighted case .",
    "note that choosing the unit of weight in the wcm ( before performing the randomization ) is in principle arbitrary , but the resulting ensemble will be different for different choices .",
    "this issue of granularity is an open problem that deserves future investigations .",
    "our grandcanonical alternative to the wcm is not aimed at fixing the problem , but at providing , for a given choice of the weight unit in the microcanonical ensemble , the corresponding grandcanonical expectation .    given a real weighted undirected network @xmath147 , our method proceeds by finding the particular values @xmath83 solving the @xmath2 coupled equations",
    "@xmath156 note the difference of sign with respect to eq.([eq_k ] ) . as in the binary case ,",
    "the knowledge of @xmath70 allows to obtain the expectation value @xmath72 and standard deviation @xmath75 $ ] of any weighted topological property @xmath21 analytically across the ensemble of weighted graphs with , on average , the same strength sequence @xmath157 as the real network @xmath147 .",
    "again , the time required to obtain @xmath72 is as short as that required to measure the empirical value @xmath158 , as @xmath72 can be obtained by replacing @xmath159 with the expectation value @xmath160 into the definition of @xmath158 .",
    "equation ( [ eq_wcorrect ] ) corrects the naive expectation ( [ eq_clw ] ) .    in order to apply our method",
    ", we need to choose the weighted topological properties to investigate .",
    "generalizing binary properties to weighted graphs is arbitrary , as no unique choice exist @xcite .",
    "to better highlight the generality of our approach , here we follow ref.@xcite since it introduces a way to always systematically define a weighted counterpart @xmath161 for every binary property @xmath21 .",
    "the idea is to define @xmath161 as an average of @xmath21 over the ensemble of binary graphs generated by a convenient connection probability @xmath162 $ ] which is a function of the observed weights @xmath163 .",
    "the functional form of @xmath28 can in principle be chosen depending on the empirical properties one wants to detect ; however , our purpose here is using our method to compare the empirical properties with the expected ones , rather than comparing alternative definitions of the empirical properties themselves .",
    "therefore we make the simplest choice and , given a real weighted network @xmath147 , we set @xmath164 where @xmath165 is the total weight .",
    "this choice yields the following definition for the weighted degree @xcite : @xmath166 which is simply proportional to the strength .",
    "similarly , the weighted annd and clustering are defined as the counterparts of eqs.([eq_knn ] ) and ( [ eq_c ] ) @xcite : @xmath167 @xmath168 in analogy with the binary case , @xmath169 and @xmath170 can be plotted against @xmath171 ( or equivalently @xmath3 ) in order to investigate the correlation structure of the weighted network .",
    "one standard deviation ) .",
    "green dashed curves are the flat expectations under the _ weighted random graph model _ , wrg @xcite .",
    "the panels report @xmath169 versus @xmath3 ( left ) and @xmath170 versus @xmath3 ( right ) for : a ) and b ) the florida bay food web ( n=128 ) @xcite , c ) and d ) the italian interbank network ( n=215 ) @xcite , e ) and f ) the _ c. elegans _ neural network ( n=265 ) @xcite , g ) and h ) a snapshot of the us airport network ( n=332 ) @xcite.[fig_weighted ] ]    in fig.[fig_weighted ] we analyze the weighted and undirected ( symmetrized ) versions of four networks we have already considered in the previous binary study : the the florida bay food web , the italian interbank network , the c. elegans neural network and the us airport network . we compare the empirical results with the expected trends ( @xmath172 one standard deviation ) under the wcm obtained using our method . for simplicity",
    ", we only show the results obtained using our method , and omit the time - consuming microcanonical comparison .",
    "note that , since the strengths are preserved in the wcm , i.e. @xmath173 @xmath174 , the total weight is preserved as well : @xmath175 .",
    "we find that the empirical trends are quite scattered and variable : some are weakly increasing ( florida bay ) , some are approximately constant ( interbank web ) , others first increase and then decrease ( airport network ) .",
    "these diverse trends must be compared with a null model which , unlike naively expected from eq.([eq_clw ] ) , is not flat and displays a not easily characterizable increasing behavior .",
    "a common feature is that , with respect to the null behavior , real weighted networks are more assortative and clustered for low values of the strength , while they are less assortative and clustered for high values for the strength .",
    "these considerations confirm that , even in the weighted case , the empirical trends are uninformative by themselves , and always require a comparison with a null model .",
    "our method allows to treat the otherwise problematic wcm in a simple way , in straightforward analogy with the binary case .",
    "although we do not consider this possibility here explicitly , for weighted networks one could also enforce additional constraints on the degree sequence .",
    "this amounts to specifying not only the strength of each vertex , but also its purely topological degree @xcite . in this case , sampling the randomized ensemble by means of computational algorithms becomes even more difficult .",
    "by contrast , our method can still be used efficiently , as the analytical expressions characterizing the corresponding maximum - entropy ensemble have been derived recently @xcite .",
    "those results easily allow to obtain the equations implied by the ml principle , as well as the expectation values of network properties over the ensemble , in a straightforward fashion .    for completeness , in fig.[fig_errk ]",
    "we show the ratios of the contraints standard deviations , @xmath176 , to the constraints expected values , @xmath177 ( a quantity known in statistics as _ coefficient of variation _ ) , plotted versus the expected values . for small values of the constraints @xmath178 ( an approximation valid both for binary and weighted networks ) ; the higher the constraints expected values , the more important becomes a correction factor whose entity ( and sign ) depends on the particular type of network considered ( see appendix for the details of the calculations ) : in the food webs ( panel b ) the presence of in - degree hubs implies the correction to be important even for small out - degree vertices .",
    "/k_{i}$ ] plotted versus the degrees @xmath179 for the binary undirected networks of fig.[fig_undirected ] , b ) the ratios @xmath180/k_{i}^{out}$ ] and @xmath181/k_{i}^{in}$ ] plotted versus the degrees @xmath182 and @xmath183 , respectively , for the binary directed networks of fig.[fig_directed1 ] and fig.[fig_foodwebs ] and c ) the ratios @xmath184/s_{i}$ ] plotted versus the strengths @xmath185 for the weighted undirected networks of fig.[fig_weighted ] .",
    "the food webs are indicated by means of symbols .",
    "the black dashed line is the function @xmath186 which is expected to well reproduce the coefficients of variation for small values of the constraints .",
    "[ fig_errk ] ]",
    "our method make use of the correct expressions ( [ eq_acorrect ] ) and ( [ eq_wcorrect ] ) for the connection probability and expected weight respectively , in place of the incorrect naive expressions ( [ eq_cl ] ) and ( [ eq_clw ] ) . while the latter depend only on the properties ( @xmath0 or @xmath3 ) of the end - point vertices @xmath7 and @xmath8 , the former depend on the entire degree or strength sequence through eqs.([eq_k ] ) and ( [ eq_s ] ) .",
    "we have shown that this has a dramatic effect on the properties of the randomized ensemble .",
    "in particular , we have found that enforcing the same set of constraints in different networks can yield very different trends for the randomized properties , whose behavior is therefore highly unpredictable _ a priori_. the general expectation that randomized higher - order properties ( such as @xmath84 and @xmath85 in unweighted networks or @xmath187 and @xmath188 in weighted networks )",
    "are independent of the local ones ( @xmath0 or @xmath3 ) turns out to be only a very infrequent possibility among the possible scenarios .",
    "indeed , we have also found increasing and decreasing trends for the randomized quantities , and shown that the particular behavior displayed by the null model highly depends on the particular values of the constraints in the original real - world network .",
    "this makes the comparison with the particular null model even more important than previously expected , and underlines the importance of a tractable description enabled by our analytical method .",
    "the incorrectness of eqs.([eq_cl ] ) and ( [ eq_clw ] ) , as well as of their directed counterparts , has another series of undesired effects , as those expressions have been explicitly used to define important structural quantities involved in network analysis . indeed ,",
    "even when not explicitly used to randomize a network , null models unavoidably enter into the analytical expressions defining many properties of interest .",
    "for instance , many popular community detection algorithms make use of the concept of _ modularity _ to evaluate the quality of a partition of the network against a null case @xcite .",
    "a partition into communities can be represented by the matrix @xmath189 , where @xmath190 if vertices @xmath7 and @xmath8 are assigned the same community and @xmath191 otherwise . for a binary undirected network @xmath10 ,",
    "the modularity @xmath192 of the partition @xmath189 has been defined as @xmath193 where @xmath28 is the probability that @xmath7 and @xmath8 are connected in a suitable null model , and the most frequent choice is the cm .",
    "similarly , for a weighted undirected network @xmath147 the modularity of the partition @xmath189 is @xcite @xmath194 where @xmath195 is the expected weight of the link joining @xmath7 and @xmath8 in the wcm .",
    "unfortunately , the expressions for @xmath28 and @xmath195 are always taken to be eqs.([eq_cl ] ) and ( [ eq_clw ] ) respectively . to the best of our knowledge ,",
    "no rigorous assessment of the consequences of using these approximations has been provided .",
    "therefore the problems described in the present paper affect any modularity - based community detection problem in an uncontrolled way .",
    "our methods provides the previously unavailable exact expressions ( [ eq_acorrect ] ) and ( [ eq_wcorrect ] ) , whose values can be inserted into eqs.([eq_q1 ] ) and ( [ eq_q2 ] ) to have the correct modularity",
    ". a straightforward analysis of how the correct expressions change the detected community structure of real networks is an important open point to address in the future .",
    "we have presented a fast and exact method to obtain analytical results about the grandcanonical ensemble of randomized variants of a particular real - world network that preserve its average local properties .",
    "the method works for both weighted and unweighted networks , and for both directed and undirected graphs . in any case",
    ", it requires as the input only the strength or degree sequence(s ) , which represent the sufficient statistics of the problem . our approach can be extended to enforce different or additional constraints , such as the reciprocity structure in directed networks or the simultaneous specification of strengths and degrees in weighted networks .",
    "notably , our results show that maximally random networks exhibit a diverse range of behaviors which is sensitive to the particular values of the constraints displayed by the real network , making a case - by - case comparison of the observed properties with the randomized ones necessary .",
    "this diversity of outcomes is in any case not captured by widely used but incorrect expressions for the expected properties .",
    "unfortunately , important network properties such as the modularity completely rely on such expressions , a problem that may have therefore biased previous analyses of community structure in networks .",
    "we believe that our contribution represents a promising step towards the identification of relevant information in real networks .",
    "here we describe our maximum - likelihood method in its general formulation .",
    "our approach combines previous analytical results ( obtained by one of us @xcite and other authors @xcite ) about the properties of maximum - entropy graph ensembles with previous results ( by one of us @xcite ) about the maximum - likelihood estimation of free parameters in such ensembles , and adds to them a new technique to obtain analytical expressions for the expectation value and standard deviation of any topological property of interest across the ensemble . after describing the method in general terms",
    ", we derive the explicit expressions that apply in the particular cases of local constraints ( for undirected , directed and weighted networks ) .",
    "we then consider an extension to nonlocal constraints , and finally compare our analytical method with alternative computational techniques .",
    "our method aims at characterizing analytically the properties of families of randomized variants of a particular real network . in more rigorous terms , a family of randomized network variants is a statistical ensemble of graphs where a set of structural constraints has been specified , and the rest of the topology is completely random .",
    "let us denote by @xmath196 a generic network in the ensemble , and by @xmath197 the particular real - world network that we need to randomize .",
    "the ensemble will consist of all possible networks @xmath198 of the same type of @xmath197 ( binary / weighted , directed / undirected ) , and will include @xmath197 itself . for binary ( either directed or undirected ) networks , each graph @xmath196 is completely specified by its adjacency matrix @xmath5 , i.e. @xmath199 .",
    "similarly , for weighed ( either directed or undirected ) networks , each graph @xmath196 is completely specified by its weight matrix @xmath146 , i.e. @xmath200 . we will keep our discussion completely general and use @xmath196 to indicate a graph of any type ( directed / undirected , binary / weighted ) .",
    "thus @xmath196 can always be thought of as a matrix with entries @xmath201 , where @xmath202 represents the ( either binary or non - negative ) weight of the edge @xmath203 .",
    "any topological property @xmath21 evaluates to @xmath204 when measured on the particular network @xmath196 , i.e. it is an ( arbitrarily complicated ) function of the entries @xmath201 .",
    "each graph @xmath196 in the ensemble has an occurrence probability @xmath205 whose form is determined by the particular constrains enforced",
    ". this probability must always be such that @xmath206 where the sum runs over all graphs in the ensemble .",
    "the expectation value of a topological property @xmath21 across the ensemble is the mean value ( ensemble average ) @xmath207 let us denote the set of constraints @xmath208 by the vector @xmath209 , where each @xmath210 is a topological property that , unlike any other generic property @xmath21 , we need to tune to the particular value displayed by the real network @xmath197 . enforcing the constraints _ exactly",
    "_ , i.e. allowing only the graphs @xmath196 such that @xmath211 , results in a so - called _ microcanonical _ ensemble characterized by the uniform probability @xmath212&\\textrm {    if    } \\vec{c}(\\mathbf{g})=\\vec{c}({\\mathbf{g}^*})\\\\ 0&\\textrm {    otherwise}\\end{array}\\right.\\ ] ] where @xmath213 $ ] denotes the number of graphs in the ensemble for which the value of each constraint @xmath210 equals the value @xmath214 .",
    "microcanonical graph ensembles are hard to deal with analytically , and they are most often sampled computationally by generating many randomized networks explicitly , using probabilistic rules that ensure that the constraints are matched exactly . currently , such computational techniques are the only available method to randomize a real network .",
    "unfortunately , the need to sample the ensemble explicitly and generating a large number of randomized graphs makes this approach computationally demanding , time consuming and beyond analytic control .    in order to develop a randomization method which is fast and analytically tractable",
    ", we exploit the results in ref.@xcite and consider the alternative possibility to enforce the constraints _ on average _ ,",
    "i.e. by only specifying their expectation values @xmath215 .",
    "the resulting ensemble is a _",
    "( grand)canonical _ one where each graph @xmath196 is assigned a probability @xmath205 that maximizes the shannon - gibbs entropy @xmath216 subject to the constraints @xmath217 and @xmath218 . maximizing the entropy subject to constraints",
    "is widely used in statistical mechanics , and in general for problems with incomplete information @xcite .",
    "the desired maximum - entropy graph probability can be found by introducing a set of lagrange multipliers @xmath219 enforcing the constraints @xmath220 .",
    "the resulting conditional ( on the value of @xmath221 ) probability reads @xcite @xmath222 where @xmath223 is the _ graph hamiltonian _ defined as the linear combination @xmath224 and the normalizing quantity @xmath225 is the _ partition function _",
    ", defined as @xmath226 the above results show that the graph probability @xmath227 always depends on the value @xmath221 , which in turn depends on the constraints considered . as a consequence , we can rewrite eq.([eq_x ] ) more explicitly as a function of @xmath221 : @xmath228 where @xmath229 denotes that the ensemble average is evaluated at the particular parameter choice @xmath221 .",
    "the above expression clarifies that the expectation value of any topological property @xmath21 depends on the specific enforced constraints through @xmath221 .",
    "different choices of the constraints imply different values of @xmath221 , @xmath227 , and @xmath230 .      as we mentioned , maximum - entropy graph ensembles generated by eq.([eq_grandp ] ) have been used extensively to characterize mathematically networks with specified properties @xcite . however",
    ", previous studies did not focus on the randomization of a particular real network ( which is our main interest here ) , but rather on the effects that the specification of certain structural properties has on other aspects of network topology . as a consequence , the lagrange multipliers @xmath231",
    "have been considered as free parameters , generally drawn from carefully chosen probability densities @xcite that allow analytical results , in terms of which the properties of the network model have been investigated . in most cases ,",
    "the aim has been to explore the topological properties in the thermodynamic limit @xmath232 , where @xmath2 is the number of vertices of the network .",
    "this means that only generic statistical properties of real networks , such as a power - law degree distribution , were used to generate the ensemble .",
    "however , this implies that the specific properties of a particular real network ( such as deviations of individual vertices from the fitted degree distribution , the intrinsic finiteness of the system , etc . )",
    "are ignored and , more importantly , that there is no correspondence between the vertices of the real network and those of the model .",
    "thus this approach allows to inspect the properties of maximum - entropy graph ensembles , but does not allow the latter to be considered as null models of _ a particular real network_. as a consequence , it can not be used to detect empirical topological patterns consisting of statistically significant deviations from a null network model .    here",
    "we make one step forward and construct , for a given choice of the constraints , the particular maximum - entropy graph ensemble representing the family of correctly randomized counterparts of a given real network @xmath197 .",
    "explicitly , we consider a grandcanonical ensemble of graphs with the same number @xmath2 of vertices as the real network , and for a given choice of the constraints we fit the model defined by eq.([eq_grandp ] ) to the empirical network @xmath197 . to this end , we exploit previous results @xcite showing that maximum - entropy graph ensembles defined by eq.([eq_grandp ] ) are a particular class of models for which the maximum - likelihood principle provides an excellent method of parameter estimation , since they are free from problems of bias afflicting other network models .",
    "in particular , it can be easily shown @xcite that the log - likelihood @xmath233 to obtain the real network @xmath197 is maximized by the particular parameter choice @xmath234 such that the ensemble average @xmath235 of each constraint @xmath210 equals the empirical value @xmath214 measured on the real network : @xmath236 where we have used @xmath237 as a shorthand notation to indicate the ensemble average @xmath238 evaluated at the particular value @xmath234 .",
    "the above results means that the maximum likelihood principle indicates , for maximum - entropy graph ensembles , precisely the parameter choice that ensures that the desired constraints are met .",
    "this is not true in general : in other network models , tuning the average values of the topological properties of interest to their empirical values requires a parameter choice which in general does not maximize the likelihood to obtain the real network @xcite , thus introducing a bias in the analysis .",
    "the idea to take the observed constraints @xmath239 as the input and find the ` hidden ' values @xmath234 that generate those constraints as the most probable ones was already proposed in ref.@xcite with the purpose of checking whether @xmath234 correlates with some external set of empirical non - topological quantities , thus unveiling possible mechanisms shaping the network topology . here",
    "we make progress , noting that finding the values @xmath234 represents a preliminary step in order to generate the randomized ensemble we are looking for , and have complete analytic control over it .",
    "this is completely independent of whether there are external empirical quantities correlating with @xmath234 .",
    "note that in eqs.([eq_x2 ] ) and ( [ eq_caverage ] ) the expectation values and the model parameters play inverted roles : while in eq.([eq_x2 ] ) the expectation values are obtained as a function of the parameters @xmath221 which can be varied arbitrarily , in eq.([eq_caverage ] ) the observed constraints , which are measured on the particular real network and are therefore given as an input , are used to fix the model parameters to the values @xmath234 .",
    "interestingly , this opposite line of research has been used quite extensively in traditional social network analysis ( where maximum - entropy ensembles of networks are widely used under the names of @xmath240 , logit or exponential random graph models @xcite ) but has not yet been transferred to the randomization problem frequently occurring in complex networks theory . as we show below , the maximum - likelihood parameter choice is exactly what we need in order to obtain statistically correct expectations over ensembles of randomized variants of any particular real - world network .",
    "this allows to understand which properties of a real - world network can be simply traced back to the enforced constraints , and which require more complicated explanations .",
    "another important difference with respect to the main approach followed in social network analysis is that our method allows to analyze weighted networks in exactly the same way as binary graphs , which are instead usually not studied within the @xmath240 framework . as a consequence , some of the analytical results we derive and use represent previously unavailable tools to study weighted networks ( and maximum - entropy ensembles of them ) through a straightforward analogy with binary networks . finally , in all the applications we consider it is always possible to find the maximum - likelihood parameter values @xmath234 exactly even for large networks , without resorting to the approximate techniques traditionally used in social network analysis @xcite .",
    "therefore our approach extends in many directions the connection between exponential random graphs and maximum - entropy network ensembles , and strengthens considerably the existing relation between social science and network theory .      equation ( [ eq_caverage ] ) provides an implicit expression for the value @xmath234 , and solving it is equivalent to maximizing eq.([eq_likelihood ] ) .",
    "the numerical value of the solution @xmath234 is the key ingredient we are looking for in order to detect topological patterns in the real network @xmath197 analytically , without performing any time - consuming computational randomization . indeed , if we insert the value @xmath234 into eq.([eq_x2 ] ) we obtain @xmath241 which provides the exact expected value of any topological property @xmath21 across the maximum - entropy graph ensemble where the expected values @xmath242 of the topological properties @xmath209 chosen as constraints are set equal to the empirical values @xmath243 measured on the real network @xmath197 , as ensured by eq.([eq_caverage ] ) . for simplicity ,",
    "given a real network @xmath197 and a set of constraints @xmath209 , we shall sometimes call @xmath72 the _ randomized value _ of the topological property @xmath21 .",
    "the comparison of @xmath72 with the empirical value @xmath244 allows to assess whether , in the real network @xmath245 , the topological property @xmath21 requires additional information besides that provided by the properties @xmath209 . if @xmath244 is sufficiently close to @xmath72 ( within a statistical error that we determine in [ app_variance ] ) , one can conclude that the enforced constraints @xmath209 fully explain the property @xmath21 .",
    "by contrast , if @xmath244 is significantly different from @xmath72 , then the properties @xmath209 do not explain the property @xmath21 , which means that the structure of @xmath197 is determined by other factors besides those determining @xmath209 .",
    "this allows to assess which topological properties can be traced back to ( i.e. explained by ) the chosen constraints in any real network , and which can not .",
    "trivially , if @xmath21 is one of the properties among the enforced constraints ( i.e. if @xmath246 for some @xmath247 ) , then eq.([eq_caverage ] ) implies @xmath248 by construction .    note that any other parameter choice @xmath249 would not enforce the chosen constraints and would yield an expectation value @xmath230 different from the desired one , i.e. not corresponding to the correct randomized value @xmath72 for that particular network and for that particular choice of the constraints .",
    "this clarifies why previous results @xcite about the properties of maximum - entropy ensembles , that were obtained using @xmath221 as a free parameter unrelated to the empirical values @xmath243 and to the real network @xmath197 itself , can not be used in order to solve the pattern detection problem considered here .",
    "also note that @xmath243 is the _ sufficient statistics _ of our problem , which completely determines @xmath250 through eq.([eq_caverage ] ) and consequently any randomized property @xmath72 .",
    "the knowledge of the other topological properties of the real network @xmath197 is useless .",
    "this means that two real networks @xmath251 and @xmath252 with exactly the same values @xmath253 of the constraints generate the same maximum - entropy ensemble , and give rise to the same value of @xmath250 and @xmath72 , as should be .",
    "clearly , the possibility to solve eq.([eq_caverage ] ) and to obtain the randomized properties through eq.([eq_x * ] ) both depend on whether one manages to rewrite the formal expression for @xmath230 in eq.([eq_x2 ] ) in a simplified form that avoids the unfeasible actual enumeration of all graphs @xmath198 in the ensemble . in practical terms",
    ", this means that not all specifications of the constraints @xmath209 allow to solve eq.([eq_caverage ] ) and obtain @xmath234 , and not all topological properties @xmath21 allow to be averaged exactly through eq.([eq_x * ] ) .",
    "however , as we describe in [ app_local ] , the first step can always be carried out successfully whenever one considers _ local _ constraints as the ones of interest for us . similarly , as we now show in general and then restate more explicitly in each particular case , the expectation value @xmath72 of any higher - order topological property @xmath21 of interest can be rewritten , either exactly or approximately , in a way that is only as complicated as measuring @xmath244 on a single network , rather than on all graphs @xmath198 in the ensemble .",
    "this represents a major advantage of our method : the computation of an expectation value across the entire ensemble of graphs is only as time - consuming as the computation of the corresponding observed value on the empirical network @xmath197 .",
    "thus , if the observed value can be computed in reasonable time , the same is true for the expectation value . to see this , we write down an approximated expression for @xmath72 as a taylor expansion .",
    "note that any property @xmath204 depends in general on all the entries @xmath201 of the matrix @xmath196 , which are the fundamental degrees of freedom of the problem .",
    "the ensemble average of @xmath202 reads @xmath254 if we define the gradient matrix of any topological property @xmath204 as @xmath255 and if we denote by @xmath256 the matrix whose entries @xmath257 are the expectation values @xmath258 , it is possible to expand @xmath22 around @xmath256 and write the multidimensional first - order taylor expansion @xmath259 in the above expression , @xmath260 means that we are evaluating the quantity in brackets by replacing each @xmath202 with @xmath258 , and @xmath261 denotes the scalar product of two matrices @xmath5 and @xmath262 , and the double sum runs over all @xmath263 ordered pairs of vertices ( with @xmath264 ) .",
    "note that for an undirected network , where @xmath265 by construction , half of the terms in the sum in eq.([eq_taylor ] ) will be equal to zero , since one has either @xmath266 or @xmath267 , depending on whether @xmath202 or @xmath268 appears in the formal definition of @xmath21 . with the above approximation",
    ", the expectation value of @xmath21 reads @xmath269 since the first - order terms vanish .",
    "the above formula shows that , if one evaluates @xmath22 by simply replacing @xmath196 with @xmath270 into @xmath204 ( _ linear approximation _ ) , the difference with respect to the exact expectation value is only in the second- and higher - order terms .",
    "this is true for any value of @xmath221 , on which all expectation values depend .",
    "as already explained , our method consists in choosing the particular value @xmath234 solving eq.([eq_caverage ] ) , which yields an expectation value @xmath271 among all possible parameter values @xmath221 , the choice of @xmath234 ensures that the deviation of the approximate value @xmath272 from the exact one @xmath204 in eq.([eq_taylor ] ) is minimal , since @xmath273 is as close as possible to @xmath196 , if the chosen constraints @xmath209 are chosen as a reference to measure the difference between @xmath270 and @xmath196 . in particular , when @xmath21 coincides with one of the enforced constraints @xmath210 , eq.([eq_expxgeneral ] ) becomes an exact expression , as we mentioned .",
    "moreover , as we show later in [ app_local ] , most topological properties of interest in our analysis are either multilinear functions of statistically independent matrix elements @xmath201 or ratios of multilinear functions . in the former case ,",
    "the expectation value @xmath72 is exactly @xmath274 . in the latter case",
    ", the numerator and denominator will be separately evaluated exactly , and the approximation will only affect the ratio . in general , ratios of averages can be very different from averages of ratios .",
    "however we confirmed ( see figs.[fig_undirected ] and [ fig_directed1 ] ) that our estimates for the ratios are in very good accordance with what is obtained in the microcanonical case using the lra , where averages of ratios are evaluated exactly .",
    "moreover , recall that we are interested in determining an interval of statistically significant values around @xmath72 , rather than @xmath72 alone . our results ( figs.[fig_undirected ] and [ fig_directed1 ] ) also show that the difference between the microcanonical and ( approximate ) grandcanonical value of @xmath72 is typically much smaller than the standard deviation of @xmath21 ( that we obtain below ) , so using eq.([eq_expxgeneral ] ) is in any case a very good way to proceed .",
    "the above discussion clarifies that a good approximation to the randomized value @xmath72 of any topological property of interest is given by simply replacing each @xmath202 with @xmath275 in the definition of the property @xmath204 , in the same way as the empirical value @xmath244 is obtained by replacing each @xmath202 with the observed entry @xmath276 of @xmath197 in the definition of @xmath204 .",
    "this means that the empirical value @xmath244 ( if the full adjacency matrix is used , see main text ) and the approximate randomized value @xmath274 require exactly the same computational time , which makes our method faster than any other available alternative approach ( and in general as fast as possible ) . clearly , in order to evaluate eq.([eq_expxgeneral ] ) the complete knowledge of the values @xmath277 is required .",
    "while for generic choices of @xmath209 it may be impossible to obtain the formal expression for @xmath278 and/or the particular parameter value @xmath234 , in [ app_local ] we show that local constraints always allow to obtain @xmath275 exactly .",
    "this makes the problem analytically solvable , and implies that our method becomes very simple in all the applications of interest .",
    "as we mentioned , another important advantage of our method is the possibility to obtain , besides the expectation value , the analytical expression for the standard deviation of any topological property of interest .",
    "this provides a statistical error allowing to detect significant deviations of any empirically observed topological quantity @xmath244 from its randomized value @xmath72 . to this end , we employ the fundamental expression relating the variance of a function of many random variables to the variances of the latter , whose most popular consequence is the general formula for the propagation of errors in experimental measurements . in our notation ,",
    "the variance of a topological property @xmath21 across the ensemble is defined as @xmath279\\equiv \\langle x^2\\rangle-\\langle x\\rangle^2=\\langle(x-\\langle x\\rangle)^2\\rangle \\label{eq_variancedef}\\ ] ] ( which depends on @xmath221 ) . using the linear approximation in eq.([eq_taylor ] ) we can write @xmath280&=&\\langle[x(\\mathbf{g})-x(\\langle\\mathbf{g}\\rangle)]^2\\rangle\\\\ & = & \\sum_{i , j}\\sum_{t , s}\\sigma[g_{ij},g_{ts}]\\left(\\frac{\\partial x}{\\partial g_{ij}}\\frac{\\partial x}{\\partial g_{ts}}\\right)_{\\mathbf{g}=\\langle\\mathbf{g}\\rangle } + \\dots\\nonumber \\label{eq_generalpropagation}\\end{aligned}\\ ] ] where @xmath281&\\equiv&\\langle(g_{ij}-\\langle g_{ij}\\rangle)(g_{ts}-\\langle g_{ts}\\rangle)\\rangle\\nonumber\\\\ & = & \\langle g_{ij}g_{ts}\\rangle-\\langle g_{ij}\\rangle\\langle g_{ts}\\rangle\\end{aligned}\\ ] ] is the covariance of @xmath202 and @xmath282 , and @xmath283 for the ` diagonal ' terms given by @xmath284 and @xmath285 , the covariance @xmath286 $ ] equals the variance @xmath287\\equiv\\langle g_{ij}^2\\rangle-\\langle g_{ij}\\rangle^2=\\sigma[g_{ij},g_{ij } ] \\label{eq_variancegij}\\ ] ] ( again , both @xmath286 $ ] and @xmath288 $ ] depend on @xmath221 ) . in a different context where @xmath21 is a function of many experimental quantities @xmath201 , eq.([eq_generalpropagation ] )",
    "provides the general formula for the propagation of errors ( from @xmath201 to @xmath21 ) , if the measured value of @xmath202 is used as the best estimate for @xmath258 , and if its experimental error is used in place of @xmath289 $ ] . here , we do not need approximate estimates for @xmath258 and @xmath289 $ ] , since both quantities can be completely specified : even if there is always a single observation , i.e. the real network @xmath197 , the latter generates the entire ensemble of graphs which is described by the probability @xmath290 , as we discussed in detail in [ app_maxlike ] .    as for the expectation value @xmath72 ,",
    "our approach proceeds by evaluating the standard deviation @xmath51^*$ ] at the particular parameter value @xmath234 solving eq.([eq_caverage ] ) : @xmath291=\\sqrt { \\sum_{i , j}\\sum_{t , s}\\sigma^*[g_{ij},g_{ts}]\\left(\\frac{\\partial x}{\\partial g_{ij}}\\frac{\\partial x}{\\partial g_{ts}}\\right)_{\\mathbf{g}=\\langle\\mathbf{g}\\rangle^ * } + \\dots } \\label{eq_starpropagation}\\ ] ] where @xmath292=\\langle g_{ij}g_{ts}\\rangle^*-\\langle g_{ij}\\rangle^*\\langle g_{ts}\\rangle^*\\mbox{. } \\label{eq_ggstar}\\ ] ] note that , as for the expected values , the above standard deviation makes use of the linear approximation and is therefore not exact .",
    "however , when we measured also the microcanonical standard deviations , we found an excellent agreement with our grandcanonical ones ( see fig .",
    "[ fig_directed1]a - b ) , showing that the errors on the estimates of our standard deviations are small .",
    "equations ( [ eq_starpropagation ] ) and ( [ eq_ggstar ] ) show that the values @xmath293 are the fundamental quantities , besides the averages @xmath275 given by eq.([eq_gmean ] ) , required in order to obtain the standard deviation @xmath75 $ ] of any topological property @xmath21 . for generic choices of the constraints @xmath209 , obtaining the value of @xmath294 can be very complicated or even impossible , as we already discussed for @xmath275 .",
    "however , as we will show , local constraints always allow to evaluate analytically all the covariances , and hence the standard deviation @xmath75 $ ] of any property @xmath21 .",
    "equation ( [ eq_starpropagation ] ) is the key expression providing the statistical error associated with @xmath72 . for any topological quantity @xmath21 , our method allows to assess whether the empirical value @xmath244 is consistent with the randomized value @xmath72 within @xmath52 standard deviations ( where @xmath52 is a conveniently chosen threshold value ) , i.e. whether @xmath295\\ ] ] as long as the above inequality holds , it is legitimate to say that the particular property @xmath21 evidences no significant deviation of the real network @xmath197 from a null model where the constraints @xmath209 are specified .",
    "this means that the observed value @xmath244 requires no explanation besides those accounting for the observed values @xmath243 of the constraints .",
    "by contrast , if the above inequality is violated , then one has a signature that the observed network @xmath197 is not completely a result of the specification of the constraints @xmath209 .",
    "additional mechanisms , besides those determining the values of the constraints , are at work . in other words ,",
    "higher - order patterns which can not be traced to low - level constraints are present , and our method is able to detect them . in practice , in order to discriminate between the two possibilities , it is useful to compute the two values @xmath296 \\label{eq_pm}\\ ] ] which delimit the region within which an observed value @xmath244 would imply the acceptance of the null model from the one where an observed value @xmath244 would imply the rejection of the null model . as an alternative , rather than fixing a threshold value for @xmath52 , one can directly compute the number of standard deviations by which the expected and the empirical value of @xmath21 differ , i.e. the _ z - score _",
    "@xmath297\\equiv\\frac{x({\\mathbf{g}^*})-\\langle x\\rangle^*}{\\sigma^*[x ] } \\label{eq_zscore}\\ ] ] large positive ( negative ) values of @xmath298 $ ] indicate that @xmath244 is substantially larger ( smaller ) than expected , while small values signal no significant deviation from the null model ( note however , as mentioned in the main text , that @xmath52-scores are easily interpretable only for normally distributed properties ) .",
    "this concludes the description of our method in its general form . in what follows ,",
    "we consider the particular case of interest for the present analysis , i.e. when the constraints @xmath209 are ( either binary or weighted ) local topological properties , or when they are nonlocal but simple enough to preserve the analytical character of the method .",
    "the most important case is when the constraints @xmath209 are _ local _ ( or first - order ) topological properties , i.e. properties determined by moving only one step away from a vertex , thus reaching only its first neighbours . in binary undirected networks the fundamental local property is the degree @xmath299 , while in weighted undirected networks the corresponding quantity is the strength @xmath300 . in directed networks , a pair of inward and outward variants of the same quantities ( i.e. the in - degree @xmath301 and out - degree @xmath302 , or the in - strength @xmath303 and out - strength @xmath304 ) characterizes the local properties of each vertex .",
    "choosing local constraints is the natural option when one is interested in understanding the effects that the specification of low - order properties , involving only direct interactions , has on higher - order properties involving longer chains of interactions . in what follows ,",
    "we therefore discuss our method in detail in the particular case of local constraints . we will consider both binary and weighted networks , and both undirected and directed links .",
    "importantly , we will show that in all these cases the graph probability @xmath227 factorizes as @xmath305 where the product runs over all unordered pairs of vertices @xmath203 ( with @xmath306 ) and @xmath307 is the dyadic probability that the pair @xmath308 takes the particular value @xmath309 , i.e. the joint probability that @xmath310 and simultaneously @xmath311 . clearly",
    ", @xmath312 note that @xmath307 is normalized such that @xmath313 where @xmath314 and @xmath315 run over all the allowed values for @xmath202 and @xmath268 ( @xmath316 for binary networks , while @xmath317 for weighted networks ; the same for @xmath315 ) . the marginal probability that @xmath202 takes the particular value @xmath314 , independently of the value of @xmath268 , is @xmath318 and , consistently with eq.([eq_dnorm ] ) , is normalized such that @xmath319 note that for undirected networks , where @xmath265 by construction , we have @xmath320 where @xmath321 if @xmath322 and @xmath323 if @xmath324 .    the factorization of @xmath227 according to eq.([eq_factorize ] ) implies that eq.([eq_gmean_no * ] ) can be rewritten as @xmath325 which can always be obtained analytically . using the latter , eq.([eq_caverage ] ) can be simply rewritten exactly as @xmath326 which allows the maximum - likelihood parameter values @xmath234 appearing in @xmath327 to be easily calculated numerically . alternatively ( e.g. depending on the software used ) one can calculate @xmath234 by directly maximizing the log - likelihood defined in eq.([eq_likelihood ] ) , which in this case takes the simpler form @xmath328 ( we always adopted the maximization of the log - likelihood ) . in both cases , even for very large networks this preliminary parameter estimation takes a negligible time with respect to the calculation of any nontrivial topological property .",
    "this implies that eq.([eq_gmean_no*2 ] ) can always be evaluated exactly at the particular parameter choice @xmath234 , providing the correct value @xmath275 in terms of which the ensemble average @xmath72 of any topological property @xmath21 can be obtained analytically through eq.([eq_expxgeneral ] ) .",
    "thus , as we discussed , the time required to obtain @xmath72 ( which formally is an average over all possible graphs in the ensemble ) is just the same as that required in order to measure @xmath244 on the real network @xmath197 .",
    "this makes our method incredibly faster than other randomization procedures that require the actual computational generation of many randomized variants ( necessarily sampling only a part of the ensemble ) of the real network , on each of which @xmath21 must be computed explicitly before performing a final average approximating @xmath72 .",
    "the standard deviation @xmath75 $ ] of any property @xmath21 can be evaluated very easily as well .",
    "equation eq.([eq_factorize ] ) implies that if @xmath203 and @xmath329 are two distinct pairs of vertices then @xmath330=0 & \\label{eq_independence}\\end{aligned}\\ ] ] by contrast , if @xmath284 and @xmath285 then @xmath331=\\langle g_{ij}^2\\rangle-\\langle g_{ij}\\rangle^2=\\sigma^2[g_{ij } ] & \\label{eq_independence2}\\end{aligned}\\ ] ] finally , if @xmath332 and @xmath333 we have @xmath334=\\langle g_{ij}g_{ji}\\rangle-\\langle g_{ij}\\rangle\\langle g_{ji}\\rangle & \\label{eq_independence3}\\end{aligned}\\ ] ] again , all the above quantities can be obtained analytically and evaluated exactly at the particular value @xmath234 solving eq.([eq_caveragelocal ] ) . as a consequence , if eqs.([eq_independence ] ) , ( [ eq_independence2 ] ) and ( [ eq_independence3 ] ) are inserted into eq.([eq_generalpropagation ] ) , we find that the expression for the variance @xmath335 $ ] of any topological property @xmath21 reduces from eq.([eq_starpropagation ] ) to the simpler formula    @xmath336)^2&= & \\sum_{i , j}\\left[\\left(\\sigma^*[g_{ij}]\\frac{\\partial x}{\\partial g_{ij}}\\right)_{\\mathbf{g}=\\langle\\mathbf{g}\\rangle^*}^2\\right.\\\\ & + & \\left.\\sigma^*[g_{ij},g_{ji}]\\left(\\frac{\\partial x}{\\partial g_{ij}}\\frac{\\partial x}{\\partial g_{ji}}\\right)_{\\mathbf{g}=\\langle\\mathbf{g}\\rangle^*}\\right ] + \\dots\\nonumber\\end{aligned}\\ ] ]    involving only a single sum over pairs of vertices . in the above expression",
    ", we have kept our convention to let the sum run always over all possible ordered pairs of vertices , thus considering the pairs @xmath203 and @xmath337 as distinct terms in the summation . for ensembles of directed networks , @xmath202 and",
    "@xmath268 are different random variables which may or may not be dependent on each other ( depending on the enforced constraints , as we show in detail below ) . equation ( [ eq_independentpropagation ] ) takes care of both possibilities by including the covariance @xmath338 $ ] . for ensembles of undirected networks , @xmath202 and @xmath268 are actually the same random variable and are thus perfectly correlated , which means @xmath339}=\\sqrt{\\sigma^*[g_{ij},g_{ij}]}=\\sigma^*[g_{ij}]$ ] .",
    "again , eq . ( [ eq_independentpropagation ] ) takes care of this by compensating the summation over a doubled number of terms with the presence of the covariances which exactly restore the correct expression .",
    "in such a way , one does not have to care whether the network is undirected when using eq.([eq_independentpropagation ] ) , which therefore applies without modifications to all the cases we will consider below .",
    "different cases only differ by the specific expression of @xmath338 $ ] .",
    "this is very convenient when implementing the formula computationally .",
    "another desirable consequence of formally treating @xmath202 and @xmath268 as different variables even in undirected networks is that in eq.([eq_independentpropagation ] ) the derivative @xmath340 of any function @xmath204 of ( a subset of ) the entries @xmath201 can always be computed by repeatedly applying the elementary rule    @xmath341    ( where @xmath190 if @xmath342 and @xmath191 if @xmath264 ) for both directed and undirected graphs .",
    "+ summarizing the results discussed so far , we showed that for local constraints our method allows @xmath275 , @xmath343 and @xmath344 to be computed exactly , and to use them in order to obtain the expected randomized value @xmath72 and standard deviation @xmath75 $ ] of any topological property @xmath21 through eqs.([eq_expxgeneral ] ) and ( [ eq_independentpropagation ] ) respectively .",
    "unlike alternative computational methods , our approach is completely analytical and allows to evaluate the randomized value @xmath72 in just the same time as that required to measure @xmath21 on the original real network @xmath345 , plus a negligible preliminary time required to find the parameter values @xmath234 numerically through eq.([eq_caveragelocal ] ) .",
    "the simple steps through which our method proceeds in the case of local constraints can be summarized as follows :    1 .   choose the desired representation for the real network @xmath345 ( directed / undirected , binary / weighted ) and the corresponding grandcanonical ensemble of graphs @xmath198 ; 2 .",
    "specify the local constraints @xmath346 and use them to write the hamiltonian @xmath347 and the probability @xmath348 according to eqs.([eq_grandp])-([eq_partition ] ) ; 3 .",
    "rewrite the graph probability analytically in the factorized form @xmath349 according to eq.([eq_factorize ] ) ; 4 .",
    "use @xmath307 to determine the basic quantities @xmath258 , @xmath350 and @xmath351 according to eqs.([eq_gmean_no*2 ] ) , ( [ eq_independence2 ] ) and ( [ eq_independence3 ] ) respectively ; 5 .   numerically determine the maximum - likelihood parameters @xmath234 by solving eq.([eq_caveragelocal ] ) or alternatively maximizing eq.([eq_likelihoodlocal ] ) ; 6 .",
    "use @xmath234 to compute the ensemble average @xmath72 and standard deviation @xmath75 $ ] of any desired topological property @xmath21 , according to eqs.([eq_expxgeneral ] ) and ( [ eq_independentpropagation ] ) ; 7 .",
    "assess whether the empirical value @xmath352 is consistent with the randomized one @xmath72 using either the interval in eq.([eq_pm ] ) or the @xmath52-score in eq.([eq_zscore ] ) .    for completeness ,",
    "in the above list we have included all the logical steps involving also the initial derivation of the required analytical expressions .",
    "however , since those expressions have already been derived in the literature for all the constraints we will consider in what follows , in practice our method reduces to a straightforward application of the last three steps . for clarity , in what follows we illustrate the method explicitly for a range of useful specific cases , i.e. for various choices of the constraints @xmath209 and of the topological properties @xmath21 .",
    "we will also highlight in more detail the advantages with respect to alternative methods .      for unweighted undirected networks ,",
    "each graph @xmath196 in the ensemble is uniquely specified by its binary symmetric adjacency matrix @xmath5 with entries",
    "@xmath353 if vertices @xmath7 and @xmath8 are connected , and @xmath354 otherwise . generally , one considers loop - less graphs with @xmath355 unless otherwise specified .",
    "this fixes the first step of our method according to the list shown above .",
    "thus we can replace @xmath356 and @xmath357 in our general notation used so far .",
    "given a real binary undirected network @xmath10 with entries @xmath358 and degree sequence @xmath26 , our method allows to compare the properties of @xmath10 with those displayed by a randomized ensemble of binary undirected graphs having , on average , the same degree sequence as @xmath10 . as we mentioned in sec .",
    "[ sec_limitations ] , the available methods have severe limitations . in particular , as noted in refs.@xcite and @xcite , the incorrectness of eq.([eq_cl ] ) is a consequence of the fact that it is not a proper maximum - entropy probability over the ensemble of binary graphs , i.e. it can not be traced back to a hamiltonian model as the ones described in [ app_maxent ] . by contrast , our method provides the correct solution .",
    "the appropriate choice is to include the constraint @xmath359 into eq.([eq_h ] ) and obtain the corresponding correct probability @xcite .",
    "this is precisely what the steps 2 - 4 of our method prescribe . for the sake of completeness",
    ", we briefly sketch the main results .",
    "if @xmath360 , the hamiltonian reads @xmath361 the partition function can be calculated exactly @xcite as @xmath362 therefore the graph probability can be written in the factorized form ( [ eq_factorize ] ) as follows @xmath363 where @xmath364 is the _ mass probability function _ of a bernoulli - distributed binary random variable @xmath365 , with success probability @xmath366 representing the probability that a link between @xmath7 and @xmath8 is present . introducing the new variable @xmath367 , not to be confused with the symbol @xmath21 used so far , and changing notation from @xmath221 to @xmath89 , the expectation value of @xmath365 is simply given by @xmath368 also , since @xmath369 , the second moment is @xmath370 finally , if @xmath203 and @xmath329 are two distinct pairs of vertices , then @xmath365 and @xmath371 are independent random variables and @xmath372 this completes the fourth step in our method .",
    "the fifth step consists in finding the particular parameter values @xmath70 that maximize eq.([eq_likelihoodlocal ] ) , that in this case reads @xmath373 equivalently @xcite , the parameters @xmath70 can be found solving the following @xmath2 coupled equations enforcing the desired constraints as in eq.([eq_caveragelocal ] ) : @xmath374 importantly , since @xmath367 and @xmath375 is a real number , the solution we are looking for is the one where @xmath376 @xmath174 .",
    "this solution is unique .",
    "even for large networks , the above parameter estimation ranges from seconds to tens of seconds even on an ordinary laptop .",
    "once the parameters @xmath70 are found , we can proceed to the sixth step and exploit eq.([eq_expxgeneral ] ) to obtain the expectation values of the properties @xmath21 of interest : @xmath377 in particular , the expectation value of the annd defined in eq.([eq_knn ] ) is @xmath378 and the expectation value of the clustering coefficient defined in eq.([eq_c ] ) is @xmath379 where @xmath380 .",
    "similarly , the standard deviation @xmath75 $ ] can be evaluated using eq.([eq_independentpropagation ] ) , which here reads @xmath291=\\sqrt",
    "{ \\sum_{i , j}\\left(\\sigma^*[a_{ij}]\\frac{\\partial x}{\\partial a_{ij}}\\right)_{\\mathbf{a}=\\langle\\mathbf{a}\\rangle^*}^2+\\dots } \\label{eq_bunpropagation}\\ ] ] where @xmath381=\\sqrt{\\langle a_{ij}\\rangle^*(1-\\langle a_{ij}\\rangle^*)}=\\sqrt{x_i^ * x_j^*}/(1+x_i^ * x_j^*)$ ] .",
    "it is straightforward to obtain @xmath75 $ ] in terms of @xmath70 alone , by using the derivation rule ( [ eq_deltarule ] ) : @xmath382 this can also be implemented symbolically in adequate softwares .",
    "let us calculate explicitly the standard deviations of the constraints : @xmath383=\\sqrt{\\sum_{j\\neq i}(\\sigma^*[a_{ij}])^2}=\\sqrt{\\sum_{j\\neq i}p_{ij}^*(1-p_{ij}^ * ) } \\label{eq_degreeserror}\\ ] ] which in turn imply that @xmath384}{k_{i}}=\\sqrt{\\frac{1}{k_{i}}-\\frac{\\sum_{j\\neq i}(p_{ij}^*)^2}{k_{i}^2}}. \\label{eq_degreeserrorfrac}\\ ] ] given the vertex @xmath7 , if @xmath385 and @xmath386 , the trend decreases as @xmath387 ( which also represents an upper - bound for the ratio ) .",
    "the more this condition is violated ( the vertex @xmath7 has an high degree , there are hubs in the network , etc . ) , the more important becomes the correction , lowering the ratio to eventually reach zero .",
    "binary directed networks have an asymmetric adjacency matrix @xmath5 with entries @xmath6 if a directed link from @xmath7 to @xmath8 is there , and @xmath9 otherwise .",
    "given a real binary directed network @xmath10 with out - degree sequence @xmath87 and in - degree sequence @xmath88 , our method provides analytical expressions for the expectation values and standard deviations of topological properties across the maximum - entropy ensemble of binary directed graphs with out - degree sequence @xmath87 and in - degree sequence @xmath88 .",
    "the hamiltonian is now @xmath388\\nonumber\\\\ & = & \\sum_{i\\ne j}(\\alpha_i+\\beta_j)a_{ij}\\end{aligned}\\ ] ] the partition function can be calculated exactly @xcite as @xmath389 the graph probability is now @xmath390 where @xmath391 and @xmath392 setting @xmath393 and @xmath394 , the expectation value of @xmath365 is @xmath395 the second moment is @xmath396 finally , if @xmath203 and @xmath329 are two distinct pairs of vertices , now including the case @xmath397 , then @xmath398 the log - likelihood ( [ eq_likelihoodlocal ] ) to maximize is @xmath399\\nonumber\\\\ & -&\\sum_{i\\ne j}\\ln ( 1+x_i y_j ) \\label{eq_likelihoodbdn}\\end{aligned}\\ ] ] and the values @xmath70 , @xmath91 that realize the maximum can alternatively be found by solving the @xmath92 coupled equations @xmath400 corresponding to eq.([eq_caveragelocal ] ) .",
    "again , we are looking for the solution where @xmath376 and @xmath401 @xmath174 .",
    "expectation values can still be obtained using eq.([eq_x*bun ] ) . in particular , the directed annds defined in eqs.([eq_knnout ] ) and ( [ eq_knnin ] ) have expectation values @xmath402 where @xmath403 .",
    "similarly , the standard deviation @xmath75 $ ] can still be evaluated through eqs.([eq_bunpropagation ] ) and ( [ eq_deltarulebun ] ) , now using @xmath381=\\sqrt{x_i^ * y_j^*}/(1+x_i^ * y_j^*)$ ] .",
    "let us calculate explicitly the standard deviations of the constraints : @xmath404&=&\\sqrt{\\sum_{j\\neq i}p_{ij}^*(1-p_{ij}^*)}\\\\ \\sigma^*[k_{i}^{in}]&=&\\sqrt{\\sum_{j\\neq i}p_{ji}^*(1-p_{ji}^ * ) } \\label{eq_dirdegreeserror}\\end{aligned}\\ ] ] which in turn imply that @xmath405}{k_{i}^{out}}&=&\\sqrt{\\frac{1}{k_{i}^{out}}-\\frac{\\sum_{j\\neq i}(p_{ij}^*)^2}{(k_{i}^{out})^2}}\\\\ \\frac{\\sigma^*[k_{i}^{in}]}{k_{i}^{in}}&=&\\sqrt{\\frac{1}{k_{i}^{in}}-\\frac{\\sum_{j\\neq i}(p_{ji}^*)^2}{(k_{i}^{in})^2}}. \\label{eq_dirdegreeserrorfrac}\\end{aligned}\\ ] ] given the vertex @xmath7 , if @xmath385 and @xmath386 , the trend decreases as @xmath406 ( which also represents an upper - bound for the ratio ) .",
    "the more this condition is violated ( the vertex @xmath7 has an high out - degree , there are in - degree hubs in the network , etc . ) , the more important becomes the correction , lowering the ratio to eventually reach zero .",
    "similar observations hold for the in - degrees .",
    "when weighted undirected networks are considered , each graph @xmath196 in the ensemble is specified by its non - negative symmetric matrix @xmath146 whose integer entry @xmath407 represents the weight of the link between vertices @xmath7 and @xmath8 ( including @xmath408 if no link is there ) .",
    "thus we can replace @xmath409 and @xmath410 in the general notation . as we mentioned in the main text , in the weighted configuration model a real weighted undirected network @xmath147 with entries @xmath411",
    "is compared with a maximum - entropy ensemble of weighted undirected graphs having the same strength sequence @xmath157 . in our method , by setting @xmath412 into eq.([eq_h ] ) we obtain the hamiltonian @xmath413 the partition function is @xcite @xmath414 and is only defined if @xmath415 @xmath174 .",
    "the graph probability is @xcite @xmath416 where @xmath417 is the mass probability function of a geometrically - distributed @xcite integer random variable @xmath407 , with success probability @xmath418 representing the probability that a link between @xmath7 and @xmath8 is present .",
    "introducing @xmath419 , the expectation value of @xmath407 is @xmath420 now in general @xmath421 , and the second moment is @xmath422 finally , if @xmath203 and @xmath329 are two distinct pairs of vertices , then @xmath423 the log - likelihood ( [ eq_likelihoodlocal ] ) reads @xmath424 and the parameters @xmath70 maximizing it solve the following @xmath2 coupled equations @xmath425 enforcing the desired constraints as in eq.([eq_caveragelocal ] ) .",
    "now the solution must be looked for in the region @xmath426 @xmath174 .    through the parameters",
    "@xmath70 we obtain the expectation values of the properties @xmath21 of interest : @xmath427 for instance , the expectation value of the weighted annd defined in eq.([eq_knnw ] ) is @xmath428 where we have used @xmath429 ( see main text ) .",
    "similarly , the weighted clustering coefficient defined in eq.([eq_cw ] ) has expectation value @xmath430 where @xmath431 .",
    "similarly , according to eq.([eq_independentpropagation ] ) the standard deviation @xmath75 $ ] is @xmath291=\\sqrt { \\sum_{i , j}\\left(\\sigma^*[w_{ij}]\\frac{\\partial x}{\\partial w_{ij}}\\right)_{\\mathbf{w}=\\langle\\mathbf{w}\\rangle^*}^2+\\dots } \\label{eq_wunpropagation}\\ ] ] where @xmath432=\\sqrt{x_i^ * x_j^*}/(1-x_i^ * x_j^*)$ ] .",
    "the rule ( [ eq_deltarule ] ) here reads @xmath433 and allows to obtain @xmath75 $ ] in terms of @xmath70 alone .",
    "let us calculate explicitly the standard deviations of the constraints : @xmath434=\\sqrt{\\sum_{j\\neq i}(\\sigma^*[w_{ij}])^2}=\\sqrt{\\sum_{j\\neq i}\\langle w_{ij}\\rangle^*(1+\\langle w_{ij}\\rangle^ * ) } \\label{eq_wdegreeserror}\\ ] ] which in turn imply that @xmath435}{s_{i}}=\\sqrt{\\frac{1}{s_{i}}+\\frac{\\sum_{j\\neq i}(\\langle w_{ij}\\rangle^*)^2}{s_{i}^2}}. \\label{eq_wdegreeserrorfrac}\\ ] ] given the vertex @xmath7 , if @xmath436 and @xmath386 , the trend decreases as @xmath437 .",
    "the more this condition is violated ( the vertex @xmath7 has an high strength , there are ` strength - hubs ' in the network , etc . ) , the more important becomes the correction .",
    "note that for weighted networks the second term has a positive sign .",
    "this means that the correction ` increases ' the @xmath437 trend which now represents a lower - bound for the coefficient of variation .    [ [ section ] ]    our model can also be applied to more complicated cases where the constraints are no longer local .",
    "however , a necessary condition for our method to work with nonlocal constraints is that eq.([eq_x2 ] ) can still be expressed exactly in a form which does not require the enumeration of all possible graphs ( in other words , the partition function can be calculated analytically ) .",
    "in such a case , eq.([eq_caverage ] ) can still be used to calculate the parameters @xmath234 exactly as in the local case , and at the same time those parameters can be used to obtain the analytical expressions for the expected value and standard deviation of the topological properties of interest .",
    "therefore , only a limited number of nonlocal constraints lend themselves to an analytical treatment . however , since the philosophy of randomization algorithms is always to enforce the simplest constraints in order to detect higher - order patterns , it turns out that the mathematically tractable constraints are also the ones of major interest .",
    "we now provide an explicit example of a choice of nonlocal constraints that is often used in empirical studies , and at the same time preserves the analytical character of our method and yields exact results .",
    "as discussed in the main text , a more constrained null model for a binary directed network @xmath10 is one where the three reciprocal degree sequences @xmath438 , @xmath439 and @xmath440 are specified , where @xmath441 the hamiltonian for this model is @xmath442 \\nonumber\\ ] ] the nonlocality is manifest in the fact that , unlike the previous examples , now the ( second - order ) constraints involve products of two adjacency matrix entries . despite this complication , the partition function can still be calculated exactly @xcite as @xmath443 the graph probability can still be expressed in the form ( [ eq_factorize ] ) , i.e. @xmath444 in the above expression , @xmath445 is the dyadic probability defined in terms of @xmath446 and @xmath447 where we have set @xmath393 , @xmath394 and @xmath448 @xcite .",
    "the above expressions represent the dyadic expectation values .",
    "a little algebra leads to the log - likelihood @xmath449&\\nonumber\\\\ \\nonumber\\end{aligned}\\ ] ] and the values @xmath70 , @xmath91 , @xmath122 that realize the maximum can alternatively @xcite found by solving the @xmath120 coupled equations @xmath450 corresponding to an example when eq.([eq_caverage ] ) can be written explicitly even if the constraints are nonlocal .",
    "we are looking for the solution where @xmath376 , @xmath401 and @xmath451 @xmath174 .",
    "the expectation values of topological properties involving products of dyadic terms can be obtained exactly without resorting to the linear approximation in eq.([eq_expxgeneral ] ) .",
    "for instance , the number of occurrences of a particular motif @xmath124 , where @xmath124 labels one of the possible 13 non - isomorphic connected motifs with three vertices , is @xmath452 where @xmath453 is one of the four possible dyadic relations @xmath454 , @xmath455 , @xmath456 , @xmath457 , and @xmath458 indicates the specific triplet of dyadic relations defining motif @xmath124 .",
    "the exact expectation value of @xmath123 is @xmath459 where @xmath460 is given by evaluating eqs.([eq_exprecipriniz])-([eq_expreciprfine ] ) at the particular values @xmath70 , @xmath91 , @xmath122 .",
    "the standard deviation of @xmath123 , and in general of a topological property @xmath21 , can still be obtained using eq.([eq_independentpropagation ] ) , i.e. @xmath461)^2&= & \\sum_{i , j}\\left[\\left(\\sigma^*[a_{ij}]\\frac{\\partial x}{\\partial a_{ij}}\\right)_{\\mathbf{a}=\\langle\\mathbf{a}\\rangle^*}^2\\right.\\\\ & + & \\left.\\sigma^*[a_{ij},a_{ji}]\\left(\\frac{\\partial x}{\\partial a_{ij}}\\frac{\\partial x}{\\partial a_{ji}}\\right)_{\\mathbf{a}=\\langle\\mathbf{a}\\rangle^*}\\right ] + \\dots\\nonumber\\end{aligned}\\ ] ] where now @xmath462)^2&=&\\langle a_{ij}\\rangle^ * ( 1-\\langle a_{ij}\\rangle^*)\\nonumber\\\\ & = & \\langle a^\\leftrightarrow_{ij}+a^\\rightarrow_{ij}\\rangle^ * ( 1-\\langle a^\\leftrightarrow_{ij}+a^\\rightarrow_{ij}\\rangle^*)\\nonumber\\end{aligned}\\ ] ] and @xmath463&=&\\langle a_{ij}a_{ji}\\rangle^*-\\langle a_{ij}\\rangle^*\\langle a_{ji}\\rangle^*\\nonumber\\\\ & = & \\langle a_{ij}^\\leftrightarrow\\rangle^*-\\langle a^\\leftrightarrow_{ij}+a^\\rightarrow_{ij}\\rangle^ * \\langle a^\\leftrightarrow_{ji}+a^\\rightarrow_{ji}\\rangle^ * \\nonumber\\end{aligned}\\ ] ] which are both known exactly in terms of eqs.([eq_exprecipriniz])-([eq_expreciprfine ] ) .",
    "the calculations for the standard deviations of the constraints are similar to the directed configuration model case : @xmath464=\\sqrt{\\sum_{j\\neq i}(p_{ij}^{a})^*(1-(p_{ij}^{a})^ * ) } \\label{eq_recdegreeserror}\\ ] ] which in turn imply that @xmath465}{k_{i}^{a}}=\\sqrt{\\frac{1}{k_{i}^{a}}-\\frac{\\sum_{j\\neq i}((p_{ij}^a)^*)^2}{(k_{i}^{a})^2 } } \\label{eq_recdegreeserrorfrac}\\ ] ] ( where @xmath466 ) and similar observations hold .",
    "the lra - based microcanonical approach @xcite and our likelihood - based grandcanonical approach are in general not equivalent for finite networks .",
    "let @xmath467 be the set of all graphs @xmath196 that realize the enforced constraints @xmath468 exactly .",
    "both approaches assign equal probabilities to all graphs that realize the constraints , i.e. @xmath469 if @xmath470 and @xmath471 .",
    "also , in both approaches these graphs are the most likely to occur , i.e. @xmath472 for any @xmath470 and @xmath473 .",
    "however the two approaches are different , the microcanonical one being very severe in assigning zero probability to any graph where the degrees are not matched exactly , i.e. @xmath474 if @xmath475 . by contrast , in the grandcanonical approach all possible graphs can occur , even if with very different probabilities , in such a way that the ensemble average of the desired constraints over all graphs coincides with the observed values ( see fig.[fig_distrib ] for an illustration of this difference ) .     of graphs that realize the enforced constraints @xmath209 ( in the example shown , a given value of the number of links @xmath19 ) exactly .",
    "bottom : by contrast , our grandcanonical approach assigns non - zero probability to all graphs , but this probability reaches its maximum value for the graphs belonging to @xmath467 . in so doing , it is more robust to potential errors in the original network data ( such as missing links ) .",
    "[ fig_distrib ] ]    the above key and elegant property places grandcanonical ensembles at the basis of information theory .",
    "notably , they are more robust to errors in the original data such as missing or overrepresented links . in presence of even a small percentage of such errors , the ` true ' graph ( the unobserved one affected by errors ) will never appear in the microcanonical ensemble , while it will appear with nonzero probability in the grandcanonical ensemble .",
    "as desirable , for small deviations from the observed graph the true graph will have a slightly decreased probability with respect to the one assigned by our method to the observed graph , while for larger errors the probabilities will differ by a larger amount .",
    "therefore , while for infinite systems the microcanonical and grandcanonical ensembles become equivalent since fluctuations about the average values become negligible , in finite systems the use of grandcanonical ensembles is preferable .",
    "what is of interest for us here is the impact of the two methods on the topological properties induced on the randomized networks . to this end , we now show explicitly the relation between the two approaches when applied to particular networks .",
    "we shall only consider unweighted networks for simplicity .",
    "in the unweighted ( either directed or undirected ) case , our method directly provides ` from the beginning ' the explicit values of the probabilities @xmath476 that a link from @xmath7 to @xmath8 is there .",
    "the superscript @xmath477 stands for ` grandcanonical ' , and the probability is evaluated at the parameter values that maximize the likelihood , as described above . by contrast",
    ", the microcanonical approach samples the configuration space iteratively , and the microcanonical probability @xmath478 that a link from @xmath7 to @xmath8 is there can only be evaluated as the frequency of occurrence of the link over many randomizations . as the number of randomized networks increases",
    ", this frequency will converge to @xmath478 .",
    "however this asymptotic value will also depend on the number @xmath18 of elementary rewiring steps used to obtain a single randomized network .",
    "( measured using the local rewiring algorithm ) to the grandcanonical probability @xmath476 ( obtained using our maximum - entropy method ) as the number @xmath18 of local rewiring moves per network increases.[fig_comparison ] ]    to see this , consider the trivial case @xmath479 . as no rewiring takes place , all the ` randomized ' networks will in fact coincide with the original network .",
    "if the adjacency matrix of the latter has elements @xmath480 , this means that @xmath481 . if @xmath18 is nonzero but still very small , @xmath478 will not change substantially .",
    "only if @xmath18 is large enough then @xmath478 will approach @xmath476 .",
    "this is shown explicitly in fig.[fig_comparison ] , where we plot @xmath476 as a function of @xmath478 for all directed pairs of vertices @xmath203 by taking the _ little rock lake _ food web as the starting network . as @xmath18 increases from @xmath479 to @xmath482 , the double - peaked shape ( corresponding to @xmath481 independently of @xmath476 ) evolves towards the identity @xmath483 .",
    "similar evolution patterns are observed for all the networks we analyzed .",
    "this clearly shows that in our method we obtain ` from the beginning ' the values @xmath476 to which the microcanonical @xmath478 will converge only after several iterations .",
    "notably , the number @xmath18 of rewiring steps required for @xmath478 to converge to @xmath476 acceptably is not known _ a priori _ and without the knowledge of @xmath476 itself .",
    "this problematic aspect of the microcanonical approach highlights another advantage of the grandcanonical one .",
    "first of all , @xmath478 represent marginal probabilities , where the information about the correlations between the presence of a link between different pairs of vertices has been lost . while in the grandcanonical approach these correlations are absent , and different pairs of vertices are always statistically independent , in the microcanonical approach some weak correlations will be preserved even after many rewiring steps .",
    "these correlations arise from the microcanonical constraint of matching the degree sequence ( or other contraints ) exactly .",
    "thus , while our grandcanonical method enables to compute the expected topological properties exactly , in the microcanonical approach this is not possible .",
    "secondly , the final ` convergence ' of @xmath478 to @xmath476 for @xmath484 will in general not hold exactly .",
    "this means that the asymptotic plot of @xmath476 versus @xmath478 will not be a strict identity , but a narrow scatter of points close to the identity . in other words , increasing @xmath18 beyond a certain value will not make the quantities converge further . for some networks ( such as the _ little rock lake _ food web shown above ) one may attain a better convergence than for others .",
    "it is interesting to understand whether the degree of convergence between the two approaches depends on some property of the network . to this end , we first define two measures of discrepancy between @xmath485 and @xmath486 , and then study how they behave on well - controlled , artificially generated networks . as measures of discrepancy , we consider the @xmath487 distance @xmath488 and the kullback - leibler information distance @xmath489}{n(n-1)}}&\\nonumber \\label{eq_kl}\\end{aligned}\\ ] ]    ( note that we have normalized the above distances in such a way that both lie in the range @xmath490 $ ] ) .",
    "it is instructive to use these distances to compare the two methods on a family of artificially generated networks .",
    "we considered @xmath491 vertices , assigned each vertex a real value @xmath492 drawn randomly in the interval @xmath490 $ ] , and established an edge between each pair of vertices @xmath7 and @xmath8 with probability @xmath493 .",
    "this choice generates maximally random networks with degree distribution controlled by @xmath494 as in eq.([eq_bun_moment1 ] ) , but has an additional parameter @xmath52 that tunes the overall link density @xmath495 , representing the fraction of realized links . with",
    "@xmath494 kept constant , we considered various choices of @xmath52 and , for each of them , adopted both the microcanonical randomization and our grandcanonical method .    in fig.[fig_distances",
    "] we show the resulting difference between the marginal probabilities @xmath485 and @xmath486 , as a function of link density .",
    "the two methods yield very similar results for both small and large link density , whereas for intermediate density values they display a greater difference . even in this case , however , the distances between them are @xmath496 and @xmath497 , both small considering their possible range of variation .    , green squares ) and",
    "@xmath487 ( @xmath498 , blue circles ) distance between microcanonical ( @xmath499 ) and grandcanonical ( @xmath500 ) marginal connection probabilities , plotted versus link density @xmath501.[fig_distances ] ]"
  ],
  "abstract_text": [
    "<S> in order to detect patterns in real networks , randomized graph ensembles that preserve only part of the topology of an observed network are systematically used as fundamental null models . however , their generation is still problematic . </S>",
    "<S> the existing approaches are either computationally demanding and beyond analytic control , or analytically accessible but highly approximate . here </S>",
    "<S> we propose a solution to this long - standing problem by introducing a fast method that allows to obtain expectation values and standard deviations of any topological property analytically , for any binary , weighted , directed or undirected network . </S>",
    "<S> remarkably , the time required to obtain the expectation value of any property analytically across the entire graph ensemble is as short as that required to compute the same property using the adjacency matrix of the single , original network . </S>",
    "<S> our method reveals that the null behavior of various correlation properties is different from what previously believed , and highly sensitive to the particular network considered . </S>",
    "<S> moreover , our approach shows that important structural properties ( such as the modularity used in community detection problems ) are currently based on incorrect expressions , and provides the exact quantities that should replace them . </S>"
  ]
}
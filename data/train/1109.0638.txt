{
  "article_text": [
    "there is high demand for advanced information services in various application domains such as medical services and supply - chain management , as information and communication technology penetrates deeply into our society .",
    "clinical decision support @xcite to prevent medical errors and order placement support for optimal inventory management @xcite are typical examples .",
    "it is , however , not prudent to implement such functions as a normal part of the traditional information system using conventional programming languages .",
    "this is because expert knowledge is often large scale and complicated , and each application domain typically has its own specific structures and semantics .",
    "therefore , not only the analysis , but also the description , audit , and maintenance of such knowledge are often difficult without expertise in the application domain .",
    "it is thus , essential to realize such advanced functions to allow domain experts themselves to describe , audit , and maintain their knowledge .",
    "a knowledge - based system approach is suitable for such purposes because a suitable framework for representing and managing expert knowledge is supplied .",
    "previously , nagasawa et al . proposed the knowledge representation language dsp @xcite and its supporting environment .",
    "dsp is a nondeterministic functional language based on attribute grammars @xcite and is suitable for representing complex search problems without relying on any side effects .",
    "the supporting environment has been developed on top of an integrated development environment called inside prolog @xcite . inside prolog",
    "provides standard prolog functionality , conforming to iso / iec 13211 - 1 @xcite , and also a large variety of application programming interfaces ( apis ) that are essential for practical application development and multi - thread capability for enterprise use @xcite .",
    "these features allow the consistent development of knowledge - based systems from prototypes to practical systems for both stand - alone and enterprise use @xcite .",
    "such systems have been applied to several practical applications , and the effectiveness thereof has been clarified . however",
    ", several issues have also been perceived from these experiences .",
    "one is the complexity of combining a prolog - based system with a system written in a normal procedural language , such as java .",
    "the other is the adaptability to a new computer environment such as mobile devices .",
    "this paper describes the implementation techniques required to translate a nondeterministic functional language based on attribute grammars into a procedural language such as java .",
    "the proposed techniques are based on the techniques for prolog to java translation .",
    "section 2 gives an overview of the knowledge representation language dsp , and clarifies how it differs from prolog . in section 3 ,",
    "the translation techniques for logic programming languages are briefly reviewed , and basic ideas useful for the translation of dsp identified .",
    "section 4 discusses the program representations of dsp in java , while section 5 evaluates the performance using an experimental translator .",
    "it is essential to formally analyze , systematize , and describe the knowledge of an application domain in the development of a knowledge - based system .",
    "the description of knowledge is conceptually possible in any conventional programming language .",
    "nevertheless , it is difficult to describe , audit , and maintain a knowledge base using a procedural language such as java .",
    "this is because the knowledge of an application domain is often large scale and complicated , and each application domain has its own specific structures and semantics . in particular ,",
    "the audit and maintenance of written knowledge is a major issue in an information system involving expert knowledge , because such a system is very often stiffened and the transfer of expert knowledge to succeeding generations is difficult @xcite .",
    "therefore , it is very important to provide a framework to enable domain experts themselves to describe , audit , and maintain their knowledge included in an information system @xcite .",
    "it is perceived that a description language that is specific to an application domain and is designed so as to be described by domain experts is superior in terms of the minimality , constructibility , comprehensibility , extensibility , and formality of the language @xcite .",
    "for this reason , prolog can not be considered as a candidate for a knowledge representation language .",
    "dsp is a knowledge representation language based on nondeterministic attribute grammars .",
    "it is a functional language with a search capability using the generate and test method . because the language is capable of representing trial and error without any side - effects or loop constructs , and the knowledge descriptions",
    "can be declaratively read and understood , it is suitable for representing domain - specific expert knowledge involving search problems .      a program unit to represent knowledge in dsp",
    "is called a `` module '' , and it represents a nondeterministic function involving no side - effects .",
    "inherited attributes , synthesized attributes , and tentative variables for the convenience of program description , all of which are called variables , follow the single assignment rule and the assignment is unidirectional . therefore , the computation process of a module can be represented as non - cyclic dependencies between variables .",
    ".typical statements in the dsp language [ cols= \" < , < , < \" , ]     [ experiment1 ]",
    "this paper described the techniques for translating the nondeterministic functional language dsp based on attribute grammars into java .",
    "the dsp is designed for knowledge representation of large scale and complicated expert knowledge in application domains .",
    "it is capable of representing trial and error without any side - effects or loop constructs using nondeterministic features .",
    "current development and runtime environments are built on top of inside prolog , while the runtime environment can be embedded in a java - based application server .",
    "however , issues regarding language interoperability and adaptability to new computer environments are envisaged when applied to practical application development .",
    "the language translation is intended to improve the interoperability and adaptability of dsp .",
    "the proposed translation techniques are based on binarization and the techniques proposed for the translation of prolog .",
    "the performance , however , is improved by introducing the continuation unit and simplifying the management of variables and registers using the semantic differences of variables and explicit determinism of some statements .",
    "an experimental translator written in dsp itself generates java code from dsp descriptions , and the experimental results indicate that the generated code is over 25 times faster than that of prolog cafe for nondeterministic programs , and over 2 times faster for deterministic programs .",
    "the generated code is also over 2 times faster than b - prolog for nondeterministic programs .",
    "however , the generated code is about 3 to 15 times slower than b - prolog for deterministic programs . improving the performance of deterministic programs is an important future issue .",
    "takada , a. , nagase , k. , ohno , k. , umeda , m. , nagasawa , i. : clinical decision support system , how do we realize it for hospital information system ?",
    "japan journal of medical informatics * 27 * ( 2007 ) 315320    nagasawa , h. , nagasawa , i. , takata , o. , umeda , m. , hashimoto , m. , takizawa , c. : knowledge modeling for operation management support of a distribution center . in : the sixth ieee international conference on computer and information technology ( cit2006 ) .",
    "( 2006 )  6    nagasawa , i. , maeda , j. , tegoshi , y. , makino , m. : a programming technique for some combination problems in a design support system using the method of generate - and - test . journal of structural and construction engineering ( 1990 )    umeda , m. , nagasawa , i. , higuchi , t. : the elements of programming style in design calculations . in : proceedings of the ninth international conference on industrial and engineering applications of artificial intelligence and expert systems .",
    "( 1996 ) 7786        katamine , k. , umeda , m. , nagasawa , i. , hashimoto , m. : integrated development environment for knowledge - based systems and its practical application .",
    "ieice transactions on information and systems * e87-d * ( 2004 ) 877885      umeda , m. , katamine , k. , nagasawa , i. , hashimoto , m. , takata , o. : multi - threading inside prolog for knowledge - based enterprise applications . in : declarative programming for knowledge management .",
    "volume 4369 of lecture notes in computer science .",
    ", springer science+business media ( 2006 ) 200214    umeda , m. , katamine , k. , nagasawa , i. , hashimoto , m. , takata , o. : the design and implementation of knowledge processing server for enterprise information systems . transactions of information processing society of japan * 48 * ( 2007 ) 19651979      umeda , m. , mure , y. : knowledge management strategy and tactics for forging die design support . in : the proceedings of the 18th international conference on applications of declarative programming and knowledge management .",
    "( 2009 ) 2136    hirota , t. , hashimoto , m. , nagasawa , i. : a discussion on conceptual model description language specific for an application domain .",
    "transactions of information processing society of japan * 36 * ( 1995 ) 11511162        banbara , m. , tamura , n. , inoue , k. : : a prolog to java translator system . in : the proceedings of the 16th international conference on applications of declarative programming and knowledge management .",
    "( 2005 ) 4554"
  ],
  "abstract_text": [
    "<S> knowledge - based systems are suitable for realizing advanced functions that require domain - specific expert knowledge , while knowledge representation languages and their supporting environments are essential for realizing such systems . </S>",
    "<S> although prolog is useful and effective in realizing such a supporting environment , the language interoperability with other implementation languages , such as java , is often an important issue in practical application development . </S>",
    "<S> this paper describes the techniques for translating a knowledge representation language that is a nondeterministic functional language based on attribute grammars into java . </S>",
    "<S> the translation is based on binarization and the techniques proposed for prolog to java translation although the semantics are different from those of prolog . </S>",
    "<S> a continuation unit is introduced to handle continuation efficiently , while the variable and register management on backtracking is simplified by using the single and unidirectional assignment features of variables . an experimental translator written in the language itself successfully generates java code , while experimental results show that the generated code is over 25 times faster than that of prolog cafe for nondeterministic programs , and over 2 times faster for deterministic programs . </S>",
    "<S> the generated code is also over 2 times faster than b - prolog for nondeterministic programs . </S>"
  ]
}
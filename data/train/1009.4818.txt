{
  "article_text": [
    "we deal with the common problem in quantitative finance to compute , as fast and accurately as possible,@xmath1 .",
    "\\label{epayoffxt}\\]]here , @xmath2 denotes a typical payoff function and @xmath3 is an @xmath4-dimensional diffusion process , given in terms of a stochastic differential equation ( sde ) in stratonovich form @xmath5 where @xmath6 and @xmath7 is a @xmath8-dimensional standard brownian motion . whenever convenient , we shall use the compact notation @xmath9or , in it form , @xmath10where @xmath11 .    as is common in the analysis of higher - order , weak approximation methods for such sdes ( cf . the classics kloeden and platen  @xcite , glasserman  @xcite as well as kusuoka  @xcite , lyons and victoir  @xcite and ninomiya and victoir  @xcite for cubature type methods ) we shall assume that the payoff function @xmath12 and all vector fields @xmath13 are smooth , with bounded derivatives of any order . the standing remark in this subject , _ implicit in all of the aforementioned references",
    "_ , is that any scheme obtained from such an analysis can and will be applied to typical financial diffusion models ( such as heston , sabr and their  possibly higher - dimensional ",
    "generalizations ) even if they do not satisfy the technical assumptions initially used in the analysis ; numerical experiments ( which are necessary for every numerical scheme in any case ! ) serve as a posteriori justification .",
    "we do not wish to impose any special structure on  ; in particular the vector fields are not supposed to commute ( cf .",
    "kloeden and platen  @xcite[page 348 ] for the advantages in such a case in the particular case of the milstein scheme ) , no affine structure ( as in the heston model ) is assumed , nor do we want to rely on heat - kernel based expansions of ( such as the sabr formula ) . in this generality , one has essentially two approaches . the _ pde method _ , based on the feynman - kac formula , consists in solving the cauchy problem for the partial differential equation @xmath14 where the @xmath15nd order differential operator @xmath16 is given in hrmander form @xmath17 where vector - fields are identified with first order differential operators . as is well known , that pde approach is prohibitively slow in higher dimension ; there are also stability issues when @xmath16 is not elliptic .",
    "the other approach is _ the probabilistic `` simulation '' method _ which requires two steps . in * step 1 * one discretizes @xmath18 in order to obtain an approximation @xmath19 ; typically , @xmath20 corresponds to the number of partitions of @xmath21 $ ] ; examples include the euler - maruyama ( em ) scheme @xmath22where @xmath23 is a family of independent @xmath24 denotes the normal distribution with mean @xmath25 and variance @xmath26 . ] random variables , as well as higher order ( milstein , kusuoka , ninomiya ",
    "victoir ,  ) schemes which we do not wish to detail at this moment .",
    "the _ discretization error _ is given by@xmath27 - \\mathbb e\\left [        f\\left ( { \\overline{x}}^{k}\\left ( t , x\\right ) \\right ) \\right ] \\right\\vert = \\left\\ {       \\begin{array}{c }        \\mathcal{o}\\left ( t / k\\right ) \\text { for euler - maruyama } \\\\         \\mathcal{o}\\left ( ( t / k)^{2}\\right ) \\text { for ninomiya - victoir\\ } \\\\         \\cdots     \\end{array }   \\right.\\]]in * step 2 * one has to integrate @xmath28 over some domain of dimension @xmath29 such as will depend on the method ( for instance @xmath30 for the euler - maruyama scheme , @xmath31 for the ninomiya  victoir scheme).]@xmath32",
    "= \\int_{[0,1)^{d\\left ( k\\right ) } } f\\left ( y_{1},\\dots , y_{d\\left ( k\\right )      } \\right ) dy_{1}\\dots dy_{d\\left ( k\\right ) } .\\]]here , @xmath33 denotes the dependence of @xmath34 on uniform random variables , i.e. , @xmath35 for a collection @xmath36 of independent random variables uniformly distributed on the unit interval .",
    "the right - hand - side is approximated by monte carlo ( mc ) or quasi monte carlo ( qmc ) , essentially obtained by averaging @xmath37 samples of @xmath38 .",
    "these samples are random if created by monte carlo ( mc ) and deterministic if obtained by quasi monte carlo ( qmc ) . in either case",
    ", we have an _ integration error _ of the form@xmath39 \\right\\vert , \\\\    & & \\left\\vert \\mathrm{qmc}\\left ( f\\left ( { \\overline{x}}^{k}\\left ( t , x\\right ) \\right )        , m\\right ) - \\mathbb e\\left [ f\\left ( { \\overline{x}}^{k}\\left ( t , x\\right )        \\right ) \\right ] \\right\\vert.\\end{aligned}\\]]the central limit theorem roughly implies that @xmath40-integration error is @xmath41 . more precisely , we have in the sense of an asymptotic equality in law , @xmath42 , \\mathbb{v}\\left [ f\\left ( { \\overline{x}}^{k}\\left ( t , x\\right ) \\right )    \\right ] /m\\right)\\ ] ] so that , using @xmath43 \\approx \\mathbb{v}\\left [ f\\left ( x\\left ( t , x\\right ) \\right ) \\right ] $ ] we see that the number of sample points @xmath37 needed to attain a given accuracy ( i.e. a certain @xmath44 bound for the @xmath40-integration error ) is roughly independent of @xmath20 and the discretization algorithm .",
    "the situation is somewhat different for the @xmath45-integration error .",
    "it is known that there exists sequences ( `` sample points '' ) such that there exists @xmath46 such that for all @xmath37 one has@xmath47 \\right\\vert",
    "\\leq c\\frac{\\left ( \\log m\\right ) ^{d\\left ( k\\right ) } } { m}.\\]]in contrast to the mc case , the number of sample points @xmath37 needed by qmc to attain a given accuracy depends heavily on the dimension of integration @xmath48 and , possibly , on the smoothness of @xmath49 as a function in the points @xmath50 .",
    "moreover , the above error estimate is known to grossly overestimate the true error in many cases .",
    "let us briefly put the ( kusuoka  lyons ",
    "victoir ) cubature method in this context .",
    "for simplicity of notation only , we consider the case @xmath51 here .",
    "a _ cubature formula on wiener space _ is a random variable @xmath52 taking values in the space @xmath53,\\mathbb{r}^{d})$ ] of continuous paths of bounded variation with values in @xmath54 such that we have @xmath55 = \\mathbb{e}\\left [ \\int_{0\\leq t_{1}\\leq \\cdots \\leq t_{j}\\leq 1}\\mathrm dw_{t_{1}}^{i_{1}}\\cdots \\mathrm dw_{t_{j}}^{i_{j}}\\right ] .",
    "\\label{eq : cubature - formula}\\]]for all multi - indices @xmath56 with all @xmath57 , where @xmath58 is a fixed positive integer , the _ order _ of the cubature formula .",
    "moreover , we note that since the paths of the process @xmath52 are of bounded variation , the integrals on the right hand side of  ( [ eq : cubature - formula ] ) are then understood as classical riemann - stieltjes integrals . in applications ,",
    "the reference interval @xmath59 $ ] in ( [ eq : cubature - formula ] ) is typically replaced by some ( small )  interval such as @xmath60 $ ] .",
    "( due to brownian scaling , however , the problems are equivalent ; in particular , a cubature formula on @xmath61 $ ] is obtained by a scaled version of the cubature formula on @xmath62 $ ] . ) in the classical paper of lyons and victoir  @xcite the authors actually insisted that the cubature formula is _ discrete _ meaning that for some positive integer @xmath63 , the law of @xmath52 can be written as @xmath64 where @xmath65 is the dirac measure on wiener space which assign unit mass to the path @xmath66 zero to every other path .",
    "( existence and explicit knowledge of cubature formulas is a non - trivial problem ! ) the idea is now to approximate the stochastic differential equation for @xmath67 by a family of ( random ) ordinary time - inhomogeneous differential equations , @xmath68 where @xmath52 now denotes a cubature formula on the interval @xmath69 $ ] .",
    "a stochastic taylor - expansions ( e.g. chapter 18 in @xcite for a discussion in the spirit of cubature ) shows that @xmath70 -\\mathbb{e}\\left [ f\\left ( x\\left ( t , x\\right )    \\right ) \\right ] = o\\left ( t^{\\frac{m+1}{2}}\\right ) $ ] as @xmath71 observe that in the case of a discrete cubature formula @xmath72 $ ] is computed exactly ( no integration error ! ) by solving @xmath63 ordinary differential equations .",
    "a ( big ) interval @xmath73 $ ] can be handled by dividing it into @xmath20 intervals of length @xmath74 and iterating this procedure but now exact computation of @xmath75 $ ] requires to solve @xmath76ordinary differential equations .",
    "when @xmath77 becomes too big one can either perform a monte carlo simulation ( `` on the cubature tree '' ) or resort to recombination techniques ( see litterer and lyons  @xcite for the present state of art ) .",
    "let us note , however , that in many practical applications @xmath20 remains small , which helps to explain the numerical benefits of cubature even without recombination .      the ninomiya ",
    "victoir `` splitting '' scheme , introduced in  @xcite , is given by @xmath78 here @xmath79 denotes the ode  solution at unit time to @xmath80 and the probability space carries independent random - variables @xmath81 , with values @xmath82 at probability @xmath83 , and @xmath84 random variables @xmath85 .",
    "one step in the nv scheme corresponds actually to a ( non - discrete ) cubature formula of order @xmath86 . to see this ,",
    "assume @xmath51 for ( consistent ) simplicity and let @xmath87 denote the canonical basis of @xmath54 .",
    "an @xmath54-valued random path @xmath88 , continuous and of bounded variation , is then created via @xmath89 and @xmath8 independent @xmath84 realizations @xmath90 . if @xmath91 we take @xmath92 \\rightarrow \\mathbb{r}^{d}$ ] , started at @xmath93 say , to move at constant speed , first an amount @xmath94 in @xmath95-direction ,  until the final move @xmath96 in @xmath97-direction ; if @xmath98 the construction is similar but in reversed order .",
    "when @xmath99 , one follows the flow of the drift vector - field for time @xmath100 in the first and last step of the scheme ; at all intermediate steps @xmath101 is followed for a time @xmath74 ; this is inspired by classical splitting methods in operator theory .",
    "let us also note that the coin - flipping corresponds to talay s trick of , in a weak approximation context , replacing the ( difficult to sample ) lvy s area by a discrete moment - matched random variable , see kloeden and platen  @xcite[page 466 f. ] .",
    "the nv scheme has attracted wide attention since its introduction in  @xcite ; it is nowadays found in various sophisticated numerical packages such as inria s software premia for financial option computations .",
    "a variation of the scheme designed to deal with degeneracies arising some affine situations is discussed in  @xcite .",
    "let us also mention the `` nv inspired '' schemes developed in  @xcite and  @xcite .",
    "it is clear from the preceding discussion that cubature methods , and the nv scheme in particular , heavily rely on the ability to solve , fast and accurately , ordinary differential equations .",
    "the general cubature methods involves _ time - inhomogeneous _ odes ; in general , there is no alternative to solve them numerically , typically with runge - kutta methods .",
    "( a detailed discussion on how runge - kutta methods are applied in this context is found in ninomiya and ninomiya  @xcite . )    on the other hand , the ninomiya - victoir splitting scheme only involves the composition of solution flows to _ time - homogeneous _ odes . in particular",
    ", there will be `` lucky '' cases of models where all  ( or at least most ) ode  flows can be solved exactly .",
    "_ which allows for fast numerical evaluation_. in particular , we are not interested in `` closed - form '' solution in terms of complicated and slow - to - evaluate special functions . ] in such a case one has effectively found a level-@xmath0 cubature method which can be implemented without relying on numerical ode  solvers .",
    "in particular , one expects the cubature methods to perform especially well in such cases . as was observed in  @xcite ,",
    "see also section [ example_heston ] , the heston model is such a lucky case .",
    "we thus propose the following definition .    a diffusion model of type ( [ initialsde ] ) where a cubature method can be implemented without any numerical ode  solutions",
    "is said to be accessible to _ semi - closed form cubature ( scfc)_.    for instance , any model of type ( [ initialsde ] ) where all ode flows @xmath102 can be solved in closed form falls in this class . however , one soon encounters model ( e.g. the popular sabr model , see section  [ sec : example :- sabr - model ] ) in which some of the vector - fields do not allow for flows in closed form . the contribution of this paper , _ beyond suggesting the systematic use of financial models that are accessible to semi - closed form cubature _",
    ", is that the class of such models can be significantly enlarged by working with an almost trivial modification of the nv scheme . before explaining our modification we point out that the sabr model then becomes accessible to semi - closed form cubature .",
    "our modification is based on the trivial equivalence of ( [ initialsde ] ) with @xmath103whatever the choice of drift parameters @xmath104 .",
    "assume that all diffusion vector - fields ( @xmath105 ) allow for flows in closed form , whereas @xmath106 is not available in closed form .",
    "the point is that , in a variety of concrete examples , one can pick drift parameters @xmath107 in a way that @xmath108 can be solved in closed form after all .",
    "therefore , we propose the following variant of the ninomiya - victoir method ( which shall be referred to as the `` nv scheme with drift ( trick ) '' ) : @xmath109 where @xmath110 independent of each other .    the bulk of this paper is devoted to implement these ideas for a handful of ( stochastic volatility ) models encountered in the financial industry .",
    "since high - dimensional problems are the raison dtre for probabilistic simulation methods , a detailed discussion of a higher - dimensional ( sabr - type ) model is included .",
    "at last , we discuss numerical results obtained with our `` drift - modified '' nv scheme : relative to the classical nv scheme we observe significant and consistent savings in computational time .",
    "note that we want to concentrate on the method itself , without further improvements like variance reduction , optimization of code and romberg extrapolation .",
    "* acknowledgment : * partial support of matheon and the european research council under the european union s seventh framework programme ( fp7/2007 - 2013 ) / erc grant agreement nr .",
    "258237 is gratefully acknowledged .",
    "the stochastic volatility model of heston is given by the sde : @xmath111 where @xmath25 is the rate of return of the asset , @xmath112 is the long vol , @xmath113 is the mean - reversion rate , @xmath114 is the vol(atility ) of vol(atility ) and @xmath115 is the correlation parameter between the ( standard ) brownian motions @xmath116 and @xmath117 .",
    "the vector fields are given by @xmath118 and so we get @xmath119 x_1 - \\frac12 x_2x_1   \\\\ \\kappa(\\theta - x_2 ) -\\frac14",
    "\\xi^2 \\end{pmatrix}.   \\end{split}\\ ] ] the corresponding solutions to the odes are ( cf . lord et al .",
    "@xcite*p.8 - 9 and their reference to @xcite ; see also the appendix ) @xmath120s +     \\frac12\\frac{x_2-j}{\\kappa}[\\mathrm{e}^{-\\kappa s } -1 ]    \\right ) \\\\",
    "( x_2-j ) \\mathrm{e}^{-\\kappa s } + j   \\end{pmatrix},\\ ] ] @xmath121 @xmath122 with @xmath123 .",
    "we assume ( as in @xcite ) that @xmath124 ; see @xcite for how to proceed otherwise .",
    "the heston model can be rewritten in log - coordinates .",
    "define @xmath125 and @xmath126 . in this new",
    "coordinate chart , the vector fields are @xmath127 - \\frac12 y_2   \\\\ \\kappa(\\theta - y_2 ) -\\frac14 \\xi^2 \\end{pmatrix }   , \\quad v_1(y)= \\begin{pmatrix } \\sqrt{y_2 }   \\\\ \\xi\\rho\\sqrt{y_2 } \\end{pmatrix } \\end{split}\\ ] ] and the corresponding solutions to the odes are @xmath128s +   \\frac12\\frac{y_2-j}{\\kappa}[\\mathrm{e}^{-\\kappa s } -1 ]     \\\\   ( y_2-j ) \\mathrm{e}^{-\\kappa s } + j   \\end{pmatrix},\\ ] ] @xmath129 @xmath130 with @xmath123 , as before and @xmath131 . as is well - known",
    ", it is far preferable to use heston in log - coordinates when simulating with the em scheme .",
    "although this is less critical in the cubature context , we still recommend to avoid the numerical evaluation of @xmath132 .",
    "the sabr model is given by @xmath133 where @xmath134 , @xmath135 and @xmath136 .",
    "we restrict ourselves to the case @xmath137 in order to avoid difficulties regarding well - posedness of @xmath138 , cf .",
    "the corresponding vector fields are @xmath139 and so we get @xmath140   \\\\",
    "-\\frac12 b^2 x_2   \\end{pmatrix}.   \\end{split}\\ ] ] the solutions to the odes corresponding to the vector fields @xmath141 and @xmath142 are @xmath143 @xmath144 where @xmath145^{1/(1-\\beta)}_+ , \\quad 0<\\beta<1 , \\\\",
    "g_1(s ) = & x_1\\exp \\left ( \\frac{a x_2 } { b\\rho } \\left (       \\mathrm{e}^ { b\\rho s}-1 \\right )   \\right )   , \\quad \\beta=1 .   \\end{split}\\ ] ] for details on the uniqueness of @xmath146 we refer to the appendix . concerning the solution to the ode corresponding to @xmath147 ,",
    "let @xmath148 be the first component of @xmath149 , i.e. @xmath150 it is impossible to find @xmath151 in closed - form ( unless @xmath152 or @xmath153 ) .",
    "this means that applying the standard nv - scheme must involve the numerical solution of auxiliary odes .",
    "we shall see later that with the nv scheme with drift all involved odes can be solved in closed form .",
    "in the classical nv scheme , only centered gaussian ( brownian ) increments are used to flow along the diffusion vector fields .",
    "our main observation is that one can also use non - centered gaussian increments ; this affects the drift term and , chosen in a smart way , can sometimes render all auxiliary ode to be solvable in closed form . to motivate the class of models for which this works , we illustrate how to systematically construct models accessible to scfc from a fairly general two - factor stochastic volatility model given in it form by @xmath154 where",
    "@xmath155 is kept fixed . in stratonovich form",
    "this becomes ( omitting the dependence on @xmath156 in the drift and diffusion coefficients ) , @xmath157 \\mathrm{d}t    + a(x_1)b(x_2 ) \\circ \\mathrm{d}b^1_t   \\\\ \\mathrm{d}x_2(t)= &   \\left [ c(x_2)-\\frac12 \\left [ d(x_2)d'(x_2 ) + e(x_2)e'(x_2 )    \\right ]   \\right ] \\mathrm{d}t \\\\ & +   d(x_2 ) \\circ \\mathrm{d}b_t^1 + e(x_2 ) \\circ \\mathrm{d}b_t^2 ,   \\end{split}\\ ] ] in the subsequent analysis we shall exhibit a number of possible choices which lead to models accessible to scfc .",
    "first we would like to choose the coefficients @xmath158 such that we can rewrite the first sde as @xmath159 for a constant @xmath160 and functions @xmath161 .",
    "three possible ways to achieve this goal are @xmath162 note that the heston model is a particular example satisfying ( i ) . however , in case ( i ) we would have @xmath163 and since we want to illustrate the additional benefit of the nv scheme with drift over the classical nv scheme , we will not consider case ( i ) in any more detail . moreover , since we would like the volatility factor to depend on the brownian motion driving the stock , we will also skip case ( ii ) and concentrate on case ( iii ) which implies @xmath164 and @xmath165 .",
    "e.g. if we choose @xmath166 , then @xmath167 , if @xmath168 , then @xmath169 with @xmath170 , if @xmath171 , @xmath172 , then @xmath173 . we focus on the most natural choice ( i.e. @xmath174 not being of exponential type ) and therefore pick @xmath175 these choices give us @xmath176",
    "\\right ] \\mathrm{d}t +   b\\rho x_2 \\circ \\mathrm{d}b_t^1 + e(x_2 ) \\circ \\mathrm{d}b_t^2 .",
    "\\end{split}\\ ] ] with @xmath177 \\right),\\ ] ] define @xmath178 .",
    "we would like @xmath179 to have an explicit expression , since it will appear in the first component of @xmath180 .",
    "possible cases are ( i ) @xmath181 , ( ii ) @xmath182 or ( iii ) very specific cases like @xmath183 with @xmath184 nice . both ( i ) and ( ii ) lead to @xmath185 being affine and @xmath186 being affine or of square root type .",
    "we pick @xmath187 and we shall later motivate why we let @xmath186 be linear . with these choices",
    "we can write @xmath188 \\mathrm{d}t +   b\\rho x_2 \\circ \\mathrm{d}b_t^1 + b\\sqrt{1-\\rho^2 } x_2 \\circ \\mathrm{d}b_t^2 .   \\end{split}\\ ] ] we now rewrite the second sde in the form @xmath189 with @xmath190 ( as in the first sde ) and with @xmath191 a constant such that @xmath192 becomes as simple as possible ( recall that we want @xmath193 to be explicit ) .",
    "we get @xmath194 note that if we would have chosen @xmath186 to be affine but not linear or have chosen @xmath186 of square root type , we would not be able to make @xmath151 so simple .",
    "( for the same reason we have chosen @xmath195 linear and not generally affine . )    finally , @xmath196 is left to choose .",
    "since we want to end up with a model accessible to scfc , the function @xmath197 should be such that @xmath198 is explicit , which means that we want @xmath199 to have an explicit inverse .",
    "also , @xmath200 should be explicit .",
    "the obvious candidates are @xmath201 , @xmath202 and @xmath203 and all lead to models that are accessible to scfc . as a case study",
    "we choose the first one and apply the nv scheme with drift to the resulting model in the next section .      in the previous section we constructed a particular class of sv - models which are accessible to scfc , namely : @xmath204 with @xmath205 and @xmath206 .",
    "we assume that the parameters satisfy @xmath207 , @xmath208 , @xmath209 , @xmath135 , @xmath210 .",
    "details surrounding well - posedness , integrability properties and martingale properties can be found in lions and musiela .",
    "a simple application of it s formula shows that @xmath211 where @xmath212 and thus @xmath213 for all @xmath214 , provided @xmath215 .",
    "we shall now give all the ode solutions that are required to apply the nv scheme ( with drift ) .",
    "first note that the vector fields @xmath141 and @xmath142 corresponding to @xmath216 and @xmath217 are given by @xmath218 and the ode solutions are @xmath143 @xmath144 where @xmath219^{1/(1-\\beta)}_+ , \\quad \\frac12\\leq \\beta<1 , \\\\    g_1(s ) = & x_1\\exp \\left ( \\frac{a x_2^\\alpha}{\\alpha b\\rho } \\left (       \\mathrm{e}^{\\alpha b\\rho s}-1 \\right )   \\right )   , \\quad \\beta=1 .   \\end{split}\\ ] ] the it drift vector field @xmath220 and stratonovich drift vector field @xmath147 of @xmath138 are given by @xmath221 we have @xmath222 with @xmath223 and @xmath151 needs to be numerically solved .",
    "( we have already pointed to this difficulty when we discussed the classical sabr example earlier on . )",
    "let us now show that by using brownian increments with drift , this problem can be resolved : all necessary flows can be computed in closed form .",
    "recall from the previous section that we can rewrite @xmath138 as @xmath224 with @xmath225 we see here that the assumption @xmath210 is crucial .",
    "note that the vector fields corresponding to @xmath226 and @xmath227 , respectively , are @xmath141 and @xmath142 .",
    "denote by @xmath228 the remaining part , i.e. @xmath229",
    "then we have @xmath230 with ( cf .",
    "appendix ) @xmath231 where @xmath232 note that when @xmath233 or @xmath234 , @xmath235 should be understood in the limiting sense , i.e. , @xmath236 for @xmath237 or @xmath238 .",
    "since the sabr model is a special case of the model presented here  corresponding to @xmath239 , @xmath237  the semi - closed form nv algorithm developed above can be , in particular , applied to the sabr model .",
    "we have seen for the example above , that if one uses the standard nv scheme , the flow of the drift vector field is not available in closed form . besides using the `",
    "drift trick ' as we did above , it is also possible to absorb this drift in a change - of - measure ; the details of this are outlined below .",
    "there is , however , a serious downside to this : the girsanov - density which appears due to the change - of - measure will _ add significantly to the variance of the object to be sampled_. thus , without further variance reduction , we do not advertise the use of the girsanov transform in this context .",
    "let @xmath240 be the process defined by @xmath241 and let @xmath242 be the probability measure under which @xmath243 is a 2-dimensional standard brownian motion .",
    "define the probability measure @xmath244 by @xmath245 , where @xmath246 then by girsanov , under @xmath244 , @xmath247 is equal in law to a 2-dimensional standard brownian motion plus constant drift equal to @xmath248 .",
    "hence under @xmath244 , @xmath249 is equal in law to @xmath138 under @xmath242 and we have for @xmath250 measurable , @xmath251=\\mathbb{e}^{\\mathbb{q}}[f(y_1(t),y_2(t ) ) ] = \\mathbb{e}^{\\mathbb{p}}[f(y_1(t),y_2(t))\\mathcal{e}(t)].\\ ] ] hence a `` weighted '' nv scheme with explicit solutions to all odes can be obtained by using the nv scheme for the process @xmath249 and then multiplying the payoff @xmath252 , as is done in importance sampling , by @xmath253 .",
    "note that all the ode solutions corresponding to the nv scheme for @xmath249 are explicit , since the vector fields corresponding to @xmath249 are @xmath228 , @xmath141 and @xmath142 .    to back up our claim about the additional variance caused by the girsanov density @xmath254 , note that @xmath255 , which is only negligible when @xmath160 and @xmath191 are close to zero .",
    "let us illustrate how the techniques introduced ( until now in the context of 2-dimensional models ) remain feasible in typical higher dimensional models ( what we have in mind here is some multi asset sv model ) .",
    "since it is precisely the curse of dimensionality that forces one to use stochastic methods ( rather than pde methods , say ) we want to be fully explicit in showing how our ideas are implemented in higher dimensions .",
    "more specifically , we shall consider the following multi - dimensional version of our sabr - type model : for @xmath256 , @xmath257 with @xmath258 , @xmath259 and @xmath260 , @xmath261 , @xmath262 , @xmath263 , @xmath264 . here",
    "@xmath265 , with @xmath266 and @xmath267 is a 2n - dimensional brownian motion with correlation matrix given by @xmath268 which we assume to be positive - definite .",
    "let @xmath269 be the unique lower - triangular matrix such that @xmath270 ( choleski decomposition )",
    ". then @xmath271 , where @xmath272 , with @xmath273 and @xmath274 is a @xmath275-dimensional standard brownian motion .",
    "hence we can write for @xmath256 , @xmath276 let for @xmath277 , @xmath278 and @xmath279 be the vector fields corresponding to @xmath280 and @xmath281 , respectively .",
    "we have @xmath282 it follows that @xmath283 where for @xmath256 , @xmath284 = \\rho_{i , i}=1 , \\\\   q_i = & \\sum_{j=1}^n \\left [ \\sqrt{\\rho}_{n+i , j}\\sqrt{\\rho}_{i , j } +    \\sqrt{\\rho}_{n+i , n+j}\\sqrt{\\rho}_{i , n+j } \\right ] = \\sum_{j=1}^n   \\sqrt{\\rho}_{n+i , j}\\sqrt{\\rho}_{i , j } , \\\\   r_i= & \\sum_{j=1}^n   \\left [ \\left ( \\sqrt{\\rho}_{n+i , j } \\right)^2 + \\left (      \\sqrt{\\rho}_{n+i , n+j } \\right)^2 \\right ] = \\rho_{n+i , n+i}=1 .",
    "\\end{split}\\ ] ]    we would like to write the system @xmath285 , @xmath256 in the following way @xmath286 for a certain @xmath287 and @xmath288 . looking at @xmath147 , we should choose @xmath289 and @xmath290 such that for @xmath256 , @xmath291 these are @xmath275 linear equations with @xmath275 unknowns .",
    "it follows that there exists a unique @xmath289 and @xmath290 such that the above equalities are satisfied if @xmath269 is of full rank .",
    "this is the multi - dimensional analogue of the condition @xmath210 of the previous section .",
    "we see that in order to apply the nv scheme with drift , we need to find the flows corresponding to the vector fields @xmath292 , @xmath293 and @xmath294 all the solutions to these odes can be found explicitly as in section [ sv : gensabr ] .      in this section",
    "we want to prove second order weak convergence of @xmath295 as @xmath296 for smooth @xmath12 with @xmath297 given by - . as in the original proof by ninomiya and victoir @xcite for the classical nv scheme , we use a taylor expansion to get the local order of the weak error by comparison with the known local weak order of the classical ninomiya - victoir scheme .",
    "let @xmath298 be as in section [ sectionnvscheme ] . then the difference in the taylor expansion of the expectation in one step is given by @xmath299 \\left(t / k \\right)^2 + \\mathcal{o}\\left(\\left(t / k\\right)^3    \\right).\\end{gathered}\\ ] ] when we condition on @xmath300 , only the order of the indices",
    "are swapped . by the peculiar structure of",
    ", this means that the signs of all terms of the difference change , i.e. , @xmath301 \\\\",
    "+ \\mathcal{o}\\left(\\left(t / k\\right)^3\\right).\\end{gathered}\\ ] ] thus , taking the unconditional expectation in @xmath302 gives @xmath303 and second order convergence of the ninomiya - victoir scheme with drift follows exactly as in the case without drift .",
    "[ rem : cbature - with - drift ] the drift trick also works for classical cubature on wiener space as in lyons - victoir  @xcite , i.e. , when @xmath304 , simply by adding the same drift @xmath305 to the @xmath306 component of the cubature path @xmath52 .",
    "this procedure retains the original order of convergence for the given cubature formula , as can be trivially seen by comparing the odes with and without drift .",
    "note that in the ninomiya - victoir scheme a slightly more difficult argument as discussed above is necessary , since here the `` time '' component @xmath307 is not linear .",
    "in this section we report the results of our numerical experiments . for this",
    "we have chosen three models : the sabr model , the generalized sabr model and the multi - dimensional generalized sabr model .",
    "the numerical results for these models are given in section [ numres : sabr ] , section [ numres : gensabr ] and section [ numres : gensabrmd ] , respectively .",
    "for each of the models , we compare the nv scheme with drift to the regular nv scheme and the euler scheme and in all the experiments reported in this paper , we used quasi monte - carlo for the integration . in order",
    "to check the order of the three schemes , we first give plots of the relative discretization error against the number of time steps @xmath20 .",
    "for these plots the number of ` simulated trajectories ' @xmath37 is chosen such that the integration error is negligible compared to the discretization error .",
    "( since we are using quasi monte carlo , @xmath37 is strictly speaking not the number of simulations , but the size of the finite low - discrepancy sequence used for the computation . ) in order to compute these errors we of course need to know the ` true value ' ( or a good estimate of it ) .",
    "for the two experiments involving the generalized sabr model , the true value was obtained by running the code longer than reported in the plots .",
    "however , in the case of the sabr model , the true value was estimated by extrapolation of the values obtained by the code ( the sabr formula is not exact enough ! )    results comparing the discretization error against the number of time steps , might not really seem practically relevant , since they only relate the number of time - steps for different numerical methods , but not the corresponding computational cost or computer time . therefore we also give tables of the computational time of the different schemes . if we want to compare the run - time for different methods , we need to ensure the fairness of the comparison , i.e. , we need to compare the different methods with parameters giving similar computational errors .",
    "we basically have two parameters for the numerical method , namely the number of time - steps @xmath20 and the number of simulated trajectories @xmath37  where every trajectory is given by a @xmath308-dimensional vector from a low discrepancy sequence , in our case the sobol - sequence .",
    "( here , @xmath308 depends on both the model and the method . ) unlike for monte carlo simulation , where accurate , but probabilistic error estimates are available , there is no simple error estimation procedure for qmc ( as far as we are aware ) .",
    "therefore , it is not obvious how to choose the number of trajectories for a comparison of run - times .",
    "choosing the same number of trajectories for every method might not be appropriate , because some methods might yield `` rougher '' integration problems , requiring a higher number of trajectories for a comparable precision .    in our comparison",
    "we proceeded as follows . for a given model and method we first choose @xmath20 ( and @xmath37 very large )",
    "such that the relative discretization error is around @xmath309 .",
    "for simplicity , we take the computations run for producing the plots , which means that @xmath20 is a power of two . then we start with @xmath310 trajectories , run the method , and double the number @xmath37 of trajectories until the observed ( absolute ) error is _ consistently _ closer than @xmath311 to the true ( absolute ) error for the fixed given @xmath20 .    to explain this in more detail , first recall that the computational error in ( quasi ) monte carlo simulations for sdes splits into two parts : @xmath312 . here",
    ", @xmath313 stems from the time - discretization of the sde .",
    "this part of the error is controlled by @xmath20 .",
    "@xmath314 is the error from the integration , i.e. , from the numerical computation of the expectation of the solution to the discretized sde .",
    "this error part is controlled by @xmath37 . in the comparison procedure ,",
    "we first fix @xmath20 such that the relative discretization error @xmath315 ( @xmath185 denoting the true result ) is around @xmath309 .",
    "then we choose @xmath37 ( by a doubling procedure ) such that @xmath316 .",
    "( since in all cases @xmath317 , this means we choose the integration error to be one fifth of the discretization error . )    in the following tables , we report the found parameters , the corresponding relative error and the computational time in seconds  all computations where performed on the same computer , a toshiba laptop with 6 gb ram and four intel core i7 cpus with 1.6 ghz .",
    "notice that the run - time scales linearly with the number @xmath37 of trajectories .      in this section",
    "we give the results corresponding to the experiment with the sabr model .",
    "recall that this sv - model is given by @xmath318 with @xmath205 and @xmath206 and where the parameters satisfy @xmath207 , @xmath135 , @xmath210 .",
    "the parameters chosen for the experiment are @xmath319 , @xmath320 , @xmath321 , @xmath322 , @xmath323 , @xmath324 . as the derivative we choose a ( european ) call option with maturity time @xmath325 and strike price @xmath326 . for simplicity",
    "we assume that the interest rate is zero .",
    "the corresponding estimated ` true result ' is 0.09400046 .    in figure",
    "[ fig : sabr ] the convergence rates of the three schemes is graphically displayed .",
    "we clearly see the second - order convergence of the two nv schemes compared to the first - order convergence of the euler method .",
    ".computational time for the sabr model [ cols=\"<,^,^,^,^\",options=\"header \" , ]     [ tab : gensabrmd - time ]    further , the computational time for the generalized sabr model with a four - dimensional stock market , reported in table  [ tab : gensabrmd - time ] , again shows the usual picture . the classical ninomiya - victoir method gives a speed - up between factors two and four ( depending on the trust of the choice of @xmath37 ) . in this case , one might , however , note that the error from the classical ninomiya - victoir method is more than twice higher the the errors from the competing methods . and",
    "again , the simpler structure of the odes in the case of a ninomiya - victoir method with drift leads to a convincing speed - up as compared to both other methods .",
    "in sections [ example_heston ] , [ sec : example :- sabr - model ] and [ sv : gensabr ] , the following ode appears : @xmath327 where @xmath328 , @xmath329 and @xmath330 is continuous and either positive valued or negative valued .",
    "one can easily check that @xmath331 with @xmath332 , is a solution to .",
    "we briefly provide some details about uniqueness of the solution .",
    "when @xmath333 takes only negative values , then the right hand side of the ode is decreasing in the state variable and uniqueness follows for any @xmath329 ( see e.g. example 2.4 on p.286 of @xcite ) .",
    "when @xmath333 takes only positive values and @xmath334 , uniqueness follows by the picard - lindelf theorem .",
    "when @xmath333 takes only positive values and @xmath335 , the solution is not unique ; for instance , @xmath336 forms another solution . for this particular case ,",
    "we have chosen , throughout the paper , to work with the solution @xmath337 , since the flow @xmath338 is ( right)-continuous at @xmath335 for all @xmath214 ."
  ],
  "abstract_text": [
    "<S> cubature methods , a powerful alternative to monte carlo due to kusuoka  [ adv .  math .  </S>",
    "<S> econ .  6 , 6983 , 2004 ] and lyons  victoir  [ proc .  r.  soc </S>",
    "<S> . + lond .  </S>",
    "<S> ser .  </S>",
    "<S> a 460 , 169198 , 2004 ] , involve the solution to numerous auxiliary ordinary differential equations . </S>",
    "<S> with focus on the ninomiya - victoir algorithm  [ appl .  </S>",
    "<S> math .  fin .  </S>",
    "<S> 15 , 107121 , 2008 ] , which corresponds to a concrete level @xmath0 cubature method , we study some parametric diffusion models motivated from financial applications , and exhibit structural conditions under which all involved odes can be solved explicitly and efficiently . </S>",
    "<S> we then enlarge the class of models for which this technique applies , by introducing a ( model - dependent ) variation of the ninomiya - victoir method . </S>",
    "<S> our method remains easy to implement ; numerical examples illustrate the savings in computation time . </S>"
  ]
}
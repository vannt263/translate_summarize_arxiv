{
  "article_text": [
    "regular expressions ( res ) , because of their succinctness and clear syntax , are the common choice to represent regular languages .",
    "equivalent deterministic finite automata ( dfa ) would be the preferred choice for pattern matching or word recognition as these problems can be solved efficiently by dfas .",
    "however , minimal dfascan be exponentially bigger than res .",
    "nondeterministic finite automata ( nfa ) obtained from rescan have the number of states linear with respect to ( w.r.t ) the size of the res . because nfaminimization is a pspace - complete problem other methods",
    "must be used in order to obtain small nfas  usable for practical purposes .",
    "conversion methods from resto equivalent nfascan produce nfaswithout or with transitions labelled with the empty word ( @xmath1-nfa ) .",
    "here we consider several constructions of small @xmath0-free nfasthat were recently developed or improved  @xcite , and that are related with the one of glushkov and mcnaughton - yamada  @xcite .",
    "the nfasize can be reduced by merging equivalent states  @xcite .",
    "another solution is to simplify the resbefore the conversion  @xcite .",
    "gruber and gulan  @xcite showed that resin reduced star normal form ( ) achieve some conversion lower bounds .",
    "our experimental results corroborate that resmust be converted to reduced . in this paper",
    "we present the implementation within the * fado*system  @xcite of several algorithms for constructing small @xmath0-free nfasfrom res , and a comparison of regular expression measures and nfasizes based on experimental results obtained from uniform random generated res .",
    "we consider nonredundant resand resin reduced in particular .",
    "let @xmath2 be an _ alphabet _ ( set of _ letters _ ) .",
    "@xmath3 over @xmath2 is any finite sequence of letters .",
    "the _ empty word _ is denoted by @xmath1 .",
    "let @xmath4 be the set of all words over @xmath2 .",
    "a _ language _ over @xmath2 is a subset of @xmath4 .",
    "the set @xmath5 of _ regular expressions _ ( re ) over @xmath2 is defined by : @xmath6 where the operator @xmath7 ( concatenation ) is often omitted .",
    "the language @xmath8 associated to @xmath9 is inductively defined as follows : @xmath10 , @xmath11 , @xmath12 for @xmath13 , @xmath14 , @xmath15 , and @xmath16 .",
    "two regular expressions @xmath17 and @xmath18 are _ equivalent _ if @xmath19 , and we write @xmath20 .",
    "the algebraic structure @xmath21 constitutes an idempotent semiring , and with the unary operator @xmath22 , a kleene algebra .",
    "there are several ways to measure the size of a regular expression .",
    "the _ size _ ( or _ ordinary length _ ) @xmath23 of @xmath24 is the number of symbols in @xmath17 , including parentheses ( but not the operator  @xmath7 ) ; the _ alphabetic size _",
    "@xmath25 ( or @xmath26 ) is its number of letters ( multiplicities included ) ; and the _ reverse polish notation size _",
    "@xmath27 is the number of nodes in its syntactic tree .",
    "the _ alphabetic size _ is considered in the literature  @xcite the most useful measure , and will be the one we consider here for several remeasure comparisons .",
    "moreover all these measures are identical up a constant factor if the regular expression is reduced  ( * ? ? ?",
    "3 ) . let @xmath28 be @xmath1 if @xmath29 , and @xmath30 otherwise .",
    "a regular expression @xmath17 is _ reduced _ if it is normalised w.r.t the following equivalences ( rules ) : @xmath31 a recan be transformed into an equivalent reduced rein linear time .",
    "a _ nondeterministic automaton _ ( nfa ) @xmath32 is a quintuple @xmath33 , where @xmath34 is a finite set of states , @xmath2 is the alphabet , @xmath35 the transition relation , @xmath36 the initial state , and @xmath37 the set of final states .",
    "the _ size _ of an nfais @xmath38 . for @xmath39 and @xmath40 , we denote by @xmath41 , and we can extend this notation to @xmath42 , and to @xmath43 .",
    "the _ language _ accepted by @xmath32 is @xmath44 .",
    "two nfasare _ equivalent _ , if they accept the same language .",
    "if two nfas@xmath45 and @xmath46 are isomorphic , and we write @xmath47 .",
    "an nfais _ deterministic _ ( dfa ) if for each pair @xmath48 there exists at most one @xmath49 such that @xmath50 .",
    "a dfais _ minimal _ if there is no equivalent dfawith fewer states .",
    "minimal dfaare unique up to isomorphism . given an equivalence relation @xmath51 on @xmath34 , for @xmath39 let @xmath52_{e}$ ]",
    "be the class of @xmath53 w.r.t @xmath51 , and for @xmath54 let @xmath55_{e}\\mid q\\in t\\}$ ] .",
    "the equivalence relation @xmath51 is _ right invariant _ w.r.t an nfa@xmath32 if @xmath56 and for any @xmath57 , @xmath40 if @xmath58 , then @xmath59 .",
    "the quotient automaton @xmath60_e , f/_e)$ ] , where @xmath61_e,{\\sigma},[q]_e ) \\mid ( p,{\\sigma},q ) \\in \\delta\\}$ ] , satisfies @xmath62 . given two equivalence relations over a set @xmath34 , @xmath63 and @xmath64",
    ", we say that @xmath63 is _ finer _ than @xmath64 ( and @xmath64 _ coarser _ than @xmath63 ) if and only if @xmath65 .",
    "we consider three methods for constructing small nfas@xmath32 from a regular expression @xmath17 such that @xmath66 , i.e. , they are _",
    "the position automaton construction was independently proposed by glushkov , and mcnaughton and yamada  @xcite .",
    "let @xmath67 for @xmath68 , and let @xmath69 .",
    "we consider the expression @xmath70 obtained by marking each letter @xmath71 with its position @xmath72 in @xmath17 , @xmath73 . the same notation is used to remove the markings , i.e. , @xmath74 . for",
    "@xmath9 and @xmath75 , let @xmath76 , @xmath77 , and @xmath78 .",
    "let @xmath79 .",
    "the _ position automaton _ for @xmath9 is @xmath80 , with @xmath81 and @xmath82 if @xmath83 , and @xmath84 , otherwise .",
    "we note that the number of states of @xmath85 is exactly @xmath86 .",
    "other interesting property is that @xmath87 is _ homogeneous _ , i.e.",
    ", all transitions arriving at a given state are labelled by the same letter .",
    "brggemann - klein  @xcite showed that the construction of @xmath87 can be obtained in @xmath88 ( @xmath89 ) if the regular expression @xmath17 is in the so called _ star normal form _ ( ) , i.e. , if for each subexpression @xmath90 of @xmath17 , @xmath91 and @xmath92 .",
    "for every @xmath68 there is an equivalent rein star normal form @xmath93 that can be computed in linear time and such that @xmath94 .",
    "ilie and yu  @xcite introduced the construction of the follow automaton from a re .",
    "their initial algorithm begins by converting @xmath9 into an equivalent @xmath1-nfafrom which the follow automaton @xmath95 is obtained . for efficiency reasons we implemented that method in the * fado*library . the _ follow automaton _ is a quotient of the position automaton w.r.t the right - invariant equivalence given by the _ follow relation _ @xmath96 that is defined by :    lcr @xmath97 & if &    [ cols= \" < \" , ]     @xmath98 .",
    "let @xmath99 be a set of regular expressions .",
    "then @xmath100 if @xmath101 and @xmath102 . for @xmath9 and @xmath40 , the set @xmath103 of _ partial derivatives _ of @xmath17 w.r.t .",
    "@xmath71 is defined inductively as follows : @xmath104    this definition can be extended to sets of regular expressions , words , and languages . given @xmath9 and @xmath40 , @xmath105 for @xmath106 , @xmath107 , @xmath108 for @xmath42 , and @xmath109 for @xmath110 .",
    "the _ set of partial derivatives _ of @xmath17",
    "is denoted by @xmath111    given a regular expression @xmath17 , the partial derivative automaton @xmath112 , introduced by mirkin and antimirov  @xcite , is defined by    @xmath113    where @xmath114 , for all @xmath115 and @xmath40 .",
    "@xmath116    champarnaud and ziadi  @xcite showed that the partial derivative automaton is also a quotient of the position automaton .",
    "et al . _",
    "@xcite proved that for rereduced and in star normal form the size of its partial derivative automaton @xmath117 is always smaller than the one of its follow automaton @xmath118 .",
    "the automata here presented @xmath87 , @xmath118 and @xmath117 can in worst - case be constructed in time and space @xmath119 , and have , in worst - case , size @xmath119 , where @xmath120 is the size of the re .",
    "recently , nicaud  @xcite showed that on the average - case the size of the @xmath87 automata is linear .",
    "the best worst case construction of @xmath0-free nfasfrom reis the one presented by hromkovic _",
    "et al . _",
    "@xcite that can be constructed and have  size @xmath121",
    ". however this construction is not considered here .",
    "it is possible to obtain in time @xmath122 a ( unique ) minimal dfaequivalent to a given one .",
    "however nfastate minimization is pspace - complete and , in general , minimal nfasare not unique .",
    "considering the exponential succinctness of nfasw.r.t dfas , it is important to have methods to obtain small nfas .",
    "any right - invariant equivalence relation over @xmath34 w.r.t @xmath32 can be used to diminish the size of @xmath32 ( by computing the quotient automaton ) .",
    "coarsest right - invariant equivalence _",
    "@xmath123 can be computed by an algorithm similar to the one used to minimize dfas  @xcite .",
    "this coincides with the notion of ( auto)-bisimulation , widely applied to transition systems and which can be computed efficiently ( in almost linear time ) by the paige and tarjan algorithm  @xcite .",
    "left - invariant _ equivalence relation on @xmath34 w.r.t @xmath32 is any right - invariant equivalence relation on the reversed automaton of @xmath32 , @xmath124 , where @xmath125 if @xmath126 ( and we allow multiple initial states ) .",
    "coarsest left - invariant equivalence _ on @xmath34 w.r.t @xmath32 , @xmath127 , is @xmath123  of  @xmath128 .",
    "* fado *  @xcite is an ongoing project that aims to provide a set of tools for symbolic manipulation of formal languages . to allow high - level programming with complex data structures , easy prototyping of algorithms , and portability are its main features .",
    "it is mainly developed in the ` python`programming language . in * fado * , regular expressions and finite automata are implemented as ` python`classes .",
    "figure  [ fig : regexpclass ] presents the classes for resand the main methods described in this paper . the `",
    "regexp ` class is the base class for all resand the class ` position ` is the base class for marked res . the methods ` first ( ) ` , ` last ( ) ` and ` followmap ( ) ` ( where @xmath129 ) are coded for each subclass .",
    "the method ` nfaposition ( ) ` implements a construction of the @xmath87 automaton without reduction to .",
    "brggemann - klein algorithm is implemented by the ` nfapsnf ( ) ` method .",
    "the methods ` nfafollowepsilon ( ) ` and ` nfafollow ( ) ` implement the construction of the @xmath118 via an @xmath0-nfa . the exact text of all these algorithms is too long to present here .",
    "the method ` nfapd ( ) ` computes the @xmath117 and uses the method ` linearform ( ) ` .",
    "this method implements the function @xmath130 defined by antimirov  @xcite to compute the partial derivatives of a rew.r.t all letters .",
    "algorithm  [ alg : nfapd ] presents the computation of the @xmath117 .",
    "@xmath131 @xmath132 @xmath133 stack @xmath134 @xmath135tail@xmath136 push(stack , pd ) @xmath137pd , head@xmath138pd , head@xmath139tail@xmath136 @xmath140pd@xmath136    figure  [ fig : faclass ] presents the classes for finite automata . `",
    "fa ` is the abstract class for finite automata .",
    "the class ` nfar ` includes the inverse of the transition relation , that is not included in the ` nfa ` class for efficiency reasons . in the ` nfa `",
    "class the method ` autobisimulation ( ) ` implements a nave version for compute @xmath123 , as presented in algorithm  [ alg : equiv ] . given an equivalence relation the method ` equivreduced ( )",
    "` builds the quotient automaton .",
    "given an nfa**a * * , * a*.`requiv ( ) ` corresponds to @xmath141 , * a*.`lequiv ( ) ` to @xmath142 and * a*.`lrequiv ( ) ` to @xmath143 .",
    "we refer the reader to gouveia  @xcite and to * fado*webpage  @xcite for more implementation details .",
    "@xmath144 @xmath145 @xmath146 @xmath147 * return * @xmath148",
    "uniform random generators are essential to obtain reliable experimental results that can provide information about the average - case analysis of both computational and descriptional complexity . for general regular expressions , the task is somehow simplified because they can be described by small unambiguous context - free grammars from which it is possible to build uniform random generators  @xcite . in the * fado*system we implemented the method described by mairson @xcite for the generation of context - free languages .",
    "the method accepts as input a context - free grammar and the size of the words to be uniformly random generated .",
    "the random samples need to be consistent and large enough to ensure statistically significant results . to have these samples readily available , the * fado*system includes a dataset of random re , that can be accessed online .",
    "the current dataset was obtained using a grammar for resgiven by lee and shallit  @xcite , and that is presented in figure  [ fig : grammar ] .",
    "this grammar generates resnormalized by rules that define reduced res , except for certain cases of the rule : @xmath149 , where @xmath83 .",
    "the database makes available random samples of reswith different sizes between @xmath150 and @xmath151 and with alphabet sizes between @xmath152 and  @xmath153 .",
    "in order to experiment with several properties of resand nfaswe developed a generic program to ease to add / remove the methods to be applied and to specify the data , from the database , to be used .",
    "here we are interested in the comparison of several resdescriptional measures with measures of the nfasobtained using the methods earlier described .    for reswe considered the following properties : the alphabetic size ( ) ; the size ( ) ; test",
    "if it is in ( ) ; if not in , compute the and its measures ( , ) ; test if it is reduced ; if not reduced , reduce it and compute its measures ( , ) ; the number of states ( ) and number of transitions ( ) of the equivalent minimal dfa .    for each nfa(@xmath87 , @xmath118 , and @xmath117 ) we considered the following properties : the number of states ( @xmath154 ) ; the number of transitions ( @xmath155 ) ; if it is deterministic ( ) ; and if it is homogeneous ( ) . all these properties were also considered for the case where the resare in , and for the nfasobtained after applying the invariant equivalences @xmath123 , @xmath127 , and their composition .",
    "all tests were performed on samples of @xmath156 uniformly random generated res .",
    "each sample contains resof size @xmath153 , @xmath157 , @xmath158 and @xmath159 , respectively .",
    "table  [ tab : resp ] shows some results concerning res .",
    "the ratio of alphabetic size to size is almost constant for all samples .",
    "almost all resare in , so we do not presented the measures after transforming into .",
    "this fact is relevant as the reswere generated only _ almost reduced_. the column contains the percentage of resfor which their are reduced .",
    "it is interesting to note that the average number of states of the minimal dfa ( ) is near ( i.e. , near the number of states of @xmath87 ) .",
    "the standard deviation is here very high . for the sample of size @xmath159 , however , @xmath160 of the reshave @xmath161 .",
    "more theoretical work is needed for a deeper understanding of these results .",
    "table  [ tab : nfasp ] and table  [ tab : ratios ] show some results concerning the nfasobtained from res . in table",
    "[ tab : nfasp ] the values not in percentage are average values . if @xmath87 is deterministic then the resis unambiguous ( and strong unambiguous , if in )  @xcite .",
    "the results obtained suggest that perhaps @xmath162 of the reduced resare strong unambiguous .",
    "note that if @xmath87 is not deterministic , almost certainly , neither @xmath117 nor @xmath118 are . for reasonable sized res ,",
    "although @xmath87 are homogeneous it is unlikely that either @xmath117 or @xmath118 will be so .",
    "it is not significant the difference between @xmath163 and @xmath164 . on average",
    "@xmath165 seems linear in the size of the re , and that fact was recently proved by nicaud  @xcite .",
    "reductions by @xmath123 and @xmath127 ( or @xmath166 ) decrease by less than @xmath167 the size of the considered nfas(@xmath87 , @xmath118 , and @xmath117 ) .",
    "in particular the quotient automata of @xmath87 are less than @xmath168 smaller than @xmath117 . in general , we can hypothesize that reductions by the coarsest invariant equivalences are not significant when resare reduced ( and/or are in ) .",
    "we presented a set of tools within the * fado*system to uniformly random generate res , to convert resinto @xmath0-free nfasand to simplify both resand nfas .",
    "these tools can be used to obtain experimental results about the relative descriptional complexity of regular language representations on the average case .",
    "our experimental data corroborate some previous experimental and theoretical results , and suggest some new hypotheses to be theoretically proved .",
    "we highlight the two following conjectures .",
    "reduced reshave high probability of being in .",
    "and the @xmath117 obtained from resin reduced seems to almost coincide with quotient automata of @xmath87 by @xmath166 .",
    "a.  almeida , m.  almeida , j.  alves , n.  moreira , and r.  reis . and guitar : tools for automata manipulation and visualization . in s.",
    "maneth , editor , _",
    "14th ciaa09 _ , volume 5642 of _ lncs _ , pages 6574 .",
    "springer , 2009 .",
    "l.  ilie , r.  solis - oba , and s.  yu . reducing the size of nfas by using equivalences and preorders . in a.",
    "apostolico , m.  crochemore , and k.  park , editors , _ 16th cpm 2005 _ , volume 3537 of _ lncs _ , pages 310321 .",
    "springer , 2005 .",
    "j.  lee and j.  shallit .",
    "enumerating regular expressions and their languages . in m.",
    "domaratzki , a.  okhotin , k.  salomaa , and s.  yu , editors , _",
    "9th ciaa 2004 _ , volume 3314 of _ lncs _ , pages 222 .",
    "springer , 2005 ."
  ],
  "abstract_text": [
    "<S> regular expressions ( res ) , because of their succinctness and clear syntax , are the common choice to represent regular languages . however , efficient pattern matching or word recognition depend on the size of the equivalent nondeterministic finite automata ( nfa ) . </S>",
    "<S> we present the implementation of several algorithms for constructing small @xmath0-free nfasfrom reswithin the * fado*system , and a comparison of regular expression measures and nfasizes based on experimental results obtained from uniform random generated res . for this analysis , </S>",
    "<S> nonredundant resand reduced resin star normal form were considered . </S>"
  ]
}
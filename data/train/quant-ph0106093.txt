{
  "article_text": [
    "ensemble computing is based on a model comprised of a macroscopic number of computers , where the same set of operations is performed simultaneously on all the computers .",
    "the concept of ensemble computing became very important recently , due to the fact that nmr quantum computers  @xcite perform ensemble computing .",
    "nmr quantum computing has already succeeded in performing complex operations involving up to 7 - 8 qubits ( quantum bits ) , and therefore , nmr quantum computers are currently the most successful quantum computing devices .    in nmr quantum computing each computer is represented by a single molecule , and the qubits of the computer are represented by the nuclear spins embedded in a single molecule .",
    "a macroscopic number of identical molecules is available in a bulk system , and these molecules act as many computers performing the same computation in parallel . to perform a desired computation , the same sequence of external pulses is applied to all the molecules / computers .",
    "finally , a measurement of the state of a single qubit is performed by averaging over all computers / molecules to read out the output on a particular bit on all computers . due to the use of a macroscopic number of molecules ,",
    "the output is a noticeable magnetic signal .",
    "it has been shown that almost all known quantum algorithms designed for the usual single - computer model , can be adapted to be implemented on ensemble computers  @xcite , and in particular , these ensemble computers can perform fast factorization of large numbers  @xcite and fast data - base search  @xcite .",
    "unfortunately , the wide - spread belief is that even though ensemble quantum computation is a powerful scheme for demonstrating fundamental quantum phenomena , it is not scalable ( see for instance  @xcite ) . in particular , in the current approaches to ensemble computing , identifying the state of the computer",
    "requires sensing signals with signal - to - noise ratios that are exponentially small in @xmath0 , the number of qubits in the system .",
    "we refer to this well - known problem as the _ scaling problem_. the origin of the scaling problem is explained in the following .",
    "the initial state of each qubit , when averaged over all computers ( a macroscopic number ) , is highly mixed , with only a small bias towards the zero state . at thermal equilibrium",
    "the state is @xmath1 where the initial bias , @xmath2 , is mainly determined by the magnetic field and the temperature , but also depends on the structure and the electronic configurations of the molecule . for an ideal system",
    ", one has @xmath3 leading to @xmath4 , meaning that the state is @xmath5 with probability one , and it is @xmath6 with probability zero . for a totally mixed system , @xmath7 , hence the probabilities of @xmath8 and @xmath6",
    "are both equal to half .",
    "we also define @xmath9 to be the initial error probability .",
    "typically , @xmath2 is around @xmath10 for the liquid nmr systems in use @xcite , and can probably be improved ( increased ) a great deal in the near future .",
    "especially promising directions are the use of liquid crystal nmr for quantum computing  @xcite , and the use of a swap operation for the nuclear spin and the electron spin known as endor technique  @xcite .",
    "the state of an @xmath0-qubit system in the ideal case is @xmath11 with @xmath12 ( a tensor product of @xmath0 single qubit states ) . in general",
    ", the initial state of an @xmath0-qubit liquid nmr system can be represented as a tensor product of states of the individual qubits : @xmath13 this state can also be written as @xmath14 , a mixture of all states @xmath15the basis vectors of the system , and @xmath16 ( for @xmath0 qubits ) is a @xmath0-bit binary string .",
    "e.g. , for two qubits , @xmath17 .",
    "in fact , the initial bias is not the same on each qubit  @xcite , but as long as the differences between these biases are small we can ignore this fact in our analysis .",
    "the analysis we do later on is correct if we replace all these slightly different initial biases by their minimum value and call this value @xmath2 .",
    "currently , researchers use the so - called `` pseudo pure state ( pps ) '' technique to perform computations with such highly mixed initial states . in this technique ,",
    "the initial mixed density matrix is transformed to a state @xmath18 which is a mixture of the totally - mixed state @xmath19 ( with @xmath20 , the identity matrix of order @xmath21 ) , and a pure state @xmath22 initially set to be @xmath23 in our case .",
    "such a state is called a pseudo - pure state .",
    "unitary operations then leave the totally mixed state unchanged , but do affect the pure state part , to perform the desired computation via entanglement of the pure part ( which we refer to as `` pseudo - entanglement '' ) . finally , the state of the ensemble - computer is measured . if the probability @xmath24 of the pure state is not too small , then the pure part of the state yields the _ expectation value _ for each qubit , an outcome which is sufficient for performing quantum computing which is as powerful as the standard ( non - ensemble ) quantum computing  @xcite .",
    "unfortunately , in all the existing pps methods @xmath25 and hence , @xmath24 scales exponentially badly with @xmath0 ( the number of computation qubits ) , leading to an exponentially small signal - to - noise ratio . as a result , an exponential number of computers ( molecules ) are required in order to read the signal . with @xmath2 in the range",
    "@xmath26 one might still hope to obtain a 20-qubit computer , since then @xmath24 ( approximately @xmath27 ) can still lead to an observed signal when an avogadro number of computers are used .",
    "but one can not hope to go beyond a 50-qubit computer , since then , @xmath24 is approximately @xmath28 , which is smaller than the standard deviation in reading the result ( and , even with perfect devices , the signal can not be read ) .",
    "the exponential advantage of quantum computers over classical ones  @xcite is totally lost in these nmr computing devices since an exponential number of molecules / computers is required for the computation , and therefore the scaling problem must be resolved in order to achieve any useful nmr quantum computing .",
    "this scaling problem ( plus the assumption that quantum computing requires entanglement , and can not rely on pseudo - entanglement ) has led several researchers to suggest that the current nmr quantum computers are no more than classical simulators of quantum computers  @xcite .",
    "actually , the important contribution of  @xcite is the result that in some neighborhood of the totally - mixed state , all states are separable ; hence , some pseudo - entanglement states contain no entanglement .",
    "but this work does not prove ( and does not claim to prove ) that current nmr quantum computers do not perform quantum computation .",
    "we , in contrast , conjecture that the pps technique and the work of  @xcite form the first step in proving that quantum computing without entanglement _ is possible_.    the first important step in resolving the scaling problem is to understand that the scaling problem is not an inherent characteristic of ensemble computers but is an _ artifact _ of the existing pps methods .",
    "in fact , the original highly mixed state contains a great deal of information , and this can be seen by rotating each qubit separately and finally measuring the qubits .",
    "however , the existing methods of transforming the highly mixed state into the pps cause the scaling problem , by losing information _ on purpose_. furthermore , it is important to mention that for any @xmath0 , there is a range of bias , @xmath29 , not close to zero , where the currently existing methods for creating pps work just fine . in order to be in that range",
    ", the state of each qubit must be almost pure : @xmath30 , where @xmath31 , the error probability , satisfies @xmath32 ( actually @xmath33 is already useful ) .",
    "then @xmath24 scales well : @xmath34 as long as @xmath35 , the probability @xmath24 is sufficiently large for all practical purposes , thus much larger @xmath0 s can still be used .",
    "furthermore , _ any _ @xmath0 can be used if one can control @xmath31 as a function of @xmath0 .",
    "the pps technique , the loss of information , and the scaling problem are described in more detail in appendix  [ pps - tech ] .    instead of converting the initial state ( [ rho - n - init ] ) to a pps ( [ pps ] )",
    ", we perform a `` purification '' transformation that takes a subset , @xmath36 ( with @xmath37 ) , of the qubits to a final state of the form @xmath38 where @xmath39 is some desired bias close enough to 1 .",
    "this state with a higher bias can then be transformed into a scalable pps , @xmath40 .",
    "for example , _ we shall demonstrate how to achieve ( via algorithmic cooling ) _",
    "@xmath33 , which allows @xmath0 in the range 20 - 50 qubits , and @xmath41 , which allows @xmath0 in the range of 50 - 200 qubits .",
    "in this paper we present a purification process which uses concepts from information theory ( data compression ) and from thermodynamics ( heat bath , thermal relaxation ) , and which resolves the scaling problem .",
    "our `` information - theoretic '' purification is totally classical , hence the density matrices are treated as classical probability distributions , and no explicit quantum effects are taken into consideration . in earlier work , schulman and",
    "vazirani  @xcite already demonstrated novel compression - based ( and not pps - based ) alternative nmr computing , which does not suffer from the scaling problem .",
    "their scheme is based on information theoretic tools , and it leads to eq .",
    "( [ rho - f ] ) .",
    "however , the shannon bound on the purification ability prevents purifying any reasonable fraction of bits for small values of @xmath2 : @xmath42 ( see section  [ sec - bcs ] ) , meaning that thousands of bits are required in order to get one or a few purified bits ( with a reasonable probability of success ) .",
    "more explicitly , any entropy - preserving purification scheme can not currently be useful for nmr computation .",
    "we present here the first cooling scheme that goes beyond the shannon bound , an _ algorithmic cooling via polarization - heat - bath _ , or in short , _",
    "algorithmic cooling_. this cooling scheme , presented in section  [ sec - cool ] , purifies a large fraction of the bits initially set in a highly mixed state , and hence resolves the scaling problem .",
    "algorithmic cooling can bypass the shannon bound since it does not preserve entropy of the system , but removes entropy into a heat bath at a temperature @xmath43 . in order to pump entropy into the polarization heat bath ,",
    "algorithmic cooling demands the existence and the mutual processing of two types of qubits  @xcite : computation bits and bits which rapidly reach thermal relaxation ( rrtr bits ) .",
    "the computation bits are assumed to have a very long relaxation time , @xmath44 , and they are used for the computation , and the rrtr bits are assumed to have a much shorter relaxation time , @xmath45 , hence they rapidly get into thermal equilibrium with the environment ( a heat bath ) at a temperature of @xmath43 .",
    "since the rrtr bits are defined via their spin ( to be 0 or 1 ) , the heat bath is actually a spin - polarization heat bath . in our algorithmic cooling",
    ", a standard compression is performed on the computation bits , purifying ( cooling ) some while concentrating the entropy ( heating ) the others , to heat them above @xmath43",
    ". then the hotter bits are replaced with the rrtr bits , which are at the heat - bath temperature @xmath43 , resulting in an overall cooling of the system . repeating the process many times via a recursive algorithm , any final close - to - zero `` temperature '' ( that is , any final bias ) can in principle be achieved    algorithmic cooling provides a new challenge for the experimentalists , since such processing of two types of quantum bits ( two different spin systems ) is highly nontrivial . the currently existing experimental technologies , and the new `` experimental challenge '' of combining them in order to perform algorithmic cooling , are explained further in section  [ sec - exp ] .",
    "conclusions and some open questions for further research are provided in section  [ conc ] .",
    "let us briefly describe the purification problem from an information theoretic perspective .",
    "there exists a straightforward correspondence between the initial state of our @xmath0-qubit system , and a probability distribution of all @xmath0-bit binary strings , where the probability of each string @xmath16 is given by the term @xmath46 , the probability of the state @xmath15 in the mixed state @xmath47 described by eq.([rho - n - init ] ) . a  loss - less compression of a random binary string which is distributed as stated above has been well studied . in an optimal compression scheme , all the randomness ( and hence",
    ", the entropy ) of the bit string is transferred to @xmath48 bits , while with extremely high probability leaving @xmath36 bits in a known deterministic state , say the string @xmath49 .",
    "the entropy @xmath50 of the entire system is @xmath51 with @xmath52 measured in bits .",
    "any loss - less compression scheme preserves the entropy @xmath50 of the entire system , hence , one can apply shannon s source coding bound on @xmath36 to get @xmath53 $ ] .",
    "simple leading - order calculation shows that @xmath36 is bounded by ( approximately ) @xmath54 for small values of the initial bias @xmath2 , and in a practical compression scenario this can be achieved if a large enough string ( large enough @xmath0 ) is used .",
    "schulman and vazirani  @xcite were the first to use information theoretic tools for solving the scaling problem , and they also demonstrated how to get very close to the shannon bound , once @xmath0 is very large .",
    "we consider here a bias of @xmath55 and a bias of @xmath56 , and with these numbers , the schulman - vazirani compression can not be useful in practice , and can not help in achieving nmr computing with more than 20 qubits in the foreseeable future .",
    "in fact , any entropy - preserving purification scheme can not be useful for nmr computation in the near future .",
    "we suggest here an entropy - nonpreserving purification .",
    "our purification , algorithmic cooling , has some common properties with the entropy - preserving purification , such as the basic compression subroutine and the purification levels .",
    "these are therefore described in the following .",
    "the basic compression subroutine ( bcs ) is the simplest purification procedure used to convert a mixture with a particular bias @xmath57 , to one with a higher bias @xmath58 but fewer bits .",
    "we take pairs of bits and check if they are the same or different .",
    "one bit ( the `` supervisor '' ) retains the information of whether or not they were the same . if they were the same",
    ", then we keep the other bit ( the `` adjusted '' bit ) and we say it is purified .",
    "this way we increase the bias or _ push the bits to a higher purification level_. to realize this operation we use a controlled - not ( cnot ) transformation on a control bit ( @xmath59 ) and a target bit ( @xmath60 ) : @xmath61 , @xmath62 , @xmath63 , @xmath64 . after the transformation",
    ", the target bit holds the information regarding the identity of the initial states of the two bits , hence it is the supervisor bit .",
    "if the target bit is @xmath49 after the cnot operation between a pair of bits , then the pair had the same initial value and the control bit of the cnot ( the adjusted bit ) is retained since it is _ purified _ , otherwise they were different and the adjusted bit is thrown away since it got dirtier . in both cases ,",
    "the supervisor bit has a reduced bias ( increased entropy ) , hence it is thrown away .",
    "however , before being thrown away , the supervisor bit is used as a control bit for a swap operation : if it has the value `` 0 '' , then it swaps the corresponding adjusted bit at the head of the array ( say to the left ) , and if it is `` 1 '' it leaves the corresponding adjusted bit at its current place . in either cases the supervisor bit",
    "is then swapped to the right of the array .",
    "[ note that we use here a hybrid of english and symbol languages to describe an operation , such as swap or cut . ] as a result , at the end of the bcs all purified bits are at the first locations at the left side of the array , the dirty adjusted bits are at the center , and the supervisor bits are at the right side of the array .",
    "thus the dirty adjusted bits and the supervisor bits can be thrown away ( or just ignored ) .    starting a particular bcs on an even number @xmath65 of bits with a bias @xmath57 , at the end of the bcs there are ( on average ) @xmath66 purified bits with a new bias @xmath58 .",
    "the new length and new bias are calculated as follows .",
    "the probability of an adjusted bit being @xmath8 in the purified mixture , i.e. , @xmath67 , is obtained by a direct application of bayes law and is given by : @xmath68/2 = \\frac{p_{00}}{p_{00 } + p_{11 } }   = \\frac{(1+\\epsilon_j)^2 / 4}{(1+\\epsilon_j^2)/2}=     \\left[1+\\frac{2\\epsilon_j}{1+\\epsilon_j^2}\\right]/2 $ ] , where the @xmath46 are defined for a 2-bit string , so that @xmath69 , and @xmath70 .",
    "the new bias is @xmath71    the number of purified bits , @xmath72 , with the new bias @xmath58 is different on each molecule .",
    "since , for each pair , one member is kept with probability @xmath73 , and the other member is thrown away , the expected value of the length of the purified string is @xmath74 note that @xmath75 .",
    "the number of steps in one such bcs is calculated as follows .",
    "there are @xmath76 pairs . for each pair",
    "one cnot operation is performed .",
    "then , at most @xmath77 ( that is , less than @xmath78 ) operations of controlled - swaps and swaps are performed to conditionally put the adjusted bit in the first location at the left of the array , or leave it in its current location : first , a controlled - swap is performed with the supervisor bit as a control , the adjusted bit and the bit to its left as the target .",
    "then the swap operation is performed on the supervisor bit and the bit which is one location to its left .",
    "then a controlled - swap is again performed to conditionally swap the two bits at the left of the supervisor bit , and again the supervisor bit is swapped one location to the left . these swap and controlled - swap operations",
    "are then repeated until the adjusted bit is conditionally swapped all the way to the first location of the array [ the supervisor bit is at the third location in the array when this final controlled - swap is performed ] .",
    "finally , the supervisor bit is swapped till it reaches the previously used supervisor bit . at the end of these operations",
    "all used supervisors are at the right of the array , all purified adjusted bits are at the left of the array , and all the adjusted bits which got dirtier are to the right of the purified adjusted bits . considering controlled - swap , swap , and cnot as being a single operation each ( hence one time step each ) , we obtain a total of @xmath79 time steps for a single bcs operation .",
    "actually , even if each controlled - swap is considered as two time steps this bound still holds , once a more tight bound is calculated .",
    "a full compression scheme can be built by repeating the bcs several times , such that the first application , @xmath80 , purifies the bits from @xmath2 to @xmath81 , and the second purification , @xmath82 , acts only on bits that were already purified to @xmath81 , and purifies them further to @xmath83 .",
    "the @xmath84 application , @xmath85 , purifies bits from @xmath86 to @xmath57 .",
    "let the total number of bcs steps be @xmath87 and let the final bias achieved after @xmath88 applications of the compression be @xmath89 . by iterating equation ( [ eq - epsilon ] )",
    "we calculate directly @xmath90 when starting with @xmath91 or @xmath92 , and after @xmath93 application of bcs .",
    "then , using @xmath94 , and eq.([scale - well ] ) with @xmath36 purified bits , we estimate the number of bits @xmath36 for which a scalable pps technique can be obtained .",
    "the results are summarized in table 1 .",
    "the first interesting cases within the table are @xmath91 ; @xmath95 , or @xmath92 ; @xmath96 , allowing up to @xmath97 bits .",
    "we refer to these possibilities as a short term goal . as a long term goal , up to 200 bits",
    "can be obtained with @xmath91 ; @xmath98 , or @xmath92 ; @xmath99 .",
    "we consider cases in which the probability @xmath24 of the pure state is less than @xmath100 as unfeasible .",
    "when only the bcs is performed , the resulting average final length of the string is @xmath101 , so that the initial required number of bits , @xmath102 , is huge , but better compression schemes can be designed  @xcite , which approach the shannon s bound .",
    "however , for our purpose , which is to achieve a `` cooling via polarization - heat - bath '' algorithm , this simplest compression scheme is sufficient .",
    "in order to go _ beyond shannon s bound _ we assume that we have a thermal bath of partially polarized bits with a bias @xmath2 .",
    "more adequate to the physical system , we assume that we have rapidly - reaching - thermal - relaxation ( rrtr ) bits .",
    "these bits , by interaction with the environment at some constant temperature @xmath43 , rapidly return to the fixed initial distribution with bias of @xmath2 ( a reset operation ) .",
    "hence , the environment acts as a polarization heat bath .    in one application of the bcs on bits at a bias of @xmath57 , some fraction @xmath103 ( satisfying @xmath104 ) is purified to the next level , @xmath58 while the other bits have increased entropy .",
    "the supervisor bits are left with a reduced bias of @xmath105 , and the adjusted bits which failed to be purified are changed to a bias @xmath106 , that is , they now remain with full entropy .",
    "to make use of the heat bath for removing entropy , we swap a _",
    "dirtier _ bit with an rrtr bit at bias @xmath2 , and do not use this rrtr bit until it thermalizes back to @xmath2 .",
    "we refer to this operation as a single `` cooling '' operation  @xcite . in a nearest - neighbor gate array model , which is the appropriate model for nmr quantum computing",
    ", we can much improve the efficiency of the cooling by assuming that each computation bit has an rrtr bit as its neighbor ( imagine a ladder built of a line of computation bits and a line of rrtr bits ) .",
    "then @xmath107 cooling operations can be done in a single time step by replacing @xmath107 dirty bits with @xmath107 rrtr bits in parallel .    by applying many bcs steps and cooling steps in a recursive way",
    ", spins can be refrigerated to any temperature , via algorithmic cooling .",
    "for the sake of simplicity , we design an algorithm whereby bcs steps are always applied to blocks of exactly @xmath36 bits ( thus , @xmath36 is some pre - chosen even constant ) , and which finally provides @xmath36 bits at a bias @xmath108 .",
    "any bcs step is applied onto an array of @xmath36 bits at a bias @xmath57 , all purified bits are pushed to the head of the array ( say , to the left ) , all supervisor bits are swapped to the back of the array ( say , to the right ) , and all unpurified adjusted bits ( which actually became much dirtier ) are kept in their place .",
    "after one such bcs step , the @xmath109 bits at the right have bias of @xmath105 , the purified bits at the left have a bias @xmath58 , and to their right there are bits with a bias zero . note",
    "that the boundary between the purified adjusted bits and the dirtier adjusted bits is known only by its expected value @xmath110 . by repeating this set of operations @xmath111 times ( as explained in the following paragraphs ) , with @xmath112 , an expected value @xmath113 of bits is obtained , from which the first @xmath36 bits are defined as the output bits with @xmath58 , and the rest are ignored .",
    "if an additional purification is now performed , only these first @xmath36 bits are considered as the input for that purification .",
    "we refer to @xmath111 as the `` cooling depth '' of the cooling algorithm  @xcite .",
    "the algorithm is written recursively with purification - steps @xmath114 , where the @xmath115 purification step corresponds to purifying an initial array of @xmath116 bits into a set of @xmath36 bits at a bias level of @xmath57 , via repeated compression / cooling operations described as follows : in the purification step @xmath117 we wish to obtain @xmath36 bits with a bias @xmath2 . in order to achieve this",
    "we swap @xmath36 bits with @xmath36 rrtr bits , which results in @xmath36 cooling operations performed in parallel .",
    "the number of bits required for @xmath117 is @xmath118 . in one purification step @xmath119 ( with @xmath120 )",
    "we wish to obtain @xmath36 bits with a bias @xmath58 . in order to achieve this goal",
    "we apply @xmath111 purification steps @xmath121 , each followed by a bcs applied to exactly @xmath36 bits at a bias @xmath122 .",
    "first , @xmath114 is applied onto @xmath116 bits , yielding an output of @xmath36 bits at a bias @xmath57 .",
    "a bcs is then applied onto these bits , yielding a string of expected length @xmath123 bits purified to a bias @xmath58 and pushed all the way to the left . at the end of that bcs",
    "all the @xmath109 supervisor bits are located at positions @xmath124 until @xmath36 .",
    "then @xmath114 is applied again onto an array of @xmath116 bits , starting at position @xmath124 .",
    "this time all bcs operations _ within _ this second application of @xmath114 push the bits to the relative first location of that @xmath114 array which is the location @xmath125 of the entire string .",
    "[ in the case of @xmath126 , of course , there are no bcs operations within @xmath117 .",
    "] at the end of that second @xmath114 application , a bcs is applied to @xmath36 bits at a bias @xmath57 ( at locations @xmath124 till @xmath127 ) , purifying them to @xmath58 . the purified bits are pushed _ all the way _ to the left , leading to a string of expected length @xmath128 . at the end of that bcs",
    "all the @xmath109 supervisor bits are located at positions @xmath129 till @xmath130 .",
    "then @xmath114 is again applied onto an array of @xmath116 bits , starting at position @xmath129 . all bcs operations _ within _ this third application of @xmath114 push the bits to the relative first location of that @xmath114 array ( the location @xmath131 of the entire string ) . at the end of that third @xmath114 application ,",
    "a bcs is applied to @xmath36 bits at a bias @xmath57 ( at locations @xmath129 till @xmath132 ) , purifying them to @xmath58 , and the purified bits are pushed _ all the way _ to the left .",
    "this combined @xmath114-and - bcs is repeated @xmath111 times , yielding @xmath133 bits purified to @xmath58 .",
    "for @xmath112 we are promised that @xmath134 , and a cut operation , @xmath135 , defines the first @xmath36 bits to be the output of @xmath119 .",
    "the total number of bits used in @xmath119 is @xmath136 bits , where the @xmath116 bits are the ones used at the last @xmath114 step , and the @xmath137 bits are the ones previously kept .",
    "the output of @xmath119 is defined as the first @xmath36 bits , and in case @xmath138 is to be performed , these @xmath36 bits are its input .",
    "let the total number of operations applied at the @xmath115 purification step , @xmath114 , be represented as @xmath139 .",
    "note that @xmath140 , meaning that @xmath36 bits are swapped with rrtr bits in parallel .",
    "each application of the bcs has a time complexity smaller than @xmath141 for a near - neighbor connected model  ( [ time - steps - bcs ] ) .",
    "when the @xmath142 cooling is done ( with @xmath143 ) the number of additional steps required to ( control-)swap the adjusted bit at the top of the array is less than @xmath144 .",
    "thus we get @xmath145 $ ] . hence , for all @xmath146 , @xmath147 =     \\frac{\\ell ( \\ell + 1)}{2 } m^2 + \\ell t_{j } .\\ ] ]    the purification steps @xmath148 and @xmath149 can be obtained by following the general description of @xmath119 .",
    "for clarity , @xmath148 is described in figure  1 , @xmath149 is described in figure  2 in appendix  [ m-1andm-2 ] , and both @xmath148 and @xmath149 are described in words in that appendix . for the entire protocol",
    "we choose @xmath150 , and perform @xmath151 starting with @xmath152 bits , and we end up with @xmath36 bits .    to emphasize the recursive structure of this algorithm we use the following notations .",
    "[ @xmath153the bcs procedure purifying from @xmath154 to @xmath155 ( followed by moving the purified bits to the relevant starting point ) .",
    "[ @xmath156swap @xmath36 bits with the rrtr .",
    "[ @xmath157cut , keep the first @xmath36 bits from the starting point of the sub - array of the bits with a bias @xmath57 .",
    "then , @xmath158 , and for @xmath159 @xmath160 is the recursive formula describing our algorithm .",
    "a full cooling algorithm is @xmath151 and it is performed starting at location @xmath161 .",
    "a pseudo - code for the complete algorithm is shown in figure  [ fig3 ] . for any choice of @xmath162",
    ", one can calculate the required ( minimal ) @xmath88 such that @xmath163 , and then @xmath36 bits ( cooled as desired ) are obtained by calling the * procedure * cooling@xmath164 , where @xmath165 .",
    "we actually use @xmath166 in the rest of the paper ( although @xmath167 is sufficient when the block s size @xmath36 is very large ) in order to make sure that the probability of a successful process does not become too small .",
    "[ the analysis done in  @xcite considers the case in which @xmath36 goes to infinity , but the analysis does not consider the probability of success of the purification in the case where @xmath36 does not go asymptotically to infinity ; however , in order to motivate experiments in this direction , one must consider finite , and not too large blocks , with a size that shall potentially be accessible to experimentalists in the near future . in our algorithm , the case of @xmath167 does not provide a reasonable probability of success for the cooling process , but @xmath168 does ] .",
    "we now calculate @xmath169 , the number of bits we must start with in order to get @xmath36 purified bits with bias @xmath108 .",
    "we have seen that @xmath118 and @xmath170 , leading to @xmath171 , and in particular @xmath172 thus , to obtain @xmath36 bits we start with @xmath173 bits where @xmath174 is a constant depending on the purity we wish to achieve ( that is , on @xmath150 ) and on the probability of success we wish to achieve ( that is , on @xmath111 ) . for reasonable choices , @xmath88 in the range @xmath175 and @xmath111 in the range @xmath176",
    ", we see that @xmath59 is in the range @xmath177 . to compare with the shannon s bound , where the constant goes as @xmath178 , one can show that here @xmath59 is a function of @xmath179 .    as we have seen in section  [ cool - algo ]",
    ", the total number of operations applied at the @xmath115 purification step , @xmath114 , satisfies @xmath180 . writing @xmath181/2",
    "$ ] , the recursive formula leads to @xmath182/[\\ell - 1 ] $ ] .",
    "after some manipulations we get @xmath183 this bound is not tight and a tighter bound can be obtained .",
    "it is also important to mention that in a standard gate - array model ( and even in a `` qubits in a cavity '' model ) , in which swaps are given almost for free , an order of @xmath36 instead of @xmath141 is obtained .",
    "let the relaxation time @xmath184 of the computation bits be called @xmath185 , and the relaxation time @xmath186 for the rrtr bits be called @xmath187 .",
    "note that the dephasing time , @xmath188 , of the computation bits is irrelevant for our algorithm , and plays a role only _",
    "after _ the cooling is done .    with the short - term goal in mind",
    "we see that @xmath189 can be achieved ( for @xmath168 ) with @xmath91 , @xmath190 , @xmath191 steps , and @xmath192 bits , or with @xmath92 , @xmath193 , @xmath194 steps , and @xmath195 bits .",
    "increasing @xmath36 to 50 only multiplies the initial length by @xmath196 , and multiplies the time steps by @xmath197 .",
    "thus , this more interesting goal can be achieved with @xmath91 , @xmath190 , @xmath198 steps , and @xmath199 bits , or with @xmath92 , @xmath193 , @xmath200 steps , and @xmath201 bits .    concentrating on the case of @xmath193 and @xmath92 ,",
    "let us calculate explicitly the timing demands . for @xmath189 bits",
    ", we see that the switching time @xmath202 must satisfy @xmath203 in order to allow completion of the purification before the system spontaneously relaxes .",
    "then , with @xmath204 time steps for each bcs operation , the relaxation time for the rrtr bits must satisfy @xmath205 , if we want the rrtr bits to be ready when we need them the next time . as result , a ratio of @xmath206 is required in that case .",
    "the more interesting case of @xmath97 demands @xmath207 , @xmath208 , and @xmath206 .",
    "note that choosing @xmath209 increases the size by a factor of @xmath210 , and the time by a factor of @xmath211 .",
    "we shall discuss the possibility of obtaining these numbers in an actual experiment in the next section .      since the cooling algorithm is probabilistic , and so far we have considered only the _ expected _ number of purified bits , we need to make sure that in practice the actual number of bits obtained is larger than @xmath36 with a high probability .",
    "this is especially important when one wants to deal with relatively small numbers of bits .",
    "we recall that the random variable @xmath212 is the number of bits purified to @xmath57 , after the @xmath213 round of purification step@xmath214 each followed by @xmath215 .",
    "hence , prior to the cut @xmath216 we have @xmath217 bits with bias @xmath57 , where the expected value @xmath218 , and we use @xmath219 . out of these bits we keep only the first @xmath36 qubits , i.e. , we keep at most a fraction @xmath220 of the average length of the string of desired qubits .",
    "recall also that @xmath217 is a sum of independent bernoulli random variables , and hence one can apply a suitable form of the strong law of large numbers to determine the probability of success , i.e. , the probability that @xmath221 .",
    "the details of applying a law of large numbers are given in appendix  [ error - probability ] .",
    "here we only state the result .",
    "chernoff s bound implies that the probability of _ failing _ to get at least @xmath36 bits with bias @xmath57 is @xmath222 \\le \\exp\\left(-\\frac{1}{2 } \\left(1- \\frac{4}{\\ell}\\right)^2 \\frac{\\ell}{4 } m\\right)= \\exp\\left(- \\frac{(\\ell-4)^2}{8\\ell } m\\right).\\ ] ] for the probability of success of the entire algorithm we have the following conservative lower bound @xmath223",
    "\\ge \\left[1-\\exp\\left(-\\frac{(\\ell-4)^2}{8\\ell}m\\right)\\right]^ { ( \\ell^{j_f}-1)/(\\ell-1 ) } .\\ ] ]    the probability of success is given here for several interesting cases with @xmath193 ( and remember that the probability of success increases when @xmath36 is increased ) : for @xmath97 and @xmath224 we get @xmath225    > 0.51 $ ] . for @xmath97 and @xmath168",
    "we get @xmath225    > 2.85 \\times 10^{-5}$ ] .",
    "this case is of most interest due to the reasonable time scales .",
    "therefore , it is important to mention here that our bound is very conservative since we demanded success in _ all _ truncations ( see details in appendix  [ error - probability ] ) , and this is not really required in practice . for instance , if only @xmath226 bits are purified to @xmath81 in one round of purification , but @xmath36 bits are purified in the other @xmath227 rounds , then the probability of having @xmath36 bits at the resulting @xmath149 process is not zero , but actually very high .",
    "thus , our lower bound presented above should not discourage the belief in the success of this algorithm , since a much higher probability of success is actually expected .",
    "the spin - refrigeration algorithm relies on the ability to combine rapidly relaxing qubits and slowly relaxing qubits in a single system .",
    "t1 lifetimes of atomic spins in molecules can vary greatly , depending on the degree of isolation from their local environment .",
    "nuclei that are positioned close to unpaired electrons , for example , can couple strongly to the spin of these electrons and decay quickly .",
    "identical nuclei that are far removed from such an environment can have extremely long lifetimes .",
    "many examples of t1 varying over three orders of magnitude , from seconds to milliseconds , exist in the literature .",
    "one example is the @xmath228c nuclear relaxation rate , which changes by three orders of magnitude depending on whether the @xmath228c atom is part of a phenoxyl or triphenylmethyl radical  @xcite . by combining these different chemical environments in one single molecule , and furthermore , by making use of different types of nuclei , one could hope to achieve even a ratio of @xmath229 .",
    "another possible choice is to combine the use of nuclear spins and electron spins .",
    "the coupling between nuclei and electrons that is needed to perform the desired swap operations , has been well studied in many systems by the electron - nuclear double resonance ( endor ) technique@xcite .",
    "the electron spins which typically interact strongly with the environment could function as the short lived qubits , and the nuclei as the qubits that are to be used for the computation .",
    "in fact , the relaxation rate of electrons is commonly three orders of magnitude faster than the relaxation rate of nuclei in the same system , and another order of magnitude seems to be easy to obtain .",
    "note also that the more advanced triple resonance technique can yield significantly better results than the endor technique@xcite .",
    "this second choice of strategy has another advantage  it allows initiation of the the process by swaping the electron spins with the nuclear spins , thus getting much closer to achieving the desired initial bias , @xmath92 , which is vital for allowing reasonable time - scales for the process .",
    "if one achieves @xmath230 , and @xmath231 , then a switching time of @xmath232 allows our algorithm to yield 20-qubit computers .",
    "if one achieves @xmath233 , and @xmath234 , then a switching time of @xmath232 allows our algorithm to yield 50-qubit computers .",
    "in this paper we suggested `` algorithmic cooling via polarization heat bath '' which removes entropy into the environment , and allows compression beyond the shannon s bound .",
    "the algorithmic cooling can solve the scaling problem of nmr quantum computers , and can also be used to refrigerate spins to very low temperatures .",
    "we explicitly showed how , using swap operations between electron spins and nuclear spins , one can obtain a 50-qubit nmr quantum computer , starting with 350 qubits , and using feasible time scales .",
    "interestingly , the interaction with the environment , usually a most undesired interaction , is used here to our benefit .",
    "some open questions which are left for further research : ( i )  are there better and simpler cooling algorithms ?",
    "( ii )  can the above process be performed in a ( classical ) fault - tolerant way ? ( iii )  can the process be much improved by using more sophisticated compression algorithms ? ( iv )  can the process be combined with a process which resolves the addressing problem ? ( v )  can one achieve sufficiently different thermal relaxation times for the two different spin systems ? ( vi )  can the electron - nuclear spin swaps be implemented on the same systems which are used for quantum computing ? finally , the summarizing question is : ( vii )  how far are we from demonstrating experimental algorithmic cooling , and how far are we from using it to yield 20-qubit , 30-qubit , or even 50-qubit quantum computing devices ?",
    "00 n. a. gershenfeld , i. l. chuang , _ science _ ,",
    "* 275 * , 350 ( 1997 ) .",
    "d. g. cory , a. f. fahmy , t. f. havel , _ proc .",
    "* 94 * , 1634 ( 1997 ) .",
    "j. a. jones , m. mosca , r. h. hansen , _ nature _ , * 393 * , 344 ( 1998 ) .",
    "e.  knill , r.  laflamme , r.  martinez , c .- h .",
    "tseng , _ nature _ , * 404 * , 368 ( 2000 ) .    p. o. boykin , t. mor , v. roychowdhury , f. vatan , `` algorithms on ensemble quantum computers , '' ( lanl e - print , quant - ph/9907067,1999 )",
    ".    p. shor , _ siam j. computing _ , * 26 * , 1484 ( 1997 ) .",
    "l. grover , in _ proceedings of 28th acm symposium on theory of computing _ ( 1996 ) , pp .",
    ".    w. s. warren , _ science _ , * 277 * , 1688 ( 1997 ) .",
    "d. divincenzo , _ nature _ , * 393 * , 113 ( 1998 ) .",
    "s.  l.  braunstein _ et al .",
    "_ , _ phys .",
    "_ , * 83 * , 1054 ( 1999 ) .",
    "c.  s.  yannoni _ et al .",
    "_ , _ appl .",
    "lett . _ * 75 * , 3563 ( 1999 ) .",
    "h.  kurreck , b.  kirste , w.  lubitz , in _ methods in stereochemical analysis _ , a.  p.  marchand , ed .",
    "( vch publishers , inc . , 1988 ) .",
    "individual addressing of qubits requires a slightly different bias for each one , which is easily achievable in practice",
    ".    l. j. schulman , u. vazirani , in _ proceedings of 31st acm symposium on theory of computing _ ( 1999 ) , pp .",
    "322 - 329 .",
    "we refer to these qubits as bits since no quantum effects are used in the cooling process .",
    "an algorithm with @xmath111 replaced by @xmath235 ( different numbers of repetitions , depending on the bias - level @xmath146 ) could have some advantages , but will not be as easy to analyze .",
    "actually , adjusted bits which failed to purify are always dirtier than the rrtr bits , but supervisor bits are dirtier only as long as @xmath236 .",
    "therefore the _ cut _ of the adjusted bits which failed to purify , @xmath237 ( which is explained in the next subsection ) is the main `` engine '' which cools the nmr system at all stages of the protocol .",
    "k.  mobius , m. plato , w.  lubitz , _ physics reports _ , * 87 * , 171 ( 1982 ) .",
    "[ fig3 ]    .feasibility of running an @xmath0-qubit nmr computer , when the polarization bias is improved to @xmath238 , prior to using the pps technique .",
    "[ cols=\"^,^,^,^,^,^,^ \" , ]",
    "to illustrate the pps scheme , let us first consider the case of @xmath239 qubits , with an arbitrary bias @xmath29 .",
    "the initial state is given by equation ( [ initial - state ] ) [ with @xmath29 replacing @xmath2 ] , @xmath241 where the second form is already in the form of a pps , @xmath242 { \\cal i } $ ] .",
    "let us now consider the case of @xmath243 qubits . since the initial state of each qubit is given by equation ( [ init-1b - state ] ) , the density matrix of the initial thermal - equilibrium state of the two - qubit system can be represented as : @xmath244 for the purpose of understanding the pps it is legitimate to ignore the difference between the @xmath29 of the two spins , but in practice they must differ a bit , since the only way to address one of them and not the other is by using accurate fields such that only one level splitting is on resonance with that field .    for the purposes of generating the pps , it is instructive to represent the initial state as @xmath245 where @xmath246 , and @xmath16 is being a binary string .",
    "the coefficient of each @xmath247 , say @xmath46 , is the probability of obtaining the string @xmath16 in a measurement ( in the computation basis ) of the two qubits .",
    "thus , @xmath248 , @xmath249 , and @xmath250 . in order to generate a pseudo - pure state , let us perform one of the following three transformations : @xmath251 ( the identity ) , @xmath252 with equal probability , so that each molecule ( each computer ) is subjected to one of the above - mentioned transformations .",
    "this transformation can be carried out in an experiment by applying different laser pulses to different portions of the liquid , or by splitting the liquid into three portions , applying one of the transformations to each part , and mixing the parts together .",
    "these permutations map @xmath253 to itself , and completely mix all the other states . as a result ,",
    "the density matrix of the final state becomes : @xmath254 so that finally , @xmath255 is the probability of having the pure state .",
    "note that @xmath24 is not @xmath256 since the completely mixed state also contains a contribution from @xmath256 .",
    "the above procedure for mixing can be directly generalized to a system comprising @xmath0 qubits .",
    "the density matrix for the final state is : @xmath257 the probability of the @xmath0 bit pure state @xmath258 is @xmath259 which is @xmath260 for small @xmath29 , hence exponentially small with @xmath0 .",
    "obviously , such a signal is highly obscured by the completely mixed state , leading to an exponentially small signal - to - noise ratio , and hence , to the scaling problem .",
    "however , it is clear now that information is lost in the process , due to the mixing step : in order to obtain the pps we need to `` forget '' the transformation done on each computer , and consider only the average result .    in order to clearly see the inherent loss of information in the mixing process ,",
    "consider an ensemble computer in its initial state , @xmath47 .",
    "we note that one can perform any single qubit operation ( and measure ) on any of the @xmath0 qubits _ without _ any purification .",
    "for example , if one were to measure any individual qubit in the ensemble when it is in its initial state , then one would observe a @xmath8 , irrespective of how large @xmath0 is ; similarly , one can perform single qubit rotations and then make measurements without any purification of the initial state .",
    "the same is not true if the rotation is applied to the pps @xmath261 ; then the completely mixed state dominates , and the exponentially small signal is obscured .",
    "unfortunately , performing 2-qubit computation ( or more ) with mixed states is not a realistic choice . to summarize , the pps technique _",
    "causes _ the problem of scaling , by losing information _ on purpose_.",
    "in the purification step @xmath148 we wish to obtain @xmath36 bits with a bias @xmath81 . in order to achieve this",
    "we apply @xmath111 cooling operations ( swaps with rrtr ) , each followed by repeated applications of the bcs ( acting on bits with @xmath2 bias ) .",
    "this is done as follows : the @xmath36 bits at the head of the array ( positions 1 to @xmath36 ) are swapped with rrtr to yield @xmath2 .",
    "then , a bcs is applied onto them , resulting in having @xmath262 purified bits at the left , unpurified adjusted bits next to them , and finally , the supervisor bits at the positions @xmath263 to @xmath36 ( the right locations of the @xmath36-bit - array ) .",
    "then a similar set of operations is applied to an array of @xmath36 bits at locations @xmath125 to @xmath130 .",
    "this array includes all the supervisor bits of the previous operation plus @xmath109 more bits .",
    "first , these @xmath36 bits are reset to @xmath2 .",
    "when a bcs is applied onto these @xmath36 bits , all purified bits are pushed to the left , but now it is a push to the head of the entire @xmath81-bias string , all unpurified adjusted bits are kept in their place and all supervisor bits are pushed to the right of the @xmath36-bit array . pushing the purified bits _ all the way _ to the left is vital , since we want to be certain that no unpurified bit remains among the purified bits .",
    "let us denote the number of purified bits at the end of this step @xmath264 where the superscript is added to indicate it is a count done after a second swap with rrtr .",
    "[ thus , the number of bits after the first swap with rrtr is renamed @xmath265 . ] the same set of operations is repeated @xmath111 times , and at its end the entire array used for @xmath148 contains @xmath266 bits , where the @xmath36 bits are the ones used at the last compression , and the @xmath137 bits are the ones previously kept . of these @xmath267 bits , @xmath268",
    "purified bits are at the left , and @xmath109 dirty supervisor bits are at the right ( remaining from the last application of bcs ) .",
    "the expectation value for the length of the purified bits satisfies @xmath269 .",
    "finally , we define the output of this purification step to be the first @xmath36 bits at the left . then , for @xmath112 , @xmath270 .",
    "in the purification step @xmath149 we wish to obtain @xmath36 bits with a bias @xmath83 . in order to achieve this goal , we apply @xmath111 purification steps @xmath148 , each followed by a bcs applied to exactly @xmath36 bits at a bias @xmath81 : first , @xmath148 is applied onto @xmath267 bits yielding an output of @xmath36 bits at a bias @xmath81 , then a bcs is applied onto these bits yielding a string of expected length @xmath271 bits purified to a bias @xmath83 and pushed to the left .",
    "then @xmath148 is applied again to an array of @xmath267 bits , starting at the location @xmath124 .",
    "this time all bcs operations _ within _ @xmath148",
    "push the bits to the first location of that array ( the location @xmath125 of the entire string ) . at the end of the second @xmath148 application ,",
    "a bcs is applied to @xmath36 bits at a bias @xmath81 purifying them to @xmath83 , and the purified bits are pushed all the way to the left . then @xmath148 is applied a third time to an array of @xmath267 bits , starting at location @xmath129 . this time",
    "all bcs operations _ within _ @xmath148 push the bits to the first location of the array ( the location @xmath131 of the entire string ) . at the end of the third @xmath148 application , a bcs is applied to @xmath36 bits at a bias @xmath81 purifying them to @xmath83 , and the purified bits are pushed all the way to the left . this combined @xmath148-and - bcs is repeated @xmath111 times , yielding @xmath272 bits purified to @xmath83 .",
    "the total number of bits used in @xmath149 is @xmath273 bits , where the @xmath267 bits are the ones used at the last @xmath148 step , and the @xmath137 bits are the ones previously kept .",
    "the output of @xmath149 is defined as the first @xmath36 bits .",
    "we utilize the following form of the _ chernoff s bound _ : if @xmath274 are @xmath60 independent random variables with @xmath275 and @xmath276 , then for @xmath277 we have @xmath278 < \\exp\\left(-\\frac{a^2 tp}{2}\\right ) . \\label{chernoff}\\ ] ] in our case , the number of trials @xmath60 , is @xmath279 . the probability of keeping a bit ( so that @xmath280 ) is @xmath281 which is greater than @xmath282 .",
    "we set @xmath283 so that @xmath284 .",
    "therefore , @xmath285 .",
    "now , using the fact that @xmath286 , chernoff s bound ( [ chernoff ] ) implies that the probability to _ fail _ to get at least @xmath36 bits with bias @xmath57 is @xmath222 < \\exp\\left(-\\frac{1}{2 } \\left(1- \\frac{4}{\\ell}\\right)^2 \\frac{\\ell}{4 } m\\right)= \\exp\\left(- \\frac{(\\ell-4)^2}{8\\ell } m\\right).\\ ] ]    in the complete algorithm that runs for @xmath93 purification steps , we need to calculate the total number of times the above  mentioned hard truncations are performed and demand success in all of them . in other words , to get @xmath217 purified bits at purification step @xmath114 ( from which @xmath36 bits will be taken via another truncation ) we first need to successfully provide @xmath111 times @xmath36bit strings with bias @xmath86 .",
    "the recursive nature of our algorithm demands the successful purification of all @xmath36bit strings with smaller biases @xmath287 , for all @xmath288 , in order to achieve this goal for the @xmath114 step .",
    "let @xmath289 be the number of all @xmath36bit strings with biases smaller than @xmath57 , needed at the @xmath115 step .",
    "recall that the @xmath36 bits at @xmath2 are given with certainty , so only one successful truncation is required to get @xmath81 .",
    "then @xmath290 hence , @xmath291 , and @xmath292 for the probability of success of the entire algorithm we demand success in all the @xmath293 truncation processes @xmath294    & > &   \\left ( 1-\\pr\\left[{\\cal l}^\\ell_j",
    "< m \\right]\\right)^{c_{j_f } } \\\\    & > & \\left(1-\\exp\\left(-\\frac{(\\ell-4)^2}{8\\ell}m\\right)\\right)^ {   ( \\ell^{j_f}-1)/(\\ell-1 ) } .   \\end{aligned}\\ ] ]"
  ],
  "abstract_text": [
    "<S> we present here _ algorithmic cooling ( via polarization - heat - bath)_a powerful method for obtaining a large number of highly polarized spins in liquid nuclear - spin systems at finite temperature . </S>",
    "<S> given that spin - half states represent ( quantum ) bits , algorithmic cooling cleans dirty bits _ beyond _ the shannon s bound on data compression , by employing a set of rapidly thermal - relaxing bits . </S>",
    "<S> such auxiliary bits could be implemented using spins that rapidly get into thermal equilibrium with the environment , e.g. , electron spins .    </S>",
    "<S> cooling spins to a very low temperature _ without _ cooling the environment could lead to a breakthrough in nuclear magnetic resonance experiments , and our `` spin - refrigerating '' method suggests that this is possible .    </S>",
    "<S> the scaling of nmr ensemble computers is probably the main obstacle to building useful quantum computing devices , and our spin - refrigerating method suggests that this problem can be resolved . </S>"
  ]
}
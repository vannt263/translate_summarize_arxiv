{
  "article_text": [
    "in the early days of string theory , one way to obtain amplitudes for the scattering of an arbitrary number of strings was by using the factorization property , what means that the scattering amplitude of @xmath0 strings may be interpreted as the scattering amplitudes of a smaller number of strings sewn together .",
    "this made it possible to build the @xmath0 string scattering amplitude by knowing the expression for three string scattering amplitudes .",
    "even though they were very ingenious and successful , those calculations did nt take into account the ghost structure of the vertices , and that is what is done here .    in @xcite",
    ", it was shown how to sew tree vertices without ghosts using the group theoretic approach to string theory @xcite in order to obtain a new , composite vertex .",
    "following the same procedure , we shall calculate the scattering amplitude of @xmath0 strings taking account the ghost structure .",
    "we shall start with a short review of how to sew tree vertices without ghosts .",
    "what we must do is sew two legs of two vertices , one leg from each vertex .",
    "what we have in the beginning are two vertices @xmath1 and @xmath2 with @xmath3 and @xmath4 legs , respectively ( figure 1 ) .",
    "0.4 cm        figure 1 : individual vertices",
    ".    0.2 cm    we now sew leg @xmath5 from @xmath1 with the adjoint of leg @xmath6 from @xmath2 .",
    "what we have now is the substitution of the two sewn legs by a propagator ( figure 2 ) . when this propagator is written in parametric form , it is an integration of one of the variables ( in order to cancel one spurious degree of freedom ) and a conformal factor @xmath7 which contains terms of @xmath8 s acting on leg @xmath5 only .",
    "0.4 cm        figure 2 : sewn vertices .",
    "0.2 cm    so the resulting vertex @xmath9 ( called the _ composite vertex _ ) has the generic form @xmath10 where the hermitian conjugate of @xmath2 is for the sewn leg @xmath6 only and @xmath11 where @xmath12 is a suitable variable . in what follows , we shall often write @xmath7 instead of @xmath13 , calling attention to the integration when necessary .    when the two vertices are sewn together , we identify legs @xmath5 and",
    "@xmath6 . we also identify the koba - nielsen variable @xmath14 with one of the koba - nielsen variables of vertex @xmath15 , and the koba - nielsen variable @xmath16 we identify with one of the koba - nielsen variables of vertex @xmath1 . in @xcite ,",
    "this identification is made in the following way : @xmath14 may be identified with @xmath17 or @xmath18 , and @xmath16 may be identified with @xmath19 or @xmath20 .",
    "so there are four possible combinations : a ) @xmath21 ; b ) @xmath22 ; c ) @xmath23 ; d ) @xmath24 .",
    "the two original vertices satisfy some overlap identities and so shall do the composite vertex .",
    "one particular overlap identity is given by considering the operator @xmath25 with conformal weight @xmath26 defined by @xcite @xmath27 where @xmath28 are bosonic oscillators with commutation relations @xmath29=-\\eta ^{\\mu \\nu } \\delta ^{ij}\\delta _ { n ,- m}\\ , \\",
    "n , m\\neq 0\\ , \\\\ \\label{eq4.3 }   & & [ \\alpha ^{\\mu i}_0,a^{\\nu j}_n]=0\\ , \\",
    "\\forall n\\ .\\end{aligned}\\ ] ] the overlap identity is given by @xmath30 \\ .\\ ] ]    because we are considering the adjoint of leg @xmath6 in vertex @xmath2 , we must see what the adjoint of these overlap identities are .",
    "first , by the definition of @xmath25 , we have that @xmath31 so , the adjoint of the overlap equations is given by @xmath32 v^\\dagger = 0\\ .\\ ] ]    we now take the overlap identity considering the effects of the operator @xmath33 on the vertex @xmath1 on a generic leg @xmath34 and on leg @xmath5 or @xmath6 . ]",
    "( figure 3 ) :    0.7 cm     figure 3 : overlap identity for @xmath1 .",
    "@xmath35 = 0\\ .\\ ] ]    0.2 cm we may then insert the unit operator @xmath36 and multiply by @xmath7 without altering the result : @xmath37 { \\cal p}\\ .\\ ] ]    since the conformal operator @xmath7 acts only on leg @xmath5 , it will have no effect on @xmath33 . in order to compute the effect of @xmath7 on @xmath38",
    ", we must know that , for a conformal transformation @xmath39 acting on a conformal operator @xmath40 of weight @xmath41 , @xmath42 since @xmath38 has conformal weight @xmath26 , we have @xmath43 and ( figure 4 )    0.7 cm     figure 4 : overlap identity for @xmath44 .",
    "@xmath45 = 0\\ .\\ ] ]    0.2 cm    the second term in the expression above is facing now leg @xmath6 of vertex @xmath15 , or best , its hermitian conjugate . considering that the hermitian conjugate of @xmath25 ( given by ( [ eq4.1a ] ) ) , we then have the following overlap identity between legs @xmath34 and @xmath6 : @xmath46 = 0\\ .\\ ] ] we can then make a cycling transformation in order to obtain the correct factor for an arbitrary leg @xmath47 of vertex @xmath15 .",
    "the only term that will be affected is the term depending on leg @xmath6 : @xmath48 doing this , the overlap identity for the composite vertex @xmath9 ( figure 5 ) can be written as    3.1 cm     figure 5 : overlap identity for @xmath9 .",
    "@xmath49 = 0\\ , \\ ] ]    0.2 cm which is the overlap equation between two arbitrary legs @xmath34 and @xmath50 of the composite vertex @xmath9 .",
    "but the overlap identity for the composite vertex , since none of legs @xmath34 or @xmath50 involves the propagator , must be given by @xmath51 = 0\\ ] ] and so in order for the equation we have obtained for the overlap of the composite vertex @xmath9 to be true we must have @xmath52 which implies that the propagator is given by @xmath53    in order to give an explicit expression for the propagator , we will now choose @xmath54 to be of the form @xmath55 this choice is called the `` simple cycling '' @xcite and it is the one that simplifies our calculations the most . in this choice , the propagator is given by @xmath56 or in terms of the @xmath57 operators ] ] , @xmath58    this form works for all choices for the composite vertex discussed before . ] .",
    "the true propagator is given by expression ( [ eq4.8 ] ) integrated over a suitable variable .",
    "choosing this variable to be @xmath59 , we then have @xmath60    before going any further , we must discuss another aspect of the theory that depends on the particular way in which the legs are identified during the sewing procedure .",
    "let us consider the more general case of an arbitrary cycling @xmath61 .",
    "this kind of cycling may depend on other coordinates that are not @xmath62 . as an example , let us suppose that we are identifying coordinate @xmath14 of leg @xmath5 with coordinate @xmath17 of vertex @xmath15 and coordinate @xmath16 of leg @xmath6 with coordinate @xmath17 of vertex @xmath1 .",
    "the overlap identity between legs @xmath34 and @xmath63 on vertex @xmath1 is @xmath64\\ ] ] where we are calling @xmath65 the cycling transformation on leg @xmath50 @xmath66 .",
    "these cycling transformations may depend on the other legs .",
    "as an example when this happens , we take another choice of the cycling transformations @xmath54 that is not as trivial as ( [ eq4.7 ] ) but gives a simpler formula for the propagator .",
    "this choice is given by @xcite @xcite @xmath67 which is the transformation that takes @xmath68 , @xmath62 and @xmath69 to @xmath70 , 0 and 1 , respectively .",
    "its inverse is given by @xmath71    in the case of the cycling given by ( [ eq4.10 ] ) , the cycling for leg @xmath63 will depend on leg @xmath5 , which is not present in the composite vertex . on this vertex , the overlap between leg @xmath63 and an arbitrary leg @xmath50 reads @xmath72 \\ .\\ ] ] this overlap equation involves terms that depend on leg @xmath5 , which is non - existent in the composite vertex @xmath9 .",
    "the correct overlaps should be given by @xmath73 \\",
    ", \\ ] ] where the cycling transformations @xmath74 and @xmath75 do not depend on legs @xmath5 or @xmath6 .",
    "so , in order to restore the correct cycling transformation for the composite vertex , a conformal transformation must be made on the cycling transformations on vertex @xmath1 .",
    "these are given by @xmath76 where @xmath77 in this definition , we consider implicit that the transformation @xmath78 since the conformal transformations on leg @xmath5 will not be part of the composite vertex and so need not be modified .",
    "considering the general case , we have that the overlap equation for @xmath1 ( figure 6 ) that will lead to the correct composite vertex is now obtained from the original overlap    0.8 cm     figure 6 : overlap identity for @xmath1 .    @xmath79 = 0\\ , \\ ] ]    where @xmath80 and @xmath81 . by inserting conformal transformation ( [ eq4.11 ] ) ,",
    "we obtain ( figure 7 )    0.8 cm     figure 7 : overlap identity for @xmath82 .",
    "@xmath83 = 0\\ .\\ ] ]    inserting now the propagator , we obtain ( figure 8)    0.8 cm     figure 8 : overlap identity for @xmath84 .",
    "@xmath85 = 0\\ ] ]    and we expect the composite vertex to have a different form ( given shortly ) than in ( [ eq4.1 ] ) in order to amount for the contributions of the conformal transformations .",
    "the second term of the overlap is now facing leg @xmath6 of vertex @xmath15 so that we have the following overlap between legs @xmath34 and @xmath6 : @xmath86 = 0\\ .\\ ] ] we are now facing the conformal transformation @xmath87 , @xmath88 may depend on the variable @xmath14 .",
    "] , defined by @xmath89 which is necessary in order to change @xmath90 . introducing this transformation",
    "we obtain ( figure 9 )    0.8 cm     figure 9 : overlap identity for @xmath91 .",
    "@xmath92 = 0\\ .\\ ] ]    making a cycling transformation from leg @xmath6 to leg @xmath50 , we then obtain ( figure 10 )    0.8 cm     figure 10 : overlap identity for @xmath93 .",
    "@xmath94 = 0\\ .\\ ] ]    once again , a conformal transformation must be introduced because of the cycling transformations @xmath65 .",
    "this is defined by @xmath95 so that we now have ( figure 11 )    0.8 cm     figure 11 : overlap identity for @xmath96 .",
    "@xmath97 = 0\\ .\\ ] ]    the composite vertex must be defined in terms of the new cycling transformations and so it must now include the conformal transformations that perform this change .",
    "so , it will now be defined by @xmath98 considering this , the overlap identity for the composite vertex @xmath9 can be written as @xmath49 = 0\\ .\\ ] ] since the correct overlap identity for the composite vertex is given by @xmath51 = 0\\ ] ] we must have @xmath99 which implies once again that @xmath100    for the cycling transformation ( [ eq4.10 ] ) , it is only necessary to do conformal transformations on legs @xmath63 , @xmath5 , @xmath101 , @xmath102 , @xmath6 and @xmath103 , depending on the particular way the variables associated with these legs are identified with the variables associated to legs @xmath5 and @xmath6 . in this particular example ( which is case @xmath104 seen before ) ,",
    "the conformal transformations are given by @xmath105 where @xmath106 for the cycling ( [ eq4.10 ] ) , the propagators obtained for the four possible combinations discussed before are given by @xmath107 where can be connected with the coefficient @xmath108 in reference @xcite by @xmath109 . ]",
    "@xmath110 the true propagators are obtained when we integrate the expressions above multiplied by a suitable constant .",
    "the results are : @xmath111    it is now necessary to verify the effect of the gauge transformations @xmath112 and @xmath113 on the composite vertex as given by formula ( [ eq4.14 ] )",
    ". we shall do it by verifying the effect of @xmath112 on vertex @xmath1 . in order to do this",
    "we need the explicit expression for the bosonic oscillator vertex @xmath1 , given by @xcite @xcite @xmath114\\ ] ] where @xmath115 and @xmath116 are cycling transformations involving leg @xmath5 and the oscillators @xmath117 have commutation relations given by ( [ eq4.2 ] , [ eq4.3 ] ) .",
    "matrices @xmath118 are defined in the following way @xcite : @xmath119 ^n\\ , \\\\",
    "d_{nm}(\\gamma ) & = & \\left .",
    "\\sqrt{\\frac{m}{n}}\\frac{1}{m!}\\frac{\\partial ^m } { \\partial z^m}\\left [ \\gamma ( z)\\right ] ^n\\right| _ { z=0}\\ , \\\\ d_{00}(\\gamma ) & = & \\left .",
    "\\frac{1}{2}\\ln \\left [ \\frac{d}{dz}\\gamma ( z)\\right ] \\right| _ { z=0}\\end{aligned}\\ ] ] and have the following multiplication property : @xmath120    in order to calculate the effects of the conformal transformation @xmath112 on these oscillators we must make use of the following conformal operator @xcite @xmath121 which has conformal weight one , what means it transforms like @xmath122    an oscillator @xmath123 can be expressed in terms of this conformal operator in the following way : @xmath124 acting on it with the conformal transformation @xmath112 , we have @xmath125 making now a change of variables @xmath126 , we have @xmath127 expanding @xmath128 in terms of @xmath118 matrices and @xmath129 in terms of the oscillators , we obtain @xmath130 \\alpha ^{\\mu i}_p \\nonumber \\\\   & & + \\frac{1}{\\sqrt{n}}\\oint _ { \\xi _ i=0}d\\xi _ i\\ \\left [ \\sqrt{n}d_{n0}\\left ( v_{0i}^{-1}v_i \\right ) ( \\xi _ i)^{-1 } + \\sum_{m=1}^\\infty \\sqrt{\\frac{n}{m}}d_{nm}\\left ( v_{0i}^{-1}v_i\\right ) ( \\xi _ i)^{m-1}\\right ] \\alpha ^{\\mu i}_0\\ .\\end{aligned}\\ ] ] performing the integrations we then obtain @xmath131 using the same process for @xmath132 , we obtain @xmath133    using these transformation properties , the multiplication rules of matrices @xmath118 ( equation ( [ eq4.20 ] ) ) and the property @xcite @xmath134 we can show that the effect of the conformal transformation @xmath112 on vertex @xmath1 is given by @xmath135 \\ , \\ ] ] i.e. the effect of @xmath112 on vertex @xmath1 is to change @xmath136 and @xmath137 thus eliminating the dependence of the cycling transformations of every leg except leg @xmath5 on the latter .",
    "the same can be done to obtain the effect of conformal transformation @xmath113 on vertex @xmath15 , with the same results .",
    "so , the effect of these transformations is to eliminate from the cycling transformations of the composite vertex all dependence on the sewn legs @xmath5 and @xmath6 .",
    "we now introduce ghosts in the vertex so that what we must sew now are two vertices with some ghost variables attached to them , i.e. we will be considering the physical vertices @xcite which have the correct ghost number . in this case , in addition to satisfying the overlap identities with the conformal operator @xmath25 , the two physical vertices and the composite vertex must also satisfy some overlap identities with the conformal operators @xmath138 and @xmath139 , given by @xcite @xmath140 where @xmath141 and @xmath142 are ghost anticommuting oscillators with anticommutation relations @xmath143 these operators have , respectively , conformal weights @xmath144 and @xmath145 , what means that they transform like @xmath146    the overlap identities for a vertex @xmath39 with these operators are given by @xmath147 = 0\\ , \\\\ \\label{eq4.25 }   & & v\\left [ c^i(\\xi _ i)-\\left ( \\frac{d\\xi _ j}{d\\xi _ i}\\right ) ^{-1}c^j(\\xi _ j)\\right ] = 0\\ .\\end{aligned}\\ ] ]    we shall be working here with overlap identities for the physical vertex @xmath148 @xcite , which has the correct ghost number , instead of the overlap identities for vertex @xmath39 .",
    "the physical vertex is given by @xcite @xmath149 where @xmath150 are any three legs of the vertex and the matrix @xmath151 is given by @xmath152 where the cycling transformations are now defined on the complete generators @xmath153 of the conformal algebra of the bosonic oscillators and of the ghost oscillators .",
    "these vectors @xmath151 have the following property : @xmath154    in order to derive the overlap identity for the physical vertex @xmath148 , we must multiply the overlap identity for @xmath39 by the same factor as in equation ( [ eq4.26 ] ) , @xmath155 \\left ( \\prod _ { \\scriptstyle k=1\\atop \\scriptstyle k\\neq a , b , c}^n\\sum_{l=1}^n \\sum_{n=-1}^\\infty e_n^{kl}b_n^l\\right ) = 0\\ , \\\\   & & v\\left [ c^i(\\xi _ i)-\\left ( \\frac{d\\xi _ j}{d\\xi _ i}\\right ) ^{-1}c^j(\\xi _ j)\\right ] \\left ( \\prod _ { \\scriptstyle k=1\\atop \\scriptstyle k\\neq a , b , c}^n\\sum_{l=1}^n \\sum_{n=-1}^\\infty e_n^{kl}b_n^l\\right ) = 0\\end{aligned}\\ ] ] and pass it through the overlap identities , obtaining @xmath156 = 0\\ , \\\\   & & u\\left [ c^i(\\xi _ i)-\\left ( \\frac{d\\xi _ j}{d\\xi _ i}\\right ) ^{-1}c^j(\\xi _ j)\\right ] \\nonumber \\\\ \\label{eq4.29 }   & & + v\\sum_{\\scriptstyle p=1\\atop p\\neq \\scriptstyle a , b , c}^n(-1)^p\\prod _ { \\scriptstyle k=1 \\atop { \\scriptstyle k\\neq a , b , c\\atop \\scriptstyle k\\neq p}}^n\\sum_{l=1}^n\\sum_{q=-1}^\\infty e_q^{kl}b_q^l\\sum_{n=-1}^\\infty \\left [ e_n^{pi}(\\xi _ i)^{n+1}-\\left ( \\frac{d\\xi _ j}{d\\xi _ i } \\right ) ^{-1}e_n^{pj}(\\xi _ j)^{n+1 } \\right ] = 0\\ .\\end{aligned}\\ ] ]    from ( [ eq4.29 ] ) we can see that there will be an anomalous term in the @xmath139 overlap of the physical vertex @xmath148 unless both legs @xmath34 and @xmath50 are precisely those legs ( @xmath104 , @xmath157 or @xmath108 ) that do not have any ghosts attached to them .",
    "these ghosts which are attached to all the other legs are responsible for the anomalous terms .      before going any further ,",
    "it is necessary to make some considerations on the ghost number of the composite vertex . as we shall see shortly , in the case where we perform the sewing with ghosts included , using the physical vertices , the resulting composite physical vertex will not have the correct ghost number unless we insert some extra ghosts in vertex @xmath158 before the sewing takes place . considering this",
    ", we shall define the composite vertex to be given by @xmath159 where @xmath160 are some extra ghosts that will be introduced in order to make vertex @xmath161 have the correct ghost number and @xmath13 is the propagator ( in its integrated form ) .",
    "we must now analyze the ghost number of the composite vertex and of its parts in order to calculate the ghost number that the extra ghosts @xmath160 must have . in order to do this",
    ", we shall use the ghost number operator @xmath162 . for a vertex with @xmath0 legs ,",
    "the ghost number operator is defined by @xmath163 the reason why the ghost number operator is a sum from @xmath164 to @xmath165 is because there are @xmath0 vacua that will annihilate the operators corresponding to each one of them .",
    "when acting on the physical vertex , this operator gives a ghost number @xmath0 , what is the correct ghost number for a tree vertex with @xmath0 legs .    in the case of the composite vertex ,",
    "it has @xmath166 legs ( because it does not have legs @xmath5 and @xmath6 , which have been sewn together ) and so it must have ghost number @xmath167 . for this vertex",
    ", the ghost number operator @xmath168 can be divided into two parts : @xmath169 where @xmath170 this ghost number operator will have the following effect on the composite vertex : @xmath171 given formula ( [ eq4.30 ] ) for the composite vertex , we then have @xmath172 pu_2^\\dagger + u_1gpu_2^\\dagger n_2^{\\rm gh}\\ .\\ ] ]    in order to calculate this , we must pay some attention to terms one and three of the right hand side of the expression above .",
    "we know that @xmath173 where @xmath174 taking the hermitian conjugate of equation ( [ eq4.34 ] ) only on leg @xmath6 , we obtain @xmath175    since for @xmath176 ( and for any arbitrary ghost number operator ) @xmath177 we then obtain , substituting ( [ eq4.33 ] ) , ( [ eq4.35 ] ) and ( [ eq4.36 ] ) into equation ( [ eq4.32 ] ) , @xmath178 pu_2^\\dagger -u_1n_e^{\\rm gh}gpu_2^\\dagger + u_1gpn_f^{\\rm gh}u_2^\\dagger \\ .\\ ] ] passing @xmath179 through the extra ghosts @xmath160 , we then obtain @xmath180 pu_2^ \\dagger \\nonumber \\\\ \\label{eq4.37 }   & & -u_1\\left [ n_e^{\\rm gh},g\\right ] pu_2^\\dagger -u_1gpn_e^{\\rm gh}u_2^\\dagger + u_1gpn_f^{\\rm gh}u_2^\\dagger \\ .\\end{aligned}\\ ] ]    we must now remember that , in the composite vertex , we identify every operator on leg @xmath5 with operators on leg @xmath6 so that @xmath181",
    ". doing this , the last two terms in ( [ eq4.37 ] ) cancel and we obtain the following result : @xmath182 pu_2^\\dagger \\ .\\ ] ] the fact that @xmath161 has ghost number @xmath166 then implies that @xmath183 = g\\ , \\ ] ] i.e. the extra ghosts that must be introduced in vertex @xmath158 must have ghost number 1 . and @xmath6 to have or not to have ghosts attached to them .",
    "]    there is an infinite number of combinations of ghosts that have ghost number 1 .",
    "we could have any linear combination of ghosts of the type @xmath157 , @xmath184 , @xmath185 , etc .",
    "but it will prove to be simpler to choose @xmath160 to be a combination of @xmath186 only so that we may represent it as @xmath187 where @xmath188 are the coefficients of the linear combination . in order to determine the correct linear combination , we must use some other conditions , like brst invariance of the scattering amplitude .",
    "this we shall see next .",
    "we must now impose that the scattering amplitude obtained from the composite vertex is brst invariant and check whether this condition is strong enough to determine @xmath160 .",
    "the scattering amplitude @xcite is obtained by acting with the composite vertex @xmath189 on a certain number of physical states ( latexmath:[$|\\chi _ 1\\rangle |\\chi _",
    "2\\rangle \\dots    @xmath62 ( @xmath191 ; @xmath192 ) : latexmath:[\\[w=\\int \\prod_{\\scriptstyle i=1\\atop \\scriptstyle i\\neq e , f}^{n_1+n_2}dz_i\\ u_1gpu_2^\\dagger    @xmath13 is the propagator in its integrated form and @xmath160 are the extra ghosts to be inserted in @xmath158 .",
    "the action of the brst charge @xmath194 on this scattering amplitude is given by @xmath195 gpu_2^\\dagger |\\chi _",
    "1\\rangle |\\chi _ 2\\rangle \\dots |\\chi",
    "_ n\\rangle \\nonumber \\\\   & & + \\int \\prod_{\\scriptstyle i=1\\atop \\scriptstyle i\\neq e , f}^{n_1+n_2}dz_i\\ u_1 \\left [ g , q\\right ] pu_2^\\dagger |\\chi _",
    "1\\rangle |\\chi _ 2\\rangle \\dots |\\chi _ n\\rangle + \\int \\prod_{\\scriptstyle i=1\\atop \\scriptstyle i\\neq e , f}^{n_1+n_2}dz_i\\ u_1g\\left [ p , q\\right ] u_2^\\dagger |\\chi _ 1\\rangle |\\chi _",
    "2\\rangle \\dots |\\chi _",
    "n\\rangle \\nonumber \\\\   & & + \\int \\prod_{\\scriptstyle i=1\\atop \\scriptstyle i\\neq e , f}^{n_1+n_2}dz_i\\ u_1gp \\left [ u_2^\\dagger , q\\right ] |\\chi _ 1\\rangle |\\chi _ 2\\rangle \\dots",
    "|\\chi _ n\\rangle \\ .\\end{aligned}\\ ] ] the first and third terms will result in total derivatives that give zero when one integrates over some variables @xcite and so what remain are just the second and third terms .    the commutator @xmath13 is given by a pure conformal transformation , and it is a function of the generators @xmath196 only .",
    "as the brst charge commutes with all @xmath197 s , i.e. @xmath198 = 0\\ ] ] we have @xmath199 = 0\\ .\\ ] ] considering now that @xmath200 = { \\cal l}_n^i\\ , \\ ] ] we then have , for @xmath160 given by ( [ eq4.38 ] ) , @xmath201 = u_1\\sum_{i=1}^{n_1}\\sum_{n=-1}^\\infty \\alpha _ n^i{\\cal l}_n^i\\ .\\ ] ]    in order for the scattering amplitude @xmath202 to be brst invariant , expression ( [ eq4.39 ] ) must be zero or a total derivative ( that can be integrated out to become a null surface term ) . at the same time , we want these extra ghosts to place ( talking in terms of the simple cycling ) a ghost on one of the legs in @xmath158 that do not have any ghosts attached to them .",
    "if we now remember property ( [ eq4.27 ] ) , we see that we can satisfy these constraints in a nice way by choosing @xmath160 to be given by @xmath203 where @xmath204 is one of the legs of vertex @xmath158 that does not have ghosts attached to it . inserting these ghosts in vertex @xmath158 , we have @xmath205    using formula ( [ eq4.40 ] ) for the extra ghosts @xmath160 , we then have @xmath206    & = &   u_1(-1)^{n_1+a } \\sum_{j=1}^{n_1 } \\sum_{n=-1}^\\infty e_n^{aj } \\left [ b_n^j , q\\right ] = ( -1)^{n_1 + a}u_1\\sum_{j=1}^{n_1 } \\sum_{n=-1}^\\infty e_n^{aj } { \\cal l}_n^j \\nonumber \\\\   & = &   ( -1)^{n_1+a } \\frac{\\partial v_1}{\\partial z_a } \\prod_{\\scriptstyle i=1\\atop \\scriptstyle i\\neq a , b , c}^{n_1}\\sum_{j=1}^{n_1 } \\sum_{n=-1}^\\infty e_n^{ij}b_n^j\\end{aligned}\\ ] ] what is a total derivative that will vanish when one does the integration over @xmath207 .    in references @xcite and @xcite , the extra ghosts have been placed in the propagator .",
    "although this can be done , there is no way one can derive a formula for the ghosts in the propagator for a general cycling . in that case , the extra ghosts must be derived and brst invariance has to be checked for each particular cycling .",
    "also , the resulting composite vertex obtained in that case is not similar in its ghost structure to an ordinary tree vertex , although it has the correct ghost number .",
    "we must now use the overlap identities to determine the propagator that satisfies them . in order to do this",
    "we shall start with vertex @xmath208 , which is the vertex with cycling transformations @xmath209 which involve leg @xmath5 .",
    "considering equations ( [ eq4.28 ] ) and ( [ eq4.29 ] ) , the overlap identities for vertex @xmath208 between an arbitrary leg @xmath34 and leg @xmath5 are given by ( figure 12 )    0.8 cm     figure 12 : overlap identity for @xmath208 .",
    "@xmath210 = 0\\ , \\\\   & & u_1 ^ 0\\left [ c^i(\\xi _ { 0i})-\\left ( \\frac{d\\xi _ { 0e}}{d\\xi _ { 0i}}\\right ) ^{-1}c^e(\\xi _ { 0e } ) \\right ] \\nonumber \\\\ \\label{eq4.43 }   & & + v^0_1\\sum_{\\scriptstyle p=1\\atop p\\neq \\scriptstyle a , b , c}^{n_1}(-1)^p \\prod _ { \\scriptstyle k=1\\atop { \\scriptstyle k\\neq a , b , c\\atop \\scriptstyle k\\neq p}}^{n_1 } \\sum_{l=1}^{n_1}\\sum_{q=-1}^\\infty e_q^{kl}b_q^l \\sum_{n=-1}^\\infty \\left [ e_n^{pi}(\\xi _ { 0i})^{n+1}-\\left ( \\frac{d\\xi _ { 0e}}{d\\xi _ { 0i}}\\right ) ^{-1}e_n^{pe } ( \\xi _ { 0e})^{n+1 } \\right ] = 0\\ .\\end{aligned}\\ ] ]    the extra ghosts must then be inserted in vertex @xmath208 so that the composite vertex will have the correct ghost number .",
    "multiplying expressions ( [ eq4.42 ] ) and ( [ eq4.43 ] ) by the extra ghosts @xmath160 ( given by ( [ eq4.40 ] ) ) and passing them through the overlaps we obtain ( figure 13 )    0.8 cm     figure 13 : overlap identity for @xmath211 .",
    "@xmath212 = 0\\ , \\\\   & & u_1 ^ 0g\\left [ c^i(\\xi _ { 0i})-\\left ( \\frac{d\\xi _ { 0e}}{d\\xi _ { 0i}}\\right ) ^{-1 } c^e(\\xi _ { 0e})\\right ] + u^0_1(-1)^{n_1+a}\\sum_{n=-1}^\\infty \\left [ e_n^{ai}(\\xi _ { 0i})^{n+1 } -\\left ( \\frac{d\\xi _ { 0e}}{d\\xi _ { 0i}}\\right ) ^{-1}e_n^{ae}(\\xi _ { 0e})^{n+1 } \\right ] \\nonumber \\\\   & & + v_1 ^ 0\\sum_{\\scriptstyle p=1\\atop p\\neq \\scriptstyle a , b , c}^{n_1}(-1)^p \\prod _ { \\scriptstyle k=1\\atop { \\scriptstyle k\\neq a , b , c\\atop \\scriptstyle k\\neq p}}^{n_1 } \\left ( \\sum_{l=1}^{n_1}\\sum_{q=-1}^\\infty e_q^{kl}b_q^l\\right ) \\left ( \\sum_{j=1}^{n_1 } \\sum_{n=-1}^\\infty e_n^{aj}b_n^j\\right ) \\nonumber \\\\ \\label{eq4.45 }   & & \\times \\sum_{n=-1}^\\infty \\left [ e_n^{pi}(\\xi _ { 0i})^{n+1}-\\left ( \\frac{d\\xi _ { 0e}}{d\\xi _ { 0i}}\\right ) ^{-1}e_n^{pe}(\\xi _ { 0e})^{n+1 } \\right ] = 0\\ .\\end{aligned}\\ ] ]    the second and third terms of equation ( [ eq4.45 ] ) can be combined so that it becomes @xmath213 \\nonumber \\\\",
    "\\label{eq4.46 }   & & + v_1 ^ 0\\sum_{\\scriptstyle p=1\\atop p\\neq \\scriptstyle b , c}^{n_1}(-1)^p \\prod",
    "_ { \\scriptstyle k=1\\atop { \\scriptstyle k\\neq b , c\\atop \\scriptstyle k\\neq p}}^{n_1 } \\left ( \\sum_{l=1}^{n_1}\\sum_{q=-1}^\\infty e_q^{kl}b_q^l\\right ) \\sum_{n=-1}^\\infty \\left [ e_n^{pi}(\\xi _ { 0i})^{n+1}-\\left ( \\frac{d\\xi _ { 0e}}{d\\xi _ { 0i}}\\right ) ^{-1 } e_n^{pe}(\\xi _ { 0e})^{n+1 } \\right ] = 0\\ .\\end{aligned}\\ ] ]    at this point , we must introduce conformal transformations of the type of @xmath112 , given by ( [ eq4.11 ] ) in order to have at the end the correct cycling transformations for the composite vertex . in order to do this",
    "we need to use matrices @xmath214 , defined by @xcite @xmath215 \\right| _ { z=0}\\ ] ] which have the following properties : @xmath216    the action of the operator @xmath112 on the ghosts @xmath142 can then be calculated in the following way : first we write @xmath142 in terms of an integral over the conformal operator @xmath217 @xmath218 then we insert the operator @xmath112 : @xmath219 after a change of variables @xmath220 we have is a polynomial in @xmath221 ( with no constant term ) , then @xmath222 . ]",
    "@xmath223 using matrices @xmath214 , we then may expand @xmath221 in terms of @xmath54 . if we also expand @xmath224 , we then obtain @xmath225 performing the integration we then have @xmath226    using ( [ eq4.52 ] ) in equations ( [ eq4.44 ] ) and ( [ eq4.46 ] ) and multiplying ( [ eq4.44 ] ) by @xmath227 and ( [ eq4.46 ] ) by @xmath228 , we then have ( figure 14 )        figure 14 : overlap identity for @xmath229 .    @xmath230 = 0\\ , \\\\   & & u_1 ^ 0gc_1^{-1 } \\left [ c^i(\\xi _ i ) -\\left ( \\frac{d\\xi _ e}{d\\xi _ i}\\right ) ^{-1 } c^e(\\xi _ e)\\right ] + v_1 ^ 0c_1^{-1 } \\sum_{\\scriptstyle p=1\\atop p\\neq \\scriptstyle b , c}^{n_1}(-1)^p \\prod _ { \\scriptstyle k=1\\atop { \\scriptstyle k\\neq b , c",
    "\\atop \\scriptstyle k\\neq p}}^{n_1 } \\left [ \\sum_{l=1}^{n_1 } \\sum_{q , t=-1}^\\infty e_q^{kl } e_{qt}\\left ( v_{0l}^{-1}v_l\\right ) b_t^l\\right ] \\nonumber \\\\ \\label{eq4.56 }   & & \\times \\sum_{n , m=-1}^\\infty \\left [ e_n^{pi}e_{nm}\\left ( v_{0i}^{-1}v_i\\right ) ( \\xi _ i)^{m+1 }   -\\left ( \\frac{d\\xi _ e}{d\\xi _ i}\\right ) ^{-1}e_n^{pe}e_{nm}\\left ( v_{0e}^{-1 } v_e\\right ) ( \\xi _ e)^{m+1 } \\right ] = 0\\ .\\end{aligned}\\ ] ]    before going further , some words must be said about the effects of @xmath231 on vertex @xmath208 with the extra ghosts @xmath160 . this is given explicitly by @xcite@xcite @xmath232 \\nonumber \\\\   & & \\times \\prod_{r=-1}^1 \\sum_{i=1}^{n_1 } \\sum_{s=-1}^1 e_{rs}(v_{0i})b_s^i \\times \\prod_{\\scriptstyle i=1\\atop \\scriptstyle i\\neq b , c}^{n_1 } \\sum_{j=1}^n \\sum_{n=-1}^\\infty e_n^{ij}b_n^j\\ .\\end{aligned}\\ ] ]    making use of matrices @xmath233 , defined by @xcite @xmath234 ^{n-2}\\left [ \\frac{\\partial } { \\partial z}\\gamma ( z)\\right ] ^{-1 } \\right\\ } \\right| _ { z=0}\\ ] ] we may calculate in a similar way as we did for the @xmath142 ghosts the effect of @xmath112 on the @xmath141 ghosts , obtaining @xmath235 using this together with the property @xmath236 and equation ( [ eq4.52 ] ) , we may then show that the result of acting with @xmath231 on @xmath211 is @xmath237 \\nonumber \\\\ \\label{eq4.58 }   & & \\times \\prod_{r=-1}^1 \\sum_{i=1}^{n_1 } \\sum_{s=-1}^1 e_{rs}(v_i)b_s^i \\times \\prod_{\\scriptstyle",
    "i=1 \\atop \\scriptstyle i\\neq b , c}^{n_1 } \\sum_{j=1}^n \\sum_{n , m=-1}^\\infty e_n^{ij}e_{nm}(v_{0j}v_j)b_m^j\\ .\\end{aligned}\\ ] ] so we can see that in this case the action of @xmath231 on @xmath211 is not just to change @xmath238 . because of the peculiar nature of @xmath151 , it transforms as @xmath239 only in one particular group of cycling transformations ( as we shall see later ) will this be just equivalent to changing @xmath238 .",
    "we shall call from now on @xmath240 and @xmath241 .",
    "the calculation for vertex @xmath242 will be similar to the one we have just made for @xmath229 .    having done this , we must insert the propagator @xmath7 into the overlap identities ( [ eq4.55 ] ) and ( [ eq4.56 ] ) in the same way as in the case with no ghosts .",
    "but now we must take extra care since there are terms depending on @xmath243 in the second term of equation ( [ eq4.56 ] ) . using equation ( [ eq4.52 ] ) as a guideline",
    ", we have @xmath244 so that the result of inserting @xmath7 into overlaps ( [ eq4.55 ] ) and ( [ eq4.56 ] ) is ( figure 15 )    0.8 cm     figure 15 : overlap identity for @xmath245 .    @xmath246 = 0\\ , \\\\   & & u_1{\\cal p}\\left [ c^i(\\xi _ i)-\\left ( \\frac{d}{d\\xi _ i}{\\cal p}^{-1}\\xi _",
    "e\\right ) ^{-1}c^e \\left ( { \\cal p}^{-1}\\xi _",
    "e\\right ) \\right ] \\nonumber \\\\   & & + v_1{\\cal p}\\sum_{\\scriptstyle p=1\\atop p\\neq \\scriptstyle b , c}^{n_1}(-1)^p \\prod _ { \\scriptstyle k=1\\atop { \\scriptstyle k\\neq b , c\\atop \\scriptstyle k\\neq p}}^{n_1 } \\sum_{q , t=-1}^\\infty \\left [ \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq e}^{n_1 } e_q^{kl } e_{qt}(v_{0l}^{-1}v_l)b_t^l + e_q^{ke}e_{qt}(v_{0e}^{-1}v_e{\\cal p})b_t^e\\right ] \\nonumber \\\\ \\label{eq4.60 }   & & \\times \\sum_{n , m=-1}^\\infty \\left [ e_n^{pi}e_{nm}(v_{0i}^{-1}v_i)(\\xi _ i)^{m+1 } -\\left ( \\frac{d\\xi _ e}{d\\xi _ i}\\right ) ^{-1}e_n^{pe}e_{nm}(v_{0e}^{-1}v_e)(\\xi _ e)^{m+1 } \\right ] = 0\\ .\\end{aligned}\\ ] ]    the operators of the overlap equations are now facing leg @xmath6 of vertex @xmath247 .",
    "in order to obtain the overlap identities for this leg , we must now identify the operators of leg @xmath5 with the ones of leg @xmath6 , which are adjoint operators : @xmath248 first , as @xmath249 and @xmath250 are conformal operators with weights 2 and @xmath145 , respectively , we have @xmath251 then , for @xmath252 and @xmath253 , we obtain @xmath254 then , we must also make the change @xmath255    so , the overlap equations become @xmath256 = 0 \\ , \\\\   & & u_1{\\cal p}\\left [ c^i(\\xi _ i)+\\left ( \\frac{d}{d\\xi _ i}{\\cal p}^{-1}\\xi _",
    "e\\right ) ^{-1 } \\left ( { \\cal p}^{-1}\\xi _",
    "e\\right ) ^2c^f\\left ( \\gamma { \\cal p}^{-1}\\xi _",
    "e\\right ) \\right ] \\nonumber \\\\   & & + v_1{\\cal p}\\sum_{\\scriptstyle p=1\\atop p\\neq \\scriptstyle b , c}^{n_1}(-1)^p \\prod _",
    "{ \\scriptstyle k=1\\atop { \\scriptstyle k\\neq b , c\\atop \\scriptstyle k\\neq p}}^{n_1 } \\sum_{q , t=-1}^\\infty \\left [ \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq e}^{n_1}e_q^{kl } e_{qt}\\left ( v_{0l}^{-1}v_l\\right ) b_t^l + e_q^{ke}e_{qt}\\left ( v_{0e}^{-1}v_e{\\cal p}\\right ) b_{-t}^f\\right ] \\nonumber \\\\ \\label{eq4.62 }   & & \\times \\sum_{n , m=-1}^\\infty \\left [ e_n^{pi}e_{nm}\\left ( v_{0i}^{-1}v_i\\right ) ( \\xi _ i)^{m+1 }   -\\left ( \\frac{d\\xi _ f}{d\\xi _ i}\\right ) ^{-1}e_n^{pe}e_{nm}\\left ( v_{0e}^{-1 } v_f\\right ) ( \\xi _ f)^{m+1}\\right ] = 0\\ .\\end{aligned}\\ ] ]    we are then facing the conformal transformation @xmath87 that takes @xmath257 into @xmath258 . inserting this transformation we obtain ( figure 16 ) :    0.8 cm     figure 16 : overlap identity for @xmath259 .",
    "@xmath260 = 0 \\ , \\\\   & & u_1{\\cal p}c_f\\left [ c^i(\\xi _ i)+\\left ( \\frac{d}{d\\xi _ i}{\\cal p}^{-1}\\xi _",
    "e\\right ) ^{-1 } \\left ( { \\cal p}^{-1}\\xi _",
    "e\\right ) ^2 \\left ( \\frac{dv_{0f}^{-1}v_f\\gamma { \\cal p}^{-1}\\xi _ e } { d\\gamma { \\cal p}^{-1}\\xi _",
    "e}\\right ) ^{-1}c^f\\left ( v_{0f}^{-1}v_f\\gamma { \\cal p}^{-1}\\xi _ e \\right ) \\right]\\nonumber \\\\   & & + v_1{\\cal p}c_f\\sum_{\\scriptstyle p=1\\atop p\\neq \\scriptstyle b , c}^{n_1}(-1)^p \\prod _ { \\scriptstyle k=1\\atop { \\scriptstyle k\\neq b , c\\atop \\scriptstyle k\\neq p}}^{n_1 } \\sum_{q , t=-1}^\\infty \\left [ \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq e}^{n_1}e_q^{kl } e_{qt}\\left ( v_{0l}^{-1}v_l\\right ) b_t^l -e_q^{ke}e_{qt}\\left ( v_{0e}^{-1}v_e{\\cal p}\\gamma v_f^{-1}v_{0f}\\right ) b_t^f\\right ] \\nonumber \\\\ \\label{eq4.64 }   & & \\times \\sum_{n , m=-1}^\\infty \\left [ e_n^{pi}e_{nm}\\left ( v_{0i}^{-1}v_i\\right ) ( \\xi _ i)^{m+1 } -\\left ( \\frac{d\\xi _ { 0f}}{d\\xi _ i}\\right ) ^{-1}e_n^{pe}e_{nm}\\left ( v_{0e}^{-1 } v_{0f}\\right ) ( \\xi _ { 0f})^{m+1}\\right ] = 0\\ .\\end{aligned}\\ ] ]    we are facing now vertex @xmath261 .",
    "this vertex satisfies the following overlap identity @xcite : @xmath262    using equation ( [ eq4.50 ] ) , we have @xmath263 all terms on @xmath264 with @xmath265 get annihilated by the conjugate vacuum @xmath266 , while we may use identity ( [ eq4.65 ] ) to substitute the terms in @xmath267 , @xmath268 . doing this , equation ( [ eq4.64 ] )",
    "becomes @xmath269 \\nonumber \\\\   & & + v_1{\\cal p}c_f\\sum_{\\scriptstyle p=1\\atop p\\neq \\scriptstyle b , c}^{n_1}(-1)^p \\prod _",
    "{ \\scriptstyle k=1\\atop { \\scriptstyle k\\neq b , c\\atop \\scriptstyle k\\neq p}}^{n_1 } \\sum_{q , t=-1}^\\infty \\left [ \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq e}^{n_1}e_q^{kl } e_{qt}\\left ( v_{0l}^{-1}v_l\\right ) b_t^l+\\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq f}^{n_2 } e_q^{ke}e_{qt}\\left ( v_{0e}^{-1}v_e{\\cal p}\\gamma v_f^{-1}v_{0l}\\right ) b_t^l\\right ] \\nonumber \\\\ \\label{eq4.66 }   & & \\times \\sum_{n , m=-1}^\\infty \\left [ e_n^{pi}e_{nm}\\left ( v_{0i}^{-1}v_i\\right ) ( \\xi _ i)^{m+1 }   -\\left ( \\frac{d\\xi _ { 0f}}{d\\xi _ i}\\right ) ^{-1}e_n^{pe}e_{nm}\\left ( v_{0e}^{-1}v_{0f}\\right ) ( \\xi _ { 0f})^{m+1}\\right ] = 0\\ .\\end{aligned}\\ ] ] equations ( [ eq4.63 ] ) and ( [ eq4.66 ] ) are the overlap identities between legs @xmath34 and @xmath6 .    in order to obtain the overlaps between leg @xmath34 of vertex @xmath158 and an arbitrary leg @xmath50 of vertex @xmath247 , we must now perform a cycling transformation that will take the operators from leg @xmath6 to leg @xmath50 .",
    "the effect of this transformation on @xmath270 is @xmath271 then , we must also write @xmath272 doing this , overlap equations ( [ eq4.63 ] , [ eq4.66 ] ) become ( figure 17 )    0.8 cm     figure 17 : overlap identity for @xmath273 .",
    "@xmath274 = 0\\ , \\\\   & &   u_1{\\cal p}c_fv_2^{0\\dagger } \\left [ c^i(\\xi _ i)+\\left ( \\frac{d}{d\\xi _ i}{\\cal p}^{-1 } \\xi _ e\\right ) ^{-1}\\left ( { \\cal p}^{-1}\\xi _",
    "e\\right ) ^2 \\left ( \\frac{dv_{0j}^{-1}v_f\\gamma { \\cal p}^{-1}\\xi _ e}{d\\gamma { \\cal p}^{-1}\\xi _",
    "e}\\right ) ^{-1}c^f\\left ( v_{0j}^{-1}v_f\\gamma { \\cal p}^{-1}\\xi _",
    "e\\right ) \\right ] \\nonumber \\\\   & & + v_1{\\cal p}c_fv_2^{0\\dagger } \\ !",
    "\\sum_{\\scriptstyle p=1\\atop p\\neq \\scriptstyle b , c}^{n_1 } ( -1)^p\\ ! \\ ! \\ ! \\ ! \\prod",
    "_ { \\scriptstyle k=1\\atop { \\scriptstyle k\\neq b , c\\atop \\scriptstyle k\\neq p}}^{n_1 } \\ !",
    "\\sum_{q , t=-1}^\\infty \\left [ \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l \\neq e}^{n_1}e_q^{kl}e_{qt}\\left ( v_{0l}^{-1}v_l\\right ) b_t^l + \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq f}^{n_2}e_q^{ke}e_{qt}\\left ( v_{0e}^{-1}v_e{\\cal p}\\gamma v_f^{-1}v_{0l } \\right ) b_t^l\\right ] \\nonumber \\\\ \\label{eq4.68 }   & & \\times \\sum_{n , m=-1}^\\infty \\left [ e_n^{pi}e_{nm}\\left ( v_{0i}^{-1}v_i\\right ) ( \\xi _ i)^{m+1 }   -\\left ( \\frac{d\\xi _ { 0j}}{d\\xi _ i}\\right ) ^{-1}e_n^{pe}e_{nm}\\left ( v_{0e}^{-1}v_{0j}\\right ) ( \\xi _ { 0j})^{m+1}\\right ] = 0\\ .\\end{aligned}\\ ] ]    the operators are now facing the ghosts that surround vertex @xmath275 ( like in equation ( [ eq4.26 ] ) ) : @xmath276 so that we must insert these ghosts into the expressions for the overlaps . before doing that , we must notice that the extra ghosts acting on vertex @xmath261 have at their left both the conformal transformation @xmath87 and the propagator @xmath7 so that we must first pass them through in order to reach vertex @xmath158 : @xmath277 then , identifying legs @xmath5 and @xmath6 , we have the following expression for the ghosts : @xmath278 { \\cal p}\\ .\\ ] ] we may now pass it through the conformal transformation @xmath112 , obtaining @xmath279 { \\cal p}\\ .\\ ] ]    this is now facing vertex @xmath280 , which satisfies the following overlap identity @xcite : @xmath281 using this identity , we may then write the extra ghosts as @xmath282 .\\ ] ] passing it back through @xmath112 we then have @xmath283 .\\ ] ]    we now insert these ghosts into expressions ( [ eq4.67 ] ) and ( [ eq4.68 ] ) .",
    "we do so by multiplying them by ( [ eq4.69 ] ) and passing it through the first term of the overlaps .",
    "what we obtain is ( figure 18 )    0.8 cm     figure 18 : overlap identity for @xmath284 .",
    "@xmath285 = 0\\ , \\\\   & & u_1{\\cal p}c_fu_2^{0\\dagger } \\left [ c^i(\\xi _ i)+\\left ( \\frac{d}{d\\xi _ i}{\\cal p}^{-1 } \\xi _ e\\right ) ^{-1}\\left ( { \\cal p}^{-1}\\xi _",
    "e\\right ) ^2 \\left ( \\frac{dv_{0j}^{-1}v_f\\gamma { \\cal p}^{-1}\\xi _ e}{d\\gamma { \\cal p}^{-1}\\xi _",
    "e}\\right ) ^{-1}c^f\\left ( v_{0j}^{-1}v_f\\gamma { \\cal p}^{-1}\\xi _",
    "e\\right ) \\right ] \\nonumber \\\\   & & + u_1{\\cal p}c_fv_2^{0\\dagger } \\sum_{p=1}^{n_2}(-1)^p\\prod_{\\scriptstyle k=1\\atop { \\scriptstyle k\\neq d , g , h\\atop \\scriptstyle k\\neq p}}^{n_2}\\left [ \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq f}^{n_2}\\sum_{q=-1}^\\infty e_q^{kl}b_q^l + \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq e}^{n_1}\\sum_{q , t=-1}^\\infty e_q^{kf}e_{qt}\\left ( v_{0f}^{-1}v_f\\gamma { \\cal p}^{-1}v_e^{-1}v_l\\right ) b_t^l\\right ] \\nonumber \\\\   & & \\times \\sum_{n=-1}^\\infty \\left [ \\sum_{m=-1}^\\infty e_n^{pf}e_{nm}\\left ( v_{0f}^{-1}v_f \\gamma { \\cal p}^{-1}v_e^{-1}v_i\\right ) ( \\xi _ i)^{m+1 } \\right .",
    "\\nonumber \\\\   & & \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\   \\left .",
    "+ \\left ( \\frac{d}{d\\xi _ i}{\\cal p}^{-1 } \\xi _ e\\right ) ^{-1}\\left ( { \\cal p}^{-1}\\xi _",
    "e\\right ) ^2 \\left ( \\frac{dv_{0j}^{-1}v_f \\gamma { \\cal p}^{-1}\\xi _ e}{d\\gamma { \\cal p}^{-1}\\xi _",
    "e}\\right ) ^2e_n^{pj}\\left ( v_{0j}^{-1}v_f\\gamma { \\cal p}^{-1}\\xi _",
    "e\\right ) ^{n+1}\\right ] \\nonumber \\\\   & & + v_1{\\cal p}c_fv_2^{0\\dagger } \\sum_{\\scriptstyle p=1\\atop \\scriptstyle p\\neq b , c}^{n_1 } ( -1)^p\\ ! \\ ! \\ ! \\ ! \\prod",
    "_ { \\scriptstyle k=1\\atop { \\scriptstyle k\\neq b , c\\atop \\scriptstyle k \\neq p}}^{n_1}\\sum_{q , t=-1}^\\infty \\left [ \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l \\neq e}^{n_1}e_q^{kl}e_{qt}(v_{0l}^{-1}v_l)b_t^l + \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l \\neq f}^{n_2}e_q^{ke}e_{qt}\\left ( v_{0e}^{-1}v_e{\\cal p}\\gamma v_f^{-1}v_{0l}\\right ) b_t^l \\right ] \\nonumber \\\\   & & \\times \\sum_{n , m=-1}^\\infty \\left [ e_n^{pi}e_{nm}(v_{0i}^{-1}v_i)(\\xi _ i)^{m+1}-\\left ( \\frac{d\\xi _ { 0j}}{d\\xi _ i}\\right ) ^{-1}e_n^{pe}e_{nm}(v_{0e}^{-1}v_e)(\\xi _ { 0j})^{m+1}\\right ] \\nonumber \\\\ \\label{eq4.71 }   & & \\times \\prod_{\\scriptstyle k=1\\atop \\scriptstyle k\\neq d , g , h}^{n_2}\\left [ \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq f}^{n_2}\\sum_{q=-1}^\\infty e_q^{kl}b_q^l + \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq e}^{n_1}\\sum_{q , t=-1}^\\infty e_q^{kf}e_{qt } \\left ( v_{0f}^{-1}v_f\\gamma { \\cal p}^{-1}v_e^{-1}v_l\\right ) b_t^l\\right ] = 0\\ .\\end{aligned}\\ ] ]    we are then facing the last term of this composite vertex : the conformal transformation @xmath113 on vertex @xmath261 . inserting it into equations ( [ eq4.70 ] ) and ( [ eq4.71 ] ) , we obtain ( figure 19 )    0.8 cm     figure 19 : overlap identity for @xmath286 .    @xmath287 = 0\\ , \\\\   & & u_1{\\cal p } u_2^\\dagger \\left [ c^i(\\xi _ i ) + \\left ( \\frac{d}{d\\xi _ i}{\\cal p}^{-1 } \\xi _ e \\right ) ^{-1 } \\left ( { \\cal p}^{-1}\\xi _",
    "e\\right ) ^2 \\left ( \\frac{dv_j^{-1 }   v_f\\gamma { \\cal p}^{-1 } \\xi _ e}{d \\gamma { \\cal p}^{-1 } \\xi _ e}\\right ) ^{-1 } c^f\\left ( v_j^{-1 } v_f \\gamma { \\cal p}^{-1 } \\xi _ e\\right ) \\right ] \\nonumber \\\\   & & + u_1 { \\cal p } v_2^\\dagger \\sum_{p=1}^{n_2}(-1)^p \\prod_{\\scriptstyle k=1 \\atop { \\scriptstyle k\\neq d , g , h \\atop \\scriptstyle k\\neq p}}^{n_2 } \\sum_{q , t=-1}^\\infty \\left [ \\sum_{\\scriptstyle l=1 \\atop \\scriptstyle l\\neq f}^{n_2 } e_q^{kl } e_{qt}(v_{0l}^{-1}v_l ) b_t^l+ \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq e}^{n_1 } e_q^{kf}e_{qt}\\left ( v_{0f}^{-1 } v_f \\gamma { \\cal p}^{-1 } v_e^{-1}v_l\\right ) b_t^l\\right ] \\nonumber \\\\   & & \\times \\sum_{n=-1}^\\infty   \\left [ \\sum_{m=-1}^\\infty e_n^{pf}e_{nm } \\left ( v_{0f}^{-1 } v_f \\gamma { \\cal p}^{-1 } v_e^{-1 } v_i\\right ) ( \\xi _ i)^{m+1 } \\right .",
    "\\nonumber \\\\   & & \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\   \\left .",
    "+ \\left ( \\frac{d}{d\\xi _ i}{\\cal p}^{-1 } \\xi _ e\\right ) ^{-1}\\left ( { \\cal p}^{-1 } \\xi _ e\\right ) ^2 \\left ( \\frac{dv_j^{-1 } v_f\\gamma { \\cal p}^{-1}\\xi _ e}{d\\gamma { \\cal p}^{-1}\\xi _",
    "e}\\right ) ^2e_n^{pj}\\left ( v_j^{-1 } v_f \\gamma { \\cal p}^{-1}\\xi _",
    "e\\right ) ^{n+1}\\right ] \\nonumber \\\\   & & + v_1{\\cal p}v_2^\\dagger \\sum_{\\scriptstyle p=1\\atop \\scriptstyle p\\neq \\scriptstyle b , c}^{n_1}(-1)^p \\prod _",
    "{ \\scriptstyle k=1 \\atop { \\scriptstyle k\\neq b , c \\atop \\scriptstyle k\\neq p}}^{n_1 } \\sum_{q , t=-1}^\\infty \\left [ \\sum_{\\scriptstyle l=1 \\atop \\scriptstyle l\\neq e}^{n_1}e_q^{kl } e_{qt}(v_{0l}^{-1}v_l ) b_t^l + \\sum_{\\scriptstyle l=1 \\atop \\scriptstyle l\\neq f}^{n_2 } e_q^{ke}e_{qt } \\left ( v_{0e}^{-1}v_e{\\cal p } \\gamma v_f^{-1}v_l\\right ) b_t^l\\right ] \\nonumber \\\\   & & \\times \\sum_{n , m=-1}^\\infty   \\left [ e_n^{pi}e_{nm}(v_{0i}^{-1}v_i ) ( \\xi _ i)^{m+1}- \\left ( \\frac{d\\xi _ j}{d\\xi _ i}\\right ) ^{-1 } e_n^{pe}e_{nm}(v_{0e}^{-1}v_e)(\\xi _ j)^{m+1 } \\right ] \\nonumber \\\\ \\label{eq4.73 }   & & \\times \\prod_{\\scriptstyle k=1 \\atop \\scriptstyle k \\neq d , g , h}^{n_2 } \\sum_{q , t=-1}^\\infty \\left [ \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq f}^{n_2 } e_q^{kl } e_{qt}(v_{0l}^{-1}v_l ) b_t^l + \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq e}^{n_1 } e_q^{kf } e_{qt } \\left ( v_{0f}^{-1}v_f \\gamma { \\cal p}^{-1}v_e^{-1 } v_l\\right ) b_t^l\\right ] = 0\\end{aligned}\\ ] ]    where we have called @xmath288 and @xmath289",
    ".    we must now extract the ghosts from vertex @xmath158 in the second term of equation ( [ eq4.73 ] ) : @xmath290 { \\cal p } \\nonumber \\\\   & = & v_1{\\cal p}\\prod_{\\scriptstyle k=1\\atop \\scriptstyle k\\neq b , c}^{n_1 } \\sum_{q , t=-1}^\\infty \\left [ \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq e}^{n_1 } e_q^{kl}e_{qt}(v_{0l}^{-1}v_l)b_t^l+e_q^{ke}e_{qt}(v_{0e}^{-1}v_e{\\cal p})b_t^e\\right ] \\ .\\end{aligned}\\ ] ] identifying @xmath291 with @xmath292 and passing now these ghosts through the conformal transformation @xmath87 , we obtain @xmath293 \\ .\\ ] ] using now overlap identities ( [ eq4.65 ] ) for vertex @xmath15 and inserting the conformal transformation @xmath113 , we then obtain @xmath294 .\\ ] ] substituting ( [ eq4.74 ] ) into equation ( [ eq4.73 ] ) we then obtain the overlap identities between legs @xmath34 and @xmath50 : @xmath295 = 0\\ , \\\\   & & u_c\\left [ c^i(\\xi _ i ) + \\left ( \\frac{d}{d\\xi _ i } { \\cal p}^{-1}v^{-1}_ev_i\\xi _",
    "i \\right ) ^{-1 } \\left ( { \\cal p}^{-1}v_e^{-1 } v_i\\xi _ i\\right ) ^2 \\right .",
    "\\nonumber \\\\   & & \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\left .",
    "\\times \\left ( \\frac{d}{d\\xi _ i } { \\cal p}^{-1 } v_e^{-1}v_i\\xi _ i\\right ) ^{-1 } c^j \\left ( v_j^{-1 } v_f\\gamma { \\cal p}^{-1 } v_e^{-1}v_i\\xi _ i\\right ) \\right ] \\nonumber \\\\   & & + v_c \\prod _ { \\scriptstyle k=1 \\atop { \\scriptstyle k\\neq b , c \\atop \\scriptstyle k \\neq p}}^{n_1 } \\sum_{q , t=-1}^\\infty \\left [ \\sum_{\\scriptstyle",
    "l=1 \\atop \\scriptstyle l \\neq e}^{n_1 } e_q^{kl}e_{qt } ( v_{0l}^{-1}v_l)b_t^l + \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq f}^{n_2 } e_q^{ke}e_{qt } \\left ( v_{0e}^{-1 } v_e{\\cal p } \\gamma v_f^{-1 } v_l\\right ) b_t^l\\right ] \\nonumber \\\\   & & \\times \\sum_{\\scriptstyle p=1 \\atop \\scriptstyle p\\neq d , g , h}^{n_2}{-1}^p \\prod_{\\scriptstyle k=1 \\atop { \\scriptstyle k \\neq d , g , h \\atop \\scriptstyle k \\neq p}}^{n_2 } \\sum_{q , t=-1}^\\infty \\left [ \\sum_{\\scriptstyle l=1 \\atop \\scriptstyle l\\neq e}^{n_1 } e_q^{kf } e_{qt } \\left ( v_{0f}^{-1 } v_f \\gamma { \\cal p}^{-1 } v_e^{-1 } v_l \\right ) b_t^l + \\sum_{\\scriptstyle l=1 \\atop \\scriptstyle l\\neq f}^{n_2 } e_q^{kl } e_{qt } ( v_{0l}^{-1}v_l ) b_t^l\\right ] \\nonumber \\\\   & & \\times \\sum_{n , m=-1}^\\infty \\left [ e_q^{pf } e_{nm}\\left ( v_{0f}^{-1 } v_f{\\cal p}^{-1 } v_e^{-1}v_i\\right ) ( \\xi _ i)^{m+1 } + \\left ( \\frac{d}{d\\xi _ i}{\\cal p}^{-1 } v_e^{-1}v_i\\xi _ i \\right ) ^{-1}\\left ( { \\cal p}^{-1}v_e^{-1 } v_i\\xi _ i\\right ) ^2\\right .",
    "\\nonumber \\\\   & & \\times \\left .",
    "( \\frac{dv_j^{-1 } v_f\\gamma { \\cal p}^{-1}\\xi _ e}{d \\gamma { \\cal p}^{-1 } \\xi _ e}\\right ) ^2 e_n^{pj } e_{nm}(v_{0j}^{-1}v_j ) \\left ( v_j^{-1}v_f\\gamma { \\cal p}^{-1}v_e^{-1 } v_i\\xi _ i\\right ) ^{m+1}\\right ] \\nonumber \\\\   & & + v_c\\sum_{\\scriptstyle p=1\\atop \\scriptstyle p\\neq b , c}^{n_1}(-1)^p \\prod _ { \\scriptstyle k=1\\atop { \\scriptstyle k\\neq b , c\\atop \\scriptstyle k\\neq p}}^{n_1 } \\sum_{q , t=-1}^\\infty \\left [ \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq e}^{n_1 } e_q^{kl } e_{qt}(v_{0l}^{-1}v_l ) b_t^l + \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq f}^{n_2 } e_q^{ke } e_{qt}\\left ( v_{0e}^{-1}v_e{\\cal p } \\gamma v_f^{-1}v_l\\right ) b_t^l\\right ] \\nonumber \\\\   & & \\times \\sum_{n , m=-1}^\\infty \\left [ e_n^{pi } e_{nm}(v_{0i}^{-1}v_i ) ( \\xi _ i)^{m+1 } -\\left ( \\frac{d\\xi _ j}{d\\xi _ i}\\right ) ^{-1 } e_n^{pe } e_{nm } \\left ( v_{0e}^{-1}v_j\\right ) ( \\xi _ j)^{n+1 } \\right ] \\nonumber \\\\   & & \\times \\prod _ { \\scriptstyle k=1\\atop { \\scriptstyle k\\neq d , g , h\\atop \\scriptstyle k \\neq p}}^{n_2 } \\sum_{q , t=-1}^\\infty \\left [ \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l \\neq e}^{n_1 } e_q^{kf}e_{qt}\\left ( v_{0f}^{-1}v_f \\gamma { \\cal p}^{-1}v_e^{-1}v_l\\right ) b_t^l + \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq f}^{n_2 } e_q^{kl}e_{qt}(v_{0l}^{-1 } v_l)b_t^l\\right ] = 0\\ .\\end{aligned}\\ ] ]    if we now impose that these are the correct overlap equations between legs @xmath34 and @xmath50 of the composite vertex we then must have : @xmath296 what fixes the propagator as @xmath297 which is the same form of the propagator for the bosonic part , but now with the cyclings defined on the complete generators @xmath153 .",
    "the overlap equations now read @xmath298",
    "= 0\\ , \\\\   & & u_c\\left [ c^i(\\xi _ i)-\\left ( \\frac{d\\xi _ j}{d\\xi _ i}\\right ) ^{-1}c^j(\\xi _ j)\\right ] + v_c\\prod _ { \\scriptstyle k=1\\atop { \\scriptstyle k\\neq b , c\\atop \\scriptstyle k\\neq p}}^{n_1 } \\sum_{q , t=-1}^\\infty \\left [ \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq e}^{n_1}e_q^{kl } e_{qt}(v_{0l}^{-1}v_l)b_t^l+\\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq f}^{n_2}e_q^{ke } e_{qt}\\left ( v_{0e}^{-1}v_l\\right ) b_t^l\\right ] \\nonumber \\\\   & & \\times \\sum_{\\scriptstyle p=1\\atop \\scriptstyle p\\neq d , g , h}^{n_2}(-1)^p \\prod _ { \\scriptstyle k=1\\atop { \\scriptstyle k\\neq d , g , h\\atop \\scriptstyle k\\neq p}}^{n_2 } \\sum_{q , t=-1}^\\infty \\left [ \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq e}^{n_1}e_q^{kf } e_{qt}\\left ( v_{0f}^{-1}v_l\\right ) b_t^l+\\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq f}^{n_2 } e_q^{kl}e_{qt}(v_{0l}^{-1}v_l)b_t^l\\right ] \\nonumber \\\\   & & \\times \\sum_{n , m=-1}^\\infty \\left [ e_n^{pf}e_{nm}\\left ( v_{0f}^{-1}v_i\\right ) ( \\xi _ i)^{m+1}-\\left ( \\frac{d\\xi _ j}{d\\xi _ i}\\right ) ^{-1}e_n^{pj}e_{nm}(v_{0j}^{-1}v_j ) ( \\xi _ j)^{m+1 } \\right ] \\nonumber \\\\   & & + v_c\\sum_{\\scriptstyle p=1\\atop \\scriptstyle p\\neq b , c}^{n_1}(-1)^p\\prod _ { \\scriptstyle k=1\\atop { \\scriptstyle k\\neq b , c\\atop \\scriptstyle k\\neq p}}^{n_1}\\sum_{q , t=-1}^\\infty \\left [ \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq e}^{n_1}e_q^{kl}e_{qt}(v_{0l}^{-1}v_l ) b_t^l + \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq f}^{n_2}e_q^{ke}e_{qt}\\left ( v_{0e}^{-1 } v_l\\right ) b_t^l\\right ] \\nonumber \\\\   & & \\times \\sum_{n , m=-1}^\\infty \\left [ e_n^{pi}e_{nm}(v_{0i}^{-1}v_i)(\\xi _ i)^{m+1}-\\left ( \\frac{d\\xi _ j}{d\\xi _ i}\\right ) ^{-1}e_n^{pe}e_{nm}\\left ( v_{0e}^{-1}v_j\\right ) ( \\xi _ j)^{n+1 } \\right ] \\nonumber \\\\   & & \\times \\prod _ { \\scriptstyle k=1\\atop { \\scriptstyle k\\neq d , g , h\\atop \\scriptstyle k \\neq p}}^{n_2}\\sum_{q , t=-1}^\\infty \\left [ \\sum_{\\scriptstyle l=1\\atop \\scriptstyle l \\neq e}^{n_1}e_q^{kf}e_{qt}\\left ( v_{0f}^{-1}v_l\\right ) b_t^l+\\sum_{\\scriptstyle l=1\\atop \\scriptstyle l\\neq f}^{n_2}e_q^{kl}e_{qt}(v_{0l}^{-1}v_l)b_t^l\\right ] = 0\\ .\\end{aligned}\\ ] ] these are the overlap identities between legs @xmath34 and @xmath50 of the composite vertex @xmath161 .    from these overlap equations",
    "it is then possible to derive the form of the composite vertex .",
    "it is given by @xmath299 \\times \\prod_{r=-1}^1\\sum_{\\scriptstyle i=1\\atop \\scriptstyle i\\neq e , f}^{n_1+n_2}\\sum_{s=-1}^1e_{rs}(v_i)b_s^i \\nonumber \\\\   & & \\times \\prod_{\\scriptstyle i=1\\atop \\scriptstyle i\\neq b , c}^{n_1}\\sum_{n , m=-1}^\\infty \\left [ \\sum_{\\scriptstyle j=1\\atop \\scriptstyle j\\neq e}^{n_1}e_n^{ij}e_{nm}(v_{0j}^{-1}v_j ) b_m^j + \\sum_{\\scriptstyle j=1\\atop \\scriptstyle j\\neq f}^{n_2}e_m^{ie}e_{mn}\\left ( v_{0e}^{-1}v_j \\right ) b_n^j\\right ] \\nonumber \\\\ \\label{eq4.75 }   & & \\times \\prod_{\\scriptstyle i=1\\atop \\scriptstyle i\\neq d , g , h}^{n_2}\\sum_{n , m=-1}^\\infty \\left [ \\sum_{\\scriptstyle j=1\\atop \\scriptstyle j\\neq e}^{n_1}e_n^{if}e_{nm}\\left ( v_{0f}^{-1 } v_j\\right ) b_n^j + \\sum_{\\scriptstyle j=1\\atop \\scriptstyle j\\neq f}^{n_2}e_n^{ij}e_{nm } ( v_{0j}^{-1}v_j)b_m^j\\right ] \\",
    ".\\end{aligned}\\ ] ]    although this is the correct composite vertex for a general cycling , its ghost structure is not very apparent .",
    "we may use the explicit expression for the vectors @xmath151 @xcite : @xmath300 where @xmath301 and @xmath302 if we assume now that the cycling transformations @xmath303 and @xmath304 do not depend on the variables @xmath62 of vertex @xmath158 or @xmath305 of vertex @xmath247 , and if we have in mind that @xmath306 for any leg @xmath34 of vertex @xmath158 and a leg @xmath50 of vertex @xmath247 ( or vice - versa ) , then we have @xmath307 what simplifies things considerably .",
    "we shall call all cyclings that have such properties `` simple cycling - like '' . in this kind of cyclings ,",
    "each leg has its own ghost attached to it , with the exception of three of the legs which have no ghosts attached to them .",
    "we will now consider three cases separately : one in which none of the legs @xmath5 or @xmath6 have ghosts attached to them , one in which one of these legs ( say @xmath5 ) has a ghost attached to it , and a case where both legs ( @xmath5 and @xmath6 ) have ghosts attached to them .",
    "the composite vertex for the case where neither @xmath5 nor @xmath6 ( we choose @xmath308 and @xmath309 ) have ghosts attached is given by @xmath310 where @xmath311 is the vertex given by the first two terms of equation ( [ eq4.75 ] ) . for the case where leg @xmath5 has a ghost attached to it , but not leg @xmath6 ( we shall call @xmath309 ) , the composite vertex is given by @xmath312 in the last case , where both @xmath5 and @xmath6 have ghosts attached to them , we then have @xmath313 we can see that , for each case , the composite vertex has the correct ghosts number ( @xmath166 ) .",
    "using overlap identities , two vertices were sewn together in order to become a composite vertex .",
    "the calculations have been done with the correct ghost numbers for each vertex and the result has both brst invariance and the correct ghost counting .",
    "this work has been done in the department of mathematics , king s college london , university of london , under the supervision of professor p. c. west , and finished at the university of so paulo ( usp ) .",
    "the author wishes to thank professor west for suggesting , guiding and correcting this work and mrs .",
    "nanci romero for helping with the figures .",
    "my gratitude to capes and cnpq , brazil , for financial support . g.e.d . !"
  ],
  "abstract_text": [
    "<S> it is shown how to sew string vertices with ghosts at tree level in order to produce new tree vertices using the group theoretic approach to string theory . </S>",
    "<S> it is then verified the brst invariance of the sewn vertex and shown that it has the correct ghost number .    </S>",
    "<S> pacs number : 11.25    0.5 cm </S>"
  ]
}
{
  "article_text": [
    "given a region @xmath0 and a set of tiles  @xmath1 , decide whether  @xmath0 is tileable with copies of the tiles in  @xmath1 .",
    "this is a classical _ tileability problem _ , occupying a central stage in discrete and computational geometry . for general sets of tiles ,",
    "this is a foundational problem in computability  @xcite and computational complexity  @xcite . for domino tiles ,",
    "the problem is a special case of the _ perfect matching _ problem .",
    "it can be solved in polynomial time ; even the counting problem can be solved at the cost of matrix multiplication ( see e.g.  @xcite ) .    in  1990 , thurston pioneered a new approach to the subject based on the study of _ height functions _ , which can be viewed as integer maps on the regions  @xcite .",
    "thurston outlined a domino tileability algorithm which later has been carefully analyzed ( see  @xmath2[ss : fin - cs ] ) and significantly extended to many other tileability problems ( see  @xmath2[ss : fin - tile ] ) .    [ t : thurston ] let @xmath0 be a simply connected region in the plane  @xmath3 , and let @xmath4 be the area of @xmath0 .",
    "there exists an algorithm that decides tileability of  @xmath0 in time @xmath5 .",
    "this result is worth comparing to the classical hopcroft ",
    "karp algorithm which has @xmath6 time for testing whether a bipartite graph with @xmath7 vertices and bounded degree has a perfect matching .",
    "this general bound has been significantly improved in recent years ( see  @xmath2[ss : fin - match ] ) .",
    "note that for polynomial time problems the cost of the algorithm depends heavily on how the input is presented . in case of graphs ,",
    "the input is a list of vertices and edges , of size  @xmath8 . on the other hand ,",
    "the region @xmath0 is traditionally presented as a list of squares , thus of size @xmath9 .",
    "the main idea behind this work is that plane regions @xmath0 can be presented by the set of boundary squares .",
    "the input then has size @xmath10 , where @xmath11 is the perimeter of  @xmath0 .",
    "more economically , for simply connected  @xmath0 the input can be presented as a sequence of directed boundary edges right , up , left and down , starting at the origin . of course , in this case the boundary set of squares can be computed in time @xmath10 .",
    "either way , one can ask if in this presentation one can improve upon thurston s algorithm . here is our main result :",
    "[ t : main ] let @xmath0 be a simply connected region in the plane  @xmath3 , and let @xmath11 be the perimeter of @xmath0 .",
    "there exists an algorithm that decides tileability of  @xmath0 in time @xmath12 .",
    "the result gives the first improvement over thurston s algorithm in  25 years , and is nearly optimal in this presentation .",
    "clearly , the perimeter @xmath13 can be significantly smaller than  @xmath7 , so theorem  [ t : main ] improves upon thurston s for all regions with @xmath14 .",
    "let us note that thurston s algorithm not only decides domino tileability , but also constructs a domino tiling when the region is tileable .",
    "specifically , thurston shows that for every tileable region  @xmath0 there is a unique _ maximum tiling _",
    "@xmath15 , corresponding to the _ maximum height function _ of the region  @xmath0 .",
    "he then inductively computes @xmath16 in time @xmath17 .",
    "clearly , it would be unhelpful to match this result , since listing all dominoes requires @xmath18 time .",
    "however , we can do this in the following oracle model .",
    "a tiling @xmath1 of a region @xmath0 is said to be _ site - computable _ with a _ query cost _",
    "@xmath19 if after preprocessing , for every square @xmath20 , we can compute the adjacent square  @xmath21 of a domino in  @xmath1 in time  @xmath19 . see  @xmath2[ss : fin - oracle ] for the reasoning behind this model .",
    "[ t : main - inter ] let @xmath0 be a simply connected region in the plane  @xmath3 , and let @xmath11 be the perimeter of @xmath0 .",
    "if @xmath0 is tileable with dominoes , the maximum tiling @xmath15 is site - computable with a preprocessing time @xmath22 , and a query time @xmath23 .",
    "the rest of the paper is structured as follows . in the next lengthy section  [ s : tileability ]",
    "we present a criterion for domino tileability in terms of the height function on the boundary .",
    "the algorithm is presented in the following section  [ s : algorithm ] .",
    "we then show that similar results also hold for a triangular lattice ( section  [ s : other ] ) .",
    "we conclude with final remarks and open problems in section  [ s : fin ] .",
    "in this section we present necessary and sufficient conditions for the domino tileability of simply connected regions in @xmath24 . in the following section , we use these conditions to construct an algorithm for checking the tileability of a simply connected region . for the rest of this section",
    "we assume that @xmath24 is endowed with a chessboard coloring , such that the square with corners @xmath25 and @xmath26 is white .",
    "let @xmath27 be a simply connected region of @xmath24 such that the origin is on the boundary of @xmath27 and @xmath28 is a tiling of @xmath27 .",
    "a classic result ( for example , see fournier @xcite ) states that there exists a height function @xmath29 that corresponds to @xmath28 , and is defined as follows :    * @xmath30 , and * for an edge @xmath31 in @xmath28 , such that when crossing from @xmath32 to @xmath21 there is a white square to our left , we have @xmath33 .",
    "we denote by @xmath34 the points of @xmath35 that are on the boundary of @xmath27 . to obtain a height function @xmath36 , we start from @xmath25 and travel along the boundary .",
    "we begin by setting @xmath30 and then place a height value to each point that we visit , according to the second condition of the definition . that is , when we cross an edge from point @xmath32 to point @xmath21 ,",
    "if there is a white square to our left we set @xmath37 , and otherwise @xmath38 .",
    "if @xmath27 is not tileable , the final edge in our trip might not satisfy the condition .",
    "when this happens we say that @xmath34 has no valid height function .",
    "the following well known lemma characterizes the functions @xmath39 that are height functions of some tiling of  @xmath27 .",
    "[ le : correspondinghfunc ] let @xmath27 be a simply connected region of @xmath24 with the origin on its boundary , and let @xmath40 be the set of height functions that correspond to tilings of @xmath27 .",
    "then a function @xmath29 is in @xmath40 if and only if the following conditions hold .    1 .   for every @xmath41 such that @xmath42 , @xmath43 , and @xmath44 , we have @xmath45 .",
    "2 .   for every edge @xmath46",
    "such that when crossing from @xmath32 to @xmath21 there is a white square to our left , we have @xmath47 .",
    "3 .   for every edge @xmath48 , we have @xmath49 .",
    "one can also consider a tiling of the entire plane @xmath24 .",
    "lemma  [ le : correspondinghfunc ] remains valid for such tilings , with condition  ( ii ) becoming redundant . in this case , the set of height functions @xmath50 that are zero at a given point @xmath51 has a maximum element @xmath52 ( i.e. , for every @xmath53 , no height function @xmath54 satisfies @xmath55 ) that is defined as follows . for a point @xmath56 , we write @xmath57 and set @xmath58 . if @xmath59 , then @xmath60 if @xmath61 , then @xmath62 it is easy to see that @xmath52 satisfies conditions  ( i ) and  ( iii ) of lemma  [ le : correspondinghfunc ] , and is thus a height function that corresponds to a tiling of @xmath35 .",
    "examples of maximal tilings that correspond to @xmath52 are depicted in figure  [ fi : maximal ] ( left and center ) .     and",
    "correspond to the height function @xmath63 .",
    "right : geodesic paths between @xmath32 and  @xmath21 . ]",
    "we say that a sequence of points @xmath64 is a _ geodesic path _",
    "if    * for every @xmath65 , we have @xmath66 + 1 . * for every @xmath65 , the points @xmath67 and @xmath68 are corners of a common @xmath69 square in @xmath24 .",
    "the right part of figure [ fi : maximal ] depicts several geodesic paths between the same pair of points .",
    "one key observation in our proofs is that @xmath52 is strictly increasing on any geodesic path @xmath70 . by the conditions of lemma [ le : correspondinghfunc ] , for any @xmath71 and height function @xmath72 that is defined on @xmath73 and @xmath68 , there are exactly two possible values for @xmath74",
    ". one of these two values is negative , and the other is @xmath75 .",
    "that is , for any height function @xmath72 we have @xmath76 .",
    "another useful observation is that for every geodesic path @xmath70 and @xmath77 , we have that @xmath78 and @xmath79 are also geodesic paths . by combining this with the previous observation , we notice that @xmath80 is additive on geodesic paths .",
    "that is , if @xmath70 is a geodesic path and @xmath77 , then @xmath81 .    for a simply connected region @xmath27 and two points @xmath41",
    ", we write @xmath82 if there exists a geodesic path between @xmath32 and  @xmath21 that is fully in  @xmath27 .",
    "the following lemma gives a necessary and sufficient condition for the tileability of a simply connected region  @xmath27 .",
    "this condition depends only on the height differences between pairs of points on the boundary @xmath34 .",
    "[ l : necessary ] let @xmath27 be a simply connected region of @xmath24 that contains the origin and let @xmath83 be a valid height function of @xmath34 .",
    "the region @xmath27 is tileable if and only if for every pair @xmath84 that satisfies @xmath82 , we have @xmath85    we first prove that the condition is necessary .",
    "assume that @xmath27 is tileable and extend the domain of @xmath72 to all of @xmath27 according to a specific tiling of @xmath27 .",
    "let @xmath86 be a geodesic path between two points @xmath87 ( that is , @xmath88 and @xmath89 ) .",
    "recall that for every @xmath90 we have @xmath91 , which implies @xmath92 since @xmath93 , we get that @xmath94 .",
    "a symmetric argument implies @xmath95 , which completes this part of the proof .",
    "we next prove that the condition of the lemma is sufficient .",
    "for that , we show that the function @xmath96\\ ] ] satisfies the three conditions of lemma  [ le : correspondinghfunc ] ( with respect to @xmath27 ) . for condition",
    "( ii ) , it suffices to show that for every @xmath97 we have @xmath98 ( since @xmath72 satisfies this condition by definition ) .",
    "consider such a point @xmath97 . in the definition of @xmath99 in , if the minimum is obtained by @xmath21 , then @xmath100 .",
    "assume for contradiction that the minimum is not obtain by @xmath21 , but rather by a point @xmath101 for which @xmath82 .",
    "assuming that the condition of the lemma holds , we have @xmath102 which contradicts @xmath21 not leading to the minimum value .",
    "thus , for every @xmath97 we have @xmath98 , and condition  ( ii ) is satisfied by @xmath103 .    for every @xmath104 , the function @xmath105 satisfies condition  ( i ) since both @xmath72 and @xmath52 are height functions . since @xmath98 for every @xmath97 , the function @xmath103 satisfies condition  i(i ) on @xmath34 .",
    "this `` forces '' the various functions @xmath52 to be identical @xmath106 on @xmath34 , and thus all over @xmath27 .",
    "that is , for any @xmath97 the expression @xmath107 does not depend on the choice of @xmath104 .",
    "this in turn implies that @xmath103 satisfies condition  ( i ) .",
    "it remains to prove that @xmath103 satisfies condition  ( iii ) ; that is , to show that for every pair of adjacent points @xmath108 , we have @xmath109 .",
    "if both @xmath32 and @xmath21 are in @xmath34 , this is immediate from condition  ( ii ) .",
    "thus , without loss of generality , we assume that @xmath32 is in the interior of @xmath27 .",
    "let @xmath110 satisfy @xmath111 and let @xmath112 be a geodesic path from @xmath113 to @xmath32 that is contained in @xmath27 .",
    "let @xmath73 be the last vertex in @xmath114 that is on @xmath34 , and notice that @xmath115 is a geodesic path from @xmath73 to @xmath32 .",
    "since @xmath116 has the maximum increase rate that any height function may have , we obtain that @xmath117 .",
    "since @xmath118 does not contain edges of @xmath34 , there must exist a geodesic path from @xmath73 to @xmath21 .",
    "the length of this path can not be longer than @xmath118 by more than one step ( e.g. , see figure [ fi : paths ] ) , which immediately implies @xmath119 . a symmetric argument yields @xmath120 , and completes the proof of condition  ( iii ) .",
    "is adjacent to the interior point @xmath32 , then a geodesic path from @xmath121 to @xmath32 implies a geodesic path of a similar length from @xmath121 to @xmath21 . ]    for points @xmath87 , we denote by @xmath122 the set of points in @xmath35 that are in at least one geodesic path between @xmath32 and  @xmath21 . notice that @xmath122 is a rectangle with edges of slopes  @xmath123 , possibly with two opposite corners truncated ; for example ,",
    "see the right part of figure [ fi : maximal ] .",
    "let @xmath124 be a set that contains @xmath34 and any number of points from the interior of  @xmath27 .",
    "we write @xmath125 if @xmath126 and @xmath127 is disjoint from  @xmath124 .",
    "the following theorem is a refinement of lemma  [ l : necessary ] , which reduces the number of point pairs that determine whether a region is tileable .",
    "[ tilability ]",
    "let @xmath27 be a simply connected region of @xmath24 that contains the origin , let @xmath83 be a valid height function , and let @xmath128 be a subset that contains @xmath34 .",
    "the region @xmath27 is tileable if and only if there exists a function @xmath129 such that @xmath130 on @xmath34 and for every pair @xmath126 that satisfies @xmath131 , we have @xmath132    we first prove that the condition is necessary .",
    "assume that @xmath27 has a tiling @xmath1 and let @xmath133 be corresponding height function . by definition , @xmath130 on @xmath34 and @xmath134 satisfies for every @xmath87 with @xmath135 .",
    "for every pair @xmath136 for which @xmath131 there exists a geodesic path @xmath64 in @xmath27 with @xmath137 and @xmath138 .",
    "as in the proof of lemma [ l : necessary ] , we have @xmath139 a symmetric argument implies @xmath140 , which completes the proof of this part .    to prove that the condition of the theorem is sufficient , we show that it implies the condition of lemma  [ l : necessary ] .",
    "that is , if a function @xmath134 satisfies for every pair @xmath136 with @xmath131 , then the same condition is also satisfied for every pair @xmath141 with @xmath82 .",
    "consider a pair @xmath142 such that @xmath82 .",
    "we prove that holds for @xmath143 by induction on @xmath144 .",
    "since @xmath145 , this would complete the proof of the theorem .",
    "for the induction basis , consider the case where @xmath146 . in this case",
    "we have @xmath125 , so is satisfied for @xmath143 by the definition of @xmath134 .    for the induction step , consider the case where @xmath147 . in this case , either @xmath131 and is satisfied by the definition of @xmath134 , or there exists a geodesic path @xmath112 between @xmath32 and  @xmath21 that is in @xmath27 and intersects @xmath148 . in the latter case ,",
    "let @xmath73 be a vertex of @xmath114 that is in @xmath148 .",
    "then @xmath149 is a geodesic path between @xmath32 and @xmath73 and @xmath150 is a geodesic path between @xmath73 and  @xmath151 . by the induction hypothesis",
    ", we have @xmath152 by combining these two inequalities we get @xmath153 .",
    "since @xmath114 is obtained by combining a geodesic path from @xmath32 to @xmath73 together with a geodesic path from @xmath73 to @xmath21 , we have @xmath154 , which in turn implies @xmath155 .",
    "a symmetric argument implies @xmath156 , which completes the induction step and the proof of the theorem .",
    "in this section we prove theorems  [ t : main ] and  [ t : main - inter ] .",
    "first , we present an algorithm for checking whether a simply connected region @xmath27 is tileable .",
    "the algorithm is based on partitioning @xmath27 into interior - disjoint squares of various sizes .",
    "these squares have their vertices in @xmath35 , but are `` rotated by @xmath157 '' in the sense that the slopes of their edges are 1 and -1 . to cover @xmath27 with such squares , along the boundary of @xmath27 we use right - angled triangles with two edges of length 1 , instead of squares ; for example , see figure [ fi : subdivision ] .",
    "we consider the set @xmath124 that consists of @xmath34 together with the vertices of the rotated squares . by theorem [ tilability ] , to check whether @xmath27 is tileable it suffices to compare between pairs @xmath126 that satisfy @xmath131 .",
    "we will prove that each point of @xmath124 participates in at most eight such pairs , which would in turn imply that total number of pairs that satisfy @xmath131 is at most linear in the perimeter of  @xmath27 .",
    "we begin with the following technical result .",
    "[ th : subdivision ] let @xmath27 be a simply connected region with @xmath158 .",
    "then there exists a subdivision @xmath124 of @xmath27 into @xmath159 interior - disjoint rotated squares and right - angled triangles with two edges of length 1 .",
    "such a subdivision can be found in @xmath160 time .",
    "we prove the theorem by presenting an algorithm that receives a simply connected region @xmath27 with perimeter @xmath161 and constructs a subdivision @xmath124 of @xmath27 in time @xmath22 .",
    "the subdivision @xmath124 consists of @xmath159 rotated squares and right - angled triangles with two edges of length 1 .",
    "all of the squares in this proof are rotated by @xmath157 .",
    "we begin the algorithm by initializing several variables .",
    "set @xmath162 where @xmath163 ( respectively , @xmath164 ) is a set in which we place squares that are fully on the inside of @xmath27 ( resp .",
    ", fully on the outside of @xmath27 ) .",
    "let @xmath7 be the smallest power of @xmath165 that is larger or equal to @xmath166 , consider an @xmath167 square that fully contains @xmath27 , and let @xmath168 be a set that contains only this square .",
    "we repeat the following process for @xmath169 iterations :    * at the beginning of iteration @xmath170 we consider the set @xmath171 , which contains interior - disjoint squares of size @xmath172 that were obtained in the preceding iteration .",
    "we partition each of these squares into four interior - disjoint squares of size @xmath173 .",
    "denote the set of these @xmath174 squares as @xmath175 . for each square of @xmath175",
    ", we record the four squares of @xmath176 that share a boundary with it ( some of these might not be squares but the area outside of the square of @xmath168 ) . this can be done in constant time by using the information that was stored in the previous iteration for the squares of @xmath177 .",
    "* we travel across @xmath34 .",
    "every time that we enter a square @xmath178 , we mark the point from which we entered @xmath179 , mark what side of this boundary point of @xmath179 is the interior of @xmath27 , and insert @xmath179 into @xmath180 . * for every square @xmath181 , we check whether @xmath179 is in the interior or in the exterior of @xmath27 ( see below for the full details of this process ) .",
    "if @xmath179 is in the interior , we add @xmath179 to @xmath163 . otherwise , we add it to @xmath164 .",
    "after @xmath182 iterations , we have a set @xmath163 of interior - disjoint squares that are fully contained in @xmath27 and a set @xmath183 of @xmath184 squares whose interior is intersected by @xmath34 .",
    "we split every square @xmath185 into four right - angled triangles and insert into @xmath124 the triangles that are in the interior of @xmath27 ( out of the four triangles , betweein one and three are in the interior ) .",
    "after also inserting @xmath163 into @xmath124 , the set @xmath124 is a subdivision of @xmath27 into interior - disjoint squares and right - angled triangles .    we now explain how , at the end of the @xmath170-th iteration , we go over each square @xmath181 and check whether @xmath179 is in the interior or in the exterior of @xmath27 .",
    "we go over the squares of @xmath186 in an arbitrary order .",
    "when considering a square @xmath187 , we already know which squares of @xmath188 share a boundary with @xmath179 .",
    "notice that there exists a unique square in each side , and that these four squares may be of different sizes .",
    "* if one of the four surrounding squares is in @xmath163 , we add @xmath179 to @xmath163 . * otherwise , if one of the four surrounding squares is in @xmath164 , we add @xmath179 to @xmath164 . * otherwise , if one of the four neighboring squares @xmath189 is in @xmath180 , we travel along the boundary of @xmath189 until we get to an intersection with the border of @xmath27 ( we marked these intersection points when inserting @xmath189 to @xmath180 ) . for each such intersection point",
    "we previously marked which side is the interior of @xmath27 , and we can use this information to determine whether @xmath179 is on the outside or on the inside of @xmath27 ( and then place @xmath179 accordingly in @xmath163 or in @xmath164 ) .",
    "* we remain with the case where the four neighboring squares are currently in @xmath190 . in this case",
    ", we arbitrarily choose one of these four neighbours @xmath189 and add @xmath179 to the `` waiting list '' of @xmath189 ( see below for the purpose of this list ) .",
    "if several squares of @xmath186 form a connected component , then either all of these squares are in the interior of @xmath27 or all of these square are in the exterior of @xmath27 .",
    "thus , each time that we decide whether a square @xmath181 goes into @xmath163 or into @xmath164 , we inspect the waiting list of @xmath179 and place the squares that are in it in the same @xmath191 ( we then have to check the waiting lists of each of these squares , and so on ) .      notice",
    "that @xmath192 , so for any asymptotic bound that we derive with respect to @xmath7 , we may replace @xmath7 with @xmath161 . to show that the running time of the algorithm is @xmath160 , we require following lemma .    [",
    "le : sicard ] @xmath193 .",
    "partition the square of @xmath168 into @xmath194 interior - disjoint squares of size @xmath173 , and denote the set of these squares as @xmath195 .",
    "notice that @xmath196 .",
    "specifically , @xmath180 consists of the squares of @xmath195 that are intersected by @xmath34 .",
    "we traverse @xmath34 starting from an arbitrary point @xmath197 . during this process",
    "we will mark fewer than @xmath198 squares , so that the marked squares fully contain the boundary of @xmath27 .",
    "this would immediately imply @xmath193 .",
    "we first mark a square of @xmath195 that contains @xmath197 ( there are at most four such squares ) , and the eight squares that surround it ( i.e. , share a vertex with it ) .",
    "we then continue to travel across the boundary of @xmath27 until we get to a point @xmath199 that is not contained in any marked square .",
    "we mark a square of @xmath200 that contains @xmath199 and the eight squares surrounding it ( some of these squares are already marked , and remain so ) .",
    "we then continue to travel until we reach a point @xmath201 that is not in any marked square .",
    "we continue in the same manner until we return to @xmath197 .",
    "notice that each time that we get to a point @xmath202 that is in no marked square , we mark fewer than nine unmarked squares . after marking these squares , we travel at least @xmath203 steps along @xmath34 before we reach @xmath204 .",
    "since @xmath34 is of length @xmath205 , the total number of marked squares is smaller than @xmath198    the algorithm consists of @xmath169 iterations .",
    "let us show that each iteration has a running time of @xmath206 , which would complete the proof of the theorem .",
    "consider the running time of the @xmath170-th iteration .",
    "by lemma [ le : sicard ] , we start this iteration with a set @xmath171 of @xmath207 squares , and partition it into a set @xmath208 of @xmath207 squares . for each new square",
    "we also record the four squares of @xmath176 that are its direct neighbors . since handling each square of @xmath208",
    "requires constant time , this step takes @xmath209 time .",
    "we then travel the boundary of @xmath27 , and every time that we cross to a different square of @xmath208 we perform a constant number of operations ( marking the entry point and possibly inserting the square into @xmath180 ) . by considering the origin to be the bottom left corner of the square of @xmath168 , we can easily decide when we enter a new square of @xmath208 .",
    "this occurs exactly when the @xmath32 or @xmath21 coordinate of our current position becomes @xmath210 .",
    "thus , the entire traversal of the boundary of @xmath27 takes @xmath206 time .",
    "the last part of the @xmath170-th iteration involves going over each square @xmath181 and checking whether @xmath179 is fully in the interior or in the exterior of @xmath27 .",
    "this check is based on the the four squares that surround @xmath179 .",
    "the only case that takes more than a constant time occurs when none of these squares is in @xmath163 and @xmath164 , while at least one is in @xmath180 . in this case",
    "we travel along the boundary of such a neighboring square .",
    "the perimeter of such a square is @xmath211 , so each instance of this case takes @xmath212 times . by lemma [ le : sicard ] , @xmath213 and we consider each square of @xmath180 at most four times ( at most once for each of its four direct neighbors ) .",
    "thus , the combined time of all of these checks is @xmath206 .",
    "the only issue that we did not consider so far is the time required to handle the waiting lists .",
    "since each square of @xmath208 is in at most one such list , and since @xmath214 , the total time for handling the waiting lists is @xmath215 .",
    "finally , it is easy to see that the last step of the algorithm , of cutting the squares of @xmath216 into triangles , requires @xmath206 time .",
    "this completes the proof .      by lemma [ le : sicard ] ,",
    "in the @xmath170-th iteration the algorithm adds fewer than @xmath193 squares to @xmath163 . summing this quantity over the @xmath218 iterations of the algorithm yields @xmath219 , as asserted .",
    "some of these squares may be split into two triangles , but this does not affect the asymptotic size of @xmath124 .",
    "we begin by running the algorithm of theorem  [ th : subdivision ] , to obtain a subset @xmath220 of @xmath159 interior - disjoint squares and triangles that cover @xmath27 .",
    "we build a graph @xmath221 , where @xmath222 consists of the points of @xmath34 and the vertices of the squares and triangles of @xmath124 .",
    "an edge @xmath223 is in @xmath224 if and only if @xmath125 .",
    "notice that @xmath225 .",
    "we now prove that every vertex of @xmath226 is of degree at most eight .",
    "that is , that any point @xmath227 satisfies @xmath125 for at most eight points @xmath228 .",
    ", it is blocked by triangles .",
    "( b ) the point @xmath32 is the corner of three squares and one pair of triangles of @xmath124 . ]",
    "we first consider the case where @xmath104 , which forces @xmath32 to be adjacent to triangles of @xmath124 ( and to at most one square ) ; for example , see figure [ fi : degreetriangle](a ) .",
    "we say that @xmath32 forms a _",
    "valid pair _ with @xmath229 if @xmath125 . in the current case , @xmath32 forms a valid pair with vertices that are are in a common triangle with it .",
    "moreover , @xmath32 forms a valid pair with a point @xmath229 that does not share a triangle with it if and only if the straight - line segment between @xmath32 and  @xmath21 is fully in the interior of  @xmath27 , does not contain any other points of @xmath222 , and has a slope  @xmath123 . thus , in this case @xmath32 participates in at most seven valid pairs .",
    "next , consider the case where @xmath230 and is at the corner of four squares and/or pairs of triangles of @xmath124 ; for example , see figure [ fi : degreetriangle](b ) . as before",
    ", @xmath32 creates a valid pair with each vertex of @xmath222 that shares a triangle with @xmath32 .",
    "the maximum degree of eight is obtained when @xmath32 is surrounded by four pairs of triangles . if @xmath32 is a vertex of a square @xmath231 , denote the two edges of  @xmath179 that are adjacent to @xmath32 as @xmath232 and  @xmath233 . notice that @xmath32 creates a valid pair with the point of @xmath222 that is closest to it along @xmath232 and with the point of @xmath222 that is closest to it along  @xmath199 .",
    "for example , in the case of the square to the right of @xmath32 in figure [ fi : degreetriangle](b ) , these vertices are @xmath234 and  @xmath235 .    beyond the valid pairs that are described in the previous paragraph",
    ", @xmath32 can not create a valid pair with any other point of @xmath222 .",
    "for example , in figure [ fi : degreetriangle](b ) @xmath32 can not form a valid pair with any additional vertex @xmath113 that is to its right , since there must be a geodesic path between @xmath32 and  @xmath113 that contains either @xmath234 or  @xmath235 .     is on the boundary of a square @xmath231 without being a vertex of @xmath179 . ]    finally , it is possible that @xmath230 and @xmath32 is on the boundary of a square @xmath231 without being a vertex of @xmath179 ; for example , see figure [ fi : degreesquare2 ] . in the figure , @xmath32 does not form a valid pair with @xmath236 , @xmath237 , and @xmath238 , due to geodesic paths that contain @xmath239 . while @xmath240 , we have @xmath241 due to a geodesic path that contains @xmath235 .",
    "similarly , @xmath242 due to @xmath121 . by the way in which we perform our subdivision of @xmath27 into squares , it is impossible to have a subdivision where @xmath32 but without @xmath121 ( that is , the square below @xmath32 can not exist without the square to the right of @xmath32 .",
    "the latter square may be further subdivided ) . similarly , @xmath121 forms a valid pair with @xmath243 but not with @xmath235 , @xmath234 , and the vertices to the right of @xmath243 .",
    "the examples in the previous paragraph illustrate a general principle : when @xmath32 is on the boundary of a square @xmath231 without being a vertex of @xmath179 , out of the points @xmath229 for which the segment @xmath244 intersects the interior of @xmath179 , at most one point creates a valid pair with @xmath32 .",
    "specifically , such a point @xmath21 creates a valid pair with @xmath32 if and only if the segment @xmath244 has slope 1 or -1 , does not contain any other point of @xmath124 , and is fully in @xmath27 .",
    "thus , in this case @xmath32 is of degree at most six ( and this degree is obtained when @xmath32 is adjacent to two pairs of right - angled triangles ) .      by the above degree restriction",
    ", we have @xmath245 .",
    "to build @xmath224 , we go over each vertex of @xmath246 and look for the other points of @xmath222 that form a valid pair with @xmath32 . by considering the above cases",
    ", we notice that if @xmath32 forms a valid pair with @xmath229 , then either @xmath32 and @xmath21 are on a common triangle of @xmath124 or the segment @xmath244 has slope of 1 or -1 and no other points of @xmath222 on it . to handle the former case , we simply go over every triangle in @xmath124 and add its three edges to  @xmath224 .    for every line @xmath247 of slope 1 that contains points of @xmath222",
    ", we keep an array of the points of @xmath222 that are on @xmath247 , sorted by their @xmath32-coordinate .",
    "there are @xmath159 lines with a total of @xmath159 points on them .",
    "thus , the arrays can be built in @xmath160 time .",
    "we then go over every array and add an edge between every two adjacent points on it , with the following exception . if we get to a point @xmath248 on @xmath247 , we check whether @xmath247 leaves @xmath27 in @xmath32 and if so do not add the edge that intersects the outside of  @xmath27 .",
    "we repeat the same process for lines with slope -1 , which completes the construction of  @xmath224 .",
    "notice that this construction takes @xmath160 time .    by theorem [ tilability ]",
    ", @xmath27 is tileable if and only if there exists a height function @xmath249 that satisfies for every @xmath250 with @xmath251 .",
    "we now describe an algorithm for finding such a function @xmath134 ( or stating that such a function does not exist ) in @xmath22 time . specifically , out of the set of functions that satisfy the above condition we find the maximum function @xmath103 defined in  .",
    "we begin the algorithm by initializing several variables .",
    "let @xmath83 be a valid height function .",
    "the beginning of section [ s : tileability ] explains how to find such a function in @xmath159 time ( if such a function does not exist , we stop the algorithm and announce that @xmath27 is not tileable ) .",
    "let @xmath252 be an array with a cell for every point @xmath253 , such that eventually we would have @xmath254=g(x)$ ] ( that is , @xmath252 would describe @xmath134 ) .",
    "we initially place `` n '' in each cell of @xmath252 , to state that @xmath134 is currently undefined for the point that corresponds to the cell .",
    "then , for every @xmath104 we set @xmath254=h(x)$ ] .",
    "let @xmath255 be a heap with an element for every point of @xmath124 ( a standard binary heap would suffice ) .",
    "for each @xmath253 with @xmath254=\\text{n}$ ] , the key @xmath256 $ ] of @xmath32 is the maximum integer value for @xmath257 that does not violate with points that already have a value in @xmath252 . at first",
    ", we insert every point of @xmath124 to @xmath255 with key @xmath256=\\infty$ ] .",
    "every time that we update a cell @xmath254 $ ] ( including during the above initialization of the points of @xmath34 in @xmath252 ) , we remove @xmath32 from @xmath255 and update the keys of each @xmath258 that is adjacent to @xmath32 in @xmath226 ( that is , for which @xmath259 ) ; specifically , for every such @xmath21 we set @xmath260= \\min\\ts\\ { h[y ] , a[x]+\\alpha ( x , y ) \\}$ ] .",
    "notice that setting a value in a cell of @xmath252 leads to updating at most eight elements of @xmath255 .",
    "the main part of the algorithm consists of repeating the following process until the heap @xmath255 is empty and no cell of @xmath252 contains the undefined value n. let @xmath32 be the point with the smallest key @xmath261 in @xmath255 .",
    "we set @xmath254=k$ ] , remove @xmath32 from @xmath255 , and update the keys of points that are adjacent to @xmath32 in @xmath226 as described above .",
    "we then go over the vertices that are adjacent to @xmath32 in @xmath226 and already have values in @xmath252 .",
    "for each such vertex @xmath21 , we check whether @xmath32 and @xmath21 satisfy . if not , then we stop the algorithm and announce that @xmath27 is not tileable .",
    "if the above process ended since the heap @xmath255 is empty and no cell of @xmath252 contains the undefined value n , then we obtain a function @xmath134 that satisfies . in this case , we announce that @xmath27 is tileable .      to prove that the algorithm is correct , it suffices to prove that the function @xmath134 that the algorithm computes is indeed the maximum height function @xmath103 from ( although defined only on the points of @xmath124 ) . by theorem [ tilability ]",
    ", @xmath27 is tileable if and only if such a function exists .",
    "we first claim that for each @xmath262 , there exists a point @xmath253 such that @xmath125 and @xmath263 . indeed ,",
    "if no such @xmath32 exists then the algorithm would have assigned a larger value to @xmath264 after removing @xmath21 from @xmath255 .",
    "since @xmath265 when @xmath266 , we obtain that @xmath134 has no local minimum ( with respect to the edges of @xmath226 ) outside of @xmath34 .",
    "specifically , a straightforward induction on the ( edge ) distance of @xmath32 from @xmath34 shows that for every @xmath21 in the interior of @xmath27 there is a path @xmath70 in @xmath226 such that @xmath267 , @xmath268 , and @xmath269 for every @xmath270 .",
    "we show that @xmath271 on @xmath124 by induction on the number of values that the algorithm already set in @xmath252 . for the induction basis ,",
    "the claim follows by definition for every point of @xmath34 . for the induction step ,",
    "assume that in the @xmath170-th iteration of the algorithm the point @xmath272 is chosen , since it has a minimum key in @xmath255 . by the induction hypothesis",
    ", this key is @xmath273 \\. = \\. \\min _ { } \\. \\bigl(a[x ] + \\alpha(x , y)\\bigr )   \\. = \\. \\min _ { } \\ , \\bigl(h_{\\max}(x)+\\alpha(x , y)\\bigr),\\ ] ] where the minima are over all @xmath32 s.t .",
    "@xmath251 and @xmath254 \\neq \\text{n}$ ] .",
    "from above , there exists a path @xmath274 in @xmath226 such that @xmath267 , @xmath268 , and @xmath269 for every @xmath270 .",
    "that is , @xmath260 = h(x_n)+\\alpha(x_n , y)$ ] . by inspecting the definition of @xmath103 in ,",
    "we notice that to have @xmath275 it remains to prove that there is no point @xmath110 such that @xmath276 . a priori",
    ", this can only happen if the value @xmath277 was not yet discovered by the algorithm since some geodesic path between @xmath21 and  @xmath113 contains a point @xmath278 that is still in the heap  @xmath255 .    to see why the problematic scenario is impossible , notice that in the @xmath170-th iteration the key of every point @xmath32 that is still in @xmath255 is at least @xmath279 ; otherwise we would have removed @xmath32 from @xmath255 before removing @xmath21 .",
    "while some of these keys may be decreased in following steps of the algorithm , no key will be decreased to a value that is smaller than @xmath280 .",
    "thus , when removing @xmath281 from @xmath255 , we have @xmath282\\ge h(x_n)+\\alpha(x_n , y)$ ] .",
    "this in turn implies @xmath283 .",
    "that is , the problematic scenario can not occur , and the correctness proof is complete .",
    "as already mentioned , obtaining @xmath124 requires @xmath160 time , building @xmath226 requires @xmath160 time , and @xmath72 is computed in @xmath159 time . computing @xmath134 ( that is , computing @xmath252 ) requires @xmath159 steps .",
    "every step involves a constant number of operations .",
    "most of these operations require a constant time , except for removing the minimum element from the heap and updating the keys of at most eight other elements .",
    "each such operation takes @xmath284 time , so computing @xmath134 requires @xmath160 time .",
    "we begin by describing the preprocessing step . in this step ,",
    "we first run the algorithm of theorem [ t : main ] , to obtain a subset @xmath220 of vertices of @xmath159 interior - disjoint squares and triangles that cover @xmath27 .",
    "we also obtain the values of the maximum height function for the points of @xmath124 . as stated in theorem [ t : main ] , this can be done in @xmath160 time .",
    "we then preprocess the subdivision of @xmath27 for point location queries ( see e.g.  @xcite ) . specifically , after a preprocessing time of @xmath159 , for any point @xmath285 we can find the square or triangle that contains  @xmath32 in @xmath286 time .",
    "we now move to describe the query step , where we are given a query point @xmath285 .",
    "first , we consider the case where @xmath32 is not on the boundary of any square in the subdivision of @xmath27 . by using the point location algorithm",
    ", we find the square that contains @xmath32 in @xmath286 time .",
    "we then partition this square into four subsquares of equal size , and add the vertices of these subsquares into @xmath124 .",
    "there are at most five new vertices , and we compute the height value of each in @xmath286 time , as in the proof of theorem [ t : main ] ( using the @xmath159 arrays that we built in that proof ) . out of the four subsquares , we find the one that contains @xmath32 ( again , assuming that @xmath32 is not on the boundary of any of them ) and subdivide it into four squares as before .",
    "we repeat this process until @xmath32 is surrounded by eight vertices of @xmath124 , as in figure [ fi : addedsquares ] .",
    "we then have the height values of @xmath32 and of the eight vertices that surround it . by the conditions of lemma [ le : correspondinghfunc ] this implies the behavior of the maximum tiling of @xmath27 around @xmath32 .",
    "are solid , while the edges that are added in the subdivision steps of the query are dashed . ]",
    "if at some point during the above process @xmath32 is on the boundary of a square , we continue the subdivision process with two other points  the one immediately above @xmath32 and the one immediately below @xmath32 .",
    "notice that such a split from @xmath32 into two other points can occur at most once , and that at the end of the process we still obtain the height values of @xmath32 and the eight vertices that surround it .    in summary ,",
    "the query algorithm stops after @xmath286 steps , each taking @xmath286 time .",
    "thus , handling a query requires @xmath23 time .",
    "we believe that with slight modifications the running time of the query can be improved to @xmath286 , but chose not to pursue this direction at this point .",
    "the results of this paper can be extended to other lattices , and specifically to _ lozenge tilings _ in the triangular grid , which are dual to perfect matchings in a _",
    "hexagonal grid_. in this section we present a brief outline for how to extend our result to the case of lozenge tilings .",
    "once again we follow thurston , who defined the corresponding height function in the original paper  @xcite ( see also  @xcite ) .",
    "let @xmath287 be the triangular grid with a fixed coloring of the vertices in black , red , and blue , such that every edge is adjacent to two vertices of different colors ( see figure [ fi : coloring ] ) .",
    "let @xmath197 be a vector of length 1 in the positive direction of the @xmath32-axis , let @xmath199 be @xmath197 rotated counterclockwise by @xmath288 , and let @xmath201 be @xmath197 rotated clockwise by @xmath288 .",
    "every point of @xmath287 can be written as @xmath289 ( where @xmath290 are non - negative integers ) in infinitely many ways .",
    "for example , the origin can be written as @xmath291 for every non - negative @xmath292 . however , after adding the condition @xmath293 , for every point @xmath161 of @xmath287 there is a unique way of writing @xmath161 as @xmath289 . using these unique values of @xmath290",
    ", we say that the coordinates of @xmath161 are @xmath294 .",
    "let @xmath27 be a simply connected region in  @xmath287 .",
    "similarly to the characterization of height functions for domino tilings in lemma [ le : correspondinghfunc ] , a function @xmath295 is the height function of a lozenge tiling if and only if :    1 .",
    "for every two vertices @xmath41 , we have @xmath296 if and only if @xmath32 and @xmath21 have the same color .",
    "2 .   for every edge @xmath46 with respective colors ( black , red ) , ( red , blue ) , or ( blue , black )",
    ", we have @xmath47 .",
    "3 .   for every edge @xmath48",
    ", we have @xmath297 .    also as in the case of domino tilings , for any @xmath285 there exists a maximal height function of the plane @xmath80 with @xmath298 .",
    "specifically , @xmath299 is defined as the sum of the three coordinates of @xmath21 when considering @xmath32 as the origin . in the triangular grid , we say that a sequence of points @xmath64 is a geodesic path if    * for every @xmath65 , we have @xmath300 + 1 . * for every @xmath65 , the points @xmath67 and @xmath68 are corners of a common @xmath69 triangle in @xmath287 .",
    "unlike the case of @xmath35 , in the triangular grid geodesic paths do not necessarily minimize the number of edges .",
    "moreover , when travelling along a geodesic path , we only move in the directions @xmath301 ( since moving in one of the other three directions will result in a step of distance 2 ) .",
    "specifically , every geodesic path uses at most two of these three directions . as before , for @xmath302 we denote by @xmath122 the union of the geodesic paths between @xmath32 and  @xmath21 .",
    "it is not difficult to verify that @xmath122 is always a parallelogram ( possibly of width zero ) .",
    "let @xmath124 be a set that contains @xmath34 and any number of points from the interior of  @xmath27 .",
    "we write @xmath125 when @xmath126 and @xmath127 is disjoint from  @xmath124 .",
    "the following theorem is the lozenge tiling analogue of theorem [ tilability ] .",
    "[ tilability2 ] let @xmath27 be a simply connected region in @xmath287 that contains the origin and let @xmath128 be a set that contains @xmath34",
    ". then @xmath27 is tileable if and only if there exists @xmath129 such that @xmath130 on @xmath34 and for every pair @xmath136 with @xmath131 we have @xmath303    the proof of theorem [ tilability2 ] follows verbatim the proof of theorem  [ tilability ] .",
    "we omit the details .",
    "similarly , we can use a variant of theorem [ th : subdivision ] to find a subdivision of @xmath27 into @xmath159 interior - disjoint triangles of various sizes .",
    "the main difference is that here we use equilateral triangles with side length @xmath304 instead of squares .",
    "indeed , every such triangle can be subdivided into four interior - disjoint triangles of side length @xmath305 .",
    "we set @xmath124 to consist of @xmath34 together with the vertices of the triangles of the subdivision . for any @xmath227 , it is not difficult to show that at most six points @xmath258 for which @xmath125 ( the actual bound seems to be smaller than six , but this does not matter for our purpose ) . finally , by revising the algorithm of theorem [ t : main ] , we obtain the following theorem .    [",
    "t : main2 ] let @xmath0 be a simply connected region in the triangular grid of the plane , and let @xmath11 be the perimeter of @xmath0 .",
    "then there exists an algorithm that decides tileability of  @xmath0 in time @xmath12 .",
    "[ [ ss : fin - match ] ]    for general bipartite planar graphs , recent developments improve the hopcroft ",
    "karp bound  @xcite to nearly linear time .",
    "first , the existence of a perfect matching is equivalent to the _ circulation problem _",
    ", where all white vertices have supply  1 and all black vertices have demand  1 .",
    "it is known that the circulation problem in planar graphs can be solved within the same time bound as the _ shortest path problem _ with negative weights on a related planar graph  @xcite .",
    "the latter can be solved in time @xmath306 , see  @xcite .",
    "this almost matches thurston s original @xmath5 bound in theorem  [ t : thurston ] .",
    "our oracle model for the perfect matching is similar to other models of sparse graph presentations , which are popular in the study of graph properties of massive graphs ( see e.g.  @xcite ) .",
    "the idea is to give a sublinear size presentation of a perfect matching , amenable to running further sublinear time algorithms ; see e.g.  @xcite for a primer on the subject .",
    "thurston originally defined and studied height functions for the domino tilings as in this paper and for the lozenge tilings in a triangular lattice .",
    "since then , many generalizations and variations have been discovered .",
    "these include other rectangles in the plane  @xcite , other tiles in the triangular lattice  @xcite , rhombus tilings in higher dimension  @xcite , perfect matchings of more general graphs in the plane and other surfaces  @xcite , and even infinite domino tilings  @xcite .",
    "we refer to  @xcite for a ( somewhat dated ) survey of various tileability applications of height functions and tiling groups .    on the complexity side ,",
    "there are a number of @xmath307-completeness results for the decision and counting problems for general regions with small tiles , see e.g.  @xcite , and more recently for simply connected regions  @xcite . in case of domino tilings , there are also @xmath308-completeness results for @xmath309-dimensional regions  @xcite .        the complexity of thurston s algorithm has been investigated to a remarkable degree in the computational geometry literature .",
    "these include generalizations to regions with holes  @xcite , parallel computing  @xcite , and more general graphs  @xcite .    the idea behind our tileability criterion , stated in lemma  [ l : necessary ] , was first given in the third author s thesis  @xcite , in the context of tromino tilings .",
    "the criterion is especially surprising given the fundamentally non - local property of the domino tileability , as elucidated by the _ augmentablity problem _ ( see  ( * ? ? ?",
    "* @xmath211.3 ) ) .",
    "we believe that our approach can be further extended to a variety of tiling problems which admit height functions , such as tilings with bars ( see  @xcite ) . in a different direction ,",
    "the heart of the proof is the idea of _ scaling _ represented by the squares which are used heavily in section  [ s : algorithm ]",
    ". it would be nice to see this idea can be further developed . finally , if the boundary @xmath310 is given by some kind of periodic conditions ( cf .",
    "@xcite ) , one can perhaps further speed up the domino tileability testing .",
    "unfortunately , at the moment , we do not know how to formalize this problem ."
  ],
  "abstract_text": [
    "<S> _ domino tileability _ is a classical problem in discrete geometry , famously solved by thurston for simply connected regions in nearly linear time in the area . in this paper , we improve upon thurston s height function approach to a nearly linear time in the perimeter .    </S>",
    "<S> department of mathematics , ucla , los angeles , ca , 90095 . </S>",
    "<S> .06 cm email : .06 cm ` { pak,mtassy}@math.ucla.edu ` ]    department of mathematics , caltech , pasadena , ca , 91125 . </S>",
    "<S> .06 cm email : .06 cm ` adamsh@gmail.com ` . ]    </S>",
    "<S> .9 cm </S>"
  ]
}
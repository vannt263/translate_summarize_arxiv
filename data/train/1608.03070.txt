{
  "article_text": [
    "polling systems have applications in diverse fields such as manufacturing , telecommunications , time - sharing computer systems , wireless networks , to name a few .",
    "there is a very large body of research work in polling systems , and we refer the readers to a few survey papers for the full range of issues in polling systems that researchers have studied : see the book by takagi  @xcite , and the review papers of levy and sidi  @xcite , vishnevskii and semenova  @xcite and boon et al .",
    "@xcite .",
    "the early work considered a simple polling system consisting of a single server serving @xmath4 queues in an exhaustive cyclic fashion , which means that it serves the customers in the @xmath5-th queue until it becomes empty and then moves to queue @xmath6 ( or 1 if @xmath7 ) .",
    "results were obtained about the limiting distribution of the number of customers in the @xmath4 queues , their means , and waiting times , and so on .",
    "these results were quickly extended to service policies other than exhaustive , such as e.g. gated , @xmath8-limited and bernoulli , as well as non - cyclic server routing , non - zero switch over times , and so on .",
    "we refer the reader to the sources mentioned above for the detailed references .",
    "the issues of control of polling systems have received less attention than the performance analysis of polling systems .",
    "there are several possible control problems arising in polling systems .",
    "first , the order in which the queues are served can be determined to optimize system performance ( such as weighted expected waiting times ) , assuming that the service discipline is fixed ( such as exhaustive , or gated ) ; see boxma et al .",
    "@xcite , yechiali  @xcite , van der wal and yechiali  @xcite .",
    "when the server can switch after every service , the optimal dynamic service order is studied in greater detail , and may lead to simple rules like the @xmath9 rule ; for example , see klimov  @xcite , haijema and van der wal  @xcite .",
    "we refer to vishnevskii and semenova  @xcite for many more papers in this area .",
    "customer routing in polling systems is a less studied area .",
    "takine et al .",
    "@xcite , sidi et al .",
    "@xcite and boon et al .",
    "@xcite study a jackson network style routing of customers among @xmath4 queues , served cyclically by a single server .",
    "the control of customer routing is the focus of the current paper .",
    "this subject is also less studied in comparison with the control of server routing . to the best of our knowledge ,",
    "the only paper on this topic is by sharafali et al  @xcite .",
    "they consider the problem where the customers arriving at one of the queues can be routed to any of the others , while customers arriving at the other queues have no flexibility .",
    "they study static randomized routing policies and study the optimal fraction to be routed to each queue in order to minimize the weighted expected waiting cost .",
    "this comes somewhat close to our model that we will describe in the next section .",
    "however , our cost model is very different from the one in @xcite and we consider optimal policies under several scenarios of availability of information , and who is controlling the system .",
    "we consider a cyclic exhaustive polling system where every arriving customer needs to be routed to one of the queues , and distinguish three levels of information knowledge :    1 .   _",
    "no information .",
    "_ we do not know the queue lengths or the position of the server ( that is , which queue the server is serving ) at decision epochs .",
    "partial information .",
    "_ we know where the server is , but not the queue lengths , at decision epochs .",
    "complete information .",
    "_ we know the position of the server , and the queue lengths , at decision epochs .",
    "we assume that the waiting cost in a queue depends on its downstream position from the server .",
    "this is motivated by the tradeoff one normally encounters : we might be able to reduce the waiting cost by joining a queue farther from the server , but it will increase the total waiting time .",
    "one motivation for such a case arises from appointment systems , although the analogy is not quite accurate : one can be a walk - in customer and join the queue where the server is now ( today s queue at the clinic ) , or one can get an appointment for a later day and join a shorter queue , because waiting at home is cheaper than waiting at the clinic .    finally , we consider the control problem from two different points of view : the customer ( or individually optimal ) and the system manager ( socially optimal ) point of view .",
    "socially versus individually optimal policies have been well studied in the queueing literature , see lippman and stidham  @xcite and hassin and haviv  @xcite .",
    "computation of individually optimal policies becomes complicated when the decisions of later customers can influence a customer s waiting cost .",
    "for example , altman and shimkon  @xcite study individually optimal policies in processor sharing queues , where the decisions by later customers influence one s waiting costs , because they affect the effective service rate available to any customer .",
    "they also introduce an iterative algorithm to find nash equilibria . in our case",
    ", the analysis of individually optimal policies is similarly complicated by the fact that a customer s total cost is affected by the behavior of the customers arriving after her .",
    "we provide a new iterative algorithm to derive nash equilibria in such a case .",
    "to keep the analysis simple , we consider an exponential system with only two queues and no switch - over times .",
    "even for such a simple system , the analysis provides interesting insights , and can be quite involved .",
    "we introduce the model and notation in section [ sec : mod ] .",
    "the case of no information is studied in section [ sec : noinfo ] , and partial information in section [ sec : partinfo ] . in both cases ,",
    "we study nash equilibria in the individually optimal analysis , and minimize the long - run average cost rate in the socially optimal case .",
    "the case of complete information is studied in section [ sec : cominfo ] .",
    "we present a new iterative algorithm to determine individually optimal policies , and show that such policies can be described by a switching curve .",
    "the socially optimal policies can be derived by using negative dynamic programming .",
    "we present a novel proof of existence of average cost optimal policies , but we have not been able to derive structural results in that case",
    ". however , numerical experimentation suggests a simple approximate socially optimal routing policy , which can described by a linear switching curve . in section [ sec : fluid ] we formulate the problem as a control problem of a fluid polling queueing system , and prove that the approximate policy conjectured in section [ sec : cominfo ] is in fact optimal in the fluid model .",
    "we end the paper with a numerical example and a brief summary in section [ sec : num ] .",
    "we consider a polling system with two queues ; see figure  [ fig : model ] .",
    "customers arrive at this system according to a poisson process with rate @xmath3 .",
    "the service times are independent and exponentially distributed with rate @xmath0 at each queue .",
    "a single server serves the two nodes in a cyclic fashion with exhaustive service .",
    "the switch - over times are assumed to be zero . for stability",
    "we assume @xmath10 .",
    "the only costs in the system are waiting costs : it costs a customer @xmath1 dollars to wait in a queue that is being served ( called the busy queue ) , while it costs her @xmath2 per unit time to wait in a queue that is not being served ( called the idle queue ) .",
    "we aim to study how the arrivals should be routed to the two queues in order to minimize expected waiting costs . in the following sections we characterize individually optimal and socially optimal routing policies under various levels of information knowledge : no information , partial information and complete information .",
    "suppose that arriving customers have no information about the state of the system , i.e. , they do not know where the server is and what the queue lengths are . in this case ,",
    "the most general policy is described by a single parameter @xmath11 $ ] as follows : each customer joins queue @xmath12 with probability @xmath13 and queue @xmath14 with probability @xmath15 .",
    "we use the notation @xmath16 ( @xmath17 ) . define @xmath18 as the expected number of customers in queue @xmath5 given that the server is serving queue @xmath19 .",
    "the next theorem gives these quantities ; see e.g. winands et al .",
    "@xcite , winands  @xcite and boon  @xcite .",
    "[ th : lb ] under the above routing policy we have , for all @xmath20 , @xmath21    using the above theorem we derive the socially optimal policies in the next theorem .",
    "[ th : nosoc ] * ( socially optimal policies ) *    1 .",
    "if @xmath22 , there is a unique socially optimal policy : @xmath23 ( join either queue with probability @xmath24 ) .",
    "2 .   if @xmath25 , all policies @xmath11 $ ] are socially optimal .",
    "3 .   if @xmath26 , there are two socially optimal policies : @xmath27 and @xmath28 ( everyone joins queue 1 or everyone joins queue 2 )",
    ".    the socially optimal policy minimizes the expected cost of a customer in steady state , which is given by @xmath29 where @xmath30 and @xmath31 are the expected cost of joining queue @xmath12 and @xmath14 , respectively , @xmath32 it then follows that @xmath33 now if @xmath22 , the above expression implies that @xmath34 decreases as @xmath35 increases from 0 to @xmath24 and increases as @xmath35 increases from @xmath24 to 1 .",
    "hence @xmath34 is minimized at @xmath36 .",
    "if @xmath26 , @xmath34 increases as @xmath35 increases from 0 to @xmath24 , and decreases as @xmath35 increases from @xmath24 to 1 .",
    "thus @xmath34 is minimized at @xmath37 and @xmath38 . from symmetry , both these minima are identical .",
    "when @xmath39 , @xmath34 does not depend on @xmath35 .",
    "hence the result follows .",
    "the next theorem states the results about the individually optimal ( nash equilibrium ) policies .",
    "[ th : nonash ] * ( nash equilibrium policies ) *    1 .",
    "if @xmath40 , there is a unique nash equilibrium policy : @xmath23 .",
    "this policy is socially optimal .",
    "2 .   if @xmath41 , every policy @xmath11 $ ] is a nash equilibrium policy , but only @xmath23 is socially optimal .",
    "3 .   if @xmath42 , there are three nash equilibrium policies : @xmath27 , @xmath43 and @xmath28 .",
    "only policy @xmath23 is socially optimal if @xmath22 , each of them is socially optimal if @xmath25 , and @xmath27 and @xmath28 are socially optimal if @xmath26 .",
    "suppose arriving customers join queue 1 with probability @xmath13 and queue 2 with probability @xmath44 .",
    "now suppose a smart customer knows how the other customers are behaving , and decides to use this system to minimize her own waiting costs .",
    "if she joins queue 1 , her expected cost is @xmath30 and otherwise , if she joins queue 2 , her expected cost is @xmath31 .",
    "it then follows that @xmath45 consider the case @xmath46 . if all customers use @xmath47 , then @xmath48 and the smart customer will join queue 2 , that is , use @xmath49 ; and if all customers use @xmath50 , she will use @xmath51 .",
    "thus in these cases there is no nash equilibrium .",
    "if all the customers follow the policy @xmath36 , the smart customer is indifferent between the two options and can choose @xmath36 .",
    "thus @xmath36 is a nash equilibrium . if @xmath52 , the smart customer is also indifferent , so all policies are a nash equilibrium .",
    "next , in case @xmath42 , it is readily verified that there are three nash equilibrium policies , @xmath53 , @xmath36 and @xmath54 .",
    "together with theorem [ th : nosoc ] , this concludes the proof .",
    "in this section we consider the case of partial information .",
    "specifically , we assume that all customers know which queue is being served by the server , but the individual queue lengths at the two queues are not known .",
    "we call the queue that the server is at the busy queue and the other queue the idle queue .",
    "we assume that if both queues become empty after a service completion , the server stays at the queue it served last .",
    "thus the busy queue and idle queue are well defined at all times .",
    "now the most general policy that a customer can follow is described by a single parameter @xmath11 $ ] as follows : join the busy queue with probability @xmath13 and join the idle queue with probability @xmath55 .",
    "hence , under this policy , the poisson arrival rates in the two queues depend on the server location .",
    "this system with `` smart customers '' has been analyzed by boon et al .",
    "let @xmath56 be the expected number of customers in the busy queue , and @xmath57 be the expected number of customers in the idle queue , in steady state , under this policy .",
    "the next theorem gives these two quantities , see e.g. boon et al .",
    "@xcite .",
    "[ th : parlb ] under the above policy we have , for all @xmath20 , @xmath58 @xmath59    using the above theorem we derive the socially optimal policies in the next theorem .",
    "[ th : parsoc ] * ( socially optimal policies ) *    1 .",
    "if @xmath22 , the socially optimal policy is for everyone to join the idle queue .",
    "if @xmath25 , all policies are socially optimal .",
    "3 .   if @xmath26 , the socially optimal policy is for everyone to join the busy queue .",
    "the socially optimal policy minimizes the expected cost of a customer in steady state .",
    "the expected cost of an arriving customer in steady state is given by @xmath60 where @xmath61 and @xmath62 are the expected cost of joining the busy and idle queue , respectively , @xmath63 this can be simplified to get @xmath64 using @xmath65 , direct calculations show that @xmath66 thus if @xmath22 , @xmath34 is an increasing function of @xmath67 , hence it is minimized at @xmath68 .",
    "that is , the socially optimal policy is for everyone to join the idle queue . on the other hand ,",
    "if @xmath26 , @xmath34 is a decreasing function of @xmath67 , hence it is minimized at @xmath69 . then the socially optimal policy is for everyone to join the busy queue . if @xmath25 , then the cost does not depend on @xmath67 , and all policies are optimal .",
    "the next theorem states the results about the individually optimal ( nash equilibrium ) policies .",
    "[ th : parnash ] * ( nash equilibrium policies ) *    1 .   if @xmath40 : the nash equilibrium is policy is to join the idle queue .",
    "it is also a socially optimal policy .",
    "2 .   if @xmath70 the nash equilibrium policy is to join the busy queue .",
    "it is not the socially optimal policy .",
    "3 .   if @xmath71 the nash equilibrium policy is to join the busy queue .",
    "it is also a socially optimal policy .",
    "suppose arriving customers join the busy queue with probability @xmath35 and the idle queue with probability @xmath44 .",
    "now suppose a smart customer knows how the other customers are behaving , and decides to use this system to minimize her own waiting costs .",
    "if she joins the busy queue , her expected cost is @xmath61 and otherwise , if she joins idle queue , her expected cost is @xmath62 . using the formulas for @xmath56 and @xmath57 from theorem  [ th : parlb ] we get @xmath72 note that the sign of @xmath73 does not depend on @xmath35 , the policy followed by all the other customers .",
    "now consider three cases .",
    "1 .   @xmath40 : equation   implies that @xmath74 , and hence the smart customer will also join the idle queue , regardless of what the other customers are doing . thus joining",
    "the idle queue is a nash equilibrium . in this case",
    "we also have @xmath22 . hence from theorem",
    "[ th : parsoc ] , the socially optimal policy is to join the idle queue .",
    "thus nash equilibrium is also the socially optimal policy .",
    "2 .   @xmath70 in this case , @xmath75 , and hence the smart customer will join the busy queue , regardless of what the other customers are doing . hence joining",
    "the busy queue is a nash equilibrium policy .",
    "however , the socially optimal policy is for everyone to join the idle queue .",
    "thus the nash equilibrium is to join the busy queue , but the socially optimal policy is to join the idle queue !",
    "individual optimization in this case actually maximizes the social cost .",
    "@xmath76 : the analysis is similar .    we can write the condition @xmath40 as @xmath77 the left hand side is the expected cost of waiting in the busy queue for one service time , while the right hand side is the expected cost of waiting in the idle queue for a busy period initiated by a single customer .",
    "it makes sense that the smart customers weighs these two costs in order to make her decision , while the social optimizer compares @xmath1 and @xmath2 .",
    "this results in the nash equilibrium policies sending more customers to the busy queue than the socially optimal policies .",
    "now suppose every customer has complete knowledge of the state of the system , namely , the server location and the length of each queue .",
    "how would the customers use this information to decide which queue to join ?",
    "suppose that the static routing policy @xmath78 is under effect ( which does not have to be optimal ) and that a special customer wants to use this information to minimize her own expected total waiting cost .",
    "she can observe the number of customers in the two queues when she arrives at the system : @xmath5 in the busy queue , and @xmath19 in the idle queue .",
    "which queue should she join ?",
    "if she joins the busy queue , her total expected cost is @xmath79 . if she joins the idle queue , the total expected waiting cost is @xmath80 . here",
    "the first term represents the @xmath5 busy periods that she must wait before the server starts serving the idle queue ( and making it the busy queue ) .",
    "thus it is optimal for her to join the queue under service if @xmath81 and join the idle queue if @xmath82 clearly , she could choose either queue if equality holds . if @xmath83 , her decision rule reduces to join the shortest queue .",
    "else , the decision rule is a linear switching curve .",
    "now suppose all customers are smart , and each makes a decision to minimize her own total expected waiting cost , assuming that other customers will do the same . if @xmath83 , each customer will decide to join the shortest queue , and since this decision is independent of how the other customers behave , this produces a nash equilibrium .",
    "the case @xmath84 is also obvious : each customer will decide to join the busy queue , which is a nash equilibrium .",
    "however , the case @xmath85 is not so obvious . in this case , the single smart customer s decision was made under the assumption that all other customers join the busy queue with probability @xmath78 and the idle queue with probability @xmath86 .",
    "however , if every customer chooses the policy derived by the single smart customer , then the single customer s analysis is no longer valid .",
    "so suppose we are given a decision function @xmath87 such that @xmath88 ( @xmath89 ) implies that an arriving customer that finds @xmath5 customers in the busy queue and @xmath19 customers in the idle queue joins the busy ( idle ) queue .",
    "let @xmath90 be the expected time until the busy queue empties if the system starts with @xmath5 customers in the busy queue , and @xmath19 in the idle queue , under decision function @xmath91 .",
    "note that @xmath92 is bounded by @xmath93 , which is the expected time to empty the busy queue if all future arrivals are sent to the busy queue .",
    "it is individually optimal to join the busy queue if @xmath94 and to join the idle queue if @xmath95 we say that @xmath96 is an individually optimal decision function if @xmath97 and @xmath98 the function @xmath96 also describes a nash equilibrium policy .",
    "we now present a recursive method to compute @xmath96 .",
    "we consider a finite horizon system that operates as follows .",
    "let @xmath99 be a given integer ( the `` horizon '' ) .",
    "let @xmath100 be the initial state of the system ( @xmath101 ) .",
    "we assume that after @xmath102 events ( arrivals or departures ) , arrivals are turned off and only departures are allowed to occur , and the systems stops operation once it becomes empty .",
    "let @xmath103 represent the new state of the system if a customer arrives when the horizon is @xmath102 , and the system is in state @xmath100 and chooses an action that minimizes her own cost .",
    "let @xmath104 be the expected time until the busy queue becomes empty if the system with horizon @xmath102 starts in state @xmath100 , and all the arrivals behave in an individually optimal way .",
    "we have @xmath105 this reflects that a zero horizon system has no more arrivals and hence the server completes the work in the current queue after an expected time of @xmath106 .",
    "now recursively define for all @xmath107 , @xmath108 where @xmath109 .",
    "the next lemma formulates monotonicity properties of @xmath110 .",
    "[ lem : mono ] for all @xmath107 , @xmath111    by induction .",
    "for @xmath112 we have @xmath113 and @xmath114 hence , ( [ eq : mon2])-([eq : mon3 ] ) hold for @xmath112 .",
    "now assume ( [ eq : mon2])-([eq : mon3 ] ) hold for @xmath102 .",
    "then we will show that these inequalities also hold for @xmath115 . to establish ( [ eq : mon2 ] ) for @xmath115 ,",
    "consider @xmath116 the first term is nonnegative by ( [ eq : mon2 ] ) .",
    "if @xmath117 , then for both @xmath118 and @xmath119 , we can conclude that the second term is nonnegative by application of ( [ eq : mon1 ] ) and ( [ eq : mon2 ] ) . if @xmath120 , then @xmath119 by ( [ eq : mon2 ] ) , and thus we can again conclude that the second term is nonnegative by ( [ eq : mon2 ] ) .",
    "for ( [ eq : mon1 ] ) we get @xmath121 the first term on the right - hand side is nonnegative by ( [ eq : mon1 ] ) . if @xmath122 , then for both @xmath117 and @xmath120 , we obtain that the second term is nonnegative by ( repeated ) application of ( [ eq : mon1 ] ) . if @xmath123 , we come to the same conclusion . by ( [ eq : mon2 ] ) , @xmath124 and thus by ( [ eq : mon2b ] ) , @xmath125 finally , to prove ( [ eq : mon3 ] ) for @xmath115 , @xmath126 the first term is nonnegative by ( [ eq : mon3 ] ) . if @xmath127 , then for both @xmath118 and @xmath119 , it follows that the second term is nonnegative by application of ( [ eq : mon1 ] ) for @xmath115 and ( [ eq : mon3 ] ) .",
    "if @xmath128 , then also @xmath119 by ( [ eq : mon2 ] ) , and thus the second term is nonnegative by ( [ eq : mon3 ] ) .",
    "the following theorem states that this recursive procedure generates an individually optimal decision function @xmath96 .",
    "[ th : fulnash ] for all @xmath101 , @xmath129 and @xmath130 where @xmath96 is defined as @xmath131    by virtue of ( [ eq : mon2b])-([eq : mon3 ] ) , the sequence @xmath104 is non - decreasing in @xmath102 and bounded .",
    "hence the limits of @xmath104 and @xmath132 exist and satisfy for all @xmath101 , @xmath133 where @xmath134 . the expected values @xmath135 satisfy for all @xmath101 , @xmath136 where @xmath137 . to prove @xmath138 , consider @xmath139 satisfying @xmath140 or in vector - matrix notation @xmath141 where @xmath142 is the ( transient ) transition probability matrix with @xmath143 iterating ( [ eq : vector1 ] ) yields @xmath144 . since transitions are restricted to neighboring states , @xmath145 for all @xmath146 with @xmath147 . hence , since",
    "@xmath148 and @xmath135 are bounded by @xmath149 , @xmath150 is the all - one vector .",
    "@xmath151 is the probability that the markov chain @xmath142 does not reach the absorbing boundary @xmath152 in @xmath102 transitions , when starting in @xmath100 .",
    "this probability is bounded by @xmath153 , where @xmath154 is the number of transitions to reach @xmath155 of the random walk on the non - negative integers with one - step probabilities @xmath156 , when it starts in state @xmath5 .",
    "this random walk reflects that all future arrivals are sent to the busy queue . by markov s inequality , @xmath157 .",
    "hence , from ( [ eq : vector2 ] ) , @xmath158 letting @xmath159 , we conclude that @xmath160 , which completes the proof .",
    "next we describe the main structural properties of the policy @xmath96 .    [",
    "theorem : busyforsure ] @xmath161 for all @xmath162 .    for @xmath162 , @xmath163 since @xmath164 .",
    "hence , @xmath165 by definition .",
    "the above theorem says that if the busy queue is no longer than the idle queue , then the individually optimal decision for any customer is to join the busy queue .",
    "the theorem below states monotonicity of the individually optimal policy in @xmath19 .",
    "[ theorem : busyj++ ] for all @xmath166 , @xmath167 , if @xmath161 , then @xmath168 .",
    "suppose @xmath161 for some @xmath166 , @xmath167 .",
    "this implies @xmath169 where the last inequality follows from ( [ eq : mon2 ] ) by taking @xmath159 .",
    "hence , @xmath168 .    to prove monotonicity in @xmath5 , we first need a technical result .    [",
    "theorem : concavity ] suppose @xmath170 for every @xmath171 and fixed @xmath172 .",
    "then @xmath173 is concave for @xmath174 .",
    "fix @xmath175 .",
    "first , we show by induction that for all @xmath176 , @xmath177 for @xmath178 , @xmath179 where the inequality follows from the bound @xmath180 .",
    "now we assume that ( [ inequality : tauupperbound ] ) holds for @xmath181 and then show that it also holds for @xmath182 .",
    "@xmath183 - \\frac{1}{\\lambda+\\mu } \\\\                                & = & \\frac{\\mu}{\\lambda+\\mu } \\ [ \\tau(k+2,j)-\\tau(k+1,j ) ] + \\frac{\\mu}{\\lambda+\\mu } \\ [ \\tau(k+1,j)-\\tau(k , j)]\\\\                                &    &   - \\frac{1}{\\lambda+\\mu } .\\end{aligned}\\ ] ] hence @xmath184 - \\frac{1}{\\lambda } \\\\                                & \\leq & \\frac{\\mu}{\\lambda(\\mu-\\lambda ) } -   \\frac{1}{\\lambda } \\ ; = \\ ; \\frac{1}{\\mu-\\lambda } , \\end{aligned}\\ ] ] which concludes the proof of ( [ inequality : tauupperbound ] ) .",
    "next , to establish concavity , we have for @xmath185 , @xmath186 - [ \\tau(k+1,j)-\\tau(k , j)]\\\\      & \\quad = \\ ; \\tau(k+2,j ) - 2 \\left[\\frac{1}{\\lambda+\\mu } + \\frac{\\mu}{\\lambda+\\mu}\\ \\tau(k , j ) + \\frac{\\lambda}{\\lambda+\\mu } \\",
    "\\tau(k+2,j)\\right ] + \\tau(k , j ) \\\\      & \\quad = \\ ; \\frac{\\mu-\\lambda}{\\mu + \\lambda } \\ [ \\tau(k+2,j)-\\tau(k , j ) ] - \\frac{2}{\\lambda+\\mu } \\\\      & \\quad \\leq \\ ; \\frac{\\mu-\\lambda}{\\mu + \\lambda } \\",
    "\\frac{2}{\\mu-\\lambda } - \\frac{2}{\\lambda+\\mu } \\ ; = \\ ; 0 , \\end{aligned}\\ ] ] where the inequality follows by repeated application of ( [ inequality : tauupperbound ] ) .    with the above result we can prove monotonicity in @xmath5 .    [ theorem : busyi ] for all @xmath187 , @xmath167 , if @xmath161 , then @xmath188 .",
    "fix @xmath189 . by downward induction",
    "we will prove for @xmath175 that @xmath165 implies @xmath170 for all @xmath190 . by theorem [ theorem : busyforsure ]",
    "this is true for @xmath191 .",
    "now we assume that it holds for @xmath19 and then show that it also holds for @xmath192 .",
    "suppose @xmath193 .",
    "if @xmath194 , then @xmath195 by theorem [ theorem : busyforsure ] .",
    "to show that this is also valid for @xmath196 , first note that @xmath197 implies @xmath198 and thus , by using @xmath199 , @xmath200 hence , @xmath201 \\ge d \\left [ \\frac{1}{\\lambda+\\mu } + \\frac{\\lambda}{\\lambda+\\mu } \\ \\frac{2}{\\mu-\\lambda } \\right ] = \\frac{d}{\\mu - \\lambda } > \\frac{c}{\\mu},\\ ] ] so @xmath202 .",
    "since @xmath203 , we have @xmath204 and thus for @xmath190 , @xmath205 + \\frac{c(j-1)}{\\mu } \\\\     & \\le &   d \\tau(k , j ) + \\frac{c(j-1)}{\\mu},\\end{aligned}\\ ] ] where the second inequality follows from theorem [ theorem : concavity ] .",
    "hence @xmath206 .",
    "theorems [ theorem : busyj++ ] and [ theorem : busyi ] imply that the individually optimal policy is described by a switching curve @xmath207 such that it is optimal for a customer to join the busy queue in state @xmath100 is @xmath208 , and that @xmath209 is a non - decreasing function of @xmath5 .",
    "note that @xmath209 depends on the costs @xmath1 and @xmath2 .",
    "this completes the discussion of the individually optimal policy .",
    "finally , suppose there is a central controller who can route the customers so as to minimize the long run expected waiting cost per unit time .",
    "let @xmath210 be the total number of customers in the system ( those in the busy queue plus those in the idle queue ) at time @xmath211 .",
    "we begin with an easy but important observation .",
    "@xmath212 is the queue length process in an @xmath213 queue regardless of the routing policy followed .",
    "the total arrival process to the system is a poisson process with rate @xmath3 , the service times are independent and exponential with rate @xmath0 , and the polling service discipline is work conserving",
    ". hence the lemma follows .",
    "now let @xmath214 be the number of customers in the busy queue and @xmath215 be the number in the idle queue at time @xmath211 .",
    "then the total cost @xmath216 over @xmath217 $ ] is given by @xmath218 the process @xmath219 does depend on the routing policy .",
    "let @xmath220 be the @xmath102th time when the system busy cycle ends , i.e. , when @xmath210 reaches @xmath155 .",
    "let @xmath221 be the total cost incurred over the interval @xmath222 $ ] .",
    "an important implication of the above lemma is that @xmath219 is a ( delayed in case @xmath223 ) renewal reward process , since @xmath224 is a sequence of independent and identically distributed bi - variate random variables .",
    "furthermore , @xmath225 is a sequence of independent busy cycles in an @xmath213 queue .",
    "hence , their common distribution does not depend on the routing policy , and @xmath226 then , from the results on renewal reward processes , we obtain that @xmath227 also , we have the following bound : @xmath228 thus the long run average cost exists and is finite , and it is proportional to the total cost in first busy cycle started with one customer in the system .",
    "thus the problem of finding an average cost optimal policy reduces to the problem of finding an optimal policy that minimizes the total expected cost @xmath34 over a busy period @xmath229 starting in state ( 1,0 ) .",
    "this can be written as @xmath230 clearly the first term is independent of the routing policy followed .",
    "thus , to minimize @xmath34 , we need to minimize the integral @xmath231 if @xmath232 and maximize it if @xmath233 .",
    "if @xmath25 , any policy is optimal . clearly , when @xmath234 , it is optimal to send all traffic to the busy queue .",
    "the interesting case arises when @xmath22 .",
    "hence we deal with that case below .",
    "the above discussion implies that , without loss of generality , we can assume @xmath235 , and @xmath83 .",
    "note that this is in stark contrast with the individually optimal policies that depend on both @xmath1 and @xmath2 .",
    "we can now formulate the cost minimization as a standard negative dynamic programming problem , see e.g. ross  @xcite .",
    "below we make the details precise .",
    "let @xmath236 be the minimum expected total cost starting in state @xmath237 over the time interval @xmath238 where @xmath239 without loss of generality we can assume that @xmath240 . from ross",
    "@xcite it follows that @xmath241 satisfies the optimality equations : @xmath242 where @xmath243 .",
    "we are interested in the solution to the above equations , which can be obtained by the following value iteration for @xmath244 : @xmath245 with initially @xmath246 for all @xmath101 and @xmath247 for all @xmath99 .",
    "note that the @xmath248 in the above iteration is guaranteed to converge to @xmath241 as @xmath159 , even though the costs are unbounded .",
    "once @xmath241 is computed , the theory of negative dynamic programming says that the optimal policy in state @xmath100 is to route an incoming customer to the busy queue if @xmath249 , and to the idle queue otherwise .",
    "unfortunately , we have been unable to formally derive any structural results for socially optimal policy , the main stumbling block being the term @xmath250 on the right hand side of the equation for @xmath251 . however , based on extensive numerical experimentation we have seen that a switching curve policy is optimal .",
    "that is , for each @xmath252 , there is a critical number @xmath253 such that the optimal policy in state @xmath100 is to route the incoming customer to the busy queue if @xmath254 and to the idle queue otherwise .",
    "furthermore , in a fairly large parameter space , the switching curve can be approximated by the linear function : @xmath255 where @xmath256 it is easy to see that @xmath257 .",
    "we have also observed numerically that @xmath258 for all @xmath252 , where @xmath209 is the switching curve for the individually optimal policy .",
    "that is , more customers join the busy queue under the individually optimal policy than under the socially optimal policy .",
    "we shall illustrate these comments with a numerical example in section  [ sec : num ] .    in the next section we shall develop a fluid model of this scenario and derive an optimal routing policy .",
    "consider a fluid equivalent of the polling system described in section  [ sec : mod ] .",
    "customers arrive as a fluid with deterministic rate @xmath3 per unit time and can be routed to the busy queue or the idle queue .",
    "the cost structure remains the same .",
    "once the server empties a queue , he switches to the other queue and continues to empty it .",
    "the fluid is removed at a deterministic rate @xmath259 as long as there is fluid to be removed .",
    "once the system becomes empty , the fluid is removed at rate @xmath3 , and the system stays empty forever .",
    "as before , the queue that is being served is called the busy queue , and the other one is called the idle queue .",
    "let @xmath260 be the amount of fluid in the busy queue , and @xmath261 the amount of fluid in the idle queue , at time @xmath211 .",
    "suppose the initial state is @xmath262 and @xmath263 .",
    "let @xmath264 be the total fluid in the system at time @xmath211 .",
    "then @xmath265 and regardless of the routing policy followed , @xmath266 decreases at rate @xmath267 , until it hits zero at time @xmath268 and then @xmath266 remains 0 for @xmath269 . as in the previous section , the total cost incurred can be written as @xmath270 we want to determine the optimal routing policy for the incoming fluid so as to minimize this cost . since the routing policy does not affect the trajectory of @xmath271 , the optimal policy needs to minimize the second integral if @xmath22 , and maximize it if @xmath26 .",
    "the optimal routing policy for @xmath269 is obvious : keep sending the incoming fluid to the busy queue , and both the queues will remain empty forever .",
    "thus we concentrate on the optimal policy for @xmath272 .",
    "if @xmath26 , the optimal policy is to route all traffic to the busy queue . if @xmath25 all routing policies are optimal .",
    "hence we further concentrate on the case @xmath22 in the rest of this section .",
    "we assume the server has just switched to queue 1 at time zero and the system is non - empty .",
    "thus @xmath273 and @xmath274 , and queue 1 is the busy queue at time zero .",
    "since the system is entirely deterministic , the routing policy is completely described by the instantaneous rate at which the incoming fluid is routed to the two queues as a function of time .",
    "let @xmath275 be the rate at which fluid is routed to the idle queue at time @xmath211 , @xmath276 .",
    "then @xmath277 is the rate at which fluid is routed to the busy queue .",
    "now let @xmath278 and @xmath279 be the time at which the server switches from one queue to the other , called the @xmath8th switching time .",
    "these times are completely determined by the function @xmath280 as follows : @xmath281 thus queue 2 becomes the busy queue at time @xmath282 and now has @xmath283 amount of fluid in it .",
    "queue 1 becomes the idle queue and has no fluid in it .",
    "thus we can recursively obtain , for @xmath284 : @xmath285 @xmath286 we call @xmath287 the @xmath8th cycle .",
    "note that @xmath288 also represents the total amount of fluid routed to the idle queue during the @xmath8th cycle .",
    "the next theorem gives an important preliminary result on the optimal policy .",
    "[ th : pre ] let @xmath280 be a given routing policy where @xmath275 is the instantaneous rate at which incoming fluid is routed to the idle queue at time @xmath211 .",
    "let @xmath289 and @xmath290 be as given in and .",
    "let @xmath291 and define a new routing policy @xmath292 as follows : @xmath293 then the total cost incurred by routing policy @xmath292 is no greater than that of @xmath280 .",
    "let @xmath260 and @xmath261 be the fluid levels at time @xmath211 under the routing policy @xmath280 , and @xmath294 and @xmath295 be the fluid levels at time @xmath211 under the routing policy @xmath292 .",
    "first note that the amount of fluid routed to the idle queue under the @xmath292 policy during the @xmath8th cycle is @xmath296 , which is the same as under the @xmath280 policy .",
    "this fluid is routed at the fastest rate possible , namely @xmath3 .",
    "hence @xmath297 since @xmath298 for all @xmath211 ( since the total fluid content is independent of the routing policy ) , it follows that @xmath299 in fact , we have @xmath300 thus @xmath301 for @xmath302 , and @xmath303 reaches zero for the first time at time @xmath304 .",
    "thus the switching times under routing policy @xmath305 are the same as under policy @xmath306 , and @xmath307 for all @xmath308 .",
    "thus we have @xmath309 thus the cost under @xmath305 is no greater than that under @xmath306 over the first cycle . since the state of the polling system under both policies is the same at time @xmath282 , the above argument can be repeated to show that policy @xmath305 performs at least as well as policy @xmath306 over every cycle , and hence for all @xmath272 .",
    "the above theorem implies that a policy is equally well characterized by the switching times @xmath289 it induces ( with @xmath310 ) , and among all the policies with these switching times , a policy that sends all the traffic to the idle queue first as long as possible in each cycle , is optimal .",
    "thus all that remains to be done is to identify the optimal switching times .",
    "since the system is deterministic , determining optimal @xmath289 is equivalent to determining the optimal fluid levels @xmath311 , with a given initial level @xmath312 .",
    "the next theorem shows that this can be modeled and solved as a linear quadratic regulator ( lqr ) problem , see bryson and ho  @xcite , and bertsekas  @xcite .",
    "[ th : lqr ] the optimal @xmath311 are obtained by solving the following infinite horizon constrained lqr :    [ eq : lqrq2 ] @xmath313    let @xmath289 be the switching times of the optimal policy . from theorem",
    "[ th : pre ] we see that there exist @xmath314 such that over the @xmath8th cycle @xmath287 it is optimal to route all fluid to the idle queue over @xmath315 and then route all fluid to the busy queue over @xmath316 .",
    "thus , during the interval @xmath317 , the fluid level in the busy queue decreases at rate @xmath0 from @xmath318 to @xmath319 , after which it decreases at rate @xmath320 from @xmath319 to @xmath155 . for the idle queue ,",
    "the fluid level increases at rate @xmath3 from @xmath155 to @xmath321 over @xmath317 , and then stays constant over @xmath322 .",
    "a little algebra shows that @xmath323 therefore , the cost during the @xmath8th cycle is : @xmath324 furthermore , we obtain the following dynamics : @xmath325 note that using the dynamics we have @xmath326 so subtracting @xmath327 times the left hand side of ( which is like subtracting a constant ) from the sum of over all @xmath8 , we need to solve the following problem : @xmath328 to eliminate the product @xmath329 we define the new variable @xmath330 which allows us to rewrite our problem as .",
    "the next theorem presents the solution to the above problem .",
    "the optimal solution to the constrained lqr in theorem  [ th : lqr ] is given by @xmath331 and @xmath332 where @xmath333    without constraint problem is the standard ( infinite - horizon discrete - time ) lqr problem .",
    "initially we ignore constraint .",
    "then the solution to the optimal control problem is given by @xmath334 that is , the optimal solution is given by @xmath335 which can written as [ eq : optcon ] .",
    "recall that we ignored constraint .",
    "however , solution satisfies , so is also the optimal solution for problem including constraint . using [ eq : optcon ] in @xmath336 and @xmath337 we get .",
    "one can show that @xmath338 .",
    "thus the amount of the fluid at switch - over times decreases geometrically to zero .",
    "the optimal policy goes through an infinite number of switch - overs before the system becomes empty .",
    "the next theorem specifies the optimal policy implied by the above theorem .",
    "[ th : optpol ] let @xmath339 be as in .",
    "it is optimal to route all incoming fluid to the idle queue at time @xmath211 if @xmath340 and all incoming fluid to the busy queue otherwise .",
    "notice that at time @xmath341 , the fluid level of the busy queue reduces to @xmath342 and that of the idle queue increases from @xmath155 to @xmath343 thus is satisfied for @xmath344 , and it is not satisfied for @xmath345 . at @xmath346",
    "it is satisfied at equality .",
    "this proves the theorem .",
    "note that the switching curve in matches the conjecture in !    in the derivations of the previous three theorems , we have assumed that @xmath347 , but this is not a restriction . to see this",
    "consider two cases :    1 .",
    "@xmath348 : consider a system starting at time @xmath349 , in state @xmath350 and @xmath351 . then following the optimal policy of theorem  [ th : optpol ] from time @xmath352 will bring the system to state @xmath353 and @xmath354 .",
    "hence the same optimal policy will continue to hold for @xmath276 from the principle of optimality .",
    "@xmath355 : in this case define @xmath356 now consider a system starting at time @xmath357 , in state @xmath358 and @xmath351 . then following the optimal policy of theorem  [ th : optpol ] from time @xmath352 will bring the system to state @xmath353 and @xmath354 .",
    "hence the same optimal policy will continue to hold for @xmath276 from the principle of optimality .",
    "in this section we present a numerical example with the following parameters : @xmath359 the three switching curves for the three policies are shown in figure  [ fig : optpol ] . the bottom curve corresponds to the switching curve @xmath209 of the individually optimal policy .",
    "it is optimal to join the busy queue in all states @xmath100 that lie above this curve .",
    "we have numerically observed that as @xmath2 approaches zero , the switching curve moves up and it reaches @xmath360 when @xmath83 , that is , the individually optimal policy is to join the shortest queue when @xmath83 . on the other hand , as @xmath2 increases",
    ", the switching curve moves down , and reaches @xmath361 when @xmath84 : that is , the optimal policy is to always join the busy queue .",
    "the top curve in figure  [ fig : optpol ] corresponds to the switching curve @xmath362 of the socially optimal policy . as we discussed before , this is independent of @xmath1 and @xmath2 , as long as @xmath22 .",
    "the middle curve corresponds to the fluid switching curve @xmath363 , where @xmath339 is as in .",
    "the fluid curve is also independent of @xmath1 and @xmath2 as long as @xmath22 .",
    "it is interesting to see that the two curves are quite close . for both policies ,",
    "it is optimal to join the busy queue in all states @xmath100 that lie above the curve .",
    "observe that both the socially optimal and the fluid switching curves are above the curve @xmath364 , while the individually optimal curve is below it .",
    "this observation for the individually optimal policies was proved in theorem  [ theorem : busyforsure ] .",
    "it follows for the fluid policy , because we know that @xmath257 .",
    "we have not been able to prove it for the socially optimal policy .",
    "figure  [ fig : optpol ] also shows that more customers join the busy queue under the individually optimal policy than under the socially optimal policy .",
    "this is consistent with the general observation in other queueing systems , and it is a result of externalities : in individually optimal policies , customers are selfish and ignore the cost their decision imposes on other customers , and hence tend to over - utilize the resources",
    ".    it would be interesting to formally prove these observations , but we leave that as future work . in the current paper we considered a simple exhaustive polling system with two queues , identical exponential service times , and no switch - over times and switch - over costs .",
    "clearly , several extensions are possible : to more than two queues , non - identical exponential service times , general service times , service policies other than exhaustive service , non - zero switch - over times or costs , and so on .",
    "each of these extensions makes the analysis harder , since the expressions for the expected queue lengths become more involved .",
    "99 altman , e . and n. shimkin ( 1998 ) .",
    "individual equilibrium and learning in processor sharing systems .",
    "_ , 46 , 776 - 784 .",
    "bertsekas , d. p. ( 2005 ) .",
    "_ dynamic programming and optimal control _ , vol 1 , third edition , athena scientific , belmont , ma , usa . boon , m.a.a .",
    ", van wijk , a.c.c . , adan , i.j.b.f . ,",
    "boxma , o.j .",
    "( 2010 ) . a polling model with smart customers , _ queueing syst .",
    "_ , 66 , 239 - 274 .",
    "boon , m.a.a .",
    "( 2011 ) . _",
    "polling models : from theory to traffic intersections _ , phd thesis , eindhoven university of technology .",
    "boon , m.a.a . , van der mei , r.d . and winands , e.m.m .",
    "applications of polling systems .",
    "_ surveys in operations research and management science _",
    ", 16 , 67 - 82 .",
    "boon , m.a.a .",
    ", van der mei , r.d . and winands , e.m.m .",
    "( 2013 ) . waiting times in queueing networks with a single shared server .",
    "_ queueing syst .",
    "_ , 74 , 403 - 429 .",
    "boxma , o.j . , levy , h. , and weststrate , j.a .",
    "efficient visit frequencies for polling tables : minimization of waiting cost , _ queueing syst . , _ 9 , 133162 .",
    "bryson , jr .",
    ", a. e. and y. -c .",
    "ho ( 1975 ) .",
    "_ applied optimal control : optimization , estimation and control _ , taylor & francis .",
    "haijema , r. , and van der wal , j. ( 2008 ) .",
    "an mdp decomposition approach for traffic control at isolated signalized intersections .",
    "sci . , _ 22 , 587602 .",
    "hassin , r. and haviv , m. ( 2003 ) .",
    "_ to queue or not to queue : equilibrium behaviour in queueing systems _ , kluwer .",
    "klimov , g. p. ( 1974 ) .",
    "time - sharing service systems i , _ theory prob.appl._ , 19 , 532 - 551 .",
    "klimov , g. p. ( 1978 ) .",
    "time - sharing service systems ii , _",
    "theory prob.appl._ , 23 , 314 - 321 .",
    "levy , h. and m. sidi ( 1990 ) .",
    "polling systems : applications , modeling , and optimization , _ ieee trans .",
    "_ 38 , 1750 - 1760 .",
    "lippman , s. a. and s. stidham ( 1977 ) .",
    "individual versus social optimization in exponential congestion systems , _ opns .",
    "_ , 25 , 233247 .",
    "ross , s. m. ( 1983 ) . _",
    "introduction to stochastic dynamic programming , _ academic press , new york .",
    "sharafali , m. , co , h.c . , and goh , m. ( 2004 ) .",
    "production scheduling in a flexible manufacturing system under random demand , _ eur .",
    "_ , 158 , 89102 .",
    "sidi , m. , levy , h. , and fuhrmann , s.w .",
    "a queuing network with a single cyclically roving server , _ queueing syst .",
    "_ , 11 , 121144 .",
    "takagi , h. ( 1986 ) .",
    "_ analysis of polling systems , _ cambridge : mit press .",
    "takine , t. , takagi , h. , and hasegawa , t. ( 1991 ) .",
    "sojourn times in vacation and polling systems with bernoulli feedback , _",
    "_ , 28 , 422432 .",
    "van der wal , j. and yechiali , u. ( 2003 ) dynamic visit - order rules for batch - service polling , _ prob .",
    "17 , 351367 .",
    "vishnevskii , v. m. and o. v. semenova ( 2006 ) .",
    "mathematical methods to study the polling systems , _ automation and remote control , _ 67 , 173220 .",
    "winands , e.m.m .",
    "_ polling , production & priorities _ , phd thesis , eindhoven university of technology .",
    "winands , e.m.m . , adan , i.j.b.f . and van houtum , g.j .",
    "mean value analysis for polling systems , _ queueing syst .",
    "_ , 54 , 45 - 54 .",
    "yechiali , u. ( 1993 ) analysis and control of polling systems , in _ performance evaluation of computer and communication systems _ , donatiello , l. and nelson , r. , eds .",
    ", berlin : springer , 630650 ."
  ],
  "abstract_text": [
    "<S> we consider a polling system with two queues , exhaustive service , no switch - over times and exponential service times with rate @xmath0 in each queue . </S>",
    "<S> the waiting cost depends on the position of the queue relative to the server : it costs a customer @xmath1 per time unit to wait in the busy queue ( where the server is ) and @xmath2 per time unit in the idle queue ( where no server is ) . </S>",
    "<S> customers arrive according to a poisson process with rate @xmath3 . </S>",
    "<S> we study the control problem of how arrivals should be routed to the two queues in order to minimize expected waiting costs and characterize individually and socially optimal routing policies under three scenarios of available information at decision epochs : no , partial and complete information . in the complete information case </S>",
    "<S> , we develop a new iterative algorithm to determine individually optimal policies , and show that such policies can be described by a switching curve . </S>",
    "<S> we conjecture that a linear switching curve is socially optimal , and prove that this policy is indeed optimal for the fluid version of the two - queue polling system . </S>",
    "<S> + _ keywords : _ customer routing ; dynamic programming ; fluid queue ; linear quadratic regulator ; nash equilibrium ; polling system ; ricatti equation ; social optimum . </S>",
    "<S> + _ 2010 mathematics subject classification : _ </S>",
    "<S> primary 60k25 ; secondary 90b22 . </S>"
  ]
}
{
  "article_text": [
    "many results in quantum information theory require the generation of specific quantum states , such as epr pairs , or the implementation of specific quantum measurements , such as a von neumann measurement in a fourier transformed basis . some states and measurements can be efficiently implemented using standard quantum computational primitives such as preparing a qubit in the state @xmath0 and applying a sequence of quantum gates ( from a finite set ) .",
    "epr pairs can be prepared from the state @xmath1 using a hadamard gate and a controlled - not gate .",
    "a von neumann measurement in the fourier basis can be efficiently realized by applying an inverse quantum fourier transform and performing a von neumann measurement in the standard computational basis , i.e. @xmath2 .",
    "however many states and basis changes can not be efficiently realized .",
    "this paper focusses on the generation of quantum states .",
    "for example , in @xcite , their improved frequency standard experiment requires the preparation of specific symmetric states on @xmath3 qubits , where @xmath3 is a parameter ( number of ions ) .",
    "the algorithm we describe here will efficiently prepare the required symmetric state .",
    "this short paper will focus on the algorithm for generating the state , and will ignore issues related to errors and decoherence ( for which the theory of fault - tolerant error - correction , or other stabilization methods , will apply ) .",
    "we do not have space to elaborate on the details of precision , but simple calculations that require @xmath4 extra space and @xmath5 elementary operations allow us to generate any state with fidelity at least @xmath6 .",
    "suppose we want to generate the state @xmath7 . in practice",
    "it suffices to generate a state @xmath8 satisfying @xmath9 for a given small real number @xmath10 . in this case , it suffices to approximate each @xmath11 and @xmath12 to accuracy @xmath13 ( i.e. @xmath14 bits of accuracy ) .",
    "here we have factored out the phase in each term , and so the @xmath12 are all non - negative real values .",
    "note that if we can prepare the state @xmath15 , then we can approximate @xmath16 arbitrarily well by introducing appropriate phase factors using methods discussed in @xcite .",
    "we will therefore focus on a method for generating states @xmath16 with non - negative real amplitudes .",
    "in order to create the @xmath3-qubit state @xmath16 , we will implement in sequence @xmath3 controlled rotations , with the @xmath17th rotation controlled by the state of the previous @xmath18 qubits for @xmath19 .",
    "we will first define these controlled rotations , and then in the next section we will describe how we would implement them .    will extend the definition of @xmath12 to @xmath20 for @xmath21 .",
    "suppose we had a copy of @xmath16 , and we measured the leftmost @xmath22 qubits in the computational basis .",
    "let @xmath12 be the non - negative real number so that @xmath23 equals the probability the measurement result is @xmath24 .",
    "then @xmath25 gives the conditional probability that the @xmath17th qubit is @xmath0 , conditioned on the state of the first state of the @xmath18 qubits being @xmath26 .",
    "define a controlled rotation @xmath27 by : @xmath28    as shown in figure [ genpsi.fig ] , the algorithm for generating the @xmath3-qubit state @xmath29 is a sequence of @xmath3 such controlled rotations .",
    "it is easy to show by induction that after the first @xmath22 controlled rotations are applied we have produced the state @xmath30 and therefore after all @xmath3 controlled rotations we have @xmath31    , width=240,height=144 ]",
    "in this section we show how to implement the controlled-@xmath32 with arbitrary precision .",
    "first assume we have a quantum register @xmath33 which encodes some `` classical '' description of the state @xmath34 .",
    "the state @xmath33 must contain enough information to allow the probabilities @xmath35 ( or a related quantity , such as the @xmath36 we define below ) to be computed .",
    "we also use an ancilla register of @xmath4 qubits initialized to the state @xmath0 .",
    "then we define operators @xmath37 for each @xmath38 as follows : @xmath39 where @xmath40 satisfies @xmath41 a simple application of the techniques in @xcite allow us to approximate ( arbitrarily well ) the transformation : @xmath42 also , define @xmath43 . with these components ,",
    "a network implementing @xmath44 is shown in figure [ u_k.fig ] .",
    ", width=336,height=124 ]    here we assumed that the algorithm works for a general family of states with classical descriptions @xmath33 . if we are only interested in producing a specific state @xmath16 the network can be simplified by removing the register containing @xmath33 and simplifying each @xmath37 to work only for that specific @xmath16 ( in the same way that one can simplify a circuit for adding variable inputs @xmath24 and @xmath45 to one that adds a fixed input @xmath46 to variable input @xmath45 ) .",
    "the overall efficiency of our algorithm depends on how efficiently we can implement @xmath37 ; in other words , how efficiently we can compute the conditional probabilities @xmath47 or equivalently @xmath48    one example for which this is easy is the symmetric states .",
    "the symmetric state @xmath49 is defined to be an equally - weighted superposition of the computational basis states @xmath50 that have hamming weight @xmath51 ( @xmath52 is the number of bits of @xmath24 that equal 1 )",
    ". that is , @xmath53 the conditional probability @xmath54 is easily computed to be @xmath55 for @xmath56 , and to be @xmath57 for @xmath58 .",
    "the hamming weight can be efficiently computed as shown in @xcite .",
    "then we simply need to reversibly compute the @xmath40 satisfying @xmath59 + @xmath13 .",
    "this technique will not allow us to generate efficiently all quantum states , but it will work for any family of states where for some reordering of the qubits we can efficiently compute the conditional probabilities @xmath62 .",
    "99 richard cleve , artur ekert , chiara macchiavello , michele mosca .",
    "`` quantum algorithms revisited '' proceedings of the royal society of london a , 454 , 339 - 354 , 1998 . on the quant - ph archive , report no .",
    "huelga , s.f . ,",
    "macchiavello , c. , pellizzari , t. , ekert , a. , plenio , m.b . and cirac j.i .",
    "1997 , e - print quant - ph/9707014 .",
    "p. kaye , m. mosca 2001 .",
    "`` quantum networks for concentrating entanglement '' on the quant - ph archive , report no . 0101009 ."
  ],
  "abstract_text": [
    "<S> quantum protocols often require the generation of specific quantum states . we describe a quantum algorithm for generating any prescribed quantum state . </S>",
    "<S> for an important subclass of states , including pure symmetric states , this algorithm is efficient . </S>"
  ]
}
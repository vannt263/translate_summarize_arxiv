{
  "article_text": [
    "imagine we start with a set of @xmath8 points allowed to move freely in the euclidean plane and add fixed - length bars between pairs of the points , one at a time .",
    "each bar fixes the distance between its endpoints , but otherwise does not constrain the motion of the points .",
    "informally , a maximal subset of the points which can rotate and translate , but otherwise has no internal flexibility is called a _ rigid component_. as bars are added , the set of rigid components may change , and this change can be very large : the addition of a single bar may cause @xmath9 many rigid components spanning @xmath10 points to merge into a single component spanning @xmath9 points .",
    "we are interested in the following question : _ if we add bars uniformly at random at what point does a giant ( linear - sized ) rigid component emerge and what is its size ? _ our answers are : ( 1 ) there is a phase transition from all components having at most three points to a unique giant rigid component when about @xmath11 random bars are added ; ( 2 ) when the linear - sized rigid component emerges , it contains at least nearly all of the @xmath7-core of the graph induced by these bars .",
    "one of the major motivations for studying this problem comes from physics , where these planar bar - joint frameworks ( formally described below ) are used to understand the physical properties of systems such as bipolymers and glass networks ( see , e.g. , the book by thorpe  _ et al . _",
    "@xcite ) .",
    "a sequence of papers  @xcite studied the emergence of large rigid components in glass networks generated by various stochastic processes , with the edge probabilities and underlying topologies used to model the temperature and chemical composition of the system .",
    "an important observation that comes from these results is that _ very large _ rigid substructures emerge _ very rapidly_. of particular relevance to this paper are the results of  @xcite . through numerical simulations",
    "they show that that there is a sudden emergence of a giant rigid component in the @xmath7-core of a @xmath12 random graph .",
    "the simulations of rivoire and barr ( see figure 1 in  @xcite ) also show that this phase transition occurs when there are about @xmath11 edges in the @xmath7-core .",
    "our results confirm these observations _",
    "theoretically_.    [ [ the - planar - bar - joint - rigidity - problem . ] ] the planar bar - joint rigidity problem .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the formal setting for the problem described above is the well - studied _ planar bar - joint framework _ model from rigidity theory ( see , e.g. , @xcite for an overview and complete definitions ) .",
    "a _ bar - joint framework _ is a structure made of _ fixed - length bars _ connected by _ universal joints _ with full rotational freedom at their endpoints .",
    "the allowed continuous motions preserve the lengths and connectivity of the bars .",
    "a framework is _ rigid _ if the only allowed motions are rotations or translations ( i.e. , euclidean motions ) ; it is _ minimally rigid _ if it is rigid but ceases to be so if any bar is removed .",
    "if the framework is not rigid , it decomposes uniquely into _ rigid components _ , which are the inclusion - wise maximal rigid sub - frameworks .",
    "figure [ fig : component - examples ] shows examples of rigid components .",
    "the combinatorial model for a bar - joint framework is a simple graph @xmath13 with @xmath8 vertices representing the joints , and @xmath14 edges representing the bars .",
    "a remarkable theorem of maxwell - laman @xcite says that rigidity for a _ _ generic _ _ framework ( and _ almost all _ frameworks are generic ) is determined by the underlying graph alone .",
    "the graph - theoretic condition characterizing minimal rigidity is a _ hereditary sparsity count _ ; for minimal rigidity the graph @xmath15 should have @xmath16 edges , and every subgraph induced by @xmath17 vertices in @xmath15 should have at most @xmath18 edges .",
    "therefore , by the maxwell - laman theorem generic rigidity in the plane becomes a _",
    "combinatorial _ concept , and from now on we will consider it as such .",
    "full definitions are given in section [ sec : rigid - prelim ] .",
    "[ [ contributions . ] ] contributions .",
    "+ + + + + + + + + + + + + +    with this background , we can restate our main question as follows : _ what is the behavior of rigid components in a generic framework with its combinatorics given by an erds - rnyi random graph @xmath12 _ ?",
    "our main result is the following :    [ theo : main ] for any constant @xmath19 the following holds ,    * if @xmath1 , then , w.h.p . , all rigid components in @xmath0 span at most three vertices and * if @xmath2 , then , w.h.p . , there is a unique giant rigid component in @xmath0 spanning a @xmath5 fraction of the @xmath6-core .",
    "the @xmath6-core of @xmath0 is the maximal induced subgraph obtained by starting from the @xmath7-core and then inductively adding vertices with @xmath4 neighbors in the graph obtained so far ( see section [ sec : random - prelim ] for the full definition ) .",
    "the constant @xmath20 is the threshold for @xmath4-orientability discovered independently by fernholz and ramachandran  @xcite and cain , sanders , and wormald  @xcite .",
    "a graph @xmath15 is @xmath4-orientable if all its edges can be oriented so that each vertex has out - degree - orientability is defined in terms of _ in - degree _ exactly two orientations .",
    "] at most two . there is a natural connection between the notions of @xmath4-orientability and minimal rigidity : @xmath4-orientable graphs can be characterized using a counting condition that closely resembles the counting condition of minimal rigidity ( see section [ sec : rigid - prelim ] ) .",
    "this connection explains intuitively why the threshold for the emergence of giant rigid component should be at least @xmath21 .",
    "for example , if a giant rigid component emerges with @xmath1 , then addition of another @xmath22 random edges would create , with high probability , a `` locally dense '' induced subgraph with more than twice the number of edges than vertices .",
    "this prevents the graph from being @xmath4-orientable , contradicting the @xmath4-orientability threshold theorems of  @xcite .",
    "we prove the bound on the size of the giant rigid component by showing this following result .",
    "[ theo : almost ] let @xmath2 be a constant . then , w.h.p .",
    ", there is a subgraph of the @xmath6-core such that the edges of this subgraph can be oriented to give all but @xmath23 of the vertices in the @xmath6-core an out - degree of two .",
    "the results of  @xcite show that for @xmath24 , with high probability @xmath0 is not @xmath4-orientable , they do nt give quantitative bounds on the size of the set of vertices in @xmath0 that can be guaranteed an out - degree  @xmath4 .",
    "theorem  [ theo : almost ] , achieves this goal .",
    "our proof for theorem  [ theo : almost ] is constructive and uses an extension of the @xmath4-orientability algorithm of fernholz and ramachandran @xcite .",
    "our analysis is quite different from  @xcite and is based on proving subcriticality of the various branching processes generated by our algorithm .",
    "we use differential equations to model the branching process , and show subcriticality by analyzing these differential equations .",
    "[ [ other - related - work . ] ] other related work .",
    "+ + + + + + + + + + + + + + + + + + +    jackson _ et al . _",
    "@xcite studied the space of random @xmath25-regular graphs and showed that with high probability they are _ globally rigid _ ( a stronger notion of rigidity @xcite ) . in the @xmath12 model",
    "they prove that when @xmath26 , then with high probability @xmath12 is rigid , but they have no results for @xmath12 when the expected number of edges is @xmath27 . in a recent result ,",
    "theran  @xcite showed using a simple counting argument that for a constant @xmath28 w.h.p .",
    "all rigid components in @xmath0 are either _ tiny _ or _",
    "giant_. since we use this result as a technical tool , it is introduced in more detail in section [ sec : random - prelim ] .",
    "[ [ organization . ] ] organization .",
    "+ + + + + + + + + + + + +    this paper is organized as follows .",
    "we introduce the required background in combinatorial rigidity in section [ sec : rigid - prelim ] ( rigidity experts may skip this section ) , and the technical tools from random graphs we use to prove theorem [ theo : main ] in section [ sec : random - prelim ] ( random graphs experts may skip this section ) . with the background in place , we prove some graph theoretic lemmas in section [ sec : graphs ] .",
    "the proof that theorem [ theo : almost ] implies theorem [ theo : main ] is in section [ sec : thresh ] .",
    "the remainder of the paper is devoted to the proof of theorem [ theo : almost ] .",
    "section [ sec : conf ] introduces the facts about the random configuration model we need , and then we present our @xmath4-orientation algorithm in section [ sec : algo ] .",
    "section [ sec : almost ] proves theorem [ theo : almost ] .",
    "[ [ notations . ] ] notations .",
    "+ + + + + + + + + +    throughout this paper @xmath15 is a graph @xmath29 with @xmath30 and @xmath31 .",
    "all our graphs are simple unless explicitly stated otherwise .",
    "subgraphs are typically denoted by @xmath32 with @xmath17 vertices and @xmath33 edges .",
    "whether a subgraph is edge - induced or vertex - induced is always made clear .",
    "a _ spanning subgraph _ is one that includes the entire vertex set @xmath34 .",
    "erds - rnyi random graphs on @xmath8 vertices with edge probability @xmath35 are denoted @xmath12 .",
    "since we are interested in random graphs with constant average degree , we use the parameterization @xmath0 , where @xmath19 is a fixed constant .",
    "[ [ asymptotics . ] ] asymptotics .",
    "+ + + + + + + + + + + +    we are concerned with the asymptotic behavior of @xmath0 as @xmath36 .",
    "the constants implicit in the @xmath37 , @xmath38 , @xmath39 ; and the convergence implicit in @xmath40 are all taken to be uniform . a sequence of events @xmath41 holds _ with high probability _ ( shortly _ w.h.p .",
    "_ ) if @xmath42 = 1 - o(1)$ ] .",
    "in this section , we introduce the notations of and a number of standard results on _ combinatorial rigidity _ that we use throughout .",
    "all of the ( standard ) combinatorial lemmas presented here can be established by the methods of ( and are cited to ) @xcite , but we give some proofs for completeness and to introduce non - experts to style of combinatorial argument employed below .    [ [ sparse - and - spanning - graphs . ] ] sparse and spanning graphs .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + +    a graph @xmath15 with @xmath8 vertices and @xmath14 edges is @xmath43-sparse if , for all edge - induced subgraphs on @xmath17 vertices and @xmath33 edges , @xmath44 .",
    "if , in addition @xmath45 , @xmath15 is @xmath43-tight . if @xmath15 has a @xmath43-tight spanning subgraph it is @xmath43-spanning",
    "when @xmath46 and @xmath47 are non - negative integer parameters with @xmath48 the @xmath43-sparse graphs form a matroidal family ( * ? ? ?",
    "* theorem 2 ) with rich structural properties , some of which we review below . in the interest of brevity , we introduce only the parts of the theory required .    in particular , throughout , we are interested in only two settings of the parameters @xmath46 and @xmath47 : @xmath49 and @xmath50 ; and @xmath49 and @xmath51 . for economy , we establish some standard terminology following @xcite .",
    "a @xmath52-tight graph is defined to be a _ laman graph _ ; a @xmath52-sparse graph is _ laman - sparse _ ; a @xmath52-spanning graph is _ laman - spanning_.    [ [ the - maxwell - laman - theorem - and - combinatorial - rigidity . ] ] the maxwell - laman theorem and combinatorial rigidity .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the terminology of laman graphs is motivated by the following remarkable theorem of maxwell - laman .",
    "( maxwell - laman  @xcite ) [ thm : ml ] a generic bar - joint framework in the plane is minimally rigid if and only if its graph is a laman graph .",
    "an immediate corollary is that a generic framework is rigid , but not necessarily minimally so , if and only if its graph is laman - spanning . from now on",
    ", we will switch to the language of sparse graphs , since our setting is _",
    "entirely combinatorial_.    [ [ rigid - blocks - and - components . ] ] rigid blocks and components .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + +    let @xmath15 be a graph .",
    "a _ rigid block _ in @xmath15 is defined to be a vertex - induced laman - spanning subgraph .",
    "we note that if a block is not an induced laman graph , then there may be many different choices of edge sets certifying that it is laman spanning .",
    "a _ rigid component _ of @xmath15 is an inclusion - wise maximal block .- sparse .",
    "] as a reminder to the reader , although we have retained the standard terminology of _ `` rigid '' _ components , these definitions are graph theoretic .",
    "a _ laman - basis _ of a graph @xmath15 is a maximal subgraph of @xmath15 that is laman - sparse .",
    "all of these are the same size by the matroidal property of laman graphs ( * ? ? ?",
    "* theorem 2 ) , and each rigid block in @xmath15 induces a laman graph on its vertex set in any laman basis of @xmath15 .",
    "thus , we are free to pass through to a laman basis of @xmath15 or any of its rigid components without changing the rigidity behavior of @xmath15",
    ".    we now present some properties of rigid blocks and components that we use extensively .",
    "[ lem : component - decomp ] any graph @xmath15 decomposes uniquely into rigid components , with each edge in exactly one rigid component .",
    "these components intersect pairwise on at most one vertex , and they are independent of the choice of laman basis for @xmath15    since a single edge forms a rigid block , each edge must be in a maximal rigid block , which is the definition of a components . by picking a laman basis of @xmath15 , we may assume , w.l.o.g .",
    ", that @xmath15 is laman - sparse . in that case ,",
    "it is easy to check that two rigid blocks intersecting on at least two vertices form a larger rigid block .",
    "since components are rigid blocks , we then conclude that components intersect on at most one vertex .",
    "the rest of the lemma then follows from edges having two endpoints .",
    "[ lem : monotone ] adding an edge to a graph @xmath15 never decreases the size of any rigid component in @xmath15 ; i.e. , rigidity is a monotone property of graphs .",
    "there are two cases : either the new edge has both endpoints in a rigid component of @xmath15 or it does not . in the first case ,",
    "the component was already a laman - spanning induced subgraph and remains that way . in the second case ,",
    "lemma [ lem : component - decomp ] implies that the new edge is in exactly one component of the new graph ; this may subsume other components of @xmath15 or be just the new edge .",
    "either way , all of the components of @xmath15 remain rigid blocks in the new graph .",
    "the following lemma is quite well - known .",
    "[ lem : blocks - combine ] let @xmath15 be a graph , and let @xmath53 and @xmath54 be rigid blocks in @xmath15 and suppose that either :    * @xmath55 and there are at least three edges with one endpoint in @xmath56 and the other in @xmath57 , and these edges are incident on at least two vertices in @xmath56 and @xmath57 * @xmath58 ( and so by lemma [ lem : component - decomp ] the intersection is a single vertex @xmath59 ) and there is one edge @xmath60 with @xmath61 , @xmath62 and @xmath63 and @xmath64 distinct from @xmath59    then @xmath65 is a rigid block in @xmath15 .",
    "there are two cases to check . in either case , by lemma [ lem : component - decomp ] it is no loss of generality to assume that @xmath66 and @xmath67 are laman graphs on @xmath68 and @xmath69 vertices .",
    "the stated result follows from picking bases .",
    "if @xmath56 and @xmath57 are disjoint , we further assume that there are exactly three edges going between them .",
    "call this set @xmath70 .",
    "since the @xmath71 are disjoint by lemma [ lem : component - decomp ] , we see that @xmath65 spans @xmath72 total edges . taking an arbitrary subset @xmath73 of @xmath17 vertices",
    ", we see that it spans at most @xmath74 edges , proving that @xmath65 spans an induced laman graph .",
    "the cases where @xmath56 and @xmath57 is similar , after accounting for a one - vertex overlap with inclusion - exclusion .",
    "[ lem : circuits ] if @xmath15 is a simple graph on @xmath8 vertices and has @xmath75 edges , then @xmath15 spans a rigid block that is not laman - sparse on at least four vertices .",
    "this block has minimum vertex degree at least  @xmath7 .",
    "since @xmath15 has more than @xmath76 edges , it is not laman - sparse . select an edge - wise minimal subgraph @xmath32 on @xmath17 vertices and @xmath33 edges that is not laman - sparse , and , additionally , make @xmath17 minimum . by minimality of @xmath33 , @xmath77 , and since @xmath15 is simple , @xmath32 is not a doubled edge , and thus has at least four vertices .",
    "since dropping any edge from @xmath32 results in a subgraph on the same vertices with @xmath18 edges that is laman - sparse , @xmath32 is laman - spanning , giving the desired rigid block . finally , removing a degree one or two vertex from @xmath32 would result in a smaller subgraph that is not laman - sparse , so minimality of @xmath17 implies that @xmath32 has minimum vertex degree @xmath7 .",
    "[ lem : laman - spanning - degrees ] if @xmath13 is laman - spanning graph on @xmath8 vertices , then @xmath15 has minimum degree at least two .    pick a laman basis @xmath32 of @xmath15 .",
    "if @xmath32 has a degree one vertex @xmath59 , then @xmath78 spans @xmath79 edges , contradicting the assumption that @xmath32 was a laman graph .",
    "thus no graph @xmath15 with a degree one vertex can have a spanning subgraph that is a laman graph .",
    "[ lem : peel - degree - two ] if @xmath13 is a laman - spanning graph on @xmath8 vertices , removing a degree two vertex results in a smaller laman - spanning graph .",
    "let @xmath59 be a degree two vertex in @xmath15 .",
    "pick a laman basis @xmath32 of @xmath15 .",
    "by lemma [ lem : laman - spanning - degrees ] , both edges incident on @xmath59 are in @xmath32 . in @xmath32 , @xmath78 spans @xmath80 edges , implying that @xmath78 induces a smaller laman graph in @xmath32 , from which it follows that @xmath78 is laman - spanning .",
    "[ [ orientatbility - and-20-sparsity . ] ] @xmath4-orientatbility and @xmath81-sparsity .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we now consider the structure properties of @xmath81-sparse graphs .",
    "the properties we review here can be obtained from @xcite . a graph @xmath15",
    "is defined to be @xmath4-orientable if its edges can be oriented such that each vertex has out - degree at most @xmath4 .",
    "there is a close connection between @xmath4-orientability and @xmath81-sparsity expressed in the following lemma .",
    "[ lem : mapsparse ] a graph @xmath15 is @xmath81-tight if and only if it is a maximal @xmath4-orientable graph .    if @xmath13 is maximal and @xmath4-orientable , is has @xmath8 vertices and @xmath82 edges .",
    "counting edges by their tails in an out - degree at most two orientation , any subset of @xmath17 vertices is incident on , and therefore induces , at most @xmath83 edges . on the other hand",
    ", the sparsity counts and hall s matching theorem implies that the bipartite graph with vertex classes indexed by @xmath84 and two copies of @xmath34 with edges between `` edge vertices '' and the copies of their endpoints has a perfect matching .",
    "the matching yields the desired orientation by orienting edges into the vertex they are matched to , as there are two copies of every vertex in the bipartite graph .    as a corollary",
    ", we obtain ,    [ lem : sparseorientable ] a graph @xmath15 is @xmath4-orientable if and only if it is @xmath81-sparse .    if @xmath15 is @xmath4-orientable , than any subset @xmath85 of @xmath17 vertices is incident on , and thus induces , at most @xmath83 edges . on the other hand ,",
    "if @xmath15 is @xmath81-sparse , extend it to being @xmath81-tight and then apply lemma [ lem : mapsparse ] to get the required orientation .",
    "[ [ henneberg - moves - and-2-orientability . ] ] henneberg moves and @xmath4-orientability . + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in our analysis of the @xmath4-orientation heuristic , we will make use of so - called henneberg moves , which give inductive characterizations of all @xmath43-sparse graphs .",
    "henneberg moves originate from @xcite and are generalized to the entire family of @xmath43-sparse graphs in @xcite .",
    "the moves are defined as follows :    * henneberg i : * : :    let @xmath15 be a graph on @xmath86 vertices . add a    new vertex @xmath59 to @xmath15 and two new edges to    neighbors @xmath63 and @xmath64 . *",
    "henneberg ii : * : :    let @xmath15 be a graph on @xmath86 vertices , and let    @xmath60 be an edge in @xmath15 . add a new vertex    @xmath59 to @xmath15 , select a neighbor @xmath46 ,    remove the edge @xmath60 , and add edges between    @xmath59 and @xmath63 , @xmath64 , and    @xmath46 .",
    "figure [ fig : henneberg ] shows examples of the two moves . since we are concerned with @xmath81-sparsity , while @xmath59 must be new , the neighbors @xmath63 , @xmath64 , and @xmath46 may be the same as each other or @xmath59 .",
    "when this happens we get self - loops or multiple copies of the same edge ( i.e. , a multigraph ) .",
    "the fact we need later is ,    [ lem : henneberg ] the henneberg moves preserve @xmath4-orientability .",
    "we give a proof for completeness , since we will use the proof idea later .",
    "assume @xmath15 is @xmath4-orientable .",
    "for the henneberg i move , orient the two new edges out of the new vertex @xmath59 . for the henneberg ii",
    "move , suppose that @xmath60 is oriented @xmath87 in @xmath15 .",
    "orient the new edges @xmath88 , @xmath89 , @xmath90 .",
    "we remark that although the development here follows along the lines of the rigidity - inspired @xcite , this idea was developed ( to our knowledge ) independently by fernholz and ramachandran @xcite .",
    "[ [ almost - spanning - subgraphs . ] ] almost spanning subgraphs .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + +    we introduce a final piece of notation , which is the concept of an _ almost spanning graph_. a graph @xmath15 on @xmath8 vertices is defined to be _ almost @xmath81-spanning _ if it contains a @xmath81-spanning subgraph on @xmath91 vertices .",
    "[ [ the - explosive - growth - of - rigid - components . ] ] the explosive growth of rigid components .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we conclude this section with an example that shows how the behavior of rigid components can be _ very _ different than that of connectivity . unlike connectivity",
    ", the size of the largest rigid component in a graph may increase from @xmath10 to @xmath9 after adding only one edge .",
    "a dramatic family of examples is due to ileana streinu @xcite .",
    "we begin with the graph obtained by dropping an edge from @xmath92 ; this graph has @xmath93 edges , and its rigid components are simply the edges .",
    "we then repeatedly apply the henneberg ii move , avoiding triangles whenever possible .",
    "as we increase the number of vertices @xmath8 , for even @xmath8 , we obtain graphs with @xmath94 edges and no rigid components spanning more than two vertices ( see figure  [ fig : no - components - examples](c ) ) ; but adding _ any _ edge to these graphs results in a laman - spanning graph .",
    "this example can be interpreted as saying that rigidity is an inherently non - local phenomenon .",
    "let @xmath12 be a random graph on @xmath8 vertices where each edge appears independently of all others with probability @xmath35 . in this paper , we are interested in sparse random graphs , which are generated by @xmath95 for some constant @xmath28 .",
    "this section introduces the results from random graphs that we need as technical tools , along with our theorem [ theo : almost ] to prove the main theorem  [ theo : main ] .    [",
    "[ size - of - the-3-core . ] ] size of the @xmath7-core .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the _ @xmath46-core _ of a graph is defined as the maximal induced subgraph of minimum degree at least @xmath46 .",
    "the @xmath46-core thresholds for random graphs have been studied in  @xcite . for @xmath96 ,",
    "let @xmath97 denote a poisson random variable with mean @xmath98 .",
    "let us denote the poisson probabilities by @xmath99 $ ] .",
    "let @xmath100 $ ] .",
    "also , let @xmath101 for @xmath102 , let @xmath103 denote the largest solution to @xmath104 .",
    "in  @xcite , pittel , spencer and wormald discovered that for @xmath105 , @xmath106 is the threshold for the appearance of a nonempty @xmath46-core in the random graph @xmath107 .    [ prop : psw ] consider the random graph @xmath107 , where @xmath108 is fixed .",
    "let @xmath109 be fixed .",
    "if @xmath110 , then w.h.p . the @xmath46-core is empty in @xmath107 . if @xmath102 , then w.h.p . there exists a @xmath46-core in @xmath107 whose size is about @xmath111 .",
    "we will use the @xmath112 instance of proposition [ prop : psw ] . substituting @xmath112 in the above equation",
    "gives @xmath113 , and the size of the 3-core at @xmath114 is about @xmath115 .",
    "[ [ the-32-core . ] ] the @xmath6-core .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + +    extending the @xmath7-core , we define the @xmath116-core of a graph as the maximal subgraph that can be constructed starting from the @xmath7-core and inductively adding vertices with at least two neighbors in the subgraph built so far .    from the definition ,",
    "it is easy to see that the @xmath6-core emerges when the @xmath7-core does , and , since it contains the @xmath7-core , it it , w.h.p . , empty or giant in a @xmath12 .",
    "a branching process heuristic indicates that , after it emerges , the fraction of the vertices in the @xmath6-core is the root @xmath117 of the equation @xmath118 ( where @xmath119 comes from @xmath120 $ ] ) .",
    "however , we do not know how to make the argument rigorous , and so we leave it as a conjecture . at @xmath121",
    "the conjectured number of vertices in the @xmath6-core is about @xmath122 .",
    "[ [ the-2-orientability - threshold . ] ] the @xmath4-orientability threshold .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    define the constant @xmath21 to be the supremum of @xmath28 such that the @xmath7-core of @xmath0 has average degree at most @xmath25 .",
    "fernholz and ramachandran and cain , sanders , and wormald independently proved that @xmath21 is the threshold for @xmath4-orientability of @xmath0 .",
    "[ prop : fr ] with high probability , for any fixed constant @xmath19 :    * if @xmath1 , @xmath0 is @xmath4-orientable . * if @xmath2 , @xmath0 is not @xmath4-orientable .    [",
    "[ rigid - components - are - small - or - giant . ] ] rigid components are small or giant .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    an edge counting argument ruling out small dense subgraphs in @xmath0 shows the following fact about rigid components in random graphs .",
    "[ prop : lt ] let @xmath123 be a constant .",
    "then , w.h.p . , all rigid components in a random graph @xmath0 have size @xmath124 , @xmath4 , @xmath7 , or @xmath9 .",
    "this short section gives the combinatorial lemmas we need to derive theorem [ theo : main ] from theorem [ theo : almost ] .",
    "the first is a simple observation relating adding edges to the span of a rigid component and @xmath4-orientability .",
    "[ lem : adding - edges - to - laman - blocks ] let @xmath13 be a graph and let @xmath125 be a rigid component of @xmath15 .",
    "then after adding any @xmath25 edges to the span of @xmath85 , the resulting graph is not @xmath4-orientable .",
    "let @xmath85 have @xmath17 vertices .",
    "since @xmath32 is a rigid component , it has a laman basis by definition and thus spans at least @xmath18 edges .",
    "after the addition of @xmath25 edges to the span of @xmath85 , it spans at least @xmath126 edges , blocking @xmath4-orientability by lemma [ lem : sparseorientable ] .",
    "another simple property we will need is that if @xmath15 is not laman - sparse it spans a rigid component with non - empty @xmath6-core .",
    "[ lem : component-3plus2core ] let @xmath15 be a simple graph that is not laman - sparse . then @xmath15 spans a rigid component on at least four vertices that is contained in the @xmath6-core .    since @xmath15 is simple and fails to be laman sparse , the hypothesis of lemma [ lem : circuits ] is met , so there is a rigid block in @xmath15 with a non - empty @xmath7-core .",
    "the component containing this block has minimum degree two by lemma [ lem : laman - spanning - degrees ] , and peeling off degree two vertices will never result in a degree one vertex by lemma [ lem : peel - degree - two ] , so it is in the @xmath6-core .",
    "we conclude with the main graph - theoretic lemma we need .",
    "[ lem : mainlemma ] let @xmath13 be a simple graph that :    * coincides with its @xmath6-core ; * spans a rigid component @xmath125 on @xmath127 vertices ; * and the set of @xmath128 vertices @xmath129 is incident on at least @xmath130 edges .",
    "then at least one of the following is true    * @xmath15 is laman - spanning * @xmath15 spans a rigid component other than @xmath32 on at least @xmath25 vertices    pick a laman basis for @xmath32 and discard the rest of the edges spanned by @xmath85 . call the remaining graph @xmath131 . observe that @xmath15 and @xmath131 have the same rigid components . by hypothesis",
    ", @xmath131 now has at least @xmath132 edges .",
    "if @xmath131 is laman - spanning we are done , so we suppose the contrary and show that this assumption implies the second conclusion .    because @xmath131 is not laman - spanning and has @xmath76 edges , it must not be laman - sparse . by lemma [ lem : circuits ] , @xmath131 spans a rigid block that is not laman - sparse , and this block must be contained in some rigid component @xmath133 of @xmath131 .",
    "finally , since @xmath85 induces a laman - sparse rigid component of @xmath131 and @xmath133 is a rigid component that is nt laman - sparse , @xmath133 and @xmath32 are different rigid components of @xmath131 and thus @xmath15 .",
    "in this section , we prove our main theorem :    [ [ roadmap . ] ] roadmap .",
    "+ + + + + + + +    the structure of this section is as follows .",
    "we start by establishing that the constant @xmath21 is the sharp threshold for giant rigid components to emerge .",
    "this is done in two steps :    * that there is a giant rigid component , w.h.p .",
    ", when @xmath24 is the easier direction , coming from counting the number of edges in the @xmath7-core using proposition [ prop : fr ] .",
    "( lemma [ lem : thresh - gec2 ] ) * the more difficult direction is that when @xmath1 all components are w.h.p .",
    "size two or three is proved using the following idea : if there is a giant rigid component , adding @xmath134 more random edges will block @xmath4-orientability , contradicting proposition [ prop : fr ] .",
    "( lemma [ lem : thresh - lec2 ] )    the idea of the proof of the size of the giant rigid component is to apply the main combinatorial lemma [ lem : mainlemma ] to the @xmath6-core of @xmath0 after adding a small number of uniform edges .",
    "this is possible as a consequence of the more technical theorem [ theo : almost ] . since only the first conclusion of lemma [ lem : mainlemma ] is compatible with proposition [ prop : lt ] ,",
    ", the presence of a large enough giant rigid component follows . before we can do that we establish two important structural properties :    *",
    "there is a unique giant rigid component , w.h.p .",
    ", ( lemma [ lem : giant - component - unique ] ) * it is contained in the @xmath6-core ( lemma [ lem : in-3p2-core ] )    with these results , lemma [ lem : giant - component - size ] formalizes the plan described above , and theorem [ theo : main ] follows .    [",
    "[ sharp - threshold . ] ] sharp threshold .",
    "+ + + + + + + + + + + + + + + +    we first establish that @xmath21 is the sharp threshold for emergence of giant rigid components .",
    "this is done in the next two lemmas , starting with the more difficult direction .",
    "[ lem : thresh - lec2 ] let @xmath1 .",
    "then w.h.p , @xmath0 has only rigid components of size at most three .",
    "proposition [ prop : lt ] implies that all rigid components in @xmath0 have size at most three or are giant .",
    "we will show that , w.h.p . , there are no giant rigid components .",
    "let @xmath135 be the event that @xmath15 spans a rigid component @xmath125 on @xmath136 vertices and @xmath33 edges .",
    "define the graph @xmath131 to be the one obtained by adding edges sampled with probability @xmath137 , independently , from the complement of @xmath15 in @xmath138 . since @xmath131 is a random graph with edge probability @xmath139 , by proposition [ prop : fr ] @xmath131 is , w.h.p .",
    "so : @xmath140\\pr\\left[\\gamma\\right ] +   \\\\",
    "\\pr\\left[\\text{$h$ is not $ 2$-orientable}|\\bar\\gamma\\right]\\pr\\left[\\bar\\gamma\\right ] = o(1 ) \\end{split}\\ ] ] we will show that @xmath141 $ ] is uniformly bounded away from zero , which then forces the probability of a rigid component on more than three vertices to be @xmath142 .",
    "if @xmath135 holds , proposition [ prop : lt ] implies that , @xmath143 , w.h.p .",
    "it follows that , conditioned on @xmath135 , each of the added edges is in the span of @xmath85 with probability @xmath144 , so the probability that at least four of them end up in the span of @xmath85 is @xmath134 as well .",
    "this shows that with probability @xmath134 , the combinatorial lemma lemma [ lem : adding - edges - to - laman - blocks ] applies and so @xmath145 = \\theta(1).\\ ] ]    [ lem : thresh - gec2 ] let @xmath2 .",
    "then w.h.p .",
    ", @xmath0 has at least one giant rigid component .    by lemma [ lem : circuits ] ,",
    "any simple graph with @xmath8 vertices and at least @xmath146 edges spans a rigid block on at least @xmath25 vertices . proposition [ prop : fr ] implies that for @xmath2 , the @xmath7-core of @xmath0 induces such a graph w.h.p .",
    "finally proposition [ prop : lt ] implies that there is a giant rigid component w.h.p .",
    "[ [ uniqueness - of - the - giant - rigid - component . ] ] uniqueness of the giant rigid component .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    before we determine the size , we show that w.h.p .",
    "there is only one giant rigid component and that it is contained in the @xmath6-core .",
    "[ lem : giant - component - unique ] let @xmath2 . then w.h.p .",
    ", there is a unique giant rigid component in @xmath0 .    by lemma [ lem : thresh - gec2 ] ,",
    "when @xmath2 w.h.p .",
    "there is at least one giant rigid component in @xmath0 . to show the giant rigid component is unique ,",
    "we consider @xmath0 as being generated by the following random graph process : first select a linear ordering of the @xmath147 edges of @xmath138 uniformly at random and take the first @xmath14 edges from this ordering , where @xmath14 has binomial distribution with parameters @xmath147 and @xmath148 .    consider the sequence of graphs @xmath149 defined by adding the edges one at a time according to the selected ordering .",
    "define @xmath150 $ ] to be _ critical _ if @xmath151 has one more rigid component spanning more than three vertices than @xmath152 and _ bad _ if @xmath151 has more than one such rigid component .    by proposition [ prop : lt ] ,",
    ", all rigid components on more than three vertices that appear during the process have size @xmath9 .",
    "thus , w.h.p .",
    ", at most @xmath10 @xmath153 are critical .    to bound the number of bad @xmath153 we note that if @xmath125 and @xmath154 are distinct giant rigid components , then the probability that a random edge has one endpoint in @xmath155 and the other in @xmath156 is @xmath134 , and the probability that two of the added edges are incident on the same vertex is @xmath157 .",
    "so after the addition of @xmath158 random edges , at least three of them have this property , w.h.p .",
    "lemma [ lem : blocks - combine ] then implies that , w.h.p .",
    ", @xmath32 and @xmath159 persist as giant rigid components for at most @xmath158 steps in the process .",
    "since there are at most @xmath10 such pairs , the total number of bad or critical @xmath153 is @xmath158 , w.h.p .",
    "the probability that @xmath160 is @xmath161 , by standard properties of the binomial distribution .",
    "a union bound shows that the probability @xmath14 is bad is @xmath162 , so the probability there is only one rigid component on more than three vertices and that it is giant is @xmath163 as desired .",
    "we need two more structural lemmas about the relationship between the giant rigid component and the @xmath6-core .",
    "[ lem : in-3p2-core ] let @xmath2 .",
    "then , the unique giant rigid component that exists w.h.p . by lemma [ lem : giant - component - unique ] is contained in the @xmath6-core of @xmath0 .",
    "moreover , the giant rigid component contains a ( smaller ) unique giant rigid block that lies entirely in the @xmath7-core .    by lemma [ lem : giant - component - unique ] , w.h.p .",
    ", @xmath0 has exactly one rigid component of size at least @xmath25 , and it spans at least twice as many edges as vertices .",
    "thus lemma [ lem : component-3plus2core ] applies to the rigid component , w.h.p .",
    ", so it is in the @xmath6-core . because the @xmath7-core itself has average degree at least @xmath25 , the second part of the lemma follows from the same argument .",
    "[ lem:3p2-core ] let @xmath24 and suppose that the giant rigid block in the @xmath7-core implied by lemma [ lem : in-3p2-core ] spans all but @xmath22 of the vertices in the @xmath7-core .",
    "then , w.h.p .",
    ", the giant rigid component spans all but @xmath22 vertices in the @xmath6-core .    since @xmath24 , both the @xmath7-core and the @xmath6-core span @xmath9 vertices ,",
    "if the @xmath6-core has @xmath22 more vertices than the @xmath7-core , then we are already done .",
    "thus for the rest of the proof , we assume that the @xmath6-core spans @xmath9 more vertices than the @xmath7-core .",
    "let @xmath15 denote @xmath0 , let @xmath164 denote the @xmath7-core , let @xmath53 be the @xmath6-core , and let @xmath125 be the giant rigid block in the @xmath7-core .",
    "we now observe that each @xmath165 sits at the `` top '' of a binary tree with its `` leaves '' in @xmath166 .",
    "a branching process argument shows that each of these has height at most @xmath167 , w.h.p .",
    "on the other hand , a vertex @xmath168 is in the giant rigid component when all of these @xmath158 `` leaves '' lie in @xmath85 .",
    "since @xmath169 has @xmath22 vertices , this happens with probability @xmath163 .",
    "[ [ size - of - the - giant - rigid - component . ] ] size of the giant rigid component .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we are now ready to bound the size of the giant rigid component when it emerges .",
    "here is the main lemma .",
    "[ lem : giant - component - size ] let @xmath24 .",
    "then , w.h.p . , the unique giant rigid component implied by lemma [ lem : giant - component - unique ] spans a @xmath5-fraction of the vertices in the @xmath6-core .",
    "let @xmath170 , let @xmath171 be the @xmath7-core of @xmath15 , and let @xmath125 be a giant rigid block of @xmath172 implied , w.h.p . by lemma [ lem : in-3p2-core ] .",
    "let @xmath173 be the size of @xmath166 and @xmath17 the size of @xmath85",
    ". with high probability , @xmath173 and @xmath17 are @xmath9 .    by theorem [ theo : almost ] ( and",
    "this is the hard technical step ) , @xmath174 is incident on @xmath175 edges in @xmath172 .",
    "define @xmath131 to be the graph obtained by adding each edge of @xmath176 to @xmath15 with probability such that @xmath131 and @xmath177 are asymptotically equivalent .",
    "let @xmath178 be a fixed constant and define @xmath135 to be the event that @xmath179 ; i.e. , the giant rigid component spans at most a @xmath180-fraction of the @xmath6-core in @xmath15 . conditioned on @xmath135 ,",
    "the expected number of edges added between @xmath85 and @xmath181 is @xmath182 , so w.h.p .",
    ", lemma [ lem : mainlemma ] applies to @xmath166 in @xmath131 .",
    "recall that lemma [ lem : mainlemma ] has two conclusions :    * @xmath166 induces a laman - spanning subgraph * @xmath166 spans multiple components spanning at least four vertices in @xmath131    the second case happens with probability @xmath142 by proposition [ prop : lt ] , so w.h.p .",
    ", @xmath166 is laman - spanning in @xmath131 .    to complete the proof",
    ", we note that by @xcite adding @xmath22 edges causes the @xmath7-core to grow by @xmath22 vertices , w.h.p .",
    "thus the @xmath7-core of @xmath15 spans all but @xmath22 vertices in the @xmath7-core of @xmath131 .",
    "now lemma [ lem:3p2-core ] applies to @xmath131 , showing that , w.h.p .",
    ", all but @xmath22 vertices in the @xmath6-core lie in the giant rigid component .",
    "[ [ proof - of - theorem - theomain . ] ] proof of theorem [ theo : main ] .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the theorem follows from lemma [ lem : thresh - lec2 ] , lemma [ lem : thresh - gec2 ] , and lemma [ lem : giant - component - size ] .",
    "we now develop the setting used in the proof of theorem [ theo : almost ] , which is based on our analysis of a @xmath4-orientation heuristic for random graphs , which is introduced in the next section .",
    "the heuristic operates in the random configuration model ( introduced in  @xcite ) , which we briefly introduce here .",
    "[ [ random - configurations . ] ] random configurations .",
    "+ + + + + + + + + + + + + + + + + + + + + +    a _ random configuration _ is a model for random graphs with a pre - specified degree sequence ; the given data is a vertex set @xmath34 and a list of degrees for each vertex such that the sum of the degrees is even .",
    "define @xmath184 to denote the degree of a vertex @xmath185 .",
    "a random configuration is formed from a set @xmath186 consisting of @xmath184 _ copies _ of each vertex @xmath187 , defined to be the set of ( vertex ) copies of @xmath34 .",
    "let @xmath188 denote a uniformly random perfect matching in @xmath186 .",
    "the multigraph @xmath189 defined by @xmath186 and @xmath188 has @xmath34 as its vertex set and and edge @xmath190 for each copy of a vertex @xmath59 matched to a copy of a vertex @xmath191 .",
    "the two key facts about random configurations that we use here are :    * any property that is holds w.h.p . in @xmath192 holds w.h.p . when conditioned on @xmath192 being simple @xcite . *",
    "any property that holds w.h.p . for @xmath192 in a random configuration with asymptotically poisson degrees holds w.h.p . in the sparse @xmath0 model @xcite .",
    "since we are only interested in proving results on @xmath0 , from now all random configurations discussed have asymptotically poisson degree sequences .    [",
    "[ the - algorithmic - method . ] ] the algorithmic method .",
    "+ + + + + + + + + + + + + + + + + + + + + + +    our proof of theorem [ theo : almost ] relies on the following observation : a property that holds w.h.p . for _ any _ algorithm that generates a uniform matching @xmath188 holds w.h.p . for a random configuration .",
    "the following two moves were defined by fernholz and ramachandran @xcite .",
    "* fr i * : :    let @xmath186 be a set of vertex copies . select    ( arbitrarily ) any copy @xmath193 and match it to a copy    @xmath194 , selected uniformly at random .",
    "the matching    @xmath188 is given by the matched pair    @xmath195 and a uniform matching on    @xmath196 .",
    "* fr ii * : :    select two copies @xmath193 and @xmath194 .",
    "let    @xmath197 be a uniform matching on    @xmath196 .",
    "produce the matching    @xmath188 as follows :    +    * with probability @xmath198 add the matched    pair @xmath199 to @xmath197    * otherwise , select a matched pair @xmath200 uniformly    at random and replace it in @xmath197 with the pairs    @xmath201 , @xmath202 .",
    "these two moves generate uniform matchings .",
    "[ lem : matching - moves ] matchings generated by recursive application of the moves fr i and fr ii generate uniform random matchings on the set of vertex copies @xmath186 .",
    "we will only use the move frii in the special situation in which @xmath193 and @xmath194 are copies of the same vertex . with this specialization , in terms of the graph @xmath192",
    ", the two moves correspond to :    * fr i * : :    reveal an edge of @xmath192 incident on the vertex    @xmath59 that @xmath193 is a copy of . * fr ii * : :    pick two copies @xmath193 and @xmath194 of a vertex    @xmath59 . generate @xmath203    and then complete generating @xmath192 by either    adding a self - loop to @xmath59 or splitting the edge    @xmath60 corresponding to @xmath200 by    replacing it with edges @xmath204 and @xmath205 , with    probabilities as described above .",
    "we are now ready to describe our @xmath4-orientation algorithm .",
    "it generates the random multigraph @xmath192 using the moves fr i and fr ii in a particular order and orients the edges of @xmath192 as they are generated .",
    "since theorem [ theo : almost ] is only interested in the @xmath6-core , we assume that our algorithm only runs on the @xmath6-core of @xmath192 . since we can always orient degree two vertices so that both incident edges point out , the only difficult part of the analysis is the behavior of our algorithm on the @xmath7-core of @xmath192 .",
    "we denote the set of copies corresponding to the @xmath7-core by @xmath206 and the corresponding multigraph by @xmath207 .",
    "define the number of copies of a vertex @xmath59 in @xmath206 by @xmath208 .",
    "[ [ the-2-orientation - algorithm . ] ] the @xmath4-orientation algorithm .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we now define our orientation algorithm in terms of the fr moves .",
    "we define a vertex @xmath59 to be _ processed _ if it is selected deterministically at any time .",
    "a vertex is defined to be _ tight _ if the algorithm orients exactly two edges out of it and _ loose _ otherwise . for convenience ,",
    "when a vertex runs out of copies , we simply remove it from @xmath206 ; thus when we speak of the number of remaining vertices , we mean the number of vertices with any copies left on them .",
    "[ [ correctness - and - structural - properties . ] ] correctness and structural properties .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we now check that the @xmath4-orientation algorithm is well - defined .",
    "[ lem : algorithm - correctness ] the @xmath4-orientation algorithm generates a uniform matching .",
    "this follows from the fact that it is based on the fr moves and lemma [ lem : matching - moves ] .",
    "the only other thing to check is that if @xmath59 is being processed and the algorithm is called on @xmath59 again that @xmath59 is still a minimum degree vertex in @xmath206 .",
    "this is true , since @xmath59 started as minimum - degree and the fr moves decrease its degree at least as much as any other vertex .",
    "the following structural property allows us to focus only on the evolution of the degree sequence .",
    "[ lem : loose - vertices ] a loose vertex is @xmath59 generated only in one of three ways :    * @xmath59 is never processed , because it runs out of copies before it is selected * @xmath59 has degree one in @xmath206 when it is processed * @xmath59 has degree two in @xmath206 when it is processed , and a self - loop is revealed    the proof is a case analysis .    * in step 1 , if a self - loop is not generated , this is equivalent to the henneberg i move , so by lemma [ lem : henneberg ] @xmath59 ends up being tight .",
    "* step 2 always corresponds to a henneberg ii move or creates a self - loop , and so by lemma [ lem : henneberg ] @xmath59 ends up being tight either way , and the out - degree of no other vertex changes .",
    "* step 3 can not leave @xmath59 with fewer than two copies . *",
    "the other cases are the ones in the statement of the lemma , completing the proof .",
    "because of the algorithm s recursive nature , we can , at any time , suspend the algorithm and just generate a uniform matching on the remaining configuration . in the next section",
    ", we will use this observation to split the analysis into two parts .",
    "[ lem : suspend ] let @xmath209 denote the remaining configuration at time @xmath153 .",
    "suppose that , w.h.p .",
    ", a random configuration @xmath210 on @xmath209 is @xmath81-spanning .",
    "then , w.h.p .",
    ", there is an orientation of @xmath207 in which all the vertices of @xmath209 are tight , and the out - degrees of vertices in @xmath211 are the same as in the full algorithm .",
    "since @xmath210 comes from a uniform matching on the remaining copies , and the fr ii move only requires this as input , the cut - off version of the @xmath4-orientation algorithm generates a uniform matching .",
    "thus , w.h.p . , results for it hold for @xmath207 .    by hypothesis , w.h.p .",
    ", we can orient @xmath210 such that each vertex has out - degree at least two : @xmath210 has a subgraph that is @xmath81-spanning and orient the remaining edges arbitrarily , so all the vertices of @xmath210 are tight , w.h.p .",
    "moreover , since before @xmath210 is generated , the cut - off algorithm acts the same way as the full algorithm , which implies that how we orient the edges of @xmath210 does not change the out - degrees in @xmath211 .",
    "so the final thing to check is that the fr i and fr ii moves do nt change the out - degrees in @xmath210 after the recursive calls return to them .    * for fr",
    "i , no edges induced by @xmath210 are involved , so the statement is trivial . * for fr",
    "ii , either a self - loop is generated , in which case the proof is the same as for fr i ; or an edge is split , in which case the construction used to prove lemma [ lem : henneberg ] shows that the out - degree of vertices in @xmath210 remains unchanged .",
    "this completes the proof .    [",
    "[ the - simplified - algorithm . ] ] the simplified algorithm .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + +    in light of lemma [ lem : loose - vertices ] , we can simplify the analysis by simply tracking how the degree sequence evolves as we remove copies from @xmath206 .",
    "since loose vertices are generated only when a vertex runs out of copies before the algorithm had a chance to orient two edges out of them , we can ignore the edges and just remove copies as follows .    as a corollary to lemma [ lem : loose - vertices ] we have ,",
    "[ lem : simplified - algorithm ] the number of loose vertices generated by the simplified algorithm is exactly the number of vertices that run out of copies as in l@xmath124l@xmath7 in lemma [ lem : loose - vertices ]    the number of remaining copies of each vertex in @xmath206 evolves as in the full algorithm .",
    "in this section we prove ,    [ [ roadmap.-1 ] ] roadmap .",
    "+ + + + + + + +    the proof is in two stages : before the minimum numbers of copies on any vertex remaining reaches four and after .",
    "the overall structure of the argument is as follows :    * at the start , the minimum number of copies on any vertex in @xmath206 is three .",
    "we run the simplified algorithm until the minimum degree in @xmath206 rises to four , or the number of vertices remaining reaches @xmath212 . *",
    "since we only run the simplified algorithm when there are are @xmath213 copies remaining , we can give bounds on the number of loose vertices generated by analyzing it as a series of branching processes .",
    "* once the minimum degree in @xmath206 has reached four , we can use the combinatorial lemma [ lem : mainlemma ] along with the counting argument proposition [ prop : lt ] to show that , w.h.p .",
    ", a random configuration on what remains is @xmath81-spanning .",
    "if it never does , we just declare the last @xmath212 vertices to be loose , so either way we get the desired bound .",
    "we define the first stage , when we run the simplified algorithm , to be _",
    "phase @xmath7 _ ; the second stage is _",
    "phase @xmath25_. the main obstacle is that during phase 3 , there may be many degree two vertices , which increases the probability of generating loose vertices .",
    "let us briefly sketch our approach .",
    "at the start of phase 3 , every vertex has degree at least three ( and @xmath9 have degree three , w.h.p . ) .",
    "the algorithm will :    * pick a degree three vertex , remove all of its copies and a random copy . *",
    "removing the random copy may create a degree two vertex , which is then removed , along with two random copies .",
    "* these random copies may create more degree two vertices or even a loose vertex .",
    "we call the cascade described above a _ round _ of the algorithm .",
    "we model each round as a _ branching process _ , which we analyze with a system of differential equations ( this step occupies most of the section ) .",
    "the key fact is that , with high probability , all rounds process @xmath158 vertices , which is enough to bound the number of loose vertices using arguments similar to those from the high - degree phase analysis .",
    "[ [ phase-3-the - main - lemma . ] ] phase 3 : the main lemma .",
    "+ + + + + + + + + + + + + + + + + + + + + + + +    we start with the analysis of phase @xmath7 . in phase",
    "@xmath7 , all iterations of the algorithm take step 1 or 2 .",
    "we define a _ round _ of the algorithm in phase @xmath7 to start with a step 2 iteration and contain all the step 1 iterations before the next step 2 .",
    "the critical lemmas are .",
    "[ lem : round - length ] with probability at least @xmath214 , all rounds during phase @xmath7 process @xmath158 vertices .",
    "we defer the proofs for now , and instead show how they yield a bound on the number of loose vertices .",
    "[ lem : dense - phase-3 ] with high probability , the expected number of loose vertices generated in a phase @xmath7 round is @xmath215 .",
    "all vertices start the round with at least three copies on them , so lemma [ lem : loose - vertices ] implies that a loose vertex is either    * hit at least twice at random ( l1 and l2 ) * reaches degree two and then gets a self - loop ( l3 )    both of these events happen with probability @xmath161 , since we are only running the algorithm with this many vertices left , and the probability any specific vertex is hit is @xmath216 , where @xmath46 is the number of remaining copies , and w.h.p .",
    "this is @xmath9 during any phase 3 round .    since the round lasts @xmath158 iterations , w.h.p .",
    ", the probability any vertex becomes loose is at most @xmath162 . because any loose",
    "vertex generated in a round must be processed in that round , the expected number of loose vertices generated is @xmath217 .",
    "[ lem : low - degree ] with high probability , the number of loose vertices generated during phase @xmath7 is @xmath23 .",
    "let @xmath135 be the event that all rounds process @xmath158 vertices .",
    "the main lemma [ lem : round - length ] implies that @xmath135 fails to hold with probability @xmath218 , so we are done if the lemma holds when conditioning on @xmath135 .",
    "assuming , @xmath135 , lemma [ lem : dense - phase-3 ] applies to @xmath27 rounds . from lemma [ lem : dense - phase-3 ]",
    ", we see that , w.h.p .",
    ", the expected number of loose vertices generated in phase @xmath7 is @xmath219 .",
    "it then follows from markov s inequality that the probability of @xmath220 loose vertices generated in phase @xmath7 is at most @xmath221 .    if phase @xmath7 runs until it hits its cutoff point , then there are an additional @xmath222 loose vertices , but this preserves the desired bound .",
    "[ [ phase-4 . ] ] phase 4 .",
    "+ + + + + + + +    at the start of phase @xmath25 , we stop the simplified algorithm , since we can prove the following lemma more directly .",
    "[ lem : high - degree ] with high probability , at the start of phase @xmath25 , a uniform simple graph generated from @xmath206 is @xmath81-spanning .    since the degree sequence of @xmath206 has minimum degree @xmath25 and is truncated poisson , a simple graph @xmath210 generated by @xmath206 is asymptotically equivalent to the @xmath25-core of some @xmath223 . by edge counts ,",
    "lemma [ lem : mainlemma ] applies to it , and the conclusion in which it is not laman - spanning is ruled out , w.h.p .",
    ", by proposition [ prop : lt ] . since @xmath210 is a laman graph plus at least three more edges , the main theorem of @xcite implies that @xmath210 is @xmath81-spanning .",
    "[ [ proof - of - theorem - theoalmost ] ] proof of theorem [ theo : almost ] + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    because we are interested in results on @xmath0 , we condition on the event that @xmath207 is simple . by lemma",
    "[ lem : low - degree ] , w.h.p . , phase @xmath7 generates @xmath23 loose vertices . by lemma [ lem : high - degree ] ( which applies when @xmath207 is simple ) , w.h.p .",
    ", we can apply lemma [ lem : suspend ] to conclude that there is an orientation with no loose vertices that were not generated during phase  @xmath7 . @xmath183    [ [ further - remarks . ] ] further remarks .",
    "+ + + + + + + + + + + + + + + +    the assumption that @xmath207 is simple can be removed at the notational cost of introducing @xmath81-blocks and components and proving the appropriate generalization of lemma [ lem : mainlemma ] to that setting . since the added generality does nt help us here",
    ", we leave this to the reader .    in the rest of this section",
    "we prove lemma [ lem : round - length ] .",
    "[ [ the - branching - process . ] ] the branching process .",
    "+ + + + + + + + + + + + + + + + + + + + + +    consider a round in phase @xmath7 .",
    "its associated branching process is defined as follows :    * the root vertex of the process is the degree three vertex processed to start the round . * the children of any vertex @xmath59 processed in the round are any degree one or two vertices created while processing @xmath59 .",
    "figure [ fig : loose - example ] shows an example of the process , and how a loose vertex is generated .     branching process .",
    "a loose vertex is generated when it is hit twice by a previous generation.,scaledwidth=35.0% ]    we define @xmath224 to be the expected number of children .",
    "we will show ,    [ lem : subcritical ] with high probability , @xmath225 in all phase @xmath7 rounds .",
    "this implies the key lemma [ lem : round - length ] .    if @xmath225 in all rounds , then standard results on branching processes imply that the probability any particular round processes more than @xmath158 vertices is @xmath226 , for appropriate choices of constants .",
    "a union bound then implies that the probability all of them process @xmath158 vertices is at least @xmath214 .",
    "this assumption on @xmath224 holds w.h.p . by lemma [ lem : subcritical ] , completing the proof .",
    "[ [ analysis - of - the - branching - process - proof - of - lemma - lemsubcritical . ] ] analysis of the branching process : proof of lemma [ lem : subcritical ] .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we will use the method of differential equations @xcite to establish lemma [ lem : subcritical ] .",
    "all the required lipchitz conditions and tail bounds in our process are easy to check , since the degree sequence is asymptotically poisson .",
    "thus the main step is to define and analyze the system of differential equations describing the evolution of the degree sequence as the algorithm runs .    in order to simplify the analysis",
    ", we break the loop into individual _",
    "timesteps_. at each timestep , two vertex copies are removed from @xmath206 .",
    "for example , the step  [ step:2 ] of the algorithm is divided into @xmath208 many timesteps , where in each timestep we remove a copy of @xmath59 and another random copy .",
    "similarly , step  [ step : i ] of the algorithm gets divided into @xmath227 many timesteps .",
    "for all @xmath228 , let @xmath229 denote the number of vertices of degree @xmath63 in the @xmath7-core divided by @xmath8 ( where @xmath8 is the number of vertices in @xmath170 ) .",
    "we say a vertex is _ hit _ during a round in phase 3 if a copy of the vertex is selected by step  [ step:2](b ) of the algorithm during the round . since in phase @xmath7 vertices of degree @xmath25 and greater get hit randomly with probability proportional to their degree , they always obey a truncated poisson distribution",
    "therefore , for @xmath230 , @xmath229 will be a truncated poisson distribution with a time - varying mean @xmath231 , @xmath232 let @xmath98 denote the total number of vertex copies in the @xmath7-core divided by @xmath8 .",
    "that is , @xmath233 we will use the following notation for the number of copies of degree @xmath64 or greater divided by @xmath8 , @xmath234    since an edge hits a vertex of degree @xmath7 with probability @xmath235 , and since it creates two new edges when it does so , the branching ratio of the branching process defined above is @xmath236 to show that the branching process is subcritical we need to analyze @xmath224 and show that throughout phase @xmath7 it is bounded away from @xmath124 .",
    "now , in one timestep the expected change in @xmath229 ( @xmath237 ) is @xmath238 =   \\frac{(i+1)a^{(i+1)}}{\\mu } - \\frac{ia^{(i)}}{\\mu } \\,.\\ ] ] here , the first term on the right hand side represents the probability that a degree @xmath239 vertex is hit ( this creates a new degree @xmath63 vertex ) .",
    "the second term represents the probability that a degree @xmath63 vertex is hit ( this destroys a degree @xmath63 vertex ) .",
    "similarly , the expected change in @xmath240 in one timestep is @xmath241 = \\frac{4a^{(4)}}{\\mu } - \\frac{3a^{(3)}}{\\mu } - ( 1 - \\lambda ) \\,.\\ ] ] here , the additional @xmath242 term comes due to the fr ii step .",
    "the expected probability on a given timestep that there are no degree-@xmath4 vertices is @xmath242 .",
    "setting the derivatives of these variables to their expectations gives us our differential equations :    @xmath243 and , for all @xmath244 @xmath245 changing the variable of integration to @xmath246 where @xmath247 and substituting @xmath248 gives @xmath249 this infinite system is consistent with the truncated poisson form for @xmath229 .",
    "since   implies @xmath250 equation   becomes @xmath251    thus , @xmath231 as a function of @xmath246 is , @xmath252 .",
    "here , @xmath253 is the parameter of the truncated poisson distribution describing the degree distribution of the @xmath7-core",
    ". we can also express @xmath98 as a function of @xmath246 .",
    "since @xmath254 , we can also express @xmath224 as a function of @xmath246 .",
    "then we show using analytic arguments that @xmath225 for all values of @xmath246 in phase @xmath7 .",
    "we start by computing the integral , @xmath255 analytically . since @xmath256 , we have @xmath257 .",
    "let @xmath258 .",
    "remember , @xmath253 is the parameter of the truncated poisson distribution describing the degree distribution of the @xmath7-core .",
    "now , @xmath259 can be expressed as @xmath260 we can compute @xmath240 as @xmath261 now , @xmath262 .",
    "therefore , @xmath240 as a function of @xmath246 is @xmath263 since both @xmath240 and @xmath231 can be expressed as a function of @xmath246 , we can write @xmath264 as a function of @xmath246 . now , given @xmath240 and @xmath98 as functions of @xmath246 , we can compute @xmath254 as a function of @xmath246 .",
    "we need to show that @xmath225 for all values of @xmath265 in phase @xmath7 .",
    "let @xmath266 be the value of @xmath246 at which @xmath240 ( as a function of @xmath246 ) evaluates to @xmath267 ( this signals the end of phase 3 ) . by taking derivatives",
    ", it can be shown that @xmath224 is a decreasing function of @xmath246 in the interval @xmath268 ( we omit this calculation here ) .",
    "so , all left to verify is whether at @xmath269 , @xmath225 .",
    "evaluating @xmath224 at @xmath269 , we get @xmath270 for @xmath271 , @xmath272 . at the birth of the giant rigid component @xmath273",
    ", @xmath274 is the parameter of the truncated poisson distribution describing the degree distribution of the @xmath7-core .",
    "the value of @xmath275 equals @xmath276 where @xmath277 is the fraction of the vertices in the @xmath116-core of @xmath15 ( see , e.g. ,  @xcite ) . for @xmath278 , we get @xmath279 and @xmath274 . ] , and as we increase @xmath28 , the value of @xmath275 only increases .",
    "therefore , for all @xmath280 , @xmath272 .",
    "as , @xmath224 is a decreasing function of @xmath246 , therefore for @xmath280 , @xmath225 throughput phase @xmath7 .",
    "this shows that for @xmath2 all branching processes in phase @xmath7 are subcritical .",
    "we studied the emergence of rigid components in sparse erds - rnyi random graphs , proving that there is a sharp threshold and a quantitative bound on the size of the rigid component when it emerges .",
    "these results confirm theoretically the simulations of @xcite .          in the plane , generic global rigidity",
    "is characterized by the framework s graph being @xmath7-connected and remaining laman - spanning if any edge is removed @xcite .",
    "proving either of these conjectures using the plan presented here would most likely require a stronger statement than theorem [ theo : almost ] , such as the @xmath7-core being , w.h.p .",
    ", @xmath81-spanning .",
    "we would like to thank michael molloy , alexander russell , and lenka zdeborov for initial discussions .",
    "we would also like to thank daniel fernholz and vijaya ramachandran for discussions regarding  @xcite .",
    "julie  anne cain , peter sanders , and nick wormald .",
    "the random graph threshold for k - orientiability and a fast algorithm for optimal multiple - choice allocation . in _ soda _ , pages 469476 .",
    "society for industrial and applied mathematics , 2007 .",
    "daniel fernholz and vijaya ramachandran .",
    "the @xmath46-orientability thresholds for @xmath282 . in _",
    "soda 07 : proceedings of the eighteenth annual acm - siam symposium on discrete algorithms _ , pages 459468 .",
    "society for industrial and applied mathematics , 2007 ."
  ],
  "abstract_text": [
    "<S> as we add rigid bars between points in the plane , at what point is there a giant ( linear - sized ) rigid component , which can be rotated and translated , but which has no internal flexibility ? </S>",
    "<S> if the points are generic , this depends only on the combinatorics of the graph formed by the bars . </S>",
    "<S> we show that if this graph is an erds - rnyi random graph @xmath0 , then there exists a sharp threshold for a giant rigid component to emerge . for @xmath1 , w.h.p . </S>",
    "<S> all rigid components span one , two , or three vertices , and when @xmath2 , w.h.p . </S>",
    "<S> there is a giant rigid component . </S>",
    "<S> the constant @xmath3 is the threshold for @xmath4-orientability , discovered independently by fernholz and ramachandran and cain , sanders , and wormald in soda07 . </S>",
    "<S> we also give quantitative bounds on the size of the giant rigid component when it emerges , proving that it spans a @xmath5-fraction of the vertices in the @xmath6-core . </S>",
    "<S> informally , the @xmath6-core is maximal induced subgraph obtained by starting from the @xmath7-core and then inductively adding vertices with @xmath4 neighbors in the graph obtained so far .    </S>",
    "<S> = 1 </S>"
  ]
}
{
  "article_text": [
    "in a directed graph @xmath4 , each edge @xmath5 is directed from its source @xmath6 to its target @xmath7 . the directed line graph @xmath0 of @xmath1 with vertex set @xmath8 , and with an edge @xmath9 for every pair of edges in @xmath1 such that @xmath10 .",
    "a spanning tree of @xmath1 rooted at a vertex @xmath11 is an edge - induced subgraph of @xmath1 in which there is a unique path from @xmath12 to @xmath11 , for all @xmath13 .",
    "we denote the indegree and outdegree of a vertex @xmath12 by @xmath14 and @xmath15 , respectively , and we denote the number of spanning trees of @xmath1 by @xmath16 .",
    "knuth proved that if every vertex of @xmath1 has indegree greater than 0 , then @xmath17 knuth s proof relied on the matrix - tree theorem . in his paper , he noted that the simple form of this result suggested that a bijective proof was possible , but that it was not at all obvious how to find such a bijection @xcite .    in fact , there are even stronger relations between @xmath18 and @xmath16 .",
    "let @xmath19 and @xmath20 be variables indexed by the vertices and edges of @xmath1 .",
    "the vertex and edge generating functions of @xmath1 are defined as follows , where the sums are taken over all rooted spanning trees @xmath21 of @xmath1 .",
    "@xmath22 levine used linear algebraic methods to prove the following generalization of knuth s result .",
    "our first result in this paper is a bijective proof of levine s theorem , which yields a bijective proof on knuth s theorem as a special case",
    ". +   + * theorem  [ thm1.1 ] . * _ let @xmath4 be a directed graph in which every vertex has indegree greater than 0 . then _",
    "@xmath23 + using this bijection , we are able to answer the following open question posed by stanley",
    ". +   + * exercise 5.73 from @xcite .",
    "* let @xmath24 be the set of binary de bruijn sequences of degree @xmath2 , and let @xmath25 be the set of all binary sequences of length @xmath26 .",
    "find an explicit bijection @xmath27 .",
    "+   + the critical group @xmath28 of a graph @xmath1 is a finite abelian group whose order is the number of spanning trees of @xmath1 .",
    "critical groups have applications in statistical physics @xcite , algebraic combinatorics @xcite , and arithmetic geometry @xcite .",
    "we review the definition of this group in section [ definitions ] .",
    "the kautz graphs @xmath29 and the de bruijn graphs @xmath30 are families of iterated line graphs .",
    "@xmath31 is the complete directed graph on @xmath32 vertices , without self - loops , and @xmath33 is the complete graph on @xmath34 vertices , with self - loops .",
    "these families are defined for @xmath35 as follows .",
    "@xmath36 levine recently determined @xmath37 and @xmath38 , where @xmath34 is prime @xcite .",
    "we generalize these results , proving the following characterizations of the critical groups of all the kautz and de bruijn graphs .",
    "+   + * theorem  [ db ] . *",
    "_ the critical group of @xmath30 is _",
    "@xmath39 + * theorem  [ kautz ] . * _ the critical group of @xmath29 is _ @xmath40 + the rest of this paper is organized as follows . in section  [ definitions ]",
    "we provide background and definitions . in section  [ bijection ]",
    ", we introduce a bijection which proves theorem  [ thm1.1 ] .",
    "we apply this bijection in section  [ dbsequence ] to construct a bijection betweeen binary de bruijn sequences of order @xmath2 and binary sequences of length @xmath3 .",
    "finally , in section  [ kautzsection ] , we prove theorem  [ db ] and  [ kautz ] , giving a complete description of the critical groups of the kautz and de bruijn graphs .",
    "in a directed graph @xmath4 , each edge @xmath5 is directed from its _ source _ @xmath6 to its _ target _ @xmath7 .",
    "let @xmath4 be a directed graph .",
    "the _ directed line graph _",
    "@xmath41 is a directed graph with vertex set @xmath8 , and with an edge @xmath9 for every pair of edges @xmath42 and @xmath43 of @xmath1 with @xmath10 .",
    "+ _ figure 2.1 . a directed graph and its line graph . _    at times we may speak of a subset @xmath44 of @xmath8 as a subgraphs of @xmath1 - in this case we mean the subgraph @xmath45 . if @xmath46 is",
    "a subgraph of @xmath1 and @xmath12 is in @xmath46 , we denote the indegree of @xmath12 in @xmath46 by @xmath47 , and the outdegree by @xmath48 .",
    "let @xmath4 be a directed graph .",
    "an _ oriented spanning tree _ of @xmath1 is an acyclic subgraph of @xmath1 with a distinguished node , the _ root _ , in which there is a unique path from every vertex @xmath13 to the root .",
    "we refer to these trees as _ spanning trees_.    let @xmath21 be a spanning tree of @xmath1 .",
    "every vertex of @xmath1 has outdegree 1 in @xmath21 , except the root , which has outdegree 0 .",
    "we denote the number of spanning trees of @xmath1 by @xmath16 , and the number of spanning trees rooted at @xmath11 by @xmath49 .",
    "let @xmath4 be a strongly - connected directed graph , and let @xmath50 be the free abelian group generated by vertices of @xmath1  the group of of formal linear combinations of vertices of @xmath1 .",
    "we define @xmath51 , for all @xmath13 , as follows .",
    "@xmath52 the _ sandpile group _ @xmath53 with _ sink _ @xmath11 is the quotient group @xmath54 it is well - known that the order of @xmath53 is @xmath49 .",
    "a directed graph @xmath1 is _ eulerian _ if @xmath55 for all vertices @xmath12 in @xmath56 . according to lemma 4.12 of @xcite ,",
    "if @xmath1 is eulerian , the sandpile groups @xmath57 and @xmath58 are isomorphic for any two @xmath59 in @xmath56 . in this case , we call the group the _ critical group _ @xmath28",
    ".    let @xmath4 be a finite directed graph with vertices @xmath60 .",
    "the _ adjacency matrix _",
    "@xmath61 of @xmath1 is the @xmath62 matrix in which @xmath63 is the multiplicity of the edge @xmath64 in @xmath8 .",
    "the _ degree matrix _",
    "@xmath65 is the @xmath62 diagonal matrix in which @xmath66 .",
    "the _ laplacian _",
    "@xmath67 of @xmath1 is defined as @xmath68 .",
    "note that the row vectors of @xmath67 are the elements @xmath69 .",
    "we consider @xmath70 as a @xmath71-linear operator on @xmath50  its image is the subgroup generated by the @xmath69 . for a strongly - connected eulerian graph @xmath1 ,",
    "the laplacian has exactly one eigenvalue 0 , so for such a graph @xmath1 , we have @xmath72 the following elementary row and column operations on matrices with entries in a ring @xmath73 are invertible over @xmath73 .    1 .",
    "permuting two rows ( columns ) 2 .   adding a multiple of a row ( column ) by an element of @xmath73 to another row ( column ) 3 .   multiplying the entries of a row ( column ) by a unit    if @xmath74 is obtained from @xmath67 by invertible row and column operations over @xmath71 , then @xmath75 .",
    "suppose that @xmath73 is a principal ideal domain . under these operations ,",
    "any matrix with entries in @xmath73 is equivalent to a matrix in _",
    "smith normal form_. a matrix in this form is diagonal , and its diagonal entries @xmath76 are elements of @xmath73 such that @xmath77 is a multiple of @xmath78 for all @xmath79 .",
    "these entries are called the _",
    "invariant factors _ of the original integer matrix , and they are unique up to multiplication by units",
    ". if the invariant factors of @xmath67 over @xmath71 are @xmath76 then @xmath80 thus , row - reducing the laplacian yields information about the critical group .",
    "let @xmath4 be a directed graph , and let @xmath81 and @xmath82 be variables indexed by the vertices and edges of @xmath1 .",
    "the _ edge and vertex generating functions _ , which enumerate the spanning trees of @xmath1 , are defined as follows @xmath83 @xmath84 where @xmath21 ranges over all spanning trees of @xmath1 . in this section ,",
    "we give a bijective proof of the following identity , solving a problem posed by levine in @xcite    [ thm1.1 ] let g=(v , e ) be a directed graph in which every vertex has indegree greater than 0 . then : @xmath85    in order to find a bijection , we adopt the following strategy .",
    "we put an arbitrary total order on the edges in @xmath8 .    1 .",
    "we provide a bijection between monomial terms on the right - hand side of eq .",
    "( [ kthm ] ) and _ tree arrays _ , which are arrays of lists , one list for each vertex @xmath13 .",
    "then we present a map @xmath86 that take a tree array to a spanning tree of @xmath0 which contributes the same term to the left - hand side of eq .",
    "( [ kthm ] ) .",
    "3 .   finally",
    ", we show that @xmath86 is bijective by constructing an inverse map @xmath87 which takes a spanning tree of @xmath0 to a tree array .",
    "we define a _ list _ to be an ordered tuple of edges .",
    "we _ append _",
    "an element @xmath88 to a list @xmath89 by adding @xmath88 to the end of @xmath89 .",
    "list @xmath89 by removing the first element of @xmath89 .",
    "we denote the number of times an element @xmath42 appears in a list @xmath89 by @xmath90 .",
    "let @xmath12 be a vertex of @xmath1 and let @xmath91 be a list with @xmath92 elements , all of which are edges with source @xmath12 .",
    "we map @xmath91 to a monomial term of @xmath93 , as follows .",
    "@xmath94 this map provides a bijection between lists @xmath91 and terms of @xmath93 .",
    "therefore , a term on the right - hand side of eq .",
    "( [ kthm ] ) corresponds to a choice of spanning tree @xmath21 of @xmath1 and a choice of one such list @xmath91 for each vertex @xmath12 .",
    "suppose a monomial term on the right - hand side of eq .",
    "( [ kthm ] ) corresponds to a spanning tree @xmath21 rooted at @xmath11 and an array of lists @xmath95 . for each vertex @xmath96",
    ", we obtain @xmath97 by appending the unique edge @xmath42 in @xmath21 with source @xmath12 to the list @xmath91 .",
    "we obtain @xmath98 by appending a new variable @xmath99 to @xmath100 .",
    "each list @xmath97 has length @xmath14 , for @xmath13 .",
    "we call an array of lists @xmath101 obtained in this way a _ tree array_. by construction , terms on the right - hand side of eq .",
    "( [ kthm ] ) are in bijection with tree arrays .",
    "we now define the bijective map @xmath86 , which takes a tree array of @xmath1 to a spanning tree of @xmath0 .    * the bijection @xmath86 : * we start with a tree array @xmath102 and an empty subgraph @xmath103 of @xmath0",
    ". then we run the following algorithm .    1 .",
    "let @xmath73 be the subset of edges @xmath42 of @xmath1 for which @xmath104 and @xmath105 .",
    "let @xmath43 be the smallest edge in @xmath73 under the order on @xmath8 .",
    "2 .   pop the first element @xmath106 from the list @xmath107 . if @xmath106 is @xmath99 , then @xmath108 .",
    "3 .   otherwise ,",
    "@xmath109 and @xmath110 .",
    "add the edge @xmath111 to @xmath103 , and then return to step 1 .",
    "we also define a map @xmath87 which takes a spanning tree of @xmath0 to a tree array of @xmath1 .",
    "* the inverse map @xmath87 : * we start with a spanning tree @xmath103 of @xmath0 , and an empty list @xmath97 at each vertex @xmath13 .",
    "this map is given by another algorithm .    1 .",
    "let @xmath112 be the set of leaves of @xmath103 .",
    "let @xmath43 be the smallest edge in @xmath112 under the order on @xmath8 .",
    "2 .   if @xmath43 is not the root of @xmath103 , remove @xmath43 and its outedge @xmath111 from @xmath103 , and append @xmath106 to @xmath107 .",
    "go back to step 2 .",
    "if @xmath43 is the root of @xmath103 , append @xmath99 to @xmath107 , and return the array of lists .",
    "as an example , we apply @xmath86 to a tree array in a small directed graph @xmath1 .",
    "we order the edges of @xmath1 by the lexigraphic order .",
    "+ _ figure 3.1 . the graph @xmath1 , with a spanning tree @xmath21 highlighted in red . below",
    "the graph is a monomial term of @xmath113 , where @xmath114 is the variable for edge @xmath115 .",
    "the tree array corresponding to this term is shown to the right . in the term and the tree array ,",
    "red elements correspond to edges of the tree .",
    "_     + _ figure 3.2 .",
    "the first two edges added to @xmath103 by the algorithm for @xmath86 .",
    "initially , the edges @xmath116 and @xmath117 do not appear in the lists .",
    "we pop @xmath118 from @xmath119 and add the edge @xmath120 to @xmath103 .",
    "then the edges @xmath117 and @xmath121 have outdegree 0 in @xmath103 and do not appear in the lists .",
    "we pop @xmath122 from @xmath123 and add @xmath124 to @xmath103 .",
    "_     + _ figure 3.3 .",
    "the last three edges added to @xmath103 , and the final tree .",
    "the last element left in the lists of the tree array is @xmath99 . _    in order to prove theorem  [ thm1.1 ] , we first prove three lemmas . in the definition of the algorithm for the map @xmath86 , we assumed that the set @xmath73 is always non - empty in step 1 and that the the list @xmath107 is always non - empty in step 2 . in lemma  [ welldef ] , we show that both assumptions are valid .",
    "[ welldef ] the algorithm used to define map @xmath86 is well - defined : at step 1 , the set @xmath73 is non - empty , and at step 2 , the list @xmath107 is non - empty .",
    "after @xmath125 edges have been added to @xmath103 , there are @xmath126 elements left in all the lists @xmath97 , where one of the elements is @xmath99 .",
    "there are @xmath127 edges left in the lists , but there are @xmath126 edges of @xmath1 which do not have an outedge in @xmath103 , so @xmath73 must be non - empty in step 1 .    every time we pop @xmath97 , we add an edge @xmath111 to @xmath103 , where @xmath128 . when we are at step 2 , @xmath129 , so at most @xmath130 of the elements of @xmath107 have been popped",
    "therefore , the list @xmath107 is always nonempty at step 2 .",
    "the algorithm is well - defined .",
    "the following lemma shows that @xmath86 takes a tree array corresponding to a term on the right - hand side of eq .",
    "( [ kthm ] ) to a spanning tree which contributes the same term to the left - hand side .",
    "[ correctterm ] suppose that @xmath102 is a tree array and that @xmath131 .",
    "then @xmath103 is a spanning tree of @xmath0 , and @xmath132 , for all @xmath5 .",
    "let @xmath133 be the initial value of @xmath134 . by the definition of a tree array , the edges which are the last elements of the lists @xmath97 form a spanning tree @xmath21 of @xmath1 .",
    "we claim that @xmath103 is acylic , because the last edge of a cycle is never included in @xmath103 . while the algorithm is running , suppose that @xmath135 is not an edge of @xmath103 , and that it completes a cycle @xmath136 of edges in @xmath103 .",
    "since @xmath137 was already added to @xmath103 , @xmath138 must be 0 .",
    "therefore , @xmath135 will never be added to @xmath103 .",
    "we say a vertex @xmath13 is _ cleared _ if all the elements of its list are popped .",
    "suppose that @xmath139 is an edge in @xmath21 .",
    "the list @xmath140 is cleared when all the edges of @xmath1 with target @xmath141 have an outedge in @xmath103 .",
    "then @xmath141 can only be cleared after an outedge @xmath9 of @xmath42 is added to @xmath21 .",
    "the edge @xmath9 can only be added to @xmath103 when @xmath142 . because @xmath42 is an edge of @xmath21 ,",
    "it is the last element of @xmath97 , so @xmath12 must be cleared before @xmath141 can be cleared .",
    "the algorithm terminates when @xmath99 is popped from @xmath98 , which occurs when @xmath11 is cleared .",
    "there is a path @xmath143 in @xmath21 from any vertex @xmath12 to @xmath11 .",
    "therefore @xmath11 can only be cleared after all the vertices on this path are cleared .",
    "thus , all the vertices of @xmath1 are cleared when the algorithm finishes , so there are @xmath144 edges in the subgraph @xmath103 .",
    "all the vertices of @xmath0 has an outedge in @xmath103 , except one .",
    "since @xmath103 is acyclic , it is a spanning tree of @xmath0 . because @xmath145 is constant , when the algorithm returns @xmath103 , @xmath146 for all @xmath5 .    in our final lemma",
    ", we show that @xmath87 will take a spanning tree @xmath103 of @xmath0 and reconstruct a tree array @xmath147 .",
    "suppose @xmath103 is a spanning tree of @xmath0 with root @xmath148 , and that @xmath87 takes @xmath103 to the array of lists @xmath102 .",
    "then @xmath102 is a tree array , which means that    a.   the length of @xmath97 is @xmath14 , for all @xmath13 . b.   every element of @xmath97 is an edge with source @xmath12 , for all vertices @xmath12 except @xmath149 .",
    "the last element of @xmath150 is @xmath99 , and every other element of @xmath150 is an edge with source @xmath149 . c.   the set @xmath21 of edges which are the last elements of the lists @xmath151 is a spanning tree of @xmath1 .",
    "we first show parts ( a ) and ( b ) .",
    "each time an edge @xmath5 is removed from @xmath103 , an element is appended to the list @xmath152 . since @xmath148 can only be removed after all the other vertices of @xmath103 , this algorithm adds @xmath14 elements to @xmath97 for all @xmath13 , so part ( a ) holds .",
    "every element of the list @xmath97 is an edge with source @xmath12 , with the exception of @xmath99 , which is the last element of @xmath98 , so part ( b ) holds .",
    "while the algorithm @xmath87 is running , say a vertex @xmath13 is _ filled _ if @xmath97 has @xmath14 elements .",
    "every vertex is eventually filled , so the order in which vertices are filled is a total order on @xmath56 .",
    "we claim that this order is a topological sort of the subgraph @xmath21 .",
    "suppose that @xmath153 is the last element of @xmath97 for some vertex @xmath12 other than @xmath11 .",
    "vertex @xmath12 was filled at step 2 , right after some leaf @xmath42 and some edge @xmath9 were removed from @xmath103 in step 1 .",
    "however , @xmath141 can not be filled until @xmath43 is removed from @xmath103 , which happens after @xmath42 and @xmath9 are removed from @xmath103 . therefore @xmath12 is filled before @xmath141 , so the filling ordering on @xmath56 is a topological sort of @xmath21 , and @xmath21 is acyclic .",
    "after @xmath87 terminates , @xmath149 has no outedge in @xmath21 and every other vertex of @xmath1 has one outedge .",
    "then @xmath21 is a spanning tree of @xmath1 , and part ( c ) holds .",
    "we now prove the main result .",
    "let @xmath102 be a tree array and let @xmath154 .",
    "we show the following claim by induction on @xmath2 : after @xmath2 edges have been added to @xmath103 by the algorithm for @xmath155 , and @xmath2 edges have been removed from @xmath103 by the algorithm for @xmath156 , we have    a.   the set of edges added to @xmath103 by @xmath86 is the set of edges removed by @xmath87 .",
    "b.   the elements popped from @xmath97 by @xmath86 are exactly the elements added to @xmath97 by @xmath87 , in the same order .    in the base case @xmath157 ,",
    "both claims hold trivially .",
    "suppose both results hold for @xmath158 .",
    "the edge @xmath42 is a leaf of @xmath103 in @xmath87 if and only if it satisfies @xmath104 and @xmath105 in @xmath86 .",
    "therefore , the @xmath159st edge @xmath111 added to @xmath103 by @xmath86 is also the @xmath159st edge removed from @xmath103 by @xmath87 , and the element @xmath106 popped from @xmath107 in @xmath86 is also the element appended to @xmath107 by @xmath87 .",
    "both claims hold for @xmath160 . by induction , they hold for all @xmath161 .    when @xmath162 , condition ( b ) implies that @xmath163 .",
    "then @xmath87 is a left inverse of @xmath86 , and @xmath86 is injective .    by similar reasoning",
    ", @xmath87 is a right inverse of @xmath86 , and @xmath86 is surjective .",
    "so @xmath86 is a bijection between tree arrays in @xmath1 and spanning trees of @xmath0 .",
    "the bijection @xmath86 induces between equal terms in eq .",
    "( [ kthm ] ) proves theorem  [ thm1.1 ] .",
    "a _ binary de bruijn sequence of degree @xmath2 _ is a cyclic binary sequence @xmath164 such that every binary sequence of length @xmath2 appears as a subsequence of consecutive elements of @xmath164 exactly once .",
    "for example , 0011 is a binary de bruijn sequence of degree 2 , since its cyclic subsequences of length 2 are 00 , 01 , 11 , and 10 .",
    "it is well - known that there are @xmath165 binary de bruijn sequences of degree @xmath2 .",
    "stanley posed the following open problem in @xcite .",
    "* exercise 5.73 of @xcite .",
    "* let @xmath24 be the set of binary de bruijn sequences of degree @xmath2 , and let @xmath25 be the set of all binary sequences of length @xmath26 .",
    "find an explicit bijection @xmath166 .",
    "our solution to this problem involves the de bruijn graphs , which are closely related to de bruijn sequences .",
    "the _ de bruijn graph _",
    "@xmath30 has @xmath167 vertices , which are identified with the strings of length @xmath2 on @xmath34 symbols .",
    "the edges of the graph are labeled with the strings of length @xmath168 on @xmath34 symbols .",
    "the edge @xmath169 has source @xmath170 and target @xmath171 .",
    "an edge of @xmath30 can be identified with the vertex of @xmath172 that is labeled with the same string of length @xmath168 . with this identification , we have @xmath173 each vertex @xmath174 of @xmath175 has two outedges , @xmath176 and @xmath177 .",
    "we call these edges the _ zero edge _ of @xmath12 and the _ one edge _ of @xmath12 , respectively .",
    "it is well - known that binary de bruijn sequences of degree @xmath2 are in bijection with hamiltonian paths in @xmath175 .",
    "let @xmath178 be a binary de bruijn sequence of degree @xmath2 .",
    "let @xmath179 , for @xmath180 , where indices are taken mod @xmath26 .",
    "the path @xmath181 is the corresponding hamiltonian path in @xmath175 .",
    "there is an explicit bijection between @xmath24 and the set of binary sequences of length @xmath3 , for @xmath35 .",
    "we describe a bijection between hamiltonian paths in @xmath182 and binary sequences of length @xmath3 . by composing this bijection with the map between de bruijn sequences and hamiltonian paths , we construct the desired bijection .",
    "we order the vertices in @xmath183 by the lexicographic order on their associated binary strings , for @xmath184 .",
    "let @xmath185 be a hamiltonian path in @xmath175 .",
    "this path is an oriented spanning tree of @xmath175 , so we can apply the inverse map @xmath87 defined in section [ bijection ] to it .",
    "let @xmath186 be the tree array @xmath187 .",
    "we recursively define a sequence of tree arrays @xmath188 , for @xmath189 .",
    "suppose we have a tree array @xmath190 in @xmath191 .",
    "let @xmath192 be the spanning tree consisting of the edges which are the last elements of the lists in @xmath190 .",
    "we define @xmath188 to be @xmath193 .",
    "we construct a binary sequence @xmath194 from these tree arrays .",
    "we denote vertex @xmath141 s list in the tree array @xmath188 by @xmath195 .",
    "let @xmath196 be 0 if the first element of @xmath197 is the zero edge of @xmath198 , and 1 otherwise .",
    "we define @xmath199 through @xmath200 , for @xmath201 , as follows .",
    "let @xmath202 be the vertices of @xmath203 , in lexicographic order .",
    "let @xmath204 be 0 if the first element of @xmath205 is the zero edge of @xmath206 , and 1 otherwise .",
    "let @xmath207 be 0 if @xmath208 is rooted at vertex 0 , and 1 otherwise .",
    "the string @xmath194 is the binary sequence that corresponds to the hamiltonian path we began with .",
    "now we construct the inverse map , from binary sequences to hamiltonian paths . given any binary sequence @xmath112 of length @xmath3 , we use the first @xmath209 characters of the sequence to invert the previous procedure and construct a sequence of spanning trees @xmath210 .",
    "the tree @xmath211 will be a spanning tree of @xmath183 .",
    "we determine @xmath211 recursively .",
    "the tree @xmath208 in @xmath212 is rooted at 0 if @xmath207 is 0 , and rooted at 1 otherwise .",
    "assume that the first @xmath213 characters of @xmath112 determine a spanning tree @xmath211 of @xmath183 , where @xmath214 .",
    "we choose a tree array @xmath188 of @xmath183 using this tree and the next @xmath215 characters of @xmath112 , as follows .",
    "let the vertices of @xmath183 be @xmath202 , in lexicographic order .",
    "the first element of @xmath205 is the zero edge of @xmath206 if @xmath204 is 0 , and the one edge of @xmath206 otherwise .",
    "the second element of @xmath205 comes from @xmath211 .",
    "we define @xmath192 to be @xmath216 , using the map defined in section [ bijection ] .",
    "we use @xmath217 to construct a tree array @xmath186 such that @xmath218 is a hamiltonian path in @xmath175 .",
    "let @xmath11 be the root of @xmath217 , and let @xmath12 be another arbitrary vertex .",
    "the list @xmath97 in the array @xmath186 must contain two distinct edges , if @xmath218 is a hamiltonian path .",
    "the second edge in @xmath97 must be the unique edge in @xmath217 with source @xmath12 , so @xmath97 is determined .",
    "our only remaining choice is which of the two edges of @xmath219 with source @xmath11 to include in @xmath98 , which we determine by @xmath196 .",
    "clearly , this map from binary sequences to hamiltonian paths inverts the map from hamiltonian paths to binary sequences .",
    "therefore , our first map is the bijection we need .",
    "this bijection can easily be generalized to count the @xmath125-ary de bruijn sequences , in which the 2-symbol alphabet @xmath220 is replaced with the @xmath125-symbol alphabet @xmath221 .",
    "in this section , we determine the critical groups of all the kautz graphs and the de bruijn graphs .",
    "the critical groups of these graphs have been found in some special cases by levine @xcite .      the _ kautz graph _ @xmath29 has @xmath222 vertices , identified with the kautz strings of length @xmath2 on @xmath32 symbols",
    ". the edges of the graph are labeled with the kautz strings of length @xmath168 on @xmath32 symbols , such that the edge @xmath169 has source @xmath170 and target @xmath171 .",
    "we also consider the kautz and de bruijn graphs as families of iterated line graphs .",
    "@xmath31 is the complete directed graph on @xmath32 vertices , without self - loops , and @xmath33 is the complete directed graph on @xmath34 vertices , with self - loops . then for @xmath35 , we have @xmath223 @xmath224 we say a directed graph @xmath4 is _ balanced k - regular _ if @xmath225 for all @xmath13 .",
    "both @xmath29 and @xmath30 are balanced @xmath34-regular , for all @xmath226 , which implies that they are eulerian .",
    "since these graphs are also strongly - connected , their critical groups are defined .",
    "levine found the critical groups of the de bruijn graphs @xmath182 and the kautz graphs @xmath227 , where @xmath228 is prime @xcite . in this section",
    "we characterize the critical groups of all the kautz and de bruijn graphs .",
    "we prove the following theorems .        in order to prove these theorems , we first prove two lemmas about row - reducing the laplacians @xmath229 and @xmath230 .",
    "we refer to the row and column of a vertex @xmath12 in the laplacian by @xmath231 and @xmath232 , respectively .",
    "we also use @xmath233 to denote the entry in the row of @xmath12 and the column of @xmath141 .",
    "we say two strings of length @xmath2 are _ similar _ if their last @xmath234 characters are equal .",
    "similarity is an equivalence relation .",
    "we partition the vertices of @xmath29 and @xmath30 into equivalence classes , by grouping vertices labeled with similar strings in the same class .",
    "there are @xmath34 vertices in each class .",
    "first we show that there is a hamiltonian cycle in @xmath238 .",
    "such a cycle exists in the complete graphs @xmath239 and @xmath240 , so the case @xmath241 is done .",
    "there is an eulerian tour of @xmath242 and of @xmath243 for @xmath35 , since graphs in both families are eulerian .",
    "because @xmath238 is either @xmath244 or @xmath245 , one of these eulerian tours induces a hamiltonian cycle in @xmath238 , for @xmath35 .        in the next lemma",
    "we show that every invariant factor of @xmath252 and @xmath230 is either a multiple of @xmath34 or relatively prime to @xmath34 .",
    "we prove this lemma by row - reducing the laplacian in an order derived from the cycle in lemma  [ cycle ] .",
    "[ divbym ] let @xmath4 be a kautz graph @xmath235 or a de bruijn graph @xmath172 , where @xmath226 .",
    "the first @xmath237 invariant factors of @xmath67 are relatively prime to @xmath34 , and all of the rest are divisible by @xmath34 .",
    "we reduce the laplacian @xmath67 over the principal ideal domain @xmath253 .",
    "let the invariant factors of @xmath67 over @xmath71 be @xmath254 .",
    "any invertible row or column operation over @xmath71 descends to an invertible operation over @xmath253 , so the invariant factors of @xmath67 over @xmath253 are the @xmath255 mod @xmath34 .",
    "note that if @xmath261 and @xmath12 are vertices in the same class , then @xmath262 is an edge if and only if @xmath263 is , for all @xmath141 .",
    "therefore , the rows of @xmath261 and @xmath12 in the adjacency matrix @xmath61 are the same .    because every vertex of @xmath1 has outdegree @xmath34 , @xmath264 mod @xmath34",
    ". therefore rows @xmath265 and @xmath231 are congruent mod @xmath34 if @xmath261 and @xmath12 are in the same class .",
    "we reduce the laplacian in @xmath258 stages . in the @xmath247th stage ,",
    "we subtract row @xmath266 from @xmath231 for all @xmath267\\backslash v_i$ ] .",
    "after this operation , every entry of @xmath231 is divisible by @xmath34 .",
    "@xmath268    _ figure 5.1 . reducing @xmath269 using the cycle @xmath270 .",
    "the original laplacian is on the left .",
    "we obtain the reduced laplacian on the right by subtracting @xmath271 from @xmath272 , @xmath273 from @xmath274 , and @xmath275 from @xmath276 .",
    "every entry of rows @xmath274 , @xmath276 , and @xmath272 is divisible by 2 .",
    "_    the entry @xmath277 is 1 before and after these row operations , for @xmath278 .",
    "we claim that in the reduced laplacian , every entry of @xmath279 is divisible by @xmath34 except @xmath277 .",
    "there are @xmath34 edges with target @xmath280 in @xmath1 .",
    "the sources of these edges are the @xmath34 vertices in @xmath256 $ ] .",
    "after the row operations , every entry of @xmath231 is divisible by @xmath34 for @xmath267\\backslash v_i$ ] , so @xmath277 is the only entry in @xmath279 which is non - zero mod @xmath34 , for @xmath278 .",
    "by permuting rows and columns , we move @xmath277 to the @xmath247th diagonal entry @xmath281 of the laplacian .",
    "the reduced laplacian is now in the form @xmath282 where @xmath283 is the @xmath284 identity matrix .",
    "using column operations , we can make all the entries in a divisible by @xmath34 , without changing the rest of the matrix mod @xmath34 .",
    "after this column operations , the laplacian is in smith normal form .",
    "the first @xmath258 invariant factors of @xmath67 over @xmath253 are 1 , so the first @xmath258 invariant factors of @xmath67 over @xmath71 are relatively prime to @xmath34 .",
    "the last @xmath285 invariant factors of @xmath67 over @xmath253 are 0 , so the last @xmath285 invariant factors of @xmath67 over @xmath71 are divisible by @xmath34 .",
    "the lemma holds .",
    "we use lemmas  [ cycle ] and [ divbym ] to characterize the critical group of the kautz and de bruijn graphs .",
    "the first step is finding the orders of these groups .",
    "we apply theorem  [ thm1.1 ] to @xmath30 , and we let all the variables @xmath286 equal 1 , to find that @xmath287 the number of spanning trees of the complete graph @xmath33 is @xmath288 @xcite . by a simple induction , we have @xmath289 in an eulerian graph , the sandpile groups @xmath290 are isomorphic for all vertices @xmath12 , so @xmath291 .",
    "therefore , we have @xmath292 similarly , we have @xmath293 @xmath294 we are ready to prove theorems  [ db ] and  [ kautz ] .",
    "assume that theorem  [ db ] holds for @xmath234 , where @xmath35 .",
    "we prove it for @xmath2 . as shown by levine",
    "@xcite , if @xmath1 is a balanced @xmath125-regular graph , then @xmath296 we will use this fact to determine @xmath297 , the sylow-@xmath228 subgroup of @xmath298 , for any prime @xmath228 .",
    "we break into two cases : either @xmath228 does not divide @xmath34 , or @xmath228 divides @xmath34",
    ".      now let @xmath228 be a prime that divides @xmath34 , and suppose @xmath301 is the largest power of @xmath228 that divides @xmath34 .",
    "let the sylow-@xmath228 subgroup of @xmath30 be @xmath302 by lemma  [ divbym ] , @xmath298 can be written as a direct sum of cyclic groups , such that the order of each group is either non - zero mod @xmath228 or divisible by @xmath301 .",
    "thus , @xmath303 for @xmath304 .",
    "further , we can derive the order of @xmath305 from eq .",
    "( [ dborder ] ) .",
    "we find that @xmath306 because the expression on the right - hand side equals the number of factors of @xmath228 in @xmath307 . by eq .",
    "( [ homo ] ) and the inductive hypothesis , we know that @xmath308 @xmath309 eq . ( [ dbindstep ] ) implies that @xmath310 , that @xmath311 for @xmath312 , and that @xmath303 for @xmath313 or @xmath314 .",
    "the only @xmath315 which we have not yet determined is @xmath316 .",
    "we solve eq .",
    "( [ dbporder ] ) for @xmath316 , by moving all the other @xmath317 to the right - hand side and dividing by @xmath125 .",
    "@xmath318 by evaluating the geometric series , we find that @xmath319 . with these values",
    ", we may write @xmath320 the sylow-@xmath228 subgroups of @xmath298 are trivial for @xmath321 . taking the direct sum of the sylow-@xmath228 subgroups over primes @xmath228 which divide @xmath34 , we find @xmath322 with this equation we complete the inductive step , as desired .",
    "assume that theorem  [ kautz ] holds for @xmath234 , where @xmath35 .",
    "( [ homo ] ) , we calculate the direct sum of the sylow-@xmath228 subgroups of @xmath38 over primes @xmath228 which do not divide @xmath34 , as follows @xmath324 now let @xmath228 be a prime that divides @xmath34 .",
    "suppose that @xmath301 is the largest power of @xmath228 that divides @xmath34 , and that the sylow-@xmath228 subgroup of @xmath38 is @xmath325 lemma  [ divbym ] implies that @xmath303 for @xmath304 .",
    "furthermore , we know the order of the sylow-@xmath228 subgroup of @xmath38 from eq .",
    "( [ order ] ) , which implies that @xmath326 because the expression on the right - hand side equals the number of factors of @xmath228 in @xmath327 . by eq .",
    "( [ homo ] ) , we have @xmath328 by the inductive hypothesis , we find that @xmath329 for @xmath330 , that @xmath331 , and that @xmath303 for @xmath332 or @xmath314 .",
    "we solve eq .",
    "( [ porder ] ) for @xmath316 .",
    "we find that @xmath333 if @xmath334 and that @xmath335 if @xmath336 .",
    "then we have @xmath337 by taking the direct sum of eq .",
    "( [ nodivide ] ) and eq .",
    "( [ divide ] ) over all primes which divide @xmath34 , we complete the inductive step and prove theorem  [ kautz ] , as desired .",
    "a. e. holroyd , l. levine , k. meszaros , y. peres , j. propp and d. b. wilson , chip - firing and rotor - routing on directed graphs , _ in and out of equilibrium 2 _ , 331364 , progr .",
    "60 , birkhauser , 2008 . http://arxiv.org/abs/0801.3306"
  ],
  "abstract_text": [
    "<S> the line graph @xmath0 of a directed graph @xmath1 has a vertex for every edge of @xmath1 and an edge for every path of length 2 in @xmath1 . in 1967 , knuth used the matrix - tree theorem to prove a formula for the number of spanning trees of @xmath0 , and he asked for a bijective proof @xcite . in this paper , we give a bijective proof of a generating function identity due to levine @xcite which generalizes knuth s formula . as a result of this proof </S>",
    "<S> , we find a bijection between binary de bruijn sequences of degree @xmath2 and binary sequences of length @xmath3 . finally , we determine the critical groups of all the kautz graphs and de bruijn graphs , generalizing a result of levine @xcite .    </S>",
    "<S> = 1 </S>"
  ]
}
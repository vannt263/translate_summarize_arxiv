{
  "article_text": [
    "a wireless sensor network ( wsn ) is composed of a large number of sensor nodes with limited resources .",
    "since wsns can be deployed in an unattended or hostile environment , the design of an efficient authentication scheme is of great importance to the data authenticity and integrity in wsns . in this respect , many authentication schemes have been proposed .",
    "the most straightforward way to guarantee data authenticity is to use conventional public - key cryptography based digital signature techniques .",
    "although the use of public - key cryptography on wsns has been demonstrated in @xcite to be feasible , the computation overhead is still rather high for resource - constrained devices .    * authentication problem .",
    "* sensor networks are vulnerable to _ false data injection attack _",
    "@xcite , by which the adversary injects false data , attempting to either deceive the base station ( bs , or data sink ) , and _ path - based dos _ ( pdos ) attack @xcite , by which the adversary sends bogus messages to randomly selected nodes so as to waste the energy of forwarding nodes .",
    "several so - called _ en - route filtering schemes _ have been proposed to quickly discover and remove the bogus event report injected by the adversary . here , `` en - route filtering '' means that not only the destination node but also the intermediate nodes can check the authenticity of the message in order to reduce the number of hops the bogus message travels and , thereby , conserve energy .",
    "hence , it is especially useful in mitigating false data injection attack and pdos attack @xcite , because the falsified messages will be filtered out as soon as possible .",
    "* related work .",
    "* sef @xcite is the first en - route filtering scheme found in the literature that exploits probabilistic key sharing over a partitioned key pool . due to its design strategy , however , only a few intermediate nodes between the source - destination node pair have the ability to check the validity of forwarding messages , leading to low filtering capability . iha",
    "@xcite , which verifies the transmitted packets in a deterministic hop - by - hop fashion , has also been proposed to authenticate the event report .",
    "nevertheless , it requires complicated key sharing among neighboring nodes and could be vulnerable to node compromises if node compromises are mounted immediately after sensor deployment .",
    "based on the similar idea used in sef and iha , several other en - route filtering schemes are proposed . with the sophisticated use of one - way hash chains in clustered sensor networks ,",
    "def @xcite has improved filtering power over sef @xcite . using the proposed multiple - axis technique , gref @xcite",
    "is designed to support en - route filtering in the networks with multiple data sinks .",
    "lbrs @xcite and leds @xcite take advantage of location information to enhance the resilience to node compromises .",
    "ccef @xcite , stef @xcite , and kaef @xcite are presented to authenticate the transmitted packets only in query - based sensor networks .",
    "note that , as to broadcast authentication , @xmath0tesla and its variants @xcite can also serve message authentication well .",
    "nevertheless , broadcast authentication is used to authenticate only the messages sent from the base station while en - route filtering schemes are used for authenticating and filtering a bogus event report that is assumed to not be detected by multiple legitimate sensor nodes in a node - to - node or node - to - bs communication pattern .",
    "thus , the design of broadcast authentication schemes is orthogonal to the content of this paper .    * the design of en - route filtering schemes . * the redundancy property , which means that an event can be simultaneously observed by multiple sensor nodes , can be used to design the en - route filtering schemes . specifically , the general design framework is that the source node that senses an event and wants to send an event report to the destination node first collects the neighboring nodes endorsements of the sensed event . afterwards , it sends out the event report and endorsements .",
    "each intermediate node and the destination node can check the authenticity of the received report via the verification of the endorsements .    aiming to enhance the filtering capability and improve the resilience against node compromises , most of the existing en - route filtering schemes rely on complicated security associations ( _ e.g. _ key sharing ) , and , therefore , incur some assumptions such as secure bootstrapping time , stable routing , single data sink , the immobility of sensor nodes , _ etc _ , making them impractical .",
    "we identify the following four problems associated with the existing schemes .    1 .",
    "the reason the unnecessary assumptions should be made stems from the fact that the message authentication codes ( macs , or keyed hash functions ) used do not support en - route filtering functionality , while the authenticity of the forwarding messages needs to be checked by as many intermediate nodes as possible .",
    "2 .   it has been demonstrated in @xcite that the node is able to send an event report to the other nodes in certain in - network control scenarios . nonetheless , the existing schemes , which are only effective on the node - to - bs communication pattern , are ineffective in handling false data injection and pdos attacks in such scenarios .",
    "the existing en - route filtering schemes are difficult to apply on mobile sensor networks or networks with multiple sinks .",
    "in other words , the applicability of en - route filtering schemes on different network settings should be improved .",
    "4 .   last , based on conventional design , all the en - route filtering schemes suffer from a special kind of dos attack , false endorsement dos ( fedos ) attack @xcite , which could neutralize the advantages gained from the use of en - route filtering schemes .    in this paper , we take a completely different approach to the design of an en - route filtering scheme to avoid the above problems . in particular , instead of establishing security associations , we turn to construct an en - route filtering hash function , constrained function - based authentication ( cfa ) scheme , and then employ such hash function to generate macs used to endorse the sensor readings so that each intermediate node can verify the authenticity of forwarding messages . in particular , our proposed cfa possesses the following four characteristics : 1 ) _ resilience to node compromise _",
    "( rnc ) , which means that the compromised nodes can not forge the messages sent from the genuine nodes ; 2 ) _ immediate authentication _ ( ia ) , which can be thought of as a synonym to en - route filtering and can be used to filter out the falsified messages as soon as possible to conserve energy ; 3 ) _ independence to network setting _ ( ins ) , which means that cfa can be applied on the networks with different network settings ; 4 ) _ efficiency _ ( eff ) , which means that cfa has low computational and communication overhead . with these characteristics ,",
    "a cfa - based en - route filtering ( cfaef ) scheme can be constructed in such a way that the source node sends to the destination node a message , together with the corresponding cfa - based endorsements generated by the neighboring nodes . afterwards",
    ", the source node can determine if the neighboring nodes send the false endorsement and each intermediate node has ability to check the authenticity of forwarding messages . as a whole ,",
    "as we will show later , the advantages of applying cfa on mac generation are that the filtering capability can be improved , the resilience against fedos attack can be achieved , and the impractical assumptions previously made in the literature are no longer required .    * our contributions . *",
    "our contributions are as follows :    * a constrained function based authentication ( cfa ) scheme for wsns is proposed .",
    "cfa can be thought of as a hash function directly supporting en - route filtering functionality , and can act as a building block for other security mechanisms . * a cfa - based en - route filtering ( cfaef ) scheme that can simultaneously defend against false data injection , pdos , and fedos attacks",
    "is proposed .",
    "particularly , compared with the existing methods , which either have low filtering capability or necessitate some unrealistic assumptions , our cfaef scheme can be applied on arbitrary networks without further assumptions . *",
    "the efficiency of cfa and cfaef schemes is studied in both theoretical and numerical aspects .",
    "* network model . *",
    "we assume a wsn composed of @xmath1 resource - limited sensor nodes with ids , @xmath2 .",
    "the unique i d for each node can be either arbitrarily assigned in the sensor platform , such as telosb , or fixed in a specific sensing hardware when manufactured , like the mac address on current network interface cards ( nics ) .",
    "although one or multiple base stations ( or data sinks ) are involved in data collection in a wsn , the efficiency of our proposed schemes does not rely on their trustworthiness and authenticity .",
    "in addition , arbitrary network topology is allowed in our method .",
    "some or all of the sensor nodes can have mobility .",
    "the network planner , prior to sensor deployment , also can not gain any deployment knowledge pertaining to sensors locations .    * security model . *",
    "the objectives of the adversary are to deceive the bs into accepting the falsified event report and to deplete sensor nodes energy by launching pdos attack and fedos attack . in this paper",
    ", sensor nodes are assumed to not be equipped with tamper - resistant hardware .",
    "thus , all the information is exposed and can be utilized by the adversary as long as a node is captured .",
    "we also assume that the attacks such as node compromises can be mounted by the adversary immediately after sensor deployment , _",
    "i.e. _ , the proposed schemes can not rely on the secure bootstrapping time used in @xcite .",
    "if required , any pair of sensor nodes can establish their shared key in a noninteractive fashion @xcite .",
    "although sensor networks are known to be vulnerable to many attacks such as wormhole attack , selective forwarding attack , _ etc _ , we refer to the existing rich literature @xcite for these issues and the defense against these attacks is beyond the scope of this paper .",
    "since the proposed cfa scheme is constructed by making use of the pairwise key generated by the carpy+ scheme @xcite for secure communication , we first briefly review carpy+ in sec .",
    "[ sec : a review of carpy+ scheme ] to make this paper self - contained .",
    "then , the proposed cfa scheme will be presented in the remaining subsections . in this paper , nodes",
    "@xmath3 , @xmath4 , and @xmath5 are denoted as the source node , destination node , and intermediate node , respectively .",
    "let @xmath1 , @xmath6 , and @xmath7 , where @xmath8 is a prime number , be the number of sensor nodes , a security parameter independent of @xmath1 , and a finite field , respectively .",
    "let @xmath9 , where @xmath10 is a symmetric matrix , @xmath11 is a matrix , and @xmath12 is the transpose of @xmath13 .",
    "let @xmath14 .",
    "it can be known that @xmath15 must be symmetric because @xmath16 . before sensor deployment , proper constrained random perturbation vectors are selected and applied on each row vector of @xmath17 to construct a matrix @xmath18 .",
    "in addition , @xmath19 is selected as a vandermonde matrix generated by a seed .",
    "the @xmath20-th row vector of @xmath18 , @xmath21 , is stored into the node @xmath20 .",
    "after sensor deployment , node @xmath3 can have the shared key with node @xmath4 by calculating the inner product of the row vector @xmath22 and the @xmath4-th column vector @xmath23 , then extracting the common part as the shared key .",
    "note that in the carpy+ scheme , @xmath19 and @xmath24 can be publicly known while @xmath17 should be kept secret .",
    "therefore , carpy+ can establish a pairwise key between each pair of sensor nodes without needing any communication .",
    "this property is an essential part in constructing the proposed cfa scheme , because establishing a key via communications incurs the authentication problem , leading to a circular dependency .      in the cfa scheme , the network planner , before sensor deployment",
    ", selects a secret polynomial @xmath25 from the set @xmath26 ( to be defined in eq .",
    "( [ eq : fdefinition ] ) later ) , whose coefficients should be kept as secret , thereby constituting the security basis of cfa . for simplicity , we assume that the degree of each variable in @xmath25 is the same , which is @xmath27 , although they can be distinct in our scheme . for each node @xmath3 ,",
    "the network planner constructs two polynomials , @xmath28 and @xmath29 . since directly storing these two polynomials enables the adversary to obtain the coefficients of @xmath25 by capturing a few nodes , the authentication polynomial @xmath30 and verification polynomial @xmath31 should be , respectively , constructed from the polynomials @xmath32 and @xmath33 by adding independent perturbation polynomials .",
    "afterwards , the authentication and verification polynomials , instead of @xmath32 and @xmath33 , are stored in node @xmath3 .",
    "for source node @xmath3 , the mac attached to the message @xmath34 is calculated according to its own authentication polynomial .",
    "verification number _ be the result calculated from the verification polynomial @xmath31 by substituting the claimed source node i d , the shared pairwise key , and the hashed message into @xmath35 , @xmath36 , and @xmath37 , respectively .",
    "the received node considers the received message authentic and intact if and only if the _ verification difference _ , which is the difference between the received mac and its calculated verification number , is within a certain predetermined range .",
    "although our cfa scheme is similar to zhang",
    "_ et al_. s scheme @xcite , the design strategies used in the cfa scheme are different from the ones in @xcite , except the fact that both rely on polynomial evaluation . in zhang _",
    "et al_. s scheme , due to the improper use of perturbation , the nodes ids should be forced to be changed , resulting in the limitation of hardware dependence .",
    "in addition , as an arbitrary secret polynomial can be used in @xcite , immediate authentication can be achieved only if the message authentication code forms a polynomial . on the contrary , since the secret polynomial @xmath25 in cfa is selected such that certain properties are satisfied , the message authentication code can be reduced from a polynomial size to a single number , resulting in less communication overhead ( packet overhead ) . on the other hand , whereas the pairwise key has been considered useless in providing either immediate authentication or resilience to node compromises in previous methods , in this paper we find that the pairwise key is helpful in enhancing the security while retaining the property of immediate authentication .",
    "hence , all these characteristics substantially differentiate cfa from @xcite .    in the following two subsections , the off - line step and on - line step , respectively , will be described .      before deploying sensor nodes , the network planner picks a parameter @xmath8 from which a finite field @xmath38 is built .",
    "all of the operations throughout the paper are performed over @xmath38 unless specifically mentioned .",
    "let @xmath39 be the set of node ids .",
    "let @xmath40 be the least number of bits sufficient to represent @xmath8 .",
    "assume that node ids , pairwise key , and hash value can be represented in @xmath38 .",
    "in addition , a security parameter @xmath41 is also selected .",
    "then , the secret polynomials @xmath25 s , used as the basis for constructing both authentication and verification polynomials , are defined in _ constrained function set _ , @xmath26 , where @xmath42 the authentication polynomial , @xmath43 , and verification polynomial , @xmath44 , are stored in each node @xmath3 , where polynomials @xmath45 and @xmath46 , used for perturbation , are randomly selected from the _ authentication perturbation set _ , @xmath47 and the _ verification perturbation set _",
    ", @xmath48 respectively .",
    "though the sets @xmath26 , @xmath49 , and @xmath50 appear to be artificial , they guarantee the efficiency and feasibility of immediate authentication of cfa . in addition , constructing @xmath30 and @xmath31 from @xmath26 , @xmath49 , and @xmath50 may be time- and energy - consuming .",
    "nevertheless , it could be acceptable because such construction is performed only by the network planner , instead of sensor nodes .",
    "if the time required for constructing @xmath30 and @xmath31 is still an issue that can not be ignored , an efficient method for constructing the polynomials in a restricted version of @xmath26 will be later discussed in sec .",
    "[ sec : implementation issues ] .",
    "the off - line procedure of cfa is described in fig .",
    "[ algo : off - line step of cfa scheme ] .",
    "after sensor deployment , the sensor node may work as a source node , intermediate node , or destination node depending on whether the message is to be sent or verified . in the following ,",
    "we describe the operations one should perform when the node acts as different roles .",
    "it should be noted that the pairwise key @xmath51 , used here , is constructed by applying the carpy+ scheme @xcite on nodes @xmath3 and @xmath4 , respectively",
    ".    * source node ( message transmission ) .",
    "* when node @xmath3 wants to send a message @xmath34 to node @xmath4 , it calculates the message authentication code : @xmath52 where @xmath53 is randomly picked from the set @xmath54 .",
    "then , the packet @xmath55 is sent to @xmath4 possibly through a multi - hop path . note that the message authentication code @xmath56 is only a number here .",
    "* destination node ( message verification ) . * after receiving the packet @xmath55 , the destination node @xmath4 first calculates the verification number : @xmath57 according to its own verification polynomial @xmath58 and then calculates the corresponding _ verification difference _",
    ", @xmath59 : @xmath60 if @xmath59 is within the range @xmath61 , where @xmath62 is a security parameter mentioned in sec .",
    "[ sec : off - line step of cfa scheme ] , then the authenticity and integrity of the packet @xmath63 is successfully verified . otherwise , the packet @xmath63 is dropped .",
    "the principle behind this step is as follows : @xmath64 > from the rules of constructing authentication and verification polynomials , we know that @xmath65 , @xmath66 @xmath67 , and @xmath68 .",
    "thus , when @xmath63 is genuine , the verification difference @xmath69 must be within @xmath61 .",
    "* intermediate node ( message verification ) . * after receiving the packet @xmath55 , the intermediate node @xmath5 first calculates @xmath70 according to its own verification polynomial @xmath71 and then calculates the verification difference @xmath72 . if @xmath73 is within the range @xmath74 , then the authenticity of the packet @xmath63 is successfully verified , and the packet @xmath63 will be forwarded by node @xmath5 .",
    "otherwise , the packet @xmath63 is dropped .",
    "the principle behind this step is as follows .",
    "when a genuine packet @xmath63 is received , we can obtain : @xmath75 by the construction of @xmath26 , we know : @xmath76 in addition , from the rules of constructing authentication and verification polynomials , we know that @xmath77 , @xmath78 , and @xmath68 .",
    "therefore , the verification difference @xmath73 must be within @xmath74 .",
    "on the other hand , consider the case where node @xmath3 has been compromised by the adversary .",
    "the adversary now wants to deceive @xmath4 that a message @xmath34 sent by @xmath3 is sent by @xmath79 .",
    "consider the modified packet , @xmath80 where @xmath81 means a node i d the adversary pretends to be .",
    "note that we only consider the adversary who exploits the information obtained from a single captured node @xmath3 , and focus on the use of the constructed set @xmath26 .",
    "the verification procedure at the intermediate node @xmath5 is as follows : @xmath82 by the construction of @xmath26 , we know : @xmath83 in addition , from the construction of authentication and verification polynomials , we know that @xmath84 , @xmath85 , and @xmath68 . therefore , the verification difference @xmath73 must be not within @xmath74 and the packet @xmath86 will be dropped . in other words ,",
    "once the source node i d of a message is modified , such malicious manipulation will be deterministically detected by the intermediate nodes .",
    "the on - line procedure of cfa is described in fig .",
    "[ algo : on - line step of cfa scheme ] .",
    "the effectiveness and efficiency of the proposed cfa scheme rely on the use of @xmath30 and @xmath31 , which satisfy the constrained function set @xmath26 , the authentication perturbation set @xmath49 , and the verification perturbation set @xmath50 .",
    "as the construction of @xmath49 and @xmath50 is relatively easy , in this section , we focus on the construction of @xmath30 and @xmath31 , with particular emphasis on the construction of @xmath25 .    a straightforward method for deriving proper @xmath25 is to construct the whole set @xmath26 and then randomly pick one from @xmath26 .",
    "when the coefficients of the polynomials in @xmath26 are constrained with @xmath38 , there are @xmath87 possible four - variate @xmath27-degree polynomials .",
    "thus , @xmath88 tests are required because there are @xmath87 four - variate @xmath27-degree polynomials , each of which needs to check whether it satisfies the constraints @xmath89 , @xmath90 and @xmath91 in @xmath26 , by examining the other @xmath92 possibilities of different input variables .",
    "the above construction of @xmath26 will be accomplished before sensor deployment by the network planner that is usually assumed to be resource - abundant , thus , feasible . despite its feasibility ,",
    "such an exhaustive search is not a sufficiently efficient method . in the following ,",
    "we develop an efficient algorithm trading the deterministic security for the construction efficiency on the basis of the observation that , in some cases , a variant of @xmath26 is sufficient for our use and the search for a variant of @xmath26 can accelerate the construction of @xmath25 .",
    "hence , we emphasize on how to efficiently construct a variant @xmath93 of the original constrained function set @xmath26 .",
    "let @xmath93 be the _",
    "weak constrained function set _ as follows : @xmath94    obviously , @xmath26 is a subset of @xmath93 since some constraints in @xmath26 are discarded . as to the construction of @xmath25 in @xmath93 ,",
    "our idea is to construct a random subset of @xmath93 that is as large as possible and to sample a polynomial from it . assuming that @xmath95,y\\in[y_{\\min},y_{\\max}],z\\in[z_{\\min},z_{\\max}]$ ] , and @xmath96 $ ] , we want to construct a polynomial @xmath25 satisfying the constraints in @xmath93 , which will be shown as follows",
    ".    assume that @xmath97 , @xmath98 , @xmath99 . according to the definition of @xmath25 in @xmath93 ,",
    "@xmath25 can be rewritten as : @xmath100 with the representation in eq .",
    "( [ eq : f1 ] ) , the term @xmath101 can be written as : @xmath102 according to the signs of @xmath103 s , eq .",
    "( [ eq : f2 ] ) can be further rewritten as : @xmath104 where @xmath105 by taking the constraint @xmath91 in @xmath93 and eq .",
    "( [ eq : f3 ] ) into consideration , we have : @xmath106 with @xmath107 and @xmath108 being the lower bound and upper bound of @xmath101 , respectively , eq .",
    "( [ eq : f4 ] ) can be rewritten as : @xmath109 here , we define @xmath110=\\{(i , j , k , m)|f(x , y , z , w)=\\sum_{i , j , k , m=0}^d\\alpha_{i , j , k , m}x^iy^jz^kw^m,\\alpha_{i , j , k , m}>0\\}$ ] and @xmath111=\\{(i , j , k , m)|f(x , y , z , w)=\\sum_{i , j , k , m=0}^d\\alpha_{i , j , k , m}x^iy^jz^kw^m,\\alpha_{i , j , k , m}<0\\}$ ] .",
    "we can examine if a given set of @xmath103 s , @xmath112 , constitutes a polynomial @xmath25 of @xmath93 by exploiting the definitions in eq .",
    "( [ eq : fpdefinition ] ) and considering the extremes in eq .",
    "( [ eq : f5 ] ) shown as follows : @xmath113 define @xmath114 , which is only different from @xmath25 in the part of coefficients . from eq .",
    "( [ eq : f6 ] ) , we can observe that the possible range of @xmath115 will be contained in @xmath116 , _",
    "i.e. _ , @xmath117 and @xmath118 , if ( i ) @xmath119 , @xmath120 $ ] , or ( ii ) @xmath121 , @xmath122 $ ] . with this _ monotone _",
    "property , our algorithm , randomly sampling a polynomial from a random subset of @xmath93 , whose pseudo code is shown in fig . [ algo : f construction ] , can be described as follows .",
    "as @xmath103 in @xmath25 denotes the coefficient of @xmath123 for specified @xmath124 , we use @xmath125 $ ] to denote an instance of @xmath103 s , @xmath112 . at the beginning of @xmath93-construction algorithm shown in fig .",
    "[ algo : f construction ] , we randomly choose @xmath125 $ ] and determine if the chosen @xmath125 $ ] satisfies eq .",
    "( [ eq : f6 ] ) . if @xmath125 $ ] fails to satisfy eq .",
    "( [ eq : f6 ] ) , @xmath125=[\\alpha/2]$ ] is checked recursively until eq .",
    "( [ eq : f6 ] ) is satisfied ( lines 1@xmath1263 ) . here ,",
    "@xmath127 $ ] consists of @xmath128 s , where each @xmath103 is an element in @xmath125 $ ] .",
    "note that the loop ( lines 2@xmath1263 ) is guaranteed to terminate at a certain step because at least the setting of @xmath129 , @xmath112 , is satisfiable . with the monotone property , we can also guarantee that any polynomial sampling from @xmath130|[\\alpha']\\preceq[\\alpha]\\}$ ] is one of the polynomials in @xmath93 . here ,",
    "@xmath131\\preceq[\\alpha]$ ] means that the possible range of @xmath115 will be contained in @xmath116 .",
    "thus , after the execution of line 3 , we can sample a polynomial @xmath132 from the sample space @xmath130|[\\alpha']\\preceq[\\alpha]\\}$ ] .",
    "nevertheless , we can , in fact , further extend the sample space by tuning selected @xmath103 s ( lines 5@xmath12611 ) .",
    "for example , suppose @xmath133 @xmath103 s are chosen to be tuned .",
    "in particular , defining @xmath134,(i , j , k , m),\\varphi\\rangle$ ] as @xmath125 $ ] whose @xmath103 is selected to be replaced by @xmath135 , we can extend the range of @xmath115 by maximizing ( minimizing ) the selected @xmath103 if @xmath136 $ ] ( @xmath137 $ ] ) so that the size of @xmath130|[\\alpha']\\preceq[\\alpha]\\}$ ] will be increased .",
    "together with @xmath125 $ ] obtained after line 3 , lines 8 and 11 behave like sampling a polynomial from a subset of @xmath93 , which could be randomly different due to the random construction of @xmath138 ( line 4 ) .",
    "note that a search of maximum @xmath139 ( line 8) can be accomplished by conducting binary search on the positive integers greater than @xmath103 .",
    "the minimum @xmath139 can be found in a similar way ( line 11 ) .",
    "since we should conduct binary search once for each element in @xmath138 , the running time of @xmath93-construction algorithm is @xmath140 . indeed , from the theoretical point of view",
    ", it might obtain only a useless constant polynomial after the execution of @xmath93-construction algorithm , therefore , require executing the algorithm multiple times .",
    "nevertheless , in practice , when a sufficiently large security parameter @xmath62 ( as defined in eq .",
    "( [ eq : fdefinition ] ) and eq .",
    "( [ eq : fpdefinition ] ) ) is selected , executing the algorithm once is sufficient for sampling a non - trivial polynomial from @xmath93 .",
    "it should be noted that @xmath93-construction algorithm is not a uniform sampling over @xmath93 . as we mentioned earlier",
    ", what we do is to construct and then sample from a random subset of @xmath93 .",
    "nevertheless , due to the use of @xmath138 with the purpose of tuning randomly selected @xmath103 s , we can still guarantee that there is a nonzero probability of each polynomial in @xmath93 being sampled , resulting the sufficient security against directly guessing all the coefficients @xmath103 s .",
    "when @xmath25 is selected from the weak constrained function set , @xmath93 , the filtering capability will be slightly reduced .",
    "its impact on the security of cfa using @xmath132 is discussed in the following .",
    "even if @xmath25 is selected from @xmath93 , the destination and the intermediate nodes , when receiving the genuine message , can still correctly accept and forward the received message , respectively .",
    "the validation procedures are the same as those in eqs .",
    "( [ eq : destination_verf ] ) and ( [ eq : interdemiate_verf ] ) , therefore , are omitted here .",
    "the destination node and intermediate nodes , however , only _ probabilistically _ drop falsified messages in cfa using @xmath132 , instead of deterministically dropping the modified messages in cfa using @xmath141 .",
    "the principle behind this change is as follows : @xmath142 the first term @xmath143 on the rhs of eq .",
    "( [ eq : fpsecurity ] ) can be an arbitrary element in @xmath38 , leading also to the arbitrariness of the final result in eq .",
    "( [ eq : fpsecurity ] ) .",
    "therefore , the probability that @xmath144 happens to be within the range @xmath145 $ ] is increased from @xmath146 to @xmath147 . with a similar argument",
    ", one can also show that the probability of detecting falsified messages is @xmath148 .",
    "with cfa described in sec . [",
    "sec : the constrained function based authentication ( cfa ) scheme ] , the design of cfa - based en - route filtering ( cfaef ) scheme is straightforward .",
    "the cfaef scheme consists of three phases : node initialization phase , report endorsement phase , and en - route filtering phase , which , respectively , will be described as follows",
    ".    * node initialization phase .",
    "* at first , a global security parameter @xmath149 , which indicates the maximum number of compromised nodes tolerable in the cfaef scheme , is selected .",
    "if the number of compromised nodes exceeds @xmath149 , then the adversary can inject falsified data without being detected .",
    "it should be noted that such a limitation is also applied to all en - route filtering schemes unless additional location information is used .",
    "in addition , each node @xmath3 is preloaded with @xmath30 and @xmath31 prepared for the use of cfa .",
    "last , the sensor nodes are deployed on the sensing region .    * report endorsement phase . * after sensor deployment , a node enters this phase when it has an event report to be sent .",
    "more specifically , once a node @xmath3 wants to send an event report @xmath150 to a destination node @xmath4 , it first broadcasts @xmath150 in plaintext to the nodes neighboring to @xmath3 .",
    "if the neighboring node @xmath0 agrees with @xmath150 , then it generates a mac , @xmath151 via the proposed cfa scheme , and sends an endorsement of @xmath150 , @xmath151 , back to @xmath3 . after collecting @xmath149 macs from the neighboring nodes - coverage @xcite can be achieved .",
    "] , @xmath152 , @xmath3 first checks whether the value of @xmath153 , @xmath154 , is within the predetermined range @xmath155 $ ] .",
    "if some of the collected endorsements , @xmath156 , fail to be verified , @xmath3 drops all @xmath156 s and acquires other endorsements from the neighboring nodes other than @xmath157 .",
    "only when all of @xmath149 collected endorsements are successfully verified , @xmath3 forwards @xmath158 to @xmath4 .",
    "* en - route filtering phase .",
    "* once receiving the packet @xmath159 the intermediate node @xmath5 first checks whether the attached endorsements are generated by @xmath160 distinct nodes",
    ". the packet is dropped if the verification fails .",
    "afterwards , for each @xmath161 of the @xmath160 endorsements , node @xmath5 checks whether @xmath162 is within the predetermined range @xmath155 $ ] . only if node @xmath5 succeeds in verifying all the @xmath160 endorsements , is the packet forwarded .",
    "otherwise , the packet is dropped .",
    "the operation performed by the destination node @xmath4 is similar to that performed by the intermediate node .",
    "the difference is that @xmath4 checks whether @xmath163 is within the predetermined range @xmath164 $ ] . only if @xmath4 succeeds in verifying all the @xmath160 endorsements ,",
    "is the event report @xmath150 accepted .",
    "otherwise , the packet is dropped .",
    "in this section , for cfaef , in addition to analyzing the overhead ( sec . [ sec : overhead analysis ] ) , we study its security ( sec . [",
    "sec : security ] ) and compare the energy saving with the other methods ( sec .",
    "[ sec : energy savings ] ) .      as to the storage overhead ,",
    "two trivariate polynomials need to be stored in each node in cfa , as shown in fig .",
    "[ algo : off - line step of cfa scheme ] .",
    "therefore , in cfaef , the storage overhead @xmath165 is required due to the use of authentication and verification polynomials .    for the endorsing node ,",
    "the computation overhead comes from the calculation of the message authentication code , which involves trivariate polynomial evaluation and requires @xmath165 arithmetic operations @xcite . on the other hand ,",
    "the computation overhead for the source node , intermediate nodes , and destination node is the same , which is @xmath166 , because @xmath149 macs should be calculated .    as to the communication overhead of cfaef",
    ", the source node has to communicate with the neighboring nodes to obtain the endorsements .",
    "moreover , the source node has to send @xmath158 , instead of @xmath167 , to the destination node . as a result , the additional communication overhead incurred by the use of cfaef is @xmath168 , where @xmath169 is the average number of hops between two arbitrary nodes in a network .",
    "first , we study the security of the proposed cfa scheme . in particular , we assume that the adversary attempts to recover the coefficients of @xmath25 . consider an adversary who can only modify the transmitted packet and re - transmit the modified one in order to deceive the destination node into accepting that the packet originates from the other node or that the message is authentic .",
    "the probability of the adversary successfully deceiving the destination node can be analyzed as follows .",
    "if the message @xmath34 with @xmath56 sent by the node @xmath3 is modified to @xmath170 or @xmath79 , then we can know that the probability that the intermediate node forwards the message @xmath171 is at most @xmath147 and the probability that the destination node accepts the message @xmath171 is at most @xmath172 .",
    "this can be explained by the fact that , to deceive the destination node , the best strategy that can be adopted by the adversary is to forge the mac corresponding to @xmath171 and @xmath81 .",
    "nonetheless , such mac can only be guessed by the adversary .",
    "therefore , the verification difference would be arbitrary and the probabilities that @xmath73 and @xmath59 happen to be within the predetermined ranges are at most @xmath147 and @xmath172 for the intermediate node and destination node , respectively .",
    "second , we consider the case where the adversary not only eavesdrops on the transmitted messages but also compromises @xmath173 nodes to use the security information stored in them , trying to recover the coefficients of @xmath25",
    ". we can know that the adversary can not break @xmath25 if only @xmath174 nodes are compromised @xcite .",
    "when the adversary has compromised @xmath175 nodes , the complexity for it to obtain the coefficients of @xmath25 is @xmath176 .",
    "this can be explained as follows .",
    "assume that @xmath177 are @xmath173 compromised nodes .",
    "let @xmath178 , @xmath179 , and @xmath180 be arbitrary elements in @xmath38 .",
    "we know that if we can arbitrarily construct @xmath181 for any @xmath178 , @xmath182 , and @xmath180 , then the coefficients of @xmath25 can be inferred by solving a system of equations .",
    "thus , our goal is to obtain the coefficients of @xmath181 .",
    "note that the discussion and effect of obtaining the coefficients of , for example , @xmath183 is the same as that of obtaining the coefficients of @xmath181 .",
    "thus , we omit the former case and focus only on the latter case here",
    ". we can know that @xmath181 can always be written as @xmath184 .",
    "based on the construction of @xmath31 , we can derive the following @xmath173 equations : @xmath185 in this system of equations , there are @xmath186 unknown variables including @xmath187 ( @xmath188 ) and @xmath189 ( @xmath190 ) .",
    "there are , however , only @xmath173 equations .",
    "thus , @xmath191 unknown variables should be eliminated or correctly guessed .",
    "the polynomials , @xmath192 s , may be used by the adversary to reduce the number of unknown variables . a common method that is able to reduce the number of unknown variables",
    "is called _ reflection attack _ in @xcite and is employed here .",
    "let @xmath193 .",
    "the above equation can be rewritten as @xmath194 . together with this equation , eq .",
    "( [ eq : security proof 1 ] ) can be represented as : @xmath195 it can be observed that reflection attack does not work in breaking @xmath25 with higher probability because there are still @xmath186 unknown variables in @xmath173 equations .",
    "thus , @xmath191 unknown variables should be eliminated or correctly guessed .",
    "since each unknown variable can be of at least @xmath62 bits length , the complexity of recovering the coefficients is @xmath196 .    after the security of cfa is established , the resilience of cfaef against false data injection attack , pdos attack , and fedos attack is obvious .",
    "for example , cfaef is resilient to false data injection attack and pdos attack because , with the macs generated by cfa , the false data can be detected and dropped by either intermediate nodes or the destination node when the number of compromised nodes does not exceed @xmath149 . in particular , with @xmath149 endorsements required , the probabilities of detecting the bogus message on each intermediate node and the destination node are @xmath197 and @xmath198 , respectively . on the other hand , fedos attack is useless because if the compromised node sends a false endorsement to the source node , the source node , acting as the intermediate node between the endorsing node and destination , can identify the false endorsement via the cfa verification , and refuse to communicate with the compromised node thereafter .      in this section ,",
    "the energy consumption model similar to that used in @xcite is used to analyze the energy savings of various schemes .",
    "due to the fact that , the higher the filtering capability , the lower the energy consumed for forwarding falsified messages , the evaluation of energy consumption is somewhat equivalent to the evaluation of the filtering capability .    as described in sec .",
    "[ sec : introduction ] , most of the existing en - route filtering schemes require strict assumptions .",
    "for example , iha @xcite and gref @xcite heavily rely on the sophisticated security association that must be established within a period of secure bootstrapping time , which is unrealistic in certain cases . moreover , some schemes @xcite require location information and some others @xcite work only on query - based networks . therefore ,",
    "in the following , we emphasize the energy consumption comparison among sef @xcite , def @xcite , and our cfaef scheme , because sef and def achieve the balance among efficiency , filtering capability , and generality while minimal assumptions are required .",
    "in particular , @xcite shows a general formula @xmath199 for evaluating the energy consumption @xmath150 of report forwarding . here ,",
    "@xmath200 , @xmath169 , @xmath201 , and @xmath202 denote the bit - length of the report plus endorsements , the average number of hops between two arbitrary nodes , the ratio of the false report to the legitimate report , and the probability of detecting the false report on each node , respectively .",
    "note that , as demonstrated in @xcite , the energy consumed by the communication is over @xmath203 times greater than that consumed by the computation .",
    "thus , the above formula emphasizes on the calculation of energy consumption incurred by the communications .",
    "let @xmath204 be the energy consumption of report forwarding when no filtering scheme is used .",
    "let @xmath205 and @xmath206 be the energy consumption of report forwarding when sef @xcite and def @xcite are used , respectively . throughout the energy evaluation ,",
    "the common parameters @xmath207 , @xmath208 , mac size , @xmath209 bits , and the byte - length of the report , @xmath210 bytes , were used for the methods adopted for comparisons . for @xcite , with default parameter settings , we know that @xmath211 , @xmath212 , and @xmath213 . according to eq .",
    "( [ eq : energy consumption formula ] ) , with similar calculation to @xcite and the setting of @xmath214 and @xmath215 , the energy consumption @xmath216 in cfaef can also be derived as @xmath217 , because in this case @xmath218 and @xmath219 . in particular , when @xmath220 , our scheme saves @xmath221 of energy than the scheme without using filtering , @xmath222 of energy than sef , and @xmath223 of energy than def .",
    "a constrained function based message authentication ( cfa ) scheme , which can be thought of as a hash function directly supporting en - route filtering functionality , is proposed . according to cfa",
    ", we construct a cfa - based en - route filtering ( cfaef ) scheme to simultaneously defend against false data injection , pdos , and fedos attacks .",
    "some theoretical and numerical analyses are provided to demonstrate the efficiency and effectiveness of cfaef . + * acknowledgment * : chia - mu yu and chun - shien lu were supported by nsc 97 - 2221-e-001 - 008 .",
    "sy - yen kuo was supported by nsc 96 - 2628-e-002 - 138-my3 .",
    "r. cardell - oliver , k. smetten , m. kranz , and k. mayer . a reactive soil moisture sensor network : design and field evaluation .",
    "_ international journal of distributed sensor networks _ , vol.1 , no .",
    "149 - 162 , 2005 .",
    "w. du , j. deng , y. s. han , and p. varshney . a key predistribution scheme for sensor networks using deployment knowledge .",
    "_ ieee trans . on dependable and secure computing _ , vol .",
    "3 , no 2 , pp . 62 - 77 , 2006 ."
  ],
  "abstract_text": [
    "<S> sensor networks are vulnerable to _ false data injection attack _ and _ path - based dos _ ( pdos ) attack . while conventional authentication schemes are insufficient for solving these security conflicts , an _ en - route filtering _ scheme acts as a defense against these two attacks . to construct an efficient en - route filtering scheme </S>",
    "<S> , this paper first presents a constrained function based message authentication ( cfa ) scheme , which can be thought of as a hash function directly supporting the en - route filtering functionality . </S>",
    "<S> together with the _ redundancy property _ of sensor networks , which means that an event can be simultaneously observed by multiple sensor nodes , the devised cfa scheme is used to construct a cfa - based en - route filtering ( cfaef ) scheme . </S>",
    "<S> in contrast to most of the existing methods , which rely on complicated security associations among sensor nodes , our design , which directly exploits an en - route filtering hash function , appears to be novel . </S>",
    "<S> we examine the cfa and cfaef schemes from both the theoretical and numerical aspects to demonstrate their efficiency and effectiveness .    </S>",
    "<S> * keywords * : sensor networks , authentication , en - route filtering , security </S>"
  ]
}
{
  "article_text": [
    "_ computable analysis _",
    "@xcite studies problems involving real numbers from the viewpoint of computability .",
    "elements of uncountable sets ( such as real numbers ) are represented by infinite sequences of approximations and processed by turing machines .",
    "this framework is applicable not only to the real numbers but also with great generality to other spaces arising naturally in mathematical analysis .",
    "there is a unified way to discuss computability of real functions , sets of real numbers , operators taking real functions as inputs , and so on .",
    "in contrast , the application of this approach to computational complexity has been limited in generality .",
    "for example , although there is a widely accepted notion of polynomial - time computable real functions @xmath3 { \\mathbin{\\to}}{\\mathbb r}$ ] on the compact interval that has been studied extensively  @xcite , the same approach does not give a nice class of real functions on @xmath4 .",
    "most of the complexity results in computable analysis to date ( with a few exceptions  ) are essentially limited to the complexity of either real functions with compact domain , or of bounded subsets of @xmath4 .",
    "they do not address the complexity of , say , an operator  @xmath5 that takes real functions @xmath3 { \\mathbin{\\to}}{\\mathbb r}$ ] to another real function @xmath6 .",
    "there are many positive and negative results  @xcite about such operators , but typically they are stated in the form    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ if @xmath7 is in the complexity class @xmath8 , then @xmath6 is in complexity class @xmath9 , and + there is @xmath7 in complexity class @xmath8 such that @xmath6 is hard for @xmath10 .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    more direct statements would be the `` uniform '' or `` constructive '' form    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ the operator @xmath5 is in class @xmath11 , and + the operator @xmath5 is @xmath12-hard , _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    where @xmath11 and @xmath12 are the `` higher - order versions '' of @xmath9 and @xmath10 . at the level of computability ,",
    "it is common to ask , as soon as we see a non - uniform result , whether it can be made uniform . for complexity , we can not even ask this question because we do not know how to formulate @xmath11 and @xmath12 .",
    "this limitation has been widely recognized ; see , for example , @xcite , @xcite , and @xcite .    to address this problem , we start with the observation ( section  [ section : tte ] ) that the aforementioned limitation has to do with the fact that traditional formulations of computable analysis do not take into account the `` size '' of the infinite sequences given to the machine as input .",
    "we then propose ( section  [ section : main ] ) an extension on the machine model by replacing infinite sequences by what we call _ regular functions _ on strings .",
    "an advantage of using these functions is that we can define their _ size _ in the way suggested by type - two complexity theory  @xcite .",
    "this enables us to measure the growth of running time ( or space ) in terms of the input size ",
    "exactly what we do in the usual ( type - one ) complexity theory .",
    "we thus obtain the complexity classes analogous to @xmath0 , @xmath1 , @xmath2 ( and function classes @xmath13 and @xmath14 ) by bounding the time or space by _ second - order polynomials _ in the input size .",
    "analogues of many - one reductions and @xmath1- and @xmath2-hardness will also be introduced .",
    "we apply this framework to a few specific problems in analysis by using suitable representations of real numbers , real sets , and real functions ( section  [ section : applications ] ) . for real numbers ,",
    "the induced complexity notions turn out to be equivalent to what has been studied by ko  friedman  @xcite and hoover  @xcite . for sets and functions",
    ", our approach seems to be the first to provide complexity notions in a unified manner .",
    "this is of particular interest , because many numerical problems in the real world are naturally formulated as operators taking sets or functions .",
    "for example , consider the operator  @xmath5 that finds the solution @xmath6 of the differential equation ( of a certain class ) given by a function  @xmath7 .",
    "as mentioned above , the existing non - uniform results   only tell us _ how complex the solution @xmath6 can be when @xmath7 is easy _ ; precisely , they say that if @xmath7 is polynomial - time computable , @xmath6 is polynomial - space computable and can be polynomial - space hard .",
    "but the practical concern for numerical analysis would be _ how hard it is to compute @xmath5 _",
    "( i.e. , to compute @xmath6 given @xmath7 ) . we formulate and prove the first result of this kind : @xmath5 itself is a polynomial - space complete operator .",
    "our contribution is in introducing the framework making such formulations possible .",
    "the technically hard parts of the proofs of the specific results are already done in the proofs of the non - uniform versions , and all we need to do is to check that they uniformize in our sense .",
    "the original non - uniform versions are now corollaries of the uniform statements .",
    "a _ multi - valued function _ ( or _ multi - function _ ) @xmath5 from a set  @xmath8 to a set  @xmath9 is formally a subset of @xmath15 . for @xmath16 ,",
    "we write @xmath17 $ ] for the set of @xmath18 such that @xmath19 belongs to this subset .",
    "these @xmath20 are the `` allowable outputs '' on input  @xmath21 .",
    "we denote by @xmath22 the set of @xmath16 for which @xmath17 $ ] is nonempty .",
    "when @xmath17 $ ] is a singleton , its unique element is denoted by @xmath23 , as usual . if @xmath17 $ ] is a singleton for all @xmath24 , we say that @xmath5 is a _",
    "partial function_. when in addition @xmath25 , we say that @xmath5 is a _ total function _ , or simply a _ function_.    like some authors  @xcite , we regard computational tasks ( problems ) as multi - functions . the classes @xmath13 and @xmath14 consist of multi - functions from strings to strings computed by a machine whose time / space is polynomially bounded .",
    "here , computing a multi - function is to be interpreted according to the `` allowable outputs '' semantics mentioned above : a machine is said to compute @xmath5 if , on any input @xmath24 , it outputs _ some _ element of @xmath17 $ ] .",
    "the classes @xmath26 and @xmath27 that we will define later will also consist of multi - functions .",
    "note that we do not care what happens on inputs outside @xmath22 , unlike some authors who require that such inputs be rejected explicitly .",
    "thus a multi - function can be easy to compute while having a nasty domain .",
    "we also note , however , that allowing @xmath22 to be smaller than @xmath8 is not so important in the context of time- or space - bounded computation , because a machine that runs past the bound for some inputs can be modified so that it keeps track of the time and outputs an error message when it has run out of time or space .    throughout the paper",
    ", @xmath28 denotes the set of finite strings over the alphabet @xmath29 .",
    "we will tacitly assume , depending on contexts , that @xmath30 or that @xmath29 contains all symbols appearing in the discussion .",
    "since our applications mainly involve real numbers , it will be convenient to fix a dense subset of @xmath4 and its encoding . for each @xmath31 , let @xmath32 denote the set of strings of the form @xmath33 where @xmath34 and @xmath35 .",
    "let @xmath36 . a string in @xmath37 _ encodes _ a number in the obvious sense  namely , read as a fraction whose numerator and denominator are integers written in binary with leading zeros allowed .",
    "we write @xmath38 for the number encoded by @xmath39 .",
    "the numbers that can be encoded in this way are called _ dyadic _ numbers .",
    "there are several equivalent formulations for computable analysis .",
    "one powerful framework is weihrauch s type - two theory of effectivity ( tte ) . in this section ,",
    "we briefly introduce the infinite sequence model of tte and discuss some difficulties in dealing with complexity , which motivate our modification in section  [ section : main ] .      in the usual computability theory , we use some machine model that computes functions from @xmath28 to @xmath28 .",
    "to discuss computation on other sets  @xmath8 , we specify an _",
    "encoding _ of @xmath8that is , a rule for interpreting an element of @xmath28 as an element of @xmath8 .",
    "but we want to deal with uncountable sets , such as the set @xmath4 of real numbers .",
    "since the countable set @xmath28 can not encode them , tte uses the set @xmath40 of _ infinite sequences _ instead .",
    "computability of partial functions from @xmath40 to @xmath40 is defined using turing machines .",
    "the machine has an input tape , an output tape , and a work tape , each of which is infinite to the right .",
    "we also assume that the output tape is one - way ; that is , the only instruction for the output tape is `` write @xmath41 in the current cell and move the head to the right '' .",
    "the difference from the usual setting is in the convention by which the machine reads the input and delivers the output .",
    "the input is now an infinite string @xmath42 , and is written on the input tape before the computation starts ( with the tape head at the leftmost cell ) .",
    "we say the machine outputs an infinite string @xmath43 if it never halts and writes the string indefinitely on the output tape ( that is , for each @xmath31 , it eventually writes @xmath44 into the first @xmath45 cells ) .",
    "this defines a class of ( possibly partial ) computable functions ( without any time or space bound ) from @xmath40 to @xmath40 .",
    "the definition can be extended to multi - functions  @xmath46 : we say that a machine @xmath47 computes @xmath46 if @xmath47 , on any input @xmath48 , always outputs some element of @xmath49 $ ] .    a _ representation _",
    "@xmath50 of a set  @xmath8 is formally a partial function from @xmath40 to @xmath8 which is surjective  that is , for each @xmath16 , there is at least one @xmath51 with @xmath52 .",
    "we say that @xmath53 is a _",
    "@xmath50-name _ of @xmath21 .",
    "computability of multi - functions on represented sets is defined as follows .",
    "[ definition : realization ] let @xmath50 and @xmath54 be representations of sets @xmath8 and @xmath9 , respectively .",
    "we say that a machine _",
    "@xmath55-computes _ a multi - function @xmath46 from @xmath8 to @xmath9 if it computes the multi - function @xmath56 given by @xmath57   = \\begin{cases }   \\{\\ , \\psi \\in \\operatorname{dom}\\delta : \\delta ( \\psi ) \\in a [ \\gamma ( \\varphi ) ] \\,\\ } &   \\text{if } \\",
    "\\varphi \\in \\operatorname{dom}\\gamma ,   \\\\   \\emptyset &    \\text{otherwise}.   \\end{cases}\\ ] ]    in other words , whenever the machine is given a @xmath50-name of an element @xmath58 , it must output some @xmath54-name of some element of @xmath59 $ ] ( figure  [ figure : realization ] ) .",
    "@xmath60 \\ar[d ] _ \\gamma & \\varsigma ^{\\mathbb n}\\ar[d ] ^\\delta   \\\\     x \\ar[r ] _ a & y     } \\ ] ]    as an example , we define a representation  @xmath61 of the set @xmath4 of real numbers by saying that an infinite string @xmath51 is a @xmath61-name of @xmath62 if @xmath53 is of the form @xmath63 ( where @xmath64 is a delimiter symbol not appearing in the @xmath65 ) such that @xmath66 and @xmath67 for each @xmath68 .",
    "thus a real number is specified by a list of rational numbers converging to it .",
    "it turns out that @xmath61 is a natural representation with which to discuss computability of real functions .",
    "in particular , @xmath61 is _ admissible _ with respect to the usual topology of @xmath4  ( * ? ? ?",
    "* lemma  4.1.6 ) .    to deal with functions of two arguments , we define , for representations @xmath50 and @xmath54 of sets @xmath8 and @xmath9 , a representation @xmath69 $ ] of @xmath15 by @xmath70 ( a _ 0 b _ 0 a _ 1 b _ 1 \\ldots ) =   ( \\gamma ( a _ 0 a _ 1 \\ldots ) , \\delta ( b _ 0 b _ 1 \\ldots ) ) $ ] .",
    "[ example : addition ] addition @xmath71 is @xmath72 , { \\rho _ { \\mathbb r}})$]-computable . for suppose that we are given names @xmath73 and @xmath74 of real numbers @xmath75 and @xmath76 .",
    "an approximation of @xmath77 with precision @xmath78 , for each @xmath79 , is given by @xmath80 .",
    "[ example : multiplication ] multiplication @xmath81 is @xmath72 , { \\rho _ { \\mathbb r}})$]-computable",
    ". given names @xmath73 and @xmath74 of real numbers @xmath75 and @xmath76 , let @xmath82 .",
    "since @xmath83 and @xmath84 are near @xmath75 and @xmath76 , and it takes more than @xmath85 digits to encode a number with absolute value @xmath86 , we have @xmath87 , @xmath88 .",
    "hence , @xmath89 is approximated with precision @xmath78 by @xmath90 .",
    "a good thing about the tte formulation is that , by using suitable representations , we can discuss computation on many other sets .",
    "there are often standard ways to obtain representations of higher - type objects such as sets and functions .",
    "for example , since we have agreed on the representations  @xmath61 of @xmath4 , we can introduce a canonical representation of the set @xmath91 $ ] of continuous real functions , and there are reasons to believe that this is the `` right '' representation  ( * ? ? ?",
    "* chapter  3 ) .",
    "now we start putting time bounds .",
    "this means requiring that the @xmath45th prefix of the output be delivered within time bounded polynomially in @xmath45 ( and independently of @xmath53 ) :    [ definition : polynomial time stream machine ] a machine  @xmath47 runs in _ polynomial time _ if there is a polynomial  @xmath92 such that for all @xmath51 and @xmath31 , the machine @xmath47 on input @xmath53 finishes writing the first @xmath45 symbols of the output within @xmath93 steps .",
    "define _ polynomial space _",
    "analogously by counting the number of visited cells on all ( input , work and output ) tapes .",
    "can we use this notion to define polynomial - time computability of , say , a real function ?",
    "a little thought shows that the simple combination of definition  [ definition : polynomial time stream machine ] and the representation  @xmath61 is useless  ( * ? ? ?",
    "* examples 7.2.1 , 7.2.3 ) . on the one hand , the machine  @xmath47 could `` cheat '' by writing redundant @xmath61-names : by writing @xmath94 instead of @xmath95 it gets more time to compute the next approximation . on the other hand , the machine may suffer by receiving redundant names as input , such as the one in which the first approximation is too long to even read in time .",
    "this motivates the use of _ signed digit representation _ @xmath96 of @xmath4 ( * ? ? ?",
    "* definition 7.2.4 ) defined as follows , forbidding redundancy carefully : @xmath97 consists of sequences @xmath51 of form @xmath98 for some @xmath85 , where each @xmath99 is either @xmath100 , @xmath101 or @xmath102 , such that @xmath103 or @xmath104 ; if this is the case , set @xmath105 .",
    "thus we read the digit sequence as a binary expansion of a real number ( with decimal point @xmath106 ) with digits @xmath100 , @xmath101 and @xmath102 ; we forbid certain patterns in the first two digits of the integer part in order to exclude redundancy .",
    "( see ( * ? ? ?",
    "* example  2.1.4.7 ) for the reason why the usual binary expansion without the `` @xmath102 '' symbol does not work . )",
    "let @xmath107}$ ] denote the restriction of @xmath96 to ( infinite sequences representing ) real numbers in @xmath108 $ ] . by definition  [ definition : polynomial time stream machine ]",
    ", we know what it means for a real function @xmath3 \\to { \\mathbb r}$ ] to be _ polynomial - time @xmath109 } , { \\rho _ { \\mathrm{sd}}})$]-computable_. this notion turns out to be robust and equivalent to the widely accepted polynomial - time computability of ko and friedman  @xcite , so we will drop the prefix `` @xmath109 } , { \\rho _ { \\mathrm{sd}}})$ ] '' from now on .",
    "the same goes for _ polynomial - space _ computability , and for functions on compact intervals or rectangles instead of @xmath108 $ ] ( use the pairing function as in examples [ example : addition ] and [ example : multiplication ] ) .",
    "it is routine to verify that , for example , addition and multiplication @xmath110 , @xmath111 \\times [ 0 , 1 ] { \\mathbin{\\to}}{\\mathbb r}$ ] are polynomial - time computable . for more interesting results ,",
    "see ko s book  @xcite , survey  @xcite or weihrauch s book  ( * ? ? ?",
    "* section  7.3 ) .",
    "unfortunately , this approach does not extend much further .",
    "for example , a naive extension to real functions on @xmath4 ( instead of @xmath108 $ ] ) does not work : polynomial - time @xmath112-computability tends to fail for trivial reasons .",
    "addition on @xmath4 ( example  [ example : addition ] ) is not polynomial - time @xmath113 , { \\rho _ { \\mathrm{sd}}})$]-computable . for suppose that a machine @xmath113 , { \\rho _ { \\mathrm{sd}}})$]-computed it within a polynomial time bound  @xmath92 . in particular",
    ", the machine has to write the first symbol of the output in @xmath114 steps or fewer .",
    "note that this first symbol must be @xmath101 if the sum is greater than @xmath101 , and @xmath102 if the sum is less than @xmath102 .",
    "in particular , it must be @xmath101 if the two summands are @xmath115 and @xmath116 , and @xmath102 if they are @xmath117 and @xmath118 .",
    "however , the machine can not tell between these two cases , because it can read at most @xmath76 symbols of the input in time .    the trouble seems to be that the time bound is independent of the input .",
    "compare this with the addition of integers ( written in binary ) by the usual turing machine .",
    "it is in polynomial time , because a large summand would make the `` input size '' big and thereby give the machine more time .",
    "for the same thing to happen for addition of the real numbers , we would need to talk about the `` size '' of the input and a time bound `` polynomial in '' it , but we do not have the notion of size for infinite sequences .",
    "we could simply require , as hoover  @xcite and takeuti  @xcite did ( see section  [ subsection : applications , real numbers ] ) , that the time to output the @xmath119th bit below the decimal point may depend polynomially in both @xmath119 and the logarithm of the absolute value of the input real number .",
    "this would have the same effect as our proposed extension of the computation model , in this specific case of @xmath4but our point is that we want a coherent theory of computation that is applicable to other spaces by just switching representations .",
    "there are many objects other than @xmath4 that we want to give representations to . the objects for which the infinite string model gives reasonable notions of complexity are limited , compared to what we can do at the level of computability ( see the discussions in ko  @xcite , weihrauch  @xcite , and brattka et al .",
    "because of this limitation , the complexity of operators has been mostly formulated in non - uniform ways . we quote examples of such theorems below .",
    "we will reformulate them uniformly later ( theorems [ theorem : convex hull uniform ] and [ theorem : ivp uniform ] ) .",
    "the first pair of results are the positive and negative statements about the operator of taking the convex hull @xmath120 of a closed set @xmath121 ^2 $ ] .",
    "polynomial - time computability of a set @xmath121 ^2 $ ] is defined as follows ( see e.g.  braverman  @xcite for a discussion ) , using the usual complexity class  @xmath0 .",
    "we say that @xmath122 is _ polynomial - time computable _ if there is a function @xmath123 in @xmath0 such that , for any @xmath31 and @xmath124 , @xmath125 ,    * @xmath126 if @xmath127 , and * @xmath128 if @xmath129 ,    where @xmath130 denotes the euclidean distance of point @xmath131 from @xmath122 ( figure  [ figure : set computability ] )",
    ".     means that , given @xmath132 , one can tell whether the distance of the point @xmath133 from @xmath122 is less than @xmath134 or more than @xmath135 . ]",
    "likewise , @xmath122 is said to be _",
    "nondeterministic polynomial - time computable _ if there is such a @xmath53 in @xmath1 ( recall the asymmetry between the outcomes @xmath101 and @xmath100 in the definition of @xmath1 : we require an easily verifiable certificate for @xmath133 being close to @xmath122 ) .",
    "ko and yu  @xcite and zhao and mller  @xcite essentially provedko and yu state both the positive and the negative results ( theorems [ theorem : convex hull upper non - uniform ] and [ theorem : convex hull lower non - uniform ] ) for polynomial - time _ strong recognizability _ instead of our computability ( * ? ? ?",
    "* corollaries 4.3 and 4.6 , respectively ) , but their proof almost works for computability as well . for a discussion comparing the two notions ,",
    "see braverman  @xcite , where ko s strong recognizability is called _",
    "weak computability_. zhao and mller use the polynomial - time computability equivalent to ours and prove theorem  [ theorem : convex hull upper non - uniform ] ( * ? ? ?",
    "* theorem  4.3 ) . for the positive part ,",
    "in fact they prove a uniform result essentially equivalent to the positive part of our theorem  [ theorem : convex hull uniform ] ( * ? ? ?",
    "* theorem  4.1 ) .",
    "although they state the upper bound of `` exponential time '' , their proof contains the argument that is necessary to derive the non - uniform @xmath1 upper bound ( our theorem  [ theorem : convex hull lower non - uniform ] ) ( * ? ? ?",
    "* lemma  4.2 ) . ] the following non - uniform theorems about the complexity of taking the convex hull of a set .",
    "[ theorem : convex hull upper non - uniform ] if a closed set @xmath121 ^2 $ ] is polynomial - time computable , then its convex hull @xmath120 is nondeterministic polynomial - time computable .    [",
    "theorem : convex hull lower non - uniform ] unless @xmath136 , there exists a closed set  @xmath121 ^2 $ ] which is polynomial - time computable , but whose convex hull @xmath120 is not .    for @xmath137 , let @xmath138 $ ] be the set of continuous functions from @xmath46 to @xmath4 .",
    "the second pair of results concerns the initial value problem ( ivp ) of the differential equation @xmath139 where @xmath140 \\times { \\mathbb r}]$ ] is given and @xmath141 $ ] is the unknown .",
    "it is well known ( see ( * ? ? ?",
    "* beginning of section  3 ) ) that the solution  @xmath142 exists and is unique if @xmath143 is _ lipschitz continuous _",
    "( in the second argument ) , that is , @xmath144 for some constant  @xmath145 independent of @xmath76 , @xmath146 , @xmath147 . the following results state how complex @xmath142 can be",
    ", assuming that @xmath143 is polynomial - time computable . since polynomial - time computability",
    "is defined only for functions with compact domain , we restrict @xmath143 to the rectangle @xmath108 \\times [ -1 , 1]$ ] . if there is a solution @xmath141 $ ] whose values stay in @xmath148 $ ] ( in which case @xmath142 is unique , as mentioned above ) , we write @xmath149 for this @xmath142 . thus @xmath150 is a partial function from @xmath151 \\times [ -1 , 1]]$ ] to @xmath152 $ ] , where the former set is the subset of @xmath153 \\times [ -1 , 1]]$ ] consisting of lipschitz continuous functions .",
    "[ theorem : ivp upper non - uniform ] if @xmath154 is polynomial - time computable , then @xmath149 is polynomial - space computable .    [",
    "theorem : ivp lower non - uniform ] there is a polynomial - time computable function @xmath155 such that @xmath149 is polynomial - space complete ( in the sense defined in @xcite or @xcite ) .",
    "we can derive from theorem  [ theorem : ivp lower non - uniform ] a statement of the form similar to theorem  [ theorem : convex hull lower non - uniform ] :    [ corollary : ivp lower non - uniform , weak ] unless @xmath156 , there is a real function  @xmath154 which is polynomial - time computable but @xmath149 is not .",
    "we present the main definitions for our framework here .",
    "as we have noticed , the limitations of the approach with the infinite sequences in @xmath40 have to do with the fact that they do not carry enough information , and in particular their size is not defined .",
    "we replace @xmath40 with @xmath157 , a class of string functions which we will use as names of real numbers , sets and functions . ] .    in section  [",
    "subsection : regular functions ] , we introduce the class @xmath157 of regular functions and define what it means for a machine to compute a multi - function from @xmath157 to @xmath157 .",
    "section  [ subsection : second - order polynomial ] defines what it means for such a machine to run in polynomial time or space , thus introducing several complexity classes of multi - functions on @xmath157 . in section  [",
    "subsection : reduction and completeness ] , we define reductions between such multi - functions , and discuss the resulting notions of hardness .",
    "section  [ subsection : representations ] extends this theory of computation on @xmath157 to that on other sets @xmath8 by using representations of @xmath8 by @xmath157 .",
    "we say that a ( total ) function @xmath158 is _ _ regular _ _ if it preserves relative lengths of strings in the sense that @xmath159 whenever @xmath160 .",
    "we write @xmath157 for the set of all regular functions . for the rest of this paper",
    ", we will be discussing the complexity of multi - functions from @xmath157 to @xmath157 . the motivation for considering regular functions ( rather than all functions from @xmath28 to @xmath28 )",
    "will be explained in section  [ subsection : second - order polynomial ] where we define their lengths .",
    "now we begin replacing the role of @xmath40 ( section  [ subsection : tte computability ] ) by @xmath157 .",
    "this is a generalization , because an infinite string @xmath42 can be identified with a regular function  @xmath161 that    1 .",
    "[ enumi : predicate ] takes values of length @xmath101 , and 2 .   [ enumi : unary ] depends only on the length of the argument ,    by setting @xmath162 . in the following , observe that definitions [ definition : oracle machine].[enumi : oracle machine , deterministic ] and [ definition : bounded by second - order polynomial ] extend their counterparts in this sense .",
    "it sometimes makes sense to stop the generalization halfway , removing [ enumi : unary ] only and keeping [ enumi : predicate ] .",
    "let @xmath163 be the set of @xmath164-valued regular functions .    instead of the machine that worked on infinite strings",
    ", we use an oracle turing machine ( henceforth just `` machine '' ) to convert regular functions to regular functions ( figure  [ figure : oracle machine ] ) :     from @xmath157 to @xmath157 . ]",
    "[ definition : oracle machine ]    1 .",
    "[ enumi : oracle machine , deterministic ] a deterministic machine  @xmath47 _ computes _ a multi - function @xmath46 from @xmath157 to @xmath157 if for any @xmath48 , there is @xmath165 $ ] such that @xmath47 on oracle  @xmath53 and any string  @xmath124 outputs @xmath166 .",
    "a nondeterministic machine  @xmath47 _ computes _ a multi - function @xmath46 from @xmath157 to @xmath167 if for any @xmath48 , there is @xmath165 $ ] such that @xmath168 if and only if @xmath47 on oracle  @xmath53 and string  @xmath124 has at least one accepting computation path .    for the precise conventions for issuing and answering queries , follow any of .",
    "recall that regular functions are those that respect lengths in the sense explained at the beginning of section  [ subsection : regular functions ] .",
    "in particular , they map strings of equal length to strings of equal length",
    ". therefore it makes sense to define the _ size _ @xmath169 of a regular function  @xmath53 by @xmath170 .",
    "it is a non - decreasing function from @xmath171 to @xmath171 .",
    "now we want to define what it means for a machine to run in polynomial time . since @xmath172 is a function , we begin by defining polynomials `` in '' a function , following the idea of kapron and cook  @xcite .",
    "_ second - order polynomials _ ( in type-@xmath101 variable  @xmath173 and type-@xmath100 variable  @xmath174 ) are defined inductively as follows : a positive integer is a second - order polynomial ; the variable  @xmath174 is also a second - order polynomial ; if @xmath175 and @xmath176 are second - order polynomials , then so are @xmath177 , @xmath178 and @xmath179 .",
    "an example is @xmath180 a second - order polynomial  @xmath175 specifies a function , which we also denote by @xmath175 , that takes a function @xmath181 to another function @xmath182 in the obvious way . for example , if @xmath175 is the above second - order polynomial   and @xmath183 , then @xmath184 is given by @xmath185 as in this example , @xmath184 is a ( usual first - order ) polynomial if @xmath145 is .",
    "[ definition : bounded by second - order polynomial ] a ( deterministic or nondeterministic ) machine  @xmath47 runs in ( _ second - order _ ) _ polynomial time _ if there is a second - order polynomial  @xmath175 such that , given any @xmath161 as oracle and any @xmath186 as input , @xmath47 halts within @xmath187 steps ( regardless of the nondeterministic choices ) .",
    "define _ polynomial space _",
    "analogously by counting the number of visited cells on all ( input , work , output and query ) tapes .",
    "this extends definition  [ definition : polynomial time stream machine ] , because when @xmath53 satisfies [ enumi : predicate ] ( of section  [ subsection : regular functions ] ) , the size @xmath172 is constant , and the bound @xmath187 reduces to a ( first - order ) polynomial in @xmath188 .",
    "[ definition : functional classes ]    1 .",
    "[ enumi : functional classes functional ] we write @xmath26 ( resp .",
    "@xmath27 ) for the class of multi - functions from @xmath157 to @xmath157 computed by a deterministic machine that runs in second - order polynomial time ( resp .  space ) .",
    "we write @xmath189 ( resp .",
    "@xmath190 ) for the class of multi - functions from @xmath157 to @xmath167 computed by a deterministic ( resp .",
    "nondeterministic ) machine  @xmath47 that runs in polynomial time .",
    "note that unlike the type - one counterparts , it is easy to separate @xmath27 from @xmath26 and @xmath190 from @xmath189 , because the former classes contain functions that depend on exponentially many values of the given oracle .",
    "it is also easy to see that these classes respect the corresponding type - one classes :    [ lemma : maps computable ]    1 .",
    "[ enumi : maps computable , functional ] functions in @xmath26 ( resp .",
    "@xmath27 ) map regular functions in @xmath13 into @xmath13 ( resp .",
    "@xmath14 into @xmath14 ) .",
    "[ enumi : maps computable , predicate ] functions in @xmath189 ( resp .",
    "@xmath190 ) map regular functions in @xmath13 into @xmath0 ( resp .",
    "@xmath1 ) .",
    "the idea of using second - order polynomials as a bound on time and space comes from kapron and cook s characterization  @xcite of mehlhorn s class  @xcite of _ _ polynomial - time computable operators__. this is a class of ( total ) functionals @xmath191 , but they can be regarded as @xmath192 by writing @xmath193 for @xmath194 .",
    "kapron and cook define the size of @xmath158 by @xmath195 note that our definition of size for regular @xmath53 is a special case of this .",
    "they then defined the class of polynomial - time functionals in the same way as definition  [ definition : functional classes].[enumi : functional classes functional ] .",
    "( we added @xmath27 by analogy . )",
    "we have restricted attention to regular functions .",
    "this is because , in order to obtain reasonable complexity notions , it seems necessary for a machine to be able to tell when the time bound is reached .",
    "note that for usual ( type - one ) computation , it was easy to find @xmath196 given @xmath21 , and thus to clock the machine with the time bound @xmath197 for a fixed polynomial  @xmath92 .",
    "in contrast , finding the value for a given @xmath53 in general requires exponentially many queries to @xmath53 . for regular @xmath53",
    ", we can easily find @xmath198 for each @xmath45 , and thus the second - order polynomial @xmath187 is a bound `` time - constructible '' from @xmath53 and @xmath124 .",
    "imposing regularity is hardly a restriction for our purpose , because our intention is to use these functions as names of real numbers , sets and functions , and we can simply require that valid names are those that have been `` padded '' to be regular .",
    "more precisely , there is an efficient machine that takes as oracles a possibly irregular function  @xmath199 and a regular function  @xmath200 dominating its length ( i.e. , @xmath201 for any string  @xmath124 ) , and delivers a regular function @xmath53 such that @xmath202 and @xmath203 .",
    "thus we use @xmath53 , instead of @xmath199 , as the name . in many situations",
    "we can find such a dominating function  @xmath200 .    for later use",
    "we define the pairing function for regular functions as follows ( we have been and will be using the tupling functions for strings , which we do not write explicitly ) : for @xmath53 , @xmath204 , define @xmath205 by setting @xmath206 and @xmath207 ( we pad the strings to make @xmath208 regular ) .",
    "let @xmath209 , etc .",
    "here we define reductions between multi - functions on @xmath157 and discuss hardness with respect to these reductions .",
    "recall that the usual many - one reduction between multi - functions @xmath46 , @xmath210 from @xmath28 to @xmath28 is defined as follows : we say that @xmath46 many - one reduces to @xmath210 ( written @xmath211 ) if there are ( total ) functions @xmath212 , @xmath213 such that for any @xmath214 , we have @xmath215 $ ] whenever @xmath216$]that is , we have a function @xmath76 that converts an input for @xmath46 to an input for @xmath210 , and another function @xmath212 that converts an output of @xmath210 to an output of @xmath46 ( figure  [ figure : type - one reductions ] , left ) .",
    "the many - one reduction  @xmath217 between predicates is defined as the special case where we do not convert the output , i.e. , @xmath218 ( figure  [ figure : type - one reductions ] , middle ) .",
    "since multi - functions over @xmath157 also get a function as input , the analogous definition of reductions involves one more converter  @xmath75 :    [ definition : many - one reduction ]    1 .",
    "let @xmath46 and @xmath210 be multi - functions from @xmath157 to @xmath157 .",
    "we say that @xmath46 _ many - one reduces _",
    "to @xmath210 ( written @xmath219 ) if there are functions @xmath212 ,",
    "@xmath75 , @xmath220 such that for any @xmath48 , we have @xmath221 and , for any @xmath222 $ ] , the function that maps each string  @xmath21 to @xmath223 is in @xmath49 $ ] ( figure  [ figure : intermediate many - one reduction ] , +   + + top left ) .",
    "[ enumi : many - one reduction , predicate ] let @xmath46 and @xmath210 be multi - functions from @xmath157 to @xmath167 .",
    "we write @xmath224 if there are functions @xmath75 ,",
    "@xmath220 such that for any @xmath48 , we have @xmath221 and , for any @xmath222 $ ] , the function @xmath225 is in @xmath49 $ ] ( figure  [ figure : intermediate many - one reduction ] , top right ) .",
    "the design of these reductions is somewhat arbitrary .",
    "we chose them simply because they are strong enough for our hardness results ( theorems [ theorem : convex hull uniform ] and [ theorem : ivp uniform ] ) .",
    "what beame et al .",
    "@xcite call the `` many - one reduction '' between type - two functions is slightly stronger than ours in that it passes the string input @xmath124 not only to @xmath76 and @xmath212 but also to @xmath75 ( figure  [ figure : intermediate many - one reduction ] , bottom left ) .",
    "see the comment after lemma  [ lemma : maps complete ] for the reason we did not choose this definition .",
    "another reasonable notion of reduction is the one on the bottom right of figure  [ figure : intermediate many - one reduction ] :    1 .",
    "[ enumi : weihrauch reduction ] let @xmath46 and @xmath210 be multi - functions from @xmath157 to @xmath157 ( or to @xmath167 ) .",
    "we say that @xmath46 _ weihrauch reduces _ to @xmath210 ( written @xmath226 ) if there are functions @xmath212 ,",
    "@xmath227 such that for any @xmath48 , we have @xmath228 $ ] whenever @xmath229 $ ] .",
    "this is a polynomial - time version of the continuous reduction used by weihrauch  @xcite to compare the degrees of discontinuity of translators between real number representations ( see also brattka and gherardi  @xcite ) .",
    "note that , while this reduction is somewhat analogous to the type - one turing reduction ( figure  [ figure : type - one reductions ] , right ) , it also formally resembles the definition of @xmath230 .",
    "the many - one reduction @xmath231 is the special case of this reduction @xmath232 where @xmath212 can query @xmath200 only once .",
    "beame et al .",
    "@xcite define an even stronger `` turing reduction '' .    in this paper",
    ", we will formulate our hardness results mainly using @xmath231 and @xmath233 because they give stronger results than @xmath232 would .",
    "the advantage and disadvantage of this choice will be discussed in section  [ subsection : applications , real functions ] after theorem  [ theorem : ivp uniform ] and corollary  [ corollary : ivp uniform , strong reduction ] .      now that we have the classes ( definition  [ definition : functional classes ] ) and reductions ( definition [ definition : many - one reduction ] ) , we can talk about hardness .",
    "a multi - function  @xmath210 from @xmath157 to @xmath157 is _ @xmath27-@xmath231-hard _ if @xmath219 for every @xmath234 .",
    "it is said to be _",
    "@xmath27-@xmath231-complete _ if moreover it is in @xmath27 .",
    "we define @xmath190-@xmath233-hardness of multi - functions from @xmath157 to @xmath167 similarly ( note that @xmath190 is not closed under @xmath231 ) .    the following lemma states roughly that a @xmath235-@xmath236-hard multi - function  @xmath210 maps some function @xmath237 to a @xmath238-@xmath239-hard function , where @xmath238 and @xmath239 are the type - one versions of the class @xmath235 and the reduction @xmath236 .",
    "but since @xmath240 $ ] may consist of more than one function , we need to assert hardness for the multi - function @xmath241)$ ] defined as follows : for a nonempty set @xmath5 of ( single - valued total ) functions from @xmath8 to @xmath9 , we write @xmath242 to mean the multi - function from @xmath8 to @xmath9 defined by @xmath243 = \\{\\ , f ( x ) : f \\in f \\,\\}$ ] . saying that the multi - function @xmath242 is hard is a stronger claim than saying that each of the functions in @xmath5 is hard , because the former requires that one reduction work for all functions in @xmath5 .",
    "we need to state the following lemma in this stronger form in order to derive lemma  [ lemma : maps complete represented ] later .",
    "[ lemma : maps complete ]    1 .",
    "[ enumi : maps complete , functional ] let @xmath210 be an @xmath27-@xmath231-complete multi - function from @xmath157 to @xmath157 .",
    "then there is @xmath244 such that @xmath241)$ ] is @xmath14-@xmath230-complete .",
    "[ enumi : maps complete , predicate ] let @xmath210 be an @xmath190-@xmath233-complete multi - function from @xmath157 to @xmath167 .",
    "then there is @xmath244 such that @xmath241)$ ] is @xmath1-@xmath245-complete .",
    "we only prove the first claim ( the second claim is similar ) .",
    "there is a function @xmath234 that maps some function @xmath246 to an @xmath14-@xmath230-complete function .",
    "since @xmath219 , there are functions @xmath212 , @xmath75 , @xmath220 as in definition  [ definition : many - one reduction ] . by lemma  [ lemma : maps computable ]",
    ", we have @xmath247 , @xmath248 , @xmath249 .",
    "let @xmath250 .",
    "since @xmath247 and @xmath251 give a reduction @xmath252)$ ] , and @xmath253 is @xmath14-@xmath230-complete , @xmath241)$ ] is also @xmath14-@xmath230-complete .",
    "we note that lemma  [ lemma : maps complete ] would not have been true , if in the definition of reductions we had fed @xmath75 with the string input as beame et al .",
    "@xcite do ( see the comment after definition  [ definition : many - one reduction ] ) . for",
    "let @xmath254 be the reduction which is like @xmath236 but feeds @xmath75 with the string input , and let @xmath210 be a @xmath235-@xmath236-complete multi - function .",
    "then the multi - function  @xmath255 defined by    @xmath256   &    =    \\{\\ , { \\mathrm{const}}_{\\psi ( u ) } : \\psi \\in b [ \\varphi ] \\,\\ } , \\end{aligned}\\ ] ]    where @xmath257 denotes the constant function with value  @xmath124 , is @xmath235-@xmath254-complete by the modified reduction where `` @xmath75 does the job that @xmath76 used to do '' .",
    "yet each one of the values of @xmath255 is a constant function .",
    "let @xmath258 be the subclass of @xmath27 consisting of multi - functions from @xmath157 to @xmath167 .",
    "here we list some @xmath190- and @xmath258-@xmath233-complete problems .",
    "their completeness can be proved by relativizing the well - known @xmath1- and @xmath2-@xmath245-completeness in a straightforward way .",
    "we begin with @xmath190-@xmath233-complete problems . for a non - decreasing function @xmath259 ,",
    "define @xmath260 by @xmath261 .",
    "a _ boolean formula involving predicate symbol @xmath262 _ is an expression built up inductively from boolean variables @xmath263 , @xmath264 ,  using the connectives @xmath265 , @xmath266 , @xmath267 and @xmath268 ( the arity  @xmath45 can vary ) for any previously obtained formulas @xmath269 , @xmath270 ,  .",
    "[ lemma : nptwo - copmlete ] the following partial functions @xmath271 , @xmath272 and @xmath273 from @xmath157 to @xmath167 are @xmath190-@xmath233-complete :    * @xmath274 consists of all triples @xmath275 such that @xmath47 is a ( program of a ) nondeterministic ( oracle turing ) machine , @xmath259 is non - decreasing , @xmath161 , and for any string  @xmath124 , all computation paths of @xmath276 halt in time @xmath277 ( this @xmath47 is a string , so we encode it as the constant function taking this string as value ) . for any such triple and a string @xmath124 , we have @xmath278 if and only if @xmath276 has an accepting path . *",
    "@xmath279 . for any @xmath280 , @xmath186 and @xmath31",
    ", we have @xmath281 if and only if there is a string @xmath282 of length  @xmath45 with @xmath283 .",
    "* @xmath284 . for any @xmath280 and any string  @xmath124",
    ", we have @xmath285 if and only if @xmath124 is a boolean formula involving a predicate symbol  @xmath262 and it is made satisfiable when @xmath262 is interpreted as @xmath92 .    if @xmath53 is a boolean formula involving predicate symbol @xmath262 , then an expression of the form @xmath286 where each @xmath287 is either @xmath288 or @xmath289 , is called a _ quantified boolean formula involving predicate symbol  @xmath262_. its truth value is determined in the obvious way relative to the predicate to be substituted into @xmath262 .",
    "[ lemma : pspacetwo - complete ] the following partial functions @xmath290 , @xmath291 , @xmath292 from @xmath157 to @xmath167 are @xmath258-@xmath233-complete :    * @xmath293 consists of all triples @xmath275 such that @xmath47 is a ( program of a ) deterministic ( oracle turing ) machine , @xmath259 is non - decreasing , @xmath161 , and for any string  @xmath124 , the computation @xmath276 uses no more than @xmath277 tape cells and either accepts or rejects ( this @xmath47 is a string , so we encode it as the constant function taking this string as value ) . for any such triple and a string @xmath124",
    ", we have @xmath294 if and only if @xmath276 accepts .",
    "* @xmath295 consists of all @xmath296 that are length - preserving ( i.e. , @xmath297 ) . for any such @xmath7 and a string @xmath124",
    ", we have @xmath298 if and only if @xmath299 , where we write @xmath300 for @xmath7 iterated @xmath85 times .",
    "* @xmath301 . for any @xmath280 and any string  @xmath124",
    ", we have @xmath302 if and only if @xmath124 is a quantified boolean formula involving a predicate symbol and it is made true by @xmath92 .",
    "as we replaced @xmath40 by @xmath157 , we extend the notion of representations accordingly : a _ representation _ @xmath50 of a set  @xmath8 is a surjective partial function from @xmath157 to @xmath8 .",
    "computation relative to representations is again formulated by definition  [ definition : realization ] .",
    "this defines what it means for a multi - function @xmath5 from @xmath8 to @xmath9 , where @xmath8 and @xmath9 are sets equipped with representations @xmath50 and @xmath54 , respectively , to be in @xmath55-@xmath235 , where @xmath235 is one of the classes we have defined , such as @xmath26 and @xmath27 .",
    "this @xmath235 can be @xmath189 or @xmath190 if @xmath303 .",
    "also , we say that @xmath5 is @xmath55-@xmath235-@xmath304-_hard / complete _ ( for @xmath305 , @xmath190 ) if @xmath306 ( see definition  [ definition : realization ] ) is @xmath235-@xmath304-hard / complete .      here",
    "we discuss how the class @xmath55-@xmath235 and @xmath55-@xmath235-@xmath304-hardness depend on the choice of representations @xmath50 and @xmath54 . for two representations @xmath54 and @xmath307 of the same set , we write @xmath308 if there is a function @xmath309 that _ translates _",
    "@xmath54 to @xmath307 in the sense that for all @xmath310 , we have @xmath311 and @xmath312 . thus @xmath54 is `` more informative '' or `` less generic '' than @xmath307 .",
    "it is easy to see the following .",
    "[ lemma : translation and computability ] let @xmath235 be either @xmath26 or @xmath27 .",
    "let @xmath50 and @xmath313 be representations of a set @xmath46 , and @xmath54 and @xmath307 be representations of a set @xmath210 . if @xmath314 and @xmath308 , then @xmath315 .",
    "we write @xmath316 if @xmath317 and @xmath314 .",
    "lemma  [ lemma : translation and computability ] implies that the class @xmath55-@xmath26 is invariant under replacing @xmath50 or @xmath54 with @xmath318-equivalent representations .    by reversing the directions of the translations between @xmath50 , @xmath313 and @xmath54 , @xmath307 in the assumption",
    ", we get the implication between hardness results under different representations :    [ lemma : translation and completeness ] let @xmath50 and @xmath313 be representations of a set @xmath46 , and @xmath54 and @xmath307 be representations of a set @xmath210 .",
    "if @xmath317 and @xmath319 , then a @xmath55-@xmath27-@xmath232-hard multi - function is @xmath320-@xmath27-@xmath232-hard .    here , @xmath232 is the stronger reduction in definition  [ definition : many - one reduction].[enumi : weihrauch reduction ] ( note that @xmath231 would not work ) .",
    "we say that an element @xmath16 is in _ @xmath50-@xmath238 _ ( where @xmath238 is a usual complexity class of string functions , such as @xmath13 and @xmath14 ) if it has a @xmath50-name in @xmath238 .",
    "( where @xmath304 is either @xmath230 , @xmath245 or @xmath321 ) if @xmath322)$ ] ( where @xmath323 is the inverse image , and @xmath324 is defined before lemma  [ lemma : maps complete ] ) is @xmath238-@xmath304-complete .",
    "lemmas [ lemma : maps computable ] and [ lemma : maps complete ] yield the following .    [ lemma : maps computable represented ] let @xmath50 and @xmath54 be representations of sets @xmath8 and @xmath9 , respectively .    1 .",
    "[ enumi : maps computable represented , functional ] a partial function @xmath325 maps elements of @xmath326 into @xmath327 . similarly for @xmath27 and @xmath14 replacing @xmath26 and @xmath13 .",
    "[ enumi : maps computable represented , predicate ] suppose that @xmath303 .",
    "then a partial function @xmath328 maps elements of @xmath326 into @xmath329 .",
    "similarly for @xmath190 and @xmath1 replacing @xmath189 and @xmath0 .",
    "[ lemma : maps complete represented ] let @xmath50 and @xmath54 be representations of sets @xmath8 and @xmath9 , respectively .    1 .",
    "[ enumi : maps complete represented , functional ] a @xmath55-@xmath27-@xmath231-complete partial function  @xmath5 maps some element of @xmath326 to a @xmath54-@xmath14-@xmath230-complete element of @xmath9 .",
    "[ enumi : maps complete represented , predicate ] suppose that @xmath303 .",
    "then a @xmath55-@xmath190-@xmath233-complete partial function  @xmath5 maps some element of @xmath326 to a @xmath54-@xmath1-@xmath245-complete element of @xmath9 .    these lemmas will be used in sections [ subsection : applications , real sets ] and [ subsection : applications , real functions ] to derive the non - uniform theorems from their uniform counterparts .",
    "as noted in section  [ subsection : regular functions ] , our formulation can be viewed as a generalization of tte achieved by removing the restrictions [ enumi : predicate ] and [ enumi : unary ] on the oracle used as names . in the following three subsections",
    ", we will apply our theory to real numbers , real sets and real functions through representations @xmath61 , @xmath330 , and @xmath331 , which exploit the removal of [ enumi : predicate ] , [ enumi : unary ] , and both , respectively .    for representations",
    "@xmath332 and @xmath333 of @xmath334 and @xmath335 , respectively , we can define the representation @xmath336 $ ] of the cartesian product @xmath337 by @xmath338 ( \\langle \\varphi _ 0 , \\varphi _ 1 \\rangle )",
    "=     ( \\gamma _ 0 ( \\varphi _ 0 ) , \\gamma _ 1 ( \\varphi _ 1 ) ) $ ] .",
    "recall the representation  @xmath61 of @xmath4 by infinite sequences ( section  [ subsection : tte computability ] ) where a @xmath61-name of a real number  @xmath21 was a list @xmath339 of rational numbers  @xmath340 with @xmath67 .",
    "we adopt this in a straightforward way to define a representation  @xmath61 that encodes real numbers by regular functions ( we keep writing @xmath61 by abuse of notation ) : we say that @xmath161 is a @xmath61-name of @xmath62 if @xmath341 and @xmath342 for each @xmath68 .",
    "thus we encode the same list in the values @xmath343 .    we write @xmath344}$ ] for the restriction of @xmath61 to ( names of ) real numbers in the interval @xmath108 $ ] .",
    "it is easy to see that the class @xmath345 } , { \\rho _ { \\mathbb r}})$]-@xmath26 coincides with the polynomial - time computability that was defined in section  [ subsubsection : tte complexity compact ] using the signed digit representation  @xmath96 .",
    "recall that in the definition of @xmath96 , we needed to forbid redundancy carefully .",
    "now we do not have to worry too much about defining concise representations .",
    "moreover , we obtain a reasonable notion of polynomial - time computability of real functions  @xmath7 on @xmath4 ( not just @xmath108 $ ] ) without additional work : @xmath346-@xmath26 turns out to be a reasonable class that coincides with the one by hoover  @xcite , who required that the @xmath78-approximation of the value  @xmath347 should be delivered within time polynomial in @xmath79 and @xmath348 ( this equivalence has been essentially observed by lambov  @xcite ) .",
    "another equivalent definition appears in takeuti  @xcite , inspired by pour - el s approach to computable analysis .",
    "it is easy to see that binary addition and multiplication on @xmath4 are in @xmath72 , \\allowbreak { \\rho _ { \\mathbb r}})$]-@xmath26 by the algorithms suggested by examples [ example : addition ] and [ example : multiplication ] .",
    "the exponential function @xmath349 restricted to @xmath108 $ ] is in @xmath345 } , { \\rho _ { \\mathbb r}})$]-@xmath26 , because @xmath350 can be written as the sum of a series which is known to converge fast on @xmath108 $ ] ( that is , given a desired precision , the machine can tell how many initial terms it needs to compute ) .",
    "however , @xmath351 on the whole real line @xmath4 is not in @xmath346-@xmath26 , because it grows too fast .",
    "[ example : sine ] the sine function @xmath352 is in @xmath346-@xmath26 . to see this , note that just like @xmath351 in the previous example , @xmath353 is polynomial - time computable if restricted to , say , @xmath354 $ ] .",
    "it is also possible , given @xmath355 and a desired precision , to find efficiently a number in @xmath354 $ ] which is close enough to @xmath76 modulo @xmath356 .",
    "we can compute @xmath357 by combining these algorithms .",
    "a function can belong to @xmath346-@xmath26 without even an explicit description known .",
    "the _ trisector curves _ ( figure  [ figure : trisector ] )        between the points @xmath358 and @xmath359 in the plane are the pair of sets @xmath360 , @xmath361 such that @xmath360 is the set of points equidistant from @xmath358 and @xmath362 , and @xmath362 is the set of points equidistant from @xmath359 and @xmath360 .",
    "asano , matouek and tokuyama  @xcite proved that such a pair @xmath363 exists and is unique ( see @xcite and @xcite for simpler and more general proofs ) .",
    "they also showed that @xmath360 ( as well as @xmath362 , which is its mirror image ) is a graph of a function @xmath364 which is , in our terminology , in @xmath346-@xmath26 .",
    "they conjecture that these curves are different from any curve that was previously known .",
    "let @xmath365 be the set of closed subsets of @xmath108 ^2 $ ] .",
    "define the representation  @xmath330 of @xmath365 as follows : let @xmath366 be a @xmath330-name of @xmath367 if it satisfies the two itemized conditions in section  [ subsubsection : non - uniform results ] .",
    "note that this representation is more succinct than the one that we would be able to define using infinite sequences  ( * ? ? ?",
    "* example  6.9 ) .    since @xmath368 , it makes sense to talk about @xmath330-@xmath1 and @xmath369-@xmath190 ( section [ subsubsection : uniform non - uniform ] ) .",
    "the following is immediate from the definition of polynomial - time computability in section  [ subsubsection : non - uniform results ] .",
    "[ lemma : set polytime iff polytime name ] a set in @xmath365 is ( nondeterministic ) polynomial - time computable if and only if it is in @xmath330-@xmath0 ( @xmath330-@xmath1 ) .",
    "the operator  @xmath370 taking convex hulls ( section [ subsubsection : non - uniform results ] ) is a function from @xmath365 to @xmath365 .",
    "we can state and prove the following uniform version of theorems [ theorem : convex hull upper non - uniform ] and [ theorem : convex hull lower non - uniform ] . as corollaries to this , we get theorem  [ theorem : convex hull upper non - uniform ] by lemmas [ lemma : maps computable represented].[enumi : maps computable represented , predicate ] and [ lemma : set polytime iff polytime name ] , and theorem  [ theorem : convex hull lower non - uniform ] by lemmas [ lemma : maps complete represented].[enumi : maps complete represented , predicate ] and [ lemma : set polytime iff polytime name ] .    [ theorem : convex hull uniform ] @xmath370 is @xmath369-@xmath190-@xmath233-complete .",
    "the main technical ideas are already in ko and yu s proof of the non - uniform versions ( theorems [ theorem : convex hull upper non - uniform ] and [ theorem : convex hull lower non - uniform ] ) , so we will only sketch the proof .    that @xmath370 belongs to @xmath369-@xmath190",
    "is no surprise : a point  @xmath92 belongs to @xmath120 if there are two points @xmath371 and @xmath372 in @xmath122 such that @xmath92 is on the line segment @xmath373 .",
    "all we have to do is to guess @xmath371 and @xmath372 nondeterministically , with appropriate consideration of precision .    for hardness ,",
    "we need to modify the proof slightly , because , as we noted earlier , ko and yu s original results were about a weaker notion of computability : our computability of sets demands more in the sense that on query @xmath132 , where @xmath124 , @xmath125 and @xmath31 , if @xmath133 is within distance @xmath134 from the set , then we must say @xmath101 ( see the definition before theorems [ theorem : convex hull upper non - uniform ] and [ theorem : convex hull lower non - uniform ] ) , whereas for weak computability both @xmath100 or @xmath101 are allowed in this case .",
    "we assume that the reader has ko and yu s proof  ( * ? ? ?",
    "* corollary 4.6 ) at hand .",
    "the proof of their lemma  4.4 begins by taking an arbitrary set @xmath374 and noting that there are @xmath375 and a polynomial  @xmath92 such that @xmath376 if and only if @xmath377 for some string  @xmath124 of length exactly @xmath378 .",
    "relativizing this , we take @xmath379 , and note that there are @xmath380 and a second - order polynomial  @xmath175 such that @xmath381 if and only if @xmath382 for some string  @xmath124 of length @xmath383 .",
    "we need to provide @xmath75 and @xmath76 of definition  [ definition : many - one reduction ] which reduce @xmath46 to @xmath384 .",
    "we define @xmath75 by describing the set @xmath385 for a given @xmath161 .",
    "the construction is similar to the original proof , replacing @xmath93 by @xmath386 and @xmath210 by @xmath387 .     to @xmath370 .",
    "we have @xmath388 if and only if there is @xmath124 such that the slot for @xmath389 has a bump . in ko and",
    "yu s construction of @xmath122 , the bumps can be high ( left ) , and there can be a query that requires the knowledge of @xmath390 for many @xmath124 .",
    "we make the bumps low ( right ) in order to make @xmath122 polynomial - time computable in our sense . ]",
    "the original proof constructs , for each string  @xmath391 , the widget in figure  [ figure : convex hull widget ] left ( or figure  2 of @xcite ) . in each of the left and right halves ,",
    "there are exponentially many slots , one for each @xmath124 , that have a bump if and only if @xmath389 is in @xmath210 ( or @xmath387 for us ) .",
    "the point of this construction is that , while the set  @xmath122 is easy to compute , @xmath120 is hard in the sense that we can tell if @xmath391 is in @xmath46 ( or @xmath253 ) by checking whether the middle point @xmath392 belongs to @xmath120 .",
    "but this @xmath122 is not easy in our sense , because in order to answer the query shown in figure  [ figure : convex hull widget ] , we need to know @xmath393 for exponentially many @xmath124 . to avoid this ,",
    "we make the bumps low , so they make an angle of at most @xmath394 ( figure  [ figure : convex hull widget ] right ) .",
    "this ensures that any one query to the @xmath330-name of @xmath122 can be answered by checking @xmath393 for at most one @xmath389 , making @xmath75 computable in polynomial time .",
    "the function  @xmath76 queries whether the point @xmath392 is in @xmath120 with appropriate precision .",
    "note that @xmath76 needs access to @xmath53 in order to find the location of @xmath392 and the necessary precision .",
    "we say that a non - decreasing function @xmath259 is a _ modulus of continuity _ of a function @xmath395 $ ] if for all @xmath31 and @xmath76 , @xmath396 $ ] such that @xmath397 , we have @xmath398 ( figure  [ figure : moc ] ) .",
    "note that any @xmath395 $ ] is uniformly continuous and thus has a modulus of continuity .     of a real function",
    "@xmath395 $ ] . ]",
    "define the representation @xmath331 of @xmath152 $ ] as follows ( see lemmas [ lemma : box polytime iff polytime name ] and [ lemma : universality ] below for the reasons why we believe @xmath331 to be a natural representation ) : for @xmath259 and @xmath161 , we set @xmath399 if and only if @xmath400 is a modulus of continuity of @xmath7 and for every @xmath31 and @xmath39 , we have @xmath401 and @xmath402 ( the string  @xmath282 may have to have leading @xmath100s padded in order to make @xmath53 regular  but this need for padding is inconsequential , see the penultimate paragraph of section  [ subsection : second - order polynomial ] ; in what follows , we omit this padding in the description of algorithms ) . to see that @xmath403 is well - defined",
    ", suppose that the above condition holds for two real functions @xmath7 and @xmath404 .",
    "let @xmath405 $ ] be arbitrary .",
    "then for each @xmath31 , there is @xmath39 with @xmath406 and thus @xmath407 since @xmath31 was arbitrary , @xmath408 .",
    "since @xmath405 $ ] was arbitrary , @xmath409 .",
    "recall that the only reason that a real number can require long @xmath61-names was having a large absolute value .",
    "in contrast , functions in @xmath152 $ ] may have long @xmath331-names for two possible reasons : having big values , and having a big modulus of continuity .",
    "the following lemma says that the complexity of @xmath331-names of @xmath395 $ ] matches the complexity of @xmath7 that was discussed in section  [ subsection : applications , real numbers ] using the representation  @xmath61 :    [ lemma : box polytime iff polytime name ] a function in @xmath152 $ ] is polynomial - time ( resp .",
    "polynomial - space ) computable if and only if it is in @xmath331-@xmath13 ( resp .",
    "@xmath331-@xmath14 ) .",
    "[ lemma : pspace - complete names ] a function in @xmath152 $ ] is @xmath2-complete in the sense of ( * ? ? ?",
    "* section  2.2 ) if it is @xmath331-@xmath14-@xmath230-complete and has a polynomial modulus of continuity .",
    "suppose that @xmath395 $ ] is @xmath331-@xmath14-@xmath230-complete and has a polynomial modulus of continuity  @xmath400 .",
    "then for any @xmath410 there are polynomial - time functions @xmath76 and @xmath212 that satisfy the first picture of figure  [ figure : type - one reductions ] for any @xmath411$]and thus for any @xmath210 of the form @xmath412 ( that is , those with this particular polynomial  @xmath400 in the first component ) .",
    "a query to @xmath210 can ask either a value of @xmath400 or a value of @xmath53 , but @xmath400 is just a polynomial , so we may assume that @xmath76 only asks a query of form `` @xmath413 ? '' .",
    "thus , given @xmath124 , an answer in @xmath414 $ ] can be computed by @xmath212 from @xmath124 and a @xmath134-approximation of @xmath415 .",
    "this implies that @xmath7 is @xmath2-complete .",
    "the representation  @xmath331 of @xmath152 $ ] may look somewhat arbitrary at first sight . here",
    "we present a property of @xmath331 that seems to make it a `` natural '' representation . define the function",
    "@xmath416 \\times [ 0 , 1 ] { \\mathbin{\\to}}{\\mathbb r}$ ] by @xmath417 .",
    "the following lemma says that ( the @xmath318-equivalence class of ) the representation  @xmath331 is the least informative representation of @xmath152 $ ] that makes @xmath418 efficiently computable ( see section  [ subsubsection : translation and equivalence ] for the definitions of @xmath419 and @xmath318 ) .",
    "the proof will appear in a forthcoming paper .",
    "[ lemma : universality ] let @xmath54 be any representation of @xmath152 $ ]",
    ". then @xmath420 } } ] , { \\rho _ { \\mathbb r } } ) \\text- { { \\text{\\bfseries \\sffamily \\upshape fp}}}$ ] if and only if @xmath421 .",
    "the above definitions and lemmas extend to some well - behaved compact domains other than @xmath108 $ ] ( we keep writing @xmath331 by abuse of notation ) . to discuss the complexity of the operator @xmath150 ( section  [ subsubsection : non - uniform results ] )",
    ", we define a representation  @xmath422 of the space @xmath151 \\times [ -1 , 1]]$ ] of lipschitz continuous functions by setting @xmath423 if and only if @xmath53 is a @xmath331-name of @xmath143 and @xmath424 satisfies ( regard the string @xmath425 as the constant function whose value is @xmath425 ) .",
    "now we can formulate the uniform version of theorems [ theorem : ivp upper non - uniform ] and [ theorem : ivp lower non - uniform ] as follows ( a proof will be given shortly ) .",
    "[ theorem : ivp uniform ] @xmath150 is @xmath426-@xmath27-@xmath231-complete .    as corollaries , we have theorem  [ theorem : ivp upper non - uniform ] by lemmas [ lemma : maps computable represented].[enumi : maps computable represented , functional ] and [ lemma : box polytime iff polytime name ] , and theorem  [ theorem : ivp lower non - uniform ] by lemmas [ lemma : maps complete represented].[enumi : maps complete represented , functional ] and [ lemma : pspace - complete names ] .",
    "the following weaker version of theorem  [ theorem : ivp uniform ] , stated with the stronger reduction @xmath232 from definition  [ definition : many - one reduction].[enumi : weihrauch reduction ] , is slightly easier to prove ( see the end of the section ) :    [ corollary : ivp uniform , strong reduction ] @xmath150 is @xmath426-@xmath27-@xmath232-complete .    as we noted in lemma",
    "[ lemma : translation and completeness ] , this is a more robust result in the sense that it is invariant under replacing representations to @xmath318-equivalent ones .",
    "a drawback is that corollary  [ corollary : ivp uniform , strong reduction ] does not directly yield theorem  [ theorem : ivp lower non - uniform ] , because lemma  [ lemma : pspace - complete names ] requires @xmath14-@xmath230-completeness , whereas replacing @xmath231 by @xmath232 in the assumption of [ lemma : maps complete represented].[enumi : maps complete represented , functional ] also changes @xmath230 to @xmath321 in the conclusion .",
    "we can still obtain corollary  [ corollary : ivp lower non - uniform , weak ] .",
    "the rest of the section is devoted to the proof of theorem  [ theorem : ivp uniform ] .",
    "the positive part ( @xmath427-@xmath27 ) will be verified by checking that the proof of theorem  [ theorem : ivp upper non - uniform ] can be made uniform .",
    "for the hardness , we need to modify slightly the construction in  the original proof of theorem  [ theorem : ivp lower non - uniform ] ( this modification is not needed if we only want corollary  [ corollary : ivp uniform , strong reduction ] ) .",
    "[ proof of theorem  [ theorem : ivp uniform ] , computability ] given a @xmath422-name @xmath428 of @xmath143 , we need to find a @xmath331-name @xmath429 of @xmath430 .",
    "recall that @xmath400 is a modulus of continuity of @xmath143 , and @xmath431 for each @xmath124 , @xmath125 ( such that @xmath432 \\times [ -1 , 1]$ ] ) .",
    "it is easy to find a modulus of continuity @xmath433 of @xmath142 : let @xmath434 , where @xmath435 is any number such that the values of @xmath143 always stay in @xmath436 $ ] .",
    "for example , @xmath437 .    to obtain @xmath200 , we apply the forward euler method with step size @xmath438 to the approximation of @xmath143 with precision @xmath439 ( we will specify @xmath92 and @xmath440 shortly ) .",
    "that is , we define an approximation @xmath441 $ ] of @xmath142 by letting @xmath442 and then defining @xmath443 on @xmath444 $ ] , for each @xmath445 inductively , to be linear with slope approximately @xmath446 : formally , @xmath447 for some @xmath124 , @xmath125 with @xmath448 and @xmath449 .",
    "obviously , we can compute such a function @xmath450 in space polynomial in @xmath92 and @xmath440 in the sense that there is @xmath451 such that @xmath452 for every @xmath39 .",
    "let @xmath453 , where @xmath454 and @xmath455 .",
    "we claim that @xmath429 is a @xmath331-name of @xmath142 ( this proves the desired @xmath27-computability , since @xmath92 and @xmath440 are bounded polynomially in @xmath172 , @xmath400 and @xmath45 , @xmath145 ) .",
    "this means that @xmath456 for any @xmath405 $ ] .",
    "more strongly , we prove , by induction on @xmath457 ,  , @xmath458 , that @xmath459 for all @xmath460 $ ]",
    ". we may assume for @xmath461 as the induction hypothesis .",
    "the approximate value @xmath462 is defined by , whereas the true solution  @xmath142 satisfies @xmath463 the error added by this approximation is @xmath464 because @xmath465 where the second , third and fifth inequalities come from @xmath466 , @xmath467 , @xmath468 , respectively . using and the induction hypothesis",
    ", we compare and to obtain @xmath469 as desired .    for the hardness ,",
    "the core part of the proof can be done by relativizing the argument for the non - uniform version  @xcite .",
    "since the proof was by reduction from the problem  @xmath470 , we use the relativized version @xmath292 from lemma  [ lemma : pspacetwo - complete ] . starting from @xmath292 ,",
    "we follow the construction in ( * ? ? ? * lemma  4.1 ) , which uniformizes and yields the following .",
    "let @xmath471 be the representation of @xmath28 which encodes a finite string @xmath124 by the constant function with value @xmath124 .",
    "let @xmath472 be the set of non - decreasing functions from @xmath171 to @xmath171 , and let @xmath473 be its representation defined by @xmath474 .",
    "[ lemma : main lemma of paris ] let @xmath475 .",
    "then there are a second - order polynomial  @xmath175 and a function @xmath476 } } , { \\rho _ { \\mathbb r}}{\\mathord| ^{[-1 , 1 ] } }    ] ,     { \\rho _ { \\mathbb r } } ) \\text- { { \\text{\\bfseries \\sffamily \\upshape fp}}}$ ] such that for each @xmath477 , @xmath478 and @xmath186 , the function @xmath479 \\times [ -1 , 1 ] { \\mathbin{\\to}}{\\mathbb r}$ ] defined by @xmath480 satisfies    1 .",
    "[ enumi : boundary ] @xmath481 for all @xmath482 $ ] ; 2 .",
    "[ enumi : lipschitz ] @xmath483 for any @xmath484 $ ] and @xmath485    $ ] ; 3 .",
    "[ enumi : output ] @xmath486 , and @xmath487 satisfies @xmath488 .",
    "[ proof of theorem  [ theorem : ivp uniform ] , hardness ] let @xmath489 .",
    "we need to show that @xmath490 .",
    "we may assume that @xmath5 is a total function and that there is a second - order polynomial  @xmath176 such that @xmath491 has length exactly @xmath492 for all @xmath161 and @xmath493 .",
    "there is @xmath475 such that @xmath494 equals the @xmath119th symbol of @xmath491 for any @xmath161 , @xmath493 and @xmath495 .",
    "apply lemma  [ lemma : main lemma of paris ] to this @xmath145 to obtain the @xmath175 and @xmath496 , and let @xmath497 and @xmath498 be as in the lemma .",
    "we define @xmath75 ( of definition  [ definition : many - one reduction ] ) by describing the real function @xmath499 \\times [ -1 , 1]]$ ] for a given @xmath53 .",
    "it has lipschitz constant  @xmath101",
    ". it will be straightforward to check that a @xmath331-name ( and hence a @xmath422-name ) of @xmath143 can be @xmath26-computed from @xmath53 .",
    "we write @xmath500 and @xmath501 for the @xmath497 and @xmath498 corresponding to this given @xmath53 and @xmath502 .    for each binary string  @xmath282 ,",
    "let @xmath503 where @xmath504 means @xmath282 interpreted as an integer in binary notation .",
    "this divides @xmath505 into intervals @xmath506 $ ] indexed by @xmath507 .",
    "we further divide the left half @xmath508 $ ] into @xmath509 subintervals @xmath510 $ ] , @xmath511 $ ] ,  , @xmath512 $ ] , @xmath513 $ ] , where @xmath514 on each strip @xmath515 \\times [ -1 , 1]$ ] , we define @xmath143 by putting the copies of @xmath516 as in figure  [ figure : ivp widget ] .     to @xmath150 . ]",
    "precisely , @xmath517 for each @xmath405 $ ] and @xmath518 , @xmath482 $ ] , where the polynomial  @xmath50 is defined by @xmath519 and @xmath520 . on the last strip @xmath513 \\times [ -1 , 1]$ ]",
    ", we define @xmath143 to be constantly @xmath100 . on the right half",
    "@xmath521 $ ] , we define @xmath143 symmetrically : @xmath522 for @xmath523 .",
    "because of this symmetry , the function @xmath524 takes value @xmath100 at each @xmath525 , and it can be verified , using ( [ enumi : output ] ) of lemma  [ lemma : main lemma of paris ] , that for @xmath526 , ",
    ", @xmath492 inductively , @xmath527 in particular , the number @xmath528 contains the values @xmath529 for all @xmath530 , from which we can recover @xmath491 .",
    "the reducing functions @xmath212 and @xmath76 ( of definition  [ definition : many - one reduction ] ) perform this lookup .",
    "that is , @xmath531 with @xmath532 , and @xmath247 is the function that , given the encoding of ( an approximation of ) @xmath533 , extracts the value @xmath491 .    in (",
    "* theorem  3.2 ) , the non - uniform version of lemma  [ lemma : main lemma of paris ] was used to construct a function that proved theorem  [ theorem : ivp lower non - uniform ] .",
    "we needed a different construction , because for our theorem  [ theorem : ivp uniform ] ( with the reduction @xmath231 ) , we needed to get the values @xmath529 for all @xmath530 in one query . for corollary  [ corollary : ivp uniform , strong reduction ] ( with the reduction @xmath232 ) , we are allowed to make many queries , so the straightforward uniformization ( without stacking the copies of @xmath516 vertically ) would have worked .",
    "* to discuss computational complexity in the framework of tte , we replace @xmath40 , the infinite strings , by @xmath157 , a class of functions from strings to strings .",
    "this is a generalization in two ways : these functions [ enumi : predicate ] can have values of arbitrary length , and [ enumi : unary ] take string arguments , rather than just unary strings . * for time and space bounds we use second - order polynomials in the input size , which are defined in the way suggested by type - two complexity theory .",
    "we defined classes @xmath189 , @xmath190 and @xmath26 , @xmath27 . with a suitable notion of polynomial - time reductions",
    ", we can also define @xmath190- and @xmath27-completeness .",
    "formulating other classes is left for future work . * to apply this to problems involving real numbers , we introduced representations @xmath61 , @xmath330 and @xmath331 of real numbers , sets and functions .",
    "both aspects [ enumi : predicate ] and [ enumi : unary ] of our generalization were useful .",
    "with respect to these representations , we showed that taking the convex hull of a set is @xmath190-complete , and that solving a lipschitz continuous ordinary differential equation is @xmath27-complete .",
    "these are uniform versions of what have been known non - uniformly , and tell us more about the hardness of numerical problems in practice .",
    "an interesting direction for further investigation is to ask which other known non - uniform results about operators do ( or do not ) uniformize .",
    "one can also look at known computability results and ask whether analogous statements hold true for time- or space - bounded classes .",
    "we thank vasco brattka , kaveh ghasemloo , ken jackson , toni pitassi , bill weiss and anonymous referees for comments on this and related manuscripts which helped improve the presentation .",
    "we also thank keiko imai and yu muramatsu for providing the image of the trisector curves ( figure  [ figure : trisector ] ) . during this research ,",
    "the first author was supported by the nakajima foundation and by the grant - in - aid for scientific research ( kakenhi ) 23700009 ; both authors were supported by the natural sciences and engineering research council of canada .",
    "v.  brattka , p.  hertling , and k.  weihrauch .",
    "a tutorial on computable analysis . in s.",
    "b.  cooper , b.  lwe , and a.  sorbi , editors , _ new computational paradigms : changing conceptions of what is computable _ , pages 425491 .",
    "springer , 2008 .",
    "polynomial - time computability in analysis . in i.",
    "l.  ershov et  al . ,",
    "editors , _ handbook of recursive mathematics : volume 2 : recursive algebra , analysis and combinatorics _ , vol .",
    "139 of _ studies in logic and the foundations of mathematics",
    "_ , pages 12711317 .",
    "north - holland , 1998 .",
    "k.  ko and f.  yu . on the complexity of convex hulls of subsets of the two - dimensional plane . in _ proc .",
    "4th international conference on computability and complexity in analysis _ , vol .",
    "202 of _ electronic notes in theoretical computer science _ , pages 121135 , 2008 .",
    "i.  takeuti .",
    "effective fixed point theorem over a non - computably separable metric space . in j.  blanck , v.  brattka , and p.  hertling , editors , _ computability and complexity in analysis _",
    "2064 of _ lecture notes in computer science _ , pages 310322 , 2001 .",
    "x.  zhao and n.  mller .",
    "complexity of operators on compact sets . in _ proc .",
    "4th international conference on computability and complexity in analysis _ , vol .",
    "202 of _ electronic notes in theoretical computer science _ , pages 101119 , 2008 ."
  ],
  "abstract_text": [
    "<S> we propose an extension of the framework for discussing the computational complexity of problems involving uncountably many objects , such as real numbers , sets and functions , that can be represented only through approximation . </S>",
    "<S> the key idea is to use ( a certain class of ) string functions as names representing these objects . </S>",
    "<S> these are more expressive than infinite sequences , which served as names in prior work that formulated complexity in more restricted settings . </S>",
    "<S> an advantage of using string functions is that we can define their _ size _ in the way inspired by higher - type complexity theory . </S>",
    "<S> this enables us to talk about computation on string functions whose time or space is bounded polynomially in the input size , giving rise to more general analogues of the classes @xmath0 , @xmath1 , and @xmath2 . </S>",
    "<S> we also define @xmath1- and @xmath2-completeness under suitable many - one reductions .    </S>",
    "<S> because our framework separates machine computation and semantics , it can be applied to problems on sets of interest in analysis once we specify a suitable representation ( encoding ) . as prototype applications </S>",
    "<S> , we consider the complexity of functions ( operators ) on real numbers , real sets , and real functions . </S>",
    "<S> for example , the task of numerical algorithms for solving a certain class of differential equations is naturally viewed as an operator taking real functions to real functions . </S>",
    "<S> as there was no complexity theory for operators , previous results only stated how complex the solution can be . </S>",
    "<S> we now reformulate them and show that the operator itself is polynomial - space complete . </S>"
  ]
}
{
  "article_text": [
    "power consumption still remains the greatest concern of data center administrators taking 30 - 50% of the operational costs @xcite .",
    "data centers today are equipped primarily with multicore machines which offer advanced power management techniques .",
    "processor manufacturers such as intel and amd have introduced products such as amd powernow ! , amd coolnquiet and intel speedstep that incorporate dynamic voltage and frequency scaling ( dvfs ) and dynamic power management such as clock gating .",
    "intel nehalam architecture included per - core dynamic frequency scaling that enables each core with a separate digital phase - locked loop ( dpll ) @xcite for clock signal generation rather than using clock gating . also , finer - grained processor frequency steps ,",
    "operating points and sleep states have considerably reduced the idle power consumption and greatly expanded the dynamic power range of the processors to as much as 62% @xcite . with the use of these hardware techniques along with os - level configurations ( cpugovernors ) ,",
    "the idle power consumed is as low as 38% of the peak power @xcite , unlike the earlier architectures that drew about 70% of the peak power @xcite .",
    "almost all data centers today are virtualized and the tasks executing inside virtual machines ( vms ) are isolated from each other .",
    "the hypervisor that facilitates the virtualization , also supports varying the frequencies of the processor cores the vms are scheduled on as well as the cpu allocation of individual vms .",
    "this gives us clear provisioning boundaries to work with and hence a good target to control power consumption of servers .",
    "power drawn by a system depends on the frequency at which the processor operates as well as the cpu utilization itself i.e. , power varies by as much as 62% across cpu usage and 45% across the highest and the lowest frequencies @xcite .",
    "a thorough survey of existing literature on _ power models _ raised two issues with respect to applicability on modern processors .",
    "* most models either focused on measuring the power consumed at the component - level using voltage and frequency supplied to the processor , or modeled power as a function of cpu and other resource utilizations but not both . * models that consider cpu and frequency as parameters fail to take into account the wide range of frequency settings offered and the kind of frequency scaling ( clock gating vs dpll ) .",
    "traditionally , the power consumed is inversely proportional to ( and is thus traded off with ) application performance which in a data center directly affects the slas guaranteed by a service provider .",
    "there is a vast collection of literature that quantifies the effect of either the cpu allocation or the processor frequency on the performance of benchmarks .",
    "the review of dvfs - aware _ performance models _ for virtualized applications evoked following drawbacks .",
    "* most models either predicted performance of applications under frequency scaling or cpu reallocation that ` simulated ' frequency scaling . * combined effect of cpu and frequency changes on the performance of applications are not analyzed thoroughly .",
    "* gaps in existing work are clearly evident from figure [ fig : cterrorintro ] .",
    "prediction error for cpu - intensive tasks are low , about 30% for memory - intensive applications and as high as 590% for file - intensive benchmarks .",
    "* need unified performance model for that considers both frequency and cpu allocation    our ultimate goal is to provision vms while satisfying the twin ( and possibly competing ) requirements of a power budget and vm performance . as an intermediate step , with a power and completion time model in place , we could optimize for one or the other of these requirements as well and use the resulting model to understand the effect that maximizing performance will have on power or minimizing power consumption will have on the performance .",
    "the two building blocks that allow us to predict power and performance are what we present in this paper .",
    "our contributions towards power and completion time prediction in virtualized environments are the following .",
    "* empirically establish that for a multicore processor , only the highest currently operating frequency affects the power .",
    "* identify the minimal set of input parameters and empirically derived a model using those parameters for predicting power consumption of virtualized servers . *",
    "validate our derived model across heterogeneous processors with high accuracy . *",
    "propose and validate a completion time model that considers compute resource and frequency as parameters across different application types and heterogeneous systems with high precision .",
    "* integrate our proposed models and demonstrate scenarios which lead to significant power savings and performance improvements while provisioning vms .",
    "the rest of the paper is organized as follows .",
    "section [ sec : background ] describes the background on the existing hardware - level power management techniques applicable to data centers .",
    "existing power and performance models are presented in section [ sec : rwork ] .",
    "section [ sec : wmodel ] provides the methodology , experimental setup and identifies the parameters needed for predicting the power of a virtualized server .",
    "section [ sec : wmodelder ] derives a power model with cpu% and operating frequency as parameters and validates the model across heterogeneous servers .",
    "section [ sec : pfmodel ] identifies compute resource and server frequency as the input parameters for predicting the performance of a task .",
    "section [ sec : pfmodelder ] derives a completion time model from existing work and validates the model across 4 systems and 10 benchmarks , including nasa parallel benchmark suite .",
    "section [ sec : integration ] presents two scenarios where the integration of our power and performance models leads to significant amount of power saved and performance speedup .",
    "conclusions and future work are presented in section [ sec : conclusions ] .",
    "the power consumption of a system is the rate at which the system performs work and has two components - @xmath0 ( watts ) .",
    "@xmath1 is the minimum power that is required by the system to remain active , irrespective of clock rate or usage .",
    "@xmath2 is the power consumed while performing computations .",
    "@xmath2 varies with clock rate , voltage supplied or utilization of the system .",
    "the dynamic power range of a system is defined as the ratio of the difference between peak power and idle power to the peak power .",
    "energy consumption is total work done by system for a time duration i.e. , @xmath3 and is measured in watt - hours or joules .",
    "data centers which use modern processors could achieve higher power conservation by understanding and effectively using the hardware - assisted techniques currently offered .",
    "benini et al .",
    "@xcite classified power management of processors as ( 1 ) supply shutdown ; ( 2 ) clock gating and ( 3 ) multiple and variable power supplies for individual components .",
    "modern processors offer dynamic frequency scaling ( dfs ) either by clock gating or using separate clock signals for each core .",
    "dvfs is a powerful dynamic power management technique for conserving the processor power by reducing the voltage and the frequency depending on the cpu - resource utilization .",
    "the dynamic power of the processor is given by @xmath4 where @xmath5 is the supply voltage and @xmath6 is the frequency across the processor .",
    "a change in the voltage will have a greater impact on the power drawn than a change of the frequency .",
    "single - core processors were initially designed with off - chip voltage regulators which caused tens of milliseconds delay during dvfs @xcite .",
    "the voltage regulators were placed off the chip due to their bulky size and space restrictions of the processor .",
    "global on - chip regulators were designed to moderate the voltage supplied to multicore processors .",
    "the voltage is set based on the core operating at the highest frequency .",
    "frequency scaling is done by scaling the clock length , which enables the required threshold voltage to be set . whereas , the frequencies of the remaining cores are scaled using clock gating i.e. , stopping the cores for some cycles @xcite .",
    "commercial processors such as intel nehalem currently use a dpll to scale the frequency of individual cores . however , the voltage is still set based on the highest frequency .",
    "cpugovernor has been incorporated into the linux kernel to provide a variety of frequency profiles to the users i.e. , the governor chooses which frequency to set based on the cpu utilization and a set of selection policies .",
    "the five profiles that are offered are - conservative , ondemand , performance , powersave and userspace .",
    "current version of cpugovernors used by the hypervisors do not consider the performance achieved by the applications executing inside the vms , the required performance i.e. , sla or design of processors .    in this paper , we aim to understand the effect of dvfs technique on the power consumption of the machines and the performance attained by the tasks executing inside the vms , in order to achieve higher power conservation without sla violations for vm provisioning .",
    "power management has become an essential part of data center operations .",
    "virtualization has aided in power conservation , as it enabled higher utilization using fewer number of servers .",
    "there is scope for further improvement .",
    "this section presents the existing power models for modern multicore processors and the available performance model of virtualized applications .      modeling the power consumption of a system is an essential phase in efficient power management .",
    "earliest works in this area used the processor s power consumption as a proxy for modeling power drawn by the system .",
    "the cmos circuits that are used for building the processors derive dynamic power as @xmath7 where @xmath8 is the switching activity , @xmath9 is the capacitance , @xmath10 is the supply voltage and @xmath6 is the frequency or rate of clock signal of the processor .",
    "fan et al .",
    "@xcite established a linear relationship between power consumption and cpu utilization as @xmath11where @xmath12 is the fraction of cpu utilization .",
    "bellosa et al .",
    "@xcite like @xcite , @xcite , @xcite , used performance monitoring counters ( pmc ) to model the power consumption of the processor .",
    "their models focused on cpu utilization as processors consumed about 70% of the total power supplied to the system .",
    "however , the models did not hold for non - cpu - intensive applications @xcite .",
    "gurumurthi et al .",
    "@xcite designed softwatt simulator to correlate power consumption with utilization of four resources , namely - cpu , memory , i / o and disk . though the simulation method aids in analyzing the power drawn by individual components , it is empirically infeasible as the modern day processors are made of millions of such components .",
    "pedram and hwang proposed workloadgen @xcite , a workload generator to model the dynamic power management technique - dvfs .",
    "this model was based on two assumptions - ( i ) only two frequencies available - ` high ' and ` low ' .",
    "( ii ) if a core is at the ` low ' frequency , that core is idle i.e. , no process is scheduled on that core . however , there are commercial multicore processors that support a wide range of frequencies to choose from and the cores may be in use even at lower frequencies .",
    "petrucci et al .",
    "@xcite addressed this concern when they proposed a power model that support multiple frequency steps . the power @xmath13 at any given utilization @xmath14 is given as @xmath15 @xmath16 @xmath17    where @xmath18 and @xmath19 are the idle power at maximum and minimum frequencies i.e. , @xmath20 and @xmath21 respectively .",
    "@xmath22 and @xmath23 are the peak power at @xmath20 and @xmath21 respectively .",
    "it is to be noted that power is linearly proportional to the frequency or cubically proportional as voltage of the processor is set based on the frequency .",
    "petrucci et al .",
    "@xcite , however assumed a _",
    "relationship between power and frequency .    in this paper",
    ", we empirically establish power s linear dependency on the frequency and since our work is closely related to @xcite , we show how our model predicts power consumption more accurately than that given in @xcite . in the latest survey of power models @xcite ,",
    "petrucci s model that we have used for comparison , is the only model cited which combines cpu% and frequency . *",
    "as far as we know , no other paper have proposed a combination of these two parameters .",
    "* consider the case of intel i7 processor - it has a considerably low idle power - 38% of the peak power .",
    "the remaining 62% of the total power depends not only on the cpu utilization , but also the operating frequency .",
    "operating at 100% cpu at the lowest frequency consumes only 45% of the power at the highest frequency .",
    "this highlights the need for modeling power based on the current cpu utilization * and * the operating frequency .",
    "hsu and feng @xcite empirically observed the effect of frequency change on the completion time of tasks by characterizing the compute - boundedness of each microbenchmark .",
    "they proposed a model that verified that the relative performance can be approximated to the relative number of instructions executed per second ( mips ) and the relative frequency .",
    "dhiman et al .",
    "@xcite and marinoni and buttazzo @xcite experimentally verified that frequency changes have lesser effects on memory - intensive applications and minimally affect network- and disk - intensive applications .",
    "wang and wang @xcite used model predictive control ( mpc ) theory to design the controller that changes the cpu allocation of the vm and the frequency of the servers based on a power cap . though their performance model considers both the cpu and frequency of the server as parameters , their experimentation were neither performed on non - cpu - intensive applications , which have lesser performance loss with the change in frequency , nor heterogeneous applications with varied slas .",
    "non - cpu - intensive applications were again neglected by petrucci et al .",
    "@xcite when they proposed a performance model that depends on the cpu utilization and frequency of the server .",
    "they assumed cpu as the bottleneck for _ httperf _ tool and predicted the performance @xmath24 for any given utilization @xmath14 and frequency @xmath25 using the following equation .",
    "@xmath26    where @xmath27 is the performance at maximum frequency @xmath20 and cpu utilization .",
    "this model was used in figure [ fig : ctpredictcdfmulti ] to emphasize the gap in existing work . in this paper , we show how our model predicts completion time more accurately than that given in @xcite .    another flavor in literature is to use os or hypervisor - driven techniques to provide frequency scaling .",
    "nathuji and schwan , in virtualpower @xcite , proposed ` soft scaling ' - a technique where vm will execute at the required frequency using cpu scheduling policy rather than hypervisor changing the frequency of the processor .",
    "many other authors such as kamga et al .",
    "@xcite and wen et al .",
    "@xcite proportionally reallocated cpu to simulate frequency changes .",
    "we would like to highlight here that the literature either dealt with characterizing performance for frequency scaling or used cpu reallocation to ` simulate ' frequency scaling but _ not both_. this is the main drawback our proposed completion time model overcomes .",
    "* as far as we know , we are the first to provide a unified model that predicts the completion time where frequency and cpu allocation are independently reconfigurable . *",
    "such a model is particularly useful for virtualized environments for provisioning vms without performance violations .",
    "modern processors offer a minimum of 2 ( amd x4 9550 ) and up to 10 ( intel i7 2600 ) frequency steps . as discussed earlier , there is a need to consider the effect of operating frequency and the cpu utilization on the dynamic power of the system .",
    "our methodology for empirically modeling power drawn by virtualized servers is described below .",
    "* observe the power consumption trend of a system and the effect of various parameters such as number of vms , cpu utilization , frequency of the cores , etc .",
    "* identify the key parameters that contribute to the power consumption . *",
    "empirically derive the power model through regression of the input parameters . * validate the model on other systems which are heterogeneous in terms of processor architecture , processor manufacturers and chassis .",
    "this section details the experimental setup to collect data to derive the power model .",
    "the input parameters of the model are determined through empirical evidence and regression is used to derive the model for intel i7 2600 .",
    "the experiments in this paper are performed on 5 virtualized systems listed in table [ tab : sys ] .",
    "all the systems operate on linux kernel 3.2.0 - 23-generic - pae and qemu kernel - based virtual machine 1.0 hypervisor .",
    "the vms also operate on linux kernel 3.2.0 - 23-generic - pae .",
    "the power is measured using krykard alm 10 @xcite connected to the input supply of the systems .",
    "we experiment with a pseudo microbenchmark performing long double multiplication operations .",
    "the four vms are pinned to four different cores and each vm simultaneously executes the benchmark .",
    "the frequency of the cores are set using ` cpufreqd 2.4.2 ` and the cpu allocation is capped using ` cpulimit 1.1 ` .",
    "all experiments are carried out with the processor frequency and cpu allocation of vms as independent variables .",
    ".configuration of systems under test [ cols=\"^,<,<,<,^\",options=\"header \" , ]     [ ctval ]      figures [ fig : ctpredictcdfmulti ] ( a)-(f ) show the cdf of the error in predicting the completion time for 10 benchmarks on 4 systems using our completion time model .",
    "table [ ctval ] compares the prediction of our model with existing work .",
    "we observed the following while predicting the completion time .",
    "* dependency on the processor frequency i.e. , the value of @xmath28 was @xmath29 1 for both the cpu - intensive benchmarks and @xmath29 0 for both the i / o - intensive benchmarks across the 4 heterogeneous servers .",
    "* @xmath28 value vary from 0.25 to 0.52 for randmem32 and 0.45 to 0.84 for kernel compile .",
    "therefore , @xmath28 has to be calculated for individual applications on each system . *",
    "completion time monotonically increased from 100% to 20% for all frequencies , benchmarks and systems , except for kernel compile . while it still monotonically increased from 80% to 20% , compilation took longer at 100% than 80% .",
    "this led to a maximum error in prediction about 16% on intel i5 , i7 and amd 9550 .",
    "this outlier could be attributed to the bottleneck created by cpu on the memory and file subsystems . * to overcome the above exception , the base of the prediction to 80% , i.e. , the following equation was used to predict the time for kernel compilation where @xmath28 is obtained from @xmath30 and @xmath31 @xmath32 \\cdot [ u \\frac{f_{max}}{f } + v ] \\cdot ct^{0.8}_{f_{max}}\\ ] ] * the above method for prediction led to a maximum error of 5.2% across of 20% to 80% cpu but as much as 39% for 100% cpu .",
    "this outlier could also be attributed to bottlenecks created on memory and file subsystems . *",
    "our average error is consistently lesser than @xcite for compute as well as other - resource - intensive tasks . * compared to our model , @xcite predicted one _ magnitude _ worse than measured values for memory - intensive and more than * two magnitudes * worse for file - intensive benchmarks .",
    "* for the nasa parallel benchmark suite , the maximum error is a negligent 3.46% .",
    "this empirically establishes our completion time model s validity and applicability for complex , real - world applications as well as hpc environments .    with the maximum error of 6.81% ,",
    "our unified completion time model was able to predict the time for various cpu utilizations and frequency configurations across heterogeneous benchmarks and systems .",
    "moreover , for the nasa parallel benchmark suite , our model predicted their completion time with a very high accuracy ( maximum error of 3.46% ) and hence validating the applicability of our completion time model for complex applications and hpc environments .",
    "thus , we proposed a completion time model to predict the performance of tasks operating inside the vms using only 2 frequencies , a cpu fraction and 4 execution time values .",
    "we addressed the issue of predicting the running time for memory- and file - intensive benchmarks as well as hpc benchmarks and our model has a high prediction accuracy across heterogeneous virtualized systems .",
    "our completion time model can also be used for hadoop and hpc environments with no modifications .",
    "we would like to make a small note here .",
    "performance of any task can be measured in one of two ways - given set of operations , how long does execution take or given a fixed amount of time , how many operations are executed .",
    "we utilized benchmarks that complete execution to derive and validate our completion time model . on the other side are ` unconstrained ' applications",
    "( i.e. , unconstrained w.r.t . time ) which require throughput analysis rather than completion time modeling .",
    "for example , vm cloning @xcite can be used to feed same request / input to all the clones operating at different cpu / frequency configurations and observing their performance . however , one potential way our model can be directly applied to such tasks is by identifying repeated subtasks or introducing breakpoints and observing their ct for different configurations .",
    "the following section presents the integration of our proposed models .",
    "the power and completion time models that we have empirically derived and validated in the previous sections can be integrated in multiple ways to provision vms on physical machines ( pms ) . in this section ,",
    "we describe two basic scenarios - ( i ) power - optimal provisioning and ( ii ) provisioning with a power budget .",
    "consider a scenario where 4 vms executing the same application - numbench , have to be provisioned on a single pm in a power - optimal manner .",
    "the only input given is the completion time threshold ( @xmath33 ) of 240 seconds .",
    "assume that the completion time of the application is already characterized w.r.t .",
    "cpu% and @xmath6 for intel i5 and i7 .",
    "figure [ fig : provisioningflowdiagram ] shows the procedure for provisioning vms such that the pm utilized the least amount of power .",
    "the @xmath33 is given as input to the controller which forwards it to the completion time predictor .",
    "this predictor sends all feasible @xmath6-cpu% combinations to the controller . in order to provision in a power optimal manner , the controller forwards the @xmath6-cpu% combinations to the power predictor .",
    "the power characteristics of intel i5 and i7 w.r.t .",
    "cpu% and @xmath6 are already available with the power predictor .",
    "therefore , the power utilized for the @xmath6-cpu% combinations are calculated and sent to the controller which chooses the least power consuming combination .",
    "figure [ fig : powersave ] shows the power saving achieved at each @xmath6 w.r.t .",
    "power consumed at @xmath34 , the highest frequency . for a @xmath33 of 240 seconds , intel i7 achieves 15.4% i.e. , 9w of power saving if all 4 vms are provisioned at the lowest frequency of 1.6ghz and 71% cpu . whereas for intel i5 , the lowest @xmath6 of 1.2ghz yields only 5% savings , but operating at 1.6ghz achieves 12.4% i.e. ,",
    "12w of saving .",
    "hence , the controller provisions the vms on intel i5 with 58% cpu at 1.6ghz .          while one side of the coin is saving power with a performance constraint , improving performance for a power budget constraint is the other side .",
    "the objective for this scenario is to improve the performance i.e. , reduce the completion time of the tasks executing inside vms while maintaining the power utilized under a budget .",
    "the procedure for provisioning vms for this scenario is similar to the one shown in figure [ fig : provisioningflowdiagram ] except the following changes .",
    "a power budget is given as input which the controller forwards to the power predictor .",
    "the feasible @xmath6-cpu% combinations are sent to the completion time predictor via the controller .",
    "the completion time predictor estimates the performance that will be achieved based on the characteristics of the application w.r.t . @xmath6 and cpu% known apriori .",
    "figure [ fig : powerbudget ] shows the increase in the performance that is achieved by intel i7 and i5 which have 50w and 75w respectively , as their power budgets .",
    "the completion time decreased i.e. , the performance improved gradually with decrease in @xmath6 for intel i7 and reached as much as 40% ( 345s to 206s ) . the same trend was observed for intel i5 , where the performance improvement was 43.9% ( 482s to 270s ) with decrease in @xmath6 .        in this section , we described two scenarios that utilized the integration of our power and completion time models .",
    "we explained the procedure for integrating our models and observed that as much as 15.4% power can be saved and 43.9% performance can be improved .",
    "in this paper , we proposed a power and a performance model with cpu utilization and frequency as parameters . to achieve that , we studied the power consumption trend of intel i7 , established that only the highest identified the parameters and empirically derived a power model with cpu allocation and frequency as input .",
    "we validated the power model by predicting power of 5 heterogeneous systems , with a maximum error of 7.4% .",
    "we also derived a completion time model by combining existing models that predict using cpu allocation and frequency of the system .",
    "we validated the completion time model by predicting the execution time of 10 tasks on 4 machines with a maximum error of 6.8% .",
    "we also described two scenarios where the integration of our proposed models achieved 15.4% power saving and 43.9% performance improvement while provisioning vms .",
    "they can also be applied to hpc and hadoop environments with no modifications .    for future work",
    ", we intend to extend the power model to dual or n - processor systems , encompass memory , file and network resources and propose a vm provisioning algorithm that is completion time - aware and power optimal across a cloud setup .",
    "the algorithm can also be extended to include dynamic sla requirement and reallocation of server resources power optimally ."
  ],
  "abstract_text": [
    "<S> power consumption costs takes upto half of operational expenses of datacenters making power management a critical concern . </S>",
    "<S> advances in processor technology provide fine - grained control over operating frequency and voltage of processors and this control can be used to tradeoff power for performance . </S>",
    "<S> although many power and performance models exist , they have a significant error margin while predicting the performance of memory or file - intensive tasks and hpc applications . </S>",
    "<S> our investigations reveal that the prediction error is due in part to the fact that they do not take frequency and cpu variations account , rather they just depend on the cpu by itself .    in this paper , we empirically derive power and completion time models using linear regression with cpu utilization and operating frequency as parameters . </S>",
    "<S> we validate our power model on several intel and amd processors by predicting within 2 - 7% of measured power . </S>",
    "<S> we validate our completion time model using five kernels of nasa parallel benchmark suite and five cpu , memory and file - intensive benchmarks on four heterogeneous systems and predicting within 1 - 6% of observed performance . </S>",
    "<S> we then show how these models can be employed to realize as much as 15% savings in power while delivering 44% better performance for applications deployed in a virtualized environment .    </S>",
    "<S> = 1    [ modeling and prediction ] </S>"
  ]
}
{
  "article_text": [
    "imagine that two firms wish to route traffic from a source to a destination through a shared network .",
    "any link suffers from a delay ( also called latency ) that increases with the amount of traffic that it attracts , and both firms want to minimise their own total delay .",
    "it is known ( e.g.  @xcite ) that the resulting social cost ( sum of individuals delays ) is suboptimal , even for simple networks .",
    "if for example some but not all links are privately - owned , there is a tendency for both firms to over - use the shared link , in order to relieve pressure on the privately - owned links ( catoni and pallottino  @xcite , cominetti et al .",
    "@xcite ) .    viewing this as a non - cooperative two - player game , suppose now one of the firms ( player 1 ) is `` forceful '' , and the other one ( player 2 ) is `` pliant '' .",
    "player  1 may find that it pays to over - use a shared link even more than before , provided that player  2 responds by moving some of his own traffic away from the shared link and onto player 2 s private links . as a consequence , it turns out that player  1 s total delay may fall , but player  2 s total delay increases by a greater amount , thus increasing the social cost .",
    "one way to model forceful and pliant players , is to let player 1 have _ stackelberg leadership _ :",
    "player  1 selects his strategy , namely the split of his own flow between the links available to him .",
    "then , player 2 chooses his strategy based on player 1 s choice , under the assumption that player 1 will not subsequently change his decision .    thus there may be a social cost of stackelberg leadership over and above the cost of selfish decentralised decision - making . in this paper",
    "we focus on a simple and well - known setting in which the players have access to a set of shared `` parallel links '' .",
    "note that this is more restrictive than the scenario described above in that there are no private links .",
    "we give a simple example of how selfish stackelberg leadership ( which we usually abbreviate to ssl ) may nevertheless have a positive cost in this setting , and motivated by that example , we establish an upper bound on the price of ssl .",
    "our focus is on the 2-player atomic - splittable case , with parallel links having linear latency functions . in subsection",
    "[ sec : lowerbound ] we show that if there exists a player having stackelberg leadership , then the social cost may be higher than in the nash - cournot setting .",
    "furthermore , the remaining flow may even be disadvantaged as a direct result of being controlled by a single player , rather than a wardrop flow .",
    "this situation arises in a very simple setting in which two players both have access to just two links having affine linear latency functions .",
    "this furnishes a lower bound on the price of selfish stackelberg leadership , of a multiplicative factor 1.057 .",
    "subsection  [ sec : lessthanfouroverthree ] gives our main result , a contrasting upper bound .",
    "we analyse games with two players each needing to route splittable flow through a shared network of parallel links having linear latency functions .",
    "if the latency functions are homogenous , there is no cost of ssl .",
    "however , for the case of affine latency functions , we show that the worst - case price of ssl is a multiplicative constant ( thus , independent of the number of links ) , at most @xmath0 .",
    "a large body of recent work ( initiated mainly by roughgarden and tardos  @xcite ) has studied from a game - theory perspective , how selfishness can degrade the overall performance of a system that has multiple ( selfish ) users .",
    "much of this work has focused on situations where users have access to shared resources , and the cost of using a resource increases as the resource attracts more usage .",
    "our focus here is on the `` parallel links '' network topology , also referred to as scheduling jobs to a set of load - dependent machines , which is one of the most commonly studied models ( e.g. @xcite ) .",
    "papers such as  @xcite have studied the price of anarchy for these games in the `` unsplittable flow '' setting , where each user may only use a single resource .",
    "in contrast we study the `` splittable flow '' setting of  @xcite .",
    "this version ( finitely many players , splittable flow ) was shown in  @xcite to possess unique pure nash equilibria ( see definition  [ def : ne ] ) .",
    "hayrapetyan et al .",
    "@xcite study the cost of selfish behaviour in this model , and compare it with the cost of selfish behaviour in the wardrop model ( i.e. infinitely many infinitesimal users ) .",
    "stackelberg leadership refers to a game - theoretic situation where one player ( the `` leader '' ) selects his action first , and commits to it .",
    "the other player(s ) then choose their own action based on the choice made by the leader .",
    "recent work on stackelberg scheduling in the context of network flow ( e.g.  @xcite ) , has studied it as a tool to mitigate the performance degradation due to selfish users . the flow that is controlled by the leader",
    "is routed so as to minimise social cost in the presence of followers who minimise their own costs .",
    "in contrast , here we consider what happens when the leading flow is controlled by another selfish agent .",
    "we show here that the price of decentralised behaviour goes up even further in the presence of a stackelberg leader .",
    "other papers that consider finitely many players each of which may split their flow amongst the available paths are  @xcite . christodoulou and koutsoupias  @xcite study the price of anarchy in a similar model to this work , but they consider the social cost as either the maximum cost of a player or the average of the players  costs",
    ". cominetti et al .",
    "@xcite study the price of selfish routing in the context of nash equilibria in this setting .",
    "they give examples of how the aggregation of flow into a finite number of competing firms , can introduce inefficiency to the outcome .",
    "they give bounds on how much the total nash cost can differ from the socially optimal cost .",
    "it is shown in  @xcite that in a network of parallel links with homogeneous linear latencies , wardrop equilibria , nash equilibria and system optimal flows all coincide .",
    "we show that with affine linear latencies , there is a positive cost of ssl ; also there is a positive cost for simple examples from  @xcite involving private and shared links .",
    "let @xmath1 be the number of players , and for @xmath2 , player @xmath3 has a _ flow _ @xmath4 .",
    "( in related literature , `` flow '' is sometimes called `` weight '' or `` demand '' . ) a _ strategy _ of player @xmath3 is a partition of @xmath5 amongst @xmath6 resources ( or links , available to carry flow ) , @xmath7 , where @xmath8 is the non - negative flow assigned to link @xmath9 by player @xmath3 .",
    "given total flow @xmath10 , @xmath11 denotes the portion of @xmath10 on link @xmath9 , i.e. @xmath12 . the network flow scenario being modelled has all players with a common source and common destination , connected by @xmath6 `` parallel links '' through which the players may route their flow",
    ".    for @xmath13 let @xmath14 denote link @xmath9 s latency ( or cost ) function ; this maps the load on @xmath9 to the cost of using @xmath9 .",
    "latency functions are positive and non - decreasing . in this paper , we work with linear latency functions .",
    "link @xmath9 has latency function @xmath15 , for non - negative numbers @xmath16 and @xmath17 . that functional form is an _ affine linear _ cost ;",
    "a _ homogeneous _ linear cost function takes the form @xmath18 .",
    "suppose that @xmath10 represents an allocation of flow for each agent across the available resources .",
    "for @xmath19 , @xmath11 denotes the flow on @xmath9 .",
    "it is sometimes useful to let @xmath20 denote @xmath21 , the cost of using link @xmath9 in @xmath10 .",
    "* normalisation . *",
    "we assume that links are numbered in ascending order of @xmath17 , so that for @xmath22 , @xmath23 .",
    "we will also assume throughout that @xmath24 .",
    "this is because flow distributions are unaffected by adding a constant to all the @xmath17 s ( by analogy with the common observation that the nash equilibria of a game are unaffected by adding a constant to all payoffs . )",
    "setting @xmath24 maximises ratios between alternative social costs , which is what we are interested in maximising .",
    "we mainly focus on the 2-player case .",
    "we usually assume ( by re - scaling as necessary ) that the total flow is one ( unless we explicitly state another quantity ) . in this case",
    "we let @xmath25 denote player 1 s flow , so that @xmath26 is player 2 s flow .",
    "[ def : cost ] the _ cost experienced by a player _ is the sum , over all paths used by that player , of the amount of that player s flow on that path multiplied by the cost of using that path .",
    "( that cost is of course affected by the other players choices . )",
    "thus , the cost experienced by player @xmath3 in flow @xmath10 is given by @xmath27 .",
    "the _ social cost _ is the sum of the individual players costs .",
    "note that the social cost can be expressed as the sum over all links , of the flow on that link multiplied by the cost of using that link ; @xmath28 .",
    "[ def : ne ] a _ nash equilibrium _ is a set of strategies @xmath29 such that no player can reduce his cost ( as in definition  [ def : cost ] ) by changing his own strategy .",
    "[ def : sl ] our _ selfish stackelberg leadership ( ssl ) _ solution concept is subgame perfect equilibrium : assume that player  1 is the leader ; player  1 selects his strategy and players @xmath30 form a @xmath31-player nash equilibrium with latency functions that have been modified to take into account player  1 s strategy .",
    "it is assumed that player  1 selects his strategy to minimise his own cost under that assumption on the other players . in the 2-player case studied here , player 2",
    "must make an optimal allocation of his own flow based on latency functions that have been affected by player 1 s flow allocation .",
    "suppose a finite number @xmath1 of agents want to route flow through a network .",
    "the _ price of selfish stackelberg leadership _ is the ratio between the social costs of the worst ( maximum social cost ) ssl solution that occurs when one of the agents is a leader , and the unique nash equilibrium that arises in the standard simultaneous setting .",
    "this section is organised as follows . in section",
    "[ sec : lowerbound ] we describe the simple example that gives the lower bound of @xmath32 on the multiplicative cost of selfish stackelberg leadership . in section  [ sec : socialflow ] we give some basic results about social optimal flow in this setting . in section  [ sec : properties ] we describe 2 strategies , one for each player , which have useful upper bounds on the individual costs they incur .",
    "( in particular , since they guarantee each player an individual cost at most the optimal social cost , they give an upper bound of 2 on the cost of selfish stackelberg leadership . ) in section  [ sec : fouroverthreebound ] we show that in fact they give a stronger upper bound of @xmath33 .",
    "finally , in section  [ sec : lessthanfouroverthree ] we show by dint of a more complicated analysis , and by also considering the _ aloof strategy _ of roughgarden  @xcite , an upper bound of slightly less than @xmath33 .",
    "we start our investigation of the price of stackelberg leadership by considering an example of the simplest kind of network having a cost of ssl greater than 1 .",
    "there are two players ; player  1 with a flow of @xmath34 and player  2 with a flow of @xmath35 .",
    "players want to transfer flows on a network with two parallel links .",
    "link  1 has a latency function @xmath36 and link  2 has a latency function @xmath37 .    for this network , the price of selfish stackelberg leadership is @xmath38 . in the appendix ( section  [ sec : computelowerbound ] )",
    "we evaluate the resulting solutions and explain how we optimised the constants involved to show that this is in fact the largest price of ssl that arises in the 2-link affine linear cost setting .",
    "( for non - linear latency functions we have obtained a price of ssl of @xmath39 , arising when @xmath40 and @xmath41 , and players flows are @xmath42 , @xmath43 . )      in this subsection we note some basic facts about the behaviour of social optimal flow . in  @xcite , socially optimal flow",
    "is called `` system equilibrium '' ( se ) .",
    "we let @xmath44 denote the social optimal flow .",
    "the following lemma is a special case of lemma  4.1(b ) of roughgarden and tardos  @xcite .",
    "[ socialoptimalflow ] ( roughgarden and tardos  @xcite ) for affine latency functions @xmath15 , the single - player ( socially optimal ) flow has the property that @xmath45 is the same for all links @xmath9 on which flow is routed .",
    "the lemma is a special case of lemma  4.1(b ) of roughgarden and tardos  @xcite .",
    "a proof is given in the appendix since the proof is simpler in this special case .",
    "[ factoroftwo ] if @xmath46 is the same for all @xmath9 , then note that latencies @xmath47 can not differ by a factor more than @xmath48 .",
    "one consequence of the above observation is that all latencies end up within a factor of 2 of each other ( for links that carry non - zero flow ) .",
    "[ useful ] for affine linear latencies @xmath15 , suppose links @xmath9 and @xmath49 both carry flow in @xmath44 ( recall @xmath44 denote socially optimal flow ) .",
    "assume @xmath22 and @xmath50 . then @xmath51    if @xmath9 and @xmath49 both carry flow , then we noted above that @xmath46 is the same for all @xmath9 .",
    "@xmath52    note that lemma  [ useful ] implies the fact ( shown in  @xcite ) that in the homogeneous linear case ( where all @xmath17 s are zero ) the latencies are equal in socially optimal flow .",
    "another consequence is that if a socially optimal flow is routed through a set of links , then given our assumption that links are indexed in increasing order of @xmath17 , their latencies @xmath53 are sorted in increasing order of @xmath9 ( and for links that are used , differ by half the latency difference when flow is zero ) .",
    "recall that we abbreviate selfish stackelberg leadership to ssl , and @xmath54 denotes the total flow of two players where the first player is a leader . @xmath55 and @xmath56 denote respectively the social optimal cost and the social cost in @xmath54 .",
    "the first player decides how much of his flow to be routed on each link , and commits to that decision . from player  2 s perspective , for the affine linear latency functions , the leader has essentially increased the latency functions by constants corresponding to the flow he routed on each link .",
    "so now the second player should find an optimal flow using the new latency function given by @xmath57    [ ssl2factor ] in @xmath54 , every link used by the last player has a latency at most twice the minimum latency .",
    "after player  1 plays , the new latency functions are still inhomogeneous linear .",
    "apply observation  [ factoroftwo ] .    * two strategies .",
    "* we present two simple strategies for player  1 and player  2 that can guarantee each of them an individual cost at most @xmath55 .",
    "( thus a simple combination of these results indicates that @xmath58 . )",
    "it should be pointed out that these strategies are not necessary optimal for player 1 and 2 .",
    "strategy 1:[p1_force_optimum ] the general idea is that player 1 allocates his flow @xmath59 such that when player 2 minimises his own cost , the combined flow is socially optimal . provided player 1 can achieve this , it follows immediately that player 1 s cost is at most @xmath55 , which is the total cost for both players .",
    "denote @xmath60 and @xmath61 sets of links used by the social optimal flow and player  2 respectively .",
    "player  1 s strategy to make the total flow socially optimal is to ensure that the difference between any two link latencies in @xmath62 remains the same after he has played .",
    "recall that links are indexed in increasing order of constant values , i.e. , for @xmath63 ( where @xmath64 ) .",
    "the strategy is as follows :",
    "1 .   compute the social optimal flow @xmath44 .",
    "2 .   check whether @xmath65 by checking if @xmath66 .",
    "player  1 fills up all the links in @xmath67 to the level of what should occur in @xmath44 : @xmath68 for every link @xmath9 in @xmath67 .",
    "player  1 splits the remainder of his flow among all the links in @xmath62 such that every links is increased with the same amount of latency : @xmath69 for every link @xmath70 .",
    "strategy 2 : [ p2_find_optimum ] we consider the following strategy for player  2 :    1 .",
    "compute the social optimal flow ( for total flow of both players ) @xmath44 .",
    "2 .   in link @xmath9 , if @xmath71 , player  2 increases the flow on @xmath9 to the @xmath44 level . if @xmath72 for every link @xmath9 .    with this strategy , if on every link player  1 routes less flow than the social optimal flow then player  2 just makes up the difference .",
    "if there are some links that player  1 routes more than the social optimal flow then there is enough room on the remaining links for player  2 to use those without making their flow more than the social optimal flow .      with those strategies we give an upper bound on player  1 s cost and player  2 s cost in the following two lemmas .",
    "[ p1_bound ] let @xmath73 be the minimal latency of links under the socially optimal flow @xmath44 . in the ssl setting with linear cost functions , player",
    "1 s cost is at most @xmath74 , where @xmath25 is player 1 s flow , out of a total flow of 1 .",
    "applying strategy  1 , player  1 causes the combined flow to be socially optimal flow @xmath44 . in that scenario ,",
    "player  1 s cost is @xmath55 minus player  2 s cost which is at least all of player 2 s flow @xmath75 multiplied by the minimal latency @xmath73 , i.e. @xmath76 .",
    "hence player  1 s cost is at most @xmath77 .",
    "( it is of course possible that player 1 could do better by not using strategy 1 . )    in addition , player  1 s cost can not be any higher than the cost of him putting all of his flow of @xmath25 on the maximal latency links .",
    "furthermore , from observation [ factoroftwo ] , the maximal latency is at most @xmath78 for links that get used .",
    "hence player  1 s cost is at most @xmath79 .",
    "combining those two results , we have player  1 s cost is at most @xmath80 .",
    "[ p2_bound ] let @xmath73 be the minimal latency of links under the socially optimal flow @xmath44 . in the ssl setting with linear cost functions , player",
    "1 s cost is at most @xmath81 , where @xmath25 is player 1 s flow , out of a total flow of 1 .",
    "applying strategy  2 , player  2 s cost is at most @xmath55 minus player",
    "1 s cost which is minimised when all player  1 s flow is on the minimal latency links .",
    "hence player  2 s cost is at most @xmath82 .",
    "( it is of course possible that player 2 could do better by not using strategy 2 . )",
    "moreover because player  2 s cost is maximised when all player  2 s flow is in the maximal latency links and , for latencies of links that get used , the maximal latency is at most twice the minimal latency , player  2 s cost is at most @xmath83 .    combining those results",
    ", we essentially have @xmath84 .",
    "[ fouroverthreebound ] in a two - player network model with non - decreasing linear latency functions , the price of ssl is at most 4/3 .",
    "recall that @xmath73 denotes the minimal latency of a link in flow @xmath44 .",
    "note that with one unit of flow in total ( which we assured by rescaling as necessary ) @xmath85 $ ] .",
    "( using observation  [ factoroftwo ] . )",
    "first consider when @xmath86 . in this case , from lemma  [ p1_bound ] and [ p2_bound ] , @xmath87 and @xmath88 .",
    "thus @xmath56 is at most @xmath89 .",
    "hence the ratio between @xmath56 and @xmath55 is bounded by @xmath90    next suppose @xmath91 . then @xmath92 and @xmath93 .",
    "thus @xmath94 is at most @xmath95 .",
    "hence the the ratio between @xmath56 and @xmath55 is at most @xmath96    applying this approach we can bound the price of ssl in more detail , in terms of the ratio between the social optimum cost and the minimum latency , or player 1 s flow @xmath25 .",
    "let @xmath97 where @xmath98 . then    * if @xmath99 then the price of selfish stackelberg leadership @xmath100 ; * if @xmath101 then the price of selfish stackelberg leadership @xmath102 .",
    "[ cseawayfromthreehalf ]    when @xmath103 then @xmath104 .",
    "hence the price of ssl is upper bounded by @xmath105    next suppose @xmath106 then @xmath107 .",
    "hence the price of ssl is upper bounded by @xmath108    let @xmath109 where @xmath110 then :    * if @xmath111 then the price of selfish stackelberg leadership @xmath112 . *",
    "if @xmath113 then the price of selfish stackelberg leadership @xmath114 .",
    "[ awayfromonehalf ]    if @xmath115 then @xmath116 ( note from lemma  [ p1_bound ] and [ p2_bound ] , @xmath117 and @xmath118 ) .",
    "it was shown in the proof of theorem  [ fouroverthreebound ] that the price of ssl is maximised when @xmath119 .",
    "hence the upper bound of the the price of ssl is given by @xmath120    if @xmath121 then @xmath122 ( note @xmath123 and @xmath124 ) .",
    "hence the price of ssl is upper bounded by @xmath125      we prove an upper bound on the price of ssl of less than 4/3 . to do that we improve the upper bound for player  1 s cost in lemma  [ p1_bound ] in which player  1 s cost is bounded under the pessimistic assumption that in a situation where he creates the social optimal flow it is possible for all of player  1 s flow to get the maximal latency and all of player  2 s flow to get the minimal latency .",
    "now let us define the following property that a socially optimal flow may or may not have , depending on the latency functions of the links .",
    "the case analysis used in what follows is based on the property , called the _ diverse latency property_.    we say that a socially optimal flow @xmath44 has the _ diverse latency property _ ( dlp ) if at least 1/4 of the flow gets a latency of at most @xmath126 and at least 1/4 of the flow gets a latency of at least @xmath127 .",
    "we start by proving an upper bound in the case that the dlp is satisfied , then we use an alternative proof in the case that it is not satisfied .",
    "when the dlp is satisfied , instead of using strategy 1 , we apply a strategy called the _ aloof _",
    "strategy  @xcite that corresponds more with what selfish player  1 would do .",
    "aloof strategy : ( roughgarden  @xcite ) : player  1 routes @xmath59 optimising his cost in player  2 s absence : compute the socially - optimal flow for a total flow volume of @xmath59 .",
    "[ p1_bound_hold ] if the dlp is satisfied by @xmath44 , then player  1 s cost is at most @xmath128 where @xmath109 .",
    "let @xmath129 and @xmath130 be the sets of links whose latencies in @xmath44 are at most @xmath126 and at least @xmath127 respectively .",
    "note that we refer to the latency of @xmath129 ( respectively , @xmath130 ) to mean the maximal latency of links in those sets .",
    "we will assume in this proof that player  1 uses the aloof strategy .",
    "we exploit the fact that when the dlp holds , player 1 gets a better performance using the aloof strategy instead of strategy 1 described earlier .",
    "using the dlp assumption and lemma  [ useful ] , the difference between the values @xmath131 ( i.e. the marginal costs of links when flow is zero ) in @xmath130 and @xmath129 is at least 2 times the difference between the minimal latency in @xmath130 and the maximal latency in @xmath129 , i.e. @xmath132 .",
    "next we consider @xmath54 . with the aloof strategy ,",
    "after player  1 has played , the latency difference between @xmath130 and @xmath129 is at least half the difference between the value @xmath131 in @xmath130 and the value @xmath131 in @xmath129 .",
    "hence the latency difference is at least @xmath133 .",
    "thus if player  1 uses @xmath130 then the latency of @xmath130 minus the latency of @xmath129 after player  1 has played is at least @xmath134 . and",
    "if player  1 does not use @xmath130 then the difference is higher than @xmath134 .",
    "essentially this implies that in player  2 s perspective the fixed cost in @xmath130 is at least @xmath134 more than that in @xmath129 . by lemma  [ ssl2factor ] and observation  [ factoroftwo ] , there is not enough flow in total for the latency in @xmath135 of links used by either player to be @xmath136 .",
    "therefore the latency in @xmath129 after player  2 has played is at most @xmath137 .    with the dlp assumption , because there is at least @xmath138 of the total flow in @xmath129 , player  1 is guaranteed to have at least @xmath138 of his flow in @xmath129 .",
    "hence player  1 s cost is at most @xmath139 .    for the case",
    "when the dlp is not satisfied , we prove the following upper bound on player  1 s cost .",
    "[ p1_bound_not_hold ] if in @xmath44 at most @xmath138 of the flow gets a latency of at most @xmath126 or at most @xmath138 of the flow gets a latency of at least @xmath127 then player  1 s cost is at most @xmath140 .",
    "if player  1 uses strategy 1 , he can ensure that the combined flow is socially optimal . in that scenario ,",
    "player  1 s cost is at most the social optimal cost minus player  2 s cost which is lowest when all player 2 s flow @xmath75 gets the latency of @xmath73 .",
    "however , noting the first alternative of the given assumption , suppose at most @xmath138 of the total flow gets latency @xmath73 , and the rest gets at least @xmath126 .",
    "hence player  1 s cost is at most @xmath141 .",
    "alternatively player  1 s cost is maximised when all of @xmath59 is in maximal latency links .",
    "however , from the second alternative of the given assumption , only @xmath138 of the flow gets the latency more than @xmath127 and the rest of the flow gets the latency of at most @xmath127 . hence player",
    "1 s cost can be at most @xmath142 .    in a two - player model with non - decreasing linear latency function ,",
    "the price of selfish stackelberg leadership is at most 1.322 .",
    "we identify the scope we should restrict our attention to .",
    "lemma  [ awayfromonehalf ] shows that if @xmath109 then the upper bound improves to @xmath143 if @xmath115 and @xmath144 if @xmath121 .",
    "hence we only consider @xmath145 $ ] since lemma  [ awayfromonehalf ] gives the upper bound of less than 1.322 for @xmath25 outside this range .",
    "similarly we only consider @xmath55 in the range @xmath146 $ ] since lemma  [ cseawayfromthreehalf ] suggests the price of less than 1.322 outside this range .    from lemma  [ p2_bound ] , player",
    "2 s cost is at most @xmath147 . for player  1 s cost",
    ", we have two upper bounds , one for when the dlp holds and the other for when the dlp does not hold .    first , when the dlp is satisfied , we have the upper bound on player  1 s cost of @xmath128 from lemma  [ p1_bound_hold ] . combining with player  2 s cost ,",
    "the price of ssl is upper bounded by @xmath148    second , when the dlp is not satisfied , player  1 s cost is upper bounded by @xmath149 . within this proof ,",
    "we use ( 1 ) and ( 2 ) to denote the expressions @xmath150 and @xmath151 respectively .",
    "thus the upper bound for player  1 s cost can be represented with @xmath152 .",
    "we prove the upper bound by exhaustive case analysis as follows :    1 .",
    "suppose @xmath86 , we consider @xmath25 : * suppose @xmath121 : in this scenario @xmath153 .",
    "hence the price of ssl is upper bounded by : @xmath154 * suppose @xmath115 : now we have player  2 s cost @xmath155 , but player  1 s cost is still at most @xmath156 .",
    "the upper bound on the price of ssl can be considered in two cases : 1 .",
    "@xmath157 ; the price is at most @xmath158 , @xmath159 2 .   or @xmath160 ; the price is at most @xmath161 , @xmath162 2 .",
    "suppose @xmath91 , we consider @xmath25 : * suppose @xmath121 : in this condition we have player  2 s cost is at most @xmath163 .",
    "hence the upper bound of the price of ssl can be considered in two cases : 1 .",
    "@xmath157 ; the price is at most @xmath164 , @xmath165 2 .   or",
    "@xmath160 ; the price is at most @xmath166 , @xmath167 * suppose @xmath115 : in this condition @xmath168 .",
    "hence the price of ssl is upper bounded by : @xmath169    therefore , when the dlp is not satisfied , we have shown that the price of ssl is less than 1.322 .",
    "we have shown that the worst - case price of selfish stackelberg leadership is a multiplicative constant that is independent of the number of links in a parallel - links network .",
    "furthermore we have identified quite a narrow range for that constant , namely @xmath170 $ ] . for non - linear latency functions , we have slightly larger lower bounds on the price of ssl , as noted in section  [ sec : lowerbound ] .",
    "the upper bound of 2 that we noted in section  [ sec : properties ] seems to apply in this case , provided that we have a network of shared parallel links .",
    "it is possible that for parallel links , the worst - case arises for a 2-link network ( by analogy to  @xcite ) .",
    "perhaps the main question to ask is whether there is a more dramatic cost ( perhaps depending on the size of the network ) in the setting of more general networks .",
    "one alternative line of work is investigating the price of ssl in a model of one selfish splittable leader and the rest of the players each with a negligible fraction of the flow ( a wardrop flow ) .",
    "we believe that there is no price of ssl in this setting since the ssl solution is essentially the same as nash equilibrium .    99    b.  awerbuch , y.  azar and a.  epstein .",
    "the price of routing unsplittable flow . _ in stoc _ , pp .",
    "57 - 66 ( 2005 ) .",
    "s.  catoni and s.  pallottino .",
    "traffic equilibrium paradoxes .",
    "_ transportation science _ , vol .",
    "35 , no .  2 , pp .  240 - 244 , august 1991 .",
    "g.  christodoulou and e.  koutsoupias .",
    "the price of anarchy of finite congestion games .",
    "_ proceedings of 37th stoc _ ,",
    "pp .  67 - 73 , may 2005 .",
    "r.  cominetti , j.r .  correa and n.e .",
    "stier - moses .",
    "network games with atomic players . in _ icalp _ , ( 2006 ) .",
    "j.r .  correa and n.e .",
    "stier - moses .",
    "stackelberg routing in atomic network games .",
    "( february 2007 ) .",
    "columbia working paper no .",
    "dro-2007 - 03 available at ssrn : http://ssrn.com/abstract=987115    a.  czumaj and b.  vcking .",
    "tight bounds for worst - case equilibria .",
    "_ proceedings of 13th soda _ , pp .  413 - 420 , january , 2002 .",
    "a.  fabrikant , c.h .",
    "papadimitriou and k.  talwar .",
    "the complexity of pure nash equilibria .",
    "_ proceedings of 36th stoc _ pp .  604 - 612 , jun 2004 .",
    "s.  fischer , h.  rcke and b.  vcking .",
    "fast convergence to wardrop equilibria by adaptive sampling methods . in _",
    "38th stoc _ , ( may 2006 ) .",
    "i.  gilboa and e.  zemel .",
    "nash and correlated equilibria : some complexity considerations . _ games and economic behavior _ , ( 1989 ) .",
    "a.  hayrapetyan , e.  tardos and t.  wexler .",
    "the effect of collusion in congestion games .",
    "_ proceedings of 38th stoc _ pp .  89 - 98 , may 2006 .",
    "y.  korilis and a.  lazar and a.  orda .",
    "capacity allocation under noncooperative routing .",
    "_ ieee trans .  on automatic control _",
    "( 42 ) , pp .",
    "309325 , march 1997 .",
    "e.  koutsoupias and c.h .",
    "papadimitriou . worst - case equilibria . in _ procs .",
    "16th stacs _ , ( 1999 ) , lncs vol .",
    "1563 pp .",
    "404 - 413 .",
    "m.  mavronicolas and p.  spirakis .",
    "the price of selfish routing . _ in proceedings of 33rd stoc _ , pp .",
    "510 - 519 , hersonissos , greece , ( 2001 ) .",
    "a.  orda , r.  rom and n.  shimkin .",
    "competitive routing in multiuser communication networks .",
    "_ ieee / acm trans .  on networking _ 510 - 521 ( 1993 ) .",
    "existence and uniqueness of equilibrium points for concave n - person games .",
    "_ econometrica _ , 520 - 534 ( 1965 ) .",
    "t.  roughgarden .",
    "selfish routing with atomic players . in _ soda 16",
    "1184 - 1185 ( 2005 ) .",
    "t.  roughgarden .",
    "the price of anarchy is indepedent of the network topology . _",
    "j.  comput .",
    "67(2 ) 341 - 364 ( 2003 ) .",
    "t.  roughgarden .",
    "stackelberg scheduling strategies .",
    "_ siam journal on computing _",
    "33(2 ) , pp .  332 - 350 ( 2004 ) .",
    "t.  roughgarden .",
    "_ selfish routing and the price of anarchy_. mit press ( 2005 ) .",
    "t.  roughgarden and  .",
    "how bad is selfish routing ? .",
    "49(2 ) , pp .  236 - 259 ( 2002 ) .    c.  swamy .",
    "the effectiveness of stackelberg strategies and tolls for network congestion games .",
    "_ procs .",
    "of soda _ , pp .",
    "1133 - 1142 ( 2007 ) .",
    "consider the network depicted in  figure  [ fig1 ] , studied in  @xcite .",
    "there are two origin / destination pairs , @xmath171 and @xmath172 .",
    "@xmath11 is the flow on edge @xmath9 .",
    "the ( affine linear ) cost functions considered in  @xcite associated with the links are : @xmath173        1 .",
    "socially optimum flow ( system equilibrium(se ) ) : social cost is 566550 . 2 .",
    "wardrop equilibrium with infinitely many infinitesimal users ( in  @xcite , the `` user equilibrium '' ( ue ) ) : social cost is 567000 . 3 .",
    "nash equilibrium ( @xmath171-player is atomic ; @xmath172-player is wardrop ) : social cost is 572400 .",
    "nash equilibrium ( both players are atomic ) : social cost is 576404 .    for this example from  @xcite ,",
    "the cost of ssl is greater than 1 .",
    "if the @xmath171-player is atomic and a selfish stackelberg leader , the social cost is 580032 if the @xmath172-player is atomic .",
    "if the @xmath172-player is a wardrop flow , the social cost turns out to be 583538  the leader is able to force even more of the remaining flow onto link 7 .",
    "cominetti et al .",
    "@xcite show that for this network topology there is a price of anarchy for _ homogeneous _ latency functions .",
    "they consider an example where the @xmath171 and @xmath172 players have flows of 2 and 3 respectively , and edges have latencies @xmath36 , @xmath174 , @xmath175 . the optimal ( balanced ) flow has cost 10 and the nash equilibrium has cost approximately @xmath176 .",
    "if the @xmath171-player has stackelberg leadership then the cost is @xmath178 ( his flow on link 1 is @xmath179 , flow of follower on link 7 is @xmath180 ) and if the @xmath172-player has stackelberg leadership the cost is @xmath181 ( flow of @xmath171-player on link 1 is @xmath182 , of @xmath172-player on link 7 is @xmath183 ) .      consider a 2-node , 2-parallel - link network , in which the first link has latency function @xmath184 and the second link has latency function @xmath185 .",
    "let us suppose that the leader has flow @xmath186 unit and the follower has flow @xmath187 unit to be routed",
    ". then if the follower is splittable player , the stackelberg equilibrium is @xmath188 as a result of that the leader gets the cost of @xmath189 ; and the follower gets the cost of @xmath190 .",
    "if the follower is a collection of infinitely many players each controlling a negligible fraction of the flow , the stackelberg solution is @xmath191 which incurs the leader s cost of @xmath192 , and the follower s cost of @xmath193 .      standard nash equilibrium .",
    "players 1 and 2 solve the problems @xmath194 and @xmath195 accordingly , where @xmath196 is the cost to player @xmath3 . in this proof",
    "we assume player  1 s flow is 1 and player  2 s flow is @xmath197 .",
    "player  1 solves an optimisation problem @xmath194 .",
    "cost with selfish stackelberg leadership ( ssl ) .",
    "player  1 selects his action in the game first .",
    "he predicts what player  2 will do by solving @xmath195 in terms of his own flows , and chooses his own flows to minimise his own cost under that assumption .",
    "again , this can be solved algebraically by finding expressions for @xmath205 and @xmath200 in terms of @xmath206 and @xmath199 , plugging these expressions into  ( [ c1expression ] ) , and minimizing over @xmath206 and @xmath199 .",
    "the social cost with ssl is given by @xmath207          the solutions : the standard nash solution has @xmath218 ; @xmath219 .",
    "the ssl solution has @xmath220 ; @xmath221 ; player  1 ( the leader ) has forced player  2 to displace some of his flow onto link 2 .",
    "if player  2 is a wardrop flow , solutions to both versions have @xmath218 ; @xmath219 ( the same as the standard nash solution )  thus player  2 is better off as a wardrop flow , than as a `` coalition '' of the infinitesimal users that constitute a wardrop flow .",
    "there is no cost to stackelberg leadership in the special case of symmetric access to parallel links having homogeneous linear costs .",
    "furthermore the nash equilibrium is the same as in the standard cournot setting .",
    "\\bigl(\\ell_j    ( f_j     - \\epsilon ) - \\ell_j    ( f_j)\\bigr ) + f_{j'}.\\bigl(\\ell_{j'}(f_{j ' }    + \\epsilon ) - \\ell_{j'}(f_{j'})\\bigr ) - \\epsilon.\\ell_j(f_j - \\epsilon ) + \\epsilon.\\ell_{j'}(f_{j'}+\\epsilon ) .",
    "\\end{array}\\ ] ]"
  ],
  "abstract_text": [
    "<S> we study a class of games in which a finite number of agents each controls a quantity of flow to be routed through a network , and are able to split their own flow between multiple paths through the network . </S>",
    "<S> recent work on this model has contrasted the social cost of nash equilibria with the best possible social cost .    here we show that additional costs are incurred in situations where a selfish `` leader '' agent allocates his flow , and then commits to that choice so that other agents are compelled to minimise their own cost based on the first agent s choice . </S>",
    "<S> we find that even in simple networks , the leader can often improve his own cost at the expense of increased social cost . </S>",
    "<S> focussing on the 2-player case , we give upper and lower bounds on the worst - case additional cost incurred . </S>"
  ]
}
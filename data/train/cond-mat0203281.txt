{
  "article_text": [
    "many questions of practical or scientific interest are based on combinatorial optimization problems whose numerical solution requires time resources growing exponentially with the system size , or more precisely , with the number of binary variables needed to encode the problem .",
    "these include examples like planning and scheduling problems in various real - world applications , optimization of chip design , cryptografic systems in computer science , or glassy systems and random structures in physics .",
    "all these problems are characterized by a non - trivial cost function , or energy , which has to be minimized over a large set of discrete degrees of freedom .",
    "the hardest of these optimization problems are collected in a class called _ np - hard _ @xcite .",
    "hardness refers in this context to the exponential growth of the computational resolution time which is observed for all known numerical algorithms . despite an extremely large number of known np - hard problems , and numerous approaches to solve them ,",
    "no algorithms could be constructed by now which are able to solve such a problem in a time growing only polynomially with the system size .",
    "this point supports the widespread conjecture , that no such effective algorithms are constructible .    the numerical search for globally optimal solutions is thus restricted to relatively small systems .",
    "once one has to solve larger systems , good polynomial - time algorithms are needed which construct low - cost configurations .",
    "these are not guaranteed to be optimal , but in many cases they can serve as reasonable approximations @xcite . many of these algorithms are based on heuristic considerations , e.g. on expected correlations between local structures of the specific problem instance and its optimal solutions . exploiting these correlations can largely improve the performance of a heuristic procedure .",
    "here we are using the example of vertex covers ( vc ) on random graphs .",
    "it belongs to the basic np - hard problems @xcite and can be considered as a prototype optimization problem over a random structure . in every step of the presented heuristic algorithms , a vertex and possibly some environment is chosen randomly and covered locally optimal .",
    "the local structure of the graph , in particular its vertex - degree distribution ( distribution of co - ordination numbers ) , can be exploited : vertices of high degree are more likely to be covered , those of small degree are more likely to remain uncovered .",
    "we are using random graphs in order to get some information about the _ typical - case _ behaviour of the algorithm .",
    "this is to be contrasted with the worst - case picture used in the traditional theory of computational complexity @xcite .",
    "the study of heuristic algorithms is also interesting from a more theoretical point of view .",
    "many randomized optimization or decision problems show characteristic phase transition , when the parameters of the randomness are tuned , see e.g. the special issues @xcite for an overview .",
    "the analysis of algorithms is frequently used in theoretical computer science to construct bounds for these phase transitions , for some examples see e.g. @xcite and references therein . a different approach to these transitions",
    "is given by applying techniques from equilibrium statistical mechanics , as was done successfully for some of the fundamental combinatorial problems like 3-satisfiability @xcite , number partitioning @xcite , or also vertex cover @xcite .",
    "this paper is organized as follows : in section [ sec : model ] , we introduce the definition of vertex covers and independent sets , present the algorithms and review some important facts on random graphs .",
    "the general dynamical equations for the graph evolution process are developed in section [ sec : dynamics ] , and they are solved for some cases in section [ sec : linear ] .",
    "section [ sec : nonlinear ] is dedicated to approximations of the dynamical behaviour of cases which could not be solved exactly . in section [ sec : leaf ] , we present how the leaf - removal algorithm of bauer and golinelli @xcite fits into the presented scheme .",
    "it is also generalized to cases where the original algorithm fails to construct a vertex cover .",
    "the last section finally summarizes the results and gives an outlook to possible extensions .",
    "let us start with the definition of vertex covers @xcite :    take any graph @xmath0 with @xmath1 vertices @xmath2 and @xmath3 undirected edges @xmath4 .",
    "vertex cover _",
    "( vc ) is a subset @xmath5 of vertices such that for every edge @xmath6 there is at least one of its endpoints @xmath7 or @xmath8 in @xmath9 : @xmath10 we call the vertices in @xmath9 covered ( _ cov _ ) , whereas the vertices in its complement @xmath11 are called uncovered ( _ uncov _ ) . the definition of a vertex cover implies therefore that every edge has at least one covered end - point",
    ".    the full vertex set @xmath12 is of course a trivial vertex cover of any graph @xmath13 . in this case , all edges have two covered end - points , and at least some of the vertices can be set _",
    "uncov _ without uncovering any edge .",
    "the corresponding _ optimization problem _ consists in finding a vertex cover of smallest cardinality . this problem belongs , according to the standard book by garey and johnson @xcite , to the basic np - hard optimization problems .",
    "therefore , it is expected to require a solution time growing exponentially in @xmath1 and @xmath3 .",
    "the numerical solvability is consequently restricted to relatively small graphs .",
    "vc is related to other well - known and widely used np - hard problems .",
    "the first one is the _ independent set _ ( is ) problem .",
    "an is is a subset @xmath14 of vertices such that for all @xmath15 we have @xmath16 .",
    "so @xmath17 is obviously a vc for every is @xmath18 , and every maximal is is the complement of a minimal vc .",
    "the _ independence number _ , defined as the maximal cardinality max@xmath19 of all iss , is consequently given by @xmath20 .",
    "a _ clique _ is a fully connected subgraph .",
    "so , if the vertex subset @xmath14 is an is in @xmath0 , it is a clique in the complementary graph @xmath21 .",
    "finding the largest clique in one graph is equivalent to finding the largest independent set in the complementary graph .",
    "there is also a physical problem which is equivalent to vertex cover , or more obviously to the independent set problem .",
    "imagine the graph @xmath13 to be a lattice , and pack hard spheres of chemical radius 1 onto the vertices .",
    "then , once a vertex is occupied by such a particle , all neighbouring vertices have to be empty .",
    "this is exactly what defines an is .",
    "the vertices which are not occupied by spheres thus form a vc .",
    "this equivalence provides the basis of the statistical mechanics approach to minimal vertex covers on random graphs @xcite .",
    "as already mentioned , the construction of a minimal vertex cover is np - hard , thus requiring exponential time resources .",
    "it is therefore reasonable to develop good approximation algorithms running in polynomial time .",
    "here we describe a class of linear time heuristic algorithms which are able to produce small , but in general suboptimal vcs .    in this algorithm , vertices are sequentially assigned the values _",
    "cov _ and _ uncov _ until the full graph is covered .",
    "an assigned value is not changed any more .",
    "this can be interpreted as a graph reduction process : once a vertex is covered , it can be removed from the graph , together with all incident edges . if a vertex is set _ uncov _ , all its neighbours have to be covered in order to cover the graph .",
    "the central vertex , its neighbours and all covered edges can again be removed from the graph .",
    "the graph thus becomes smaller and smaller , until no edges are left .",
    "the size of the resulting vertex cover crucially depends on the order of the vertex selection and the decision to cover / uncover the selected vertex .",
    "the main heuristic idea is simple : a vertex of high degree is more likely to be covered , a vertex of small degree is more likely to be uncovered @xcite . the simplest local information , namely the vertex degree , is thus correlated to the structure of small vertex covers , and can be exploited algorithmically .",
    "this is done in the following way : given an initially uncovered graph @xmath0 and a non - negative integer @xmath22 , which we call the _ depth _ of the algorithm . in every algorithmic step a vertex @xmath7",
    "is chosen randomly , and its nearest , 2nd - nearest ... and @xmath22th - nearest neighbours are selected .",
    "all these vertices , together with all edges connecting two of it , form the induced subgraph @xmath23 .",
    "this subgraph can be efficiently covered such that all @xmath22th nearest neighbours are set to _",
    "cov_. for details see the algorithm presented below .",
    "the full subgraphs , together with all edges connecting it to other vertices , is deleted from @xmath13 .    for locally tree - like graphs ,",
    "as e.g. random graphs or bethe lattices , the vertex covers of @xmath24 are especially simple : the @xmath22th neighbours of @xmath7 are covered , the @xmath25st are uncovered , the @xmath26nd are covered again , and so on , until @xmath7 itself is covered ( uncovered ) for even ( odd ) depth @xmath22 of the algorithm .",
    "the main heuristic concerns now the question , how the central vertex @xmath7 is selected .",
    "it exploits the above - mentioned correlation between vertex degree and covering state of an arbitrary vertex . for even depth @xmath22 , the central vertex",
    "is covered by the above procedure @xcite .",
    "so it is useful to choose more frequently vertices of high degree in the subgraph remaining after elimination of already considered vertices .",
    "we therefore select a vertex of degree @xmath27 with some weight @xmath28 which is a monotonously growing function of @xmath27 .    in the case of odd @xmath22 , the central vertex",
    "is uncovered @xcite . here , the selection weight @xmath28 for vertices has to be a monotonously decreasing function of the vertex degree @xmath27 .",
    "the algorithm is summarized as follows , inputs are the graph @xmath0 , the non - negative integer depth @xmath22 , a mapping @xmath29 , which is constantly set to @xmath30 initially , and the positive weight function @xmath31 :    = = = = = = heuristic - vc(@xmath32 ) + * begin * + @xmath33 * then * + ; \\{all edges are covered by vertices with @xmath34 } + select a vertex @xmath35 of current degree @xmath36 randomly with weight @xmath37 ; + @xmath38 +   + @xmath39 ; + @xmath40 ; + heuristic - vc(@xmath32 ) ; + ; +   +   + @xmath41 ; +   + @xmath42 ; + @xmath43 ; + @xmath44 ; + @xmath45 ; + @xmath46 for all @xmath22th neighbours of @xmath7 ; + @xmath47 +   + select a vertex @xmath48 of maximal distance from @xmath7 ; + @xmath49 ; + @xmath50 for all neighbours @xmath51 of @xmath8 ; + @xmath52 ; + ; \\{subgraph covered and removed from @xmath13 } + heuristic - vc(@xmath32 ) ; + ; + * end * ; +    please note that the degree of free vertices may change whenever @xmath13 is reduced .",
    "the algorithm always considers the current degree in the reduced subgraph , which equals the number of uncovered incident edges .",
    "the algorithm therefore defines a markov process .",
    "some special cases of the algorithm where already considered for finite connectivity random graphs : in @xcite , the case @xmath53 and @xmath54 was included into a complete backtracking algorithm .",
    "the upper bound for the minimal vertex covers constructed in this way was rather poor , but it will be improved in sections [ sec : linear ] and [ sec : nonlinear ] by using better @xmath28 .",
    "the case of @xmath55 was analyzed in @xcite using a different technique .",
    "whereas being also quite unsatisfactory for small and intermediate average graph connectivities @xmath56 , this algorithm correctly reproduces the leading asymptotic behaviour for large @xmath57 . in @xcite ,",
    "very surprising results where obtained for @xmath58 , where only vertices of degree 1 ( leafs ) are selected and uncovered , their neighbour is covered , and both are removed from the graph .",
    "this algorithm is able to cover almost all edges for @xmath59 , thus producing a minimal vertex cover , but it stops for higher connectivities if no vertices of degree 1 are left , even if an extensive number of edges remains uncovered .",
    "these two results suggest a promising generalization for the case @xmath60 : if we choose @xmath61 for all @xmath62 , this algorithm will work nearly as well as the leaf removal procedure for small connectivities , but it will also give the correct asymptotic behaviour for large @xmath57 .",
    "the extreme case of choosing always a vertex of smallest current degree will work best on random graphs , but it goes beyond the analysis presented in this paper .      in order to gain some insight into the typical behaviour of this algorithm",
    ", we apply it to random graphs .",
    "this subsection is dedicated to summarizing some interesting known results about these graphs , as far as they are important for our analysis . as can be expected from the algorithm presented above",
    ", we will concentrate our attention to the distribution of vertex degrees . for a complete presentation see @xcite .",
    "the original idea @xcite is to assign an equal probability to all graphs having the same numbers @xmath1 of vertices and @xmath3 of edges .",
    "a random graph @xmath63 , with @xmath64 , is constructed in the following way : the vertex set is chosen to be @xmath65 . for all vertex pairs @xmath66 an edges is included into @xmath67 with probability @xmath68 .",
    "the two vertices remain disconnected by a direct edge with probability @xmath69 .",
    "this graph has on average @xmath70 edges , its mean vertex degree equals @xmath71 .",
    "the most interesting case for vertex covers are graphs of finite average connectivity , i.e. the average vertex degree @xmath56 stays finite in the thermodynamic limit @xmath72 . in the above language , we have to fix @xmath73 .",
    "the resulting degree distribution is far from uniform . for @xmath74 ,",
    "a randomly chosen vertex has degree @xmath27 with probability @xmath75 i.e. the degree distribution approaches a poissonian in the thermodynamic limit . in our analysis",
    "we also need the probability of finding a vertex of degree @xmath27 by following an arbitrary edge .",
    "it is obviously proportional to @xmath76 , due to normalization we have @xmath77 we thus find a poissonian distribution of @xmath78 .",
    "the average degree of vertices reached by following an edge equals @xmath79 , so there are on average @xmath57 additional edges .",
    "random graphs undergo a percolation transition at average vertex degree @xmath80 . below this threshold ,",
    "the graph consists of an extensive number of small connected components , each containing up to @xmath81 vertices . for @xmath82 ,",
    "the number of small connected components of @xmath83 is still extensive , but there is also one macroscopic connected component of @xmath84 vertices .",
    "this giant component grows with increasing @xmath57 , and exponentially approaches size @xmath1 when @xmath57 becomes large .",
    "the concept of random graphs was recently generalized to random graphs of arbitrary degree distribution @xcite . there",
    ", every graph of a given distribution @xmath85 ( not necessarily a poissonian ) is assigned the same probability .",
    "these graphs can be easily generated : for all vertices @xmath86 , a degree @xmath36 is drawn randomly from @xmath85 .",
    "if @xmath87 is even , we continue , if not , we repeat the above procedure .",
    "then a large vertex set is created , containing every vertex @xmath7 exactly @xmath36 times .",
    "now we sequentially select pairs of vertices and add these to the edge set @xmath67 , excluding only self - connections .",
    "following again an edge , the reached vertex has degree @xmath27 with probability @xmath88 , with @xmath89 denoting the average degree .      before analysing the behaviour of the presented heuristics",
    ", we will give a short overview over known properties of minimal vertex covers on random graphs , see @xcite for the original presentation .",
    "the analysis there was carried out for random graphs @xmath90 , using the mapping to a hard - sphere lattice gas described in subsection [ sec : vc ] . using the replica method ,",
    "a grand - canonical approach was taken , including a chemical potential @xmath91 controlling the number of hard spheres . in the limit @xmath92",
    ", the system tends to the closest packings , or , equivalently , to the minimal vertex covers .",
    "assuming the validity of replica symmetry , it was found that minimal vcs contain a fraction of vertices given by @xmath93 with @xmath94 being the real branch of the lambert - w function defined as the inverse of @xmath95 .",
    "it was also shown , that replica symmetry is locally stable for @xmath96 , whereas it is unstable for larger average connectivities , leading to broken replica symmetry .",
    "the correctness of ( [ eq : minvc ] ) was recently shown to be exact in @xcite based on a leaf - removal algorithm , which , as mentioned above , can be understood as a variant of heuristic - vc .",
    "an interesting insight into the structural properties of minimal vertex covers was given by identifying a covered and an uncovered _ backbone_. the first one is defined as the set of all vertices which are covered in all minimal vcs , the uncovered backbone unifies all vertices being _ uncov _ in all minimal vcs .",
    "denoting their relative sizes by @xmath97 , the replica symmetric analysis leads to @xmath98 the remaining @xmath99 vertices belong neither to the covered nor the uncovered backbone , they change the covering state from one minimal vc to the next .",
    "a strong correlation between degree distribution and backbone was observed : vertices of small degree tend to be more frequently in the uncovered backbone , whereas vertices of high degree can be found more likely in the covered backbone .",
    "as mentioned in subsection [ sec : algo ] , this can be exploited in the heuristic algorithm by adapting the selection weights .",
    "we assume that the input to the algorithm heuristic - vc is a random graph @xmath0 with @xmath1 vertices and degree distribution @xmath85 , and we concentrate on the graph reduction process for a moment .",
    "the size of the constructed vertex cover will be calculated in subsection [ sec : vcsize ] .    in every algorithmic step ,",
    "a vertex is selected with weight @xmath28 depending only on its current degree @xmath27 .",
    "then , this vertex and all its nearest neighbours , 2nd nearest neighbours , ...",
    "@xmath22th nearest neighbours are removed from the graph . the edges incident to these vertices",
    "are removed , too . following this procedure ,",
    "a smaller graph is defined , and the algorithm is iterated .",
    "this graph reduction process is markovian , because the action of each algorithmic steps depends only on the properties of the current reduced graph , more precisely on the current vertex degrees and neighbourhood relations .",
    "let us further assume , that we start at ( algorithmic ) time @xmath100 , and every iteration step is counted as @xmath101 .",
    "the dynamics will be described by rate equations for the vertex - degree distribution @xmath102 , or the number of vertices @xmath103 of degree @xmath27 , where @xmath104 denotes the remaining vertex number at time @xmath105 .",
    "their dynamics can be decomposed into the following elementary processes ( where @xmath106 denotes the average over the current degree distribution @xmath102 ) :    * _ removal of the central vertex _ : a central vertex of degree @xmath27 is selected with weight @xmath28 , i.e. with probability @xmath107 .",
    "@xmath108 is thus reduced by one with this probability . *",
    "_ removal of the 1st , 2nd , ... , @xmath22th nearest neighbours _ : according to the last item , the central vertex has on average @xmath109 neighbours . as the degrees of neighbouring sites are uncorrelated in random graphs , each of these has degree @xmath27 with independent probabilities @xmath110 .",
    "random graphs are locally tree - like , @xmath78 of the @xmath27 edges of a 1st neighbour lead to 2nd nearest neighbours , i.e. the average number of 2nd neighbours equals @xmath111 .",
    "this argument can easily extended to 3rd neighbours etc . * _ update of the connectivity of @xmath112st neighbours _ : the edges connecting @xmath22th and @xmath112st neighbours are removed from the graph , too .",
    "the degree of every @xmath112st neighbour is thus reduced by one .",
    "these processes are combined to evolution equations for the _ expected numbers _",
    "@xmath108 of vertices with degree @xmath27 at time @xmath105 : @xmath113 the first line describes the deletion of vertices , the second the update of the degrees of all @xmath112st neighbours .",
    "these equations are valid for the average trajectory , which is , however , followed with probability approaching 1 for @xmath114 .",
    "macroscopic deviations appear only with exponentially small probability and are thus important for small @xmath1 only .",
    "the quality of using the average trajectory is demonstrated in the inset of fig .",
    "[ fig : depthzero ] .",
    "there the trajectory of a single graph with @xmath115 vertices is found to excellently follow the analytical prediction .",
    "using equations ( [ eq : rate ] ) , we can calculate also the evolution of the total numbers of remaining vertices , @xmath116 , and edges , @xmath117 : @xmath118^{m-1 }      - \\left [       \\frac{{\\langle}d ( d-1 ) { \\rangle}_t}{{\\langle}d { \\rangle}_t}\\right]^{k+1 } \\right)\\ .\\end{aligned}\\ ] ] as we are mainly interested in the behaviour of large graphs , @xmath119 , we may change to intensive quantities by writing @xmath120 . setting further @xmath121 , and replacing differences by derivatives in the thermodynamic limit , we find @xmath122 the graph reduction process is thus described by an infinite set of non - linear differential equations , where the non - linearity enters only through the time - dependent averages @xmath123 .",
    "as we were starting with an ordinary random graph , these equations have to be solved under the initial condition @xmath124 where @xmath57 equals the initial average vertex degree .    in section [ sec : nonlinear ]",
    "we also need the dynamical equations for the moments @xmath125 of @xmath102 . multiplying the second of eqs .",
    "( [ eq : dgl ] ) with @xmath126 and summing over all degrees yields @xmath127 please note that these equations do not contain any finite and closed subset of equations , because the evolution of any moment depends also on higher moments .",
    "a similar approach was chosen in @xcite to analyze an algorithm constructing the maximal sub - graph having minimal degree @xmath128 , i.e. the so - called @xmath128-core .",
    "pittel et al .",
    "rigorously derived and solved a closed set of equations for @xmath129 and @xmath130 . an analogous reduction to a finite number of equations",
    "will be constructed in section [ sec : leaf ] for the generalized leaf - removal algorithm , but it can not be achieved for the general case .",
    "our approach resembles also the rate equation approach used in the area of growing networks @xcite .",
    "note , however , that there the evolution of the number @xmath108 of vertices of degree @xmath27 depends only on the vertices having smaller degree , because edges are always added and never deleted .",
    "so , in principle , the evolution equations can be solved by calculating first @xmath131 , then @xmath132 and so on . in the graph reduction process",
    "the problem becomes more complicated since the evolution of @xmath133 depends also on @xmath134 , for arbitrary @xmath27 , but there is no maximal degree @xmath27 in the poissonian initial condition .      before trying to solve equations ( [ eq : dgl],[eq : ic ] ) for specific choices of @xmath28 and @xmath22",
    ", we will give general expressions for the number @xmath135 of vertices which are covered by the algorithm .",
    "for the locally tree - like case of random graphs , the @xmath22th neighbours of the selected vertex are covered , the @xmath25st are uncovered etc .",
    "so the covering state of the central vertex depends on the depth @xmath22 : for even @xmath22 , it will be covered ( if @xmath136 ) , for odd @xmath22 , it will be uncovered .",
    "we therefore consider these two cases independently .      for odd @xmath22 ,",
    "the central vertex is almost always uncovered .",
    "denoting the expected number of covered vertices at time t with @xmath137 , we thus find @xmath138 cf .",
    "the first of equations ( [ eq : nm ] ) .",
    "going again to the limit of large graphs , @xmath72 , this can be written as a differential equation for @xmath139 : @xmath140 once we know the solution of the graph dynamical equation ( [ eq : dgl ] ) , we can calculate the time @xmath141 where all edges are covered , @xmath142 , and integrate the last equation over the time interval @xmath143 $ ] . as all removed edges were covered by our algorithm ,",
    "we thus have constructed a vertex cover of relative size @xmath144 .",
    "as the described average trajectory is followed with probability one for @xmath145 , this @xmath144 gives an upper bound for the true minimal vertex cover size of the random graph under consideration .",
    "for even @xmath22 , the central vertex is covered in general .",
    "only if it is disconnected , i.e. if its degree equals zero , it is set to _",
    ", see the algorithm heuristic - vc .",
    "the last case happens with probability @xmath146 .",
    "we thus conclude for @xmath135 @xmath147 or , in the limit @xmath72 , @xmath148 this equation can be integrated , once we know the solution of equations ( [ eq : dgl ] ) , and an upper bound to @xmath149 can be read off .",
    "the problem in solving differential equations ( [ eq : dgl ] ) with initial conditions ( [ eq : ic ] ) is , that the poissonian shape of the degree distribution is , in general , not conserved under the dynamics . in such cases one has to keep track of all the individual probabilities @xmath102 for each possible degree @xmath27 . as the dynamics of @xmath102 depends on @xmath150 for all @xmath27 , and @xmath27",
    "is not bound from above for the poissonian initial condition , it is not obvious how to construct a finite and closed subset of equations which can be solved separately , opening the door to the solution for all @xmath85",
    ".    there exist , however , some cases where the poissonian shape of the degree distribution is conserved , as can be shown explicitly by plugging a poissonian ansatz @xmath151 into ( [ eq : dgl ] ) and verifying , that the same equation for the average vertex degree @xmath152 is reproduced for arbitrary @xmath27 . the most general case for this behaviour is found for linear selection weights @xmath153 where @xmath154 are arbitrary non - negative real numbers . in this case , the graph can be totally specified by calculating @xmath155 and @xmath156 . their evolution can be read off from equations ( [ eq : nm ] ) , where the averages @xmath123 can be expressed via @xmath152 : @xmath157 in the limit @xmath72 the graph reduction dynamics is thus completely determined by the differential equations @xmath158 eliminating @xmath159 from the second equation , we end up with @xmath160 these equations have to be solved under the initial conditions @xmath161 and @xmath162      equations ( [ eq : dgllin],[eq : cdgl ] ) simplify further if we restrict it for a while to constant selection weights @xmath164 , i.e. @xmath163 . there we find @xmath165 in the second line , the equation for @xmath159 was already used to eliminate the complicated sum of powers of @xmath152 . using the initial conditions @xmath161 and @xmath162 , the second line results in @xmath166 and one of the two functions can be eliminated from the first of equations ( [ eq : dglconst ] ) .",
    "we consequently find @xmath167 which is solved implicitly by @xmath168 the algorithm stops when all edges are covered , i.e. for @xmath169 .",
    "this final time @xmath141 corresponds , in the original algorithmic language , to @xmath170 iterations of heuristic - vc , and is given by @xmath171    these results can be used in order to determine the relative size @xmath172 using the results of section [ sec : vcsize ] .",
    "there we observed a difference between even and odd values @xmath22 of the depth of heuristic - vc according to the fact that the central vertex in one case is almost always covered , in the other case uncovered .",
    "we therefore continue discussing these cases separately , starting with @xmath53 , going then to arbitrary odd @xmath22 , and discussing general even @xmath22 at the end of this section .",
    "the simplest possible algorithm has depth @xmath53 : in every algorithmic step an arbitrary vertex is chosen and covered if its degree is non - zero , uncovered else .",
    "the vertex and all incident edges are removed from the graph .",
    "this simple algorithm was already analysed in @xcite as the heuristic underlying a complete backtracking algorithm .",
    "the results given there can be easily reproduced , for @xmath53 the integration in eq .",
    "( [ eq : ct ] ) can be trivially carried out .",
    "we find a simple linear decrease of the average vertex degree , @xmath173 and the final time becomes @xmath174 as one vertex is removed in every algorithmic step .",
    "the resulting size of the constructed vertex cover follows easily by integrating equation ( [ eq : xeven ] ) , with @xmath175 : @xmath176 cf .",
    "this gives the very first and simplest upper bound on the true size of minimal vertex covers which is , however , not very good : for , e.g. , @xmath177 , we find @xmath178 compared to the true value @xmath179 , cf .",
    "( [ eq : minvc ] ) . also the asymptotic behaviour for large average vertex degrees , @xmath180 ,",
    "does not meet the exact asymptotic behaviour , which was evaluated by frieze @xcite to be @xmath181 to leading order .",
    "this asymptotics is found to hold also for a slightly more complicated case : it is valid for all non - zero values of the depth , i.e. for @xmath182 .",
    "let us , for simplicity , start with arbitrary odd values of the depth @xmath22 of the algorithm . for @xmath60 ,",
    "the algorithm is equivalent to the one proposed by gazmuri @xcite : in every time step , an arbitrary vertex is chosen and set to _",
    "uncov _ , all its neighbours are covered , and the whole cluster including all incident edges are removed from the graph .",
    "gazmuri has already characterized the performance of this algorithm , using a different technique .",
    "please remember that , according to equation ( [ eq : cdot ] ) , the time dependency of the mean vertex degree is given by @xmath183 this can be used to solve equation ( [ eq : xodd ] ) for the evolution of the number of covered vertices , which , using the poissonian distribution ( [ eq : poissonansatz ] ) , and integrating over @xmath105 reads @xmath184 changing variables from @xmath105 to @xmath185 , and plugging in equation ( [ eq : cdot1 ] ) , we find @xmath186 this expression gives the @xmath187-@xmath185-trajectory which is interestingly independent on the depth @xmath22 ( as long as @xmath22 is odd ) .",
    "the only difference is given by the time dependencies @xmath188 as @xmath152 is @xmath22-dependent , cf . equation ( [ eq : ct ] ) .",
    "the graph is completely covered when @xmath152 reaches zero .",
    "the cardinality of this vertex cover is almost surely given by @xmath189 , i.e. @xmath190 independently on the ( odd ) depth @xmath22 of the algorithm .",
    "for @xmath60 , gazmuri s bound is thus reproduced , and the leading order of the behaviour for large initial connectivities @xmath57 is correctly found .",
    "the algorithm is , however , less successful for small and intermediate connectivities , as we will see in the following sections .",
    "the case of even depth leads to more complicated expressions , which can not be evaluated explicitly .",
    "the main problem is induced by the @xmath192-contribution in the evolution of @xmath139 , as given in equation ( [ eq : xeven ] ) .",
    "after having applied the poissonian ansatz ( [ eq : poissonansatz ] ) , the latter reads @xmath193 hence we find for the relative vertex - cover size , and arbitrary even depth @xmath22 @xmath194 this integral can not be evaluated explicitly for arbitrary even @xmath22 .",
    "we can , however , extract the asymptotic behaviour for @xmath195 . in this limit",
    ", the terms of @xmath196 and @xmath197 can be neglected in both the numerator and the denominator in the last integral .",
    "the corrections from the integration interval @xmath198 are of order 1 and thus suppressed by the prefactor @xmath199 , compared to the leading terms @xmath200 which coincide with the case of odd depth .      after having discussed in great detail algorithms with @xmath202 , i.e. simple algorithms selecting central vertices completely at random , without regarding its degree",
    ", we now turn to the case of linear @xmath28 . in this case , as already mentioned at the beginning of this section , the degree distribution still stays poissonian .",
    "this can be understood intuitively in the following way : the case @xmath203 is equivalent to choosing an arbitrary edge with constant probability , and selecting one of the end - vertices . according to section [ sec : randomgraph ] , the chosen vertex will have degree @xmath27 with probability @xmath204 . the more general case @xmath205 , cf .",
    "( [ eq : linear ] ) , corresponds to mixing this selection procedure ( weight @xmath206 ) with the uniform selection of vertices ( weight @xmath207 ) .",
    "fixing @xmath206 to a non - zero value is sensible only for _ even depth _",
    "values @xmath22 since these correspond to covering the central vertex of the cluster of radius @xmath22 .",
    "as mentioned above , the vertex degree is correlated to the covering state in small vertex covers , so it does not make sense to preferentially select vertices of high degree and to uncover it subsequently .",
    "the performance of the algorithm is thus only improved for even @xmath22 .",
    "the strongest improvement is obtained for @xmath208 , i.e. for @xmath209 .",
    "whereas eqs .",
    "( [ eq : dgllin],[eq : cdgl ] ) lead to complicated coupled non - linear differential equations for @xmath152 and @xmath210 , which have to be solved numerically for general even @xmath22 , the case @xmath53 becomes very simple .",
    "there , the equations read @xmath211 and are solved by @xmath212 the graph is covered for @xmath169 , which leads to vertex covers of size @xmath213 this size is always smaller than the one found for the very simplest algorithm ( @xmath214 ) , but stays worse than gazmuri s algorithm ( @xmath215 ) .",
    "also the asymptotic behaviour is not correctly reproduced .",
    "if we choose non - linear selection weights @xmath216 , the graph reduction dynamics deviates from the unrestricted ensemble of random graphs , and the degree distribution becomes non - poissonian .",
    "the new distribution thus can not be described by the evolution of its mean value alone , and we have to solve all equations from ( [ eq : dgl ] ) simultaneously . in general , this can not be achieved analytically . to approximate the solution numerically",
    ", we may cut the tail of @xmath102 , and solve only a finite number of equations .",
    "this works fine for small initial values of @xmath217 because of the rapid decrease of the poissonian distribution . for larger values of @xmath57 however , the number of remaining equations becomes large , too .",
    "so it would be better to find an approximation of @xmath102 depending only on a small number of parameters .",
    "the dynamics of these parameters can be determined from the lowest moments @xmath218 with @xmath219 ranging from 1 to the number of parameters .",
    "this section is dedicated to algorithms of depth @xmath53 , but non - linear selection weights @xmath220 .",
    "every algorithmic step thus removes one vertex from the graph .",
    "no vertices of degree 0 are selected ( @xmath221 ) ; all selected vertices thus have to be covered according to heuristic - vc .",
    "we thus trivially have @xmath222 and the size of the constructed vertex cover is given by @xmath223 with @xmath169 .",
    "note that this does not necessarily imply @xmath224 as only vertices of non - vanishing degree are selected . at time @xmath141 , the remaining graph consists of @xmath225 completely disconnected vertices .",
    "as the initial condition @xmath226 of the graph reduction dynamics is given by a poissonian of mean @xmath57 , we are looking for a deformation of the poissonian distribution which allows to independently vary mean and variance , and thus to approximate the true @xmath102 . a simple possibility is given by the generalized binomial expression @xmath227^{(\\mu(t)^{-1}-d ) }       \\ \\left[c(t)\\mu(t)\\right]^d\\ .\\ ] ] for @xmath228 , this expression approaches a poissonian distribution of mean @xmath152 , the initial condition is thus characterized by @xmath162 and @xmath229",
    ". please note , however , that ( [ eq : binomial ] ) does not necessarily describe a probability distribution , because @xmath230 becomes negative for certain @xmath27 if @xmath231 is not a positive integer .",
    "we do not expect this to produce serious problems for the calculated averages , as long as the absolute value of these negative @xmath230 stays neglectable compared to the total normalization 1 .",
    "this is exactly what happens in our case , as we will see below .",
    "the moments of @xmath230 are given by @xmath232[1 - 2\\mu(t)]\\cdots[1-n\\mu(t)]\\ .\\ ] ] the product @xmath233 can be expanded into a sum of pure powers , their mean values are determined by inverting this sum : @xmath234 the coefficients are given iteratively by @xmath235 , using the trivial identity @xmath236 and the convention @xmath237 for all @xmath238 .",
    "given two non - trivial moments , e.g. @xmath239 , @xmath152 and @xmath240 can be calculated , and all other moments are determined .",
    "we can thus approximate the dynamics of the degree distribution by considering of the dynamics of the first two moments of @xmath102 only .",
    "the exact equations for @xmath241 and @xmath242 follow from eq .",
    "( [ eq : dglmoment ] ) by fixing @xmath53 and @xmath243 , @xmath244 they contain higher moments of @xmath102 , but are closed approximately by using ( [ eq : moment1],[eq : moment ] ) : @xmath245 \\right ) & = &       c(t)^2 [ 1-\\mu(t ) ] - \\frac { \\tilde \\pi^{(\\alpha+2)}(t)}{\\tilde       \\pi^{(\\alpha)}(t ) } + \\frac { \\tilde \\pi^{(\\alpha+1)}(t)}{\\tilde       \\pi^{(\\alpha)}(t)}\\left ( 1 - 2 c(t ) [ 1-\\mu(t ) ] \\right)\\end{aligned}\\ ] ] these two equations can be easily converted to ordinary differential equations @xmath246 and @xmath247 which are , however , not analytically solvable for general values of @xmath248 .",
    "they can instead be solved efficiently using numerical standard techniques .",
    "the results are displayed in fig .",
    "[ fig : depthzero ] together with numerical simulations obtain for large graphs .",
    "we find that the binomial approximation works extremely well for small values of @xmath248 , systematically growing deviations appear for larger @xmath248 , cf .",
    "[ fig : distr ] .",
    "we also find that heuristic - vc is able to approximate the true minimal vertex - cover size up to a few percent , performing better for larger @xmath248 .",
    "we observe , however , that even the vertex covers constructed for very large @xmath248 remain suboptimal , i.e. extensively larger than the minimal vcs .",
    "the behaviour of eqs .",
    "( [ eq : binomapprox ] ) for large @xmath162 can be extracted analytically by expanding the equations for @xmath249 ( @xmath250 ) to @xmath251 ( @xmath252 ) .",
    "@xmath253 is a sum of terms of @xmath254 , @xmath255 and @xmath252 , and @xmath240 stays of @xmath252 due to its initial condition @xmath256 .",
    "we thus find @xmath257 which is solved to leading orders by @xmath258 . from the vanishing of these leading orders we can read of the dominant contributions to the constructed vertex covers , which we conjecture to be exact also for the true dynamics : @xmath259 for larger @xmath248 ,",
    "the asymptotics becomes better and better , but still does not reach the correct behaviour @xmath260 of the minimal vcs .",
    "note that , for sufficiently large @xmath57 , gazmuri s depth - one algorithm outperforms the depth - zero algorithm for arbitrary @xmath248 .",
    "we expect , however , that the correct asymptotic behaviour is reached by exponential selection weights @xmath28 , and hence in particular for the heuristic where always a vertex of maximal degree is chosen .",
    "the best performance can be achieved using a generalization of the leaf - removal algorithm ( lr ) proposed by bauer and golinelli @xcite .",
    "their algorithm is based on the following observation : consider a vertex of degree one , i.e. a vertex which has a single neighbour .",
    "one of these two vertices has to be covered in order to cover also the connecting edge .",
    "it is obviously better to cover the neighbour than the vertex of degree one .",
    "iterating this procedure , there are two possible final situations : + ( i ) all edges are covered , and the constructed vertex cover is a minimal one .",
    "+ ( ii ) there are uncovered edges , but no vertices of current degree one are left .",
    "the algorithm stops without having constructed a vertex cover . +",
    "this algorithm can be understood as a special case of heuristic - vc with depth @xmath60 and @xmath261 . following a completely different route , bauer and golinelli",
    "have found a surprising result : for random graphs of average degree @xmath262 , their algorithm is able to cover almost all edges , and the predicted minimal vertex cover size coincides with the replica symmetric one found in @xcite . for larger average degrees ,",
    "@xmath263 , case ( ii ) is valid , and a finite fraction of edges remains uncovered .",
    "we re - derive this result below using our dynamical rate equations .    in order to construct a small vertex cover also for higher - connectivity graphs ,",
    "the algorithm has to be modified to @xmath264 for all @xmath265 .",
    "the case @xmath266 , with @xmath267 , will therefore be analysed in sec .",
    "[ sec : leafgeneral ] . for @xmath268",
    ", this algorithm performs nearly as well as pure leaf - removal for small average vertex degrees . for large @xmath57",
    "it finally becomes more and more similar to gazmuri s algorithm , being still better for any finite @xmath57 .",
    "we will call this algorithm _ generalized leaf removal _ ( glr ) .",
    "the best performance is , of course , obtained for @xmath269 , with @xmath270 .",
    "there always a vertex of minimal degree is selected and uncovered , all neighbours are covered .",
    "as long as the fraction @xmath271 of vertices of degree one is non - zero , the algorithm is equivalent to the leaf - removal procedure .",
    "this is valid in particular also for @xmath262 , where ( almost ) minimal vcs are constructed .",
    "the analysis of this algorithm goes , however , beyond the analysis presented here .",
    "let us first concentrate on the leaf - removal algorithm ( lr ) in its original version , i.e. on depth @xmath60 and selection weights @xmath272 .",
    "in every algorithmic step , exactly two vertices are removed from the graph @xmath13 , and exactly one vertex is covered .",
    "we therefore conclude @xmath273 the degree distribution follows , according to ( [ eq : dgl ] ) , from the dynamical equations @xmath274 vertices of degree @xmath62 are only touched if they are first or second neighbours of a vertex of degree one , in which cases they are either covered and removed , or their vertex degree is reduced by one .",
    "the degrees of neighbouring vertices are statistically independent , we thus expect @xmath102 to keep its poissonian shape for all @xmath62 .",
    "in fact , the ansatz @xmath275 together with the global normalization @xmath276 \\right)\\ ] ] can be plugged into eqs .",
    "( [ eq : lrdgl ] ) and leads to uniquely determined equations for @xmath277 and @xmath271 .",
    "the latter is , for technical reasons , replaced by an equation for @xmath152 . using @xmath278    \\nonumber\\\\    { \\langle}d(d-1 ) { \\rangle}_t & = &   \\gamma(t ) \\kappa(t)^2\\ , \\end{aligned}\\ ] ] these",
    "read @xmath279 the initial conditions are @xmath280 .",
    "the equation for the average vertex degree @xmath152 can be removed by observing @xmath281 which is solved by @xmath282 the solution of the two remaining equations is given implicitly by @xmath283 ^ 2           + 2w(c_0e^{\\kappa(t ) } ) \\right ) \\nonumber\\\\",
    "\\gamma(t ) & = & \\frac{w(c_0e^{\\kappa(t ) } ) } { ( 1 - 2t)c_0}\\end{aligned}\\ ] ] as can be checked explicitly using eqs .",
    "( [ eq : lrreduceddgl ] ) .",
    "@xmath284 denotes again the lambert - w function , cf .",
    "[ sec : minvc ] .",
    "the graph is covered if this trajectory reaches @xmath169 , i.e. for @xmath285 . from the first of eqs .",
    "( [ eq : lrsol ] ) we thus find the final time @xmath286 this result is only valid , if @xmath287 for all @xmath27 and all @xmath288 .",
    "( [ eq : lrmoments ] ) , we find @xmath289 \\nonumber\\\\    & = & \\frac { \\kappa(t)}{(1 - 2t)c_0 } \\left ( \\kappa(t ) - w(c_0",
    "e^{\\kappa(t ) } ) [ 1-e^{-\\kappa(t ) } ]   \\right ) \\nonumber\\\\    & = : &   \\frac { \\kappa(t)}{(1 - 2t)c_0 } \\phi ( \\kappa(t ) ) \\ .\\end{aligned}\\ ] ] the prefactor of @xmath290 is non - negative , it is thus sufficient to investigate @xmath290 for @xmath291 .",
    "we have @xmath292 , and @xmath293 - e^{-\\kappa}w(c_0 e^{\\kappa})\\ , \\ ] ] i.e. @xmath294 . the monotonous function @xmath94 becomes larger than 1 for @xmath263 , i.e. in this case @xmath271 would approach zero from negative values .",
    "this is a contradiction .",
    "we therefore conclude @xmath295 and this value coincides with the relative size of a minimal vertex cover . for @xmath263",
    "the algorithm gets stuck if @xmath296 is reached , no vertices of degree one are left , and a finite fraction of all edges remains uncovered .      in order to overcome this problem",
    ", we generalize the leaf - removal algorithm by modifying the selection weights to @xmath297 .",
    "this algorithm interpolates between the algorithms of bauer and golinelli ( @xmath298 , exact minimal vcs for @xmath262 ) and the one of gazmuri ( @xmath299 , correct leading asymptotic behaviour for @xmath300 ) .",
    "we thus expect that this algorithm shows a very good performance in the whole finite - connectivity region for large , but finite @xmath206 .",
    "also in this case , the poissonian shape of @xmath102 remains correct for all degrees @xmath62 , and ansatz ( [ eq : lransatz ] ) together with the normalization constraint ( [ eq : norm ] ) remains valid . plugging everything into the dynamical equations ( [ eq : dgl ] ) , we directly arrive at @xmath301[c(t)+ap_1(t)]}{[1+ap_1(t ) ]         c(t ) } \\nonumber\\\\",
    "n(t ) \\dot \\kappa(t ) & = & -\\kappa(t ) \\frac{[\\gamma(t)\\kappa(t)^2+c(t ) ]         [ c(t)+ap_1(t)]}{[1+ap_1(t ) ] c(t)^2 } \\nonumber\\\\    n(t ) \\dot \\gamma(t ) & = & \\gamma(t ) \\frac{c(t)+2a p_1(t)}{1+a p_1(t ) }         -\\kappa(t)\\gamma(t )   \\frac{c(t)+a p_1(t)}{1+a p_1(t)}\\end{aligned}\\ ] ] with @xmath302 $ ] .",
    "these equations determine the exact graph reduction dynamics for generalized leaf removal , and can be solved numerically .",
    "due to the non - zero selection weights for all degrees , these equations do not suffer from the appearance of negative values for certain @xmath102 , and the algorithm always constructs a vertex cover .",
    "the number of covered vertices at algorithmic time @xmath105 can be calculated from eq .",
    "( [ eq : xodd ] ) , which for our special choices of @xmath22 and @xmath28 reads @xmath303 the relative size of the finally constructed vertex cover is , with probability one , given by @xmath144 , with @xmath141 following from @xmath169 . in figure [ fig : glr ] , the results are presented for several values of @xmath206 and compared with gazmuri s resp .",
    "bauer and golinelli s algorithms .",
    "the solution of many combinatorial optimization problems requires exponential time resources and is thus restricted to relatively small system sizes . for larger systems , good and fast approximation algorithms are needed , which are frequently based on heuristic considerations concerning correlations between local problem structure and optimal problem solutions .",
    "constructing a minimal vertex cover of a given graph belongs to the basic np - hard problems , and can be understood as a prototype combinatorial optimization problem . in this paper , we have therefore analysed linear - time algorithms for constructing small vertex covers of finite - connectivity random graphs . the applied heuristic exploits the observation that vertices of high vertex degree are more likely to be covered in minimal vcs , whereas those of small degree remain more frequently uncovered .",
    "we have introduced and analysed mainly two types of algorithms , namely depth - zero and depth - one algorithms . in the first case ,",
    "vertices are selected randomly and ( if connected to any other vertex ) they are covered .",
    "we found that the performance of the algorithm can be largely improved by preferentially selecting vertices of high degree .",
    "we also observed that depth - zero algorithms were outperformed by depth - one algorithms .",
    "these select a vertex in every algorithmic step and uncover it .",
    "all neighbours of the selected vertex must be covered consequently .",
    "the best performance is achieved if the algorithm always selects a vertex of smallest degree . as was already found by bauer and golinelli @xcite , this procedure even outputs an ( almost ) minimal vc if it is applied to random graphs of average connectivity @xmath262 .",
    "the algorithm constructs good approximations also for higher connectivities .",
    "both types of algorithms can be interpreted as markovian graph reduction processes .",
    "they are analytically characterized by the evolution of the degree distribution of the remaining uncovered subgraphs .",
    "the dynamical equations were solved in some cases , in other cases approximations were necessary .      *",
    "the applied heuristic was restricted to considering the simplest local structure , namely the degree of the selected vertex .",
    "depth - one algorithms can be improved by e.g. selecting a vertex of minimal degree but with maximal number of next - nearest neighbours . covering the nearest neighbours",
    "thus results in a higher number of covered edges .",
    "it would be interesting to extend the rate equations to this case .",
    "* vc is used as a prototype optimization problem , but the approach can be generalized to other combinatorial problems defined over random structures , e.g. to graph coloring or satisfiability problems . for random 3-satisfiability , lower bounds for the sat / unsat threshold",
    "are usually obtained using algorithms in the so - called card - game representation @xcite , which corresponds to @xmath304 in our analysis . *",
    "our analysis was restricted to the typical time evolution of the degree distribution .",
    "deviations appear with exponentially small probability - and are thus important for small systems .",
    "these rare events can be systematically exploited by exponentially frequent restarts of the algorithm .",
    "if a minimal vc is found with probability @xmath305 , we need @xmath306 restarts to almost surely construct a vc ( for all @xmath307 ) .",
    "as observed recently for simple heuristics of vertex cover @xcite and 3-satisfiability @xcite , this random restart algorithm can be exponentially faster than exact standard procedures ( like backtracking ) . the performance can be improved further by using a more sophisticated heuristics . * also sophisticated complete algorithms , i.e. those that find an optimal solution for sure , use heuristic arguments for accelerating the combinatorial search .",
    "the presented ideas may hence contribute to the analysis of such algorithms , and the insight may be used to exponentially speed up the numerical search .",
    "garey and d.s .",
    "johnson , _ computers and intractability _ , ( freeman , san francisco 1979 ) .",
    "please note that `` approximation '' is not used in the sense of a polynomial - time approximation scheme , which guarantees to approximate the optimal solution within some given error for arbitrary samples .",
    "here we mean low - cost configurations which may serve as reasonable solutions in practical applications .",
    "special issue of art .",
    "* 81 * ( 1996 )",
    ". special issue of theor .",
    "* 265 * ( 2001 ) .",
    "gazmuri , networks * 14 * , 367 ( 1984 ) .",
    "wormald , ann .",
    ". prob . * 5 * , 1217 ( 1995 ) .",
    "pittel , j. spencer , and n.j .",
    "wormald , j. combinat .",
    "b * 67 * , 111 ( 1996 ) .",
    "j. franco , theor .",
    "sci . * 265 * , 147 ( 2001 ) .",
    "d. achlioptas , theor . comp .",
    "sci . * 265 * , 159 ( 2001 ) .",
    "r. monasson and r. zecchina , phys .",
    "e * 56 * , 1357 ( 1997 ) .",
    "r. monasson , r. zecchina , s. kirkpatrick , b. selman , and l. troyansky , nature * 400 * , 133 ( 1999 ) .",
    "s. mertens , phys .",
    "lett . * 81 * , 4281 ( 1998 ) .",
    "m. weigt and a.k .",
    "hartmann , phys .",
    "* 84 * , 6118 ( 2000 ) a.k . hartmann and m. weigt ,",
    "theor . comp .",
    "sci . * 265 * , 199 ( 2001 ) .",
    "m. bauer and o. golinelli , phys .",
    "lett . * 86 * , 2621 ( 2001 ) .",
    "m. bauer and o. golinelli , eur .",
    "j. b * 24 * , 339 ( 2001 ) .",
    "m. weigt and a.k .",
    "hartmann , phys .",
    "e * 63 * , 056127 ( 2001 ) .",
    "m. weigt and a.k .",
    "hartmann , phys .",
    "lett . * 86 * , 1658 ( 2001 ) .",
    "this works at least for the case where the graph contains no loops of length up to @xmath308 , which is allways true for the most inportant cases @xmath309 . also for random graphs , @xmath24 is almost allways a tree , and the above argument works with probability one ( for @xmath72 ) .",
    "b. bollobs , _ random graphs _ , ( academic press 1985 ) .",
    "p. erds and a. rnyi , publ .",
    "inst . hung .",
    "sci . * 5 * , 17 ( 1960 ) .",
    "m. molloy and b. reed , rand .",
    "struct . alg .",
    "* 6 * , 161 ( 1995 ) .",
    "newman , s.h .",
    "strogatz , and d.j .",
    "watts , phys .",
    "e * 64 * , 026118 ( 2001 ) .",
    "r. albert and a. l. barabasi , rev . mod .",
    "74 , 47 ( 2002 ) .",
    "krapivsky , s. redner , and f. leyvraz , phys .",
    "lett . * 85 * , 4629 ( 2000 ) .",
    "dorogovtsev , j.f.f .",
    "mendes , and a.n .",
    "samukhin , phys .",
    "lett . * 85 * , 4633 ( 2000 ) .",
    "a.m. frieze , discrete math . * 81 * , 171 ( 1990 ) .",
    "a. montanari and r. zecchina , phys .",
    "* 88 * , 178701 ( 2002 ) .",
    "s. cocco and r. monasson , preprint cond - mat/0203012 .     of the vertex",
    "covers constructed by the depth - zero heuristic with @xmath310 ( full lines from top to bottom ) . for a comparison ,",
    "the replica symmetric @xmath311 ( dashed line , exact for @xmath59 ) and the results @xmath312 of gazmuri s depth - one algorithm ( dotted line ) are added .",
    "the inset shows the time dependent average vertex degree @xmath152 for the same values of @xmath248 ( full lines from top to bottom ) together with numerical data for a single random graph with @xmath313 .",
    "this illustrates the quality of taking the average trajectory ( @xmath314 ) , as well as the quality of the binomial approximation ( @xmath315).,width=566 ]     for heuristic - vc with depth @xmath53 , selection weights @xmath316 , and initial condition @xmath317 , for @xmath318 ( full , dotted , dashed lines ) .",
    "the symbols are numerical data for a single graph of size @xmath319 and coincide extremely well with the binomial approximation represented by the lines ( lines are connecting data for integer @xmath27 and thus are guides to the eyes only ) .",
    "the quality of the approximation is similarly good for all investigated initial @xmath57 .",
    "+ ( b ) same as ( a ) , but with @xmath320 .",
    "the coincidence between numerical data and binomial approximation is slightly worse than in ( a ) , but still very convincing .",
    "the quality of the approximation increases with growing initial @xmath57 , supporting thus our conjecture that the asymptotic behaviour is correctly described by the approximation.,width=566 ]     of the vertex covers constructed by generalized leaf removal .",
    "the selection weight is @xmath321 with @xmath322 ( dashed lines from top to bottom ) . for a comparison , the result of the original leaf - removal algorithm",
    "is represented by the full line : for @xmath59 , a minimal vc is found , whereas the algorithm fails completely to construct a vc for @xmath323.,width=566 ]"
  ],
  "abstract_text": [
    "<S> in this paper , the dynamics of heuristic algorithms for constructing small vertex covers ( or independent sets ) of finite - connectivity random graphs is analysed . in every algorithmic step , </S>",
    "<S> a vertex is chosen with respect to its vertex degree . </S>",
    "<S> this vertex , and some environment of it , is covered and removed from the graph . </S>",
    "<S> this graph reduction process can be described as a markovian dynamics in the space of random graphs of arbitrary degree distribution . </S>",
    "<S> we discuss some solvable cases , including algorithms already analysed using different techniques , and develop approximation schemes for more complicated cases . </S>",
    "<S> the approximations are corroborated by numerical simulations . </S>"
  ]
}
{
  "article_text": [
    "let @xmath0 be the context - free grammar with start symbols @xmath1 and formation rules @xmath2 , @xmath3 , @xmath4 , @xmath5 , @xmath6 , @xmath7 .",
    "an @xmath8-leaf tree @xmath9 _ parses _ a length-@xmath8 word @xmath10 on @xmath11 if @xmath9 is a valid derivation tree for @xmath10 under the grammar @xmath0 ; that is , there is a labeling of the vertices of @xmath9 compatible with the formation rules such that the leaves of @xmath9 , from left to right , are labeled with the letters of @xmath10 .",
    "for example , the tree @xmath12 parses the word @xmath13 , as can be seen by this labeling : @xmath14 note that labeling the leaves of a tree uniquely determines a labeling of the internal vertices under @xmath0 if a valid labeling exists .",
    "certainly @xmath0 is _ ambiguous _  there exist distinct trees that parse the same word ; for example , the trees @xmath15 both parse @xmath16 . to take a somewhat larger example ,",
    "the trees @xmath17 both parse the word @xmath13 : @xmath18    however , something much stronger can be said about this grammar .",
    "[ main ] the grammar @xmath0 is totally ambiguous .    that is , every pair of derivation trees with the same number of leaves has at least one word that they both parse .",
    "kauffman  @xcite proved this theorem ( in a slightly different form , as we describe below ) by showing that it is equivalent to the four color theorem  the statement that every planar graph is four - colorable .",
    "the four color theorem was proved by appel , haken , and koch  @xcite using substantial computing resources .",
    "the hope of the present authors is that a direct proof of theorem  [ main ] will be shorter than the known proofs of the four color theorem , thereby providing a shorter proof of the four color theorem .    in this paper",
    "we describe first results in this direction .",
    "first we show that theorem  [ main ] is equivalent to kauffman s formulation .",
    "section  [ parameterized families ] determines explicit common parse words for several simple parameterized families of tree pairs . in section  [ general families ]",
    "we establish existence of parse words for more general families . in section  [ turn trees ]",
    "we enumerate the common parse words of a @xmath19-parameter family of tree pairs .",
    "we conclude in section  [ reducing ] by discussing in more generality methods of reducing the problem of finding a common parse word for a pair of trees .",
    "a _ mathematica _ package  @xcite and a maple package  @xcite that accompany this paper and facilitate the discovery of the results we present can be downloaded from the respective web sites of the second and third authors .",
    "the set of possible derivation trees under @xmath0 is the set of _ binary trees _  trees in which each vertex has either @xmath20 or @xmath21 children .",
    "( all trees in the paper are rooted and ordered . )",
    "let @xmath22 be the length of the word @xmath10 , and let @xmath23 be the number of occurrences of the letter @xmath24 in @xmath10 .",
    "[ root label ] let @xmath10 be a word of length @xmath8 on @xmath11 and @xmath9 an @xmath8-leaf binary tree that parses @xmath10 . then for some permutation @xmath25 of @xmath26",
    ", @xmath27 moreover , the root of @xmath9 receives the label @xmath28 when parsing @xmath10 .",
    "the congruence holds for the three words of length @xmath29 , and the derivation rules of @xmath0 preserve it because all four terms change parity with each rule application .",
    "it follows that if the parities of @xmath30 , @xmath31 , and @xmath32 are equal then no tree parses @xmath10 under @xmath0 .",
    "if on the other hand the parity of @xmath33 differs from the other two , then @xmath28 is an invariant of @xmath10 in the sense that any tree parsing @xmath10 has its root labeled @xmath28 .",
    "kauffman  @xcite formulated theorem  [ main ] not in terms of a grammar but in terms of the cross product on the standard unit vectors @xmath34 in @xmath35 .",
    "the cross product satisfies @xmath36 further , for every vector @xmath37 we have @xmath38 the cross product on @xmath35 is not associative , so in general the expression @xmath39 is ambiguous ; to evaluate it for a given tuple @xmath40 we must choose an order in which to compute the @xmath41 cross products . let us call such an order an _",
    "@xmath8-bracketing_. kauffman showed that the four color theorem is equivalent to the statement that for every pair of @xmath8-bracketings there exists an @xmath8-tuple @xmath42 such that the two bracketings of @xmath39 evaluate to the same nonzero vector .",
    "we now develop tools to show that theorem  [ main ] is equivalent to kauffman s statement . roughly speaking ,",
    "we show that we can replace @xmath43 , @xmath44 , and @xmath45 .",
    "it is easy to see that @xmath8-bracketings are in bijection with @xmath8-leaf binary trees .",
    "therefore , given an @xmath8-bracketing of @xmath39 , one may label each internal vertex of the corresponding binary tree with the cross product of the labels of its children ( in order ) .",
    "the condition that the bracketing does not evaluate to @xmath20 is equivalent to the condition that the evaluation does not encounter the product @xmath46 or @xmath47 , hence our formation rules for the grammar @xmath0 .",
    "each @xmath42 possesses an invariant analogous to that of proposition  [ root label ] .",
    "to see what this invariant is , consider the quaternion group , whose elements are @xmath48 and whose binary operation @xmath49 satisfies @xmath50 as well as identities such as @xmath51 and @xmath52 suggested by the notation .",
    "further , for @xmath53 we have @xmath54 and @xmath55 .",
    "consider @xmath56 mapping @xmath57 the map @xmath58 is a `` partial homomorphism '' in the sense that @xmath59 if @xmath60 and @xmath61 .",
    "this property allows us to establish the following invariant .",
    "[ root vector ] let @xmath42 , and choose a bracketing of @xmath39 that does not evaluate to the zero vector .",
    "then this bracketing evaluates to @xmath62 .",
    "since the bracketing of @xmath39 does not evaluate to @xmath20 , each of the @xmath41 cross products is an operation on two linearly independent vectors .",
    "therefore we may emulate the evaluation of the bracketing in @xmath63 rather than in @xmath35 , because replacing @xmath64 with @xmath49 is consistent with @xmath58 .",
    "since @xmath49 is associative , the bracketing evaluates to @xmath65 in @xmath63 .",
    "moreover , since we do not encounter @xmath20 in @xmath35 , we do not encounter @xmath66 or @xmath29 in @xmath63 ; in particular , @xmath67 , and therefore @xmath62 exists .",
    "a result of proposition  [ root vector ] is that we can drop the condition in kauffman s statement that the two bracketings evaluate to the same vector .",
    "therefore the four color theorem is equivalent to the statement that for every pair of @xmath8-bracketings there exists an @xmath8-tuple @xmath42 such that the two bracketings of @xmath39 evaluate to nonzero vectors .",
    "consider the homomorphism @xmath68 , where @xmath69 is the klein four - group , @xmath70 is the identity element , @xmath71 , @xmath72 , and @xmath73 .",
    "let @xmath74 be defined by @xmath75 .",
    "in other words , @xmath76 removes the hat and forgets the sign . since @xmath77 is a homomorphism , evaluating @xmath78 and @xmath79 at @xmath42 results in nonzero vectors if and only if @xmath80 is a parse word for @xmath78 and @xmath79 .",
    "therefore , for @xmath8-leaf binary trees @xmath78 and @xmath79 , the @xmath8-tuples @xmath42 that evaluate to nonzero vectors when bracketed by @xmath78 and @xmath79 are in bijection with words @xmath81 that are parsed by both @xmath78 and @xmath79 .",
    "it follows that theorem  [ main ] is equivalent to the four color theorem .",
    "in this section we introduce several families of binary trees and enumerate the parse words of several pairs of these trees .",
    "first we establish some additional terminology .",
    "if @xmath9 parses a word @xmath10 on @xmath11 , then @xmath9 also parses all words obtained from @xmath10 by permuting the letters in the alphabet .",
    "let @xmath82 be the set of equivalence classes ( under permutations ) of words parsed by both trees @xmath78 and @xmath79 .",
    "we abuse notation slightly by writing a representative of each equivalence class .",
    "for example , it turns out that for the pair of @xmath83-leaf trees mentioned in section  [ introduction ] there is only one equivalence class of parse words , so for those trees we write @xmath84 often we will take this representative to be the word in the equivalence class which is lexicographically first  words of the form @xmath20 or @xmath85 .",
    "however , we will depart from this convention when convenient .",
    "the four color theorem is equivalent to the statement that for every pair of @xmath8-leaf binary trees @xmath78 and @xmath79 we have @xmath86 .",
    "the _ level _ of a vertex is its distance from the root .",
    "that is , the root lies on level @xmath20 , the root s children lie on level @xmath29 , and so on .",
    "a _ path tree _ is a binary tree with at most two vertices in each level .",
    "the @xmath87-leaf path trees are as follows .",
    "@xmath88 the two leaves on level @xmath41 in an @xmath8-leaf path tree are called the _ bottom leaves_.    the set of @xmath8-leaf path trees",
    "is in trivial bijection to the set @xmath89 of @xmath90-length words on @xmath91 : since each level has at most two vertices , at most one vertex in each level has children , so we may form a word that records which child  left or right  has children at each level .",
    "we shall use this bijection to define several families of trees .",
    "because of their linear structure , path trees are simpler to work with than binary trees in general , so the emphasis of this paper is on path trees . indeed ,",
    "several infinite families of pairs of path trees can be shown to satisfy theorem  [ main ] directly and have only a few parse words .",
    "we take up this task now .",
    "some of the proofs work by finding out where the local conditions imposed by the two trees force a unique labeling and then just working out the consequences , so in some cases it may be quicker to prove the theorem for yourself than to read the proof provided .",
    "let @xmath92 be the @xmath8-leaf path tree corresponding to the word @xmath93 .",
    "the left comb trees for @xmath94 are pictured below .",
    "@xmath95 let @xmath96 be the @xmath8-leaf path tree corresponding to @xmath97 ; @xmath96 is the left ",
    "right reflection of @xmath92 .",
    "we warm up with some",
    "_ _ comb__inatorics .",
    "[ comb - comb ] @xmath98",
    "@xmath99    we build a common parse word from left to right  up @xmath92 and down @xmath96 . at every leaf ,",
    "each tree will eliminate one possible label , so the parse word will turn out to exist and be unique .",
    "the case @xmath100 can be established by testing all words of length @xmath21 , so let @xmath101 . without loss of generality we may label the first two leaves @xmath20 and @xmath29 .",
    "it follows from this that the root of @xmath96 receives the label @xmath29 , the non - leaf ( internal ) vertex on the second level of @xmath96 receives @xmath21 , and therefore the internal vertex on the third level of @xmath96 receives @xmath20 .",
    "this implies ( from the right comb ) that the third leaf can not receive @xmath20 .",
    "however , from the left comb we find that the third leaf can not receive @xmath21",
    ". therefore the third leaf receives @xmath29 . for the fourth leaf ,",
    "the right comb precludes @xmath21 and the left comb precludes @xmath20 , so the fourth leaf receives @xmath29 . likewise all the way down the word through leaf @xmath41 .",
    "the internal vertex labels in each tree alternate between @xmath20 and @xmath21 , except for the root which receives 1 . if @xmath8 is odd then the lowest internal vertex in the right comb receives @xmath21 , so that the last leaf receives @xmath20 ; if @xmath8 is even then this internal vertex receives @xmath20 , and the last leaf receives @xmath21 .    note from the proof of this theorem that the internal labels corresponding to a common parse word of @xmath92 and @xmath96 will match ( top to bottom ) if @xmath8 is odd , and will differ by the permutation which swaps @xmath20 and @xmath21 if @xmath8 is even .",
    "let @xmath102 be the @xmath103-leaf path tree corresponding to @xmath104 , and let @xmath105 be the tree corresponding to @xmath106 .",
    "each of these trees is formed by `` gluing '' together two comb trees .",
    "for example , @xmath107 the following theorem is a special case of the general treatment of two turn trees given in section  [ turn trees ] .",
    "[ turn - turn ] for @xmath108 , @xmath109    without loss of generality , label the last leaf of each tree @xmath20 .",
    "the roots of the trees receive the same label , and thus the respective parents of the last leaf of each tree must receive @xmath29 and @xmath21 in some order , and the first leaf must be labeled @xmath20 .",
    "this implies that the last @xmath110 leaves are labeled @xmath20 .",
    "there are ( up to permutation of @xmath29 and @xmath21 ) three possible options for the labels of leaves @xmath41 and @xmath8 ( the bottom leaves of @xmath111 ) , namely @xmath112 , @xmath113 , and @xmath114 .",
    "each of the first two options can be seen to yield a unique common parse word as given in the statement of the theorem .",
    "the third option , in which leaves @xmath41 and @xmath8 are labeled @xmath114 , is not valid , since then the sibling of leaf @xmath115 in @xmath116 is labeled @xmath20 , which contradicts leaf @xmath115 receiving @xmath20 .",
    "if @xmath117 is a word of length @xmath110 and @xmath118 is a rational number whose denominator ( in lowest terms ) divides @xmath110 , let @xmath119 be the word consisting of repeated copies of @xmath10 truncated at @xmath120 letters .",
    "for example , @xmath121 .",
    "let @xmath122 be the path tree corresponding to @xmath123 .",
    "the left crooked trees for @xmath94 are as follows .",
    "@xmath124 let @xmath125 be the path tree corresponding to @xmath126  the left ",
    "right reflection of @xmath122 .",
    "the next two results determine the common parse words of a comb tree and the completely crooked trees of the same size .",
    "let @xmath127 be the left ",
    "right reversal of the word @xmath10 .",
    "let @xmath128 be the smallest nonnegative integer congruent to @xmath8 modulo @xmath19 .",
    "[ comb - crooked ] @xmath129",
    "@xmath130    one checks that for @xmath100 the set of equivalence classes of parse words is @xmath131 .",
    "inductively , assume that @xmath132 and @xmath133 parse the word claimed and that this is the only word they both parse ( up to permutations of the alphabet ) .",
    "for even @xmath41 , the two bottom leaves of @xmath133 are leaves @xmath134 and @xmath135 . for odd @xmath41 ,",
    "they are leaves @xmath136 and @xmath137 .",
    "observe that for even @xmath41 the right bottom leaf of @xmath133 receives @xmath20 , and for odd @xmath41 the left bottom leaf of @xmath133 receives @xmath20 . for @xmath138",
    "these are respectively the first and second of the two consecutive @xmath20s in the parse word .",
    "we attach @xmath139 at the bottom of @xmath133 to form @xmath125 and insert @xmath139 at the corresponding place in @xmath132 to form @xmath92 .",
    "label the new bottom leaves of @xmath125 @xmath112 if @xmath41 is even and @xmath140 if @xmath41 is odd ; we can label the corresponding leaves of @xmath92 the same by labeling their respective neighboring internal vertices @xmath20 and @xmath29 if @xmath41 is even and @xmath20 and @xmath21 if @xmath41 is odd .",
    "the permutation @xmath141 puts the new word in the form given in the theorem .",
    "this process is reversible , so every parse word for @xmath8 comes from a parse word for @xmath41 .",
    "the next theorem follows immediately from the previous theorem by labeling @xmath92 and @xmath125 with a common parse word and then attaching the root of each tree as the left leaf of @xmath139 .",
    "[ comb - crooked2 ] @xmath142 @xmath143    [ crooked - crooked count ] for @xmath94 , @xmath144    the cases @xmath145 and @xmath146 are easily verified .",
    "in particular , every parse word of the @xmath19-leaf pair consisting of @xmath15 is of the form @xmath147 for @xmath148 , where the two roots also get labeled @xmath149 .",
    "let @xmath8 be odd .",
    "consider inductively extending @xmath150 and @xmath151 by @xmath15 respectively to obtain @xmath122 and @xmath125 . because the three new leaves are leaves @xmath152 , @xmath153 , and @xmath154 in both @xmath122 and @xmath125 , every parse word @xmath155 for the two @xmath90-leaf crooked trees can be extended to a parse word @xmath156 for the two @xmath8-leaf crooked trees .",
    "moreover , every parse word for the two @xmath8-leaf crooked trees can be obtained in this way .",
    "since there are two choices for @xmath157 , there are twice as many parse words for the @xmath8-leaf crooked trees as for the @xmath90-leaf crooked trees , which establishes the statement for odd @xmath8 ; we see that @xmath158 is a parse word for @xmath122 and @xmath125 if and only if @xmath159 for @xmath160 .",
    "let @xmath8 be even .",
    "then every parse word of the @xmath8-leaf crooked trees can be obtained by extending a parse word @xmath161 of the @xmath162-leaf crooked trees .",
    "every parse word of @xmath139 in which the root receives label @xmath149 is of the form @xmath163 , where @xmath148 and @xmath164 , so there are twice as many parse words for the @xmath8-leaf crooked trees as for the @xmath162-leaf crooked trees , which establishes the statement for even @xmath8 .",
    "specifically , @xmath158 is a parse word for @xmath122 and @xmath125 if and only if @xmath165 and for some @xmath166 we have @xmath167 for @xmath168 .",
    "presumably explicit parse words can be found for various other parameterized families of tree pairs , but we now take a more general approach and establish results for tree pairs in which at least one of the trees does not come from a simple parameterized family . some of these results will be used in section  [ turn trees ] .",
    "note that , where stated , these results apply to not just path trees but binary trees in general .    [ shared bottom leaf ] let @xmath101 .",
    "if the @xmath24th leaf is a bottom leaf in two @xmath8-leaf path trees , then the trees both parse the word @xmath169 for some @xmath170 .",
    "for example , this proposition applies to the pair in theorem  [ crooked - crooked count ] consisting of @xmath122 and @xmath125 .    if @xmath171 then the second leaf is also a bottom leaf in both trees , so let @xmath172 ; similarly , if @xmath173 , let @xmath174 . if @xmath175 , let @xmath176 .",
    "labeling the @xmath177th leaf @xmath29 and all other leaves @xmath20 produces a valid labeling of both trees because the internal vertices of the two trees on each level receive the same label , namely alternating between @xmath21 and @xmath29 .",
    "we now give two propositions regarding extending a pair of binary trees by @xmath139 .",
    "[ bottom - bottom ] suppose @xmath178 and @xmath179 are @xmath8-leaf binary trees with a common parse word .",
    "extend each tree by attaching @xmath139 to leaf @xmath24 , obtaining @xmath78 and @xmath79 respectively",
    ". then @xmath180 in particular , @xmath78 and @xmath79 have a common parse word .",
    "let @xmath10 be a parse word of @xmath178 and @xmath179 .",
    "without loss of generality we may assume that @xmath181 .",
    "replacing @xmath182 by @xmath112 or @xmath140 produces a word that both @xmath78 and @xmath79 parse , and every parse word for the pair arises uniquely in this way .    in the next proposition",
    "we consider extending a tree @xmath9 by inserting @xmath139 into the tree at an internal vertex to `` duplicate '' a leaf .",
    "fix @xmath24 , and let @xmath183 be the tree hanging from the sibling vertex of leaf @xmath24 . remove @xmath183 from its position , attach @xmath139 to the sibling of leaf @xmath24 , and then reattach @xmath183 to a leaf of the new @xmath139 as follows . if leaf @xmath24 is a left leaf , attach @xmath183 to the right leaf of the new @xmath139 ; if leaf @xmath24 is a right leaf , attach @xmath183 to the left leaf .",
    "therefore if leaf @xmath24 in @xmath9 is a left leaf , then leaves @xmath24 and @xmath184 in the extended tree are both left leaves , and if leaf @xmath24 in @xmath9 is a right leaf , then leaves @xmath24 and @xmath184 in the extended tree are right leaves .",
    "we refer to this operation as _ duplicating _ leaf @xmath24 .",
    "[ bottom - comb ] suppose @xmath178 and @xmath179 are @xmath8-leaf binary trees with a common parse word .",
    "extend @xmath178 by attaching @xmath139 to leaf @xmath24 , obtaining @xmath78 . extend @xmath179 to obtain @xmath79 by duplicating leaf @xmath24 . then @xmath185 in particular , @xmath78 and @xmath79 have a common parse word .",
    "let @xmath10 be a parse word of @xmath178 and @xmath179 .",
    "without loss of generality we may assume that @xmath181 and that the parent of leaf @xmath24 in @xmath179 receives the label @xmath29 .",
    "if leaf @xmath24 is a left leaf in @xmath179 , then @xmath79 parses the word obtained by replacing @xmath182 by @xmath140 since duplicating leaf @xmath24 in @xmath179 has the effect of the replacement @xmath186 at the parent of leaf @xmath24 , which preserves the labels of all other vertices .",
    "if leaf @xmath24 is a right leaf in @xmath179 , then @xmath79 parses the word obtained by replacing @xmath182 by @xmath112 since now the replacement is @xmath187    clearly @xmath78 parses both of these words , so we have found a parse word for the pair .",
    "moreover , every parse word of @xmath78 and @xmath79 arises uniquely in this way .",
    "in section  [ parameterized families ] we referred to the two leaves of maximal depth in a path tree as _",
    "bottom leaves_. in a general binary tree , a _ bottom leaf _ is a leaf whose sibling is also a leaf .",
    "it is clear that for @xmath94 every @xmath8-leaf binary tree has at least one pair of bottom leaves , and every binary tree that is not a path tree has at least two pairs of bottom leaves .",
    "we use these facts in the next two theorems .",
    "[ comb - general ] let @xmath94 , and let @xmath9 be an @xmath8-leaf binary tree .",
    "let @xmath188 be the level of leaf @xmath29 in @xmath9",
    ". then @xmath189 .    by symmetry",
    ", the analogous result holds for the right comb .",
    "we work by induction on @xmath8 .",
    "the only @xmath21-leaf binary tree is @xmath190 , which has only one parse word up to permutation of the alphabet .",
    "let @xmath9 be an @xmath8-leaf binary tree .",
    "then @xmath9 has a pair of bottom leaves ; suppose these are leaves @xmath24 and @xmath184 .",
    "remove these two leaves to obtain @xmath191 , which has @xmath41 leaves . if @xmath171 , then proposition  [ bottom - bottom ] gives twice as many parse words for @xmath9 and @xmath92 as parse words for @xmath191 and @xmath132 . if @xmath192 , then leaf @xmath24 is a right leaf in @xmath132 , so proposition  [ bottom - comb ] gives the same number of parse words as for @xmath191 and @xmath132 .",
    "csar , sengupta , and suksompong  @xcite have recently provided a generalization of theorem  [ comb - general ] .",
    "they consider a partial ordering on the set of @xmath8-leaf binary trees arising from the rotation operation .",
    "they show that if @xmath78 and @xmath79 are @xmath8-leaf binary trees whose join exists under this partial ordering , then @xmath193 is a certain power of @xmath21 .",
    "the following theorem is an extension of theorem  [ comb - general ] to turn trees , although we lose the enumeration .",
    "[ turn - general ] let @xmath194 .",
    "let @xmath78 be an @xmath8-leaf binary tree and @xmath79 an @xmath8-leaf left turn tree .",
    "then @xmath78 and @xmath79 have a common parse word .",
    "we work by induction on @xmath8 . for @xmath195",
    "the result can be verified explicitly .",
    "now suppose that every @xmath162-leaf binary tree has a common parse word with every @xmath162-leaf left turn tree .",
    "let @xmath78 be an @xmath8-leaf binary tree , and let @xmath79 be an @xmath8-leaf left turn tree .",
    "then @xmath78 has a pair of bottom leaves ; suppose these are leaves @xmath24 and @xmath184 .",
    "first we consider the case where the @xmath24th leaf of @xmath79 is the right bottom leaf .",
    "if @xmath78 is a path tree , then @xmath78 and @xmath79 have a common parse word by proposition  [ shared bottom leaf ] .",
    "if @xmath78 is not a path tree , then there is another pair of bottom leaves in @xmath78 , so we may re - choose @xmath24 if necessary so that the @xmath24th leaf of @xmath79 is not the right bottom leaf .",
    "therefore we may assume that the @xmath24th leaf of @xmath79 is not the right bottom leaf .",
    "remove leaves @xmath24 and @xmath184 from @xmath78 to obtain @xmath178 , which has @xmath41 leaves and so has a common parse word with every @xmath162-leaf left turn tree .",
    "if the @xmath24th leaf of @xmath79 is the left bottom leaf , then we can apply proposition  [ bottom - bottom ] to obtain a common parse word for @xmath78 and @xmath79 .",
    "otherwise , leaves @xmath24 and @xmath184 occur on consecutive levels in @xmath79 , so proposition  [ bottom - comb ] applies .",
    "in this section we give three theorems that collectively determine the number of parse words of @xmath111 and @xmath196 .",
    "note that by theorem  [ turn - general ] the number of parse words is nonzero .",
    "[ unique turn - turn count ] for @xmath108 , @xmath197 , and @xmath198 , @xmath199    the bottom leaves of @xmath102 ( which are leaves @xmath41 and @xmath8 ) correspond to leaves which are on consecutive levels in @xmath196 , so we can apply proposition  [ bottom - comb ] to see that @xmath200 now , our hypothesis applies to this new , smaller tree pair , so we may continue reducing in the same way until we have reduced the right comb in the left turn tree entirely away . at this point",
    ", we are considering the trees @xmath201 and @xmath202 , which have a unique parse word class by theorem  [ comb - general ] .",
    "let @xmath203 by considering the left ",
    "right reflections of these two trees , we see that @xmath204 .",
    "theorem  [ turn - turn count ] determines the number of parse words of @xmath111 and @xmath196 for @xmath205 in terms of @xmath206 , and theorem  [ 2-parameter turn - turn count ] evaluates @xmath206 .",
    "[ turn - turn count ] for @xmath108 , @xmath197 , and @xmath205 , @xmath207    if @xmath208 , then the bottom leaves of @xmath102 correspond to leaves which are on consecutive levels in @xmath196 , so we can apply proposition  [ bottom - comb ] to see that @xmath209 if our hypothesis applies to this new , smaller tree pair , we may continue reducing in exactly the same way until we reach @xmath210 and @xmath211 .",
    "leaves @xmath177 and @xmath212 are bottom leaves in both these trees , so by proposition  [ bottom - bottom ] we have @xmath213    for the final result concerning the number of parse words of two turn trees , it turns out to be convenient to focus on the labels of the internal vertices rather than of the leaves .",
    "we form a word consisting of the internal vertex labels of a labeled path tree by reading these labels from top to bottom .",
    "a word on @xmath214 is _ alternating _ if no two consecutive letters are equal .",
    "if the internal vertices of a path tree are labeled with @xmath10 , then the labeling can be extended to a parse word for the tree precisely when @xmath10 is alternating",
    ". therefore it will be important to know the sizes of certain sets of alternating words .",
    "let @xmath215 be the set of length-@xmath110 alternating words of the form @xmath216 , where @xmath217 .",
    "let @xmath218 be the set of length-@xmath110 alternating words of the form @xmath216 , where @xmath219 and @xmath220 .",
    "[ alternating counts ] for @xmath221 , @xmath222 and @xmath223 .",
    "let @xmath224 be the number of length-@xmath110 alternating words on @xmath214 beginning with @xmath114 and ending with @xmath225 .",
    "then @xmath226 since @xmath227 and @xmath228 .",
    "therefore @xmath229    since @xmath230 and @xmath231 also count alternating words of the forms @xmath232 and @xmath233 respectively , we have @xmath234 similarly , @xmath235    next we provide a simple recurrence satisfied by @xmath206 .",
    "unfortunately , we do not know a correspondingly simple proof .",
    "[ 2-parameter turn - turn count ] for @xmath108 and @xmath197 , @xmath236    initial conditions that suffice to completely determine @xmath206 from this recurrence are @xmath237 , @xmath238 , @xmath239 , @xmath240 , @xmath241 , and @xmath242 .",
    "the particular solution can be written as the matrix product @xmath243    let @xmath221 and @xmath244 , and let @xmath215 and @xmath218 be as above .",
    "let @xmath245    we consider the set of pairs @xmath246 of length-@xmath247 ( alternating ) words such that @xmath248 and such that respectively labeling the internal vertices of @xmath249 and @xmath250 with @xmath251 and @xmath252 produces a parse word for the pair .",
    "such pairs @xmath246 are in bijection with equivalence classes of parse words for this tree pair as follows .",
    "the internal vertex labels of a path tree determine the labels of all leaves except the bottom leaves .",
    "since @xmath249 and @xmath250 do not share both bottom leaves , labeling the internal vertices with the pair @xmath246 determines a unique parse word",
    ". we may choose representative parse words so that the internal vertex labels of @xmath250 begin with @xmath114 ( since the first two labels can not be the same ) .",
    "let @xmath253 be the length-@xmath177 prefix of @xmath252 .",
    "thus the internal vertices of the right comb of @xmath250 are labeled with letters from @xmath10 , and the first letter of the parse word is @xmath21 .",
    "we show that if @xmath10 contains all three letters then the set of pairs @xmath246 is @xmath254 and if @xmath255 contains only two letters then this set is @xmath256    to see this , first suppose that @xmath257 and @xmath258 for some @xmath259 .",
    "then @xmath259 begins with @xmath20 , so @xmath10 does not end in @xmath20 , and every @xmath260 produces a parse word .    next",
    "suppose that @xmath261 and @xmath258 for some @xmath262 .",
    "then in fact @xmath259 and @xmath263 differ in every position ; in particular , @xmath259 begins with some letter @xmath264 .",
    "let @xmath265 such that @xmath266 .",
    "then the final leaf receives the label @xmath24 since it is a child of a @xmath20 leaf in @xmath249 and a child of a @xmath267 leaf in @xmath250 .",
    "it follows that @xmath268 and @xmath269 ; therefore @xmath110 is even , and choosing @xmath267 to be either @xmath29 or @xmath21 produces a parse word as long as it differs from the last letter of @xmath10 .",
    "finally , suppose that @xmath270 for some length-@xmath177 word @xmath271 .",
    "then @xmath10 and @xmath272 differ in every position ; in particular , @xmath272 begins with @xmath29 , and it follows that @xmath273 and @xmath274 . if @xmath10 ends in @xmath20 , then @xmath275 , yielding the parse word @xmath276 .",
    "if @xmath10 ends in @xmath29 , then every @xmath277 produces a parse word , and @xmath258 .    since we know the sizes of all these sets by proposition  [ alternating counts ]",
    ", we can enumerate the set of internal word pairs @xmath246 and obtain an expression for @xmath206 , which as expected is symmetric in @xmath110 and @xmath177 . for fixed @xmath177",
    "the expression is a linear combination of @xmath278 , @xmath29 , and @xmath279 , so it satisfies the recurrence stated in the theorem , which can be written @xmath280 where @xmath281 is the forward shift operator in the variable @xmath110 .",
    "when @xmath282 or @xmath283 one of the two trees is a comb tree , and by theorem  [ comb - general ] we have @xmath284 , which one checks is also what the general expression for @xmath206 gives upon setting @xmath282 or @xmath283 .",
    "how might one proceed from the theorems of the previous sections to a proof that every two @xmath8-leaf path trees parse a common word ? here we introduce two notions of reducibility  ways to reduce the problem of finding a parse word for a pair of trees to finding parse words for smaller pairs  and give some related conjectures .      recall that if @xmath78 and @xmath79 are @xmath8-leaf trees such that leaves @xmath24 and @xmath184 are siblings in both trees , then proposition  [ bottom - bottom ] reduces the problem of finding a parse word for @xmath78 and @xmath79 to the problem of finding a parse word for the pair of @xmath162-leaf trees in which the common @xmath139 has been removed .",
    "our first observation is that there is nothing special about @xmath139 ; if the two trees have any common branch system in the same position , then we can decompose the trees .",
    "for example , the @xmath285-leaf trees @xmath286 share the branch system @xmath287 in the second through fifth leaves , which we may remove to obtain the @xmath87-leaf trees @xmath288 given a common parse word @xmath289 of this pair of @xmath87-leaf trees , we can find a common parse word of the original pair of @xmath285-leaf trees by taking any valid labeling of @xmath183 and permuting the alphabet so that the root receives the label @xmath290 .    in fact to decompose a pair of trees we only require a vertex in @xmath78 with dangling subtree @xmath291 and a vertex in @xmath79 with dangling subtree @xmath292 such that the leaves in @xmath291 and @xmath292 are the same .",
    "for example , there are two such vertex pairs in the tree pair @xmath293 ( where corresponding leaves have been given the same label ) . breaking the trees at levels @xmath21 and @xmath285 as @xmath294 produces the same partition @xmath295 of the leaves in both trees .",
    "thus , to find a parse word for the original pair it suffices to find parse words for the subtree pairs .",
    "proposition  [ root label ] guarantees that we can reattach the subtrees consistently , since every binary tree that parses @xmath10 receives the same label for its root when the leaves are labeled with the letters of @xmath10 .",
    "let us call a pair of path trees _",
    "indecomposable _ if there is no such ( nontrivial ) decomposition .",
    "the tree pair in theorem  [ comb - comb ] consisting of @xmath92 and @xmath96 is indecomposable , as is the pair in theorem  [ comb - crooked ] consisting of @xmath92 and @xmath125 . on the other hand , breaking the trees @xmath92 and @xmath122 at level @xmath29 shows that this pair is decomposable , and in this case the decomposition accounts for the non - uniqueness of the equivalence classes of words in theorem  [ comb - crooked2 ] .",
    "we showed in proposition  [ bottom - comb ] that if leaves @xmath24 and @xmath184 are siblings in @xmath78 and are on consecutive levels in @xmath79 then this pair of trees is reducible .",
    "it is natural then to ask whether a tree pair in which leaves @xmath24 and @xmath184 are on consecutive levels in both trees is reducible .",
    "first let us consider the pair @xmath297 which has the common parse word @xmath298 .",
    "the three consecutive @xmath20s label leaves in both trees that are arranged in a right comb structure , and shortening each comb by two leaves produces the pair @xmath299 which parses @xmath300 . in other words ,",
    "we obtain a parse word for the larger pair by simply inserting two @xmath20s corresponding to the two added leaves .",
    "let us see why this works .",
    "in the first tree , the @xmath301-leaf right comb subtree whose first three leaves are labeled @xmath20 has internal vertex labels @xmath29 , @xmath21 , and @xmath29 ; in the second tree , the corresponding @xmath301-leaf right comb subtree has internal vertex labels @xmath21 , @xmath29 , and @xmath21 . in both cases , the internal vertex labels alternate between @xmath29 and @xmath21 , so shortening the comb by two leaves preserves the label of the root and the labels of the bottom leaves .",
    "hence we still have a valid labeling .",
    "the situation will be the same even if the two combs have different orientations , and even if the trees are not path trees but binary trees in general .",
    "we formalize this as follows .",
    "the relevant extending operation is _ triplicating _ leaf @xmath24  inserting two @xmath139 structures in @xmath191 so as to obtain three left leaves in @xmath9 if leaf @xmath24 is a left leaf in @xmath191 and three right leaves in @xmath9 if leaf @xmath24 is a right leaf in @xmath191 , analogous to duplicating a leaf as discussed in section  [ general families ] .",
    "let @xmath178 and @xmath179 be @xmath90-leaf binary trees .",
    "let @xmath302 , and let @xmath78 and @xmath79 be the @xmath8-leaf trees obtained from @xmath178 and @xmath179 by triplicating leaf @xmath24 . if @xmath303 is a parse word for @xmath178 and @xmath179 , then @xmath304 is a parse word for @xmath78 and @xmath79 .",
    "a pair of @xmath8-leaf trees @xmath78 and @xmath79 is _ weakly mutually crooked _ if it can not be obtained by triplicating some leaf @xmath24 in a pair of @xmath90-leaf trees . to prove that every pair of binary trees has a parse word , by the previous theorem it suffices to consider pairs of weakly mutually crooked trees .",
    "however , it appears that something stronger is true .",
    "a pair of @xmath8-leaf trees @xmath78 and @xmath79 is _ mutually crooked _ if it can not be obtained by duplicating some leaf @xmath24 in a pair of @xmath162-leaf trees .",
    "that is , no pair of consecutive leaves has an uncle ",
    "nephew relationship in both trees .",
    "for example , the pair parsing @xmath13 in section  [ introduction ] is mutually crooked .",
    "experimental evidence suggests that in fact it suffices to consider pairs of mutually crooked trees .",
    "let @xmath178 and @xmath179 be @xmath162-leaf binary trees .",
    "let @xmath305 , and let @xmath78 and @xmath79 be the @xmath8-leaf trees obtained from @xmath178 and @xmath179 by duplicating leaf @xmath24 .",
    "there exists a parse word @xmath306 of @xmath78 and @xmath79 such that @xmath307 .",
    "for example , in the pair discussed at the beginning of this subsection , leaves @xmath87 and @xmath308 are on consecutive levels in both trees , and these leaves receive the label @xmath21 .",
    "note however that the parse word of @xmath78 and @xmath79 is not necessarily a simple extension of a parse word of @xmath178 and @xmath179 .    the trees @xmath122 and @xmath125 ( which we addressed in theorem  [ crooked - crooked count ] ) are mutually crooked , but for @xmath309 no path tree is mutually crooked to @xmath92 , since even a completely crooked tree has a pair of consecutive leaves that lie in consecutive levels .",
    "theorems  [ comb - comb ] and [ turn - turn ] provide additional examples of pairs that fail to be mutually crooked .      to prove that every pair of @xmath8-leaf binary trees @xmath78 and @xmath79 has a parse word , it therefore suffices to consider indecomposable , weakly mutually crooked pairs of trees .",
    "in particular , we may assume that the leaves on level @xmath29 in @xmath78 and @xmath79 are different , since if they are the same then the pair is decomposable at level @xmath29 into smaller pairs .",
    "let @xmath101 , and let @xmath78 and @xmath79 be @xmath8-leaf path trees such that leaf @xmath29 is on level @xmath29 in @xmath78 and leaf @xmath8 is on level @xmath29 in @xmath79 .",
    "then @xmath78 and @xmath79 have no parse word of the form @xmath310 .    for @xmath146 one",
    "checks that @xmath311 is not a parse word for one of the two @xmath19-leaf binary trees .",
    "assume @xmath194 . toward a contradiction ,",
    "suppose that @xmath310 is a common parse word for some @xmath259 .",
    "then the root of each tree receives the label @xmath21 , and the internal vertex on level @xmath29 of @xmath78 receives @xmath29 .",
    "consider the children of this internal vertex . if the right child is a leaf ,",
    "then it is leaf @xmath8 and so receives @xmath29 , which is not a valid label because its parent is already labeled @xmath29 .",
    "if the left child is a leaf , then it is leaf @xmath21 and so receives @xmath29 , which is also not a valid label .",
    "let @xmath194 , and let @xmath78 and @xmath79 be @xmath8-leaf path trees such that leaf @xmath29 is on level @xmath29 in @xmath78 and leaf @xmath8 is on level @xmath29 in @xmath79 .",
    "then we have the following .    *",
    "if @xmath78 and @xmath79 have no parse word of the form @xmath313 or @xmath314 , then they have a unique parse word ( up to permutation of alphabet ) . *",
    "if @xmath78 and @xmath79 have no parse word of the form @xmath313 and are mutually crooked , then they have a parse word of the form @xmath315 . *",
    "if @xmath78 and @xmath79 have no parse word of the form @xmath313 , then the only possibilities for the @xmath21-tuple @xmath316 are @xmath317 and @xmath318 for some @xmath244 .",
    "+ moreover , if @xmath78 and @xmath79 are weakly mutually crooked , the only possibilities are @xmath317 and @xmath318 for some @xmath319 .",
    "+ moreover , if @xmath78 and @xmath79 are mutually crooked , the only possibilities are @xmath317 and @xmath318 for some @xmath320 ."
  ],
  "abstract_text": [
    "<S> this paper considers the problem of showing that every pair of binary trees with the same number of leaves parses a common word under a certain simple grammar . </S>",
    "<S> we enumerate the common parse words for several infinite families of tree pairs and discuss several ways to reduce the problem of finding a parse word for a pair of trees to that for a smaller pair . </S>",
    "<S> the statement that every pair of trees has a common parse word is equivalent to the statement that every planar graph is four - colorable , so the results are a step toward a language theoretic proof of the four color theorem . </S>"
  ]
}
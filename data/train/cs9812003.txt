{
  "article_text": [
    "neural networks have been employed before to solve boundary and initial value problems @xcite as well as eigenvalue problems @xcite .",
    "the cases treated in the above mentioned articles were for simple finite or extended to infinity _ orthogonal box _ boundaries .",
    "however when one deals with realistic problems , as for instance in modelling the human head - neck system @xcite or the flow and mass transfer in chemical vapor deposition reactors @xcite , the boundary is highly irregular and can not be described in terms of simple geometrical shapes , that in turn would have allowed for a simple modelling scheme .    in this article",
    "we propose a method capable of dealing with such kind of arbitrarily shaped boundaries . as before @xcite",
    ", our approach is based on the use of feedforward artificial neural networks ( anns ) whose approximation capabilities have been widely aknowledged @xcite . more specifically , the proposed approach is based on the synergy of two feedforward anns of different types : a multilayer perceptron ( mlp ) as the basic approximation element and a radial basis function ( rbf ) network for satisfying the bcs , at the selected boundary points .",
    "in addition , our approach relies on the availability of efficient software for multidimensional minimization @xcite that is used for adjusting the parameters of the networks .    a solution to differential equation problems based on anns exhibits several desirable features :    * differentiable closed analytic form .",
    "* superior interpolation properties . *",
    "small number of parameters .",
    "* implementable on existing specialized hardware ( neuroprocessors ) . *",
    "also efficiently implementable on parallel computers .    in the next section",
    "we describe the proposed method and derive useful formulas , while in section 3 , we discuss implementation procedures and numerical techniques . in section 4",
    "we illustrate the method by means of examples and we compare our results to analytically known ones .",
    "finally section 5 contains conclusions and directions for future research .",
    "we will examine pdes of the form @xmath0 where @xmath1 is a differential operator and @xmath2 ( @xmath3 ) , with dirichlet b.c.s , i.e. with @xmath4 being specified on the boundary @xmath5 .",
    "the boundary can be any arbitrarily complex geometrical shape .",
    "we consider that the boundary is defined as a set of points that are chosen so as to represent its shape reasonably accurate .",
    "suppose that @xmath6 points @xmath7 are chosen to represent the boundary and hence the boundary conditions are given by : @xmath8    to obtain a solution to the above differential equation , the _ collocation _ method @xcite is adopted which assumes the discretization of the domain @xmath9 into a set of points @xmath10 ( these points are denoted by @xmath11 , @xmath12 ) .",
    "the problem is then transformed into the following system of equations : @xmath13    let @xmath14 denote a trial solution to the above problem where @xmath15 stands for a set of model parameters to be adjusted . in this way , the problem is transformed into the following constrained minimization problem : @xmath16 subject to the constraints imposed by the b.cs @xmath17 the above constrained optimization problem may be tackled in a number of ways .    1 .",
    "either devise a model @xmath18 , such that the constraints are exactly satisfied by construction and hence use unconstrained optimization techniques , 2 .   or , use a suitable constrained optimization method for non - linear constraints .",
    "for instance : lagrange multipliers , active set methods or a penalty function approach .",
    "a model suitable for the first approach is a synergy of two feedforward neural networks of different type , and it can be written as : @xmath19 where @xmath20 is a multilayer perceptron ( mlp ) with the weights and biases collectively denoted by the vector @xmath15 .",
    "the sum in the above equation is an rbf network with @xmath6 hidden units that all share a common exponential factor @xmath21 .    for a given set of mlp parameters @xmath15 , the coefficients @xmath22",
    "are uniquely determined by requiring that the boundary conditions are satisfied , ie : @xmath23 namely one has to solve a linear system , @xmath24 , where @xmath25 and @xmath26 where @xmath27 .",
    "we consider now a penalty function method to solve the constrained optimization problem .",
    "the model in this case is simply @xmath28 .",
    "the error function to be minimized is now given by : @xmath29 where the penalty factor @xmath30 , takes on higher and higher positive values depending on how accurately the bcs are to be satisfied .",
    "the mlp - rbf synergy satisfies exactly the bcs but it is slow . at every evaluation of the model one needs to solve a linear system which may be quite large , depending on the problem . also since many efficient optimization methods need the gradient of the error function , one has to solve for each gradient component an aditional linear system of the same order .",
    "this makes the process computationally intensive . on the other hand ,",
    "the penalty method is very efficient , however satisfies the bcs approximately only . in practice",
    "a combination of these two methods may be used profitably in the following manner .",
    "* use the penalty method to obtain a reasonable model that satisfies to some extend the bcs . *",
    "improve the model , using for a few iterations the synergy method , that will in addition satisfy the bcs exactly .",
    "we used the above combination in all of our experiments and our results are quite encouraging .",
    "the mlps we have considered contain one hidden layer with sigmoidal hidden units and a linear output that is computed as : @xmath31 where @xmath32 is the number of input units , @xmath33 is the number of the hidden units and @xmath34^{-1}$ ] .    in order to minimize the error @xmath35 , optimization techniques are employed that require the computation of the derivatives @xmath36 and , consequently , the derivatives @xmath37 which are listed below : @xmath38 since @xmath39 we get : @xmath40 i.e. one has to solve as many @xmath41 linear systems as the number of the parameters @xmath15 . derivatives of the mlp with respect to either the parameters @xmath15 or the input variables can be easily derived and are given in @xcite .    in order to apply the proposed method , first the value of @xmath21",
    "must be specified that defines the linear system ( matrix @xmath42 ) . in our experiments",
    "the linear system was solved using standard choleski decomposition for the matrix a. we did not use special methods for sparse linear systems nor any parallel programming techniques .    for large values of @xmath21 the gaussian terms in the rbf are all highly localized so that affect the model only in the neighborhood of the boundary points . in other words the rbf contributes a `` correction '' to account for the bcs .",
    "for small values of @xmath21 , the matrix looses rank and becomes singular .",
    "so @xmath21 must be selected with caution .",
    "a good choice is found to be : @xmath43 , where @xmath44 is the minimum distance between any two points on the boundary , ie : @xmath45 $ ] , where @xmath46 .",
    "note that different @xmath21 s may also be used instead of a common one in equation ( 6 ) . in that case",
    "the corresponding @xmath47 would be the distance of the closest boundary neighbouri to point @xmath48 , i.e. @xmath49 $ ] , where @xmath50 .",
    "however a common @xmath21 leads to a symmetric matrix @xmath42 that in turn renders the linear system easier to solve .",
    "training of the mlp network so as to minimize the error of eq .",
    "( 4 ) can be accomblished using any minimization procedure such as gradient descent ( backpropagation or any of its variants ) , conjugate gradient , newton methods etc .",
    "many effective minimization techniques are provided by the merlin / mcl multidimensional optimization system @xcite which has been employed in our experiments .",
    "it has been earlier demonstrated @xcite , that an improvement in the generalization of the neural model is achieved , if the sigmoidal parameters are kept inside a limited range such that the exponentials do not loose precision .",
    "hence box - constrained optimization techniques should be used to guarantee the above requirement . from the variety of the minimization methods offered by the merlin optimization environment , the ( quadratically convergent ) bfgs method @xcite seemed to have the best performance .    when solving problems requiring several hundreds of boundary points ( and thousands of domain points )",
    "the method may become relatively slow .",
    "there are several techniques that may be applied in order to accelerate the process .",
    "the linear systems are sparse and hence one can employ iterative sparse solvers instead of the choleski factorization method that we used here . when computing the gradient of the error function , one has to solve many linear systems with identical left hand sides and hence one may use special methods that currently are under investigation and development @xcite .",
    "parallel programming techniques for machines with many cpus are also applicable .",
    "the most efficient implementation however would be one that will utilize specialized hardware ( neuroprocessors ) .",
    "we describe now the strategy followed in detail .    1 .   at first we use the efficient penalty function approach ( with @xmath51 in all tests ) to obtain an mlp network that approximates the solution both inside the domain and on the boundary .",
    "then we switch to the mlp - rbf method with initial parameter values for the mlp network those obtained from the penalty method .",
    "therefore the mlp - rbf method starts from a low error value and requires only a few minimization steps in order to reach a solution of even lower error value which in addition satisfies the bcs exactly .",
    "* problem 1 : * consider the problem : @xmath52\\ ] ] with boundary conditions : @xmath53    the analytic solution is : @xmath54 .",
    "this example has also been treated in @xcite . here",
    "the problem is treated by picking points on the boundary as if it were any arbitrary shape .",
    "more specifically , we take the following points @xmath55 on the boundary , where @xmath56 and @xmath57 denote the number of points which divide the interval @xmath58 $ ] on the x - axis and y - axis respectively and @xmath59 , @xmath60 : @xmath61 @xmath62 @xmath63 @xmath64 after this selection , a test is made to remove duplicates , which in this case are the points at the corners of the rectangle boundary . in our experiments",
    "we have considered @xmath65 and , therefore , the total number of points taken on the boundary is @xmath66 . for the points inside the definition domain we pick points on a rectangular grid by subdividing the @xmath67 $ ] interval in 10 equal subintervals that correspond to 9 points in each direction .",
    "thus a total of @xmath68 points are selected .",
    "the analytic solution is presented in fig . 1 , while the accuracy @xmath69 of the obtained solution is presented in fig .",
    "in all two - dimensional examples we used an mlp with 20 hidden units .",
    "* problem 2 : *    the same problem is solved with the boundary being the first quarter of the unit circle . the solution domain is defined as the rectangle @xmath58\\times [ 0,\\pi/2]$ ] on the polar coordinates @xmath70 . to obtain the boundary points @xmath55 we first defined the boundary points @xmath70 in the polar coordinates ( according to the procedure of the previous problem ) and then we computed the @xmath55 values : @xmath71 , @xmath72 .",
    "we have used @xmath73 boundary points and @xmath68 grid points . the exact solution and the accuracy of the obtained solution",
    "are displayed in fig .",
    "3 and 4 in the @xmath70 coordinates .",
    "* problem 3 : *    finally we solved eq .",
    "( 11 ) when the boundary is the unit circle .",
    "the solution domain is defined as the rectangle @xmath58\\times [ 0,2\\pi]$ ] on the polar coordinates @xmath70 .",
    "the boundary points @xmath55 are defined as @xmath74 , @xmath75 , where @xmath76 , @xmath77 .",
    "we have used @xmath78 boundary points and @xmath79 grid points . the analytic solution and the accuracy of the obtained solution",
    "are displayed in fig .",
    "5 and 6 respectively in the @xmath70 coordinates .",
    "* problem 4 : * consider the problem : @xmath80\\ ] ] with analytic solution : @xmath81 known at the boundary .    similarly with the approach described in problem 1 ,",
    "we define the boundary points by dividing the @xmath58 $ ] interval along the x - axis , y - axis , z - axis with @xmath82 points respectively and taking the points @xmath83 : @xmath84 @xmath85 @xmath86 @xmath87 @xmath88 @xmath89 where @xmath90 .    after this specification",
    "a test is made to remove duplicates or points that were very close to another point , and the final number of boundary points was @xmath91 . for the points inside the definition domain we pick points on a rectangular grid subdividing the @xmath67 $ ] interval in 10 equal subintervals that correspond to 9 points in each direction defining a total of @xmath92 points .",
    "the analytic solution for ( @xmath93 is presented in fig .",
    "7 , while the accuracy @xmath94 of the obtained solution is presented in fig .",
    "8 . in all three - dimensional examples we used an mlp with 40 hidden units .",
    "* problem 5 : * we considered the previous problem : @xmath95 on the domain @xmath96\\times [ 0,\\pi/2 ] \\times [ 0,\\pi/2]$ ] on the spherical coordinates @xmath97 . similarly with the approach described in problem 4 ,",
    "we define the boundary points by dividing the intervals r - axis , @xmath98-axis , @xmath99-axis with @xmath100 points respectively and taking the points @xmath97 : @xmath101 @xmath102 @xmath103 @xmath104 @xmath105 @xmath106 where @xmath107 , @xmath108 , @xmath109 . from the @xmath110 values we obtained the corresponding @xmath83 points using the well - known transformation .    after this specification",
    "a test is made to remove duplicates or points that were very close to another point , and the final number of boundary points was @xmath111 . for the points inside the definition domain we pick points @xmath112 on a rectangular grid subdividing the @xmath113 $ ] , @xmath114 $ ] intervals in 10 equal subintervals that correspond to 9 points in each direction defining a total of @xmath92 points @xmath97 .",
    "then the @xmath83 points were obtained from the @xmath115 points . the exact solution and accuracy of the obtained solution",
    "are displayed in fig .",
    "9 and 10 in the @xmath116 coordinates for @xmath117 .",
    "we have presented a method for solving differential equations with dirichlet bcs , where the boundary can be of arbitrary shape and is discretized to obtain a set of boundary points .",
    "the method is based on the synergy of mlp and rbf artificial neural networks and provides accurate and differentiable solutions ( in a closed analytic form ) that exactly satisfy the bcs at the selected boundary points .",
    "moroeover it is possible to implement the method on specialized hardware ( neuroprocessors ) to significantly improve the required solution time .",
    "the proposed method is quite general and can be used for a wide class of pdes with dirichlet bcs , regardless of the shape of the boundary .",
    "the only requirement is that enough boundary points are selected so as to represent the boundary shape with sufficient accuracy",
    ".    future work will focus on the application of the method to real - world 3-d problems , containing surfaces of real objects with arbitrary shapes as boundaries .",
    "interesting problems of this kind arise in many scientific fields .",
    "we have a strong interest in implementing the method on both , general purpose parallel hardware and on neuroprocessors .",
    "the later would reveal the full potential of the proposed approach and would lead to the development of specialized machines , that will allow the treatment of difficult and computationally demanding problems .",
    "* ackowledgement : * one of us ( i. e. l ) wishes to acknowledge the warm hospitality offered by professors ishii and tsoukalas of purdue university , at the school of nuclear engineering , during his stay at lafayette .",
    "i. e. lagaris , a. likas and d. i. fotiadis , _ artificial neural networks for solving ordinary and partial differential equations _ ,",
    "preprint 15 - 96 , dept . of computer science , university of ioannina(1996 ) obtainable via anonymous ftp from zeus.cs.uoi.gr , file pub / papers / ode_pde / ode_pde.ps        d. i. fotiadis , m. boekholt , k. jensen and w. richter , _ flow and heat transfer in cvd reactors : comparison of raman temperature measurement and finite element method prediction _",
    ", j. of crystal growth , vol .",
    "577 - 599 , 1990 .",
    "papageorgiou , i.n .",
    "demetropoulos and i.e.lagaris , _",
    "merlin-3.0 , a multidimensional optimization environment _ , preprint 4 - 98 dept . of computer science , university of ioannina(1997 ) .",
    "( to appear in _ computer physics communications _",
    "journal , 1998 ) .",
    "the merlin / mcl software is currently obtainable from the url : http://nrt.cs.uoi.gr/merlin/            d. a. karras and i. e. lagaris , _ a novel neural network training technique based on a multi algorithm constrained optimization strategy _ , preprint 14 - 96 , department of computer science , university of ioannina ( 1996 ) ."
  ],
  "abstract_text": [
    "<S> partial differential equations ( pdes ) with dirichlet boundary conditions defined on boundaries with simple geomerty have been succesfuly treated using sigmoidal multilayer perceptrons in previous works @xcite . </S>",
    "<S> this article deals with the case of complex boundary geometry , where the boundary is determined by a number of points that belong to it and are closely located , so as to offer a reasonable representation . </S>",
    "<S> two networks are employed : a multilayer perceptron and a radial basis function network . </S>",
    "<S> the later is used to account for the satisfaction of the boundary conditions . </S>",
    "<S> the method has been succesfuly tested on two - dimensional and three - dimensional pdes and has yielded accurate solutions . </S>"
  ]
}
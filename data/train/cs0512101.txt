{
  "article_text": [
    "stopping sets were introduced in @xcite for the analysis of erasure decoding of ldpc codes .",
    "it was shown that the iterative decoder fails to decode to a codeword if and only if the set of erasure positions is a superset of some stopping set in the tanner graph @xcite used in decoding .",
    "considerable analysis has been carried out on the distribution of stopping set sizes in ldpc code ensembles , giving valuable insight into the asymptotic performance of message - passing decoding on ldpc ensembles  see for example @xcite . since small stopping sets are directly responsible for poor performance of iterative decoding algorithms , it is of interest to determine the size of the smallest stopping set in a tanner graph , called the _ stopping distance _ of the graph .",
    "construction of codes for which there are tanner graphs that do not contain small stopping sets has been studied  see for example @xcite .",
    "the stopping distance of the graph , is of interest as it gives the minimum number of erasures that can cause iterative decoding to fail .",
    "the relationship between stopping distance and other graph parameters like girth has been explored in @xcite where it is shown that large girth implies high stopping distance .",
    "pishro - nik and fekri @xcite showed that by adding a suitable number of parity checks the stopping distance of a tanner graph for a code can be increased to the maximum possible , viz .",
    ", the minimum distance of the code .",
    "schwartz and vardy @xcite defines the _ stopping redundancy _ of a code as the minimum number of rows in a parity check matrix for the code such that the stopping distance of the corresponding tanner graph is equal to the minimum distance of the code and proves some bounds on the stopping redundancy for various classes of codes .",
    "further investigations on stopping redundancy may be found in @xcite .    in this correspondence , we show that the computational problems of determining whether a given tanner graph has a stopping set of a given size or at most a given size are np - complete .",
    "these are shown by reductions from the well known np - complete problems of determining whether a given graph contains a vertex cover of a given size ( respectively at most a given size ) to the above problems .",
    "np - hardness of the problem of finding the stopping distance of a tanner graph follows as a consequence of the latter result .",
    "given a parity check matrix @xmath0 \\in gf(2)^{(n - k)\\times n}$ ] , @xmath1 for an @xmath2 binary linear code , the tanner graph is the undirected bipartite graph @xmath3 where @xmath4 , @xmath5 and @xmath6",
    ". the set @xmath7 corresponds to the set of codeword elements and @xmath8 corresponds to the set of parity checks .",
    "we refer to the set @xmath7 and @xmath8 as the set of left and right vertices respectively . for @xmath9",
    ", we define @xmath10 .",
    "@xmath11 is a _ stopping set _ if for all @xmath12 , @xmath13 ie .",
    ", every vertex connected to some vertex in a stopping set must have at least two neighbours in the the stopping set .",
    "the _ stopping distance _ of a tanner graph is the size of the smallest stopping set in the graph .",
    "we define two decision problems concerning stopping sets :    stopping set : given a tanner graph @xmath14 and positive integer @xmath15 , does @xmath14 have a stopping set of size @xmath15 .",
    "stopping distance : given a tanner graph @xmath14 and positive integer @xmath15 , does @xmath14 have a stopping set of size at most @xmath15 .",
    "note that the corresponding decision problems arising out of the problem of finding the minimum distance of a code were shown to be np - complete in @xcite and @xcite .",
    "it is clear that if either stopping set or stopping distance can be solved in polynomial time , then evoking the algorithm at most @xmath16 times , the problem of actually finding the stopping distance of a tanner graph can be solved .",
    "conversely , if there is a polynomial time algorithm for finding the stopping distance of a given tanner graph @xmath14 , then we can use the algorithm to solve stopping distance since @xmath14 has stopping distance less than or equal to @xmath15 if and only if @xmath14 contains is a stopping set of size less than or equal to @xmath15 . note that it is not immediately clear how to solve stopping set in polynomial time even if a polynomial time algorithm for computing the stopping distance of a tanner graph is known .",
    "the notion of np - completeness was introduced in @xcite , and is well established in the computer science literature for the analysis of the computational complexity of problems ( see @xcite for a detailed account ) .",
    "typically , a problem is posed as a decision problem , i.e. , one where the solution consists of answering it with a _ yes _ or a _",
    "no_. all inputs for which the answer is a _ yes _ from a set .",
    "we identify this set with the problem .",
    "a decision problem @xmath17 belongs to the class np if there exists a polynomial time algorithm @xmath18 such that , for all @xmath19 , there exists a string @xmath20 ( called a _ certificate _ for membership of @xmath21 in @xmath17 ) , with @xmath22 polynomially bounded in @xmath23 , such that @xmath24 accepts @xmath25 , whereas , for all @xmath26 , @xmath24 rejects @xmath25 for any string @xmath20 presented to the algorithm . in other words , problems in np",
    "are precisely those for which membership verification is polynomially solvable .",
    "we say a decision problem @xmath17 is _ polynomial time many - one reducible _ to a decision problem @xmath27 if there exists a polynomial time algorithm @xmath28 such that , given an instance @xmath21 of @xmath17 , @xmath29 produces an instance @xmath30 of @xmath27 satisfying @xmath31 if and only if @xmath19 .",
    "in such case , we write @xmath32 . a problem @xmath33np is np - complete if for every @xmath34np , @xmath35 .",
    "it is generally believed that np - complete problems have no polynomial time algorithms .",
    "given an undirected graph ( not necessarily bipartite ) @xmath36 , @xmath37 is a _ vertex cover _ in @xmath14 if for all @xmath38 either @xmath39 or @xmath40 or both .",
    "we will be using in our reductions the following decision problems associated with the computation of vertex covers in a graph .",
    "vertex cover : given a graph @xmath14 and a positive integer @xmath15 does @xmath14 contain a vertex cover of size at most @xmath15 .",
    "the above problem is shown to be np - complete in @xcite .",
    "a variant of this problem referred to by the same name and shown to be np - complete in @xcite will be referred to here as the following :    vertex cover(= ) : given a graph @xmath14 and a positive integer @xmath15 does @xmath14 contain a vertex cover of size equal to @xmath15 .    in the following section we show that both stopping distance and stopping set are np - complete by establishing polynomial time many - one reductions from vertex cover and vertex cover(= ) respectively to the above problems .",
    "let @xmath41 be an instance of the vertex cover problem .",
    "let @xmath42 , @xmath43 . excluding trivial cases of the problem we may assume @xmath44 .",
    "we shall make the further assumption that @xmath14 is connected .",
    "it is not hard to show that both vertex cover and vertex cover(= ) remain np - complete even when restricted to connected graphs .",
    "the vertex - edge incidence graph of @xmath14 is the undirected bipartite graph @xmath45 with @xmath46 , @xmath47 and edges @xmath48 and @xmath49 in @xmath50 for each @xmath51 .",
    "figure 1 shows the vertex - edge incidence graph for a graph @xmath14 with @xmath52 and @xmath53 .    the advantage of assuming that @xmath14 is connected arises out of the following lemma :    [ lemma1 ] let @xmath45 be the vertex - edge incidence graph of a connected graph @xmath36 .",
    "let @xmath54 be a stopping set in @xmath55",
    ". then @xmath56 .",
    "let @xmath57 .",
    "then , as @xmath14 is connected there exists @xmath58 and @xmath39 such that @xmath38 .",
    "let @xmath59 . then @xmath60 . since @xmath54 is a stopping set @xmath61 .",
    "but the only neighbours of @xmath62 in @xmath55 are @xmath63 and @xmath64 . hence @xmath65 contradicting @xmath58 .",
    "we construct an undirected bipartite graph @xmath66 as follows : @xmath67 , @xmath68 , where , @xmath69 , @xmath70 for @xmath71 , @xmath72 , @xmath73 for @xmath74 .",
    "edges in @xmath75 are connected as the following :    * connect @xmath76 to @xmath77 , @xmath78 . *",
    "connect @xmath76 to @xmath79 .",
    "@xmath80 * for each @xmath59 in @xmath81 , connect @xmath82 to @xmath63 and @xmath64 in @xmath83 .",
    "* for each @xmath84 connect @xmath85 to @xmath82 .",
    "* for the purpose of defining the edges between @xmath86 and @xmath87 , temporarily re - label vertices in @xmath87 as @xmath88 in some arbitrary way .",
    "add the edges @xmath89 for @xmath90 and the edges @xmath91 for @xmath92 .",
    "the example in figure 3 illustrates the construction of @xmath75 for the graph in figure 1 . the graph @xmath75 consists of a copy of the vertex - edge incidence graph of @xmath14 ( vertex sets @xmath93 and @xmath94 )",
    ". additionally , there are @xmath95 copies of the vertex set @xmath96 on the left ( @xmath97 ) and right ( @xmath98 ) . the connections between @xmath99 and @xmath100 ensure that any stopping set in @xmath75 containing any one vertex in @xmath87 must contain the whole of @xmath87 .",
    "the vertex @xmath101 in @xmath102 has neigbours @xmath103 and @xmath104 for each @xmath78 and each @xmath105 .",
    "this ensures that if a stopping set @xmath54 in @xmath75 contains @xmath104 for some @xmath106 then all the @xmath107 vertices @xmath108 must be present in @xmath54 .",
    "these observations summarized below play a crucial role in the arguments that follow .",
    "[ obs1 ] a stopping set @xmath109 in @xmath75 satisfies @xmath110 for some @xmath74 if and only if it satisfies @xmath110 for _ every _ @xmath74 .",
    "moreover either @xmath111 or @xmath112 .",
    "the following two claims establish the connection between vertex covers in @xmath14 and stopping sets in @xmath75 .",
    "[ if ] if @xmath14 contains a vertex cover @xmath54 of size @xmath15 for some @xmath44 then @xmath75 contains a stopping set of size @xmath113 .",
    "consider the set @xmath114 in @xmath75 .",
    "clearly @xmath109 has @xmath113 elements .",
    "let @xmath115 .",
    "then either @xmath116 for some @xmath39 , @xmath117 or @xmath118 or @xmath119 . in the first case ,",
    "both @xmath104 and @xmath103 are neighbours of @xmath120 .",
    "if @xmath118 , then by construction , @xmath120 must correspond to some edge @xmath59 in @xmath81 .",
    "since @xmath111 , @xmath85 is a neighbour of @xmath120 .",
    "since @xmath54 is a vertex cover in @xmath14 , either @xmath63 or @xmath64 or both must belong to @xmath54 .",
    "hence one or both of @xmath121 and @xmath122 must be a neighbour of @xmath120 in @xmath109 . finally if @xmath119 , then both the neighbours of @xmath120 are in @xmath87 , and therefore in @xmath109 .",
    "thus in all cases @xmath120 has at least two neighbours in @xmath109 .",
    "consequently @xmath109 is a stopping set .",
    "we now prove that every stopping set in @xmath75 of size less than @xmath123 must correspond to some vertex cover of size @xmath15 in @xmath14 for some @xmath44 and must have size exactly @xmath113    [ onlyif ] let @xmath109 be a stopping set in @xmath75 of size less than @xmath124 .",
    "then the following must hold :    * @xmath111 , * @xmath125 for some @xmath44 and @xmath126 for every @xmath74 * @xmath127 : @xmath110 for some @xmath128 is a vertex cover of size @xmath15 in @xmath14 .",
    "suppose @xmath87 is not contained in @xmath109 . then by observation  [ obs1 ] @xmath112 .",
    "since @xmath129 , there must be some @xmath105 and @xmath130 such that @xmath110 . by observation  [ obs1 ] @xmath131 .",
    "since vertices in the set @xmath132 are connected only to @xmath83 and @xmath87 , every neighbour of @xmath109 in @xmath132 must have two neigbours in @xmath133 in order for @xmath109 to satisfy the conditions of a stopping set .",
    "in other words , @xmath133 must be a stopping set in the subgraph of @xmath75 induced by the vertices @xmath134 . note that this subgraph is the vertex - edge incidence graph of @xmath14 .",
    "applying lemma  [ lemma1 ] we get @xmath135 .",
    "hence observation  [ obs1 ] shows that @xmath136 .",
    "but in that case @xmath137 , a contradiction . hence @xmath111 and @xmath138 .",
    "let @xmath139 for some @xmath44 . applying observation  [ obs1 ] once again , @xmath126 for all @xmath74 .",
    "hence @xmath125 .    to complete the proof of the lemma ,",
    "it is sufficient to prove that @xmath140 is a vertex cover of @xmath14 . since @xmath111 , @xmath141 .",
    "since every vertex @xmath62 in @xmath132 has only one neighbour in the set @xmath87 , for @xmath109 to satisfy the stopping set condition @xmath62 must have a neighbour in @xmath142 . then",
    ", by construction @xmath143 must be a vertex cover in @xmath14 as required .    as a consequence of lemma  [",
    "if ] and lemma  [ onlyif ] we have :    [ cor1 ] @xmath14 has a vertex cover of size @xmath15 if and only if @xmath75 has a stopping set of size @xmath113 , @xmath44 .",
    "hence @xmath144 vertex cover(= ) if and only if @xmath145 stopping set .",
    "[ cor2 ] @xmath14 has a vertex cover of size at most @xmath15 if and only if @xmath75 has a stopping set of size at most @xmath113 , @xmath146 .",
    "hence @xmath144 vertex cover if and only if @xmath145 stopping distance .",
    "we are now ready to prove :    stopping distance and stopping set are np - complete    we have proved that @xmath144 vertex cover if and only if @xmath145 stopping set .",
    "since @xmath75 can be constructed from @xmath14 in polynomial time ( @xmath147 time suffices ) , it follows that vertex cover(= ) @xmath148 stopping set and vertex cover @xmath148 stopping distance from corollary  [ cor1 ] and corollary  [ cor2 ] respectively .",
    "it is easy to verify whether a given set of left vertices of a bipartite graph forms a stopping set in time linear in the size of the graph . hence both stopping distance and stopping set belong to the class np .    as a consequence",
    ", we have :    [ harddist ] computing stopping distance in a tanner graph is np - hard .",
    "the authors would like to thank dr .",
    "l. sunil chandran for helpful discussions .      c. di , d. proietti , i. e. telatar , t. j. richardson and r. urbanke , `` finite length analysis of low - density parity - check codes on the binary erasure channel , '' _ ieee trans .",
    "inform . theory .",
    "48 , no . 6 , pp . 1570 - 1579 , june 2002 ."
  ],
  "abstract_text": [
    "<S> two decision problems related to the computation of stopping sets in tanner graphs are shown to be np - complete . </S>",
    "<S> np - hardness of the problem of computing the stopping distance of a tanner graph follows as a consequence . </S>"
  ]
}
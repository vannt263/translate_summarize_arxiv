{
  "article_text": [
    "performance of low - density parity - check ( ldpc ) codes under iterative decoding algorithms in the error floor region is closely related to the problematic structures of the code s tanner graph  @xcite ,  @xcite ,  @xcite ,  @xcite ,  @xcite ,  @xcite ,  @xcite ,  @xcite ,  @xcite ,  @xcite ,  @xcite ,  @xcite ,  @xcite . following the nomenclature of  @xcite , here , we collectively refer to such structures as _ trapping sets_. the most common approach for classifying the trapping sets is by a pair @xmath2 , where @xmath3 is the size of the trapping set and @xmath4 is the number of odd - degree ( unsatisfied ) check nodes in the subgraph induced by the set in the tanner graph of the code . among the trapping sets , the so - called _ elementary trapping sets ( ets ) _",
    "are known to be the main culprits  @xcite , @xcite , @xcite , @xcite , @xcite , @xcite .",
    "these are trapping sets whose induced subgraph only contains check nodes of degree one or two .    for a given ldpc code",
    ", the knowledge of dominant trapping sets , i.e. , those that are most harmful , is important .",
    "such knowledge can be used to estimate the error floor  @xcite , to modify the decoder to lower the error floor  @xcite ,  @xcite ,  @xcite , or to design codes with low error floor  @xcite , @xcite .",
    "while the knowledge of dominant trapping sets is most helpful in the design and analysis of ldpc codes , attaining such knowledge is generally a hard problem  @xcite .",
    "much research has been devoted to devising efficient search algorithms for finding small ( dominant ) trapping sets , see , e.g. ,  @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , and to the ( partial ) characterization of such sets  @xcite ,  @xcite  @xcite ,  @xcite ,  @xcite ,  @xcite .",
    "asymptotic analysis of trapping sets has also been carried out in  @xcite ,  @xcite ,  @xcite ,  @xcite ,  @xcite ,  @xcite .",
    "@xcite studied the characterization of small @xmath2 trapping sets of size up to 8 ( @xmath9 ) and @xmath10 in ldpc codes from steiner triple systems ( sts ) .",
    "sts ldpc codes are a special category of regular ldpc codes with variable node degree 3 .",
    "@xcite showed that for a regular ldpc code with variable node degree @xmath11 and check node degree @xmath12 , and girth  @xmath13 , no @xmath14 trapping set with @xmath15 and @xmath16 can exist .",
    "they also studied the trapping sets of euclidean geometry ( eg ) ldpc codes and provided some bounds on the size and the number of unsatisfied check nodes of the trapping sets of such codes @xcite .",
    "an eg - ldpc code with parameter @xmath17 is a regular ldpc code of length @xmath18 , with variable node degree @xmath19 and check node degree @xmath17 .",
    "a consequence of the bounds derived in @xcite is that for the case where @xmath20 , there is no trapping set of size smaller than the minimum distance of the code , i.e. , @xmath21 , with less than @xmath22 unsatisfied check nodes .",
    "a subset of trapping sets , called _ absorbing sets _ , for array - based ldpc codes with variable node degrees 2 , 3 and 4 , were studied in @xcite , @xcite .",
    "absorbing sets are trapping sets in which each variable node is connected to more satisfied than unsatisfied check nodes in the induced subgraph of the set  @xcite ,  @xcite .",
    "array - based ldpc codes are a subclass of ( regular ) protograph ldpc codes which are constructed by lifting a fully - connected base graph using cyclic permutations .",
    "the analysis in @xcite and @xcite was focused on minimal absorbing sets , i.e. , the ones with the smallest size and with the smallest number of unsatisfied check nodes for a given size .",
    "@xcite studied the topological structure of trapping sets of size up to @xmath23 in regular ldpc codes with variable node degree 3 , and proposed a hierarchical search method to find them .",
    "the study of the graphical structure of trapping sets so far has been mainly limited to structured codes , codes with certain variable node degrees , and to relatively small trapping sets . in this work , for the category of variable - regular ldpc codes with a certain variable node degree and a given girth , we study the topological structure of @xmath2 etss for given values of @xmath3 and @xmath4 , and find all the non - isomorphic structures of such etss .",
    "a careful examination of these structures , which are independent of the check node degree distribution of the code , reveals that for relatively small values of @xmath3 and @xmath4 , the structures are all layered supersets ( lss ) of small cycles , i.e. , they can be characterized by a nested sequence of etss which starts from a short cycle and grows to the ets one node at a time .",
    "the lss property lends itself to a simple search algorithm that starts from short cycles of the code s tanner graph as input and can find all the etss with lss property in a guaranteed fashion .",
    "although the general approach discussed here can be applied to any category of variable - regular ldpc codes with arbitrary variable node degree @xmath0 and girth @xmath1 and to any class of etss with arbitrary values of @xmath3 and @xmath4 , the results presented here are for @xmath6 , @xmath7 , and @xmath8 .",
    "one of the main advantages of the results presented here is that they are applicable to specific codes , rather than just to an ensemble or a category of codes . in particular ,",
    "the search algorithm based on lss property can be used to efficiently find the dominant etss of a code in a guaranteed fashion .",
    "this , for example , would imply having a faster and more accurate estimation of error floor for the code under consideration using techniques such as importance sampling .",
    "moreover , the results presented here can be used in the design of ldpc codes with low error floor .",
    "this can be achieved by avoiding certain dominant etss in the tanner graph of the code .",
    "in such a context , this work can help in identifying the dominant etss .",
    "it has been known that dominant trapping sets of ldpc codes have a close relationship with short cycles in the code s tanner graph  @xcite ,  @xcite ,  @xcite .",
    "this work takes a rigorous step in establishing such a relationship . in general , in comparison with existing results on characterization of trapping sets such as  @xcite ,  @xcite ,  @xcite ,",
    "the results presented here are more general in terms of being applicable to both structured and random codes , and to cover a wider range of variable node degrees and trapping set classes .",
    "the remainder of this paper is organized as follows .",
    "basic definitions and notations are provided in section ii . in section iii , we present and discuss the lss property . in section iv , we develop the algorithm which guarantees to find all the etss with the lss property starting from the short cycles of the tanner graph .",
    "sections v , vi , vii , and viii present the results for variable - regular ldpc codes with variable node degrees 3 , 4 , 5 and 6 , respectively . as part of the material presented in these sections",
    ", we provide the lengths of short cycles that are required for the proposed algorithm to find all the @xmath2 etss with lss property in a guaranteed fashion , for different values of @xmath3 and @xmath4 .",
    "section ix is devoted to discussions and conclusions .",
    "let @xmath24 be the bipartite graph , or tanner graph , corresponding to the ldpc code @xmath25 , where @xmath26 is the set of variable nodes , @xmath27 is the set of check nodes and @xmath28 is the set of edges .",
    "the notations @xmath26 and @xmath27 refer to  left \" and  right , \" respectively , pointing to the side of the bipartite graph where variable nodes and check nodes are located , respectively .",
    "a _ cycle _ of length @xmath29 in a graph @xmath30 is a non - empty alternating sequence @xmath31 of nodes and edges in @xmath30 such that @xmath32 , and @xmath33 for all @xmath34 , @xmath35 , and all the other nodes are distinct .",
    "the length of the shortest cycle in a graph @xmath30 is denoted by @xmath1 and is called the _ girth _ of @xmath30 .",
    "the degree of a node @xmath36 is denoted by @xmath37 .",
    "a bipartite graph is called _ variable - regular _ or _ left - regular _ with left degree @xmath0 if @xmath38 .",
    "the graphs @xmath39 and @xmath40 are _ isomorphic _ if there is a bijection @xmath41 such that nodes @xmath42 , @xmath43 are joined by an edge if and only if @xmath44 and @xmath45 are joined by an edge .    for a subset @xmath46",
    ", @xmath47 denotes the set of neighbors of @xmath48 in @xmath49 .",
    "the _ induced subgraph _ of @xmath50 , represented by @xmath51 , is the graph containing nodes @xmath52 with edges @xmath53 .",
    "the set of check nodes in @xmath47 with odd degree in @xmath51 is denoted by @xmath54 .",
    "similarly , @xmath55 represents the set of check nodes in @xmath47 with even degree in @xmath51 . in this paper",
    ", we use the terms _ satisfied check nodes _ and _ unsatisfied check nodes _ to refer to the check nodes in @xmath55 and @xmath54 , respectively .    given a tanner graph @xmath56 , a set @xmath57 is called an @xmath2 _ trapping set _ if @xmath58 and @xmath59 .",
    "the integer @xmath3 is referred to as the _ size _ of the trapping set @xmath50 .",
    "we also refer to all the trapping sets with the same parameters @xmath3 and @xmath4 as a _ class _ of trapping sets .",
    "an @xmath2 trapping set @xmath50 is called _ elementary _ if all the check nodes in @xmath51 have degree one or two .",
    "a set @xmath57 is called an @xmath2 _ absorbing set _ if @xmath50 is an @xmath2 trapping set and if all the nodes in @xmath50 are connected to more nodes in @xmath55 than to nodes in @xmath54 . trapping sets with smaller values of @xmath3 and @xmath4",
    "are generally more harmful to iterative decoding . loosely speaking ,",
    "such trapping sets are called _",
    "dominant_.    without loss of generality , we assume that the induced subgraph of a trapping set is connected .",
    "disconnected trapping sets can be considered as the union of connected ones .",
    "moreover , to the best of our knowledge , almost all the structures reported as dominant trapping sets ( of regular ldpc codes ) in the literature have the property that every variable node is connected to at least two satisfied check nodes in the induced subgraph .",
    "we thus focus on trapping sets with this property . in the rest of the paper",
    ", we use the notation @xmath60 to denote the set of all trapping sets @xmath48 in a graph @xmath30 whose induced subgraph @xmath51 is connected and for which every node @xmath61 is connected to at least two nodes in @xmath55 . in the following , we also assume that the tanner graph @xmath30 has no parallel edges .",
    "elementary trapping sets ( ets ) in left - regular tanner graphs are the main focus of this paper .",
    "to investigate the structure of etss of a certain @xmath2 class in left - regular tanner graphs with left - degree @xmath0 and girth @xmath1 , we need to obtain all the non - isomorphic graphical structures of such trapping sets . to simplify the representation of the subgraph induced by an ets in a left - regular graph",
    ", we often use an alternate graphical representation called _ normal _ graphs  @xcite",
    ". the normal graph of an ets is obtained from the induced subgraph of the set by removing all the degree-1 check nodes and their edges from the subgraph , and by replacing each degree-2 check node with an edge .",
    "figures  [ normal]@xmath62 and [ normal]@xmath63 represent the induced subgraph and the normal graph of a @xmath64 ets in a left - regular graph with @xmath65 and @xmath66 , respectively . in figure",
    "[ normal]@xmath62 , and the rest of the paper , variable nodes are represented by circles , and satisfied and unsatisfied check nodes are shown by empty and full squares , respectively .",
    "elementary trapping set and its normal graph.,width=288 ]    it is easy to see that there is a one - to - one correspondence between an ets of a left - regular graph and its normal graph . given @xmath0 , one can construct the subgraph of the ets from a given normal graph by replacing each edge @xmath67 of the normal graph with two edges @xmath68 and @xmath69 , where @xmath70 is a degree-2 check node which is also added to the graph , and by connecting @xmath71 check nodes of degree one to every variable node @xmath72 with @xmath73 .    in the following , we provide an example to demonstrate how all the non - isomorphic structures of a class of etss can be found for rather small values of @xmath0 , @xmath3 and @xmath4 .",
    "any @xmath74 ets of a left - regular ldpc code with @xmath65 and @xmath66 has one of the structures presented in figure  [ 6_2_g ] .",
    "[ prop1 ]     etss in left - regular ldpc codes with @xmath75 and @xmath76.,width=499 ]    we use the normal graph representation , and prove that any @xmath74 ets in a left - regular ldpc code with @xmath75 and @xmath76 has one of the normal graph representations given in figure  [ 6_2_ng ] .",
    "etss in left - regular ldpc codes with @xmath75 and @xmath66.,width=480 ]    there are only two possibilities for @xmath74 etss : ( i ) both unsatisfied check nodes are connected to the same variable node , and ( ii ) the two unsatisfied check nodes are connected to two different variable nodes .",
    "we show that there is only one structure for the first case and only 2 non - isomorphic structures for the second case .    for case ( i ) , let @xmath42 be the only variable node connected to two unsatisfied check nodes .",
    "this means that in the normal graph representation , @xmath42 is connected to only two other variable nodes .",
    "suppose that those variable nodes are @xmath77 and @xmath78 .",
    "since the degree of all the other variable nodes @xmath79 , @xmath80 and @xmath81 in the normal graph is 4 , each of them must have 4 distinct neighbors .",
    "the only possibility is for each of these three nodes to be connected to the other two nodes in addition to nodes @xmath77 and @xmath78 .",
    "this also satisfies the degree requirements for @xmath77 and @xmath78 ( each of them has degree 4 and is connected to all the nodes @xmath79 , @xmath80 , @xmath81 and @xmath42 ) .",
    "this topology is shown in figure  [ 6_2_ng]@xmath62 .    for case ( ii )",
    ", let @xmath42 and @xmath77 be the two variable nodes , each connected to one unsatisfied check node",
    ". since all the other 4 nodes have degree 4 and must be connected to 4 distinct nodes , each of them must be connected to at least one of the nodes @xmath42 and @xmath77 .",
    "there are two possibilities : a ) @xmath42 and @xmath77 are connected together , and b ) @xmath42 and @xmath77 are not connected together .",
    "one can show that the only possible topology for case ( a ) is the one shown in figure  [ 6_2_ng]@xmath63 , and the only possible topology for case ( b ) is the one shown in figure  [ 6_2_ng]@xmath82 . for case ( a )",
    ", there always exists a node @xmath78 which is connected to one of the nodes @xmath42 and @xmath77 , but not to both .",
    "otherwise , if all the other 4 nodes are connected to both @xmath42 and @xmath77 , both @xmath42 and @xmath77 will have degree 5 which contradicts the assumption of the proposition that @xmath65 .",
    "without loss of generality , we assume @xmath78 to be connected to @xmath42 , and we grow the normal graph from @xmath78 as the root .",
    "figure  [ ab_grow]@xmath62 shows such a graph growth , in which all the nodes except @xmath77 are located in the first layer and @xmath77 is in the second layer .",
    "node @xmath77 must be connected to two nodes other than @xmath42 . without loss of generality , we assume those nodes to be @xmath79 and @xmath80 ( figure  [ ab_grow]@xmath63 ) . from this point on",
    ", there is no option in connecting the nodes .",
    "node @xmath81 must be connected to 4 distinct nodes , and the only possibility is to have it connected to all the nodes @xmath79 , @xmath80 and @xmath42 .",
    "this will satisfy the degree of @xmath42 , which must be 3 . to satisfy the degrees of @xmath79 and @xmath80 ( @xmath83 ) ,",
    "the only option is to have a connection between them , which results in the topology shown in figure  [ 6_2_ng]@xmath63 .",
    "the proof that case ( b ) , i.e. , the case where @xmath42 and @xmath77 are not connected , will result in the topology of figure  [ 6_2_ng]@xmath82 is similar and is thus omitted .",
    ".,width=288 ]    the structures in figures  [ 6_2_g]@xmath63 and  [ 6_2_g]@xmath82 are absorbing sets while the one in figure  [ 6_2_g]@xmath62 is not .",
    "moreover , proposition  [ prop1 ] implies that there are no @xmath74 etss in left - regular graphs with @xmath65 and @xmath84 .",
    "finding the non - isomorphic structures for etss with rather large values of @xmath0 , @xmath3 or @xmath4 can be a formidable task .",
    "we thus resort to software programs to find such structures .",
    "one of the well - known software programs related to graph isomorphism is the _ nauty _ program  @xcite .",
    "this program can be used to efficiently generate all the non - isomorphic graphs with a given number of nodes ( up to 32 ) and a given number of edges .",
    "the program has many input options to determine the minimum and maximum values of the node degrees , to select the girth , and to generate only bipartite graphs or all the possible graphs . for the case of bipartite graphs",
    ", however , the program does not have the option of taking the degree distribution of each part of the graph as an input . in the case of finding the non - isomorphic structures ( for induced subgraphs ) of etss ,",
    "this limitation results in having a large number of undesired structures at the output of the program .",
    "one is thus required to check all the output structures to find the ones that satisfy the particular degree distributions of the class of etss under consideration .",
    "this difficulty can be circumvented by using the normal graph representation of etss as explained in the following example .",
    "consider the class of @xmath85 etss in a left - regular graph with @xmath65 and @xmath66 .",
    "figure  [ 66_normal]@xmath62 shows one such ets .",
    "elementary trapping set and its normal graph.,width=268 ]    it is easy to see that the induced subgraph of any ets in this class has 6 variable nodes of degree 4 , 6 check nodes of degree 1 , and @xmath86 check nodes of degree 2 .",
    "this is a total of 21 nodes ( check and variable nodes ) and 24 edges . to generate the non - isomorphic structures of @xmath85 etss using _ nauty _ package ,",
    "one way is to set the package parameters to generate all the connected bipartite graphs of girth at least 6 with 21 nodes and 24 edges , and with the minimum and maximum degrees of 1 and 4 , respectively .",
    "this results in @xmath87 graphs , from which an overwhelming majority are not @xmath85 etss .",
    "alternatively , we can use the normal graph representation of @xmath85 etss .",
    "figure  [ 66_normal]@xmath63 shows the normal graph of the structure shown in figure  [ 66_normal]@xmath62 .",
    "similar to figure  [ 66_normal]@xmath63 , any normal graph of a @xmath88 ets in a left - regular graph with @xmath65 has 6 nodes and 9 edges . to generate all the non - isomorphic normal structures using the _ nauty _ program",
    ", one needs to generate all the bipartite and non - bipartite graphs with 6 nodes and 9 edges , and with the minimum and maximum node degrees of 2 and 4 , respectively .",
    "this reduces the number of possible graphs from @xmath87 to only 11 .",
    "all the 11 graphs correspond to valid normal structures for the class of etss under consideration .",
    "these structures are shown in figures  [ 66_4_c ] , [ 66_4_a ] , [ 66_4_b ] , and [ 66_4_d ] .",
    "among the 11 structures , only 2 structures are absorbing sets .",
    "these are shown in figure  [ 66_4_c ] .",
    "the other structures are grouped together based on the number of variable nodes with two unsatisfied check nodes .",
    "the structures with 1 , 2 , and 3 variable nodes connected to two unsatisfied check nodes are shown in figures  [ 66_4_a ] , [ 66_4_b ] , and [ 66_4_d ] , respectively .",
    "ets in a left - regular graph with @xmath65 and @xmath76 : the only two possible absorbing set topologies.,width=355 ]     ets in a left - regular graph with @xmath65 and @xmath76 : topologies with only one variable node connected to two unsatisfied check nodes.,width=422 ]     ets in a left - regular graph with @xmath65 and @xmath76 : topologies with only two variable nodes connected to two unsatisfied check nodes .",
    ", width=422 ]     ets in a left - regular graph with @xmath65 and @xmath76 : the only possible topology with three variable nodes connected to two unsatisfied check nodes.,width=163 ]",
    "consider an @xmath14 ets @xmath50 in @xmath60 .",
    "let @xmath89 be an ets in @xmath60 of size @xmath90 .",
    "we say that @xmath50 is a _ layered superset ( lss ) _ of @xmath91 if there exists a nested sequence of etss : @xmath92 , such that @xmath93 has size @xmath94 for @xmath95 .",
    "when there is no risk of confusion , we also refer to @xmath5 as having the lss property .",
    "consider the ets @xmath96 of a left - regular ldpc code with @xmath65 shown in figure  [ lss_ex]@xmath62 , and one of its subsets @xmath97 .",
    "ets in a left - regular graph with @xmath65 , ( b ) a @xmath98 ets in a left - regular graph with @xmath99.,width=508 ]    it is easy to see that @xmath50 and @xmath100 are @xmath85 and @xmath101 etss .",
    "careful inspection of figure  [ lss_ex]@xmath62 reveals that @xmath5 is not an lss of @xmath100 . set @xmath50 however , is an lss of @xmath102 with the following nested sequence of etss : @xmath103 .",
    "figure  [ lss_ex]@xmath63 shows a @xmath98 ets @xmath5 in a left - regular code with @xmath99 .",
    "this set has lss property with respect to @xmath104 with the following nested sequence of etss : @xmath105 .",
    "one should note that any cycle in a tanner graph is an ets . in the sequel",
    ", we are particularly interested in the lss property of more complex etss with respect to short cycles of the graph .",
    "the following proposition is an example .",
    "all the @xmath74 etss of a left - regular ldpc code with @xmath65 and @xmath66 are layered supersets of any one of their 6-cycle subsets .",
    "[ prop2 ]    based on proposition  [ prop1 ] , there are only 3 non - isomorphic structures for @xmath74 etss in left - regular ldpc codes with @xmath65 and @xmath66 .",
    "these structures are shown in figure  [ 6_2_g ] .",
    "it is not difficult to see that all three structures are lss of any of their 6-cycle subsets .",
    "for example , the structure @xmath50 in figure  [ 6_2_g]@xmath63 is an lss of its 6-cycle subset @xmath106 with the following nested sequence of etss : @xmath107 .",
    "one advantage of lss property is that it corresponds to a simple algorithm for finding larger etss with lss property starting from one of their subsets in the nested sequence of etss .",
    "the basic step is explained in the following lemma .",
    "consider an ets @xmath108 of size @xmath109 .",
    "suppose that @xmath5 has an elementary trapping subset @xmath110 of size @xmath3 .",
    "then , the variable node @xmath111 is only connected to unsatisfied check nodes of @xmath112 ( at least two of them ) , i.e. , there is no connection between @xmath72 and the satisfied check nodes of @xmath112 .",
    "[ lemma1 ]    the proof is simple and is based on the definitions of an ets and the set @xmath113 .",
    "the pseudo code of an algorithm corresponding to lemma  [ lemma1 ] is given in routine 1 .",
    "( 1,0)500 + * routine 1 : expansion of an ets @xmath50 of size @xmath3 to etss of size @xmath114 + routine ex = oneexpansion@xmath115 * + ( 1,0)500    * initialization : * @xmath116 .",
    "let @xmath54 and @xmath55 be the set of unsatisfied check nodes and satisfied check nodes of @xmath50 , respectively .",
    "let @xmath117 be the set of variable nodes which have at least two connections with the check nodes in @xmath54 and have no connection with the check nodes in @xmath55 .",
    "* output : * ex    ( 1,0)500    based on lemma  [ lemma1 ] , the set @xmath117 contains _ all _ the nodes that can be part of the expansion of the ets .",
    "complexity of routine 1 for expanding an @xmath2 ets to etss of size @xmath114 in a @xmath120 regular graph , where @xmath0 and @xmath121 are left and right degrees , respectively , is of order @xmath122 .",
    "this comes from the fact that for finding the larger trapping sets , the algorithm needs to check at most @xmath123 variable nodes as possible candidates .",
    "the memory requirement in this case is of order @xmath124 .",
    "it should be however noted that , imposing the condition of line 3 removes a large portion of neighboring variable nodes of @xmath50 from the set of possible candidates for expansion .",
    "this highly reduces the complexity of the algorithm .",
    "consider the case where an ets @xmath50 of size @xmath3 is an lss of an ets @xmath91 of size @xmath125 . clearly ,",
    "starting from @xmath91 , the successive application of routine 1 will result in finding all the etss which are layered supersets of @xmath91 .",
    "in particular , ets @xmath50 will be among the outputs after @xmath126 applications of routine 1 .",
    "algorithm 1 contains the pseudo code of an algorithm that starts from a set of etss and finds _ all _ the etss of size up to @xmath29 that are layered supersets of the initial set of etss .",
    "( 1,0)250 + * algorithm 1 * : expansion of input etss to etss of size up to @xmath29 in @xmath127 .",
    "+ ( @xmath128 and @xmath129 are the lists of input and output trapping sets , respectively . ) + ( 1,0)250    * inputs : * @xmath30 , @xmath130 , @xmath29.*initialization : * @xmath131 } for @xmath132",
    ".    ex= oneexpansion@xmath115 @xmath133 ex .",
    "* output : * @xmath134 .",
    "it is easy to see that any trapping set in @xmath113 , including etss , contains at least one cycle .",
    "it can thus be argued that cycles are the most basic structure for etss in @xmath113 .",
    "this motivates the study of the relationship between cycles , as the most basic etss , and the more complex etss of @xmath113 .",
    "short cycles have long been known to be problematic for iterative decoding in general  @xcite , and for the performance in the error floor region , in particular  @xcite ,  @xcite ,  @xcite .",
    "short cycles are also easy to enumerate  @xcite . in this section , we establish a simple relationship between short cycles and the more complex etss .",
    "in particular , we prove that an overwhelming majority of dominant etss of left - regular ldpc codes are layered supersets of short cycles . one important implication of this result is that , starting from short cycles of the graph , algorithm 1 , presented in the previous section , can be used to find all such etss in a _ guaranteed _ fashion .",
    "the following examples demonstrate the relationship between short cycles and the more complex etss of left - regular graphs .",
    "figure  [ 51_3 ] shows a possible structure @xmath5 of a @xmath135 ets in a left - regular graph with @xmath99 and @xmath66 .",
    "the @xmath136 ets @xmath137 forms a 6-cycle and is a subset of @xmath5 .",
    "set @xmath5 is an lss of @xmath91 with the following nested sequence of etss : @xmath138 . starting from @xmath91 , in the first round of expansion by algorithm  1",
    ", variable node @xmath79 will be added and the @xmath139 ets @xmath140 will be found . in the second round of expansion , with set @xmath140 as the input , variable node @xmath80 will be added and @xmath50 will be found .     trapping set in a left - regular graph with @xmath99.,width=153 ]    note that although @xmath80 is not part of any 6-cycle",
    ", this node will be added at the second round of expansion . in other words , for a trapping set to be found by the algorithm , it is not necessary that all the nodes in the set participate in short(est ) cycles .",
    "starting from a short cycle , each round of expansion by algorithm  1 , may result in several new etss .",
    "these trapping sets all have the same size , but may have different number of unsatisfied check nodes , and thus belong to different classes of trapping sets .",
    "this is demonstrated in the following example .",
    "consider the structure in figure  [ 6_2_g]@xmath63 and one of its subsets @xmath141 which is a @xmath101 ets .",
    "starting from @xmath91 , as the input to algorithm  1 , there are two variable nodes @xmath42 and @xmath80 as candidates for the first expansion .",
    "the resultant etss are @xmath142 and @xmath143 , which are @xmath144 and @xmath145 trapping sets , respectively .",
    "[ 2b ]    it is important to note that if an element of a class of etss is an lss of a short cycle , this does not necessarily mean that all the elements of that class are also lsss of short cycles of the same length .",
    "the reason is that there may be other non - isomorphic structures in that class which are not lsss of any of the short cycles under consideration .",
    "figure  [ 66_4 ] shows two possible structures for a @xmath85 ets in a left - regular graph with @xmath65 and @xmath66 .",
    "the structure of figure  [ 66_4]@xmath62 is an lss of any of its 6-cycles and thus can be obtained by the recursive expansion of any of them through algorithm  1 .",
    "the structure of figure  [ 66_4]@xmath63 , on the other hand , is not an lss of any of its 6-cycles , and is thus out of the reach of algorithm  1 , if the algorithm starts from any 6-cycle .",
    "ets in a left - regular graph with @xmath65 and @xmath66.,width=268 ]    it is however , easy to see that the structure in figure  [ 66_4]@xmath63 is an lss of the set @xmath146 , which itself forms an 8-cycle .",
    "the trapping set can thus be found by algorithm  1 if cycles of length 8 are included in the input set . in general , adding short cycles longer than the girth to the input of algorithm  1 can improve the coverage of this algorithm .",
    "nonetheless , there are structures which do not satisfy the lss property with respect to any of their cycles .",
    "this means that even arbitrarily enlarging the size of the cycles in the initial input set will not result in finding such structures by the algorithm .",
    "figure  [ 82_3 ] shows an @xmath147 ets @xmath50 in a left - regular graph with @xmath99 and @xmath66 .",
    "set @xmath50 contains cycles of length 6 , 8 and 10 .",
    "it is easy to check that @xmath50 does not satisfy the lss property with respect to any of these cycles , and thus can not be found using algorithm  1 starting from any of them .",
    "ets in a left - regular graph with @xmath99 and @xmath66 which is not an lss of any of its cycles.,width=268 ]      in this part of the paper , we investigate the structure of etss for left - regular ldpc codes with left degrees 3 , 4 , 5 and 6 . for each category of codes",
    ", we consider girth values 6 and 8 , and study all the non - isomorphic structures of different classes of @xmath2 etss with values of @xmath3 and @xmath4 up to 10 .",
    "for each class of etss with given values of @xmath3 and @xmath4 , we first find all the non - isomorphic structures using the approach described in section  iii ( with constraints on @xmath0 and @xmath1 ) .",
    "we then examine each of these structures to find out whether the structure is an lss of any of its cycles .",
    "this can be performed using algorithm  1 .",
    "let @xmath5 be the structure under consideration .",
    "we can start with the set of shortest cycles , say of length @xmath148 , in @xmath5 , and apply algorithm  1 to recursively expand them to larger subsets of @xmath5 . if this process ends with finding @xmath5",
    ", then we report @xmath5 as being an lss of a cycle of length @xmath148 . in the case that this process will not result in finding @xmath5",
    ", we use the set of cycles of next larger size as the input and repeat the process .",
    "this will continue until @xmath5 is identified as an lss of one of its cycles or until all the cycles are exhausted and @xmath5 is not an lss of any of them . in the former case ,",
    "if the cycle length is @xmath149 , we refer to @xmath5 as an lss@xmath150 structure .",
    "the results for different values of @xmath0 and @xmath1 are reported in the following subsections . for each value of @xmath3",
    ", we mostly consider the values of @xmath4 which satisfy @xmath151 . for a given value of @xmath3",
    ", these values of @xmath4 are believed to correspond to dominant trapping sets  @xcite .",
    "it is easy to see that for a tanner graph with girth @xmath152 , it is impossible to have any @xmath2 trapping set in @xmath60 with @xmath153 . for a tanner graph with @xmath76 and variable node degree @xmath0 , short cycles of length 6",
    "are trivial @xmath154 trapping sets .",
    "for this reason , we only consider @xmath2 trapping sets with @xmath155 .      for left - regular graphs with @xmath99 and @xmath66 , the multiplicity of non - isomorphic lss@xmath150 structures for different values of @xmath149",
    "are listed in table  [ d3g6 ] for different classes of etss in @xmath60 .",
    "[ thm1 ]    -1 cm     & & & & & & +    & & & & & & +    & & & & & & +    & & & & & & +    & & & & & & +    & & & & & & +    & & & & & & +    & & & & & & +    & & & & & & +    [ d3g6 ]    ( each row in table  [ d3g6 ] corresponds to a specific size @xmath3 of an ets , and each column corresponds to a specific number of unsatisfied check nodes , @xmath4 . for each pair @xmath2 , table  [ d3g6 ] lists the multiplicity of lss@xmath150 structures for different values of @xmath149 .",
    "for example , having @xmath157 for a specific class of etss means that there are 4 different non - isomorphic structures for that class of trapping sets : three of them are lss@xmath158 and one of them is an lss@xmath159 structure . starting with cycles of length @xmath160 and @xmath161 , algorithm  1",
    "is thus guaranteed to find all such etss .",
    "having the symbol  - \" for a class of @xmath2 trapping sets means that for the underlying conditions , i.e. , @xmath99 and @xmath66 , it is impossible to have such a class of trapping sets . for the structures which do not satisfy the lss property with respect to any of their cycles",
    ", we use the notation  na \" ( stands for not applicable ) . starting from any set of cycles of the graph , algorithm  1 can not find such structures . )    in general , the results reported in table  [ d3g6 ] for any @xmath2 ets can be proved by first obtaining all the non - isomorphic structures using the nauty program , as described in section  iii , and then examining each such structure for the lss property , using algorithm  1 , as described earlier in this subsection .",
    "we however , provide a formal proof for the results pertaining to the ets class @xmath162 as well as all the classes that can not exist in left - regular graphs with @xmath99 and @xmath66 ( i.e. , those with designation  - \" in the table ) . the general approach for",
    "the formal proof of the rest of the results is similar and not provided .",
    ": we first prove that the two structures presented in figure  [ 6_0_ng ] are the only possible non - isomorphic structures for @xmath163 etss in left - regular graphs with @xmath99 and @xmath66 .",
    "we use the normal graph representation of these structures , also shown in figure  [ 6_0_ng ] , for the proof .",
    "etss in left - regular graphs with @xmath99 and @xmath66 , and their normal graph representations.,width=355 ]    since the number of unsatisfied check nodes is zero , every node in the normal graph must be connected to three other nodes .",
    "starting from an arbitrary node , say @xmath78 , as the root , we grow the normal graph , and will have three nodes in the first layer .",
    "we arbitrarily denote these nodes by @xmath42 , @xmath79 , and @xmath80 .",
    "consider the case where the nodes in the first layer do not have any edges in common ( see figure  [ ab_grow1]@xmath62 ) . in this case",
    ", they must have 6 edges connected to the two remaining nodes ( @xmath77 and @xmath81 ) . according to the girth constraint ( i.e. , @xmath76 ) ,",
    "each pair of nodes can have at most one edge in common .",
    "this implies that the only possible scenario is the case where each of the three nodes in the first layer is connected to both @xmath77 and @xmath81 .",
    "this results in the structure of figure  [ 6_0_ng]@xmath63 .",
    "note that in this case , the length of the shortest cycles in the structure is 8 .",
    "now , consider the case where the nodes in the first layer have some edge(s ) in common .",
    "based on the girth constraint ( @xmath66 ) , the two remaining nodes ( @xmath77 and @xmath81 ) must have at least 4 edges in common with the nodes in the first layer .",
    "( otherwise , for @xmath77 and @xmath81 to have degree 3 , they need to have more than one edge in common , which contradicts the girth constraint . )",
    "this implies that the nodes in the first layer can have only one edge in common . without loss of generality , we assume @xmath42 and @xmath79 are connected ( see figure  [ ab_grow1]@xmath63 ) . from this point on",
    ", there is no choice in connecting the nodes .",
    "node @xmath80 must be connected to both @xmath77 and @xmath81 , and each of the nodes @xmath42 and @xmath79 must have one connection to @xmath77 or @xmath81 . ( switching the connections will result in isomorphic structures . )",
    "this results in the structure of figure  [ 6_0_ng]@xmath62 .",
    "etss of a left - regular graph with @xmath99 and @xmath66.,width=288 ]    there are two cycles of length 6 in the structure @xmath164 of figure  [ 6_0_ng]@xmath62 . however , @xmath164 is not an lss of any of them .",
    "there are also three cycles of length 8 in @xmath164 , and @xmath164 is an lss of all of them .",
    "for example , @xmath164 is an lss of @xmath165 with the following nested sequence of etss : @xmath166 .",
    "the structure @xmath167 of figure  [ 6_0_ng]@xmath63 does not have any 6-cycles .",
    "it has four 8-cycles and has lss property with respect to all of them .    :",
    "all such cases in table  [ d3g6 ] can be proved using two facts : ( i ) an @xmath2 ets in a left - regular graph with @xmath99 has @xmath168 edges and @xmath169 satisfied check nodes . for the latter to be integer",
    ", there can not be any @xmath2 ets with an odd @xmath3 and an even @xmath4 , or vice versa .",
    "( ii ) by definition , each variable node of an ets @xmath108 of a left - regular graph with @xmath99 can be connected to at most one unsatisfied check node .",
    "this means that it is not possible to have an @xmath2 ets with @xmath170 .",
    "the results of table  [ d3g6 ] indicate that the majority of ets structures satisfy the lss property with respect to short cycles .",
    "this is particularly the case for smaller values of @xmath3 and @xmath4 which correspond to more problematic trapping sets .",
    "a cycle of length @xmath171 in a left - regular graph with @xmath99 is an @xmath172 ets .",
    "for example , figure  [ 55_3_n ] shows the structure of a @xmath173 ets in a left - regular graph with @xmath99 , which is a cycle of length 10 .",
    "in fact , as the results of table  [ d3g6 ] show cycles of length @xmath171 are the only @xmath172 etss for the graphs under consideration .",
    "such cycles trivially satisfy the lss property .",
    "ets in a left - regular graph with @xmath99 and @xmath66.,width=144 ]    in figure  [ n64_73_91_3_1 ] , the three structures corresponding to the `` na '' cases in table  [ d3g6 ] for @xmath174 , @xmath175 and @xmath176 etss are presented .",
    "all three structures consist of two etss connected by a check node .     for @xmath174 , @xmath175 and @xmath176 etss.,width=432 ]    in the rest of the paper , we omit the proofs as they are similar in nature to that of theorem  [ thm1 ] .      for left - regular graphs with @xmath99 and @xmath178 , the multiplicity of non - isomorphic lss@xmath150 structures for different values of @xmath149 are listed in table  [ d3g8 ] for different classes of etss in @xmath60 .",
    "& & & & & & +    & & & & & & +    & & & & & & +    & & & & & & +    & & & & & & +    & & & & & & +    & & & & & & +    & & & & & & +    & & & & & & +    [ d3g8 ]    the results of table  [ d3g8 ] also indicate that the majority of ets structures satisfy the lss property with respect to short cycles of the graph .",
    "compared to the results of table  [ d3g6 ] , a larger portion of ets classes have the property that all their non - isomorphic structures are lsss of short cycles .    in a left - regular graph with @xmath179 ,",
    "any ets in @xmath60 is also an absorbing set .",
    "so the results presented in tables  [ d3g6 ] and  [ d3g8 ] are also applicable to the absorbing sets of these graphs .      for left - regular graphs with @xmath65 and @xmath66 ,",
    "the multiplicity of non - isomorphic lss@xmath150 structures for different values of @xmath149 are listed in tables  [ d4g6_1 ] and  [ d4g6_2 ] for different classes of etss in @xmath60 .",
    "& & & & + & & & & +    & & & & + & & & & + & & & & +    & & & & + & & & & + & & & & +    & & & & + & & & & + & & & & +    & & & & + & & & & + & & & & +    [ d4g6_1 ]     & & + & & +    & & + & & + & & +    & & + & & + & & +    & & + & & + & & +    & & + & & + & & +    [ d4g6_2 ]    for graphs with @xmath180 , not every ets is an absorbing set . to identify the structures that are absorbing sets",
    ", we use the notation `` as '' in the tables . for each class of ets",
    ", we thus have two sets of entries : the ones for absorbing sets denoted by `` as '' , and those that correspond to all the etss denoted by `` ts '' to stand for `` trapping sets '' . for each entry",
    ", the number of possible non - absorbing set structures can be obtained by subtracting the corresponding results in the two sets .",
    "for example , the results for the ets class @xmath64 in table  [ d4g6_1 ] indicate that there are two non - isomorphic structures for this class that are both lsss of cycles of length @xmath1 .",
    "only one of the two structures however , is an absorbing set .",
    "tables  [ d4g6_1 ] and  [ d4g6_2 ] indicate that an overwhelming majority of ets structures satisfy the lss property with respect to short cycles",
    ". in particular , all the etss of size less than 7 with less than 6 unsatisfied check nodes are lsss of 6-cycles .      for left - regular graphs with @xmath65 and @xmath178 , the multiplicity of non - isomorphic lss@xmath150 structures for different values of @xmath149",
    "are listed in table  [ d4g8 ] for different classes of etss in @xmath60 .",
    "& & & & & & + & & & & & & +    & & & & & & + & & & & & & + & & & & & & +    & & & & & & + & & & & & & + & & & & & & +    & & & & & & + & & & & & & + & & & & & & +    & & & & & & + & & & & & & + & & & & & & +    [ d4g8 ]    the results of table  [ d4g8 ] indicate that all the etss of size less than 10 with less than 9 unsatisfied check nodes satisfy the lss property .",
    "comparison with the results of tables  [ d4g6_1 ] and [ d4g6_2 ] reveals that by increasing the girth of the graph from 6 to 8 , the number of classes whose structures all satisfy the lss property increases .      for left - regular graphs with @xmath181 and @xmath66 , the multiplicity of non - isomorphic lss@xmath150 structures for different values of @xmath149",
    "are listed in table  [ d5g6 ] for different classes of etss in @xmath60 .",
    "-.6 cm     & & & & & & + & & & & & & +    & & & & & & + & & & & & & +    & & & & & & + & & & & & & +    & & & & & & + & & & & & & +    & & & & & & + & & & & & & +    & & & & & & + & & & & & & +    & & & & & & + & & & & & & +    & & & & & & + & & & & & & +    & & & & & & + & & & & & & +    & & & & & & + & & & & & & +    [ d5g6 ]    table  [ d5g6 ] shows that except for a small fraction of ets structures , all the rest of the structures of ets classes with size less than 10 and with less than 10 unsatisfied check nodes satisfy the lss property",
    ". in particular , all the structures of size less than 10 with less than 5 unsatisfied check nodes are lsss of 6-cycles .      for left - regular graphs with @xmath181 and @xmath178 , the multiplicity of non - isomorphic lss@xmath150 structures for different values of @xmath149",
    "are listed in table  [ d5g8 ] for different classes of etss in @xmath60 .     & & & + & & & + & & & + & & & + & & & + & & & + & & & +    & & & +    & & & + & & & +    & & & + & & & +    & & & + & & & +    [ d5g8 ]    tables  [ d4g8 ] and [ d5g8 ] , in comparison with their counterparts for @xmath66 , show that in graphs with larger girth , small trapping sets with small number of unsatisfied check nodes can not exist .",
    "in particular , table  [ d5g8 ] indicates that in left - regular graphs with @xmath181 and @xmath178 no @xmath2 ets with @xmath182 and @xmath183 can exist .",
    "the inspection of table  [ d5g6 ] however , reveals that many of these ets classes can exist in left - regular graphs with @xmath181 and @xmath66 .",
    "the results of table  [ d5g8 ] also demonstrate that , for a left - regular graph with @xmath181 and @xmath178 , all the @xmath2 etss with @xmath184 and @xmath183 are lsss of 8-cycles .",
    "it can be proved that it is not possible to have any @xmath2 ets with @xmath184 and @xmath183 in a left - regular graph with @xmath181 and @xmath185 .      for left - regular graphs with @xmath186 and @xmath66 , the multiplicity of non - isomorphic lss@xmath150 structures for different values of @xmath149",
    "are listed in table  [ d6g6 ] for different classes of etss in @xmath60 .",
    "& & & & & & + & & & & & & + & & & & & & + & & & & & & + & & & & & & +    & & & & & & + & & & & & & + & & & & & & +    & & & & & & + & & & & & & + & & & & & & +    & & & & & & + & & & & & & + & & & & & & +    & & & & & & +    & & & & & & + & & & & & & +    [ d6g6 ]    the results of table  [ d6g6 ] indicate that for left - regular graphs with @xmath186 and @xmath66 , all the possible @xmath2 absorbing sets with @xmath184 and @xmath187 satisfy the lss property with respect to 6-cycles",
    ". moreover , except for one structure ( out of 5411 structures ) of the ets class @xmath188 , all the structures of @xmath2 ets classes with @xmath184 and @xmath189 are lsss of short cycles .",
    "( the structure that does not satisfy the lss property is shown in figure  [ 910_6 ] . ) among these classes ( excluding the @xmath188 class ) , only one structure out of the 2274 possible structures for the @xmath190 ets class is an lss of 10-cycles .",
    "all the other possible structures for all the ets classes are lsss of 6-cycles .",
    "ets in a left - regular graph with @xmath186 and @xmath66 that does not satisfy the lss property .",
    ", width=240 ]      for left - regular graphs with @xmath186 and @xmath84 , there does not exist any @xmath2 ets in @xmath113 with @xmath184 and @xmath187 .",
    "in this paper , we investigated the structure of elementary trapping sets ( ets ) of left - regular ldpc codes .",
    "we developed an approach to find _ all _ the non - isomorphic structures of a given @xmath2 class of etss , where @xmath3 is the size and @xmath4 is the number of unsatisfied check nodes of the ets .",
    "for left - regular ldpc codes with left degrees @xmath6 , and girths @xmath7 , we studied such structures and demonstrated that an overwhelming majority of them are layered supersets ( lss ) of short cycles in the tanner graph of the code .",
    "in particular , we proved that for any category of left - regular ldpc codes with given @xmath0 and @xmath1 , there exist integers @xmath125 and @xmath191 such that all the classes of @xmath2 etss with @xmath192 and @xmath193 , are lsss of short cycles .",
    "this implies that for any category of left - regular ldpc codes , the dominant etss are all lsss of short cycles .",
    "the lss characterization of dominant etss is particularly important as it corresponds to a simple algorithm that can find _ all _ such etss in a _ guaranteed _",
    "fashion starting from the short cycles of the graph . for any class of @xmath2 etss ,",
    "the lengths of the required short cycles were provided in this paper .",
    "one important contribution of this paper is the approach developed to exhaustively find all the non - isomorphic structures of a given class of @xmath2 etss for arbitrary values of @xmath3 and @xmath4 and for left - regular ldpc codes of arbitrary left degree and girth . in a more general context",
    ", the database of such structures can be very helpful in the analysis and the design of ldpc codes with low error floor .",
    "in particular , one can use this information to find all the etss of a certain class in a guaranteed fashion regardless of whether those etss satisfy the lss property or not . to the best of our knowledge , the results presented in tables  [ d3g6 ] -  [ d6g6 ] are the most comprehensive results available so far on the structure of etss of regular ldpc codes .",
    "s. abu - surra , d. declercq , d. divsalar , and w. ryan ,  trapping set enumerators for specific ldpc codes , \" proc .",
    "theory and applications workshop , _ san diego , ca , jan .",
    "31- feb . 5 , 2010 , pp . 1 - 5 .",
    "s. abu - surra , w. e. ryan , d. divsalar , and w. ryan ,  ensemble trapping set enumerators for protograph - based generalized ldpc codes , \" proc .",
    "theory and applications workshop , _ san diego , ca , jan .",
    "27feb . 1 2008 , pp . 6365 .",
    "e. cavus and b. daneshrad ,  a performance improvement and error floor avoidance technique for belief propagation decoding of ldpc codes , \" proc .",
    "_ 16th ieee international symposium pers .",
    "indoor mobile radio communications , _ los angeles , ca , sept .",
    "2005 , vol .",
    "2386 - 2390 .",
    "qiuju diao , ying yu tai , shu lin , and khaled a. s. abdel - ghaffar ,  trapping set structure of finite geometry ldpc codes , \" proc . _ ieee international symposium on information theory ( isit12 ) _ , 2012 , pp .",
    "3088 - 3092 .",
    "l. dolecek , z. zhang , v. anantharam , m.wainwright , and b. nikolic ,  analysis of absorbing sets for array - based ldpc codes , \" proc . _ interntional conf .",
    "communications , _ glasgow , scotland , jun .",
    "24 - 28 , 2007 , pp .",
    "6261 - 6268 .",
    "l. dolecek , z. zhang , m. wainwright , v. anantharam , and b. nikolic ,  evaluation of the low frame error rate performance of ldpc codes using importance sampling , \" proc .",
    "_ ieee inform . theory workshop _ , lake tahoe ,",
    "ca , sept . 2 - 6 , 2007 , pp .",
    "202 - 207 .",
    "l. dolecek , p. lee , z. zhang , v. anantharam , b. nikolic , and m. wainwright ,  predicting error floors of ldpc codes : deterministic bounds and estimates , \" _ ieee journal on selected areas in communications _ , vol .",
    "27 , no . 6 , pp .",
    "908 - 917 , aug . 2009 .",
    "l. dolecek , z. zhang , v. anantharam , m. j. wainwright , and b. nikolic ,  analysis of absorbing sets and fully absorbing sets of array - based ldpc codes , \" _ ieee trans .",
    "inform . theory _",
    "181 - 201 , jan .",
    "2010 .    c. di , d. proietti , i. e. telatar , t. j. richardson , and r. l. urbanke ,  finite - length analysis of low - density parity - check codes on the binary erasure channel , \" _ ieee trans .",
    "inform . theory _",
    "48 , no . 6 , pp . 1570 - 1579 , june 2002 .",
    "m. ivkovic , s. k. chilappagari , and b. vasic ,  eliminating trapping sets in low - density parity - check codes by using tanner graph covers , \" _ ieee trans .",
    "inform . theory _",
    "3763 - 3768 , aug .",
    "2008 .",
    "s. laendner and o. milenkovic ,  algorithmic and combinatorial analysis of trapping sets in structured ldpc codes , \" proc .",
    "_ ieee international conference on wireless networks , communications and mobile computing _ ,",
    "hawaii , usa , june 13 - 16 , 2005 , pp .",
    "630 - 635 .",
    "s. laendner , t. hehn , o. milenkovic and j.b .",
    "huber ,  characterization of small trapping sets in ldpc codes from steiner triple systems , \" proc . _ 6th international symposium on turbo codes & iterative information processing , _ brest , france , sept . 6 - 10 , 2010 , pp .",
    "93 - 97 .",
    "c. koller , a. graell i amat , j. kliewer , and d. j. costello ,  on trapping sets for repeat accumulate accumulate codes , \" proc . _",
    "theory and applications workshop _ ,",
    "san diego , la jolla , ca , feb .",
    "8 - 13 , 2009 .",
    "c. koller , a. graell i amat , j. kliewer , and d. j. costello ,  trapping set enumerators for repeat multiple accumulate code ensembles , \" proc . _ ieee international symposium on information theory ( isit09 ) _ , seoul , korea , jun . - jul .",
    "2009 .",
    "g. b. kyung and c .- c .",
    "wang ,  finding the exhaustive list of small fully absorbing sets and designing the corresponding low error - floor decoder , \" _ ieee trans . communications _ , vol . 60 , pp .",
    "1487 - 1498 , june . 2012 .",
    "y. mao and a.h .",
    "banihashemi ,  a heuristic search for good low - density parity - check codes at short block lengths , \" proc .",
    "_ ieee international conference on communications _ , helsinki , finland , june 2001 , pp .",
    "41 - 44 .",
    "e. pusane , d. j. costello , and d. g.m .",
    "mitchell ,  trapping set analysis of protograph - based ldpc convolutional codes , \" proc .",
    "_ ieee international symposium on information theory ( isit09 ) _ , seoul , korea , jun . - jul .",
    "2009 , pp .",
    "561565 .",
    "c .- c . wang ,  on the exhaustion and elimination of trapping sets : algorithms & the suppressing effect , \" proc . _ ieee international symposium on inform .",
    "nice , france , june 24 - 29 , 2007 , pp .",
    "2271 - 2275 .",
    "h. xiao and a. h. banihashemi ,  estimation of bit and frame error rates of low - density parity - check codes on binary symmetric channels , \" _ ieee trans .",
    "2234 - 2239 , dec . 2007 .",
    "h. xiao and a. h. banihashemi ,  error rate estimation of low - density parity - check codes on binary symmetric channels using cycle enumeration , \" _ ieee trans .",
    "communications _ , vol .",
    "1550 - 1555 , june 2009 .",
    "h. xiao , a. h. banihashemi and m. karimi ,  error rate estimation of low - density parity - check codes decoded by quantized soft - decision iterative algorithms , \" _ ieee trans .",
    "communications _ , vol .",
    "474 - 483 , feb . 2013"
  ],
  "abstract_text": [
    "<S> in this paper , we study the graphical structure of elementary trapping sets ( ets ) of variable - regular low - density parity - check ( ldpc ) codes . </S>",
    "<S> etss are known to be the main cause of error floor in ldpc coding schemes . </S>",
    "<S> for the set of ldpc codes with a given variable node degree @xmath0 and girth @xmath1 , we identify all the non - isomorphic structures of an arbitrary class of @xmath2 etss , where @xmath3 is the number of variable nodes and @xmath4 is the number of odd - degree check nodes in the induced subgraph of the ets . </S>",
    "<S> our study leads to a simple characterization of dominant classes of etss ( those with relatively small values of @xmath3 and @xmath4 ) based on short cycles in the tanner graph of the code . for such classes of etss </S>",
    "<S> , we prove that any set @xmath5 in the class is a layered superset ( lss ) of a short cycle , where the term `` layered '' is used to indicate that there is a nested sequence of etss that starts from the cycle and grows , one variable node at a time , to generate @xmath5 . </S>",
    "<S> this characterization corresponds to a simple search algorithm that starts from the short cycles of the graph and finds all the etss with lss property in a guaranteed fashion . </S>",
    "<S> specific results on the structure of etss are presented for @xmath6 , @xmath7 and @xmath8 in this paper . </S>",
    "<S> the results of this paper can be used for the error floor analysis and for the design of ldpc codes with low error floors . </S>"
  ]
}
{
  "article_text": [
    "one of the simplest ways of creating fractals is by means of _ iterated function systems _ ( ifss ) .",
    "generally , the ifs can be defined on any complete metric space , but for the purposes of this paper we will restrict our discussion to the two - dimensional real space @xmath1 . in this section",
    "we will go through the basic definitions , given in @xcite .",
    "the transformation defined on @xmath1 of the form @xmath2 where @xmath3 is @xmath4 real matrix and @xmath5 is a two - dimensional real vector , is called a ( two - dimensional ) _ affine transformation_. the finite set of affine contractive transformations , @xmath6 with respective contractivity factors @xmath7 together with the euclidean space @xmath8 is called _ ( hyperbolyc ) iterated function system ( ifs)_. its notation is @xmath9 and its _ contractivity factor _ is @xmath10 .",
    "since @xmath11 is a complete metric space , such is @xmath12 , where @xmath12 is the space of nonempty compact subsets of @xmath0 , with the hausdorff metric @xmath13 derived from the euclidean metric @xmath14 ( @xcite ) .",
    "it can be shown that if the hyperbolic ifs @xmath9 with the contractivity factor @xmath15 is given , then the transformation @xmath16 defined on @xmath17 , by @xmath18 is a contraction mapping with the contractivity factor @xmath15 . according to the fixed - point theorem",
    ", there exist a unique fixed point of @xmath19 , @xmath20 , called the _",
    "attractor _ of the ifs , that obeys @xmath21 , for any @xmath22 .",
    "( note that there are weaker conditions under which the attractor of an ifs can be obtained - the ifs need not to be contractive , see @xcite . )",
    "two algorithms are used for the visualization of an ifs attractor , deterministic and random ( the last is also called chaos game algorithm ) . in this paper",
    "we construct the images of the attractors with the second , more efficient algorithm",
    ". our primary target in this paper will be fractal attractors , since there is no interactive , real - time tool for their modeling , to the best of our knowledge ..    the rest of the paper is organized in four sections : related articles , theoretical grounds of the tool , the tool and its application , conclusions and future work .",
    "barnsley et al . , in @xcite define the fractal transformation as mapping from one attractor to another , using the  top \" addresses of the points of both attractors and illustrate the application in digital imaging . although not user friendly , not real - time and not continuous ( they are continuous under certain conditions ) , these transformations , have a lot of potential for diverse applications . in @xcite the coordinates of the points that compose the fractal image are determined from the ifs code and then the ifs code is modified to obtain translated , rotated , scaled or sheared fractal attractor , or attractor transformed by any affine transformation as the composition of aforementioned transformations . to make a new transformation",
    ", another ifs code has to be constructed . in @xcite ,",
    "darmanto et al .",
    "show a method for making weaving effects on tree - like fractals .",
    "they make a local control of the  branches \" of the tree , by changing a part of the ifs code . the control over the change of the attractor depends on the experience of the user for predicting how the modification of the coefficients in the ifs code will change the tree - like fractal .",
    "compared to the methods for transforming fractals in the cited papers , our tool is user - friendly , real time , relatively fast and relatively low memory consuming .",
    "it enables a continuous affine transformation of an arbitrary ifs attractor .",
    "the idea for modeling fractals , i.e. their predictive , continuous transformation , where barycentric coordinates are involved , is exposed in @xcite,@xcite , @xcite , by means of , so - called _ affine invariant iterated function systems - aifs_. the ifs code is transformed into aifs code which involves barycentric coordinates .",
    "the method that we propose is also based on barycentric coordinates , but no transformation of the ifs code is needed .    also , kocic et al . in @xcite",
    "propose the use of , so called _ minimal canonical simplex _ , for better control of the attractor ( for 2d case , minimal canonical simplex is the isosceles right - angled triangle with the minimal area that contains the attractor and whose catheti are parallel to the _ x _ and _ y _ axes ) . in @xcite",
    "the authors prove a theorem for existence and uniqueness of such minimal canonical simplex .",
    "it is the limit of the cauchy sequence of the minimal simplexes of the @xmath23-th preattractor when @xmath23 approaches to infinity , in the complete metric space @xmath24 .",
    "( the @xmath23-th preattractor in this paper is defined as the set obtained after @xmath23 iterations of the chaos game algorithm . )",
    "barycentric coordinates of points ( and vectors ) promote global geometrical form and position rather than exact coordinates in relation to the origin / axes .",
    "thus , the geometric design done by the use of barycentric coordinates can be called _ coordinate - free geometric design_.    the set of the three points @xmath25 is said to be _ affine basis _ of the affine space of points @xmath0 if the set @xmath26 is a vector base of @xmath0 , observed as a vector space ( @xcite ) .",
    "we say that the point @xmath27 has _ barycentric coordinates _",
    "@xmath28 _ relative to the basis _",
    "@xmath25 , where @xmath29 , and we write @xmath30 if and only if one of the following three equivalent conditions holds : @xmath31    we will give the relations between the barycentric coordinates relative to the given basis @xmath25 and the rectangular coordinates of an arbitrary point from @xmath1 .",
    "suppose that the arbitrary point @xmath27 and the three basis points @xmath32 and @xmath33 have rectangular coordinates @xmath34 , @xmath35 , @xmath36 and @xmath37 , respectively .",
    "then the relation ( [ osnovna ] ) can be rewritten in the following form @xmath38 = a   \\left[\\begin{array}{c}a_1\\\\a_2\\end{array}\\right ] + b \\left[\\begin{array}{c}b_1\\\\b_2\\end{array}\\right ] + c   \\left[\\begin{array}{c}c_1\\\\c_2\\end{array}\\right],\\ ] ] or , in matrix form @xmath38 = \\left[\\begin{array}{ccc}a_1&b_1&c_1\\\\a_2&b_2&c_2\\end{array}\\right]\\left[\\begin{array}{c}a\\\\b\\\\c\\end{array}\\right].\\ ] ]    by rearranging the last matrix equation , we obtain more suitable form for further manipulations : @xmath39 = \\left[\\begin{array}{ccc}a_1&b_1&c_1\\\\a_2&b_2&c_2\\\\1&1&1\\end{array}\\right]\\left[\\begin{array}{c}a\\\\b\\\\c\\end{array}\\right].\\ ] ]    the relation ( [ bar - vo - dek ] ) defines the _ conversion of the barycentric coordinates relative to the affine basis @xmath25 into the rectangular coordinates_. let us denote the @xmath40 matrix by @xmath41 to indicate  triangle \" .",
    "the inverse conversion can be easily get , by simple multiplication of ( [ bar - vo - dek ] ) by the inverse of @xmath41 ( which exists , since @xmath25 is an affine basis ) .",
    "that is , the _ conversion of the rectangular coordinates into the barycentric coordinates relative to the basis @xmath42 _ is defined by the relation @xmath43 = \\mathbf{t}^{-1 } \\cdot \\left[\\begin{array}{c}x\\\\y\\\\1\\end{array}\\right],\\ ] ] which after calculating the inverse of @xmath44 , can be expressed in its explicit form ,    @xmath45 = \\frac{1}{\\det { \\mathbf t}}\\left[\\begin{array}{ccc}b_2-c_2&c_1-b_1&b_1c_2-b_2c_1\\\\c_2-a_2&a_1-c_1&a_2c_1-a_1c_2\\\\a_2-b_2&b_1-a_1&a_1b_2-a_2b_1\\end{array}\\right ] \\cdot \\left[\\begin{array}{c}x\\\\y\\\\1\\end{array}\\right],\\ ] ]    where @xmath46 .",
    "barycentric coordinates have two other names : _ affine _ and _ relative _ coordinates .",
    "affine , since they are related to an affine basis , and relative , since they define relative positions in the plane / space .",
    "namely , if we consider a set of points with given barycentric coordinates relative to the basis @xmath42 and we affinly transform the basis into the basis @xmath47 , then the set of points having the same barycentric coordinates , but now relative to the basis @xmath47 , will keep the relative geometry , i.e. will be transformed by the same affine transformation . note that any change of one affine basis to another , defines a unique affine transformation .",
    "since the image of the attractor , generated by the random algorithm is a finite set of points , we will use the aforementioned property of the barycentric coordinates to affinly transform the ifs fractal .",
    "our real time , user - friendly tool is written in c@xmath48 programming language using the visual studio 2013 .",
    "it allows both on - click definition of the triangle and definition by specifying the triangle s vertices directly in the code , with their rectangular coordinates .",
    "when the affine base is defined , the image of the fractal is created ( relative to the triangle ) and ready for transformation .",
    "triangle s vertices are moved by drag and drop option of the cursor . when the cursor is placed over the vertices",
    ", it has a `` hand '' shape , otherwise its shape is `` cross '' .",
    "the affine transformations of the triangle , immediately followed by the same affine transformation of the fractal image , are visible in real time , in the coordinate system of the window .",
    "we will show the superiority of our tool on two examples of fractal attractors , the so called  flower \" and  maple \" . in order to get clearer image of the attractor",
    ", we neglect the first 14 points and start to plot from the 15-th point .",
    "note that , by default , the origin of the coordinate system of the window is located at the top - left corner of the window , with positive directions : to the right for the @xmath49-axis and down for the @xmath50-axis .",
    "example 1 .",
    "the ifs @xmath51 , whose attractor is the  flower \" fractal , is defined by the following contractive mappings @xmath52 , @xmath53 : @xmath54 , \\,\\,\\ ,   \\mathbf{b}_1= \\left [ \\begin{array}{c } 0.37\\\\ 1.74 \\end{array}\\right];\\ ] ] @xmath55,\\,\\,\\ ,   \\mathbf{b}_2= \\left [ \\begin{array}{c}-0.34\\\\ 1.75 \\end{array}\\right].\\ ] ]    figure [ flower ] ( a ) , b ) , c ) ) depicts that the arbitrary control triangle is defined on - click . when moving its vertexes by click - and - drag , the fractal attractor appropriately responds to the transformations done over the triangle .",
    "example 2 .",
    "the attractor of the ifs @xmath56 , where the mappings @xmath52 , @xmath57 are defined by @xmath58 , \\,\\,\\ ,   \\mathbf{b}_1= \\left [ \\begin{array}{c } -0.08\\\\ 0.26 \\end{array}\\right];\\ ] ] @xmath59,\\,\\,\\ ,   \\mathbf{b}_2= \\left [ \\begin{array}{c}0.07\\\\ 3.5 \\end{array}\\right];\\ ] ] @xmath60,\\,\\,\\ , \\mathbf{b}_3= \\left [ \\begin{array}{c}0.74\\\\ 0.39 \\end{array}\\right];\\ ] ] @xmath61,\\,\\,\\ , \\mathbf{b}_4= \\left [ \\begin{array}{c}-0.56\\\\ 0.60 \\end{array}\\right];\\ ] ] is the fractal called  maple \" .",
    "we computed the coordinates of the vertices of the minimal canonical simplex for this fractal and used the vertices as an affine basis .",
    "such affine basis ensures better control over the attractor ( @xcite , @xcite ) , see figure  [ maple ] .",
    "we examined creation of the shadow or wind effect for the maple tree , throughout d ) to f ) on this figure .",
    "we succeeded in creating a real - time and user - friendly tool for interactive modeling of ifs attractors , with focus on fractal attractors . to the best of our knowledge ,",
    "this is the first real - time interactive tool for modeling fractals .",
    "the tool is very efficient because it is relatively low memory and time consuming .",
    "we foresee a great application of our tool , since all images coded by an ifs code can be affinly transformed according the user needs , only by click - and - drag .",
    "these are the first steps in fractal modeling with our tool .",
    "there is much more to be done to enhance the tool s performances .",
    "for instance , including a control polygon of more than three points . moreover , it would be very efficient to use the convex hull of the attractor as a control polygon . in the last case",
    "the control over the global changes of the attractor will be maximal . including local control",
    "would be also useful for satisfying the sophisticated needs of the users .",
    "finally , expanding the tool over 3d ifs attractors will bring higher practical importance to the tool .",
    "e. babace : iterated function system with affine invariance property ( in macedonian ) , phd thesis , faculty of natural sciences and mathematics , university `` ss .",
    "cyril and methodius '' , skopje , r. macedonia , 2009    e. babace , lj .",
    "m. koci ' c : minimal simplex for ifs fractal sets , naa 2008 , lecture notes in computer science 5434 , pp.168 - 175 , eds . : s. margenov , l. g. vulkov , j. wasniewski , springer - verlag berlin heidelberg , 2009              t. darmanto , i. s. suwardi , r. munir : weaving effects in metamorphic animation of tree- like fractal based on a family of multi - transitional iterated function system code , computer , doi : 10.1109/ic3ina.2013.6819150 conference : the international conference on computer , control , informatics and its applications 2013 ( ic3ina 2013 ) , at jakarta , indonesia , volume : i            lj .",
    "m.  koci ' c , a. c. simoncelli : towards free - form fractal modelling , in : mathematical methods for curves and surfaces ii , m. daehlen , t. lyche and l. l. schumaker ( eds . ) , pp .",
    "287 - 294 , vanderbilt university press , nashville ( tn . ) , 1998    lj . m. koci ' c , l. stefanovska , e. babace : aifs and the minimal simplex problem , proceedings of the international conference of differential geometry and dynamical systems , 5 - 7.10.2007 , bucharest , romania , pp.119 - 128 , 2008"
  ],
  "abstract_text": [
    "<S> this work introduces a novel tool for interactive , real - time transformations of two dimensional ifs fractals . </S>",
    "<S> we assign barycentric coordinates ( relative to an arbitrary affine basis of @xmath0 ) to the points that constitute the image of a fractal . </S>",
    "<S> the tool uses some of the nice properties of the barycentric coordinates , enabling any affine transformation of the basis , done by click - and - drag , to be immediately followed by the same affine transformation of the ifs fractal attractor . in order to have a better control over the fractal , as affine basis we use a kind of minimal simplex that contains the attractor . </S>",
    "<S> we give theoretical grounds of the tool and then the software application . </S>"
  ]
}
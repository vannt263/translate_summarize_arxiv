{
  "article_text": [
    "ellipsoids have been widely used to overapproximate convex sets . for instance , in control theory they naturally arise as sublevel sets of quadratic lyapunov functions . they are chosen to minimize some criterion , such as the volume . in abstract interpretation  @xcite , they have been used to compute bounds on the output of linear digital filters  @xcite .",
    "roux  _ et al . _",
    "@xcite further extended that approach by borrowing techniques from semidefinite programming ( sdp ) .",
    "however , all those works try to recover an ellipsoid that is known to exist as the lyapunov invariant of some control system from the numerical algorithm implementing that system .",
    "the analysis algorithms are tailored for the particular type of numerical code considered .",
    "ellipsoids are interesting in and of themselves because they provide a space - efficient yet expressive representation of convex sets in higher dimensions ( quadratic compared to exponential for polyhedra ) . in this paper",
    ", we devise an abstract interpretation framework  @xcite to automatically compute an overapproximation of the values of the numerical variables in a program by an ellipsoid .",
    "we focus our attention on the case when the program variables grow linearly with respect to the enclosing loop counters .",
    "we call this approximation an ` ellipsoidal cone '",
    ". our work also relates to the gauge domain @xcite , which discovers simple linear relations between loop counters and the numerical variables of a program .",
    "even though the definitions of the abstract operations are general , this model arises more naturally when the analyzed system naturally tends to exhibit quadratic invariants , for instance in the analysis of switched linear systems .",
    "section  [ ellop ] defines the basic ellipsoidal operations and their verification , and sect .",
    "[ conop ] extends this to the conic extrapolation .",
    "the soundness of our analysis relies on the verification of linear matrix inequalities ( lmi ) , which we describe in sect .",
    "[ lmi ] before delving into the description of ellipsoidal cones .",
    "finally sect .",
    "[ switch ] presents experiments and discusses applications to switched linear systems .",
    "ellipsoids are the building blocks of our conic extrapolation .",
    "we define how to compute the result of basic operations ( union , affine transformation  ) . since there is generally no minimal ellipsoid in the sense of inclusion",
    ", we choose the heuristic of minimizing the volume .",
    "other choices , such as minimizing the so called ` condition number ' or preserving the shape , are compared in @xcite .",
    "we mainly rely on sdp optimization methods @xcite both to find a covering ellipsoid and test the soundness of our result . however , we do not rely on the correctness of the sdp solver . for each operation",
    "whose arguments and results are expressed in function of matrices @xmath0 , we define a linear matrix inequality ( lmi ) of the form @xmath1 , where @xmath2 means `` @xmath3 is semidefinite positive '' , such that proving the soundness of the result is equivalent to showing that the lmi is satisfied for some reals",
    "we find @xmath4 candidates using an sdp solver and then verify the inequality with a sound procedure described in sect .",
    "[ lmi ] .",
    "[ defell ] @xmath5 is the definition of an ellipsoid where @xmath6 and @xmath7 is a definite positive @xmath8 matrix . for practical use",
    ", we also define the function @xmath9 .",
    "let @xmath10 and @xmath11 be two ellipsoids , using the function @xmath12 of definition  [ defell ] we have the following duality result ( proven in @xcite ) :    [ sproc ]    @xmath13    where @xmath14 is an @xmath15 matrix , with @xmath16 if @xmath17 , else @xmath18 .",
    "hence @xmath19 if and only if the minimizing value @xmath20 is nonpositive .",
    "for given @xmath10 , @xmath11 and candidates @xmath21 and @xmath22 computed by the sdp solver , the right hand term provides the lmi to check .",
    "let @xmath23 be @xmath24 ellipsoids , we want to find an ellipsoid @xmath25 which is of nearly minimal volume containing them .",
    "to do so , we can solve the following sdp problem .",
    "it is decomposed into a first part ensuring the inclusion , proven in @xcite , and a second part describing the volume minimization criterion , proven in ( * ? ? ?",
    "* example 18d ) .",
    "the unknowns of the sdp problem are @xmath26 an @xmath8 symmetric matrix , @xmath27 a vector , @xmath28 a lower triangular matrix and real numbers @xmath29 , @xmath30 @xmath31 where @xmath32 :    @xmath33{lectmodconv } : } } \\\\ & \\begin{pmatrix } x & \\delta \\\\ \\delta^t & d(\\delta ) \\end{pmatrix } \\succeq 0 \\\\ & \\mbox { where $ d(\\delta)$ is the diagonal matrix with the               diagonal of $ \\delta$. } \\\\ & \\begin{pmatrix } u_1 & t \\\\ t & u_2 \\end{pmatrix } \\succeq 0 \\mbox { and } \\forall i , 1\\le i \\le 2^l-2 , \\begin{pmatrix } u_{2i+1 } & u_i \\\\ u_i & u_{2i+2 } \\end{pmatrix } \\succeq 0 \\\\ & \\forall i , 2^l-1\\le i < 2^l-1+n , u_i=\\delta_{i-2^l+2 } \\\\ &    \\mbox { where $ ( \\delta_1,\\ldots,\\delta_n)$ are the diagonal      coefficients of $ \\delta$. } \\\\",
    "& \\forall i , 2^l-1+n\\le i \\le 2^{l+1}-2 , u_i=1 \\mbox { } \\\\ \\end{aligned}\\ ] ]    we then define @xmath34 and @xmath35 ( in floating - point numbers , then we possibly increase the ratio of @xmath7 to ensure the inclusion condition ) .",
    "we can check that the resulting ellipsoid really contains the others with theorem  [ sproc ] .      in this section ,",
    "we are interested in computing the sound counterpart of an assignment @xmath36 , where @xmath37 is the vector of variables , @xmath3 is a matrix and @xmath38 a vector .",
    "we want to find a minimal volume ellipsoid such that the inclusion   @xmath39 is verified .    by a symmetry argument",
    ", we can set @xmath40 . by expanding the inclusion equation ,",
    "we find   @xmath41 .",
    "hence @xmath42 is a solution of the following sdp problem with unknowns @xmath26 an @xmath8 symmetric matrix , @xmath27 a vector , @xmath28 a lower triangular matrix and real numbers @xmath29 , @xmath30 @xmath31 where @xmath32 :    @xmath43    we then set @xmath34 and @xmath40 .",
    "the second inclusion condition is here to ensure the numerical convergence of the sdp solving algorithm : if @xmath3 is singular , the image by @xmath3 of an ellipsoid is a flat ellipsoid . with this condition ,",
    "we ensure that @xmath25 contains a ball of radius @xmath44 .",
    "to add an input defined by the convex hull of a finite set of vectors ( for instance a hypercube ) , we can just compute the sum for every one of these vectors and compute the union  @xcite .",
    "the previous procedure gives us inequalities whose correctness ensures that the ellipsoid @xmath45 contains the image of @xmath10 by @xmath46 .",
    "however , @xmath40 is computed in floating - point arithmetic , hence the soundness does not extend to our actual result @xmath11 .",
    "therefore , we have to devise a test of inclusion for an arbitrary @xmath47 .",
    "let us compute the resulting center in two steps : we first assume that @xmath48 .",
    "we have from @xcite :    @xmath49    we can hence verify the inclusion by finding suitable parameters and verifying the resulting lmi .",
    "we finally have to perform the sound computation of the center translation @xmath50 .",
    "again , this is computed in floating - point arithmetic and we may have to increase the ratio of @xmath7 to ensure the verification of the inclusion condition in interval arithmetics : in the test of theorem  [ sproc ] , we first compute @xmath50 and @xmath51 in floating - point arithmetic ( and possibly increase the ratio ) , and with the lmi we check that it `` contains '' @xmath51 directly computed in interval arithmetic .      it can be useful to analyze groups of variables independently , and merge the results . given a set of variables @xmath52 and an ellipsoidal constraint over these variables @xmath53 , we can find an ellipsoidal constraint linking @xmath54 by computing the assignment defined by the matrix @xmath55 .",
    "given two sets of variables @xmath56 and @xmath57 linked respectively by @xmath58 and @xmath59 , their product is tightly overapproximated by : @xmath60 .",
    "we now describe how we check the lmi s that determine the soundness of our analysis .",
    "we use interval arithmetic : the coefficients are intervals of floating - point numbers .",
    "each atomic operation ( addition , multiplication  ) is overapproximated in the interval domain .      recall that the sdp solver gives us an inequality of the form @xmath61 , and candidate coefficients @xmath4 .",
    "we translate each matrix and coefficient into the interval domain , and sum them up in interval arithmetic so that the soundness of the result does not depend on the floating - point computation of the linear expression .",
    "then , we compute the cholesky decomposition of the resulting matrix in interval arithmetic . that is , we decompose @xcite the matrix @xmath3 into @xmath62 where @xmath63 is an interval diagonal matrix and @xmath64 a ( non interval ) lower triangular matrix with ones on the diagonal .",
    "checking that @xmath63 has only positive coefficients implies that @xmath3 is definite positive .",
    "the limitation in the precision of the computations makes us unable to actually test whether a matrix is semidefinite positive : we can only decide when a matrix is definite positive `` enough '' . for instance , standard libraries fail at deciding that the null matrix @xmath65 is semidefinite positive .",
    "it means that for all the operations and verifications , we have to perform additional overapproximations in addition to those made by the sdp solver , such as multiplying the ratio of the ellipsoid by a number @xmath66 .",
    "moreover , in the verification of lmi s , it can prove useful to explore the neighborhood @xmath67 of the parameters @xmath4 .",
    "as roux and garoche write in @xcite : `` finding a good way to pad equations to get correct results , while still preserving the best accuracy , however remains some kind of black magic . ''      from the complexity results of porkolab and khachiyan , the resolution of an lmi with @xmath68 terms in dimension @xmath69 has a complexity of @xmath70 @xcite .",
    "hence the complexity of the abstract operations is polynomial as a function of the dimension @xmath69 ( i.e. , the number of variables ) , with a degree almost always smaller than 4 ( for most operations , @xmath71 ) .",
    "the complexity of the cholesky decomposition can be directly computed and is @xmath72 .",
    "now that the ellipsoidal operations are well defined , we can describe the construction of the conic extrapolation .",
    "the goal is to analyze variable transformations when the ellipsoidal radius evolves ( sub-)linearly in the value of the loop counters .",
    "let us have numerical variables @xmath73 and loop counters @xmath74 , we want to control the evolution of @xmath37 depending on the counters @xmath75 , which are expected to be monotonically increasing .",
    "inspired by the ellipsoidal constraints , we can use intersections of linear inequalities and a quadratic constraint of the form :    [ defcon ] let @xmath76 be a definite positive quadratic form ( that is , there is a matrix @xmath77 such that @xmath78 , @xmath79 ) , @xmath6 , and for @xmath80 , @xmath81 , @xmath82 , @xmath83 , and @xmath84 a boolean value .",
    "we define the ellipsoidal cone : @xmath85    let @xmath7 be the matrix associated with @xmath76 , @xmath10 is the ellipsoidal base of the cone .",
    "the @xmath83 are the base levels of the cone , that is the minimum values of the loop counters ( usually zero ) .",
    "the @xmath82 are the directions toward which the cone is `` leaning '' ( for instance , with a single loop iterating @xmath86 , we would want @xmath87 to be equal to @xmath88 ) .",
    "the @xmath89 determine the slope of the cone in each dimension .",
    "the @xmath84 are boolean values stating , for each dimension , whether an extrapolation has been made in this dimension .",
    "that is , do we consider only the @xmath90 with @xmath91 ( case @xmath92 ) or all those with @xmath93 and verifying the other conditions ( case @xmath94 ) .",
    ".,scaledwidth=70.0% ]      we need to be able to test the inclusion of two cones .",
    "the following theorem shows that this inclusion can be reframed as conditions that can be verified with an sdp solver .",
    "[ thincl ] if we consider two cones @xmath95 and @xmath96 , then @xmath97 if and only if @xmath98    to prove this theorem , we first consider the case when the two cones have the same base levels .",
    "that is , we reduce it to the case when all the @xmath99 s are equal to @xmath65 .    [ lemm1 ] if we consider two cones @xmath100 and @xmath101 , then @xmath97 if and only if @xmath102    the proof of these two results is postponed to the end of the section .",
    "theorem  [ thincl ] enables us to build a sound test of inclusion between two cones @xmath103 and @xmath104 .",
    "condition @xmath105 can be directly tested .",
    "we can use the procedure of the previous section to test the ellipsoidal inclusion of condition @xmath106 .",
    "note that in practice , the test of inclusion will be used ( during widening iterations ) on cones with the same ellipsoidal base . in these cases , we do not want the overapproximations of the sdp solver to reject the inclusion .",
    "therefore we should directly test whether the bases @xmath53 and the @xmath99 s are equal ( as numerical values ) and answer @xmath107 for the test of base inclusion in this case .    to perform a sound test on the subcondition of @xmath108 : @xmath109 we can compute an overapproximation of @xmath110    from theorem  [ sproc ] , we know that @xmath111 so for any feasible solution @xmath112 of this sdp problem , @xmath113 is a sound overapproximation of @xmath114 .",
    "the abstract counterpart of a statement @xmath115 for some value @xmath116 , is the operation @xmath117 : after the statement , the constraint is verified for @xmath118 , and making this change in definition  [ defcon ] leads to the new value of @xmath99 . to have a sound result , we can compute the sum in interval arithmetic , and take the lower bound . note that , in general , the loop counters are integer valued . in that case , the value can be computed exactly .",
    "we want to have a sound counterpart for the affine assignment @xmath119 where @xmath3 is a matrix and @xmath38 a vector .",
    "let us fix the values of @xmath120 and note @xmath121 and @xmath122 .",
    "let @xmath7 + be the matrix of @xmath76 .",
    "we first want to find @xmath123 . by symmetry , we can set @xmath124 .",
    "thus , by doing the same calculations as in sect.[ellaff ] , we have @xmath125 the last condition does not depend on the @xmath126 s , so for any quadratic form @xmath127 whose matrix @xmath128 verifies @xmath129 ( which is an sdp equation , we can add the conditions of volume minimization of ( [ sdpu ] ) , and @xmath130 with @xmath44 small enough , to ensure numerical convergence ) , we have @xmath131    as in the case of ellipsoidal assignments , @xmath132 and @xmath133 are computed in floating - point arithmetic .",
    "hence once they are computed , we have to ensure that the resulting numerical cone contains the formally defined cone , i.e. we need to verify the inclusion of ellipsoidal bases with ( [ verifassign ] ) and the procedure described in sect.[ellaff ] .",
    "we also need to verify the conic inclusion , i.e. the fact that @xmath134 , where @xmath135 and @xmath136 are the parameters of the resulting cone .",
    "so we may have to update the parameters and verify the inequalities in a sound manner .",
    "when the analyzer enters a new loop , it needs to take into account the previous constraint and add a dependency on the current loop counter @xmath126 . moreover , when it exits a loop , it needs to build a new constraint overapproximating the previous one that does not involve the counter @xmath126 .",
    "ellipsoidal constraints can be seen as conic constraints with @xmath137 .",
    "hence we study the problem of adding and removing counters to a conic constraint @xmath138 .",
    "let @xmath139 be the counter we want to add .",
    "let @xmath140 be the minimal value of the counter inferred at this point .",
    "we set @xmath141 , @xmath142 and @xmath143 if the value of @xmath139 at this point of the analysis is not known precisely , else if we know that @xmath144 , then @xmath145 .",
    "that gives us the constraint @xmath146 .",
    "it is immediate from definition  [ defcon ] and the distinction made on what we know about @xmath126 , that this constraint overapproximates the set of reachable @xmath90 at this point .",
    "we now want to remove the counter @xmath147 from the conic constraint , provided that we know that @xmath148 $ ] with @xmath149 ( note that if it happens that @xmath150 , then @xmath151 ) .",
    ", hence projecting along its direction.,scaledwidth=50.0% ]    [ proj ] let @xmath152",
    ". then @xmath103 is convex and we have @xmath153}=c\\cap\\{(x , y ) | y_k\\in[a , b]\\}= { \\operatorname{conv } } ( c\\cap\\{(x , y ) | y_k = a \\lor y_k = b\\}).\\ ] ] where we suppose @xmath154 and where @xmath155 is the convex hull of @xmath26 .    up to translation",
    ", we can assume that @xmath156 . if @xmath157 , it is immediate .",
    "we suppose @xmath158 .",
    "then , if @xmath7 is the matrix of @xmath76 , let @xmath159 be the inverse of its square root ( @xmath160 ) .",
    "we have @xmath161 from the previous equivalences , we have @xmath162 and @xmath163 .",
    "moreover @xmath164 .",
    "let @xmath165 be the projection along @xmath147 .",
    "since convexity and barycenters are preserved up to projections , @xmath166})={\\operatorname{conv } } ( \\pi_{y_k}(c_{|y_k = a } ) \\cup \\pi_{y_k}(c_{|y_k = b } ) ) $ ] .",
    "so , by a direct calculation @xmath167 we have a similar equality for @xmath168 , hence we just have to compute the join @xmath169 , which is an overapproximation of the convex hull of the union",
    ".    however , we have to implement this operation such that it is sound when computed in floating - point arithmetic . via affine transformation",
    ", we can soundly compute an ellipsoidal base @xmath170 such that @xmath171 then , for any @xmath172 such that @xmath94 , if we note @xmath173 and @xmath174 the parameters of the resulting cone , in order to have an inclusion of @xmath175 and @xmath176 in @xmath177 , we need to establish by theorem  [ thincl ] that : @xmath178 and since from our hypothesis on @xmath170 we know that @xmath179 , we can just set @xmath180 and the condition becomes @xmath181 .",
    "so we can just define @xmath182 , hence the resulting cone after the removing of the @xmath183 counter is @xmath184      let @xmath185 and @xmath186 .",
    "we suppose that @xmath187 and @xmath188 .",
    "we want to define a widening operator @xmath189 over cones .",
    "the intuitive idea is that if @xmath103 `` starts strictly below '' @xmath104 ( cf .",
    "the conditions on the @xmath99 s ) , then @xmath190 has the same ellipsoidal base as @xmath103 , but its opening has been `` widened '' to contain @xmath104 .",
    "the decision of only changing the opening and the orientation of the cone ( i.e. , to change only the @xmath191 s and @xmath192 s ) relies on the hypothesis that the relative shift of @xmath104 from @xmath103 has good chances to be reproduced again .",
    "hence the name of `` conic extrapolation '' .",
    "more formally , we first study the special case in which we know that @xmath194 and we define a partial widening operator @xmath193 .",
    "let @xmath195 .",
    "we note @xmath196 ( resp .",
    "@xmath197 ) the conditions of theorem  [ thincl ] relative to the inclusion @xmath198 ( resp .",
    "@xmath199 ) . by construction of @xmath177",
    ", we already have @xmath106 and with our hypothesis @xmath200 , we just need to verify @xmath198 to have @xmath201 .",
    "we can define @xmath202 , which gives us @xmath105 and @xmath203 .    finally to verify @xmath108 and @xmath204",
    ", we only need to define the @xmath173 s and @xmath174 s such that @xmath205 which we overapproximate by a triangle inequality for the norm defined by @xmath76 : @xmath206    with the sdp methods of the first section , we can compute an overapproximating @xmath207 . for each @xmath208 , if none of @xmath84 or @xmath209 is @xmath107 , then from our hypothesis @xmath200 , @xmath210 and we do not have to give values to either @xmath191 or @xmath192 .",
    "if only @xmath84 ( resp .",
    "@xmath209 ) is @xmath107 , then we define @xmath180 and @xmath182 ( resp . @xmath211 and @xmath212 ) .    if @xmath213 , we want to minimize @xmath214 if we fix the @xmath76-distance @xmath215 , we want to minimize the @xmath76-distance @xmath216 . with this geometrical point of view , we see that the optimal @xmath174 is a barycenter of @xmath192 and @xmath136 .",
    "so we define @xmath217 where we want to find @xmath218 $ ] minimizing @xmath219 hence , we can exactly ( up to floating - point approximations ) compute @xmath220 , define @xmath174 and then @xmath173 .",
    "this construction of @xmath221 ensures that @xmath222 and defines @xmath193 .",
    "we now study the general case in which the only assumption made is that @xmath187 and @xmath188 .",
    "we define a cone @xmath223 , which contains the ellipsoidal base of the two cones .",
    "the definition ( with @xmath76 , @xmath224 and the @xmath99 ) ensures the inclusion of the ellipsoidal base of @xmath103 .",
    "let @xmath225 and @xmath226 .",
    "we define @xmath227 .",
    "let @xmath228 , if we have @xmath229 then @xmath230 and from the definitions of the @xmath231 s and definition  [ defcon ] , we would have @xmath232 . to get this result ,",
    "we need : @xmath233 if the transformations applied to the cone are affine , the shift can be seen as the difference between centers .",
    "so we choose to define @xmath234 .",
    "then we choose the minimal possible value of @xmath235 to have a cone as tight as possible : once the @xmath192 s corresponding to @xmath28 are computed in floating - point arithmetic , we can define an upper bound on @xmath236 and define @xmath235 accordingly , so that the above inequality is verified .",
    "these definitions of @xmath28 and @xmath235 must be implemented in terms of @xmath237 and @xmath238 .",
    "since we ensured that there is at least one @xmath208 such that @xmath239 , there is always a solution .",
    "if only one @xmath208 fits this criterion the solution is unique , otherwise a choice must be made on how to weight the different variable .",
    "this uncertainty can be easily explained : recall that in real programs , only one loop counter is increased at a time , so we know what causes the change in our constraint .",
    "this is not the case if many loop counters are increased at the same time .",
    "finally , this definition of @xmath240 allows us to define the widening operator @xmath189 by : @xmath241 .",
    "note that the assumptions of @xmath193 are verified since @xmath103 and @xmath240 have the same ellipsoidal base , and @xmath240 , hence @xmath242 , contains the base of @xmath104 .    to ensure the convergence of the widening sequence in the cases described in sect .",
    "[ switch ] , we can use a real widening operator on the @xmath191 s that sets them to @xmath243 after a certain number of steps , for instance .    :",
    "@xmath244 in black , @xmath245 in blue , @xmath240 in green and @xmath246 in red.,scaledwidth=70.0% ]      @xmath247 we first prove that @xmath248 . from @xmath105 , we know that @xmath249 .",
    "thus , for @xmath250 such that @xmath251 , we define @xmath252 and @xmath253 .",
    "we have @xmath254 .",
    "@xmath255 so if @xmath92 then @xmath256 , hence @xmath257 , and from @xmath106 , if @xmath94 , then we have the same inequality since @xmath258 .",
    "so this inequality is true for all @xmath259 .",
    "thus , we have @xmath260 and @xmath261 we have @xmath262 and from @xmath106 , @xmath263 .",
    "so @xmath264 . so @xmath97 .",
    "@xmath247 now we prove that @xmath265 .",
    "it is obvious that @xmath266 by taking the intersections of the cones with the set @xmath267 .    if @xmath268 and @xmath94 , then there exist a point @xmath90 of @xmath103 with @xmath269 , so @xmath270 and @xmath271 .",
    "if @xmath272 and @xmath273 , then let us take @xmath274 such that @xmath258 and @xmath275 .",
    "we define @xmath276 .    for any @xmath277 ,",
    "@xmath278    since @xmath275 , and from the previous inequality , we have for @xmath29 big enough , @xmath279 . by a direct computation @xmath280 . and",
    "since @xmath94 , we have for @xmath281 such that @xmath282 and @xmath283 , @xmath284 , @xmath285 so @xmath271 .",
    "we have proven @xmath286 , so we finally have @xmath287 .    since @xmath288 , it is clear that @xmath105 is a necessary condition .",
    "moreover , @xmath289 , therefore @xmath290 .    directly from definition  [ defcon ] , we have for @xmath291 the implication @xmath292 .",
    "so up to translation , we can reduce this case to @xmath293 and apply lemma  [ lemm1 ] .",
    "@xmath295 pick @xmath296 pick @xmath297 @xmath298    [ cols=\">,^,^,^,^,^,^,^,^\",options=\"header \" , ]     however , the picture is not as nice if we add linear transformation .",
    "this is the case , for instance , for switched linear systems in control theory ( fig.[figswitch ] ) : if the quadratic form associated with the ellipsoid is not a lyapunov function of the linear part of the system ( of the matrices @xmath299 in fig.[figswitch ] ) , then the growth of its radius is exponential in the loop counters , and can not be captured by our conic extrapolation .",
    "so if @xmath7 is the matrix of the ellipsoidal base of the cone , the lyapunov conditions should be verified simultaneously : @xmath300 .",
    "this is not always possible , but one can use the sdp solver to try to find a suitable @xmath7 . note that the identity matrix is not stable in the sense of control theory and should not be included in the search of @xmath7 .",
    "when @xmath7 verifies the lyapunov conditions , it is easy to show that for @xmath191 large enough , the cone will be invariant during loops iterations .",
    "now we show the converse of the assertion of the previous paragraph : if @xmath76 is a lyapunov function for the matrix @xmath3 and @xmath38 is a vector , then for @xmath22 large enough @xmath301 is stabilized by the iteration of @xmath119 .    up to translation , we show the result for @xmath302 .",
    "we know than for any @xmath303 , @xmath304 and by the lyapunov condition , there exist @xmath305 such that @xmath306 .",
    "let @xmath307 and @xmath308 .",
    "we have @xmath309    so for @xmath22 large enough ( @xmath310 and @xmath311 ) , we have @xmath312 .",
    "we proposed an abstract interpretation framework based on ellipsoidal cones to study systems with ( sub-)linear growth in loop counters .",
    "the aim of this work is twofold : to build an extension of the formal verification of linear systems , and to devise a framework that can be used outside the context of digital filters .",
    "indeed , only the choice of the ellipsoidal base of the cone has to deal with control theory considerations .",
    "the next step is obviously to go beyond the prototype and have a robust implementation to test this framework on actual systems .",
    "this will involve a research on how to accurately tune and use the sdp solver , how to deal with precision issues .",
    "the main tools are the sdp solver and the sdp duality to check the soundness of the results of operations via lmi s .",
    "however , we are not bound to use sdp solvers to compute these results , and exploring other options might speed up the analysis .",
    "we want to thank pierre - loc garoche and lonard blier for the fruitful conversations we had with each of them during this work , as well as the anonymous referees for the time and efforts taken to review this work .    9 yildirim , e. alper .",
    "`` on the minimum volume covering ellipsoid of ellipsoids . '' _ siam journal on optimization _ 17.3 ( 2006 ) : 621 - 641 .",
    "ros , llus , assumpta sabater , and federico thomas .",
    "`` an ellipsoidal calculus based on propagation and fusion . '' _ systems , man , and cybernetics , part b : cybernetics , ieee transactions _ on 32.4 ( 2002 ) : 430 - 442 .",
    "ben - tal , a. , & nemirovski , a. ( 2001 ) .",
    "_ lectures on modern convex optimization : analysis , algorithms , and engineering applications _ ( vol .",
    "_ siam_. feret , j. ( 2004 ) . `` static analysis of digital filters '' . in _",
    "the 13th european symposium on programming - esop 2004 _ ( vol .",
    "2986 , pp .",
    "33 - 48 ) .",
    "feret , j. ( 2005 ) .",
    "`` numerical abstract domains for digital filters '' . in _ international workshop on numerical and symbolic abstract domains ( nsad 2005)_. roux , p. , jobredeaux , r. , garoche , p. l. , fron ,  .",
    "( 2012 ) . `` a generic ellipsoid abstract domain for linear time invariant systems '' . _ in proceedings of the 15th acm international conference on hybrid systems : computation and control _ ( pp . 105 - 114 ) .",
    "roux , pierre , and pierre - loc garoche .",
    "`` computing quadratic invariants with min - and max - policy iterations : a practical comparison . ''",
    "_ fm 2014 : formal methods . _ springer international publishing , 2014 .",
    "563 - 578 .",
    "venet , arnaud j. `` the gauge domain : scalable analysis of linear inequality invariants . '' _ computer aided verification . _",
    "springer berlin heidelberg , 2012 .",
    "cousot , patrick , and radhia cousot .",
    "`` abstract interpretation : a unified lattice model for static analysis of programs by construction or approximation of fixpoints . '' _ proceedings of the 4th acm sigact - sigplan symposium on principles of programming languages . _ acm , 1977 .",
    "cousot , patrick , and radhia cousot .",
    "`` abstract interpretation frameworks . '' _ journal of logic and computation _ 2.4 ( 1992 ) : 511 - 547 .",
    "blekherman , g. , parrilo , p.a . ,",
    "thomas , r.r .",
    "( eds ) ( 2013 ) . `` semidefinite optimization and convex algebraic geometry '' ( vol .",
    "13 ) . in _",
    "vandenberghe , l. , boyd , s. ( 1996 ) .",
    "`` semidefinite programming '' ( vol .",
    "38 ) . in _ siam review _",
    "49 - 95 ) .",
    "porkolab , lorant , and leonid khachiyan .",
    "`` on the complexity of semidefinite programs . ''",
    "_ journal of global optimization _ 10.4 ( 1997 ) : 351 - 365 .",
    "daafouz , jamal , pierre riedinger , and claude iung . `` stability analysis and control synthesis for switched systems : a switched lyapunov function approach . '' _ automatic control , ieee transactions on _ 47.11 ( 2002 ) : 1883 - 1887 .",
    "m. s. andersen , j. dahl , and l. vandenberghe . `` cvxopt : a python package for convex optimization '' , version 1.1.6 .",
    "available at cvxopt.org , 2013 .",
    "fredrik johansson and others .",
    "`` mpmath : a python library for arbitrary - precision floating - point arithmetic '' , ( version 0.18 ) , december 2013 .",
    "stfan van der walt , s. chris colbert and gal varoquaux .",
    "`` the numpy array : a structure for efficient numerical computation '' , _ computing in science & engineering _ , 13 , 22 - 30 ( 2011 ) jeannet , bertrand , and antoine min .",
    "`` apron : a library of numerical abstract domains for static analysis . '' _ computer aided verification . _",
    "springer berlin heidelberg , 2009 ."
  ],
  "abstract_text": [
    "<S> the inference and the verification of numerical relationships among variables of a program is one of the main goals of static analysis . in this paper , we propose an abstract interpretation framework based on higher - dimensional ellipsoids to automatically discover symbolic quadratic invariants within loops , using loop counters as implicit parameters . in order to obtain non - trivial invariants </S>",
    "<S> , the diameter of the set of values taken by the numerical variables of the program has to evolve ( sub-)linearly during loop iterations . </S>",
    "<S> these invariants are called ellipsoidal cones and can be seen as an extension of constructs used in the static analysis of digital filters . </S>",
    "<S> semidefinite programming is used to both compute the numerical results of the domain operations and provide proofs ( witnesses ) of their correctness .    </S>",
    "<S> * keywords : * static analysis , semidefinite programming , ellipsoids , conic extrapolation </S>"
  ]
}
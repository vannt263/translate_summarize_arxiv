{
  "article_text": [
    "the industrial demand for high - assurance software opens a window of opportunity for mathematically based development methods , able to design complex systems at ever - increasing levels of reliability and security .",
    "this paper s contribution is placed at a specific corner of the broad landscape of formal methods for software development : that of _ algebraic specification _",
    "@xcite , a family of methods which , having played a pioneering role , constitutes at present a large and mature body of knowledge and active research .",
    "such methods have a double origin .",
    "on the one hand they can be traced back to early work on data abstraction and modular decomposition of programs @xcite . on the other hand , to research on semantics of program specifications building on results from algebraic logic and model theory . especially relevant in this respect is the original work of the so - called adj group @xcite whose initial algebra semantics was the first , full formal approach to software development put forward . this double origin ,",
    "temporally located around mid seventies , is not surprising : _ compositionality _ is both a basic requirement in program development and a major asset in algebraic semantics .",
    "the whole area flourished rapidly from the outset : not only different approaches to semantics ( final , observational , loose ) emerged , but also the initial tie to many - sorted equational logic was soon extended , first to conditional - equational logic , and later to order - sorted , partial and full first - order among other variants .",
    "the emergence of the first effective algebraic specification languages  obj @xcite and clear @xcite  overlaps another major development : the introduction of institutions by j. goguen and r. burstall @xcite",
    ". institution theory , which develops model theory independent of the underlying logical system , made possible to decouple specification methodology from the particularities of whatever semantics one may consider more suitable to a specific problem @xcite .",
    "moreover , although for a long time the impact of these methods in industry has been limited , a successful effort has been made in the last 15 years towards convergence on generic frameworks with suitable tool support .",
    "the compass and , later , the cofi initiative @xcite , which lead to the development of casl @xcite , are relevant milestones in this process . besides casl , cafeobj @xcite and maude @xcite",
    "are currently used in several industrial applications and tool development . actually , research in such methods , either at a foundational or methodological level , found applications in new , unsuspected areas  for example , in documenting service interfaces @xcite , characterising contracts in contract - based programming @xcite or test generation for software composition @xcite .",
    "for the working software engineer , a software component is documented by an _ interface _ , which provides a language through which it interacts with its environment , and a _ specification _ of the intended meaning of the services provided .",
    "this specification is implemented by a concrete piece of software respecting the specified semantics .",
    "algebraic specification methods build on the observation that these somehow vague concepts from software engineering can be framed rigorously in terms of well - known mathematical notions .",
    "thus , an _ interface _ corresponds to a _ signature _",
    ", i.e. , a set of names for the relevant types , called _ sorts _ , and a family of service or operation names , classified by their arity and input - output sorts .",
    "a signature generates a formal language , giving a rigorous meaning to what we have called before the component s interaction language .",
    "once fixed a signature , a _ specification _ describes a _ class of models _ for that signature , and an _ implementation _ identifies a specific model within such a class . if functions provide suitable abstractions of the services offered by a software component , this analogy can be made even more concrete by identifying _",
    "interfaces _ with _ algebraic signatures _ , ( denotations of ) _ specifications _ with _ classes of algebras _ , and _ implementations _ with specific _",
    "algebras_.    the analogy extends to the entire software development process along which components are _ refined _ by incrementally adding detail and reducing under - specification .",
    "formally , this is a process of structural transformations witnessed by _ signature morphisms _ , which map functionally sorts and operations from a signature to another respecting the sort translation of functional types .    in such a context",
    "this paper raises and discusses the following question : _ can more flexible notions of refinement emerge from replacing signature morphisms by some weaker notion of transformation ? _    the quest for _ weaker notions of transformation _ lead us to a different setting , that of algebraic logic @xcite .",
    "the key conceptual tool is that of a _ deductive system _ , i.e. , a formal language generated by a _ signature _ , and a _ consequence relation_. interrelating such systems , through maps connecting logical properties , has been studied from early in the last century .",
    "such maps were called _ translations _ and investigated as part of an ambitious programme addressing tools to handle the multiplicity of logics . as a result",
    ", several intuitive notions of translation are scattered in the literature .",
    "many logicians tailored the notion , for their own purposes , to relate specific logics and to obtain specific results . in general , however , a translation is regarded as a map between sets of formulas of different logics such that the image of a theorem is still a theorem .",
    "they were used originally to clarify the relationship between classical and constructive logics .",
    "our starting point is the observation that specifications describe classes of models and those can be naturally associated to deductive systems .",
    "then , translations that both reflect and preserve consequence relations seem interesting candidates to witness weaker forms of refinement . in this paper",
    "we will single out a specific sort of translations based on _ multifunctions _",
    ", , functions mapping an element to a set of elements .",
    "such translations are called _ interpretations _ and constitute a central tool in the study of equivalent algebraic semantics ( see , , @xcite ) .",
    "a paradigmatic example is the interpretation of the _ classical propositional calculus _ into the _ equational theory of boolean algebras _ ( cf .",
    "* example 4.1.2 ) ) .",
    "this paper explores interpretations between the deductive systems corresponding to classes of models of specifications as possible witnesses of refinement steps .",
    "the notion seems able to capture a number of transformations which are difficult to deal with in classical terms .",
    "examples include data encapsulation and the decomposition of operations into atomic transactions .",
    "it also seems promising in the context of new , emerging computing paradigms which entail the need for more flexible approaches to what counts as a valid transformation along the development process ( see , for example , @xcite ) .      in this context",
    ", the contribution of this paper , which combines and extends previous results by the authors reported in @xcite and @xcite , is twofold . on the one hand it puts forward a detailed characterisation of refinement witnessed by interpretations , referred in the sequel as _ refinement by interpretation _ , and exemplifies its potentialities in a number of small , yet illustrative examples .    on the other hand",
    ", it renders the whole approach at a sufficiently abstract setting to be applicable over _ arbitrary _ , technically _",
    "@xmath0-dimensional _ , deductive systems .",
    "the dimension fixes the kind of relationship between terms one is interested in .",
    "dimension 2 , for example , encompasses equations , regarded as instances of a binary predicate asserting , for example , term equality , bisimilarity , or observational equivalence .",
    "similarly , a unary predicate asserting the validity of a formula is enough to represent a proposition , leading to 1-dimensional deductive systems . refinement by interpretation in a general , @xmath0-dimensional setting provides a suitable context to deal simultaneously with deductive systems arising from classes of models presented in different logics , for example , as a set of equations , propositions or modal formulas .      once stated the paper s contributions , it is important to clearly delimit its scope .",
    "first of all it should be stressed that the focus of this paper is not placed on _ specifications _ , understood as syntactic entities which describe in a structured , modular way classes of models , but rather on the _ classes of models _ themselves , which constitute their denotations .",
    "deductive systems , the basic tool in our approach , correspond to such classes .",
    "this means that the whole area of _ specification structuring _",
    "@xcite is , for the moment , left out .",
    "our approach is not concerned with the fact that specifications describing the relevant classes of models are _ flat _ ,",
    "i.e. given by a finite set of sentences , or _ structured _ , _",
    "i.e. _ , built by systematic application of a number of operators , such as _ union _ , _ translation _ or _ hiding _ , all of them well characterised in the literature and implemented in a number of computer - supported modelling tools .",
    "this does not deny the fundamental importance of specification structuring .",
    "research on this topic started with the introduction of clear @xcite , by the end of the seventies , and its role can not be underestimated .",
    "actually , the recursive definition of structured specifications provides basic modular procedures for software composition and architecture .",
    "moreover structuring operations allows one to go beyond the specification power of simple , unstructured specifications @xcite .    clearly , the approach proposed in this paper can be tuned to specification refinement in a strict sense . in a recent publication",
    "@xcite we showed how _ refinement by interpretation _ can be lifted to the level of structured specifications with the usual operators mentioned above .",
    "we believe , however , that by focussing on _ classes of models _ this piece of research acquires a broader scope of application and is worth on its own . in particular , it pays off when dealing with requirements that can not be properly formalised in a specification ( for example , the property that a controller has a finite number of states ) .",
    "note this does not entail any loss of expressivity : for each specification , one may recursively compute its denotation ( a signature and a class of models ) and work directly with them .",
    "on the other hand , the discussion on which operators should be considered in a specification calculus is still active .",
    "for example , very recently , reference @xcite introduced two new operators for specification composition in order to deal with non - protecting importation modes .",
    "this further justifies the relevance of a semantic approach as proposed here .",
    "another concept to make precise is _ refinement_. the word",
    "is taken here in the broad sense of a transformation mapping an abstract to a more concrete class of models .",
    "as such classes are represented by deductive systems , a refinement will map a deductive system into another , while preserving the consequence relation .",
    "this is in line with the usual meaning of refinement : all requirements stated at the original level are still valid after refinement .",
    "moreover , it will be shown in the paper that _",
    "refinement by interpretation _ between classes of models boils down to the standard notion of refinement as inclusion of classes of models whenever the witnessing interpretation is simply an identity .    finally , a note on the expressivity of deductive systems .",
    "actually , deductive systems can play a double role representing both logics , on top of which all the specification machinery can be developed , and classes of models as discussed above .",
    "clearly , any institution induces , for each signature , a deductive system through its satisfaction relation , and conversely , deductive systems may be viewed as special cases of institutions as discussed in @xcite .",
    "for example , a deductive system may represent the class of boolean algebras ; but the latter can also be specified as a theory in a suitable institution .",
    "another example is provided by modal logics which can be regarded as both a deductive system or a theory in the first - order ( fol ) institution through the standard translation .",
    "this provides a uniform view of seemingly different settings , enabling us to discuss how essentially the same conceptual tool , that of _ logical interpretation _ , can be used to interrelate logics and refine classes of models both regarded as deductive systems .",
    "reciprocally , deductive system can be endowed with an algebraic semantics , as discussed in section [ sc : algsem ] .",
    "note that the quest for such a uniform representation of logics and logical theories pops up in other contexts , namely on the design of logical frameworks .",
    "a prime example is provided by the logics - as - theories approach proposed by f. rabe in @xcite , resorting to a type theoretical framework , and further developed in the context of the latin project @xcite .",
    "section [ sc : pre ] introduces _",
    "@xmath0-dimensional deductive systems _ and their semantics following @xcite .",
    "this paves the way to the formulation of refinement by interpretation in a general setting in sections [ sc : gen ] and [ sc : rbi2 ] . before that , however , in section [ sc : rbi1 ] , the approach is instantiated for the case of algebraic specifications over the institution of horn clause logic .",
    "this is a popular framework for algebraic specifications which not only deserves attention on its own , but also provides a simpler setting to build up intuitions .",
    "finally , section [ sc : conc ] concludes and suggests some problems deserving further attention .",
    "_ specifications of complex systems resort to different logics , and even to their combination .",
    "consequently a characterisation of _ refinement by interpretation _ needs to be orthogonal to whatever logic is used in specifications .",
    "this is achieved through the notion of @xmath0-_dimensional deductive systems _ ,",
    "of which the equational case is just an instance for @xmath1 .",
    "this section reviews such systems and their semantics , following @xcite , to provide the background for the sections to follow . _      roughly speaking , a deductive system is a general mathematical tool to reason about formulas in a language generated by a signature .",
    "formally , it is defined as a pair @xmath2 , where @xmath3 is a signature and @xmath4 is a substitution - invariant consequence relation between sets of formulas and individual formulas .",
    "clearly , any standard sentential logical system , defined in the usual way by a set of axioms and a set of inference rules ( for instance , classical and intuitionist propositional calculus , referred to in the sequel as cpc and ipc , respectively ) , is a deductive system .",
    "first order logic can also be formulated as a deductive system @xcite , which shows how broad the concept is .",
    "the formal notion of a deductive system , in this abstract perspective , was originally considered by ukasiewicz and tarski @xcite and intensely studied , from an algebraic point of view , by many logicians .",
    "this gave rise to a new , extremely relevant area of mathematics , that of _ abstract algebraic logic _",
    "@xcite .",
    "although in some literature on algebraic logic this substitution - invariant consequence relation has been called a _ logic _ ( cf .",
    "@xcite ) , we adopt along the paper the designation of _ deductive system _ used by blok and pigozzi @xcite .",
    "this terminology allows us to distinguish this concept from the habitual meaning logic has in computer science , typically understood as an abstract framework to express specifications and often abstracted as an _ institution _",
    "@xcite or a @xmath5-institution @xcite .",
    "as mentioned above , translation maps were introduced in the early 20th century as a means to interrelate deductive systems .",
    "they were first used to understand the relationship between classical and constructive logics .",
    "the well - known gdel translation of classical logic into intuitionistic logic has inspired disperse works on comparing different logics by means of translations .",
    "illustrative examples include the works of kolmogorov @xcite , glivenko @xcite , and gdel @xcite involving classical , intuitionist , and modal logics .    to the best of our knowledge",
    "the first general definition of translation between deductive systems is due to prawitz and malmns @xcite .",
    "more recently , wjcicki @xcite presented a systematic study of translations between logics , focussing on inter - relations between sentential logics .",
    "and the quest goes on ( cf .",
    "at the turn of the century , silva , dottaviano and sette @xcite proposed a general definition of translation between logics as maps preserving consequence relations .",
    "then , feitosa and dottaviano studied intensively the subclass of translations that preserve and reflect consequence relations and coined the name _ conservative translation _",
    "@xcite .",
    "conservative translations which are able to relate a formula to a set of formulas , and are therefore defined as _ multifunctions _ , are called _ interpretations_. those which commute with substitutions were originally used in abstract algebraic logic to define a very important class of deductive systems  referred to as _ algebraisable _",
    "in particular , they abstract the strict relationship between classic propositional logic and the class of boolean algebras . a deductive system is said to be _",
    "algebraisable _ whenever there exists a class @xmath6 of algebras such that the consequence relation induced by @xmath6 is equivalent to the consequence in the deductive system .",
    "such an equivalence was originally defined by means of two mutually inverse interpretations . since then , this link between logic and universal algebra has been successfully explored . in particular , for an algebraisable  @xmath7 , properties of @xmath7 can be related to algebraic properties of its equivalent algebraic semantics .",
    "this kind of results , of which many examples exist , are often called _",
    "bridge theorems_.      in order to broaden the spectrum of application of deductive systems , blok and pigozzi et al .",
    "@xcite introduced consequence relations over @xmath0-tuples of formulas , for @xmath0 a non - zero natural number .",
    "_ @xmath0-deductive systems _ , the result of this generalisation , are the higher dimensional version of the well known sentential logics .",
    "their theory provides a unified treatment for several  such as the ones corresponding to assertional , equational , and inequational logics .",
    "this generalisation also allows to regard interpretations witnessing algebraisability as a special kind of translations between @xmath0-deductive systems .    an _ equation _ , represented in this paper by a formal expression @xmath8 ,",
    "can be regarded as a pair of terms ( or formulas ) @xmath9 .",
    "this , in turn , is an instance of a binary predicate standing for the equality of two terms .",
    "similarly , a _",
    "unary predicate _ asserting the validity of a formula is enough to represent a proposition .",
    "the first observation leads to what will be characterised in the sequel as a @xmath10-dimensional deductive system , of which the equational case is a particular instance .",
    "the second corresponds , roughly speaking , to sentential logics in a quite broad sense ( to include , for example , first - order predicate logic when suitably formalised ) .    in general , adding a @xmath0-ary predicate to a strict universal horn theory without equality , gives rise to a representation of a @xmath0-dimensional , thus providing a suitable context to deal simultaneously with different specification logics .",
    "we go even a step further considering @xmath0-deductive systems over _ many sorted _ languages , because , in general , software systems manipulate several sorts of data .",
    "almost all notions can be formulated in this broader setting as discussed later .",
    "note there are other generalisations that allow the reuse of arguments and tools from abstract algebraic logic in computer science contexts .",
    "hidden logics , introduced by pigozzi and martins in @xcite ( see also @xcite and @xcite ) are a prime example .",
    "they have been efficiently used to develop specification and verification methodologies for object oriented software systems .",
    "examples include the boolean logics , , 1-dimensional multi - sorted logics with bool as the only visible sort , and equality - test operations for some of the hidden sorts in place of equality predicates .",
    "the syntactic support for @xmath0-dimensional deductive systems is that of a @xmath0-term .",
    "let @xmath11 be a signature and @xmath12 a @xmath13-sorted set of variables .",
    "@xmath0-term _ of sort @xmath14 over signature @xmath3 is a sequence of @xmath0 @xmath3-terms , all of the same sort @xmath14 , @xmath15 , abbreviated to @xmath16 whenever references to sorts can be omitted .",
    "@xmath0-variable of sort @xmath14 _ is a sequence of @xmath0 variables all of the same sort @xmath14 .",
    "@xmath17 is the sorted set of all @xmath0-terms over @xmath3 with variables in @xmath18 , i.e. , @xmath19    where @xmath20 is the set of all terms over @xmath3 , of sort @xmath14 , with variables in @xmath18 . whenever each @xmath21 , for each sort @xmath14 in @xmath3 , is non empty",
    ", their union acts as the carrier of the @xmath3-_term algebra _ freely generated from @xmath18 , which we denote by @xmath22 .",
    "a _ substitution on _",
    "@xmath22 is just an endomorphism over @xmath22 .",
    "let us fix some notation and terminology : if @xmath23 is a @xmath0-term over @xmath3 , @xmath24 is a @xmath3-algebra , and @xmath25 , we denote by @xmath26 the value @xmath16 takes in @xmath24 when variables @xmath27 are instantiated respectively by @xmath28 .",
    "more precisely , if @xmath29 then @xmath30 , where @xmath31 is any homomorphism from @xmath22 to @xmath24 such that @xmath32 for all @xmath33 .",
    "let @xmath34 be an arbitrary but fixed family of countably infinite disjoint sets @xmath35 of variables of sort @xmath36 .",
    "following a typical procedure in similar contexts ( , @xcite ) , we assume in the sequel @xmath37 fixed for each set of sorts @xmath13 and large enough to contain all variables needed",
    ". symbols of variables are obviously disjoint of any other symbol in the signature . as usual in sentential logic frameworks",
    ", we will refer to formulas ( @xmath0-formulas ) as synonymous to terms ( @xmath0-terms respectively ) .",
    "accordingly , we will denote @xmath38 by @xmath39 .",
    "moreover , for each nonzero natural number @xmath0 , given a sorted signature @xmath3 , a _",
    "@xmath0-formula _ of sort @xmath14 over @xmath3 is any element of @xmath40 .",
    "the set of all @xmath0-formulas will be denoted by @xmath41 . also note that an @xmath13-sorted subset @xmath42 of @xmath0-formulas is identified with the unsorted set @xmath43 , which allows writing @xmath44 to mean that @xmath45 , for some sort @xmath14 .",
    "a set @xmath46 is said to be _ globally finite _ when @xmath47 is a finite set for each sort @xmath14 of @xmath3 , equal to @xmath48 except for a finite number of them , , @xmath43 is finite . in this",
    "setting , a @xmath0-dimensional deductive system is defined as a substitution - invariant consequence relation on the set of @xmath0-formulas .",
    "the following definition generalises the one due to w. blok and d. pigozzi @xcite for the one - sorted case .",
    "[ df : klogic ] a _ @xmath0-dimensional deductive system _ is a pair @xmath49 , where @xmath3 is a sorted signature and @xmath50 is a relation such that , for all @xmath51 , the following conditions hold :    1 .",
    "@xmath52 for each @xmath53 ; 2 .",
    "if @xmath54 , and @xmath55 for each @xmath53 , then @xmath56 ; 3 .   if @xmath54 , then @xmath57 for every substitution @xmath58 .",
    "a @xmath0-  is _ specifiable _ if @xmath59 is _ compact _ ( or _ finitary _ in the terminology of abstract algebraic logic ) , , if , whenever @xmath54 , there exists a globally finite subset @xmath60 of @xmath42 such that @xmath56 . the relation @xmath59 , abbreviated to @xmath4 whenever @xmath61 is clear from the context , is called _ the consequence relation of _ @xmath61 .",
    "it is easy to see that , for any @xmath51 , @xmath62 and @xmath63 imply @xmath64 .",
    "every consequence relation @xmath4 has a natural extension to a relation between sets of @xmath0-formulas , also denoted by @xmath4 , defined by @xmath65 if @xmath66 for each @xmath67 .",
    "finally , the relation of _ interderivability _ between sorted sets is defined by @xmath68 if @xmath69 and @xmath70 .",
    "we abbreviate @xmath71 and @xmath72 by @xmath73 and @xmath74 , respectively .",
    "let @xmath61 be a ( not necessarily specifiable ) @xmath0- .",
    "thm _ of @xmath61 is a @xmath0-formula @xmath16 such that @xmath75 , , @xmath76 .",
    "the set of all theorems is denoted by @xmath77 .",
    "an _ inference rule _ is a pair @xmath78 where @xmath79 a globally finite set of @xmath0-formulas and @xmath16 a @xmath0-formula , usually represented as    @xmath80    a rule such as ( [ sequent ] ) is said to be a _",
    "derivable rule _ of @xmath61 if @xmath81 .",
    "a set of @xmath0-formulas @xmath82 closed under the consequence relation , , such that @xmath83 implies @xmath84 , is called a _ theory _ of @xmath61 .",
    "the set of all theories is denoted by @xmath85 ; it forms a complete lattice under set - theoretic inclusion , which is algebraic if @xmath61 is specifiable .",
    "given any set of @xmath0-formulas @xmath42 , the set of all consequences of @xmath42 , in symbols @xmath86 , is the smallest theory that contains @xmath42 .",
    "it is easy to see that @xmath87 .",
    "often , a specifiable @xmath0-  is presented in the so - called hilbert style , , by a set of axioms ( @xmath0-formulas ) and inference rules .",
    "we say that a @xmath0-formula @xmath88 is _ directly derivable _ from a set @xmath42 of @xmath0-formulas by a rule such as ( [ sequent ] ) if there is a substitution @xmath89 such that @xmath90 and @xmath91 .    given a set @xmath92 of @xmath0-formulas and a set @xmath93 of inference rules",
    ", we say that @xmath88 is _ derivable _ from @xmath42 by @xmath92 and @xmath93 , in symbols @xmath94 , if there is a _ proof _ , , a finite sequence of @xmath0-formulas , @xmath95 such that @xmath96 , and for each @xmath33 , one of the following conditions holds :    1 .",
    "@xmath97 , 2 .",
    "@xmath98 is a substitution instance of a @xmath0-formula in @xmath92 , 3 .",
    "@xmath98 is directly derivable from @xmath99 by one of the inference rules in @xmath93 .",
    "it is clear that @xmath100 is a specifiable @xmath0- .",
    "moreover , a @xmath0-deductive system @xmath61 is specifiable iff there exist possibly infinite sets @xmath92 and @xmath93 , of axioms and inference rules respectively , such that , for any @xmath0-formulas @xmath88 and any set @xmath42 of @xmath0-formulas , @xmath101 iff @xmath102 ( see @xcite for the one sorted case ) .",
    "this justifies that all the examples of specifiable deductive systems introduced in this paper are presented by a set of axioms and inference rules .",
    "if a deductive system @xmath61 is equal to @xmath100 , for some sets @xmath92 and @xmath93 with @xmath103 , @xmath61 is said to be _",
    "finitely axiomatisable_. a @xmath0-   @xmath104 is an _ extension _ of the @xmath0-   @xmath105 if @xmath106 whenever @xmath107 for all @xmath108 ( , @xmath109 ) .",
    "a @xmath0-   @xmath110 is _ an extension by axioms and rules of _ a specifiable @xmath0-   @xmath61 if it can be axiomatised by adding axioms and inference rules to the axioms and rules of some axiomatisation of @xmath61 .",
    "typical examples of @xmath0-deductive systems are the ones induced by algebraic specifications ( see section [ sc : rbi1 ] ) . given a signature @xmath3 , they are defined over pairs of @xmath3-terms @xmath9 , representing equations @xmath111 , and have therefore dimension @xmath1 . similarly , @xmath3-conditional equations can be taken as pairs @xmath112 where @xmath42 is a globally finite subset of @xmath113 and @xmath114 . as a particular case ,",
    "an equation @xmath8 is a conditional equation without premisses , @xmath115 . in general",
    ", a conditional equation @xmath116 will be written as @xmath117 . in the sequel",
    "we will often use @xmath118 , instead of @xmath113 , for the set of all equations over @xmath37 , and , similarly , @xmath119 , for the set of all @xmath3-conditional equations over @xmath37 .",
    "let @xmath120 and @xmath24 be a @xmath3-algebra .",
    "we write @xmath121 if , for every homomorphism @xmath122 , @xmath123 for @xmath124 , @xmath125 is abbreviated to @xmath126 .",
    "an equation @xmath127 is an _ identity _ of @xmath24 if @xmath128 .",
    "similarly , a conditional equation @xmath129 is a _",
    "quasi_-_identity _ of @xmath24 if @xmath130 , which is simply written as @xmath131 when clear from the context .",
    "these definitions extend , as expected , to classes of algebras .",
    "given a class of @xmath3-algebras @xmath6 , the ( _ semantic _ ) _ equational _ _ consequence _ _ relation _",
    "@xmath132 determined by @xmath6 is defined by @xmath133 in this case @xmath127 is said to be a @xmath6-_consequence _ of @xmath42 .",
    "when clear from the context , we simply write @xmath134 , where @xmath129 , for @xmath135 .",
    "both @xmath136 and @xmath132 extend to sets of equations @xmath137 : @xmath138 iff @xmath139 for each @xmath140 , and respectively for @xmath132 .",
    "for a set @xmath141 of quasi - equations , adopting the notational convention explained above and rather standard in universal algebra , @xmath142 stands for @xmath131 for each @xmath143 ( analogously for a class @xmath6 of @xmath3-algebras ) .",
    "the equational consequence relation @xmath132 satisfies the conditions of definition [ df : klogic ] .",
    "hence it constitutes an example of a 2-   ( perhaps the most important one ! ) often simply denoted by @xmath6 .",
    "a class @xmath6 of @xmath3-algebras is axiomatised by a set @xmath141 of conditional equations if    @xmath144 .",
    "it can be proved that , if @xmath6 is a class of @xmath3-algebras axiomatised by a set @xmath141 of conditional equations , then the relation @xmath145 is specifiable ( see @xcite for the one - sorted case ) . in this case",
    "it can be defined in the hilbert style , taking the set of @xmath3-equations in @xmath141 , together with reflexivity , as the set of axioms , and the set of @xmath3-conditional equations in @xmath141 , along with symmetry , transitivity and congruence rules , as inference rules .",
    "any specifiable equational deductive system over @xmath3 is the natural extension ( by axioms and rules ) of the ( 2-dimensional ) free deductive system over @xmath3 denoted by @xmath146 and defined in figure [ fig:3 ] .",
    "note that the consequence relation associated to @xmath147 coincides with @xmath148 , where @xmath149 is the class of all @xmath3-algebras .",
    "recall the discussion of the double role played by deductive systems in subsection [ sc : scope ] . actually , it is well known that any deductive system can be seen as a @xmath5-institution @xcite , and taking care of some extra technicalities , as an institution . however some special finitary ones are , in a more natural way , viewed as theories of institutions , _",
    "i.e. _ , as sets of sentences equipped with extra features  the deductive apparatus they induce .",
    "for instance , given a quasivariety of algebras , we can define a ( 2-dimensional ) deductive system over the set of equations by using the identities and quasidentities that define the quasivariety , together with the axioms of reflexivity and the inference rules of symmetry , transitivity and congruence rules .",
    "this deductive system can naturally be seen as a theory of the institution of horn clause logic .",
    "as discussed in @xcite , a semantics for arbitrary @xmath0-   needs to go beyond the usual algebraic structures , resorting to algebras endowed with a set of @xmath0-tuples .",
    "formally ,    [ df : kstruct ] a _ @xmath0-structure _ over a signature @xmath150 is a pair @xmath151 where @xmath24 is a @xmath3-algebra and @xmath152 is a sorted set @xmath153 such that @xmath154    in this definition , the sorted set @xmath152 of designated elements of @xmath24 , can be regarded as a set of truth values on @xmath24 : a formula holds if its interpretation is one of these elements .",
    "this is why @xmath152 is called a _",
    "filter _ : for a deductive system representing the constructive propositional calculus on a boolean algebra the notion boils down to the familiar , boolean filter .",
    "let @xmath155 be a @xmath0-structure .",
    "a @xmath0-formula @xmath156 is said to be a _ semantic consequence _ in @xmath157 of a set of @xmath0-formulas @xmath42 , in symbols @xmath158 , if , for every assignment @xmath159 , @xmath160 whenever @xmath161 for every @xmath162 , where @xmath163 is the component @xmath14 of the sorted set @xmath152 .",
    "notice that the same notation is used for the assignment and its natural extension to formulas .",
    "a @xmath0-formula @xmath164 is _ valid _ in @xmath157 , and conversely @xmath157 is a _ model _ of @xmath16 , if @xmath165 .",
    "a rule such as ( [ sequent ] ) is a _",
    "validity _ , or a _ valid rule _ , of @xmath157 , and conversely @xmath157 is a _ model _ of the rule , if @xmath166 .",
    "a formula @xmath16 is a _ semantic consequence _ of a set of @xmath0-formulas @xmath42 for an arbitrary class @xmath167 of @xmath0-structures over @xmath3 , in symbols @xmath168 , if @xmath169 for each @xmath170 .",
    "it can be proved that @xmath171 is always a @xmath0- , even if not always specifiable .",
    "similarly , a @xmath0-formula or a rule is a _ validity of _ @xmath167 if it is a validity of each member of @xmath167 .",
    "a @xmath0-structure @xmath157 is a _ model _ of a @xmath0-   @xmath61 if @xmath54 always implies @xmath169 , if every consequence of @xmath61 is a semantic consequence of @xmath157 .",
    "the special models whose underlying algebra is the formula algebra , _",
    "i.e. _ , models of the form @xmath172 , for @xmath82 a theory , are called _ lindenbaum - tarski models_. the class of all models of @xmath61 is denoted by @xmath173 .",
    "if @xmath61 is a specifiable @xmath0- , then @xmath157 is a model of @xmath61 iff every axiom and rule of inference is a validity of @xmath157 .    in the equational case",
    "the semantics based on @xmath10-structures boils down to the traditional algebraic semantics .",
    "more precisely , given a quasi - equational class @xmath6 of @xmath3-algebras ( _ i.e. _ axiomatised by a set of quasi - equations over @xmath3 ) , the algebra of any model of the 2-deductive system induced by @xmath6 with the identity as its filter belongs to @xmath6 .    a class of @xmath0-structures @xmath167 is a _ @xmath0-structure semantics _ of @xmath61 if @xmath174 .",
    "the class of all models of @xmath61 forms a @xmath0-structure semantics of @xmath61 .",
    "this fact is expressed in a specific completeness theorem @xcite , stating that , for any @xmath0-   @xmath61 , @xmath54 iff @xmath175 , for every @xmath176 .",
    "_ this section introduces , exemplifies and discusses the concept of _ refinement by interpretation _  the core contribution of the paper  framed in the specific , but popular , setting of algebraic specification over the institution of horn clause logic . _",
    "this section introduces refinement by logical interpretation for the specific case of algebraic specifications . as usual",
    "( see , @xcite ) , an _ algebraic specification _",
    "@xmath177 is considered here as a structured specification over the institution of horn clause logic ( * hcl * ) @xcite .",
    "each @xmath177 denotes a pair @xmath178 where @xmath3 is a signature and @xmath179 is a class of @xmath3-algebras .",
    "the class @xmath179 of @xmath3-algebras is called the _ model class of _ @xmath177 , and each @xmath3-algebra in @xmath179 a _ model of _ @xmath177 .",
    "if @xmath180 is a conditional equation @xmath181 ( respectively , an equation @xmath182 ) , we write @xmath183 for @xmath184 ( respectively , @xmath185 ) . both cases",
    "extend , as expected , to sets of conditional equations ( respectively , equations ) .    when an algebraic specification @xmath177 is _ flat _ , or _",
    "basic _ , its model class @xmath179 of algebras is axiomatised by a set @xmath141 of conditional equations . in this case",
    "@xmath177 is the pair @xmath186 .",
    "if the definition is restricted to formulas over a specific set of @xmath3-variables @xmath187 , @xmath177 is said @xmath18-_flat_. when @xmath141 is a set of equations the flat specification @xmath188 is called a ( flat ) _ equational specification_. recall that a class @xmath6 of @xmath3-algebras axiomatisable by a set of equations is called a _",
    "variety_. a variety can also be characterised as a nonempty class @xmath6 of @xmath3-algebras closed under homomorphic images , subalgebras and direct products ( cf .",
    "@xcite , @xcite ) .",
    "this famous result , due to birkhoff , turns out to be very useful to show that a given algebraic specification is not an equational specification . in the sequel , for simplicity , when clear from the context",
    ", we refer to algebraic specifications simply as specifications .    in this context _",
    "stepwise refinement _",
    "@xcite of specifications refers to the process through which a complex design is produced by incrementally adding details and reducing under - specification .",
    "this proceeds step - by - step until the class of models becomes restricted to such an extent that a program can be easily manufactured .",
    "formally , given a specification @xmath177 , the implementation process builds a correct realisation from a concrete enough class of @xmath3-models @xmath6 such that @xmath6 is a subset of the class of denotations of @xmath177 . during this process , the specification is enriched according to specific design decisions , iteratively approaching the intended meaning for the final program .",
    "starting from an initial abstract specification @xmath189 , refinement builds a chain of specifications @xmath190 where , for @xmath191 , @xmath192 represents reverse inclusion of the respective classes of models .",
    "transitivity of inclusion assures that @xmath193 . from @xmath194",
    "onwards each element in this chain is the result of a _ refinement step_.    in order to deal with more complex requirements along the implementation process , for example to enable the possibility of renaming , adding or grouping together different signature components , refinement steps @xmath195 are traditionally taken up to _ signature morphisms_. recall that a _ signature morphism _ from @xmath196 to @xmath197 is a pair @xmath198 , where @xmath199 and @xmath200 is a @xmath201-family of functions respecting the sorts of operation names in @xmath202 , _",
    "i.e. _ , @xmath203 ( where for @xmath204    given a signature morphism @xmath205 and a @xmath206-algebra @xmath24 , let @xmath207 denote the _ reduct _ of @xmath24 along @xmath58 , , for any @xmath208 , @xmath209 , and for all @xmath210 , @xmath211 .",
    "the notation @xmath212 and @xmath213 refer , respectively , to the carrier of sort @xmath14 and the interpretation of operation symbol @xmath214 in the algebra @xmath24 . in this context",
    "we say that @xmath215 is a refinement of @xmath177 witnessed by @xmath58 , or simply a @xmath58-refinement , when @xmath216 , where @xmath217 .",
    "having fixed the notation and the basic concepts we may now jump to the kernel of this section : representing classes of specification models as 2-deductive systems and introduce interpretations as possible witnesses to the refinement steps .      as clarified in the introduction ( subsection [ sc",
    ": scope ] ) , our approach is based on the representation of specifications model classes as deductive systems .",
    "our focus is essentially semantic , _",
    "i.e. _ , on what specifications denote , and , therefore , the whole theory of refinement by interpretation discussed here is independent from any specification structuring mechanism",
    ".    actually , any specification @xmath177 denotes a class of algebras  its _ model class _ , @xmath218 .",
    "this in turn induces a 2-  according to the procedure sketched in subsection [ sc : eqqq ] .",
    "its consequence relation is @xmath219 .",
    "the possibility of this consequence relation being non finitary , for example if arising from non flat specifications , is also covered in this approach .    as we will see",
    ", it turns out that @xmath0-deductive systems are an efficient universal tool to develop , in this way , a theory about all classes of models over a fixed signature .",
    "a most important particular case is that of _ flat _ specifications : each of them can be identified with the deductive system it induces .",
    "this observation will be assumed throughout the text and in the examples .",
    "moreover , using interpretations between the induced deductive systems , one may go from one model class to another .    in a sense to become clearer below",
    ", we say that a specification @xmath215 _ refines _ another specification @xmath177 _ by interpretation _",
    "@xmath220 , if @xmath220 is an interpretation of @xmath177 such that @xmath221 for any formula @xmath180 . before jumping to the technical definition ,",
    "consider the following example which , although elementary , may help to build up some intuitions for this notion of refinement .",
    "[ firstex ]    the introduction of a two - element boolean algebra together with equality tests for each sort allows the software engineer to formulate arbitrary universal first - order axioms as equations in the boolean sort .",
    "the importance of this construction comes from the fact that , although many of the most natural specification conditions take the form of universal first - order sentences , only equational and conditional - equational axioms are guaranteed to possess an initial model .",
    "this motivation , as well as equality - test algebras in general , are extensively discussed in @xcite .",
    "consider , thus , two flat specifications @xmath222 and @xmath223 .",
    "the former has a signature @xmath3 which declares a sort @xmath14 and a function @xmath224 .",
    "@xmath222 has an empty set of axioms ; thus , the corresponding class of models consists of all algebras over its signature . on the other hand ,",
    "specification @xmath223 is depicted in figure [ fig : unica ] .",
    "it is not difficult to see , by induction on the structure of proofs , that the translation    [ cols=\"^,^,^,^ \" , ]     we may now incorporate in the approach proposed in this paper the important tool given in lemma [ th : nsc ] :    let @xmath225 be a self - translation between two @xmath226-deductive systems @xmath61 and @xmath110 over the signature @xmath3 .",
    "then , if @xmath110 has the conjunction property , @xmath220 is an interpretation iff its associated function is a conservative translation .",
    "first we prove that @xmath227 : since for any @xmath228 there is a @xmath229 such that @xmath230 , we have , by the conjunction property of @xmath110 , that @xmath231 and , by @xmath232 of definition [ df : klogic ] , that @xmath233 .",
    "analogously , since for each @xmath229 there is a @xmath234 such @xmath235 , we have , by @xmath232 of definition [ df : klogic ] , that @xmath236 .",
    "hence , for any interpretation @xmath220 and for all @xmath237 ,    @xmath238 ,    which implies that @xmath239 is a conservative translation . in a similar way ,",
    "if @xmath239 is a conservative translation , @xmath220 is an interpretation .",
    "the connection to conservative translations turns out to be very useful in practice . the following theorem , which builds on results in @xcite , provides a sufficient condition for a translation to be an interpretation .",
    "[ th : nsc ] let @xmath220 be a @xmath240-translation from @xmath3 to @xmath206 , @xmath61 a @xmath0-  over @xmath3 and @xmath110 a @xmath241-  over @xmath206 .",
    "suppose that @xmath220 is functional and injective .",
    "if @xmath242 , for every set of formulas @xmath42 , then @xmath220 interprets @xmath61 in @xmath110 .    from the inclusion @xmath243 we have that @xmath244 .",
    "suppose now that @xmath245 . hence there is a @xmath246 such that @xmath247 . since @xmath220 is injective @xmath248 , and so , @xmath249 , _",
    "i.e. _ , @xmath54 .",
    "the approach to refinement proposed in this paper , in particular when specialised to 2-dimension deductive systems , should also be related to the extensive work of maibaum , sadler and veloso in the 70 s and the 80 s , as documented , for example , in @xcite .",
    "the authors resort to interpretations between theories and conservative extensions to define a syntactic notion of refinement according to which a specification @xmath215 refines a specification @xmath177 if there is an interpretation of @xmath215 into a conservative extension of @xmath177 .",
    "it is shown that these refinements can be vertically composed , therefore entailing stepwise development .",
    "this notion is , however , somehow restrictive since it requires all maps to be conservative , whereas in program development it is usually enough to guarantee that requirements are preserved by the underlying translation .",
    "moreover , in their approach , the interpretation edge of a refinement diagram needs to satisfy extra properties .    as related work one should also mention @xcite where interpretations between theories are studied in the abstract framework of @xmath5-institutions",
    "the first reference is a generalisation of the work of maibaum and his collaborators , whereas the second one generalises the way algebraic semantics on sentential logics is dealt with in abstract algebraic logic to the abstract setting of @xmath5-institutions .",
    "similar developments could arise by considering institutions and their ( co-)morphisms @xcite .",
    "the work of meseguer @xcite on _ general logics _ , in which a theory of interpretations between logical systems is developed , should also be mentioned .",
    "our own approach to refinement by interpretation can be placed between these general works and the original contribution of maibaum .",
    "actually , on the one hand , we deal with general @xmath0-deductive systems therefore subsuming all frameworks above which are based on equational or first order logic ( , on specific instances of @xmath0-deductive systems ) . on the other hand , however , our results are formulated in terms of a concrete and intuitive notion of a deductive system ; their scaling to an abstract , institutional level is still to be done .",
    "the paper introduced a new notion of refinement and started the development of a corresponding theory of _ refinement by interpretation_. the results obtained and their applications seem promising , in the sense that a number of useful transformations of ( classes of models of ) specifications are captured as refinement steps . in order to clarify the scope of our results we should point out that the development in section 3 can be straightforwardly generalised as to apply to any horn fragment of a structural logic @xmath250 ( _ i.e. _ , a logic whose axioms have the form @xmath251 , where @xmath252 is a subset of the atomic formulas of the logic , with @xmath253 possibly empty ) .",
    "all one has to do is to represent such a fragment by the natural equivalent deductive system taking the atomic formulas of @xmath250 as its set of formulas and a presentation given by the axiomatisation of @xmath250 .",
    "the generalisation made along sections [ sc : gen ] and [ sc : rbi2 ] turns it relevant to the specification meta - level , , whenever an implementation step requires a change in the underlying logic .",
    "this often arises in formal software development with the need for accommodating new requirements ( as in example [ ex : ordbams ] ) or when a particular theorem prover , embodying a specific logic , is to be used for design validation ( as in example [ ex : tool ] ) .",
    "our most recent work @xcite is another generalisation effort aiming at reframing this notion of refinement in a categorical setting based on a characterisation of abstract logics as coalgebras for the closure system contravariant functor @xcite upon the category @xmath254 of sets and functions .    to conclude we would like to remark again the semantic perspective from which this work was developed , as extensively discussed in the introduction",
    "this entails the need for further research on how refinement by interpretation , which is entirely based on properties of arbitrary deductive systems , can be smoothly combined with concrete specification structuring operations .",
    "preliminary work on this topic is reported in @xcite in which the emphasis is shifted to specifications .",
    "current work in this direction includes the development of a refinement calculus of structured specifications over a @xmath5-institution .    as a general remark we would like to stress again that the approach developed in this paper can be applied to any notion of algebraic specification based on any fixed set of specification structuring combinators , further justifying the relevance of the semantic perspective adopted in this paper .",
    "a practical limitation of this approach of reducing the specifications to their class of models is that often such classes have infinitely many models .",
    "however in some cases subclasses possessing the same theory can be considered instead .",
    "for instance , if the class is a finitely generated quasivariety @xmath6 @xcite , and consequently the associated 2-deductive system is finitary with a presentation given by the axiomatisation of the quasivariety , we can replace @xmath6 by the set of its generators which induces the same deductive system .",
    "an example is the class of boolean algebras which are generated ( actually , as a variety ) by the two - element boolean algebra .    from an application point of view",
    ", this semantic approach seems to have its own potentialities which we would like to recall .",
    "actually , in a number of cases it is relevant , and even mandatory , to start the implementation procedure from a set of models that does not come from a structured specification",
    ". this can be the case when reusing designs ( a recurrent strategy in engineering ) or even to express meta - requirements that can not be easily accommodated within the classic refinement procedure .",
    "focussing on _ classes of models _ , on the other hand , makes possible to deal with requirements that can not be properly formalised in a specification .",
    "note this does not entail any loss of expressivity .",
    "the approach proposed in this paper can be tuned to specification refinement in a strict sense : for each specification , one may recursively compute its denotation ( a signature and a class of models ) and work directly with it .    in general",
    ", we believe that this approach has a real application potential , namely to deal with specifications spanning through different specification logics . particularly deserving to be considered , but still requiring further investigation , are observational logic @xcite , hidden logic @xcite and behavioural logic @xcite . in all of these cases",
    "the satisfaction of requirements is discussed up to some particular satisfaction relation and their verification is checked with respect to relations obtained by replacing strict equality by its underlying notion of satisfaction . in this context , a semantics based on @xmath0-structures paves the way to the unification of all of these approaches . actually ,",
    "in all of them , models consist of algebras whose @xmath0-structures are of the form @xmath255 , where @xmath256 captures the particular satisfaction relation in each formalism . in particular , the strict models of a ( classical ) algebraic specification @xmath177 consist of algebras @xmath24 whose @xmath0-data structure @xmath257 is a model of @xmath258 .",
    "naturally , most of the models of software specifications are not admissible choices as implementations .",
    "therefore , the choice of adequate filters along the implementation process becomes a crucial , although not trivial task .",
    "this should be driven by the system nature ( for example , adopting observational equality to deal with objects with encapsulated data ) .",
    "a similar concern is , moreover , shared by other general approaches to formal development , as , for example , @xcite in the context of behavioral logic .",
    "a lot of other questions remain to be answered .",
    "one such topic , as mentioned above , concerns _ horizontal composition _ of refinements by interpretation ; _ vertical _ composition raising no special problems as shown in theorems [ th : ver1 ] and [ th : ver2 ] . to illustrate the kind of results we are investigating suppose , for example , that @xmath220 interprets @xmath177 in @xmath215 .",
    "the challenge would be to prove that @xmath220 also interprets an enrichment of @xmath177 by axioms in an appropriate sub - specification of @xmath215 .",
    "a closely related issue is the extension of this approach to the level of ( structured ) specifications .",
    "we believe that this can be captured in a somehow standard way , which will be most relevant in studying the interplay between horizontal ( _ i.e. _ , architectural ) and vertical ( _ i.e. _ , implementation driven ) levels of specification composition .",
    "for example , the _ union _ of two specifications will correspond to the union of the corresponding consequence relations .",
    "actually , a structured specification also defines a class of models and therefore induces a deductive system .",
    "another topic to explore is the equivalence of algebraic specifications up to logical interpretation . as a starting point",
    ", it would be worth to explore the relation @xmath259 defined as follows : @xmath260 if there are interpretations @xmath220 and @xmath261 such that @xmath262 and @xmath263 .",
    "it is not difficult to see that @xmath183 implies @xmath264 and @xmath265 implies @xmath266 .",
    "more challenging seems to be a stronger equivalence , studied in the context of equivalence between deductive systems @xcite , which requires interpretations to be _ mutually _ inverse .",
    "last but not least , framing refinement by interpretation in the context of recent works on heterogeneous specification , raises interesting questions and opens the opportunity for computer - based support . actually , classical translations between logics ( , modal into first - order or the latter into equational logic ) are at the basis of hets @xcite , the heterogeneous specification framework . to go further in this direction",
    "entails the need to regard interpretations from an institutional point of view @xcite , as some sort of comorphisms , and develop on top of it a calculus of refinements by interpretation .",
    "the authors express their gratitude to the anonymous referees who raised a number of pertinent questions entailing a more precise characterisation of the paper s contributions and a clarification of their scope .",
    "this work was funded by erdf - european regional development fund through the compete programme ( operational programme for competitiveness ) and by national funds through the fct ( portuguese foundation for science and technology ) within project ` fcomp-01 - 0124-feder-028923 ` ( nasoni ) and the project ` pest - c / mat / ui4106/2011 ` with compete number ` fcomp-01 - 0124-feder-022690 ` ( cidma - ua ) .",
    "the first author also acknowledges the financial assistance by the projects getfun , reference ` fp7-people-2012-irses ` , and nociones de completud , reference ` ffi2009 - 09345 ` ( micinn - spain ) .",
    "a.  madeira was supported by the fct within the project ` norte-01 - 0124-feder-000060 ` .",
    "r.  m. burstall and j.  a. goguen .",
    "the semantics of clear , a specification language . in d.",
    "bjrner , editor , _ abstract software specifications ( 1979 copenhagen winter school , january 22 - february 2 , 1979 ) _ , volume  86 of _ lecture notes in computer science _ ,",
    "pages 292332 .",
    "springer , 1980 .",
    "m.  bidoit and r.  hennicker .",
    "an algebraic semantics for contract - based software components . in j.",
    "meseguer and g.  rosu , editors , _ algebraic methodology and software technology ( amast 2008 - urbana , il , usa , july 28 - 31 , 2008 _ , volume 5140 of _ lecture notes in computer science _ , pages 216231 .",
    "springer , 2008 .",
    "m.  codescu , f.  horozal , m.  kohlhase , t.  mossakowski , and f.   rabe .",
    "project abstract : logic atlas and integrator ( latin ) . in james",
    "davenport , william farmer , josef urban , and florian rabe , editors , _ intelligent computer mathematics _ ,",
    "volume 6824 of _ lecture notes in computer science _ , pages 289291 .",
    "springer berlin / heidelberg , 2011 .",
    "b.  dolle and w.  dosch .",
    "transforming functional signatures of algebraic specifications into object - oriented class signatures . in _",
    "apsec 05 : proceedings of the 12th asia - pacific software engineering conference _ , pages 323332 .",
    "ieee computer society , 2005 .",
    "j.  fiadeiro and t.  s. maibaum . generalising interpretations between theories in the context of ( @xmath5- ) institutions . in _ proceedings of the first imperial college department of computing workshop on theory and formal methods _ , pages 126147 , london , uk , 1993 .",
    "springer - verlag .",
    "j.  fiadeiro and a.  sernadas . structuring theories on consequence . in d.",
    "sanella and a.  tarlecki , editors , _ recent trends in data type specification .",
    "specification of abstract data types ( papers from the fifth workshop on specification of abstract datac types , gullane , 1987 ) _ , volume 332 of _ lecture notes in computer science_. springer - verlag , berlin , 1988 .",
    "k.  gdel .",
    "an interpretation of the intuitionistic proposicional calculus ( 1933 ) . in s.",
    "feferman  et al , editor , _ collected works of kurt gdel ( vol .",
    "i ) _ , pages 301303 .",
    "oxford : oxford university press , 1986 .",
    "j.  goguen , j.  thatcher , and e.  wagner . an initial algebra approach to the specification , correctness and implementation of abstract data types . in r.",
    "yeh , editor , _ current trends in programming methodology _",
    ", pages 80149 .",
    "prentice - hall international , 1978 .",
    "j.  goguen , t.  winkler , j.  meseguer , k.  futatsugi , and j .-",
    "jouannaud . introducing obj . in j.",
    "goguen and g.  malcolm , editors , _ software engineering with obj : algebraic specification in practice_. cambridge university press , 1996 .                            j.  meseguer .",
    "general logics . in h.",
    "d. ebbinghaus , j.  fernandez - prida , m.  garrido , d.  lascar , and m.  rodriguez - artalejo , editors , _ logic colloqium87 _ , studies in logic and the foundations of mathematics ( volume 129 ) , pages 275330 .",
    "elsevier , 1989 .",
    "m.  a. martins , a.  madeira , and l.  s. barbosa .",
    "refinement via interpretation . in d.",
    "v. hung and p.  krishnan , editors , _ seventh ieee international conference on software engineering and formal methods ( sefm 2009 , hanoi , vietnam , 23 - 27",
    "november 2009 ) _ , pages 250259 .",
    "ieee computer society , 2009 .",
    "t.  mossakowski , c.  maeder , and k.  lttich .",
    "the heterogeneous tool set , hets . in o.",
    "grumberg and m.  huth , editors , _ tools and algorithms for the construction and analysis of systems ( tacas 2007 - braga , portugal , march 24 - april 1 , 2007 ) _ , volume 4424 of _ lecture notes in computer science _ ,",
    "pages 519522 .",
    "springer , 2007 .",
    "t.  s. maibaum , m.  r. sadler , and p.  a. veloso .",
    "logical specification and implementation . in j.",
    "mathai and r.  k. shyamasundar , editors , _ foundations of software technology and theoretical computer science ( fsttcs , bangalore , india , dec.13 - 15 , 1984 ) _ , volume 4424 of _ lecture notes in computer science _ , pages 1330 , london , uk , 1984 .",
    "springer .",
    "t.  s.  e. maibaum , paulo a.  s. veloso , and m.  r. sadler . a theory of abstract data types for program development : bridging the gap ? in hartmut ehrig , christiane floyd , maurice nivat , and",
    "james  w. thatcher , editors , _ mathematical foundations of software development ( tapsoft , berlin , germany , march 25 - 29 , 1985 ) _ , volume 186 of _ lecture notes in computer science _ , pages 214230 .",
    "springer , 1985 .",
    "c.  j. rodrigues , m.  a. martins , a.  madeira , and l.  s. barbosa .",
    "refinement by interpretation in @xmath5-institutions . in john derrick ,",
    "eerke  a. boiten , and steve reeves , editors , _",
    "proceedings 15th international refinement workshop _ ,",
    "volume  55 of _ eptcs _ , pages 5364 , 2011 .",
    "d.  sannella .",
    "the common framework initiative for algebraic specification and development of software : recent progress . in m.",
    "cerioli and g.  reggio , editors , _ recent trends in algebraic development techniques ( revised selected papers of wadt 2001,genova , italy , april 1 - 3 , 2001 ) _ , volume 2267 of _ lecture notes in computer science _ , pages 328344 .",
    "springer , 2001 .    j.  da silva , i.  m. dottaviano , and a.  m. sette . in _ models , algebras , and",
    "proofs : selected papers of the x latin american symposium on mathematical logic , ( bogot , 1995 ) _ , pages 435448 .",
    "notes pure appl . math .",
    "( 203 ) , 1999 .",
    "d.  sannella and a.  tarlecki .",
    "horizontal composability revisited . in k.  futatsugi , j .-",
    "jouannaud , and j.  meseguer , editors , _ algebra , meaning , and computation , essays dedicated to joseph a. goguen on the occasion of his 65th birthday _ , volume 4060 of _ lecture notes in computer science _ , pages 296316 .",
    "springer , 2006 .",
    "a.  tarlecki . moving between logical systems . in magne",
    "haveraaen , olaf owe , and ole - johan dahl , editors , _ recent trends in data type specification ( selected papers of 11th workshop on specification of abstract data types joint with the 8th compass workshop , oslo , norway , september 19 - 23 , 1995 ) _ , volume 1130 of _ lecture notes in computer science _ , pages 478502 .",
    "springer , 1996 .",
    "b.  yu , l.  kong , y.  zhang , and h.  zhu . testing java components based on algebraic specifications . in _ first international conference on software testing , verification , and validation , icst 2008 _ , pages 190199 .",
    "ieee computer society , 2008 ."
  ],
  "abstract_text": [
    "<S> stepwise refinement of algebraic specifications is a well known formal methodology for program development . however , traditional notions of refinement based on signature morphisms are often too rigid to capture a number of relevant transformations in the context of software design , reuse , and adaptation . </S>",
    "<S> this paper proposes a new approach to refinement in which signature morphisms are replaced by _ </S>",
    "<S> logical interpretations _ as a means to witness refinements . </S>",
    "<S> the approach is first presented in the context of equational logic , and later generalised to deductive systems of arbitrary dimension . </S>",
    "<S> this allows , for example , refining sentential into equational specifications and the latter into modal ones . </S>"
  ]
}
{
  "article_text": [
    "we consider a transmitter broadcasting message through a noiseless broadcast channel to multiple receivers , each knowing some message packets a priori , which is known as _ side information_. the _ side information _ of receivers can be utilized in order to reduce the number of coded symbols required to be broadcast by the transmitter to all receivers .",
    "this is known as the index coding problem , and was introduced by birk and kol in 1998 @xcite . to date , the index coding problem is an open problem .",
    "the main aim of the index coding problem is to find an index code that has the minimum number of coded symbols .",
    "when each message is requested by one receiver ( i.e. , unicast ) , the index coding problems can be modelled by digraphs ( i.e. , directed graphs ) .",
    "this paper considers the unicast message setting .",
    "linear index codes ( scalar and vector linear ) @xcite have simpler encoding and decoding process than non - linear index codes . in the literature ,",
    "optimal scalar linear index codes can be characterized by a graph function called the _",
    "function @xcite .",
    "however , finding _ minrank _ for a general digraph is np - hard @xcite , and does not provide much intuition on the interaction between the side information configuration and the index codes .",
    "thus in this paper , we use the graph - theoretic approach to exploit specific graph structures .",
    "there are various graph - theoretic approaches such as clique cover @xcite , partial clique cover @xcite , cycle cover @xcite , and graph coloring ( including fractional ) @xcite , which exploit the graph structure during encoding of the messages to _ save _ transmissions ( i.e. , compared to sending uncoded message packets ) . in our earlier work @xcite , we presented a new coding scheme exploiting interlinked cycles in digraphs .",
    "this new scheme , called interlinked cycle cover ( @xmath2 ) , generalized the clique cover and the cycle cover schemes .",
    "we proved that for a class of digraphs , called @xmath2 digraphs , the @xmath2 scheme is optimal .",
    "furthermore , we showed that for some examples , it can outperform some existing schemes . in an interlinked cycle structure with @xmath3 number of vertices",
    ", there exists a set of @xmath4 vertices , where each vertex has a directed path to every other vertex of the set .",
    "each of these @xmath4 vertices must have an out - degree equal to @xmath5 , all remaining vertices ( i.e. , @xmath6 vertices ) must have an out - degree equal to one , and both can have an in - degree greater than or equal to one .",
    "these conditions on out - degree of vertices make the definition of interlinked cycles rather limiting , and it restricts the size of the class of @xmath7 digraphs ( for which the @xmath8 scheme is optimal ) .",
    "moreover , we were unable to show that the @xmath2 scheme can outperform the composite - coding scheme ( based on random coding approach which requires infinitely long message packets ) proposed by arbabjolfai et al .",
    "@xcite .",
    "we first redefine ( and extend ) the previous definition of the interlinked cycle structure , so that both the in - degree and the out - degree of any vertex in it are allowed to be greater than or equal to one .",
    "the resultant interlinked cycle structure is called a generalized interlinked cycle ( @xmath0 ) .",
    "we then propose a simple encoding scheme based on the @xmath0 , called the generalized interlinked cycle cover ( @xmath9 ) .",
    "the @xmath9 scheme generalizes the @xmath2 scheme , the clique cover scheme , and the cycle cover scheme .",
    "furthermore , we characterize a class of digraphs where the @xmath9 is optimal ( over all codes , including non - linear index codes ) , and show that the @xmath9 scheme can outperform existing techniques ( including partial clique cover , local chromatic number , composite - coding , and interlinked cycle cover ) .",
    "consider a transmitter that wants to transmit @xmath3 message packets @xmath10 to @xmath3 receivers @xmath11 in a unicast message setting such that each receiver @xmath12 is requesting a message packet @xmath13 .",
    "moreover , each receiver @xmath12 has side information @xmath14 .",
    "this problem can be described by a digraph @xmath15 , where @xmath16 is a set of vertices representing the @xmath17 receivers .",
    "an arc @xmath18 exists from vertex @xmath12 to vertex @xmath19 if and only if receiver @xmath12 has packet @xmath20 ( requested by receiver @xmath21 ) as its side information .",
    "the side information of vertex @xmath12 is @xmath22 , where @xmath23 is the out - neighborhood of @xmath12 in @xmath24 . for simplicity",
    ", we use the term  messages \" to refer to message packets in the remainder of this paper .",
    "[ valid index code ] suppose @xmath25 for all @xmath12 , for some integer @xmath26 , i.e. , each message consists of @xmath27 bits .",
    "given an index coding problem described by @xmath28 , a valid index code ( @xmath29,@xmath30 ) is defined as follows :    1 .",
    "an encoding function for the source , @xmath31 , which maps @xmath32 to a @xmath33-bit index for some integer @xmath33 .",
    "2 .   a decoding function @xmath34 for every receiver @xmath35 , @xmath36 , that maps the received index @xmath37 and its side information @xmath38 to the requested message @xmath13 .",
    "the broadcast rate of the ( @xmath39 ) index code is the number of transmitted bits per received message bits at every user , or equivalently the number of coded packets ( of @xmath27 bits ) , and this is denoted by @xmath40 .",
    "thus the optimal broadcast rate for a given index coding problem @xmath28 with @xmath41-bit message is @xmath42 , and the optimal broadcast rate over all @xmath41 is defined as @xmath43 .",
    "[ path and cycle ] a _ path _ contains a sequence of unique ( except possibly the first and last ) vertices , say @xmath44 , and an arc @xmath45 for each consecutive pair of vertices @xmath46 for all @xmath47 .",
    "we represent a path in a digraph @xmath24 as @xmath48 . here",
    ", @xmath49 is the _ first vertex _ , @xmath50 is the _ last vertex _ , and all remaining vertices ( @xmath51 ) are _ internal vertices _ of the path . a path with the same first and last vertex is a _ cycle_.",
    "consider a graph structure with @xmath3 vertices having the following properties :    1 .   a set of @xmath4 vertices , denoted by @xmath53 , such that for any ordered pair of its vertices ( @xmath54 ) , @xmath55 , there is a path from @xmath12 to @xmath21 which does not include any other vertex of @xmath53 .",
    "we call @xmath53 the _ inner vertex set _ , and without loss of generality , we represent it as @xmath56",
    ". the vertices of @xmath57 are refereed to as _",
    "inner vertices_. 2 .",
    "due to the existence of paths in between any @xmath58 , for each vertex @xmath59 , we can always find a _ directed rooted tree _ in @xmath24 , denoted by @xmath60 where vertex @xmath12 is the root vertex , and all other vertices @xmath61 are the leaves ( see fig .",
    "[ fig1 ] ) .",
    "the trees may be non - unique .",
    "denote the union of all selected @xmath4 trees as @xmath62 ( see fig .",
    "[ fig2 ] ) .",
    "if @xmath63 satisfies two conditions ( to be defined shortly ) , we call it a @xmath4-@xmath0 structure ( denoted as a @xmath4-@xmath0 sub - digraph : @xmath64 , where @xmath65 and @xmath66 ) .",
    "now we define a type of cycle and a type of path .",
    "[ i - cycle ] a cycle that includes only one inner vertex @xmath67 is an _",
    "i - cycle_.    [ p - path ] a path in which only the first and the last vertices are from @xmath53 , and they are distinct , is a _",
    "p - path_.    the conditions for a @xmath68 to be qualified as a @xmath52 are as follows :    1 .",
    "_ condition 1 : _ there is no _ i - cycle_. 2 .",
    "_ condition 2 : _ for all ordered pairs of inner vertices ( @xmath54 ) , @xmath55 , there is only one _ p - path _ from @xmath12 to @xmath21 .",
    "these two conditions are necessary for our code construction described in the following section .",
    "-5pt      -2pt we propose the following coded symbols ( which form a scalar linear index code ) for a @xmath4-@xmath0 sub - digraph @xmath69 :    1 .   a coded symbol obtained by the bitwise xor ( denoted by @xmath70 ) of messages ( each of @xmath41-bits ) requested by all vertices of the inner vertex set @xmath53 , i.e. , @xmath71 2 .   for each non - inner vertex @xmath72 , a coded symbol obtained by the bitwise xor of the message requested by @xmath21 with the messages requested by its out - neighborhood vertices ,",
    "i.e. , @xmath73    denote this index code constructed for the @xmath4-@xmath0 sub - digraph by @xmath74 .",
    "the calculation of the total number of coded symbols , each of @xmath75-bits , in @xmath76 is straightforward , @xmath77    given a @xmath4-@xmath0 sub - digraph @xmath69 , encoding @xmath76 requires at most @xmath78 bit - wise xor operations .",
    "now we show that all @xmath3 vertices in @xmath69 can decode their respective requested messages from @xmath76 .    from ,",
    "all @xmath79 which are non - inner vertices , can decode their requested messages .",
    "this is because the coded symbol @xmath80 is the bitwise xor of the messages requested by @xmath21 and its all out - neighborhood vertices , and any @xmath21 knows messages requested by all of its out - neighborhood vertices as side information .    for an inner vertex @xmath12 , rather than analyzing the sub - digraph @xmath69",
    ", we will analyze its tree @xmath81 , and show that it can decode its message from the relevant symbols in @xmath76 .",
    "we are able to consider only the tree @xmath60 due to the following proposition .",
    "[ lemma3 ] if a vertex @xmath82 such that @xmath83 , then the out - neighborhood is the same in the tree @xmath60 and in @xmath69 , i.e. , @xmath84 .",
    "refer to appendix [ append1 ] .",
    "now let us take any tree @xmath60 .",
    "assume that it has a height @xmath85 where @xmath86 .",
    "the vertices in @xmath60 are at various depths , i.e. , @xmath87 from the root vertex @xmath12 .",
    "the root vertex @xmath12 has depth zero , and any vertex at depth equal to the height of the tree is a leaf vertex .",
    "first of all , in the tree @xmath60 , we compute the bitwise xor among coded symbols of all non - leaf vertices at depth greater than zero , i.e. , @xmath88 .",
    "however , in the tree @xmath60 , the message requested by a non - leaf vertex , say @xmath89 , at a depth greater than one , appears exactly twice in @xmath90 ;    1 .",
    "once in @xmath91 , where @xmath92 is parent of @xmath33 in tree @xmath60 , and 2 .   once in @xmath93 .",
    "thus they cancel out each other while computing @xmath94 in the tree @xmath60 ( see in appendix [ append2 ] ) .",
    "hence , in the tree @xmath60 , the resultant expression which is bitwise xor of    1 .",
    "messages requested by all non - leaf vertices at depth one , and 2 .   messages requested by all leaf vertices at depth greater than one ,    is obtained ( see in appendix [ append2 ] ) .",
    "secondly , in the tree @xmath60 , we compute @xmath95 ( see in appendix [ append2 ] ) which yields the bitwise xor of    1 .   messages requested by all non - leaf vertices at depth one which are in out - neighborhood of @xmath12 , 2",
    ".   messages requested by all leaf vertices at depth one which are also in out - neighborhood of @xmath12 , and 3 .",
    "message requested by @xmath12 , i.e. , @xmath13 .",
    "this is because the messages requested by each leaf vertex at depth greater than one in the tree @xmath60 is present in both the resultant terms of @xmath94 and in @xmath96 , thereby they cancel out itself in @xmath95 .",
    "hence , @xmath95 yields the bitwise xor of @xmath13 and @xmath97 .",
    "as @xmath12 knows all @xmath97 as side - information , any inner vertex @xmath12 can decode its required message from @xmath95 .",
    "[ generalized interlinked cycle cover @xmath98 scheme ] for any digraph , the @xmath9 scheme finds a set of disjoint @xmath0 sub - digraphs .",
    "it then ( a ) codes each of these @xmath0 sub - digraphs using the code construction described in section [ secb ] , and ( b ) sends uncoded messages requested by all remaining vertices ( i.e. , vertices which are not in any of these disjoint @xmath0 sub - digraphs ) .",
    "now we present a main result of this paper .",
    "it is best expressed in terms of _ savings _ defined as follows :    [ savings ] the number of packets saved ( i.e. , @xmath99 ) , by transmitting coded symbols ( coded packets ) rather than transmitting uncoded message packets , is called",
    "_ savings_.    [ theorem1 ] for any digraph d , a valid index code of length @xmath100 can be achieved by using the @xmath9 scheme , where ( @xmath101 ) is the saving in each disjoint @xmath102-@xmath0 sub - digraph , and @xmath103 is the number of disjoint @xmath0 sub - digraphs in @xmath24 .",
    "consider a @xmath4-@xmath0 sub - digraph @xmath69 .",
    "it follows from that the total number of savings achieved by the @xmath9 scheme is @xmath104    for any digraph @xmath24 containing @xmath103 disjoint @xmath0 sub - digraphs , a saving of @xmath101 is obtained in each @xmath105 ( from ) , where @xmath106 . now",
    "the total saving is the summation of savings in all disjoint @xmath0 sub - digraphs , i.e. , @xmath107 .",
    "hence , @xmath108 .",
    "the @xmath0 sub - digraphs found by the @xmath9 scheme are not unique .",
    "so , finding the best @xmath109 involves optimizing over all choices of disjoint @xmath0 sub - digraphs in @xmath24 , and this requires high time complexity .",
    "we will leave the design of algorithms or approximations as our future work .",
    "@xmath0 sub - digraphs include @xmath2 sub - digraphs as a special case .",
    "an @xmath2 sub - digraph @xmath112 , is defined as follows @xcite :",
    "[ item : path - i ] it has @xmath92 disjoint paths , @xmath113 , for each @xmath114 , where each @xmath115 has @xmath116 number of vertices .",
    "[ item : path ] for any distinct @xmath117 , there is a path from @xmath118 to some @xmath119 , denoted as @xmath120 .",
    "denote the sub - path @xmath121 , where each @xmath122 has @xmath123 number of vertices .",
    "3 .   the set of vertices in all @xmath115 and in all @xmath122 are mutually disjoint .",
    "[ item : in ] each first vertex @xmath124 in @xmath125 has at least one in - degree .",
    "select @xmath126 .",
    "point  [ item : path ] guarantees that , for any ordered pair ( @xmath54 ) , @xmath55 and @xmath127 , there exists a path from @xmath128 to @xmath129 .",
    "now we will show that the @xmath2 sub - digraph with the chosen @xmath130 , satisfies the two conditions to be a @xmath110 sub - digraph @xmath69 .    by construction of an @xmath2 digraph , we have the following : for any @xmath131 , all paths from @xmath128 must go through some @xmath132 for some @xmath21 , and then @xmath129 before returning to @xmath128 .",
    "therefore , there is no @xmath133-cycle .",
    "note that each vertex in @xmath134 has out - degree one .",
    "thus it follows from points  [ item : path - i ] and  [ item : path ] that there is only one @xmath135-path between any @xmath136 .    since there is only one @xmath135-path from @xmath12 to @xmath21 for any @xmath137 , every @xmath122 , which is part of the @xmath138-path from @xmath12 to @xmath21 , must be a sub - digraph of the tree @xmath60 . for every @xmath139 ,",
    "point 4 dictates that the entire @xmath125 must be the part of the @xmath140-path from some @xmath12 to @xmath21 .",
    "hence , @xmath125 is a sub - digraph of the tree @xmath60 .",
    "we have included all vertices and arcs in the construction of the trees in @xmath141 .",
    "consequently , @xmath142 .",
    "the @xmath143 scheme includes the @xmath111 scheme .    in an @xmath2 sub - digraph @xmath112 @xcite ,",
    "select @xmath126 .",
    "the coded symbols @xmath144 of the @xmath2 is the same as the coded symbol @xmath145 of the @xmath9 . now for the remaining vertices ( of set @xmath146 ) , the coded symbols of the @xmath2 scheme are simply the bitwise xor of the messages requested by each vertex @xmath21 and its out - neighborhood vertices , which is same as @xmath147 , @xmath148 of the @xmath9 scheme .",
    "the @xmath9 scheme includes the cycle cover and the clique cover schemes as special cases .",
    "the @xmath2 scheme includes the cycle cover scheme and the clique cover scheme as its special cases @xcite . from theorem 2 ,",
    "the @xmath9 scheme includes @xmath2 scheme as its special case .",
    "we first prove a lemma that will help to prove the optimality of the @xmath9 scheme .",
    "[ lemma6 ] in a @xmath0 sub - digraph , any cycle must contain either ( i ) no inner vertex , or ( ii ) at least two inner vertices .",
    "it follows directly from the property of a @xmath0 sub - digraph that a cycle can not be formed by including only one inner vertex because this type of cycle is an @xmath133-cycle .",
    "[ maximum acyclic induced subgraph ( _ mais _ ) ] for a digraph @xmath24 , an induced acyclic sub - digraph with the largest number of vertices is called the mais .",
    "we denote the order of an mais by @xmath149 .",
    "it has been shown  @xcite that for any @xmath28 and @xmath27 , @xmath150    [ th3 ] for a class of digraphs , in which each digraph is a @xmath151-@xmath52 sub - digraph @xmath69 with    * ( case 1 ) no cycle among the non - inner vertices , or * ( case 2 ) @xmath152 disjoint cycles among non - inner vertices , and we can group the inner vertex set @xmath53 in to @xmath153 sub - sets such that each of them forms a disjoint @xmath0 sub - digraph of case 1 , and such @xmath0 sub - digraphs are also disjoint from the @xmath50 cycles among non - inner vertices ,    the scalar linear index code given by the @xmath9 scheme is optimal for messages of any @xmath154 bits , i.e. , @xmath155 .",
    "we will show that the mais lower bound is tight for all @xmath27 .",
    "we denote the digraph by @xmath141 , and consider that it has @xmath3 number of vertices . for @xmath156 ,",
    "the digraph contains only one vertex , and @xmath157 . for @xmath158",
    ", we have the following : ( case 1 ) from lemma [ lemma6 ] , any cycle must include at least two inner vertices , or no inner vertex , thus if we remove @xmath5 inner vertices , then the digraph @xmath69 becomes acyclic .",
    "thus @xmath159 from theorem [ theorem1 ] , we get @xmath160 it follows from , , and that @xmath161 .",
    "thus @xmath162 .",
    "( case 2 ) a @xmath163 can be viewed in two ways .",
    "the first way is considering the whole @xmath69 as a @xmath4-@xmath0 digraph . the second way is considering induced sub - digraphs of @xmath163 which consist of ; ( a ) @xmath50 disjoint cycles together consisting of a total of @xmath164 ( @xmath165 ) non - inner vertices ( if @xmath166 or @xmath167 , then @xmath168 , which is case 1 ) , ( b ) @xmath153 disjoint @xmath0 sub - digraphs each with @xmath169 number of vertices and @xmath170 number of inner vertices in such a way that @xmath171 , we consider that each @xmath0 sub - digraph is also disjoint from all @xmath50 cycles among non - inner vertices , and ( c ) total remaining of @xmath172 non - inner vertices ( which are not included in @xmath50 cycles , or the @xmath153 @xmath0 sub - digraphs ) .",
    "now we will show that both ways of looking at @xmath69 are equivalent in the sense of the index code length generated from our proposed scheme , and both equal to @xmath173 .",
    "we prefer the second way of viewing @xmath69 for our proof since it is easier to find the mais lower bound .    for the partitioned @xmath69 ( looking at in the second way )",
    ", the total number of coded symbols will be the summation of the length of the coded symbols for ( i ) each of the @xmath50 disjoint cycles ( each cycle has saving equal to one ) , ( ii ) each of the @xmath153 disjoint @xmath0 sub - digraphs ( each of @xmath0 sub - digraphs has savings equal to @xmath5 ) , and ( iii ) @xmath174 uncoded symbols for the remaining non - inner vertices , i.e. , @xmath175 from and , @xmath176 , thus from both perspectives the code length is the same .",
    "now for @xmath69 ( looking at in our second way ) , if we remove one vertex from each of the @xmath50 cycles among non - inner vertices ( @xmath50 removal in total ) , and remove @xmath101 vertices from each of the @xmath153 @xmath0 sub - digraphs ( @xmath177 ) , i.e. , total removal of @xmath5 , then the digraph becomes acyclic .",
    "thus @xmath178 it follows from , , and that @xmath161 .",
    "thus @xmath162 .",
    "for any @xmath4-@xmath0 digraph @xmath69 , and message of any @xmath26 bits , the scalar index codes given by @xmath9 scheme is optimal , i.e. , @xmath155 .",
    "if @xmath179 , we conjecture that we can always find disjoint @xmath0 sub - digraphs such that the summation of all number of coded symbols required for each @xmath0 sub - digraph is equal to @xmath173 .",
    "the @xmath181 digraph shown in fig .",
    "[ 4a ] has @xmath182 and is denoted by @xmath183 .",
    "the coded symbols from the @xmath180 scheme have length @xmath184 , and they are @xmath185 .",
    "the upper bounds for the digraph @xmath186 by existing techniques are ( a ) composite - coding @xcite , @xmath187 ; ( b ) local chromatic number @xcite , @xmath188 ; ( c ) fractional partial clique cover @xcite , @xmath189 ; ( d ) interlinked cycle cover @xcite , @xmath190 ; ( e ) clique cover @xcite , @xmath191 ; and ( f ) cycle cover @xcite , @xmath192 .",
    "all of these upper bounds are strictly greater than @xmath193 .",
    "-5pt      we outline a class of @xmath0 digraphs with @xmath4 number of inner vertices , and @xmath194 number of non - inner vertices , so that @xmath195 . without loss of generality ,",
    "say @xmath56 , and the non - inner vertex set is @xmath196 .",
    "now for @xmath197 , every vertex @xmath12 knows messages requested by vertices @xmath198 and @xmath199 .",
    "vertex @xmath200 knows all messages requested by vertices @xmath201 , and vertex @xmath199 knows all messages requested by vertices @xmath202 .",
    "the first inner vertex ( i.e. , vertex 1 ) knows the message requested by vertex @xmath203 , and vertex @xmath203 knows all messages requested by vertices @xmath204 .",
    "similarly , the last inner vertex ( i.e. , vertex @xmath4 ) knows the message requested by vertex @xmath205 , and vertex @xmath206 knows all messages requested by vertices @xmath207 .    for @xmath208 ,",
    "a digraph @xmath69 of this class is not an @xmath209 digraph , and its complement digraph ( whose underlying graph is a complete graph ) has chromatic number @xmath210 , and local chromatic number @xmath211 .",
    "also , the digraph @xmath163 has @xmath212 , and @xmath213 . the gap , @xmath214 ,",
    "so for @xmath215 , the gap grows linearly with @xmath4 .",
    "similarly , @xmath216 .",
    "[ 4b ] depicts an example of a digraph in this class with @xmath182 .    -2pt",
    "in this work , we first defined a structure , called generalized interlinked cycle ( @xmath181 ) , in directed graphs .",
    "a @xmath181 consists of cycles that are interlinked in some manner ( i.e. , not disjoint ) .",
    "we then proposed a simple encoding scheme called the generalized interlinked cycle cover ( @xmath180 ) .",
    "this scheme exploits @xmath217 in the digraph , and generalizes the interlinked cycle cover ( @xmath2 ) scheme , the clique cover scheme , and the cycle cover scheme .",
    "furthermore , we characterized a class of digraphs where the @xmath9 is optimal ( over all codes , including non - linear index codes ) , and showed that the @xmath9 scheme can outperform existing techniques ( including partial clique cover , local chromatic number , composite - coding , and interlinked cycle cover ) .",
    "the authors would like to acknowledge fatemeh arbabjolfaei from the university of california , san diego for providing the composite - coding upper bound for the digraph in fig .",
    "[ 4a ] .    10 [ 1]#1 url@samestyle [ 2]#2 [ 2 ] l@#1 = l@#1 # 2    y.  birk and t.  kol , `` informed - source coding - on - demand ( iscod ) over broadcast channels , '' in _ proc .",
    "ieee infocom _ , vol .  3 ,",
    "san francisco , ca , mar .",
    "1998 , pp .",
    "12571264 .",
    "z.  bar - yossef , y.  birk , t.  s. jayram , and t.  kol , `` index coding with side information , '' _ ieee transactions on information theory _ ,",
    "57 , no .  3 , pp . 14791494 ,",
    "mar 2011 .",
    "l.  ong , `` linear codes are optimal for index - coding instances with five or fewer receivers , '' in _ proc .",
    "ieee international symposium on information theory ( isit ) _ , june 2014 , pp .",
    "491495 .",
    "m.  a.  r. chaudhry , z.  asad , a.  sprintson , and m.  langberg , `` on the complementary index coding problem , '' in _ proc .",
    "ieee international symposium on information theory ( isit ) _ , july 2011 , pp . 224248 .",
    "e.  chlamtac and i.  haviv , `` linear index coding via semidefinite programming , '' in _ proc .",
    "23rd annu .",
    "acm - siam symp . on discrete algorithms ( soda ) _ , 2012 , pp .",
    "406419 .",
    "r.  peeters , `` orthogonal representaions over finite fields and the chromatic number of graphs , '' _ combinatorica _ , vol .  16 , no .  3 , pp .",
    "417431 , sept 1996 .",
    "m.  j. neely , a.  s. tehrani , and z.  zhang , `` dynamic index coding for wireless broadcast networks , '' _ ieee transactions on information theory _",
    "59 , no .  11 , pp . 75257540 , nov 2013 .",
    "a.  blasiak , r.  d. kleinberg , and e.  lubetzky ,  broadcasting with side information : bounding and approximating the broadcast rate , \" _ ieee transactions on information theory _",
    "59 , no .  9 , pp . 58115823 , sept 2013 .",
    "k.  shanmugam , a.  g. dimakis , and m.  langberg , `` local graph coloring and index coding , '' in _ proc .",
    "ieee international symposium on information theory ( isit ) _ , july 2013 , pp .",
    "11521156 .    c.  thapa , l.  ong , and s.  j. johnson , `` a new index coding scheme exploiting interlinked cycles , '' in _ proc .",
    "ieee international symposium on information theory ( isit ) _ , june 2015 , pp .",
    "10241028 .",
    "f.  arbabjolfaei , b.  bandemer , y .- h .",
    "kim , e.  sasoglu , and l.  wang , `` on the capacity region for index coding , '' in _ proc .",
    "ieee international symposium on information theory ( isit ) _ , july 2013 , pp . 962966 .",
    "f.  arbabjolfaei and y .- h .",
    "kim , `` local time sharing for index coding , '' in _ proc .",
    "ieee international symposium on information theory ( isit ) _ , june 2014 , pp . 286290 .",
    "a @xmath4-@xmath0 sub - digraph @xmath69 has some properties captured in the following lemmas , which we will use to prove @xmath84 .",
    "here we consider @xmath60 and @xmath218 as any two distinct trees present in @xmath69 .      in a tree @xmath60",
    "( see fig .",
    "[ fig3 ] ) , for any vertex @xmath224 and @xmath221 , let @xmath225 be a set of leaf vertices that fan out from the vertex @xmath222 . if the vertex @xmath226 , then there exists a path from vertex @xmath222 to @xmath21 in the tree @xmath60 .",
    "however , in the tree @xmath218 , there is a path from vertex @xmath21 to @xmath222 .",
    "thus in the sub - digraph , a path present in any @xmath60 also present in @xmath69 . ] @xmath69 , we obtain a path from vertex @xmath222 to @xmath21 ( via @xmath60 ) and vice versa ( via @xmath218 ) . as a result ,",
    "an @xmath133-cycle containing @xmath21 is present .",
    "this contradicts the condition 1 ( i.e. , no @xmath133-cycle ) for a @xmath69 .",
    "hence , @xmath227 . in other words , @xmath228 .",
    "similarly , @xmath229 .          from lemma [ lemma1 ] , @xmath234 is a subset of @xmath235 . now pick a vertex @xmath236 belongs to @xmath235 such that @xmath237 but @xmath238 ( such @xmath236 exists since we suppose that @xmath239 ) . in tree @xmath60",
    ", there exists a directed path from the vertex @xmath12 which includes the vertex @xmath222 , and ends at the leaf vertex @xmath236 .",
    "let this path be @xmath240 .",
    "similarly , in tree @xmath218 , there exists a directed path from the vertex @xmath21 , which does nt include the vertex @xmath222 ( since @xmath238 ) , and ends at the leaf vertex @xmath236 .",
    "let this path be @xmath241 .",
    "however , in the digraph @xmath69 , we can also obtain a directed path from the vertex @xmath21 which passes through the vertex @xmath222 ( via @xmath242 ) , and ends at the leaf vertex @xmath236 ( via @xmath60 ) .",
    "let this path be @xmath243 .",
    "the paths @xmath241 and @xmath244 are different which indicates the existence of multiple @xmath138-paths from the vertex @xmath21 to @xmath236 in @xmath69 , this contradict the condition 2 for a @xmath69 . consequently , @xmath232 .     and @xmath218 with roots @xmath12 and @xmath21 respectively , and a non inner vertex @xmath222 in common . here",
    "we have used straight arrow to indicate an arc , and curly arrow to indicate a path.,height=166 ]    now we pick a vertex @xmath245 such that , without loss of generality , @xmath246 but @xmath247 ( such @xmath245 exists since we assumed that @xmath231 ) . furthermore , we have two cases for @xmath245 , which are ( case 1 ) @xmath248 , and ( case 2 ) @xmath249 .",
    "case 1 is addressed in the first part of this proof . on the other hand , for case 2",
    ", we pick a leaf vertex @xmath250 such that there exists a path ( see fig . [ fig3 ] ) that starts from @xmath222 followed by @xmath245 , and ends at @xmath251 , i.e. , @xmath252 exists in @xmath60 .",
    "a path @xmath253 exists in @xmath218 .",
    "thus a path @xmath254 exists in @xmath69 . from the first part of the proof",
    ", we have @xmath232 , so @xmath255 . now in @xmath218 , there exists a path from @xmath21 to @xmath251 , which includes vertex @xmath222 followed by a vertex @xmath256 such that @xmath257 and @xmath258 ( as @xmath259 ) , and the path ends at @xmath251 , i.e. , @xmath260 which is different from @xmath254 .",
    "so multiple @xmath138-paths are observed at @xmath251 from @xmath21 .",
    "this contradicts condition 2 for a @xmath69 .",
    "consequently , @xmath261 .",
    "here @xmath271 is bitwise xor of messages requested by all of the leaf vertices which branch from all of the non leaf and the non root vertices in @xmath60 .",
    "if we expand @xmath272 as per the group of vertices according to their depth , then the intermediate terms cancel out , and we get ( we have use the same color to indicate the terms that cancel out each other ) ."
  ],
  "abstract_text": [
    "<S> a source coding problem over a noiseless broadcast channel where the source is preinformed about the contents of the cache of all receivers , is an index coding problem . </S>",
    "<S> furthermore , if each message is requested by one receiver , then we call this an index coding problem with a unicast message setting </S>",
    "<S> . this problem can be represented by a directed graph . in this paper </S>",
    "<S> , we first define a structure ( we call generalized interlinked cycle ( @xmath0 ) ) in directed graphs . </S>",
    "<S> a @xmath0 consists of cycles which are interlinked in some manner ( i.e. , not disjoint ) , and it turns out that the @xmath0 is a generalization of cliques and cycles . </S>",
    "<S> we then propose a simple scalar linear encoding scheme with linear time encoding complexity . </S>",
    "<S> this scheme exploits @xmath1 in the digraph . </S>",
    "<S> we prove that our scheme is optimal for a class of digraphs with message packets of any length . </S>",
    "<S> moreover , we show that our scheme can outperform existing techniques , e.g. , partial clique cover , local chromatic number , composite - coding , and interlinked cycle cover .    </S>",
    "<S> index coding problem , unicast , optimal broadcast rate , linear codes , interlinked cycles . </S>"
  ]
}
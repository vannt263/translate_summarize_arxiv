{
  "article_text": [
    "in the black - scholes model , the price of an option is given by the expected value of a payoff depending upon the solution of a stochastic differential equation(sde ) satisfied by the stock price .",
    "the model assumes that the behavior of the stock price is depicted by a sde driven by brownian motion , @xmath0with given initial data @xmath1 .",
    "although this model is widely used , the fact that asset returns are not log - normal has motivated people to suggest models which better capture the characteristics of the stock price dynamics .",
    "merton@xcite proposed a jump - diffusion process for the stock price . to be specific",
    ", the stock price follows a jump - diffusion sde :    @xmath2    where the jump term @xmath3 is a compound poisson process @xmath4 , the jump magnitude  @xmath5 has a prescribed distribution , and @xmath6 is a poisson process with intensity @xmath7 , independent of the brownian motion . due to the existence of jumps ,",
    "the process is a cdlg process , i.e. having right continuity with left limits .",
    "we note that @xmath8 denotes the left limit of the process while @xmath9 . in @xcite",
    ", merton also assumed that @xmath10 has a normal distribution with mean @xmath11 and variance @xmath12 , namely @xmath13 .",
    "there are several ways to generalize merton model from different aspects .",
    "a possible way is to consider the case where the frequency of jump is infinite , where general lvy processes can be used .",
    "another direction ( for example in @xcite ) is to introduce dependency between parameters , leaving the expected number of jumps finite within finite horizon . as a particular numerical examples",
    ", we consider the case where instantaneous jump rate relies on the stock price , namely @xmath14 . in pursuit of risk - neutral pricing of options , we are interested in the expected value of a function of the terminal state , @xmath15 . in the simple case of a european option , the expectation can be directly simulated , while in the case of asian , lookback and barrier options the valuation depends on the entire path @xmath16 .",
    "the expected value can be estimated by a simple monte carlo method with a proper numerical discretisation scheme . however , to achieve a root - mean - square ( rms ) error of @xmath17 using an euler - maruyama discretisation would require @xmath18 independent paths , each with @xmath19 timesteps , leading to a computational complexity of @xmath20 .",
    "this is quite time consuming compared to the case of path - independent options .",
    "giles @xcite @xcite has recently introduced a multilevel monte carlo path simulation method for the option pricing calculation .",
    "this improves the computational efficiency of monte carlo path simulation by combining results using different numbers of timesteps .",
    "this can be viewed as a generalisation of the two - level method of kebaier @xcite and is also similar in approach to heinrich s multilevel method for parametric integration @xcite .",
    "the first paper @xcite proposed the multilevel monte carlo approach and proved that it can lower the computational complexity of path - dependent monte carlo evaluations to @xmath21 , verified by numerical results using the simple euler - maruyama discretisation .",
    "the second paper @xcite demonstrated that the computational cost can be further reduced to @xmath18 by using the milstein discretisation .",
    "this has been extended by dereich and heidenreich @xcite to approximation methods for both finite and infinite activity lvy - driven sdes with globally lipschitz payoffs .",
    "the work in this paper differs in considering simpler finite activity jump - diffusion models , but more challenging non - lipschitz payoffs , and also uses a more accurate milstein discretisation to achieve an improved order of convergence for the multilevel correction variance which will be defined later .    in this paper",
    "we applies the multilevel approach to the monte carlo simulation of path - dependent option pricing under jump - diffusion processes .",
    "we first consider the case where the jump rate is constant then take into account the state - dependent rate case . in both cases , in order to calculate coarse - path samples from fine - path sample using brownian interpolation , we adopt a jump - adapted milstein discretisation scheme proposed by platen82 , which explicitly simulates the times when jumps occur .",
    "furthermore , we construct multilevel estimators for corresponding path - dependent payoffs coping with challenges caused by jumps . through constructing payoff estimators by brownian bridge technique , high order multilevel correction term variance convergence rate",
    "is achieved . in the state - dependent rate case ,",
    "we use two approaches , which are called cumulative intensity method and thinning method to tackle the unsynchronization of jump times in the fine and coarse grids .",
    "numerical results show similar improvement in computational efficiency compared with previous achievement @xcite for diffusion processes .",
    "generally , using the jump - adapted milstein scheme with the multilevel approach , we can reduce the computation cost to @xmath18 in terms of rms error @xmath22 .    in the following parts of the paper , we first review the multilevel monte carlo method for diffusion processes .",
    "the next section describes the jump - adapted discretisation of jump - diffusion processes and its advantages for facilitating the multilevel approach .",
    "then we discuss the path simulation and estimator construction for the jump - adapted discretisation with the multilevel approach and present numerical results of asian , lookback , barrier and digital options .",
    "the next part establishes two methods to deal with state - dependent intensity .",
    "the final section draws conclusions and indicates directions of future research .",
    "suppose we perform monte carlo path simulations with fixed grid timesteps @xmath23 , @xmath24 .",
    "for a given brownian path @xmath25 , let @xmath26 denote the payoff , and let @xmath27 denote its approximation by a numerical scheme with timestep @xmath28 . as a result of the linearity of the expectation operator , @xmath29 = \\ee[\\hp_0 ] + \\sum_{\\ell=1}^l \\ee[\\hp_{\\ell } \\!-\\",
    "\\hp_{\\ell-1 } ] .",
    "\\label{eq : identity}\\ ] ]    let @xmath30 denote an estimator for @xmath31 $ ] using @xmath32 paths .",
    "suppose for different @xmath33 , we use @xmath34 independent paths to estimate @xmath35 $ ] .",
    "@xmath36 the multilevel method facilitates the fact that @xmath37 $ ] decreases with @xmath38 to adaptively choose @xmath34 and hence reduce the computational cost .",
    "the cost reduction effect is summarized in the following theorem :    [ thm : cc ] let @xmath26 denote a functional of the solution of stochastic differential equation ( [ eq : sde ] ) for a given brownian path @xmath25 , and let @xmath27 denote the corresponding approximation using a numerical discretisation with timestep @xmath39 .    if there exist independent estimators @xmath40 based on @xmath34 monte carlo samples , and positive constants @xmath41 such that    * @xmath42 \\right|\\leq c_1\\ , h_{\\ell}^\\alpha $ ] * @xmath43 = \\left\\ { \\begin{array}{ll } \\ee[\\hp_0 ] , & l=0 \\\\[0.1 in ] \\ee[\\hp_{\\ell } - \\hp_{\\ell-1 } ] , & l>0\\end{array}\\right . $ ] * @xmath44 \\leq c_2\\ , n_{\\ell}^{-1 } h_{\\ell}^\\beta",
    "$ ] * @xmath45 , the computational complexity of @xmath40 , is bounded by @xmath46    then there exists a positive constant @xmath47 such that for any @xmath48 there are values @xmath49 and @xmath34 for which the multilevel estimator @xmath50 has a mean - square - error with bound @xmath51\\right)^2\\right ] < \\eps^2\\ ] ] with a computational complexity @xmath52 with bound @xmath53 c_4\\ , \\eps^{-2 } ( \\log \\eps)^2 , & \\beta=1 , \\\\[0.1 in ] c_4\\ , \\eps^{-2-(1-\\beta)/\\alpha } , & 0<\\beta<1.\\end{array}\\right.\\ ] ]    see @xcite .    in the case of the jump - adapted discretisation",
    ", @xmath28 should be taken to be the uniform timestep at level @xmath38 , to which the jump times are added to form the set of discretisation times .",
    "we have to define the computational complexity as the expected computational cost since different paths may have different numbers of jumps .",
    "however , the expected number of jumps is finite and therefore the cost bound in assumption iv ) will still remain valid for an appropriate choice of the constant @xmath54 .    according to the theorem , the larger the variance convergence rate @xmath55 , the greater the reduction is the computation cost by the multilevel algorithm . in the case of a lipschitz continuous european payoff , using the milstein discretisation immediately leads to the result that @xmath56 , corresponding to @xmath57 .",
    "thus the main task to improve the performance of the multilevel method is to use using schemes with high order strong convergence rate and constructing appropriate estimators so that @xmath58 could be achieved . for the jump - diffusion process",
    ", the objective is to obtain @xmath58 through adopting a high order scheme .",
    "to simulate jump - diffusion processes , it is possible to use fixed time grid schemes as for geometric brownian motion .",
    "the euler - maruyama scheme for jump - diffusion processes has @xmath59 strong convergence ( @xcite ) .",
    "however , it would be more difficult to pursue higher order strong convergence . to achieve a higher order strong convergence for jump - diffusion processes",
    ", the it - taylor expansion will involve some double integrals of white noise and the poisson random measure @xcite , which increases the complexity of the simulation .",
    "another problem which might be encountered for fixed - time grid schemes is the construction of estimators for the payoff function of path - dependent options .",
    "adoption of the previous brownian bridge interpolation is difficult since the minimum or other functional of paths is difficult to calculate since the joint density of diffusion and jump is much more complex than pure diffusion one .    in order to avoid simulating double stochastic integrals as well as",
    "to identify the time at which the jump occurs , we use the so - called jump - adapted approximation proposed by platen in @xcite .",
    "this jump - adapted scheme would improve the computational tractability compared to other fixed time grid discretisation schemes with the same weak / strong convergence order .",
    "suppose that we have simulated the jump time grid @xmath60 , which includes times at which jumps occur in the @xmath61 $ ] .",
    "on the other hand , consider a fixed time grid constituted by @xmath62 timesteps , @xmath63 which is used in discretisation schemes of brownian sdes . now",
    "consider a superposition of them as a new grid @xmath64 . as a result",
    ", the length of timestep of the new grid will be no greater than @xmath65 .    within every timestep of the new grid ,",
    "the diffusion part is separated from the effect of the possible jump , because the jump only occurs at the grid point .",
    "thus we can approximate the path with established schemes for diffusion processes , and deal with corresponding adjustment if there is a jump at the right end of interval .",
    "this procedure is called the jump - adapted scheme .",
    "the algorithm of simulation via the jump - adapted scheme could be described as the following steps :    1 .",
    "set @xmath66 , @xmath67 ; 2 .",
    "generate jump time @xmath68 in terms of its distribution ; 3 .   while @xmath69 do + ( 1 ) .",
    "simulate the process within @xmath70 , in which the process is driven purely by brownian motion , then simulate the jump at @xmath68 ; + ( 2 ) .",
    "set the timestep @xmath71 , @xmath72 ; + ( 3 ) .",
    "@xmath73 , and generate next jump time @xmath68 in terms of its distribution ; 4 .",
    "simulate the process within @xmath74 $ ] ; 5 .",
    "set the timestep @xmath71 , @xmath75 , @xmath76 and goto 3 .",
    "now we introduce a jump - adapted milstein scheme for a scalar jump - diffusion sde    @xmath77    where the subscript @xmath78 is used to denotes the timestep index , @xmath79 is the left limit of the approximated solution , and @xmath5 is the jump magnitude at @xmath80 .    in sum",
    ", jump - adapted schemes explicitly compute jump times , which are relatively rare in the entire time span .",
    "thus , compared to fixed time schemes , they save the computation cost for generating poisson random numbers when the timestep tends to zero .",
    "furthermore , as we will see later , in terms of path simulation , jump - adapted discretisations have a very crucial property that keeps the multilevel approach valid : within each timestep we can neglect the jump term and only take the brownian component into consideration . as a matter of fact",
    ", the scheme can conveniently adopt the brownian bridge technique used for estimator construction in the previous paper @xcite so that improved convergence could be obtained as well .",
    "in all of the cases to be presented , we simulate the paths using the jump - adapted milstein scheme proposed above .    in the case of a jump - diffusion process , since theorem of computation complexity in the case of diffusion processes requires the weak convergence and ml estimator convergence of discretisation schemes , we have to justify them accordingly for different construction of estimators .",
    "these numerical analysis is being done in a working paper in preparation @xcite .",
    "apart from theoretical issues , there arise two challenges in the implementation .",
    "the first problem is that the path simulation on coarse levels needs to be revised in the presence of varying timesteps of the jump - adapted time grid .",
    "another is how to devise suitable estimators for various payoffs in coping with a jump - adapted time grid .",
    "the third concern is whether optimal samples on each level used by previous algorithm in giles08b should be modified . due to presence of jump ,",
    "the computational cost is @xmath81where @xmath82 is the number of jumps in each scenario .",
    "however , the expected number of jumps is finite and therefore the cost bound in assumption iv ) will still remain valid for an appropriate choice of the constant @xmath83 therefore using previous algorithm should work well . in implementation numerical results indicates that this is appropierate for small @xmath84      when the multilevel approach is applied to the simulation with a fixed time discretisation of a jump - diffusion process , the algorithm maintains the orinigal framework straightforward . while for jump - adapted schemes",
    ", construction of coarse path simulation needed for the estimators ( eq : est_l ) of the payoff differs from previous case .    in the case of fixed time grid for geometric brownian motion , every path sample used for calculating @xmath85 comes from two discrete approximations of brownian path , which are called the fine path and the coarse path . for every @xmath38 ,",
    "every timestep of coarse grid is completely the same as the corresponding two timesteps of the fine grid starting from the same endpoint .",
    "since the brownian increment of the coarse timestep is equidistributed to the sum of two increments of corresponding fine ones , we can do the coarse path simulation without generating extra random normal number .",
    "while in the case of jump - adapted time grid , due to the presence of jump time , the construction of a path sample in the coarse grid using the brownian increments generated in the fine grid needs to be clarified",
    ". in this case , the path sample is discontinuous in its jump time . to avoid such discontinuity , notice that within each timestep of jump - adapted time grid , the path is purely driven by brownian component and therefore reserves continuity . for the coarse grid and the fine grid in the same level , call the finer grid points midpoints for short",
    "for a particular midpoint , the timestep , which is formed by the last jump time before this midpoint and the first jump time after it is called midpoint timestep . in this timestep , brownian increment of the coarse path sample can be obtained by the summation of brownian increments of corresponding two timestep in fine grid . in remaining timesteps of coarse grid",
    ", construction of the coarse path sample uses the same brownian increment as the one in fine grid does .",
    "hence we have defined the coarse path sample construction according to this midpoint construction , which can be seen clearly in figure [ midpoint ] .          for the estimator construction , there comes concern whether extra bias is introduced for estimator in the jump - diffusion process . to secure the correctness of the identity[eq : identity ] , we must avoid introducing any undesired bias , hence it is required that @xmath86 = \\ee[\\hp_{\\ell}^c ] .",
    "\\label{eq : equality}\\ ] ]    this means that the definitions of @xmath27 when estimating @xmath87 $ ] and @xmath88 $ ] must have the same expectation .    in the case of path - dependent payoffs in geometric brownian motion , we approximate the payoff function by brownian bridge interpolation technique using path values on the fine and the coarse grid .",
    "this technique is also available in jump case to reduce the variance of the estimator , where the coarse - path estimator will involve the information from generations of fine - path sample in the two corresponding timesteps .",
    "one thing to notice in jump - adapted schemes is that we can utilise this construction only for the timesteps including midpoint . for other timesteps of coarse grid",
    ", the construction of coarse - grid estimators will be the same as the fine - grid one .",
    "estimators will be discussed in the following respectively corresponding to their payoffs .    in the following",
    "we will show the numerical results of several options .",
    "all of them are done for merton model in which the jump - diffusion sde under risk - neutral measure is @xmath89where @xmath7 is the jump intensity and jump magnitude satisfies @xmath90 , @xmath91 is the risk - free rate , @xmath92 is the volatility of stock price and @xmath93 - 1 $ ] is the compensator to ensure the discounted stock price is a martingale .",
    "all of the simulations in this section use the parameter values @xmath94 , @xmath95 , @xmath96 , @xmath97 , @xmath98 , @xmath99 , @xmath100 , @xmath101 .",
    "we thank giles providing the code for @xcite , based on which we can produce the current code to generate numerical results and figures .          for the vanilla option with the payoff @xmath102 , figure [ fig : geometric brownian motion1 ]",
    "shows the numerical results .",
    "the top left plot shows the behaviour of the variance of both @xmath103 and the multilevel correction @xmath104 , estimated using @xmath105 samples so that the monte carlo sampling error is negligible .",
    "the slope of the mlmc line indicates that @xmath106\\!=\\!o(h_{\\ell } ^{2})$ ] , corresponding to @xmath107 in condition @xmath108 of theorem [ thm : cc ] .",
    "the top right plot shows that @xmath109 $ ] is approximately @xmath110 , corresponding to @xmath111 in condition @xmath112 . noting that the payoff is lipschitz , both of these are consistent with the first order strong convergence proved in @xcite .",
    "the bottom two plots correspond to five different multilevel calculations with different user - specified accuracies to be achieved .",
    "these use the numerical algorithm given in @xcite to determine the number of grid levels , and the optimal number of samples on each level , which are required to achieve the desired accuracy .",
    "we use the computational cost @xmath113 to take account into the effect of jump .",
    "the left plot shows that in each case many more samples are used on level 0 than on any other level , with very few samples used on the finest level of resolution .",
    "the right plot shows that the the multilevel cost is approximately proportional to @xmath114 , which agrees with the computational complexity bound in theorem [ thm : cc ] for the @xmath115 case .",
    "the payoff of the asian option we consider is @xmath116 where @xmath117 @xmath118 is the number of timesteps .",
    "@xcite shows that accuracy can be achieved by approximating the behaviour of a process within a timestep as an ito process with constant drift and volatility , conditional on the computed endpoint values @xmath119 .",
    "taking @xmath120 to be the constant volatility within the interval @xmath121 $ ] , in other words , we define brownian interpolation in the coarse grid at @xmath122 as    @xmath123 , \\label{eq : midpoint}\\ ] ]    where @xmath124 .",
    "this implies @xmath125where @xmath126 is @xmath127satisfying @xmath128 , and is independent of @xmath129 .",
    "let @xmath130 , the fine - path approximated payoff would be @xmath131    in a jump - adapted grid , the coarse - path approximation is the same in most timesteps except in the midpoint timestep @xmath132 is derived from the fine - path values , namely        @xmath133    and thus @xmath134 where @xmath135 , @xmath136 is the value for the coarse timestep in midpoint timestep ; @xmath137 and @xmath138 are the values for fine timestep in the first fine - path timestep constituting the midpoint timestep ; @xmath139 and @xmath140 are the values for the fine timestep in the latter one constituting the midpoint timestep .",
    "figure [ fig : jd2 ] shows the numerical results for parameters @xmath141 , @xmath95 , @xmath96 , @xmath97 , @xmath98 , @xmath99 , @xmath100 , @xmath142 .",
    "all the results are similar to the pure diffusion case .",
    "the payoff of the lookback option we consider is @xmath143previous work @xcite achieved a second order convergence rate for the multilevel correction variance using the milstein discretisation and an estimator constructed by approximating the behaviour within a timestep as an it process with constant drift and volatility , conditional on the endpoint values @xmath144 and @xmath145 .",
    "brownian bridge results ( see section 6.4 in @xcite ) give the minimum value within the timestep @xmath146 $ ] , conditional on the end values , as @xmath147where @xmath148 is the constant volatility and @xmath149 is a uniform random variable on @xmath150 $ ] .",
    "the same treatment can be used for the jump - adapted discretisation in this paper , except that @xmath151 must be used in place of @xmath145 in .",
    "equation is used for the fine path approximation , but a different treatment is used for the coarse path , as in @xcite .",
    "this involves a change to the original telescoping sum in which now becomes @xmath152 = \\ee[\\hp^f_0 ] + \\sum_{\\ell=1}^l \\ee[\\hp^f_\\ell \\!-\\ !",
    "\\hp^c_{\\ell-1 } ] ,   \\label{eq : identity2}\\ ] ] where @xmath153 is the approximation on level @xmath154 when it is the finer of the two levels being considered , and @xmath155 is the approximation when it is the coarser of the two .",
    "this modified telescoping sum remains valid provided @xmath156 = \\ee[\\hp^c_\\ell ] .",
    "$ ]    considering a particular timestep in the coarse path construction , we have two possible situations . if it does not contain one of the fine path discretisation times , and therefore corresponds exactly to one of the fine path timesteps , then it is treated in the same way as the fine path , using the same uniform random number @xmath157 .",
    "this leads naturally to a very small difference in the respective minima for the two paths .",
    "the more complicated case is the one in which the coarse timestep contains one of the fine path discretisation times @xmath158 , and so corresponds to the union of two fine path timesteps . in this case , the value at time @xmath158 is given by the conditional brownian interpolant @xmath159where @xmath160 and the value of @xmath161 comes from the fine path simulation . given this value for @xmath162 , the minimum values for @xmath163 within the two intervals @xmath164 $ ] and @xmath165 $ ] can be simulated in the same way as before , using the same uniform random numbers as the two fine timesteps .",
    "the equality @xmath156 = \\ee[\\hp^c_\\ell ] $ ] is respected in this treatment because @xmath161 comes from the correct distribution , conditional on @xmath166 , and therefore , conditional on the values of the brownian path at the set of coarse discretisation points , the computed value for the coarse path minimum has exactly the same distribution as it would have if the fine path algorithm were applied .",
    "further discussion and analysis of this is given in @xcite , including a proof that the strong error between the analytic path and the conditional interpolation approximation is at worst @xmath167 .",
    "figure [ fig : geometric brownian motion3 ] presents the numerical results .",
    "the results are very similar to those obtained by giles for geometric brownian motion @xcite .",
    "the top two plots indicate second order variance convergence rate and first order weak convergence , both of which are consistent with the @xmath167 strong convergence .",
    "the computational cost of the multilevel method is therefore proportional to @xmath114 , as shown in the bottom right plot .",
    "we consider a down - and - out call barrier option for which the discounted payoff is @xmath168where @xmath169 the jump - adapted milstein discretisation with the brownian interpolation gives the approximation @xmath170where @xmath171",
    ". this could be simulated in exactly the same way as the lookback option , but in this case the payoff is a discontinuous function of the minimum @xmath172 and an @xmath173 error in approximating @xmath172 would lead to an @xmath173 variance for the multilevel correction .    instead , following the approach of cont & tankov ( see page 177 in ct04 ) , it is better to use the expected value conditional on the values of the discrete brownian increments and the jump times and magnitudes , all of which may be represented collectively as @xmath174 .",
    "this yields @xmath175 } \\\\ & = & \\mathbb{e}\\left [ \\exp ( -rt)\\ ( \\hs(t)\\!-\\!k)^{+}\\mathbb{e}\\left [ \\mathbbm{1}_{\\left\\ { \\widehat{m}_{t}>b\\right\\ } } \\mid \\mathcal{f}\\right ] \\right ]   \\\\ & = & \\mathbb{e}\\left [ \\exp ( -rt)\\ ( \\hs(t)-k)^{+}\\ \\prod_{n=0}^{n_{t}-1}\\hp_{n}\\right]\\end{aligned}\\]]where @xmath176 denotes the conditional probability that the path does not cross the barrier @xmath177 during the @xmath178 timestep : @xmath179        for fine - path value , we compute @xmath180 where @xmath148 is defined equal to @xmath181 within each timestep of the jump - adapted grid . note that @xmath182 in should be replaced by the value of left limit of the endpoint @xmath183 , as in the lookback calculation .    for the coarse path calculation",
    ", we again deal separately with two cases .",
    "when the coarse timestep does not include a fine path time , then we again use ( [ eq : barrier1 ] ) . in the other case ,",
    "when it includes a fine path time @xmath158 we evaluate the brownian interpolant at @xmath158 and then use the conditional expectation to obtain @xmath184    figure [ fig : geometric brownian motion4 ] shows the numerical results for @xmath95 , @xmath185 .",
    "the top left plot shows that the multilevel variance is @xmath186 for @xmath187 .",
    "this is similar to the behavior for a diffusion process @xcite .",
    "the bottom right plot shows that the computational cost of the multilevel method is again almost perfectly proportional to @xmath114 .      the digital option considered here",
    "has the discounted payoff @xmath188    in @xcite , a multilevel variance convergence rate of @xmath189 is achieved by smoothing the payoff using conditional expectation given the brownian increments terminated one timestep before reaching the terminal time @xmath190 . the estimator is the probability that @xmath191 under assumption of simple brownian motion with constant drift @xmath192 and volatility @xmath193 within last timestep where @xmath194 denotes number of fine - path timesteps :    @xmath195 & = & \\ee[~\\ee[~f(\\hs_{n_{\\ell}-1}^f)-f(\\hs_{n_{\\ell}-1}^c)~|~ \\delta w_{i},\\ i=1,\\ldots , n_{\\ell}-1]~ ] \\\\ & = & \\ee[~\\phi \\left ( \\frac{\\hs_{n_{\\ell}-1}^f \\!+\\",
    "! a_{n_{\\ell}-1}^f h - k}{b_{n_{\\ell}-1}^f \\sqrt{h}}\\right ) - \\phi \\left ( \\frac{\\hs_{n_{\\ell}-2}^c \\!+\\ ! 2a_{n_{\\ell}-2}^c h \\!+\\ ! b_{n_{\\ell}-2}^c \\delta",
    "w_{n_{\\ell}-1 } - k}{b_{n_{\\ell}-2}^c \\sqrt{h}}\\right)~],\\end{aligned}\\ ] ]    where @xmath196 is the cumulative density function of normal variable , @xmath197 is fine - path fixed - time timestep .    in the jump - adapted time grid , the relation between last jump time and the last timestep before expiry leads to different expressions of above conditional expectation estimator .",
    "let in fact , there would be three cases :    1 .   the last jump time @xmath198 happens before penultimate fixed - time timestep , i.e. @xmath199 , where @xmath62 is the number of timesteps in fixed - time fine grid ; 2 .",
    "the last jump time is within the last fixed - time timestep , i.e. @xmath200 ; 3 .",
    "the last jump time is within penultimate fixed - time timestep , i.e. @xmath201 .",
    "correspondingly , different fine - path and coarse - path estimators are shown in the following .        1 .   in case 1 ,",
    "the fine - path grid and coarse - path grid is the same as the previous diffusion case , hence we do not need to change the estimator , which is the probability that @xmath202 under assumption of approximation the dynamics as a constant drift @xmath203 and volatility @xmath204 brownian motion within last timestep .",
    "+ @xmath205 + where @xmath206 is the cumulative normal distribution , @xmath207 is fine - path fixed - time timestep .",
    "+ @xmath208 2 .   in case 2 ,",
    "last timestep of fine path would be @xmath209 .",
    "due to discontinuity of path before last jump , we must use the same estimator for both fine and coarse path @xmath210 + @xmath211 3 .   in the last case",
    ", @xmath198 denotes the last jump time , and @xmath212 .",
    "we again utilise brownian increment generated for fine path @xmath213 .",
    "+ @xmath214 + @xmath215        in three cases , the conditional expectation of coarse - path estimator is equal to fine - path one , thus equality ( [ eq : equality ] ) is justified .",
    "figure [ digital option ] clearly demonstrates three cases .    figure [ fig : geometric brownian motion5 ] shows the numerical results for parameters @xmath216 , @xmath95 , @xmath96 , @xmath97 , @xmath98 .",
    "the top left plot shows that the variance is approximately @xmath189 , corresponding to @xmath217 .",
    "the reason for this is similar to the argument in @xcite .",
    "a different feature compared to the geometric brownian motion case is that the variance of the level 0 estimator is a constant increasing with jump rate @xmath218 , instead of zero . the reason is simply because that the trajectories in level 0 do vary in each simulation .",
    "in the case of path - dependent jump rates , which means the jump intensity depends on the process , for instance @xmath219 , the implementation of multilevel becomes difficult due to the fact that path may jump at different time in the fine grid and coarse grid .",
    "these differences in path sample might enlarge the difference of quantities used in the computation of payoff between the fine grid and coarse grid , such as final payoff in vanilla and digital option , minimum estimator by brownian bridge interpolation in lookback option and crossing probability in barrier option .",
    "this leads to a increased variance of every single splitted multilevel estimator and finally decrease the reduction of computation cost .    to tackle this obstacle , we propose two approaches .",
    "the first one facilitates the idea of change of measure in dealing with multilevel method for discontinuous payoffs , as we used before in dealing with digital option .",
    "the second one uses thinning technique to simulate the desired jump time with inhomogeneous rate through acceptance - rejection procedure .",
    "we again need to change the measure when evaluating @xmath220 in both grids to reduce variance .      in the first approach , which we call cumulative intensity method , we generate jump times from cumulative intensity which is computed in accordance with the dynamics evolution .",
    "we can see the idea from the case of deterministic time - inhomogeneous rate . for a time - inhomogeneous poisson process",
    "whose instaneous intensity is @xmath221 the distribution of next jump time @xmath222 given @xmath80 is @xmath223    construct jump - adapted schemes by approximating the instaneous jump rate adaptively with the evolution of the path sample at each time grid point .",
    "in other words , since jump intensity is path - dependent , the jump - adapted time discretisation grid should be generated corresponding to the evolution of the underlying process . in    in other words",
    ", @xmath224we can use this property to generate @xmath222 :    @xmath225    so@xmath226    if the cumulative intensity @xmath227does not admit an explicit expression or it is computational intensive , we can use simple quadrature with linear interpolation to generate the approximated @xmath228 @xmath229 .",
    "@xmath230where @xmath231 is the next @xmath78th point in the fixed - timestep grid , @xmath232 is the timestep of the grid , @xmath233 is the instaneous intensity on the left endpoint of each timestep .",
    "let @xmath234 , then @xmath235    is a approximation of @xmath236 .    in the case of random intensity where @xmath218 only depends on current state",
    ", we can define @xmath237 as    @xmath238    we can use approximation of integral and to generate @xmath239 .",
    "the algorithm of jump - adapted ( milstein ) scheme with cumulative intensity would be :    ....      algorithm ( jump - adapted milstein scheme with cumulative intensity ) ....",
    "suppose that we have a fixed time grid constituted of @xmath62 timesteps , @xmath240 .    1 .",
    "let @xmath241 @xmath242draw an exponential r.v .",
    "@xmath243 with parameter 1 ; 2 .   while @xmath244 do 1 .",
    "@xmath245 @xmath246 1 .",
    "if @xmath247 + let @xmath248 @xmath249 + mark @xmath250 as a jump time . let @xmath75 and generate @xmath251 2 .",
    "otherwise @xmath252 2 .",
    "( use milstein scheme ) simulate the evolution of the process from @xmath122 to @xmath253 obtaining value of@xmath254 depending on whether @xmath255 is a jump time .",
    "+ let @xmath256    as a side output , after the finishing of algorithm we have got the approximated jump times @xmath257 , which combines @xmath258 forming jump - adapted grid @xmath259    the point process @xmath260 corresponding to the stopping times @xmath239 is defined by @xmath261    this process is indeed a point process with piecewise constant intensity @xmath262 in @xmath263 .",
    "when it comes to multilevel approach , the problem is that the current intensity may be different in fine and coarse grid , which leads to different distributions of next jump time .",
    "this causes two problems .",
    "first , we can no more use the random number generated for the path increment of fine grid to the one of the coarse grid , which is intrinsically unacceptable for multilevel approach .",
    "secondly , the different final jumps may make a big difference between the payoffs in the fine grid and in the coarse grid , which is a similar challenge for digital option .    to handle these problems , we change the measure of poisson rate in calculating the expectation in the coarse grid so that the distribution of next jump time agrees with the one in the fine grid . to do this let us first introduce the change of measure for poisson processes ( see section 9.3 of @xcite ) .",
    "suppose @xmath264 under some probability density @xmath265 , then under probability density @xmath266 defined by @xmath267we will have @xmath268 , where the above term is called radon - nikodym derivative .    in the context of multilevel approach under state - dependent intensity model with jump - adapted scheme , we want to calculate",
    "@xmath269-\\mathbb{e}[\\hp_{\\ell-1}^{c}],\\]]which we can rewrite as @xmath270.\\ ] ]    we shall explain the meaning of this formula : instead of defining in the jump - adapted grid formed by cumulative intensity approximated by coarse timestep @xmath271 @xmath272 is defined in the jump - adapted grid formed by fine timestep @xmath28 approximation .",
    "the radon - nikodym derivative @xmath273 is defined by    @xmath274    in which @xmath190 is maturity , denoting @xmath275 and @xmath276 are approximated cumulative intensities upto the maturity in the fine and coarse grid , @xmath277 is the index that @xmath278is the jump time , respectively .",
    "this construction is valid since @xmath279=\\mathbb{e}[\\hp_{\\ell-1}^{f}\\hr_{\\ell}],$ ] which can be seen as a piecewise constant extension of ( [ eq : change ] ) .",
    "this can be justified by the theorem 2.31 in chapter 2 of @xcite .",
    "detail will be done in the future work .      in the following",
    "we shall give some intuitive analysis of the variance convergence order , which is not a rigorous proof .",
    "hopefully we can use extreme path theory to prove it thoroughly in the future work .",
    "the variance of estimator @xmath280 is @xmath281 & = & \\vv[\\hp_{\\ell}-\\hp_{\\ell-1}+\\hp_{\\ell-1}(1-\\hr_{\\ell } ) ] \\\\ & \\leq & \\left [ \\left ( \\vv[\\hp_{\\ell}-\\hp_{\\ell-1}]\\right ) ^{\\frac{1}{2}}+\\left ( \\vv[\\hp_{\\ell-1}(1-\\hr_{\\ell})]\\right ) ^{\\frac{1}{2}}\\right ] ^{2}.\\end{aligned}\\ ] ]    the first part has the order of @xmath282 . to see the order of @xmath273 ,",
    "let us examine the asymptomatic order of squared variance of two components of @xmath273 : the exponential part and product part alternatively :    @xmath283 \\prod\\limits_{k}\\dfrac{\\lambda _",
    "{ k}^{c}}{\\lambda _ { k}^{f}}.\\ ] ]    where @xmath284    we will concentrate on the effect caused in midpoint interval .",
    "let @xmath197 be the timestep of uniform fine grid .",
    "given a midpoint interval @xmath285 $ ] , since by definition @xmath286 , the exponential part for @xmath285 $ ] is    @xmath287    the first term is implied by @xmath173 strong convergence and second one comes from @xmath288 .    summing all intervals in the grid ,",
    "since there are @xmath289 midpoint intervals , and the rest contributes higher order , asymptotically we get @xmath290 .",
    "thus the exponential part satisfies    @xmath291",
    "\\sim 1+o(h).\\ ] ]    for the product part , when @xmath292 is a jump time , by similar argument it holds that :    @xmath293    so the product part satisfies @xmath294    asymptotically we get    @xmath295 = o(h).\\ ] ]    therefore we have evidence to support that the variance convergence order for the multilevel estimator should be    @xmath296=o(h).\\ ] ]    although cumulative intensity method can deal with the case where jump rate is not bounded , the variance convergence order @xmath173 leads to a computational complexity of @xmath297 .",
    "the idea of the thinning method is to construct a poisson process with a constant rate @xmath298 which is an upper bound of the state - dependent rate .",
    "this gives a set of candidate jump times , and these are then selected as true jump times with probability @xmath299 .",
    "suppose that we have simulated the jump time grid @xmath300 generated by a poisson process with constant rate @xmath298 , which includes times at which jumps occur in @xmath61 $ ] .",
    "on the other hand , consider a fixed time grid constituted of @xmath62 timesteps , @xmath301 which is used in discretisation schemes for diffusive sdes .",
    "now the superposition of them will be a jump - adapted thinning grid @xmath302 .    for a process which we can simulate the exact increments we have the following thinning procedure :    1 .",
    "generate the waiting time for next jump time @xmath303 from a poisson process with constant rate @xmath304 ; 2 .   simulate the evolution of the process up to time @xmath305 ; 3 .   draw a uniform random number @xmath306 $ ] , 1 .",
    "if @xmath307 , accept @xmath222 as a real jump time and simulate the jump ; otherwise go to 2 .    for the general processes we use certain discretisation scheme ,",
    "e.g. we have the following jump - adapted thinning ( milstein ) scheme :    1 .",
    "generate the jump - adapted time grid for a poisson process with constant rate @xmath304 ; 2 .",
    "simulate each timestep using the ( milstein ) discretisation ; 3 .   when the endpoint @xmath308 is a candidate jump time , generate a uniform random number @xmath309 $ ] , and if @xmath310 , then accept @xmath308 as a real jump time and simulate the jump .",
    "if we look from the perspective of random measure notation , the thinning method can also be formulated in the following ways .",
    "first let us recall some definitions of point processes and random measures .",
    "there are two kinds of basic stochastic processes .",
    "the path evolution of the first kind is driven by continuous increment , while in the second kind the path will only change in the certain jump times . in order to describe the stochastic processes of discrete paths , we need to introduce point process .    given a filtered probability space @xmath311 , if we have a increasing sequence of increasing stopping times@xmath312    and @xmath313    then the point ( counting )",
    "process @xmath314 associated with stopping times ( jump times ) is defined as    @xmath315    it counts the number of jumps up to time @xmath122 . to depict the jump amplitude ( mark ) at each jump time",
    ", we can define marked point processes and associated random measure .",
    "suppose mark @xmath316 are random variables taking values on a mark space @xmath317 , and @xmath316 are @xmath318 measurable , then @xmath319 is called a marked point process on  @xmath320.$ ]    for any @xmath321 and any @xmath322 ,    @xmath323    defines the random measure associated with marked point process",
    "it counts the number of jumps within @xmath324 whose amplitude belonging to @xmath325 .",
    "the class of marked point process is quite general , actually it is a bijection to the class of cdlg process .    for each @xmath322 , @xmath326 is an radon measure on @xmath327,\\mathcal{\\ b}\\left ( e\\times \\lbrack 0,\\infty ] \\right ) \\right ) .$ ] thus for each @xmath328-measuable  function @xmath329 , the integral    @xmath330}f(\\omega ; z , s)\\mu ( \\omega ; \\d z,\\d s):=\\sum",
    "_ { \\substack { n\\geq 1   \\\\ t_{n}\\left ( \\omega \\right ) < t}}f\\left ( y_{n}\\left ( \\omega \\right ) , t_{n}\\left ( \\omega \\right ) \\right)\\ ] ]    is a well - defined random variable .",
    "the compensator @xmath331 of the random measure is defined so that for all bounded @xmath328-measurable  function @xmath332 we have    @xmath333    is a martingale with respect to @xmath334 .    following the assumption of platen , we assume that @xmath335 for all @xmath336 .    under those notations , ( [ eq : jumpsde ] ) can be rewritten as :    @xmath337    where @xmath338 is a poisson random measure , which means the compensator @xmath339 is time independent and @xmath340 is p.d.f of the mark . in this case the waiting time @xmath341 is exponential distributed with a parameter @xmath7 .",
    "those general definitions are to allow more flexibility of the dynamics of sdes , e.g. it can admit state - dependent intensity .",
    "the dynamics of the state - dependent jump - diffusion sdes we will deal with can be written as    @xmath342    the compensator of @xmath343 is defined to be @xmath344 we also adopt the assumption in @xcite that it is bounded by a constant @xmath298 and is absolutely continuous .",
    "the jump - adapted thinning milstein scheme for ( [ eq : jumpsde ] ) can be formulated as    @xmath345      in the multilevel implementation , if we use the above algorithm with different acceptance probabilities for fine and coarse level , there may be some samples in which a jump candidate is accepted for the fine path , but not for the coarse path , or vice versa .",
    "because of first order strong convergence , the difference in acceptance probabilities will be @xmath173 , and hence there is an @xmath173 probability of coarse and fine paths differing in accepting candidate jumps .",
    "such differences will give an @xmath346 difference in the payoff value , and hence the multilevel variance will be @xmath173 .",
    "a more detailed analysis of this is given in @xcite .",
    "to improve the variance convergence rate , we use a change of measure so that the acceptance probability is the same for both fine and coarse paths .",
    "this is achieved by taking the expectation with respect to a new measure @xmath347 : @xmath348 = \\ee_{q}[\\hp_{\\ell}\\prod_{\\tau } r_{\\tau } ^{f}-\\hp_{\\ell-1}\\prod_{\\tau } r_{\\tau } ^{c}]\\]]where @xmath349 are the jump times .",
    "the acceptance probability for a candidate jump under the measure @xmath347 is defined to be @xmath350 for both coarse and fine paths , instead of @xmath351 .",
    "the corresponding radon - nikodym derivatives are @xmath352 since @xmath353 and @xmath354 , this results in the multilevel correction variance @xmath355 $ ] being @xmath356 .",
    "the weak convergence of the jump - adapted discretisation with the thinning procedure is proved in @xcite , for a class of payoffs on which they impose to be @xmath357th differentiable and that its up to 4th order partial derivatives are uniformly bounded . by stone ",
    "weierstrass theorem we can construct a sequence of smoothing polynomials which uniformly converges to continuous payoff . the limits of this approach is that it is invalid for discontinuous payoffs . to prove the convergent variance of multilevel estimator , assuming the lipschitz condition on @xmath7 , we decompose the estimator into the constant rate part and the randon - nikdym derivative part , disentangling the effect of path - dependence of intensity from the estimator . under such assumption , we can obtain the weak convergence of the estimators for various payoffs by the same decomposition , circumventing the difficulties caused by discontinuous payoffs .",
    "the advantage of this argument is that it can reduce the analysis to the constant rate case so that the proof is simplified .",
    "if the analytic formulation is expressed using the same thinning and change of measure , the weak error can be decomposed into two terms as follows : @xmath358 \\ = \\ \\ee_{q}\\left [ ( \\hp_{\\ell } -p)\\ \\prod_{\\tau } r_{\\tau } ^{f}\\right ] \\ + \\ \\ee_{q}\\left [ p\\ ( \\prod_{\\tau } r_{\\tau } ^{f}-\\prod_{\\tau } r_{\\tau } ) \\right ] .\\]]using hlder s inequality , the bound @xmath359 and standard results for a poisson process , the first term can be bounded using weak convergence results for the constant rate process , and the second term can be bounded using the corresponding strong convergence results @xcite .",
    "this guarantees that the multilevel procedure does converge to the correct value .",
    "we show numerical results for a european call option using the underlying dynamics under risk - neutral measure :    @xmath360    where the random measure @xmath343 has compensator @xmath361 with @xmath362 .",
    "@xmath363the mark has a @xmath364 normal distribution the density function of which is denoted by @xmath365 .",
    "we use @xmath366 to generate thinning process .",
    "all other parameters as used previously for the constant rate cases . comparing figures [ fig : state2 ] and [ fig : state3 ]",
    "we see that the variance convergence rate is significantly improved by the change of measure , but there is little change in the computational cost .",
    "this is due to the main computational effort being on the coarsest level , which suggests using quasi - monte carlo on that level @xcite .",
    "the bottom left plot in figure [ fig : state2 ] shows a slightly erratic behaviour .",
    "this is because the @xmath110 variance is due to a small fraction of the paths having an @xmath346 value for @xmath367 . in the numerical procedure",
    ", the variance is estimated using an initial sample of 100 paths . when the variance is dominated by a few outliers ,",
    "this sample size is not sufficient to provide an accurate estimate , leading to this variability .    for comparison",
    ", we also show the numerical result given by cumulative intensity method in figure [ fig : cum ] .",
    "the bottom left plot indicates the @xmath110 variance and the rest plots can be understood consequently .",
    "in this work we extend the multilevel approach to scalar jump - diffusion sdes using jump - adapted schemes .",
    "the second order variance convergence is maintained in the constant rate case , by constructing estimators using a previous brownian interpolation technique . in the state - dependent rate case ,",
    "we use thinning with a change of measure to avoid the asynchronous jumps in the fine and coarse levels .",
    "we have also investigated an alternative approach which can handle cases in which there is no upper bound on the jump rate .    the first natural future work is to do rigorous numerical analysis on the convergence of variance of correction terms , and weak convergence of the ml estimators , which is work in progress @xcite .",
    "the second direction is to investigate other cases of model based on specific infinite activity lvy processes , e.g. variance gamma .",
    "we also plan to investigate whether the multilevel quasi - monte carlo method will further reduce the cost .",
    "giles . improved multilevel monte carlo convergence using the milstein scheme . in a.",
    "keller , s.  heinrich , and h.  niederreiter , editors , _ monte carlo and quasi - monte carlo methods 2006 _ , pages 343358 .",
    "springer - verlag , 2007 ."
  ],
  "abstract_text": [
    "<S> we investigate the extension of the multilevel monte carlo path simulation method to jump - diffusion sdes . </S>",
    "<S> we consider models with finite rate activity , using a jump - adapted discretisation in which the jump times are computed and added to the standard uniform discretisation times . </S>",
    "<S> the key component in multilevel analysis is the calculation of an expected payoff difference between a coarse path simulation and a fine path simulation with twice as many timesteps . </S>",
    "<S> if the poisson jump rate is constant , the jump times are the same on both paths and the multilevel extension is relatively straightforward , but the implementation is more complex in the case of state - dependent jump rates for which the jump times naturally differ . </S>"
  ]
}
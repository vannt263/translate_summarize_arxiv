{
  "article_text": [
    "in  @xcite the min - max and min - max regret versions of the following _ representatives selection _ problem ( rs for short ) have been recently discussed .",
    "we are given a set @xmath4 of @xmath5 tools , numbered from @xmath6 to @xmath5 .",
    "this set is partitioned into @xmath7 disjoint sets @xmath8 , where @xmath9 and @xmath10}r_i$ ] ( we use @xmath11 $ ] to denote the set @xmath12 ) .",
    "we wish to choose a subset @xmath13 of the tools that contains exactly one tool from each set @xmath14 , i.e. @xmath15 for each @xmath16 $ ] . in the deterministic case ,",
    "each tool @xmath17 has a nonnegative cost @xmath18 and we seek a solution  @xmath19 whose total cost @xmath20 is minimal .",
    "this problem can be solved by a trivial algorithm , which chooses a tool of the smallest cost from each @xmath14 .",
    "an important problem characteristic is the maximal number of elements in @xmath14 , i.e. @xmath21 } r_i$ ] .",
    "we can assume that @xmath22 for all @xmath16 $ ] , since a subset with the cardinality of  1 can be ignored .",
    "it is easy to see that rs is a special case of the shortest path problem , and this fact is depicted in figure  [ fig1 ] .",
    "each solid arc in the graph @xmath23 shown in figure  [ fig1 ] corresponds to a tool in  @xmath14 and each dummy ( dashed ) arc has zero cost .",
    "there is one - to - one correspondence between the @xmath24-@xmath25 paths in  @xmath23 and the solutions to rs .",
    "it is not difficult to transform the network @xmath23 and show that rs is also a special case of other basic network problems such as : minimum spanning tree , minimum assignment , or minimum cut ( see , e.g.  @xcite ) .",
    "-@xmath25 shortest path problem . ]    following  @xcite , let us now define the robust versions of rs .",
    "let @xmath26 be a _ scenario set _",
    ", where each _ scenario _ is a vector @xmath27 of nonnegative integral tool costs .",
    "let @xmath28 be the cost of solution @xmath29 under scenario @xmath30 and let @xmath31 be the cost of an optimal solution under @xmath30 .",
    "in order to choose a solution , two robust criteria , called the _ min - max _ and the _ min - max regret _",
    ", can be adopted ( see  @xcite for a motivation of both robust criteria ) . in the min - max rs problem , we seek a solution which minimizes the largest cost over all scenarios , that is @xmath32 } f(x , s_k ) .",
    "\\label{opt1}\\ ] ] in the min - max regret rs problem , we wish to find a solution which minimizes the _ maximal regret _ , that is @xmath33 } ( f(x , s_k)-f^*(s_k)).\\ ] ]    we now describe the known results on min - max ( regret ) rs .",
    "notice first that , all positive results for min - max ( regret ) shortest path ( see , e.g.  @xcite ) remain valid for min - max ( regret ) rs , which is due to the fact that there is one - to - one correspondence between @xmath24-@xmath25 paths in a layered digraph and solutions to rs ( see figure  [ fig1 ] ) . hence the latter problem admits a simple @xmath2-approximation algorithm which outputs an optimal solution for the aggregated tool costs @xmath34 } c_{kj}$ ] , @xmath35 $ ] .",
    "furthermore , if @xmath2 is constant , then min - max ( regret ) rs can be solved in pseudopolynomial time and admits an fptas . it has been shown in  @xcite that min - max ( regret ) rs is np - hard even when @xmath36 and @xmath37 for all @xmath38 $ ] , and becomes strongly np - hard when the number of scenarios is a part of the input .",
    "this result has been recently extended in  @xcite , where it has been shown that when @xmath37 for all @xmath38 $ ] , then min - max ( regret ) rs is as hard to approximate as the vertex cover problem , which is conjectured to be hard to approximate within @xmath39 for any @xmath1 .",
    "a similar inapproximability result , by assuming p@xmath40np , follows immediately from the reduction given in  @xcite for the min - max ( regret ) shortest path problem .",
    "however , in the instances from  @xcite we have @xmath41 for all @xmath38 $ ] , so the result obtained in  @xcite is stronger .    [",
    "[ our - results ] ] our results + + + + + + + + + + +    in this paper we investigate the case when both @xmath2 and @xmath42 are parts of the input .",
    "we show that min - max rs admits an @xmath42-approximation algorithm whose idea is to round up solutions computed by solving a linear relaxation . in particular",
    ", it admits a 2-approximation algorithm when @xmath43 which is the best possible according to the negative results given in  @xcite .",
    "we also show , and these are the main results of the paper , that when additionally @xmath42 is a part of the input , then min - max ( regret ) rs is not approximable within @xmath44 for any @xmath1 unless np@xmath45dtime@xmath46 and provide an approximation algorithm with a performance ratio of @xmath47 for min - max rs , which is close to the above lower bound .",
    "in order to establish the hardness result , we will use the following variant of the label cover problem ( see e.g. , @xcite ) :    we are given a regular bipartite graph @xmath48 , @xmath49 , a set of labels @xmath50 $ ] , and for each edge @xmath51 a map ( partial ) @xmath52\\rightarrow [ n]$ ] .",
    "a _ labeling _ of @xmath23 is an assignment of a subset of labels to each of the vertices of @xmath23 , i.e. a function @xmath53}$ ] .",
    "we say that a labeling _ satisfies _ an edge @xmath51 if there exist @xmath54 and @xmath55 such that @xmath56 a _ total labeling _ is a labeling that satisfies all edges .",
    "we seek a total labeling whose value defined as @xmath57 is minimal .",
    "this minimal value is denoted by @xmath58 , where @xmath59 is the input instance .",
    "there exists a constant  @xmath60 such that for any language @xmath61 , any input @xmath62 and any @xmath63 , one can construct a label cover instance  @xmath59 with the following properties in time polynomial in the instance s size :    * the number of vertices in @xmath59 is @xmath64 , * if @xmath65 , then @xmath66 , * if @xmath67 , then @xmath68 .",
    "[ tlancover ]    we now prove the following result :    there exists a constant  @xmath60 such that for any language @xmath61 , any input @xmath62 , and any @xmath63 , one can construct an instance of min - max rs with the following properties :    * if @xmath65 , then @xmath69 , * if @xmath67 , then @xmath70 , * the number of tools is at most @xmath71 and the number of scenarios is at most @xmath72 .    [ taprminmax ]    let @xmath73 be a language in np and let @xmath74 be the instance of label cover constructed for @xmath73 ( see theorem  [ tlancover ] ) . for each edge",
    "@xmath51 we create a subset of tools @xmath75 , which contains at most @xmath76 tools labeled as @xmath77 , @xmath78 $ ] .",
    "a sample reduction is shown in figure  [ fig2 ] .",
    "graph and @xmath79 . only the edges incident to @xmath80 and @xmath81 and the subsets of tools corresponding to them are shown . ]    a pair of tools @xmath82 and @xmath83 is _ label distinct _ if @xmath84 implies @xmath85 and @xmath86 implies @xmath87 .",
    "in other words , this pair can not assign the same label twice to any vertex .",
    "for example , the pair @xmath88 and @xmath89 is label distinct , whereas the pair @xmath90 and @xmath89 is not , as it assigns label 1 twice to @xmath80 .",
    "we are now ready to form scenario set @xmath91 .",
    "let us fix a vertex @xmath92 .",
    "for each @xmath93-tuple @xmath94 of pairwise distinct edges incident to @xmath95 and for each @xmath93-tuple of pairwise label distinct tools from @xmath96 , we form a scenario under which these tools have costs equal to 1 and all the remaining tools have costs equal to 0 .",
    "we repeat this procedure for each vertex @xmath92 . a sample scenario for vertex @xmath80 in figure  [ fig2 ] and",
    "@xmath97 assigns the cost equal to 1 to tools @xmath90 , @xmath98 and @xmath99 as these tools forms a 3-tuple of pairwise label distinct tools .",
    "let us fix a vertex @xmath100 .",
    "now , for each @xmath93-tuple @xmath101 of pairwise distinct edges incident to @xmath102 and for each @xmath93-tuple of pairwise label distinct tools from @xmath103 , we form a scenario under which these tools have costs equal to 1 and all the remaining tools have costs equal to 0 .",
    "we repeat this procedure for each vertex @xmath104 . a sample scenario for vertex @xmath81 in figure  [ fig2 ] and",
    "@xmath97 assigns the cost equal to 1 to tools @xmath90 , @xmath105 and @xmath106 as these tools forms a 3-tuple of pairwise label distinct tools . to ensure that @xmath107 , we create one additional scenario under which each tool has a cost equal to  0 .",
    "suppose that @xmath65 . then @xmath66 and there exists a total labeling @xmath108 which assigns one label @xmath109 to each vertex @xmath110 .",
    "let us choose tool @xmath111 for each @xmath112 .",
    "we thus get a feasible selection of the tools @xmath19 .",
    "it is easy to see that @xmath113 under each scenario @xmath114 and , consequently @xmath69 .",
    "assume that @xmath115 .",
    "then @xmath116 which implies @xmath117 .",
    "assume , by contradiction , that @xmath118 , so there is a feasible selection @xmath19 such that @xmath119 under each scenario @xmath114 .",
    "observe that @xmath19 corresponds to the total labeling @xmath108 which assigns labels @xmath120 to @xmath121 and @xmath122 to @xmath123 when the tool @xmath124 is selected from @xmath125 . from the construction of @xmath91 it follows that @xmath108 assigns less than @xmath93 distinct labels to each vertex @xmath110 , since otherwise @xmath126 for some scenario @xmath127 .",
    "we thus have @xmath128 , a contradiction .",
    "let us now estimate the size of the constructed instance of min - max rs with respect to @xmath129 .",
    "the number of tools is at most @xmath130 and the number of scenarios is bounded by @xmath131 . according to theorem  [ tlancover ]",
    ", the number of vertices ( and also edges ) in @xmath23 is @xmath64 .",
    "hence the number of tools is at most @xmath71 and the number of scenarios is at most @xmath72 .",
    "min - max rs is not approximable within @xmath44 , for any @xmath1 , unless np@xmath45dtime@xmath46 .",
    "[ tngbmm ]    let @xmath132 be the constant from theorem  [ taprminmax ] . consider a language @xmath133np and an input  @xmath62 .",
    "fix any constant @xmath134 and choose @xmath135 . according to theorem  [ taprminmax ]",
    ", we can construct an instance of min - max rs in which the number of scenarios @xmath2 is asymptotically bounded by @xmath136 for some constant @xmath137 , @xmath69 if @xmath65 and @xmath138 if @xmath115",
    ". we obtain @xmath139 for some constant @xmath140 and sufficiently large @xmath129 .",
    "therefore , @xmath141 and the gap is at least @xmath142 .",
    "since the constant @xmath134 can be arbitrarily large , we get that the gap is @xmath44 for any @xmath143 .",
    "furthermore , the instance of min - max rs can be computed in @xmath144 time , which completes the proof .",
    "min - max regret rs is not approximable within @xmath44 , for any @xmath1 , unless np@xmath45dtime@xmath46 .",
    "a reduction is almost the same as the one from theorem  [ taprminmax ] .",
    "we only add to each @xmath145 a dummy tool with 0 cost under each scenario @xmath146 and one additional scenario @xmath147 under which all the dummy tools have a large cost ( say @xmath148 ) and the original tools have costs equal to 0 .",
    "thus , no dummy tool can be a part of an optimal solution and @xmath149 .",
    "in this section , we provide some lp - based approximation algorithms for min - max rs .",
    "let us fix parameter  @xmath150 and let @xmath151 be the set of all the tools @xmath17 for which @xmath152 for all scenarios @xmath153 $ ] . clearly , @xmath154 }",
    "t_i(l)$ ] , where @xmath155 } c_{kj}\\leq l\\}$ ] is a modified subset of  @xmath14 . consider the following linear program : @xmath156,\\label{sc}\\\\                            & \\sum_{j\\in t_i(l)}x_j=1 , & i\\in[p],\\label{hc}\\\\                            & x_j\\geq 0 , & j\\in t(l ) , \\label{hc1 } \\\\",
    "& x_j=0 , & j\\notin t(l ) .",
    "\\label{hc2}\\end{aligned}\\ ] ] minimizing @xmath73 subject to  ( [ sc])-([hc2 ] ) we obtain an _ lp relaxation _ of min - max rs .",
    "let @xmath157 denote the smallest value of the parameter  @xmath73 for which @xmath158 is feasible .",
    "clearly , @xmath157 is a lower bound on @xmath159 and can be determined in polynomial time by using binary search .",
    "if @xmath160 is a feasible , fractional solution to @xmath161 , then constraints  ( [ hc ] ) imply @xmath162 for at least one tool @xmath163 for each @xmath38 $ ] . by choosing such a tool from @xmath164",
    ", we get a solution  @xmath19 with @xmath165 at most @xmath166 .",
    "this leads to the following observation :    min - max rs admits an @xmath42-approximation algorithm .",
    "it is worth pointing out that the above algorithm is the best possible when @xmath43 , according to the negative results provided in  @xcite .",
    "the following observation describes the integrality gap of the lp relaxation :    the lp relaxation has an integrality gap of at least @xmath167 .",
    "let  @xmath168 be an arbitrary integer .",
    "fix @xmath169 .",
    "let @xmath170 for every @xmath38 $ ] .",
    "we form a scenario set  @xmath91 as follows .",
    "for each @xmath7-tuple  @xmath171^p$ ] , where the component  @xmath172 $ ] corresponds to the @xmath173-th element in subset  @xmath14 , we form scenario under which the tools indicated by @xmath174 have costs equal to  @xmath6 and all the remaining tools have costs equal to  0 . thus , @xmath175 . consider a fractional solution @xmath176 , for all @xmath17 .",
    "this solution is feasible to @xmath161 , where @xmath177 .",
    "it is easy to notice that each integer solution for the instance constructed has the maximum cost over all scenarios equal to @xmath7 .",
    "therefore , we have the integrality gap of  @xmath7 . since @xmath178 , @xmath179 and",
    "the integrality gap of the lp relaxation is at least @xmath180 .",
    "we now convert a feasible , fractional solution  @xmath160 to @xmath161 into an integer solution @xmath181 , which will represent a feasible tool selection . to do this a randomized rounding technique proposed in  @xcite",
    "can be applied .",
    "we first remove all the tools whose cost under some scenario is greater than @xmath157 , i.e. @xmath182 .",
    "we lose nothing by assuming , from now on , that the remaining tools  @xmath122 , @xmath183 , are numbered from @xmath6 to @xmath5 , @xmath184 , and thus @xmath185 and @xmath186}r_i$ ] .",
    "furthermore , we make the assumption that @xmath177 and all the tool costs are such that  @xmath187 $ ] , @xmath188 $ ] , @xmath189 $ ] .",
    "one can easily meet this assumption by dividing all the tool costs  @xmath190 by @xmath157 for all @xmath188 $ ] and @xmath35 $ ] .",
    "it turns out that the above instance of the min - max rs problem with the scaled costs is an instance of the _ minimax integer program _ discussed in  @xcite .",
    "therefore , we now construct @xmath191 as follows ( see  @xcite ) : independently , for each @xmath38 $ ] , pick one item @xmath192 from @xmath14 with probability @xmath193 , set @xmath194 and @xmath195 for the remaining items @xmath196 .",
    "it is clear that  @xmath191 represents a feasible tool selection .",
    "let @xmath197 denote the matrix corresponding to the scenario constraints  ( [ sc ] ) , i.e. @xmath198^{k\\times n}$ ] and @xmath199 } c_{kj } z_j$ ] stands for the l.h.s value of the scenario constraint  @xmath200 for solution  @xmath191 .",
    "it holds @xmath201=(\\mathbf{c } \\pmb{x}^*)_k\\leq l^*=1 $ ] for all @xmath153 $ ] , due to the linearity of expectation .",
    "we can make the assumption that @xmath202 for all  @xmath153 $ ] , which can be satisfied by adding slack variables to the constraints  ( [ sc ] ) .",
    "now , an analysis similar to that in  ( * ? ? ?",
    "* the proof of theorem  6.1 ) shows that @xmath203 is at most @xmath47 for each @xmath153 $ ] with high probability .",
    "we thus get a randomized @xmath47 approximation algorithm for the min - max rs problem .    in order to derandomize the above algorithm",
    ", one can use the _ method of pessimistic estimators _",
    "however , this method assumes that one can perform the computations with real numbers ( in particular exponentials ) with high precision in constant time .",
    "thus , it fails in the ram model , when @xmath204^{k\\times n}$ ] ( see  @xcite , for comments ) .",
    "however , it works in the ram model when @xmath205 .",
    "note that this particular case , i.e. min - max rs with a binary matrix , is equivalent to the _ vector selection _",
    "problem studied in  @xcite .",
    "we can thus formulate the analogue of results given in  @xcite . the following formulation , which provides bounds on rounding errors , will be very useful in a derandomization of the randomized algorithm in the ram model .",
    "let @xmath205 and let @xmath206\\cap { \\mathbb{q}})^n$ ] be any solution that satisfies constraints  ( [ hc ] ) .",
    "then in the ram model a rounding @xmath207 satisfying  ( [ hc ] ) can be computed , by the method of pessimistic estimators in @xmath208 time , such that the rounding error @xmath209 is @xmath210 for all @xmath188 $ ] .",
    "[ thmder1 ]    the theorem can be proved in the same way as in  ( * ? ? ?",
    "* theorems 5 and 6 ) .",
    "we now extend theorem  [ thmder1 ] to the case of @xmath211 \\cap { \\mathbb{q}})^{k\\times n}$ ] .",
    "we make use of the derandomization presented in  @xcite , which consists in approximating  @xmath197 by binary expansions and applying the method of pessimistic estimators to binary matrices ( in our case applying theorem  [ thmder1 ] ) .",
    "let @xmath211 \\cap { \\mathbb{q}})^{k\\times n}$ ] and let @xmath206\\cap { \\mathbb{q}})^n$ ] be any solution that satisfies constraints  ( [ hc ] ) . then a solution @xmath207 can be deterministically computed in @xmath212 time such that @xmath191 satisfies  ( [ hc ] ) and @xmath203 is of value @xmath210 for all @xmath188 $ ] .",
    "[ deramth ]    the proof goes in the same manner as in  ( * ? ? ?",
    "* theorem 2 ) .",
    "we present it here to show the idea and for the completeness .",
    "set @xmath213 and express each entry of  @xmath197 in @xmath25-bit binary form .",
    "this can be done in @xmath212 time .",
    "let us denote by @xmath214 the @xmath25-bits representation of  @xmath197 , namely @xmath215 } 2^{-l}\\mathbf{c}^{(l)}$ ] , where @xmath216 .",
    "clearly , @xmath217 , @xmath153 , j\\in [ n]$ ] .",
    "thus , @xmath218 for every @xmath219^n$ ] .",
    "we now apply theorem  [ thmder1 ] to the solution  @xmath220 and the @xmath221 binary matrix consisting of the rows of the binary matrices @xmath222 , @xmath223 $ ] and get in @xmath224 time ( and thus in @xmath212 time ) in the ram model a solution @xmath207 satisfying  ( [ hc ] ) such that for all @xmath188 , l\\in [ t]$ ] the rounding errors are as follows : @xmath225 therefore , @xmath226 } 2^{-l}((\\mathbf{c}^{(l ) } \\pmb{z})_k-    ( \\mathbf{c}^{(l ) } \\pmb{x})_k)|\\leq    \\sum_{l\\in[t ] } 2^{-l}|(\\mathbf{c}^{(l ) } \\pmb{z})_k-(\\mathbf{c}^{(l ) } \\pmb{x})_k|\\nonumber\\\\    & \\overset{\\text{(\\ref{ere})}}{\\leq }    o(\\log ( tk)/\\log\\log ( tk))\\sum_{l\\in[t ] } 2^{-l}\\max\\{1,(\\mathbf{c}^{(l ) } \\pmb{x})_k\\ } \\nonumber\\\\     & \\leq o(\\log ( tk)/\\log\\log ( tk))\\sum_{l\\in[t ] } 2^{-l}(1+(\\mathbf{c}^{(l ) } \\pmb{x})_k)\\nonumber\\\\     & \\leq o(\\log ( tk)/\\log\\log ( tk))(1+(\\mathbf{\\tilde{c } } \\pmb{x})_k ) .",
    "\\label{ere1 }    \\end{aligned}\\ ] ] let us analyze a performance of the solution  @xmath191 : @xmath227 the theorem follows when @xmath228 for some constant @xmath229 , because it holds @xmath230 .",
    "we can satisfy this assumption by adding a number of zero cost ( dummy ) scenarios , if necessary .",
    "alternatively , we can handle the case with a small number of scenarios ( e.g. , @xmath231 , for @xmath232 ) by applying some algebraic techniques ( see , e.g. ,  @xcite ) .    from theorem  [ deramth ] and",
    "the fact that @xmath233 is a feasible solution to @xmath161 , we immediately get the following corollary :    min - max rs has a polynomial , deterministic @xmath47 approximation algorithm , where @xmath2 and @xmath42 are parts of the input .",
    "there is still an open question concerning the min - max regret rs problem , when both  @xmath2 and @xmath42 are parts of the input . for this problem",
    ", there exists a @xmath2-approximation algorithm , known in the literature , and @xmath44 lower bound on the approximability of the problem , given in this paper .",
    "so , constructing a better approximation algorithm for min - max regret rs is an interesting subject of further research .",
    "a.  srinivasan .",
    "approximation algorithms via randomized rounding : a survey . in m.",
    "karoski and h.  j. prmel , editors , _ series in advanced topics in mathematics _ , pages 971 .",
    "polish scientific publishers pwn , 1999 ."
  ],
  "abstract_text": [
    "<S> in this paper new complexity and approximation results on the robust versions of the representatives selection problem , under the scenario uncertainty representation , are provided , which extend the results obtained in the recent papers by dolgui and kovalev ( 2012 ) , and deineko and woeginger ( 2013 ) . </S>",
    "<S> namely , it is shown that if the number of scenarios is a part of input , then the min - max ( regret ) representatives selection problem is not approximable within a ratio of @xmath0 for any @xmath1 , where @xmath2 is the number of scenarios , unless the problems in np have quasi - polynomial time algorithms . an approximation algorithm with an approximation ratio of @xmath3 for the min - max version of the problem </S>",
    "<S> is also provided .    robust optimization , selection problem , uncertainty , computational complexity </S>"
  ]
}
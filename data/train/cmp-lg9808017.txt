{
  "article_text": [
    "earley parsing is one of the most commonly used methods for the ( automatic ) syntactic analysis of natural language sentences , given a context - free grammar model .",
    "this method does not use backtracking , resulting in time and space efficiency , and is quite flexible , in that it does not require the input grammar to be cast in any particular form .",
    "earley parsing was first defined in  @xcite , in the context of formal language parsing .",
    "this method has later been rediscovered in  @xcite from the perspective of application to natural language processing , where it was called _",
    "active chart parsing_. active chart parsing makes also use of a data structure , called _ agenda _ , which allows a more flexible control of competing analyses .",
    "a considerable number of results and applications regarding earley parsing have been published in the literature . from a theoretical perspective ,",
    "improvements of the earley algorithm have been reported in  @xcite , @xcite and  @xcite .",
    "several reformulations of earley parsing have also been presented .",
    "most remarkably , in  @xcite earley parsing is related to the deterministic simulation of a particular kind of nondeterministic pushdown automaton , and a recursive reformulation of earley parsing has been proposed in  @xcite .    from the perspective of natural language parsing , the earley method has been adapted to work with context - free grammars enriched with feature structures in  @xcite , @xcite and  @xcite , and to cope with on - line semantic interpretation in  @xcite .",
    "comparison of earley parsing with other parsing strategies has been experimentally carried out and reported in  @xcite and  @xcite .    in this paper",
    "we focus on a drawback of the earley algorithm : the recognition of a production within the input is started by looking for the constituents in its right - hand side , proceeding from left to right . in this process",
    ", the algorithm keeps track of the position within the input at which the recognition has started .",
    "since this information is needed only if the whole recognition can be carried to an end , the algorithm behaves in a rather inefficient way in several cases in which production recognition can not be successfully completed .",
    "we propose a variant of the original method , in which the problem is solved by delaying some of the computation until the involved productions have been fully recognized .",
    "this is achieved using an idea first presented in  @xcite in the context of left - corner parsing , as it will be discussed at length in the final section . when applied in the framework of active chart parsing , our technique results in the `` inversion '' of the fundamental rule  @xcite that combines a left active edge with a right inactive edge .",
    "although our proposal does not result in an asymptotic improvement of the time and space complexity of the earley algorithm , reported experimental results provide evidence that in practical cases our method achieves an increase in time and space efficiency .",
    "the remainder of this paper is organized as follows . in section  [ s : prel ] some preliminaries are discussed .",
    "we review the earley parsing method in section  [ s : earley ] , and then introduce our variant in section  [ s : variant ] .",
    "some empirical results are given in section  [ s : empiric ] , and related work is discussed in section  [ s : disc ] .",
    "we introduce the formal notation that will be used throughout the paper .",
    "a string @xmath0 is a finite sequence of symbols over some alphabet .",
    "we denote as @xmath1 the length of @xmath0 , and as @xmath2 the ( unique ) string of length zero .",
    "the set of all strings over some alphabet @xmath3 , @xmath2 included , is denoted @xmath4 .",
    "a context - free grammar ( cfg ) is a rewriting system @xmath5 , where @xmath6 and @xmath7 are two finite , disjoint sets of terminal and nonterminal symbols , respectively , @xmath8 is the start symbol , and @xmath9 is a finite set of productions .",
    "each production has the form @xmath10 with @xmath11 and @xmath12 .",
    "the size of @xmath13 , written @xmath14 , is defined as @xmath15 .",
    "we generally use symbols @xmath16 to range over @xmath7 , symbols @xmath17 to range over @xmath6 , symbols @xmath18 to range over @xmath19 , symbols @xmath20 to range over @xmath21 , and symbols @xmath22 to range over @xmath23 . for a fixed grammar , the binary relation @xmath24 is defined over @xmath21 such that @xmath25 whenever @xmath10 belongs to @xmath9 .",
    "we will mainly use the reflexive and transitive closure of @xmath24 , denoted @xmath26 .",
    "we briefly present here the earley algorithm , before introducing the variant of this method in the next section .",
    "let @xmath5 be a cfg .",
    "we associate with @xmath13 a set of symbols , called _ dotted items _ , specified as : @xmath27 { \\,\\mid\\,}(a { \\rightarrow}\\alpha \\beta ) \\in p \\}.\\end{aligned}\\ ] ] dotted items are used below to represent intermediate steps in the process of recognition of a production of the grammar , where the sequence of symbols in between the arrow and the dot indicates the sequence of constituents recognized so far at consecutive positions within the input string .",
    "more precisely , given a production @xmath28 , @xmath29 , the process of recognition of the right - hand side of @xmath30 is carried out in several steps .",
    "we start from item @xmath31 , attesting that the empty sequence of constituents has been collected so far .",
    "this item represents a prediction for @xmath30 .",
    "we then proceed with item @xmath32 after the recognition of a constituent @xmath33 , and so on .",
    "production @xmath30 has been fully recognized only if we reach item @xmath34 , attesting therefore the complete recognition of a constituent @xmath35 . in active chart parsing ,",
    "items in @xmath36 with the dot not at the rightmost position of the right - hand side are used to label the so called _ active edges_.    given a string @xmath37 , with @xmath38 and each @xmath39 a terminal symbol , we call _ position _ within @xmath0 any integer @xmath40 such that @xmath41 . in what follows",
    ", @xmath42 is a square matrix whose entries are subsets of @xmath36 and are addressed by indices that are positions within the input string .",
    "entries are denoted as @xmath43 .",
    "the insertion by the algorithm of item @xmath44 $ ] in @xmath43 , @xmath45 , attests the fact that the sequence of constituents in @xmath46 exactly spans the substring @xmath47 of the input .",
    "( see below for a more precise characterization of the algorithm . )",
    "control flow is not specified in the method below , since it is usually regulated by means of a data structure called _ agenda _ , which directs the incremental construction of the table by means of an iteration : starting from an empty table , items are added as long as needed , and with the desired priority .",
    "[ a : earley ] let @xmath5 be a cfg .",
    "let @xmath37 be an input string , @xmath38 , and @xmath48 for @xmath49 .",
    "compute the least @xmath50 table @xmath42 such that @xmath51 \\in e_{0,0}$ ] for each @xmath52 , and +    [ cols= \" < , < , < \" , ]      + note that the transformed grammar is in _ two normal form _ , which means that the length of right - hand sides of productions is at most  2 .",
    "table  [ results ] presents the costs of parsing the test sentences .",
    "these data show that there is a significant gain in space and time efficiency in moving from algorithm  [ a : earley ] to algorithm  [ a : variant ] .",
    "the biggest improvement in the number of parsing steps is observed in the case of the alvey grammar , where it amounts to a decrease by over 41% .",
    "the biggest improvement in the total number of items stored in the tables occurs for de deltra grammar , where it amounts to a decrease by over 30% . only for _ individual _ sentences for algol  68",
    "was there an increase in time and space , by at most 1.2% and 0.2% , respectively",
    ".    in the case of algol 68 and alvey , it is striking that @xmath53 is so much smaller than @xmath54 and @xmath42 .",
    "this may be explained by the relatively low level of ambiguity , as compared to the other two grammars ( see figure  [ grammars ] ) .",
    "both the earley algorithm and its variant predict many productions in the form of items in @xmath54 and @xmath42 , but only a limited number of these productions will be recognized in their entirety , resulting in items in @xmath53 .",
    "although less striking in these cases , we see that also for corrie and deltra @xmath53 is smaller than @xmath54 .",
    "this suggests that the potential undesirable behaviour of the variant with regard to the original earley algorithm , as discussed in the previous section , does not occur in practice .",
    "the approach using the grammar transformation is not competitive with the other two approaches .",
    "although the number of steps is sometimes slightly smaller than in the case of algorithm  [ a : earley ] , the space requirements are larger in all cases .",
    "we have presented a variant of the earley algorithm and have discussed cases in which it achieves space and time savings with respect to the original algorithm .",
    "our variant is based on the following two main ideas .",
    "first , we do not compute left positions of productions until we are granted that production recognition can be completed within the input .",
    "second , we only use suffix items as defined in  ( [ e : ieset ] ) .",
    "the idea of dropping left positions of productions has first been proposed by  @xcite , where a functional realization of left - corner parsing is presented .",
    "this idea was rediscovered by  @xcite and expressed in a more direct way , using a table similar to our table @xmath54 .",
    "the idea of using suffix items has also been proposed in  @xcite .",
    "it has later been rediscovered by  @xcite .",
    "it was also applied to lr parsing in @xcite . in the literature on chart parsing ,",
    "e.g. in  @xcite , one sometimes also finds a weaker form of this idea , where the set of items used in labeling edges is @xmath55 { \\,\\mid\\,}(a { \\rightarrow}\\alpha \\beta ) \\in p \\}$ ] .",
    "one observes that , with respect to items @xmath56 $ ] from @xmath36 , the @xmath46 is omitted as in the case of @xmath57 , yet the left - hand side @xmath35 is retained . if this idea is not combined with the idea of dropping left positions , then the benefit of this is limited to grammars containing many pairs of productions of the form @xmath58 and @xmath59 , with @xmath60 .",
    "the idea of using suffix items is related to the difference between two kinds of earley parsing for the id / lp formalism : in  @xcite the items are of the form @xmath61 $ ] , where @xmath46 is a string of constituents and @xmath62 is a set of constituent , whereas in  @xcite , both @xmath46 and @xmath62 are sets .",
    "this allows representation of several items according to  @xcite by a single item according to  @xcite , as has been argued in  ( * ? ? ?",
    "* section  9.2 ) .",
    "algorithm schemata and data structures in syntactic processing .",
    "technical report csl-80 , xerox palo alto research center , palo alto , ca , 1980 . also in : b. j. grosz , k. sparck jones and b. l. webber , editors , _ natural language processing _ , pages 35 - 70 , kaufmann , los altos , ca , 1986 ."
  ],
  "abstract_text": [
    "<S> the earley algorithm is a widely used parsing method in natural language processing applications . </S>",
    "<S> we introduce a variant of earley parsing that is based on a `` delayed '' recognition of constituents . </S>",
    "<S> this allows us to start the recognition of a constituent only in cases in which all of its subconstituents have been found within the input string . </S>",
    "<S> this is particularly advantageous in several cases in which partial analysis of a constituent can not be completed and in general in all cases of productions sharing some suffix of their right - hand sides ( even for different left - hand side nonterminals ) . </S>",
    "<S> although the two algorithms result in the same asymptotic time and space complexity , from a practical perspective our algorithm improves the time and space requirements of the original method , as shown by reported experimental results . </S>"
  ]
}
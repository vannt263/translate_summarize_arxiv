{
  "article_text": [
    "for computational problems regarding a split reductive algebraic group @xmath3 defined over a field @xmath4 , it is often useful to calculate within its lie algebra @xmath2 over @xmath4 .",
    "for instance , the conjugacy question for two split maximal tori in @xmath3 can often be translated to a conjugacy question for two split toral subalgebras of @xmath2 .",
    "a _ maximal toral subalgebra _",
    "@xmath5 of @xmath2 is a commutative subalgebra consisting of semisimple elements ( recall that an element @xmath6 is called semisimple if it is contained in the @xmath7-subalgebra generated by @xmath8 ) , and it is maximal ( with respect to inclusion ) among subalgebras of @xmath2 with these properties .",
    "for such a subalgebra we have that multiplication ( in @xmath2 ) by each of its elements is semisimple , i.e. ,  each of its elements has a diagonal form with respect to a suitable basis over a large enough extension field of @xmath4 .",
    "a maximal toral subalgebra @xmath5 is called _ split _ ( or @xmath4-_split _ ) if , for every @xmath9 , left multiplication by @xmath10 , denoted @xmath11 , has a diagonal form with respect to a suitable basis over @xmath4 .",
    "such a subalgebra is the lie algebra of a split maximal torus in @xmath3 .",
    "recall that @xmath12 is called a _",
    "cartan subalgebra _ of @xmath2 if @xmath12 is nilpotent and @xmath13 .",
    "maximal toral subalgebras and cartan subalgebras are closely related : if @xmath5 is a maximal toral subalgebra of @xmath2 , then @xmath14 is a cartan subalgebra of @xmath2 ( * ? ? ?",
    "* proposition 15.1 ) .    in the case that @xmath4 is not of characteristic @xmath0 or @xmath1 a las vegas algorithm exists to compute split maximal toral subalgebras , due to cohen and murray ( * ?",
    "* lemma 5.7 ) .",
    "independently , ryba developed a las vegas algorithm for computing split cartan subalgebras @xcite .",
    "unfortunately , ryba also excludes characteristic @xmath0 and , if the lie algebra is of type @xmath15 or @xmath16 , characteristic @xmath1 .",
    "it is , however , claimed that the algorithm may work in some cases in characteristic @xmath0 , but not in all cases ( cf .",
    "* section 9.3 ) ) .",
    "in this paper we present heuristic algorithms that , given a reductive lie algebra @xmath2 over a finite field of characteristic @xmath0 or @xmath1 , find a split maximal toral subalgebra of @xmath2 .",
    "we present separate algorithms for the two characteristics .",
    "each of these algorithms is las vegas : it either returns a subalgebra @xmath5 of the correct form ( with nonzero probability ) , or it returns * fail*. the algorithm for the characteristic @xmath0 case has been described before in the author s phd thesis ( * ? ? ?",
    "* chapter 3 ) .",
    "the remainder of this section sets the theoretical framework we need to describe the algorithms . in section [ sec_scsa_c4 ]",
    "we investigate a particular lie algebra and a split maximal toral subalgebra that is not contained in a split toral subalgebra of maximal dimension . in section [ sec_stsa_countingrss_new ]",
    "we study the occurrence ( or lack thereof ) of regular semisimple elements in lie algebras over fields of characteristic @xmath0 , showing that the las vegas algorithm by cohen and murray can not easily be applied in those cases . in section [ sec_mstsa_algorithm3 ]",
    "we describe a heuristic algorithm to find split maximal toral subalgebras in the characteristic @xmath1 case , and in section [ sec_mstsa_algorithm2 ] we describe such an algorithm for the characteristic @xmath0 case",
    ". finally , in section [ sec_stsa_notesimpl ] we comment on the implementation and performance of these algorithms .",
    "our treatment of lie algebras and the corresponding algebraic groups rests on the theory developed mainly by chevalley and available in the excellent books by borel @xcite , humphreys @xcite , and springer @xcite .",
    "our set - up is as in @xcite , a publication we will repeatedly refer to because of the extensive analysis it contains on the structure of reductive lie algebras over fields of small characteristic .",
    "we refer to @xcite for more details on our set - up and restrict ourselves to the essential notions here .",
    "split reductive algebraic groups are determined by their fields of definition and their root data ( * ? ? ?",
    "* theorem 9.4.3 ) . throughout this paper",
    "we let @xmath17 be a _ root datum of rank _ @xmath18 .",
    "this means @xmath19 and @xmath20 are dual free @xmath21-modules of dimension @xmath18 with a bilinear pairing @xmath22 such that the induced map @xmath23 is an isomorphism ( and then so is the induced map @xmath24 ) , @xmath25 is a finite subset of @xmath19 and @xmath26 a finite subset of @xmath20 , and called the _ roots _ and _ coroots _ , respectively , and there is a one - to - one correspondence @xmath27 such that @xmath28 for all @xmath29 . both the roots @xmath25 and the coroots @xmath26 should form a root system in the traditional sense .",
    "the irreducible root systems are well - known , and described in cartan s notation @xmath30 @xmath31 , @xmath32 @xmath33 , @xmath34 @xmath35 , @xmath36 @xmath37 , @xmath38 @xmath39 , @xmath40 , @xmath41 .",
    "a _ weight _ is a vector @xmath42 in the euclidian space @xmath43 such that @xmath44 for all @xmath45 .",
    "these weights form a weight lattice , and the _ fundamental group _ is defined to be the quotient of this weight lattice by the root lattice @xmath46 .",
    "the subgroups of this fundamental group parametrize the possible semisimple root data with a given root system @xmath25 via the quotient @xmath47 . for sake of completeness",
    "we remark that the fundamental group is @xmath48 for @xmath49 ; @xmath50 for @xmath51 and @xmath52 ; @xmath53 for @xmath54 if @xmath18 is odd , @xmath55 for @xmath54 if @xmath18 is even ; @xmath56 for @xmath57 ; @xmath50 for @xmath58 ; and it is trivial for @xmath59 , @xmath60 , and @xmath16 .",
    "we use this observation to define the _ isogeny type _ of a root datum .",
    "if @xmath47 is the trivial group , @xmath61 is said to be of _ adjoint _ isogeny type ; if on the other hand @xmath47 is the full fundamental group , @xmath61 is said to be of _ simply connected _ isogeny type .",
    "if neither of these is the case , @xmath61 is said to be of _ intermediate _ isogeny type .",
    "note that the last case only occurs for root systems of type @xmath49 and @xmath54 .",
    "we denote an adjoint root datum whose root system is of type @xmath62 by @xmath63 , and its simply connected variant by @xmath64 .",
    "intermediate root data of type @xmath49 will be denoted by @xmath65 , where @xmath66 ; intermediate root data of type @xmath54 will be denoted by @xmath67 if @xmath18 is odd , and by @xmath67 , @xmath68 , and @xmath69 if @xmath18 is even .",
    "[ ex_rootdata_a1 ] there are two root data of type @xmath70 , namely @xmath71 and @xmath72 . in both cases , @xmath73 ; we may take @xmath74 to be a basis of @xmath19 and @xmath75 a basis of @xmath20 . for @xmath71 ,",
    "the roots are taken to be @xmath76 , @xmath77 , the coroots @xmath78 , @xmath79 , and the pairing between @xmath19 and @xmath20 is simply multiplication , so that @xmath80 and @xmath81 .",
    "conversely , for @xmath72 , the roots are taken to be @xmath82 , @xmath83 , the coroots @xmath84 , @xmath85 , and the pairing again is multiplication , so that @xmath86 and @xmath87 .      given a root datum @xmath61 we consider the free @xmath21-module @xmath88 where the @xmath89 are formal basis elements .",
    "the rank of @xmath90 is @xmath91 determined by the following rules : @xmath92 & = & 0 , & \\mathrm{(cb}\\mathbb z\\mathrm{1)}\\\\ \\mbox{for } y \\in y , \\alpha \\in \\phi : & [ x_\\alpha , y ] & = & \\langle \\alpha , y \\rangle x_\\alpha , & \\mathrm{(cb}\\mathbb z\\mathrm{2)}\\\\ \\mbox{for } \\alpha \\in \\phi : & [ x_{-\\alpha } , x_\\alpha ] & = & \\alpha{^\\vee } , & \\mathrm{(cb}\\mathbb z\\mathrm{3)}\\\\ \\mbox{for } \\alpha,\\beta \\in \\phi , \\alpha \\neq \\pm \\beta : & [ x_\\alpha , x_\\beta ] & = &     \\left\\ { \\begin{array}{ll }    n_{\\alpha,\\beta } x_{\\alpha+\\beta } & \\mbox{if } \\alpha + \\beta \\in \\phi , \\cr    0 & \\mbox{otherwise . }",
    "\\end{array } \\right .",
    "& \\mathrm{(cb}\\mathbb z\\mathrm{4 ) } \\end{array}\\ ] ] the @xmath93 are integral structure constants chosen to be @xmath94 , where @xmath95 is the biggest number such that @xmath96 is a root and the signs are chosen ( once and for all ) so as to satisfy the jacobi identity .",
    "it is easily verified that @xmath97 and it is a well - known result ( see for example ( * ? ? ?",
    "* proposition 4.4.2 ) ) that such a product exists .",
    "@xmath90 is called a _ chevalley lie algebra_.    for any field @xmath4 we define @xmath98 to be the lie algebra @xmath99 .",
    "[ ex_chevlie_a1 ] corresponding to the two root data of type @xmath70 described in example [ ex_rootdata_a1 ] there exist two chevalley lie algebras of type @xmath70 .",
    "both are @xmath1-dimensional and have formal basis elements @xmath89 , @xmath100 , and @xmath10 , but their multiplication differs .",
    "the multiplication for the lie algebra of type @xmath71 is determined by @xmath101 = -2h$ ] , @xmath102 = x_\\alpha$ ] , and @xmath103 = -x_{-\\alpha}$ ] ( observe that the multiplication on all other algebra elements follows from bilinearity and anti - symmetry ) . on the other hand , for @xmath72 we have @xmath101 = -h$ ] , @xmath102 = 2x_\\alpha$ ] , and @xmath103 = -2x_{-\\alpha}$ ] .    it is easy to see that @xmath104 and @xmath105 are isomorphic unless @xmath106 .    a basis of @xmath90 that consists of a basis of @xmath20 and the formal elements @xmath89 and satisfies @xmath107@xmath108 is called a _",
    "chevalley basis _ of the lie algebra @xmath90 with respect to the split cartan subalgebra @xmath20 and the root datum @xmath61 .",
    "if no confusion is imminent we just call this a _ chevalley basis _ of @xmath90 .",
    "the interest in chevalley lie algebras comes from the following result .",
    "[ thm_liealg_has_chevbas ] suppose that @xmath2 is the lie algebra of a split semisimple algebraic group @xmath3 over @xmath4 with root datum @xmath109 .",
    "then @xmath110 , and if @xmath3 is simple then @xmath61 is irreducible .    in light of this theorem",
    ", we will view all lie algebras as chevalley lie algebras in the remainder of this paper .",
    "moreover , we will only consider chevalley lie algebras with an irreducible root datum , as the algorithms presented easily generalise to the case of an arbitrary root datum .",
    "we assume lie algebras to be given as a vector space together with a list of structure constants that define the products of vectors , i.e. , we are given a field @xmath4 , a @xmath111-dimensional vector space @xmath112 over @xmath4 with basis @xmath113 , and structure constants @xmath114 that are understood to mean @xmath115 = \\sum_{k=1}^d c_{ijk } b_k.\\ ] ]    we consider the lie algebra for @xmath71 defined in example [ ex_chevlie_a1 ] .",
    "if we take the basis elements to be @xmath116 , @xmath117 , and @xmath118 , the only nonzero @xmath114 are : @xmath119 , @xmath120 , @xmath121 , @xmath122 , @xmath123 , and @xmath124 .",
    "this is the standard way of representing a finite dimensional lie algebra on a computer ( see ( * ? ? ?",
    "* section 1.5 ) ) . in general",
    ", of course , the basis we are given is arbitrary and not of a particularly nice form such as a chevalley basis .",
    "in fact , when a chevalley basis is known a split maximal toral subalgebra is easily recovered : it simply is @xmath20 .",
    "let @xmath125 be a root datum , fix a basis @xmath126 of @xmath20 , let @xmath4 be a field , @xmath127 the lie algebra of type @xmath61 over @xmath4 , and let @xmath128 and @xmath129 .",
    "we call @xmath5 the _ standard split maximal toral subalgebra _ of @xmath2 .",
    "we define a _ root of @xmath5 on @xmath2 _ to be the function @xmath130 where @xmath18 is the rank of @xmath61 .",
    "note that @xmath131 actually maps into @xmath4 , but by construction the image actually consists of integers ( cf",
    ". equations @xmath132 ",
    "@xmath108 ) .",
    "furthermore , we define the _ root space corresponding to @xmath131 _ to be @xmath133    we consider lie algebras with root data @xmath134 and @xmath135 over a number of different fields . we denote the roots by @xmath136 .",
    "first , suppose @xmath137 . in this case , for both @xmath134 and @xmath135 ,",
    "all @xmath138 are @xmath139-dimensional and distinct .",
    "for example , @xmath140 .",
    "second , suppose @xmath4 is a field of characteristic @xmath0 .",
    "then , for both @xmath134 and @xmath135 , all @xmath138 are @xmath0-dimensional .",
    "for example , @xmath141 .",
    "finally , suppose @xmath4 is a field of characteristic @xmath1 .",
    "recall from equation ( cb@xmath1422 ) that the action of @xmath5 on @xmath2 ( in particular on the @xmath89 ) depends on the isogeny type of the root datum , so that the root spaces may differ between @xmath134 and @xmath135 . in this case",
    "they indeed do . for @xmath134 ,",
    "all @xmath138 are @xmath139-dimensional and distinct . however , for @xmath135 , we have @xmath143",
    "for the development of a recursive algorithm for finding split maximal toral subalgebras it would be very helpful to know in advance that every split toral subalgebra is contained in a split toral subalgebra that is maximal among all ( not necessarily split ) toral subalgebras .",
    "the algorithm by cohen and murray relies on a similar ( but weaker ) assertion ( cf .",
    "* proposition 5.8 ) ) .",
    "this is , however , not in general true in characteristic @xmath0 , as we will show in the following example .",
    "we consider the chevalley lie algebra @xmath2 of type @xmath144 over @xmath145 , with root datum @xmath109 and chevalley basis elements @xmath146 .",
    "furthermore , we denote the simple roots of @xmath25 by @xmath147 , where @xmath148 , and @xmath149 are short roots , and @xmath150 is long .",
    "its non - simple positive roots are then @xmath151 where @xmath152 denotes @xmath153 , and the negative roots are defined accordingly .",
    "now let @xmath154 and @xmath155 .",
    "[ prop_mtsa_counterex ] the subalgebra @xmath5 is a @xmath1-dimensional split toral subalgebra of @xmath2 .",
    "there , however , does not exist a split toral subalgebra @xmath156 of @xmath2 of dimension @xmath157 such that @xmath158 .",
    "it is straightforward to verify that @xmath5 is a split toral subalgebra of @xmath2 : on diagonalization of @xmath5 in the adjoint representation we obtain @xmath1 eigenspaces of dimension @xmath159 ( corresponding to roots @xmath160 , @xmath161 , and @xmath162 ) and an eigenspace @xmath163 of dimension @xmath164 ( corresponding to the root @xmath165 and @xmath5 itself ) .",
    "now suppose there exists a split toral subalgebra @xmath156 of dimension @xmath157 containing @xmath5 .",
    "this would imply the existence of a @xmath166 such that @xmath167 and @xmath168 = 0 $ ] .",
    "furthermore , by the structure of the root spaces of @xmath2 ( cf .",
    "* proposition 3 ) ) , diagonalization with respect to @xmath156 would give @xmath169 eigenspaces of dimension @xmath157 , and one eigenspace @xmath170 of dimension @xmath164 ( where @xmath171 ) .",
    "this means in particular that @xmath172 and that @xmath173 should have a unique eigenvalue on @xmath163 . since @xmath168 = 0 $ ] and @xmath174 ,",
    "the eigenvalue of @xmath173 on @xmath163 must be @xmath175 , and thus @xmath176 , implying @xmath177 .",
    "however , @xmath178 is @xmath157-dimensional and @xmath179 , so that ( modulo linear combinations of @xmath180 , and up to scalar multiples ) there is only one choice for @xmath173 : @xmath181 because the characteristic polynomial of @xmath182 is equal to @xmath183 , we see that @xmath173 is not split , and that therefore @xmath184 is not a split toral subalgebra : a contradiction .",
    "this demonstrates that @xmath5 is an example of a split toral subalgebra that is not contained in a split toral subalgebra that is maximal among all toral subalgebras .",
    "in @xcite cohen and murray describe an algorithm for lang s theorem , which needs an algorithm to find split maximal toral subalgebras of lie algebras .",
    "although they do not claim their algorithm is valid in the characteristic @xmath0 case , some propositions are .",
    "we shall first introduce the concept of regular semisimple elements in order to expose some of the difficulties in characteristic @xmath0 .",
    "an element @xmath185 of a lie algebra @xmath2 is called _ regular semisimple _ if its centralizer @xmath186 is a maximal toral subalgebra .",
    "we denote the set of regular semisimple elements of @xmath2 by @xmath187 .",
    "moreover , if @xmath2 is the lie algebra of a group of lie type with root datum @xmath61 we let @xmath188 be the set of elements @xmath189 for which there exists a @xmath190 such that @xmath191 and @xmath192 , where @xmath193 is the standard split maximal torus , @xmath194 the corresponding split maximal toral subalgebra , @xmath195 denotes the frobenius automorphism of the field , and @xmath196 denotes a lift of the weyl group element @xmath42 . in this section",
    "we are primarily interested in split toral subalgebras , hence in @xmath197 .",
    "the time analysis in @xcite uses the fact that a significant fraction of the elements in the lie algebra is regular semisimple . in the following proposition",
    "we show that this is not always true over fields of characteristic @xmath0 .",
    "[ prop_noregularsemisimple_elts ] let @xmath4 be a field of characteristic @xmath0 , let @xmath61 be a root datum of type @xmath72 , @xmath198 , or @xmath199 ( where @xmath200 ) , and let @xmath2 be the lie algebra of type @xmath61 over @xmath4 .",
    "there exist no regular semisimple elements in @xmath2 .",
    "we refer to the analysis of these lie algebras detailed in ( * ? ? ?",
    "* proposition 3 , table 1 ) , were it is shown that in the cases mentioned some of the root spaces are contained in the @xmath175-eigenspace of a split maximal toral subalgebra .",
    "this in particular implies that if @xmath5 is a split maximal toral subalgebra of @xmath2 then @xmath201 .",
    "so suppose @xmath202 , so that @xmath203 , for some split maximal toral subalgebra @xmath5 of @xmath2 .",
    "however , @xmath204 since @xmath205 , so that @xmath206 , a contradiction .",
    "this shows that in some cases in characteristic @xmath0 there is a complete absence of regular semisimple elements",
    ". a straightforward counting exercise ( * ? ? ?",
    "* section 3.2 ) shows that in other cases in characteristic @xmath0 regular semisimple elements are scarce as well , and even over small fields of odd characteristic the number of regular semisimple elements may be quite small .",
    "splitmaximaltoralsubalgebra3finding a split maximal toral subalgebra in char .",
    "3smtsa3 * in : * a lie algebra @xmath2 over a finite field @xmath4 of characteristic @xmath1 , + * out : * a split maximal toral subalgebra @xmath5 of @xmath2 . +",
    "* begin * +    * let * @xmath207 , @xmath208 , @xmath209 , +    * while * @xmath210 * do * + _ / * base case * / _ +    * if * @xmath211 = 0 $ ] * and * @xmath212 is split semisimple in @xmath2 * then * +    * let * @xmath213 , +    * return * @xmath5",
    ". +    * end if * + _ / * try to find a new element of @xmath5 * / _ +    * let * @xmath214 be the adjoint representation of @xmath215 , +    * let * @xmath10 be a random non - zero semisimple element of @xmath215 , +    * for each * pair of eigenvalues @xmath216 of @xmath217 * do * +    * let * @xmath218 be a random element of the @xmath219-eigenspace of @xmath217 , +    * let * @xmath220 be a random element of the @xmath221-eigenspace of @xmath217 , +    * let * @xmath222 $ ] , +    * if * @xmath223 is a split semisimple element of @xmath2 * then * +    * let * @xmath224 , +    * let * @xmath225 , +    * let * @xmath226 the new pullback of @xmath215 to @xmath2 , +    * break for*. +    * end if*. +    * end for*. +    * end while * , +    * return * @xmath5 . +",
    "* end *    we first remark that the troublesome characteristic @xmath1 cases that ryba @xcite excludes are precisely those cases discussed in ( * ? ? ?",
    "* section 2 ) : the lie algebras whose root datum is either @xmath135 or @xmath227 .",
    "the problems that arise here may be remedied relatively easily , following the observation that even though some root spaces have dimension @xmath1 ( rather than the more desirable dimension @xmath139 ) , the product of random elements of two opposite @xmath1-dimensional eigenspaces is often a split semisimple element .",
    "the algorithm is made explicit as algorithm [ alg_smtsa3 ] : we recursively find a semisimple element @xmath10 , find two opposite eigenspaces @xmath228 and @xmath229 of @xmath10 , and consider random elements @xmath230 and @xmath231 .",
    "if @xmath222 $ ] pulls back to a split semisimple element of @xmath2 , we add @xmath232 to the subalgebra @xmath5 being constructed , and continue in @xmath233 . throughout the algorithm",
    ", @xmath5 is a split toral subalgebra of @xmath2 , @xmath215 is a lie algebra being searched for new split semisimple elements , and @xmath234 is the pullback map from @xmath215 to @xmath2 . note that the image of @xmath234 is not uniquely determined , but it is determined up to addition with elements of @xmath5 .    in section [ sec_stsa_notesimpl ]",
    "we present timings for algorithm [ alg_smtsa3 ] applied to chevalley lie algebras in characteristic @xmath1 .",
    "we remark that in our experience this algorithm is applicable to and yields correct results for all chevalley lie algebras over finite fields of any odd characteristic .",
    "splitmaximaltoralsubalgebra2finding a split maximal toral subalgebra in char .",
    "2smtsa2 * in : * a lie algebra @xmath2 over a finite field @xmath4 of characteristic @xmath0 , + * out : * a split maximal toral subalgebra @xmath5 of @xmath2 . +",
    "* begin * +    * let * @xmath235 where @xmath12 is some cartan subalgebra of @xmath2 , +    * let * @xmath207 , @xmath208 , @xmath209 , +    * while * @xmath210 * and * @xmath236 * do * +    * if * @xmath237 * then * + _ / * take out the center * / _ +    * if * @xmath238 is split semisimple * then let * @xmath239 .",
    "+    * let * @xmath240 , +    * let * @xmath226 .",
    "+    * else * + _ / * try to find a new element of @xmath5 * / _ +    * let * @xmath10 be a random non - zero semisimple element of @xmath215 , +    * if * @xmath241 is split semisimple in @xmath2 * then * +    * let * @xmath242 .",
    "+    * else * + _ / * use this @xmath10 as input for findsplitsemisimpleelt * / _ +    * for each * eigenvalue @xmath219 of @xmath10 * do * +    * let * @xmath112 be the @xmath219-eigenspace of @xmath10 , +    * let * @xmath243  findsplitsemisimpleelt(@xmath112 , @xmath215 , @xmath2 , @xmath234 ) , +    * if * @xmath244  * fail * * then * * break*. +    * end for * , +    * end if * , +    * if * @xmath244  * fail * * then * +    * let * @xmath245 , +    * let * @xmath246 , +    * let * @xmath226 .",
    "+    * end if*. +    * end if*. +    * end while*. + * end *    findsplitsemisimpleeltfinding a split semisimple element in an eigenspacesmtsa_fssse * in : * an eigenspace @xmath112 of a semisimple element of the lie algebra @xmath247 , + and the natural pullback map @xmath248 .",
    "+ * out : * a split semisimple element @xmath249 , or * fail*. + * begin * +    * let * @xmath250 be the subalgebra of @xmath215 generated by @xmath112 , +    * let * @xmath251 be the ideal of @xmath215 generated by @xmath112 , +    * if * @xmath252)=1 $ ] * then * + _ / * case ( a ) * / _ +    * let * @xmath253 $ ] be such that @xmath254 = \\langle h ' \\rangle_{\\mathbb{f}}$ ] .",
    "+    * else if * @xmath255 = i$ ] * and * @xmath252 ) \\in \\{2,3\\}$ ] * then * + _ / * case ( b ) * / _ +    * let * @xmath232 be a random non - zero element of @xmath254 $ ] . +    *",
    "else if * @xmath256 * and * @xmath257 is even * and * @xmath258 ) = 0 $ ] + * and * @xmath252 ) = 0 $ ] * then * + _ / * case ( c ) * / _ +    * find * an @xmath259 such that @xmath260 = e$ ] for all @xmath261 . +    * else if * @xmath262 * and * @xmath255 = s$ ] * and * @xmath252 ) = 2 $ ] * then * + _ / * case ( d ) * / _ +    * let * @xmath232 be a random non - zero element of @xmath254 $ ] . +    * else if * @xmath256 * and * @xmath257 is even * and * @xmath258 ) \\neq 0 $ ] + * and * @xmath252 ) = 0 $ ] * then * + _ / * case ( e ) * / _ +    * find * an @xmath263 such that @xmath260 = e$ ] for all @xmath264 .",
    "+    * else if * @xmath265 is even * and * @xmath252 ) \\neq 0 $ ] * then * + _ / * case ( f ) * / _ +    * let * @xmath232 be a random non - zero element of @xmath254 $ ] +    * end if * , +    * if * @xmath232 is defined and @xmath266 is a split semisimple element of @xmath2 * then * +    * return * @xmath232 .",
    "+    * else * +    * return * * fail*. +    * end if*. + * end *    proposition [ prop_noregularsemisimple_elts ] indicates that the approach for finding split maximal toral subalgebras described by cohen and murray ( * ? ? ?",
    "* section 5 ) will not in general work in the cases covered by the proposition : there simply do not exist any regular semisimple elements in the lie algebra .",
    "moreover , their algorithm relies on the fact that root spaces are @xmath139-dimensional , something that is not true over characteristic @xmath0 ( * ? ? ?",
    "* proposition 3 ) .",
    "ryba explicitly notes ( * ? ? ?",
    "* section 9 ) that the algorithm he describes is not easily extended to work over fields of characteristic @xmath0 , largely because of similar problems .",
    "finally , the counterexample presented in section [ sec_scsa_c4 ] suggests that algorithms for finding split maximal toral subalgebras run the risk of descending into a split toral subalgebra that is not in a split maximal toral subalgebra .    in this section",
    "we describe a heuristic las vegas type algorithm for finding split maximal toral subalgebras in characteristic @xmath0 .",
    "unfortunately , we have no bound on the probability that it completes successfully , and therefore no estimate of the runtime .",
    "however , we do provide the intuition behind the design of the algorithm ( in the remainder of this section ) and we show that the implementation is successful ( we give timings in section [ sec_stsa_notesimpl ] ) .    for the remainder of this section",
    "we let @xmath2 be the lie algebra of a split simple algebraic group defined over a finite field @xmath4 of characteristic @xmath0 , and we assume @xmath2 to be given as a structure constant algebra .",
    "the goal of the algorithm described is to find a split maximal toral subalgebra @xmath5 of @xmath2 .",
    "the general principle is given in algorithm [ alg_smtsa2 ] .",
    "this algorithm repeatedly tries to find a split semisimple element @xmath259 ( initially @xmath207 ) , and then recursively continues the search in @xmath233 .",
    "it attempts to find such split semisimple elements by taking a random non - zero semisimple element @xmath10 , and producing a random split semisimple element using suitable eigenspaces of @xmath10 .",
    "the latter process is described in algorithm [ alg_smtsa_fssse ] .",
    "@xmath267 & [ s , s ] \\cap h & i & [ i , i ] & \\mbox{soln}\\\\                  \\hline          \\hline          \\mathrm a_1{^\\mathrm{ad } } & 2 & 2 & 0 & 0 & 2 & 2 & \\mbox{(c ) } \\cr          \\mathrm a_1{^\\mathrm{sc } } & \\mathbf{2 } & 3 & 1 & 1 & 3 & 1 & \\mbox{(a)}\\cr          \\mathrm a_3{^\\mathrm{sc } } & 4 ^ 3 & 6 & 2 & 2 & l & i & \\mbox{(b)}\\cr          \\mathrm a_3^{(2 ) } & 4 ^ 3 & 5 & 1 & 1 & l-1 & i & \\mbox{(a)}\\cr          \\mathrm b_2{^\\mathrm{ad } } & 2 ^ 2 & 2 & 0 & 0 & 4 & 0 & \\mbox{(c ) } \\cr                 \\;\\lfloor & 4 & 5 & 1 & 1 & 9 & 5 & \\mbox{(a)}\\cr          \\mathrm b_n{^\\mathrm{ad}}\\ ; ( n \\geq 3 ) & 2^n & 2 & 0 & 0 & 2n & 0 & \\mbox{(c ) } \\cr                 \\;\\lfloor           & 4^{n \\choose 2 } & 5 & 1 & 1 & l-1 & i & \\mbox{(a)}\\cr          \\mathrm b_2{^\\mathrm{sc } } & \\mathbf{4 } & 6 & 2 & 2 & l & 6 & \\mbox{(d)}\\cr               \\;\\lfloor & 4 & 5 & 1 & 1 & 5 & 1 & \\mbox{(a)}\\cr          \\mathrm b_3{^\\mathrm{sc } } & 6 ^ 3 & 8 & 2 & 2 &",
    "l & i & \\mbox{(b)}\\cr          \\mathrm b_4{^\\mathrm{sc } } & 2 ^ 4 & 3 & 1 & 1 & 9 & 1 & \\mbox{(a)}\\cr               \\;\\lfloor & 8 ^ 3 & 11 & 3 & 3 & l & i & \\mbox{(b)}\\cr          \\mathrm b_n{^\\mathrm{sc}}\\ ; ( n \\geq 5 ) & 2^n & 3 & 1 & 1 & 2n+1 & 1 & \\mbox{(a)}\\cr               \\;\\lfloor & 4^{n \\choose 2 } & 6 & 2 & 2 & l & i & \\mbox{(b)}\\cr          \\mathrm c_n{^\\mathrm{ad}}\\ ; ( n \\geq 3 ) & 2n & 3n-1 & n-1 & n-1 & l & & \\mbox{(f ) } \\cr               \\;\\lfloor             & 2^{n(n-1 ) } & 3 & 1 & 1 &   & i & \\mbox{(a)}\\cr          \\mathrm c_n{^\\mathrm{sc}}\\ ; ( n \\geq",
    "3 ) & \\mathbf{2n } & 3n & n & n & l &   & \\mbox{(f)}\\cr               \\;\\lfloor             & 4^{n \\choose 2 } & 5 & 1 & 1 &   & i & \\mbox{(a)}\\cr          \\mathrm d_4{^\\mathrm{sc } } & 8 ^ 3 & 11 & 3 & 3 & l & i & \\mbox{(b)}\\cr          \\mathrm d_4^{(1),(n),(n-1 ) } & 4 ^ 6 & 5 & 1 & 1 & l-1 & i & \\mbox{(a)}\\cr          \\mathrm d_n{^\\mathrm{sc}}\\ ; ( n \\geq 5 ) & 4^{n \\choose 2 } & 6 & 2 & 2 & l & i & \\mbox{(b)}\\cr          \\mathrm d_n^{(1)}\\ ; ( n \\geq 5 ) & 4^{n \\choose 2 } & 5 & 1 & 1 & l-1 & i & \\mbox{(a)}\\cr          \\mathrm f_4 & 2^{12 } & 3 & 1 & 1 & 26 &",
    "i & \\mbox{(a)}\\cr              \\;\\lfloor & 8 ^ 3 & 11 & 3 & 3 & l & i & \\mbox{(b)}\\cr          \\mathrm g_2 & 4 ^ 3 & 5 & 1 & 1 & l & i & \\mbox{(a ) }       \\end{array}\\ ] ]    in order to clarify algorithm [ alg_smtsa_fssse ] we let @xmath61 be an irreducible root datum , @xmath4 a field of characteristic @xmath0 , and @xmath2 the lie algebra of type @xmath125 over @xmath4 . recall the definition of root spaces @xmath138 from section [ sec_introduction ] .",
    "observe first of all that , since @xmath106 , the root spaces @xmath268 and @xmath269 coincide for all @xmath45 .",
    "this implies that @xmath270 $ ] , prompting us to consider @xmath254 $ ] in line 4 of algorithm [ alg_smtsa_fssse ] .",
    "we justify the choices for the various other cases in this algorithm using the data in table [ tab_stsa_eigenspaces ] . in the first column",
    "that table contains the root data @xmath61 that are proved to have multidimensional root spaces over fields of characteristic @xmath0 ( cf .",
    "* proposition 3 ) ) .",
    "the hook symbols in the first column indicate a case spread over multiple rows , e.g. , the 5th and 6th row both concern the case @xmath271 .",
    "the second column labeled `` @xmath272 '' contains the dimensions and multiplicities of each of these root spaces in the same notation used in @xcite , i.e. , @xmath273 signifies @xmath274 distinct eigenspaces of dimension @xmath111 and such a @xmath275 printed in boldface indicates an eigenspace that occurs with eigenvalue @xmath175 .    to clarify the other columns we let @xmath112 be one of the eigenspaces mentioned ( e.g. , for the eighth line of the table @xmath276 and",
    "@xmath112 is one of the @xmath157-dimensional ( long ) root spaces ) .",
    "then we let @xmath277 be the subalgebra generated by @xmath112 and @xmath278 the ideal generated by @xmath112 .",
    "now the third column contains the dimension of @xmath279 , the fourth column the dimension of @xmath254 $ ] and the fifth the dimension of @xmath254 \\cap h$ ] .",
    "the sixth column contains the dimension of @xmath280 , or `` @xmath2 '' if @xmath281 , or `` @xmath282 '' if @xmath280 is a codimension one ideal of @xmath2 , and the seventh column contains the dimension of @xmath255 $ ] , or `` @xmath280 '' if @xmath255=i$ ] .",
    "finally , the eighth column shows which of the cases of algorithm [ alg_smtsa_fssse ] is based on this type of root space .    the case distinction in algorithm [ alg_smtsa_fssse ]",
    "is based on the observations in table [ tab_stsa_eigenspaces ] in the following manner .    1 .   in each of the cases where @xmath252 ) = 1 $ ] we have @xmath254 \\subseteq h$ ] , prompting us to take @xmath10 to be a basis element of @xmath254 $ ] .",
    "note that this case also applies if @xmath112 corresponds to the direct sum of several lie algebras of type @xmath72 .",
    "2 .   in the cases where @xmath255=i$ ] and @xmath252 ) \\in \\{2,3\\}$ ] we also have @xmath254 \\subseteq h$ ] , so that a random non - zero element of @xmath254 $ ] seems a good candidate .",
    "3 .   in the cases where @xmath258 ) = \\dim([s ,",
    "s ] ) = 0 $ ] the best candidate we can find is an element @xmath249 that acts on @xmath280 the way a split semisimple element should .",
    "note that this case also applies if @xmath112 corresponds to the direct sum of several lie algebras of type @xmath71 .",
    "4 .   in the cases where @xmath283 ( prime example being the long roots in @xmath198 ) we also pick a random non - zero element of @xmath254 $ ] as candidate . 5 .",
    "this case is special since it does not occur in table [ tab_stsa_eigenspaces ] .",
    "it is however needed to successfully complete the search for a split maximal toral subalgebra if @xmath2 is of type @xmath199 .",
    "the solution is similar to that of case ( c ) .",
    "this case is needed for lie algebras of type @xmath52 , where again @xmath254 \\subseteq h$ ] , but the dimension of @xmath254 $ ] can be as large as @xmath284 .",
    "again , we pick a random non - zero element of @xmath254 $ ] as candidate .    given a reductive lie algebra @xmath2 , the _ reductive rank _ of @xmath2 is the rank of the root datum of @xmath2 , or , equivalently , the dimension of its split maximal toral subalgebra . in the first line of algorithm [ alg_smtsa2 ]",
    "we define @xmath111 to be @xmath285 for some cartan subalgebra @xmath12 .",
    "this integer is the dimension of @xmath5 we are aiming for throughout the algorithm , in effect claiming that the reductive rank of @xmath2 must be @xmath111 .",
    "the validity of this claim is asserted by the following lemma .",
    "let @xmath2 be a reductive lie algebra over a field @xmath4 whose root datum",
    "@xmath109 is irreducible , and let @xmath286 be its reductive rank .",
    "if @xmath12 is a ( not necessarily split ) cartan subalgebra of @xmath2 then @xmath287 .    by (",
    "* proposition 15.2 ) we have that @xmath288 for some maximal toral subalgebra @xmath5 of @xmath2 . since @xmath5 is a maximal toral subalgebra , we have @xmath289 = 0 $ ] so that @xmath290 .",
    "if @xmath291 , then @xmath292 so the only case left to consider is when @xmath201 .    for a suitable field extension ,",
    "@xmath293 say , @xmath294 is split , so @xmath295 diagonalises @xmath296 into root spaces @xmath138 .",
    "since we assumed @xmath201 , there exists an @xmath138 such that @xmath297 = 0 $ ] , so there is a root whose eigenvalue under @xmath295 is @xmath175 . by (",
    "* proposition 3 ) that means @xmath61 is of type @xmath199 , where @xmath298 ( note that this includes @xmath198 ) .",
    "so assume @xmath2 is of type @xmath199 , with @xmath298 , with a chevalley basis @xmath299 , where @xmath300 , and let @xmath301 .",
    "inspection of this family of lie algebras shows that @xmath302 and @xmath303 .",
    "moreover , for all @xmath304 we have @xmath101 \\neq 0 $ ] and , as is always the case , @xmath101 \\in h$ ] .",
    "now suppose @xmath305 . then ,",
    "since @xmath6 , we have @xmath306 for some @xmath307 , @xmath308 . if @xmath309 for some @xmath45 , then @xmath310 \\neq 0 $ ] if @xmath311 is short , and @xmath312 \\neq 0 $ ] if @xmath311 is long ( since for all @xmath313 we have @xmath314 = 0 $ ] , and @xmath315 = 0 $ ] unless @xmath316 ) , in both cases contradicting @xmath317 = 0 $ ] .",
    "this shows that @xmath204 , and therefore @xmath318 and @xmath319 , proving the lemma .",
    "the lemma immediately generalises to the case where @xmath61 is not irreducible .",
    "we note that a cartan subalgebra can be computed efficiently ( * ? ? ?",
    "* section 3.2 ) . in our experience , in fact , the time it takes to compute a cartan subalgebra is negligible compared to the overall time taken by algorithm [ alg_smtsa2 ] .",
    "we end this section with a number of remarks on the implementation of the algorithm .",
    "firstly , from the manner in which the algorithm is specified we can conclude that it may run for an infinite time .",
    "indeed , @xmath215 only decreases in dimension if a new split semisimple element is found and such an element does not always exist , as shown in section [ sec_scsa_c4 ] .",
    "also , in various cases the algorithm findsplitsemisimpleelt will fail to return a split semisimple @xmath10 , due to the simple fact that @xmath279 is not of a suitable type or the candidate @xmath10 turns out not to be split . in the implementation of this algorithm these problems are remedied by limiting the number of random tries allowed for each @xmath215 in line @xmath320 of splitmaximaltoralsubalgebra to some finite number . if after that number of tries no new @xmath5 was found , the algorithm terminates and returns * fail*.    secondly , note that the influence of the size of the field on the performance of the algorithm is twofold .",
    "firstly , the smaller the field , the higher the probability of finding split semisimple elements in algorithm [ alg_smtsa_fssse ] . on the other hand , the bigger the field , the higher the probability that the random semisimple elements picked in algorithm [ alg_smtsa2 ] have eigenspaces of small dimension .",
    "this dichotomy yields an algorithm whose performance is acceptable both over small and over larger fields .",
    "we will , of course , in general see a decreasing performance of the algorithm as the size of @xmath4 increases , simply because field arithmetic and therefore lie algebra arithmetic slow down .",
    "+    .runtimes for splitmaximaltoralsubalgebra3 [ cols= \" < , < \" , ]     we have implemented the algorithms discussed in the magma computer algebra system @xcite , and comment on the performance of the implementation in this section .",
    "we present timings of runs of the splitmaximaltoralsubalgebra2 and splitmaximaltoralsubalgebra3 algorithms on lie algebras of split simple algebraic groups over six different fields . in every case",
    "the input of the algorithm was the appropriate chevalley lie algebra , given as a multiplication table on a uniformly random basis . in table",
    "[ tab_stsa3_runtimes_byalg ] and in figure [ fig_stsa_runtimes_byalg3 ] , the algorithm was run for lie algebras up to rank @xmath159 , over fields of size @xmath1 , @xmath321 , and @xmath322 ; in table [ tab_stsa2_runtimes_byalg ] and in figure [ fig_stsa_runtimes_byalg ] , for lie algebras up to rank @xmath159 , over fields of size @xmath0 , @xmath323 , and @xmath324 ; and in figures [ fig_stsa_runtimes_byfld3 ] and [ fig_stsa_runtimes_byfld ] for seven different lie algebras , varying the size of the field between @xmath0 and @xmath325 and between @xmath1 and @xmath326 , respectively .",
    "all timings are in seconds and were created using a development version of magma , 2.18 , on a 2ghz amd processor .",
    "we remark that in a sense the timings presented represent the worst possible : because the multiplication table is given on a uniformly random basis it is very dense , making multiplication an exceptionally expensive operation . in practice",
    "when a lie algebra arises from other computations , the multiplication table could be much sparser and the algorithm therefore much faster .    despite the fact that we have not commented on the computational complexity of our algorithm , the four graphs give some indication .",
    "in particular , figures [ fig_stsa_runtimes_byalg3 ] and [ fig_stsa_runtimes_byalg ] suggest a dependence on the rank @xmath18 of approximately @xmath327 and figures [ fig_stsa_runtimes_byfld3 ] and [ fig_stsa_runtimes_byfld ] suggest a linear dependence on the logarithm of the size of the field .",
    "this leads to an approximate complexity of @xmath328 , where @xmath18 is the reductive rank of the lie algebra and @xmath329 the size of the field .",
    "this is not as bad as it may seem at first sight , as a single lie multiplication already takes @xmath330 time .",
    "the author would like to thank arjeh cohen for numerous fruitful discussions on this topic and the anonymous reviewers for their thorough evaluation and their valuable comments ."
  ],
  "abstract_text": [
    "<S> important subalgebras of a lie algebra of an algebraic group are its toral subalgebras , or equivalently ( over fields of characteristic 0 ) its cartan subalgebras . of great importance among these are ones that are split : their action on the lie algebra splits completely over the field of definition . </S>",
    "<S> while algorithms to compute split maximal toral subalgebras exist and have been implemented @xcite , these algorithms fail when the lie algebra is defined over a field of characteristic @xmath0 or @xmath1 .    </S>",
    "<S> we present heuristic algorithms that , given a reductive lie algebra @xmath2 over a finite field of characteristic @xmath0 or @xmath1 , find a split maximal toral subalgebra of @xmath2 . together with earlier work @xcite </S>",
    "<S> these algorithms are very useful for the recognition of reductive lie algebras over such fields . </S>"
  ]
}
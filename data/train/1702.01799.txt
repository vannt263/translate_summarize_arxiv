{
  "article_text": [
    "atlases of human anatomy play a major role in the education of medical students and the teaching of medical terminology .",
    "such books contain a broad spectrum of filigree and detailed drawings of the human anatomy from different cutaway views .",
    "for example , the third volume of the popular human anatomy atlas sobotta  @xcite contains about 1200 figures on 384 pages .",
    "figure  [ fig : example ] is one of them showing a cross section of the human skull .",
    "the usefulness of the figures essentially relies on the naming of the illustrated components . in order not to spoil the readability of the figure by occluding it with text ,",
    "the names are placed around the figure without overlapping it .",
    "thin black lines ( which we call _ leaders _ ) connecting the names with their features accordingly guarantee that the reader can match names and features correctly . following preceding research",
    ", we call this labeling technique _ external label placement_. in this paper we present a flexible and versatile approach for external label placement in figures .",
    "we use medical drawings as running example , but occlusion - free label placements are also indispensable for the readability of other highly detailed figures as they occur for example in scientific publications , mechanical engineering and maintenance manuals .",
    "besides readability also the aesthetics of the figures including their labelings play a central role in professional books . each figure and",
    "its labels are subject to book - specific design rules .",
    "our approach stands out by its ability to support an easy integration of these specific design rules .",
    "it particularly relies only on a few key assumptions that most figures with external label placement have in common .",
    "other constraints and rules can easily be patched in according to demand .        to validate our approach ,",
    "we were in contact with both a layout artist and two editors of the human anatomy atlas sobotta .",
    "both the layout artist and the two editors stated that label placement is a mechanical , but extensively time - consuming task that is mainly done by hand .",
    "the tool support basically comprises simple operations such as placing text boxes and drawing line segments .",
    "based on medical drawings annotated by the authors of the atlas for human anatomy , the layout artist creates the layout of each double page of the book . using the annotated information , this includes arranging explanatory texts , figures , and labels around the figures .",
    "the interviewed layout artist stated that he needs about two hours to create the layout of a double page .",
    "hereby , he spends a large portion of his time on label placement .",
    "hence , with around 1200 figures in a single volume better tool support would clearly help in improving the process of creating such books .",
    "further , with the upcoming applications on mobile devices , figures are deployed in differently scaled settings , which requires different external labelings for the same figure .",
    "then , at the latest , automatic approaches become inevitable .",
    "* related work . *",
    "external labeling algorithms have been investigated both from a practical and theoretical point of view .",
    "the practical results aim for fast and simple approaches that support heuristic optimizations for multiple criteria .",
    "these approaches are often targeted for interactive systems requiring a fast label placement procedure making compromises concerning quality .",
    "for example hartmann et al .",
    "@xcite and ali et al .",
    "@xcite both present models for external label placement listing a set of criteria concerning readability and aesthetics .",
    "they use these models to introduce simple force - based methods .",
    "further strategies comprise iteratively rearranging labels  @xcite , sequentially evaluating and placing labels by priority  @xcite or exploiting small spaces for label placement  @xcite .",
    "these approaches have in common that they are fast and simple , but quality guarantees can not be given .",
    "hence , while they are customized to suit interactive systems , they can hardly serve as tools for a designer of professional books demanding complex design rules .",
    "alternatively , the drawing criteria are transferred into an optimization problem based on a sophisticated mathematical model .",
    "typically , such problems are not solved exactly , but by local optimization approaches .",
    "for example vollick et al .",
    "@xcite model external label placement by means of energy functions and apply simulated annealing .",
    "stein and dcoret  @xcite use a simple greedy algorithm to find a solution for mathematical constraints . further ,",
    "molk and bittner @xcite employ a greedy optimization using a model based on fuzzy logic .",
    "mogalle et al .",
    "@xcite also applied greedy optimization .",
    "the applications range from the interactive exploration of volume illustrations  @xcite , over automatically annotated 2d slices of segmented structures  @xcite , up to labeling explosion diagrams in augmented reality  @xcite .",
    "in contrast , theoretical results mostly consider simple models , typically with one optimization criterion , e.g. , minimizing the total leader length .",
    "bekos et al .",
    "@xcite introduced the first such model .",
    "typically , it is assumed that the point features to be labeled are contained in a rectangle  @xmath0 representing the boundary of the figure .",
    "the labels are placed outside that rectangle touching the boundary .",
    "it is assumed that the labels have uniform shapes and that their bounding boxes are already placed alongside  @xmath0 .",
    "hence , the labeling problem basically becomes a geometric matching problem asking for a crossing - free assignment between the placed bounding boxes and the point features such that each point feature is connected with a unique bounding box by a leader . in a post - processing step",
    "the label texts are written into the bounding boxes , accordingly .",
    "this sub - problem of external labeling is called _",
    "boundary labeling_. the preceding research mostly differs in the choice of the parameters .",
    "typically , the type of the leaders is broken down into straight - line leaders  @xcite , l - shaped leaders  @xcite , s - shaped leaders  @xcite and leaders with a diagonal segment  @xcite .",
    "further , the results distinguish between the number of sides on which the labels may lie ; on one , two or multiple sides of  @xmath0 .",
    "typical optimization functions are minimizing the total leader length or minimizing the number of bends .",
    "some of the approaches also allow general cost functions ( e.g. ,  @xcite ) applying dynamic programming .",
    "recently , fink and suri  @xcite presented dynamic programming approaches for boundary labeling with uniform labels and rectangular boundaries using the four major leader types , which include straight - line leaders . for labels on two opposite sides of the rectangle ,",
    "their approaches run in @xmath1 ( fixed label candidates ) and @xmath2 ( non - fixed label candidates ) time for straight - line leaders .",
    "a more detailed survey was recently given by barth et al .",
    "@xcite , which also comprises a user - study showing that straight - line leaders and l - shaped leaders outperform the other mentioned leader types concerning readability .",
    "while the results on boundary labeling are interesting from a theoretical perspective , they are hardly applicable in realistic settings , where labels are not uniform and the boundary of the figure is not a rectangle .    * our contribution . *",
    "our approach bridges the gap between the practical and theoretical results . like",
    "many of the theoretical results , it uses a clearly and mathematically defined model to guarantee pre - defined design rules . however ,",
    "in contrast to preceding research our approach is significantly more flexible in adapting other constraints . after introducing some terminology ( sect .",
    "[ sec : terminology ] ) we present an extensive list of drawing criteria for external label placement .",
    "our list of criteria contains and refines the quality criteria listed in previous work  @xcite and identifies several more .",
    "we stress that , in contrast to previous work , our criteria are obtained directly from interviews with layout artists and editors of anatomical atlases .",
    "moreover , we empirically verified the level of compliance with these criteria for 202 figures printed in the sobotta  @xcite atlas ( sect .",
    "[ sec : criteria ] ) using a semi - automatic quantitative analysis .    based on a reasonable subset of the most important criteria we introduce a flexible formal model for _ contour labeling _ , which is a generalization of boundary labeling ( sect .",
    "[ sec : model ] ) .",
    "afterwards we describe a basic dynamic programming approach that solves the mathematical problem optimally ( sect .",
    "[ sec : dp ] ) .",
    "our approach allows to include further drawing criteria both as _ hard _ and _ soft _ constraints , where hard constraints may not be violated at all and the compliance of soft constraints is rated by a cost function .",
    "previous work rarely uses hard constraints and can not easily include new hard constraints .",
    "moreover , in contrast to previous algorithms that compute mathematical optimal solutions , our approach also takes consecutively placed labels into account . at first glance",
    "this seems to be a small improvement , but in fact it is important to obtain an appealing labeling where , for example , labels have regular distances or the angles of consecutive labels should be similar .",
    "further , our approach supports labels of different sizes . indeed , for each point feature , the user can pre - define a set of different label shapes , which do not need to be rectangles .",
    "this may be used to model different ways of text formatting supporting single and multi - line labels .",
    "further , the user may specify for each label an individual set of candidate positions that is used for the label placement procedure .",
    "moreover , the user may mark areas that are not allowed to be overlapped by labels including their leaders .",
    "this is important to avoid undesired overlaps with the figure or to integrate the figure along with its labeling into a double page with explanatory text .",
    "the approach also allows to pre - define groups of labels that are placed consecutively , which is required when naming features that are semantically related .",
    "our approach is not limited to the described features , but other criteria can be incorporated easily .",
    "the strength of our approach comes at the cost of a high asymptotic running time @xmath3 , where @xmath4 describes the complexity of the input instance .",
    "recently , keil et al .",
    "@xcite presented a similar general dynamic programming approach for computing an independent set in outerstring graphs , which can be utilized to solve contour labeling in @xmath5 time for a general cost function rating individual labels ; however , it can not take joint costs of two consecutive labels into account .",
    "in contrast to fink and suri  @xcite our approach is significantly faster ( @xmath3 instead of @xmath1 ) and it supports non - uniform labels and more general shapes . with some engineering ( sect .",
    "[ sec : engineering ] ) we can solve realistically sized instances in adequate time and high layout quality as is shown in our evaluation ( sect .  [",
    "sec : experiments ] ) on a large benchmark set of real - world instances .",
    "an _ illustration _ with _ external labeling _ consists of a _ figure _ as well as a set of labels outside of the figure naming single point features of the figure .",
    "hereby a _ label _ consists of a _ text box _ that lies outside of the figure and a line segment connecting the text box with its point feature ; see fig .  [",
    "fig : terminology ] .",
    "we call the line segment the _ leader _ and the point feature the _ site _ of the label . more precisely , the text box is a rectangle containing a ( possibly multi - line ) text .",
    "typically , the rectangle is not displayed , but it is used for the further description .",
    "we assume that the leader of a label ends on the boundary of the text box ; we call that point the _ port _ of the label .",
    "a leader is directed from its site to its port . a label whose leader goes to the left",
    "is called a _ left label _ and a label whose leader goes to the right",
    "is called a _",
    "right label_. analogously , a label is a _ top label _ ( _ bottom label _ ) if its leader goes upwards ( downwards ) .",
    "the _ baseline _ of a bottom - right label is the horizontal half line that emanates from the bottom - right corner of the label s text box to the right . for a top - right label",
    "the _ baseline _ is the horizontal half line that emanates from the top - right corner of the label s text box to the right .",
    "the baselines for bottom - left and top - left labels are defined symmetrically .",
    "we define the _ slope _ of a leader is the clockwise angle ( starting at 12 oclock ) between the leader and the vertical segment going through the connected site .",
    "a leader of a labeling intersects the contour of the figure at its _ exit point _ ; in case that a leader intersects a figure multiple times , we regard the intersection point closest to the port . traversing",
    "the figure s boundary in clockwise order starting from the boundary s topmost point defines an ordering on the exit points of the leaders and accordingly on the labels ; we call this the _ radial ordering _ of the labeling .",
    "two labels are _ consecutive _ if one directly follows the other in the radial ordering .",
    "the _ labeling contour _ is the polygon that connects the ports of the labels in the given radial ordering .",
    "( b )  criterion  [ crit : similarity ] ( c )  criterion  t[crit : shadowing ] , which is violated by the red middle label .",
    "( d )  criterion  l[crit : monotone ] , which is violated by label 4 and label 5 . ]",
    "we conducted interviews with domain experts ( one layout artist and two editors of  @xcite ) in order to extract a comprehensive set of important layout quality criteria as listed below . during these interviews , the experts explained how they typically proceed when labeling a single illustration .",
    "further , they were asked to list layout criteria that they explicitly take into account .",
    "the extracted formal criteria were subsequently discussed using example illustrations printed in sobotta  @xcite .    * drawing criteria for sites . *    _ shape .",
    "_ sites are represented by small points in the drawing .",
    "_ position .",
    "_ [ crit : sites]the position of a site is prescribed by domain experts and can be assumed to be fixed and given with the input .",
    "_ either a site has its own label , or multiple sites have the same label . in the latter case",
    "the leaders are bundled forking at a certain point ; see label 5 in fig .",
    "[ fig : terminology ] .    for simplicity",
    ", we assume that we only have sites of the first type , but with some engineering our algorithms can also be adapted to the second case .",
    "now consider an external labeling of a medical drawing .",
    "we have extracted the following criteria .",
    "* general drawing criteria .",
    "*    [ crit : extern]_externality . _",
    "the text boxes of the labels are placed outside the drawing in the available areas .",
    "[ crit : planar]_planarity .",
    "_ to sustain readability , labels may not overlap or intersect each other .",
    "[ crit : shape]_simple shape .",
    "_ the labeling contour should be simple avoiding turning points ; see fig .",
    "[ fig : criteria](a ) .",
    "[ crit : sides]_left / right side . _ the radial order of a labeling can be partitioned into a sequence of left labels and a sequence of right labels .",
    "consequently , the labeling contour can be partitioned into a _ left labeling contour _ and a _",
    "right labeling contour_.    _ similarity._[crit : similarity ] the labeling contour _ mimics _ the contour of the figure such that small `` indentations '' of the figure are not taken into account ; see fig .  [",
    "fig : criteria](b ) .    _",
    "_ labels may be required by the designer to appear consecutively in the radial ordering of the labeling .    * drawing criteria for text boxes . *    _ spacing . _",
    "the vertical distances between text boxes are preferably uniform .",
    "distances less than the height of one text line should be avoided , but may be admissible if not preventable .",
    "_ appearance .",
    "_ for all labels the same font is applied .",
    "differences in the importance of labels may be expressed by different emphasis ( bold , italic ) .",
    "_ single / multi line .",
    "_ if possible , a text box should consist of a single - line text . only due to the available space",
    ", text boxes may consist of multiple lines .",
    "[ crit : ports]_ports . _ for left ( right )",
    "labels the port lies on the right ( left ) edge of the text box in the vertical center of the first text line .    [ crit : shadowing]_staircase .",
    "_ let  @xmath6 and @xmath7 be two consecutive labels .",
    "neither  @xmath6 nor @xmath7 intersects the baseline of the other ; see fig .  [",
    "fig : criteria](c ) .    * drawing criteria for leaders . *",
    "[ crit : length]_length_. the part of a leader covering the figure should be ( preferably ) short .",
    "_ distinctiveness .",
    "_ leaders running close together should not be parallel to avoid reader confusion .",
    "_ distance .",
    "_ leaders preferably comply with a minimum distance to sites of other leaders .",
    "[ crit : monotone]_monotonicity . _",
    "the slope of the leaders increases with respect to the radial ordering of the leaders ; see fig.[fig : criteria](d ) .",
    "typically a labeling does not fully satisfy all these criteria , but criteria may contradict each other requiring appropriate comprises .",
    "for example requiring monotonicity ( l[crit : monotone ] ) may enlarge the total leader length , which conflicts with criterion l[crit : length ] .",
    "our approach is characterized by the fact that these compromises are not already made during the design of the labeling algorithm , but they lie in the hand of the layout artist applying the algorithm .",
    "specifically , our approach only needs criteria s[crit : sites ] , g[crit : extern ] , g[crit : planar ] , g[crit : sides ] and t[crit : shadowing ] as hard constraints not to be violated .",
    "further , we assume that we are given a simple shape ( g[crit : shape ] ) enclosing the figure and prescribing possible positions of ports .",
    "all other criteria are optional , but can be easily patched in as either hard or soft constraints as needed . hereby the compliance of soft constraints is rated by means of a general cost function that can be defined when applying the algorithm . in our interviews the domain experts strongly emphasized the importance of g[crit : planar ] and g[crit : shape ] .",
    "they further pointed out that labels should not be placed behind other labels , which we express by t[crit : shadowing ] .",
    "we further analyzed 202 medical drawings of sobotta  @xcite in a semi - automatic way . to that end",
    "we vectorized the images by extracting the text boxes , the leaders , the sites and the contour of the figure .",
    "more precisely , we computed the difference of two images showing the same object ; one with labels and one without labels .",
    "from this difference we automatically extracted the contour of the figure , the text boxes and the ports of the leaders .",
    "the leaders were manually extracted . in case that a leader was connected to multiple sites ,",
    "we have pragmatically extracted the leader only up to the first fork point  @xmath8 and placed a single site at this point . in case that  @xmath8 was not contained  @xmath9 , we took the projection of  @xmath8 on the boundary of @xmath9 along the half - line from the port of @xmath10 through @xmath8 .",
    "the figures contain between @xmath11 and @xmath12 sites ; see also fig .",
    "[ fig : quality : pd10 ] .",
    "all of these examples satisfy s1 , g1 , g2 , g4 , and t4 .",
    "further , 18 figures contain at least one set of labels that are explicitly grouped by a large curly brace ( g6 ) .",
    "only a dwindling small percentage @xmath13 of all labels violate the staircase property ( t5 ) and about @xmath14 violate monotonicity ( l4 ) .",
    "since the other criteria are soft , we did not quantitatively check these in the semi - automatic analysis ; yet , they are well founded in the conducted interviews .",
    "we now describe a formal model for external label placement . we are given a simple polygon  @xmath9 that describes the contour of the figure and contains @xmath4 sites to be labeled .",
    "we denote the set of the sites by @xmath15 and assume that the sites are in general position , i.e. , no three sites are colinear .",
    "for each site  @xmath16 we describe its _ _ label _ _ is called label . ]",
    "@xmath17 by a rectangle  @xmath18 and an oriented line segment @xmath10 that starts at @xmath19 and ends on the boundary of  @xmath18 .",
    "we call @xmath10 the _ leader _ of @xmath17 , @xmath18 the _ text box _ of @xmath17 , and the end point of  @xmath10 on  @xmath18 the _ port _ of @xmath17 .",
    "the other end point is the site of  @xmath17 ; see fig .",
    "[ fig : terminology ] . in the following",
    "we only consider labels whose text boxes satisfy t4 .",
    "a set  @xmath20 of labels over  @xmath15 is called an _ external labeling _ of @xmath21 , if    @xmath22 ,    for each site @xmath16 there is exactly one label in  @xmath20 that belongs to @xmath19 , and    every text box of a label in  @xmath20 lies outside of  @xmath9 .    if no two labels in @xmath23 intersect each other , @xmath20 is _ planar _ .",
    "a labeling  @xmath20 is called a _ staircase labeling _ if it satisfies criterion  t[crit : shadowing ] .",
    "let  @xmath20 be a planar labeling .",
    "let @xmath24 be the labels of  @xmath20 in the radial ordering . for simplicity",
    "we define  @xmath25 .",
    "the _ cost _",
    "@xmath26 of a labeling  @xmath20 is defined as @xmath27 , where @xmath28 is a function assigning a cost to a single label  @xmath29 and @xmath30 is a function assigning a cost to two consecutive labels  @xmath29 and @xmath31 .",
    "we note that in contrast to previous research the cost function also supports rating two consecutive labels , which is crucial to set labels in relation with each other .",
    "given the cost function  @xmath26 , the problem externallabelingthen asks for a planar labeling  @xmath20 of @xmath21 that has minimum cost with respect to @xmath26 , i.e. , for any other planar labeling  @xmath32 of @xmath21 it holds  @xmath33 .",
    "we consider the special case that the ports of the labels lie on a common _ contour _ enclosing @xmath9 .",
    "in contrast to classical boundary labeling , which assumes a rectangular figure , this contour schematizes the shape of the figure with a certain offset ; in section  [ sec : experiments ] we shortly describe how to construct a reasonable contour .",
    "thus , the contour describes the common silhouette formed by the labels .",
    "we assume that the contour is given as a simple polygon  @xmath34 enclosing  @xmath9",
    ". an external labeling  @xmath20 is called a _ contour labeling _",
    "if for every label of @xmath20 its leader lies inside  @xmath34 and its port lies on the boundary  @xmath35 of  @xmath34 . since not every part of @xmath34 s boundary may be suitable for the placement of labels , we require that the ports of the labels are contained in a given subset @xmath36 of candidate ports . if @xmath37 is finite , the input instance has _",
    "fixed ports _ and otherwise _ sliding ports_.    in a planar contour labeling the ports of the labels induce the same radial ordering with respect to @xmath34 as the exit points of the labels with respect to @xmath9 .    a tuple @xmath38 is called an _ instance _ of contour labeling",
    ". the _ region _ of @xmath39 is the region enclosed by @xmath34 .",
    "we restrict ourselves to convex contours and clearly separated sites and text boxes as follows implementing criteria  g[crit : extern ] and  g[crit : shape ] , respectively .",
    "[ assumption : convex - hull ] the contour @xmath34 is convex and no text box of any label intersects the convex hull of @xmath15 .    for all of the 202 analyzed medical drawings it holds that no text box of any label intersects the convex hull of  @xmath15 .    due to the convexity of  @xmath34 , the contour can be uniquely split into a left and right side described by two maximal @xmath40-monotone chains  @xmath41 and @xmath42 , respectively .",
    "the next assumption implements criterion  g4 .",
    "[ assumption : independent - chains ] a left label has its port on @xmath41 and a right label has its port on @xmath42 .",
    "given a cost function  @xmath26 , the problem contourlabelingthen asks for an ( cost ) optimal , planar staircase contour labeling  @xmath20 of @xmath43 with respect to @xmath26 , i.e. , for any other planar staircase contour labeling  @xmath32 of @xmath43 it holds that  @xmath44 .",
    "in this section we describe how to construct the optimal labeling  @xmath20 of a given instance @xmath43 with respect to a given cost function  @xmath26 . to that end",
    "we apply a dynamic programming approach .",
    "the basic idea is that any optimal contour labeling can be recursively decomposed into a set of sub - labelings inducing disjoint sub - instances .",
    "as we show later , these sub - instances are specially formed ; we call them _ convex sub - instances_. we further show that any such sub - instance can be described by a constant number of parameters over @xmath15 and @xmath37 . hence , enumerating all choices of these parameters , we can enumerate in polynomial time all possible convex sub - instances that an optimal labeling may consist of . for each such sub - instance",
    "we compute the cost of an optimal labeling reusing the results of already computed values of smaller sub - instances . in this way",
    "we obtain the value of the optimal labeling for the given instance .",
    "summarizing , our approach consists of four steps .",
    "compute all possible convex sub - instances by enumerating all possible choices defined over @xmath15 and @xmath37 .",
    "step 2 . in increasing order of the number of contained sites ,",
    "compute the optimal cost for each convex sub - instance  @xmath39 .",
    "more precisely , to compute the optimal cost of  @xmath39 consider all possibilities how @xmath39 can be composed of at most two smaller convex sub - instances .",
    "consider all possibilities how the input instance can be described by a convex sub - instance . among these , take the convex sub - instance with optimal cost .",
    "starting with the resulting sub - instance of step 3 , apply a standard backtracking approach for dynamic programming to construct the corresponding labeling with optimal costs .    in the remainder of this section",
    "we explain the approach in more detail . in section  [ sec : struc - properties ] , we first prove some structural properties on contour labelings . these properties are crucial for the dynamic programming approach , which we describe in section  [ sec : dyn - prog ] .",
    "the intersection of two labels is characterized by three types : the two leaders intersect , the two text boxes intersect or the leader of one label intersects the text box of the other label .",
    "the following lemma allows us to find planar labelings by avoiding leader - leader intersections and intersections between two consecutive labels .    .",
    "]    [ lem : shadow - free ] let @xmath39 be an instance of contourlabelingand let  @xmath45 be a staircase contour labeling of @xmath39 . if no pair of leaders intersect and if no two consecutive labels intersect , then @xmath45 is planar .",
    "we prove that @xmath20  is planar by systematically excluding the possible types of intersections .",
    "_ text - box  text - box intersection .",
    "_ assume that there are two labels @xmath17 and @xmath46 that are not consecutive and whose text boxes intersect .",
    "the labels either lie on the same side or on different sides of  @xmath34 .",
    "first consider the case that @xmath17 and @xmath46 belong to different sides ; without loss of generality let @xmath17 be a left label and @xmath46 be a right label . due to t4 , text boxes of @xmath17 and @xmath46 may only intersect if the port  @xmath8 of @xmath17 lies to the right of the port  @xmath47 of @xmath46 . since  @xmath8 lies on @xmath41 and @xmath47 lies on @xmath42 , this contradicts the convexity of @xmath34 .",
    "now consider the case that @xmath17 and @xmath46 belong to the same side ; without loss of generality let both be left labels ; see fig .",
    "[ fig : shadowed - labels](a ) .",
    "for intersecting each other , one of both labels intersects the base line of a left label in between both labels contradicting criterion  t5 .",
    "_ text - box  leader intersection .",
    "_ now assume that there is a label @xmath17 whose text box is intersected by the leader  @xmath48 of another label  @xmath46 ; see fig .",
    "[ fig : shadowed - labels](b ) .",
    "we denote the ports of @xmath17 and @xmath46 by @xmath8 and @xmath47 respectively .",
    "further , let  @xmath49 be the first intersection point of @xmath48 with @xmath17 going along @xmath48 .",
    "we choose @xmath46 such that there is no other leader intersecting  @xmath17 s boundary  @xmath26 between @xmath8 and @xmath49 .",
    "let  @xmath0 be the region that is bounded by the boundary of @xmath17 from @xmath8 to @xmath49 , the line segment @xmath50 , and the boundary @xmath51 of @xmath34 from @xmath47 to @xmath8 .",
    "since @xmath17 and @xmath46 are not consecutive , there is a label @xmath52 with port @xmath53 on  @xmath51 .",
    "the site @xmath54 of @xmath52 lies in @xmath0 because otherwise the leader of @xmath52 intersects @xmath26 or the segment  @xmath50 . due to the convexity of  @xmath34 , the segment @xmath55 is contained in  @xmath34 . since  @xmath56 lies in the complement of  @xmath0 , the segment @xmath55 intersects @xmath26 , which implies that @xmath17 intersects the convex hull of @xmath15 contradicting assumption  1 .",
    "( blue ) and concave instance @xmath57 ( orange ) .",
    "( a )  illustration of basic definitions . ( b )  type  @xmath58 instance with @xmath59 . ( c )",
    "type @xmath60 instance with @xmath59 .",
    "( d )  capstone instance . ]    in the following , we show that each instance can be subdivided into a finite set of sub - instances of three types .",
    "we describe a sub - instance by a simple polygon that consists of two polylines .",
    "one polyline is part of the original contour @xmath34 and the other polyline consists of a convex chain of sites and two leaders .",
    "more precisely , assume that we are given a convex chain @xmath61 of sites with @xmath62 and the two non - intersecting labels @xmath6 and @xmath63 of @xmath64 and @xmath65 , respectively ; see fig .",
    "[ fig : basic - instances](a ) .",
    "the directed polyline @xmath66 splits the polygon @xmath34 into two polygons @xmath67 and @xmath68 , where @xmath69 and @xmath70 are the ports of @xmath6 and @xmath63 , respectively .",
    "we consider the order of the sites such that we meet @xmath69 before @xmath70 when going along the contour of @xmath34 in clockwise - order starting at the top of @xmath34 .",
    "further , going along @xmath71 we denote the sub - polygon to the left of @xmath71 by @xmath67 and to the right of @xmath71 by @xmath68 . with respect to the direction of @xmath71 ,",
    "the sub - polygon @xmath67 is counter - clockwise oriented , while @xmath68 is clockwise oriented .",
    "further , @xmath68 contains the top point of @xmath34 .",
    "we define that @xmath67 contains the sites @xmath72 , while @xmath68 does not contain them .",
    "thus , the polyline  @xmath71 partitions the instance @xmath43 into two sub - instances @xmath73 and @xmath74 such that    @xmath75 and @xmath76 ,    the sites of @xmath77 lie in @xmath67 or on @xmath78 and the sites of @xmath79 lie in the interior of @xmath68 ,    the ports of @xmath80 lie on the boundary of @xmath67 and the ports of @xmath81 lie on the boundary of @xmath68 .",
    "note that the sites @xmath64 , @xmath65 and the ports @xmath69 , @xmath70 neither belong to @xmath82 nor to @xmath57 , because they are already used by the fixed labels @xmath6 and @xmath63 .",
    "we call @xmath83 , which defines the polyline @xmath71 , the _ separator _ of @xmath67 and @xmath68 . for two sub - instances",
    "we say that they are _ disjoint _ if the interiors of their regions are disjoint .    in the following ,",
    "we only consider sub - instances in which the convex chain @xmath78 lies to the right of the line  @xmath84 through @xmath64 and @xmath65 pointing towards @xmath65 from @xmath64 ; we will show that these are sufficient for decomposing any instance .",
    "put differently , the chain @xmath78 is a convex part of the boundary of @xmath67 and a concave part of the boundary of @xmath68 .",
    "we call @xmath82 a _ convex _ sub - instance and @xmath57 a _ concave _ sub - instance",
    ".    the line @xmath84 splits @xmath68 into three regions @xmath85 , @xmath86 and @xmath87 ; see fig .",
    "[ fig : basic - instances](a ) .",
    "let @xmath86 be the region to the right of @xmath84 and let @xmath85 and @xmath87 be the regions to the left of @xmath84 such that @xmath85 is adjacent to the leader of @xmath6 and @xmath87 is adjacent to the leader of @xmath63 .",
    "depending on the choice of @xmath6 and @xmath63 , the regions @xmath85 and @xmath87 may or may not exist .",
    "we call @xmath68 the _ exterior _ of @xmath67 and vice versa .",
    "we distinguish the following convex instances .",
    "a convex instance has type a if there is a site @xmath88 such that @xmath6 and the half - line  @xmath89 emanating from @xmath19 through @xmath64 separates @xmath78 from the sites in @xmath68 ; see fig  [ fig : basic - instances](b ) .",
    "a convex instance has type b if there is a site @xmath90 such that @xmath63 and the half - line  @xmath89 emanating from @xmath19 through @xmath65 separates @xmath78 from the sites in @xmath68 ; see fig  [ fig : basic - instances](c ) .    for both types the chain @xmath78 is uniquely defined by the choice of @xmath6 , @xmath63 and  @xmath19 .",
    "thus , type a and type b instances are uniquely defined by @xmath6 , @xmath63 and @xmath19 ; we denote these instances by @xmath91 $ ] and @xmath92 $ ] , respectively .",
    "we call @xmath19 the _ support point _ of the instance . in case that @xmath68 is empty , the chain @xmath78 is already uniquely defined by @xmath6 and @xmath63 and we write @xmath93 $ ] and @xmath94 $ ] .",
    "hence , we can enumerate all such instances by enumerating all possible triples consisting of two labels and one site .",
    "since each label is defined by one port and one site , we obtain @xmath95 instances in total .",
    "note that instances of type b are symmetric to type a instances .",
    "for @xmath96 the chain consists of the sites @xmath64 and @xmath97 and the support point is superfluous ; such an instance is solely defined by the labels @xmath6 and @xmath7 of @xmath64 and @xmath97 , respectively .",
    "we call these instances _ capstone instances _ and denote them by @xmath98 $ ] ; see fig .",
    "[ fig : basic - instances](d ) .",
    "we now show that any labeling can be composed into instances of these three types .",
    "we say that an instance is _ empty _ if its set @xmath15 of sites is empty . for a labeling @xmath20 of an instance @xmath39",
    "we write @xmath99 for the labeling @xmath100 that is restricted to the sites and ports of the sub - instance  @xmath82 of @xmath39 .",
    "let @xmath83 denote the separator of @xmath82 .",
    "for a labeling  @xmath32 of a sub - instance @xmath82 we require that any leader of any label  @xmath17 in @xmath32 lies in the contour of the sub - instance not intersecting the separator ( the sites @xmath101 are excluded from this restriction ) .",
    "in that case we say that  @xmath17 is contained in @xmath82 .",
    "we further emphasize that the labels @xmath6 and @xmath63 are contained in @xmath32 , but they are fixed describing the contour of  @xmath82 so that their sites and ports do not belong to the sites and ports of @xmath82 , respectively .",
    "the next lemma states how to decompose type a and type b instances into smaller type a , type b and capstone instances . fig .",
    "[ fig : decomposition](a ) illustrates case  ( [ complex - instances : typea ] ) .",
    "case  ( [ complex - instances : typeb ] ) is symmetric to case  ( [ complex - instances : typea ] ) .",
    "( dashed polygon ) .",
    "( a )  type a instance with @xmath59 is decomposed into capstone instance  @xmath82 and type a instance  @xmath57 .",
    "( b )  capstone instance is decomposed into two smaller capstone instances .",
    "( c)(d )  capstone instance is decomposed into type a and type b instances . ]",
    "[ lem : complex - instances ] let @xmath39 be a convex instance with separator @xmath102 and @xmath59 .",
    "further , let @xmath20 be a planar labeling of @xmath39 .    [ complex - instances : typea ] if @xmath39 has type @xmath58 , the label @xmath103 of @xmath97 splits @xmath39 into the disjoint sub - instances @xmath104 $ ] and @xmath105 $ ] such that any label  @xmath106",
    "is contained in  @xmath82 or  @xmath57 .",
    "@xmath107})+c(\\mathcal l{\\raise-.2ex\\hbox{\\ensuremath|}}_{{\\mathbb i}_{\\mathrm{a}}[\\ell_2,\\ell_k , s_1]})-c_1(\\ell_2)\\ ] ]    [ complex - instances : typeb ] if @xmath39 has type @xmath60 , the label @xmath108 of @xmath109 splits @xmath39 into the two disjoint sub - instances @xmath110 $ ] and @xmath111 $ ] such that any label  @xmath106 is contained in @xmath82 or  @xmath57 .",
    "@xmath112})+c(\\mathcal l{\\raise-.2ex\\hbox{\\ensuremath|}}_{{\\mathbb i}_{\\mathrm{b}}[\\ell_1,\\ell_{k-1},s_k]})-c_1(\\ell_{k-1})\\ ] ]    we only argue for type a instances .",
    "symmetric arguments hold for type b instances .",
    "consider an arbitrary sub - instance @xmath38 of type a ; see fig .",
    "[ fig : decomposition](a ) . since @xmath7 connects two points of  @xmath34 s boundary , it partitions @xmath39 into two sub - instances  @xmath82 and  @xmath57 with labelings",
    "@xmath99 and @xmath113 such that any label of @xmath114 either is contained in  @xmath82 or  @xmath57 .",
    "let @xmath82 be the instance containing @xmath64 and @xmath57 the other one .",
    "obviously , @xmath82 forms the capstone instance @xmath98 $ ] .",
    "we now show that @xmath57 forms instance  @xmath105 $ ] of type a.    by definition of @xmath39 the label  @xmath6 and the half - line  @xmath89 emanating from @xmath19 through @xmath64 separates the convex chain @xmath78 of @xmath39 from the sites in the exterior of @xmath39 . because of the convexity of @xmath78 , the half - line  @xmath115 emanating from @xmath64 through @xmath97 and the label @xmath7 separate the convex chain @xmath116 from the sites in the exterior of @xmath57 .",
    "hence , @xmath105 $ ] has type a.    the cost of @xmath20 is composed of the costs of @xmath117 and @xmath113 as follows @xmath118})+c(\\mathcal    l{\\raise-.2ex\\hbox{\\ensuremath|}}_{{\\mathbb i}_{\\mathrm{a}}[\\ell_2,\\ell_k , s_1]})-c_1(\\ell_2 )    $ ] . to not count @xmath7 twice , we subtract  @xmath119 .    the convex sub - instances @xmath82 and @xmath57 of the previous lemma contain fewer sites than @xmath39 .",
    "thus , recursively applying lemma  [ lem : complex - instances ] decomposes @xmath39 into a set of type a and type b instances until all instances are capstone instances .",
    "the next lemma states how to decompose capstone instances into smaller type a , type b and capstone instances .",
    "[ fig : decomposition](b ) illustrates case  ( [ capstone : triangle ] ) , fig .",
    "[ fig : decomposition](c ) illustrates case  ( [ capstone : typea ] ) , case  ( [ capstone : typeb ] ) is symmetric to case  ( [ capstone : typea ] ) and fig .",
    "[ fig : decomposition](d ) illustrates case([capstone : typeab ] ) .",
    "[ lem : capstone ] let @xmath120 $ ] be a capstone instance with separator @xmath121 .",
    "further , let @xmath20 be a planar labeling of @xmath39 .",
    "one of the following statements applies for @xmath39 .",
    "[ capstone : empty]the instance  @xmath39 is empty .",
    "[ capstone : triangle]there is a label  @xmath17 in @xmath123 such that any label in @xmath20 is contained in one of the two disjoint capstone instances @xmath124 $ ] and @xmath125 $ ] .",
    "@xmath126})+c(\\mathcal l{\\raise-.2ex\\hbox{\\ensuremath|}}_{{\\mathbb i}_{\\mathrm{c}}[\\ell,\\ell_2]})-c_1(\\ell)\\ ] ]    [ capstone : typea]there is a label  @xmath127 s.t .",
    "any label in @xmath20 is contained in @xmath128 $ ] .",
    "@xmath129})+c_2(\\ell,\\ell_2)\\ ] ]    [ capstone : typeb]there is a label  @xmath130 s.t .",
    "any label in @xmath20 is contained in @xmath131 $ ] .",
    "@xmath132})+c_2(\\ell_1,\\ell)\\ ] ]    [ capstone : typeab]there are labels  @xmath133 with @xmath134 s.t .  any label in @xmath20 is contained in either @xmath128 $ ] or @xmath135 $ ] .",
    "@xmath136})+c(\\mathcal       l{\\raise-.2ex\\hbox{\\ensuremath|}}_{{\\mathbb i}_{\\mathrm{b}}[\\ell',\\ell_2,s_1]})+c_2(\\ell,\\ell')\\ ] ]    if @xmath38 is empty , the cost of @xmath20 are composed by @xmath137 , which yields  case ( [ capstone : empty ] ) .",
    "so assume that @xmath39 is not empty .",
    "the line @xmath84 through  @xmath64 and @xmath97 splits @xmath34 into three regions @xmath85 , @xmath86 and  @xmath87 ; see fig .",
    "[ fig : decomposition](b ) .",
    "let  @xmath86 be the region to the left of @xmath84 ( going along @xmath84 ) and let @xmath85 and  @xmath87 be the regions to the right of @xmath84 such that @xmath85 and @xmath87 are adjacent to the leaders of  @xmath6 and  @xmath7 , respectively .",
    "further , let @xmath69 and @xmath138 be the ports of  @xmath6 and  @xmath7 , respectively .",
    "first assume that there is a site  @xmath19 with label @xmath139 such that the _ separating triangle _",
    "@xmath140 lies in @xmath34 and its interior is not intersected by any label in @xmath20 ; the triangle must lie in @xmath86 . together with @xmath17 , it partitions  @xmath39 into the two sub - instances @xmath82 and @xmath57 .",
    "they form the capstone instances @xmath141 $ ] and @xmath142 $ ] as in case  ( [ capstone : triangle ] ) .",
    "it is easy to see that @xmath143})+c(\\mathcal    l{\\raise-.2ex\\hbox{\\ensuremath|}}_{{\\mathbb i}_{\\mathrm{c}}[\\ell,\\ell_2]})-c_1(\\ell).$ ] we subtract @xmath144 to not count @xmath17 twice .",
    "so assume that there is no such separating triangle , which implies that @xmath145 contains sites .",
    "if this were not the case , @xmath86 would contain a site , because @xmath39 is not empty . among these sites",
    "we easily could find a site forming a separating triangle .",
    "in particular due to assumption  1 such a triangle can not be intersected by any text box .",
    "we distinguish three cases how  @xmath85 and @xmath87 contain sites .",
    "_ case : @xmath85 contains a site , but @xmath87 is empty .",
    "_ let @xmath19 be a site in @xmath85 .",
    "we denote its label by @xmath17 and the port of @xmath17 by @xmath8 .",
    "we choose @xmath19 and @xmath17 such that no label of any site in @xmath85 succeeds @xmath17 in the radial ordering .",
    "let @xmath78 be the convex chain of sites in @xmath85 such that @xmath78 starts at @xmath64 , ends at @xmath19 , and any site in @xmath85 lies in the counterclockwise oriented polygon  @xmath67 defined by @xmath69 , @xmath78 , @xmath8 and the part of @xmath34 in between @xmath8 and @xmath69 ; see fig .",
    "[ fig : decomposition](c ) .",
    "all sites in @xmath86 also lie in @xmath67 , because otherwise we could find a separating triangle .",
    "hence , the clockwise oriented polygon  @xmath68 defined by @xmath138 , @xmath97 , @xmath64 , @xmath78 , @xmath8 and the part of @xmath34 in between @xmath8 and @xmath97 does not contain any site . by the choice of @xmath17 all labels",
    "must be contained in the instance induced by @xmath67 .",
    "in particular the half - line  @xmath89 emanating from @xmath97 through @xmath64 separates @xmath78 from the sites in the exterior of @xmath82 .",
    "hence @xmath82 is the type a instance @xmath128 $ ] .",
    "this yields case  ( [ capstone : typea ] ) and @xmath146})+c_2(\\ell,\\ell_2 ) .",
    "$ ]    _ case : @xmath87 contains a site , but @xmath86 is empty . _ symmetrically , we construct a type b instance @xmath147 $ ] , which yields case  ( [ capstone : typeb ] ) .    _",
    "case : both @xmath85 and @xmath86 contain sites .",
    "_ combining the construction of the previous two cases , we obtain two labels @xmath17 and @xmath46 that define the type a and type b instances @xmath148 $ ] and @xmath149 $ ] of case ( [ capstone : typeab ] ) ; see fig .",
    "[ fig : decomposition](d ) .",
    "lemma  [ lem : complex - instances ] and lemma  [ lem : capstone ] describe how to decompose an arbitrary convex sub - instance @xmath39 into a set of empty capstone instances .",
    "the next lemma implies that any labeling of any instance @xmath39 of contourlabelingcan be decomposed into empty capstone instances .",
    "[ lem : base - case ] let @xmath39 be an instance of contourlabelingand let @xmath20 be a planar labeling of @xmath39 .",
    "the first leader @xmath17 and the last leader @xmath46 in the radial ordering of @xmath20 define a type a instance @xmath150 $ ] such that the exterior of @xmath82 is empty and @xmath151            let  @xmath38 .",
    "further , let  @xmath19 and @xmath56 be the sites and let @xmath8 and @xmath47 be the ports of the two labels @xmath17 and @xmath46 , respectively .",
    "the polyline @xmath152 partitions  @xmath34 into two sub - polygons ; see fig .",
    "[ fig : base - case ] .",
    "let @xmath67 be the counterclockwise oriented polygon and @xmath68 be the clockwise oriented polygon .",
    "let @xmath79 be the sites in @xmath68 .",
    "the port of any label in @xmath20 lies on the boundary of  @xmath67 , because otherwise @xmath17 and @xmath46 would not be the first and last labels in the radial ordering of @xmath20 , respectively .",
    "hence , any leader of any label with site in @xmath79 must intersect the line segment @xmath153 .",
    "this in particular implies that any of these sites must lie to the right of the line @xmath84 that goes through @xmath19 and @xmath56 in that direction .",
    "let @xmath154 be the convex hull of @xmath155 .",
    "removing @xmath153 from @xmath154 , we obtain the desired convex chain @xmath78 , which lies to the right of  @xmath84 . together with @xmath17 and @xmath46 it forms the type a instance @xmath156 $ ] .      applying the results of the previous section we present a dynamic programming approach that solves contourlabelingwith fixed ports optimally . for type",
    "a , type b and capstone instances the approach creates the three tables @xmath157 , @xmath158 and @xmath159 storing the optimal costs of the considered instances , respectively .",
    "we call an instance _ valid _ if the two labels @xmath6 and @xmath63 defining the separator do not intersect and comply with  t[crit : shadowing ] .    step  1 .",
    "we compute all valid instances of type  a and type  b , and all valid capstone instances .",
    "step  2 .",
    "we compute the optimal costs for all convex sub - instances .",
    "let @xmath39 be the currently considered instance of size @xmath160 with separator @xmath161 , where the _ size _ of @xmath39 is the number of sites contained in  @xmath39 ; recall that @xmath64 and @xmath65 do not belong to  @xmath39 . considering the instances in non - decreasing order of their sizes",
    ", we can assume that we have already computed the optimal costs for all convex instances with size less than @xmath162 .",
    "we distinguish the two main cases @xmath96 and @xmath59 .    * case * @xmath163 the instance  @xmath39 forms the capstone instance @xmath98 $ ] .",
    "let  @xmath64 and @xmath97 be the sites of  @xmath6 and @xmath7 , respectively .",
    "following lemma  [ lem : capstone ] we apply five steps .    if @xmath98 $ ] is not empty , we set @xmath164 and otherwise @xmath165    we consider every site  @xmath19 in @xmath98 $ ] such that the _ separating triangle _",
    "@xmath166 lies in the region of  @xmath39 and does not contain any other site . for all such sites we determine each label candidate @xmath17 that partitions @xmath39 into valid disjoint capstone instances @xmath124 $ ] and @xmath125 $ ] .",
    "let @xmath167 denote the set of all those labels . @xmath168+t_{\\mathrm{c}}[\\ell,\\ell_2]-c_1(\\ell).\\ ] ]    we determine every label @xmath17 of @xmath98 $ ] such that every site of @xmath39 lies in @xmath128 $ ] .",
    "let @xmath167 denote the set of those labels . @xmath169+c_2(\\ell,\\ell_2).\\ ] ]    we determine every label @xmath17 of @xmath98 $ ] such that every site of @xmath39 lies in @xmath131 $ ] .",
    "let @xmath167 denote the set of those labels . @xmath170+c_2(\\ell_1,\\ell).\\ ] ]    we determine every pair @xmath171 of intersection - free labels of @xmath98 $ ] such that every site of @xmath172 $ ] lies in @xmath128 $ ] or @xmath135 $ ] .",
    "let @xmath167 denote the set of those pairs labels .",
    "@xmath173+t_{\\mathrm{b}}[\\ell',\\ell_2,s_1]+c_2(\\ell,\\ell').\\ ] ]    in any of the above cases we choose the labels of the candidate set @xmath167 such that the considered instances are valid .",
    "further , if @xmath167 is empty in sub - step ( @xmath162 ) , we set @xmath174 ( @xmath175 ) .",
    "we set @xmath176 : = \\min_{1\\leq i\\leq 5}\\{w_i\\}$ ] .    * case * @xmath177 following lemma  [ lem : complex - instances ] we distinguish two sub - cases .",
    "if @xmath39 is a type @xmath58 instance @xmath91 $ ] ( where possibly @xmath178 ) , we determine every possible label @xmath17 for site @xmath97 . let @xmath167 be the set of those labels . if @xmath167 is empty , we set @xmath179:=\\infty$ ] and otherwise @xmath180 : = \\min_{\\ell \\in d } t_{\\mathrm{c}}[\\ell_1,\\ell ] + t_{\\mathrm{a}}[\\ell,\\ell_k , s_1]-c_1(\\ell).\\ ] ] if @xmath39 has type b , we analogously define @xmath167 for @xmath109 .",
    "if @xmath167 is empty , we set @xmath181:=\\infty$ ] and otherwise @xmath182 : = \\min_{\\ell \\in d } t_{\\mathrm{c}}[\\ell,\\ell_{k } ] + t_{\\mathrm{b}}[\\ell_1,\\ell , s_{k}]-c_1(\\ell).\\ ] ] in any of the cases above we call the elements in  @xmath167 the _ descendants _ of the given instance",
    ".    step 3 .",
    "after computing the optimal costs of all convex instances , we enumerate all possible choices @xmath171 of first and last labels in the radial ordering .",
    "let @xmath167 denote the set of those choices .",
    "by lemma  [ lem : base - case ] any choice @xmath183 forms a convex type a instance @xmath150 $ ] .",
    "hence , the optimal cost  @xmath184 of @xmath39 are @xmath185+c_2(\\ell,\\ell').\\ ] ] recall that if the convex chain @xmath78 of @xmath82 has length 2 , then we have @xmath186 $ ] and therefore @xmath187=t_{\\mathrm{c}}[\\ell,\\ell']$ ] . if @xmath188 , we return that @xmath39 does not admit a contour labeling .",
    "step 4 . also storing the according descendants for each instance , we apply a standard backtracking approach for dynamic programming to obtain the corresponding labeling  @xmath20 .    for an instance",
    "@xmath38 contour labeling , the problem contourlabelingcan be solved in @xmath189 time .",
    "we first show the correctness and then argue the running time .",
    "let @xmath39 be an arbitrary instance of contourlabeling .",
    "_ correctness .",
    "_ let  @xmath20 be a labeling constructed by our algorithm .",
    "we first show that @xmath20 is planar proving the conditions of lemma  [ lem : shadow - free ] .    by construction",
    "we ensure that for a convex instance @xmath39 the labels of @xmath39 s separator comply with t5 .",
    "in particular this implies that any two consecutive labels in @xmath20 comply with t5 , which implies that @xmath20 is a staircase labeling .",
    "when computing the descendants @xmath167 for an instance , we ensure that @xmath167 does not contain any label that intersects the separator of that instance . by induction",
    "this implies that no leader in @xmath20 intersects any other leader in  @xmath20 .",
    "further , we ensure that no two consecutive labels intersect .",
    "hence , by lemma  [ lem : shadow - free ] the labeling  @xmath20 is planar .    finally , we prove that @xmath20 is an optimal labeling of @xmath39 . by lemma  [ lem : complex - instances ] ,",
    "[ lem : capstone ] and  [ lem : base - case ] any labeling can be recursively decomposed into type a , type  b , and capstone instances .",
    "our algorithm enumerates all these instances . for each such instance",
    "@xmath82 we search for the label(s ) @xmath17 ( @xmath46 ) that split @xmath82 into smaller type a , type b and capstone instances .",
    "since we enumerate all such labels , we also find the label minimizing the cost of @xmath82 .    _ running time .",
    "_ we now analyze the running time step by step .",
    "we create all possible convex instances of type a and type  b , and all capstone instances by ( conceptually ) enumerating all tuples  @xmath190 and  @xmath191 , where  @xmath6 and @xmath7 are labels based on the ports and sites of @xmath39 and @xmath192 . since each label is defined by a site and a port , we enumerate @xmath193 tuples . for each instance",
    "we also compute the convex chain @xmath78 and the sites contained in the instance , which needs @xmath194 time assuming that the sites are sorted by their @xmath195-coordinates . sorting the instances by size needs @xmath196 time .",
    "step 2 . handling a single capstone instance",
    "we need @xmath197 time : for the cases ( 1)(4 ) there are @xmath198 descendants , while for case ( 5 ) there are @xmath199 descendants .",
    "since we consider @xmath200 many instances , we obtain @xmath189 running time in total for capstone instances .    handling a single type a or type b instance there are @xmath201 descendants , because the site of the descendants is fixed .",
    "since we consider @xmath193 such instances , we obtain @xmath202 running time , which is dominated by handling the capstone instances .",
    "enumerating all pairs of first and last labels in the radial ordering can be done in @xmath203  time .",
    "step 4 . storing for each instance its descendant of lowest cost",
    ", we can do backtracking in linear  time .",
    "altogether , step 2 dominates with @xmath189 running time .",
    "the criteria mentioned in section  [ sec : criteria ] can be easily patched into the approach .",
    "if a criterion should become a hard constraint not to be violated , we simply exclude any sub - instance violating this specific criterion .",
    "for example , to enforce monotonicity ( l[crit : monotone ] ) we remove any sub - instance whose defining labels violate this criterion .",
    "similarly , if the criterion should become a soft - constraint , we do not exclude the sub - instance , but include its compliance with this criterion into its cost  provided that it can be modeled by the cost functions @xmath28 or @xmath30 .",
    "this is true for all criteria listed in section  [ sec : criteria ] .",
    "initial experiments showed that a naive implementation of the dynamic programming approach does not yield reasonable running times , which matches the high asymptotic running times . in this section ,",
    "we therefore describe how the approach can be implemented efficiently to prevent these problems for instances of realistic input sizes of @xmath204 .      instead of considering each possible label individually ,",
    "we _ bundle _ labels and redefine the different types of instances based on bundles instead of single labels .",
    "more precisely , consider two labels @xmath6 and @xmath7 of the same site @xmath19 such that @xmath6 precedes @xmath7 in the radial ordering ; see fig .",
    "[ fig : bundles ] .",
    "let @xmath69 and @xmath138 be the ports of @xmath6 and @xmath7 , respectively .",
    "further , let  @xmath0 be the region enclosed by @xmath6 , @xmath7 and the part of the contour  @xmath34 that lies between @xmath69 and @xmath138 ( going in clockwise direction around @xmath34 ) .",
    "we call @xmath6 and @xmath7 _ equivalent _ if the region  @xmath0 does not contain any site .",
    "hence , @xmath6 can be _ slid _ along @xmath34 to @xmath7 without passing any other site .",
    "a _ bundle _ of @xmath19 is a set  @xmath60 of labels of  @xmath19 that are pairwise equivalent .",
    "a set @xmath60 is _ maximal _ if there is no bundle @xmath205 with @xmath206 .",
    "we order the labels according their radial ordering . to ease the description we assume without loss of generality that there is no bundle that contains the top point of  @xmath34 ; we can _ split _ bundles at the top point of  @xmath34 , if necessary .",
    "as presented in section  [ sec : struc - properties ] we describe a sub - instance @xmath207 $ ] ( @xmath208 $ ] , @xmath209 $ ] ) by two labels @xmath17 and @xmath46 and by a support point  @xmath49 .",
    "we now generalize this concept to bundles . for two bundles @xmath60 and @xmath205 of two sites @xmath19 and @xmath56 the _ instance set _ @xmath210 $ ] contains every instance @xmath207 $ ] with @xmath211 and @xmath212 .",
    "we analogously define the sets @xmath213 and @xmath214 .",
    "using these instance sets , we speed up the steps of our algorithm without losing optimality as follows .    * step 1 . * instead of creating every instance of every type , we create all possible instance sets @xmath215 , @xmath213 and @xmath214 based on the maximal bundles of the input instance .",
    "we note that we do not compute the instance sets explicitly , but each such set  @xmath216 is uniquely described by the two labels that occur first and last in @xmath216 with respect to the radial ordering . since any two instances of an instance set contain the same sites , we only compute these contained sites once per instance set .",
    "we further exclude any instance set that does not permit a labeling at all . to that end , we test whether there is enough space along the enclosed contour for all labels .",
    "* step 2 & step 3 . * instead of computing the optimal cost for each individual instance , we iteratively compute lower and upper bounds of the optimal cost of the instance sets and refine these until we obtain the optimal cost .    more precisely , in each iteration we compute for each instance set  @xmath216 a lower bound @xmath217 and an upper bound  @xmath218 for the optimal costs of the instances in @xmath216 , i.e. , for each instance @xmath219 it holds @xmath220 .",
    "to that end we define for two bundles @xmath60 and @xmath205 the cost functions @xmath28 and @xmath30 as follows .",
    "@xmath221 interpreting the result of @xmath222 and @xmath223 as two - dimensional vectors we compute the tables @xmath157 , @xmath158 and @xmath159 in the same manner as before , but this time we use instance sets instead of instances and bundles instead of single labels .",
    "we analogously adapt step 3 .",
    "hence , we obtain for each instance set lower and upper bounds .",
    "in particular we obtain a lower bound @xmath224 and an upper bound @xmath225 for the given input instance . in case that @xmath226 , the input instance does not admit a labeling and we can abort the algorithm . otherwise , we collect all instance sets of step 3 whose lower bound does not exceed @xmath227 and start a standard backtracking procedure to collect all instance sets whose lower bound does not exceed @xmath227 .",
    "any other instance set is omitted , because it can not be part of the optimal solution .",
    "afterwards , we split each bundle @xmath60 into two half - sized bundles @xmath228 and @xmath229 , i.e. , let @xmath230 be the labels in @xmath60 with respect to the radial ordering",
    ". we then set @xmath231 and @xmath232 where @xmath233 .",
    "thus , based on those new bundles we obtain new corresponding instance sets .",
    "we start the next iteration with the newly created instance sets .",
    "we repeat this procedure until each bundle contains exactly one label .",
    "thus , the bounds @xmath224 and @xmath227 equal the optimal cost of the input instance .",
    "doing backtracking we construct the according labeling",
    ".     does not directly strive outwards and disturbs the overall appearance of the drawing .",
    "( b )  no label candidate  @xmath46 of @xmath56 can intersect the separating triangle  @xmath166 without intersecting a shell of higher level . ]      we now describe two adaptations that further accelerate the approach .",
    "in contrast to the previous section these techniques do not necessarily preserve optimality . in section",
    "[ sec : experiments ] we show that in practice our heuristics achieve near - optimal solutions in reasonable time .",
    "we observe that leaders typically point outwards without passing through the _ center _ of the figure ; see fig .",
    "[ fig : bundles - shells](a ) .",
    "this guarantees short leader lengths and leaders fit in the overall appearance of the figure .",
    "we use this as follows .",
    "based on the contour  @xmath34 we construct a set of offset polygons in the interior of  @xmath34 such that they have a pre - defined distance to each other ; see fig .  [",
    "fig : bundles - shells](a ) .",
    "we call these polygons _ shells_. the level of a shell is the number of shells containing that shell and the level of a site is the level of the innermost shell containing  @xmath19 .    we require for every site that its leader does not intersect a shell with higher level .",
    "hence , we can exclude any label that violates this requirement .",
    "the more shells are used the more labels are excluded improving the running time . however , it also becomes more likely that the optimal labeling gets lost . in our experiments",
    "we have chosen the shells such that less than @xmath234 of the labels in handmade drawings violate this property ; see also section  [ sec : experiments ] .",
    "we further speed up step 2(2 ) . to that end",
    "let  @xmath98 $ ] be the currently considered capstone instance and let  @xmath64 and @xmath97 be the sites of  @xmath6 and @xmath7 , respectively .",
    "further , let @xmath167 be the set of descendants .",
    "we only consider descendants that have a level that is at least as high as the level of  @xmath64 and @xmath97 .",
    "if such descendants do not exist , we take those with highest level . in case that the shells are convex and",
    "nested this particular adaption does not have any impact on the achievable cost , because for any such site  @xmath19 the triangle  @xmath166 is contained in the shell of  @xmath64 , @xmath97 or @xmath19 .",
    "it therefore can not be intersected by any leader of a descendant with a site that has a lower level ; see fig .",
    "[ fig : bundles - shells](b ) .",
    "cc &   + contour & shells & original +   + &   + opt(10 sec . ) , ch(7 sec . ) & sch(2 sec . ) , tsch(1 sec . )      we can further speed - up the approach as follows .",
    "simple - instances .",
    "initial experiments showed that non - capstone instances are more of theoretical interests proving the optimality of the approach , but typically the optimal labeling can be decomposed into capstone instances .",
    "hence , it lends itself to only consider capstone instances ; particularly step 2(3)(5 ) are omitted .",
    "the asymptotic running time remains the same , because handling capstone instances dominates the running time .",
    "one - sided - instances . assuming criterion  g[crit : sides ] we can apply the following speed - up technique preserving the optimality of our approach .",
    "consider a capstone instance @xmath98 $ ] such that both labels @xmath6 and @xmath7 are right labels .",
    "let  @xmath167 be the descendants computed in step 2(2 ) .",
    "indeed we only need to consider the descendants in @xmath167 with the leftmost site  @xmath19 among all those descendants .",
    "it preserves optimality , because no descendant in @xmath167 of any other site can intersect the separating triangle @xmath166 ; due to criterion  g[crit : sides ] they all lie to the right of the vertical line through @xmath19 . here",
    "@xmath64 and @xmath97 are the sites of @xmath6 and @xmath7 .",
    "symmetrically , we can apply the same technique for left labels @xmath6 and @xmath7 and the descendants with the rightmost site among all descendants in  @xmath167 .",
    "the asymptotic running time remains the same , because handling capstone instances with left and right labels dominates the running time .",
    "small - triangles .",
    "computing the set  @xmath167 of descendants of a capstone instance @xmath98 $ ] in step 2(2 ) , any site @xmath19 in @xmath98 $ ] is considered that forms an empty separating triangle @xmath166 . hereby @xmath64 and @xmath97 are the sites of @xmath6 and @xmath7 . for this speed - up technique",
    "we only consider the site  @xmath19 with smallest triangle  @xmath166 among those sites reducing the number of descendants in  @xmath167 .",
    "this improves the asymptotic running time by a factor of @xmath235 .",
    "cc , the labeling produced by tschis an outlier ; the labels distances are quite small .",
    "source : paulsen , waschke , sobotta atlas anatomie des menschen , 23.auflage 2010 elsevier gmbh , urban & fischer , mnchen.,title=\"fig : \" ] & , the labeling produced by tschis an outlier ; the labels distances are quite small .",
    "source : paulsen , waschke , sobotta atlas anatomie des menschen , 23.auflage 2010 elsevier gmbh , urban & fischer , mnchen.,title=\"fig : \" ] + contour & shells & original +   + , the labeling produced by tschis an outlier ; the labels distances are quite small . source : paulsen , waschke , sobotta atlas anatomie des menschen , 23.auflage 2010 elsevier gmbh , urban & fischer , mnchen.,title=\"fig : \" ] & , the labeling produced by tschis an outlier ; the labels distances are quite small . source : paulsen , waschke , sobotta atlas anatomie des menschen , 23.auflage 2010 elsevier gmbh , urban & fischer , mnchen.,title=\"fig : \" ] + opt(10 sec . ) , sch(2 sec . ) & tsch(1 sec . )",
    "we have implemented a prototype of our approach incorporating the speed - up techniques of section  [ sec : engineering ] . for simplicity",
    "we constructed the contour of the figure based on its convex hull @xmath154 , i.e. , the contour  @xmath34 is an exterior offset polygon of @xmath154 with distance of @xmath236 pixels .",
    "more sophisticated approaches can be applied  @xcite .",
    "similarly , the shells are interior offset polygons of the contour having distance of @xmath237 pixels to the next shell .",
    "both choices are ad - hoc values that mimic handmade drawings , but a designer may select them depending on the actual figure .",
    "further , we placed ports by sampling the contour every 10 pixels .     with @xmath238 .",
    "hereby @xmath239 .",
    "symbols of labelings violating monotonicity ( l[crit : monotone ] ) are enlarged and stabbed by a dashed vertical line . ]",
    "the implemented algorithm uses bundles , the speed - up of one - sided instances , and parallelizes step 1 ; see sect .",
    "[ sec : engineering ] .",
    "we distinguish the following variants of our algorithm :    optimal ( opt ) : no further speed - up techniques .",
    "capstone - heuristic ( ch ) : restricted to capstones .",
    "simple - shell - heuristic ( sch ) : same as ch , but also shells are applied .",
    "triangle - heuristic ( tsch ) : same as sch , but also including small - triangles .",
    "the implementation was done in c++ and compiled with gcc 4.8.5 using optimization level o2 . further ,",
    "unless specified otherwise , the experiments were performed on an intel xeon e5 - 1630v3 processor clocked at 3.7 ghz , with 128 gb of ram .",
    "we used the 202 extracted medical drawings as input data . for reasonably defining the cost functions  @xmath28 and @xmath30 , we first created six labelings for each of five selected figures . these labelings varied in the choice of minimum label distances , as well as enforcing monotonicity ( l[crit : monotone ] ) or not .",
    "we discussed these 30 labelings with a domain expert .",
    "she confirmed that monotonicity is an important criterion to obtain balanced labelings and rated the labelings best where labels with less than 30 pixels distance were penalized .",
    "smaller and larger penalty thresholds were rated worse .",
    "further , the expert emphasized that leaders should not run past sites too closely .",
    "figures  [ fig : example ] ,  [ fix : example : approaches ] and  [ fig : example : approachesb ] show three example illustrations labeled with our algorithms .",
    "further example illustrations are found on http://i11www.iti.kit.edu / contourlabeling/.    the analysis of handmade labelings also supports monotonicity : @xmath240 of the labels satisfy this property .",
    "for about @xmath241 of the test instances violating monotonicity , the violation was less than @xmath242 in maximum .",
    "about @xmath243 of these instances have at most @xmath244 violations .",
    "we incorporated these findings into the cost function as follows .",
    "let @xmath245 be a big constant .",
    "any label candidate and any instance with cost at least @xmath245 is excluded . in our experiments",
    "we set @xmath246 .",
    "the cost function @xmath28 takes the leader s length and the smallest distance to sites into account .",
    "more precisely , any candidate label whose leader is three times longer than the shortest possible leader for the same site is excluded .",
    "hence , sites located close to the contour of the figure have short leaders , while sites in the center of the figure are not affected by this exclusion at all .",
    "let @xmath17 be a label candidate and @xmath10 be the leader of @xmath17 . if the distance  @xmath247 of @xmath10 to any site ( not connected to @xmath10 ) is less than 10 pixels , we set @xmath248 and otherwise @xmath249 .",
    "hence , we penalize both long leaders as well leaders that closely run past a site .",
    "we define @xmath30 as follows .",
    "let @xmath6 and @xmath7 be a pair of possible consecutive label candidates .",
    "we set @xmath250 if @xmath6 and @xmath7 violate monotonicity by more than @xmath242 , excluding these pairs . for smaller violations we set @xmath251 , which effectively allows at most @xmath244 of these violations in total . if @xmath6 and @xmath7 satisfy monotonicity , we set @xmath252 . here ,",
    "@xmath253 is the cost caused by the vertical distance @xmath254 of @xmath6 s and @xmath7 s text boxes : if @xmath6 and @xmath7 lie on different sides of @xmath34 , we set  @xmath255 .",
    "otherwise , if the vertical distance  @xmath254 is less than @xmath244 pixels , we set @xmath256 excluding these pairs . if @xmath257 pixels , we set @xmath258 penalizing too small distances , and in all other cases @xmath255",
    ".        * quality . * to analyze the quality of the labelings constructed by ch , sch  and tsch , we compare the _ cost ratio _",
    "@xmath259 , where @xmath260 is created by @xmath261 and @xmath262 is created by the variant @xmath263 ; see fig .  [",
    "fig : quality : pd10 ] . about @xmath264 ( ch ) , @xmath265 ( sch ) and @xmath266 ( tsch ) of the labelings",
    "achieve optimal costs . for @xmath267 of the figures ,",
    "the algorithms achieve labelings whose costs are at most a factor of @xmath268 ( ch ) , @xmath269 ( sch ) and @xmath270 ( tsch ) worse than the optimal costs . only for two figures no valid solution",
    "could be computed , because their contour was too small to host all labels ; see fig .",
    "[ fig : bad - instances ]",
    ". in particular , the bottom sides of the contours are almost horizontal , which means that too many labels must be placed along the left and right side of the contour .",
    "the designer of the original labeling avoided this problem by breaking design rule t5 .    for the majority of the figures monotone labelings ( criteria l[crit : monotone ] ) were created . only for",
    "one figure none of the algorithms could create a monotone labeling .",
    "for two further figures @xmath271 and @xmath272 could not create monotone labelings , while the other two approaches did .",
    "finally , for one figure only @xmath272 did not create a monotone figure .",
    "a consulted domain expert stated that the created labelings would be highly useful as initial labeling for the remaining process of laying out the figure . according to the expert ,",
    "the labelings already have high quality and would require only minor changes , due to aesthetic reasons .",
    "these can be hardly expressed as general criteria , but rely on the expertise of the designer .",
    "altogether , the domain expert assessed our algorithm to be a tool of great use that could reduce the working load of a designer significantly .    * running time . * the average running times of our algorithms range between @xmath273 seconds ( tsch ) and @xmath274 seconds ( opt ) ; see fig .  [",
    "fig : quality : pd10 ] .",
    "the variants schand tschare remarkably faster than opt ; see fig .",
    "[ fig : quality : pd10 ] . on average",
    "they achieve a speedup by a factor of @xmath275 and @xmath276 , respectively . for some figures , tschand scheven achieve a speed up of @xmath277 and @xmath278 .",
    "further , tschand schnever exceeded @xmath279 and @xmath280 seconds , respectively .",
    "on average tschis by a factor @xmath281 faster than sch ; in maximum by a factor of @xmath282 .",
    "the variant chonly slightly improves optby a factor of @xmath283 on average and @xmath284 in maximum .    since opthas a high memory consumption , we ran the experiments on a server with 128 gb ram .",
    "when such a system is not available , schand tschare appropriate alternatives for opt , because they use significantly less memory , are fast and mostly produce labelings of high quality . to assess the applicability of the approaches in a typical setting , we ran both schand tschon an ordinary laptop with an intel core i7 - 3520 m cpu clocked at @xmath285 ghz and @xmath286 gb of ram . in comparison to the previous setting , schand tschare slower by a factor of @xmath287 and @xmath288 in maximum , respectively . on average schneeds @xmath289 seconds and tschneeds @xmath286 seconds .",
    "within @xmath290 ( @xmath291 ) minutes the labelings of all 202 figures were produced by tsch(sch ) ; in contrast , a domain expert stated that creating a labeling for a figure with about @xmath292 sites by hand may easily take @xmath293 minutes .",
    "the evaluation shows that our approach computes high - quality labelings for the vast majority of instances in short time . while optand chare mainly useful for evaluating our approach , schand tschare fast enough to be deployed in practice .",
    "if quality is more important than running time , schis preferable and otherwise tschfigure  [ fig : example : approachesb ] shows an example where schyields a better result than tsch , still in reasonable time .    only for two illustrations we could not create any labelings due to the chosen contour . to avoid this problem",
    "one could incorporate more sophisticated procedures for creating the contour .",
    "however , we refrained from this , because we were mainly interested in evaluating the performance of our dynamic programming approach .",
    "alternatively , the designer could appropriately adapt the contour in an interaction step .",
    "further , one can relax the convexity assumption in practice allowing more general contours .",
    "the cases when overlaps of text boxes may occur for non - convex contours are pathological .",
    "this further enhances the possibility to integrate interaction with the user , who could adapt the contour on demand . in most cases",
    "the running times of tschare sufficient for interactive editing , which is necessary for laying out professional books ; for real - time scenarios ( e.g. , labeling images of ongoing surgeries ) the performance of our approach needs further improvement .",
    "identifying more rules for excluding unnecessary instances is one possibility to speed up the procedure .",
    "although the produced labelings already have high quality , we can improve on them by applying post - processing steps , e.g. , fix the order of the labels and restart the dynamic programming approach on a larger set of ports to do fine - tuning on the label placement .",
    "more sophisticated post - processing steps are future work .",
    "similarly , for labeling the same image in different scales , one could , based on a large - scale master labeling , penalize changes in the radial ordering of the labels in other scales . pre - computing the labelings for all given scales in that way , one minimizes layout changes between different zoom levels , which can be useful for interactive views .",
    "a detailed evaluation is also future work .",
    "finally , our approach supports a one - to - one correspondence between labels and sites . to also support multiple sites per label , one could create multiple leader candidates having different fork points . excluding them",
    "mutually , this yields a simple adaption of our original approach .",
    "the main research questions is then to identify appropriate candidate positions for the fork points .",
    "in this paper we presented a flexible model for contour labeling , which we validated through interviews with domain experts and a semi - automatic analysis on handmade labelings . with some engineering the developed dynamic programming approach",
    "can be used to generate labelings of high quality in short time .",
    "the presented approach is particularly interesting for creating labelings of large collections of figures that must follow the same design rules ; a prominent example are figures in atlases of human anatomy .",
    "in contrast to external labeling heuristics ( e.g. ,  @xcite ) , our full approach provides mathematically optimal , exact solutions .",
    "moreover , we can use these optimal solutions to assess the performance of our faster heuristics quantitatively in terms of the cost ratio .",
    "compared to other exact labeling algorithms ( e.g.  @xcite ) , our optimization model supports more general contours , non - uniform label shapes , and the flexible integration of additional soft and hard constraints .",
    "g.  fuchs , m.  luboschik , k.  hartmann , k.  ali , h.  schumann , and t.  strothotte .",
    "adaptive labeling for interactive mobile information systems . in _ information visualization ( infovis06 ) _ , pages 453459 .",
    "ieee , 2006 .",
    "k.  mogalle , c.  tietjen , g.  soza , and b.  preim .",
    "constrained labeling of 2d slice data for reading images in radiology . in",
    "visual computing for biomedicine ( vcbm12 ) _ , pages 131138 .",
    "eurographics assoc . , 2012 ."
  ],
  "abstract_text": [
    "<S> the usefulness of technical drawings as well as scientific illustrations such as medical drawings of human anatomy essentially depends on the placement of labels that describe all relevant parts of the figure . in order to not spoil or clutter the figure with text , the labels are often placed around the figure and </S>",
    "<S> are associated by thin connecting lines to their features , respectively . </S>",
    "<S> this labeling technique is known as _ external label placement_.    in this paper </S>",
    "<S> we introduce a flexible and general approach for external label placement assuming a _ contour _ of the figure prescribing the possible positions of the labels . while much research on external label placement aims for fast labeling procedures for interactive systems , we focus on highest - quality illustrations . based on interviews with domain experts and a semi - automatic analysis of 202 handmade anatomical drawings , we identify a set of 18 layout quality criteria , naturally not all of equal importance . </S>",
    "<S> we design a new geometric label placement algorithm that is based only on the most important criteria . yet </S>",
    "<S> , other criteria can flexibly be included in the algorithm , either as hard constraints not to be violated or as soft constraints whose violation is penalized by a general cost function . </S>",
    "<S> we formally prove that our approach yields labelings that satisfy all hard constraints and have minimum overall cost . introducing several speedup techniques , </S>",
    "<S> we further demonstrate how to deploy our approach in practice . in an experimental evaluation on real - world anatomical drawings </S>",
    "<S> we show that the resulting labelings are of high quality and can be produced in adequate time . </S>"
  ]
}
{
  "article_text": [
    "multiclass fifo refers to the scheduling discipline where customers are served in the first - in - first - out ( fifo ) manner and the services required by different classes may differ .",
    "compared to single - class fifo , multiclass fifo provides a more natural way to model the system in many scenarios .",
    "one example is input - queueing on a switch , where packets are fifo - queued at the input port before being forwarded to the output ports that may pick packets from the fifo queue and serve at different rates .",
    "another example is downlink - sharing in wireless networks , where a wireless base station , shared by multiple users , sends packets to them in the fifo manner .",
    "since the characteristics of the wireless channel seen by these users may differ , the data rates to them may also be different .",
    "for the concern of providing delay guarantees in such networks , it is crucial to have analytical results , particularly delay bounds for multi - class fifo .",
    "surprisingly , while there are a lot of results for single - class fifo , few such results exist for multicalss fifo .",
    "the existing results for multiclass fifo are mostly under the classic queueing theory ( e.g. @xcite ) . however , those available results are rather limited and their focus has been on the queue stability condition . in the context of input - queueing in packet - switched systems ,",
    "multiclass fifo has also been studied ( e.g. @xcite ) . however , in these studies , the focus has been on the throughput of the switch , assuming saturated traffic on each input port .",
    "none of these studies has focused on the delay bound performance of multiclass fifo .    in terms of delay bounds for fifo ,",
    "available results are almost all for single - class fifo . among them",
    "are the two well - known delay bound results : one by kingman @xcite for a stochastic case : @xmath0 , and one by cruz @xcite for a deterministic case : @xmath1 . for other or more general arrival and service processes ,",
    "various delay bounds have also been derived , mainly in the context of network calculus @xcite@xcite . with those results",
    ", one might expect that they could be readily or easily extended to multi - class fifo .",
    "unfortunately , such an extension is surprisingly difficult and a direct extension may result in rather limited applicability of the obtained results .",
    "this work is devoted to filling the gap . in the following ,",
    "the difficulties are first discussed .",
    "then , we prove delay bounds for multiclass fifo , considering both deterministic and stochastic cases .",
    "specifically , delay analysis is performed and delay bounds are derived for @xmath1 , @xmath2 , @xmath3 and @xmath0 , all under multiclass fifo .",
    "the bound for @xmath1 is tight , and the bounds for @xmath3 and @xmath0 are similar to the kingman s bound in form and accuracy .",
    "for a @xmath0 fifo queue , the following delay bound was proved by kingman five decades ago @xcite : @xmath4 where @xmath5 denotes the waiting time in queue of a customer , @xmath6 with @xmath7 being the interarrival time and @xmath8 the service time of the first customer . in this paper , for a random variable @xmath9 , @xmath10 denotes its moment generating function ( mgf ) , i.e. , @xmath11 $ ] , @xmath12 its cdf or a lower bound on the cdf , and @xmath13 its ccdf or an upper bound on the ccdf .    the i.i.d .",
    "condition on service times implies that the bound ( [ kingman ] ) is for single - class fifo .",
    "extending it to multiclass fifo is formidably difficult .",
    "for one reason , due to the implicit dependence between @xmath7 and @xmath8 if we were to treat the inputs of all classes as one aggregate input , finding @xmath14 for the aggregated sequence would be extremely hard . as a result ,",
    "if the kingman s bound were adopted for @xmath0 multiclass fifo , it would be difficult to find the exponent parameter in the bound .    for a @xmath1 fifo queue in communication networks ,",
    "the following delay bound was initially shown by cruz @xcite @xmath15 where @xmath16 denotes the system delay of any packet , @xmath17 ( in bps ) the service rate of the queue , and @xmath18 ( in bits ) the traffic burstiness parameter .",
    "the conditions of the cruz delay bound are that the input traffic during any time period of length @xmath19 is upper - constrained by @xmath20 and that @xmath21 .",
    "unlike ( [ kingman ] ) , the cruz bound can be readily used for multiclass fifo . to illustrate this ,",
    "consider a fifo queue with @xmath22 classes , where the traffic of each class is upper - constrained by @xmath23 and the service rate of the class is @xmath24 . without difficulty , ( [ cruz ] ) can be extended to this multiclass queue and it can be shown that the delay of any packet is upper - bounded by @xmath25 , if @xmath26 . unfortunately , the condition @xmath26 can be too restrictive , particularly when the service rates differ much .",
    "consider a work - conserving multiclass fifo queue .",
    "the queue is initially empty at time @xmath27 .",
    "there are @xmath22 classes . for each class @xmath28 , let @xmath29 denote the average customer arrival rate , @xmath30 the average customer service rate , both in number of customers per unit time , and @xmath31 . to gain insights , before studying the usual continuous time multiclass fifo queue , we consider discrete time multiclass fifo in communication networks , where the packets are the customers .",
    "for such a queue , let @xmath24 denote the service rate ( in bps ) of class @xmath28 , which is constant .",
    "also let @xmath32 ( in bits ) denote the expected packet length of class @xmath28 .",
    "in addition , for each class @xmath28 , let @xmath33 denote the amount of traffic ( in bits ) which arrives within the time period @xmath34 , and @xmath35 the traffic in @xmath36 .",
    "for the aggregate traffic of all classes , @xmath37 and @xmath38 are similarly defined .",
    "it is easily calculated : @xmath39and @xmath40 . for any packet / customer @xmath41 , let @xmath42 and @xmath43 respectively denote its arrival time and departure time .",
    "the delay of the packet / customer is then @xmath44 . in the rest , for time @xmath19 , we define @xmath45 and @xmath46 with @xmath47 .          for any packet @xmath52 , there exists some time @xmath53 that starts the busy period where it is in .",
    "note that such a busy period always exists , since in the extreme case , the period is only the service time period of @xmath52 and in this case , @xmath54 .",
    "since the system is work - conserving , there holds : @xmath55 , where @xmath56 denotes the total service time of class @xmath28 packets that are served in @xmath57 $ ] . because of fifo and that the system is empty at @xmath58",
    ", @xmath56 is hence limited by the amount of traffic that arrives in @xmath59 , which is @xmath60 .",
    "specifically , @xmath61 , so we then have @xmath62 . under the condition @xmath63",
    ", we then obtain : @xmath64 where the second last step is due to the traffic constraint and the last step is from @xmath50 and @xmath65 .",
    "note that , for the system , consider that immidiately after time @xmath27 , every traffic class generates a burst with size @xmath66 . in this case , the packet in the bursts , which receives service last , will experience delay @xmath67 that equals the delay bound .",
    "so , the bound is tight .",
    "it is worth highlighting that the condition @xmath50 also leads to @xmath68 , because @xmath69 .",
    "this is consistent with the multiclass fifo stability condition , @xmath70 , proved under the classic queueing theory analysis ( see , e.g. , @xcite ) .",
    "still consider the communication network queue , but the traffic of each class is constrained to have generalized stochastically bounded burstiness ( gsbb ) @xcite : @xmath71 > \\sigma \\ } \\le \\bar{f}_n(\\sigma)$ ] , for all @xmath72 and @xmath73 . a wide range of traffic processes have been proved to have gsbb @xcite .",
    "then , we have the following delay bounds .",
    "[ th - gd1 ] if @xmath50 , the delay of any packet is bounded by ( a.s . ) : @xmath74 and if the arrival processes of the @xmath22 classes are independent of each other , then the delay is bounded by ( a.s . ) : @xmath75 where @xmath76 , and @xmath77 denotes the convolution operation .",
    "since the traffic of each class has gsbb , with simple manipulation on the definition , we have , @xmath82+r_n \\epsilon}{c_n }   > \\tau \\ } \\le \\bar{f}_n ( c_n \\tau).\\ ] ] the theorem then follows from probability theory results on sum of random variables , together with applying @xmath47 .    in th .",
    "[ th - gd1 ] , no intra - independence assumption on each @xmath83 has been made .",
    "if the arrival processes satisfy some independence assumptions , the queue becomes @xmath3 and improved delay bounds can be shown in th .",
    "[ th - gd1-i ] .",
    "( its proof is similar to that of th .",
    "[ th - gg1-db ] . ) in the remainder , in addition to waiting time and ( system ) delay , the concept of virtual waiting time is also used .",
    "the virtual waiting time at time @xmath19 is defined to be the time that a virtual packet / customer , which arrives immediately before time @xmath19 , would experience : _ all arrivals at @xmath19 are excluded in the calculation of the virtual waiting time at @xmath19_.    [ th - gd1-i ] suppose @xmath84 are independent and each has independent stationary increments .",
    "if there exists small @xmath85 such that @xmath86 \\le 1 $ ] , then , for any packet @xmath41 and for all such @xmath87 , the virtual waiting time at @xmath42 and the delay of the packet are respectively bounded by , @xmath88 with @xmath89 .",
    "we now consider the usual continuous time @xmath0 fifo queue .",
    "we assume that the cumulative arrival process and the cumulative service process of each class are lvy processes . on the basis of the discrete time analysis above ,",
    "we discretize time into @xmath90 .",
    "let @xmath91 ( in time ) denote the required system work by class @xmath28 customers who arrive in @xmath36 and @xmath92 .",
    "in particular , @xmath93 where @xmath94 denotes the number of class @xmath28 arrivals in @xmath95 and @xmath96 denotes the service time of the @xmath97th customer of class @xmath28 , @xmath98 . for this @xmath0 queue , we have the following delay bounds for any chosen @xmath99 , and by letting @xmath100 , they represent delay bounds for the usual continuous time @xmath0 .",
    "[ th - gg1-db ] for @xmath101 , if there exists some small @xmath102 such that @xmath103 , then , for any customer @xmath41 and any such @xmath87 , the waiting time of the customer is bounded by ( a.s . ) , @xmath104 , @xmath105 and its delay is bounded by ( a.s . ) , @xmath104 , @xmath106 with @xmath107 and @xmath108 the cdf of the customer s service time @xmath109 .",
    "let @xmath79 denote the start of the busy period where the customer @xmath41 is in , and @xmath110 the time at which the queue can start serving the customer who arrives at @xmath42 . then : @xmath111 where @xmath112 is used such that @xmath113 represents the system work that arrives in @xmath114 $ ] .",
    "we now map @xmath42 and @xmath79 to the discrete time system . specifically , suppose @xmath42 falls between @xmath115 for some @xmath116 , and @xmath79 between @xmath117 for some @xmath118 . by these , we must have @xmath119 .",
    "in addition , @xmath120 , applying which to ( [ pr4 - 0 ] ) , the following inequality is further established for the waiting time of the customer , i.e. @xmath121 : @xmath122 + 2\\delta \\nonumber \\\\   & = & \\hat{v}+2\\delta \\label{pr4 - 4}\\end{aligned}\\ ] ] where the 2nd last step is to establish the inequality that holds for all sample paths , and in the last step , @xmath123 \\label{pr4 - 5}\\\\ & = _ { st } & \\sup_{1 \\le k \\le k}[\\sum_{n=1}^n s_n((k - k)\\delta , k \\delta ) - k\\delta ]   \\label{pr4 - 6}\\end{aligned}\\ ] ]    next , define @xmath124}$ ] .",
    "it can be proved that @xmath125 , forms a supermartingale if @xmath103 for some small @xmath102 .",
    "consequently , the following delay inequality is established for ( [ pr4 - 6 ] ) : @xmath126e^{-\\theta \\tau } \\label{pr4 - 8}\\end{aligned}\\ ] ] where @xmath127=m_{\\sum_n s_n(\\delta ) - \\delta}(\\theta)$ ] .",
    "finally , the first part of the theorem , i.e. ( [ eq - gg1-vb ] ) , follows immediately from ( [ pr4 - 8 ] ) and ( [ pr4 - 4 ] ) . for the second part , the service time of the customer @xmath41 needs to be added to the waiting time . with the independence assumption ,",
    "the service time of the customer is independent of the waiting time , and hence ( [ eq - gg1-db ] ) is easily verified .",
    "remarks : ( i ) in obtaining ( [ pr4 - 4 ] ) , @xmath128 has been used .",
    "it is worth highlighting that , in general , @xmath129 is only the virtual waiting time at @xmath42 as used in th .",
    "[ th - gd1-i ] . for th .",
    "[ th - gg1-db ] , it equals the waiting time of the customer because of the lvy process ( continuous time ) assumption that implies that , even under the multiclass fifo setting , at any time , there is at most one customer arrival .",
    "if this assumption is not met and more than one customer may arrive at one time , @xmath130 and @xmath131 must take into consideration the service times of the concurrent arrivals at @xmath42 as shown in th .",
    "[ th - gd1-i ] .",
    "( ii ) the bounds in th .",
    "[ th - gd1-i ] and th .",
    "[ th - gg1-db ] are similar to the kingman s bound in form and accuracy , e.g. , for single - class @xmath132 , by letting the unit time or @xmath99 to 0 , ( [ gd1-i - v ] ) and ( [ eq - gg1-vb ] ) give @xmath133 that is the same as by the kingman s bound ."
  ],
  "abstract_text": [
    "<S> fifo is perhaps the simplest scheduling discipline . for single - class fifo </S>",
    "<S> , its delay guarantee performance has been extensively studied : the well - known results include a stochastic delay bound for @xmath0 by kingman @xcite and a deterministic delay bound for @xmath1 by cruz @xcite . </S>",
    "<S> however , for multiclass fifo , few such results are available . to fill the gap , </S>",
    "<S> we prove delay bounds for multiclass fifo in this work , considering both deterministic and stochastic cases . </S>",
    "<S> specifically , delay bounds are presented for @xmath1 , @xmath2 , @xmath3 , and @xmath0 , all under multiclass fifo . </S>"
  ]
}
{
  "article_text": [
    "in the last decades , there has been an increasing interest in a geometrical construct called the voronoi diagram ( e.g. [ 1 ] , [ 2 ] , [ 3 ] and [ 4 ] ) . the voronoi diagram is a data structure extensively investigated in the domain of computational geometry ( e.g. [ 5 ] ) .    given some number of points in the plane , their voronoi diagram divides the plane according to the nearest - neighbor rule : each point is associated with the region of the plane closest to it , so it is a tessellation of @xmath0 .",
    "we have already noted that the concept of the voronoi diagram is used extensively in a variety of disciplines and has independent roots in many of them ( e.g. [ 6 ] ) .",
    "the first extension of them was to the area of crystallography ( the area we are interesting in ) , works in this field are for example [ 7 ] and [ 8 ] .",
    ".4 cm since there is a large number of empirical structures which also involve tessellations of @xmath0 , one of the most direct applications of voronoi concepts is in the modelling of such structures and the processes that generate them . in these notes",
    ", we use the voronoi assignment model in the modelling of physical - chemical systems .",
    "such systems under study consist of a set of sites occupied by atoms , ions , molecules , etc .",
    "( depending on the specific application ) which are represented as equal - size spheres .",
    "our system is formed by sites regularly arranged in @xmath0 , they assume form of lattice ( the structure is said to be crystalline ) .",
    "thin metal films images with atomic force microscopy ( afm ) consist of small two - dimensional islands ( objects ) distributed on the substrate .",
    "the quantitative characterization of the object arrangement can bring information about internal processes in the studied system .",
    "we apply methods of mathematical morphology to thin metal films images with atomic force microscopy , to assign the model : the voronoi growth model .",
    "voronoi polygons has been employed for providing nanostructural information to these multi - particle assemblies .",
    "we analyze morphological algorithms applied to these tessellations , e.g. to restore the generators from a given voronoi diagram .",
    ".4 cm as a graphical user interface ( gui ) makes easier for the user to obtain information from algorithms , we present how to join all algorithms , we have studied , to design one .",
    "the graphical user interface provides as input for the system the afm image , and interprets the output in terms we are interesting in . we note that this work can easily be extended , if we have images from other fields like ecology , meteorology , epidemiology , linguistics , economics , archeology or astronomy , that we suspect are a voronoi diagram . .4 cm    the structure of this paper is as follows . in section 2",
    "we recall the mathematical theoretical background about voronoi diagrams and we give an application of them , that it is called the voronoi growth models which we will use in the analysis of film nanographs . in section 3",
    "we explain the mathematical solution to the problem proposed here .",
    "next in section 4 , we give and analyze algorithms of the mathematical solution and in section 5 we finish with important concluding remarks and directions for further research .",
    "in this section we will review the basic notions we shall require for the sections to follow . for more details about them we refer to [ 9 ] and [ 10 ] for the first investigation of mathematical aspects of voronoi diagrams , [ 11 ] and [ 12 ] for papers that present surveys about voronoi diagrams and related topics , and [ 13 ] for a good introduction to all applications of voronoi diagrams to sciences .",
    "we will define the voronoi diagram and introduce properties and notations to be commonly used in this notes .",
    ".3 cm we work with a finite number , @xmath1 , of points in the euclidean plane , and assume that @xmath2 .",
    "the @xmath1 points are labeled by @xmath3 with the cartesian coordinates @xmath4 or location vectors @xmath5 .",
    "the @xmath1 points are distinct in the sense that @xmath6 for @xmath7 , @xmath8 .",
    "let @xmath9 be an arbitrary point in the euclidean plane with coordinates @xmath10 or location vector @xmath11 .",
    "then the euclidean distance from @xmath9 to @xmath12 is given by @xmath13 if @xmath12 is the nearest point from @xmath9 or @xmath12 is one of the nearest points from @xmath9 , we have the relation @xmath14 for @xmath15 , @xmath16 . in this case",
    ", @xmath9 is assigned to @xmath12 .",
    "therefore ,    let @xmath17 where @xmath18 and @xmath6 for @xmath7 , @xmath19 .",
    "we call the region given by @xmath20 the _ ( ordinary ) voronoi polygon _ associated with @xmath12 ( or the voronoi polygon of @xmath12 ) , and the set given by @xmath21 the _ ( planar ordinary ) voronoi diagram _ generated by @xmath22 ( or voronoi diagram of @xmath22 )",
    ".    we can extend the above definition to the @xmath23-dimensional euclidean space , but for our proposes we only need the euclidean plane .",
    "so , we shall often refer to a planar ordinary voronoi diagram simply as a _ voronoi diagram _ and an ordinary voronoi polygon as a voronoi polygon .",
    ".5 cm    for a voronoi diagram @xmath24 we have the following definitions .",
    "we call the @xmath12 of @xmath25 the _ generator point _ or _ generator _ of the @xmath26th voronoi polygon , and the set @xmath17 the _ generator set _ of the voronoi diagram @xmath24 ( figure 1 ) .    for brevity",
    "we may write @xmath27 for @xmath25 . also we may use @xmath28 or @xmath29 when we want to emphasize the coordinates or location vector of the generator @xmath12 .",
    "in addition , we may use @xmath30 when we want to explicitly indicate the generator set @xmath22 of @xmath24 .        given a voronoi diagram @xmath24 ,",
    "since a voronoi polygon is a closed set , it contains its boundary denoted by @xmath31 .",
    "the boundary of a voronoi polygon may consist of line segments , half lines or infinite lines , which we call _ voronoi edges_. noticing that @xmath32 is included in the relation of equation ( [ eqdefvor ] ) , we may alternatively define a voronoi edge as a line segment , a half line or an infinite line shared by two voronoi polygons with its end points .",
    "mathematically , if @xmath33 , the set @xmath34 gives a voronoi edge ( which may be degenerate into a point ) .",
    "we use @xmath35 for @xmath34 , which is read as the voronoi edge generated by @xmath12 and @xmath36 .",
    "note that @xmath35 may be empty .",
    "if @xmath35 is neither empty nor a point , we say that the voronoi polygons @xmath25 and @xmath37 are _",
    "adjacent_.    an end point of a voronoi edge",
    "is called a _",
    "voronoi vertex_. alternatively , a voronoi vertex may be defined as a point shared by three or more voronoi polygons .",
    "we denote a voronoi vertex by @xmath38 ( see figure 1 ) .",
    "when there exits at least one voronoi vertex at which four or more voronoi edges meet in the voronoi diagram @xmath24 , we say that @xmath24 is _ degenerate _",
    "( figure 2 ) ; otherwise , we say that @xmath24 is _ non - degenerate_.        in the previous definitions of voronoi diagram @xmath24 , we have defined a voronoi diagram in an unbounded plane . in practical applications ,",
    "however , we often deal with a bounded region @xmath39 , where generators are placed . in this case",
    "we consider the set given by @xmath40    we observed that an ordinary voronoi diagram consists of polygons , as a polygon can be defined in terms of half planes , we have the equality of proposition [ perpendicular2 ] .    given a voronoi diagram @xmath41",
    ", we consider the line perpendicularly bisecting the line segment @xmath42 joining two generators @xmath12 and @xmath36 .",
    "we call this line the _ bisector _ between @xmath12 and @xmath36 and denote it by @xmath43 .",
    "since a point on the bisector @xmath43 is equally distant from the generators @xmath12 and @xmath36 , @xmath43 is written as @xmath44 the bisector divides the plane into two half planes and gives @xmath45 we call @xmath46 the _ dominance region of _ @xmath12 over @xmath36 .",
    "[ perpendicular2 ] let @xmath47 , where @xmath2 and @xmath6 for @xmath7 , and @xmath19 .",
    "then @xmath48 where @xmath25 is the _ ( ordinary ) voronoi polygon _ associated with @xmath12 and set @xmath49 where @xmath30 is the _ ( planar ordinary ) voronoi diagram _ generated by @xmath22 .",
    "as a degenerate voronoi diagram requires special lengthy treatments which are not essential we avoid this difficulty and we often make the following assumption :    [ asumir1 ] ( * the non - degeneracy assumption * ) .",
    "every voronoi vertex in a voronoi diagram is incident to exactly three voronoi edges .    .",
    "* the largest empty circle in a voronoi diagram .",
    "* .4 cm    for a given set @xmath22 of points , if a circle does not contain any points of @xmath22 in its interior , the circle is called an _ empty circle_.    [ vdcircle ] let @xmath50 be the set of voronoi vertices of a voronoi diagram generated by @xmath22 .",
    "for every voronoi vertex , @xmath51 , there exists a unique empty circle @xmath52 centered at @xmath38 which passes through three or more generators . under the non - degeneracy assumption",
    ", @xmath52 passes through exactly three generators ( figure 3 ) .    from this theorem ,",
    "the non - degeneracy assumption ( assumption [ asumir1 ] ) is equivalent to the following assumption .",
    "( * the non co - circularity assumption * ) given a set of points @xmath53 ( @xmath54 ) , there does not exist a circle , @xmath55 , such that @xmath56 , @xmath57 , are on @xmath55 , and all points in @xmath58 are outside @xmath55 .",
    "circle @xmath52 in theorem [ vdcircle ] is the largest empty circle among empty circles centered at the voronoi vertex @xmath38 .",
    ".5 cm here we have seen some properties of the voronoi diagram , but it has many more .",
    "for example , if one connects all the pairs of sites whose voronoi cells are adjacent then the resulting set of segments forms a triangulation of the point set , called the _ delaunay triangulation_.      thin metal films deposited on a surface consist in their initial stage of growth of small islands .",
    "basic information about nucleation processes during the thin film growth can be derived by the morphological analysis of the film afm image .",
    "for very thin metal film or generally for systems consisting of small regular objects , the methods of mathematical morphology are well - suited to the study of spatial distribution of objects in images ( e.g. [ 14 ] ) .",
    "there is a large number of empirical structures which involves tessellations of @xmath0 ( and more generally in @xmath59 ) , one of the most obvious direct applications of voronoi concepts is in the modelling of such structures and the processes that generate them .",
    "these models produce spatial patterns as the result of a simple growth process with respect to a set of @xmath1 points ( nucleation sites ) , @xmath60 , at positions @xmath61 , respectively , in @xmath0 or a bounded region of @xmath0 .",
    "if we make the following assumptions , the resulting pattern will be equivalent to the ordinary voronoi diagram @xmath30 of @xmath22 :    [ ass1 ] each point @xmath12 ( @xmath62 ) is located simultaneously .",
    "[ ass2 ] each point @xmath12 remains fixed at @xmath63 throughout the growth process .",
    "[ ass3 ] once @xmath12 is established , growth commences immediately and at the same rate @xmath64 in all directions from @xmath12 .",
    "[ ass4 ] @xmath64 is the same for all members of @xmath22 .",
    "[ ass5 ] growth ceases whenever and wherever the region growing from @xmath12 comes into contact with that growing from @xmath36 ( @xmath15 ) .",
    "together , assumptions [ ass1]-[ass5 ] define the _ voronoi growth model_. the figure 4 shows a series in stages in such a growth process .",
    ".4 cm            .5 cm            generally speaking , one obvious application is to model crystal growth about a set of nucleation sites . here",
    "assumptions [ ass1]-[ass5 ] are equivalent to assuming an omni directional , uniform supply of crystallizing material to all faces of the grind crystal in the absence of any absorbable impurities .",
    "assumption [ ass3 ] also implies that the rate of growth of the volume of a crystal will be proportional to its surface area .    also",
    ", growth models to modelling phase transitions in metallurgy involving transformation of an isotropic , one - component solid through nucleation , and isotropic growth of grains of a new or re - crystallized phase . in this context the voronoi growth model is sometimes referred to as the _ cell model _ or the _ site saturation model_. specific examples include the covering of a metallic surface by films or layers of corrosion product where the nucleation sites @xmath22 might be surface imperfections such as impurities , points of intersection with bulk defects and surface pits .",
    "another example is the growth of thin films of metal or semiconductors . in these examples",
    "if the thickness of the film is small relative to the spacing between the nucleation sites or if the grain boundaries are perpendicular to the plain of the film , a two - dimensional representation is appropriate .",
    "if the voronoi assignment and growth models described in the previous section are appropriate for modelling a particular phenomenon , we would expect spacial patterns of the phenomenon to display characteristics of voronoi diagrams . in case",
    "we have a tessellation @xmath65 , we have to consider ways of determining if it is a voronoi diagram based on some set @xmath22 ( this problem has been studied e.g. in [ 15 ] ) . recognizing a voronoi diagram is closely related with the next generator recognition problem .",
    ".4 cm * the generator recognition problem : * provided that the voronoi edges of a non - degenerate voronoi diagram @xmath30 are given , we recover the locations of generators @xmath22 .",
    ".4 cm      the first problem we approach is to restore the generators from a given voronoi diagram , that is , the inverse problem of constructing the voronoi diagram from the given points . for this problem itself , we propose the following geometrical approach ( see e.g. [ 13 ] ) .",
    ".4 cm    let @xmath38 be a voronoi vertex , @xmath66 be generators whose voronoi polygons share @xmath38 , and @xmath67 be the voronoi vertices of the voronoi edges incident to @xmath38 . from theorem [ vdcircle ] , @xmath38 is the center of the circle that passes through @xmath66 .",
    "since voronoi edges @xmath68 , @xmath69 and @xmath70 perpendicularly bisect line segments @xmath71 , @xmath72 , @xmath73 , respectively , we have the equations :    @xmath74 @xmath75 @xmath76    hence @xmath77 , i.e. @xmath78 . from this equation , we obtain the following theorem .",
    "[ teoremasolucion ] let @xmath79 be a voronoi edge in a non - degenerate voronoi diagram , @xmath80 and @xmath81 , @xmath82 be the acute angles at @xmath38 and @xmath83 , respectively , where @xmath84 is indexed counterclockwise from @xmath79 at @xmath38 and clockwise at @xmath83 .",
    "let @xmath85 ( @xmath86 ) be the half line radiating from @xmath38 ( @xmath83 ) with angle @xmath87 ( @xmath88 ) with @xmath79 in the sector of @xmath80 ( @xmath81 ) , @xmath89 .",
    "then the intersection point made by @xmath90 and @xmath91 , and that by @xmath92 and @xmath93 give the generators of the voronoi diagram sharing @xmath79 .",
    "we develop this theorem into a more general theorem with which we can examine whether or not a given planar tessellation @xmath94 , is a voronoi diagram .",
    "we suppose that the tessellation @xmath65 consists of convex polygons and every vertex has exactly three edges .",
    "let @xmath95 be the vertices of a polygon @xmath96 indexed counterclockwise .",
    "let @xmath97 be the intersection point in @xmath96 obtained through the same procedure stated in the previous theorem , where @xmath79 is replaced by @xmath98 , @xmath99 ( @xmath100 should be read as @xmath101 ) .",
    "then we have the main theorem .    a planar tessellation consisting of convex polygons",
    "whose vertices are all degree three is a voronoi diagram if and only if @xmath102 holds for @xmath103 , where @xmath97 is defined in the above .",
    ".5 cm    an alternative method to find the generators @xmath104 of a voronoi diagram @xmath24 proposed in [ 16 ] is the following algebraically method .",
    "it is based on the perpendicular bisector property i.e. the line segment @xmath105 joining the generators @xmath106 and @xmath107 of two adjacent voronoi polygons @xmath108 and @xmath109 is bisected perpendicularly by the common edge @xmath110 of @xmath108 and @xmath109 ( see proposition [ perpendicular2 ] ) .",
    "so , that means that @xmath106 and @xmath107 are subject to the following conditions :    @xmath106 and @xmath107 lie on a line perpendicular to @xmath110 .",
    "@xmath106 and @xmath107 are equidistant from @xmath110 .",
    "these conditions can be formulated algebraically to form a linear system of equations which can be solved to find the locations @xmath106 and @xmath107 .",
    "let @xmath111 and @xmath112 be the locations of the end points of the common edge @xmath110 of two adjacent members @xmath113 and @xmath114 of @xmath24 .",
    "we search @xmath115 and @xmath116 the locations of the generators @xmath106 and @xmath107 , respectively .",
    "the segment @xmath110 lies on the line    @xmath117    as @xmath24 is a voronoi diagram , condition 1 gives @xmath118 and condition 2 gives @xmath119    suppose that @xmath24 is non - degenerate and has @xmath23 interior edges .",
    "condition 1 gives a system of @xmath23 equations and @xmath120 unknows , and condition 2 gives another system of @xmath23 equations and @xmath120 unknows .",
    "taken jointly all equations we have enough constraints to provide a least squares solution for @xmath121 .",
    "specific methods for solving this equations are given in [ 16 ] .",
    "the point is that if @xmath24 is a voronoi diagram , then all equations will yield the same solution for @xmath121 .",
    "evans and jones in [ 16 ] outline three algorithms for its solution .",
    "unfortunately , the algorithms require the inversion of poorly - conditioned matrices and may thus be highly unstable .",
    "if the exact voronoi diagram were given , we could determine the position of the generators by the previous methods of subsection [ generadores ] .",
    "however , such a situation is unrealistic .",
    "recognizing that the recording of many types of empirical patterns often involve some measurement error , it is usual that given a pattern could not correspond to a voronoi diagram even when we suspect that the pattern was generated by processes such as those in the voronoi diagram .",
    "even if theoretical consideration tells us that the diagram which appears in a phenomenon should be a voronoi diagram , the error in observation process must perturb the original diagram .",
    "therefore , the geometrical method would always tell us that the diagram is not the voronoi , i.e. , it would give us no information in almost every case .",
    "methods proposed in [ 16 ] , [ 17 ] , [ 18 ] tell us at least approximate positions of the generators .",
    "geometric objects such as points , lines , and polygons are the basis of a broad variety of important applications and give rise to an interesting set of problems and algorithms .",
    "computers are being used to solve larger - scale geometric problems .",
    "_ computational geometry _ has been developed as a set of tools and techniques that takes advantage of the structure provided by geometry .",
    "now , we describe algorithms to solve the generator recognition problem ( see [ pfl ] ) .",
    "first of all we must store the tessellation of which we are seeking the generators . a tessellation is typically stored as a list of vertex coordinates and its associated contiguity lists : lists which provide , for each vertex , the indices of the other vertices to which it is connected . if a vertex lies on an infinite edge , we store both the vertex and an arbitrary other point @xmath122 on the infinite edge , where @xmath122 is labeled a dummy vertex and given no adjacency list . in the input of the algorithms we will describe ,",
    "we require that the number of ordinary vertices and the number of dummy vertices be specified , and that the dummy vertices be placed at the end of the vertex list ( we will consider them as degenerate ) .",
    "let @xmath24 be a tessellation of the euclidean plane and @xmath123 the set of vertices in which the last @xmath124 vertices lies in a infinite edge . by theorem [ teoremasolucion ] , if the tessellation is a voronoi diagram for each vertex @xmath83 of a given polygon @xmath27 we can define a half line @xmath125 of a giving direction radiating from @xmath83 into the interior of @xmath27 .",
    "the intersection of any two such half lines gives the location of the generator of @xmath27 .",
    "[ 19 ] gives the implementation of the following algorithms .",
    "the above introduction suggests the following naive algorithm for tessellations such that all of whose polygons contain at least two non degenerate vertices :    .5 cm algorithm i    step 1 . : :    specify the polygons @xmath126 .",
    ": :    for each polygon @xmath27 :    +    2.1 ; ;      find any two non degenerate vertices outlining @xmath27 ,      say @xmath127 .    2.2 ; ;",
    "for each vertex @xmath128 ( @xmath129 ) find the      ray extending from @xmath128 ( @xmath129 )      through the generator in @xmath27 , as we described above .",
    "2.3 ; ;      find the intersection of this two rays .",
    ".5 cm problems    i ) : :    the requirement that each cell contain at least two non degenerate    vertices .",
    "ii ) : :    only two rays are used to determine the generator in each polygon .",
    "iii ) : :    if the two rays in a polygon are perfectly parallel ( a simple    modification is to find an additional ray emanating from a different    non degenerate vertex in the polygon ) .",
    "errors in the generator determination of the previous algorithm could be minimized by using all the available rays rather than just two .",
    "hence an alternative is the following algorithm :    .5 cm algorithm ii    step 1 .",
    ": :    specify the polygons @xmath126 .",
    ": :    for each polygon @xmath27 :    +    2.1 ; ;      find all non degenerate vertices outlining @xmath27 .",
    "2.2 ; ;      for each vertex find the ray associated .    2.3 ; ;      find the intersection of every possible pair of rays .",
    "2.4 ; ;      average these intersection points .",
    ".5 cm problems    i ) : :    the generator location errors using the algorithm ii are in fact    typically considerably larger than for algorithm i ! ! !",
    "this increase in error in the previous algorithm is attributable to the instability in intersecting certain select pairs of rays , one may modify step 2.4 of algorithm ii by computing a weighted average of the intersection points , weighting each point according to an estimate of its stability , as in the following algorithm :    .5 cm algorithm iii    step 1 .",
    ": :    specify the polygons @xmath126 .",
    ": :    for each polygon @xmath27 :    +    2.1 ; ;      find all non degenerate vertices outlining @xmath27 .",
    "2.2 ; ;      for each vertex find the ray associated .    2.3 ;",
    ";      find the intersection @xmath130 of every possible pair of      rays in the polygon @xmath27 .",
    "2.4 ; ;      for each pair @xmath131 of rays in the polygon      @xmath27 , estimate the stability of its intersection by      perturbing the slopes of each of the rays by a small amount in      either direction and seeing how much the intersection point changes .",
    "record @xmath132 = the sum of the sizes of these      changes .    2.5",
    "; ;      compute a weighted average of the intersection points , giving      @xmath130 the weight +      @xmath133 .",
    ".5 cm note that a potential alternative to algorithms ii and iii is to find the point minimizing some penalty function such as the sum of squared perpendicular distances to the rays .",
    "the ( weighted ) averaging in algorithms ii and iii is equivalent to finding the location minimizing the ( weighted ) sum of squared distances to the intersection points of the rays .",
    "algorithms i , ii , and iii are all entirely local ; each polygon is determined solely based on its own vertices and their neighboring vertices .",
    "the accuracy of the algorithms can potentially be improved by incorporating information from neighboring polygons , e.g. by using the perpendicular bisector relation of proposition [ perpendicular2 ] .",
    "paik , ferguson and li suggest modifying algorithms i , ii , and iii to improve the results .",
    "+ all of the algorithms proposed are extremely fast , requiring just @xmath134 observations , where @xmath1 represents the number of generators to be determined .",
    "+ the errors in the inversion algorithms proposed are very small .",
    "however , in [ 19 ] they inquire about the size of the errors resulting when one of the vertices is recorded substantially in error .",
    "we start with an afm image , like one in the figures below that represent the growth of crystals with different velocities ( courtesy of pablo stoliar ) .",
    "they can be represented as a tessellation of a bounded region of the plane .",
    "we want to apply voronoi diagrams to pattern recognition to this branch of solid state physics .",
    "if we suspect that these structures are generated by spatial processes resulting in tessellations which can be constituted by voronoi diagrams , we would have to follow the next steps to analyze the images in order to obtain properties of the thin films they represent .    1 .",
    "we approximate the image to extract the vertices of the tessellation .",
    "2 .   using one of the algorithms of subsection 3.2 we approximate this tessellation to a voronoi diagram .",
    "3 .   in order to apply algorithms of section 4 , we store the vertices like we said in this section .",
    "the algorithms take as input this list of vertices and their adjacency lists , the output give us the generator points of the voronoi diagram .",
    "4 .   the last step will be to measure the errors ( root - mean - squared errors in the vertices locations ) between the tessellation we obtain directly from the image , and the voronoi diagram we obtain with the outputs of the algorithms i , ii and iii .",
    "finally , the present work may be extended in the following way : every step uses a different computational algorithm , it is interesting to join all this steps to design a graphical user interface ( gui ) that provides as input for the system the afm image , and interprets the output of the system in terms of errors and generators coordinates .",
    "a user interface makes easier for the user to interact with the designed programs utilizing toolbar buttons and/or icons .",
    "every software package , the one for step 1 , step 2 , step 3 and step 4 , need a graphical user interface design that can be developed , we think it would be useful to do only one graphical user interface with all these algorithms inside , in that way we can obtain quickly the thin film information we need .",
    "this graphical user interface could be easily extended to another kind of images , i.e. we can provide as input for the system a variety of images that it could be represented by a voronoi diagram .",
    "so , this work will be valuable not only in the field of crystallography , but also in the fields such as ecology , meteorology , epidemiology , linguistics , economics , archeology and astronomy where voronoi diagrams are applied ."
  ],
  "abstract_text": [
    "<S> for the analysis of systems consisting of small , regular objects , the methods of mathematical morphology applied to images of these systems are well - suited . </S>",
    "<S> one of these methods is the use of voronoi polygons . </S>",
    "<S> it was found that the voronoi tessellation method represents a powerful tool for the analysis of thin film morphology and provides nanostructural information to many multi - particle assemblies . in these notes , </S>",
    "<S> several morphological algorithms are analyzed and we study how to join all of them to design a graphical user interface ( gui ) that provides as input for the system the afm imageand interprets the output of the system in terms of errors and generators coordinates .    * keywords * : voronoi diagram ; inverting problem ; graphical user interface .3 cm    * 2000 mathematics subject classification * : 92b99 ; 68u05 </S>"
  ]
}
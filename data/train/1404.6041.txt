{
  "article_text": [
    "with the growing technique of multiple antenna systems , the number of antennas on an access point ( ap ) is increasing steadily .",
    "most of mobile devices , such as smartphones or tablets , are however limited by their size and power constraints , and hence have a fewer number of antennas as compared to the ap .",
    "traditional 802.11 protocols , which enable only a single client to communicate with the ap , hence can not fully utilize concurrent transmission opportunities supported by a multi - antenna ap . to address this problem , recent work has advocated developing multiuser mimo ( mu - mimo ) lans  @xcite to enable multiple clients to communicate concurrently with an ap and fully utilize all the available _ degrees of freedom _  @xcite .    though some mu - mimo mac protocols  @xcite have been proposed to realize concurrent transmissions across different nodes , in either the uplink or downlink scenarios , they simply select a random subset of users to communicate concurrently with an ap .",
    "however , in a mu - mimo lan , the achievable throughput of a client highly depends on who are transmitting concurrently with it .",
    "consider the example in fig .",
    "[ fig : example](a ) , where three single - antenna clients contend for communicating with a 2-antenna ap . say clients c1 and c3 win the first and second contentions , respectively , and transmit concurrently to the ap .",
    "the 2-antenna ap receives the signals in a 2-dimensional antenna space , as shown in fig .",
    "[ fig : example](b ) . the basic approach for decoding the concurrent packets",
    "is called _ zero - forcing with successive interference cancellation _",
    "( zf - sic )  @xcite@xcite .",
    "the ap first zero - forces ( zf ) the interference from client c1 by projecting the signal of the second client c3 on a direction orthogonal to c1 , and hence can decode c3 .",
    "the ap then uses interference cancellation ( ic ) to subtract c3 s signal and decode the first client c1 .",
    "we note that the second client decoded by zf however experiences snr reduction after projection , as shown in fig .",
    "[ fig : example](b ) , while the first client decoded by ic obtains the same snr as it transmits alone .",
    "the amount of snr reduction for the second client depends on channel orthogonality between two concurrent clients , i.e. , the angle @xmath0 between c1 and c3 .",
    "consider another example in fig .",
    "[ fig : example](c ) , where clients c2 and c3 transmit the first and second streams , respectively .",
    "client c3 in this case gets a higher snr after projection , as in fig .",
    "[ fig : example](d ) , and thus achieves a higher throughput , as compared to sending concurrently with c1 , because its channel is more orthogonal to c2 s channel .",
    "this example illustrates that random user selection can not efficiently deliver the gain of a mu - mimo lan .    to better deliver mu - mimo gains , some theoretical works on _ downlink _",
    "mu - mimo lans have focused on allowing the single transmitter , i.e. , ap , to select a proper subset of users as concurrent receivers .",
    "user selection in the _ uplink _ scenario is however much more challenging because multiple contending clients compete for transmission opportunities without coordination . as a result ,",
    "existing uplink mu - mimo lans  @xcite@xcite still adopt traditional 802.11 contention to ask all the clients to contend for concurrent transmissions without sophisticated user selection .",
    "such a contention - based scheme not only fails to select concurrent transmitters according to their channel characteristics , but also wastes a lot of channel time for multiple rounds of contention for concurrent transmission opportunities .",
    "for example , if multiple single - antenna clients contend for transmitting to a 3-antenna ap , they need to contend for three transmission opportunities sequentially .",
    "if a client fails to win the first contention , it needs another round of contention to contend for the opportunity of sending the second stream .",
    "if it fails again , it needs to contend for transmitting the third stream . the channel time occupied by such sequential contention",
    "could significantly offset the gain of mu - mimo lans .",
    "though some prior studies work on uplink mu - mimo user scheduling , they either maximize the sum rate of concurrent transmissions without considering fairness  @xcite@xcite , or can not be compatible with legacy 802.11 contention - based mac  @xcite .",
    "in addition , all the above proposals do not give any formal model to formulate the relationship between two conflict design goals , i.e. , throughput and fairness .",
    "hence , in this paper , we propose , a _ leader - contention - based _ mu - mimo mac protocol that matches concurrent transmitters according to their channel characteristics to maximally deliver the mu - mimo gain under the fairness requirement .",
    "our contributions are as follows :    * we first formulate , in section  [ sec : match ] , a rigorous model to formally define the user selection problem of maximizing throughput under the fairness constraint , and propose a matching algorithm to solve the problem .",
    "we further show that s user matching algorithm can achieve the optimal solution for the 2-antenna ap scenario .",
    "* we propose a mu - mimo mac design , in section  [ sec : mac ] , that integrates our proposed user matching algorithm with a _ leader - based _ contention scheme .",
    "s leader - contention - based mac is hence compatible with traditional 802.11 , and , more importantly , requires only a single contention overhead not scaling up with the number of concurrent streams .",
    "* unlike prior theoretical work that only mathematically analyzes the effect of mu - mimo user selection , we build a prototype of  using the usrp - n200 radio platform  @xcite , and use testbed measurements to understand the inefficiency of random user selection in real channels in section  [ sec : measurement ] .",
    "* we finally experimentally evaluate , in section  [ sec : result ] , the performance of .",
    "the results show that  achieves an average throughput gain of 1.42x and 1.52x over the sequential - contention - based protocol for 2-antenna and 3-antenna ap scenarios , respectively , and also provides users fair transmission opportunities .",
    "the remainder of this paper is organized as follows .",
    "we review related works in section  [ sec : related ] .",
    "section  [ sec : measurement ] measures how existing schemes fail to deliver mu - mimo gains and provide fairness in real channels .",
    "sections  [ sec : match ] and  [ sec : mac ] describe our algorithm and how to realize it as a mac protocol , respectively . in sections  [ sec :",
    "result ] and  [ sec : simulation ] , we evaluate the performance of  via experiments and simulations , respectively .",
    "finally , section  [ sec : conclusion ] concludes this paper .",
    "in the last few years , the advantage of mu - mimo lans has been verified theoretically  @xcite and demonstrated empirically  @xcite . in beamforming  @xcite , a multi - antenna ap uses the precoding technique to transmit multiple streams to multiple single - antenna clients .",
    "sam  @xcite focuses on the uplink scenario and allows multiple single - antenna clients to communicate concurrently with a multi - antenna ap .",
    "turborate  @xcite proposes a rate adaptation protocol for uplink mu - mimo lans .",
    "iac  @xcite connects multiple aps through the ethernet to form a virtual mimo node that communicates concurrently with multiple clients .",
    "802.11n@xmath1  @xcite enables concurrent transmissions across different links .",
    "all the above practical mu - mimo systems leverage the traditional 802.11 content mechanism to share concurrent transmission opportunities .",
    "in contrast ,  enables clients with a better channel orthogonality to transmit concurrently .",
    "prior theoretical work on user selection in downlink mu - mimo lans  @xcite selects the optimal subset of clients from those who have packets queued in the ap to maximize the sum rate of concurrent transmissions .",
    "the works @xcite@xcite further address the issue of fairness .",
    "however , their solutions are designed for downlink mu - mimo , and can not be easily applied in the uplink scenarios due to the lack of a coordinator .    user selection in uplink mu - mimo",
    "lans  @xcite@xcite requires the ap to explicitly coordinate between the clients for every packet and select the optimal subset of clients to transmit at the rate specified by the ap .",
    "enabling coordination among clients for uplink traffic however requires a significant signaling overhead .",
    "our work differs from those user selection algorithms in that it matches multiple potential subsets of concurrent transmitters to improve the system throughput , but elects a leader from the matched users to perform traditional 802.11 contention without coordination among clients .",
    "some previous works @xcite propose to use multi - round contention to enable as many concurrent transmissions as possible , while giving clients a fair opportunity to transmit concurrent streams .",
    "sam  @xcite proposes a preamble - counting protocol , which allows each client to count the number of existing streams and determine whether it can contend for sending a concurrent stream in a distributed way .",
    "multi - round contention  @xcite@xcite is proposed to let clients send rtss in multiple rounds of contention .",
    "multiple clients might send rtss concurrently in each single round of contention , and the ap then feedbacks a cts to notify those clients that can transmit concurrently .",
    "an asynchronous mac protocol @xcite is proposed to enable clients to independently start their concurrent transmissions , i.e. , without the need of starting concurrent transmissions at the same time .",
    "it however relies on a control channel to feedback who can join concurrent transmissions .",
    "there are also some papers that have considered channel orthogonality and fairness jointly in uplink mu - mimo  @xcite .",
    "however , these solutions are heuristics without any formal performance analysis , and also not compatible with the existing 802.11 standard .",
    "our work is the first that maximizes the throughput under the fairness constraint , and is able to coexist with legacy 802.11 devices .",
    "before describing our proposed protocol , we first use testbed measurements in real channels to understand the limitation of the existing mu - mimo mac protocols .",
    "the measurement results also give us an insight to the motivation of enabling user selection in a mu - mimo mac .",
    "we consider again the network in fig .",
    "[ fig : example](a ) where two single - antenna clients communicate with a 2-antenna ap .",
    "the measurements are empirically performed using usrp - n200  @xcite on a 10 mhz ofdm channel with 802.11 modulations and coding rates .",
    "the available bit - rates hence range from 327 mb / s .",
    "the measurements are designed to answer the following questions :    0.05 in * a ) how often is a client unable to transmit concurrently ? * recall that the second client s snr reduces after projection , and the amount of snr reduction depends on the angle between its channel and the channel of its concurrent transmitter , i.e. , the first client .",
    "this means that the throughput of the second client in a mu - mimo network depends on not only its own snr but also channel orthogonality between concurrent transmitters . to illustrate this point , in fig .",
    "[ fig : angle - tput ] , we analytically compute the throughput of the second client decoded by zf for the whole range of the inter - client angle @xmath2 $ ] when its original snr at the ap is 5 , 10 , 15 , 20 and 25 db , respectively .",
    "the figure shows that a small inter - client angle significantly reduces the snr after projection and hence the throughput .",
    "if the client has a high original snr , e.g. , 25  db , by selecting the best bit rate according to the snr after projection  @xcite , it can still get a relatively high throughput even after projection .",
    "in contrast , if the original snr of the client is low , the client would be very likely to get zero throughput even if it already uses perfect bit rate adaptation .",
    "this is because a small snr reduction could make its snr after projection become lower than the 802.11 operational snr region , i.e. , 4  db . in particular , if the client s original snr is 10 db , then for any angle smaller than 31 degree , its snr after projection drops below 4  db , leading to zero throughput .",
    "the situation is even worse if the client s original snr is only 5  db .",
    "one important thing worth noting is that the success of decoding the first client using zf - sic relies on the ap being able to decode the second client correctly .",
    "otherwise , the ap can not remove the interfering signal of the second client , and hence also fails to decode the first client . also , after removing the interfering signal from the second client , the first client can select its best bit - rate according to its original snr without considering who later joins the concurrent transmission .",
    "the above constraint hence requires the second client to give up its transmission opportunity if its snr after projection is lower than the 802.11 operational snr region .",
    "this also motivates why selecting a suitable subset of clients to transmit concurrently is important for delivering the gain of mu - mimo .",
    "0.05 in * b ) how different is the throughput of a client when it transmits concurrently with different clients ? * we have shown in fig .",
    "[ fig : angle - tput ] that the throughput of a client could change significantly with the inter - client angle .",
    "we next check whether the angle between the channels of two clients is actually randomly distributed between @xmath3 $ ] . to validate this point",
    ", we empirically measure how much throughput a client can achieve if it transmits concurrently with different clients in a real testbed where 6 single - antenna clients , named tx1-tx6 , contend for communicating concurrently with a 2-antenna ap .",
    "we repeat the experiment twice with different random locations of the clients .",
    "experiment 1 locates tx1 close to the ap , while experiment 2 locates tx1 far from the ap .",
    "two experiments represent the scenarios when tx1 has a high and low original snr , respectively .",
    "[ fig : diff - tput ] plots the throughput of one client ( denoted by tx1 ) when it transmits alone or when it transmits concurrently with any of other five clients ( denoted by tx2tx6 ) .",
    "the figure shows that , in both experiments , as compared to transmitting alone , tx1 usually gets a lower throughput when it joins the concurrent transmission and is decoded by projection .",
    "in addition , the client s throughput , as transmitting concurrently with different users , could be very different .",
    "for example , in experiment 1 , tx1 obtains a high throughput when it transmits concurrently with tx4 , while suffering a low throughput as joining tx6 s transmission .",
    "the situation becomes worse when tx1 has a low original snr ( as in experiment 2 ) ; in many cases , it gets zero throughput as transmitting concurrently with another client .",
    "these results are consistent with the analysis shown in fig .",
    "[ fig : angle - tput ] .",
    "thus , to get a high throughput , tx1 would like to transmit with a client whose channel is more orthogonal to its channel , as a result experiencing less snr reduction .",
    "the current random access protocols however do not consider this effect , and hence can not efficiently deliver the mu - mimo gain .",
    "[ fig : fair - tput ]    0.05 in * c ) is selecting concurrent clients to maximize the throughput fair enough ? * a nave solution to improving the throughput is to deterministically assign the client that achieves the highest throughput to join the transmission of the first contention winner .",
    "this simple solution however might not be fair for all the clients . to see why this is a problem",
    ", we measure the throughput of each client in the above scheme .",
    "specifically , in each experiment , we let each client have an equal probability to transmit the first stream ; given the first contention winner , we then select the client that can achieve the highest throughput after projection to transmit the second stream .",
    "each experiment includes 1,000 rounds of contention , i.e. , 1,000 concurrent transmissions .    because every client has an equal probability to win the first contention",
    ", we do not consider the throughput of a client transmitting using the first stream . instead , in fig .",
    "[ fig : fair - tput ] , we only plot the average throughput of a client transmitting in the second stream .",
    "the results of two experiments show that , by applying such a nave solution , some clients , e.g. , tx1 , tx4 , tx5 and tx6 in experiment 1 , do not have any opportunities to join concurrent transmissions .",
    "even worse , the clients with a low original snr are very likely to starve because they can not compete with those clients in the high snr regime .",
    "one might think , alternatively , we can assign the client that has the largest inter - client angle with the first contention winner to transmit concurrently .",
    "we repeat the same experiment by applying the above assignment . the results in fig .  [",
    "fig : fair - ang ] show that this solution again fails to provide fairness because some clients happen to have a small angle with all the other clients and hence do not get any transmission opportunities .",
    "motivated by the above measurements , we aim at designing a matching protocol , called , that pairs concurrent clients to deliver the maximum throughput gain enabled by concurrent transmissions , while , at the same time , providing clients fair concurrent transmission opportunities . for simplicity , we describe our  protocol assuming that multiple single - antenna clients communicate concurrently with a multi - antenna ap in an uplink mu - mimo lan .",
    "our design however can be generalized to clients with multiple antennas and downlink mu - mimo lans .",
    "we will describe in the next section how to realize  as a leader - contention - based mac protocol .",
    "the goal of  is to build chain relation in concurrent transmissions .",
    "when a client wins contention , the following concurrent transmissions are determined a priori .",
    "hence , all the concurrent transmitters only require to precede their streams with one contending process . in particular ,  matches clients whose channels are more orthogonal to each other as a group of concurrent transmitters with a precedence relation , which is called _ mimo - mates_. to see how it works ,",
    "let us consider an example where two clients are allowed to communicate concurrently with a 2-antenna ap .",
    "we match two clients as _ mimo - mates _ , in which one is the lead and the other is the follower .",
    "when the lead of _ mimo - mates _ wins contention and transmits the first stream , its follower transmits the second stream concurrently immediately after it detects the transmission from the lead .",
    "the protocol can be generalized to an @xmath4-antenna ap scenario where @xmath4 clients can transmit concurrently .",
    "we match @xmath4 clients as a _ mimo - mate _",
    "( precedence ) relation @xmath5 such that clients @xmath6 join the concurrent transmissions one after another in order of precedence .",
    "in particular , after the lead @xmath7 wins contention , any of the following clients @xmath8 can count the number of preambles to figure out the time that it should transmit . the above protocol benefits throughput gains from two factors : 1 ) it matches clients with a higher channel orthogonality to transmit concurrently and minimizes throughput reduction caused by projection ; 2 ) it requires only one contending process for concurrent transmissions , as a result reducing the overhead significantly",
    ". however , the benefit of  might not be able to be fully delivered when any of the matched _ mimo - mates _ does not have traffic to send . in this case , the unused transmission opportunities should be exploited by other clients to avoid waste .",
    "we thus further integrate  with an angle - based contention mechanism , which will be discussed in  section [ sec : mac ] .",
    "our objective is to match clients as _ mimo - mates _ in order to maximize the throughput subject to the fairness constraint .",
    "we first define our problem in a 2-antenna ap scenario , and next extend it to a 3-antenna ap scenario and even a more general @xmath4-antenna ap scenario .",
    "let us first consider the 2-antenna ap scenario .",
    "say @xmath9 is the client that wins the first contention , and @xmath10 is the follower of @xmath9 , who joins @xmath10 s transmission .",
    "we define @xmath11 as the _ mimo - mate _ relation of clients @xmath9 and @xmath10 .",
    "let @xmath12 denote the throughput of @xmath10 as it transmits concurrently with @xmath9 and is decoded by using zf to project orthogonal to client @xmath9 .",
    "we note that client @xmath10 might get a different throughput if it is assigned to follow a different predecessor , i.e. , @xmath12 could be different from @xmath13 if @xmath14 .",
    "the _ mimo - mate _ matching problem in a 2-antenna ap scenario can be defined as follows :    [ probdefi : 2mimomate ] ( * _ 2-mimomate _ * ) given a set of clients @xmath15 and the throughput @xmath12 for all @xmath16 , the matching problem is to find a set @xmath17 such that    1 .",
    "[ cndtn : 1 - 2mimomate ] @xmath18 , 2 .   [ cndtn : 2 - 2mimomate ] @xmath19 , 3 .",
    "[ cndtn : 3 - 2mimomate ] @xmath20 and @xmath21 for any two distinct elements @xmath22 , 4 .",
    "[ cndtn : 4 - 2mimomate ] @xmath23 is maximized , 5 .",
    "[ cndtn : 5 - 2mimomate ] @xmath24 is maximized among those @xmath25 satisfying constraint  [ cndtn : 4 - 2mimomate ] .    to ensure the success of zf - sic decoding , constraint  [ cndtn : 1 - 2mimomate ]",
    "allows a client to join the concurrent transmission only if it can be successively decoded , i.e. , getting a positive throughput .",
    "constraints  [ cndtn : 2 - 2mimomate][cndtn : 3 - 2mimomate ] force each client to follow at most one of other clients , and hence guarantee fairness .",
    "the rationale of constraint  [ cndtn : 4 - 2mimomate ] is that , since each client in traditional 802.11 has an equal probability to win the first contention and transmit the first stream , then , by finding the maximum set @xmath25 , we allow as many clients as possible to join the concurrent transmission .",
    "this ensures clients to also have a fair probability to transmit the second stream .",
    "under such a fairness constraint , our goal is to find a feasible solution that maximizes the total throughput of the followers , i.e. , the second streams .",
    "note that we are only interested in the throughput of the followers because , by using zf - sic , a client who transmits the first stream can get about the same throughput no matter who its follower is  @xcite .    the above _",
    "2-mimomate _ problem can actually be illustrated as a bipartite graph , as shown in figure  [ fig : graph](a ) .",
    "each edge @xmath11 is associated with a weight , which is set to the throughput of @xmath10 when it follows @xmath9 , i.e. , @xmath12 .",
    "we observe that the _ 2-mimomate _ problem is exactly equivalent to the _ bipartite maximum weighted maximum cardinality matching _",
    "problem , which finds a maximum cardinality matching with maximum weight in a bipartite graph and can be solved in polynomial time by the algorithm proposed in  @xcite ( see chapter 7.8 ) .",
    "note that , since  always assigns any leader a specific follower , any feasible solution of problem  [ probdefi : 2mimomate ] is therefore deterministic .",
    "that is , the relationship between the first contention winner and its follower is fixed until we solve problem  [ probdefi : 2mimomate ] again when the channels change .",
    "this is very different from the probabilistic nature of _ uniformly random _",
    "contention used in most of existing protocols  @xcite , where every client has the same probability to win the contention of sending concurrently with a given first winner .",
    "a natural question then arises : would choosing the follower uniformly randomly , e.g. , via _ uniformly random _ contention , results in a solution better than the output of problem  [ probdefi : 2mimomate ] ?",
    "we give the following positive result on problem  [ probdefi : 2mimomate ] :    [ thrm : mimomate_vs_contention ] if the throughput @xmath12 is greater than @xmath26 for all @xmath27 , then the average throughput of problem  [ probdefi : 2mimomate ] s output is higher than or equal to the average throughput achieved by using _",
    "uniformly random _ contention to choose the follower , even if the contention overhead is ignored .",
    "in fact , we can prove the following stronger theorem , which replaces the _ uniformly random _",
    "contention by any probabilistic assignment that obeys the fairness constraint . more specifically , in any fair probabilistic assignment , every client has the same probability to transmit the second stream ; however , any first winner might choose its follower with a non - uniform probability , and different leaders might have different probability distributions .",
    "[ thrm : mimomate_vs_random ] if the throughput @xmath12 is greater than @xmath26 for all @xmath27 , then the average throughput of problem  [ probdefi : 2mimomate ] s output is higher than or equal to the average throughput achieved by any fair probabilistic assignment .",
    "we prove the two theorems in the appendix.b .",
    "note that the two theorems only holds when the throughput @xmath12 is greater than @xmath26 for all @xmath28 .",
    "if this condition does not hold , i.e. , some @xmath29 , then using contention to choose the followers , e.g. , the method used in  @xcite , would fail zf - sic decoding . on the other hand , to guarantee the success of zf - sic decoding , such a pair of clients would not be chosen in problem  [ probdefi : 2mimomate ] .",
    "in addition , if we further consider the overhead of using contention to choose followers , the throughputs of the methods proposed in  @xcite would further decrease .",
    "we next consider the 3-antenna ap scenario .",
    "say clients @xmath30 and @xmath31 communicate with a 3-antenna ap concurrently and join the concurrent transmissions one after another .",
    "we define @xmath32 as the _ mimo - mate _ relation of clients @xmath30 and @xmath31 .",
    "the ap can use zf - sic to decode client @xmath31 by projecting along the direction orthogonal to both clients @xmath9 and @xmath10 .",
    "it re - encodes client @xmath31 s stream and subtracts it from the received signals .",
    "the ap then decodes client @xmath10 by projecting the resulting signal along the direction orthogonal to client @xmath9 , and decodes client @xmath9 after removing the signals of clients @xmath10 and @xmath31 .",
    "let @xmath33 and @xmath34 denote the throughput of clients @xmath10 and @xmath31 , respectively .",
    "the _ mimomate _ matching problem in a 3-antenna ap scenario can be defined as follows :    [ probdefi : 3mimomate ] ( * _ 3-mimomate _ * ) given a set of clients @xmath15 and the throughput @xmath35 and @xmath34 for all @xmath36 , the matching problem is to find a set @xmath37 such that    1 .",
    "[ cndtn : 1 - 3mimomate ] @xmath38 and @xmath39 , 2 .",
    "[ cndtn : 2 - 3mimomate ] @xmath40 , 3 .",
    "[ cndtn : 3 - 3mimomate ] @xmath41 , and @xmath42 for any two distinct elements @xmath43 , 4 .",
    "[ cndtn : 4 - 3mimomate ] @xmath23 is maximized , 5 .",
    "[ cndtn : 5 - 3mimomate ] @xmath44 is maximized among those @xmath25 satisfying constraint  [ cndtn : 4 - 3mimomate ] .",
    "[ algo ]    duplicate @xmath15 to @xmath45 remove legacy 802.11 nodes from @xmath46 initialize @xmath47    @xmath25    similarly , in the 3-_mimomate _ problem , we are only interested in maximizing the throughput of the followers , i.e. , clients @xmath10 and @xmath31 .",
    "we observe that the 3-_mimomate _ problem , as illustrated in figure  [ fig : graph](b ) , is actually a variation of the _",
    "maximum 3-dimensional matching _",
    "problem  @xcite , which is defined as follows : let @xmath48 , @xmath49 , and @xmath50 be disjoint sets , and let @xmath51 be a subset of @xmath52 that includes all feasible matching combinations .",
    "the problem finds the maximum matching @xmath53 such that @xmath54 and @xmath55 for any two distinct elements @xmath56 and @xmath57 in @xmath25 .",
    "hence , the differences between our 3-_mimomate _ problem and the 3-dimensional matching problem are 1 ) our problem further considers the total weight of a matching ( i.e. , constraint  [ cndtn : 5 - 3mimomate ] ) , and 2 ) constraint  [ cndtn : 2 - 3mimomate ] in our problem restricts each client to be included in an element at most once .",
    "for example , @xmath58 is not a feasible combination in our problem because client @xmath9 can not transmit two streams from its single antenna at the same time .    we note that a general @xmath4-_mimomate _ matching problem can be formulated in a similar manner , and it is a variation of the @xmath4-dimensional matching problem  @xcite . on the other hand , although the 2-_mimomate _ problem is polynomial time solvable , the @xmath4-_mimomate _",
    "problem for any @xmath59 is however np - hard .",
    "we will prove the np - hardness of the 3-_mimomate _ problem in the appendix.a by deriving a reduction from the 3-dimensional matching problem ( which is also np - hard ) to our problem .",
    "the np - hardness of the @xmath4-_mimomate _ problem can be proved in a similar way .",
    "there is an approximation algorithm  @xcite proposed to solve the @xmath4-dimensional matching problem .",
    "we can use the algorithm to solve our @xmath4-_mimomate _ matching problem and achieve an approximation ratio , 3/2+@xmath60 , for any @xmath61 , in terms of the size of matching .",
    "it however does not ensure to find the one achieving the maximal throughput ( i.e. , constraint  [ cndtn : 5 - 3mimomate ] ) among all maximum matchings . in addition , our problem requires an additional cost to compute the weights ( throughputs ) of all possible _ mimo - mates _ , which is an @xmath62 computational cost .",
    "we hence propose an algorithm , as shown in algorithm  [ algo ] , to solve our _ mimomate _ matching problem with a reduced cost of weight computation .",
    "the basic idea of algorithm  [ algo ] is to decompose the @xmath4-_mimomate _ matching problem into @xmath63 2-_mimomate _ matching problems , each of which can be solved by the bipartite maximum weighted maximum cardinality matching algorithm  @xcite in polynomial time .",
    "the advantage of such decomposition is that it reduces the cost of weight computation from @xmath62 to @xmath64 .    for simplicity",
    ", we use the 3-antenna ap scenario to describe our algorithm , and next explain how to generalize it to an @xmath4-antenna ap scenario .",
    "we first duplicate the client set @xmath15 to @xmath65 and @xmath66 ( line 1 in algorithm  [ algo ] ) .",
    "our algorithm solves the 3-_mimomate _ matching problem in two steps , as illustrated in fig .",
    "[ fig:3matching ] . in the first step , as in fig .",
    "[ fig:3matching](a ) , we set the weight of edge @xmath67 by computing the throughput of @xmath68 as it transmits concurrently with @xmath69 , and try to optimally match any second client in @xmath70 to a _ mimo - mate _ lead in @xmath71 , which is actually the 2-_mimomate _ matching problem for @xmath72 .",
    "after the first step , we determine the _ mimo - mate _",
    "relation for the first and second transmitters . then , in the second step , our goal is to add any third transmitter in @xmath66 into each _ mimo - mate _ relation . to do so ,",
    "we first assign edge @xmath73 a weight that equals the throughput of @xmath74 when it transmits concurrently with @xmath75 and @xmath75 s predecessor , which is solved in the first step . for example , in fig .",
    "[ fig:3matching](b ) , because @xmath76 is matched as _ mimo - mates _ in the first step , the weight of edge @xmath77 equals the throughput of @xmath78 when it joins concurrent transmissions of @xmath79 and @xmath80 .",
    "we note that , for any @xmath81 , if it is not assigned a predecessor in the first step , we set the weight of all its outgoing edges to 0 because it is not allowed to match with any clients in @xmath66 in the second step .",
    "after weight assignment , we can solve another 2-_mimomate _ matching problem to match clients in @xmath66 to clients in @xmath70 .",
    "our algorithm can be generalized to the @xmath4-_mimomate _ matching problem .",
    "specifically , it iteratively solves a 2-_mimomate _ matching problem to match clients in @xmath82 to clients in @xmath83 , where @xmath84 .",
    "hence , each iteration includes a client in a _ mimo - mate _ relation . in particular",
    ", the @xmath85 iteration adds the @xmath86 concurrent client to _ mimo - mates_. in addition , in the @xmath85 iteration , because we already know the first @xmath87 clients in _ mimo - mates _ , we thus only need to compute the weight of edges @xmath88 according to the given _ mimo - mate _ relation .",
    "this is why our algorithm can reduce the cost of weight computation to @xmath64 .",
    "so far we describe our algorithm by assuming that all the clients are  nodes .",
    "our algorithm can be slightly adjusted to allow the coexistence of  nodes and legacy 802.11 nodes . recall that we duplicate the client set @xmath15 to @xmath89 , where @xmath4 is the number of antennas equipped on the ap .",
    "each node in the duplicated set @xmath90 is a candidate of sending the @xmath91 stream .",
    "note that legacy nodes follow the traditional 802.11 operation and can only contend for sending the first stream . in other words ,",
    "legacy nodes do not leverage the concurrent transmission opportunities and will not follow any ongoing transmissions .",
    "we can hence simply remove those legacy nodes from @xmath46 , and only keep them in @xmath71 . by doing this",
    ", legacy nodes can still use conventional 802.11 contention to occupy the first dimension , and can further be followed by some other  nodes .",
    "consider fig .",
    "[ fig:3matching ] as an example .",
    "assume that node @xmath79 is a legacy node .",
    "we only put it in @xmath71 , but not in @xmath70 and @xmath66 .",
    "it hence can be followed by some other mimomate nodes , but can not join concurrent transmissions .",
    "we consider a mu - mimo mac protocol similar to sam  @xcite , where clients join the concurrent transmissions one after another . like sam  @xcite",
    ", clients join concurrent transmissions one after another .",
    "each client counts the number of concurrent streams by cross - correlating with the known preamble in the presence of ongoing transmissions .",
    "clients can join the concurrent transmissions until they detect that the number of existing streams equals the number of antennas at the ap .",
    "each client determines its best bit - rate based on turborate , the mu - mimo rate adaptation scheme proposed in  @xcite .",
    "turborate allows each client to announce training symbols before data transmission .",
    "all the clients who contend for the later transmissions can hence learn the channels of the ongoing streams from those training symbols , and adapt the bit - rates based on their channels . moreover , turborate asks clients to give up contention opportunities if their snr after zf - sic decoding is too low to be decodable . to increase the gain of mu - mimo , the protocol forces concurrent clients to end their transmissions at about the same time .",
    "to do so , concurrent clients overhear the information about the frame duration of the first stream , which is embedded in the mac header , and fragment or aggregate their packets accordingly  @xcite@xcite",
    ".  differs from the existing mac protocols in that it only allows clients to use 802.11 s csma / ca to contend for the first stream , but lets the remaining clients join the concurrent transmission of its predecessor in the _ mimo - mate _ relation scheduled by algorithm  [ algo ] .",
    "in particular , say a client is scheduled to transmit the @xmath85 stream in the _ mimo - mates _ ; it can start transmitting once it detects @xmath92 preambles from all its predecessors after its leader wins the contention .",
    "hence , all clients in the _ mimo - mates _ only require one contending process .",
    "to realize such a user matching protocol , s mac needs tow major modifications : 1 ) the ap needs to learn the uplink channel information of all its clients , and 2 ) the ap needs to announce the matching result to its clients . to learn the channel information ,",
    "one possible solution is to let all the clients learn their uplink channels and report this information to the ap .",
    "to do so , the clients leverage _ channel reciprocity _  @xcite , which refers to the property that the channels in the forward and reverse directions are the same .",
    "using reciprocity , every client can exploit the beacons to learn the downlink channel and use it to estimate the uplink channel .",
    "it is however an expensive overhead to ask all the clients to report their channels for every packet transmission . on the other hand , legacy nodes , which follow the traditional 802.11 operation ,",
    "do not feedback this information .",
    "we hence perform the following optimizations to reduce the overhead of channel feedback : the ap learns the uplink channel of a client from its uplink frames , including the association frames when that client joins the network , the data frame of its uplink packets , and the ack of its downlink packets .",
    "the ap hence only needs to re - schedule _ mimo - mates _ when it detects that the channels of certain clients change due to channel variation or user mobility .",
    "once the ap reschedules _ mimo - mates _ , it announces the updated matching result to the  nodes . a simple solution is to annotate the periodical beacon messages with the announcement",
    ". however , legacy nodes might not be able to identify the modified beacon format . to enable the coexistence of  nodes and legacy nodes , we let the ap send the matching result in another control frame using the subtype not used in conventional 802.11  @xcite .",
    "we notice that the above protocol only operates properly if the scheduled _ mimo - mates _ always have traffic to transmit . however , in practice , a client might have a bursty traffic pattern .",
    "hence , to enable users to fully utilize concurrent transmission opportunities , we can further integrate  with any contention - based mac protocol . specifically , clients can contend for the unused degrees of freedom if the scheduled _ mimo - mates _ do not have traffic to transmit .",
    "however , to better exploit the gain of concurrent transmissions , we propose to integrate  with an _ angle - based _ contention scheme .",
    "in particular , when any of the scheduled _ mimo - mates _ does not have traffic to transmit , we allow other clients to contend for the concurrent transmission opportunity , e.g. , the second stream in the example shown in fig .",
    "[ fig : protocol ] , until the number of concurrent streams equals the number of antennas supported by the ap , @xmath4 .",
    "however , we modify the contention mechanism to assign different users a different probability of winning a concurrent transmission opportunity , according to their channel orthogonality with the ongoing streams .",
    "specifically , we tend to let a client with a larger angle between its channel and the channels of the ongoing streams have a higher probability to win the concurrent transmission opportunity such that snr reduction due to projection can be minimized .",
    "[ algo : contention ]    to achieve this goal , we apply algorithm  [ algo : contention ] to adjust the contention window for each concurrent stream according to the channels of the concurrent transmitters . specifically , when a node contends for sending the @xmath85 stream in the presence of @xmath93 ongoing transmissions , it will adjust its contention windows based on the angle between its own channel and the channels of the @xmath93 ongoing transmitting clients .",
    "we assume that clients can learn the angle between its own channel and the channels of the ongoing transmitters using the distributed method proposed in  @xcite .",
    "the high - level idea of the angle - based contention is that , if this angle is large , we let the client decrease its contention window and hence earn a higher probability to win the concurrent transmission opportunity",
    ". otherwise , the client gives other clients a higher priority to transmit concurrently by increasing its contention window .",
    "to realize the above design , we let each client maintain a distinct contention window @xmath94 for the contention of the @xmath85 stream .",
    "the contention windows are adjusted according to the channels of the ongoing clients .",
    "the amount of increment ( or decrement ) is proportional to the inter - client angle , i.e. @xmath95 in line 10 . to ensure fairness ,",
    "we ask a client assigned a higher priority in the current packet to pay back its opportunity in the next packet . to this end , if a client decreases ( increases ) the contention window by @xmath96 for the current packet , it pays ( earns ) the priority back by increasing ( decreasing ) @xmath96 to its contention window for the next packet , i.e. , @xmath97 in line 8 .",
    "the above contention scheme can be applied for the contention of each concurrent stream until the number of streams reaches the number of antennas supported by the ap , i.e. , @xmath98 .",
    "0.05 in * overhead and complexity : * recall that implementing  as a mac protocol relies on two modifications : 1 ) the ap needs to learn the uplink channels , and 2 ) the ap needs to announce the matching results .",
    "note that we let the ap measure the channel information from historical uplink frames without any additional message overhead .",
    "the only additional overhead required by our design is the matching announcement .",
    "we will show in section [ sec : result ] that such a small overhead does not offset the gain of our matching algorithm . on the other hand , since our matching algorithm is performed in the access point , and the complexity of clients should not change much .",
    "therefore , the only supports we need from  clients are that 1 ) they need to receive the matching announcement , and 2 ) they need to adapt the contention window size based on a simple operation defined in our angle - based contention scheme , as in algorithm 2 .",
    "we believe additional power consumption in the clients due to our design should be negligible .",
    "we build a prototype of using the usrp - n200 radio platform , which is equipped with an rfx2400 daughterboard .",
    "a multi - antenna ap is built by combining multiple usrp - n200 boards using an external clock .",
    "we implement an ofdm phy layer with standard 802.11 modulations ( bpsk , 4 - 64qam ) and code rates . since usrp - n200 operates on a 10mhz channel , the possible bit rates range from 3 to 27 mb / s .",
    "we evaluate the performance of  in both 2-antenna and 3-antenna ap scenarios .",
    "limited by the number of usrps we have , we set 6 clients to contend for transmitting two packets concurrently to the 2-antenna ap , while setting 5 clients to contend for transmitting three packets concurrently to the 3-antenna ap . to allow multiple clients to transmit concurrently , we leverage the synchronization method used in  @xcite@xcite .",
    "specifically , for each experiment , the ap broadcasts a trigger signal .",
    "each client records the timestamp of detecting the trigger , @xmath99 , waits a pre - defined period of time , @xmath100 , and sets the timestamp of the beginning of its transmission to @xmath101 . in our testbed , @xmath100 is set to 0.1s , which is long enough to tackle the delays introduced by software .",
    "we compare the following schemes : 1 ) , which is our proposed protocol , 2 ) _ max - throughput first _ , which always allows the client that achieves the maximal throughput after projection to join the concurrent transmissions , 3 ) _ max - angle first _ , which always allows the client that has the maximum angle with the ongoing transmissions to transmit concurrently , 4 ) sam  @xcite , i.e. , _ contention - based _ protocol without rts / cts , which assigns all users an equal probability to sequentially contend for each concurrent transmission opportunity , and 5 ) mrc  @xcite , i.e. , multi - round contention , which also assigns each client an equal probability of winning contentions , but precedes concurrent transmissions with multiple rounds of rts and a single cts .",
    "for all the comparison schemes , we apply turborate  @xcite , a mu - mimo rate adaptation scheme , to allow concurrent clients to select their best bit rates .    due to the timing constraints limited by software radio ,",
    "we do not implement contention , random backoff and ack in usrps . instead , for each experiment",
    ", we offline create a packet trace of 1,000 1500-byte packets for each client .",
    "the traces of different clients are generated based on the above four comparison schemes , and ensure that there are at most 2 and 3 clients assigned to transmit concurrently in a particular time - slot in 2- and 3- antenna ap scenarios , respectively . in particular , in the beginning of each experiment , we let each client transmit training symbols , one after another , for the ap to estimate its uplink channel .",
    "the ap then performs offline contention to generate 1,000 rounds of concurrent transmissions .",
    "for all the comparison schemes , in each round of concurrent transmissions , the ap assigns each client a randomly - selected backoff value between 1 and its contention window , and picks the client with the smallest backoff value to send the first stream .",
    "the contention window of each client is updated according to the 802.11 standard if collisions occur .",
    "the ap then assigns the remaining concurrent transmission opportunities to other clients based on design of various comparison protocols .",
    "for example , in sam , the ap uses the same contention scheme to assign the remaining transmission opportunities ; in the ap assigns _ mimo - mates _ of the first contention winner to transmit concurrently ; in _ max - throughput first _ and _ max - angle first _ , the ap assigns the remaining transmission opportunities based on the throughput and the angle between channels , respectively .",
    "based on the contention results , the ap generates the packet trace for each client , and immediately sends the trace to each client through ethernet connection .",
    "each usrp client can hence read its offline - generated packet trace and determine the time that it should transmit packets accordingly .",
    "clients are asked to send null symbols , i.e. , 0 , if they are not selected to transmit in a round of packet transmissions . since offline contention performed in the ap",
    "does not take too much time , we expect that the channels do not change significantly , i.e. , the channels during data transmissions would be similar to those learned in the training phase .",
    "in addition , since usrps can not implement real - time ack , we disable retransmissions in the experiments .",
    "that is , the ap simply drops a packet if the packet can not be received or decoded correctly .",
    "we first evaluate the performance of  when clients have a continuous traffic pattern , and next evaluate the performance of integrating the angle - based contention mechanism ( algorithm  [ algo : contention ] ) with  when clients have a bursty traffic pattern .",
    "we evaluate the performance of the comparison schemes in terms of 1 ) throughput gain , 2 ) fairness , and 3 ) overhead .",
    "* throughput gain : * we first check the throughput gain delivered by  when users have a continuous traffic pattern , i.e. , always have packets to send .",
    "hence , in , the scheduled _ mimo - mates _ can always transmit concurrently if their lead wins the first contention .",
    "we repeat the experiment with random assignment of client locations in our testbed .    figs .  [",
    "fig : tput - cont](a ) and  [ fig : tput - cont](b ) plot the cdfs of the total throughput in 2-antenna and 3-antenna scenarios , respectively .",
    "the figures show that traditional contention - based protocols , i.e. , sam and mrc , assign each user an equal probability to win the contention , without considering the channel characteristics , and produce a low throughput .",
    "mrc requires additional rts - cts overhead , and hence performs a little bit worse than sam .",
    "compared to sam ( mrc ) , the average throughput gain from enabling concurrent transmissions with s user selection is about 42% ( 45% ) and 52% ( 57% ) in 2- and 3-antenna ap scenarios , respectively .",
    "the gain mainly comes from two design principles in : 1 ) minimizing snr reduction due to mimo decoding , and 2 ) reducing the channel time wasted for contending for concurrent transmissions . note that the gain in the 3-antenna ap scenario is higher than that in the 2-antenna ap scenario .",
    "it implies that user matching plays an important role to deliver the mu - mimo gain especially when the number of concurrent transmissions supported by the system increases .",
    "the figures also show that _ max - angle first _ and _ max - throughput first _",
    "produce a throughput comparable to ( or even slightly higher than ) our because they greedily select the users with the best channel characteristics or with the highest throughput to join the concurrent transmissions .",
    "in addition , similar to , they also require only one contending process",
    ". we will show later that these two schemes however result in unfair resource sharing .",
    "* fairness : * we next examine fairness of sharing concurrent transmission opportunities among clients in a 3-antenna ap scenario . we plot in figs .",
    "[ fig : fairness](a ) and  [ fig : fairness](b ) the number of the second transmission opportunities and the third transmission opportunities obtained by each client over the total number of transmissions , which is the metric used to evaluate fairness in our experiments .",
    "the figures show that both the contention - based schemes , i.e. , sam and mrc , and our  enable all clients to get almost an equal probability to transmit the second stream and the third stream , respectively .",
    "this implies that our matching algorithm enables users to achieve the same level of fairness as if they use a fair contention mechanism .",
    "the probability of sending the third stream in sam is however slightly lower than that in  and mrc .",
    "this is because , if the transmission time of the first stream is too short due to a high data rate , then there might be no enough time for sam to hold the third stream and its contention . on the other hand , in _ max - throughput",
    "first _ and _ max - angle first _ , users can not have a fair opportunity to transmit concurrently because these two schemes always favor certain users to achieve a high throughput .",
    "based on the results in figs .",
    "[ fig : tput - cont ] and [ fig : fairness ] , we conclude that  achieves a throughput comparable to the greedy algorithms , while providing users a fairness level similar to the contention mechanism .    * overhead : * we now compare the overhead of different systems .",
    "recall that we do not implement ack and contention in usrps .",
    "thus , we offline compute the channel time occupied by the protocol overhead . to do so",
    ", we feed the throughput outputted by the experiments ( i.e. , the rate of the data frames without considering the 802.11 overhead ) to the offline computation , and add the overhead of each protocol , including contention , interframe timing ( sifs / difs ) , the plcp / mac headers , and the ack , to each packet transmission .",
    "[ fig : overhead ] plots the percentage of airtime occupied by the data frames , which is computed by the ratio of airtime for data transmission to the overall airtime occupied by a packet ( i.e. , including the overhead ) .",
    "the figure shows that , since clients in our  and sam use 802.11 s contention to compete for sending the first stream , their overhead for the first stream is the same with that of the conventional 802.11 . by eliminating the contending process for the second stream ,  and the greedy algorithms can utilize about 63% of airtime to transmit the second streams .",
    "in contrast , both sam and mrc require multiple rounds of contention , which significantly offset the mimo gain when the number of antennas supported by the ap keeps increasing .",
    "sam allows each client to transmit immediately once it wins the contention .",
    "hence , the airtime of data sent in a higher dimension becomes shorter and shorter . for mrc",
    ", all concurrent clients start their transmissions after receiving the cts , their available airtime is hence shorter yet the same .",
    "however , since multiple clients might send rts concurrently in mrc , the number of contention rounds required in mrc might be fewer than that in sam .",
    "this explains why the airtime of the third stream in mrc is longer than that in sam .",
    "we next evaluate the performance of  when clients have a bursty traffic pattern .",
    "the packet traces are generated using the following model .",
    "each user transmits several files to the ap , and the size of each file is randomly selected from 500 to 550 kb .",
    "the arrival of file transmission follows a poisson process with an arrival rate @xmath102 files per second .",
    "thus , when any of the scheduled _ mimo - mates _ does not have traffic to send , other clients contend for transmitting concurrently using the contention window computed based on algorithm  [ algo : contention ] .",
    "[ fig : tput - bursty ] plots the cdfs of the total throughput .",
    "the figure shows that , compared to sam ( mrc ) , the average throughput gain achieved by combining  with angle - based contention is about 22% ( 33% ) and 19% ( 36% ) for 2- and 3-antenna scenarios , respectively .",
    "the throughput gain in this case is lower than that in the continuous traffic scenario because angle - based contention introduces additional contention overhead .",
    "also , for some periods , there are only a few clients with traffic demand and hence concurrent transmission opportunities can not be fully utilized .",
    "the gap between sam and mrc for bursty traffic is larger than that for continuous traffic .",
    "this is because , in mrc , when there are always at least @xmath4 contending clients , where @xmath4 is the degrees of freedom , the ap might be able to detect @xmath4 clients within fewer than @xmath4 contention rounds , if some clients send rts at the same time in one contention round .",
    "however , when the number of contending clients is less than @xmath4 , the ap always needs to wait for the duration of @xmath4 rounds of rts and then responds the cts .",
    "we further perform simulations to evaluate the performance of in large - scale scenarios .",
    "the simulations are designed to answer the following questions .    *",
    "how does  perform in different scales of networks ? *",
    "how does the packet size affect the throughput performance of comparison protocols ?",
    "* can legacy 802.11 devices operate normally in the presence of  nodes ?    in each simulation , we uniformly randomly distribute the users in a disk with center the ap and radius 100  m. furthermore , the antennas on the ap are collinear with a gap of 0.05  m between two neighboring antennas .",
    "the channels are generated according to the rayleigh fading channel model , and we assume the available transmission bit - rates are 6 , 9 , 12 , 18 , 24 , 36 , 48 , and 54  mb / s , which are identical with 802.11a .",
    "the default number of users is set to 15 , and the default packet size is set to 1500 bytes .",
    "the detailed settings will be specified in each simulation .",
    "we evaluate the performance of  when the number of clients varies from 3 to 30 . figs .",
    "[ fig : usrnum - tput](a ) and  [ fig : usrnum - tput](b ) plot the total throughput for 2-antenna and 3-antenna ap scenarios , respectively .",
    "the trend of the simulation results are similar to that of small - scale experimental results .",
    "the effect of increasing the number of clients on , _ max - angle first _ , and _ max - throughput first _ is relatively small , showing that  operates well even when the network scales up .",
    "one thing worth noting is that sam outperforms mrc when the number of clients is small , e.g. , less than twelve , because its clients do not need to wait for transmitting concurrently after multiple rounds of contention .",
    "the throughput of sam however decreases when the number of clients increases .",
    "the reason is that , although both sam and mrc require multiple rounds of contention , contention failure can only occur in the last round of contention in mrc , yet could happen in any round of contention in sam .",
    "the more clients exist , the higher probability that contention fails is .",
    "when contention fails , the number of concurrent streams would exceed the degrees of freedom , which makes zf - sic decoding fail . hence the result .",
    "we next evaluate how  performs when the packet size varies dynamically . in this simulation",
    ", we uniformly randomly pick a size between 200 bytes and 1500 bytes for the first client of each transmission .",
    "the clients joining later end their transmissions at the same time with the first stream .",
    "again , figs .",
    "[ fig : pktsize - tput](a ) and [ fig : pktsize - tput](b ) plot the total throughput for 2-antenna and 3-antenna ap scenarios , respectively . due to a smaller average packet size , i.e. , around @xmath103 bytes , and , as a result , a higher proportion of airtime occupied by the overhead , the throughput in this simulation is less than those found in fig .",
    "[ fig : usrnum - tput ] ; however , the advantage of  does not get affected when the packet size changes .",
    "observer that , compared to figs .",
    "[ fig : usrnum - tput](a ) and  [ fig : usrnum - tput](b ) , the throughput of sam decreases slower here .",
    "this is because , in sam , when the packet size is small , then there might be no remaining airtime for clients to exploit the transmission opportunities of high dimensions . in other words ,",
    "the number of contentions for sam in this simulation is less than that in the previous simulation . as a result ,",
    "less contention failures occur here .",
    "therefore , compared with the previous simulation , the effect of increasing the number of users on sam is less here .",
    "we finally check the performance of  in the presence of legacy nodes .",
    "since mrc is not compatible with the traditional 802.11 standard , we exclude it from this simulation . in this simulation",
    ", we set the total number of clients at 15 , and let some of nodes be legacy 802.11 clients . figs .",
    "[ fig : legacynum - tput](a ) and [ fig : legacynum - tput](b ) show the total throughput when the number of legacy nodes varies from 1 to 15 .",
    "the results show that , in _ max - angle first _ and _ max - throughput first _",
    ", the total throughput decreases as the number of legacy nodes increases .",
    "the first reason is that , since legacy nodes can only send the first stream , i.e. , occupying the first dimension , the probability of picking concurrent clients with a good channel decreases when the number of non - legacy nodes decreases .",
    "second , when the number of non - legacy clients is less than the degrees of freedom , the concurrent transmission opportunities might not be able to be fully utilized , as a result reducing the throughput significantly .",
    "when all the users are legacy users , i.e. , the number of legacy users is fifteen , all the methods degenerate to the traditional 802.11 protocol and hence perform the same .",
    "the performance of sam however does not change much with various numbers of legacy users because it simply randomly picks clients to fully utilize the available degrees of freedom , without considering channel orthogonality between concurrent clients . on the contrary ,",
    "the performance of sam increases slightly when the number of non - legacy nodes decreases , because the probability of collisions due to contention failure decreases when more nodes join contention .",
    "we further check whether the throughput performance of legacy nodes gets affected by our matching design .",
    "[ fig : legacytput](a ) and  [ fig : legacytput](b ) compare the total throughput of legacy nodes in comparison schemes with that in the traditional 802.11 protocol .",
    "the results show that their throughput in sam is significantly worse than that in traditional 802.11 .",
    "this is because sam suffers from contention failures that might happen in the second and third streams .",
    "the figure also shows that legacy nodes can coexist with  nodes well and achieve a similar performance , as compared to that in traditional 802.11 .",
    "a small gap between  and traditional 802.11 is due to occasional contention failures that might happen when contention is required for some first winners who are not assigned any follower .",
    "this paper introduces , a user matching protocol that maximally delivers the gain of a mu - mimo lan , while , at the same time , ensuring all the clients to have a fair opportunity to transmit concurrent packets .",
    "the clients scheduled as the _ mimo - mates _ can join concurrent transmissions one after another with only one contending process , as a result reducing the mac overhead significantly .",
    "we also integrate  with an angle - based contention mechanism to best utilize concurrent transmission opportunities when any of the scheduled _ mimo - mates _ does not have traffic to transmit .",
    "our prototype implementation shows that  increases the throughput by 42% and 52% over the contention - based protocol for 2- and 3-antenna ap scenarios , respectively , and also provides fairness for clients .",
    "our theoretical analysis also proved that  can always achieve a higher or equal throughput as compared to the traditional contention scheme in the 2-antenna ap scenario . analytic performance evaluation for any general scenarios is considered as our future work .",
    "y.  zhang , c.  ji , y.  liu , w.  malik , d.  obrien , and d.  edwards , `` a low complexity user scheduling algorithm for uplink multiuser mimo systems , '' _ ieee transactions on wireless communications _ , vol .",
    "7 , no .  7 , pp .",
    "2486 2491 , july 2008 .",
    "y.  chao , f.  bin , q.  yu , and w.  wen - bo , `` adjustable determinant pairing scheduling for virtual mimo system , '' in _ intelligent signal processing and communication systems , 2007 .",
    "ispacs 2007 . international symposium on _ , 2007 .",
    "x.  chen , h.  hu , h.  wang , h .- h .",
    "chen , and m.  guizani , `` double proportional fair user pairing algorithm for uplink virtual mimo systems , '' _ ieee transactions on wireless communications _",
    ", vol .  7 , no .  7 , 2008 .                h.  senhua , q.  ling , and s.  lin , `` zero - forcing beamforming with receiver antenna selection in downlink multi - antenna multi - user system , '' _ journal of systems engineering and electronics _ , vol .  19 , no .  6 , pp .",
    "1258  1263 , dec .",
    "2008 .",
    "h.  viswanathan , s.  venkatesan , and h.  huang , `` downlink capacity evaluation of cellular networks with known - interference cancellation , '' _ selected areas in communications , ieee journal on _ , vol .  21 , no .  5 ,",
    "pp . 802811 , 2003 .",
    "k.  mehlhorn and s.  nher , _ _ leda : a platform for combinatorial and geometric computing.__1em plus 0.5em minus 0.4emcambridge university press , 1999 .",
    "[ online ] .",
    "available : http://www.mpi-sb.mpg.de/~mehlhorn/ledabook.html      c.  hurkens and a.  schrijver , `` on the size of systems of sets every t of which have an sdr , with an application to the worst - case ratio of heuristics for packing problems , '' _ siam journal on discrete mathematics _",
    ", vol .  2 , no .  1 ,",
    "pp . 6872 , 1989 .",
    "we start our proof by relaxing the 3-_mimomate _ problem to a simpler problem , denoted by the maximum fairness ( 3mf ) problem , which finds a set @xmath25 such that constraints  [ cndtn : 1 - 3mimomate][cndtn : 4 - 3mimomate ] in problem  [ probdefi : 3mimomate ] are satisfied .",
    "any optimal solution of the 3mf problem is hence a feasible solution of our problem .",
    "we then proceed the proof by showing that even the decision version of the relaxed 3mf problem is np - hard .",
    "let 3mf@xmath104 denote an instance of the decision version of the 3mf problem , which seeks a matching @xmath105 with @xmath106 .",
    "we prove its np - hardness by polynomial - time reduction from the 3-dimensional matching problem , which is np - hard .",
    "let 3dm@xmath107 denote the decision version of the 3-dimensional matching problem , which finds a matching @xmath108 , where @xmath109 , such that @xmath110 , and @xmath111 for any @xmath112 and @xmath106 .",
    "for every instance @xmath113 , we can construct an instance 3mf@xmath114 in polynomial time as follows :      we show that 3dm@xmath107 has a feasible solution @xmath25 if , and only if , 3mf@xmath104 has a feasible solution @xmath118 .",
    "for the `` only if '' direction , for all the elements @xmath119 in @xmath25 , we add @xmath120 to the solution of 3mf@xmath114 , @xmath118 .",
    "this solution is feasible because , by the construction of the instance , @xmath121 , and thus constraints 1 and 3 of the 3mf problem hold .",
    "constraint 2 is also satisfied , i.e. , @xmath122 and @xmath123 are distinct clients , because @xmath124 . finally , since different elements @xmath119 map to different @xmath125 , then @xmath126 .    for the `` if '' direction , for every @xmath127",
    ", we add @xmath128 to the solution of 3mf , @xmath25 .",
    "since @xmath129 in @xmath118 , we have @xmath130 .",
    "thus , by the construction of the instance , @xmath131 .",
    "in addition , by constraint  [ cndtn : 3 - 3mimomate ] , the constraint of the 3 dm problem that restricts @xmath54 , and @xmath132 , for any two distinct elements @xmath133 , holds . finally , again , since @xmath134 , @xmath135 holds as well .",
    "hence , we conclude that the 3fm problem is also np - hard .    [ [ proofs - of - theoremthrm - mimomate_vs_contention - and - theoremthrm - mimomate_vs_random ] ] proofs of theorem  [ thrm : mimomate_vs_contention ] and theorem  [ thrm : mimomate_vs_random ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    since theorem  [ thrm : mimomate_vs_random ] implies theorem  [ thrm : mimomate_vs_contention ] , we only need to show theorem  [ thrm : mimomate_vs_random ] . furthermore , it is sufficient to show that the average throughput of the output of problem  [ probdefi : 2mimomate ] , denoted as @xmath136 , is greater than or equal to that of the optimal fair probabilistic assignment selection ( the fair probabilistic assignment selection that achieves the highest average throughput ) , denoted as @xmath137 .",
    "for ease of presentation , we give an order to the clients , so that the input @xmath15 in problem  [ probdefi : 2mimomate ] , i.e. , the set of all clients , is @xmath138 . note that since the throughput @xmath139 is greater than 0 for all @xmath140 , i.e. , zf - sic decoding is successful , a client who transmits the first stream can get about the same throughput no matter who its follower is  @xcite . in addition , every client has an equal probability of winning the first contention .",
    "therefore , we assume that the throughputs contributed by the first stream are the same in both the output of problem  [ probdefi : 2mimomate ] and the optimal fair probabilistic assignment .",
    "thus , we can ignore the average throughput contributed by the first stream in the following proof , since we only need to show @xmath141 .    to derive the average throughput",
    ", we introduce a variable @xmath142 for all @xmath143 .",
    "@xmath142 represents the probability that client @xmath144 is chosen as client @xmath145 s follower .",
    "therefore , given @xmath142s , the average throughput can be expressed as follows .",
    "@xmath146 now , we are ready to derive @xmath136 and @xmath137 .",
    "denote @xmath147s and @xmath148s as the @xmath142s used in the output of problem  [ probdefi : 2mimomate ] and the optimal fair probabilistic assignment , respectively .",
    "it is then sufficient to show that @xmath149    the following proof is done by three steps : * 1 ) * show that @xmath150s is an optimal solution of the integer programming of the bipartite maximum weighted matching problem ; * 2 ) * show that any @xmath151s is a feasible solution of the relaxed integer programming of the bipartite maximum weighted matching problem , which allows the integer variables to be relaxed as any real number between @xmath152 $ ] ; * 3 ) * start from the fact that the achieved objective value of @xmath150s in the integer programming is greater than or equal to that of @xmath151s in the relaxed integer programming for the maximum weight matching problem  @xcite and show that eq .   holds .",
    "0.05 in * step 1 : * note that @xmath147s are either 0 or 1 , indicating whether to use client @xmath144 as client @xmath145 s follower or not .",
    "first observe that since @xmath153 is greater than @xmath26 for all @xmath143 , the size of the output of problem  [ probdefi : 2mimomate ] , @xmath154 , must be @xmath155 .",
    "in other words , every client has a different follower , which implies @xmath156 then , recall that problem  [ probdefi : 2mimomate ] is actually a bipartite maximum weighted maximum cardinality matching problem .",
    "the book  @xcite shows that , to solve the bipartite maximum weighted maximum cardinality matching problem , we can add a sufficiently large number , @xmath157 , to the weight of each edge , and solve the bipartite maximum weighted matching problem on the new graph instead .",
    "we can now use the integer programming of the bipartite maximum weighted matching problem to find @xmath147s .",
    "we first give a detailed construction of the bipartite graph .",
    "given the set @xmath15 and throughputs @xmath153s in problem  [ probdefi : 2mimomate ] , we construct a bipartite graph @xmath158 , where + @xmath159 ( the set of winners of the first contention ) , + @xmath160 ( the set of followers ) , + @xmath161 , and + @xmath162 ( the increased throughput ) .",
    "+ the integer programming of the bipartite maximum weighted matching problem on @xmath163 can then be formulated as @xmath164 the optimal @xmath165s of the above integer programming are then @xmath147s .",
    "0.05 in * step 2 : * to show that @xmath151s correspond to a feasible solution of the relaxed integer programming of the bipartite maximum weighted matching problem , we need to derive some properties of @xmath151s .",
    "the fairness constraint requires that every client has the same probability to transmit the second stream .",
    "we hence have the following equation . @xmath166",
    "the inequality must follows .",
    "otherwise , @xmath167 , which implies @xmath168 for some @xmath145 and contradicts to the fact that any fair probabilistic assignment chooses at most one follower at each time , i.e. , @xmath169 then , by eq .   and eq .  , we get that @xmath151s correspond to a feasible solution of the relaxed integer programming .",
    "0.05 in * step 3 : * it has been shown in  @xcite that , for the relaxed integer programming of the bipartite maximum weighted matching problem , the objective value achieved by an optimal integral solution is no less than that achieved by any feasible solution of the relaxed integer programming .",
    "hence , we have @xmath170 .",
    "therefore , it is sufficient to show that @xmath171 before showing this , we must further refine eq .   and get the following equation . @xmath172 which can be proved by contradiction . if there exists some @xmath173 , such that @xmath174 , then we must have @xmath175 ; otherwise , if @xmath176 , then @xmath177 , which contradicts to @xmath174 . therefore , we can add a small value to all @xmath178s , @xmath179 , such that eq .   and",
    "eq .   still hold , i.e. , after addition , @xmath151s still correspond to a fair probabilistic assignment .",
    "obviously , the average throughput is higher after we increase @xmath178s , which contradicts to the fact that @xmath151s correspond to an optimal fair probabilistic assignment .",
    "hence , eq .   holds .",
    "we are now ready to accomplish the final part of the proof .",
    "observe that @xmath180 and @xmath181 by a similar reasoning .",
    "therefore , it is sufficient to show that @xmath182 . by eq .",
    ", we have @xmath183 . the proof is then completed ."
  ],
  "abstract_text": [
    "<S> in multiuser mimo ( mu - mimo ) lans , the achievable throughput of a client depends on who are transmitting concurrently with it . </S>",
    "<S> existing mu - mimo mac protocols however enable clients to use the traditional 802.11 contention to contend for concurrent transmission opportunities on the uplink . </S>",
    "<S> such a contention - based protocol not only wastes lots of channel time on multiple rounds of contention , but also fails to maximally deliver the gain of mu - mimo because users randomly join concurrent transmissions without considering their channel characteristics . to address such inefficiency , this paper introduces , a leader - contention - based mu - mimo mac protocol that matches clients as concurrent transmitters according to their channel characteristics to maximally deliver the mu - mimo gain , while ensuring all users to fairly share concurrent transmission opportunities . </S>",
    "<S> furthermore ,  elects the leader of the matched users to contend for transmission opportunities using traditional 802.11 csma / ca . </S>",
    "<S> it hence requires only a single contention overhead for concurrent streams , and can be compatible with legacy 802.11 devices . a prototype implementation in usrp - n200 shows that  achieves an average throughput gain of 1.42x and 1.52x over the traditional contention - based protocol for 2-antenna and 3-antenna ap scenarios , respectively , and also provides fairness for clients .    </S>",
    "<S> multiuser mimo , user matching , channel orthogonality </S>"
  ]
}
{
  "article_text": [
    "we work over a ground set ( or domain ) @xmath4 , which will either be the rationals , @xmath5 , or the reals , @xmath6 .",
    "we say that a relation @xmath7 is _ semilinear _ if it can be represented as a finite union of finite intersections of open and closed half - spaces in @xmath8 .",
    "alternatively , @xmath9 is semilinear if it is first - order definable in @xmath10 where @xmath11  @xcite .",
    "semilinear relations appear in many different contexts within mathematics and computer science : they are , for instance , frequently encountered in algebraic geometry , automata theory , spatiotemporal reasoning , and computer algebra .",
    "semilinear relations have also attained a fair amount of attention in connection with _ constraint satisfaction problems _ ( csps ) . in a csp , we are given a set of variables , a ( finite or infinite ) domain of values , and a finite set of constraints .",
    "the question is whether or not we can assign values to the variables so that all constraints are satisfied . from a complexity theoretical viewpoint ,",
    "solving general constraint satisfaction problems is obviously a hard problem .",
    "various ways of refining the problem can be adopted to allow a more meaningful analysis .",
    "a common refinement is that of introducing a _ constraint language _ ; a finite set @xmath12 of allowed relations .",
    "one then considers the problem csp@xmath13 in which all constraint in the input must be members of @xmath12 .",
    "this parameterisation of constraint satisfaction problems has proved to be very fruitful for csps over both finite and infinite domains . since @xmath12 is finite",
    ", the computational complexity of such a problem does not depend on the actual representation of the constraints .",
    "the complexity of finite - domain csps has been studied for a long time and a powerful algebraic toolkit has gradually formed  @xcite . much of this work has been devoted to the _ feder - vardi conjecture _  @xcite which posits that every finite - domain csp is either polynomial - time solvable or np - complete .",
    "infinite - domain csps , on the other hand , constitute a much more diverse set of problems .",
    "in fact , _ every _ computational problem is polynomial - time equivalent to an infinite - domain csp  @xcite .",
    "obtaining a full understanding of their computational complexity is thus out of the question , and some further restriction is necessary . in this article , this restriction will be to study semilinear relations and constraint languages .",
    "a relation @xmath7 is said to be _ essentially convex _ if for all @xmath14 there are only finitely many points on the line segment between @xmath15 and @xmath16 that are not in @xmath9 .",
    "a constraint language @xmath12 is said to be essentially convex if every relation in @xmath12 is essentially convex .",
    "the main motivation for this study is the following result :    [ bodirskytheorem ] let @xmath12 be a finite set of semilinear relations over @xmath5 or @xmath6 such that @xmath17 .",
    "then ,    1 .   csp@xmath13 is polynomial - time solvable if @xmath12 is essentially convex , and np - complete otherwise ; and 2 .",
    "the problem of optimizing a linear polynomial over the solution set of csp@xmath13 is polynomial - time solvable if and only if csp@xmath13 is polynomial - time solvable ( and np - hard otherwise ) .",
    "one may suspect that there are semilinear constraint languages @xmath12 such that csp@xmath18 but @xmath12 is not essentially convex .",
    "this is indeed true and we identify two such cases . in the first case , we consider relations with large `` cavities '' .",
    "it is not surprising that the algorithm for essentially convex relations ( and the ideas behind it ) can not be applied in the presence of such highly non - convex relations .",
    "thus , we introduce a new algorithm which solves csps of this type in polynomial time .",
    "it is based on computing affine hulls and the idea of improving an easily representable upper bound on the solution space by looking at one constraint at a time ; a form of `` local consistency '' method . in the second case",
    ", we consider relations @xmath9 that are not necessarily essentially convex , but look essentially convex when viewed form the origin .",
    "that is , any points @xmath15 and @xmath16 that witnesses a not essentially convex relation lie on a line that passes outside of the origin .",
    "we show that we can remove all such holes from @xmath9 to find an equivalent constraint language that is essentially convex , and thereby solve the problem in polynomial time .    combining these algorithmic results with matching np - hardness results and",
    "the fact that csp@xmath13 is always in np for a semilinear constraint language @xmath12 ( cf .",
    "theorem  5.2 in bodirsky et al .",
    "@xcite ) yields a dichotomy :    [ superresult ] let @xmath12 be a finite set of semilinear constraints that contains @xmath3 .",
    "then , csp@xmath13 is either in p or np - complete .",
    "our result immediately generalises the first part of theorem  [ bodirskytheorem ] .",
    "it also generalises another result by bodirsky et al .",
    "@xcite concerning expansions of @xmath19 with relations that are first - order definable in @xmath19 .",
    "one may note that this class of relations is a severely restricted subset of the semilinear relations since it admits quantifier elimination over the structure @xmath20 , where @xmath21 denotes the binary addition function .",
    "this follows from the more general fact that the first - order theory of torsion - free divisible abelian groups admits quantifier elimination ( see e.g. theorem 3.1.9 in @xcite ) .",
    "one may thus alternatively view relations that are first - order definable in @xmath19 as finite unions of sets defined by homogeneous linear systems of equations .",
    "we continue by generalising the second part of theorem  [ bodirskytheorem ] , too : if @xmath12 is semilinear and contains @xmath22 , then the problem of optimising a linear polynomial over the solution set of csp@xmath13 is polynomial - time solvable if and only csp@xmath13 is polynomial - time solvable ( and np - hard otherwise ) .",
    "we also study the problem of finding integer solutions to csp@xmath13 for certain semilinear constraint languages @xmath12 . here , we obtain some partial results but a full classification remains elusive .",
    "our results shed some light on the _ scalability property _ introduced by jonsson and lw  @xcite .",
    "this article has the following structure .",
    "we begin by formally defining constraint satisfaction problems and semilinear relations together with some terminology and minor results in section  [ sec : prels ] .",
    "the algorithms and tractability results that are presented in section  [ sec : tractability ] while the hardness results can be found in section  [ sec : hard ] . by combining the results from section  [ sec : tractability ] and [ sec : hard ] , we prove theorem  [ superresult ] in section  [ sec : mainresult ] .",
    "we partially generalise theorem  [ superresult ] to optimisation problems in section  [ sec : optresult ] , and we study the problem of finding integer solutions in section  [ sec : intsol ] .",
    "finally , we discuss some obstacles to further generalisations in section  [ sec : waysforward ] . this article is a revised and extended version of a conference paper  @xcite .",
    "let @xmath23 be a finite set of finitary relations over some domain @xmath4 ( which will usually be infinite ) .",
    "we refer to @xmath12 as a _",
    "constraint language_. in order to avoid some uninteresting trivial cases , we will assume that all constraint languages are non - empty and contain non - empty relations only .",
    "a first - order formula is called _ primitive positive _ if it is of the form @xmath24 , where each @xmath25 is an atomic formula , i.e. , either @xmath26 or @xmath27 with @xmath9 the relation symbol for a @xmath28-ary relation from @xmath12 .",
    "we call such a formula a _ pp - formula_. note that all variables do not have to be existentially quantified ; if they are , then we say that the formula is a _",
    "sentence_. given a pp - formula @xmath29 , we let @xmath30 denote the set of variables appearing in @xmath29 . the atomic formulas @xmath27 in a pp - formula @xmath29 are also called the _ constraints _ of @xmath29 .",
    "the _ constraint satisfaction problem for a constraint language @xmath12 _ ( csp@xmath13 for short ) is the following decision problem :    the exact representation of the relations in @xmath12 is unessential since we exclusively study finite constraint languages .",
    "a relation @xmath31 is _ pp - definable from _",
    "@xmath12 if there exists a quantifier - free pp - formula @xmath32 over @xmath12 such that @xmath33 the set of all relations that are pp - definable over @xmath12 is denoted by @xmath34 .",
    "the following easy but important result explains the role of primitive positive definability for studying the computational complexity of csps .",
    "we will use it extensively in the sequel without making explicit references .",
    "[ pp - def ] let @xmath12 be a constraint language and @xmath35 a finite subset .",
    "then csp@xmath36 is polynomial - time reducible to csp@xmath13 .",
    "let @xmath37 and @xmath38 be two constraint languages such that @xmath39 and @xmath40 are relations of the same arity .",
    "given an instance @xmath29 of csp@xmath13 , let @xmath41 denote the instance where each occurrence of a relation @xmath39 is replaced by @xmath40 .",
    "we say that csp@xmath13 is _ equivalent _ to csp@xmath36 if @xmath29 is true in @xmath12 if and only if @xmath41 is true in @xmath42 .",
    "it is clear that if csp@xmath13 and csp@xmath36 are equivalent csps , then they have the same complexity ( up to a trivial linear - time transformation ) .      the domain",
    ", @xmath4 , of every relation in this article will be the set of rationals , @xmath5 , or the set of reals , @xmath6 . in all cases ,",
    "the set of coefficients , @xmath43 , will be the set of rationals , but in order to avoid confusion , we will still make this explicit in our notation .",
    "we define the following sets of relations .",
    "* @xmath44 $ ] denotes the set of linear equalities over @xmath4 with coefficients in @xmath43 . *",
    "@xmath45 $ ] denotes the set of ( strict and non - strict ) linear inequalities over @xmath4 with coefficients in @xmath43 .",
    "sets defined by finite conjunctions of inequalities from @xmath45 $ ] are called _",
    "linear sets_. the set of _ semilinear sets _ , @xmath46 $ ] , is defined to be the set of finite unions of linear sets .",
    "we will refer to @xmath47 $ ] and @xmath48 $ ] as semilinear relations over @xmath5 and @xmath6 , respectively .",
    "one should be aware of the representation of objects in @xmath44 $ ] and @xmath45 $ ] compared to @xmath46 $ ] . in @xmath44 $ ] and @xmath45 $ ] , we view the equalities and inequalities as syntactic objects which we can use for building logical formulas .",
    "now , recall the definition of a linear set : it is defined by a _",
    "conjunction _ of inequalities . however , a linear set is not a logical formula , it is a subset of @xmath8 .",
    "the same thing holds for semilinear sets : they are defined by _",
    "unions _ of linear sets and should thus not be viewed as logical formulas .",
    "this distinction has certain advantages when it comes to terminology and notation but it also emphasise a difference in the way we view and use these objects .",
    "the objects in @xmath44 $ ] and @xmath45 $ ] are often used in a logical context ( such as pp - definitions ) while the semilinear relations are typically used in a geometric context .",
    "given a relation @xmath9 of arity @xmath28 , let @xmath49 and @xmath50 .",
    "we demonstrate that csp@xmath13 and csp@xmath51 are equivalent as constraint satisfaction problems whenever @xmath52 $ ] .",
    "thus , we will exclusively concentrate on relations from @xmath47 $ ] in the sequel .",
    "let @xmath52 $ ] and let @xmath29 be an instance of csp@xmath13 .",
    "construct an instance @xmath41 of csp@xmath51 by replacing each occurrence of @xmath9 in @xmath29 by @xmath53 .",
    "if @xmath41 has a solution , then @xmath29 has a solution since @xmath54 for each @xmath55 .",
    "if @xmath29 has a solution , then it has a rational solution by lemma 3.7 in bodirsky et al .",
    "@xcite so @xmath41 has a solution , too .",
    "the following lemma is a direct consequence of our definitions : this particular property is often referred to as @xmath56-_minimality _ in the literature  @xcite .",
    "[ fakeomin ] let @xmath57 $ ] be a unary semilinear relation .",
    "then , @xmath9 can be written as a finite union of open , half - open , and closed intervals with endpoints in @xmath58 together with a finite set of points in @xmath43 .",
    "the set of semilinear relations can also be defined as those relations that are first - order definable in @xmath59  @xcite .",
    "in particular , @xmath46 $ ] is closed under pp - definitions .",
    "consequently , lemma  [ fakeomin ] is applicable to all relations discussed in this article .",
    "[ generateequations ] let @xmath60 .",
    "the relation @xmath61 is pp - definable in @xmath22 and it is pp - definable in @xmath19 if @xmath62 .",
    "furthermore , the pp - formulas that define the relations can be computed in polynomial time .",
    "it follows that @xmath63 \\subseteq \\langle \\{r_+,\\{1\\}\\ } \\rangle$ ] and",
    "@xmath64 \\subseteq \\langle \\{r_+ , < , \\leq , \\{1\\}\\ } \\rangle$ ] .",
    "one may also note that every homogeneous linear equation ( with coefficients from @xmath5 ) is pp - definable in @xmath19 .",
    "for a rational @xmath65 , and a unary relation @xmath66 , let @xmath67 . when @xmath68  we will also write @xmath69 for @xmath70 .",
    "given a relation @xmath71 and two distinct points @xmath72 , we define @xmath73 the relation @xmath74 is a parameterisation of the intersection between the relation @xmath9 and a line through the points @xmath75 and @xmath76 . note that @xmath74 is a member of @xmath77 \\cup \\{r\\ } \\rangle$ ] so , by lemma  [ generateequations ] , @xmath74 is a member of @xmath78 , too .",
    "a @xmath28-ary relation @xmath9 is _ bounded _ if there exists an @xmath79 such that @xmath80^k$ ] . a unary relation",
    "@xmath81 is _ unbounded in one direction _ if @xmath81 is not bounded , but there exists an @xmath79 such that one of the following holds : @xmath82 ; or @xmath83 $ ] . a unary relation is called a _ bnu _ ( for _ bounded _ , _ non - constant _ , and _ unary _ ) if it is bounded and contains more than one point .",
    "[ halfboundgenerate ]",
    "let @xmath81 be a unary relation in @xmath47 $ ] that is unbounded in one direction .",
    "then ,    1 .   @xmath84 contains a bnu .",
    "if , in addition , @xmath81 contains both positive and negative elements , then @xmath85 contains a non - empty bounded unary relation .",
    "\\(1 ) by lemma  [ fakeomin ] , there exists an @xmath86 such that either    a.   [ positivelyunbounded ] @xmath87 \\cap u = { \\varnothing}$ ] and @xmath88 ; or b.   [ negativelyunbounded ] @xmath87 \\subseteq u$ ] and @xmath89 .",
    "assume that ( [ positivelyunbounded ] ) holds .",
    "( the remaining case follows by considering @xmath69 . ) by choosing a rational @xmath90 , it is not hard to see that the relation @xmath91 is bounded and contains an interval .",
    "the result then follows from lemma  [ generateequations ] .",
    "\\(2 ) assume that ( [ positivelyunbounded ] ) holds and let @xmath92 be a negative element .",
    "( the remaining case follows by considering @xmath69 . )",
    "then , @xmath93 is bounded and contains the element @xmath75 .",
    "the result again follows from lemma  [ generateequations ] .    for a unary semilinear relation @xmath94 , and a rational @xmath95 , let @xmath96 denote the set of unary semilinear relations @xmath81 such that @xmath97 and for all @xmath98 , there exists a @xmath99 with @xmath100 .",
    "the set @xmath101 contains all unary relations @xmath81 such that @xmath102 .",
    "[ lem : smalldelta1 ] let @xmath103 be a bounded unary semilinear relation such that @xmath104 . then , @xmath105 contains a relation @xmath106 , for every rational @xmath95 .",
    "let @xmath107 and @xmath108 .",
    "by lemma  [ fakeomin ] , there exist elements @xmath109 with @xmath110 and @xmath111 .",
    "the relation @xmath112 is pp - definable in @xmath113 and satisfies : @xmath114 , @xmath115 , and @xmath116 .",
    "[ lem : smalldelta2 ] let @xmath81 be a bounded unary semilinear relation such that @xmath117 for some @xmath118 and @xmath119 . then , @xmath105 contains a relation @xmath120 , for every rational @xmath95 .",
    "let @xmath121 .",
    "the proof then follows using a similar construction as in the proof of lemma  [ lem : smalldelta1 ] .",
    "let @xmath9 be a @xmath28-ary relation over @xmath5 .",
    "the relation @xmath9 is _ convex _ if for all @xmath14 , @xmath9 contains all points on the line segment between @xmath15 and @xmath16 .",
    "we say that @xmath9 is _ essentially convex _ if for all @xmath14 there are only finitely many points on the line segment between @xmath15 and @xmath16 that are not in @xmath9 .",
    "we say that @xmath9 _ excludes an interval _ if there are @xmath14 and real numbers @xmath122 such that @xmath123 whenever @xmath124 .",
    "note that we can assume that @xmath125 are rational numbers , since we can choose any two distinct rational numbers @xmath126 between @xmath127 and @xmath128 instead of @xmath127 and @xmath128 .",
    "if @xmath9 is _ not _ essentially convex , and if @xmath15 and @xmath16 are such that there are infinitely many points on the line segment between @xmath15 and @xmath16 that are not in @xmath9 , then we say that @xmath15 and @xmath16 _ witness _ that @xmath9 is not essentially convex . due to lemma  [ fakeomin ] , we conclude that a semilinear relation is essentially convex if and only if it does not exclude an interval .",
    "we say that a constraint language is essentially convex if all its relations are essentially convex .",
    "[ thm : essconvtractable ] if @xmath12 is a finite set of essentially convex semilinear relations , then csp@xmath13 is in p.",
    "in this section , we present our two main sources of tractability .",
    "section  [ sec : affine ] contains a new algorithm for semilinear constraint languages @xmath12 containing @xmath129 and such that @xmath34 does not contain a bnu . in section  [ sec : moreess ] , we extend the applicability of theorem  [ thm : essconvtractable ] from essentially convex semilinear constraint languages to a certain class of semilinear csps that are not essentially convex .      instead of computing the exact solution set to a csp instance , our approach will be to reduce an upper bound on this set as far as possible .",
    "in particular , we will maintain a representation of an _ affine subspace _ that is guaranteed to contain the solution set , and repeatedly intersect this subspace with every constraint in order to attempt to reduce it further .",
    "this can be seen as a form of _ local consistency_. if we manage to reduce the upper bound to an empty set , then we are certain that the instance is unsatisfiable",
    ". we will show that under certain conditions , the converse holds ; if the upper bound is non - empty , then there are necessarily solutions .",
    "to formalise this idea , we will need some definitions .    for a subset @xmath130 ,",
    "let @xmath131 denote the _ affine hull of @xmath132 in @xmath133 _ : @xmath134 an _ affine subspace _ is a subset @xmath130 for which @xmath135 .",
    "the points @xmath136 are said to be _ affinely independent _ if @xmath137 with @xmath138 implies @xmath139 .",
    "the dimension , @xmath140 , of a set @xmath130 is defined to be one less than the maximum number of affinely independent points in @xmath132 .",
    "we define a notion of consistency for sets of semilinear constraints which we call _ affine consistency_. let @xmath141 be a finite set of variables and let @xmath142 .",
    "a set of constraints @xmath143 with @xmath144 is _ affinely consistent with respect to a non - empty affine subspace _",
    "@xmath145 if @xmath146 for all @xmath147 , where @xmath148 .",
    "@xmath149 +    algorithm  [ alg : affc ] establishes affine consistency for a set of constraints and answers `` yes '' if the resulting affine subspace is non - empty and `` no '' otherwise . in the rest of this section , we show that this algorithm correctly solves csp@xmath13 when @xmath150 is a semilinear constraint language such that @xmath34 does not contain a bnu .",
    "furthermore , we show that the algorithm can be implemented to run in polynomial time when applied to constraint languages of this kind .",
    "we begin by proving a technical lemma which is the basis for these results .",
    "[ lem : intersection ] let @xmath151 $ ] be two @xmath152-ary relations and @xmath153 linear sets .",
    "assume that neither @xmath77 \\cup \\ { p \\ } \\rangle$ ] nor @xmath154 \\cup \\ { q \\ } \\rangle$ ] contains a bnu .",
    "if @xmath155 , then @xmath156 for some @xmath147 and @xmath157 .    the proof is by induction on the dimension @xmath158 . for @xmath159 , both @xmath160 and @xmath161 consist of a single point @xmath15 .",
    "clearly , @xmath162 for some @xmath147 and @xmath163 for some @xmath157 .",
    "now assume that @xmath164 and that the lemma holds for all @xmath165 , @xmath166 with @xmath167 and @xmath168 .",
    "let @xmath169 be @xmath170 affinely independent points in @xmath160 and let @xmath171 be @xmath170 affinely independent points in @xmath161 . for @xmath172",
    ", consider the lines @xmath173 through @xmath174 and @xmath175 , and the lines @xmath176 through @xmath177 and @xmath178 .",
    "let @xmath179 ( @xmath180 ) be a hyperplane in @xmath133 through the origin that is not parallel to any of the lines @xmath173 or @xmath176 . then , @xmath181 intersects each of the @xmath182 lines .",
    "let @xmath183 and let @xmath184 \\}$ ] .",
    "express the line @xmath173 as @xmath185 , for some @xmath186 .",
    "let @xmath187 \\cup \\ { p \\ } \\rangle$ ] .",
    "since @xmath188 contains @xmath174 and @xmath175 , it follows that @xmath188 is not a constant and hence unbounded . by lemma  [ halfboundgenerate](1 )",
    ", @xmath188 is unbounded in both directions . by lemma  [ fakeomin ] , @xmath189 , for some positive constant @xmath190 .",
    "an analogous argument shows that that @xmath191 , for some positive constant @xmath192 .",
    "let @xmath193 be a positive constant such that @xmath194 and let @xmath195 .",
    "this ensures that for any @xmath196 , @xmath197 intersects the lines @xmath173 in @xmath198 affinely independent points , and @xmath199 intersects the lines @xmath200 in @xmath198 affinely independent points .",
    "let @xmath201 , @xmath202 , @xmath203 , and @xmath204 .",
    "we now have @xmath205 with @xmath206 , for every @xmath196 . by induction on @xmath207 and @xmath208",
    ", it follows that @xmath209 for some @xmath210 and @xmath211 .",
    "this holds for all @xmath196 , hence there exist distinct @xmath212 with @xmath213 and @xmath214 .",
    "since @xmath215 , @xmath216 , and @xmath217 , it follows that @xmath218 strictly contains @xmath219 , so we have @xmath220 , and @xmath221 .",
    "therefore we have the equality @xmath222 .",
    "the lemma follows .",
    "find @xmath147 that maximises @xmath223 + let @xmath224 be the set of inequalities for @xmath39 and @xmath225 be the set of inequalities for @xmath226 .",
    "+ @xmath227 + @xmath132    for a semilinear relation @xmath9 , we let @xmath228 denote the _ representation size _ of @xmath9 , i.e. , the number of bits needed to describe the arities and coefficients of each inequality in some fixed definition of @xmath9 .",
    "let @xmath229 $ ] be a relation such that @xmath154 \\cup \\ { r \\ } \\rangle$ ] does not contain a bnu and let @xmath230 be an affine subspace .",
    "algorithm [ alg : aff ] computes a set of linear inequalities @xmath132 defining @xmath231 in time polynomial in @xmath232 and with @xmath233 .",
    "let @xmath234 be the representation of @xmath9 as the union of linear sets @xmath39 .",
    "by lemma  [ lem : intersection ] , there exists an @xmath147 such that @xmath235 and since @xmath236 for all @xmath157 , the algorithm will find such an @xmath147 on line 1 by simply comparing the dimensions of these sets . if @xmath237 , then the algorithm returns @xmath238 , signalling that the affine hull is empty .",
    "otherwise , the affine hull of a non - empty polyhedron can always be obtained as a subset of its defining inequalities ( cf .",
    "schrijver  ( * ? ? ?",
    "* section  8.2 ) ) . here , some of the inequalities may be strict , but it is not hard to see that removing them does not change the affine hull .",
    "if @xmath239 is an inequality that can not be removed without increasing the dimension of the affine hull , then it is clear that @xmath240 still can not be removed after the loop .",
    "hence , after the loop , no inequality in @xmath132 can be removed without increasing the dimension of the affine hull .",
    "it follows that @xmath132 itself defines an affine subspace , @xmath241 , and @xmath242 .    using the ellipsoid method",
    ", we can determine the dimension of the affine hull of a polyhedron defined by a system of linear inequalities in time polynomial in the representation size of the inequalities  ( * ? ? ?",
    "* corollary 14.1f ) . to handle strict inequalities on line 1 , we can perturb these by a small amount , while keeping the representation sizes polynomial , to obtain a system of non - strict inequalities with the same affine hull .",
    "the algorithm does at most @xmath243 affine hull calculations .",
    "the total time is thus polynomial in @xmath232 . finally ,",
    "the set @xmath132 is a subset of @xmath244 , so @xmath245 .",
    "[ thm : affinesolves ] let @xmath246 $ ] be a finite constraint language .",
    "if there is no bnu in @xmath34 , then algorithm [ alg : affc ] correctly solves csp@xmath13 and can be implemented to run in polynomial time .",
    "assume that each relation @xmath55 is given as @xmath247 , where @xmath39 is a linear set for each @xmath147 .",
    "first , we show that the algorithm terminates with @xmath226 equal to the affine hull of the solution space of the constraints .",
    "assume that the input consists of the constraints @xmath248 over variables @xmath141 , @xmath249 .",
    "let @xmath250 denote the solution space of the instance .",
    "it is clear that @xmath251 is contained in @xmath226 throughout the execution of the algorithm .",
    "therefore , @xmath252 so it suffices to show that @xmath253 .",
    "we will show that @xmath254 for all @xmath255 .",
    "when the algorithm terminates , we have @xmath146 for every @xmath249 . in particular",
    ", the claim holds for @xmath256 .",
    "now assume that the claim holds for @xmath257 .",
    "then , @xmath258 and @xmath259 satisfy the requirements of lemma  [ lem : intersection ] with @xmath260 .",
    "therefore , we can use this lemma to conclude that @xmath261 .",
    "finally , we show that the algorithm can be implemented to run in polynomial time .",
    "the call to algorithm  [ alg : aff ] in the inner loop is carried out at most @xmath262 times , where @xmath142 .",
    "the size of @xmath263 is at most @xmath264 , so the size of @xmath226 never exceeds @xmath265 , where @xmath9 is a relation with maximal representation size .",
    "therefore , each call to algorithm  [ alg : aff ] takes polynomial time and consequently , the entire algorithm runs in polynomial time .",
    "we will now identify another family of polynomial - time solvable semilinear csps .",
    "this time , we base our result on essentially convex semilinear constraint languages ( theorem  [ thm : essconvtractable ] ) . we extend this result to the situation where we are only guaranteed that all unary relations that are pp - definable in the language are essentially convex .",
    "the idea is that even if we do not have the constant relation @xmath2 to help us identify excluded intervals , we are still able to see excluded full - dimensional holes .",
    "we follow up this by showing that we can remove certain lower - dimensional holes and thus recover an equivalent essentially convex constraint language .",
    "we remind the reader that the dimension of a set is defined with respect to its affine hull , as in section  [ sec : affine ] .    for @xmath266 ,",
    "we let @xmath267 denote the euclidean norm of @xmath268 , and @xmath269 the euclidean distance between @xmath268 and @xmath270 .",
    "[ lemur ] let @xmath271 for some @xmath272 and assume that @xmath229 $ ] is a semilinear relation such that every unary relation in @xmath273 is essentially convex .",
    "then , @xmath9 can be defined by a formula @xmath274 , where @xmath275 defines a convex semilinear set , and @xmath276 are conjunctions over @xmath277 $ ] that define convex sets of dimensions strictly lower than the dimension of the set defined by @xmath275 .",
    "let @xmath278 denote the convex hull of @xmath9 and let @xmath198 denote its dimension .",
    "the set @xmath278 is semilinear ( see , for instance , stengle et al .",
    "let @xmath275 be a formula for @xmath278 and let @xmath279 be a formula for @xmath280 on quantifier - free dnf over @xmath277 $ ] .",
    "it remains to show that for each @xmath147 , the dimension of the convex set @xmath281 defined by @xmath282 is smaller than @xmath198 . to prove this ,",
    "we show that for every point @xmath15 in @xmath281 , and every @xmath118 , there exists a point @xmath268 in @xmath9 such that @xmath283 .",
    "since every @xmath198-dimensional convex set contains a small @xmath198-dimensional open ball around every point in its interior , it follows from this that none of the sets @xmath281 can be @xmath198-dimensional .    [ fig : simplex ]    [ scale = 3.0 , point/.style = draw , circle , fill = black , inner sep=1pt ]    ( n0 ) at + ( 90:1 ) [ point , label = above:@xmath284 ; ( n1 ) at + ( -30:1 ) [ point , label = below:@xmath285 ; ( n2 ) at + ( -150:1 ) [ point , label = below:@xmath286 ;    ( n0 )  ( n1 )  ( n2 )  ( n0 ) ;    \\(a ) at ( @xmath287 ) [ point , label = above left:@xmath75 ] ; ( a2 ) at ( @xmath289 ) [ point , label = above right:@xmath290 ;    \\(b ) at ( @xmath291 ) [ point , label = left:@xmath76 ] ; ( b2 ) at ( @xmath293 ) [ point , label = right:@xmath294 ; ( z ) at ( @xmath295 ) [ point , label = right:@xmath296 ;    \\(a ) at ( @xmath297 ) [ label = below:@xmath226 ] ;    \\(a ) ",
    "( n0 ) ; ( a2 )  ( n0 ) ;    carathodory s theorem ( cf .",
    "schrijver  ( * ? ? ?",
    "* section  7.7 ) ) states that for every @xmath299 , we can find @xmath300 affinely independent points , @xmath301 , such that @xmath15 lies in @xmath302 . by induction over @xmath303 , we show that for every point @xmath304 , and every @xmath118 , there is a point @xmath305 such that @xmath306 . for @xmath307 ,",
    "this statement follows trivially as each @xmath308 was chosen from @xmath9 .",
    "now assume that @xmath309 and that the statement holds for all @xmath310 . by the induction hypothesis",
    ", the statement holds for the set @xmath311 .",
    "every @xmath304 can be written as @xmath312 for some @xmath313 and @xmath314 .",
    "let @xmath315 be a point in @xmath226 that is at distance at most @xmath316 from @xmath75 and let @xmath317 .",
    "then , @xmath318    let @xmath95 be a small constant to be fixed later .",
    "by lemma  [ lem : smalldelta1 ] , there exists a unary relation @xmath319 .",
    "consider the following relation : @xmath320 since @xmath321 , we also have @xmath322 . by assumption",
    ", @xmath188 does not exclude an interval , so there exists a @xmath323 such that @xmath324 and @xmath325 .",
    "then , by the definition of @xmath188 , there exists a @xmath326 and a point @xmath305 such that : @xmath327 where @xmath328 is a constant for a fixed @xmath329 , and the first inequality follows from the triangle inequality .",
    "the claim now follows for the point @xmath76 by taking @xmath330 since @xmath331 .",
    "[ thm : redtoessconv ] let @xmath332 $ ] be a constraint language .",
    "assume that there exists a unary relation @xmath333 , for some @xmath272 , and that every unary relation in @xmath34 is essentially convex .",
    "then , csp@xmath13 is equivalent to csp@xmath36 for an essentially convex constraint language @xmath334 $ ] .",
    "if @xmath12 is essentially convex , then there is nothing to prove .",
    "assume therefore that @xmath12 is not essentially convex .",
    "by lemma  [ lemur ] , each @xmath55 can be defined by a formula @xmath274 , where @xmath275 , @xmath335 ,  , @xmath336 are conjunction over @xmath277 $ ] , and @xmath335 ,  , @xmath336 define sets whose affine hulls are of dimensions strictly lower than that of the set defined by @xmath275 .",
    "assume additionally that the formulas are numbered so that the affine hulls of the sets defined by @xmath337 do not contain @xmath338 and that the affine hulls of the sets defined by @xmath339 do contain @xmath338 .",
    "define @xmath340 by @xmath341 where @xmath342 defines the affine hull of the set defined by @xmath282 .",
    "then , the constraint language @xmath343 is essentially convex since witnesses of an excluded interval only occur inside an affine subspace not containing @xmath338 ; otherwise we could use such a witness to pp - define a unary relation excluding an interval .",
    "let @xmath29 be an arbitrary instance of csp@xmath13 over the variables @xmath344 and assume @xmath345 where @xmath346 is quantifier - free .",
    "construct an instance @xmath41 of csp@xmath36 by replacing each occurrence of a relation @xmath9 in @xmath29 by @xmath340 .",
    "clearly , if @xmath41 is satisfiable , then so is @xmath29 .",
    "conversely , let @xmath347 be a solution to @xmath29 and assume that @xmath41 is not satisfiable .",
    "let @xmath348 be the line in @xmath349 through @xmath338 and @xmath350 and let @xmath81 be the unary relation @xmath351 .",
    "all tuples in @xmath81 correspond to solutions of @xmath29 that are not solutions to @xmath41 .",
    "fix a constraint @xmath352 in @xmath29 and consider the points in @xmath81 that satisfy this constraint but not @xmath353 .",
    "these are the points @xmath354 on @xmath348 for which @xmath355 satisfies @xmath356 . for each @xmath357",
    ", @xmath342 satisfies at most one point on @xmath348 since otherwise the affine hull of the relation defined by @xmath282 would contain @xmath338 .",
    "hence , each constraint in @xmath29 can account for at most a finite number of points in @xmath81 , so @xmath81 is finite .",
    "assume first that @xmath358 .",
    "then , @xmath81 is not essentially convex which contradicts the assumption that every unary relation in @xmath34 is essentially convex .",
    "assume instead that @xmath359 , where the single point in @xmath81 corresponds to the solution @xmath350 .",
    "recall that @xmath12 is not essentially convex .",
    "let @xmath55 be a @xmath28-ary relation that is not essentially convex and let @xmath360 witness this .",
    "the relation @xmath361 since @xmath362 . then , @xmath361 is unary and not essentially convex which leads to a contradiction .",
    "it follows that if @xmath29 is satisfiable , then so is @xmath41 .",
    "we now derive a unified condition for all hard csps classified in this article . it is based on a polynomial - time reduction from the np - hard problem not - all - equal 3sat  @xcite , i.e. the problem csp@xmath363 where @xmath364 .",
    "the proof is divided into three different lemmas .",
    "first , we present a reduction from not - all - equal 3sat to a simple semilinear csp .",
    "we then show that having a bnu @xmath188 that is bounded away from @xmath365 allows us to pp - define unary relations that are , in a certain sense , close to being either the relation @xmath2 or @xmath366 . in the final step ,",
    "we combine these two results and show that having a bnu @xmath188 that excludes an interval and that is bounded away from @xmath365 is a sufficient condition for csp(@xmath367 ) to be np - hard .",
    "[ plusminushardness ] let @xmath368 .",
    "then , csp@xmath369 is np - hard .",
    "the proof is by a polynomial time reduction from csp@xmath363 .",
    "let @xmath29 denote an arbitrary instance of csp@xmath363 .",
    "construct an instance @xmath41 of csp@xmath369 as follows .",
    "impose the constraint @xmath370 on each variable .",
    "for each constraint @xmath371 in @xmath29 , introduce the constraints @xmath372 and @xmath373 , where @xmath374 is a fresh variable .",
    "assume that @xmath29 has a solution .",
    "consider a constraint @xmath371 in @xmath29 .",
    "if two of the variables are assigned the value @xmath375 , then the equation @xmath372 is satisfied by choosing @xmath376 .",
    "if two of the variables are assigned the value @xmath377 , then the equation @xmath372 is satisfied by choosing @xmath378",
    ". hence , @xmath41 is satisfiable .",
    "assume that @xmath41 has a solution @xmath379 .",
    "then , @xmath29 has a solution @xmath350 defined by @xmath380 if @xmath381 and @xmath382 if @xmath383 .",
    "assume to the contrary that @xmath384 for some variables with a constraint @xmath371 .",
    "consider the equation @xmath372 in @xmath41 . by the assumption on @xmath188",
    ", we have @xmath385 , and hence @xmath386 . but",
    "this is a contradiction as the constraint @xmath373 is also in @xmath41 .",
    "we can similarly rule out the case @xmath387 .",
    "this proves that @xmath350 is a solution to @xmath29 .",
    "[ lem : thin ] let @xmath388 be a bounded unary relation such that @xmath389 , for some @xmath118 . then , either @xmath390 contains a unary relation @xmath391 for every @xmath95 ; or @xmath390 contains a unary relation @xmath392 , for every @xmath95 .    if @xmath393 , then the result follows from lemma  [ lem : smalldelta2 ]",
    "otherwise , by lemma  [ fakeomin ] , there exists a constant @xmath394 such that the set @xmath395 is non - empty and contains points that are either all positive or all negative .",
    "similarly , there exists a constant @xmath396 such that @xmath397 is non - empty and contains points that are either all positive or all negative .",
    "let @xmath398 and @xmath399 .",
    "assume that both sets contain positive points only or that both sets contain negative points only .",
    "then , the result follows using lemma  [ lem : smalldelta1 ] with the relation @xmath400 ( or @xmath69 if the points of @xmath81 are negative ) .",
    "the case when the one set contains positive points and the other contains negative points is handled similarly using the relation @xmath401 .",
    "[ universalhardness ] let @xmath188 be a bnu such that @xmath389 , for some @xmath118 , and @xmath81 be a unary relation that excludes an interval .",
    "then , csp@xmath402 is np - hard .",
    "we show that @xmath403 contains a unary relation @xmath404 .",
    "the result then follows from lemma  [ plusminushardness ] .",
    "if already @xmath390 contains such a relation , then we are done .",
    "otherwise , by lemma  [ lem : thin ] , @xmath390 contains a unary relation @xmath391 , for every @xmath95 .",
    "since @xmath81 excludes an interval , there are points @xmath405 and @xmath122 such that @xmath406 whenever @xmath124 .",
    "furthermore , @xmath15 and @xmath16 can be chosen so that @xmath407 , and by scaling @xmath81 , we may assume that @xmath408 .",
    "let @xmath409 .",
    "note that @xmath410 , for some @xmath411 .",
    "similarly , possibly by first scaling @xmath188 , let @xmath412 be distinct points with @xmath413 and let @xmath414 .",
    "now , define the following unary relations : @xmath415 the relations @xmath416 and @xmath417 are roughly translations of @xmath81 and @xmath188 , where the constant relation @xmath2 has been approximated by the relation @xmath418 . since @xmath114",
    ", we have @xmath419 . hence ,",
    "if @xmath420 is chosen small enough , then the relation @xmath421 will satisfy the conditions of lemma  [ lem : smalldelta2 ] .",
    "this finishes the proof .",
    "in this section , we prove our main result : theorem  [ superresult ] . we divide the proof into two parts . consider the following two properties :    * there is a unary relation @xmath81 in @xmath34 that contains a positive point and satisfies @xmath422 for some @xmath118 .",
    "* there is a unary relation @xmath81 in @xmath34 that contains a positive point and satisfies @xmath423 for some @xmath424 .    in the first part of the proof ( section  [ property - classification ] )",
    ", we consider constraint languages that simultaneously satisfy the properties ( p@xmath425 ) and ( p@xmath426 ) . in the second part ( section  [ noproperty - classification ] ) , we consider constraint languages that violates at least one of them . in both parts",
    ", we give a detailed description of the boundary between easy and hard problems . by combining theorem  [ thm : main ] and theorem  [ nopropertymainresult ] , we establish theorem  [ superresult ] .",
    "in addition to the two algorithmic results in section  [ sec : affine ] , there is also a trivial source of tractability .",
    "a relation is _",
    "@xmath365-valid _ if it contains the tuple @xmath338 and a constraint language is _ @xmath365-valid _ if every relation in it is @xmath365-valid .",
    "every instance of a csp over a @xmath365-valid constraint language admits the solution that assigns @xmath365 to every variable .",
    "when we consider constraint languages that are not @xmath365-valid , the following lemma shows that there is always a pp - definable unary relation that is not @xmath365-valid .",
    "[ zerovalidlemma ] let @xmath332 $ ] be a constraint language .",
    "if @xmath12 is not @xmath365-valid , then @xmath34 contains a non - empty unary relation that is not @xmath365-valid .    by assumption",
    ", @xmath12 contains some @xmath28-ary relation @xmath9 that is not @xmath365-valid , and by our definition of a constraint language , @xmath9 is non - empty . let @xmath427 be a tuple that contains the largest possible number @xmath303 of zeroes",
    ". assume for simplicity that the first @xmath303 entries of @xmath428 equals @xmath365 .",
    "consider the following unary relation in @xmath34 .",
    "@xmath429 the relation @xmath81 is non - empty and not @xmath365-valid .",
    "the following theorem covers the case when the constraint language satisfies both of the properties ( p@xmath425 ) and ( p@xmath426 ) . as a corollary",
    ", we obtain a complete classification for semilinear constraint languages containing @xmath22 .",
    "the latter result is interesting in itself and it will also be used in section  [ noproperty - classification ] and section  [ sec : optresult ] .",
    "[ thm : main ] let @xmath332 $ ] be a finite constraint language that satisfies ( p@xmath425 ) and ( p@xmath430 ) .",
    "the problem csp@xmath13 is in p if    * @xmath12 is 0-valid ( trivially ) ; * @xmath34 does not contain a bnu ( by establishing affine consistency ) ; or * all unary relations in @xmath34 are essentially convex ( by a reduction to an essentially convex constraint language ) .    otherwise , csp@xmath13 is np - hard .",
    "let @xmath431 be the set of all bounded , non - empty unary relations @xmath81 in @xmath34 such that @xmath117 for some @xmath118 .",
    "assume that @xmath12 is not @xmath365-valid .",
    "first , we show that @xmath431 is non - empty . by lemma  [ zerovalidlemma ]",
    ", @xmath34 contains a non - empty unary relation that is not @xmath365-valid .",
    "scale this relation so that it contains @xmath375 and call the resulting relation @xmath432 .",
    "let @xmath433 be a unary relation witnessing ( p@xmath425 ) and let @xmath434 be a unary relation witnessing ( p@xmath430 ) .",
    "scale @xmath435 and @xmath436 so that some positive point from each coincides with 1 and let @xmath437 .",
    "if @xmath188 does not contain a negative point , then @xmath438 . otherwise , @xmath188 contains a negative point @xmath76 .",
    "it follows that @xmath439 .",
    "hence , the set @xmath431 is non - empty .",
    "assume that @xmath34 does not contain a bnu .",
    "then , neither does @xmath431 and hence @xmath431 contains only constants .",
    "it follows by theorem  [ thm : affinesolves ] that establishing affine consistency solves csp(@xmath12 ) .",
    "otherwise , @xmath431 contains a bnu . if all unary relations of @xmath34 are essentially convex , then by lemma  [ lem : thin ] and theorem  [ thm : redtoessconv ] , csp@xmath13 is equivalent to csp@xmath36 for an essentially convex constraint language @xmath42 .",
    "tractability follows from theorem  [ thm : essconvtractable ] .",
    "finally , if @xmath431 contains a bnu and @xmath34 contains a unary relation that excludes an interval , then np - hardness follows from lemma  [ universalhardness ] .",
    "[ linearmainresult ] let @xmath440 $ ] be a finite constraint language .",
    "the problem csp@xmath13 is in p if @xmath34 does not contain a bnu or if @xmath12 is essentially convex .",
    "otherwise , csp@xmath13 is np - hard .",
    "if @xmath34 does not contain a bnu , then tractability follows from theorem  [ thm : affinesolves ] .",
    "if all relations in @xmath12 are essentially convex , then tractability follows from theorem  [ thm : essconvtractable ] .    otherwise , @xmath34 contains a bnu , and since @xmath150 , @xmath34 also contains a unary relation that is not essentially convex .",
    "since @xmath441 is not @xmath365-valid , np - hardness then follows from theorem  [ thm : main ] .",
    "let @xmath332 $ ] be a constraint language such that either ( p@xmath425 ) or ( p@xmath426 ) is violated . in this section , we show that @xmath12 can be replaced by an equivalent constraint language of a restricted type",
    "let @xmath445 $ ] denote the set of relations that are are finite unions of homogeneous linear sets .",
    "we will call such relations _ homogeneous _ semilinear relations .",
    "we remind the reader that we can always pp - define the relations @xmath446 and @xmath447 in @xmath12 : @xmath448 and @xmath449 . hence , we can freely use the constant 0 and negation in forthcoming pp - definitions .    from now",
    "on , let @xmath450 , @xmath451 , and @xmath452 . for a relation",
    "@xmath229 $ ] , define @xmath453 to be the _ cone _ over @xmath9 . for a constraint language @xmath454 $ ] ,",
    "let @xmath455 .",
    "note that , for @xmath332 $ ] , we have @xmath456 $ ] , and since @xmath457 , we also have @xmath458 .",
    "for an assignment @xmath459 and a rational @xmath460 , let @xmath461 denote the assignment @xmath462 .",
    "[ thm : mainreduction ] let @xmath332 $ ] be a constraint language such that either ( p@xmath425 ) or ( p@xmath430 ) is violated .",
    "then , csp@xmath13 is equivalent to csp@xmath463 .",
    "assume that @xmath12 does not satisfy ( p@xmath425 ) .",
    "the proof for the case when @xmath12 does not satisfy ( p@xmath430 ) follows similarly .",
    "let @xmath9 be a relation in @xmath12 and let @xmath464 be a quantifier - free dnf formula for @xmath9 , where each formula @xmath465 is conjunction of strict and non - strict inequalities .",
    "remove every disjunct @xmath465 that contains a non - homogeneous inequality which is not satisfied by the @xmath338-tuple .",
    "let @xmath132 be the relation defined by the resulting formula @xmath466 .",
    "since @xmath12 does not satisfy ( p@xmath425 ) , it follows that for every point @xmath268 in @xmath467 , there is a point @xmath468 in @xmath132 that lies on the open line segment between @xmath338 and @xmath268 .",
    "therefore , @xmath469 .",
    "next , for each @xmath157 , let @xmath470 be the relation defined by @xmath471 . remove every non - homogeneous inequality from @xmath471 , let @xmath472 be the resulting formula and let @xmath473 be the relation defined by @xmath472 . clearly , @xmath474 .",
    "let @xmath475 be a point in @xmath476 with @xmath477 and @xmath478 .",
    "since every non - homogeneous inequality in @xmath471 is satisfied by the @xmath338-tuple , it follows that they are satisfied by every point in a small ball @xmath329 centred at @xmath338 .",
    "let @xmath468 be a point in @xmath329 on the line segment between @xmath338 and @xmath268 and note that every homogeneous inequality in @xmath471 satisfies @xmath268 and therefore also @xmath468 .",
    "it follows that @xmath468 is in @xmath470 so @xmath268 and @xmath475 are in @xmath479 , which shows that @xmath480 .",
    "let @xmath481 and let @xmath188 be the relation defined by @xmath482 .",
    "then , @xmath483 and @xmath484 since @xmath482 only contains homogeneous inequalities .",
    "therefore , @xmath482 defines @xmath485 , so @xmath486 $ ] and @xmath487 $ ] .    for the equivalence of csp@xmath13 and csp@xmath36 , arbitrarily choose an instance @xmath29 of csp@xmath13 .",
    "construct an instance @xmath41 of csp@xmath36 by replacing each occurrence of a relation @xmath9 in @xmath29 by @xmath485 .",
    "every solution to @xmath29 is also a solution to @xmath41 .",
    "it remains to show that if @xmath41 has a solution , then so does @xmath29 .",
    "let @xmath488 be a solution to @xmath41 and assume without loss of generality that @xmath350 is integral .",
    "if @xmath489 , then it follows immediately that @xmath350 is a solution to @xmath29 since , for every @xmath55 , @xmath490 if and only if @xmath491 .",
    "assume therefore that @xmath492 .",
    "let @xmath493 be the constraints of @xmath29 .",
    "for every @xmath157 , @xmath494 holds . by the construction of @xmath495",
    ", this implies that @xmath496 , for some @xmath497 .",
    "define the unary relation @xmath498 by the pp - formula @xmath499 .",
    "now @xmath500 , so by the assumption on @xmath12 , it follows that @xmath501 , for some @xmath502 , and hence that @xmath503 , for all @xmath504 .",
    "let @xmath505 .",
    "then @xmath506 is a solution to @xmath29 .    by theorem  [ thm : mainreduction ]",
    ", it is thus sufficient to determine the computational complexity of csp@xmath13 for @xmath507 $ ] .    given a relation @xmath71 , we say that a function @xmath508 is an _ endomorphism _ of @xmath9 if for every tuple @xmath509 , the tuple @xmath510 .",
    "one may equivalently view an endomorphism as a homomorphism from @xmath9 to @xmath9 .",
    "we extend this notion to constraint languages @xmath511 : a function @xmath508 is an endomorphism of @xmath12 if @xmath512 is an endomorphism of @xmath39 , @xmath513 .    [ endolemma ]",
    "let @xmath514 be a rational number .",
    "every @xmath515 $ ] has the endomorphism @xmath516 .",
    "we know that @xmath9 can be written as @xmath517 where @xmath518 , @xmath357 , is defined by a ( finite ) system of homogeneous linear ( strict or non - strict ) inequalities .",
    "consider an inequality @xmath519 in such a system .",
    "we immediately see that @xmath520 this equivalence also holds if we consider strict inequalities .",
    "therefore , each @xmath518 , @xmath357 , has the endomorphism @xmath512 .",
    "now , arbitrarily choose a tuple @xmath521 and assume that @xmath522 .",
    "it follows that @xmath523 , so the function @xmath512 is an endomorphism of @xmath9 .",
    "a direct consequence of lemma  [ endolemma ] is the following : if an instance @xmath29 of csp@xmath524)$ ] has a solution @xmath350 , then @xmath525 is a solution for every rational number @xmath514 .    the complexity classification of constraint languages that violate either @xmath526 or @xmath527 , in theorem  [ nopropertymainresult ] , follows from two intermediate results which we now present in lemma  [ pointlemma ] and lemma  [ homogeneouscaselemma ] .    [ pointlemma ]",
    "let @xmath12 be a subset of @xmath445 $ ] and let @xmath81 be a unary relation in @xmath34 . if @xmath81 contains an element @xmath528 , then @xmath529 .",
    "if @xmath81 contains an element @xmath530 , then @xmath531 .",
    "let @xmath532 be any element with the same sign as @xmath15 .",
    "by lemma  [ endolemma ] , @xmath533 is an endomorphism of @xmath81 . since @xmath534",
    ", it follows that @xmath535 .",
    "[ homogeneouscaselemma ] let @xmath507 $ ] be a finite constraint language .",
    "then , either    * @xmath12 is @xmath365-valid ; or * csp@xmath13 is polynomial - time equivalent to csp@xmath536 .",
    "assume that @xmath12 is not @xmath365-valid .",
    "by lemma  [ zerovalidlemma ] , @xmath34 contains a non - empty unary relation that is not @xmath365-valid .",
    "we consider three different cases .",
    "_ @xmath34 contains a non - empty unary relation @xmath81 such that @xmath537 and @xmath538 . by lemma  [ pointlemma ] , @xmath529 so @xmath539 .",
    "we claim that csp@xmath540 is polynomial - time equivalent to csp@xmath541 . the polynomial - time reduction from right to left is trivial . to show the other direction , let @xmath29 be an arbitrary instance of csp@xmath540 .",
    "assume without loss of generality that the relation @xmath2 appears in exactly one constraint @xmath542 .",
    "construct @xmath41 by replacing this constraint with @xmath543 .",
    "if @xmath41 has no solution , then @xmath29 has no solution .",
    "suppose instead that @xmath41 has the solution @xmath350 .",
    "then we know that @xmath544 .",
    "choose @xmath79 such that @xmath545 .",
    "by lemma  [ endolemma ] , the function @xmath525 is then a solution to @xmath29 .",
    "_ @xmath34 contains a non - empty unary relation @xmath81 such that @xmath537 and @xmath546 . by lemma  [ pointlemma ] , @xmath531 so @xmath547 .",
    "we can now pp - define @xmath548 since @xmath549 and go back to case 1 .",
    "_ @xmath34 contains a non - empty unary relation @xmath81 such that @xmath537 and no unary relation @xmath550 equals @xmath548 or @xmath551 .",
    "lemma  [ pointlemma ] implies that @xmath552 .",
    "we claim that csp@xmath13 is polynomial - time equivalent to csp@xmath536 .",
    "the reduction from left to right is trivial . to show the other direction ,",
    "let @xmath553 be an arbitrary instance of csp@xmath554 , where @xmath32 is quantifier - free , and assume without loss of generality that the relation @xmath2 appears in exactly one constraint @xmath555 .",
    "construct @xmath41 by replacing this constraint with @xmath556 .",
    "if @xmath41 has no solution , then @xmath29 has no solution .",
    "suppose instead that @xmath41 has a solution .",
    "assume first that every solution assigns a negative number to the variable @xmath557 .",
    "then we can pp - define a unary relation @xmath558 by @xmath559 and this contradicts our initial assumptions .",
    "thus , there is a solution @xmath350 such that @xmath560 .",
    "choose @xmath79 such that @xmath545 .",
    "by lemma  [ endolemma ] , the function @xmath525 is a solution to @xmath29 .",
    "[ nopropertymainresult ] let @xmath332 $ ] be a finite constraint language that violates ( p@xmath425 ) and/or ( p@xmath426 ) .",
    "the problem csp@xmath13 is in p if    * @xmath12 is @xmath365-valid ; * @xmath561 does not contain a bnu ; or * @xmath562 is essentially convex .    otherwise , csp@xmath13 is np - hard .    by theorem  [ thm : mainreduction ] , csp@xmath13 is equivalent to csp@xmath463 . by lemma  [ homogeneouscaselemma ] ,",
    "csp@xmath463 is either trivially in p , if it is @xmath365-valid , or csp@xmath463 is polynomial - time equivalent to csp@xmath563 . in the latter case",
    ", the result follows from corollary  [ linearmainresult ] .",
    "in this section , we study the optimisation problem where the objective is to maximise a linear function over the solution set of a semilinear csp . for an arbitrary constraint language",
    "@xmath454 $ ] , we formally define the problem opt@xmath13 as follows .    by lemma  [ generateequations ] , the problem opt@xmath564 is polynomial - time equivalent to linear programming .",
    "bodirsky et al .",
    "@xcite have shown that for semilinear constraint languages containing @xmath59 , the problem csp@xmath13 is polynomial - time solvable ( np - hard ) if and only if the problem opt@xmath13 is polynomial - time solvable ( np - hard ) ( cf .",
    "theorem  [ bodirskytheorem ] ) .    in theorem  [ thm : main - opt ] , we show that , for semilinear constraint languages containing @xmath129 , the complexity of the decision problem and of the optimisation problem is similarly related .",
    "we first prove an analogue of theorem  [ thm : affinesolves ] for the optimisation problem .",
    "[ thm : affine - opt ] let @xmath565 $ ] be a finite constraint language .",
    "if there is no bnu in @xmath34 , then opt@xmath13 can be solved in polynomial time .",
    "let @xmath29 be an instance of csp(@xmath12 ) , let @xmath566 , and let @xmath567 be a vector .",
    "assume @xmath568 where @xmath32 is quantifier - free .",
    "algorithm  [ alg : affc ] in section  [ sec : tractability ] finds the affine hull @xmath226 of the set of satisfying assignments to @xmath29 in polynomial time .",
    "if @xmath569 , then we answer ` unsatisfiable ' .",
    "otherwise , the affine hull @xmath226 is represented by a set of inequalities , each with representation size that is polynomial in the input size .",
    "therefore , we can solve the system @xmath570 , @xmath571 , in polynomial time .",
    "assume that this system has a solution .",
    "let @xmath572 and let @xmath573 be affinely independent satisfying assignments to @xmath29 .",
    "then , we can write @xmath574 and @xmath575 with @xmath576 . since @xmath577 we must have @xmath578 for some @xmath579",
    "let @xmath580 , where @xmath581 and for each @xmath582 , let @xmath583 denote the corresponding point on the line through @xmath584 and @xmath585 .",
    "fix an arbitrary constant @xmath586 .",
    "since there is no bnu in @xmath34 , it follows from lemma  [ halfboundgenerate](1 ) that there is a point @xmath582 such that @xmath583 satisfies @xmath587 .",
    "since @xmath588 is a satisfying assignment , we can therefore answer ` unbounded ' .",
    "otherwise , @xmath589 for all @xmath570 , so @xmath590 is constant for @xmath591 . in polynomial time , we can find a @xmath591 with polynomial representation size .",
    "it then suffices to evaluate @xmath590 and answer ` optimum : @xmath590 ' .",
    "[ thm : main - opt ] let @xmath440 $ ] be a finite constraint language .",
    "the problem opt@xmath13 is polynomial - time solvable if @xmath34 does not contain a bnu or if @xmath12 is essentially convex . otherwise , opt@xmath13 is np - hard .",
    "the polynomial - time solvable cases follow from theorem  [ bodirskytheorem ] and theorem  [ thm : affine - opt ] .",
    "the hardness follows from corollary  [ linearmainresult ] .",
    "a comparison between theorem  [ thm : main - opt ] and corollary  [ linearmainresult ] shows that , for a semilinear constraint language @xmath12 containing @xmath129 , csp@xmath13 is polynomial - time solvable ( np - hard ) if and only if opt@xmath13 is polynomial - time solvable ( np - hard ) . the following example shows that this tight relationship between the complexity of a constraint satisfaction problem and its corresponding optimisation problem can not be further extended to the class of all semilinear constraint languages containing the relation @xmath3 .",
    "let @xmath592 ( cf .",
    "section  [ sec : hard ] ) . note that @xmath593 is semilinear , @xmath365-valid , and that @xmath12 satisfies both ( p@xmath425 ) and ( p@xmath426 ) .",
    "let @xmath29 be an arbitrary instance of csp@xmath363 .",
    "construct an instance @xmath41 of opt@xmath13 by introducing an auxiliary variable @xmath374 , and for each constraint @xmath371 in @xmath29 , introduce a constraint @xmath594 in @xmath41 .",
    "finally , let the vector @xmath595 be defined by @xmath596 and @xmath597 for all other variables @xmath268 .",
    "then , the instance @xmath29 has a solution if and only if an optimal solution of @xmath41 has value 1 . we conclude that csp@xmath13 is polynomial - time solvable ( since @xmath12 is @xmath365-valid ) , but that opt@xmath13 is np - hard .",
    "in this section , we study the problem of finding _ integer _ solutions to csps defined by semilinear relations .",
    "we consider two different approaches : ( 1 ) allowing an additional unary constraint that forces a chosen variable to take an integral value , and ( 2 ) identifying constraint languages which guarantee the existence of integer solutions .",
    "the reader should note that in the first approach we _ do not _ consider semilinear relations defined over the integers . instead",
    ", we consider ways of checking whether a given problem instance has a solution where some variables are assigned integral values . some of the problems in the second approach can be seen as semilinear csps over the integers , but our methods do not lend themselves to a systematic study of such csps . see  @xcite for a recent approach to such a systematic study .",
    "the unary relation @xmath598 can be used to ensure that a variable is given an integral value . by lemma  [ fakeomin ] , this relation is not semilinear over @xmath5 , so the constraint languages that we classify in the next theorem are formally not semilinear .",
    "[ thm : main - int ] let @xmath332 $ ] be a finite constraint language that satisfies ( p@xmath425 ) and ( p@xmath430 ) .",
    "the problem csp@xmath599 is in p if    * @xmath12 is 0-valid ; or * @xmath34 does not contain a bnu .    otherwise , csp@xmath599 is np - hard .",
    "if @xmath12 is 0-valid , then @xmath600 is 0-valid , so every instance admits the solution @xmath601 .",
    "otherwise , assume that @xmath34 does not contain a bnu .",
    "let @xmath29 be an arbitrary instance of csp@xmath599 , let @xmath602 be the set of variables that are constrained by @xmath598 in @xmath29 , and let @xmath41 be the instance of csp@xmath13 obtained from @xmath29 by removing all @xmath598-constraints . by an argument on the set of all bounded , non - empty unary relations in @xmath34 similar to that used in the proof of theorem  [ thm : main ] , it follows that @xmath34 contains the relation @xmath2 .",
    "let @xmath132 be the set of satisfying assignments to @xmath41 by running algorithm  [ alg : affc ] , we obtain a system of inequalities that defines the affine hull @xmath226 of the satisfying assignments @xmath132 .",
    "we now substitute each such inequality for an equality .",
    "the resulting system of linear equalities still defines @xmath226 .",
    "let @xmath603 .",
    "we can compute a system of linear equations for @xmath604 in polynomial time by first computing a parameter form for @xmath226 , removing the coordinates not corresponding to @xmath224 , and then computing the equivalent system of linear equations .",
    "this can be in polynomial time by being careful with the representation sizes of the intermediary results ( cf .",
    "schrijver  ( * ? ? ?",
    "* section  3 ) ) .",
    "we then solve the resulting system of linear equations for an integer solution in polynomial time ( cf .",
    "schrijver  ( * ? ? ?",
    "* corollary  5.3 ) ) .",
    "if no such solution exists , then @xmath29 is unsatisfiable .",
    "otherwise , the integer points in @xmath604 are given by @xmath605 , for some linearly independent vectors @xmath606 , where @xmath607 .",
    "the vectors @xmath608 can be found explicitly in polynomial time , but since we are only interested in showing that there exists a satisfying assignment to @xmath29 , it suffices that @xmath348 has the aforementioned form .    for @xmath609 and constant @xmath118 ,",
    "define @xmath610 .",
    "let @xmath611 be the projection of @xmath132 to the variables in @xmath224 and note that @xmath612 .",
    "by lemma  [ lem : intersection ] , @xmath613 contains a linear set @xmath614 such that @xmath615 .",
    "let @xmath616 and @xmath118 be such that @xmath617 .",
    "we claim that there exist distinct @xmath618 such that the line through @xmath619 and @xmath620 intersects @xmath621 in an open line segment",
    ". let @xmath622 .",
    "since @xmath34 does not contain a bnu , it follows that @xmath623 for some @xmath424 .",
    "therefore , @xmath624 for a large enough integer @xmath428 .",
    "hence , there exists a point @xmath625 such that @xmath626 , so @xmath29 is satisfiable .    to prove the claim , let @xmath627 and let @xmath628 .",
    "consider the cone @xmath629 and note that @xmath630 contains @xmath631 .",
    "for a large enough positive constant @xmath420 , the set @xmath632 is non - empty",
    ". let @xmath633 .",
    "then , the line through @xmath619 and @xmath620 intersects @xmath329 in an open line segment .",
    "finally , assume that @xmath34 contains a bnu @xmath81 .",
    "we may assume that @xmath81 is not @xmath365-valid : by lemma  [ zerovalidlemma ] , @xmath34 contains a non - empty unary relation @xmath188 that is not @xmath365-valid . let @xmath460 be a non - zero constant such that @xmath634 . if @xmath635 contains more than one element , then it is a bnu that is not @xmath365-valid .",
    "otherwise , @xmath635 is a constant unary relation , so @xmath34 contains @xmath2 . in this case , for a large enough constant @xmath460 , the relation @xmath636 is a bnu that is not @xmath365-valid .",
    "let @xmath637 be two distinct points and let @xmath460 be a non - zero constant such that @xmath638 .",
    "then , @xmath639 is a bnu that excludes an interval and @xmath640 .",
    "np - hardness therefore follows from lemma  [ universalhardness ] .      in this section",
    ", we will determine those semilinear constraint languages containing @xmath3 for which knowing that there is a solution guarantees that there is an integer solution .",
    "we make the following definition .",
    "let @xmath12 be a constraint language over @xmath5 .",
    "we say that @xmath12 has the _ integer property _ if every instance of csp@xmath13 has a solution if and only if it has an integer solution .",
    "the integer property can be used to infer tractability of certain semilinear constraint languages over @xmath598 . in particular , if @xmath12 is a semilinear constraint language over @xmath5 that satisfies the integer property , then csp@xmath13 and csp@xmath641 are equivalent . to see that @xmath642 is a semilinear constraint language over @xmath598 ,",
    "take an arbitrary @xmath55 and let @xmath32 be a quantifier - free definition of @xmath9 over @xmath643 $ ] .",
    "then , @xmath32 is also a quantifier - free definition of @xmath644 over @xmath645 $ ] .",
    "the following lemma shows that the integer property is preserved under pp - definitions .",
    "[ lem : ipclosed ] let @xmath12 be a constraint language over @xmath5 . if @xmath12 has the integer property , then so does @xmath34 .",
    "let @xmath646 be an csp - instance with relations @xmath647 from @xmath34 , let @xmath276 be pp - definitions of @xmath647 in @xmath12 , and let @xmath648 be the csp@xmath13-instance obtained from @xmath646 by replacing each relation @xmath39 by the quantifier - free part of @xmath282 , and adding existential quantifiers for all auxiliary variables . if @xmath646 has a rational solution , then @xmath648 has a rational solution , so @xmath648 has an integer solution .",
    "note that the restriction of any solution of @xmath648 to @xmath649 is a solution to @xmath646 .",
    "therefore , the restriction of an integer solution of @xmath648 to @xmath649 is an integer solution to @xmath646 , which proves the lemma .",
    "let @xmath12 denote a semilinear constraint language that contains @xmath3 .",
    "observe that if @xmath362 , then csp@xmath13 can not have the integer property since the following csp@xmath650-instance has the unique solution @xmath651 : @xmath652    let @xmath12 be a constraint language over @xmath5 .",
    "we say that @xmath12 is _ scalable _ if the following holds : for each @xmath55 and for each @xmath653 , there exists a positive constant @xmath226 such that @xmath654 , for all @xmath655 .",
    "clearly , scalable constraint languages can not contain any unary constant relation @xmath656 except when @xmath657 .",
    "note that if @xmath12 has endomorphisms @xmath516 for all rational @xmath658 , then @xmath12 is indeed scalable .",
    "inferring the existence of endomorphisms from the scalability property is , in general , not straightforward or even possible .",
    "the scalability property was originally defined slightly differently  @xcite but it is easy to verify that the two definitions coincide .",
    "the following result completely characterises the semilinear constraint languages that contain @xmath3 and have the integer property .",
    "[ unboundedinteger ] let @xmath332 $ ] be a constraint language that is not @xmath365-valid .",
    "then , the following are equivalent :    1 .",
    "[ ip : ip ] @xmath12 has the integer property .",
    "[ ip : unary ] every unary relation in @xmath34 is either @xmath446 or unbounded .",
    "[ ip : infty ] @xmath12 does not satisfy ( p@xmath430 ) .",
    "[ ip : scalable ] @xmath12 is scalable .",
    "( [ ip : ip ] ) @xmath659 ( [ ip : unary ] ) .",
    "we show @xmath660([ip : unary ] ) @xmath659 @xmath660([ip : ip ] ) .",
    "suppose that @xmath661 is a bounded unary relation in @xmath34 .",
    "by lemma  [ zerovalidlemma ] , there is a non - empty unary relation @xmath662 in @xmath34 that is not @xmath365-valid .",
    "therefore , for some @xmath460 , the unary relation @xmath663 in @xmath34 is non - empty , bounded , and not @xmath365-valid .",
    "let @xmath664 .",
    "consider the csp instance @xmath665 and note that it has a solution : arbitrarily choose @xmath98 and let @xmath666 .",
    "however , it can not have any integer solution since @xmath537 and @xmath28 was chosen such that @xmath667 . both @xmath81 and the equation @xmath668 are pp - definable in @xmath12 , so the claim follows from lemma  [ lem : ipclosed ] .",
    "( [ ip : unary ] ) @xmath659 ( [ ip : infty ] ) .",
    "we show @xmath660([ip : infty ] ) @xmath659 @xmath660([ip : unary ] ) .",
    "assume that there exists a unary relation @xmath81 in @xmath34 containing a positive point and @xmath669 , for some @xmath424 .",
    "if @xmath81 is bounded , then @xmath660([ip : unary ] ) follows immediately .",
    "otherwise , by lemma  [ fakeomin ] , there exists some @xmath670 such that @xmath671 and @xmath672 . by lemma  [ halfboundgenerate](2 )",
    ", there exists a bounded unary relation in @xmath85 and , consequently , there exists such a relation in @xmath34 .",
    "( [ ip : infty ] ) @xmath659 ( [ ip : scalable ] ) .",
    "we show @xmath660([ip : scalable ] ) @xmath659 @xmath660([ip : infty ] ) .",
    "arbitrarily choose an @xmath152-ary relation @xmath55 such that @xmath9 is not scalable . arbitrarily choose a tuple @xmath673 that witnesses that @xmath9 is not scalable",
    ", i.e. , the set @xmath674 is unbounded .",
    "consider the set @xmath675 and note that @xmath81 is pp - definable in @xmath676 by lemma  [ generateequations ] : @xmath677 note that @xmath678 so @xmath81 contains a positive point .",
    "furthermore , since @xmath43 is unbounded , it follows from lemma  [ fakeomin ] that @xmath679 for some @xmath424 .",
    "hence , by definition of @xmath81 , we have @xmath669 , so @xmath12 satisfies ( p@xmath426 ) .",
    "( [ ip : scalable ] ) @xmath659 ( [ ip : ip ] ) .",
    "this implication is not difficult to deduce from the proof of lemma  6 in  @xcite .",
    "we include an argument here for completeness .",
    "assume that @xmath12 is scalable and let @xmath29 be an arbitrary instance of csp@xmath13 with a solution @xmath268 .",
    "let @xmath680 be an enumeration of the atoms of @xmath29 that contain a relation symbol from @xmath12 .",
    "since @xmath12 is scalable , it follows that there exists a constant @xmath681 such that @xmath682 satisfies @xmath143 for all @xmath683 .",
    "let @xmath684 .",
    "then , @xmath682 satisfies all atoms ( including the equalities ) of @xmath29 , for all @xmath655 .",
    "therefore , if @xmath75 is chosen to be a large enough common multiple of the denominators in @xmath268 , then @xmath682 is an integral solution to @xmath29 .    as an immediate application of theorem  [ unboundedinteger ] we give a complement to theorem  [ thm : main - int ] in the case when @xmath12 violates ( p@xmath430 ) .",
    "let @xmath332 $ ] be a constraint language that violates ( p@xmath430 ) .",
    "the problem csp@xmath599 is in p if    * @xmath12 is @xmath365-valid ; * @xmath561 does not contain a bnu ; or * @xmath562 is essentially convex .    otherwise , csp@xmath685 is np - hard .",
    "if @xmath12 is @xmath365-valid , then @xmath600 is @xmath365-valid , and hence in p. otherwise , theorem  [ unboundedinteger ] implies that @xmath12 has the integer property .",
    "therefore , every instance of csp@xmath13 has a solution if and only if it has an integer solution .",
    "it follows that csp@xmath599 is polynomial - time equivalent to csp@xmath13 . since @xmath12 violates ( p@xmath430 ) , the result follows from theorem  [ nopropertymainresult ] .",
    "a natural goal , following the proof of theorem  [ superresult ] , would be to determine the complexity of csp@xmath13 for an arbitrary semilinear constraint language @xmath12 , i.e. , when @xmath12 does not necessarily contain @xmath3 .",
    "below we indicate a few such attempts and the difficulties that accompany them .    consider corollary  [ linearmainresult ] .",
    "our main result , theorem  [ superresult ] , generalises this by removing the assumption that @xmath2 is in @xmath12 .",
    "a natural question is then what happens if we instead remove the assumption that the addition relation needs to be in @xmath12 . to this end , let @xmath686 denote the set of semilinear constraint languages such that @xmath687 and @xmath688 .",
    "a straightforward modification of the construction in section  6.3 of jonsson and lw  @xcite gives the following : for every constraint language @xmath42 over a finite domain , there exists a @xmath689 such that csp@xmath36 and csp@xmath13 are polynomial - time equivalent problems .",
    "hence , a complete classification would give us a complete classification of finite - domain csps , and such a classification is a major open question within the csp community  @xcite .",
    "we also observe that for every _ temporal constraint language _",
    "( i.e. , languages that are first - order definable in @xmath690 over the rationals ) , there exists a @xmath689 such that csp@xmath36 and csp@xmath13 are polynomial - time equivalent problems .",
    "this follows from the fact that every temporal constraint language @xmath42 admits a polynomial - time reduction from csp@xmath691 to csp@xmath36 : simply equate all variables appearing in @xmath2-constraints and note that any solution can be translated into a solution such that this variable is assigned the value 1 .",
    "the complexity of temporal constraint languages is fully determined  @xcite and the polynomial - time solvable cases fall into nine different categories .",
    "the proof is complex and it is based on the universal - algebraic approach for studying csps . we conclude that a complete classification of the languages in @xmath686 will require advanced techniques and will have to be conditioned on the classification of finite - domains csps .",
    "a smaller first step towards removing @xmath3 from corollary  [ linearmainresult ] would be to only slightly relax the addition relation .",
    "consider the _",
    "affine _ addition relation @xmath692 .",
    "this relation can be viewed as a ` relaxed ' variant of @xmath3 since @xmath693 can be pp - defined in @xmath19 but not the other way round .",
    "let @xmath12 be a constraint language such that @xmath694 $ ] for some @xmath460 .",
    "it is not hard to reduce the complexity classification for such constraint language to that of theorem  [ superresult ] :    given a relation @xmath71 and a rational number @xmath460 , let @xmath695 denote the relation @xmath696 .",
    "for instance , @xmath697 .",
    "similarly , we define @xmath698 for constraint languages @xmath12 .",
    "note that csp@xmath13 and csp@xmath699 are polynomial - time equivalent problems .",
    "arbitrarily choose a constraint language @xmath694 $ ] and let @xmath700 .",
    "the problem csp@xmath36 is polynomial - time equivalent with csp@xmath13 , @xmath701 and @xmath702 .",
    "the fact that @xmath701 and @xmath702 implies that @xmath703 since @xmath704 can be pp - defined by @xmath705 consequently , csp@xmath36 and csp@xmath706 are polynomial - time equivalent problems .",
    "we conclude that csp@xmath13 is either in p or np - complete by theorem  [ superresult ] .",
    "an interesting way forward would be to classify the complexity of csp@xmath13 for all @xmath707 $ ] .",
    "such a result would be a substantial generalisation of the results in section  4 of bodirsky et al .",
    "here , we see no obvious obstacles as in the case above for @xmath689 .",
    "theorem  [ superresult ] shows that for every constraint language @xmath332 $ ] , the problem csp@xmath13 is either in p or np - complete .",
    "this makes the following computational problem ( sometimes referred to as a _",
    "metaproblem _ in the literature ) relevant :      we do not know the complexity of this problem and , in fact , it is not clear whether it is decidable or not .",
    "interesting methods for tackling similar questions have been identified by , for instance , bodirsky et al .",
    "@xcite and dumortier et al .",
    "bodirsky et al .",
    "analyse the decidability of abstract properties of constraint languages such as whether certain relations are pp - definable or not .",
    "their results are based on a number of different techniques from model theory , universal algebra , ramsey theory , and topological dynamics .",
    "dumortier et al .",
    "@xcite show that it is decidable whether a given first - order formula using the binary functions @xmath708 and @xmath21 , and the binary relation @xmath1 over @xmath709 with parameters from @xmath710 defines a semilinear relation .",
    "these results indicate that there are non - obvious properties of semilinear relations that may be relevant for proving ( un)decidability of the metaproblem .",
    "manuel bodirsky and martin grohe .",
    "non - dichotomies in constraint satisfaction complexity . in _ proceedings of the 35th international colloquium on automata , languages and programming ( icalp-2008 ) _ , pages 184196 , 2008 .",
    "manuel bodirsky , barnaby martin , and antoine mottet .",
    "constraint satisfaction problems over the integers with successor . in _ proceedings of the 42nd international colloquium on automata , languages and programming ( icalp-2015 ) _ , 2015 . to appear .",
    "freddy dumortier , marc gyssens , luc vandeurzen , and dirk  van gucht . on the decidability of semilinearity for semialgebraic sets and its implications for spatial databases  corrigendum .",
    ", 59(3):557562 , 1999 .                  peter jonsson and johan thapper .",
    "affine consistency and the complexity of semilinear constraints . in _ proceedings of 39th international symposium on mathematical foundations of computer science ( mfcs-2014 ) _ , pages 420431 , 2014 ."
  ],
  "abstract_text": [
    "<S> a semilinear relation is a finite union of finite intersections of open and closed half - spaces over , for instance , the reals , the rationals , or the integers . </S>",
    "<S> semilinear relations have been studied in connection with algebraic geometry , automata theory , and spatiotemporal reasoning . </S>",
    "<S> we consider semilinear relations over the rationals and the reals . under this assumption , </S>",
    "<S> the computational complexity of the constraint satisfaction problem ( csp ) is known for all finite sets containing @xmath0 , @xmath1 , and @xmath2 . </S>",
    "<S> these problems correspond to expansions of the linear programming feasibility problem . </S>",
    "<S> we generalise this result and fully determine the complexity for all finite sets of semilinear relations containing @xmath3 . </S>",
    "<S> this is accomplished in part by introducing an algorithm , based on computing affine hulls , which solves a new class of semilinear csps in polynomial time . </S>",
    "<S> we further analyse the complexity of linear optimisation over the solution set and the existence of integer solutions .    </S>",
    "<S> * keywords . * constraint satisfaction problems , semilinear sets , algorithms , computational complexity    the first author was partially supported by the swedish research council ( vr ) under grant 621 - 2012 - 3239 . ] </S>"
  ]
}
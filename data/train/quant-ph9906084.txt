{
  "article_text": [
    "a quantum turing machine ( qtm ) is a theoretical model of quantum computers , which expands the classical model of a turing machine ( tm ) by allowing quantum interference to take place on their computation paths . designing a qtm in general , however ,",
    "is significantly harder than that of a classical tm because of its _ well - formedness _ condition as well as its halting condition , known as the _ timing problem_. recently bernstein and vazirani @xcite initiated a study of quantum complexity theory founded on a restrictive model : a one - head , multi - track , stationary , dynamic , normal form , unidirectional qtm ( for definitions , see section [ sec : basics ] ) that prohibits a tape head to stay still .",
    "we call such a restrictive qtm _ conservative _ for convenience",
    ".    one may find easier to program a less restrictive qtm when he wishes to solve a problem on a quantum computer . in this paper",
    "we wish to introduce a qtm as general as possible . in section [",
    "sec : basics ] , we introduce a multi - tape , multi - head qtm with multi final states that also allows tape heads to stay still .",
    "although many variations of qtms are known to be polynomially equivalent @xcite , unsolved is the question of what is the degree of polynomials of these simulation overhead . as we will show in section [ sec : simulation ] , any multi - tape , multi - head , well - formed qtm can be effectively simulated by a conservative qtm with only cubic polynomial slowdown .",
    "our primary goal is to contribute to the foundation of programming a handy qtm . in section [ sec : lemmas ]",
    ", we will prove two fundamental lemmas : well - formedness lemma and completion lemma , which are important tools in constructing a qtm .",
    "the lemmas expand the results of bernstein and vazirani @xcite , who considered mostly conservative qtms . using the lemmas",
    ", we will show that any computation of a well - formed qtm can be reversed on a well - formed qtm with quadratic polynomial slowdown .",
    "we will also address the timing problem in section [ sec : simulation ] . in section [ sec : oracle ] , we will focus on an oracle qtm with multi query tapes and multi oracles . for any oracle qtm @xmath0",
    ", we can build an oracle qtm , similar to the classical case , that simulates @xmath0 with a fixed number of queries of fixed length on every computation path .",
    "this section briefly describes the formal definition of quantum turing machines . for our purpose",
    ", we wish to make the definition as general as possible . here",
    "we present a definition that is slightly more general than the one given in @xcite .",
    "a @xmath1-tape _ quantum turing machine _ ( qtm ) @xmath0 is a quintuple @xmath2 , where each @xmath3 is a finite alphabet with a distinguished blank symbol @xmath4 , @xmath5 is a finite set of internal states including an initial state @xmath6 and @xmath7 , a set of final states , and @xmath8 is a multi - valued , _ quantum transition function _ from @xmath9 to @xmath10 .",
    "( note that @xmath11 must be defined . ) for brevity , write @xmath12 for @xmath13 .",
    "a qtm has two - way infinite tapes of cells indexed by @xmath14 and read / write tape heads that move along the tapes . directions @xmath15 and @xmath16 mean that a head steps right and left , respectively , and direction @xmath17 mean that a head makes no movement .",
    "we say that all tape heads move _ concurrently _ if they move in the same direction at any time ( in this case , , we write @xmath18 instead of @xmath19 ) .",
    "we call a qtm _ dynamic _ if its heads never stay still .",
    "a qtm is _ unidirectional _ if , for any @xmath20 , @xmath21 , and @xmath22 , @xmath23 implies @xmath24 .",
    "we assume the reader s familiarity with the following terminology : a _ time - evolution operator _ , a _ configuration _ and _ final configuration _ , a",
    "_ superposition _ and a _ final superposition _",
    "well - behaved _ and _ stationary _ qtm , and the _ acceptance probability _ of a qtm . for their definitions , see @xcite .    here",
    "are ones different from @xcite .",
    "a qtm is in _ normal form _ if , for every @xmath25 , there exists a direction @xmath26 such that @xmath27 for any @xmath28 .",
    "a qtm @xmath0 is called _ synchronous _ if , for every @xmath29 , any two computation paths of @xmath0 on @xmath29 reach final configurations at the same time .",
    "the _ running time _ of @xmath0 on @xmath29 is defined to be the minimal number @xmath30 such that , at time @xmath30 , all computation paths of @xmath0 on @xmath29 reach final configurations .",
    "we write @xmath31 to denote the running time of @xmath0 on @xmath29 if one exists ; otherwise , it is undefined .",
    "we say that @xmath0 on input @xmath29 _ halts in time @xmath30 _ if @xmath31 exists and @xmath32 .",
    "a qtm is _ well - formed _ if its time - evolution operator preserves the @xmath33-norm .",
    "a multi - tape qtm is said to be _ conservative _ if it is a well - formed , stationary , dynamic , unidirectional qtm in normal form with concurrent head move .",
    "we write @xmath34 to denote the probability that @xmath0 accepts input @xmath29 .    throughout this paper",
    ", @xmath30 denotes a function from @xmath35 to @xmath36 .",
    "in this section , we will prove two lemmas that are essential tools in programming a well - formed qtm : _ well - formedness lemma _ and _ completion lemma_.    for convenience , the head move directions @xmath15 , @xmath17 , and @xmath16 are identified with @xmath37 , @xmath38 , and @xmath39 , respectively .    [ [ well - formedness - lemma . ] ] * well - formedness lemma . * + + + + + + + + + + + + + + + + + + + + + + + +    one of the most significant feature of a qtm is the well - formedness condition on its quantum transition function that reflects the unitarity of their corresponding time - evolution operators .",
    "here we present in lemma [ lemma : general - formedness ] three local requirements for a quantum transition function whose associated qtm is well - formed .",
    "let @xmath40 be a @xmath1-tape qtm . recall that @xmath12 stands for @xmath13 .",
    "we introduce the notation @xmath41 $ ] .",
    "let @xmath42 , @xmath43 , and @xmath44 .",
    "let @xmath45 and @xmath46 .",
    "define @xmath47 and @xmath48 , where @xmath49 and @xmath50 .",
    "let @xmath51 , where @xmath52 if @xmath53 and @xmath54 otherwise . finally , we define @xmath41 $ ] as follows : @xmath41 = \\sum_{q\\in q } \\sum_{{\\mbox{\\boldmath $ { } _ { d}$}}\\in d_{{\\mbox{\\boldmath $ { } _ { \\epsilon}$ } } } } \\delta(p,{\\mbox{\\boldmath $ \\sigma$}},q,{\\mbox{\\boldmath $ \\tau$}},{\\mbox{\\boldmath $ d$}})|e_{{\\mbox{\\boldmath $ { } _ { d}$}}}|^{-1/2 } { | q \\rangle } { | h_{{\\mbox{\\boldmath $ { } _ { d}$}},{\\mbox{\\boldmath $ { } _ { \\epsilon}$ } } } \\rangle}$ ] .",
    "[ lemma : general - formedness ] ( well - formedness lemma ) a @xmath1-tape qtm @xmath40 is well - formed iff the following three conditions hold .    1",
    ".   ( unit length ) @xmath55 for all @xmath56 .",
    "2 .   ( orthogonality ) @xmath57 for any distinct pair @xmath58 .",
    "3 .   ( separability )",
    "@xmath59\\cdot \\delta[p_2,{\\mbox{\\boldmath $ \\sigma$}}_2,{\\mbox{\\boldmath $ \\tau$}}_2|{\\mbox{\\boldmath $ \\epsilon$}}']=0 $ ] for any distinct pair @xmath60 and for any pair @xmath61 .",
    "the proof of the lemma is similar to that of theorem 5.3 in @xcite .",
    "note that , since any two distinct tapes do not interfere , a @xmath1-tape qtm must satisfy the @xmath1 independent conditions for the case @xmath62 .",
    "we leave the detail to the reader .    [",
    "[ sec : completion ] ] * completion lemma . * + + + + + + + + + + + + + + + + + + +    a quintuple @xmath40 is called a _ partial _ qtm if @xmath8 is a partial quantum transition function that is defined on a subset @xmath63 of @xmath64 .",
    "if @xmath8 satisfies the three conditions of lemma [ lemma : general - formedness ] on all entries of @xmath8 , then we call @xmath0 a _ well - formed partial _ qtm @xcite .",
    "completion lemma says that any well - formed partial qtm can be expanded to a well - formed qtm .",
    "[ lemma : completion](completion lemma ) for every @xmath1-tape , well - formed partial qtm with quantum transition function @xmath8 , there exists a @xmath1-tape , well - formed qtm with the same state set and alphabet whose transition function @xmath65 agrees with @xmath8 whenever @xmath8 is defined .    to show the lemma , we first consider how to change the basis of a given qtm .",
    "let @xmath40 be a given qtm .",
    "we first partition @xmath66 into mutually orthogonal spaces @xmath67 such that ( i ) @xmath68 and ( ii ) for any @xmath46 and any @xmath45 , @xmath41\\in { \\mathbb{c}}_{{\\mbox{\\boldmath $ { } _ { \\epsilon}$}}}$ ] .",
    "note that if @xmath69 then @xmath70 . for each @xmath46 ,",
    "let @xmath71 be an orthonormal basis for @xmath72 .",
    "let @xmath73 be the union of all such @xmath71 s .",
    "we assume that , at time @xmath74 , @xmath0 in state @xmath75 scans symbol @xmath76 and that @xmath8 maps @xmath77 to@xmath78 .",
    "define the change of basis from @xmath79 to @xmath80 by mapping @xmath81 into @xmath82 .",
    "let @xmath83 denote this transform .",
    "this matrix @xmath83 is unitary because @xmath84 , which implies @xmath85 .",
    "it is known in @xcite that @xmath83 preserves the @xmath33-norm iff @xmath83 is unitary .",
    "let @xmath86 denote @xmath87 for any @xmath88 .",
    "in what follows , we show that @xmath65 is `` unidirectional '' in the sense that if @xmath89 then @xmath90 .",
    "let @xmath91 and @xmath92 be distinct and in @xmath93 .",
    "note that the separability condition ensures that @xmath41\\cdot \\delta[p',{\\mbox{\\boldmath $ \\sigma$}}',{\\mbox{\\boldmath $ \\tau$}}'|{\\mbox{\\boldmath $ \\epsilon$}}']=0 $ ] for any @xmath94 .",
    "since @xmath41 = \\sum_{v\\in b } \\delta'(p,{\\mbox{\\boldmath $ \\sigma$}},v,{\\mbox{\\boldmath $ \\tau$}},{\\mbox{\\boldmath $ \\epsilon$ } } ) { | v \\rangle}\\in { \\mathbb{c}}_{{\\mbox{\\boldmath $ { } _ { \\epsilon}$}}}$ ] , @xmath95 for any @xmath96 if @xmath97 .",
    "therefore , @xmath65 is `` unidirectional . ''",
    "the transform @xmath83 is useful to show completion lemma .",
    "we go back to the formal proof of completion lemma .",
    "lemma [ lemma : completion ] let @xmath40 be a given qtm .",
    "let @xmath83 be defined as above . as shown above",
    ", @xmath83 is unitary . as a result , @xmath98 is a set of orthonormal vectors since so is @xmath99 .    for each @xmath100 , let @xmath101 be @xmath91 such that @xmath102 for some @xmath45 if any , and",
    "let @xmath103 otherwise .",
    "since @xmath65 is `` unidirectional '' , @xmath101 is uniquely determined .",
    "this implies that we can define the vector @xmath104 as @xmath105 .",
    "now we expand @xmath106 to @xmath107 by adding arbitrarily extra orthonormal vectors associated with elements in @xmath108 .",
    "let @xmath109 be such an expansion of @xmath106 .",
    "we define @xmath110 by @xmath111 .",
    "we then apply the inverse transform @xmath112 to @xmath113 and let @xmath114 be the result obtained .",
    "define @xmath115 .",
    "since @xmath83 is unitary , @xmath116 must be well - formed .",
    "completion lemma also enables us to use a @xmath1-tuple of a single alphabet , @xmath117 , instead of @xmath118 . in the following sections",
    ", we will deal only with a @xmath1-tape qtm with tape alphabets @xmath117 .",
    "in this section we demonstrate several simulation results using the main lemmas in section [ sec : lemmas ] . since we are interested only in the acceptance probability of a qtm , the `` simulation '' of a qtm @xmath0 by another qtm @xmath119 in this paper regards with the statement that @xmath17 produces the same acceptance probability as @xmath0 does .",
    "more formally , we say that @xmath119 _ simulates @xmath0 with slowdown @xmath120 _ if , for every @xmath29 , @xmath121 and @xmath122 .",
    "assume that @xmath0 is a @xmath1-tape well - formed qtm running in time @xmath123 on input @xmath29 .",
    "for @xmath124 , let @xmath125 denote the @xmath126-tape qtm that , on input @xmath29 in tapes 1 to @xmath1 and @xmath127 in tape @xmath128 and empty elsewhere , behaves like @xmath0 on input @xmath29 except that the heads in tapes @xmath128 to @xmath129 idle in the start cells .",
    "the tape alphabets of @xmath125 for tapes 1 to @xmath1 are the same as @xmath0 s .    for convenience ,",
    "let @xmath130 denote the final superposition of @xmath0 that starts with superposition @xmath131 . in the case where @xmath131 is an initial configuration with input @xmath29 , we write @xmath132 for @xmath130 .    for any pair @xmath133 and @xmath134",
    ", @xmath135 denotes the @xmath126-tuple @xmath136 .",
    "in particular , we write @xmath137 for @xmath138 and @xmath139 for @xmath140 .    [ [ simulation - by - synchronous - machines . ] ] * simulation by synchronous machines . * + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we show how to transform any well - formed qtm into a well - formed , synchronous qtm with a single final state with the help of the information on its running time .    [",
    "lemma : final - state ] let @xmath0 be a @xmath1-tape , well - formed qtm that halts in time @xmath123 on any @xmath1-tuple input string @xmath29 .",
    "then , there exists a @xmath141-tape , well - formed , synchronous qtm @xmath119 with a single final state such that , on input @xmath142 , it halts in time @xmath143 , the last two tape heads move back to the start cells , leaving @xmath127 unchanged , and @xmath144 .",
    "if @xmath0 already has a single final state , then @xmath119 needs only @xmath128 tapes and satisfies @xmath145 .",
    "let @xmath146 be a given qtm with @xmath147 . by completeness lemma , it suffices to build a partial qtm @xmath119 that satisfies the lemma .",
    "assume that @xmath29 is given in tapes @xmath148 to @xmath1 and @xmath127 is in tape @xmath128 .",
    "tape @xmath149 is initially empty .",
    "the qtm @xmath119 simulates each step of the computation of @xmath0 using tapes @xmath148 to @xmath1 , together with stepping right in tape @xmath128 , which counts the number of steps executed by @xmath0 . when @xmath119 arrives at any final configuration of @xmath0 with final state @xmath150 , @xmath151 , at time exactly @xmath123 , @xmath119 deposits the number @xmath152 ( as a single tape symbol ) onto tape @xmath149 , freeing itself from state @xmath150 .",
    "then , @xmath119 moves its @xmath128st tape head back to the start cell in @xmath153 steps and enters its own final state @xmath154 .",
    "thus , the running time of @xmath119 is exactly @xmath143 .",
    "it is not difficult to check the well - formedness of @xmath119 using well - formedness lemma .",
    "note that the acceptance probability of @xmath0 does not change during the above simulation process .",
    "thus , @xmath155 .",
    "if @xmath0 already has a single final state @xmath154 , we modify the above procedure in the following fashion .",
    "firstly , we replace every occurrence of @xmath154 in @xmath8 by @xmath156 .",
    "secondly , we apply the above simulation procedure .",
    "thirdly , after the simulation , we force @xmath119 to enter @xmath154 as its final state exactly when the @xmath128st tape head returns to the start cell . in this case , we do not need the @xmath149nd tape at all .",
    "[ [ simulation - by - machines - with - concurrent - head - move . ] ] * simulation by machines with concurrent head move .",
    "* + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the simulation of a multi - tape qtm by a single tape qtm is a central subject in this subsection .",
    "we show that any multi - tape , well - formed qtm can be simulated by a certain well - formed , well - behaved qtm with concurrent head move .",
    "the simulation overhead here is a quadratic polynomial .",
    "this result makes it possible to simulate a multi - tape qtm by a single tape qtm with quadratic polynomial slowdown .",
    "[ prop : concurrent ] let @xmath0 be a @xmath1-tape , well - formed qtm that halts in time @xmath123 on input @xmath29 .",
    "there exists a @xmath141-tape , well - formed , well - behaved qtm @xmath119 with concurrent head move such that @xmath119 , on input @xmath29 in tapes 1 to @xmath1 and empty elsewhere , simulates @xmath0 in time @xmath157 .",
    "moreover , if @xmath0 is synchronous , dynamic , unidirectional , or normal form , so is @xmath119 . in particular ,",
    "when @xmath0 is synchronous , @xmath119 can be made stationary with extra @xmath158 steps .    given a qtm @xmath0",
    ", we construct a new qtm @xmath119 that simulates in @xmath159 steps the @xmath160th step of @xmath0 by moving its heads back and forth in all tapes concurrently and by expanding the simulation area by 2 .",
    "thus , the new qtm needs @xmath161 steps ( with an additional pre - computation of 4 steps ) to complete this simulation on input @xmath29 .",
    "let @xmath146 be a given qtm .",
    "the desired @xmath119 , starting from state @xmath162 , works as follows .",
    "initially , in four steps we mark $ in the start cell in tape @xmath149 and we set up the simulation area of three cells ( which are indexed @xmath37 , @xmath38 , @xmath148 ) in tape @xmath128 , each of which holds the record of the head position of @xmath0 .",
    "we will maintain this record in tape @xmath128 by updating a symbol @xmath163 in each cell , where @xmath164 means that the @xmath152th tape head rests in the current cell .",
    "finally , @xmath119 enters state @xmath165 , where @xmath166 .    at round @xmath160 ,",
    "@xmath167 , we simulate the @xmath160th step of the computation of @xmath0 in @xmath159 steps .",
    "we start with state @xmath168 , provided that @xmath75 is a current state of @xmath0 . moving the head rightward along all tapes toward the end of the simulation area , we collect the information on a @xmath1-tuple @xmath169 of tape symbols being scanned by @xmath0 at time @xmath160 and we then remember it by changing our internal state from @xmath168 to @xmath170 .",
    "after the head arrives at the first blank cell , by applying the transition @xmath171 , we change @xmath170 into @xmath172 if @xmath173 is non - zero . to end this simulation phase ,",
    "we update the head position marked in tape @xmath128 ( by using @xmath174 ) and tape symbols ( by using @xmath175 ) by moving the head leftward to the first blank cell in tape @xmath128 . whenever the head reaches an end of the simulation area",
    ", we expand this area by 1 by writing the symbol @xmath176 in its boundary blank cell .",
    "after the simulation phase , @xmath119 enters state @xmath177 .",
    "suppose that @xmath0 is in normal form .",
    "it is easy to verify that no well - formed qtm in normal form has more than two final state .",
    "let @xmath154 be a single final state of @xmath0 .",
    "adding the rule @xmath178 makes @xmath119 be in normal form .",
    "if @xmath119 is synchronous , then @xmath119 can use the marker $ in tape @xmath149 to move its head back to the start cell and erase $ from the tape in @xmath158 steps .",
    "this last movement forces @xmath119 to be stationary .",
    "any qtm with concurrent head move can reduce the number of tapes by merging a @xmath1-tuple of tape symbols which the head is scanning , into a single tape symbol .",
    "[ lemma : one - tape ] let @xmath179 .",
    "let @xmath0 be a @xmath1-tape , well - formed qtm with concurrent head move that , on input @xmath29 in tapes @xmath148 to @xmath180 and empty elsewhere , halts in time @xmath123 .",
    "there exists an @xmath180-tape , well - formed qtm @xmath119 such that , on input @xmath29 , halts in time @xmath123 and simulates the computation of @xmath0 on @xmath29 . if @xmath0 is dynamic , synchronous , stationary , unidirectional , or normal form , so is @xmath119 .    [",
    "[ sec : dynamic ] ] * simulation by dynamic machines . * + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    this subsection is devoted to show that any well - formed qtm can be simulated by a certain conservative qtm with quadratic polynomial slowdown .",
    "[ prop : dynamic ] let @xmath0 be a @xmath1-tape , well - formed , synchronous qtm that halts in time @xmath123 on input @xmath181 . there exists a @xmath182-tape , well - formed , stationary , synchronous , unidirectional , dynamic qtm @xmath119 such that , on input @xmath29 in tape 1 to @xmath1 and empty elsewhere , @xmath119 simulates @xmath0 in time @xmath183 .",
    "if @xmath0 has a single final state , then @xmath119 is further in normal form .",
    "the proof uses an idea of yao @xcite .",
    "let @xmath184 be a given qtm with @xmath147 .",
    "we define the desired partial @xmath119 so that it simulates the @xmath160 step of @xmath0 by a round of @xmath185 steps with all the heads moving concurrently .",
    "since @xmath0 requires @xmath123 steps , @xmath119 needs @xmath186 steps together with a pre- and post - computation of @xmath187 steps , which gives the desired running time .",
    "we first show the proposition for the special case @xmath62 .",
    "let @xmath188 be an input given in tape 1 . in the initial phase",
    ", we create in four steps the configuration @xmath189 , where @xmath190 and @xmath191 is a distinguished state of @xmath119 and symbol $ is in the cell indexed @xmath37 .",
    "to understand the simulation phase , we associate a configuration @xmath192 of @xmath0 with a certain configuration @xmath193 of @xmath119 defined in the following way .",
    "assume that @xmath194 , where @xmath0 in state @xmath195 scans symbol @xmath196 in the cell indexed @xmath1 and @xmath197 is the content of the tape .",
    "at the beginning of round @xmath160 , @xmath198 , we create the configuration @xmath193 of @xmath119 which is of the form @xmath199 , where @xmath200 is written in tape 2 with $ in the cell indexed @xmath37 ( which marks the simulation area ) and @xmath201 is identical to @xmath197 execpt that the cell indexed @xmath1 has symbol @xmath202 instead of @xmath196 .    to disregard any head direction that results from an application of @xmath8 , we treat as a single symbol the three consecutive symbols , where the head of @xmath0 scans the middle symbol .",
    "in the course of the simulation , we",
    "first search in tape @xmath203 the three consecutive symbols @xmath204 , where @xmath0 in state @xmath195 scans @xmath205 , and encode them into the single symbol @xmath206 by moving the head back and forth .",
    "we then apply @xmath8 to this symbol with stepping right .",
    "this makes @xmath119 dynamic and also unidirectional .",
    "finally , we decode the result and update the content of tape @xmath203 .    for each configuration at time @xmath160 of @xmath0 on input @xmath207 , at the end of the simulation , @xmath119 produces its associated configuration .",
    "therefore , when @xmath0 enters a final configuration at time @xmath208 , @xmath119 reaches a configuration in which a tape symbol of the form @xmath209 is found in tape 2 .",
    "when @xmath119 finds such a symbol , it enters its own final state @xmath156 in exactly @xmath123 steps .",
    "let @xmath210 be the transition function for @xmath119 .",
    "for a general case @xmath211 , let @xmath212 , @xmath213 , and @xmath214 .",
    "we first produce @xmath215 in tapes @xmath128 to @xmath182 and enters state @xmath216 with changing symbol @xmath217 in the start cell in tape @xmath152 into @xmath218 .",
    "we then define @xmath219 to be the product @xmath220 .",
    "clearly , this qtm is well - formed , stationary , and unidirectional .",
    "note that the running time of the @xmath1-tape qtm @xmath119 does not depend on the number of tapes .",
    "since @xmath0 halts at time @xmath123 , @xmath119 finally enters state @xmath221 for some @xmath1-tuple @xmath222 at time @xmath183 .    in the case where @xmath0 has a single final state @xmath154",
    ", we can add the new transition rule : @xmath223 , where @xmath224 , which makes @xmath119 be in normal form .",
    "since the proposition regards with a unidirectional qtm , it also gives an extension of unidirection lemma in @xcite to multi - tape qtms .",
    "simply combining propositions [ prop : concurrent ] and [ prop : dynamic ] and lemmas [ lemma : final - state ] and [ lemma : one - tape ] , we obtain the following corollary .    let @xmath0 be a @xmath1-tape , well - formed qtm that , on input @xmath207 in tape 1 and empty elsewhere , runs in time @xmath208 .",
    "there exist a quartic polynomial and a two - tape conservative qtm @xmath119 such that , on input @xmath225 , @xmath119 halts in time @xmath226 and satisfies @xmath227 .",
    "note that , by modifying the simulation given in the proof of proposition [ prop : concurrent ] ( with @xmath228 slowdown , where @xmath229 is any space bound of @xmath0 ) , we can achieve a much tighter @xmath230 time bound .",
    "the detail is left to the reader .",
    "[ [ reversing - a - computation . ] ] * reversing a computation . * + + + + + + + + + + + + + + + + + + + + + + + + + +    first recall definition 4.11 in @xcite that defines the notion : @xmath231 _ reverses the computation of _ @xmath232 .",
    "different from @xcite , we only assume that @xmath232 and @xmath231 are well - formed qtms ( whose tape alphabets may differ ) and that @xmath232 has a single final state .",
    "we show below that we can reverse the computation of any well - formed qtm with quadratic polynomial slowdown .",
    "[ theorem : reverse ] let @xmath0 be a @xmath1-tape , well - formed qtm with a single final state that halts in time @xmath123 on input @xmath29 . there exist a quadratic polynomial @xmath75 and a @xmath233-tape , well - formed , synchronous , dynamic qtm @xmath234 in normal form that , on input @xmath29 in tapes @xmath148 to @xmath1 and @xmath127 in tape @xmath128 and empty elsewhere , reverses the computation of @xmath235 in time @xmath236 .",
    "let @xmath237 be a well - formed qtm .",
    "by lemma [ lemma : final - state ] , we have a @xmath238-tape , well - formed , synchronous qtm @xmath232 running in time @xmath143 on input @xmath142 that satisfies @xmath239 .    by modifying the proof of proposition [ prop : dynamic ] , we can show the existence of a @xmath233-tape , well - formed , stationary , synchronous , unidirectional , dynamic qtm @xmath231 in normal form such that ( i ) @xmath231 on input @xmath142 halts in time @xmath240 , ( ii ) when @xmath231 halts , tape @xmath128 consists only of its input @xmath127 and tapes @xmath149 to @xmath241 are empty , and ( iii ) @xmath242 is identical to @xmath243 when tapes @xmath149 to @xmath241 are ignored .",
    "it is easy to extend reversal lemma in @xcite to any multi - tape qtm .",
    "let @xmath234 be the qtm ( as constructed in @xcite ) that reverses the computation of @xmath231 with extra two steps . since @xmath231 is well - formed , synchronous , and dynamic , so becomes @xmath234 because of its construction .",
    "since any final superposition of @xmath231 is identical to that of @xmath235 , the theorem follows .",
    "theorem [ theorem : reverse ] leads to the following lemma .",
    "the proof of the lemma also uses an argument similar to that of theorem 4.14 in @xcite .",
    "[ lemma : squaring](squaring lemma ) let @xmath244 .",
    "let @xmath0 be a @xmath1-tape , well - formed qtm with a single final state which , on input @xmath29 , outputs @xmath245 in the start cell of tape @xmath1 in time @xmath123 with probability @xmath246 .",
    "there exist a quadratic polynomial @xmath75 and a @xmath247-tape , well - formed , stationary , normal form qtm @xmath119 such that , on input @xmath248 , @xmath119 reaches in time @xmath236 the configuration in which @xmath119 is in a single final state with @xmath127 in tape @xmath148 , @xmath29 in tapes @xmath203 to @xmath1 , @xmath249 in tape @xmath128 , and empty elsewhere , with probability @xmath250 .",
    "let @xmath0 be a given qtm . by theorem [ theorem : reverse ]",
    ", there exists a @xmath233-tape , well - formed , synchronous , dynamic , normal form qtm @xmath234 that , on input @xmath248 , reverses the computation of @xmath235 in time @xmath240 .",
    "we define the desired qtm @xmath119 as follows .",
    "let @xmath248 be any input .",
    "starting with its initial configuration @xmath251 , @xmath119 runs @xmath235 with ignoring tape @xmath252 .",
    "consider the final superposition @xmath253 .",
    "when @xmath235 halts , @xmath119 copies the content of the start cell in the output tape into tape @xmath252 in two extra steps . now we have the superposition @xmath254 , where @xmath255 is the content of tape @xmath252 and @xmath256 ranges over all configurations excluding the status of tape @xmath252 .",
    "next , @xmath119 runs @xmath234 starting with @xmath131 with ignoring tape @xmath252 .",
    "note that @xmath257 for the superposition @xmath258 .    by a simple calculation",
    ", we have @xmath259 , which equals @xmath246 since @xmath260 outputs @xmath249 with probability @xmath246 .    since @xmath234 preserves the inner product , @xmath261 , which is the amplitude in @xmath262 of @xmath263 .",
    "thus , the squared magnitude of amplitude of @xmath263 is exactly @xmath250 .    [ [ sec : timing ] ] * timing problem . *",
    "+ + + + + + + + + + + + + + + + +    let @xmath237 be a @xmath1-tape , partial , well - formed , normal form qtm .",
    "we assume that any computation path of @xmath0 on input @xmath29 is completely determined by @xmath8 and ends with final state @xmath154 and that the length of any computation path of @xmath0 on @xmath207 does not exceed @xmath123 .",
    "we modify @xmath8 by forcing @xmath264 to be @xmath265 for any @xmath266 and let @xmath267 denote this modified @xmath8 .",
    "this @xmath268 makes @xmath0 halt within time @xmath123 . for clarity ,",
    "let @xmath269 be the qtm defined by @xmath268 .",
    "although @xmath269 may not be well - formed , when the final superposition has unit @xmath33-norm , we can still consider the acceptance probability of @xmath269 as before .",
    "can we simulate @xmath269 on a well - formed qtm ?    for convenience ,",
    "we say that @xmath0 is _ well - structured _ if ( 1 ) it is well - formed , ( 2 ) any computation path of @xmath0 on input @xmath207 is completely determined by @xmath8 and ends with a single final state , and ( 3 ) any final superposition of @xmath269 on each input has unit @xmath33-norm . for simplicity , we write @xmath34 to denote the acceptance probability of @xmath269 on input @xmath29 .",
    "[ lemma : timing ] let @xmath0 be a @xmath1-tape , well - structured , partial qtm in normal form such that the length of any computation path of @xmath0 on each input @xmath29 is less than @xmath123 .",
    "there exists a @xmath270-tape , well - formed qtm @xmath119 such that , on input @xmath29 in tapes @xmath148 to @xmath1 and @xmath127 in tape @xmath128 and empty elsewhere , it halts in time @xmath240 and satisfies @xmath271 .",
    "let @xmath0 be a given qtm .",
    "we first construct a well - formed qtm @xmath232 running in time @xmath240 on input @xmath142 such that the probability that @xmath0 halts in an accepting configuration in which tape @xmath149 consists only of symbols @xmath272 , is @xmath273 .",
    "we produce in tape @xmath274 the `` reversed '' binary representation of @xmath123 in exactly @xmath275 steps . using this representation , we produce @xmath276 bit zeros ( following control bit @xmath148 ) in tape @xmath149 .",
    "we simulate @xmath0 s move by incrementing two _ counters_.",
    "the first counter is in tape @xmath128 , of unary form , and the second one is a binary counter in tape @xmath149 . at each round of simulating a single step of @xmath0",
    ", @xmath232 also increments the unary counter by stepping right and increments the binary one ( using control bit @xmath148 ) in exactly @xmath277 steps .",
    "when @xmath0 terminates , @xmath232 keeps incrementing the unary counter but idles on the binary counter for each @xmath277 steps ( using control bit @xmath38 in tape @xmath149 for reversibility ) .    \\3 .",
    "after @xmath123 rounds , we apply a hadamard transform , with stepping right , to the content of the binary counter except its control bit ( , @xmath278 , where @xmath279 is in tape @xmath149 ) .",
    "since the length of this counter is @xmath280 , we can observe symbols @xmath281 in tape @xmath149 with amplitude @xmath282 .",
    "hence , the probability that @xmath0 reaches an accepting configuration with @xmath272 in tape @xmath149 is @xmath283 .",
    "we design @xmath119 so that the heads in tapes @xmath128 to @xmath274 return to the start cells ( using @xmath127 in tape @xmath128 ) and the rest of heads stay in the same cells as @xmath0 s .",
    "it is easy to see that @xmath232 is in normal form if we add the rule : @xmath284 .",
    "moreover , if @xmath0 is stationary , @xmath232 is also stationary .    for the desired machine @xmath119 , we design it to accept input @xmath142 exactly when @xmath232 reaches an accepting configuration with @xmath272 written in tape @xmath149 .",
    "it thus follows that @xmath285 .",
    "lemma [ lemma : timing ] solves the timing problem for any quantum complexity class whose acceptance criteria is invariant to a polynomial fraction of acceptance probability .",
    "unlike the previous sections , we will focus on an oracle qtm , which is a natural extension of a classical oracle tm with the help of a set of oracles .",
    "formally , we define a @xmath126-tape _ oracle qtm @xmath0 with @xmath180 query tapes _ to be a septuple @xmath286 , where @xmath5 includes @xmath287 , a set of pre - query states , and @xmath288 , a set of post - query states , and the transition function @xmath8 is defined only on @xmath289 .",
    "we assume the reader s familiarity with an _",
    "oracle query_. for its definition , see @xcite .",
    "conventionally , we assume that every alphabet @xmath290 , @xmath151 , includes binary bits @xmath291 .",
    "let @xmath292 be a series of oracles such that each @xmath293 is a subset of @xmath294 .",
    "note that query states @xmath295 and @xmath296 correspond only to the @xmath152th query tape and the @xmath152th oracle @xmath293 .",
    "we can reduce the number of query tapes by combining a given set of oracles into a single oracle together with copying a query word written in one of query tapes into a single query tape .",
    "when we copy a query word @xmath297 from the @xmath152th query tape , we pad the suffix @xmath298 ( between @xmath256 and @xmath299 ) to make the copying process reversible .",
    "[ lemma : number - states ] let @xmath300 .",
    "let @xmath0 be a @xmath126-tape , well - formed , oracle qtm with @xmath180 query tapes that halts in time @xmath123 on input @xmath181 .",
    "let @xmath292 be a series of oracles .",
    "there exists a @xmath301-tape , well - formed , oracle qtm @xmath119 with a single query tape such that , on input @xmath142 , halts in time @xmath302 and @xmath303 , where @xmath304 .",
    "let @xmath0 be a given qtm . at the end of each round , in which a new qtm @xmath119 simulates a single step of the computation of @xmath0 , we force @xmath119 to make a query ( of the form @xmath305 ) in 6 steps if @xmath0 does not query .",
    "when @xmath0 invokes an oracle query , we force @xmath119 to idle for 6 steps instead of making a query of @xmath305 .",
    "this proves the lemma below .",
    "[ lemma : query - number ] let @xmath0 be a @xmath238-tape , well - formed , oracle qtm in normal form with a single query tape that halts in time @xmath123d , on input @xmath181 .",
    "let @xmath306 be an oracle .",
    "there exist a @xmath141-tape , well - formed , oracle qtm @xmath119 with two query tapes running in time @xmath307 on input @xmath29 such that @xmath119 makes exactly @xmath123 queries along each computation path and @xmath308 .",
    "[ lemma : query - length ] let @xmath0 be a @xmath238-tape , well - formed , oracle qtm in normal form with a single query tape that halts in time @xmath123 on input @xmath181 .",
    "let @xmath306 be an oracle set .",
    "there exists a @xmath270-tape , well - formed , oracle qtm @xmath119 such that , for every input @xmath142 , it halts in time @xmath312 , the length of any query word is exactly @xmath313 on any computation path , and it satisfies @xmath314 , where @xmath315 ."
  ],
  "abstract_text": [
    "<S> the notion of quantum turing machines is a basis of quantum complexity theory . </S>",
    "<S> we discuss a general model of multi - tape , multi - head quantum turing machines with multi final states that also allow tape heads to stay still .    to appear in the proceedings + of the 24th international symposium + on mathematical foundations + of computer science , september , 1999 +    a foundation of + programming a multi - tape quantum turing machine +   + tomoyuki yamakami + department of computer science + princeton university + 35 olden street , princeton , nj 08544 </S>"
  ]
}
{
  "article_text": [
    "distributed control of networked cooperative multiagent systems has received much attention in recent years due to the rapid advances in computing and communication technologies .",
    "examples include agreement or consensus problems@xcite , in which a group of agents seek to agree upon certain quantities of interest , formation control of robots and vehicles@xcite , and distributed estimation@xcite , etc .    in these applications ,",
    "an important aspect is to determine the controller actuation schemes .",
    "although continuous feedback of states have always been used in early implementations of distributed control , it is not suitable for agents equipped with embedded microprocessors that have very limited resources to transmit and gather information . to overcome this difficulty ,",
    "event - triggered control scheme@xcite was proposed to reduce the controller updates .",
    "in fact , event - driven strategies for multi - agent systems can be viewed as a linearization and discretization process , which was considered and investigated in early papers @xcite .",
    "for example , in the paper @xcite , following algorithm was investigated @xmath0 which can be considered as nonlinear consensus algorithm .",
    "in particular , let @xmath1 and @xmath2 .",
    "then ( [ cml ] ) becomes @xmath3 which is some variant of the event triggering ( distributed , self triggered ) model for consensus problem .",
    "in centralized control , the bound for @xmath4 to reach synchronization was given in the paper @xcite when the coupling graph is indirected and in @xcite for the directed coupling graph .",
    "the key point in event - triggered algorithm is the design of a decision maker that determines when the next actuator update should occur .",
    "the existing event - triggered algorithms are all based on the observation of states .",
    "for example , in a typical event - triggered algorithm proposed in @xcite , an update is triggered when a certain error of the states becomes large enough with respect to the norm of the state , which requires a continuous observation of the states .",
    "in addition , self - triggered control@xcite has been proposed as a natural extension of event - triggered control , in which each agent predicts its next update time based on discontinuous state observation to further reduce resource usage for the control systems .",
    "both the event - triggered and self - triggered control algorithms that have been proposed till now have some drawbacks in common .",
    "first , the resulting system in event - triggered control is one that with system delays , especially with self delays , which generally is difficult to handle . and",
    "the existing analysis for such algorithms are always based on some quadratic lyapunov function , which has very strict restrictions on the network structure .",
    "for example , to the best of our knowledge , the latest analysis is still restricted to static networks .",
    "second , since these algorithms are based on the observation of states , which are generally much complicated and untraceable , making it difficult to predict and exclude some unexpected possibilities such as the occurrence of zero inter - execution times .",
    "to overcome such difficulties , we proposed a new kind of self - triggered consensus algorithms that are structure - based .",
    "that is , each agent predicts its next update time based on its coupling structure with its neighbours instead of the observation of their states .",
    "this can bring several advantages .",
    "first , since the coupling structure is relatively simpler and more traceable than the states , it is relatively easier to handle .",
    "actually , in our algorithm , the occurrence of zero inter - execution time has been excluded by directly providing a positive lower bound on the update intervals .",
    "second , although the resulting system of the self - triggered algorithm is one with self delays , by some proper transformation , we showed that the system can corresponding to a discrete - time system without self - delays .",
    "we have proposed the algorithm in both centralized and distributed approaches . in the centralized approach",
    ", the system can be directly related to a discrete - time system without delays , which can be seen as a discrete version of the nominal system . however , in the distributed approach , the situation is much more complicated and the system can not be directly transformed into its discretized version .",
    "however , by some proper indirect transformation , we showed that the convergence of the nominal system can be reduced to that of a discrete - time consensus algorithm with off - diagonal delays but without self delays .",
    "thus , other than using a quadratic lyapunov function , the convergence of the original algorithm can be solved by the analysis of a discrete - time consensus algorithm .",
    "this brings another possibility that is also considered as a big advantage and a major contribution of this work .",
    "that is , we can analyze networks with switching topologies , especially stochastically switching topologies .",
    "the rest of the paper is organized as follows : section [ secpreliminaries ] provides some preliminaries on matrix and graph theory that will be used in the main text .",
    "section [ secselftriggered ] provides the self - triggered consensus algorithm in both centralized and distributed approach with convergence analysis .",
    "section [ secsimulation ] provide an example with numerical simulation to illustrate the theoretical results obtained in the previous section .",
    "the paper is concluded in section [ secconclusion ] .",
    "in this section , we present some definitions and results in matrix and graph theories and probability theories that will be used later .    for a matrix",
    "@xmath5 $ ] , @xmath6 represents the entry of @xmath7 on the @xmath8th row and @xmath9th column , which is sometimes also denoted as @xmath10_{ij}$ ] .",
    "a matrix @xmath5 $ ] is called a _ nonnegative matrix _ if @xmath11 for all @xmath8 , @xmath9 . and",
    "@xmath7 is called a _",
    "stochastic matrix _ if @xmath7 is square and @xmath12 for each @xmath8 .",
    "given a nonnegative matrix @xmath7 and @xmath13 , the _",
    "@xmath14-matrix _ of @xmath7 is a matrix that has nonzero entries only in the place that @xmath7 has entries equal to or greater than @xmath14 . for two matrix @xmath7 , @xmath15 of the same dimension",
    ", we write @xmath16 if @xmath17 is a nonnegative matrix . throughout this paper",
    ", we use @xmath18 to denote the left product of matrices .    a _ directed graph _",
    "@xmath19 is defined by its vertex set @xmath20 and edge set @xmath21 , where an edge is an ordered pair of vertices in @xmath22 .",
    "if @xmath23 , then @xmath24 is called the _ ( in-)neighbour _ of @xmath25 .",
    "@xmath26 is the set of neighbours of agent @xmath8 . a _ directed path _ in @xmath19 is an ordered sequence of vertices @xmath27 , @xmath28 , @xmath29 such that @xmath30 for @xmath31 .",
    "a _ directed tree _ is a directed graph where every vertex has exactly one in - neighbour except one , called the _ root _ , without any in - neighbour .",
    "and there exists a directed path from the root to any other vertex of the graph .",
    "a subgraph of @xmath19 is a directed graph @xmath32 satisfying @xmath33 , and @xmath34 .",
    "a _ spanning subgraph _ of @xmath19 is a subgraph of @xmath19 that has the same vertex set with @xmath19 .",
    "we say @xmath19 has a _ spanning tree _ if @xmath19 has a spanning subgraph that is a tree .",
    "a _ weighted directed graph _ is a directed graph where each edge is equipped with a weight .",
    "thus , a graph @xmath19 of @xmath35 vertices corresponds to an @xmath36 nonnegative matrix @xmath5 $ ] , called the _ weight matrix _ in such way that @xmath37 if and only if @xmath38 .",
    "on the other hand , given an @xmath36 nonnegative matrix @xmath7 , it corresponds to a weighted directed graph @xmath39 such that @xmath39 has @xmath7 as its weight matrix . using this correspondence",
    ", we can introduce the concept of @xmath14-graph .",
    "the _ @xmath14-graph _ of @xmath19 is a weighted directed graph that has the @xmath14-matrix of @xmath19 s weight matrix as its weight matrix .",
    "a graph @xmath19 has a _",
    "@xmath14 spanning tree _ if its @xmath14-graph has a spanning tree .    from the weight matrix",
    "@xmath5 $ ] of a graph @xmath19 , we define its graph laplacian @xmath40 $ ] as follows : @xmath41 thus @xmath42 has zero row sum with @xmath43 while @xmath44 for @xmath45 and @xmath46 .",
    "and the nonnegative linear combination of several graph laplacians is also a graph laplacian of some graph .",
    "there is a one - to - one correspondence between a graph and its weight matrix or its laplacian matrix . in the following , for the sake of simplicity in presentation ,",
    "sometimes we do nt explicitly distinguish a graph from its weight matrix or laplacian matrix , i.e. , when we say a matrix has some property that is usually associated with a graph , what we mean is that property is held by the graph corresponding to this matrix .",
    "for example , when we say a nonnegative matrix @xmath7 has a spanning tree , what we mean is that the graph of @xmath7 has a spanning tree . and",
    "it is of similar meaning when we say that a graph has some property that is usually associated with a matrix .",
    "let @xmath47 be a probability space , where @xmath48 is the sample space , @xmath49 is @xmath50-algebra on @xmath48 , and @xmath51 is the probability on @xmath49 .",
    "we use @xmath52 to denote the mathematical expectation and @xmath53 the conditional expectation with respect to @xmath49 , i.e. , @xmath53 is a random variable that is measurable with respect to @xmath49 .    let @xmath54 be a stochastic process defined on the basic probability space @xmath55 , and let @xmath56 be a filtration , i.e. , a sequence of nondecreasing sub-@xmath50-algebras of @xmath49 . if @xmath57 is measurable with respect to @xmath58 , then the sequence @xmath59 is called an adapted process / sequence .    for example , let @xmath60 be a random variable defined on @xmath48 , then @xmath61 is an adapted sequence .",
    "in a network of @xmath35 agents , with @xmath62 being the state of agent @xmath8 , we assume that each agent s dynamics obey a single integrator model @xmath63 where @xmath64 is the control law for agent @xmath8 at time @xmath65 . in consensus algorithm ,",
    "the control law is usually given by(@xcite ) @xmath66    = -\\sum_{j=1}^{n}l_{ij}[x_{j}(t)-x_{i}(t)].\\end{aligned}\\ ] ] thus the consensus algorithm can be written as @xmath67,\\end{aligned}\\ ] ] or in matrix form as @xmath68 where @xmath69^{\\top}\\in \\mathbb{r}^{n}$ ] is the stack vector of the agents states . in event / self - triggered control ,",
    "the control law @xmath70 is piecewise constant , i.e. , @xmath71 where @xmath72 is the time sequence that an update of @xmath73 occurs .",
    "the central point of such algorithm is the choice of appropriate @xmath72 such that some desired properties of the algorithm such as stability and convergence can be preserved .",
    "this can be done in a centralized approach or a distributed approach , both of which will be discussed in the following .      in this subsection ,",
    "we first consider centralized self - triggered consensus algorithm . the sequence of the update time is denoted by : @xmath74 , then the self - triggered algorithm has the form : @xmath75    denote @xmath76 for @xmath77 .",
    "we have the following theorem .    [ thmcentralfixed ]",
    "if the graph @xmath78 has a spanning tree and there exists @xmath79 such that @xmath80 for each @xmath81 , where @xmath82 , then the algorithm will achieve consensus asymptotically .    from the algorithm , for each",
    "@xmath83 $ ] , since @xmath84 we have @xmath85x(t_{k}).\\ ] ] particularly , let @xmath86 , we have @xmath87 where @xmath88 .",
    "it is easy to verify that @xmath57 is a stochastic matrix for each @xmath81 .",
    "in fact , since @xmath80 , @xmath89_{ii}=1-\\delta t_{k}l_{ii}\\ge 1-\\delta t_{k}l_{\\max}\\ge 1-\\frac{1-\\delta}{l_{\\max}}l_{\\max}=\\delta.\\ ] ] for @xmath46 , @xmath89_{ij}=-\\delta t_{k } l_{ij}\\ge 0.\\ ] ] it implies that @xmath90_{ij}$ ] is positive if and only if @xmath91 is positive , and the positive elements of @xmath90 $ ] is uniformly lower bounded by a positive scalar since both @xmath92 and @xmath91 is uniformly lower bounded by a positive scalar .",
    "furthermore , @xmath93_{ij}=1-\\delta t_{k}\\sum_{j=1}^{n}l_{ij}=1.$ ] by a standard argument from the theory of products of stochastic matrices , there exists @xmath94 such that @xmath95 on the other hand , it is not difficult to verify that the function @xmath96 is nonincreasing and @xmath97 is nondecreasing . thus , @xmath98    using a similar argument as that in theorem [ thmcentralfixed ] , it is not difficult to propose a centralized event - triggered algorithm on networks with stochastic switching topologies .",
    "for example , consider the following consensus algorithm : @xmath99 where @xmath100 $ ] is uniformly bounded in @xmath81 and @xmath101 $ ] for some @xmath102 .",
    "before provide the next theorem , we first summarize the following assumption .",
    "[ assumcentralswitching ]    1 .",
    "there exists @xmath79 such that @xmath103 $ ] ; 2 .",
    "@xmath104 is an adapted random sequence , and there exists @xmath105 , @xmath106 such that the graph corresponding to the conditional expectation @xmath107 has a @xmath108-spanning tree ;    now we have    under assumption[assumcentralswitching ] , the self - triggered consensus algorithm will reach consensus almost surely .",
    "similar as in the proof of theorem [ thmcentralfixed ] , we have @xmath109 with @xmath110 . since @xmath111 is a deterministic sequence , @xmath59 is also an adapted sequence , and @xmath112 where @xmath113_{ij}=[l^{m}]_{ij}$ ] for @xmath46 and @xmath114_{ii}=0 $ ] for all @xmath8 .",
    "thus , @xmath115 has a @xmath116-spanning tree with @xmath117 . from theorem 3.1 of @xcite",
    ", the sequence @xmath118 will reach consensus almost surely , thus @xmath119 will also reach consensus almost surely .    as corollaries in special cases",
    ", it can be shown that almost sure consensus still holds if we replace item ( ii ) in assumption [ assumcentralswitching ] with one of the following more special ones .    1",
    ".   @xmath120 is an independent and identically distributed sequence , and there exists @xmath106 such that the graph corresponding to the expectation @xmath121 has a @xmath108-spanning tree ; 2 .",
    "@xmath120 is a homogenous markov chain with a stationary distribution @xmath122 , and there exists @xmath106 such that the graph corresponding to the expectation with respect to @xmath122 , @xmath123 , has a @xmath108-spanning tree ;      in this section , we discuss the distributed event - triggered consensus algorithm .",
    "let @xmath124 be the time sequence such that @xmath125 is the @xmath81th time that agent @xmath8 updates its control law .",
    "then the distributed self - triggered algorithm has the following form : @xmath126 where @xmath127 .    denote @xmath128 .",
    "then we have the following theorem .",
    "[ thmdistributedfixtopology ] if the graph @xmath78 has a spanning tree and there exists @xmath129 for @xmath130 such that @xmath131 $ ] , then the distributed event triggered algorithm can reach a consensus as @xmath132 .    the proof will be divided into two steps corresponding to two lemmas .",
    "now we give and prove the first lemma .",
    "if there exists @xmath94 such that @xmath133 then the distributed event - triggered algorithm will reach a consensus , i.e. , @xmath134    by the definition of the algorithm , for agent @xmath8 , @xmath135.\\ ] ] since @xmath136 @xmath137 thus , @xmath138}|\\dot{x}_{i}(s)|+\\lim_{t\\to\\infty}|x_{i}(t_{i}^{k_{i}(t)})-x^{*}|\\\\ & \\le & \\frac{1-\\delta_{i}}{l_{ii}}\\lim_{t\\to\\infty}\\max_{s\\in [ t_{i}^{k_{i}(t)},t]}|\\dot{x}_{i}(s)|+\\lim_{t\\to\\infty}|x_{i}(t_{i}^{k_{i}(t)})-x^{*}|\\\\ & = & 0.\\end{aligned}\\ ] ]    now we are to provide and prove the second lemma .    under the assumption in theorem [ thmdistributedfixtopology ] ,",
    "there exists @xmath139 such that @xmath140    let @xmath72 be the time sequence that the @xmath81th update occurred in the network , i.e. , @xmath141 , and @xmath76 . in case for that @xmath142 for some some @xmath81 , @xmath143 , @xmath144 and @xmath46",
    ", we consider the update of agent @xmath8 and @xmath9 at time @xmath145 as one update of the network . now , construct an auxiliary sequence @xmath146 , where @xmath147^{\\top}\\in \\mathbb{r}^{n}$ ] with @xmath148 , i.e. , @xmath149 is the latest state that agent @xmath8 uses in its control law at time @xmath145 .",
    "now consider the evolution of @xmath146 .    1 .",
    "agent @xmath8 does not update at time @xmath150 : in this case , by definition , @xmath151 2 .",
    "agent @xmath8 does update at time @xmath150 : in this case , @xmath152 , assume @xmath153 be the last update of agent @xmath8 before @xmath150 , with @xmath154 being the number of updates occur at all other agents @xmath155 , @xmath156 , between the two successive updates of agent @xmath8 , i.e. , in the interval @xmath157 . by definition @xmath158 , and @xmath159 for @xmath160 for all @xmath143 . since @xmath161 , + @xmath162 + where @xmath163 , @xmath164 for @xmath165 and @xmath166 .",
    "it is easy to verify that @xmath167 , @xmath168 , and @xmath169 besides , by the assumption @xmath170 for each @xmath8 , @xmath81 , it is clear that in the interval @xmath171 $ ] , only finite updates occur for agents @xmath155 with @xmath156 , and the number of updates is uniformly upper bounded , i.e. , there exists @xmath172 independent of @xmath8 , @xmath81 , such that @xmath173 . for example , let @xmath174 , and @xmath175 , then @xmath176 for all @xmath8 , @xmath81 , and on each time interval of length @xmath177 , at most @xmath178 updates occur for each agent .",
    "let @xmath179 be the smallest positive integer satisfying @xmath180 , then on each time interval of length @xmath181 , at most @xmath182 updates occur for each agent .",
    "thus on the interval @xmath183 , at most @xmath184 updates occur for all agents @xmath9 with @xmath46 .",
    "pick @xmath185 , then @xmath173 for all @xmath8 , @xmath81 .",
    "if agent @xmath8 does not update at time @xmath150 , i.e. , case 1 , we define @xmath186 for all @xmath187 and @xmath45 except for @xmath188 ,    if agent @xmath8 updates at time @xmath150 , i.e. , case 2 , we define @xmath186 for all @xmath45 and @xmath189 when @xmath190 .    for both cases",
    ", we can give a uniform iterative formula for @xmath191 as : @xmath192 where @xmath193 for all @xmath194 , and @xmath195 for all @xmath8 , @xmath81 .",
    "denote @xmath196 , we have @xmath197 for all @xmath8 , @xmath81 .",
    "construct a new matrix @xmath198 $ ] , where @xmath199 and @xmath200    obviously , @xmath201 , and @xmath202 if agent @xmath8 updates at time @xmath150 .",
    "if there exists @xmath105 such that on each interval @xmath203 $ ] all agents update at least once , then @xmath204 for each @xmath81 . since @xmath78 has a spanning tree , there exists @xmath106 such that @xmath205 has a @xmath108-spanning tree for each @xmath81 . from corollary [ corollaryappendixdeterministic ] in the appendix ,",
    "the sequence @xmath146 will reach a consensus , i.e. , there exists @xmath94 such that @xmath206 this is equivalent to @xmath140 at last , we give some hint on how to calculate the quantity @xmath207 mentioned above .",
    "it is easy to see that each agent updates at least once on each time interval of length @xmath181 , since @xmath208 for all @xmath8 , @xmath81 . and in each time interval of length @xmath181 , there are at most @xmath209 updates of all the agents , where @xmath179 is defined as before .",
    "pick @xmath210 , then for each @xmath81 , each agent updates at least once in the time interval @xmath203 $ ] .",
    "it is not difficult to see that this algorithm is applicable to leader - follower networks , in which the leader receives no information from others .",
    "for example , if agent @xmath8 is the leader , then @xmath211 and the update time interval @xmath212 by definition , which mean the leader @xmath8 does not need to update its state . generally , if agent @xmath8 wants a long update time interval , all it needs to do is to choose small coupling weights so that @xmath213 is small , and this can be done independent of all other agents .    from the above analysis , it is not difficult to see that the distributed event - triggered algorithm can also be applied to networks with switching topologies .",
    "for example , at each update time @xmath125 , agent @xmath8 may reset its coupling weights @xmath214 such that the algorithm can be written in the form : @xmath215 where @xmath216",
    ". one of the great advantage of this algorithm is that each agent can adjust its update time interval independently based on its own need .",
    "if agent @xmath8 wants a longer update time interval , then it may decrease the coupling weight , otherwise , increase the coupling weight .",
    "for example , each agent @xmath8 may store a scaling factor @xmath217 such that @xmath218 by a similar analysis as in the case of fixed topology , we can prove    suppose that @xmath219 and @xmath220 are two positive number satisfying @xmath221 and for all @xmath8 , @xmath81 , @xmath222 .",
    "if the graph @xmath78 has a spanning tree , then the distributed event - triggered consensus algorithm with switching topology and weight updating rule can reach consensus as @xmath132 .",
    "finally , we investigate event - triggered consensus algorithm in networks with stochastically switching topologies in which each agent @xmath8 updates its coupling weights independently at the same time it updates its state .    given @xmath223 , and let @xmath224:~s_{i}\\in [ a , b ] , s_{j}\\le 0 , j\\ne i , \\sum_{j=1}^{n}s_{j}=0\\}$ ] .",
    "the event - triggered algorithm can be formulated as follows : @xmath225 where @xmath226\\in s_{i}(a_{i},b_{i})$ ] for some given @xmath227 , and @xmath228 is an independent and identically distributed sequence . before stating the convergence result , we summarize the following assumption .",
    "[ assumdistributediidswitching ]    1 .",
    "there exist @xmath129 such that @xmath229 $ ] ; 2 .",
    "there exists @xmath13 such that the graph with laplacian being @xmath230 has a @xmath14-spanning tree , where @xmath231^{\\top}$ ] is a matrix with its @xmath8th row being @xmath232 ;    [ thmdistributediidswitching ] under assumption [ assumdistributediidswitching ] , the event - triggered consensus algorithm will reach a consensus almost surely .",
    "the algorithm can be reformulated as :    @xmath233    where @xmath234 .",
    "let @xmath100 $ ] , then generally the sequence @xmath120 is not an independent sequence since for each @xmath81 , @xmath235 if no update of agent @xmath8 occurs at time @xmath150 .",
    "however , similar to the analysis given above , it can be seen that @xmath236 is independent of @xmath237 for @xmath238 , where @xmath239 and @xmath179 is the smallest positive integer satisfying @xmath240 .",
    "similarly , we have @xmath241 where @xmath193 for all @xmath194 , and @xmath242 for all @xmath8 , @xmath81 . since @xmath243",
    ", we can see that @xmath244 are independent of @xmath245 , when @xmath246 .",
    "on the other hand , in each time interval @xmath247 , each agent there at least updates once .",
    "thus we have @xmath248 where @xmath249 is defined as before and @xmath250 , and @xmath251_{ij}=-[\\operatorname{\\mathbb{e}}\\tilde{l}^{k}]_{ij}$ ] for @xmath46 and @xmath251_{ii}=0 $ ] for all @xmath8 .",
    "this implies that @xmath252 has a @xmath116-spanning tree with @xmath253 .",
    "the conclusion follows from corollary [ corollaryappendixindependent ] in the appendix .",
    "in this section , we provide an example to illustrate the theoretical results in the previous section .",
    "we use the distributed event - triggered algorithm in networks with stochastically switching topologies as considered in theorem [ thmdistributediidswitching ] .    consider a network of four agents with @xmath254 , [ 1,0 , 0,-1]\\ } , \\\\ & \\tilde{l}_{2}^{k}=\\{[-1,1,0,0 ] , [ 0,1,-1,0]\\},\\\\ & \\tilde{l}_{3}^{k}\\in \\{[0,-1,1,0 ] , [ 0,0,1,-1]\\},\\\\ & \\tilde{l}_{4}^{k}\\in \\{[0,-1,0,1 ] , [ 0,0,-1,1]\\},\\end{aligned}\\ ] ] and each agent selects its coupling weights using a uniform distribution . we choose @xmath255 for all the agents . the next update time is randomly chosen from the permissible range .",
    "it is not difficult to verify that the conditions in theorem [ thmdistributediidswitching ] are satisfied .",
    "the simulation results are provided in fig .",
    "[ figiidswitching ] with the initial value of the four agents being randomly chosen .",
    "it can be seen that the agents actually reached consensus .",
    "in this paper , we proposed a new structure - based self - triggered consensus algorithm in both centralized approach and distributed approach . different from existing works that used a quadratic lyapunov function as the analysis tool ,",
    "we reduce the self - triggered consensus algorithm to a discrete - time consensus algorithm by some proper transformation , which enables the application of the product theory of stochastic matrices to the convergence analysis .",
    "compared to existing work , our method provides several advantages .",
    "first , each agent does not need to calculate the system error to determine its update time .",
    "second , it provides explicit positive lower and upper bounds for the update interval of each agent based on its coupling weights , which can be adjusted by each agent independent of other agents .",
    "we also used our method to investigate networks with switching topologies , especially networks with stochastically switching topologies .",
    "our work reveals that the event / self - triggered algorithms are essentially discrete and thus more suitable to a discrete analysis framework .",
    "and it is predictable that more results can be obtained for self - triggered algorithms under our new analysis framework in the future .",
    "the appendix is devoted to the discussion of discrete - time consensus algorithms in networks of multi - agents with time delays based on the product theory of stochastic matrices and provide some results that is used in the main text .",
    "a nonnegative matrix @xmath7 is called a _",
    "stochastic indecomposable and aperiodic ( sia ) _ if it is a stochastic matrix and there exists a column vector @xmath256 such that @xmath257 , where @xmath258 is an @xmath35-dimensional column vector with all entries @xmath259 .",
    "a sequence of stochastic matrices @xmath54 is _ ergodic _ if there exists a column vector @xmath256 such that @xmath260 .",
    "@xmath7 is called _",
    "@xmath14-sia _ if its @xmath14-matrix is sia .",
    "a stochastic matrix @xmath7 is called _ scrambling _ if for any pair ( @xmath8 , @xmath9 ) , there exists an index @xmath81 such that both @xmath261 and @xmath262 .",
    "similarly , @xmath7 is called _ @xmath14-scrambling _ if its @xmath14-matrix is scrambling . for a matrix @xmath7 , @xmath263 refers to the diagonal matrix formed by the diagonal elements of @xmath7 , i.e. , @xmath264_{ii}=[a]_{ii}$ ] for all @xmath8 and @xmath264_{ij}=0 $ ] for @xmath46 .",
    "and we define @xmath265 .",
    "we use @xmath266 to denote the conditional probability with respect to @xmath49 on a probability space @xmath267 , which can also be expressed into the conditional expectation of an indicator function , i.e. , @xmath268 , where @xmath269 is an indicator function which is defined as @xmath270 thus , @xmath266 is also a random variable that is measurable with respect to @xmath49",
    ".      let @xmath5 $ ] be an @xmath36 stochastic matrix .",
    "define @xmath271 it can be seen that @xmath272 measures how different the rows of @xmath7 are .",
    "@xmath273 if and only if the rows of @xmath7 are identical .",
    "define @xmath274        [ remergodicityofproducts ] from lemma [ lemcontractionofproduct ] , it can be seen that for a sequence of stochastic matrices @xmath54 , if there exists a sequence @xmath281 such that @xmath282 , @xmath283 , and @xmath284 , then @xmath285 , i.e. , @xmath54 is ergodic .",
    "particularly , from the property of scrablingness , if there exists @xmath13 such that there are infinite matrices in the sequence @xmath286 that are @xmath14-scrambling , then @xmath54 is ergodic .",
    "@xcite[lemsiatoscrambling ] let @xmath277 , @xmath278 , @xmath28 , @xmath57 ( repetitions permitted ) be @xmath287 sia matrices with the property that for any @xmath288 , @xmath289 is sia .",
    "if @xmath290 , then @xmath291 is a scrambling matrix . here",
    "@xmath292 is the number of different types of all @xmath287 stochastic matrices .",
    "@xcite[lemhighdimensionspanningtree ] let @xmath277 , @xmath28 , @xmath293 be @xmath36 nonnegative matrices , let @xmath294_{mn\\times mn},\\end{aligned}\\ ] ] let @xmath295_{mn\\times mn},\\end{aligned}\\ ] ] and let @xmath296 for any @xmath297 .",
    "then if @xmath298 contains a spanning tree , then @xmath299 contains a spanning tree with the property that the root vertex of the spanning tree has a self - loop in @xmath299 .",
    "if the condition is @xmath298 has a @xmath14-spanning tree for some @xmath13 , then the conclusion becomes that @xmath299 has a @xmath108-spanning tree whose root vertex has a self - loop , where @xmath303 .",
    "@xcite[lemspanningtreetosia ] let @xmath7 be a stochastic matrix .",
    "if @xmath39 contains a spanning tree with the property that the root vertex of the spanning tree has a self - loop in @xmath39 , then a is sia .",
    "[ lemprodhighdimensionspanningtree ] let @xmath304 , @xmath28 , @xmath305 , @xmath306 be @xmath36 nonnegative matrices .",
    "let @xmath307_{mn\\times mn},\\end{aligned}\\ ] ] and @xmath308 being defined as in lemma [ lemhighdimensionspanningtree ]",
    ". then if @xmath309 has a @xmath14-spanning tree for some @xmath13 , then the product @xmath310 has a @xmath108-spanning tree for some @xmath311 . and",
    "the root of the spanning tree has a self - loop , thus @xmath310 is @xmath108-sia .",
    "[ remprodhighdimensionspanningtree ] it is obvious from lemma [ lemhighdimensionspanningtree ] that if there exists @xmath312 such that @xmath313 , then @xmath314 is @xmath108-sia for some @xmath311 .",
    "this is the case that will appear in the proof of theorem [ thmappendixmain ] .",
    "first , we have @xmath315 where the second inequality is due to the fact that @xmath316 for any @xmath317 . and",
    "it is not difficult to verify that the first block row sum of @xmath318 is preserved in @xmath319 for @xmath306 .",
    "thus the first block row sum of @xmath320 equals that of @xmath321 , i.e. , @xmath322 .",
    "this means @xmath323 has a @xmath14-spanning tree . from lemma [ lemhighdimensionspanningtree ]",
    ", @xmath324 has a @xmath108-spanning tree for some @xmath311 , and the root has a self - loop .",
    "this is also true for the product @xmath325 due to .",
    "thus , @xmath325 is @xmath108-sia from lemma [ lemspanningtreetosia ] .",
    "the proof is completed .",
    "[ corollaryprodhighdimensionspanningtree ]",
    "let @xmath304 , @xmath28 , @xmath305 , @xmath326 be uniformly bounded @xmath36 nonnegative matrices .",
    "let @xmath318 and @xmath308 be defined as in lemma [ lemprodhighdimensionspanningtree ] .",
    "if there exists @xmath81 such that @xmath309 has a @xmath14-spanning tree for some @xmath13 , then for each @xmath327 , the product @xmath328 is @xmath329-sia , where @xmath330 depends on @xmath143 .",
    "since @xmath331 , if @xmath309 has a @xmath14-spanning tree for some @xmath13 , then for each @xmath327 , @xmath332 also has a @xmath14-spanning tree .",
    "the conclusion is obvious from lemma [ lemprodhighdimensionspanningtree ] .",
    "[ remproductsia ] if @xmath304 , @xmath28 , @xmath305 , @xmath326 is a random sequence , then it is obvious from corollary [ corollaryprodhighdimensionspanningtree ] that the event @xmath309 has a @xmath14-spanning tree is contained in the event @xmath328 is @xmath329-sia .",
    "[ lemsecondborelcantelli ] let @xmath333 be a filtration with @xmath334 and @xmath335 a sequence of events with @xmath336 .",
    "then @xmath337 with a probability @xmath259 , where  infinitely often \" means that an infinite number of events from @xmath338 occur .",
    "[ lemprobabilitytolongerseqence ] let @xmath59 be an adapted random sequence .",
    "if for a sequence @xmath339 defined as @xmath340 for some given set @xmath341 there exists @xmath13 such that the conditional probability @xmath342 , then for each @xmath343 , @xmath344      ( lemma 5.4 in @xcite)[lemexpectationtoprobability1 ] let @xmath47 be a probability space , and @xmath346 be a random variable with @xmath347 .",
    "if for a @xmath50-algebra @xmath348 , a set @xmath349 with @xmath350 , @xmath351 holds on @xmath352 for some @xmath13 , then we have @xmath353 on @xmath352 and particularly , @xmath354 on @xmath352 .      in this section",
    ", we will discuss discrete - time consensus algorithms in networks with switching topologies and time delays .",
    "we first consider general stochastic processes described by an adapted sequence and establish a most general result .",
    "then we use it to obtain two corollaries under two special cases that will appear in the main text .    consider the following discrete time dynamical systems with switching topologies : @xmath355 where @xmath81 is the time index , @xmath356^{\\top}\\in \\mathbb{r}^{n}$ ] is the state variable of the system at time @xmath81 , @xmath357 is the bound of the time delay , where @xmath358 corresponds to the case of no time delay . in the following",
    ", we always assume that @xmath359 , @xmath360 for @xmath361 , @xmath193 for each @xmath8 , @xmath9 , @xmath362 , @xmath81 , and @xmath363 holds for each @xmath81 and @xmath8 .",
    "[ thmappendixmain ] let @xmath365 be an adapted process .",
    "if there exists @xmath13 , @xmath105 such that @xmath201 and the conditional expectation @xmath366 has a @xmath14-spanning tree , then the system ( [ eqndiscrete ] ) will reach consensus almost surely .",
    "first , we will prove the following lemma , which shows that the conditional expectation of a spanning tree implies a positive conditional probability of existence of a spanning tree for a longer length of the summation .",
    "[ lemexpectationtoprobability ] let @xmath59 be an adapted random sequence of @xmath36 stochastic matrices , if there exists @xmath13 such that for each @xmath367 , @xmath368 has a @xmath14 -spanning tree , then there exist @xmath105 , @xmath311 such that @xmath369    denote @xmath370 the number of different types of spanning trees composed of @xmath35 vertices .",
    "for some fixed @xmath367 , we decompose the probability space @xmath48 with respect to @xmath371 , i.e. , @xmath372 , @xmath373 , @xmath374 where @xmath375 , and @xmath376 for @xmath46 such that on each @xmath377 , @xmath378 has a ( fixed ) specified spanning tree .",
    "denote @xmath379 the restriction of @xmath380 on @xmath381 , i.e. , @xmath382    let @xmath383 be a @xmath14-spanning tree contained in @xmath379 , which is arbitrarily selected when more than one choices are available .",
    "for each @xmath384 , we pick an edge @xmath385 , and let @xmath386_{ij}\\ge \\delta/2\\}\\cap s_{m}^{(i_{1})}$ ] .",
    "then @xmath387 , and from lemma [ lemexpectationtoprobability1 ] , @xmath388 holds on @xmath384 .    similarly , we decompose each @xmath389 with respect to @xmath390 , i.e. , @xmath391 with @xmath392 and @xmath393 for @xmath394 , @xmath395 , where @xmath396 depends on the index @xmath397 such that @xmath398 has a specified @xmath14-spanning tree on each @xmath399 .    for each @xmath399 , we pick an edge @xmath400 and let @xmath401_{ij}\\ge \\delta/2\\}\\cap s_{m+1}^{(i_{1}i_{2})}$ ] , then @xmath402 and from lemma [ lemexpectationtoprobability1 ] , @xmath403 holds on @xmath399 .    continuing this process",
    ", we can get a sequence : @xmath404 such that for @xmath405 , @xmath406 , @xmath407 , @xmath408 has a ( fixed ) spanning tree , and @xmath409_{ij}>\\delta/2\\}\\cap s_{m+l-1}^{i_{1}i_{2}\\cdots i_{l}},\\end{aligned}\\ ] ] where the edge @xmath410 .    for any fixed sequence @xmath411 , @xmath412 .",
    "we choose the edge @xmath413 in ( [ eqnchooseedge ] ) for each @xmath414 in such way that if @xmath415 hasnt appeared in the sequence , @xmath416 , @xmath28 , @xmath417 , then we choose @xmath418 arbitrarily .",
    "otherwise , we choose @xmath418 which hasnt been chosen before when + @xmath415 appears in the sequence + @xmath383 , @xmath28 , @xmath417 if there still exists such an edge .",
    "since there at most @xmath370 different types of spanning trees , and each spanning tree has @xmath419 edges , it is obvious when @xmath420 , the sets @xmath421 this is because for each fixed sequence @xmath397 , @xmath28 , @xmath422 , at least one type of spanning trees has appeared at least @xmath419 times , thus by the edge chosen strategy , each of its edges has been chosen at least once .",
    "so we have @xmath423 the inequality from ( [ stepineq1 ] ) to ( [ stepeq1 ] ) is due to the fact @xmath424 on @xmath425 , which implies @xmath426 the equality from ( [ stepeq1 ] ) to ( [ stepeq2 ] ) is due to the fact that @xmath427 , and @xmath428 for @xmath429 , which implies @xmath430 for each fixed sequence @xmath397 , @xmath431 , @xmath28 , @xmath432 .",
    "denote @xmath435^{\\top}$ ] , then we have : @xmath436 where @xmath437.\\end{aligned}\\ ] ] let @xmath438 , and @xmath439 .",
    "then @xmath440 also forms an adapted sequence , and @xmath441 has a @xmath14-spanning tree . from lemma [ lemexpectationtoprobability ] ,",
    "there exists @xmath106 such that @xmath442    since @xmath443 + \\left[\\begin{array}{ccccc } \\overline{\\operatorname{diag}}(a^{0}(k ) ) & a^{1}(k ) & \\cdots & a^{\\tau-1}(k ) & a^{\\tau}(k)\\\\ 0&0&\\cdots&0 & 0\\\\ 0 & 0 & \\cdots & 0&0\\\\ \\vdots & \\vdots & \\ddots & \\vdots&\\vdots\\\\ 0 & 0 & \\cdots & 0 & 0 \\end{array } \\right]\\\\ & \\ge&\\delta m_{0}+d_{k}\\ge \\delta(m_{0}+d_{k}),\\end{aligned}\\ ] ] where @xmath444 refers to the second matrix on the righthand side of the first line .",
    "from lemma [ lemprodhighdimensionspanningtree ] , corollary [ corollaryprodhighdimensionspanningtree ] , and remark [ remprodhighdimensionspanningtree ] , remark [ remproductsia ] , there exist @xmath445 , @xmath446 such that @xmath447 let @xmath448 , @xmath449 , then @xmath450 forms an adapted sequence and @xmath451    let @xmath452 , then from lemma [ lemsiatoscrambling ] and lemma [ lemprobabilitytolongerseqence ] , @xmath453 let @xmath454 , and @xmath455",
    ". then @xmath456 forms an adapted sequence , and @xmath457 from the second borel - cantelli lemma ( lemma [ lemsecondborelcantelli ] ) , this implies @xmath458 from lemma [ lemcontractionofproduct ] and remark [ remergodicityofproducts ] , we have @xmath459 this implies the system ( [ eqnhighdimension ] ) reaches consensus almost surely . on the other hand",
    "it is not difficult to show that consensus of ( [ eqnhighdimension ] ) can imply consensus of ( [ eqndiscrete ] ) . and",
    "the proof is completed .",
    "[ corollaryappendixdeterministic ] let @xmath460 be a deterministic sequence with @xmath461 for some @xmath13 , and @xmath462_{jj}=0 $ ] for @xmath463 , @xmath464 .",
    "if there exists @xmath105 such that @xmath465 has a @xmath14-spanning tree , then the system will reach consensus .",
    "[ corollaryappendixindependent ] let @xmath460 be a random sequence with @xmath461 for some @xmath13 , and @xmath462_{jj}=0 $ ] for @xmath463 , @xmath464 .",
    "and there exists @xmath466 such that @xmath467 is independent of @xmath468 whenever @xmath238 .",
    "if there exists @xmath105 such that @xmath469 has a @xmath14-spanning tree , then the system will reach consensus almost surely .",
    "let @xmath470 be the @xmath50-algebra formed by @xmath471 , @xmath472 .",
    "then @xmath365 forms an adapted process . from the assumption on @xmath460",
    ", @xmath468 is independent of @xmath58 whenever @xmath238 .",
    "since @xmath473 , we have @xmath474 thus , @xmath475 has a @xmath14-spanning tree and the conclusion follows from theorem [ thmappendixmain ] .",
    "r. olfati - saber , and r.m .",
    "murray ,  consensus problems in networks of agents with switching topology and time - delays , \" _ ieee transactions on automatic control _ , vol .",
    "9 , pp . 1520 - 1533 , sep .",
    "2004 .",
    "z. liu , z. chen , and z. yuan ,  event - triggered average consensus of multi - agent systems with weighted and directed topology , \" _ journal of systems science and complexity _ , vol . 25 , no .",
    "845 - 855 , 2012 .",
    "w. l. lu and t. chen .",
    " global synchronization of discrete - time dynamical network with a directed graph \" , _ ieee transactions on circuits and systems - ii : express briefs _",
    "136 - 140 , 2007 .",
    "f. xiao , and l. wang ,  asynchronous consensus in continuous - time multi - agent systems with switching topology and time - varying delays \" , _ ieee transactions on automatic control _ , vol .",
    "1804 - 1816 , sep 2008 .",
    "b. liu , w.l .",
    "lu , and t.p .",
    "chen ,  consensus in networks of multiagents with switching topologies modeled as adapted stochastic processes \" , _ siam journal on control and optimization _",
    "227 - 253 , 2011 ."
  ],
  "abstract_text": [
    "<S> in this paper , we propose a new self - triggered consensus algorithm in networks of multi - agents . </S>",
    "<S> different from existing works , which are based on the observation of states , here , each agent determines its next update time based on its coupling structure . </S>",
    "<S> both centralized and distributed approaches of the algorithms have been discussed . by transforming the algorithm to a proper discrete - time systems without self delays , we established a new analysis framework to prove the convergence of the algorithm </S>",
    "<S> . then we extended the algorithm to networks with switching topologies , especially stochastically switching topologies . </S>",
    "<S> compared to existing works , our algorithm is easier to understand and implement . </S>",
    "<S> it explicitly provides positive lower and upper bounds for the update time interval of each agent based on its coupling structure , which can also be independently adjusted by each agent according to its own situation . </S>",
    "<S> our work reveals that the event / self triggered algorithms are essentially discrete and more suitable to a discrete analysis framework . </S>",
    "<S> numerical simulations are also provided to illustrate the theoretical results .    </S>",
    "<S> self - triggered , distributed , consensus , switching topology . </S>"
  ]
}
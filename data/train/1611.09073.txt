{
  "article_text": [
    "codes correcting insertions or error patterns composed of insertions have historically been important to problems in synchronization and communication @xcite .",
    "recently , such codes have been useful for dna storage as well @xcite .",
    "researchers have had little luck in finding insertion correcting codes of optimal cardinality .",
    "however , progress has been made on finding upper and lower bounds on the optimal cardinality of such codes @xcite , @xcite .",
    "the most famous code believed to be optimal is the vt - code @xcite , which corrects a single insertion or deletion . in this paper",
    "we focus on the how likely it is that a received word ( termed _ senseword _ ) will be uniquely decodable for an arbitrary insertion correcting code .",
    "this problem is particularly relevant to long term storage problems .",
    "for example , in the dna - storage problem , only one copy of the stored data may exist , especially if the information was stored in dna thousands of years in the past .",
    "it is therefore very desirable for a code to have a reasonable chance of being uniquely decodable beyond the guarantee , especially if no other properties are compromised .",
    "consider a channel where @xmath4 consecutive insertions occur .",
    "we refer to the temporal list of inserted elements and insertion positions as an _ insertion history_. if at each step , the insertion position is chosen uniformly at random , and the inserted element is chosen uniformly at random , we refer to this channel as the _ uniform @xmath4-insertion channel_. if a particular codeword @xmath0 in a code @xmath7 is transmitted through this channel , then the probability that unique decoding occurs is equal to the number of @xmath4-insertion histories where a senseword unique to @xmath0 is obtained , divided by the total number of @xmath4-insertion histories .",
    "now consider the insertion channel which makes @xmath4 insertions and outputs each distinct length @xmath2 senseword with equal probability .",
    "the probability of uniquely decoding for a particular codeword @xmath0 is equal to the fraction of unique sensewords in @xmath0 s insertion ball .",
    "we refer to this as the _ uniform @xmath4-supersequence channel_.    clearly , we can make optimizations using these measures over codes of a particular cardinality , length , and error - correction capability . while it is not yet clear how to perform such optimizations in a non - exhaustive manner , upper bounds on the measures are useful because they help us understand how effective a code can possibly be for uniquely decoding a given number of insertions , without solving the optimization problems explicitly .",
    "the bounds can thus be used as a reference when designing codes , and can potentially be used to prove theorems involving arbitrary insertion correcting codes .",
    "our main combinatorial result used to derive the upper bounds is related to a result derived in @xcite by vladimir levinshtein . in @xcite ,",
    "the problem of reconstructing a sequence after repeatedly transmitting it through a noisy channel was studied .",
    "this problem was studied for several channels , including the insertion channel . for a given number of insertions ,",
    "a closed form was found for the number of distinct sensewords that guarantees unique reconstruct - ability of the original sequence .",
    "this formula is equal to one plus the maximum possible intersection cardinality of the insertion balls corresponding to two arbitrary non - identical sequences .",
    "in contrast , we find a closed form for the minimum possible intersection cardinality of the insertion balls corresponding to two arbitrary non - identical sequences .    the remainder of the paper is organized as follows . in section",
    "ii , we present the necessary preliminaries . in section iii",
    "we prove the main combinatorial theorem that gives the upper bounds of interest , and consider several asymptotics . in section iv , we examine vt - codes and a particular repetition under our new framework , and observe some unexpected behavior . in section",
    "v , we discuss the class of sequence pairs used to derive our upper bound .",
    "we conclude the paper in section iv .",
    "let @xmath8 be an alphabet containing @xmath9 symbols .",
    "then @xmath10 is the set of all length @xmath11 words over the alphabet @xmath12 . if @xmath13 , we denote the word @xmath14 by @xmath15 .",
    "we use the terms _ word _ and _ sequence _ interchangeably .    let @xmath16 .",
    "we define an _ insertion _ as the addition of an element from @xmath12 into some position in @xmath17 .",
    "we define a _ deletion _ as the removal of an element from @xmath17 .",
    "if @xmath4 insertions occur , the resulting word is referred to as a _ @xmath4-supersequence _ of @xmath17 .",
    "similarly , if @xmath4 deletions occur , the resulting word is referred to as a _ @xmath4-subsequence _ of @xmath17 .",
    "substring _ is a contiguous subsequence of a word . given a word , a _ run _",
    "is a substring @xmath15 , and the potential elements on both sides of @xmath15 are not @xmath18 the _",
    "levinshtein distance _",
    "@xmath19 between two words @xmath20 is defined as the minimum number of insertions and deletions necessary to transform @xmath17 into @xmath21 .",
    "clearly , we have that @xmath22 .    the _ @xmath4-insertion ball _ of @xmath17",
    "is the set of all words in @xmath23 that are formed by inserting @xmath4 symbols into @xmath17 .",
    "we denote the @xmath4-insertion ball of @xmath17 by @xmath24 .",
    "it is known that @xmath25 for any word @xmath26 .",
    "similarly , the _ @xmath4-deletion _ ball of @xmath17 is the set of all words in @xmath27 formed by deleting @xmath4 symbols from @xmath17 .",
    "we denote the @xmath4-deletion ball of @xmath17 by @xmath28 .",
    "unfortunately , a general formula for @xmath29 is not known .",
    "however in the @xmath30 case , we have that @xmath31 . where @xmath32 is the number of runs in @xmath17 . here",
    ", a run is defined as a contiguous block of @xmath6 s in @xmath17 where @xmath13 .    because @xmath33 is independent of the exact length @xmath11 sequence @xmath17",
    ", we will sometimes use the expression @xmath34 to mean the number of sequences in the @xmath9-ary @xmath4-insertion ball of a length @xmath11 sequence .",
    "we define a _ @xmath4-insertion correcting code _ to be a set of codewords @xmath35 such that @xmath36 similarly , we define a _ @xmath4-deletion correcting code _ to be a set of codewords @xmath35 such that @xmath37 .",
    "it was shown that @xmath7 is a @xmath4-insertion correcting code if and only if it is a @xmath4-deletion correcting code .",
    "furthermore , it was also shown that @xmath7 is a @xmath4-insertion correcting code if and only if @xmath38 .",
    "we denote the _ minimum levinshtein distance _ of an insertion / deletion correcting code by @xmath39 .",
    "varshamov - tenengolts codes introduced in @xcite are commonly used single - insertion correcting codes defined as the set of all words @xmath40 such that    @xmath41    varshamov - tenengolts codes are perfect , and have maximum cardinality for @xmath42 when @xmath43 .",
    "it is conjectured , though unproven that varshamov - tenengolts codes have maximum cardinality for all values of @xmath11 when @xmath43 .",
    "we refer to the the varshamov - tenengolts code of length @xmath11 with parameter @xmath6 as @xmath44 .",
    "some excellent general resources on insertions and deletions can be found here : @xcite , @xcite , @xcite .",
    "we now introduce what is known as levinshtein s reconstruction problem @xcite .",
    "consider the problem of repeatedly transmitting a word @xmath16 through a noisy channel .",
    "one can ask how many distinct channel outputs are required to guarantee unique reconstruction of the original word . in the case of the insertion channel ,",
    "it was observed by levinshtein that the number of required channel outputs is equal to one plus the maximum intersection of the @xmath4-insertion balls corresponding to two distinct sequences in @xmath10 .",
    "levinshtien defined this maximum intersection as @xmath45    he showed that    @xmath46    thus , with @xmath47 @xmath4-supersequences of @xmath17 , unique reconstruction of @xmath17 is guaranteed .",
    "later , sala found a formula for the number of distinct supersequences that are required to guarantee unique reconstruction if the words belong to an insertion correcting code @xcite . in his framework , @xmath48 is of length @xmath11 , @xmath49 is of length @xmath50 , and the common supersequences are of length @xmath2 .",
    "the levinshtein distance constraint is then @xmath51 , and @xmath52 . in sala s",
    "paper , @xmath53 was defined as :    @xmath54 and was found to equal :     @xmath55    in this paper we consider two channels which insert @xmath4 elements into a sequence .",
    "we refer to the first such channel as the _ uniform @xmath4-insertion channel_. in this channel , @xmath4 consecutive insertions are made , and at each step , the insertion position is chosen uniformly at random , and the inserted element is chosen uniformly at random .",
    "we refer to the temporal list of inserted elements and insertion positions as an _ insertion history_. if a particular codeword @xmath0 in a code @xmath7 is transmitted through this channel , then the probability that unique decoding occurs is equal to the number of insertion histories where a unique senseword to @xmath0 is obtained , divided by the total number of insertion histories .",
    "we refer to the second channel as the _ uniform @xmath4-supersequence channel_. this channel makes @xmath4 insertions and each distinct length @xmath2 senseword is output with equal probability .",
    "the probability of uniquely decoding when a particular codeword @xmath0 is sent is equal to the fraction of unique sensewords in @xmath0 s insertion ball .    in this paper , we introduce two models for optimizing the choice of code to maximize the probability of uniquely decoding beyond the code s guarantee for one of the two channels above .    in the first model ,",
    "our objective is to find the code @xmath56 which maximize the minimum probability @xmath57 of decoding @xmath4 insertions over all codewords @xmath0 in @xmath7 , while keeping the @xmath58 , @xmath59 , @xmath9 , and @xmath11 fixed .",
    "the optimal solution guarantees that no matter which codeword is transmitted , the probability of uniquely decoding is at least @xmath57 if @xmath4 insertions occur .",
    "this model addresses the worst case distribution on the codeword sent .",
    "we refer to a code that achieves @xmath60 for @xmath4 insertions as @xmath61 optimal .    in the second model ,",
    "our objective is to find the code @xmath7 that maximizes the average probability @xmath62 of decoding a codeword in @xmath56 for @xmath4 insertions , while keeping the @xmath58 , @xmath59 , @xmath9 , and @xmath11 fixed .",
    "this model finds the code with optimal probability of uniquely decoding @xmath4 insertions , assuming each codeword is equally likely to be sent .",
    "we refer to a code that achieves @xmath63 for @xmath4 insertions as @xmath64 optimal .",
    "in this section we prove the main combinatorial theorem , and use it to upper bound the performance measures of interest for length @xmath11 insertion correcting codes .",
    "we begin by recalling a recursion for the intersection cardinality of two insertion balls .",
    "this recursion was discovered by levinshtein in @xcite .",
    "[ levtrick ] let @xmath65 .",
    "write @xmath66 and @xmath67 with @xmath68 . then ,",
    "if @xmath69 , @xmath70 if @xmath71 , @xmath72    this recursion will be crucial to the derivation that follows .",
    "we define the minimum intersection of the insertion balls of two sequences as @xmath73 where @xmath74 and @xmath75 .",
    "we proceed to find a closed form for @xmath76 .",
    "[ lem : main ]    let @xmath77 and @xmath75 . then , we have    @xmath78    first , we will show that @xmath79 for all @xmath74 where @xmath75 .",
    "we will then prove that @xmath80 by strong induction on @xmath81 .",
    "without loss of generality , suppose that @xmath82 .",
    "we observe that for a sequence to be in the intersection of @xmath83 and @xmath84 , the sequence must contain at least @xmath85 zeros and @xmath86 ones .",
    "thus if @xmath87 , we have that @xmath88 .",
    "let @xmath81 .",
    "if @xmath89 , we notice that @xmath90 consists of all length @xmath91 sequences containing @xmath92 ones where @xmath93 , and @xmath94 zeros where @xmath95 .    to count the number of length @xmath91 sequences with @xmath92 ones , we first observe that the set @xmath96 containing all @xmath97-supersequences of @xmath98 that contain no ones has cardinality equal to @xmath99 .",
    "let @xmath100 be the set of all sequences formed by inserting @xmath97 ones into a sequence @xmath101 .",
    "consider @xmath102 .",
    "then clearly @xmath103 . to count the number of sequences in @xmath104",
    ", we can view each of the @xmath105 spaces adjacent to sequence elements in @xmath106 as a labeled bin , and the @xmath92 ones that will be inserted into the sequence as @xmath92 unlabeled balls that are being tossed into the @xmath105 bins .    using the formula , for unlabeled balls tossed into labeled bins",
    ", we see that @xmath107 .",
    "thus , the number of supersequences in @xmath90 with @xmath92 ones is equal to @xmath108    summing over the possible values of @xmath97 , we obtain @xmath109    we proceed to show that @xmath80 by induction on @xmath81 .",
    "the property trivially holds for @xmath110 . for @xmath111 , @xmath112 while in any other case , the cardinality must be @xmath113 since set cardinalities are always non - negative .",
    "suppose the property holds for all @xmath114 .",
    "for @xmath115 , we consider the pair of sequences @xmath116 and @xmath117 for any @xmath118 such that @xmath119 . from claim 2",
    ", we see that    @xmath120    now consider two arbitrary sequences @xmath121 and @xmath122 .",
    "we see from claim 2 that if @xmath123 , then    @xmath124    by the inductive hypothesis , @xmath125 and @xmath126 and @xmath127 .    thus , if @xmath123 ,    @xmath128    if @xmath129 , we have    @xmath130    by the inductive hypothesis , we have @xmath131 and @xmath127 .",
    "we thus have that @xmath132    we will complete the proof by showing that @xmath133    to show the above , it suffices to prove that @xmath134    we begin by manipulating the left side of the inequality .",
    "@xmath135    where @xmath136 and @xmath137    we now manipulate the right side of the inequality .",
    "@xmath138    clearly , @xmath139    thus , we have    @xmath134    this proves , @xmath140    thus , if @xmath129 , we have    @xmath141    and we have proved the inductive step .",
    "we are now ready to prove the upper bounds of interest .",
    "consider any length @xmath11 insertion correcting code @xmath7 with cardinality @xmath142 .",
    "then for any codeword @xmath0 in @xmath7 , consider the number of @xmath143-supersequences that are unique to the codeword @xmath0 .",
    "the following theorem provides an upper bound for this quantity .",
    "[ cor : bound ] let @xmath56 be any insertion correcting code .",
    "then for any codeword @xmath144 , we have that the number of @xmath143-supersequences that are unique to @xmath0 is upper bounded by    @xmath145    in addition to @xmath0 , there must exist another codeword @xmath146 since @xmath147 .",
    "the quantity @xmath148 must be greater than or equal to @xmath149 as proved in theorem [ lem : main ] .",
    "thus the number of unique sequences in @xmath150 must be less than or equal to @xmath151    the following direct corollary is an upper bound on the fraction of length @xmath143-supersequences that are unique to the codeword @xmath0 .",
    "it is thus an upper bound on the probability of error for any codeword under the uniform @xmath4-supersequence channel .",
    "let @xmath56 be any insertion correcting code .",
    "then for any codeword @xmath0 , we have that the fraction of @xmath143-supersequences in @xmath0 s @xmath4-insertion ball that are unique to @xmath0 is upper bounded by    @xmath152    in addition to providing an upper bound on the fraction of unique supersequences for a particular codeword , the formula above clearly serves as an upper bound on @xmath61 and @xmath64 for the uniform @xmath4-supersequence channel .    the upper bound on the fraction of unique supersequences approaches zero for @xmath153 as @xmath4 goes to infinity as proved in lemma [ lem : lim_q2 ] .",
    "we ve noticed that as @xmath4 increases , the upper bound approaches zero , regardless of @xmath154 this is exemplified in figure [ fig : bound_behavior ] , and is intuitive to us because as the number of insertions increases , a fewer fraction of the elements are fixed in the sequences @xmath155 and @xmath156 used to prove theorem [ lem : main ] .",
    "figure [ fig : bound_behavior ] also suggests that as @xmath9 increases , it takes longer for the percentage to approach 0 .",
    "it is clear from the formula , that @xmath4 must be at least @xmath11 for the upper bound to be below @xmath157 , but figure [ fig : bound_behavior ] also suggests that as @xmath11 increases , it takes longer for the bound to approach @xmath158 from the time at which @xmath159 .",
    "[ lem : lim_q2 ] for @xmath153 and all values on @xmath160 where @xmath161 we have @xmath162    @xmath163    where the last equality follows from the fact that the @xmath11 extra terms in the denominator are dominated by the other terms as @xmath4 becomes sufficiently large and are thus insignificant with respect to the limit .    [",
    "fig : bound_behavior ]     to improve this upper bound for a code at minimum levinshtein distance @xmath39 , we can find the minimum intersection cardinality over all pairs of sequences that have maximum levinshtein distance @xmath39 , and repeat the above derivation for the upper bound on the unique supersequence fraction .",
    "this will allow the bound to leave @xmath157 before @xmath159 , making the bound more useful to codewords that have close neighbors in levinshtein distance .",
    "we have not yet proved that the probability of unique decoding for the uniform @xmath4-insertion channel goes to @xmath158 as @xmath4 goes to infinity , though we have strong evidence this is true .",
    "we ve derived one upper bound on the probability of unique decoding using theorem 1 , though it is uninformative asymptotically .    for codeword @xmath0 in an arbitrary insertion correcting code",
    "@xmath164 the number of insertion histories where a non - unique supersequence is formed , is lower bounded by @xmath165    there are at least @xmath166 @xmath4-supersequences that are non - unique to the codeword .",
    "consider one non - unique @xmath4-supersequence @xmath167 for @xmath168 consider one possible set of insertions which form @xmath169 there are @xmath170 distinct insertion histories which form @xmath169 using that set of insertions .",
    "the result follows .    for codeword @xmath0 in an arbitrary insertion correcting code @xmath171 for the uniform @xmath4-insertion channel ,",
    "the probability of unique decoding is upper bounded by @xmath172    the number of total possible insertion histories is @xmath173 the result follows from the above lemma and this fact .",
    "we now provide strong evidence that the probability of unique decoding for the uniform @xmath4-insertion channel goes to @xmath158 as @xmath4 goes to infinity . over all codes where @xmath11 and @xmath9 are fixed , consider the code / codeword pair @xmath174 where the codeword @xmath144 has the maximum possible fraction of @xmath4-insertion histories which give @xmath4-supersequences unique to @xmath3 clearly , there exists such a code with cardinality 2 .",
    "we conjecture that @xmath175 is one such code , regardless of @xmath9 because @xmath155 and @xmath156 have no elements in common .",
    "we also confirmed this through exhaustive search for many small cases . in the following lemmas",
    ", we find a formula for the number of unique insertion histories for @xmath156 in @xmath7 explicitly , and show that as @xmath4 goes to infinity , the fraction of unique insertion histories goes to @xmath176 if our conjecture is true , this clearly implies that for any codeword in any code , the fraction of unique insertion histories goes to @xmath158 as @xmath4 goes to infinity .",
    "this is intuitive because as shown in the binary case , the fraction of unique sensewords goes approaches @xmath177 and for each unique senseword , there are only so many corresponding insertion histories .",
    "consider the code @xmath178 the number of @xmath4-insertion histories for @xmath156 which give unique sensewords is @xmath179 this is the same for @xmath180    the only insertion histories for @xmath156 which give unique sensewords are clearly the insertion histories where less than @xmath11 zeros are inserted .",
    "suppose exactly @xmath181 out of the @xmath4 insertions are zeros .",
    "then the number of such insertion histories is @xmath182 thus , there are exactly @xmath183 insertion histories for @xmath156 which give unique sensewords . by symmetry",
    ", there are @xmath183 insertion histories for @xmath155    consider the code @xmath178 the fraction of length @xmath4 insertion histories for @xmath156 which give unique sensewords is @xmath184 this is the same for @xmath180    @xmath185    @xmath186    consider all pairs of @xmath9-ary length @xmath11 sequences . over all pairs , for all @xmath187 if @xmath156 in pair @xmath188 has the minimum number of @xmath4-insertion histories which give rise to supersequences that are in its co - sequence s @xmath4-insertion ball , then our conjecture will be proved .",
    "there probably exists an inductive proof similar to that in lemma [ lem : main ] once the correct recursions are found .",
    "consider all pairs of @xmath9-ary length @xmath11 sequences . over all pairs , for all @xmath187 @xmath156 in pair @xmath188 has the minimum number of @xmath4-insertion histories which give rise to supersequences that are in its co - sequence s @xmath4-insertion ball .    for all codewords",
    "@xmath0 in all codes @xmath164 the fraction of unique insertion histories approaches @xmath158 as @xmath4 goes to infinity .",
    "in addition to showing upper bounds on the probabilities of unique decoding , we can show that for both insertion channels and every code @xmath164 there exists some codeword where the probability of unique decoding is non - zero .",
    "we proceed to prove this using the following lemma .",
    "[ lowertheorem ] there exists no code @xmath7 and integer @xmath4 such that all @xmath4-supersequences corresponding to codewords in @xmath7 are non - unique .",
    "suppose such a code @xmath7 existed .",
    "consider a codeword @xmath0 with maximal value of @xmath189 where @xmath190 is the length of the right - most run in @xmath3 consider the supersequence @xmath169 formed by duplicating the right - most element @xmath4 times .",
    "let @xmath6 be the substring of @xmath0 to the left of @xmath0 s rightmost run .",
    "then one or more length @xmath11 subsequences of @xmath169 must be codewords in @xmath7 that are distinct from @xmath3 any such codeword @xmath146 must be of the form @xmath191 where @xmath17 is a strict subsequence of @xmath192 and @xmath21 is the rightmost element of @xmath0 repeated @xmath193 times .",
    "however , since @xmath17 is a strict subsequence , @xmath21 must be of length greater than @xmath194 thus , @xmath146 has a rightmost run of length greater than @xmath194 this is a contradiction .",
    "[ lowerut ] @xmath62 is strictly positive for all codes @xmath164 for the uniform @xmath4-insertion channel and the uniform @xmath4-supersequence insertion channel .",
    "this follows directly from theorem [ lowertheorem ] .    with our new bounds , we are now ready to explore unique decodability beyond half the levinshtein distance of some common insertion correcting codes .",
    "the most practical value of @xmath4 to first consider is @xmath195 i.e. one greater than the guaranteed number of correctable insertions . in this section ,",
    "we focus on this problem for the uniform @xmath4-supersequence channel , though we are equally interested in the uniform @xmath4-insertion channel .",
    "first , we explicitly calculate @xmath196 and @xmath197 for a code whose error correction capability is @xmath198 observe that this a constant positive fraction of the codeword length @xmath11 as @xmath11 increases .",
    "we then examine @xmath199 and @xmath200 for the vt - code , a code which always corrects 1 insertion , regardless of @xmath201 these examples will serve as the intuition behind a conjecture we form about insertion correcting codes in general .",
    "the following binary code @xmath202 is both @xmath196 optimal and @xmath197 optimal for @xmath203 and @xmath204 .",
    "we suspect that it is both @xmath196 optimal and @xmath197 optimal for all even values of @xmath11 .",
    "furthermore , this code has maximum cardinality over all binary @xmath205-insertion correcting codes of length @xmath11 for @xmath206 and @xmath207 , and we believe that the code has maximum cardinality over all binary @xmath205-insertion correcting codes for all even values of @xmath11 .",
    "we will refer to the code as the @xmath208-repetition code .",
    "we proceed to calculate @xmath196 and @xmath197 for the @xmath208-repetition code for an arbitrary value @xmath11",
    ". we will first find the number of unique @xmath209-supersequences corresponding to each codeword .",
    "this will allow us to calculate @xmath196 and @xmath197 for the code .",
    "[ lem : rp_4n ] consider the @xmath208-repetition code : @xmath210 .",
    "for @xmath211 , let @xmath212 be the number of supersequences @xmath213 such that @xmath214 for @xmath215 .",
    "then @xmath216 , and @xmath217    to perform our calculation , we will first characterize the sequences in each of the 6 intersections between pairs of insertion balls .",
    "the intersection of the @xmath209-insertion balls for @xmath155 and @xmath156 is empty because any sequence in @xmath155 s insertion ball , contains at most @xmath209 ones , and thus can not be a supersequence of @xmath156 .    any sequence in the intersection of the @xmath209-insertion balls for @xmath155 and @xmath218 must contain @xmath11 zeros and @xmath209 ones .",
    "thus , any of the sequences in the intersection must be formed by inserting @xmath209 zeros into @xmath218 .",
    "thus , for any such sequence , we have that @xmath209 of the zeros must be to the right of the @xmath209 ones . to count the number of sequences in the intersection , we fix the @xmath209 zeros to the right of the @xmath209 ones , and count the number of possible sequences to the left of the @xmath209 fixed zeros using the following balls and bins approach . treat the @xmath219 spaces surrounding the @xmath209 ones as labeled bins .",
    "treat the @xmath209 zeros as unlabeled balls . using the known formula for unlabeled balls in labeled bins",
    ", we see that there are @xmath220 sequences in the intersection .",
    "similarly , the number of sequences in the intersection of the @xmath209-insertion balls for the codeword pairs @xmath221 , @xmath222 , @xmath223 is also @xmath224 .",
    "the intersection of the @xmath209-insertion balls for @xmath225 and @xmath218 only contains the sequences @xmath226 and @xmath227 .",
    "this is proved as follows .",
    "any sequence in the intersection must be formed by inserting @xmath209 elements into @xmath225 so that @xmath218 is also a subsequence .    if only zeros are inserted , then @xmath226 is clearly the only possible sequence because there must exist @xmath209 zeros to the right of the @xmath209 ones .",
    "similarly , the sequence must be @xmath227 if only ones are inserted .",
    "if @xmath228 ones are inserted and @xmath229 zeros are inserted into @xmath225 such that @xmath230 , then we will show that it is impossible for @xmath218 to exist as a subsequence . we prove this by considering the number of ones and zeros from the original @xmath225 that are used in a subsequence @xmath231",
    "if @xmath232 ones and @xmath158 zeros from the original @xmath225 are used to form the subsequence @xmath218 , this contradicts the number zero insertions available . if @xmath232 zeros and @xmath158 ones from the original @xmath225 are used to form the subsequence @xmath233 this contradicts one insertions available .",
    "it is clearly impossible for a subsequence @xmath234 to be made of only insertions .",
    "it is clearly impossible for a subsequence @xmath225 to use both ones and zeros from the original @xmath218 because all ones are on the wrong side of all zeros and vice - versa .",
    "thus , it is impossible to form a supersequence of @xmath225 which contains @xmath218 as a subsequence by inserting both zeros and ones .    thus , the sequences @xmath226 and @xmath227 are the only sequences in the intersection of the @xmath209-insertion balls of @xmath225 and @xmath235    we will now count the number of non - unique supersequences in the @xmath209-insertion balls corresponding to each of the codewords , thus allowing us to calculate the number of unique supersequneces for each of the codewords .",
    "consider the codeword @xmath155 .",
    "each sequence in @xmath236 contains at least @xmath209 zeros to the right of @xmath209 ones .",
    "the only sequence in @xmath237 that satisfies this condition is @xmath226 .",
    "this is because the only way to build a sequence from @xmath225 that contains @xmath11 zeros and contains the subsequence @xmath218 is to insert @xmath209 zeros to the right of the @xmath209 ones .",
    "there are thus @xmath238 sequences in @xmath239 that are not unique to @xmath155 . similarly , there are @xmath238 sequences in @xmath240 that are not unique to @xmath156",
    ".    we will now consider the number of sequences in @xmath241 unique to @xmath225 .",
    "we see that , @xmath237 has no sequences in common with @xmath242 because a sequence in one ball can not have the same number of ones as a sequence in the other ball .",
    "clearly , the only sequence in the intersection of @xmath242 and @xmath243 is @xmath227 similarly , the only sequence in the intersection of @xmath237 and @xmath243 is @xmath226 .",
    "thus , @xmath244 contains @xmath245 sequences that are not unique to @xmath225 .",
    "similarly , @xmath246 contains @xmath245 sequences that are not unique to @xmath218 .",
    "thus @xmath216 , and @xmath217    consider the @xmath208-repetition code : @xmath210",
    ". then @xmath247 and @xmath248    this follows directly from lemma [ lem : rp_4n ] .    for the repetition code",
    "@xmath249 we have that @xmath250 and @xmath251    we have that    @xmath252    similarly ,    @xmath253    this means that @xmath249 is asymptotically both @xmath254 and @xmath255 optimal .",
    "furthermore , this means that asymptotically , @xmath249 can be thought of as a @xmath209 insertion - correcting code under the uniform @xmath4-supersequence channel .",
    "now let us consider the single insertion correcting vt - code . given a code length @xmath1 it is known that @xmath43 always gives the highest cardinality , though there are often multiple values of @xmath6 that give rise to vt - codes of maximal cardinality . among @xmath6 values that give maximum cardinality",
    ", we can select the one which maximizes @xmath256 or @xmath64 for some @xmath257 of our interest .",
    "for example , we can find such a code and decode for @xmath258 naively , for many commonly used values of @xmath201 given any algorithm for decoding @xmath157 insertion , @xmath259 insertions could be decoded by simply running that decoding algorithm on each of the @xmath157-subsequences of the senseword and checking whether the decoding is a codeword .",
    "we observed that by varying @xmath192 @xmath260 and @xmath200 can change significantly for smaller @xmath11 , making this a practical observation for relatively small @xmath201 however , as @xmath11 increases , @xmath260 and @xmath200 appear to approach @xmath176 this is in stark contrast to what we observed for the unique decodability of 1 extra insertion for @xmath261 through our observations , we ask the following two questions . for a length @xmath11 insertion correcting code @xmath7 which at corrects some positive fixed fraction of @xmath11",
    "as @xmath11 goes to infinity , is it always true that for any codeword @xmath262 the fraction of unique @xmath263-supersequences to @xmath0 approaches @xmath157 as @xmath11 goes to infinity ?    for a length @xmath11 maximum cardinality insertion correcting code @xmath7 which corrects some fixed constant number of insertions regardless of @xmath1 is it always true that for any codeword @xmath262 the the fraction of unique @xmath263-supersequences to @xmath0 approaches @xmath158 as @xmath11 goes to infinity ?",
    "we proceed to show that all pairs of sequences at maximum levinshtein distance achieve the minimum intersection cardinality .",
    "we will then count the number of such pairs , thus lower bounding the number of minimum intersection achieving sequence pairs .",
    "in addition to providing a better understanding of our problem , this analysis can potentially aid in codeword selection .",
    "we will accomplish the first goal by finding a formula for the number of sequences in the insertion ball intersection for an arbitrary maximum distance sequence pair .",
    "we will then show that the intersection cardinality for the insertion balls of @xmath98 and @xmath264 can be written as the formula for the intersection cardinality of any maximum distance pair . because the pair @xmath265 achieves the minimum intersection cardinality in our proof of theorem [ lem : main ]",
    ", we will have proved that all maximum distance pairs achieve the minimum intersection cardinality .",
    "[ lem : maxdistpair ] let @xmath77 and @xmath266 .",
    "then for any length @xmath85 sequence @xmath49 and any length @xmath86 sequence @xmath48 such that @xmath267 , we have that @xmath48 only contains elements from some subset @xmath268 of the alphabet @xmath269 , and @xmath49 only contains elements from the subset @xmath270 . letting @xmath271 , we have that    @xmath272    clearly , if @xmath267 , we have that @xmath49 and @xmath48 do not have any elements in common .",
    "thus we consider the set of elements in @xmath48 as a new alphabet @xmath268 , which is clearly a subset of the alphabet @xmath269 .",
    "we then consider the subset @xmath270 as the alphabet for @xmath49 .    to count the number of sequences in @xmath273",
    ", we partition the sequences based on the number @xmath274 of elements from @xmath270 that the sequence contains .",
    "given some value of @xmath97 , there are @xmath275 possibilities for the sequences s subsequence of elements from @xmath270 .    a sequence in @xmath273 with @xmath97 additional elements from @xmath270 must have @xmath276 elements from @xmath268 . given @xmath97 ,",
    "there are @xmath277 possibilities for the sequence s subsequence of elements from @xmath268 .",
    "given the sequence s length @xmath274 subsequence @xmath278 of elements from @xmath270 and the sequence s length @xmath276 subsequence @xmath279 of elements from @xmath268 , the number of possible sequences containing both of these subsequences is the number of ways @xmath279 can be interleaved with @xmath278 .",
    "this can be counted using a balls and bins approach .",
    "we consider the @xmath280 possible insertion positions into @xmath278 as labeled bins , and the @xmath281 positions of elements from @xmath279 as unlabeled balls .",
    "there are thus @xmath282 ways for @xmath279 to be interleaved with @xmath278    @xmath97 can range from @xmath158 to @xmath283 so we have @xmath284    [ lem:0_1_intersection ] let @xmath77 and @xmath266 .",
    "consider any subset @xmath285 such that @xmath286 , where @xmath271 .",
    "then ,    @xmath287    using a similar approach as in lemma [ lem : maxdistpair ] , we will choose a sub - alphabet for the sequence @xmath264 , and a sub - alphabet for @xmath98 .",
    "@xmath98 and @xmath264 have no elements in common .",
    "so , the alphabet @xmath288 for @xmath264 can be chosen to be any subset of @xmath269 such that @xmath289 , and @xmath290 , and @xmath291 .",
    "once the alphabet for @xmath264 is chosen , the alphabet for @xmath98 will be @xmath292 .",
    "thus , we have that @xmath287    by following the proof in lemma [ lem : maxdistpair ]    let @xmath77 and @xmath266 . then for any length @xmath85 sequence @xmath49 and any length @xmath86 sequence @xmath48 such that @xmath267 , we have that    @xmath293    this follows directly from the two preceding lemmas along with lemma [ lem : main ] .",
    "we have shown that all maximum distance sequence pairs achieve the minimum intersection cardinality for all values of @xmath4 .",
    "we now count the number of pairs that achieve this with the simplifying condition that @xmath294    let @xmath295 and @xmath296 . if @xmath297 , then the number of pairs @xmath298 of sequences over the alphabet @xmath9 where @xmath299 is @xmath300    if @xmath301 , then the number of pairs equals    @xmath302    we first partition the possible pairs @xmath303 based on the number @xmath181 of distinct elements contained in @xmath49 or @xmath48 . for each value of @xmath181 , there are @xmath304 ways to choose the elements .",
    "clearly , @xmath181 ranges from @xmath259 to @xmath9 because we must have at least @xmath259 elements for @xmath49 and @xmath48 to have edit distance @xmath305 .    for each value of @xmath181",
    ", we then partition the pairs based on the number @xmath306 of distinct elements that @xmath49 contains out of the @xmath181 distinct elements selected for the pair .",
    "of course @xmath48 contains the remaining @xmath307 distinct elements . for each value of @xmath306",
    ", there are @xmath308 ways to select the elements @xmath49 contains .",
    "surely , @xmath306 ranges from @xmath157 to @xmath309 since both @xmath49 and @xmath48 must contain at least one element .",
    "fixing the sets of distinct elements used by @xmath49 and @xmath48 , the number of pairs of sequences is @xmath310 where @xmath311 is the number of possible sequences @xmath49 can be and @xmath312 is the number of possible sequences @xmath48 can be .",
    "@xmath311 is equivalent to the number of words of length @xmath85 using all @xmath181 letters of an alphabet at least once . using the inclusion - exclusion principle ,",
    "this is found to be @xmath313 .",
    "similarly , @xmath314 .",
    "thus if @xmath297 , the number of pairs is    @xmath315    if @xmath301 , then the pair @xmath316 .",
    "therefore , we are double counting in the above expression if @xmath301 . thus , if @xmath301 , the number of pairs is    @xmath302    let @xmath317 @xmath266 and @xmath296 . consider all pairs of sequences such that one sequence @xmath49 is length @xmath85 and the other sequence @xmath48 is length @xmath86 .",
    "if @xmath297 , then the number of such pairs where @xmath318 is greater than or equal to    @xmath315    if @xmath301 , this number is greater than or equal to    @xmath302    since all pairs of sequences of distance @xmath305 achieve the minimum , it follows from the previous lemma that the number of minimum achieving sequences is lower bounded by this expression .",
    "in this work , we examined the unique decodability of insertion correcting codes beyond the guaranteed number of correctable number of insertions .",
    "we focused on this problem for two probabilstic channels , namely the uniform @xmath4-insertion channel , and the uniform @xmath4-supersequence channel .",
    "we computed upper bounds on the probability of unique decoding for both channels . for the uniform @xmath4-supersequence channel",
    ", we proved that the probability of unique decoding approaches @xmath158 as @xmath4 goes to infinity in the binary case .",
    "we gave very strong evidence that the probability of unique decoding for the uniform @xmath4-insertion channel also approaches @xmath177 though the full proof is left as an open problem .",
    "furthermore , we proved that for every code , there exists a codeword which has a non - negative probability of unique decoding for all values of @xmath5    for the @xmath208 repetition code , we proved that for all codewords @xmath319 the probability of unique decoding from 1 insertion more than its guarantee goes to 1 as @xmath11 goes to infinity . for the @xmath320 code , we observed using exhaustive search for several values of @xmath1 that the probability of unique decoding from 1 insertion more than its guarantee goes to 0 as @xmath11 increases .",
    "this leads us to pose the following two questions about the uniform @xmath4-supersequence channel : if a length @xmath11 code asymptotically corrects @xmath321 insertions as the codeword length @xmath11 increases , is it true that for all codewords @xmath319 the probability of unique decoding from 1 insertion more than its guarantee always goes to 1 as @xmath11 goes to infinity ? for a length",
    "@xmath11 maximum cardinality insertion correcting code which always corrects some fixed constant number of insertions regardless of @xmath1 is it true that for all codewords @xmath319 the probability of unique decoding from 1 insertion more than its guarantee always goes to 0 as @xmath11 goes to infinity ?    finally , we analyzed the pairs of sequences use to derive our upper bound .",
    "specifically , we showed that all pairs of sequences at maximum levinshtein distance achieve the minimum insertion - ball intersection cardinality for all @xmath187 and we counted the number of such sequences when the alphabet size is less than the sequence length .",
    "sloane , n.j.a . on single - deletion - correcting codes .",
    "codes and designs : proceedings of a conference honoring professor dijen k. ray - chaudhuri on the occasion of his 65th birthday , ohio state university , may 18 - 21 , 2000 , 2002 .",
    "s. jain , f. farnoud , m. schwartz , j. bruck , `` duplication - correcting codes for data storage in the dna of living organisms , '' isit 2016 , available , https://dl.dropboxusercontent.com/u/2041685/website_docs/papers/2016-datastorageinthednaoflivingorganisms.pdf ."
  ],
  "abstract_text": [
    "<S> unlike the space of received words generated by substitution errors , the space of received words generated by insertion errors is infinite . given an arbitrary code , it is therefore possible for there to exist an infinite number of received words that are unique to a particular codeword . </S>",
    "<S> this work explores the extent to which an arbitrary insertion - correcting code can take advantage of this fact . for a particular codeword @xmath0 of length @xmath1 we are interested in two specific measures </S>",
    "<S> the first is the fraction of received words of length @xmath2 which are unique to @xmath3 the second is the fraction of insertion histories of length @xmath4 which give rise to received words of length @xmath2 that are unique to @xmath3 the first measure is the probability of uniquely decoding when @xmath4 insertion occur , if all possible length @xmath2 received words are equally likely . </S>",
    "<S> the second measure is the probability of uniquely decoding when @xmath4 consecutive insertions occur , and each insertion position and element are selected uniformly at random . </S>",
    "<S> we provide upper bounds on both of these measures and examine the asymptotic behavior . </S>",
    "<S> we also show that both measures are non - negative for at least one codeword in every code , for all @xmath5 we proceed to examine 2 types of codes for only one insertion beyond their respective guarantees , and propose an open problem , which if proved true , would explain our surprising observations . along the way </S>",
    "<S> , we make the practical observation that the design parameter @xmath6 of a vt - code can be selected to maximize the code s effectiveness for decoding 2 or more insertions . </S>",
    "<S> finally , we analyze the set of sequences used to derive our upper bounds .    </S>",
    "<S> insertions and deletions , insertion correcting codes , combinatorics , sequence reconstruction , varshamov - tenengolts codes </S>"
  ]
}